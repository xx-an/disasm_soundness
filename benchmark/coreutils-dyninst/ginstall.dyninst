
"endgrent@plt" :
28f0(6): jmp 0x21a2ea(%rip)
28f6(5): push $0x0

"getenv@plt" :
2900(6): jmp 0x21a2e2(%rip)
2906(5): push $0x1

"__snprintf_chk@plt" :
2910(6): jmp 0x21a2da(%rip)
2916(5): push $0x2

"raise@plt" :
2920(6): jmp 0x21a2d2(%rip)
2926(5): push $0x3

"utimensat@plt" :
2930(6): jmp 0x21a2ca(%rip)
2936(5): push $0x4

"abort@plt" :
2940(6): jmp 0x21a2c2(%rip)
2946(5): push $0x5

"__errno_location@plt" :
2950(6): jmp 0x21a2ba(%rip)
2956(5): push $0x6

"unlink@plt" :
2960(6): jmp 0x21a2b2(%rip)
2966(5): push $0x7

"strncmp@plt" :
2970(6): jmp 0x21a2aa(%rip)
2976(5): push $0x8

"_exit@plt" :
2980(6): jmp 0x21a2a2(%rip)
2986(5): push $0x9

"strcpy@plt" :
2990(6): jmp 0x21a29a(%rip)
2996(5): push $0xa

"__fpending@plt" :
29a0(6): jmp 0x21a292(%rip)
29a6(5): push $0xb

"__read_chk@plt" :
29b0(6): jmp 0x21a28a(%rip)
29b6(5): push $0xc

"mkdir@plt" :
29c0(6): jmp 0x21a282(%rip)
29c6(5): push $0xd

"unlinkat@plt" :
29d0(6): jmp 0x21a27a(%rip)
29d6(5): push $0xe

"qsort@plt" :
29e0(6): jmp 0x21a272(%rip)
29e6(5): push $0xf

"readlink@plt" :
29f0(6): jmp 0x21a26a(%rip)
29f6(5): push $0x10

"fcntl@plt" :
2a00(6): jmp 0x21a262(%rip)
2a06(5): push $0x11

"clock_gettime@plt" :
2a10(6): jmp 0x21a25a(%rip)
2a16(5): push $0x12

"write@plt" :
2a20(6): jmp 0x21a252(%rip)
2a26(5): push $0x13

"getpid@plt" :
2a30(6): jmp 0x21a24a(%rip)
2a36(5): push $0x14

"fread_unlocked@plt" :
2a40(6): jmp 0x21a242(%rip)
2a46(5): push $0x15

"textdomain@plt" :
2a50(6): jmp 0x21a23a(%rip)
2a56(5): push $0x16

"pathconf@plt" :
2a60(6): jmp 0x21a232(%rip)
2a66(5): push $0x17

"__open_2@plt" :
2a70(6): jmp 0x21a22a(%rip)
2a76(5): push $0x18

"fclose@plt" :
2a80(6): jmp 0x21a222(%rip)
2a86(5): push $0x19

"opendir@plt" :
2a90(6): jmp 0x21a21a(%rip)
2a96(5): push $0x1a

"bindtextdomain@plt" :
2aa0(6): jmp 0x21a212(%rip)
2aa6(5): push $0x1b

"stpcpy@plt" :
2ab0(6): jmp 0x21a20a(%rip)
2ab6(5): push $0x1c

"rmdir@plt" :
2ac0(6): jmp 0x21a202(%rip)
2ac6(5): push $0x1d

"dcgettext@plt" :
2ad0(6): jmp 0x21a1fa(%rip)
2ad6(5): push $0x1e

"__ctype_get_mb_cur_max@plt" :
2ae0(6): jmp 0x21a1f2(%rip)
2ae6(5): push $0x1f

"strlen@plt" :
2af0(6): jmp 0x21a1ea(%rip)
2af6(5): push $0x20

"__lxstat@plt" :
2b00(6): jmp 0x21a1e2(%rip)
2b06(5): push $0x21

"openat@plt" :
2b10(6): jmp 0x21a1da(%rip)
2b16(5): push $0x22

"chdir@plt" :
2b20(6): jmp 0x21a1d2(%rip)
2b26(5): push $0x23

"__stack_chk_fail@plt" :
2b30(6): jmp 0x21a1ca(%rip)
2b36(5): push $0x24

"getuid@plt" :
2b40(6): jmp 0x21a1c2(%rip)
2b46(5): push $0x25

"getopt_long@plt" :
2b50(6): jmp 0x21a1ba(%rip)
2b56(5): push $0x26

"mbrtowc@plt" :
2b60(6): jmp 0x21a1b2(%rip)
2b66(5): push $0x27

"strchr@plt" :
2b70(6): jmp 0x21a1aa(%rip)
2b76(5): push $0x28

"__fxstatat@plt" :
2b80(6): jmp 0x21a1a2(%rip)
2b86(5): push $0x29

"__overflow@plt" :
2b90(6): jmp 0x21a19a(%rip)
2b96(5): push $0x2a

"strrchr@plt" :
2ba0(6): jmp 0x21a192(%rip)
2ba6(5): push $0x2b

"ftruncate@plt" :
2bb0(6): jmp 0x21a18a(%rip)
2bb6(5): push $0x2c

"lseek@plt" :
2bc0(6): jmp 0x21a182(%rip)
2bc6(5): push $0x2d

"gettimeofday@plt" :
2bd0(6): jmp 0x21a17a(%rip)
2bd6(5): push $0x2e

"__assert_fail@plt" :
2be0(6): jmp 0x21a172(%rip)
2be6(5): push $0x2f

"memset@plt" :
2bf0(6): jmp 0x21a16a(%rip)
2bf6(5): push $0x30

"geteuid@plt" :
2c00(6): jmp 0x21a162(%rip)
2c06(5): push $0x31

"ioctl@plt" :
2c10(6): jmp 0x21a15a(%rip)
2c16(5): push $0x32

"canonicalize_file_name@plt" :
2c20(6): jmp 0x21a152(%rip)
2c26(5): push $0x33

"close@plt" :
2c30(6): jmp 0x21a14a(%rip)
2c36(5): push $0x34

"rewinddir@plt" :
2c40(6): jmp 0x21a142(%rip)
2c46(5): push $0x35

"strspn@plt" :
2c50(6): jmp 0x21a13a(%rip)
2c56(5): push $0x36

"closedir@plt" :
2c60(6): jmp 0x21a132(%rip)
2c66(5): push $0x37

"posix_fadvise@plt" :
2c70(6): jmp 0x21a12a(%rip)
2c76(5): push $0x38

"read@plt" :
2c80(6): jmp 0x21a122(%rip)
2c86(5): push $0x39

"memcmp@plt" :
2c90(6): jmp 0x21a11a(%rip)
2c96(5): push $0x3a

"fallocate@plt" :
2ca0(6): jmp 0x21a112(%rip)
2ca6(5): push $0x3b

"fputs_unlocked@plt" :
2cb0(6): jmp 0x21a10a(%rip)
2cb6(5): push $0x3c

"utimes@plt" :
2cc0(6): jmp 0x21a102(%rip)
2cc6(5): push $0x3d

"calloc@plt" :
2cd0(6): jmp 0x21a0fa(%rip)
2cd6(5): push $0x3e

"__getdelim@plt" :
2ce0(6): jmp 0x21a0f2(%rip)
2ce6(5): push $0x3f

"strcmp@plt" :
2cf0(6): jmp 0x21a0ea(%rip)
2cf6(5): push $0x40

"signal@plt" :
2d00(6): jmp 0x21a0e2(%rip)
2d06(5): push $0x41

"dirfd@plt" :
2d10(6): jmp 0x21a0da(%rip)
2d16(5): push $0x42

"getpwnam@plt" :
2d20(6): jmp 0x21a0d2(%rip)
2d26(5): push $0x43

"fpathconf@plt" :
2d30(6): jmp 0x21a0ca(%rip)
2d36(5): push $0x44

"rpmatch@plt" :
2d40(6): jmp 0x21a0c2(%rip)
2d46(5): push $0x45

"syscall@plt" :
2d50(6): jmp 0x21a0ba(%rip)
2d56(5): push $0x46

"mkfifo@plt" :
2d60(6): jmp 0x21a0b2(%rip)
2d66(5): push $0x47

"umask@plt" :
2d70(6): jmp 0x21a0aa(%rip)
2d76(5): push $0x48

"memcpy@plt" :
2d80(6): jmp 0x21a0a2(%rip)
2d86(5): push $0x49

"getgrnam@plt" :
2d90(6): jmp 0x21a09a(%rip)
2d96(5): push $0x4a

"__xmknod@plt" :
2da0(6): jmp 0x21a092(%rip)
2da6(5): push $0x4b

"fileno@plt" :
2db0(6): jmp 0x21a08a(%rip)
2db6(5): push $0x4c

"getgid@plt" :
2dc0(6): jmp 0x21a082(%rip)
2dc6(5): push $0x4d

"__xstat@plt" :
2dd0(6): jmp 0x21a07a(%rip)
2dd6(5): push $0x4e

"readdir@plt" :
2de0(6): jmp 0x21a072(%rip)
2de6(5): push $0x4f

"malloc@plt" :
2df0(6): jmp 0x21a06a(%rip)
2df6(5): push $0x50

"fflush@plt" :
2e00(6): jmp 0x21a062(%rip)
2e06(5): push $0x51

"nl_langinfo@plt" :
2e10(6): jmp 0x21a05a(%rip)
2e16(5): push $0x52

"__fxstat@plt" :
2e20(6): jmp 0x21a052(%rip)
2e26(5): push $0x53

"endpwent@plt" :
2e30(6): jmp 0x21a04a(%rip)
2e36(5): push $0x54

"lchown@plt" :
2e40(6): jmp 0x21a042(%rip)
2e46(5): push $0x55

"__freading@plt" :
2e50(6): jmp 0x21a03a(%rip)
2e56(5): push $0x56

"fchdir@plt" :
2e60(6): jmp 0x21a032(%rip)
2e66(5): push $0x57

"fwrite_unlocked@plt" :
2e70(6): jmp 0x21a02a(%rip)
2e76(5): push $0x58

"chown@plt" :
2e80(6): jmp 0x21a022(%rip)
2e86(5): push $0x59

"realloc@plt" :
2e90(6): jmp 0x21a01a(%rip)
2e96(5): push $0x5a

"stpncpy@plt" :
2ea0(6): jmp 0x21a012(%rip)
2ea6(5): push $0x5b

"fdopen@plt" :
2eb0(6): jmp 0x21a00a(%rip)
2eb6(5): push $0x5c

"linkat@plt" :
2ec0(6): jmp 0x21a002(%rip)
2ec6(5): push $0x5d

"setlocale@plt" :
2ed0(6): jmp 0x219ffa(%rip)
2ed6(5): push $0x5e

"__printf_chk@plt" :
2ee0(6): jmp 0x219ff2(%rip)
2ee6(5): push $0x5f

"fchmod@plt" :
2ef0(6): jmp 0x219fea(%rip)
2ef6(5): push $0x60

"setvbuf@plt" :
2f00(6): jmp 0x219fe2(%rip)
2f06(5): push $0x61

"chmod@plt" :
2f10(6): jmp 0x219fda(%rip)
2f16(5): push $0x62

"mempcpy@plt" :
2f20(6): jmp 0x219fd2(%rip)
2f26(5): push $0x63

"error@plt" :
2f30(6): jmp 0x219fca(%rip)
2f36(5): push $0x64

"waitpid@plt" :
2f40(6): jmp 0x219fc2(%rip)
2f46(5): push $0x65

"__explicit_bzero_chk@plt" :
2f50(6): jmp 0x219fba(%rip)
2f56(5): push $0x66

"open@plt" :
2f60(6): jmp 0x219fb2(%rip)
2f66(5): push $0x67

"fseeko@plt" :
2f70(6): jmp 0x219faa(%rip)
2f76(5): push $0x68

"fchown@plt" :
2f80(6): jmp 0x219fa2(%rip)
2f86(5): push $0x69

"fopen@plt" :
2f90(6): jmp 0x219f9a(%rip)
2f96(5): push $0x6a

"rename@plt" :
2fa0(6): jmp 0x219f92(%rip)
2fa6(5): push $0x6b

"fdopendir@plt" :
2fb0(6): jmp 0x219f8a(%rip)
2fb6(5): push $0x6c

"futimens@plt" :
2fc0(6): jmp 0x219f82(%rip)
2fc6(5): push $0x6d

"euidaccess@plt" :
2fd0(6): jmp 0x219f7a(%rip)
2fd6(5): push $0x6e

"strtoul@plt" :
2fe0(6): jmp 0x219f72(%rip)
2fe6(5): push $0x6f

"__cxa_atexit@plt" :
2ff0(6): jmp 0x219f6a(%rip)
2ff6(5): push $0x70

"renameat@plt" :
3000(6): jmp 0x219f62(%rip)
3006(5): push $0x71

"getpagesize@plt" :
3010(6): jmp 0x219f5a(%rip)
3016(5): push $0x72

"getppid@plt" :
3020(6): jmp 0x219f52(%rip)
3026(5): push $0x73

"exit@plt" :
3030(6): jmp 0x219f4a(%rip)
3036(5): push $0x74

"fwrite@plt" :
3040(6): jmp 0x219f42(%rip)
3046(5): push $0x75

"__fprintf_chk@plt" :
3050(6): jmp 0x219f3a(%rip)
3056(5): push $0x76

"mbsinit@plt" :
3060(6): jmp 0x219f32(%rip)
3066(5): push $0x77

"symlinkat@plt" :
3070(6): jmp 0x219f2a(%rip)
3076(5): push $0x78

"execlp@plt" :
3080(6): jmp 0x219f22(%rip)
3086(5): push $0x79

"iswprint@plt" :
3090(6): jmp 0x219f1a(%rip)
3096(5): push $0x7a

"fork@plt" :
30a0(6): jmp 0x219f12(%rip)
30a6(5): push $0x7b

"futimesat@plt" :
30b0(6): jmp 0x219f0a(%rip)
30b6(5): push $0x7c

"__ctype_b_loc@plt" :
30c0(6): jmp 0x219f02(%rip)
30c6(5): push $0x7d

".plt.got" :
30d0(6): jmp 0x219efa(%rip)
30d6(2): nop 
30d8(6): jmp 0x219f1a(%rip)
30de(2): nop 

"_init" :
28c0(4): sub $0x8,%rsp
28c4(7): mov 0x21a71d(%rip),%rax
28cb(3): test %rax,%rax
28ce(2): jz 0x4(%rip)
28d0(2): call %rax
28d2(4): add $0x8,%rsp
28d6(1): ret near (%rsp)

"fchmod_or_lchmod" :
30e0(2): test %edi,%edi
30e2(3): mov %rsi,%rax
30e5(2): mov %edx,%esi
30e7(2): js 0x7(%rip)
30e9(5): jmp 0xfffffe07(%rip)
30ee(3): mov %rax,%rdi
30f1(5): jmp 0xfffffe1f(%rip)

"restore_default_fscreatecon_or_die" :
30f6(1): push %rbx
30f7(5): call 0xfffff859(%rip)
30fc(7): lea 0x145ad(%rip),%rsi
3103(3): mov %rax,%rbx
3106(5): mov $0x5,%edx
310b(2): xor %edi,%edi
310d(6): mov $0x5f,(%rax)
3113(5): call 0xfffff9bd(%rip)
3118(2): mov (%rbx),%esi
311a(3): mov %rax,%rdx
311d(5): mov $0x1,%edi
3122(2): xor %eax,%eax
3124(5): call 0xfffffe0c(%rip)
3129(7): nop 0x0(%rax)
3130(2): push %r15
3132(2): push %r14
3134(3): xor %r15d,%r15d
3137(2): push %r13
3139(2): push %r12
313b(7): lea 0x21957e(%rip),%r12
3142(1): push %rbp
3143(1): push %rbx
3144(2): mov %edi,%ebx
3146(3): mov %rsi,%rbp
3149(3): xor %r14d,%r14d
314c(3): xor %r13d,%r13d
314f(7): sub $0x138,%rsp
3156(3): mov (%rsi),%rdi
3159(a): mov $0x0,0x21bffd(%rip)
3163(9): mov $0x28,%rax
316c(8): mov %rax,0x128(%rsp)
3174(2): xor %eax,%eax
3176(5): call 0xa75a(%rip)
317b(7): lea 0x14e47(%rip),%rsi
3182(5): mov $0x6,%edi
3187(5): call 0xfffffd49(%rip)
318c(7): lea 0x133a0(%rip),%rsi
3193(7): lea 0x13370(%rip),%rdi
319a(5): call 0xfffff906(%rip)
319f(7): lea 0x13364(%rip),%rdi
31a6(5): call 0xfffff8aa(%rip)
31ab(7): lea 0x7f2e(%rip),%rdi
31b2(5): call 0x131de(%rip)
31b7(5): lea 0x40(%rsp),%rax
31bc(3): mov %rax,%rdi
31bf(5): mov %rax,0x8(%rsp)
31c4(5): call 0x27ac(%rip)
31c9(2): xor %edi,%edi
31cb(5): mov $0x1,0x54(%rsp)
31d0(8): mov $0x0,0x78(%rsp)
31d8(8): mov $0x4,0x44(%rsp)
31e0(5): mov $0x1,0x55(%rsp)
31e5(5): mov $0x0,0x56(%rsp)
31ea(5): mov $0x0,0x57(%rsp)
31ef(8): mov $0x4,0x48(%rsp)
31f7(5): mov $0x0,0x58(%rsp)
31fc(5): mov $0x1,0x59(%rsp)
3201(5): mov $0x0,0x5c(%rsp)
3206(5): mov $0x0,0x5d(%rsp)
320b(5): mov $0x0,0x62(%rsp)
3210(5): mov $0x0,0x5e(%rsp)
3215(5): mov $0x0,0x5f(%rsp)
321a(5): mov $0x0,0x60(%rsp)
321f(5): mov $0x0,0x69(%rsp)
3224(5): mov $0x1,0x63(%rsp)
3229(5): mov $0x0,0x64(%rsp)
322e(5): mov $0x0,0x68(%rsp)
3233(5): mov $0x0,0x6a(%rsp)
3238(8): mov $0x2,0x4c(%rsp)
3240(5): mov $0x0,0x6c(%rsp)
3245(8): mov $0x0,0x40(%rsp)
324d(5): mov $0x1,0x6b(%rsp)
3252(8): mov $0x180,0x50(%rsp)
325a(5): mov $0x0,0x6f(%rsp)
325f(5): mov $0x0,0x70(%rsp)
3264(5): mov $0x0,0x6d(%rsp)
3269(5): mov $0x0,0x66(%rsp)
326e(5): mov $0x0,0x65(%rsp)
3273(5): mov $0x0,0x61(%rsp)
3278(5): mov $0x0,0x67(%rsp)
327d(5): mov $0x0,0x6e(%rsp)
3282(c): mov $0x0,0x80(%rsp)
328e(c): mov $0x0,0x88(%rsp)
329a(b): mov $0x0,0x21beb3(%rip)
32a5(b): mov $0x0,0x21be98(%rip)
32b0(7): mov $0x0,0x21be8a(%rip)
32b7(7): mov $0x0,0x21be82(%rip)
32be(5): call 0xfffffab2(%rip)
32c3(9): mov $0x0,0x28(%rsp)
32cc(5): mov $0x0,0x27(%rsp)
32d1(5): mov $0x0,0x26(%rsp)
32d6(5): mov $0x0,0x25(%rsp)
32db(9): mov $0x0,0x10(%rsp)
32e4(9): mov $0x0,0x18(%rsp)
32ed(3): nop (%rax)
32f0(7): lea 0x13264(%rip),%rdx
32f7(3): xor %r8d,%r8d
32fa(3): mov %r12,%rcx
32fd(3): mov %rbp,%rsi
3300(2): mov %ebx,%edi
3302(5): call 0xfffff84e(%rip)
3307(3): cmp $0xff,%eax
330a(6): jz 0x28a(%rip)
3310(3): cmp $0x64,%eax
3313(6): jz 0xe2(%rip)
3319(2): jle 0x37(%rip)
331b(3): cmp $0x73,%eax
331e(6): jz 0x1af(%rip)
3324(2): jnle 0x6c(%rip)
3326(3): cmp $0x6d,%eax
3329(6): jz 0x193(%rip)
332f(6): jle 0x171(%rip)
3335(3): cmp $0x6f,%eax
3338(6): jz 0xc9(%rip)
333e(3): cmp $0x70,%eax
3341(2): jnz 0x3b(%rip)
3343(5): mov $0x1,0x5f(%rsp)
3348(2): jmp 0xffffffa8(%rip)
334a(6): nop 0x0(%rax,%rax,1)
3350(3): cmp $0x53,%eax
3353(6): jz 0x1ab(%rip)
3359(2): jle 0x77(%rip)
335b(3): cmp $0x5a,%eax
335e(6): jz 0xc9(%rip)
3364(6): jle 0xb0(%rip)
336a(3): cmp $0x62,%eax
336d(6): jz 0x178(%rip)
3373(3): cmp $0x63,%eax
3376(6): jz 0xffffff7a(%rip)
337c(5): mov $0x1,%edi
3381(5): call 0x159f(%rip)
3386(a): nop 0x0(%rax,%rax,1)
3390(3): cmp $0x76,%eax
3393(6): jz 0x1ba(%rip)
3399(6): jle 0x196(%rip)
339f(5): cmp $0x80,%eax
33a4(6): jz 0x171(%rip)
33aa(5): cmp $0x81,%eax
33af(2): jnz 0xffffffcd(%rip)
33b1(7): mov 0x219d48(%rip),%rdi
33b8(5): call 0xee88(%rip)
33bd(5): mov $0x1,0x27(%rsp)
33c2(7): mov %rax,0x219c5f(%rip)
33c9(5): jmp 0xffffff27(%rip)
33ce(2): nop 
33d0(5): cmp $0xffffff7e,%eax
33d5(6): jz 0x800(%rip)
33db(6): jle 0x86(%rip)
33e1(3): cmp $0x43,%eax
33e4(2): jz 0x71(%rip)
33e6(3): cmp $0x44,%eax
33e9(2): jnz 0xffffff93(%rip)
33eb(5): mov $0x1,0x25(%rsp)
33f0(5): jmp 0xffffff00(%rip)
33f5(7): mov $0x1,0x21bd44(%rip)
33fc(5): jmp 0xfffffef4(%rip)
3401(7): mov 0x219cf8(%rip),%rax
3408(7): mov %rax,0x21bd49(%rip)
340f(5): jmp 0xfffffee1(%rip)
3414(3): cmp $0x54,%eax
3417(6): jnz 0xffffff65(%rip)
341d(5): mov $0x1,0x26(%rsp)
3422(5): jmp 0xfffffece(%rip)
3427(7): cmp $0x0,0x21bd32(%rip)
342e(7): mov 0x219ccb(%rip),%rax
3435(6): jz 0x122(%rip)
343b(3): test %rax,%rax
343e(7): mov $0x0,0x219bdb(%rip)
3445(6): jz 0x605(%rip)
344b(5): mov %rax,0x28(%rsp)
3450(5): jmp 0xfffffea0(%rip)
3455(7): mov $0x1,0x21bce6(%rip)
345c(5): jmp 0xfffffe94(%rip)
3461(5): cmp $0xffffff7d,%eax
3466(6): jnz 0xffffff16(%rip)
346c(7): mov 0x219c75(%rip),%rdi
3473(7): mov 0x219bc6(%rip),%rcx
347a(7): lea 0x130ca(%rip),%r8
3481(7): lea 0x1307e(%rip),%rdx
3488(7): lea 0x12ff9(%rip),%rsi
348f(3): xor %r9d,%r9d
3492(2): xor %eax,%eax
3494(5): call 0xe9dc(%rip)
3499(2): xor %edi,%edi
349b(5): call 0xfffffb95(%rip)
34a0(3): cmp $0x67,%eax
34a3(6): jnz 0xfffffed9(%rip)
34a9(7): mov 0x219c50(%rip),%rax
34b0(7): mov %rax,0x21bc91(%rip)
34b7(5): jmp 0xfffffe39(%rip)
34bc(7): mov 0x219c3d(%rip),%rax
34c3(5): mov %rax,0x18(%rsp)
34c8(5): jmp 0xfffffe28(%rip)
34cd(2): xor %esi,%esi
34cf(5): mov $0x11,%edi
34d4(7): mov $0x1,0x21bc66(%rip)
34db(5): call 0xfffff825(%rip)
34e0(5): jmp 0xfffffe10(%rip)
34e5(7): mov 0x219c14(%rip),%rax
34ec(6): mov $0x1,%r13d
34f2(3): test %rax,%rax
34f5(4): cmovne %rax,%r14
34f9(5): jmp 0xfffffdf7(%rip)
34fe(7): mov 0x219bfb(%rip),%rax
3505(6): mov $0x1,%r13d
350b(5): mov %rax,0x10(%rsp)
3510(5): jmp 0xfffffde0(%rip)
3515(7): cmp $0x0,0x21bc44(%rip)
351c(2): jz 0x52(%rip)
351e(5): mov $0x1,0x65(%rsp)
3523(7): mov $0x0,0x219af6(%rip)
352a(5): jmp 0xfffffdc6(%rip)
352f(3): cmp $0x74,%eax
3532(6): jnz 0xfffffe4a(%rip)
3538(3): test %r15,%r15
353b(6): jnz 0x750(%rip)
3541(7): mov 0x219bb8(%rip),%r15
3548(5): jmp 0xfffffda8(%rip)
354d(5): mov $0x1,0x6e(%rsp)
3552(5): jmp 0xfffffd9e(%rip)
3557(3): test %rax,%rax
355a(6): jz 0xfffffd96(%rip)
3560(5): mov $0x5,%edx
3565(7): lea 0x13e6c(%rip),%rsi
356c(2): jmp 0xe(%rip)
356e(7): lea 0x13e13(%rip),%rsi
3575(5): mov $0x5,%edx
357a(2): xor %edi,%edi
357c(5): call 0xfffff554(%rip)
3581(2): xor %esi,%esi
3583(3): mov %rax,%rdx
3586(2): xor %edi,%edi
3588(2): xor %eax,%eax
358a(5): call 0xfffff9a6(%rip)
358f(5): jmp 0xfffffd61(%rip)
3594(7): cmp $0x0,0x21bba5(%rip)
359b(6): jnz 0x28b(%rip)
35a1(3): test %r15,%r15
35a4(2): jz 0x41(%rip)
35a6(8): lea 0x90(%rsp),%rdx
35ae(3): mov %r15,%rsi
35b1(5): mov $0x1,%edi
35b6(5): call 0xfffff81a(%rip)
35bb(5): cmp $0x0,0x25(%rsp)
35c0(2): jnz 0xa(%rip)
35c2(2): test %eax,%eax
35c4(6): jnz 0x688(%rip)
35ca(2): test %eax,%eax
35cc(2): jnz 0x19(%rip)
35ce(7): mov 0xa8(%rsp),%eax
35d5(5): and $0xf000,%eax
35da(5): cmp $0x4000,%eax
35df(6): jnz 0x75f(%rip)
35e5(2): xor %eax,%eax
35e7(3): test %r13b,%r13b
35ea(6): jnz 0x43d(%rip)
35f0(5): mov 0x10(%rsp),%rdi
35f5(4): mov %eax,0x40(%rsp)
35f9(5): call 0x7317(%rip)
35fe(5): cmp $0x0,0x65(%rsp)
3603(6): jz 0x2b7(%rip)
3609(5): cmp $0x0,0x61(%rsp)
360e(6): jnz 0x70c(%rip)
3614(6): cmp $0x0,0x28(%rsp)
361a(6): jnz 0x700(%rip)
3620(7): movsxd 0x219ad1(%rip),%rax
3627(2): sub %eax,%ebx
3629(5): lea 0x0(%rbp,%rax,8),%rax
362e(5): mov %rax,0x10(%rsp)
3633(7): movzx 0x21bb06(%rip),%eax
363a(3): xor $0x1,%eax
363d(3): test %r15,%r15
3640(3): setz %dl
3643(2): and %edx,%eax
3645(3): movzx %al,%edx
3648(2): cmp %ebx,%edx
364a(6): jnl 0x689(%rip)
3650(5): cmp $0x0,0x26(%rsp)
3655(6): jz 0x2b3(%rip)
365b(3): test %r15,%r15
365e(6): jnz 0x651(%rip)
3664(3): cmp $0x2,%ebx
3667(6): jnle 0x776(%rip)
366d(5): mov 0x18(%rsp),%rax
3672(3): test %rax,%rax
3675(2): jz 0x53(%rip)
3677(3): mov %rax,%rdi
367a(5): call 0x9c26(%rip)
367f(3): test %rax,%rax
3682(3): mov %rax,%rbp
3685(6): jz 0x724(%rip)
368b(3): xor %r8d,%r8d
368e(3): mov %rax,%rcx
3691(2): xor %edx,%edx
3693(2): xor %esi,%esi
3695(2): xor %edi,%edi
3697(5): call 0xa049(%rip)
369c(7): lea 0x219971(%rip),%r8
36a3(2): xor %edi,%edi
36a5(3): mov %rbp,%rcx
36a8(2): xor %edx,%edx
36aa(5): mov $0x1,%esi
36af(6): mov %eax,0x219967(%rip)
36b5(5): call 0xa02b(%rip)
36ba(3): mov %rbp,%rdi
36bd(6): mov %eax,0x219955(%rip)
36c3(5): call 0xfffffa0d(%rip)
36c8(5): cmp $0x0,0x27(%rsp)
36cd(2): jz 0xf(%rip)
36cf(7): cmp $0x0,0x21ba6b(%rip)
36d6(6): jz 0x37e(%rip)
36dc(7): cmp $0x0,0x21ba5f(%rip)
36e3(2): jz 0x36(%rip)
36e5(5): cmp $0x0,0x5f(%rsp)
36ea(6): jnz 0x6b1(%rip)
36f0(7): cmp $0x0,0x21ba4a(%rip)
36f7(5): mov $0x5,%edx
36fc(7): lea 0x13f0d(%rip),%rsi
3703(6): jnz 0x67e(%rip)
3709(a): test $0xffff0e00,0x219909(%rip)
3713(6): jnz 0x367(%rip)
3719(7): mov 0x21ba38(%rip),%rdi
3720(3): test %rdi,%rdi
3723(6): jz 0x2d5(%rip)
3729(5): call 0xfffff5f7(%rip)
372e(3): test %rax,%rax
3731(6): jz 0x410(%rip)
3737(3): mov 0x10(%rax),%eax
373a(6): mov %eax,0x21ba10(%rip)
3740(5): call 0xfffff6f0(%rip)
3745(7): mov 0x21b9fc(%rip),%rdi
374c(3): test %rdi,%rdi
374f(6): jz 0x29a(%rip)
3755(5): call 0xfffff63b(%rip)
375a(3): test %rax,%rax
375d(6): jz 0x37f(%rip)
3763(3): mov 0x10(%rax),%eax
3766(6): mov %eax,0x21b9d8(%rip)
376c(5): call 0xfffff184(%rip)
3771(7): cmp $0x0,0x21b9c8(%rip)
3778(6): jnz 0x28f(%rip)
377e(5): call 0x68c2(%rip)
3783(3): test %r15,%r15
3786(6): jz 0xda(%rip)
378c(5): mov 0x8(%rsp),%rdi
3791(2): xor %ebp,%ebp
3793(3): xor %r13d,%r13d
3796(5): call 0x217a(%rip)
379b(5): mov %r15,0x18(%rsp)
37a0(2): jmp 0x1c(%rip)
37a2(3): mov %r15,%rdi
37a5(6): mov $0x1,%r13d
37ab(5): call 0xfffff925(%rip)
37b0(4): add $0x1,%rbp
37b4(2): cmp %ebp,%ebx
37b6(6): jle 0xd8(%rip)
37bc(5): mov 0x10(%rsp),%rax
37c1(2): test %ebp,%ebp
37c3(4): setz %r12b
37c7(5): and 0x25(%rsp),%r12b
37cc(4): mov 0x0(%rax,%rbp,8),%r14
37d0(3): mov %r14,%rdi
37d3(5): call 0x7bcd(%rip)
37d8(5): mov 0x18(%rsp),%rdi
37dd(2): xor %edx,%edx
37df(3): mov %rax,%rsi
37e2(5): call 0x7fae(%rip)
37e7(3): test %r12b,%r12b
37ea(3): mov %rax,%r15
37ed(2): jz 0x1b(%rip)
37ef(5): mov 0x8(%rsp),%rdx
37f4(5): mov $0x1,%ecx
37f9(3): mov %rax,%rsi
37fc(3): mov %r14,%rdi
37ff(5): call 0x741(%rip)
3804(2): test %al,%al
3806(2): jz 0xffffff9c(%rip)
3808(5): mov 0x8(%rsp),%rdx
380d(3): mov %r15,%rsi
3810(3): mov %r14,%rdi
3813(5): call 0xa4d(%rip)
3818(2): test %al,%al
381a(2): jz 0xffffff88(%rip)
381c(3): mov %r15,%rdi
381f(5): call 0xfffff8b1(%rip)
3824(2): jmp 0xffffff8c(%rip)
3826(7): cmp $0x0,0x21b914(%rip)
382d(6): jnz 0x5dc(%rip)
3833(3): test %r15,%r15
3836(6): jz 0xfffffdaf(%rip)
383c(7): lea 0x13c1d(%rip),%rsi
3843(5): mov $0x5,%edx
3848(2): xor %edi,%edi
384a(5): call 0xfffff286(%rip)
384f(2): xor %esi,%esi
3851(3): mov %rax,%rdx
3854(5): mov $0x1,%edi
3859(2): xor %eax,%eax
385b(5): call 0xfffff6d5(%rip)
3860(5): cmp $0x0,0x25(%rsp)
3865(5): mov 0x10(%rsp),%rax
386a(4): mov 0x8(%rax),%rbp
386e(3): mov (%rax),%rbx
3871(6): jnz 0x22f(%rip)
3877(5): mov 0x8(%rsp),%rdx
387c(3): mov %rbp,%rsi
387f(3): mov %rbx,%rdi
3882(5): call 0x9de(%rip)
3887(3): xor $0x1,%eax
388a(4): movzx %al,%r13d
388e(8): mov 0x128(%rsp),%rcx
3896(9): xor $0x28,%rcx
389f(3): mov %r13d,%eax
38a2(6): jnz 0x562(%rip)
38a8(7): add $0x138,%rsp
38af(1): pop %rbx
38b0(1): pop %rbp
38b1(2): pop %r12
38b3(2): pop %r13
38b5(2): pop %r14
38b7(2): pop %r15
38b9(1): ret near (%rsp)
38ba(6): cmp $0x0,0x28(%rsp)
38c0(6): jz 0xfffffd60(%rip)
38c6(5): call 0xfffff08a(%rip)
38cb(5): mov 0x28(%rsp),%rdi
38d0(6): mov $0x5f,(%rax)
38d6(3): mov %rax,%rbx
38d9(5): call 0xbde7(%rip)
38de(7): lea 0x13beb(%rip),%rsi
38e5(5): mov $0x5,%edx
38ea(2): xor %edi,%edi
38ec(3): mov %rax,%rbp
38ef(5): call 0xfffff1e1(%rip)
38f4(2): mov (%rbx),%esi
38f6(3): mov %rax,%rdx
38f9(3): mov %rbp,%rcx
38fc(5): mov $0x1,%edi
3901(2): xor %eax,%eax
3903(5): call 0xfffff62d(%rip)
3908(2): test %al,%al
390a(6): jz 0xfffffd63(%rip)
3910(3): xor %r15d,%r15d
3913(3): cmp $0x1,%ebx
3916(6): jz 0xfffffd57(%rip)
391c(5): mov 0x10(%rsp),%rcx
3921(3): movsxd %ebx,%rax
3924(6): mov $0x1,%r12d
392a(5): lea 0xfffffff8(%rcx,%rax,8),%r13
392f(4): mov 0x0(%r13),%rbp
3933(3): mov %rbp,%rdi
3936(5): call 0x7a6a(%rip)
393b(3): mov %rax,%rdi
393e(3): mov %rax,%rdx
3941(5): movzx 0x26(%rsp),%eax
3946(4): or $0xffffffff,%rcx
394a(2): REPNZ scasb rdi(%es,10),%al
394c(3): mov %rcx,%rax
394f(3): not %rax
3952(4): sub $0x1,%rax
3956(2): jz 0xe(%rip)
3958(3): xor %r12d,%r12d
395b(5): cmp $0x2f,0xffffffff(%rdx,%rax,1)
3960(4): setz %r12b
3964(8): lea 0x90(%rsp),%rdx
396c(3): mov %rbp,%rsi
396f(5): mov $0x1,%edi
3974(5): call 0xfffff45c(%rip)
3979(2): test %eax,%eax
397b(6): jz 0x22b(%rip)
3981(5): call 0xffffefcf(%rip)
3986(3): mov (%rax),%r14d
3989(3): test %r14d,%r14d
398c(6): jz 0x21a(%rip)
3992(4): cmp $0x2,%r14d
3996(6): jnz 0x27e(%rip)
399c(3): test %r12d,%r12d
399f(6): jnz 0x23d(%rip)
39a5(3): xor %r15d,%r15d
39a8(3): cmp $0x2,%ebx
39ab(6): jz 0xfffffcc2(%rip)
39b1(4): mov 0x0(%r13),%rsi
39b5(5): mov $0x4,%edi
39ba(5): call 0xba36(%rip)
39bf(7): lea 0x12bbe(%rip),%rsi
39c6(3): mov %rax,%rbx
39c9(5): mov $0x5,%edx
39ce(2): xor %edi,%edi
39d0(5): call 0xfffff100(%rip)
39d5(3): mov %rbx,%rcx
39d8(3): mov %rax,%rdx
39db(2): xor %esi,%esi
39dd(5): mov $0x1,%edi
39e2(2): xor %eax,%eax
39e4(5): call 0xfffff54c(%rip)
39e9(a): mov $0xffffffff,0x21b751(%rip)
39f3(5): jmp 0xfffffd7e(%rip)
39f8(a): mov $0xffffffff,0x21b74e(%rip)
3a02(5): jmp 0xfffffd43(%rip)
3a07(5): mov 0x8(%rsp),%rcx
3a0c(5): mov 0x10(%rsp),%rsi
3a11(7): lea 0x708(%rip),%rdx
3a18(2): mov %ebx,%edi
3a1a(5): call 0xcab6(%rip)
3a1f(3): mov %eax,%r13d
3a22(5): jmp 0xfffffe6c(%rip)
3a27(7): lea 0x12b73(%rip),%rsi
3a2e(2): xor %edi,%edi
3a30(5): mov $0x5,%edx
3a35(5): call 0xfffff09b(%rip)
3a3a(3): mov %r14,%rsi
3a3d(3): mov %rax,%rdi
3a40(5): call 0x75d0(%rip)
3a45(5): jmp 0xfffffbab(%rip)
3a4a(5): mov $0x1,0x61(%rsp)
3a4f(5): jmp 0xfffff8a1(%rip)
3a54(7): lea 0x13b25(%rip),%rsi
3a5b(2): xor %edi,%edi
3a5d(5): mov $0x5,%edx
3a62(5): call 0xfffff06e(%rip)
3a67(2): xor %esi,%esi
3a69(3): mov %rax,%rdx
3a6c(2): xor %edi,%edi
3a6e(2): xor %eax,%eax
3a70(5): call 0xfffff4c0(%rip)
3a75(5): jmp 0xfffffc67(%rip)
3a7a(7): lea 0x13bcf(%rip),%rsi
3a81(2): xor %edi,%edi
3a83(5): mov $0x5,%edx
3a88(5): call 0xfffff048(%rip)
3a8d(2): xor %esi,%esi
3a8f(3): mov %rax,%rdx
3a92(2): xor %edi,%edi
3a94(2): xor %eax,%eax
3a96(5): call 0xfffff49a(%rip)
3a9b(5): jmp 0xfffffc7e(%rip)
3aa0(5): mov 0x8(%rsp),%rdx
3aa5(2): xor %ecx,%ecx
3aa7(3): mov %rbp,%rsi
3aaa(3): mov %rbx,%rdi
3aad(3): xor %r13d,%r13d
3ab0(5): call 0x490(%rip)
3ab5(2): test %al,%al
3ab7(2): jz 0x16(%rip)
3ab9(5): mov 0x8(%rsp),%rdx
3abe(3): mov %rbp,%rsi
3ac1(3): mov %rbx,%rdi
3ac4(5): call 0x79c(%rip)
3ac9(4): movzx %al,%r13d
3acd(4): and $0x1,%r13d
3ad1(3): mov %r13d,%eax
3ad4(3): xor $0x1,%eax
3ad7(5): jmp 0xfffffdb3(%rip)
3adc(7): mov 0x21b665(%rip),%rdi
3ae3(5): lea 0x38(%rsp),%rcx
3ae8(3): xor %r8d,%r8d
3aeb(2): xor %edx,%edx
3aed(2): xor %esi,%esi
3aef(5): call 0xe7b1(%rip)
3af4(2): test %eax,%eax
3af6(2): jnz 0x15(%rip)
3af8(5): mov 0x38(%rsp),%rax
3afd(5): mov $0xffffffff,%edx
3b02(3): cmp %rdx,%rax
3b05(6): jbe 0xfffffc61(%rip)
3b0b(7): mov 0x21b636(%rip),%rdi
3b12(5): call 0xbbae(%rip)
3b17(7): lea 0x12ad5(%rip),%rsi
3b1e(3): mov %rax,%rbx
3b21(5): mov $0x5,%edx
3b26(2): xor %edi,%edi
3b28(5): call 0xffffefa8(%rip)
3b2d(3): mov %rbx,%rcx
3b30(3): mov %rax,%rdx
3b33(2): xor %esi,%esi
3b35(5): mov $0x1,%edi
3b3a(2): xor %eax,%eax
3b3c(5): call 0xfffff3f4(%rip)
3b41(7): mov 0x21b610(%rip),%rdi
3b48(5): lea 0x38(%rsp),%rcx
3b4d(3): xor %r8d,%r8d
3b50(2): xor %edx,%edx
3b52(2): xor %esi,%esi
3b54(5): call 0xe74c(%rip)
3b59(2): test %eax,%eax
3b5b(2): jnz 0x15(%rip)
3b5d(5): mov 0x38(%rsp),%rax
3b62(5): mov $0xffffffff,%edx
3b67(3): cmp %rdx,%rax
3b6a(6): jbe 0xfffffbd0(%rip)
3b70(7): mov 0x21b5e1(%rip),%rdi
3b77(5): call 0xbb49(%rip)
3b7c(7): lea 0x12a60(%rip),%rsi
3b83(3): mov %rax,%rbx
3b86(5): mov $0x5,%edx
3b8b(2): xor %edi,%edi
3b8d(5): call 0xffffef43(%rip)
3b92(3): mov %rbx,%rcx
3b95(3): mov %rax,%rdx
3b98(2): xor %esi,%esi
3b9a(5): mov $0x1,%edi
3b9f(2): xor %eax,%eax
3ba1(5): call 0xfffff38f(%rip)
3ba6(7): mov 0xa8(%rsp),%eax
3bad(5): and $0xf000,%eax
3bb2(5): cmp $0x4000,%eax
3bb7(2): jz 0xa(%rip)
3bb9(3): xor %r14d,%r14d
3bbc(5): jmp 0xfffffde0(%rip)
3bc1(5): mov 0x10(%rsp),%rcx
3bc6(3): sub $0x1,%ebx
3bc9(3): movsxd %ebx,%rax
3bcc(4): mov 0x0(%rcx,%rax,8),%r15
3bd0(5): jmp 0xfffffa9d(%rip)
3bd5(2): xor %edi,%edi
3bd7(5): call 0xd49(%rip)
3bdc(3): mov %rbp,%rsi
3bdf(5): mov $0x4,%edi
3be4(5): call 0xb80c(%rip)
3be9(7): lea 0x12994(%rip),%rsi
3bf0(3): mov %rax,%rbx
3bf3(5): mov $0x5,%edx
3bf8(2): xor %edi,%edi
3bfa(5): call 0xffffeed6(%rip)
3bff(3): mov %rbx,%rcx
3c02(3): mov %rax,%rdx
3c05(3): mov %r14d,%esi
3c08(5): mov $0x1,%edi
3c0d(2): xor %eax,%eax
3c0f(5): call 0xfffff321(%rip)
3c14(3): mov %rbp,%rsi
3c17(5): mov $0x4,%edi
3c1c(5): call 0xb7d4(%rip)
3c21(7): lea 0x12948(%rip),%rsi
3c28(3): mov %rax,%rbx
3c2b(5): mov $0x5,%edx
3c30(2): xor %edi,%edi
3c32(5): call 0xffffee9e(%rip)
3c37(3): mov %rbx,%rcx
3c3a(3): mov %rax,%rdx
3c3d(3): mov %r14d,%esi
3c40(5): mov $0x1,%edi
3c45(2): xor %eax,%eax
3c47(5): call 0xfffff2e9(%rip)
3c4c(3): mov %r15,%rsi
3c4f(5): mov $0x4,%edi
3c54(5): call 0xb79c(%rip)
3c59(7): lea 0x12910(%rip),%rsi
3c60(5): mov $0x5,%edx
3c65(2): xor %edi,%edi
3c67(3): mov %rax,%rbp
3c6a(5): call 0xffffee66(%rip)
3c6f(3): mov %rax,%rbx
3c72(5): call 0xffffecde(%rip)
3c77(2): mov (%rax),%esi
3c79(3): mov %rbp,%rcx
3c7c(3): mov %rbx,%rdx
3c7f(5): mov $0x1,%edi
3c84(2): xor %eax,%eax
3c86(5): call 0xfffff2aa(%rip)
3c8b(7): lea 0x136ce(%rip),%rsi
3c92(5): mov $0x5,%edx
3c97(2): xor %edi,%edi
3c99(5): call 0xffffee37(%rip)
3c9e(2): xor %esi,%esi
3ca0(3): mov %rax,%rdx
3ca3(5): mov $0x1,%edi
3ca8(2): xor %eax,%eax
3caa(5): call 0xfffff286(%rip)
3caf(7): lea 0x13882(%rip),%rsi
3cb6(5): mov $0x5,%edx
3cbb(2): xor %edi,%edi
3cbd(5): call 0xffffee13(%rip)
3cc2(2): xor %esi,%esi
3cc4(3): mov %rax,%rdx
3cc7(5): mov $0x1,%edi
3ccc(2): xor %eax,%eax
3cce(5): call 0xfffff262(%rip)
3cd3(3): sub $0x1,%ebx
3cd6(6): jnz 0x9f(%rip)
3cdc(5): mov 0x10(%rsp),%rax
3ce1(5): mov $0x4,%edi
3ce6(3): mov (%rax),%rsi
3ce9(5): call 0xb707(%rip)
3cee(7): lea 0x13813(%rip),%rsi
3cf5(3): mov %rax,%rbx
3cf8(5): mov $0x5,%edx
3cfd(2): xor %edi,%edi
3cff(5): call 0xffffedd1(%rip)
3d04(3): mov %rbx,%rcx
3d07(3): mov %rax,%rdx
3d0a(2): xor %esi,%esi
3d0c(2): xor %edi,%edi
3d0e(2): xor %eax,%eax
3d10(5): call 0xfffff220(%rip)
3d15(5): jmp 0xfffff667(%rip)
3d1a(7): lea 0x1377f(%rip),%rsi
3d21(5): mov $0x5,%edx
3d26(2): xor %edi,%edi
3d28(5): call 0xffffeda8(%rip)
3d2d(2): xor %esi,%esi
3d2f(3): mov %rax,%rdx
3d32(5): mov $0x1,%edi
3d37(2): xor %eax,%eax
3d39(5): call 0xfffff1f7(%rip)
3d3e(3): mov %r15,%rsi
3d41(5): mov $0x4,%edi
3d46(5): call 0xb6aa(%rip)
3d4b(7): lea 0x12832(%rip),%rsi
3d52(3): mov %rax,%rbx
3d55(5): mov $0x5,%edx
3d5a(2): xor %edi,%edi
3d5c(5): call 0xffffed74(%rip)
3d61(3): mov %rbx,%rcx
3d64(3): mov %rax,%rdx
3d67(2): xor %esi,%esi
3d69(5): mov $0x1,%edi
3d6e(2): xor %eax,%eax
3d70(5): call 0xfffff1c0(%rip)
3d75(7): lea 0x12831(%rip),%rsi
3d7c(5): mov $0x5,%edx
3d81(2): xor %edi,%edi
3d83(5): call 0xffffed4d(%rip)
3d88(2): xor %esi,%esi
3d8a(3): mov %rax,%rdx
3d8d(2): xor %edi,%edi
3d8f(2): xor %eax,%eax
3d91(5): call 0xfffff19f(%rip)
3d96(5): jmp 0xfffff5e6(%rip)
3d9b(5): mov $0x5,%edx
3da0(7): lea 0x13821(%rip),%rsi
3da7(2): jmp 0xffffffda(%rip)
3da9(5): mov 0x18(%rsp),%rdi
3dae(5): call 0xb912(%rip)
3db3(7): lea 0x12819(%rip),%rsi
3dba(3): mov %rax,%rbx
3dbd(5): mov $0x5,%edx
3dc2(2): xor %edi,%edi
3dc4(5): call 0xffffed0c(%rip)
3dc9(3): mov %rbx,%rcx
3dcc(3): mov %rax,%rdx
3dcf(2): xor %esi,%esi
3dd1(5): mov $0x1,%edi
3dd6(2): xor %eax,%eax
3dd8(5): call 0xfffff158(%rip)
3ddd(5): mov 0x10(%rsp),%rax
3de2(5): mov $0x4,%edi
3de7(4): mov 0x10(%rax),%rsi
3deb(5): call 0xb605(%rip)
3df0(5): mov $0x5,%edx
3df5(3): mov %rax,%rbx
3df8(7): lea 0x127c3(%rip),%rsi
3dff(5): jmp 0xfffffefe(%rip)
3e04(5): call 0xffffed2c(%rip)
3e09(7): lea 0x13610(%rip),%rsi
3e10(5): mov $0x5,%edx
3e15(2): xor %edi,%edi
3e17(5): call 0xffffecb9(%rip)
3e1c(2): xor %esi,%esi
3e1e(3): mov %rax,%rdx
3e21(5): mov $0x1,%edi
3e26(2): xor %eax,%eax
3e28(5): call 0xfffff108(%rip)
3e2d(3): nop (%rax)
3e30(2): xor %ebp,%ebp
3e32(3): mov %rdx,%r9
3e35(1): pop %rsi
3e36(3): mov %rsp,%rdx
3e39(4): and $0xfffffff0,%rsp
3e3d(1): push %rax
3e3e(1): push %rsp
3e3f(7): lea 0x1253a(%rip),%r8
3e46(7): lea 0x124c3(%rip),%rcx
3e4d(7): lea 0xfffff2dc(%rip),%rdi
3e54(6): call 0x219186(%rip)
3e5a(1): hlt 

"main" :
3130(2): push %r15
3132(2): push %r14
3134(3): xor %r15d,%r15d
3137(2): push %r13
3139(2): push %r12
313b(7): lea 0x21957e(%rip),%r12
3142(1): push %rbp
3143(1): push %rbx
3144(2): mov %edi,%ebx
3146(3): mov %rsi,%rbp
3149(3): xor %r14d,%r14d
314c(3): xor %r13d,%r13d
314f(7): sub $0x138,%rsp
3156(3): mov (%rsi),%rdi
3159(a): mov $0x0,0x21bffd(%rip)
3163(9): mov $0x28,%rax
316c(8): mov %rax,0x128(%rsp)
3174(2): xor %eax,%eax
3176(5): call 0xa75a(%rip)
317b(7): lea 0x14e47(%rip),%rsi
3182(5): mov $0x6,%edi
3187(5): call 0xfffffd49(%rip)
318c(7): lea 0x133a0(%rip),%rsi
3193(7): lea 0x13370(%rip),%rdi
319a(5): call 0xfffff906(%rip)
319f(7): lea 0x13364(%rip),%rdi
31a6(5): call 0xfffff8aa(%rip)
31ab(7): lea 0x7f2e(%rip),%rdi
31b2(5): call 0x131de(%rip)
31b7(5): lea 0x40(%rsp),%rax
31bc(3): mov %rax,%rdi
31bf(5): mov %rax,0x8(%rsp)
31c4(5): call 0x27ac(%rip)
31c9(2): xor %edi,%edi
31cb(5): mov $0x1,0x54(%rsp)
31d0(8): mov $0x0,0x78(%rsp)
31d8(8): mov $0x4,0x44(%rsp)
31e0(5): mov $0x1,0x55(%rsp)
31e5(5): mov $0x0,0x56(%rsp)
31ea(5): mov $0x0,0x57(%rsp)
31ef(8): mov $0x4,0x48(%rsp)
31f7(5): mov $0x0,0x58(%rsp)
31fc(5): mov $0x1,0x59(%rsp)
3201(5): mov $0x0,0x5c(%rsp)
3206(5): mov $0x0,0x5d(%rsp)
320b(5): mov $0x0,0x62(%rsp)
3210(5): mov $0x0,0x5e(%rsp)
3215(5): mov $0x0,0x5f(%rsp)
321a(5): mov $0x0,0x60(%rsp)
321f(5): mov $0x0,0x69(%rsp)
3224(5): mov $0x1,0x63(%rsp)
3229(5): mov $0x0,0x64(%rsp)
322e(5): mov $0x0,0x68(%rsp)
3233(5): mov $0x0,0x6a(%rsp)
3238(8): mov $0x2,0x4c(%rsp)
3240(5): mov $0x0,0x6c(%rsp)
3245(8): mov $0x0,0x40(%rsp)
324d(5): mov $0x1,0x6b(%rsp)
3252(8): mov $0x180,0x50(%rsp)
325a(5): mov $0x0,0x6f(%rsp)
325f(5): mov $0x0,0x70(%rsp)
3264(5): mov $0x0,0x6d(%rsp)
3269(5): mov $0x0,0x66(%rsp)
326e(5): mov $0x0,0x65(%rsp)
3273(5): mov $0x0,0x61(%rsp)
3278(5): mov $0x0,0x67(%rsp)
327d(5): mov $0x0,0x6e(%rsp)
3282(c): mov $0x0,0x80(%rsp)
328e(c): mov $0x0,0x88(%rsp)
329a(b): mov $0x0,0x21beb3(%rip)
32a5(b): mov $0x0,0x21be98(%rip)
32b0(7): mov $0x0,0x21be8a(%rip)
32b7(7): mov $0x0,0x21be82(%rip)
32be(5): call 0xfffffab2(%rip)
32c3(9): mov $0x0,0x28(%rsp)
32cc(5): mov $0x0,0x27(%rsp)
32d1(5): mov $0x0,0x26(%rsp)
32d6(5): mov $0x0,0x25(%rsp)
32db(9): mov $0x0,0x10(%rsp)
32e4(9): mov $0x0,0x18(%rsp)
32ed(3): nop (%rax)
32f0(7): lea 0x13264(%rip),%rdx
32f7(3): xor %r8d,%r8d
32fa(3): mov %r12,%rcx
32fd(3): mov %rbp,%rsi
3300(2): mov %ebx,%edi
3302(5): call 0xfffff84e(%rip)
3307(3): cmp $0xff,%eax
330a(6): jz 0x28a(%rip)
3310(3): cmp $0x64,%eax
3313(6): jz 0xe2(%rip)
3319(2): jle 0x37(%rip)
331b(3): cmp $0x73,%eax
331e(6): jz 0x1af(%rip)
3324(2): jnle 0x6c(%rip)
3326(3): cmp $0x6d,%eax
3329(6): jz 0x193(%rip)
332f(6): jle 0x171(%rip)
3335(3): cmp $0x6f,%eax
3338(6): jz 0xc9(%rip)
333e(3): cmp $0x70,%eax
3341(2): jnz 0x3b(%rip)
3343(5): mov $0x1,0x5f(%rsp)
3348(2): jmp 0xffffffa8(%rip)
334a(6): nop 0x0(%rax,%rax,1)
3350(3): cmp $0x53,%eax
3353(6): jz 0x1ab(%rip)
3359(2): jle 0x77(%rip)
335b(3): cmp $0x5a,%eax
335e(6): jz 0xc9(%rip)
3364(6): jle 0xb0(%rip)
336a(3): cmp $0x62,%eax
336d(6): jz 0x178(%rip)
3373(3): cmp $0x63,%eax
3376(6): jz 0xffffff7a(%rip)
337c(5): mov $0x1,%edi
3381(5): call 0x159f(%rip)
3386(a): nop 0x0(%rax,%rax,1)
3390(3): cmp $0x76,%eax
3393(6): jz 0x1ba(%rip)
3399(6): jle 0x196(%rip)
339f(5): cmp $0x80,%eax
33a4(6): jz 0x171(%rip)
33aa(5): cmp $0x81,%eax
33af(2): jnz 0xffffffcd(%rip)
33b1(7): mov 0x219d48(%rip),%rdi
33b8(5): call 0xee88(%rip)
33bd(5): mov $0x1,0x27(%rsp)
33c2(7): mov %rax,0x219c5f(%rip)
33c9(5): jmp 0xffffff27(%rip)
33ce(2): nop 
33d0(5): cmp $0xffffff7e,%eax
33d5(6): jz 0x800(%rip)
33db(6): jle 0x86(%rip)
33e1(3): cmp $0x43,%eax
33e4(2): jz 0x71(%rip)
33e6(3): cmp $0x44,%eax
33e9(2): jnz 0xffffff93(%rip)
33eb(5): mov $0x1,0x25(%rsp)
33f0(5): jmp 0xffffff00(%rip)
33f5(7): mov $0x1,0x21bd44(%rip)
33fc(5): jmp 0xfffffef4(%rip)
3401(7): mov 0x219cf8(%rip),%rax
3408(7): mov %rax,0x21bd49(%rip)
340f(5): jmp 0xfffffee1(%rip)
3414(3): cmp $0x54,%eax
3417(6): jnz 0xffffff65(%rip)
341d(5): mov $0x1,0x26(%rsp)
3422(5): jmp 0xfffffece(%rip)
3427(7): cmp $0x0,0x21bd32(%rip)
342e(7): mov 0x219ccb(%rip),%rax
3435(6): jz 0x122(%rip)
343b(3): test %rax,%rax
343e(7): mov $0x0,0x219bdb(%rip)
3445(6): jz 0x605(%rip)
344b(5): mov %rax,0x28(%rsp)
3450(5): jmp 0xfffffea0(%rip)
3455(7): mov $0x1,0x21bce6(%rip)
345c(5): jmp 0xfffffe94(%rip)
3461(5): cmp $0xffffff7d,%eax
3466(6): jnz 0xffffff16(%rip)
346c(7): mov 0x219c75(%rip),%rdi
3473(7): mov 0x219bc6(%rip),%rcx
347a(7): lea 0x130ca(%rip),%r8
3481(7): lea 0x1307e(%rip),%rdx
3488(7): lea 0x12ff9(%rip),%rsi
348f(3): xor %r9d,%r9d
3492(2): xor %eax,%eax
3494(5): call 0xe9dc(%rip)
3499(2): xor %edi,%edi
349b(5): call 0xfffffb95(%rip)
34a0(3): cmp $0x67,%eax
34a3(6): jnz 0xfffffed9(%rip)
34a9(7): mov 0x219c50(%rip),%rax
34b0(7): mov %rax,0x21bc91(%rip)
34b7(5): jmp 0xfffffe39(%rip)
34bc(7): mov 0x219c3d(%rip),%rax
34c3(5): mov %rax,0x18(%rsp)
34c8(5): jmp 0xfffffe28(%rip)
34cd(2): xor %esi,%esi
34cf(5): mov $0x11,%edi
34d4(7): mov $0x1,0x21bc66(%rip)
34db(5): call 0xfffff825(%rip)
34e0(5): jmp 0xfffffe10(%rip)
34e5(7): mov 0x219c14(%rip),%rax
34ec(6): mov $0x1,%r13d
34f2(3): test %rax,%rax
34f5(4): cmovne %rax,%r14
34f9(5): jmp 0xfffffdf7(%rip)
34fe(7): mov 0x219bfb(%rip),%rax
3505(6): mov $0x1,%r13d
350b(5): mov %rax,0x10(%rsp)
3510(5): jmp 0xfffffde0(%rip)
3515(7): cmp $0x0,0x21bc44(%rip)
351c(2): jz 0x52(%rip)
351e(5): mov $0x1,0x65(%rsp)
3523(7): mov $0x0,0x219af6(%rip)
352a(5): jmp 0xfffffdc6(%rip)
352f(3): cmp $0x74,%eax
3532(6): jnz 0xfffffe4a(%rip)
3538(3): test %r15,%r15
353b(6): jnz 0x750(%rip)
3541(7): mov 0x219bb8(%rip),%r15
3548(5): jmp 0xfffffda8(%rip)
354d(5): mov $0x1,0x6e(%rsp)
3552(5): jmp 0xfffffd9e(%rip)
3557(3): test %rax,%rax
355a(6): jz 0xfffffd96(%rip)
3560(5): mov $0x5,%edx
3565(7): lea 0x13e6c(%rip),%rsi
356c(2): jmp 0xe(%rip)
356e(7): lea 0x13e13(%rip),%rsi
3575(5): mov $0x5,%edx
357a(2): xor %edi,%edi
357c(5): call 0xfffff554(%rip)
3581(2): xor %esi,%esi
3583(3): mov %rax,%rdx
3586(2): xor %edi,%edi
3588(2): xor %eax,%eax
358a(5): call 0xfffff9a6(%rip)
358f(5): jmp 0xfffffd61(%rip)
3594(7): cmp $0x0,0x21bba5(%rip)
359b(6): jnz 0x28b(%rip)
35a1(3): test %r15,%r15
35a4(2): jz 0x41(%rip)
35a6(8): lea 0x90(%rsp),%rdx
35ae(3): mov %r15,%rsi
35b1(5): mov $0x1,%edi
35b6(5): call 0xfffff81a(%rip)
35bb(5): cmp $0x0,0x25(%rsp)
35c0(2): jnz 0xa(%rip)
35c2(2): test %eax,%eax
35c4(6): jnz 0x688(%rip)
35ca(2): test %eax,%eax
35cc(2): jnz 0x19(%rip)
35ce(7): mov 0xa8(%rsp),%eax
35d5(5): and $0xf000,%eax
35da(5): cmp $0x4000,%eax
35df(6): jnz 0x75f(%rip)
35e5(2): xor %eax,%eax
35e7(3): test %r13b,%r13b
35ea(6): jnz 0x43d(%rip)
35f0(5): mov 0x10(%rsp),%rdi
35f5(4): mov %eax,0x40(%rsp)
35f9(5): call 0x7317(%rip)
35fe(5): cmp $0x0,0x65(%rsp)
3603(6): jz 0x2b7(%rip)
3609(5): cmp $0x0,0x61(%rsp)
360e(6): jnz 0x70c(%rip)
3614(6): cmp $0x0,0x28(%rsp)
361a(6): jnz 0x700(%rip)
3620(7): movsxd 0x219ad1(%rip),%rax
3627(2): sub %eax,%ebx
3629(5): lea 0x0(%rbp,%rax,8),%rax
362e(5): mov %rax,0x10(%rsp)
3633(7): movzx 0x21bb06(%rip),%eax
363a(3): xor $0x1,%eax
363d(3): test %r15,%r15
3640(3): setz %dl
3643(2): and %edx,%eax
3645(3): movzx %al,%edx
3648(2): cmp %ebx,%edx
364a(6): jnl 0x689(%rip)
3650(5): cmp $0x0,0x26(%rsp)
3655(6): jz 0x2b3(%rip)
365b(3): test %r15,%r15
365e(6): jnz 0x651(%rip)
3664(3): cmp $0x2,%ebx
3667(6): jnle 0x776(%rip)
366d(5): mov 0x18(%rsp),%rax
3672(3): test %rax,%rax
3675(2): jz 0x53(%rip)
3677(3): mov %rax,%rdi
367a(5): call 0x9c26(%rip)
367f(3): test %rax,%rax
3682(3): mov %rax,%rbp
3685(6): jz 0x724(%rip)
368b(3): xor %r8d,%r8d
368e(3): mov %rax,%rcx
3691(2): xor %edx,%edx
3693(2): xor %esi,%esi
3695(2): xor %edi,%edi
3697(5): call 0xa049(%rip)
369c(7): lea 0x219971(%rip),%r8
36a3(2): xor %edi,%edi
36a5(3): mov %rbp,%rcx
36a8(2): xor %edx,%edx
36aa(5): mov $0x1,%esi
36af(6): mov %eax,0x219967(%rip)
36b5(5): call 0xa02b(%rip)
36ba(3): mov %rbp,%rdi
36bd(6): mov %eax,0x219955(%rip)
36c3(5): call 0xfffffa0d(%rip)
36c8(5): cmp $0x0,0x27(%rsp)
36cd(2): jz 0xf(%rip)
36cf(7): cmp $0x0,0x21ba6b(%rip)
36d6(6): jz 0x37e(%rip)
36dc(7): cmp $0x0,0x21ba5f(%rip)
36e3(2): jz 0x36(%rip)
36e5(5): cmp $0x0,0x5f(%rsp)
36ea(6): jnz 0x6b1(%rip)
36f0(7): cmp $0x0,0x21ba4a(%rip)
36f7(5): mov $0x5,%edx
36fc(7): lea 0x13f0d(%rip),%rsi
3703(6): jnz 0x67e(%rip)
3709(a): test $0xffff0e00,0x219909(%rip)
3713(6): jnz 0x367(%rip)
3719(7): mov 0x21ba38(%rip),%rdi
3720(3): test %rdi,%rdi
3723(6): jz 0x2d5(%rip)
3729(5): call 0xfffff5f7(%rip)
372e(3): test %rax,%rax
3731(6): jz 0x410(%rip)
3737(3): mov 0x10(%rax),%eax
373a(6): mov %eax,0x21ba10(%rip)
3740(5): call 0xfffff6f0(%rip)
3745(7): mov 0x21b9fc(%rip),%rdi
374c(3): test %rdi,%rdi
374f(6): jz 0x29a(%rip)
3755(5): call 0xfffff63b(%rip)
375a(3): test %rax,%rax
375d(6): jz 0x37f(%rip)
3763(3): mov 0x10(%rax),%eax
3766(6): mov %eax,0x21b9d8(%rip)
376c(5): call 0xfffff184(%rip)
3771(7): cmp $0x0,0x21b9c8(%rip)
3778(6): jnz 0x28f(%rip)
377e(5): call 0x68c2(%rip)
3783(3): test %r15,%r15
3786(6): jz 0xda(%rip)
378c(5): mov 0x8(%rsp),%rdi
3791(2): xor %ebp,%ebp
3793(3): xor %r13d,%r13d
3796(5): call 0x217a(%rip)
379b(5): mov %r15,0x18(%rsp)
37a0(2): jmp 0x1c(%rip)
37a2(3): mov %r15,%rdi
37a5(6): mov $0x1,%r13d
37ab(5): call 0xfffff925(%rip)
37b0(4): add $0x1,%rbp
37b4(2): cmp %ebp,%ebx
37b6(6): jle 0xd8(%rip)
37bc(5): mov 0x10(%rsp),%rax
37c1(2): test %ebp,%ebp
37c3(4): setz %r12b
37c7(5): and 0x25(%rsp),%r12b
37cc(4): mov 0x0(%rax,%rbp,8),%r14
37d0(3): mov %r14,%rdi
37d3(5): call 0x7bcd(%rip)
37d8(5): mov 0x18(%rsp),%rdi
37dd(2): xor %edx,%edx
37df(3): mov %rax,%rsi
37e2(5): call 0x7fae(%rip)
37e7(3): test %r12b,%r12b
37ea(3): mov %rax,%r15
37ed(2): jz 0x1b(%rip)
37ef(5): mov 0x8(%rsp),%rdx
37f4(5): mov $0x1,%ecx
37f9(3): mov %rax,%rsi
37fc(3): mov %r14,%rdi
37ff(5): call 0x741(%rip)
3804(2): test %al,%al
3806(2): jz 0xffffff9c(%rip)
3808(5): mov 0x8(%rsp),%rdx
380d(3): mov %r15,%rsi
3810(3): mov %r14,%rdi
3813(5): call 0xa4d(%rip)
3818(2): test %al,%al
381a(2): jz 0xffffff88(%rip)
381c(3): mov %r15,%rdi
381f(5): call 0xfffff8b1(%rip)
3824(2): jmp 0xffffff8c(%rip)
3826(7): cmp $0x0,0x21b914(%rip)
382d(6): jnz 0x5dc(%rip)
3833(3): test %r15,%r15
3836(6): jz 0xfffffdaf(%rip)
383c(7): lea 0x13c1d(%rip),%rsi
3843(5): mov $0x5,%edx
3848(2): xor %edi,%edi
384a(5): call 0xfffff286(%rip)
384f(2): xor %esi,%esi
3851(3): mov %rax,%rdx
3854(5): mov $0x1,%edi
3859(2): xor %eax,%eax
385b(5): call 0xfffff6d5(%rip)
3860(5): cmp $0x0,0x25(%rsp)
3865(5): mov 0x10(%rsp),%rax
386a(4): mov 0x8(%rax),%rbp
386e(3): mov (%rax),%rbx
3871(6): jnz 0x22f(%rip)
3877(5): mov 0x8(%rsp),%rdx
387c(3): mov %rbp,%rsi
387f(3): mov %rbx,%rdi
3882(5): call 0x9de(%rip)
3887(3): xor $0x1,%eax
388a(4): movzx %al,%r13d
388e(8): mov 0x128(%rsp),%rcx
3896(9): xor $0x28,%rcx
389f(3): mov %r13d,%eax
38a2(6): jnz 0x562(%rip)
38a8(7): add $0x138,%rsp
38af(1): pop %rbx
38b0(1): pop %rbp
38b1(2): pop %r12
38b3(2): pop %r13
38b5(2): pop %r14
38b7(2): pop %r15
38b9(1): ret near (%rsp)
38ba(6): cmp $0x0,0x28(%rsp)
38c0(6): jz 0xfffffd60(%rip)
38c6(5): call 0xfffff08a(%rip)
38cb(5): mov 0x28(%rsp),%rdi
38d0(6): mov $0x5f,(%rax)
38d6(3): mov %rax,%rbx
38d9(5): call 0xbde7(%rip)
38de(7): lea 0x13beb(%rip),%rsi
38e5(5): mov $0x5,%edx
38ea(2): xor %edi,%edi
38ec(3): mov %rax,%rbp
38ef(5): call 0xfffff1e1(%rip)
38f4(2): mov (%rbx),%esi
38f6(3): mov %rax,%rdx
38f9(3): mov %rbp,%rcx
38fc(5): mov $0x1,%edi
3901(2): xor %eax,%eax
3903(5): call 0xfffff62d(%rip)
3908(2): test %al,%al
390a(6): jz 0xfffffd63(%rip)
3910(3): xor %r15d,%r15d
3913(3): cmp $0x1,%ebx
3916(6): jz 0xfffffd57(%rip)
391c(5): mov 0x10(%rsp),%rcx
3921(3): movsxd %ebx,%rax
3924(6): mov $0x1,%r12d
392a(5): lea 0xfffffff8(%rcx,%rax,8),%r13
392f(4): mov 0x0(%r13),%rbp
3933(3): mov %rbp,%rdi
3936(5): call 0x7a6a(%rip)
393b(3): mov %rax,%rdi
393e(3): mov %rax,%rdx
3941(5): movzx 0x26(%rsp),%eax
3946(4): or $0xffffffff,%rcx
394a(2): REPNZ scasb rdi(%es,10),%al
394c(3): mov %rcx,%rax
394f(3): not %rax
3952(4): sub $0x1,%rax
3956(2): jz 0xe(%rip)
3958(3): xor %r12d,%r12d
395b(5): cmp $0x2f,0xffffffff(%rdx,%rax,1)
3960(4): setz %r12b
3964(8): lea 0x90(%rsp),%rdx
396c(3): mov %rbp,%rsi
396f(5): mov $0x1,%edi
3974(5): call 0xfffff45c(%rip)
3979(2): test %eax,%eax
397b(6): jz 0x22b(%rip)
3981(5): call 0xffffefcf(%rip)
3986(3): mov (%rax),%r14d
3989(3): test %r14d,%r14d
398c(6): jz 0x21a(%rip)
3992(4): cmp $0x2,%r14d
3996(6): jnz 0x27e(%rip)
399c(3): test %r12d,%r12d
399f(6): jnz 0x23d(%rip)
39a5(3): xor %r15d,%r15d
39a8(3): cmp $0x2,%ebx
39ab(6): jz 0xfffffcc2(%rip)
39b1(4): mov 0x0(%r13),%rsi
39b5(5): mov $0x4,%edi
39ba(5): call 0xba36(%rip)
39bf(7): lea 0x12bbe(%rip),%rsi
39c6(3): mov %rax,%rbx
39c9(5): mov $0x5,%edx
39ce(2): xor %edi,%edi
39d0(5): call 0xfffff100(%rip)
39d5(3): mov %rbx,%rcx
39d8(3): mov %rax,%rdx
39db(2): xor %esi,%esi
39dd(5): mov $0x1,%edi
39e2(2): xor %eax,%eax
39e4(5): call 0xfffff54c(%rip)
39e9(a): mov $0xffffffff,0x21b751(%rip)
39f3(5): jmp 0xfffffd7e(%rip)
39f8(a): mov $0xffffffff,0x21b74e(%rip)
3a02(5): jmp 0xfffffd43(%rip)
3a07(5): mov 0x8(%rsp),%rcx
3a0c(5): mov 0x10(%rsp),%rsi
3a11(7): lea 0x708(%rip),%rdx
3a18(2): mov %ebx,%edi
3a1a(5): call 0xcab6(%rip)
3a1f(3): mov %eax,%r13d
3a22(5): jmp 0xfffffe6c(%rip)
3a27(7): lea 0x12b73(%rip),%rsi
3a2e(2): xor %edi,%edi
3a30(5): mov $0x5,%edx
3a35(5): call 0xfffff09b(%rip)
3a3a(3): mov %r14,%rsi
3a3d(3): mov %rax,%rdi
3a40(5): call 0x75d0(%rip)
3a45(5): jmp 0xfffffbab(%rip)
3a4a(5): mov $0x1,0x61(%rsp)
3a4f(5): jmp 0xfffff8a1(%rip)
3a54(7): lea 0x13b25(%rip),%rsi
3a5b(2): xor %edi,%edi
3a5d(5): mov $0x5,%edx
3a62(5): call 0xfffff06e(%rip)
3a67(2): xor %esi,%esi
3a69(3): mov %rax,%rdx
3a6c(2): xor %edi,%edi
3a6e(2): xor %eax,%eax
3a70(5): call 0xfffff4c0(%rip)
3a75(5): jmp 0xfffffc67(%rip)
3a7a(7): lea 0x13bcf(%rip),%rsi
3a81(2): xor %edi,%edi
3a83(5): mov $0x5,%edx
3a88(5): call 0xfffff048(%rip)
3a8d(2): xor %esi,%esi
3a8f(3): mov %rax,%rdx
3a92(2): xor %edi,%edi
3a94(2): xor %eax,%eax
3a96(5): call 0xfffff49a(%rip)
3a9b(5): jmp 0xfffffc7e(%rip)
3aa0(5): mov 0x8(%rsp),%rdx
3aa5(2): xor %ecx,%ecx
3aa7(3): mov %rbp,%rsi
3aaa(3): mov %rbx,%rdi
3aad(3): xor %r13d,%r13d
3ab0(5): call 0x490(%rip)
3ab5(2): test %al,%al
3ab7(2): jz 0x16(%rip)
3ab9(5): mov 0x8(%rsp),%rdx
3abe(3): mov %rbp,%rsi
3ac1(3): mov %rbx,%rdi
3ac4(5): call 0x79c(%rip)
3ac9(4): movzx %al,%r13d
3acd(4): and $0x1,%r13d
3ad1(3): mov %r13d,%eax
3ad4(3): xor $0x1,%eax
3ad7(5): jmp 0xfffffdb3(%rip)
3adc(7): mov 0x21b665(%rip),%rdi
3ae3(5): lea 0x38(%rsp),%rcx
3ae8(3): xor %r8d,%r8d
3aeb(2): xor %edx,%edx
3aed(2): xor %esi,%esi
3aef(5): call 0xe7b1(%rip)
3af4(2): test %eax,%eax
3af6(2): jnz 0x15(%rip)
3af8(5): mov 0x38(%rsp),%rax
3afd(5): mov $0xffffffff,%edx
3b02(3): cmp %rdx,%rax
3b05(6): jbe 0xfffffc61(%rip)
3b0b(7): mov 0x21b636(%rip),%rdi
3b12(5): call 0xbbae(%rip)
3b17(7): lea 0x12ad5(%rip),%rsi
3b1e(3): mov %rax,%rbx
3b21(5): mov $0x5,%edx
3b26(2): xor %edi,%edi
3b28(5): call 0xffffefa8(%rip)
3b2d(3): mov %rbx,%rcx
3b30(3): mov %rax,%rdx
3b33(2): xor %esi,%esi
3b35(5): mov $0x1,%edi
3b3a(2): xor %eax,%eax
3b3c(5): call 0xfffff3f4(%rip)
3b41(7): mov 0x21b610(%rip),%rdi
3b48(5): lea 0x38(%rsp),%rcx
3b4d(3): xor %r8d,%r8d
3b50(2): xor %edx,%edx
3b52(2): xor %esi,%esi
3b54(5): call 0xe74c(%rip)
3b59(2): test %eax,%eax
3b5b(2): jnz 0x15(%rip)
3b5d(5): mov 0x38(%rsp),%rax
3b62(5): mov $0xffffffff,%edx
3b67(3): cmp %rdx,%rax
3b6a(6): jbe 0xfffffbd0(%rip)
3b70(7): mov 0x21b5e1(%rip),%rdi
3b77(5): call 0xbb49(%rip)
3b7c(7): lea 0x12a60(%rip),%rsi
3b83(3): mov %rax,%rbx
3b86(5): mov $0x5,%edx
3b8b(2): xor %edi,%edi
3b8d(5): call 0xffffef43(%rip)
3b92(3): mov %rbx,%rcx
3b95(3): mov %rax,%rdx
3b98(2): xor %esi,%esi
3b9a(5): mov $0x1,%edi
3b9f(2): xor %eax,%eax
3ba1(5): call 0xfffff38f(%rip)
3ba6(7): mov 0xa8(%rsp),%eax
3bad(5): and $0xf000,%eax
3bb2(5): cmp $0x4000,%eax
3bb7(2): jz 0xa(%rip)
3bb9(3): xor %r14d,%r14d
3bbc(5): jmp 0xfffffde0(%rip)
3bc1(5): mov 0x10(%rsp),%rcx
3bc6(3): sub $0x1,%ebx
3bc9(3): movsxd %ebx,%rax
3bcc(4): mov 0x0(%rcx,%rax,8),%r15
3bd0(5): jmp 0xfffffa9d(%rip)
3bd5(2): xor %edi,%edi
3bd7(5): call 0xd49(%rip)
3bdc(3): mov %rbp,%rsi
3bdf(5): mov $0x4,%edi
3be4(5): call 0xb80c(%rip)
3be9(7): lea 0x12994(%rip),%rsi
3bf0(3): mov %rax,%rbx
3bf3(5): mov $0x5,%edx
3bf8(2): xor %edi,%edi
3bfa(5): call 0xffffeed6(%rip)
3bff(3): mov %rbx,%rcx
3c02(3): mov %rax,%rdx
3c05(3): mov %r14d,%esi
3c08(5): mov $0x1,%edi
3c0d(2): xor %eax,%eax
3c0f(5): call 0xfffff321(%rip)
3c14(3): mov %rbp,%rsi
3c17(5): mov $0x4,%edi
3c1c(5): call 0xb7d4(%rip)
3c21(7): lea 0x12948(%rip),%rsi
3c28(3): mov %rax,%rbx
3c2b(5): mov $0x5,%edx
3c30(2): xor %edi,%edi
3c32(5): call 0xffffee9e(%rip)
3c37(3): mov %rbx,%rcx
3c3a(3): mov %rax,%rdx
3c3d(3): mov %r14d,%esi
3c40(5): mov $0x1,%edi
3c45(2): xor %eax,%eax
3c47(5): call 0xfffff2e9(%rip)
3c4c(3): mov %r15,%rsi
3c4f(5): mov $0x4,%edi
3c54(5): call 0xb79c(%rip)
3c59(7): lea 0x12910(%rip),%rsi
3c60(5): mov $0x5,%edx
3c65(2): xor %edi,%edi
3c67(3): mov %rax,%rbp
3c6a(5): call 0xffffee66(%rip)
3c6f(3): mov %rax,%rbx
3c72(5): call 0xffffecde(%rip)
3c77(2): mov (%rax),%esi
3c79(3): mov %rbp,%rcx
3c7c(3): mov %rbx,%rdx
3c7f(5): mov $0x1,%edi
3c84(2): xor %eax,%eax
3c86(5): call 0xfffff2aa(%rip)
3c8b(7): lea 0x136ce(%rip),%rsi
3c92(5): mov $0x5,%edx
3c97(2): xor %edi,%edi
3c99(5): call 0xffffee37(%rip)
3c9e(2): xor %esi,%esi
3ca0(3): mov %rax,%rdx
3ca3(5): mov $0x1,%edi
3ca8(2): xor %eax,%eax
3caa(5): call 0xfffff286(%rip)
3caf(7): lea 0x13882(%rip),%rsi
3cb6(5): mov $0x5,%edx
3cbb(2): xor %edi,%edi
3cbd(5): call 0xffffee13(%rip)
3cc2(2): xor %esi,%esi
3cc4(3): mov %rax,%rdx
3cc7(5): mov $0x1,%edi
3ccc(2): xor %eax,%eax
3cce(5): call 0xfffff262(%rip)
3cd3(3): sub $0x1,%ebx
3cd6(6): jnz 0x9f(%rip)
3cdc(5): mov 0x10(%rsp),%rax
3ce1(5): mov $0x4,%edi
3ce6(3): mov (%rax),%rsi
3ce9(5): call 0xb707(%rip)
3cee(7): lea 0x13813(%rip),%rsi
3cf5(3): mov %rax,%rbx
3cf8(5): mov $0x5,%edx
3cfd(2): xor %edi,%edi
3cff(5): call 0xffffedd1(%rip)
3d04(3): mov %rbx,%rcx
3d07(3): mov %rax,%rdx
3d0a(2): xor %esi,%esi
3d0c(2): xor %edi,%edi
3d0e(2): xor %eax,%eax
3d10(5): call 0xfffff220(%rip)
3d15(5): jmp 0xfffff667(%rip)
3d1a(7): lea 0x1377f(%rip),%rsi
3d21(5): mov $0x5,%edx
3d26(2): xor %edi,%edi
3d28(5): call 0xffffeda8(%rip)
3d2d(2): xor %esi,%esi
3d2f(3): mov %rax,%rdx
3d32(5): mov $0x1,%edi
3d37(2): xor %eax,%eax
3d39(5): call 0xfffff1f7(%rip)
3d3e(3): mov %r15,%rsi
3d41(5): mov $0x4,%edi
3d46(5): call 0xb6aa(%rip)
3d4b(7): lea 0x12832(%rip),%rsi
3d52(3): mov %rax,%rbx
3d55(5): mov $0x5,%edx
3d5a(2): xor %edi,%edi
3d5c(5): call 0xffffed74(%rip)
3d61(3): mov %rbx,%rcx
3d64(3): mov %rax,%rdx
3d67(2): xor %esi,%esi
3d69(5): mov $0x1,%edi
3d6e(2): xor %eax,%eax
3d70(5): call 0xfffff1c0(%rip)
3d75(7): lea 0x12831(%rip),%rsi
3d7c(5): mov $0x5,%edx
3d81(2): xor %edi,%edi
3d83(5): call 0xffffed4d(%rip)
3d88(2): xor %esi,%esi
3d8a(3): mov %rax,%rdx
3d8d(2): xor %edi,%edi
3d8f(2): xor %eax,%eax
3d91(5): call 0xfffff19f(%rip)
3d96(5): jmp 0xfffff5e6(%rip)
3d9b(5): mov $0x5,%edx
3da0(7): lea 0x13821(%rip),%rsi
3da7(2): jmp 0xffffffda(%rip)
3da9(5): mov 0x18(%rsp),%rdi
3dae(5): call 0xb912(%rip)
3db3(7): lea 0x12819(%rip),%rsi
3dba(3): mov %rax,%rbx
3dbd(5): mov $0x5,%edx
3dc2(2): xor %edi,%edi
3dc4(5): call 0xffffed0c(%rip)
3dc9(3): mov %rbx,%rcx
3dcc(3): mov %rax,%rdx
3dcf(2): xor %esi,%esi
3dd1(5): mov $0x1,%edi
3dd6(2): xor %eax,%eax
3dd8(5): call 0xfffff158(%rip)
3ddd(5): mov 0x10(%rsp),%rax
3de2(5): mov $0x4,%edi
3de7(4): mov 0x10(%rax),%rsi
3deb(5): call 0xb605(%rip)
3df0(5): mov $0x5,%edx
3df5(3): mov %rax,%rbx
3df8(7): lea 0x127c3(%rip),%rsi
3dff(5): jmp 0xfffffefe(%rip)
3e04(5): call 0xffffed2c(%rip)
3e09(7): lea 0x13610(%rip),%rsi
3e10(5): mov $0x5,%edx
3e15(2): xor %edi,%edi
3e17(5): call 0xffffecb9(%rip)
3e1c(2): xor %esi,%esi
3e1e(3): mov %rax,%rdx
3e21(5): mov $0x1,%edi
3e26(2): xor %eax,%eax
3e28(5): call 0xfffff108(%rip)
3e2d(3): nop (%rax)
3e30(2): xor %ebp,%ebp
3e32(3): mov %rdx,%r9
3e35(1): pop %rsi
3e36(3): mov %rsp,%rdx
3e39(4): and $0xfffffff0,%rsp
3e3d(1): push %rax
3e3e(1): push %rsp
3e3f(7): lea 0x1253a(%rip),%r8
3e46(7): lea 0x124c3(%rip),%rcx
3e4d(7): lea 0xfffff2dc(%rip),%rdi
3e54(6): call 0x219186(%rip)
3e5a(1): hlt 

"_start" :
3e30(2): xor %ebp,%ebp
3e32(3): mov %rdx,%r9
3e35(1): pop %rsi
3e36(3): mov %rsp,%rdx
3e39(4): and $0xfffffff0,%rsp
3e3d(1): push %rax
3e3e(1): push %rsp
3e3f(7): lea 0x1253a(%rip),%r8
3e46(7): lea 0x124c3(%rip),%rcx
3e4d(7): lea 0xfffff2dc(%rip),%rdi
3e54(6): call 0x219186(%rip)
3e5a(1): hlt 

"deregister_tm_clones" :
3e60(7): lea 0x219261(%rip),%rdi
3e67(1): push %rbp
3e68(7): lea 0x219259(%rip),%rax
3e6f(3): cmp %rdi,%rax
3e72(3): mov %rsp,%rbp
3e75(2): jz 0x1b(%rip)
3e77(7): mov 0x21915a(%rip),%rax
3e7e(3): test %rax,%rax
3e81(2): jz 0xf(%rip)
3e83(1): pop %rbp
3e84(2): jmp %rax
3e86(a): nop 0x0(%rax,%rax,1)
3e90(1): pop %rbp
3e91(1): ret near (%rsp)

"register_tm_clones" :
3ea0(7): lea 0x219221(%rip),%rdi
3ea7(7): lea 0x21921a(%rip),%rsi
3eae(1): push %rbp
3eaf(3): sub %rdi,%rsi
3eb2(3): mov %rsp,%rbp
3eb5(4): sar $0x3,%rsi
3eb9(3): mov %rsi,%rax
3ebc(4): shr $0x3f,%rax
3ec0(3): add %rax,%rsi
3ec3(3): sar $0x1,%rsi
3ec6(2): jz 0x1a(%rip)
3ec8(7): mov 0x219121(%rip),%rax
3ecf(3): test %rax,%rax
3ed2(2): jz 0xe(%rip)
3ed4(1): pop %rbp
3ed5(2): jmp %rax
3ed7(9): nop 0x0(%rax,%rax,1)
3ee0(1): pop %rbp
3ee1(1): ret near (%rsp)

"__do_global_dtors_aux" :
3ef0(7): cmp $0x0,0x219231(%rip)
3ef7(2): jnz 0x31(%rip)
3ef9(8): cmp $0x0,0x2190f7(%rip)
3f01(1): push %rbp
3f02(3): mov %rsp,%rbp
3f05(2): jz 0xe(%rip)
3f07(7): mov 0x2190fa(%rip),%rdi
3f0e(5): call 0xfffff1ca(%rip)
3f13(5): call 0xffffff4d(%rip)
3f18(7): mov $0x1,0x219209(%rip)
3f1f(1): pop %rbp
3f20(1): ret near (%rsp)
3f21(7): nop 0x0(%rax)
3f28(2): REP ret near (%rsp)

"frame_dummy" :
3f30(1): push %rbp
3f31(3): mov %rsp,%rbp
3f34(1): pop %rbp
3f35(5): jmp 0xffffff6b(%rip)

"mkancesdirs_safe_wd" :
3f40(2): push %r13
3f42(2): push %r12
3f44(1): push %rbp
3f45(1): push %rbx
3f46(3): mov %rsi,%rbx
3f49(4): sub $0x28,%rsp
3f4d(9): mov $0x28,%rax
3f56(5): mov %rax,0x18(%rsp)
3f5b(2): xor %eax,%eax
3f5d(2): test %cl,%cl
3f5f(2): jnz 0xb(%rip)
3f61(3): cmp $0x2f,(%rdi)
3f64(6): jz 0xac(%rip)
3f6a(5): lea 0x10(%rsp),%rbp
3f6f(3): mov %rdx,%rcx
3f72(7): lea 0x277(%rip),%rdx
3f79(3): mov %rbx,%rdi
3f7c(8): mov $0x0,0x10(%rsp)
3f84(3): mov %rbp,%rsi
3f87(5): call 0x8dd9(%rip)
3f8c(4): cmp $0xffffffff,%rax
3f90(6): jnz 0xca(%rip)
3f96(3): mov %rbx,%rsi
3f99(5): mov $0x4,%edi
3f9e(5): call 0xb452(%rip)
3fa3(7): lea 0x1241a(%rip),%rsi
3faa(5): mov $0x5,%edx
3faf(2): xor %edi,%edi
3fb1(3): mov %rax,%r12
3fb4(5): call 0xffffeb1c(%rip)
3fb9(3): mov %rax,%rbx
3fbc(5): call 0xffffe994(%rip)
3fc1(2): mov (%rax),%esi
3fc3(3): mov %r12,%rcx
3fc6(3): mov %rbx,%rdx
3fc9(2): xor %edi,%edi
3fcb(2): xor %eax,%eax
3fcd(5): call 0xffffef63(%rip)
3fd2(5): mov $0x1,%esi
3fd7(3): mov %rbp,%rdi
3fda(5): call 0xc316(%rip)
3fdf(3): mov %rbp,%rdi
3fe2(5): call 0xc46e(%rip)
3fe7(2): xor %eax,%eax
3fe9(5): mov 0x18(%rsp),%rbx
3fee(9): xor $0x28,%rbx
3ff7(6): jnz 0xd3(%rip)
3ffd(4): add $0x28,%rsp
4001(1): pop %rbx
4002(1): pop %rbp
4003(2): pop %r12
4005(2): pop %r13
4007(1): ret near (%rsp)
4008(8): nop 0x0(%rax,%rax,1)
4010(3): cmp $0x2f,(%rsi)
4013(6): jnz 0xffffff57(%rip)
4019(5): lea 0x10(%rsp),%rbp
401e(5): mov %rdx,0x8(%rsp)
4023(8): mov $0x0,0x10(%rsp)
402b(3): mov %rbp,%rdi
402e(5): call 0xc422(%rip)
4033(5): mov 0x8(%rsp),%rdx
4038(3): mov %rbp,%rsi
403b(3): mov %rbx,%rdi
403e(3): mov %rdx,%rcx
4041(7): lea 0x1a8(%rip),%rdx
4048(5): call 0x8d18(%rip)
404d(4): cmp $0xffffffff,%rax
4051(2): jz 0x7e(%rip)
4053(5): mov $0x1,%eax
4058(2): jmp 0xffffff91(%rip)
405a(2): xor %esi,%esi
405c(3): mov %rbp,%rdi
405f(5): call 0xc291(%rip)
4064(3): mov %eax,%r13d
4067(5): call 0xffffe8e9(%rip)
406c(3): mov %rbp,%rdi
406f(3): mov (%rax),%r12d
4072(5): call 0xc3de(%rip)
4077(2): xor %eax,%eax
4079(4): cmp $0x0,%r13d
407d(6): jnle 0xffffff6c(%rip)
4083(5): mov $0x1,%eax
4088(6): jnl 0xffffff61(%rip)
408e(3): mov %rbx,%rsi
4091(5): mov $0x4,%edi
4096(5): call 0xb35a(%rip)
409b(7): lea 0x12322(%rip),%rsi
40a2(3): mov %rax,%rbx
40a5(5): mov $0x5,%edx
40aa(2): xor %edi,%edi
40ac(5): call 0xffffea24(%rip)
40b1(3): mov %rbx,%rcx
40b4(3): mov %rax,%rdx
40b7(3): mov %r12d,%esi
40ba(2): xor %eax,%eax
40bc(2): xor %edi,%edi
40be(5): call 0xffffee72(%rip)
40c3(2): xor %eax,%eax
40c5(5): jmp 0xffffff24(%rip)
40ca(5): call 0xffffea66(%rip)
40cf(3): mov %rbx,%rsi
40d2(5): mov $0x4,%edi
40d7(5): call 0xb319(%rip)
40dc(7): lea 0x122e1(%rip),%rsi
40e3(5): mov $0x5,%edx
40e8(2): xor %edi,%edi
40ea(3): mov %rax,%rbp
40ed(5): call 0xffffe9e3(%rip)
40f2(3): mov %rax,%rbx
40f5(5): call 0xffffe85b(%rip)
40fa(2): mov (%rax),%esi
40fc(3): mov %rbp,%rcx
40ff(2): xor %eax,%eax
4101(3): mov %rbx,%rdx
4104(2): xor %edi,%edi
4106(5): call 0xffffee2a(%rip)
410b(2): xor %eax,%eax
410d(5): jmp 0xfffffedc(%rip)

"process_dir" :
4120(1): push %rbp
4121(1): push %rbx
4122(3): mov %rdx,%rcx
4125(3): mov %rdx,%rbx
4128(7): lea 0xa1(%rip),%r9
412f(7): lea 0xba(%rip),%rdx
4136(4): sub $0x8,%rsp
413a(6): mov 0x21b004(%rip),%eax
4140(7): mov 0x218ed1(%rip),%r8d
4147(2): push $0x0
4149(1): push %rax
414a(6): mov 0x21b000(%rip),%eax
4150(1): push %rax
4151(6): mov 0x218ebd(%rip),%eax
4157(1): push %rax
4158(5): call 0x8d78(%rip)
415d(3): xor $0x1,%eax
4160(4): add $0x20,%rsp
4164(2): test %al,%al
4166(3): movzx %al,%ebp
4169(2): jnz 0x13(%rip)
416b(4): cmp $0x0,0x21(%rbx)
416f(2): jz 0xd(%rip)
4171(5): call 0xffffe7df(%rip)
4176(6): mov $0x5f,(%rax)
417c(4): add $0x8,%rsp
4180(2): mov %ebp,%eax
4182(1): pop %rbx
4183(1): pop %rbp
4184(1): ret near (%rsp)

"announce_mkdir.part.9" :
4190(1): push %rbx
4191(3): mov %rdi,%rsi
4194(5): mov $0x4,%edi
4199(5): call 0xb257(%rip)
419e(7): lea 0x1223a(%rip),%rsi
41a5(3): mov %rax,%rbx
41a8(5): mov $0x5,%edx
41ad(2): xor %edi,%edi
41af(5): call 0xffffe921(%rip)
41b4(3): mov %rbx,%rdx
41b7(7): mov 0x218f2a(%rip),%rdi
41be(3): mov %rax,%rsi
41c1(1): pop %rbx
41c2(2): xor %eax,%eax
41c4(5): jmp 0xbac(%rip)

"announce_mkdir" :
41d0(4): cmp $0x0,0x2e(%rsi)
41d4(2): jnz 0xc(%rip)
41d6(2): REP ret near (%rsp)
41d8(8): nop 0x0(%rax,%rax,1)
41e0(2): jmp 0xffffffb0(%rip)

"make_ancestor" :
41f0(2): push %r12
41f2(1): push %rbp
41f3(3): mov %rdi,%r12
41f6(1): push %rbx
41f7(3): mov %rsi,%rbp
41fa(3): mov %rdx,%rbx
41fd(4): sub $0x10,%rsp
4201(4): cmp $0x0,0x21(%rdx)
4205(2): jz 0xd(%rip)
4207(5): call 0xffffe749(%rip)
420c(6): mov $0x5f,(%rax)
4212(5): mov $0x1ed,%esi
4217(3): mov %rbp,%rdi
421a(5): call 0xffffe7a6(%rip)
421f(2): test %eax,%eax
4221(2): jnz 0x8(%rip)
4223(4): cmp $0x0,0x2e(%rbx)
4227(2): jnz 0x11(%rip)
4229(4): add $0x10,%rsp
422d(1): pop %rbx
422e(1): pop %rbp
422f(2): pop %r12
4231(1): ret near (%rsp)
4232(6): nop 0x0(%rax,%rax,1)
4238(3): mov %r12,%rdi
423b(4): mov %eax,0xc(%rsp)
423f(5): call 0xffffff51(%rip)
4244(4): mov 0xc(%rsp),%eax
4248(4): add $0x10,%rsp
424c(1): pop %rbx
424d(1): pop %rbp
424e(2): pop %r12
4250(1): ret near (%rsp)

"install_file_in_file" :
4260(2): push %r15
4262(2): push %r14
4264(2): push %r13
4266(2): push %r12
4268(3): mov %rdi,%r12
426b(1): push %rbp
426c(1): push %rbx
426d(3): mov %rsi,%rbp
4270(3): mov %rdx,%rbx
4273(7): sub $0x1e8,%rsp
427a(9): mov $0x28,%rax
4283(8): mov %rax,0x1d8(%rsp)
428b(2): xor %eax,%eax
428d(4): cmp $0x0,0x1f(%rdx)
4291(2): jz 0x1c(%rip)
4293(5): lea 0x20(%rsp),%rdx
4298(3): mov %rdi,%rsi
429b(5): mov $0x1,%edi
42a0(5): call 0xffffeb30(%rip)
42a5(2): test %eax,%eax
42a7(6): jnz 0x379(%rip)
42ad(7): cmp $0x0,0x21ae8e(%rip)
42b4(2): jz 0x16(%rip)
42b6(7): mov 0x218d5f(%rip),%r13d
42bd(7): test $0xffff0e00,%r13d
42c4(6): jz 0x1c4(%rip)
42ca(5): lea 0x1c(%rsp),%r8
42cf(3): xor %r9d,%r9d
42d2(2): xor %edx,%edx
42d4(3): mov %rbx,%rcx
42d7(3): mov %rbp,%rsi
42da(3): mov %r12,%rdi
42dd(5): call 0x5a53(%rip)
42e2(2): test %al,%al
42e4(2): jnz 0x3f(%rip)
42e6(2): xor %ebx,%ebx
42e8(8): mov 0x1d8(%rsp),%rcx
42f0(9): xor $0x28,%rcx
42f9(2): mov %ebx,%eax
42fb(6): jnz 0x54d(%rip)
4301(7): add $0x1e8,%rsp
4308(1): pop %rbx
4309(1): pop %rbp
430a(2): pop %r12
430c(2): pop %r13
430e(2): pop %r14
4310(2): pop %r15
4312(1): ret near (%rsp)
4313(3): mov %r13d,%edi
4316(5): call 0xffffe91a(%rip)
431b(3): mov %r14d,%edi
431e(5): call 0xffffe912(%rip)
4323(7): cmp $0x0,0x21ae17(%rip)
432a(6): jnz 0x396(%rip)
4330(4): cmp $0x0,0x1f(%rbx)
4334(6): jz 0xac(%rip)
433a(4): mov 0x38(%rsp),%eax
433e(5): and $0xf000,%eax
4343(5): cmp $0x8000,%eax
4348(6): jz 0x98(%rip)
434e(5): mov 0x68(%rsp),%rax
4353(8): lea 0x140(%rsp),%rsi
435b(3): mov %rbp,%rdi
435e(8): mov %rax,0x140(%rsp)
4366(5): mov 0x70(%rsp),%rax
436b(8): mov %rax,0x148(%rsp)
4373(5): mov 0x78(%rsp),%rax
4378(8): mov %rax,0x150(%rsp)
4380(8): mov 0x80(%rsp),%rax
4388(8): mov %rax,0x158(%rsp)
4390(5): call 0xd3b0(%rip)
4395(2): test %eax,%eax
4397(2): jz 0x49(%rip)
4399(3): mov %rbp,%rsi
439c(5): mov $0x4,%edi
43a1(5): call 0xb04f(%rip)
43a6(7): lea 0x120a0(%rip),%rsi
43ad(3): mov %rax,%rbp
43b0(5): mov $0x5,%edx
43b5(2): xor %edi,%edi
43b7(5): call 0xffffe719(%rip)
43bc(3): mov %rax,%rbx
43bf(5): call 0xffffe591(%rip)
43c4(2): mov (%rax),%esi
43c6(3): mov %rbp,%rcx
43c9(3): mov %rbx,%rdx
43cc(2): xor %edi,%edi
43ce(2): xor %eax,%eax
43d0(5): call 0xffffeb60(%rip)
43d5(5): jmp 0xffffff11(%rip)
43da(6): nop 0x0(%rax,%rax,1)
43e0(6): mov 0x21ad6a(%rip),%esi
43e6(6): mov 0x21ad58(%rip),%edx
43ec(3): cmp $0xff,%esi
43ef(2): jnz 0x7(%rip)
43f1(3): cmp $0xff,%edx
43f4(2): jz 0x12(%rip)
43f6(3): mov %rbp,%rdi
43f9(5): call 0xffffea47(%rip)
43fe(2): test %eax,%eax
4400(6): jnz 0x248(%rip)
4406(6): mov 0x218c10(%rip),%esi
440c(3): mov %rbp,%rdi
440f(5): mov $0x1,%ebx
4414(5): call 0xffffeafc(%rip)
4419(2): test %eax,%eax
441b(6): jnz 0x285(%rip)
4421(7): cmp $0x0,0x218bf8(%rip)
4428(6): jz 0xfffffec0(%rip)
442e(7): cmp $0x1,0x21ad2b(%rip)
4435(6): jnz 0xfffffeb3(%rip)
443b(8): lea 0x140(%rsp),%rdx
4443(3): mov %rbp,%rsi
4446(5): mov $0x1,%edi
444b(5): call 0xffffe6b5(%rip)
4450(2): test %eax,%eax
4452(6): jnz 0xfffffe96(%rip)
4458(7): cmp $0x0,0x218bb1(%rip)
445f(2): jz 0xc(%rip)
4461(4): cmp $0x2f,0x0(%rbp)
4465(6): jz 0x36c(%rip)
446b(7): mov $0x0,0x218b9e(%rip)
4472(5): call 0xffffe4de(%rip)
4477(6): mov $0x5f,(%rax)
447d(5): jmp 0xfffffe6b(%rip)
4482(6): nop 0x0(%rax,%rax,1)
4488(8): lea 0xb0(%rsp),%rdx
4490(3): mov %r12,%rsi
4493(5): mov $0x1,%edi
4498(5): call 0xffffe668(%rip)
449d(2): test %eax,%eax
449f(6): jnz 0xfffffe2b(%rip)
44a5(8): lea 0x140(%rsp),%rdx
44ad(3): mov %rbp,%rsi
44b0(5): mov $0x1,%edi
44b5(5): call 0xffffe64b(%rip)
44ba(2): test %eax,%eax
44bc(6): jnz 0xfffffe0e(%rip)
44c2(7): mov 0xc8(%rsp),%eax
44c9(2): mov %eax,%edx
44cb(6): and $0xf000,%edx
44d1(6): cmp $0x8000,%edx
44d7(6): jnz 0xfffffdf3(%rip)
44dd(7): mov 0x158(%rsp),%edx
44e4(2): mov %edx,%ecx
44e6(6): and $0xf000,%ecx
44ec(6): cmp $0x8000,%ecx
44f2(6): jnz 0xfffffdd8(%rip)
44f8(5): test $0xffff0e00,%eax
44fd(6): jnz 0xfffffdcd(%rip)
4503(6): test $0xffff0e00,%edx
4509(6): jnz 0xfffffdc1(%rip)
450f(8): mov 0x170(%rsp),%rax
4517(8): cmp %rax,0xe0(%rsp)
451f(6): jnz 0xfffffdab(%rip)
4525(6): and $0xfff,%edx
452b(3): cmp %edx,%r13d
452e(6): jnz 0xfffffd9c(%rip)
4534(6): mov 0x21ac16(%rip),%eax
453a(3): cmp $0xff,%eax
453d(6): jz 0x3a1(%rip)
4543(7): cmp 0x15c(%rsp),%eax
454a(6): jnz 0xfffffd80(%rip)
4550(6): mov 0x21abee(%rip),%eax
4556(3): cmp $0xff,%eax
4559(6): jz 0x34c(%rip)
455f(7): cmp 0x160(%rsp),%eax
4566(6): jnz 0xfffffd64(%rip)
456c(7): cmp $0x0,0x21abed(%rip)
4573(2): jz 0xc(%rip)
4575(4): cmp $0x0,0x25(%rbx)
4579(6): jnz 0x391(%rip)
457f(2): xor %esi,%esi
4581(2): xor %eax,%eax
4583(3): mov %r12,%rdi
4586(5): call 0xffffe9da(%rip)
458b(2): test %eax,%eax
458d(3): mov %eax,%r13d
4590(6): js 0xfffffd3a(%rip)
4596(2): xor %esi,%esi
4598(2): xor %eax,%eax
459a(3): mov %rbp,%rdi
459d(5): call 0xffffe9c3(%rip)
45a2(2): test %eax,%eax
45a4(3): mov %eax,%r14d
45a7(7): lea 0x218b92(%rip),%r15
45ae(6): js 0x323(%rip)
45b4(5): mov $0x1000,%edx
45b9(3): mov %r15,%rsi
45bc(3): mov %r13d,%edi
45bf(5): call 0x72f1(%rip)
45c4(3): test %rax,%rax
45c7(3): mov %rax,%rcx
45ca(6): jz 0xfffffd49(%rip)
45d0(7): lea 0x219b69(%rip),%rsi
45d7(5): mov $0x1000,%edx
45dc(3): mov %r14d,%edi
45df(5): mov %rcx,0x8(%rsp)
45e4(5): call 0x72cc(%rip)
45e9(5): mov 0x8(%rsp),%rcx
45ee(3): cmp %rcx,%rax
45f1(2): jnz 0x18(%rip)
45f3(7): lea 0x219b46(%rip),%rsi
45fa(3): mov %rax,%rdx
45fd(3): mov %r15,%rdi
4600(5): call 0xffffe690(%rip)
4605(2): test %eax,%eax
4607(2): jz 0xffffffad(%rip)
4609(3): mov %r13d,%edi
460c(5): call 0xffffe624(%rip)
4611(3): mov %r14d,%edi
4614(5): call 0xffffe61c(%rip)
4619(5): jmp 0xfffffcb1(%rip)
461e(2): nop 
4620(3): mov %r12,%rsi
4623(5): mov $0x4,%edi
4628(5): call 0xadc8(%rip)
462d(5): mov $0x5,%edx
4632(3): mov %rax,%rbp
4635(7): lea 0x11db9(%rip),%rsi
463c(5): jmp 0xfffffd79(%rip)
4641(7): nop 0x0(%rax)
4648(3): mov %rbp,%rsi
464b(5): mov $0x4,%edi
4650(5): call 0xada0(%rip)
4655(7): lea 0x11e0e(%rip),%rsi
465c(3): mov %rax,%r12
465f(5): mov $0x5,%edx
4664(2): xor %edi,%edi
4666(5): call 0xffffe46a(%rip)
466b(3): mov %rax,%rbx
466e(5): call 0xffffe2e2(%rip)
4673(2): mov (%rax),%esi
4675(3): mov %rbx,%rdx
4678(2): xor %edi,%edi
467a(2): xor %eax,%eax
467c(3): mov %r12,%rcx
467f(2): xor %ebx,%ebx
4681(5): call 0xffffe8af(%rip)
4686(7): cmp $0x0,0x218993(%rip)
468d(6): jz 0xfffffc5b(%rip)
4693(5): jmp 0xfffffd9b(%rip)
4698(8): nop 0x0(%rax,%rax,1)
46a0(3): mov %rbp,%rsi
46a3(5): mov $0x4,%edi
46a8(5): call 0xad48(%rip)
46ad(5): mov $0x5,%edx
46b2(3): mov %rax,%r12
46b5(7): lea 0x11ff4(%rip),%rsi
46bc(2): jmp 0xffffffa8(%rip)
46be(2): nop 
46c0(5): call 0xffffe9e0(%rip)
46c5(3): cmp $0xff,%eax
46c8(2): jz 0x58(%rip)
46ca(2): test %eax,%eax
46cc(6): jz 0x181(%rip)
46d2(5): lea 0x1c(%rsp),%rsi
46d7(2): xor %edx,%edx
46d9(2): mov %eax,%edi
46db(5): call 0xffffe865(%rip)
46e0(2): test %eax,%eax
46e2(6): js 0xde(%rip)
46e8(4): mov 0x1c(%rsp),%eax
46ec(2): test $0x7f,%al
46ee(2): jnz 0xb(%rip)
46f0(3): test $0xff,%ah
46f3(6): jz 0xad(%rip)
46f9(7): lea 0x11f88(%rip),%rsi
4700(2): xor %edi,%edi
4702(5): mov $0x5,%edx
4707(5): call 0xffffe3c9(%rip)
470c(2): xor %esi,%esi
470e(3): mov %rax,%rdx
4711(2): xor %edi,%edi
4713(2): xor %eax,%eax
4715(5): call 0xffffe81b(%rip)
471a(2): jmp 0x2f(%rip)
471c(4): nop 0x0(%rax)
4720(7): lea 0x11cdd(%rip),%rsi
4727(5): mov $0x5,%edx
472c(2): xor %edi,%edi
472e(5): call 0xffffe3a2(%rip)
4733(3): mov %rax,%rbx
4736(5): call 0xffffe21a(%rip)
473b(2): mov (%rax),%esi
473d(3): mov %rbx,%rdx
4740(2): xor %edi,%edi
4742(2): xor %eax,%eax
4744(5): call 0xffffe7ec(%rip)
4749(3): mov %rbp,%rdi
474c(5): call 0xffffe214(%rip)
4751(2): test %eax,%eax
4753(6): jz 0xfffffb93(%rip)
4759(3): mov %rbp,%rsi
475c(5): mov $0x4,%edi
4761(5): call 0xac8f(%rip)
4766(7): lea 0x11ccf(%rip),%rsi
476d(5): mov $0x5,%edx
4772(2): xor %edi,%edi
4774(3): mov %rax,%rbp
4777(5): call 0xffffe359(%rip)
477c(3): mov %rax,%rbx
477f(5): call 0xffffe1d1(%rip)
4784(2): mov (%rax),%esi
4786(3): mov %rbp,%rcx
4789(3): mov %rbx,%rdx
478c(5): mov $0x1,%edi
4791(2): xor %eax,%eax
4793(5): call 0xffffe79d(%rip)
4798(8): nop 0x0(%rax,%rax,1)
47a0(4): cmp $0x0,0x1f(%rbx)
47a4(6): jz 0xfffffc3c(%rip)
47aa(7): cmp $0x0,0x21a990(%rip)
47b1(6): jnz 0xfffffb9d(%rip)
47b7(5): jmp 0xfffffb83(%rip)
47bc(4): nop 0x0(%rax)
47c0(5): mov $0x5,%edx
47c5(7): lea 0x11c5e(%rip),%rsi
47cc(5): jmp 0xffffff60(%rip)
47d1(4): movzx 0x1(%rbp),%edx
47d5(4): lea 0x1(%rbp),%rax
47d9(3): cmp $0x2f,%dl
47dc(2): jnz 0x10(%rip)
47de(2): nop 
47e0(4): add $0x1,%rax
47e4(3): movzx (%rax),%edx
47e7(3): cmp $0x2f,%dl
47ea(2): jz 0xfffffff6(%rip)
47ec(2): test %dl,%dl
47ee(6): jz 0xfffffc7d(%rip)
47f4(3): mov %rax,%rdx
47f7(2): jmp 0x7(%rip)
47f9(3): cmp $0x2f,%cl
47fc(2): jz 0xd(%rip)
47fe(4): add $0x1,%rdx
4802(3): movzx (%rdx),%ecx
4805(2): test %cl,%cl
4807(2): jnz 0xfffffff2(%rip)
4809(4): lea 0xffffffff(%rax),%rbp
480d(3): sub %rbp,%rdx
4810(4): lea 0x2(%rdx),%rdi
4814(3): mov %rdx,%r12
4817(5): call 0xffffe5d9(%rip)
481c(3): test %rax,%rax
481f(3): mov %rax,%r13
4822(6): jz 0xfffffc49(%rip)
4828(3): mov %r12,%rdx
482b(3): mov %rbp,%rsi
482e(3): mov %rax,%rdi
4831(5): call 0xffffe66f(%rip)
4836(3): mov %r13,%rdi
4839(5): mov $0x2f,(%rax)
483e(5): call 0xffffe892(%rip)
4843(5): jmp 0xfffffc28(%rip)
4848(5): call 0xffffe2e8(%rip)
484d(7): mov 0x2187d4(%rip),%rbx
4854(2): xor %ecx,%ecx
4856(3): mov %rbp,%rdx
4859(2): xor %eax,%eax
485b(3): mov %rbx,%rsi
485e(3): mov %rbx,%rdi
4861(5): call 0xffffe81f(%rip)
4866(3): mov %rbx,%rsi
4869(5): mov $0x4,%edi
486e(5): call 0xab82(%rip)
4873(7): lea 0x11ba2(%rip),%rsi
487a(5): mov $0x5,%edx
487f(2): xor %edi,%edi
4881(3): mov %rax,%rbp
4884(5): call 0xffffe24c(%rip)
4889(3): mov %rax,%rbx
488c(5): call 0xffffe0c4(%rip)
4891(2): mov (%rax),%esi
4893(3): mov %rbp,%rcx
4896(3): mov %rbx,%rdx
4899(5): mov $0x1,%edi
489e(2): xor %eax,%eax
48a0(5): call 0xffffe690(%rip)
48a5(5): call 0xffffe0ab(%rip)
48aa(6): mov $0x0,(%rax)
48b0(3): mov %rax,%r13
48b3(5): call 0xffffe50d(%rip)
48b8(3): cmp $0xff,%eax
48bb(6): jnz 0xfffffca4(%rip)
48c1(5): cmp $0x0,0x0(%r13)
48c6(6): jz 0xfffffc99(%rip)
48cc(5): jmp 0xfffff9fe(%rip)
48d1(3): mov %r13d,%edi
48d4(5): call 0xffffe35c(%rip)
48d9(5): jmp 0xfffff9f1(%rip)
48de(5): call 0xffffe072(%rip)
48e3(6): mov $0x0,(%rax)
48e9(3): mov %rax,%r13
48ec(5): call 0xffffe254(%rip)
48f1(3): cmp $0xff,%eax
48f4(6): jnz 0xfffffc4f(%rip)
48fa(5): cmp $0x0,0x0(%r13)
48ff(6): jz 0xfffffc44(%rip)
4905(5): jmp 0xfffff9c5(%rip)
490a(5): call 0xffffe046(%rip)
490f(6): mov $0x5f,(%rax)
4915(5): jmp 0xfffff9b5(%rip)

"usage" :
4920(2): push %r13
4922(2): push %r12
4924(5): mov $0x5,%edx
4929(1): push %rbp
492a(1): push %rbx
492b(2): mov %edi,%ebp
492d(7): sub $0x88,%rsp
4934(7): mov 0x21ac85(%rip),%rbx
493b(9): mov $0x28,%rax
4944(5): mov %rax,0x78(%rsp)
4949(2): xor %eax,%eax
494b(2): test %edi,%edi
494d(2): jz 0x30(%rip)
494f(7): lea 0x11d7a(%rip),%rsi
4956(2): xor %edi,%edi
4958(5): call 0xffffe178(%rip)
495d(7): mov 0x2187bc(%rip),%rdi
4964(3): mov %rax,%rdx
4967(3): mov %rbx,%rcx
496a(5): mov $0x1,%esi
496f(2): xor %eax,%eax
4971(5): call 0xffffe6df(%rip)
4976(2): mov %ebp,%edi
4978(5): call 0xffffe6b8(%rip)
497d(7): lea 0x11d74(%rip),%rsi
4984(2): xor %edi,%edi
4986(5): call 0xffffe14a(%rip)
498b(3): mov %rbx,%rcx
498e(3): mov %rbx,%r9
4991(3): mov %rbx,%r8
4994(3): mov %rbx,%rdx
4997(3): mov %rax,%rsi
499a(5): mov $0x1,%edi
499f(2): xor %eax,%eax
49a1(5): call 0xffffe53f(%rip)
49a6(7): mov 0x21873b(%rip),%rbx
49ad(7): lea 0x11dec(%rip),%rsi
49b4(5): mov $0x5,%edx
49b9(2): xor %edi,%edi
49bb(5): call 0xffffe115(%rip)
49c0(3): mov %rbx,%rsi
49c3(3): mov %rax,%rdi
49c6(5): call 0xffffe2ea(%rip)
49cb(7): mov 0x218716(%rip),%rbx
49d2(7): lea 0x11f9f(%rip),%rsi
49d9(5): mov $0x5,%edx
49de(2): xor %edi,%edi
49e0(5): call 0xffffe0f0(%rip)
49e5(3): mov %rbx,%rsi
49e8(3): mov %rax,%rdi
49eb(5): call 0xffffe2c5(%rip)
49f0(7): mov 0x2186f1(%rip),%rbx
49f7(7): lea 0x11fca(%rip),%rsi
49fe(5): mov $0x5,%edx
4a03(2): xor %edi,%edi
4a05(5): call 0xffffe0cb(%rip)
4a0a(3): mov %rbx,%rsi
4a0d(3): mov %rax,%rdi
4a10(5): call 0xffffe2a0(%rip)
4a15(7): mov 0x2186cc(%rip),%rbx
4a1c(7): lea 0x1217d(%rip),%rsi
4a23(5): mov $0x5,%edx
4a28(2): xor %edi,%edi
4a2a(5): call 0xffffe0a6(%rip)
4a2f(3): mov %rbx,%rsi
4a32(3): mov %rax,%rdi
4a35(5): call 0xffffe27b(%rip)
4a3a(7): mov 0x2186a7(%rip),%rbx
4a41(7): lea 0x122f0(%rip),%rsi
4a48(5): mov $0x5,%edx
4a4d(2): xor %edi,%edi
4a4f(5): call 0xffffe081(%rip)
4a54(3): mov %rbx,%rsi
4a57(3): mov %rax,%rdi
4a5a(5): call 0xffffe256(%rip)
4a5f(7): mov 0x218682(%rip),%rbx
4a66(7): lea 0x124c3(%rip),%rsi
4a6d(5): mov $0x5,%edx
4a72(2): xor %edi,%edi
4a74(5): call 0xffffe05c(%rip)
4a79(3): mov %rbx,%rsi
4a7c(3): mov %rax,%rdi
4a7f(5): call 0xffffe231(%rip)
4a84(7): mov 0x21865d(%rip),%rbx
4a8b(7): lea 0x125fe(%rip),%rsi
4a92(5): mov $0x5,%edx
4a97(2): xor %edi,%edi
4a99(5): call 0xffffe037(%rip)
4a9e(3): mov %rbx,%rsi
4aa1(3): mov %rax,%rdi
4aa4(5): call 0xffffe20c(%rip)
4aa9(7): mov 0x218638(%rip),%rbx
4ab0(7): lea 0x12609(%rip),%rsi
4ab7(5): mov $0x5,%edx
4abc(2): xor %edi,%edi
4abe(5): call 0xffffe012(%rip)
4ac3(3): mov %rbx,%rsi
4ac6(3): mov %rax,%rdi
4ac9(5): call 0xffffe1e7(%rip)
4ace(7): mov 0x218613(%rip),%rbx
4ad5(7): lea 0x1261c(%rip),%rsi
4adc(5): mov $0x5,%edx
4ae1(2): xor %edi,%edi
4ae3(5): call 0xffffdfed(%rip)
4ae8(3): mov %rbx,%rsi
4aeb(3): mov %rax,%rdi
4aee(5): call 0xffffe1c2(%rip)
4af3(7): mov 0x2185ee(%rip),%rbx
4afa(7): lea 0x126d7(%rip),%rsi
4b01(5): mov $0x5,%edx
4b06(2): xor %edi,%edi
4b08(5): call 0xffffdfc8(%rip)
4b0d(3): mov %rbx,%rsi
4b10(3): mov %rax,%rdi
4b13(7): lea 0x1196e(%rip),%rbx
4b1a(5): call 0xffffe196(%rip)
4b1f(7): lea 0x1196a(%rip),%rax
4b26(7): lea 0x119a4(%rip),%rcx
4b2d(9): mov $0x0,0x60(%rsp)
4b36(9): mov $0x0,0x68(%rsp)
4b3f(3): mov %rsp,%rdx
4b42(4): mov %rax,(%rsp)
4b46(7): lea 0x11945(%rip),%rax
4b4d(5): mov %rcx,0x30(%rsp)
4b52(7): lea 0x11982(%rip),%rcx
4b59(5): mov %rax,0x8(%rsp)
4b5e(7): lea 0x119a5(%rip),%rax
4b65(5): mov %rcx,0x40(%rsp)
4b6a(7): lea 0x11974(%rip),%rcx
4b71(5): mov %rax,0x10(%rsp)
4b76(7): lea 0x11925(%rip),%rax
4b7d(5): mov %rcx,0x50(%rsp)
4b82(5): mov %rax,0x18(%rsp)
4b87(7): lea 0x1192a(%rip),%rax
4b8e(5): mov %rax,0x20(%rsp)
4b93(7): lea 0x11928(%rip),%rax
4b9a(5): mov %rax,0x28(%rsp)
4b9f(5): mov %rax,0x38(%rsp)
4ba4(5): mov %rax,0x48(%rsp)
4ba9(5): mov %rax,0x58(%rsp)
4bae(2): nop 
4bb0(4): add $0x10,%rdx
4bb4(3): mov (%rdx),%rdi
4bb7(3): test %rdi,%rdi
4bba(2): jz 0x15(%rip)
4bbc(5): mov $0x8,%ecx
4bc1(3): mov %rbx,%rsi
4bc4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4bc6(3): setnbe %al
4bc9(2): sbb $0x0,%al
4bcb(2): test %al,%al
4bcd(2): jnz 0xffffffe3(%rip)
4bcf(4): mov 0x8(%rdx),%r12
4bd3(2): xor %edi,%edi
4bd5(5): mov $0x5,%edx
4bda(7): lea 0x1190e(%rip),%rsi
4be1(3): test %r12,%r12
4be4(6): jz 0xc7(%rip)
4bea(5): call 0xffffdee6(%rip)
4bef(7): lea 0x126c2(%rip),%rcx
4bf6(7): lea 0x11909(%rip),%rdx
4bfd(3): mov %rax,%rsi
4c00(5): mov $0x1,%edi
4c05(2): xor %eax,%eax
4c07(5): call 0xffffe2d9(%rip)
4c0c(2): xor %esi,%esi
4c0e(5): mov $0x5,%edi
4c13(5): call 0xffffe2bd(%rip)
4c18(3): test %rax,%rax
4c1b(2): jz 0x1e(%rip)
4c1d(7): lea 0x118f0(%rip),%rsi
4c24(5): mov $0x3,%edx
4c29(3): mov %rax,%rdi
4c2c(5): call 0xffffdd44(%rip)
4c31(2): test %eax,%eax
4c33(6): jnz 0x10d(%rip)
4c39(7): lea 0x118d8(%rip),%rsi
4c40(2): xor %edi,%edi
4c42(5): mov $0x5,%edx
4c47(5): call 0xffffde89(%rip)
4c4c(7): lea 0x11835(%rip),%rcx
4c53(7): lea 0x1265e(%rip),%rdx
4c5a(3): mov %rax,%rsi
4c5d(5): mov $0x1,%edi
4c62(2): xor %eax,%eax
4c64(5): call 0xffffe27c(%rip)
4c69(3): cmp %rbx,%r12
4c6c(7): lea 0x11839(%rip),%rcx
4c73(7): lea 0x1334f(%rip),%rbx
4c7a(4): cmove %rcx,%rbx
4c7e(7): lea 0x126a3(%rip),%rsi
4c85(2): xor %edi,%edi
4c87(5): mov $0x5,%edx
4c8c(5): call 0xffffde44(%rip)
4c91(3): mov %rbx,%rcx
4c94(3): mov %rax,%rsi
4c97(3): mov %r12,%rdx
4c9a(5): mov $0x1,%edi
4c9f(2): xor %eax,%eax
4ca1(5): call 0xffffe23f(%rip)
4ca6(5): jmp 0xfffffcd0(%rip)
4cab(5): call 0xffffde25(%rip)
4cb0(7): lea 0x12601(%rip),%rcx
4cb7(7): lea 0x11848(%rip),%rdx
4cbe(3): mov %rax,%rsi
4cc1(5): mov $0x1,%edi
4cc6(2): xor %eax,%eax
4cc8(5): call 0xffffe218(%rip)
4ccd(2): xor %esi,%esi
4ccf(5): mov $0x5,%edi
4cd4(5): call 0xffffe1fc(%rip)
4cd9(3): test %rax,%rax
4cdc(2): jz 0x1a(%rip)
4cde(7): lea 0x1182f(%rip),%rsi
4ce5(5): mov $0x3,%edx
4cea(3): mov %rax,%rdi
4ced(5): call 0xffffdc83(%rip)
4cf2(2): test %eax,%eax
4cf4(2): jnz 0x45(%rip)
4cf6(7): lea 0x1181b(%rip),%rsi
4cfd(5): mov $0x5,%edx
4d02(2): xor %edi,%edi
4d04(7): lea 0x1177d(%rip),%r12
4d0b(7): lea 0x1179a(%rip),%rbx
4d12(5): call 0xffffddbe(%rip)
4d17(7): lea 0x1176a(%rip),%rcx
4d1e(7): lea 0x12593(%rip),%rdx
4d25(3): mov %rax,%rsi
4d28(5): mov $0x1,%edi
4d2d(2): xor %eax,%eax
4d2f(5): call 0xffffe1b1(%rip)
4d34(5): jmp 0xffffff4a(%rip)
4d39(7): lea 0x11748(%rip),%r12
4d40(7): mov 0x2183a1(%rip),%r13
4d47(7): lea 0x12592(%rip),%rsi
4d4e(2): xor %edi,%edi
4d50(5): mov $0x5,%edx
4d55(5): call 0xffffdd7b(%rip)
4d5a(3): mov %r13,%rsi
4d5d(3): mov %rax,%rdi
4d60(5): call 0xffffdf50(%rip)
4d65(5): jmp 0xfffffed4(%rip)

"prog_fprintf" :
4d70(1): push %rbp
4d71(1): push %rbx
4d72(3): mov %rsi,%rbp
4d75(3): mov %rdi,%rbx
4d78(7): sub $0xd8,%rsp
4d7f(2): test %al,%al
4d81(5): mov %rdx,0x30(%rsp)
4d86(5): mov %rcx,0x38(%rsp)
4d8b(5): mov %r8,0x40(%rsp)
4d90(5): mov %r9,0x48(%rsp)
4d95(2): jz 0x39(%rip)
4d97(5): movaps %xmm0,0x50(%rsp)
4d9c(5): movaps %xmm1,0x60(%rsp)
4da1(5): movaps %xmm2,0x70(%rsp)
4da6(8): movaps %xmm3,0x80(%rsp)
4dae(8): movaps %xmm4,0x90(%rsp)
4db6(8): movaps %xmm5,0xa0(%rsp)
4dbe(8): movaps %xmm6,0xb0(%rsp)
4dc6(8): movaps %xmm7,0xc0(%rsp)
4dce(3): mov %rbx,%rsi
4dd1(9): mov $0x28,%rax
4dda(5): mov %rax,0x18(%rsp)
4ddf(2): xor %eax,%eax
4de1(7): mov 0x21a7d8(%rip),%rdi
4de8(5): call 0xffffdec8(%rip)
4ded(7): lea 0x128b2(%rip),%rdi
4df4(3): mov %rbx,%rcx
4df7(5): mov $0x2,%edx
4dfc(5): mov $0x1,%esi
4e01(5): call 0xffffe06f(%rip)
4e06(8): lea 0xf0(%rsp),%rax
4e0e(3): mov %rsp,%rdx
4e11(3): mov %rbp,%rsi
4e14(3): mov %rbx,%rdi
4e17(7): mov $0x10,(%rsp)
4e1e(8): mov $0x30,0x4(%rsp)
4e26(5): mov %rax,0x8(%rsp)
4e2b(5): lea 0x20(%rsp),%rax
4e30(5): mov %rax,0x10(%rsp)
4e35(5): call 0xda8b(%rip)
4e3a(4): mov 0x28(%rbx),%rax
4e3e(4): cmp 0x30(%rbx),%rax
4e42(2): jnb 0x2e(%rip)
4e44(4): lea 0x1(%rax),%rdx
4e48(4): mov %rdx,0x28(%rbx)
4e4c(3): mov $0xa,(%rax)
4e4f(5): mov 0x18(%rsp),%rax
4e54(9): xor $0x28,%rax
4e5d(2): jnz 0x22(%rip)
4e5f(7): add $0xd8,%rsp
4e66(1): pop %rbx
4e67(1): pop %rbp
4e68(1): ret near (%rsp)
4e69(7): nop 0x0(%rax)
4e70(5): mov $0xa,%esi
4e75(3): mov %rbx,%rdi
4e78(5): call 0xffffdd18(%rip)
4e7d(2): jmp 0xffffffd2(%rip)
4e7f(5): call 0xffffdcb1(%rip)

"writable_destination" :
4e90(6): and $0xf000,%esi
4e96(6): cmp $0xa000,%esi
4e9c(2): jz 0x1c(%rip)
4e9e(1): push %rbx
4e9f(3): mov %rdi,%rbx
4ea2(5): call 0xd12e(%rip)
4ea7(2): test %al,%al
4ea9(2): jz 0x17(%rip)
4eab(5): mov $0x1,%eax
4eb0(1): pop %rbx
4eb1(1): ret near (%rsp)
4eb2(6): nop 0x0(%rax,%rax,1)
4eb8(5): mov $0x1,%eax
4ebd(1): ret near (%rsp)
4ebe(2): nop 
4ec0(3): mov %rbx,%rdi
4ec3(5): mov $0x2,%esi
4ec8(5): call 0xffffe108(%rip)
4ecd(2): test %eax,%eax
4ecf(3): setz %al
4ed2(1): pop %rbx
4ed3(1): ret near (%rsp)

"write_zeros" :
4ee0(8): cmp $0x0,0x21a698(%rip)
4ee8(2): push %r12
4eea(3): mov %edi,%r12d
4eed(1): push %rbp
4eee(1): push %rbx
4eef(3): mov %rsi,%rbx
4ef2(2): jz 0x56(%rip)
4ef4(3): test %rbx,%rbx
4ef7(2): jnz 0xe(%rip)
4ef9(2): jmp 0x3f(%rip)
4efb(5): nop 0x0(%rax,%rax,1)
4f00(3): sub %rax,%rbx
4f03(2): jz 0x35(%rip)
4f05(7): cmp %rbx,0x21812c(%rip)
4f0c(3): mov %rbx,%rbp
4f0f(7): mov 0x21a66a(%rip),%rsi
4f16(8): cmovbe 0x21811a(%rip),%rbp
4f1e(3): mov %r12d,%edi
4f21(3): mov %rbp,%rdx
4f24(5): call 0x6a0c(%rip)
4f29(3): cmp %rbp,%rax
4f2c(2): jz 0xffffffd4(%rip)
4f2e(1): pop %rbx
4f2f(2): xor %eax,%eax
4f31(1): pop %rbp
4f32(2): pop %r12
4f34(1): ret near (%rsp)
4f35(3): nop (%rax)
4f38(1): pop %rbx
4f39(5): mov $0x1,%eax
4f3e(1): pop %rbp
4f3f(2): pop %r12
4f41(1): ret near (%rsp)
4f42(6): nop 0x0(%rax,%rax,1)
4f48(7): mov 0x2180e9(%rip),%rdi
4f4f(5): mov $0x1,%esi
4f54(5): call 0xffffdd7c(%rip)
4f59(3): test %rax,%rax
4f5c(2): jz 0xb(%rip)
4f5e(7): mov %rax,0x21a61b(%rip)
4f65(2): jmp 0xffffff8f(%rip)
4f67(7): lea 0x21a212(%rip),%rax
4f6e(b): mov $0x400,0x2180bf(%rip)
4f79(7): mov %rax,0x21a600(%rip)
4f80(5): jmp 0xffffff74(%rip)

"punch_hole" :
4f90(1): push %rbx
4f91(3): mov %rdx,%rcx
4f94(3): mov %rsi,%rdx
4f97(5): mov $0x3,%esi
4f9c(5): call 0xffffdd04(%rip)
4fa1(2): test %eax,%eax
4fa3(2): mov %eax,%ebx
4fa5(2): js 0xb(%rip)
4fa7(2): mov %ebx,%eax
4fa9(1): pop %rbx
4faa(1): ret near (%rsp)
4fab(5): nop 0x0(%rax,%rax,1)
4fb0(5): call 0xffffd9a0(%rip)
4fb5(2): mov (%rax),%eax
4fb7(3): cmp $0x26,%eax
4fba(2): jz 0x7(%rip)
4fbc(3): cmp $0x5f,%eax
4fbf(2): jnz 0xffffffe8(%rip)
4fc1(2): xor %ebx,%ebx
4fc3(2): mov %ebx,%eax
4fc5(1): pop %rbx
4fc6(1): ret near (%rsp)

"emit_verbose" :
4fd0(2): push %r12
4fd2(1): push %rbp
4fd3(3): mov %rdi,%r12
4fd6(1): push %rbx
4fd7(5): mov $0x1,%edi
4fdc(3): mov %rdx,%rbx
4fdf(3): mov %rsi,%rdx
4fe2(5): mov $0x4,%esi
4fe7(5): call 0xa2e9(%rip)
4fec(2): xor %edi,%edi
4fee(3): mov %r12,%rdx
4ff1(5): mov $0x4,%esi
4ff6(3): mov %rax,%rbp
4ff9(5): call 0xa2d7(%rip)
4ffe(7): lea 0x12cf4(%rip),%rsi
5005(3): mov %rax,%rdx
5008(3): mov %rbp,%rcx
500b(2): xor %eax,%eax
500d(5): mov $0x1,%edi
5012(5): call 0xffffdece(%rip)
5017(3): test %rbx,%rbx
501a(2): jz 0x37(%rip)
501c(3): mov %rbx,%rsi
501f(5): mov $0x4,%edi
5024(5): call 0xa3cc(%rip)
5029(7): lea 0x12cd2(%rip),%rsi
5030(3): mov %rax,%rbx
5033(5): mov $0x5,%edx
5038(2): xor %edi,%edi
503a(5): call 0xffffda96(%rip)
503f(3): mov %rbx,%rdx
5042(3): mov %rax,%rsi
5045(5): mov $0x1,%edi
504a(2): xor %eax,%eax
504c(5): call 0xffffde94(%rip)
5051(7): mov 0x218090(%rip),%rdi
5058(4): mov 0x28(%rdi),%rax
505c(4): cmp 0x30(%rdi),%rax
5060(2): jnb 0x18(%rip)
5062(4): lea 0x1(%rax),%rdx
5066(4): mov %rdx,0x28(%rdi)
506a(3): mov $0xa,(%rax)
506d(1): pop %rbx
506e(1): pop %rbp
506f(2): pop %r12
5071(1): ret near (%rsp)
5072(6): nop 0x0(%rax,%rax,1)
5078(1): pop %rbx
5079(1): pop %rbp
507a(2): pop %r12
507c(5): mov $0xa,%esi
5081(5): jmp 0xffffdb0f(%rip)

"create_hard_link" :
5090(2): push %r13
5092(2): push %r12
5094(4): movzx %dl,%r9d
5098(1): push %rbp
5099(1): push %rbx
509a(5): mov $0xffffff9c,%edx
509f(3): mov %rdi,%r13
50a2(3): mov %rsi,%r12
50a5(2): mov %ecx,%ebp
50a7(4): sub $0x10,%rsp
50ab(3): test %r8b,%r8b
50ae(3): mov %rsi,%rcx
50b1(4): setnz %r8b
50b5(2): push $0xff
50b7(3): mov %rdi,%rsi
50ba(4): movzx %r8b,%r8d
50be(2): mov %edx,%edi
50c0(4): shl/sal $0xa,%r8d
50c4(5): call 0x53ac(%rip)
50c9(2): test %eax,%eax
50cb(2): mov %eax,%ebx
50cd(1): pop %rdx
50ce(1): pop %rcx
50cf(2): jnle 0x69(%rip)
50d1(3): shr $0x1f,%ebx
50d4(3): and %bpl,%bl
50d7(2): jnz 0x19(%rip)
50d9(4): add $0x8,%rsp
50dd(5): mov $0x1,%ebx
50e2(2): mov %ebx,%eax
50e4(1): pop %rbx
50e5(1): pop %rbp
50e6(2): pop %r12
50e8(2): pop %r13
50ea(1): ret near (%rsp)
50eb(5): nop 0x0(%rax,%rax,1)
50f0(3): mov %r12,%rsi
50f3(5): mov $0x4,%edi
50f8(5): call 0xa2f8(%rip)
50fd(7): lea 0x12c0c(%rip),%rsi
5104(3): mov %rax,%rbp
5107(5): mov $0x5,%edx
510c(2): xor %edi,%edi
510e(5): call 0xffffd9c2(%rip)
5113(3): mov %rbp,%rdx
5116(3): mov %rax,%rsi
5119(5): mov $0x1,%edi
511e(2): xor %eax,%eax
5120(5): call 0xffffddc0(%rip)
5125(4): add $0x8,%rsp
5129(2): mov %ebx,%eax
512b(1): pop %rbx
512c(1): pop %rbp
512d(2): pop %r12
512f(2): pop %r13
5131(1): ret near (%rsp)
5132(6): nop 0x0(%rax,%rax,1)
5138(3): mov %r13,%rdx
513b(5): mov $0x4,%esi
5140(5): mov $0x1,%edi
5145(5): call 0xa18b(%rip)
514a(3): mov %r12,%rdx
514d(5): mov $0x4,%esi
5152(2): xor %edi,%edi
5154(3): mov %rax,%r13
5157(5): call 0xa179(%rip)
515c(7): lea 0x12585(%rip),%rsi
5163(3): mov %rax,%rbp
5166(5): mov $0x5,%edx
516b(2): xor %edi,%edi
516d(5): call 0xffffd963(%rip)
5172(3): mov %r13,%r8
5175(3): mov %rbp,%rcx
5178(3): mov %rax,%rdx
517b(2): mov %ebx,%esi
517d(2): xor %eax,%eax
517f(2): xor %edi,%edi
5181(5): call 0xffffddaf(%rip)
5186(2): xor %ebx,%ebx
5188(4): add $0x8,%rsp
518c(2): mov %ebx,%eax
518e(1): pop %rbx
518f(1): pop %rbp
5190(2): pop %r12
5192(2): pop %r13
5194(1): ret near (%rsp)

"overwrite_ok.isra.12" :
51a0(2): push %r14
51a2(2): push %r13
51a4(3): mov %rdi,%r13
51a7(2): push %r12
51a9(1): push %rbp
51aa(3): mov %rdx,%rbp
51ad(1): push %rbx
51ae(3): mov %rsi,%rbx
51b1(3): mov %rbx,%rdi
51b4(4): sub $0x20,%rsp
51b8(2): mov (%rdx),%esi
51ba(9): mov $0x28,%rax
51c3(5): mov %rax,0x18(%rsp)
51c8(2): xor %eax,%eax
51ca(5): call 0xfffffcc6(%rip)
51cf(2): test %al,%al
51d1(6): jnz 0x97(%rip)
51d7(3): mov 0x0(%rbp),%edi
51da(5): lea 0xc(%rsp),%r12
51df(3): mov %r12,%rsi
51e2(5): call 0x640e(%rip)
51e7(3): mov 0x0(%rbp),%ebp
51ea(3): mov %rbx,%rsi
51ed(5): mov $0x4,%edi
51f2(5): mov $0x0,0x16(%rsp)
51f7(5): call 0xa1f9(%rip)
51fc(6): and $0xfff,%ebp
5202(5): cmp $0x0,0x18(%r13)
5207(3): mov %rax,%r14
520a(7): mov 0x21a3af(%rip),%rbx
5211(5): mov $0x5,%edx
5216(2): jnz 0x10(%rip)
5218(8): test $0xffff00,0x14(%r13)
5220(6): jz 0xb0(%rip)
5226(7): lea 0x124e3(%rip),%rsi
522d(2): xor %edi,%edi
522f(5): call 0xffffd8a1(%rip)
5234(3): mov %rax,%rdx
5237(4): sub $0x8,%rsp
523b(4): add $0x1,%r12
523f(7): mov 0x217eda(%rip),%rdi
5246(2): push %r12
5248(3): mov %rbp,%r9
524b(3): mov %r14,%r8
524e(3): mov %rbx,%rcx
5251(5): mov $0x1,%esi
5256(2): xor %eax,%eax
5258(5): call 0xffffddf8(%rip)
525d(1): pop %rax
525e(1): pop %rdx
525f(2): jmp 0x4f(%rip)
5261(7): nop 0x0(%rax)
5268(3): mov %rbx,%rsi
526b(5): mov $0x4,%edi
5270(5): call 0xa180(%rip)
5275(7): lea 0x12aa0(%rip),%rsi
527c(7): mov 0x21a33d(%rip),%rbx
5283(5): mov $0x5,%edx
5288(2): xor %edi,%edi
528a(3): mov %rax,%rbp
528d(5): call 0xffffd843(%rip)
5292(7): mov 0x217e87(%rip),%rdi
5299(3): mov %rax,%rdx
529c(3): mov %rbp,%r8
529f(3): mov %rbx,%rcx
52a2(5): mov $0x1,%esi
52a7(2): xor %eax,%eax
52a9(5): call 0xffffdda7(%rip)
52ae(5): call 0xd412(%rip)
52b3(5): mov 0x18(%rsp),%rcx
52b8(9): xor $0x28,%rcx
52c1(2): jnz 0x25(%rip)
52c3(4): add $0x20,%rsp
52c7(1): pop %rbx
52c8(1): pop %rbp
52c9(2): pop %r12
52cb(2): pop %r13
52cd(2): pop %r14
52cf(1): ret near (%rsp)
52d0(7): lea 0x12469(%rip),%rsi
52d7(2): xor %edi,%edi
52d9(5): call 0xffffd7f7(%rip)
52de(3): mov %rax,%rdx
52e1(5): jmp 0xffffff56(%rip)
52e6(5): call 0xffffd84a(%rip)

"create_hole" :
52f0(2): push %r13
52f2(2): push %r12
52f4(3): mov %rsi,%r13
52f7(1): push %rbp
52f8(1): push %rbx
52f9(3): mov %edx,%r12d
52fc(3): mov %rcx,%rsi
52ff(5): mov $0x1,%edx
5304(2): mov %edi,%ebp
5306(4): sub $0x8,%rsp
530a(3): mov %rcx,%rbx
530d(5): call 0xffffd8b3(%rip)
5312(3): test %rax,%rax
5315(2): js 0x7b(%rip)
5317(3): test %r12b,%r12b
531a(2): jnz 0x16(%rip)
531c(4): add $0x8,%rsp
5320(5): mov $0x1,%eax
5325(1): pop %rbx
5326(1): pop %rbp
5327(2): pop %r12
5329(2): pop %r13
532b(1): ret near (%rsp)
532c(4): nop 0x0(%rax)
5330(3): sub %rbx,%rax
5333(3): mov %rbx,%rdx
5336(2): mov %ebp,%edi
5338(3): mov %rax,%rsi
533b(5): call 0xfffffc55(%rip)
5340(2): test %eax,%eax
5342(2): jns 0xffffffda(%rip)
5344(3): mov %r13,%rsi
5347(5): mov $0x4,%edi
534c(5): call 0xa0a4(%rip)
5351(7): lea 0x129e7(%rip),%rsi
5358(3): mov %rax,%rbp
535b(5): mov $0x5,%edx
5360(2): xor %edi,%edi
5362(5): call 0xffffd76e(%rip)
5367(3): mov %rax,%rbx
536a(5): call 0xffffd5e6(%rip)
536f(2): mov (%rax),%esi
5371(3): mov %rbp,%rcx
5374(3): mov %rbx,%rdx
5377(2): xor %eax,%eax
5379(2): xor %edi,%edi
537b(5): call 0xffffdbb5(%rip)
5380(4): add $0x8,%rsp
5384(2): xor %eax,%eax
5386(1): pop %rbx
5387(1): pop %rbp
5388(2): pop %r12
538a(2): pop %r13
538c(1): ret near (%rsp)
538d(3): nop (%rax)
5390(3): mov %r13,%rsi
5393(5): mov $0x4,%edi
5398(5): call 0xa058(%rip)
539d(5): mov $0x5,%edx
53a2(3): mov %rax,%rbp
53a5(7): lea 0x12983(%rip),%rsi
53ac(2): jmp 0xffffffb4(%rip)

"sparse_copy" :
53b0(2): push %r15
53b2(2): push %r14
53b4(2): push %r13
53b6(2): push %r12
53b8(1): push %rbp
53b9(1): push %rbx
53ba(4): sub $0x78,%rsp
53be(8): mov 0xb0(%rsp),%rax
53c6(8): mov 0xc8(%rsp),%rbx
53ce(8): mov 0xd0(%rsp),%r10
53d6(5): mov %r9b,0x1f(%rsp)
53db(5): mov %rax,0x58(%rsp)
53e0(8): mov 0xb8(%rsp),%rax
53e8(4): mov $0x0,(%r10)
53ec(5): mov %rbx,0x40(%rsp)
53f1(5): mov %r10,0x60(%rsp)
53f6(7): mov $0x0,(%rbx)
53fd(5): mov %rax,0x10(%rsp)
5402(8): mov 0xc0(%rsp),%rax
540a(3): test %rax,%rax
540d(5): mov %rax,0x28(%rsp)
5412(6): jz 0x3a1(%rip)
5418(3): test %r8,%r8
541b(5): mov %r8,0x50(%rsp)
5420(5): mov %r9d,0x6c(%rsp)
5425(4): cmove %rcx,%r8
5429(5): mov %rcx,0x38(%rsp)
542e(5): mov %rdx,0x20(%rsp)
5433(4): mov %esi,0x18(%rsp)
5437(4): mov %edi,0x68(%rsp)
543b(3): xor %r13d,%r13d
543e(5): mov %r8,0x48(%rsp)
5443(3): xor %r15d,%r15d
5446(5): mov 0x38(%rsp),%rax
544b(5): mov 0x28(%rsp),%rdx
5450(5): mov 0x20(%rsp),%rsi
5455(4): mov 0x68(%rsp),%edi
5459(3): cmp %rdx,%rax
545c(4): cmovbe %rax,%rdx
5460(5): call 0xffffd820(%rip)
5465(3): test %rax,%rax
5468(5): mov %rax,0x30(%rsp)
546d(2): jns 0x63(%rip)
546f(5): call 0xffffd4e1(%rip)
5474(3): cmp $0x4,(%rax)
5477(2): jz 0xffffffcf(%rip)
5479(5): mov 0x58(%rsp),%rsi
547e(5): mov $0x4,%edi
5483(3): mov %rax,%rbx
5486(3): xor %r15d,%r15d
5489(5): call 0x9f67(%rip)
548e(7): lea 0x128c0(%rip),%rsi
5495(5): mov $0x5,%edx
549a(2): xor %edi,%edi
549c(3): mov %rax,%rbp
549f(5): call 0xffffd631(%rip)
54a4(2): mov (%rbx),%esi
54a6(3): mov %rax,%rdx
54a9(3): mov %rbp,%rcx
54ac(2): xor %edi,%edi
54ae(2): xor %eax,%eax
54b0(5): call 0xffffda80(%rip)
54b5(4): add $0x78,%rsp
54b9(3): mov %r15d,%eax
54bc(1): pop %rbx
54bd(1): pop %rbp
54be(2): pop %r12
54c0(2): pop %r13
54c2(2): pop %r14
54c4(2): pop %r15
54c6(1): ret near (%rsp)
54c7(9): nop 0x0(%rax,%rax,1)
54d0(6): jz 0x12f(%rip)
54d6(5): mov 0x40(%rsp),%rax
54db(5): mov 0x30(%rsp),%rbp
54e0(3): mov %r15d,%ecx
54e3(5): mov 0x20(%rsp),%r14
54e8(5): mov 0x48(%rsp),%r10
54ed(3): add %rbp,(%rax)
54f0(6): cmp $0x0,0x50(%rsp)
54f6(3): mov %r14,%r11
54f9(3): mov %r10,%r15
54fc(5): setnz 0x1d(%rsp)
5501(7): nop 0x0(%rax)
5508(3): cmp %r15,%rbp
550b(3): mov %r15,%rbx
550e(4): cmovbe %rbp,%rbx
5512(3): test %rbx,%rbx
5515(4): setnz %r12b
5519(5): and 0x1d(%rsp),%r12b
551e(6): jz 0x112(%rip)
5524(3): mov %r14,%rsi
5527(3): mov %rbx,%rdx
552a(3): cmp $0x0,(%rsi)
552d(6): jnz 0x233(%rip)
5533(4): add $0x1,%rsi
5537(4): sub $0x1,%rdx
553b(6): jz 0x18d(%rip)
5541(3): test $0xf,%dl
5544(2): jnz 0xffffffe6(%rip)
5546(3): mov %r14,%rdi
5549(5): mov %r11,0x8(%rsp)
554e(4): mov %cl,0x1e(%rsp)
5552(5): call 0xffffd73e(%rip)
5557(5): movzx 0x1e(%rsp),%ecx
555c(2): test %eax,%eax
555e(5): mov 0x8(%rsp),%r11
5563(4): setz %r12b
5567(3): mov %r12d,%edx
556a(2): xor %ecx,%edx
556c(2): test %eax,%eax
556e(3): setnz %al
5571(3): test %r13,%r13
5574(4): setnz %r9b
5578(3): and %edx,%r9d
557b(3): cmp %r15,%rbp
557e(6): jnbe 0x15a(%rip)
5584(2): test %al,%al
5586(6): jz 0x152(%rip)
558c(3): test %r9b,%r9b
558f(6): jz 0xab(%rip)
5595(6): mov $0x1,%r15d
559b(2): test %cl,%cl
559d(4): mov %cl,0x1e(%rsp)
55a1(6): jnz 0xb1(%rip)
55a7(4): mov 0x18(%rsp),%edi
55ab(3): mov %r13,%rdx
55ae(3): mov %r11,%rsi
55b1(5): mov %r9b,0x8(%rsp)
55b6(5): call 0x637a(%rip)
55bb(3): cmp %rax,%r13
55be(6): movzx 0x8(%rsp),%r9d
55c4(5): movzx 0x1e(%rsp),%ecx
55c9(6): jnz 0x1a4(%rip)
55cf(3): test %r15d,%r15d
55d2(3): mov %rbx,%r13
55d5(6): jz 0x113(%rip)
55db(3): test %rbx,%rbx
55de(6): jnz 0x122(%rip)
55e4(5): mov 0x30(%rsp),%rdi
55e9(5): sub %rdi,0x28(%rsp)
55ee(3): mov %r12d,%r15d
55f1(5): mov 0x60(%rsp),%rax
55f6(3): mov %r12b,(%rax)
55f9(6): jnz 0xfffffe4d(%rip)
55ff(3): test %r15b,%r15b
5602(6): jz 0x1b1(%rip)
5608(5): movzx 0x6c(%rsp),%edx
560d(5): mov 0x10(%rsp),%rsi
5612(3): mov %r13,%rcx
5615(4): mov 0x18(%rsp),%edi
5619(4): add $0x78,%rsp
561d(1): pop %rbx
561e(1): pop %rbp
561f(2): pop %r12
5621(2): pop %r13
5623(2): pop %r14
5625(2): pop %r15
5627(5): jmp 0xfffffcc9(%rip)
562c(4): nop 0x0(%rax)
5630(3): cmp $0x1,%cl
5633(2): jz 0x55(%rip)
5635(3): cmp %r15,%rbp
5638(2): jnbe 0x50(%rip)
563a(3): add %rbx,%r13
563d(3): xor %r9d,%r9d
5640(2): test %cl,%cl
5642(6): mov $0x1,%r15d
5648(4): mov %cl,0x1e(%rsp)
564c(6): jz 0xffffff5b(%rip)
5652(5): movzx 0x1f(%rsp),%edx
5657(5): mov 0x10(%rsp),%rsi
565c(3): mov %r13,%rcx
565f(4): mov 0x18(%rsp),%edi
5663(5): mov %r9b,0x1e(%rsp)
5668(5): call 0xfffffc88(%rip)
566d(2): test %al,%al
566f(6): movzx 0x1e(%rsp),%r9d
5675(6): jnz 0xffffff5a(%rip)
567b(3): mov %eax,%r15d
567e(5): jmp 0xfffffe37(%rip)
5683(5): nop 0x0(%rax,%rax,1)
5688(3): test %rbx,%rbx
568b(2): jnz 0xd(%rip)
568d(3): mov %ecx,%r12d
5690(2): jmp 0xffffffaa(%rip)
5692(3): mov %r12d,%ecx
5695(3): nop (%rax)
5698(a): mov $0x9223372036854775807,%rax
56a2(3): sub %rbx,%rax
56a5(3): cmp %r13,%rax
56a8(2): jb 0x78(%rip)
56aa(3): add %rbx,%r13
56ad(3): add %rbx,%r14
56b0(3): mov %rbx,%r15
56b3(3): sub %r15,%rbp
56b6(6): jnz 0xfffffe52(%rip)
56bc(3): mov %ecx,%r12d
56bf(5): jmp 0xffffff25(%rip)
56c4(4): nop 0x0(%rax)
56c8(3): mov %ecx,%r9d
56cb(4): xor $0x1,%r9d
56cf(3): test %r13,%r13
56d2(3): setnz %al
56d5(3): and %eax,%r9d
56d8(3): test %r9b,%r9b
56db(2): jz 0xffffffb7(%rip)
56dd(3): xor %r15d,%r15d
56e0(5): jmp 0xfffffebb(%rip)
56e5(3): nop (%rax)
56e8(3): mov %r14,%r11
56eb(3): mov %r12d,%ecx
56ee(3): add %rbx,%r14
56f1(3): mov %rbx,%r15
56f4(2): jmp 0xffffffbf(%rip)
56f6(a): nop 0x0(%rax,%rax,1)
5700(3): xor %r15d,%r15d
5703(3): test %r9b,%r9b
5706(3): mov %r12d,%ecx
5709(3): mov %r14,%r11
570c(2): jnz 0xffffffa7(%rip)
570e(3): add %rbx,%r14
5711(3): mov %rbx,%r15
5714(3): xor %r13d,%r13d
5717(2): jmp 0xffffff9c(%rip)
5719(7): nop 0x0(%rax)
5720(5): mov 0x58(%rsp),%rsi
5725(5): mov $0x4,%edi
572a(3): xor %r15d,%r15d
572d(5): call 0x9cc3(%rip)
5732(7): lea 0x1263e(%rip),%rsi
5739(3): mov %rax,%rbx
573c(5): mov $0x5,%edx
5741(2): xor %edi,%edi
5743(5): call 0xffffd38d(%rip)
5748(3): mov %rbx,%rcx
574b(3): mov %rax,%rdx
574e(2): xor %esi,%esi
5750(2): xor %edi,%edi
5752(2): xor %eax,%eax
5754(5): call 0xffffd7dc(%rip)
5759(5): jmp 0xfffffd5c(%rip)
575e(2): nop 
5760(3): mov %r12d,%eax
5763(2): mov %ecx,%edx
5765(3): xor %r12d,%r12d
5768(5): jmp 0xfffffe09(%rip)
576d(5): mov 0x10(%rsp),%rsi
5772(5): mov $0x4,%edi
5777(3): mov %ecx,%r15d
577a(5): call 0x9c76(%rip)
577f(7): lea 0x125e0(%rip),%rsi
5786(2): xor %edi,%edi
5788(5): mov $0x5,%edx
578d(3): mov %rax,%rbp
5790(5): call 0xffffd340(%rip)
5795(3): mov %rax,%rbx
5798(5): call 0xffffd1b8(%rip)
579d(2): mov (%rax),%esi
579f(3): mov %rbp,%rcx
57a2(3): mov %rbx,%rdx
57a5(2): xor %edi,%edi
57a7(2): xor %eax,%eax
57a9(5): call 0xffffd787(%rip)
57ae(5): jmp 0xfffffd07(%rip)
57b3(6): mov $0x1,%r15d
57b9(5): jmp 0xfffffcfc(%rip)

"set_process_security_ctx" :
57c0(2): push %r13
57c2(2): push %r12
57c4(1): push %rbp
57c5(1): push %rbx
57c6(3): mov %r8,%rbp
57c9(4): sub $0x8,%rsp
57cd(5): cmp $0x0,0x25(%r8)
57d2(2): jz 0x6e(%rip)
57d4(3): mov %rdi,%r13
57d7(5): call 0xffffd179(%rip)
57dc(4): cmp $0x0,0x23(%rbp)
57e0(3): mov %rax,%r12
57e3(2): jnz 0x7d(%rip)
57e5(3): mov %r13,%rsi
57e8(5): mov $0x4,%edi
57ed(8): mov $0x5f,(%r12)
57f5(5): call 0x9bfb(%rip)
57fa(7): lea 0x11f77(%rip),%rsi
5801(5): mov $0x5,%edx
5806(2): xor %edi,%edi
5808(3): mov %rax,%rbx
580b(5): call 0xffffd2c5(%rip)
5810(4): mov (%r12),%esi
5814(3): mov %rbx,%rcx
5817(3): mov %rax,%rdx
581a(2): xor %edi,%edi
581c(2): xor %eax,%eax
581e(5): call 0xffffd712(%rip)
5823(4): movzx 0x26(%rbp),%ebx
5827(4): add $0x8,%rsp
582b(3): xor $0x1,%ebx
582e(2): mov %ebx,%eax
5830(1): pop %rbx
5831(1): pop %rbp
5832(2): pop %r12
5834(2): pop %r13
5836(1): ret near (%rsp)
5837(9): nop 0x0(%rax,%rax,1)
5840(2): mov %ecx,%ebx
5842(4): and 0x21(%r8),%bl
5846(2): jnz 0x32(%rip)
5848(4): add $0x8,%rsp
584c(5): mov $0x1,%ebx
5851(2): mov %ebx,%eax
5853(1): pop %rbx
5854(1): pop %rbp
5855(2): pop %r12
5857(2): pop %r13
5859(1): ret near (%rsp)
585a(6): nop 0x0(%rax,%rax,1)
5860(4): movzx 0x26(%rbp),%ebx
5864(2): test %bl,%bl
5866(6): jnz 0xffffff7f(%rip)
586c(6): mov $0x5f,(%rax)
5872(2): jmp 0xffffffb5(%rip)
5874(4): nop 0x0(%rax)
5878(5): call 0xffffd0d8(%rip)
587d(6): mov $0x5f,(%rax)
5883(4): add $0x8,%rsp
5887(2): mov %ebx,%eax
5889(1): pop %rbx
588a(1): pop %rbp
588b(2): pop %r12
588d(2): pop %r13
588f(1): ret near (%rsp)

"set_file_security_ctx" :
5890(2): push %r12
5892(1): push %rbp
5893(3): mov %rcx,%rbp
5896(1): push %rbx
5897(3): mov %rdi,%r12
589a(5): call 0xffffd0b6(%rip)
589f(4): cmp $0x0,0x23(%rbp)
58a3(3): mov %rax,%rbx
58a6(2): jz 0x8(%rip)
58a8(4): cmp $0x0,0x26(%rbp)
58ac(2): jz 0x4c(%rip)
58ae(3): mov %r12,%rdx
58b1(6): mov $0x5f,(%rbx)
58b7(5): mov $0x4,%esi
58bc(2): xor %edi,%edi
58be(5): call 0x9a12(%rip)
58c3(7): lea 0x11ed6(%rip),%rsi
58ca(5): mov $0x5,%edx
58cf(2): xor %edi,%edi
58d1(3): mov %rax,%rbp
58d4(5): call 0xffffd1fc(%rip)
58d9(2): mov (%rbx),%esi
58db(3): mov %rbp,%rcx
58de(3): mov %rax,%rdx
58e1(2): xor %edi,%edi
58e3(2): xor %eax,%eax
58e5(5): call 0xffffd64b(%rip)
58ea(1): pop %rbx
58eb(2): xor %eax,%eax
58ed(1): pop %rbp
58ee(2): pop %r12
58f0(1): ret near (%rsp)
58f1(7): nop 0x0(%rax)
58f8(6): mov $0x5f,(%rax)
58fe(2): xor %eax,%eax
5900(1): pop %rbx
5901(1): pop %rbp
5902(2): pop %r12
5904(1): ret near (%rsp)

"dest_info_init" :
5910(7): lea 0x7429(%rip),%r8
5917(7): lea 0x73b2(%rip),%rcx
591e(2): xor %esi,%esi
5920(7): lea 0x7369(%rip),%rdx
5927(1): push %rbx
5928(3): mov %rdi,%rbx
592b(5): mov $0x3d,%edi
5930(5): call 0x68f0(%rip)
5935(4): mov %rax,0x40(%rbx)
5939(1): pop %rbx
593a(1): ret near (%rsp)

"src_info_init" :
5940(7): lea 0x73f9(%rip),%r8
5947(7): lea 0x7382(%rip),%rcx
594e(2): xor %esi,%esi
5950(7): lea 0x7369(%rip),%rdx
5957(1): push %rbx
5958(3): mov %rdi,%rbx
595b(5): mov $0x3d,%edi
5960(5): call 0x68c0(%rip)
5965(4): mov %rax,0x48(%rbx)
5969(1): pop %rbx
596a(1): ret near (%rsp)

"cp_options_default" :
5970(4): pxor %xmm0,%xmm0
5974(1): push %rbx
5975(3): mov %rdi,%rbx
5978(3): movups %xmm0,(%rdi)
597b(4): movups %xmm0,0x10(%rdi)
597f(4): movups %xmm0,0x20(%rdi)
5983(4): movups %xmm0,0x30(%rdi)
5987(4): movups %xmm0,0x40(%rdi)
598b(5): call 0xffffd275(%rip)
5990(2): test %eax,%eax
5992(7): mov $0xffffffff,0x34(%rbx)
5999(3): setz %al
599c(3): mov %al,0x1b(%rbx)
599f(3): mov %al,0x1a(%rbx)
59a2(1): pop %rbx
59a3(1): ret near (%rsp)

"chown_failure_ok" :
59b0(1): push %rbx
59b1(3): mov %rdi,%rbx
59b4(5): call 0xffffcf9c(%rip)
59b9(2): mov (%rax),%edx
59bb(3): cmp $0x1,%edx
59be(3): setz %al
59c1(3): cmp $0x16,%edx
59c4(3): setz %dl
59c7(2): or %dl,%al
59c9(2): jz 0x9(%rip)
59cb(4): movzx 0x1a(%rbx),%eax
59cf(3): xor $0x1,%eax
59d2(1): pop %rbx
59d3(1): ret near (%rsp)

"set_owner" :
59e0(2): push %r15
59e2(2): push %r14
59e4(2): push %r13
59e6(2): push %r12
59e8(3): mov %rsi,%r13
59eb(1): push %rbp
59ec(1): push %rbx
59ed(3): mov %rdi,%rbp
59f0(2): mov %edx,%ebx
59f2(4): sub $0x8,%rsp
59f6(3): test %r8b,%r8b
59f9(4): mov 0x1c(%rcx),%r14d
59fd(4): mov 0x20(%rcx),%r12d
5a01(2): jnz 0x34(%rip)
5a03(a): mov $0x71776119061217535,%rax
5a0d(4): test %rax,0x18(%rdi)
5a11(6): jz 0x9f(%rip)
5a17(4): mov 0x18(%r9),%esi
5a1b(3): mov 0x18(%rcx),%edx
5a1e(2): mov %edx,%eax
5a20(2): mov %esi,%ecx
5a22(2): not %eax
5a24(6): and $0xfff,%ecx
5a2a(3): or $0xe,%ah
5a2d(2): test %ecx,%eax
5a2f(6): jnz 0xd1(%rip)
5a35(3): cmp $0xff,%ebx
5a38(3): mov %r12d,%edx
5a3b(3): mov %r14d,%esi
5a3e(2): jz 0x52(%rip)
5a40(2): mov %ebx,%edi
5a42(5): call 0xffffd53e(%rip)
5a47(2): test %eax,%eax
5a49(2): jz 0x53(%rip)
5a4b(5): call 0xffffcf05(%rip)
5a50(3): mov (%rax),%r14d
5a53(3): mov %rax,%r15
5a56(4): cmp $0x1,%r14d
5a5a(6): jz 0x16e(%rip)
5a60(4): cmp $0x16,%r14d
5a64(6): jz 0x164(%rip)
5a6a(3): mov %rbp,%rdi
5a6d(5): call 0xffffff43(%rip)
5a72(2): mov %eax,%edx
5a74(2): xor %eax,%eax
5a76(2): test %dl,%dl
5a78(6): jz 0xf8(%rip)
5a7e(4): add $0x8,%rsp
5a82(1): pop %rbx
5a83(1): pop %rbp
5a84(2): pop %r12
5a86(2): pop %r13
5a88(2): pop %r14
5a8a(2): pop %r15
5a8c(1): ret near (%rsp)
5a8d(3): nop (%rax)
5a90(3): mov %r13,%rdi
5a93(5): call 0xffffd3ad(%rip)
5a98(2): test %eax,%eax
5a9a(2): jnz 0x36(%rip)
5a9c(4): add $0x8,%rsp
5aa0(5): mov $0x1,%eax
5aa5(1): pop %rbx
5aa6(1): pop %rbp
5aa7(2): pop %r12
5aa9(2): pop %r13
5aab(2): pop %r14
5aad(2): pop %r15
5aaf(1): ret near (%rsp)
5ab0(4): cmp $0x0,0x2b(%rdi)
5ab4(6): jz 0xffffff81(%rip)
5aba(4): mov 0x18(%r9),%esi
5abe(3): mov 0x10(%rdi),%edx
5ac1(5): jmp 0xffffff5d(%rip)
5ac6(a): nop 0x0(%rax,%rax,1)
5ad0(5): call 0xffffce80(%rip)
5ad5(2): mov (%rax),%ebx
5ad7(3): mov %rax,%r14
5ada(3): cmp $0x1,%ebx
5add(2): jz 0xb(%rip)
5adf(3): cmp $0x16,%ebx
5ae2(6): jnz 0xffffff88(%rip)
5ae8(3): mov %r12d,%edx
5aeb(5): mov $0xffffffff,%esi
5af0(3): mov %r13,%rdi
5af3(5): call 0xffffd34d(%rip)
5af8(3): mov %ebx,(%r14)
5afb(5): jmp 0xffffff6f(%rip)
5b00(2): and %esi,%edx
5b02(3): mov %r13,%rdi
5b05(2): mov %ebx,%esi
5b07(6): and $0x1c0,%edx
5b0d(5): call 0x7ee3(%rip)
5b12(2): test %eax,%eax
5b14(6): jz 0xffffff21(%rip)
5b1a(5): call 0xffffce36(%rip)
5b1f(3): mov %rax,%rbx
5b22(2): mov (%rax),%eax
5b24(3): cmp $0x1,%eax
5b27(6): jz 0xb9(%rip)
5b2d(3): cmp $0x16,%eax
5b30(6): jz 0xb0(%rip)
5b36(3): mov %r13,%rsi
5b39(5): mov $0x4,%edi
5b3e(5): call 0x98b2(%rip)
5b43(7): lea 0x12241(%rip),%rsi
5b4a(2): xor %edi,%edi
5b4c(5): mov $0x5,%edx
5b51(3): mov %rax,%r12
5b54(5): call 0xffffcf7c(%rip)
5b59(2): mov (%rbx),%esi
5b5b(3): mov %rax,%rdx
5b5e(3): mov %r12,%rcx
5b61(2): xor %edi,%edi
5b63(2): xor %eax,%eax
5b65(5): call 0xffffd3cb(%rip)
5b6a(2): jmp 0x42(%rip)
5b6c(4): nop 0x0(%rax)
5b70(3): mov %r13,%rsi
5b73(5): mov $0x4,%edi
5b78(5): call 0x9878(%rip)
5b7d(7): lea 0x11c4c(%rip),%rsi
5b84(5): mov $0x5,%edx
5b89(2): xor %edi,%edi
5b8b(3): mov %rax,%r12
5b8e(5): call 0xffffcf42(%rip)
5b93(3): mov %rax,%rbx
5b96(5): call 0xffffcdba(%rip)
5b9b(2): mov (%rax),%esi
5b9d(3): mov %r12,%rcx
5ba0(3): mov %rbx,%rdx
5ba3(2): xor %edi,%edi
5ba5(2): xor %eax,%eax
5ba7(5): call 0xffffd389(%rip)
5bac(4): movzx 0x24(%rbp),%eax
5bb0(4): add $0x8,%rsp
5bb4(1): pop %rbx
5bb5(1): pop %rbp
5bb6(2): pop %r12
5bb8(2): neg %eax
5bba(2): pop %r13
5bbc(2): pop %r14
5bbe(2): pop %r15
5bc0(1): ret near (%rsp)
5bc1(7): nop 0x0(%rax)
5bc8(3): mov %r12d,%edx
5bcb(5): mov $0xffffffff,%esi
5bd0(2): mov %ebx,%edi
5bd2(5): call 0xffffd3ae(%rip)
5bd7(3): mov %r14d,(%r15)
5bda(5): jmp 0xfffffe90(%rip)
5bdf(1): nop 
5be0(4): cmp $0x0,0x1b(%rbp)
5be4(6): jnz 0xffffff52(%rip)
5bea(2): jmp 0xffffffc2(%rip)

"cached_umask" :
5bf0(1): push %rbx
5bf1(6): mov 0x217439(%rip),%ebx
5bf7(3): cmp $0xff,%ebx
5bfa(2): jz 0x6(%rip)
5bfc(2): mov %ebx,%eax
5bfe(1): pop %rbx
5bff(1): ret near (%rsp)
5c00(2): xor %edi,%edi
5c02(5): call 0xffffd16e(%rip)
5c07(2): mov %eax,%ebx
5c09(2): mov %eax,%edi
5c0b(6): mov %eax,0x21741f(%rip)
5c11(5): call 0xffffd15f(%rip)
5c16(2): mov %ebx,%eax
5c18(1): pop %rbx
5c19(1): ret near (%rsp)

"copy_internal" :
5c20(1): push %rbp
5c21(3): mov %rsp,%rbp
5c24(2): push %r15
5c26(2): push %r14
5c28(2): push %r13
5c2a(2): push %r12
5c2c(3): mov %edx,%r14d
5c2f(1): push %rbx
5c30(3): mov %r9,%rbx
5c33(7): sub $0x398,%rsp
5c3a(4): mov 0x18(%rbp),%rax
5c3e(4): mov 0x10(%rbp),%r13d
5c42(7): mov %rcx,0xfffffcb8(%rbp)
5c49(4): mov 0x28(%rbp),%rcx
5c4d(7): mov %rdi,0xfffffcf0(%rbp)
5c54(7): mov %rsi,0xfffffcf8(%rbp)
5c5b(7): mov %rax,0xfffffcc8(%rbp)
5c62(4): mov 0x20(%rbp),%rax
5c66(7): mov %rcx,0xfffffce0(%rbp)
5c6d(7): mov %r8,0xfffffcd0(%rbp)
5c74(9): mov $0x28,%rcx
5c7d(4): mov %rcx,0xffffffc8(%rbp)
5c81(2): xor %ecx,%ecx
5c83(3): mov $0x0,(%rax)
5c86(5): movzx 0x18(%r9),%r12d
5c8b(7): mov %rax,0xfffffcc0(%rbp)
5c92(7): mov %r13b,0xfffffceb(%rbp)
5c99(4): mov 0x34(%r9),%r15d
5c9d(3): test %r12b,%r12b
5ca0(2): jz 0x21(%rip)
5ca2(3): test %r15d,%r15d
5ca5(6): js 0x29b(%rip)
5cab(7): mov 0xfffffce0(%rbp),%rax
5cb2(3): test %r15d,%r15d
5cb5(4): setz %r14b
5cb9(3): test %rax,%rax
5cbc(2): jz 0x5(%rip)
5cbe(3): mov %r14b,(%rax)
5cc1(3): test %r15d,%r15d
5cc4(6): jz 0x2b4(%rip)
5cca(4): cmp $0x11,%r15d
5cce(7): mov 0xfffffcf0(%rbp),%r12
5cd5(6): jz 0x803(%rip)
5cdb(4): cmp $0x2,0x4(%rbx)
5cdf(7): lea 0xfffffd80(%rbp),%r10
5ce6(3): mov %r12,%rsi
5ce9(5): mov $0x1,%edi
5cee(3): mov %r10,%rdx
5cf1(6): jz 0x7ff(%rip)
5cf7(5): call 0xffffd0d9(%rip)
5cfc(2): test %eax,%eax
5cfe(3): mov %r12,%rsi
5d01(3): setnz %al
5d04(2): test %al,%al
5d06(6): jnz 0x7ff(%rip)
5d0c(6): mov 0xfffffd98(%rbp),%eax
5d12(6): mov %eax,0xfffffcec(%rbp)
5d18(5): and $0xf000,%eax
5d1d(5): cmp $0x4000,%eax
5d22(6): jz 0xac6(%rip)
5d28(3): test %r13b,%r13b
5d2b(2): jz 0x3f(%rip)
5d2d(4): mov 0x48(%rbx),%rdi
5d31(3): test %rdi,%rdi
5d34(2): jz 0x36(%rip)
5d36(6): mov 0xfffffcec(%rbp),%eax
5d3c(7): lea 0xfffffd80(%rbp),%r10
5d43(5): and $0xf000,%eax
5d48(5): cmp $0x4000,%eax
5d4d(2): jz 0xe(%rip)
5d4f(3): mov (%rbx),%r11d
5d52(3): test %r11d,%r11d
5d55(6): jz 0x913(%rip)
5d5b(7): mov 0xfffffcf0(%rbp),%rsi
5d62(3): mov %r10,%rdx
5d65(5): call 0x579b(%rip)
5d6a(3): mov 0x4(%rbx),%eax
5d6d(a): mov $0x1,0xfffffcd8(%rbp)
5d77(3): cmp $0x4,%eax
5d7a(2): jz 0x14(%rip)
5d7c(3): cmp $0x3,%eax
5d7f(3): setz %al
5d82(3): movzx %al,%eax
5d85(3): and %r13d,%eax
5d88(6): mov %eax,0xfffffcd8(%rbp)
5d8e(3): test %r14b,%r14b
5d91(6): jnz 0x20f(%rip)
5d97(4): cmp $0x11,%r15d
5d9b(6): jz 0x965(%rip)
5da1(6): mov 0xfffffcec(%rbp),%eax
5da7(5): and $0xf000,%eax
5dac(5): cmp $0x8000,%eax
5db1(6): jz 0x8ef(%rip)
5db7(5): cmp $0xa000,%eax
5dbc(6): mov $0x100,%r8d
5dc2(4): setz %r9b
5dc6(5): cmp $0x4000,%eax
5dcb(3): setz %al
5dce(3): or %eax,%r9d
5dd1(4): movzx 0x14(%rbx),%eax
5dd5(3): xor $0x1,%eax
5dd8(3): or %al,%r9b
5ddb(6): jz 0x8c5(%rip)
5de1(7): lea 0xfffffe10(%rbp),%r12
5de8(7): mov 0xfffffcf8(%rbp),%rdx
5def(5): mov $0xffffff9c,%esi
5df4(5): mov $0x1,%edi
5df9(7): mov %r9b,0xfffffcb0(%rbp)
5e00(3): mov %r12,%rcx
5e03(5): call 0xffffcd7d(%rip)
5e08(2): test %eax,%eax
5e0a(8): movzx 0xfffffcb0(%rbp),%r9d
5e12(6): jnz 0x67e(%rip)
5e18(3): xor %r8d,%r8d
5e1b(4): cmp $0x2,0x8(%rbx)
5e1f(2): jz 0x20(%rip)
5e21(7): mov 0xfffffe18(%rbp),%rax
5e28(7): cmp %rax,0xfffffd88(%rbp)
5e2f(6): jz 0x11c9(%rip)
5e35(4): cmp $0x2,0x4(%rbx)
5e39(6): jz 0x1377(%rip)
5e3f(4): cmp $0x0,0x2d(%rbx)
5e43(6): jz 0x9fd(%rip)
5e49(6): mov 0xfffffcec(%rbp),%eax
5e4f(5): and $0xf000,%eax
5e54(5): cmp $0x4000,%eax
5e59(6): jz 0x1427(%rip)
5e5f(2): xor %ecx,%ecx
5e61(4): cmp $0x0,0x1f(%rbx)
5e65(2): jz 0x20(%rip)
5e67(4): cmp $0x0,0x18(%rbx)
5e6b(5): mov $0x1,%ecx
5e70(2): jz 0x15(%rip)
5e72(2): xor %ecx,%ecx
5e74(7): mov 0xfffffd80(%rbp),%rax
5e7b(7): cmp %rax,0xfffffe10(%rbp)
5e82(3): setnz %cl
5e85(7): lea 0xfffffd80(%rbp),%r10
5e8c(7): mov 0xfffffcf8(%rbp),%rdi
5e93(7): lea 0xfffffe10(%rbp),%rsi
5e9a(7): mov %r9b,0xfffffca8(%rbp)
5ea1(7): mov %r8b,0xfffffcb0(%rbp)
5ea8(3): mov %r10,%rdx
5eab(5): call 0xb275(%rip)
5eb0(2): test %eax,%eax
5eb2(8): movzx 0xfffffcb0(%rbp),%r8d
5eba(8): movzx 0xfffffca8(%rbp),%r9d
5ec2(6): js 0xf4e(%rip)
5ec8(7): mov 0xfffffce0(%rbp),%rax
5ecf(3): test %rax,%rax
5ed2(2): jz 0x5(%rip)
5ed4(3): mov $0x1,(%rax)
5ed7(7): mov 0xfffffd80(%rbp),%rdx
5ede(7): mov 0xfffffd88(%rbp),%rsi
5ee5(7): mov 0xfffffcf8(%rbp),%rdi
5eec(5): call 0x40d4(%rip)
5ef1(3): test %rax,%rax
5ef4(6): jz 0x56c(%rip)
5efa(4): movzx 0x2e(%rbx),%ecx
5efe(7): mov 0xfffffcd8(%rbp),%r8d
5f05(5): mov $0x1,%edx
5f0a(7): mov 0xfffffcf8(%rbp),%rsi
5f11(3): mov %rax,%rdi
5f14(5): call 0xfffff17c(%rip)
5f19(2): test %al,%al
5f1b(6): jnz 0x545(%rip)
5f21(4): cmp $0x0,0x25(%rbx)
5f25(6): jnz 0xe0b(%rip)
5f2b(5): nop 0x0(%rax,%rax,1)
5f30(3): xor %r12d,%r12d
5f33(5): jmp 0x533(%rip)
5f38(8): nop 0x0(%rax,%rax,1)
5f40(5): mov $0xffffff9c,%edx
5f45(3): mov %rsi,%rcx
5f48(6): mov $0x1,%r8d
5f4e(3): mov %rdi,%rsi
5f51(2): mov %edx,%edi
5f53(5): call 0x978d(%rip)
5f58(2): test %eax,%eax
5f5a(6): jnz 0xb76(%rip)
5f60(7): mov 0xfffffce0(%rbp),%rax
5f67(3): mov %r12d,%r14d
5f6a(3): test %rax,%rax
5f6d(2): jz 0xb(%rip)
5f6f(3): mov $0x1,(%rax)
5f72(6): nop 0x0(%rax,%rax,1)
5f78(4): cmp $0x0,0x31(%rbx)
5f7c(2): jnz 0x14(%rip)
5f7e(7): mov 0xfffffcf8(%rbp),%r12
5f85(3): xor %r15d,%r15d
5f88(5): jmp 0xfffffd53(%rip)
5f8d(3): nop (%rax)
5f90(3): xor %r15d,%r15d
5f93(5): jmp 0xfffffd95(%rip)
5f98(8): nop 0x0(%rax,%rax,1)
5fa0(3): xor %r9d,%r9d
5fa3(b): mov $0x0,0xfffffcb0(%rbp)
5fae(3): test %r13b,%r13b
5fb1(6): jz 0xbf(%rip)
5fb7(5): cmp $0x0,0x40(%rbx)
5fbc(6): jz 0xb4(%rip)
5fc2(5): movzx 0x18(%rbx),%r12d
5fc7(3): test %r12b,%r12b
5fca(6): jnz 0xa6(%rip)
5fd0(2): mov (%rbx),%edx
5fd2(2): test %edx,%edx
5fd4(6): jnz 0xc84(%rip)
5fda(3): test %r9b,%r9b
5fdd(7): lea 0xfffffe10(%rbp),%rdx
5fe4(6): jz 0x187c(%rip)
5fea(3): mov 0x18(%rdx),%eax
5fed(5): and $0xf000,%eax
5ff2(5): cmp $0xa000,%eax
5ff7(2): jnz 0x79(%rip)
5ff9(4): mov 0x40(%rbx),%rdi
5ffd(7): mov 0xfffffcf8(%rbp),%rsi
6004(5): call 0x558c(%rip)
6009(2): test %al,%al
600b(2): jz 0x65(%rip)
600d(7): mov 0xfffffcf8(%rbp),%rdx
6014(5): mov $0x4,%esi
6019(5): mov $0x1,%edi
601e(5): call 0x92b2(%rip)
6023(7): mov 0xfffffcf0(%rbp),%rdx
602a(2): xor %edi,%edi
602c(5): mov $0x4,%esi
6031(3): mov %rax,%r13
6034(5): call 0x929c(%rip)
6039(7): lea 0x11960(%rip),%rsi
6040(3): mov %rax,%rbx
6043(2): xor %edi,%edi
6045(5): mov $0x5,%edx
604a(5): call 0xffffca86(%rip)
604f(3): mov %r13,%r8
6052(3): mov %rax,%rdx
6055(3): mov %rbx,%rcx
6058(2): xor %esi,%esi
605a(2): xor %edi,%edi
605c(2): xor %eax,%eax
605e(5): call 0xffffced2(%rip)
6063(5): jmp 0x403(%rip)
6068(8): nop 0x0(%rax,%rax,1)
6070(4): cmp $0x0,0x2e(%rbx)
6074(2): jz 0xc(%rip)
6076(4): cmp $0x0,0x18(%rbx)
607a(6): jz 0x5b6(%rip)
6080(3): test %r15d,%r15d
6083(6): jz 0x39d(%rip)
6089(4): cmp $0x0,0x2a(%rbx)
608d(2): jz 0x18(%rip)
608f(6): mov 0xfffffcec(%rbp),%eax
6095(5): and $0xf000,%eax
609a(5): cmp $0x4000,%eax
609f(6): jz 0xbd1(%rip)
60a5(4): movzx 0x18(%rbx),%eax
60a9(2): test %al,%al
60ab(6): jnz 0x4a5(%rip)
60b1(4): cmp $0x0,0x22(%rbx)
60b5(6): jnz 0x1bdb(%rip)
60bb(4): movzx %r14b,%eax
60bf(b): mov $0x0,0xfffffca8(%rbp)
60ca(6): mov %eax,0xfffffce0(%rbp)
60d0(7): mov 0xfffffcec(%rbp),%r12d
60d7(7): and $0xfff,%r12d
60de(4): cmp $0x0,0x2b(%rbx)
60e2(2): jz 0xd(%rip)
60e4(4): mov 0x10(%rbx),%r12d
60e8(7): and $0xfff,%r12d
60ef(4): cmp $0x0,0x1d(%rbx)
60f3(6): jnz 0x625(%rip)
60f9(7): mov 0xfffffcec(%rbp),%r15d
6100(7): and $0xf000,%r15d
6107(7): cmp $0x4000,%r15d
610e(6): jz 0xe42(%rip)
6114(6): mov 0xfffffce0(%rbp),%ecx
611a(6): mov 0xfffffcec(%rbp),%edx
6120(3): mov %rbx,%r8
6123(7): mov 0xfffffcf8(%rbp),%rsi
612a(7): mov 0xfffffcf0(%rbp),%rdi
6131(5): call 0xfffff68f(%rip)
6136(2): test %al,%al
6138(a): mov $0x0,0xfffffca4(%rbp)
6142(6): jz 0xfffffdee(%rip)
6148(4): movzx 0x2c(%rbx),%eax
614c(2): test %al,%al
614e(6): mov %al,0xfffffce0(%rbp)
6154(6): jnz 0x98c(%rip)
615a(4): cmp $0x0,0x17(%rbx)
615e(6): jz 0x134a(%rip)
6164(4): cmp $0x0,0x16(%rbx)
6168(5): mov $0x1,%edx
616d(2): jnz 0xb(%rip)
616f(2): xor %edx,%edx
6171(4): cmp $0x3,0x8(%rbx)
6175(3): setz %dl
6178(7): mov 0xfffffcd8(%rbp),%r8d
617f(7): mov 0xfffffcf8(%rbp),%rsi
6186(2): xor %ecx,%ecx
6188(7): mov 0xfffffcf0(%rbp),%rdi
618f(5): call 0xffffef01(%rip)
6194(2): test %al,%al
6196(6): jz 0xa1a(%rip)
619c(3): xor %r8d,%r8d
619f(7): cmp $0x4000,%r15d
61a6(4): setnz %r15b
61aa(3): test %r14b,%r14b
61ad(2): jnz 0x15(%rip)
61af(4): movzx 0x14(%rbx),%eax
61b3(3): xor $0x1,%eax
61b6(3): and %r15b,%al
61b9(3): mov %eax,%r12d
61bc(6): jnz 0x1d34(%rip)
61c2(3): test %r13b,%r13b
61c5(6): mov $0x1,%r12d
61cb(2): jz 0x57(%rip)
61cd(7): mov $0x0,0xfffffcd0(%rbp)
61d4(5): cmp $0x0,0x40(%rbx)
61d9(2): jz 0x34(%rip)
61db(7): lea 0xffffff30(%rbp),%r12
61e2(7): mov 0xfffffcf8(%rbp),%rsi
61e9(5): mov $0x1,%edi
61ee(7): mov %r8b,0xfffffcd8(%rbp)
61f5(3): mov %r12,%rdx
61f8(5): call 0xffffc908(%rip)
61fd(2): test %eax,%eax
61ff(8): movzx 0xfffffcd8(%rbp),%r8d
6207(6): jz 0x204b(%rip)
620d(7): movzx 0xfffffcd0(%rbp),%eax
6214(8): movzx 0xfffffceb(%rbp),%r12d
621c(6): mov %al,0xfffffceb(%rbp)
6222(4): cmp $0x0,0x17(%rbx)
6226(2): jz 0xb(%rip)
6228(3): test %r15b,%r15b
622b(6): jnz 0x23b(%rip)
6231(3): test %r8b,%r8b
6234(6): jnz 0x232(%rip)
623a(4): cmp $0x0,0x1f(%rbx)
623e(6): jz 0xba(%rip)
6244(7): mov 0xfffffdc8(%rbp),%rax
624b(7): cmp $0x0,0xfffffce0(%rbp)
6252(7): lea 0xffffff30(%rbp),%rsi
6259(7): mov 0xfffffcf8(%rbp),%rdi
6260(7): mov %rax,0xffffff30(%rbp)
6267(7): mov 0xfffffdd0(%rbp),%rax
626e(7): mov %rax,0xffffff38(%rbp)
6275(7): mov 0xfffffdd8(%rbp),%rax
627c(7): mov %rax,0xffffff40(%rbp)
6283(7): mov 0xfffffde0(%rbp),%rax
628a(7): mov %rax,0xffffff48(%rbp)
6291(6): jz 0x1faf(%rip)
6297(5): call 0xb4b9(%rip)
629c(2): test %eax,%eax
629e(2): jz 0x5a(%rip)
62a0(5): call 0xffffc6b0(%rip)
62a5(3): cmp $0x26,(%rax)
62a8(2): jz 0x50(%rip)
62aa(7): mov 0xfffffcf8(%rbp),%rsi
62b1(5): mov $0x4,%edi
62b6(5): call 0x913a(%rip)
62bb(7): lea 0x11c2c(%rip),%rsi
62c2(2): xor %edi,%edi
62c4(5): mov $0x5,%edx
62c9(3): mov %rax,%r13
62cc(5): call 0xffffc804(%rip)
62d1(3): mov %rax,%r15
62d4(5): call 0xffffc67c(%rip)
62d9(2): mov (%rax),%esi
62db(2): xor %edi,%edi
62dd(2): xor %eax,%eax
62df(3): mov %r13,%rcx
62e2(3): mov %r15,%rdx
62e5(5): call 0xffffcc4b(%rip)
62ea(4): cmp $0x0,0x24(%rbx)
62ee(6): jnz 0xfffffc42(%rip)
62f4(4): nop 0x0(%rax)
62f8(7): cmp $0x0,0xfffffce0(%rbp)
62ff(6): jnz 0x167(%rip)
6305(4): cmp $0x0,0x1d(%rbx)
6309(2): jz 0x5e(%rip)
630b(3): test %r14b,%r14b
630e(2): jnz 0x14(%rip)
6310(6): mov 0xfffffe2c(%rbp),%eax
6316(6): cmp %eax,0xfffffd9c(%rbp)
631c(6): jz 0x26ae(%rip)
6322(7): mov 0xfffffcf8(%rbp),%rsi
6329(7): lea 0xfffffd80(%rbp),%rcx
6330(7): lea 0xfffffe10(%rbp),%r9
6337(4): movzx %r14b,%r8d
633b(5): mov $0xffffffff,%edx
6340(3): mov %rbx,%rdi
6343(5): call 0xfffff69d(%rip)
6348(3): cmp $0xff,%eax
634b(6): jz 0xfffffbe5(%rip)
6351(6): mov 0xfffffcec(%rbp),%ecx
6357(2): mov %ecx,%edx
6359(3): and $0xf1,%dh
635c(2): test %eax,%eax
635e(3): cmovne %ecx,%edx
6361(6): mov %edx,0xfffffcec(%rbp)
6367(a): mov $0x71776119061217535,%rax
6371(4): test %rax,0x18(%rbx)
6375(6): jnz 0x209b(%rip)
637b(4): cmp $0x0,0x2b(%rbx)
637f(6): jnz 0x23f6(%rip)
6385(4): test %r14b,0x20(%rbx)
6389(6): jnz 0x26a0(%rip)
638f(6): mov 0xfffffca4(%rbp),%eax
6395(2): test %eax,%eax
6397(6): jnz 0x264a(%rip)
639d(7): cmp $0x0,0xfffffceb(%rbp)
63a4(6): jz 0xc2(%rip)
63aa(6): mov 0xfffffc74(%rbp),%esi
63b0(6): or 0xfffffca4(%rbp),%esi
63b6(7): mov 0xfffffcf8(%rbp),%rdi
63bd(5): call 0xffffcb53(%rip)
63c2(2): test %eax,%eax
63c4(6): jz 0xa2(%rip)
63ca(7): mov 0xfffffcf8(%rbp),%rsi
63d1(5): mov $0x4,%edi
63d6(5): call 0x901a(%rip)
63db(7): lea 0x11b24(%rip),%rsi
63e2(5): mov $0x5,%edx
63e7(2): xor %edi,%edi
63e9(3): mov %rax,%r14
63ec(5): call 0xffffc6e4(%rip)
63f1(3): mov %rax,%r13
63f4(5): call 0xffffc55c(%rip)
63f9(2): mov (%rax),%esi
63fb(3): mov %r14,%rcx
63fe(3): mov %r13,%rdx
6401(2): xor %edi,%edi
6403(2): xor %eax,%eax
6405(5): call 0xffffcb2b(%rip)
640a(4): cmp $0x0,0x24(%rbx)
640e(6): jnz 0xfffffb22(%rip)
6414(2): jmp 0x52(%rip)
6416(a): nop 0x0(%rax,%rax,1)
6420(4): cmp $0x0,0x18(%rbx)
6424(6): jz 0xfffffc97(%rip)
642a(4): cmp $0x0,0x2e(%rbx)
642e(6): jnz 0xb82(%rip)
6434(4): cmp $0x0,0x21(%rbx)
6438(6): jnz 0xb58(%rip)
643e(7): mov 0xfffffce0(%rbp),%rax
6445(3): test %rax,%rax
6448(2): jz 0x5(%rip)
644a(3): mov $0x1,(%rax)
644d(3): test %r13b,%r13b
6450(2): jz 0x10(%rip)
6452(4): cmp $0x0,0x31(%rbx)
6456(6): jz 0xa72(%rip)
645c(4): nop 0x0(%rax)
6460(6): mov $0x1,%r12d
6466(4): mov 0xffffffc8(%rbp),%rsi
646a(9): xor $0x28,%rsi
6473(3): mov %r12d,%eax
6476(6): jnz 0x2cce(%rip)
647c(4): lea 0xffffffd8(%rbp),%rsp
6480(1): pop %rbx
6481(2): pop %r12
6483(2): pop %r13
6485(2): pop %r14
6487(2): pop %r15
6489(1): pop %rbp
648a(1): ret near (%rsp)
648b(5): nop 0x0(%rax,%rax,1)
6490(5): call 0xffffc4c0(%rip)
6495(3): mov %rax,%r9
6498(2): mov (%rax),%eax
649a(3): cmp $0x28,%eax
649d(6): jz 0x5d3(%rip)
64a3(3): cmp $0x2,%eax
64a6(6): mov $0x1,%r8d
64ac(6): jnz 0x5ce(%rip)
64b2(3): xor %r9d,%r9d
64b5(4): cmp $0x11,%r15d
64b9(6): jz 0xfffff962(%rip)
64bf(3): mov %r8d,%r14d
64c2(b): mov $0x0,0xfffffcb0(%rbp)
64cd(5): jmp 0xfffffae1(%rip)
64d2(6): nop 0x0(%rax,%rax,1)
64d8(4): cmp $0x2,0x8(%rbx)
64dc(6): jz 0xfffff84c(%rip)
64e2(5): jmp 0xfffff7f9(%rip)
64e7(9): nop 0x0(%rax,%rax,1)
64f0(5): call 0xffffc610(%rip)
64f5(2): test %eax,%eax
64f7(3): mov %r12,%rsi
64fa(3): setnz %al
64fd(2): test %al,%al
64ff(6): jz 0xfffff80d(%rip)
6505(5): mov $0x4,%edi
650a(5): call 0x8ee6(%rip)
650f(7): lea 0xfedf(%rip),%rsi
6516(3): mov %rax,%r12
6519(5): mov $0x5,%edx
651e(2): xor %edi,%edi
6520(5): call 0xffffc5b0(%rip)
6525(3): mov %rax,%rbx
6528(5): call 0xffffc428(%rip)
652d(2): mov (%rax),%esi
652f(3): mov %r12,%rcx
6532(3): mov %rbx,%rdx
6535(2): xor %edi,%edi
6537(2): xor %eax,%eax
6539(3): xor %r12d,%r12d
653c(5): call 0xffffc9f4(%rip)
6541(5): jmp 0xffffff25(%rip)
6546(a): nop 0x0(%rax,%rax,1)
6550(8): cmp $0x1,0xfffffd90(%rbp)
6558(6): jz 0x1030(%rip)
655e(4): cmp $0x0,0x22(%rbx)
6562(b): mov $0x0,0xfffffca8(%rbp)
656d(2): jz 0xc(%rip)
656f(4): cmp $0x0,0x17(%rbx)
6573(6): jz 0x7c5(%rip)
6579(4): cmp $0x11,%r15d
657d(2): jnz 0x2e(%rip)
657f(7): mov 0xfffffcf8(%rbp),%rsi
6586(7): mov 0xfffffcf0(%rbp),%rdi
658d(5): call 0xffffca13(%rip)
6592(2): test %eax,%eax
6594(6): jz 0xfffffe96(%rip)
659a(5): call 0xffffc3b6(%rip)
659f(3): mov (%rax),%r15d
65a2(3): test %r15d,%r15d
65a5(6): jz 0xfffffe85(%rip)
65ab(4): cmp $0x16,%r15d
65af(6): jz 0x1021(%rip)
65b5(4): cmp $0x12,%r15d
65b9(6): jnz 0x7cf(%rip)
65bf(7): mov 0xfffffcec(%rbp),%r12d
65c6(7): mov 0xfffffcf8(%rbp),%rdi
65cd(7): and $0xf000,%r12d
65d4(7): cmp $0x4000,%r12d
65db(6): jz 0x1065(%rip)
65e1(5): call 0xffffc37f(%rip)
65e6(2): test %eax,%eax
65e8(2): jz 0x13(%rip)
65ea(5): call 0xffffc366(%rip)
65ef(3): cmp $0x2,(%rax)
65f2(3): mov %rax,%r14
65f5(6): jnz 0x1069(%rip)
65fb(7): cmp $0x4000,%r12d
6602(3): setnz %dl
6605(3): and 0x2e(%rbx),%dl
6608(3): mov %edx,%r14d
660b(6): jnz 0x1945(%rip)
6611(a): mov $0x1,0xfffffce0(%rbp)
661b(6): mov $0x1,%r14d
6621(5): jmp 0xfffffaaf(%rip)
6626(a): nop 0x0(%rax,%rax,1)
6630(6): mov 0xfffffcec(%rbp),%eax
6636(5): and $0xf000,%eax
663b(5): cmp $0x4000,%eax
6640(6): jz 0xfffffa40(%rip)
6646(7): mov 0xfffffcb0(%rbp),%rdx
664d(7): mov 0xfffffcf8(%rbp),%rsi
6654(7): mov 0xfffffcf0(%rbp),%rdi
665b(5): call 0xffffe975(%rip)
6660(5): jmp 0xfffffa20(%rip)
6665(3): nop (%rax)
6668(7): mov 0xfffffcf0(%rbp),%rsi
666f(3): mov %r10,%rdx
6672(7): mov %r10,0xfffffcd8(%rbp)
6679(5): call 0x4f17(%rip)
667e(2): test %al,%al
6680(3): mov %eax,%r12d
6683(6): jnz 0xec5(%rip)
6689(4): mov 0x48(%rbx),%rdi
668d(7): mov 0xfffffcd8(%rbp),%r10
6694(5): jmp 0xfffff6c7(%rip)
6699(7): nop 0x0(%rax)
66a0(5): movzx 0x18(%rbx),%r9d
66a5(6): mov $0x100,%r8d
66ab(3): test %r9b,%r9b
66ae(6): jnz 0xfffff733(%rip)
66b4(5): movzx 0x2c(%rbx),%r9d
66b9(3): test %r9b,%r9b
66bc(6): jnz 0xfffff725(%rip)
66c2(5): movzx 0x17(%rbx),%r9d
66c7(3): test %r9b,%r9b
66ca(6): jnz 0xfffff717(%rip)
66d0(3): mov (%rbx),%r10d
66d3(6): mov $0x1,%r9d
66d9(3): test %r10d,%r10d
66dc(6): jnz 0xfffff705(%rip)
66e2(5): movzx 0x15(%rbx),%r9d
66e7(3): xor %r8d,%r8d
66ea(3): test %r9b,%r9b
66ed(4): setnz %r8b
66f1(4): shl/sal $0x8,%r8d
66f5(5): jmp 0xfffff6ec(%rip)
66fa(6): nop 0x0(%rax,%rax,1)
6700(4): cmp $0x2,0x8(%rbx)
6704(6): jnz 0xfffff69d(%rip)
670a(3): xor %r8d,%r8d
670d(3): xor %r9d,%r9d
6710(5): jmp 0xfffff72f(%rip)
6715(3): nop (%rax)
6718(6): mov 0xfffffce0(%rbp),%ecx
671e(6): mov 0xfffffcec(%rbp),%edx
6724(3): mov %rbx,%r8
6727(7): mov 0xfffffcf8(%rbp),%rsi
672e(7): mov 0xfffffcf0(%rbp),%rdi
6735(5): call 0xfffff08b(%rip)
673a(2): test %al,%al
673c(6): jz 0xfffff7f4(%rip)
6742(7): mov 0xfffffcec(%rbp),%r15d
6749(3): mov %r12d,%eax
674c(3): and $0x3f,%eax
674f(6): mov %eax,0xfffffca4(%rbp)
6755(7): and $0xf000,%r15d
675c(7): cmp $0x4000,%r15d
6763(6): jnz 0xfffff9e5(%rip)
6769(7): mov 0xfffffcd0(%rbp),%rax
6770(7): mov 0xfffffd88(%rbp),%rdx
6777(7): mov 0xfffffd80(%rbp),%rcx
677e(3): test %rax,%rax
6781(2): jnz 0x1b(%rip)
6783(5): jmp 0x8fd(%rip)
6788(8): nop 0x0(%rax,%rax,1)
6790(3): mov (%rax),%rax
6793(3): test %rax,%rax
6796(6): jz 0x8ea(%rip)
679c(4): cmp %rdx,0x8(%rax)
67a0(2): jnz 0xfffffff0(%rip)
67a2(4): cmp %rcx,0x10(%rax)
67a6(2): jnz 0xffffffea(%rip)
67a8(7): mov 0xfffffcf0(%rbp),%rsi
67af(5): mov $0x4,%edi
67b4(5): call 0x8c3c(%rip)
67b9(7): lea 0x113c8(%rip),%rsi
67c0(3): mov %rax,%r12
67c3(5): mov $0x5,%edx
67c8(2): xor %edi,%edi
67ca(5): call 0xffffc306(%rip)
67cf(3): mov %r12,%rcx
67d2(3): mov %rax,%rdx
67d5(2): xor %esi,%esi
67d7(2): xor %edi,%edi
67d9(2): xor %eax,%eax
67db(5): call 0xffffc755(%rip)
67e0(5): jmp 0x3d0(%rip)
67e5(3): nop (%rax)
67e8(5): movzx 0x2a(%rbx),%r12d
67ed(3): test %r12b,%r12b
67f0(6): jnz 0xfffff538(%rip)
67f6(7): mov 0xfffffcf0(%rbp),%rsi
67fd(5): mov $0x4,%edi
6802(5): call 0x8bee(%rip)
6807(4): cmp $0x0,0x19(%rbx)
680b(3): mov %rax,%r13
680e(5): mov $0x5,%edx
6813(6): jnz 0xd9d(%rip)
6819(7): lea 0x10fd8(%rip),%rsi
6820(2): xor %edi,%edi
6822(5): call 0xffffc2ae(%rip)
6827(3): mov %rax,%rdx
682a(3): mov %r13,%rcx
682d(2): xor %esi,%esi
682f(2): xor %edi,%edi
6831(2): xor %eax,%eax
6833(5): call 0xffffc6fd(%rip)
6838(5): jmp 0xfffffc2e(%rip)
683d(3): nop (%rax)
6840(4): cmp $0x0,0x18(%rbx)
6844(6): jnz 0x5dc(%rip)
684a(6): mov 0xfffffcec(%rbp),%eax
6850(5): and $0xf000,%eax
6855(5): cmp $0x4000,%eax
685a(2): jz 0x56(%rip)
685c(3): mov 0x8(%rbx),%eax
685f(3): cmp $0x2,%eax
6862(6): jz 0xfffffbfe(%rip)
6868(3): cmp $0x3,%eax
686b(2): jnz 0x45(%rip)
686d(7): mov 0xfffffcf8(%rbp),%rsi
6874(7): lea 0xfffffe28(%rbp),%rdx
687b(3): mov %rbx,%rdi
687e(7): mov %r9b,0xfffffca8(%rbp)
6885(7): mov %r8b,0xfffffcb0(%rbp)
688c(5): call 0xffffe914(%rip)
6891(2): test %al,%al
6893(8): movzx 0xfffffcb0(%rbp),%r8d
689b(8): movzx 0xfffffca8(%rbp),%r9d
68a3(6): jz 0xfffffbbd(%rip)
68a9(7): nop 0x0(%rax)
68b0(3): test %r14b,%r14b
68b3(6): jnz 0xfffffbad(%rip)
68b9(6): mov 0xfffffe28(%rbp),%eax
68bf(7): mov 0xfffffcec(%rbp),%r12d
68c6(2): mov %eax,%edx
68c8(7): and $0xf000,%r12d
68cf(6): and $0xf000,%edx
68d5(6): cmp $0x4000,%edx
68db(6): jz 0x615(%rip)
68e1(7): cmp $0x4000,%r12d
68e8(6): jz 0x12a0(%rip)
68ee(3): test %r13b,%r13b
68f1(3): mov (%rbx),%r15d
68f4(6): jz 0xb1f(%rip)
68fa(4): cmp $0x3,%r15d
68fe(6): jnz 0xab2(%rip)
6904(4): cmp $0x0,0x18(%rbx)
6908(6): jnz 0x129f(%rip)
690e(7): mov 0xfffffcf0(%rbp),%rdi
6915(7): mov %r9b,0xfffffca8(%rbp)
691c(7): mov %r8b,0xfffffcb0(%rbp)
6923(5): call 0x4a7d(%rip)
6928(3): cmp $0x2e,(%rax)
692b(3): mov %rax,%r14
692e(8): movzx 0xfffffcb0(%rbp),%r8d
6936(8): movzx 0xfffffca8(%rbp),%r9d
693e(2): jnz 0x29(%rip)
6940(2): xor %eax,%eax
6942(2): xor %edx,%edx
6944(5): cmp $0x2e,0x1(%r14)
6949(3): setz %dl
694c(6): movzx 0x1(%r14,%rdx,1),%edx
6952(2): test %dl,%dl
6954(6): jz 0xad4(%rip)
695a(3): cmp $0x2f,%dl
695d(6): jz 0xacb(%rip)
6963(2): test %al,%al
6965(2): jnz 0x18(%rip)
6967(6): mov 0xfffffe28(%rbp),%eax
696d(5): and $0xf000,%eax
6972(5): cmp $0x4000,%eax
6977(6): jz 0xad0(%rip)
697d(4): cmp $0x3,%r15d
6981(2): jz 0x68(%rip)
6983(3): mov %r14,%rdi
6986(7): mov %r9b,0xfffffca4(%rbp)
698d(5): call 0xffffc163(%rip)
6992(7): mov 0xfffffcf8(%rbp),%rdi
6999(7): mov %rax,0xfffffcb0(%rbp)
69a0(5): call 0x4a00(%rip)
69a5(3): mov %rax,%rdi
69a8(7): mov %rax,0xfffffca8(%rbp)
69af(5): call 0xffffc141(%rip)
69b4(7): mov 0x218be5(%rip),%r15
69bb(3): mov %rax,%r12
69be(3): mov %r15,%rdi
69c1(5): call 0xffffc12f(%rip)
69c6(3): mov %rax,%r8
69c9(4): lea 0x0(%r12,%rax,1),%rax
69cd(7): cmp %rax,0xfffffcb0(%rbp)
69d4(7): mov 0xfffffca8(%rbp),%rsi
69db(8): movzx 0xfffffca4(%rbp),%r9d
69e3(6): jz 0x1a5b(%rip)
69e9(2): mov (%rbx),%edx
69eb(7): mov 0xfffffcf8(%rbp),%rsi
69f2(5): mov $0xffffff9c,%edi
69f7(7): mov %r9b,0xfffffcb0(%rbp)
69fe(5): call 0x4582(%rip)
6a03(3): test %rax,%rax
6a06(3): mov %rax,%r12
6a09(8): movzx 0xfffffcb0(%rbp),%r9d
6a11(6): jz 0x1920(%rip)
6a17(3): mov %rax,%rdi
6a1a(7): mov %r9b,0xfffffca8(%rbp)
6a21(6): mov $0x1,%r14d
6a27(5): call 0xffffc0c9(%rip)
6a2c(4): lea 0x1(%rax),%rdx
6a30(4): add $0x1f,%rax
6a34(3): mov %r12,%rsi
6a37(4): and $0xfffffff0,%rax
6a3b(6): mov $0x11,%r15d
6a41(3): sub %rax,%rsp
6a44(5): lea 0xf(%rsp),%rdi
6a49(4): and $0xfffffff0,%rdi
6a4d(5): call 0xffffc333(%rip)
6a52(3): mov %r12,%rdi
6a55(7): mov %rax,0xfffffcb0(%rbp)
6a5c(5): call 0xffffc674(%rip)
6a61(8): movzx 0xfffffca8(%rbp),%r9d
6a69(5): jmp 0xfffff545(%rip)
6a6e(2): nop 
6a70(4): cmp $0x0,0x16(%rbx)
6a74(6): jnz 0x38c(%rip)
6a7a(7): mov 0xfffffcf8(%rbp),%rsi
6a81(5): mov $0x4,%edi
6a86(7): mov %r9,0xfffffcf0(%rbp)
6a8d(3): xor %r12d,%r12d
6a90(5): call 0x8960(%rip)
6a95(7): lea 0xf959(%rip),%rsi
6a9c(5): mov $0x5,%edx
6aa1(2): xor %edi,%edi
6aa3(3): mov %rax,%rbx
6aa6(5): call 0xffffc02a(%rip)
6aab(7): mov 0xfffffcf0(%rbp),%r9
6ab2(3): mov %rax,%rdx
6ab5(3): mov %rbx,%rcx
6ab8(2): xor %edi,%edi
6aba(2): xor %eax,%eax
6abc(3): mov (%r9),%esi
6abf(5): call 0xffffc471(%rip)
6ac4(5): jmp 0xfffff9a2(%rip)
6ac9(7): nop 0x0(%rax)
6ad0(5): call 0xffffbe80(%rip)
6ad5(3): mov (%rax),%r15d
6ad8(5): jmp 0xfffff1d3(%rip)
6add(3): nop (%rax)
6ae0(7): mov 0xfffffcf0(%rbp),%rax
6ae7(3): cmp $0x2f,(%rax)
6aea(2): jz 0x3a(%rip)
6aec(7): mov 0xfffffcf8(%rbp),%rdi
6af3(5): call 0x47cd(%rip)
6af8(7): lea 0x11364(%rip),%r8
6aff(3): mov %rax,%rdi
6b02(5): mov $0x2,%ecx
6b07(3): mov %rax,%r12
6b0a(3): mov %r8,%rsi
6b0d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6b0f(3): setnbe %al
6b12(2): sbb $0x0,%al
6b14(2): test %al,%al
6b16(6): jnz 0x12e2(%rip)
6b1c(3): mov %r12,%rdi
6b1f(5): call 0xffffc5b1(%rip)
6b24(4): movzx 0x16(%rbx),%ecx
6b28(7): mov 0xfffffcf8(%rbp),%rdx
6b2f(6): mov $0xffffffff,%r8d
6b35(7): mov 0xfffffcf0(%rbp),%rdi
6b3c(5): mov $0xffffff9c,%esi
6b41(5): call 0x3a9f(%rip)
6b46(3): xor %r8d,%r8d
6b49(2): test %eax,%eax
6b4b(3): mov %eax,%r12d
6b4e(6): jle 0xfffff651(%rip)
6b54(7): mov 0xfffffcf0(%rbp),%rdx
6b5b(5): mov $0x4,%esi
6b60(5): mov $0x1,%edi
6b65(5): call 0x876b(%rip)
6b6a(7): mov 0xfffffcf8(%rbp),%rdx
6b71(5): mov $0x4,%esi
6b76(2): xor %edi,%edi
6b78(3): mov %rax,%r13
6b7b(5): call 0x8755(%rip)
6b80(7): lea 0x10f59(%rip),%rsi
6b87(3): mov %rax,%r14
6b8a(5): mov $0x5,%edx
6b8f(2): xor %edi,%edi
6b91(5): call 0xffffbf3f(%rip)
6b96(3): mov %r13,%r8
6b99(3): mov %rax,%rdx
6b9c(3): mov %r14,%rcx
6b9f(3): mov %r12d,%esi
6ba2(2): xor %edi,%edi
6ba4(2): xor %eax,%eax
6ba6(5): call 0xffffc38a(%rip)
6bab(5): nop 0x0(%rax,%rax,1)
6bb0(4): cmp $0x0,0x25(%rbx)
6bb4(6): jnz 0x17c(%rip)
6bba(8): cmp $0x0,0xfffffca8(%rbp)
6bc2(6): jz 0x89e(%rip)
6bc8(7): mov 0xfffffcb0(%rbp),%rax
6bcf(3): test %rax,%rax
6bd2(6): jz 0xfffff35e(%rip)
6bd8(7): mov 0xfffffcf8(%rbp),%rsi
6bdf(3): mov %rax,%rdi
6be2(5): call 0xffffc3be(%rip)
6be7(2): test %eax,%eax
6be9(6): jnz 0x897(%rip)
6bef(4): cmp $0x0,0x2e(%rbx)
6bf3(6): jz 0xfffff33d(%rip)
6bf9(7): mov 0xfffffcf8(%rbp),%rdx
6c00(5): mov $0x4,%esi
6c05(5): mov $0x1,%edi
6c0a(5): call 0x86c6(%rip)
6c0f(7): mov 0xfffffcb0(%rbp),%rdx
6c16(2): xor %edi,%edi
6c18(5): mov $0x4,%esi
6c1d(3): mov %rax,%r12
6c20(5): call 0x86b0(%rip)
6c25(7): lea 0x11389(%rip),%rsi
6c2c(3): mov %rax,%rbx
6c2f(2): xor %edi,%edi
6c31(5): mov $0x5,%edx
6c36(5): call 0xffffbe9a(%rip)
6c3b(3): mov %r12,%rcx
6c3e(3): mov %rax,%rsi
6c41(3): mov %rbx,%rdx
6c44(5): mov $0x1,%edi
6c49(2): xor %eax,%eax
6c4b(5): call 0xffffc295(%rip)
6c50(5): jmp 0xfffff2e0(%rip)
6c55(3): nop (%rax)
6c58(4): cmp $0x0,0x2e(%rbx)
6c5c(6): jnz 0xfffff9d4(%rip)
6c62(3): test %r15d,%r15d
6c65(6): jz 0xfffff456(%rip)
6c6b(5): jmp 0xfffff41e(%rip)
6c70(3): test %r13b,%r13b
6c73(7): mov 0xfffffd80(%rbp),%rdx
6c7a(7): mov 0xfffffd88(%rbp),%rdi
6c81(6): jz 0x8af(%rip)
6c87(3): mov %rdi,%rsi
6c8a(7): mov 0xfffffcf8(%rbp),%rdi
6c91(5): call 0x332f(%rip)
6c96(7): mov %rax,0xfffffca8(%rbp)
6c9d(8): cmp $0x0,0xfffffca8(%rbp)
6ca5(6): jz 0x4fb(%rip)
6cab(7): mov 0xfffffca8(%rbp),%rsi
6cb2(7): mov 0xfffffcf0(%rbp),%rdi
6cb9(5): call 0x8f27(%rip)
6cbe(2): test %al,%al
6cc0(6): jz 0xf40(%rip)
6cc6(7): mov 0x2188bb(%rip),%rdx
6ccd(5): mov $0x4,%esi
6cd2(5): mov $0x1,%edi
6cd7(5): call 0x85f9(%rip)
6cdc(7): mov 0x2188ad(%rip),%rdx
6ce3(5): mov $0x4,%esi
6ce8(2): xor %edi,%edi
6cea(3): mov %rax,%r13
6ced(5): call 0x85e3(%rip)
6cf2(7): lea 0x10cdf(%rip),%rsi
6cf9(3): mov %rax,%r12
6cfc(5): mov $0x5,%edx
6d01(2): xor %edi,%edi
6d03(5): call 0xffffbdcd(%rip)
6d08(3): mov %r13,%r8
6d0b(3): mov %rax,%rdx
6d0e(3): mov %r12,%rcx
6d11(2): xor %eax,%eax
6d13(2): xor %esi,%esi
6d15(2): xor %edi,%edi
6d17(5): call 0xffffc219(%rip)
6d1c(7): mov 0xfffffcc0(%rbp),%rax
6d23(3): mov $0x1,(%rax)
6d26(4): cmp $0x0,0x25(%rbx)
6d2a(6): jz 0xfffffe9e(%rip)
6d30(5): call 0xffffc3c6(%rip)
6d35(3): nop (%rax)
6d38(8): cmp $0x1,0xfffffd90(%rbp)
6d40(6): jnbe 0x3e8(%rip)
6d46(3): test %r13b,%r13b
6d49(3): mov 0x4(%rbx),%edx
6d4c(2): jz 0xb(%rip)
6d4e(3): cmp $0x3,%edx
6d51(6): jz 0x3d7(%rip)
6d57(3): cmp $0x4,%edx
6d5a(b): mov $0x0,0xfffffca8(%rbp)
6d65(6): jz 0x3c3(%rip)
6d6b(2): test %al,%al
6d6d(6): jnz 0xfffff80c(%rip)
6d73(4): movzx %r14b,%eax
6d77(6): mov %eax,0xfffffce0(%rbp)
6d7d(5): jmp 0xfffff353(%rip)
6d82(6): nop 0x0(%rax,%rax,1)
6d88(7): mov 0xfffffcf8(%rbp),%rdx
6d8f(5): mov $0x4,%esi
6d94(5): mov $0x1,%edi
6d99(5): call 0x8537(%rip)
6d9e(7): mov 0xfffffcf0(%rbp),%rdx
6da5(5): mov $0x4,%esi
6daa(2): xor %edi,%edi
6dac(3): mov %rax,%r12
6daf(5): call 0x8521(%rip)
6db4(7): lea 0x11049(%rip),%rsi
6dbb(3): mov %rax,%rbx
6dbe(5): mov $0x5,%edx
6dc3(2): xor %edi,%edi
6dc5(5): call 0xffffbd0b(%rip)
6dca(3): mov %r12,%r8
6dcd(3): mov %rbx,%rcx
6dd0(3): mov %rax,%rdx
6dd3(3): mov %r15d,%esi
6dd6(2): xor %edi,%edi
6dd8(2): xor %eax,%eax
6dda(5): call 0xffffc156(%rip)
6ddf(7): mov 0xfffffd80(%rbp),%rsi
6de6(7): mov 0xfffffd88(%rbp),%rdi
6ded(5): call 0x3103(%rip)
6df2(5): jmp 0xfffff13e(%rip)
6df7(9): nop 0x0(%rax,%rax,1)
6e00(3): xor %r8d,%r8d
6e03(5): jmp 0xfffff6af(%rip)
6e08(8): nop 0x0(%rax,%rax,1)
6e10(4): cmp $0x0,0x18(%rbx)
6e14(6): jz 0xfffffa48(%rip)
6e1a(6): nop 0x0(%rax,%rax,1)
6e20(3): mov 0x8(%rbx),%eax
6e23(3): cmp $0x2,%eax
6e26(2): jz 0x7e(%rip)
6e28(3): cmp $0x3,%eax
6e2b(2): jz 0x4d(%rip)
6e2d(3): cmp $0x4,%eax
6e30(6): jnz 0xfffffa80(%rip)
6e36(4): cmp $0x0,0x2f(%rbx)
6e3a(6): jz 0xfffffa76(%rip)
6e40(6): mov 0xfffffe28(%rbp),%esi
6e46(7): mov 0xfffffcf8(%rbp),%rdi
6e4d(7): mov %r9b,0xfffffca8(%rbp)
6e54(7): mov %r8b,0xfffffcb0(%rbp)
6e5b(5): call 0xffffe035(%rip)
6e60(2): test %al,%al
6e62(8): movzx 0xfffffcb0(%rbp),%r8d
6e6a(8): movzx 0xfffffca8(%rbp),%r9d
6e72(6): jnz 0xfffffa3e(%rip)
6e78(7): mov 0xfffffcf8(%rbp),%rsi
6e7f(7): lea 0xfffffe28(%rbp),%rdx
6e86(3): mov %rbx,%rdi
6e89(7): mov %r9b,0xfffffca8(%rbp)
6e90(7): mov %r8b,0xfffffcb0(%rbp)
6e97(5): call 0xffffe309(%rip)
6e9c(2): test %al,%al
6e9e(6): jnz 0x1412(%rip)
6ea4(8): cmp $0x0,0xfffffce0(%rbp)
6eac(6): jz 0xfffff5b4(%rip)
6eb2(7): mov 0xfffffce0(%rbp),%rax
6eb9(3): mov $0x1,(%rax)
6ebc(5): jmp 0xfffff5a4(%rip)
6ec1(7): nop 0x0(%rax)
6ec8(4): mov 0x40(%rbx),%rdi
6ecc(7): mov 0xfffffcf8(%rbp),%rsi
6ed3(7): lea 0xfffffd80(%rbp),%rdx
6eda(3): mov %r13d,%r12d
6edd(5): call 0x4623(%rip)
6ee2(5): jmp 0xfffff584(%rip)
6ee7(9): nop 0x0(%rax,%rax,1)
6ef0(7): cmp $0x4000,%r12d
6ef7(6): jz 0x519(%rip)
6efd(4): cmp $0x0,0x18(%rbx)
6f01(2): jz 0xe(%rip)
6f03(3): mov (%rbx),%r15d
6f06(3): test %r15d,%r15d
6f09(6): jnz 0xc9e(%rip)
6f0f(7): mov 0xfffffcf8(%rbp),%rsi
6f16(5): mov $0x4,%edi
6f1b(3): xor %r12d,%r12d
6f1e(5): call 0x84d2(%rip)
6f23(7): lea 0x10996(%rip),%rsi
6f2a(3): mov %rax,%rbx
6f2d(5): mov $0x5,%edx
6f32(2): xor %edi,%edi
6f34(5): call 0xffffbb9c(%rip)
6f39(3): mov %rbx,%rcx
6f3c(3): mov %rax,%rdx
6f3f(2): xor %esi,%esi
6f41(2): xor %edi,%edi
6f43(2): xor %eax,%eax
6f45(5): call 0xffffbfeb(%rip)
6f4a(5): jmp 0xfffff51c(%rip)
6f4f(1): nop 
6f50(6): mov 0xfffffce0(%rbp),%ecx
6f56(6): mov 0xfffffcec(%rbp),%edx
6f5c(3): mov %rbx,%r8
6f5f(7): mov 0xfffffcf8(%rbp),%rsi
6f66(7): mov 0xfffffcf0(%rbp),%rdi
6f6d(5): call 0xffffe853(%rip)
6f72(2): test %al,%al
6f74(6): jz 0xffffefbc(%rip)
6f7a(3): mov %r12d,%eax
6f7d(3): and $0x12,%eax
6f80(6): mov %eax,0xfffffca4(%rbp)
6f86(5): jmp 0xfffff7e3(%rip)
6f8b(5): nop 0x0(%rax,%rax,1)
6f90(7): mov 0xfffffcf8(%rbp),%rdi
6f97(3): mov %rbx,%rcx
6f9a(5): mov $0x1,%edx
6f9f(2): xor %esi,%esi
6fa1(5): call 0xffffe8ef(%rip)
6fa6(5): jmp 0xfffff498(%rip)
6fab(5): nop 0x0(%rax,%rax,1)
6fb0(7): lea 0x10e44(%rip),%rsi
6fb7(5): mov $0x5,%edx
6fbc(2): xor %edi,%edi
6fbe(5): call 0xffffbb12(%rip)
6fc3(5): mov $0x1,%edi
6fc8(3): mov %rax,%rsi
6fcb(2): xor %eax,%eax
6fcd(5): call 0xffffbf13(%rip)
6fd2(7): mov 0xfffffcb0(%rbp),%rdx
6fd9(7): mov 0xfffffcf8(%rbp),%rsi
6fe0(7): mov 0xfffffcf0(%rbp),%rdi
6fe7(5): call 0xffffdfe9(%rip)
6fec(5): jmp 0xfffff448(%rip)
6ff1(7): nop 0x0(%rax)
6ff8(7): mov 0xfffffe10(%rbp),%rax
6fff(7): cmp %rax,0xfffffd80(%rbp)
7006(6): jnz 0xffffee2f(%rip)
700c(4): movzx 0x17(%rbx),%eax
7010(2): test %al,%al
7012(6): jnz 0x396(%rip)
7018(4): cmp $0x2,0x4(%rbx)
701c(5): mov $0x1,%ecx
7021(6): mov $0x1,%r15d
7027(6): jz 0x18e(%rip)
702d(7): lea 0xfffffea0(%rbp),%r12
7034(7): mov 0xfffffcf8(%rbp),%rsi
703b(5): mov $0x1,%edi
7040(7): mov %r9b,0xfffffca8(%rbp)
7047(7): mov %r8b,0xfffffcb0(%rbp)
704e(3): mov %r12,%rdx
7051(5): call 0xffffbaaf(%rip)
7056(2): test %eax,%eax
7058(8): movzx 0xfffffcb0(%rbp),%r8d
7060(8): movzx 0xfffffca8(%rbp),%r9d
7068(6): jz 0x100a(%rip)
706e(3): xor %r14d,%r14d
7071(5): jmp 0xffffedce(%rip)
7076(a): nop 0x0(%rax,%rax,1)
7080(4): sub $0x30,%rsp
7084(7): mov 0xfffffcd0(%rbp),%rsi
708b(5): lea 0xf(%rsp),%rax
7090(4): and $0xfffffff0,%rax
7094(3): test %r14b,%r14b
7097(7): mov %rax,0xfffffcd8(%rbp)
709e(3): mov %rsi,(%rax)
70a1(4): mov %rdx,0x8(%rax)
70a5(4): mov %rcx,0x10(%rax)
70a9(2): jnz 0x18(%rip)
70ab(6): mov 0xfffffe28(%rbp),%eax
70b1(5): and $0xf000,%eax
70b6(5): cmp $0x4000,%eax
70bb(6): jz 0x105d(%rip)
70c1(6): mov 0xfffffca4(%rbp),%esi
70c7(7): mov 0xfffffcf8(%rbp),%r15
70ce(2): not %esi
70d0(3): mov %r15,%rdi
70d3(3): and %r12d,%esi
70d6(5): call 0xffffb8ea(%rip)
70db(2): test %eax,%eax
70dd(6): jz 0x7c3(%rip)
70e3(3): mov %r15,%rsi
70e6(5): mov $0x4,%edi
70eb(5): call 0x8305(%rip)
70f0(7): lea 0xf2cd(%rip),%rsi
70f7(3): mov %rax,%r13
70fa(5): mov $0x5,%edx
70ff(2): xor %edi,%edi
7101(5): call 0xffffb9cf(%rip)
7106(3): mov %rax,%r12
7109(5): call 0xffffb847(%rip)
710e(2): mov (%rax),%esi
7110(3): mov %r13,%rcx
7113(3): mov %r12,%rdx
7116(2): xor %edi,%edi
7118(2): xor %eax,%eax
711a(5): call 0xffffbe16(%rip)
711f(5): jmp 0xfffffa91(%rip)
7124(4): nop 0x0(%rax)
7128(7): mov 0xfffffd80(%rbp),%rdx
712f(7): mov 0xfffffd88(%rbp),%rsi
7136(7): mov 0xfffffcf8(%rbp),%rdi
713d(5): call 0x2e83(%rip)
7142(7): mov %rax,0xfffffca8(%rbp)
7149(8): cmp $0x0,0xfffffca8(%rbp)
7151(2): jz 0x4f(%rip)
7153(6): mov 0xfffffcec(%rbp),%eax
7159(5): and $0xf000,%eax
715e(5): cmp $0x4000,%eax
7163(6): jz 0xfffffb48(%rip)
7169(4): movzx 0x2e(%rbx),%ecx
716d(7): mov 0xfffffcd8(%rbp),%r8d
7174(5): mov $0x1,%edx
7179(7): mov 0xfffffcf8(%rbp),%rsi
7180(7): mov 0xfffffca8(%rbp),%rdi
7187(5): call 0xffffdf09(%rip)
718c(2): test %al,%al
718e(6): jz 0xfffffb98(%rip)
7194(5): jmp 0xfffff2cc(%rip)
7199(7): nop 0x0(%rax)
71a0(4): movzx 0x18(%rbx),%eax
71a4(5): jmp 0xfffffbc7(%rip)
71a9(7): nop 0x0(%rax)
71b0(2): xor %ecx,%ecx
71b2(3): xor %r15d,%r15d
71b5(6): mov 0xfffffd98(%rbp),%eax
71bb(7): lea 0xfffffd80(%rbp),%rdx
71c2(5): and $0xf000,%eax
71c7(5): cmp $0xa000,%eax
71cc(6): jz 0xca7(%rip)
71d2(2): mov (%rbx),%esi
71d4(2): test %esi,%esi
71d6(6): jz 0x4e2(%rip)
71dc(2): test %cl,%cl
71de(6): jnz 0x1094(%rip)
71e4(4): cmp $0x0,0x18(%rbx)
71e8(6): jnz 0xfffffe86(%rip)
71ee(4): cmp $0x2,0x4(%rbx)
71f2(6): jz 0xfffffe7c(%rip)
71f8(3): mov 0x18(%rdx),%eax
71fb(5): and $0xf000,%eax
7200(5): cmp $0xa000,%eax
7205(6): jnz 0xfffffe69(%rip)
720b(5): mov 0x18(%r12),%eax
7210(5): and $0xf000,%eax
7215(5): cmp $0xa000,%eax
721a(6): jz 0xfffffe54(%rip)
7220(7): mov 0xfffffcf8(%rbp),%rdx
7227(5): mov $0x4,%esi
722c(5): mov $0x1,%edi
7231(5): call 0x809f(%rip)
7236(7): mov 0xfffffcf0(%rbp),%rdx
723d(5): mov $0x4,%esi
7242(2): xor %edi,%edi
7244(3): mov %rax,%r12
7247(5): call 0x8089(%rip)
724c(7): lea 0x10b6a(%rip),%rsi
7253(3): mov %rax,%rbx
7256(5): mov $0x5,%edx
725b(2): xor %edi,%edi
725d(5): call 0xffffb873(%rip)
7262(3): mov %r12,%r8
7265(3): mov %rax,%rdx
7268(3): mov %rbx,%rcx
726b(2): xor %esi,%esi
726d(2): xor %edi,%edi
726f(2): xor %eax,%eax
7271(5): call 0xffffbcbf(%rip)
7276(5): jmp 0xffffecba(%rip)
727b(5): nop 0x0(%rax,%rax,1)
7280(4): cmp $0x0,0x18(%rbx)
7284(6): jz 0xfffff62c(%rip)
728a(5): jmp 0xfffffb96(%rip)
728f(1): nop 
7290(5): mov 0x18(%r12),%eax
7295(5): and $0xf000,%eax
729a(5): cmp $0xa000,%eax
729f(6): jz 0xffffeba0(%rip)
72a5(2): test %cl,%cl
72a7(2): jz 0xe(%rip)
72a9(6): cmp $0x1,0x10(%r12)
72af(6): jnbe 0x13bc(%rip)
72b5(3): mov 0x18(%rdx),%eax
72b8(5): and $0xf000,%eax
72bd(5): cmp $0xa000,%eax
72c2(2): jz 0x2e(%rip)
72c4(5): mov 0x8(%r12),%rax
72c9(4): cmp %rax,0x8(%rdx)
72cd(6): jnz 0xffffeb72(%rip)
72d3(4): mov (%r12),%rax
72d7(3): cmp %rax,(%rdx)
72da(6): jnz 0xffffeb65(%rip)
72e0(4): movzx 0x17(%rbx),%eax
72e4(2): test %al,%al
72e6(6): jnz 0xc2(%rip)
72ec(4): movzx 0x18(%rbx),%esi
72f0(3): test %sil,%sil
72f3(6): jz 0x3ef(%rip)
72f9(6): mov 0xfffffd98(%rbp),%eax
72ff(5): and $0xf000,%eax
7304(5): cmp $0xa000,%eax
7309(6): jnz 0x3d9(%rip)
730f(6): cmp $0x1,0x10(%r12)
7315(6): jbe 0x3cd(%rip)
731b(7): mov 0xfffffcf0(%rbp),%rdi
7322(7): mov %r9b,0xfffffca4(%rbp)
7329(7): mov %r8b,0xfffffca8(%rbp)
7330(7): mov %rdx,0xfffffcb0(%rbp)
7337(5): call 0xffffb8e9(%rip)
733c(3): test %rax,%rax
733f(3): mov %rax,%r15
7342(7): mov 0xfffffcb0(%rbp),%rdx
7349(8): movzx 0xfffffca8(%rbp),%r8d
7351(8): movzx 0xfffffca4(%rbp),%r9d
7359(6): jz 0x389(%rip)
735f(7): mov 0xfffffcf8(%rbp),%rsi
7366(3): mov %rax,%rdi
7369(7): mov %r9b,0xfffffca8(%rbp)
7370(7): mov %r8b,0xfffffcb0(%rbp)
7377(5): call 0x8869(%rip)
737c(3): mov %r15,%rdi
737f(3): xor $0x1,%eax
7382(3): mov %eax,%r12d
7385(5): call 0xffffbd4b(%rip)
738a(8): movzx 0xfffffcb0(%rbp),%r8d
7392(8): movzx 0xfffffca8(%rbp),%r9d
739a(2): xor %eax,%eax
739c(3): test %r12b,%r12b
739f(6): jz 0xfffffe81(%rip)
73a5(3): nop (%rax)
73a8(3): mov %eax,%r14d
73ab(5): jmp 0xffffea94(%rip)
73b0(4): mov 0x40(%rbx),%rdi
73b4(7): mov 0xfffffcf8(%rbp),%rsi
73bb(7): lea 0xfffffe10(%rbp),%rdx
73c2(7): mov %r9b,0xfffffca8(%rbp)
73c9(7): mov %r8b,0xfffffcb0(%rbp)
73d0(5): call 0x41c0(%rip)
73d5(2): test %al,%al
73d7(8): movzx 0xfffffcb0(%rbp),%r8d
73df(8): movzx 0xfffffca8(%rbp),%r9d
73e7(6): jnz 0x134e(%rip)
73ed(7): cmp $0x4000,%r12d
73f4(2): jz 0x1c(%rip)
73f6(6): mov 0xfffffe28(%rbp),%eax
73fc(2): mov %eax,%edx
73fe(6): and $0xf000,%edx
7404(6): cmp $0x4000,%edx
740a(6): jz 0xfffffaf3(%rip)
7410(3): mov (%rbx),%r15d
7413(4): movzx 0x18(%rbx),%eax
7417(2): test %al,%al
7419(6): jnz 0x9b7(%rip)
741f(3): test %r15d,%r15d
7422(6): jnz 0xfffff4ec(%rip)
7428(6): mov 0xfffffe28(%rbp),%edx
742e(6): and $0xf000,%edx
7434(6): cmp $0x4000,%edx
743a(4): setz %r12b
743e(3): or %al,%r12b
7441(6): jz 0xb9a(%rip)
7447(3): mov %r8d,%r14d
744a(6): mov $0x11,%r15d
7450(b): mov $0x0,0xfffffcb0(%rbp)
745b(5): jmp 0xffffeb53(%rip)
7460(7): mov 0xfffffd80(%rbp),%rsi
7467(7): mov 0xfffffd88(%rbp),%rdi
746e(5): call 0x2a82(%rip)
7473(5): jmp 0xfffff755(%rip)
7478(8): nop 0x0(%rax,%rax,1)
7480(7): mov 0xfffffcf8(%rbp),%rsi
7487(5): mov $0x4,%edi
748c(5): call 0x7f64(%rip)
7491(5): mov $0x5,%edx
7496(3): mov %rax,%r12
7499(7): lea 0x10b01(%rip),%rsi
74a0(5): jmp 0xfffff07e(%rip)
74a5(3): nop (%rax)
74a8(7): cmp $0x8000,%r15d
74af(6): jz 0x801(%rip)
74b5(7): cmp $0xa000,%r15d
74bc(4): setnz %r8b
74c0(4): and 0x14(%rbx),%r8b
74c4(6): jnz 0x7ec(%rip)
74ca(7): cmp $0x1000,%r15d
74d1(6): jz 0x10c1(%rip)
74d7(3): mov %r15d,%eax
74da(3): and $0xbf,%ah
74dd(5): cmp $0x2000,%eax
74e2(6): jz 0xcea(%rip)
74e8(7): cmp $0xc000,%r15d
74ef(6): jz 0xcdd(%rip)
74f5(7): cmp $0xa000,%r15d
74fc(6): jz 0x1384(%rip)
7502(7): mov 0xfffffcf0(%rbp),%rsi
7509(5): mov $0x4,%edi
750e(5): call 0x7ee2(%rip)
7513(5): mov $0x5,%edx
7518(3): mov %rax,%r12
751b(7): lea 0x10a66(%rip),%rsi
7522(5): jmp 0xfffff2a6(%rip)
7527(9): nop 0x0(%rax,%rax,1)
7530(3): mov %rdx,%rsi
7533(5): call 0x2a2d(%rip)
7538(7): mov %rax,0xfffffca8(%rbp)
753f(5): jmp 0xfffff75e(%rip)
7544(4): nop 0x0(%rax)
7548(7): mov 0xfffffcf0(%rbp),%rsi
754f(5): mov $0x4,%edi
7554(5): call 0x7e9c(%rip)
7559(7): lea 0x102c0(%rip),%rsi
7560(3): mov %rax,%rbx
7563(2): xor %edi,%edi
7565(5): mov $0x5,%edx
756a(5): call 0xffffb566(%rip)
756f(3): mov %rbx,%rcx
7572(3): mov %rax,%rdx
7575(2): xor %esi,%esi
7577(2): xor %edi,%edi
7579(2): xor %eax,%eax
757b(5): call 0xffffb9b5(%rip)
7580(5): jmp 0xffffeee6(%rip)
7585(3): nop (%rax)
7588(7): mov 0xfffffd80(%rbp),%rsi
758f(7): mov 0xfffffd88(%rbp),%rdi
7596(5): call 0x29ca(%rip)
759b(7): mov %rax,0xfffffca8(%rbp)
75a2(5): jmp 0xfffffba7(%rip)
75a7(9): nop 0x0(%rax,%rax,1)
75b0(7): lea 0x107f0(%rip),%rsi
75b7(2): xor %edi,%edi
75b9(5): call 0xffffb517(%rip)
75be(3): mov %rax,%rdx
75c1(5): jmp 0xfffff269(%rip)
75c6(a): nop 0x0(%rax,%rax,1)
75d0(7): mov 0x217fb1(%rip),%rdx
75d7(5): mov $0x4,%esi
75dc(5): mov $0x1,%edi
75e1(5): call 0x7cef(%rip)
75e6(7): mov 0x217fa3(%rip),%rdx
75ed(5): mov $0x4,%esi
75f2(2): xor %edi,%edi
75f4(3): mov %rax,%r12
75f7(5): call 0x7cd9(%rip)
75fc(7): lea 0x1046d(%rip),%rsi
7603(3): mov %rax,%rbx
7606(5): mov $0x5,%edx
760b(2): xor %edi,%edi
760d(5): call 0xffffb4c3(%rip)
7612(3): mov %r12,%r8
7615(3): mov %rax,%rdx
7618(3): mov %rbx,%rcx
761b(2): xor %eax,%eax
761d(2): xor %esi,%esi
761f(2): xor %edi,%edi
7621(5): call 0xffffb90f(%rip)
7626(7): mov 0xfffffcc0(%rbp),%rax
762d(6): mov $0x1,%r12d
7633(3): mov $0x1,(%rax)
7636(5): jmp 0xffffee30(%rip)
763b(5): nop 0x0(%rax,%rax,1)
7640(5): call 0xffffb480(%rip)
7645(2): test %eax,%eax
7647(6): jz 0xffffefca(%rip)
764d(5): call 0xffffb303(%rip)
7652(3): cmp $0x2,(%rax)
7655(3): mov %rax,%r14
7658(6): jz 0xffffefb9(%rip)
765e(7): mov 0xfffffcf8(%rbp),%rdx
7665(5): mov $0x4,%esi
766a(5): mov $0x1,%edi
766f(5): call 0x7c61(%rip)
7674(7): mov 0xfffffcf0(%rbp),%rdx
767b(5): mov $0x4,%esi
7680(2): xor %edi,%edi
7682(3): mov %rax,%r12
7685(5): call 0x7c4b(%rip)
768a(7): lea 0x1040f(%rip),%rsi
7691(3): mov %rax,%rbx
7694(5): mov $0x5,%edx
7699(2): xor %edi,%edi
769b(5): call 0xffffb435(%rip)
76a0(3): mov %r12,%r8
76a3(3): mov %rbx,%rcx
76a6(3): mov %rax,%rdx
76a9(3): mov (%r14),%esi
76ac(5): jmp 0xfffff72a(%rip)
76b1(7): nop 0x0(%rax)
76b8(4): movzx 0x18(%rbx),%esi
76bc(3): test %sil,%sil
76bf(6): jnz 0xfffffbd1(%rip)
76c5(4): cmp $0x0,0x15(%rbx)
76c9(6): jnz 0xfffffbc7(%rip)
76cf(3): mov 0x18(%rdx),%eax
76d2(5): and $0xf000,%eax
76d7(5): cmp $0xa000,%eax
76dc(6): jnz 0xfe9(%rip)
76e2(4): cmp $0x0,0x2c(%rbx)
76e6(2): jz 0x17(%rip)
76e8(5): mov 0x18(%r12),%eax
76ed(5): and $0xf000,%eax
76f2(5): cmp $0xa000,%eax
76f7(6): jz 0xffffe748(%rip)
76fd(4): cmp $0x2,0x4(%rbx)
7701(6): jnz 0xfffffb1f(%rip)
7707(3): mov 0x18(%rdx),%eax
770a(5): and $0xf000,%eax
770f(5): cmp $0xa000,%eax
7714(6): jz 0x1a78(%rip)
771a(4): movdqa (%rdx),%xmm0
771e(7): movaps %xmm0,0xffffff30(%rbp)
7725(5): movdqa 0x10(%rdx),%xmm0
772a(7): movaps %xmm0,0xffffff40(%rbp)
7731(5): movdqa 0x20(%rdx),%xmm0
7736(7): movaps %xmm0,0xffffff50(%rbp)
773d(5): movdqa 0x30(%rdx),%xmm0
7742(7): movaps %xmm0,0xffffff60(%rbp)
7749(5): movdqa 0x40(%rdx),%xmm0
774e(7): movaps %xmm0,0xffffff70(%rbp)
7755(5): movdqa 0x50(%rdx),%xmm0
775a(4): movaps %xmm0,0xffffff80(%rbp)
775e(5): movdqa 0x60(%rdx),%xmm0
7763(4): movaps %xmm0,0xffffff90(%rbp)
7767(5): movdqa 0x70(%rdx),%xmm0
776c(4): movaps %xmm0,0xffffffa0(%rbp)
7770(8): movdqa 0x80(%rdx),%xmm0
7778(4): movaps %xmm0,0xffffffb0(%rbp)
777c(5): mov 0x18(%r12),%eax
7781(5): and $0xf000,%eax
7786(5): cmp $0xa000,%eax
778b(6): jz 0x19be(%rip)
7791(6): movdqa (%r12),%xmm0
7797(7): movaps %xmm0,0xfffffea0(%rbp)
779e(7): movdqa 0x10(%r12),%xmm0
77a5(7): movaps %xmm0,0xfffffeb0(%rbp)
77ac(7): movdqa 0x20(%r12),%xmm0
77b3(7): movaps %xmm0,0xfffffec0(%rbp)
77ba(7): movdqa 0x30(%r12),%xmm0
77c1(7): movaps %xmm0,0xfffffed0(%rbp)
77c8(7): movdqa 0x40(%r12),%xmm0
77cf(7): movaps %xmm0,0xfffffee0(%rbp)
77d6(7): movdqa 0x50(%r12),%xmm0
77dd(7): movaps %xmm0,0xfffffef0(%rbp)
77e4(7): movdqa 0x60(%r12),%xmm0
77eb(7): movaps %xmm0,0xffffff00(%rbp)
77f2(7): movdqa 0x70(%r12),%xmm0
77f9(7): movaps %xmm0,0xffffff10(%rbp)
7800(a): movdqa 0x80(%r12),%xmm0
780a(7): movaps %xmm0,0xffffff20(%rbp)
7811(7): mov 0xfffffea8(%rbp),%rax
7818(7): cmp %rax,0xffffff38(%rbp)
781f(6): jnz 0xffffe620(%rip)
7825(7): mov 0xfffffea0(%rbp),%rax
782c(7): cmp %rax,0xffffff30(%rbp)
7833(6): jnz 0xffffe60c(%rip)
7839(4): cmp $0x0,0x17(%rbx)
783d(6): jz 0xfffff9e3(%rip)
7843(5): mov 0x18(%r12),%eax
7848(5): and $0xf000,%eax
784d(5): cmp $0xa000,%eax
7852(4): setnz %r14b
7856(5): jmp 0xffffe5e9(%rip)
785b(5): nop 0x0(%rax,%rax,1)
7860(7): lea 0xffffff30(%rbp),%rcx
7867(7): mov 0xfffffcf8(%rbp),%rsi
786e(5): mov $0x1,%edi
7873(3): mov %rcx,%rdx
7876(7): mov %rcx,0xfffffca8(%rbp)
787d(5): call 0xffffb283(%rip)
7882(2): test %eax,%eax
7884(6): jnz 0xffffe7ec(%rip)
788a(7): mov 0xfffffca8(%rbp),%rcx
7891(3): mov %rcx,%rdx
7894(5): jmp 0xffffe756(%rip)
7899(7): nop 0x0(%rax)
78a0(7): mov 0xfffffcf8(%rbp),%rsi
78a7(7): lea 0xfffffe10(%rbp),%rdx
78ae(5): mov $0x1,%edi
78b3(5): call 0xffffb24d(%rip)
78b8(2): test %eax,%eax
78ba(6): jnz 0xa0b(%rip)
78c0(7): mov 0xfffffe28(%rbp),%r12d
78c7(7): mov $0x0,0xfffffcd0(%rbp)
78ce(3): mov %r12d,%eax
78d1(5): and $0x1c0,%eax
78d6(5): cmp $0x1c0,%eax
78db(2): jz 0x2d(%rip)
78dd(7): mov 0xfffffcf8(%rbp),%rdi
78e4(3): mov %r12d,%esi
78e7(6): or $0x1c0,%esi
78ed(5): call 0xffffb623(%rip)
78f2(2): test %eax,%eax
78f4(7): mov %r12d,0xfffffc74(%rbp)
78fb(7): mov $0x1,0xfffffcd0(%rbp)
7902(6): jnz 0x1021(%rip)
7908(7): mov 0xfffffcc8(%rbp),%rax
790f(3): cmp $0x0,(%rax)
7912(6): jz 0xdfa(%rip)
7918(4): cmp $0x0,0x2e(%rbx)
791c(2): jz 0x4c(%rip)
791e(4): cmp $0x0,0x18(%rbx)
7922(6): jz 0xeab(%rip)
7928(7): mov 0xfffffcf8(%rbp),%rsi
792f(5): mov $0x4,%edi
7934(5): call 0x7abc(%rip)
7939(7): lea 0x104fc(%rip),%rsi
7940(3): mov %rax,%r12
7943(5): mov $0x5,%edx
7948(2): xor %edi,%edi
794a(5): call 0xffffb186(%rip)
794f(3): mov %r12,%rdx
7952(3): mov %rax,%rsi
7955(5): mov $0x1,%edi
795a(2): xor %eax,%eax
795c(5): call 0xffffb584(%rip)
7961(7): nop 0x0(%rax)
7968(7): mov 0xfffffcb8(%rbp),%rax
796f(3): test %rax,%rax
7972(4): setnz %r12b
7976(4): and 0x1c(%rbx),%r12b
797a(6): jnz 0x7e1(%rip)
7980(4): movdqu (%rbx),%xmm0
7984(5): mov $0x2,%esi
7989(7): mov 0xfffffcf0(%rbp),%rdi
7990(7): movaps %xmm0,0xfffffd10(%rbp)
7997(5): movdqu 0x10(%rbx),%xmm0
799c(7): movaps %xmm0,0xfffffd20(%rbp)
79a3(5): movdqu 0x20(%rbx),%xmm0
79a8(7): movaps %xmm0,0xfffffd30(%rbp)
79af(5): movdqu 0x30(%rbx),%xmm0
79b4(7): movaps %xmm0,0xfffffd40(%rbp)
79bb(5): movdqu 0x40(%rbx),%xmm0
79c0(7): movaps %xmm0,0xfffffd50(%rbp)
79c7(5): call 0x85e9(%rip)
79cc(3): test %rax,%rax
79cf(7): mov %rax,0xfffffc98(%rbp)
79d6(6): jz 0xe62(%rip)
79dc(4): cmp $0x3,0x4(%rbx)
79e0(2): jnz 0xc(%rip)
79e2(a): mov $0x2,0xfffffd14(%rbp)
79ec(7): mov 0xfffffc98(%rbp),%rax
79f3(3): cmp $0x0,(%rax)
79f6(6): jz 0x153f(%rip)
79fc(7): lea 0xfffffd10(%rbp),%rax
7a03(7): lea 0xfffffd80(%rbp),%r10
7a0a(7): mov %r13d,0xfffffc80(%rbp)
7a11(7): mov 0xfffffc98(%rbp),%r15
7a18(7): mov 0xfffffcc0(%rbp),%r13
7a1f(6): mov $0x1,%r12d
7a25(7): mov %rax,0xfffffcb8(%rbp)
7a2c(7): lea 0xfffffd07(%rbp),%rax
7a33(7): mov $0x0,0xfffffceb(%rbp)
7a3a(7): mov %r14b,0xfffffc90(%rbp)
7a41(7): mov %rbx,0xfffffc88(%rbp)
7a48(7): mov %rax,0xfffffcb0(%rbp)
7a4f(7): lea 0xfffffd08(%rbp),%rax
7a56(7): mov %r10,0xfffffcc0(%rbp)
7a5d(7): mov %rax,0xfffffca8(%rbp)
7a64(2): jmp 0x30(%rip)
7a66(a): nop 0x0(%rax,%rax,1)
7a70(7): movzx 0xfffffd08(%rbp),%eax
7a77(3): mov %r15,%rdi
7a7a(6): or %al,0xfffffceb(%rbp)
7a80(5): call 0xffffb070(%rip)
7a85(5): lea 0x1(%r15,%rax,1),%r15
7a8a(4): cmp $0x0,(%r15)
7a8e(6): jz 0xa3(%rip)
7a94(7): mov 0xfffffcf0(%rbp),%rdi
7a9b(2): xor %edx,%edx
7a9d(3): mov %r15,%rsi
7aa0(5): call 0x3cf0(%rip)
7aa5(7): mov 0xfffffcf8(%rbp),%rdi
7aac(2): xor %edx,%edx
7aae(3): mov %r15,%rsi
7ab1(3): mov %rax,%rbx
7ab4(5): call 0x3cdc(%rip)
7ab9(3): mov %rax,%r14
7abc(7): mov 0xfffffcc8(%rbp),%rax
7ac3(7): mov 0xfffffcb8(%rbp),%r9
7aca(7): mov 0xfffffcd8(%rbp),%r8
7ad1(7): mov 0xfffffcc0(%rbp),%rcx
7ad8(3): mov %r14,%rsi
7adb(6): mov 0xfffffce0(%rbp),%edx
7ae1(3): mov %rbx,%rdi
7ae4(3): movzx (%rax),%eax
7ae7(2): push $0x0
7ae9(6): push 0xfffffcb0(%rbp)
7aef(6): push 0xfffffca8(%rbp)
7af5(2): push $0x0
7af7(6): mov %al,0xfffffd08(%rbp)
7afd(5): call 0xffffe123(%rip)
7b02(3): and %eax,%r12d
7b05(7): movzx 0xfffffd07(%rbp),%eax
7b0c(4): add $0x20,%rsp
7b10(4): or %al,0x0(%r13)
7b14(3): mov %r14,%rdi
7b17(5): call 0xffffb5b9(%rip)
7b1c(3): mov %rbx,%rdi
7b1f(5): call 0xffffb5b1(%rip)
7b24(7): cmp $0x0,0xfffffd07(%rbp)
7b2b(6): jz 0xffffff45(%rip)
7b31(8): movzx 0xfffffc90(%rbp),%r14d
7b39(7): mov 0xfffffc88(%rbp),%rbx
7b40(7): mov 0xfffffc80(%rbp),%r13d
7b47(7): mov 0xfffffc98(%rbp),%rdi
7b4e(5): call 0xffffb582(%rip)
7b53(7): movzx 0xfffffceb(%rbp),%ecx
7b5a(7): mov 0xfffffcc8(%rbp),%rax
7b61(2): mov %cl,(%rax)
7b63(3): test %r13b,%r13b
7b66(6): jnz 0x5dc(%rip)
7b6c(7): movzx 0xfffffcd0(%rbp),%eax
7b73(7): mov $0x0,0xfffffce0(%rbp)
7b7a(6): mov %al,0xfffffceb(%rbp)
7b80(5): jmp 0xffffe6ba(%rip)
7b85(3): nop (%rax)
7b88(4): cmp $0x0,0x18(%rbx)
7b8c(6): jz 0x40f(%rip)
7b92(3): mov (%rbx),%r15d
7b95(3): test %r15d,%r15d
7b98(6): jz 0x403(%rip)
7b9e(3): test %r13b,%r13b
7ba1(6): jnz 0xffffed59(%rip)
7ba7(6): mov 0xfffffd98(%rbp),%edx
7bad(6): and $0xf000,%edx
7bb3(6): cmp $0x4000,%edx
7bb9(6): jz 0x5bd(%rip)
7bbf(7): mov 0xfffffcf0(%rbp),%rdi
7bc6(7): mov %r9b,0xfffffca8(%rbp)
7bcd(7): mov %r8b,0xfffffcb0(%rbp)
7bd4(5): call 0x37cc(%rip)
7bd9(3): cmp $0x2e,(%rax)
7bdc(3): mov %rax,%r14
7bdf(8): movzx 0xfffffcb0(%rbp),%r8d
7be7(8): movzx 0xfffffca8(%rbp),%r9d
7bef(6): jnz 0xffffed8e(%rip)
7bf5(5): mov $0x1,%eax
7bfa(5): jmp 0xffffed48(%rip)
7bff(1): nop 
7c00(7): mov 0xfffffca8(%rbp),%rsi
7c07(7): mov 0xfffffcf8(%rbp),%rdi
7c0e(5): call 0x7fd2(%rip)
7c13(2): test %al,%al
7c15(6): jnz 0x6d5(%rip)
7c1b(3): mov 0x4(%rbx),%eax
7c1e(3): cmp $0x4,%eax
7c21(6): jz 0xfffff57f(%rip)
7c27(3): cmp $0x3,%eax
7c2a(2): jnz 0xb(%rip)
7c2c(3): test %r13b,%r13b
7c2f(6): jnz 0xfffff571(%rip)
7c35(7): mov 0xfffffca8(%rbp),%rdx
7c3c(5): mov $0x4,%esi
7c41(5): mov $0x1,%edi
7c46(5): call 0x768a(%rip)
7c4b(7): mov 0xfffffcf8(%rbp),%rdx
7c52(2): xor %edi,%edi
7c54(5): mov $0x4,%esi
7c59(3): mov %rax,%r13
7c5c(5): call 0x7674(%rip)
7c61(7): lea 0xfdd8(%rip),%rsi
7c68(3): mov %rax,%r12
7c6b(2): xor %edi,%edi
7c6d(5): mov $0x5,%edx
7c72(5): call 0xffffae5e(%rip)
7c77(3): mov %r13,%r8
7c7a(3): mov %rax,%rdx
7c7d(3): mov %r12,%rcx
7c80(2): xor %esi,%esi
7c82(2): xor %edi,%edi
7c84(2): xor %eax,%eax
7c86(5): call 0xffffb2aa(%rip)
7c8b(5): jmp 0xfffff09b(%rip)
7c90(4): cmp $0x0,0x17(%rbx)
7c94(6): jz 0xfffff0a4(%rip)
7c9a(b): mov $0x0,0xfffffca8(%rbp)
7ca5(5): jmp 0xfffff0ce(%rip)
7caa(6): nop 0x0(%rax,%rax,1)
7cb0(6): mov 0xfffffd98(%rbp),%eax
7cb6(2): xor %esi,%esi
7cb8(4): cmp $0x2,0x4(%rbx)
7cbc(7): mov 0xfffffcf0(%rbp),%rdi
7cc3(6): mov %eax,0xfffffcc0(%rbp)
7cc9(4): movzx 0x23(%rbx),%eax
7ccd(4): setz %sil
7cd1(3): shl/sal $0x11,%esi
7cd4(6): mov %al,0xfffffcc8(%rbp)
7cda(2): xor %eax,%eax
7cdc(5): call 0x37b4(%rip)
7ce1(2): test %eax,%eax
7ce3(6): mov %eax,0xfffffce0(%rbp)
7ce9(6): js 0x702(%rip)
7cef(6): mov 0xfffffce0(%rbp),%esi
7cf5(7): lea 0xfffffea0(%rbp),%rdx
7cfc(5): mov $0x1,%edi
7d01(5): call 0xffffb11f(%rip)
7d06(2): test %eax,%eax
7d08(6): jnz 0x91f(%rip)
7d0e(7): mov 0xfffffea8(%rbp),%rax
7d15(7): cmp %rax,0xfffffd88(%rbp)
7d1c(2): jnz 0x16(%rip)
7d1e(7): mov 0xfffffea0(%rbp),%rax
7d25(7): cmp %rax,0xfffffd80(%rbp)
7d2c(6): jz 0xd2a(%rip)
7d32(7): mov 0xfffffcf0(%rbp),%rsi
7d39(5): mov $0x4,%edi
7d3e(5): call 0x76b2(%rip)
7d43(7): lea 0xfdbe(%rip),%rsi
7d4a(3): mov %rax,%r12
7d4d(5): mov $0x5,%edx
7d52(2): xor %edi,%edi
7d54(5): call 0xffffad7c(%rip)
7d59(3): mov %r12,%rcx
7d5c(3): mov %rax,%rdx
7d5f(2): xor %esi,%esi
7d61(2): xor %edi,%edi
7d63(2): xor %eax,%eax
7d65(5): call 0xffffb1cb(%rip)
7d6a(3): xor %r8d,%r8d
7d6d(b): mov $0x0,0xfffffcd0(%rbp)
7d78(6): mov 0xfffffce0(%rbp),%edi
7d7e(7): mov %r8b,0xfffffcd8(%rbp)
7d85(5): call 0xffffaeab(%rip)
7d8a(2): test %eax,%eax
7d8c(8): movzx 0xfffffcd8(%rbp),%r8d
7d94(6): js 0xa53(%rip)
7d9a(7): mov 0xfffffcd0(%rbp),%rdi
7da1(7): mov %r8b,0xfffffcd8(%rbp)
7da8(5): call 0xffffb328(%rip)
7dad(8): movzx 0xfffffcd8(%rbp),%r8d
7db5(7): mov $0x0,0xfffffce0(%rbp)
7dbc(3): test %r8b,%r8b
7dbf(6): jnz 0xffffe3e0(%rip)
7dc5(5): jmp 0xffffedeb(%rip)
7dca(6): nop 0x0(%rax,%rax,1)
7dd0(6): mov 0xfffffd98(%rbp),%eax
7dd6(5): and $0xf000,%eax
7ddb(5): cmp $0x4000,%eax
7de0(6): jz 0x390(%rip)
7de6(3): test %r15d,%r15d
7de9(6): jz 0xfffff65e(%rip)
7def(5): jmp 0xfffffdd0(%rip)
7df4(4): nop 0x0(%rax)
7df8(7): lea 0xfffffea0(%rbp),%rdx
7dff(3): mov %r8,%rsi
7e02(5): mov $0x1,%edi
7e07(5): call 0xffffafc9(%rip)
7e0c(2): test %eax,%eax
7e0e(6): jnz 0xffffed0e(%rip)
7e14(7): lea 0xffffff30(%rbp),%rdx
7e1b(3): mov %r12,%rsi
7e1e(5): mov $0x1,%edi
7e23(5): call 0xffffafad(%rip)
7e28(2): test %eax,%eax
7e2a(6): jnz 0xffffecf2(%rip)
7e30(7): mov 0xffffff38(%rbp),%rax
7e37(7): cmp %rax,0xfffffea8(%rbp)
7e3e(6): jz 0x1109(%rip)
7e44(3): mov %r12,%rdi
7e47(5): call 0xffffb289(%rip)
7e4c(7): mov 0xfffffcf8(%rbp),%rdx
7e53(5): mov $0x3,%esi
7e58(2): xor %edi,%edi
7e5a(5): call 0x7696(%rip)
7e5f(5): mov $0x5,%edx
7e64(3): mov %rax,%r12
7e67(7): lea 0xfd42(%rip),%rsi
7e6e(5): jmp 0xffffe95a(%rip)
7e73(6): mov 0xfffffe28(%rbp),%eax
7e79(7): lea 0xfffffd80(%rbp),%rdx
7e80(5): and $0xf000,%eax
7e85(5): cmp $0xa000,%eax
7e8a(6): jnz 0xfffff348(%rip)
7e90(7): mov 0xfffffcf8(%rbp),%rsi
7e97(7): mov 0xfffffcf0(%rbp),%rdi
7e9e(7): mov %r9b,0xfffffca8(%rbp)
7ea5(7): mov %r8b,0xfffffcb0(%rbp)
7eac(5): call 0x7d34(%rip)
7eb1(2): test %al,%al
7eb3(6): jnz 0xfffff36d(%rip)
7eb9(2): mov (%rbx),%edi
7ebb(8): movzx 0xfffffcb0(%rbp),%r8d
7ec3(8): movzx 0xfffffca8(%rbp),%r9d
7ecb(2): test %edi,%edi
7ecd(6): jnz 0xfffff1a1(%rip)
7ed3(3): test %r15d,%r15d
7ed6(6): jz 0xfffff198(%rip)
7edc(5): movzx 0x18(%rbx),%r12d
7ee1(5): mov $0x1,%eax
7ee6(4): xor $0x1,%r12d
7eea(5): jmp 0xfffff4b2(%rip)
7eef(1): nop 
7ef0(3): mov %eax,%r15d
7ef3(a): mov $0x280375465148160,%rax
7efd(4): test %rax,0x20(%rbx)
7f01(6): jz 0xffffe2c1(%rip)
7f07(4): movzx 0x25(%rbx),%esi
7f0b(7): mov 0xfffffcf8(%rbp),%rdi
7f12(2): xor %edx,%edx
7f14(3): mov %rbx,%rcx
7f17(7): mov %r8b,0xfffffcd8(%rbp)
7f1e(5): call 0xffffd972(%rip)
7f23(2): test %al,%al
7f25(3): mov %eax,%r15d
7f28(8): movzx 0xfffffcd8(%rbp),%r8d
7f30(6): jnz 0xffffe292(%rip)
7f36(5): movzx 0x26(%rbx),%r14d
7f3b(3): test %r14b,%r14b
7f3e(6): jnz 0xffffec72(%rip)
7f44(3): mov %r12d,%r15d
7f47(5): jmp 0xffffe27b(%rip)
7f4c(4): nop 0x0(%rax)
7f50(7): lea 0xfec2(%rip),%rsi
7f57(5): mov $0x5,%edx
7f5c(2): xor %edi,%edi
7f5e(5): call 0xffffab72(%rip)
7f63(5): mov $0x1,%edi
7f68(3): mov %rax,%rsi
7f6b(2): xor %eax,%eax
7f6d(5): call 0xffffaf73(%rip)
7f72(7): mov 0xfffffcb0(%rbp),%rdx
7f79(7): mov 0xfffffcf8(%rbp),%rsi
7f80(7): mov 0xfffffcf0(%rbp),%rdi
7f87(5): call 0xffffd049(%rip)
7f8c(a): mov $0x1,0xfffffce0(%rbp)
7f96(5): jmp 0xffffe13a(%rip)
7f9b(7): mov 0xfffffcf0(%rbp),%rdx
7fa2(5): mov $0x4,%esi
7fa7(5): mov $0x1,%edi
7fac(5): call 0x7324(%rip)
7fb1(7): mov 0xfffffcf8(%rbp),%rdx
7fb8(5): mov $0x4,%esi
7fbd(2): xor %edi,%edi
7fbf(3): mov %rax,%r12
7fc2(5): call 0x730e(%rip)
7fc7(5): mov $0x5,%edx
7fcc(3): mov %rax,%rbx
7fcf(7): lea 0xf882(%rip),%rsi
7fd6(5): jmp 0xfffff285(%rip)
7fdb(4): cmp $0x0,0x15(%rbx)
7fdf(2): jnz 0x1a(%rip)
7fe1(4): cmp $0x0,0x22(%rbx)
7fe5(6): jz 0x3e1(%rip)
7feb(8): cmp $0x1,0xfffffe20(%rbp)
7ff3(6): jbe 0x3d3(%rip)
7ff9(7): mov 0xfffffcf8(%rbp),%r14
8000(7): mov %r9b,0xfffffcb0(%rbp)
8007(3): mov %r14,%rdi
800a(5): call 0xffffa956(%rip)
800f(2): test %eax,%eax
8011(8): movzx 0xfffffcb0(%rbp),%r9d
8019(6): jz 0x37a(%rip)
801f(5): call 0xffffa931(%rip)
8024(3): cmp $0x2,(%rax)
8027(3): mov %rax,%r15
802a(8): movzx 0xfffffcb0(%rbp),%r9d
8032(6): jz 0x361(%rip)
8038(3): mov %r14,%rsi
803b(5): mov $0x4,%edi
8040(5): call 0x73b0(%rip)
8045(7): lea 0xfd9e(%rip),%rsi
804c(2): xor %edi,%edi
804e(5): mov $0x5,%edx
8053(3): mov %rax,%rbx
8056(5): call 0xffffaa7a(%rip)
805b(3): mov (%r15),%esi
805e(3): mov %rax,%rdx
8061(3): mov %rbx,%rcx
8064(2): xor %edi,%edi
8066(2): xor %eax,%eax
8068(5): call 0xffffaec8(%rip)
806d(5): jmp 0xffffe3f9(%rip)
8072(7): lea 0xffffff30(%rbp),%rax
8079(7): mov 0xfffffcf0(%rbp),%rsi
8080(5): mov $0x1,%edi
8085(3): mov %rax,%rdx
8088(7): mov %rax,0xfffffc98(%rbp)
808f(5): call 0xffffaa71(%rip)
8094(2): test %eax,%eax
8096(8): movzx 0xfffffcb0(%rbp),%r8d
809e(8): movzx 0xfffffca8(%rbp),%r9d
80a6(6): jnz 0xffffefc8(%rip)
80ac(2): xor %ecx,%ecx
80ae(7): mov 0xfffffea8(%rbp),%rax
80b5(7): cmp %rax,0xffffff38(%rbp)
80bc(2): jnz 0x13(%rip)
80be(7): mov 0xfffffea0(%rbp),%rax
80c5(7): cmp %rax,0xffffff30(%rbp)
80cc(3): setz %cl
80cf(6): mov 0xffffff48(%rbp),%eax
80d5(7): mov 0xfffffc98(%rbp),%rdx
80dc(5): and $0xf000,%eax
80e1(5): cmp $0xa000,%eax
80e6(6): jnz 0xfffff0ec(%rip)
80ec(6): mov 0xfffffeb8(%rbp),%eax
80f2(5): and $0xf000,%eax
80f7(5): cmp $0xa000,%eax
80fc(6): jnz 0xfffff0d6(%rip)
8102(4): cmp $0x0,0x15(%rbx)
8106(6): jz 0xfffff0cc(%rip)
810c(5): jmp 0xffffef62(%rip)
8111(7): nop 0x0(%rax)
8118(a): mov $0x280375465148160,%rax
8122(4): test %rax,0x20(%rbx)
8126(6): jnz 0x5ba(%rip)
812c(7): mov $0x0,0xfffffcd0(%rbp)
8133(a): mov $0x0,0xfffffca4(%rbp)
813d(5): jmp 0xfffff82b(%rip)
8142(7): mov %r12b,0xfffffceb(%rbp)
8149(3): xor %r15d,%r15d
814c(3): xor %r8d,%r8d
814f(7): mov $0x0,0xfffffce0(%rbp)
8156(5): jmp 0xffffe07e(%rip)
815b(7): mov 0xfffffd80(%rbp),%rcx
8162(3): cmp %rcx,(%rax)
8165(6): jnz 0xfffff9fe(%rip)
816b(5): jmp 0xfffff815(%rip)
8170(6): mov 0xfffffe28(%rbp),%eax
8176(5): and $0xf000,%eax
817b(5): cmp $0x4000,%eax
8180(6): jz 0xfffffc66(%rip)
8186(3): test %r15d,%r15d
8189(6): jnz 0xfffffa36(%rip)
818f(7): mov 0xfffffcf8(%rbp),%rdx
8196(5): mov $0x3,%esi
819b(2): xor %edi,%edi
819d(5): call 0x7353(%rip)
81a2(7): mov 0xfffffcf0(%rbp),%rdx
81a9(5): mov $0x3,%esi
81ae(2): xor %edi,%edi
81b0(3): mov %rax,%r12
81b3(5): call 0x733d(%rip)
81b8(5): mov $0x5,%edx
81bd(3): mov %rax,%rbx
81c0(7): lea 0xf731(%rip),%rsi
81c7(5): jmp 0xfffff094(%rip)
81cc(6): mov 0xfffffca4(%rbp),%edx
81d2(7): mov 0xfffffda8(%rbp),%rax
81d9(7): lea 0xfffffd10(%rbp),%rcx
81e0(7): mov 0xfffffcf8(%rbp),%rsi
81e7(2): xor %edi,%edi
81e9(7): mov %r8b,0xfffffcd8(%rbp)
81f0(2): not %edx
81f2(6): and 0xfffffcec(%rbp),%edx
81f8(7): mov %rax,0xfffffd10(%rbp)
81ff(5): call 0xffffaba1(%rip)
8204(2): test %eax,%eax
8206(7): mov $0x0,0xfffffce0(%rbp)
820d(8): movzx 0xfffffcd8(%rbp),%r8d
8215(6): jz 0xffffdf8a(%rip)
821b(7): mov 0xfffffcf8(%rbp),%rsi
8222(5): mov $0x4,%edi
8227(5): call 0x71c9(%rip)
822c(5): mov $0x5,%edx
8231(3): mov %rax,%r13
8234(7): lea 0xfd12(%rip),%rsi
823b(5): jmp 0xffffeec4(%rip)
8240(5): call 0x9500(%rip)
8245(2): test %eax,%eax
8247(6): jz 0xffffe0be(%rip)
824d(5): jmp 0xffffe05d(%rip)
8252(4): mov 0x40(%rbx),%rdi
8256(7): mov 0xfffffcf8(%rbp),%rsi
825d(3): mov %r12,%rdx
8260(5): call 0x32a0(%rip)
8265(8): movzx 0xfffffcd8(%rbp),%r8d
826d(5): jmp 0xffffdfa0(%rip)
8272(7): mov 0xfffffcf8(%rbp),%rsi
8279(7): mov 0xfffffcf0(%rbp),%rdi
8280(7): mov %r9b,0xfffffca8(%rbp)
8287(7): mov %r8b,0xfffffcb0(%rbp)
828e(5): call 0x7952(%rip)
8293(3): xor $0x1,%eax
8296(8): movzx 0xfffffcb0(%rbp),%r8d
829e(8): movzx 0xfffffca8(%rbp),%r9d
82a6(3): mov %eax,%r12d
82a9(2): xor %eax,%eax
82ab(5): jmp 0xfffff0f1(%rip)
82b0(8): movzx 0xfffffcb0(%rbp),%r8d
82b8(8): movzx 0xfffffca8(%rbp),%r9d
82c0(5): jmp 0xffffe5f0(%rip)
82c5(7): mov 0xfffffcf8(%rbp),%rsi
82cc(5): mov $0x4,%edi
82d1(5): call 0x711f(%rip)
82d6(5): mov $0x5,%edx
82db(3): mov %rax,%r13
82de(7): lea 0xe110(%rip),%rsi
82e5(5): jmp 0xffffee1a(%rip)
82ea(7): mov 0x21729f(%rip),%rsi
82f1(5): mov $0x4,%edi
82f6(5): call 0x70fa(%rip)
82fb(7): lea 0xf706(%rip),%rsi
8302(2): xor %edi,%edi
8304(3): mov %rax,%r12
8307(5): mov $0x5,%edx
830c(5): call 0xffffa7c4(%rip)
8311(2): xor %esi,%esi
8313(3): mov %rax,%rdx
8316(2): xor %edi,%edi
8318(2): xor %eax,%eax
831a(3): mov %r12,%rcx
831d(5): call 0xffffac13(%rip)
8322(4): cmp $0x0,0x18(%rbx)
8326(6): jnz 0xffffeb7e(%rip)
832c(5): jmp 0xffffe134(%rip)
8331(7): mov %r9b,0xfffffcb0(%rbp)
8338(5): call 0xffffa618(%rip)
833d(3): cmp $0x2,(%rax)
8340(3): mov %rax,%r12
8343(8): movzx 0xfffffcb0(%rbp),%r9d
834b(6): jz 0x466(%rip)
8351(7): mov 0xfffffcf8(%rbp),%rsi
8358(5): mov $0x4,%edi
835d(5): call 0x7093(%rip)
8362(7): lea 0xfa70(%rip),%rsi
8369(5): mov $0x5,%edx
836e(2): xor %edi,%edi
8370(3): mov %rax,%rbx
8373(5): call 0xffffa75d(%rip)
8378(4): mov (%r12),%esi
837c(3): mov %rax,%rdx
837f(3): mov %rbx,%rcx
8382(2): xor %edi,%edi
8384(2): xor %eax,%eax
8386(3): xor %r12d,%r12d
8389(5): call 0xffffaba7(%rip)
838e(5): jmp 0xffffe0d8(%rip)
8393(5): movzx 0x2e(%rbx),%r14d
8398(3): test %r14b,%r14b
839b(6): jnz 0x5d1(%rip)
83a1(3): test %r13b,%r13b
83a4(6): jnz 0x5a4(%rip)
83aa(b): mov $0x0,0xfffffcb0(%rbp)
83b5(6): mov $0x1,%r14d
83bb(6): mov $0x11,%r15d
83c1(5): jmp 0xffffdcc8(%rip)
83c6(4): cmp $0x2,0x4(%rbx)
83ca(6): jnz 0xfffff07d(%rip)
83d0(6): mov 0xfffffd98(%rbp),%eax
83d6(5): and $0xf000,%eax
83db(5): cmp $0x8000,%eax
83e0(6): jnz 0xfffffc19(%rip)
83e6(5): jmp 0xfffff061(%rip)
83eb(7): mov 0xfffffcf0(%rbp),%rsi
83f2(5): mov $0x4,%edi
83f7(5): call 0x6ff9(%rip)
83fc(5): mov $0x5,%edx
8401(3): mov %rax,%r13
8404(7): lea 0xfa5a(%rip),%rsi
840b(5): jmp 0xffffecf4(%rip)
8410(7): mov 0xfffffcec(%rbp),%r8d
8417(7): mov 0xfffffcf8(%rbp),%rdx
841e(5): mov $0xffffffff,%ecx
8423(7): mov 0xfffffcf0(%rbp),%rdi
842a(2): mov %ecx,%esi
842c(5): call 0x2314(%rip)
8431(2): test %eax,%eax
8433(6): jnz 0xffffdfd7(%rip)
8439(5): jmp 0xffffe02d(%rip)
843e(3): mov %r12,%rdx
8441(3): mov %r14,%rdi
8444(7): mov %r9b,0xfffffcb0(%rbp)
844b(7): mov %r8,0xfffffca8(%rbp)
8452(5): call 0xffffa83e(%rip)
8457(2): test %eax,%eax
8459(8): movzx 0xfffffcb0(%rbp),%r9d
8461(6): jnz 0xffffe588(%rip)
8467(4): lea 0x0(%r14,%r12,1),%rdi
846b(3): mov %r15,%rsi
846e(5): call 0xffffa882(%rip)
8473(2): test %eax,%eax
8475(8): movzx 0xfffffcb0(%rbp),%r9d
847d(7): mov 0xfffffca8(%rbp),%r8
8484(6): jnz 0xffffe565(%rip)
848a(7): mov 0xfffffcf8(%rbp),%rdi
8491(4): or $0xffffffff,%rcx
8495(2): REPNZ scasb rdi(%es,10),%al
8497(3): mov %rcx,%rax
849a(3): not %rax
849d(4): lea 0xffffffff(%rax),%r14
84a1(5): lea 0x1(%r14,%r8,1),%rdi
84a6(5): call 0x9b6a(%rip)
84ab(7): mov 0x2170ee(%rip),%r15
84b2(7): mov 0xfffffcf8(%rbp),%rsi
84b9(3): mov %r14,%rdx
84bc(3): mov %rax,%rdi
84bf(3): mov %rax,%r12
84c2(5): call 0xffffaa5e(%rip)
84c7(3): mov %r15,%rsi
84ca(3): mov %rax,%rdi
84cd(5): call 0xffffa4c3(%rip)
84d2(7): lea 0xffffff30(%rbp),%rdx
84d9(3): mov %r12,%rsi
84dc(5): mov $0x1,%edi
84e1(5): call 0xffffa8ef(%rip)
84e6(3): mov %r12,%rdi
84e9(3): mov %eax,%r15d
84ec(5): call 0xffffabe4(%rip)
84f1(3): test %r15d,%r15d
84f4(8): movzx 0xfffffcb0(%rbp),%r9d
84fc(6): jnz 0xffffe4ed(%rip)
8502(7): mov 0xffffff38(%rbp),%rax
8509(7): cmp %rax,0xfffffd88(%rbp)
8510(6): jnz 0xffffe4d9(%rip)
8516(7): mov 0xffffff30(%rbp),%rax
851d(7): cmp %rax,0xfffffd80(%rbp)
8524(6): jnz 0xffffe4c5(%rip)
852a(4): cmp $0x0,0x18(%rbx)
852e(6): jz 0x268(%rip)
8534(7): lea 0xf3f5(%rip),%rsi
853b(5): mov $0x5,%edx
8540(2): xor %edi,%edi
8542(5): call 0xffffa58e(%rip)
8547(3): mov %rax,%rbx
854a(7): mov 0xfffffcf0(%rbp),%rdx
8551(5): mov $0x4,%esi
8556(5): mov $0x1,%edi
855b(5): call 0x6d75(%rip)
8560(7): mov 0xfffffcf8(%rbp),%rdx
8567(3): mov %rax,%r12
856a(5): mov $0x4,%esi
856f(2): xor %edi,%edi
8571(5): call 0x6d5f(%rip)
8576(3): mov %r12,%r8
8579(3): mov %rax,%rcx
857c(3): mov %rbx,%rdx
857f(2): xor %esi,%esi
8581(2): xor %edi,%edi
8583(2): xor %eax,%eax
8585(5): call 0xffffa9ab(%rip)
858a(3): xor %r12d,%r12d
858d(5): jmp 0xffffded9(%rip)
8592(7): mov 0xfffffca4(%rbp),%r12d
8599(7): mov 0xfffffcf8(%rbp),%rsi
85a0(7): lea 0xfffffd08(%rbp),%rcx
85a7(2): xor %edi,%edi
85a9(7): mov %r8b,0xfffffce0(%rbp)
85b0(b): mov $0x0,0xfffffd08(%rbp)
85bb(3): not %r12d
85be(7): and 0xfffffcec(%rbp),%r12d
85c5(3): mov %r12d,%edx
85c8(5): call 0xffffa7d8(%rip)
85cd(2): test %eax,%eax
85cf(8): movzx 0xfffffce0(%rbp),%r8d
85d7(6): jz 0xffffdbc8(%rip)
85dd(7): mov 0xfffffcf8(%rbp),%rdi
85e4(3): mov %r12d,%esi
85e7(6): and $0xffffefff,%esi
85ed(5): call 0xffffa773(%rip)
85f2(2): test %eax,%eax
85f4(8): movzx 0xfffffce0(%rbp),%r8d
85fc(6): jz 0xffffdba3(%rip)
8602(7): mov 0xfffffcf8(%rbp),%rsi
8609(5): mov $0x4,%edi
860e(5): call 0x6de2(%rip)
8613(5): mov $0x5,%edx
8618(3): mov %rax,%r13
861b(7): lea 0xf915(%rip),%rsi
8622(5): jmp 0xffffeadd(%rip)
8627(7): mov 0xfffffcf0(%rbp),%rsi
862e(5): mov $0x4,%edi
8633(5): call 0x6dbd(%rip)
8638(7): lea 0xf841(%rip),%rsi
863f(5): mov $0x5,%edx
8644(3): mov %rax,%r12
8647(2): xor %edi,%edi
8649(5): call 0xffffa487(%rip)
864e(7): mov %rax,0xfffffcd8(%rbp)
8655(5): call 0xffffa2fb(%rip)
865a(3): mov %r12,%rcx
865d(7): mov 0xfffffcd8(%rbp),%rdx
8664(2): mov (%rax),%esi
8666(5): jmp 0xfffff6fb(%rip)
866b(7): mov 0xfffffcf8(%rbp),%rsi
8672(7): mov 0xfffffcf0(%rbp),%rdi
8679(7): mov %r9b,0xfffffca4(%rbp)
8680(7): mov %r8b,0xfffffca8(%rbp)
8687(7): mov %rdx,0xfffffcb0(%rbp)
868e(5): call 0x7552(%rip)
8693(2): test %al,%al
8695(7): mov 0xfffffcb0(%rbp),%rdx
869c(8): movzx 0xfffffca8(%rbp),%r8d
86a4(8): movzx 0xfffffca4(%rbp),%r9d
86ac(6): jz 0x87b(%rip)
86b2(3): mov 0x18(%rdx),%eax
86b5(5): and $0xf000,%eax
86ba(5): cmp $0xa000,%eax
86bf(6): jz 0xffffec2d(%rip)
86c5(5): mov 0x18(%r12),%eax
86ca(5): and $0xf000,%eax
86cf(5): cmp $0xa000,%eax
86d4(6): jz 0xffffec18(%rip)
86da(5): jmp 0xffffebea(%rip)
86df(1): nop 
86e0(4): movzx 0x25(%rbx),%esi
86e4(7): mov 0xfffffcf8(%rbp),%rdi
86eb(2): xor %edx,%edx
86ed(3): mov %rbx,%rcx
86f0(5): call 0xffffd1a0(%rip)
86f5(2): test %al,%al
86f7(6): jnz 0xfffffa35(%rip)
86fd(4): cmp $0x0,0x26(%rbx)
8701(6): jnz 0xffffe4af(%rip)
8707(5): jmp 0xfffffa25(%rip)
870c(7): mov 0xfffffe10(%rbp),%rdx
8713(7): mov 0xfffffe18(%rbp),%rsi
871a(7): mov 0xfffffcf8(%rbp),%rdi
8721(5): call 0x189f(%rip)
8726(7): mov 0xfffffcc8(%rbp),%rax
872d(3): mov $0x1,(%rax)
8730(5): jmp 0xfffff1e8(%rip)
8735(7): mov 0xfffffcf0(%rbp),%rdx
873c(5): mov $0x4,%esi
8741(5): mov $0x1,%edi
8746(5): call 0x6b8a(%rip)
874b(7): mov 0xfffffcf8(%rbp),%rdx
8752(5): mov $0x4,%esi
8757(2): xor %edi,%edi
8759(3): mov %rax,%r12
875c(5): call 0x6b74(%rip)
8761(5): mov $0x5,%edx
8766(3): mov %rax,%rbx
8769(7): lea 0xf120(%rip),%rsi
8770(5): jmp 0xffffeaeb(%rip)
8775(3): mov 0x10(%rbx),%edx
8778(7): mov 0xfffffcf8(%rbp),%rdi
877f(5): mov $0xffffffff,%esi
8784(5): call 0x204c(%rip)
8789(2): test %eax,%eax
878b(6): jnz 0xffffd7a5(%rip)
8791(5): jmp 0xffffdcd5(%rip)
8796(7): lea 0xf1cb(%rip),%rsi
879d(5): mov $0x5,%edx
87a2(2): xor %edi,%edi
87a4(5): call 0xffffa32c(%rip)
87a9(3): mov %rax,%rbx
87ac(5): jmp 0xfffffd9e(%rip)
87b1(b): mov $0x0,0xfffffcb0(%rbp)
87bc(6): mov $0x1,%r14d
87c2(6): mov $0x11,%r15d
87c8(5): jmp 0xffffd7e6(%rip)
87cd(7): mov 0xfffffcf8(%rbp),%rsi
87d4(7): mov 0xfffffcf0(%rbp),%rdi
87db(2): xor %edx,%edx
87dd(5): call 0xffffc7f3(%rip)
87e2(5): jmp 0xfffff186(%rip)
87e7(7): mov 0xfffffcf0(%rbp),%rsi
87ee(5): mov $0x4,%edi
87f3(5): call 0x6bfd(%rip)
87f8(7): lea 0xf725(%rip),%rsi
87ff(2): xor %edi,%edi
8801(5): mov $0x5,%edx
8806(3): mov %rax,%r12
8809(5): call 0xffffa2c7(%rip)
880e(3): mov %rax,%r13
8811(5): call 0xffffa13f(%rip)
8816(2): mov (%rax),%esi
8818(2): xor %edi,%edi
881a(3): mov %r12,%rcx
881d(3): mov %r13,%rdx
8820(2): xor %eax,%eax
8822(5): call 0xffffa70e(%rip)
8827(7): mov 0xfffffcd0(%rbp),%rdi
882e(5): call 0xffffa8a2(%rip)
8833(5): jmp 0xffffe37d(%rip)
8838(7): mov 0xfffffcf0(%rbp),%rsi
883f(5): mov $0x4,%edi
8844(5): call 0x6bac(%rip)
8849(7): lea 0xf602(%rip),%rsi
8850(5): mov $0x5,%edx
8855(2): xor %edi,%edi
8857(3): mov %rax,%r12
885a(5): call 0xffffa276(%rip)
885f(3): mov %rax,%r15
8862(5): call 0xffffa0ee(%rip)
8867(2): mov (%rax),%esi
8869(3): mov %r12,%rcx
886c(3): mov %r15,%rdx
886f(2): xor %edi,%edi
8871(2): xor %eax,%eax
8873(3): xor %r12d,%r12d
8876(5): call 0xffffa6ba(%rip)
887b(5): jmp 0xfffff2e8(%rip)
8880(7): mov 0xfffffdb0(%rbp),%rsi
8887(7): mov 0xfffffcf0(%rbp),%rdi
888e(5): call 0x1f92(%rip)
8893(3): test %rax,%rax
8896(3): mov %rax,%r12
8899(6): jz 0x84a(%rip)
889f(4): movzx 0x16(%rbx),%ecx
88a3(7): mov 0xfffffcf8(%rbp),%rdx
88aa(6): mov $0xffffffff,%r8d
88b0(5): mov $0xffffff9c,%esi
88b5(3): mov %rax,%rdi
88b8(5): call 0x1d28(%rip)
88bd(2): test %eax,%eax
88bf(6): mov %eax,0xfffffce0(%rbp)
88c5(6): jle 0x843(%rip)
88cb(4): cmp $0x1,0x2d(%rbx)
88cf(2): jnz 0xb(%rip)
88d1(3): test %r14b,%r14b
88d4(6): jz 0xbe5(%rip)
88da(3): mov %r12,%rdi
88dd(5): call 0xffffa7f3(%rip)
88e2(7): mov 0xfffffcf8(%rbp),%rsi
88e9(5): mov $0x4,%edi
88ee(5): call 0x6b02(%rip)
88f3(7): lea 0xf2f6(%rip),%rsi
88fa(2): xor %edi,%edi
88fc(5): mov $0x5,%edx
8901(3): mov %rax,%r12
8904(5): call 0xffffa1cc(%rip)
8909(6): mov 0xfffffce0(%rbp),%esi
890f(3): mov %rax,%rdx
8912(3): mov %r12,%rcx
8915(2): xor %edi,%edi
8917(2): xor %eax,%eax
8919(5): call 0xffffa617(%rip)
891e(5): jmp 0xffffe292(%rip)
8923(7): mov 0xfffffcf8(%rbp),%rsi
892a(5): mov $0x4,%edi
892f(5): call 0x6ac1(%rip)
8934(5): mov $0x5,%edx
8939(3): mov %rax,%r13
893c(7): lea 0xf4de(%rip),%rsi
8943(5): jmp 0xffffe7bc(%rip)
8948(5): cmp $0x0,0x40(%rbx)
894d(3): mov %r13d,%r14d
8950(b): mov $0x0,0xfffffcb0(%rbp)
895b(6): mov $0x11,%r15d
8961(6): jnz 0xffffd661(%rip)
8967(5): jmp 0xffffd722(%rip)
896c(7): mov 0xfffffcf8(%rbp),%rsi
8973(5): mov $0x4,%edi
8978(7): mov %r9b,0xfffffca8(%rbp)
897f(6): mov $0x11,%r15d
8985(5): call 0x6a6b(%rip)
898a(7): lea 0xf37f(%rip),%rsi
8991(3): mov %rax,%r12
8994(5): mov $0x5,%edx
8999(2): xor %edi,%edi
899b(5): call 0xffffa135(%rip)
89a0(3): mov %r12,%rdx
89a3(3): mov %rax,%rsi
89a6(5): mov $0x1,%edi
89ab(2): xor %eax,%eax
89ad(5): call 0xffffa533(%rip)
89b2(b): mov $0x0,0xfffffcb0(%rbp)
89bd(8): movzx 0xfffffca8(%rbp),%r9d
89c5(5): jmp 0xffffd5e9(%rip)
89ca(6): mov 0xfffffe30(%rbp),%eax
89d0(6): cmp %eax,0xfffffda0(%rbp)
89d6(6): jnz 0xffffd94c(%rip)
89dc(5): jmp 0xffffd98b(%rip)
89e1(5): call 0xffffd20f(%rip)
89e6(2): not %eax
89e8(6): and %eax,0xfffffca4(%rbp)
89ee(6): jz 0xffffd9af(%rip)
89f4(7): cmp $0x1,0xfffffceb(%rbp)
89fb(6): jz 0xffffd9af(%rip)
8a01(3): test %r14b,%r14b
8a04(6): jnz 0x973(%rip)
8a0a(6): mov 0xfffffe28(%rbp),%eax
8a10(6): mov %eax,0xfffffc74(%rbp)
8a16(2): not %eax
8a18(6): test %eax,0xfffffca4(%rbp)
8a1e(6): jnz 0xffffd98c(%rip)
8a24(5): jmp 0xffffda42(%rip)
8a29(6): mov 0xfffffcec(%rbp),%eax
8a2f(5): mov $0x1b6,%edx
8a34(5): mov $0x1ff,%ebx
8a39(5): and $0x7000,%eax
8a3e(5): cmp $0x4000,%eax
8a43(3): cmovne %edx,%ebx
8a46(5): call 0xffffd1aa(%rip)
8a4b(2): not %eax
8a4d(2): mov %eax,%edx
8a4f(2): and %ebx,%edx
8a51(5): jmp 0xfffffd27(%rip)
8a56(7): and $0x1ff,%r12d
8a5d(3): test %r14b,%r14b
8a60(7): mov %r12d,0xfffffc5c(%rbp)
8a67(6): jnz 0x599(%rip)
8a6d(4): cmp $0x1,0x23(%rbx)
8a71(7): mov 0xfffffcf8(%rbp),%rdi
8a78(2): sbb %esi,%esi
8a7a(2): xor %eax,%eax
8a7c(6): and $0xfffffe00,%esi
8a82(6): add $0x201,%esi
8a88(5): call 0x2a08(%rip)
8a8d(6): mov %eax,0xfffffcd8(%rbp)
8a93(5): call 0xffff9ebd(%rip)
8a98(3): mov %rax,%r12
8a9b(a): mov $0x280375465148160,%rax
8aa5(4): test %rax,0x20(%rbx)
8aa9(6): jnz 0x88c(%rip)
8aaf(7): cmp $0x0,0xfffffcd8(%rbp)
8ab6(6): js 0x88c(%rip)
8abc(a): mov $0x0,0xfffffc88(%rbp)
8ac6(7): lea 0xffffff30(%rbp),%rax
8acd(6): mov 0xfffffcd8(%rbp),%esi
8ad3(5): mov $0x1,%edi
8ad8(3): mov %rax,%rdx
8adb(7): mov %rax,0xfffffc98(%rbp)
8ae2(5): call 0xffffa33e(%rip)
8ae7(2): test %eax,%eax
8ae9(6): mov %eax,0xfffffcb8(%rbp)
8aef(6): jnz 0xba7(%rip)
8af5(7): cmp $0x0,0xfffffcc8(%rbp)
8afc(6): jz 0x6d3(%rip)
8b02(4): cmp $0x0,0x38(%rbx)
8b06(6): jnz 0xe5e(%rip)
8b0c(5): call 0xffffa504(%rip)
8b11(7): mov 0xffffff68(%rbp),%rcx
8b18(3): movsxd %eax,%r12
8b1b(a): mov $0x2305843009213562880,%rax
8b25(6): mov $0x200,%r8d
8b2b(6): mov 0xfffffce0(%rbp),%edi
8b31(7): mov %r8,0xfffffcd0(%rbp)
8b38(7): lea 0xfffe0000(%rcx),%rdx
8b3f(3): cmp %rax,%rdx
8b42(5): mov $0x20000,%eax
8b47(4): lea 0xffffffff(%rcx),%rdx
8b4b(4): cmovbe %rcx,%rax
8b4f(7): mov %rax,0xfffffc90(%rbp)
8b56(a): mov $0x2305843009213693951,%rax
8b60(3): cmp %rax,%rdx
8b63(4): cmovnbe %r8,%rcx
8b67(2): xor %edx,%edx
8b69(2): xor %esi,%esi
8b6b(7): mov %rcx,0xfffffc68(%rbp)
8b72(5): mov $0x2,%ecx
8b77(5): call 0x28d9(%rip)
8b7c(7): mov 0xfffffeb8(%rbp),%r9d
8b83(7): mov 0xfffffcd0(%rbp),%r8
8b8a(7): and $0xf000,%r9d
8b91(7): cmp $0x8000,%r9d
8b98(6): jz 0xee2(%rip)
8b9e(6): mov 0xffffff48(%rbp),%eax
8ba4(5): and $0xf000,%eax
8ba9(5): cmp $0x8000,%eax
8bae(6): jz 0xe61(%rip)
8bb4(7): mov 0xfffffed8(%rbp),%rdi
8bbb(a): mov $0x9223372036854775807,%rax
8bc5(7): mov 0xfffffc90(%rbp),%rsi
8bcc(3): sub %r12,%rax
8bcf(7): mov %r9d,0xfffffc80(%rbp)
8bd6(3): mov %rax,%r8
8bd9(a): mov $0x2305843009213562880,%rax
8be3(7): lea 0xfffe0000(%rdi),%rdx
8bea(7): mov %r8,0xfffffcd0(%rbp)
8bf1(3): cmp %rax,%rdx
8bf4(5): mov $0x20000,%eax
8bf9(3): mov %r8,%rdx
8bfc(4): cmovnbe %rax,%rdi
8c00(5): call 0x2460(%rip)
8c05(7): mov 0xfffffc80(%rbp),%r9d
8c0c(3): mov %rax,%rcx
8c0f(7): mov 0xfffffcd0(%rbp),%r8
8c16(7): cmp $0x8000,%r9d
8c1d(6): jz 0xcd0(%rip)
8c23(7): mov 0xfffffc90(%rbp),%rax
8c2a(2): xor %edx,%edx
8c2c(5): lea 0xffffffff(%rcx,%rax,1),%rsi
8c31(3): mov %rsi,%rax
8c34(3): div %rcx,%rax
8c37(3): sub %rdx,%rsi
8c3a(7): mov %rsi,0xfffffc90(%rbp)
8c41(6): jz 0xab0(%rip)
8c47(3): cmp %r8,%rsi
8c4a(6): jnbe 0xaa7(%rip)
8c50(7): mov 0xfffffc90(%rbp),%rax
8c57(4): lea 0x0(%r12,%rax,1),%rdi
8c5b(5): call 0x93b5(%rip)
8c60(5): lea 0xffffffff(%rax,%r12,1),%rcx
8c65(2): xor %edx,%edx
8c67(7): mov %rax,0xfffffcd0(%rbp)
8c6e(3): mov %rcx,%rax
8c71(3): div %r12,%rax
8c74(3): sub %rdx,%rcx
8c77(7): cmp $0x0,0xfffffcb8(%rbp)
8c7e(7): mov %rcx,0xfffffc50(%rbp)
8c85(6): jz 0xa78(%rip)
8c8b(7): mov $0x0,0xfffffc5b(%rbp)
8c92(a): mov $0x1,0xfffffc70(%rbp)
8c9c(7): mov 0xfffffed0(%rbp),%rax
8ca3(6): mov 0xfffffce0(%rbp),%edi
8ca9(3): xor %r12d,%r12d
8cac(7): mov %rax,0xfffffc80(%rbp)
8cb3(7): lea 0xfffffd10(%rbp),%rax
8cba(3): mov %rax,%rsi
8cbd(7): mov %rax,0xfffffcb8(%rbp)
8cc4(5): call 0x13cc(%rip)
8cc9(7): lea 0xfffffd07(%rbp),%rax
8cd0(2): xor %ecx,%ecx
8cd2(7): mov %rbx,0xfffffc78(%rbp)
8cd9(b): mov $0x0,0xfffffc60(%rbp)
8ce4(3): mov %rcx,%rbx
8ce7(7): mov %r13d,0xfffffca0(%rbp)
8cee(7): mov %rax,0xfffffc48(%rbp)
8cf5(7): lea 0xfffffd08(%rbp),%rax
8cfc(7): mov %rax,0xfffffc40(%rbp)
8d03(7): mov 0xfffffcb8(%rbp),%rdi
8d0a(5): call 0x13b6(%rip)
8d0f(2): test %al,%al
8d11(6): jz 0xc00(%rip)
8d17(8): cmp $0x0,0xfffffd28(%rbp)
8d1f(6): jz 0xacf(%rip)
8d25(3): mov %rbx,%rdx
8d28(3): mov %r12,%rcx
8d2b(3): xor %r13d,%r13d
8d2e(2): xor %eax,%eax
8d30(5): jmp 0xbd(%rip)
8d35(3): nop (%rax)
8d38(7): cmp $0x3,0xfffffc70(%rbp)
8d3f(6): mov $0x0,%r8d
8d45(8): cmove 0xfffffc68(%rbp),%r8
8d4d(4): sub $0x8,%rsp
8d51(7): mov 0xfffffc90(%rbp),%rcx
8d58(7): mov 0xfffffc50(%rbp),%rdx
8d5f(6): mov 0xfffffcd8(%rbp),%esi
8d65(6): mov 0xfffffce0(%rbp),%edi
8d6b(6): mov $0x1,%r9d
8d71(6): push 0xfffffc48(%rbp)
8d77(6): push 0xfffffc40(%rbp)
8d7d(1): push %rbx
8d7e(6): push 0xfffffcf8(%rbp)
8d84(6): push 0xfffffcf0(%rbp)
8d8a(5): call 0xffffc626(%rip)
8d8f(4): add $0x30,%rsp
8d93(2): test %al,%al
8d95(6): jz 0x103(%rip)
8d9b(7): mov 0xfffffd08(%rbp),%rax
8da2(4): lea 0x0(%r12,%rax,1),%rcx
8da6(3): test %rax,%rax
8da9(7): mov %rcx,0xfffffc60(%rbp)
8db0(2): jz 0xf(%rip)
8db2(7): movzx 0xfffffd07(%rbp),%eax
8db9(6): mov %al,0xfffffcc8(%rbp)
8dbf(7): mov 0xfffffc60(%rbp),%rcx
8dc6(7): cmp %rcx,0xfffffc80(%rbp)
8dcd(6): jz 0xa1a(%rip)
8dd3(4): lea 0x1(%r13),%eax
8dd7(7): cmp 0xfffffd28(%rbp),%rax
8dde(3): mov %r12,%rcx
8de1(3): mov %rbx,%rdx
8de4(3): mov %rax,%r13
8de7(6): jnb 0xa07(%rip)
8ded(4): lea 0x0(%rax,%rax,2),%rsi
8df1(7): mov 0xfffffd38(%rbp),%rax
8df8(4): lea 0x0(%rax,%rsi,8),%rax
8dfc(7): mov 0xfffffc80(%rbp),%rsi
8e03(3): mov (%rax),%r12
8e06(4): mov 0x8(%rax),%rbx
8e0a(4): lea 0x0(%r12,%rbx,1),%rax
8e0e(3): cmp %rax,%rsi
8e11(2): jnl 0xf(%rip)
8e13(3): cmp %rsi,%r12
8e16(4): cmovnl %rsi,%r12
8e1a(3): sub %r12,%rsi
8e1d(3): mov %rsi,%rbx
8e20(3): mov %r12,%rax
8e23(7): mov $0x0,0xfffffcc8(%rbp)
8e2a(3): sub %rcx,%rax
8e2d(3): mov %rax,%rcx
8e30(3): sub %rdx,%rcx
8e33(6): jz 0xffffff05(%rip)
8e39(6): mov 0xfffffce0(%rbp),%edi
8e3f(2): xor %edx,%edx
8e41(3): mov %r12,%rsi
8e44(7): mov %rcx,0xfffffc60(%rbp)
8e4b(5): call 0xffff9d75(%rip)
8e50(3): test %rax,%rax
8e53(7): mov 0xfffffc60(%rbp),%rcx
8e5a(6): js 0xe75(%rip)
8e60(6): mov 0xfffffc70(%rbp),%eax
8e66(3): cmp $0x3,%eax
8e69(3): setz %dl
8e6c(3): sub $0x1,%eax
8e6f(6): jz 0x759(%rip)
8e75(7): mov 0xfffffcf8(%rbp),%rsi
8e7c(6): mov 0xfffffcd8(%rbp),%edi
8e82(3): movzx %dl,%edx
8e85(5): call 0xffffc46b(%rip)
8e8a(2): test %al,%al
8e8c(6): mov %al,0xfffffcc8(%rbp)
8e92(6): jnz 0xfffffea6(%rip)
8e98(7): mov 0xfffffc78(%rbp),%rbx
8e9f(7): mov 0xfffffca0(%rbp),%r13d
8ea6(7): mov 0xfffffd38(%rbp),%rdi
8ead(5): call 0xffffa223(%rip)
8eb2(3): xor %r8d,%r8d
8eb5(6): mov 0xfffffcd8(%rbp),%edi
8ebb(7): mov %r8b,0xfffffcc8(%rbp)
8ec2(5): call 0xffff9d6e(%rip)
8ec7(2): test %eax,%eax
8ec9(8): movzx 0xfffffcc8(%rbp),%r8d
8ed1(6): jns 0xffffeea7(%rip)
8ed7(7): mov 0xfffffcf8(%rbp),%rsi
8ede(5): mov $0x4,%edi
8ee3(5): call 0x650d(%rip)
8ee8(7): lea 0xf035(%rip),%rsi
8eef(5): mov $0x5,%edx
8ef4(2): xor %edi,%edi
8ef6(3): mov %rax,%r12
8ef9(5): call 0xffff9bd7(%rip)
8efe(7): mov %rax,0xfffffcd8(%rbp)
8f05(5): call 0xffff9a4b(%rip)
8f0a(7): mov 0xfffffcd8(%rbp),%rdx
8f11(2): mov (%rax),%esi
8f13(3): mov %r12,%rcx
8f16(2): xor %edi,%edi
8f18(2): xor %eax,%eax
8f1a(5): call 0xffffa016(%rip)
8f1f(3): xor %r8d,%r8d
8f22(5): jmp 0xffffee56(%rip)
8f27(5): movzx 0x18(%rbx),%r12d
8f2c(4): xor $0x1,%r12d
8f30(5): jmp 0xffffe46c(%rip)
8f35(7): mov $0x0,0xfffffceb(%rbp)
8f3c(6): mov $0x1,%r12d
8f42(5): jmp 0xffffec05(%rip)
8f47(7): mov 0xffffff30(%rbp),%rax
8f4e(7): cmp %rax,0xfffffea0(%rbp)
8f55(6): jnz 0xffffeeef(%rip)
8f5b(5): jmp 0xffffdbc1(%rip)
8f60(7): mov 0xfffffcf8(%rbp),%rdi
8f67(5): call 0xffff99f9(%rip)
8f6c(2): test %eax,%eax
8f6e(6): jnz 0xc38(%rip)
8f74(4): cmp $0x0,0x2e(%rbx)
8f78(2): jz 0x3b(%rip)
8f7a(7): mov 0xfffffcf8(%rbp),%rsi
8f81(5): mov $0x4,%edi
8f86(5): call 0x646a(%rip)
8f8b(7): lea 0xed7e(%rip),%rsi
8f92(3): mov %rax,%r12
8f95(5): mov $0x5,%edx
8f9a(2): xor %edi,%edi
8f9c(5): call 0xffff9b34(%rip)
8fa1(3): mov %r12,%rdx
8fa4(3): mov %rax,%rsi
8fa7(5): mov $0x1,%edi
8fac(2): xor %eax,%eax
8fae(5): call 0xffff9f32(%rip)
8fb3(5): movzx 0x21(%rbx),%r14d
8fb8(6): mov 0xfffffca4(%rbp),%eax
8fbe(6): mov %eax,0xfffffc88(%rbp)
8fc4(3): test %r14b,%r14b
8fc7(2): jz 0x45(%rip)
8fc9(6): mov 0xfffffc5c(%rbp),%edx
8fcf(7): mov 0xfffffcf8(%rbp),%rsi
8fd6(3): mov %rbx,%r8
8fd9(7): mov 0xfffffcf0(%rbp),%rdi
8fe0(5): mov $0x1,%ecx
8fe5(5): call 0xffffc7db(%rip)
8fea(2): test %al,%al
8fec(3): mov %eax,%r8d
8fef(b): mov $0x0,0xfffffcd0(%rbp)
8ffa(6): jz 0xffffed7e(%rip)
9000(6): mov 0xfffffca4(%rbp),%eax
9006(6): mov %eax,0xfffffc88(%rbp)
900c(6): mov 0xfffffc88(%rbp),%eax
9012(7): mov 0xfffffcf8(%rbp),%rdi
9019(5): mov $0xc1,%esi
901e(2): not %eax
9020(6): and 0xfffffc5c(%rbp),%eax
9026(2): mov %eax,%edx
9028(6): mov %eax,0xfffffcd0(%rbp)
902e(2): xor %eax,%eax
9030(5): call 0x2460(%rip)
9035(3): mov %eax,%r14d
9038(6): mov %eax,0xfffffcd8(%rbp)
903e(5): call 0xffff9912(%rip)
9043(3): mov (%rax),%r8d
9046(3): mov %rax,%r12
9049(3): mov %r14d,%eax
904c(3): shr $0x1f,%eax
904f(4): cmp $0x11,%r8d
9053(3): setz %dl
9056(2): and %al,%dl
9058(3): mov %edx,%r14d
905b(6): jz 0x407(%rip)
9061(4): cmp $0x0,0x18(%rbx)
9065(6): mov $0x11,%r8d
906b(6): jz 0x38a(%rip)
9071(6): mov $0x1,%r9d
9077(7): mov 0xfffffcf8(%rbp),%rsi
907e(5): mov $0x4,%edi
9083(7): mov %r9b,0xfffffcd0(%rbp)
908a(7): mov %r8d,0xfffffcd8(%rbp)
9091(5): call 0x635f(%rip)
9096(7): lea 0xedf3(%rip),%rsi
909d(5): mov $0x5,%edx
90a2(2): xor %edi,%edi
90a4(3): mov %rax,%r12
90a7(5): call 0xffff9a29(%rip)
90ac(7): mov 0xfffffcd8(%rbp),%r8d
90b3(3): mov %rax,%rdx
90b6(3): mov %r12,%rcx
90b9(2): xor %edi,%edi
90bb(2): xor %eax,%eax
90bd(3): mov %r8d,%esi
90c0(5): call 0xffff9e70(%rip)
90c5(8): movzx 0xfffffcd0(%rbp),%r9d
90cd(3): xor %r8d,%r8d
90d0(b): mov $0x0,0xfffffcd0(%rbp)
90db(3): mov %r9d,%r14d
90de(5): jmp 0xffffec9a(%rip)
90e3(7): mov 0xfffffcf0(%rbp),%rsi
90ea(5): mov $0x4,%edi
90ef(5): call 0x6301(%rip)
90f4(5): mov $0x5,%edx
90f9(3): mov %rax,%r13
90fc(7): lea 0xee68(%rip),%rsi
9103(5): jmp 0xffffdffc(%rip)
9108(3): mov %r12,%rdi
910b(5): call 0xffff9fc5(%rip)
9110(5): movzx 0x25(%rbx),%r8d
9115(3): test %r8b,%r8b
9118(6): jnz 0xffffdc18(%rip)
911e(4): movzx 0x1d(%rbx),%eax
9122(2): test %al,%al
9124(6): mov %al,0xfffffce0(%rbp)
912a(6): jnz 0x279(%rip)
9130(8): movzx 0xfffffce0(%rbp),%r8d
9138(7): mov $0x1,0xfffffce0(%rbp)
913f(5): jmp 0xffffd060(%rip)
9144(5): call 0xffff99ec(%rip)
9149(7): mov 0xfffffcf8(%rbp),%rsi
9150(7): lea 0xfffffea0(%rbp),%rdx
9157(5): mov $0x1,%edi
915c(7): mov %r9b,0xfffffca8(%rbp)
9163(7): mov %r8b,0xfffffcb0(%rbp)
916a(5): call 0xffff9c66(%rip)
916f(2): test %eax,%eax
9171(8): movzx 0xfffffcb0(%rbp),%r8d
9179(8): movzx 0xfffffca8(%rbp),%r9d
9181(6): jz 0xffffe690(%rip)
9187(5): jmp 0xffffccb8(%rip)
918c(7): mov 0xfffffcf0(%rbp),%rsi
9193(7): lea 0xffffff30(%rbp),%rdx
919a(5): mov $0x1,%edi
919f(7): mov %r9b,0xfffffca8(%rbp)
91a6(7): mov %r8b,0xfffffcb0(%rbp)
91ad(5): call 0xffff9c23(%rip)
91b2(2): test %eax,%eax
91b4(8): movzx 0xfffffcb0(%rbp),%r8d
91bc(8): movzx 0xfffffca8(%rbp),%r9d
91c4(6): jz 0xffffe5b8(%rip)
91ca(5): jmp 0xffffcc75(%rip)
91cf(b): mov $0x0,0xfffffcd0(%rbp)
91da(4): cmp $0x0,0x1f(%rbx)
91de(6): jnz 0x408(%rip)
91e4(4): cmp $0x0,0x1d(%rbx)
91e8(2): jz 0x5c(%rip)
91ea(6): mov 0xffffff4c(%rbp),%eax
91f0(6): cmp %eax,0xfffffd9c(%rbp)
91f6(2): jnz 0x10(%rip)
91f8(6): mov 0xffffff50(%rbp),%eax
91fe(6): cmp %eax,0xfffffda0(%rbp)
9204(2): jz 0x40(%rip)
9206(7): mov 0xfffffc98(%rbp),%r9
920d(6): mov 0xfffffcd8(%rbp),%edx
9213(7): lea 0xfffffd80(%rbp),%rcx
921a(7): mov 0xfffffcf8(%rbp),%rsi
9221(4): movzx %r14b,%r8d
9225(3): mov %rbx,%rdi
9228(5): call 0xffffc7b8(%rip)
922d(3): cmp $0xff,%eax
9230(6): jz 0xfffffc82(%rip)
9236(2): test %eax,%eax
9238(2): jnz 0xc(%rip)
923a(a): and $0xfffff1ff,0xfffffcc0(%rbp)
9244(4): cmp $0x0,0x27(%rbx)
9248(2): jz 0xf(%rip)
924a(7): test $0x80,0xffffff48(%rbp)
9251(6): jz 0xa2d(%rip)
9257(a): mov $0x71776119061217535,%rax
9261(4): test %rax,0x18(%rbx)
9265(6): jnz 0x2d8(%rip)
926b(4): cmp $0x0,0x2b(%rbx)
926f(6): jnz 0xa93(%rip)
9275(3): mov %r14d,%r12d
9278(4): and 0x20(%rbx),%r12b
927c(6): jnz 0x8fb(%rip)
9282(7): cmp $0x0,0xfffffc88(%rbp)
9289(6): mov $0x1,%r8d
928f(6): jz 0xfffffc26(%rip)
9295(7): mov %r8b,0xfffffcc8(%rbp)
929c(5): call 0xffffc954(%rip)
92a1(2): not %eax
92a3(6): test %eax,0xfffffc88(%rbp)
92a9(8): movzx 0xfffffcc8(%rbp),%r8d
92b1(6): jz 0xfffffc04(%rip)
92b7(6): mov 0xfffffc5c(%rbp),%edx
92bd(7): mov 0xfffffcf8(%rbp),%rsi
92c4(6): mov 0xfffffcd8(%rbp),%edi
92ca(5): call 0xffff9e16(%rip)
92cf(2): test %eax,%eax
92d1(8): movzx 0xfffffcc8(%rbp),%r8d
92d9(6): jz 0xfffffbdc(%rip)
92df(7): mov 0xfffffcf8(%rbp),%rsi
92e6(5): mov $0x4,%edi
92eb(5): call 0x6105(%rip)
92f0(7): lea 0xec0f(%rip),%rsi
92f7(5): mov $0x5,%edx
92fc(2): xor %edi,%edi
92fe(3): mov %rax,%r12
9301(5): call 0xffff97cf(%rip)
9306(7): mov %rax,0xfffffcc8(%rbp)
930d(5): call 0xffff9643(%rip)
9312(7): mov 0xfffffcc8(%rbp),%rdx
9319(2): mov (%rax),%esi
931b(3): mov %r12,%rcx
931e(2): xor %edi,%edi
9320(2): xor %eax,%eax
9322(5): call 0xffff9c0e(%rip)
9327(5): movzx 0x24(%rbx),%r8d
932c(4): xor $0x1,%r8d
9330(5): jmp 0xfffffb85(%rip)
9335(7): cmp $0x0,0xfffffcd8(%rbp)
933c(6): jns 0x252(%rip)
9342(5): movzx 0x16(%rbx),%r9d
9347(3): test %r9b,%r9b
934a(6): jnz 0xfffffc16(%rip)
9350(4): mov (%r12),%r8d
9354(4): cmp $0x2,%r8d
9358(6): jnz 0xfffffd1f(%rip)
935e(4): cmp $0x0,0x18(%rbx)
9362(6): jnz 0xfffffd15(%rip)
9368(a): mov $0x0,0xfffffc88(%rbp)
9372(5): jmp 0xfffffc9a(%rip)
9377(7): mov 0xfffffcf8(%rbp),%rsi
937e(7): lea 0xfffffe10(%rbp),%rdx
9385(5): mov $0x1,%edi
938a(5): call 0xffff9776(%rip)
938f(2): test %eax,%eax
9391(6): jz 0xfffff679(%rip)
9397(7): mov 0xfffffcf8(%rbp),%rsi
939e(5): jmp 0xffffd167(%rip)
93a3(6): mov 0xfffffda0(%rbp),%edx
93a9(6): mov 0xfffffd9c(%rbp),%esi
93af(7): mov 0xfffffcf8(%rbp),%rdi
93b6(7): mov %r8b,0xfffffcd8(%rbp)
93bd(5): call 0xffff9a83(%rip)
93c2(2): test %eax,%eax
93c4(8): movzx 0xfffffcd8(%rbp),%r8d
93cc(6): jz 0xffffcdd3(%rip)
93d2(3): mov %rbx,%rdi
93d5(5): call 0xffffc5db(%rip)
93da(2): test %al,%al
93dc(8): movzx 0xfffffcd8(%rbp),%r8d
93e4(6): jz 0x800(%rip)
93ea(6): mov %al,0xfffffce0(%rbp)
93f0(5): jmp 0xffffcdaf(%rip)
93f5(7): mov 0xfffffcf8(%rbp),%rsi
93fc(7): lea 0xffffff30(%rbp),%rdx
9403(5): mov $0x1,%edi
9408(7): mov %r8d,0xfffffcb8(%rbp)
940f(5): call 0xffff96f1(%rip)
9414(2): test %eax,%eax
9416(7): mov 0xfffffcb8(%rbp),%r8d
941d(2): jnz 0x45(%rip)
941f(6): mov 0xffffff48(%rbp),%eax
9425(5): and $0xf000,%eax
942a(5): cmp $0xa000,%eax
942f(2): jnz 0x33(%rip)
9431(5): movzx 0x30(%rbx),%r8d
9436(3): test %r8b,%r8b
9439(6): jz 0x7ee(%rip)
943f(6): mov 0xfffffcd0(%rbp),%edx
9445(7): mov 0xfffffcf8(%rbp),%rdi
944c(5): mov $0x41,%esi
9451(2): xor %eax,%eax
9453(5): call 0x203d(%rip)
9458(4): mov (%r12),%r8d
945c(6): mov %eax,0xfffffcd8(%rbp)
9462(6): mov 0xfffffcd8(%rbp),%eax
9468(3): shr $0x1f,%eax
946b(4): cmp $0x15,%r8d
946f(3): setz %dl
9472(2): and %al,%dl
9474(3): mov %edx,%r9d
9477(6): jz 0xff(%rip)
947d(7): mov 0xfffffcf8(%rbp),%rsi
9484(6): mov $0x15,%r8d
948a(3): cmp $0x0,(%rsi)
948d(3): mov %rsi,%rdi
9490(6): jz 0xfffffbe7(%rip)
9496(2): xor %eax,%eax
9498(4): or $0xffffffff,%rcx
949c(3): xor %r8d,%r8d
949f(2): REPNZ scasb rdi(%es,10),%al
94a1(3): mov %rcx,%rax
94a4(3): not %rax
94a7(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
94ac(4): setnz %r8b
94b0(4): add $0x14,%r8d
94b4(5): jmp 0xfffffbc3(%rip)
94b9(6): mov 0xfffffe28(%rbp),%eax
94bf(5): and $0xf000,%eax
94c4(5): cmp $0xa000,%eax
94c9(6): jnz 0xfffff411(%rip)
94cf(4): or $0xffffffff,%rcx
94d3(3): mov %r14d,%eax
94d6(3): mov %r12,%rdi
94d9(2): REPNZ scasb rdi(%es,10),%al
94db(7): mov 0xfffffe40(%rbp),%rsi
94e2(3): not %rcx
94e5(4): lea 0xffffffff(%rcx),%rax
94e9(3): cmp %rax,%rsi
94ec(6): jnz 0xfffff3ee(%rip)
94f2(7): mov 0xfffffcf8(%rbp),%rdi
94f9(5): call 0x1327(%rip)
94fe(3): test %rax,%rax
9501(6): jz 0xfffff3d9(%rip)
9507(3): mov %rax,%rdi
950a(3): mov %r12,%rsi
950d(7): mov %rax,0xfffffcd8(%rbp)
9514(5): call 0xffff97dc(%rip)
9519(7): mov 0xfffffcd8(%rbp),%rdx
9520(2): test %eax,%eax
9522(3): mov %rdx,%rdi
9525(6): jnz 0x7fd(%rip)
952b(5): call 0xffff9ba5(%rip)
9530(3): mov %r12,%rdi
9533(5): call 0xffff9b9d(%rip)
9538(5): jmp 0xfffffbd8(%rip)
953d(7): mov 0xfffffcc0(%rbp),%r8d
9544(6): mov 0xfffffcd8(%rbp),%ecx
954a(7): mov 0xfffffcf8(%rbp),%rdx
9551(6): mov 0xfffffce0(%rbp),%esi
9557(7): mov 0xfffffcf0(%rbp),%rdi
955e(5): call 0x11e2(%rip)
9563(2): test %eax,%eax
9565(6): mov $0x1,%r8d
956b(6): jz 0xfffff94a(%rip)
9571(5): jmp 0xfffffdb6(%rip)
9576(7): cmp $0x0,0xfffffcd8(%rbp)
957d(6): mov $0x1,%r14d
9583(6): jns 0xfffff543(%rip)
9589(5): jmp 0xfffffae8(%rip)
958e(4): movzx 0x25(%rbx),%esi
9592(7): mov 0xfffffcf8(%rbp),%rdi
9599(2): xor %edx,%edx
959b(3): mov %rbx,%rcx
959e(5): call 0xffffc2f2(%rip)
95a3(2): test %al,%al
95a5(3): mov %eax,%r8d
95a8(6): jnz 0xfffff514(%rip)
95ae(4): cmp $0x0,0x26(%rbx)
95b2(b): mov $0x0,0xfffffcd0(%rbp)
95bd(6): jnz 0xfffff8f8(%rip)
95c3(5): jmp 0xfffff4f9(%rip)
95c8(6): mov 0xfffffcd8(%rbp),%edi
95ce(3): mov %rcx,%rsi
95d1(5): call 0xffffb90f(%rip)
95d6(2): test %al,%al
95d8(6): jz 0x51b(%rip)
95de(3): xor %r8d,%r8d
95e1(5): jmp 0xfffff76c(%rip)
95e6(7): mov 0xfffffdc8(%rbp),%rax
95ed(7): mov 0xfffffcf8(%rbp),%rsi
95f4(7): lea 0xfffffd60(%rbp),%rdx
95fb(6): mov 0xfffffcd8(%rbp),%edi
9601(7): mov %rax,0xfffffd60(%rbp)
9608(7): mov 0xfffffdd0(%rbp),%rax
960f(7): mov %rax,0xfffffd68(%rbp)
9616(7): mov 0xfffffdd8(%rbp),%rax
961d(7): mov %rax,0xfffffd70(%rbp)
9624(7): mov 0xfffffde0(%rbp),%rax
962b(7): mov %rax,0xfffffd78(%rbp)
9632(5): call 0x7cae(%rip)
9637(2): test %eax,%eax
9639(6): jz 0xfffffbab(%rip)
963f(7): mov 0xfffffcf8(%rbp),%rsi
9646(5): mov $0x4,%edi
964b(5): call 0x5da5(%rip)
9650(7): lea 0xe897(%rip),%rsi
9657(2): xor %edi,%edi
9659(5): mov $0x5,%edx
965e(3): mov %rax,%r12
9661(5): call 0xffff946f(%rip)
9666(7): mov %rax,0xfffffcc8(%rbp)
966d(5): call 0xffff92e3(%rip)
9672(7): mov 0xfffffcc8(%rbp),%rdx
9679(2): mov (%rax),%esi
967b(2): xor %edi,%edi
967d(2): xor %eax,%eax
967f(3): mov %r12,%rcx
9682(5): call 0xffff98ae(%rip)
9687(4): cmp $0x0,0x24(%rbx)
968b(6): jz 0xfffffb59(%rip)
9691(5): jmp 0xfffff821(%rip)
9696(7): mov 0xfffffcf8(%rbp),%rsi
969d(5): mov $0x4,%edi
96a2(5): call 0x5d4e(%rip)
96a7(7): lea 0xe7d2(%rip),%rsi
96ae(5): mov $0x5,%edx
96b3(2): xor %edi,%edi
96b5(3): mov %rax,%r12
96b8(5): call 0xffff9418(%rip)
96bd(7): mov %rax,0xfffffcd0(%rbp)
96c4(5): call 0xffff928c(%rip)
96c9(7): mov 0xfffffcd0(%rbp),%rdx
96d0(2): mov (%rax),%esi
96d2(3): mov %r12,%rcx
96d5(2): xor %edi,%edi
96d7(2): xor %eax,%eax
96d9(5): call 0xffff9857(%rip)
96de(3): xor %r8d,%r8d
96e1(b): mov $0x0,0xfffffcd0(%rbp)
96ec(5): jmp 0xfffff7c9(%rip)
96f1(7): mov %rcx,0xfffffc90(%rbp)
96f8(5): jmp 0xfffff558(%rip)
96fd(3): xor %r9d,%r9d
9700(4): cmp $0x3,0xc(%rbx)
9704(7): lea 0xfffffd10(%rbp),%rax
970b(b): mov $0x0,0xfffffc68(%rbp)
9716(7): mov %rax,0xfffffcb8(%rbp)
971d(4): setz %r9b
9721(7): lea 0xfffffd08(%rbp),%rax
9728(4): sub $0x8,%rsp
972c(7): mov 0xfffffc68(%rbp),%r8
9733(7): mov 0xfffffc90(%rbp),%rcx
973a(7): mov 0xfffffc50(%rbp),%rdx
9741(6): mov 0xfffffcd8(%rbp),%esi
9747(6): mov 0xfffffce0(%rbp),%edi
974d(1): push %rax
974e(6): push 0xfffffcb8(%rbp)
9754(2): push $0xff
9756(6): push 0xfffffcf8(%rbp)
975c(6): push 0xfffffcf0(%rbp)
9762(5): call 0xffffbc4e(%rip)
9767(4): add $0x30,%rsp
976b(2): test %al,%al
976d(6): jz 0xfffff745(%rip)
9773(7): cmp $0x0,0xfffffd08(%rbp)
977a(6): jz 0xfffffa60(%rip)
9780(7): mov 0xfffffd10(%rbp),%rsi
9787(6): mov 0xfffffcd8(%rbp),%edi
978d(5): call 0xffff9423(%rip)
9792(2): test %eax,%eax
9794(6): jns 0xfffffa46(%rip)
979a(7): mov 0xfffffcf8(%rbp),%rsi
97a1(5): mov $0x4,%edi
97a6(5): call 0x5c4a(%rip)
97ab(7): lea 0xe728(%rip),%rsi
97b2(3): mov %rax,%r12
97b5(5): mov $0x5,%edx
97ba(2): xor %edi,%edi
97bc(5): call 0xffff9314(%rip)
97c1(7): mov %rax,0xfffffcc8(%rbp)
97c8(5): call 0xffff9188(%rip)
97cd(7): mov 0xfffffcc8(%rbp),%rdx
97d4(2): mov (%rax),%esi
97d6(3): mov %r12,%rcx
97d9(2): xor %edi,%edi
97db(2): xor %eax,%eax
97dd(5): call 0xffff9753(%rip)
97e2(5): jmp 0xfffff6d0(%rip)
97e7(7): mov $0x1,0xfffffd31(%rbp)
97ee(7): mov 0xfffffd38(%rbp),%rdi
97f5(5): call 0xffff98db(%rip)
97fa(7): cmp $0x0,0xfffffd31(%rbp)
9801(b): mov $0x0,0xfffffd38(%rbp)
980c(b): mov $0x0,0xfffffd28(%rbp)
9817(6): jz 0xfffff4ec(%rip)
981d(7): mov 0xfffffc78(%rbp),%rbx
9824(7): mov 0xfffffca0(%rbp),%r13d
982b(7): mov 0xfffffc60(%rbp),%rcx
9832(7): cmp %rcx,0xfffffc80(%rbp)
9839(4): setnle %r12b
983d(2): jnle 0xf(%rip)
983f(7): cmp $0x0,0xfffffcc8(%rbp)
9846(6): jz 0xfffff994(%rip)
984c(7): cmp $0x1,0xfffffc70(%rbp)
9853(7): mov 0xfffffc80(%rbp),%rsi
985a(2): jz 0x74(%rip)
985c(6): mov 0xfffffcd8(%rbp),%edi
9862(5): call 0xffff934e(%rip)
9867(2): test %eax,%eax
9869(6): jnz 0xffffff31(%rip)
986f(7): cmp $0x3,0xfffffc70(%rbp)
9876(6): jnz 0xfffff964(%rip)
987c(3): test %r12b,%r12b
987f(6): jz 0xfffff95b(%rip)
9885(7): mov 0xfffffc80(%rbp),%rdx
988c(7): mov 0xfffffc60(%rbp),%rsi
9893(6): mov 0xfffffcd8(%rbp),%edi
9899(3): sub %rsi,%rdx
989c(5): call 0xffffb6f4(%rip)
98a1(2): test %eax,%eax
98a3(6): jns 0xfffff937(%rip)
98a9(7): mov 0xfffffcf8(%rbp),%rsi
98b0(5): mov $0x4,%edi
98b5(5): call 0x5b3b(%rip)
98ba(5): mov $0x5,%edx
98bf(3): mov %rax,%r12
98c2(7): lea 0xe476(%rip),%rsi
98c9(5): jmp 0xfffffef1(%rip)
98ce(7): sub 0xfffffc60(%rbp),%rsi
98d5(6): mov 0xfffffcd8(%rbp),%edi
98db(5): call 0xffffb605(%rip)
98e0(2): test %al,%al
98e2(6): jnz 0xfffff8f8(%rip)
98e8(5): jmp 0xfffffeb2(%rip)
98ed(7): mov 0xfffffed0(%rbp),%rax
98f4(7): cmp %rax,0xfffffc90(%rbp)
98fb(6): jbe 0xfffff328(%rip)
9901(4): add $0x1,%rax
9905(7): mov %rax,0xfffffc90(%rbp)
990c(5): jmp 0xfffff317(%rip)
9911(7): cmp $0x0,0xfffffd31(%rbp)
9918(7): mov 0xfffffc78(%rbp),%rbx
991f(7): mov 0xfffffca0(%rbp),%r13d
9926(6): jnz 0xffffff05(%rip)
992c(7): cmp $0x0,0xfffffd30(%rbp)
9933(6): jz 0x21d(%rip)
9939(3): xor %r9d,%r9d
993c(4): cmp $0x3,0xc(%rbx)
9940(5): mov $0x0,%eax
9945(4): setz %r9b
9949(7): cmp $0x0,0xfffffc5b(%rbp)
9950(8): cmovne 0xfffffc68(%rbp),%rax
9958(7): mov %rax,0xfffffc68(%rbp)
995f(5): jmp 0xfffffdc2(%rip)
9964(6): mov 0xfffffce0(%rbp),%edx
996a(6): mov 0xfffffcd8(%rbp),%edi
9970(2): xor %eax,%eax
9972(5): mov $0x40049409,%esi
9977(5): call 0xffff9299(%rip)
997c(2): test %eax,%eax
997e(6): jz 0xfffff851(%rip)
9984(4): cmp $0x2,0x38(%rbx)
9988(6): jnz 0xfffff184(%rip)
998e(7): mov 0xfffffcf0(%rbp),%rdx
9995(5): mov $0x4,%esi
999a(5): mov $0x1,%edi
999f(5): call 0x5931(%rip)
99a4(7): mov 0xfffffcf8(%rbp),%rdx
99ab(5): mov $0x4,%esi
99b0(2): xor %edi,%edi
99b2(3): mov %rax,%r12
99b5(5): call 0x591b(%rip)
99ba(7): lea 0xe4ed(%rip),%rsi
99c1(5): mov $0x5,%edx
99c6(2): xor %edi,%edi
99c8(7): mov %rax,0xfffffcc8(%rbp)
99cf(5): call 0xffff9101(%rip)
99d4(7): mov %rax,0xfffffcd0(%rbp)
99db(5): call 0xffff8f75(%rip)
99e0(7): mov 0xfffffcc8(%rbp),%rcx
99e7(2): mov (%rax),%esi
99e9(3): mov %r12,%r8
99ec(7): mov 0xfffffcd0(%rbp),%rdx
99f3(2): xor %edi,%edi
99f5(2): xor %eax,%eax
99f7(5): call 0xffff9539(%rip)
99fc(3): xor %r8d,%r8d
99ff(b): mov $0x0,0xfffffcd0(%rbp)
9a0a(5): jmp 0xfffff4ab(%rip)
9a0f(3): mov 0xc(%rbx),%eax
9a12(3): cmp $0x3,%eax
9a15(6): jz 0x89(%rip)
9a1b(3): cmp $0x2,%eax
9a1e(6): jnz 0xfffff196(%rip)
9a24(7): test $0x1,0xfffffcb8(%rbp)
9a2b(6): jz 0xfffff189(%rip)
9a31(7): mov 0xfffffc90(%rbp),%rax
9a38(4): lea 0x0(%r12,%rax,1),%rdi
9a3c(5): call 0x85d4(%rip)
9a41(5): lea 0xffffffff(%rax,%r12,1),%rcx
9a46(7): mov %rax,0xfffffcd0(%rbp)
9a4d(2): xor %edx,%edx
9a4f(3): mov %rcx,%rax
9a52(3): div %r12,%rax
9a55(3): sub %rdx,%rcx
9a58(7): mov %rcx,0xfffffc50(%rbp)
9a5f(3): mov 0xc(%rbx),%eax
9a62(6): mov %eax,0xfffffc70(%rbp)
9a68(7): movzx 0xfffffcc8(%rbp),%eax
9a6f(6): mov %al,0xfffffc5b(%rbp)
9a75(5): jmp 0xfffff227(%rip)
9a7a(7): mov 0xfffffed0(%rbp),%rax
9a81(2): cdq %rax
9a83(3): idiv %r8,%rax
9a86(7): cmp %rax,0xfffffee0(%rbp)
9a8d(3): setl %al
9a90(3): movzx %al,%eax
9a93(6): mov %eax,0xfffffcb8(%rbp)
9a99(5): jmp 0xfffff105(%rip)
9a9e(7): mov 0xfffffc90(%rbp),%rax
9aa5(4): lea 0x0(%r12,%rax,1),%rdi
9aa9(5): call 0x8567(%rip)
9aae(5): lea 0xffffffff(%rax,%r12,1),%rcx
9ab3(2): xor %edx,%edx
9ab5(7): mov %rax,0xfffffcd0(%rbp)
9abc(3): mov %rcx,%rax
9abf(3): div %r12,%rax
9ac2(3): sub %rdx,%rcx
9ac5(7): cmp $0x0,0xfffffcb8(%rbp)
9acc(7): mov %rcx,0xfffffc50(%rbp)
9ad3(2): jnz 0xffffff8c(%rip)
9ad5(3): xor %r9d,%r9d
9ad8(4): cmp $0x3,0xc(%rbx)
9adc(7): lea 0xfffffd10(%rbp),%rax
9ae3(7): mov %rax,0xfffffcb8(%rbp)
9aea(4): setz %r9b
9aee(5): jmp 0xfffffc33(%rip)
9af3(7): mov 0xfffffcf8(%rbp),%rdx
9afa(5): mov $0x3,%esi
9aff(2): xor %edi,%edi
9b01(7): mov 0xfffffc78(%rbp),%rbx
9b08(7): mov 0xfffffca0(%rbp),%r13d
9b0f(5): call 0x59e1(%rip)
9b14(7): lea 0xe3ae(%rip),%rsi
9b1b(3): mov %rax,%r12
9b1e(5): mov $0x5,%edx
9b23(2): xor %edi,%edi
9b25(5): call 0xffff8fab(%rip)
9b2a(7): mov %rax,0xfffffcc8(%rbp)
9b31(5): call 0xffff8e1f(%rip)
9b36(7): mov 0xfffffcc8(%rbp),%rdx
9b3d(2): mov (%rax),%esi
9b3f(3): mov %r12,%rcx
9b42(2): xor %edi,%edi
9b44(2): xor %eax,%eax
9b46(5): call 0xffff93ea(%rip)
9b4b(5): jmp 0xfffff35b(%rip)
9b50(7): mov 0xfffffcf0(%rbp),%rdx
9b57(5): mov $0x3,%esi
9b5c(2): xor %edi,%edi
9b5e(5): call 0x5992(%rip)
9b63(5): mov $0x5,%edx
9b68(3): mov %rax,%r12
9b6b(7): lea 0xdff6(%rip),%rsi
9b72(5): jmp 0xfffffc48(%rip)
9b77(5): call 0xffffc079(%rip)
9b7c(6): mov 0xfffffcd8(%rbp),%esi
9b82(2): not %eax
9b84(7): mov 0xfffffcf8(%rbp),%rdi
9b8b(2): mov %eax,%edx
9b8d(3): mov %r12d,%r14d
9b90(6): and $0x1b6,%edx
9b96(5): call 0xc3a(%rip)
9b9b(2): test %eax,%eax
9b9d(4): setz %r8b
9ba1(5): jmp 0xfffff314(%rip)
9ba6(7): mov 0xfffffcf8(%rbp),%rsi
9bad(5): mov $0x4,%edi
9bb2(5): call 0x583e(%rip)
9bb7(7): lea 0xe22c(%rip),%rsi
9bbe(5): mov $0x5,%edx
9bc3(2): xor %edi,%edi
9bc5(7): mov %rax,0xfffffcd8(%rbp)
9bcc(5): call 0xffff8f04(%rip)
9bd1(7): mov 0xfffffcd8(%rbp),%rcx
9bd8(3): mov %rax,%rdx
9bdb(4): mov (%r12),%esi
9bdf(5): jmp 0xffffe182(%rip)
9be4(7): lea 0xdbe5(%rip),%rsi
9beb(2): xor %edi,%edi
9bed(5): mov $0x5,%edx
9bf2(5): call 0xffff8ede(%rip)
9bf7(3): mov %rax,%r12
9bfa(5): call 0xffff8d56(%rip)
9bff(7): mov 0xfffffcf8(%rbp),%rcx
9c06(2): mov (%rax),%esi
9c08(2): xor %edi,%edi
9c0a(2): xor %eax,%eax
9c0c(3): mov %r12,%rdx
9c0f(5): call 0xffff9321(%rip)
9c14(5): movzx 0x24(%rbx),%r8d
9c19(3): test %r8b,%r8b
9c1c(6): jnz 0xffffcf94(%rip)
9c22(5): jmp 0xffffc57d(%rip)
9c27(7): mov 0xfffffcf8(%rbp),%rsi
9c2e(5): mov $0x4,%edi
9c33(7): mov %r8b,0xfffffcd8(%rbp)
9c3a(5): call 0x57b6(%rip)
9c3f(7): lea 0xdefa(%rip),%rsi
9c46(3): mov %rax,%r12
9c49(5): mov $0x5,%edx
9c4e(2): xor %edi,%edi
9c50(5): call 0xffff8e80(%rip)
9c55(3): mov %r12,%rcx
9c58(3): mov %rax,%rdx
9c5b(2): xor %esi,%esi
9c5d(2): xor %edi,%edi
9c5f(2): xor %eax,%eax
9c61(5): call 0xffff92cf(%rip)
9c66(b): mov $0x0,0xfffffcd0(%rbp)
9c71(8): movzx 0xfffffcd8(%rbp),%r8d
9c79(5): jmp 0xffffe0ff(%rip)
9c7e(5): call 0xffff8f82(%rip)
9c83(2): test %eax,%eax
9c85(6): jz 0xfffff5d2(%rip)
9c8b(7): mov 0xfffffcf8(%rbp),%rsi
9c92(6): mov 0xfffffcd8(%rbp),%edi
9c98(5): mov $0x180,%edx
9c9d(5): call 0xffff9443(%rip)
9ca2(2): test %eax,%eax
9ca4(6): jnz 0xfffff5b3(%rip)
9caa(6): mov 0xfffffc88(%rbp),%edx
9cb0(7): mov 0xfffffcf8(%rbp),%rsi
9cb7(6): mov 0xfffffcd8(%rbp),%edi
9cbd(2): not %edx
9cbf(6): and 0xfffffc5c(%rbp),%edx
9cc5(5): call 0xffff941b(%rip)
9cca(5): jmp 0xfffff58d(%rip)
9ccf(7): mov 0xfffffcf0(%rbp),%rsi
9cd6(5): mov $0x4,%edi
9cdb(7): mov 0xfffffc78(%rbp),%rbx
9ce2(7): mov 0xfffffca0(%rbp),%r13d
9ce9(5): call 0x5707(%rip)
9cee(5): mov $0x5,%edx
9cf3(3): mov %rax,%r12
9cf6(7): lea 0xe032(%rip),%rsi
9cfd(5): jmp 0xfffffe26(%rip)
9d02(3): mov 0x10(%rbx),%edx
9d05(6): mov 0xfffffcd8(%rbp),%esi
9d0b(7): mov 0xfffffcf8(%rbp),%rdi
9d12(5): call 0xabe(%rip)
9d17(2): test %eax,%eax
9d19(4): setz %r8b
9d1d(5): jmp 0xfffff198(%rip)
9d22(5): call 0xffff93ae(%rip)
9d27(5): jmp 0xffffebb3(%rip)

"copy" :
9d30(4): sub $0x18,%rsp
9d34(9): mov $0x28,%rax
9d3d(5): mov %rax,0x8(%rsp)
9d42(2): xor %eax,%eax
9d44(3): test %rcx,%rcx
9d47(6): jz 0x12f(%rip)
9d4d(3): cmp $0x3,(%rcx)
9d50(6): jnbe 0x107(%rip)
9d56(3): mov 0xc(%rcx),%eax
9d59(4): lea 0xffffffff(%rax),%r10d
9d5d(4): cmp $0x2,%r10d
9d61(6): jnbe 0xd7(%rip)
9d67(4): mov 0x38(%rcx),%r10d
9d6b(4): cmp $0x2,%r10d
9d6f(6): jnbe 0xaa(%rip)
9d75(4): cmp $0x0,0x17(%rcx)
9d79(2): jnz 0x57(%rip)
9d7b(3): cmp $0x2,%eax
9d7e(2): jz 0x8(%rip)
9d80(4): cmp $0x2,%r10d
9d84(2): jz 0x71(%rip)
9d86(5): mov $0x0,0x7(%rsp)
9d8b(2): push %r9
9d8d(3): movzx %dl,%edx
9d90(2): push %r8
9d92(3): mov %rcx,%r9
9d95(3): xor %r8d,%r8d
9d98(2): xor %ecx,%ecx
9d9a(7): mov %rsi,0x2157e7(%rip)
9da1(7): mov %rdi,0x2157e8(%rip)
9da8(5): lea 0x17(%rsp),%rax
9dad(1): push %rax
9dae(2): push $0x1
9db0(5): call 0xffffbe70(%rip)
9db5(4): add $0x20,%rsp
9db9(5): mov 0x8(%rsp),%rsi
9dbe(9): xor $0x28,%rsi
9dc7(2): jnz 0x4d(%rip)
9dc9(4): add $0x18,%rsp
9dcd(1): ret near (%rsp)
9dce(2): nop 
9dd0(4): cmp $0x0,0x2c(%rcx)
9dd4(2): jz 0xffffffa7(%rip)
9dd6(7): lea 0xe21b(%rip),%rcx
9ddd(7): lea 0xe1e6(%rip),%rsi
9de4(7): lea 0xde9d(%rip),%rdi
9deb(5): mov $0xb8a,%edx
9df0(5): call 0xffff8df0(%rip)
9df5(7): lea 0xe1fc(%rip),%rcx
9dfc(7): lea 0xe1c7(%rip),%rsi
9e03(7): lea 0xdea6(%rip),%rdi
9e0a(5): mov $0xb8d,%edx
9e0f(5): call 0xffff8dd1(%rip)
9e14(5): call 0xffff8d1c(%rip)
9e19(7): lea 0xe1d8(%rip),%rcx
9e20(7): lea 0xe1a3(%rip),%rsi
9e27(7): lea 0xde32(%rip),%rdi
9e2e(5): mov $0xb89,%edx
9e33(5): call 0xffff8dad(%rip)
9e38(7): lea 0xe1b9(%rip),%rcx
9e3f(7): lea 0xe184(%rip),%rsi
9e46(7): lea 0xddeb(%rip),%rdi
9e4d(5): mov $0xb88,%edx
9e52(5): call 0xffff8d8e(%rip)
9e57(7): lea 0xe19a(%rip),%rcx
9e5e(7): lea 0xe165(%rip),%rsi
9e65(7): lea 0xdda4(%rip),%rdi
9e6c(5): mov $0xb87,%edx
9e71(5): call 0xffff8d6f(%rip)
9e76(7): lea 0xe17b(%rip),%rcx
9e7d(7): lea 0xe146(%rip),%rsi
9e84(7): lea 0xe15c(%rip),%rdi
9e8b(5): mov $0xb86,%edx
9e90(5): call 0xffff8d50(%rip)

"src_to_dest_hash" :
9ea0(3): mov (%rdi),%rax
9ea3(2): xor %edx,%edx
9ea5(3): div %rsi,%rax
9ea8(3): mov %rdx,%rax
9eab(1): ret near (%rsp)

"src_to_dest_compare" :
9eb0(2): xor %eax,%eax
9eb2(3): mov (%rsi),%rdx
9eb5(3): cmp %rdx,(%rdi)
9eb8(2): jz 0x8(%rip)
9eba(2): REP ret near (%rsp)
9ebc(4): nop 0x0(%rax)
9ec0(4): mov 0x8(%rsi),%rax
9ec4(4): cmp %rax,0x8(%rdi)
9ec8(3): setz %al
9ecb(1): ret near (%rsp)

"src_to_dest_free" :
9ed0(1): push %rbx
9ed1(3): mov %rdi,%rbx
9ed4(4): mov 0x10(%rdi),%rdi
9ed8(5): call 0xffff91f8(%rip)
9edd(3): mov %rbx,%rdi
9ee0(1): pop %rbx
9ee1(5): jmp 0xffff91ef(%rip)

"forget_created" :
9ef0(1): push %rbx
9ef1(4): sub $0x20,%rsp
9ef5(4): mov %rdi,(%rsp)
9ef9(7): mov 0x215698(%rip),%rdi
9f00(5): mov %rsi,0x8(%rsp)
9f05(3): mov %rsp,%rsi
9f08(9): mov $0x0,0x10(%rsp)
9f11(9): mov $0x28,%rax
9f1a(5): mov %rax,0x18(%rsp)
9f1f(2): xor %eax,%eax
9f21(5): call 0x2b5f(%rip)
9f26(3): test %rax,%rax
9f29(2): jz 0x16(%rip)
9f2b(4): mov 0x10(%rax),%rdi
9f2f(3): mov %rax,%rbx
9f32(5): call 0xffff919e(%rip)
9f37(3): mov %rbx,%rdi
9f3a(5): call 0xffff9196(%rip)
9f3f(5): mov 0x18(%rsp),%rax
9f44(9): xor $0x28,%rax
9f4d(2): jnz 0x8(%rip)
9f4f(4): add $0x20,%rsp
9f53(1): pop %rbx
9f54(1): ret near (%rsp)
9f55(5): call 0xffff8bdb(%rip)

"src_to_dest_lookup" :
9f60(4): sub $0x28,%rsp
9f64(4): mov %rdi,(%rsp)
9f68(7): mov 0x215629(%rip),%rdi
9f6f(5): mov %rsi,0x8(%rsp)
9f74(3): mov %rsp,%rsi
9f77(9): mov $0x28,%rax
9f80(5): mov %rax,0x18(%rsp)
9f85(2): xor %eax,%eax
9f87(5): call 0x2029(%rip)
9f8c(3): test %rax,%rax
9f8f(2): jz 0x21(%rip)
9f91(4): mov 0x10(%rax),%rax
9f95(5): mov 0x18(%rsp),%rdx
9f9a(9): xor $0x28,%rdx
9fa3(2): jnz 0x11(%rip)
9fa5(4): add $0x28,%rsp
9fa9(1): ret near (%rsp)
9faa(6): nop 0x0(%rax,%rax,1)
9fb0(2): xor %eax,%eax
9fb2(2): jmp 0xffffffe3(%rip)
9fb4(5): call 0xffff8b7c(%rip)

"remember_copied" :
9fc0(2): push %r13
9fc2(2): push %r12
9fc4(3): mov %rdi,%r13
9fc7(1): push %rbp
9fc8(1): push %rbx
9fc9(5): mov $0x18,%edi
9fce(3): mov %rsi,%r12
9fd1(3): mov %rdx,%rbp
9fd4(4): sub $0x8,%rsp
9fd8(5): call 0x8038(%rip)
9fdd(3): mov %r13,%rdi
9fe0(3): mov %rax,%rbx
9fe3(5): call 0x825d(%rip)
9fe8(7): mov 0x2155a9(%rip),%rdi
9fef(3): mov %rbx,%rsi
9ff2(4): mov %rax,0x10(%rbx)
9ff6(3): mov %r12,(%rbx)
9ff9(4): mov %rbp,0x8(%rbx)
9ffd(5): call 0x2a23(%rip)
a002(3): test %rax,%rax
a005(2): jz 0x2f(%rip)
a007(3): cmp %rax,%rbx
a00a(3): mov %rax,%rbp
a00d(2): jz 0x23(%rip)
a00f(4): mov 0x10(%rbx),%rdi
a013(5): call 0xffff90bd(%rip)
a018(3): mov %rbx,%rdi
a01b(5): call 0xffff90b5(%rip)
a020(4): mov 0x10(%rbp),%rax
a024(4): add $0x8,%rsp
a028(1): pop %rbx
a029(1): pop %rbp
a02a(2): pop %r12
a02c(2): pop %r13
a02e(1): ret near (%rsp)
a02f(1): nop 
a030(2): xor %eax,%eax
a032(2): jmp 0xfffffff2(%rip)
a034(5): call 0x822c(%rip)

"hash_init" :
a040(7): lea 0xfffffe89(%rip),%r8
a047(7): lea 0xfffffe62(%rip),%rcx
a04e(7): lea 0xfffffe4b(%rip),%rdx
a055(4): sub $0x8,%rsp
a059(2): xor %esi,%esi
a05b(5): mov $0x67,%edi
a060(5): call 0x21c0(%rip)
a065(3): test %rax,%rax
a068(7): mov %rax,0x215529(%rip)
a06f(2): jz 0x7(%rip)
a071(4): add $0x8,%rsp
a075(1): ret near (%rsp)
a076(5): call 0x81ea(%rip)

"forget_all" :
a080(7): mov 0x215511(%rip),%rdi
a087(5): jmp 0x23e9(%rip)

"extent_scan_init" :
a090(2): mov %edi,(%rsi)
a092(8): mov $0x0,0x18(%rsi)
a09a(8): mov $0x0,0x28(%rsi)
a0a2(8): mov $0x0,0x8(%rsi)
a0aa(4): mov $0x0,0x20(%rsi)
a0ae(4): mov $0x0,0x21(%rsi)
a0b2(7): mov $0x1,0x10(%rsi)
a0b9(1): ret near (%rsp)

"extent_scan_read" :
a0c0(2): push %r15
a0c2(2): push %r14
a0c4(3): xor %r15d,%r15d
a0c7(2): push %r13
a0c9(2): push %r12
a0cb(3): mov %rdi,%r14
a0ce(1): push %rbp
a0cf(1): push %rbx
a0d0(a): mov $0x9223372036854775807,%r13
a0da(7): sub $0x1018,%rsp
a0e1(4): mov 0x28(%rdi),%rbx
a0e5(4): mov 0x8(%rdi),%rdx
a0e9(3): mov %rsp,%rbp
a0ec(9): mov $0x28,%rax
a0f5(8): mov %rax,0x1008(%rsp)
a0fd(2): xor %eax,%eax
a0ff(4): lea 0x20(%rbp),%r12
a103(2): xor %eax,%eax
a105(5): mov $0x200,%ecx
a10a(3): mov %rbp,%rdi
a10d(3): REP stosd %rax,rdi(%es,10)
a110(4): mov 0x10(%r14),%eax
a114(3): mov (%r14),%edi
a117(5): mov $0xc020660b,%esi
a11c(4): mov %rdx,(%rsp)
a120(3): not %rdx
a123(8): mov $0x48,0x18(%rsp)
a12b(5): mov %rdx,0x8(%rsp)
a130(3): mov %rbp,%rdx
a133(4): mov %eax,0x10(%rsp)
a137(2): xor %eax,%eax
a139(5): call 0xffff8ad7(%rip)
a13e(2): test %eax,%eax
a140(6): js 0xd0(%rip)
a146(4): mov 0x14(%rsp),%eax
a14a(2): test %eax,%eax
a14c(6): jz 0x23c(%rip)
a152(4): mov 0x18(%r14),%rcx
a156(3): mov %rax,%rdx
a159(3): not %rdx
a15c(3): cmp %rdx,%rcx
a15f(6): jnbe 0x23b(%rip)
a165(4): mov 0x28(%r14),%rdi
a169(5): mov $0x18,%edx
a16e(3): add %rax,%rcx
a171(3): mov %rdx,%rax
a174(2): xor %esi,%esi
a176(4): mov %rcx,0x18(%r14)
a17a(3): sub %rdi,%rbx
a17d(3): mul %rax,%rcx,%rdx
a180(6): jo 0x239(%rip)
a186(3): test %rax,%rax
a189(6): js 0x23a(%rip)
a18f(3): test %rsi,%rsi
a192(6): jnz 0x231(%rip)
a198(4): lea 0x0(%rcx,%rcx,2),%rsi
a19c(4): shl/sal $0x3,%rsi
a1a0(5): call 0x7ed0(%rip)
a1a5(5): mov 0x14(%rsp),%r8d
a1aa(3): add %rax,%rbx
a1ad(4): mov %rax,0x28(%r14)
a1b1(3): test %r8d,%r8d
a1b4(6): jz 0x13c(%rip)
a1ba(5): mov 0x30(%rsp),%rax
a1bf(5): mov 0x20(%rsp),%rdx
a1c4(3): mov %r13,%rcx
a1c7(3): sub %rax,%rcx
a1ca(3): cmp %rcx,%rdx
a1cd(6): jnbe 0xdd(%rip)
a1d3(2): xor %ecx,%ecx
a1d5(3): mov %r12,%rsi
a1d8(3): test %r15d,%r15d
a1db(2): jz 0x75(%rip)
a1dd(4): mov 0x28(%rsi),%r9d
a1e1(4): mov 0x8(%rbx),%r10
a1e5(3): mov (%rbx),%rdi
a1e8(3): mov %r9d,%r11d
a1eb(3): add %r10,%rdi
a1ee(4): and $0xfe,%r11d
a1f2(4): cmp %r11d,0x10(%rbx)
a1f6(6): jz 0xda(%rip)
a1fc(3): cmp %rdx,%rdi
a1ff(2): jbe 0x5e(%rip)
a201(3): mov %rdi,%r10
a204(3): sub %rdx,%r10
a207(3): cmp %rax,%r10
a20a(6): jnb 0x11e(%rip)
a210(2): xor %eax,%eax
a212(5): cmp $0x0,0x8(%r14)
a217(2): jnz 0x9(%rip)
a219(5): mov $0x1,0x20(%r14)
a21e(2): xor %eax,%eax
a220(8): mov 0x1008(%rsp),%rbx
a228(9): xor $0x28,%rbx
a231(6): jnz 0x197(%rip)
a237(7): add $0x1018,%rsp
a23e(1): pop %rbx
a23f(1): pop %rbp
a240(2): pop %r12
a242(2): pop %r13
a244(2): pop %r14
a246(2): pop %r15
a248(1): ret near (%rsp)
a249(7): nop 0x0(%rax)
a250(4): mov 0x8(%r14),%rdi
a254(3): cmp %rdx,%rdi
a257(2): jnbe 0xffffffaa(%rip)
a259(4): mov 0x28(%rsi),%r9d
a25d(3): mov %r15d,%esi
a260(4): add $0x1,%r15d
a264(4): lea 0x0(%rsi,%rsi,2),%rdi
a268(4): mov 0x28(%r14),%rsi
a26c(4): lea 0x0(%rsi,%rdi,8),%rbx
a270(3): mov %rdx,(%rbx)
a273(4): mov %rax,0x8(%rbx)
a277(4): mov %r9d,0x10(%rbx)
a27b(3): add $0x1,%ecx
a27e(3): cmp %r8d,%ecx
a281(2): jnb 0x6f(%rip)
a283(2): mov %ecx,%edx
a285(3): mov %r13,%rdi
a288(8): lea 0x0(,%rdx,8),%rax
a290(3): sub %rdx,%rax
a293(4): lea 0x0(%r12,%rax,8),%rsi
a297(4): mov 0x10(%rsi),%rax
a29b(3): mov (%rsi),%rdx
a29e(3): sub %rax,%rdi
a2a1(3): cmp %rdi,%rdx
a2a4(6): jbe 0xffffff34(%rip)
a2aa(7): lea 0xddff(%rip),%rcx
a2b1(7): lea 0xdd50(%rip),%rsi
a2b8(7): lea 0xdda9(%rip),%rdi
a2bf(5): mov $0x8d,%edx
a2c4(5): call 0xffff891c(%rip)
a2c9(7): nop 0x0(%rax)
a2d0(3): cmp %rdx,%rdi
a2d3(6): jnz 0xffffff29(%rip)
a2d9(3): add $0x1,%ecx
a2dc(3): add %r10,%rax
a2df(4): mov %r9d,0x10(%rbx)
a2e3(3): cmp %r8d,%ecx
a2e6(4): mov %rax,0x8(%rbx)
a2ea(2): jb 0xffffff99(%rip)
a2ec(4): nop 0x0(%rax)
a2f0(4): test $0x1,0x10(%rbx)
a2f4(2): jnz 0x4c(%rip)
a2f6(4): cmp $0x48,%r15d
a2fa(5): movzx 0x21(%r14),%eax
a2ff(2): jbe 0x61(%rip)
a301(2): test %al,%al
a303(2): jnz 0x42(%rip)
a305(4): lea 0xffffffff(%r15),%eax
a309(4): mov 0x28(%r14),%rdx
a30d(4): lea 0x0(%rax,%rax,2),%rcx
a311(4): mov %rax,0x18(%r14)
a315(5): mov 0xffffffe8(%rdx,%rcx,8),%rax
a31a(5): add 0xfffffff0(%rdx,%rcx,8),%rax
a31f(4): mov %rax,0x8(%r14)
a323(2): jmp 0x29(%rip)
a325(3): nop (%rax)
a328(3): sub %r10,%rax
a32b(3): mov %rdi,(%rsi)
a32e(3): sub $0x1,%ecx
a331(4): mov %rax,0x10(%rsi)
a335(5): jmp 0xffffff46(%rip)
a33a(6): nop 0x0(%rax,%rax,1)
a340(5): mov $0x1,0x21(%r14)
a345(3): mov %r15d,%eax
a348(4): mov %rax,0x18(%r14)
a34c(5): mov $0x1,%eax
a351(5): jmp 0xfffffecf(%rip)
a356(a): nop 0x0(%rax,%rax,1)
a360(3): mov %r15d,%ecx
a363(2): test %al,%al
a365(4): mov %rcx,0x18(%r14)
a369(2): jnz 0xffffffe3(%rip)
a36b(4): mov 0x8(%rbx),%rdx
a36f(3): add (%rbx),%rdx
a372(4): cmp $0x47,%r15d
a376(4): mov %rdx,0x8(%r14)
a37a(6): jbe 0xfffffd89(%rip)
a380(2): jmp 0xffffffcc(%rip)
a382(6): nop 0x0(%rax,%rax,1)
a388(5): cmp $0x0,0x8(%r14)
a38d(5): mov $0x1,0x21(%r14)
a392(3): setnz %al
a395(5): jmp 0xfffffe8b(%rip)
a39a(7): lea 0xdd0f(%rip),%rcx
a3a1(7): lea 0xdc60(%rip),%rsi
a3a8(7): lea 0xdc81(%rip),%rdi
a3af(5): mov $0x7e,%edx
a3b4(5): call 0xffff882c(%rip)
a3b9(5): mov $0x1,%esi
a3be(5): jmp 0xfffffdc8(%rip)
a3c3(5): call 0x7e9d(%rip)
a3c8(5): call 0xffff8768(%rip)

"try_link" :
a3d0(3): mov %rsi,%rax
a3d3(3): mov %rdi,%rcx
a3d6(3): mov 0x10(%rsi),%edx
a3d9(4): mov 0x14(%rax),%r8d
a3dd(4): mov 0x8(%rsi),%rsi
a3e1(2): mov (%rax),%edi
a3e3(5): jmp 0xffff8add(%rip)

"samedir_template" :
a3f0(2): push %r12
a3f2(1): push %rbp
a3f3(3): mov %rdi,%rbp
a3f6(1): push %rbx
a3f7(3): mov %rsi,%r12
a3fa(5): call 0xfa6(%rip)
a3ff(3): sub %rbp,%rax
a402(4): lea 0x9(%rax),%rdi
a406(3): mov %rax,%rbx
a409(7): cmp $0x100,%rdi
a410(2): jbe 0x11(%rip)
a412(5): call 0xffff89de(%rip)
a417(3): mov %rax,%r12
a41a(2): xor %eax,%eax
a41c(3): test %r12,%r12
a41f(2): jz 0x24(%rip)
a421(3): mov %rbx,%rdx
a424(3): mov %rbp,%rsi
a427(3): mov %r12,%rdi
a42a(5): call 0xffff8af6(%rip)
a42f(a): mov $0x6365935209750754627,%rcx
a439(4): mov $0x0,0x8(%rax)
a43d(3): mov %rcx,(%rax)
a440(3): mov %r12,%rax
a443(1): pop %rbx
a444(1): pop %rbp
a445(2): pop %r12
a447(1): ret near (%rsp)

"try_symlink" :
a450(3): mov %rsi,%rax
a453(3): mov %rdi,%rdx
a456(3): mov 0x8(%rsi),%esi
a459(3): mov (%rax),%rdi
a45c(5): jmp 0xffff8c14(%rip)

"force_linkat" :
a470(2): push %r15
a472(2): push %r14
a474(3): mov %edi,%r14d
a477(2): push %r13
a479(2): push %r12
a47b(3): mov %rsi,%r13
a47e(1): push %rbp
a47f(1): push %rbx
a480(3): mov %rcx,%rbx
a483(2): mov %edx,%ebp
a485(3): mov %r8d,%r12d
a488(7): sub $0x148,%rsp
a48f(7): mov 0x180(%rsp),%ecx
a496(9): mov $0x28,%rax
a49f(8): mov %rax,0x138(%rsp)
a4a7(2): xor %eax,%eax
a4a9(2): test %ecx,%ecx
a4ab(6): js 0xb5(%rip)
a4b1(4): cmp $0x1,%r9b
a4b5(2): jnz 0x7b(%rip)
a4b7(3): cmp $0x11,%ecx
a4ba(2): jnz 0x76(%rip)
a4bc(5): lea 0x30(%rsp),%rax
a4c1(3): mov %rbx,%rdi
a4c4(3): mov %rax,%rsi
a4c7(4): mov %rax,(%rsp)
a4cb(5): call 0xffffff25(%rip)
a4d0(3): test %rax,%rax
a4d3(3): mov %rax,%r15
a4d6(6): jz 0xea(%rip)
a4dc(5): lea 0x10(%rsp),%rdx
a4e1(7): lea 0xfffffee8(%rip),%rcx
a4e8(2): xor %esi,%esi
a4ea(6): mov $0x6,%r8d
a4f0(3): mov %rax,%rdi
a4f3(5): mov %r14d,0x10(%rsp)
a4f8(5): mov %r13,0x18(%rsp)
a4fd(4): mov %ebp,0x20(%rsp)
a501(5): mov %r12d,0x24(%rsp)
a506(5): call 0x620a(%rip)
a50b(2): test %eax,%eax
a50d(2): jz 0x7b(%rip)
a50f(5): call 0xffff8441(%rip)
a514(2): mov (%rax),%ecx
a516(4): cmp (%rsp),%r15
a51a(2): jz 0x16(%rip)
a51c(3): mov %r15,%rdi
a51f(3): mov %ecx,(%rsp)
a522(5): call 0xffff8bae(%rip)
a527(3): mov (%rsp),%ecx
a52a(6): nop 0x0(%rax,%rax,1)
a530(8): mov 0x138(%rsp),%rbx
a538(9): xor $0x28,%rbx
a541(2): mov %ecx,%eax
a543(6): jnz 0x89(%rip)
a549(7): add $0x148,%rsp
a550(1): pop %rbx
a551(1): pop %rbp
a552(2): pop %r12
a554(2): pop %r13
a556(2): pop %r14
a558(2): pop %r15
a55a(1): ret near (%rsp)
a55b(5): nop 0x0(%rax,%rax,1)
a560(3): mov %rbx,%rcx
a563(4): mov %r9d,(%rsp)
a567(5): call 0xffff8959(%rip)
a56c(2): test %eax,%eax
a56e(2): mov %eax,%ecx
a570(2): jz 0xffffffc0(%rip)
a572(5): call 0xffff83de(%rip)
a577(4): mov (%rsp),%r9d
a57b(2): mov (%rax),%ecx
a57d(5): jmp 0xffffff34(%rip)
a582(6): nop 0x0(%rax,%rax,1)
a588(3): mov %rbx,%rcx
a58b(2): mov %ebp,%edx
a58d(3): mov %r15,%rsi
a590(2): mov %ebp,%edi
a592(5): call 0xffff8a6e(%rip)
a597(2): test %eax,%eax
a599(5): mov $0xffffffff,%ecx
a59e(2): jz 0x9(%rip)
a5a0(5): call 0xffff83b0(%rip)
a5a5(2): mov (%rax),%ecx
a5a7(2): xor %edx,%edx
a5a9(3): mov %r15,%rsi
a5ac(2): mov %ebp,%edi
a5ae(4): mov %ecx,0xc(%rsp)
a5b2(5): call 0xffff841e(%rip)
a5b7(4): mov 0xc(%rsp),%ecx
a5bb(5): jmp 0xffffff5b(%rip)
a5c0(5): call 0xffff8390(%rip)
a5c5(2): mov (%rax),%ecx
a5c7(5): jmp 0xffffff69(%rip)
a5cc(5): call 0xffff8564(%rip)

"force_symlinkat" :
a5e0(2): push %r14
a5e2(2): push %r13
a5e4(2): push %r12
a5e6(1): push %rbp
a5e7(3): mov %rdi,%r12
a5ea(1): push %rbx
a5eb(2): mov %esi,%ebp
a5ed(3): mov %rdx,%rbx
a5f0(7): sub $0x130,%rsp
a5f7(9): mov $0x28,%rax
a600(8): mov %rax,0x128(%rsp)
a608(2): xor %eax,%eax
a60a(3): test %r8d,%r8d
a60d(6): js 0xab(%rip)
a613(3): cmp $0x1,%cl
a616(2): jnz 0x72(%rip)
a618(4): cmp $0x11,%r8d
a61c(2): jnz 0x6c(%rip)
a61e(5): lea 0x20(%rsp),%r14
a623(3): mov %rbx,%rdi
a626(3): mov %r14,%rsi
a629(5): call 0xfffffdc7(%rip)
a62e(3): test %rax,%rax
a631(3): mov %rax,%r13
a634(6): jz 0xec(%rip)
a63a(5): lea 0x10(%rsp),%rdx
a63f(7): lea 0xfffffe0a(%rip),%rcx
a646(2): xor %esi,%esi
a648(6): mov $0x6,%r8d
a64e(3): mov %rax,%rdi
a651(5): mov %r12,0x10(%rsp)
a656(4): mov %ebp,0x18(%rsp)
a65a(5): call 0x60b6(%rip)
a65f(2): test %eax,%eax
a661(2): jz 0x7f(%rip)
a663(5): call 0xffff82ed(%rip)
a668(3): mov (%rax),%r8d
a66b(3): cmp %r14,%r13
a66e(2): jz 0x1a(%rip)
a670(3): mov %r13,%rdi
a673(5): mov %r8d,0xc(%rsp)
a678(5): call 0xffff8a58(%rip)
a67d(5): mov 0xc(%rsp),%r8d
a682(6): nop 0x0(%rax,%rax,1)
a688(8): mov 0x128(%rsp),%rbx
a690(9): xor $0x28,%rbx
a699(3): mov %r8d,%eax
a69c(6): jnz 0x91(%rip)
a6a2(7): add $0x130,%rsp
a6a9(1): pop %rbx
a6aa(1): pop %rbp
a6ab(2): pop %r12
a6ad(2): pop %r13
a6af(2): pop %r14
a6b1(1): ret near (%rsp)
a6b2(6): nop 0x0(%rax,%rax,1)
a6b8(4): mov %ecx,0xc(%rsp)
a6bc(5): call 0xffff89b4(%rip)
a6c1(2): test %eax,%eax
a6c3(3): mov %eax,%r8d
a6c6(2): jz 0xffffffc2(%rip)
a6c8(5): call 0xffff8288(%rip)
a6cd(4): mov 0xc(%rsp),%ecx
a6d1(3): mov (%rax),%r8d
a6d4(5): jmp 0xffffff3f(%rip)
a6d9(7): nop 0x0(%rax)
a6e0(3): mov %rbx,%rcx
a6e3(2): mov %ebp,%edx
a6e5(3): mov %r13,%rsi
a6e8(2): mov %ebp,%edi
a6ea(5): call 0xffff8916(%rip)
a6ef(2): test %eax,%eax
a6f1(6): mov $0xffffffff,%r8d
a6f7(6): jz 0xffffff74(%rip)
a6fd(5): call 0xffff8253(%rip)
a702(3): mov (%rax),%r8d
a705(2): xor %edx,%edx
a707(3): mov %r13,%rsi
a70a(2): mov %ebp,%edi
a70c(5): mov %r8d,0xc(%rsp)
a711(5): call 0xffff82bf(%rip)
a716(5): mov 0xc(%rsp),%r8d
a71b(5): jmp 0xffffff50(%rip)
a720(5): call 0xffff8230(%rip)
a725(3): mov (%rax),%r8d
a728(5): jmp 0xffffff60(%rip)
a72d(5): call 0xffff8403(%rip)

"copy_acl" :
a740(2): push %r12
a742(1): push %rbp
a743(3): mov %rdi,%r12
a746(1): push %rbx
a747(3): mov %rdx,%rbp
a74a(5): call 0x3226(%rip)
a74f(3): cmp $0xfe,%eax
a752(2): mov %eax,%ebx
a754(2): jz 0x4c(%rip)
a756(3): cmp $0xff,%eax
a759(2): jnz 0x39(%rip)
a75b(3): mov %rbp,%rdi
a75e(5): call 0x4f62(%rip)
a763(7): lea 0xd79c(%rip),%rsi
a76a(5): mov $0x5,%edx
a76f(2): xor %edi,%edi
a771(3): mov %rax,%r12
a774(5): call 0xffff835c(%rip)
a779(3): mov %rax,%rbp
a77c(5): call 0xffff81d4(%rip)
a781(2): mov (%rax),%esi
a783(3): mov %r12,%rcx
a786(3): mov %rbp,%rdx
a789(2): xor %edi,%edi
a78b(2): xor %eax,%eax
a78d(5): call 0xffff87a3(%rip)
a792(2): mov %ebx,%eax
a794(1): pop %rbx
a795(1): pop %rbp
a796(2): pop %r12
a798(1): ret near (%rsp)
a799(7): nop 0x0(%rax)
a7a0(3): mov %r12,%rdi
a7a3(5): call 0x4f1d(%rip)
a7a8(3): mov %rax,%rbp
a7ab(5): call 0xffff81a5(%rip)
a7b0(2): mov (%rax),%esi
a7b2(7): lea 0xe6a7(%rip),%rdx
a7b9(3): mov %rbp,%rcx
a7bc(2): xor %eax,%eax
a7be(2): xor %edi,%edi
a7c0(5): call 0xffff8770(%rip)
a7c5(2): mov %ebx,%eax
a7c7(1): pop %rbx
a7c8(1): pop %rbp
a7c9(2): pop %r12
a7cb(1): ret near (%rsp)

"set_acl" :
a7d0(2): push %r12
a7d2(1): push %rbp
a7d3(3): mov %rdi,%rbp
a7d6(1): push %rbx
a7d7(5): call 0x3219(%rip)
a7dc(2): test %eax,%eax
a7de(2): mov %eax,%ebx
a7e0(2): jz 0x39(%rip)
a7e2(3): mov %rbp,%rdi
a7e5(5): call 0x4edb(%rip)
a7ea(7): lea 0xd630(%rip),%rsi
a7f1(5): mov $0x5,%edx
a7f6(2): xor %edi,%edi
a7f8(3): mov %rax,%r12
a7fb(5): call 0xffff82d5(%rip)
a800(3): mov %rax,%rbp
a803(5): call 0xffff814d(%rip)
a808(2): mov (%rax),%esi
a80a(3): mov %r12,%rcx
a80d(3): mov %rbp,%rdx
a810(2): xor %edi,%edi
a812(2): xor %eax,%eax
a814(5): call 0xffff871c(%rip)
a819(2): mov %ebx,%eax
a81b(1): pop %rbx
a81c(1): pop %rbp
a81d(2): pop %r12
a81f(1): ret near (%rsp)

"areadlink_with_size" :
a820(2): push %r15
a822(2): push %r14
a824(5): mov $0x401,%eax
a829(2): push %r13
a82b(2): push %r12
a82d(3): mov %rdi,%r13
a830(1): push %rbp
a831(1): push %rbx
a832(4): lea 0x1(%rsi),%rbx
a836(a): mov $0x4611686018427387903,%r14
a840(a): mov $0x9223372036854775806,%r15
a84a(4): sub $0x8,%rsp
a84e(7): cmp $0x401,%rsi
a855(4): cmovnb %rax,%rbx
a859(7): nop 0x0(%rax)
a860(3): mov %rbx,%rdi
a863(5): call 0xffff858d(%rip)
a868(3): test %rax,%rax
a86b(3): mov %rax,%rbp
a86e(2): jz 0x3d(%rip)
a870(3): mov %rbx,%rdx
a873(3): mov %rax,%rsi
a876(3): mov %r13,%rdi
a879(5): call 0xffff8177(%rip)
a87e(3): test %rax,%rax
a881(3): mov %rax,%r12
a884(2): js 0x54(%rip)
a886(3): cmp %r12,%rbx
a889(2): jnbe 0x67(%rip)
a88b(3): mov %rbp,%rdi
a88e(5): call 0xffff8842(%rip)
a893(3): cmp %r14,%rbx
a896(2): jnbe 0x2a(%rip)
a898(3): add %rbx,%rbx
a89b(3): mov %rbx,%rdi
a89e(5): call 0xffff8552(%rip)
a8a3(3): test %rax,%rax
a8a6(3): mov %rax,%rbp
a8a9(2): jnz 0xffffffc7(%rip)
a8ab(4): add $0x8,%rsp
a8af(3): mov %rbp,%rax
a8b2(1): pop %rbx
a8b3(1): pop %rbp
a8b4(2): pop %r12
a8b6(2): pop %r13
a8b8(2): pop %r14
a8ba(2): pop %r15
a8bc(1): ret near (%rsp)
a8bd(3): nop (%rax)
a8c0(3): cmp %r15,%rbx
a8c3(2): jnbe 0x3d(%rip)
a8c5(a): mov $0x9223372036854775807,%rbx
a8cf(2): jmp 0xffffff91(%rip)
a8d1(7): nop 0x0(%rax)
a8d8(5): call 0xffff8078(%rip)
a8dd(3): cmp $0x22,(%rax)
a8e0(2): jz 0xffffffa6(%rip)
a8e2(3): mov %rbp,%rdi
a8e5(2): xor %ebp,%ebp
a8e7(5): call 0xffff87e9(%rip)
a8ec(2): jmp 0xffffffbf(%rip)
a8ee(2): nop 
a8f0(6): mov $0x0,0x0(%rbp,%r12,1)
a8f6(2): jmp 0xffffffb5(%rip)
a8f8(8): nop 0x0(%rax,%rax,1)
a900(5): call 0xffff8050(%rip)
a905(2): xor %ebp,%ebp
a907(6): mov $0xc,(%rax)
a90d(2): jmp 0xffffff9e(%rip)

"set_simple_backup_suffix" :
a910(3): test %rdi,%rdi
a913(1): push %rbx
a914(3): mov %rdi,%rbx
a917(2): jz 0x29(%rip)
a919(3): cmp $0x0,(%rbx)
a91c(2): jnz 0x14(%rip)
a91e(7): lea 0xd7a1(%rip),%rbx
a925(7): mov %rbx,0x214c74(%rip)
a92c(1): pop %rbx
a92d(1): ret near (%rsp)
a92e(2): nop 
a930(3): mov %rbx,%rdi
a933(5): call 0xa6d(%rip)
a938(3): cmp %rbx,%rax
a93b(2): jnz 0xffffffe3(%rip)
a93d(2): jmp 0xffffffe8(%rip)
a93f(1): nop 
a940(7): lea 0xd781(%rip),%rdi
a947(5): call 0xffff7fb9(%rip)
a94c(3): test %rax,%rax
a94f(3): mov %rax,%rbx
a952(2): jz 0xffffffcc(%rip)
a954(2): jmp 0xffffffc5(%rip)

"backupfile_internal" :
a960(2): push %r15
a962(2): push %r14
a964(2): push %r13
a966(2): push %r12
a968(1): push %rbp
a969(1): push %rbx
a96a(3): mov %rsi,%rbx
a96d(7): sub $0x88,%rsp
a974(4): mov %edi,0x64(%rsp)
a978(3): mov %rsi,%rdi
a97b(5): mov %rsi,0x10(%rsp)
a980(4): mov %edx,0x20(%rsp)
a984(4): mov %cl,0x63(%rsp)
a988(9): mov $0x28,%rax
a991(5): mov %rax,0x78(%rsp)
a996(2): xor %eax,%eax
a998(5): call 0xa08(%rip)
a99d(3): mov %rax,%rdi
a9a0(3): mov %rax,%r14
a9a3(5): call 0xffff814d(%rip)
a9a8(7): mov 0x214bf1(%rip),%rdi
a9af(3): sub %rbx,%r14
a9b2(3): add %r14,%rax
a9b5(5): mov %rax,0x18(%rsp)
a9ba(3): test %rdi,%rdi
a9bd(6): jz 0x587(%rip)
a9c3(5): call 0xffff812d(%rip)
a9c8(5): mov 0x18(%rsp),%rsi
a9cd(4): add $0x1,%rax
a9d1(4): cmp $0x9,%rax
a9d5(5): mov %rax,0x50(%rsp)
a9da(4): lea 0x1(%rsi),%rdx
a9de(3): mov %rax,%rsi
a9e1(5): mov $0x9,%eax
a9e6(4): cmovnb %rsi,%rax
a9ea(3): add %rdx,%rax
a9ed(5): mov %rdx,0x38(%rsp)
a9f2(3): mov %rax,%rdi
a9f5(5): mov %rax,0x40(%rsp)
a9fa(5): call 0xffff83f6(%rip)
a9ff(3): test %rax,%rax
aa02(3): mov %rax,%r15
aa05(6): jz 0x2eb(%rip)
aa0b(5): lea 0x74(%rsp),%rax
aa10(8): mov $0xffffffff,0x74(%rsp)
aa18(9): mov $0x0,0x48(%rsp)
aa21(3): xor %r13d,%r13d
aa24(5): mov %rax,0x68(%rsp)
aa29(5): mov 0x38(%rsp),%rdx
aa2e(5): mov 0x10(%rsp),%rsi
aa33(3): mov %r15,%rdi
aa36(5): call 0xffff834a(%rip)
aa3b(5): cmp $0x1,0x20(%rsp)
aa40(6): jz 0x2e0(%rip)
aa46(4): lea 0x0(%r15,%r14,1),%rbp
aa4a(3): mov %rbp,%rdi
aa4d(5): call 0x9b3(%rip)
aa52(3): test %r13,%r13
aa55(3): mov %rax,%r12
aa58(6): jz 0x3a8(%rip)
aa5e(3): mov %r13,%rdi
aa61(5): call 0xffff81df(%rip)
aa66(5): mov 0x40(%rsp),%rax
aa6b(9): mov $0x1,0x28(%rsp)
aa74(8): mov $0x2,0x24(%rsp)
aa7c(5): mov %rax,0x30(%rsp)
aa81(5): lea 0x4(%r12),%rax
aa86(5): mov %rax,0x8(%rsp)
aa8b(5): nop 0x0(%rax,%rax,1)
aa90(3): mov %r13,%rdi
aa93(5): call 0xffff834d(%rip)
aa98(3): test %rax,%rax
aa9b(6): jz 0x1b5(%rip)
aaa1(4): lea 0x13(%rax),%rbx
aaa5(3): mov %rbx,%rdi
aaa8(5): call 0xffff8048(%rip)
aaad(5): cmp 0x8(%rsp),%rax
aab2(2): jb 0xffffffde(%rip)
aab4(5): lea 0x2(%r12),%rbp
aab9(4): lea 0x0(%r15,%r14,1),%rdi
aabd(3): mov %rbx,%rsi
aac0(3): mov %rbp,%rdx
aac3(5): call 0xffff81cd(%rip)
aac8(2): test %eax,%eax
aaca(2): jnz 0xffffffc6(%rip)
aacc(3): add %rbp,%rbx
aacf(3): movzx (%rbx),%eax
aad2(3): lea 0xffffffcf(%rax),%edx
aad5(3): cmp $0x8,%dl
aad8(2): jnbe 0xffffffb8(%rip)
aada(2): cmp $0x39,%al
aadc(4): movsx 0x1(%rbx),%eax
aae0(5): mov $0x1,%ebp
aae5(4): setz %r8b
aae9(2): mov %eax,%ecx
aaeb(3): sub $0x30,%eax
aaee(3): cmp $0x9,%eax
aaf1(2): jnbe 0x22(%rip)
aaf3(5): nop 0x0(%rax,%rax,1)
aaf8(3): cmp $0x39,%cl
aafb(3): setz %al
aafe(4): add $0x1,%rbp
ab02(3): and %eax,%r8d
ab05(4): movsx 0x0(%rbx,%rbp,1),%eax
ab09(2): mov %eax,%ecx
ab0b(3): sub $0x30,%eax
ab0e(3): cmp $0x9,%eax
ab11(2): jbe 0xffffffe7(%rip)
ab13(3): cmp $0x7e,%cl
ab16(6): jnz 0xffffff7a(%rip)
ab1c(5): cmp $0x0,0x1(%rbx,%rbp,1)
ab21(6): jnz 0xffffff6f(%rip)
ab27(5): mov 0x28(%rsp),%rdx
ab2c(3): cmp %rbp,%rdx
ab2f(2): jb 0x2d(%rip)
ab31(5): mov %r8b,0x58(%rsp)
ab36(6): jnz 0xffffff5a(%rip)
ab3c(5): mov 0x18(%rsp),%rax
ab41(3): mov %rbx,%rsi
ab44(5): lea 0x2(%r15,%rax,1),%rdi
ab49(5): call 0xffff8147(%rip)
ab4e(2): test %eax,%eax
ab50(6): movzx 0x58(%rsp),%r8d
ab56(6): jnle 0xffffff3a(%rip)
ab5c(4): movzx %r8b,%esi
ab60(4): movzx %r8b,%r9d
ab64(4): mov %esi,0x24(%rsp)
ab68(5): mov 0x18(%rsp),%rsi
ab6d(4): lea 0x0(%r9,%rbp,1),%rax
ab71(5): mov %rax,0x28(%rsp)
ab76(5): lea 0x4(%rsi,%rax,1),%rcx
ab7b(5): cmp 0x30(%rsp),%rcx
ab80(6): jbe 0x338(%rip)
ab86(5): mov $0x2,%edx
ab8b(2): xor %esi,%esi
ab8d(3): mov %rdx,%rax
ab90(3): mul %rax,%rcx,%rdx
ab93(6): jo 0x3d0(%rip)
ab99(3): test %rax,%rax
ab9c(6): js 0x2b4(%rip)
aba2(3): test %rsi,%rsi
aba5(6): jnz 0x2ab(%rip)
abab(4): lea 0x0(%rcx,%rcx,1),%rax
abaf(5): mov %rax,0x30(%rsp)
abb4(5): mov 0x30(%rsp),%rsi
abb9(3): mov %r15,%rdi
abbc(5): mov %r9,0x58(%rsp)
abc1(5): call 0xffff82cf(%rip)
abc6(3): test %rax,%rax
abc9(3): mov %rax,%r8
abcc(5): mov 0x58(%rsp),%r9
abd1(6): jz 0x28f(%rip)
abd7(5): mov 0x18(%rsp),%rax
abdc(4): lea 0x2(%rbp),%rdx
abe0(5): mov %r8,0x58(%rsp)
abe5(3): mov %rbx,%rsi
abe8(3): add %r8,%rax
abeb(6): mov $0x7e2e,%r8d
abf1(5): lea 0x2(%rax,%r9,1),%rcx
abf6(4): mov %r8w,(%rax)
abfa(4): mov $0x30,0x2(%rax)
abfe(3): mov %rcx,%rdi
ac01(5): call 0xffff817f(%rip)
ac06(3): add %rax,%rbp
ac09(5): mov 0x58(%rsp),%r8
ac0e(4): movzx 0xffffffff(%rbp),%edx
ac12(4): lea 0xffffffff(%rbp),%rax
ac16(3): cmp $0x39,%dl
ac19(2): jnz 0x16(%rip)
ac1b(5): nop 0x0(%rax,%rax,1)
ac20(3): mov $0x30,(%rax)
ac23(4): sub $0x1,%rax
ac27(3): movzx (%rax),%edx
ac2a(3): cmp $0x39,%dl
ac2d(2): jz 0xfffffff3(%rip)
ac2f(3): add $0x1,%edx
ac32(3): mov %r13,%rdi
ac35(3): mov %r8,%r15
ac38(2): mov %dl,(%rax)
ac3a(5): call 0xffff81a6(%rip)
ac3f(3): test %rax,%rax
ac42(6): jnz 0xfffffe5f(%rip)
ac48(8): nop 0x0(%rax,%rax,1)
ac50(4): mov 0x24(%rsp),%eax
ac54(3): cmp $0x2,%eax
ac57(6): jz 0xe9(%rip)
ac5d(3): cmp $0x3,%eax
ac60(6): jz 0x200(%rip)
ac66(3): cmp $0x1,%eax
ac69(6): jz 0x107(%rip)
ac6f(5): cmp $0x0,0x63(%rsp)
ac74(6): jz 0x2ba(%rip)
ac7a(4): mov 0x74(%rsp),%edx
ac7e(4): lea 0x0(%r15,%r14,1),%rcx
ac82(2): test %edx,%edx
ac84(2): jns 0x15(%rip)
ac86(8): mov $0xffffff9c,0x74(%rsp)
ac8e(3): mov %r15,%rcx
ac91(5): mov $0xffffff9c,%edx
ac96(3): xor %r14d,%r14d
ac99(3): xor %r8d,%r8d
ac9c(5): cmp $0x1,0x20(%rsp)
aca1(5): mov 0x10(%rsp),%rsi
aca6(5): mov $0xffffff9c,%edi
acab(4): setnz %r8b
acaf(5): call 0x4a31(%rip)
acb4(2): test %eax,%eax
acb6(6): jz 0x278(%rip)
acbc(5): call 0xffff7c94(%rip)
acc1(2): mov (%rax),%ebp
acc3(3): cmp $0x11,%ebp
acc6(6): jz 0xfffffd63(%rip)
accc(3): test %r13,%r13
accf(3): mov %rax,%rbx
acd2(2): jz 0xa(%rip)
acd4(3): mov %r13,%rdi
acd7(5): call 0xffff7f89(%rip)
acdc(3): mov %r15,%rdi
acdf(3): xor %r15d,%r15d
ace2(5): call 0xffff83ee(%rip)
ace7(2): mov %ebp,(%rbx)
ace9(7): nop 0x0(%rax)
acf0(5): mov 0x78(%rsp),%rsi
acf5(9): xor $0x28,%rsi
acfe(3): mov %r15,%rax
ad01(6): jnz 0x26c(%rip)
ad07(7): add $0x88,%rsp
ad0e(1): pop %rbx
ad0f(1): pop %rbp
ad10(2): pop %r12
ad12(2): pop %r13
ad14(2): pop %r14
ad16(2): pop %r15
ad18(1): ret near (%rsp)
ad19(7): nop 0x0(%rax)
ad20(5): mov 0x18(%rsp),%rax
ad25(5): mov 0x50(%rsp),%rdx
ad2a(7): mov 0x21486f(%rip),%rsi
ad31(4): lea 0x0(%r15,%rax,1),%rdi
ad35(5): call 0xffff804b(%rip)
ad3a(5): jmp 0xffffff35(%rip)
ad3f(1): nop 
ad40(5): cmp $0x2,0x20(%rsp)
ad45(2): jnz 0x2b(%rip)
ad47(5): mov 0x18(%rsp),%rax
ad4c(5): mov 0x50(%rsp),%rdx
ad51(7): mov 0x214848(%rip),%rsi
ad58(4): lea 0x0(%r15,%rax,1),%rdi
ad5c(5): call 0xffff8024(%rip)
ad61(8): mov $0x1,0x20(%rsp)
ad69(7): nop 0x0(%rax)
ad70(3): mov %r15,%rdi
ad73(5): call 0x62d(%rip)
ad78(3): mov %rax,%rdi
ad7b(3): mov %rax,%rbx
ad7e(5): call 0x682(%rip)
ad83(4): cmp $0xe,%rax
ad87(3): mov %rax,%rbp
ad8a(6): jbe 0xfffffee5(%rip)
ad90(6): cmp $0x0,0x48(%rsp)
ad96(6): jnz 0xea(%rip)
ad9c(4): mov 0x74(%rsp),%edi
ada0(4): mov %edi,0x8(%rsp)
ada4(5): call 0xffff7bac(%rip)
ada9(4): mov 0x8(%rsp),%edi
adad(3): mov %rax,%r12
adb0(2): test %edi,%edi
adb2(6): js 0x140(%rip)
adb8(6): mov $0x0,(%rax)
adbe(5): mov $0x3,%esi
adc3(5): call 0xffff7f6d(%rip)
adc8(4): mov (%r12),%ecx
adcc(2): xor %edx,%edx
adce(2): test %ecx,%ecx
add0(3): setz %dl
add3(3): sub %rdx,%rax
add6(3): test %rax,%rax
add9(5): mov %rax,0x48(%rsp)
adde(6): jns 0xa2(%rip)
ade4(4): cmp $0xffffffff,%rax
ade8(6): jnz 0x16d(%rip)
adee(9): mov $0xffffffff,0x48(%rsp)
adf7(5): jmp 0xfffffe78(%rip)
adfc(4): nop 0x0(%rax)
ae00(5): mov 0x68(%rsp),%rcx
ae05(4): mov 0x64(%rsp),%edi
ae09(6): mov $0x2e,%r9d
ae0f(2): xor %edx,%edx
ae11(4): movzx 0x0(%rbp),%ebx
ae15(3): mov %r15,%rsi
ae18(5): mov %r9w,0x0(%rbp)
ae1d(5): call 0x2a33(%rip)
ae22(3): test %rax,%rax
ae25(3): mov %rax,%r13
ae28(5): lea 0x0(%rbp,%r12,1),%rdx
ae2d(6): jz 0x93(%rip)
ae33(4): mov %bx,0x0(%rbp)
ae37(6): mov $0x7e317e2e,(%rdx)
ae3d(4): mov $0x0,0x4(%rdx)
ae41(5): jmp 0xfffffc25(%rip)
ae46(a): nop 0x0(%rax,%rax,1)
ae50(5): mov %rcx,0x30(%rsp)
ae55(5): jmp 0xfffffd5f(%rip)
ae5a(6): nop 0x0(%rax,%rax,1)
ae60(3): mov %r15,%rdi
ae63(3): xor %r15d,%r15d
ae66(5): call 0xffff826a(%rip)
ae6b(5): call 0xffff7ae5(%rip)
ae70(6): mov $0xc,(%rax)
ae76(5): jmp 0xfffffe7a(%rip)
ae7b(5): nop 0x0(%rax,%rax,1)
ae80(5): cmp 0x48(%rsp),%rbp
ae85(6): jbe 0xfffffdea(%rip)
ae8b(5): mov 0x18(%rsp),%rax
ae90(5): mov 0x48(%rsp),%rsi
ae95(3): add %r15,%rax
ae98(4): lea 0xffffffff(%rsi),%rdx
ae9c(3): sub %rbx,%rax
ae9f(3): cmp %rsi,%rax
aea2(4): cmovnb %rdx,%rax
aea6(4): mov $0x7e,0x0(%rbx,%rax,1)
aeaa(5): mov $0x0,0x1(%rbx,%rax,1)
aeaf(5): jmp 0xfffffdc0(%rip)
aeb4(4): nop 0x0(%rax)
aeb8(3): mov %r15,%r8
aebb(5): jmp 0xfffffd1c(%rip)
aec0(5): mov %rdx,0x8(%rsp)
aec5(5): call 0xffff7a8b(%rip)
aeca(3): cmp $0xc,(%rax)
aecd(5): mov 0x8(%rsp),%rdx
aed2(4): mov %bx,0x0(%rbp)
aed6(6): mov $0x7e317e2e,(%rdx)
aedc(4): mov $0x0,0x4(%rdx)
aee0(3): setz %al
aee3(3): movzx %al,%eax
aee6(3): add $0x2,%eax
aee9(4): mov %eax,0x24(%rsp)
aeed(5): jmp 0xfffffd63(%rip)
aef2(3): movzx (%rbx),%edx
aef5(5): mov $0x2e,%esi
aefa(3): mov %r15,%rdi
aefd(3): mov %si,(%rbx)
af00(6): mov $0x0,(%rax)
af06(5): mov $0x3,%esi
af0b(4): mov %edx,0x8(%rsp)
af0f(5): call 0xffff7b51(%rip)
af14(4): mov (%r12),%edi
af18(4): mov 0x8(%rsp),%edx
af1c(2): xor %ecx,%ecx
af1e(2): test %edi,%edi
af20(3): mov %dx,(%rbx)
af23(3): setz %cl
af26(3): sub %rcx,%rax
af29(5): jmp 0xfffffead(%rip)
af2e(3): test %r13,%r13
af31(6): jz 0xfffffdbf(%rip)
af37(3): mov %r13,%rdi
af3a(5): call 0xffff7d26(%rip)
af3f(5): jmp 0xfffffdb1(%rip)
af44(5): call 0xfffff9cc(%rip)
af49(7): mov 0x214650(%rip),%rdi
af50(5): jmp 0xfffffa73(%rip)
af55(9): mov $0xe,0x48(%rsp)
af5e(5): jmp 0xffffff2d(%rip)
af63(5): mov $0x1,%esi
af68(5): jmp 0xfffffc31(%rip)
af6d(5): call 0xffff7bc3(%rip)

"backup_file_rename" :
af80(5): mov $0x1,%ecx
af85(5): jmp 0xfffff9db(%rip)

"get_version.part.0" :
af90(4): sub $0x8,%rsp
af94(7): mov 0x212125(%rip),%r9
af9b(7): lea 0x21195e(%rip),%rdx
afa2(7): lea 0xd177(%rip),%rcx
afa9(6): mov $0x4,%r8d
afaf(5): call 0x7d51(%rip)
afb4(7): lea 0xd165(%rip),%rdx
afbb(3): mov 0x0(%rdx,%rax,4),%eax
afbe(4): add $0x8,%rsp
afc2(1): ret near (%rsp)

"find_backup_file_name" :
afd0(4): sub $0x8,%rsp
afd4(2): xor %ecx,%ecx
afd6(5): call 0xfffff98a(%rip)
afdb(3): test %rax,%rax
afde(2): jz 0x7(%rip)
afe0(4): add $0x8,%rsp
afe4(1): ret near (%rsp)
afe5(5): call 0x727b(%rip)

"get_version" :
aff0(3): test %rsi,%rsi
aff3(2): jz 0xd(%rip)
aff5(3): cmp $0x0,(%rsi)
aff8(2): jz 0x8(%rip)
affa(2): jmp 0xffffff96(%rip)
affc(4): nop 0x0(%rax)
b000(5): mov $0x2,%eax
b005(1): ret near (%rsp)

"xget_version" :
b010(3): test %rsi,%rsi
b013(2): jz 0x7(%rip)
b015(3): cmp $0x0,(%rsi)
b018(2): jnz 0x2a(%rip)
b01a(7): lea 0xd0bd(%rip),%rdi
b021(4): sub $0x8,%rsp
b025(5): call 0xffff78db(%rip)
b02a(3): test %rax,%rax
b02d(2): jz 0x23(%rip)
b02f(3): cmp $0x0,(%rax)
b032(2): jz 0x1e(%rip)
b034(7): lea 0xd0a2(%rip),%rdi
b03b(3): mov %rax,%rsi
b03e(4): add $0x8,%rsp
b042(5): jmp 0xffffff4e(%rip)
b047(9): nop 0x0(%rax,%rax,1)
b050(5): mov $0x2,%eax
b055(4): add $0x8,%rsp
b059(1): ret near (%rsp)

"buffer_lcm" :
b060(3): test %rdi,%rdi
b063(3): mov %rdx,%rcx
b066(2): jnz 0x22(%rip)
b068(3): test %rsi,%rsi
b06b(5): mov $0x2000,%edi
b070(4): cmovne %rsi,%rdi
b074(3): cmp %rcx,%rdi
b077(4): cmovbe %rdi,%rcx
b07b(3): mov %rcx,%r8
b07e(3): mov %r8,%rax
b081(1): ret near (%rsp)
b082(6): nop 0x0(%rax,%rax,1)
b088(3): test %rsi,%rsi
b08b(2): jz 0xffffffe9(%rip)
b08d(3): mov %rsi,%r8
b090(3): mov %rdi,%rax
b093(2): xor %edx,%edx
b095(3): div %r8,%rax
b098(3): test %rdx,%rdx
b09b(2): jnz 0x2d(%rip)
b09d(2): xor %edx,%edx
b09f(3): mov %rdi,%rax
b0a2(3): div %r8,%rax
b0a5(3): mov %rsi,%r8
b0a8(4): imul %rax,%r8
b0ac(3): mov %rax,%r9
b0af(3): cmp %rcx,%r8
b0b2(2): jnbe 0xffffffc2(%rip)
b0b4(2): xor %edx,%edx
b0b6(3): mov %r8,%rax
b0b9(3): div %rsi,%rax
b0bc(3): cmp %r9,%rax
b0bf(2): jnz 0xffffffb5(%rip)
b0c1(2): jmp 0xffffffbd(%rip)
b0c3(5): nop 0x0(%rax,%rax,1)
b0c8(3): mov %r8,%rax
b0cb(3): mov %rdx,%r8
b0ce(2): jmp 0xffffffc5(%rip)

"close_stdin_set_file_name" :
b0d0(7): mov %rdi,0x2144d1(%rip)
b0d7(1): ret near (%rsp)

"close_stdin" :
b0e0(2): push %r12
b0e2(1): push %rbp
b0e3(1): push %rbx
b0e4(7): mov 0x212005(%rip),%rbx
b0eb(3): mov %rbx,%rdi
b0ee(5): call 0x76b2(%rip)
b0f3(3): test %rax,%rax
b0f6(6): jnz 0xa2(%rip)
b0fc(3): mov %rbx,%rdi
b0ff(5): call 0x7cc1(%rip)
b104(2): test %eax,%eax
b106(2): jnz 0x32(%rip)
b108(1): pop %rbx
b109(1): pop %rbp
b10a(2): pop %r12
b10c(5): jmp 0x104(%rip)
b111(7): nop 0x0(%rax)
b118(5): call 0x7648(%rip)
b11d(2): test %eax,%eax
b11f(7): mov 0x211fca(%rip),%rdi
b126(6): jz 0x90(%rip)
b12c(5): call 0x7c94(%rip)
b131(7): nop 0x0(%rax)
b138(7): lea 0xd001(%rip),%rsi
b13f(2): xor %edi,%edi
b141(5): mov $0x5,%edx
b146(5): call 0xffff798a(%rip)
b14b(7): mov 0x214456(%rip),%rbx
b152(3): mov %rax,%r12
b155(5): call 0xffff77fb(%rip)
b15a(3): mov %rax,%rbp
b15d(3): test %rbx,%rbx
b160(2): jz 0x70(%rip)
b162(3): mov %rbx,%rdi
b165(5): call 0x435b(%rip)
b16a(3): mov 0x0(%rbp),%esi
b16d(7): lea 0xcfdf(%rip),%rdx
b174(3): mov %rax,%rcx
b177(3): mov %r12,%r8
b17a(2): xor %edi,%edi
b17c(2): xor %eax,%eax
b17e(5): call 0xffff7db2(%rip)
b183(5): call 0x8d(%rip)
b188(6): mov 0x211eba(%rip),%edi
b18e(5): call 0xffff77f2(%rip)
b193(5): nop 0x0(%rax,%rax,1)
b198(2): xor %esi,%esi
b19a(3): mov %rbx,%rdi
b19d(5): mov $0x1,%edx
b1a2(5): call 0x762e(%rip)
b1a7(2): test %eax,%eax
b1a9(7): mov 0x211f40(%rip),%rdi
b1b0(6): jz 0xffffff68(%rip)
b1b6(5): call 0x7c0a(%rip)
b1bb(2): test %eax,%eax
b1bd(6): jnz 0xffffff7b(%rip)
b1c3(1): pop %rbx
b1c4(1): pop %rbp
b1c5(2): pop %r12
b1c7(5): jmp 0x49(%rip)
b1cc(4): nop 0x0(%rax)
b1d0(2): mov (%rax),%esi
b1d2(7): lea 0xdc87(%rip),%rdx
b1d9(3): mov %r12,%rcx
b1dc(2): xor %edi,%edi
b1de(2): xor %eax,%eax
b1e0(5): call 0xffff7d50(%rip)
b1e5(2): jmp 0xffffff9e(%rip)

"close_stdout_set_file_name" :
b1f0(7): mov %rdi,0x2143c1(%rip)
b1f7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
b200(7): mov %dil,0x2143a9(%rip)
b207(1): ret near (%rsp)

"close_stdout" :
b210(1): push %rbp
b211(1): push %rbx
b212(4): sub $0x8,%rsp
b216(7): mov 0x211ecb(%rip),%rdi
b21d(5): call 0x7ba3(%rip)
b222(2): test %eax,%eax
b224(2): jz 0x18(%rip)
b226(5): call 0xffff772a(%rip)
b22b(7): cmp $0x0,0x21437e(%rip)
b232(3): mov %rax,%rbx
b235(2): jz 0x1e(%rip)
b237(3): cmp $0x20,(%rax)
b23a(2): jnz 0x19(%rip)
b23c(7): mov 0x211edd(%rip),%rdi
b243(5): call 0x7b7d(%rip)
b248(2): test %eax,%eax
b24a(2): jnz 0x48(%rip)
b24c(4): add $0x8,%rsp
b250(1): pop %rbx
b251(1): pop %rbp
b252(1): ret near (%rsp)
b253(7): lea 0xcf00(%rip),%rsi
b25a(2): xor %edi,%edi
b25c(5): mov $0x5,%edx
b261(5): call 0xffff786f(%rip)
b266(7): mov 0x21434b(%rip),%rdi
b26d(3): mov %rax,%rbp
b270(3): test %rdi,%rdi
b273(2): jz 0x2a(%rip)
b275(5): call 0x424b(%rip)
b27a(2): mov (%rbx),%esi
b27c(7): lea 0xced0(%rip),%rdx
b283(3): mov %rax,%rcx
b286(3): mov %rbp,%r8
b289(2): xor %edi,%edi
b28b(2): xor %eax,%eax
b28d(5): call 0xffff7ca3(%rip)
b292(6): mov 0x211db0(%rip),%edi
b298(5): call 0xffff76e8(%rip)
b29d(2): mov (%rbx),%esi
b29f(7): lea 0xdbba(%rip),%rdx
b2a6(3): mov %rax,%rcx
b2a9(2): xor %edi,%edi
b2ab(2): xor %eax,%eax
b2ad(5): call 0xffff7c83(%rip)
b2b2(2): jmp 0xffffffe0(%rip)

"dir_name" :
b2c0(4): sub $0x8,%rsp
b2c4(5): call 0x7c(%rip)
b2c9(3): test %rax,%rax
b2cc(2): jz 0x7(%rip)
b2ce(4): add $0x8,%rsp
b2d2(1): ret near (%rsp)
b2d3(5): call 0x6f8d(%rip)

"dir_len" :
b2e0(1): push %rbp
b2e1(1): push %rbx
b2e2(2): xor %ebp,%ebp
b2e4(3): mov %rdi,%rbx
b2e7(4): sub $0x8,%rsp
b2eb(3): cmp $0x2f,(%rdi)
b2ee(4): setz %bpl
b2f2(5): call 0xae(%rip)
b2f7(3): mov %rax,%rcx
b2fa(3): sub %rbx,%rcx
b2fd(3): cmp %rbp,%rcx
b300(2): jbe 0x30(%rip)
b302(4): cmp $0x2f,0xffffffff(%rax)
b306(4): lea 0xffffffff(%rcx),%rdx
b30a(2): jz 0x14(%rip)
b30c(2): jmp 0x24(%rip)
b30e(2): nop 
b310(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b315(4): lea 0xffffffff(%rdx),%rax
b319(2): jnz 0xa(%rip)
b31b(3): mov %rax,%rdx
b31e(3): cmp %rdx,%rbp
b321(2): jnz 0xffffffef(%rip)
b323(4): add $0x8,%rsp
b327(3): mov %rdx,%rax
b32a(1): pop %rbx
b32b(1): pop %rbp
b32c(1): ret near (%rsp)
b32d(3): nop (%rax)
b330(4): add $0x8,%rsp
b334(3): mov %rcx,%rdx
b337(3): mov %rdx,%rax
b33a(1): pop %rbx
b33b(1): pop %rbp
b33c(1): ret near (%rsp)

"mdir_name" :
b340(1): push %rbp
b341(1): push %rbx
b342(3): mov %rdi,%rbp
b345(4): sub $0x8,%rsp
b349(5): call 0xffffff97(%rip)
b34e(3): test %rax,%rax
b351(3): mov %rax,%rbx
b354(3): setz %al
b357(3): movzx %al,%eax
b35a(5): lea 0x1(%rbx,%rax,1),%rdi
b35f(5): call 0xffff7a91(%rip)
b364(3): test %rax,%rax
b367(3): mov %rax,%rcx
b36a(2): jz 0x1c(%rip)
b36c(3): mov %rbx,%rdx
b36f(3): mov %rbp,%rsi
b372(3): mov %rax,%rdi
b375(5): call 0xffff7a0b(%rip)
b37a(3): test %rbx,%rbx
b37d(3): mov %rax,%rcx
b380(2): jz 0x10(%rip)
b382(4): mov $0x0,0x0(%rcx,%rbx,1)
b386(4): add $0x8,%rsp
b38a(3): mov %rcx,%rax
b38d(1): pop %rbx
b38e(1): pop %rbp
b38f(1): ret near (%rsp)
b390(3): mov $0x2e,(%rax)
b393(5): mov $0x1,%ebx
b398(2): jmp 0xffffffea(%rip)

"last_component" :
b3a0(3): movzx (%rdi),%edx
b3a3(3): mov %rdi,%rax
b3a6(3): cmp $0x2f,%dl
b3a9(2): jnz 0x13(%rip)
b3ab(5): nop 0x0(%rax,%rax,1)
b3b0(4): add $0x1,%rax
b3b4(3): movzx (%rax),%edx
b3b7(3): cmp $0x2f,%dl
b3ba(2): jz 0xfffffff6(%rip)
b3bc(2): test %dl,%dl
b3be(2): jz 0x3c(%rip)
b3c0(3): mov %rax,%rcx
b3c3(2): xor %esi,%esi
b3c5(2): jmp 0x20(%rip)
b3c7(9): nop 0x0(%rax,%rax,1)
b3d0(3): test %sil,%sil
b3d3(2): jz 0x7(%rip)
b3d5(3): mov %rcx,%rax
b3d8(2): xor %esi,%esi
b3da(4): add $0x1,%rcx
b3de(3): movzx (%rcx),%edx
b3e1(2): test %dl,%dl
b3e3(2): jz 0x17(%rip)
b3e5(3): cmp $0x2f,%dl
b3e8(2): jnz 0xffffffe8(%rip)
b3ea(4): add $0x1,%rcx
b3ee(3): movzx (%rcx),%edx
b3f1(5): mov $0x1,%esi
b3f6(2): test %dl,%dl
b3f8(2): jnz 0xffffffed(%rip)
b3fa(2): REP ret near (%rsp)

"base_len" :
b400(1): push %rbx
b401(3): mov %rdi,%rbx
b404(5): call 0xffff76ec(%rip)
b409(4): cmp $0x1,%rax
b40d(2): jbe 0xd(%rip)
b40f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
b414(4): lea 0xffffffff(%rax),%rdx
b418(2): jz 0x10(%rip)
b41a(1): pop %rbx
b41b(1): ret near (%rsp)
b41c(4): nop 0x0(%rax)
b420(3): mov %rax,%rdx
b423(5): nop 0x0(%rax,%rax,1)
b428(4): cmp $0x1,%rdx
b42c(2): jz 0x14(%rip)
b42e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b433(4): lea 0xffffffff(%rdx),%rax
b437(2): jz 0xffffffe9(%rip)
b439(3): mov %rdx,%rax
b43c(1): pop %rbx
b43d(1): ret near (%rsp)
b43e(2): nop 
b440(5): mov $0x1,%eax
b445(1): pop %rbx
b446(1): ret near (%rsp)

"fadvise" :
b460(3): test %rdi,%rdi
b463(2): jz 0x1d(%rip)
b465(1): push %rbx
b466(2): mov %esi,%ebx
b468(5): call 0xffff7948(%rip)
b46d(2): mov %ebx,%ecx
b46f(2): xor %edx,%edx
b471(2): xor %esi,%esi
b473(1): pop %rbx
b474(2): mov %eax,%edi
b476(5): jmp 0xffff77fa(%rip)
b47b(5): nop 0x0(%rax,%rax,1)
b480(2): REP ret near (%rsp)

"open_safer" :
b490(4): sub $0x58,%rsp
b494(5): mov %rdx,0x30(%rsp)
b499(2): xor %edx,%edx
b49b(9): mov $0x28,%rax
b4a4(5): mov %rax,0x18(%rsp)
b4a9(2): xor %eax,%eax
b4ab(4): test $0x40,%sil
b4af(2): jnz 0x29(%rip)
b4b1(2): xor %eax,%eax
b4b3(5): call 0xffff7aad(%rip)
b4b8(2): mov %eax,%edi
b4ba(5): call 0x5486(%rip)
b4bf(5): mov 0x18(%rsp),%rcx
b4c4(9): xor $0x28,%rcx
b4cd(2): jnz 0x2c(%rip)
b4cf(4): add $0x58,%rsp
b4d3(1): ret near (%rsp)
b4d4(4): nop 0x0(%rax)
b4d8(5): lea 0x60(%rsp),%rax
b4dd(7): mov $0x10,(%rsp)
b4e4(4): mov 0x30(%rsp),%edx
b4e8(5): mov %rax,0x8(%rsp)
b4ed(5): lea 0x20(%rsp),%rax
b4f2(5): mov %rax,0x10(%rsp)
b4f7(2): jmp 0xffffffba(%rip)
b4f9(5): call 0xffff7637(%rip)

"record_file" :
b500(3): test %rdi,%rdi
b503(2): jz 0x7d(%rip)
b505(2): push %r13
b507(2): push %r12
b509(3): mov %rdi,%r13
b50c(1): push %rbp
b50d(1): push %rbx
b50e(3): mov %rsi,%r12
b511(5): mov $0x18,%edi
b516(3): mov %rdx,%rbp
b519(4): sub $0x8,%rsp
b51d(5): call 0x6af3(%rip)
b522(3): mov %r12,%rdi
b525(3): mov %rax,%rbx
b528(5): call 0x6d18(%rip)
b52d(3): mov %rax,(%rbx)
b530(4): mov 0x8(%rbp),%rax
b534(3): mov %rbx,%rsi
b537(3): mov %r13,%rdi
b53a(4): mov %rax,0x8(%rbx)
b53e(4): mov 0x0(%rbp),%rax
b542(4): mov %rax,0x10(%rbx)
b546(5): call 0x14da(%rip)
b54b(3): test %rax,%rax
b54e(2): jz 0x34(%rip)
b550(3): cmp %rax,%rbx
b553(2): jz 0x1d(%rip)
b555(4): add $0x8,%rsp
b559(3): mov %rbx,%rdi
b55c(1): pop %rbx
b55d(1): pop %rbp
b55e(2): pop %r12
b560(2): pop %r13
b562(5): jmp 0x17de(%rip)
b567(9): nop 0x0(%rax,%rax,1)
b570(4): add $0x8,%rsp
b574(1): pop %rbx
b575(1): pop %rbp
b576(2): pop %r12
b578(2): pop %r13
b57a(1): ret near (%rsp)
b57b(5): nop 0x0(%rax,%rax,1)
b580(2): REP ret near (%rsp)
b582(5): call 0x6cde(%rip)

"seen_file" :
b590(4): sub $0x28,%rsp
b594(9): mov $0x28,%rax
b59d(5): mov %rax,0x18(%rsp)
b5a2(2): xor %eax,%eax
b5a4(3): test %rdi,%rdi
b5a7(2): jz 0x25(%rip)
b5a9(4): mov 0x8(%rdx),%rax
b5ad(4): mov %rsi,(%rsp)
b5b1(3): mov %rsp,%rsi
b5b4(5): mov %rax,0x8(%rsp)
b5b9(3): mov (%rdx),%rax
b5bc(5): mov %rax,0x10(%rsp)
b5c1(5): call 0x9ef(%rip)
b5c6(3): test %rax,%rax
b5c9(3): setnz %al
b5cc(5): mov 0x18(%rsp),%rcx
b5d1(9): xor $0x28,%rcx
b5da(2): jnz 0x7(%rip)
b5dc(4): add $0x28,%rsp
b5e0(1): ret near (%rsp)
b5e1(5): call 0xffff754f(%rip)

"strmode" :
b5f0(2): mov %edi,%edx
b5f2(5): mov $0x2d,%eax
b5f7(6): and $0xf000,%edx
b5fd(6): cmp $0x8000,%edx
b603(2): jz 0x5d(%rip)
b605(6): cmp $0x4000,%edx
b60b(5): mov $0x64,%eax
b610(2): jz 0x50(%rip)
b612(6): cmp $0x6000,%edx
b618(5): mov $0x62,%eax
b61d(2): jz 0x43(%rip)
b61f(6): cmp $0x2000,%edx
b625(5): mov $0x63,%eax
b62a(2): jz 0x36(%rip)
b62c(6): cmp $0xa000,%edx
b632(5): mov $0x6c,%eax
b637(2): jz 0x29(%rip)
b639(6): cmp $0x1000,%edx
b63f(5): mov $0x70,%eax
b644(2): jz 0x1c(%rip)
b646(6): cmp $0xc000,%edx
b64c(5): mov $0x73,%eax
b651(5): mov $0x3f,%edx
b656(3): cmovne %edx,%eax
b659(7): nop 0x0(%rax)
b660(2): mov %al,(%rsi)
b662(2): mov %edi,%eax
b664(5): and $0x100,%eax
b669(3): cmp $0x1,%eax
b66c(2): sbb %eax,%eax
b66e(3): and $0xbb,%eax
b671(3): add $0x72,%eax
b674(3): mov %al,0x1(%rsi)
b677(2): mov %edi,%eax
b679(5): and $0x80,%eax
b67e(3): cmp $0x1,%eax
b681(2): sbb %eax,%eax
b683(3): and $0xb6,%eax
b686(3): add $0x77,%eax
b689(3): mov %al,0x2(%rsi)
b68c(2): mov %edi,%eax
b68e(3): and $0x40,%eax
b691(3): cmp $0x1,%eax
b694(2): sbb %eax,%eax
b696(6): test $0x800,%edi
b69c(6): jz 0xa4(%rip)
b6a2(3): and $0xe0,%eax
b6a5(3): add $0x73,%eax
b6a8(3): mov %al,0x3(%rsi)
b6ab(2): mov %edi,%eax
b6ad(3): and $0x20,%eax
b6b0(3): cmp $0x1,%eax
b6b3(2): sbb %eax,%eax
b6b5(3): and $0xbb,%eax
b6b8(3): add $0x72,%eax
b6bb(3): mov %al,0x4(%rsi)
b6be(2): mov %edi,%eax
b6c0(3): and $0x10,%eax
b6c3(3): cmp $0x1,%eax
b6c6(2): sbb %eax,%eax
b6c8(3): and $0xb6,%eax
b6cb(3): add $0x77,%eax
b6ce(3): mov %al,0x5(%rsi)
b6d1(2): mov %edi,%eax
b6d3(3): and $0x8,%eax
b6d6(3): cmp $0x1,%eax
b6d9(2): sbb %eax,%eax
b6db(6): test $0x400,%edi
b6e1(6): jz 0x87(%rip)
b6e7(3): and $0xe0,%eax
b6ea(3): add $0x73,%eax
b6ed(3): mov %al,0x6(%rsi)
b6f0(2): mov %edi,%eax
b6f2(3): and $0x4,%eax
b6f5(3): cmp $0x1,%eax
b6f8(2): sbb %eax,%eax
b6fa(3): and $0xbb,%eax
b6fd(3): add $0x72,%eax
b700(3): mov %al,0x7(%rsi)
b703(2): mov %edi,%eax
b705(3): and $0x2,%eax
b708(3): cmp $0x1,%eax
b70b(2): sbb %eax,%eax
b70d(3): and $0xb6,%eax
b710(3): add $0x77,%eax
b713(3): mov %al,0x8(%rsi)
b716(2): mov %edi,%eax
b718(3): and $0x1,%eax
b71b(3): cmp $0x1,%eax
b71e(2): sbb %eax,%eax
b720(6): and $0x200,%edi
b726(2): jz 0x2a(%rip)
b728(3): and $0xe0,%eax
b72b(3): add $0x74,%eax
b72e(3): mov %al,0x9(%rsi)
b731(5): mov $0x20,%eax
b736(4): mov %ax,0xa(%rsi)
b73a(1): ret near (%rsp)
b73b(5): nop 0x0(%rax,%rax,1)
b740(3): and $0xb5,%eax
b743(3): add $0x78,%eax
b746(5): jmp 0xffffff62(%rip)
b74b(5): nop 0x0(%rax,%rax,1)
b750(3): and $0xb5,%eax
b753(3): add $0x78,%eax
b756(3): mov %al,0x9(%rsi)
b759(5): mov $0x20,%eax
b75e(4): mov %ax,0xa(%rsi)
b762(1): ret near (%rsp)
b763(5): nop 0x0(%rax,%rax,1)
b768(3): and $0xb5,%eax
b76b(3): add $0x78,%eax
b76e(5): jmp 0xffffff7f(%rip)

"filemodestring" :
b780(3): mov 0x18(%rdi),%edi
b783(5): jmp 0xfffffe6d(%rip)

"file_name_concat" :
b790(4): sub $0x8,%rsp
b794(5): call 0x1c(%rip)
b799(3): test %rax,%rax
b79c(2): jz 0x7(%rip)
b79e(4): add $0x8,%rsp
b7a2(1): ret near (%rsp)
b7a3(5): call 0x6abd(%rip)

"mfile_name_concat" :
b7b0(2): push %r15
b7b2(2): push %r14
b7b4(3): mov %rdx,%r15
b7b7(2): push %r13
b7b9(2): push %r12
b7bb(3): mov %rdi,%r12
b7be(1): push %rbp
b7bf(1): push %rbx
b7c0(3): mov %rsi,%rbp
b7c3(4): sub $0x18,%rsp
b7c7(5): call 0xfffffbd9(%rip)
b7cc(3): mov %rax,%rbx
b7cf(3): mov %rax,%rdi
b7d2(5): call 0xfffffc2e(%rip)
b7d7(3): sub %r12,%rbx
b7da(3): mov %rax,%r13
b7dd(3): mov %rbp,%rdi
b7e0(3): add %rax,%rbx
b7e3(5): call 0xffff730d(%rip)
b7e8(3): test %r13,%r13
b7eb(3): mov %rax,%r14
b7ee(2): jz 0x32(%rip)
b7f0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
b7f6(6): jz 0xaa(%rip)
b7fc(2): xor %eax,%eax
b7fe(4): cmp $0x2f,0x0(%rbp)
b802(5): mov $0x0,%edx
b807(3): setnz %al
b80a(4): mov %rax,(%rsp)
b80e(5): mov $0x2f,%eax
b813(3): cmove %edx,%eax
b816(4): mov %al,0xf(%rsp)
b81a(2): jmp 0x24(%rip)
b81c(4): nop 0x0(%rax)
b820(2): xor %eax,%eax
b822(4): cmp $0x2f,0x0(%rbp)
b826(5): mov $0x0,%edx
b82b(3): setz %al
b82e(4): mov %rax,(%rsp)
b832(5): mov $0x2e,%eax
b837(3): cmovne %edx,%eax
b83a(4): mov %al,0xf(%rsp)
b83e(5): lea 0x1(%rbx,%r14,1),%rdi
b843(4): add (%rsp),%rdi
b847(5): call 0xffff75a9(%rip)
b84c(3): test %rax,%rax
b84f(3): mov %rax,%r13
b852(2): jz 0x34(%rip)
b854(3): mov %rax,%rdi
b857(3): mov %rbx,%rdx
b85a(3): mov %r12,%rsi
b85d(5): call 0xffff76c3(%rip)
b862(5): movzx 0xf(%rsp),%ecx
b867(4): mov (%rsp),%rdi
b86b(3): add %rax,%rdi
b86e(3): test %r15,%r15
b871(2): mov %cl,(%rax)
b873(2): jz 0x5(%rip)
b875(3): mov %rdi,(%r15)
b878(3): mov %r14,%rdx
b87b(3): mov %rbp,%rsi
b87e(5): call 0xffff76a2(%rip)
b883(3): mov $0x0,(%rax)
b886(4): add $0x18,%rsp
b88a(3): mov %r13,%rax
b88d(1): pop %rbx
b88e(1): pop %rbp
b88f(2): pop %r12
b891(2): pop %r13
b893(2): pop %r14
b895(2): pop %r15
b897(1): ret near (%rsp)
b898(8): nop 0x0(%rax,%rax,1)
b8a0(8): mov $0x0,(%rsp)
b8a8(5): mov $0x0,0xf(%rsp)
b8ad(2): jmp 0xffffff91(%rip)

"full_read" :
b8b0(2): push %r13
b8b2(2): push %r12
b8b4(1): push %rbp
b8b5(1): push %rbx
b8b6(4): sub $0x8,%rsp
b8ba(3): test %rdx,%rdx
b8bd(2): jz 0x64(%rip)
b8bf(3): mov %edi,%r13d
b8c2(3): mov %rsi,%rbp
b8c5(3): mov %rdx,%rbx
b8c8(3): xor %r12d,%r12d
b8cb(2): jmp 0x15(%rip)
b8cd(3): nop (%rax)
b8d0(3): test %rax,%rax
b8d3(2): jz 0x35(%rip)
b8d5(3): add %rax,%r12
b8d8(3): add %rax,%rbp
b8db(3): sub %rax,%rbx
b8de(2): jz 0x16(%rip)
b8e0(3): mov %rbx,%rdx
b8e3(3): mov %rbp,%rsi
b8e6(3): mov %r13d,%edi
b8e9(5): call 0x4067(%rip)
b8ee(4): cmp $0xffffffff,%rax
b8f2(2): jnz 0xffffffde(%rip)
b8f4(4): add $0x8,%rsp
b8f8(3): mov %r12,%rax
b8fb(1): pop %rbx
b8fc(1): pop %rbp
b8fd(2): pop %r12
b8ff(2): pop %r13
b901(1): ret near (%rsp)
b902(6): nop 0x0(%rax,%rax,1)
b908(5): call 0xffff7048(%rip)
b90d(6): mov $0x0,(%rax)
b913(4): add $0x8,%rsp
b917(3): mov %r12,%rax
b91a(1): pop %rbx
b91b(1): pop %rbp
b91c(2): pop %r12
b91e(2): pop %r13
b920(1): ret near (%rsp)
b921(3): xor %r12d,%r12d
b924(2): jmp 0xffffffd0(%rip)

"full_write" :
b930(2): push %r13
b932(2): push %r12
b934(1): push %rbp
b935(1): push %rbx
b936(4): sub $0x8,%rsp
b93a(3): test %rdx,%rdx
b93d(2): jz 0x64(%rip)
b93f(3): mov %edi,%r13d
b942(3): mov %rsi,%rbp
b945(3): mov %rdx,%rbx
b948(3): xor %r12d,%r12d
b94b(2): jmp 0x15(%rip)
b94d(3): nop (%rax)
b950(3): test %rax,%rax
b953(2): jz 0x35(%rip)
b955(3): add %rax,%r12
b958(3): add %rax,%rbp
b95b(3): sub %rax,%rbx
b95e(2): jz 0x16(%rip)
b960(3): mov %rbx,%rdx
b963(3): mov %rbp,%rsi
b966(3): mov %r13d,%edi
b969(5): call 0x4047(%rip)
b96e(4): cmp $0xffffffff,%rax
b972(2): jnz 0xffffffde(%rip)
b974(4): add $0x8,%rsp
b978(3): mov %r12,%rax
b97b(1): pop %rbx
b97c(1): pop %rbp
b97d(2): pop %r12
b97f(2): pop %r13
b981(1): ret near (%rsp)
b982(6): nop 0x0(%rax,%rax,1)
b988(5): call 0xffff6fc8(%rip)
b98d(6): mov $0x1c,(%rax)
b993(4): add $0x8,%rsp
b997(3): mov %r12,%rax
b99a(1): pop %rbx
b99b(1): pop %rbp
b99c(2): pop %r12
b99e(2): pop %r13
b9a0(1): ret near (%rsp)
b9a1(3): xor %r12d,%r12d
b9a4(2): jmp 0xffffffd0(%rip)

"next_prime" :
b9b0(4): cmp $0xa,%rdi
b9b4(5): mov $0xa,%eax
b9b9(a): mov $0x-6148914691236517205,%r9
b9c3(4): cmovnae %rax,%rdi
b9c7(4): or $0x1,%rdi
b9cb(4): cmp $0xffffffff,%rdi
b9cf(2): jz 0x70(%rip)
b9d1(7): nop 0x0(%rax)
b9d8(3): mov %rdi,%rax
b9db(3): mov %rdi,%rcx
b9de(3): mul %rax,%r9,%rdx
b9e1(3): mov %rdx,%rax
b9e4(3): shr $0x1,%rax
b9e7(4): lea 0x0(%rax,%rax,2),%rax
b9eb(3): sub %rax,%rcx
b9ee(4): cmp $0x9,%rdi
b9f2(3): mov %rcx,%rax
b9f5(2): jbe 0x3b(%rip)
b9f7(3): test %rcx,%rcx
b9fa(2): jz 0x3b(%rip)
b9fc(6): mov $0x10,%r8d
ba02(5): mov $0x9,%esi
ba07(5): mov $0x3,%ecx
ba0c(2): jmp 0xd(%rip)
ba0e(2): nop 
ba10(4): add $0x8,%r8
ba14(3): test %rdx,%rdx
ba17(2): jz 0x1e(%rip)
ba19(4): add $0x2,%rcx
ba1d(2): xor %edx,%edx
ba1f(3): mov %rdi,%rax
ba22(3): div %rcx,%rax
ba25(3): add %r8,%rsi
ba28(3): cmp %rdi,%rsi
ba2b(3): mov %rdx,%rax
ba2e(2): jb 0xffffffe2(%rip)
ba30(3): test %rax,%rax
ba33(2): jnz 0xc(%rip)
ba35(4): add $0x2,%rdi
ba39(4): cmp $0xffffffff,%rdi
ba3d(2): jnz 0xffffff9b(%rip)
ba3f(3): mov %rdi,%rax
ba42(1): ret near (%rsp)

"raw_hasher" :
ba50(3): mov %rdi,%rax
ba53(2): xor %edx,%edx
ba55(4): ror $0x3,%rax
ba59(3): div %rsi,%rax
ba5c(3): mov %rdx,%rax
ba5f(1): ret near (%rsp)

"raw_comparator" :
ba60(3): cmp %rsi,%rdi
ba63(3): setz %al
ba66(1): ret near (%rsp)

"safe_hasher" :
ba70(1): push %rbx
ba71(3): mov %rdi,%rbx
ba74(3): mov %rsi,%rdi
ba77(4): mov 0x10(%rbx),%rsi
ba7b(3): call 0x30(%rbx)
ba7e(4): cmp %rax,0x10(%rbx)
ba82(2): jbe 0xb(%rip)
ba84(4): shl/sal $0x4,%rax
ba88(3): add (%rbx),%rax
ba8b(1): pop %rbx
ba8c(1): ret near (%rsp)
ba8d(5): call 0xffff6eb3(%rip)

"hash_find_entry" :
baa0(2): push %r14
baa2(2): push %r13
baa4(3): mov %rdx,%r14
baa7(2): push %r12
baa9(1): push %rbp
baaa(3): mov %rdi,%r12
baad(1): push %rbx
baae(3): mov %rsi,%rbp
bab1(3): mov %ecx,%r13d
bab4(5): call 0xffffffbc(%rip)
bab9(3): mov %rax,(%r14)
babc(3): mov (%rax),%rsi
babf(3): test %rsi,%rsi
bac2(6): jz 0xee(%rip)
bac8(3): cmp %rbp,%rsi
bacb(3): mov %rax,%rbx
bace(6): jz 0x95(%rip)
bad4(3): mov %rbp,%rdi
bad7(5): call 0x38(%r12)
badc(2): test %al,%al
bade(6): jnz 0x82(%rip)
bae4(4): mov 0x8(%rbx),%rax
bae8(3): test %rax,%rax
baeb(6): jz 0xc5(%rip)
baf1(3): mov (%rax),%rsi
baf4(3): cmp %rsi,%rbp
baf7(2): jnz 0x22(%rip)
baf9(2): jmp 0x33(%rip)
bafb(5): nop 0x0(%rax,%rax,1)
bb00(4): mov 0x8(%rbx),%rbx
bb04(4): mov 0x8(%rbx),%rax
bb08(3): test %rax,%rax
bb0b(6): jz 0xa5(%rip)
bb11(3): mov (%rax),%rsi
bb14(3): cmp %rbp,%rsi
bb17(2): jz 0x15(%rip)
bb19(3): mov %rbp,%rdi
bb1c(5): call 0x38(%r12)
bb21(2): test %al,%al
bb23(2): jz 0xffffffdd(%rip)
bb25(4): mov 0x8(%rbx),%rax
bb29(3): mov (%rax),%rsi
bb2c(3): test %r13b,%r13b
bb2f(2): jz 0x1f(%rip)
bb31(4): mov 0x8(%rax),%rdx
bb35(4): mov %rdx,0x8(%rbx)
bb39(7): mov $0x0,(%rax)
bb40(5): mov 0x48(%r12),%rdx
bb45(4): mov %rdx,0x8(%rax)
bb49(5): mov %rax,0x48(%r12)
bb4e(1): pop %rbx
bb4f(3): mov %rsi,%rax
bb52(1): pop %rbp
bb53(2): pop %r12
bb55(2): pop %r13
bb57(2): pop %r14
bb59(1): ret near (%rsp)
bb5a(6): nop 0x0(%rax,%rax,1)
bb60(3): mov (%rbx),%rsi
bb63(3): test %r13b,%r13b
bb66(2): jz 0xffffffe8(%rip)
bb68(4): mov 0x8(%rbx),%rax
bb6c(3): test %rax,%rax
bb6f(2): jz 0x31(%rip)
bb71(4): movdqu (%rax),%xmm0
bb75(3): movups %xmm0,(%rbx)
bb78(7): mov $0x0,(%rax)
bb7f(5): mov 0x48(%r12),%rdx
bb84(4): mov %rdx,0x8(%rax)
bb88(5): mov %rax,0x48(%r12)
bb8d(3): mov %rsi,%rax
bb90(1): pop %rbx
bb91(1): pop %rbp
bb92(2): pop %r12
bb94(2): pop %r13
bb96(2): pop %r14
bb98(1): ret near (%rsp)
bb99(7): nop 0x0(%rax)
bba0(7): mov $0x0,(%rbx)
bba7(2): jmp 0xffffffa7(%rip)
bba9(7): nop 0x0(%rax)
bbb0(2): xor %esi,%esi
bbb2(1): pop %rbx
bbb3(3): mov %rsi,%rax
bbb6(1): pop %rbp
bbb7(2): pop %r12
bbb9(2): pop %r13
bbbb(2): pop %r14
bbbd(1): ret near (%rsp)

"check_tuning.isra.0" :
bbc0(3): mov (%rdi),%rdx
bbc3(7): lea 0xc616(%rip),%rcx
bbca(5): mov $0x1,%eax
bbcf(3): cmp %rcx,%rdx
bbd2(2): jz 0x63(%rip)
bbd4(5): movss 0x8(%rdx),%xmm0
bbd9(7): ucomiss 0xc614(%rip),%xmm0
bbe0(2): jbe 0x50(%rip)
bbe2(8): movss 0xc60e(%rip),%xmm1
bbea(3): ucomiss %xmm0,%xmm1
bbed(2): jbe 0x43(%rip)
bbef(5): movss 0xc(%rdx),%xmm1
bbf4(7): ucomiss 0xc601(%rip),%xmm1
bbfb(2): jbe 0x35(%rip)
bbfd(4): movss (%rdx),%xmm1
bc01(7): ucomiss 0xc5f8(%rip),%xmm1
bc08(2): jb 0x28(%rip)
bc0a(8): addss 0xc5e2(%rip),%xmm1
bc12(5): movss 0x4(%rdx),%xmm2
bc17(3): ucomiss %xmm1,%xmm2
bc1a(2): jbe 0x16(%rip)
bc1c(8): movss 0xc5e0(%rip),%xmm3
bc24(3): ucomiss %xmm2,%xmm3
bc27(2): jb 0x9(%rip)
bc29(3): ucomiss %xmm1,%xmm0
bc2c(2): jnbe 0x9(%rip)
bc2e(2): nop 
bc30(3): mov %rcx,(%rdi)
bc33(2): xor %eax,%eax
bc35(2): REP ret near (%rsp)

"transfer_entries" :
bc40(2): push %r15
bc42(2): push %r14
bc44(2): push %r13
bc46(2): push %r12
bc48(1): push %rbp
bc49(1): push %rbx
bc4a(4): sub $0x8,%rsp
bc4e(3): mov (%rsi),%r12
bc51(4): cmp 0x8(%rsi),%r12
bc55(6): jnb 0xe3(%rip)
bc5b(3): mov %rdi,%rbp
bc5e(3): mov %rsi,%r13
bc61(3): mov %edx,%r14d
bc64(4): nop 0x0(%rax)
bc68(4): mov (%r12),%r15
bc6c(3): test %r15,%r15
bc6f(6): jz 0xbb(%rip)
bc75(5): mov 0x8(%r12),%rbx
bc7a(3): test %rbx,%rbx
bc7d(2): jnz 0x1f(%rip)
bc7f(2): jmp 0x5c(%rip)
bc81(7): nop 0x0(%rax)
bc88(4): mov 0x8(%rax),%rcx
bc8c(3): test %rdx,%rdx
bc8f(4): mov %rcx,0x8(%rbx)
bc93(4): mov %rbx,0x8(%rax)
bc97(3): mov %rdx,%rbx
bc9a(2): jz 0x3d(%rip)
bc9c(3): mov (%rbx),%r15
bc9f(3): mov %rbp,%rdi
bca2(3): mov %r15,%rsi
bca5(5): call 0xfffffdcb(%rip)
bcaa(4): cmp $0x0,(%rax)
bcae(4): mov 0x8(%rbx),%rdx
bcb2(2): jnz 0xffffffd6(%rip)
bcb4(3): mov %r15,(%rax)
bcb7(5): add $0x1,0x18(%rbp)
bcbc(3): test %rdx,%rdx
bcbf(7): mov $0x0,(%rbx)
bcc6(4): mov 0x48(%rbp),%rax
bcca(4): mov %rax,0x8(%rbx)
bcce(4): mov %rbx,0x48(%rbp)
bcd2(3): mov %rdx,%rbx
bcd5(2): jnz 0xffffffc7(%rip)
bcd7(4): mov (%r12),%r15
bcdb(3): test %r14b,%r14b
bcde(9): mov $0x0,0x8(%r12)
bce7(2): jnz 0x43(%rip)
bce9(3): mov %r15,%rsi
bcec(3): mov %rbp,%rdi
bcef(5): call 0xfffffd81(%rip)
bcf4(4): cmp $0x0,(%rax)
bcf8(3): mov %rax,%rbx
bcfb(2): jz 0x55(%rip)
bcfd(4): mov 0x48(%rbp),%rax
bd01(3): test %rax,%rax
bd04(2): jz 0x5c(%rip)
bd06(4): mov 0x8(%rax),%rdx
bd0a(4): mov %rdx,0x48(%rbp)
bd0e(4): mov 0x8(%rbx),%rdx
bd12(3): mov %r15,(%rax)
bd15(4): mov %rdx,0x8(%rax)
bd19(4): mov %rax,0x8(%rbx)
bd1d(8): mov $0x0,(%r12)
bd25(5): sub $0x1,0x18(%r13)
bd2a(4): add $0x10,%r12
bd2e(4): cmp %r12,0x8(%r13)
bd32(6): jnbe 0xffffff36(%rip)
bd38(4): add $0x8,%rsp
bd3c(5): mov $0x1,%eax
bd41(1): pop %rbx
bd42(1): pop %rbp
bd43(2): pop %r12
bd45(2): pop %r13
bd47(2): pop %r14
bd49(2): pop %r15
bd4b(1): ret near (%rsp)
bd4c(4): nop 0x0(%rax)
bd50(3): mov %r15,(%rax)
bd53(5): add $0x1,0x18(%rbp)
bd58(2): jmp 0xffffffc5(%rip)
bd5a(6): nop 0x0(%rax,%rax,1)
bd60(5): mov $0x10,%edi
bd65(5): call 0xffff708b(%rip)
bd6a(3): test %rax,%rax
bd6d(2): jnz 0xffffffa1(%rip)
bd6f(4): add $0x8,%rsp
bd73(2): xor %eax,%eax
bd75(1): pop %rbx
bd76(1): pop %rbp
bd77(2): pop %r12
bd79(2): pop %r13
bd7b(2): pop %r14
bd7d(2): pop %r15
bd7f(1): ret near (%rsp)

"hash_get_n_buckets" :
bd80(4): mov 0x10(%rdi),%rax
bd84(1): ret near (%rsp)

"hash_get_n_buckets_used" :
bd90(4): mov 0x18(%rdi),%rax
bd94(1): ret near (%rsp)

"hash_get_n_entries" :
bda0(4): mov 0x20(%rdi),%rax
bda4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
bdb0(3): mov (%rdi),%rsi
bdb3(4): mov 0x8(%rdi),%rdi
bdb7(2): xor %eax,%eax
bdb9(3): cmp %rdi,%rsi
bdbc(2): jnb 0x3b(%rip)
bdbe(2): nop 
bdc0(4): cmp $0x0,(%rsi)
bdc4(2): jz 0x28(%rip)
bdc6(4): mov 0x8(%rsi),%rdx
bdca(5): mov $0x1,%ecx
bdcf(3): test %rdx,%rdx
bdd2(2): jz 0x13(%rip)
bdd4(4): nop 0x0(%rax)
bdd8(4): mov 0x8(%rdx),%rdx
bddc(4): add $0x1,%rcx
bde0(3): test %rdx,%rdx
bde3(2): jnz 0xfffffff5(%rip)
bde5(3): cmp %rcx,%rax
bde8(4): cmovnae %rcx,%rax
bdec(4): add $0x10,%rsi
bdf0(3): cmp %rdi,%rsi
bdf3(2): jb 0xffffffcd(%rip)
bdf5(2): REP ret near (%rsp)
bdf7(2): REP ret near (%rsp)

"hash_table_ok" :
be00(3): mov (%rdi),%rcx
be03(4): mov 0x8(%rdi),%r8
be07(2): xor %edx,%edx
be09(2): xor %esi,%esi
be0b(3): cmp %r8,%rcx
be0e(2): jnb 0x38(%rip)
be10(4): cmp $0x0,(%rcx)
be14(2): jz 0x29(%rip)
be16(4): mov 0x8(%rcx),%rax
be1a(4): add $0x1,%rsi
be1e(4): add $0x1,%rdx
be22(3): test %rax,%rax
be25(2): jz 0x18(%rip)
be27(9): nop 0x0(%rax,%rax,1)
be30(4): mov 0x8(%rax),%rax
be34(4): add $0x1,%rdx
be38(3): test %rax,%rax
be3b(2): jnz 0xfffffff5(%rip)
be3d(4): add $0x10,%rcx
be41(3): cmp %r8,%rcx
be44(2): jb 0xffffffcc(%rip)
be46(2): xor %eax,%eax
be48(4): cmp %rsi,0x18(%rdi)
be4c(2): jz 0x4(%rip)
be4e(2): REP ret near (%rsp)
be50(4): cmp %rdx,0x20(%rdi)
be54(3): setz %al
be57(1): ret near (%rsp)

"hash_print_statistics" :
be60(2): push %r13
be62(2): push %r12
be64(3): mov %rsi,%r12
be67(1): push %rbp
be68(1): push %rbx
be69(2): xor %ebx,%ebx
be6b(4): sub $0x8,%rsp
be6f(3): mov (%rdi),%rsi
be72(4): mov 0x20(%rdi),%rcx
be76(4): mov 0x10(%rdi),%rbp
be7a(4): mov 0x18(%rdi),%r13
be7e(4): mov 0x8(%rdi),%rdi
be82(3): cmp %rdi,%rsi
be85(2): jnb 0x40(%rip)
be87(9): nop 0x0(%rax,%rax,1)
be90(4): cmp $0x0,(%rsi)
be94(2): jz 0x28(%rip)
be96(4): mov 0x8(%rsi),%rax
be9a(5): mov $0x1,%edx
be9f(3): test %rax,%rax
bea2(2): jz 0x13(%rip)
bea4(4): nop 0x0(%rax)
bea8(4): mov 0x8(%rax),%rax
beac(4): add $0x1,%rdx
beb0(3): test %rax,%rax
beb3(2): jnz 0xfffffff5(%rip)
beb5(3): cmp %rdx,%rbx
beb8(4): cmovnae %rdx,%rbx
bebc(4): add $0x10,%rsi
bec0(3): cmp %rdi,%rsi
bec3(2): jb 0xffffffcd(%rip)
bec5(7): lea 0xc29a(%rip),%rdx
becc(5): mov $0x1,%esi
bed1(3): mov %r12,%rdi
bed4(2): xor %eax,%eax
bed6(5): call 0xffff717a(%rip)
bedb(7): lea 0xc29c(%rip),%rdx
bee2(2): xor %eax,%eax
bee4(3): mov %rbp,%rcx
bee7(5): mov $0x1,%esi
beec(3): mov %r12,%rdi
beef(5): call 0xffff7161(%rip)
bef4(3): test %r13,%r13
bef7(2): js 0x69(%rip)
bef9(4): pxor %xmm0,%xmm0
befd(3): test %rbp,%rbp
bf00(5): cvtsi2sd %r13,%xmm0
bf05(8): mulsd 0xc30b(%rip),%xmm0
bf0d(2): js 0x7c(%rip)
bf0f(4): pxor %xmm1,%xmm1
bf13(5): cvtsi2sd %rbp,%xmm1
bf18(4): divsd %xmm1,%xmm0
bf1c(7): lea 0xc28d(%rip),%rdx
bf23(3): mov %r13,%rcx
bf26(3): mov %r12,%rdi
bf29(5): mov $0x1,%esi
bf2e(5): mov $0x1,%eax
bf33(5): call 0xffff711d(%rip)
bf38(4): add $0x8,%rsp
bf3c(3): mov %rbx,%rcx
bf3f(3): mov %r12,%rdi
bf42(1): pop %rbx
bf43(1): pop %rbp
bf44(2): pop %r12
bf46(2): pop %r13
bf48(7): lea 0xc247(%rip),%rdx
bf4f(5): mov $0x1,%esi
bf54(2): xor %eax,%eax
bf56(5): jmp 0xffff70fa(%rip)
bf5b(5): nop 0x0(%rax,%rax,1)
bf60(3): mov %r13,%rax
bf63(3): mov %r13,%rdx
bf66(4): pxor %xmm0,%xmm0
bf6a(3): shr $0x1,%rax
bf6d(3): and $0x1,%edx
bf70(3): or %rdx,%rax
bf73(3): test %rbp,%rbp
bf76(5): cvtsi2sd %rax,%xmm0
bf7b(4): addsd %xmm0,%xmm0
bf7f(8): mulsd 0xc291(%rip),%xmm0
bf87(2): jns 0xffffff88(%rip)
bf89(3): mov %rbp,%rax
bf8c(4): pxor %xmm1,%xmm1
bf90(3): shr $0x1,%rax
bf93(3): and $0x1,%ebp
bf96(3): or %rbp,%rax
bf99(5): cvtsi2sd %rax,%xmm1
bf9e(4): addsd %xmm1,%xmm1
bfa2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
bfb0(2): push %r12
bfb2(1): push %rbp
bfb3(3): mov %rdi,%r12
bfb6(1): push %rbx
bfb7(3): mov %rsi,%rbp
bfba(5): call 0xfffffab6(%rip)
bfbf(3): mov (%rax),%rsi
bfc2(3): test %rsi,%rsi
bfc5(2): jz 0x28(%rip)
bfc7(3): mov %rax,%rbx
bfca(2): jmp 0x9(%rip)
bfcc(4): nop 0x0(%rax)
bfd0(3): mov (%rbx),%rsi
bfd3(3): cmp %rbp,%rsi
bfd6(2): jz 0x19(%rip)
bfd8(3): mov %rbp,%rdi
bfdb(5): call 0x38(%r12)
bfe0(2): test %al,%al
bfe2(2): jnz 0x1e(%rip)
bfe4(4): mov 0x8(%rbx),%rbx
bfe8(3): test %rbx,%rbx
bfeb(2): jnz 0xffffffe5(%rip)
bfed(2): xor %esi,%esi
bfef(1): pop %rbx
bff0(3): mov %rsi,%rax
bff3(1): pop %rbp
bff4(2): pop %r12
bff6(1): ret near (%rsp)
bff7(9): nop 0x0(%rax,%rax,1)
c000(3): mov (%rbx),%rsi
c003(1): pop %rbx
c004(1): pop %rbp
c005(3): mov %rsi,%rax
c008(2): pop %r12
c00a(1): ret near (%rsp)

"hash_get_first" :
c010(5): cmp $0x0,0x20(%rdi)
c015(2): jz 0x2e(%rip)
c017(3): mov (%rdi),%rdx
c01a(4): mov 0x8(%rdi),%rcx
c01e(3): cmp %rcx,%rdx
c021(2): jnb 0x27(%rip)
c023(3): mov (%rdx),%rax
c026(3): test %rax,%rax
c029(2): jnz 0x1d(%rip)
c02b(5): nop 0x0(%rax,%rax,1)
c030(4): add $0x10,%rdx
c034(3): cmp %rcx,%rdx
c037(2): jnb 0x11(%rip)
c039(3): mov (%rdx),%rax
c03c(3): test %rax,%rax
c03f(2): jz 0xfffffff1(%rip)
c041(2): REP ret near (%rsp)
c043(2): xor %eax,%eax
c045(1): ret near (%rsp)
c046(2): REP ret near (%rsp)
c048(4): sub $0x8,%rsp
c04c(5): call 0xffff68f4(%rip)

"hash_get_next" :
c060(1): push %rbp
c061(1): push %rbx
c062(3): mov %rdi,%rbp
c065(3): mov %rsi,%rbx
c068(4): sub $0x8,%rsp
c06c(5): call 0xfffffa04(%rip)
c071(3): mov %rax,%rdx
c074(3): mov %rax,%rcx
c077(3): mov (%rdx),%rax
c07a(4): mov 0x8(%rdx),%rdx
c07e(3): cmp %rbx,%rax
c081(2): jz 0x18(%rip)
c083(5): nop 0x0(%rax,%rax,1)
c088(3): test %rdx,%rdx
c08b(2): jz 0x13(%rip)
c08d(3): mov (%rdx),%rax
c090(4): mov 0x8(%rdx),%rdx
c094(3): cmp %rbx,%rax
c097(2): jnz 0xfffffff1(%rip)
c099(3): test %rdx,%rdx
c09c(2): jnz 0x2c(%rip)
c09e(4): mov 0x8(%rbp),%rdx
c0a2(2): jmp 0xe(%rip)
c0a4(4): nop 0x0(%rax)
c0a8(3): mov (%rcx),%rax
c0ab(3): test %rax,%rax
c0ae(2): jnz 0xd(%rip)
c0b0(4): add $0x10,%rcx
c0b4(3): cmp %rcx,%rdx
c0b7(2): jnbe 0xfffffff1(%rip)
c0b9(2): xor %eax,%eax
c0bb(4): add $0x8,%rsp
c0bf(1): pop %rbx
c0c0(1): pop %rbp
c0c1(1): ret near (%rsp)
c0c2(6): nop 0x0(%rax,%rax,1)
c0c8(3): mov (%rdx),%rax
c0cb(4): add $0x8,%rsp
c0cf(1): pop %rbx
c0d0(1): pop %rbp
c0d1(1): ret near (%rsp)

"hash_get_entries" :
c0e0(3): mov (%rdi),%r9
c0e3(4): cmp %r9,0x8(%rdi)
c0e7(2): jbe 0x5b(%rip)
c0e9(3): xor %r8d,%r8d
c0ec(3): mov (%r9),%rcx
c0ef(3): test %rcx,%rcx
c0f2(2): jz 0x3b(%rip)
c0f4(3): cmp %r8,%rdx
c0f7(2): jbe 0x40(%rip)
c0f9(4): mov %rcx,0x0(%rsi,%r8,8)
c0fd(4): mov 0x8(%r9),%rcx
c101(4): lea 0x1(%r8),%rax
c105(3): test %rcx,%rcx
c108(2): jz 0x22(%rip)
c10a(6): nop 0x0(%rax,%rax,1)
c110(3): cmp %rax,%rdx
c113(2): jz 0x2d(%rip)
c115(3): mov (%rcx),%r8
c118(4): add $0x1,%rax
c11c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
c121(4): mov 0x8(%rcx),%rcx
c125(3): test %rcx,%rcx
c128(2): jnz 0xffffffe8(%rip)
c12a(3): mov %rax,%r8
c12d(4): add $0x10,%r9
c131(4): cmp %r9,0x8(%rdi)
c135(2): jnbe 0xffffffb7(%rip)
c137(3): mov %r8,%rax
c13a(1): ret near (%rsp)
c13b(5): nop 0x0(%rax,%rax,1)
c140(2): REP ret near (%rsp)
c142(2): xor %eax,%eax
c144(1): ret near (%rsp)

"hash_do_for_each" :
c150(2): push %r15
c152(2): push %r14
c154(2): push %r13
c156(2): push %r12
c158(1): push %rbp
c159(1): push %rbx
c15a(4): sub $0x8,%rsp
c15e(3): mov (%rdi),%r14
c161(4): cmp %r14,0x8(%rdi)
c165(2): jbe 0x51(%rip)
c167(3): mov %rdx,%r13
c16a(3): mov %rsi,%r12
c16d(3): mov %rdi,%r15
c170(2): xor %ebp,%ebp
c172(3): mov (%r14),%rdi
c175(3): test %rdi,%rdi
c178(2): jz 0x22(%rip)
c17a(3): mov %r14,%rbx
c17d(2): jmp 0x6(%rip)
c17f(1): nop 
c180(3): mov (%rbx),%rdi
c183(3): mov %r13,%rsi
c186(3): call %r12
c189(2): test %al,%al
c18b(2): jz 0x19(%rip)
c18d(4): mov 0x8(%rbx),%rbx
c191(4): add $0x1,%rbp
c195(3): test %rbx,%rbx
c198(2): jnz 0xffffffe8(%rip)
c19a(4): add $0x10,%r14
c19e(4): cmp %r14,0x8(%r15)
c1a2(2): jnbe 0xffffffd0(%rip)
c1a4(4): add $0x8,%rsp
c1a8(3): mov %rbp,%rax
c1ab(1): pop %rbx
c1ac(1): pop %rbp
c1ad(2): pop %r12
c1af(2): pop %r13
c1b1(2): pop %r14
c1b3(2): pop %r15
c1b5(1): ret near (%rsp)
c1b6(2): xor %ebp,%ebp
c1b8(2): jmp 0xffffffec(%rip)

"hash_string" :
c1c0(3): movzx (%rdi),%ecx
c1c3(2): xor %edx,%edx
c1c5(2): test %cl,%cl
c1c7(2): jz 0x26(%rip)
c1c9(7): nop 0x0(%rax)
c1d0(3): mov %rdx,%rax
c1d3(4): add $0x1,%rdi
c1d7(4): shl/sal $0x5,%rax
c1db(3): sub %rdx,%rax
c1de(2): xor %edx,%edx
c1e0(3): add %rcx,%rax
c1e3(3): movzx (%rdi),%ecx
c1e6(3): div %rsi,%rax
c1e9(2): test %cl,%cl
c1eb(2): jnz 0xffffffe5(%rip)
c1ed(3): mov %rdx,%rax
c1f0(1): ret near (%rsp)

"hash_reset_tuning" :
c200(a): mov $0x4575657221408423936,%rax
c20a(4): mov $0x0,0x10(%rdi)
c20e(3): mov %rax,(%rdi)
c211(a): mov $0x4590573145673223373,%rax
c21b(4): mov %rax,0x8(%rdi)
c21f(1): ret near (%rsp)

"hash_initialize" :
c220(2): push %r15
c222(2): push %r14
c224(7): lea 0xfffff825(%rip),%rax
c22b(2): push %r13
c22d(2): push %r12
c22f(3): mov %rdx,%r12
c232(1): push %rbp
c233(1): push %rbx
c234(3): mov %rcx,%r13
c237(3): mov %rdi,%rbp
c23a(5): mov $0x50,%edi
c23f(3): mov %rsi,%r15
c242(4): sub $0x8,%rsp
c246(3): test %rdx,%rdx
c249(3): mov %r8,%r14
c24c(4): cmove %rax,%r12
c250(7): lea 0xfffff809(%rip),%rax
c257(3): test %rcx,%rcx
c25a(4): cmove %rax,%r13
c25e(5): call 0xffff6b92(%rip)
c263(3): test %rax,%rax
c266(3): mov %rax,%rbx
c269(6): jz 0xb1(%rip)
c26f(3): test %r15,%r15
c272(4): lea 0x28(%rax),%rdi
c276(6): jz 0xba(%rip)
c27c(4): mov %r15,0x28(%rax)
c280(5): call 0xfffff940(%rip)
c285(2): test %al,%al
c287(6): jz 0x89(%rip)
c28d(5): cmp $0x0,0x10(%r15)
c292(6): jz 0xfe(%rip)
c298(3): mov %rbp,%rdi
c29b(5): call 0xfffff715(%rip)
c2a0(5): mov $0x8,%edx
c2a5(3): mov %rax,%rbp
c2a8(2): xor %ecx,%ecx
c2aa(3): mov %rdx,%rax
c2ad(3): mul %rax,%rbp,%rdx
c2b0(6): jo 0x11a(%rip)
c2b6(3): test %rax,%rax
c2b9(2): js 0x57(%rip)
c2bb(3): test %rcx,%rcx
c2be(2): jnz 0x52(%rip)
c2c0(3): test %rbp,%rbp
c2c3(4): mov %rbp,0x10(%rbx)
c2c7(2): jz 0x49(%rip)
c2c9(5): mov $0x10,%esi
c2ce(3): mov %rbp,%rdi
c2d1(5): call 0xffff69ff(%rip)
c2d6(3): test %rax,%rax
c2d9(3): mov %rax,(%rbx)
c2dc(2): jz 0x34(%rip)
c2de(4): shl/sal $0x4,%rbp
c2e2(8): mov $0x0,0x18(%rbx)
c2ea(8): mov $0x0,0x20(%rbx)
c2f2(3): add %rax,%rbp
c2f5(4): mov %r12,0x30(%rbx)
c2f9(4): mov %r13,0x38(%rbx)
c2fd(4): mov %rbp,0x8(%rbx)
c301(4): mov %r14,0x40(%rbx)
c305(8): mov $0x0,0x48(%rbx)
c30d(2): jmp 0xd(%rip)
c30f(1): nop 
c310(3): mov %rbx,%rdi
c313(2): xor %ebx,%ebx
c315(5): call 0xffff6dbb(%rip)
c31a(4): add $0x8,%rsp
c31e(3): mov %rbx,%rax
c321(1): pop %rbx
c322(1): pop %rbp
c323(2): pop %r12
c325(2): pop %r13
c327(2): pop %r14
c329(2): pop %r15
c32b(1): ret near (%rsp)
c32c(4): nop 0x0(%rax)
c330(7): lea 0xbea9(%rip),%rax
c337(4): mov %rax,0x28(%rbx)
c33b(5): call 0xfffff885(%rip)
c340(2): test %al,%al
c342(8): movss 0xbebe(%rip),%xmm1
c34a(2): jz 0xffffffc6(%rip)
c34c(3): test %rbp,%rbp
c34f(2): js 0x4c(%rip)
c351(4): pxor %xmm0,%xmm0
c355(5): cvtsi2ss %rbp,%xmm0
c35a(4): divss %xmm1,%xmm0
c35e(7): ucomiss 0xbea7(%rip),%xmm0
c365(2): jnb 0xffffffab(%rip)
c367(7): ucomiss 0xbea2(%rip),%xmm0
c36e(2): jb 0x52(%rip)
c370(8): subss 0xbe98(%rip),%xmm0
c378(a): mov $0x-9223372036854775808,%rax
c382(5): cvttss2si %xmm0,%rbp
c387(3): xor %rax,%rbp
c38a(5): jmp 0xffffff0e(%rip)
c38f(1): nop 
c390(3): test %rbp,%rbp
c393(6): movss 0x8(%r15),%xmm1
c399(2): jns 0xffffffb8(%rip)
c39b(3): mov %rbp,%rax
c39e(4): pxor %xmm0,%xmm0
c3a2(3): shr $0x1,%rax
c3a5(3): and $0x1,%ebp
c3a8(3): or %rbp,%rax
c3ab(5): cvtsi2ss %rax,%xmm0
c3b0(4): addss %xmm0,%xmm0
c3b4(2): jmp 0xffffffa6(%rip)
c3b6(a): nop 0x0(%rax,%rax,1)
c3c0(5): cvttss2si %xmm0,%rbp
c3c5(5): jmp 0xfffffed3(%rip)
c3ca(5): mov $0x1,%ecx
c3cf(5): jmp 0xfffffee7(%rip)

"hash_clear" :
c3e0(2): push %r12
c3e2(1): push %rbp
c3e3(3): mov %rdi,%rbp
c3e6(1): push %rbx
c3e7(3): mov (%rdi),%r12
c3ea(4): cmp 0x8(%rdi),%r12
c3ee(2): jnb 0x6d(%rip)
c3f0(5): cmp $0x0,(%r12)
c3f5(2): jz 0x5c(%rip)
c3f7(5): mov 0x8(%r12),%rbx
c3fc(4): mov 0x40(%rbp),%rax
c400(3): test %rbx,%rbx
c403(2): jz 0x32(%rip)
c405(3): nop (%rax)
c408(3): test %rax,%rax
c40b(2): jz 0xb(%rip)
c40d(3): mov (%rbx),%rdi
c410(2): call %rax
c412(4): mov 0x40(%rbp),%rax
c416(4): mov 0x8(%rbx),%rdx
c41a(4): mov 0x48(%rbp),%rcx
c41e(7): mov $0x0,(%rbx)
c425(3): test %rdx,%rdx
c428(4): mov %rcx,0x8(%rbx)
c42c(4): mov %rbx,0x48(%rbp)
c430(3): mov %rdx,%rbx
c433(2): jnz 0xffffffd5(%rip)
c435(3): test %rax,%rax
c438(2): jz 0x8(%rip)
c43a(4): mov (%r12),%rdi
c43e(2): call %rax
c440(8): mov $0x0,(%r12)
c448(9): mov $0x0,0x8(%r12)
c451(4): add $0x10,%r12
c455(4): cmp %r12,0x8(%rbp)
c459(2): jnbe 0xffffff97(%rip)
c45b(8): mov $0x0,0x18(%rbp)
c463(8): mov $0x0,0x20(%rbp)
c46b(1): pop %rbx
c46c(1): pop %rbp
c46d(2): pop %r12
c46f(1): ret near (%rsp)

"hash_free" :
c470(2): push %r12
c472(1): push %rbp
c473(3): mov %rdi,%r12
c476(1): push %rbx
c477(5): cmp $0x0,0x40(%rdi)
c47c(3): mov (%rdi),%rbp
c47f(4): mov 0x8(%rdi),%rax
c483(2): jz 0x50(%rip)
c485(5): cmp $0x0,0x20(%rdi)
c48a(2): jz 0x49(%rip)
c48c(3): cmp %rax,%rbp
c48f(2): jnb 0x7d(%rip)
c491(7): nop 0x0(%rax)
c498(4): mov 0x0(%rbp),%rdi
c49c(3): test %rdi,%rdi
c49f(2): jz 0x27(%rip)
c4a1(3): mov %rbp,%rbx
c4a4(2): jmp 0xf(%rip)
c4a6(a): nop 0x0(%rax,%rax,1)
c4b0(3): mov (%rbx),%rdi
c4b3(5): call 0x40(%r12)
c4b8(4): mov 0x8(%rbx),%rbx
c4bc(3): test %rbx,%rbx
c4bf(2): jnz 0xfffffff1(%rip)
c4c1(5): mov 0x8(%r12),%rax
c4c6(4): add $0x10,%rbp
c4ca(3): cmp %rbp,%rax
c4cd(2): jnbe 0xffffffcb(%rip)
c4cf(4): mov (%r12),%rbp
c4d3(3): cmp %rax,%rbp
c4d6(2): jnb 0x36(%rip)
c4d8(8): nop 0x0(%rax,%rax,1)
c4e0(4): mov 0x8(%rbp),%rdi
c4e4(3): test %rdi,%rdi
c4e7(2): jz 0x1a(%rip)
c4e9(7): nop 0x0(%rax)
c4f0(4): mov 0x8(%rdi),%rbx
c4f4(5): call 0xffff6bdc(%rip)
c4f9(3): test %rbx,%rbx
c4fc(3): mov %rbx,%rdi
c4ff(2): jnz 0xfffffff1(%rip)
c501(4): add $0x10,%rbp
c505(5): cmp %rbp,0x8(%r12)
c50a(2): jnbe 0xffffffd6(%rip)
c50c(5): mov 0x48(%r12),%rdi
c511(3): test %rdi,%rdi
c514(2): jz 0x1d(%rip)
c516(a): nop 0x0(%rax,%rax,1)
c520(4): mov 0x8(%rdi),%rbx
c524(5): call 0xffff6bac(%rip)
c529(3): test %rbx,%rbx
c52c(3): mov %rbx,%rdi
c52f(2): jnz 0xfffffff1(%rip)
c531(4): mov (%r12),%rdi
c535(5): call 0xffff6b9b(%rip)
c53a(1): pop %rbx
c53b(3): mov %r12,%rdi
c53e(1): pop %rbp
c53f(2): pop %r12
c541(5): jmp 0xffff6b8f(%rip)

"hash_rehash" :
c550(2): push %r12
c552(1): push %rbp
c553(3): mov %rdi,%rbp
c556(1): push %rbx
c557(4): sub $0x60,%rsp
c55b(4): mov 0x28(%rdi),%r12
c55f(9): mov $0x28,%rax
c568(5): mov %rax,0x58(%rsp)
c56d(2): xor %eax,%eax
c56f(6): cmp $0x0,0x10(%r12)
c575(2): jnz 0x53(%rip)
c577(3): test %rsi,%rsi
c57a(6): js 0x17e(%rip)
c580(4): pxor %xmm0,%xmm0
c584(5): cvtsi2ss %rsi,%xmm0
c589(7): divss 0x8(%r12),%xmm0
c590(7): ucomiss 0xbc75(%rip),%xmm0
c597(6): jnb 0x139(%rip)
c59d(7): ucomiss 0xbc6c(%rip),%xmm0
c5a4(6): jb 0x17c(%rip)
c5aa(8): subss 0xbc5e(%rip),%xmm0
c5b2(a): mov $0x-9223372036854775808,%rax
c5bc(5): cvttss2si %xmm0,%rsi
c5c1(3): xor %rax,%rsi
c5c4(4): nop 0x0(%rax)
c5c8(3): mov %rsi,%rdi
c5cb(5): call 0xfffff3e5(%rip)
c5d0(5): mov $0x8,%edx
c5d5(3): mov %rax,%rbx
c5d8(2): xor %ecx,%ecx
c5da(3): mov %rdx,%rax
c5dd(3): mul %rax,%rbx,%rdx
c5e0(6): jo 0x19f(%rip)
c5e6(3): test %rax,%rax
c5e9(5): mov $0x1,%eax
c5ee(4): cmovs %rax,%rcx
c5f2(3): test %rbx,%rbx
c5f5(6): jz 0xdb(%rip)
c5fb(3): and $0x1,%ecx
c5fe(6): jnz 0xd2(%rip)
c604(4): cmp %rbx,0x10(%rbp)
c608(6): jz 0x128(%rip)
c60e(5): mov $0x10,%esi
c613(3): mov %rbx,%rdi
c616(5): call 0xffff66ba(%rip)
c61b(3): test %rax,%rax
c61e(4): mov %rax,(%rsp)
c622(6): jz 0xae(%rip)
c628(5): mov %rbx,0x10(%rsp)
c62d(4): shl/sal $0x4,%rbx
c631(5): mov %r12,0x28(%rsp)
c636(3): add %rax,%rbx
c639(4): mov 0x30(%rbp),%rax
c63d(3): mov %rsp,%r12
c640(2): xor %edx,%edx
c642(3): mov %rbp,%rsi
c645(3): mov %r12,%rdi
c648(5): mov %rbx,0x8(%rsp)
c64d(9): mov $0x0,0x18(%rsp)
c656(5): mov %rax,0x30(%rsp)
c65b(4): mov 0x38(%rbp),%rax
c65f(9): mov $0x0,0x20(%rsp)
c668(5): mov %rax,0x38(%rsp)
c66d(4): mov 0x40(%rbp),%rax
c671(5): mov %rax,0x40(%rsp)
c676(4): mov 0x48(%rbp),%rax
c67a(5): mov %rax,0x48(%rsp)
c67f(5): call 0xfffff5c1(%rip)
c684(2): test %al,%al
c686(2): mov %eax,%ebx
c688(6): jnz 0xb8(%rip)
c68e(5): mov 0x48(%rsp),%rax
c693(5): mov $0x1,%edx
c698(3): mov %r12,%rsi
c69b(3): mov %rbp,%rdi
c69e(4): mov %rax,0x48(%rbp)
c6a2(5): call 0xfffff59e(%rip)
c6a7(2): test %al,%al
c6a9(6): jz 0xe0(%rip)
c6af(2): xor %edx,%edx
c6b1(3): mov %r12,%rsi
c6b4(3): mov %rbp,%rdi
c6b7(5): call 0xfffff589(%rip)
c6bc(2): test %al,%al
c6be(6): jz 0xcb(%rip)
c6c4(4): mov (%rsp),%rdi
c6c8(5): call 0xffff6a08(%rip)
c6cd(2): jmp 0x5(%rip)
c6cf(1): nop 
c6d0(2): xor %ebx,%ebx
c6d2(5): mov 0x58(%rsp),%rcx
c6d7(9): xor $0x28,%rcx
c6e0(2): mov %ebx,%eax
c6e2(6): jnz 0x98(%rip)
c6e8(4): add $0x60,%rsp
c6ec(1): pop %rbx
c6ed(1): pop %rbp
c6ee(2): pop %r12
c6f0(1): ret near (%rsp)
c6f1(7): nop 0x0(%rax)
c6f8(3): mov %rsi,%rax
c6fb(4): pxor %xmm0,%xmm0
c6ff(3): shr $0x1,%rax
c702(3): and $0x1,%esi
c705(3): or %rsi,%rax
c708(5): cvtsi2ss %rax,%xmm0
c70d(4): addss %xmm0,%xmm0
c711(5): jmp 0xfffffe78(%rip)
c716(a): nop 0x0(%rax,%rax,1)
c720(5): cvttss2si %xmm0,%rsi
c725(5): jmp 0xfffffea3(%rip)
c72a(6): nop 0x0(%rax,%rax,1)
c730(5): mov $0x1,%ebx
c735(2): jmp 0xffffff9d(%rip)
c737(9): nop 0x0(%rax,%rax,1)
c740(4): mov 0x0(%rbp),%rdi
c744(5): call 0xffff698c(%rip)
c749(4): mov (%rsp),%rax
c74d(4): mov %rax,0x0(%rbp)
c751(5): mov 0x8(%rsp),%rax
c756(4): mov %rax,0x8(%rbp)
c75a(5): mov 0x10(%rsp),%rax
c75f(4): mov %rax,0x10(%rbp)
c763(5): mov 0x18(%rsp),%rax
c768(4): mov %rax,0x18(%rbp)
c76c(5): mov 0x48(%rsp),%rax
c771(4): mov %rax,0x48(%rbp)
c775(5): jmp 0xffffff5d(%rip)
c77a(5): call 0xffff63b6(%rip)
c77f(5): mov $0x1,%ecx
c784(5): jmp 0xfffffe62(%rip)
c789(5): call 0xffff61b7(%rip)

"hash_insert_if_absent" :
c790(2): push %r13
c792(2): push %r12
c794(1): push %rbp
c795(1): push %rbx
c796(4): sub $0x18,%rsp
c79a(9): mov $0x28,%rax
c7a3(5): mov %rax,0x8(%rsp)
c7a8(2): xor %eax,%eax
c7aa(3): test %rsi,%rsi
c7ad(6): jz 0x1c0(%rip)
c7b3(3): mov %rsp,%r12
c7b6(2): xor %ecx,%ecx
c7b8(3): mov %rdx,%r13
c7bb(3): mov %r12,%rdx
c7be(3): mov %rdi,%rbx
c7c1(3): mov %rsi,%rbp
c7c4(5): call 0xfffff2dc(%rip)
c7c9(3): test %rax,%rax
c7cc(3): mov %rax,%rdx
c7cf(2): jz 0x31(%rip)
c7d1(2): xor %eax,%eax
c7d3(3): test %r13,%r13
c7d6(2): jz 0x6(%rip)
c7d8(4): mov %rdx,0x0(%r13)
c7dc(5): mov 0x8(%rsp),%rcx
c7e1(9): xor $0x28,%rcx
c7ea(6): jnz 0x225(%rip)
c7f0(4): add $0x18,%rsp
c7f4(1): pop %rbx
c7f5(1): pop %rbp
c7f6(2): pop %r12
c7f8(2): pop %r13
c7fa(1): ret near (%rsp)
c7fb(5): nop 0x0(%rax,%rax,1)
c800(4): mov 0x18(%rbx),%rax
c804(3): test %rax,%rax
c807(2): js 0x79(%rip)
c809(4): pxor %xmm1,%xmm1
c80d(4): mov 0x28(%rbx),%rdx
c811(5): cvtsi2ss %rax,%xmm1
c816(4): mov 0x10(%rbx),%rax
c81a(3): test %rax,%rax
c81d(6): js 0x8d(%rip)
c823(4): pxor %xmm0,%xmm0
c827(5): cvtsi2ss %rax,%xmm0
c82c(5): mulss 0x8(%rdx),%xmm0
c831(3): ucomiss %xmm0,%xmm1
c834(6): jnbe 0x9c(%rip)
c83a(4): mov (%rsp),%r12
c83e(5): cmp $0x0,(%r12)
c843(6): jz 0x135(%rip)
c849(4): mov 0x48(%rbx),%rax
c84d(3): test %rax,%rax
c850(6): jz 0x140(%rip)
c856(4): mov 0x8(%rax),%rdx
c85a(4): mov %rdx,0x48(%rbx)
c85e(5): mov 0x8(%r12),%rdx
c863(3): mov %rbp,(%rax)
c866(4): mov %rdx,0x8(%rax)
c86a(5): mov %rax,0x8(%r12)
c86f(5): mov $0x1,%eax
c874(5): add $0x1,0x20(%rbx)
c879(5): jmp 0xffffff63(%rip)
c87e(2): nop 
c880(3): mov %rax,%rdx
c883(4): pxor %xmm1,%xmm1
c887(3): and $0x1,%eax
c88a(3): shr $0x1,%rdx
c88d(3): or %rax,%rdx
c890(4): mov 0x10(%rbx),%rax
c894(5): cvtsi2ss %rdx,%xmm1
c899(4): mov 0x28(%rbx),%rdx
c89d(3): test %rax,%rax
c8a0(4): addss %xmm1,%xmm1
c8a4(6): jns 0xffffff7f(%rip)
c8aa(3): mov %rax,%rcx
c8ad(4): pxor %xmm0,%xmm0
c8b1(3): shr $0x1,%rcx
c8b4(3): and $0x1,%eax
c8b7(3): or %rax,%rcx
c8ba(5): cvtsi2ss %rcx,%xmm0
c8bf(4): addss %xmm0,%xmm0
c8c3(5): jmp 0xffffff69(%rip)
c8c8(8): nop 0x0(%rax,%rax,1)
c8d0(4): lea 0x28(%rbx),%rdi
c8d4(5): call 0xfffff2ec(%rip)
c8d9(4): mov 0x10(%rbx),%rax
c8dd(4): mov 0x28(%rbx),%rdx
c8e1(3): test %rax,%rax
c8e4(5): movss 0x8(%rdx),%xmm2
c8e9(6): js 0xc7(%rip)
c8ef(4): pxor %xmm0,%xmm0
c8f3(5): cvtsi2ss %rax,%xmm0
c8f8(4): mov 0x18(%rbx),%rax
c8fc(3): test %rax,%rax
c8ff(6): js 0xd1(%rip)
c905(4): pxor %xmm1,%xmm1
c909(5): cvtsi2ss %rax,%xmm1
c90e(3): movaps %xmm2,%xmm3
c911(4): mulss %xmm0,%xmm3
c915(3): ucomiss %xmm3,%xmm1
c918(6): jbe 0xffffff22(%rip)
c91e(4): cmp $0x0,0x10(%rdx)
c922(5): mulss 0xc(%rdx),%xmm0
c927(2): jnz 0x6(%rip)
c929(4): mulss %xmm2,%xmm0
c92d(7): ucomiss 0xb8d8(%rip),%xmm0
c934(2): jnb 0x6f(%rip)
c936(7): ucomiss 0xb8d3(%rip),%xmm0
c93d(6): jnb 0xb3(%rip)
c943(5): cvttss2si %xmm0,%rsi
c948(3): mov %rbx,%rdi
c94b(5): call 0xfffffc05(%rip)
c950(2): test %al,%al
c952(2): jz 0x51(%rip)
c954(2): xor %ecx,%ecx
c956(3): mov %r12,%rdx
c959(3): mov %rbp,%rsi
c95c(3): mov %rbx,%rdi
c95f(5): call 0xfffff141(%rip)
c964(3): test %rax,%rax
c967(6): jz 0xfffffed3(%rip)
c96d(5): call 0xffff5fd3(%rip)
c972(6): nop 0x0(%rax,%rax,1)
c978(4): mov %rbp,(%r12)
c97c(5): mov $0x1,%eax
c981(5): add $0x1,0x20(%rbx)
c986(5): add $0x1,0x18(%rbx)
c98b(5): jmp 0xfffffe51(%rip)
c990(5): mov $0x10,%edi
c995(5): call 0xffff645b(%rip)
c99a(3): test %rax,%rax
c99d(6): jnz 0xfffffec1(%rip)
c9a3(5): mov $0xffffffff,%eax
c9a8(5): jmp 0xfffffe34(%rip)
c9ad(3): nop (%rax)
c9b0(3): mov %rax,%rcx
c9b3(4): pxor %xmm0,%xmm0
c9b7(3): shr $0x1,%rcx
c9ba(3): and $0x1,%eax
c9bd(3): or %rax,%rcx
c9c0(5): cvtsi2ss %rcx,%xmm0
c9c5(4): addss %xmm0,%xmm0
c9c9(5): jmp 0xffffff2f(%rip)
c9ce(2): nop 
c9d0(3): mov %rax,%rcx
c9d3(4): pxor %xmm1,%xmm1
c9d7(3): shr $0x1,%rcx
c9da(3): and $0x1,%eax
c9dd(3): or %rax,%rcx
c9e0(5): cvtsi2ss %rcx,%xmm1
c9e5(4): addss %xmm1,%xmm1
c9e9(5): jmp 0xffffff25(%rip)
c9ee(2): nop 
c9f0(8): subss 0xb818(%rip),%xmm0
c9f8(a): mov $0x-9223372036854775808,%rax
ca02(5): cvttss2si %xmm0,%rsi
ca07(3): xor %rax,%rsi
ca0a(5): jmp 0xffffff3e(%rip)
ca0f(5): call 0xffff6121(%rip)

"hash_insert" :
ca20(1): push %rbx
ca21(3): mov %rsi,%rbx
ca24(4): sub $0x10,%rsp
ca28(3): mov %rsp,%rdx
ca2b(9): mov $0x28,%rax
ca34(5): mov %rax,0x8(%rsp)
ca39(2): xor %eax,%eax
ca3b(5): call 0xfffffd55(%rip)
ca40(3): cmp $0xff,%eax
ca43(2): jz 0x2d(%rip)
ca45(2): test %eax,%eax
ca47(2): jnz 0x6(%rip)
ca49(4): mov (%rsp),%rbx
ca4d(5): mov 0x8(%rsp),%rcx
ca52(9): xor $0x28,%rcx
ca5b(3): mov %rbx,%rax
ca5e(2): jnz 0x16(%rip)
ca60(4): add $0x10,%rsp
ca64(1): pop %rbx
ca65(1): ret near (%rsp)
ca66(a): nop 0x0(%rax,%rax,1)
ca70(2): xor %ebx,%ebx
ca72(2): jmp 0xffffffdb(%rip)
ca74(5): call 0xffff60bc(%rip)

"hash_delete" :
ca80(2): push %r12
ca82(1): push %rbp
ca83(5): mov $0x1,%ecx
ca88(1): push %rbx
ca89(3): mov %rdi,%rbx
ca8c(4): sub $0x10,%rsp
ca90(3): mov %rsp,%rdx
ca93(9): mov $0x28,%rax
ca9c(5): mov %rax,0x8(%rsp)
caa1(2): xor %eax,%eax
caa3(5): call 0xffffeffd(%rip)
caa8(3): test %rax,%rax
caab(3): mov %rax,%rbp
caae(2): jz 0x11(%rip)
cab0(4): mov (%rsp),%rax
cab4(5): sub $0x1,0x20(%rbx)
cab9(4): cmp $0x0,(%rax)
cabd(2): jz 0x23(%rip)
cabf(5): mov 0x8(%rsp),%rcx
cac4(9): xor $0x28,%rcx
cacd(3): mov %rbp,%rax
cad0(6): jnz 0x1ae(%rip)
cad6(4): add $0x10,%rsp
cada(1): pop %rbx
cadb(1): pop %rbp
cadc(2): pop %r12
cade(1): ret near (%rsp)
cadf(1): nop 
cae0(4): mov 0x18(%rbx),%rax
cae4(4): sub $0x1,%rax
cae8(3): test %rax,%rax
caeb(4): mov %rax,0x18(%rbx)
caef(6): js 0x101(%rip)
caf5(4): pxor %xmm0,%xmm0
caf9(5): cvtsi2ss %rax,%xmm0
cafe(4): mov 0x10(%rbx),%rax
cb02(4): mov 0x28(%rbx),%rdx
cb06(3): test %rax,%rax
cb09(6): js 0xc7(%rip)
cb0f(4): pxor %xmm1,%xmm1
cb13(5): cvtsi2ss %rax,%xmm1
cb18(4): mulss (%rdx),%xmm1
cb1c(3): ucomiss %xmm0,%xmm1
cb1f(2): jbe 0xffffffa0(%rip)
cb21(4): lea 0x28(%rbx),%rdi
cb25(5): call 0xfffff09b(%rip)
cb2a(4): mov 0x10(%rbx),%rax
cb2e(4): mov 0x28(%rbx),%rdx
cb32(3): test %rax,%rax
cb35(6): js 0x12b(%rip)
cb3b(4): pxor %xmm0,%xmm0
cb3f(5): cvtsi2ss %rax,%xmm0
cb44(4): mov 0x18(%rbx),%rax
cb48(3): test %rax,%rax
cb4b(6): js 0xf5(%rip)
cb51(4): pxor %xmm1,%xmm1
cb55(5): cvtsi2ss %rax,%xmm1
cb5a(4): movss (%rdx),%xmm2
cb5e(4): mulss %xmm0,%xmm2
cb62(3): ucomiss %xmm1,%xmm2
cb65(6): jbe 0xffffff5a(%rip)
cb6b(4): cmp $0x0,0x10(%rdx)
cb6f(5): mulss 0x4(%rdx),%xmm0
cb74(6): jz 0xbc(%rip)
cb7a(7): ucomiss 0xb68f(%rip),%xmm0
cb81(6): jnb 0x8f(%rip)
cb87(5): cvttss2si %xmm0,%rsi
cb8c(3): mov %rbx,%rdi
cb8f(5): call 0xfffff9c1(%rip)
cb94(2): test %al,%al
cb96(6): jnz 0xffffff29(%rip)
cb9c(4): mov 0x48(%rbx),%rdi
cba0(3): test %rdi,%rdi
cba3(2): jz 0x16(%rip)
cba5(3): nop (%rax)
cba8(4): mov 0x8(%rdi),%r12
cbac(5): call 0xffff6524(%rip)
cbb1(3): test %r12,%r12
cbb4(3): mov %r12,%rdi
cbb7(2): jnz 0xfffffff1(%rip)
cbb9(8): mov $0x0,0x48(%rbx)
cbc1(5): jmp 0xfffffefe(%rip)
cbc6(a): nop 0x0(%rax,%rax,1)
cbd0(3): mov %rax,%rcx
cbd3(4): pxor %xmm1,%xmm1
cbd7(3): shr $0x1,%rcx
cbda(3): and $0x1,%eax
cbdd(3): or %rax,%rcx
cbe0(5): cvtsi2ss %rcx,%xmm1
cbe5(4): addss %xmm1,%xmm1
cbe9(5): jmp 0xffffff2f(%rip)
cbee(2): nop 
cbf0(3): mov %rax,%rdx
cbf3(4): pxor %xmm0,%xmm0
cbf7(3): shr $0x1,%rdx
cbfa(3): and $0x1,%eax
cbfd(3): or %rax,%rdx
cc00(5): cvtsi2ss %rdx,%xmm0
cc05(4): addss %xmm0,%xmm0
cc09(5): jmp 0xfffffef5(%rip)
cc0e(2): nop 
cc10(8): subss 0xb5f8(%rip),%xmm0
cc18(a): mov $0x-9223372036854775808,%rax
cc22(5): cvttss2si %xmm0,%rsi
cc27(3): xor %rax,%rsi
cc2a(5): jmp 0xffffff62(%rip)
cc2f(1): nop 
cc30(5): mulss 0x8(%rdx),%xmm0
cc35(5): jmp 0xffffff45(%rip)
cc3a(6): nop 0x0(%rax,%rax,1)
cc40(3): mov %rax,%rcx
cc43(4): pxor %xmm1,%xmm1
cc47(3): shr $0x1,%rcx
cc4a(3): and $0x1,%eax
cc4d(3): or %rax,%rcx
cc50(5): cvtsi2ss %rcx,%xmm1
cc55(4): addss %xmm1,%xmm1
cc59(5): jmp 0xffffff01(%rip)
cc5e(2): nop 
cc60(3): mov %rax,%rcx
cc63(4): pxor %xmm0,%xmm0
cc67(3): shr $0x1,%rcx
cc6a(3): and $0x1,%eax
cc6d(3): or %rax,%rcx
cc70(5): cvtsi2ss %rcx,%xmm0
cc75(4): addss %xmm0,%xmm0
cc79(5): jmp 0xfffffecb(%rip)
cc7e(5): call 0xffff5eb2(%rip)

"triple_hash" :
cc90(1): push %rbp
cc91(1): push %rbx
cc92(3): mov %rdi,%rbp
cc95(3): mov %rsi,%rbx
cc98(4): sub $0x8,%rsp
cc9c(3): mov (%rdi),%rdi
cc9f(5): call 0x6301(%rip)
cca4(4): xor 0x8(%rbp),%rax
cca8(2): xor %edx,%edx
ccaa(4): add $0x8,%rsp
ccae(3): div %rbx,%rax
ccb1(1): pop %rbx
ccb2(1): pop %rbp
ccb3(3): mov %rdx,%rax
ccb6(1): ret near (%rsp)

"triple_hash_no_name" :
ccc0(4): mov 0x8(%rdi),%rax
ccc4(2): xor %edx,%edx
ccc6(3): div %rsi,%rax
ccc9(3): mov %rdx,%rax
cccc(1): ret near (%rsp)

"triple_compare" :
ccd0(2): xor %eax,%eax
ccd2(4): mov 0x8(%rsi),%rdx
ccd6(4): cmp %rdx,0x8(%rdi)
ccda(2): jz 0x6(%rip)
ccdc(2): REP ret near (%rsp)
ccde(2): nop 
cce0(4): mov 0x10(%rsi),%rcx
cce4(4): cmp %rcx,0x10(%rdi)
cce8(2): jnz 0xfffffff4(%rip)
ccea(4): sub $0x8,%rsp
ccee(3): mov (%rsi),%rsi
ccf1(3): mov (%rdi),%rdi
ccf4(5): call 0x2eec(%rip)
ccf9(4): add $0x8,%rsp
ccfd(1): ret near (%rsp)

"triple_compare_ino_str" :
cd00(2): xor %eax,%eax
cd02(4): mov 0x8(%rsi),%rdx
cd06(4): cmp %rdx,0x8(%rdi)
cd0a(2): jz 0x6(%rip)
cd0c(2): REP ret near (%rsp)
cd0e(2): nop 
cd10(4): mov 0x10(%rsi),%rcx
cd14(4): cmp %rcx,0x10(%rdi)
cd18(2): jnz 0xfffffff4(%rip)
cd1a(4): sub $0x8,%rsp
cd1e(3): mov (%rsi),%rsi
cd21(3): mov (%rdi),%rdi
cd24(5): call 0xffff5fcc(%rip)
cd29(2): test %eax,%eax
cd2b(3): setz %al
cd2e(4): add $0x8,%rsp
cd32(1): ret near (%rsp)

"triple_free" :
cd40(1): push %rbx
cd41(3): mov %rdi,%rbx
cd44(3): mov (%rdi),%rdi
cd47(5): call 0xffff6389(%rip)
cd4c(3): mov %rbx,%rdi
cd4f(1): pop %rbx
cd50(5): jmp 0xffff6380(%rip)

"mkancesdirs" :
cd60(2): push %r15
cd62(2): push %r14
cd64(3): mov %rdx,%r14
cd67(2): push %r13
cd69(2): push %r12
cd6b(3): mov %rdi,%r13
cd6e(1): push %rbp
cd6f(1): push %rbx
cd70(3): mov %rdi,%rbp
cd73(3): mov %rdi,%rbx
cd76(3): xor %r12d,%r12d
cd79(4): sub $0x28,%rsp
cd7d(5): mov %rsi,0x8(%rsp)
cd82(5): mov %rcx,0x18(%rsp)
cd87(5): mov $0x0,0x14(%rsp)
cd8c(4): nop 0x0(%rax)
cd90(4): add $0x1,%rbx
cd94(4): movzx 0xffffffff(%rbx),%edx
cd98(2): test %dl,%dl
cd9a(6): jz 0x9e(%rip)
cda0(3): movzx (%rbx),%eax
cda3(2): cmp $0x2f,%al
cda5(6): jz 0xab(%rip)
cdab(2): test %al,%al
cdad(3): setnz %al
cdb0(3): cmp $0x2f,%dl
cdb3(4): setz %r15b
cdb7(3): and %al,%r15b
cdba(2): jz 0xffffffd6(%rip)
cdbc(3): test %r12,%r12
cdbf(2): jz 0xffffffd1(%rip)
cdc1(3): mov %r12,%rax
cdc4(3): sub %rbp,%rax
cdc7(4): cmp $0x1,%rax
cdcb(6): jz 0x95(%rip)
cdd1(4): cmp $0x2,%rax
cdd5(5): mov $0x0,(%r12)
cdda(6): jz 0xcb(%rip)
cde0(5): mov 0x18(%rsp),%rdx
cde5(3): mov %rbp,%rsi
cde8(3): mov %r13,%rdi
cdeb(3): call %r14
cdee(2): test %eax,%eax
cdf0(2): js 0x80(%rip)
cdf2(5): mov %r15b,0x14(%rsp)
cdf7(5): mov $0x1,%edx
cdfc(3): xor %r15d,%r15d
cdff(5): mov 0x8(%rsp),%rdi
ce04(2): xor %ecx,%ecx
ce06(3): mov %rbp,%rsi
ce09(5): call 0x3237(%rip)
ce0e(3): cmp $0xff,%eax
ce11(2): mov %eax,%ebp
ce13(2): jz 0x75(%rip)
ce15(2): test %eax,%eax
ce17(5): mov $0x2f,(%r12)
ce1c(2): jnz 0x6c(%rip)
ce1e(3): mov %rbx,%rbp
ce21(4): add $0x1,%rbx
ce25(4): movzx 0xffffffff(%rbx),%edx
ce29(2): test %dl,%dl
ce2b(6): jnz 0xffffff75(%rip)
ce31(7): nop 0x0(%rax)
ce38(3): mov %rbp,%rax
ce3b(3): sub %r13,%rax
ce3e(4): add $0x28,%rsp
ce42(1): pop %rbx
ce43(1): pop %rbp
ce44(2): pop %r12
ce46(2): pop %r13
ce48(2): pop %r14
ce4a(2): pop %r15
ce4c(1): ret near (%rsp)
ce4d(3): nop (%rax)
ce50(3): cmp $0x2f,%dl
ce53(4): cmovne %rbx,%r12
ce57(5): jmp 0xffffff39(%rip)
ce5c(4): nop 0x0(%rax)
ce60(4): cmp $0x2e,0x0(%rbp)
ce64(2): jz 0xffffffba(%rip)
ce66(5): mov $0x0,(%r12)
ce6b(5): jmp 0xffffff75(%rip)
ce70(5): call 0xffff5ae0(%rip)
ce75(4): mov 0x14(%rsp),%edx
ce79(3): mov (%rax),%r15d
ce7c(3): and $0x1,%edx
ce7f(5): jmp 0xffffff80(%rip)
ce84(4): nop 0x0(%rax)
ce88(3): test %r15d,%r15d
ce8b(2): jz 0x15(%rip)
ce8d(5): call 0xffff5ac3(%rip)
ce92(3): cmp $0x2,(%rax)
ce95(2): jnz 0xb(%rip)
ce97(3): mov %r15d,(%rax)
ce9a(6): nop 0x0(%rax,%rax,1)
cea0(3): movsxd %ebp,%rax
cea3(2): jmp 0xffffff9b(%rip)
cea5(4): cmp $0x2e,0x0(%rbp)
cea9(6): jnz 0xffffff37(%rip)
ceaf(4): cmp $0x2e,0x1(%rbp)
ceb3(6): jnz 0xffffff2d(%rip)
ceb9(3): xor %r15d,%r15d
cebc(5): mov $0x0,0x14(%rsp)
cec1(2): xor %edx,%edx
cec3(5): jmp 0xffffff3c(%rip)

"make_dir_parents" :
ced0(2): push %r15
ced2(2): push %r14
ced4(3): mov %rcx,%r15
ced7(2): push %r13
ced9(2): push %r12
cedb(3): mov %rsi,%r14
cede(1): push %rbp
cedf(1): push %rbx
cee0(3): mov %rdx,%r13
cee3(3): mov %rdi,%rbx
cee6(3): mov %r8d,%r12d
cee9(7): sub $0xc8,%rsp
cef0(7): mov 0x118(%rsp),%eax
cef7(4): mov %eax,0x18(%rsp)
cefb(9): mov $0x28,%rax
cf04(8): mov %rax,0xb8(%rsp)
cf0c(2): xor %eax,%eax
cf0e(3): cmp $0x2f,(%rdi)
cf11(2): jz 0xb(%rip)
cf13(3): cmp $0x4,(%rsi)
cf16(6): jz 0x14a(%rip)
cf1c(3): test %r13,%r13
cf1f(6): jz 0x131(%rip)
cf25(3): mov %r15,%rcx
cf28(3): mov %r13,%rdx
cf2b(3): mov %r14,%rsi
cf2e(3): mov %rbx,%rdi
cf31(5): mov %r9,0x8(%rsp)
cf36(5): call 0xfffffe2a(%rip)
cf3b(3): test %rax,%rax
cf3e(6): js 0x2e2(%rip)
cf44(5): mov 0x8(%rsp),%r9
cf49(3): add %rbx,%rax
cf4c(4): mov %rax,(%rsp)
cf50(8): cmp $0xff,0x108(%rsp)
cf58(7): mov 0x100(%rsp),%eax
cf5f(3): mov %r12d,%esi
cf62(3): setz %cl
cf65(8): cmp $0xff,0x110(%rsp)
cf6d(3): setz %dl
cf70(5): and $0xc00,%eax
cf75(6): and $0x200,%esi
cf7b(2): or %esi,%eax
cf7d(2): and %dl,%cl
cf7f(4): mov %cl,0x1f(%rsp)
cf83(6): jnz 0x14d(%rip)
cf89(3): mov %r12d,%eax
cf8c(3): and $0xc0,%eax
cf8f(4): mov %eax,0x8(%rsp)
cf93(4): mov 0x8(%rsp),%esi
cf97(4): mov (%rsp),%rdi
cf9b(5): mov %r9,0x10(%rsp)
cfa0(5): call 0xffff5a20(%rip)
cfa5(2): test %eax,%eax
cfa7(2): mov %eax,%ebp
cfa9(5): mov 0x10(%rsp),%r9
cfae(6): jz 0x192(%rip)
cfb4(5): call 0xffff599c(%rip)
cfb9(5): cmp $0x0,0x18(%rsp)
cfbe(3): mov %rax,%r15
cfc1(2): mov (%rax),%ebp
cfc3(6): jz 0x29d(%rip)
cfc9(2): test %ebp,%ebp
cfcb(6): jz 0x151(%rip)
cfd1(3): cmp $0x2,%ebp
cfd4(4): setnz %r12b
cfd8(3): test %r13,%r13
cfdb(3): setnz %al
cfde(3): and %al,%r12b
cfe1(6): jz 0x8a(%rip)
cfe7(4): mov (%rsp),%rsi
cfeb(5): lea 0x20(%rsp),%rdx
cff0(5): mov $0x1,%edi
cff5(5): call 0xffff5ddb(%rip)
cffa(2): test %eax,%eax
cffc(6): jz 0x244(%rip)
d002(3): cmp $0x11,%ebp
d005(2): jnz 0x66(%rip)
d007(3): mov (%r15),%eax
d00a(3): cmp $0x14,%eax
d00d(2): jz 0x5e(%rip)
d00f(3): cmp $0x2,%eax
d012(2): jz 0x59(%rip)
d014(3): mov %rbx,%rdi
d017(3): xor %r12d,%r12d
d01a(5): call 0x26a6(%rip)
d01f(7): lea 0x93cf(%rip),%rsi
d026(5): mov $0x5,%edx
d02b(2): xor %edi,%edi
d02d(3): mov %rax,%rbx
d030(5): call 0xffff5aa0(%rip)
d035(3): mov (%r15),%esi
d038(3): mov %rax,%rdx
d03b(3): mov %rbx,%rcx
d03e(2): xor %edi,%edi
d040(2): xor %eax,%eax
d042(5): call 0xffff5eee(%rip)
d047(2): jmp 0x56(%rip)
d049(7): nop 0x0(%rax)
d050(4): mov %rbx,(%rsp)
d054(5): jmp 0xfffffefc(%rip)
d059(7): nop 0x0(%rax)
d060(3): mov 0x4(%rsi),%ebp
d063(2): test %ebp,%ebp
d065(6): jz 0xfffffeb7(%rip)
d06b(3): mov %rbx,%rdi
d06e(3): xor %r12d,%r12d
d071(5): call 0x264f(%rip)
d076(7): lea 0x9347(%rip),%rsi
d07d(3): mov %rax,%rbx
d080(5): mov $0x5,%edx
d085(2): xor %edi,%edi
d087(5): call 0xffff5a49(%rip)
d08c(3): mov %rbx,%rcx
d08f(3): mov %rax,%rdx
d092(2): mov %ebp,%esi
d094(2): xor %edi,%edi
d096(2): xor %eax,%eax
d098(5): call 0xffff5e98(%rip)
d09d(8): mov 0xb8(%rsp),%rdi
d0a5(9): xor $0x28,%rdi
d0ae(3): mov %r12d,%eax
d0b1(6): jnz 0x1d4(%rip)
d0b7(7): add $0xc8,%rsp
d0be(1): pop %rbx
d0bf(1): pop %rbp
d0c0(2): pop %r12
d0c2(2): pop %r13
d0c4(2): pop %r14
d0c6(2): pop %r15
d0c8(1): ret near (%rsp)
d0c9(7): nop 0x0(%rax)
d0d0(2): test %eax,%eax
d0d2(2): jnz 0x5e(%rip)
d0d4(4): mov (%rsp),%rdi
d0d8(3): mov %r12d,%esi
d0db(5): mov %r9,0x10(%rsp)
d0e0(5): call 0xffff58e0(%rip)
d0e5(2): test %eax,%eax
d0e7(2): mov %eax,%ebp
d0e9(6): jnz 0xfffffecb(%rip)
d0ef(3): mov %r12d,%eax
d0f2(3): mov %r15,%rsi
d0f5(3): mov %rbx,%rdi
d0f8(5): and $0x1ff,%eax
d0fd(7): and 0x100(%rsp),%eax
d104(5): mov 0x10(%rsp),%r9
d109(4): mov %eax,0x8(%rsp)
d10d(3): call %r9
d110(4): mov 0x8(%rsp),%esi
d114(2): test %esi,%esi
d116(6): jnz 0x174(%rip)
d11c(6): mov $0x1,%r12d
d122(5): jmp 0xffffff7b(%rip)
d127(9): nop 0x0(%rax,%rax,1)
d130(3): mov %r12d,%eax
d133(3): and $0xed,%eax
d136(4): mov %eax,0x8(%rsp)
d13a(5): jmp 0xfffffe59(%rip)
d13f(1): nop 
d140(3): mov %r15,%rsi
d143(3): mov %rbx,%rdi
d146(3): call %r9
d149(5): mov $0x3,%edx
d14e(4): mov (%rsp),%r15
d152(5): lea 0x20(%rsp),%rcx
d157(3): mov %r14,%rdi
d15a(3): mov %r15,%rsi
d15d(5): call 0x2ee3(%rip)
d162(3): cmp $0xff,%eax
d165(2): jl 0xffffffb7(%rip)
d167(2): test %eax,%eax
d169(7): lea 0xacf3(%rip),%rax
d170(3): mov %r12d,%r9d
d173(4): cmovne %r15,%rax
d177(4): sub $0x8,%rsp
d17b(7): mov 0x108(%rsp),%edx
d182(3): mov %rax,%rsi
d185(1): push %rdx
d186(8): mov 0x120(%rsp),%r8d
d18e(7): mov 0x118(%rsp),%ecx
d195(4): mov 0x18(%rsp),%edx
d199(4): mov 0x30(%rsp),%edi
d19d(5): call 0x5e83(%rip)
d1a2(2): test %eax,%eax
d1a4(1): pop %rdx
d1a5(1): pop %rcx
d1a6(6): jz 0xffffff76(%rip)
d1ac(2): test %ebp,%ebp
d1ae(6): jz 0xca(%rip)
d1b4(3): cmp $0x2,%ebp
d1b7(6): jz 0xfffffeb4(%rip)
d1bd(3): test %r13,%r13
d1c0(6): jz 0xfffffeab(%rip)
d1c6(5): call 0xffff578a(%rip)
d1cb(3): cmp $0x14,(%rax)
d1ce(3): mov %rax,%r12
d1d1(6): jz 0xfffffe9a(%rip)
d1d7(3): mov %rbx,%rdi
d1da(5): call 0x24e6(%rip)
d1df(5): cmp $0x0,0x1f(%rsp)
d1e4(3): mov %rax,%rbx
d1e7(7): lea 0xb032(%rip),%rsi
d1ee(7): lea 0x94bb(%rip),%rax
d1f5(5): mov $0x5,%edx
d1fa(4): cmovne %rax,%rsi
d1fe(2): xor %edi,%edi
d200(5): call 0xffff58d0(%rip)
d205(4): mov (%r12),%esi
d209(3): mov %rax,%rdx
d20c(3): mov %rbx,%rcx
d20f(2): xor %edi,%edi
d211(2): xor %eax,%eax
d213(3): xor %r12d,%r12d
d216(5): call 0xffff5d1a(%rip)
d21b(5): jmp 0xfffffe82(%rip)
d220(4): cmp $0xffffffff,%rax
d224(6): jnz 0xfffffef8(%rip)
d22a(5): call 0xffff5726(%rip)
d22f(2): mov (%rax),%ebp
d231(5): jmp 0xfffffe3a(%rip)
d236(a): nop 0x0(%rax,%rax,1)
d240(4): mov 0x38(%rsp),%eax
d244(5): and $0xf000,%eax
d249(5): cmp $0x4000,%eax
d24e(6): jnz 0xfffffe1d(%rip)
d254(5): jmp 0xfffffe49(%rip)
d259(7): nop 0x0(%rax)
d260(8): mov $0xffffffff,0x8(%rsp)
d268(5): mov $0x2,%edx
d26d(5): jmp 0xfffffee1(%rip)
d272(6): nop 0x0(%rax,%rax,1)
d278(5): call 0xffff56d8(%rip)
d27d(3): mov %rax,%r12
d280(5): jmp 0xffffff57(%rip)
d285(5): call 0xffff58ab(%rip)
d28a(5): mov %r12d,0x8(%rsp)
d28f(5): mov $0x3,%edx
d294(5): jmp 0xfffffeba(%rip)

"mode_compile" :
d2a0(1): push %rbp
d2a1(1): push %rbx
d2a2(3): mov %rdi,%rbx
d2a5(4): sub $0x8,%rsp
d2a9(3): movsx (%rdi),%eax
d2ac(3): lea 0xffffffd0(%rax),%edx
d2af(3): cmp $0x7,%dl
d2b2(6): jbe 0xb6(%rip)
d2b8(2): test %al,%al
d2ba(3): mov %rdi,%rcx
d2bd(5): mov $0x1,%edi
d2c2(2): jz 0x29(%rip)
d2c4(4): nop 0x0(%rax)
d2c8(2): mov %eax,%edx
d2ca(3): and $0xef,%edx
d2cd(3): cmp $0x2d,%dl
d2d0(3): setz %dl
d2d3(2): cmp $0x2b,%al
d2d5(3): setz %al
d2d8(4): add $0x1,%rcx
d2dc(2): or %edx,%eax
d2de(3): movzx %al,%eax
d2e1(3): add %rax,%rdi
d2e4(3): movzx (%rcx),%eax
d2e7(2): test %al,%al
d2e9(2): jnz 0xffffffdf(%rip)
d2eb(5): mov $0x10,%edx
d2f0(2): xor %ecx,%ecx
d2f2(3): mov %rdx,%rax
d2f5(3): mul %rax,%rdi,%rdx
d2f8(6): jo 0x317(%rip)
d2fe(3): test %rax,%rax
d301(6): js 0x318(%rip)
d307(3): test %rcx,%rcx
d30a(6): jnz 0x30f(%rip)
d310(4): shl/sal $0x4,%rdi
d314(7): lea 0xaf31(%rip),%rbp
d31b(5): call 0x4cf5(%rip)
d320(2): xor %esi,%esi
d322(3): xor %r11d,%r11d
d325(4): movzx (%rbx),%r9d
d329(4): cmp $0x61,%r9b
d32d(6): jz 0x253(%rip)
d333(2): jle 0x6d(%rip)
d335(4): cmp $0x6f,%r9b
d339(6): jz 0x277(%rip)
d33f(4): cmp $0x75,%r9b
d343(6): jz 0x25d(%rip)
d349(4): cmp $0x67,%r9b
d34d(6): jz 0x243(%rip)
d353(3): mov %rax,%rdi
d356(5): call 0xffff5d7a(%rip)
d35b(2): xor %eax,%eax
d35d(4): add $0x8,%rsp
d361(1): pop %rbx
d362(1): pop %rbp
d363(1): ret near (%rsp)
d364(4): nop 0x0(%rax)
d368(3): mov %rdi,%rdx
d36b(2): xor %ebp,%ebp
d36d(2): jmp 0x12(%rip)
d36f(1): nop 
d370(3): movsx (%rdx),%eax
d373(3): lea 0xffffffd0(%rax),%ecx
d376(3): cmp $0x7,%cl
d379(6): jnbe 0x247(%rip)
d37f(4): lea 0xffffffd0(%rax,%rbp,8),%ebp
d383(4): add $0x1,%rdx
d387(6): cmp $0xfff,%ebp
d38d(2): jbe 0xffffffe3(%rip)
d38f(4): add $0x8,%rsp
d393(2): xor %eax,%eax
d395(1): pop %rbx
d396(1): pop %rbp
d397(1): ret near (%rsp)
d398(8): nop 0x0(%rax,%rax,1)
d3a0(4): cmp $0x2d,%r9b
d3a4(2): jz 0xe(%rip)
d3a6(4): cmp $0x3d,%r9b
d3aa(2): jz 0x8(%rip)
d3ac(4): cmp $0x2b,%r9b
d3b0(2): jnz 0xffffffa3(%rip)
d3b2(4): lea 0x1(%rsi),%rdi
d3b6(4): shl/sal $0x4,%rsi
d3ba(3): add %rax,%rsi
d3bd(2): jmp 0x67(%rip)
d3bf(1): nop 
d3c0(3): cmp $0x6f,%dl
d3c3(4): lea 0x2(%rbx),%r8
d3c7(6): jz 0x199(%rip)
d3cd(3): cmp $0x75,%dl
d3d0(6): mov $0x1c0,%r10d
d3d6(6): jnz 0xda(%rip)
d3dc(3): mov %r9b,(%rsi)
d3df(4): mov $0x3,0x1(%rsi)
d3e3(5): movzx 0x2(%rbx),%r9d
d3e8(4): mov %r11d,0x4(%rsi)
d3ec(3): mov %r8,%rbx
d3ef(4): mov %r10d,0x8(%rsi)
d3f3(3): mov %r10d,%edx
d3f6(3): and %r11d,%edx
d3f9(3): test %r11d,%r11d
d3fc(4): cmovne %edx,%r10d
d400(3): mov %r9d,%edx
d403(4): mov %r10d,0xc(%rsi)
d407(4): add $0x10,%rsi
d40b(3): and $0xef,%edx
d40e(4): lea 0x1(%rdi),%rcx
d412(3): cmp $0x2d,%dl
d415(2): jz 0xc(%rip)
d417(4): cmp $0x2b,%r9b
d41b(6): jnz 0x205(%rip)
d421(3): mov %rcx,%rdi
d424(4): movsx 0x1(%rbx),%edx
d428(4): lea 0x1(%rbx),%rcx
d42c(3): cmp $0x67,%dl
d42f(6): jz 0x141(%rip)
d435(2): jnle 0xffffff8b(%rip)
d437(4): lea 0xffffffd0(%rdx),%r8d
d43b(4): cmp $0x7,%r8b
d43f(2): jnbe 0x71(%rip)
d441(3): xor %r8d,%r8d
d444(4): nop 0x0(%rax)
d448(5): lea 0xffffffd0(%rdx,%r8,8),%r8d
d44d(4): add $0x1,%rcx
d451(7): cmp $0xfff,%r8d
d458(6): jnbe 0xfffffefb(%rip)
d45e(3): movsx (%rcx),%edx
d461(4): lea 0xffffffd0(%rdx),%r10d
d465(4): cmp $0x7,%r10b
d469(2): jbe 0xffffffdf(%rip)
d46b(3): test %r11d,%r11d
d46e(6): jnz 0xfffffee5(%rip)
d474(2): test %dl,%dl
d476(2): jz 0xb(%rip)
d478(3): cmp $0x2c,%dl
d47b(6): jnz 0xfffffed8(%rip)
d481(3): mov %r9b,(%rsi)
d484(4): mov $0x1,0x1(%rsi)
d488(3): mov %edx,%r9d
d48b(7): mov $0xfff,0x4(%rsi)
d492(4): mov %r8d,0x8(%rsi)
d496(3): mov %rcx,%rbx
d499(6): mov $0xfff,%r11d
d49f(6): mov $0xfff,%r10d
d4a5(5): jmp 0xffffff5b(%rip)
d4aa(6): nop 0x0(%rax,%rax,1)
d4b0(4): lea 0xffffffa8(%rdx),%r8d
d4b4(3): xor %r10d,%r10d
d4b7(5): mov $0x1,%ebx
d4bc(4): cmp $0x20,%r8b
d4c0(2): jnbe 0x39(%rip)
d4c2(6): nop 0x0(%rax,%rax,1)
d4c8(4): movzx %r8b,%r8d
d4cc(5): movsxd 0x0(%rbp,%r8,4),%r8
d4d1(3): add %rbp,%r8
d4d4(3): jmp %r8
d4d7(9): nop 0x0(%rax,%rax,1)
d4e0(5): mov $0x2,%ebx
d4e5(3): nop (%rax)
d4e8(4): add $0x1,%rcx
d4ec(3): movzx (%rcx),%edx
d4ef(4): lea 0xffffffa8(%rdx),%r8d
d4f3(4): cmp $0x20,%r8b
d4f7(2): jbe 0xffffffd1(%rip)
d4f9(3): mov %r9b,(%rsi)
d4fc(3): mov %bl,0x1(%rsi)
d4ff(3): mov %edx,%r9d
d502(4): mov %r11d,0x4(%rsi)
d506(4): mov %r10d,0x8(%rsi)
d50a(3): mov %rcx,%rbx
d50d(5): jmp 0xfffffee6(%rip)
d512(6): nop 0x0(%rax,%rax,1)
d518(4): or $0x49,%r10d
d51c(2): jmp 0xffffffcc(%rip)
d51e(2): nop 
d520(4): or $0x92,%r10b
d524(2): jmp 0xffffffc4(%rip)
d526(a): nop 0x0(%rax,%rax,1)
d530(7): or $0x200,%r10d
d537(2): jmp 0xffffffb1(%rip)
d539(7): nop 0x0(%rax)
d540(7): or $0xc00,%r10d
d547(2): jmp 0xffffffa1(%rip)
d549(7): nop 0x0(%rax)
d550(7): or $0x124,%r10d
d557(2): jmp 0xffffff91(%rip)
d559(7): nop 0x0(%rax)
d560(6): mov $0x7,%r10d
d566(5): jmp 0xfffffe76(%rip)
d56b(5): nop 0x0(%rax,%rax,1)
d570(4): lea 0x2(%rbx),%r8
d574(6): mov $0x38,%r10d
d57a(5): jmp 0xfffffe62(%rip)
d57f(1): nop 
d580(6): mov $0xfff,%r11d
d586(4): add $0x1,%rbx
d58a(5): jmp 0xfffffd9b(%rip)
d58f(1): nop 
d590(7): or $0x438,%r11d
d597(2): jmp 0xffffffef(%rip)
d599(7): nop 0x0(%rax)
d5a0(7): or $0x9c0,%r11d
d5a7(2): jmp 0xffffffdf(%rip)
d5a9(7): nop 0x0(%rax)
d5b0(7): or $0x207,%r11d
d5b7(2): jmp 0xffffffcf(%rip)
d5b9(7): nop 0x0(%rax)
d5c0(2): test %al,%al
d5c2(6): jnz 0xfffffdcd(%rip)
d5c8(3): sub %rbx,%rdx
d5cb(2): mov %ebp,%ebx
d5cd(5): mov $0xfff,%eax
d5d2(6): and $0xc00,%ebx
d5d8(5): mov $0x20,%edi
d5dd(6): or $0x3ff,%ebx
d5e3(4): cmp $0x5,%rdx
d5e7(3): cmovnl %eax,%ebx
d5ea(5): call 0x4a26(%rip)
d5ef(5): mov $0x13d,%edx
d5f4(7): mov $0xfff,0x4(%rax)
d5fb(3): mov %ebp,0x8(%rax)
d5fe(3): mov %dx,(%rax)
d601(3): mov %ebx,0xc(%rax)
d604(4): mov $0x0,0x11(%rax)
d608(4): add $0x8,%rsp
d60c(1): pop %rbx
d60d(1): pop %rbp
d60e(1): ret near (%rsp)
d60f(5): mov $0x1,%ecx
d614(5): jmp 0xfffffcea(%rip)
d619(5): call 0x4c47(%rip)
d61e(2): nop 
d620(4): cmp $0x2c,%r9b
d624(2): jnz 0xe(%rip)
d626(4): add $0x1,%rbx
d62a(3): mov %rdi,%rsi
d62d(5): jmp 0xfffffcf5(%rip)
d632(3): test %r9b,%r9b
d635(6): jnz 0xfffffd1e(%rip)
d63b(4): shl/sal $0x4,%rdi
d63f(5): mov $0x0,0x1(%rax,%rdi,1)
d644(5): jmp 0xfffffd19(%rip)

"mode_create_from_ref" :
d650(1): push %rbx
d651(3): mov %rdi,%rsi
d654(5): mov $0x1,%edi
d659(7): sub $0xa0,%rsp
d660(3): mov %rsp,%rdx
d663(9): mov $0x28,%rax
d66c(8): mov %rax,0x98(%rsp)
d674(2): xor %eax,%eax
d676(5): call 0xffff575a(%rip)
d67b(2): test %eax,%eax
d67d(2): jnz 0x53(%rip)
d67f(4): mov 0x18(%rsp),%ebx
d683(5): mov $0x20,%edi
d688(5): call 0x4988(%rip)
d68d(5): mov $0x13d,%edx
d692(7): mov $0xfff,0x4(%rax)
d699(7): mov $0xfff,0xc(%rax)
d6a0(3): mov %dx,(%rax)
d6a3(3): mov %ebx,0x8(%rax)
d6a6(4): mov $0x0,0x11(%rax)
d6aa(8): mov 0x98(%rsp),%rcx
d6b2(9): xor $0x28,%rcx
d6bb(2): jnz 0x19(%rip)
d6bd(7): add $0xa0,%rsp
d6c4(1): pop %rbx
d6c5(1): ret near (%rsp)
d6c6(a): nop 0x0(%rax,%rax,1)
d6d0(2): xor %eax,%eax
d6d2(2): jmp 0xffffffd8(%rip)
d6d4(5): call 0xffff545c(%rip)

"mode_adjust" :
d6e0(5): movzx 0x1(%rcx),%r10d
d6e5(2): mov %edi,%eax
d6e7(5): and $0xfff,%eax
d6ec(3): test %r10b,%r10b
d6ef(6): jz 0x151(%rip)
d6f5(4): cmp $0x1,%sil
d6f9(2): push %r12
d6fb(1): push %rbp
d6fc(1): push %rbx
d6fd(2): sbb %ebx,%ebx
d6ff(4): movzx %sil,%ebp
d703(2): not %ebx
d705(3): xor %r11d,%r11d
d708(6): and $0xc00,%ebx
d70e(2): jmp 0x3c(%rip)
d710(3): mov %r9d,%edi
d713(2): or %edx,%edi
d715(2): not %edi
d717(2): and %edi,%esi
d719(4): cmp $0x2d,%r12b
d71d(6): jz 0x113(%rip)
d723(4): cmp $0x3d,%r12b
d727(6): jz 0xb4(%rip)
d72d(4): cmp $0x2b,%r12b
d731(2): jnz 0x7(%rip)
d733(3): or %esi,%r11d
d736(2): or %esi,%eax
d738(4): add $0x10,%rcx
d73c(5): movzx 0x1(%rcx),%r10d
d741(3): test %r10b,%r10b
d744(6): jz 0xb8(%rip)
d74a(4): mov 0xc(%rcx),%r9d
d74e(3): mov 0x4(%rcx),%edi
d751(3): mov 0x8(%rcx),%esi
d754(3): not %r9d
d757(3): and %ebx,%r9d
d75a(4): cmp $0x2,%r10b
d75e(6): jz 0xb2(%rip)
d764(4): cmp $0x3,%r10b
d768(2): jnz 0x40(%rip)
d76a(2): and %eax,%esi
d76c(3): mov %esi,%r10d
d76f(7): and $0x124,%r10d
d776(4): cmp $0x1,%r10d
d77a(3): sbb %r10d,%r10d
d77d(3): not %r10d
d780(7): and $0x124,%r10d
d787(3): mov %r10d,%r12d
d78a(4): or $0x92,%r12b
d78e(4): test $0x92,%sil
d792(4): cmovne %r12d,%r10d
d796(3): mov %r10d,%r12d
d799(4): or $0x49,%r12d
d79d(4): test $0x49,%sil
d7a1(4): cmovne %r12d,%r10d
d7a5(3): or %r10d,%esi
d7a8(3): mov %r9d,%r10d
d7ab(2): test %edi,%edi
d7ad(4): movzx (%rcx),%r12d
d7b1(3): not %r10d
d7b4(6): jz 0xffffff5c(%rip)
d7ba(3): and %edi,%r10d
d7bd(3): and %r10d,%esi
d7c0(4): cmp $0x2d,%r12b
d7c4(2): jz 0x6c(%rip)
d7c6(4): cmp $0x3d,%r12b
d7ca(6): jnz 0xffffff63(%rip)
d7d0(2): not %edi
d7d2(3): or %edi,%r9d
d7d5(3): mov %r9d,%r10d
d7d8(3): not %r10d
d7db(7): and $0xfff,%r10d
d7e2(4): add $0x10,%rcx
d7e6(3): and %r9d,%eax
d7e9(3): or %r10d,%r11d
d7ec(5): movzx 0x1(%rcx),%r10d
d7f1(2): or %esi,%eax
d7f3(3): test %r10b,%r10b
d7f6(6): jnz 0xffffff54(%rip)
d7fc(3): test %r8,%r8
d7ff(2): jz 0x5(%rip)
d801(3): mov %r11d,(%r8)
d804(1): pop %rbx
d805(1): pop %rbp
d806(2): pop %r12
d808(1): ret near (%rsp)
d809(7): nop 0x0(%rax)
d810(3): mov %eax,%r12d
d813(3): mov %esi,%r10d
d816(4): and $0x49,%r12d
d81a(4): or $0x49,%r10d
d81e(3): or %ebp,%r12d
d821(4): cmovne %r10d,%esi
d825(2): jmp 0xffffff83(%rip)
d827(9): nop 0x0(%rax,%rax,1)
d830(3): or %esi,%r11d
d833(2): not %esi
d835(2): and %esi,%eax
d837(5): jmp 0xffffff01(%rip)
d83c(4): nop 0x0(%rax)
d840(3): xor %r11d,%r11d
d843(3): test %r8,%r8
d846(2): jz 0x5(%rip)
d848(3): mov %r11d,(%r8)
d84b(2): REP ret near (%rsp)

"opendirat" :
d850(2): push %r13
d852(2): push %r12
d854(6): or $0x90900,%edx
d85a(1): push %rbp
d85b(1): push %rbx
d85c(2): xor %eax,%eax
d85e(3): mov %rcx,%r12
d861(4): sub $0x8,%rsp
d865(5): call 0x59db(%rip)
d86a(2): test %eax,%eax
d86c(2): js 0x54(%rip)
d86e(2): mov %eax,%edi
d870(2): mov %eax,%ebx
d872(5): call 0xffff573e(%rip)
d877(3): test %rax,%rax
d87a(3): mov %rax,%rbp
d87d(2): jz 0x1b(%rip)
d87f(4): mov %ebx,(%r12)
d883(4): add $0x8,%rsp
d887(3): mov %rbp,%rax
d88a(1): pop %rbx
d88b(1): pop %rbp
d88c(2): pop %r12
d88e(2): pop %r13
d890(1): ret near (%rsp)
d891(7): nop 0x0(%rax)
d898(5): call 0xffff50b8(%rip)
d89d(3): mov (%rax),%r13d
d8a0(3): mov %rax,%r12
d8a3(2): mov %ebx,%edi
d8a5(5): call 0xffff538b(%rip)
d8aa(3): mov %rbp,%rax
d8ad(4): mov %r13d,(%r12)
d8b1(4): add $0x8,%rsp
d8b5(1): pop %rbx
d8b6(1): pop %rbp
d8b7(2): pop %r12
d8b9(2): pop %r13
d8bb(1): ret near (%rsp)
d8bc(4): nop 0x0(%rax)
d8c0(4): add $0x8,%rsp
d8c4(2): xor %ebp,%ebp
d8c6(1): pop %rbx
d8c7(3): mov %rbp,%rax
d8ca(1): pop %rbp
d8cb(2): pop %r12
d8cd(2): pop %r13
d8cf(1): ret near (%rsp)

"set_program_name" :
d8d0(3): test %rdi,%rdi
d8d3(1): push %rbx
d8d4(2): jz 0x79(%rip)
d8d6(5): mov $0x2f,%esi
d8db(3): mov %rdi,%rbx
d8de(5): call 0xffff52c2(%rip)
d8e3(3): test %rax,%rax
d8e6(2): jz 0x57(%rip)
d8e8(4): lea 0x1(%rax),%r8
d8ec(3): mov %r8,%rdx
d8ef(3): sub %rbx,%rdx
d8f2(4): cmp $0x6,%rdx
d8f6(2): jle 0x47(%rip)
d8f8(4): lea 0xfffffffa(%rax),%rsi
d8fc(7): lea 0xaa05(%rip),%rdi
d903(5): mov $0x7,%ecx
d908(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d90a(3): setnbe %dl
d90d(3): sbb $0x0,%dl
d910(2): test %dl,%dl
d912(2): jnz 0x2b(%rip)
d914(7): lea 0xa9f5(%rip),%rdi
d91b(5): mov $0x3,%ecx
d920(3): mov %r8,%rsi
d923(3): mov %r8,%rbx
d926(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
d928(3): setnbe %dl
d92b(3): sbb $0x0,%dl
d92e(2): test %dl,%dl
d930(2): jnz 0xd(%rip)
d932(4): lea 0x4(%rax),%rbx
d936(7): mov %rbx,0x20f7a3(%rip)
d93d(7): mov %rbx,0x211c7c(%rip)
d944(7): mov %rbx,0x20f7bd(%rip)
d94b(1): pop %rbx
d94c(1): ret near (%rsp)
d94d(7): mov 0x20f7cc(%rip),%rcx
d954(7): lea 0xa975(%rip),%rdi
d95b(5): mov $0x37,%edx
d960(5): mov $0x1,%esi
d965(5): call 0xffff56db(%rip)
d96a(5): call 0xffff4fd6(%rip)

"qcopy_acl" :
d970(2): push %r12
d972(1): push %rbp
d973(3): mov %ecx,%r12d
d976(1): push %rbx
d977(3): mov %rdx,%rbp
d97a(3): mov %r8d,%edx
d97d(4): sub $0x10,%rsp
d981(5): lea 0x4(%rsp),%rbx
d986(9): mov $0x28,%rax
d98f(5): mov %rax,0x8(%rsp)
d994(2): xor %eax,%eax
d996(3): mov %rbx,%rcx
d999(5): call 0x5037(%rip)
d99e(2): test %eax,%eax
d9a0(2): jnz 0x38(%rip)
d9a2(3): mov %rbp,%rsi
d9a5(3): mov %rbx,%rdi
d9a8(3): mov %r12d,%edx
d9ab(5): call 0x5055(%rip)
d9b0(3): mov %rbx,%rdi
d9b3(2): mov %eax,%ebp
d9b5(5): call 0x500b(%rip)
d9ba(5): mov 0x8(%rsp),%rcx
d9bf(9): xor $0x28,%rcx
d9c8(2): mov %ebp,%eax
d9ca(2): jnz 0x15(%rip)
d9cc(4): add $0x10,%rsp
d9d0(1): pop %rbx
d9d1(1): pop %rbp
d9d2(2): pop %r12
d9d4(1): ret near (%rsp)
d9d5(3): nop (%rax)
d9d8(5): mov $0xfffffffe,%ebp
d9dd(2): jmp 0xffffffdd(%rip)
d9df(5): call 0xffff5151(%rip)

"qset_acl" :
d9f0(1): push %rbp
d9f1(1): push %rbx
d9f2(4): sub $0x18,%rsp
d9f6(5): lea 0x4(%rsp),%rbx
d9fb(4): mov %edx,0x4(%rsp)
d9ff(2): mov %esi,%edx
da01(3): mov %rdi,%rsi
da04(3): mov %rbx,%rdi
da07(9): mov $0x28,%rax
da10(5): mov %rax,0x8(%rsp)
da15(2): xor %eax,%eax
da17(5): call 0x4fe9(%rip)
da1c(3): mov %rbx,%rdi
da1f(2): mov %eax,%ebp
da21(5): call 0x4f9f(%rip)
da26(5): mov 0x8(%rsp),%rcx
da2b(9): xor $0x28,%rcx
da34(2): jnz 0xb(%rip)
da36(4): add $0x18,%rsp
da3a(2): mov %ebp,%eax
da3c(1): pop %rbx
da3d(1): pop %rbp
da3e(1): ret near (%rsp)
da3f(5): call 0xffff50f1(%rip)

"gettext_quote.part.1" :
da50(1): push %rbp
da51(1): push %rbx
da52(3): mov %rdi,%rbp
da55(2): mov %esi,%ebx
da57(4): sub $0x8,%rsp
da5b(5): call 0x5585(%rip)
da60(3): movzx (%rax),%edx
da63(3): and $0xdf,%edx
da66(3): cmp $0x55,%dl
da69(2): jz 0x77(%rip)
da6b(3): cmp $0x47,%dl
da6e(2): jz 0x22(%rip)
da70(7): lea 0xa8ac(%rip),%rax
da77(7): lea 0xa8a7(%rip),%rdx
da7e(3): cmp $0x9,%ebx
da81(4): cmovne %rdx,%rax
da85(4): add $0x8,%rsp
da89(1): pop %rbx
da8a(1): pop %rbp
da8b(1): ret near (%rsp)
da8c(4): nop 0x0(%rax)
da90(4): movzx 0x1(%rax),%edx
da94(3): and $0xdf,%edx
da97(3): cmp $0x42,%dl
da9a(2): jnz 0xffffffd6(%rip)
da9c(4): cmp $0x31,0x2(%rax)
daa0(2): jnz 0xffffffd0(%rip)
daa2(4): cmp $0x38,0x3(%rax)
daa6(2): jnz 0xffffffca(%rip)
daa8(4): cmp $0x30,0x4(%rax)
daac(2): jnz 0xffffffc4(%rip)
daae(4): cmp $0x33,0x5(%rax)
dab2(2): jnz 0xffffffbe(%rip)
dab4(4): cmp $0x30,0x6(%rax)
dab8(2): jnz 0xffffffb8(%rip)
daba(4): cmp $0x0,0x7(%rax)
dabe(2): jnz 0xffffffb2(%rip)
dac0(4): cmp $0x60,0x0(%rbp)
dac4(7): lea 0xa851(%rip),%rax
dacb(7): lea 0xa84e(%rip),%rdx
dad2(4): cmovne %rdx,%rax
dad6(4): add $0x8,%rsp
dada(1): pop %rbx
dadb(1): pop %rbp
dadc(1): ret near (%rsp)
dadd(3): nop (%rax)
dae0(4): movzx 0x1(%rax),%edx
dae4(3): and $0xdf,%edx
dae7(3): cmp $0x54,%dl
daea(2): jnz 0xffffff86(%rip)
daec(4): movzx 0x2(%rax),%edx
daf0(3): and $0xdf,%edx
daf3(3): cmp $0x46,%dl
daf6(6): jnz 0xffffff7a(%rip)
dafc(4): cmp $0x2d,0x3(%rax)
db00(6): jnz 0xffffff70(%rip)
db06(4): cmp $0x38,0x4(%rax)
db0a(6): jnz 0xffffff66(%rip)
db10(4): cmp $0x0,0x5(%rax)
db14(6): jnz 0xffffff5c(%rip)
db1a(4): cmp $0x60,0x0(%rbp)
db1e(7): lea 0xa7ef(%rip),%rax
db25(7): lea 0xa7ec(%rip),%rdx
db2c(4): cmovne %rdx,%rax
db30(4): add $0x8,%rsp
db34(1): pop %rbx
db35(1): pop %rbp
db36(1): ret near (%rsp)

"quotearg_buffer_restyled" :
db40(2): push %r15
db42(2): push %r14
db44(3): mov %r8d,%r15d
db47(2): push %r13
db49(2): push %r12
db4b(3): mov %rdi,%r14
db4e(1): push %rbp
db4f(1): push %rbx
db50(3): mov %r9d,%ebx
db53(3): mov %rsi,%r13
db56(3): mov %rcx,%rbp
db59(3): and $0x2,%ebx
db5c(7): sub $0xb8,%rsp
db63(8): mov 0xf0(%rsp),%rax
db6b(5): mov %rdx,0x10(%rsp)
db70(5): mov %r8d,0x8(%rsp)
db75(5): mov %r9d,0x78(%rsp)
db7a(5): mov %rax,0x20(%rsp)
db7f(8): mov 0xf8(%rsp),%rax
db87(5): mov %rax,0x68(%rsp)
db8c(8): mov 0x100(%rsp),%rax
db94(5): mov %rax,0x60(%rsp)
db99(9): mov $0x28,%rax
dba2(8): mov %rax,0xa8(%rsp)
dbaa(2): xor %eax,%eax
dbac(5): call 0xffff4f34(%rip)
dbb1(4): cmp $0xa,%r15d
dbb5(5): mov %rax,0x58(%rsp)
dbba(6): jnbe 0x11b5(%rip)
dbc0(7): lea 0xa7b9(%rip),%rcx
dbc7(3): mov %r15d,%edx
dbca(4): movsxd 0x0(%rcx,%rdx,4),%rax
dbce(3): add %rcx,%rax
dbd1(2): jmp %rax
dbd3(5): mov $0x1,0xe(%rsp)
dbd8(5): mov $0x0,0x7c(%rsp)
dbdd(3): xor %r12d,%r12d
dbe0(9): mov $0x0,0x50(%rsp)
dbe9(5): mov $0x1,0xf(%rsp)
dbee(5): mov $0x0,0xd(%rsp)
dbf3(7): lea 0xa72b(%rip),%rax
dbfa(9): mov $0x1,0x18(%rsp)
dc03(3): xor %r15d,%r15d
dc06(8): mov $0x2,0x8(%rsp)
dc0e(5): mov %rax,0x48(%rsp)
dc13(3): xor %r11d,%r11d
dc16(3): mov %rbp,%rax
dc19(3): mov %r12d,%r8d
dc1c(3): mov %r11,%rbp
dc1f(3): mov %rax,%r11
dc22(6): nop 0x0(%rax,%rax,1)
dc28(3): cmp %rbp,%r11
dc2b(4): setnz %r12b
dc2f(4): cmp $0xffffffff,%r11
dc33(2): jnz 0xf(%rip)
dc35(5): mov 0x10(%rsp),%rax
dc3a(4): cmp $0x0,0x0(%rax,%rbp,1)
dc3e(4): setnz %r12b
dc42(3): test %r12b,%r12b
dc45(6): jz 0x65b(%rip)
dc4b(5): cmp $0x2,0x8(%rsp)
dc50(5): mov 0x10(%rsp),%rdi
dc55(4): lea 0x0(%rdi,%rbp,1),%r9
dc59(3): setnz %al
dc5c(4): and 0xd(%rsp),%al
dc60(3): mov %eax,%r10d
dc63(6): jz 0xad(%rip)
dc69(5): mov 0x18(%rsp),%rax
dc6e(3): test %rax,%rax
dc71(6): jz 0x42f(%rip)
dc77(4): cmp $0xffffffff,%r11
dc7b(5): lea 0x0(%rbp,%rax,1),%rbx
dc80(2): jnz 0x30(%rip)
dc82(4): cmp $0x1,%rax
dc86(2): jbe 0x2a(%rip)
dc88(5): mov %r8b,0x38(%rsp)
dc8d(5): mov %r10b,0x30(%rsp)
dc92(5): mov %r9,0x28(%rsp)
dc97(5): call 0xffff4e59(%rip)
dc9c(6): movzx 0x38(%rsp),%r8d
dca2(6): movzx 0x30(%rsp),%r10d
dca8(3): mov %rax,%r11
dcab(5): mov 0x28(%rsp),%r9
dcb0(3): cmp %r11,%rbx
dcb3(5): mov %r10b,0x28(%rsp)
dcb8(6): jnbe 0x5b8(%rip)
dcbe(5): mov 0x18(%rsp),%rdx
dcc3(5): mov 0x48(%rsp),%rsi
dcc8(3): mov %r9,%rdi
dccb(5): mov %r11,0x40(%rsp)
dcd0(5): mov %r8b,0x38(%rsp)
dcd5(5): mov %r9,0x30(%rsp)
dcda(5): call 0xffff4fb6(%rip)
dcdf(2): test %eax,%eax
dce1(5): mov 0x30(%rsp),%r9
dce6(6): movzx 0x38(%rsp),%r8d
dcec(5): mov 0x40(%rsp),%r11
dcf1(6): jnz 0x57f(%rip)
dcf7(5): cmp $0x0,0xf(%rsp)
dcfc(6): movzx 0x28(%rsp),%r10d
dd02(6): jnz 0xf83(%rip)
dd08(8): nop 0x0(%rax,%rax,1)
dd10(4): movzx (%r9),%ebx
dd14(3): cmp $0x7e,%bl
dd17(6): jnbe 0x321(%rip)
dd1d(7): lea 0xa688(%rip),%rcx
dd24(3): movzx %bl,%edx
dd27(4): movsxd 0x0(%rcx,%rdx,4),%rax
dd2b(3): add %rcx,%rax
dd2e(2): jmp %rax
dd30(3): xor %r10d,%r10d
dd33(4): cmp $0x1,%r11
dd37(3): setnz %al
dd3a(4): cmp $0xffffffff,%r11
dd3e(2): jnz 0xe(%rip)
dd40(5): mov 0x10(%rsp),%rax
dd45(4): cmp $0x0,0x1(%rax)
dd49(3): setnz %al
dd4c(5): cmp $0x2,0x8(%rsp)
dd51(3): setz %dl
dd54(2): test %al,%al
dd56(6): jz 0x252(%rip)
dd5c(3): xor %r12d,%r12d
dd5f(2): xor %eax,%eax
dd61(7): nop 0x0(%rax)
dd68(5): cmp $0x1,0xd(%rsp)
dd6d(6): jnz 0x115(%rip)
dd73(2): test %dl,%dl
dd75(6): jnz 0x10d(%rip)
dd7b(5): mov 0x20(%rsp),%rsi
dd80(3): test %rsi,%rsi
dd83(2): jz 0x16(%rip)
dd85(2): mov %ebx,%edx
dd87(3): shr $0x5,%dl
dd8a(3): movzx %dl,%edx
dd8d(3): mov 0x0(%rsi,%rdx,4),%edx
dd90(3): bt %ebx,%edx
dd93(6): jb 0x150(%rip)
dd99(3): test %r10b,%r10b
dd9c(6): jnz 0x147(%rip)
dda2(3): xor $0x1,%eax
dda5(4): add $0x1,%rbp
dda9(3): and %r8d,%eax
ddac(2): test %al,%al
ddae(2): jz 0x22(%rip)
ddb0(3): cmp %r15,%r13
ddb3(2): jbe 0x7(%rip)
ddb5(5): mov $0x27,0x0(%r14,%r15,1)
ddba(4): lea 0x1(%r15),%rax
ddbe(3): cmp %rax,%r13
ddc1(2): jbe 0x8(%rip)
ddc3(6): mov $0x27,0x1(%r14,%r15,1)
ddc9(4): add $0x2,%r15
ddcd(3): xor %r8d,%r8d
ddd0(3): cmp %r13,%r15
ddd3(2): jnb 0x6(%rip)
ddd5(4): mov %bl,0x0(%r14,%r15,1)
ddd9(5): movzx 0xe(%rsp),%edi
ddde(4): add $0x1,%r15
dde2(5): mov $0x0,%eax
dde7(3): test %r12b,%r12b
ddea(3): cmove %eax,%edi
dded(5): mov %dil,0xe(%rsp)
ddf2(5): jmp 0xfffffe36(%rip)
ddf7(9): nop 0x0(%rax,%rax,1)
de00(3): xor %r10d,%r10d
de03(4): mov 0x8(%rsp),%eax
de07(3): cmp $0x2,%eax
de0a(6): jz 0x5be(%rip)
de10(3): cmp $0x5,%eax
de13(6): jz 0x575(%rip)
de19(3): cmp $0x2,%eax
de1c(5): mov $0x3f,%ebx
de21(3): setz %dl
de24(3): xor %r12d,%r12d
de27(2): xor %eax,%eax
de29(5): jmp 0xffffff3f(%rip)
de2e(2): nop 
de30(3): xor %r10d,%r10d
de33(5): cmp $0x2,0x8(%rsp)
de38(6): jz 0x508(%rip)
de3e(5): mov %r12b,0x7c(%rsp)
de43(2): xor %edx,%edx
de45(2): xor %eax,%eax
de47(5): mov $0x27,%ebx
de4c(5): jmp 0xffffff1c(%rip)
de51(7): nop 0x0(%rax)
de58(5): mov $0x9,%edx
de5d(5): mov $0x74,%ebx
de62(5): cmp $0x2,0x8(%rsp)
de67(3): setz %al
de6a(4): and 0xf(%rsp),%al
de6e(6): jnz 0x150(%rip)
de74(5): cmp $0x0,0xd(%rsp)
de79(2): jnz 0x67(%rip)
de7b(2): mov %edx,%ebx
de7d(3): xor %r12d,%r12d
de80(2): xor %eax,%eax
de82(5): cmp $0x0,0xf(%rsp)
de87(6): jnz 0xfffffef4(%rip)
de8d(5): jmp 0xffffff0c(%rip)
de92(6): nop 0x0(%rax,%rax,1)
de98(5): mov $0x8,%edx
de9d(5): mov $0x62,%ebx
dea2(2): jmp 0xffffffd2(%rip)
dea4(4): nop 0x0(%rax)
dea8(5): cmp $0x2,0x8(%rsp)
dead(6): jz 0x3d3(%rip)
deb3(5): cmp $0x0,0xd(%rsp)
deb8(6): jz 0x218(%rip)
debe(5): cmp $0x0,0xf(%rsp)
dec3(6): jz 0x20d(%rip)
dec9(6): cmp $0x0,0x18(%rsp)
decf(6): jnz 0x3bc(%rip)
ded5(5): mov $0x5c,%ebx
deda(6): nop 0x0(%rax,%rax,1)
dee0(3): xor %r12d,%r12d
dee3(5): cmp $0x2,0x8(%rsp)
dee8(3): setz %dl
deeb(5): cmp $0x0,0xf(%rsp)
def0(2): mov %edx,%eax
def2(6): jnz 0x856(%rip)
def8(3): mov %r8d,%eax
defb(3): xor $0x1,%eax
defe(2): and %dl,%al
df00(2): jz 0x31(%rip)
df02(3): cmp %r15,%r13
df05(2): jbe 0x7(%rip)
df07(5): mov $0x27,0x0(%r14,%r15,1)
df0c(4): lea 0x1(%r15),%rdx
df10(3): cmp %rdx,%r13
df13(2): jbe 0x8(%rip)
df15(6): mov $0x24,0x1(%r14,%r15,1)
df1b(4): lea 0x2(%r15),%rdx
df1f(3): cmp %rdx,%r13
df22(2): jbe 0x8(%rip)
df24(6): mov $0x27,0x2(%r14,%r15,1)
df2a(4): add $0x3,%r15
df2e(3): mov %eax,%r8d
df31(3): cmp %r15,%r13
df34(2): jbe 0x7(%rip)
df36(5): mov $0x5c,0x0(%r14,%r15,1)
df3b(4): add $0x1,%r15
df3f(4): add $0x1,%rbp
df43(5): jmp 0xfffffe8d(%rip)
df48(8): nop 0x0(%rax,%rax,1)
df50(5): cmp $0x0,0xd(%rsp)
df55(6): jnz 0x1ce(%rip)
df5b(2): xor %edx,%edx
df5d(5): test $0x1,0x78(%rsp)
df62(6): jz 0xffffff19(%rip)
df68(4): add $0x1,%rbp
df6c(5): jmp 0xfffffcbc(%rip)
df71(7): nop 0x0(%rax)
df78(5): cmp $0x2,0x8(%rsp)
df7d(3): setz %dl
df80(2): xor %eax,%eax
df82(5): jmp 0xfffffde6(%rip)
df87(9): nop 0x0(%rax,%rax,1)
df90(5): mov $0x7,%edx
df95(5): mov $0x61,%ebx
df9a(5): jmp 0xfffffeda(%rip)
df9f(1): nop 
dfa0(5): cmp $0x2,0x8(%rsp)
dfa5(3): setz %dl
dfa8(3): test %rbp,%rbp
dfab(6): jnz 0xfffffdb1(%rip)
dfb1(5): movzx 0xf(%rsp),%eax
dfb6(2): and %dl,%al
dfb8(6): jz 0xfffffdb0(%rip)
dfbe(3): mov %r11,%rbp
dfc1(8): mov $0x2,0x8(%rsp)
dfc9(5): jmp 0x700(%rip)
dfce(2): nop 
dfd0(5): cmp $0x2,0x8(%rsp)
dfd5(3): setz %dl
dfd8(3): xor %r12d,%r12d
dfdb(2): jmp 0xffffffd6(%rip)
dfdd(3): nop (%rax)
dfe0(5): cmp $0x2,0x8(%rsp)
dfe5(5): mov $0x20,%ebx
dfea(3): setz %dl
dfed(2): jmp 0xffffffc4(%rip)
dfef(1): nop 
dff0(5): mov $0xd,%edx
dff5(5): mov $0x72,%ebx
dffa(5): jmp 0xfffffe68(%rip)
dfff(1): nop 
e000(5): mov $0xc,%edx
e005(5): mov $0x66,%ebx
e00a(5): jmp 0xfffffe6a(%rip)
e00f(1): nop 
e010(5): mov $0xb,%edx
e015(5): mov $0x76,%ebx
e01a(5): jmp 0xfffffe5a(%rip)
e01f(1): nop 
e020(5): mov $0xa,%edx
e025(5): mov $0x6e,%ebx
e02a(5): jmp 0xfffffe38(%rip)
e02f(1): nop 
e030(3): xor %r10d,%r10d
e033(5): nop 0x0(%rax,%rax,1)
e038(6): cmp $0x1,0x58(%rsp)
e03e(6): jnz 0x3aa(%rip)
e044(5): mov %r11,0x38(%rsp)
e049(5): mov %r8b,0x30(%rsp)
e04e(5): mov %r10b,0x28(%rsp)
e053(5): call 0xffff506d(%rip)
e058(3): mov (%rax),%rcx
e05b(3): movzx %bl,%edx
e05e(6): movzx 0x28(%rsp),%r10d
e064(6): movzx 0x30(%rsp),%r8d
e06a(5): mov 0x38(%rsp),%r11
e06f(5): mov $0x1,%edi
e074(4): movzx 0x0(%rcx,%rdx,2),%eax
e078(4): and $0x4000,%ax
e07c(4): setnz %r12b
e080(3): setz %al
e083(4): and 0xd(%rsp),%al
e087(2): test %al,%al
e089(6): jnz 0x998(%rip)
e08f(5): cmp $0x2,0x8(%rsp)
e094(3): setz %dl
e097(5): jmp 0xfffffcd1(%rip)
e09c(4): nop 0x0(%rax)
e0a0(4): movzx (%r9),%ebx
e0a4(3): cmp $0x7e,%bl
e0a7(2): jnbe 0xffffff89(%rip)
e0a9(7): lea 0xa4f8(%rip),%rcx
e0b0(3): movzx %bl,%edx
e0b3(4): movsxd 0x0(%rcx,%rdx,4),%rax
e0b7(3): add %rcx,%rax
e0ba(2): jmp %rax
e0bc(4): nop 0x0(%rax)
e0c0(3): xor %r10d,%r10d
e0c3(5): cmp $0x0,0xd(%rsp)
e0c8(6): jnz 0xfffffdf6(%rip)
e0ce(2): nop 
e0d0(5): mov $0x5c,%edx
e0d5(5): mov $0x5c,%ebx
e0da(5): jmp 0xfffffd9a(%rip)
e0df(1): nop 
e0e0(5): mov $0xc,%edx
e0e5(3): xor %r10d,%r10d
e0e8(5): mov $0x66,%ebx
e0ed(5): jmp 0xfffffd87(%rip)
e0f2(6): nop 0x0(%rax,%rax,1)
e0f8(5): mov $0xa,%edx
e0fd(3): xor %r10d,%r10d
e100(5): mov $0x6e,%ebx
e105(5): jmp 0xfffffd5d(%rip)
e10a(6): nop 0x0(%rax,%rax,1)
e110(5): mov $0x61,%ebx
e115(5): jmp 0xfffffdcb(%rip)
e11a(6): nop 0x0(%rax,%rax,1)
e120(3): xor %r10d,%r10d
e123(5): cmp $0x2,0x8(%rsp)
e128(3): setz %dl
e12b(5): cmp $0x0,0xf(%rsp)
e130(6): jnz 0xb9a(%rip)
e136(3): mov %r8d,%eax
e139(3): mov %r15,%rcx
e13c(3): xor $0x1,%eax
e13f(2): and %dl,%al
e141(2): jz 0x2f(%rip)
e143(3): cmp %r15,%r13
e146(2): jbe 0x7(%rip)
e148(5): mov $0x27,0x0(%r14,%r15,1)
e14d(4): lea 0x1(%r15),%rcx
e151(3): cmp %rcx,%r13
e154(2): jbe 0x8(%rip)
e156(6): mov $0x24,0x1(%r14,%r15,1)
e15c(4): lea 0x2(%r15),%rcx
e160(3): cmp %rcx,%r13
e163(6): jnbe 0x636(%rip)
e169(4): lea 0x3(%r15),%rcx
e16d(3): mov %eax,%r8d
e170(3): cmp %rcx,%r13
e173(2): jbe 0x7(%rip)
e175(5): mov $0x5c,0x0(%r14,%rcx,1)
e17a(5): cmp $0x2,0x8(%rsp)
e17f(4): lea 0x1(%rcx),%r15
e183(6): jz 0x606(%rip)
e189(4): lea 0x1(%rbp),%rax
e18d(3): cmp %r11,%rax
e190(2): jnb 0x1b(%rip)
e192(5): mov 0x10(%rsp),%rax
e197(5): movzx 0x1(%rax,%rbp,1),%eax
e19c(4): mov %al,0x28(%rsp)
e1a0(3): sub $0x30,%eax
e1a3(2): cmp $0x9,%al
e1a5(6): jbe 0x834(%rip)
e1ab(3): mov %r12d,%eax
e1ae(5): mov $0x30,%ebx
e1b3(3): xor %r12d,%r12d
e1b6(5): jmp 0xfffffbb2(%rip)
e1bb(5): nop 0x0(%rax,%rax,1)
e1c0(5): cmp $0x2,0x8(%rsp)
e1c5(3): mov %r10d,%r12d
e1c8(3): setz %dl
e1cb(3): xor %r10d,%r10d
e1ce(2): xor %eax,%eax
e1d0(5): jmp 0xfffffb98(%rip)
e1d5(3): nop (%rax)
e1d8(5): cmp $0x2,0x8(%rsp)
e1dd(3): setz %dl
e1e0(3): xor %r10d,%r10d
e1e3(5): jmp 0xfffffdc5(%rip)
e1e8(8): nop 0x0(%rax,%rax,1)
e1f0(5): cmp $0x2,0x8(%rsp)
e1f5(3): setz %dl
e1f8(3): xor %r10d,%r10d
e1fb(3): xor %r12d,%r12d
e1fe(5): jmp 0xfffffdb3(%rip)
e203(5): nop 0x0(%rax,%rax,1)
e208(5): cmp $0x2,0x8(%rsp)
e20d(3): mov %r10d,%r12d
e210(5): mov $0x20,%ebx
e215(3): setz %dl
e218(3): xor %r10d,%r10d
e21b(5): jmp 0xfffffd96(%rip)
e220(5): mov $0xd,%edx
e225(3): xor %r10d,%r10d
e228(5): mov $0x72,%ebx
e22d(5): jmp 0xfffffc35(%rip)
e232(6): nop 0x0(%rax,%rax,1)
e238(5): mov $0x76,%ebx
e23d(5): jmp 0xfffffca3(%rip)
e242(6): nop 0x0(%rax,%rax,1)
e248(5): mov $0x9,%edx
e24d(3): xor %r10d,%r10d
e250(5): mov $0x74,%ebx
e255(5): jmp 0xfffffc0d(%rip)
e25a(6): nop 0x0(%rax,%rax,1)
e260(5): mov $0x62,%ebx
e265(5): jmp 0xfffffc7b(%rip)
e26a(6): nop 0x0(%rax,%rax,1)
e270(3): xor %r10d,%r10d
e273(5): jmp 0xfffffa9d(%rip)
e278(8): nop 0x0(%rax,%rax,1)
e280(5): cmp $0x0,0xf(%rsp)
e285(6): jnz 0x96b(%rip)
e28b(4): add $0x1,%rbp
e28f(3): mov %r8d,%eax
e292(3): xor %r12d,%r12d
e295(5): mov $0x5c,%ebx
e29a(5): jmp 0xfffffb12(%rip)
e29f(1): nop 
e2a0(5): cmp $0x2,0x8(%rsp)
e2a5(5): movzx 0xf(%rsp),%ebx
e2aa(3): mov %r8d,%r12d
e2ad(3): mov %r11,%rbp
e2b0(3): setz %dl
e2b3(2): mov %ebx,%eax
e2b5(3): test %r15,%r15
e2b8(3): setz %cl
e2bb(2): and %edx,%eax
e2bd(2): and %cl,%al
e2bf(6): jnz 0xa67(%rip)
e2c5(2): mov %ebx,%eax
e2c7(3): xor $0x1,%eax
e2ca(2): and %al,%dl
e2cc(6): jz 0x970(%rip)
e2d2(5): cmp $0x0,0x7c(%rsp)
e2d7(6): jz 0x963(%rip)
e2dd(5): cmp $0x0,0xe(%rsp)
e2e2(6): jnz 0x9fb(%rip)
e2e8(3): test %r13,%r13
e2eb(3): setz %al
e2ee(6): cmp $0x0,0x50(%rsp)
e2f4(3): setnz %dl
e2f7(2): and %dl,%al
e2f9(6): jz 0xa23(%rip)
e2ff(5): mov 0x50(%rsp),%r13
e304(7): lea 0xa01a(%rip),%rbx
e30b(4): mov $0x27,(%r14)
e30f(8): mov $0x2,0x8(%rsp)
e317(6): mov $0x1,%r15d
e31d(9): mov $0x1,0x18(%rsp)
e326(5): mov $0x0,0xf(%rsp)
e32b(5): mov %rbx,0x48(%rsp)
e330(4): mov %al,0x7c(%rsp)
e334(5): jmp 0xfffff8df(%rip)
e339(7): nop 0x0(%rax)
e340(5): cmp $0x0,0xf(%rsp)
e345(6): jnz 0x8ab(%rip)
e34b(3): test %r13,%r13
e34e(6): jz 0x402(%rip)
e354(2): xor %edx,%edx
e356(6): cmp $0x0,0x50(%rsp)
e35c(6): jnz 0x3f4(%rip)
e362(5): mov %r13,0x50(%rsp)
e367(4): add $0x3,%r15
e36b(2): xor %eax,%eax
e36d(5): mov %r12b,0x7c(%rsp)
e372(3): xor %r8d,%r8d
e375(3): mov %rdx,%r13
e378(5): mov $0x27,%ebx
e37d(5): jmp 0xfffffa1c(%rip)
e382(6): nop 0x0(%rax,%rax,1)
e388(5): test $0x4,0x78(%rsp)
e38d(2): jz 0x23(%rip)
e38f(4): lea 0x2(%rbp),%rcx
e393(3): cmp %r11,%rcx
e396(2): jnb 0x1a(%rip)
e398(5): mov 0x10(%rsp),%rax
e39d(5): cmp $0x3f,0x1(%rax,%rbp,1)
e3a2(6): jz 0x790(%rip)
e3a8(8): nop 0x0(%rax,%rax,1)
e3b0(2): xor %edx,%edx
e3b2(3): xor %r12d,%r12d
e3b5(2): xor %eax,%eax
e3b7(5): mov $0x3f,%ebx
e3bc(5): jmp 0xfffff9ac(%rip)
e3c1(7): nop 0x0(%rax)
e3c8(5): cmp $0x0,0xf(%rsp)
e3cd(6): jnz 0x823(%rip)
e3d3(3): xor %r12d,%r12d
e3d6(2): xor %eax,%eax
e3d8(5): mov $0x3f,%ebx
e3dd(5): jmp 0xfffff9bc(%rip)
e3e2(6): nop 0x0(%rax,%rax,1)
e3e8(8): lea 0xa0(%rsp),%rax
e3f0(4): cmp $0xffffffff,%r11
e3f4(c): mov $0x0,0xa0(%rsp)
e400(5): mov %rax,0x28(%rsp)
e405(2): jnz 0x2f(%rip)
e407(5): mov 0x10(%rsp),%rdi
e40c(5): mov %r8b,0x40(%rsp)
e411(5): mov %r10b,0x38(%rsp)
e416(5): mov %r9,0x30(%rsp)
e41b(5): call 0xffff46d5(%rip)
e420(6): movzx 0x40(%rsp),%r8d
e426(6): movzx 0x38(%rsp),%r10d
e42c(3): mov %rax,%r11
e42f(5): mov 0x30(%rsp),%r9
e434(8): lea 0x9c(%rsp),%rax
e43c(2): xor %ecx,%ecx
e43e(4): mov %bl,0x7e(%rsp)
e442(5): mov %r8b,0x7d(%rsp)
e447(3): mov %rcx,%rbx
e44a(8): mov %r9,0x88(%rsp)
e452(5): mov %rax,0x38(%rsp)
e457(5): mov %r10b,0x7f(%rsp)
e45c(8): mov %r15,0x80(%rsp)
e464(5): mov %r14,0x40(%rsp)
e469(5): mov %r13,0x70(%rsp)
e46e(5): mov %r11,0x30(%rsp)
e473(5): mov 0x10(%rsp),%rax
e478(5): lea 0x0(%rbp,%rbx,1),%r14
e47d(5): mov 0x30(%rsp),%rdx
e482(5): mov 0x28(%rsp),%rcx
e487(5): mov 0x38(%rsp),%rdi
e48c(4): lea 0x0(%rax,%r14,1),%r13
e490(3): sub %r14,%rdx
e493(3): mov %r13,%rsi
e496(5): call 0x439a(%rip)
e49b(3): test %rax,%rax
e49e(3): mov %rax,%r15
e4a1(2): jz 0x50(%rip)
e4a3(4): cmp $0xffffffff,%rax
e4a7(6): jz 0x61e(%rip)
e4ad(4): cmp $0xfffffffe,%rax
e4b1(6): jz 0x5a0(%rip)
e4b7(5): cmp $0x2,0x8(%rsp)
e4bc(3): setz %al
e4bf(4): and 0xf(%rsp),%al
e4c3(6): jnz 0x19d(%rip)
e4c9(7): mov 0x9c(%rsp),%edi
e4d0(5): call 0xffff4bc0(%rip)
e4d5(5): mov 0x28(%rsp),%rdi
e4da(2): test %eax,%eax
e4dc(5): mov $0x0,%eax
e4e1(4): cmove %eax,%r12d
e4e5(3): add %r15,%rbx
e4e8(5): call 0xffff4b78(%rip)
e4ed(2): test %eax,%eax
e4ef(2): jz 0xffffff84(%rip)
e4f1(3): mov %r12d,%edx
e4f4(3): mov %rbx,%rdi
e4f7(6): movzx 0x7d(%rsp),%r8d
e4fd(3): xor $0x1,%edx
e500(5): movzx 0x7e(%rsp),%ebx
e505(6): movzx 0x7f(%rsp),%r10d
e50b(4): and 0xd(%rsp),%dl
e50f(8): mov 0x80(%rsp),%r15
e517(5): mov 0x40(%rsp),%r14
e51c(5): mov 0x70(%rsp),%r13
e521(5): mov 0x30(%rsp),%r11
e526(4): cmp $0x1,%rdi
e52a(6): jbe 0x601(%rip)
e530(3): mov %rdi,%rcx
e533(2): xor %esi,%esi
e535(6): movzx 0xf(%rsp),%r9d
e53b(3): add %rbp,%rcx
e53e(5): mov 0x10(%rsp),%rdi
e543(5): jmp 0xbb(%rip)
e548(8): nop 0x0(%rax,%rax,1)
e550(5): cmp $0x2,0x8(%rsp)
e555(3): setz %al
e558(3): test %r9b,%r9b
e55b(6): jnz 0x4b5(%rip)
e561(3): mov %r8d,%esi
e564(3): xor $0x1,%esi
e567(3): and %sil,%al
e56a(2): jz 0x31(%rip)
e56c(3): cmp %r15,%r13
e56f(2): jbe 0x7(%rip)
e571(5): mov $0x27,0x0(%r14,%r15,1)
e576(4): lea 0x1(%r15),%rsi
e57a(3): cmp %rsi,%r13
e57d(2): jbe 0x8(%rip)
e57f(6): mov $0x24,0x1(%r14,%r15,1)
e585(4): lea 0x2(%r15),%rsi
e589(3): cmp %rsi,%r13
e58c(2): jbe 0x8(%rip)
e58e(6): mov $0x27,0x2(%r14,%r15,1)
e594(4): add $0x3,%r15
e598(3): mov %eax,%r8d
e59b(3): cmp %r15,%r13
e59e(2): jbe 0x7(%rip)
e5a0(5): mov $0x5c,0x0(%r14,%r15,1)
e5a5(4): lea 0x1(%r15),%rax
e5a9(3): cmp %rax,%r13
e5ac(2): jbe 0xf(%rip)
e5ae(2): mov %ebx,%eax
e5b0(3): shr $0x6,%al
e5b3(3): add $0x30,%eax
e5b6(5): mov %al,0x1(%r14,%r15,1)
e5bb(4): lea 0x2(%r15),%rax
e5bf(3): cmp %rax,%r13
e5c2(2): jbe 0x12(%rip)
e5c4(2): mov %ebx,%eax
e5c6(3): shr $0x3,%al
e5c9(3): and $0x7,%eax
e5cc(3): add $0x30,%eax
e5cf(5): mov %al,0x2(%r14,%r15,1)
e5d4(3): and $0x7,%ebx
e5d7(4): add $0x1,%rbp
e5db(4): add $0x3,%r15
e5df(3): add $0x30,%ebx
e5e2(3): cmp %rcx,%rbp
e5e5(6): jnb 0xfffff7eb(%rip)
e5eb(2): mov %edx,%esi
e5ed(3): cmp %r15,%r13
e5f0(2): jbe 0x6(%rip)
e5f2(4): mov %bl,0x0(%r14,%r15,1)
e5f6(4): movzx 0x0(%rdi,%rbp,1),%ebx
e5fa(4): add $0x1,%r15
e5fe(2): test %dl,%dl
e600(6): jnz 0xffffff50(%rip)
e606(2): mov %esi,%eax
e608(3): xor $0x1,%eax
e60b(3): and %r8d,%eax
e60e(3): test %r10b,%r10b
e611(2): jz 0x10(%rip)
e613(3): cmp %r15,%r13
e616(2): jbe 0x7(%rip)
e618(5): mov $0x5c,0x0(%r14,%r15,1)
e61d(4): add $0x1,%r15
e621(4): add $0x1,%rbp
e625(3): cmp %rcx,%rbp
e628(6): jnb 0xfffff784(%rip)
e62e(2): test %al,%al
e630(6): jz 0x3fe(%rip)
e636(3): cmp %r15,%r13
e639(2): jbe 0x7(%rip)
e63b(5): mov $0x27,0x0(%r14,%r15,1)
e640(4): lea 0x1(%r15),%rax
e644(3): cmp %rax,%r13
e647(2): jbe 0x8(%rip)
e649(6): mov $0x27,0x1(%r14,%r15,1)
e64f(4): add $0x2,%r15
e653(3): xor %r10d,%r10d
e656(3): xor %r8d,%r8d
e659(2): jmp 0xffffff94(%rip)
e65b(5): nop 0x0(%rax,%rax,1)
e660(4): cmp $0x1,%r15
e664(6): jz 0xfffffe65(%rip)
e66a(5): mov 0x10(%rsp),%rdi
e66f(4): lea 0x0(%rdi,%r15,1),%rcx
e673(5): lea 0x1(%rdi,%r14,1),%rdx
e678(4): lea 0x0(%rcx,%r14,1),%r8
e67c(2): jmp 0x11(%rip)
e67e(2): nop 
e680(4): add $0x1,%rdx
e684(3): cmp %rdx,%r8
e687(6): jz 0xfffffe42(%rip)
e68d(3): movzx (%rdx),%ecx
e690(3): sub $0x5b,%ecx
e693(3): cmp $0x21,%cl
e696(2): jnbe 0xffffffea(%rip)
e698(5): mov $0x1,%esi
e69d(3): shl/sal %cl,%rsi
e6a0(3): mov %rsi,%rcx
e6a3(a): mov $0x8589934635,%rsi
e6ad(3): test %rsi,%rcx
e6b0(2): jz 0xffffffd0(%rip)
e6b2(5): mov 0x40(%rsp),%r14
e6b7(5): mov 0x70(%rsp),%r13
e6bc(5): mov 0x30(%rsp),%rbp
e6c1(8): mov $0x2,0x8(%rsp)
e6c9(5): cmp $0x0,0xd(%rsp)
e6ce(2): jz 0x12(%rip)
e6d0(2): test %al,%al
e6d2(5): mov $0x4,%eax
e6d7(5): cmove 0x8(%rsp),%eax
e6dc(4): mov %eax,0x8(%rsp)
e6e0(4): sub $0x8,%rsp
e6e4(3): mov %rbp,%rcx
e6e7(3): mov %r13,%rsi
e6ea(4): push 0x68(%rsp)
e6ee(4): push 0x78(%rsp)
e6f2(3): mov %r14,%rdi
e6f5(2): push $0x0
e6f7(8): mov 0x98(%rsp),%r9d
e6ff(5): mov 0x28(%rsp),%r8d
e704(5): mov 0x30(%rsp),%rdx
e709(4): and $0xfd,%r9d
e70d(5): call 0xfffff433(%rip)
e712(4): add $0x20,%rsp
e716(3): mov %rax,%r15
e719(8): mov 0xa8(%rsp),%rbx
e721(9): xor $0x28,%rbx
e72a(3): mov %r15,%rax
e72d(6): jnz 0x606(%rip)
e733(7): add $0xb8,%rsp
e73a(1): pop %rbx
e73b(1): pop %rbp
e73c(2): pop %r12
e73e(2): pop %r13
e740(2): pop %r14
e742(2): pop %r15
e744(1): ret near (%rsp)
e745(3): nop (%rax)
e748(3): mov %r11,%rbp
e74b(5): jmp 0xffffff7e(%rip)
e750(3): cmp %r15,%r13
e753(2): jbe 0x7(%rip)
e755(5): mov $0x27,0x0(%r14,%r15,1)
e75a(4): lea 0x1(%r15),%rax
e75e(3): cmp %rax,%r13
e761(2): jbe 0x8(%rip)
e763(6): mov $0x5c,0x1(%r14,%r15,1)
e769(4): lea 0x2(%r15),%rax
e76d(3): cmp %rax,%r13
e770(6): jbe 0x5f2(%rip)
e776(3): mov %r13,%rdx
e779(6): mov $0x27,0x2(%r14,%r15,1)
e77f(5): mov 0x50(%rsp),%r13
e784(5): jmp 0xfffffbde(%rip)
e789(3): mov %r12d,%eax
e78c(5): mov $0x30,%ebx
e791(3): xor %r12d,%r12d
e794(5): jmp 0xfffff605(%rip)
e799(6): mov $0x27,0x2(%r14,%r15,1)
e79f(5): jmp 0xfffff9ca(%rip)
e7a4(2): test %ebx,%ebx
e7a6(6): jnz 0xfffff42d(%rip)
e7ac(5): mov $0x1,0xd(%rsp)
e7b1(3): test %r13,%r13
e7b4(6): jnz 0x596(%rip)
e7ba(7): lea 0x9b64(%rip),%rax
e7c1(9): mov $0x0,0x50(%rsp)
e7ca(5): mov $0x1,0xe(%rsp)
e7cf(5): mov $0x0,0x7c(%rsp)
e7d4(3): xor %r12d,%r12d
e7d7(5): mov $0x0,0xf(%rsp)
e7dc(9): mov $0x1,0x18(%rsp)
e7e5(5): mov %rax,0x48(%rsp)
e7ea(6): mov $0x1,%r15d
e7f0(8): mov $0x2,0x8(%rsp)
e7f8(5): jmp 0xfffff41b(%rip)
e7fd(3): nop (%rax)
e800(2): test %ebx,%ebx
e802(6): jnz 0x3fb(%rip)
e808(3): test %r13,%r13
e80b(6): jz 0x22b(%rip)
e811(4): mov $0x22,(%r14)
e815(5): mov $0x1,0xe(%rsp)
e81a(3): xor %r12d,%r12d
e81d(5): mov $0x0,0x7c(%rsp)
e822(9): mov $0x0,0x50(%rsp)
e82b(7): lea 0x9af1(%rip),%rax
e832(5): mov $0x0,0xf(%rsp)
e837(5): mov $0x1,0xd(%rsp)
e83c(9): mov $0x1,0x18(%rsp)
e845(6): mov $0x1,%r15d
e84b(5): mov %rax,0x48(%rsp)
e850(5): jmp 0xfffff3c3(%rip)
e855(7): lea 0x9ac7(%rip),%rax
e85c(5): mov $0x1,0xe(%rsp)
e861(5): mov $0x0,0x7c(%rsp)
e866(3): xor %r12d,%r12d
e869(9): mov $0x0,0x50(%rsp)
e872(5): mov $0x1,0xf(%rsp)
e877(5): mov $0x1,0xd(%rsp)
e87c(9): mov $0x1,0x18(%rsp)
e885(3): xor %r15d,%r15d
e888(5): mov %rax,0x48(%rsp)
e88d(8): mov $0x5,0x8(%rsp)
e895(5): jmp 0xfffff37e(%rip)
e89a(5): mov $0x1,0xe(%rsp)
e89f(5): mov $0x0,0x7c(%rsp)
e8a4(3): xor %r12d,%r12d
e8a7(9): mov $0x0,0x50(%rsp)
e8b0(5): mov $0x0,0xf(%rsp)
e8b5(3): xor %r15d,%r15d
e8b8(5): mov $0x1,0xd(%rsp)
e8bd(9): mov $0x0,0x18(%rsp)
e8c6(9): mov $0x0,0x48(%rsp)
e8cf(5): jmp 0xfffff344(%rip)
e8d4(5): cmp $0xa,0x8(%rsp)
e8d9(2): jz 0x58(%rip)
e8db(7): lea 0x9a45(%rip),%rsi
e8e2(2): xor %edi,%edi
e8e4(5): mov $0x5,%edx
e8e9(5): call 0xffff41e7(%rip)
e8ee(3): mov %rax,%rcx
e8f1(5): mov %rax,0x68(%rsp)
e8f6(7): lea 0x9a2a(%rip),%rax
e8fd(3): cmp %rax,%rcx
e900(6): jz 0x39e(%rip)
e906(7): lea 0x9a18(%rip),%rsi
e90d(2): xor %edi,%edi
e90f(5): mov $0x5,%edx
e914(5): call 0xffff41bc(%rip)
e919(3): mov %rax,%rcx
e91c(5): mov %rax,0x60(%rsp)
e921(7): lea 0x99fd(%rip),%rax
e928(3): cmp %rax,%rcx
e92b(6): jz 0x389(%rip)
e931(3): xor %r15d,%r15d
e934(2): test %ebx,%ebx
e936(6): jz 0x1c7(%rip)
e93c(2): test %ebx,%ebx
e93e(5): mov 0x60(%rsp),%rbx
e943(5): setnz 0xf(%rsp)
e948(3): xor %r12d,%r12d
e94b(3): mov %rbx,%rdi
e94e(5): call 0xffff41a2(%rip)
e953(5): mov %rbx,0x48(%rsp)
e958(5): mov %rax,0x18(%rsp)
e95d(5): mov $0x1,0xe(%rsp)
e962(5): mov $0x0,0x7c(%rsp)
e967(9): mov $0x0,0x50(%rsp)
e970(5): mov $0x1,0xd(%rsp)
e975(5): jmp 0xfffff29e(%rip)
e97a(5): mov $0x1,0xe(%rsp)
e97f(5): mov $0x0,0x7c(%rsp)
e984(3): xor %r12d,%r12d
e987(9): mov $0x0,0x50(%rsp)
e990(5): mov $0x0,0xf(%rsp)
e995(3): xor %r15d,%r15d
e998(5): mov $0x0,0xd(%rsp)
e99d(9): mov $0x0,0x18(%rsp)
e9a6(9): mov $0x0,0x48(%rsp)
e9af(5): jmp 0xfffff264(%rip)
e9b4(5): mov $0x1,0xe(%rsp)
e9b9(5): mov $0x0,0x7c(%rsp)
e9be(3): xor %r12d,%r12d
e9c1(9): mov $0x0,0x50(%rsp)
e9ca(5): mov $0x1,0xf(%rsp)
e9cf(5): mov $0x1,0xd(%rsp)
e9d4(5): jmp 0xfffff21f(%rip)
e9d9(3): cmp %r15,%r13
e9dc(2): jbe 0x7(%rip)
e9de(5): mov $0x30,0x0(%r14,%r15,1)
e9e3(4): lea 0x2(%rcx),%rax
e9e7(3): cmp %rax,%r13
e9ea(2): jbe 0x8(%rip)
e9ec(6): mov $0x30,0x2(%r14,%rcx,1)
e9f2(3): mov %r12d,%eax
e9f5(4): lea 0x3(%rcx),%r15
e9f9(3): xor %r12d,%r12d
e9fc(5): mov $0x30,%ebx
ea01(5): jmp 0xfffff367(%rip)
ea06(a): nop 0x0(%rax,%rax,1)
ea10(5): movzx 0xf(%rsp),%ebx
ea15(3): mov %r11,%rbp
ea18(4): mov %bl,0xd(%rsp)
ea1c(5): jmp 0xfffffcad(%rip)
ea21(5): movzx 0xd(%rsp),%edx
ea26(3): xor %r12d,%r12d
ea29(5): jmp 0xfffffb07(%rip)
ea2e(3): xor %r10d,%r10d
ea31(5): jmp 0xfffffbbc(%rip)
ea36(9): mov $0x0,0x50(%rsp)
ea3f(5): mov $0x1,0xe(%rsp)
ea44(3): xor %r12d,%r12d
ea47(5): mov $0x0,0x7c(%rsp)
ea4c(5): jmp 0xfffffddf(%rip)
ea51(5): mov 0x30(%rsp),%r11
ea56(3): mov %r14,%rsi
ea59(3): mov %r13,%rcx
ea5c(3): mov %rbx,%rax
ea5f(3): mov %rbx,%rdi
ea62(6): movzx 0x7d(%rsp),%r8d
ea68(5): movzx 0x7e(%rsp),%ebx
ea6d(8): mov 0x88(%rsp),%r9
ea75(3): cmp %r11,%rsi
ea78(6): movzx 0x7f(%rsp),%r10d
ea7e(8): mov 0x80(%rsp),%r15
ea86(5): mov 0x40(%rsp),%r14
ea8b(5): mov 0x70(%rsp),%r13
ea90(2): jnb 0x28(%rip)
ea92(3): cmp $0x0,(%rcx)
ea95(2): jnz 0x12(%rip)
ea97(2): jmp 0x21(%rip)
ea99(7): nop 0x0(%rax)
eaa0(5): cmp $0x0,0x0(%r9,%rax,1)
eaa5(2): jz 0x10(%rip)
eaa7(4): add $0x1,%rax
eaab(5): lea 0x0(%rbp,%rax,1),%rdx
eab0(3): cmp %rdx,%r11
eab3(2): jnbe 0xffffffed(%rip)
eab5(3): mov %rax,%rdi
eab8(5): movzx 0xd(%rsp),%edx
eabd(3): xor %r12d,%r12d
eac0(5): jmp 0xfffffa66(%rip)
eac5(3): mov %rbx,%rdi
eac8(6): movzx 0x7d(%rsp),%r8d
eace(5): movzx 0x7e(%rsp),%ebx
ead3(6): movzx 0x7f(%rsp),%r10d
ead9(8): mov 0x80(%rsp),%r15
eae1(3): xor %r12d,%r12d
eae4(5): mov 0x40(%rsp),%r14
eae9(5): mov 0x70(%rsp),%r13
eaee(5): mov 0x30(%rsp),%r11
eaf3(5): movzx 0xd(%rsp),%edx
eaf8(5): jmp 0xfffffa2e(%rip)
eafd(5): mov 0x68(%rsp),%rdx
eb02(3): movzx (%rdx),%eax
eb05(2): test %al,%al
eb07(6): jz 0xfffffe35(%rip)
eb0d(3): nop (%rax)
eb10(3): cmp %r15,%r13
eb13(2): jbe 0x6(%rip)
eb15(4): mov %al,0x0(%r14,%r15,1)
eb19(4): add $0x1,%r15
eb1d(5): movzx 0x0(%rdx,%r15,1),%eax
eb22(2): test %al,%al
eb24(2): jnz 0xffffffec(%rip)
eb26(5): jmp 0xfffffe16(%rip)
eb2b(2): mov %edx,%eax
eb2d(5): jmp 0xfffff55a(%rip)
eb32(4): movzx 0x0(%rax,%rcx,1),%ebx
eb36(3): cmp $0x3e,%bl
eb39(6): jnbe 0xfffff877(%rip)
eb3f(a): mov $0x8070630310989004800,%rax
eb49(4): bt %rbx,%rax
eb4d(6): jnb 0xfffff863(%rip)
eb53(5): cmp $0x0,0xf(%rsp)
eb58(6): jnz 0x1ea(%rip)
eb5e(3): cmp %r15,%r13
eb61(2): jbe 0x7(%rip)
eb63(5): mov $0x3f,0x0(%r14,%r15,1)
eb68(4): lea 0x1(%r15),%rax
eb6c(3): cmp %rax,%r13
eb6f(2): jbe 0x8(%rip)
eb71(6): mov $0x22,0x1(%r14,%r15,1)
eb77(4): lea 0x2(%r15),%rax
eb7b(3): cmp %rax,%r13
eb7e(2): jbe 0x8(%rip)
eb80(6): mov $0x22,0x2(%r14,%r15,1)
eb86(4): lea 0x3(%r15),%rax
eb8a(3): cmp %rax,%r13
eb8d(2): jbe 0x8(%rip)
eb8f(6): mov $0x3f,0x3(%r14,%r15,1)
eb95(4): add $0x4,%r15
eb99(2): xor %edx,%edx
eb9b(3): xor %r12d,%r12d
eb9e(2): xor %eax,%eax
eba0(3): mov %rcx,%rbp
eba3(5): jmp 0xfffff1c5(%rip)
eba8(2): test %ebx,%ebx
ebaa(6): jz 0x18e(%rip)
ebb0(7): lea 0x976e(%rip),%rax
ebb7(5): mov $0x1,0xe(%rsp)
ebbc(5): mov $0x0,0x7c(%rsp)
ebc1(3): xor %r12d,%r12d
ebc4(9): mov $0x0,0x50(%rsp)
ebcd(5): mov $0x1,0xf(%rsp)
ebd2(5): mov $0x0,0xd(%rsp)
ebd7(9): mov $0x1,0x18(%rsp)
ebe0(3): xor %r15d,%r15d
ebe3(5): mov %rax,0x48(%rsp)
ebe8(5): jmp 0xfffff02b(%rip)
ebed(3): nop (%rax)
ebf0(3): mov %r11,%rbp
ebf3(5): movzx 0xf(%rsp),%eax
ebf8(5): jmp 0xfffffad1(%rip)
ebfd(7): lea 0x971f(%rip),%rax
ec04(5): mov $0x1,0xe(%rsp)
ec09(5): mov $0x0,0x7c(%rsp)
ec0e(3): xor %r12d,%r12d
ec11(9): mov $0x0,0x50(%rsp)
ec1a(5): mov $0x1,0xf(%rsp)
ec1f(5): mov $0x1,0xd(%rsp)
ec24(9): mov $0x1,0x18(%rsp)
ec2d(3): xor %r15d,%r15d
ec30(5): mov %rax,0x48(%rsp)
ec35(5): jmp 0xffffefde(%rip)
ec3a(2): mov %edx,%eax
ec3c(5): mov 0x48(%rsp),%rbx
ec41(3): test %rbx,%rbx
ec44(2): jz 0x2e(%rip)
ec46(2): test %al,%al
ec48(2): jz 0x2a(%rip)
ec4a(3): movzx (%rbx),%ecx
ec4d(3): mov %rbx,%rax
ec50(2): test %cl,%cl
ec52(2): jz 0x20(%rip)
ec54(3): mov %r15,%rdx
ec57(3): sub %r15,%rax
ec5a(3): cmp %rdx,%r13
ec5d(2): jbe 0x6(%rip)
ec5f(4): mov %cl,0x0(%r14,%rdx,1)
ec63(4): add $0x1,%rdx
ec67(4): movzx 0x0(%rax,%rdx,1),%ecx
ec6b(2): test %cl,%cl
ec6d(2): jnz 0xffffffed(%rip)
ec6f(3): mov %rdx,%r15
ec72(3): cmp %r15,%r13
ec75(6): jbe 0xfffffaa4(%rip)
ec7b(5): mov $0x0,0x0(%r14,%r15,1)
ec80(5): jmp 0xfffffa99(%rip)
ec85(5): cmp $0x2,0x8(%rsp)
ec8a(5): movzx 0xf(%rsp),%ebx
ec8f(3): mov %r11,%rbp
ec92(3): setz %al
ec95(4): mov %bl,0xd(%rsp)
ec99(5): jmp 0xfffffa30(%rip)
ec9e(4): mov 0x8(%rsp),%esi
eca2(3): mov %rcx,%rdi
eca5(5): call 0xffffedab(%rip)
ecaa(5): mov %rax,0x68(%rsp)
ecaf(5): jmp 0xfffffc57(%rip)
ecb4(4): mov 0x8(%rsp),%esi
ecb8(3): mov %rcx,%rdi
ecbb(5): call 0xffffed95(%rip)
ecc0(5): mov %rax,0x60(%rsp)
ecc5(5): jmp 0xfffffc6c(%rip)
ecca(5): movzx 0xf(%rsp),%ebx
eccf(3): mov %r11,%rbp
ecd2(2): mov %edx,%eax
ecd4(4): mov %bl,0xd(%rsp)
ecd8(5): jmp 0xfffff9f1(%rip)
ecdd(4): sub $0x8,%rsp
ece1(6): mov $0x5,%r8d
ece7(3): mov %r11,%rcx
ecea(4): push 0x68(%rsp)
ecee(4): push 0x78(%rsp)
ecf2(3): mov %r14,%rdi
ecf5(4): push 0x38(%rsp)
ecf9(8): mov 0x98(%rsp),%r9d
ed01(5): mov 0x30(%rsp),%rdx
ed06(5): mov 0x70(%rsp),%rsi
ed0b(5): call 0xffffee35(%rip)
ed10(4): add $0x20,%rsp
ed14(3): mov %rax,%r15
ed17(5): jmp 0xfffffa02(%rip)
ed1c(5): movzx 0x7c(%rsp),%eax
ed21(5): jmp 0xffffff1b(%rip)
ed26(8): mov $0x2,0x8(%rsp)
ed2e(5): jmp 0xfffff99b(%rip)
ed33(5): call 0xffff3dfd(%rip)
ed38(5): mov $0x0,0xd(%rsp)
ed3d(5): jmp 0xfffffa74(%rip)
ed42(3): mov %r11,%rbp
ed45(5): jmp 0xfffff99b(%rip)
ed4a(5): mov $0x1,0xe(%rsp)
ed4f(2): xor %eax,%eax
ed51(3): xor %r12d,%r12d
ed54(9): mov $0x0,0x50(%rsp)
ed5d(5): jmp 0xfffff5a7(%rip)
ed62(3): mov %r13,%rdx
ed65(5): mov 0x50(%rsp),%r13
ed6a(5): jmp 0xfffff5f8(%rip)
ed6f(5): call 0xffff3bd1(%rip)

"quotearg_n_options" :
ed80(2): push %r15
ed82(2): push %r14
ed84(3): movsxd %edi,%r15
ed87(2): push %r13
ed89(2): push %r12
ed8b(3): mov %rdx,%r14
ed8e(1): push %rbp
ed8f(1): push %rbx
ed90(3): mov %rcx,%rbp
ed93(4): sub $0x28,%rsp
ed97(5): mov %rsi,0x8(%rsp)
ed9c(5): call 0xffff3bb4(%rip)
eda1(3): mov %rax,%r13
eda4(2): mov (%rax),%eax
eda6(3): test %r15d,%r15d
eda9(7): mov 0x20e2f0(%rip),%rbx
edb0(4): mov %eax,0x18(%rsp)
edb4(6): js 0x16d(%rip)
edba(7): cmp %r15d,0x20e2d7(%rip)
edc1(2): jnle 0x64(%rip)
edc3(7): cmp $0x7fffffff,%r15d
edca(6): jz 0x15c(%rip)
edd0(4): lea 0x1(%r15),%r12d
edd4(7): lea 0x20e2d5(%rip),%rax
eddb(3): movsxd %r12d,%rsi
edde(4): shl/sal $0x4,%rsi
ede2(3): cmp %rax,%rbx
ede5(6): jz 0x11b(%rip)
edeb(3): mov %rbx,%rdi
edee(5): call 0x3282(%rip)
edf3(3): mov %rax,%rbx
edf6(7): mov %rax,0x20e2a3(%rip)
edfd(7): movsxd 0x20e294(%rip),%rdi
ee04(3): mov %r12d,%edx
ee07(2): xor %esi,%esi
ee09(2): sub %edi,%edx
ee0b(4): shl/sal $0x4,%rdi
ee0f(3): movsxd %edx,%rdx
ee12(3): add %rbx,%rdi
ee15(4): shl/sal $0x4,%rdx
ee19(5): call 0xffff3dd7(%rip)
ee1e(7): mov %r12d,0x20e273(%rip)
ee25(3): mov 0x4(%rbp),%eax
ee28(4): shl/sal $0x4,%r15
ee2c(4): sub $0x8,%rsp
ee30(3): add %r15,%rbx
ee33(4): lea 0x8(%rbp),%r15
ee37(4): mov 0x0(%rbp),%r8d
ee3b(3): mov (%rbx),%r11
ee3e(4): mov 0x8(%rbx),%r12
ee42(3): mov %r14,%rcx
ee45(3): or $0x1,%eax
ee48(4): mov %eax,0x24(%rsp)
ee4c(3): push 0x30(%rbp)
ee4f(3): mov %eax,%r9d
ee52(3): push 0x28(%rbp)
ee55(2): push %r15
ee57(3): mov %r11,%rsi
ee5a(5): mov 0x28(%rsp),%rdx
ee5f(3): mov %r12,%rdi
ee62(5): mov %r11,0x30(%rsp)
ee67(5): call 0xffffecd9(%rip)
ee6c(4): add $0x20,%rsp
ee70(5): mov 0x10(%rsp),%r11
ee75(3): cmp %rax,%r11
ee78(2): jnbe 0x69(%rip)
ee7a(4): lea 0x1(%rax),%rsi
ee7e(7): lea 0x21075b(%rip),%rax
ee85(3): cmp %rax,%r12
ee88(3): mov %rsi,(%rbx)
ee8b(2): jz 0x14(%rip)
ee8d(3): mov %r12,%rdi
ee90(5): mov %rsi,0x10(%rsp)
ee95(5): call 0xffff423b(%rip)
ee9a(5): mov 0x10(%rsp),%rsi
ee9f(3): mov %rsi,%rdi
eea2(5): mov %rsi,0x10(%rsp)
eea7(5): call 0x3169(%rip)
eeac(4): sub $0x8,%rsp
eeb0(4): mov %rax,0x8(%rbx)
eeb4(4): mov 0x0(%rbp),%r8d
eeb8(3): push 0x30(%rbp)
eebb(3): push 0x28(%rbp)
eebe(3): mov %r14,%rcx
eec1(2): push %r15
eec3(5): mov 0x3c(%rsp),%r9d
eec8(3): mov %rax,%rdi
eecb(5): mov 0x28(%rsp),%rdx
eed0(5): mov 0x30(%rsp),%rsi
eed5(3): mov %rax,%r12
eed8(5): call 0xffffec68(%rip)
eedd(4): add $0x20,%rsp
eee1(4): mov 0x18(%rsp),%eax
eee5(4): mov %eax,0x0(%r13)
eee9(4): add $0x28,%rsp
eeed(3): mov %r12,%rax
eef0(1): pop %rbx
eef1(1): pop %rbp
eef2(2): pop %r12
eef4(2): pop %r13
eef6(2): pop %r14
eef8(2): pop %r15
eefa(1): ret near (%rsp)
eefb(5): nop 0x0(%rax,%rax,1)
ef00(2): xor %edi,%edi
ef02(5): call 0x316e(%rip)
ef07(8): movdqa 0x20e1a1(%rip),%xmm0
ef0f(3): mov %rax,%rbx
ef12(7): mov %rax,0x20e187(%rip)
ef19(3): movups %xmm0,(%rax)
ef1c(5): jmp 0xfffffee1(%rip)
ef21(5): call 0xffff3a1f(%rip)
ef26(5): call 0x333a(%rip)

"clone_quoting_options" :
ef30(2): push %r12
ef32(1): push %rbp
ef33(1): push %rbx
ef34(3): mov %rdi,%rbx
ef37(5): call 0xffff3a19(%rip)
ef3c(3): mov (%rax),%r12d
ef3f(3): mov %rax,%rbp
ef42(7): lea 0x210797(%rip),%rax
ef49(3): test %rbx,%rbx
ef4c(5): mov $0x38,%esi
ef51(4): cmove %rax,%rbx
ef55(3): mov %rbx,%rdi
ef58(5): call 0x32b8(%rip)
ef5d(4): mov %r12d,0x0(%rbp)
ef61(1): pop %rbx
ef62(1): pop %rbp
ef63(2): pop %r12
ef65(1): ret near (%rsp)

"get_quoting_style" :
ef70(7): lea 0x210769(%rip),%rax
ef77(3): test %rdi,%rdi
ef7a(4): cmove %rax,%rdi
ef7e(2): mov (%rdi),%eax
ef80(1): ret near (%rsp)

"set_quoting_style" :
ef90(7): lea 0x210749(%rip),%rax
ef97(3): test %rdi,%rdi
ef9a(4): cmove %rax,%rdi
ef9e(2): mov %esi,(%rdi)
efa0(1): ret near (%rsp)

"set_char_quoting" :
efb0(7): lea 0x210729(%rip),%rax
efb7(3): test %rdi,%rdi
efba(2): mov %esi,%ecx
efbc(4): cmove %rax,%rdi
efc0(2): mov %esi,%eax
efc2(3): and $0x1f,%ecx
efc5(3): shr $0x5,%al
efc8(3): movzx %al,%eax
efcb(5): lea 0x8(%rdi,%rax,4),%rdi
efd0(2): mov (%rdi),%esi
efd2(2): mov %esi,%eax
efd4(2): shr %cl,%eax
efd6(2): xor %eax,%edx
efd8(3): and $0x1,%eax
efdb(3): and $0x1,%edx
efde(2): shl/sal %cl,%edx
efe0(2): xor %esi,%edx
efe2(2): mov %edx,(%rdi)
efe4(1): ret near (%rsp)

"set_quoting_flags" :
eff0(7): lea 0x2106e9(%rip),%rax
eff7(3): test %rdi,%rdi
effa(4): cmove %rax,%rdi
effe(3): mov 0x4(%rdi),%eax
f001(3): mov %esi,0x4(%rdi)
f004(1): ret near (%rsp)

"set_custom_quoting" :
f010(7): lea 0x2106c9(%rip),%rax
f017(3): test %rdi,%rdi
f01a(4): cmove %rax,%rdi
f01e(3): test %rsi,%rsi
f021(6): mov $0xa,(%rdi)
f027(2): jz 0x10(%rip)
f029(3): test %rdx,%rdx
f02c(2): jz 0xb(%rip)
f02e(4): mov %rsi,0x28(%rdi)
f032(4): mov %rdx,0x30(%rdi)
f036(1): ret near (%rsp)
f037(4): sub $0x8,%rsp
f03b(5): call 0xffff3905(%rip)

"quotearg_buffer" :
f040(2): push %r15
f042(2): push %r14
f044(7): lea 0x210695(%rip),%rax
f04b(2): push %r13
f04d(2): push %r12
f04f(3): mov %rdi,%r13
f052(1): push %rbp
f053(1): push %rbx
f054(3): mov %r8,%rbx
f057(3): mov %rsi,%r14
f05a(3): mov %rdx,%r15
f05d(4): sub $0x18,%rsp
f061(3): test %r8,%r8
f064(4): cmove %rax,%rbx
f068(5): mov %rcx,0x8(%rsp)
f06d(5): call 0xffff38e3(%rip)
f072(3): mov (%rax),%r12d
f075(3): mov %rax,%rbp
f078(4): lea 0x8(%rbx),%rax
f07c(4): sub $0x8,%rsp
f080(4): mov 0x4(%rbx),%r9d
f084(3): push 0x30(%rbx)
f087(3): mov (%rbx),%r8d
f08a(3): push 0x28(%rbx)
f08d(3): mov %r15,%rdx
f090(1): push %rax
f091(5): mov 0x28(%rsp),%rcx
f096(3): mov %r14,%rsi
f099(3): mov %r13,%rdi
f09c(5): call 0xffffeaa4(%rip)
f0a1(4): mov %r12d,0x0(%rbp)
f0a5(4): add $0x38,%rsp
f0a9(1): pop %rbx
f0aa(1): pop %rbp
f0ab(2): pop %r12
f0ad(2): pop %r13
f0af(2): pop %r14
f0b1(2): pop %r15
f0b3(1): ret near (%rsp)

"quotearg_alloc_mem" :
f0c0(2): push %r15
f0c2(2): push %r14
f0c4(7): lea 0x210615(%rip),%rax
f0cb(2): push %r13
f0cd(2): push %r12
f0cf(3): mov %rdx,%r12
f0d2(1): push %rbp
f0d3(1): push %rbx
f0d4(3): mov %rcx,%rbx
f0d7(3): mov %rdi,%r14
f0da(3): mov %rsi,%r15
f0dd(4): sub $0x38,%rsp
f0e1(3): test %rcx,%rcx
f0e4(4): cmove %rax,%rbx
f0e8(2): xor %ebp,%ebp
f0ea(5): call 0xffff3866(%rip)
f0ef(3): test %r12,%r12
f0f2(3): mov %rax,%r13
f0f5(2): mov (%rax),%eax
f0f7(4): setz %bpl
f0fb(3): or 0x4(%rbx),%ebp
f0fe(4): lea 0x8(%rbx),%r10
f102(4): sub $0x8,%rsp
f106(3): mov (%rbx),%r8d
f109(3): mov %r15,%rcx
f10c(4): mov %eax,0x14(%rsp)
f110(3): push 0x30(%rbx)
f113(3): mov %r14,%rdx
f116(3): push 0x28(%rbx)
f119(2): push %r10
f11b(2): xor %esi,%esi
f11d(3): mov %ebp,%r9d
f120(2): xor %edi,%edi
f122(5): mov %r10,0x40(%rsp)
f127(5): call 0xffffea19(%rip)
f12c(4): lea 0x1(%rax),%rsi
f130(5): mov %rax,0x48(%rsp)
f135(4): add $0x20,%rsp
f139(3): mov %rsi,%rdi
f13c(5): mov %rsi,0x18(%rsp)
f141(5): call 0x2ecf(%rip)
f146(5): mov %rax,0x10(%rsp)
f14b(4): sub $0x8,%rsp
f14f(3): push 0x30(%rbx)
f152(3): push 0x28(%rbx)
f155(5): mov 0x38(%rsp),%r10
f15a(3): mov %ebp,%r9d
f15d(3): mov (%rbx),%r8d
f160(3): mov %r15,%rcx
f163(3): mov %r14,%rdx
f166(3): mov %rax,%rdi
f169(2): push %r10
f16b(5): mov 0x38(%rsp),%rsi
f170(5): call 0xffffe9d0(%rip)
f175(4): mov 0x2c(%rsp),%eax
f179(4): add $0x20,%rsp
f17d(3): test %r12,%r12
f180(4): mov %eax,0x0(%r13)
f184(2): jz 0xb(%rip)
f186(5): mov 0x28(%rsp),%r11
f18b(4): mov %r11,(%r12)
f18f(5): mov 0x10(%rsp),%rax
f194(4): add $0x38,%rsp
f198(1): pop %rbx
f199(1): pop %rbp
f19a(2): pop %r12
f19c(2): pop %r13
f19e(2): pop %r14
f1a0(2): pop %r15
f1a2(1): ret near (%rsp)

"quotearg_alloc" :
f1b0(3): mov %rdx,%rcx
f1b3(2): xor %edx,%edx
f1b5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
f1c0(6): mov 0x20ded2(%rip),%eax
f1c6(2): push %r12
f1c8(7): mov 0x20ded1(%rip),%r12
f1cf(1): push %rbp
f1d0(1): push %rbx
f1d1(3): cmp $0x1,%eax
f1d4(2): jle 0x2d(%rip)
f1d6(3): sub $0x2,%eax
f1d9(5): lea 0x18(%r12),%rbx
f1de(4): shl/sal $0x4,%rax
f1e2(5): lea 0x28(%r12,%rax,1),%rbp
f1e7(9): nop 0x0(%rax,%rax,1)
f1f0(3): mov (%rbx),%rdi
f1f3(4): add $0x10,%rbx
f1f7(5): call 0xffff3ed9(%rip)
f1fc(3): cmp %rbp,%rbx
f1ff(2): jnz 0xfffffff1(%rip)
f201(5): mov 0x8(%r12),%rdi
f206(7): lea 0x2103d3(%rip),%rbx
f20d(3): cmp %rbx,%rdi
f210(2): jz 0x19(%rip)
f212(5): call 0xffff3ebe(%rip)
f217(b): mov $0x100,0x20de8e(%rip)
f222(7): mov %rbx,0x20de8f(%rip)
f229(7): lea 0x20de80(%rip),%rbx
f230(3): cmp %rbx,%r12
f233(2): jz 0x11(%rip)
f235(3): mov %r12,%rdi
f238(5): call 0xffff3e98(%rip)
f23d(7): mov %rbx,0x20de5c(%rip)
f244(1): pop %rbx
f245(a): mov $0x1,0x20de49(%rip)
f24f(1): pop %rbp
f250(2): pop %r12
f252(1): ret near (%rsp)

"quotearg_n" :
f260(7): lea 0x210479(%rip),%rcx
f267(7): mov $0xffffffff,%rdx
f26e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
f280(7): lea 0x210459(%rip),%rcx
f287(5): jmp 0xfffffaf9(%rip)

"quotearg" :
f290(7): lea 0x210449(%rip),%rcx
f297(3): mov %rdi,%rsi
f29a(7): mov $0xffffffff,%rdx
f2a1(2): xor %edi,%edi
f2a3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
f2b0(7): lea 0x210429(%rip),%rcx
f2b7(3): mov %rsi,%rdx
f2ba(3): mov %rdi,%rsi
f2bd(2): xor %edi,%edi
f2bf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
f2d0(4): sub $0x48,%rsp
f2d4(3): mov %rdx,%rax
f2d7(9): mov $0x28,%rdx
f2e0(5): mov %rdx,0x38(%rsp)
f2e5(2): xor %edx,%edx
f2e7(3): cmp $0xa,%esi
f2ea(2): jz 0x6a(%rip)
f2ec(3): mov %esi,(%rsp)
f2ef(3): mov %rsp,%rcx
f2f2(7): mov $0xffffffff,%rdx
f2f9(3): mov %rax,%rsi
f2fc(9): mov $0x0,0x4(%rsp)
f305(9): mov $0x0,0xc(%rsp)
f30e(9): mov $0x0,0x14(%rsp)
f317(9): mov $0x0,0x1c(%rsp)
f320(9): mov $0x0,0x24(%rsp)
f329(9): mov $0x0,0x2c(%rsp)
f332(8): mov $0x0,0x34(%rsp)
f33a(5): call 0xfffffa46(%rip)
f33f(5): mov 0x38(%rsp),%rcx
f344(9): xor $0x28,%rcx
f34d(2): jnz 0xc(%rip)
f34f(4): add $0x48,%rsp
f353(1): ret near (%rsp)
f354(5): call 0xffff35ec(%rip)
f359(5): call 0xffff37d7(%rip)

"quotearg_n_style_mem" :
f360(4): sub $0x48,%rsp
f364(3): mov %rdx,%rax
f367(3): mov %rcx,%rdx
f36a(9): mov $0x28,%rcx
f373(5): mov %rcx,0x38(%rsp)
f378(2): xor %ecx,%ecx
f37a(3): cmp $0xa,%esi
f37d(2): jz 0x63(%rip)
f37f(3): mov %esi,(%rsp)
f382(3): mov %rsp,%rcx
f385(3): mov %rax,%rsi
f388(9): mov $0x0,0x4(%rsp)
f391(9): mov $0x0,0xc(%rsp)
f39a(9): mov $0x0,0x14(%rsp)
f3a3(9): mov $0x0,0x1c(%rsp)
f3ac(9): mov $0x0,0x24(%rsp)
f3b5(9): mov $0x0,0x2c(%rsp)
f3be(8): mov $0x0,0x34(%rsp)
f3c6(5): call 0xfffff9ba(%rip)
f3cb(5): mov 0x38(%rsp),%rdx
f3d0(9): xor $0x28,%rdx
f3d9(2): jnz 0xc(%rip)
f3db(4): add $0x48,%rsp
f3df(1): ret near (%rsp)
f3e0(5): call 0xffff3560(%rip)
f3e5(5): call 0xffff374b(%rip)

"quotearg_style" :
f3f0(3): mov %rsi,%rdx
f3f3(2): mov %edi,%esi
f3f5(2): xor %edi,%edi
f3f7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
f400(3): mov %rdx,%rcx
f403(3): mov %rsi,%rdx
f406(2): mov %edi,%esi
f408(2): xor %edi,%edi
f40a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
f410(4): sub $0x48,%rsp
f414(2): mov %edx,%ecx
f416(9): mov $0x28,%rax
f41f(5): mov %rax,0x38(%rsp)
f424(2): xor %eax,%eax
f426(7): mov 0x2102e3(%rip),%rax
f42d(3): mov %rsp,%r8
f430(3): and $0x1f,%ecx
f433(8): movdqa 0x2102a5(%rip),%xmm0
f43b(5): mov %rax,0x30(%rsp)
f440(2): mov %edx,%eax
f442(4): movaps %xmm0,(%rsp)
f446(3): shr $0x5,%al
f449(3): movzx %al,%eax
f44c(5): lea 0x8(%r8,%rax,4),%r9
f451(8): movdqa 0x210297(%rip),%xmm0
f459(5): movaps %xmm0,0x10(%rsp)
f45e(8): movdqa 0x21029a(%rip),%xmm0
f466(5): movaps %xmm0,0x20(%rsp)
f46b(3): mov (%r9),%edx
f46e(2): mov %edx,%eax
f470(2): shr %cl,%eax
f472(2): not %eax
f474(3): and $0x1,%eax
f477(2): shl/sal %cl,%eax
f479(3): mov %r8,%rcx
f47c(2): xor %edx,%eax
f47e(3): mov %rsi,%rdx
f481(3): mov %rdi,%rsi
f484(3): mov %eax,(%r9)
f487(2): xor %edi,%edi
f489(5): call 0xfffff8f7(%rip)
f48e(5): mov 0x38(%rsp),%rsi
f493(9): xor $0x28,%rsi
f49c(2): jnz 0x7(%rip)
f49e(4): add $0x48,%rsp
f4a2(1): ret near (%rsp)
f4a3(5): call 0xffff368d(%rip)

"quotearg_char" :
f4b0(4): movsx %sil,%edx
f4b4(7): mov $0xffffffff,%rsi
f4bb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
f4c0(5): mov $0x3a,%edx
f4c5(7): mov $0xffffffff,%rsi
f4cc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
f4e0(5): mov $0x3a,%edx
f4e5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
f4f0(4): sub $0x48,%rsp
f4f4(3): mov %rdx,%rax
f4f7(9): mov $0x28,%rdx
f500(5): mov %rdx,0x38(%rsp)
f505(2): xor %edx,%edx
f507(3): cmp $0xa,%esi
f50a(2): jz 0x6a(%rip)
f50c(3): mov %esi,(%rsp)
f50f(3): mov %rsp,%rcx
f512(7): mov $0xffffffff,%rdx
f519(3): mov %rax,%rsi
f51c(9): mov $0x0,0x4(%rsp)
f525(9): mov $0x4000000,0xc(%rsp)
f52e(9): mov $0x0,0x14(%rsp)
f537(9): mov $0x0,0x1c(%rsp)
f540(9): mov $0x0,0x24(%rsp)
f549(9): mov $0x0,0x2c(%rsp)
f552(8): mov $0x0,0x34(%rsp)
f55a(5): call 0xfffff826(%rip)
f55f(5): mov 0x38(%rsp),%rcx
f564(9): xor $0x28,%rcx
f56d(2): jnz 0xc(%rip)
f56f(4): add $0x48,%rsp
f573(1): ret near (%rsp)
f574(5): call 0xffff33cc(%rip)
f579(5): call 0xffff35b7(%rip)

"quotearg_n_custom_mem" :
f580(4): sub $0x48,%rsp
f584(3): mov %rcx,%r9
f587(7): mov 0x210182(%rip),%rcx
f58e(8): movdqa 0x21014a(%rip),%xmm0
f596(9): mov $0x28,%rax
f59f(5): mov %rax,0x38(%rsp)
f5a4(2): xor %eax,%eax
f5a6(4): movaps %xmm0,(%rsp)
f5aa(3): test %rsi,%rsi
f5ad(5): mov %rcx,0x30(%rsp)
f5b2(7): mov $0xa,(%rsp)
f5b9(8): movdqa 0x21012f(%rip),%xmm0
f5c1(5): movaps %xmm0,0x10(%rsp)
f5c6(8): movdqa 0x210132(%rip),%xmm0
f5ce(5): movaps %xmm0,0x20(%rsp)
f5d3(2): jz 0x34(%rip)
f5d5(3): test %rdx,%rdx
f5d8(2): jz 0x2f(%rip)
f5da(5): mov %rsi,0x28(%rsp)
f5df(5): mov %rdx,0x30(%rsp)
f5e4(3): mov %rsp,%rcx
f5e7(3): mov %r8,%rdx
f5ea(3): mov %r9,%rsi
f5ed(5): call 0xfffff793(%rip)
f5f2(5): mov 0x38(%rsp),%rdi
f5f7(9): xor $0x28,%rdi
f600(2): jnz 0xc(%rip)
f602(4): add $0x48,%rsp
f606(1): ret near (%rsp)
f607(5): call 0xffff3339(%rip)
f60c(5): call 0xffff3524(%rip)

"quotearg_n_custom" :
f620(7): mov $0xffffffff,%r8
f627(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
f630(3): mov %rdx,%rcx
f633(7): mov $0xffffffff,%r8
f63a(3): mov %rsi,%rdx
f63d(3): mov %rdi,%rsi
f640(2): xor %edi,%edi
f642(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
f650(3): mov %rcx,%r8
f653(3): mov %rdx,%rcx
f656(3): mov %rsi,%rdx
f659(3): mov %rdi,%rsi
f65c(2): xor %edi,%edi
f65e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
f670(7): lea 0x20d9e9(%rip),%rcx
f677(5): jmp 0xfffff709(%rip)

"quote_mem" :
f680(7): lea 0x20d9d9(%rip),%rcx
f687(3): mov %rsi,%rdx
f68a(3): mov %rdi,%rsi
f68d(2): xor %edi,%edi
f68f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
f6a0(7): lea 0x20d9b9(%rip),%rcx
f6a7(7): mov $0xffffffff,%rdx
f6ae(5): jmp 0xfffff6d2(%rip)

"quote" :
f6c0(7): lea 0x20d999(%rip),%rcx
f6c7(3): mov %rdi,%rsi
f6ca(7): mov $0xffffffff,%rdx
f6d1(2): xor %edi,%edi
f6d3(5): jmp 0xfffff6ad(%rip)

"renameatu" :
f6e0(2): push %r15
f6e2(2): push %r14
f6e4(3): mov %r8d,%r9d
f6e7(2): push %r13
f6e9(2): push %r12
f6eb(3): mov %edx,%r14d
f6ee(1): push %rbp
f6ef(1): push %rbx
f6f0(3): mov %rsi,%r12
f6f3(3): mov %rcx,%r13
f6f6(3): mov %r8d,%ebp
f6f9(3): mov %rcx,%r8
f6fc(7): sub $0x148,%rsp
f703(2): mov %edx,%ecx
f705(3): mov %rsi,%rdx
f708(9): mov $0x28,%rax
f711(8): mov %rax,0x138(%rsp)
f719(2): xor %eax,%eax
f71b(2): mov %edi,%esi
f71d(4): mov %edi,0x4(%rsp)
f721(5): mov $0x13c,%edi
f726(5): call 0xffff362a(%rip)
f72b(3): mov %rax,%rbx
f72e(3): mov %eax,%r15d
f731(5): call 0xffff321f(%rip)
f736(2): test %ebx,%ebx
f738(2): js 0x38(%rip)
f73a(8): mov 0x138(%rsp),%rdx
f742(9): xor $0x28,%rdx
f74b(3): mov %r15d,%eax
f74e(6): jnz 0x1f7(%rip)
f754(7): add $0x148,%rsp
f75b(1): pop %rbx
f75c(1): pop %rbp
f75d(2): pop %r12
f75f(2): pop %r13
f761(2): pop %r14
f763(2): pop %r15
f765(1): ret near (%rsp)
f766(a): nop 0x0(%rax,%rax,1)
f770(3): mov %rax,%r9
f773(2): mov (%rax),%eax
f775(3): lea 0xffffffea(%rax),%ecx
f778(3): and $0xef,%ecx
f77b(3): setnz %bl
f77e(3): cmp $0x5f,%eax
f781(3): setnz %al
f784(2): and %al,%bl
f786(2): jnz 0xffffffb4(%rip)
f788(2): test %ebp,%ebp
f78a(2): jnz 0x56(%rip)
f78c(3): mov %r12,%rdi
f78f(5): mov %r9,0x8(%rsp)
f794(5): call 0xffff335c(%rip)
f799(3): mov %r13,%rdi
f79c(3): mov %rax,%rbp
f79f(5): call 0xffff3351(%rip)
f7a4(3): test %rbp,%rbp
f7a7(2): jz 0x1c(%rip)
f7a9(3): test %rax,%rax
f7ac(5): mov 0x8(%rsp),%r9
f7b1(2): jz 0x12(%rip)
f7b3(6): cmp $0x2f,0xffffffff(%r12,%rbp,1)
f7b9(2): jz 0x47(%rip)
f7bb(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
f7c1(2): jz 0x3f(%rip)
f7c3(4): mov 0x4(%rsp),%edi
f7c7(3): mov %r13,%rcx
f7ca(3): mov %r14d,%edx
f7cd(3): mov %r12,%rsi
f7d0(5): call 0xffff3830(%rip)
f7d5(3): mov %eax,%r15d
f7d8(5): jmp 0xffffff62(%rip)
f7dd(3): nop (%rax)
f7e0(3): and $0xfe,%ebp
f7e3(2): jz 0x6d(%rip)
f7e5(7): mov $0x5f,(%r9)
f7ec(6): mov $0xffffffff,%r15d
f7f2(5): jmp 0xffffff48(%rip)
f7f7(9): nop 0x0(%rax,%rax,1)
f800(4): mov 0x4(%rsp),%esi
f804(5): lea 0x10(%rsp),%rcx
f809(6): mov $0x100,%r8d
f80f(3): mov %r12,%rdx
f812(5): mov $0x1,%edi
f817(5): mov %r9,0x8(%rsp)
f81c(5): call 0xffff3364(%rip)
f821(2): test %eax,%eax
f823(2): jnz 0x66(%rip)
f825(2): test %bl,%bl
f827(5): mov 0x8(%rsp),%r9
f82c(2): jz 0x7e(%rip)
f82e(4): mov 0x28(%rsp),%eax
f832(5): and $0xf000,%eax
f837(5): cmp $0x4000,%eax
f83c(2): jz 0xffffff87(%rip)
f83e(7): mov $0x2,(%r9)
f845(6): mov $0xffffffff,%r15d
f84b(5): jmp 0xfffffeef(%rip)
f850(8): lea 0xa0(%rsp),%rcx
f858(6): mov $0x100,%r8d
f85e(3): mov %r13,%rdx
f861(3): mov %r14d,%esi
f864(5): mov $0x1,%edi
f869(5): mov %r9,0x8(%rsp)
f86e(5): call 0xffff3312(%rip)
f873(2): test %eax,%eax
f875(5): mov 0x8(%rsp),%r9
f87a(2): jz 0x1e(%rip)
f87c(3): mov (%r9),%eax
f87f(3): cmp $0x4b,%eax
f882(2): jz 0x16(%rip)
f884(3): cmp $0x2,%eax
f887(2): jz 0x71(%rip)
f889(6): mov $0xffffffff,%r15d
f88f(5): jmp 0xfffffeab(%rip)
f894(4): nop 0x0(%rax)
f898(7): mov $0x11,(%r9)
f89f(6): mov $0xffffffff,%r15d
f8a5(5): jmp 0xfffffe95(%rip)
f8aa(8): lea 0xa0(%rsp),%rcx
f8b2(6): mov $0x100,%r8d
f8b8(3): mov %r13,%rdx
f8bb(3): mov %r14d,%esi
f8be(5): mov $0x1,%edi
f8c3(5): mov %r9,0x8(%rsp)
f8c8(5): call 0xffff32b8(%rip)
f8cd(2): test %eax,%eax
f8cf(5): mov 0x8(%rsp),%r9
f8d4(2): jz 0x2e(%rip)
f8d6(4): cmp $0x2,(%r9)
f8da(2): jnz 0xffffffaf(%rip)
f8dc(4): mov 0x28(%rsp),%eax
f8e0(5): and $0xf000,%eax
f8e5(5): cmp $0x4000,%eax
f8ea(2): jnz 0xffffff9f(%rip)
f8ec(5): jmp 0xfffffed7(%rip)
f8f1(7): nop 0x0(%rax)
f8f8(5): mov $0x1,%ebx
f8fd(5): jmp 0xfffffe8f(%rip)
f902(7): mov 0xb8(%rsp),%eax
f909(5): and $0xf000,%eax
f90e(5): cmp $0x4000,%eax
f913(2): jz 0xe(%rip)
f915(7): mov $0x14,(%r9)
f91c(5): jmp 0xffffff6d(%rip)
f921(4): mov 0x28(%rsp),%eax
f925(5): and $0xf000,%eax
f92a(5): cmp $0x4000,%eax
f92f(6): jz 0xfffffe94(%rip)
f935(7): mov $0x15,(%r9)
f93c(4): or $0xff,%r15d
f940(5): jmp 0xfffffdfa(%rip)
f945(5): call 0xffff31eb(%rip)

"safe_read" :
f950(2): push %r13
f952(2): push %r12
f954(3): mov %edi,%r13d
f957(1): push %rbp
f958(1): push %rbx
f959(3): mov %rsi,%r12
f95c(3): mov %rdx,%rbx
f95f(4): sub $0x8,%rsp
f963(5): nop 0x0(%rax,%rax,1)
f968(3): mov %rbx,%rdx
f96b(3): mov %r12,%rsi
f96e(3): mov %r13d,%edi
f971(5): call 0xffff330f(%rip)
f976(3): test %rax,%rax
f979(3): mov %rax,%rbp
f97c(2): jns 0x24(%rip)
f97e(5): call 0xffff2fd2(%rip)
f983(2): mov (%rax),%eax
f985(3): cmp $0x4,%eax
f988(2): jz 0xffffffe0(%rip)
f98a(7): cmp $0x7ff00000,%rbx
f991(2): jbe 0xf(%rip)
f993(3): cmp $0x16,%eax
f996(2): jnz 0xa(%rip)
f998(5): mov $0x7ff00000,%ebx
f99d(2): jmp 0xffffffcb(%rip)
f99f(1): nop 
f9a0(4): add $0x8,%rsp
f9a4(3): mov %rbp,%rax
f9a7(1): pop %rbx
f9a8(1): pop %rbp
f9a9(2): pop %r12
f9ab(2): pop %r13
f9ad(1): ret near (%rsp)

"safe_write" :
f9b0(2): push %r13
f9b2(2): push %r12
f9b4(3): mov %edi,%r13d
f9b7(1): push %rbp
f9b8(1): push %rbx
f9b9(3): mov %rsi,%r12
f9bc(3): mov %rdx,%rbx
f9bf(4): sub $0x8,%rsp
f9c3(5): nop 0x0(%rax,%rax,1)
f9c8(3): mov %rbx,%rdx
f9cb(3): mov %r12,%rsi
f9ce(3): mov %r13d,%edi
f9d1(5): call 0xffff304f(%rip)
f9d6(3): test %rax,%rax
f9d9(3): mov %rax,%rbp
f9dc(2): jns 0x24(%rip)
f9de(5): call 0xffff2f72(%rip)
f9e3(2): mov (%rax),%eax
f9e5(3): cmp $0x4,%eax
f9e8(2): jz 0xffffffe0(%rip)
f9ea(3): cmp $0x16,%eax
f9ed(2): jnz 0x13(%rip)
f9ef(7): cmp $0x7ff00000,%rbx
f9f6(2): jbe 0xa(%rip)
f9f8(5): mov $0x7ff00000,%ebx
f9fd(2): jmp 0xffffffcb(%rip)
f9ff(1): nop 
fa00(4): add $0x8,%rsp
fa04(3): mov %rbp,%rax
fa07(1): pop %rbx
fa08(1): pop %rbp
fa09(2): pop %r12
fa0b(2): pop %r13
fa0d(1): ret near (%rsp)

"same_nameat.part.0" :
fa10(2): push %r13
fa12(2): push %r12
fa14(3): mov %edi,%r13d
fa17(1): push %rbp
fa18(1): push %rbx
fa19(3): mov %rsi,%rdi
fa1c(2): mov %edx,%ebp
fa1e(3): mov %rcx,%r12
fa21(7): sub $0x138,%rsp
fa28(9): mov $0x28,%rax
fa31(8): mov %rax,0x128(%rsp)
fa39(2): xor %eax,%eax
fa3b(5): call 0xffffb885(%rip)
fa40(3): mov %rsp,%rcx
fa43(6): mov $0x100,%r8d
fa49(3): mov %rax,%rdx
fa4c(3): mov %r13d,%esi
fa4f(5): mov $0x1,%edi
fa54(3): mov %rax,%rbx
fa57(5): call 0xffff3129(%rip)
fa5c(2): test %eax,%eax
fa5e(6): jnz 0xb2(%rip)
fa64(3): mov %rbx,%rdi
fa67(5): call 0xffff3669(%rip)
fa6c(3): mov %r12,%rdi
fa6f(5): call 0xffffb851(%rip)
fa74(8): lea 0x90(%rsp),%rcx
fa7c(6): mov $0x100,%r8d
fa82(3): mov %rax,%rdx
fa85(2): mov %ebp,%esi
fa87(5): mov $0x1,%edi
fa8c(3): mov %rax,%rbx
fa8f(5): call 0xffff30f1(%rip)
fa94(2): test %eax,%eax
fa96(2): jnz 0x52(%rip)
fa98(2): xor %ebp,%ebp
fa9a(8): mov 0x98(%rsp),%rax
faa2(5): cmp %rax,0x8(%rsp)
faa7(2): jnz 0x12(%rip)
faa9(8): mov 0x90(%rsp),%rax
fab1(4): cmp %rax,(%rsp)
fab5(4): setz %bpl
fab9(3): mov %rbx,%rdi
fabc(5): call 0xffff3614(%rip)
fac1(8): mov 0x128(%rsp),%rdx
fac9(9): xor $0x28,%rdx
fad2(2): mov %ebp,%eax
fad4(2): jnz 0x5e(%rip)
fad6(7): add $0x138,%rsp
fadd(1): pop %rbx
fade(1): pop %rbp
fadf(2): pop %r12
fae1(2): pop %r13
fae3(1): ret near (%rsp)
fae4(4): nop 0x0(%rax)
fae8(5): call 0xffff2e68(%rip)
faed(2): mov (%rax),%esi
faef(7): lea 0x936a(%rip),%rdx
faf6(3): mov %rbx,%rcx
faf9(5): mov $0x1,%edi
fafe(2): xor %eax,%eax
fb00(5): call 0xffff3430(%rip)
fb05(2): jmp 0xffffff93(%rip)
fb07(9): nop 0x0(%rax,%rax,1)
fb10(5): call 0xffff2e40(%rip)
fb15(2): mov (%rax),%esi
fb17(7): lea 0x9342(%rip),%rdx
fb1e(3): mov %rbx,%rcx
fb21(5): mov $0x1,%edi
fb26(2): xor %eax,%eax
fb28(5): call 0xffff3408(%rip)
fb2d(5): jmp 0xffffff37(%rip)
fb32(5): call 0xffff2ffe(%rip)

"same_nameat" :
fb40(2): push %r15
fb42(2): push %r14
fb44(3): mov %edx,%r15d
fb47(2): push %r13
fb49(2): push %r12
fb4b(1): push %rbp
fb4c(1): push %rbx
fb4d(3): mov %rcx,%rbp
fb50(3): mov %rsi,%rbx
fb53(4): sub $0x18,%rsp
fb57(4): mov %edi,0xc(%rsp)
fb5b(3): mov %rsi,%rdi
fb5e(5): call 0xffffb842(%rip)
fb63(3): mov %rbp,%rdi
fb66(3): mov %rax,%r12
fb69(5): call 0xffffb837(%rip)
fb6e(3): mov %r12,%rdi
fb71(3): mov %rax,%r13
fb74(5): call 0xffffb88c(%rip)
fb79(3): mov %r13,%rdi
fb7c(3): mov %rax,%r14
fb7f(5): call 0xffffb881(%rip)
fb84(3): cmp %rax,%r14
fb87(2): jz 0x19(%rip)
fb89(4): add $0x18,%rsp
fb8d(2): xor %eax,%eax
fb8f(1): pop %rbx
fb90(1): pop %rbp
fb91(2): pop %r12
fb93(2): pop %r13
fb95(2): pop %r14
fb97(2): pop %r15
fb99(1): ret near (%rsp)
fb9a(6): nop 0x0(%rax,%rax,1)
fba0(3): mov %r14,%rdx
fba3(3): mov %r13,%rsi
fba6(3): mov %r12,%rdi
fba9(5): call 0xffff30e7(%rip)
fbae(2): test %eax,%eax
fbb0(2): jnz 0xffffffd9(%rip)
fbb2(4): mov 0xc(%rsp),%edi
fbb6(4): add $0x18,%rsp
fbba(3): mov %rbp,%rcx
fbbd(3): mov %r15d,%edx
fbc0(3): mov %rbx,%rsi
fbc3(1): pop %rbx
fbc4(1): pop %rbp
fbc5(2): pop %r12
fbc7(2): pop %r13
fbc9(2): pop %r14
fbcb(2): pop %r15
fbcd(5): jmp 0xfffffe43(%rip)

"same_name" :
fbe0(5): mov $0xffffff9c,%edx
fbe5(3): mov %rsi,%rcx
fbe8(3): mov %rdi,%rsi
fbeb(2): mov %edx,%edi
fbed(5): jmp 0xffffff53(%rip)

"direntry_cmp_inode" :
fc00(4): mov 0x8(%rsi),%rax
fc04(4): cmp %rax,0x8(%rdi)
fc08(2): jb 0x10(%rip)
fc0a(3): setnbe %al
fc0d(3): movzx %al,%eax
fc10(1): ret near (%rsp)
fc11(7): nop 0x0(%rax)
fc18(5): mov $0xffffffff,%eax
fc1d(1): ret near (%rsp)

"direntry_cmp_name" :
fc20(3): mov (%rsi),%rsi
fc23(3): mov (%rdi),%rdi
fc26(5): jmp 0xffff30ca(%rip)

"streamsavedir" :
fc30(2): push %r15
fc32(7): lea 0x20cd87(%rip),%rax
fc39(2): push %r14
fc3b(2): push %r13
fc3d(2): push %r12
fc3f(2): mov %esi,%esi
fc41(1): push %rbp
fc42(1): push %rbx
fc43(4): sub $0x48,%rsp
fc47(4): mov 0x0(%rax,%rsi,8),%rax
fc4b(3): test %rdi,%rdi
fc4e(5): mov %rax,0x8(%rsp)
fc53(6): jz 0x30a(%rip)
fc59(3): mov %rdi,%rbx
fc5c(3): xor %r14d,%r14d
fc5f(3): xor %r12d,%r12d
fc62(5): call 0xffff2cee(%rip)
fc67(3): xor %r13d,%r13d
fc6a(3): mov %rax,%rbp
fc6d(9): mov $0x0,0x28(%rsp)
fc76(9): mov $0x0,0x10(%rsp)
fc7f(9): mov $0x0,0x20(%rsp)
fc88(2): jmp 0xc(%rip)
fc8a(6): nop 0x0(%rax,%rax,1)
fc90(2): test %al,%al
fc92(2): jnz 0x37(%rip)
fc94(7): mov $0x0,0x0(%rbp)
fc9b(3): mov %rbx,%rdi
fc9e(5): call 0xffff3142(%rip)
fca3(3): test %rax,%rax
fca6(3): mov %rax,%rcx
fca9(6): jz 0xa7(%rip)
fcaf(4): lea 0x13(%rax),%r15
fcb3(4): movzx 0x13(%rax),%eax
fcb7(2): cmp $0x2e,%al
fcb9(2): jnz 0xffffffd7(%rip)
fcbb(4): cmp $0x2e,0x14(%rcx)
fcbf(2): jz 0x81(%rip)
fcc1(4): movzx 0x14(%rcx),%eax
fcc5(2): test %al,%al
fcc7(2): jz 0xffffffcd(%rip)
fcc9(3): mov %r15,%rdi
fccc(5): mov %rcx,0x30(%rsp)
fcd1(5): call 0xffff2e1f(%rip)
fcd6(4): add $0x1,%rax
fcda(6): cmp $0x0,0x8(%rsp)
fce0(5): mov %rax,0x18(%rsp)
fce5(6): jz 0x143(%rip)
fceb(5): cmp 0x28(%rsp),%r12
fcf0(5): lea 0x1(%r12),%rax
fcf5(5): mov 0x30(%rsp),%rcx
fcfa(5): mov %rax,0x38(%rsp)
fcff(6): jz 0x1b2(%rip)
fd05(4): shl/sal $0x4,%r12
fd09(3): mov %r15,%rdi
fd0c(5): add 0x10(%rsp),%r12
fd11(5): mov %rcx,0x30(%rsp)
fd16(5): call 0x252a(%rip)
fd1b(5): mov 0x30(%rsp),%rcx
fd20(5): add 0x18(%rsp),%r14
fd25(4): mov %rax,(%r12)
fd29(3): mov (%rcx),%rax
fd2c(5): mov %rax,0x8(%r12)
fd31(5): mov 0x38(%rsp),%r12
fd36(5): jmp 0xffffff5e(%rip)
fd3b(5): nop 0x0(%rax,%rax,1)
fd40(4): movzx 0x15(%rcx),%eax
fd44(5): jmp 0xffffff4c(%rip)
fd49(7): nop 0x0(%rax)
fd50(3): mov 0x0(%rbp),%ebx
fd53(2): test %ebx,%ebx
fd55(6): jnz 0x1eb(%rip)
fd5b(6): cmp $0x0,0x8(%rsp)
fd61(6): jz 0xaf(%rip)
fd67(3): test %r12,%r12
fd6a(4): lea 0x1(%r14),%rbx
fd6e(2): jnz 0x32(%rip)
fd70(3): mov %rbx,%rdi
fd73(5): call 0x229d(%rip)
fd78(3): mov %rax,%r13
fd7b(3): mov %rax,%rbx
fd7e(5): mov 0x10(%rsp),%rdi
fd83(5): call 0xffff334d(%rip)
fd88(3): mov $0x0,(%rbx)
fd8b(4): add $0x48,%rsp
fd8f(3): mov %r13,%rax
fd92(1): pop %rbx
fd93(1): pop %rbp
fd94(2): pop %r12
fd96(2): pop %r13
fd98(2): pop %r14
fd9a(2): pop %r15
fd9c(1): ret near (%rsp)
fd9d(3): nop (%rax)
fda0(5): mov 0x10(%rsp),%r15
fda5(5): mov 0x8(%rsp),%rcx
fdaa(3): mov %r12,%rsi
fdad(5): mov $0x10,%edx
fdb2(4): shl/sal $0x4,%r12
fdb6(3): mov %r15,%rdi
fdb9(3): mov %r15,%rbp
fdbc(3): add %r15,%r12
fdbf(5): call 0xffff2c21(%rip)
fdc4(3): mov %rbx,%rdi
fdc7(2): xor %ebx,%ebx
fdc9(5): call 0x2247(%rip)
fdce(3): mov %rax,%r13
fdd1(7): nop 0x0(%rax)
fdd8(4): mov 0x0(%rbp),%rsi
fddc(5): lea 0x0(%r13,%rbx,1),%r14
fde1(4): add $0x10,%rbp
fde5(3): mov %r14,%rdi
fde8(5): call 0xffff2cc8(%rip)
fded(4): mov 0xfffffff0(%rbp),%rdi
fdf1(3): sub %r14,%rax
fdf4(5): lea 0x1(%rbx,%rax,1),%rbx
fdf9(5): call 0xffff32d7(%rip)
fdfe(3): cmp %rbp,%r12
fe01(2): jnz 0xffffffd7(%rip)
fe03(3): add %r13,%rbx
fe06(5): jmp 0xffffff78(%rip)
fe0b(5): nop 0x0(%rax,%rax,1)
fe10(5): cmp %r14,0x20(%rsp)
fe15(6): jz 0xee(%rip)
fe1b(5): lea 0x0(%r13,%r14,1),%rbx
fe20(5): jmp 0xffffff68(%rip)
fe25(3): nop (%rax)
fe28(5): mov 0x18(%rsp),%rsi
fe2d(5): mov 0x20(%rsp),%rax
fe32(3): mov %rsi,%rdx
fe35(3): sub %r14,%rax
fe38(3): add %r14,%rdx
fe3b(5): mov %rdx,0x30(%rsp)
fe40(3): setb %dl
fe43(3): cmp %rsi,%rax
fe46(3): movzx %dl,%edx
fe49(2): jnbe 0x4c(%rip)
fe4b(3): test %rdx,%rdx
fe4e(6): jnz 0xeb(%rip)
fe54(3): test %r13,%r13
fe57(5): mov 0x30(%rsp),%rdx
fe5c(6): jz 0xc3(%rip)
fe62(a): mov $0x6148914691236517203,%rax
fe6c(3): cmp %rax,%rdx
fe6f(6): jnbe 0xca(%rip)
fe75(3): mov %rdx,%rax
fe78(3): shr $0x1,%rax
fe7b(5): lea 0x1(%rdx,%rax,1),%rax
fe80(5): mov %rax,0x20(%rsp)
fe85(5): mov 0x20(%rsp),%rsi
fe8a(3): mov %r13,%rdi
fe8d(5): call 0x21e3(%rip)
fe92(3): mov %rax,%r13
fe95(5): mov 0x18(%rsp),%rdx
fe9a(5): lea 0x0(%r13,%r14,1),%rdi
fe9f(3): mov %r15,%rsi
fea2(5): call 0xffff2ede(%rip)
fea7(5): mov 0x30(%rsp),%r14
feac(5): jmp 0xfffffde8(%rip)
feb1(6): cmp $0x0,0x10(%rsp)
feb7(6): jz 0xae(%rip)
febd(a): mov $0x384307168202282324,%rax
fec7(3): cmp %rax,%r12
feca(2): jnbe 0x6f(%rip)
fecc(3): mov %r12,%rax
fecf(3): shr $0x1,%rax
fed2(5): add 0x38(%rsp),%rax
fed7(5): mov %rax,0x28(%rsp)
fedc(5): mov 0x28(%rsp),%rsi
fee1(5): mov 0x10(%rsp),%rdi
fee6(5): mov %rcx,0x30(%rsp)
feeb(4): shl/sal $0x4,%rsi
feef(5): call 0x2181(%rip)
fef4(5): mov 0x30(%rsp),%rcx
fef9(5): mov %rax,0x10(%rsp)
fefe(5): jmp 0xfffffe07(%rip)
ff03(5): mov 0x20(%rsp),%rbx
ff08(3): mov %r13,%rdi
ff0b(4): lea 0x1(%rbx),%rsi
ff0f(5): call 0x2161(%rip)
ff14(3): mov %rax,%r13
ff17(3): add %rax,%rbx
ff1a(5): jmp 0xfffffe6e(%rip)
ff1f(3): test %rdx,%rdx
ff22(5): mov $0x80,%eax
ff27(4): cmovne %rdx,%rax
ff2b(3): test %rax,%rax
ff2e(5): mov %rax,0x20(%rsp)
ff33(6): jns 0xffffff52(%rip)
ff39(5): call 0x2327(%rip)
ff3e(2): nop 
ff40(5): mov 0x10(%rsp),%rdi
ff45(5): call 0xffff318b(%rip)
ff4a(3): mov %r13,%rdi
ff4d(3): xor %r13d,%r13d
ff50(5): call 0xffff3180(%rip)
ff55(3): mov %ebx,0x0(%rbp)
ff58(5): jmp 0xfffffe33(%rip)
ff5d(3): xor %r13d,%r13d
ff60(5): jmp 0xfffffe2b(%rip)
ff65(3): test %r12,%r12
ff68(5): mov $0x8,%eax
ff6d(5): mov $0x10,%edx
ff72(4): cmovne %r12,%rax
ff76(2): xor %esi,%esi
ff78(3): mov %rax,%rdi
ff7b(5): mov %rax,0x28(%rsp)
ff80(3): mov %rdx,%rax
ff83(3): mul %rax,%rdi,%rdx
ff86(2): jo 0x1b(%rip)
ff88(3): test %rax,%rax
ff8b(2): js 0xffffffae(%rip)
ff8d(3): test %rsi,%rsi
ff90(2): jnz 0xffffffa9(%rip)
ff92(5): lea 0x1(%r12),%rax
ff97(5): mov %rax,0x38(%rsp)
ff9c(5): jmp 0xffffff40(%rip)
ffa1(5): mov $0x1,%esi
ffa6(2): jmp 0xffffffe2(%rip)

"savedir" :
ffb0(2): push %r12
ffb2(1): push %rbp
ffb3(2): mov %esi,%ebp
ffb5(1): push %rbx
ffb6(5): call 0x2e8a(%rip)
ffbb(3): test %rax,%rax
ffbe(2): jz 0x2a(%rip)
ffc0(2): mov %ebp,%esi
ffc2(3): mov %rax,%rbx
ffc5(3): mov %rax,%rdi
ffc8(5): call 0xfffffc68(%rip)
ffcd(3): mov %rbx,%rdi
ffd0(3): mov %rax,%rbp
ffd3(5): call 0xffff2c8d(%rip)
ffd8(2): test %eax,%eax
ffda(2): jnz 0x16(%rip)
ffdc(3): mov %rbp,%rax
ffdf(1): pop %rbx
ffe0(1): pop %rbp
ffe1(2): pop %r12
ffe3(1): ret near (%rsp)
ffe4(4): nop 0x0(%rax)
ffe8(2): xor %ebp,%ebp
ffea(2): jmp 0xfffffff2(%rip)
ffec(4): nop 0x0(%rax)
fff0(5): call 0xffff2960(%rip)
fff5(3): mov (%rax),%r12d
fff8(3): mov %rax,%rbx
fffb(3): mov %rbp,%rdi
fffe(5): call 0xffff30d2(%rip)
10003(2): xor %ebp,%ebp
10005(3): mov %r12d,(%rbx)
10008(2): jmp 0xffffffd4(%rip)

"savewd_init" :
10010(6): mov $0x0,(%rdi)
10016(1): ret near (%rsp)

"savewd_errno" :
10020(2): xor %eax,%eax
10022(3): cmp $0x4,(%rdi)
10025(2): jz 0xb(%rip)
10027(2): REP ret near (%rsp)
10029(7): nop 0x0(%rax)
10030(3): mov 0x4(%rdi),%eax
10033(1): ret near (%rsp)

"savewd_chdir" :
10040(3): test %rcx,%rcx
10043(2): push %r14
10045(3): mov %edx,%r14d
10048(2): push %r13
1004a(3): mov %rsi,%r13
1004d(2): push %r12
1004f(3): mov %rdi,%r12
10052(1): push %rbp
10053(3): mov %rcx,%rbp
10056(1): push %rbx
10057(6): jz 0x121(%rip)
1005d(2): mov %edx,%esi
1005f(3): mov %r13,%rdi
10062(3): shl/sal $0x11,%esi
10065(6): and $0x20000,%esi
1006b(6): or $0x10900,%esi
10071(5): call 0xffff29ff(%rip)
10076(3): mov %eax,0x0(%rbp)
10079(2): mov %eax,%ebx
1007b(5): call 0xffff28d5(%rip)
10080(2): mov (%rax),%eax
10082(3): mov %eax,0x4(%rbp)
10085(2): test %ebx,%ebx
10087(2): js 0x41(%rip)
10089(4): and $0x2,%r14d
1008d(2): jz 0x49(%rip)
1008f(3): test %rbp,%rbp
10092(3): setz %al
10095(3): xor %r14d,%r14d
10098(2): test %ebx,%ebx
1009a(2): js 0x1c(%rip)
1009c(2): test %al,%al
1009e(2): jz 0x18(%rip)
100a0(5): call 0xffff28b0(%rip)
100a5(3): mov (%rax),%r12d
100a8(3): mov %rax,%rbp
100ab(2): mov %ebx,%edi
100ad(5): call 0xffff2b83(%rip)
100b2(4): mov %r12d,0x0(%rbp)
100b6(1): pop %rbx
100b7(3): mov %r14d,%eax
100ba(1): pop %rbp
100bb(2): pop %r12
100bd(2): pop %r13
100bf(2): pop %r14
100c1(1): ret near (%rsp)
100c2(6): nop 0x0(%rax,%rax,1)
100c8(5): call 0xffff2888(%rip)
100cd(3): cmp $0xd,(%rax)
100d0(6): jnz 0x1d0(%rip)
100d6(4): mov (%r12),%ecx
100da(3): cmp $0x5,%ecx
100dd(6): jnbe 0x1ed(%rip)
100e3(5): mov $0x1,%eax
100e8(3): shl/sal %cl,%rax
100eb(2): test $0x36,%al
100ed(2): jnz 0x37(%rip)
100ef(2): test $0x8,%al
100f1(6): jnz 0xcf(%rip)
100f7(2): test %ecx,%ecx
100f9(6): jnz 0x1d1(%rip)
100ff(7): lea 0x7d5d(%rip),%rdi
10106(2): xor %esi,%esi
10108(2): xor %eax,%eax
1010a(5): call 0xffffb386(%rip)
1010f(2): test %eax,%eax
10111(6): js 0x10f(%rip)
10117(8): mov $0x1,(%r12)
1011f(5): mov %eax,0x4(%r12)
10124(2): test %ebx,%ebx
10126(2): js 0x32(%rip)
10128(2): mov %ebx,%edi
1012a(5): call 0xffff2d36(%rip)
1012f(2): test %eax,%eax
10131(3): mov %eax,%r14d
10134(2): jnz 0x7c(%rip)
10136(5): cmp $0x5,(%r12)
1013b(6): jnbe 0x170(%rip)
10141(4): mov (%r12),%eax
10145(7): lea 0x8704(%rip),%rdx
1014c(4): movsxd 0x0(%rdx,%rax,4),%rax
10150(3): add %rdx,%rax
10153(2): jmp %rax
10155(3): nop (%rax)
10158(3): mov %r13,%rdi
1015b(5): call 0xffff29c5(%rip)
10160(2): test %eax,%eax
10162(3): mov %eax,%r14d
10165(2): jz 0xffffffd1(%rip)
10167(1): pop %rbx
10168(3): mov %r14d,%eax
1016b(1): pop %rbp
1016c(2): pop %r12
1016e(2): pop %r13
10170(2): pop %r14
10172(1): ret near (%rsp)
10173(5): nop 0x0(%rax,%rax,1)
10178(3): test $0x1,%dl
1017b(5): mov $0xffffffff,%ebx
10180(6): jz 0xffffff56(%rip)
10186(2): mov %edx,%esi
10188(3): mov %r13,%rdi
1018b(3): shl/sal $0x11,%esi
1018e(6): and $0x20000,%esi
10194(6): or $0x10900,%esi
1019a(5): call 0xffff28d6(%rip)
1019f(2): mov %eax,%ebx
101a1(5): jmp 0xfffffee4(%rip)
101a6(a): nop 0x0(%rax,%rax,1)
101b0(3): test %rbp,%rbp
101b3(3): setz %al
101b6(5): jmp 0xfffffee2(%rip)
101bb(5): nop 0x0(%rax,%rax,1)
101c0(5): mov 0x4(%r12),%edx
101c5(2): test %edx,%edx
101c7(6): js 0x92(%rip)
101cd(2): test %ebx,%ebx
101cf(6): jns 0xffffff59(%rip)
101d5(2): jmp 0xffffff83(%rip)
101d7(9): nop 0x0(%rax,%rax,1)
101e0(8): mov $0x2,(%r12)
101e8(5): jmp 0xfffffea7(%rip)
101ed(3): nop (%rax)
101f0(5): mov 0x4(%r12),%eax
101f5(2): test %eax,%eax
101f7(6): jz 0xfffffe98(%rip)
101fd(7): lea 0x86bc(%rip),%rcx
10204(7): lea 0x8625(%rip),%rsi
1020b(7): lea 0x85d6(%rip),%rdi
10212(5): mov $0x9b,%edx
10217(5): call 0xffff29c9(%rip)
1021c(4): nop 0x0(%rax)
10220(5): call 0xffff2730(%rip)
10225(2): mov (%rax),%eax
10227(3): cmp $0xd,%eax
1022a(2): jz 0x1e(%rip)
1022c(3): cmp $0x74,%eax
1022f(2): jz 0x19(%rip)
10231(8): mov $0x4,(%r12)
10239(5): mov %eax,0x4(%r12)
1023e(5): jmp 0xfffffee6(%rip)
10243(5): nop 0x0(%rax,%rax,1)
10248(8): mov $0x3,(%r12)
10250(9): mov $0xffffffff,0x4(%r12)
10259(5): call 0xffff2e47(%rip)
1025e(3): cmp $0x0,%eax
10261(5): mov %eax,0x4(%r12)
10266(6): jz 0xfffffebe(%rip)
1026c(5): mov $0x1,%eax
10271(6): mov $0xfffffffe,%r14d
10277(6): jnle 0xfffffe21(%rip)
1027d(8): mov $0x4,(%r12)
10285(5): call 0xffff26cb(%rip)
1028a(2): mov (%rax),%eax
1028c(5): mov %eax,0x4(%r12)
10291(5): jmp 0xfffffe93(%rip)
10296(a): nop 0x0(%rax,%rax,1)
102a0(6): mov $0xffffffff,%r14d
102a6(5): jmp 0xfffffe10(%rip)
102ab(7): lea 0x860e(%rip),%rcx
102b2(7): lea 0x8577(%rip),%rsi
102b9(7): lea 0x8567(%rip),%rdi
102c0(5): mov $0x9f,%edx
102c5(5): call 0xffff291b(%rip)
102ca(7): lea 0x85df(%rip),%rcx
102d1(7): lea 0x8558(%rip),%rsi
102d8(7): lea 0x8548(%rip),%rdi
102df(5): mov $0x63,%edx
102e4(5): call 0xffff28fc(%rip)

"savewd_restore" :
102f0(2): push %r12
102f2(1): push %rbp
102f3(1): push %rbx
102f4(4): sub $0x10,%rsp
102f8(9): mov $0x28,%rax
10301(5): mov %rax,0x8(%rsp)
10306(2): xor %eax,%eax
10308(3): cmp $0x4,(%rdi)
1030b(6): jnbe 0x112(%rip)
10311(2): mov (%rdi),%eax
10313(7): lea 0x854e(%rip),%rdx
1031a(3): mov %rdi,%rbx
1031d(4): movsxd 0x0(%rdx,%rax,4),%rax
10321(3): add %rdx,%rax
10324(2): jmp %rax
10326(a): nop 0x0(%rax,%rax,1)
10330(3): mov 0x4(%rdi),%ebp
10333(3): cmp $0x0,%ebp
10336(6): jz 0x106(%rip)
1033c(5): lea 0x4(%rsp),%r12
10341(2): jnle 0x49(%rip)
10343(2): xor %eax,%eax
10345(5): mov 0x8(%rsp),%rcx
1034a(9): xor $0x28,%rcx
10353(6): jnz 0xc5(%rip)
10359(4): add $0x10,%rsp
1035d(1): pop %rbx
1035e(1): pop %rbp
1035f(2): pop %r12
10361(1): ret near (%rsp)
10362(6): nop 0x0(%rax,%rax,1)
10368(4): mov 0x4(%rdi),%r12d
1036c(5): call 0xffff25e4(%rip)
10371(3): mov %rax,%rbp
10374(4): mov %r12d,0x0(%rbp)
10378(5): mov $0xffffffff,%eax
1037d(2): jmp 0xffffffc8(%rip)
1037f(1): nop 
10380(5): call 0xffff25d0(%rip)
10385(3): cmp $0x4,(%rax)
10388(2): jnz 0x71(%rip)
1038a(2): xor %edx,%edx
1038c(3): mov %r12,%rsi
1038f(2): mov %ebp,%edi
10391(5): call 0xffff2baf(%rip)
10396(2): test %eax,%eax
10398(2): js 0xffffffe8(%rip)
1039a(4): mov 0x4(%rsp),%eax
1039e(7): mov $0xffffffff,0x4(%rbx)
103a5(2): mov %eax,%edi
103a7(3): and $0x7f,%edi
103aa(2): jz 0xb(%rip)
103ac(5): call 0xffff2574(%rip)
103b1(4): mov 0x4(%rsp),%eax
103b5(3): movzx %ah,%eax
103b8(2): jmp 0xffffff8d(%rip)
103ba(6): nop 0x0(%rax,%rax,1)
103c0(3): mov 0x4(%rdi),%edi
103c3(5): call 0xffff2a9d(%rip)
103c8(2): test %eax,%eax
103ca(2): jnz 0xd(%rip)
103cc(6): mov $0x1,(%rbx)
103d2(5): jmp 0xffffff73(%rip)
103d7(5): call 0xffff2579(%rip)
103dc(3): mov 0x4(%rbx),%edi
103df(3): mov (%rax),%r12d
103e2(3): mov %rax,%rbp
103e5(5): call 0xffff284b(%rip)
103ea(6): mov $0x4,(%rbx)
103f0(4): mov %r12d,0x4(%rbx)
103f4(5): jmp 0xffffff80(%rip)
103f9(7): lea 0x84a0(%rip),%rcx
10400(7): lea 0x8429(%rip),%rsi
10407(7): lea 0x83ed(%rip),%rdi
1040e(5): mov $0xd8,%edx
10413(5): call 0xffff27cd(%rip)
10418(5): call 0xffff2718(%rip)
1041d(7): lea 0x847c(%rip),%rcx
10424(7): lea 0x8405(%rip),%rsi
1042b(7): lea 0x83f5(%rip),%rdi
10432(5): mov $0xe2,%edx
10437(5): call 0xffff27a9(%rip)
1043c(2): mov %esi,%edi
1043e(5): call 0xffff2542(%rip)
10443(3): nop (%rax)
10446(a): nop 0x0(%rax,%rax,1)
10450(1): push %rbx
10451(3): cmp $0x4,(%rdi)
10454(2): jnbe 0x52(%rip)
10456(2): mov (%rdi),%eax
10458(7): lea 0x841d(%rip),%rdx
1045f(3): mov %rdi,%rbx
10462(4): movsxd 0x0(%rdx,%rax,4),%rax
10466(3): add %rdx,%rax
10469(2): jmp %rax
1046b(5): nop 0x0(%rax,%rax,1)
10470(3): mov 0x4(%rdi),%edi
10473(5): call 0xffff27bd(%rip)
10478(6): mov $0x5,(%rbx)
1047e(1): pop %rbx
1047f(1): ret near (%rsp)
10480(3): mov 0x4(%rdi),%eax
10483(2): test %eax,%eax
10485(2): js 0xfffffff3(%rip)
10487(7): lea 0x8402(%rip),%rcx
1048e(7): lea 0x839b(%rip),%rsi
10495(7): lea 0x837b(%rip),%rdi
1049c(5): mov $0xf7,%edx
104a1(5): call 0xffff273f(%rip)
104a6(7): lea 0x83e3(%rip),%rcx
104ad(7): lea 0x837c(%rip),%rsi
104b4(7): lea 0x836c(%rip),%rdi
104bb(5): mov $0xfb,%edx
104c0(5): call 0xffff2720(%rip)

"savewd_finish" :
10450(1): push %rbx
10451(3): cmp $0x4,(%rdi)
10454(2): jnbe 0x52(%rip)
10456(2): mov (%rdi),%eax
10458(7): lea 0x841d(%rip),%rdx
1045f(3): mov %rdi,%rbx
10462(4): movsxd 0x0(%rdx,%rax,4),%rax
10466(3): add %rdx,%rax
10469(2): jmp %rax
1046b(5): nop 0x0(%rax,%rax,1)
10470(3): mov 0x4(%rdi),%edi
10473(5): call 0xffff27bd(%rip)
10478(6): mov $0x5,(%rbx)
1047e(1): pop %rbx
1047f(1): ret near (%rsp)
10480(3): mov 0x4(%rdi),%eax
10483(2): test %eax,%eax
10485(2): js 0xfffffff3(%rip)
10487(7): lea 0x8402(%rip),%rcx
1048e(7): lea 0x839b(%rip),%rsi
10495(7): lea 0x837b(%rip),%rdi
1049c(5): mov $0xf7,%edx
104a1(5): call 0xffff273f(%rip)
104a6(7): lea 0x83e3(%rip),%rcx
104ad(7): lea 0x837c(%rip),%rsi
104b4(7): lea 0x836c(%rip),%rdi
104bb(5): mov $0xfb,%edx
104c0(5): call 0xffff2720(%rip)

"savewd_process_files" :
104d0(2): push %r15
104d2(2): push %r14
104d4(2): mov %edi,%eax
104d6(2): push %r13
104d8(2): push %r12
104da(3): sub $0x1,%eax
104dd(1): push %rbp
104de(1): push %rbx
104df(3): mov %rcx,%r12
104e2(3): mov %rdx,%rbp
104e5(4): sub $0x38,%rsp
104e9(9): mov $0x28,%rcx
104f2(5): mov %rcx,0x28(%rsp)
104f7(2): xor %ecx,%ecx
104f9(2): test %eax,%eax
104fb(4): mov %edi,0x18(%rsp)
104ff(5): mov %rsi,0x10(%rsp)
10504(8): mov $0x0,0x20(%rsp)
1050c(4): mov %eax,0x1c(%rsp)
10510(2): js 0x42(%rip)
10512(3): mov %eax,%r13d
10515(2): cwde 
10517(8): lea 0x0(,%rax,8),%rdx
1051f(4): mov 0x0(%rsi,%rax,8),%rax
10523(3): cmp $0x2f,(%rax)
10526(6): jnz 0xb2(%rip)
1052c(5): lea 0xfffffff8(%rsi,%rdx,1),%rax
10531(2): jmp 0x17(%rip)
10533(5): nop 0x0(%rax,%rax,1)
10538(3): mov (%rax),%rdx
1053b(4): sub $0x8,%rax
1053f(3): cmp $0x2f,(%rdx)
10542(6): jnz 0x96(%rip)
10548(4): sub $0x1,%r13d
1054c(4): cmp $0xff,%r13d
10550(2): jnz 0xffffffe8(%rip)
10552(5): lea 0x20(%rsp),%rbx
10557(3): xor %r15d,%r15d
1055a(3): xor %r13d,%r13d
1055d(3): mov %rbx,%rdi
10560(5): call 0xfffffef0(%rip)
10565(5): cmp %r13d,0x18(%rsp)
1056a(2): jle 0x41(%rip)
1056c(4): mov 0x1c(%rsp),%ecx
10570(5): mov 0x10(%rsp),%rdi
10575(3): movsxd %r13d,%rax
10578(3): sub %r13d,%ecx
1057b(4): lea 0x0(%rdi,%rax,8),%r14
1057f(3): mov %rcx,%r13
10582(3): add %rax,%r13
10585(5): lea 0x8(%rdi,%r13,8),%r13
1058a(6): nop 0x0(%rax,%rax,1)
10590(3): mov (%r14),%rdi
10593(3): mov %r12,%rdx
10596(3): mov %rbx,%rsi
10599(2): call %rbp
1059b(3): cmp %eax,%r15d
1059e(4): cmovnge %eax,%r15d
105a2(4): add $0x8,%r14
105a6(3): cmp %r13,%r14
105a9(2): jnz 0xffffffe7(%rip)
105ab(5): mov 0x28(%rsp),%rcx
105b0(9): xor $0x28,%rcx
105b9(3): mov %r15d,%eax
105bc(6): jnz 0x9b(%rip)
105c2(4): add $0x38,%rsp
105c6(1): pop %rbx
105c7(1): pop %rbp
105c8(2): pop %r12
105ca(2): pop %r13
105cc(2): pop %r14
105ce(2): pop %r15
105d0(1): ret near (%rsp)
105d1(7): nop 0x0(%rax)
105d8(3): test %r13d,%r13d
105db(6): jle 0xffffff77(%rip)
105e1(5): mov 0x10(%rsp),%rcx
105e6(4): lea 0xffffffff(%r13),%eax
105ea(3): xor %r15d,%r15d
105ed(5): lea 0x20(%rsp),%rbx
105f2(5): lea 0x8(%rcx,%rax,8),%rax
105f7(3): mov %rcx,%r14
105fa(5): mov %rax,0x8(%rsp)
105ff(2): xor %eax,%eax
10601(2): jmp 0x47(%rip)
10603(5): nop 0x0(%rax,%rax,1)
10608(3): mov %r12,%rdx
1060b(3): mov %rbx,%rsi
1060e(3): mov (%r14),%rdi
10611(2): call %rbp
10613(3): cmp %eax,%r15d
10616(4): cmovnge %eax,%r15d
1061a(4): mov 0x8(%r14),%rax
1061e(3): cmp $0x2f,(%rax)
10621(2): jz 0x14(%rip)
10623(3): mov %r15d,%esi
10626(3): mov %rbx,%rdi
10629(5): call 0xfffffcc7(%rip)
1062e(3): cmp %eax,%r15d
10631(4): cmovnge %eax,%r15d
10635(4): add $0x8,%r14
10639(5): cmp 0x8(%rsp),%r14
1063e(6): jz 0xffffff1f(%rip)
10644(4): mov 0x20(%rsp),%eax
10648(3): cmp $0x3,%eax
1064b(2): jnz 0xffffffbd(%rip)
1064d(4): mov 0x24(%rsp),%eax
10651(2): test %eax,%eax
10653(2): jnle 0xffffffc7(%rip)
10655(2): jmp 0xffffffb3(%rip)
10657(5): call 0xffff24d9(%rip)

"try_nocreate" :
10660(1): push %rbx
10661(3): mov %rdi,%rsi
10664(5): mov $0x1,%edi
10669(7): sub $0xa0,%rsp
10670(3): mov %rsp,%rdx
10673(9): mov $0x28,%rax
1067c(8): mov %rax,0x98(%rsp)
10684(2): xor %eax,%eax
10686(5): call 0xffff247a(%rip)
1068b(2): mov %eax,%ebx
1068d(5): call 0xffff22c3(%rip)
10692(2): test %ebx,%ebx
10694(2): jz 0x1c(%rip)
10696(2): mov (%rax),%edx
10698(3): cmp $0x4b,%edx
1069b(2): jz 0x15(%rip)
1069d(2): xor %eax,%eax
1069f(3): cmp $0x2,%edx
106a2(3): setnz %al
106a5(2): neg %eax
106a7(2): jmp 0x14(%rip)
106a9(7): nop 0x0(%rax)
106b0(6): mov $0x11,(%rax)
106b6(5): mov $0xffffffff,%eax
106bb(8): mov 0x98(%rsp),%rcx
106c3(9): xor $0x28,%rcx
106cc(2): jnz 0xb(%rip)
106ce(7): add $0xa0,%rsp
106d5(1): pop %rbx
106d6(1): ret near (%rsp)
106d7(5): call 0xffff2459(%rip)

"try_dir" :
106e0(5): mov $0x1c0,%esi
106e5(5): jmp 0xffff22db(%rip)

"try_file" :
106f0(2): mov (%rsi),%esi
106f2(5): mov $0x180,%edx
106f7(2): xor %eax,%eax
106f9(4): and $0x3c,%sil
106fd(4): or $0xc2,%sil
10701(5): jmp 0xffff285f(%rip)

"try_tempname_len" :
10710(2): push %r15
10712(2): push %r14
10714(3): mov %rdi,%r15
10717(2): push %r13
10719(2): push %r12
1071b(3): mov %r8,%r14
1071e(1): push %rbp
1071f(1): push %rbx
10720(2): mov %esi,%ebp
10722(4): sub $0x38,%rsp
10726(5): mov %rdx,0x18(%rsp)
1072b(4): mov %rdi,(%rsp)
1072f(5): mov %rcx,0x20(%rsp)
10734(5): call 0xffff221c(%rip)
10739(5): mov %rax,0x8(%rsp)
1073e(2): mov (%rax),%eax
10740(3): mov %r15,%rdi
10743(4): mov %eax,0x2c(%rsp)
10747(5): call 0xffff23a9(%rip)
1074c(3): movsxd %ebp,%rsi
1074f(4): lea 0x0(%rsi,%r14,1),%rdx
10753(3): cmp %rax,%rdx
10756(6): jnbe 0x115(%rip)
1075c(3): sub %r14,%rax
1075f(3): mov %rax,%rbx
10762(3): sub %rsi,%rbx
10765(7): lea 0x796f(%rip),%rsi
1076c(4): lea 0x0(%r15,%rbx,1),%rax
10770(3): mov %rax,%rdi
10773(5): mov %rax,0x10(%rsp)
10778(5): call 0xffff24d8(%rip)
1077d(3): cmp %rax,%r14
10780(6): jnbe 0xeb(%rip)
10786(2): xor %edi,%edi
10788(3): mov %r14,%rsi
1078b(5): call 0x2b55(%rip)
10790(3): test %rax,%rax
10793(3): mov %rax,%rbp
10796(6): jz 0xe7(%rip)
1079c(4): mov (%rsp),%rax
107a0(7): lea 0x8199(%rip),%r12
107a7(6): mov $0x3a2f8,%r13d
107ad(3): add %r14,%rax
107b0(3): add %rax,%rbx
107b3(5): nop 0x0(%rax,%rax,1)
107b8(3): test %r14,%r14
107bb(5): mov 0x10(%rsp),%r15
107c0(2): jz 0x27(%rip)
107c2(6): nop 0x0(%rax,%rax,1)
107c8(5): mov $0x3d,%esi
107cd(3): mov %rbp,%rdi
107d0(4): add $0x1,%r15
107d4(5): call 0x2b5c(%rip)
107d9(5): movzx 0x0(%r12,%rax,1),%eax
107de(4): mov %al,0xffffffff(%r15)
107e2(3): cmp %rbx,%r15
107e5(2): jnz 0xffffffe3(%rip)
107e7(5): mov 0x18(%rsp),%rsi
107ec(4): mov (%rsp),%rdi
107f0(5): mov 0x20(%rsp),%rax
107f5(2): call %rax
107f7(2): test %eax,%eax
107f9(2): mov %eax,%edx
107fb(2): jns 0x2e(%rip)
107fd(5): mov 0x8(%rsp),%rax
10802(2): mov (%rax),%ecx
10804(3): cmp $0x11,%ecx
10807(2): jnz 0x5d(%rip)
10809(4): sub $0x1,%r13d
1080d(2): jnz 0xffffffab(%rip)
1080f(3): mov %rbp,%rdi
10812(5): call 0x2c5e(%rip)
10817(5): mov 0x8(%rsp),%rax
1081c(5): mov $0xffffffff,%edx
10821(6): mov $0x11,(%rax)
10827(2): jmp 0x2c(%rip)
10829(5): mov 0x8(%rsp),%rcx
1082e(4): mov 0x2c(%rsp),%eax
10832(2): mov %eax,(%rcx)
10834(2): mov %eax,%ecx
10836(3): mov %rbp,%rdi
10839(4): mov %edx,0x10(%rsp)
1083d(3): mov %ecx,(%rsp)
10840(5): call 0x2c30(%rip)
10845(5): mov 0x8(%rsp),%rax
1084a(3): mov (%rsp),%ecx
1084d(4): mov 0x10(%rsp),%edx
10851(2): mov %ecx,(%rax)
10853(4): add $0x38,%rsp
10857(2): mov %edx,%eax
10859(1): pop %rbx
1085a(1): pop %rbp
1085b(2): pop %r12
1085d(2): pop %r13
1085f(2): pop %r14
10861(2): pop %r15
10863(1): ret near (%rsp)
10864(5): mov $0xffffffff,%edx
10869(2): jmp 0xffffffcd(%rip)
1086b(5): mov 0x8(%rsp),%rax
10870(5): mov $0xffffffff,%edx
10875(6): mov $0x16,(%rax)
1087b(2): jmp 0xffffffd8(%rip)
1087d(5): mov $0xffffffff,%edx
10882(2): jmp 0xffffffd1(%rip)

"gen_tempname_len" :
10890(4): sub $0x18,%rsp
10894(3): cmp $0x1,%ecx
10897(4): mov %edx,0xc(%rsp)
1089b(2): jz 0x65(%rip)
1089d(3): cmp $0x2,%ecx
108a0(2): jz 0x28(%rip)
108a2(2): test %ecx,%ecx
108a4(2): jz 0x3c(%rip)
108a6(7): lea 0x8073(%rip),%rcx
108ad(7): lea 0x801c(%rip),%rsi
108b4(7): lea 0x803d(%rip),%rdi
108bb(5): mov $0x147,%edx
108c0(5): call 0xffff2320(%rip)
108c5(3): nop (%rax)
108c8(5): lea 0xc(%rsp),%rdx
108cd(7): lea 0xfffffd8c(%rip),%rcx
108d4(5): call 0xfffffe3c(%rip)
108d9(4): add $0x18,%rsp
108dd(1): ret near (%rsp)
108de(2): nop 
108e0(5): lea 0xc(%rsp),%rdx
108e5(7): lea 0xfffffe04(%rip),%rcx
108ec(5): call 0xfffffe24(%rip)
108f1(4): add $0x18,%rsp
108f5(1): ret near (%rsp)
108f6(a): nop 0x0(%rax,%rax,1)
10900(5): lea 0xc(%rsp),%rdx
10905(7): lea 0xfffffdd4(%rip),%rcx
1090c(5): call 0xfffffe04(%rip)
10911(4): add $0x18,%rsp
10915(1): ret near (%rsp)

"gen_tempname" :
10920(6): mov $0x6,%r8d
10926(5): jmp 0xffffff6a(%rip)

"try_tempname" :
10930(6): mov $0x6,%r8d
10936(5): jmp 0xfffffdda(%rip)

"fd_safer" :
10940(2): push %r13
10942(2): push %r12
10944(1): push %rbp
10945(1): push %rbx
10946(2): mov %edi,%ebx
10948(4): sub $0x8,%rsp
1094c(3): cmp $0x2,%edi
1094f(2): jnbe 0x23(%rip)
10951(5): call 0x35ef(%rip)
10956(3): mov %eax,%r12d
10959(5): call 0xffff1ff7(%rip)
1095e(3): mov (%rax),%r13d
10961(3): mov %rax,%rbp
10964(2): mov %ebx,%edi
10966(5): call 0xffff22ca(%rip)
1096b(3): mov %r12d,%ebx
1096e(4): mov %r13d,0x0(%rbp)
10972(4): add $0x8,%rsp
10976(2): mov %ebx,%eax
10978(1): pop %rbx
10979(1): pop %rbp
1097a(2): pop %r12
1097c(2): pop %r13
1097e(1): ret near (%rsp)

"dev_info_hash" :
10980(3): mov (%rdi),%rax
10983(2): xor %edx,%edx
10985(3): div %rsi,%rax
10988(3): mov %rdx,%rax
1098b(1): ret near (%rsp)

"dev_info_compare" :
10990(3): mov (%rsi),%rax
10993(3): cmp %rax,(%rdi)
10996(3): setz %al
10999(1): ret near (%rsp)

"utimecmpat" :
109a0(2): push %r15
109a2(2): push %r14
109a4(2): push %r13
109a6(2): push %r12
109a8(1): push %rbp
109a9(1): push %rbx
109aa(3): mov %r8d,%ebx
109ad(3): and $0x1,%ebx
109b0(7): sub $0x128,%rsp
109b7(4): mov 0x60(%rcx),%r13
109bb(4): mov 0x58(%rdx),%r14
109bf(9): mov $0x28,%rax
109c8(8): mov %rax,0x118(%rsp)
109d0(2): xor %eax,%eax
109d2(2): test %ebx,%ebx
109d4(4): mov 0x58(%rcx),%r12
109d8(4): mov 0x60(%rdx),%r15
109dc(3): mov %r13d,%r9d
109df(6): jz 0xe9(%rip)
109e5(3): cmp %r12,%r14
109e8(3): mov %edi,%r10d
109eb(5): setz 0x38(%rsp)
109f0(5): movzx 0x38(%rsp),%edi
109f5(3): cmp %r13d,%r15d
109f8(3): setz %al
109fb(3): and %dil,%al
109fe(4): mov %al,0x8(%rsp)
10a02(6): jnz 0x10e(%rip)
10a08(5): lea 0xffffffff(%r12),%rax
10a0d(3): cmp %r14,%rax
10a10(6): jnle 0x108(%rip)
10a16(4): lea 0xffffffff(%r14),%rax
10a1a(3): cmp %r12,%rax
10a1d(6): jnle 0xc2(%rip)
10a23(3): mov %rdx,%rbp
10a26(7): mov 0x20ecf3(%rip),%rdx
10a2d(3): mov %rsi,%r11
10a30(3): test %rdx,%rdx
10a33(6): jz 0x59d(%rip)
10a39(7): mov 0x20ecd8(%rip),%rsi
10a40(3): test %rsi,%rsi
10a43(6): jz 0xdd(%rip)
10a49(4): mov 0x0(%rbp),%rax
10a4d(3): mov %rdx,%rdi
10a50(5): mov %r11,0x28(%rsp)
10a55(5): mov %r10d,0x20(%rsp)
10a5a(5): mov %r9d,0x18(%rsp)
10a5f(3): mov %rax,(%rsi)
10a62(5): call 0xffffbfbe(%rip)
10a67(3): test %rax,%rax
10a6a(5): mov %rax,0x10(%rsp)
10a6f(5): mov 0x18(%rsp),%r9d
10a74(5): mov 0x20(%rsp),%r10d
10a79(5): mov 0x28(%rsp),%r11
10a7e(6): jz 0xfa(%rip)
10a84(7): cmp %rax,0x20ec8d(%rip)
10a8b(6): jz 0x5a5(%rip)
10a91(5): mov 0x10(%rsp),%rax
10a96(4): cmp $0x0,0xc(%rax)
10a9a(3): mov 0x8(%rax),%esi
10a9d(4): mov %esi,0x18(%rsp)
10aa1(6): jz 0x159(%rip)
10aa7(2): xor %eax,%eax
10aa9(6): cmp $0x77359400,%esi
10aaf(3): setz %al
10ab2(2): not %eax
10ab4(2): cwde 
10ab6(3): and %rax,%r12
10ab9(3): mov %r9d,%eax
10abc(3): mov %r13d,%r9d
10abf(1): cdq %eax
10ac0(2): idiv %esi,%eax
10ac2(3): sub %edx,%r9d
10ac5(3): nop (%rax)
10ac8(3): cmp %r14,%r12
10acb(2): jnle 0x4d(%rip)
10acd(5): mov $0x1,%ebx
10ad2(2): jl 0xd(%rip)
10ad4(3): cmp %r15d,%r9d
10ad7(2): jnle 0x41(%rip)
10ad9(3): setl %bl
10adc(3): movzx %bl,%ebx
10adf(8): mov 0x118(%rsp),%rsi
10ae7(9): xor $0x28,%rsi
10af0(2): mov %ebx,%eax
10af2(6): jnz 0x5d6(%rip)
10af8(7): add $0x128,%rsp
10aff(1): pop %rbx
10b00(1): pop %rbp
10b01(2): pop %r12
10b03(2): pop %r13
10b05(2): pop %r14
10b07(2): pop %r15
10b09(1): ret near (%rsp)
10b0a(6): nop 0x0(%rax,%rax,1)
10b10(2): xor %ebx,%ebx
10b12(2): jmp 0xffffffcd(%rip)
10b14(4): nop 0x0(%rax)
10b18(5): mov $0xffffffff,%ebx
10b1d(2): jmp 0xffffffc2(%rip)
10b1f(1): nop 
10b20(5): mov $0x10,%edi
10b25(5): mov %r11,0x28(%rsp)
10b2a(5): mov %r10d,0x20(%rsp)
10b2f(5): mov %r9d,0x18(%rsp)
10b34(5): mov %rdx,0x10(%rsp)
10b39(5): call 0xffff22b7(%rip)
10b3e(3): test %rax,%rax
10b41(3): mov %rax,%rsi
10b44(7): mov %rax,0x20ebcd(%rip)
10b4b(5): mov 0x10(%rsp),%rdx
10b50(5): mov 0x18(%rsp),%r9d
10b55(5): mov 0x20(%rsp),%r10d
10b5a(5): mov 0x28(%rsp),%r11
10b5f(2): jz 0x29(%rip)
10b61(7): mov $0x77359400,0x8(%rax)
10b68(4): mov $0x0,0xc(%rax)
10b6c(5): jmp 0xfffffedd(%rip)
10b71(7): nop 0x0(%rax)
10b78(7): mov 0x20eba1(%rip),%rdx
10b7f(3): test %rdx,%rdx
10b82(6): jz 0x4a0(%rip)
10b88(5): lea 0x50(%rsp),%rcx
10b8d(4): mov 0x0(%rbp),%rax
10b91(3): mov %rdx,%rdi
10b94(5): mov %r11,0x30(%rsp)
10b99(5): mov %r10d,0x28(%rsp)
10b9e(3): mov %rcx,%rsi
10ba1(5): mov %r9d,0x20(%rsp)
10ba6(5): mov %rcx,0x18(%rsp)
10bab(5): mov %rax,0x50(%rsp)
10bb0(5): call 0xffffb400(%rip)
10bb5(3): test %rax,%rax
10bb8(5): mov %rax,0x10(%rsp)
10bbd(5): mov 0x18(%rsp),%rcx
10bc2(5): mov 0x20(%rsp),%r9d
10bc7(5): mov 0x28(%rsp),%r10d
10bcc(5): mov 0x30(%rsp),%r11
10bd1(6): jnz 0xfffffec0(%rip)
10bd7(9): nop 0x0(%rax,%rax,1)
10be0(8): mov $0x77359400,0x58(%rsp)
10be8(5): mov $0x0,0x5c(%rsp)
10bed(8): mov $0x77359400,0x18(%rsp)
10bf5(5): mov %rcx,0x10(%rsp)
10bfa(4): mov 0x50(%rbp),%rcx
10bfe(5): mov $0x66666667,%eax
10c03(4): mov 0x70(%rbp),%rsi
10c07(2): imul %eax,%ecx,%edx
10c09(2): mov %ecx,%eax
10c0b(5): mov %rcx,0x28(%rsp)
10c10(3): sar $0x1f,%eax
10c13(3): sar $0x2,%edx
10c16(2): sub %eax,%edx
10c18(3): lea 0x0(%rdx,%rdx,4),%eax
10c1b(4): mov %edx,0x20(%rsp)
10c1f(2): add %eax,%eax
10c21(2): sub %eax,%ecx
10c23(5): mov $0x66666667,%eax
10c28(2): imul %eax,%esi,%edx
10c2a(2): mov %esi,%eax
10c2c(3): sar $0x1f,%eax
10c2f(3): sar $0x2,%edx
10c32(2): mov %edx,%edi
10c34(2): sub %eax,%edi
10c36(3): lea 0x0(%rdi,%rdi,4),%eax
10c39(2): add %eax,%eax
10c3b(2): sub %eax,%esi
10c3d(5): mov $0x66666667,%eax
10c42(3): imul %eax,%r15d,%edx
10c45(3): mov %r15d,%eax
10c48(2): or %esi,%ecx
10c4a(3): sar $0x1f,%eax
10c4d(3): mov %r15d,%esi
10c50(3): sar $0x2,%edx
10c53(3): mov %edx,%r8d
10c56(3): sub %eax,%r8d
10c59(4): lea 0x0(%r8,%r8,4),%eax
10c5d(2): add %eax,%eax
10c5f(2): sub %eax,%esi
10c61(2): or %esi,%ecx
10c63(6): jnz 0x355(%rip)
10c69(5): cmp $0xa,0x18(%rsp)
10c6e(4): mov 0x48(%rbp),%rax
10c72(2): mov %edi,%ecx
10c74(4): mov 0x20(%rsp),%edx
10c78(3): mov %r8d,%esi
10c7b(5): mov %rax,0x48(%rsp)
10c80(4): mov %edx,0x30(%rsp)
10c84(6): jle 0x414(%rip)
10c8a(5): mov $0x66666667,%eax
10c8f(2): imul %eax,%edi,%edx
10c91(2): mov %edi,%eax
10c93(3): sar $0x1f,%eax
10c96(3): sar $0x2,%edx
10c99(2): sub %eax,%edx
10c9b(3): lea 0x0(%rdx,%rdx,4),%eax
10c9e(2): add %eax,%eax
10ca0(2): sub %eax,%edi
10ca2(5): mov $0x66666667,%eax
10ca7(4): imul %eax,0x20(%rsp),%edx
10cab(4): mov 0x20(%rsp),%eax
10caf(3): sar $0x1f,%eax
10cb2(3): sar $0x2,%edx
10cb5(2): sub %eax,%edx
10cb7(3): lea 0x0(%rdx,%rdx,4),%eax
10cba(4): mov 0x20(%rsp),%edx
10cbe(8): mov $0xa,0x20(%rsp)
10cc6(2): add %eax,%eax
10cc8(2): sub %eax,%edx
10cca(5): mov $0x66666667,%eax
10ccf(2): or %edx,%edi
10cd1(3): imul %eax,%r8d,%edx
10cd4(3): mov %r8d,%eax
10cd7(4): mov %edi,0x3c(%rsp)
10cdb(3): sar $0x1f,%eax
10cde(5): mov $0x66666667,%edi
10ce3(3): sar $0x2,%edx
10ce6(2): sub %eax,%edx
10ce8(3): lea 0x0(%rdx,%rdx,4),%eax
10ceb(5): mov $0x8,%edx
10cf0(2): add %eax,%eax
10cf2(3): sub %eax,%r8d
10cf5(4): mov 0x3c(%rsp),%eax
10cf9(3): or %r8d,%eax
10cfc(6): jnz 0x3b8(%rip)
10d02(5): mov %r9d,0x3c(%rsp)
10d07(5): mov %r14,0x40(%rsp)
10d0c(6): mov $0xa,%r9d
10d12(5): mov 0x30(%rsp),%r8d
10d17(5): mov %r12,0x20(%rsp)
10d1c(3): mov %edx,%r14d
10d1f(5): mov %rbp,0x30(%rsp)
10d24(3): mov %r8d,%eax
10d27(4): sar $0x1f,%r8d
10d2b(4): lea 0x0(%r9,%r9,4),%ebp
10d2f(2): imul %eax,%edi,%edx
10d31(2): mov %ecx,%eax
10d33(3): sar $0x1f,%ecx
10d36(2): add %ebp,%ebp
10d38(3): mov %ebp,%r9d
10d3b(3): sar $0x2,%edx
10d3e(3): sub %r8d,%edx
10d41(3): mov %edx,%r8d
10d44(2): imul %eax,%edi,%edx
10d46(2): mov %esi,%eax
10d48(3): sar $0x1f,%esi
10d4b(3): sar $0x2,%edx
10d4e(2): sub %ecx,%edx
10d50(2): mov %edx,%ecx
10d52(2): imul %eax,%edi,%edx
10d54(3): sar $0x2,%edx
10d57(2): sub %esi,%edx
10d59(4): cmp 0x18(%rsp),%ebp
10d5d(2): mov %edx,%esi
10d5f(6): jnl 0x2e1(%rip)
10d65(3): mov %r8d,%eax
10d68(3): mov %r8d,%r12d
10d6b(2): imul %eax,%edi,%edx
10d6d(3): mov %r8d,%eax
10d70(3): sar $0x1f,%eax
10d73(3): sar $0x2,%edx
10d76(2): sub %eax,%edx
10d78(3): lea 0x0(%rdx,%rdx,4),%eax
10d7b(2): add %eax,%eax
10d7d(3): sub %eax,%r12d
10d80(2): mov %ecx,%eax
10d82(2): imul %eax,%edi,%edx
10d84(2): mov %ecx,%eax
10d86(3): sar $0x1f,%eax
10d89(3): sar $0x2,%edx
10d8c(2): sub %eax,%edx
10d8e(3): lea 0x0(%rdx,%rdx,4),%eax
10d91(2): mov %ecx,%edx
10d93(2): add %eax,%eax
10d95(2): sub %eax,%edx
10d97(2): mov %esi,%eax
10d99(3): or %edx,%r12d
10d9c(2): imul %eax,%edi,%edx
10d9e(2): mov %esi,%eax
10da0(3): sar $0x1f,%eax
10da3(3): sar $0x2,%edx
10da6(2): sub %eax,%edx
10da8(3): lea 0x0(%rdx,%rdx,4),%eax
10dab(2): mov %esi,%edx
10dad(2): add %eax,%eax
10daf(2): sub %eax,%edx
10db1(3): or %edx,%r12d
10db4(6): jnz 0x28c(%rip)
10dba(4): sub $0x1,%r14d
10dbe(6): jnz 0xffffff66(%rip)
10dc4(5): mov 0x40(%rsp),%r14
10dc9(5): mov 0x30(%rsp),%rbp
10dce(5): mov 0x48(%rsp),%rax
10dd3(5): mov 0x20(%rsp),%r12
10dd8(5): mov 0x3c(%rsp),%r9d
10ddd(3): or %r14,%rax
10de0(4): or 0x68(%rbp),%rax
10de4(2): test $0x1,%al
10de6(5): mov 0x10(%rsp),%rax
10deb(6): jz 0x28d(%rip)
10df1(7): mov $0x3b9aca00,0x8(%rax)
10df8(8): mov $0x3b9aca00,0x20(%rsp)
10e00(3): mov %r12,%rax
10e03(3): cmp %r12,%r14
10e06(6): jnle 0xfffffcd9(%rip)
10e0c(3): cmp %r13d,%r15d
10e0f(2): jl 0xd(%rip)
10e11(5): cmp $0x0,0x38(%rsp)
10e16(6): jnz 0xfffffcc9(%rip)
10e1c(3): cmp %rax,%r14
10e1f(6): jl 0xfffffcf9(%rip)
10e25(2): jnz 0x18(%rip)
10e27(3): mov %r9d,%eax
10e2a(1): cdq %eax
10e2b(4): idiv 0x20(%rsp),%eax
10e2f(3): mov %r13d,%eax
10e32(2): sub %edx,%eax
10e34(3): cmp %r15d,%eax
10e37(6): jnle 0xfffffce1(%rip)
10e3d(5): mov 0x48(%rsp),%rax
10e42(5): mov $0x38e38e39,%edx
10e47(5): lea 0x60(%rsp),%rbp
10e4c(3): mov %r11,%rsi
10e4f(3): mov %r10d,%edi
10e52(5): mov $0x100,%ecx
10e57(5): mov %r9d,0x18(%rsp)
10e5c(5): mov %r10d,0x38(%rsp)
10e61(5): mov %rax,0x60(%rsp)
10e66(5): movsxd 0x28(%rsp),%rax
10e6b(5): mov %rax,0x68(%rsp)
10e70(5): movzx 0x8(%rsp),%eax
10e75(5): mov %r11,0x8(%rsp)
10e7a(3): or %r14,%rax
10e7d(5): mov %rax,0x70(%rsp)
10e82(4): mov 0x20(%rsp),%eax
10e86(2): mul %eax,%edx,%edx
10e88(2): mov %edx,%eax
10e8a(3): mov %rbp,%rdx
10e8d(2): shr $0x1,%eax
10e8f(3): add %r15d,%eax
10e92(2): cwde 
10e94(5): mov %rax,0x78(%rsp)
10e99(5): call 0xffff1a97(%rip)
10e9e(2): test %eax,%eax
10ea0(5): mov 0x38(%rsp),%r10d
10ea5(5): mov 0x8(%rsp),%r11
10eaa(5): mov 0x18(%rsp),%r9d
10eaf(2): jz 0xc(%rip)
10eb1(5): mov $0xfffffffe,%ebx
10eb6(5): jmp 0xfffffc29(%rip)
10ebb(8): lea 0x80(%rsp),%rcx
10ec3(3): mov %r11,%rdx
10ec6(6): mov $0x100,%r8d
10ecc(3): mov %r10d,%esi
10ecf(5): mov $0x1,%edi
10ed4(5): mov %r9d,0x18(%rsp)
10ed9(5): mov %r11,0x8(%rsp)
10ede(5): mov %r10d,0x38(%rsp)
10ee3(5): call 0xffff1c9d(%rip)
10ee8(8): mov 0xe0(%rsp),%rcx
10ef0(3): mov %eax,%r8d
10ef3(8): mov 0xd8(%rsp),%rax
10efb(3): movsxd %r15d,%rdx
10efe(5): mov 0x38(%rsp),%r10d
10f03(5): mov 0x8(%rsp),%r11
10f08(5): mov 0x18(%rsp),%r9d
10f0d(3): xor %rdx,%rcx
10f10(3): xor %r14,%rax
10f13(3): or %rcx,%rax
10f16(3): movsxd %r8d,%rcx
10f19(3): or %rcx,%rax
10f1c(6): jnz 0x1b1(%rip)
10f22(7): mov 0xd8(%rsp),%ecx
10f29(5): mov $0xa,%esi
10f2e(3): and $0x1,%ecx
10f31(6): imul %ecx,$0x3b9aca00,%ecx
10f37(7): add 0xe0(%rsp),%ecx
10f3e(2): mov %ecx,%eax
10f40(1): cdq %eax
10f41(2): idiv %esi,%eax
10f43(2): test %edx,%edx
10f45(6): jnz 0x1d0(%rip)
10f4b(5): cmp $0xa,0x20(%rsp)
10f50(2): jz 0x3d(%rip)
10f52(6): mov $0x9,%r8d
10f58(5): mov $0xa,%esi
10f5d(5): mov $0xa,%edi
10f62(2): jmp 0xb(%rip)
10f64(3): imul %esi,$0xa,%esi
10f67(4): cmp 0x20(%rsp),%esi
10f6b(2): jz 0x22(%rip)
10f6d(2): mov %ecx,%eax
10f6f(1): cdq %eax
10f70(2): idiv %edi,%eax
10f72(1): cdq %eax
10f73(2): mov %eax,%ecx
10f75(2): idiv %edi,%eax
10f77(2): test %edx,%edx
10f79(6): jnz 0x193(%rip)
10f7f(4): sub $0x1,%r8d
10f83(2): jnz 0xffffffe1(%rip)
10f85(8): mov $0x77359400,0x20(%rsp)
10f8d(4): mov 0x20(%rsp),%esi
10f91(2): xor %eax,%eax
10f93(6): cmp $0x77359400,%esi
10f99(2): mov %esi,%ebx
10f9b(3): setz %al
10f9e(2): not %eax
10fa0(2): cwde 
10fa2(3): and %rax,%r12
10fa5(3): mov %r9d,%eax
10fa8(3): mov %r13d,%r9d
10fab(1): cdq %eax
10fac(2): idiv %esi,%eax
10fae(3): sub %edx,%r9d
10fb1(7): nop 0x0(%rax)
10fb8(5): mov 0x10(%rsp),%rax
10fbd(3): mov %ebx,0x8(%rax)
10fc0(4): mov $0x1,0xc(%rax)
10fc4(5): jmp 0xfffffb04(%rip)
10fc9(7): nop 0x0(%rax)
10fd0(7): mov 0x20bff9(%rip),%r8
10fd7(7): lea 0xfffff9a2(%rip),%rdx
10fde(7): lea 0xfffff9ab(%rip),%rcx
10fe5(5): mov %rsi,0x20(%rsp)
10fea(5): mov $0x10,%edi
10fef(2): xor %esi,%esi
10ff1(5): mov %r10d,0x18(%rsp)
10ff6(5): mov %r13d,0x10(%rsp)
10ffb(5): call 0xffffb225(%rip)
11000(3): test %rax,%rax
11003(3): mov %rax,%rdx
11006(7): mov %rax,0x20e713(%rip)
1100d(5): mov 0x10(%rsp),%r9d
11012(5): mov 0x18(%rsp),%r10d
11017(5): mov 0x20(%rsp),%r11
1101c(6): jnz 0xfffffa1d(%rip)
11022(5): lea 0x50(%rsp),%rcx
11027(5): jmp 0xfffffbb9(%rip)
1102c(4): nop 0x0(%rax)
11030(b): mov $0x0,0x20e6dd(%rip)
1103b(5): jmp 0xfffffa56(%rip)
11040(6): cmp $0x77359400,%ebp
11046(5): mov 0x20(%rsp),%r12
1104b(5): mov 0x10(%rsp),%rsi
11050(5): setz 0x8(%rsp)
11055(5): movzx 0x8(%rsp),%eax
1105a(5): mov %r9d,0x20(%rsp)
1105f(5): mov 0x40(%rsp),%r14
11064(5): mov 0x3c(%rsp),%r9d
11069(3): mov %ebp,0x8(%rsi)
1106c(2): not %eax
1106e(2): cwde 
11070(3): and %r12,%rax
11073(5): jmp 0xfffffd90(%rip)
11078(7): mov $0x77359400,0x8(%rax)
1107f(3): mov %r12,%rax
11082(5): mov $0x1,0x8(%rsp)
11087(4): and $0xfffffffe,%rax
1108b(8): mov $0x77359400,0x20(%rsp)
11093(5): jmp 0xfffffd70(%rip)
11098(5): mov 0x10(%rsp),%rax
1109d(8): mov $0xa,0x20(%rsp)
110a5(7): mov $0xa,0x8(%rax)
110ac(3): mov %r12,%rax
110af(5): jmp 0xfffffd54(%rip)
110b4(5): mov 0x10(%rsp),%rax
110b9(7): mov $0xa,0x8(%rax)
110c0(3): mov %r12,%rax
110c3(5): jmp 0xfffffd40(%rip)
110c8(5): call 0xffff1a68(%rip)
110cd(5): mov %rdx,0x78(%rsp)
110d2(5): mov $0x100,%ecx
110d7(3): mov %rbp,%rdx
110da(3): mov %r11,%rsi
110dd(3): mov %r10d,%edi
110e0(5): mov %r8d,0x8(%rsp)
110e5(5): mov %r9d,0x38(%rsp)
110ea(5): mov %r14,0x70(%rsp)
110ef(5): call 0xffff1841(%rip)
110f4(5): mov 0x8(%rsp),%r8d
110f9(5): mov 0x38(%rsp),%r9d
110fe(3): test %r8d,%r8d
11101(6): jnz 0xfffffdb0(%rip)
11107(5): jmp 0xfffffe1b(%rip)
1110c(4): mov %esi,0x20(%rsp)
11110(5): jmp 0xfffffe7d(%rip)
11115(4): mov %ebx,0x20(%rsp)
11119(5): jmp 0xfffffe74(%rip)

"utimecmp" :
11120(3): mov %ecx,%r8d
11123(3): mov %rdx,%rcx
11126(3): mov %rsi,%rdx
11129(3): mov %rdi,%rsi
1112c(5): mov $0xffffff9c,%edi
11131(5): jmp 0xfffff86f(%rip)

"update_timespec" :
11140(1): push %rbp
11141(1): push %rbx
11142(3): mov %rdi,%rbp
11145(4): sub $0x18,%rsp
11149(3): mov (%rsi),%rbx
1114c(4): mov 0x8(%rbx),%rax
11150(4): mov 0x18(%rbx),%rdx
11154(6): cmp $0x3ffffffe,%rax
1115a(2): jz 0x66(%rip)
1115c(6): cmp $0x3fffffff,%rax
11162(2): jz 0x1e(%rip)
11164(7): cmp $0x3ffffffe,%rdx
1116b(2): jz 0x33(%rip)
1116d(2): xor %eax,%eax
1116f(7): cmp $0x3fffffff,%rdx
11176(2): jz 0x72(%rip)
11178(4): add $0x18,%rsp
1117c(1): pop %rbx
1117d(1): pop %rbp
1117e(1): ret near (%rsp)
1117f(1): nop 
11180(7): cmp $0x3fffffff,%rdx
11187(2): jz 0x81(%rip)
11189(3): mov %rbx,%rdi
1118c(5): call 0x1d54(%rip)
11191(4): mov 0x18(%rbx),%rdx
11195(7): cmp $0x3ffffffe,%rdx
1119c(2): jnz 0xffffffd1(%rip)
1119e(4): mov 0x60(%rbp),%rax
111a2(4): mov 0x58(%rbp),%rdx
111a6(4): mov %rax,0x18(%rbx)
111aa(4): mov %rdx,0x10(%rbx)
111ae(4): add $0x18,%rsp
111b2(2): xor %eax,%eax
111b4(1): pop %rbx
111b5(1): pop %rbp
111b6(1): ret near (%rsp)
111b7(9): nop 0x0(%rax,%rax,1)
111c0(7): cmp $0x3ffffffe,%rdx
111c7(5): mov $0x1,%eax
111cc(2): jz 0xffffffac(%rip)
111ce(4): mov 0x50(%rdi),%rax
111d2(4): mov 0x48(%rdi),%rcx
111d6(4): mov %rax,0x8(%rbx)
111da(2): xor %eax,%eax
111dc(7): cmp $0x3fffffff,%rdx
111e3(3): mov %rcx,(%rbx)
111e6(2): jnz 0xffffff92(%rip)
111e8(4): lea 0x10(%rbx),%rdi
111ec(4): mov %al,0xf(%rsp)
111f0(5): call 0x1cf0(%rip)
111f5(5): movzx 0xf(%rsp),%eax
111fa(4): add $0x18,%rsp
111fe(1): pop %rbx
111ff(1): pop %rbp
11200(1): ret near (%rsp)
11201(7): nop 0x0(%rax)
11208(7): mov $0x0,(%rsi)
1120f(2): xor %eax,%eax
11211(5): jmp 0xffffff67(%rip)

"validate_timespec" :
11220(4): mov 0x8(%rdi),%r9
11224(7): lea 0xc0000002(%r9),%rcx
1122b(4): cmp $0x1,%rcx
1122f(2): jbe 0xb(%rip)
11231(7): cmp $0x3b9ac9ff,%r9
11238(2): jnbe 0x78(%rip)
1123a(4): mov 0x18(%rdi),%rdx
1123e(7): lea 0xc0000002(%rdx),%r8
11245(4): cmp $0x1,%r8
11249(2): jbe 0xb(%rip)
1124b(7): cmp $0x3b9ac9ff,%rdx
11252(2): jnbe 0x5e(%rip)
11254(2): xor %esi,%esi
11256(3): xor %r10d,%r10d
11259(4): cmp $0x1,%rcx
1125d(2): jnbe 0x1c(%rip)
1125f(2): xor %esi,%esi
11261(7): cmp $0x3ffffffe,%r9
11268(7): mov $0x0,(%rdi)
1126f(4): setz %sil
11273(6): mov $0x1,%r10d
11279(4): cmp $0x1,%r8
1127d(2): jnbe 0x1e(%rip)
1127f(2): xor %eax,%eax
11281(7): cmp $0x3ffffffe,%rdx
11288(8): mov $0x0,0x10(%rdi)
11290(3): setz %al
11293(6): mov $0x1,%r10d
11299(2): add %eax,%esi
1129b(2): xor %eax,%eax
1129d(3): cmp $0x1,%esi
112a0(3): setz %al
112a3(3): add %r10d,%eax
112a6(1): ret near (%rsp)
112a7(9): nop 0x0(%rax,%rax,1)
112b0(4): sub $0x8,%rsp
112b4(5): call 0xffff169c(%rip)
112b9(6): mov $0x16,(%rax)
112bf(5): mov $0xffffffff,%eax
112c4(4): add $0x8,%rsp
112c8(1): ret near (%rsp)

"lutimensat" :
112d0(5): mov $0x100,%ecx
112d5(5): jmp 0xffff165b(%rip)

"fdutimens" :
112e0(2): push %r14
112e2(2): push %r13
112e4(2): push %r12
112e6(1): push %rbp
112e7(3): mov %rsi,%r12
112ea(1): push %rbx
112eb(2): mov %edi,%ebx
112ed(7): sub $0x110,%rsp
112f4(9): mov $0x28,%rax
112fd(8): mov %rax,0x108(%rsp)
11305(2): xor %eax,%eax
11307(3): test %rdx,%rdx
1130a(6): jz 0x2c6(%rip)
11310(4): movdqu (%rdx),%xmm0
11314(5): lea 0x10(%rsp),%rdi
11319(5): movaps %xmm0,0x10(%rsp)
1131e(5): mov %rdi,0x8(%rsp)
11323(5): movdqu 0x10(%rdx),%xmm0
11328(5): movaps %xmm0,0x20(%rsp)
1132d(5): call 0xfffffef3(%rip)
11332(2): test %eax,%eax
11334(3): mov %eax,%r13d
11337(6): js 0x3bc(%rip)
1133d(2): test %ebx,%ebx
1133f(2): jns 0xb(%rip)
11341(3): test %r12,%r12
11344(6): jz 0x3a4(%rip)
1134a(6): mov 0x20e3dc(%rip),%eax
11350(2): test %eax,%eax
11352(2): js 0x36(%rip)
11354(4): cmp $0x2,%r13d
11358(6): jz 0x208(%rip)
1135e(5): mov 0x8(%rsp),%rsi
11363(2): test %ebx,%ebx
11365(6): js 0x32b(%rip)
1136b(2): mov %ebx,%edi
1136d(5): call 0xffff1c53(%rip)
11372(3): cmp $0x0,%eax
11375(2): mov %eax,%ebp
11377(6): jle 0x336(%rip)
1137d(5): call 0xffff15d3(%rip)
11382(6): mov $0x26,(%rax)
11388(3): test %r13d,%r13d
1138b(a): mov $0xffffffff,0x20e397(%rip)
11395(a): mov $0xffffffff,0x20e389(%rip)
1139f(6): jnz 0x161(%rip)
113a5(5): mov 0x8(%rsp),%rsi
113aa(3): test %rsi,%rsi
113ad(6): jz 0x293(%rip)
113b3(3): mov (%rsi),%rax
113b6(4): mov 0x8(%rsi),%rdi
113ba(a): mov $0x2361183241434822607,%rcx
113c4(5): lea 0x30(%rsp),%r13
113c9(5): mov %rax,0x30(%rsp)
113ce(3): mov %rdi,%rax
113d1(4): sar $0x3f,%rdi
113d5(3): imul %rax,%rcx,%rdx
113d8(4): mov 0x10(%rsi),%rax
113dc(4): mov 0x18(%rsi),%rsi
113e0(5): mov %rax,0x40(%rsp)
113e5(3): mov %rsi,%rax
113e8(4): sar $0x3f,%rsi
113ec(4): sar $0x7,%rdx
113f0(3): sub %rdi,%rdx
113f3(5): mov %rdx,0x38(%rsp)
113f8(3): imul %rax,%rcx,%rdx
113fb(3): mov %rdx,%rcx
113fe(4): sar $0x7,%rcx
11402(3): sub %rsi,%rcx
11405(5): mov %rcx,0x48(%rsp)
1140a(2): test %ebx,%ebx
1140c(3): mov %r13,%rdx
1140f(6): js 0x1d9(%rip)
11415(2): xor %esi,%esi
11417(2): mov %ebx,%edi
11419(5): call 0xffff1c97(%rip)
1141e(2): test %eax,%eax
11420(2): mov %eax,%ebp
11422(6): jnz 0x1fe(%rip)
11428(3): test %r13,%r13
1142b(6): jz 0x1cc(%rip)
11431(8): cmp $0x7a11f,0x8(%r13)
11439(4): setnle %r12b
1143d(8): cmp $0x7a11f,0x18(%r13)
11445(4): setnle %r14b
11449(3): test %r12b,%r12b
1144c(2): jnz 0xb(%rip)
1144e(3): test %r14b,%r14b
11451(6): jz 0x1a6(%rip)
11457(5): lea 0x70(%rsp),%rdx
1145c(2): mov %ebx,%esi
1145e(5): mov $0x1,%edi
11463(5): call 0xffff19bd(%rip)
11468(2): test %eax,%eax
1146a(6): jnz 0x18d(%rip)
11470(8): mov 0xc8(%rsp),%rdx
11478(4): sub 0x10(%r13),%rdx
1147c(8): mov 0xb8(%rsp),%rax
11484(4): sub 0x0(%r13),%rax
11488(6): movdqa 0x0(%r13),%xmm0
1148e(4): cmp $0x1,%rdx
11492(3): setz %dl
11495(5): movaps %xmm0,0x50(%rsp)
1149a(3): and %edx,%r14d
1149d(4): cmp $0x1,%rax
114a1(6): movdqa 0x10(%r13),%xmm0
114a7(5): movaps %xmm0,0x60(%rsp)
114ac(6): jnz 0x254(%rip)
114b2(3): test %r12b,%r12b
114b5(6): jz 0x24b(%rip)
114bb(9): cmp $0x0,0xc0(%rsp)
114c4(6): jnz 0x23c(%rip)
114ca(3): test %r14b,%r14b
114cd(9): mov $0x0,0x58(%rsp)
114d6(2): jz 0x11(%rip)
114d8(9): cmp $0x0,0xd0(%rsp)
114e1(6): jz 0x237(%rip)
114e7(5): lea 0x50(%rsp),%rdx
114ec(2): xor %esi,%esi
114ee(2): mov %ebx,%edi
114f0(5): call 0xffff1bc0(%rip)
114f5(2): xor %ebp,%ebp
114f7(5): jmp 0x100(%rip)
114fc(4): nop 0x0(%rax)
11500(4): cmp $0x3,%r13d
11504(2): jz 0x28(%rip)
11506(2): test %ebx,%ebx
11508(5): lea 0x70(%rsp),%rdx
1150d(6): js 0x143(%rip)
11513(2): mov %ebx,%esi
11515(5): mov $0x1,%edi
1151a(5): call 0xffff1906(%rip)
1151f(2): test %eax,%eax
11521(3): setnz %al
11524(2): test %al,%al
11526(6): jnz 0x1cd(%rip)
1152c(6): cmp $0x0,0x8(%rsp)
11532(6): jz 0x10e(%rip)
11538(5): lea 0x8(%rsp),%rsi
1153d(5): lea 0x70(%rsp),%rdi
11542(2): xor %ebp,%ebp
11544(5): call 0xfffffbfc(%rip)
11549(2): test %al,%al
1154b(6): jz 0xfffffe5a(%rip)
11551(5): jmp 0xa6(%rip)
11556(a): nop 0x0(%rax,%rax,1)
11560(2): test %ebx,%ebx
11562(5): lea 0x70(%rsp),%rdx
11567(6): js 0x109(%rip)
1156d(2): mov %ebx,%esi
1156f(5): mov $0x1,%edi
11574(5): call 0xffff18ac(%rip)
11579(2): test %eax,%eax
1157b(3): setnz %al
1157e(2): test %al,%al
11580(6): jnz 0x173(%rip)
11586(5): mov 0x8(%rsp),%rsi
1158b(8): cmp $0x3ffffffe,0x8(%rsi)
11593(6): jz 0x12d(%rip)
11599(8): cmp $0x3ffffffe,0x18(%rsi)
115a1(6): mov $0x3,%r13d
115a7(6): jnz 0xfffffdbc(%rip)
115ad(8): mov 0xd0(%rsp),%rax
115b5(8): mov 0xc8(%rsp),%rdx
115bd(4): mov %rax,0x18(%rsi)
115c1(4): mov %rdx,0x10(%rsi)
115c5(5): jmp 0xfffffd9e(%rip)
115ca(6): nop 0x0(%rax,%rax,1)
115d0(9): mov $0x0,0x8(%rsp)
115d9(3): xor %r13d,%r13d
115dc(5): jmp 0xfffffd61(%rip)
115e1(7): nop 0x0(%rax)
115e8(3): mov %r12,%rsi
115eb(5): mov $0xffffff9c,%edi
115f0(5): call 0xffff1ac0(%rip)
115f5(2): mov %eax,%ebp
115f7(8): mov 0x108(%rsp),%rcx
115ff(9): xor $0x28,%rcx
11608(2): mov %ebp,%eax
1160a(6): jnz 0x11c(%rip)
11610(7): add $0x110,%rsp
11617(1): pop %rbx
11618(1): pop %rbp
11619(2): pop %r12
1161b(2): pop %r13
1161d(2): pop %r14
1161f(1): ret near (%rsp)
11620(3): test %r12,%r12
11623(5): mov $0xffffffff,%ebp
11628(2): jz 0xffffffcf(%rip)
1162a(3): mov %r13,%rsi
1162d(3): mov %r12,%rdi
11630(5): call 0xffff1690(%rip)
11635(2): mov %eax,%ebp
11637(2): jmp 0xffffffc0(%rip)
11639(7): nop 0x0(%rax)
11640(3): xor %r13d,%r13d
11643(5): jmp 0xfffffdc7(%rip)
11648(8): nop 0x0(%rax,%rax,1)
11650(3): mov %r12,%rsi
11653(5): mov $0x1,%edi
11658(5): call 0xffff1778(%rip)
1165d(2): test %eax,%eax
1165f(3): setnz %al
11662(5): jmp 0xfffffec2(%rip)
11667(9): nop 0x0(%rax,%rax,1)
11670(3): mov %r12,%rsi
11673(5): mov $0x1,%edi
11678(5): call 0xffff1758(%rip)
1167d(2): test %eax,%eax
1167f(3): setnz %al
11682(5): jmp 0xfffffefc(%rip)
11687(9): nop 0x0(%rax,%rax,1)
11690(2): xor %ecx,%ecx
11692(3): mov %rsi,%rdx
11695(5): mov $0xffffff9c,%edi
1169a(3): mov %r12,%rsi
1169d(5): call 0xffff1293(%rip)
116a2(3): cmp $0x0,%eax
116a5(2): mov %eax,%ebp
116a7(6): jnle 0xfffffcd6(%rip)
116ad(2): jnz 0x7e(%rip)
116af(a): mov $0x1,0x20e073(%rip)
116b9(5): jmp 0xffffff3e(%rip)
116be(2): nop 
116c0(8): mov 0xc0(%rsp),%rax
116c8(8): mov 0xb8(%rsp),%rdx
116d0(6): mov $0x3,%r13d
116d6(3): mov %rdx,(%rsi)
116d9(4): mov %rax,0x8(%rsi)
116dd(5): jmp 0xfffffc86(%rip)
116e2(6): nop 0x0(%rax,%rax,1)
116e8(5): call 0xffff1268(%rip)
116ed(6): mov $0x9,(%rax)
116f3(5): mov $0xffffffff,%ebp
116f8(5): jmp 0xfffffeff(%rip)
116fd(3): nop (%rax)
11700(3): test %r14b,%r14b
11703(6): jz 0xfffffdf2(%rip)
11709(9): cmp $0x0,0xd0(%rsp)
11712(6): jnz 0xfffffde3(%rip)
11718(9): mov $0x0,0x68(%rsp)
11721(5): jmp 0xfffffdc6(%rip)
11726(5): call 0xffff140a(%rip)
1172b(5): call 0xffff1225(%rip)
11730(3): cmp $0x26,(%rax)
11733(6): jnz 0xffffff7c(%rip)
11739(5): jmp 0xfffffc4f(%rip)

"utimens" :
11740(3): mov %rsi,%rdx
11743(3): mov %rdi,%rsi
11746(5): mov $0xffffffff,%edi
1174b(5): jmp 0xfffffb95(%rip)

"lutimens" :
11750(2): push %r12
11752(1): push %rbp
11753(3): mov %rdi,%r12
11756(1): push %rbx
11757(7): sub $0xd0,%rsp
1175e(9): mov $0x28,%rax
11767(8): mov %rax,0xc8(%rsp)
1176f(2): xor %eax,%eax
11771(3): test %rsi,%rsi
11774(6): jz 0xfc(%rip)
1177a(4): movdqu (%rsi),%xmm0
1177e(5): lea 0x10(%rsp),%rdi
11783(5): movaps %xmm0,0x10(%rsp)
11788(5): mov %rdi,0x8(%rsp)
1178d(5): movdqu 0x10(%rsi),%xmm0
11792(5): movaps %xmm0,0x20(%rsp)
11797(5): call 0xfffffa89(%rip)
1179c(2): test %eax,%eax
1179e(2): mov %eax,%ebx
117a0(6): js 0x110(%rip)
117a6(6): mov 0x20df7c(%rip),%eax
117ac(2): test %eax,%eax
117ae(2): js 0x38(%rip)
117b0(3): cmp $0x2,%ebx
117b3(6): jz 0x12d(%rip)
117b9(5): mov 0x8(%rsp),%rdx
117be(5): mov $0x100,%ecx
117c3(3): mov %r12,%rsi
117c6(5): mov $0xffffff9c,%edi
117cb(5): call 0xffff1165(%rip)
117d0(3): cmp $0x0,%eax
117d3(2): mov %eax,%ebp
117d5(6): jle 0xeb(%rip)
117db(5): call 0xffff1175(%rip)
117e0(6): mov $0x26,(%rax)
117e6(2): test %ebx,%ebx
117e8(a): mov $0xffffffff,0x20df36(%rip)
117f2(6): jz 0xa3(%rip)
117f8(3): cmp $0x3,%ebx
117fb(6): jnz 0x13d(%rip)
11801(6): cmp $0x0,0x8(%rsp)
11807(2): jz 0x19(%rip)
11809(5): lea 0x8(%rsp),%rsi
1180e(5): lea 0x30(%rsp),%rdi
11813(2): xor %ebp,%ebp
11815(5): call 0xfffff92b(%rip)
1181a(2): test %al,%al
1181c(2): jnz 0x2c(%rip)
1181e(2): nop 
11820(4): mov 0x48(%rsp),%eax
11824(5): and $0xf000,%eax
11829(5): cmp $0xa000,%eax
1182e(6): jz 0x158(%rip)
11834(5): mov 0x8(%rsp),%rdx
11839(3): mov %r12,%rsi
1183c(5): mov $0xffffffff,%edi
11841(5): call 0xfffffa9f(%rip)
11846(2): mov %eax,%ebp
11848(8): mov 0xc8(%rsp),%rcx
11850(9): xor $0x28,%rcx
11859(2): mov %ebp,%eax
1185b(6): jnz 0x13b(%rip)
11861(7): add $0xd0,%rsp
11868(1): pop %rbx
11869(1): pop %rbp
1186a(2): pop %r12
1186c(1): ret near (%rsp)
1186d(3): nop (%rax)
11870(6): mov 0x20deb2(%rip),%ecx
11876(2): xor %edx,%edx
11878(2): xor %ebx,%ebx
1187a(9): mov $0x0,0x8(%rsp)
11883(2): test %ecx,%ecx
11885(6): jns 0xffffff39(%rip)
1188b(a): mov $0xffffffff,0x20de93(%rip)
11895(5): lea 0x30(%rsp),%rdx
1189a(3): mov %r12,%rsi
1189d(5): mov $0x1,%edi
118a2(5): call 0xffff125e(%rip)
118a7(2): test %eax,%eax
118a9(6): jz 0xffffff77(%rip)
118af(1): nop 
118b0(5): mov $0xffffffff,%ebp
118b5(2): jmp 0xffffff93(%rip)
118b7(9): nop 0x0(%rax,%rax,1)
118c0(6): jnz 0xdb(%rip)
118c6(a): mov $0x1,0x20de5c(%rip)
118d0(a): mov $0x1,0x20de4e(%rip)
118da(5): jmp 0xffffff6e(%rip)
118df(1): nop 
118e0(5): lea 0x30(%rsp),%rdx
118e5(3): mov %r12,%rsi
118e8(5): mov $0x1,%edi
118ed(5): call 0xffff1213(%rip)
118f2(2): test %eax,%eax
118f4(2): jnz 0xffffffbc(%rip)
118f6(5): mov 0x8(%rsp),%rdx
118fb(8): cmp $0x3ffffffe,0x8(%rdx)
11903(2): jz 0x65(%rip)
11905(8): cmp $0x3ffffffe,0x18(%rdx)
1190d(5): mov $0x3,%ebx
11912(6): jnz 0xfffffeac(%rip)
11918(8): mov 0x90(%rsp),%rax
11920(8): mov 0x88(%rsp),%rcx
11928(4): mov %rax,0x18(%rdx)
1192c(4): mov %rcx,0x10(%rdx)
11930(5): jmp 0xfffffe8e(%rip)
11935(3): nop (%rax)
11938(5): lea 0x30(%rsp),%rdx
1193d(3): mov %r12,%rsi
11940(5): mov $0x1,%edi
11945(5): call 0xffff11bb(%rip)
1194a(2): test %eax,%eax
1194c(6): jnz 0xffffff64(%rip)
11952(6): cmp $0x0,0x8(%rsp)
11958(6): jnz 0xfffffeb1(%rip)
1195e(5): jmp 0xfffffec2(%rip)
11963(5): nop 0x0(%rax,%rax,1)
11968(8): mov 0x80(%rsp),%rax
11970(5): mov 0x78(%rsp),%rcx
11975(5): mov $0x3,%ebx
1197a(3): mov %rcx,(%rdx)
1197d(4): mov %rax,0x8(%rdx)
11981(5): jmp 0xfffffe3d(%rip)
11986(5): call 0xffff0fca(%rip)
1198b(6): mov $0x26,(%rax)
11991(5): jmp 0xffffff1f(%rip)
11996(5): call 0xffff119a(%rip)
1199b(5): call 0xffff0fb5(%rip)
119a0(3): cmp $0x26,(%rax)
119a3(6): jnz 0xffffff23(%rip)
119a9(5): jmp 0xfffffe3d(%rip)

"version_etc_arn" :
119b0(2): push %r15
119b2(2): push %r14
119b4(2): push %r13
119b6(2): push %r12
119b8(3): mov %r9,%r12
119bb(1): push %rbp
119bc(1): push %rbx
119bd(3): mov %rdi,%rbp
119c0(3): mov %r8,%rbx
119c3(4): sub $0x28,%rsp
119c7(3): test %rsi,%rsi
119ca(6): jz 0x11e(%rip)
119d0(3): mov %rdx,%r8
119d3(7): lea 0x6fa5(%rip),%rdx
119da(3): mov %rcx,%r9
119dd(2): xor %eax,%eax
119df(3): mov %rsi,%rcx
119e2(5): mov $0x1,%esi
119e7(5): call 0xffff1669(%rip)
119ec(7): lea 0x6f9f(%rip),%rsi
119f3(2): xor %edi,%edi
119f5(5): mov $0x5,%edx
119fa(5): call 0xffff10d6(%rip)
119ff(7): lea 0x729a(%rip),%rdx
11a06(3): mov %rax,%rcx
11a09(6): mov $0x7e3,%r8d
11a0f(5): mov $0x1,%esi
11a14(3): mov %rbp,%rdi
11a17(2): xor %eax,%eax
11a19(5): call 0xffff1637(%rip)
11a1e(7): lea 0x6ff3(%rip),%rsi
11a25(2): xor %edi,%edi
11a27(5): mov $0x5,%edx
11a2c(5): call 0xffff10a4(%rip)
11a31(3): mov %rbp,%rsi
11a34(3): mov %rax,%rdi
11a37(5): call 0xffff1279(%rip)
11a3c(4): cmp $0x9,%r12
11a40(6): jnbe 0x340(%rip)
11a46(7): lea 0x7227(%rip),%rdx
11a4d(4): movsxd 0x0(%rdx,%r12,4),%rax
11a51(3): add %rdx,%rax
11a54(2): jmp %rax
11a56(a): nop 0x0(%rax,%rax,1)
11a60(4): mov 0x38(%rbx),%r9
11a64(4): mov 0x10(%rbx),%rax
11a68(7): lea 0x7119(%rip),%rsi
11a6f(4): mov 0x8(%rbx),%r8
11a73(5): mov $0x5,%edx
11a78(2): xor %edi,%edi
11a7a(4): mov 0x30(%rbx),%r13
11a7e(4): mov 0x28(%rbx),%r12
11a82(5): mov %r9,0x10(%rsp)
11a87(4): mov 0x20(%rbx),%r15
11a8b(4): mov 0x18(%rbx),%r14
11a8f(4): mov %rax,(%rsp)
11a93(5): mov %r8,0x8(%rsp)
11a98(3): mov (%rbx),%rbx
11a9b(5): call 0xffff1035(%rip)
11aa0(4): sub $0x8,%rsp
11aa4(5): mov 0x18(%rsp),%r9
11aa9(3): mov %rax,%rdx
11aac(3): mov %rbx,%rcx
11aaf(5): mov $0x1,%esi
11ab4(3): mov %rbp,%rdi
11ab7(2): xor %eax,%eax
11ab9(2): push %r9
11abb(2): push %r13
11abd(2): push %r12
11abf(2): push %r15
11ac1(2): push %r14
11ac3(5): mov 0x30(%rsp),%r9
11ac8(5): mov 0x38(%rsp),%r8
11acd(5): call 0xffff1583(%rip)
11ad2(4): add $0x30,%rsp
11ad6(4): add $0x28,%rsp
11ada(1): pop %rbx
11adb(1): pop %rbp
11adc(2): pop %r12
11ade(2): pop %r13
11ae0(2): pop %r14
11ae2(2): pop %r15
11ae4(1): ret near (%rsp)
11ae5(3): nop (%rax)
11ae8(3): mov %rcx,%r8
11aeb(3): mov %rdx,%rcx
11aee(7): lea 0x6e96(%rip),%rdx
11af5(5): mov $0x1,%esi
11afa(2): xor %eax,%eax
11afc(5): call 0xffff1554(%rip)
11b01(5): jmp 0xfffffeeb(%rip)
11b06(a): nop 0x0(%rax,%rax,1)
11b10(4): mov 0x40(%rbx),%r10
11b14(4): mov 0x38(%rbx),%r9
11b18(7): lea 0x7099(%rip),%rsi
11b1f(4): mov 0x10(%rbx),%rax
11b23(4): mov 0x8(%rbx),%r8
11b27(5): mov $0x5,%edx
11b2c(4): mov 0x30(%rbx),%r13
11b30(4): mov 0x28(%rbx),%r12
11b34(4): mov 0x20(%rbx),%r15
11b38(4): mov 0x18(%rbx),%r14
11b3c(3): mov (%rbx),%rbx
11b3f(5): mov %r10,0x18(%rsp)
11b44(5): mov %r9,0x10(%rsp)
11b49(4): mov %rax,(%rsp)
11b4d(5): mov %r8,0x8(%rsp)
11b52(2): xor %edi,%edi
11b54(5): call 0xffff0f7c(%rip)
11b59(5): mov 0x18(%rsp),%r10
11b5e(2): push %r10
11b60(5): jmp 0xffffff44(%rip)
11b65(3): nop (%rax)
11b68(3): mov (%rbx),%rbx
11b6b(7): lea 0x6e24(%rip),%rsi
11b72(5): mov $0x5,%edx
11b77(2): xor %edi,%edi
11b79(5): call 0xffff0f57(%rip)
11b7e(4): add $0x28,%rsp
11b82(3): mov %rbx,%rcx
11b85(3): mov %rbp,%rdi
11b88(1): pop %rbx
11b89(1): pop %rbp
11b8a(2): pop %r12
11b8c(2): pop %r13
11b8e(2): pop %r14
11b90(2): pop %r15
11b92(3): mov %rax,%rdx
11b95(5): mov $0x1,%esi
11b9a(2): xor %eax,%eax
11b9c(5): jmp 0xffff14b4(%rip)
11ba1(7): nop 0x0(%rax)
11ba8(4): mov 0x8(%rbx),%r12
11bac(7): lea 0x6df3(%rip),%rsi
11bb3(3): mov (%rbx),%rbx
11bb6(5): mov $0x5,%edx
11bbb(2): xor %edi,%edi
11bbd(5): call 0xffff0f13(%rip)
11bc2(4): add $0x28,%rsp
11bc6(3): mov %r12,%r8
11bc9(3): mov %rbx,%rcx
11bcc(3): mov %rbp,%rdi
11bcf(3): mov %rax,%rdx
11bd2(5): mov $0x1,%esi
11bd7(1): pop %rbx
11bd8(1): pop %rbp
11bd9(2): pop %r12
11bdb(2): pop %r13
11bdd(2): pop %r14
11bdf(2): pop %r15
11be1(2): xor %eax,%eax
11be3(5): jmp 0xffff146d(%rip)
11be8(8): nop 0x0(%rax,%rax,1)
11bf0(4): mov 0x10(%rbx),%r13
11bf4(4): mov 0x8(%rbx),%r12
11bf8(7): lea 0x6dbe(%rip),%rsi
11bff(3): mov (%rbx),%rbx
11c02(5): mov $0x5,%edx
11c07(2): xor %edi,%edi
11c09(5): call 0xffff0ec7(%rip)
11c0e(4): add $0x28,%rsp
11c12(3): mov %r13,%r9
11c15(3): mov %r12,%r8
11c18(3): mov %rbx,%rcx
11c1b(3): mov %rbp,%rdi
11c1e(3): mov %rax,%rdx
11c21(1): pop %rbx
11c22(1): pop %rbp
11c23(2): pop %r12
11c25(2): pop %r13
11c27(2): pop %r14
11c29(2): pop %r15
11c2b(5): mov $0x1,%esi
11c30(2): xor %eax,%eax
11c32(5): jmp 0xffff141e(%rip)
11c37(9): nop 0x0(%rax,%rax,1)
11c40(7): lea 0x6ea1(%rip),%rsi
11c47(5): mov $0x5,%edx
11c4c(2): xor %edi,%edi
11c4e(4): mov 0x18(%rbx),%r14
11c52(4): mov 0x10(%rbx),%r13
11c56(4): mov 0x8(%rbx),%r12
11c5a(3): mov (%rbx),%rbx
11c5d(5): call 0xffff0e73(%rip)
11c62(4): sub $0x8,%rsp
11c66(2): push %r14
11c68(3): mov %rax,%rdx
11c6b(3): mov %r13,%r9
11c6e(3): mov %r12,%r8
11c71(3): mov %rbx,%rcx
11c74(3): mov %rbp,%rdi
11c77(5): mov $0x1,%esi
11c7c(2): xor %eax,%eax
11c7e(5): call 0xffff13d2(%rip)
11c83(1): pop %rax
11c84(1): pop %rdx
11c85(4): add $0x28,%rsp
11c89(1): pop %rbx
11c8a(1): pop %rbp
11c8b(2): pop %r12
11c8d(2): pop %r13
11c8f(2): pop %r14
11c91(2): pop %r15
11c93(1): ret near (%rsp)
11c94(4): nop 0x0(%rax)
11c98(4): mov 0x20(%rbx),%r15
11c9c(7): lea 0x6e65(%rip),%rsi
11ca3(5): mov $0x5,%edx
11ca8(2): xor %edi,%edi
11caa(4): mov 0x18(%rbx),%r14
11cae(4): mov 0x10(%rbx),%r13
11cb2(4): mov 0x8(%rbx),%r12
11cb6(3): mov (%rbx),%rbx
11cb9(5): call 0xffff0e17(%rip)
11cbe(2): push %r15
11cc0(2): jmp 0xffffffa6(%rip)
11cc2(6): nop 0x0(%rax,%rax,1)
11cc8(4): mov 0x8(%rbx),%r8
11ccc(4): mov 0x28(%rbx),%r12
11cd0(7): lea 0x6e59(%rip),%rsi
11cd7(4): mov 0x20(%rbx),%r15
11cdb(4): mov 0x18(%rbx),%r14
11cdf(5): mov $0x5,%edx
11ce4(4): mov 0x10(%rbx),%r13
11ce8(2): xor %edi,%edi
11cea(3): mov (%rbx),%rbx
11ced(4): mov %r8,(%rsp)
11cf1(5): call 0xffff0ddf(%rip)
11cf6(4): sub $0x8,%rsp
11cfa(3): mov %r13,%r9
11cfd(2): push %r12
11cff(2): push %r15
11d01(2): push %r14
11d03(5): mov 0x20(%rsp),%r8
11d08(3): mov %rbx,%rcx
11d0b(3): mov %rax,%rdx
11d0e(3): mov %rbp,%rdi
11d11(5): mov $0x1,%esi
11d16(2): xor %eax,%eax
11d18(5): call 0xffff1338(%rip)
11d1d(4): add $0x20,%rsp
11d21(4): add $0x28,%rsp
11d25(1): pop %rbx
11d26(1): pop %rbp
11d27(2): pop %r12
11d29(2): pop %r13
11d2b(2): pop %r14
11d2d(2): pop %r15
11d2f(1): ret near (%rsp)
11d30(4): mov 0x10(%rbx),%r9
11d34(4): mov 0x30(%rbx),%r13
11d38(7): lea 0x6e19(%rip),%rsi
11d3f(4): mov 0x28(%rbx),%r12
11d43(4): mov 0x20(%rbx),%r15
11d47(5): mov $0x5,%edx
11d4c(4): mov 0x18(%rbx),%r14
11d50(4): mov 0x8(%rbx),%r8
11d54(2): xor %edi,%edi
11d56(5): mov %r9,0x8(%rsp)
11d5b(3): mov (%rbx),%rbx
11d5e(4): mov %r8,(%rsp)
11d62(5): call 0xffff0d6e(%rip)
11d67(2): push %r13
11d69(2): push %r12
11d6b(2): push %r15
11d6d(2): push %r14
11d6f(5): mov 0x28(%rsp),%r9
11d74(2): jmp 0xffffff8f(%rip)
11d76(a): nop 0x0(%rax,%rax,1)
11d80(4): mov 0x40(%rbx),%r10
11d84(4): mov 0x38(%rbx),%r9
11d88(5): mov $0x5,%edx
11d8d(4): mov 0x10(%rbx),%rax
11d91(4): mov 0x8(%rbx),%r8
11d95(7): lea 0x6e54(%rip),%rsi
11d9c(4): mov 0x30(%rbx),%r13
11da0(4): mov 0x28(%rbx),%r12
11da4(4): mov 0x20(%rbx),%r15
11da8(4): mov 0x18(%rbx),%r14
11dac(5): mov %r10,0x18(%rsp)
11db1(5): mov %r9,0x10(%rsp)
11db6(4): mov %rax,(%rsp)
11dba(5): mov %r8,0x8(%rsp)
11dbf(3): mov (%rbx),%rbx
11dc2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
11dd0(3): xor %r9d,%r9d
11dd3(4): cmp $0x0,(%r8)
11dd7(2): jz 0x14(%rip)
11dd9(7): nop 0x0(%rax)
11de0(4): add $0x1,%r9
11de4(5): cmp $0x0,0x0(%r8,%r9,8)
11de9(2): jnz 0xfffffff7(%rip)
11deb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
11df0(4): sub $0x68,%rsp
11df4(3): mov %r8,%r10
11df7(3): xor %r9d,%r9d
11dfa(9): mov $0x28,%rax
11e03(5): mov %rax,0x58(%rsp)
11e08(2): xor %eax,%eax
11e0a(3): mov %rsp,%r8
11e0d(3): nop (%rax)
11e10(3): mov (%r10),%eax
11e13(3): cmp $0x2f,%eax
11e16(2): jnbe 0x44(%rip)
11e18(3): mov %eax,%r11d
11e1b(4): add 0x10(%r10),%r11
11e1f(3): add $0x8,%eax
11e22(3): mov %eax,(%r10)
11e25(3): mov (%r11),%rax
11e28(3): test %rax,%rax
11e2b(4): mov %rax,0x0(%r8,%r9,8)
11e2f(2): jz 0xc(%rip)
11e31(4): add $0x1,%r9
11e35(4): cmp $0xa,%r9
11e39(2): jnz 0xffffffd7(%rip)
11e3b(5): call 0xfffffb75(%rip)
11e40(5): mov 0x58(%rsp),%rax
11e45(9): xor $0x28,%rax
11e4e(2): jnz 0x7(%rip)
11e50(4): add $0x68,%rsp
11e54(1): ret near (%rsp)
11e55(5): call 0xffff0cdb(%rip)
11e5a(4): mov 0x8(%r10),%r11
11e5e(4): lea 0x8(%r11),%rax
11e62(4): mov %rax,0x8(%r10)
11e66(2): jmp 0xffffffbf(%rip)

"version_etc" :
11e70(1): push %rbp
11e71(1): push %rbx
11e72(6): mov $0x20,%r10d
11e78(3): xor %r11d,%r11d
11e7b(7): sub $0xb8,%rsp
11e82(9): mov $0x28,%rax
11e8b(5): mov %rax,0x78(%rsp)
11e90(2): xor %eax,%eax
11e92(8): lea 0xd0(%rsp),%rax
11e9a(8): mov %r8,0xa0(%rsp)
11ea2(8): lea 0xd0(%rsp),%rbx
11eaa(5): lea 0x20(%rsp),%r8
11eaf(8): mov %r9,0xa8(%rsp)
11eb7(8): mov $0x20,0x8(%rsp)
11ebf(5): mov %rax,0x10(%rsp)
11ec4(8): lea 0x80(%rsp),%rax
11ecc(3): xor %r9d,%r9d
11ecf(5): mov %rax,0x18(%rsp)
11ed4(3): mov %rax,%rbp
11ed7(9): nop 0x0(%rax,%rax,1)
11ee0(4): cmp $0x2f,%r10d
11ee4(2): jnbe 0x58(%rip)
11ee6(3): mov %r10d,%eax
11ee9(6): mov $0x1,%r11d
11eef(4): add $0x8,%r10d
11ef3(3): add %rbp,%rax
11ef6(3): mov (%rax),%rax
11ef9(3): test %rax,%rax
11efc(4): mov %rax,0x0(%r8,%r9,8)
11f00(2): jz 0xc(%rip)
11f02(4): add $0x1,%r9
11f06(4): cmp $0xa,%r9
11f0a(2): jnz 0xffffffd6(%rip)
11f0c(3): test %r11b,%r11b
11f0f(2): jnz 0x26(%rip)
11f11(5): call 0xfffffa9f(%rip)
11f16(5): mov 0x78(%rsp),%rax
11f1b(9): xor $0x28,%rax
11f24(2): jnz 0xc(%rip)
11f26(7): add $0xb8,%rsp
11f2d(1): pop %rbx
11f2e(1): pop %rbp
11f2f(1): ret near (%rsp)
11f30(5): call 0xffff0c00(%rip)
11f35(5): mov %r10d,0x8(%rsp)
11f3a(2): jmp 0xffffffd7(%rip)
11f3c(3): mov %rbx,%rax
11f3f(4): add $0x8,%rbx
11f43(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
11f50(1): push %rbx
11f51(7): lea 0x6a81(%rip),%rsi
11f58(5): mov $0x5,%edx
11f5d(2): xor %edi,%edi
11f5f(5): call 0xffff0b71(%rip)
11f64(7): lea 0x6a83(%rip),%rdx
11f6b(3): mov %rax,%rsi
11f6e(5): mov $0x1,%edi
11f73(2): xor %eax,%eax
11f75(5): call 0xffff0f6b(%rip)
11f7a(7): lea 0x6a83(%rip),%rsi
11f81(5): mov $0x5,%edx
11f86(2): xor %edi,%edi
11f88(5): call 0xffff0b48(%rip)
11f8d(7): lea 0x5324(%rip),%rcx
11f94(7): lea 0x456b(%rip),%rdx
11f9b(3): mov %rax,%rsi
11f9e(5): mov $0x1,%edi
11fa3(2): xor %eax,%eax
11fa5(5): call 0xffff0f3b(%rip)
11faa(7): mov 0x20b137(%rip),%rbx
11fb1(7): lea 0x6c78(%rip),%rsi
11fb8(2): xor %edi,%edi
11fba(5): mov $0x5,%edx
11fbf(5): call 0xffff0b11(%rip)
11fc4(3): mov %rbx,%rsi
11fc7(3): mov %rax,%rdi
11fca(1): pop %rbx
11fcb(5): jmp 0xffff0ce5(%rip)

"can_write_any_file" :
11fd0(7): cmp $0x0,0x20d75a(%rip)
11fd7(2): jz 0x11(%rip)
11fd9(7): movzx 0x20d750(%rip),%eax
11fe0(1): ret near (%rsp)
11fe1(7): nop 0x0(%rax)
11fe8(4): sub $0x8,%rsp
11fec(5): call 0xffff0c14(%rip)
11ff1(2): test %eax,%eax
11ff3(7): mov $0x1,0x20d737(%rip)
11ffa(3): setz %al
11ffd(6): mov %al,0x20d72d(%rip)
12003(4): add $0x8,%rsp
12007(1): ret near (%rsp)

"xmalloc" :
12010(1): push %rbx
12011(3): mov %rdi,%rbx
12014(5): call 0xffff0ddc(%rip)
12019(3): test %rax,%rax
1201c(2): jnz 0x7(%rip)
1201e(3): test %rbx,%rbx
12021(2): jnz 0x4(%rip)
12023(1): pop %rbx
12024(1): ret near (%rsp)
12025(5): call 0x23b(%rip)

"xnmalloc" :
12030(3): mov %rdi,%rax
12033(3): mul %rax,%rsi,%rdx
12036(3): mov %rax,%rdi
12039(3): seto %al
1203c(3): test %rdi,%rdi
1203f(2): js 0xc(%rip)
12041(3): movzx %al,%eax
12044(3): test %rax,%rax
12047(2): jnz 0x4(%rip)
12049(2): jmp 0xffffffc7(%rip)
1204b(4): sub $0x8,%rsp
1204f(5): call 0x211(%rip)

"xrealloc" :
12070(3): test %rsi,%rsi
12073(1): push %rbx
12074(3): mov %rsi,%rbx
12077(2): jnz 0x7(%rip)
12079(3): test %rdi,%rdi
1207c(2): jnz 0x1c(%rip)
1207e(3): mov %rbx,%rsi
12081(5): call 0xffff0e0f(%rip)
12086(3): test %rax,%rax
12089(2): jnz 0x7(%rip)
1208b(3): test %rbx,%rbx
1208e(2): jnz 0x13(%rip)
12090(1): pop %rbx
12091(1): ret near (%rsp)
12092(6): nop 0x0(%rax,%rax,1)
12098(5): call 0xffff1038(%rip)
1209d(2): xor %eax,%eax
1209f(1): pop %rbx
120a0(1): ret near (%rsp)
120a1(5): call 0x1bf(%rip)

"xnrealloc" :
120b0(3): mov %rsi,%rax
120b3(3): mul %rax,%rdx,%rdx
120b6(3): mov %rax,%rsi
120b9(3): seto %al
120bc(3): test %rsi,%rsi
120bf(2): js 0xc(%rip)
120c1(3): movzx %al,%eax
120c4(3): test %rax,%rax
120c7(2): jnz 0x4(%rip)
120c9(2): jmp 0xffffffa7(%rip)
120cb(4): sub $0x8,%rsp
120cf(5): call 0x191(%rip)

"x2nrealloc" :
120e0(3): test %rdi,%rdi
120e3(3): mov %rdx,%r9
120e6(3): mov (%rsi),%rcx
120e9(2): jz 0x37(%rip)
120eb(2): xor %edx,%edx
120ed(a): mov $0x6148914691236517204,%rax
120f7(3): div %r9,%rax
120fa(3): cmp %rcx,%rax
120fd(2): jbe 0x3e(%rip)
120ff(3): mov %rcx,%rax
12102(3): shr $0x1,%rax
12105(5): lea 0x1(%rax,%rcx,1),%rcx
1210a(3): mov %rcx,(%rsi)
1210d(4): imul %r9,%rcx
12111(3): mov %rcx,%rsi
12114(5): jmp 0xffffff5c(%rip)
12119(7): nop 0x0(%rax)
12120(3): test %rcx,%rcx
12123(2): jz 0x25(%rip)
12125(3): mov %rcx,%rax
12128(3): mul %rax,%r9,%rdx
1212b(3): seto %dl
1212e(3): test %rax,%rax
12131(3): movzx %dl,%edx
12134(2): js 0x7(%rip)
12136(3): test %rdx,%rdx
12139(2): jz 0xffffffd1(%rip)
1213b(4): sub $0x8,%rsp
1213f(5): call 0x121(%rip)
12144(4): nop 0x0(%rax)
12148(2): xor %edx,%edx
1214a(5): mov $0x80,%eax
1214f(3): xor %r8d,%r8d
12152(3): div %r9,%rax
12155(3): test %rax,%rax
12158(4): setz %r8b
1215c(4): lea 0x0(%r8,%rax,1),%rcx
12160(2): jmp 0xffffffc5(%rip)

"x2realloc" :
12170(3): test %rdi,%rdi
12173(3): mov (%rsi),%rax
12176(2): jz 0x2a(%rip)
12178(a): mov $0x6148914691236517203,%rdx
12182(3): cmp %rdx,%rax
12185(2): jnbe 0x2c(%rip)
12187(3): mov %rax,%rdx
1218a(3): shr $0x1,%rdx
1218d(5): lea 0x1(%rdx,%rax,1),%rax
12192(3): mov %rax,(%rsi)
12195(3): mov %rax,%rsi
12198(5): jmp 0xfffffed8(%rip)
1219d(3): nop (%rax)
121a0(3): test %rax,%rax
121a3(5): mov $0x80,%edx
121a8(4): cmove %rdx,%rax
121ac(3): test %rax,%rax
121af(2): jns 0xffffffe3(%rip)
121b1(4): sub $0x8,%rsp
121b5(5): call 0xab(%rip)

"xzalloc" :
121c0(1): push %rbx
121c1(3): mov %rdi,%rbx
121c4(5): call 0xfffffe4c(%rip)
121c9(3): mov %rbx,%rdx
121cc(2): xor %esi,%esi
121ce(3): mov %rax,%rdi
121d1(1): pop %rbx
121d2(5): jmp 0xffff0a1e(%rip)

"xcalloc" :
121e0(3): mov %rdi,%rax
121e3(4): sub $0x8,%rsp
121e7(3): mul %rax,%rsi,%rdx
121ea(3): seto %dl
121ed(3): test %rax,%rax
121f0(2): js 0x19(%rip)
121f2(3): movzx %dl,%edx
121f5(3): test %rdx,%rdx
121f8(2): jnz 0x11(%rip)
121fa(5): call 0xffff0ad6(%rip)
121ff(3): test %rax,%rax
12202(2): jz 0x7(%rip)
12204(4): add $0x8,%rsp
12208(1): ret near (%rsp)
12209(5): call 0x57(%rip)

"xmemdup" :
12210(1): push %rbp
12211(1): push %rbx
12212(3): mov %rdi,%rbp
12215(3): mov %rsi,%rdi
12218(3): mov %rsi,%rbx
1221b(4): sub $0x8,%rsp
1221f(5): call 0xfffffdf1(%rip)
12224(4): add $0x8,%rsp
12228(3): mov %rbx,%rdx
1222b(3): mov %rbp,%rsi
1222e(1): pop %rbx
1222f(1): pop %rbp
12230(3): mov %rax,%rdi
12233(5): jmp 0xffff0b4d(%rip)

"xstrdup" :
12240(1): push %rbx
12241(3): mov %rdi,%rbx
12244(5): call 0xffff08ac(%rip)
12249(3): mov %rbx,%rdi
1224c(4): lea 0x1(%rax),%rsi
12250(1): pop %rbx
12251(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
12260(7): lea 0x6a68(%rip),%rsi
12267(4): sub $0x8,%rsp
1226b(5): mov $0x5,%edx
12270(2): xor %edi,%edi
12272(5): call 0xffff085e(%rip)
12277(6): mov 0x20adcb(%rip),%edi
1227d(7): lea 0x6bdc(%rip),%rdx
12284(3): mov %rax,%rcx
12287(2): xor %esi,%esi
12289(2): xor %eax,%eax
1228b(5): call 0xffff0ca5(%rip)
12290(5): call 0xffff06b0(%rip)

"xstrtoul" :
122a0(2): push %r15
122a2(2): push %r14
122a4(2): push %r13
122a6(2): push %r12
122a8(1): push %rbp
122a9(1): push %rbx
122aa(4): sub $0x28,%rsp
122ae(9): mov $0x28,%rax
122b7(5): mov %rax,0x18(%rsp)
122bc(2): xor %eax,%eax
122be(3): cmp $0x24,%edx
122c1(6): jnbe 0x364(%rip)
122c7(5): lea 0x10(%rsp),%rax
122cc(3): mov %rsi,%r15
122cf(3): test %rsi,%rsi
122d2(3): mov %rdi,%rbp
122d5(4): mov %edx,0x8(%rsp)
122d9(3): mov %rcx,%r14
122dc(3): mov %r8,%r13
122df(4): cmove %rax,%r15
122e3(5): call 0xffff066d(%rip)
122e8(6): mov $0x0,(%rax)
122ee(3): mov %rax,%r12
122f1(4): movzx 0x0(%rbp),%ebx
122f5(5): call 0xffff0dcb(%rip)
122fa(4): mov 0x8(%rsp),%edx
122fe(3): mov (%rax),%rsi
12301(3): mov %rbp,%rax
12304(2): jmp 0x13(%rip)
12306(a): nop 0x0(%rax,%rax,1)
12310(4): add $0x1,%rax
12314(3): movzx (%rax),%ebx
12317(3): movzx %bl,%ecx
1231a(5): test $0x20,0x1(%rsi,%rcx,2)
1231f(2): jnz 0xfffffff1(%rip)
12321(3): cmp $0x2d,%bl
12324(2): jz 0x54(%rip)
12326(3): mov %r15,%rsi
12329(3): mov %rbp,%rdi
1232c(5): call 0xffff0cb4(%rip)
12331(3): mov (%r15),%rcx
12334(3): mov %rax,%rbx
12337(3): cmp %rbp,%rcx
1233a(2): jz 0x2e(%rip)
1233c(4): mov (%r12),%eax
12340(2): test %eax,%eax
12342(2): jz 0x66(%rip)
12344(3): cmp $0x22,%eax
12347(5): mov $0x1,%ebp
1234c(2): jnz 0x2c(%rip)
1234e(3): test %r13,%r13
12351(2): jz 0xb(%rip)
12353(4): movzx (%rcx),%r12d
12357(3): test %r12b,%r12b
1235a(2): jnz 0x7d(%rip)
1235c(3): mov %rbx,(%r14)
1235f(2): jmp 0x1e(%rip)
12361(7): nop 0x0(%rax)
12368(3): test %r13,%r13
1236b(5): mov %rcx,0x8(%rsp)
12370(2): jnz 0x40(%rip)
12372(6): nop 0x0(%rax,%rax,1)
12378(5): mov $0x4,%ebp
1237d(5): mov 0x18(%rsp),%rdi
12382(9): xor $0x28,%rdi
1238b(2): mov %ebp,%eax
1238d(6): jnz 0x293(%rip)
12393(4): add $0x28,%rsp
12397(1): pop %rbx
12398(1): pop %rbp
12399(2): pop %r12
1239b(2): pop %r13
1239d(2): pop %r14
1239f(2): pop %r15
123a1(1): ret near (%rsp)
123a2(6): nop 0x0(%rax,%rax,1)
123a8(2): xor %ebp,%ebp
123aa(2): jmp 0xffffffa4(%rip)
123ac(4): nop 0x0(%rax)
123b0(5): movzx 0x0(%rbp),%r12d
123b5(3): test %r12b,%r12b
123b8(2): jz 0xffffffc0(%rip)
123ba(4): movsx %r12b,%esi
123be(3): mov %r13,%rdi
123c1(2): xor %ebp,%ebp
123c3(5): call 0xffff07ad(%rip)
123c8(3): test %rax,%rax
123cb(5): mov $0x1,%ebx
123d0(5): mov 0x8(%rsp),%rcx
123d5(2): jz 0xffffffa3(%rip)
123d7(4): movsx %r12b,%esi
123db(3): mov %r13,%rdi
123de(5): mov %rcx,0x8(%rsp)
123e3(5): call 0xffff078d(%rip)
123e8(3): test %rax,%rax
123eb(5): mov 0x8(%rsp),%rcx
123f0(6): jz 0xcc(%rip)
123f6(5): lea 0xffffffbb(%r12),%eax
123fb(2): cmp $0x2f,%al
123fd(2): jnbe 0x53(%rip)
123ff(a): mov $0x142129060940101,%rdx
12409(4): bt %rax,%rdx
1240d(2): jnb 0x43(%rip)
1240f(5): mov $0x30,%esi
12414(3): mov %r13,%rdi
12417(5): mov %rcx,0x8(%rsp)
1241c(5): call 0xffff0754(%rip)
12421(3): test %rax,%rax
12424(5): mov 0x8(%rsp),%rcx
12429(2): jz 0x27(%rip)
1242b(4): movzx 0x1(%rcx),%eax
1242f(2): cmp $0x44,%al
12431(2): jz 0xe(%rip)
12433(2): cmp $0x69,%al
12435(6): jz 0x1d3(%rip)
1243b(2): cmp $0x42,%al
1243d(2): jnz 0x13(%rip)
1243f(5): mov $0x2,%edi
12444(5): mov $0x3e8,%esi
12449(2): jmp 0x11(%rip)
1244b(5): nop 0x0(%rax,%rax,1)
12450(5): mov $0x1,%edi
12455(5): mov $0x400,%esi
1245a(4): sub $0x42,%r12d
1245e(4): cmp $0x35,%r12b
12462(2): jnbe 0x5a(%rip)
12464(7): lea 0x68bd(%rip),%rdx
1246b(4): movzx %r12b,%r12d
1246f(4): movsxd 0x0(%rdx,%r12,4),%rax
12473(3): add %rdx,%rax
12476(2): jmp %rax
12478(3): mov %rbx,%rax
1247b(3): mul %rax,%rsi,%rdx
1247e(6): jo 0x1f3(%rip)
12484(3): xor %r8d,%r8d
12487(3): mul %rax,%rsi,%rdx
1248a(6): jo 0x1d8(%rip)
12490(3): mov %rax,%rbx
12493(3): or %r8d,%ebp
12496(a): nop 0x0(%rax,%rax,1)
124a0(3): movsxd %edi,%rdi
124a3(2): mov %ebp,%eax
124a5(3): add %rdi,%rcx
124a8(3): or $0x2,%eax
124ab(3): mov %rcx,(%r15)
124ae(3): cmp $0x0,(%rcx)
124b1(3): mov %rbx,(%r14)
124b4(3): cmovne %eax,%ebp
124b7(5): jmp 0xfffffec6(%rip)
124bc(3): mov %rbx,(%r14)
124bf(3): or $0x2,%ebp
124c2(5): jmp 0xfffffebb(%rip)
124c7(5): mov $0x2,%edx
124cc(3): mov %rdx,%rax
124cf(3): mul %rax,%rbx,%rdx
124d2(6): jo 0x9c(%rip)
124d8(3): add %rbx,%rbx
124db(2): jmp 0xffffffc5(%rip)
124dd(5): mov $0x200,%edx
124e2(3): mov %rdx,%rax
124e5(3): mul %rax,%rbx,%rdx
124e8(6): jo 0x86(%rip)
124ee(4): shl/sal $0x9,%rbx
124f2(2): jmp 0xffffffae(%rip)
124f4(6): mov $0x7,%r8d
124fa(3): xor %r9d,%r9d
124fd(3): nop (%rax)
12500(3): mov %rbx,%rax
12503(3): mul %rax,%rsi,%rdx
12506(3): mov %rax,%rbx
12509(6): jo 0x195(%rip)
1250f(4): sub $0x1,%r8d
12513(2): jnz 0xffffffed(%rip)
12515(3): or %r9d,%ebp
12518(2): jmp 0xffffff88(%rip)
1251a(6): mov $0x8,%r8d
12520(3): xor %r9d,%r9d
12523(5): nop 0x0(%rax,%rax,1)
12528(3): mov %rbx,%rax
1252b(3): mul %rax,%rsi,%rdx
1252e(3): mov %rax,%rbx
12531(6): jo 0x14f(%rip)
12537(4): sub $0x1,%r8d
1253b(2): jnz 0xffffffed(%rip)
1253d(2): jmp 0xffffffd8(%rip)
1253f(6): mov $0x4,%r8d
12545(3): xor %r9d,%r9d
12548(3): mov %rbx,%rax
1254b(3): mul %rax,%rsi,%rdx
1254e(3): mov %rax,%rbx
12551(6): jo 0x102(%rip)
12557(4): sub $0x1,%r8d
1255b(2): jnz 0xffffffed(%rip)
1255d(2): jmp 0xffffffb8(%rip)
1255f(3): mov %rbx,%rax
12562(3): mul %rax,%rsi,%rdx
12565(3): mov %rax,%rbx
12568(6): jno 0xffffff38(%rip)
1256e(5): mov $0x1,%ebp
12573(4): or $0xffffffff,%rbx
12577(5): jmp 0xffffff29(%rip)
1257c(4): nop 0x0(%rax)
12580(6): mov $0x5,%r8d
12586(3): xor %r9d,%r9d
12589(3): mov %rbx,%rax
1258c(3): mul %rax,%rsi,%rdx
1258f(3): mov %rax,%rbx
12592(6): jo 0xfd(%rip)
12598(4): sub $0x1,%r8d
1259c(2): jnz 0xffffffed(%rip)
1259e(5): jmp 0xffffff77(%rip)
125a3(6): mov $0x6,%r8d
125a9(3): xor %r9d,%r9d
125ac(3): mov %rbx,%rax
125af(3): mul %rax,%rsi,%rdx
125b2(3): mov %rax,%rbx
125b5(6): jo 0x8f(%rip)
125bb(4): sub $0x1,%r8d
125bf(2): jnz 0xffffffed(%rip)
125c1(5): jmp 0xffffff54(%rip)
125c6(5): mov $0x400,%edx
125cb(3): mov %rdx,%rax
125ce(3): mul %rax,%rbx,%rdx
125d1(2): jo 0xffffff9d(%rip)
125d3(4): shl/sal $0xa,%rbx
125d7(5): jmp 0xfffffec9(%rip)
125dc(3): mov %rbx,%rax
125df(3): mul %rax,%rsi,%rdx
125e2(6): jo 0xcb(%rip)
125e8(3): xor %r8d,%r8d
125eb(3): mul %rax,%rsi,%rdx
125ee(6): jno 0xfffffe99(%rip)
125f4(6): mov $0x1,%r8d
125fa(4): or $0xffffffff,%rax
125fe(5): jmp 0xfffffe89(%rip)
12603(5): nop 0x0(%rax,%rax,1)
12608(2): xor %edi,%edi
1260a(4): cmp $0x42,0x2(%rcx)
1260e(5): mov $0x400,%esi
12613(4): setz %dil
12617(4): lea 0x1(%rdi,%rdi,1),%edi
1261b(5): jmp 0xfffffe3f(%rip)
12620(5): call 0xffff0510(%rip)
12625(7): lea 0x67d4(%rip),%rcx
1262c(7): lea 0x66ad(%rip),%rsi
12633(7): lea 0x66c6(%rip),%rdi
1263a(5): mov $0x54,%edx
1263f(5): call 0xffff05a1(%rip)
12644(6): mov $0x1,%r9d
1264a(4): or $0xffffffff,%rbx
1264e(5): jmp 0xffffff6d(%rip)
12653(6): mov $0x1,%r9d
12659(4): or $0xffffffff,%rbx
1265d(5): jmp 0xfffffefa(%rip)
12662(6): mov $0x1,%r8d
12668(4): or $0xffffffff,%rbx
1266c(5): jmp 0xfffffe27(%rip)
12671(4): or $0xffffffff,%rax
12675(6): mov $0x1,%r8d
1267b(5): jmp 0xfffffe0c(%rip)
12680(6): mov $0x1,%r9d
12686(4): or $0xffffffff,%rbx
1268a(5): jmp 0xfffffead(%rip)
1268f(6): mov $0x1,%r9d
12695(4): or $0xffffffff,%rbx
12699(5): jmp 0xfffffeff(%rip)
1269e(6): mov $0x1,%r9d
126a4(4): or $0xffffffff,%rbx
126a8(5): jmp 0xfffffe67(%rip)
126ad(6): mov $0x1,%r8d
126b3(4): or $0xffffffff,%rax
126b7(5): jmp 0xffffff34(%rip)

"yesno" :
126c0(1): push %rbx
126c1(5): mov $0xa,%edx
126c6(2): xor %ebx,%ebx
126c8(4): sub $0x20,%rsp
126cc(7): mov 0x20aa1d(%rip),%rcx
126d3(5): lea 0x10(%rsp),%rsi
126d8(5): lea 0x8(%rsp),%rdi
126dd(9): mov $0x0,0x8(%rsp)
126e6(9): mov $0x28,%rax
126ef(5): mov %rax,0x18(%rsp)
126f4(2): xor %eax,%eax
126f6(9): mov $0x0,0x10(%rsp)
126ff(5): call 0xffff05e1(%rip)
12704(3): test %rax,%rax
12707(2): jle 0x1b(%rip)
12709(5): mov 0x8(%rsp),%rdi
1270e(5): lea 0xffffffff(%rdi,%rax,1),%rax
12713(3): cmp $0xa,(%rax)
12716(2): jz 0x32(%rip)
12718(5): call 0xffff0628(%rip)
1271d(2): test %eax,%eax
1271f(3): setnle %bl
12722(5): mov 0x8(%rsp),%rdi
12727(5): call 0xffff09a9(%rip)
1272c(5): mov 0x18(%rsp),%rdx
12731(9): xor $0x28,%rdx
1273a(2): mov %ebx,%eax
1273c(2): jnz 0x16(%rip)
1273e(4): add $0x20,%rsp
12742(1): pop %rbx
12743(1): ret near (%rsp)
12744(4): nop 0x0(%rax)
12748(3): mov $0x0,(%rax)
1274b(5): mov 0x8(%rsp),%rdi
12750(2): jmp 0xffffffc8(%rip)
12752(5): call 0xffff03de(%rip)

"rpl_fflush" :
12760(3): test %rdi,%rdi
12763(1): push %rbx
12764(3): mov %rdi,%rbx
12767(2): jz 0x13(%rip)
12769(5): call 0xffff06e7(%rip)
1276e(2): test %eax,%eax
12770(2): jz 0xa(%rip)
12772(6): test $0x100,(%rbx)
12778(2): jnz 0x10(%rip)
1277a(3): mov %rbx,%rdi
1277d(1): pop %rbx
1277e(5): jmp 0xffff0682(%rip)
12783(5): nop 0x0(%rax,%rax,1)
12788(3): mov %rbx,%rdi
1278b(5): mov $0x1,%edx
12790(2): xor %esi,%esi
12792(5): call 0x3e(%rip)
12797(3): mov %rbx,%rdi
1279a(1): pop %rbx
1279b(5): jmp 0xffff0665(%rip)

"freadahead" :
127a0(2): xor %eax,%eax
127a2(4): mov 0x20(%rdi),%rcx
127a6(4): cmp %rcx,0x28(%rdi)
127aa(2): jnbe 0x1d(%rip)
127ac(4): mov 0x10(%rdi),%rax
127b0(4): sub 0x8(%rdi),%rax
127b4(6): test $0x100,(%rdi)
127ba(2): jz 0xd(%rip)
127bc(4): mov 0x58(%rdi),%rdx
127c0(4): sub 0x48(%rdi),%rdx
127c4(3): add %rdx,%rax
127c7(2): REP ret near (%rsp)

"rpl_fseeko" :
127d0(4): mov 0x8(%rdi),%rax
127d4(4): cmp %rax,0x10(%rdi)
127d8(2): jz 0x8(%rip)
127da(5): jmp 0xffff0796(%rip)
127df(1): nop 
127e0(4): mov 0x20(%rdi),%rax
127e4(4): cmp %rax,0x28(%rdi)
127e8(2): jnz 0xfffffff2(%rip)
127ea(5): cmp $0x0,0x48(%rdi)
127ef(2): jnz 0xffffffeb(%rip)
127f1(2): push %r12
127f3(1): push %rbp
127f4(3): mov %edx,%r12d
127f7(1): push %rbx
127f8(3): mov %rsi,%rbp
127fb(3): mov %rdi,%rbx
127fe(5): call 0xffff05b2(%rip)
12803(3): mov %r12d,%edx
12806(3): mov %rbp,%rsi
12809(2): mov %eax,%edi
1280b(5): call 0xffff03b5(%rip)
12810(4): cmp $0xffffffff,%rax
12814(2): jz 0xe(%rip)
12816(3): and $0xef,(%rbx)
12819(7): mov %rax,0x90(%rbx)
12820(2): xor %eax,%eax
12822(1): pop %rbx
12823(1): pop %rbp
12824(2): pop %r12
12826(1): ret near (%rsp)

"rpl_mbrtowc" :
12830(2): push %r13
12832(2): push %r12
12834(3): mov %rsi,%r13
12837(1): push %rbp
12838(1): push %rbx
12839(3): mov %rdi,%rbx
1283c(3): mov %rdx,%r12
1283f(4): sub $0x18,%rsp
12843(9): mov $0x28,%rax
1284c(5): mov %rax,0x8(%rsp)
12851(2): xor %eax,%eax
12853(5): lea 0x4(%rsp),%rax
12858(3): test %rdi,%rdi
1285b(4): cmove %rax,%rbx
1285f(3): mov %rbx,%rdi
12862(5): call 0xffff02fe(%rip)
12867(4): cmp $0xfffffffd,%rax
1286b(3): mov %rax,%rbp
1286e(2): jbe 0x22(%rip)
12870(3): test %r12,%r12
12873(2): jz 0x1d(%rip)
12875(2): xor %edi,%edi
12877(5): call 0x6c9(%rip)
1287c(2): test %al,%al
1287e(2): jnz 0x12(%rip)
12880(5): movzx 0x0(%r13),%eax
12885(5): mov $0x1,%ebp
1288a(2): mov %eax,(%rbx)
1288c(4): nop 0x0(%rax)
12890(5): mov 0x8(%rsp),%rdx
12895(9): xor $0x28,%rdx
1289e(3): mov %rbp,%rax
128a1(2): jnz 0xd(%rip)
128a3(4): add $0x18,%rsp
128a7(1): pop %rbx
128a8(1): pop %rbp
128a9(2): pop %r12
128ab(2): pop %r13
128ad(1): ret near (%rsp)
128ae(5): call 0xffff0282(%rip)

"rpl_vfprintf" :
128c0(2): push %r13
128c2(2): push %r12
128c4(3): mov %rsi,%rax
128c7(1): push %rbp
128c8(1): push %rbx
128c9(3): mov %rdi,%r13
128cc(7): sub $0x7f8,%rsp
128d3(5): lea 0x10(%rsp),%r12
128d8(5): lea 0x8(%rsp),%rsi
128dd(9): mov $0x7d0,0x8(%rsp)
128e6(9): mov $0x28,%rcx
128ef(8): mov %rcx,0x7e8(%rsp)
128f7(2): xor %ecx,%ecx
128f9(3): mov %r12,%rdi
128fc(3): mov %rdx,%rcx
128ff(3): mov %rax,%rdx
12902(5): call 0x195e(%rip)
12907(3): test %rax,%rax
1290a(5): mov 0x8(%rsp),%rbx
1290f(6): jz 0x8f(%rip)
12915(3): mov %r13,%rcx
12918(3): mov %rbx,%rdx
1291b(5): mov $0x1,%esi
12920(3): mov %rax,%rdi
12923(3): mov %rax,%rbp
12926(5): call 0xffff071a(%rip)
1292b(3): cmp %rbx,%rax
1292e(2): jb 0x42(%rip)
12930(3): cmp %r12,%rbp
12933(2): jz 0xa(%rip)
12935(3): mov %rbp,%rdi
12938(5): call 0xffff0798(%rip)
1293d(7): cmp $0x7fffffff,%rbx
12944(2): jnbe 0x4f(%rip)
12946(8): mov 0x7e8(%rsp),%rcx
1294e(9): xor $0x28,%rcx
12957(2): mov %ebx,%eax
12959(2): jnz 0x54(%rip)
1295b(7): add $0x7f8,%rsp
12962(1): pop %rbx
12963(1): pop %rbp
12964(2): pop %r12
12966(2): pop %r13
12968(1): ret near (%rsp)
12969(7): nop 0x0(%rax)
12970(3): cmp %r12,%rbp
12973(5): mov $0xffffffff,%ebx
12978(2): jz 0xffffffce(%rip)
1297a(5): call 0xfffeffd6(%rip)
1297f(3): mov (%rax),%r13d
12982(3): mov %rax,%r12
12985(3): mov %rbp,%rdi
12988(5): call 0xffff0748(%rip)
1298d(4): mov %r13d,(%r12)
12991(2): jmp 0xffffffb5(%rip)
12993(5): call 0xfffeffbd(%rip)
12998(6): mov $0x4b,(%rax)
1299e(3): mov %r13,%rdi
129a1(5): mov $0xffffffff,%ebx
129a6(5): call 0x18aa(%rip)
129ab(2): jmp 0xffffff9b(%rip)
129ad(5): call 0xffff0183(%rip)

"get_permissions" :
129d0(2): mov %edx,(%rcx)
129d2(2): xor %eax,%eax
129d4(1): ret near (%rsp)

"chmod_or_fchmod" :
129e0(2): mov %esi,%eax
129e2(2): mov %edx,%esi
129e4(3): cmp $0xff,%eax
129e7(2): jz 0x9(%rip)
129e9(2): mov %eax,%edi
129eb(5): jmp 0xffff0505(%rip)
129f0(5): jmp 0xffff0520(%rip)

"set_permissions" :
12a00(4): sub $0x8,%rsp
12a04(3): mov %rsi,%rax
12a07(2): mov %edx,%esi
12a09(2): mov (%rdi),%edx
12a0b(3): mov %rax,%rdi
12a0e(5): call 0xffffffd2(%rip)
12a13(2): test %eax,%eax
12a15(3): setnz %al
12a18(4): add $0x8,%rsp
12a1c(3): movzx %al,%eax
12a1f(2): neg %eax
12a21(1): ret near (%rsp)

"__argmatch_die" :
12a30(5): mov $0x1,%edi
12a35(5): jmp 0xffff1eeb(%rip)

"argmatch" :
12a40(2): push %r15
12a42(2): push %r14
12a44(3): mov %rsi,%r15
12a47(2): push %r13
12a49(2): push %r12
12a4b(3): mov %rcx,%r13
12a4e(1): push %rbp
12a4f(1): push %rbx
12a50(3): mov %rdx,%rbp
12a53(4): sub $0x28,%rsp
12a57(5): mov %rdi,0x8(%rsp)
12a5c(5): mov %rdx,0x18(%rsp)
12a61(5): call 0xffff008f(%rip)
12a66(3): mov (%r15),%r14
12a69(8): mov $0xffffffff,(%rsp)
12a71(3): test %r14,%r14
12a74(6): jz 0xb9(%rip)
12a7a(3): mov %rax,%r12
12a7d(5): mov $0x0,0x17(%rsp)
12a82(2): xor %ebx,%ebx
12a84(2): jmp 0x53(%rip)
12a86(a): nop 0x0(%rax,%rax,1)
12a90(5): mov 0x18(%rsp),%rax
12a95(3): test %rax,%rax
12a98(6): jz 0xa8(%rip)
12a9e(4): mov (%rsp),%rdi
12aa2(3): mov %r13,%rdx
12aa5(3): mov %rbp,%rsi
12aa8(4): imul %r13,%rdi
12aac(3): add %rax,%rdi
12aaf(5): call 0xffff01e1(%rip)
12ab4(2): test %eax,%eax
12ab6(5): movzx 0x17(%rsp),%eax
12abb(5): mov $0x1,%ecx
12ac0(3): cmovne %ecx,%eax
12ac3(4): mov %al,0x17(%rsp)
12ac7(4): add $0x1,%rbx
12acb(3): add %r13,%rbp
12ace(4): mov 0x0(%r15,%rbx,8),%r14
12ad2(3): test %r14,%r14
12ad5(2): jz 0x43(%rip)
12ad7(5): mov 0x8(%rsp),%rsi
12adc(3): mov %r12,%rdx
12adf(3): mov %r14,%rdi
12ae2(5): call 0xfffefe8e(%rip)
12ae7(2): test %eax,%eax
12ae9(2): jnz 0xffffffde(%rip)
12aeb(3): mov %r14,%rdi
12aee(5): call 0xffff0002(%rip)
12af3(3): cmp %r12,%rax
12af6(2): jz 0x5a(%rip)
12af8(5): cmp $0xffffffff,(%rsp)
12afd(2): jnz 0xffffff93(%rip)
12aff(4): mov %rbx,(%rsp)
12b03(4): add $0x1,%rbx
12b07(3): add %r13,%rbp
12b0a(4): mov 0x0(%r15,%rbx,8),%r14
12b0e(3): test %r14,%r14
12b11(2): jnz 0xffffffc6(%rip)
12b13(5): nop 0x0(%rax,%rax,1)
12b18(5): cmp $0x0,0x17(%rsp)
12b1d(7): mov $0xfffffffe,%rax
12b24(5): cmove (%rsp),%rax
12b29(4): mov %rax,(%rsp)
12b2d(4): mov (%rsp),%rax
12b31(4): add $0x28,%rsp
12b35(1): pop %rbx
12b36(1): pop %rbp
12b37(2): pop %r12
12b39(2): pop %r13
12b3b(2): pop %r14
12b3d(2): pop %r15
12b3f(1): ret near (%rsp)
12b40(5): mov $0x1,0x17(%rsp)
12b45(2): jmp 0xffffff82(%rip)
12b47(9): nop 0x0(%rax,%rax,1)
12b50(4): mov %rbx,(%rsp)
12b54(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
12b60(4): cmp $0xffffffff,%rdx
12b64(2): push %r12
12b66(5): mov $0x5,%edx
12b6b(1): push %rbp
12b6c(3): mov %rsi,%r12
12b6f(1): push %rbx
12b70(3): mov %rdi,%rbp
12b73(2): jz 0x4d(%rip)
12b75(7): lea 0x62a8(%rip),%rsi
12b7c(2): xor %edi,%edi
12b7e(5): call 0xfffeff52(%rip)
12b83(3): mov %rax,%rbx
12b86(3): mov %rbp,%rsi
12b89(5): mov $0x1,%edi
12b8e(5): call 0xffffcb12(%rip)
12b93(3): mov %r12,%rdx
12b96(3): mov %rax,%rbp
12b99(5): mov $0x8,%esi
12b9e(2): xor %edi,%edi
12ba0(5): call 0xffffc730(%rip)
12ba5(3): mov %rbp,%r8
12ba8(3): mov %rbx,%rdx
12bab(3): mov %rax,%rcx
12bae(1): pop %rbx
12baf(1): pop %rbp
12bb0(2): pop %r12
12bb2(2): xor %esi,%esi
12bb4(2): xor %edi,%edi
12bb6(2): xor %eax,%eax
12bb8(5): jmp 0xffff0378(%rip)
12bbd(3): nop (%rax)
12bc0(7): lea 0x6242(%rip),%rsi
12bc7(2): xor %edi,%edi
12bc9(5): call 0xfffeff07(%rip)
12bce(3): mov %rax,%rbx
12bd1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
12be0(2): push %r15
12be2(2): push %r14
12be4(3): mov %rdi,%r14
12be7(2): push %r13
12be9(2): push %r12
12beb(2): xor %edi,%edi
12bed(1): push %rbp
12bee(1): push %rbx
12bef(3): mov %rsi,%rbp
12bf2(7): lea 0x6248(%rip),%rsi
12bf9(3): mov %rdx,%r12
12bfc(5): mov $0x5,%edx
12c01(4): sub $0x8,%rsp
12c05(7): mov 0x20a514(%rip),%rbx
12c0c(5): call 0xfffefec4(%rip)
12c11(3): mov %rax,%rdi
12c14(3): mov %rbx,%rsi
12c17(5): call 0xffff0099(%rip)
12c1c(3): mov (%r14),%r15
12c1f(3): test %r15,%r15
12c22(6): jz 0x96(%rip)
12c28(3): xor %r13d,%r13d
12c2b(2): xor %ebx,%ebx
12c2d(2): jmp 0x3b(%rip)
12c2f(1): nop 
12c30(3): mov %r15,%rdi
12c33(4): add $0x1,%rbx
12c37(3): mov %rbp,%r13
12c3a(5): call 0xffffca86(%rip)
12c3f(7): mov 0x20a4da(%rip),%rdi
12c46(7): lea 0x6209(%rip),%rdx
12c4d(3): mov %rax,%rcx
12c50(5): mov $0x1,%esi
12c55(2): xor %eax,%eax
12c57(3): add %r12,%rbp
12c5a(5): call 0xffff03f6(%rip)
12c5f(4): mov 0x0(%r14,%rbx,8),%r15
12c63(3): test %r15,%r15
12c66(2): jz 0x52(%rip)
12c68(3): test %rbx,%rbx
12c6b(2): jz 0xffffffc5(%rip)
12c6d(3): mov %r12,%rdx
12c70(3): mov %rbp,%rsi
12c73(3): mov %r13,%rdi
12c76(5): call 0xffff001a(%rip)
12c7b(2): test %eax,%eax
12c7d(2): jnz 0xffffffb3(%rip)
12c7f(3): mov %r15,%rdi
12c82(4): add $0x1,%rbx
12c86(3): add %r12,%rbp
12c89(5): call 0xffffca37(%rip)
12c8e(7): mov 0x20a48b(%rip),%rdi
12c95(7): lea 0x61c2(%rip),%rdx
12c9c(3): mov %rax,%rcx
12c9f(5): mov $0x1,%esi
12ca4(2): xor %eax,%eax
12ca6(5): call 0xffff03aa(%rip)
12cab(4): mov 0x0(%r14,%rbx,8),%r15
12caf(3): test %r15,%r15
12cb2(2): jnz 0xffffffb6(%rip)
12cb4(4): nop 0x0(%rax)
12cb8(7): mov 0x20a461(%rip),%rdi
12cbf(4): mov 0x28(%rdi),%rax
12cc3(4): cmp 0x30(%rdi),%rax
12cc7(2): jnb 0x21(%rip)
12cc9(4): lea 0x1(%rax),%rdx
12ccd(4): mov %rdx,0x28(%rdi)
12cd1(3): mov $0xa,(%rax)
12cd4(4): add $0x8,%rsp
12cd8(1): pop %rbx
12cd9(1): pop %rbp
12cda(2): pop %r12
12cdc(2): pop %r13
12cde(2): pop %r14
12ce0(2): pop %r15
12ce2(1): ret near (%rsp)
12ce3(5): nop 0x0(%rax,%rax,1)
12ce8(4): add $0x8,%rsp
12cec(5): mov $0xa,%esi
12cf1(1): pop %rbx
12cf2(1): pop %rbp
12cf3(2): pop %r12
12cf5(2): pop %r13
12cf7(2): pop %r14
12cf9(2): pop %r15
12cfb(5): jmp 0xfffefe95(%rip)

"__xargmatch_internal" :
12d00(2): push %r15
12d02(2): push %r14
12d04(3): mov %rdi,%r14
12d07(2): push %r13
12d09(2): push %r12
12d0b(3): mov %rsi,%r12
12d0e(1): push %rbp
12d0f(1): push %rbx
12d10(3): mov %rcx,%rbp
12d13(3): mov %rdx,%rbx
12d16(3): mov %r8,%rcx
12d19(3): mov %rbp,%rdx
12d1c(4): sub $0x8,%rsp
12d20(3): mov %rbx,%rsi
12d23(3): mov %r12,%rdi
12d26(3): mov %r8,%r15
12d29(3): mov %r9,%r13
12d2c(5): call 0xfffffd14(%rip)
12d31(3): test %rax,%rax
12d34(2): js 0x11(%rip)
12d36(4): add $0x8,%rsp
12d3a(1): pop %rbx
12d3b(1): pop %rbp
12d3c(2): pop %r12
12d3e(2): pop %r13
12d40(2): pop %r14
12d42(2): pop %r15
12d44(1): ret near (%rsp)
12d45(3): mov %rax,%rdx
12d48(3): mov %r12,%rsi
12d4b(3): mov %r14,%rdi
12d4e(5): call 0xfffffe12(%rip)
12d53(3): mov %r15,%rdx
12d56(3): mov %rbp,%rsi
12d59(3): mov %rbx,%rdi
12d5c(5): call 0xfffffe84(%rip)
12d61(3): call %r13
12d64(7): mov $0xffffffff,%rax
12d6b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
12d70(2): push %r14
12d72(2): push %r13
12d74(2): push %r12
12d76(1): push %rbp
12d77(1): push %rbx
12d78(3): mov (%rsi),%r14
12d7b(3): test %r14,%r14
12d7e(2): jz 0x33(%rip)
12d80(3): mov %rcx,%r12
12d83(3): mov %rdi,%r13
12d86(3): mov %rdx,%rbp
12d89(4): lea 0x8(%rsi),%rbx
12d8d(2): jmp 0x12(%rip)
12d8f(1): nop 
12d90(3): mov (%rbx),%r14
12d93(3): add %r12,%rbp
12d96(4): add $0x8,%rbx
12d9a(3): test %r14,%r14
12d9d(2): jz 0x14(%rip)
12d9f(3): mov %r12,%rdx
12da2(3): mov %rbp,%rsi
12da5(3): mov %r13,%rdi
12da8(5): call 0xfffefee8(%rip)
12dad(2): test %eax,%eax
12daf(2): jnz 0xffffffe1(%rip)
12db1(1): pop %rbx
12db2(3): mov %r14,%rax
12db5(1): pop %rbp
12db6(2): pop %r12
12db8(2): pop %r13
12dba(2): pop %r14
12dbc(1): ret near (%rsp)

"close_stream" :
12dc0(2): push %r12
12dc2(1): push %rbp
12dc3(3): mov %rdi,%rbp
12dc6(1): push %rbx
12dc7(5): call 0xfffefbd9(%rip)
12dcc(3): mov 0x0(%rbp),%ebx
12dcf(3): mov %rbp,%rdi
12dd2(3): mov %rax,%r12
12dd5(5): call 0x117b(%rip)
12dda(3): and $0x20,%ebx
12ddd(2): test %ebx,%ebx
12ddf(2): jnz 0x19(%rip)
12de1(2): test %eax,%eax
12de3(2): jz 0xc(%rip)
12de5(3): test %r12,%r12
12de8(5): mov $0xffffffff,%eax
12ded(2): jz 0x3b(%rip)
12def(1): pop %rbx
12df0(1): pop %rbp
12df1(2): pop %r12
12df3(1): ret near (%rsp)
12df4(4): nop 0x0(%rax)
12df8(2): test %eax,%eax
12dfa(2): jnz 0x1e(%rip)
12dfc(5): call 0xfffefb54(%rip)
12e01(6): mov $0x0,(%rax)
12e07(5): mov $0xffffffff,%eax
12e0c(1): pop %rbx
12e0d(1): pop %rbp
12e0e(2): pop %r12
12e10(1): ret near (%rsp)
12e11(7): nop 0x0(%rax)
12e18(1): pop %rbx
12e19(5): mov $0xffffffff,%eax
12e1e(1): pop %rbp
12e1f(2): pop %r12
12e21(1): ret near (%rsp)
12e22(6): nop 0x0(%rax,%rax,1)
12e28(5): call 0xfffefb28(%rip)
12e2d(3): cmp $0x9,(%rax)
12e30(1): pop %rbx
12e31(1): pop %rbp
12e32(2): pop %r12
12e34(3): setnz %al
12e37(3): movzx %al,%eax
12e3a(2): neg %eax
12e3c(1): ret near (%rsp)

"opendir_safer" :
12e40(2): push %r14
12e42(2): push %r13
12e44(2): push %r12
12e46(1): push %rbp
12e47(1): push %rbx
12e48(5): call 0xfffefc48(%rip)
12e4d(3): test %rax,%rax
12e50(3): mov %rax,%rbx
12e53(2): jz 0xf(%rip)
12e55(3): mov %rax,%rdi
12e58(5): call 0xfffefeb8(%rip)
12e5d(3): cmp $0x2,%eax
12e60(2): jbe 0x10(%rip)
12e62(3): mov %rbx,%rax
12e65(1): pop %rbx
12e66(1): pop %rbp
12e67(2): pop %r12
12e69(2): pop %r13
12e6b(2): pop %r14
12e6d(1): ret near (%rsp)
12e6e(2): nop 
12e70(2): mov %eax,%edi
12e72(5): mov $0x3,%edx
12e77(5): mov $0x406,%esi
12e7c(2): xor %eax,%eax
12e7e(5): call 0x1152(%rip)
12e83(3): mov %eax,%r12d
12e86(5): call 0xfffefaca(%rip)
12e8b(3): test %r12d,%r12d
12e8e(3): mov %rax,%rbp
12e91(2): jns 0x27(%rip)
12e93(3): mov (%rax),%r14d
12e96(3): xor %r13d,%r13d
12e99(3): mov %rbx,%rdi
12e9c(3): mov %r13,%rbx
12e9f(5): call 0xfffefdc1(%rip)
12ea4(4): mov %r14d,0x0(%rbp)
12ea8(3): mov %rbx,%rax
12eab(1): pop %rbx
12eac(1): pop %rbp
12ead(2): pop %r12
12eaf(2): pop %r13
12eb1(2): pop %r14
12eb3(1): ret near (%rsp)
12eb4(4): nop 0x0(%rax)
12eb8(3): mov %r12d,%edi
12ebb(5): call 0xffff00f5(%rip)
12ec0(3): test %rax,%rax
12ec3(3): mov %rax,%r13
12ec6(4): mov 0x0(%rbp),%r14d
12eca(2): jnz 0xffffffcf(%rip)
12ecc(3): mov %r12d,%edi
12ecf(5): call 0xfffefd61(%rip)
12ed4(2): jmp 0xffffffc5(%rip)

"gettime" :
12ee0(3): mov %rdi,%rsi
12ee3(2): xor %edi,%edi
12ee5(5): jmp 0xfffefb2b(%rip)

"current_timespec" :
12ef0(4): sub $0x28,%rsp
12ef4(2): xor %edi,%edi
12ef6(3): mov %rsp,%rsi
12ef9(9): mov $0x28,%rax
12f02(5): mov %rax,0x18(%rsp)
12f07(2): xor %eax,%eax
12f09(5): call 0xfffefb07(%rip)
12f0e(5): mov 0x18(%rsp),%rcx
12f13(9): xor $0x28,%rcx
12f1c(4): mov (%rsp),%rax
12f20(5): mov 0x8(%rsp),%rdx
12f25(2): jnz 0x7(%rip)
12f27(4): add $0x28,%rsp
12f2b(1): ret near (%rsp)
12f2c(5): call 0xfffefc04(%rip)

"hard_locale" :
12f40(4): sub $0x8,%rsp
12f44(2): xor %esi,%esi
12f46(5): call 0xfffeff8a(%rip)
12f4b(3): mov %rax,%rdx
12f4e(5): mov $0x1,%eax
12f53(3): test %rdx,%rdx
12f56(2): jz 0x1f(%rip)
12f58(7): lea 0x5f04(%rip),%rdi
12f5f(5): mov $0x2,%ecx
12f64(3): mov %rdx,%rsi
12f67(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
12f69(3): setnbe %cl
12f6c(3): sbb $0x0,%cl
12f6f(2): xor %eax,%eax
12f71(2): test %cl,%cl
12f73(2): jnz 0xd(%rip)
12f75(4): add $0x8,%rsp
12f79(1): ret near (%rsp)
12f7a(6): nop 0x0(%rax,%rax,1)
12f80(7): lea 0x5ede(%rip),%rdi
12f87(5): mov $0x6,%ecx
12f8c(3): mov %rdx,%rsi
12f8f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
12f91(3): setnbe %al
12f94(2): sbb $0x0,%al
12f96(2): test %al,%al
12f98(3): setnz %al
12f9b(4): add $0x8,%rsp
12f9f(1): ret near (%rsp)

"hash_pjw" :
12fa0(4): movsx (%rdi),%rcx
12fa4(2): test %cl,%cl
12fa6(2): jz 0x2a(%rip)
12fa8(2): xor %eax,%eax
12faa(6): nop 0x0(%rax,%rax,1)
12fb0(4): rol $0x9,%rax
12fb4(4): add $0x1,%rdi
12fb8(3): add %rcx,%rax
12fbb(4): movsx (%rdi),%rcx
12fbf(2): test %cl,%cl
12fc1(2): jnz 0xffffffef(%rip)
12fc3(2): xor %edx,%edx
12fc5(3): div %rsi,%rax
12fc8(3): mov %rdx,%rax
12fcb(1): ret near (%rsp)
12fcc(4): nop 0x0(%rax)
12fd0(2): xor %edx,%edx
12fd2(3): mov %rdx,%rax
12fd5(1): ret near (%rsp)

"locale_charset" :
12fe0(4): sub $0x8,%rsp
12fe4(5): mov $0xe,%edi
12fe9(5): call 0xfffefe27(%rip)
12fee(3): test %rax,%rax
12ff1(2): jz 0x1f(%rip)
12ff3(3): cmp $0x0,(%rax)
12ff6(7): lea 0x5e6e(%rip),%rdx
12ffd(4): cmove %rdx,%rax
13001(4): add $0x8,%rsp
13005(1): ret near (%rsp)
13006(a): nop 0x0(%rax,%rax,1)
13010(7): lea 0x5e54(%rip),%rax
13017(4): add $0x8,%rsp
1301b(1): ret near (%rsp)

"dirchownmod" :
13020(2): push %r15
13022(2): push %r14
13024(3): mov %edx,%r15d
13027(2): push %r13
13029(2): push %r12
1302b(3): mov %ecx,%r13d
1302e(1): push %rbp
1302f(1): push %rbx
13030(2): mov %edi,%ebp
13032(3): mov %rsi,%r12
13035(3): mov %r9d,%r14d
13038(7): sub $0xb8,%rsp
1303f(9): mov $0x28,%rax
13048(8): mov %rax,0xa8(%rsp)
13050(2): xor %eax,%eax
13052(2): test %edi,%edi
13054(5): mov %r8d,0xc(%rsp)
13059(5): lea 0x10(%rsp),%rdx
1305e(6): js 0xd2(%rip)
13064(2): mov %edi,%esi
13066(5): mov $0x1,%edi
1306b(5): call 0xfffefdb5(%rip)
13070(2): test %eax,%eax
13072(2): mov %eax,%ebx
13074(5): mov 0xc(%rsp),%r8d
13079(6): jnz 0x1a7(%rip)
1307f(4): mov 0x28(%rsp),%ecx
13083(2): mov %ecx,%eax
13085(5): and $0xf000,%eax
1308a(5): cmp $0x4000,%eax
1308f(2): jnz 0x51(%rip)
13091(4): cmp $0xff,%r13d
13095(6): jz 0xdb(%rip)
1309b(5): cmp %r13d,0x2c(%rsp)
130a0(6): jz 0xd0(%rip)
130a6(2): test %ebp,%ebp
130a8(4): mov %ecx,0xc(%rsp)
130ac(3): mov %r8d,%edx
130af(3): mov %r13d,%esi
130b2(6): jns 0x10e(%rip)
130b8(4): cmp $0xff,%r15d
130bc(3): mov %r12,%rdi
130bf(6): jz 0x141(%rip)
130c5(5): call 0xfffefd7b(%rip)
130ca(4): mov 0xc(%rsp),%ecx
130ce(2): mov %eax,%ebx
130d0(2): test %ebx,%ebx
130d2(2): jnz 0x32(%rip)
130d4(5): jmp 0xfd(%rip)
130d9(7): nop 0x0(%rax)
130e0(5): call 0xfffef870(%rip)
130e5(6): mov $0x14,%r13d
130eb(3): mov %rax,%r12
130ee(6): mov $0x14,(%rax)
130f4(5): mov $0xffffffff,%ebx
130f9(2): mov %ebp,%edi
130fb(5): call 0xfffefb35(%rip)
13100(4): mov %r13d,(%r12)
13104(8): mov 0xa8(%rsp),%rcx
1310c(9): xor $0x28,%rcx
13115(2): mov %ebx,%eax
13117(6): jnz 0x119(%rip)
1311d(7): add $0xb8,%rsp
13124(1): pop %rbx
13125(1): pop %rbp
13126(2): pop %r12
13128(2): pop %r13
1312a(2): pop %r14
1312c(2): pop %r15
1312e(1): ret near (%rsp)
1312f(1): nop 
13130(5): mov $0x1,%edi
13135(5): call 0xfffefc9b(%rip)
1313a(2): test %eax,%eax
1313c(2): mov %eax,%ebx
1313e(5): mov 0xc(%rsp),%r8d
13143(2): jnz 0xffffffc1(%rip)
13145(4): mov 0x28(%rsp),%ecx
13149(2): mov %ecx,%eax
1314b(5): and $0xf000,%eax
13150(5): cmp $0x4000,%eax
13155(6): jz 0xffffff3c(%rip)
1315b(5): call 0xfffef7f5(%rip)
13160(3): or $0xff,%ebx
13163(6): mov $0x14,(%rax)
13169(2): jmp 0xffffff9b(%rip)
1316b(5): nop 0x0(%rax,%rax,1)
13170(4): cmp $0xff,%r8d
13174(2): jz 0xd(%rip)
13176(5): cmp %r8d,0x30(%rsp)
1317b(6): jnz 0xffffff2b(%rip)
13181(2): xor %edx,%edx
13183(2): mov %ecx,%eax
13185(3): xor %r14d,%eax
13188(2): or %edx,%eax
1318a(7): test %eax,0xf0(%rsp)
13191(2): jz 0x4f(%rip)
13193(7): mov 0xf0(%rsp),%esi
1319a(6): and $0xfff,%ecx
131a0(2): not %esi
131a2(2): and %ecx,%esi
131a4(3): or %r14d,%esi
131a7(2): test %ebp,%ebp
131a9(2): jns 0x67(%rip)
131ab(3): mov %r12,%rdi
131ae(5): call 0xfffefd62(%rip)
131b3(2): mov %eax,%ebx
131b5(5): jmp 0xffffff4f(%rip)
131ba(6): nop 0x0(%rax,%rax,1)
131c0(2): mov %ebp,%edi
131c2(5): call 0xfffefdbe(%rip)
131c7(2): test %eax,%eax
131c9(2): mov %eax,%ebx
131cb(4): mov 0xc(%rsp),%ecx
131cf(2): jnz 0x51(%rip)
131d1(3): test $0x49,%cl
131d4(2): jz 0xffffffad(%rip)
131d6(2): mov %ecx,%edx
131d8(6): and $0xc00,%edx
131de(2): jmp 0xffffffa5(%rip)
131e0(2): xor %ebx,%ebx
131e2(2): test %ebp,%ebp
131e4(6): js 0xffffff20(%rip)
131ea(6): nop 0x0(%rax,%rax,1)
131f0(2): mov %ebp,%edi
131f2(5): call 0xfffefa3e(%rip)
131f7(2): mov %eax,%ebx
131f9(5): jmp 0xffffff0b(%rip)
131fe(2): nop 
13200(5): call 0xfffefc80(%rip)
13205(4): mov 0xc(%rsp),%ecx
13209(2): mov %eax,%ebx
1320b(5): jmp 0xfffffec5(%rip)
13210(2): mov %ebp,%edi
13212(5): call 0xfffefcde(%rip)
13217(2): test %eax,%eax
13219(2): mov %eax,%ebx
1321b(2): jz 0xffffffd5(%rip)
1321d(3): nop (%rax)
13220(5): call 0xfffef730(%rip)
13225(3): mov %rax,%r12
13228(3): mov (%rax),%r13d
1322b(5): jmp 0xfffffece(%rip)
13230(5): call 0xfffef900(%rip)

"openat_safer" :
13240(4): sub $0x58,%rsp
13244(5): mov %rcx,0x38(%rsp)
13249(2): xor %ecx,%ecx
1324b(9): mov $0x28,%rax
13254(5): mov %rax,0x18(%rsp)
13259(2): xor %eax,%eax
1325b(3): test $0x40,%dl
1325e(2): jnz 0x2a(%rip)
13260(2): xor %eax,%eax
13262(5): call 0xfffef8ae(%rip)
13267(2): mov %eax,%edi
13269(5): call 0xffffd6d7(%rip)
1326e(5): mov 0x18(%rsp),%rsi
13273(9): xor $0x28,%rsi
1327c(2): jnz 0x2d(%rip)
1327e(4): add $0x58,%rsp
13282(1): ret near (%rsp)
13283(5): nop 0x0(%rax,%rax,1)
13288(5): lea 0x60(%rsp),%rax
1328d(7): mov $0x18,(%rsp)
13294(4): mov 0x38(%rsp),%ecx
13298(5): mov %rax,0x8(%rsp)
1329d(5): lea 0x20(%rsp),%rax
132a2(5): mov %rax,0x10(%rsp)
132a7(2): jmp 0xffffffb9(%rip)
132a9(5): call 0xfffef887(%rip)

"randint_new" :
132b0(1): push %rbx
132b1(3): mov %rdi,%rbx
132b4(5): mov $0x18,%edi
132b9(5): call 0xffffed57(%rip)
132be(3): mov %rbx,(%rax)
132c1(8): mov $0x0,0x10(%rax)
132c9(8): mov $0x0,0x8(%rax)
132d1(1): pop %rbx
132d2(1): ret near (%rsp)

"randint_all_new" :
132e0(1): push %rbx
132e1(5): call 0x24f(%rip)
132e6(3): test %rax,%rax
132e9(2): jz 0x27(%rip)
132eb(3): mov %rax,%rbx
132ee(5): mov $0x18,%edi
132f3(5): call 0xffffed1d(%rip)
132f8(3): mov %rbx,(%rax)
132fb(8): mov $0x0,0x10(%rax)
13303(8): mov $0x0,0x8(%rax)
1330b(1): pop %rbx
1330c(1): ret near (%rsp)
1330d(3): nop (%rax)
13310(2): xor %eax,%eax
13312(1): pop %rbx
13313(1): ret near (%rsp)

"randint_get_source" :
13320(3): mov (%rdi),%rax
13323(1): ret near (%rsp)

"randint_genmax" :
13330(2): push %r15
13332(2): push %r14
13334(4): lea 0x1(%rsi),%r15
13338(2): push %r13
1333a(2): push %r12
1333c(3): mov %rdi,%r13
1333f(1): push %rbp
13340(1): push %rbx
13341(3): mov %rsi,%r14
13344(4): sub $0x28,%rsp
13348(4): mov 0x8(%rdi),%rbp
1334c(4): mov 0x10(%rdi),%rbx
13350(9): mov $0x28,%rax
13359(5): mov %rax,0x18(%rsp)
1335e(2): xor %eax,%eax
13360(3): mov (%rdi),%rax
13363(5): lea 0x10(%rsp),%r12
13368(5): mov %rax,0x8(%rsp)
1336d(2): jmp 0x38(%rip)
1336f(1): nop 
13370(3): cmp %r14,%rbx
13373(6): jz 0x8c(%rip)
13379(3): mov %rbx,%rax
1337c(2): xor %edx,%edx
1337e(3): sub %r14,%rax
13381(3): div %r15,%rax
13384(3): sub %rdx,%rbx
13387(3): mov %rdx,%rdi
1338a(3): mov %rax,%rsi
1338d(2): xor %edx,%edx
1338f(3): mov %rbp,%rax
13392(3): div %r15,%rax
13395(3): cmp %rbx,%rbp
13398(6): jbe 0xa0(%rip)
1339e(4): lea 0xffffffff(%rdi),%rbx
133a2(3): mov %rdx,%rbp
133a5(3): cmp %r14,%rbx
133a8(2): jnb 0xffffffc8(%rip)
133aa(3): mov %rbx,%rax
133ad(2): xor %edx,%edx
133af(1): nop 
133b0(4): shl/sal $0x8,%rax
133b4(4): add $0x1,%rdx
133b8(6): add $0xff,%rax
133be(3): cmp %rax,%r14
133c1(2): jnbe 0xffffffef(%rip)
133c3(5): mov 0x8(%rsp),%rdi
133c8(3): mov %r12,%rsi
133cb(5): call 0x4b5(%rip)
133d0(3): mov %r12,%rax
133d3(5): nop 0x0(%rax,%rax,1)
133d8(3): movzx (%rax),%edx
133db(4): shl/sal $0x8,%rbx
133df(4): shl/sal $0x8,%rbp
133e3(7): add $0xff,%rbx
133ea(4): add $0x1,%rax
133ee(3): add %rdx,%rbp
133f1(3): cmp %rbx,%r14
133f4(2): jnbe 0xffffffe4(%rip)
133f6(3): cmp %r14,%rbx
133f9(6): jnz 0xffffff80(%rip)
133ff(8): mov $0x0,0x10(%r13)
13407(8): mov $0x0,0x8(%r13)
1340f(5): mov 0x18(%rsp),%rcx
13414(9): xor $0x28,%rcx
1341d(3): mov %rbp,%rax
13420(2): jnz 0x25(%rip)
13422(4): add $0x28,%rsp
13426(1): pop %rbx
13427(1): pop %rbp
13428(2): pop %r12
1342a(2): pop %r13
1342c(2): pop %r14
1342e(2): pop %r15
13430(1): ret near (%rsp)
13431(7): nop 0x0(%rax)
13438(4): mov %rax,0x8(%r13)
1343c(4): mov %rsi,0x10(%r13)
13440(3): mov %rdx,%rbp
13443(2): jmp 0xffffffcc(%rip)
13445(5): call 0xfffef6eb(%rip)

"randint_free" :
13450(1): push %rbx
13451(7): mov $0xffffffff,%rdx
13458(3): mov %rdi,%rbx
1345b(5): mov $0x18,%esi
13460(5): call 0xfffefaf0(%rip)
13465(3): mov %rbx,%rdi
13468(1): pop %rbx
13469(5): jmp 0xfffefc67(%rip)

"randint_all_free" :
13470(2): push %r13
13472(2): push %r12
13474(1): push %rbp
13475(1): push %rbx
13476(3): mov %rdi,%rbx
13479(4): sub $0x8,%rsp
1347d(3): mov (%rdi),%rdi
13480(5): call 0x5a0(%rip)
13485(3): mov %eax,%r12d
13488(5): call 0xfffef4c8(%rip)
1348d(3): mov (%rax),%r13d
13490(3): mov %rbx,%rdi
13493(7): mov $0xffffffff,%rdx
1349a(5): mov $0x18,%esi
1349f(3): mov %rax,%rbp
134a2(5): call 0xfffefaae(%rip)
134a7(3): mov %rbx,%rdi
134aa(5): call 0xfffefc26(%rip)
134af(4): mov %r13d,0x0(%rbp)
134b3(4): add $0x8,%rsp
134b7(3): mov %r12d,%eax
134ba(1): pop %rbx
134bb(1): pop %rbp
134bc(2): pop %r12
134be(2): pop %r13
134c0(1): ret near (%rsp)

"randread_error" :
134d0(1): push %rbp
134d1(1): push %rbx
134d2(4): sub $0x8,%rsp
134d6(3): test %rdi,%rdi
134d9(2): jz 0x3f(%rip)
134db(5): call 0xffffc1e5(%rip)
134e0(3): mov %rax,%rbp
134e3(5): call 0xfffef46d(%rip)
134e8(3): cmp $0x0,(%rax)
134eb(3): mov %rax,%rbx
134ee(5): mov $0x5,%edx
134f3(2): jz 0x2a(%rip)
134f5(7): lea 0x5985(%rip),%rsi
134fc(2): xor %edi,%edi
134fe(5): call 0xfffef5d2(%rip)
13503(6): mov 0x209b3f(%rip),%edi
13509(2): mov (%rbx),%esi
1350b(3): mov %rax,%rdx
1350e(3): mov %rbp,%rcx
13511(2): xor %eax,%eax
13513(5): call 0xfffefa1d(%rip)
13518(5): call 0xfffef428(%rip)
1351d(7): lea 0x594d(%rip),%rsi
13524(2): xor %edi,%edi
13526(5): call 0xfffef5aa(%rip)
1352b(2): jmp 0xffffffd8(%rip)

"randread_new" :
13530(2): push %r15
13532(2): push %r14
13534(2): push %r13
13536(2): push %r12
13538(1): push %rbp
13539(1): push %rbx
1353a(4): sub $0x38,%rsp
1353e(9): mov $0x28,%rax
13547(5): mov %rax,0x28(%rsp)
1354c(2): xor %eax,%eax
1354e(3): test %rsi,%rsi
13551(6): jz 0x127(%rip)
13557(3): test %rdi,%rdi
1355a(3): mov %rdi,%r12
1355d(3): mov %rsi,%rbp
13560(2): jz 0x80(%rip)
13562(7): lea 0x5934(%rip),%rsi
13569(5): call 0x1e17(%rip)
1356e(3): test %rax,%rax
13571(3): mov %rax,%r13
13574(6): jz 0x204(%rip)
1357a(5): mov $0x1038,%edi
1357f(5): call 0xffffea91(%rip)
13584(3): mov %rax,%rbx
13587(3): mov %r13,(%rax)
1358a(7): lea 0xffffff3f(%rip),%rax
13591(7): cmp $0x1000,%rbp
13598(5): mov $0x1000,%ecx
1359d(4): lea 0x18(%rbx),%rsi
135a1(4): cmovbe %rbp,%rcx
135a5(4): mov %rax,0x8(%rbx)
135a9(4): mov %r12,0x10(%rbx)
135ad(2): xor %edx,%edx
135af(3): mov %r13,%rdi
135b2(5): call 0xfffef94e(%rip)
135b7(5): mov 0x28(%rsp),%rdx
135bc(9): xor $0x28,%rdx
135c5(3): mov %rbx,%rax
135c8(6): jnz 0x1b7(%rip)
135ce(4): add $0x38,%rsp
135d2(1): pop %rbx
135d3(1): pop %rbp
135d4(2): pop %r12
135d6(2): pop %r13
135d8(2): pop %r14
135da(2): pop %r15
135dc(1): ret near (%rsp)
135dd(3): nop (%rax)
135e0(5): mov $0x1038,%edi
135e5(5): call 0xffffea2b(%rip)
135ea(3): mov %rax,%rbx
135ed(7): mov $0x0,(%rax)
135f4(7): lea 0xfffffed5(%rip),%rax
135fb(7): lea 0x588e(%rip),%rdi
13602(2): xor %esi,%esi
13604(8): mov $0x0,0x10(%rbx)
1360c(4): mov %rax,0x8(%rbx)
13610(8): mov $0x0,0x18(%rbx)
13618(2): xor %eax,%eax
1361a(5): call 0xfffef946(%rip)
1361f(2): test %eax,%eax
13621(4): lea 0x20(%rbx),%r13
13625(3): mov %eax,%r15d
13628(2): js 0x80(%rip)
1362a(7): cmp $0x800,%rbp
13631(3): mov %rbp,%rdx
13634(6): mov $0x800,%r14d
1363a(4): cmovnbe %r14,%rdx
1363e(5): mov $0x1018,%ecx
13643(3): mov %r13,%rsi
13646(2): mov %eax,%edi
13648(5): call 0xfffef368(%rip)
1364d(3): mov %r15d,%edi
13650(3): mov %rax,%rbp
13653(5): call 0xfffef5dd(%rip)
13658(7): cmp $0x7ff,%rbp
1365f(6): jle 0x125(%rip)
13665(3): mov %r13,%rdi
13668(5): call 0x698(%rip)
1366d(5): jmp 0xffffff4a(%rip)
13672(6): nop 0x0(%rax,%rax,1)
13678(5): mov $0x1038,%edi
1367d(5): call 0xffffe993(%rip)
13682(3): mov %rax,%rbx
13685(7): mov $0x0,(%rax)
1368c(7): lea 0xfffffe3d(%rip),%rax
13693(8): mov $0x0,0x10(%rbx)
1369b(4): mov %rax,0x8(%rbx)
1369f(5): jmp 0xffffff18(%rip)
136a4(4): nop 0x0(%rax)
136a8(5): lea 0x10(%rsp),%r12
136ad(2): xor %esi,%esi
136af(6): mov $0x18,%r14d
136b5(3): mov %r12,%rdi
136b8(5): call 0xfffef518(%rip)
136bd(6): movdqa 0x10(%rsp),%xmm0
136c3(4): movups %xmm0,0x20(%rbx)
136c7(5): call 0xfffef369(%rip)
136cc(3): mov %eax,0x30(%rbx)
136cf(4): mov %eax,0x10(%rsp)
136d3(5): call 0xfffef94d(%rip)
136d8(4): mov %eax,0x10(%rsp)
136dc(3): mov %eax,0x34(%rbx)
136df(5): mov $0x800,%ebp
136e4(5): mov $0x4,%eax
136e9(3): sub %r14,%rbp
136ec(4): cmp $0x4,%rbp
136f0(4): cmovnbe %rax,%rbp
136f4(5): call 0xfffef44c(%rip)
136f9(2): test %ebp,%ebp
136fb(4): mov %eax,0x10(%rsp)
136ff(5): lea 0x0(%r13,%r14,1),%rcx
13704(2): mov %ebp,%esi
13706(2): jz 0x16(%rip)
13708(2): xor %eax,%eax
1370a(2): mov %eax,%edx
1370c(3): add $0x1,%eax
1370f(5): movzx 0x0(%r12,%rdx,1),%edi
13714(2): cmp %esi,%eax
13716(4): mov %dil,0x0(%rcx,%rdx,1)
1371a(2): jb 0xfffffff0(%rip)
1371c(3): add %r14,%rbp
1371f(7): cmp $0x7ff,%rbp
13726(6): jnbe 0xffffff3f(%rip)
1372c(5): call 0xfffef694(%rip)
13731(4): mov %eax,0x10(%rsp)
13735(5): mov $0x800,%eax
1373a(5): mov $0x4,%edx
1373f(3): sub %rbp,%rax
13742(5): lea 0x0(%r13,%rbp,1),%rcx
13747(4): cmp $0x4,%rax
1374b(4): cmovnbe %rdx,%rax
1374f(2): test %eax,%eax
13751(2): mov %eax,%esi
13753(6): jz 0xffffff12(%rip)
13759(2): xor %eax,%eax
1375b(2): mov %eax,%edx
1375d(3): add $0x1,%eax
13760(5): movzx 0x0(%r12,%rdx,1),%edi
13765(2): cmp %esi,%eax
13767(4): mov %dil,0x0(%rcx,%rdx,1)
1376b(2): jb 0xfffffff0(%rip)
1376d(5): jmp 0xfffffef8(%rip)
13772(6): nop 0x0(%rax,%rax,1)
13778(2): xor %ebx,%ebx
1377a(5): jmp 0xfffffe3d(%rip)
1377f(5): call 0xfffef3b1(%rip)
13784(3): test %rbp,%rbp
13787(3): mov %r14,%r15
1378a(5): mov $0x10,%eax
1378f(4): cmovs %r12,%rbp
13793(5): lea 0x10(%rsp),%r12
13798(3): sub %rbp,%r15
1379b(4): cmp $0x10,%r15
1379f(3): mov %r12,%rdi
137a2(4): cmovnbe %rax,%r15
137a6(2): xor %esi,%esi
137a8(5): call 0xfffef428(%rip)
137ad(5): lea 0x0(%r13,%rbp,1),%rax
137b2(3): add %r15,%rbp
137b5(3): mov %r15d,%ecx
137b8(7): cmp $0x7ff,%rbp
137bf(3): mov %r12,%rsi
137c2(3): mov %rax,%rdi
137c5(2): REP movsb rsi(%ds,10),rdi(%es,10)
137c7(6): jnbe 0xfffffe9e(%rip)
137cd(3): mov %r14,%r15
137d0(6): mov $0x4,%r8d
137d6(3): sub %rbp,%r15
137d9(5): mov %r8,0x8(%rsp)
137de(4): cmp $0x4,%r15
137e2(4): cmovnbe %r8,%r15
137e6(5): lea 0x0(%rbp,%r15,1),%rdx
137eb(3): add %r13,%rbp
137ee(4): mov %rdx,(%rsp)
137f2(5): call 0xfffef23e(%rip)
137f7(4): mov (%rsp),%rdx
137fb(4): mov %eax,0x10(%rsp)
137ff(3): mov %r15d,%ecx
13802(3): mov %rbp,%rdi
13805(3): mov %r12,%rsi
13808(5): mov 0x8(%rsp),%r8
1380d(2): REP movsb rsi(%ds,10),rdi(%es,10)
1380f(7): cmp $0x7ff,%rdx
13816(6): jnle 0xfffffe4f(%rip)
1381c(3): sub %rdx,%r14
1381f(4): cmp $0x4,%r14
13823(4): cmovnbe %r8,%r14
13827(5): call 0xfffef7f9(%rip)
1382c(4): mov (%rsp),%rdx
13830(4): mov %eax,0x10(%rsp)
13834(3): mov %r14d,%ecx
13837(3): mov %r12,%rsi
1383a(5): lea 0x0(%r13,%rdx,1),%rax
1383f(3): add %rdx,%r14
13842(7): cmp $0x7ff,%r14
13849(3): mov %rax,%rdi
1384c(2): REP movsb rsi(%ds,10),rdi(%es,10)
1384e(6): jnbe 0xfffffe17(%rip)
13854(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
13860(4): mov %rsi,0x8(%rdi)
13864(1): ret near (%rsp)

"randread_set_handler_arg" :
13870(4): mov %rsi,0x10(%rdi)
13874(1): ret near (%rsp)

"randread" :
13880(2): push %r15
13882(2): push %r14
13884(2): push %r13
13886(2): push %r12
13888(3): mov %rdi,%r12
1388b(1): push %rbp
1388c(1): push %rbx
1388d(3): mov %rdx,%rbp
13890(3): mov %rsi,%rbx
13893(4): sub $0x18,%rsp
13897(3): mov (%rdi),%rcx
1389a(3): test %rcx,%rcx
1389d(5): mov %rcx,0x8(%rsp)
138a2(2): jz 0x66(%rip)
138a4(5): call 0xfffef0ac(%rip)
138a9(5): mov 0x8(%rsp),%rcx
138ae(3): mov %rax,%r13
138b1(2): jmp 0x25(%rip)
138b3(5): nop 0x0(%rax,%rax,1)
138b8(4): mov (%r12),%rax
138bc(5): mov 0x10(%r12),%rdi
138c1(2): mov (%rax),%eax
138c3(3): and $0x20,%eax
138c6(3): cmovne %edx,%eax
138c9(4): mov %eax,0x0(%r13)
138cd(5): call 0x8(%r12)
138d2(4): mov (%r12),%rcx
138d6(3): mov %rbp,%rdx
138d9(3): mov %rbx,%rdi
138dc(5): mov $0x1,%esi
138e1(5): call 0xfffef15f(%rip)
138e6(3): add %rax,%rbx
138e9(3): sub %rax,%rbp
138ec(4): mov 0x0(%r13),%edx
138f0(2): jnz 0xffffffc8(%rip)
138f2(4): add $0x18,%rsp
138f6(1): pop %rbx
138f7(1): pop %rbp
138f8(2): pop %r12
138fa(2): pop %r13
138fc(2): pop %r14
138fe(2): pop %r15
13900(1): ret near (%rsp)
13901(7): nop 0x0(%rax)
13908(4): mov 0x18(%rdi),%r14
1390c(7): lea 0x838(%rdi),%rax
13913(4): lea 0x20(%rdi),%r13
13917(5): mov %rax,0x8(%rsp)
1391c(3): cmp %r14,%rdx
1391f(6): jbe 0xe3(%rip)
13925(5): mov $0x800,%esi
1392a(3): mov %rbx,%rdi
1392d(3): mov %r14,%rdx
13930(3): sub %r14,%rsi
13933(5): add 0x8(%rsp),%rsi
13938(3): add %r14,%rbx
1393b(3): sub %r14,%rbp
1393e(5): call 0xfffef442(%rip)
13943(3): test $0x7,%bl
13946(2): jnz 0x6a(%rip)
13948(7): cmp $0x7ff,%rbp
1394f(6): jbe 0xa4(%rip)
13955(7): lea 0xfffff800(%rbp),%r15
1395c(3): mov %r15,%r14
1395f(7): and $0x7ff,%r14d
13966(2): jmp 0x16(%rip)
13968(8): nop 0x0(%rax,%rax,1)
13970(3): cmp %r14,%r15
13973(2): jz 0x3d(%rip)
13975(7): sub $0x800,%r15
1397c(3): mov %rbx,%rsi
1397f(3): mov %r13,%rdi
13982(7): add $0x800,%rbx
13989(5): call 0xe7(%rip)
1398e(3): test %r15,%r15
13991(3): mov %r15,%rbp
13994(2): jnz 0xffffffdc(%rip)
13996(9): mov $0x0,0x18(%r12)
1399f(4): add $0x18,%rsp
139a3(1): pop %rbx
139a4(1): pop %rbp
139a5(2): pop %r12
139a7(2): pop %r13
139a9(2): pop %r14
139ab(2): pop %r15
139ad(1): ret near (%rsp)
139ae(2): nop 
139b0(5): mov 0x8(%rsp),%rsi
139b5(3): mov %r13,%rdi
139b8(6): mov $0x800,%r14d
139be(5): call 0xb2(%rip)
139c3(7): cmp $0x800,%rbp
139ca(6): jnbe 0xffffff5b(%rip)
139d0(6): mov $0x800,%r14d
139d6(5): mov 0x8(%rsp),%rsi
139db(3): mov %rbp,%rdx
139de(3): mov %rbx,%rdi
139e1(3): sub %rbp,%r14
139e4(5): call 0xfffef39c(%rip)
139e9(5): mov %r14,0x18(%r12)
139ee(5): jmp 0xffffff04(%rip)
139f3(5): mov 0x8(%rsp),%rsi
139f8(3): mov %r13,%rdi
139fb(5): call 0x75(%rip)
13a00(2): jmp 0xffffffd0(%rip)
13a02(3): mov %rax,%r15
13a05(3): sub %r14,%r15
13a08(7): lea 0x800(%r15),%rax
13a0f(5): mov %rax,0x8(%rsp)
13a14(2): jmp 0xffffffc2(%rip)

"randread_free" :
13a20(1): push %rbp
13a21(1): push %rbx
13a22(7): mov $0xffffffff,%rdx
13a29(3): mov %rdi,%rbx
13a2c(5): mov $0x1038,%esi
13a31(4): sub $0x8,%rsp
13a35(3): mov (%rdi),%rbp
13a38(5): call 0xfffef518(%rip)
13a3d(3): mov %rbx,%rdi
13a40(5): call 0xfffef690(%rip)
13a45(3): test %rbp,%rbp
13a48(2): jz 0x18(%rip)
13a4a(4): add $0x8,%rsp
13a4e(3): mov %rbp,%rdi
13a51(1): pop %rbx
13a52(1): pop %rbp
13a53(5): jmp 0x4fd(%rip)
13a58(8): nop 0x0(%rax,%rax,1)
13a60(4): add $0x8,%rsp
13a64(2): xor %eax,%eax
13a66(1): pop %rbx
13a67(1): pop %rbp
13a68(1): ret near (%rsp)

"isaac_refill" :
13a70(7): mov 0x810(%rdi),%rax
13a77(7): mov 0x800(%rdi),%rdx
13a7e(7): lea 0x400(%rdi),%r9
13a85(4): lea 0x1(%rax),%rcx
13a89(3): mov %rdi,%rax
13a8c(7): mov %rcx,0x810(%rdi)
13a93(7): add 0x808(%rdi),%rcx
13a9a(6): nop 0x0(%rax,%rax,1)
13aa0(3): mov %rdx,%r8
13aa3(4): shl/sal $0x15,%r8
13aa7(3): xor %r8,%rdx
13aaa(3): mov (%rax),%r8
13aad(3): not %rdx
13ab0(7): add 0x400(%rax),%rdx
13ab7(3): mov %r8,%r10
13aba(7): and $0x7f8,%r10d
13ac1(4): mov 0x0(%rdi,%r10,1),%r11
13ac5(3): mov %rdx,%r10
13ac8(4): shr $0x5,%r10
13acc(3): add %rdx,%r11
13acf(3): xor %r10,%rdx
13ad2(3): add %r11,%rcx
13ad5(3): mov %rcx,(%rax)
13ad8(4): shr $0x8,%rcx
13adc(6): and $0x7f8,%ecx
13ae2(4): mov 0x0(%rdi,%rcx,1),%r11
13ae6(3): add %r8,%r11
13ae9(3): mov %r11,(%rsi)
13aec(7): add 0x408(%rax),%rdx
13af3(4): mov 0x8(%rax),%rcx
13af7(3): mov %rdx,%r10
13afa(3): mov %rcx,%rdx
13afd(6): and $0x7f8,%edx
13b03(4): mov 0x0(%rdi,%rdx,1),%r8
13b07(3): mov %r10,%rdx
13b0a(4): shl/sal $0xc,%rdx
13b0e(3): xor %r10,%rdx
13b11(3): add %r10,%r8
13b14(3): add %r11,%r8
13b17(4): mov %r8,0x8(%rax)
13b1b(4): shr $0x8,%r8
13b1f(7): and $0x7f8,%r8d
13b26(4): add 0x0(%rdi,%r8,1),%rcx
13b2a(4): mov %rcx,0x8(%rsi)
13b2e(4): mov 0x10(%rax),%r8
13b32(3): mov %rcx,%r11
13b35(7): add 0x410(%rax),%rdx
13b3c(3): mov %r8,%rcx
13b3f(6): and $0x7f8,%ecx
13b45(4): mov 0x0(%rdi,%rcx,1),%r10
13b49(3): add %rdx,%r10
13b4c(3): mov %r10,%rcx
13b4f(3): add %r11,%rcx
13b52(4): mov %rcx,0x10(%rax)
13b56(4): shr $0x8,%rcx
13b5a(6): and $0x7f8,%ecx
13b60(4): mov 0x0(%rdi,%rcx,1),%r10
13b64(3): mov %rdx,%rcx
13b67(4): shr $0x21,%rcx
13b6b(3): xor %rcx,%rdx
13b6e(3): add %r8,%r10
13b71(4): mov %r10,0x10(%rsi)
13b75(4): mov 0x18(%rax),%rcx
13b79(7): add 0x418(%rax),%rdx
13b80(3): mov %rcx,%r8
13b83(7): and $0x7f8,%r8d
13b8a(4): mov 0x0(%rdi,%r8,1),%r11
13b8e(3): add %rdx,%r11
13b91(3): mov %r11,%r8
13b94(3): add %r10,%r8
13b97(4): add $0x20,%rax
13b9b(4): add $0x20,%rsi
13b9f(4): mov %r8,0xfffffff8(%rax)
13ba3(4): shr $0x8,%r8
13ba7(7): and $0x7f8,%r8d
13bae(4): add 0x0(%rdi,%r8,1),%rcx
13bb2(4): mov %rcx,0xfffffff8(%rsi)
13bb6(3): cmp %r9,%rax
13bb9(6): jb 0xfffffee7(%rip)
13bbf(7): lea 0x800(%rdi),%r9
13bc6(a): nop 0x0(%rax,%rax,1)
13bd0(3): mov %rdx,%r8
13bd3(4): shl/sal $0x15,%r8
13bd7(3): xor %r8,%rdx
13bda(3): mov (%rax),%r8
13bdd(3): not %rdx
13be0(7): add 0xfffffc00(%rax),%rdx
13be7(3): mov %r8,%r10
13bea(7): and $0x7f8,%r10d
13bf1(4): mov 0x0(%rdi,%r10,1),%r11
13bf5(3): mov %rdx,%r10
13bf8(4): shr $0x5,%r10
13bfc(3): add %rdx,%r11
13bff(3): xor %r10,%rdx
13c02(3): add %r11,%rcx
13c05(3): mov %rcx,(%rax)
13c08(4): shr $0x8,%rcx
13c0c(6): and $0x7f8,%ecx
13c12(4): mov 0x0(%rdi,%rcx,1),%r11
13c16(3): add %r8,%r11
13c19(3): mov %r11,(%rsi)
13c1c(7): add 0xfffffc08(%rax),%rdx
13c23(4): mov 0x8(%rax),%rcx
13c27(3): mov %rdx,%r10
13c2a(3): mov %rcx,%rdx
13c2d(6): and $0x7f8,%edx
13c33(4): mov 0x0(%rdi,%rdx,1),%r8
13c37(3): mov %r10,%rdx
13c3a(4): shl/sal $0xc,%rdx
13c3e(3): xor %r10,%rdx
13c41(3): add %r10,%r8
13c44(3): add %r11,%r8
13c47(4): mov %r8,0x8(%rax)
13c4b(4): shr $0x8,%r8
13c4f(7): and $0x7f8,%r8d
13c56(4): add 0x0(%rdi,%r8,1),%rcx
13c5a(4): mov %rcx,0x8(%rsi)
13c5e(4): mov 0x10(%rax),%r8
13c62(3): mov %rcx,%r11
13c65(7): add 0xfffffc10(%rax),%rdx
13c6c(3): mov %r8,%rcx
13c6f(6): and $0x7f8,%ecx
13c75(4): mov 0x0(%rdi,%rcx,1),%r10
13c79(3): add %rdx,%r10
13c7c(3): mov %r10,%rcx
13c7f(3): add %r11,%rcx
13c82(4): mov %rcx,0x10(%rax)
13c86(4): shr $0x8,%rcx
13c8a(6): and $0x7f8,%ecx
13c90(4): mov 0x0(%rdi,%rcx,1),%r10
13c94(3): mov %rdx,%rcx
13c97(4): shr $0x21,%rcx
13c9b(3): xor %rcx,%rdx
13c9e(3): add %r8,%r10
13ca1(4): mov %r10,0x10(%rsi)
13ca5(4): mov 0x18(%rax),%rcx
13ca9(7): add 0xfffffc18(%rax),%rdx
13cb0(3): mov %rcx,%r8
13cb3(7): and $0x7f8,%r8d
13cba(4): mov 0x0(%rdi,%r8,1),%r11
13cbe(3): add %rdx,%r11
13cc1(3): mov %r11,%r8
13cc4(3): add %r10,%r8
13cc7(4): add $0x20,%rax
13ccb(4): add $0x20,%rsi
13ccf(4): mov %r8,0xfffffff8(%rax)
13cd3(4): shr $0x8,%r8
13cd7(7): and $0x7f8,%r8d
13cde(4): add 0x0(%rdi,%r8,1),%rcx
13ce2(4): mov %rcx,0xfffffff8(%rsi)
13ce6(3): cmp %r9,%rax
13ce9(6): jb 0xfffffee7(%rip)
13cef(7): mov %rdx,0x800(%rdi)
13cf6(7): mov %rcx,0x808(%rdi)
13cfd(1): ret near (%rsp)

"isaac_seed" :
13d00(2): push %r13
13d02(2): push %r12
13d04(7): lea 0x800(%rdi),%r12
13d0b(1): push %rbp
13d0c(3): mov %rdi,%rdx
13d0f(1): push %rbx
13d10(3): mov %rdi,%rax
13d13(a): mov $0x-7424904924229222229,%rcx
13d1d(a): mov $0x-5865837416287532563,%r10
13d27(a): mov $0x5259722845879046933,%rbp
13d31(a): mov $0x-9011610652101975858,%rsi
13d3b(a): mov $0x-5576812576440232668,%r8
13d45(a): mov $0x-8354558816804203872,%rbx
13d4f(a): mov $0x-5046086420515862430,%r11
13d59(a): mov $0x7240739780546808700,%r9
13d63(5): nop 0x0(%rax,%rax,1)
13d68(4): add 0x20(%rax),%rsi
13d6c(4): add 0x38(%rax),%rcx
13d70(3): mov (%rax),%r13
13d73(4): add 0x28(%rax),%rbp
13d77(4): add 0x30(%rax),%r10
13d7b(3): sub %rsi,%r13
13d7e(3): add %r13,%r9
13d81(3): mov %rcx,%r13
13d84(4): shr $0x9,%r13
13d88(3): add %r9,%rcx
13d8b(3): xor %r13,%rbp
13d8e(4): mov 0x8(%rax),%r13
13d92(3): sub %rbp,%r13
13d95(3): add %r13,%r11
13d98(3): mov %r9,%r13
13d9b(4): shl/sal $0x9,%r13
13d9f(3): add %r11,%r9
13da2(3): xor %r13,%r10
13da5(4): mov 0x10(%rax),%r13
13da9(3): sub %r10,%r13
13dac(3): add %r13,%rbx
13daf(3): mov %r11,%r13
13db2(4): shr $0x17,%r13
13db6(3): add %rbx,%r11
13db9(3): xor %r13,%rcx
13dbc(4): mov 0x18(%rax),%r13
13dc0(3): sub %rcx,%r13
13dc3(3): add %r13,%r8
13dc6(3): mov %rbx,%r13
13dc9(4): shl/sal $0xf,%r13
13dcd(3): add %r8,%rbx
13dd0(3): xor %r13,%r9
13dd3(3): mov %r8,%r13
13dd6(3): sub %r9,%rsi
13dd9(4): shr $0xe,%r13
13ddd(3): mov %r9,(%rax)
13de0(3): xor %r13,%r11
13de3(3): mov %rsi,%r13
13de6(3): add %rsi,%r8
13de9(3): sub %r11,%rbp
13dec(4): shl/sal $0x14,%r13
13df0(4): mov %r11,0x8(%rax)
13df4(3): xor %r13,%rbx
13df7(4): lea 0x0(%rsi,%rbp,1),%r13
13dfb(3): mov %rbp,%rsi
13dfe(3): sub %rbx,%r10
13e01(4): shr $0x11,%rsi
13e05(4): mov %rbx,0x10(%rax)
13e09(3): xor %rsi,%r8
13e0c(3): mov %r10,%rsi
13e0f(3): add %r10,%rbp
13e12(3): sub %r8,%rcx
13e15(4): shl/sal $0xe,%rsi
13e19(4): mov %r8,0x18(%rax)
13e1d(3): xor %r13,%rsi
13e20(3): add %rcx,%r10
13e23(4): mov %rbp,0x28(%rax)
13e27(4): mov %rsi,0x20(%rax)
13e2b(4): mov %r10,0x30(%rax)
13e2f(4): add $0x40,%rax
13e33(4): mov %rcx,0xfffffff8(%rax)
13e37(3): cmp %rax,%r12
13e3a(6): jnz 0xffffff2e(%rip)
13e40(4): add 0x20(%rdx),%rsi
13e44(4): add 0x38(%rdx),%rcx
13e48(3): mov (%rdx),%r12
13e4b(4): add 0x28(%rdx),%rbp
13e4f(4): add 0x30(%rdx),%r10
13e53(3): sub %rsi,%r12
13e56(3): add %r12,%r9
13e59(3): mov %rcx,%r12
13e5c(4): shr $0x9,%r12
13e60(3): add %r9,%rcx
13e63(3): xor %r12,%rbp
13e66(4): mov 0x8(%rdx),%r12
13e6a(3): sub %rbp,%r12
13e6d(3): add %r12,%r11
13e70(3): mov %r9,%r12
13e73(4): shl/sal $0x9,%r12
13e77(3): add %r11,%r9
13e7a(3): xor %r12,%r10
13e7d(4): mov 0x10(%rdx),%r12
13e81(3): sub %r10,%r12
13e84(3): add %r12,%rbx
13e87(3): mov %r11,%r12
13e8a(4): shr $0x17,%r12
13e8e(3): add %rbx,%r11
13e91(3): xor %r12,%rcx
13e94(4): mov 0x18(%rdx),%r12
13e98(3): sub %rcx,%r12
13e9b(3): add %r12,%r8
13e9e(3): mov %rbx,%r12
13ea1(4): shl/sal $0xf,%r12
13ea5(3): add %r8,%rbx
13ea8(3): xor %r12,%r9
13eab(3): mov %r8,%r12
13eae(3): sub %r9,%rsi
13eb1(4): shr $0xe,%r12
13eb5(3): mov %r9,(%rdx)
13eb8(3): xor %r12,%r11
13ebb(3): mov %rsi,%r12
13ebe(3): add %rsi,%r8
13ec1(3): sub %r11,%rbp
13ec4(4): shl/sal $0x14,%r12
13ec8(4): mov %r11,0x8(%rdx)
13ecc(3): xor %r12,%rbx
13ecf(4): lea 0x0(%rsi,%rbp,1),%r12
13ed3(3): mov %rbp,%rsi
13ed6(3): sub %rbx,%r10
13ed9(4): shr $0x11,%rsi
13edd(4): mov %rbx,0x10(%rdx)
13ee1(3): xor %rsi,%r8
13ee4(3): mov %r10,%rsi
13ee7(3): add %r10,%rbp
13eea(3): sub %r8,%rcx
13eed(4): shl/sal $0xe,%rsi
13ef1(4): mov %r8,0x18(%rdx)
13ef5(3): xor %r12,%rsi
13ef8(3): add %rcx,%r10
13efb(4): mov %rbp,0x28(%rdx)
13eff(4): mov %rsi,0x20(%rdx)
13f03(4): mov %r10,0x30(%rdx)
13f07(4): add $0x40,%rdx
13f0b(4): mov %rcx,0xfffffff8(%rdx)
13f0f(3): cmp %rdx,%rax
13f12(6): jnz 0xffffff2e(%rip)
13f18(1): pop %rbx
13f19(b): mov $0x0,0x810(%rdi)
13f24(b): mov $0x0,0x808(%rdi)
13f2f(1): pop %rbp
13f30(b): mov $0x0,0x800(%rdi)
13f3b(2): pop %r12
13f3d(2): pop %r13
13f3f(1): ret near (%rsp)

"dup_safer" :
13f40(5): mov $0x3,%edx
13f45(2): xor %esi,%esi
13f47(2): xor %eax,%eax
13f49(5): jmp 0x87(%rip)

"rpl_fclose" :
13f50(2): push %r12
13f52(1): push %rbp
13f53(1): push %rbx
13f54(3): mov %rdi,%rbx
13f57(5): call 0xfffeee59(%rip)
13f5c(2): test %eax,%eax
13f5e(3): mov %rbx,%rdi
13f61(2): js 0x56(%rip)
13f63(5): call 0xfffeeeed(%rip)
13f68(2): test %eax,%eax
13f6a(2): jnz 0x2e(%rip)
13f6c(3): mov %rbx,%rdi
13f6f(5): call 0xffffe7f1(%rip)
13f74(2): test %eax,%eax
13f76(2): jz 0x3e(%rip)
13f78(5): call 0xfffee9d8(%rip)
13f7d(3): mov (%rax),%r12d
13f80(3): mov %rbx,%rdi
13f83(3): mov %rax,%rbp
13f86(5): call 0xfffeeafa(%rip)
13f8b(3): test %r12d,%r12d
13f8e(2): jnz 0x32(%rip)
13f90(1): pop %rbx
13f91(1): pop %rbp
13f92(2): pop %r12
13f94(1): ret near (%rsp)
13f95(3): nop (%rax)
13f98(3): mov %rbx,%rdi
13f9b(5): call 0xfffeee15(%rip)
13fa0(2): xor %esi,%esi
13fa2(5): mov $0x1,%edx
13fa7(2): mov %eax,%edi
13fa9(5): call 0xfffeec17(%rip)
13fae(4): cmp $0xffffffff,%rax
13fb2(2): jnz 0xffffffba(%rip)
13fb4(3): mov %rbx,%rdi
13fb7(1): pop %rbx
13fb8(1): pop %rbp
13fb9(2): pop %r12
13fbb(5): jmp 0xfffeeac5(%rip)
13fc0(4): mov %r12d,0x0(%rbp)
13fc4(5): mov $0xffffffff,%eax
13fc9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
13fd0(2): push %r12
13fd2(1): push %rbp
13fd3(2): mov %edi,%ebp
13fd5(1): push %rbx
13fd6(4): sub $0x50,%rsp
13fda(9): mov $0x28,%rax
13fe3(5): mov %rax,0x18(%rsp)
13fe8(2): xor %eax,%eax
13fea(5): lea 0x70(%rsp),%rax
13fef(2): test %esi,%esi
13ff1(5): mov %rdx,0x30(%rsp)
13ff6(5): mov %rcx,0x38(%rsp)
13ffb(5): mov %r8,0x40(%rsp)
14000(5): mov %rax,0x8(%rsp)
14005(5): lea 0x20(%rsp),%rax
1400a(5): mov %r9,0x48(%rsp)
1400f(7): mov $0x10,(%rsp)
14016(5): mov %rax,0x10(%rsp)
1401b(6): jz 0x207(%rip)
14021(6): cmp $0x406,%esi
14027(2): jnz 0x49(%rip)
14029(5): mov 0x10(%rsp),%rax
1402e(7): cmp $0x0,0x20b6ff(%rip)
14035(7): mov $0x18,(%rsp)
1403c(4): mov 0x10(%rax),%r12d
14040(3): mov %r12d,%edx
14043(6): js 0x130(%rip)
14049(2): xor %eax,%eax
1404b(5): mov $0x406,%esi
14050(5): call 0xfffee9b0(%rip)
14055(2): test %eax,%eax
14057(2): mov %eax,%ebx
14059(6): js 0x18f(%rip)
1405f(a): mov $0x1,0x20b6cb(%rip)
14069(2): jmp 0x47(%rip)
1406b(5): nop 0x0(%rax,%rax,1)
14070(3): cmp $0xb,%esi
14073(2): jz 0x2d(%rip)
14075(2): jnle 0x5b(%rip)
14077(3): cmp $0x4,%esi
1407a(6): jz 0xd6(%rip)
14080(6): jnle 0xc0(%rip)
14086(3): cmp $0x2,%esi
14089(6): jz 0xc7(%rip)
1408f(2): jnle 0x11(%rip)
14091(3): cmp $0x1,%esi
14094(2): jnz 0x64(%rip)
14096(a): nop 0x0(%rax,%rax,1)
140a0(2): mov %ebp,%edi
140a2(2): xor %eax,%eax
140a4(5): call 0xfffee95c(%rip)
140a9(2): mov %eax,%ebx
140ab(5): nop 0x0(%rax,%rax,1)
140b0(5): mov 0x18(%rsp),%rcx
140b5(9): xor $0x28,%rcx
140be(2): mov %ebx,%eax
140c0(6): jnz 0x15d(%rip)
140c6(4): add $0x50,%rsp
140ca(1): pop %rbx
140cb(1): pop %rbp
140cc(2): pop %r12
140ce(1): ret near (%rsp)
140cf(1): nop 
140d0(6): cmp $0x407,%esi
140d6(2): jnle 0x4a(%rip)
140d8(6): cmp $0x406,%esi
140de(2): jnl 0x72(%rip)
140e0(6): cmp $0x401,%esi
140e6(2): jz 0xffffffba(%rip)
140e8(6): cmp $0x402,%esi
140ee(2): jz 0x62(%rip)
140f0(6): cmp $0x400,%esi
140f6(2): jz 0x5a(%rip)
140f8(3): mov (%rsp),%eax
140fb(3): cmp $0x2f,%eax
140fe(6): jnbe 0x13c(%rip)
14104(5): add 0x10(%rsp),%rax
14109(3): mov (%rax),%rdx
1410c(2): mov %ebp,%edi
1410e(2): xor %eax,%eax
14110(5): call 0xfffee8f0(%rip)
14115(2): mov %eax,%ebx
14117(2): jmp 0xffffff99(%rip)
14119(7): nop 0x0(%rax)
14120(6): cmp $0x409,%esi
14126(2): jz 0x2a(%rip)
14128(6): jl 0xffffff78(%rip)
1412e(6): cmp $0x40a,%esi
14134(2): jnz 0xffffffc4(%rip)
14136(5): jmp 0xffffff6a(%rip)
1413b(5): nop 0x0(%rax,%rax,1)
14140(3): cmp $0x9,%esi
14143(6): jz 0xffffff5d(%rip)
14149(2): jnle 0x7(%rip)
1414b(3): cmp $0x8,%esi
1414e(2): jnz 0xffffffaa(%rip)
14150(3): mov (%rsp),%eax
14153(3): cmp $0x2f,%eax
14156(6): jnbe 0xee(%rip)
1415c(5): add 0x10(%rsp),%rax
14161(2): mov (%rax),%edx
14163(2): mov %ebp,%edi
14165(2): xor %eax,%eax
14167(5): call 0xfffee899(%rip)
1416c(2): mov %eax,%ebx
1416e(5): jmp 0xffffff42(%rip)
14173(2): xor %esi,%esi
14175(2): xor %eax,%eax
14177(5): call 0xfffee889(%rip)
1417c(2): test %eax,%eax
1417e(2): mov %eax,%ebx
14180(6): js 0xffffff30(%rip)
14186(7): cmp $0xff,0x20b5a7(%rip)
1418d(6): jnz 0xffffff23(%rip)
14193(2): xor %eax,%eax
14195(5): mov $0x1,%esi
1419a(2): mov %ebx,%edi
1419c(5): call 0xfffee864(%rip)
141a1(2): test %eax,%eax
141a3(2): js 0x1e(%rip)
141a5(3): or $0x1,%eax
141a8(5): mov $0x2,%esi
141ad(2): mov %ebx,%edi
141af(2): mov %eax,%edx
141b1(2): xor %eax,%eax
141b3(5): call 0xfffee84d(%rip)
141b8(3): cmp $0xff,%eax
141bb(6): jnz 0xfffffef5(%rip)
141c1(5): call 0xfffee78f(%rip)
141c6(3): mov (%rax),%r12d
141c9(3): mov %rax,%rbp
141cc(2): mov %ebx,%edi
141ce(5): call 0xfffeea62(%rip)
141d3(5): mov $0xffffffff,%ebx
141d8(4): mov %r12d,0x0(%rbp)
141dc(5): jmp 0xfffffed4(%rip)
141e1(7): nop 0x0(%rax)
141e8(5): call 0xfffee768(%rip)
141ed(3): cmp $0x16,(%rax)
141f0(6): jnz 0xfffffe6f(%rip)
141f6(2): xor %esi,%esi
141f8(2): xor %eax,%eax
141fa(3): mov %r12d,%edx
141fd(2): mov %ebp,%edi
141ff(5): call 0xfffee801(%rip)
14204(2): test %eax,%eax
14206(2): mov %eax,%ebx
14208(6): js 0xfffffea8(%rip)
1420e(a): mov $0xffffffff,0x20b51c(%rip)
14218(5): jmp 0xffffff7b(%rip)
1421d(5): call 0xfffee913(%rip)
14222(5): mov 0x10(%rsp),%rax
14227(2): xor %esi,%esi
14229(3): mov 0x10(%rax),%edx
1422c(2): xor %eax,%eax
1422e(5): call 0xfffee7d2(%rip)
14233(2): mov %eax,%ebx
14235(5): jmp 0xfffffe7b(%rip)
1423a(5): mov 0x8(%rsp),%rax
1423f(5): jmp 0xfffffeca(%rip)
14244(5): mov 0x8(%rsp),%rax
14249(5): jmp 0xffffff18(%rip)

"fseterr" :
14250(3): or $0x20,(%rdi)
14253(1): ret near (%rsp)

"vasnprintf" :
14260(1): push %rbp
14261(3): mov %rsp,%rbp
14264(2): push %r15
14266(2): push %r14
14268(2): push %r13
1426a(2): push %r12
1426c(7): lea 0xfffffc50(%rbp),%r14
14273(1): push %rbx
14274(3): mov %rdx,%rbx
14277(3): mov %rcx,%r12
1427a(3): mov %r14,%rdx
1427d(7): sub $0x408,%rsp
14284(7): mov %rsi,0xfffffbe8(%rbp)
1428b(7): lea 0xfffffd40(%rbp),%rsi
14292(7): mov %rdi,0xfffffc18(%rbp)
14299(3): mov %rbx,%rdi
1429c(7): mov %r14,0xfffffbf0(%rbp)
142a3(9): mov $0x28,%rax
142ac(4): mov %rax,0xffffffc8(%rbp)
142b0(2): xor %eax,%eax
142b2(7): mov %rsi,0xfffffbf8(%rbp)
142b9(5): call 0x1367(%rip)
142be(2): test %eax,%eax
142c0(6): js 0xe68(%rip)
142c6(3): mov %r14,%rsi
142c9(3): mov %r12,%rdi
142cc(5): call 0x1154(%rip)
142d1(2): test %eax,%eax
142d3(6): js 0xebd(%rip)
142d9(7): mov 0xfffffd50(%rbp),%rax
142e0(7): mov $0xffffffff,%rdx
142e7(4): add $0x7,%rax
142eb(4): cmp $0x6,%rax
142ef(4): cmovbe %rdx,%rax
142f3(7): add 0xfffffd58(%rbp),%rax
142fa(6): jb 0xa2e(%rip)
14300(3): mov %rax,%rdi
14303(3): xor %r8d,%r8d
14306(4): add $0x6,%rdi
1430a(4): setb %r8b
1430e(6): jb 0xa1a(%rip)
14314(7): cmp $0xf9f,%rdi
1431b(6): jbe 0x14d(%rip)
14321(4): cmp $0xffffffff,%rdi
14325(7): mov %r8,0xfffffc38(%rbp)
1432c(6): jz 0x9fc(%rip)
14332(5): call 0xfffeeabe(%rip)
14337(3): test %rax,%rax
1433a(7): mov %rax,0xfffffc28(%rbp)
14341(6): jz 0x9e7(%rip)
14347(7): mov 0xfffffc38(%rbp),%r8
1434e(7): mov %rax,0xfffffbe0(%rbp)
14355(3): xor %r12d,%r12d
14358(8): cmp $0x0,0xfffffc18(%rbp)
14360(2): jz 0xc(%rip)
14362(7): mov 0xfffffbe8(%rbp),%rax
14369(3): mov (%rax),%r12
1436c(7): mov 0xfffffd48(%rbp),%r13
14373(7): lea 0xfffffc44(%rbp),%rax
1437a(7): mov 0xfffffc18(%rbp),%r15
14381(b): mov $0x0,0xfffffc00(%rbp)
1438c(7): mov %rax,0xfffffc10(%rbp)
14393(3): mov %rbx,%rax
14396(3): mov %r8,%rbx
14399(4): mov 0x0(%r13),%rcx
1439d(3): mov %rax,%r8
143a0(3): cmp %r8,%rcx
143a3(6): jz 0x96e(%rip)
143a9(3): sub %r8,%rcx
143ac(3): mov %rbx,%rax
143af(3): add %rcx,%rax
143b2(3): mov %rax,%r14
143b5(6): jnb 0xe3(%rip)
143bb(4): cmp $0xffffffff,%r12
143bf(6): jz 0xad1(%rip)
143c5(5): call 0xfffee58b(%rip)
143ca(7): mov %rax,0xfffffc38(%rbp)
143d1(7): cmp 0xfffffc18(%rbp),%r15
143d8(2): jz 0xb(%rip)
143da(3): test %r15,%r15
143dd(6): jnz 0xae3(%rip)
143e3(7): mov 0xfffffbe0(%rbp),%rax
143ea(3): test %rax,%rax
143ed(2): jz 0xa(%rip)
143ef(3): mov %rax,%rdi
143f2(5): call 0xfffeecde(%rip)
143f7(7): mov 0xfffffbf8(%rbp),%rax
143fe(7): mov 0xfffffd48(%rbp),%rdi
14405(4): add $0x20,%rax
14409(3): cmp %rax,%rdi
1440c(2): jz 0x7(%rip)
1440e(5): call 0xfffeecc2(%rip)
14413(7): mov 0xfffffbf0(%rbp),%rax
1441a(7): mov 0xfffffc58(%rbp),%rdi
14421(4): add $0x10,%rax
14425(3): cmp %rax,%rdi
14428(2): jz 0x7(%rip)
1442a(5): call 0xfffeeca6(%rip)
1442f(7): mov 0xfffffc38(%rbp),%rax
14436(3): xor %r15d,%r15d
14439(6): mov $0xc,(%rax)
1443f(4): mov 0xffffffc8(%rbp),%rdi
14443(9): xor $0x28,%rdi
1444c(3): mov %r15,%rax
1444f(6): jnz 0xf08(%rip)
14455(4): lea 0xffffffd8(%rbp),%rsp
14459(1): pop %rbx
1445a(2): pop %r12
1445c(2): pop %r13
1445e(2): pop %r14
14460(2): pop %r15
14462(1): pop %rbp
14463(1): ret near (%rsp)
14464(4): nop 0x0(%rax)
14468(4): add $0x24,%rax
1446c(b): mov $0x0,0xfffffbe0(%rbp)
14477(4): and $0xfffffff0,%rax
1447b(3): sub %rax,%rsp
1447e(5): lea 0xf(%rsp),%rax
14483(4): and $0xfffffff0,%rax
14487(7): mov %rax,0xfffffc28(%rbp)
1448e(5): jmp 0xfffffec7(%rip)
14493(5): nop 0x0(%rax,%rax,1)
14498(3): cmp %rax,%r12
1449b(2): jnb 0x69(%rip)
1449d(3): test %r12,%r12
144a0(6): jnz 0x930(%rip)
144a6(4): cmp $0xc,%rax
144aa(6): jnbe 0x938(%rip)
144b0(6): mov $0xc,%r12d
144b6(7): cmp 0xfffffc18(%rbp),%r15
144bd(3): setz %dl
144c0(3): test %r15,%r15
144c3(6): jz 0x945(%rip)
144c9(2): test %dl,%dl
144cb(6): jnz 0x93d(%rip)
144d1(3): mov %r12,%rsi
144d4(3): mov %r15,%rdi
144d7(7): mov %r8,0xfffffc30(%rbp)
144de(7): mov %rcx,0xfffffc38(%rbp)
144e5(5): call 0xfffee9ab(%rip)
144ea(3): test %rax,%rax
144ed(7): mov 0xfffffc38(%rbp),%rcx
144f4(7): mov 0xfffffc30(%rbp),%r8
144fb(6): jz 0x9b0(%rip)
14501(3): mov %rax,%r15
14504(4): lea 0x0(%r15,%rbx,1),%rdi
14508(3): mov %rcx,%rdx
1450b(3): mov %r8,%rsi
1450e(5): call 0xfffee872(%rip)
14513(7): mov 0xfffffc00(%rbp),%rax
1451a(7): cmp %rax,0xfffffd40(%rbp)
14521(6): jz 0xcba(%rip)
14527(5): movzx 0x48(%r13),%edx
1452c(4): mov 0x50(%r13),%rax
14530(3): cmp $0x25,%dl
14533(6): jz 0x795(%rip)
14539(4): cmp $0xffffffff,%rax
1453d(6): jz 0xc49(%rip)
14543(7): mov 0xfffffc58(%rbp),%r8
1454a(4): shl/sal $0x5,%rax
1454e(3): add %r8,%rax
14551(3): cmp $0x6e,%dl
14554(2): mov (%rax),%edi
14556(6): mov %edi,0xfffffc30(%rbp)
1455c(6): jz 0x7e4(%rip)
14562(4): mov 0x10(%r13),%eax
14566(7): mov 0xfffffc28(%rbp),%rdi
1456d(2): test $0x1,%al
1456f(3): mov $0x25,(%rdi)
14572(4): lea 0x1(%rdi),%rbx
14576(2): jz 0x11(%rip)
14578(7): mov 0xfffffc28(%rbp),%rdi
1457f(4): lea 0x2(%rdi),%rbx
14583(4): mov $0x27,0x1(%rdi)
14587(2): test $0x2,%al
14589(2): jz 0x9(%rip)
1458b(3): mov $0x2d,(%rbx)
1458e(4): add $0x1,%rbx
14592(2): test $0x4,%al
14594(2): jz 0x9(%rip)
14596(3): mov $0x2b,(%rbx)
14599(4): add $0x1,%rbx
1459d(2): test $0x8,%al
1459f(2): jz 0x9(%rip)
145a1(3): mov $0x20,(%rbx)
145a4(4): add $0x1,%rbx
145a8(2): test $0x10,%al
145aa(2): jz 0x9(%rip)
145ac(3): mov $0x23,(%rbx)
145af(4): add $0x1,%rbx
145b3(2): test $0x40,%al
145b5(2): jz 0x9(%rip)
145b7(3): mov $0x49,(%rbx)
145ba(4): add $0x1,%rbx
145be(2): test $0x20,%al
145c0(2): jz 0x9(%rip)
145c2(3): mov $0x30,(%rbx)
145c5(4): add $0x1,%rbx
145c9(4): mov 0x18(%r13),%rsi
145cd(4): mov 0x20(%r13),%rdx
145d1(3): cmp %rdx,%rsi
145d4(2): jz 0x32(%rip)
145d6(3): mov %rdx,%rcx
145d9(3): mov %rbx,%rdi
145dc(7): mov %r8,0xfffffc20(%rbp)
145e3(3): sub %rsi,%rcx
145e6(3): mov %rcx,%rdx
145e9(7): mov %rcx,0xfffffc38(%rbp)
145f0(5): call 0xfffee790(%rip)
145f5(7): mov 0xfffffc38(%rbp),%rcx
145fc(7): mov 0xfffffc20(%rbp),%r8
14603(3): add %rcx,%rbx
14606(4): mov 0x30(%r13),%rsi
1460a(4): mov 0x38(%r13),%rdx
1460e(3): cmp %rdx,%rsi
14611(2): jz 0x32(%rip)
14613(3): mov %rdx,%rcx
14616(3): mov %rbx,%rdi
14619(7): mov %r8,0xfffffc20(%rbp)
14620(3): sub %rsi,%rcx
14623(3): mov %rcx,%rdx
14626(7): mov %rcx,0xfffffc38(%rbp)
1462d(5): call 0xfffee753(%rip)
14632(7): mov 0xfffffc38(%rbp),%rcx
14639(7): mov 0xfffffc20(%rbp),%r8
14640(3): add %rcx,%rbx
14643(6): mov 0xfffffc30(%rbp),%edi
14649(3): cmp $0x10,%edi
1464c(2): jnbe 0x2f(%rip)
1464e(5): mov $0x1,%eax
14653(2): mov %edi,%ecx
14655(3): shl/sal %cl,%rax
14658(5): test $0x14180,%eax
1465d(2): jnz 0x17(%rip)
1465f(3): test $0x10,%ah
14662(6): jnz 0x95e(%rip)
14668(3): test $0x6,%ah
1466b(2): jz 0x10(%rip)
1466d(3): mov $0x6c,(%rbx)
14670(4): add $0x1,%rbx
14674(3): mov $0x6c,(%rbx)
14677(4): add $0x1,%rbx
1467b(5): movzx 0x48(%r13),%eax
14680(4): mov $0x0,0x1(%rbx)
14684(2): mov %al,(%rbx)
14686(4): mov 0x28(%r13),%rax
1468a(4): cmp $0xffffffff,%rax
1468e(6): jz 0x732(%rip)
14694(4): shl/sal $0x5,%rax
14698(3): add %r8,%rax
1469b(3): cmp $0x5,(%rax)
1469e(6): jnz 0xae8(%rip)
146a4(3): mov 0x10(%rax),%eax
146a7(a): mov $0x1,0xfffffc20(%rbp)
146b1(6): mov %eax,0xfffffc48(%rbp)
146b7(4): mov 0x40(%r13),%rax
146bb(4): cmp $0xffffffff,%rax
146bf(2): jz 0x2d(%rip)
146c1(4): shl/sal $0x5,%rax
146c5(3): add %rax,%r8
146c8(4): cmp $0x5,(%r8)
146cc(6): jnz 0xaba(%rip)
146d2(6): mov 0xfffffc20(%rbp),%eax
146d8(4): mov 0x10(%r8),%edx
146dc(7): mov %edx,0xfffffc48(%rbp,%rax,4)
146e3(3): lea 0x1(%rax),%eax
146e6(6): mov %eax,0xfffffc20(%rbp)
146ec(3): mov %r14,%rax
146ef(2): xor %edx,%edx
146f1(4): add $0x2,%rax
146f5(6): jb 0xc67(%rip)
146fb(3): cmp %rax,%r12
146fe(2): jnb 0x4d(%rip)
14700(3): test %r12,%r12
14703(6): jnz 0x825(%rip)
14709(4): cmp $0xc,%rax
1470d(6): jnbe 0x833(%rip)
14713(6): mov $0xc,%r12d
14719(7): cmp 0xfffffc18(%rbp),%r15
14720(3): setz %dl
14723(3): test %r15,%r15
14726(6): jz 0x84a(%rip)
1472c(2): test %dl,%dl
1472e(6): jnz 0x842(%rip)
14734(3): mov %r12,%rsi
14737(3): mov %r15,%rdi
1473a(5): call 0xfffee756(%rip)
1473f(3): test %rax,%rax
14742(6): jz 0xfffffc83(%rip)
14748(3): mov %rax,%r15
1474b(5): mov $0x0,0x0(%r15,%r14,1)
14750(5): call 0xfffee200(%rip)
14755(7): mov %rax,0xfffffc38(%rbp)
1475c(2): mov (%rax),%eax
1475e(7): mov %rbx,0xfffffc08(%rbp)
14765(6): mov %eax,0xfffffbdc(%rbp)
1476b(5): nop 0x0(%rax,%rax,1)
14770(7): mov 0xfffffc38(%rbp),%rax
14777(3): mov %r12,%rbx
1477a(6): mov $0x7fffffff,%r10d
14780(3): sub %r14,%rbx
14783(a): mov $0xffffffff,0xfffffc44(%rbp)
1478d(7): cmp $0x7fffffff,%rbx
14794(6): mov $0x0,(%rax)
1479a(6): mov 0xfffffc30(%rbp),%eax
147a0(4): cmovbe %rbx,%r10
147a4(3): cmp $0x11,%eax
147a7(6): jnbe 0x9df(%rip)
147ad(7): lea 0x46ec(%rip),%rsi
147b4(4): movsxd 0x0(%rsi,%rax,4),%rax
147b8(3): add %rsi,%rax
147bb(2): jmp %rax
147bd(3): nop (%rax)
147c0(4): mov 0x50(%r13),%rax
147c4(4): lea 0x0(%r15,%r14,1),%rdi
147c8(4): shl/sal $0x5,%rax
147cc(7): add 0xfffffc58(%rbp),%rax
147d3(4): mov 0x10(%rax),%r9
147d7(6): mov 0xfffffc20(%rbp),%eax
147dd(3): cmp $0x1,%eax
147e0(6): jz 0x4c8(%rip)
147e6(3): cmp $0x2,%eax
147e9(6): jz 0x4a7(%rip)
147ef(4): sub $0x8,%rsp
147f3(6): push 0xfffffc10(%rbp)
147f9(7): mov 0xfffffc28(%rbp),%r8
14800(3): mov %r10,%rsi
14803(7): mov $0xffffffff,%rcx
1480a(5): mov $0x1,%edx
1480f(2): xor %eax,%eax
14811(7): mov %r10,0xfffffbd0(%rbp)
14818(5): call 0xfffee0f8(%rip)
1481d(1): pop %rsi
1481e(1): pop %rdi
1481f(7): mov 0xfffffbd0(%rbp),%r10
14826(6): mov 0xfffffc44(%rbp),%ecx
1482c(2): test %ecx,%ecx
1482e(6): js 0x13e(%rip)
14834(3): movsxd %ecx,%rdx
14837(3): cmp %r10,%rdx
1483a(2): jnb 0x10(%rip)
1483c(3): add %r15,%rdx
1483f(5): cmp $0x0,0x0(%rdx,%r14,1)
14844(6): jnz 0x942(%rip)
1484a(2): cmp %eax,%ecx
1484c(2): jnl 0xa(%rip)
1484e(6): mov %eax,0xfffffc44(%rbp)
14854(2): mov %eax,%ecx
14856(3): lea 0x1(%rcx),%eax
14859(3): cmp %r10,%rax
1485c(6): jb 0x834(%rip)
14862(7): cmp $0x7ffffffe,%rbx
14869(6): jnbe 0x847(%rip)
1486f(4): lea 0x0(%r12,%r12,1),%rsi
14873(3): lea 0x2(%rcx),%edx
14876(3): test %r12,%r12
14879(7): mov $0xffffffff,%rax
14880(4): cmovns %rsi,%rax
14884(3): add %r14,%rdx
14887(6): jb 0xac1(%rip)
1488d(3): cmp %rdx,%rax
14890(4): cmovnae %rdx,%rax
14894(3): cmp %rax,%r12
14897(6): jnb 0xfffffed9(%rip)
1489d(3): test %r12,%r12
148a0(6): js 0xfffffb31(%rip)
148a6(3): cmp %rax,%rsi
148a9(3): mov %rsi,%r12
148ac(2): jnb 0xf(%rip)
148ae(4): cmp $0xffffffff,%rax
148b2(6): jz 0xfffffb1f(%rip)
148b8(3): mov %rax,%r12
148bb(7): cmp 0xfffffc18(%rbp),%r15
148c2(3): setz %bl
148c5(3): test %r15,%r15
148c8(6): jz 0x388(%rip)
148ce(2): test %bl,%bl
148d0(6): jnz 0x380(%rip)
148d6(3): mov %r12,%rsi
148d9(3): mov %r15,%rdi
148dc(5): call 0xfffee5b4(%rip)
148e1(3): test %rax,%rax
148e4(6): jz 0xfffffaed(%rip)
148ea(3): mov %rax,%r15
148ed(5): jmp 0xfffffe83(%rip)
148f2(6): nop 0x0(%rax,%rax,1)
148f8(4): mov 0x50(%r13),%rax
148fc(4): lea 0x0(%r15,%r14,1),%rdi
14900(4): shl/sal $0x5,%rax
14904(7): add 0xfffffc58(%rbp),%rax
1490b(4): mov 0x10(%rax),%r9d
1490f(6): mov 0xfffffc20(%rbp),%eax
14915(3): cmp $0x1,%eax
14918(6): jz 0x238(%rip)
1491e(3): cmp $0x2,%eax
14921(6): jz 0x277(%rip)
14927(4): sub $0x8,%rsp
1492b(6): push 0xfffffc10(%rbp)
14931(7): mov 0xfffffc28(%rbp),%r8
14938(7): mov $0xffffffff,%rcx
1493f(5): mov $0x1,%edx
14944(3): mov %r10,%rsi
14947(2): xor %eax,%eax
14949(7): mov %r10,0xfffffbd0(%rbp)
14950(5): call 0xfffedfc0(%rip)
14955(1): pop %rdx
14956(1): pop %rcx
14957(6): mov 0xfffffc44(%rbp),%ecx
1495d(7): mov 0xfffffbd0(%rbp),%r10
14964(2): test %ecx,%ecx
14966(6): jns 0xfffffece(%rip)
1496c(7): mov 0xfffffc08(%rbp),%rdi
14973(4): cmp $0x0,0x1(%rdi)
14977(6): jnz 0x341(%rip)
1497d(2): test %eax,%eax
1497f(6): jns 0xfffffecf(%rip)
14985(7): mov 0xfffffc38(%rbp),%rax
1498c(2): mov (%rax),%ebx
1498e(2): test %ebx,%ebx
14990(2): jnz 0x20(%rip)
14992(5): movzx 0x48(%r13),%eax
14997(5): mov $0x16,%ebx
1499c(3): and $0xef,%eax
1499f(2): cmp $0x63,%al
149a1(5): mov $0x54,%eax
149a6(3): cmove %eax,%ebx
149a9(7): nop 0x0(%rax)
149b0(7): cmp 0xfffffc18(%rbp),%r15
149b7(2): jz 0xb(%rip)
149b9(3): test %r15,%r15
149bc(6): jnz 0x7b0(%rip)
149c2(7): mov 0xfffffbe0(%rbp),%rax
149c9(3): test %rax,%rax
149cc(2): jz 0xa(%rip)
149ce(3): mov %rax,%rdi
149d1(5): call 0xfffee6ff(%rip)
149d6(7): mov 0xfffffbf8(%rbp),%rax
149dd(7): mov 0xfffffd48(%rbp),%rdi
149e4(4): add $0x20,%rax
149e8(3): cmp %rax,%rdi
149eb(2): jz 0x7(%rip)
149ed(5): call 0xfffee6e3(%rip)
149f2(7): mov 0xfffffbf0(%rbp),%rax
149f9(7): mov 0xfffffc58(%rbp),%rdi
14a00(4): add $0x10,%rax
14a04(3): cmp %rax,%rdi
14a07(2): jz 0x7(%rip)
14a09(5): call 0xfffee6c7(%rip)
14a0e(7): mov 0xfffffc38(%rbp),%rax
14a15(3): xor %r15d,%r15d
14a18(2): mov %ebx,(%rax)
14a1a(5): jmp 0xfffffa25(%rip)
14a1f(1): nop 
14a20(4): mov 0x50(%r13),%rax
14a24(4): lea 0x0(%r15,%r14,1),%rdi
14a28(4): shl/sal $0x5,%rax
14a2c(7): add 0xfffffc58(%rbp),%rax
14a33(3): fld 0x10(%rax),%st0
14a36(6): mov 0xfffffc20(%rbp),%eax
14a3c(3): cmp $0x1,%eax
14a3f(6): jz 0x631(%rip)
14a45(3): cmp $0x2,%eax
14a48(6): jnz 0x4c8(%rip)
14a4e(6): mov 0xfffffc4c(%rbp),%eax
14a54(4): sub $0x8,%rsp
14a58(6): push 0xfffffc10(%rbp)
14a5e(7): mov 0xfffffc48(%rbp),%r9d
14a65(7): mov 0xfffffc28(%rbp),%r8
14a6c(3): mov %r10,%rsi
14a6f(4): sub $0x18,%rsp
14a73(7): mov $0xffffffff,%rcx
14a7a(5): mov $0x1,%edx
14a7f(4): fstp %st0,0x8(%rsp)
14a83(1): push %rax
14a84(2): xor %eax,%eax
14a86(7): mov %r10,0xfffffbd0(%rbp)
14a8d(5): call 0xfffede83(%rip)
14a92(4): add $0x30,%rsp
14a96(7): mov 0xfffffbd0(%rbp),%r10
14a9d(5): jmp 0xfffffd89(%rip)
14aa2(6): nop 0x0(%rax,%rax,1)
14aa8(4): mov 0x50(%r13),%rax
14aac(4): lea 0x0(%r15,%r14,1),%rdi
14ab0(4): shl/sal $0x5,%rax
14ab4(7): add 0xfffffc58(%rbp),%rax
14abb(5): movsd 0x10(%rax),%xmm0
14ac0(6): mov 0xfffffc20(%rbp),%eax
14ac6(3): cmp $0x1,%eax
14ac9(6): jz 0x597(%rip)
14acf(3): cmp $0x2,%eax
14ad2(6): jnz 0x3fe(%rip)
14ad8(6): mov 0xfffffc4c(%rbp),%eax
14ade(6): push 0xfffffc10(%rbp)
14ae4(1): push %rax
14ae5(7): mov 0xfffffc48(%rbp),%r9d
14aec(7): mov 0xfffffc28(%rbp),%r8
14af3(3): mov %r10,%rsi
14af6(7): mov $0xffffffff,%rcx
14afd(5): mov $0x1,%edx
14b02(5): mov $0x1,%eax
14b07(7): mov %r10,0xfffffbd0(%rbp)
14b0e(5): call 0xfffede02(%rip)
14b13(2): pop %r8
14b15(7): mov 0xfffffbd0(%rbp),%r10
14b1c(2): pop %r9
14b1e(5): jmp 0xfffffd08(%rip)
14b23(5): nop 0x0(%rax,%rax,1)
14b28(4): mov 0x50(%r13),%rax
14b2c(4): lea 0x0(%r15,%r14,1),%rdi
14b30(4): shl/sal $0x5,%rax
14b34(7): add 0xfffffc58(%rbp),%rax
14b3b(5): movzx 0x10(%rax),%r9d
14b40(6): mov 0xfffffc20(%rbp),%eax
14b46(3): cmp $0x1,%eax
14b49(6): jnz 0xfffffdd5(%rip)
14b4f(1): nop 
14b50(6): push 0xfffffc10(%rbp)
14b56(2): push %r9
14b58(7): mov 0xfffffc48(%rbp),%r9d
14b5f(5): jmp 0xfffffdd2(%rip)
14b64(4): nop 0x0(%rax)
14b68(4): mov 0x50(%r13),%rax
14b6c(4): lea 0x0(%r15,%r14,1),%rdi
14b70(4): shl/sal $0x5,%rax
14b74(7): add 0xfffffc58(%rbp),%rax
14b7b(5): movsx 0x10(%rax),%r9d
14b80(6): mov 0xfffffc20(%rbp),%eax
14b86(3): cmp $0x1,%eax
14b89(2): jz 0xffffffc7(%rip)
14b8b(3): cmp $0x2,%eax
14b8e(6): jnz 0xfffffd99(%rip)
14b94(4): nop 0x0(%rax)
14b98(4): sub $0x8,%rsp
14b9c(6): push 0xfffffc10(%rbp)
14ba2(2): push %r9
14ba4(6): mov 0xfffffc4c(%rbp),%eax
14baa(1): push %rax
14bab(7): mov 0xfffffc48(%rbp),%r9d
14bb2(7): mov 0xfffffc28(%rbp),%r8
14bb9(3): mov %r10,%rsi
14bbc(7): mov $0xffffffff,%rcx
14bc3(5): mov $0x1,%edx
14bc8(2): xor %eax,%eax
14bca(7): mov %r10,0xfffffbd0(%rbp)
14bd1(5): call 0xfffedd3f(%rip)
14bd6(4): add $0x20,%rsp
14bda(7): mov 0xfffffbd0(%rbp),%r10
14be1(5): jmp 0xfffffc45(%rip)
14be6(a): nop 0x0(%rax,%rax,1)
14bf0(4): mov 0x50(%r13),%rax
14bf4(4): lea 0x0(%r15,%r14,1),%rdi
14bf8(4): shl/sal $0x5,%rax
14bfc(7): add 0xfffffc58(%rbp),%rax
14c03(5): movzx 0x10(%rax),%r9d
14c08(6): mov 0xfffffc20(%rbp),%eax
14c0e(3): cmp $0x1,%eax
14c11(6): jnz 0xfffffd0d(%rip)
14c17(5): jmp 0xffffff39(%rip)
14c1c(4): nop 0x0(%rax)
14c20(4): mov 0x50(%r13),%rax
14c24(4): lea 0x0(%r15,%r14,1),%rdi
14c28(4): shl/sal $0x5,%rax
14c2c(7): add 0xfffffc58(%rbp),%rax
14c33(5): movsx 0x10(%rax),%r9d
14c38(6): mov 0xfffffc20(%rbp),%eax
14c3e(3): cmp $0x1,%eax
14c41(6): jnz 0xfffffcdd(%rip)
14c47(5): jmp 0xffffff09(%rip)
14c4c(4): nop 0x0(%rax)
14c50(3): mov %r12,%rdi
14c53(5): call 0xfffee19d(%rip)
14c58(3): test %rax,%rax
14c5b(3): mov %rax,%rcx
14c5e(6): jz 0xfffff773(%rip)
14c64(3): test %r14,%r14
14c67(6): jz 0xb9(%rip)
14c6d(2): test %bl,%bl
14c6f(6): jz 0xb1(%rip)
14c75(3): mov %r15,%rsi
14c78(3): mov %r14,%rdx
14c7b(3): mov %rax,%rdi
14c7e(5): call 0xfffee102(%rip)
14c83(3): mov %rax,%r15
14c86(5): jmp 0xfffffaea(%rip)
14c8b(5): nop 0x0(%rax,%rax,1)
14c90(4): sub $0x8,%rsp
14c94(6): push 0xfffffc10(%rbp)
14c9a(2): push %r9
14c9c(5): jmp 0xffffff08(%rip)
14ca1(7): nop 0x0(%rax)
14ca8(6): push 0xfffffc10(%rbp)
14cae(2): push %r9
14cb0(5): jmp 0xfffffea8(%rip)
14cb5(3): nop (%rax)
14cb8(4): mov $0x0,0x1(%rdi)
14cbc(5): jmp 0xfffffab4(%rip)
14cc1(7): nop 0x0(%rax)
14cc8(4): cmp $0xffffffff,%rax
14ccc(6): jnz 0x4ba(%rip)
14cd2(3): mov %r14,%rax
14cd5(4): add $0x1,%rax
14cd9(3): mov %rax,%rbx
14cdc(6): jnb 0x8c(%rip)
14ce2(4): cmp $0xffffffff,%r12
14ce6(6): jnz 0xfffff6df(%rip)
14cec(3): mov %r12,%rbx
14cef(5): mov $0x25,0x0(%r15,%r14,1)
14cf4(4): mov 0x8(%r13),%r8
14cf8(4): add $0x58,%r13
14cfc(4): mov 0x0(%r13),%rcx
14d00(8): add $0x1,0xfffffc00(%rbp)
14d08(3): cmp %r8,%rcx
14d0b(6): jnz 0xfffff69e(%rip)
14d11(3): mov %rbx,%r14
14d14(5): jmp 0xfffff7ff(%rip)
14d19(7): nop 0x0(%rax)
14d20(3): mov %rcx,%r15
14d23(5): jmp 0xfffffa4d(%rip)
14d28(5): call 0xfffedc28(%rip)
14d2d(7): mov %rax,0xfffffc38(%rbp)
14d34(5): jmp 0xfffff6c3(%rip)
14d39(7): nop 0x0(%rax)
14d40(2): mov %edi,%edx
14d42(3): sub $0x12,%edx
14d45(3): cmp $0x4,%edx
14d48(6): jnbe 0x43e(%rip)
14d4e(7): lea 0x4193(%rip),%rdi
14d55(4): mov 0x10(%rax),%rax
14d59(4): movsxd 0x0(%rdi,%rdx,4),%rdx
14d5d(3): add %rdi,%rdx
14d60(2): jmp %rdx
14d62(6): nop 0x0(%rax,%rax,1)
14d68(3): cmp %rax,%r12
14d6b(2): jnb 0xffffff84(%rip)
14d6d(3): test %r12,%r12
14d70(6): jnz 0x3d0(%rip)
14d76(4): cmp $0xc,%rax
14d7a(6): jnbe 0x3d8(%rip)
14d80(6): mov $0xc,%r12d
14d86(7): cmp 0xfffffc18(%rbp),%r15
14d8d(3): setz %dl
14d90(3): test %r15,%r15
14d93(6): jz 0x26d(%rip)
14d99(2): test %dl,%dl
14d9b(6): jnz 0x265(%rip)
14da1(3): mov %r12,%rsi
14da4(3): mov %r15,%rdi
14da7(5): call 0xfffee0e9(%rip)
14dac(3): test %rax,%rax
14daf(6): jz 0xfc(%rip)
14db5(3): mov %rax,%r15
14db8(5): jmp 0xffffff37(%rip)
14dbd(3): nop (%rax)
14dc0(a): mov $0x0,0xfffffc20(%rbp)
14dca(5): jmp 0xfffff8ed(%rip)
14dcf(1): nop 
14dd0(6): js 0xfffff5f5(%rip)
14dd6(3): add %r12,%r12
14dd9(3): cmp %rax,%r12
14ddc(6): jnb 0xfffff6da(%rip)
14de2(4): cmp $0xffffffff,%rax
14de6(6): jz 0xfffff5df(%rip)
14dec(7): cmp 0xfffffc18(%rbp),%r15
14df3(3): mov %rax,%r12
14df6(3): setz %dl
14df9(3): test %r15,%r15
14dfc(6): jnz 0xfffff6cd(%rip)
14e02(6): nop 0x0(%rax,%rax,1)
14e08(3): mov %r12,%rdi
14e0b(7): mov %r8,0xfffffc20(%rbp)
14e12(6): mov %dl,0xfffffc30(%rbp)
14e18(7): mov %rcx,0xfffffc38(%rbp)
14e1f(5): call 0xfffedfd1(%rip)
14e24(3): test %rax,%rax
14e27(3): mov %rax,%r9
14e2a(7): mov 0xfffffc38(%rbp),%rcx
14e31(7): movzx 0xfffffc30(%rbp),%edx
14e38(7): mov 0xfffffc20(%rbp),%r8
14e3f(6): jz 0xfffff586(%rip)
14e45(3): test %rbx,%rbx
14e48(6): jz 0x208(%rip)
14e4e(2): test %dl,%dl
14e50(6): jz 0x200(%rip)
14e56(3): mov %r15,%rsi
14e59(3): mov %rbx,%rdx
14e5c(3): mov %rax,%rdi
14e5f(7): mov %r8,0xfffffc30(%rbp)
14e66(7): mov %rcx,0xfffffc38(%rbp)
14e6d(5): call 0xfffedf13(%rip)
14e72(7): mov 0xfffffc38(%rbp),%rcx
14e79(3): mov %rax,%r15
14e7c(7): mov 0xfffffc30(%rbp),%r8
14e83(5): jmp 0xfffff681(%rip)
14e88(8): nop 0x0(%rax,%rax,1)
14e90(3): mov %r12,%r14
14e93(5): jmp 0xfffff671(%rip)
14e98(8): nop 0x0(%rax,%rax,1)
14ea0(3): mov %r14,(%rax)
14ea3(3): mov %r14,%rbx
14ea6(5): jmp 0xfffffe4e(%rip)
14eab(5): call 0xfffedaa5(%rip)
14eb0(7): mov %rax,0xfffffc38(%rbp)
14eb7(9): nop 0x0(%rax,%rax,1)
14ec0(3): mov %r15,%rdi
14ec3(5): call 0xfffee20d(%rip)
14ec8(5): jmp 0xfffff51b(%rip)
14ecd(3): nop (%rax)
14ed0(7): mov 0xfffffc10(%rbp),%r9
14ed7(7): mov 0xfffffc28(%rbp),%r8
14ede(3): mov %r10,%rsi
14ee1(7): mov $0xffffffff,%rcx
14ee8(5): mov $0x1,%edx
14eed(5): mov $0x1,%eax
14ef2(7): mov %r10,0xfffffbd0(%rbp)
14ef9(5): call 0xfffeda17(%rip)
14efe(7): mov 0xfffffbd0(%rbp),%r10
14f05(5): jmp 0xfffff921(%rip)
14f0a(6): nop 0x0(%rax,%rax,1)
14f10(4): sub $0x10,%rsp
14f14(7): mov 0xfffffc10(%rbp),%r9
14f1b(3): fstp %st0,(%rsp)
14f1e(5): jmp 0xfffff8db(%rip)
14f23(5): nop 0x0(%rax,%rax,1)
14f28(6): js 0xfffff49d(%rip)
14f2e(3): add %r12,%r12
14f31(3): cmp %rax,%r12
14f34(6): jnb 0xfffff7e5(%rip)
14f3a(6): nop 0x0(%rax,%rax,1)
14f40(3): test %rdx,%rdx
14f43(6): jnz 0xfffff482(%rip)
14f49(4): cmp $0xffffffff,%rax
14f4d(6): jz 0xfffff478(%rip)
14f53(7): cmp 0xfffffc18(%rbp),%r15
14f5a(3): mov %rax,%r12
14f5d(3): setz %dl
14f60(3): test %r15,%r15
14f63(6): jnz 0xfffff7c9(%rip)
14f69(7): nop 0x0(%rax)
14f70(3): mov %r12,%rdi
14f73(6): mov %dl,0xfffffc38(%rbp)
14f79(5): call 0xfffede77(%rip)
14f7e(3): test %rax,%rax
14f81(3): mov %rax,%rcx
14f84(7): movzx 0xfffffc38(%rbp),%edx
14f8b(6): jz 0xfffff43a(%rip)
14f91(3): test %r14,%r14
14f94(6): jz 0x19c(%rip)
14f9a(2): test %dl,%dl
14f9c(6): jz 0x194(%rip)
14fa2(3): mov %r15,%rsi
14fa5(3): mov %r14,%rdx
14fa8(3): mov %rax,%rdi
14fab(5): call 0xfffeddd5(%rip)
14fb0(3): mov %rax,%r15
14fb3(5): jmp 0xfffff798(%rip)
14fb8(8): nop 0x0(%rax,%rax,1)
14fc0(3): mov $0x4c,(%rbx)
14fc3(4): add $0x1,%rbx
14fc7(5): jmp 0xfffff6b4(%rip)
14fcc(4): nop 0x0(%rax)
14fd0(3): mov %r14b,(%rax)
14fd3(3): mov %r14,%rbx
14fd6(5): jmp 0xfffffd1e(%rip)
14fdb(5): nop 0x0(%rax,%rax,1)
14fe0(3): mov %r14d,(%rax)
14fe3(3): mov %r14,%rbx
14fe6(5): jmp 0xfffffd0e(%rip)
14feb(5): nop 0x0(%rax,%rax,1)
14ff0(4): mov %r14w,(%rax)
14ff4(3): mov %r14,%rbx
14ff7(5): jmp 0xfffffcfd(%rip)
14ffc(4): nop 0x0(%rax)
15000(3): mov %r12,%rdi
15003(6): mov %dl,0xfffffc38(%rbp)
15009(5): call 0xfffedde7(%rip)
1500e(3): test %rax,%rax
15011(3): mov %rax,%rcx
15014(7): movzx 0xfffffc38(%rbp),%edx
1501b(6): jz 0xfffff3aa(%rip)
15021(3): test %r14,%r14
15024(6): jz 0x140(%rip)
1502a(2): test %dl,%dl
1502c(6): jz 0x138(%rip)
15032(3): mov %r15,%rsi
15035(3): mov %r14,%rdx
15038(3): mov %rax,%rdi
1503b(5): call 0xfffedd45(%rip)
15040(3): mov %rax,%r15
15043(5): jmp 0xfffffcac(%rip)
15048(8): nop 0x0(%rax,%rax,1)
15050(3): mov %r9,%r15
15053(5): jmp 0xfffff4b1(%rip)
15058(8): nop 0x0(%rax,%rax,1)
15060(4): sub $0x8,%rsp
15064(6): push 0xfffffc10(%rbp)
1506a(5): jmp 0xfffffa7b(%rip)
1506f(1): nop 
15070(4): sub $0x8,%rsp
15074(6): push 0xfffffc10(%rbp)
1507a(4): sub $0x10,%rsp
1507e(3): fstp %st0,(%rsp)
15081(5): jmp 0xfffffb2a(%rip)
15086(a): nop 0x0(%rax,%rax,1)
15090(7): mov 0xfffffc38(%rbp),%rax
15097(6): mov 0xfffffbdc(%rbp),%edi
1509d(3): movsxd %ecx,%rbx
150a0(3): add %r14,%rbx
150a3(2): mov %edi,(%rax)
150a5(5): jmp 0xfffffc4f(%rip)
150aa(6): nop 0x0(%rax,%rax,1)
150b0(7): cmp 0xfffffc18(%rbp),%r15
150b7(2): jz 0xb(%rip)
150b9(3): test %r15,%r15
150bc(6): jnz 0xbd(%rip)
150c2(7): mov 0xfffffbe0(%rbp),%rax
150c9(3): test %rax,%rax
150cc(2): jz 0xa(%rip)
150ce(3): mov %rax,%rdi
150d1(5): call 0xfffedfff(%rip)
150d6(7): mov 0xfffffbf8(%rbp),%rax
150dd(7): mov 0xfffffd48(%rbp),%rdi
150e4(4): add $0x20,%rax
150e8(3): cmp %rax,%rdi
150eb(2): jz 0x7(%rip)
150ed(5): call 0xfffedfe3(%rip)
150f2(7): mov 0xfffffbf0(%rbp),%rax
150f9(7): mov 0xfffffc58(%rbp),%rdi
15100(4): add $0x10,%rax
15104(3): cmp %rax,%rdi
15107(2): jz 0x7(%rip)
15109(5): call 0xfffedfc7(%rip)
1510e(7): mov 0xfffffc38(%rbp),%rax
15115(3): xor %r15d,%r15d
15118(6): mov $0x4b,(%rax)
1511e(5): jmp 0xfffff321(%rip)
15123(5): nop 0x0(%rax,%rax,1)
15128(3): xor %r15d,%r15d
1512b(5): jmp 0xfffff314(%rip)
15130(3): mov %rcx,%r15
15133(5): jmp 0xfffff618(%rip)
15138(8): nop 0x0(%rax,%rax,1)
15140(6): js 0xfffff285(%rip)
15146(3): add %r12,%r12
15149(3): cmp %rax,%r12
1514c(6): jnb 0xfffffc3a(%rip)
15152(4): cmp $0xffffffff,%rax
15156(6): jz 0xfffff26f(%rip)
1515c(3): mov %rax,%r12
1515f(5): jmp 0xfffffc27(%rip)
15164(3): mov %rcx,%r15
15167(5): jmp 0xfffffb88(%rip)
1516c(3): mov %r15,%rdi
1516f(5): call 0xfffedf61(%rip)
15174(5): jmp 0xfffff84e(%rip)
15179(3): mov %r15,%rdi
1517c(5): call 0xfffedf54(%rip)
15181(5): jmp 0xffffff41(%rip)
15186(5): call 0xfffed7ba(%rip)
1518b(5): nop 0x0(%rax,%rax,1)
15190(7): mov 0xfffffbf8(%rbp),%rax
15197(7): mov 0xfffffd48(%rbp),%rdi
1519e(4): add $0x20,%rax
151a2(3): cmp %rax,%rdi
151a5(2): jz 0x7(%rip)
151a7(5): call 0xfffedf29(%rip)
151ac(7): mov 0xfffffbf0(%rbp),%rax
151b3(7): mov 0xfffffc58(%rbp),%rdi
151ba(4): add $0x10,%rax
151be(3): cmp %rax,%rdi
151c1(2): jz 0x7(%rip)
151c3(5): call 0xfffedf0d(%rip)
151c8(5): call 0xfffed788(%rip)
151cd(3): xor %r15d,%r15d
151d0(6): mov $0x16,(%rax)
151d6(5): jmp 0xfffff269(%rip)
151db(3): mov %r14,%rbx
151de(2): xor %eax,%eax
151e0(4): add $0x1,%rbx
151e4(6): jb 0x10c(%rip)
151ea(3): cmp %rbx,%r12
151ed(2): jnb 0x4f(%rip)
151ef(3): test %r12,%r12
151f2(6): jnz 0x137(%rip)
151f8(4): cmp $0xc,%rbx
151fc(6): jnbe 0x112(%rip)
15202(6): mov $0xc,%r12d
15208(7): cmp 0xfffffc18(%rbp),%r15
1520f(4): setz %r13b
15213(3): test %r15,%r15
15216(6): jz 0xa6(%rip)
1521c(3): test %r13b,%r13b
1521f(6): jnz 0x9d(%rip)
15225(3): mov %r12,%rsi
15228(3): mov %r15,%rdi
1522b(5): call 0xfffedc65(%rip)
15230(3): test %rax,%rax
15233(6): jz 0xfffffc78(%rip)
15239(3): mov %rax,%r15
1523c(7): cmp 0xfffffc18(%rbp),%r15
15243(5): mov $0x0,0x0(%r15,%r14,1)
15248(2): jz 0x19(%rip)
1524a(3): cmp %rbx,%r12
1524d(2): jbe 0x14(%rip)
1524f(3): mov %r15,%rdi
15252(3): mov %rbx,%rsi
15255(5): call 0xfffedc3b(%rip)
1525a(3): test %rax,%rax
1525d(4): cmovne %rax,%r15
15261(7): mov 0xfffffbe0(%rbp),%rax
15268(3): test %rax,%rax
1526b(2): jz 0xa(%rip)
1526d(3): mov %rax,%rdi
15270(5): call 0xfffede60(%rip)
15275(7): mov 0xfffffbf8(%rbp),%rax
1527c(7): mov 0xfffffd48(%rbp),%rdi
15283(4): add $0x20,%rax
15287(3): cmp %rax,%rdi
1528a(2): jz 0x7(%rip)
1528c(5): call 0xfffede44(%rip)
15291(7): mov 0xfffffbf0(%rbp),%rax
15298(7): mov 0xfffffc58(%rbp),%rdi
1529f(4): add $0x10,%rax
152a3(3): cmp %rax,%rdi
152a6(2): jz 0x7(%rip)
152a8(5): call 0xfffede28(%rip)
152ad(7): mov 0xfffffbe8(%rbp),%rax
152b4(3): mov %r14,(%rax)
152b7(5): jmp 0xfffff188(%rip)
152bc(3): mov %r12,%rdi
152bf(5): call 0xfffedb31(%rip)
152c4(3): test %rax,%rax
152c7(3): mov %rax,%rcx
152ca(6): jz 0xfffff0fb(%rip)
152d0(3): test %r14,%r14
152d3(2): jz 0x6d(%rip)
152d5(3): test %r13b,%r13b
152d8(2): jz 0x68(%rip)
152da(3): mov %r15,%rsi
152dd(3): mov %r14,%rdx
152e0(3): mov %rax,%rdi
152e3(5): call 0xfffeda9d(%rip)
152e8(3): mov %rax,%r15
152eb(5): jmp 0xffffff51(%rip)
152f0(4): cmp $0xffffffff,%r12
152f4(5): mov $0x1,%eax
152f9(6): jz 0xffffff43(%rip)
152ff(3): test %r12,%r12
15302(6): jz 0xfffff0c3(%rip)
15308(6): js 0xfffff0bd(%rip)
1530e(3): test %rax,%rax
15311(6): jnz 0xfffff0b4(%rip)
15317(4): cmp $0xffffffff,%rbx
1531b(6): jz 0xfffff0aa(%rip)
15321(3): mov %rbx,%r12
15324(5): jmp 0xfffffee4(%rip)
15329(6): js 0xfffff09c(%rip)
1532f(3): add %r12,%r12
15332(3): cmp %rbx,%r12
15335(6): jnb 0xfffffed3(%rip)
1533b(2): jmp 0xffffffd3(%rip)
1533d(3): nop (%rax)
15340(3): mov %rcx,%r15
15343(5): jmp 0xfffffef9(%rip)
15348(4): cmp $0xffffffff,%r12
1534c(6): jz 0xfffff424(%rip)
15352(5): jmp 0xfffff07f(%rip)
15357(5): call 0xfffed7d9(%rip)
1535c(4): cmp $0xffffffff,%r12
15360(5): mov $0x1,%edx
15365(6): jz 0xfffff3e6(%rip)
1536b(3): test %r12,%r12
1536e(6): jz 0xfffff057(%rip)
15374(6): jns 0xfffffbcc(%rip)
1537a(5): jmp 0xfffff04b(%rip)

"fopen_safer" :
15380(2): push %r12
15382(1): push %rbp
15383(3): mov %rsi,%rbp
15386(1): push %rbx
15387(5): call 0xfffedc09(%rip)
1538c(3): test %rax,%rax
1538f(3): mov %rax,%rbx
15392(2): jz 0xf(%rip)
15394(3): mov %rax,%rdi
15397(5): call 0xfffeda19(%rip)
1539c(3): cmp $0x2,%eax
1539f(2): jbe 0x11(%rip)
153a1(3): mov %rbx,%rax
153a4(1): pop %rbx
153a5(1): pop %rbp
153a6(2): pop %r12
153a8(1): ret near (%rsp)
153a9(7): nop 0x0(%rax)
153b0(2): mov %eax,%edi
153b2(5): call 0xffffeb8e(%rip)
153b7(2): test %eax,%eax
153b9(3): mov %eax,%r12d
153bc(2): js 0x3c(%rip)
153be(3): mov %rbx,%rdi
153c1(5): call 0xffffeb8f(%rip)
153c6(2): test %eax,%eax
153c8(2): jnz 0x15(%rip)
153ca(3): mov %rbp,%rsi
153cd(3): mov %r12d,%edi
153d0(5): call 0xfffedae0(%rip)
153d5(3): test %rax,%rax
153d8(3): mov %rax,%rbx
153db(2): jnz 0xffffffc6(%rip)
153dd(5): call 0xfffed573(%rip)
153e2(2): mov (%rax),%ebp
153e4(3): mov %rax,%rbx
153e7(3): mov %r12d,%edi
153ea(5): call 0xfffed846(%rip)
153ef(2): mov %ebp,(%rbx)
153f1(2): xor %ebx,%ebx
153f3(2): jmp 0xffffffae(%rip)
153f5(3): nop (%rax)
153f8(5): call 0xfffed558(%rip)
153fd(3): mov (%rax),%r12d
15400(3): mov %rax,%rbp
15403(3): mov %rbx,%rdi
15406(5): call 0xffffeb4a(%rip)
1540b(2): xor %ebx,%ebx
1540d(4): mov %r12d,0x0(%rbp)
15411(2): jmp 0xffffff90(%rip)

"printf_fetchargs" :
15420(4): cmp $0x0,(%rsi)
15424(4): mov 0x8(%rsi),%rax
15428(2): jz 0x65(%rip)
1542a(7): lea 0x3adf(%rip),%r8
15431(7): lea 0x3b38(%rip),%r10
15438(7): lea 0x3abd(%rip),%r9
1543f(2): xor %ecx,%ecx
15441(7): nop 0x0(%rax)
15448(3): cmp $0x16,(%rax)
1544b(2): jnbe 0x45(%rip)
1544d(2): mov (%rax),%edx
1544f(4): movsxd 0x0(%r8,%rdx,4),%rdx
15453(3): add %r8,%rdx
15456(2): jmp %rdx
15458(8): nop 0x0(%rax,%rax,1)
15460(4): mov 0x8(%rdi),%rdx
15464(4): add $0xf,%rdx
15468(4): and $0xfffffff0,%rdx
1546c(4): lea 0x10(%rdx),%r11
15470(4): mov %r11,0x8(%rdi)
15474(2): fld (%rdx),%st0
15476(3): fstp %st0,0x10(%rax)
15479(7): nop 0x0(%rax)
15480(4): add $0x1,%rcx
15484(4): add $0x20,%rax
15488(3): cmp %rcx,(%rsi)
1548b(2): jnbe 0xffffffbd(%rip)
1548d(2): xor %eax,%eax
1548f(1): ret near (%rsp)
15490(5): mov $0xffffffff,%eax
15495(1): ret near (%rsp)
15496(3): mov (%rdi),%r11d
15499(4): cmp $0x2f,%r11d
1549d(6): jnbe 0x13d(%rip)
154a3(3): mov %r11d,%edx
154a6(4): add 0x10(%rdi),%rdx
154aa(4): add $0x8,%r11d
154ae(3): mov %r11d,(%rdi)
154b1(3): mov (%rdx),%rdx
154b4(4): mov %rdx,0x10(%rax)
154b8(2): jmp 0xffffffc8(%rip)
154ba(3): mov (%rdi),%r11d
154bd(4): cmp $0x2f,%r11d
154c1(6): jnbe 0x13b(%rip)
154c7(3): mov %r11d,%edx
154ca(4): add 0x10(%rdi),%rdx
154ce(4): add $0x8,%r11d
154d2(3): mov %r11d,(%rdi)
154d5(2): mov (%rdx),%edx
154d7(3): mov %edx,0x10(%rax)
154da(2): jmp 0xffffffa6(%rip)
154dc(3): mov (%rdi),%r11d
154df(4): cmp $0x2f,%r11d
154e3(6): jnbe 0x108(%rip)
154e9(3): mov %r11d,%edx
154ec(4): add 0x10(%rdi),%rdx
154f0(4): add $0x8,%r11d
154f4(3): mov %r11d,(%rdi)
154f7(2): mov (%rdx),%edx
154f9(3): mov %dl,0x10(%rax)
154fc(2): jmp 0xffffff84(%rip)
154fe(3): mov (%rdi),%r11d
15501(4): cmp $0x2f,%r11d
15505(6): jnbe 0xa5(%rip)
1550b(3): mov %r11d,%edx
1550e(4): add 0x10(%rdi),%rdx
15512(4): add $0x8,%r11d
15516(3): mov %r11d,(%rdi)
15519(2): mov (%rdx),%edx
1551b(4): mov %dx,0x10(%rax)
1551f(5): jmp 0xffffff61(%rip)
15524(3): mov (%rdi),%r11d
15527(4): cmp $0x2f,%r11d
1552b(6): jnbe 0x90(%rip)
15531(3): mov %r11d,%edx
15534(4): add 0x10(%rdi),%rdx
15538(4): add $0x8,%r11d
1553c(3): mov %r11d,(%rdi)
1553f(3): mov (%rdx),%rdx
15542(3): test %rdx,%rdx
15545(4): cmove %r9,%rdx
15549(4): mov %rdx,0x10(%rax)
1554d(5): jmp 0xffffff33(%rip)
15552(4): mov 0x4(%rdi),%r11d
15556(7): cmp $0xaf,%r11d
1555d(6): jnbe 0xb0(%rip)
15563(3): mov %r11d,%edx
15566(4): add 0x10(%rdi),%rdx
1556a(4): add $0x10,%r11d
1556e(4): mov %r11d,0x4(%rdi)
15572(4): movsd (%rdx),%xmm0
15576(5): movsd %xmm0,0x10(%rax)
1557b(5): jmp 0xffffff05(%rip)
15580(3): mov (%rdi),%r11d
15583(4): cmp $0x2f,%r11d
15587(2): jnbe 0x45(%rip)
15589(3): mov %r11d,%edx
1558c(4): add 0x10(%rdi),%rdx
15590(4): add $0x8,%r11d
15594(3): mov %r11d,(%rdi)
15597(3): mov (%rdx),%rdx
1559a(3): test %rdx,%rdx
1559d(4): cmove %r10,%rdx
155a1(4): mov %rdx,0x10(%rax)
155a5(5): jmp 0xfffffedb(%rip)
155aa(4): mov 0x8(%rdi),%rdx
155ae(4): lea 0x8(%rdx),%r11
155b2(4): mov %r11,0x8(%rdi)
155b6(5): jmp 0xffffff63(%rip)
155bb(4): mov 0x8(%rdi),%rdx
155bf(4): lea 0x8(%rdx),%r11
155c3(4): mov %r11,0x8(%rdi)
155c7(5): jmp 0xffffff78(%rip)
155cc(4): mov 0x8(%rdi),%rdx
155d0(4): lea 0x8(%rdx),%r11
155d4(4): mov %r11,0x8(%rdi)
155d8(2): jmp 0xffffffbf(%rip)
155da(4): mov 0x8(%rdi),%rdx
155de(4): lea 0x8(%rdx),%r11
155e2(4): mov %r11,0x8(%rdi)
155e6(5): jmp 0xfffffecb(%rip)
155eb(4): mov 0x8(%rdi),%rdx
155ef(4): lea 0x8(%rdx),%r11
155f3(4): mov %r11,0x8(%rdi)
155f7(5): jmp 0xffffff00(%rip)
155fc(4): mov 0x8(%rdi),%rdx
15600(4): lea 0x8(%rdx),%r11
15604(4): mov %r11,0x8(%rdi)
15608(5): jmp 0xfffffecd(%rip)
1560d(4): mov 0x8(%rdi),%rdx
15611(4): lea 0x8(%rdx),%r11
15615(4): mov %r11,0x8(%rdi)
15619(5): jmp 0xffffff59(%rip)

"printf_parse" :
15620(2): push %r15
15622(2): push %r14
15624(4): lea 0x20(%rsi),%rcx
15628(2): push %r13
1562a(2): push %r12
1562c(4): lea 0x10(%rdx),%rax
15630(1): push %rbp
15631(1): push %rbx
15632(3): mov %rsi,%r14
15635(3): mov %rdx,%r15
15638(2): xor %ebx,%ebx
1563a(6): mov $0x7,%r9d
15640(4): sub $0x58,%rsp
15644(6): mov $0x7,%r10d
1564a(7): mov $0x0,(%rsi)
15651(4): mov %rcx,0x8(%rsi)
15655(5): mov %rcx,0x28(%rsp)
1565a(7): mov $0xffffffff,%r8
15661(7): mov $0x0,(%rdx)
15668(5): mov %rax,0x8(%rsp)
1566d(4): mov %rax,0x8(%rdx)
15671(9): mov $0x0,0x18(%rsp)
1567a(9): mov $0x0,0x10(%rsp)
15683(9): mov $0x0,0x20(%rsp)
1568c(2): jmp 0xf(%rip)
1568e(2): nop 
15690(2): cmp $0x25,%al
15692(4): lea 0x1(%rdi),%rbp
15696(2): jz 0x42(%rip)
15698(3): mov %rbp,%rdi
1569b(3): movzx (%rdi),%eax
1569e(2): test %al,%al
156a0(2): jnz 0xfffffff0(%rip)
156a2(4): lea 0x0(%rbx,%rbx,4),%rax
156a6(4): lea 0x0(%rbx,%rax,2),%rax
156aa(4): mov %rdi,0x0(%rcx,%rax,8)
156ae(5): mov 0x10(%rsp),%rax
156b3(4): mov %rax,0x10(%r14)
156b7(5): mov 0x18(%rsp),%rax
156bc(4): mov %rax,0x18(%r14)
156c0(2): xor %eax,%eax
156c2(4): add $0x58,%rsp
156c6(1): pop %rbx
156c7(1): pop %rbp
156c8(2): pop %r12
156ca(2): pop %r13
156cc(2): pop %r14
156ce(2): pop %r15
156d0(1): ret near (%rsp)
156d1(7): nop 0x0(%rax)
156d8(4): lea 0x0(%rbx,%rbx,4),%rax
156dc(3): mov %r8,%r13
156df(4): lea 0x0(%rbx,%rax,2),%rax
156e3(4): lea 0x0(%rcx,%rax,8),%r12
156e7(4): mov %rdi,(%r12)
156eb(9): mov $0x0,0x10(%r12)
156f4(9): mov $0x0,0x18(%r12)
156fd(9): mov $0x0,0x20(%r12)
15706(5): mov %r8,0x28(%r12)
1570b(9): mov $0x0,0x30(%r12)
15714(9): mov $0x0,0x38(%r12)
1571d(5): mov %r8,0x40(%r12)
15722(5): mov %r8,0x50(%r12)
15727(4): movzx 0x1(%rdi),%ebx
1572b(3): lea 0xffffffd0(%rbx),%eax
1572e(2): cmp $0x9,%al
15730(2): jnbe 0x3e(%rip)
15732(5): jmp 0x438(%rip)
15737(9): nop 0x0(%rax,%rax,1)
15740(3): cmp $0x2d,%bl
15743(2): jz 0x45(%rip)
15745(3): cmp $0x2b,%bl
15748(2): jz 0x48(%rip)
1574a(3): cmp $0x20,%bl
1574d(2): jz 0x53(%rip)
1574f(3): cmp $0x23,%bl
15752(2): jz 0x5e(%rip)
15754(3): cmp $0x30,%bl
15757(2): jz 0x69(%rip)
15759(3): cmp $0x49,%bl
1575c(2): jnz 0x74(%rip)
1575e(6): or $0x40,0x10(%r12)
15764(4): nop 0x0(%rax)
15768(3): movzx (%rax),%ebx
1576b(3): mov %rax,%rbp
1576e(4): lea 0x1(%rbp),%rax
15772(3): cmp $0x27,%bl
15775(3): mov %rax,%rdx
15778(2): jnz 0xffffffc8(%rip)
1577a(6): or $0x1,0x10(%r12)
15780(2): jmp 0xffffffe8(%rip)
15782(6): nop 0x0(%rax,%rax,1)
15788(6): or $0x2,0x10(%r12)
1578e(2): jmp 0xffffffda(%rip)
15790(6): or $0x4,0x10(%r12)
15796(2): jmp 0xffffffd2(%rip)
15798(8): nop 0x0(%rax,%rax,1)
157a0(6): or $0x8,0x10(%r12)
157a6(2): jmp 0xffffffc2(%rip)
157a8(8): nop 0x0(%rax,%rax,1)
157b0(6): or $0x10,0x10(%r12)
157b6(2): jmp 0xffffffb2(%rip)
157b8(8): nop 0x0(%rax,%rax,1)
157c0(6): or $0x20,0x10(%r12)
157c6(2): jmp 0xffffffa2(%rip)
157c8(8): nop 0x0(%rax,%rax,1)
157d0(3): cmp $0x2a,%bl
157d3(6): jz 0x1b6(%rip)
157d9(3): lea 0xffffffd0(%rbx),%ecx
157dc(3): cmp $0x9,%cl
157df(6): jbe 0x418(%rip)
157e5(3): cmp $0x2e,%bl
157e8(6): jz 0x2d7(%rip)
157ee(2): xor %eax,%eax
157f0(5): mov $0x1,%esi
157f5(2): jmp 0x32(%rip)
157f7(9): nop 0x0(%rax,%rax,1)
15800(3): cmp $0x4c,%bl
15803(2): jz 0x3d(%rip)
15805(3): cmp $0x6c,%bl
15808(2): jz 0x18(%rip)
1580a(3): cmp $0x6a,%bl
1580d(2): jz 0x13(%rip)
1580f(2): mov %ebx,%edx
15811(3): and $0xdf,%edx
15814(3): cmp $0x5a,%dl
15817(2): jz 0x9(%rip)
15819(3): cmp $0x74,%bl
1581c(2): jnz 0x2c(%rip)
1581e(2): nop 
15820(3): add $0x8,%eax
15823(4): movzx 0x0(%rbp),%ebx
15827(4): add $0x1,%rbp
1582b(3): cmp $0x68,%bl
1582e(2): jnz 0xffffffd2(%rip)
15830(2): mov %eax,%ecx
15832(2): mov %esi,%edx
15834(3): and $0x1,%ecx
15837(2): shl/sal %cl,%edx
15839(2): or %edx,%eax
1583b(2): jmp 0xffffffe8(%rip)
1583d(3): nop (%rax)
15840(3): or $0x4,%eax
15843(2): jmp 0xffffffe0(%rip)
15845(3): nop (%rax)
15848(3): lea 0xffffffdb(%rbx),%edx
1584b(3): cmp $0x53,%dl
1584e(6): jnbe 0x61d(%rip)
15854(7): lea 0x3731(%rip),%rcx
1585b(3): movzx %dl,%edx
1585e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
15862(3): add %rcx,%rdx
15865(2): jmp %rdx
15867(6): mov $0x10,%r11d
1586d(5): mov $0x73,%ebx
15872(6): nop 0x0(%rax,%rax,1)
15878(4): cmp $0xffffffff,%r13
1587c(6): jz 0x6bb(%rip)
15882(5): mov %r13,0x50(%r12)
15887(3): cmp %r13,%r9
1588a(4): mov 0x8(%r15),%rcx
1588e(6): jbe 0x622(%rip)
15894(3): mov (%r15),%rax
15897(3): mov %rax,%rdx
1589a(4): shl/sal $0x5,%rdx
1589e(3): add %rcx,%rdx
158a1(3): cmp %r13,%rax
158a4(2): jnbe 0x22(%rip)
158a6(a): nop 0x0(%rax,%rax,1)
158b0(4): add $0x1,%rax
158b4(6): mov $0x0,(%rdx)
158ba(4): add $0x20,%rdx
158be(3): cmp %r13,%rax
158c1(2): jbe 0xffffffef(%rip)
158c3(3): mov %rax,(%r15)
158c6(4): shl/sal $0x5,%r13
158ca(4): lea 0x0(%rcx,%r13,1),%rax
158ce(2): mov (%rax),%edx
158d0(2): test %edx,%edx
158d2(6): jnz 0x5d1(%rip)
158d8(3): mov %r11d,(%rax)
158db(5): mov %bl,0x48(%r12)
158e0(3): mov (%r14),%rax
158e3(5): mov %rbp,0x8(%r12)
158e8(4): lea 0x1(%rax),%rbx
158ec(3): cmp %rbx,%r10
158ef(3): mov %rbx,(%r14)
158f2(6): jnbe 0x8e(%rip)
158f8(3): test %r10,%r10
158fb(6): js 0x9ac(%rip)
15901(3): add %r10,%r10
15904(a): mov $0x209622091746699450,%rax
1590e(3): cmp %rax,%r10
15911(6): jnbe 0x996(%rip)
15917(4): lea 0x0(%r10,%r10,4),%rax
1591b(4): mov 0x8(%r14),%rdi
1591f(5): cmp %rdi,0x28(%rsp)
15924(5): mov %r9,0x40(%rsp)
15929(5): mov %r10,0x38(%rsp)
1592e(4): lea 0x0(%r10,%rax,2),%rax
15932(5): mov %r8,0x30(%rsp)
15937(8): lea 0x0(,%rax,8),%rsi
1593f(6): jz 0x6be(%rip)
15945(5): call 0xfffed54b(%rip)
1594a(3): test %rax,%rax
1594d(3): mov %rax,%rcx
15950(5): mov 0x30(%rsp),%r8
15955(5): mov 0x38(%rsp),%r10
1595a(5): mov 0x40(%rsp),%r9
1595f(6): jz 0x948(%rip)
15965(5): mov 0x28(%rsp),%rax
1596a(4): cmp 0x8(%r14),%rax
1596e(3): mov (%r14),%rbx
15971(6): jz 0x6af(%rip)
15977(4): mov %rcx,0x8(%r14)
1597b(5): jmp 0xfffffd1d(%rip)
15980(4): mov 0x8(%r14),%rcx
15984(5): jmp 0xfffffd14(%rip)
15989(5): mov 0x10(%rsp),%rsi
1598e(5): mov $0x1,%ecx
15993(5): mov %rbp,0x18(%r12)
15998(5): mov %rax,0x20(%r12)
1599d(3): test %rsi,%rsi
159a0(4): cmovne %rsi,%rcx
159a4(5): mov %rcx,0x10(%rsp)
159a9(4): movzx 0x1(%rbp),%ecx
159ad(3): lea 0xffffffd0(%rcx),%esi
159b0(4): cmp $0x9,%sil
159b4(6): jbe 0x2e1(%rip)
159ba(5): mov 0x20(%rsp),%rsi
159bf(4): cmp $0xffffffff,%rsi
159c3(4): lea 0x1(%rsi),%rdx
159c7(5): mov %rsi,0x28(%r12)
159cc(6): jz 0x49f(%rip)
159d2(5): mov 0x20(%rsp),%rbx
159d7(3): mov %rax,%rbp
159da(5): mov %rdx,0x20(%rsp)
159df(3): cmp %rbx,%r9
159e2(4): mov 0x8(%r15),%rcx
159e6(6): jnbe 0x67c(%rip)
159ec(3): add %r9,%r9
159ef(4): lea 0x1(%rbx),%rax
159f3(3): cmp %rbx,%r9
159f6(4): cmovbe %rax,%r9
159fa(a): mov $0x576460752303423487,%rax
15a04(3): cmp %rax,%r9
15a07(6): jnbe 0x8a4(%rip)
15a0d(3): mov %r9,%rsi
15a10(5): mov %r9,0x40(%rsp)
15a15(5): mov %r10,0x38(%rsp)
15a1a(4): shl/sal $0x5,%rsi
15a1e(5): cmp %rcx,0x8(%rsp)
15a23(5): mov %r8,0x30(%rsp)
15a28(6): jz 0x719(%rip)
15a2e(3): mov %rcx,%rdi
15a31(5): call 0xfffed45f(%rip)
15a36(4): mov 0x8(%r15),%rdx
15a3a(5): mov 0x30(%rsp),%r8
15a3f(3): mov %rax,%rcx
15a42(5): mov 0x38(%rsp),%r10
15a47(5): mov 0x40(%rsp),%r9
15a4c(3): test %rcx,%rcx
15a4f(6): jz 0x8b8(%rip)
15a55(5): cmp %rdx,0x8(%rsp)
15a5a(3): mov (%r15),%rax
15a5d(6): jz 0x7be(%rip)
15a63(4): mov %rcx,0x8(%r15)
15a67(3): mov %rax,%rdx
15a6a(4): shl/sal $0x5,%rdx
15a6e(3): add %rcx,%rdx
15a71(3): cmp %rbx,%rax
15a74(2): jnbe 0x22(%rip)
15a76(a): nop 0x0(%rax,%rax,1)
15a80(4): add $0x1,%rax
15a84(6): mov $0x0,(%rdx)
15a8a(4): add $0x20,%rdx
15a8e(3): cmp %rbx,%rax
15a91(2): jbe 0xffffffef(%rip)
15a93(3): mov %rax,(%r15)
15a96(4): shl/sal $0x5,%rbx
15a9a(4): lea 0x0(%rcx,%rbx,1),%rax
15a9e(2): mov (%rax),%edx
15aa0(2): test %edx,%edx
15aa2(6): jnz 0x4d9(%rip)
15aa8(6): mov $0x5,(%rax)
15aae(4): movzx 0x0(%rbp),%ebx
15ab2(4): lea 0x1(%rbp),%rdx
15ab6(3): cmp $0x2e,%bl
15ab9(6): jnz 0xfffffd35(%rip)
15abf(4): cmp $0x2a,0x1(%rbp)
15ac3(5): mov %rbp,0x30(%r12)
15ac8(6): jnz 0x186(%rip)
15ace(5): mov 0x18(%rsp),%rsi
15ad3(4): lea 0x2(%rbp),%r11
15ad7(5): mov $0x2,%eax
15adc(5): mov %r11,0x38(%r12)
15ae1(4): cmp $0x2,%rsi
15ae5(4): cmovnb %rsi,%rax
15ae9(5): mov %rax,0x18(%rsp)
15aee(4): movsx 0x2(%rbp),%eax
15af2(3): lea 0xffffffd0(%rax),%edx
15af5(3): cmp $0x9,%dl
15af8(6): jbe 0x694(%rip)
15afe(5): mov 0x40(%r12),%rbx
15b03(4): cmp $0xffffffff,%rbx
15b07(6): jz 0x65e(%rip)
15b0d(3): cmp %rbx,%r9
15b10(4): mov 0x8(%r15),%rcx
15b14(6): jbe 0x56b(%rip)
15b1a(3): mov (%r15),%rax
15b1d(3): mov %rax,%rdx
15b20(4): shl/sal $0x5,%rdx
15b24(3): add %rcx,%rdx
15b27(3): cmp %rbx,%rax
15b2a(2): jnbe 0x1c(%rip)
15b2c(4): nop 0x0(%rax)
15b30(4): add $0x1,%rax
15b34(6): mov $0x0,(%rdx)
15b3a(4): add $0x20,%rdx
15b3e(3): cmp %rbx,%rax
15b41(2): jbe 0xffffffef(%rip)
15b43(3): mov %rax,(%r15)
15b46(4): shl/sal $0x5,%rbx
15b4a(4): lea 0x0(%rcx,%rbx,1),%rax
15b4e(2): mov (%rax),%edx
15b50(2): test %edx,%edx
15b52(6): jnz 0x518(%rip)
15b58(6): mov $0x5,(%rax)
15b5e(3): mov %r11,%rbp
15b61(4): movzx (%r11),%ebx
15b65(5): jmp 0xfffffc89(%rip)
15b6a(3): mov %rbp,%rax
15b6d(3): nop (%rax)
15b70(4): add $0x1,%rax
15b74(3): movzx (%rax),%edx
15b77(3): lea 0xffffffd0(%rdx),%ecx
15b7a(3): cmp $0x9,%cl
15b7d(2): jbe 0xfffffff3(%rip)
15b7f(3): cmp $0x24,%dl
15b82(3): mov %r8,%r13
15b85(6): jnz 0xfffffbe9(%rip)
15b8b(2): xor %edx,%edx
15b8d(3): movsx %bl,%eax
15b90(a): mov $0x1844674407370955161,%rdi
15b9a(3): mov %r8,%rsi
15b9d(3): sub $0x30,%eax
15ba0(3): cmp %rdi,%rdx
15ba3(2): cwde 
15ba5(2): jnbe 0x9(%rip)
15ba7(4): lea 0x0(%rdx,%rdx,4),%rsi
15bab(3): add %rsi,%rsi
15bae(3): mov %rbp,%rcx
15bb1(3): add %rsi,%rax
15bb4(4): movzx 0x1(%rbp),%ebx
15bb8(4): setb %sil
15bbc(4): add $0x1,%rbp
15bc0(3): mov %rax,%rdx
15bc3(4): movzx %sil,%esi
15bc7(3): test %rsi,%rsi
15bca(3): lea 0xffffffd0(%rbx),%edi
15bcd(6): jnz 0x391(%rip)
15bd3(4): cmp $0x9,%dil
15bd7(2): jbe 0xffffffb6(%rip)
15bd9(3): mov %rax,%r13
15bdc(4): sub $0x1,%r13
15be0(4): cmp $0xfffffffd,%r13
15be4(6): jnbe 0x287(%rip)
15bea(4): lea 0x2(%rcx),%rbp
15bee(4): movzx 0x2(%rcx),%ebx
15bf2(5): jmp 0xfffffb7c(%rip)
15bf7(5): mov %rbp,0x18(%r12)
15bfc(4): movzx 0x0(%rbp),%edi
15c00(3): mov %rbp,%rsi
15c03(3): lea 0xffffffd0(%rdi),%ecx
15c06(3): cmp $0x9,%cl
15c09(2): jbe 0xe(%rip)
15c0b(2): jmp 0x35(%rip)
15c0d(3): nop (%rax)
15c10(3): mov %rax,%rbp
15c13(4): add $0x1,%rax
15c17(3): movzx (%rax),%edi
15c1a(3): lea 0xffffffd0(%rdi),%edx
15c1d(3): cmp $0x9,%dl
15c20(2): jbe 0xfffffff0(%rip)
15c22(3): mov %rax,%rcx
15c25(4): lea 0x2(%rbp),%rdx
15c29(3): mov %rax,%rbp
15c2c(3): sub %rsi,%rcx
15c2f(5): mov 0x10(%rsp),%rsi
15c34(3): cmp %rcx,%rsi
15c37(4): cmovnb %rsi,%rcx
15c3b(5): mov %rcx,0x10(%rsp)
15c40(5): mov %rbp,0x20(%r12)
15c45(4): movzx 0x0(%rbp),%ebx
15c49(5): jmp 0xfffffb9c(%rip)
15c4e(4): movzx 0x1(%rbp),%eax
15c52(3): sub $0x30,%eax
15c55(2): cmp $0x9,%al
15c57(2): jnbe 0x17(%rip)
15c59(7): nop 0x0(%rax)
15c60(4): add $0x1,%rdx
15c64(3): movzx (%rdx),%eax
15c67(3): sub $0x30,%eax
15c6a(2): cmp $0x9,%al
15c6c(2): jbe 0xfffffff4(%rip)
15c6e(5): mov 0x18(%rsp),%rsi
15c73(3): mov %rdx,%rax
15c76(5): mov %rdx,0x38(%r12)
15c7b(3): sub %rbp,%rax
15c7e(3): movzx (%rdx),%ebx
15c81(3): mov %rdx,%rbp
15c84(3): cmp %rax,%rsi
15c87(4): cmovnb %rsi,%rax
15c8b(5): mov %rax,0x18(%rsp)
15c90(5): jmp 0xfffffb5e(%rip)
15c95(3): mov %rax,%rsi
15c98(4): add $0x1,%rsi
15c9c(3): movzx (%rsi),%edi
15c9f(4): lea 0xffffffd0(%rdi),%r11d
15ca3(4): cmp $0x9,%r11b
15ca7(2): jbe 0xfffffff1(%rip)
15ca9(4): cmp $0x24,%dil
15cad(6): jnz 0xfffffd0d(%rip)
15cb3(2): xor %esi,%esi
15cb5(3): movsx %cl,%eax
15cb8(a): mov $0x1844674407370955161,%rdi
15cc2(3): mov %r8,%rcx
15cc5(3): sub $0x30,%eax
15cc8(3): cmp %rdi,%rsi
15ccb(2): cwde 
15ccd(2): jnbe 0x9(%rip)
15ccf(4): lea 0x0(%rsi,%rsi,4),%rcx
15cd3(3): add %rcx,%rcx
15cd6(3): mov %rdx,%rbp
15cd9(3): xor %r11d,%r11d
15cdc(3): add %rcx,%rax
15cdf(4): movzx 0x1(%rdx),%ecx
15ce3(4): setb %r11b
15ce7(4): add $0x1,%rdx
15ceb(3): mov %rax,%rsi
15cee(3): test %r11,%r11
15cf1(3): lea 0xffffffd0(%rcx),%edi
15cf4(6): jnz 0x50a(%rip)
15cfa(4): cmp $0x9,%dil
15cfe(2): jbe 0xffffffb7(%rip)
15d00(4): lea 0xffffffff(%rax),%rbx
15d04(4): cmp $0xfffffffd,%rbx
15d08(6): jnbe 0x163(%rip)
15d0e(5): mov %rbx,0x28(%r12)
15d13(4): add $0x2,%rbp
15d17(5): jmp 0xfffffcc8(%rip)
15d1c(3): cmp $0xf,%eax
15d1f(6): mov $0x16,%r11d
15d25(6): jnle 0xfffffb53(%rip)
15d2b(2): test $0x4,%al
15d2d(6): jnz 0xfffffb4b(%rip)
15d33(3): cmp $0x7,%eax
15d36(6): mov $0x15,%r11d
15d3c(6): jnle 0xfffffb3c(%rip)
15d42(2): test $0x2,%al
15d44(6): mov $0x12,%r11d
15d4a(6): jnz 0xfffffb2e(%rip)
15d50(3): xor %r11d,%r11d
15d53(2): test $0x1,%al
15d55(4): setz %r11b
15d59(4): add $0x13,%r11d
15d5d(5): jmp 0xfffffb1b(%rip)
15d62(6): nop 0x0(%rax,%rax,1)
15d68(3): xor %r11d,%r11d
15d6b(3): cmp $0x7,%eax
15d6e(4): setnle %r11b
15d72(4): add $0xd,%r11d
15d76(5): jmp 0xfffffb02(%rip)
15d7b(3): cmp $0xf,%eax
15d7e(6): mov $0x9,%r11d
15d84(6): jnle 0xfffffaf4(%rip)
15d8a(2): test $0x4,%al
15d8c(6): jnz 0xfffffaec(%rip)
15d92(3): cmp $0x7,%eax
15d95(6): mov $0x7,%r11d
15d9b(6): jnle 0xfffffadd(%rip)
15da1(2): test $0x2,%al
15da3(6): mov $0x1,%r11d
15da9(6): jnz 0xfffffacf(%rip)
15daf(3): and $0x1,%eax
15db2(3): cmp $0x1,%eax
15db5(3): sbb %r11d,%r11d
15db8(4): and $0x2,%r11d
15dbc(4): add $0x3,%r11d
15dc0(5): jmp 0xfffffab8(%rip)
15dc5(3): nop (%rax)
15dc8(3): xor %r11d,%r11d
15dcb(3): cmp $0x7,%eax
15dce(4): setnle %r11b
15dd2(4): add $0xf,%r11d
15dd6(5): jmp 0xfffffaa2(%rip)
15ddb(3): cmp $0xf,%eax
15dde(6): mov $0xc,%r11d
15de4(6): jnle 0xfffffa94(%rip)
15dea(3): xor %r11d,%r11d
15ded(2): test $0x4,%al
15def(4): setnz %r11b
15df3(4): add $0xb,%r11d
15df7(5): jmp 0xfffffa81(%rip)
15dfc(6): mov $0xe,%r11d
15e02(5): mov $0x63,%ebx
15e07(5): jmp 0xfffffa71(%rip)
15e0c(3): cmp $0xf,%eax
15e0f(6): mov $0xa,%r11d
15e15(6): jnle 0xfffffa63(%rip)
15e1b(2): test $0x4,%al
15e1d(6): jnz 0xfffffa5b(%rip)
15e23(3): cmp $0x7,%eax
15e26(6): mov $0x8,%r11d
15e2c(6): jnle 0xfffffa4c(%rip)
15e32(2): test $0x2,%al
15e34(6): mov $0x2,%r11d
15e3a(6): jnz 0xfffffa3e(%rip)
15e40(3): and $0x1,%eax
15e43(3): cmp $0x1,%eax
15e46(3): sbb %r11d,%r11d
15e49(4): and $0x2,%r11d
15e4d(4): add $0x4,%r11d
15e51(5): jmp 0xfffffa27(%rip)
15e56(a): nop 0x0(%rax,%rax,1)
15e60(6): mov $0x11,%r11d
15e66(5): jmp 0xfffffa12(%rip)
15e6b(4): mov 0x8(%r15),%rcx
15e6f(5): cmp %rcx,0x8(%rsp)
15e74(2): jz 0xa(%rip)
15e76(3): mov %rcx,%rdi
15e79(5): call 0xfffed257(%rip)
15e7e(4): mov 0x8(%r14),%rdi
15e82(5): cmp %rdi,0x28(%rsp)
15e87(2): jz 0x7(%rip)
15e89(5): call 0xfffed247(%rip)
15e8e(5): call 0xfffecac2(%rip)
15e93(6): mov $0x16,(%rax)
15e99(5): mov $0xffffffff,%eax
15e9e(5): jmp 0xfffff824(%rip)
15ea3(3): cmp %r11d,%edx
15ea6(6): jz 0xfffffa35(%rip)
15eac(2): jmp 0xffffffc3(%rip)
15eae(2): nop 
15eb0(3): add %r9,%r9
15eb3(4): lea 0x1(%r13),%rax
15eb7(3): cmp %r13,%r9
15eba(4): cmovbe %rax,%r9
15ebe(a): mov $0x576460752303423487,%rax
15ec8(3): cmp %rax,%r9
15ecb(6): jnbe 0x3e0(%rip)
15ed1(3): mov %r9,%rsi
15ed4(5): mov %r9,0x48(%rsp)
15ed9(5): mov %r10,0x40(%rsp)
15ede(4): shl/sal $0x5,%rsi
15ee2(5): cmp %rcx,0x8(%rsp)
15ee7(5): mov %r8,0x38(%rsp)
15eec(5): mov %r11d,0x30(%rsp)
15ef1(6): jz 0xa0(%rip)
15ef7(3): mov %rcx,%rdi
15efa(5): call 0xfffecf96(%rip)
15eff(3): test %rax,%rax
15f02(3): mov %rax,%rcx
15f05(5): mov 0x30(%rsp),%r11d
15f0a(5): mov 0x38(%rsp),%r8
15f0f(5): mov 0x40(%rsp),%r10
15f14(5): mov 0x48(%rsp),%r9
15f19(6): jz 0x38e(%rip)
15f1f(5): mov 0x8(%rsp),%rax
15f24(4): cmp 0x8(%r15),%rax
15f28(6): jz 0x91(%rip)
15f2e(4): mov %rcx,0x8(%r15)
15f32(5): jmp 0xfffff962(%rip)
15f37(5): mov 0x20(%rsp),%rsi
15f3c(4): cmp $0xffffffff,%rsi
15f40(4): lea 0x1(%rsi),%rax
15f44(5): mov %rsi,0x50(%r12)
15f49(6): jz 0xffffff22(%rip)
15f4f(5): mov 0x20(%rsp),%r13
15f54(5): mov %rax,0x20(%rsp)
15f59(5): jmp 0xfffff92e(%rip)
15f5e(4): cmp $0x9,%dil
15f62(6): jnbe 0xffffff09(%rip)
15f68(3): movsx %bl,%eax
15f6b(3): mov %r8,%rsi
15f6e(3): mov %rbp,%rcx
15f71(3): sub $0x30,%eax
15f74(2): cwde 
15f76(5): jmp 0xfffffc3b(%rip)
15f7b(3): cmp $0x5,%edx
15f7e(6): jnz 0xfffffef1(%rip)
15f84(4): movzx 0x0(%rbp),%ebx
15f88(4): lea 0x1(%rbp),%rdx
15f8c(5): jmp 0xfffff859(%rip)
15f91(3): mov %rsi,%rdi
15f94(5): call 0xfffece5c(%rip)
15f99(3): test %rax,%rax
15f9c(3): mov %rax,%rcx
15f9f(5): mov 0x30(%rsp),%r11d
15fa4(5): mov 0x38(%rsp),%r8
15fa9(5): mov 0x40(%rsp),%r10
15fae(5): mov 0x48(%rsp),%r9
15fb3(6): jz 0x169(%rip)
15fb9(3): mov (%r15),%rdx
15fbc(5): mov 0x8(%rsp),%rsi
15fc1(3): mov %rcx,%rdi
15fc4(5): mov %r9,0x48(%rsp)
15fc9(5): mov %r10,0x40(%rsp)
15fce(5): mov %r8,0x38(%rsp)
15fd3(5): mov %r11d,0x30(%rsp)
15fd8(4): shl/sal $0x5,%rdx
15fdc(5): call 0xfffecda4(%rip)
15fe1(5): mov 0x48(%rsp),%r9
15fe6(5): mov 0x40(%rsp),%r10
15feb(3): mov %rax,%rcx
15fee(5): mov 0x38(%rsp),%r8
15ff3(5): mov 0x30(%rsp),%r11d
15ff8(5): jmp 0xffffff36(%rip)
15ffd(3): mov %rsi,%rdi
16000(5): call 0xfffecdf0(%rip)
16005(3): test %rax,%rax
16008(3): mov %rax,%rcx
1600b(5): mov 0x30(%rsp),%r8
16010(5): mov 0x38(%rsp),%r10
16015(5): mov 0x40(%rsp),%r9
1601a(6): jz 0xef(%rip)
16020(4): lea 0x0(%rbx,%rbx,4),%rax
16024(5): mov 0x28(%rsp),%rsi
16029(3): mov %rcx,%rdi
1602c(5): mov %r9,0x40(%rsp)
16031(5): mov %r10,0x38(%rsp)
16036(4): lea 0x0(%rbx,%rax,2),%rdx
1603a(5): mov %r8,0x30(%rsp)
1603f(4): shl/sal $0x3,%rdx
16043(5): call 0xfffecd3d(%rip)
16048(3): mov (%r14),%rbx
1604b(3): mov %rax,%rcx
1604e(5): mov 0x40(%rsp),%r9
16053(5): mov 0x38(%rsp),%r10
16058(5): mov 0x30(%rsp),%r8
1605d(5): jmp 0xfffff91a(%rip)
16062(3): mov (%r15),%rax
16065(5): jmp 0xfffffa02(%rip)
1606a(3): cmp $0x5,%edx
1606d(6): jnz 0xfffffe02(%rip)
16073(4): movzx (%r11),%ebx
16077(3): mov %r11,%rbp
1607a(5): jmp 0xfffff774(%rip)
1607f(3): add %r9,%r9
16082(4): lea 0x1(%rbx),%rax
16086(3): cmp %rbx,%r9
16089(4): cmovbe %rax,%r9
1608d(a): mov $0x576460752303423487,%rax
16097(3): cmp %rax,%r9
1609a(6): jnbe 0x211(%rip)
160a0(3): mov %r9,%rsi
160a3(5): mov %r9,0x48(%rsp)
160a8(5): mov %r10,0x40(%rsp)
160ad(4): shl/sal $0x5,%rsi
160b1(5): cmp %rcx,0x8(%rsp)
160b6(5): mov %r8,0x38(%rsp)
160bb(5): mov %r11,0x30(%rsp)
160c0(6): jz 0x1be(%rip)
160c6(3): mov %rcx,%rdi
160c9(5): call 0xfffecdc7(%rip)
160ce(4): mov 0x8(%r15),%rdx
160d2(5): mov 0x30(%rsp),%r11
160d7(3): mov %rax,%rcx
160da(5): mov 0x38(%rsp),%r8
160df(5): mov 0x40(%rsp),%r10
160e4(5): mov 0x48(%rsp),%r9
160e9(3): test %rcx,%rcx
160ec(6): jz 0x21b(%rip)
160f2(5): cmp %rdx,0x8(%rsp)
160f7(3): mov (%r15),%rax
160fa(6): jz 0x1c6(%rip)
16100(4): mov %rcx,0x8(%r15)
16104(5): jmp 0xfffffa19(%rip)
16109(4): mov 0x8(%r15),%rcx
1610d(5): cmp %rcx,0x8(%rsp)
16112(2): jz 0x1a(%rip)
16114(3): mov %rcx,%rdi
16117(5): call 0xfffecfb9(%rip)
1611c(4): mov 0x8(%r14),%rdi
16120(5): cmp %rdi,0x28(%rsp)
16125(2): jz 0x7(%rip)
16127(5): call 0xfffecfa9(%rip)
1612c(5): call 0xfffec824(%rip)
16131(6): mov $0xc,(%rax)
16137(5): mov $0xffffffff,%eax
1613c(5): jmp 0xfffff586(%rip)
16141(3): mov %rsi,%rdi
16144(5): call 0xfffeccac(%rip)
16149(5): mov 0x8(%rsp),%rdx
1614e(3): mov %rax,%rcx
16151(5): mov 0x40(%rsp),%r9
16156(5): mov 0x38(%rsp),%r10
1615b(5): mov 0x30(%rsp),%r8
16160(5): jmp 0xfffff8ec(%rip)
16165(5): mov 0x20(%rsp),%rsi
1616a(4): cmp $0xffffffff,%rsi
1616e(4): lea 0x1(%rsi),%rax
16172(5): mov %rsi,0x40(%r12)
16177(6): jz 0xfffffcf4(%rip)
1617d(5): mov 0x20(%rsp),%rbx
16182(5): mov %rax,0x20(%rsp)
16187(5): jmp 0xfffff986(%rip)
1618c(3): mov %r11,%rdx
1618f(4): add $0x1,%rdx
16193(3): movzx (%rdx),%ecx
16196(3): lea 0xffffffd0(%rcx),%esi
16199(4): cmp $0x9,%sil
1619d(2): jbe 0xfffffff2(%rip)
1619f(3): cmp $0x24,%cl
161a2(6): jnz 0xfffff95c(%rip)
161a8(2): xor %ecx,%ecx
161aa(a): mov $0x1844674407370955161,%rsi
161b4(3): sub $0x30,%eax
161b7(3): mov %r8,%rdx
161ba(3): cmp %rsi,%rcx
161bd(2): cwde 
161bf(2): jnbe 0x9(%rip)
161c1(4): lea 0x0(%rcx,%rcx,4),%rdx
161c5(3): add %rdx,%rdx
161c8(3): mov %r11,%rsi
161cb(2): xor %ebx,%ebx
161cd(3): add %rax,%rdx
161d0(5): movsx 0x1(%r11),%eax
161d5(3): setb %bl
161d8(4): add $0x1,%r11
161dc(3): mov %rdx,%rcx
161df(3): test %rbx,%rbx
161e2(3): lea 0xffffffd0(%rax),%edi
161e5(2): jz 0x73(%rip)
161e7(4): cmp $0x9,%dil
161eb(6): jnbe 0xfffffc80(%rip)
161f1(3): sub $0x30,%eax
161f4(3): mov %r8,%rdx
161f7(3): mov %r11,%rsi
161fa(2): cwde 
161fc(2): jmp 0xffffffcf(%rip)
161fe(4): cmp $0x9,%dil
16202(6): jnbe 0xfffffc69(%rip)
16208(3): movsx %cl,%eax
1620b(3): mov %rdx,%rbp
1620e(3): mov %r8,%rcx
16211(3): sub $0x30,%eax
16214(2): cwde 
16216(5): jmp 0xfffffac3(%rip)
1621b(5): mov 0x8(%rsp),%rsi
16220(4): shl/sal $0x5,%rax
16224(3): mov %rcx,%rdi
16227(3): mov %rax,%rdx
1622a(5): mov %r9,0x40(%rsp)
1622f(5): mov %r10,0x38(%rsp)
16234(5): mov %r8,0x30(%rsp)
16239(5): call 0xfffecb47(%rip)
1623e(5): mov 0x40(%rsp),%r9
16243(3): mov %rax,%rcx
16246(5): mov 0x38(%rsp),%r10
1624b(3): mov (%r15),%rax
1624e(5): mov 0x30(%rsp),%r8
16253(5): jmp 0xfffff810(%rip)
16258(4): cmp $0x9,%dil
1625c(6): jbe 0xffffff4e(%rip)
16262(4): lea 0xffffffff(%rdx),%rbx
16266(4): cmp $0xfffffffd,%rbx
1626a(6): jnbe 0xfffffc01(%rip)
16270(5): mov %rbx,0x40(%r12)
16275(4): lea 0x2(%rsi),%r11
16279(5): jmp 0xfffff894(%rip)
1627e(3): mov %rsi,%rdi
16281(5): call 0xfffecb6f(%rip)
16286(5): mov 0x8(%rsp),%rdx
1628b(3): mov %rax,%rcx
1628e(5): mov 0x48(%rsp),%r9
16293(5): mov 0x40(%rsp),%r10
16298(5): mov 0x38(%rsp),%r8
1629d(5): mov 0x30(%rsp),%r11
162a2(5): jmp 0xfffffe47(%rip)
162a7(4): mov 0x8(%r15),%rcx
162ab(5): cmp %rcx,0x8(%rsp)
162b0(6): jnz 0xfffffe64(%rip)
162b6(5): jmp 0xfffffe66(%rip)
162bb(5): nop 0x0(%rax,%rax,1)
162c0(5): mov 0x8(%rsp),%rsi
162c5(4): shl/sal $0x5,%rax
162c9(3): mov %rcx,%rdi
162cc(3): mov %rax,%rdx
162cf(5): mov %r9,0x48(%rsp)
162d4(5): mov %r10,0x40(%rsp)
162d9(5): mov %r8,0x38(%rsp)
162de(5): mov %r11,0x30(%rsp)
162e3(5): call 0xfffeca9d(%rip)
162e8(5): mov 0x48(%rsp),%r9
162ed(3): mov %rax,%rcx
162f0(5): mov 0x40(%rsp),%r10
162f5(3): mov (%r15),%rax
162f8(5): mov 0x38(%rsp),%r8
162fd(5): mov 0x30(%rsp),%r11
16302(5): jmp 0xfffffdfe(%rip)
16307(3): mov %rdx,%rcx
1630a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
16310(2): push %r15
16312(2): push %r14
16314(3): mov %rdx,%r15
16317(2): push %r13
16319(2): push %r12
1631b(7): lea 0x20638e(%rip),%r12
16322(1): push %rbp
16323(7): lea 0x20638e(%rip),%rbp
1632a(1): push %rbx
1632b(3): mov %edi,%r13d
1632e(3): mov %rsi,%r14
16331(3): sub %r12,%rbp
16334(4): sub $0x8,%rsp
16338(4): sar $0x3,%rbp
1633c(5): call 0xfffec584(%rip)
16341(3): test %rbp,%rbp
16344(2): jz 0x22(%rip)
16346(2): xor %ebx,%ebx
16348(8): nop 0x0(%rax,%rax,1)
16350(3): mov %r15,%rdx
16353(3): mov %r14,%rsi
16356(3): mov %r13d,%edi
16359(4): call 0x0(%r12,%rbx,8)
1635d(4): add $0x1,%rbx
16361(3): cmp %rbx,%rbp
16364(2): jnz 0xffffffec(%rip)
16366(4): add $0x8,%rsp
1636a(1): pop %rbx
1636b(1): pop %rbp
1636c(2): pop %r12
1636e(2): pop %r13
16370(2): pop %r14
16372(2): pop %r15
16374(1): ret near (%rsp)

"atexit" :
16390(7): mov 0x206c71(%rip),%rdx
16397(2): xor %esi,%esi
16399(5): jmp 0xfffecc57(%rip)

"_fini" :
163a0(4): sub $0x8,%rsp
163a4(4): add $0x8,%rsp
163a8(1): ret near (%rsp)

