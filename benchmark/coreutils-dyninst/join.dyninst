
"__ctype_toupper_loc@plt" :
1630(6): jmp 0x2097ea(%rip)
1636(5): push $0x0

"__uflow@plt" :
1640(6): jmp 0x2097e2(%rip)
1646(5): push $0x1

"free@plt" :
1650(6): jmp 0x2097da(%rip)
1656(5): push $0x2

"abort@plt" :
1660(6): jmp 0x2097d2(%rip)
1666(5): push $0x3

"__errno_location@plt" :
1670(6): jmp 0x2097ca(%rip)
1676(5): push $0x4

"strncmp@plt" :
1680(6): jmp 0x2097c2(%rip)
1686(5): push $0x5

"_exit@plt" :
1690(6): jmp 0x2097ba(%rip)
1696(5): push $0x6

"__fpending@plt" :
16a0(6): jmp 0x2097b2(%rip)
16a6(5): push $0x7

"fcntl@plt" :
16b0(6): jmp 0x2097aa(%rip)
16b6(5): push $0x8

"textdomain@plt" :
16c0(6): jmp 0x2097a2(%rip)
16c6(5): push $0x9

"fclose@plt" :
16d0(6): jmp 0x20979a(%rip)
16d6(5): push $0xa

"bindtextdomain@plt" :
16e0(6): jmp 0x209792(%rip)
16e6(5): push $0xb

"dcgettext@plt" :
16f0(6): jmp 0x20978a(%rip)
16f6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1700(6): jmp 0x209782(%rip)
1706(5): push $0xd

"strlen@plt" :
1710(6): jmp 0x20977a(%rip)
1716(5): push $0xe

"__stack_chk_fail@plt" :
1720(6): jmp 0x209772(%rip)
1726(5): push $0xf

"getopt_long@plt" :
1730(6): jmp 0x20976a(%rip)
1736(5): push $0x10

"mbrtowc@plt" :
1740(6): jmp 0x209762(%rip)
1746(5): push $0x11

"strchr@plt" :
1750(6): jmp 0x20975a(%rip)
1756(5): push $0x12

"__overflow@plt" :
1760(6): jmp 0x209752(%rip)
1766(5): push $0x13

"strrchr@plt" :
1770(6): jmp 0x20974a(%rip)
1776(5): push $0x14

"lseek@plt" :
1780(6): jmp 0x209742(%rip)
1786(5): push $0x15

"__assert_fail@plt" :
1790(6): jmp 0x20973a(%rip)
1796(5): push $0x16

"memset@plt" :
17a0(6): jmp 0x209732(%rip)
17a6(5): push $0x17

"close@plt" :
17b0(6): jmp 0x20972a(%rip)
17b6(5): push $0x18

"posix_fadvise@plt" :
17c0(6): jmp 0x209722(%rip)
17c6(5): push $0x19

"memchr@plt" :
17d0(6): jmp 0x20971a(%rip)
17d6(5): push $0x1a

"memcmp@plt" :
17e0(6): jmp 0x209712(%rip)
17e6(5): push $0x1b

"fputs_unlocked@plt" :
17f0(6): jmp 0x20970a(%rip)
17f6(5): push $0x1c

"calloc@plt" :
1800(6): jmp 0x209702(%rip)
1806(5): push $0x1d

"strcmp@plt" :
1810(6): jmp 0x2096fa(%rip)
1816(5): push $0x1e

"memcpy@plt" :
1820(6): jmp 0x2096f2(%rip)
1826(5): push $0x1f

"fileno@plt" :
1830(6): jmp 0x2096ea(%rip)
1836(5): push $0x20

"malloc@plt" :
1840(6): jmp 0x2096e2(%rip)
1846(5): push $0x21

"fflush@plt" :
1850(6): jmp 0x2096da(%rip)
1856(5): push $0x22

"nl_langinfo@plt" :
1860(6): jmp 0x2096d2(%rip)
1866(5): push $0x23

"strcoll@plt" :
1870(6): jmp 0x2096ca(%rip)
1876(5): push $0x24

"strpbrk@plt" :
1880(6): jmp 0x2096c2(%rip)
1886(5): push $0x25

"__freading@plt" :
1890(6): jmp 0x2096ba(%rip)
1896(5): push $0x26

"fwrite_unlocked@plt" :
18a0(6): jmp 0x2096b2(%rip)
18a6(5): push $0x27

"realloc@plt" :
18b0(6): jmp 0x2096aa(%rip)
18b6(5): push $0x28

"fdopen@plt" :
18c0(6): jmp 0x2096a2(%rip)
18c6(5): push $0x29

"setlocale@plt" :
18d0(6): jmp 0x20969a(%rip)
18d6(5): push $0x2a

"__printf_chk@plt" :
18e0(6): jmp 0x209692(%rip)
18e6(5): push $0x2b

"error@plt" :
18f0(6): jmp 0x20968a(%rip)
18f6(5): push $0x2c

"fseeko@plt" :
1900(6): jmp 0x209682(%rip)
1906(5): push $0x2d

"fopen@plt" :
1910(6): jmp 0x20967a(%rip)
1916(5): push $0x2e

"strtoul@plt" :
1920(6): jmp 0x209672(%rip)
1926(5): push $0x2f

"__cxa_atexit@plt" :
1930(6): jmp 0x20966a(%rip)
1936(5): push $0x30

"exit@plt" :
1940(6): jmp 0x209662(%rip)
1946(5): push $0x31

"fwrite@plt" :
1950(6): jmp 0x20965a(%rip)
1956(5): push $0x32

"__fprintf_chk@plt" :
1960(6): jmp 0x209652(%rip)
1966(5): push $0x33

"mbsinit@plt" :
1970(6): jmp 0x20964a(%rip)
1976(5): push $0x34

"iswprint@plt" :
1980(6): jmp 0x209642(%rip)
1986(5): push $0x35

"__ctype_b_loc@plt" :
1990(6): jmp 0x20963a(%rip)
1996(5): push $0x36

".plt.got" :
19a0(6): jmp 0x209652(%rip)
19a6(2): nop 

"_init" :
1600(4): sub $0x8,%rsp
1604(7): mov 0x2099dd(%rip),%rax
160b(3): test %rax,%rax
160e(2): jz 0x4(%rip)
1610(2): call %rax
1612(4): add $0x8,%rsp
1616(1): ret near (%rsp)

"main" :
19b0(2): push %r15
19b2(2): push %r14
19b4(2): push %r13
19b6(2): push %r12
19b8(1): push %rbp
19b9(1): push %rbx
19ba(3): movsxd %edi,%rbp
19bd(3): mov %rsi,%rbx
19c0(7): sub $0x98,%rsp
19c7(3): mov (%rsi),%rdi
19ca(9): mov $0x28,%rax
19d3(8): mov %rax,0x88(%rsp)
19db(2): xor %eax,%eax
19dd(8): mov $0x0,0x30(%rsp)
19e5(c): mov $0x0,0x80(%rsp)
19f1(5): lea 0x60(%rsp),%r15
19f6(8): mov $0x0,0x34(%rsp)
19fe(5): call 0x2642(%rip)
1a03(7): lea 0x634e(%rip),%rsi
1a0a(5): mov $0x6,%edi
1a0f(5): call 0xfffffec1(%rip)
1a14(7): lea 0x643a(%rip),%rsi
1a1b(7): lea 0x63f9(%rip),%rdi
1a22(5): call 0xfffffcbe(%rip)
1a27(7): lea 0x63ed(%rip),%rdi
1a2e(5): call 0xfffffc92(%rip)
1a33(5): mov $0x3,%edi
1a38(5): call 0x2418(%rip)
1a3d(7): lea 0x227c(%rip),%rdi
1a44(6): mov %al,0x209754(%rip)
1a4a(5): call 0x58a6(%rip)
1a4f(7): lea 0x124a(%rip),%rdi
1a56(5): call 0x589a(%rip)
1a5b(5): lea 0x2c(%rsp),%rax
1a60(7): mov $0x1,0x209734(%rip)
1a67(7): mov $0x0,0x20972c(%rip)
1a6e(7): mov $0x0,0x209724(%rip)
1a75(7): mov $0x0,0x20971c(%rip)
1a7c(5): mov %rax,0x8(%rsp)
1a81(5): lea 0x30(%rsp),%rax
1a86(a): mov $0x0,0x2096c0(%rip)
1a90(5): mov %rax,0x10(%rsp)
1a95(2): jmp 0x4f(%rip)
1a97(9): nop 0x0(%rax,%rax,1)
1aa0(3): cmp $0x76,%eax
1aa3(6): jz 0x1a5(%rip)
1aa9(6): jle 0xcf(%rip)
1aaf(5): cmp $0x80,%eax
1ab4(6): jz 0x2bc(%rip)
1aba(6): jle 0x296(%rip)
1ac0(5): cmp $0x81,%eax
1ac5(6): jz 0x33b(%rip)
1acb(5): cmp $0x82,%eax
1ad0(2): jnz 0x71(%rip)
1ad2(7): mov $0x1,0x209627(%rip)
1ad9(2): xor %eax,%eax
1adb(5): nop 0x0(%rax,%rax,1)
1ae0(4): mov %eax,0x30(%rsp)
1ae4(7): lea 0x208fd5(%rip),%rcx
1aeb(7): lea 0x63b9(%rip),%rdx
1af2(3): xor %r8d,%r8d
1af5(3): mov %rbx,%rsi
1af8(2): mov %ebp,%edi
1afa(5): call 0xfffffc36(%rip)
1aff(3): cmp $0xff,%eax
1b02(6): jz 0x35f(%rip)
1b08(3): cmp $0x69,%eax
1b0b(8): mov $0x0,0x2c(%rsp)
1b13(6): jz 0x2d5(%rip)
1b19(2): jnle 0xffffff87(%rip)
1b1b(3): cmp $0x31,%eax
1b1e(6): jz 0x2a2(%rip)
1b24(6): jle 0xcc(%rip)
1b2a(3): cmp $0x61,%eax
1b2d(6): jz 0x122(%rip)
1b33(3): cmp $0x65,%eax
1b36(6): jz 0x1e2(%rip)
1b3c(3): cmp $0x32,%eax
1b3f(2): jz 0x11(%rip)
1b41(5): mov $0x1,%edi
1b46(5): call 0x1b7a(%rip)
1b4b(5): nop 0x0(%rax,%rax,1)
1b50(7): mov 0x209569(%rip),%rdi
1b57(5): call 0xf39(%rip)
1b5c(7): lea 0x2094b5(%rip),%rdi
1b63(3): mov %rax,%rsi
1b66(5): call 0xeda(%rip)
1b6b(4): mov 0x2c(%rsp),%eax
1b6f(5): jmp 0xffffff71(%rip)
1b74(4): nop 0x0(%rax)
1b78(3): cmp $0x6f,%eax
1b7b(6): jz 0x125(%rip)
1b81(3): cmp $0x74,%eax
1b84(6): jz 0x204(%rip)
1b8a(3): cmp $0x6a,%eax
1b8d(2): jnz 0xffffffb4(%rip)
1b8f(7): mov 0x20952a(%rip),%rdi
1b96(3): movzx (%rdi),%eax
1b99(3): lea 0xffffffcf(%rax),%edx
1b9c(3): cmp $0x1,%dl
1b9f(2): jnbe 0x21(%rip)
1ba1(4): cmp $0x0,0x1(%rdi)
1ba5(2): jnz 0x1b(%rip)
1ba7(7): movsxd 0x20950a(%rip),%rdx
1bae(5): mov 0xfffffff8(%rbx,%rdx,8),%rdx
1bb3(4): add $0x2,%rdx
1bb7(3): cmp %rdx,%rdi
1bba(6): jz 0x7c4(%rip)
1bc0(5): call 0xed0(%rip)
1bc5(7): lea 0x209454(%rip),%rdi
1bcc(3): mov %rax,%rsi
1bcf(5): call 0xe71(%rip)
1bd4(7): mov 0x209445(%rip),%rsi
1bdb(7): lea 0x209436(%rip),%rdi
1be2(5): call 0xe5e(%rip)
1be7(4): mov 0x2c(%rsp),%eax
1beb(5): jmp 0xfffffef5(%rip)
1bf0(5): cmp $0xffffff7e,%eax
1bf5(6): jz 0xae1(%rip)
1bfb(3): cmp $0x1,%eax
1bfe(6): jz 0xda(%rip)
1c04(5): cmp $0xffffff7d,%eax
1c09(6): jnz 0xffffff38(%rip)
1c0f(7): mov 0x209492(%rip),%rdi
1c16(7): mov 0x209413(%rip),%rcx
1c1d(7): lea 0x627a(%rip),%r8
1c24(7): lea 0x61ec(%rip),%rdx
1c2b(7): lea 0x616a(%rip),%rsi
1c32(3): xor %r9d,%r9d
1c35(2): xor %eax,%eax
1c37(5): call 0x4609(%rip)
1c3c(2): xor %edi,%edi
1c3e(5): call 0xfffffd02(%rip)
1c43(5): nop 0x0(%rax,%rax,1)
1c48(7): mov $0x0,0x20954c(%rip)
1c4f(7): mov 0x20946a(%rip),%rdi
1c56(7): lea 0x60fb(%rip),%r8
1c5d(2): xor %esi,%esi
1c5f(3): mov %r15,%rcx
1c62(5): mov $0xa,%edx
1c67(5): call 0x4b29(%rip)
1c6c(2): test %eax,%eax
1c6e(6): jnz 0xa8b(%rip)
1c74(5): mov 0x60(%rsp),%rax
1c79(4): lea 0xffffffff(%rax),%rdx
1c7d(4): cmp $0x1,%rdx
1c81(6): jnbe 0xa78(%rip)
1c87(4): cmp $0x1,%rax
1c8b(6): jz 0x186(%rip)
1c91(7): mov $0x1,0x209504(%rip)
1c98(5): jmp 0xffffff4f(%rip)
1c9d(3): nop (%rax)
1ca0(7): mov 0x209419(%rip),%rdx
1ca7(7): lea 0x61bf(%rip),%rdi
1cae(5): mov $0x5,%ecx
1cb3(3): mov %rdx,%rsi
1cb6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cb8(3): setnbe %al
1cbb(2): sbb $0x0,%al
1cbd(3): movsx %al,%eax
1cc0(2): test %eax,%eax
1cc2(6): jnz 0x185(%rip)
1cc8(7): mov $0x1,0x2094b9(%rip)
1ccf(5): jmp 0xfffffe11(%rip)
1cd4(4): nop 0x0(%rax)
1cd8(5): lea 0x34(%rsp),%r14
1cdd(8): lea 0x80(%rsp),%r13
1ce5(5): lea 0x78(%rsp),%r12
1cea(5): mov 0x8(%rsp),%r9
1cef(5): mov 0x10(%rsp),%r8
1cf4(7): mov 0x2093c5(%rip),%rdi
1cfb(3): mov %r14,%rcx
1cfe(3): mov %r13,%rdx
1d01(3): mov %r12,%rsi
1d04(5): call 0x1ddc(%rip)
1d09(4): mov 0x2c(%rsp),%eax
1d0d(5): jmp 0xfffffdd3(%rip)
1d12(6): nop 0x0(%rax,%rax,1)
1d18(7): mov 0x209471(%rip),%rdi
1d1f(7): mov 0x20939a(%rip),%r12
1d26(3): test %rdi,%rdi
1d29(2): jz 0x12(%rip)
1d2b(3): mov %r12,%rsi
1d2e(5): call 0xfffffae2(%rip)
1d33(2): test %eax,%eax
1d35(6): jnz 0x9fa(%rip)
1d3b(7): mov %r12,0x20944e(%rip)
1d42(2): xor %eax,%eax
1d44(5): jmp 0xfffffd9c(%rip)
1d49(7): nop 0x0(%rax)
1d50(3): cmp $0x7a,%eax
1d53(6): jnz 0xfffffdee(%rip)
1d59(7): mov $0x0,0x2092b0(%rip)
1d60(2): xor %eax,%eax
1d62(5): jmp 0xfffffd7e(%rip)
1d67(9): nop 0x0(%rax,%rax,1)
1d70(a): mov $0x1,0x2093d6(%rip)
1d7a(2): xor %eax,%eax
1d7c(5): jmp 0xfffffd64(%rip)
1d81(7): nop 0x0(%rax)
1d88(7): mov 0x209331(%rip),%r12
1d8f(5): movzx (%r12),%eax
1d94(2): test %al,%al
1d96(6): jnz 0x87(%rip)
1d9c(5): mov $0xa,%eax
1da1(6): mov 0x20926d(%rip),%edx
1da7(2): test %edx,%edx
1da9(2): js 0xa(%rip)
1dab(2): cmp %eax,%edx
1dad(6): jnz 0xb23(%rip)
1db3(6): mov %eax,0x20925b(%rip)
1db9(2): xor %eax,%eax
1dbb(5): jmp 0xfffffd25(%rip)
1dc0(7): mov 0x2092f9(%rip),%rdi
1dc7(5): call 0xcc9(%rip)
1dcc(7): lea 0x20924d(%rip),%rdi
1dd3(3): mov %rax,%rsi
1dd6(5): call 0xc6a(%rip)
1ddb(4): mov 0x2c(%rsp),%eax
1ddf(5): jmp 0xfffffd01(%rip)
1de4(4): nop 0x0(%rax)
1de8(7): mov $0x1,0x209312(%rip)
1def(2): xor %eax,%eax
1df1(5): jmp 0xfffffcef(%rip)
1df6(a): nop 0x0(%rax,%rax,1)
1e00(a): mov $0x2,0x209346(%rip)
1e0a(2): xor %eax,%eax
1e0c(5): jmp 0xfffffcd4(%rip)
1e11(7): mov $0x1,0x209385(%rip)
1e18(5): jmp 0xfffffdcf(%rip)
1e1d(6): cmp $0x0,0x1(%r12)
1e23(6): jz 0xffffff7e(%rip)
1e29(7): lea 0x6042(%rip),%rsi
1e30(3): mov %r12,%rdi
1e33(5): call 0xfffff9dd(%rip)
1e38(2): test %eax,%eax
1e3a(6): jnz 0x9d4(%rip)
1e40(2): xor %eax,%eax
1e42(5): jmp 0xffffff5f(%rip)
1e47(3): mov %rdx,%rdi
1e4a(5): call 0xce6(%rip)
1e4f(8): mov $0x3,0x2c(%rsp)
1e57(5): mov $0x3,%eax
1e5c(5): jmp 0xfffffc84(%rip)
1e61(7): movsxd 0x209250(%rip),%rax
1e68(8): mov $0x0,0x30(%rsp)
1e70(2): cmp %eax,%ebp
1e72(2): jle 0x54(%rip)
1e74(5): lea 0x30(%rsp),%rcx
1e79(5): lea 0x2c(%rsp),%r15
1e7e(5): lea 0x34(%rsp),%r14
1e83(8): lea 0x80(%rsp),%r13
1e8b(5): lea 0x78(%rsp),%r12
1e90(5): mov %rcx,0x8(%rsp)
1e95(3): nop (%rax)
1e98(3): lea 0x1(%rax),%edx
1e9b(4): mov 0x0(%rbx,%rax,8),%rdi
1e9f(5): mov 0x8(%rsp),%r8
1ea4(3): mov %r15,%r9
1ea7(3): mov %r14,%rcx
1eaa(3): mov %r12,%rsi
1ead(6): mov %edx,0x209205(%rip)
1eb3(3): mov %r13,%rdx
1eb6(5): call 0x1c2a(%rip)
1ebb(7): movsxd 0x2091f6(%rip),%rax
1ec2(2): cmp %ebp,%eax
1ec4(2): jl 0xffffffd4(%rip)
1ec6(4): mov 0x34(%rsp),%eax
1eca(3): cmp $0x2,%eax
1ecd(6): jnz 0x9d9(%rip)
1ed3(8): cmp $0x0,0x80(%rsp)
1edb(6): jnz 0x46b(%rip)
1ee1(8): cmp $0x0,0x84(%rsp)
1ee9(6): jnz 0x436(%rip)
1eef(8): cmp $0xffffffff,0x209129(%rip)
1ef7(6): jz 0x418(%rip)
1efd(8): cmp $0xffffffff,0x209113(%rip)
1f05(6): jz 0x3fa(%rip)
1f0b(7): mov 0x20929e(%rip),%rbx
1f12(7): lea 0x6091(%rip),%rsi
1f19(3): mov %rbx,%rdi
1f1c(5): call 0xfffff8f4(%rip)
1f21(2): test %eax,%eax
1f23(6): jnz 0x444(%rip)
1f29(7): mov 0x209180(%rip),%r12
1f30(3): test %r12,%r12
1f33(6): jz 0x940(%rip)
1f39(7): mov 0x209278(%rip),%rbx
1f40(7): lea 0x6063(%rip),%rsi
1f47(3): mov %rbx,%rdi
1f4a(5): call 0xfffff8c6(%rip)
1f4f(2): test %eax,%eax
1f51(6): jnz 0x675(%rip)
1f57(7): mov 0x209152(%rip),%rbx
1f5e(3): test %rbx,%rbx
1f61(6): jz 0x8df(%rip)
1f67(3): cmp %rbx,%r12
1f6a(6): jz 0x840(%rip)
1f70(5): mov $0x2,%esi
1f75(3): mov %r12,%rdi
1f78(5): lea 0x40(%rsp),%r14
1f7d(5): call 0x1e03(%rip)
1f82(5): lea 0x60(%rsp),%r13
1f87(5): mov $0x2,%esi
1f8c(3): mov %rbx,%rdi
1f8f(5): call 0x1df1(%rip)
1f94(5): mov $0x1,%edx
1f99(3): mov %r14,%rsi
1f9c(3): mov %r12,%rdi
1f9f(9): mov $0x0,0x40(%rsp)
1fa8(9): mov $0x0,0x48(%rsp)
1fb1(9): mov $0x0,0x50(%rsp)
1fba(5): call 0x1626(%rip)
1fbf(5): mov $0x2,%edx
1fc4(3): mov %r13,%rsi
1fc7(3): mov %rbx,%rdi
1fca(9): mov $0x0,0x60(%rsp)
1fd3(9): mov $0x0,0x68(%rsp)
1fdc(9): mov $0x0,0x70(%rsp)
1fe5(5): call 0x15fb(%rip)
1fea(7): cmp $0x0,0x209197(%rip)
1ff1(2): jz 0x3c(%rip)
1ff3(5): mov 0x40(%rsp),%rax
1ff8(3): test %rax,%rax
1ffb(2): jz 0xe(%rip)
1ffd(5): mov 0x50(%rsp),%rax
2002(3): mov (%rax),%rax
2005(4): mov 0x18(%rax),%rax
2009(7): mov %rax,0x209170(%rip)
2010(5): mov 0x60(%rsp),%rax
2015(3): test %rax,%rax
2018(2): jz 0xe(%rip)
201a(5): mov 0x70(%rsp),%rax
201f(3): mov (%rax),%rax
2022(4): mov 0x18(%rax),%rax
2026(7): mov %rax,0x20914b(%rip)
202d(7): cmp $0x0,0x2090cc(%rip)
2034(6): jz 0x230(%rip)
203a(6): cmp $0x0,0x40(%rsp)
2040(5): mov 0x60(%rsp),%rax
2045(6): jnz 0x598(%rip)
204b(3): test %rax,%rax
204e(6): jnz 0x609(%rip)
2054(2): xor %eax,%eax
2056(7): cmp $0x2,0x2090f3(%rip)
205d(9): mov $0x0,0x38(%rsp)
2066(2): jz 0x1c(%rip)
2068(7): cmp $0x0,0x209129(%rip)
206f(6): jz 0x32d(%rip)
2075(7): cmp $0x0,0x20911d(%rip)
207c(6): jz 0x320(%rip)
2082(7): cmp $0x0,0x209114(%rip)
2089(6): jnz 0x654(%rip)
208f(7): movzx 0x209106(%rip),%eax
2096(2): test %al,%al
2098(6): jnz 0x4af(%rip)
209e(5): mov 0x38(%rsp),%rdi
20a3(5): call 0xfffff5ad(%rip)
20a8(4): lea 0x10(%r14),%rsi
20ac(4): lea 0x8(%r14),%rdi
20b0(5): call 0xc40(%rip)
20b5(4): lea 0x10(%r13),%rsi
20b9(4): lea 0x8(%r13),%rdi
20bd(5): call 0xc33(%rip)
20c2(3): mov %r12,%rdi
20c5(5): call 0x4aeb(%rip)
20ca(2): test %eax,%eax
20cc(6): jnz 0x70a(%rip)
20d2(3): mov %rbx,%rdi
20d5(5): call 0x4adb(%rip)
20da(2): test %eax,%eax
20dc(6): jnz 0x69b(%rip)
20e2(7): cmp $0x0,0x2090af(%rip)
20e9(6): jnz 0x66a(%rip)
20ef(7): cmp $0x0,0x2090a3(%rip)
20f6(6): jnz 0x65d(%rip)
20fc(2): xor %eax,%eax
20fe(8): mov 0x88(%rsp),%rbx
2106(9): xor $0x28,%rbx
210f(6): jnz 0x6fa(%rip)
2115(7): add $0x98,%rsp
211c(1): pop %rbx
211d(1): pop %rbp
211e(2): pop %r12
2120(2): pop %r13
2122(2): pop %r14
2124(2): pop %r15
2126(1): ret near (%rsp)
2127(9): nop 0x0(%rax,%rax,1)
2130(5): mov 0x70(%rsp),%rax
2135(5): mov 0x40(%rsp),%rcx
213a(7): mov 0x208ed7(%rip),%r9
2141(7): mov 0x208ed8(%rip),%r8
2148(3): mov (%rax),%rdx
214b(5): mov 0x50(%rsp),%rax
2150(5): mov 0xfffffff8(%rax,%rcx,8),%rax
2155(4): lea 0x28(%rdx),%rcx
2159(4): mov 0x18(%rdx),%rdx
215d(4): mov 0x18(%rax),%rdi
2161(4): lea 0x28(%rax),%rsi
2165(5): call 0xbdb(%rip)
216a(2): test %eax,%eax
216c(6): jnz 0x333(%rip)
2172(5): mov $0x1,%edx
2177(3): mov %r14,%rsi
217a(3): mov %r12,%rdi
217d(5): call 0x1463(%rip)
2182(2): test %al,%al
2184(2): jnz 0xffffffac(%rip)
2186(6): add $0x1,0x40(%rsp)
218c(5): mov $0x1,0x10(%rsp)
2191(2): jmp 0x49(%rip)
2193(5): nop 0x0(%rax,%rax,1)
2198(5): mov 0x70(%rsp),%rax
219d(5): mov 0x60(%rsp),%rdx
21a2(7): mov 0x208e6f(%rip),%r9
21a9(7): mov 0x208e70(%rip),%r8
21b0(5): mov 0xfffffff8(%rax,%rdx,8),%rdx
21b5(5): mov 0x50(%rsp),%rax
21ba(3): mov (%rax),%rax
21bd(4): lea 0x28(%rdx),%rcx
21c1(4): mov 0x18(%rdx),%rdx
21c5(4): mov 0x18(%rax),%rdi
21c9(4): lea 0x28(%rax),%rsi
21cd(5): call 0xb73(%rip)
21d2(2): test %eax,%eax
21d4(6): jnz 0x2c1(%rip)
21da(5): mov $0x2,%edx
21df(3): mov %r13,%rsi
21e2(3): mov %rbx,%rdi
21e5(5): call 0x13fb(%rip)
21ea(2): test %al,%al
21ec(2): jnz 0xffffffac(%rip)
21ee(6): add $0x1,0x60(%rsp)
21f4(5): mov $0x1,0x1f(%rsp)
21f9(7): cmp $0x0,0x208f9b(%rip)
2200(6): jnz 0x2a9(%rip)
2206(5): cmp $0x0,0x10(%rsp)
220b(6): jnz 0x26e(%rip)
2211(5): mov 0x50(%rsp),%rax
2216(5): mov 0x40(%rsp),%rdx
221b(5): lea 0xfffffff8(%rax,%rdx,8),%rdx
2220(3): mov (%rax),%rcx
2223(3): mov (%rdx),%rsi
2226(3): mov %rsi,(%rax)
2229(3): mov %rcx,(%rdx)
222c(9): mov $0x1,0x40(%rsp)
2235(5): cmp $0x0,0x1f(%rsp)
223a(6): jnz 0x24d(%rip)
2240(5): mov 0x70(%rsp),%rax
2245(5): mov 0x60(%rsp),%rdx
224a(5): lea 0xfffffff8(%rax,%rdx,8),%rdx
224f(3): mov (%rax),%rcx
2252(3): mov (%rdx),%rsi
2255(3): mov %rsi,(%rax)
2258(3): mov %rcx,(%rdx)
225b(9): mov $0x1,0x60(%rsp)
2264(5): mov 0x40(%rsp),%rax
2269(3): test %rax,%rax
226c(6): jz 0xfffffde8(%rip)
2272(6): cmp $0x0,0x60(%rsp)
2278(6): jz 0xfffffdde(%rip)
227e(5): mov 0x70(%rsp),%rax
2283(7): mov 0x208d8e(%rip),%r9
228a(7): mov 0x208d8f(%rip),%r8
2291(3): mov (%rax),%rdx
2294(5): mov 0x50(%rsp),%rax
2299(3): mov (%rax),%rax
229c(4): lea 0x28(%rdx),%rcx
22a0(4): mov 0x18(%rdx),%rdx
22a4(4): mov 0x18(%rax),%rdi
22a8(4): lea 0x28(%rax),%rsi
22ac(5): call 0xa94(%rip)
22b1(2): test %eax,%eax
22b3(6): js 0x17b(%rip)
22b9(6): jz 0xfffffeb9(%rip)
22bf(7): cmp $0x0,0x208ed6(%rip)
22c6(6): jnz 0x19a(%rip)
22cc(5): mov $0x2,%edx
22d1(3): mov %r13,%rsi
22d4(3): mov %rbx,%rdi
22d7(9): mov $0x0,0x60(%rsp)
22e0(5): call 0x1300(%rip)
22e5(5): mov 0x40(%rsp),%rax
22ea(7): mov $0x1,0x208ea9(%rip)
22f1(3): test %rax,%rax
22f4(6): jnz 0xffffff7e(%rip)
22fa(5): jmp 0xfffffd5a(%rip)
22ff(b): mov $0x0,0x208d0e(%rip)
230a(5): jmp 0xfffffc01(%rip)
230f(b): mov $0x0,0x208d06(%rip)
231a(5): jmp 0xfffffbe3(%rip)
231f(7): lea 0x208cfa(%rip),%rdi
2326(5): mov $0x1,%esi
232b(5): call 0x715(%rip)
2330(7): lea 0x208ce1(%rip),%rdi
2337(5): mov $0x1,%esi
233c(5): call 0x704(%rip)
2341(5): jmp 0xfffffbae(%rip)
2346(7): lea 0x208cd3(%rip),%rdi
234d(2): xor %esi,%esi
234f(5): call 0x6f1(%rip)
2354(7): lea 0x208cbd(%rip),%rdi
235b(2): xor %esi,%esi
235d(5): call 0x6e3(%rip)
2362(5): jmp 0xfffffb7f(%rip)
2367(7): lea 0x5bc6(%rip),%rsi
236e(3): mov %rbx,%rdi
2371(5): call 0x1a3f(%rip)
2376(3): mov %rax,%r12
2379(5): jmp 0xfffffbb7(%rip)
237e(2): xor %edx,%edx
2380(2): cmp $0x32,%al
2382(3): setz %dl
2385(3): mov %rdx,%rax
2388(8): add $0x1,0x80(%rsp,%rdx,4)
2390(3): add $0x1,%eax
2393(4): mov %eax,0x2c(%rsp)
2397(5): jmp 0xfffff749(%rip)
239c(3): test %rax,%rax
239f(6): jz 0x1a1(%rip)
23a5(8): movzx 0x208df0(%rip),%r15d
23ad(3): test %r15b,%r15b
23b0(6): jnz 0x2dd(%rip)
23b6(6): mov $0x1,%r15d
23bc(6): cmp $0x0,0x60(%rsp)
23c2(2): jz 0x9(%rip)
23c4(7): mov $0x1,0x208dcf(%rip)
23cb(5): lea 0x38(%rsp),%rbp
23d0(5): mov $0x1,%edx
23d5(3): mov %rbp,%rsi
23d8(3): mov %r12,%rdi
23db(5): call 0xe15(%rip)
23e0(2): test %al,%al
23e2(2): jz 0x18(%rip)
23e4(7): cmp $0x0,0x208db2(%rip)
23eb(6): jnz 0x2bb(%rip)
23f1(7): cmp $0x0,0x208da0(%rip)
23f8(2): jz 0xffffffd8(%rip)
23fa(7): movzx 0x208d9b(%rip),%eax
2401(2): test %al,%al
2403(2): jnz 0x7(%rip)
2405(3): test %r15b,%r15b
2408(2): jz 0xe(%rip)
240a(6): cmp $0x0,0x60(%rsp)
2410(6): jnz 0x143(%rip)
2416(5): mov 0x38(%rsp),%rdi
241b(3): test %rdi,%rdi
241e(6): jz 0xfffffc85(%rip)
2424(5): call 0x84c(%rip)
2429(5): jmp 0xfffffc75(%rip)
242e(7): cmp $0x0,0x208d68(%rip)
2435(6): jnz 0xf2(%rip)
243b(5): mov $0x1,%edx
2440(3): mov %r14,%rsi
2443(3): mov %r12,%rdi
2446(9): mov $0x0,0x40(%rsp)
244f(5): call 0x1191(%rip)
2454(7): mov $0x1,0x208d3f(%rip)
245b(5): jmp 0xfffffe09(%rip)
2460(5): mov 0x70(%rsp),%rax
2465(7): lea 0x208cb4(%rip),%rdi
246c(3): mov (%rax),%rsi
246f(5): call 0xb61(%rip)
2474(5): jmp 0xfffffe58(%rip)
2479(9): mov $0x0,0x40(%rsp)
2482(5): jmp 0xfffffdb3(%rip)
2487(9): mov $0x0,0x60(%rsp)
2490(5): jmp 0xfffffdd4(%rip)
2495(5): mov $0x0,0x1f(%rsp)
249a(5): jmp 0xfffffd5f(%rip)
249f(5): mov $0x0,0x10(%rsp)
24a4(5): jmp 0xfffffd36(%rip)
24a9(6): cmp $0x1,0x40(%rsp)
24af(9): mov $0x0,0x8(%rsp)
24b8(6): jz 0xfffffd4e(%rip)
24be(2): nop 
24c0(3): xor %r15d,%r15d
24c3(6): cmp $0x1,0x60(%rsp)
24c9(5): mov 0x8(%rsp),%rax
24ce(8): lea 0x0(,%rax,8),%rbp
24d6(2): jz 0x33(%rip)
24d8(8): nop 0x0(%rax,%rax,1)
24e0(5): mov 0x70(%rsp),%rdx
24e5(4): mov 0x0(%rdx,%r15,8),%rsi
24e9(5): mov 0x50(%rsp),%rdx
24ee(4): add $0x1,%r15
24f2(4): mov 0x0(%rdx,%rbp,1),%rdi
24f6(5): call 0xada(%rip)
24fb(5): mov 0x60(%rsp),%rax
2500(4): lea 0xffffffff(%rax),%rdx
2504(3): cmp %rdx,%r15
2507(2): jb 0xffffffd9(%rip)
2509(6): add $0x1,0x8(%rsp)
250f(5): mov 0x40(%rsp),%rax
2514(5): mov 0x8(%rsp),%rcx
2519(4): sub $0x1,%rax
251d(3): cmp %rax,%rcx
2520(2): jb 0xffffffa0(%rip)
2522(5): jmp 0xfffffce4(%rip)
2527(5): mov 0x50(%rsp),%rax
252c(7): lea 0x208bed(%rip),%rsi
2533(3): mov (%rax),%rdi
2536(5): call 0xa9a(%rip)
253b(5): jmp 0xffffff00(%rip)
2540(7): movzx 0x208c55(%rip),%eax
2547(6): cmp $0x0,0x60(%rsp)
254d(6): jz 0xfffffb51(%rip)
2553(2): test %al,%al
2555(6): jnz 0x11f(%rip)
255b(6): cmp $0x0,0x40(%rsp)
2561(6): jnz 0x107(%rip)
2567(5): lea 0x38(%rsp),%rbp
256c(7): lea 0x208bad(%rip),%r15
2573(5): mov $0x2,%edx
2578(3): mov %rbp,%rsi
257b(3): mov %rbx,%rdi
257e(5): call 0xc72(%rip)
2583(2): test %al,%al
2585(6): jz 0xfffffe91(%rip)
258b(7): cmp $0x0,0x208c0a(%rip)
2592(2): jnz 0x10(%rip)
2594(7): cmp $0x0,0x208bfe(%rip)
259b(2): jz 0xffffffd8(%rip)
259d(5): jmp 0xfffffe79(%rip)
25a2(5): mov 0x38(%rsp),%rsi
25a7(3): mov %r15,%rdi
25aa(5): call 0xa26(%rip)
25af(7): cmp $0x0,0x208be3(%rip)
25b6(2): jz 0xffffffbd(%rip)
25b8(7): cmp $0x0,0x208bdd(%rip)
25bf(2): jnz 0xffffffb4(%rip)
25c1(5): jmp 0xfffffe55(%rip)
25c6(7): lea 0x5967(%rip),%rsi
25cd(3): mov %rbx,%rdi
25d0(5): call 0x17e0(%rip)
25d5(3): mov %rax,%rbx
25d8(5): jmp 0xfffff986(%rip)
25dd(5): mov 0x50(%rsp),%rdx
25e2(3): test %rax,%rax
25e5(7): lea 0x208b34(%rip),%rsi
25ec(3): mov (%rdx),%rdi
25ef(2): jnz 0x6f(%rip)
25f1(5): call 0x9df(%rip)
25f6(6): cmp $0x0,0x40(%rsp)
25fc(b): mov $0x0,0x208bc9(%rip)
2607(b): mov $0x0,0x208bc6(%rip)
2612(2): jz 0x1b(%rip)
2614(5): mov $0x1,%edx
2619(3): mov %r14,%rsi
261c(3): mov %r12,%rdi
261f(9): mov $0x0,0x40(%rsp)
2628(5): call 0xfb8(%rip)
262d(6): cmp $0x0,0x60(%rsp)
2633(6): jz 0xfffffc31(%rip)
2639(5): mov $0x2,%edx
263e(3): mov %r13,%rsi
2641(3): mov %rbx,%rdi
2644(9): mov $0x0,0x60(%rsp)
264d(5): call 0xf93(%rip)
2652(5): jmp 0xfffffc12(%rip)
2657(7): lea 0x208ac2(%rip),%rdi
265e(5): mov 0x70(%rsp),%rax
2663(3): mov (%rax),%rsi
2666(2): jmp 0xffffff8b(%rip)
2668(7): mov $0x1,0x208b2b(%rip)
266f(5): jmp 0xfffffef8(%rip)
2674(5): mov 0x70(%rsp),%rax
2679(7): lea 0x208aa0(%rip),%rdi
2680(3): mov (%rax),%rsi
2683(5): call 0x94d(%rip)
2688(5): jmp 0xfffffed3(%rip)
268d(5): mov 0x50(%rsp),%rax
2692(7): lea 0x208a87(%rip),%rsi
2699(3): mov (%rax),%rdi
269c(5): call 0x934(%rip)
26a1(5): jmp 0xfffffd1b(%rip)
26a6(5): mov 0x38(%rsp),%rdi
26ab(7): lea 0x208a6e(%rip),%rsi
26b2(5): call 0x91e(%rip)
26b7(7): cmp $0x0,0x208ada(%rip)
26be(6): jz 0xfffffd12(%rip)
26c4(7): cmp $0x0,0x208ad2(%rip)
26cb(6): jnz 0xfffffd05(%rip)
26d1(5): jmp 0xfffffd29(%rip)
26d6(2): xor %edi,%edi
26d8(5): call 0xfe8(%rip)
26dd(3): xor %r15d,%r15d
26e0(3): test %rax,%rax
26e3(2): jnz 0xffffffaa(%rip)
26e5(7): movzx 0x208ab0(%rip),%eax
26ec(2): test %al,%al
26ee(6): jz 0xfffff9b0(%rip)
26f4(5): jmp 0xfffffd16(%rip)
26f9(7): mov 0x2089c0(%rip),%rdi
2700(5): call 0x3650(%rip)
2705(7): lea 0x5630(%rip),%rsi
270c(3): mov %rax,%rbx
270f(5): mov $0x5,%edx
2714(2): xor %edi,%edi
2716(5): call 0xffffefda(%rip)
271b(3): mov %rbx,%rcx
271e(3): mov %rax,%rdx
2721(2): xor %esi,%esi
2723(5): mov $0x1,%edi
2728(2): xor %eax,%eax
272a(5): call 0xfffff1c6(%rip)
272f(7): lea 0x55b2(%rip),%rsi
2736(5): mov $0x5,%edx
273b(2): xor %edi,%edi
273d(5): call 0xffffefb3(%rip)
2742(2): xor %esi,%esi
2744(3): mov %rax,%rdx
2747(5): mov $0x1,%edi
274c(2): xor %eax,%eax
274e(5): call 0xfffff1a2(%rip)
2753(7): lea 0x578e(%rip),%rsi
275a(5): mov $0x5,%edx
275f(2): xor %edi,%edi
2761(5): call 0xffffef8f(%rip)
2766(2): xor %esi,%esi
2768(3): mov %rax,%rdx
276b(5): mov $0x1,%edi
2770(2): xor %eax,%eax
2772(5): call 0xfffff17e(%rip)
2777(7): mov 0x208a3a(%rip),%rdx
277e(5): mov $0x3,%esi
2783(2): xor %edi,%edi
2785(5): call 0x33fb(%rip)
278a(3): mov %rax,%rbx
278d(5): call 0xffffeee3(%rip)
2792(2): mov (%rax),%esi
2794(7): lea 0x55b7(%rip),%rdx
279b(3): mov %rbx,%rcx
279e(5): mov $0x1,%edi
27a3(2): xor %eax,%eax
27a5(5): call 0xfffff14b(%rip)
27aa(7): lea 0x5567(%rip),%rsi
27b1(5): mov $0x5,%edx
27b6(2): xor %edi,%edi
27b8(5): call 0xffffef38(%rip)
27bd(3): mov %rax,%rbx
27c0(5): call 0xffffeeb0(%rip)
27c5(2): mov (%rax),%esi
27c7(3): mov %rbx,%rdx
27ca(5): mov $0x1,%edi
27cf(2): xor %eax,%eax
27d1(5): call 0xfffff11f(%rip)
27d6(7): mov 0x2089d3(%rip),%rdx
27dd(5): mov $0x3,%esi
27e2(2): xor %edi,%edi
27e4(5): call 0x339c(%rip)
27e9(3): mov %rax,%rbx
27ec(5): call 0xffffee84(%rip)
27f1(2): mov (%rax),%esi
27f3(7): lea 0x5558(%rip),%rdx
27fa(3): mov %rbx,%rcx
27fd(5): mov $0x1,%edi
2802(2): xor %eax,%eax
2804(5): call 0xfffff0ec(%rip)
2809(5): call 0xffffef17(%rip)
280e(3): mov %r12,%rdi
2811(5): call 0x353f(%rip)
2816(7): lea 0x5658(%rip),%rsi
281d(3): mov %rax,%rbx
2820(5): mov $0x5,%edx
2825(2): xor %edi,%edi
2827(5): call 0xffffeec9(%rip)
282c(3): mov %rbx,%rcx
282f(3): mov %rax,%rdx
2832(2): xor %esi,%esi
2834(5): mov $0x1,%edi
2839(2): xor %eax,%eax
283b(5): call 0xfffff0b5(%rip)
2840(7): mov 0x208971(%rip),%rdx
2847(5): mov $0x3,%esi
284c(2): xor %edi,%edi
284e(5): call 0x3332(%rip)
2853(3): mov %rax,%rbx
2856(5): call 0xffffee1a(%rip)
285b(2): mov (%rax),%esi
285d(7): lea 0x54ee(%rip),%rdx
2864(3): mov %rbx,%rcx
2867(5): mov $0x1,%edi
286c(2): xor %eax,%eax
286e(5): call 0xfffff082(%rip)
2873(7): mov 0x208936(%rip),%rdx
287a(5): mov $0x3,%esi
287f(2): xor %edi,%edi
2881(5): call 0x32ff(%rip)
2886(3): mov %rax,%rbx
2889(5): call 0xffffede7(%rip)
288e(2): mov (%rax),%esi
2890(7): lea 0x54bb(%rip),%rdx
2897(3): mov %rbx,%rcx
289a(5): mov $0x1,%edi
289f(2): xor %eax,%eax
28a1(5): call 0xfffff04f(%rip)
28a6(2): test %eax,%eax
28a8(2): jnz 0x4c(%rip)
28aa(7): lea 0x560e(%rip),%rsi
28b1(2): xor %edi,%edi
28b3(5): mov $0x5,%edx
28b8(5): call 0xffffee38(%rip)
28bd(2): xor %esi,%esi
28bf(3): mov %rax,%rdx
28c2(2): xor %edi,%edi
28c4(2): xor %eax,%eax
28c6(5): call 0xfffff02a(%rip)
28cb(5): jmp 0xfffff276(%rip)
28d0(7): lea 0x55b5(%rip),%rsi
28d7(5): mov $0x5,%edx
28dc(2): xor %edi,%edi
28de(5): call 0xffffee12(%rip)
28e3(2): xor %esi,%esi
28e5(3): mov %rax,%rdx
28e8(5): mov $0x1,%edi
28ed(2): xor %eax,%eax
28ef(5): call 0xfffff001(%rip)
28f4(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
28f9(5): call 0x3457(%rip)
28fe(7): lea 0x55ca(%rip),%rsi
2905(3): mov %rax,%rbx
2908(2): xor %edi,%edi
290a(5): mov $0x5,%edx
290f(5): call 0xffffede1(%rip)
2914(3): mov %rbx,%rcx
2917(3): mov %rax,%rdx
291a(2): xor %esi,%esi
291c(2): xor %edi,%edi
291e(2): xor %eax,%eax
2920(5): call 0xffffefd0(%rip)
2925(5): jmp 0xfffff21c(%rip)

"_start" :
2930(2): xor %ebp,%ebp
2932(3): mov %rdx,%r9
2935(1): pop %rsi
2936(3): mov %rsp,%rdx
2939(4): and $0xfffffff0,%rsp
293d(1): push %rax
293e(1): push %rsp
293f(7): lea 0x499a(%rip),%r8
2946(7): lea 0x4923(%rip),%rcx
294d(7): lea 0xfffff05c(%rip),%rdi
2954(6): call 0x208686(%rip)
295a(1): hlt 

"deregister_tm_clones" :
2960(7): lea 0x208739(%rip),%rdi
2967(1): push %rbp
2968(7): lea 0x208731(%rip),%rax
296f(3): cmp %rdi,%rax
2972(3): mov %rsp,%rbp
2975(2): jz 0x1b(%rip)
2977(7): mov 0x20865a(%rip),%rax
297e(3): test %rax,%rax
2981(2): jz 0xf(%rip)
2983(1): pop %rbp
2984(2): jmp %rax
2986(a): nop 0x0(%rax,%rax,1)
2990(1): pop %rbp
2991(1): ret near (%rsp)

"register_tm_clones" :
29a0(7): lea 0x2086f9(%rip),%rdi
29a7(7): lea 0x2086f2(%rip),%rsi
29ae(1): push %rbp
29af(3): sub %rdi,%rsi
29b2(3): mov %rsp,%rbp
29b5(4): sar $0x3,%rsi
29b9(3): mov %rsi,%rax
29bc(4): shr $0x3f,%rax
29c0(3): add %rax,%rsi
29c3(3): sar $0x1,%rsi
29c6(2): jz 0x1a(%rip)
29c8(7): mov 0x208621(%rip),%rax
29cf(3): test %rax,%rax
29d2(2): jz 0xe(%rip)
29d4(1): pop %rbp
29d5(2): jmp %rax
29d7(9): nop 0x0(%rax,%rax,1)
29e0(1): pop %rbp
29e1(1): ret near (%rsp)

"__do_global_dtors_aux" :
29f0(7): cmp $0x0,0x2086f1(%rip)
29f7(2): jnz 0x31(%rip)
29f9(8): cmp $0x0,0x2085f7(%rip)
2a01(1): push %rbp
2a02(3): mov %rsp,%rbp
2a05(2): jz 0xe(%rip)
2a07(7): mov 0x2085fa(%rip),%rdi
2a0e(5): call 0xffffef92(%rip)
2a13(5): call 0xffffff4d(%rip)
2a18(7): mov $0x1,0x2086c9(%rip)
2a1f(1): pop %rbp
2a20(1): ret near (%rsp)
2a21(7): nop 0x0(%rax)
2a28(2): REP ret near (%rsp)

"frame_dummy" :
2a30(1): push %rbp
2a31(3): mov %rsp,%rbp
2a34(1): pop %rbp
2a35(5): jmp 0xffffff6b(%rip)

"set_join_field" :
2a40(1): push %rbp
2a41(1): push %rbx
2a42(4): sub $0x8,%rsp
2a46(3): mov (%rdi),%rbx
2a49(4): cmp $0xffffffff,%rbx
2a4d(2): jz 0x7(%rip)
2a4f(3): cmp %rsi,%rbx
2a52(2): jnz 0xc(%rip)
2a54(3): mov %rsi,(%rdi)
2a57(4): add $0x8,%rsp
2a5b(1): pop %rbx
2a5c(1): pop %rbp
2a5d(1): ret near (%rsp)
2a5e(3): mov %rsi,%rbp
2a61(7): lea 0x48c0(%rip),%rsi
2a68(5): mov $0x5,%edx
2a6d(2): xor %edi,%edi
2a6f(5): call 0xffffec81(%rip)
2a74(4): lea 0x1(%rbx),%rcx
2a78(4): lea 0x1(%rbp),%r8
2a7c(3): mov %rax,%rdx
2a7f(2): xor %esi,%esi
2a81(5): mov $0x1,%edi
2a86(2): xor %eax,%eax
2a88(5): call 0xffffee68(%rip)
2a8d(3): nop (%rax)
2a90(1): push %rbx
2a91(7): lea 0x52c0(%rip),%r8
2a98(2): xor %esi,%esi
2a9a(5): mov $0xa,%edx
2a9f(3): mov %rdi,%rbx
2aa2(4): sub $0x10,%rsp
2aa6(3): mov %rsp,%rcx
2aa9(9): mov $0x28,%rax
2ab2(5): mov %rax,0x8(%rsp)
2ab7(2): xor %eax,%eax
2ab9(5): call 0x3cd7(%rip)
2abe(3): cmp $0x1,%eax
2ac1(2): jz 0x2f(%rip)
2ac3(2): test %eax,%eax
2ac5(2): jnz 0x34(%rip)
2ac7(4): mov (%rsp),%rax
2acb(3): test %rax,%rax
2ace(2): jz 0x2b(%rip)
2ad0(4): sub $0x1,%rax
2ad4(5): mov 0x8(%rsp),%rdx
2ad9(9): xor $0x28,%rdx
2ae2(2): jnz 0x49(%rip)
2ae4(4): add $0x10,%rsp
2ae8(1): pop %rbx
2ae9(1): ret near (%rsp)
2aea(6): nop 0x0(%rax,%rax,1)
2af0(7): mov $0xfffffffe,%rax
2af7(2): jmp 0xffffffdd(%rip)
2af9(3): mov %rbx,%rdi
2afc(5): call 0x3254(%rip)
2b01(7): lea 0x5234(%rip),%rsi
2b08(3): mov %rax,%rbx
2b0b(5): mov $0x5,%edx
2b10(2): xor %edi,%edi
2b12(5): call 0xffffebde(%rip)
2b17(3): mov %rbx,%rcx
2b1a(3): mov %rax,%rdx
2b1d(2): xor %esi,%esi
2b1f(5): mov $0x1,%edi
2b24(2): xor %eax,%eax
2b26(5): call 0xffffedca(%rip)
2b2b(5): call 0xffffebf5(%rip)

"string_to_join_field" :
2a90(1): push %rbx
2a91(7): lea 0x52c0(%rip),%r8
2a98(2): xor %esi,%esi
2a9a(5): mov $0xa,%edx
2a9f(3): mov %rdi,%rbx
2aa2(4): sub $0x10,%rsp
2aa6(3): mov %rsp,%rcx
2aa9(9): mov $0x28,%rax
2ab2(5): mov %rax,0x8(%rsp)
2ab7(2): xor %eax,%eax
2ab9(5): call 0x3cd7(%rip)
2abe(3): cmp $0x1,%eax
2ac1(2): jz 0x2f(%rip)
2ac3(2): test %eax,%eax
2ac5(2): jnz 0x34(%rip)
2ac7(4): mov (%rsp),%rax
2acb(3): test %rax,%rax
2ace(2): jz 0x2b(%rip)
2ad0(4): sub $0x1,%rax
2ad4(5): mov 0x8(%rsp),%rdx
2ad9(9): xor $0x28,%rdx
2ae2(2): jnz 0x49(%rip)
2ae4(4): add $0x10,%rsp
2ae8(1): pop %rbx
2ae9(1): ret near (%rsp)
2aea(6): nop 0x0(%rax,%rax,1)
2af0(7): mov $0xfffffffe,%rax
2af7(2): jmp 0xffffffdd(%rip)
2af9(3): mov %rbx,%rdi
2afc(5): call 0x3254(%rip)
2b01(7): lea 0x5234(%rip),%rsi
2b08(3): mov %rax,%rbx
2b0b(5): mov $0x5,%edx
2b10(2): xor %edi,%edi
2b12(5): call 0xffffebde(%rip)
2b17(3): mov %rbx,%rcx
2b1a(3): mov %rax,%rdx
2b1d(2): xor %esi,%esi
2b1f(5): mov $0x1,%edi
2b24(2): xor %eax,%eax
2b26(5): call 0xffffedca(%rip)
2b2b(5): call 0xffffebf5(%rip)

"add_field_list" :
2b30(2): push %r12
2b32(1): push %rbp
2b33(3): mov %rdi,%rbp
2b36(1): push %rbx
2b37(2): jmp 0x62(%rip)
2b39(7): nop 0x0(%rax)
2b40(6): jl 0x95(%rip)
2b46(2): cmp $0x32,%al
2b48(6): jnle 0x8d(%rip)
2b4e(4): cmp $0x2e,0x1(%rbp)
2b52(6): jnz 0xe7(%rip)
2b58(4): lea 0x2(%rbp),%rdi
2b5c(3): lea 0xffffffd0(%rax),%ebx
2b5f(5): call 0xffffff31(%rip)
2b64(3): mov %rax,%rbp
2b67(5): mov $0x18,%edi
2b6c(5): call 0x3834(%rip)
2b71(7): mov 0x2084b0(%rip),%rdx
2b78(3): test %r12,%r12
2b7b(2): mov %ebx,(%rax)
2b7d(4): mov %rbp,0x8(%rax)
2b81(8): mov $0x0,0x10(%rax)
2b89(7): mov %rax,0x208498(%rip)
2b90(4): mov %rax,0x10(%rdx)
2b94(2): jz 0x3c(%rip)
2b96(3): mov %r12,%rbp
2b99(7): lea 0x51b5(%rip),%rsi
2ba0(3): mov %rbp,%rdi
2ba3(3): xor %r12d,%r12d
2ba6(5): call 0xffffecda(%rip)
2bab(3): test %rax,%rax
2bae(2): jz 0x9(%rip)
2bb0(4): lea 0x1(%rax),%r12
2bb4(3): mov $0x0,(%rax)
2bb7(4): movsx 0x0(%rbp),%eax
2bbb(2): cmp $0x30,%al
2bbd(2): jnz 0xffffff83(%rip)
2bbf(4): cmp $0x0,0x1(%rbp)
2bc3(2): jnz 0x44(%rip)
2bc5(2): xor %ebp,%ebp
2bc7(2): xor %ebx,%ebx
2bc9(2): jmp 0xffffff9e(%rip)
2bcb(5): nop 0x0(%rax,%rax,1)
2bd0(1): pop %rbx
2bd1(1): pop %rbp
2bd2(2): pop %r12
2bd4(1): ret near (%rsp)
2bd5(3): mov %rbp,%rdi
2bd8(5): call 0x3178(%rip)
2bdd(7): lea 0x476c(%rip),%rsi
2be4(3): mov %rax,%rbx
2be7(5): mov $0x5,%edx
2bec(2): xor %edi,%edi
2bee(5): call 0xffffeb02(%rip)
2bf3(3): mov %rbx,%rcx
2bf6(3): mov %rax,%rdx
2bf9(2): xor %esi,%esi
2bfb(5): mov $0x1,%edi
2c00(2): xor %eax,%eax
2c02(5): call 0xffffecee(%rip)
2c07(3): mov %rbp,%rdi
2c0a(5): call 0x3146(%rip)
2c0f(7): lea 0x5143(%rip),%rsi
2c16(3): mov %rax,%rbx
2c19(5): mov $0x5,%edx
2c1e(2): xor %edi,%edi
2c20(5): call 0xffffead0(%rip)
2c25(3): mov %rbx,%rcx
2c28(3): mov %rax,%rdx
2c2b(2): xor %esi,%esi
2c2d(5): mov $0x1,%edi
2c32(2): xor %eax,%eax
2c34(5): call 0xffffecbc(%rip)
2c39(3): mov %rbp,%rdi
2c3c(5): call 0x3114(%rip)
2c41(7): lea 0x5111(%rip),%rsi
2c48(3): mov %rax,%rbx
2c4b(5): mov $0x5,%edx
2c50(2): xor %edi,%edi
2c52(5): call 0xffffea9e(%rip)
2c57(3): mov %rbx,%rcx
2c5a(3): mov %rax,%rdx
2c5d(2): xor %esi,%esi
2c5f(5): mov $0x1,%edi
2c64(2): xor %eax,%eax
2c66(5): call 0xffffec8a(%rip)
2c6b(5): nop 0x0(%rax,%rax,1)
2c70(1): push %rbx
2c71(3): mov %rdi,%rbx
2c74(4): mov 0x28(%rdi),%rdi
2c78(5): call 0xffffe9d8(%rip)
2c7d(4): mov 0x10(%rbx),%rdi
2c81(8): mov $0x0,0x28(%rbx)
2c89(5): call 0xffffe9c7(%rip)
2c8e(8): mov $0x0,0x10(%rbx)
2c96(1): pop %rbx
2c97(1): ret near (%rsp)

"freeline.part.2" :
2c70(1): push %rbx
2c71(3): mov %rdi,%rbx
2c74(4): mov 0x28(%rdi),%rdi
2c78(5): call 0xffffe9d8(%rip)
2c7d(4): mov 0x10(%rbx),%rdi
2c81(8): mov $0x0,0x28(%rbx)
2c89(5): call 0xffffe9c7(%rip)
2c8e(8): mov $0x0,0x10(%rbx)
2c96(1): pop %rbx
2c97(1): ret near (%rsp)

"free_spareline" :
2ca0(1): push %rbx
2ca1(7): mov 0x2084f8(%rip),%rbx
2ca8(3): test %rbx,%rbx
2cab(2): jz 0x12(%rip)
2cad(3): mov %rbx,%rdi
2cb0(5): call 0xffffffc0(%rip)
2cb5(3): mov %rbx,%rdi
2cb8(5): call 0xffffe998(%rip)
2cbd(7): mov 0x2084e4(%rip),%rbx
2cc4(3): test %rbx,%rbx
2cc7(2): jz 0x19(%rip)
2cc9(3): mov %rbx,%rdi
2ccc(5): call 0xffffffa4(%rip)
2cd1(3): mov %rbx,%rdi
2cd4(1): pop %rbx
2cd5(5): jmp 0xffffe97b(%rip)
2cda(6): nop 0x0(%rax,%rax,1)
2ce0(1): pop %rbx
2ce1(1): ret near (%rsp)

"delseq.isra.3" :
2cf0(2): push %r12
2cf2(1): push %rbp
2cf3(3): mov %rsi,%rbp
2cf6(1): push %rbx
2cf7(4): cmp $0x0,(%rdi)
2cfb(2): jz 0x36(%rip)
2cfd(3): mov %rdi,%r12
2d00(2): xor %ebx,%ebx
2d02(6): nop 0x0(%rax,%rax,1)
2d08(4): mov 0x0(%rbp),%rax
2d0c(4): mov 0x0(%rax,%rbx,8),%rdi
2d10(3): test %rdi,%rdi
2d13(2): jz 0xf(%rip)
2d15(5): call 0xffffff5b(%rip)
2d1a(4): mov 0x0(%rbp),%rax
2d1e(4): mov 0x0(%rax,%rbx,8),%rdi
2d22(5): call 0xffffe92e(%rip)
2d27(4): add $0x1,%rbx
2d2b(4): cmp (%r12),%rbx
2d2f(2): jb 0xffffffd9(%rip)
2d31(1): pop %rbx
2d32(4): mov 0x0(%rbp),%rdi
2d36(1): pop %rbp
2d37(2): pop %r12
2d39(5): jmp 0xffffe917(%rip)

"keycmp.isra.4" :
2d40(1): push %rbp
2d41(1): push %rbx
2d42(4): sub $0x8,%rsp
2d46(3): cmp %rdi,%r8
2d49(2): jnb 0x7f(%rip)
2d4b(4): shl/sal $0x4,%r8
2d4f(3): add (%rsi),%r8
2d52(3): cmp %rdx,%r9
2d55(4): mov 0x8(%r8),%rbp
2d59(6): jnb 0xa7(%rip)
2d5f(4): shl/sal $0x4,%r9
2d63(3): add (%rcx),%r9
2d66(3): test %rbp,%rbp
2d69(3): mov (%r9),%rsi
2d6c(4): mov 0x8(%r9),%rbx
2d70(2): jz 0x68(%rip)
2d72(3): test %rbx,%rbx
2d75(6): jz 0xce(%rip)
2d7b(7): cmp $0x0,0x20837f(%rip)
2d82(3): mov (%r8),%rdi
2d85(6): jnz 0x8b(%rip)
2d8b(7): cmp $0x0,0x20840c(%rip)
2d92(6): jnz 0x96(%rip)
2d98(3): cmp %rbx,%rbp
2d9b(3): mov %rbx,%rdx
2d9e(4): cmovbe %rbp,%rdx
2da2(5): call 0xffffea3e(%rip)
2da7(2): test %eax,%eax
2da9(2): jnz 0x49(%rip)
2dab(3): cmp %rbx,%rbp
2dae(6): jb 0x8e(%rip)
2db4(3): setnz %al
2db7(4): add $0x8,%rsp
2dbb(3): movzx %al,%eax
2dbe(1): pop %rbx
2dbf(1): pop %rbp
2dc0(1): ret near (%rsp)
2dc1(7): nop 0x0(%rax)
2dc8(3): cmp %rdx,%r9
2dcb(2): jnb 0x25(%rip)
2dcd(4): shl/sal $0x4,%r9
2dd1(3): add (%rcx),%r9
2dd4(4): mov 0x8(%r9),%rbx
2dd8(2): xor %eax,%eax
2dda(3): test %rbx,%rbx
2ddd(3): setnz %al
2de0(4): add $0x8,%rsp
2de4(2): neg %eax
2de6(1): pop %rbx
2de7(1): pop %rbp
2de8(1): ret near (%rsp)
2de9(7): nop 0x0(%rax)
2df0(2): xor %eax,%eax
2df2(4): add $0x8,%rsp
2df6(1): pop %rbx
2df7(1): pop %rbp
2df8(1): ret near (%rsp)
2df9(7): nop 0x0(%rax)
2e00(2): xor %eax,%eax
2e02(3): test %rbp,%rbp
2e05(3): setnz %al
2e08(4): add $0x8,%rsp
2e0c(1): pop %rbx
2e0d(1): pop %rbp
2e0e(1): ret near (%rsp)
2e0f(1): nop 
2e10(3): cmp %rbx,%rbp
2e13(3): mov %rbx,%rdx
2e16(4): cmovbe %rbp,%rdx
2e1a(5): call 0x11d6(%rip)
2e1f(2): jmp 0xffffff88(%rip)
2e21(7): nop 0x0(%rax)
2e28(4): add $0x8,%rsp
2e2c(3): mov %rbx,%rcx
2e2f(3): mov %rsi,%rdx
2e32(1): pop %rbx
2e33(3): mov %rbp,%rsi
2e36(1): pop %rbp
2e37(5): jmp 0x38b9(%rip)
2e3c(5): mov $0xffffffff,%eax
2e41(2): jmp 0xffffffb1(%rip)
2e43(5): mov $0x1,%eax
2e48(2): jmp 0xffffffaa(%rip)

"prfield.isra.5" :
2e50(3): cmp %rsi,%rdi
2e53(2): jnb 0x2d(%rip)
2e55(4): shl/sal $0x4,%rdi
2e59(3): add (%rdx),%rdi
2e5c(4): mov 0x8(%rdi),%rdx
2e60(3): test %rdx,%rdx
2e63(2): jz 0x1d(%rip)
2e65(7): mov 0x20823c(%rip),%rcx
2e6c(3): mov (%rdi),%rdi
2e6f(5): mov $0x1,%esi
2e74(5): jmp 0xffffea2c(%rip)
2e79(7): nop 0x0(%rax)
2e80(7): mov 0x208309(%rip),%rdi
2e87(3): test %rdi,%rdi
2e8a(2): jz 0x16(%rip)
2e8c(7): mov 0x208215(%rip),%rsi
2e93(5): jmp 0xffffe95d(%rip)
2e98(8): nop 0x0(%rax,%rax,1)
2ea0(2): REP ret near (%rsp)

"prfields" :
2eb0(2): push %r15
2eb2(2): push %r14
2eb4(3): mov %rdi,%r15
2eb7(2): push %r13
2eb9(2): push %r12
2ebb(3): mov %rdx,%r12
2ebe(1): push %rbp
2ebf(1): push %rbx
2ec0(4): sub $0x18,%rsp
2ec4(7): cmp $0x0,0x2082bd(%rip)
2ecb(5): mov %rsi,0x8(%rsp)
2ed0(2): jnz 0x6(%rip)
2ed2(4): mov 0x18(%rdi),%r12
2ed6(7): mov 0x208137(%rip),%r14d
2edd(5): mov $0x20,%eax
2ee2(3): test %r14d,%r14d
2ee5(4): cmovs %eax,%r14d
2ee9(5): mov 0x8(%rsp),%rax
2eee(3): mov %r14d,%ebp
2ef1(3): cmp %rax,%r12
2ef4(3): mov %rax,%r13
2ef7(4): cmovbe %r12,%r13
2efb(3): test %r13,%r13
2efe(2): jz 0x4b(%rip)
2f00(4): lea 0x28(%r15),%rax
2f04(2): xor %ebx,%ebx
2f06(4): movzx %r14b,%r14d
2f0a(4): mov %rax,(%rsp)
2f0e(2): nop 
2f10(7): mov 0x208191(%rip),%rdi
2f17(4): mov 0x28(%rdi),%rax
2f1b(4): cmp 0x30(%rdi),%rax
2f1f(6): jnb 0x89(%rip)
2f25(4): lea 0x1(%rax),%rdx
2f29(4): mov %rdx,0x28(%rdi)
2f2d(3): mov %bpl,(%rax)
2f30(4): mov 0x18(%r15),%rsi
2f34(4): mov (%rsp),%rdx
2f38(3): mov %rbx,%rdi
2f3b(4): add $0x1,%rbx
2f3f(5): call 0xffffff11(%rip)
2f44(3): cmp %r13,%rbx
2f47(2): jnz 0xffffffc9(%rip)
2f49(5): mov 0x8(%rsp),%rbx
2f4e(4): add $0x1,%rbx
2f52(3): cmp %rbx,%r12
2f55(2): jbe 0x3f(%rip)
2f57(4): lea 0x28(%r15),%r13
2f5b(4): movzx %bpl,%r14d
2f5f(1): nop 
2f60(7): mov 0x208141(%rip),%rdi
2f67(4): mov 0x28(%rdi),%rax
2f6b(4): cmp 0x30(%rdi),%rax
2f6f(2): jnb 0x49(%rip)
2f71(4): lea 0x1(%rax),%rdx
2f75(4): mov %rdx,0x28(%rdi)
2f79(3): mov %bpl,(%rax)
2f7c(4): mov 0x18(%r15),%rsi
2f80(3): mov %rbx,%rdi
2f83(3): mov %r13,%rdx
2f86(4): add $0x1,%rbx
2f8a(5): call 0xfffffec6(%rip)
2f8f(3): cmp %rbx,%r12
2f92(2): jnz 0xffffffce(%rip)
2f94(4): add $0x18,%rsp
2f98(1): pop %rbx
2f99(1): pop %rbp
2f9a(2): pop %r12
2f9c(2): pop %r13
2f9e(2): pop %r14
2fa0(2): pop %r15
2fa2(1): ret near (%rsp)
2fa3(5): nop 0x0(%rax,%rax,1)
2fa8(3): mov %r14d,%esi
2fab(5): call 0xffffe7b5(%rip)
2fb0(5): jmp 0xffffff80(%rip)
2fb5(3): nop (%rax)
2fb8(3): mov %r14d,%esi
2fbb(5): call 0xffffe7a5(%rip)
2fc0(2): jmp 0xffffffbc(%rip)

"prjoin" :
2fd0(2): push %r14
2fd2(2): push %r13
2fd4(5): mov $0x20,%eax
2fd9(2): push %r12
2fdb(7): mov 0x208032(%rip),%r12d
2fe2(3): mov %rsi,%r13
2fe5(1): push %rbp
2fe6(1): push %rbx
2fe7(3): mov %rdi,%rbp
2fea(7): mov 0x20817f(%rip),%rbx
2ff1(7): lea 0x208128(%rip),%r14
2ff8(3): test %r12d,%r12d
2ffb(4): cmovs %eax,%r12d
2fff(3): test %rbx,%rbx
3002(2): jz 0x6e(%rip)
3004(2): mov (%rbx),%eax
3006(2): test %eax,%eax
3008(2): jnz 0x55(%rip)
300a(3): cmp %r14,%rbp
300d(6): jz 0xe3(%rip)
3013(7): mov 0x208006(%rip),%rdi
301a(3): mov %rbp,%rax
301d(4): mov 0x18(%rax),%rsi
3021(4): lea 0x28(%rax),%rdx
3025(5): call 0xfffffe2b(%rip)
302a(4): mov 0x10(%rbx),%rbx
302e(3): test %rbx,%rbx
3031(6): jz 0x92(%rip)
3037(7): mov 0x20806a(%rip),%rdi
303e(4): mov 0x28(%rdi),%rax
3042(4): cmp 0x30(%rdi),%rax
3046(6): jnb 0xba(%rip)
304c(4): lea 0x1(%rax),%rdx
3050(4): mov %rdx,0x28(%rdi)
3054(3): mov %r12b,(%rax)
3057(2): mov (%rbx),%eax
3059(2): test %eax,%eax
305b(2): jz 0xffffffaf(%rip)
305d(3): cmp $0x1,%eax
3060(3): mov %rbp,%rax
3063(4): mov 0x8(%rbx),%rdi
3067(4): cmovne %r13,%rax
306b(2): jmp 0xffffffb2(%rip)
306d(3): nop (%rax)
3070(7): lea 0x2080a9(%rip),%rax
3077(3): cmp %rax,%rdi
307a(6): jz 0xa6(%rip)
3080(7): mov 0x207f99(%rip),%rdi
3087(3): mov %rbp,%rax
308a(4): mov 0x18(%rax),%rsi
308e(4): lea 0x28(%rax),%rdx
3092(5): call 0xfffffdbe(%rip)
3097(7): mov 0x2080e2(%rip),%rdx
309e(7): mov 0x207f7b(%rip),%rsi
30a5(3): mov %rbp,%rdi
30a8(5): call 0xfffffe08(%rip)
30ad(7): mov 0x2080c4(%rip),%rdx
30b4(7): mov 0x207f5d(%rip),%rsi
30bb(3): mov %r13,%rdi
30be(5): call 0xfffffdf2(%rip)
30c3(7): mov 0x207fde(%rip),%rdi
30ca(7): movzx 0x207f3f(%rip),%edx
30d1(4): mov 0x28(%rdi),%rax
30d5(4): cmp 0x30(%rdi),%rax
30d9(2): jnb 0x37(%rip)
30db(4): lea 0x1(%rax),%rcx
30df(4): mov %rcx,0x28(%rdi)
30e3(2): mov %dl,(%rax)
30e5(1): pop %rbx
30e6(1): pop %rbp
30e7(2): pop %r12
30e9(2): pop %r13
30eb(2): pop %r14
30ed(1): ret near (%rsp)
30ee(2): nop 
30f0(7): mov 0x207f21(%rip),%rdi
30f7(3): mov %r13,%rax
30fa(5): jmp 0xffffff23(%rip)
30ff(1): nop 
3100(4): movzx %r12b,%esi
3104(5): call 0xffffe65c(%rip)
3109(5): jmp 0xfffffefb(%rip)
310e(2): nop 
3110(1): pop %rbx
3111(1): pop %rbp
3112(2): pop %r12
3114(2): pop %r13
3116(2): pop %r14
3118(3): movzx %dl,%esi
311b(5): jmp 0xffffe645(%rip)
3120(7): mov 0x207ef1(%rip),%rdi
3127(3): mov %rsi,%rax
312a(5): jmp 0xffffff60(%rip)

"extract_field" :
3130(2): push %r12
3132(3): mov %rsi,%r12
3135(1): push %rbp
3136(1): push %rbx
3137(4): mov 0x18(%rdi),%rax
313b(3): mov %rdi,%rbx
313e(4): mov 0x20(%rdi),%rsi
3142(3): mov %rdx,%rbp
3145(4): mov 0x28(%rdi),%rdi
3149(3): cmp %rsi,%rax
314c(2): jnb 0x24(%rip)
314e(3): mov %rax,%rdx
3151(4): add $0x1,%rax
3155(4): shl/sal $0x4,%rdx
3159(3): add %rdx,%rdi
315c(3): mov %r12,(%rdi)
315f(4): mov %rbp,0x8(%rdi)
3163(4): mov %rax,0x18(%rbx)
3167(1): pop %rbx
3168(1): pop %rbp
3169(2): pop %r12
316b(1): ret near (%rsp)
316c(4): nop 0x0(%rax)
3170(3): test %rdi,%rdi
3173(2): jz 0x3d(%rip)
3175(a): mov $0x384307168202282324,%rax
317f(3): cmp %rax,%rsi
3182(2): jnbe 0x53(%rip)
3184(3): mov %rsi,%rax
3187(3): shr $0x1,%rax
318a(5): lea 0x1(%rsi,%rax,1),%rsi
318f(4): mov %rsi,0x20(%rbx)
3193(4): shl/sal $0x4,%rsi
3197(5): call 0x3269(%rip)
319c(3): mov %rax,%rdi
319f(4): mov %rax,0x28(%rbx)
31a3(4): mov 0x18(%rbx),%rax
31a7(2): jmp 0xffffffa7(%rip)
31a9(7): nop 0x0(%rax)
31b0(3): test %rsi,%rsi
31b3(5): mov $0x8,%eax
31b8(5): mov $0x10,%edx
31bd(4): cmove %rax,%rsi
31c1(3): mov %rdx,%rax
31c4(2): xor %ecx,%ecx
31c6(3): mul %rax,%rsi,%rdx
31c9(2): jo 0x11(%rip)
31cb(3): test %rax,%rax
31ce(2): js 0x7(%rip)
31d0(3): test %rcx,%rcx
31d3(2): jz 0xffffffbc(%rip)
31d5(5): call 0x341b(%rip)
31da(5): mov $0x1,%ecx
31df(2): jmp 0xffffffec(%rip)

"get_line" :
31f0(2): push %r15
31f2(2): push %r14
31f4(3): mov %rdi,%r14
31f7(2): push %r13
31f9(2): push %r12
31fb(7): lea 0x207fce(%rip),%r12
3202(1): push %rbp
3203(1): push %rbx
3204(3): lea 0xffffffff(%rdx),%ebx
3207(3): mov %rsi,%rbp
320a(3): movsxd %ebx,%rbx
320d(4): sub $0x18,%rsp
3211(3): mov (%rsi),%r13
3214(4): cmp %r13,0x0(%r12,%rbx,8)
3218(4): mov %edx,0xc(%rsp)
321c(6): jz 0x2e4(%rip)
3222(3): test %r13,%r13
3225(6): jz 0x2f9(%rip)
322b(8): mov $0x0,0x18(%r13)
3233(7): movsx 0x207dd6(%rip),%edx
323a(3): mov %r14,%rsi
323d(3): mov %r13,%rdi
3240(5): call 0xc80(%rip)
3245(3): test %rax,%rax
3248(6): jz 0x288(%rip)
324e(7): lea 0x207f6b(%rip),%rax
3255(4): mov 0x10(%r13),%r14
3259(5): add $0x1,0x0(%rax,%rbx,8)
325e(4): mov 0x8(%r13),%rax
3262(4): lea 0xffffffff(%rax),%r15
3266(4): lea 0x0(%r14,%r15,1),%rbp
326a(3): cmp %rbp,%r14
326d(6): jz 0xe4(%rip)
3273(6): mov 0x207d9b(%rip),%esi
3279(2): test %esi,%esi
327b(2): js 0xb(%rip)
327d(3): cmp $0xa,%esi
3280(6): jnz 0x223(%rip)
3286(2): test %esi,%esi
3288(6): jns 0xbb(%rip)
328e(5): call 0xffffe702(%rip)
3293(3): mov (%rax),%rdx
3296(3): mov %rax,%r15
3299(7): nop 0x0(%rax)
32a0(4): movzx (%r14),%edi
32a4(4): lea 0x1(%r14),%rax
32a8(4): test $0x1,0x0(%rdx,%rdi,2)
32ac(6): jnz 0x2b4(%rip)
32b2(4): cmp $0xa,%dil
32b6(6): jz 0x2aa(%rip)
32bc(3): cmp %rax,%rbp
32bf(6): jz 0x2b9(%rip)
32c5(5): movzx 0x1(%r14),%edi
32ca(4): test $0x1,0x0(%rdx,%rdi,2)
32ce(3): mov %rdi,%rsi
32d1(2): jnz 0x27(%rip)
32d3(4): cmp $0xa,%sil
32d7(2): jz 0x21(%rip)
32d9(4): add $0x1,%rax
32dd(3): cmp %rax,%rbp
32e0(6): jz 0x298(%rip)
32e6(3): movzx (%rax),%edi
32e9(4): test $0x1,0x0(%rdx,%rdi,2)
32ed(3): mov %rdi,%rsi
32f0(2): jz 0xffffffe3(%rip)
32f2(6): nop 0x0(%rax,%rax,1)
32f8(3): mov %rax,%rdx
32fb(3): mov %r14,%rsi
32fe(3): mov %r13,%rdi
3301(3): sub %r14,%rdx
3304(4): mov %rax,(%rsp)
3308(5): call 0xfffffe28(%rip)
330d(4): mov (%rsp),%rax
3311(4): lea 0x1(%rax),%r14
3315(3): cmp %r14,%rbp
3318(2): jz 0x28(%rip)
331a(4): movzx 0x1(%rax),%esi
331e(3): mov (%r15),%rdx
3321(4): test $0x1,0x0(%rdx,%rsi,2)
3325(3): mov %rsi,%rax
3328(6): jnz 0x218(%rip)
332e(2): cmp $0xa,%al
3330(6): jz 0x210(%rip)
3336(4): lea 0x1(%r14),%rax
333a(2): jmp 0xffffff82(%rip)
333c(4): nop 0x0(%rax)
3340(3): xor %r15d,%r15d
3343(3): mov %r15,%rdx
3346(3): mov %r14,%rsi
3349(3): mov %r13,%rdi
334c(5): call 0xfffffde4(%rip)
3351(4): mov 0x0(%r12,%rbx,8),%rax
3355(3): test %rax,%rax
3358(6): jz 0x108(%rip)
335e(6): mov 0x207dec(%rip),%edx
3364(3): cmp $0x2,%edx
3367(6): jz 0xf9(%rip)
336d(3): cmp $0x1,%edx
3370(2): jz 0xf(%rip)
3372(7): cmp $0x0,0x207e21(%rip)
3379(6): jz 0xe7(%rip)
337f(7): lea 0x207e12(%rip),%rbp
3386(5): cmp $0x0,0x0(%rbp,%rbx,1)
338b(6): jnz 0xd5(%rip)
3391(5): cmp $0x1,0xc(%rsp)
3396(7): mov 0x207c83(%rip),%r8
339d(4): lea 0x28(%r13),%rcx
33a1(8): cmovne 0x207c6f(%rip),%r8
33a9(4): mov 0x18(%r13),%rdx
33ad(4): lea 0x28(%rax),%rsi
33b1(4): mov 0x18(%rax),%rdi
33b5(3): mov %r8,%r9
33b8(5): call 0xfffff988(%rip)
33bd(2): test %eax,%eax
33bf(6): jle 0xa1(%rip)
33c5(4): mov 0x8(%r13),%rax
33c9(3): xor %r9d,%r9d
33cc(4): mov 0x10(%r13),%r14
33d0(3): test %rax,%rax
33d3(2): jz 0x24(%rip)
33d5(6): cmp $0xa,0xffffffff(%r14,%rax,1)
33db(4): lea 0xffffffff(%rax),%rdx
33df(6): jz 0x1af(%rip)
33e5(6): cmp $0x7fffffff,%rax
33eb(5): mov $0x7fffffff,%edx
33f0(4): cmovbe %rax,%rdx
33f4(3): mov %rdx,%r9
33f7(7): lea 0x207dc2(%rip),%rax
33fe(7): lea 0x497b(%rip),%rsi
3405(2): xor %edi,%edi
3407(5): mov $0x5,%edx
340c(5): mov %r9d,0xc(%rsp)
3411(4): mov 0x0(%rax,%rbx,8),%r15
3415(7): lea 0x207d94(%rip),%rax
341c(4): mov 0x0(%rax,%rbx,8),%rcx
3420(4): mov %rcx,(%rsp)
3424(5): call 0xffffe2cc(%rip)
3429(2): xor %edi,%edi
342b(7): cmp $0x1,0x207d1e(%rip)
3432(3): mov %rax,%rdx
3435(3): mov %r15,%r8
3438(4): setz %dil
343c(4): sub $0x8,%rsp
3440(2): xor %eax,%eax
3442(2): push %r14
3444(5): mov 0x1c(%rsp),%r9d
3449(2): xor %esi,%esi
344b(5): mov 0x10(%rsp),%rcx
3450(5): call 0xffffe4a0(%rip)
3455(5): mov $0x1,0x0(%rbp,%rbx,1)
345a(1): pop %rax
345b(1): pop %rdx
345c(4): nop 0x0(%rax)
3460(4): mov %r13,0x0(%r12,%rbx,8)
3464(5): mov $0x1,%eax
3469(4): add $0x18,%rsp
346d(1): pop %rbx
346e(1): pop %rbp
346f(2): pop %r12
3471(2): pop %r13
3473(2): pop %r14
3475(2): pop %r15
3477(1): ret near (%rsp)
3478(8): nop 0x0(%rax,%rax,1)
3480(3): mov %rax,%rdx
3483(3): mov %r14,%rsi
3486(3): mov %r13,%rdi
3489(3): sub %r14,%rdx
348c(4): mov %rax,(%rsp)
3490(5): call 0xfffffca0(%rip)
3495(4): mov (%rsp),%rax
3499(6): mov 0x207b75(%rip),%esi
349f(4): lea 0x1(%rax),%r14
34a3(3): mov %rbp,%r15
34a6(3): mov %r14,%rdi
34a9(3): sub %r14,%r15
34ac(3): mov %r15,%rdx
34af(5): call 0xffffe321(%rip)
34b4(3): test %rax,%rax
34b7(2): jnz 0xffffffc9(%rip)
34b9(3): mov %r15,%rdx
34bc(3): mov %r14,%rsi
34bf(3): mov %r13,%rdi
34c2(5): call 0xfffffc6e(%rip)
34c7(5): jmp 0xfffffe8a(%rip)
34cc(4): nop 0x0(%rax)
34d0(4): test $0x20,(%r14)
34d4(6): jnz 0xd2(%rip)
34da(2): xor %eax,%eax
34dc(3): test %r13,%r13
34df(2): jz 0xffffff8a(%rip)
34e1(3): mov %r13,%rdi
34e4(3): mov %al,(%rsp)
34e7(5): call 0xfffff789(%rip)
34ec(4): movzx (%rsp),%eax
34f0(4): add $0x18,%rsp
34f4(1): pop %rbx
34f5(1): pop %rbp
34f6(2): pop %r12
34f8(2): pop %r13
34fa(2): pop %r14
34fc(2): pop %r15
34fe(1): ret near (%rsp)
34ff(1): nop 
3500(7): lea 0x207c99(%rip),%rdx
3507(4): mov 0x0(%rdx,%rbx,8),%rax
350b(4): mov %r13,0x0(%rdx,%rbx,8)
350f(3): mov %rax,%r13
3512(3): mov %rax,(%rsi)
3515(3): test %r13,%r13
3518(6): jnz 0xfffffd13(%rip)
351e(5): mov $0x30,%esi
3523(5): mov $0x1,%edi
3528(5): call 0x3048(%rip)
352d(3): mov %rax,%r13
3530(4): mov %rax,0x0(%rbp)
3534(5): jmp 0xfffffcff(%rip)
3539(7): nop 0x0(%rax)
3540(4): add $0x1,%r14
3544(3): cmp %r14,%rbp
3547(6): jz 0xfffffdf9(%rip)
354d(4): movzx (%r14),%esi
3551(4): test $0x1,0x0(%rdx,%rsi,2)
3555(3): mov %rsi,%rax
3558(6): jz 0xfffffdd6(%rip)
355e(2): jmp 0xffffffe2(%rip)
3560(3): cmp %rax,%rbp
3563(3): mov %rax,%r14
3566(6): jnz 0xfffffd3a(%rip)
356c(5): jmp 0xfffffde5(%rip)
3571(7): nop 0x0(%rax)
3578(3): sub %r14,%rax
357b(3): mov %r14,%rsi
357e(3): mov %r13,%rdi
3581(3): mov %rax,%rdx
3584(5): call 0xfffffbac(%rip)
3589(5): jmp 0xfffffdc8(%rip)
358e(7): cmp $0x7fffffff,%rdx
3595(5): mov $0x7fffffff,%eax
359a(4): cmovbe %rdx,%rax
359e(3): mov %rax,%r9
35a1(5): jmp 0xfffffe56(%rip)
35a6(7): lea 0x47c8(%rip),%rsi
35ad(5): mov $0x5,%edx
35b2(2): xor %edi,%edi
35b4(5): call 0xffffe13c(%rip)
35b9(3): mov %rax,%rbx
35bc(5): call 0xffffe0b4(%rip)
35c1(2): mov (%rax),%esi
35c3(3): mov %rbx,%rdx
35c6(5): mov $0x1,%edi
35cb(2): xor %eax,%eax
35cd(5): call 0xffffe323(%rip)
35d2(4): nop 0x0(%rax)
35d6(a): nop 0x0(%rax,%rax,1)
35e0(2): push %r12
35e2(1): push %rbp
35e3(3): mov %edx,%r12d
35e6(1): push %rbx
35e7(3): mov %rsi,%rbx
35ea(3): mov (%rsi),%rsi
35ed(4): cmp 0x8(%rbx),%rsi
35f1(3): mov %rdi,%rbp
35f4(4): mov 0x10(%rbx),%rdi
35f8(2): jz 0x28(%rip)
35fa(4): lea 0x0(%rdi,%rsi,8),%rsi
35fe(3): mov %r12d,%edx
3601(3): mov %rbp,%rdi
3604(5): call 0xfffffbec(%rip)
3609(2): test %al,%al
360b(2): jz 0x6(%rip)
360d(4): add $0x1,(%rbx)
3611(1): pop %rbx
3612(1): pop %rbp
3613(2): pop %r12
3615(1): ret near (%rsp)
3616(a): nop 0x0(%rax,%rax,1)
3620(3): test %rdi,%rdi
3623(2): jz 0x65(%rip)
3625(a): mov $0x768614336404564649,%rax
362f(3): cmp %rax,%rsi
3632(2): jnbe 0x7b(%rip)
3634(3): mov %rsi,%rax
3637(3): shr $0x1,%rax
363a(5): lea 0x1(%rsi,%rax,1),%rsi
363f(4): mov %rsi,0x8(%rbx)
3643(4): shl/sal $0x3,%rsi
3647(5): call 0x2db9(%rip)
364c(3): mov (%rbx),%rsi
364f(4): mov 0x8(%rbx),%rdx
3653(3): mov %rax,%rdi
3656(4): mov %rax,0x10(%rbx)
365a(3): cmp %rdx,%rsi
365d(2): jnb 0xffffff9d(%rip)
365f(4): lea 0x0(%rax,%rsi,8),%rax
3663(4): lea 0x0(%rdi,%rdx,8),%rdx
3667(9): nop 0x0(%rax,%rax,1)
3670(7): mov $0x0,(%rax)
3677(4): add $0x8,%rax
367b(3): cmp %rdx,%rax
367e(2): jnz 0xfffffff2(%rip)
3680(5): jmp 0xffffff7a(%rip)
3685(3): nop (%rax)
3688(3): test %rsi,%rsi
368b(5): mov $0x10,%eax
3690(5): mov $0x8,%edx
3695(4): cmove %rax,%rsi
3699(3): mov %rdx,%rax
369c(2): xor %ecx,%ecx
369e(3): mul %rax,%rsi,%rdx
36a1(2): jo 0x11(%rip)
36a3(3): test %rax,%rax
36a6(2): js 0x7(%rip)
36a8(3): test %rcx,%rcx
36ab(2): jz 0xffffff94(%rip)
36ad(5): call 0x2f43(%rip)
36b2(5): mov $0x1,%ecx
36b7(2): jmp 0xffffffec(%rip)

"getseq" :
35e0(2): push %r12
35e2(1): push %rbp
35e3(3): mov %edx,%r12d
35e6(1): push %rbx
35e7(3): mov %rsi,%rbx
35ea(3): mov (%rsi),%rsi
35ed(4): cmp 0x8(%rbx),%rsi
35f1(3): mov %rdi,%rbp
35f4(4): mov 0x10(%rbx),%rdi
35f8(2): jz 0x28(%rip)
35fa(4): lea 0x0(%rdi,%rsi,8),%rsi
35fe(3): mov %r12d,%edx
3601(3): mov %rbp,%rdi
3604(5): call 0xfffffbec(%rip)
3609(2): test %al,%al
360b(2): jz 0x6(%rip)
360d(4): add $0x1,(%rbx)
3611(1): pop %rbx
3612(1): pop %rbp
3613(2): pop %r12
3615(1): ret near (%rsp)
3616(a): nop 0x0(%rax,%rax,1)
3620(3): test %rdi,%rdi
3623(2): jz 0x65(%rip)
3625(a): mov $0x768614336404564649,%rax
362f(3): cmp %rax,%rsi
3632(2): jnbe 0x7b(%rip)
3634(3): mov %rsi,%rax
3637(3): shr $0x1,%rax
363a(5): lea 0x1(%rsi,%rax,1),%rsi
363f(4): mov %rsi,0x8(%rbx)
3643(4): shl/sal $0x3,%rsi
3647(5): call 0x2db9(%rip)
364c(3): mov (%rbx),%rsi
364f(4): mov 0x8(%rbx),%rdx
3653(3): mov %rax,%rdi
3656(4): mov %rax,0x10(%rbx)
365a(3): cmp %rdx,%rsi
365d(2): jnb 0xffffff9d(%rip)
365f(4): lea 0x0(%rax,%rsi,8),%rax
3663(4): lea 0x0(%rdi,%rdx,8),%rdx
3667(9): nop 0x0(%rax,%rax,1)
3670(7): mov $0x0,(%rax)
3677(4): add $0x8,%rax
367b(3): cmp %rdx,%rax
367e(2): jnz 0xfffffff2(%rip)
3680(5): jmp 0xffffff7a(%rip)
3685(3): nop (%rax)
3688(3): test %rsi,%rsi
368b(5): mov $0x10,%eax
3690(5): mov $0x8,%edx
3695(4): cmove %rax,%rsi
3699(3): mov %rdx,%rax
369c(2): xor %ecx,%ecx
369e(3): mul %rax,%rsi,%rdx
36a1(2): jo 0x11(%rip)
36a3(3): test %rax,%rax
36a6(2): js 0x7(%rip)
36a8(3): test %rcx,%rcx
36ab(2): jz 0xffffff94(%rip)
36ad(5): call 0x2f43(%rip)
36b2(5): mov $0x1,%ecx
36b7(2): jmp 0xffffffec(%rip)

"usage" :
36c0(2): push %r13
36c2(2): push %r12
36c4(5): mov $0x5,%edx
36c9(1): push %rbp
36ca(1): push %rbx
36cb(2): mov %edi,%ebp
36cd(7): sub $0x88,%rsp
36d4(7): mov 0x207b15(%rip),%rbx
36db(9): mov $0x28,%rax
36e4(5): mov %rax,0x78(%rsp)
36e9(2): xor %eax,%eax
36eb(2): test %edi,%edi
36ed(2): jz 0x30(%rip)
36ef(7): lea 0x3c82(%rip),%rsi
36f6(2): xor %edi,%edi
36f8(5): call 0xffffdff8(%rip)
36fd(7): mov 0x2079dc(%rip),%rdi
3704(3): mov %rax,%rdx
3707(3): mov %rbx,%rcx
370a(5): mov $0x1,%esi
370f(2): xor %eax,%eax
3711(5): call 0xffffe24f(%rip)
3716(2): mov %ebp,%edi
3718(5): call 0xffffe228(%rip)
371d(7): lea 0x3c7c(%rip),%rsi
3724(2): xor %edi,%edi
3726(5): call 0xffffdfca(%rip)
372b(3): mov %rbx,%rdx
372e(3): mov %rax,%rsi
3731(5): mov $0x1,%edi
3736(2): xor %eax,%eax
3738(5): call 0xffffe1a8(%rip)
373d(7): mov 0x207964(%rip),%rbx
3744(7): lea 0x3c7d(%rip),%rsi
374b(5): mov $0x5,%edx
3750(2): xor %edi,%edi
3752(5): call 0xffffdf9e(%rip)
3757(3): mov %rbx,%rsi
375a(3): mov %rax,%rdi
375d(5): call 0xffffe093(%rip)
3762(7): mov 0x20793f(%rip),%rbx
3769(7): lea 0x3cf0(%rip),%rsi
3770(5): mov $0x5,%edx
3775(2): xor %edi,%edi
3777(5): call 0xffffdf79(%rip)
377c(3): mov %rbx,%rsi
377f(3): mov %rax,%rdi
3782(5): call 0xffffe06e(%rip)
3787(7): mov 0x20791a(%rip),%rbx
378e(7): lea 0x3d0b(%rip),%rsi
3795(5): mov $0x5,%edx
379a(2): xor %edi,%edi
379c(5): call 0xffffdf54(%rip)
37a1(3): mov %rbx,%rsi
37a4(3): mov %rax,%rdi
37a7(5): call 0xffffe049(%rip)
37ac(7): mov 0x2078f5(%rip),%rbx
37b3(7): lea 0x3db6(%rip),%rsi
37ba(5): mov $0x5,%edx
37bf(2): xor %edi,%edi
37c1(5): call 0xffffdf2f(%rip)
37c6(3): mov %rbx,%rsi
37c9(3): mov %rax,%rdi
37cc(5): call 0xffffe024(%rip)
37d1(7): mov 0x2078d0(%rip),%rbx
37d8(7): lea 0x3e91(%rip),%rsi
37df(5): mov $0x5,%edx
37e4(2): xor %edi,%edi
37e6(5): call 0xffffdf0a(%rip)
37eb(3): mov %rbx,%rsi
37ee(3): mov %rax,%rdi
37f1(5): call 0xffffdfff(%rip)
37f6(7): mov 0x2078ab(%rip),%rbx
37fd(7): lea 0x405c(%rip),%rsi
3804(5): mov $0x5,%edx
3809(2): xor %edi,%edi
380b(5): call 0xffffdee5(%rip)
3810(3): mov %rbx,%rsi
3813(3): mov %rax,%rdi
3816(5): call 0xffffdfda(%rip)
381b(7): mov 0x207886(%rip),%rbx
3822(7): lea 0x4077(%rip),%rsi
3829(5): mov $0x5,%edx
382e(2): xor %edi,%edi
3830(5): call 0xffffdec0(%rip)
3835(3): mov %rbx,%rsi
3838(3): mov %rax,%rdi
383b(5): call 0xffffdfb5(%rip)
3840(7): mov 0x207861(%rip),%rbx
3847(7): lea 0x4082(%rip),%rsi
384e(5): mov $0x5,%edx
3853(2): xor %edi,%edi
3855(5): call 0xffffde9b(%rip)
385a(3): mov %rbx,%rsi
385d(3): mov %rax,%rdi
3860(5): call 0xffffdf90(%rip)
3865(7): mov 0x20783c(%rip),%rbx
386c(7): lea 0x4095(%rip),%rsi
3873(5): mov $0x5,%edx
3878(2): xor %edi,%edi
387a(5): call 0xffffde76(%rip)
387f(3): mov %rbx,%rsi
3882(3): mov %rax,%rdi
3885(7): lea 0x4510(%rip),%rbx
388c(5): call 0xffffdf64(%rip)
3891(7): lea 0x4509(%rip),%rax
3898(7): lea 0x4543(%rip),%rcx
389f(9): mov $0x0,0x60(%rsp)
38a8(9): mov $0x0,0x68(%rsp)
38b1(3): mov %rsp,%rdx
38b4(4): mov %rax,(%rsp)
38b8(7): lea 0x44e4(%rip),%rax
38bf(5): mov %rcx,0x30(%rsp)
38c4(7): lea 0x4521(%rip),%rcx
38cb(5): mov %rax,0x8(%rsp)
38d0(7): lea 0x4544(%rip),%rax
38d7(5): mov %rcx,0x40(%rsp)
38dc(7): lea 0x4513(%rip),%rcx
38e3(5): mov %rax,0x10(%rsp)
38e8(7): lea 0x44c4(%rip),%rax
38ef(5): mov %rcx,0x50(%rsp)
38f4(5): mov %rax,0x18(%rsp)
38f9(7): lea 0x44c9(%rip),%rax
3900(5): mov %rax,0x20(%rsp)
3905(7): lea 0x44c7(%rip),%rax
390c(5): mov %rax,0x28(%rsp)
3911(5): mov %rax,0x38(%rsp)
3916(5): mov %rax,0x48(%rsp)
391b(5): mov %rax,0x58(%rsp)
3920(4): add $0x10,%rdx
3924(3): mov (%rdx),%rdi
3927(3): test %rdi,%rdi
392a(2): jz 0x15(%rip)
392c(5): mov $0x5,%ecx
3931(3): mov %rbx,%rsi
3934(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3936(3): setnbe %al
3939(2): sbb $0x0,%al
393b(2): test %al,%al
393d(2): jnz 0xffffffe3(%rip)
393f(4): mov 0x8(%rdx),%r12
3943(2): xor %edi,%edi
3945(5): mov $0x5,%edx
394a(7): lea 0x44af(%rip),%rsi
3951(3): test %r12,%r12
3954(6): jz 0xc7(%rip)
395a(5): call 0xffffdd96(%rip)
395f(7): lea 0x42da(%rip),%rcx
3966(7): lea 0x44aa(%rip),%rdx
396d(3): mov %rax,%rsi
3970(5): mov $0x1,%edi
3975(2): xor %eax,%eax
3977(5): call 0xffffdf69(%rip)
397c(2): xor %esi,%esi
397e(5): mov $0x5,%edi
3983(5): call 0xffffdf4d(%rip)
3988(3): test %rax,%rax
398b(2): jz 0x1e(%rip)
398d(7): lea 0x4491(%rip),%rsi
3994(5): mov $0x3,%edx
3999(3): mov %rax,%rdi
399c(5): call 0xffffdce4(%rip)
39a1(2): test %eax,%eax
39a3(6): jnz 0x10d(%rip)
39a9(7): lea 0x4479(%rip),%rsi
39b0(2): xor %edi,%edi
39b2(5): mov $0x5,%edx
39b7(5): call 0xffffdd39(%rip)
39bc(7): lea 0x43d9(%rip),%rcx
39c3(7): lea 0x4276(%rip),%rdx
39ca(3): mov %rax,%rsi
39cd(5): mov $0x1,%edi
39d2(2): xor %eax,%eax
39d4(5): call 0xffffdf0c(%rip)
39d9(3): cmp %rbx,%r12
39dc(7): lea 0x43da(%rip),%rcx
39e3(7): lea 0x436e(%rip),%rbx
39ea(4): cmove %rcx,%rbx
39ee(7): lea 0x42bb(%rip),%rsi
39f5(2): xor %edi,%edi
39f7(5): mov $0x5,%edx
39fc(5): call 0xffffdcf4(%rip)
3a01(3): mov %rbx,%rcx
3a04(3): mov %rax,%rsi
3a07(3): mov %r12,%rdx
3a0a(5): mov $0x1,%edi
3a0f(2): xor %eax,%eax
3a11(5): call 0xffffdecf(%rip)
3a16(5): jmp 0xfffffd00(%rip)
3a1b(5): call 0xffffdcd5(%rip)
3a20(7): lea 0x4219(%rip),%rcx
3a27(7): lea 0x43e9(%rip),%rdx
3a2e(3): mov %rax,%rsi
3a31(5): mov $0x1,%edi
3a36(2): xor %eax,%eax
3a38(5): call 0xffffdea8(%rip)
3a3d(2): xor %esi,%esi
3a3f(5): mov $0x5,%edi
3a44(5): call 0xffffde8c(%rip)
3a49(3): test %rax,%rax
3a4c(2): jz 0x1a(%rip)
3a4e(7): lea 0x43d0(%rip),%rsi
3a55(5): mov $0x3,%edx
3a5a(3): mov %rax,%rdi
3a5d(5): call 0xffffdc23(%rip)
3a62(2): test %eax,%eax
3a64(2): jnz 0x45(%rip)
3a66(7): lea 0x43bc(%rip),%rsi
3a6d(5): mov $0x5,%edx
3a72(2): xor %edi,%edi
3a74(7): lea 0x4321(%rip),%r12
3a7b(7): lea 0x433b(%rip),%rbx
3a82(5): call 0xffffdc6e(%rip)
3a87(7): lea 0x430e(%rip),%rcx
3a8e(7): lea 0x41ab(%rip),%rdx
3a95(3): mov %rax,%rsi
3a98(5): mov $0x1,%edi
3a9d(2): xor %eax,%eax
3a9f(5): call 0xffffde41(%rip)
3aa4(5): jmp 0xffffff4a(%rip)
3aa9(7): lea 0x42ec(%rip),%r12
3ab0(7): mov 0x2075f1(%rip),%r13
3ab7(7): lea 0x41aa(%rip),%rsi
3abe(2): xor %edi,%edi
3ac0(5): mov $0x5,%edx
3ac5(5): call 0xffffdc2b(%rip)
3aca(3): mov %r13,%rsi
3acd(3): mov %rax,%rdi
3ad0(5): call 0xffffdd20(%rip)
3ad5(5): jmp 0xfffffed4(%rip)

"add_file_name.constprop.7" :
3ae0(2): push %r14
3ae2(2): push %r13
3ae4(3): mov %rdi,%r13
3ae7(2): push %r12
3ae9(1): push %rbp
3aea(3): mov %rsi,%rbp
3aed(1): push %rbx
3aee(4): sub $0x20,%rsp
3af2(2): mov (%rcx),%ebx
3af4(3): cmp $0x2,%ebx
3af7(2): jz 0x49(%rip)
3af9(3): movsxd %ebx,%rax
3afc(7): lea 0x2076ad(%rip),%r12
3b03(3): add $0x1,%ebx
3b06(8): lea 0x0(,%rax,4),%rdx
3b0e(4): shl/sal $0x3,%rax
3b12(3): mov (%r8),%esi
3b15(4): mov %esi,0x0(%rbp,%rdx,1)
3b19(4): mov %r13,0x0(%r12,%rax,1)
3b1d(2): mov %ebx,(%rcx)
3b1f(4): cmp $0x3,(%r8)
3b23(2): jnz 0x9(%rip)
3b25(7): mov $0x3,(%r9)
3b2c(4): add $0x20,%rsp
3b30(1): pop %rbx
3b31(1): pop %rbp
3b32(2): pop %r12
3b34(2): pop %r13
3b36(2): pop %r14
3b38(1): ret near (%rsp)
3b39(7): nop 0x0(%rax)
3b40(3): mov (%rsi),%r14d
3b43(2): xor %eax,%eax
3b45(7): lea 0x207664(%rip),%r12
3b4c(3): test %r14d,%r14d
3b4f(3): setz %al
3b52(4): mov 0x0(%r12,%rax,8),%rdi
3b56(3): mov 0x0(%rsi,%rax,4),%eax
3b59(3): cmp $0x1,%eax
3b5c(6): jz 0xb4(%rip)
3b62(6): jle 0xee(%rip)
3b68(3): cmp $0x2,%eax
3b6b(2): jz 0x55(%rip)
3b6d(3): cmp $0x3,%eax
3b70(2): jnz 0x25(%rip)
3b72(5): mov %r9,0x18(%rsp)
3b77(5): mov %r8,0x10(%rsp)
3b7c(5): mov %rcx,0x8(%rsp)
3b81(5): call 0xffffefaf(%rip)
3b86(5): mov 0x18(%rsp),%r9
3b8b(5): mov 0x10(%rsp),%r8
3b90(5): mov 0x8(%rsp),%rcx
3b95(3): test %r14d,%r14d
3b98(2): jz 0x68(%rip)
3b9a(3): mov 0x4(%rbp),%eax
3b9d(5): mov $0x4,%edx
3ba2(3): mov %eax,0x0(%rbp)
3ba5(7): mov 0x20760c(%rip),%rax
3bac(7): mov %rax,0x2075fd(%rip)
3bb3(5): mov $0x8,%eax
3bb8(5): jmp 0xffffff5a(%rip)
3bbd(3): nop (%rax)
3bc0(4): sub $0x1,0x4(%rdx)
3bc4(5): mov %r9,0x18(%rsp)
3bc9(5): mov %r8,0x10(%rsp)
3bce(5): mov %rcx,0x8(%rsp)
3bd3(5): call 0xffffeebd(%rip)
3bd8(7): lea 0x207439(%rip),%rdi
3bdf(3): mov %rax,%rsi
3be2(5): call 0xffffee5e(%rip)
3be7(5): mov 0x8(%rsp),%rcx
3bec(5): mov 0x10(%rsp),%r8
3bf1(5): mov 0x18(%rsp),%r9
3bf6(2): jmp 0xffffff9f(%rip)
3bf8(8): nop 0x0(%rax,%rax,1)
3c00(5): mov $0x8,%eax
3c05(5): mov $0x4,%edx
3c0a(5): jmp 0xffffff08(%rip)
3c0f(1): nop 
3c10(3): sub $0x1,(%rdx)
3c13(5): mov %r9,0x18(%rsp)
3c18(5): mov %r8,0x10(%rsp)
3c1d(5): mov %rcx,0x8(%rsp)
3c22(5): call 0xffffee6e(%rip)
3c27(7): lea 0x2073f2(%rip),%rdi
3c2e(3): mov %rax,%rsi
3c31(5): call 0xffffee0f(%rip)
3c36(5): mov 0x8(%rsp),%rcx
3c3b(5): mov 0x10(%rsp),%r8
3c40(5): mov 0x18(%rsp),%r9
3c45(5): jmp 0xffffff50(%rip)
3c4a(6): nop 0x0(%rax,%rax,1)
3c50(2): test %eax,%eax
3c52(6): jnz 0xffffff43(%rip)
3c58(3): mov %r13,%rsi
3c5b(5): mov $0x4,%edi
3c60(5): call 0x1e20(%rip)
3c65(7): lea 0x41d8(%rip),%rsi
3c6c(3): mov %rax,%rbx
3c6f(5): mov $0x5,%edx
3c74(2): xor %edi,%edi
3c76(5): call 0xffffda7a(%rip)
3c7b(2): xor %edi,%edi
3c7d(3): mov %rax,%rdx
3c80(3): mov %rbx,%rcx
3c83(2): xor %esi,%esi
3c85(2): xor %eax,%eax
3c87(5): call 0xffffdc69(%rip)
3c8c(5): mov $0x1,%edi
3c91(5): call 0xfffffa2f(%rip)

"close_stdout_set_file_name" :
3ca0(7): mov %rdi,0x207541(%rip)
3ca7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3cb0(7): mov %dil,0x207529(%rip)
3cb7(1): ret near (%rsp)

"close_stdout" :
3cc0(1): push %rbp
3cc1(1): push %rbx
3cc2(4): sub $0x8,%rsp
3cc6(7): mov 0x2073db(%rip),%rdi
3ccd(5): call 0x3313(%rip)
3cd2(2): test %eax,%eax
3cd4(2): jz 0x18(%rip)
3cd6(5): call 0xffffd99a(%rip)
3cdb(7): cmp $0x0,0x2074fe(%rip)
3ce2(3): mov %rax,%rbx
3ce5(2): jz 0x1e(%rip)
3ce7(3): cmp $0x20,(%rax)
3cea(2): jnz 0x19(%rip)
3cec(7): mov 0x2073ed(%rip),%rdi
3cf3(5): call 0x32ed(%rip)
3cf8(2): test %eax,%eax
3cfa(2): jnz 0x48(%rip)
3cfc(4): add $0x8,%rsp
3d00(1): pop %rbx
3d01(1): pop %rbp
3d02(1): ret near (%rsp)
3d03(7): lea 0x423e(%rip),%rsi
3d0a(2): xor %edi,%edi
3d0c(5): mov $0x5,%edx
3d11(5): call 0xffffd9df(%rip)
3d16(7): mov 0x2074cb(%rip),%rdi
3d1d(3): mov %rax,%rbp
3d20(3): test %rdi,%rdi
3d23(2): jz 0x2a(%rip)
3d25(5): call 0x1e2b(%rip)
3d2a(2): mov (%rbx),%esi
3d2c(7): lea 0x4221(%rip),%rdx
3d33(3): mov %rax,%rcx
3d36(3): mov %rbp,%r8
3d39(2): xor %edi,%edi
3d3b(2): xor %eax,%eax
3d3d(5): call 0xffffdbb3(%rip)
3d42(6): mov 0x2072f0(%rip),%edi
3d48(5): call 0xffffd948(%rip)
3d4d(2): mov (%rbx),%esi
3d4f(7): lea 0x3ffc(%rip),%rdx
3d56(3): mov %rax,%rcx
3d59(2): xor %edi,%edi
3d5b(2): xor %eax,%eax
3d5d(5): call 0xffffdb93(%rip)
3d62(2): jmp 0xffffffe0(%rip)

"fadvise" :
3d80(3): test %rdi,%rdi
3d83(2): jz 0x1d(%rip)
3d85(1): push %rbx
3d86(2): mov %esi,%ebx
3d88(5): call 0xffffdaa8(%rip)
3d8d(2): mov %ebx,%ecx
3d8f(2): xor %edx,%edx
3d91(2): xor %esi,%esi
3d93(1): pop %rbx
3d94(2): mov %eax,%edi
3d96(5): jmp 0xffffda2a(%rip)
3d9b(5): nop 0x0(%rax,%rax,1)
3da0(2): REP ret near (%rsp)

"fopen_safer" :
3db0(2): push %r12
3db2(1): push %rbp
3db3(3): mov %rsi,%rbp
3db6(1): push %rbx
3db7(5): call 0xffffdb59(%rip)
3dbc(3): test %rax,%rax
3dbf(3): mov %rax,%rbx
3dc2(2): jz 0xf(%rip)
3dc4(3): mov %rax,%rdi
3dc7(5): call 0xffffda69(%rip)
3dcc(3): cmp $0x2,%eax
3dcf(2): jbe 0x11(%rip)
3dd1(3): mov %rbx,%rax
3dd4(1): pop %rbx
3dd5(1): pop %rbp
3dd6(2): pop %r12
3dd8(1): ret near (%rsp)
3dd9(7): nop 0x0(%rax)
3de0(2): mov %eax,%edi
3de2(5): call 0x1f8e(%rip)
3de7(2): test %eax,%eax
3de9(3): mov %eax,%r12d
3dec(2): js 0x3c(%rip)
3dee(3): mov %rbx,%rdi
3df1(5): call 0x2dbf(%rip)
3df6(2): test %eax,%eax
3df8(2): jnz 0x15(%rip)
3dfa(3): mov %rbp,%rsi
3dfd(3): mov %r12d,%edi
3e00(5): call 0xffffdac0(%rip)
3e05(3): test %rax,%rax
3e08(3): mov %rax,%rbx
3e0b(2): jnz 0xffffffc6(%rip)
3e0d(5): call 0xffffd863(%rip)
3e12(2): mov (%rax),%ebp
3e14(3): mov %rax,%rbx
3e17(3): mov %r12d,%edi
3e1a(5): call 0xffffd996(%rip)
3e1f(2): mov %ebp,(%rbx)
3e21(2): xor %ebx,%ebx
3e23(2): jmp 0xffffffae(%rip)
3e25(3): nop (%rax)
3e28(5): call 0xffffd848(%rip)
3e2d(3): mov (%rax),%r12d
3e30(3): mov %rax,%rbp
3e33(3): mov %rbx,%rdi
3e36(5): call 0x2d7a(%rip)
3e3b(2): xor %ebx,%ebx
3e3d(4): mov %r12d,0x0(%rbp)
3e41(2): jmp 0xffffff90(%rip)

"hard_locale" :
3e50(4): sub $0x8,%rsp
3e54(2): xor %esi,%esi
3e56(5): call 0xffffda7a(%rip)
3e5b(3): mov %rax,%rdx
3e5e(5): mov $0x1,%eax
3e63(3): test %rdx,%rdx
3e66(2): jz 0x1f(%rip)
3e68(7): lea 0x40ec(%rip),%rdi
3e6f(5): mov $0x2,%ecx
3e74(3): mov %rdx,%rsi
3e77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3e79(3): setnbe %cl
3e7c(3): sbb $0x0,%cl
3e7f(2): xor %eax,%eax
3e81(2): test %cl,%cl
3e83(2): jnz 0xd(%rip)
3e85(4): add $0x8,%rsp
3e89(1): ret near (%rsp)
3e8a(6): nop 0x0(%rax,%rax,1)
3e90(7): lea 0x40c6(%rip),%rdi
3e97(5): mov $0x6,%ecx
3e9c(3): mov %rdx,%rsi
3e9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3ea1(3): setnbe %al
3ea4(2): sbb $0x0,%al
3ea6(2): test %al,%al
3ea8(3): setnz %al
3eab(4): add $0x8,%rsp
3eaf(1): ret near (%rsp)

"initbuffer" :
3eb0(4): pxor %xmm0,%xmm0
3eb4(8): mov $0x0,0x10(%rdi)
3ebc(3): movups %xmm0,(%rdi)
3ebf(1): ret near (%rsp)

"readlinebuffer_delim" :
3ec0(2): push %r15
3ec2(2): push %r14
3ec4(2): push %r13
3ec6(2): push %r12
3ec8(1): push %rbp
3ec9(1): push %rbx
3eca(4): sub $0x18,%rsp
3ece(4): mov 0x10(%rdi),%r13
3ed2(3): mov (%rdi),%r8
3ed5(3): add %r13,%r8
3ed8(3): test $0x10,(%rsi)
3edb(6): jnz 0xd5(%rip)
3ee1(3): mov %rdi,%r14
3ee4(3): mov %rsi,%rbp
3ee7(3): mov %r13,%rbx
3eea(4): movsx %dl,%r15d
3eee(2): jmp 0xd(%rip)
3ef0(3): cmp %r15d,%r12d
3ef3(4): lea 0x1(%rsi),%rbx
3ef7(2): mov %cl,(%rsi)
3ef9(2): jz 0x5d(%rip)
3efb(4): mov 0x8(%rbp),%rcx
3eff(4): cmp 0x10(%rbp),%rcx
3f03(2): jnb 0x6d(%rip)
3f05(4): lea 0x1(%rcx),%rax
3f09(4): mov %rax,0x8(%rbp)
3f0d(4): movzx (%rcx),%r12d
3f11(3): mov %r12d,%ecx
3f14(3): cmp %r8,%rbx
3f17(3): mov %rbx,%rsi
3f1a(2): jnz 0xffffffd6(%rip)
3f1c(3): mov (%r14),%rbx
3f1f(3): mov %r14,%rsi
3f22(3): mov %r13,%rdi
3f25(4): mov %dl,0xf(%rsp)
3f29(3): mov %cl,(%rsp)
3f2c(5): call 0x25d4(%rip)
3f31(3): mov (%r14),%r8
3f34(4): movzx (%rsp),%ecx
3f38(4): lea 0x0(%rax,%rbx,1),%rsi
3f3c(4): mov %rax,0x10(%r14)
3f40(3): mov %rax,%r13
3f43(5): movzx 0xf(%rsp),%edx
3f48(4): lea 0x1(%rsi),%rbx
3f4c(3): add %rax,%r8
3f4f(3): cmp %r15d,%r12d
3f52(2): mov %cl,(%rsi)
3f54(2): jnz 0xffffffa7(%rip)
3f56(3): sub %r13,%rbx
3f59(3): mov %r14,%rax
3f5c(4): mov %rbx,0x8(%r14)
3f60(4): add $0x18,%rsp
3f64(1): pop %rbx
3f65(1): pop %rbp
3f66(2): pop %r12
3f68(2): pop %r13
3f6a(2): pop %r14
3f6c(2): pop %r15
3f6e(1): ret near (%rsp)
3f6f(1): nop 
3f70(3): mov %rbp,%rdi
3f73(4): mov %dl,0xf(%rsp)
3f77(4): mov %r8,(%rsp)
3f7b(5): call 0xffffd6c5(%rip)
3f80(3): cmp $0xff,%eax
3f83(3): mov %eax,%r12d
3f86(4): mov (%rsp),%r8
3f8a(5): movzx 0xf(%rsp),%edx
3f8f(2): jnz 0x32(%rip)
3f91(3): cmp %rbx,%r13
3f94(2): jz 0x1c(%rip)
3f96(4): test $0x20,0x0(%rbp)
3f9a(2): jnz 0x16(%rip)
3f9c(3): cmp %dl,0xffffffff(%rbx)
3f9f(2): jz 0xffffffb7(%rip)
3fa1(3): mov %r15d,%r12d
3fa4(2): mov %edx,%ecx
3fa6(5): jmp 0xffffff6e(%rip)
3fab(5): nop 0x0(%rax,%rax,1)
3fb0(4): add $0x18,%rsp
3fb4(2): xor %eax,%eax
3fb6(1): pop %rbx
3fb7(1): pop %rbp
3fb8(2): pop %r12
3fba(2): pop %r13
3fbc(2): pop %r14
3fbe(2): pop %r15
3fc0(1): ret near (%rsp)
3fc1(2): mov %eax,%ecx
3fc3(5): jmp 0xffffff51(%rip)

"readlinebuffer" :
3fd0(5): mov $0xa,%edx
3fd5(5): jmp 0xfffffeeb(%rip)

"freebuffer" :
3fe0(4): mov 0x10(%rdi),%rdi
3fe4(5): jmp 0xffffd66c(%rip)

"memcasecmp" :
3ff0(3): test %rdx,%rdx
3ff3(2): jz 0x45(%rip)
3ff5(2): push %r12
3ff7(1): push %rbp
3ff8(3): mov %rsi,%r12
3ffb(1): push %rbx
3ffc(3): mov %rdi,%rbp
3fff(3): mov %rdx,%rbx
4002(5): call 0xffffd62e(%rip)
4007(2): xor %ecx,%ecx
4009(3): mov (%rax),%r8
400c(2): jmp 0xd(%rip)
400e(2): nop 
4010(4): add $0x1,%rcx
4014(3): cmp %rbx,%rcx
4017(2): jz 0x16(%rip)
4019(5): movzx 0x0(%rbp,%rcx,1),%eax
401e(5): movzx 0x0(%r12,%rcx,1),%r9d
4023(4): mov 0x0(%r8,%rax,4),%eax
4027(4): sub 0x0(%r8,%r9,4),%eax
402b(2): jz 0xffffffe5(%rip)
402d(1): pop %rbx
402e(1): pop %rbp
402f(2): pop %r12
4031(1): ret near (%rsp)
4032(6): nop 0x0(%rax,%rax,1)
4038(2): xor %eax,%eax
403a(1): ret near (%rsp)

"set_program_name" :
4040(3): test %rdi,%rdi
4043(1): push %rbx
4044(2): jz 0x79(%rip)
4046(5): mov $0x2f,%esi
404b(3): mov %rdi,%rbx
404e(5): call 0xffffd722(%rip)
4053(3): test %rax,%rax
4056(2): jz 0x57(%rip)
4058(4): lea 0x1(%rax),%r8
405c(3): mov %r8,%rdx
405f(3): sub %rbx,%rdx
4062(4): cmp $0x6,%rdx
4066(2): jle 0x47(%rip)
4068(4): lea 0xfffffffa(%rax),%rsi
406c(7): lea 0x3f2d(%rip),%rdi
4073(5): mov $0x7,%ecx
4078(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
407a(3): setnbe %dl
407d(3): sbb $0x0,%dl
4080(2): test %dl,%dl
4082(2): jnz 0x2b(%rip)
4084(7): lea 0x3f1d(%rip),%rdi
408b(5): mov $0x3,%ecx
4090(3): mov %r8,%rsi
4093(3): mov %r8,%rbx
4096(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4098(3): setnbe %dl
409b(3): sbb $0x0,%dl
409e(2): test %dl,%dl
40a0(2): jnz 0xd(%rip)
40a2(4): lea 0x4(%rax),%rbx
40a6(7): mov %rbx,0x206ff3(%rip)
40ad(7): mov %rbx,0x20713c(%rip)
40b4(7): mov %rbx,0x20700d(%rip)
40bb(1): pop %rbx
40bc(1): ret near (%rsp)
40bd(7): mov 0x20701c(%rip),%rcx
40c4(7): lea 0x3e9d(%rip),%rdi
40cb(5): mov $0x37,%edx
40d0(5): mov $0x1,%esi
40d5(5): call 0xffffd87b(%rip)
40da(5): call 0xffffd586(%rip)

"gettext_quote.part.1" :
40e0(1): push %rbp
40e1(1): push %rbx
40e2(3): mov %rdi,%rbp
40e5(2): mov %esi,%ebx
40e7(4): sub $0x8,%rsp
40eb(5): call 0x2f75(%rip)
40f0(3): movzx (%rax),%edx
40f3(3): and $0xdf,%edx
40f6(3): cmp $0x55,%dl
40f9(2): jz 0x77(%rip)
40fb(3): cmp $0x47,%dl
40fe(2): jz 0x22(%rip)
4100(7): lea 0x3eb4(%rip),%rax
4107(7): lea 0x3eaf(%rip),%rdx
410e(3): cmp $0x9,%ebx
4111(4): cmovne %rdx,%rax
4115(4): add $0x8,%rsp
4119(1): pop %rbx
411a(1): pop %rbp
411b(1): ret near (%rsp)
411c(4): nop 0x0(%rax)
4120(4): movzx 0x1(%rax),%edx
4124(3): and $0xdf,%edx
4127(3): cmp $0x42,%dl
412a(2): jnz 0xffffffd6(%rip)
412c(4): cmp $0x31,0x2(%rax)
4130(2): jnz 0xffffffd0(%rip)
4132(4): cmp $0x38,0x3(%rax)
4136(2): jnz 0xffffffca(%rip)
4138(4): cmp $0x30,0x4(%rax)
413c(2): jnz 0xffffffc4(%rip)
413e(4): cmp $0x33,0x5(%rax)
4142(2): jnz 0xffffffbe(%rip)
4144(4): cmp $0x30,0x6(%rax)
4148(2): jnz 0xffffffb8(%rip)
414a(4): cmp $0x0,0x7(%rax)
414e(2): jnz 0xffffffb2(%rip)
4150(4): cmp $0x60,0x0(%rbp)
4154(7): lea 0x3e59(%rip),%rax
415b(7): lea 0x3e56(%rip),%rdx
4162(4): cmovne %rdx,%rax
4166(4): add $0x8,%rsp
416a(1): pop %rbx
416b(1): pop %rbp
416c(1): ret near (%rsp)
416d(3): nop (%rax)
4170(4): movzx 0x1(%rax),%edx
4174(3): and $0xdf,%edx
4177(3): cmp $0x54,%dl
417a(2): jnz 0xffffff86(%rip)
417c(4): movzx 0x2(%rax),%edx
4180(3): and $0xdf,%edx
4183(3): cmp $0x46,%dl
4186(6): jnz 0xffffff7a(%rip)
418c(4): cmp $0x2d,0x3(%rax)
4190(6): jnz 0xffffff70(%rip)
4196(4): cmp $0x38,0x4(%rax)
419a(6): jnz 0xffffff66(%rip)
41a0(4): cmp $0x0,0x5(%rax)
41a4(6): jnz 0xffffff5c(%rip)
41aa(4): cmp $0x60,0x0(%rbp)
41ae(7): lea 0x3df7(%rip),%rax
41b5(7): lea 0x3df4(%rip),%rdx
41bc(4): cmovne %rdx,%rax
41c0(4): add $0x8,%rsp
41c4(1): pop %rbx
41c5(1): pop %rbp
41c6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
41d0(2): push %r15
41d2(2): push %r14
41d4(3): mov %r8d,%r15d
41d7(2): push %r13
41d9(2): push %r12
41db(3): mov %rdi,%r14
41de(1): push %rbp
41df(1): push %rbx
41e0(3): mov %r9d,%ebx
41e3(3): mov %rsi,%r13
41e6(3): mov %rcx,%rbp
41e9(3): and $0x2,%ebx
41ec(7): sub $0xb8,%rsp
41f3(8): mov 0xf0(%rsp),%rax
41fb(5): mov %rdx,0x10(%rsp)
4200(5): mov %r8d,0x8(%rsp)
4205(5): mov %r9d,0x78(%rsp)
420a(5): mov %rax,0x20(%rsp)
420f(8): mov 0xf8(%rsp),%rax
4217(5): mov %rax,0x68(%rsp)
421c(8): mov 0x100(%rsp),%rax
4224(5): mov %rax,0x60(%rsp)
4229(9): mov $0x28,%rax
4232(8): mov %rax,0xa8(%rsp)
423a(2): xor %eax,%eax
423c(5): call 0xffffd4c4(%rip)
4241(4): cmp $0xa,%r15d
4245(5): mov %rax,0x58(%rsp)
424a(6): jnbe 0x11b5(%rip)
4250(7): lea 0x3dc9(%rip),%rcx
4257(3): mov %r15d,%edx
425a(4): movsxd 0x0(%rcx,%rdx,4),%rax
425e(3): add %rcx,%rax
4261(2): jmp %rax
4263(5): mov $0x1,0xe(%rsp)
4268(5): mov $0x0,0x7c(%rsp)
426d(3): xor %r12d,%r12d
4270(9): mov $0x0,0x50(%rsp)
4279(5): mov $0x1,0xf(%rsp)
427e(5): mov $0x0,0xd(%rsp)
4283(7): lea 0x3d33(%rip),%rax
428a(9): mov $0x1,0x18(%rsp)
4293(3): xor %r15d,%r15d
4296(8): mov $0x2,0x8(%rsp)
429e(5): mov %rax,0x48(%rsp)
42a3(3): xor %r11d,%r11d
42a6(3): mov %rbp,%rax
42a9(3): mov %r12d,%r8d
42ac(3): mov %r11,%rbp
42af(3): mov %rax,%r11
42b2(6): nop 0x0(%rax,%rax,1)
42b8(3): cmp %rbp,%r11
42bb(4): setnz %r12b
42bf(4): cmp $0xffffffff,%r11
42c3(2): jnz 0xf(%rip)
42c5(5): mov 0x10(%rsp),%rax
42ca(4): cmp $0x0,0x0(%rax,%rbp,1)
42ce(4): setnz %r12b
42d2(3): test %r12b,%r12b
42d5(6): jz 0x65b(%rip)
42db(5): cmp $0x2,0x8(%rsp)
42e0(5): mov 0x10(%rsp),%rdi
42e5(4): lea 0x0(%rdi,%rbp,1),%r9
42e9(3): setnz %al
42ec(4): and 0xd(%rsp),%al
42f0(3): mov %eax,%r10d
42f3(6): jz 0xad(%rip)
42f9(5): mov 0x18(%rsp),%rax
42fe(3): test %rax,%rax
4301(6): jz 0x42f(%rip)
4307(4): cmp $0xffffffff,%r11
430b(5): lea 0x0(%rbp,%rax,1),%rbx
4310(2): jnz 0x30(%rip)
4312(4): cmp $0x1,%rax
4316(2): jbe 0x2a(%rip)
4318(5): mov %r8b,0x38(%rsp)
431d(5): mov %r10b,0x30(%rsp)
4322(5): mov %r9,0x28(%rsp)
4327(5): call 0xffffd3e9(%rip)
432c(6): movzx 0x38(%rsp),%r8d
4332(6): movzx 0x30(%rsp),%r10d
4338(3): mov %rax,%r11
433b(5): mov 0x28(%rsp),%r9
4340(3): cmp %r11,%rbx
4343(5): mov %r10b,0x28(%rsp)
4348(6): jnbe 0x5b8(%rip)
434e(5): mov 0x18(%rsp),%rdx
4353(5): mov 0x48(%rsp),%rsi
4358(3): mov %r9,%rdi
435b(5): mov %r11,0x40(%rsp)
4360(5): mov %r8b,0x38(%rsp)
4365(5): mov %r9,0x30(%rsp)
436a(5): call 0xffffd476(%rip)
436f(2): test %eax,%eax
4371(5): mov 0x30(%rsp),%r9
4376(6): movzx 0x38(%rsp),%r8d
437c(5): mov 0x40(%rsp),%r11
4381(6): jnz 0x57f(%rip)
4387(5): cmp $0x0,0xf(%rsp)
438c(6): movzx 0x28(%rsp),%r10d
4392(6): jnz 0xf83(%rip)
4398(8): nop 0x0(%rax,%rax,1)
43a0(4): movzx (%r9),%ebx
43a4(3): cmp $0x7e,%bl
43a7(6): jnbe 0x321(%rip)
43ad(7): lea 0x3c98(%rip),%rcx
43b4(3): movzx %bl,%edx
43b7(4): movsxd 0x0(%rcx,%rdx,4),%rax
43bb(3): add %rcx,%rax
43be(2): jmp %rax
43c0(3): xor %r10d,%r10d
43c3(4): cmp $0x1,%r11
43c7(3): setnz %al
43ca(4): cmp $0xffffffff,%r11
43ce(2): jnz 0xe(%rip)
43d0(5): mov 0x10(%rsp),%rax
43d5(4): cmp $0x0,0x1(%rax)
43d9(3): setnz %al
43dc(5): cmp $0x2,0x8(%rsp)
43e1(3): setz %dl
43e4(2): test %al,%al
43e6(6): jz 0x252(%rip)
43ec(3): xor %r12d,%r12d
43ef(2): xor %eax,%eax
43f1(7): nop 0x0(%rax)
43f8(5): cmp $0x1,0xd(%rsp)
43fd(6): jnz 0x115(%rip)
4403(2): test %dl,%dl
4405(6): jnz 0x10d(%rip)
440b(5): mov 0x20(%rsp),%rsi
4410(3): test %rsi,%rsi
4413(2): jz 0x16(%rip)
4415(2): mov %ebx,%edx
4417(3): shr $0x5,%dl
441a(3): movzx %dl,%edx
441d(3): mov 0x0(%rsi,%rdx,4),%edx
4420(3): bt %ebx,%edx
4423(6): jb 0x150(%rip)
4429(3): test %r10b,%r10b
442c(6): jnz 0x147(%rip)
4432(3): xor $0x1,%eax
4435(4): add $0x1,%rbp
4439(3): and %r8d,%eax
443c(2): test %al,%al
443e(2): jz 0x22(%rip)
4440(3): cmp %r15,%r13
4443(2): jbe 0x7(%rip)
4445(5): mov $0x27,0x0(%r14,%r15,1)
444a(4): lea 0x1(%r15),%rax
444e(3): cmp %rax,%r13
4451(2): jbe 0x8(%rip)
4453(6): mov $0x27,0x1(%r14,%r15,1)
4459(4): add $0x2,%r15
445d(3): xor %r8d,%r8d
4460(3): cmp %r13,%r15
4463(2): jnb 0x6(%rip)
4465(4): mov %bl,0x0(%r14,%r15,1)
4469(5): movzx 0xe(%rsp),%edi
446e(4): add $0x1,%r15
4472(5): mov $0x0,%eax
4477(3): test %r12b,%r12b
447a(3): cmove %eax,%edi
447d(5): mov %dil,0xe(%rsp)
4482(5): jmp 0xfffffe36(%rip)
4487(9): nop 0x0(%rax,%rax,1)
4490(3): xor %r10d,%r10d
4493(4): mov 0x8(%rsp),%eax
4497(3): cmp $0x2,%eax
449a(6): jz 0x5be(%rip)
44a0(3): cmp $0x5,%eax
44a3(6): jz 0x575(%rip)
44a9(3): cmp $0x2,%eax
44ac(5): mov $0x3f,%ebx
44b1(3): setz %dl
44b4(3): xor %r12d,%r12d
44b7(2): xor %eax,%eax
44b9(5): jmp 0xffffff3f(%rip)
44be(2): nop 
44c0(3): xor %r10d,%r10d
44c3(5): cmp $0x2,0x8(%rsp)
44c8(6): jz 0x508(%rip)
44ce(5): mov %r12b,0x7c(%rsp)
44d3(2): xor %edx,%edx
44d5(2): xor %eax,%eax
44d7(5): mov $0x27,%ebx
44dc(5): jmp 0xffffff1c(%rip)
44e1(7): nop 0x0(%rax)
44e8(5): mov $0x9,%edx
44ed(5): mov $0x74,%ebx
44f2(5): cmp $0x2,0x8(%rsp)
44f7(3): setz %al
44fa(4): and 0xf(%rsp),%al
44fe(6): jnz 0x150(%rip)
4504(5): cmp $0x0,0xd(%rsp)
4509(2): jnz 0x67(%rip)
450b(2): mov %edx,%ebx
450d(3): xor %r12d,%r12d
4510(2): xor %eax,%eax
4512(5): cmp $0x0,0xf(%rsp)
4517(6): jnz 0xfffffef4(%rip)
451d(5): jmp 0xffffff0c(%rip)
4522(6): nop 0x0(%rax,%rax,1)
4528(5): mov $0x8,%edx
452d(5): mov $0x62,%ebx
4532(2): jmp 0xffffffd2(%rip)
4534(4): nop 0x0(%rax)
4538(5): cmp $0x2,0x8(%rsp)
453d(6): jz 0x3d3(%rip)
4543(5): cmp $0x0,0xd(%rsp)
4548(6): jz 0x218(%rip)
454e(5): cmp $0x0,0xf(%rsp)
4553(6): jz 0x20d(%rip)
4559(6): cmp $0x0,0x18(%rsp)
455f(6): jnz 0x3bc(%rip)
4565(5): mov $0x5c,%ebx
456a(6): nop 0x0(%rax,%rax,1)
4570(3): xor %r12d,%r12d
4573(5): cmp $0x2,0x8(%rsp)
4578(3): setz %dl
457b(5): cmp $0x0,0xf(%rsp)
4580(2): mov %edx,%eax
4582(6): jnz 0x856(%rip)
4588(3): mov %r8d,%eax
458b(3): xor $0x1,%eax
458e(2): and %dl,%al
4590(2): jz 0x31(%rip)
4592(3): cmp %r15,%r13
4595(2): jbe 0x7(%rip)
4597(5): mov $0x27,0x0(%r14,%r15,1)
459c(4): lea 0x1(%r15),%rdx
45a0(3): cmp %rdx,%r13
45a3(2): jbe 0x8(%rip)
45a5(6): mov $0x24,0x1(%r14,%r15,1)
45ab(4): lea 0x2(%r15),%rdx
45af(3): cmp %rdx,%r13
45b2(2): jbe 0x8(%rip)
45b4(6): mov $0x27,0x2(%r14,%r15,1)
45ba(4): add $0x3,%r15
45be(3): mov %eax,%r8d
45c1(3): cmp %r15,%r13
45c4(2): jbe 0x7(%rip)
45c6(5): mov $0x5c,0x0(%r14,%r15,1)
45cb(4): add $0x1,%r15
45cf(4): add $0x1,%rbp
45d3(5): jmp 0xfffffe8d(%rip)
45d8(8): nop 0x0(%rax,%rax,1)
45e0(5): cmp $0x0,0xd(%rsp)
45e5(6): jnz 0x1ce(%rip)
45eb(2): xor %edx,%edx
45ed(5): test $0x1,0x78(%rsp)
45f2(6): jz 0xffffff19(%rip)
45f8(4): add $0x1,%rbp
45fc(5): jmp 0xfffffcbc(%rip)
4601(7): nop 0x0(%rax)
4608(5): cmp $0x2,0x8(%rsp)
460d(3): setz %dl
4610(2): xor %eax,%eax
4612(5): jmp 0xfffffde6(%rip)
4617(9): nop 0x0(%rax,%rax,1)
4620(5): mov $0x7,%edx
4625(5): mov $0x61,%ebx
462a(5): jmp 0xfffffeda(%rip)
462f(1): nop 
4630(5): cmp $0x2,0x8(%rsp)
4635(3): setz %dl
4638(3): test %rbp,%rbp
463b(6): jnz 0xfffffdb1(%rip)
4641(5): movzx 0xf(%rsp),%eax
4646(2): and %dl,%al
4648(6): jz 0xfffffdb0(%rip)
464e(3): mov %r11,%rbp
4651(8): mov $0x2,0x8(%rsp)
4659(5): jmp 0x700(%rip)
465e(2): nop 
4660(5): cmp $0x2,0x8(%rsp)
4665(3): setz %dl
4668(3): xor %r12d,%r12d
466b(2): jmp 0xffffffd6(%rip)
466d(3): nop (%rax)
4670(5): cmp $0x2,0x8(%rsp)
4675(5): mov $0x20,%ebx
467a(3): setz %dl
467d(2): jmp 0xffffffc4(%rip)
467f(1): nop 
4680(5): mov $0xd,%edx
4685(5): mov $0x72,%ebx
468a(5): jmp 0xfffffe68(%rip)
468f(1): nop 
4690(5): mov $0xc,%edx
4695(5): mov $0x66,%ebx
469a(5): jmp 0xfffffe6a(%rip)
469f(1): nop 
46a0(5): mov $0xb,%edx
46a5(5): mov $0x76,%ebx
46aa(5): jmp 0xfffffe5a(%rip)
46af(1): nop 
46b0(5): mov $0xa,%edx
46b5(5): mov $0x6e,%ebx
46ba(5): jmp 0xfffffe38(%rip)
46bf(1): nop 
46c0(3): xor %r10d,%r10d
46c3(5): nop 0x0(%rax,%rax,1)
46c8(6): cmp $0x1,0x58(%rsp)
46ce(6): jnz 0x3aa(%rip)
46d4(5): mov %r11,0x38(%rsp)
46d9(5): mov %r8b,0x30(%rsp)
46de(5): mov %r10b,0x28(%rsp)
46e3(5): call 0xffffd2ad(%rip)
46e8(3): mov (%rax),%rcx
46eb(3): movzx %bl,%edx
46ee(6): movzx 0x28(%rsp),%r10d
46f4(6): movzx 0x30(%rsp),%r8d
46fa(5): mov 0x38(%rsp),%r11
46ff(5): mov $0x1,%edi
4704(4): movzx 0x0(%rcx,%rdx,2),%eax
4708(4): and $0x4000,%ax
470c(4): setnz %r12b
4710(3): setz %al
4713(4): and 0xd(%rsp),%al
4717(2): test %al,%al
4719(6): jnz 0x998(%rip)
471f(5): cmp $0x2,0x8(%rsp)
4724(3): setz %dl
4727(5): jmp 0xfffffcd1(%rip)
472c(4): nop 0x0(%rax)
4730(4): movzx (%r9),%ebx
4734(3): cmp $0x7e,%bl
4737(2): jnbe 0xffffff89(%rip)
4739(7): lea 0x3b08(%rip),%rcx
4740(3): movzx %bl,%edx
4743(4): movsxd 0x0(%rcx,%rdx,4),%rax
4747(3): add %rcx,%rax
474a(2): jmp %rax
474c(4): nop 0x0(%rax)
4750(3): xor %r10d,%r10d
4753(5): cmp $0x0,0xd(%rsp)
4758(6): jnz 0xfffffdf6(%rip)
475e(2): nop 
4760(5): mov $0x5c,%edx
4765(5): mov $0x5c,%ebx
476a(5): jmp 0xfffffd9a(%rip)
476f(1): nop 
4770(5): mov $0xc,%edx
4775(3): xor %r10d,%r10d
4778(5): mov $0x66,%ebx
477d(5): jmp 0xfffffd87(%rip)
4782(6): nop 0x0(%rax,%rax,1)
4788(5): mov $0xa,%edx
478d(3): xor %r10d,%r10d
4790(5): mov $0x6e,%ebx
4795(5): jmp 0xfffffd5d(%rip)
479a(6): nop 0x0(%rax,%rax,1)
47a0(5): mov $0x61,%ebx
47a5(5): jmp 0xfffffdcb(%rip)
47aa(6): nop 0x0(%rax,%rax,1)
47b0(3): xor %r10d,%r10d
47b3(5): cmp $0x2,0x8(%rsp)
47b8(3): setz %dl
47bb(5): cmp $0x0,0xf(%rsp)
47c0(6): jnz 0xb9a(%rip)
47c6(3): mov %r8d,%eax
47c9(3): mov %r15,%rcx
47cc(3): xor $0x1,%eax
47cf(2): and %dl,%al
47d1(2): jz 0x2f(%rip)
47d3(3): cmp %r15,%r13
47d6(2): jbe 0x7(%rip)
47d8(5): mov $0x27,0x0(%r14,%r15,1)
47dd(4): lea 0x1(%r15),%rcx
47e1(3): cmp %rcx,%r13
47e4(2): jbe 0x8(%rip)
47e6(6): mov $0x24,0x1(%r14,%r15,1)
47ec(4): lea 0x2(%r15),%rcx
47f0(3): cmp %rcx,%r13
47f3(6): jnbe 0x636(%rip)
47f9(4): lea 0x3(%r15),%rcx
47fd(3): mov %eax,%r8d
4800(3): cmp %rcx,%r13
4803(2): jbe 0x7(%rip)
4805(5): mov $0x5c,0x0(%r14,%rcx,1)
480a(5): cmp $0x2,0x8(%rsp)
480f(4): lea 0x1(%rcx),%r15
4813(6): jz 0x606(%rip)
4819(4): lea 0x1(%rbp),%rax
481d(3): cmp %r11,%rax
4820(2): jnb 0x1b(%rip)
4822(5): mov 0x10(%rsp),%rax
4827(5): movzx 0x1(%rax,%rbp,1),%eax
482c(4): mov %al,0x28(%rsp)
4830(3): sub $0x30,%eax
4833(2): cmp $0x9,%al
4835(6): jbe 0x834(%rip)
483b(3): mov %r12d,%eax
483e(5): mov $0x30,%ebx
4843(3): xor %r12d,%r12d
4846(5): jmp 0xfffffbb2(%rip)
484b(5): nop 0x0(%rax,%rax,1)
4850(5): cmp $0x2,0x8(%rsp)
4855(3): mov %r10d,%r12d
4858(3): setz %dl
485b(3): xor %r10d,%r10d
485e(2): xor %eax,%eax
4860(5): jmp 0xfffffb98(%rip)
4865(3): nop (%rax)
4868(5): cmp $0x2,0x8(%rsp)
486d(3): setz %dl
4870(3): xor %r10d,%r10d
4873(5): jmp 0xfffffdc5(%rip)
4878(8): nop 0x0(%rax,%rax,1)
4880(5): cmp $0x2,0x8(%rsp)
4885(3): setz %dl
4888(3): xor %r10d,%r10d
488b(3): xor %r12d,%r12d
488e(5): jmp 0xfffffdb3(%rip)
4893(5): nop 0x0(%rax,%rax,1)
4898(5): cmp $0x2,0x8(%rsp)
489d(3): mov %r10d,%r12d
48a0(5): mov $0x20,%ebx
48a5(3): setz %dl
48a8(3): xor %r10d,%r10d
48ab(5): jmp 0xfffffd96(%rip)
48b0(5): mov $0xd,%edx
48b5(3): xor %r10d,%r10d
48b8(5): mov $0x72,%ebx
48bd(5): jmp 0xfffffc35(%rip)
48c2(6): nop 0x0(%rax,%rax,1)
48c8(5): mov $0x76,%ebx
48cd(5): jmp 0xfffffca3(%rip)
48d2(6): nop 0x0(%rax,%rax,1)
48d8(5): mov $0x9,%edx
48dd(3): xor %r10d,%r10d
48e0(5): mov $0x74,%ebx
48e5(5): jmp 0xfffffc0d(%rip)
48ea(6): nop 0x0(%rax,%rax,1)
48f0(5): mov $0x62,%ebx
48f5(5): jmp 0xfffffc7b(%rip)
48fa(6): nop 0x0(%rax,%rax,1)
4900(3): xor %r10d,%r10d
4903(5): jmp 0xfffffa9d(%rip)
4908(8): nop 0x0(%rax,%rax,1)
4910(5): cmp $0x0,0xf(%rsp)
4915(6): jnz 0x96b(%rip)
491b(4): add $0x1,%rbp
491f(3): mov %r8d,%eax
4922(3): xor %r12d,%r12d
4925(5): mov $0x5c,%ebx
492a(5): jmp 0xfffffb12(%rip)
492f(1): nop 
4930(5): cmp $0x2,0x8(%rsp)
4935(5): movzx 0xf(%rsp),%ebx
493a(3): mov %r8d,%r12d
493d(3): mov %r11,%rbp
4940(3): setz %dl
4943(2): mov %ebx,%eax
4945(3): test %r15,%r15
4948(3): setz %cl
494b(2): and %edx,%eax
494d(2): and %cl,%al
494f(6): jnz 0xa67(%rip)
4955(2): mov %ebx,%eax
4957(3): xor $0x1,%eax
495a(2): and %al,%dl
495c(6): jz 0x970(%rip)
4962(5): cmp $0x0,0x7c(%rsp)
4967(6): jz 0x963(%rip)
496d(5): cmp $0x0,0xe(%rsp)
4972(6): jnz 0x9fb(%rip)
4978(3): test %r13,%r13
497b(3): setz %al
497e(6): cmp $0x0,0x50(%rsp)
4984(3): setnz %dl
4987(2): and %dl,%al
4989(6): jz 0xa23(%rip)
498f(5): mov 0x50(%rsp),%r13
4994(7): lea 0x3622(%rip),%rbx
499b(4): mov $0x27,(%r14)
499f(8): mov $0x2,0x8(%rsp)
49a7(6): mov $0x1,%r15d
49ad(9): mov $0x1,0x18(%rsp)
49b6(5): mov $0x0,0xf(%rsp)
49bb(5): mov %rbx,0x48(%rsp)
49c0(4): mov %al,0x7c(%rsp)
49c4(5): jmp 0xfffff8df(%rip)
49c9(7): nop 0x0(%rax)
49d0(5): cmp $0x0,0xf(%rsp)
49d5(6): jnz 0x8ab(%rip)
49db(3): test %r13,%r13
49de(6): jz 0x402(%rip)
49e4(2): xor %edx,%edx
49e6(6): cmp $0x0,0x50(%rsp)
49ec(6): jnz 0x3f4(%rip)
49f2(5): mov %r13,0x50(%rsp)
49f7(4): add $0x3,%r15
49fb(2): xor %eax,%eax
49fd(5): mov %r12b,0x7c(%rsp)
4a02(3): xor %r8d,%r8d
4a05(3): mov %rdx,%r13
4a08(5): mov $0x27,%ebx
4a0d(5): jmp 0xfffffa1c(%rip)
4a12(6): nop 0x0(%rax,%rax,1)
4a18(5): test $0x4,0x78(%rsp)
4a1d(2): jz 0x23(%rip)
4a1f(4): lea 0x2(%rbp),%rcx
4a23(3): cmp %r11,%rcx
4a26(2): jnb 0x1a(%rip)
4a28(5): mov 0x10(%rsp),%rax
4a2d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4a32(6): jz 0x790(%rip)
4a38(8): nop 0x0(%rax,%rax,1)
4a40(2): xor %edx,%edx
4a42(3): xor %r12d,%r12d
4a45(2): xor %eax,%eax
4a47(5): mov $0x3f,%ebx
4a4c(5): jmp 0xfffff9ac(%rip)
4a51(7): nop 0x0(%rax)
4a58(5): cmp $0x0,0xf(%rsp)
4a5d(6): jnz 0x823(%rip)
4a63(3): xor %r12d,%r12d
4a66(2): xor %eax,%eax
4a68(5): mov $0x3f,%ebx
4a6d(5): jmp 0xfffff9bc(%rip)
4a72(6): nop 0x0(%rax,%rax,1)
4a78(8): lea 0xa0(%rsp),%rax
4a80(4): cmp $0xffffffff,%r11
4a84(c): mov $0x0,0xa0(%rsp)
4a90(5): mov %rax,0x28(%rsp)
4a95(2): jnz 0x2f(%rip)
4a97(5): mov 0x10(%rsp),%rdi
4a9c(5): mov %r8b,0x40(%rsp)
4aa1(5): mov %r10b,0x38(%rsp)
4aa6(5): mov %r9,0x30(%rsp)
4aab(5): call 0xffffcc65(%rip)
4ab0(6): movzx 0x40(%rsp),%r8d
4ab6(6): movzx 0x38(%rsp),%r10d
4abc(3): mov %rax,%r11
4abf(5): mov 0x30(%rsp),%r9
4ac4(8): lea 0x9c(%rsp),%rax
4acc(2): xor %ecx,%ecx
4ace(4): mov %bl,0x7e(%rsp)
4ad2(5): mov %r8b,0x7d(%rsp)
4ad7(3): mov %rcx,%rbx
4ada(8): mov %r9,0x88(%rsp)
4ae2(5): mov %rax,0x38(%rsp)
4ae7(5): mov %r10b,0x7f(%rsp)
4aec(8): mov %r15,0x80(%rsp)
4af4(5): mov %r14,0x40(%rsp)
4af9(5): mov %r13,0x70(%rsp)
4afe(5): mov %r11,0x30(%rsp)
4b03(5): mov 0x10(%rsp),%rax
4b08(5): lea 0x0(%rbp,%rbx,1),%r14
4b0d(5): mov 0x30(%rsp),%rdx
4b12(5): mov 0x28(%rsp),%rcx
4b17(5): mov 0x38(%rsp),%rdi
4b1c(4): lea 0x0(%rax,%r14,1),%r13
4b20(3): sub %r14,%rdx
4b23(3): mov %r13,%rsi
4b26(5): call 0x242a(%rip)
4b2b(3): test %rax,%rax
4b2e(3): mov %rax,%r15
4b31(2): jz 0x50(%rip)
4b33(4): cmp $0xffffffff,%rax
4b37(6): jz 0x61e(%rip)
4b3d(4): cmp $0xfffffffe,%rax
4b41(6): jz 0x5a0(%rip)
4b47(5): cmp $0x2,0x8(%rsp)
4b4c(3): setz %al
4b4f(4): and 0xf(%rsp),%al
4b53(6): jnz 0x19d(%rip)
4b59(7): mov 0x9c(%rsp),%edi
4b60(5): call 0xffffce20(%rip)
4b65(5): mov 0x28(%rsp),%rdi
4b6a(2): test %eax,%eax
4b6c(5): mov $0x0,%eax
4b71(4): cmove %eax,%r12d
4b75(3): add %r15,%rbx
4b78(5): call 0xffffcdf8(%rip)
4b7d(2): test %eax,%eax
4b7f(2): jz 0xffffff84(%rip)
4b81(3): mov %r12d,%edx
4b84(3): mov %rbx,%rdi
4b87(6): movzx 0x7d(%rsp),%r8d
4b8d(3): xor $0x1,%edx
4b90(5): movzx 0x7e(%rsp),%ebx
4b95(6): movzx 0x7f(%rsp),%r10d
4b9b(4): and 0xd(%rsp),%dl
4b9f(8): mov 0x80(%rsp),%r15
4ba7(5): mov 0x40(%rsp),%r14
4bac(5): mov 0x70(%rsp),%r13
4bb1(5): mov 0x30(%rsp),%r11
4bb6(4): cmp $0x1,%rdi
4bba(6): jbe 0x601(%rip)
4bc0(3): mov %rdi,%rcx
4bc3(2): xor %esi,%esi
4bc5(6): movzx 0xf(%rsp),%r9d
4bcb(3): add %rbp,%rcx
4bce(5): mov 0x10(%rsp),%rdi
4bd3(5): jmp 0xbb(%rip)
4bd8(8): nop 0x0(%rax,%rax,1)
4be0(5): cmp $0x2,0x8(%rsp)
4be5(3): setz %al
4be8(3): test %r9b,%r9b
4beb(6): jnz 0x4b5(%rip)
4bf1(3): mov %r8d,%esi
4bf4(3): xor $0x1,%esi
4bf7(3): and %sil,%al
4bfa(2): jz 0x31(%rip)
4bfc(3): cmp %r15,%r13
4bff(2): jbe 0x7(%rip)
4c01(5): mov $0x27,0x0(%r14,%r15,1)
4c06(4): lea 0x1(%r15),%rsi
4c0a(3): cmp %rsi,%r13
4c0d(2): jbe 0x8(%rip)
4c0f(6): mov $0x24,0x1(%r14,%r15,1)
4c15(4): lea 0x2(%r15),%rsi
4c19(3): cmp %rsi,%r13
4c1c(2): jbe 0x8(%rip)
4c1e(6): mov $0x27,0x2(%r14,%r15,1)
4c24(4): add $0x3,%r15
4c28(3): mov %eax,%r8d
4c2b(3): cmp %r15,%r13
4c2e(2): jbe 0x7(%rip)
4c30(5): mov $0x5c,0x0(%r14,%r15,1)
4c35(4): lea 0x1(%r15),%rax
4c39(3): cmp %rax,%r13
4c3c(2): jbe 0xf(%rip)
4c3e(2): mov %ebx,%eax
4c40(3): shr $0x6,%al
4c43(3): add $0x30,%eax
4c46(5): mov %al,0x1(%r14,%r15,1)
4c4b(4): lea 0x2(%r15),%rax
4c4f(3): cmp %rax,%r13
4c52(2): jbe 0x12(%rip)
4c54(2): mov %ebx,%eax
4c56(3): shr $0x3,%al
4c59(3): and $0x7,%eax
4c5c(3): add $0x30,%eax
4c5f(5): mov %al,0x2(%r14,%r15,1)
4c64(3): and $0x7,%ebx
4c67(4): add $0x1,%rbp
4c6b(4): add $0x3,%r15
4c6f(3): add $0x30,%ebx
4c72(3): cmp %rcx,%rbp
4c75(6): jnb 0xfffff7eb(%rip)
4c7b(2): mov %edx,%esi
4c7d(3): cmp %r15,%r13
4c80(2): jbe 0x6(%rip)
4c82(4): mov %bl,0x0(%r14,%r15,1)
4c86(4): movzx 0x0(%rdi,%rbp,1),%ebx
4c8a(4): add $0x1,%r15
4c8e(2): test %dl,%dl
4c90(6): jnz 0xffffff50(%rip)
4c96(2): mov %esi,%eax
4c98(3): xor $0x1,%eax
4c9b(3): and %r8d,%eax
4c9e(3): test %r10b,%r10b
4ca1(2): jz 0x10(%rip)
4ca3(3): cmp %r15,%r13
4ca6(2): jbe 0x7(%rip)
4ca8(5): mov $0x5c,0x0(%r14,%r15,1)
4cad(4): add $0x1,%r15
4cb1(4): add $0x1,%rbp
4cb5(3): cmp %rcx,%rbp
4cb8(6): jnb 0xfffff784(%rip)
4cbe(2): test %al,%al
4cc0(6): jz 0x3fe(%rip)
4cc6(3): cmp %r15,%r13
4cc9(2): jbe 0x7(%rip)
4ccb(5): mov $0x27,0x0(%r14,%r15,1)
4cd0(4): lea 0x1(%r15),%rax
4cd4(3): cmp %rax,%r13
4cd7(2): jbe 0x8(%rip)
4cd9(6): mov $0x27,0x1(%r14,%r15,1)
4cdf(4): add $0x2,%r15
4ce3(3): xor %r10d,%r10d
4ce6(3): xor %r8d,%r8d
4ce9(2): jmp 0xffffff94(%rip)
4ceb(5): nop 0x0(%rax,%rax,1)
4cf0(4): cmp $0x1,%r15
4cf4(6): jz 0xfffffe65(%rip)
4cfa(5): mov 0x10(%rsp),%rdi
4cff(4): lea 0x0(%rdi,%r15,1),%rcx
4d03(5): lea 0x1(%rdi,%r14,1),%rdx
4d08(4): lea 0x0(%rcx,%r14,1),%r8
4d0c(2): jmp 0x11(%rip)
4d0e(2): nop 
4d10(4): add $0x1,%rdx
4d14(3): cmp %rdx,%r8
4d17(6): jz 0xfffffe42(%rip)
4d1d(3): movzx (%rdx),%ecx
4d20(3): sub $0x5b,%ecx
4d23(3): cmp $0x21,%cl
4d26(2): jnbe 0xffffffea(%rip)
4d28(5): mov $0x1,%esi
4d2d(3): shl/sal %cl,%rsi
4d30(3): mov %rsi,%rcx
4d33(a): mov $0x8589934635,%rsi
4d3d(3): test %rsi,%rcx
4d40(2): jz 0xffffffd0(%rip)
4d42(5): mov 0x40(%rsp),%r14
4d47(5): mov 0x70(%rsp),%r13
4d4c(5): mov 0x30(%rsp),%rbp
4d51(8): mov $0x2,0x8(%rsp)
4d59(5): cmp $0x0,0xd(%rsp)
4d5e(2): jz 0x12(%rip)
4d60(2): test %al,%al
4d62(5): mov $0x4,%eax
4d67(5): cmove 0x8(%rsp),%eax
4d6c(4): mov %eax,0x8(%rsp)
4d70(4): sub $0x8,%rsp
4d74(3): mov %rbp,%rcx
4d77(3): mov %r13,%rsi
4d7a(4): push 0x68(%rsp)
4d7e(4): push 0x78(%rsp)
4d82(3): mov %r14,%rdi
4d85(2): push $0x0
4d87(8): mov 0x98(%rsp),%r9d
4d8f(5): mov 0x28(%rsp),%r8d
4d94(5): mov 0x30(%rsp),%rdx
4d99(4): and $0xfd,%r9d
4d9d(5): call 0xfffff433(%rip)
4da2(4): add $0x20,%rsp
4da6(3): mov %rax,%r15
4da9(8): mov 0xa8(%rsp),%rbx
4db1(9): xor $0x28,%rbx
4dba(3): mov %r15,%rax
4dbd(6): jnz 0x606(%rip)
4dc3(7): add $0xb8,%rsp
4dca(1): pop %rbx
4dcb(1): pop %rbp
4dcc(2): pop %r12
4dce(2): pop %r13
4dd0(2): pop %r14
4dd2(2): pop %r15
4dd4(1): ret near (%rsp)
4dd5(3): nop (%rax)
4dd8(3): mov %r11,%rbp
4ddb(5): jmp 0xffffff7e(%rip)
4de0(3): cmp %r15,%r13
4de3(2): jbe 0x7(%rip)
4de5(5): mov $0x27,0x0(%r14,%r15,1)
4dea(4): lea 0x1(%r15),%rax
4dee(3): cmp %rax,%r13
4df1(2): jbe 0x8(%rip)
4df3(6): mov $0x5c,0x1(%r14,%r15,1)
4df9(4): lea 0x2(%r15),%rax
4dfd(3): cmp %rax,%r13
4e00(6): jbe 0x5f2(%rip)
4e06(3): mov %r13,%rdx
4e09(6): mov $0x27,0x2(%r14,%r15,1)
4e0f(5): mov 0x50(%rsp),%r13
4e14(5): jmp 0xfffffbde(%rip)
4e19(3): mov %r12d,%eax
4e1c(5): mov $0x30,%ebx
4e21(3): xor %r12d,%r12d
4e24(5): jmp 0xfffff605(%rip)
4e29(6): mov $0x27,0x2(%r14,%r15,1)
4e2f(5): jmp 0xfffff9ca(%rip)
4e34(2): test %ebx,%ebx
4e36(6): jnz 0xfffff42d(%rip)
4e3c(5): mov $0x1,0xd(%rsp)
4e41(3): test %r13,%r13
4e44(6): jnz 0x596(%rip)
4e4a(7): lea 0x316c(%rip),%rax
4e51(9): mov $0x0,0x50(%rsp)
4e5a(5): mov $0x1,0xe(%rsp)
4e5f(5): mov $0x0,0x7c(%rsp)
4e64(3): xor %r12d,%r12d
4e67(5): mov $0x0,0xf(%rsp)
4e6c(9): mov $0x1,0x18(%rsp)
4e75(5): mov %rax,0x48(%rsp)
4e7a(6): mov $0x1,%r15d
4e80(8): mov $0x2,0x8(%rsp)
4e88(5): jmp 0xfffff41b(%rip)
4e8d(3): nop (%rax)
4e90(2): test %ebx,%ebx
4e92(6): jnz 0x3fb(%rip)
4e98(3): test %r13,%r13
4e9b(6): jz 0x22b(%rip)
4ea1(4): mov $0x22,(%r14)
4ea5(5): mov $0x1,0xe(%rsp)
4eaa(3): xor %r12d,%r12d
4ead(5): mov $0x0,0x7c(%rsp)
4eb2(9): mov $0x0,0x50(%rsp)
4ebb(7): lea 0x30f9(%rip),%rax
4ec2(5): mov $0x0,0xf(%rsp)
4ec7(5): mov $0x1,0xd(%rsp)
4ecc(9): mov $0x1,0x18(%rsp)
4ed5(6): mov $0x1,%r15d
4edb(5): mov %rax,0x48(%rsp)
4ee0(5): jmp 0xfffff3c3(%rip)
4ee5(7): lea 0x30cf(%rip),%rax
4eec(5): mov $0x1,0xe(%rsp)
4ef1(5): mov $0x0,0x7c(%rsp)
4ef6(3): xor %r12d,%r12d
4ef9(9): mov $0x0,0x50(%rsp)
4f02(5): mov $0x1,0xf(%rsp)
4f07(5): mov $0x1,0xd(%rsp)
4f0c(9): mov $0x1,0x18(%rsp)
4f15(3): xor %r15d,%r15d
4f18(5): mov %rax,0x48(%rsp)
4f1d(8): mov $0x5,0x8(%rsp)
4f25(5): jmp 0xfffff37e(%rip)
4f2a(5): mov $0x1,0xe(%rsp)
4f2f(5): mov $0x0,0x7c(%rsp)
4f34(3): xor %r12d,%r12d
4f37(9): mov $0x0,0x50(%rsp)
4f40(5): mov $0x0,0xf(%rsp)
4f45(3): xor %r15d,%r15d
4f48(5): mov $0x1,0xd(%rsp)
4f4d(9): mov $0x0,0x18(%rsp)
4f56(9): mov $0x0,0x48(%rsp)
4f5f(5): jmp 0xfffff344(%rip)
4f64(5): cmp $0xa,0x8(%rsp)
4f69(2): jz 0x58(%rip)
4f6b(7): lea 0x304d(%rip),%rsi
4f72(2): xor %edi,%edi
4f74(5): mov $0x5,%edx
4f79(5): call 0xffffc777(%rip)
4f7e(3): mov %rax,%rcx
4f81(5): mov %rax,0x68(%rsp)
4f86(7): lea 0x3032(%rip),%rax
4f8d(3): cmp %rax,%rcx
4f90(6): jz 0x39e(%rip)
4f96(7): lea 0x3020(%rip),%rsi
4f9d(2): xor %edi,%edi
4f9f(5): mov $0x5,%edx
4fa4(5): call 0xffffc74c(%rip)
4fa9(3): mov %rax,%rcx
4fac(5): mov %rax,0x60(%rsp)
4fb1(7): lea 0x3005(%rip),%rax
4fb8(3): cmp %rax,%rcx
4fbb(6): jz 0x389(%rip)
4fc1(3): xor %r15d,%r15d
4fc4(2): test %ebx,%ebx
4fc6(6): jz 0x1c7(%rip)
4fcc(2): test %ebx,%ebx
4fce(5): mov 0x60(%rsp),%rbx
4fd3(5): setnz 0xf(%rsp)
4fd8(3): xor %r12d,%r12d
4fdb(3): mov %rbx,%rdi
4fde(5): call 0xffffc732(%rip)
4fe3(5): mov %rbx,0x48(%rsp)
4fe8(5): mov %rax,0x18(%rsp)
4fed(5): mov $0x1,0xe(%rsp)
4ff2(5): mov $0x0,0x7c(%rsp)
4ff7(9): mov $0x0,0x50(%rsp)
5000(5): mov $0x1,0xd(%rsp)
5005(5): jmp 0xfffff29e(%rip)
500a(5): mov $0x1,0xe(%rsp)
500f(5): mov $0x0,0x7c(%rsp)
5014(3): xor %r12d,%r12d
5017(9): mov $0x0,0x50(%rsp)
5020(5): mov $0x0,0xf(%rsp)
5025(3): xor %r15d,%r15d
5028(5): mov $0x0,0xd(%rsp)
502d(9): mov $0x0,0x18(%rsp)
5036(9): mov $0x0,0x48(%rsp)
503f(5): jmp 0xfffff264(%rip)
5044(5): mov $0x1,0xe(%rsp)
5049(5): mov $0x0,0x7c(%rsp)
504e(3): xor %r12d,%r12d
5051(9): mov $0x0,0x50(%rsp)
505a(5): mov $0x1,0xf(%rsp)
505f(5): mov $0x1,0xd(%rsp)
5064(5): jmp 0xfffff21f(%rip)
5069(3): cmp %r15,%r13
506c(2): jbe 0x7(%rip)
506e(5): mov $0x30,0x0(%r14,%r15,1)
5073(4): lea 0x2(%rcx),%rax
5077(3): cmp %rax,%r13
507a(2): jbe 0x8(%rip)
507c(6): mov $0x30,0x2(%r14,%rcx,1)
5082(3): mov %r12d,%eax
5085(4): lea 0x3(%rcx),%r15
5089(3): xor %r12d,%r12d
508c(5): mov $0x30,%ebx
5091(5): jmp 0xfffff367(%rip)
5096(a): nop 0x0(%rax,%rax,1)
50a0(5): movzx 0xf(%rsp),%ebx
50a5(3): mov %r11,%rbp
50a8(4): mov %bl,0xd(%rsp)
50ac(5): jmp 0xfffffcad(%rip)
50b1(5): movzx 0xd(%rsp),%edx
50b6(3): xor %r12d,%r12d
50b9(5): jmp 0xfffffb07(%rip)
50be(3): xor %r10d,%r10d
50c1(5): jmp 0xfffffbbc(%rip)
50c6(9): mov $0x0,0x50(%rsp)
50cf(5): mov $0x1,0xe(%rsp)
50d4(3): xor %r12d,%r12d
50d7(5): mov $0x0,0x7c(%rsp)
50dc(5): jmp 0xfffffddf(%rip)
50e1(5): mov 0x30(%rsp),%r11
50e6(3): mov %r14,%rsi
50e9(3): mov %r13,%rcx
50ec(3): mov %rbx,%rax
50ef(3): mov %rbx,%rdi
50f2(6): movzx 0x7d(%rsp),%r8d
50f8(5): movzx 0x7e(%rsp),%ebx
50fd(8): mov 0x88(%rsp),%r9
5105(3): cmp %r11,%rsi
5108(6): movzx 0x7f(%rsp),%r10d
510e(8): mov 0x80(%rsp),%r15
5116(5): mov 0x40(%rsp),%r14
511b(5): mov 0x70(%rsp),%r13
5120(2): jnb 0x28(%rip)
5122(3): cmp $0x0,(%rcx)
5125(2): jnz 0x12(%rip)
5127(2): jmp 0x21(%rip)
5129(7): nop 0x0(%rax)
5130(5): cmp $0x0,0x0(%r9,%rax,1)
5135(2): jz 0x10(%rip)
5137(4): add $0x1,%rax
513b(5): lea 0x0(%rbp,%rax,1),%rdx
5140(3): cmp %rdx,%r11
5143(2): jnbe 0xffffffed(%rip)
5145(3): mov %rax,%rdi
5148(5): movzx 0xd(%rsp),%edx
514d(3): xor %r12d,%r12d
5150(5): jmp 0xfffffa66(%rip)
5155(3): mov %rbx,%rdi
5158(6): movzx 0x7d(%rsp),%r8d
515e(5): movzx 0x7e(%rsp),%ebx
5163(6): movzx 0x7f(%rsp),%r10d
5169(8): mov 0x80(%rsp),%r15
5171(3): xor %r12d,%r12d
5174(5): mov 0x40(%rsp),%r14
5179(5): mov 0x70(%rsp),%r13
517e(5): mov 0x30(%rsp),%r11
5183(5): movzx 0xd(%rsp),%edx
5188(5): jmp 0xfffffa2e(%rip)
518d(5): mov 0x68(%rsp),%rdx
5192(3): movzx (%rdx),%eax
5195(2): test %al,%al
5197(6): jz 0xfffffe35(%rip)
519d(3): nop (%rax)
51a0(3): cmp %r15,%r13
51a3(2): jbe 0x6(%rip)
51a5(4): mov %al,0x0(%r14,%r15,1)
51a9(4): add $0x1,%r15
51ad(5): movzx 0x0(%rdx,%r15,1),%eax
51b2(2): test %al,%al
51b4(2): jnz 0xffffffec(%rip)
51b6(5): jmp 0xfffffe16(%rip)
51bb(2): mov %edx,%eax
51bd(5): jmp 0xfffff55a(%rip)
51c2(4): movzx 0x0(%rax,%rcx,1),%ebx
51c6(3): cmp $0x3e,%bl
51c9(6): jnbe 0xfffff877(%rip)
51cf(a): mov $0x8070630310989004800,%rax
51d9(4): bt %rbx,%rax
51dd(6): jnb 0xfffff863(%rip)
51e3(5): cmp $0x0,0xf(%rsp)
51e8(6): jnz 0x1ea(%rip)
51ee(3): cmp %r15,%r13
51f1(2): jbe 0x7(%rip)
51f3(5): mov $0x3f,0x0(%r14,%r15,1)
51f8(4): lea 0x1(%r15),%rax
51fc(3): cmp %rax,%r13
51ff(2): jbe 0x8(%rip)
5201(6): mov $0x22,0x1(%r14,%r15,1)
5207(4): lea 0x2(%r15),%rax
520b(3): cmp %rax,%r13
520e(2): jbe 0x8(%rip)
5210(6): mov $0x22,0x2(%r14,%r15,1)
5216(4): lea 0x3(%r15),%rax
521a(3): cmp %rax,%r13
521d(2): jbe 0x8(%rip)
521f(6): mov $0x3f,0x3(%r14,%r15,1)
5225(4): add $0x4,%r15
5229(2): xor %edx,%edx
522b(3): xor %r12d,%r12d
522e(2): xor %eax,%eax
5230(3): mov %rcx,%rbp
5233(5): jmp 0xfffff1c5(%rip)
5238(2): test %ebx,%ebx
523a(6): jz 0x18e(%rip)
5240(7): lea 0x2d76(%rip),%rax
5247(5): mov $0x1,0xe(%rsp)
524c(5): mov $0x0,0x7c(%rsp)
5251(3): xor %r12d,%r12d
5254(9): mov $0x0,0x50(%rsp)
525d(5): mov $0x1,0xf(%rsp)
5262(5): mov $0x0,0xd(%rsp)
5267(9): mov $0x1,0x18(%rsp)
5270(3): xor %r15d,%r15d
5273(5): mov %rax,0x48(%rsp)
5278(5): jmp 0xfffff02b(%rip)
527d(3): nop (%rax)
5280(3): mov %r11,%rbp
5283(5): movzx 0xf(%rsp),%eax
5288(5): jmp 0xfffffad1(%rip)
528d(7): lea 0x2d27(%rip),%rax
5294(5): mov $0x1,0xe(%rsp)
5299(5): mov $0x0,0x7c(%rsp)
529e(3): xor %r12d,%r12d
52a1(9): mov $0x0,0x50(%rsp)
52aa(5): mov $0x1,0xf(%rsp)
52af(5): mov $0x1,0xd(%rsp)
52b4(9): mov $0x1,0x18(%rsp)
52bd(3): xor %r15d,%r15d
52c0(5): mov %rax,0x48(%rsp)
52c5(5): jmp 0xffffefde(%rip)
52ca(2): mov %edx,%eax
52cc(5): mov 0x48(%rsp),%rbx
52d1(3): test %rbx,%rbx
52d4(2): jz 0x2e(%rip)
52d6(2): test %al,%al
52d8(2): jz 0x2a(%rip)
52da(3): movzx (%rbx),%ecx
52dd(3): mov %rbx,%rax
52e0(2): test %cl,%cl
52e2(2): jz 0x20(%rip)
52e4(3): mov %r15,%rdx
52e7(3): sub %r15,%rax
52ea(3): cmp %rdx,%r13
52ed(2): jbe 0x6(%rip)
52ef(4): mov %cl,0x0(%r14,%rdx,1)
52f3(4): add $0x1,%rdx
52f7(4): movzx 0x0(%rax,%rdx,1),%ecx
52fb(2): test %cl,%cl
52fd(2): jnz 0xffffffed(%rip)
52ff(3): mov %rdx,%r15
5302(3): cmp %r15,%r13
5305(6): jbe 0xfffffaa4(%rip)
530b(5): mov $0x0,0x0(%r14,%r15,1)
5310(5): jmp 0xfffffa99(%rip)
5315(5): cmp $0x2,0x8(%rsp)
531a(5): movzx 0xf(%rsp),%ebx
531f(3): mov %r11,%rbp
5322(3): setz %al
5325(4): mov %bl,0xd(%rsp)
5329(5): jmp 0xfffffa30(%rip)
532e(4): mov 0x8(%rsp),%esi
5332(3): mov %rcx,%rdi
5335(5): call 0xffffedab(%rip)
533a(5): mov %rax,0x68(%rsp)
533f(5): jmp 0xfffffc57(%rip)
5344(4): mov 0x8(%rsp),%esi
5348(3): mov %rcx,%rdi
534b(5): call 0xffffed95(%rip)
5350(5): mov %rax,0x60(%rsp)
5355(5): jmp 0xfffffc6c(%rip)
535a(5): movzx 0xf(%rsp),%ebx
535f(3): mov %r11,%rbp
5362(2): mov %edx,%eax
5364(4): mov %bl,0xd(%rsp)
5368(5): jmp 0xfffff9f1(%rip)
536d(4): sub $0x8,%rsp
5371(6): mov $0x5,%r8d
5377(3): mov %r11,%rcx
537a(4): push 0x68(%rsp)
537e(4): push 0x78(%rsp)
5382(3): mov %r14,%rdi
5385(4): push 0x38(%rsp)
5389(8): mov 0x98(%rsp),%r9d
5391(5): mov 0x30(%rsp),%rdx
5396(5): mov 0x70(%rsp),%rsi
539b(5): call 0xffffee35(%rip)
53a0(4): add $0x20,%rsp
53a4(3): mov %rax,%r15
53a7(5): jmp 0xfffffa02(%rip)
53ac(5): movzx 0x7c(%rsp),%eax
53b1(5): jmp 0xffffff1b(%rip)
53b6(8): mov $0x2,0x8(%rsp)
53be(5): jmp 0xfffff99b(%rip)
53c3(5): call 0xffffc35d(%rip)
53c8(5): mov $0x0,0xd(%rsp)
53cd(5): jmp 0xfffffa74(%rip)
53d2(3): mov %r11,%rbp
53d5(5): jmp 0xfffff99b(%rip)
53da(5): mov $0x1,0xe(%rsp)
53df(2): xor %eax,%eax
53e1(3): xor %r12d,%r12d
53e4(9): mov $0x0,0x50(%rsp)
53ed(5): jmp 0xfffff5a7(%rip)
53f2(3): mov %r13,%rdx
53f5(5): mov 0x50(%rsp),%r13
53fa(5): jmp 0xfffff5f8(%rip)
53ff(5): call 0xffffc261(%rip)

"quotearg_n_options" :
5410(2): push %r15
5412(2): push %r14
5414(3): movsxd %edi,%r15
5417(2): push %r13
5419(2): push %r12
541b(3): mov %rdx,%r14
541e(1): push %rbp
541f(1): push %rbx
5420(3): mov %rcx,%rbp
5423(4): sub $0x28,%rsp
5427(5): mov %rsi,0x8(%rsp)
542c(5): call 0xffffc244(%rip)
5431(3): mov %rax,%r13
5434(2): mov (%rax),%eax
5436(3): test %r15d,%r15d
5439(7): mov 0x205c40(%rip),%rbx
5440(4): mov %eax,0x18(%rsp)
5444(6): js 0x16d(%rip)
544a(7): cmp %r15d,0x205c27(%rip)
5451(2): jnle 0x64(%rip)
5453(7): cmp $0x7fffffff,%r15d
545a(6): jz 0x15c(%rip)
5460(4): lea 0x1(%r15),%r12d
5464(7): lea 0x205c25(%rip),%rax
546b(3): movsxd %r12d,%rsi
546e(4): shl/sal $0x4,%rsi
5472(3): cmp %rax,%rbx
5475(6): jz 0x11b(%rip)
547b(3): mov %rbx,%rdi
547e(5): call 0xf82(%rip)
5483(3): mov %rax,%rbx
5486(7): mov %rax,0x205bf3(%rip)
548d(7): movsxd 0x205be4(%rip),%rdi
5494(3): mov %r12d,%edx
5497(2): xor %esi,%esi
5499(2): sub %edi,%edx
549b(4): shl/sal $0x4,%rdi
549f(3): movsxd %edx,%rdx
54a2(3): add %rbx,%rdi
54a5(4): shl/sal $0x4,%rdx
54a9(5): call 0xffffc2f7(%rip)
54ae(7): mov %r12d,0x205bc3(%rip)
54b5(3): mov 0x4(%rbp),%eax
54b8(4): shl/sal $0x4,%r15
54bc(4): sub $0x8,%rsp
54c0(3): add %r15,%rbx
54c3(4): lea 0x8(%rbp),%r15
54c7(4): mov 0x0(%rbp),%r8d
54cb(3): mov (%rbx),%r11
54ce(4): mov 0x8(%rbx),%r12
54d2(3): mov %r14,%rcx
54d5(3): or $0x1,%eax
54d8(4): mov %eax,0x24(%rsp)
54dc(3): push 0x30(%rbp)
54df(3): mov %eax,%r9d
54e2(3): push 0x28(%rbp)
54e5(2): push %r15
54e7(3): mov %r11,%rsi
54ea(5): mov 0x28(%rsp),%rdx
54ef(3): mov %r12,%rdi
54f2(5): mov %r11,0x30(%rsp)
54f7(5): call 0xffffecd9(%rip)
54fc(4): add $0x20,%rsp
5500(5): mov 0x10(%rsp),%r11
5505(3): cmp %rax,%r11
5508(2): jnbe 0x69(%rip)
550a(4): lea 0x1(%rax),%rsi
550e(7): lea 0x205ceb(%rip),%rax
5515(3): cmp %rax,%r12
5518(3): mov %rsi,(%rbx)
551b(2): jz 0x14(%rip)
551d(3): mov %r12,%rdi
5520(5): mov %rsi,0x10(%rsp)
5525(5): call 0xffffc12b(%rip)
552a(5): mov 0x10(%rsp),%rsi
552f(3): mov %rsi,%rdi
5532(5): mov %rsi,0x10(%rsp)
5537(5): call 0xe69(%rip)
553c(4): sub $0x8,%rsp
5540(4): mov %rax,0x8(%rbx)
5544(4): mov 0x0(%rbp),%r8d
5548(3): push 0x30(%rbp)
554b(3): push 0x28(%rbp)
554e(3): mov %r14,%rcx
5551(2): push %r15
5553(5): mov 0x3c(%rsp),%r9d
5558(3): mov %rax,%rdi
555b(5): mov 0x28(%rsp),%rdx
5560(5): mov 0x30(%rsp),%rsi
5565(3): mov %rax,%r12
5568(5): call 0xffffec68(%rip)
556d(4): add $0x20,%rsp
5571(4): mov 0x18(%rsp),%eax
5575(4): mov %eax,0x0(%r13)
5579(4): add $0x28,%rsp
557d(3): mov %r12,%rax
5580(1): pop %rbx
5581(1): pop %rbp
5582(2): pop %r12
5584(2): pop %r13
5586(2): pop %r14
5588(2): pop %r15
558a(1): ret near (%rsp)
558b(5): nop 0x0(%rax,%rax,1)
5590(2): xor %edi,%edi
5592(5): call 0xe6e(%rip)
5597(8): movdqa 0x205af1(%rip),%xmm0
559f(3): mov %rax,%rbx
55a2(7): mov %rax,0x205ad7(%rip)
55a9(3): movups %xmm0,(%rax)
55ac(5): jmp 0xfffffee1(%rip)
55b1(5): call 0xffffc0af(%rip)
55b6(5): call 0x103a(%rip)

"clone_quoting_options" :
55c0(2): push %r12
55c2(1): push %rbp
55c3(1): push %rbx
55c4(3): mov %rdi,%rbx
55c7(5): call 0xffffc0a9(%rip)
55cc(3): mov (%rax),%r12d
55cf(3): mov %rax,%rbp
55d2(7): lea 0x205d27(%rip),%rax
55d9(3): test %rbx,%rbx
55dc(5): mov $0x38,%esi
55e1(4): cmove %rax,%rbx
55e5(3): mov %rbx,%rdi
55e8(5): call 0xfb8(%rip)
55ed(4): mov %r12d,0x0(%rbp)
55f1(1): pop %rbx
55f2(1): pop %rbp
55f3(2): pop %r12
55f5(1): ret near (%rsp)

"get_quoting_style" :
5600(7): lea 0x205cf9(%rip),%rax
5607(3): test %rdi,%rdi
560a(4): cmove %rax,%rdi
560e(2): mov (%rdi),%eax
5610(1): ret near (%rsp)

"set_quoting_style" :
5620(7): lea 0x205cd9(%rip),%rax
5627(3): test %rdi,%rdi
562a(4): cmove %rax,%rdi
562e(2): mov %esi,(%rdi)
5630(1): ret near (%rsp)

"set_char_quoting" :
5640(7): lea 0x205cb9(%rip),%rax
5647(3): test %rdi,%rdi
564a(2): mov %esi,%ecx
564c(4): cmove %rax,%rdi
5650(2): mov %esi,%eax
5652(3): and $0x1f,%ecx
5655(3): shr $0x5,%al
5658(3): movzx %al,%eax
565b(5): lea 0x8(%rdi,%rax,4),%rdi
5660(2): mov (%rdi),%esi
5662(2): mov %esi,%eax
5664(2): shr %cl,%eax
5666(2): xor %eax,%edx
5668(3): and $0x1,%eax
566b(3): and $0x1,%edx
566e(2): shl/sal %cl,%edx
5670(2): xor %esi,%edx
5672(2): mov %edx,(%rdi)
5674(1): ret near (%rsp)

"set_quoting_flags" :
5680(7): lea 0x205c79(%rip),%rax
5687(3): test %rdi,%rdi
568a(4): cmove %rax,%rdi
568e(3): mov 0x4(%rdi),%eax
5691(3): mov %esi,0x4(%rdi)
5694(1): ret near (%rsp)

"set_custom_quoting" :
56a0(7): lea 0x205c59(%rip),%rax
56a7(3): test %rdi,%rdi
56aa(4): cmove %rax,%rdi
56ae(3): test %rsi,%rsi
56b1(6): mov $0xa,(%rdi)
56b7(2): jz 0x10(%rip)
56b9(3): test %rdx,%rdx
56bc(2): jz 0xb(%rip)
56be(4): mov %rsi,0x28(%rdi)
56c2(4): mov %rdx,0x30(%rdi)
56c6(1): ret near (%rsp)
56c7(4): sub $0x8,%rsp
56cb(5): call 0xffffbf95(%rip)

"quotearg_buffer" :
56d0(2): push %r15
56d2(2): push %r14
56d4(7): lea 0x205c25(%rip),%rax
56db(2): push %r13
56dd(2): push %r12
56df(3): mov %rdi,%r13
56e2(1): push %rbp
56e3(1): push %rbx
56e4(3): mov %r8,%rbx
56e7(3): mov %rsi,%r14
56ea(3): mov %rdx,%r15
56ed(4): sub $0x18,%rsp
56f1(3): test %r8,%r8
56f4(4): cmove %rax,%rbx
56f8(5): mov %rcx,0x8(%rsp)
56fd(5): call 0xffffbf73(%rip)
5702(3): mov (%rax),%r12d
5705(3): mov %rax,%rbp
5708(4): lea 0x8(%rbx),%rax
570c(4): sub $0x8,%rsp
5710(4): mov 0x4(%rbx),%r9d
5714(3): push 0x30(%rbx)
5717(3): mov (%rbx),%r8d
571a(3): push 0x28(%rbx)
571d(3): mov %r15,%rdx
5720(1): push %rax
5721(5): mov 0x28(%rsp),%rcx
5726(3): mov %r14,%rsi
5729(3): mov %r13,%rdi
572c(5): call 0xffffeaa4(%rip)
5731(4): mov %r12d,0x0(%rbp)
5735(4): add $0x38,%rsp
5739(1): pop %rbx
573a(1): pop %rbp
573b(2): pop %r12
573d(2): pop %r13
573f(2): pop %r14
5741(2): pop %r15
5743(1): ret near (%rsp)

"quotearg_alloc_mem" :
5750(2): push %r15
5752(2): push %r14
5754(7): lea 0x205ba5(%rip),%rax
575b(2): push %r13
575d(2): push %r12
575f(3): mov %rdx,%r12
5762(1): push %rbp
5763(1): push %rbx
5764(3): mov %rcx,%rbx
5767(3): mov %rdi,%r14
576a(3): mov %rsi,%r15
576d(4): sub $0x38,%rsp
5771(3): test %rcx,%rcx
5774(4): cmove %rax,%rbx
5778(2): xor %ebp,%ebp
577a(5): call 0xffffbef6(%rip)
577f(3): test %r12,%r12
5782(3): mov %rax,%r13
5785(2): mov (%rax),%eax
5787(4): setz %bpl
578b(3): or 0x4(%rbx),%ebp
578e(4): lea 0x8(%rbx),%r10
5792(4): sub $0x8,%rsp
5796(3): mov (%rbx),%r8d
5799(3): mov %r15,%rcx
579c(4): mov %eax,0x14(%rsp)
57a0(3): push 0x30(%rbx)
57a3(3): mov %r14,%rdx
57a6(3): push 0x28(%rbx)
57a9(2): push %r10
57ab(2): xor %esi,%esi
57ad(3): mov %ebp,%r9d
57b0(2): xor %edi,%edi
57b2(5): mov %r10,0x40(%rsp)
57b7(5): call 0xffffea19(%rip)
57bc(4): lea 0x1(%rax),%rsi
57c0(5): mov %rax,0x48(%rsp)
57c5(4): add $0x20,%rsp
57c9(3): mov %rsi,%rdi
57cc(5): mov %rsi,0x18(%rsp)
57d1(5): call 0xbcf(%rip)
57d6(5): mov %rax,0x10(%rsp)
57db(4): sub $0x8,%rsp
57df(3): push 0x30(%rbx)
57e2(3): push 0x28(%rbx)
57e5(5): mov 0x38(%rsp),%r10
57ea(3): mov %ebp,%r9d
57ed(3): mov (%rbx),%r8d
57f0(3): mov %r15,%rcx
57f3(3): mov %r14,%rdx
57f6(3): mov %rax,%rdi
57f9(2): push %r10
57fb(5): mov 0x38(%rsp),%rsi
5800(5): call 0xffffe9d0(%rip)
5805(4): mov 0x2c(%rsp),%eax
5809(4): add $0x20,%rsp
580d(3): test %r12,%r12
5810(4): mov %eax,0x0(%r13)
5814(2): jz 0xb(%rip)
5816(5): mov 0x28(%rsp),%r11
581b(4): mov %r11,(%r12)
581f(5): mov 0x10(%rsp),%rax
5824(4): add $0x38,%rsp
5828(1): pop %rbx
5829(1): pop %rbp
582a(2): pop %r12
582c(2): pop %r13
582e(2): pop %r14
5830(2): pop %r15
5832(1): ret near (%rsp)

"quotearg_alloc" :
5840(3): mov %rdx,%rcx
5843(2): xor %edx,%edx
5845(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5850(6): mov 0x205822(%rip),%eax
5856(2): push %r12
5858(7): mov 0x205821(%rip),%r12
585f(1): push %rbp
5860(1): push %rbx
5861(3): cmp $0x1,%eax
5864(2): jle 0x2d(%rip)
5866(3): sub $0x2,%eax
5869(5): lea 0x18(%r12),%rbx
586e(4): shl/sal $0x4,%rax
5872(5): lea 0x28(%r12,%rax,1),%rbp
5877(9): nop 0x0(%rax,%rax,1)
5880(3): mov (%rbx),%rdi
5883(4): add $0x10,%rbx
5887(5): call 0xffffbdc9(%rip)
588c(3): cmp %rbp,%rbx
588f(2): jnz 0xfffffff1(%rip)
5891(5): mov 0x8(%r12),%rdi
5896(7): lea 0x205963(%rip),%rbx
589d(3): cmp %rbx,%rdi
58a0(2): jz 0x19(%rip)
58a2(5): call 0xffffbdae(%rip)
58a7(b): mov $0x100,0x2057de(%rip)
58b2(7): mov %rbx,0x2057df(%rip)
58b9(7): lea 0x2057d0(%rip),%rbx
58c0(3): cmp %rbx,%r12
58c3(2): jz 0x11(%rip)
58c5(3): mov %r12,%rdi
58c8(5): call 0xffffbd88(%rip)
58cd(7): mov %rbx,0x2057ac(%rip)
58d4(1): pop %rbx
58d5(a): mov $0x1,0x205799(%rip)
58df(1): pop %rbp
58e0(2): pop %r12
58e2(1): ret near (%rsp)

"quotearg_n" :
58f0(7): lea 0x205a09(%rip),%rcx
58f7(7): mov $0xffffffff,%rdx
58fe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5910(7): lea 0x2059e9(%rip),%rcx
5917(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5920(7): lea 0x2059d9(%rip),%rcx
5927(3): mov %rdi,%rsi
592a(7): mov $0xffffffff,%rdx
5931(2): xor %edi,%edi
5933(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5940(7): lea 0x2059b9(%rip),%rcx
5947(3): mov %rsi,%rdx
594a(3): mov %rdi,%rsi
594d(2): xor %edi,%edi
594f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5960(4): sub $0x48,%rsp
5964(3): mov %rdx,%rax
5967(9): mov $0x28,%rdx
5970(5): mov %rdx,0x38(%rsp)
5975(2): xor %edx,%edx
5977(3): cmp $0xa,%esi
597a(2): jz 0x6a(%rip)
597c(3): mov %esi,(%rsp)
597f(3): mov %rsp,%rcx
5982(7): mov $0xffffffff,%rdx
5989(3): mov %rax,%rsi
598c(9): mov $0x0,0x4(%rsp)
5995(9): mov $0x0,0xc(%rsp)
599e(9): mov $0x0,0x14(%rsp)
59a7(9): mov $0x0,0x1c(%rsp)
59b0(9): mov $0x0,0x24(%rsp)
59b9(9): mov $0x0,0x2c(%rsp)
59c2(8): mov $0x0,0x34(%rsp)
59ca(5): call 0xfffffa46(%rip)
59cf(5): mov 0x38(%rsp),%rcx
59d4(9): xor $0x28,%rcx
59dd(2): jnz 0xc(%rip)
59df(4): add $0x48,%rsp
59e3(1): ret near (%rsp)
59e4(5): call 0xffffbc7c(%rip)
59e9(5): call 0xffffbd37(%rip)

"quotearg_n_style_mem" :
59f0(4): sub $0x48,%rsp
59f4(3): mov %rdx,%rax
59f7(3): mov %rcx,%rdx
59fa(9): mov $0x28,%rcx
5a03(5): mov %rcx,0x38(%rsp)
5a08(2): xor %ecx,%ecx
5a0a(3): cmp $0xa,%esi
5a0d(2): jz 0x63(%rip)
5a0f(3): mov %esi,(%rsp)
5a12(3): mov %rsp,%rcx
5a15(3): mov %rax,%rsi
5a18(9): mov $0x0,0x4(%rsp)
5a21(9): mov $0x0,0xc(%rsp)
5a2a(9): mov $0x0,0x14(%rsp)
5a33(9): mov $0x0,0x1c(%rsp)
5a3c(9): mov $0x0,0x24(%rsp)
5a45(9): mov $0x0,0x2c(%rsp)
5a4e(8): mov $0x0,0x34(%rsp)
5a56(5): call 0xfffff9ba(%rip)
5a5b(5): mov 0x38(%rsp),%rdx
5a60(9): xor $0x28,%rdx
5a69(2): jnz 0xc(%rip)
5a6b(4): add $0x48,%rsp
5a6f(1): ret near (%rsp)
5a70(5): call 0xffffbbf0(%rip)
5a75(5): call 0xffffbcab(%rip)

"quotearg_style" :
5a80(3): mov %rsi,%rdx
5a83(2): mov %edi,%esi
5a85(2): xor %edi,%edi
5a87(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5a90(3): mov %rdx,%rcx
5a93(3): mov %rsi,%rdx
5a96(2): mov %edi,%esi
5a98(2): xor %edi,%edi
5a9a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5aa0(4): sub $0x48,%rsp
5aa4(2): mov %edx,%ecx
5aa6(9): mov $0x28,%rax
5aaf(5): mov %rax,0x38(%rsp)
5ab4(2): xor %eax,%eax
5ab6(7): mov 0x205873(%rip),%rax
5abd(3): mov %rsp,%r8
5ac0(3): and $0x1f,%ecx
5ac3(8): movdqa 0x205835(%rip),%xmm0
5acb(5): mov %rax,0x30(%rsp)
5ad0(2): mov %edx,%eax
5ad2(4): movaps %xmm0,(%rsp)
5ad6(3): shr $0x5,%al
5ad9(3): movzx %al,%eax
5adc(5): lea 0x8(%r8,%rax,4),%r9
5ae1(8): movdqa 0x205827(%rip),%xmm0
5ae9(5): movaps %xmm0,0x10(%rsp)
5aee(8): movdqa 0x20582a(%rip),%xmm0
5af6(5): movaps %xmm0,0x20(%rsp)
5afb(3): mov (%r9),%edx
5afe(2): mov %edx,%eax
5b00(2): shr %cl,%eax
5b02(2): not %eax
5b04(3): and $0x1,%eax
5b07(2): shl/sal %cl,%eax
5b09(3): mov %r8,%rcx
5b0c(2): xor %edx,%eax
5b0e(3): mov %rsi,%rdx
5b11(3): mov %rdi,%rsi
5b14(3): mov %eax,(%r9)
5b17(2): xor %edi,%edi
5b19(5): call 0xfffff8f7(%rip)
5b1e(5): mov 0x38(%rsp),%rsi
5b23(9): xor $0x28,%rsi
5b2c(2): jnz 0x7(%rip)
5b2e(4): add $0x48,%rsp
5b32(1): ret near (%rsp)
5b33(5): call 0xffffbbed(%rip)

"quotearg_char" :
5b40(4): movsx %sil,%edx
5b44(7): mov $0xffffffff,%rsi
5b4b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5b50(5): mov $0x3a,%edx
5b55(7): mov $0xffffffff,%rsi
5b5c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5b70(5): mov $0x3a,%edx
5b75(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5b80(4): sub $0x48,%rsp
5b84(3): mov %rdx,%rax
5b87(9): mov $0x28,%rdx
5b90(5): mov %rdx,0x38(%rsp)
5b95(2): xor %edx,%edx
5b97(3): cmp $0xa,%esi
5b9a(2): jz 0x6a(%rip)
5b9c(3): mov %esi,(%rsp)
5b9f(3): mov %rsp,%rcx
5ba2(7): mov $0xffffffff,%rdx
5ba9(3): mov %rax,%rsi
5bac(9): mov $0x0,0x4(%rsp)
5bb5(9): mov $0x4000000,0xc(%rsp)
5bbe(9): mov $0x0,0x14(%rsp)
5bc7(9): mov $0x0,0x1c(%rsp)
5bd0(9): mov $0x0,0x24(%rsp)
5bd9(9): mov $0x0,0x2c(%rsp)
5be2(8): mov $0x0,0x34(%rsp)
5bea(5): call 0xfffff826(%rip)
5bef(5): mov 0x38(%rsp),%rcx
5bf4(9): xor $0x28,%rcx
5bfd(2): jnz 0xc(%rip)
5bff(4): add $0x48,%rsp
5c03(1): ret near (%rsp)
5c04(5): call 0xffffba5c(%rip)
5c09(5): call 0xffffbb17(%rip)

"quotearg_n_custom_mem" :
5c10(4): sub $0x48,%rsp
5c14(3): mov %rcx,%r9
5c17(7): mov 0x205712(%rip),%rcx
5c1e(8): movdqa 0x2056da(%rip),%xmm0
5c26(9): mov $0x28,%rax
5c2f(5): mov %rax,0x38(%rsp)
5c34(2): xor %eax,%eax
5c36(4): movaps %xmm0,(%rsp)
5c3a(3): test %rsi,%rsi
5c3d(5): mov %rcx,0x30(%rsp)
5c42(7): mov $0xa,(%rsp)
5c49(8): movdqa 0x2056bf(%rip),%xmm0
5c51(5): movaps %xmm0,0x10(%rsp)
5c56(8): movdqa 0x2056c2(%rip),%xmm0
5c5e(5): movaps %xmm0,0x20(%rsp)
5c63(2): jz 0x34(%rip)
5c65(3): test %rdx,%rdx
5c68(2): jz 0x2f(%rip)
5c6a(5): mov %rsi,0x28(%rsp)
5c6f(5): mov %rdx,0x30(%rsp)
5c74(3): mov %rsp,%rcx
5c77(3): mov %r8,%rdx
5c7a(3): mov %r9,%rsi
5c7d(5): call 0xfffff793(%rip)
5c82(5): mov 0x38(%rsp),%rdi
5c87(9): xor $0x28,%rdi
5c90(2): jnz 0xc(%rip)
5c92(4): add $0x48,%rsp
5c96(1): ret near (%rsp)
5c97(5): call 0xffffb9c9(%rip)
5c9c(5): call 0xffffba84(%rip)

"quotearg_n_custom" :
5cb0(7): mov $0xffffffff,%r8
5cb7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5cc0(3): mov %rdx,%rcx
5cc3(7): mov $0xffffffff,%r8
5cca(3): mov %rsi,%rdx
5ccd(3): mov %rdi,%rsi
5cd0(2): xor %edi,%edi
5cd2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5ce0(3): mov %rcx,%r8
5ce3(3): mov %rdx,%rcx
5ce6(3): mov %rsi,%rdx
5ce9(3): mov %rdi,%rsi
5cec(2): xor %edi,%edi
5cee(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5d00(7): lea 0x205339(%rip),%rcx
5d07(5): jmp 0xfffff709(%rip)

"quote_mem" :
5d10(7): lea 0x205329(%rip),%rcx
5d17(3): mov %rsi,%rdx
5d1a(3): mov %rdi,%rsi
5d1d(2): xor %edi,%edi
5d1f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5d30(7): lea 0x205309(%rip),%rcx
5d37(7): mov $0xffffffff,%rdx
5d3e(5): jmp 0xfffff6d2(%rip)

"quote" :
5d50(7): lea 0x2052e9(%rip),%rcx
5d57(3): mov %rdi,%rsi
5d5a(7): mov $0xffffffff,%rdx
5d61(2): xor %edi,%edi
5d63(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
5d70(5): mov $0x3,%edx
5d75(2): xor %esi,%esi
5d77(2): xor %eax,%eax
5d79(5): jmp 0xeb7(%rip)

"version_etc_arn" :
5d80(2): push %r15
5d82(2): push %r14
5d84(2): push %r13
5d86(2): push %r12
5d88(3): mov %r9,%r12
5d8b(1): push %rbp
5d8c(1): push %rbx
5d8d(3): mov %rdi,%rbp
5d90(3): mov %r8,%rbx
5d93(4): sub $0x28,%rsp
5d97(3): test %rsi,%rsi
5d9a(6): jz 0x11e(%rip)
5da0(3): mov %rdx,%r8
5da3(7): lea 0x26de(%rip),%rdx
5daa(3): mov %rcx,%r9
5dad(2): xor %eax,%eax
5daf(3): mov %rsi,%rcx
5db2(5): mov $0x1,%esi
5db7(5): call 0xffffbba9(%rip)
5dbc(7): lea 0x26d8(%rip),%rsi
5dc3(2): xor %edi,%edi
5dc5(5): mov $0x5,%edx
5dca(5): call 0xffffb926(%rip)
5dcf(7): lea 0x29ea(%rip),%rdx
5dd6(3): mov %rax,%rcx
5dd9(6): mov $0x7e3,%r8d
5ddf(5): mov $0x1,%esi
5de4(3): mov %rbp,%rdi
5de7(2): xor %eax,%eax
5de9(5): call 0xffffbb77(%rip)
5dee(7): lea 0x2733(%rip),%rsi
5df5(2): xor %edi,%edi
5df7(5): mov $0x5,%edx
5dfc(5): call 0xffffb8f4(%rip)
5e01(3): mov %rbp,%rsi
5e04(3): mov %rax,%rdi
5e07(5): call 0xffffb9e9(%rip)
5e0c(4): cmp $0x9,%r12
5e10(6): jnbe 0x340(%rip)
5e16(7): lea 0x2967(%rip),%rdx
5e1d(4): movsxd 0x0(%rdx,%r12,4),%rax
5e21(3): add %rdx,%rax
5e24(2): jmp %rax
5e26(a): nop 0x0(%rax,%rax,1)
5e30(4): mov 0x38(%rbx),%r9
5e34(4): mov 0x10(%rbx),%rax
5e38(7): lea 0x2859(%rip),%rsi
5e3f(4): mov 0x8(%rbx),%r8
5e43(5): mov $0x5,%edx
5e48(2): xor %edi,%edi
5e4a(4): mov 0x30(%rbx),%r13
5e4e(4): mov 0x28(%rbx),%r12
5e52(5): mov %r9,0x10(%rsp)
5e57(4): mov 0x20(%rbx),%r15
5e5b(4): mov 0x18(%rbx),%r14
5e5f(4): mov %rax,(%rsp)
5e63(5): mov %r8,0x8(%rsp)
5e68(3): mov (%rbx),%rbx
5e6b(5): call 0xffffb885(%rip)
5e70(4): sub $0x8,%rsp
5e74(5): mov 0x18(%rsp),%r9
5e79(3): mov %rax,%rdx
5e7c(3): mov %rbx,%rcx
5e7f(5): mov $0x1,%esi
5e84(3): mov %rbp,%rdi
5e87(2): xor %eax,%eax
5e89(2): push %r9
5e8b(2): push %r13
5e8d(2): push %r12
5e8f(2): push %r15
5e91(2): push %r14
5e93(5): mov 0x30(%rsp),%r9
5e98(5): mov 0x38(%rsp),%r8
5e9d(5): call 0xffffbac3(%rip)
5ea2(4): add $0x30,%rsp
5ea6(4): add $0x28,%rsp
5eaa(1): pop %rbx
5eab(1): pop %rbp
5eac(2): pop %r12
5eae(2): pop %r13
5eb0(2): pop %r14
5eb2(2): pop %r15
5eb4(1): ret near (%rsp)
5eb5(3): nop (%rax)
5eb8(3): mov %rcx,%r8
5ebb(3): mov %rdx,%rcx
5ebe(7): lea 0x25cf(%rip),%rdx
5ec5(5): mov $0x1,%esi
5eca(2): xor %eax,%eax
5ecc(5): call 0xffffba94(%rip)
5ed1(5): jmp 0xfffffeeb(%rip)
5ed6(a): nop 0x0(%rax,%rax,1)
5ee0(4): mov 0x40(%rbx),%r10
5ee4(4): mov 0x38(%rbx),%r9
5ee8(7): lea 0x27d9(%rip),%rsi
5eef(4): mov 0x10(%rbx),%rax
5ef3(4): mov 0x8(%rbx),%r8
5ef7(5): mov $0x5,%edx
5efc(4): mov 0x30(%rbx),%r13
5f00(4): mov 0x28(%rbx),%r12
5f04(4): mov 0x20(%rbx),%r15
5f08(4): mov 0x18(%rbx),%r14
5f0c(3): mov (%rbx),%rbx
5f0f(5): mov %r10,0x18(%rsp)
5f14(5): mov %r9,0x10(%rsp)
5f19(4): mov %rax,(%rsp)
5f1d(5): mov %r8,0x8(%rsp)
5f22(2): xor %edi,%edi
5f24(5): call 0xffffb7cc(%rip)
5f29(5): mov 0x18(%rsp),%r10
5f2e(2): push %r10
5f30(5): jmp 0xffffff44(%rip)
5f35(3): nop (%rax)
5f38(3): mov (%rbx),%rbx
5f3b(7): lea 0x255d(%rip),%rsi
5f42(5): mov $0x5,%edx
5f47(2): xor %edi,%edi
5f49(5): call 0xffffb7a7(%rip)
5f4e(4): add $0x28,%rsp
5f52(3): mov %rbx,%rcx
5f55(3): mov %rbp,%rdi
5f58(1): pop %rbx
5f59(1): pop %rbp
5f5a(2): pop %r12
5f5c(2): pop %r13
5f5e(2): pop %r14
5f60(2): pop %r15
5f62(3): mov %rax,%rdx
5f65(5): mov $0x1,%esi
5f6a(2): xor %eax,%eax
5f6c(5): jmp 0xffffb9f4(%rip)
5f71(7): nop 0x0(%rax)
5f78(4): mov 0x8(%rbx),%r12
5f7c(7): lea 0x252c(%rip),%rsi
5f83(3): mov (%rbx),%rbx
5f86(5): mov $0x5,%edx
5f8b(2): xor %edi,%edi
5f8d(5): call 0xffffb763(%rip)
5f92(4): add $0x28,%rsp
5f96(3): mov %r12,%r8
5f99(3): mov %rbx,%rcx
5f9c(3): mov %rbp,%rdi
5f9f(3): mov %rax,%rdx
5fa2(5): mov $0x1,%esi
5fa7(1): pop %rbx
5fa8(1): pop %rbp
5fa9(2): pop %r12
5fab(2): pop %r13
5fad(2): pop %r14
5faf(2): pop %r15
5fb1(2): xor %eax,%eax
5fb3(5): jmp 0xffffb9ad(%rip)
5fb8(8): nop 0x0(%rax,%rax,1)
5fc0(4): mov 0x10(%rbx),%r13
5fc4(4): mov 0x8(%rbx),%r12
5fc8(7): lea 0x24f7(%rip),%rsi
5fcf(3): mov (%rbx),%rbx
5fd2(5): mov $0x5,%edx
5fd7(2): xor %edi,%edi
5fd9(5): call 0xffffb717(%rip)
5fde(4): add $0x28,%rsp
5fe2(3): mov %r13,%r9
5fe5(3): mov %r12,%r8
5fe8(3): mov %rbx,%rcx
5feb(3): mov %rbp,%rdi
5fee(3): mov %rax,%rdx
5ff1(1): pop %rbx
5ff2(1): pop %rbp
5ff3(2): pop %r12
5ff5(2): pop %r13
5ff7(2): pop %r14
5ff9(2): pop %r15
5ffb(5): mov $0x1,%esi
6000(2): xor %eax,%eax
6002(5): jmp 0xffffb95e(%rip)
6007(9): nop 0x0(%rax,%rax,1)
6010(7): lea 0x25e1(%rip),%rsi
6017(5): mov $0x5,%edx
601c(2): xor %edi,%edi
601e(4): mov 0x18(%rbx),%r14
6022(4): mov 0x10(%rbx),%r13
6026(4): mov 0x8(%rbx),%r12
602a(3): mov (%rbx),%rbx
602d(5): call 0xffffb6c3(%rip)
6032(4): sub $0x8,%rsp
6036(2): push %r14
6038(3): mov %rax,%rdx
603b(3): mov %r13,%r9
603e(3): mov %r12,%r8
6041(3): mov %rbx,%rcx
6044(3): mov %rbp,%rdi
6047(5): mov $0x1,%esi
604c(2): xor %eax,%eax
604e(5): call 0xffffb912(%rip)
6053(1): pop %rax
6054(1): pop %rdx
6055(4): add $0x28,%rsp
6059(1): pop %rbx
605a(1): pop %rbp
605b(2): pop %r12
605d(2): pop %r13
605f(2): pop %r14
6061(2): pop %r15
6063(1): ret near (%rsp)
6064(4): nop 0x0(%rax)
6068(4): mov 0x20(%rbx),%r15
606c(7): lea 0x25a5(%rip),%rsi
6073(5): mov $0x5,%edx
6078(2): xor %edi,%edi
607a(4): mov 0x18(%rbx),%r14
607e(4): mov 0x10(%rbx),%r13
6082(4): mov 0x8(%rbx),%r12
6086(3): mov (%rbx),%rbx
6089(5): call 0xffffb667(%rip)
608e(2): push %r15
6090(2): jmp 0xffffffa6(%rip)
6092(6): nop 0x0(%rax,%rax,1)
6098(4): mov 0x8(%rbx),%r8
609c(4): mov 0x28(%rbx),%r12
60a0(7): lea 0x2599(%rip),%rsi
60a7(4): mov 0x20(%rbx),%r15
60ab(4): mov 0x18(%rbx),%r14
60af(5): mov $0x5,%edx
60b4(4): mov 0x10(%rbx),%r13
60b8(2): xor %edi,%edi
60ba(3): mov (%rbx),%rbx
60bd(4): mov %r8,(%rsp)
60c1(5): call 0xffffb62f(%rip)
60c6(4): sub $0x8,%rsp
60ca(3): mov %r13,%r9
60cd(2): push %r12
60cf(2): push %r15
60d1(2): push %r14
60d3(5): mov 0x20(%rsp),%r8
60d8(3): mov %rbx,%rcx
60db(3): mov %rax,%rdx
60de(3): mov %rbp,%rdi
60e1(5): mov $0x1,%esi
60e6(2): xor %eax,%eax
60e8(5): call 0xffffb878(%rip)
60ed(4): add $0x20,%rsp
60f1(4): add $0x28,%rsp
60f5(1): pop %rbx
60f6(1): pop %rbp
60f7(2): pop %r12
60f9(2): pop %r13
60fb(2): pop %r14
60fd(2): pop %r15
60ff(1): ret near (%rsp)
6100(4): mov 0x10(%rbx),%r9
6104(4): mov 0x30(%rbx),%r13
6108(7): lea 0x2559(%rip),%rsi
610f(4): mov 0x28(%rbx),%r12
6113(4): mov 0x20(%rbx),%r15
6117(5): mov $0x5,%edx
611c(4): mov 0x18(%rbx),%r14
6120(4): mov 0x8(%rbx),%r8
6124(2): xor %edi,%edi
6126(5): mov %r9,0x8(%rsp)
612b(3): mov (%rbx),%rbx
612e(4): mov %r8,(%rsp)
6132(5): call 0xffffb5be(%rip)
6137(2): push %r13
6139(2): push %r12
613b(2): push %r15
613d(2): push %r14
613f(5): mov 0x28(%rsp),%r9
6144(2): jmp 0xffffff8f(%rip)
6146(a): nop 0x0(%rax,%rax,1)
6150(4): mov 0x40(%rbx),%r10
6154(4): mov 0x38(%rbx),%r9
6158(5): mov $0x5,%edx
615d(4): mov 0x10(%rbx),%rax
6161(4): mov 0x8(%rbx),%r8
6165(7): lea 0x2594(%rip),%rsi
616c(4): mov 0x30(%rbx),%r13
6170(4): mov 0x28(%rbx),%r12
6174(4): mov 0x20(%rbx),%r15
6178(4): mov 0x18(%rbx),%r14
617c(5): mov %r10,0x18(%rsp)
6181(5): mov %r9,0x10(%rsp)
6186(4): mov %rax,(%rsp)
618a(5): mov %r8,0x8(%rsp)
618f(3): mov (%rbx),%rbx
6192(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
61a0(3): xor %r9d,%r9d
61a3(4): cmp $0x0,(%r8)
61a7(2): jz 0x14(%rip)
61a9(7): nop 0x0(%rax)
61b0(4): add $0x1,%r9
61b4(5): cmp $0x0,0x0(%r8,%r9,8)
61b9(2): jnz 0xfffffff7(%rip)
61bb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
61c0(4): sub $0x68,%rsp
61c4(3): mov %r8,%r10
61c7(3): xor %r9d,%r9d
61ca(9): mov $0x28,%rax
61d3(5): mov %rax,0x58(%rsp)
61d8(2): xor %eax,%eax
61da(3): mov %rsp,%r8
61dd(3): nop (%rax)
61e0(3): mov (%r10),%eax
61e3(3): cmp $0x2f,%eax
61e6(2): jnbe 0x44(%rip)
61e8(3): mov %eax,%r11d
61eb(4): add 0x10(%r10),%r11
61ef(3): add $0x8,%eax
61f2(3): mov %eax,(%r10)
61f5(3): mov (%r11),%rax
61f8(3): test %rax,%rax
61fb(4): mov %rax,0x0(%r8,%r9,8)
61ff(2): jz 0xc(%rip)
6201(4): add $0x1,%r9
6205(4): cmp $0xa,%r9
6209(2): jnz 0xffffffd7(%rip)
620b(5): call 0xfffffb75(%rip)
6210(5): mov 0x58(%rsp),%rax
6215(9): xor $0x28,%rax
621e(2): jnz 0x7(%rip)
6220(4): add $0x68,%rsp
6224(1): ret near (%rsp)
6225(5): call 0xffffb4fb(%rip)
622a(4): mov 0x8(%r10),%r11
622e(4): lea 0x8(%r11),%rax
6232(4): mov %rax,0x8(%r10)
6236(2): jmp 0xffffffbf(%rip)

"version_etc" :
6240(1): push %rbp
6241(1): push %rbx
6242(6): mov $0x20,%r10d
6248(3): xor %r11d,%r11d
624b(7): sub $0xb8,%rsp
6252(9): mov $0x28,%rax
625b(5): mov %rax,0x78(%rsp)
6260(2): xor %eax,%eax
6262(8): lea 0xd0(%rsp),%rax
626a(8): mov %r8,0xa0(%rsp)
6272(8): lea 0xd0(%rsp),%rbx
627a(5): lea 0x20(%rsp),%r8
627f(8): mov %r9,0xa8(%rsp)
6287(8): mov $0x20,0x8(%rsp)
628f(5): mov %rax,0x10(%rsp)
6294(8): lea 0x80(%rsp),%rax
629c(3): xor %r9d,%r9d
629f(5): mov %rax,0x18(%rsp)
62a4(3): mov %rax,%rbp
62a7(9): nop 0x0(%rax,%rax,1)
62b0(4): cmp $0x2f,%r10d
62b4(2): jnbe 0x58(%rip)
62b6(3): mov %r10d,%eax
62b9(6): mov $0x1,%r11d
62bf(4): add $0x8,%r10d
62c3(3): add %rbp,%rax
62c6(3): mov (%rax),%rax
62c9(3): test %rax,%rax
62cc(4): mov %rax,0x0(%r8,%r9,8)
62d0(2): jz 0xc(%rip)
62d2(4): add $0x1,%r9
62d6(4): cmp $0xa,%r9
62da(2): jnz 0xffffffd6(%rip)
62dc(3): test %r11b,%r11b
62df(2): jnz 0x26(%rip)
62e1(5): call 0xfffffa9f(%rip)
62e6(5): mov 0x78(%rsp),%rax
62eb(9): xor $0x28,%rax
62f4(2): jnz 0xc(%rip)
62f6(7): add $0xb8,%rsp
62fd(1): pop %rbx
62fe(1): pop %rbp
62ff(1): ret near (%rsp)
6300(5): call 0xffffb420(%rip)
6305(5): mov %r10d,0x8(%rsp)
630a(2): jmp 0xffffffd7(%rip)
630c(3): mov %rbx,%rax
630f(4): add $0x8,%rbx
6313(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6320(1): push %rbx
6321(7): lea 0x21ba(%rip),%rsi
6328(5): mov $0x5,%edx
632d(2): xor %edi,%edi
632f(5): call 0xffffb3c1(%rip)
6334(7): lea 0x21bc(%rip),%rdx
633b(3): mov %rax,%rsi
633e(5): mov $0x1,%edi
6343(2): xor %eax,%eax
6345(5): call 0xffffb59b(%rip)
634a(7): lea 0x21bc(%rip),%rsi
6351(5): mov $0x5,%edx
6356(2): xor %edi,%edi
6358(5): call 0xffffb398(%rip)
635d(7): lea 0x18dc(%rip),%rcx
6364(7): lea 0x1aac(%rip),%rdx
636b(3): mov %rax,%rsi
636e(5): mov $0x1,%edi
6373(2): xor %eax,%eax
6375(5): call 0xffffb56b(%rip)
637a(7): mov 0x204d27(%rip),%rbx
6381(7): lea 0x23b8(%rip),%rsi
6388(2): xor %edi,%edi
638a(5): mov $0x5,%edx
638f(5): call 0xffffb361(%rip)
6394(3): mov %rbx,%rsi
6397(3): mov %rax,%rdi
639a(1): pop %rbx
639b(5): jmp 0xffffb455(%rip)

"xmalloc" :
63a0(1): push %rbx
63a1(3): mov %rdi,%rbx
63a4(5): call 0xffffb49c(%rip)
63a9(3): test %rax,%rax
63ac(2): jnz 0x7(%rip)
63ae(3): test %rbx,%rbx
63b1(2): jnz 0x4(%rip)
63b3(1): pop %rbx
63b4(1): ret near (%rsp)
63b5(5): call 0x23b(%rip)

"xnmalloc" :
63c0(3): mov %rdi,%rax
63c3(3): mul %rax,%rsi,%rdx
63c6(3): mov %rax,%rdi
63c9(3): seto %al
63cc(3): test %rdi,%rdi
63cf(2): js 0xc(%rip)
63d1(3): movzx %al,%eax
63d4(3): test %rax,%rax
63d7(2): jnz 0x4(%rip)
63d9(2): jmp 0xffffffc7(%rip)
63db(4): sub $0x8,%rsp
63df(5): call 0x211(%rip)

"xrealloc" :
6400(3): test %rsi,%rsi
6403(1): push %rbx
6404(3): mov %rsi,%rbx
6407(2): jnz 0x7(%rip)
6409(3): test %rdi,%rdi
640c(2): jnz 0x1c(%rip)
640e(3): mov %rbx,%rsi
6411(5): call 0xffffb49f(%rip)
6416(3): test %rax,%rax
6419(2): jnz 0x7(%rip)
641b(3): test %rbx,%rbx
641e(2): jnz 0x13(%rip)
6420(1): pop %rbx
6421(1): ret near (%rsp)
6422(6): nop 0x0(%rax,%rax,1)
6428(5): call 0xffffb228(%rip)
642d(2): xor %eax,%eax
642f(1): pop %rbx
6430(1): ret near (%rsp)
6431(5): call 0x1bf(%rip)

"xnrealloc" :
6440(3): mov %rsi,%rax
6443(3): mul %rax,%rdx,%rdx
6446(3): mov %rax,%rsi
6449(3): seto %al
644c(3): test %rsi,%rsi
644f(2): js 0xc(%rip)
6451(3): movzx %al,%eax
6454(3): test %rax,%rax
6457(2): jnz 0x4(%rip)
6459(2): jmp 0xffffffa7(%rip)
645b(4): sub $0x8,%rsp
645f(5): call 0x191(%rip)

"x2nrealloc" :
6470(3): test %rdi,%rdi
6473(3): mov %rdx,%r9
6476(3): mov (%rsi),%rcx
6479(2): jz 0x37(%rip)
647b(2): xor %edx,%edx
647d(a): mov $0x6148914691236517204,%rax
6487(3): div %r9,%rax
648a(3): cmp %rcx,%rax
648d(2): jbe 0x3e(%rip)
648f(3): mov %rcx,%rax
6492(3): shr $0x1,%rax
6495(5): lea 0x1(%rax,%rcx,1),%rcx
649a(3): mov %rcx,(%rsi)
649d(4): imul %r9,%rcx
64a1(3): mov %rcx,%rsi
64a4(5): jmp 0xffffff5c(%rip)
64a9(7): nop 0x0(%rax)
64b0(3): test %rcx,%rcx
64b3(2): jz 0x25(%rip)
64b5(3): mov %rcx,%rax
64b8(3): mul %rax,%r9,%rdx
64bb(3): seto %dl
64be(3): test %rax,%rax
64c1(3): movzx %dl,%edx
64c4(2): js 0x7(%rip)
64c6(3): test %rdx,%rdx
64c9(2): jz 0xffffffd1(%rip)
64cb(4): sub $0x8,%rsp
64cf(5): call 0x121(%rip)
64d4(4): nop 0x0(%rax)
64d8(2): xor %edx,%edx
64da(5): mov $0x80,%eax
64df(3): xor %r8d,%r8d
64e2(3): div %r9,%rax
64e5(3): test %rax,%rax
64e8(4): setz %r8b
64ec(4): lea 0x0(%r8,%rax,1),%rcx
64f0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6500(3): test %rdi,%rdi
6503(3): mov (%rsi),%rax
6506(2): jz 0x2a(%rip)
6508(a): mov $0x6148914691236517203,%rdx
6512(3): cmp %rdx,%rax
6515(2): jnbe 0x2c(%rip)
6517(3): mov %rax,%rdx
651a(3): shr $0x1,%rdx
651d(5): lea 0x1(%rdx,%rax,1),%rax
6522(3): mov %rax,(%rsi)
6525(3): mov %rax,%rsi
6528(5): jmp 0xfffffed8(%rip)
652d(3): nop (%rax)
6530(3): test %rax,%rax
6533(5): mov $0x80,%edx
6538(4): cmove %rdx,%rax
653c(3): test %rax,%rax
653f(2): jns 0xffffffe3(%rip)
6541(4): sub $0x8,%rsp
6545(5): call 0xab(%rip)

"xzalloc" :
6550(1): push %rbx
6551(3): mov %rdi,%rbx
6554(5): call 0xfffffe4c(%rip)
6559(3): mov %rbx,%rdx
655c(2): xor %esi,%esi
655e(3): mov %rax,%rdi
6561(1): pop %rbx
6562(5): jmp 0xffffb23e(%rip)

"xcalloc" :
6570(3): mov %rdi,%rax
6573(4): sub $0x8,%rsp
6577(3): mul %rax,%rsi,%rdx
657a(3): seto %dl
657d(3): test %rax,%rax
6580(2): js 0x19(%rip)
6582(3): movzx %dl,%edx
6585(3): test %rdx,%rdx
6588(2): jnz 0x11(%rip)
658a(5): call 0xffffb276(%rip)
658f(3): test %rax,%rax
6592(2): jz 0x7(%rip)
6594(4): add $0x8,%rsp
6598(1): ret near (%rsp)
6599(5): call 0x57(%rip)

"xmemdup" :
65a0(1): push %rbp
65a1(1): push %rbx
65a2(3): mov %rdi,%rbp
65a5(3): mov %rsi,%rdi
65a8(3): mov %rsi,%rbx
65ab(4): sub $0x8,%rsp
65af(5): call 0xfffffdf1(%rip)
65b4(4): add $0x8,%rsp
65b8(3): mov %rbx,%rdx
65bb(3): mov %rbp,%rsi
65be(1): pop %rbx
65bf(1): pop %rbp
65c0(3): mov %rax,%rdi
65c3(5): jmp 0xffffb25d(%rip)

"xstrdup" :
65d0(1): push %rbx
65d1(3): mov %rdi,%rbx
65d4(5): call 0xffffb13c(%rip)
65d9(3): mov %rbx,%rdi
65dc(4): lea 0x1(%rax),%rsi
65e0(1): pop %rbx
65e1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
65f0(7): lea 0x21f8(%rip),%rsi
65f7(4): sub $0x8,%rsp
65fb(5): mov $0x5,%edx
6600(2): xor %edi,%edi
6602(5): call 0xffffb0ee(%rip)
6607(6): mov 0x204a2b(%rip),%edi
660d(7): lea 0x173e(%rip),%rdx
6614(3): mov %rax,%rcx
6617(2): xor %esi,%esi
6619(2): xor %eax,%eax
661b(5): call 0xffffb2d5(%rip)
6620(5): call 0xffffb040(%rip)

"collate_error" :
6630(2): push %r14
6632(2): push %r13
6634(3): mov %edi,%r14d
6637(2): push %r12
6639(1): push %rbp
663a(3): mov %rdx,%r12
663d(1): push %rbx
663e(3): mov %rsi,%rbx
6641(7): lea 0x21b8(%rip),%rsi
6648(5): mov $0x5,%edx
664d(2): xor %edi,%edi
664f(3): mov %r8,%r13
6652(3): mov %rcx,%rbp
6655(5): call 0xffffb09b(%rip)
665a(3): mov %r14d,%esi
665d(3): mov %rax,%rdx
6660(2): xor %edi,%edi
6662(2): xor %eax,%eax
6664(5): call 0xffffb28c(%rip)
6669(7): lea 0x21b0(%rip),%rsi
6670(5): mov $0x5,%edx
6675(2): xor %edi,%edi
6677(5): call 0xffffb079(%rip)
667c(2): xor %esi,%esi
667e(3): mov %rax,%rdx
6681(2): xor %edi,%edi
6683(2): xor %eax,%eax
6685(5): call 0xffffb26b(%rip)
668a(3): mov %r13,%rcx
668d(3): mov %rbp,%rdx
6690(5): mov $0x8,%esi
6695(5): mov $0x1,%edi
669a(5): call 0xfffff356(%rip)
669f(3): mov %r12,%rcx
66a2(3): mov %rbx,%rdx
66a5(5): mov $0x8,%esi
66aa(2): xor %edi,%edi
66ac(3): mov %rax,%rbp
66af(5): call 0xfffff341(%rip)
66b4(7): lea 0x2195(%rip),%rsi
66bb(3): mov %rax,%rbx
66be(5): mov $0x5,%edx
66c3(2): xor %edi,%edi
66c5(5): call 0xffffb02b(%rip)
66ca(3): mov %rbp,%r8
66cd(3): mov %rbx,%rcx
66d0(6): mov 0x204962(%rip),%edi
66d6(1): pop %rbx
66d7(1): pop %rbp
66d8(2): pop %r12
66da(2): pop %r13
66dc(2): pop %r14
66de(3): mov %rax,%rdx
66e1(2): xor %esi,%esi
66e3(2): xor %eax,%eax
66e5(5): jmp 0xffffb20b(%rip)

"xmemcoll" :
66f0(2): push %r14
66f2(2): push %r13
66f4(3): mov %rcx,%r13
66f7(2): push %r12
66f9(1): push %rbp
66fa(3): mov %rdx,%r12
66fd(1): push %rbx
66fe(3): mov %rsi,%rbp
6701(3): mov %rdi,%rbx
6704(5): call 0xa5c(%rip)
6709(3): mov %eax,%r14d
670c(5): call 0xffffaf64(%rip)
6711(2): mov (%rax),%edi
6713(2): test %edi,%edi
6715(2): jz 0x13(%rip)
6717(3): mov %r13,%r8
671a(3): mov %r12,%rcx
671d(3): mov %rbp,%rdx
6720(3): mov %rbx,%rsi
6723(5): call 0xffffff0d(%rip)
6728(1): pop %rbx
6729(3): mov %r14d,%eax
672c(1): pop %rbp
672d(2): pop %r12
672f(2): pop %r13
6731(2): pop %r14
6733(1): ret near (%rsp)

"xmemcoll0" :
6740(2): push %r14
6742(2): push %r13
6744(3): mov %rcx,%r14
6747(2): push %r12
6749(1): push %rbp
674a(3): mov %rdx,%r12
674d(1): push %rbx
674e(3): mov %rdi,%rbp
6751(3): mov %rsi,%rbx
6754(5): call 0xabc(%rip)
6759(3): mov %eax,%r13d
675c(5): call 0xffffaf14(%rip)
6761(2): mov (%rax),%edi
6763(2): test %edi,%edi
6765(2): jz 0x15(%rip)
6767(4): lea 0xffffffff(%rbx),%rdx
676b(4): lea 0xffffffff(%r14),%r8
676f(3): mov %r12,%rcx
6772(3): mov %rbp,%rsi
6775(5): call 0xfffffebb(%rip)
677a(1): pop %rbx
677b(3): mov %r13d,%eax
677e(1): pop %rbp
677f(2): pop %r12
6781(2): pop %r13
6783(2): pop %r14
6785(1): ret near (%rsp)

"xstrtoul" :
6790(2): push %r15
6792(2): push %r14
6794(2): push %r13
6796(2): push %r12
6798(1): push %rbp
6799(1): push %rbx
679a(4): sub $0x28,%rsp
679e(9): mov $0x28,%rax
67a7(5): mov %rax,0x18(%rsp)
67ac(2): xor %eax,%eax
67ae(3): cmp $0x24,%edx
67b1(6): jnbe 0x364(%rip)
67b7(5): lea 0x10(%rsp),%rax
67bc(3): mov %rsi,%r15
67bf(3): test %rsi,%rsi
67c2(3): mov %rdi,%rbp
67c5(4): mov %edx,0x8(%rsp)
67c9(3): mov %rcx,%r14
67cc(3): mov %r8,%r13
67cf(4): cmove %rax,%r15
67d3(5): call 0xffffae9d(%rip)
67d8(6): mov $0x0,(%rax)
67de(3): mov %rax,%r12
67e1(4): movzx 0x0(%rbp),%ebx
67e5(5): call 0xffffb1ab(%rip)
67ea(4): mov 0x8(%rsp),%edx
67ee(3): mov (%rax),%rsi
67f1(3): mov %rbp,%rax
67f4(2): jmp 0x13(%rip)
67f6(a): nop 0x0(%rax,%rax,1)
6800(4): add $0x1,%rax
6804(3): movzx (%rax),%ebx
6807(3): movzx %bl,%ecx
680a(5): test $0x20,0x1(%rsi,%rcx,2)
680f(2): jnz 0xfffffff1(%rip)
6811(3): cmp $0x2d,%bl
6814(2): jz 0x54(%rip)
6816(3): mov %r15,%rsi
6819(3): mov %rbp,%rdi
681c(5): call 0xffffb104(%rip)
6821(3): mov (%r15),%rcx
6824(3): mov %rax,%rbx
6827(3): cmp %rbp,%rcx
682a(2): jz 0x2e(%rip)
682c(4): mov (%r12),%eax
6830(2): test %eax,%eax
6832(2): jz 0x66(%rip)
6834(3): cmp $0x22,%eax
6837(5): mov $0x1,%ebp
683c(2): jnz 0x2c(%rip)
683e(3): test %r13,%r13
6841(2): jz 0xb(%rip)
6843(4): movzx (%rcx),%r12d
6847(3): test %r12b,%r12b
684a(2): jnz 0x7d(%rip)
684c(3): mov %rbx,(%r14)
684f(2): jmp 0x1e(%rip)
6851(7): nop 0x0(%rax)
6858(3): test %r13,%r13
685b(5): mov %rcx,0x8(%rsp)
6860(2): jnz 0x40(%rip)
6862(6): nop 0x0(%rax,%rax,1)
6868(5): mov $0x4,%ebp
686d(5): mov 0x18(%rsp),%rdi
6872(9): xor $0x28,%rdi
687b(2): mov %ebp,%eax
687d(6): jnz 0x293(%rip)
6883(4): add $0x28,%rsp
6887(1): pop %rbx
6888(1): pop %rbp
6889(2): pop %r12
688b(2): pop %r13
688d(2): pop %r14
688f(2): pop %r15
6891(1): ret near (%rsp)
6892(6): nop 0x0(%rax,%rax,1)
6898(2): xor %ebp,%ebp
689a(2): jmp 0xffffffa4(%rip)
689c(4): nop 0x0(%rax)
68a0(5): movzx 0x0(%rbp),%r12d
68a5(3): test %r12b,%r12b
68a8(2): jz 0xffffffc0(%rip)
68aa(4): movsx %r12b,%esi
68ae(3): mov %r13,%rdi
68b1(2): xor %ebp,%ebp
68b3(5): call 0xffffae9d(%rip)
68b8(3): test %rax,%rax
68bb(5): mov $0x1,%ebx
68c0(5): mov 0x8(%rsp),%rcx
68c5(2): jz 0xffffffa3(%rip)
68c7(4): movsx %r12b,%esi
68cb(3): mov %r13,%rdi
68ce(5): mov %rcx,0x8(%rsp)
68d3(5): call 0xffffae7d(%rip)
68d8(3): test %rax,%rax
68db(5): mov 0x8(%rsp),%rcx
68e0(6): jz 0xcc(%rip)
68e6(5): lea 0xffffffbb(%r12),%eax
68eb(2): cmp $0x2f,%al
68ed(2): jnbe 0x53(%rip)
68ef(a): mov $0x142129060940101,%rdx
68f9(4): bt %rax,%rdx
68fd(2): jnb 0x43(%rip)
68ff(5): mov $0x30,%esi
6904(3): mov %r13,%rdi
6907(5): mov %rcx,0x8(%rsp)
690c(5): call 0xffffae44(%rip)
6911(3): test %rax,%rax
6914(5): mov 0x8(%rsp),%rcx
6919(2): jz 0x27(%rip)
691b(4): movzx 0x1(%rcx),%eax
691f(2): cmp $0x44,%al
6921(2): jz 0xe(%rip)
6923(2): cmp $0x69,%al
6925(6): jz 0x1d3(%rip)
692b(2): cmp $0x42,%al
692d(2): jnz 0x13(%rip)
692f(5): mov $0x2,%edi
6934(5): mov $0x3e8,%esi
6939(2): jmp 0x11(%rip)
693b(5): nop 0x0(%rax,%rax,1)
6940(5): mov $0x1,%edi
6945(5): mov $0x400,%esi
694a(4): sub $0x42,%r12d
694e(4): cmp $0x35,%r12b
6952(2): jnbe 0x5a(%rip)
6954(7): lea 0x1f65(%rip),%rdx
695b(4): movzx %r12b,%r12d
695f(4): movsxd 0x0(%rdx,%r12,4),%rax
6963(3): add %rdx,%rax
6966(2): jmp %rax
6968(3): mov %rbx,%rax
696b(3): mul %rax,%rsi,%rdx
696e(6): jo 0x1f3(%rip)
6974(3): xor %r8d,%r8d
6977(3): mul %rax,%rsi,%rdx
697a(6): jo 0x1d8(%rip)
6980(3): mov %rax,%rbx
6983(3): or %r8d,%ebp
6986(a): nop 0x0(%rax,%rax,1)
6990(3): movsxd %edi,%rdi
6993(2): mov %ebp,%eax
6995(3): add %rdi,%rcx
6998(3): or $0x2,%eax
699b(3): mov %rcx,(%r15)
699e(3): cmp $0x0,(%rcx)
69a1(3): mov %rbx,(%r14)
69a4(3): cmovne %eax,%ebp
69a7(5): jmp 0xfffffec6(%rip)
69ac(3): mov %rbx,(%r14)
69af(3): or $0x2,%ebp
69b2(5): jmp 0xfffffebb(%rip)
69b7(5): mov $0x2,%edx
69bc(3): mov %rdx,%rax
69bf(3): mul %rax,%rbx,%rdx
69c2(6): jo 0x9c(%rip)
69c8(3): add %rbx,%rbx
69cb(2): jmp 0xffffffc5(%rip)
69cd(5): mov $0x200,%edx
69d2(3): mov %rdx,%rax
69d5(3): mul %rax,%rbx,%rdx
69d8(6): jo 0x86(%rip)
69de(4): shl/sal $0x9,%rbx
69e2(2): jmp 0xffffffae(%rip)
69e4(6): mov $0x7,%r8d
69ea(3): xor %r9d,%r9d
69ed(3): nop (%rax)
69f0(3): mov %rbx,%rax
69f3(3): mul %rax,%rsi,%rdx
69f6(3): mov %rax,%rbx
69f9(6): jo 0x195(%rip)
69ff(4): sub $0x1,%r8d
6a03(2): jnz 0xffffffed(%rip)
6a05(3): or %r9d,%ebp
6a08(2): jmp 0xffffff88(%rip)
6a0a(6): mov $0x8,%r8d
6a10(3): xor %r9d,%r9d
6a13(5): nop 0x0(%rax,%rax,1)
6a18(3): mov %rbx,%rax
6a1b(3): mul %rax,%rsi,%rdx
6a1e(3): mov %rax,%rbx
6a21(6): jo 0x14f(%rip)
6a27(4): sub $0x1,%r8d
6a2b(2): jnz 0xffffffed(%rip)
6a2d(2): jmp 0xffffffd8(%rip)
6a2f(6): mov $0x4,%r8d
6a35(3): xor %r9d,%r9d
6a38(3): mov %rbx,%rax
6a3b(3): mul %rax,%rsi,%rdx
6a3e(3): mov %rax,%rbx
6a41(6): jo 0x102(%rip)
6a47(4): sub $0x1,%r8d
6a4b(2): jnz 0xffffffed(%rip)
6a4d(2): jmp 0xffffffb8(%rip)
6a4f(3): mov %rbx,%rax
6a52(3): mul %rax,%rsi,%rdx
6a55(3): mov %rax,%rbx
6a58(6): jno 0xffffff38(%rip)
6a5e(5): mov $0x1,%ebp
6a63(4): or $0xffffffff,%rbx
6a67(5): jmp 0xffffff29(%rip)
6a6c(4): nop 0x0(%rax)
6a70(6): mov $0x5,%r8d
6a76(3): xor %r9d,%r9d
6a79(3): mov %rbx,%rax
6a7c(3): mul %rax,%rsi,%rdx
6a7f(3): mov %rax,%rbx
6a82(6): jo 0xfd(%rip)
6a88(4): sub $0x1,%r8d
6a8c(2): jnz 0xffffffed(%rip)
6a8e(5): jmp 0xffffff77(%rip)
6a93(6): mov $0x6,%r8d
6a99(3): xor %r9d,%r9d
6a9c(3): mov %rbx,%rax
6a9f(3): mul %rax,%rsi,%rdx
6aa2(3): mov %rax,%rbx
6aa5(6): jo 0x8f(%rip)
6aab(4): sub $0x1,%r8d
6aaf(2): jnz 0xffffffed(%rip)
6ab1(5): jmp 0xffffff54(%rip)
6ab6(5): mov $0x400,%edx
6abb(3): mov %rdx,%rax
6abe(3): mul %rax,%rbx,%rdx
6ac1(2): jo 0xffffff9d(%rip)
6ac3(4): shl/sal $0xa,%rbx
6ac7(5): jmp 0xfffffec9(%rip)
6acc(3): mov %rbx,%rax
6acf(3): mul %rax,%rsi,%rdx
6ad2(6): jo 0xcb(%rip)
6ad8(3): xor %r8d,%r8d
6adb(3): mul %rax,%rsi,%rdx
6ade(6): jno 0xfffffe99(%rip)
6ae4(6): mov $0x1,%r8d
6aea(4): or $0xffffffff,%rax
6aee(5): jmp 0xfffffe89(%rip)
6af3(5): nop 0x0(%rax,%rax,1)
6af8(2): xor %edi,%edi
6afa(4): cmp $0x42,0x2(%rcx)
6afe(5): mov $0x400,%esi
6b03(4): setz %dil
6b07(4): lea 0x1(%rdi,%rdi,1),%edi
6b0b(5): jmp 0xfffffe3f(%rip)
6b10(5): call 0xffffac10(%rip)
6b15(7): lea 0x1e7c(%rip),%rcx
6b1c(7): lea 0x1d55(%rip),%rsi
6b23(7): lea 0x1d6e(%rip),%rdi
6b2a(5): mov $0x54,%edx
6b2f(5): call 0xffffac61(%rip)
6b34(6): mov $0x1,%r9d
6b3a(4): or $0xffffffff,%rbx
6b3e(5): jmp 0xffffff6d(%rip)
6b43(6): mov $0x1,%r9d
6b49(4): or $0xffffffff,%rbx
6b4d(5): jmp 0xfffffefa(%rip)
6b52(6): mov $0x1,%r8d
6b58(4): or $0xffffffff,%rbx
6b5c(5): jmp 0xfffffe27(%rip)
6b61(4): or $0xffffffff,%rax
6b65(6): mov $0x1,%r8d
6b6b(5): jmp 0xfffffe0c(%rip)
6b70(6): mov $0x1,%r9d
6b76(4): or $0xffffffff,%rbx
6b7a(5): jmp 0xfffffead(%rip)
6b7f(6): mov $0x1,%r9d
6b85(4): or $0xffffffff,%rbx
6b89(5): jmp 0xfffffeff(%rip)
6b8e(6): mov $0x1,%r9d
6b94(4): or $0xffffffff,%rbx
6b98(5): jmp 0xfffffe67(%rip)
6b9d(6): mov $0x1,%r8d
6ba3(4): or $0xffffffff,%rax
6ba7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
6bb0(2): push %r12
6bb2(1): push %rbp
6bb3(1): push %rbx
6bb4(3): mov %rdi,%rbx
6bb7(5): call 0xffffac79(%rip)
6bbc(2): test %eax,%eax
6bbe(3): mov %rbx,%rdi
6bc1(2): js 0x56(%rip)
6bc3(5): call 0xffffaccd(%rip)
6bc8(2): test %eax,%eax
6bca(2): jnz 0x2e(%rip)
6bcc(3): mov %rbx,%rdi
6bcf(5): call 0x2e1(%rip)
6bd4(2): test %eax,%eax
6bd6(2): jz 0x3e(%rip)
6bd8(5): call 0xffffaa98(%rip)
6bdd(3): mov (%rax),%r12d
6be0(3): mov %rbx,%rdi
6be3(3): mov %rax,%rbp
6be6(5): call 0xffffaaea(%rip)
6beb(3): test %r12d,%r12d
6bee(2): jnz 0x32(%rip)
6bf0(1): pop %rbx
6bf1(1): pop %rbp
6bf2(2): pop %r12
6bf4(1): ret near (%rsp)
6bf5(3): nop (%rax)
6bf8(3): mov %rbx,%rdi
6bfb(5): call 0xffffac35(%rip)
6c00(2): xor %esi,%esi
6c02(5): mov $0x1,%edx
6c07(2): mov %eax,%edi
6c09(5): call 0xffffab77(%rip)
6c0e(4): cmp $0xffffffff,%rax
6c12(2): jnz 0xffffffba(%rip)
6c14(3): mov %rbx,%rdi
6c17(1): pop %rbx
6c18(1): pop %rbp
6c19(2): pop %r12
6c1b(5): jmp 0xffffaab5(%rip)
6c20(4): mov %r12d,0x0(%rbp)
6c24(5): mov $0xffffffff,%eax
6c29(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
6c30(2): push %r12
6c32(1): push %rbp
6c33(2): mov %edi,%ebp
6c35(1): push %rbx
6c36(4): sub $0x50,%rsp
6c3a(9): mov $0x28,%rax
6c43(5): mov %rax,0x18(%rsp)
6c48(2): xor %eax,%eax
6c4a(5): lea 0x70(%rsp),%rax
6c4f(2): test %esi,%esi
6c51(5): mov %rdx,0x30(%rsp)
6c56(5): mov %rcx,0x38(%rsp)
6c5b(5): mov %r8,0x40(%rsp)
6c60(5): mov %rax,0x8(%rsp)
6c65(5): lea 0x20(%rsp),%rax
6c6a(5): mov %r9,0x48(%rsp)
6c6f(7): mov $0x10,(%rsp)
6c76(5): mov %rax,0x10(%rsp)
6c7b(6): jz 0x207(%rip)
6c81(6): cmp $0x406,%esi
6c87(2): jnz 0x49(%rip)
6c89(5): mov 0x10(%rsp),%rax
6c8e(7): cmp $0x0,0x2046a3(%rip)
6c95(7): mov $0x18,(%rsp)
6c9c(4): mov 0x10(%rax),%r12d
6ca0(3): mov %r12d,%edx
6ca3(6): js 0x130(%rip)
6ca9(2): xor %eax,%eax
6cab(5): mov $0x406,%esi
6cb0(5): call 0xffffaa00(%rip)
6cb5(2): test %eax,%eax
6cb7(2): mov %eax,%ebx
6cb9(6): js 0x18f(%rip)
6cbf(a): mov $0x1,0x20466f(%rip)
6cc9(2): jmp 0x47(%rip)
6ccb(5): nop 0x0(%rax,%rax,1)
6cd0(3): cmp $0xb,%esi
6cd3(2): jz 0x2d(%rip)
6cd5(2): jnle 0x5b(%rip)
6cd7(3): cmp $0x4,%esi
6cda(6): jz 0xd6(%rip)
6ce0(6): jnle 0xc0(%rip)
6ce6(3): cmp $0x2,%esi
6ce9(6): jz 0xc7(%rip)
6cef(2): jnle 0x11(%rip)
6cf1(3): cmp $0x1,%esi
6cf4(2): jnz 0x64(%rip)
6cf6(a): nop 0x0(%rax,%rax,1)
6d00(2): mov %ebp,%edi
6d02(2): xor %eax,%eax
6d04(5): call 0xffffa9ac(%rip)
6d09(2): mov %eax,%ebx
6d0b(5): nop 0x0(%rax,%rax,1)
6d10(5): mov 0x18(%rsp),%rcx
6d15(9): xor $0x28,%rcx
6d1e(2): mov %ebx,%eax
6d20(6): jnz 0x15d(%rip)
6d26(4): add $0x50,%rsp
6d2a(1): pop %rbx
6d2b(1): pop %rbp
6d2c(2): pop %r12
6d2e(1): ret near (%rsp)
6d2f(1): nop 
6d30(6): cmp $0x407,%esi
6d36(2): jnle 0x4a(%rip)
6d38(6): cmp $0x406,%esi
6d3e(2): jnl 0x72(%rip)
6d40(6): cmp $0x401,%esi
6d46(2): jz 0xffffffba(%rip)
6d48(6): cmp $0x402,%esi
6d4e(2): jz 0x62(%rip)
6d50(6): cmp $0x400,%esi
6d56(2): jz 0x5a(%rip)
6d58(3): mov (%rsp),%eax
6d5b(3): cmp $0x2f,%eax
6d5e(6): jnbe 0x13c(%rip)
6d64(5): add 0x10(%rsp),%rax
6d69(3): mov (%rax),%rdx
6d6c(2): mov %ebp,%edi
6d6e(2): xor %eax,%eax
6d70(5): call 0xffffa940(%rip)
6d75(2): mov %eax,%ebx
6d77(2): jmp 0xffffff99(%rip)
6d79(7): nop 0x0(%rax)
6d80(6): cmp $0x409,%esi
6d86(2): jz 0x2a(%rip)
6d88(6): jl 0xffffff78(%rip)
6d8e(6): cmp $0x40a,%esi
6d94(2): jnz 0xffffffc4(%rip)
6d96(5): jmp 0xffffff6a(%rip)
6d9b(5): nop 0x0(%rax,%rax,1)
6da0(3): cmp $0x9,%esi
6da3(6): jz 0xffffff5d(%rip)
6da9(2): jnle 0x7(%rip)
6dab(3): cmp $0x8,%esi
6dae(2): jnz 0xffffffaa(%rip)
6db0(3): mov (%rsp),%eax
6db3(3): cmp $0x2f,%eax
6db6(6): jnbe 0xee(%rip)
6dbc(5): add 0x10(%rsp),%rax
6dc1(2): mov (%rax),%edx
6dc3(2): mov %ebp,%edi
6dc5(2): xor %eax,%eax
6dc7(5): call 0xffffa8e9(%rip)
6dcc(2): mov %eax,%ebx
6dce(5): jmp 0xffffff42(%rip)
6dd3(2): xor %esi,%esi
6dd5(2): xor %eax,%eax
6dd7(5): call 0xffffa8d9(%rip)
6ddc(2): test %eax,%eax
6dde(2): mov %eax,%ebx
6de0(6): js 0xffffff30(%rip)
6de6(7): cmp $0xff,0x20454b(%rip)
6ded(6): jnz 0xffffff23(%rip)
6df3(2): xor %eax,%eax
6df5(5): mov $0x1,%esi
6dfa(2): mov %ebx,%edi
6dfc(5): call 0xffffa8b4(%rip)
6e01(2): test %eax,%eax
6e03(2): js 0x1e(%rip)
6e05(3): or $0x1,%eax
6e08(5): mov $0x2,%esi
6e0d(2): mov %ebx,%edi
6e0f(2): mov %eax,%edx
6e11(2): xor %eax,%eax
6e13(5): call 0xffffa89d(%rip)
6e18(3): cmp $0xff,%eax
6e1b(6): jnz 0xfffffef5(%rip)
6e21(5): call 0xffffa84f(%rip)
6e26(3): mov (%rax),%r12d
6e29(3): mov %rax,%rbp
6e2c(2): mov %ebx,%edi
6e2e(5): call 0xffffa982(%rip)
6e33(5): mov $0xffffffff,%ebx
6e38(4): mov %r12d,0x0(%rbp)
6e3c(5): jmp 0xfffffed4(%rip)
6e41(7): nop 0x0(%rax)
6e48(5): call 0xffffa828(%rip)
6e4d(3): cmp $0x16,(%rax)
6e50(6): jnz 0xfffffe6f(%rip)
6e56(2): xor %esi,%esi
6e58(2): xor %eax,%eax
6e5a(3): mov %r12d,%edx
6e5d(2): mov %ebp,%edi
6e5f(5): call 0xffffa851(%rip)
6e64(2): test %eax,%eax
6e66(2): mov %eax,%ebx
6e68(6): js 0xfffffea8(%rip)
6e6e(a): mov $0xffffffff,0x2044c0(%rip)
6e78(5): jmp 0xffffff7b(%rip)
6e7d(5): call 0xffffa8a3(%rip)
6e82(5): mov 0x10(%rsp),%rax
6e87(2): xor %esi,%esi
6e89(3): mov 0x10(%rax),%edx
6e8c(2): xor %eax,%eax
6e8e(5): call 0xffffa822(%rip)
6e93(2): mov %eax,%ebx
6e95(5): jmp 0xfffffe7b(%rip)
6e9a(5): mov 0x8(%rsp),%rax
6e9f(5): jmp 0xfffffeca(%rip)
6ea4(5): mov 0x8(%rsp),%rax
6ea9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
6eb0(3): test %rdi,%rdi
6eb3(1): push %rbx
6eb4(3): mov %rdi,%rbx
6eb7(2): jz 0x13(%rip)
6eb9(5): call 0xffffa9d7(%rip)
6ebe(2): test %eax,%eax
6ec0(2): jz 0xa(%rip)
6ec2(6): test $0x100,(%rbx)
6ec8(2): jnz 0x10(%rip)
6eca(3): mov %rbx,%rdi
6ecd(1): pop %rbx
6ece(5): jmp 0xffffa982(%rip)
6ed3(5): nop 0x0(%rax,%rax,1)
6ed8(3): mov %rbx,%rdi
6edb(5): mov $0x1,%edx
6ee0(2): xor %esi,%esi
6ee2(5): call 0xe(%rip)
6ee7(3): mov %rbx,%rdi
6eea(1): pop %rbx
6eeb(5): jmp 0xffffa965(%rip)

"rpl_fseeko" :
6ef0(4): mov 0x8(%rdi),%rax
6ef4(4): cmp %rax,0x10(%rdi)
6ef8(2): jz 0x8(%rip)
6efa(5): jmp 0xffffaa06(%rip)
6eff(1): nop 
6f00(4): mov 0x20(%rdi),%rax
6f04(4): cmp %rax,0x28(%rdi)
6f08(2): jnz 0xfffffff2(%rip)
6f0a(5): cmp $0x0,0x48(%rdi)
6f0f(2): jnz 0xffffffeb(%rip)
6f11(2): push %r12
6f13(1): push %rbp
6f14(3): mov %edx,%r12d
6f17(1): push %rbx
6f18(3): mov %rsi,%rbp
6f1b(3): mov %rdi,%rbx
6f1e(5): call 0xffffa912(%rip)
6f23(3): mov %r12d,%edx
6f26(3): mov %rbp,%rsi
6f29(2): mov %eax,%edi
6f2b(5): call 0xffffa855(%rip)
6f30(4): cmp $0xffffffff,%rax
6f34(2): jz 0xe(%rip)
6f36(3): and $0xef,(%rbx)
6f39(7): mov %rax,0x90(%rbx)
6f40(2): xor %eax,%eax
6f42(1): pop %rbx
6f43(1): pop %rbp
6f44(2): pop %r12
6f46(1): ret near (%rsp)

"rpl_mbrtowc" :
6f50(2): push %r13
6f52(2): push %r12
6f54(3): mov %rsi,%r13
6f57(1): push %rbp
6f58(1): push %rbx
6f59(3): mov %rdi,%rbx
6f5c(3): mov %rdx,%r12
6f5f(4): sub $0x18,%rsp
6f63(9): mov $0x28,%rax
6f6c(5): mov %rax,0x8(%rsp)
6f71(2): xor %eax,%eax
6f73(5): lea 0x4(%rsp),%rax
6f78(3): test %rdi,%rdi
6f7b(4): cmove %rax,%rbx
6f7f(3): mov %rbx,%rdi
6f82(5): call 0xffffa7be(%rip)
6f87(4): cmp $0xfffffffd,%rax
6f8b(3): mov %rax,%rbp
6f8e(2): jbe 0x22(%rip)
6f90(3): test %r12,%r12
6f93(2): jz 0x1d(%rip)
6f95(2): xor %edi,%edi
6f97(5): call 0xffffceb9(%rip)
6f9c(2): test %al,%al
6f9e(2): jnz 0x12(%rip)
6fa0(5): movzx 0x0(%r13),%eax
6fa5(5): mov $0x1,%ebp
6faa(2): mov %eax,(%rbx)
6fac(4): nop 0x0(%rax)
6fb0(5): mov 0x8(%rsp),%rdx
6fb5(9): xor $0x28,%rdx
6fbe(3): mov %rbp,%rax
6fc1(2): jnz 0xd(%rip)
6fc3(4): add $0x18,%rsp
6fc7(1): pop %rbx
6fc8(1): pop %rbp
6fc9(2): pop %r12
6fcb(2): pop %r13
6fcd(1): ret near (%rsp)
6fce(5): call 0xffffa752(%rip)

"close_stream" :
6fe0(2): push %r12
6fe2(1): push %rbp
6fe3(3): mov %rdi,%rbp
6fe6(1): push %rbx
6fe7(5): call 0xffffa6b9(%rip)
6fec(3): mov 0x0(%rbp),%ebx
6fef(3): mov %rbp,%rdi
6ff2(3): mov %rax,%r12
6ff5(5): call 0xfffffbbb(%rip)
6ffa(3): and $0x20,%ebx
6ffd(2): test %ebx,%ebx
6fff(2): jnz 0x19(%rip)
7001(2): test %eax,%eax
7003(2): jz 0xc(%rip)
7005(3): test %r12,%r12
7008(5): mov $0xffffffff,%eax
700d(2): jz 0x3b(%rip)
700f(1): pop %rbx
7010(1): pop %rbp
7011(2): pop %r12
7013(1): ret near (%rsp)
7014(4): nop 0x0(%rax)
7018(2): test %eax,%eax
701a(2): jnz 0x1e(%rip)
701c(5): call 0xffffa654(%rip)
7021(6): mov $0x0,(%rax)
7027(5): mov $0xffffffff,%eax
702c(1): pop %rbx
702d(1): pop %rbp
702e(2): pop %r12
7030(1): ret near (%rsp)
7031(7): nop 0x0(%rax)
7038(1): pop %rbx
7039(5): mov $0xffffffff,%eax
703e(1): pop %rbp
703f(2): pop %r12
7041(1): ret near (%rsp)
7042(6): nop 0x0(%rax,%rax,1)
7048(5): call 0xffffa628(%rip)
704d(3): cmp $0x9,(%rax)
7050(1): pop %rbx
7051(1): pop %rbp
7052(2): pop %r12
7054(3): setnz %al
7057(3): movzx %al,%eax
705a(2): neg %eax
705c(1): ret near (%rsp)

"locale_charset" :
7060(4): sub $0x8,%rsp
7064(5): mov $0xe,%edi
7069(5): call 0xffffa7f7(%rip)
706e(3): test %rax,%rax
7071(2): jz 0x1f(%rip)
7073(3): cmp $0x0,(%rax)
7076(7): lea 0x1924(%rip),%rdx
707d(4): cmove %rdx,%rax
7081(4): add $0x8,%rsp
7085(1): ret near (%rsp)
7086(a): nop 0x0(%rax,%rax,1)
7090(7): lea 0x190a(%rip),%rax
7097(4): add $0x8,%rsp
709b(1): ret near (%rsp)

"strcoll_loop" :
70a0(2): push %r15
70a2(2): push %r14
70a4(3): mov %rcx,%r14
70a7(2): push %r13
70a9(2): push %r12
70ab(3): mov %rsi,%r13
70ae(1): push %rbp
70af(1): push %rbx
70b0(3): mov %rdi,%r12
70b3(3): mov %rdx,%rbp
70b6(4): sub $0x8,%rsp
70ba(5): call 0xffffa5b6(%rip)
70bf(3): mov %rax,%r15
70c2(2): jmp 0x31(%rip)
70c4(4): nop 0x0(%rax)
70c8(3): mov %r12,%rdi
70cb(5): call 0xffffa645(%rip)
70d0(3): mov %rbp,%rdi
70d3(4): lea 0x1(%rax),%rbx
70d7(5): call 0xffffa639(%rip)
70dc(4): add $0x1,%rax
70e0(3): add %rbx,%r12
70e3(3): add %rax,%rbp
70e6(3): sub %rax,%r14
70e9(3): sub %rbx,%r13
70ec(2): jz 0x34(%rip)
70ee(3): test %r14,%r14
70f1(2): jz 0x4f(%rip)
70f3(7): mov $0x0,(%r15)
70fa(3): mov %rbp,%rsi
70fd(3): mov %r12,%rdi
7100(5): call 0xffffa770(%rip)
7105(2): test %eax,%eax
7107(2): jz 0xffffffc1(%rip)
7109(4): add $0x8,%rsp
710d(1): pop %rbx
710e(1): pop %rbp
710f(2): pop %r12
7111(2): pop %r13
7113(2): pop %r14
7115(2): pop %r15
7117(1): ret near (%rsp)
7118(8): nop 0x0(%rax,%rax,1)
7120(2): xor %eax,%eax
7122(3): test %r14,%r14
7125(3): setnz %al
7128(4): add $0x8,%rsp
712c(1): pop %rbx
712d(2): neg %eax
712f(1): pop %rbp
7130(2): pop %r12
7132(2): pop %r13
7134(2): pop %r14
7136(2): pop %r15
7138(1): ret near (%rsp)
7139(7): nop 0x0(%rax)
7140(4): add $0x8,%rsp
7144(5): mov $0x1,%eax
7149(1): pop %rbx
714a(1): pop %rbp
714b(2): pop %r12
714d(2): pop %r13
714f(2): pop %r14
7151(2): pop %r15
7153(1): ret near (%rsp)

"memcoll" :
7160(2): push %r15
7162(2): push %r14
7164(3): mov %rdx,%r15
7167(2): push %r13
7169(2): push %r12
716b(3): mov %rdi,%r14
716e(1): push %rbp
716f(1): push %rbx
7170(3): mov %rcx,%rbp
7173(3): mov %rsi,%rbx
7176(4): sub $0x18,%rsp
717a(3): cmp %rcx,%rsi
717d(2): jnz 0x15(%rip)
717f(3): mov %rsi,%rdx
7182(3): mov %r15,%rsi
7185(5): call 0xffffa65b(%rip)
718a(2): test %eax,%eax
718c(4): mov %eax,0x8(%rsp)
7190(2): jz 0x68(%rip)
7192(4): lea 0x0(%r14,%rbx,1),%r13
7196(4): lea 0x0(%r15,%rbp,1),%r12
719a(4): lea 0x1(%rbp),%rcx
719e(4): lea 0x1(%rbx),%rsi
71a2(3): mov %r15,%rdx
71a5(3): mov %r14,%rdi
71a8(5): movzx 0x0(%r13),%r9d
71ad(5): movzx (%r12),%r8d
71b2(5): mov $0x0,0x0(%r13)
71b7(5): mov $0x0,(%r12)
71bc(5): mov %r9b,0xf(%rsp)
71c1(5): mov %r8b,0x8(%rsp)
71c6(5): call 0xfffffeda(%rip)
71cb(6): movzx 0xf(%rsp),%r9d
71d1(6): movzx 0x8(%rsp),%r8d
71d7(2): mov %eax,%edx
71d9(4): mov %r9b,0x0(%r13)
71dd(4): mov %r8b,(%r12)
71e1(4): add $0x18,%rsp
71e5(2): mov %edx,%eax
71e7(1): pop %rbx
71e8(1): pop %rbp
71e9(2): pop %r12
71eb(2): pop %r13
71ed(2): pop %r14
71ef(2): pop %r15
71f1(1): ret near (%rsp)
71f2(6): nop 0x0(%rax,%rax,1)
71f8(5): call 0xffffa478(%rip)
71fd(4): mov 0x8(%rsp),%edx
7201(6): mov $0x0,(%rax)
7207(2): jmp 0xffffffda(%rip)

"memcoll0" :
7210(2): push %r12
7212(1): push %rbp
7213(3): mov %rdx,%r12
7216(1): push %rbx
7217(3): mov %rdi,%rbp
721a(3): mov %rsi,%rbx
721d(4): sub $0x10,%rsp
7221(3): cmp %rcx,%rsi
7224(2): jnz 0x1b(%rip)
7226(3): mov %rsi,%rdx
7229(3): mov %r12,%rsi
722c(5): mov %rcx,0x8(%rsp)
7231(5): call 0xffffa5af(%rip)
7236(2): test %eax,%eax
7238(5): mov 0x8(%rsp),%rcx
723d(2): jz 0x1b(%rip)
723f(4): add $0x10,%rsp
7243(3): mov %r12,%rdx
7246(3): mov %rbx,%rsi
7249(3): mov %rbp,%rdi
724c(1): pop %rbx
724d(1): pop %rbp
724e(2): pop %r12
7250(5): jmp 0xfffffe50(%rip)
7255(3): nop (%rax)
7258(5): call 0xffffa418(%rip)
725d(6): mov $0x0,(%rax)
7263(4): add $0x10,%rsp
7267(2): xor %eax,%eax
7269(1): pop %rbx
726a(1): pop %rbp
726b(2): pop %r12
726d(1): ret near (%rsp)

"__libc_csu_init" :
7270(2): push %r15
7272(2): push %r14
7274(3): mov %rdx,%r15
7277(2): push %r13
7279(2): push %r12
727b(7): lea 0x20382e(%rip),%r12
7282(1): push %rbp
7283(7): lea 0x20382e(%rip),%rbp
728a(1): push %rbx
728b(3): mov %edi,%r13d
728e(3): mov %rsi,%r14
7291(3): sub %r12,%rbp
7294(4): sub $0x8,%rsp
7298(4): sar $0x3,%rbp
729c(5): call 0xffffa364(%rip)
72a1(3): test %rbp,%rbp
72a4(2): jz 0x22(%rip)
72a6(2): xor %ebx,%ebx
72a8(8): nop 0x0(%rax,%rax,1)
72b0(3): mov %r15,%rdx
72b3(3): mov %r14,%rsi
72b6(3): mov %r13d,%edi
72b9(4): call 0x0(%r12,%rbx,8)
72bd(4): add $0x1,%rbx
72c1(3): cmp %rbx,%rbp
72c4(2): jnz 0xffffffec(%rip)
72c6(4): add $0x8,%rsp
72ca(1): pop %rbx
72cb(1): pop %rbp
72cc(2): pop %r12
72ce(2): pop %r13
72d0(2): pop %r14
72d2(2): pop %r15
72d4(1): ret near (%rsp)

"atexit" :
72f0(7): mov 0x203d11(%rip),%rdx
72f7(2): xor %esi,%esi
72f9(5): jmp 0xffffa637(%rip)

"_fini" :
7300(4): sub $0x8,%rsp
7304(4): add $0x8,%rsp
7308(1): ret near (%rsp)

