
"free@plt" :
1230(6): jmp 0x205c6a(%rip)
1236(5): push $0x0

"abort@plt" :
1240(6): jmp 0x205c62(%rip)
1246(5): push $0x1

"__errno_location@plt" :
1250(6): jmp 0x205c5a(%rip)
1256(5): push $0x2

"strncmp@plt" :
1260(6): jmp 0x205c52(%rip)
1266(5): push $0x3

"_exit@plt" :
1270(6): jmp 0x205c4a(%rip)
1276(5): push $0x4

"__fpending@plt" :
1280(6): jmp 0x205c42(%rip)
1286(5): push $0x5

"textdomain@plt" :
1290(6): jmp 0x205c3a(%rip)
1296(5): push $0x6

"fclose@plt" :
12a0(6): jmp 0x205c32(%rip)
12a6(5): push $0x7

"bindtextdomain@plt" :
12b0(6): jmp 0x205c2a(%rip)
12b6(5): push $0x8

"dcgettext@plt" :
12c0(6): jmp 0x205c22(%rip)
12c6(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
12d0(6): jmp 0x205c1a(%rip)
12d6(5): push $0xa

"strlen@plt" :
12e0(6): jmp 0x205c12(%rip)
12e6(5): push $0xb

"__stack_chk_fail@plt" :
12f0(6): jmp 0x205c0a(%rip)
12f6(5): push $0xc

"getopt_long@plt" :
1300(6): jmp 0x205c02(%rip)
1306(5): push $0xd

"mbrtowc@plt" :
1310(6): jmp 0x205bfa(%rip)
1316(5): push $0xe

"strrchr@plt" :
1320(6): jmp 0x205bf2(%rip)
1326(5): push $0xf

"lseek@plt" :
1330(6): jmp 0x205bea(%rip)
1336(5): push $0x10

"memset@plt" :
1340(6): jmp 0x205be2(%rip)
1346(5): push $0x11

"memcmp@plt" :
1350(6): jmp 0x205bda(%rip)
1356(5): push $0x12

"fputs_unlocked@plt" :
1360(6): jmp 0x205bd2(%rip)
1366(5): push $0x13

"calloc@plt" :
1370(6): jmp 0x205bca(%rip)
1376(5): push $0x14

"memcpy@plt" :
1380(6): jmp 0x205bc2(%rip)
1386(5): push $0x15

"fileno@plt" :
1390(6): jmp 0x205bba(%rip)
1396(5): push $0x16

"malloc@plt" :
13a0(6): jmp 0x205bb2(%rip)
13a6(5): push $0x17

"fflush@plt" :
13b0(6): jmp 0x205baa(%rip)
13b6(5): push $0x18

"nl_langinfo@plt" :
13c0(6): jmp 0x205ba2(%rip)
13c6(5): push $0x19

"__freading@plt" :
13d0(6): jmp 0x205b9a(%rip)
13d6(5): push $0x1a

"realloc@plt" :
13e0(6): jmp 0x205b92(%rip)
13e6(5): push $0x1b

"setlocale@plt" :
13f0(6): jmp 0x205b8a(%rip)
13f6(5): push $0x1c

"__printf_chk@plt" :
1400(6): jmp 0x205b82(%rip)
1406(5): push $0x1d

"error@plt" :
1410(6): jmp 0x205b7a(%rip)
1416(5): push $0x1e

"fseeko@plt" :
1420(6): jmp 0x205b72(%rip)
1426(5): push $0x1f

"__cxa_atexit@plt" :
1430(6): jmp 0x205b6a(%rip)
1436(5): push $0x20

"exit@plt" :
1440(6): jmp 0x205b62(%rip)
1446(5): push $0x21

"fwrite@plt" :
1450(6): jmp 0x205b5a(%rip)
1456(5): push $0x22

"__fprintf_chk@plt" :
1460(6): jmp 0x205b52(%rip)
1466(5): push $0x23

"mbsinit@plt" :
1470(6): jmp 0x205b4a(%rip)
1476(5): push $0x24

"iswprint@plt" :
1480(6): jmp 0x205b42(%rip)
1486(5): push $0x25

"__ctype_b_loc@plt" :
1490(6): jmp 0x205b3a(%rip)
1496(5): push $0x26

".plt.got" :
14a0(6): jmp 0x205b52(%rip)
14a6(2): nop 

"_init" :
1200(4): sub $0x8,%rsp
1204(7): mov 0x205ddd(%rip),%rax
120b(3): test %rax,%rax
120e(2): jz 0x4(%rip)
1210(2): call %rax
1212(4): add $0x8,%rsp
1216(1): ret near (%rsp)

"main" :
14b0(2): push %r15
14b2(2): push %r14
14b4(3): xor %r15d,%r15d
14b7(2): push %r13
14b9(2): push %r12
14bb(3): xor %r13d,%r13d
14be(1): push %rbp
14bf(1): push %rbx
14c0(2): mov %edi,%ebp
14c2(3): mov %rsi,%rbx
14c5(3): xor %r14d,%r14d
14c8(4): sub $0x28,%rsp
14cc(3): mov (%rsi),%rdi
14cf(9): mov $0x28,%rax
14d8(5): mov %rax,0x18(%rsp)
14dd(2): xor %eax,%eax
14df(5): lea 0x14(%rsp),%r12
14e4(5): call 0x83c(%rip)
14e9(7): lea 0x3c71(%rip),%rsi
14f0(5): mov $0x6,%edi
14f5(5): call 0xfffffefb(%rip)
14fa(7): lea 0x322d(%rip),%rsi
1501(7): lea 0x31fd(%rip),%rdi
1508(5): call 0xfffffda8(%rip)
150d(7): lea 0x31f1(%rip),%rdi
1514(5): call 0xfffffd7c(%rip)
1519(7): lea 0x750(%rip),%rdi
1520(5): call 0x3130(%rip)
1525(5): mov $0x0,0xf(%rsp)
152a(8): mov $0x0,(%rsp)
1532(7): lea 0x205607(%rip),%rcx
1539(7): lea 0x3206(%rip),%rdx
1540(3): mov %r12,%r8
1543(3): mov %rbx,%rsi
1546(2): mov %ebp,%edi
1548(8): mov $0x0,0x14(%rsp)
1550(5): call 0xfffffdb0(%rip)
1555(3): cmp $0xff,%eax
1558(6): jz 0xdc(%rip)
155e(3): cmp $0x6c,%eax
1561(6): jz 0xb8(%rip)
1567(2): jnle 0x49(%rip)
1569(5): cmp $0xffffff7e,%eax
156e(2): jz 0x7a(%rip)
1570(3): cmp $0x63,%eax
1573(2): jz 0x6b(%rip)
1575(5): cmp $0xffffff7d,%eax
157a(2): jnz 0x45(%rip)
157c(7): mov 0x205b05(%rip),%rdi
1583(7): mov 0x205a86(%rip),%rcx
158a(7): lea 0x3202(%rip),%r8
1591(7): lea 0x3169(%rip),%rdx
1598(7): lea 0x30e5(%rip),%rsi
159f(3): xor %r9d,%r9d
15a2(2): xor %eax,%eax
15a4(5): call 0x296c(%rip)
15a9(2): xor %edi,%edi
15ab(5): call 0xfffffe95(%rip)
15b0(3): cmp $0x74,%eax
15b3(2): jz 0x3c(%rip)
15b5(3): cmp $0x75,%eax
15b8(2): jz 0x11(%rip)
15ba(3): cmp $0x72,%eax
15bd(2): jz 0x47(%rip)
15bf(5): mov $0x1,%edi
15c4(5): call 0x2fc(%rip)
15c9(3): test %r13,%r13
15cc(6): jnz 0x127(%rip)
15d2(7): mov 0x205abf(%rip),%r13
15d9(5): jmp 0xffffff59(%rip)
15de(5): mov $0x1,0xf(%rsp)
15e3(5): jmp 0xffffff4f(%rip)
15e8(2): xor %edi,%edi
15ea(5): call 0x2d6(%rip)
15ef(3): test %r15,%r15
15f2(6): jnz 0x125(%rip)
15f8(7): mov 0x205a99(%rip),%r15
15ff(5): jmp 0xffffff33(%rip)
1604(3): test %r14,%r14
1607(6): jnz 0x134(%rip)
160d(7): mov 0x205a84(%rip),%r14
1614(5): jmp 0xffffff1e(%rip)
1619(5): cmp $0x0,(%rsp)
161e(6): jnz 0x141(%rip)
1624(7): mov 0x205a6d(%rip),%rax
162b(4): mov %rax,(%rsp)
162f(5): jmp 0xffffff03(%rip)
1634(6): mov 0x205a56(%rip),%eax
163a(2): cmp %ebp,%eax
163c(2): jz 0x57(%rip)
163e(3): test %r13,%r13
1641(2): jnz 0x24(%rip)
1643(3): test %r14,%r14
1646(2): jnz 0x1f(%rip)
1648(3): test %r15,%r15
164b(3): setz %cl
164e(5): cmp $0x0,(%rsp)
1653(3): setz %dl
1656(2): test %dl,%cl
1658(2): jz 0xd(%rip)
165a(5): cmp $0x0,0xf(%rsp)
165f(6): jz 0x124(%rip)
1665(6): cmp %ebp,0x205a25(%rip)
166b(2): jl 0x5a(%rip)
166d(7): lea 0x314b(%rip),%rsi
1674(5): mov $0x5,%edx
1679(2): xor %edi,%edi
167b(5): call 0xfffffc45(%rip)
1680(2): xor %esi,%esi
1682(3): mov %rax,%rdx
1685(2): xor %edi,%edi
1687(2): xor %eax,%eax
1689(5): call 0xfffffd87(%rip)
168e(5): jmp 0xffffff31(%rip)
1693(5): call 0xfffffbbd(%rip)
1698(7): lea 0x3102(%rip),%rsi
169f(3): mov %rax,%rbx
16a2(5): mov $0x5,%edx
16a7(2): xor %edi,%edi
16a9(6): mov $0x5f,(%rax)
16af(5): call 0xfffffc11(%rip)
16b4(2): mov (%rbx),%esi
16b6(3): mov %rax,%rdx
16b9(5): mov $0x1,%edi
16be(2): xor %eax,%eax
16c0(5): call 0xfffffd50(%rip)
16c5(7): mov 0x205a14(%rip),%rbx
16cc(7): lea 0x34e5(%rip),%rsi
16d3(5): mov $0x5,%edx
16d8(2): xor %edi,%edi
16da(5): call 0xfffffbe6(%rip)
16df(3): mov %rbx,%rcx
16e2(3): mov %rax,%rdx
16e5(2): xor %esi,%esi
16e7(5): mov $0x1,%edi
16ec(2): xor %eax,%eax
16ee(5): call 0xfffffd22(%rip)
16f3(7): lea 0x3075(%rip),%rsi
16fa(5): mov $0x5,%edx
16ff(2): xor %edi,%edi
1701(5): call 0xfffffbbf(%rip)
1706(2): xor %esi,%esi
1708(3): mov %rax,%rdx
170b(5): mov $0x1,%edi
1710(2): xor %eax,%eax
1712(5): call 0xfffffcfe(%rip)
1717(7): lea 0x3042(%rip),%rsi
171e(5): mov $0x5,%edx
1723(2): xor %edi,%edi
1725(5): call 0xfffffb9b(%rip)
172a(2): xor %esi,%esi
172c(3): mov %rax,%rdx
172f(5): mov $0x1,%edi
1734(2): xor %eax,%eax
1736(5): call 0xfffffcda(%rip)
173b(7): lea 0x300f(%rip),%rsi
1742(5): mov $0x5,%edx
1747(2): xor %edi,%edi
1749(5): call 0xfffffb77(%rip)
174e(2): xor %esi,%esi
1750(3): mov %rax,%rdx
1753(5): mov $0x1,%edi
1758(2): xor %eax,%eax
175a(5): call 0xfffffcb6(%rip)
175f(7): lea 0x3018(%rip),%rsi
1766(5): mov $0x5,%edx
176b(2): xor %edi,%edi
176d(5): call 0xfffffb53(%rip)
1772(2): xor %esi,%esi
1774(3): mov %rax,%rdx
1777(5): mov $0x1,%edi
177c(2): xor %eax,%eax
177e(5): call 0xfffffc92(%rip)
1783(2): cmp %ebp,%eax
1785(2): jnl 0x10(%rip)
1787(3): add $0x1,%eax
178a(6): mov %eax,0x205900(%rip)
1790(5): jmp 0xfffffed5(%rip)
1795(5): mov $0x5,%edx
179a(7): lea 0x33e7(%rip),%rsi
17a1(5): jmp 0xfffffed8(%rip)

"_start" :
17b0(2): xor %ebp,%ebp
17b2(3): mov %rdx,%r9
17b5(1): pop %rsi
17b6(3): mov %rsp,%rdx
17b9(4): and $0xfffffff0,%rsp
17bd(1): push %rax
17be(1): push %rsp
17bf(7): lea 0x2e7a(%rip),%r8
17c6(7): lea 0x2e03(%rip),%rcx
17cd(7): lea 0xfffffcdc(%rip),%rdi
17d4(6): call 0x205806(%rip)
17da(1): hlt 

"deregister_tm_clones" :
17e0(7): lea 0x205899(%rip),%rdi
17e7(1): push %rbp
17e8(7): lea 0x205891(%rip),%rax
17ef(3): cmp %rdi,%rax
17f2(3): mov %rsp,%rbp
17f5(2): jz 0x1b(%rip)
17f7(7): mov 0x2057da(%rip),%rax
17fe(3): test %rax,%rax
1801(2): jz 0xf(%rip)
1803(1): pop %rbp
1804(2): jmp %rax
1806(a): nop 0x0(%rax,%rax,1)
1810(1): pop %rbp
1811(1): ret near (%rsp)

"register_tm_clones" :
1820(7): lea 0x205859(%rip),%rdi
1827(7): lea 0x205852(%rip),%rsi
182e(1): push %rbp
182f(3): sub %rdi,%rsi
1832(3): mov %rsp,%rbp
1835(4): sar $0x3,%rsi
1839(3): mov %rsi,%rax
183c(4): shr $0x3f,%rax
1840(3): add %rax,%rsi
1843(3): sar $0x1,%rsi
1846(2): jz 0x1a(%rip)
1848(7): mov 0x2057a1(%rip),%rax
184f(3): test %rax,%rax
1852(2): jz 0xe(%rip)
1854(1): pop %rbp
1855(2): jmp %rax
1857(9): nop 0x0(%rax,%rax,1)
1860(1): pop %rbp
1861(1): ret near (%rsp)

"__do_global_dtors_aux" :
1870(7): cmp $0x0,0x205851(%rip)
1877(2): jnz 0x31(%rip)
1879(8): cmp $0x0,0x205777(%rip)
1881(1): push %rbp
1882(3): mov %rsp,%rbp
1885(2): jz 0xe(%rip)
1887(7): mov 0x20577a(%rip),%rdi
188e(5): call 0xfffffc12(%rip)
1893(5): call 0xffffff4d(%rip)
1898(7): mov $0x1,0x205829(%rip)
189f(1): pop %rbp
18a0(1): ret near (%rsp)
18a1(7): nop 0x0(%rax)
18a8(2): REP ret near (%rsp)

"frame_dummy" :
18b0(1): push %rbp
18b1(3): mov %rsp,%rbp
18b4(1): pop %rbp
18b5(5): jmp 0xffffff6b(%rip)

"usage" :
18c0(2): push %r13
18c2(2): push %r12
18c4(5): mov $0x5,%edx
18c9(1): push %rbp
18ca(1): push %rbx
18cb(2): mov %edi,%ebp
18cd(7): sub $0x88,%rsp
18d4(7): mov 0x205805(%rip),%rbx
18db(9): mov $0x28,%rax
18e4(5): mov %rax,0x78(%rsp)
18e9(2): xor %eax,%eax
18eb(2): test %edi,%edi
18ed(2): jz 0x30(%rip)
18ef(7): lea 0x2f0a(%rip),%rsi
18f6(2): xor %edi,%edi
18f8(5): call 0xfffff9c8(%rip)
18fd(7): mov 0x2057bc(%rip),%rdi
1904(3): mov %rax,%rdx
1907(3): mov %rbx,%rcx
190a(5): mov $0x1,%esi
190f(2): xor %eax,%eax
1911(5): call 0xfffffb4f(%rip)
1916(2): mov %ebp,%edi
1918(5): call 0xfffffb28(%rip)
191d(7): lea 0x2f04(%rip),%rsi
1924(2): xor %edi,%edi
1926(5): call 0xfffff99a(%rip)
192b(3): mov %rbx,%rcx
192e(3): mov %rbx,%rdx
1931(3): mov %rax,%rsi
1934(5): mov $0x1,%edi
1939(2): xor %eax,%eax
193b(5): call 0xfffffac5(%rip)
1940(7): mov 0x205741(%rip),%rbx
1947(7): lea 0x2f4a(%rip),%rsi
194e(5): mov $0x5,%edx
1953(2): xor %edi,%edi
1955(5): call 0xfffff96b(%rip)
195a(3): mov %rbx,%rsi
195d(3): mov %rax,%rdi
1960(5): call 0xfffffa00(%rip)
1965(7): mov 0x20571c(%rip),%rbx
196c(7): lea 0x2fa5(%rip),%rsi
1973(5): mov $0x5,%edx
1978(2): xor %edi,%edi
197a(5): call 0xfffff946(%rip)
197f(3): mov %rbx,%rsi
1982(3): mov %rax,%rdi
1985(5): call 0xfffff9db(%rip)
198a(7): mov 0x2056f7(%rip),%rbx
1991(7): lea 0x2fd0(%rip),%rsi
1998(5): mov $0x5,%edx
199d(2): xor %edi,%edi
199f(5): call 0xfffff921(%rip)
19a4(3): mov %rbx,%rsi
19a7(3): mov %rax,%rdi
19aa(5): call 0xfffff9b6(%rip)
19af(7): mov 0x2056d2(%rip),%rbx
19b6(7): lea 0x30bb(%rip),%rsi
19bd(5): mov $0x5,%edx
19c2(2): xor %edi,%edi
19c4(5): call 0xfffff8fc(%rip)
19c9(3): mov %rbx,%rsi
19cc(3): mov %rax,%rdi
19cf(5): call 0xfffff991(%rip)
19d4(7): mov 0x2056ad(%rip),%rbx
19db(7): lea 0x30c6(%rip),%rsi
19e2(5): mov $0x5,%edx
19e7(2): xor %edi,%edi
19e9(5): call 0xfffff8d7(%rip)
19ee(3): mov %rbx,%rsi
19f1(3): mov %rax,%rdi
19f4(7): lea 0x2c89(%rip),%rbx
19fb(5): call 0xfffff965(%rip)
1a00(7): lea 0x2c84(%rip),%rax
1a07(7): lea 0x2cbe(%rip),%rcx
1a0e(9): mov $0x0,0x60(%rsp)
1a17(9): mov $0x0,0x68(%rsp)
1a20(3): mov %rsp,%rdx
1a23(4): mov %rax,(%rsp)
1a27(7): lea 0x2c5f(%rip),%rax
1a2e(5): mov %rcx,0x30(%rsp)
1a33(7): lea 0x2c9c(%rip),%rcx
1a3a(5): mov %rax,0x8(%rsp)
1a3f(7): lea 0x2cbf(%rip),%rax
1a46(5): mov %rcx,0x40(%rsp)
1a4b(7): lea 0x2c8e(%rip),%rcx
1a52(5): mov %rax,0x10(%rsp)
1a57(7): lea 0x2c3f(%rip),%rax
1a5e(5): mov %rcx,0x50(%rsp)
1a63(5): mov %rax,0x18(%rsp)
1a68(7): lea 0x2c44(%rip),%rax
1a6f(5): mov %rax,0x20(%rsp)
1a74(7): lea 0x2c42(%rip),%rax
1a7b(5): mov %rax,0x28(%rsp)
1a80(5): mov %rax,0x38(%rsp)
1a85(5): mov %rax,0x48(%rsp)
1a8a(5): mov %rax,0x58(%rsp)
1a8f(1): nop 
1a90(4): add $0x10,%rdx
1a94(3): mov (%rdx),%rdi
1a97(3): test %rdi,%rdi
1a9a(2): jz 0x15(%rip)
1a9c(5): mov $0x7,%ecx
1aa1(3): mov %rbx,%rsi
1aa4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1aa6(3): setnbe %al
1aa9(2): sbb $0x0,%al
1aab(2): test %al,%al
1aad(2): jnz 0xffffffe3(%rip)
1aaf(4): mov 0x8(%rdx),%r12
1ab3(2): xor %edi,%edi
1ab5(5): mov $0x5,%edx
1aba(7): lea 0x2c29(%rip),%rsi
1ac1(3): test %r12,%r12
1ac4(6): jz 0xc7(%rip)
1aca(5): call 0xfffff7f6(%rip)
1acf(7): lea 0x300a(%rip),%rcx
1ad6(7): lea 0x2c24(%rip),%rdx
1add(3): mov %rax,%rsi
1ae0(5): mov $0x1,%edi
1ae5(2): xor %eax,%eax
1ae7(5): call 0xfffff919(%rip)
1aec(2): xor %esi,%esi
1aee(5): mov $0x5,%edi
1af3(5): call 0xfffff8fd(%rip)
1af8(3): test %rax,%rax
1afb(2): jz 0x1e(%rip)
1afd(7): lea 0x2c0b(%rip),%rsi
1b04(5): mov $0x3,%edx
1b09(3): mov %rax,%rdi
1b0c(5): call 0xfffff754(%rip)
1b11(2): test %eax,%eax
1b13(6): jnz 0x10d(%rip)
1b19(7): lea 0x2bf3(%rip),%rsi
1b20(2): xor %edi,%edi
1b22(5): mov $0x5,%edx
1b27(5): call 0xfffff799(%rip)
1b2c(7): lea 0x2b51(%rip),%rcx
1b33(7): lea 0x2fa6(%rip),%rdx
1b3a(3): mov %rax,%rsi
1b3d(5): mov $0x1,%edi
1b42(2): xor %eax,%eax
1b44(5): call 0xfffff8bc(%rip)
1b49(3): cmp %rbx,%r12
1b4c(7): lea 0x2b54(%rip),%rcx
1b53(7): lea 0x3607(%rip),%rbx
1b5a(4): cmove %rcx,%rbx
1b5e(7): lea 0x2feb(%rip),%rsi
1b65(2): xor %edi,%edi
1b67(5): mov $0x5,%edx
1b6c(5): call 0xfffff754(%rip)
1b71(3): mov %rbx,%rcx
1b74(3): mov %rax,%rsi
1b77(3): mov %r12,%rdx
1b7a(5): mov $0x1,%edi
1b7f(2): xor %eax,%eax
1b81(5): call 0xfffff87f(%rip)
1b86(5): jmp 0xfffffd90(%rip)
1b8b(5): call 0xfffff735(%rip)
1b90(7): lea 0x2f49(%rip),%rcx
1b97(7): lea 0x2b63(%rip),%rdx
1b9e(3): mov %rax,%rsi
1ba1(5): mov $0x1,%edi
1ba6(2): xor %eax,%eax
1ba8(5): call 0xfffff858(%rip)
1bad(2): xor %esi,%esi
1baf(5): mov $0x5,%edi
1bb4(5): call 0xfffff83c(%rip)
1bb9(3): test %rax,%rax
1bbc(2): jz 0x1a(%rip)
1bbe(7): lea 0x2b4a(%rip),%rsi
1bc5(5): mov $0x3,%edx
1bca(3): mov %rax,%rdi
1bcd(5): call 0xfffff693(%rip)
1bd2(2): test %eax,%eax
1bd4(2): jnz 0x45(%rip)
1bd6(7): lea 0x2b36(%rip),%rsi
1bdd(5): mov $0x5,%edx
1be2(2): xor %edi,%edi
1be4(7): lea 0x2a99(%rip),%r12
1beb(7): lea 0x2ab5(%rip),%rbx
1bf2(5): call 0xfffff6ce(%rip)
1bf7(7): lea 0x2a86(%rip),%rcx
1bfe(7): lea 0x2edb(%rip),%rdx
1c05(3): mov %rax,%rsi
1c08(5): mov $0x1,%edi
1c0d(2): xor %eax,%eax
1c0f(5): call 0xfffff7f1(%rip)
1c14(5): jmp 0xffffff4a(%rip)
1c19(7): lea 0x2a64(%rip),%r12
1c20(7): mov 0x205461(%rip),%r13
1c27(7): lea 0x2eda(%rip),%rsi
1c2e(2): xor %edi,%edi
1c30(5): mov $0x5,%edx
1c35(5): call 0xfffff68b(%rip)
1c3a(3): mov %r13,%rsi
1c3d(3): mov %rax,%rdi
1c40(5): call 0xfffff720(%rip)
1c45(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1c50(7): mov %rdi,0x205481(%rip)
1c57(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1c60(7): mov %dil,0x205469(%rip)
1c67(1): ret near (%rsp)

"close_stdout" :
1c70(1): push %rbp
1c71(1): push %rbx
1c72(4): sub $0x8,%rsp
1c76(7): mov 0x20540b(%rip),%rdi
1c7d(5): call 0x2713(%rip)
1c82(2): test %eax,%eax
1c84(2): jz 0x18(%rip)
1c86(5): call 0xfffff5ca(%rip)
1c8b(7): cmp $0x0,0x20543e(%rip)
1c92(3): mov %rax,%rbx
1c95(2): jz 0x1e(%rip)
1c97(3): cmp $0x20,(%rax)
1c9a(2): jnz 0x19(%rip)
1c9c(7): mov 0x20541d(%rip),%rdi
1ca3(5): call 0x26ed(%rip)
1ca8(2): test %eax,%eax
1caa(2): jnz 0x48(%rip)
1cac(4): add $0x8,%rsp
1cb0(1): pop %rbx
1cb1(1): pop %rbp
1cb2(1): ret near (%rsp)
1cb3(7): lea 0x2f2b(%rip),%rsi
1cba(2): xor %edi,%edi
1cbc(5): mov $0x5,%edx
1cc1(5): call 0xfffff5ff(%rip)
1cc6(7): mov 0x20540b(%rip),%rdi
1ccd(3): mov %rax,%rbp
1cd0(3): test %rdi,%rdi
1cd3(2): jz 0x2a(%rip)
1cd5(5): call 0x1b5b(%rip)
1cda(2): mov (%rbx),%esi
1cdc(7): lea 0x2f0e(%rip),%rdx
1ce3(3): mov %rax,%rcx
1ce6(3): mov %rbp,%r8
1ce9(2): xor %edi,%edi
1ceb(2): xor %eax,%eax
1ced(5): call 0xfffff723(%rip)
1cf2(6): mov 0x205320(%rip),%edi
1cf8(5): call 0xfffff578(%rip)
1cfd(2): mov (%rbx),%esi
1cff(7): lea 0x2eef(%rip),%rdx
1d06(3): mov %rax,%rcx
1d09(2): xor %edi,%edi
1d0b(2): xor %eax,%eax
1d0d(5): call 0xfffff703(%rip)
1d12(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1d20(3): test %rdi,%rdi
1d23(1): push %rbx
1d24(2): jz 0x79(%rip)
1d26(5): mov $0x2f,%esi
1d2b(3): mov %rdi,%rbx
1d2e(5): call 0xfffff5f2(%rip)
1d33(3): test %rax,%rax
1d36(2): jz 0x57(%rip)
1d38(4): lea 0x1(%rax),%r8
1d3c(3): mov %r8,%rdx
1d3f(3): sub %rbx,%rdx
1d42(4): cmp $0x6,%rdx
1d46(2): jle 0x47(%rip)
1d48(4): lea 0xfffffffa(%rax),%rsi
1d4c(7): lea 0x2edd(%rip),%rdi
1d53(5): mov $0x7,%ecx
1d58(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d5a(3): setnbe %dl
1d5d(3): sbb $0x0,%dl
1d60(2): test %dl,%dl
1d62(2): jnz 0x2b(%rip)
1d64(7): lea 0x2ecd(%rip),%rdi
1d6b(5): mov $0x3,%ecx
1d70(3): mov %r8,%rsi
1d73(3): mov %r8,%rbx
1d76(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d78(3): setnbe %dl
1d7b(3): sbb $0x0,%dl
1d7e(2): test %dl,%dl
1d80(2): jnz 0xd(%rip)
1d82(4): lea 0x4(%rax),%rbx
1d86(7): mov %rbx,0x2052f3(%rip)
1d8d(7): mov %rbx,0x20534c(%rip)
1d94(7): mov %rbx,0x205305(%rip)
1d9b(1): pop %rbx
1d9c(1): ret near (%rsp)
1d9d(7): mov 0x20531c(%rip),%rcx
1da4(7): lea 0x2e4d(%rip),%rdi
1dab(5): mov $0x37,%edx
1db0(5): mov $0x1,%esi
1db5(5): call 0xfffff69b(%rip)
1dba(5): call 0xfffff486(%rip)

"gettext_quote.part.1" :
1dc0(1): push %rbp
1dc1(1): push %rbx
1dc2(3): mov %rdi,%rbp
1dc5(2): mov %esi,%ebx
1dc7(4): sub $0x8,%rsp
1dcb(5): call 0x26a5(%rip)
1dd0(3): movzx (%rax),%edx
1dd3(3): and $0xdf,%edx
1dd6(3): cmp $0x55,%dl
1dd9(2): jz 0x77(%rip)
1ddb(3): cmp $0x47,%dl
1dde(2): jz 0x22(%rip)
1de0(7): lea 0x2e64(%rip),%rax
1de7(7): lea 0x2e5f(%rip),%rdx
1dee(3): cmp $0x9,%ebx
1df1(4): cmovne %rdx,%rax
1df5(4): add $0x8,%rsp
1df9(1): pop %rbx
1dfa(1): pop %rbp
1dfb(1): ret near (%rsp)
1dfc(4): nop 0x0(%rax)
1e00(4): movzx 0x1(%rax),%edx
1e04(3): and $0xdf,%edx
1e07(3): cmp $0x42,%dl
1e0a(2): jnz 0xffffffd6(%rip)
1e0c(4): cmp $0x31,0x2(%rax)
1e10(2): jnz 0xffffffd0(%rip)
1e12(4): cmp $0x38,0x3(%rax)
1e16(2): jnz 0xffffffca(%rip)
1e18(4): cmp $0x30,0x4(%rax)
1e1c(2): jnz 0xffffffc4(%rip)
1e1e(4): cmp $0x33,0x5(%rax)
1e22(2): jnz 0xffffffbe(%rip)
1e24(4): cmp $0x30,0x6(%rax)
1e28(2): jnz 0xffffffb8(%rip)
1e2a(4): cmp $0x0,0x7(%rax)
1e2e(2): jnz 0xffffffb2(%rip)
1e30(4): cmp $0x60,0x0(%rbp)
1e34(7): lea 0x2e09(%rip),%rax
1e3b(7): lea 0x2e06(%rip),%rdx
1e42(4): cmovne %rdx,%rax
1e46(4): add $0x8,%rsp
1e4a(1): pop %rbx
1e4b(1): pop %rbp
1e4c(1): ret near (%rsp)
1e4d(3): nop (%rax)
1e50(4): movzx 0x1(%rax),%edx
1e54(3): and $0xdf,%edx
1e57(3): cmp $0x54,%dl
1e5a(2): jnz 0xffffff86(%rip)
1e5c(4): movzx 0x2(%rax),%edx
1e60(3): and $0xdf,%edx
1e63(3): cmp $0x46,%dl
1e66(6): jnz 0xffffff7a(%rip)
1e6c(4): cmp $0x2d,0x3(%rax)
1e70(6): jnz 0xffffff70(%rip)
1e76(4): cmp $0x38,0x4(%rax)
1e7a(6): jnz 0xffffff66(%rip)
1e80(4): cmp $0x0,0x5(%rax)
1e84(6): jnz 0xffffff5c(%rip)
1e8a(4): cmp $0x60,0x0(%rbp)
1e8e(7): lea 0x2da7(%rip),%rax
1e95(7): lea 0x2da4(%rip),%rdx
1e9c(4): cmovne %rdx,%rax
1ea0(4): add $0x8,%rsp
1ea4(1): pop %rbx
1ea5(1): pop %rbp
1ea6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1eb0(2): push %r15
1eb2(2): push %r14
1eb4(3): mov %r8d,%r15d
1eb7(2): push %r13
1eb9(2): push %r12
1ebb(3): mov %rdi,%r14
1ebe(1): push %rbp
1ebf(1): push %rbx
1ec0(3): mov %r9d,%ebx
1ec3(3): mov %rsi,%r13
1ec6(3): mov %rcx,%rbp
1ec9(3): and $0x2,%ebx
1ecc(7): sub $0xb8,%rsp
1ed3(8): mov 0xf0(%rsp),%rax
1edb(5): mov %rdx,0x10(%rsp)
1ee0(5): mov %r8d,0x8(%rsp)
1ee5(5): mov %r9d,0x78(%rsp)
1eea(5): mov %rax,0x20(%rsp)
1eef(8): mov 0xf8(%rsp),%rax
1ef7(5): mov %rax,0x68(%rsp)
1efc(8): mov 0x100(%rsp),%rax
1f04(5): mov %rax,0x60(%rsp)
1f09(9): mov $0x28,%rax
1f12(8): mov %rax,0xa8(%rsp)
1f1a(2): xor %eax,%eax
1f1c(5): call 0xfffff3b4(%rip)
1f21(4): cmp $0xa,%r15d
1f25(5): mov %rax,0x58(%rsp)
1f2a(6): jnbe 0x11b5(%rip)
1f30(7): lea 0x2d69(%rip),%rcx
1f37(3): mov %r15d,%edx
1f3a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1f3e(3): add %rcx,%rax
1f41(2): jmp %rax
1f43(5): mov $0x1,0xe(%rsp)
1f48(5): mov $0x0,0x7c(%rsp)
1f4d(3): xor %r12d,%r12d
1f50(9): mov $0x0,0x50(%rsp)
1f59(5): mov $0x1,0xf(%rsp)
1f5e(5): mov $0x0,0xd(%rsp)
1f63(7): lea 0x2ce3(%rip),%rax
1f6a(9): mov $0x1,0x18(%rsp)
1f73(3): xor %r15d,%r15d
1f76(8): mov $0x2,0x8(%rsp)
1f7e(5): mov %rax,0x48(%rsp)
1f83(3): xor %r11d,%r11d
1f86(3): mov %rbp,%rax
1f89(3): mov %r12d,%r8d
1f8c(3): mov %r11,%rbp
1f8f(3): mov %rax,%r11
1f92(6): nop 0x0(%rax,%rax,1)
1f98(3): cmp %rbp,%r11
1f9b(4): setnz %r12b
1f9f(4): cmp $0xffffffff,%r11
1fa3(2): jnz 0xf(%rip)
1fa5(5): mov 0x10(%rsp),%rax
1faa(4): cmp $0x0,0x0(%rax,%rbp,1)
1fae(4): setnz %r12b
1fb2(3): test %r12b,%r12b
1fb5(6): jz 0x65b(%rip)
1fbb(5): cmp $0x2,0x8(%rsp)
1fc0(5): mov 0x10(%rsp),%rdi
1fc5(4): lea 0x0(%rdi,%rbp,1),%r9
1fc9(3): setnz %al
1fcc(4): and 0xd(%rsp),%al
1fd0(3): mov %eax,%r10d
1fd3(6): jz 0xad(%rip)
1fd9(5): mov 0x18(%rsp),%rax
1fde(3): test %rax,%rax
1fe1(6): jz 0x42f(%rip)
1fe7(4): cmp $0xffffffff,%r11
1feb(5): lea 0x0(%rbp,%rax,1),%rbx
1ff0(2): jnz 0x30(%rip)
1ff2(4): cmp $0x1,%rax
1ff6(2): jbe 0x2a(%rip)
1ff8(5): mov %r8b,0x38(%rsp)
1ffd(5): mov %r10b,0x30(%rsp)
2002(5): mov %r9,0x28(%rsp)
2007(5): call 0xfffff2d9(%rip)
200c(6): movzx 0x38(%rsp),%r8d
2012(6): movzx 0x30(%rsp),%r10d
2018(3): mov %rax,%r11
201b(5): mov 0x28(%rsp),%r9
2020(3): cmp %r11,%rbx
2023(5): mov %r10b,0x28(%rsp)
2028(6): jnbe 0x5b8(%rip)
202e(5): mov 0x18(%rsp),%rdx
2033(5): mov 0x48(%rsp),%rsi
2038(3): mov %r9,%rdi
203b(5): mov %r11,0x40(%rsp)
2040(5): mov %r8b,0x38(%rsp)
2045(5): mov %r9,0x30(%rsp)
204a(5): call 0xfffff306(%rip)
204f(2): test %eax,%eax
2051(5): mov 0x30(%rsp),%r9
2056(6): movzx 0x38(%rsp),%r8d
205c(5): mov 0x40(%rsp),%r11
2061(6): jnz 0x57f(%rip)
2067(5): cmp $0x0,0xf(%rsp)
206c(6): movzx 0x28(%rsp),%r10d
2072(6): jnz 0xf83(%rip)
2078(8): nop 0x0(%rax,%rax,1)
2080(4): movzx (%r9),%ebx
2084(3): cmp $0x7e,%bl
2087(6): jnbe 0x321(%rip)
208d(7): lea 0x2c38(%rip),%rcx
2094(3): movzx %bl,%edx
2097(4): movsxd 0x0(%rcx,%rdx,4),%rax
209b(3): add %rcx,%rax
209e(2): jmp %rax
20a0(3): xor %r10d,%r10d
20a3(4): cmp $0x1,%r11
20a7(3): setnz %al
20aa(4): cmp $0xffffffff,%r11
20ae(2): jnz 0xe(%rip)
20b0(5): mov 0x10(%rsp),%rax
20b5(4): cmp $0x0,0x1(%rax)
20b9(3): setnz %al
20bc(5): cmp $0x2,0x8(%rsp)
20c1(3): setz %dl
20c4(2): test %al,%al
20c6(6): jz 0x252(%rip)
20cc(3): xor %r12d,%r12d
20cf(2): xor %eax,%eax
20d1(7): nop 0x0(%rax)
20d8(5): cmp $0x1,0xd(%rsp)
20dd(6): jnz 0x115(%rip)
20e3(2): test %dl,%dl
20e5(6): jnz 0x10d(%rip)
20eb(5): mov 0x20(%rsp),%rsi
20f0(3): test %rsi,%rsi
20f3(2): jz 0x16(%rip)
20f5(2): mov %ebx,%edx
20f7(3): shr $0x5,%dl
20fa(3): movzx %dl,%edx
20fd(3): mov 0x0(%rsi,%rdx,4),%edx
2100(3): bt %ebx,%edx
2103(6): jb 0x150(%rip)
2109(3): test %r10b,%r10b
210c(6): jnz 0x147(%rip)
2112(3): xor $0x1,%eax
2115(4): add $0x1,%rbp
2119(3): and %r8d,%eax
211c(2): test %al,%al
211e(2): jz 0x22(%rip)
2120(3): cmp %r15,%r13
2123(2): jbe 0x7(%rip)
2125(5): mov $0x27,0x0(%r14,%r15,1)
212a(4): lea 0x1(%r15),%rax
212e(3): cmp %rax,%r13
2131(2): jbe 0x8(%rip)
2133(6): mov $0x27,0x1(%r14,%r15,1)
2139(4): add $0x2,%r15
213d(3): xor %r8d,%r8d
2140(3): cmp %r13,%r15
2143(2): jnb 0x6(%rip)
2145(4): mov %bl,0x0(%r14,%r15,1)
2149(5): movzx 0xe(%rsp),%edi
214e(4): add $0x1,%r15
2152(5): mov $0x0,%eax
2157(3): test %r12b,%r12b
215a(3): cmove %eax,%edi
215d(5): mov %dil,0xe(%rsp)
2162(5): jmp 0xfffffe36(%rip)
2167(9): nop 0x0(%rax,%rax,1)
2170(3): xor %r10d,%r10d
2173(4): mov 0x8(%rsp),%eax
2177(3): cmp $0x2,%eax
217a(6): jz 0x5be(%rip)
2180(3): cmp $0x5,%eax
2183(6): jz 0x575(%rip)
2189(3): cmp $0x2,%eax
218c(5): mov $0x3f,%ebx
2191(3): setz %dl
2194(3): xor %r12d,%r12d
2197(2): xor %eax,%eax
2199(5): jmp 0xffffff3f(%rip)
219e(2): nop 
21a0(3): xor %r10d,%r10d
21a3(5): cmp $0x2,0x8(%rsp)
21a8(6): jz 0x508(%rip)
21ae(5): mov %r12b,0x7c(%rsp)
21b3(2): xor %edx,%edx
21b5(2): xor %eax,%eax
21b7(5): mov $0x27,%ebx
21bc(5): jmp 0xffffff1c(%rip)
21c1(7): nop 0x0(%rax)
21c8(5): mov $0x9,%edx
21cd(5): mov $0x74,%ebx
21d2(5): cmp $0x2,0x8(%rsp)
21d7(3): setz %al
21da(4): and 0xf(%rsp),%al
21de(6): jnz 0x150(%rip)
21e4(5): cmp $0x0,0xd(%rsp)
21e9(2): jnz 0x67(%rip)
21eb(2): mov %edx,%ebx
21ed(3): xor %r12d,%r12d
21f0(2): xor %eax,%eax
21f2(5): cmp $0x0,0xf(%rsp)
21f7(6): jnz 0xfffffef4(%rip)
21fd(5): jmp 0xffffff0c(%rip)
2202(6): nop 0x0(%rax,%rax,1)
2208(5): mov $0x8,%edx
220d(5): mov $0x62,%ebx
2212(2): jmp 0xffffffd2(%rip)
2214(4): nop 0x0(%rax)
2218(5): cmp $0x2,0x8(%rsp)
221d(6): jz 0x3d3(%rip)
2223(5): cmp $0x0,0xd(%rsp)
2228(6): jz 0x218(%rip)
222e(5): cmp $0x0,0xf(%rsp)
2233(6): jz 0x20d(%rip)
2239(6): cmp $0x0,0x18(%rsp)
223f(6): jnz 0x3bc(%rip)
2245(5): mov $0x5c,%ebx
224a(6): nop 0x0(%rax,%rax,1)
2250(3): xor %r12d,%r12d
2253(5): cmp $0x2,0x8(%rsp)
2258(3): setz %dl
225b(5): cmp $0x0,0xf(%rsp)
2260(2): mov %edx,%eax
2262(6): jnz 0x856(%rip)
2268(3): mov %r8d,%eax
226b(3): xor $0x1,%eax
226e(2): and %dl,%al
2270(2): jz 0x31(%rip)
2272(3): cmp %r15,%r13
2275(2): jbe 0x7(%rip)
2277(5): mov $0x27,0x0(%r14,%r15,1)
227c(4): lea 0x1(%r15),%rdx
2280(3): cmp %rdx,%r13
2283(2): jbe 0x8(%rip)
2285(6): mov $0x24,0x1(%r14,%r15,1)
228b(4): lea 0x2(%r15),%rdx
228f(3): cmp %rdx,%r13
2292(2): jbe 0x8(%rip)
2294(6): mov $0x27,0x2(%r14,%r15,1)
229a(4): add $0x3,%r15
229e(3): mov %eax,%r8d
22a1(3): cmp %r15,%r13
22a4(2): jbe 0x7(%rip)
22a6(5): mov $0x5c,0x0(%r14,%r15,1)
22ab(4): add $0x1,%r15
22af(4): add $0x1,%rbp
22b3(5): jmp 0xfffffe8d(%rip)
22b8(8): nop 0x0(%rax,%rax,1)
22c0(5): cmp $0x0,0xd(%rsp)
22c5(6): jnz 0x1ce(%rip)
22cb(2): xor %edx,%edx
22cd(5): test $0x1,0x78(%rsp)
22d2(6): jz 0xffffff19(%rip)
22d8(4): add $0x1,%rbp
22dc(5): jmp 0xfffffcbc(%rip)
22e1(7): nop 0x0(%rax)
22e8(5): cmp $0x2,0x8(%rsp)
22ed(3): setz %dl
22f0(2): xor %eax,%eax
22f2(5): jmp 0xfffffde6(%rip)
22f7(9): nop 0x0(%rax,%rax,1)
2300(5): mov $0x7,%edx
2305(5): mov $0x61,%ebx
230a(5): jmp 0xfffffeda(%rip)
230f(1): nop 
2310(5): cmp $0x2,0x8(%rsp)
2315(3): setz %dl
2318(3): test %rbp,%rbp
231b(6): jnz 0xfffffdb1(%rip)
2321(5): movzx 0xf(%rsp),%eax
2326(2): and %dl,%al
2328(6): jz 0xfffffdb0(%rip)
232e(3): mov %r11,%rbp
2331(8): mov $0x2,0x8(%rsp)
2339(5): jmp 0x700(%rip)
233e(2): nop 
2340(5): cmp $0x2,0x8(%rsp)
2345(3): setz %dl
2348(3): xor %r12d,%r12d
234b(2): jmp 0xffffffd6(%rip)
234d(3): nop (%rax)
2350(5): cmp $0x2,0x8(%rsp)
2355(5): mov $0x20,%ebx
235a(3): setz %dl
235d(2): jmp 0xffffffc4(%rip)
235f(1): nop 
2360(5): mov $0xd,%edx
2365(5): mov $0x72,%ebx
236a(5): jmp 0xfffffe68(%rip)
236f(1): nop 
2370(5): mov $0xc,%edx
2375(5): mov $0x66,%ebx
237a(5): jmp 0xfffffe6a(%rip)
237f(1): nop 
2380(5): mov $0xb,%edx
2385(5): mov $0x76,%ebx
238a(5): jmp 0xfffffe5a(%rip)
238f(1): nop 
2390(5): mov $0xa,%edx
2395(5): mov $0x6e,%ebx
239a(5): jmp 0xfffffe38(%rip)
239f(1): nop 
23a0(3): xor %r10d,%r10d
23a3(5): nop 0x0(%rax,%rax,1)
23a8(6): cmp $0x1,0x58(%rsp)
23ae(6): jnz 0x3aa(%rip)
23b4(5): mov %r11,0x38(%rsp)
23b9(5): mov %r8b,0x30(%rsp)
23be(5): mov %r10b,0x28(%rsp)
23c3(5): call 0xfffff0cd(%rip)
23c8(3): mov (%rax),%rcx
23cb(3): movzx %bl,%edx
23ce(6): movzx 0x28(%rsp),%r10d
23d4(6): movzx 0x30(%rsp),%r8d
23da(5): mov 0x38(%rsp),%r11
23df(5): mov $0x1,%edi
23e4(4): movzx 0x0(%rcx,%rdx,2),%eax
23e8(4): and $0x4000,%ax
23ec(4): setnz %r12b
23f0(3): setz %al
23f3(4): and 0xd(%rsp),%al
23f7(2): test %al,%al
23f9(6): jnz 0x998(%rip)
23ff(5): cmp $0x2,0x8(%rsp)
2404(3): setz %dl
2407(5): jmp 0xfffffcd1(%rip)
240c(4): nop 0x0(%rax)
2410(4): movzx (%r9),%ebx
2414(3): cmp $0x7e,%bl
2417(2): jnbe 0xffffff89(%rip)
2419(7): lea 0x2aa8(%rip),%rcx
2420(3): movzx %bl,%edx
2423(4): movsxd 0x0(%rcx,%rdx,4),%rax
2427(3): add %rcx,%rax
242a(2): jmp %rax
242c(4): nop 0x0(%rax)
2430(3): xor %r10d,%r10d
2433(5): cmp $0x0,0xd(%rsp)
2438(6): jnz 0xfffffdf6(%rip)
243e(2): nop 
2440(5): mov $0x5c,%edx
2445(5): mov $0x5c,%ebx
244a(5): jmp 0xfffffd9a(%rip)
244f(1): nop 
2450(5): mov $0xc,%edx
2455(3): xor %r10d,%r10d
2458(5): mov $0x66,%ebx
245d(5): jmp 0xfffffd87(%rip)
2462(6): nop 0x0(%rax,%rax,1)
2468(5): mov $0xa,%edx
246d(3): xor %r10d,%r10d
2470(5): mov $0x6e,%ebx
2475(5): jmp 0xfffffd5d(%rip)
247a(6): nop 0x0(%rax,%rax,1)
2480(5): mov $0x61,%ebx
2485(5): jmp 0xfffffdcb(%rip)
248a(6): nop 0x0(%rax,%rax,1)
2490(3): xor %r10d,%r10d
2493(5): cmp $0x2,0x8(%rsp)
2498(3): setz %dl
249b(5): cmp $0x0,0xf(%rsp)
24a0(6): jnz 0xb9a(%rip)
24a6(3): mov %r8d,%eax
24a9(3): mov %r15,%rcx
24ac(3): xor $0x1,%eax
24af(2): and %dl,%al
24b1(2): jz 0x2f(%rip)
24b3(3): cmp %r15,%r13
24b6(2): jbe 0x7(%rip)
24b8(5): mov $0x27,0x0(%r14,%r15,1)
24bd(4): lea 0x1(%r15),%rcx
24c1(3): cmp %rcx,%r13
24c4(2): jbe 0x8(%rip)
24c6(6): mov $0x24,0x1(%r14,%r15,1)
24cc(4): lea 0x2(%r15),%rcx
24d0(3): cmp %rcx,%r13
24d3(6): jnbe 0x636(%rip)
24d9(4): lea 0x3(%r15),%rcx
24dd(3): mov %eax,%r8d
24e0(3): cmp %rcx,%r13
24e3(2): jbe 0x7(%rip)
24e5(5): mov $0x5c,0x0(%r14,%rcx,1)
24ea(5): cmp $0x2,0x8(%rsp)
24ef(4): lea 0x1(%rcx),%r15
24f3(6): jz 0x606(%rip)
24f9(4): lea 0x1(%rbp),%rax
24fd(3): cmp %r11,%rax
2500(2): jnb 0x1b(%rip)
2502(5): mov 0x10(%rsp),%rax
2507(5): movzx 0x1(%rax,%rbp,1),%eax
250c(4): mov %al,0x28(%rsp)
2510(3): sub $0x30,%eax
2513(2): cmp $0x9,%al
2515(6): jbe 0x834(%rip)
251b(3): mov %r12d,%eax
251e(5): mov $0x30,%ebx
2523(3): xor %r12d,%r12d
2526(5): jmp 0xfffffbb2(%rip)
252b(5): nop 0x0(%rax,%rax,1)
2530(5): cmp $0x2,0x8(%rsp)
2535(3): mov %r10d,%r12d
2538(3): setz %dl
253b(3): xor %r10d,%r10d
253e(2): xor %eax,%eax
2540(5): jmp 0xfffffb98(%rip)
2545(3): nop (%rax)
2548(5): cmp $0x2,0x8(%rsp)
254d(3): setz %dl
2550(3): xor %r10d,%r10d
2553(5): jmp 0xfffffdc5(%rip)
2558(8): nop 0x0(%rax,%rax,1)
2560(5): cmp $0x2,0x8(%rsp)
2565(3): setz %dl
2568(3): xor %r10d,%r10d
256b(3): xor %r12d,%r12d
256e(5): jmp 0xfffffdb3(%rip)
2573(5): nop 0x0(%rax,%rax,1)
2578(5): cmp $0x2,0x8(%rsp)
257d(3): mov %r10d,%r12d
2580(5): mov $0x20,%ebx
2585(3): setz %dl
2588(3): xor %r10d,%r10d
258b(5): jmp 0xfffffd96(%rip)
2590(5): mov $0xd,%edx
2595(3): xor %r10d,%r10d
2598(5): mov $0x72,%ebx
259d(5): jmp 0xfffffc35(%rip)
25a2(6): nop 0x0(%rax,%rax,1)
25a8(5): mov $0x76,%ebx
25ad(5): jmp 0xfffffca3(%rip)
25b2(6): nop 0x0(%rax,%rax,1)
25b8(5): mov $0x9,%edx
25bd(3): xor %r10d,%r10d
25c0(5): mov $0x74,%ebx
25c5(5): jmp 0xfffffc0d(%rip)
25ca(6): nop 0x0(%rax,%rax,1)
25d0(5): mov $0x62,%ebx
25d5(5): jmp 0xfffffc7b(%rip)
25da(6): nop 0x0(%rax,%rax,1)
25e0(3): xor %r10d,%r10d
25e3(5): jmp 0xfffffa9d(%rip)
25e8(8): nop 0x0(%rax,%rax,1)
25f0(5): cmp $0x0,0xf(%rsp)
25f5(6): jnz 0x96b(%rip)
25fb(4): add $0x1,%rbp
25ff(3): mov %r8d,%eax
2602(3): xor %r12d,%r12d
2605(5): mov $0x5c,%ebx
260a(5): jmp 0xfffffb12(%rip)
260f(1): nop 
2610(5): cmp $0x2,0x8(%rsp)
2615(5): movzx 0xf(%rsp),%ebx
261a(3): mov %r8d,%r12d
261d(3): mov %r11,%rbp
2620(3): setz %dl
2623(2): mov %ebx,%eax
2625(3): test %r15,%r15
2628(3): setz %cl
262b(2): and %edx,%eax
262d(2): and %cl,%al
262f(6): jnz 0xa67(%rip)
2635(2): mov %ebx,%eax
2637(3): xor $0x1,%eax
263a(2): and %al,%dl
263c(6): jz 0x970(%rip)
2642(5): cmp $0x0,0x7c(%rsp)
2647(6): jz 0x963(%rip)
264d(5): cmp $0x0,0xe(%rsp)
2652(6): jnz 0x9fb(%rip)
2658(3): test %r13,%r13
265b(3): setz %al
265e(6): cmp $0x0,0x50(%rsp)
2664(3): setnz %dl
2667(2): and %dl,%al
2669(6): jz 0xa23(%rip)
266f(5): mov 0x50(%rsp),%r13
2674(7): lea 0x25d2(%rip),%rbx
267b(4): mov $0x27,(%r14)
267f(8): mov $0x2,0x8(%rsp)
2687(6): mov $0x1,%r15d
268d(9): mov $0x1,0x18(%rsp)
2696(5): mov $0x0,0xf(%rsp)
269b(5): mov %rbx,0x48(%rsp)
26a0(4): mov %al,0x7c(%rsp)
26a4(5): jmp 0xfffff8df(%rip)
26a9(7): nop 0x0(%rax)
26b0(5): cmp $0x0,0xf(%rsp)
26b5(6): jnz 0x8ab(%rip)
26bb(3): test %r13,%r13
26be(6): jz 0x402(%rip)
26c4(2): xor %edx,%edx
26c6(6): cmp $0x0,0x50(%rsp)
26cc(6): jnz 0x3f4(%rip)
26d2(5): mov %r13,0x50(%rsp)
26d7(4): add $0x3,%r15
26db(2): xor %eax,%eax
26dd(5): mov %r12b,0x7c(%rsp)
26e2(3): xor %r8d,%r8d
26e5(3): mov %rdx,%r13
26e8(5): mov $0x27,%ebx
26ed(5): jmp 0xfffffa1c(%rip)
26f2(6): nop 0x0(%rax,%rax,1)
26f8(5): test $0x4,0x78(%rsp)
26fd(2): jz 0x23(%rip)
26ff(4): lea 0x2(%rbp),%rcx
2703(3): cmp %r11,%rcx
2706(2): jnb 0x1a(%rip)
2708(5): mov 0x10(%rsp),%rax
270d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2712(6): jz 0x790(%rip)
2718(8): nop 0x0(%rax,%rax,1)
2720(2): xor %edx,%edx
2722(3): xor %r12d,%r12d
2725(2): xor %eax,%eax
2727(5): mov $0x3f,%ebx
272c(5): jmp 0xfffff9ac(%rip)
2731(7): nop 0x0(%rax)
2738(5): cmp $0x0,0xf(%rsp)
273d(6): jnz 0x823(%rip)
2743(3): xor %r12d,%r12d
2746(2): xor %eax,%eax
2748(5): mov $0x3f,%ebx
274d(5): jmp 0xfffff9bc(%rip)
2752(6): nop 0x0(%rax,%rax,1)
2758(8): lea 0xa0(%rsp),%rax
2760(4): cmp $0xffffffff,%r11
2764(c): mov $0x0,0xa0(%rsp)
2770(5): mov %rax,0x28(%rsp)
2775(2): jnz 0x2f(%rip)
2777(5): mov 0x10(%rsp),%rdi
277c(5): mov %r8b,0x40(%rsp)
2781(5): mov %r10b,0x38(%rsp)
2786(5): mov %r9,0x30(%rsp)
278b(5): call 0xffffeb55(%rip)
2790(6): movzx 0x40(%rsp),%r8d
2796(6): movzx 0x38(%rsp),%r10d
279c(3): mov %rax,%r11
279f(5): mov 0x30(%rsp),%r9
27a4(8): lea 0x9c(%rsp),%rax
27ac(2): xor %ecx,%ecx
27ae(4): mov %bl,0x7e(%rsp)
27b2(5): mov %r8b,0x7d(%rsp)
27b7(3): mov %rcx,%rbx
27ba(8): mov %r9,0x88(%rsp)
27c2(5): mov %rax,0x38(%rsp)
27c7(5): mov %r10b,0x7f(%rsp)
27cc(8): mov %r15,0x80(%rsp)
27d4(5): mov %r14,0x40(%rsp)
27d9(5): mov %r13,0x70(%rsp)
27de(5): mov %r11,0x30(%rsp)
27e3(5): mov 0x10(%rsp),%rax
27e8(5): lea 0x0(%rbp,%rbx,1),%r14
27ed(5): mov 0x30(%rsp),%rdx
27f2(5): mov 0x28(%rsp),%rcx
27f7(5): mov 0x38(%rsp),%rdi
27fc(4): lea 0x0(%rax,%r14,1),%r13
2800(3): sub %r14,%rdx
2803(3): mov %r13,%rsi
2806(5): call 0x1afa(%rip)
280b(3): test %rax,%rax
280e(3): mov %rax,%r15
2811(2): jz 0x50(%rip)
2813(4): cmp $0xffffffff,%rax
2817(6): jz 0x61e(%rip)
281d(4): cmp $0xfffffffe,%rax
2821(6): jz 0x5a0(%rip)
2827(5): cmp $0x2,0x8(%rsp)
282c(3): setz %al
282f(4): and 0xf(%rsp),%al
2833(6): jnz 0x19d(%rip)
2839(7): mov 0x9c(%rsp),%edi
2840(5): call 0xffffec40(%rip)
2845(5): mov 0x28(%rsp),%rdi
284a(2): test %eax,%eax
284c(5): mov $0x0,%eax
2851(4): cmove %eax,%r12d
2855(3): add %r15,%rbx
2858(5): call 0xffffec18(%rip)
285d(2): test %eax,%eax
285f(2): jz 0xffffff84(%rip)
2861(3): mov %r12d,%edx
2864(3): mov %rbx,%rdi
2867(6): movzx 0x7d(%rsp),%r8d
286d(3): xor $0x1,%edx
2870(5): movzx 0x7e(%rsp),%ebx
2875(6): movzx 0x7f(%rsp),%r10d
287b(4): and 0xd(%rsp),%dl
287f(8): mov 0x80(%rsp),%r15
2887(5): mov 0x40(%rsp),%r14
288c(5): mov 0x70(%rsp),%r13
2891(5): mov 0x30(%rsp),%r11
2896(4): cmp $0x1,%rdi
289a(6): jbe 0x601(%rip)
28a0(3): mov %rdi,%rcx
28a3(2): xor %esi,%esi
28a5(6): movzx 0xf(%rsp),%r9d
28ab(3): add %rbp,%rcx
28ae(5): mov 0x10(%rsp),%rdi
28b3(5): jmp 0xbb(%rip)
28b8(8): nop 0x0(%rax,%rax,1)
28c0(5): cmp $0x2,0x8(%rsp)
28c5(3): setz %al
28c8(3): test %r9b,%r9b
28cb(6): jnz 0x4b5(%rip)
28d1(3): mov %r8d,%esi
28d4(3): xor $0x1,%esi
28d7(3): and %sil,%al
28da(2): jz 0x31(%rip)
28dc(3): cmp %r15,%r13
28df(2): jbe 0x7(%rip)
28e1(5): mov $0x27,0x0(%r14,%r15,1)
28e6(4): lea 0x1(%r15),%rsi
28ea(3): cmp %rsi,%r13
28ed(2): jbe 0x8(%rip)
28ef(6): mov $0x24,0x1(%r14,%r15,1)
28f5(4): lea 0x2(%r15),%rsi
28f9(3): cmp %rsi,%r13
28fc(2): jbe 0x8(%rip)
28fe(6): mov $0x27,0x2(%r14,%r15,1)
2904(4): add $0x3,%r15
2908(3): mov %eax,%r8d
290b(3): cmp %r15,%r13
290e(2): jbe 0x7(%rip)
2910(5): mov $0x5c,0x0(%r14,%r15,1)
2915(4): lea 0x1(%r15),%rax
2919(3): cmp %rax,%r13
291c(2): jbe 0xf(%rip)
291e(2): mov %ebx,%eax
2920(3): shr $0x6,%al
2923(3): add $0x30,%eax
2926(5): mov %al,0x1(%r14,%r15,1)
292b(4): lea 0x2(%r15),%rax
292f(3): cmp %rax,%r13
2932(2): jbe 0x12(%rip)
2934(2): mov %ebx,%eax
2936(3): shr $0x3,%al
2939(3): and $0x7,%eax
293c(3): add $0x30,%eax
293f(5): mov %al,0x2(%r14,%r15,1)
2944(3): and $0x7,%ebx
2947(4): add $0x1,%rbp
294b(4): add $0x3,%r15
294f(3): add $0x30,%ebx
2952(3): cmp %rcx,%rbp
2955(6): jnb 0xfffff7eb(%rip)
295b(2): mov %edx,%esi
295d(3): cmp %r15,%r13
2960(2): jbe 0x6(%rip)
2962(4): mov %bl,0x0(%r14,%r15,1)
2966(4): movzx 0x0(%rdi,%rbp,1),%ebx
296a(4): add $0x1,%r15
296e(2): test %dl,%dl
2970(6): jnz 0xffffff50(%rip)
2976(2): mov %esi,%eax
2978(3): xor $0x1,%eax
297b(3): and %r8d,%eax
297e(3): test %r10b,%r10b
2981(2): jz 0x10(%rip)
2983(3): cmp %r15,%r13
2986(2): jbe 0x7(%rip)
2988(5): mov $0x5c,0x0(%r14,%r15,1)
298d(4): add $0x1,%r15
2991(4): add $0x1,%rbp
2995(3): cmp %rcx,%rbp
2998(6): jnb 0xfffff784(%rip)
299e(2): test %al,%al
29a0(6): jz 0x3fe(%rip)
29a6(3): cmp %r15,%r13
29a9(2): jbe 0x7(%rip)
29ab(5): mov $0x27,0x0(%r14,%r15,1)
29b0(4): lea 0x1(%r15),%rax
29b4(3): cmp %rax,%r13
29b7(2): jbe 0x8(%rip)
29b9(6): mov $0x27,0x1(%r14,%r15,1)
29bf(4): add $0x2,%r15
29c3(3): xor %r10d,%r10d
29c6(3): xor %r8d,%r8d
29c9(2): jmp 0xffffff94(%rip)
29cb(5): nop 0x0(%rax,%rax,1)
29d0(4): cmp $0x1,%r15
29d4(6): jz 0xfffffe65(%rip)
29da(5): mov 0x10(%rsp),%rdi
29df(4): lea 0x0(%rdi,%r15,1),%rcx
29e3(5): lea 0x1(%rdi,%r14,1),%rdx
29e8(4): lea 0x0(%rcx,%r14,1),%r8
29ec(2): jmp 0x11(%rip)
29ee(2): nop 
29f0(4): add $0x1,%rdx
29f4(3): cmp %rdx,%r8
29f7(6): jz 0xfffffe42(%rip)
29fd(3): movzx (%rdx),%ecx
2a00(3): sub $0x5b,%ecx
2a03(3): cmp $0x21,%cl
2a06(2): jnbe 0xffffffea(%rip)
2a08(5): mov $0x1,%esi
2a0d(3): shl/sal %cl,%rsi
2a10(3): mov %rsi,%rcx
2a13(a): mov $0x8589934635,%rsi
2a1d(3): test %rsi,%rcx
2a20(2): jz 0xffffffd0(%rip)
2a22(5): mov 0x40(%rsp),%r14
2a27(5): mov 0x70(%rsp),%r13
2a2c(5): mov 0x30(%rsp),%rbp
2a31(8): mov $0x2,0x8(%rsp)
2a39(5): cmp $0x0,0xd(%rsp)
2a3e(2): jz 0x12(%rip)
2a40(2): test %al,%al
2a42(5): mov $0x4,%eax
2a47(5): cmove 0x8(%rsp),%eax
2a4c(4): mov %eax,0x8(%rsp)
2a50(4): sub $0x8,%rsp
2a54(3): mov %rbp,%rcx
2a57(3): mov %r13,%rsi
2a5a(4): push 0x68(%rsp)
2a5e(4): push 0x78(%rsp)
2a62(3): mov %r14,%rdi
2a65(2): push $0x0
2a67(8): mov 0x98(%rsp),%r9d
2a6f(5): mov 0x28(%rsp),%r8d
2a74(5): mov 0x30(%rsp),%rdx
2a79(4): and $0xfd,%r9d
2a7d(5): call 0xfffff433(%rip)
2a82(4): add $0x20,%rsp
2a86(3): mov %rax,%r15
2a89(8): mov 0xa8(%rsp),%rbx
2a91(9): xor $0x28,%rbx
2a9a(3): mov %r15,%rax
2a9d(6): jnz 0x606(%rip)
2aa3(7): add $0xb8,%rsp
2aaa(1): pop %rbx
2aab(1): pop %rbp
2aac(2): pop %r12
2aae(2): pop %r13
2ab0(2): pop %r14
2ab2(2): pop %r15
2ab4(1): ret near (%rsp)
2ab5(3): nop (%rax)
2ab8(3): mov %r11,%rbp
2abb(5): jmp 0xffffff7e(%rip)
2ac0(3): cmp %r15,%r13
2ac3(2): jbe 0x7(%rip)
2ac5(5): mov $0x27,0x0(%r14,%r15,1)
2aca(4): lea 0x1(%r15),%rax
2ace(3): cmp %rax,%r13
2ad1(2): jbe 0x8(%rip)
2ad3(6): mov $0x5c,0x1(%r14,%r15,1)
2ad9(4): lea 0x2(%r15),%rax
2add(3): cmp %rax,%r13
2ae0(6): jbe 0x5f2(%rip)
2ae6(3): mov %r13,%rdx
2ae9(6): mov $0x27,0x2(%r14,%r15,1)
2aef(5): mov 0x50(%rsp),%r13
2af4(5): jmp 0xfffffbde(%rip)
2af9(3): mov %r12d,%eax
2afc(5): mov $0x30,%ebx
2b01(3): xor %r12d,%r12d
2b04(5): jmp 0xfffff605(%rip)
2b09(6): mov $0x27,0x2(%r14,%r15,1)
2b0f(5): jmp 0xfffff9ca(%rip)
2b14(2): test %ebx,%ebx
2b16(6): jnz 0xfffff42d(%rip)
2b1c(5): mov $0x1,0xd(%rsp)
2b21(3): test %r13,%r13
2b24(6): jnz 0x596(%rip)
2b2a(7): lea 0x211c(%rip),%rax
2b31(9): mov $0x0,0x50(%rsp)
2b3a(5): mov $0x1,0xe(%rsp)
2b3f(5): mov $0x0,0x7c(%rsp)
2b44(3): xor %r12d,%r12d
2b47(5): mov $0x0,0xf(%rsp)
2b4c(9): mov $0x1,0x18(%rsp)
2b55(5): mov %rax,0x48(%rsp)
2b5a(6): mov $0x1,%r15d
2b60(8): mov $0x2,0x8(%rsp)
2b68(5): jmp 0xfffff41b(%rip)
2b6d(3): nop (%rax)
2b70(2): test %ebx,%ebx
2b72(6): jnz 0x3fb(%rip)
2b78(3): test %r13,%r13
2b7b(6): jz 0x22b(%rip)
2b81(4): mov $0x22,(%r14)
2b85(5): mov $0x1,0xe(%rsp)
2b8a(3): xor %r12d,%r12d
2b8d(5): mov $0x0,0x7c(%rsp)
2b92(9): mov $0x0,0x50(%rsp)
2b9b(7): lea 0x20a9(%rip),%rax
2ba2(5): mov $0x0,0xf(%rsp)
2ba7(5): mov $0x1,0xd(%rsp)
2bac(9): mov $0x1,0x18(%rsp)
2bb5(6): mov $0x1,%r15d
2bbb(5): mov %rax,0x48(%rsp)
2bc0(5): jmp 0xfffff3c3(%rip)
2bc5(7): lea 0x207f(%rip),%rax
2bcc(5): mov $0x1,0xe(%rsp)
2bd1(5): mov $0x0,0x7c(%rsp)
2bd6(3): xor %r12d,%r12d
2bd9(9): mov $0x0,0x50(%rsp)
2be2(5): mov $0x1,0xf(%rsp)
2be7(5): mov $0x1,0xd(%rsp)
2bec(9): mov $0x1,0x18(%rsp)
2bf5(3): xor %r15d,%r15d
2bf8(5): mov %rax,0x48(%rsp)
2bfd(8): mov $0x5,0x8(%rsp)
2c05(5): jmp 0xfffff37e(%rip)
2c0a(5): mov $0x1,0xe(%rsp)
2c0f(5): mov $0x0,0x7c(%rsp)
2c14(3): xor %r12d,%r12d
2c17(9): mov $0x0,0x50(%rsp)
2c20(5): mov $0x0,0xf(%rsp)
2c25(3): xor %r15d,%r15d
2c28(5): mov $0x1,0xd(%rsp)
2c2d(9): mov $0x0,0x18(%rsp)
2c36(9): mov $0x0,0x48(%rsp)
2c3f(5): jmp 0xfffff344(%rip)
2c44(5): cmp $0xa,0x8(%rsp)
2c49(2): jz 0x58(%rip)
2c4b(7): lea 0x1ffd(%rip),%rsi
2c52(2): xor %edi,%edi
2c54(5): mov $0x5,%edx
2c59(5): call 0xffffe667(%rip)
2c5e(3): mov %rax,%rcx
2c61(5): mov %rax,0x68(%rsp)
2c66(7): lea 0x1fe2(%rip),%rax
2c6d(3): cmp %rax,%rcx
2c70(6): jz 0x39e(%rip)
2c76(7): lea 0x1fd0(%rip),%rsi
2c7d(2): xor %edi,%edi
2c7f(5): mov $0x5,%edx
2c84(5): call 0xffffe63c(%rip)
2c89(3): mov %rax,%rcx
2c8c(5): mov %rax,0x60(%rsp)
2c91(7): lea 0x1fb5(%rip),%rax
2c98(3): cmp %rax,%rcx
2c9b(6): jz 0x389(%rip)
2ca1(3): xor %r15d,%r15d
2ca4(2): test %ebx,%ebx
2ca6(6): jz 0x1c7(%rip)
2cac(2): test %ebx,%ebx
2cae(5): mov 0x60(%rsp),%rbx
2cb3(5): setnz 0xf(%rsp)
2cb8(3): xor %r12d,%r12d
2cbb(3): mov %rbx,%rdi
2cbe(5): call 0xffffe622(%rip)
2cc3(5): mov %rbx,0x48(%rsp)
2cc8(5): mov %rax,0x18(%rsp)
2ccd(5): mov $0x1,0xe(%rsp)
2cd2(5): mov $0x0,0x7c(%rsp)
2cd7(9): mov $0x0,0x50(%rsp)
2ce0(5): mov $0x1,0xd(%rsp)
2ce5(5): jmp 0xfffff29e(%rip)
2cea(5): mov $0x1,0xe(%rsp)
2cef(5): mov $0x0,0x7c(%rsp)
2cf4(3): xor %r12d,%r12d
2cf7(9): mov $0x0,0x50(%rsp)
2d00(5): mov $0x0,0xf(%rsp)
2d05(3): xor %r15d,%r15d
2d08(5): mov $0x0,0xd(%rsp)
2d0d(9): mov $0x0,0x18(%rsp)
2d16(9): mov $0x0,0x48(%rsp)
2d1f(5): jmp 0xfffff264(%rip)
2d24(5): mov $0x1,0xe(%rsp)
2d29(5): mov $0x0,0x7c(%rsp)
2d2e(3): xor %r12d,%r12d
2d31(9): mov $0x0,0x50(%rsp)
2d3a(5): mov $0x1,0xf(%rsp)
2d3f(5): mov $0x1,0xd(%rsp)
2d44(5): jmp 0xfffff21f(%rip)
2d49(3): cmp %r15,%r13
2d4c(2): jbe 0x7(%rip)
2d4e(5): mov $0x30,0x0(%r14,%r15,1)
2d53(4): lea 0x2(%rcx),%rax
2d57(3): cmp %rax,%r13
2d5a(2): jbe 0x8(%rip)
2d5c(6): mov $0x30,0x2(%r14,%rcx,1)
2d62(3): mov %r12d,%eax
2d65(4): lea 0x3(%rcx),%r15
2d69(3): xor %r12d,%r12d
2d6c(5): mov $0x30,%ebx
2d71(5): jmp 0xfffff367(%rip)
2d76(a): nop 0x0(%rax,%rax,1)
2d80(5): movzx 0xf(%rsp),%ebx
2d85(3): mov %r11,%rbp
2d88(4): mov %bl,0xd(%rsp)
2d8c(5): jmp 0xfffffcad(%rip)
2d91(5): movzx 0xd(%rsp),%edx
2d96(3): xor %r12d,%r12d
2d99(5): jmp 0xfffffb07(%rip)
2d9e(3): xor %r10d,%r10d
2da1(5): jmp 0xfffffbbc(%rip)
2da6(9): mov $0x0,0x50(%rsp)
2daf(5): mov $0x1,0xe(%rsp)
2db4(3): xor %r12d,%r12d
2db7(5): mov $0x0,0x7c(%rsp)
2dbc(5): jmp 0xfffffddf(%rip)
2dc1(5): mov 0x30(%rsp),%r11
2dc6(3): mov %r14,%rsi
2dc9(3): mov %r13,%rcx
2dcc(3): mov %rbx,%rax
2dcf(3): mov %rbx,%rdi
2dd2(6): movzx 0x7d(%rsp),%r8d
2dd8(5): movzx 0x7e(%rsp),%ebx
2ddd(8): mov 0x88(%rsp),%r9
2de5(3): cmp %r11,%rsi
2de8(6): movzx 0x7f(%rsp),%r10d
2dee(8): mov 0x80(%rsp),%r15
2df6(5): mov 0x40(%rsp),%r14
2dfb(5): mov 0x70(%rsp),%r13
2e00(2): jnb 0x28(%rip)
2e02(3): cmp $0x0,(%rcx)
2e05(2): jnz 0x12(%rip)
2e07(2): jmp 0x21(%rip)
2e09(7): nop 0x0(%rax)
2e10(5): cmp $0x0,0x0(%r9,%rax,1)
2e15(2): jz 0x10(%rip)
2e17(4): add $0x1,%rax
2e1b(5): lea 0x0(%rbp,%rax,1),%rdx
2e20(3): cmp %rdx,%r11
2e23(2): jnbe 0xffffffed(%rip)
2e25(3): mov %rax,%rdi
2e28(5): movzx 0xd(%rsp),%edx
2e2d(3): xor %r12d,%r12d
2e30(5): jmp 0xfffffa66(%rip)
2e35(3): mov %rbx,%rdi
2e38(6): movzx 0x7d(%rsp),%r8d
2e3e(5): movzx 0x7e(%rsp),%ebx
2e43(6): movzx 0x7f(%rsp),%r10d
2e49(8): mov 0x80(%rsp),%r15
2e51(3): xor %r12d,%r12d
2e54(5): mov 0x40(%rsp),%r14
2e59(5): mov 0x70(%rsp),%r13
2e5e(5): mov 0x30(%rsp),%r11
2e63(5): movzx 0xd(%rsp),%edx
2e68(5): jmp 0xfffffa2e(%rip)
2e6d(5): mov 0x68(%rsp),%rdx
2e72(3): movzx (%rdx),%eax
2e75(2): test %al,%al
2e77(6): jz 0xfffffe35(%rip)
2e7d(3): nop (%rax)
2e80(3): cmp %r15,%r13
2e83(2): jbe 0x6(%rip)
2e85(4): mov %al,0x0(%r14,%r15,1)
2e89(4): add $0x1,%r15
2e8d(5): movzx 0x0(%rdx,%r15,1),%eax
2e92(2): test %al,%al
2e94(2): jnz 0xffffffec(%rip)
2e96(5): jmp 0xfffffe16(%rip)
2e9b(2): mov %edx,%eax
2e9d(5): jmp 0xfffff55a(%rip)
2ea2(4): movzx 0x0(%rax,%rcx,1),%ebx
2ea6(3): cmp $0x3e,%bl
2ea9(6): jnbe 0xfffff877(%rip)
2eaf(a): mov $0x8070630310989004800,%rax
2eb9(4): bt %rbx,%rax
2ebd(6): jnb 0xfffff863(%rip)
2ec3(5): cmp $0x0,0xf(%rsp)
2ec8(6): jnz 0x1ea(%rip)
2ece(3): cmp %r15,%r13
2ed1(2): jbe 0x7(%rip)
2ed3(5): mov $0x3f,0x0(%r14,%r15,1)
2ed8(4): lea 0x1(%r15),%rax
2edc(3): cmp %rax,%r13
2edf(2): jbe 0x8(%rip)
2ee1(6): mov $0x22,0x1(%r14,%r15,1)
2ee7(4): lea 0x2(%r15),%rax
2eeb(3): cmp %rax,%r13
2eee(2): jbe 0x8(%rip)
2ef0(6): mov $0x22,0x2(%r14,%r15,1)
2ef6(4): lea 0x3(%r15),%rax
2efa(3): cmp %rax,%r13
2efd(2): jbe 0x8(%rip)
2eff(6): mov $0x3f,0x3(%r14,%r15,1)
2f05(4): add $0x4,%r15
2f09(2): xor %edx,%edx
2f0b(3): xor %r12d,%r12d
2f0e(2): xor %eax,%eax
2f10(3): mov %rcx,%rbp
2f13(5): jmp 0xfffff1c5(%rip)
2f18(2): test %ebx,%ebx
2f1a(6): jz 0x18e(%rip)
2f20(7): lea 0x1d26(%rip),%rax
2f27(5): mov $0x1,0xe(%rsp)
2f2c(5): mov $0x0,0x7c(%rsp)
2f31(3): xor %r12d,%r12d
2f34(9): mov $0x0,0x50(%rsp)
2f3d(5): mov $0x1,0xf(%rsp)
2f42(5): mov $0x0,0xd(%rsp)
2f47(9): mov $0x1,0x18(%rsp)
2f50(3): xor %r15d,%r15d
2f53(5): mov %rax,0x48(%rsp)
2f58(5): jmp 0xfffff02b(%rip)
2f5d(3): nop (%rax)
2f60(3): mov %r11,%rbp
2f63(5): movzx 0xf(%rsp),%eax
2f68(5): jmp 0xfffffad1(%rip)
2f6d(7): lea 0x1cd7(%rip),%rax
2f74(5): mov $0x1,0xe(%rsp)
2f79(5): mov $0x0,0x7c(%rsp)
2f7e(3): xor %r12d,%r12d
2f81(9): mov $0x0,0x50(%rsp)
2f8a(5): mov $0x1,0xf(%rsp)
2f8f(5): mov $0x1,0xd(%rsp)
2f94(9): mov $0x1,0x18(%rsp)
2f9d(3): xor %r15d,%r15d
2fa0(5): mov %rax,0x48(%rsp)
2fa5(5): jmp 0xffffefde(%rip)
2faa(2): mov %edx,%eax
2fac(5): mov 0x48(%rsp),%rbx
2fb1(3): test %rbx,%rbx
2fb4(2): jz 0x2e(%rip)
2fb6(2): test %al,%al
2fb8(2): jz 0x2a(%rip)
2fba(3): movzx (%rbx),%ecx
2fbd(3): mov %rbx,%rax
2fc0(2): test %cl,%cl
2fc2(2): jz 0x20(%rip)
2fc4(3): mov %r15,%rdx
2fc7(3): sub %r15,%rax
2fca(3): cmp %rdx,%r13
2fcd(2): jbe 0x6(%rip)
2fcf(4): mov %cl,0x0(%r14,%rdx,1)
2fd3(4): add $0x1,%rdx
2fd7(4): movzx 0x0(%rax,%rdx,1),%ecx
2fdb(2): test %cl,%cl
2fdd(2): jnz 0xffffffed(%rip)
2fdf(3): mov %rdx,%r15
2fe2(3): cmp %r15,%r13
2fe5(6): jbe 0xfffffaa4(%rip)
2feb(5): mov $0x0,0x0(%r14,%r15,1)
2ff0(5): jmp 0xfffffa99(%rip)
2ff5(5): cmp $0x2,0x8(%rsp)
2ffa(5): movzx 0xf(%rsp),%ebx
2fff(3): mov %r11,%rbp
3002(3): setz %al
3005(4): mov %bl,0xd(%rsp)
3009(5): jmp 0xfffffa30(%rip)
300e(4): mov 0x8(%rsp),%esi
3012(3): mov %rcx,%rdi
3015(5): call 0xffffedab(%rip)
301a(5): mov %rax,0x68(%rsp)
301f(5): jmp 0xfffffc57(%rip)
3024(4): mov 0x8(%rsp),%esi
3028(3): mov %rcx,%rdi
302b(5): call 0xffffed95(%rip)
3030(5): mov %rax,0x60(%rsp)
3035(5): jmp 0xfffffc6c(%rip)
303a(5): movzx 0xf(%rsp),%ebx
303f(3): mov %r11,%rbp
3042(2): mov %edx,%eax
3044(4): mov %bl,0xd(%rsp)
3048(5): jmp 0xfffff9f1(%rip)
304d(4): sub $0x8,%rsp
3051(6): mov $0x5,%r8d
3057(3): mov %r11,%rcx
305a(4): push 0x68(%rsp)
305e(4): push 0x78(%rsp)
3062(3): mov %r14,%rdi
3065(4): push 0x38(%rsp)
3069(8): mov 0x98(%rsp),%r9d
3071(5): mov 0x30(%rsp),%rdx
3076(5): mov 0x70(%rsp),%rsi
307b(5): call 0xffffee35(%rip)
3080(4): add $0x20,%rsp
3084(3): mov %rax,%r15
3087(5): jmp 0xfffffa02(%rip)
308c(5): movzx 0x7c(%rsp),%eax
3091(5): jmp 0xffffff1b(%rip)
3096(8): mov $0x2,0x8(%rsp)
309e(5): jmp 0xfffff99b(%rip)
30a3(5): call 0xffffe24d(%rip)
30a8(5): mov $0x0,0xd(%rsp)
30ad(5): jmp 0xfffffa74(%rip)
30b2(3): mov %r11,%rbp
30b5(5): jmp 0xfffff99b(%rip)
30ba(5): mov $0x1,0xe(%rsp)
30bf(2): xor %eax,%eax
30c1(3): xor %r12d,%r12d
30c4(9): mov $0x0,0x50(%rsp)
30cd(5): jmp 0xfffff5a7(%rip)
30d2(3): mov %r13,%rdx
30d5(5): mov 0x50(%rsp),%r13
30da(5): jmp 0xfffff5f8(%rip)
30df(5): call 0xffffe161(%rip)

"quotearg_n_options" :
30f0(2): push %r15
30f2(2): push %r14
30f4(3): movsxd %edi,%r15
30f7(2): push %r13
30f9(2): push %r12
30fb(3): mov %rdx,%r14
30fe(1): push %rbp
30ff(1): push %rbx
3100(3): mov %rcx,%rbp
3103(4): sub $0x28,%rsp
3107(5): mov %rsi,0x8(%rsp)
310c(5): call 0xffffe144(%rip)
3111(3): mov %rax,%r13
3114(2): mov (%rax),%eax
3116(3): test %r15d,%r15d
3119(7): mov 0x203f40(%rip),%rbx
3120(4): mov %eax,0x18(%rsp)
3124(6): js 0x16d(%rip)
312a(7): cmp %r15d,0x203f27(%rip)
3131(2): jnle 0x64(%rip)
3133(7): cmp $0x7fffffff,%r15d
313a(6): jz 0x15c(%rip)
3140(4): lea 0x1(%r15),%r12d
3144(7): lea 0x203f25(%rip),%rax
314b(3): movsxd %r12d,%rsi
314e(4): shl/sal $0x4,%rsi
3152(3): cmp %rax,%rbx
3155(6): jz 0x11b(%rip)
315b(3): mov %rbx,%rdi
315e(5): call 0xf72(%rip)
3163(3): mov %rax,%rbx
3166(7): mov %rax,0x203ef3(%rip)
316d(7): movsxd 0x203ee4(%rip),%rdi
3174(3): mov %r12d,%edx
3177(2): xor %esi,%esi
3179(2): sub %edi,%edx
317b(4): shl/sal $0x4,%rdi
317f(3): movsxd %edx,%rdx
3182(3): add %rbx,%rdi
3185(4): shl/sal $0x4,%rdx
3189(5): call 0xffffe1b7(%rip)
318e(7): mov %r12d,0x203ec3(%rip)
3195(3): mov 0x4(%rbp),%eax
3198(4): shl/sal $0x4,%r15
319c(4): sub $0x8,%rsp
31a0(3): add %r15,%rbx
31a3(4): lea 0x8(%rbp),%r15
31a7(4): mov 0x0(%rbp),%r8d
31ab(3): mov (%rbx),%r11
31ae(4): mov 0x8(%rbx),%r12
31b2(3): mov %r14,%rcx
31b5(3): or $0x1,%eax
31b8(4): mov %eax,0x24(%rsp)
31bc(3): push 0x30(%rbp)
31bf(3): mov %eax,%r9d
31c2(3): push 0x28(%rbp)
31c5(2): push %r15
31c7(3): mov %r11,%rsi
31ca(5): mov 0x28(%rsp),%rdx
31cf(3): mov %r12,%rdi
31d2(5): mov %r11,0x30(%rsp)
31d7(5): call 0xffffecd9(%rip)
31dc(4): add $0x20,%rsp
31e0(5): mov 0x10(%rsp),%r11
31e5(3): cmp %rax,%r11
31e8(2): jnbe 0x69(%rip)
31ea(4): lea 0x1(%rax),%rsi
31ee(7): lea 0x203f0b(%rip),%rax
31f5(3): cmp %rax,%r12
31f8(3): mov %rsi,(%rbx)
31fb(2): jz 0x14(%rip)
31fd(3): mov %r12,%rdi
3200(5): mov %rsi,0x10(%rsp)
3205(5): call 0xffffe02b(%rip)
320a(5): mov 0x10(%rsp),%rsi
320f(3): mov %rsi,%rdi
3212(5): mov %rsi,0x10(%rsp)
3217(5): call 0xe59(%rip)
321c(4): sub $0x8,%rsp
3220(4): mov %rax,0x8(%rbx)
3224(4): mov 0x0(%rbp),%r8d
3228(3): push 0x30(%rbp)
322b(3): push 0x28(%rbp)
322e(3): mov %r14,%rcx
3231(2): push %r15
3233(5): mov 0x3c(%rsp),%r9d
3238(3): mov %rax,%rdi
323b(5): mov 0x28(%rsp),%rdx
3240(5): mov 0x30(%rsp),%rsi
3245(3): mov %rax,%r12
3248(5): call 0xffffec68(%rip)
324d(4): add $0x20,%rsp
3251(4): mov 0x18(%rsp),%eax
3255(4): mov %eax,0x0(%r13)
3259(4): add $0x28,%rsp
325d(3): mov %r12,%rax
3260(1): pop %rbx
3261(1): pop %rbp
3262(2): pop %r12
3264(2): pop %r13
3266(2): pop %r14
3268(2): pop %r15
326a(1): ret near (%rsp)
326b(5): nop 0x0(%rax,%rax,1)
3270(2): xor %edi,%edi
3272(5): call 0xe5e(%rip)
3277(8): movdqa 0x203df1(%rip),%xmm0
327f(3): mov %rax,%rbx
3282(7): mov %rax,0x203dd7(%rip)
3289(3): movups %xmm0,(%rax)
328c(5): jmp 0xfffffee1(%rip)
3291(5): call 0xffffdfaf(%rip)
3296(5): call 0x102a(%rip)

"clone_quoting_options" :
32a0(2): push %r12
32a2(1): push %rbp
32a3(1): push %rbx
32a4(3): mov %rdi,%rbx
32a7(5): call 0xffffdfa9(%rip)
32ac(3): mov (%rax),%r12d
32af(3): mov %rax,%rbp
32b2(7): lea 0x203f47(%rip),%rax
32b9(3): test %rbx,%rbx
32bc(5): mov $0x38,%esi
32c1(4): cmove %rax,%rbx
32c5(3): mov %rbx,%rdi
32c8(5): call 0xfa8(%rip)
32cd(4): mov %r12d,0x0(%rbp)
32d1(1): pop %rbx
32d2(1): pop %rbp
32d3(2): pop %r12
32d5(1): ret near (%rsp)

"get_quoting_style" :
32e0(7): lea 0x203f19(%rip),%rax
32e7(3): test %rdi,%rdi
32ea(4): cmove %rax,%rdi
32ee(2): mov (%rdi),%eax
32f0(1): ret near (%rsp)

"set_quoting_style" :
3300(7): lea 0x203ef9(%rip),%rax
3307(3): test %rdi,%rdi
330a(4): cmove %rax,%rdi
330e(2): mov %esi,(%rdi)
3310(1): ret near (%rsp)

"set_char_quoting" :
3320(7): lea 0x203ed9(%rip),%rax
3327(3): test %rdi,%rdi
332a(2): mov %esi,%ecx
332c(4): cmove %rax,%rdi
3330(2): mov %esi,%eax
3332(3): and $0x1f,%ecx
3335(3): shr $0x5,%al
3338(3): movzx %al,%eax
333b(5): lea 0x8(%rdi,%rax,4),%rdi
3340(2): mov (%rdi),%esi
3342(2): mov %esi,%eax
3344(2): shr %cl,%eax
3346(2): xor %eax,%edx
3348(3): and $0x1,%eax
334b(3): and $0x1,%edx
334e(2): shl/sal %cl,%edx
3350(2): xor %esi,%edx
3352(2): mov %edx,(%rdi)
3354(1): ret near (%rsp)

"set_quoting_flags" :
3360(7): lea 0x203e99(%rip),%rax
3367(3): test %rdi,%rdi
336a(4): cmove %rax,%rdi
336e(3): mov 0x4(%rdi),%eax
3371(3): mov %esi,0x4(%rdi)
3374(1): ret near (%rsp)

"set_custom_quoting" :
3380(7): lea 0x203e79(%rip),%rax
3387(3): test %rdi,%rdi
338a(4): cmove %rax,%rdi
338e(3): test %rsi,%rsi
3391(6): mov $0xa,(%rdi)
3397(2): jz 0x10(%rip)
3399(3): test %rdx,%rdx
339c(2): jz 0xb(%rip)
339e(4): mov %rsi,0x28(%rdi)
33a2(4): mov %rdx,0x30(%rdi)
33a6(1): ret near (%rsp)
33a7(4): sub $0x8,%rsp
33ab(5): call 0xffffde95(%rip)

"quotearg_buffer" :
33b0(2): push %r15
33b2(2): push %r14
33b4(7): lea 0x203e45(%rip),%rax
33bb(2): push %r13
33bd(2): push %r12
33bf(3): mov %rdi,%r13
33c2(1): push %rbp
33c3(1): push %rbx
33c4(3): mov %r8,%rbx
33c7(3): mov %rsi,%r14
33ca(3): mov %rdx,%r15
33cd(4): sub $0x18,%rsp
33d1(3): test %r8,%r8
33d4(4): cmove %rax,%rbx
33d8(5): mov %rcx,0x8(%rsp)
33dd(5): call 0xffffde73(%rip)
33e2(3): mov (%rax),%r12d
33e5(3): mov %rax,%rbp
33e8(4): lea 0x8(%rbx),%rax
33ec(4): sub $0x8,%rsp
33f0(4): mov 0x4(%rbx),%r9d
33f4(3): push 0x30(%rbx)
33f7(3): mov (%rbx),%r8d
33fa(3): push 0x28(%rbx)
33fd(3): mov %r15,%rdx
3400(1): push %rax
3401(5): mov 0x28(%rsp),%rcx
3406(3): mov %r14,%rsi
3409(3): mov %r13,%rdi
340c(5): call 0xffffeaa4(%rip)
3411(4): mov %r12d,0x0(%rbp)
3415(4): add $0x38,%rsp
3419(1): pop %rbx
341a(1): pop %rbp
341b(2): pop %r12
341d(2): pop %r13
341f(2): pop %r14
3421(2): pop %r15
3423(1): ret near (%rsp)

"quotearg_alloc_mem" :
3430(2): push %r15
3432(2): push %r14
3434(7): lea 0x203dc5(%rip),%rax
343b(2): push %r13
343d(2): push %r12
343f(3): mov %rdx,%r12
3442(1): push %rbp
3443(1): push %rbx
3444(3): mov %rcx,%rbx
3447(3): mov %rdi,%r14
344a(3): mov %rsi,%r15
344d(4): sub $0x38,%rsp
3451(3): test %rcx,%rcx
3454(4): cmove %rax,%rbx
3458(2): xor %ebp,%ebp
345a(5): call 0xffffddf6(%rip)
345f(3): test %r12,%r12
3462(3): mov %rax,%r13
3465(2): mov (%rax),%eax
3467(4): setz %bpl
346b(3): or 0x4(%rbx),%ebp
346e(4): lea 0x8(%rbx),%r10
3472(4): sub $0x8,%rsp
3476(3): mov (%rbx),%r8d
3479(3): mov %r15,%rcx
347c(4): mov %eax,0x14(%rsp)
3480(3): push 0x30(%rbx)
3483(3): mov %r14,%rdx
3486(3): push 0x28(%rbx)
3489(2): push %r10
348b(2): xor %esi,%esi
348d(3): mov %ebp,%r9d
3490(2): xor %edi,%edi
3492(5): mov %r10,0x40(%rsp)
3497(5): call 0xffffea19(%rip)
349c(4): lea 0x1(%rax),%rsi
34a0(5): mov %rax,0x48(%rsp)
34a5(4): add $0x20,%rsp
34a9(3): mov %rsi,%rdi
34ac(5): mov %rsi,0x18(%rsp)
34b1(5): call 0xbbf(%rip)
34b6(5): mov %rax,0x10(%rsp)
34bb(4): sub $0x8,%rsp
34bf(3): push 0x30(%rbx)
34c2(3): push 0x28(%rbx)
34c5(5): mov 0x38(%rsp),%r10
34ca(3): mov %ebp,%r9d
34cd(3): mov (%rbx),%r8d
34d0(3): mov %r15,%rcx
34d3(3): mov %r14,%rdx
34d6(3): mov %rax,%rdi
34d9(2): push %r10
34db(5): mov 0x38(%rsp),%rsi
34e0(5): call 0xffffe9d0(%rip)
34e5(4): mov 0x2c(%rsp),%eax
34e9(4): add $0x20,%rsp
34ed(3): test %r12,%r12
34f0(4): mov %eax,0x0(%r13)
34f4(2): jz 0xb(%rip)
34f6(5): mov 0x28(%rsp),%r11
34fb(4): mov %r11,(%r12)
34ff(5): mov 0x10(%rsp),%rax
3504(4): add $0x38,%rsp
3508(1): pop %rbx
3509(1): pop %rbp
350a(2): pop %r12
350c(2): pop %r13
350e(2): pop %r14
3510(2): pop %r15
3512(1): ret near (%rsp)

"quotearg_alloc" :
3520(3): mov %rdx,%rcx
3523(2): xor %edx,%edx
3525(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3530(6): mov 0x203b22(%rip),%eax
3536(2): push %r12
3538(7): mov 0x203b21(%rip),%r12
353f(1): push %rbp
3540(1): push %rbx
3541(3): cmp $0x1,%eax
3544(2): jle 0x2d(%rip)
3546(3): sub $0x2,%eax
3549(5): lea 0x18(%r12),%rbx
354e(4): shl/sal $0x4,%rax
3552(5): lea 0x28(%r12,%rax,1),%rbp
3557(9): nop 0x0(%rax,%rax,1)
3560(3): mov (%rbx),%rdi
3563(4): add $0x10,%rbx
3567(5): call 0xffffdcc9(%rip)
356c(3): cmp %rbp,%rbx
356f(2): jnz 0xfffffff1(%rip)
3571(5): mov 0x8(%r12),%rdi
3576(7): lea 0x203b83(%rip),%rbx
357d(3): cmp %rbx,%rdi
3580(2): jz 0x19(%rip)
3582(5): call 0xffffdcae(%rip)
3587(b): mov $0x100,0x203ade(%rip)
3592(7): mov %rbx,0x203adf(%rip)
3599(7): lea 0x203ad0(%rip),%rbx
35a0(3): cmp %rbx,%r12
35a3(2): jz 0x11(%rip)
35a5(3): mov %r12,%rdi
35a8(5): call 0xffffdc88(%rip)
35ad(7): mov %rbx,0x203aac(%rip)
35b4(1): pop %rbx
35b5(a): mov $0x1,0x203a99(%rip)
35bf(1): pop %rbp
35c0(2): pop %r12
35c2(1): ret near (%rsp)

"quotearg_n" :
35d0(7): lea 0x203c29(%rip),%rcx
35d7(7): mov $0xffffffff,%rdx
35de(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
35f0(7): lea 0x203c09(%rip),%rcx
35f7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3600(7): lea 0x203bf9(%rip),%rcx
3607(3): mov %rdi,%rsi
360a(7): mov $0xffffffff,%rdx
3611(2): xor %edi,%edi
3613(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3620(7): lea 0x203bd9(%rip),%rcx
3627(3): mov %rsi,%rdx
362a(3): mov %rdi,%rsi
362d(2): xor %edi,%edi
362f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3640(4): sub $0x48,%rsp
3644(3): mov %rdx,%rax
3647(9): mov $0x28,%rdx
3650(5): mov %rdx,0x38(%rsp)
3655(2): xor %edx,%edx
3657(3): cmp $0xa,%esi
365a(2): jz 0x6a(%rip)
365c(3): mov %esi,(%rsp)
365f(3): mov %rsp,%rcx
3662(7): mov $0xffffffff,%rdx
3669(3): mov %rax,%rsi
366c(9): mov $0x0,0x4(%rsp)
3675(9): mov $0x0,0xc(%rsp)
367e(9): mov $0x0,0x14(%rsp)
3687(9): mov $0x0,0x1c(%rsp)
3690(9): mov $0x0,0x24(%rsp)
3699(9): mov $0x0,0x2c(%rsp)
36a2(8): mov $0x0,0x34(%rsp)
36aa(5): call 0xfffffa46(%rip)
36af(5): mov 0x38(%rsp),%rcx
36b4(9): xor $0x28,%rcx
36bd(2): jnz 0xc(%rip)
36bf(4): add $0x48,%rsp
36c3(1): ret near (%rsp)
36c4(5): call 0xffffdb7c(%rip)
36c9(5): call 0xffffdc27(%rip)

"quotearg_n_style_mem" :
36d0(4): sub $0x48,%rsp
36d4(3): mov %rdx,%rax
36d7(3): mov %rcx,%rdx
36da(9): mov $0x28,%rcx
36e3(5): mov %rcx,0x38(%rsp)
36e8(2): xor %ecx,%ecx
36ea(3): cmp $0xa,%esi
36ed(2): jz 0x63(%rip)
36ef(3): mov %esi,(%rsp)
36f2(3): mov %rsp,%rcx
36f5(3): mov %rax,%rsi
36f8(9): mov $0x0,0x4(%rsp)
3701(9): mov $0x0,0xc(%rsp)
370a(9): mov $0x0,0x14(%rsp)
3713(9): mov $0x0,0x1c(%rsp)
371c(9): mov $0x0,0x24(%rsp)
3725(9): mov $0x0,0x2c(%rsp)
372e(8): mov $0x0,0x34(%rsp)
3736(5): call 0xfffff9ba(%rip)
373b(5): mov 0x38(%rsp),%rdx
3740(9): xor $0x28,%rdx
3749(2): jnz 0xc(%rip)
374b(4): add $0x48,%rsp
374f(1): ret near (%rsp)
3750(5): call 0xffffdaf0(%rip)
3755(5): call 0xffffdb9b(%rip)

"quotearg_style" :
3760(3): mov %rsi,%rdx
3763(2): mov %edi,%esi
3765(2): xor %edi,%edi
3767(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3770(3): mov %rdx,%rcx
3773(3): mov %rsi,%rdx
3776(2): mov %edi,%esi
3778(2): xor %edi,%edi
377a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3780(4): sub $0x48,%rsp
3784(2): mov %edx,%ecx
3786(9): mov $0x28,%rax
378f(5): mov %rax,0x38(%rsp)
3794(2): xor %eax,%eax
3796(7): mov 0x203a93(%rip),%rax
379d(3): mov %rsp,%r8
37a0(3): and $0x1f,%ecx
37a3(8): movdqa 0x203a55(%rip),%xmm0
37ab(5): mov %rax,0x30(%rsp)
37b0(2): mov %edx,%eax
37b2(4): movaps %xmm0,(%rsp)
37b6(3): shr $0x5,%al
37b9(3): movzx %al,%eax
37bc(5): lea 0x8(%r8,%rax,4),%r9
37c1(8): movdqa 0x203a47(%rip),%xmm0
37c9(5): movaps %xmm0,0x10(%rsp)
37ce(8): movdqa 0x203a4a(%rip),%xmm0
37d6(5): movaps %xmm0,0x20(%rsp)
37db(3): mov (%r9),%edx
37de(2): mov %edx,%eax
37e0(2): shr %cl,%eax
37e2(2): not %eax
37e4(3): and $0x1,%eax
37e7(2): shl/sal %cl,%eax
37e9(3): mov %r8,%rcx
37ec(2): xor %edx,%eax
37ee(3): mov %rsi,%rdx
37f1(3): mov %rdi,%rsi
37f4(3): mov %eax,(%r9)
37f7(2): xor %edi,%edi
37f9(5): call 0xfffff8f7(%rip)
37fe(5): mov 0x38(%rsp),%rsi
3803(9): xor $0x28,%rsi
380c(2): jnz 0x7(%rip)
380e(4): add $0x48,%rsp
3812(1): ret near (%rsp)
3813(5): call 0xffffdadd(%rip)

"quotearg_char" :
3820(4): movsx %sil,%edx
3824(7): mov $0xffffffff,%rsi
382b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3830(5): mov $0x3a,%edx
3835(7): mov $0xffffffff,%rsi
383c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3850(5): mov $0x3a,%edx
3855(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3860(4): sub $0x48,%rsp
3864(3): mov %rdx,%rax
3867(9): mov $0x28,%rdx
3870(5): mov %rdx,0x38(%rsp)
3875(2): xor %edx,%edx
3877(3): cmp $0xa,%esi
387a(2): jz 0x6a(%rip)
387c(3): mov %esi,(%rsp)
387f(3): mov %rsp,%rcx
3882(7): mov $0xffffffff,%rdx
3889(3): mov %rax,%rsi
388c(9): mov $0x0,0x4(%rsp)
3895(9): mov $0x4000000,0xc(%rsp)
389e(9): mov $0x0,0x14(%rsp)
38a7(9): mov $0x0,0x1c(%rsp)
38b0(9): mov $0x0,0x24(%rsp)
38b9(9): mov $0x0,0x2c(%rsp)
38c2(8): mov $0x0,0x34(%rsp)
38ca(5): call 0xfffff826(%rip)
38cf(5): mov 0x38(%rsp),%rcx
38d4(9): xor $0x28,%rcx
38dd(2): jnz 0xc(%rip)
38df(4): add $0x48,%rsp
38e3(1): ret near (%rsp)
38e4(5): call 0xffffd95c(%rip)
38e9(5): call 0xffffda07(%rip)

"quotearg_n_custom_mem" :
38f0(4): sub $0x48,%rsp
38f4(3): mov %rcx,%r9
38f7(7): mov 0x203932(%rip),%rcx
38fe(8): movdqa 0x2038fa(%rip),%xmm0
3906(9): mov $0x28,%rax
390f(5): mov %rax,0x38(%rsp)
3914(2): xor %eax,%eax
3916(4): movaps %xmm0,(%rsp)
391a(3): test %rsi,%rsi
391d(5): mov %rcx,0x30(%rsp)
3922(7): mov $0xa,(%rsp)
3929(8): movdqa 0x2038df(%rip),%xmm0
3931(5): movaps %xmm0,0x10(%rsp)
3936(8): movdqa 0x2038e2(%rip),%xmm0
393e(5): movaps %xmm0,0x20(%rsp)
3943(2): jz 0x34(%rip)
3945(3): test %rdx,%rdx
3948(2): jz 0x2f(%rip)
394a(5): mov %rsi,0x28(%rsp)
394f(5): mov %rdx,0x30(%rsp)
3954(3): mov %rsp,%rcx
3957(3): mov %r8,%rdx
395a(3): mov %r9,%rsi
395d(5): call 0xfffff793(%rip)
3962(5): mov 0x38(%rsp),%rdi
3967(9): xor $0x28,%rdi
3970(2): jnz 0xc(%rip)
3972(4): add $0x48,%rsp
3976(1): ret near (%rsp)
3977(5): call 0xffffd8c9(%rip)
397c(5): call 0xffffd974(%rip)

"quotearg_n_custom" :
3990(7): mov $0xffffffff,%r8
3997(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
39a0(3): mov %rdx,%rcx
39a3(7): mov $0xffffffff,%r8
39aa(3): mov %rsi,%rdx
39ad(3): mov %rdi,%rsi
39b0(2): xor %edi,%edi
39b2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
39c0(3): mov %rcx,%r8
39c3(3): mov %rdx,%rcx
39c6(3): mov %rsi,%rdx
39c9(3): mov %rdi,%rsi
39cc(2): xor %edi,%edi
39ce(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
39e0(7): lea 0x203639(%rip),%rcx
39e7(5): jmp 0xfffff709(%rip)

"quote_mem" :
39f0(7): lea 0x203629(%rip),%rcx
39f7(3): mov %rsi,%rdx
39fa(3): mov %rdi,%rsi
39fd(2): xor %edi,%edi
39ff(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3a10(7): lea 0x203609(%rip),%rcx
3a17(7): mov $0xffffffff,%rdx
3a1e(5): jmp 0xfffff6d2(%rip)

"quote" :
3a30(7): lea 0x2035e9(%rip),%rcx
3a37(3): mov %rdi,%rsi
3a3a(7): mov $0xffffffff,%rdx
3a41(2): xor %edi,%edi
3a43(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3a50(2): push %r15
3a52(2): push %r14
3a54(2): push %r13
3a56(2): push %r12
3a58(3): mov %r9,%r12
3a5b(1): push %rbp
3a5c(1): push %rbx
3a5d(3): mov %rdi,%rbp
3a60(3): mov %r8,%rbx
3a63(4): sub $0x28,%rsp
3a67(3): test %rsi,%rsi
3a6a(6): jz 0x11e(%rip)
3a70(3): mov %rdx,%r8
3a73(7): lea 0x168e(%rip),%rdx
3a7a(3): mov %rcx,%r9
3a7d(2): xor %eax,%eax
3a7f(3): mov %rsi,%rcx
3a82(5): mov $0x1,%esi
3a87(5): call 0xffffd9d9(%rip)
3a8c(7): lea 0x1688(%rip),%rsi
3a93(2): xor %edi,%edi
3a95(5): mov $0x5,%edx
3a9a(5): call 0xffffd826(%rip)
3a9f(7): lea 0x199a(%rip),%rdx
3aa6(3): mov %rax,%rcx
3aa9(6): mov $0x7e3,%r8d
3aaf(5): mov $0x1,%esi
3ab4(3): mov %rbp,%rdi
3ab7(2): xor %eax,%eax
3ab9(5): call 0xffffd9a7(%rip)
3abe(7): lea 0x16e3(%rip),%rsi
3ac5(2): xor %edi,%edi
3ac7(5): mov $0x5,%edx
3acc(5): call 0xffffd7f4(%rip)
3ad1(3): mov %rbp,%rsi
3ad4(3): mov %rax,%rdi
3ad7(5): call 0xffffd889(%rip)
3adc(4): cmp $0x9,%r12
3ae0(6): jnbe 0x340(%rip)
3ae6(7): lea 0x191b(%rip),%rdx
3aed(4): movsxd 0x0(%rdx,%r12,4),%rax
3af1(3): add %rdx,%rax
3af4(2): jmp %rax
3af6(a): nop 0x0(%rax,%rax,1)
3b00(4): mov 0x38(%rbx),%r9
3b04(4): mov 0x10(%rbx),%rax
3b08(7): lea 0x1809(%rip),%rsi
3b0f(4): mov 0x8(%rbx),%r8
3b13(5): mov $0x5,%edx
3b18(2): xor %edi,%edi
3b1a(4): mov 0x30(%rbx),%r13
3b1e(4): mov 0x28(%rbx),%r12
3b22(5): mov %r9,0x10(%rsp)
3b27(4): mov 0x20(%rbx),%r15
3b2b(4): mov 0x18(%rbx),%r14
3b2f(4): mov %rax,(%rsp)
3b33(5): mov %r8,0x8(%rsp)
3b38(3): mov (%rbx),%rbx
3b3b(5): call 0xffffd785(%rip)
3b40(4): sub $0x8,%rsp
3b44(5): mov 0x18(%rsp),%r9
3b49(3): mov %rax,%rdx
3b4c(3): mov %rbx,%rcx
3b4f(5): mov $0x1,%esi
3b54(3): mov %rbp,%rdi
3b57(2): xor %eax,%eax
3b59(2): push %r9
3b5b(2): push %r13
3b5d(2): push %r12
3b5f(2): push %r15
3b61(2): push %r14
3b63(5): mov 0x30(%rsp),%r9
3b68(5): mov 0x38(%rsp),%r8
3b6d(5): call 0xffffd8f3(%rip)
3b72(4): add $0x30,%rsp
3b76(4): add $0x28,%rsp
3b7a(1): pop %rbx
3b7b(1): pop %rbp
3b7c(2): pop %r12
3b7e(2): pop %r13
3b80(2): pop %r14
3b82(2): pop %r15
3b84(1): ret near (%rsp)
3b85(3): nop (%rax)
3b88(3): mov %rcx,%r8
3b8b(3): mov %rdx,%rcx
3b8e(7): lea 0x157f(%rip),%rdx
3b95(5): mov $0x1,%esi
3b9a(2): xor %eax,%eax
3b9c(5): call 0xffffd8c4(%rip)
3ba1(5): jmp 0xfffffeeb(%rip)
3ba6(a): nop 0x0(%rax,%rax,1)
3bb0(4): mov 0x40(%rbx),%r10
3bb4(4): mov 0x38(%rbx),%r9
3bb8(7): lea 0x1789(%rip),%rsi
3bbf(4): mov 0x10(%rbx),%rax
3bc3(4): mov 0x8(%rbx),%r8
3bc7(5): mov $0x5,%edx
3bcc(4): mov 0x30(%rbx),%r13
3bd0(4): mov 0x28(%rbx),%r12
3bd4(4): mov 0x20(%rbx),%r15
3bd8(4): mov 0x18(%rbx),%r14
3bdc(3): mov (%rbx),%rbx
3bdf(5): mov %r10,0x18(%rsp)
3be4(5): mov %r9,0x10(%rsp)
3be9(4): mov %rax,(%rsp)
3bed(5): mov %r8,0x8(%rsp)
3bf2(2): xor %edi,%edi
3bf4(5): call 0xffffd6cc(%rip)
3bf9(5): mov 0x18(%rsp),%r10
3bfe(2): push %r10
3c00(5): jmp 0xffffff44(%rip)
3c05(3): nop (%rax)
3c08(3): mov (%rbx),%rbx
3c0b(7): lea 0x150d(%rip),%rsi
3c12(5): mov $0x5,%edx
3c17(2): xor %edi,%edi
3c19(5): call 0xffffd6a7(%rip)
3c1e(4): add $0x28,%rsp
3c22(3): mov %rbx,%rcx
3c25(3): mov %rbp,%rdi
3c28(1): pop %rbx
3c29(1): pop %rbp
3c2a(2): pop %r12
3c2c(2): pop %r13
3c2e(2): pop %r14
3c30(2): pop %r15
3c32(3): mov %rax,%rdx
3c35(5): mov $0x1,%esi
3c3a(2): xor %eax,%eax
3c3c(5): jmp 0xffffd824(%rip)
3c41(7): nop 0x0(%rax)
3c48(4): mov 0x8(%rbx),%r12
3c4c(7): lea 0x14dc(%rip),%rsi
3c53(3): mov (%rbx),%rbx
3c56(5): mov $0x5,%edx
3c5b(2): xor %edi,%edi
3c5d(5): call 0xffffd663(%rip)
3c62(4): add $0x28,%rsp
3c66(3): mov %r12,%r8
3c69(3): mov %rbx,%rcx
3c6c(3): mov %rbp,%rdi
3c6f(3): mov %rax,%rdx
3c72(5): mov $0x1,%esi
3c77(1): pop %rbx
3c78(1): pop %rbp
3c79(2): pop %r12
3c7b(2): pop %r13
3c7d(2): pop %r14
3c7f(2): pop %r15
3c81(2): xor %eax,%eax
3c83(5): jmp 0xffffd7dd(%rip)
3c88(8): nop 0x0(%rax,%rax,1)
3c90(4): mov 0x10(%rbx),%r13
3c94(4): mov 0x8(%rbx),%r12
3c98(7): lea 0x14a7(%rip),%rsi
3c9f(3): mov (%rbx),%rbx
3ca2(5): mov $0x5,%edx
3ca7(2): xor %edi,%edi
3ca9(5): call 0xffffd617(%rip)
3cae(4): add $0x28,%rsp
3cb2(3): mov %r13,%r9
3cb5(3): mov %r12,%r8
3cb8(3): mov %rbx,%rcx
3cbb(3): mov %rbp,%rdi
3cbe(3): mov %rax,%rdx
3cc1(1): pop %rbx
3cc2(1): pop %rbp
3cc3(2): pop %r12
3cc5(2): pop %r13
3cc7(2): pop %r14
3cc9(2): pop %r15
3ccb(5): mov $0x1,%esi
3cd0(2): xor %eax,%eax
3cd2(5): jmp 0xffffd78e(%rip)
3cd7(9): nop 0x0(%rax,%rax,1)
3ce0(7): lea 0x1591(%rip),%rsi
3ce7(5): mov $0x5,%edx
3cec(2): xor %edi,%edi
3cee(4): mov 0x18(%rbx),%r14
3cf2(4): mov 0x10(%rbx),%r13
3cf6(4): mov 0x8(%rbx),%r12
3cfa(3): mov (%rbx),%rbx
3cfd(5): call 0xffffd5c3(%rip)
3d02(4): sub $0x8,%rsp
3d06(2): push %r14
3d08(3): mov %rax,%rdx
3d0b(3): mov %r13,%r9
3d0e(3): mov %r12,%r8
3d11(3): mov %rbx,%rcx
3d14(3): mov %rbp,%rdi
3d17(5): mov $0x1,%esi
3d1c(2): xor %eax,%eax
3d1e(5): call 0xffffd742(%rip)
3d23(1): pop %rax
3d24(1): pop %rdx
3d25(4): add $0x28,%rsp
3d29(1): pop %rbx
3d2a(1): pop %rbp
3d2b(2): pop %r12
3d2d(2): pop %r13
3d2f(2): pop %r14
3d31(2): pop %r15
3d33(1): ret near (%rsp)
3d34(4): nop 0x0(%rax)
3d38(4): mov 0x20(%rbx),%r15
3d3c(7): lea 0x1555(%rip),%rsi
3d43(5): mov $0x5,%edx
3d48(2): xor %edi,%edi
3d4a(4): mov 0x18(%rbx),%r14
3d4e(4): mov 0x10(%rbx),%r13
3d52(4): mov 0x8(%rbx),%r12
3d56(3): mov (%rbx),%rbx
3d59(5): call 0xffffd567(%rip)
3d5e(2): push %r15
3d60(2): jmp 0xffffffa6(%rip)
3d62(6): nop 0x0(%rax,%rax,1)
3d68(4): mov 0x8(%rbx),%r8
3d6c(4): mov 0x28(%rbx),%r12
3d70(7): lea 0x1549(%rip),%rsi
3d77(4): mov 0x20(%rbx),%r15
3d7b(4): mov 0x18(%rbx),%r14
3d7f(5): mov $0x5,%edx
3d84(4): mov 0x10(%rbx),%r13
3d88(2): xor %edi,%edi
3d8a(3): mov (%rbx),%rbx
3d8d(4): mov %r8,(%rsp)
3d91(5): call 0xffffd52f(%rip)
3d96(4): sub $0x8,%rsp
3d9a(3): mov %r13,%r9
3d9d(2): push %r12
3d9f(2): push %r15
3da1(2): push %r14
3da3(5): mov 0x20(%rsp),%r8
3da8(3): mov %rbx,%rcx
3dab(3): mov %rax,%rdx
3dae(3): mov %rbp,%rdi
3db1(5): mov $0x1,%esi
3db6(2): xor %eax,%eax
3db8(5): call 0xffffd6a8(%rip)
3dbd(4): add $0x20,%rsp
3dc1(4): add $0x28,%rsp
3dc5(1): pop %rbx
3dc6(1): pop %rbp
3dc7(2): pop %r12
3dc9(2): pop %r13
3dcb(2): pop %r14
3dcd(2): pop %r15
3dcf(1): ret near (%rsp)
3dd0(4): mov 0x10(%rbx),%r9
3dd4(4): mov 0x30(%rbx),%r13
3dd8(7): lea 0x1509(%rip),%rsi
3ddf(4): mov 0x28(%rbx),%r12
3de3(4): mov 0x20(%rbx),%r15
3de7(5): mov $0x5,%edx
3dec(4): mov 0x18(%rbx),%r14
3df0(4): mov 0x8(%rbx),%r8
3df4(2): xor %edi,%edi
3df6(5): mov %r9,0x8(%rsp)
3dfb(3): mov (%rbx),%rbx
3dfe(4): mov %r8,(%rsp)
3e02(5): call 0xffffd4be(%rip)
3e07(2): push %r13
3e09(2): push %r12
3e0b(2): push %r15
3e0d(2): push %r14
3e0f(5): mov 0x28(%rsp),%r9
3e14(2): jmp 0xffffff8f(%rip)
3e16(a): nop 0x0(%rax,%rax,1)
3e20(4): mov 0x40(%rbx),%r10
3e24(4): mov 0x38(%rbx),%r9
3e28(5): mov $0x5,%edx
3e2d(4): mov 0x10(%rbx),%rax
3e31(4): mov 0x8(%rbx),%r8
3e35(7): lea 0x1544(%rip),%rsi
3e3c(4): mov 0x30(%rbx),%r13
3e40(4): mov 0x28(%rbx),%r12
3e44(4): mov 0x20(%rbx),%r15
3e48(4): mov 0x18(%rbx),%r14
3e4c(5): mov %r10,0x18(%rsp)
3e51(5): mov %r9,0x10(%rsp)
3e56(4): mov %rax,(%rsp)
3e5a(5): mov %r8,0x8(%rsp)
3e5f(3): mov (%rbx),%rbx
3e62(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3e70(3): xor %r9d,%r9d
3e73(4): cmp $0x0,(%r8)
3e77(2): jz 0x14(%rip)
3e79(7): nop 0x0(%rax)
3e80(4): add $0x1,%r9
3e84(5): cmp $0x0,0x0(%r8,%r9,8)
3e89(2): jnz 0xfffffff7(%rip)
3e8b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3e90(4): sub $0x68,%rsp
3e94(3): mov %r8,%r10
3e97(3): xor %r9d,%r9d
3e9a(9): mov $0x28,%rax
3ea3(5): mov %rax,0x58(%rsp)
3ea8(2): xor %eax,%eax
3eaa(3): mov %rsp,%r8
3ead(3): nop (%rax)
3eb0(3): mov (%r10),%eax
3eb3(3): cmp $0x2f,%eax
3eb6(2): jnbe 0x44(%rip)
3eb8(3): mov %eax,%r11d
3ebb(4): add 0x10(%r10),%r11
3ebf(3): add $0x8,%eax
3ec2(3): mov %eax,(%r10)
3ec5(3): mov (%r11),%rax
3ec8(3): test %rax,%rax
3ecb(4): mov %rax,0x0(%r8,%r9,8)
3ecf(2): jz 0xc(%rip)
3ed1(4): add $0x1,%r9
3ed5(4): cmp $0xa,%r9
3ed9(2): jnz 0xffffffd7(%rip)
3edb(5): call 0xfffffb75(%rip)
3ee0(5): mov 0x58(%rsp),%rax
3ee5(9): xor $0x28,%rax
3eee(2): jnz 0x7(%rip)
3ef0(4): add $0x68,%rsp
3ef4(1): ret near (%rsp)
3ef5(5): call 0xffffd3fb(%rip)
3efa(4): mov 0x8(%r10),%r11
3efe(4): lea 0x8(%r11),%rax
3f02(4): mov %rax,0x8(%r10)
3f06(2): jmp 0xffffffbf(%rip)

"version_etc" :
3f10(1): push %rbp
3f11(1): push %rbx
3f12(6): mov $0x20,%r10d
3f18(3): xor %r11d,%r11d
3f1b(7): sub $0xb8,%rsp
3f22(9): mov $0x28,%rax
3f2b(5): mov %rax,0x78(%rsp)
3f30(2): xor %eax,%eax
3f32(8): lea 0xd0(%rsp),%rax
3f3a(8): mov %r8,0xa0(%rsp)
3f42(8): lea 0xd0(%rsp),%rbx
3f4a(5): lea 0x20(%rsp),%r8
3f4f(8): mov %r9,0xa8(%rsp)
3f57(8): mov $0x20,0x8(%rsp)
3f5f(5): mov %rax,0x10(%rsp)
3f64(8): lea 0x80(%rsp),%rax
3f6c(3): xor %r9d,%r9d
3f6f(5): mov %rax,0x18(%rsp)
3f74(3): mov %rax,%rbp
3f77(9): nop 0x0(%rax,%rax,1)
3f80(4): cmp $0x2f,%r10d
3f84(2): jnbe 0x58(%rip)
3f86(3): mov %r10d,%eax
3f89(6): mov $0x1,%r11d
3f8f(4): add $0x8,%r10d
3f93(3): add %rbp,%rax
3f96(3): mov (%rax),%rax
3f99(3): test %rax,%rax
3f9c(4): mov %rax,0x0(%r8,%r9,8)
3fa0(2): jz 0xc(%rip)
3fa2(4): add $0x1,%r9
3fa6(4): cmp $0xa,%r9
3faa(2): jnz 0xffffffd6(%rip)
3fac(3): test %r11b,%r11b
3faf(2): jnz 0x26(%rip)
3fb1(5): call 0xfffffa9f(%rip)
3fb6(5): mov 0x78(%rsp),%rax
3fbb(9): xor $0x28,%rax
3fc4(2): jnz 0xc(%rip)
3fc6(7): add $0xb8,%rsp
3fcd(1): pop %rbx
3fce(1): pop %rbp
3fcf(1): ret near (%rsp)
3fd0(5): call 0xffffd320(%rip)
3fd5(5): mov %r10d,0x8(%rsp)
3fda(2): jmp 0xffffffd7(%rip)
3fdc(3): mov %rbx,%rax
3fdf(4): add $0x8,%rbx
3fe3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
3ff0(1): push %rbx
3ff1(7): lea 0x116a(%rip),%rsi
3ff8(5): mov $0x5,%edx
3ffd(2): xor %edi,%edi
3fff(5): call 0xffffd2c1(%rip)
4004(7): lea 0x116c(%rip),%rdx
400b(3): mov %rax,%rsi
400e(5): mov $0x1,%edi
4013(2): xor %eax,%eax
4015(5): call 0xffffd3eb(%rip)
401a(7): lea 0x116c(%rip),%rsi
4021(5): mov $0x5,%edx
4026(2): xor %edi,%edi
4028(5): call 0xffffd298(%rip)
402d(7): lea 0xaac(%rip),%rcx
4034(7): lea 0x6c6(%rip),%rdx
403b(3): mov %rax,%rsi
403e(5): mov $0x1,%edi
4043(2): xor %eax,%eax
4045(5): call 0xffffd3bb(%rip)
404a(7): mov 0x203037(%rip),%rbx
4051(7): lea 0x1368(%rip),%rsi
4058(2): xor %edi,%edi
405a(5): mov $0x5,%edx
405f(5): call 0xffffd261(%rip)
4064(3): mov %rbx,%rsi
4067(3): mov %rax,%rdi
406a(1): pop %rbx
406b(5): jmp 0xffffd2f5(%rip)

"xmalloc" :
4070(1): push %rbx
4071(3): mov %rdi,%rbx
4074(5): call 0xffffd32c(%rip)
4079(3): test %rax,%rax
407c(2): jnz 0x7(%rip)
407e(3): test %rbx,%rbx
4081(2): jnz 0x4(%rip)
4083(1): pop %rbx
4084(1): ret near (%rsp)
4085(5): call 0x23b(%rip)

"xnmalloc" :
4090(3): mov %rdi,%rax
4093(3): mul %rax,%rsi,%rdx
4096(3): mov %rax,%rdi
4099(3): seto %al
409c(3): test %rdi,%rdi
409f(2): js 0xc(%rip)
40a1(3): movzx %al,%eax
40a4(3): test %rax,%rax
40a7(2): jnz 0x4(%rip)
40a9(2): jmp 0xffffffc7(%rip)
40ab(4): sub $0x8,%rsp
40af(5): call 0x211(%rip)

"xrealloc" :
40d0(3): test %rsi,%rsi
40d3(1): push %rbx
40d4(3): mov %rsi,%rbx
40d7(2): jnz 0x7(%rip)
40d9(3): test %rdi,%rdi
40dc(2): jnz 0x1c(%rip)
40de(3): mov %rbx,%rsi
40e1(5): call 0xffffd2ff(%rip)
40e6(3): test %rax,%rax
40e9(2): jnz 0x7(%rip)
40eb(3): test %rbx,%rbx
40ee(2): jnz 0x13(%rip)
40f0(1): pop %rbx
40f1(1): ret near (%rsp)
40f2(6): nop 0x0(%rax,%rax,1)
40f8(5): call 0xffffd138(%rip)
40fd(2): xor %eax,%eax
40ff(1): pop %rbx
4100(1): ret near (%rsp)
4101(5): call 0x1bf(%rip)

"xnrealloc" :
4110(3): mov %rsi,%rax
4113(3): mul %rax,%rdx,%rdx
4116(3): mov %rax,%rsi
4119(3): seto %al
411c(3): test %rsi,%rsi
411f(2): js 0xc(%rip)
4121(3): movzx %al,%eax
4124(3): test %rax,%rax
4127(2): jnz 0x4(%rip)
4129(2): jmp 0xffffffa7(%rip)
412b(4): sub $0x8,%rsp
412f(5): call 0x191(%rip)

"x2nrealloc" :
4140(3): test %rdi,%rdi
4143(3): mov %rdx,%r9
4146(3): mov (%rsi),%rcx
4149(2): jz 0x37(%rip)
414b(2): xor %edx,%edx
414d(a): mov $0x6148914691236517204,%rax
4157(3): div %r9,%rax
415a(3): cmp %rcx,%rax
415d(2): jbe 0x3e(%rip)
415f(3): mov %rcx,%rax
4162(3): shr $0x1,%rax
4165(5): lea 0x1(%rax,%rcx,1),%rcx
416a(3): mov %rcx,(%rsi)
416d(4): imul %r9,%rcx
4171(3): mov %rcx,%rsi
4174(5): jmp 0xffffff5c(%rip)
4179(7): nop 0x0(%rax)
4180(3): test %rcx,%rcx
4183(2): jz 0x25(%rip)
4185(3): mov %rcx,%rax
4188(3): mul %rax,%r9,%rdx
418b(3): seto %dl
418e(3): test %rax,%rax
4191(3): movzx %dl,%edx
4194(2): js 0x7(%rip)
4196(3): test %rdx,%rdx
4199(2): jz 0xffffffd1(%rip)
419b(4): sub $0x8,%rsp
419f(5): call 0x121(%rip)
41a4(4): nop 0x0(%rax)
41a8(2): xor %edx,%edx
41aa(5): mov $0x80,%eax
41af(3): xor %r8d,%r8d
41b2(3): div %r9,%rax
41b5(3): test %rax,%rax
41b8(4): setz %r8b
41bc(4): lea 0x0(%r8,%rax,1),%rcx
41c0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
41d0(3): test %rdi,%rdi
41d3(3): mov (%rsi),%rax
41d6(2): jz 0x2a(%rip)
41d8(a): mov $0x6148914691236517203,%rdx
41e2(3): cmp %rdx,%rax
41e5(2): jnbe 0x2c(%rip)
41e7(3): mov %rax,%rdx
41ea(3): shr $0x1,%rdx
41ed(5): lea 0x1(%rdx,%rax,1),%rax
41f2(3): mov %rax,(%rsi)
41f5(3): mov %rax,%rsi
41f8(5): jmp 0xfffffed8(%rip)
41fd(3): nop (%rax)
4200(3): test %rax,%rax
4203(5): mov $0x80,%edx
4208(4): cmove %rdx,%rax
420c(3): test %rax,%rax
420f(2): jns 0xffffffe3(%rip)
4211(4): sub $0x8,%rsp
4215(5): call 0xab(%rip)

"xzalloc" :
4220(1): push %rbx
4221(3): mov %rdi,%rbx
4224(5): call 0xfffffe4c(%rip)
4229(3): mov %rbx,%rdx
422c(2): xor %esi,%esi
422e(3): mov %rax,%rdi
4231(1): pop %rbx
4232(5): jmp 0xffffd10e(%rip)

"xcalloc" :
4240(3): mov %rdi,%rax
4243(4): sub $0x8,%rsp
4247(3): mul %rax,%rsi,%rdx
424a(3): seto %dl
424d(3): test %rax,%rax
4250(2): js 0x19(%rip)
4252(3): movzx %dl,%edx
4255(3): test %rdx,%rdx
4258(2): jnz 0x11(%rip)
425a(5): call 0xffffd116(%rip)
425f(3): test %rax,%rax
4262(2): jz 0x7(%rip)
4264(4): add $0x8,%rsp
4268(1): ret near (%rsp)
4269(5): call 0x57(%rip)

"xmemdup" :
4270(1): push %rbp
4271(1): push %rbx
4272(3): mov %rdi,%rbp
4275(3): mov %rsi,%rdi
4278(3): mov %rsi,%rbx
427b(4): sub $0x8,%rsp
427f(5): call 0xfffffdf1(%rip)
4284(4): add $0x8,%rsp
4288(3): mov %rbx,%rdx
428b(3): mov %rbp,%rsi
428e(1): pop %rbx
428f(1): pop %rbp
4290(3): mov %rax,%rdi
4293(5): jmp 0xffffd0ed(%rip)

"xstrdup" :
42a0(1): push %rbx
42a1(3): mov %rdi,%rbx
42a4(5): call 0xffffd03c(%rip)
42a9(3): mov %rbx,%rdi
42ac(4): lea 0x1(%rax),%rsi
42b0(1): pop %rbx
42b1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
42c0(7): lea 0x11a8(%rip),%rsi
42c7(4): sub $0x8,%rsp
42cb(5): mov $0x5,%edx
42d0(2): xor %edi,%edi
42d2(5): call 0xffffcfee(%rip)
42d7(6): mov 0x202d3b(%rip),%edi
42dd(7): lea 0x911(%rip),%rdx
42e4(3): mov %rax,%rcx
42e7(2): xor %esi,%esi
42e9(2): xor %eax,%eax
42eb(5): call 0xffffd125(%rip)
42f0(5): call 0xffffcf50(%rip)

"rpl_mbrtowc" :
4300(2): push %r13
4302(2): push %r12
4304(3): mov %rsi,%r13
4307(1): push %rbp
4308(1): push %rbx
4309(3): mov %rdi,%rbx
430c(3): mov %rdx,%r12
430f(4): sub $0x18,%rsp
4313(9): mov $0x28,%rax
431c(5): mov %rax,0x8(%rsp)
4321(2): xor %eax,%eax
4323(5): lea 0x4(%rsp),%rax
4328(3): test %rdi,%rdi
432b(4): cmove %rax,%rbx
432f(3): mov %rbx,%rdi
4332(5): call 0xffffcfde(%rip)
4337(4): cmp $0xfffffffd,%rax
433b(3): mov %rax,%rbp
433e(2): jbe 0x22(%rip)
4340(3): test %r12,%r12
4343(2): jz 0x1d(%rip)
4345(2): xor %edi,%edi
4347(5): call 0xc9(%rip)
434c(2): test %al,%al
434e(2): jnz 0x12(%rip)
4350(5): movzx 0x0(%r13),%eax
4355(5): mov $0x1,%ebp
435a(2): mov %eax,(%rbx)
435c(4): nop 0x0(%rax)
4360(5): mov 0x8(%rsp),%rdx
4365(9): xor $0x28,%rdx
436e(3): mov %rbp,%rax
4371(2): jnz 0xd(%rip)
4373(4): add $0x18,%rsp
4377(1): pop %rbx
4378(1): pop %rbp
4379(2): pop %r12
437b(2): pop %r13
437d(1): ret near (%rsp)
437e(5): call 0xffffcf72(%rip)

"close_stream" :
4390(2): push %r12
4392(1): push %rbp
4393(3): mov %rdi,%rbp
4396(1): push %rbx
4397(5): call 0xffffcee9(%rip)
439c(3): mov 0x0(%rbp),%ebx
439f(3): mov %rbp,%rdi
43a2(3): mov %rax,%r12
43a5(5): call 0x10b(%rip)
43aa(3): and $0x20,%ebx
43ad(2): test %ebx,%ebx
43af(2): jnz 0x19(%rip)
43b1(2): test %eax,%eax
43b3(2): jz 0xc(%rip)
43b5(3): test %r12,%r12
43b8(5): mov $0xffffffff,%eax
43bd(2): jz 0x3b(%rip)
43bf(1): pop %rbx
43c0(1): pop %rbp
43c1(2): pop %r12
43c3(1): ret near (%rsp)
43c4(4): nop 0x0(%rax)
43c8(2): test %eax,%eax
43ca(2): jnz 0x1e(%rip)
43cc(5): call 0xffffce84(%rip)
43d1(6): mov $0x0,(%rax)
43d7(5): mov $0xffffffff,%eax
43dc(1): pop %rbx
43dd(1): pop %rbp
43de(2): pop %r12
43e0(1): ret near (%rsp)
43e1(7): nop 0x0(%rax)
43e8(1): pop %rbx
43e9(5): mov $0xffffffff,%eax
43ee(1): pop %rbp
43ef(2): pop %r12
43f1(1): ret near (%rsp)
43f2(6): nop 0x0(%rax,%rax,1)
43f8(5): call 0xffffce58(%rip)
43fd(3): cmp $0x9,(%rax)
4400(1): pop %rbx
4401(1): pop %rbp
4402(2): pop %r12
4404(3): setnz %al
4407(3): movzx %al,%eax
440a(2): neg %eax
440c(1): ret near (%rsp)

"hard_locale" :
4410(4): sub $0x8,%rsp
4414(2): xor %esi,%esi
4416(5): call 0xffffcfda(%rip)
441b(3): mov %rax,%rdx
441e(5): mov $0x1,%eax
4423(3): test %rdx,%rdx
4426(2): jz 0x1f(%rip)
4428(7): lea 0x1051(%rip),%rdi
442f(5): mov $0x2,%ecx
4434(3): mov %rdx,%rsi
4437(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4439(3): setnbe %cl
443c(3): sbb $0x0,%cl
443f(2): xor %eax,%eax
4441(2): test %cl,%cl
4443(2): jnz 0xd(%rip)
4445(4): add $0x8,%rsp
4449(1): ret near (%rsp)
444a(6): nop 0x0(%rax,%rax,1)
4450(7): lea 0x102b(%rip),%rdi
4457(5): mov $0x6,%ecx
445c(3): mov %rdx,%rsi
445f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4461(3): setnbe %al
4464(2): sbb $0x0,%al
4466(2): test %al,%al
4468(3): setnz %al
446b(4): add $0x8,%rsp
446f(1): ret near (%rsp)

"locale_charset" :
4470(4): sub $0x8,%rsp
4474(5): mov $0xe,%edi
4479(5): call 0xffffcf47(%rip)
447e(3): test %rax,%rax
4481(2): jz 0x1f(%rip)
4483(3): cmp $0x0,(%rax)
4486(7): lea 0xffb(%rip),%rdx
448d(4): cmove %rdx,%rax
4491(4): add $0x8,%rsp
4495(1): ret near (%rsp)
4496(a): nop 0x0(%rax,%rax,1)
44a0(7): lea 0xfe1(%rip),%rax
44a7(4): add $0x8,%rsp
44ab(1): ret near (%rsp)

"rpl_fclose" :
44b0(2): push %r12
44b2(1): push %rbp
44b3(1): push %rbx
44b4(3): mov %rdi,%rbx
44b7(5): call 0xffffced9(%rip)
44bc(2): test %eax,%eax
44be(3): mov %rbx,%rdi
44c1(2): js 0x56(%rip)
44c3(5): call 0xffffcf0d(%rip)
44c8(2): test %eax,%eax
44ca(2): jnz 0x2e(%rip)
44cc(3): mov %rbx,%rdi
44cf(5): call 0x61(%rip)
44d4(2): test %eax,%eax
44d6(2): jz 0x3e(%rip)
44d8(5): call 0xffffcd78(%rip)
44dd(3): mov (%rax),%r12d
44e0(3): mov %rbx,%rdi
44e3(3): mov %rax,%rbp
44e6(5): call 0xffffcdba(%rip)
44eb(3): test %r12d,%r12d
44ee(2): jnz 0x32(%rip)
44f0(1): pop %rbx
44f1(1): pop %rbp
44f2(2): pop %r12
44f4(1): ret near (%rsp)
44f5(3): nop (%rax)
44f8(3): mov %rbx,%rdi
44fb(5): call 0xffffce95(%rip)
4500(2): xor %esi,%esi
4502(5): mov $0x1,%edx
4507(2): mov %eax,%edi
4509(5): call 0xffffce27(%rip)
450e(4): cmp $0xffffffff,%rax
4512(2): jnz 0xffffffba(%rip)
4514(3): mov %rbx,%rdi
4517(1): pop %rbx
4518(1): pop %rbp
4519(2): pop %r12
451b(5): jmp 0xffffcd85(%rip)
4520(4): mov %r12d,0x0(%rbp)
4524(5): mov $0xffffffff,%eax
4529(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4530(3): test %rdi,%rdi
4533(1): push %rbx
4534(3): mov %rdi,%rbx
4537(2): jz 0x13(%rip)
4539(5): call 0xffffce97(%rip)
453e(2): test %eax,%eax
4540(2): jz 0xa(%rip)
4542(6): test $0x100,(%rbx)
4548(2): jnz 0x10(%rip)
454a(3): mov %rbx,%rdi
454d(1): pop %rbx
454e(5): jmp 0xffffce62(%rip)
4553(5): nop 0x0(%rax,%rax,1)
4558(3): mov %rbx,%rdi
455b(5): mov $0x1,%edx
4560(2): xor %esi,%esi
4562(5): call 0xe(%rip)
4567(3): mov %rbx,%rdi
456a(1): pop %rbx
456b(5): jmp 0xffffce45(%rip)

"rpl_fseeko" :
4570(4): mov 0x8(%rdi),%rax
4574(4): cmp %rax,0x10(%rdi)
4578(2): jz 0x8(%rip)
457a(5): jmp 0xffffcea6(%rip)
457f(1): nop 
4580(4): mov 0x20(%rdi),%rax
4584(4): cmp %rax,0x28(%rdi)
4588(2): jnz 0xfffffff2(%rip)
458a(5): cmp $0x0,0x48(%rdi)
458f(2): jnz 0xffffffeb(%rip)
4591(2): push %r12
4593(1): push %rbp
4594(3): mov %edx,%r12d
4597(1): push %rbx
4598(3): mov %rsi,%rbp
459b(3): mov %rdi,%rbx
459e(5): call 0xffffcdf2(%rip)
45a3(3): mov %r12d,%edx
45a6(3): mov %rbp,%rsi
45a9(2): mov %eax,%edi
45ab(5): call 0xffffcd85(%rip)
45b0(4): cmp $0xffffffff,%rax
45b4(2): jz 0xe(%rip)
45b6(3): and $0xef,(%rbx)
45b9(7): mov %rax,0x90(%rbx)
45c0(2): xor %eax,%eax
45c2(1): pop %rbx
45c3(1): pop %rbp
45c4(2): pop %r12
45c6(1): ret near (%rsp)

"__libc_csu_init" :
45d0(2): push %r15
45d2(2): push %r14
45d4(3): mov %rdx,%r15
45d7(2): push %r13
45d9(2): push %r12
45db(7): lea 0x20254e(%rip),%r12
45e2(1): push %rbp
45e3(7): lea 0x20254e(%rip),%rbp
45ea(1): push %rbx
45eb(3): mov %edi,%r13d
45ee(3): mov %rsi,%r14
45f1(3): sub %r12,%rbp
45f4(4): sub $0x8,%rsp
45f8(4): sar $0x3,%rbp
45fc(5): call 0xffffcc04(%rip)
4601(3): test %rbp,%rbp
4604(2): jz 0x22(%rip)
4606(2): xor %ebx,%ebx
4608(8): nop 0x0(%rax,%rax,1)
4610(3): mov %r15,%rdx
4613(3): mov %r14,%rsi
4616(3): mov %r13d,%edi
4619(4): call 0x0(%r12,%rbx,8)
461d(4): add $0x1,%rbx
4621(3): cmp %rbx,%rbp
4624(2): jnz 0xffffffec(%rip)
4626(4): add $0x8,%rsp
462a(1): pop %rbx
462b(1): pop %rbp
462c(2): pop %r12
462e(2): pop %r13
4630(2): pop %r14
4632(2): pop %r15
4634(1): ret near (%rsp)

"atexit" :
4650(7): mov 0x2029b1(%rip),%rdx
4657(2): xor %esi,%esi
4659(5): jmp 0xffffcdd7(%rip)

"_fini" :
4660(4): sub $0x8,%rsp
4664(4): add $0x8,%rsp
4668(1): ret near (%rsp)

