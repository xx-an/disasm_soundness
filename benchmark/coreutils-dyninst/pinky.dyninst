
"__ctype_toupper_loc@plt" :
16d0(6): jmp 0x20670a(%rip)
16d6(5): push $0x0

"utmpxname@plt" :
16e0(6): jmp 0x206702(%rip)
16e6(5): push $0x1

"free@plt" :
16f0(6): jmp 0x2066fa(%rip)
16f6(5): push $0x2

"localtime@plt" :
1700(6): jmp 0x2066f2(%rip)
1706(5): push $0x3

"abort@plt" :
1710(6): jmp 0x2066ea(%rip)
1716(5): push $0x4

"__errno_location@plt" :
1720(6): jmp 0x2066e2(%rip)
1726(5): push $0x5

"strncpy@plt" :
1730(6): jmp 0x2066da(%rip)
1736(5): push $0x6

"strncmp@plt" :
1740(6): jmp 0x2066d2(%rip)
1746(5): push $0x7

"_exit@plt" :
1750(6): jmp 0x2066ca(%rip)
1756(5): push $0x8

"__fpending@plt" :
1760(6): jmp 0x2066c2(%rip)
1766(5): push $0x9

"fread_unlocked@plt" :
1770(6): jmp 0x2066ba(%rip)
1776(5): push $0xa

"textdomain@plt" :
1780(6): jmp 0x2066b2(%rip)
1786(5): push $0xb

"endutxent@plt" :
1790(6): jmp 0x2066aa(%rip)
1796(5): push $0xc

"fclose@plt" :
17a0(6): jmp 0x2066a2(%rip)
17a6(5): push $0xd

"bindtextdomain@plt" :
17b0(6): jmp 0x20669a(%rip)
17b6(5): push $0xe

"stpcpy@plt" :
17c0(6): jmp 0x206692(%rip)
17c6(5): push $0xf

"dcgettext@plt" :
17d0(6): jmp 0x20668a(%rip)
17d6(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
17e0(6): jmp 0x206682(%rip)
17e6(5): push $0x11

"strlen@plt" :
17f0(6): jmp 0x20667a(%rip)
17f6(5): push $0x12

"__stack_chk_fail@plt" :
1800(6): jmp 0x206672(%rip)
1806(5): push $0x13

"getopt_long@plt" :
1810(6): jmp 0x20666a(%rip)
1816(5): push $0x14

"mbrtowc@plt" :
1820(6): jmp 0x206662(%rip)
1826(5): push $0x15

"strchr@plt" :
1830(6): jmp 0x20665a(%rip)
1836(5): push $0x16

"gai_strerror@plt" :
1840(6): jmp 0x206652(%rip)
1846(5): push $0x17

"__overflow@plt" :
1850(6): jmp 0x20664a(%rip)
1856(5): push $0x18

"strrchr@plt" :
1860(6): jmp 0x206642(%rip)
1866(5): push $0x19

"lseek@plt" :
1870(6): jmp 0x20663a(%rip)
1876(5): push $0x1a

"memset@plt" :
1880(6): jmp 0x206632(%rip)
1886(5): push $0x1b

"memcmp@plt" :
1890(6): jmp 0x20662a(%rip)
1896(5): push $0x1c

"fputs_unlocked@plt" :
18a0(6): jmp 0x206622(%rip)
18a6(5): push $0x1d

"calloc@plt" :
18b0(6): jmp 0x20661a(%rip)
18b6(5): push $0x1e

"getpwnam@plt" :
18c0(6): jmp 0x206612(%rip)
18c6(5): push $0x1f

"setutxent@plt" :
18d0(6): jmp 0x20660a(%rip)
18d6(5): push $0x20

"memcpy@plt" :
18e0(6): jmp 0x206602(%rip)
18e6(5): push $0x21

"kill@plt" :
18f0(6): jmp 0x2065fa(%rip)
18f6(5): push $0x22

"time@plt" :
1900(6): jmp 0x2065f2(%rip)
1906(5): push $0x23

"fileno@plt" :
1910(6): jmp 0x2065ea(%rip)
1916(5): push $0x24

"__xstat@plt" :
1920(6): jmp 0x2065e2(%rip)
1926(5): push $0x25

"malloc@plt" :
1930(6): jmp 0x2065da(%rip)
1936(5): push $0x26

"fflush@plt" :
1940(6): jmp 0x2065d2(%rip)
1946(5): push $0x27

"nl_langinfo@plt" :
1950(6): jmp 0x2065ca(%rip)
1956(5): push $0x28

"__freading@plt" :
1960(6): jmp 0x2065c2(%rip)
1966(5): push $0x29

"fwrite_unlocked@plt" :
1970(6): jmp 0x2065ba(%rip)
1976(5): push $0x2a

"realloc@plt" :
1980(6): jmp 0x2065b2(%rip)
1986(5): push $0x2b

"setlocale@plt" :
1990(6): jmp 0x2065aa(%rip)
1996(5): push $0x2c

"__printf_chk@plt" :
19a0(6): jmp 0x2065a2(%rip)
19a6(5): push $0x2d

"strftime@plt" :
19b0(6): jmp 0x20659a(%rip)
19b6(5): push $0x2e

"getutxent@plt" :
19c0(6): jmp 0x206592(%rip)
19c6(5): push $0x2f

"error@plt" :
19d0(6): jmp 0x20658a(%rip)
19d6(5): push $0x30

"fseeko@plt" :
19e0(6): jmp 0x206582(%rip)
19e6(5): push $0x31

"fopen@plt" :
19f0(6): jmp 0x20657a(%rip)
19f6(5): push $0x32

"__cxa_atexit@plt" :
1a00(6): jmp 0x206572(%rip)
1a06(5): push $0x33

"exit@plt" :
1a10(6): jmp 0x20656a(%rip)
1a16(5): push $0x34

"fwrite@plt" :
1a20(6): jmp 0x206562(%rip)
1a26(5): push $0x35

"__fprintf_chk@plt" :
1a30(6): jmp 0x20655a(%rip)
1a36(5): push $0x36

"getaddrinfo@plt" :
1a40(6): jmp 0x206552(%rip)
1a46(5): push $0x37

"strdup@plt" :
1a50(6): jmp 0x20654a(%rip)
1a56(5): push $0x38

"mbsinit@plt" :
1a60(6): jmp 0x206542(%rip)
1a66(5): push $0x39

"iswprint@plt" :
1a70(6): jmp 0x20653a(%rip)
1a76(5): push $0x3a

"__ctype_b_loc@plt" :
1a80(6): jmp 0x206532(%rip)
1a86(5): push $0x3b

"freeaddrinfo@plt" :
1a90(6): jmp 0x20652a(%rip)
1a96(5): push $0x3c

"__sprintf_chk@plt" :
1aa0(6): jmp 0x206522(%rip)
1aa6(5): push $0x3d

".plt.got" :
1ab0(6): jmp 0x20653a(%rip)
1ab6(2): nop 

"_init" :
16a0(4): sub $0x8,%rsp
16a4(7): mov 0x206935(%rip),%rax
16ab(3): test %rax,%rax
16ae(2): jz 0x4(%rip)
16b0(2): call %rax
16b2(4): add $0x8,%rsp
16b6(1): ret near (%rsp)

"main" :
1ac0(2): push %r15
1ac2(2): push %r14
1ac4(2): push %r13
1ac6(2): push %r12
1ac8(7): lea 0x206051(%rip),%r12
1acf(1): push %rbp
1ad0(1): push %rbx
1ad1(2): mov %edi,%ebp
1ad3(3): mov %rsi,%rbx
1ad6(4): sub $0x28,%rsp
1ada(3): mov (%rsi),%rdi
1add(9): mov $0x28,%rax
1ae6(5): mov %rax,0x18(%rsp)
1aeb(2): xor %eax,%eax
1aed(5): call 0x1683(%rip)
1af2(7): lea 0x4d88(%rip),%rsi
1af9(5): mov $0x6,%edi
1afe(5): call 0xfffffe92(%rip)
1b03(7): lea 0x42b1(%rip),%rsi
1b0a(7): lea 0x4281(%rip),%rdi
1b11(5): call 0xfffffc9f(%rip)
1b16(7): lea 0x4275(%rip),%rdi
1b1d(5): call 0xfffffc63(%rip)
1b22(7): lea 0x1497(%rip),%rdi
1b29(5): call 0x4107(%rip)
1b2e(2): nop 
1b30(7): lea 0x42c9(%rip),%rdx
1b37(3): xor %r8d,%r8d
1b3a(3): mov %r12,%rcx
1b3d(3): mov %rbx,%rsi
1b40(2): mov %ebp,%edi
1b42(5): call 0xfffffcce(%rip)
1b47(3): cmp $0xff,%eax
1b4a(6): jz 0x14a(%rip)
1b50(3): cmp $0x69,%eax
1b53(6): jz 0xcd(%rip)
1b59(2): jle 0x2f(%rip)
1b5b(3): cmp $0x71,%eax
1b5e(6): jz 0xea(%rip)
1b64(2): jnle 0x4c(%rip)
1b66(3): cmp $0x6c,%eax
1b69(6): jz 0xcf(%rip)
1b6f(3): cmp $0x70,%eax
1b72(6): jnz 0x3f7(%rip)
1b78(7): mov $0x0,0x206494(%rip)
1b7f(2): jmp 0xffffffb1(%rip)
1b81(7): nop 0x0(%rax)
1b88(3): cmp $0x62,%eax
1b8b(6): jz 0xed(%rip)
1b91(2): jle 0x3f(%rip)
1b93(3): cmp $0x66,%eax
1b96(6): jz 0xd2(%rip)
1b9c(3): cmp $0x68,%eax
1b9f(6): jnz 0x3ca(%rip)
1ba5(7): mov $0x0,0x206468(%rip)
1bac(2): jmp 0xffffff84(%rip)
1bae(2): nop 
1bb0(3): cmp $0x73,%eax
1bb3(6): jz 0xd5(%rip)
1bb9(3): cmp $0x77,%eax
1bbc(6): jnz 0x3ad(%rip)
1bc2(7): mov $0x0,0x20644c(%rip)
1bc9(5): jmp 0xffffff67(%rip)
1bce(2): nop 
1bd0(5): cmp $0xffffff7d,%eax
1bd5(6): jnz 0x365(%rip)
1bdb(7): lea 0x4212(%rip),%rax
1be2(7): mov 0x2064bf(%rip),%rdi
1be9(7): mov 0x206428(%rip),%rcx
1bf0(2): push $0x0
1bf2(7): lea 0x41da(%rip),%r9
1bf9(7): lea 0x41e3(%rip),%r8
1c00(1): push %rax
1c01(7): lea 0x4186(%rip),%rdx
1c08(7): lea 0x40f5(%rip),%rsi
1c0f(2): xor %eax,%eax
1c11(5): call 0x374f(%rip)
1c16(2): xor %edi,%edi
1c18(5): call 0xfffffdf8(%rip)
1c1d(3): nop (%rax)
1c20(7): mov $0x0,0x2063ee(%rip)
1c27(7): mov $0x0,0x2063e2(%rip)
1c2e(5): jmp 0xffffff02(%rip)
1c33(5): nop 0x0(%rax,%rax,1)
1c38(7): mov $0x0,0x2063d2(%rip)
1c3f(5): jmp 0xfffffef1(%rip)
1c44(4): nop 0x0(%rax)
1c48(7): mov $0x0,0x2063c6(%rip)
1c4f(7): mov $0x0,0x2063ba(%rip)
1c56(7): mov $0x0,0x2063ba(%rip)
1c5d(5): jmp 0xfffffed3(%rip)
1c62(6): nop 0x0(%rax,%rax,1)
1c68(7): mov $0x0,0x2063a7(%rip)
1c6f(5): jmp 0xfffffec1(%rip)
1c74(4): nop 0x0(%rax)
1c78(7): mov $0x0,0x206393(%rip)
1c7f(5): jmp 0xfffffeb1(%rip)
1c84(4): nop 0x0(%rax)
1c88(7): mov $0x1,0x206382(%rip)
1c8f(5): jmp 0xfffffea1(%rip)
1c94(7): movsxd 0x206415(%rip),%rax
1c9b(2): sub %eax,%ebp
1c9d(7): cmp $0x0,0x20636d(%rip)
1ca4(2): jnz 0x63(%rip)
1ca6(2): test %ebp,%ebp
1ca8(6): jz 0x2a0(%rip)
1cae(4): shl/sal $0x3,%rax
1cb2(2): test %ebp,%ebp
1cb4(2): jle 0x2e(%rip)
1cb6(4): lea 0x0(%rbx,%rax,1),%r12
1cba(3): lea 0xffffffff(%rbp),%edx
1cbd(5): lea 0x8(%rbx,%rax,1),%rax
1cc2(4): lea 0x0(%rax,%rdx,8),%rbx
1cc6(a): nop 0x0(%rax,%rax,1)
1cd0(4): mov (%r12),%rdi
1cd4(4): add $0x8,%r12
1cd8(5): call 0x528(%rip)
1cdd(3): cmp %rbx,%r12
1ce0(2): jnz 0xfffffff0(%rip)
1ce2(2): xor %eax,%eax
1ce4(5): mov 0x18(%rsp),%rcx
1ce9(9): xor $0x28,%rcx
1cf2(6): jnz 0x290(%rip)
1cf8(4): add $0x28,%rsp
1cfc(1): pop %rbx
1cfd(1): pop %rbp
1cfe(2): pop %r12
1d00(2): pop %r13
1d02(2): pop %r14
1d04(2): pop %r15
1d06(1): ret near (%rsp)
1d07(5): lea 0x10(%rsp),%rdx
1d0c(5): lea 0x8(%rsp),%rsi
1d11(7): lea 0x3ff2(%rip),%rdi
1d18(2): xor %ecx,%ecx
1d1a(8): lea 0x0(,%rax,8),%r12
1d22(9): mov $0x0,0x10(%rsp)
1d2b(5): call 0x3c35(%rip)
1d30(2): test %eax,%eax
1d32(6): jnz 0x255(%rip)
1d38(5): mov $0x2,%edi
1d3d(5): mov 0x10(%rsp),%r13
1d42(5): mov 0x8(%rsp),%r14
1d47(5): call 0x1329(%rip)
1d4c(2): test %al,%al
1d4e(2): jnz 0x4d(%rip)
1d50(7): lea 0x40c2(%rip),%rax
1d57(a): mov $0xc,0x2063cf(%rip)
1d61(7): mov %rax,0x2063d0(%rip)
1d68(7): cmp $0x0,0x2062a7(%rip)
1d6f(2): jnz 0x7b(%rip)
1d71(3): add %r12,%rbx
1d74(2): jmp 0x18(%rip)
1d76(5): cmp $0x0,0x2c(%r13)
1d7b(2): jz 0xa(%rip)
1d7d(6): cmp $0x7,0x0(%r13)
1d83(2): jz 0x32(%rip)
1d85(7): add $0x180,%r13
1d8c(4): sub $0x1,%r14
1d90(4): cmp $0xffffffff,%r14
1d94(2): jnz 0xffffffe2(%rip)
1d96(5): jmp 0xffffff4c(%rip)
1d9b(7): lea 0x4068(%rip),%rax
1da2(a): mov $0x10,0x206384(%rip)
1dac(7): mov %rax,0x206385(%rip)
1db3(2): jmp 0xffffffb5(%rip)
1db5(3): xor %r12d,%r12d
1db8(2): test %ebp,%ebp
1dba(4): lea 0x2c(%r13),%r15
1dbe(2): jnz 0x25(%rip)
1dc0(3): mov %r13,%rdi
1dc3(5): call 0x83d(%rip)
1dc8(2): jmp 0xffffffbd(%rip)
1dca(4): mov 0x0(%rbx,%r12,8),%rsi
1dce(5): mov $0x20,%edx
1dd3(3): mov %r15,%rdi
1dd6(4): add $0x1,%r12
1dda(5): call 0xfffff966(%rip)
1ddf(2): test %eax,%eax
1de1(2): jz 0xffffffdf(%rip)
1de3(3): cmp %r12d,%ebp
1de6(2): jnle 0xffffffe4(%rip)
1de8(2): jmp 0xffffff9d(%rip)
1dea(7): lea 0x4034(%rip),%rsi
1df1(2): xor %edi,%edi
1df3(5): mov $0x5,%edx
1df8(5): call 0xfffff9d8(%rip)
1dfd(7): lea 0x4027(%rip),%rsi
1e04(3): mov %rax,%rdx
1e07(5): mov $0x1,%edi
1e0c(2): xor %eax,%eax
1e0e(5): call 0xfffffb92(%rip)
1e13(7): cmp $0x0,0x2061fb(%rip)
1e1a(6): jnz 0x99(%rip)
1e20(7): lea 0x4015(%rip),%rsi
1e27(2): xor %edi,%edi
1e29(5): mov $0x5,%edx
1e2e(5): call 0xfffff9a2(%rip)
1e33(7): lea 0x4007(%rip),%rsi
1e3a(3): mov %rax,%rdx
1e3d(5): mov $0x1,%edi
1e42(2): xor %eax,%eax
1e44(5): call 0xfffffb5c(%rip)
1e49(7): cmp $0x0,0x2061c7(%rip)
1e50(6): jnz 0xbc(%rip)
1e56(7): lea 0x3fef(%rip),%rsi
1e5d(2): xor %edi,%edi
1e5f(5): mov $0x5,%edx
1e64(5): call 0xfffff96c(%rip)
1e69(6): mov 0x2062c1(%rip),%edx
1e6f(7): lea 0x3fdb(%rip),%rsi
1e76(3): mov %rax,%rcx
1e79(5): mov $0x1,%edi
1e7e(2): xor %eax,%eax
1e80(5): call 0xfffffb20(%rip)
1e85(7): cmp $0x0,0x206184(%rip)
1e8c(2): jnz 0x55(%rip)
1e8e(7): mov 0x206213(%rip),%rdi
1e95(4): mov 0x28(%rdi),%rax
1e99(4): cmp 0x30(%rdi),%rax
1e9d(6): jnb 0xd6(%rip)
1ea3(4): lea 0x1(%rax),%rdx
1ea7(4): mov %rdx,0x28(%rdi)
1eab(3): mov $0xa,(%rax)
1eae(5): jmp 0xfffffec3(%rip)
1eb3(7): lea 0x3f76(%rip),%rsi
1eba(2): xor %edi,%edi
1ebc(5): mov $0x5,%edx
1ec1(5): call 0xfffff90f(%rip)
1ec6(7): lea 0x3f68(%rip),%rsi
1ecd(3): mov %rax,%rdx
1ed0(5): mov $0x1,%edi
1ed5(2): xor %eax,%eax
1ed7(5): call 0xfffffac9(%rip)
1edc(5): jmp 0xffffff44(%rip)
1ee1(7): lea 0x3f6f(%rip),%rsi
1ee8(2): xor %edi,%edi
1eea(5): mov $0x5,%edx
1eef(5): call 0xfffff8e1(%rip)
1ef4(7): lea 0x4405(%rip),%rsi
1efb(3): mov %rax,%rdx
1efe(5): mov $0x1,%edi
1f03(2): xor %eax,%eax
1f05(5): call 0xfffffa9b(%rip)
1f0a(2): jmp 0xffffff84(%rip)
1f0c(7): lea 0x3f34(%rip),%rsi
1f13(2): xor %edi,%edi
1f15(5): mov $0x5,%edx
1f1a(5): call 0xfffff8b6(%rip)
1f1f(7): lea 0x3dcb(%rip),%rsi
1f26(3): mov %rax,%rdx
1f29(5): mov $0x1,%edi
1f2e(2): xor %eax,%eax
1f30(5): call 0xfffffa70(%rip)
1f35(5): jmp 0xffffff21(%rip)
1f3a(5): cmp $0xffffff7e,%eax
1f3f(2): jnz 0x2a(%rip)
1f41(2): xor %edi,%edi
1f43(5): call 0xbfd(%rip)
1f48(7): lea 0x4359(%rip),%rsi
1f4f(5): mov $0x5,%edx
1f54(2): xor %edi,%edi
1f56(5): call 0xfffff87a(%rip)
1f5b(2): xor %esi,%esi
1f5d(3): mov %rax,%rdx
1f60(2): xor %edi,%edi
1f62(2): xor %eax,%eax
1f64(5): call 0xfffffa6c(%rip)
1f69(5): mov $0x1,%edi
1f6e(5): call 0xbd2(%rip)
1f73(5): mov $0xa,%esi
1f78(5): call 0xfffff8d8(%rip)
1f7d(5): jmp 0xfffffdf4(%rip)
1f82(5): call 0xfffff87e(%rip)
1f87(7): lea 0x3d7c(%rip),%rdx
1f8e(5): mov $0x3,%esi
1f93(2): xor %edi,%edi
1f95(5): call 0x2d1b(%rip)
1f9a(3): mov %rax,%rbx
1f9d(5): call 0xfffff783(%rip)
1fa2(2): mov (%rax),%esi
1fa4(7): lea 0x4356(%rip),%rdx
1fab(3): mov %rbx,%rcx
1fae(5): mov $0x1,%edi
1fb3(2): xor %eax,%eax
1fb5(5): call 0xfffffa1b(%rip)
1fba(6): nop 0x0(%rax,%rax,1)
1fc0(2): xor %ebp,%ebp
1fc2(3): mov %rdx,%r9
1fc5(1): pop %rsi
1fc6(3): mov %rsp,%rdx
1fc9(4): and $0xfffffff0,%rsp
1fcd(1): push %rax
1fce(1): push %rsp
1fcf(7): lea 0x3c4a(%rip),%r8
1fd6(7): lea 0x3bd3(%rip),%rcx
1fdd(7): lea 0xfffffadc(%rip),%rdi
1fe4(6): call 0x205fee(%rip)
1fea(1): hlt 

"_start" :
1fc0(2): xor %ebp,%ebp
1fc2(3): mov %rdx,%r9
1fc5(1): pop %rsi
1fc6(3): mov %rsp,%rdx
1fc9(4): and $0xfffffff0,%rsp
1fcd(1): push %rax
1fce(1): push %rsp
1fcf(7): lea 0x3c4a(%rip),%r8
1fd6(7): lea 0x3bd3(%rip),%rcx
1fdd(7): lea 0xfffffadc(%rip),%rdi
1fe4(6): call 0x205fee(%rip)
1fea(1): hlt 

"deregister_tm_clones" :
1ff0(7): lea 0x2060a9(%rip),%rdi
1ff7(1): push %rbp
1ff8(7): lea 0x2060a1(%rip),%rax
1fff(3): cmp %rdi,%rax
2002(3): mov %rsp,%rbp
2005(2): jz 0x1b(%rip)
2007(7): mov 0x205fc2(%rip),%rax
200e(3): test %rax,%rax
2011(2): jz 0xf(%rip)
2013(1): pop %rbp
2014(2): jmp %rax
2016(a): nop 0x0(%rax,%rax,1)
2020(1): pop %rbp
2021(1): ret near (%rsp)

"register_tm_clones" :
2030(7): lea 0x206069(%rip),%rdi
2037(7): lea 0x206062(%rip),%rsi
203e(1): push %rbp
203f(3): sub %rdi,%rsi
2042(3): mov %rsp,%rbp
2045(4): sar $0x3,%rsi
2049(3): mov %rsi,%rax
204c(4): shr $0x3f,%rax
2050(3): add %rax,%rsi
2053(3): sar $0x1,%rsi
2056(2): jz 0x1a(%rip)
2058(7): mov 0x205f89(%rip),%rax
205f(3): test %rax,%rax
2062(2): jz 0xe(%rip)
2064(1): pop %rbp
2065(2): jmp %rax
2067(9): nop 0x0(%rax,%rax,1)
2070(1): pop %rbp
2071(1): ret near (%rsp)

"__do_global_dtors_aux" :
2080(7): cmp $0x0,0x206041(%rip)
2087(2): jnz 0x31(%rip)
2089(8): cmp $0x0,0x205f5f(%rip)
2091(1): push %rbp
2092(3): mov %rsp,%rbp
2095(2): jz 0xe(%rip)
2097(7): mov 0x205f6a(%rip),%rdi
209e(5): call 0xfffffa12(%rip)
20a3(5): call 0xffffff4d(%rip)
20a8(7): mov $0x1,0x206019(%rip)
20af(1): pop %rbp
20b0(1): ret near (%rsp)
20b1(7): nop 0x0(%rax)
20b8(2): REP ret near (%rsp)

"frame_dummy" :
20c0(1): push %rbp
20c1(3): mov %rsp,%rbp
20c4(1): pop %rbp
20c5(5): jmp 0xffffff6b(%rip)

"create_fullname" :
20d0(2): push %r14
20d2(2): push %r13
20d4(3): mov %rdi,%r13
20d7(2): push %r12
20d9(1): push %rbp
20da(3): mov %rsi,%rbp
20dd(1): push %rbx
20de(2): xor %ebx,%ebx
20e0(5): call 0xfffff710(%rip)
20e5(4): lea 0x1(%rax),%r12
20e9(3): mov %r13,%rdx
20ec(4): nop 0x0(%rax)
20f0(3): movzx (%rdx),%ecx
20f3(4): add $0x1,%rdx
20f7(3): cmp $0x26,%cl
20fa(6): jz 0xf6(%rip)
2100(2): test %cl,%cl
2102(2): jnz 0xffffffee(%rip)
2104(3): test %rbx,%rbx
2107(2): jz 0x44(%rip)
2109(3): mov %rbp,%rdi
210c(3): sub %rbx,%r12
210f(5): call 0xfffff6e1(%rip)
2114(3): mov %rax,%rcx
2117(2): xor %esi,%esi
2119(4): imul %rbx,%rcx
211d(3): add %rcx,%r12
2120(4): setb %sil
2124(3): mul %rax,%rbx,%rdx
2127(5): mov $0x1,%edx
212c(3): seto %al
212f(3): test %rcx,%rcx
2132(3): movzx %al,%eax
2135(4): cmovs %rdx,%rax
2139(3): test %rsi,%rsi
213c(6): jnz 0xbd(%rip)
2142(3): test %rax,%rax
2145(6): jnz 0xb4(%rip)
214b(3): mov %r12,%rdi
214e(5): call 0x3372(%rip)
2153(3): mov %rax,%r12
2156(5): movzx 0x0(%r13),%eax
215b(3): mov %r12,%rbx
215e(2): test %al,%al
2160(2): jnz 0x1b(%rip)
2162(2): jmp 0x7d(%rip)
2164(4): nop 0x0(%rax)
2168(2): mov %al,(%rbx)
216a(4): add $0x1,%rbx
216e(4): add $0x1,%r13
2172(5): movzx 0x0(%r13),%eax
2177(2): test %al,%al
2179(2): jz 0x66(%rip)
217b(2): cmp $0x26,%al
217d(2): jnz 0xffffffeb(%rip)
217f(5): call 0xfffff901(%rip)
2184(5): movzx 0x0(%rbp),%r14d
2189(3): mov (%rax),%rax
218c(3): mov %rbp,%rcx
218f(6): test $0x2,0x1(%rax,%r14,2)
2195(3): mov %r14,%rdx
2198(2): jz 0x1d(%rip)
219a(5): call 0xfffff536(%rip)
219f(3): mov (%rax),%rax
21a2(4): movzx 0x1(%rbp),%edx
21a6(4): lea 0x1(%rbp),%rcx
21aa(4): add $0x1,%rbx
21ae(4): mov 0x0(%rax,%r14,4),%eax
21b2(3): mov %al,0xffffffff(%rbx)
21b5(2): test %dl,%dl
21b7(2): jz 0xffffffb7(%rip)
21b9(7): nop 0x0(%rax)
21c0(4): add $0x1,%rcx
21c4(4): add $0x1,%rbx
21c8(3): mov %dl,0xffffffff(%rbx)
21cb(3): movzx (%rcx),%edx
21ce(2): test %dl,%dl
21d0(2): jnz 0xfffffff0(%rip)
21d2(4): add $0x1,%r13
21d6(5): movzx 0x0(%r13),%eax
21db(2): test %al,%al
21dd(2): jnz 0xffffff9e(%rip)
21df(3): mov $0x0,(%rbx)
21e2(3): mov %r12,%rax
21e5(1): pop %rbx
21e6(1): pop %rbp
21e7(2): pop %r12
21e9(2): pop %r13
21eb(2): pop %r14
21ed(1): ret near (%rsp)
21ee(2): nop 
21f0(4): add $0x1,%rbx
21f4(5): jmp 0xfffffefc(%rip)
21f9(5): call 0x3517(%rip)

"print_long_entry" :
2200(2): push %r13
2202(2): push %r12
2204(1): push %rbp
2205(1): push %rbx
2206(3): mov %rdi,%rbp
2209(7): sub $0x418,%rsp
2210(9): mov $0x28,%rax
2219(8): mov %rax,0x408(%rsp)
2221(2): xor %eax,%eax
2223(5): call 0xfffff69d(%rip)
2228(7): lea 0x3a35(%rip),%rsi
222f(5): mov $0x5,%edx
2234(2): xor %edi,%edi
2236(3): mov %rax,%rbx
2239(5): call 0xfffff597(%rip)
223e(5): mov $0x1,%edi
2243(3): mov %rax,%rsi
2246(2): xor %eax,%eax
2248(5): call 0xfffff758(%rip)
224d(7): lea 0x3a1d(%rip),%rsi
2254(3): mov %rbp,%rdx
2257(5): mov $0x1,%edi
225c(2): xor %eax,%eax
225e(5): call 0xfffff742(%rip)
2263(7): lea 0x3a0d(%rip),%rsi
226a(2): xor %edi,%edi
226c(5): mov $0x5,%edx
2271(5): call 0xfffff55f(%rip)
2276(5): mov $0x1,%edi
227b(3): mov %rax,%rsi
227e(2): xor %eax,%eax
2280(5): call 0xfffff720(%rip)
2285(3): test %rbx,%rbx
2288(6): jz 0x308(%rip)
228e(4): mov 0x18(%rbx),%rbp
2292(5): mov $0x2c,%esi
2297(3): mov %rbp,%rdi
229a(5): call 0xfffff596(%rip)
229f(3): test %rax,%rax
22a2(2): jz 0x9(%rip)
22a4(3): mov $0x0,(%rax)
22a7(4): mov 0x18(%rbx),%rbp
22ab(3): mov (%rbx),%rsi
22ae(3): mov %rbp,%rdi
22b1(5): call 0xfffffe1f(%rip)
22b6(7): lea 0x4043(%rip),%rsi
22bd(3): mov %rax,%rdx
22c0(3): mov %rax,%rbp
22c3(5): mov $0x1,%edi
22c8(2): xor %eax,%eax
22ca(5): call 0xfffff6d6(%rip)
22cf(3): mov %rbp,%rdi
22d2(5): call 0xfffff41e(%rip)
22d7(7): mov 0x205dca(%rip),%rdi
22de(4): mov 0x28(%rdi),%rax
22e2(4): cmp 0x30(%rdi),%rax
22e6(6): jnb 0x2da(%rip)
22ec(4): lea 0x1(%rax),%rdx
22f0(4): mov %rdx,0x28(%rdi)
22f4(3): mov $0xa,(%rax)
22f7(7): cmp $0x0,0x205d14(%rip)
22fe(2): jnz 0x62(%rip)
2300(7): cmp $0x0,0x205d0d(%rip)
2307(6): jnz 0xf8(%rip)
230d(7): cmp $0x0,0x205cff(%rip)
2314(6): jnz 0x1b2(%rip)
231a(7): mov 0x205d87(%rip),%rdi
2321(4): mov 0x28(%rdi),%rax
2325(4): cmp 0x30(%rdi),%rax
2329(6): jnb 0x2a7(%rip)
232f(4): lea 0x1(%rax),%rdx
2333(4): mov %rdx,0x28(%rdi)
2337(3): mov $0xa,(%rax)
233a(8): mov 0x408(%rsp),%rax
2342(9): xor $0x28,%rax
234b(6): jnz 0x2a4(%rip)
2351(7): add $0x418,%rsp
2358(1): pop %rbx
2359(1): pop %rbp
235a(2): pop %r12
235c(2): pop %r13
235e(1): ret near (%rsp)
235f(1): nop 
2360(7): lea 0x3924(%rip),%rsi
2367(5): mov $0x5,%edx
236c(2): xor %edi,%edi
236e(5): call 0xfffff462(%rip)
2373(5): mov $0x1,%edi
2378(3): mov %rax,%rsi
237b(2): xor %eax,%eax
237d(5): call 0xfffff623(%rip)
2382(4): mov 0x20(%rbx),%rdx
2386(7): lea 0x390a(%rip),%rsi
238d(5): mov $0x1,%edi
2392(2): xor %eax,%eax
2394(5): call 0xfffff60c(%rip)
2399(7): lea 0x38fd(%rip),%rsi
23a0(5): mov $0x5,%edx
23a5(2): xor %edi,%edi
23a7(5): call 0xfffff429(%rip)
23ac(5): mov $0x1,%edi
23b1(3): mov %rax,%rsi
23b4(2): xor %eax,%eax
23b6(5): call 0xfffff5ea(%rip)
23bb(4): mov 0x28(%rbx),%rdx
23bf(7): lea 0x3f3a(%rip),%rsi
23c6(5): mov $0x1,%edi
23cb(2): xor %eax,%eax
23cd(5): call 0xfffff5d3(%rip)
23d2(7): mov 0x205ccf(%rip),%rdi
23d9(4): mov 0x28(%rdi),%rax
23dd(4): cmp 0x30(%rdi),%rax
23e1(6): jnb 0x1ff(%rip)
23e7(7): cmp $0x0,0x205c26(%rip)
23ee(4): lea 0x1(%rax),%rdx
23f2(4): mov %rdx,0x28(%rdi)
23f6(3): mov $0xa,(%rax)
23f9(6): jz 0xffffff14(%rip)
23ff(4): mov 0x20(%rbx),%rdi
2403(5): call 0xfffff3ed(%rip)
2408(4): lea 0xa(%rax),%rdi
240c(5): call 0x30b4(%rip)
2411(4): mov 0x20(%rbx),%rsi
2415(3): mov %rax,%rdi
2418(3): mov %rax,%r13
241b(5): call 0xfffff3a5(%rip)
2420(a): mov $0x7162247809296510511,%rcx
242a(7): lea 0x3eca(%rip),%rsi
2431(3): mov %r13,%rdi
2434(3): mov %rcx,(%rax)
2437(5): mov $0x74,%ecx
243c(4): mov %cx,0x8(%rax)
2440(5): call 0xfffff5b0(%rip)
2445(3): test %rax,%rax
2448(3): mov %rax,%r12
244b(2): jz 0x66(%rip)
244d(7): lea 0x3851(%rip),%rsi
2454(5): mov $0x5,%edx
2459(2): xor %edi,%edi
245b(3): mov %rsp,%rbp
245e(5): call 0xfffff372(%rip)
2463(5): mov $0x1,%edi
2468(3): mov %rax,%rsi
246b(2): xor %eax,%eax
246d(5): call 0xfffff533(%rip)
2472(2): jmp 0x1d(%rip)
2474(4): nop 0x0(%rax)
2478(7): mov 0x205c29(%rip),%rcx
247f(3): mov %rax,%rdx
2482(5): mov $0x1,%esi
2487(3): mov %rbp,%rdi
248a(5): call 0xfffff4e6(%rip)
248f(3): mov %r12,%rcx
2492(5): mov $0x400,%edx
2497(5): mov $0x1,%esi
249c(3): mov %rbp,%rdi
249f(5): call 0xfffff2d1(%rip)
24a4(3): test %rax,%rax
24a7(2): jnz 0xffffffd1(%rip)
24a9(3): mov %r12,%rdi
24ac(5): call 0x32a4(%rip)
24b1(3): mov %r13,%rdi
24b4(5): call 0xfffff23c(%rip)
24b9(7): cmp $0x0,0x205b53(%rip)
24c0(6): jz 0xfffffe5a(%rip)
24c6(4): mov 0x20(%rbx),%rdi
24ca(5): call 0xfffff326(%rip)
24cf(4): lea 0x7(%rax),%rdi
24d3(5): call 0x2fed(%rip)
24d8(4): mov 0x20(%rbx),%rsi
24dc(3): mov %rax,%rdi
24df(3): mov %rax,%r12
24e2(5): call 0xfffff2de(%rip)
24e7(5): mov $0x6e61,%edx
24ec(7): lea 0x3e08(%rip),%rsi
24f3(6): mov $0x6c702e2f,(%rax)
24f9(4): mov %dx,0x4(%rax)
24fd(4): mov $0x0,0x6(%rax)
2501(3): mov %r12,%rdi
2504(5): call 0xfffff4ec(%rip)
2509(3): test %rax,%rax
250c(3): mov %rax,%rbx
250f(2): jz 0x6a(%rip)
2511(7): lea 0x3797(%rip),%rsi
2518(5): mov $0x5,%edx
251d(2): xor %edi,%edi
251f(3): mov %rsp,%rbp
2522(5): call 0xfffff2ae(%rip)
2527(5): mov $0x1,%edi
252c(3): mov %rax,%rsi
252f(2): xor %eax,%eax
2531(5): call 0xfffff46f(%rip)
2536(2): jmp 0x21(%rip)
2538(8): nop 0x0(%rax,%rax,1)
2540(7): mov 0x205b61(%rip),%rcx
2547(3): mov %rax,%rdx
254a(5): mov $0x1,%esi
254f(3): mov %rbp,%rdi
2552(5): call 0xfffff41e(%rip)
2557(3): mov %rbx,%rcx
255a(5): mov $0x400,%edx
255f(5): mov $0x1,%esi
2564(3): mov %rbp,%rdi
2567(5): call 0xfffff209(%rip)
256c(3): test %rax,%rax
256f(2): jnz 0xffffffd1(%rip)
2571(3): mov %rbx,%rdi
2574(5): call 0x31dc(%rip)
2579(3): mov %r12,%rdi
257c(5): call 0xfffff174(%rip)
2581(5): jmp 0xfffffd99(%rip)
2586(a): nop 0x0(%rax,%rax,1)
2590(7): lea 0x36ef(%rip),%rsi
2597(2): xor %edi,%edi
2599(5): mov $0x5,%edx
259e(5): call 0xfffff232(%rip)
25a3(7): lea 0x3d56(%rip),%rsi
25aa(3): mov %rax,%rdx
25ad(5): mov $0x1,%edi
25b2(2): xor %eax,%eax
25b4(5): call 0xfffff3ec(%rip)
25b9(5): jmp 0xfffffd81(%rip)
25be(2): nop 
25c0(5): mov $0xa,%esi
25c5(5): call 0xfffff28b(%rip)
25ca(5): jmp 0xfffffd2d(%rip)
25cf(1): nop 
25d0(5): mov $0xa,%esi
25d5(5): call 0xfffff27b(%rip)
25da(5): jmp 0xfffffd60(%rip)
25df(1): nop 
25e0(5): mov $0xa,%esi
25e5(5): call 0xfffff26b(%rip)
25ea(5): jmp 0xfffffd16(%rip)
25ef(5): call 0xfffff211(%rip)

"print_entry" :
2600(2): push %r15
2602(2): push %r14
2604(2): push %r13
2606(2): push %r12
2608(1): push %rbp
2609(1): push %rbx
260a(3): mov %rdi,%rbp
260d(7): sub $0x1f8,%rsp
2614(4): movzx 0x8(%rdi),%ecx
2618(9): mov $0x28,%rax
2621(8): mov %rax,0x1e8(%rsp)
2629(2): xor %eax,%eax
262b(3): cmp $0x2f,%cl
262e(6): jnz 0x372(%rip)
2634(4): lea 0x8(%rdi),%rax
2638(8): lea 0xb0(%rsp),%rsi
2640(4): lea 0x28(%rdi),%rdi
2644(3): mov %rax,%r12
2647(3): mov %rsi,%rdx
264a(2): jmp 0xd(%rip)
264c(4): nop 0x0(%rax)
2650(3): movzx (%rax),%ecx
2653(2): test %cl,%cl
2655(2): jz 0x12(%rip)
2657(4): add $0x1,%rax
265b(4): add $0x1,%rdx
265f(3): mov %cl,0xffffffff(%rdx)
2662(3): cmp %rdi,%rax
2665(2): jb 0xffffffeb(%rip)
2667(3): mov $0x0,(%rdx)
266a(5): lea 0x20(%rsp),%rdx
266f(5): mov $0x1,%edi
2674(5): call 0xfffff2ac(%rip)
2679(2): test %eax,%eax
267b(6): jnz 0x1f5(%rip)
2681(4): mov 0x38(%rsp),%eax
2685(5): mov 0x68(%rsp),%r14
268a(3): and $0x10,%eax
268d(3): cmp $0x1,%eax
2690(3): sbb %r13d,%r13d
2693(4): and $0xa,%r13d
2697(4): add $0x20,%r13d
269b(4): lea 0x2c(%rbp),%rbx
269f(7): lea 0x3635(%rip),%rsi
26a6(2): xor %eax,%eax
26a8(5): mov $0x20,%edx
26ad(5): mov $0x1,%edi
26b2(3): mov %rbx,%rcx
26b5(5): call 0xfffff2eb(%rip)
26ba(7): cmp $0x0,0x205954(%rip)
26c1(2): jz 0x7f(%rip)
26c3(4): movzx 0x2c(%rbp),%edx
26c7(8): lea 0xe0(%rsp),%r15
26cf(4): lea 0x4c(%rbp),%rcx
26d3(3): mov %r15,%rax
26d6(2): test %dl,%dl
26d8(6): jnz 0x183(%rip)
26de(2): nop 
26e0(3): mov $0x0,(%rax)
26e3(3): mov %r15,%rdi
26e6(5): call 0xfffff1da(%rip)
26eb(3): test %rax,%rax
26ee(3): mov %rax,%rbx
26f1(6): jz 0x30f(%rip)
26f7(4): mov 0x18(%rax),%r15
26fb(5): mov $0x2c,%esi
2700(3): mov %r15,%rdi
2703(5): call 0xfffff12d(%rip)
2708(3): test %rax,%rax
270b(2): jz 0x9(%rip)
270d(3): mov $0x0,(%rax)
2710(4): mov 0x18(%rbx),%r15
2714(3): mov (%rbx),%rsi
2717(3): mov %r15,%rdi
271a(5): call 0xfffff9b6(%rip)
271f(7): lea 0x35a8(%rip),%rsi
2726(3): mov %rax,%rbx
2729(3): mov %rax,%rdx
272c(5): mov $0x1,%edi
2731(2): xor %eax,%eax
2733(5): call 0xfffff26d(%rip)
2738(3): mov %rbx,%rdi
273b(5): call 0xffffefb5(%rip)
2740(7): lea 0x3591(%rip),%rsi
2747(2): xor %eax,%eax
2749(3): mov %r12,%r8
274c(5): mov $0x20,%ecx
2751(3): mov %r13d,%edx
2754(5): mov $0x1,%edi
2759(5): call 0xfffff247(%rip)
275e(7): cmp $0x0,0x2058b2(%rip)
2765(2): jz 0x34(%rip)
2767(3): test %r14,%r14
276a(6): jnz 0x1b6(%rip)
2770(7): lea 0x3580(%rip),%rsi
2777(5): mov $0x5,%edx
277c(2): xor %edi,%edi
277e(5): call 0xfffff052(%rip)
2783(3): mov %rax,%rdx
2786(7): lea 0x3564(%rip),%rsi
278d(5): mov $0x1,%edi
2792(2): xor %eax,%eax
2794(5): call 0xfffff20c(%rip)
2799(7): movsxd 0x154(%rbp),%rax
27a0(5): lea 0x18(%rsp),%rdi
27a5(5): mov %rax,0x18(%rsp)
27aa(5): call 0xffffef56(%rip)
27af(3): test %rax,%rax
27b2(6): jz 0x22e(%rip)
27b8(7): mov 0x205979(%rip),%rdx
27bf(7): lea 0x20591a(%rip),%rdi
27c6(3): mov %rax,%rcx
27c9(5): mov $0x21,%esi
27ce(5): call 0xfffff1e2(%rip)
27d3(7): lea 0x205906(%rip),%rdx
27da(7): lea 0x3b1f(%rip),%rsi
27e1(2): xor %eax,%eax
27e3(5): mov $0x1,%edi
27e8(5): call 0xfffff1b8(%rip)
27ed(7): cmp $0x0,0x20581c(%rip)
27f4(2): jz 0xe(%rip)
27f6(4): movzx 0x4c(%rbp),%edx
27fa(2): test %dl,%dl
27fc(6): jnz 0x84(%rip)
2802(7): mov 0x20589f(%rip),%rdi
2809(4): mov 0x28(%rdi),%rax
280d(4): cmp 0x30(%rdi),%rax
2811(6): jnb 0x26f(%rip)
2817(4): lea 0x1(%rax),%rdx
281b(4): mov %rdx,0x28(%rdi)
281f(3): mov $0xa,(%rax)
2822(8): mov 0x1e8(%rsp),%rax
282a(9): xor $0x28,%rax
2833(6): jnz 0x306(%rip)
2839(7): add $0x1f8,%rsp
2840(1): pop %rbx
2841(1): pop %rbp
2842(2): pop %r12
2844(2): pop %r13
2846(2): pop %r14
2848(2): pop %r15
284a(1): ret near (%rsp)
284b(5): nop 0x0(%rax,%rax,1)
2850(3): movzx (%rbx),%edx
2853(2): test %dl,%dl
2855(6): jz 0xfffffe8b(%rip)
285b(4): add $0x1,%rbx
285f(4): add $0x1,%rax
2863(3): mov %dl,0xffffffff(%rax)
2866(3): cmp %rbx,%rcx
2869(2): jnbe 0xffffffe7(%rip)
286b(5): jmp 0xfffffe75(%rip)
2870(6): mov $0x3f,%r13d
2876(3): xor %r14d,%r14d
2879(5): jmp 0xfffffe22(%rip)
287e(2): nop 
2880(8): lea 0xe0(%rsp),%r15
2888(4): lea 0x4c(%rbp),%rax
288c(7): add $0x14c,%rbp
2893(3): mov %r15,%rcx
2896(2): jmp 0x11(%rip)
2898(8): nop 0x0(%rax,%rax,1)
28a0(3): movzx (%rax),%edx
28a3(2): test %dl,%dl
28a5(2): jz 0x12(%rip)
28a7(4): add $0x1,%rax
28ab(4): add $0x1,%rcx
28af(3): mov %dl,0xffffffff(%rcx)
28b2(3): cmp %rax,%rbp
28b5(2): jnbe 0xffffffeb(%rip)
28b7(3): mov $0x0,(%rcx)
28ba(5): mov $0x3a,%esi
28bf(3): mov %r15,%rdi
28c2(5): call 0xffffef6e(%rip)
28c7(3): test %rax,%rax
28ca(6): jz 0x186(%rip)
28d0(3): mov $0x0,(%rax)
28d3(8): cmp $0x0,0xe0(%rsp)
28db(4): lea 0x1(%rax),%rcx
28df(6): jnz 0x21e(%rip)
28e5(3): mov %r15,%rbx
28e8(3): test %rcx,%rcx
28eb(6): jz 0x176(%rip)
28f1(7): lea 0x3405(%rip),%rsi
28f8(3): mov %rbx,%rdx
28fb(5): mov $0x1,%edi
2900(2): xor %eax,%eax
2902(5): call 0xfffff09e(%rip)
2907(3): cmp %r15,%rbx
290a(6): jz 0xfffffef8(%rip)
2910(3): mov %rbx,%rdi
2913(5): call 0xffffeddd(%rip)
2918(5): jmp 0xfffffeea(%rip)
291d(3): nop (%rax)
2920(7): mov 0x205801(%rip),%rcx
2927(3): test %rcx,%rcx
292a(6): jz 0x106(%rip)
2930(3): sub %r14,%rcx
2933(7): lea 0x337c(%rip),%rdx
293a(4): cmp $0x3b,%rcx
293e(6): jle 0xfffffe48(%rip)
2944(7): cmp $0x1517f,%rcx
294b(6): jle 0x145(%rip)
2951(3): mov %rcx,%rax
2954(a): mov $0x1749024623285053783,%rdx
295e(4): sar $0x3f,%rcx
2962(3): imul %rax,%rdx,%rdx
2965(7): lea 0x2057a4(%rip),%rdi
296c(5): mov $0x1,%esi
2971(2): xor %eax,%eax
2973(4): sar $0xd,%rdx
2977(3): sub %rcx,%rdx
297a(7): lea 0x336b(%rip),%rcx
2981(3): mov %rdx,%r8
2984(5): mov $0x16,%edx
2989(5): call 0xfffff117(%rip)
298e(7): lea 0x20577b(%rip),%rdx
2995(5): jmp 0xfffffdf1(%rip)
299a(6): nop 0x0(%rax,%rax,1)
29a0(5): mov $0x2f,%eax
29a5(8): lea 0xb0(%rsp),%rsi
29ad(2): test %cl,%cl
29af(8): mov %ax,0xb4(%rsp)
29b7(4): lea 0x8(%rdi),%rax
29bb(b): mov $0x7665642f,0xb0(%rsp)
29c6(4): lea 0x28(%rdi),%rdi
29ca(4): lea 0x5(%rsi),%rdx
29ce(3): mov %rax,%r12
29d1(6): jnz 0xfffffc86(%rip)
29d7(5): jmp 0xfffffc90(%rip)
29dc(4): nop 0x0(%rax)
29e0(5): mov 0x18(%rsp),%rdi
29e5(7): lea 0x2056f4(%rip),%rsi
29ec(5): call 0x6e4(%rip)
29f1(3): mov %rax,%rdx
29f4(5): jmp 0xfffffde6(%rip)
29f9(7): nop 0x0(%rax)
2a00(7): lea 0x32b5(%rip),%rsi
2a07(2): xor %edi,%edi
2a09(5): mov $0x5,%edx
2a0e(5): call 0xffffedc2(%rip)
2a13(7): lea 0x32ae(%rip),%rsi
2a1a(3): mov %rax,%rdx
2a1d(5): mov $0x1,%edi
2a22(2): xor %eax,%eax
2a24(5): call 0xffffef7c(%rip)
2a29(5): jmp 0xfffffd17(%rip)
2a2e(2): nop 
2a30(7): lea 0x2056f1(%rip),%rdi
2a37(5): call 0xffffeec9(%rip)
2a3c(7): mov 0x2056e5(%rip),%rcx
2a43(5): jmp 0xfffffeed(%rip)
2a48(8): nop 0x0(%rax,%rax,1)
2a50(8): cmp $0x0,0xe0(%rsp)
2a58(6): jnz 0xc8(%rip)
2a5e(3): mov %r15,%rbx
2a61(7): lea 0x3898(%rip),%rsi
2a68(3): mov %rbx,%rdx
2a6b(5): mov $0x1,%edi
2a70(2): xor %eax,%eax
2a72(5): call 0xffffef2e(%rip)
2a77(5): jmp 0xfffffe90(%rip)
2a7c(4): nop 0x0(%rax)
2a80(5): mov $0xa,%esi
2a85(5): call 0xffffedcb(%rip)
2a8a(5): jmp 0xfffffd98(%rip)
2a8f(1): nop 
2a90(3): mov %rcx,%rax
2a93(a): mov $0x5247073869855161349,%rdx
2a9d(7): lea 0x20566c(%rip),%rdi
2aa4(3): imul %rax,%rdx,%rdx
2aa7(3): mov %rcx,%rax
2aaa(5): mov $0x1,%esi
2aaf(4): sar $0x3f,%rax
2ab3(4): sar $0xa,%rdx
2ab7(3): mov %rdx,%r8
2aba(a): mov $0x-8608480567731124087,%rdx
2ac4(3): sub %rax,%r8
2ac7(7): imul %r8,$0xe10,%rax
2ace(3): sub %rax,%rcx
2ad1(3): mov %rcx,%rax
2ad4(7): lea 0x3207(%rip),%rcx
2adb(3): mul %rax,%rdx,%rdx
2ade(2): xor %eax,%eax
2ae0(4): shr $0x5,%rdx
2ae4(3): mov %edx,%r9d
2ae7(5): mov $0x16,%edx
2aec(5): call 0xffffefb4(%rip)
2af1(7): lea 0x205618(%rip),%rdx
2af8(5): jmp 0xfffffc8e(%rip)
2afd(3): mov %r15,%rdi
2b00(5): mov %rcx,0x8(%rsp)
2b05(5): call 0x47b(%rip)
2b0a(3): test %rax,%rax
2b0d(3): mov %rax,%rbx
2b10(5): mov 0x8(%rsp),%rcx
2b15(6): jnz 0xfffffdd3(%rip)
2b1b(5): jmp 0xfffffdca(%rip)
2b20(3): mov %r15,%rdi
2b23(5): call 0x45d(%rip)
2b28(3): test %rax,%rax
2b2b(3): mov %rax,%rbx
2b2e(6): jnz 0xffffff33(%rip)
2b34(5): jmp 0xffffff2a(%rip)
2b39(5): call 0xffffecc7(%rip)

"usage" :
2b40(2): push %r13
2b42(2): push %r12
2b44(5): mov $0x5,%edx
2b49(1): push %rbp
2b4a(1): push %rbx
2b4b(2): mov %edi,%ebp
2b4d(7): sub $0x88,%rsp
2b54(7): mov 0x20562d(%rip),%rbx
2b5b(9): mov $0x28,%rax
2b64(5): mov %rax,0x78(%rsp)
2b69(2): xor %eax,%eax
2b6b(2): test %edi,%edi
2b6d(2): jz 0x30(%rip)
2b6f(7): lea 0x32fa(%rip),%rsi
2b76(2): xor %edi,%edi
2b78(5): call 0xffffec58(%rip)
2b7d(7): mov 0x20553c(%rip),%rdi
2b84(3): mov %rax,%rdx
2b87(3): mov %rbx,%rcx
2b8a(5): mov $0x1,%esi
2b8f(2): xor %eax,%eax
2b91(5): call 0xffffee9f(%rip)
2b96(2): mov %ebp,%edi
2b98(5): call 0xffffee78(%rip)
2b9d(7): lea 0x32f4(%rip),%rsi
2ba4(2): xor %edi,%edi
2ba6(5): call 0xffffec2a(%rip)
2bab(3): mov %rbx,%rdx
2bae(3): mov %rax,%rsi
2bb1(5): mov $0x1,%edi
2bb6(2): xor %eax,%eax
2bb8(5): call 0xffffede8(%rip)
2bbd(7): mov 0x2054e4(%rip),%rbx
2bc4(7): lea 0x32f5(%rip),%rsi
2bcb(5): mov $0x5,%edx
2bd0(2): xor %edi,%edi
2bd2(5): call 0xffffebfe(%rip)
2bd7(3): mov %rbx,%rsi
2bda(3): mov %rax,%rdi
2bdd(5): call 0xffffecc3(%rip)
2be2(7): mov 0x2054bf(%rip),%rbx
2be9(7): lea 0x3418(%rip),%rsi
2bf0(5): mov $0x5,%edx
2bf5(2): xor %edi,%edi
2bf7(5): call 0xffffebd9(%rip)
2bfc(3): mov %rbx,%rsi
2bff(3): mov %rax,%rdi
2c02(5): call 0xffffec9e(%rip)
2c07(7): mov 0x20549a(%rip),%rbx
2c0e(7): lea 0x352b(%rip),%rsi
2c15(5): mov $0x5,%edx
2c1a(2): xor %edi,%edi
2c1c(5): call 0xffffebb4(%rip)
2c21(3): mov %rbx,%rsi
2c24(3): mov %rax,%rdi
2c27(5): call 0xffffec79(%rip)
2c2c(7): mov 0x205475(%rip),%rbx
2c33(7): lea 0x3536(%rip),%rsi
2c3a(5): mov $0x5,%edx
2c3f(2): xor %edi,%edi
2c41(5): call 0xffffeb8f(%rip)
2c46(3): mov %rbx,%rsi
2c49(3): mov %rax,%rdi
2c4c(7): lea 0x30b1(%rip),%rbx
2c53(5): call 0xffffec4d(%rip)
2c58(7): lea 0x3549(%rip),%rsi
2c5f(5): mov $0x5,%edx
2c64(2): xor %edi,%edi
2c66(5): call 0xffffeb6a(%rip)
2c6b(7): lea 0x3098(%rip),%rdx
2c72(3): mov %rax,%rsi
2c75(5): mov $0x1,%edi
2c7a(2): xor %eax,%eax
2c7c(5): call 0xffffed24(%rip)
2c81(7): lea 0x3090(%rip),%rax
2c88(7): lea 0x30ca(%rip),%rcx
2c8f(9): mov $0x0,0x60(%rsp)
2c98(9): mov $0x0,0x68(%rsp)
2ca1(3): mov %rsp,%rdx
2ca4(4): mov %rax,(%rsp)
2ca8(7): lea 0x306b(%rip),%rax
2caf(5): mov %rcx,0x30(%rsp)
2cb4(7): lea 0x30a8(%rip),%rcx
2cbb(5): mov %rax,0x8(%rsp)
2cc0(7): lea 0x30cb(%rip),%rax
2cc7(5): mov %rcx,0x40(%rsp)
2ccc(7): lea 0x309a(%rip),%rcx
2cd3(5): mov %rax,0x10(%rsp)
2cd8(7): lea 0x304b(%rip),%rax
2cdf(5): mov %rcx,0x50(%rsp)
2ce4(5): mov %rax,0x18(%rsp)
2ce9(7): lea 0x3050(%rip),%rax
2cf0(5): mov %rax,0x20(%rsp)
2cf5(7): lea 0x304e(%rip),%rax
2cfc(5): mov %rax,0x28(%rsp)
2d01(5): mov %rax,0x38(%rsp)
2d06(5): mov %rax,0x48(%rsp)
2d0b(5): mov %rax,0x58(%rsp)
2d10(4): add $0x10,%rdx
2d14(3): mov (%rdx),%rdi
2d17(3): test %rdi,%rdi
2d1a(2): jz 0x15(%rip)
2d1c(5): mov $0x6,%ecx
2d21(3): mov %rbx,%rsi
2d24(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d26(3): setnbe %al
2d29(2): sbb $0x0,%al
2d2b(2): test %al,%al
2d2d(2): jnz 0xffffffe3(%rip)
2d2f(4): mov 0x8(%rdx),%r12
2d33(2): xor %edi,%edi
2d35(5): mov $0x5,%edx
2d3a(7): lea 0x3036(%rip),%rsi
2d41(3): test %r12,%r12
2d44(6): jz 0xc7(%rip)
2d4a(5): call 0xffffea86(%rip)
2d4f(7): lea 0x34aa(%rip),%rcx
2d56(7): lea 0x3031(%rip),%rdx
2d5d(3): mov %rax,%rsi
2d60(5): mov $0x1,%edi
2d65(2): xor %eax,%eax
2d67(5): call 0xffffec39(%rip)
2d6c(2): xor %esi,%esi
2d6e(5): mov $0x5,%edi
2d73(5): call 0xffffec1d(%rip)
2d78(3): test %rax,%rax
2d7b(2): jz 0x1e(%rip)
2d7d(7): lea 0x3018(%rip),%rsi
2d84(5): mov $0x3,%edx
2d89(3): mov %rax,%rdi
2d8c(5): call 0xffffe9b4(%rip)
2d91(2): test %eax,%eax
2d93(6): jnz 0x10d(%rip)
2d99(7): lea 0x3000(%rip),%rsi
2da0(2): xor %edi,%edi
2da2(5): mov $0x5,%edx
2da7(5): call 0xffffea29(%rip)
2dac(7): lea 0x2f51(%rip),%rcx
2db3(7): lea 0x3446(%rip),%rdx
2dba(3): mov %rax,%rsi
2dbd(5): mov $0x1,%edi
2dc2(2): xor %eax,%eax
2dc4(5): call 0xffffebdc(%rip)
2dc9(3): cmp %rbx,%r12
2dcc(7): lea 0x2f61(%rip),%rcx
2dd3(7): lea 0x3aa7(%rip),%rbx
2dda(4): cmove %rcx,%rbx
2dde(7): lea 0x348b(%rip),%rsi
2de5(2): xor %edi,%edi
2de7(5): mov $0x5,%edx
2dec(5): call 0xffffe9e4(%rip)
2df1(3): mov %rbx,%rcx
2df4(3): mov %rax,%rsi
2df7(3): mov %r12,%rdx
2dfa(5): mov $0x1,%edi
2dff(2): xor %eax,%eax
2e01(5): call 0xffffeb9f(%rip)
2e06(5): jmp 0xfffffd90(%rip)
2e0b(5): call 0xffffe9c5(%rip)
2e10(7): lea 0x33e9(%rip),%rcx
2e17(7): lea 0x2f70(%rip),%rdx
2e1e(3): mov %rax,%rsi
2e21(5): mov $0x1,%edi
2e26(2): xor %eax,%eax
2e28(5): call 0xffffeb78(%rip)
2e2d(2): xor %esi,%esi
2e2f(5): mov $0x5,%edi
2e34(5): call 0xffffeb5c(%rip)
2e39(3): test %rax,%rax
2e3c(2): jz 0x1a(%rip)
2e3e(7): lea 0x2f57(%rip),%rsi
2e45(5): mov $0x3,%edx
2e4a(3): mov %rax,%rdi
2e4d(5): call 0xffffe8f3(%rip)
2e52(2): test %eax,%eax
2e54(2): jnz 0x45(%rip)
2e56(7): lea 0x2f43(%rip),%rsi
2e5d(5): mov $0x5,%edx
2e62(2): xor %edi,%edi
2e64(7): lea 0x2e99(%rip),%r12
2e6b(7): lea 0x2ec2(%rip),%rbx
2e72(5): call 0xffffe95e(%rip)
2e77(7): lea 0x2e86(%rip),%rcx
2e7e(7): lea 0x337b(%rip),%rdx
2e85(3): mov %rax,%rsi
2e88(5): mov $0x1,%edi
2e8d(2): xor %eax,%eax
2e8f(5): call 0xffffeb11(%rip)
2e94(5): jmp 0xffffff4a(%rip)
2e99(7): lea 0x2e64(%rip),%r12
2ea0(7): mov 0x205201(%rip),%r13
2ea7(7): lea 0x337a(%rip),%rsi
2eae(2): xor %edi,%edi
2eb0(5): mov $0x5,%edx
2eb5(5): call 0xffffe91b(%rip)
2eba(3): mov %r13,%rsi
2ebd(3): mov %rax,%rdi
2ec0(5): call 0xffffe9e0(%rip)
2ec5(5): jmp 0xfffffed4(%rip)

"canon_host_r" :
2ed0(2): push %r12
2ed2(1): push %rbp
2ed3(7): lea 0x205266(%rip),%rdx
2eda(1): push %rbx
2edb(3): mov %rsi,%rbx
2ede(2): xor %esi,%esi
2ee0(3): mov %rdi,%rbp
2ee3(4): sub $0x10,%rsp
2ee7(a): mov $0x2,0x20524f(%rip)
2ef1(3): mov %rsp,%rcx
2ef4(8): mov $0x0,(%rsp)
2efc(9): mov $0x28,%rax
2f05(5): mov %rax,0x8(%rsp)
2f0a(2): xor %eax,%eax
2f0c(5): call 0xffffeb34(%rip)
2f11(2): test %eax,%eax
2f13(2): jnz 0x55(%rip)
2f15(4): mov (%rsp),%r12
2f19(5): mov 0x20(%r12),%rdi
2f1e(3): test %rdi,%rdi
2f21(4): cmove %rbp,%rdi
2f25(5): call 0xffffeb2b(%rip)
2f2a(3): test %rax,%rax
2f2d(3): mov %rax,%rbp
2f30(2): jnz 0xd(%rip)
2f32(3): test %rbx,%rbx
2f35(2): jz 0x8(%rip)
2f37(6): mov $0xfffffff6,(%rbx)
2f3d(3): mov %r12,%rdi
2f40(5): call 0xffffeb50(%rip)
2f45(5): mov 0x8(%rsp),%rdx
2f4a(9): xor $0x28,%rdx
2f53(3): mov %rbp,%rax
2f56(2): jnz 0x1d(%rip)
2f58(4): add $0x10,%rsp
2f5c(1): pop %rbx
2f5d(1): pop %rbp
2f5e(2): pop %r12
2f60(1): ret near (%rsp)
2f61(7): nop 0x0(%rax)
2f68(2): xor %ebp,%ebp
2f6a(3): test %rbx,%rbx
2f6d(2): jz 0xffffffd8(%rip)
2f6f(2): mov %eax,(%rbx)
2f71(2): jmp 0xffffffd4(%rip)
2f73(5): call 0xffffe88d(%rip)

"canon_host" :
2f80(7): lea 0x2051e9(%rip),%rsi
2f87(5): jmp 0xffffff49(%rip)

"ch_strerror" :
2f90(6): mov 0x2051da(%rip),%edi
2f96(5): jmp 0xffffe8aa(%rip)

"close_stdout_set_file_name" :
2fa0(7): mov %rdi,0x2051d9(%rip)
2fa7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2fb0(7): mov %dil,0x2051c1(%rip)
2fb7(1): ret near (%rsp)

"close_stdout" :
2fc0(1): push %rbp
2fc1(1): push %rbx
2fc2(4): sub $0x8,%rsp
2fc6(7): mov 0x2050db(%rip),%rdi
2fcd(5): call 0x2b23(%rip)
2fd2(2): test %eax,%eax
2fd4(2): jz 0x18(%rip)
2fd6(5): call 0xffffe74a(%rip)
2fdb(7): cmp $0x0,0x205196(%rip)
2fe2(3): mov %rax,%rbx
2fe5(2): jz 0x1e(%rip)
2fe7(3): cmp $0x20,(%rax)
2fea(2): jnz 0x19(%rip)
2fec(7): mov 0x2050cd(%rip),%rdi
2ff3(5): call 0x2afd(%rip)
2ff8(2): test %eax,%eax
2ffa(2): jnz 0x48(%rip)
2ffc(4): add $0x8,%rsp
3000(1): pop %rbx
3001(1): pop %rbp
3002(1): ret near (%rsp)
3003(7): lea 0x32e7(%rip),%rsi
300a(2): xor %edi,%edi
300c(5): mov $0x5,%edx
3011(5): call 0xffffe7bf(%rip)
3016(7): mov 0x205163(%rip),%rdi
301d(3): mov %rax,%rbp
3020(3): test %rdi,%rdi
3023(2): jz 0x2a(%rip)
3025(5): call 0x1c5b(%rip)
302a(2): mov (%rbx),%esi
302c(7): lea 0x32ca(%rip),%rdx
3033(3): mov %rax,%rcx
3036(3): mov %rbp,%r8
3039(2): xor %edi,%edi
303b(2): xor %eax,%eax
303d(5): call 0xffffe993(%rip)
3042(6): mov 0x204fd8(%rip),%edi
3048(5): call 0xffffe708(%rip)
304d(2): mov (%rbx),%esi
304f(7): lea 0x32ab(%rip),%rdx
3056(3): mov %rax,%rcx
3059(2): xor %edi,%edi
305b(2): xor %eax,%eax
305d(5): call 0xffffe973(%rip)
3062(2): jmp 0xffffffe0(%rip)

"hard_locale" :
3070(4): sub $0x8,%rsp
3074(2): xor %esi,%esi
3076(5): call 0xffffe91a(%rip)
307b(3): mov %rax,%rdx
307e(5): mov $0x1,%eax
3083(3): test %rdx,%rdx
3086(2): jz 0x1f(%rip)
3088(7): lea 0x3275(%rip),%rdi
308f(5): mov $0x2,%ecx
3094(3): mov %rdx,%rsi
3097(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3099(3): setnbe %cl
309c(3): sbb $0x0,%cl
309f(2): xor %eax,%eax
30a1(2): test %cl,%cl
30a3(2): jnz 0xd(%rip)
30a5(4): add $0x8,%rsp
30a9(1): ret near (%rsp)
30aa(6): nop 0x0(%rax,%rax,1)
30b0(7): lea 0x324f(%rip),%rdi
30b7(5): mov $0x6,%ecx
30bc(3): mov %rdx,%rsi
30bf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
30c1(3): setnbe %al
30c4(2): sbb $0x0,%al
30c6(2): test %al,%al
30c8(3): setnz %al
30cb(4): add $0x8,%rsp
30cf(1): ret near (%rsp)

"imaxtostr" :
30d0(3): test %rdi,%rdi
30d3(4): lea 0x14(%rsi),%rcx
30d7(4): mov $0x0,0x14(%rsi)
30db(a): mov $0x7378697629483820647,%r9
30e5(a): mov $0x-3689348814741910323,%rsi
30ef(6): mov $0x30,%r8d
30f5(2): js 0x3e(%rip)
30f7(9): nop 0x0(%rax,%rax,1)
3100(3): mov %rdi,%rax
3103(4): sub $0x1,%rcx
3107(3): mul %rax,%rsi,%rdx
310a(4): shr $0x3,%rdx
310e(4): lea 0x0(%rdx,%rdx,4),%rax
3112(3): add %rax,%rax
3115(3): sub %rax,%rdi
3118(3): add $0x30,%edi
311b(3): test %rdx,%rdx
311e(3): mov %dil,(%rcx)
3121(3): mov %rdx,%rdi
3124(2): jnz 0xffffffdc(%rip)
3126(3): mov %rcx,%rax
3129(1): ret near (%rsp)
312a(6): nop 0x0(%rax,%rax,1)
3130(3): mov %rsi,%rcx
3133(3): mov %rdi,%rax
3136(4): lea 0xffffffff(%rcx),%rsi
313a(3): imul %rax,%r9,%rdx
313d(3): mov %rdi,%rax
3140(4): sar $0x3f,%rax
3144(4): sar $0x2,%rdx
3148(3): sub %rax,%rdx
314b(4): lea 0x0(%rdx,%rdx,4),%rax
314f(4): lea 0x0(%r8,%rax,2),%eax
3153(2): sub %edi,%eax
3155(3): test %rdx,%rdx
3158(3): mov %rdx,%rdi
315b(3): mov %al,0xffffffff(%rcx)
315e(2): jnz 0xffffffd2(%rip)
3160(4): sub $0x2,%rcx
3164(4): mov $0x2d,0xffffffff(%rsi)
3168(3): mov %rcx,%rax
316b(1): ret near (%rsp)

"set_program_name" :
3170(3): test %rdi,%rdi
3173(1): push %rbx
3174(2): jz 0x79(%rip)
3176(5): mov $0x2f,%esi
317b(3): mov %rdi,%rbx
317e(5): call 0xffffe6e2(%rip)
3183(3): test %rax,%rax
3186(2): jz 0x57(%rip)
3188(4): lea 0x1(%rax),%r8
318c(3): mov %r8,%rdx
318f(3): sub %rbx,%rdx
3192(4): cmp $0x6,%rdx
3196(2): jle 0x47(%rip)
3198(4): lea 0xfffffffa(%rax),%rsi
319c(7): lea 0x31a5(%rip),%rdi
31a3(5): mov $0x7,%ecx
31a8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
31aa(3): setnbe %dl
31ad(3): sbb $0x0,%dl
31b0(2): test %dl,%dl
31b2(2): jnz 0x2b(%rip)
31b4(7): lea 0x3195(%rip),%rdi
31bb(5): mov $0x3,%ecx
31c0(3): mov %r8,%rsi
31c3(3): mov %r8,%rbx
31c6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
31c8(3): setnbe %dl
31cb(3): sbb $0x0,%dl
31ce(2): test %dl,%dl
31d0(2): jnz 0xd(%rip)
31d2(4): lea 0x4(%rax),%rbx
31d6(7): mov %rbx,0x204ec3(%rip)
31dd(7): mov %rbx,0x204fa4(%rip)
31e4(7): mov %rbx,0x204ecd(%rip)
31eb(1): pop %rbx
31ec(1): ret near (%rsp)
31ed(7): mov 0x204ecc(%rip),%rcx
31f4(7): lea 0x3115(%rip),%rdi
31fb(5): mov $0x37,%edx
3200(5): mov $0x1,%esi
3205(5): call 0xffffe81b(%rip)
320a(5): call 0xffffe506(%rip)

"gettext_quote.part.1" :
3210(1): push %rbp
3211(1): push %rbx
3212(3): mov %rdi,%rbp
3215(2): mov %esi,%ebx
3217(4): sub $0x8,%rsp
321b(5): call 0x2955(%rip)
3220(3): movzx (%rax),%edx
3223(3): and $0xdf,%edx
3226(3): cmp $0x55,%dl
3229(2): jz 0x77(%rip)
322b(3): cmp $0x47,%dl
322e(2): jz 0x22(%rip)
3230(7): lea 0x312c(%rip),%rax
3237(7): lea 0x3127(%rip),%rdx
323e(3): cmp $0x9,%ebx
3241(4): cmovne %rdx,%rax
3245(4): add $0x8,%rsp
3249(1): pop %rbx
324a(1): pop %rbp
324b(1): ret near (%rsp)
324c(4): nop 0x0(%rax)
3250(4): movzx 0x1(%rax),%edx
3254(3): and $0xdf,%edx
3257(3): cmp $0x42,%dl
325a(2): jnz 0xffffffd6(%rip)
325c(4): cmp $0x31,0x2(%rax)
3260(2): jnz 0xffffffd0(%rip)
3262(4): cmp $0x38,0x3(%rax)
3266(2): jnz 0xffffffca(%rip)
3268(4): cmp $0x30,0x4(%rax)
326c(2): jnz 0xffffffc4(%rip)
326e(4): cmp $0x33,0x5(%rax)
3272(2): jnz 0xffffffbe(%rip)
3274(4): cmp $0x30,0x6(%rax)
3278(2): jnz 0xffffffb8(%rip)
327a(4): cmp $0x0,0x7(%rax)
327e(2): jnz 0xffffffb2(%rip)
3280(4): cmp $0x60,0x0(%rbp)
3284(7): lea 0x30d1(%rip),%rax
328b(7): lea 0x30ce(%rip),%rdx
3292(4): cmovne %rdx,%rax
3296(4): add $0x8,%rsp
329a(1): pop %rbx
329b(1): pop %rbp
329c(1): ret near (%rsp)
329d(3): nop (%rax)
32a0(4): movzx 0x1(%rax),%edx
32a4(3): and $0xdf,%edx
32a7(3): cmp $0x54,%dl
32aa(2): jnz 0xffffff86(%rip)
32ac(4): movzx 0x2(%rax),%edx
32b0(3): and $0xdf,%edx
32b3(3): cmp $0x46,%dl
32b6(6): jnz 0xffffff7a(%rip)
32bc(4): cmp $0x2d,0x3(%rax)
32c0(6): jnz 0xffffff70(%rip)
32c6(4): cmp $0x38,0x4(%rax)
32ca(6): jnz 0xffffff66(%rip)
32d0(4): cmp $0x0,0x5(%rax)
32d4(6): jnz 0xffffff5c(%rip)
32da(4): cmp $0x60,0x0(%rbp)
32de(7): lea 0x306f(%rip),%rax
32e5(7): lea 0x306c(%rip),%rdx
32ec(4): cmovne %rdx,%rax
32f0(4): add $0x8,%rsp
32f4(1): pop %rbx
32f5(1): pop %rbp
32f6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3300(2): push %r15
3302(2): push %r14
3304(3): mov %r8d,%r15d
3307(2): push %r13
3309(2): push %r12
330b(3): mov %rdi,%r14
330e(1): push %rbp
330f(1): push %rbx
3310(3): mov %r9d,%ebx
3313(3): mov %rsi,%r13
3316(3): mov %rcx,%rbp
3319(3): and $0x2,%ebx
331c(7): sub $0xb8,%rsp
3323(8): mov 0xf0(%rsp),%rax
332b(5): mov %rdx,0x10(%rsp)
3330(5): mov %r8d,0x8(%rsp)
3335(5): mov %r9d,0x78(%rsp)
333a(5): mov %rax,0x20(%rsp)
333f(8): mov 0xf8(%rsp),%rax
3347(5): mov %rax,0x68(%rsp)
334c(8): mov 0x100(%rsp),%rax
3354(5): mov %rax,0x60(%rsp)
3359(9): mov $0x28,%rax
3362(8): mov %rax,0xa8(%rsp)
336a(2): xor %eax,%eax
336c(5): call 0xffffe474(%rip)
3371(4): cmp $0xa,%r15d
3375(5): mov %rax,0x58(%rsp)
337a(6): jnbe 0x11b5(%rip)
3380(7): lea 0x3039(%rip),%rcx
3387(3): mov %r15d,%edx
338a(4): movsxd 0x0(%rcx,%rdx,4),%rax
338e(3): add %rcx,%rax
3391(2): jmp %rax
3393(5): mov $0x1,0xe(%rsp)
3398(5): mov $0x0,0x7c(%rsp)
339d(3): xor %r12d,%r12d
33a0(9): mov $0x0,0x50(%rsp)
33a9(5): mov $0x1,0xf(%rsp)
33ae(5): mov $0x0,0xd(%rsp)
33b3(7): lea 0x2fab(%rip),%rax
33ba(9): mov $0x1,0x18(%rsp)
33c3(3): xor %r15d,%r15d
33c6(8): mov $0x2,0x8(%rsp)
33ce(5): mov %rax,0x48(%rsp)
33d3(3): xor %r11d,%r11d
33d6(3): mov %rbp,%rax
33d9(3): mov %r12d,%r8d
33dc(3): mov %r11,%rbp
33df(3): mov %rax,%r11
33e2(6): nop 0x0(%rax,%rax,1)
33e8(3): cmp %rbp,%r11
33eb(4): setnz %r12b
33ef(4): cmp $0xffffffff,%r11
33f3(2): jnz 0xf(%rip)
33f5(5): mov 0x10(%rsp),%rax
33fa(4): cmp $0x0,0x0(%rax,%rbp,1)
33fe(4): setnz %r12b
3402(3): test %r12b,%r12b
3405(6): jz 0x65b(%rip)
340b(5): cmp $0x2,0x8(%rsp)
3410(5): mov 0x10(%rsp),%rdi
3415(4): lea 0x0(%rdi,%rbp,1),%r9
3419(3): setnz %al
341c(4): and 0xd(%rsp),%al
3420(3): mov %eax,%r10d
3423(6): jz 0xad(%rip)
3429(5): mov 0x18(%rsp),%rax
342e(3): test %rax,%rax
3431(6): jz 0x42f(%rip)
3437(4): cmp $0xffffffff,%r11
343b(5): lea 0x0(%rbp,%rax,1),%rbx
3440(2): jnz 0x30(%rip)
3442(4): cmp $0x1,%rax
3446(2): jbe 0x2a(%rip)
3448(5): mov %r8b,0x38(%rsp)
344d(5): mov %r10b,0x30(%rsp)
3452(5): mov %r9,0x28(%rsp)
3457(5): call 0xffffe399(%rip)
345c(6): movzx 0x38(%rsp),%r8d
3462(6): movzx 0x30(%rsp),%r10d
3468(3): mov %rax,%r11
346b(5): mov 0x28(%rsp),%r9
3470(3): cmp %r11,%rbx
3473(5): mov %r10b,0x28(%rsp)
3478(6): jnbe 0x5b8(%rip)
347e(5): mov 0x18(%rsp),%rdx
3483(5): mov 0x48(%rsp),%rsi
3488(3): mov %r9,%rdi
348b(5): mov %r11,0x40(%rsp)
3490(5): mov %r8b,0x38(%rsp)
3495(5): mov %r9,0x30(%rsp)
349a(5): call 0xffffe3f6(%rip)
349f(2): test %eax,%eax
34a1(5): mov 0x30(%rsp),%r9
34a6(6): movzx 0x38(%rsp),%r8d
34ac(5): mov 0x40(%rsp),%r11
34b1(6): jnz 0x57f(%rip)
34b7(5): cmp $0x0,0xf(%rsp)
34bc(6): movzx 0x28(%rsp),%r10d
34c2(6): jnz 0xf83(%rip)
34c8(8): nop 0x0(%rax,%rax,1)
34d0(4): movzx (%r9),%ebx
34d4(3): cmp $0x7e,%bl
34d7(6): jnbe 0x321(%rip)
34dd(7): lea 0x2f08(%rip),%rcx
34e4(3): movzx %bl,%edx
34e7(4): movsxd 0x0(%rcx,%rdx,4),%rax
34eb(3): add %rcx,%rax
34ee(2): jmp %rax
34f0(3): xor %r10d,%r10d
34f3(4): cmp $0x1,%r11
34f7(3): setnz %al
34fa(4): cmp $0xffffffff,%r11
34fe(2): jnz 0xe(%rip)
3500(5): mov 0x10(%rsp),%rax
3505(4): cmp $0x0,0x1(%rax)
3509(3): setnz %al
350c(5): cmp $0x2,0x8(%rsp)
3511(3): setz %dl
3514(2): test %al,%al
3516(6): jz 0x252(%rip)
351c(3): xor %r12d,%r12d
351f(2): xor %eax,%eax
3521(7): nop 0x0(%rax)
3528(5): cmp $0x1,0xd(%rsp)
352d(6): jnz 0x115(%rip)
3533(2): test %dl,%dl
3535(6): jnz 0x10d(%rip)
353b(5): mov 0x20(%rsp),%rsi
3540(3): test %rsi,%rsi
3543(2): jz 0x16(%rip)
3545(2): mov %ebx,%edx
3547(3): shr $0x5,%dl
354a(3): movzx %dl,%edx
354d(3): mov 0x0(%rsi,%rdx,4),%edx
3550(3): bt %ebx,%edx
3553(6): jb 0x150(%rip)
3559(3): test %r10b,%r10b
355c(6): jnz 0x147(%rip)
3562(3): xor $0x1,%eax
3565(4): add $0x1,%rbp
3569(3): and %r8d,%eax
356c(2): test %al,%al
356e(2): jz 0x22(%rip)
3570(3): cmp %r15,%r13
3573(2): jbe 0x7(%rip)
3575(5): mov $0x27,0x0(%r14,%r15,1)
357a(4): lea 0x1(%r15),%rax
357e(3): cmp %rax,%r13
3581(2): jbe 0x8(%rip)
3583(6): mov $0x27,0x1(%r14,%r15,1)
3589(4): add $0x2,%r15
358d(3): xor %r8d,%r8d
3590(3): cmp %r13,%r15
3593(2): jnb 0x6(%rip)
3595(4): mov %bl,0x0(%r14,%r15,1)
3599(5): movzx 0xe(%rsp),%edi
359e(4): add $0x1,%r15
35a2(5): mov $0x0,%eax
35a7(3): test %r12b,%r12b
35aa(3): cmove %eax,%edi
35ad(5): mov %dil,0xe(%rsp)
35b2(5): jmp 0xfffffe36(%rip)
35b7(9): nop 0x0(%rax,%rax,1)
35c0(3): xor %r10d,%r10d
35c3(4): mov 0x8(%rsp),%eax
35c7(3): cmp $0x2,%eax
35ca(6): jz 0x5be(%rip)
35d0(3): cmp $0x5,%eax
35d3(6): jz 0x575(%rip)
35d9(3): cmp $0x2,%eax
35dc(5): mov $0x3f,%ebx
35e1(3): setz %dl
35e4(3): xor %r12d,%r12d
35e7(2): xor %eax,%eax
35e9(5): jmp 0xffffff3f(%rip)
35ee(2): nop 
35f0(3): xor %r10d,%r10d
35f3(5): cmp $0x2,0x8(%rsp)
35f8(6): jz 0x508(%rip)
35fe(5): mov %r12b,0x7c(%rsp)
3603(2): xor %edx,%edx
3605(2): xor %eax,%eax
3607(5): mov $0x27,%ebx
360c(5): jmp 0xffffff1c(%rip)
3611(7): nop 0x0(%rax)
3618(5): mov $0x9,%edx
361d(5): mov $0x74,%ebx
3622(5): cmp $0x2,0x8(%rsp)
3627(3): setz %al
362a(4): and 0xf(%rsp),%al
362e(6): jnz 0x150(%rip)
3634(5): cmp $0x0,0xd(%rsp)
3639(2): jnz 0x67(%rip)
363b(2): mov %edx,%ebx
363d(3): xor %r12d,%r12d
3640(2): xor %eax,%eax
3642(5): cmp $0x0,0xf(%rsp)
3647(6): jnz 0xfffffef4(%rip)
364d(5): jmp 0xffffff0c(%rip)
3652(6): nop 0x0(%rax,%rax,1)
3658(5): mov $0x8,%edx
365d(5): mov $0x62,%ebx
3662(2): jmp 0xffffffd2(%rip)
3664(4): nop 0x0(%rax)
3668(5): cmp $0x2,0x8(%rsp)
366d(6): jz 0x3d3(%rip)
3673(5): cmp $0x0,0xd(%rsp)
3678(6): jz 0x218(%rip)
367e(5): cmp $0x0,0xf(%rsp)
3683(6): jz 0x20d(%rip)
3689(6): cmp $0x0,0x18(%rsp)
368f(6): jnz 0x3bc(%rip)
3695(5): mov $0x5c,%ebx
369a(6): nop 0x0(%rax,%rax,1)
36a0(3): xor %r12d,%r12d
36a3(5): cmp $0x2,0x8(%rsp)
36a8(3): setz %dl
36ab(5): cmp $0x0,0xf(%rsp)
36b0(2): mov %edx,%eax
36b2(6): jnz 0x856(%rip)
36b8(3): mov %r8d,%eax
36bb(3): xor $0x1,%eax
36be(2): and %dl,%al
36c0(2): jz 0x31(%rip)
36c2(3): cmp %r15,%r13
36c5(2): jbe 0x7(%rip)
36c7(5): mov $0x27,0x0(%r14,%r15,1)
36cc(4): lea 0x1(%r15),%rdx
36d0(3): cmp %rdx,%r13
36d3(2): jbe 0x8(%rip)
36d5(6): mov $0x24,0x1(%r14,%r15,1)
36db(4): lea 0x2(%r15),%rdx
36df(3): cmp %rdx,%r13
36e2(2): jbe 0x8(%rip)
36e4(6): mov $0x27,0x2(%r14,%r15,1)
36ea(4): add $0x3,%r15
36ee(3): mov %eax,%r8d
36f1(3): cmp %r15,%r13
36f4(2): jbe 0x7(%rip)
36f6(5): mov $0x5c,0x0(%r14,%r15,1)
36fb(4): add $0x1,%r15
36ff(4): add $0x1,%rbp
3703(5): jmp 0xfffffe8d(%rip)
3708(8): nop 0x0(%rax,%rax,1)
3710(5): cmp $0x0,0xd(%rsp)
3715(6): jnz 0x1ce(%rip)
371b(2): xor %edx,%edx
371d(5): test $0x1,0x78(%rsp)
3722(6): jz 0xffffff19(%rip)
3728(4): add $0x1,%rbp
372c(5): jmp 0xfffffcbc(%rip)
3731(7): nop 0x0(%rax)
3738(5): cmp $0x2,0x8(%rsp)
373d(3): setz %dl
3740(2): xor %eax,%eax
3742(5): jmp 0xfffffde6(%rip)
3747(9): nop 0x0(%rax,%rax,1)
3750(5): mov $0x7,%edx
3755(5): mov $0x61,%ebx
375a(5): jmp 0xfffffeda(%rip)
375f(1): nop 
3760(5): cmp $0x2,0x8(%rsp)
3765(3): setz %dl
3768(3): test %rbp,%rbp
376b(6): jnz 0xfffffdb1(%rip)
3771(5): movzx 0xf(%rsp),%eax
3776(2): and %dl,%al
3778(6): jz 0xfffffdb0(%rip)
377e(3): mov %r11,%rbp
3781(8): mov $0x2,0x8(%rsp)
3789(5): jmp 0x700(%rip)
378e(2): nop 
3790(5): cmp $0x2,0x8(%rsp)
3795(3): setz %dl
3798(3): xor %r12d,%r12d
379b(2): jmp 0xffffffd6(%rip)
379d(3): nop (%rax)
37a0(5): cmp $0x2,0x8(%rsp)
37a5(5): mov $0x20,%ebx
37aa(3): setz %dl
37ad(2): jmp 0xffffffc4(%rip)
37af(1): nop 
37b0(5): mov $0xd,%edx
37b5(5): mov $0x72,%ebx
37ba(5): jmp 0xfffffe68(%rip)
37bf(1): nop 
37c0(5): mov $0xc,%edx
37c5(5): mov $0x66,%ebx
37ca(5): jmp 0xfffffe6a(%rip)
37cf(1): nop 
37d0(5): mov $0xb,%edx
37d5(5): mov $0x76,%ebx
37da(5): jmp 0xfffffe5a(%rip)
37df(1): nop 
37e0(5): mov $0xa,%edx
37e5(5): mov $0x6e,%ebx
37ea(5): jmp 0xfffffe38(%rip)
37ef(1): nop 
37f0(3): xor %r10d,%r10d
37f3(5): nop 0x0(%rax,%rax,1)
37f8(6): cmp $0x1,0x58(%rsp)
37fe(6): jnz 0x3aa(%rip)
3804(5): mov %r11,0x38(%rsp)
3809(5): mov %r8b,0x30(%rsp)
380e(5): mov %r10b,0x28(%rsp)
3813(5): call 0xffffe26d(%rip)
3818(3): mov (%rax),%rcx
381b(3): movzx %bl,%edx
381e(6): movzx 0x28(%rsp),%r10d
3824(6): movzx 0x30(%rsp),%r8d
382a(5): mov 0x38(%rsp),%r11
382f(5): mov $0x1,%edi
3834(4): movzx 0x0(%rcx,%rdx,2),%eax
3838(4): and $0x4000,%ax
383c(4): setnz %r12b
3840(3): setz %al
3843(4): and 0xd(%rsp),%al
3847(2): test %al,%al
3849(6): jnz 0x998(%rip)
384f(5): cmp $0x2,0x8(%rsp)
3854(3): setz %dl
3857(5): jmp 0xfffffcd1(%rip)
385c(4): nop 0x0(%rax)
3860(4): movzx (%r9),%ebx
3864(3): cmp $0x7e,%bl
3867(2): jnbe 0xffffff89(%rip)
3869(7): lea 0x2d78(%rip),%rcx
3870(3): movzx %bl,%edx
3873(4): movsxd 0x0(%rcx,%rdx,4),%rax
3877(3): add %rcx,%rax
387a(2): jmp %rax
387c(4): nop 0x0(%rax)
3880(3): xor %r10d,%r10d
3883(5): cmp $0x0,0xd(%rsp)
3888(6): jnz 0xfffffdf6(%rip)
388e(2): nop 
3890(5): mov $0x5c,%edx
3895(5): mov $0x5c,%ebx
389a(5): jmp 0xfffffd9a(%rip)
389f(1): nop 
38a0(5): mov $0xc,%edx
38a5(3): xor %r10d,%r10d
38a8(5): mov $0x66,%ebx
38ad(5): jmp 0xfffffd87(%rip)
38b2(6): nop 0x0(%rax,%rax,1)
38b8(5): mov $0xa,%edx
38bd(3): xor %r10d,%r10d
38c0(5): mov $0x6e,%ebx
38c5(5): jmp 0xfffffd5d(%rip)
38ca(6): nop 0x0(%rax,%rax,1)
38d0(5): mov $0x61,%ebx
38d5(5): jmp 0xfffffdcb(%rip)
38da(6): nop 0x0(%rax,%rax,1)
38e0(3): xor %r10d,%r10d
38e3(5): cmp $0x2,0x8(%rsp)
38e8(3): setz %dl
38eb(5): cmp $0x0,0xf(%rsp)
38f0(6): jnz 0xb9a(%rip)
38f6(3): mov %r8d,%eax
38f9(3): mov %r15,%rcx
38fc(3): xor $0x1,%eax
38ff(2): and %dl,%al
3901(2): jz 0x2f(%rip)
3903(3): cmp %r15,%r13
3906(2): jbe 0x7(%rip)
3908(5): mov $0x27,0x0(%r14,%r15,1)
390d(4): lea 0x1(%r15),%rcx
3911(3): cmp %rcx,%r13
3914(2): jbe 0x8(%rip)
3916(6): mov $0x24,0x1(%r14,%r15,1)
391c(4): lea 0x2(%r15),%rcx
3920(3): cmp %rcx,%r13
3923(6): jnbe 0x636(%rip)
3929(4): lea 0x3(%r15),%rcx
392d(3): mov %eax,%r8d
3930(3): cmp %rcx,%r13
3933(2): jbe 0x7(%rip)
3935(5): mov $0x5c,0x0(%r14,%rcx,1)
393a(5): cmp $0x2,0x8(%rsp)
393f(4): lea 0x1(%rcx),%r15
3943(6): jz 0x606(%rip)
3949(4): lea 0x1(%rbp),%rax
394d(3): cmp %r11,%rax
3950(2): jnb 0x1b(%rip)
3952(5): mov 0x10(%rsp),%rax
3957(5): movzx 0x1(%rax,%rbp,1),%eax
395c(4): mov %al,0x28(%rsp)
3960(3): sub $0x30,%eax
3963(2): cmp $0x9,%al
3965(6): jbe 0x834(%rip)
396b(3): mov %r12d,%eax
396e(5): mov $0x30,%ebx
3973(3): xor %r12d,%r12d
3976(5): jmp 0xfffffbb2(%rip)
397b(5): nop 0x0(%rax,%rax,1)
3980(5): cmp $0x2,0x8(%rsp)
3985(3): mov %r10d,%r12d
3988(3): setz %dl
398b(3): xor %r10d,%r10d
398e(2): xor %eax,%eax
3990(5): jmp 0xfffffb98(%rip)
3995(3): nop (%rax)
3998(5): cmp $0x2,0x8(%rsp)
399d(3): setz %dl
39a0(3): xor %r10d,%r10d
39a3(5): jmp 0xfffffdc5(%rip)
39a8(8): nop 0x0(%rax,%rax,1)
39b0(5): cmp $0x2,0x8(%rsp)
39b5(3): setz %dl
39b8(3): xor %r10d,%r10d
39bb(3): xor %r12d,%r12d
39be(5): jmp 0xfffffdb3(%rip)
39c3(5): nop 0x0(%rax,%rax,1)
39c8(5): cmp $0x2,0x8(%rsp)
39cd(3): mov %r10d,%r12d
39d0(5): mov $0x20,%ebx
39d5(3): setz %dl
39d8(3): xor %r10d,%r10d
39db(5): jmp 0xfffffd96(%rip)
39e0(5): mov $0xd,%edx
39e5(3): xor %r10d,%r10d
39e8(5): mov $0x72,%ebx
39ed(5): jmp 0xfffffc35(%rip)
39f2(6): nop 0x0(%rax,%rax,1)
39f8(5): mov $0x76,%ebx
39fd(5): jmp 0xfffffca3(%rip)
3a02(6): nop 0x0(%rax,%rax,1)
3a08(5): mov $0x9,%edx
3a0d(3): xor %r10d,%r10d
3a10(5): mov $0x74,%ebx
3a15(5): jmp 0xfffffc0d(%rip)
3a1a(6): nop 0x0(%rax,%rax,1)
3a20(5): mov $0x62,%ebx
3a25(5): jmp 0xfffffc7b(%rip)
3a2a(6): nop 0x0(%rax,%rax,1)
3a30(3): xor %r10d,%r10d
3a33(5): jmp 0xfffffa9d(%rip)
3a38(8): nop 0x0(%rax,%rax,1)
3a40(5): cmp $0x0,0xf(%rsp)
3a45(6): jnz 0x96b(%rip)
3a4b(4): add $0x1,%rbp
3a4f(3): mov %r8d,%eax
3a52(3): xor %r12d,%r12d
3a55(5): mov $0x5c,%ebx
3a5a(5): jmp 0xfffffb12(%rip)
3a5f(1): nop 
3a60(5): cmp $0x2,0x8(%rsp)
3a65(5): movzx 0xf(%rsp),%ebx
3a6a(3): mov %r8d,%r12d
3a6d(3): mov %r11,%rbp
3a70(3): setz %dl
3a73(2): mov %ebx,%eax
3a75(3): test %r15,%r15
3a78(3): setz %cl
3a7b(2): and %edx,%eax
3a7d(2): and %cl,%al
3a7f(6): jnz 0xa67(%rip)
3a85(2): mov %ebx,%eax
3a87(3): xor $0x1,%eax
3a8a(2): and %al,%dl
3a8c(6): jz 0x970(%rip)
3a92(5): cmp $0x0,0x7c(%rsp)
3a97(6): jz 0x963(%rip)
3a9d(5): cmp $0x0,0xe(%rsp)
3aa2(6): jnz 0x9fb(%rip)
3aa8(3): test %r13,%r13
3aab(3): setz %al
3aae(6): cmp $0x0,0x50(%rsp)
3ab4(3): setnz %dl
3ab7(2): and %dl,%al
3ab9(6): jz 0xa23(%rip)
3abf(5): mov 0x50(%rsp),%r13
3ac4(7): lea 0x289a(%rip),%rbx
3acb(4): mov $0x27,(%r14)
3acf(8): mov $0x2,0x8(%rsp)
3ad7(6): mov $0x1,%r15d
3add(9): mov $0x1,0x18(%rsp)
3ae6(5): mov $0x0,0xf(%rsp)
3aeb(5): mov %rbx,0x48(%rsp)
3af0(4): mov %al,0x7c(%rsp)
3af4(5): jmp 0xfffff8df(%rip)
3af9(7): nop 0x0(%rax)
3b00(5): cmp $0x0,0xf(%rsp)
3b05(6): jnz 0x8ab(%rip)
3b0b(3): test %r13,%r13
3b0e(6): jz 0x402(%rip)
3b14(2): xor %edx,%edx
3b16(6): cmp $0x0,0x50(%rsp)
3b1c(6): jnz 0x3f4(%rip)
3b22(5): mov %r13,0x50(%rsp)
3b27(4): add $0x3,%r15
3b2b(2): xor %eax,%eax
3b2d(5): mov %r12b,0x7c(%rsp)
3b32(3): xor %r8d,%r8d
3b35(3): mov %rdx,%r13
3b38(5): mov $0x27,%ebx
3b3d(5): jmp 0xfffffa1c(%rip)
3b42(6): nop 0x0(%rax,%rax,1)
3b48(5): test $0x4,0x78(%rsp)
3b4d(2): jz 0x23(%rip)
3b4f(4): lea 0x2(%rbp),%rcx
3b53(3): cmp %r11,%rcx
3b56(2): jnb 0x1a(%rip)
3b58(5): mov 0x10(%rsp),%rax
3b5d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3b62(6): jz 0x790(%rip)
3b68(8): nop 0x0(%rax,%rax,1)
3b70(2): xor %edx,%edx
3b72(3): xor %r12d,%r12d
3b75(2): xor %eax,%eax
3b77(5): mov $0x3f,%ebx
3b7c(5): jmp 0xfffff9ac(%rip)
3b81(7): nop 0x0(%rax)
3b88(5): cmp $0x0,0xf(%rsp)
3b8d(6): jnz 0x823(%rip)
3b93(3): xor %r12d,%r12d
3b96(2): xor %eax,%eax
3b98(5): mov $0x3f,%ebx
3b9d(5): jmp 0xfffff9bc(%rip)
3ba2(6): nop 0x0(%rax,%rax,1)
3ba8(8): lea 0xa0(%rsp),%rax
3bb0(4): cmp $0xffffffff,%r11
3bb4(c): mov $0x0,0xa0(%rsp)
3bc0(5): mov %rax,0x28(%rsp)
3bc5(2): jnz 0x2f(%rip)
3bc7(5): mov 0x10(%rsp),%rdi
3bcc(5): mov %r8b,0x40(%rsp)
3bd1(5): mov %r10b,0x38(%rsp)
3bd6(5): mov %r9,0x30(%rsp)
3bdb(5): call 0xffffdc15(%rip)
3be0(6): movzx 0x40(%rsp),%r8d
3be6(6): movzx 0x38(%rsp),%r10d
3bec(3): mov %rax,%r11
3bef(5): mov 0x30(%rsp),%r9
3bf4(8): lea 0x9c(%rsp),%rax
3bfc(2): xor %ecx,%ecx
3bfe(4): mov %bl,0x7e(%rsp)
3c02(5): mov %r8b,0x7d(%rsp)
3c07(3): mov %rcx,%rbx
3c0a(8): mov %r9,0x88(%rsp)
3c12(5): mov %rax,0x38(%rsp)
3c17(5): mov %r10b,0x7f(%rsp)
3c1c(8): mov %r15,0x80(%rsp)
3c24(5): mov %r14,0x40(%rsp)
3c29(5): mov %r13,0x70(%rsp)
3c2e(5): mov %r11,0x30(%rsp)
3c33(5): mov 0x10(%rsp),%rax
3c38(5): lea 0x0(%rbp,%rbx,1),%r14
3c3d(5): mov 0x30(%rsp),%rdx
3c42(5): mov 0x28(%rsp),%rcx
3c47(5): mov 0x38(%rsp),%rdi
3c4c(4): lea 0x0(%rax,%r14,1),%r13
3c50(3): sub %r14,%rdx
3c53(3): mov %r13,%rsi
3c56(5): call 0x1c1a(%rip)
3c5b(3): test %rax,%rax
3c5e(3): mov %rax,%r15
3c61(2): jz 0x50(%rip)
3c63(4): cmp $0xffffffff,%rax
3c67(6): jz 0x61e(%rip)
3c6d(4): cmp $0xfffffffe,%rax
3c71(6): jz 0x5a0(%rip)
3c77(5): cmp $0x2,0x8(%rsp)
3c7c(3): setz %al
3c7f(4): and 0xf(%rsp),%al
3c83(6): jnz 0x19d(%rip)
3c89(7): mov 0x9c(%rsp),%edi
3c90(5): call 0xffffdde0(%rip)
3c95(5): mov 0x28(%rsp),%rdi
3c9a(2): test %eax,%eax
3c9c(5): mov $0x0,%eax
3ca1(4): cmove %eax,%r12d
3ca5(3): add %r15,%rbx
3ca8(5): call 0xffffddb8(%rip)
3cad(2): test %eax,%eax
3caf(2): jz 0xffffff84(%rip)
3cb1(3): mov %r12d,%edx
3cb4(3): mov %rbx,%rdi
3cb7(6): movzx 0x7d(%rsp),%r8d
3cbd(3): xor $0x1,%edx
3cc0(5): movzx 0x7e(%rsp),%ebx
3cc5(6): movzx 0x7f(%rsp),%r10d
3ccb(4): and 0xd(%rsp),%dl
3ccf(8): mov 0x80(%rsp),%r15
3cd7(5): mov 0x40(%rsp),%r14
3cdc(5): mov 0x70(%rsp),%r13
3ce1(5): mov 0x30(%rsp),%r11
3ce6(4): cmp $0x1,%rdi
3cea(6): jbe 0x601(%rip)
3cf0(3): mov %rdi,%rcx
3cf3(2): xor %esi,%esi
3cf5(6): movzx 0xf(%rsp),%r9d
3cfb(3): add %rbp,%rcx
3cfe(5): mov 0x10(%rsp),%rdi
3d03(5): jmp 0xbb(%rip)
3d08(8): nop 0x0(%rax,%rax,1)
3d10(5): cmp $0x2,0x8(%rsp)
3d15(3): setz %al
3d18(3): test %r9b,%r9b
3d1b(6): jnz 0x4b5(%rip)
3d21(3): mov %r8d,%esi
3d24(3): xor $0x1,%esi
3d27(3): and %sil,%al
3d2a(2): jz 0x31(%rip)
3d2c(3): cmp %r15,%r13
3d2f(2): jbe 0x7(%rip)
3d31(5): mov $0x27,0x0(%r14,%r15,1)
3d36(4): lea 0x1(%r15),%rsi
3d3a(3): cmp %rsi,%r13
3d3d(2): jbe 0x8(%rip)
3d3f(6): mov $0x24,0x1(%r14,%r15,1)
3d45(4): lea 0x2(%r15),%rsi
3d49(3): cmp %rsi,%r13
3d4c(2): jbe 0x8(%rip)
3d4e(6): mov $0x27,0x2(%r14,%r15,1)
3d54(4): add $0x3,%r15
3d58(3): mov %eax,%r8d
3d5b(3): cmp %r15,%r13
3d5e(2): jbe 0x7(%rip)
3d60(5): mov $0x5c,0x0(%r14,%r15,1)
3d65(4): lea 0x1(%r15),%rax
3d69(3): cmp %rax,%r13
3d6c(2): jbe 0xf(%rip)
3d6e(2): mov %ebx,%eax
3d70(3): shr $0x6,%al
3d73(3): add $0x30,%eax
3d76(5): mov %al,0x1(%r14,%r15,1)
3d7b(4): lea 0x2(%r15),%rax
3d7f(3): cmp %rax,%r13
3d82(2): jbe 0x12(%rip)
3d84(2): mov %ebx,%eax
3d86(3): shr $0x3,%al
3d89(3): and $0x7,%eax
3d8c(3): add $0x30,%eax
3d8f(5): mov %al,0x2(%r14,%r15,1)
3d94(3): and $0x7,%ebx
3d97(4): add $0x1,%rbp
3d9b(4): add $0x3,%r15
3d9f(3): add $0x30,%ebx
3da2(3): cmp %rcx,%rbp
3da5(6): jnb 0xfffff7eb(%rip)
3dab(2): mov %edx,%esi
3dad(3): cmp %r15,%r13
3db0(2): jbe 0x6(%rip)
3db2(4): mov %bl,0x0(%r14,%r15,1)
3db6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3dba(4): add $0x1,%r15
3dbe(2): test %dl,%dl
3dc0(6): jnz 0xffffff50(%rip)
3dc6(2): mov %esi,%eax
3dc8(3): xor $0x1,%eax
3dcb(3): and %r8d,%eax
3dce(3): test %r10b,%r10b
3dd1(2): jz 0x10(%rip)
3dd3(3): cmp %r15,%r13
3dd6(2): jbe 0x7(%rip)
3dd8(5): mov $0x5c,0x0(%r14,%r15,1)
3ddd(4): add $0x1,%r15
3de1(4): add $0x1,%rbp
3de5(3): cmp %rcx,%rbp
3de8(6): jnb 0xfffff784(%rip)
3dee(2): test %al,%al
3df0(6): jz 0x3fe(%rip)
3df6(3): cmp %r15,%r13
3df9(2): jbe 0x7(%rip)
3dfb(5): mov $0x27,0x0(%r14,%r15,1)
3e00(4): lea 0x1(%r15),%rax
3e04(3): cmp %rax,%r13
3e07(2): jbe 0x8(%rip)
3e09(6): mov $0x27,0x1(%r14,%r15,1)
3e0f(4): add $0x2,%r15
3e13(3): xor %r10d,%r10d
3e16(3): xor %r8d,%r8d
3e19(2): jmp 0xffffff94(%rip)
3e1b(5): nop 0x0(%rax,%rax,1)
3e20(4): cmp $0x1,%r15
3e24(6): jz 0xfffffe65(%rip)
3e2a(5): mov 0x10(%rsp),%rdi
3e2f(4): lea 0x0(%rdi,%r15,1),%rcx
3e33(5): lea 0x1(%rdi,%r14,1),%rdx
3e38(4): lea 0x0(%rcx,%r14,1),%r8
3e3c(2): jmp 0x11(%rip)
3e3e(2): nop 
3e40(4): add $0x1,%rdx
3e44(3): cmp %rdx,%r8
3e47(6): jz 0xfffffe42(%rip)
3e4d(3): movzx (%rdx),%ecx
3e50(3): sub $0x5b,%ecx
3e53(3): cmp $0x21,%cl
3e56(2): jnbe 0xffffffea(%rip)
3e58(5): mov $0x1,%esi
3e5d(3): shl/sal %cl,%rsi
3e60(3): mov %rsi,%rcx
3e63(a): mov $0x8589934635,%rsi
3e6d(3): test %rsi,%rcx
3e70(2): jz 0xffffffd0(%rip)
3e72(5): mov 0x40(%rsp),%r14
3e77(5): mov 0x70(%rsp),%r13
3e7c(5): mov 0x30(%rsp),%rbp
3e81(8): mov $0x2,0x8(%rsp)
3e89(5): cmp $0x0,0xd(%rsp)
3e8e(2): jz 0x12(%rip)
3e90(2): test %al,%al
3e92(5): mov $0x4,%eax
3e97(5): cmove 0x8(%rsp),%eax
3e9c(4): mov %eax,0x8(%rsp)
3ea0(4): sub $0x8,%rsp
3ea4(3): mov %rbp,%rcx
3ea7(3): mov %r13,%rsi
3eaa(4): push 0x68(%rsp)
3eae(4): push 0x78(%rsp)
3eb2(3): mov %r14,%rdi
3eb5(2): push $0x0
3eb7(8): mov 0x98(%rsp),%r9d
3ebf(5): mov 0x28(%rsp),%r8d
3ec4(5): mov 0x30(%rsp),%rdx
3ec9(4): and $0xfd,%r9d
3ecd(5): call 0xfffff433(%rip)
3ed2(4): add $0x20,%rsp
3ed6(3): mov %rax,%r15
3ed9(8): mov 0xa8(%rsp),%rbx
3ee1(9): xor $0x28,%rbx
3eea(3): mov %r15,%rax
3eed(6): jnz 0x606(%rip)
3ef3(7): add $0xb8,%rsp
3efa(1): pop %rbx
3efb(1): pop %rbp
3efc(2): pop %r12
3efe(2): pop %r13
3f00(2): pop %r14
3f02(2): pop %r15
3f04(1): ret near (%rsp)
3f05(3): nop (%rax)
3f08(3): mov %r11,%rbp
3f0b(5): jmp 0xffffff7e(%rip)
3f10(3): cmp %r15,%r13
3f13(2): jbe 0x7(%rip)
3f15(5): mov $0x27,0x0(%r14,%r15,1)
3f1a(4): lea 0x1(%r15),%rax
3f1e(3): cmp %rax,%r13
3f21(2): jbe 0x8(%rip)
3f23(6): mov $0x5c,0x1(%r14,%r15,1)
3f29(4): lea 0x2(%r15),%rax
3f2d(3): cmp %rax,%r13
3f30(6): jbe 0x5f2(%rip)
3f36(3): mov %r13,%rdx
3f39(6): mov $0x27,0x2(%r14,%r15,1)
3f3f(5): mov 0x50(%rsp),%r13
3f44(5): jmp 0xfffffbde(%rip)
3f49(3): mov %r12d,%eax
3f4c(5): mov $0x30,%ebx
3f51(3): xor %r12d,%r12d
3f54(5): jmp 0xfffff605(%rip)
3f59(6): mov $0x27,0x2(%r14,%r15,1)
3f5f(5): jmp 0xfffff9ca(%rip)
3f64(2): test %ebx,%ebx
3f66(6): jnz 0xfffff42d(%rip)
3f6c(5): mov $0x1,0xd(%rsp)
3f71(3): test %r13,%r13
3f74(6): jnz 0x596(%rip)
3f7a(7): lea 0x23e4(%rip),%rax
3f81(9): mov $0x0,0x50(%rsp)
3f8a(5): mov $0x1,0xe(%rsp)
3f8f(5): mov $0x0,0x7c(%rsp)
3f94(3): xor %r12d,%r12d
3f97(5): mov $0x0,0xf(%rsp)
3f9c(9): mov $0x1,0x18(%rsp)
3fa5(5): mov %rax,0x48(%rsp)
3faa(6): mov $0x1,%r15d
3fb0(8): mov $0x2,0x8(%rsp)
3fb8(5): jmp 0xfffff41b(%rip)
3fbd(3): nop (%rax)
3fc0(2): test %ebx,%ebx
3fc2(6): jnz 0x3fb(%rip)
3fc8(3): test %r13,%r13
3fcb(6): jz 0x22b(%rip)
3fd1(4): mov $0x22,(%r14)
3fd5(5): mov $0x1,0xe(%rsp)
3fda(3): xor %r12d,%r12d
3fdd(5): mov $0x0,0x7c(%rsp)
3fe2(9): mov $0x0,0x50(%rsp)
3feb(7): lea 0x2371(%rip),%rax
3ff2(5): mov $0x0,0xf(%rsp)
3ff7(5): mov $0x1,0xd(%rsp)
3ffc(9): mov $0x1,0x18(%rsp)
4005(6): mov $0x1,%r15d
400b(5): mov %rax,0x48(%rsp)
4010(5): jmp 0xfffff3c3(%rip)
4015(7): lea 0x2347(%rip),%rax
401c(5): mov $0x1,0xe(%rsp)
4021(5): mov $0x0,0x7c(%rsp)
4026(3): xor %r12d,%r12d
4029(9): mov $0x0,0x50(%rsp)
4032(5): mov $0x1,0xf(%rsp)
4037(5): mov $0x1,0xd(%rsp)
403c(9): mov $0x1,0x18(%rsp)
4045(3): xor %r15d,%r15d
4048(5): mov %rax,0x48(%rsp)
404d(8): mov $0x5,0x8(%rsp)
4055(5): jmp 0xfffff37e(%rip)
405a(5): mov $0x1,0xe(%rsp)
405f(5): mov $0x0,0x7c(%rsp)
4064(3): xor %r12d,%r12d
4067(9): mov $0x0,0x50(%rsp)
4070(5): mov $0x0,0xf(%rsp)
4075(3): xor %r15d,%r15d
4078(5): mov $0x1,0xd(%rsp)
407d(9): mov $0x0,0x18(%rsp)
4086(9): mov $0x0,0x48(%rsp)
408f(5): jmp 0xfffff344(%rip)
4094(5): cmp $0xa,0x8(%rsp)
4099(2): jz 0x58(%rip)
409b(7): lea 0x22c5(%rip),%rsi
40a2(2): xor %edi,%edi
40a4(5): mov $0x5,%edx
40a9(5): call 0xffffd727(%rip)
40ae(3): mov %rax,%rcx
40b1(5): mov %rax,0x68(%rsp)
40b6(7): lea 0x22aa(%rip),%rax
40bd(3): cmp %rax,%rcx
40c0(6): jz 0x39e(%rip)
40c6(7): lea 0x2298(%rip),%rsi
40cd(2): xor %edi,%edi
40cf(5): mov $0x5,%edx
40d4(5): call 0xffffd6fc(%rip)
40d9(3): mov %rax,%rcx
40dc(5): mov %rax,0x60(%rsp)
40e1(7): lea 0x227d(%rip),%rax
40e8(3): cmp %rax,%rcx
40eb(6): jz 0x389(%rip)
40f1(3): xor %r15d,%r15d
40f4(2): test %ebx,%ebx
40f6(6): jz 0x1c7(%rip)
40fc(2): test %ebx,%ebx
40fe(5): mov 0x60(%rsp),%rbx
4103(5): setnz 0xf(%rsp)
4108(3): xor %r12d,%r12d
410b(3): mov %rbx,%rdi
410e(5): call 0xffffd6e2(%rip)
4113(5): mov %rbx,0x48(%rsp)
4118(5): mov %rax,0x18(%rsp)
411d(5): mov $0x1,0xe(%rsp)
4122(5): mov $0x0,0x7c(%rsp)
4127(9): mov $0x0,0x50(%rsp)
4130(5): mov $0x1,0xd(%rsp)
4135(5): jmp 0xfffff29e(%rip)
413a(5): mov $0x1,0xe(%rsp)
413f(5): mov $0x0,0x7c(%rsp)
4144(3): xor %r12d,%r12d
4147(9): mov $0x0,0x50(%rsp)
4150(5): mov $0x0,0xf(%rsp)
4155(3): xor %r15d,%r15d
4158(5): mov $0x0,0xd(%rsp)
415d(9): mov $0x0,0x18(%rsp)
4166(9): mov $0x0,0x48(%rsp)
416f(5): jmp 0xfffff264(%rip)
4174(5): mov $0x1,0xe(%rsp)
4179(5): mov $0x0,0x7c(%rsp)
417e(3): xor %r12d,%r12d
4181(9): mov $0x0,0x50(%rsp)
418a(5): mov $0x1,0xf(%rsp)
418f(5): mov $0x1,0xd(%rsp)
4194(5): jmp 0xfffff21f(%rip)
4199(3): cmp %r15,%r13
419c(2): jbe 0x7(%rip)
419e(5): mov $0x30,0x0(%r14,%r15,1)
41a3(4): lea 0x2(%rcx),%rax
41a7(3): cmp %rax,%r13
41aa(2): jbe 0x8(%rip)
41ac(6): mov $0x30,0x2(%r14,%rcx,1)
41b2(3): mov %r12d,%eax
41b5(4): lea 0x3(%rcx),%r15
41b9(3): xor %r12d,%r12d
41bc(5): mov $0x30,%ebx
41c1(5): jmp 0xfffff367(%rip)
41c6(a): nop 0x0(%rax,%rax,1)
41d0(5): movzx 0xf(%rsp),%ebx
41d5(3): mov %r11,%rbp
41d8(4): mov %bl,0xd(%rsp)
41dc(5): jmp 0xfffffcad(%rip)
41e1(5): movzx 0xd(%rsp),%edx
41e6(3): xor %r12d,%r12d
41e9(5): jmp 0xfffffb07(%rip)
41ee(3): xor %r10d,%r10d
41f1(5): jmp 0xfffffbbc(%rip)
41f6(9): mov $0x0,0x50(%rsp)
41ff(5): mov $0x1,0xe(%rsp)
4204(3): xor %r12d,%r12d
4207(5): mov $0x0,0x7c(%rsp)
420c(5): jmp 0xfffffddf(%rip)
4211(5): mov 0x30(%rsp),%r11
4216(3): mov %r14,%rsi
4219(3): mov %r13,%rcx
421c(3): mov %rbx,%rax
421f(3): mov %rbx,%rdi
4222(6): movzx 0x7d(%rsp),%r8d
4228(5): movzx 0x7e(%rsp),%ebx
422d(8): mov 0x88(%rsp),%r9
4235(3): cmp %r11,%rsi
4238(6): movzx 0x7f(%rsp),%r10d
423e(8): mov 0x80(%rsp),%r15
4246(5): mov 0x40(%rsp),%r14
424b(5): mov 0x70(%rsp),%r13
4250(2): jnb 0x28(%rip)
4252(3): cmp $0x0,(%rcx)
4255(2): jnz 0x12(%rip)
4257(2): jmp 0x21(%rip)
4259(7): nop 0x0(%rax)
4260(5): cmp $0x0,0x0(%r9,%rax,1)
4265(2): jz 0x10(%rip)
4267(4): add $0x1,%rax
426b(5): lea 0x0(%rbp,%rax,1),%rdx
4270(3): cmp %rdx,%r11
4273(2): jnbe 0xffffffed(%rip)
4275(3): mov %rax,%rdi
4278(5): movzx 0xd(%rsp),%edx
427d(3): xor %r12d,%r12d
4280(5): jmp 0xfffffa66(%rip)
4285(3): mov %rbx,%rdi
4288(6): movzx 0x7d(%rsp),%r8d
428e(5): movzx 0x7e(%rsp),%ebx
4293(6): movzx 0x7f(%rsp),%r10d
4299(8): mov 0x80(%rsp),%r15
42a1(3): xor %r12d,%r12d
42a4(5): mov 0x40(%rsp),%r14
42a9(5): mov 0x70(%rsp),%r13
42ae(5): mov 0x30(%rsp),%r11
42b3(5): movzx 0xd(%rsp),%edx
42b8(5): jmp 0xfffffa2e(%rip)
42bd(5): mov 0x68(%rsp),%rdx
42c2(3): movzx (%rdx),%eax
42c5(2): test %al,%al
42c7(6): jz 0xfffffe35(%rip)
42cd(3): nop (%rax)
42d0(3): cmp %r15,%r13
42d3(2): jbe 0x6(%rip)
42d5(4): mov %al,0x0(%r14,%r15,1)
42d9(4): add $0x1,%r15
42dd(5): movzx 0x0(%rdx,%r15,1),%eax
42e2(2): test %al,%al
42e4(2): jnz 0xffffffec(%rip)
42e6(5): jmp 0xfffffe16(%rip)
42eb(2): mov %edx,%eax
42ed(5): jmp 0xfffff55a(%rip)
42f2(4): movzx 0x0(%rax,%rcx,1),%ebx
42f6(3): cmp $0x3e,%bl
42f9(6): jnbe 0xfffff877(%rip)
42ff(a): mov $0x8070630310989004800,%rax
4309(4): bt %rbx,%rax
430d(6): jnb 0xfffff863(%rip)
4313(5): cmp $0x0,0xf(%rsp)
4318(6): jnz 0x1ea(%rip)
431e(3): cmp %r15,%r13
4321(2): jbe 0x7(%rip)
4323(5): mov $0x3f,0x0(%r14,%r15,1)
4328(4): lea 0x1(%r15),%rax
432c(3): cmp %rax,%r13
432f(2): jbe 0x8(%rip)
4331(6): mov $0x22,0x1(%r14,%r15,1)
4337(4): lea 0x2(%r15),%rax
433b(3): cmp %rax,%r13
433e(2): jbe 0x8(%rip)
4340(6): mov $0x22,0x2(%r14,%r15,1)
4346(4): lea 0x3(%r15),%rax
434a(3): cmp %rax,%r13
434d(2): jbe 0x8(%rip)
434f(6): mov $0x3f,0x3(%r14,%r15,1)
4355(4): add $0x4,%r15
4359(2): xor %edx,%edx
435b(3): xor %r12d,%r12d
435e(2): xor %eax,%eax
4360(3): mov %rcx,%rbp
4363(5): jmp 0xfffff1c5(%rip)
4368(2): test %ebx,%ebx
436a(6): jz 0x18e(%rip)
4370(7): lea 0x1fee(%rip),%rax
4377(5): mov $0x1,0xe(%rsp)
437c(5): mov $0x0,0x7c(%rsp)
4381(3): xor %r12d,%r12d
4384(9): mov $0x0,0x50(%rsp)
438d(5): mov $0x1,0xf(%rsp)
4392(5): mov $0x0,0xd(%rsp)
4397(9): mov $0x1,0x18(%rsp)
43a0(3): xor %r15d,%r15d
43a3(5): mov %rax,0x48(%rsp)
43a8(5): jmp 0xfffff02b(%rip)
43ad(3): nop (%rax)
43b0(3): mov %r11,%rbp
43b3(5): movzx 0xf(%rsp),%eax
43b8(5): jmp 0xfffffad1(%rip)
43bd(7): lea 0x1f9f(%rip),%rax
43c4(5): mov $0x1,0xe(%rsp)
43c9(5): mov $0x0,0x7c(%rsp)
43ce(3): xor %r12d,%r12d
43d1(9): mov $0x0,0x50(%rsp)
43da(5): mov $0x1,0xf(%rsp)
43df(5): mov $0x1,0xd(%rsp)
43e4(9): mov $0x1,0x18(%rsp)
43ed(3): xor %r15d,%r15d
43f0(5): mov %rax,0x48(%rsp)
43f5(5): jmp 0xffffefde(%rip)
43fa(2): mov %edx,%eax
43fc(5): mov 0x48(%rsp),%rbx
4401(3): test %rbx,%rbx
4404(2): jz 0x2e(%rip)
4406(2): test %al,%al
4408(2): jz 0x2a(%rip)
440a(3): movzx (%rbx),%ecx
440d(3): mov %rbx,%rax
4410(2): test %cl,%cl
4412(2): jz 0x20(%rip)
4414(3): mov %r15,%rdx
4417(3): sub %r15,%rax
441a(3): cmp %rdx,%r13
441d(2): jbe 0x6(%rip)
441f(4): mov %cl,0x0(%r14,%rdx,1)
4423(4): add $0x1,%rdx
4427(4): movzx 0x0(%rax,%rdx,1),%ecx
442b(2): test %cl,%cl
442d(2): jnz 0xffffffed(%rip)
442f(3): mov %rdx,%r15
4432(3): cmp %r15,%r13
4435(6): jbe 0xfffffaa4(%rip)
443b(5): mov $0x0,0x0(%r14,%r15,1)
4440(5): jmp 0xfffffa99(%rip)
4445(5): cmp $0x2,0x8(%rsp)
444a(5): movzx 0xf(%rsp),%ebx
444f(3): mov %r11,%rbp
4452(3): setz %al
4455(4): mov %bl,0xd(%rsp)
4459(5): jmp 0xfffffa30(%rip)
445e(4): mov 0x8(%rsp),%esi
4462(3): mov %rcx,%rdi
4465(5): call 0xffffedab(%rip)
446a(5): mov %rax,0x68(%rsp)
446f(5): jmp 0xfffffc57(%rip)
4474(4): mov 0x8(%rsp),%esi
4478(3): mov %rcx,%rdi
447b(5): call 0xffffed95(%rip)
4480(5): mov %rax,0x60(%rsp)
4485(5): jmp 0xfffffc6c(%rip)
448a(5): movzx 0xf(%rsp),%ebx
448f(3): mov %r11,%rbp
4492(2): mov %edx,%eax
4494(4): mov %bl,0xd(%rsp)
4498(5): jmp 0xfffff9f1(%rip)
449d(4): sub $0x8,%rsp
44a1(6): mov $0x5,%r8d
44a7(3): mov %r11,%rcx
44aa(4): push 0x68(%rsp)
44ae(4): push 0x78(%rsp)
44b2(3): mov %r14,%rdi
44b5(4): push 0x38(%rsp)
44b9(8): mov 0x98(%rsp),%r9d
44c1(5): mov 0x30(%rsp),%rdx
44c6(5): mov 0x70(%rsp),%rsi
44cb(5): call 0xffffee35(%rip)
44d0(4): add $0x20,%rsp
44d4(3): mov %rax,%r15
44d7(5): jmp 0xfffffa02(%rip)
44dc(5): movzx 0x7c(%rsp),%eax
44e1(5): jmp 0xffffff1b(%rip)
44e6(8): mov $0x2,0x8(%rsp)
44ee(5): jmp 0xfffff99b(%rip)
44f3(5): call 0xffffd30d(%rip)
44f8(5): mov $0x0,0xd(%rsp)
44fd(5): jmp 0xfffffa74(%rip)
4502(3): mov %r11,%rbp
4505(5): jmp 0xfffff99b(%rip)
450a(5): mov $0x1,0xe(%rsp)
450f(2): xor %eax,%eax
4511(3): xor %r12d,%r12d
4514(9): mov $0x0,0x50(%rsp)
451d(5): jmp 0xfffff5a7(%rip)
4522(3): mov %r13,%rdx
4525(5): mov 0x50(%rsp),%r13
452a(5): jmp 0xfffff5f8(%rip)
452f(5): call 0xffffd1e1(%rip)

"quotearg_n_options" :
4540(2): push %r15
4542(2): push %r14
4544(3): movsxd %edi,%r15
4547(2): push %r13
4549(2): push %r12
454b(3): mov %rdx,%r14
454e(1): push %rbp
454f(1): push %rbx
4550(3): mov %rcx,%rbp
4553(4): sub $0x28,%rsp
4557(5): mov %rsi,0x8(%rsp)
455c(5): call 0xffffd1c4(%rip)
4561(3): mov %rax,%r13
4564(2): mov (%rax),%eax
4566(3): test %r15d,%r15d
4569(7): mov 0x203b10(%rip),%rbx
4570(4): mov %eax,0x18(%rsp)
4574(6): js 0x16d(%rip)
457a(7): cmp %r15d,0x203af7(%rip)
4581(2): jnle 0x64(%rip)
4583(7): cmp $0x7fffffff,%r15d
458a(6): jz 0x15c(%rip)
4590(4): lea 0x1(%r15),%r12d
4594(7): lea 0x203af5(%rip),%rax
459b(3): movsxd %r12d,%rsi
459e(4): shl/sal $0x4,%rsi
45a2(3): cmp %rax,%rbx
45a5(6): jz 0x11b(%rip)
45ab(3): mov %rbx,%rdi
45ae(5): call 0xf72(%rip)
45b3(3): mov %rax,%rbx
45b6(7): mov %rax,0x203ac3(%rip)
45bd(7): movsxd 0x203ab4(%rip),%rdi
45c4(3): mov %r12d,%edx
45c7(2): xor %esi,%esi
45c9(2): sub %edi,%edx
45cb(4): shl/sal $0x4,%rdi
45cf(3): movsxd %edx,%rdx
45d2(3): add %rbx,%rdi
45d5(4): shl/sal $0x4,%rdx
45d9(5): call 0xffffd2a7(%rip)
45de(7): mov %r12d,0x203a93(%rip)
45e5(3): mov 0x4(%rbp),%eax
45e8(4): shl/sal $0x4,%r15
45ec(4): sub $0x8,%rsp
45f0(3): add %r15,%rbx
45f3(4): lea 0x8(%rbp),%r15
45f7(4): mov 0x0(%rbp),%r8d
45fb(3): mov (%rbx),%r11
45fe(4): mov 0x8(%rbx),%r12
4602(3): mov %r14,%rcx
4605(3): or $0x1,%eax
4608(4): mov %eax,0x24(%rsp)
460c(3): push 0x30(%rbp)
460f(3): mov %eax,%r9d
4612(3): push 0x28(%rbp)
4615(2): push %r15
4617(3): mov %r11,%rsi
461a(5): mov 0x28(%rsp),%rdx
461f(3): mov %r12,%rdi
4622(5): mov %r11,0x30(%rsp)
4627(5): call 0xffffecd9(%rip)
462c(4): add $0x20,%rsp
4630(5): mov 0x10(%rsp),%r11
4635(3): cmp %rax,%r11
4638(2): jnbe 0x69(%rip)
463a(4): lea 0x1(%rax),%rsi
463e(7): lea 0x203b5b(%rip),%rax
4645(3): cmp %rax,%r12
4648(3): mov %rsi,(%rbx)
464b(2): jz 0x14(%rip)
464d(3): mov %r12,%rdi
4650(5): mov %rsi,0x10(%rsp)
4655(5): call 0xffffd09b(%rip)
465a(5): mov 0x10(%rsp),%rsi
465f(3): mov %rsi,%rdi
4662(5): mov %rsi,0x10(%rsp)
4667(5): call 0xe59(%rip)
466c(4): sub $0x8,%rsp
4670(4): mov %rax,0x8(%rbx)
4674(4): mov 0x0(%rbp),%r8d
4678(3): push 0x30(%rbp)
467b(3): push 0x28(%rbp)
467e(3): mov %r14,%rcx
4681(2): push %r15
4683(5): mov 0x3c(%rsp),%r9d
4688(3): mov %rax,%rdi
468b(5): mov 0x28(%rsp),%rdx
4690(5): mov 0x30(%rsp),%rsi
4695(3): mov %rax,%r12
4698(5): call 0xffffec68(%rip)
469d(4): add $0x20,%rsp
46a1(4): mov 0x18(%rsp),%eax
46a5(4): mov %eax,0x0(%r13)
46a9(4): add $0x28,%rsp
46ad(3): mov %r12,%rax
46b0(1): pop %rbx
46b1(1): pop %rbp
46b2(2): pop %r12
46b4(2): pop %r13
46b6(2): pop %r14
46b8(2): pop %r15
46ba(1): ret near (%rsp)
46bb(5): nop 0x0(%rax,%rax,1)
46c0(2): xor %edi,%edi
46c2(5): call 0xe5e(%rip)
46c7(8): movdqa 0x2039c1(%rip),%xmm0
46cf(3): mov %rax,%rbx
46d2(7): mov %rax,0x2039a7(%rip)
46d9(3): movups %xmm0,(%rax)
46dc(5): jmp 0xfffffee1(%rip)
46e1(5): call 0xffffd02f(%rip)
46e6(5): call 0x102a(%rip)

"clone_quoting_options" :
46f0(2): push %r12
46f2(1): push %rbp
46f3(1): push %rbx
46f4(3): mov %rdi,%rbx
46f7(5): call 0xffffd029(%rip)
46fc(3): mov (%rax),%r12d
46ff(3): mov %rax,%rbp
4702(7): lea 0x203b97(%rip),%rax
4709(3): test %rbx,%rbx
470c(5): mov $0x38,%esi
4711(4): cmove %rax,%rbx
4715(3): mov %rbx,%rdi
4718(5): call 0xfa8(%rip)
471d(4): mov %r12d,0x0(%rbp)
4721(1): pop %rbx
4722(1): pop %rbp
4723(2): pop %r12
4725(1): ret near (%rsp)

"get_quoting_style" :
4730(7): lea 0x203b69(%rip),%rax
4737(3): test %rdi,%rdi
473a(4): cmove %rax,%rdi
473e(2): mov (%rdi),%eax
4740(1): ret near (%rsp)

"set_quoting_style" :
4750(7): lea 0x203b49(%rip),%rax
4757(3): test %rdi,%rdi
475a(4): cmove %rax,%rdi
475e(2): mov %esi,(%rdi)
4760(1): ret near (%rsp)

"set_char_quoting" :
4770(7): lea 0x203b29(%rip),%rax
4777(3): test %rdi,%rdi
477a(2): mov %esi,%ecx
477c(4): cmove %rax,%rdi
4780(2): mov %esi,%eax
4782(3): and $0x1f,%ecx
4785(3): shr $0x5,%al
4788(3): movzx %al,%eax
478b(5): lea 0x8(%rdi,%rax,4),%rdi
4790(2): mov (%rdi),%esi
4792(2): mov %esi,%eax
4794(2): shr %cl,%eax
4796(2): xor %eax,%edx
4798(3): and $0x1,%eax
479b(3): and $0x1,%edx
479e(2): shl/sal %cl,%edx
47a0(2): xor %esi,%edx
47a2(2): mov %edx,(%rdi)
47a4(1): ret near (%rsp)

"set_quoting_flags" :
47b0(7): lea 0x203ae9(%rip),%rax
47b7(3): test %rdi,%rdi
47ba(4): cmove %rax,%rdi
47be(3): mov 0x4(%rdi),%eax
47c1(3): mov %esi,0x4(%rdi)
47c4(1): ret near (%rsp)

"set_custom_quoting" :
47d0(7): lea 0x203ac9(%rip),%rax
47d7(3): test %rdi,%rdi
47da(4): cmove %rax,%rdi
47de(3): test %rsi,%rsi
47e1(6): mov $0xa,(%rdi)
47e7(2): jz 0x10(%rip)
47e9(3): test %rdx,%rdx
47ec(2): jz 0xb(%rip)
47ee(4): mov %rsi,0x28(%rdi)
47f2(4): mov %rdx,0x30(%rdi)
47f6(1): ret near (%rsp)
47f7(4): sub $0x8,%rsp
47fb(5): call 0xffffcf15(%rip)

"quotearg_buffer" :
4800(2): push %r15
4802(2): push %r14
4804(7): lea 0x203a95(%rip),%rax
480b(2): push %r13
480d(2): push %r12
480f(3): mov %rdi,%r13
4812(1): push %rbp
4813(1): push %rbx
4814(3): mov %r8,%rbx
4817(3): mov %rsi,%r14
481a(3): mov %rdx,%r15
481d(4): sub $0x18,%rsp
4821(3): test %r8,%r8
4824(4): cmove %rax,%rbx
4828(5): mov %rcx,0x8(%rsp)
482d(5): call 0xffffcef3(%rip)
4832(3): mov (%rax),%r12d
4835(3): mov %rax,%rbp
4838(4): lea 0x8(%rbx),%rax
483c(4): sub $0x8,%rsp
4840(4): mov 0x4(%rbx),%r9d
4844(3): push 0x30(%rbx)
4847(3): mov (%rbx),%r8d
484a(3): push 0x28(%rbx)
484d(3): mov %r15,%rdx
4850(1): push %rax
4851(5): mov 0x28(%rsp),%rcx
4856(3): mov %r14,%rsi
4859(3): mov %r13,%rdi
485c(5): call 0xffffeaa4(%rip)
4861(4): mov %r12d,0x0(%rbp)
4865(4): add $0x38,%rsp
4869(1): pop %rbx
486a(1): pop %rbp
486b(2): pop %r12
486d(2): pop %r13
486f(2): pop %r14
4871(2): pop %r15
4873(1): ret near (%rsp)

"quotearg_alloc_mem" :
4880(2): push %r15
4882(2): push %r14
4884(7): lea 0x203a15(%rip),%rax
488b(2): push %r13
488d(2): push %r12
488f(3): mov %rdx,%r12
4892(1): push %rbp
4893(1): push %rbx
4894(3): mov %rcx,%rbx
4897(3): mov %rdi,%r14
489a(3): mov %rsi,%r15
489d(4): sub $0x38,%rsp
48a1(3): test %rcx,%rcx
48a4(4): cmove %rax,%rbx
48a8(2): xor %ebp,%ebp
48aa(5): call 0xffffce76(%rip)
48af(3): test %r12,%r12
48b2(3): mov %rax,%r13
48b5(2): mov (%rax),%eax
48b7(4): setz %bpl
48bb(3): or 0x4(%rbx),%ebp
48be(4): lea 0x8(%rbx),%r10
48c2(4): sub $0x8,%rsp
48c6(3): mov (%rbx),%r8d
48c9(3): mov %r15,%rcx
48cc(4): mov %eax,0x14(%rsp)
48d0(3): push 0x30(%rbx)
48d3(3): mov %r14,%rdx
48d6(3): push 0x28(%rbx)
48d9(2): push %r10
48db(2): xor %esi,%esi
48dd(3): mov %ebp,%r9d
48e0(2): xor %edi,%edi
48e2(5): mov %r10,0x40(%rsp)
48e7(5): call 0xffffea19(%rip)
48ec(4): lea 0x1(%rax),%rsi
48f0(5): mov %rax,0x48(%rsp)
48f5(4): add $0x20,%rsp
48f9(3): mov %rsi,%rdi
48fc(5): mov %rsi,0x18(%rsp)
4901(5): call 0xbbf(%rip)
4906(5): mov %rax,0x10(%rsp)
490b(4): sub $0x8,%rsp
490f(3): push 0x30(%rbx)
4912(3): push 0x28(%rbx)
4915(5): mov 0x38(%rsp),%r10
491a(3): mov %ebp,%r9d
491d(3): mov (%rbx),%r8d
4920(3): mov %r15,%rcx
4923(3): mov %r14,%rdx
4926(3): mov %rax,%rdi
4929(2): push %r10
492b(5): mov 0x38(%rsp),%rsi
4930(5): call 0xffffe9d0(%rip)
4935(4): mov 0x2c(%rsp),%eax
4939(4): add $0x20,%rsp
493d(3): test %r12,%r12
4940(4): mov %eax,0x0(%r13)
4944(2): jz 0xb(%rip)
4946(5): mov 0x28(%rsp),%r11
494b(4): mov %r11,(%r12)
494f(5): mov 0x10(%rsp),%rax
4954(4): add $0x38,%rsp
4958(1): pop %rbx
4959(1): pop %rbp
495a(2): pop %r12
495c(2): pop %r13
495e(2): pop %r14
4960(2): pop %r15
4962(1): ret near (%rsp)

"quotearg_alloc" :
4970(3): mov %rdx,%rcx
4973(2): xor %edx,%edx
4975(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4980(6): mov 0x2036f2(%rip),%eax
4986(2): push %r12
4988(7): mov 0x2036f1(%rip),%r12
498f(1): push %rbp
4990(1): push %rbx
4991(3): cmp $0x1,%eax
4994(2): jle 0x2d(%rip)
4996(3): sub $0x2,%eax
4999(5): lea 0x18(%r12),%rbx
499e(4): shl/sal $0x4,%rax
49a2(5): lea 0x28(%r12,%rax,1),%rbp
49a7(9): nop 0x0(%rax,%rax,1)
49b0(3): mov (%rbx),%rdi
49b3(4): add $0x10,%rbx
49b7(5): call 0xffffcd39(%rip)
49bc(3): cmp %rbp,%rbx
49bf(2): jnz 0xfffffff1(%rip)
49c1(5): mov 0x8(%r12),%rdi
49c6(7): lea 0x2037d3(%rip),%rbx
49cd(3): cmp %rbx,%rdi
49d0(2): jz 0x19(%rip)
49d2(5): call 0xffffcd1e(%rip)
49d7(b): mov $0x100,0x2036ae(%rip)
49e2(7): mov %rbx,0x2036af(%rip)
49e9(7): lea 0x2036a0(%rip),%rbx
49f0(3): cmp %rbx,%r12
49f3(2): jz 0x11(%rip)
49f5(3): mov %r12,%rdi
49f8(5): call 0xffffccf8(%rip)
49fd(7): mov %rbx,0x20367c(%rip)
4a04(1): pop %rbx
4a05(a): mov $0x1,0x203669(%rip)
4a0f(1): pop %rbp
4a10(2): pop %r12
4a12(1): ret near (%rsp)

"quotearg_n" :
4a20(7): lea 0x203879(%rip),%rcx
4a27(7): mov $0xffffffff,%rdx
4a2e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4a40(7): lea 0x203859(%rip),%rcx
4a47(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4a50(7): lea 0x203849(%rip),%rcx
4a57(3): mov %rdi,%rsi
4a5a(7): mov $0xffffffff,%rdx
4a61(2): xor %edi,%edi
4a63(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4a70(7): lea 0x203829(%rip),%rcx
4a77(3): mov %rsi,%rdx
4a7a(3): mov %rdi,%rsi
4a7d(2): xor %edi,%edi
4a7f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4a90(4): sub $0x48,%rsp
4a94(3): mov %rdx,%rax
4a97(9): mov $0x28,%rdx
4aa0(5): mov %rdx,0x38(%rsp)
4aa5(2): xor %edx,%edx
4aa7(3): cmp $0xa,%esi
4aaa(2): jz 0x6a(%rip)
4aac(3): mov %esi,(%rsp)
4aaf(3): mov %rsp,%rcx
4ab2(7): mov $0xffffffff,%rdx
4ab9(3): mov %rax,%rsi
4abc(9): mov $0x0,0x4(%rsp)
4ac5(9): mov $0x0,0xc(%rsp)
4ace(9): mov $0x0,0x14(%rsp)
4ad7(9): mov $0x0,0x1c(%rsp)
4ae0(9): mov $0x0,0x24(%rsp)
4ae9(9): mov $0x0,0x2c(%rsp)
4af2(8): mov $0x0,0x34(%rsp)
4afa(5): call 0xfffffa46(%rip)
4aff(5): mov 0x38(%rsp),%rcx
4b04(9): xor $0x28,%rcx
4b0d(2): jnz 0xc(%rip)
4b0f(4): add $0x48,%rsp
4b13(1): ret near (%rsp)
4b14(5): call 0xffffcbfc(%rip)
4b19(5): call 0xffffcce7(%rip)

"quotearg_n_style_mem" :
4b20(4): sub $0x48,%rsp
4b24(3): mov %rdx,%rax
4b27(3): mov %rcx,%rdx
4b2a(9): mov $0x28,%rcx
4b33(5): mov %rcx,0x38(%rsp)
4b38(2): xor %ecx,%ecx
4b3a(3): cmp $0xa,%esi
4b3d(2): jz 0x63(%rip)
4b3f(3): mov %esi,(%rsp)
4b42(3): mov %rsp,%rcx
4b45(3): mov %rax,%rsi
4b48(9): mov $0x0,0x4(%rsp)
4b51(9): mov $0x0,0xc(%rsp)
4b5a(9): mov $0x0,0x14(%rsp)
4b63(9): mov $0x0,0x1c(%rsp)
4b6c(9): mov $0x0,0x24(%rsp)
4b75(9): mov $0x0,0x2c(%rsp)
4b7e(8): mov $0x0,0x34(%rsp)
4b86(5): call 0xfffff9ba(%rip)
4b8b(5): mov 0x38(%rsp),%rdx
4b90(9): xor $0x28,%rdx
4b99(2): jnz 0xc(%rip)
4b9b(4): add $0x48,%rsp
4b9f(1): ret near (%rsp)
4ba0(5): call 0xffffcb70(%rip)
4ba5(5): call 0xffffcc5b(%rip)

"quotearg_style" :
4bb0(3): mov %rsi,%rdx
4bb3(2): mov %edi,%esi
4bb5(2): xor %edi,%edi
4bb7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4bc0(3): mov %rdx,%rcx
4bc3(3): mov %rsi,%rdx
4bc6(2): mov %edi,%esi
4bc8(2): xor %edi,%edi
4bca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4bd0(4): sub $0x48,%rsp
4bd4(2): mov %edx,%ecx
4bd6(9): mov $0x28,%rax
4bdf(5): mov %rax,0x38(%rsp)
4be4(2): xor %eax,%eax
4be6(7): mov 0x2036e3(%rip),%rax
4bed(3): mov %rsp,%r8
4bf0(3): and $0x1f,%ecx
4bf3(8): movdqa 0x2036a5(%rip),%xmm0
4bfb(5): mov %rax,0x30(%rsp)
4c00(2): mov %edx,%eax
4c02(4): movaps %xmm0,(%rsp)
4c06(3): shr $0x5,%al
4c09(3): movzx %al,%eax
4c0c(5): lea 0x8(%r8,%rax,4),%r9
4c11(8): movdqa 0x203697(%rip),%xmm0
4c19(5): movaps %xmm0,0x10(%rsp)
4c1e(8): movdqa 0x20369a(%rip),%xmm0
4c26(5): movaps %xmm0,0x20(%rsp)
4c2b(3): mov (%r9),%edx
4c2e(2): mov %edx,%eax
4c30(2): shr %cl,%eax
4c32(2): not %eax
4c34(3): and $0x1,%eax
4c37(2): shl/sal %cl,%eax
4c39(3): mov %r8,%rcx
4c3c(2): xor %edx,%eax
4c3e(3): mov %rsi,%rdx
4c41(3): mov %rdi,%rsi
4c44(3): mov %eax,(%r9)
4c47(2): xor %edi,%edi
4c49(5): call 0xfffff8f7(%rip)
4c4e(5): mov 0x38(%rsp),%rsi
4c53(9): xor $0x28,%rsi
4c5c(2): jnz 0x7(%rip)
4c5e(4): add $0x48,%rsp
4c62(1): ret near (%rsp)
4c63(5): call 0xffffcb9d(%rip)

"quotearg_char" :
4c70(4): movsx %sil,%edx
4c74(7): mov $0xffffffff,%rsi
4c7b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4c80(5): mov $0x3a,%edx
4c85(7): mov $0xffffffff,%rsi
4c8c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4ca0(5): mov $0x3a,%edx
4ca5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4cb0(4): sub $0x48,%rsp
4cb4(3): mov %rdx,%rax
4cb7(9): mov $0x28,%rdx
4cc0(5): mov %rdx,0x38(%rsp)
4cc5(2): xor %edx,%edx
4cc7(3): cmp $0xa,%esi
4cca(2): jz 0x6a(%rip)
4ccc(3): mov %esi,(%rsp)
4ccf(3): mov %rsp,%rcx
4cd2(7): mov $0xffffffff,%rdx
4cd9(3): mov %rax,%rsi
4cdc(9): mov $0x0,0x4(%rsp)
4ce5(9): mov $0x4000000,0xc(%rsp)
4cee(9): mov $0x0,0x14(%rsp)
4cf7(9): mov $0x0,0x1c(%rsp)
4d00(9): mov $0x0,0x24(%rsp)
4d09(9): mov $0x0,0x2c(%rsp)
4d12(8): mov $0x0,0x34(%rsp)
4d1a(5): call 0xfffff826(%rip)
4d1f(5): mov 0x38(%rsp),%rcx
4d24(9): xor $0x28,%rcx
4d2d(2): jnz 0xc(%rip)
4d2f(4): add $0x48,%rsp
4d33(1): ret near (%rsp)
4d34(5): call 0xffffc9dc(%rip)
4d39(5): call 0xffffcac7(%rip)

"quotearg_n_custom_mem" :
4d40(4): sub $0x48,%rsp
4d44(3): mov %rcx,%r9
4d47(7): mov 0x203582(%rip),%rcx
4d4e(8): movdqa 0x20354a(%rip),%xmm0
4d56(9): mov $0x28,%rax
4d5f(5): mov %rax,0x38(%rsp)
4d64(2): xor %eax,%eax
4d66(4): movaps %xmm0,(%rsp)
4d6a(3): test %rsi,%rsi
4d6d(5): mov %rcx,0x30(%rsp)
4d72(7): mov $0xa,(%rsp)
4d79(8): movdqa 0x20352f(%rip),%xmm0
4d81(5): movaps %xmm0,0x10(%rsp)
4d86(8): movdqa 0x203532(%rip),%xmm0
4d8e(5): movaps %xmm0,0x20(%rsp)
4d93(2): jz 0x34(%rip)
4d95(3): test %rdx,%rdx
4d98(2): jz 0x2f(%rip)
4d9a(5): mov %rsi,0x28(%rsp)
4d9f(5): mov %rdx,0x30(%rsp)
4da4(3): mov %rsp,%rcx
4da7(3): mov %r8,%rdx
4daa(3): mov %r9,%rsi
4dad(5): call 0xfffff793(%rip)
4db2(5): mov 0x38(%rsp),%rdi
4db7(9): xor $0x28,%rdi
4dc0(2): jnz 0xc(%rip)
4dc2(4): add $0x48,%rsp
4dc6(1): ret near (%rsp)
4dc7(5): call 0xffffc949(%rip)
4dcc(5): call 0xffffca34(%rip)

"quotearg_n_custom" :
4de0(7): mov $0xffffffff,%r8
4de7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4df0(3): mov %rdx,%rcx
4df3(7): mov $0xffffffff,%r8
4dfa(3): mov %rsi,%rdx
4dfd(3): mov %rdi,%rsi
4e00(2): xor %edi,%edi
4e02(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4e10(3): mov %rcx,%r8
4e13(3): mov %rdx,%rcx
4e16(3): mov %rsi,%rdx
4e19(3): mov %rdi,%rsi
4e1c(2): xor %edi,%edi
4e1e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4e30(7): lea 0x203209(%rip),%rcx
4e37(5): jmp 0xfffff709(%rip)

"quote_mem" :
4e40(7): lea 0x2031f9(%rip),%rcx
4e47(3): mov %rsi,%rdx
4e4a(3): mov %rdi,%rsi
4e4d(2): xor %edi,%edi
4e4f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4e60(7): lea 0x2031d9(%rip),%rcx
4e67(7): mov $0xffffffff,%rdx
4e6e(5): jmp 0xfffff6d2(%rip)

"quote" :
4e80(7): lea 0x2031b9(%rip),%rcx
4e87(3): mov %rdi,%rsi
4e8a(7): mov $0xffffffff,%rdx
4e91(2): xor %edi,%edi
4e93(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4ea0(2): push %r15
4ea2(2): push %r14
4ea4(2): push %r13
4ea6(2): push %r12
4ea8(3): mov %r9,%r12
4eab(1): push %rbp
4eac(1): push %rbx
4ead(3): mov %rdi,%rbp
4eb0(3): mov %r8,%rbx
4eb3(4): sub $0x28,%rsp
4eb7(3): test %rsi,%rsi
4eba(6): jz 0x11e(%rip)
4ec0(3): mov %rdx,%r8
4ec3(7): lea 0x195e(%rip),%rdx
4eca(3): mov %rcx,%r9
4ecd(2): xor %eax,%eax
4ecf(3): mov %rsi,%rcx
4ed2(5): mov $0x1,%esi
4ed7(5): call 0xffffcb59(%rip)
4edc(7): lea 0x1958(%rip),%rsi
4ee3(2): xor %edi,%edi
4ee5(5): mov $0x5,%edx
4eea(5): call 0xffffc8e6(%rip)
4eef(7): lea 0x1c6a(%rip),%rdx
4ef6(3): mov %rax,%rcx
4ef9(6): mov $0x7e3,%r8d
4eff(5): mov $0x1,%esi
4f04(3): mov %rbp,%rdi
4f07(2): xor %eax,%eax
4f09(5): call 0xffffcb27(%rip)
4f0e(7): lea 0x19b3(%rip),%rsi
4f15(2): xor %edi,%edi
4f17(5): mov $0x5,%edx
4f1c(5): call 0xffffc8b4(%rip)
4f21(3): mov %rbp,%rsi
4f24(3): mov %rax,%rdi
4f27(5): call 0xffffc979(%rip)
4f2c(4): cmp $0x9,%r12
4f30(6): jnbe 0x340(%rip)
4f36(7): lea 0x1beb(%rip),%rdx
4f3d(4): movsxd 0x0(%rdx,%r12,4),%rax
4f41(3): add %rdx,%rax
4f44(2): jmp %rax
4f46(a): nop 0x0(%rax,%rax,1)
4f50(4): mov 0x38(%rbx),%r9
4f54(4): mov 0x10(%rbx),%rax
4f58(7): lea 0x1ad9(%rip),%rsi
4f5f(4): mov 0x8(%rbx),%r8
4f63(5): mov $0x5,%edx
4f68(2): xor %edi,%edi
4f6a(4): mov 0x30(%rbx),%r13
4f6e(4): mov 0x28(%rbx),%r12
4f72(5): mov %r9,0x10(%rsp)
4f77(4): mov 0x20(%rbx),%r15
4f7b(4): mov 0x18(%rbx),%r14
4f7f(4): mov %rax,(%rsp)
4f83(5): mov %r8,0x8(%rsp)
4f88(3): mov (%rbx),%rbx
4f8b(5): call 0xffffc845(%rip)
4f90(4): sub $0x8,%rsp
4f94(5): mov 0x18(%rsp),%r9
4f99(3): mov %rax,%rdx
4f9c(3): mov %rbx,%rcx
4f9f(5): mov $0x1,%esi
4fa4(3): mov %rbp,%rdi
4fa7(2): xor %eax,%eax
4fa9(2): push %r9
4fab(2): push %r13
4fad(2): push %r12
4faf(2): push %r15
4fb1(2): push %r14
4fb3(5): mov 0x30(%rsp),%r9
4fb8(5): mov 0x38(%rsp),%r8
4fbd(5): call 0xffffca73(%rip)
4fc2(4): add $0x30,%rsp
4fc6(4): add $0x28,%rsp
4fca(1): pop %rbx
4fcb(1): pop %rbp
4fcc(2): pop %r12
4fce(2): pop %r13
4fd0(2): pop %r14
4fd2(2): pop %r15
4fd4(1): ret near (%rsp)
4fd5(3): nop (%rax)
4fd8(3): mov %rcx,%r8
4fdb(3): mov %rdx,%rcx
4fde(7): lea 0x184f(%rip),%rdx
4fe5(5): mov $0x1,%esi
4fea(2): xor %eax,%eax
4fec(5): call 0xffffca44(%rip)
4ff1(5): jmp 0xfffffeeb(%rip)
4ff6(a): nop 0x0(%rax,%rax,1)
5000(4): mov 0x40(%rbx),%r10
5004(4): mov 0x38(%rbx),%r9
5008(7): lea 0x1a59(%rip),%rsi
500f(4): mov 0x10(%rbx),%rax
5013(4): mov 0x8(%rbx),%r8
5017(5): mov $0x5,%edx
501c(4): mov 0x30(%rbx),%r13
5020(4): mov 0x28(%rbx),%r12
5024(4): mov 0x20(%rbx),%r15
5028(4): mov 0x18(%rbx),%r14
502c(3): mov (%rbx),%rbx
502f(5): mov %r10,0x18(%rsp)
5034(5): mov %r9,0x10(%rsp)
5039(4): mov %rax,(%rsp)
503d(5): mov %r8,0x8(%rsp)
5042(2): xor %edi,%edi
5044(5): call 0xffffc78c(%rip)
5049(5): mov 0x18(%rsp),%r10
504e(2): push %r10
5050(5): jmp 0xffffff44(%rip)
5055(3): nop (%rax)
5058(3): mov (%rbx),%rbx
505b(7): lea 0x17dd(%rip),%rsi
5062(5): mov $0x5,%edx
5067(2): xor %edi,%edi
5069(5): call 0xffffc767(%rip)
506e(4): add $0x28,%rsp
5072(3): mov %rbx,%rcx
5075(3): mov %rbp,%rdi
5078(1): pop %rbx
5079(1): pop %rbp
507a(2): pop %r12
507c(2): pop %r13
507e(2): pop %r14
5080(2): pop %r15
5082(3): mov %rax,%rdx
5085(5): mov $0x1,%esi
508a(2): xor %eax,%eax
508c(5): jmp 0xffffc9a4(%rip)
5091(7): nop 0x0(%rax)
5098(4): mov 0x8(%rbx),%r12
509c(7): lea 0x17ac(%rip),%rsi
50a3(3): mov (%rbx),%rbx
50a6(5): mov $0x5,%edx
50ab(2): xor %edi,%edi
50ad(5): call 0xffffc723(%rip)
50b2(4): add $0x28,%rsp
50b6(3): mov %r12,%r8
50b9(3): mov %rbx,%rcx
50bc(3): mov %rbp,%rdi
50bf(3): mov %rax,%rdx
50c2(5): mov $0x1,%esi
50c7(1): pop %rbx
50c8(1): pop %rbp
50c9(2): pop %r12
50cb(2): pop %r13
50cd(2): pop %r14
50cf(2): pop %r15
50d1(2): xor %eax,%eax
50d3(5): jmp 0xffffc95d(%rip)
50d8(8): nop 0x0(%rax,%rax,1)
50e0(4): mov 0x10(%rbx),%r13
50e4(4): mov 0x8(%rbx),%r12
50e8(7): lea 0x1777(%rip),%rsi
50ef(3): mov (%rbx),%rbx
50f2(5): mov $0x5,%edx
50f7(2): xor %edi,%edi
50f9(5): call 0xffffc6d7(%rip)
50fe(4): add $0x28,%rsp
5102(3): mov %r13,%r9
5105(3): mov %r12,%r8
5108(3): mov %rbx,%rcx
510b(3): mov %rbp,%rdi
510e(3): mov %rax,%rdx
5111(1): pop %rbx
5112(1): pop %rbp
5113(2): pop %r12
5115(2): pop %r13
5117(2): pop %r14
5119(2): pop %r15
511b(5): mov $0x1,%esi
5120(2): xor %eax,%eax
5122(5): jmp 0xffffc90e(%rip)
5127(9): nop 0x0(%rax,%rax,1)
5130(7): lea 0x1861(%rip),%rsi
5137(5): mov $0x5,%edx
513c(2): xor %edi,%edi
513e(4): mov 0x18(%rbx),%r14
5142(4): mov 0x10(%rbx),%r13
5146(4): mov 0x8(%rbx),%r12
514a(3): mov (%rbx),%rbx
514d(5): call 0xffffc683(%rip)
5152(4): sub $0x8,%rsp
5156(2): push %r14
5158(3): mov %rax,%rdx
515b(3): mov %r13,%r9
515e(3): mov %r12,%r8
5161(3): mov %rbx,%rcx
5164(3): mov %rbp,%rdi
5167(5): mov $0x1,%esi
516c(2): xor %eax,%eax
516e(5): call 0xffffc8c2(%rip)
5173(1): pop %rax
5174(1): pop %rdx
5175(4): add $0x28,%rsp
5179(1): pop %rbx
517a(1): pop %rbp
517b(2): pop %r12
517d(2): pop %r13
517f(2): pop %r14
5181(2): pop %r15
5183(1): ret near (%rsp)
5184(4): nop 0x0(%rax)
5188(4): mov 0x20(%rbx),%r15
518c(7): lea 0x1825(%rip),%rsi
5193(5): mov $0x5,%edx
5198(2): xor %edi,%edi
519a(4): mov 0x18(%rbx),%r14
519e(4): mov 0x10(%rbx),%r13
51a2(4): mov 0x8(%rbx),%r12
51a6(3): mov (%rbx),%rbx
51a9(5): call 0xffffc627(%rip)
51ae(2): push %r15
51b0(2): jmp 0xffffffa6(%rip)
51b2(6): nop 0x0(%rax,%rax,1)
51b8(4): mov 0x8(%rbx),%r8
51bc(4): mov 0x28(%rbx),%r12
51c0(7): lea 0x1819(%rip),%rsi
51c7(4): mov 0x20(%rbx),%r15
51cb(4): mov 0x18(%rbx),%r14
51cf(5): mov $0x5,%edx
51d4(4): mov 0x10(%rbx),%r13
51d8(2): xor %edi,%edi
51da(3): mov (%rbx),%rbx
51dd(4): mov %r8,(%rsp)
51e1(5): call 0xffffc5ef(%rip)
51e6(4): sub $0x8,%rsp
51ea(3): mov %r13,%r9
51ed(2): push %r12
51ef(2): push %r15
51f1(2): push %r14
51f3(5): mov 0x20(%rsp),%r8
51f8(3): mov %rbx,%rcx
51fb(3): mov %rax,%rdx
51fe(3): mov %rbp,%rdi
5201(5): mov $0x1,%esi
5206(2): xor %eax,%eax
5208(5): call 0xffffc828(%rip)
520d(4): add $0x20,%rsp
5211(4): add $0x28,%rsp
5215(1): pop %rbx
5216(1): pop %rbp
5217(2): pop %r12
5219(2): pop %r13
521b(2): pop %r14
521d(2): pop %r15
521f(1): ret near (%rsp)
5220(4): mov 0x10(%rbx),%r9
5224(4): mov 0x30(%rbx),%r13
5228(7): lea 0x17d9(%rip),%rsi
522f(4): mov 0x28(%rbx),%r12
5233(4): mov 0x20(%rbx),%r15
5237(5): mov $0x5,%edx
523c(4): mov 0x18(%rbx),%r14
5240(4): mov 0x8(%rbx),%r8
5244(2): xor %edi,%edi
5246(5): mov %r9,0x8(%rsp)
524b(3): mov (%rbx),%rbx
524e(4): mov %r8,(%rsp)
5252(5): call 0xffffc57e(%rip)
5257(2): push %r13
5259(2): push %r12
525b(2): push %r15
525d(2): push %r14
525f(5): mov 0x28(%rsp),%r9
5264(2): jmp 0xffffff8f(%rip)
5266(a): nop 0x0(%rax,%rax,1)
5270(4): mov 0x40(%rbx),%r10
5274(4): mov 0x38(%rbx),%r9
5278(5): mov $0x5,%edx
527d(4): mov 0x10(%rbx),%rax
5281(4): mov 0x8(%rbx),%r8
5285(7): lea 0x1814(%rip),%rsi
528c(4): mov 0x30(%rbx),%r13
5290(4): mov 0x28(%rbx),%r12
5294(4): mov 0x20(%rbx),%r15
5298(4): mov 0x18(%rbx),%r14
529c(5): mov %r10,0x18(%rsp)
52a1(5): mov %r9,0x10(%rsp)
52a6(4): mov %rax,(%rsp)
52aa(5): mov %r8,0x8(%rsp)
52af(3): mov (%rbx),%rbx
52b2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
52c0(3): xor %r9d,%r9d
52c3(4): cmp $0x0,(%r8)
52c7(2): jz 0x14(%rip)
52c9(7): nop 0x0(%rax)
52d0(4): add $0x1,%r9
52d4(5): cmp $0x0,0x0(%r8,%r9,8)
52d9(2): jnz 0xfffffff7(%rip)
52db(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
52e0(4): sub $0x68,%rsp
52e4(3): mov %r8,%r10
52e7(3): xor %r9d,%r9d
52ea(9): mov $0x28,%rax
52f3(5): mov %rax,0x58(%rsp)
52f8(2): xor %eax,%eax
52fa(3): mov %rsp,%r8
52fd(3): nop (%rax)
5300(3): mov (%r10),%eax
5303(3): cmp $0x2f,%eax
5306(2): jnbe 0x44(%rip)
5308(3): mov %eax,%r11d
530b(4): add 0x10(%r10),%r11
530f(3): add $0x8,%eax
5312(3): mov %eax,(%r10)
5315(3): mov (%r11),%rax
5318(3): test %rax,%rax
531b(4): mov %rax,0x0(%r8,%r9,8)
531f(2): jz 0xc(%rip)
5321(4): add $0x1,%r9
5325(4): cmp $0xa,%r9
5329(2): jnz 0xffffffd7(%rip)
532b(5): call 0xfffffb75(%rip)
5330(5): mov 0x58(%rsp),%rax
5335(9): xor $0x28,%rax
533e(2): jnz 0x7(%rip)
5340(4): add $0x68,%rsp
5344(1): ret near (%rsp)
5345(5): call 0xffffc4bb(%rip)
534a(4): mov 0x8(%r10),%r11
534e(4): lea 0x8(%r11),%rax
5352(4): mov %rax,0x8(%r10)
5356(2): jmp 0xffffffbf(%rip)

"version_etc" :
5360(1): push %rbp
5361(1): push %rbx
5362(6): mov $0x20,%r10d
5368(3): xor %r11d,%r11d
536b(7): sub $0xb8,%rsp
5372(9): mov $0x28,%rax
537b(5): mov %rax,0x78(%rsp)
5380(2): xor %eax,%eax
5382(8): lea 0xd0(%rsp),%rax
538a(8): mov %r8,0xa0(%rsp)
5392(8): lea 0xd0(%rsp),%rbx
539a(5): lea 0x20(%rsp),%r8
539f(8): mov %r9,0xa8(%rsp)
53a7(8): mov $0x20,0x8(%rsp)
53af(5): mov %rax,0x10(%rsp)
53b4(8): lea 0x80(%rsp),%rax
53bc(3): xor %r9d,%r9d
53bf(5): mov %rax,0x18(%rsp)
53c4(3): mov %rax,%rbp
53c7(9): nop 0x0(%rax,%rax,1)
53d0(4): cmp $0x2f,%r10d
53d4(2): jnbe 0x58(%rip)
53d6(3): mov %r10d,%eax
53d9(6): mov $0x1,%r11d
53df(4): add $0x8,%r10d
53e3(3): add %rbp,%rax
53e6(3): mov (%rax),%rax
53e9(3): test %rax,%rax
53ec(4): mov %rax,0x0(%r8,%r9,8)
53f0(2): jz 0xc(%rip)
53f2(4): add $0x1,%r9
53f6(4): cmp $0xa,%r9
53fa(2): jnz 0xffffffd6(%rip)
53fc(3): test %r11b,%r11b
53ff(2): jnz 0x26(%rip)
5401(5): call 0xfffffa9f(%rip)
5406(5): mov 0x78(%rsp),%rax
540b(9): xor $0x28,%rax
5414(2): jnz 0xc(%rip)
5416(7): add $0xb8,%rsp
541d(1): pop %rbx
541e(1): pop %rbp
541f(1): ret near (%rsp)
5420(5): call 0xffffc3e0(%rip)
5425(5): mov %r10d,0x8(%rsp)
542a(2): jmp 0xffffffd7(%rip)
542c(3): mov %rbx,%rax
542f(4): add $0x8,%rbx
5433(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5440(1): push %rbx
5441(7): lea 0x143a(%rip),%rsi
5448(5): mov $0x5,%edx
544d(2): xor %edi,%edi
544f(5): call 0xffffc381(%rip)
5454(7): lea 0x143c(%rip),%rdx
545b(3): mov %rax,%rsi
545e(5): mov $0x1,%edi
5463(2): xor %eax,%eax
5465(5): call 0xffffc53b(%rip)
546a(7): lea 0x143c(%rip),%rsi
5471(5): mov $0x5,%edx
5476(2): xor %edi,%edi
5478(5): call 0xffffc358(%rip)
547d(7): lea 0xd7c(%rip),%rcx
5484(7): lea 0x903(%rip),%rdx
548b(3): mov %rax,%rsi
548e(5): mov $0x1,%edi
5493(2): xor %eax,%eax
5495(5): call 0xffffc50b(%rip)
549a(7): mov 0x202c07(%rip),%rbx
54a1(7): lea 0x1638(%rip),%rsi
54a8(2): xor %edi,%edi
54aa(5): mov $0x5,%edx
54af(5): call 0xffffc321(%rip)
54b4(3): mov %rbx,%rsi
54b7(3): mov %rax,%rdi
54ba(1): pop %rbx
54bb(5): jmp 0xffffc3e5(%rip)

"xmalloc" :
54c0(1): push %rbx
54c1(3): mov %rdi,%rbx
54c4(5): call 0xffffc46c(%rip)
54c9(3): test %rax,%rax
54cc(2): jnz 0x7(%rip)
54ce(3): test %rbx,%rbx
54d1(2): jnz 0x4(%rip)
54d3(1): pop %rbx
54d4(1): ret near (%rsp)
54d5(5): call 0x23b(%rip)

"xnmalloc" :
54e0(3): mov %rdi,%rax
54e3(3): mul %rax,%rsi,%rdx
54e6(3): mov %rax,%rdi
54e9(3): seto %al
54ec(3): test %rdi,%rdi
54ef(2): js 0xc(%rip)
54f1(3): movzx %al,%eax
54f4(3): test %rax,%rax
54f7(2): jnz 0x4(%rip)
54f9(2): jmp 0xffffffc7(%rip)
54fb(4): sub $0x8,%rsp
54ff(5): call 0x211(%rip)

"xrealloc" :
5520(3): test %rsi,%rsi
5523(1): push %rbx
5524(3): mov %rsi,%rbx
5527(2): jnz 0x7(%rip)
5529(3): test %rdi,%rdi
552c(2): jnz 0x1c(%rip)
552e(3): mov %rbx,%rsi
5531(5): call 0xffffc44f(%rip)
5536(3): test %rax,%rax
5539(2): jnz 0x7(%rip)
553b(3): test %rbx,%rbx
553e(2): jnz 0x13(%rip)
5540(1): pop %rbx
5541(1): ret near (%rsp)
5542(6): nop 0x0(%rax,%rax,1)
5548(5): call 0xffffc1a8(%rip)
554d(2): xor %eax,%eax
554f(1): pop %rbx
5550(1): ret near (%rsp)
5551(5): call 0x1bf(%rip)

"xnrealloc" :
5560(3): mov %rsi,%rax
5563(3): mul %rax,%rdx,%rdx
5566(3): mov %rax,%rsi
5569(3): seto %al
556c(3): test %rsi,%rsi
556f(2): js 0xc(%rip)
5571(3): movzx %al,%eax
5574(3): test %rax,%rax
5577(2): jnz 0x4(%rip)
5579(2): jmp 0xffffffa7(%rip)
557b(4): sub $0x8,%rsp
557f(5): call 0x191(%rip)

"x2nrealloc" :
5590(3): test %rdi,%rdi
5593(3): mov %rdx,%r9
5596(3): mov (%rsi),%rcx
5599(2): jz 0x37(%rip)
559b(2): xor %edx,%edx
559d(a): mov $0x6148914691236517204,%rax
55a7(3): div %r9,%rax
55aa(3): cmp %rcx,%rax
55ad(2): jbe 0x3e(%rip)
55af(3): mov %rcx,%rax
55b2(3): shr $0x1,%rax
55b5(5): lea 0x1(%rax,%rcx,1),%rcx
55ba(3): mov %rcx,(%rsi)
55bd(4): imul %r9,%rcx
55c1(3): mov %rcx,%rsi
55c4(5): jmp 0xffffff5c(%rip)
55c9(7): nop 0x0(%rax)
55d0(3): test %rcx,%rcx
55d3(2): jz 0x25(%rip)
55d5(3): mov %rcx,%rax
55d8(3): mul %rax,%r9,%rdx
55db(3): seto %dl
55de(3): test %rax,%rax
55e1(3): movzx %dl,%edx
55e4(2): js 0x7(%rip)
55e6(3): test %rdx,%rdx
55e9(2): jz 0xffffffd1(%rip)
55eb(4): sub $0x8,%rsp
55ef(5): call 0x121(%rip)
55f4(4): nop 0x0(%rax)
55f8(2): xor %edx,%edx
55fa(5): mov $0x80,%eax
55ff(3): xor %r8d,%r8d
5602(3): div %r9,%rax
5605(3): test %rax,%rax
5608(4): setz %r8b
560c(4): lea 0x0(%r8,%rax,1),%rcx
5610(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5620(3): test %rdi,%rdi
5623(3): mov (%rsi),%rax
5626(2): jz 0x2a(%rip)
5628(a): mov $0x6148914691236517203,%rdx
5632(3): cmp %rdx,%rax
5635(2): jnbe 0x2c(%rip)
5637(3): mov %rax,%rdx
563a(3): shr $0x1,%rdx
563d(5): lea 0x1(%rdx,%rax,1),%rax
5642(3): mov %rax,(%rsi)
5645(3): mov %rax,%rsi
5648(5): jmp 0xfffffed8(%rip)
564d(3): nop (%rax)
5650(3): test %rax,%rax
5653(5): mov $0x80,%edx
5658(4): cmove %rdx,%rax
565c(3): test %rax,%rax
565f(2): jns 0xffffffe3(%rip)
5661(4): sub $0x8,%rsp
5665(5): call 0xab(%rip)

"xzalloc" :
5670(1): push %rbx
5671(3): mov %rdi,%rbx
5674(5): call 0xfffffe4c(%rip)
5679(3): mov %rbx,%rdx
567c(2): xor %esi,%esi
567e(3): mov %rax,%rdi
5681(1): pop %rbx
5682(5): jmp 0xffffc1fe(%rip)

"xcalloc" :
5690(3): mov %rdi,%rax
5693(4): sub $0x8,%rsp
5697(3): mul %rax,%rsi,%rdx
569a(3): seto %dl
569d(3): test %rax,%rax
56a0(2): js 0x19(%rip)
56a2(3): movzx %dl,%edx
56a5(3): test %rdx,%rdx
56a8(2): jnz 0x11(%rip)
56aa(5): call 0xffffc206(%rip)
56af(3): test %rax,%rax
56b2(2): jz 0x7(%rip)
56b4(4): add $0x8,%rsp
56b8(1): ret near (%rsp)
56b9(5): call 0x57(%rip)

"xmemdup" :
56c0(1): push %rbp
56c1(1): push %rbx
56c2(3): mov %rdi,%rbp
56c5(3): mov %rsi,%rdi
56c8(3): mov %rsi,%rbx
56cb(4): sub $0x8,%rsp
56cf(5): call 0xfffffdf1(%rip)
56d4(4): add $0x8,%rsp
56d8(3): mov %rbx,%rdx
56db(3): mov %rbp,%rsi
56de(1): pop %rbx
56df(1): pop %rbp
56e0(3): mov %rax,%rdi
56e3(5): jmp 0xffffc1fd(%rip)

"xstrdup" :
56f0(1): push %rbx
56f1(3): mov %rdi,%rbx
56f4(5): call 0xffffc0fc(%rip)
56f9(3): mov %rbx,%rdi
56fc(4): lea 0x1(%rax),%rsi
5700(1): pop %rbx
5701(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5710(7): lea 0x1478(%rip),%rsi
5717(4): sub $0x8,%rsp
571b(5): mov $0x5,%edx
5720(2): xor %edi,%edi
5722(5): call 0xffffc0ae(%rip)
5727(6): mov 0x2028f3(%rip),%edi
572d(7): lea 0xbcd(%rip),%rdx
5734(3): mov %rax,%rcx
5737(2): xor %esi,%esi
5739(2): xor %eax,%eax
573b(5): call 0xffffc295(%rip)
5740(5): call 0xffffbfd0(%rip)

"rpl_fclose" :
5750(2): push %r12
5752(1): push %rbp
5753(1): push %rbx
5754(3): mov %rdi,%rbx
5757(5): call 0xffffc1b9(%rip)
575c(2): test %eax,%eax
575e(3): mov %rbx,%rdi
5761(2): js 0x56(%rip)
5763(5): call 0xffffc1fd(%rip)
5768(2): test %eax,%eax
576a(2): jnz 0x2e(%rip)
576c(3): mov %rbx,%rdi
576f(5): call 0x61(%rip)
5774(2): test %eax,%eax
5776(2): jz 0x3e(%rip)
5778(5): call 0xffffbfa8(%rip)
577d(3): mov (%rax),%r12d
5780(3): mov %rbx,%rdi
5783(3): mov %rax,%rbp
5786(5): call 0xffffc01a(%rip)
578b(3): test %r12d,%r12d
578e(2): jnz 0x32(%rip)
5790(1): pop %rbx
5791(1): pop %rbp
5792(2): pop %r12
5794(1): ret near (%rsp)
5795(3): nop (%rax)
5798(3): mov %rbx,%rdi
579b(5): call 0xffffc175(%rip)
57a0(2): xor %esi,%esi
57a2(5): mov $0x1,%edx
57a7(2): mov %eax,%edi
57a9(5): call 0xffffc0c7(%rip)
57ae(4): cmp $0xffffffff,%rax
57b2(2): jnz 0xffffffba(%rip)
57b4(3): mov %rbx,%rdi
57b7(1): pop %rbx
57b8(1): pop %rbp
57b9(2): pop %r12
57bb(5): jmp 0xffffbfe5(%rip)
57c0(4): mov %r12d,0x0(%rbp)
57c4(5): mov $0xffffffff,%eax
57c9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
57d0(3): test %rdi,%rdi
57d3(1): push %rbx
57d4(3): mov %rdi,%rbx
57d7(2): jz 0x13(%rip)
57d9(5): call 0xffffc187(%rip)
57de(2): test %eax,%eax
57e0(2): jz 0xa(%rip)
57e2(6): test $0x100,(%rbx)
57e8(2): jnz 0x10(%rip)
57ea(3): mov %rbx,%rdi
57ed(1): pop %rbx
57ee(5): jmp 0xffffc152(%rip)
57f3(5): nop 0x0(%rax,%rax,1)
57f8(3): mov %rbx,%rdi
57fb(5): mov $0x1,%edx
5800(2): xor %esi,%esi
5802(5): call 0xe(%rip)
5807(3): mov %rbx,%rdi
580a(1): pop %rbx
580b(5): jmp 0xffffc135(%rip)

"rpl_fseeko" :
5810(4): mov 0x8(%rdi),%rax
5814(4): cmp %rax,0x10(%rdi)
5818(2): jz 0x8(%rip)
581a(5): jmp 0xffffc1c6(%rip)
581f(1): nop 
5820(4): mov 0x20(%rdi),%rax
5824(4): cmp %rax,0x28(%rdi)
5828(2): jnz 0xfffffff2(%rip)
582a(5): cmp $0x0,0x48(%rdi)
582f(2): jnz 0xffffffeb(%rip)
5831(2): push %r12
5833(1): push %rbp
5834(3): mov %edx,%r12d
5837(1): push %rbx
5838(3): mov %rsi,%rbp
583b(3): mov %rdi,%rbx
583e(5): call 0xffffc0d2(%rip)
5843(3): mov %r12d,%edx
5846(3): mov %rbp,%rsi
5849(2): mov %eax,%edi
584b(5): call 0xffffc025(%rip)
5850(4): cmp $0xffffffff,%rax
5854(2): jz 0xe(%rip)
5856(3): and $0xef,(%rbx)
5859(7): mov %rax,0x90(%rbx)
5860(2): xor %eax,%eax
5862(1): pop %rbx
5863(1): pop %rbp
5864(2): pop %r12
5866(1): ret near (%rsp)

"rpl_mbrtowc" :
5870(2): push %r13
5872(2): push %r12
5874(3): mov %rsi,%r13
5877(1): push %rbp
5878(1): push %rbx
5879(3): mov %rdi,%rbx
587c(3): mov %rdx,%r12
587f(4): sub $0x18,%rsp
5883(9): mov $0x28,%rax
588c(5): mov %rax,0x8(%rsp)
5891(2): xor %eax,%eax
5893(5): lea 0x4(%rsp),%rax
5898(3): test %rdi,%rdi
589b(4): cmove %rax,%rbx
589f(3): mov %rbx,%rdi
58a2(5): call 0xffffbf7e(%rip)
58a7(4): cmp $0xfffffffd,%rax
58ab(3): mov %rax,%rbp
58ae(2): jbe 0x22(%rip)
58b0(3): test %r12,%r12
58b3(2): jz 0x1d(%rip)
58b5(2): xor %edi,%edi
58b7(5): call 0xffffd7b9(%rip)
58bc(2): test %al,%al
58be(2): jnz 0x12(%rip)
58c0(5): movzx 0x0(%r13),%eax
58c5(5): mov $0x1,%ebp
58ca(2): mov %eax,(%rbx)
58cc(4): nop 0x0(%rax)
58d0(5): mov 0x8(%rsp),%rdx
58d5(9): xor $0x28,%rdx
58de(3): mov %rbp,%rax
58e1(2): jnz 0xd(%rip)
58e3(4): add $0x18,%rsp
58e7(1): pop %rbx
58e8(1): pop %rbp
58e9(2): pop %r12
58eb(2): pop %r13
58ed(1): ret near (%rsp)
58ee(5): call 0xffffbf12(%rip)

"extract_trimmed_name" :
5900(1): push %rbp
5901(1): push %rbx
5902(3): mov %rdi,%rbp
5905(5): mov $0x21,%edi
590a(4): sub $0x8,%rsp
590e(5): call 0xfffffbb2(%rip)
5913(4): lea 0x2c(%rbp),%rsi
5917(3): mov %rax,%rbx
591a(5): mov $0x20,%edx
591f(3): mov %rax,%rdi
5922(5): call 0xffffbe0e(%rip)
5927(3): mov %rbx,%rdi
592a(4): mov $0x0,0x20(%rbx)
592e(5): call 0xffffbec2(%rip)
5933(3): add %rbx,%rax
5936(3): cmp %rax,%rbx
5939(2): jnb 0x8(%rip)
593b(4): cmp $0x20,0xffffffff(%rax)
593f(2): jz 0x11(%rip)
5941(4): add $0x8,%rsp
5945(3): mov %rbx,%rax
5948(1): pop %rbx
5949(1): pop %rbp
594a(1): ret near (%rsp)
594b(5): nop 0x0(%rax,%rax,1)
5950(4): sub $0x1,%rax
5954(3): mov $0x0,(%rax)
5957(3): cmp %rax,%rbx
595a(2): jnz 0xffffffe1(%rip)
595c(2): jmp 0xffffffe5(%rip)

"read_utmp" :
5960(2): push %r15
5962(2): push %r14
5964(3): xor %r14d,%r14d
5967(2): push %r13
5969(3): mov %ecx,%r13d
596c(2): push %r12
596e(1): push %rbp
596f(1): push %rbx
5970(3): mov %r13d,%r12d
5973(2): xor %ebx,%ebx
5975(2): xor %ebp,%ebp
5977(4): and $0x2,%r12d
597b(4): sub $0x18,%rsp
597f(4): and $0x1,%r13d
5983(4): mov %rsi,(%rsp)
5987(5): mov %rdx,0x8(%rsp)
598c(5): call 0xffffbd54(%rip)
5991(5): call 0xffffbf3f(%rip)
5996(5): call 0xffffc02a(%rip)
599b(3): test %rax,%rax
599e(3): mov %rax,%r15
59a1(2): jz 0x70(%rip)
59a3(5): cmp $0x7,(%r15)
59a8(2): jnz 0xd(%rip)
59aa(5): cmp $0x0,0x2c(%r15)
59af(6): jnz 0x91(%rip)
59b5(3): test %r12d,%r12d
59b8(2): jnz 0xffffffde(%rip)
59ba(3): cmp %rbx,%rbp
59bd(6): jz 0xc3(%rip)
59c3(4): lea 0x0(%rbx,%rbx,2),%rax
59c7(3): mov (%r15),%rdx
59ca(3): mov %r15,%rsi
59cd(4): add $0x1,%rbx
59d1(4): shl/sal $0x7,%rax
59d5(3): add %r14,%rax
59d8(3): mov %rdx,(%rax)
59db(4): lea 0x8(%rax),%rdi
59df(7): mov 0x178(%r15),%rdx
59e6(4): and $0xfffffff8,%rdi
59ea(7): mov %rdx,0x178(%rax)
59f1(3): sub %rdi,%rax
59f4(3): sub %rax,%rsi
59f7(5): add $0x180,%eax
59fc(3): shr $0x3,%eax
59ff(2): mov %eax,%ecx
5a01(3): REP movsd rsi(%ds,10),rdi(%es,10)
5a04(5): call 0xffffbfbc(%rip)
5a09(3): test %rax,%rax
5a0c(3): mov %rax,%r15
5a0f(2): jnz 0xffffff94(%rip)
5a11(5): call 0xffffbd7f(%rip)
5a16(4): mov (%rsp),%rax
5a1a(3): mov %rbx,(%rax)
5a1d(5): mov 0x8(%rsp),%rax
5a22(3): mov %r14,(%rax)
5a25(4): add $0x18,%rsp
5a29(2): xor %eax,%eax
5a2b(1): pop %rbx
5a2c(1): pop %rbp
5a2d(2): pop %r12
5a2f(2): pop %r13
5a31(2): pop %r14
5a33(2): pop %r15
5a35(1): ret near (%rsp)
5a36(a): nop 0x0(%rax,%rax,1)
5a40(4): mov 0x4(%r15),%edi
5a44(2): test %edi,%edi
5a46(6): jle 0xffffff74(%rip)
5a4c(3): test %r13b,%r13b
5a4f(6): jz 0xffffff6b(%rip)
5a55(2): xor %esi,%esi
5a57(5): call 0xffffbe99(%rip)
5a5c(2): test %eax,%eax
5a5e(6): jns 0xffffff5c(%rip)
5a64(5): call 0xffffbcbc(%rip)
5a69(3): cmp $0x3,(%rax)
5a6c(6): jz 0xffffff2a(%rip)
5a72(3): cmp %rbx,%rbp
5a75(6): jnz 0xffffff4e(%rip)
5a7b(5): nop 0x0(%rax,%rax,1)
5a80(3): test %r14,%r14
5a83(2): jz 0x35(%rip)
5a85(a): mov $0x16012798675095095,%rax
5a8f(3): cmp %rax,%rbp
5a92(2): jnbe 0x4b(%rip)
5a94(3): mov %rbp,%rax
5a97(3): shr $0x1,%rax
5a9a(5): lea 0x1(%rbp,%rax,1),%rbp
5a9f(5): lea 0x0(%rbp,%rbp,2),%rsi
5aa4(3): mov %r14,%rdi
5aa7(4): shl/sal $0x7,%rsi
5aab(5): call 0xfffffa75(%rip)
5ab0(3): mov %rax,%r14
5ab3(5): jmp 0xffffff10(%rip)
5ab8(3): test %rbp,%rbp
5abb(5): mov $0x1,%eax
5ac0(5): mov $0x180,%edx
5ac5(4): cmove %rax,%rbp
5ac9(3): mov %rdx,%rax
5acc(2): xor %esi,%esi
5ace(3): mul %rax,%rbp,%rdx
5ad1(2): jo 0x11(%rip)
5ad3(3): test %rax,%rax
5ad6(2): js 0x7(%rip)
5ad8(3): test %rsi,%rsi
5adb(2): jz 0xffffffc4(%rip)
5add(5): call 0xfffffc33(%rip)
5ae2(5): mov $0x1,%esi
5ae7(2): jmp 0xffffffec(%rip)

"close_stream" :
5af0(2): push %r12
5af2(1): push %rbp
5af3(3): mov %rdi,%rbp
5af6(1): push %rbx
5af7(5): call 0xffffbc69(%rip)
5afc(3): mov 0x0(%rbp),%ebx
5aff(3): mov %rbp,%rdi
5b02(3): mov %rax,%r12
5b05(5): call 0xfffffc4b(%rip)
5b0a(3): and $0x20,%ebx
5b0d(2): test %ebx,%ebx
5b0f(2): jnz 0x19(%rip)
5b11(2): test %eax,%eax
5b13(2): jz 0xc(%rip)
5b15(3): test %r12,%r12
5b18(5): mov $0xffffffff,%eax
5b1d(2): jz 0x3b(%rip)
5b1f(1): pop %rbx
5b20(1): pop %rbp
5b21(2): pop %r12
5b23(1): ret near (%rsp)
5b24(4): nop 0x0(%rax)
5b28(2): test %eax,%eax
5b2a(2): jnz 0x1e(%rip)
5b2c(5): call 0xffffbbf4(%rip)
5b31(6): mov $0x0,(%rax)
5b37(5): mov $0xffffffff,%eax
5b3c(1): pop %rbx
5b3d(1): pop %rbp
5b3e(2): pop %r12
5b40(1): ret near (%rsp)
5b41(7): nop 0x0(%rax)
5b48(1): pop %rbx
5b49(5): mov $0xffffffff,%eax
5b4e(1): pop %rbp
5b4f(2): pop %r12
5b51(1): ret near (%rsp)
5b52(6): nop 0x0(%rax,%rax,1)
5b58(5): call 0xffffbbc8(%rip)
5b5d(3): cmp $0x9,(%rax)
5b60(1): pop %rbx
5b61(1): pop %rbp
5b62(2): pop %r12
5b64(3): setnz %al
5b67(3): movzx %al,%eax
5b6a(2): neg %eax
5b6c(1): ret near (%rsp)

"locale_charset" :
5b70(4): sub $0x8,%rsp
5b74(5): mov $0xe,%edi
5b79(5): call 0xffffbdd7(%rip)
5b7e(3): test %rax,%rax
5b81(2): jz 0x1f(%rip)
5b83(3): cmp $0x0,(%rax)
5b86(7): lea 0x1013(%rip),%rdx
5b8d(4): cmove %rdx,%rax
5b91(4): add $0x8,%rsp
5b95(1): ret near (%rsp)
5b96(a): nop 0x0(%rax,%rax,1)
5ba0(7): lea 0xff9(%rip),%rax
5ba7(4): add $0x8,%rsp
5bab(1): ret near (%rsp)

"__libc_csu_init" :
5bb0(2): push %r15
5bb2(2): push %r14
5bb4(3): mov %rdx,%r15
5bb7(2): push %r13
5bb9(2): push %r12
5bbb(7): lea 0x201f4e(%rip),%r12
5bc2(1): push %rbp
5bc3(7): lea 0x201f4e(%rip),%rbp
5bca(1): push %rbx
5bcb(3): mov %edi,%r13d
5bce(3): mov %rsi,%r14
5bd1(3): sub %r12,%rbp
5bd4(4): sub $0x8,%rsp
5bd8(4): sar $0x3,%rbp
5bdc(5): call 0xffffbac4(%rip)
5be1(3): test %rbp,%rbp
5be4(2): jz 0x22(%rip)
5be6(2): xor %ebx,%ebx
5be8(8): nop 0x0(%rax,%rax,1)
5bf0(3): mov %r15,%rdx
5bf3(3): mov %r14,%rsi
5bf6(3): mov %r13d,%edi
5bf9(4): call 0x0(%r12,%rbx,8)
5bfd(4): add $0x1,%rbx
5c01(3): cmp %rbx,%rbp
5c04(2): jnz 0xffffffec(%rip)
5c06(4): add $0x8,%rsp
5c0a(1): pop %rbx
5c0b(1): pop %rbp
5c0c(2): pop %r12
5c0e(2): pop %r13
5c10(2): pop %r14
5c12(2): pop %r15
5c14(1): ret near (%rsp)

"atexit" :
5c30(7): mov 0x2023d1(%rip),%rdx
5c37(2): xor %esi,%esi
5c39(5): jmp 0xffffbdc7(%rip)

"_fini" :
5c40(4): sub $0x8,%rsp
5c44(4): add $0x8,%rsp
5c48(1): ret near (%rsp)

