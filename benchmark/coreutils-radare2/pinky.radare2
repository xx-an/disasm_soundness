;-- section..plt:
;-- .plt:
0x000016c0      ff350a672000   push qword [0x00207dd0]                 ; [12] -r-x section size 1008 named .plt
0x000016c6      ff250c672000   jmp qword [0x00207dd8]                  ; [0x207dd8:8]=0
0x000016cc      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x000016d0      ff250a672000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x207de0:8]=0x16d6
0x000016d6      6800000000     push 0
0x000016db      e9e0ffffff     jmp sym..plt
;-- imp.utmpxname:
0x000016e0      ff2502672000   jmp qword [reloc.utmpxname]             ; [0x207de8:8]=0x16e6
0x000016e6      6801000000     push 1
0x000016eb      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x000016f0      ff25fa662000   jmp qword [reloc.free]                  ; [0x207df0:8]=0x16f6
0x000016f6      6802000000     push 2
0x000016fb      e9c0ffffff     jmp sym..plt
;-- imp.localtime:
0x00001700      ff25f2662000   jmp qword [reloc.localtime]             ; [0x207df8:8]=0x1706
0x00001706      6803000000     push 3
0x0000170b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001710      ff25ea662000   jmp qword [reloc.abort]                 ; [0x207e00:8]=0x1716
0x00001716      6804000000     push 4
0x0000171b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001720      ff25e2662000   jmp qword [reloc.__errno_location]      ; [0x207e08:8]=0x1726 ; "&\x17"
0x00001726      6805000000     push 5
0x0000172b      e990ffffff     jmp sym..plt
;-- imp.strncpy:
0x00001730      ff25da662000   jmp qword [reloc.strncpy]               ; [0x207e10:8]=0x1736 ; "6\x17"
0x00001736      6806000000     push 6
0x0000173b      e980ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001740      ff25d2662000   jmp qword [reloc.strncmp]               ; [0x207e18:8]=0x1746 ; "F\x17"
0x00001746      6807000000     push 7
0x0000174b      e970ffffff     jmp sym..plt
;-- imp._exit:
0x00001750      ff25ca662000   jmp qword [reloc._exit]                 ; [0x207e20:8]=0x1756 ; "V\x17"
0x00001756      6808000000     push 8
0x0000175b      e960ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001760      ff25c2662000   jmp qword [reloc.__fpending]            ; [0x207e28:8]=0x1766 ; "f\x17"
0x00001766      6809000000     push 9
0x0000176b      e950ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001770      ff25ba662000   jmp qword [reloc.fread_unlocked]        ; [0x207e30:8]=0x1776 ; "v\x17"
0x00001776      680a000000     push 0xa
0x0000177b      e940ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001780      ff25b2662000   jmp qword [reloc.textdomain]            ; [0x207e38:8]=0x1786
0x00001786      680b000000     push 0xb
0x0000178b      e930ffffff     jmp sym..plt
;-- imp.endutxent:
0x00001790      ff25aa662000   jmp qword [reloc.endutxent]             ; [0x207e40:8]=0x1796
0x00001796      680c000000     push 0xc
0x0000179b      e920ffffff     jmp sym..plt
;-- imp.fclose:
0x000017a0      ff25a2662000   jmp qword [reloc.fclose]                ; [0x207e48:8]=0x17a6
0x000017a6      680d000000     push 0xd
0x000017ab      e910ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000017b0      ff259a662000   jmp qword [reloc.bindtextdomain]        ; [0x207e50:8]=0x17b6
0x000017b6      680e000000     push 0xe
0x000017bb      e900ffffff     jmp sym..plt
;-- imp.stpcpy:
0x000017c0      ff2592662000   jmp qword [reloc.stpcpy]                ; [0x207e58:8]=0x17c6
0x000017c6      680f000000     push 0xf
0x000017cb      e9f0feffff     jmp sym..plt
;-- imp.dcgettext:
0x000017d0      ff258a662000   jmp qword [reloc.dcgettext]             ; [0x207e60:8]=0x17d6
0x000017d6      6810000000     push 0x10
0x000017db      e9e0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000017e0      ff2582662000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207e68:8]=0x17e6
0x000017e6      6811000000     push 0x11
0x000017eb      e9d0feffff     jmp sym..plt
;-- imp.strlen:
0x000017f0      ff257a662000   jmp qword [reloc.strlen]                ; [0x207e70:8]=0x17f6
0x000017f6      6812000000     push 0x12
0x000017fb      e9c0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001800      ff2572662000   jmp qword [reloc.__stack_chk_fail]      ; [0x207e78:8]=0x1806
0x00001806      6813000000     push 0x13
0x0000180b      e9b0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001810      ff256a662000   jmp qword [reloc.getopt_long]           ; [0x207e80:8]=0x1816
0x00001816      6814000000     push 0x14
0x0000181b      e9a0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001820      ff2562662000   jmp qword [reloc.mbrtowc]               ; [0x207e88:8]=0x1826 ; "&\x18"
0x00001826      6815000000     push 0x15
0x0000182b      e990feffff     jmp sym..plt
;-- imp.strchr:
0x00001830      ff255a662000   jmp qword [reloc.strchr]                ; [0x207e90:8]=0x1836 ; "6\x18"
0x00001836      6816000000     push 0x16
0x0000183b      e980feffff     jmp sym..plt
;-- imp.gai_strerror:
0x00001840      ff2552662000   jmp qword [reloc.gai_strerror]          ; [0x207e98:8]=0x1846 ; "F\x18"
0x00001846      6817000000     push 0x17
0x0000184b      e970feffff     jmp sym..plt
;-- imp.__overflow:
0x00001850      ff254a662000   jmp qword [reloc.__overflow]            ; [0x207ea0:8]=0x1856 ; "V\x18"
0x00001856      6818000000     push 0x18
0x0000185b      e960feffff     jmp sym..plt
;-- imp.strrchr:
0x00001860      ff2542662000   jmp qword [reloc.strrchr]               ; [0x207ea8:8]=0x1866 ; "f\x18"
0x00001866      6819000000     push 0x19
0x0000186b      e950feffff     jmp sym..plt
;-- imp.lseek:
0x00001870      ff253a662000   jmp qword [reloc.lseek]                 ; [0x207eb0:8]=0x1876 ; "v\x18"
0x00001876      681a000000     push 0x1a
0x0000187b      e940feffff     jmp sym..plt
;-- imp.memset:
0x00001880      ff2532662000   jmp qword [reloc.memset]                ; [0x207eb8:8]=0x1886
0x00001886      681b000000     push 0x1b
0x0000188b      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001890      ff252a662000   jmp qword [reloc.memcmp]                ; [0x207ec0:8]=0x1896
0x00001896      681c000000     push 0x1c
0x0000189b      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000018a0      ff2522662000   jmp qword [reloc.fputs_unlocked]        ; [0x207ec8:8]=0x18a6
0x000018a6      681d000000     push 0x1d
0x000018ab      e910feffff     jmp sym..plt
;-- imp.calloc:
0x000018b0      ff251a662000   jmp qword [reloc.calloc]                ; [0x207ed0:8]=0x18b6
0x000018b6      681e000000     push 0x1e
0x000018bb      e900feffff     jmp sym..plt
;-- imp.getpwnam:
0x000018c0      ff2512662000   jmp qword [reloc.getpwnam]              ; [0x207ed8:8]=0x18c6
0x000018c6      681f000000     push 0x1f
0x000018cb      e9f0fdffff     jmp sym..plt
;-- imp.setutxent:
0x000018d0      ff250a662000   jmp qword [reloc.setutxent]             ; [0x207ee0:8]=0x18d6
0x000018d6      6820000000     push 0x20                               ; "@"
0x000018db      e9e0fdffff     jmp sym..plt
;-- imp.memcpy:
0x000018e0      ff2502662000   jmp qword [reloc.memcpy]                ; [0x207ee8:8]=0x18e6
0x000018e6      6821000000     push 0x21                               ; '!'
0x000018eb      e9d0fdffff     jmp sym..plt
;-- imp.kill:
0x000018f0      ff25fa652000   jmp qword [reloc.kill]                  ; [0x207ef0:8]=0x18f6
0x000018f6      6822000000     push 0x22                               ; '"'
0x000018fb      e9c0fdffff     jmp sym..plt
;-- imp.time:
0x00001900      ff25f2652000   jmp qword [reloc.time]                  ; [0x207ef8:8]=0x1906
0x00001906      6823000000     push 0x23                               ; '#'
0x0000190b      e9b0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001910      ff25ea652000   jmp qword [reloc.fileno]                ; [0x207f00:8]=0x1916
0x00001916      6824000000     push 0x24                               ; '$'
0x0000191b      e9a0fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001920      ff25e2652000   jmp qword [reloc.__xstat]               ; [0x207f08:8]=0x1926 ; "&\x19"
0x00001926      6825000000     push 0x25                               ; '%'
0x0000192b      e990fdffff     jmp sym..plt
;-- imp.malloc:
0x00001930      ff25da652000   jmp qword [reloc.malloc]                ; [0x207f10:8]=0x1936 ; "6\x19"
0x00001936      6826000000     push 0x26                               ; '&'
0x0000193b      e980fdffff     jmp sym..plt
;-- imp.fflush:
0x00001940      ff25d2652000   jmp qword [reloc.fflush]                ; [0x207f18:8]=0x1946 ; "F\x19"
0x00001946      6827000000     push 0x27                               ; '''
0x0000194b      e970fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001950      ff25ca652000   jmp qword [reloc.nl_langinfo]           ; [0x207f20:8]=0x1956 ; "V\x19"
0x00001956      6828000000     push 0x28                               ; '('
0x0000195b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001960      ff25c2652000   jmp qword [reloc.__freading]            ; [0x207f28:8]=0x1966 ; "f\x19"
0x00001966      6829000000     push 0x29                               ; ')'
0x0000196b      e950fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001970      ff25ba652000   jmp qword [reloc.fwrite_unlocked]       ; [0x207f30:8]=0x1976 ; "v\x19"
0x00001976      682a000000     push 0x2a                               ; '*'
0x0000197b      e940fdffff     jmp sym..plt
;-- imp.realloc:
0x00001980      ff25b2652000   jmp qword [reloc.realloc]               ; [0x207f38:8]=0x1986
0x00001986      682b000000     push 0x2b                               ; '+'
0x0000198b      e930fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001990      ff25aa652000   jmp qword [reloc.setlocale]             ; [0x207f40:8]=0x1996
0x00001996      682c000000     push 0x2c                               ; ','
0x0000199b      e920fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000019a0      ff25a2652000   jmp qword [reloc.__printf_chk]          ; [0x207f48:8]=0x19a6
0x000019a6      682d000000     push 0x2d                               ; '-'
0x000019ab      e910fdffff     jmp sym..plt
;-- imp.strftime:
0x000019b0      ff259a652000   jmp qword [reloc.strftime]              ; [0x207f50:8]=0x19b6
0x000019b6      682e000000     push 0x2e                               ; '.'
0x000019bb      e900fdffff     jmp sym..plt
;-- imp.getutxent:
0x000019c0      ff2592652000   jmp qword [reloc.getutxent]             ; [0x207f58:8]=0x19c6
0x000019c6      682f000000     push 0x2f                               ; '/'
0x000019cb      e9f0fcffff     jmp sym..plt
;-- imp.error:
0x000019d0      ff258a652000   jmp qword [reloc.error]                 ; [0x207f60:8]=0x19d6
0x000019d6      6830000000     push 0x30                               ; '0'
0x000019db      e9e0fcffff     jmp sym..plt
;-- imp.fseeko:
0x000019e0      ff2582652000   jmp qword [reloc.fseeko]                ; [0x207f68:8]=0x19e6
0x000019e6      6831000000     push 0x31                               ; '1'
0x000019eb      e9d0fcffff     jmp sym..plt
;-- imp.fopen:
0x000019f0      ff257a652000   jmp qword [reloc.fopen]                 ; [0x207f70:8]=0x19f6
0x000019f6      6832000000     push 0x32                               ; '2'
0x000019fb      e9c0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001a00      ff2572652000   jmp qword [reloc.__cxa_atexit]          ; [0x207f78:8]=0x1a06
0x00001a06      6833000000     push 0x33                               ; '3'
0x00001a0b      e9b0fcffff     jmp sym..plt
;-- imp.exit:
0x00001a10      ff256a652000   jmp qword [reloc.exit]                  ; [0x207f80:8]=0x1a16
0x00001a16      6834000000     push 0x34                               ; '4'
0x00001a1b      e9a0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001a20      ff2562652000   jmp qword [reloc.fwrite]                ; [0x207f88:8]=0x1a26 ; "&\x1a"
0x00001a26      6835000000     push 0x35                               ; '5'
0x00001a2b      e990fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001a30      ff255a652000   jmp qword [reloc.__fprintf_chk]         ; [0x207f90:8]=0x1a36 ; "6\x1a"
0x00001a36      6836000000     push 0x36                               ; '6'
0x00001a3b      e980fcffff     jmp sym..plt
;-- imp.getaddrinfo:
0x00001a40      ff2552652000   jmp qword [reloc.getaddrinfo]           ; [0x207f98:8]=0x1a46 ; "F\x1a"
0x00001a46      6837000000     push 0x37                               ; '7'
0x00001a4b      e970fcffff     jmp sym..plt
;-- imp.strdup:
0x00001a50      ff254a652000   jmp qword [reloc.strdup]                ; [0x207fa0:8]=0x1a56 ; "V\x1a"
0x00001a56      6838000000     push 0x38                               ; '8'
0x00001a5b      e960fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001a60      ff2542652000   jmp qword [reloc.mbsinit]               ; [0x207fa8:8]=0x1a66 ; "f\x1a"
0x00001a66      6839000000     push 0x39                               ; '9'
0x00001a6b      e950fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001a70      ff253a652000   jmp qword [reloc.iswprint]              ; [0x207fb0:8]=0x1a76 ; "v\x1a"
0x00001a76      683a000000     push 0x3a                               ; ':'
0x00001a7b      e940fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001a80      ff2532652000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fb8:8]=0x1a86
0x00001a86      683b000000     push 0x3b                               ; ';'
0x00001a8b      e930fcffff     jmp sym..plt
;-- imp.freeaddrinfo:
0x00001a90      ff252a652000   jmp qword [reloc.freeaddrinfo]          ; [0x207fc0:8]=0x1a96
0x00001a96      683c000000     push 0x3c                               ; '<'
0x00001a9b      e920fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001aa0      ff2522652000   jmp qword [reloc.__sprintf_chk]         ; [0x207fc8:8]=0x1aa6
0x00001aa6      683d000000     push 0x3d                               ; '='
0x00001aab      e910fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001ab0      .qword 0x90660020653a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001ab8      0000           add byte [rax], al
0x00001aba      0000           add byte [rax], al
0x00001abc      0000           add byte [rax], al
0x00001abe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001ac0      4157           push r15                                ; [14] -r-x section size 16766 named .text
0x00001ac2      4156           push r14
0x00001ac4      4155           push r13
0x00001ac6      4154           push r12
0x00001ac8      4c8d25516020.  lea r12, obj.longopts                   ; 0x207b20 ; "]^"
0x00001acf      55             push rbp
0x00001ad0      53             push rbx
0x00001ad1      89fd           mov ebp, edi
0x00001ad3      4889f3         mov rbx, rsi
0x00001ad6      4883ec28       sub rsp, 0x28
0x00001ada      488b3e         mov rdi, qword [rsi]
0x00001add      64488b042528.  mov rax, qword fs:[0x28]
0x00001ae6      4889442418     mov qword [rsp + 0x18], rax
0x00001aeb      31c0           xor eax, eax
0x00001aed      e87e160000     call sym.set_program_name
0x00001af2      488d35884d00.  lea rsi, [0x00006881]
0x00001af9      bf06000000     mov edi, 6
0x00001afe      e88dfeffff     call sym.imp.setlocale
0x00001b03      488d35b14200.  lea rsi, str.usr_local_share_locale     ; 0x5dbb ; "/usr/local/share/locale"
0x00001b0a      488d3d814200.  lea rdi, [0x00005d92]                   ; "coreutils"
0x00001b11      e89afcffff     call sym.imp.bindtextdomain
0x00001b16      488d3d754200.  lea rdi, [0x00005d92]                   ; "coreutils"
0x00001b1d      e85efcffff     call sym.imp.textdomain
0x00001b22      488d3d971400.  lea rdi, sym.close_stdout               ; 0x2fc0 ; "USH\x83\xec\bH\x8b=\xdbP "
0x00001b29      e802410000     call sym.atexit
0x00001b2e      6690           nop
0x00001b30      488d15c94200.  lea rdx, str.sfwiqbhlp                  ; 0x5e00 ; "sfwiqbhlp"
0x00001b37      4531c0         xor r8d, r8d
0x00001b3a      4c89e1         mov rcx, r12
0x00001b3d      4889de         mov rsi, rbx
0x00001b40      89ef           mov edi, ebp
0x00001b42      e8c9fcffff     call sym.imp.getopt_long
0x00001b47      83f8ff         cmp eax, 0xffffffff
0x00001b4a      0f8444010000   je 0x1c94
0x00001b50      83f869         cmp eax, 0x69
0x00001b53      0f84c7000000   je 0x1c20
0x00001b59      7e2d           jle 0x1b88
0x00001b5b      83f871         cmp eax, 0x71
0x00001b5e      0f84e4000000   je 0x1c48
0x00001b64      7f4a           jg 0x1bb0
0x00001b66      83f86c         cmp eax, 0x6c
0x00001b69      0f84c9000000   je 0x1c38
0x00001b6f      83f870         cmp eax, 0x70
0x00001b72      0f85f1030000   jne 0x1f69
0x00001b78      c60594642000.  mov byte [obj.include_plan], 0          ; [0x208013:1]=1
0x00001b7f      ebaf           jmp 0x1b30
0x00001b81      0f1f80000000.  nop dword [rax]
0x00001b88      83f862         cmp eax, 0x62
0x00001b8b      0f84e7000000   je 0x1c78
0x00001b91      7e3d           jle 0x1bd0
0x00001b93      83f866         cmp eax, 0x66
0x00001b96      0f84cc000000   je 0x1c68
0x00001b9c      83f868         cmp eax, 0x68
0x00001b9f      0f85c4030000   jne 0x1f69
0x00001ba5      c60568642000.  mov byte [obj.include_project], 0       ; [0x208014:1]=1
0x00001bac      eb82           jmp 0x1b30
0x00001bae      6690           nop
0x00001bb0      83f873         cmp eax, 0x73
0x00001bb3      0f84cf000000   je 0x1c88
0x00001bb9      83f877         cmp eax, 0x77
0x00001bbc      0f85a7030000   jne 0x1f69
0x00001bc2      c6054c642000.  mov byte [obj.include_fullname], 0      ; [0x208015:1]=1
0x00001bc9      e962ffffff     jmp 0x1b30
0x00001bce      6690           nop
0x00001bd0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001bd5      0f855f030000   jne 0x1f3a
0x00001bdb      488d05124200.  lea rax, str.Kaveh_Ghazi                ; 0x5df4 ; "Kaveh Ghazi"
0x00001be2      488b3dbf6420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001be9      488b0d286420.  mov rcx, qword [obj.Version]            ; [0x208018:8]=0x62ec str.8.31
0x00001bf0      6a00           push 0
0x00001bf2      4c8d0dda4100.  lea r9, str.David_MacKenzie             ; 0x5dd3 ; "David MacKenzie"
0x00001bf9      4c8d05e34100.  lea r8, str.Joseph_Arceneaux            ; 0x5de3 ; "Joseph Arceneaux"
0x00001c00      50             push rax
0x00001c01      488d15864100.  lea rdx, str.GNU_coreutils              ; 0x5d8e ; "GNU coreutils"
0x00001c08      488d35f54000.  lea rsi, str.pinky                      ; 0x5d04 ; "pinky"
0x00001c0f      31c0           xor eax, eax
0x00001c11      e84a370000     call sym.version_etc
0x00001c16      31ff           xor edi, edi
0x00001c18      e8f3fdffff     call sym.imp.exit
0x00001c1d      0f1f00         nop dword [rax]
0x00001c20      c605ee632000.  mov byte [obj.include_fullname], 0      ; [0x208015:1]=1
0x00001c27      c605e2632000.  mov byte [obj.include_where], 0         ; [0x208010:1]=1
0x00001c2e      e9fdfeffff     jmp 0x1b30
0x00001c33      0f1f440000     nop dword [rax + rax]
0x00001c38      c605d2632000.  mov byte [obj.do_short_format], 0       ; [0x208011:1]=1
0x00001c3f      e9ecfeffff     jmp 0x1b30
0x00001c44      0f1f4000       nop dword [rax]
0x00001c48      c605c6632000.  mov byte [obj.include_fullname], 0      ; [0x208015:1]=1
0x00001c4f      c605ba632000.  mov byte [obj.include_where], 0         ; [0x208010:1]=1
0x00001c56      c605ba632000.  mov byte [obj.include_idle], 0          ; [0x208017:1]=1
0x00001c5d      e9cefeffff     jmp 0x1b30
0x00001c62      660f1f440000   nop word [rax + rax]
0x00001c68      c605a7632000.  mov byte [obj.include_heading], 0       ; [0x208016:1]=1
0x00001c6f      e9bcfeffff     jmp 0x1b30
0x00001c74      0f1f4000       nop dword [rax]
0x00001c78      c60593632000.  mov byte [obj.include_home_and_shell], 0 ; [0x208012:1]=1
0x00001c7f      e9acfeffff     jmp 0x1b30
0x00001c84      0f1f4000       nop dword [rax]
0x00001c88      c60582632000.  mov byte [obj.do_short_format], 1       ; [0x208011:1]=1
0x00001c8f      e99cfeffff     jmp 0x1b30
0x00001c94      486305156420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b0:4]=0
0x00001c9b      29c5           sub ebp, eax
0x00001c9d      803d6d632000.  cmp byte [obj.do_short_format], 0       ; [0x208011:1]=1
0x00001ca4      7561           jne 0x1d07
0x00001ca6      85ed           test ebp, ebp
0x00001ca8      0f849a020000   je 0x1f48
0x00001cae      48c1e003       shl rax, 3
0x00001cb2      85ed           test ebp, ebp
0x00001cb4      7e2c           jle 0x1ce2
0x00001cb6      4c8d2403       lea r12, [rbx + rax]
0x00001cba      8d55ff         lea edx, [rbp - 1]
0x00001cbd      488d440308     lea rax, [rbx + rax + 8]
0x00001cc2      488d1cd0       lea rbx, [rax + rdx*8]
0x00001cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001cd0      498b3c24       mov rdi, qword [r12]
0x00001cd4      4983c408       add r12, 8
0x00001cd8      e823050000     call sym.print_long_entry
0x00001cdd      4939dc         cmp r12, rbx
0x00001ce0      75ee           jne 0x1cd0
0x00001ce2      31c0           xor eax, eax
0x00001ce4      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00001ce9      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001cf2      0f858a020000   jne 0x1f82
0x00001cf8      4883c428       add rsp, 0x28
0x00001cfc      5b             pop rbx
0x00001cfd      5d             pop rbp
0x00001cfe      415c           pop r12
0x00001d00      415d           pop r13
0x00001d02      415e           pop r14
0x00001d04      415f           pop r15
0x00001d06      c3             ret
0x00001d07      488d542410     lea rdx, [rsp + 0x10]
0x00001d0c      488d742408     lea rsi, [rsp + 8]
0x00001d11      488d3df23f00.  lea rdi, str.var_run_utmp               ; 0x5d0a ; "/var/run/utmp"
0x00001d18      31c9           xor ecx, ecx
0x00001d1a      4c8d24c50000.  lea r12, [rax*8]
0x00001d22      48c744241000.  mov qword [rsp + 0x10], 0
0x00001d2b      e8303c0000     call sym.read_utmp
0x00001d30      85c0           test eax, eax
0x00001d32      0f854f020000   jne 0x1f87
0x00001d38      bf02000000     mov edi, 2
0x00001d3d      4c8b6c2410     mov r13, qword [rsp + 0x10]
0x00001d42      4c8b742408     mov r14, qword [rsp + 8]
0x00001d47      e824130000     call sym.hard_locale
0x00001d4c      84c0           test al, al
0x00001d4e      754b           jne 0x1d9b
0x00001d50      488d05c24000.  lea rax, str.b__e__H:_M                 ; 0x5e19 ; "%b %e %H:%M"
0x00001d57      c705cf632000.  mov dword [obj.time_format_width], 0xc  ; [0x208130:4]=0
0x00001d61      488905d06320.  mov qword [obj.time_format], rax        ; [0x208138:8]=0
0x00001d68      803da7622000.  cmp byte [obj.include_heading], 0       ; [0x208016:1]=1
0x00001d6f      7579           jne 0x1dea
0x00001d71      4c01e3         add rbx, r12
0x00001d74      eb16           jmp 0x1d8c
0x00001d76      41807d2c00     cmp byte [r13 + 0x2c], 0
0x00001d7b      7408           je 0x1d85
0x00001d7d      6641837d0007   cmp word [r13], 7
0x00001d83      7430           je 0x1db5
0x00001d85      4981c5800100.  add r13, 0x180
0x00001d8c      4983ee01       sub r14, 1
0x00001d90      4983feff       cmp r14, 0xffffffffffffffff
0x00001d94      75e0           jne 0x1d76
0x00001d96      e947ffffff     jmp 0x1ce2
0x00001d9b      488d05684000.  lea rax, str.Y__m__d__H:_M              ; 0x5e0a ; "%Y-%m-%d %H:%M"
0x00001da2      c70584632000.  mov dword [obj.time_format_width], 0x10 ; [0x208130:4]=0
0x00001dac      488905856320.  mov qword [obj.time_format], rax        ; [0x208138:8]=0
0x00001db3      ebb3           jmp 0x1d68
0x00001db5      4531e4         xor r12d, r12d
0x00001db8      85ed           test ebp, ebp
0x00001dba      4d8d7d2c       lea r15, [r13 + 0x2c]
0x00001dbe      7523           jne 0x1de3
0x00001dc0      4c89ef         mov rdi, r13
0x00001dc3      e838080000     call sym.print_entry
0x00001dc8      ebbb           jmp 0x1d85
0x00001dca      4a8b34e3       mov rsi, qword [rbx + r12*8]
0x00001dce      ba20000000     mov edx, 0x20                           ; "@"
0x00001dd3      4c89ff         mov rdi, r15
0x00001dd6      4983c401       add r12, 1
0x00001dda      e861f9ffff     call sym.imp.strncmp
0x00001ddf      85c0           test eax, eax
0x00001de1      74dd           je 0x1dc0
0x00001de3      4439e5         cmp ebp, r12d
0x00001de6      7fe2           jg 0x1dca
0x00001de8      eb9b           jmp 0x1d85
0x00001dea      488d35344000.  lea rsi, str.Login                      ; 0x5e25 ; "Login"
0x00001df1      31ff           xor edi, edi
0x00001df3      ba05000000     mov edx, 5
0x00001df8      e8d3f9ffff     call sym.imp.dcgettext
0x00001dfd      488d35274000.  lea rsi, str.8s                         ; 0x5e2b ; "%-8s"
0x00001e04      4889c2         mov rdx, rax
0x00001e07      bf01000000     mov edi, 1
0x00001e0c      31c0           xor eax, eax
0x00001e0e      e88dfbffff     call sym.imp.__printf_chk
0x00001e13      803dfb612000.  cmp byte [obj.include_fullname], 0      ; [0x208015:1]=1
0x00001e1a      0f8593000000   jne 0x1eb3
0x00001e20      488d35154000.  lea rsi, str.TTY                        ; 0x5e3c ; " TTY"
0x00001e27      31ff           xor edi, edi
0x00001e29      ba05000000     mov edx, 5
0x00001e2e      e89df9ffff     call sym.imp.dcgettext
0x00001e33      488d35074000.  lea rsi, str.9s                         ; 0x5e41 ; " %-9s"
0x00001e3a      4889c2         mov rdx, rax
0x00001e3d      bf01000000     mov edi, 1
0x00001e42      31c0           xor eax, eax
0x00001e44      e857fbffff     call sym.imp.__printf_chk
0x00001e49      803dc7612000.  cmp byte [obj.include_idle], 0          ; [0x208017:1]=1
0x00001e50      0f85b6000000   jne 0x1f0c
0x00001e56      488d35ef3f00.  lea rsi, str.When                       ; 0x5e4c ; "When"
0x00001e5d      31ff           xor edi, edi
0x00001e5f      ba05000000     mov edx, 5
0x00001e64      e867f9ffff     call sym.imp.dcgettext
0x00001e69      8b15c1622000   mov edx, dword [obj.time_format_width]  ; [0x208130:4]=0
0x00001e6f      488d35db3f00.  lea rsi, str.s                          ; 0x5e51 ; " %-*s"
0x00001e76      4889c1         mov rcx, rax
0x00001e79      bf01000000     mov edi, 1
0x00001e7e      31c0           xor eax, eax
0x00001e80      e81bfbffff     call sym.imp.__printf_chk
0x00001e85      803d84612000.  cmp byte [obj.include_where], 0         ; [0x208010:1]=1
0x00001e8c      7553           jne 0x1ee1
0x00001e8e      488b3d136220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e95      488b4728       mov rax, qword [rdi + 0x28]
0x00001e99      483b4730       cmp rax, qword [rdi + 0x30]
0x00001e9d      0f83d0000000   jae 0x1f73
0x00001ea3      488d5001       lea rdx, [rax + 1]
0x00001ea7      48895728       mov qword [rdi + 0x28], rdx
0x00001eab      c6000a         mov byte [rax], 0xa
0x00001eae      e9befeffff     jmp 0x1d71
0x00001eb3      488d35763f00.  lea rsi, str.Name                       ; 0x5e30 ; "Name"
0x00001eba      31ff           xor edi, edi
0x00001ebc      ba05000000     mov edx, 5
0x00001ec1      e80af9ffff     call sym.imp.dcgettext
0x00001ec6      488d35683f00.  lea rsi, str.19s                        ; 0x5e35 ; " %-19s"
0x00001ecd      4889c2         mov rdx, rax
0x00001ed0      bf01000000     mov edi, 1
0x00001ed5      31c0           xor eax, eax
0x00001ed7      e8c4faffff     call sym.imp.__printf_chk
0x00001edc      e93fffffff     jmp 0x1e20
0x00001ee1      488d356f3f00.  lea rsi, str.Where                      ; 0x5e57 ; "Where"
0x00001ee8      31ff           xor edi, edi
0x00001eea      ba05000000     mov edx, 5
0x00001eef      e8dcf8ffff     call sym.imp.dcgettext
0x00001ef4      488d35054400.  lea rsi, [0x00006300]                   ; " %s"
0x00001efb      4889c2         mov rdx, rax
0x00001efe      bf01000000     mov edi, 1
0x00001f03      31c0           xor eax, eax
0x00001f05      e896faffff     call sym.imp.__printf_chk
0x00001f0a      eb82           jmp 0x1e8e
0x00001f0c      488d35343f00.  lea rsi, str.Idle                       ; 0x5e47 ; "Idle"
0x00001f13      31ff           xor edi, edi
0x00001f15      ba05000000     mov edx, 5
0x00001f1a      e8b1f8ffff     call sym.imp.dcgettext
0x00001f1f      488d35cb3d00.  lea rsi, str.6s                         ; 0x5cf1 ; " %-6s"
0x00001f26      4889c2         mov rdx, rax
0x00001f29      bf01000000     mov edi, 1
0x00001f2e      31c0           xor eax, eax
0x00001f30      e86bfaffff     call sym.imp.__printf_chk
0x00001f35      e91cffffff     jmp 0x1e56
0x00001f3a      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f3f      7528           jne 0x1f69
0x00001f41      31ff           xor edi, edi
0x00001f43      e8f80b0000     call sym.usage
0x00001f48      488d35594300.  lea rsi, str.no_username_specified__at_least_one_must_be_specified_when_using__l ; 0x62a8 ; "no username specified; at least one must be specified when using -l"
0x00001f4f      ba05000000     mov edx, 5
0x00001f54      31ff           xor edi, edi
0x00001f56      e875f8ffff     call sym.imp.dcgettext
0x00001f5b      31f6           xor esi, esi
0x00001f5d      4889c2         mov rdx, rax
0x00001f60      31ff           xor edi, edi
0x00001f62      31c0           xor eax, eax
0x00001f64      e867faffff     call sym.imp.error
0x00001f69      bf01000000     mov edi, 1
0x00001f6e      e8cd0b0000     call sym.usage
0x00001f73      be0a000000     mov esi, 0xa
0x00001f78      e8d3f8ffff     call sym.imp.__overflow
0x00001f7d      e9effdffff     jmp 0x1d71
0x00001f82      e879f8ffff     call sym.imp.__stack_chk_fail
0x00001f87      488d157c3d00.  lea rdx, str.var_run_utmp               ; 0x5d0a ; "/var/run/utmp"
0x00001f8e      be03000000     mov esi, 3
0x00001f93      31ff           xor edi, edi
0x00001f95      e8162d0000     call sym.quotearg_n_style_colon
0x00001f9a      4889c3         mov rbx, rax
0x00001f9d      e87ef7ffff     call sym.imp.__errno_location
0x00001fa2      8b30           mov esi, dword [rax]
0x00001fa4      488d15564300.  lea rdx, [0x00006301]                   ; "%s"
0x00001fab      4889d9         mov rcx, rbx
0x00001fae      bf01000000     mov edi, 1
0x00001fb3      31c0           xor eax, eax
0x00001fb5      e816faffff     call sym.imp.error
0x00001fba      660f1f440000   nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001fc0      31ed           xor ebp, ebp
0x00001fc2      4989d1         mov r9, rdx
0x00001fc5      5e             pop rsi
0x00001fc6      4889e2         mov rdx, rsp
0x00001fc9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001fcd      50             push rax
0x00001fce      54             push rsp
0x00001fcf      4c8d054a3c00.  lea r8, sym.__libc_csu_fini             ; 0x5c20
0x00001fd6      488d0dd33b00.  lea rcx, sym.__libc_csu_init            ; 0x5bb0 ; "AWAVI\x89\xd7AUATL\x8d%N\x1f "
0x00001fdd      488d3ddcfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1ac0 ; "AWAVAUATL\x8d%Q` "
0x00001fe4      ff15ee5f2000   call qword [reloc.__libc_start_main]    ; [0x207fd8:8]=0
0x00001fea      f4             hlt
0x00001feb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001ff0      488d3da96020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001ff7      55             push rbp
0x00001ff8      488d05a16020.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001fff      4839f8         cmp rax, rdi
0x00002002      4889e5         mov rbp, rsp
0x00002005      7419           je 0x2020
0x00002007      488b05c25f20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd0:8]=0
0x0000200e      4885c0         test rax, rax
0x00002011      740d           je 0x2020
0x00002013      5d             pop rbp
0x00002014      ffe0           jmp rax
0x00002016      662e0f1f8400.  nop word cs:[rax + rax]
0x00002020      5d             pop rbp
0x00002021      c3             ret
0x00002022      0f1f4000       nop dword [rax]
0x00002026      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002030      488d3d696020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00002037      488d35626020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x0000203e      55             push rbp
0x0000203f      4829fe         sub rsi, rdi
0x00002042      4889e5         mov rbp, rsp
0x00002045      48c1fe03       sar rsi, 3
0x00002049      4889f0         mov rax, rsi
0x0000204c      48c1e83f       shr rax, 0x3f
0x00002050      4801c6         add rsi, rax
0x00002053      48d1fe         sar rsi, 1
0x00002056      7418           je 0x2070
0x00002058      488b05895f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe8:8]=0
0x0000205f      4885c0         test rax, rax
0x00002062      740c           je 0x2070
0x00002064      5d             pop rbp
0x00002065      ffe0           jmp rax
0x00002067      660f1f840000.  nop word [rax + rax]
0x00002070      5d             pop rbp
0x00002071      c3             ret
0x00002072      0f1f4000       nop dword [rax]
0x00002076      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002080      803d41602000.  cmp byte [obj.completed.7697], 0        ; [0x2080c8:1]=0
0x00002087      752f           jne 0x20b8
0x00002089      48833d5f5f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff0:8]=0
0x00002091      55             push rbp
0x00002092      4889e5         mov rbp, rsp
0x00002095      740c           je 0x20a3
0x00002097      488b3d6a5f20.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x0000209e      e80dfaffff     call sym..plt.got
0x000020a3      e848ffffff     call sym.deregister_tm_clones
0x000020a8      c60519602000.  mov byte [obj.completed.7697], 1        ; [0x2080c8:1]=0
0x000020af      5d             pop rbp
0x000020b0      c3             ret
0x000020b1      0f1f80000000.  nop dword [rax]
0x000020b8      f3c3           ret
0x000020ba      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000020c0      55             push rbp
0x000020c1      4889e5         mov rbp, rsp
0x000020c4      5d             pop rbp
0x000020c5      e966ffffff     jmp sym.register_tm_clones
0x000020ca      660f1f440000   nop word [rax + rax]
;-- create_fullname:
0x000020d0      4156           push r14
0x000020d2      4155           push r13
0x000020d4      4989fd         mov r13, rdi
0x000020d7      4154           push r12
0x000020d9      55             push rbp
0x000020da      4889f5         mov rbp, rsi
0x000020dd      53             push rbx
0x000020de      31db           xor ebx, ebx
0x000020e0      e80bf7ffff     call sym.imp.strlen
0x000020e5      4c8d6001       lea r12, [rax + 1]
0x000020e9      4c89ea         mov rdx, r13
0x000020ec      0f1f4000       nop dword [rax]
0x000020f0      0fb60a         movzx ecx, byte [rdx]
0x000020f3      4883c201       add rdx, 1
0x000020f7      80f926         cmp cl, 0x26
0x000020fa      0f84f0000000   je 0x21f0
0x00002100      84c9           test cl, cl
0x00002102      75ec           jne 0x20f0
0x00002104      4885db         test rbx, rbx
0x00002107      7442           je 0x214b
0x00002109      4889ef         mov rdi, rbp
0x0000210c      4929dc         sub r12, rbx
0x0000210f      e8dcf6ffff     call sym.imp.strlen
0x00002114      4889c1         mov rcx, rax
0x00002117      31f6           xor esi, esi
0x00002119      480fafcb       imul rcx, rbx
0x0000211d      4901cc         add r12, rcx
0x00002120      400f92c6       setb sil
0x00002124      48f7e3         mul rbx
0x00002127      ba01000000     mov edx, 1
0x0000212c      0f90c0         seto al
0x0000212f      4885c9         test rcx, rcx
0x00002132      0fb6c0         movzx eax, al
0x00002135      480f48c2       cmovs rax, rdx
0x00002139      4885f6         test rsi, rsi
0x0000213c      0f85b7000000   jne 0x21f9
0x00002142      4885c0         test rax, rax
0x00002145      0f85ae000000   jne 0x21f9
0x0000214b      4c89e7         mov rdi, r12
0x0000214e      e86d330000     call sym.xmalloc
0x00002153      4989c4         mov r12, rax
0x00002156      410fb64500     movzx eax, byte [r13]
0x0000215b      4c89e3         mov rbx, r12
0x0000215e      84c0           test al, al
0x00002160      7519           jne 0x217b
0x00002162      eb7b           jmp 0x21df
0x00002164      0f1f4000       nop dword [rax]
0x00002168      8803           mov byte [rbx], al
0x0000216a      4883c301       add rbx, 1
0x0000216e      4983c501       add r13, 1
0x00002172      410fb64500     movzx eax, byte [r13]
0x00002177      84c0           test al, al
0x00002179      7464           je 0x21df
0x0000217b      3c26           cmp al, 0x26
0x0000217d      75e9           jne 0x2168
0x0000217f      e8fcf8ffff     call sym.imp.__ctype_b_loc
0x00002184      440fb67500     movzx r14d, byte [rbp]
0x00002189      488b00         mov rax, qword [rax]
0x0000218c      4889e9         mov rcx, rbp
0x0000218f      42f644700102   test byte [rax + r14*2 + 1], 2
0x00002195      4c89f2         mov rdx, r14
0x00002198      741b           je 0x21b5
0x0000219a      e831f5ffff     call sym.imp.__ctype_toupper_loc
0x0000219f      488b00         mov rax, qword [rax]
0x000021a2      0fb65501       movzx edx, byte [rbp + 1]
0x000021a6      488d4d01       lea rcx, [rbp + 1]
0x000021aa      4883c301       add rbx, 1
0x000021ae      428b04b0       mov eax, dword [rax + r14*4]
0x000021b2      8843ff         mov byte [rbx - 1], al
0x000021b5      84d2           test dl, dl
0x000021b7      74b5           je 0x216e
0x000021b9      0f1f80000000.  nop dword [rax]
0x000021c0      4883c101       add rcx, 1
0x000021c4      4883c301       add rbx, 1
0x000021c8      8853ff         mov byte [rbx - 1], dl
0x000021cb      0fb611         movzx edx, byte [rcx]
0x000021ce      84d2           test dl, dl
0x000021d0      75ee           jne 0x21c0
0x000021d2      4983c501       add r13, 1
0x000021d6      410fb64500     movzx eax, byte [r13]
0x000021db      84c0           test al, al
0x000021dd      759c           jne 0x217b
0x000021df      c60300         mov byte [rbx], 0
0x000021e2      4c89e0         mov rax, r12
0x000021e5      5b             pop rbx
0x000021e6      5d             pop rbp
0x000021e7      415c           pop r12
0x000021e9      415d           pop r13
0x000021eb      415e           pop r14
0x000021ed      c3             ret
0x000021ee      6690           nop
0x000021f0      4883c301       add rbx, 1
0x000021f4      e9f7feffff     jmp 0x20f0
0x000021f9      e812350000     call sym.xalloc_die
0x000021fe      6690           nop
;-- print_long_entry:
0x00002200      4155           push r13
0x00002202      4154           push r12
0x00002204      55             push rbp
0x00002205      53             push rbx
0x00002206      4889fd         mov rbp, rdi
0x00002209      4881ec180400.  sub rsp, 0x418
0x00002210      64488b042528.  mov rax, qword fs:[0x28]
0x00002219      488984240804.  mov qword [rsp + 0x408], rax
0x00002221      31c0           xor eax, eax
0x00002223      e898f6ffff     call sym.imp.getpwnam
0x00002228      488d35353a00.  lea rsi, str.Login_name:                ; 0x5c64 ; "Login name: "
0x0000222f      ba05000000     mov edx, 5
0x00002234      31ff           xor edi, edi
0x00002236      4889c3         mov rbx, rax
0x00002239      e892f5ffff     call sym.imp.dcgettext
0x0000223e      bf01000000     mov edi, 1
0x00002243      4889c6         mov rsi, rax
0x00002246      31c0           xor eax, eax
0x00002248      e853f7ffff     call sym.imp.__printf_chk
0x0000224d      488d351d3a00.  lea rsi, str.28s                        ; 0x5c71 ; "%-28s"
0x00002254      4889ea         mov rdx, rbp
0x00002257      bf01000000     mov edi, 1
0x0000225c      31c0           xor eax, eax
0x0000225e      e83df7ffff     call sym.imp.__printf_chk
0x00002263      488d350d3a00.  lea rsi, str.In_real_life:              ; 0x5c77 ; "In real life: "
0x0000226a      31ff           xor edi, edi
0x0000226c      ba05000000     mov edx, 5
0x00002271      e85af5ffff     call sym.imp.dcgettext
0x00002276      bf01000000     mov edi, 1
0x0000227b      4889c6         mov rsi, rax
0x0000227e      31c0           xor eax, eax
0x00002280      e81bf7ffff     call sym.imp.__printf_chk
0x00002285      4885db         test rbx, rbx
0x00002288      0f8402030000   je 0x2590
0x0000228e      488b6b18       mov rbp, qword [rbx + 0x18]
0x00002292      be2c000000     mov esi, 0x2c                           ; ','
0x00002297      4889ef         mov rdi, rbp
0x0000229a      e891f5ffff     call sym.imp.strchr
0x0000229f      4885c0         test rax, rax
0x000022a2      7407           je 0x22ab
0x000022a4      c60000         mov byte [rax], 0
0x000022a7      488b6b18       mov rbp, qword [rbx + 0x18]
0x000022ab      488b33         mov rsi, qword [rbx]
0x000022ae      4889ef         mov rdi, rbp
0x000022b1      e81afeffff     call sym.create_fullname
0x000022b6      488d35434000.  lea rsi, [0x00006300]                   ; " %s"
0x000022bd      4889c2         mov rdx, rax
0x000022c0      4889c5         mov rbp, rax
0x000022c3      bf01000000     mov edi, 1
0x000022c8      31c0           xor eax, eax
0x000022ca      e8d1f6ffff     call sym.imp.__printf_chk
0x000022cf      4889ef         mov rdi, rbp
0x000022d2      e819f4ffff     call sym.imp.free
0x000022d7      488b3dca5d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000022de      488b4728       mov rax, qword [rdi + 0x28]
0x000022e2      483b4730       cmp rax, qword [rdi + 0x30]
0x000022e6      0f83d4020000   jae 0x25c0
0x000022ec      488d5001       lea rdx, [rax + 1]
0x000022f0      48895728       mov qword [rdi + 0x28], rdx
0x000022f4      c6000a         mov byte [rax], 0xa
0x000022f7      803d145d2000.  cmp byte [obj.include_home_and_shell], 0 ; [0x208012:1]=1
0x000022fe      7560           jne 0x2360
0x00002300      803d0d5d2000.  cmp byte [obj.include_project], 0       ; [0x208014:1]=1
0x00002307      0f85f2000000   jne 0x23ff
0x0000230d      803dff5c2000.  cmp byte [obj.include_plan], 0          ; [0x208013:1]=1
0x00002314      0f85ac010000   jne 0x24c6
0x0000231a      488b3d875d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002321      488b4728       mov rax, qword [rdi + 0x28]
0x00002325      483b4730       cmp rax, qword [rdi + 0x30]
0x00002329      0f83a1020000   jae 0x25d0
0x0000232f      488d5001       lea rdx, [rax + 1]
0x00002333      48895728       mov qword [rdi + 0x28], rdx
0x00002337      c6000a         mov byte [rax], 0xa
0x0000233a      488b84240804.  mov rax, qword [rsp + 0x408]
0x00002342      644833042528.  xor rax, qword fs:[0x28]
0x0000234b      0f859e020000   jne 0x25ef
0x00002351      4881c4180400.  add rsp, 0x418
0x00002358      5b             pop rbx
0x00002359      5d             pop rbp
0x0000235a      415c           pop r12
0x0000235c      415d           pop r13
0x0000235e      c3             ret
0x0000235f      90             nop
0x00002360      488d35243900.  lea rsi, str.Directory:                 ; 0x5c8b ; "Directory: "
0x00002367      ba05000000     mov edx, 5
0x0000236c      31ff           xor edi, edi
0x0000236e      e85df4ffff     call sym.imp.dcgettext
0x00002373      bf01000000     mov edi, 1
0x00002378      4889c6         mov rsi, rax
0x0000237b      31c0           xor eax, eax
0x0000237d      e81ef6ffff     call sym.imp.__printf_chk
0x00002382      488b5320       mov rdx, qword [rbx + 0x20]
0x00002386      488d350a3900.  lea rsi, str.29s                        ; 0x5c97 ; "%-29s"
0x0000238d      bf01000000     mov edi, 1
0x00002392      31c0           xor eax, eax
0x00002394      e807f6ffff     call sym.imp.__printf_chk
0x00002399      488d35fd3800.  lea rsi, str.Shell:                     ; 0x5c9d ; "Shell: "
0x000023a0      ba05000000     mov edx, 5
0x000023a5      31ff           xor edi, edi
0x000023a7      e824f4ffff     call sym.imp.dcgettext
0x000023ac      bf01000000     mov edi, 1
0x000023b1      4889c6         mov rsi, rax
0x000023b4      31c0           xor eax, eax
0x000023b6      e8e5f5ffff     call sym.imp.__printf_chk
0x000023bb      488b5328       mov rdx, qword [rbx + 0x28]
0x000023bf      488d353a3f00.  lea rsi, [0x00006300]                   ; " %s"
0x000023c6      bf01000000     mov edi, 1
0x000023cb      31c0           xor eax, eax
0x000023cd      e8cef5ffff     call sym.imp.__printf_chk
0x000023d2      488b3dcf5c20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000023d9      488b4728       mov rax, qword [rdi + 0x28]
0x000023dd      483b4730       cmp rax, qword [rdi + 0x30]
0x000023e1      0f83f9010000   jae 0x25e0
0x000023e7      803d265c2000.  cmp byte [obj.include_project], 0       ; [0x208014:1]=1
0x000023ee      488d5001       lea rdx, [rax + 1]
0x000023f2      48895728       mov qword [rdi + 0x28], rdx
0x000023f6      c6000a         mov byte [rax], 0xa
0x000023f9      0f840effffff   je 0x230d
0x000023ff      488b7b20       mov rdi, qword [rbx + 0x20]
0x00002403      e8e8f3ffff     call sym.imp.strlen
0x00002408      488d780a       lea rdi, [rax + 0xa]
0x0000240c      e8af300000     call sym.xmalloc
0x00002411      488b7320       mov rsi, qword [rbx + 0x20]
0x00002415      4889c7         mov rdi, rax
0x00002418      4989c5         mov r13, rax
0x0000241b      e8a0f3ffff     call sym.imp.stpcpy
0x00002420      48b92f2e7072.  movabs rcx, 0x63656a6f72702e2f          ; '/.projec'
0x0000242a      488d35ca3e00.  lea rsi, [0x000062fb]                   ; "r"
0x00002431      4c89ef         mov rdi, r13
0x00002434      488908         mov qword [rax], rcx
0x00002437      b974000000     mov ecx, 0x74                           ; 't'
0x0000243c      66894808       mov word [rax + 8], cx
0x00002440      e8abf5ffff     call sym.imp.fopen
0x00002445      4885c0         test rax, rax
0x00002448      4989c4         mov r12, rax
0x0000244b      7464           je 0x24b1
0x0000244d      488d35513800.  lea rsi, str.Project:                   ; 0x5ca5 ; "Project: "
0x00002454      ba05000000     mov edx, 5
0x00002459      31ff           xor edi, edi
0x0000245b      4889e5         mov rbp, rsp
0x0000245e      e86df3ffff     call sym.imp.dcgettext
0x00002463      bf01000000     mov edi, 1
0x00002468      4889c6         mov rsi, rax
0x0000246b      31c0           xor eax, eax
0x0000246d      e82ef5ffff     call sym.imp.__printf_chk
0x00002472      eb1b           jmp 0x248f
0x00002474      0f1f4000       nop dword [rax]
0x00002478      488b0d295c20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000247f      4889c2         mov rdx, rax
0x00002482      be01000000     mov esi, 1
0x00002487      4889ef         mov rdi, rbp
0x0000248a      e8e1f4ffff     call sym.imp.fwrite_unlocked
0x0000248f      4c89e1         mov rcx, r12
0x00002492      ba00040000     mov edx, 0x400
0x00002497      be01000000     mov esi, 1
0x0000249c      4889ef         mov rdi, rbp
0x0000249f      e8ccf2ffff     call sym.imp.fread_unlocked
0x000024a4      4885c0         test rax, rax
0x000024a7      75cf           jne 0x2478
0x000024a9      4c89e7         mov rdi, r12
0x000024ac      e89f320000     call sym.rpl_fclose
0x000024b1      4c89ef         mov rdi, r13
0x000024b4      e837f2ffff     call sym.imp.free
0x000024b9      803d535b2000.  cmp byte [obj.include_plan], 0          ; [0x208013:1]=1
0x000024c0      0f8454feffff   je 0x231a
0x000024c6      488b7b20       mov rdi, qword [rbx + 0x20]
0x000024ca      e821f3ffff     call sym.imp.strlen
0x000024cf      488d7807       lea rdi, [rax + 7]
0x000024d3      e8e82f0000     call sym.xmalloc
0x000024d8      488b7320       mov rsi, qword [rbx + 0x20]
0x000024dc      4889c7         mov rdi, rax
0x000024df      4989c4         mov r12, rax
0x000024e2      e8d9f2ffff     call sym.imp.stpcpy
0x000024e7      ba616e0000     mov edx, 0x6e61                         ; 'an'
0x000024ec      488d35083e00.  lea rsi, [0x000062fb]                   ; "r"
0x000024f3      c7002f2e706c   mov dword [rax], 0x6c702e2f             ; '/.pl'
                                                                       ; [0x6c702e2f:4]=-1
0x000024f9      66895004       mov word [rax + 4], dx
0x000024fd      c6400600       mov byte [rax + 6], 0
0x00002501      4c89e7         mov rdi, r12
0x00002504      e8e7f4ffff     call sym.imp.fopen
0x00002509      4885c0         test rax, rax
0x0000250c      4889c3         mov rbx, rax
0x0000250f      7468           je 0x2579
0x00002511      488d35973700.  lea rsi, str.Plan:                      ; 0x5caf ; "Plan:\n"
0x00002518      ba05000000     mov edx, 5
0x0000251d      31ff           xor edi, edi
0x0000251f      4889e5         mov rbp, rsp
0x00002522      e8a9f2ffff     call sym.imp.dcgettext
0x00002527      bf01000000     mov edi, 1
0x0000252c      4889c6         mov rsi, rax
0x0000252f      31c0           xor eax, eax
0x00002531      e86af4ffff     call sym.imp.__printf_chk
0x00002536      eb1f           jmp 0x2557
0x00002538      0f1f84000000.  nop dword [rax + rax]
0x00002540      488b0d615b20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002547      4889c2         mov rdx, rax
0x0000254a      be01000000     mov esi, 1
0x0000254f      4889ef         mov rdi, rbp
0x00002552      e819f4ffff     call sym.imp.fwrite_unlocked
0x00002557      4889d9         mov rcx, rbx
0x0000255a      ba00040000     mov edx, 0x400
0x0000255f      be01000000     mov esi, 1
0x00002564      4889ef         mov rdi, rbp
0x00002567      e804f2ffff     call sym.imp.fread_unlocked
0x0000256c      4885c0         test rax, rax
0x0000256f      75cf           jne 0x2540
0x00002571      4889df         mov rdi, rbx
0x00002574      e8d7310000     call sym.rpl_fclose
0x00002579      4c89e7         mov rdi, r12
0x0000257c      e86ff1ffff     call sym.imp.free
0x00002581      e994fdffff     jmp 0x231a
0x00002586      662e0f1f8400.  nop word cs:[rax + rax]
0x00002590      488d35ef3600.  lea rsi, [0x00005c86]                   ; "???\n"
0x00002597      31ff           xor edi, edi
0x00002599      ba05000000     mov edx, 5
0x0000259e      e82df2ffff     call sym.imp.dcgettext
0x000025a3      488d35563d00.  lea rsi, [0x00006300]                   ; " %s"
0x000025aa      4889c2         mov rdx, rax
0x000025ad      bf01000000     mov edi, 1
0x000025b2      31c0           xor eax, eax
0x000025b4      e8e7f3ffff     call sym.imp.__printf_chk
0x000025b9      e97cfdffff     jmp 0x233a
0x000025be      6690           nop
0x000025c0      be0a000000     mov esi, 0xa
0x000025c5      e886f2ffff     call sym.imp.__overflow
0x000025ca      e928fdffff     jmp 0x22f7
0x000025cf      90             nop
0x000025d0      be0a000000     mov esi, 0xa
0x000025d5      e876f2ffff     call sym.imp.__overflow
0x000025da      e95bfdffff     jmp 0x233a
0x000025df      90             nop
0x000025e0      be0a000000     mov esi, 0xa
0x000025e5      e866f2ffff     call sym.imp.__overflow
0x000025ea      e911fdffff     jmp 0x2300
0x000025ef      e80cf2ffff     call sym.imp.__stack_chk_fail
0x000025f4      6690           nop
0x000025f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_entry:
0x00002600      4157           push r15
0x00002602      4156           push r14
0x00002604      4155           push r13
0x00002606      4154           push r12
0x00002608      55             push rbp
0x00002609      53             push rbx
0x0000260a      4889fd         mov rbp, rdi
0x0000260d      4881ecf80100.  sub rsp, 0x1f8
0x00002614      0fb64f08       movzx ecx, byte [rdi + 8]
0x00002618      64488b042528.  mov rax, qword fs:[0x28]
0x00002621      48898424e801.  mov qword [rsp + 0x1e8], rax
0x00002629      31c0           xor eax, eax
0x0000262b      80f92f         cmp cl, 0x2f
0x0000262e      0f856c030000   jne 0x29a0
0x00002634      488d4708       lea rax, [rdi + 8]
0x00002638      488db424b000.  lea rsi, [rsp + 0xb0]
0x00002640      488d7f28       lea rdi, [rdi + 0x28]
0x00002644      4989c4         mov r12, rax
0x00002647      4889f2         mov rdx, rsi
0x0000264a      eb0b           jmp 0x2657
0x0000264c      0f1f4000       nop dword [rax]
0x00002650      0fb608         movzx ecx, byte [rax]
0x00002653      84c9           test cl, cl
0x00002655      7410           je 0x2667
0x00002657      4883c001       add rax, 1
0x0000265b      4883c201       add rdx, 1
0x0000265f      884aff         mov byte [rdx - 1], cl
0x00002662      4839f8         cmp rax, rdi
0x00002665      72e9           jb 0x2650
0x00002667      c60200         mov byte [rdx], 0
0x0000266a      488d542420     lea rdx, [rsp + 0x20]
0x0000266f      bf01000000     mov edi, 1
0x00002674      e8a7f2ffff     call sym.imp.__xstat
0x00002679      85c0           test eax, eax
0x0000267b      0f85ef010000   jne 0x2870
0x00002681      8b442438       mov eax, dword [rsp + 0x38]
0x00002685      4c8b742468     mov r14, qword [rsp + 0x68]
0x0000268a      83e010         and eax, 0x10
0x0000268d      83f801         cmp eax, 1
0x00002690      4519ed         sbb r13d, r13d
0x00002693      4183e50a       and r13d, 0xa
0x00002697      4183c520       add r13d, 0x20                          ; "@"
0x0000269b      488d5d2c       lea rbx, [rbp + 0x2c]
0x0000269f      488d35353600.  lea rsi, [0x00005cdb]                   ; "%-8.*s"
0x000026a6      31c0           xor eax, eax
0x000026a8      ba20000000     mov edx, 0x20                           ; "@"
0x000026ad      bf01000000     mov edi, 1
0x000026b2      4889d9         mov rcx, rbx
0x000026b5      e8e6f2ffff     call sym.imp.__printf_chk
0x000026ba      803d54592000.  cmp byte [obj.include_fullname], 0      ; [0x208015:1]=1
0x000026c1      747d           je 0x2740
0x000026c3      0fb6552c       movzx edx, byte [rbp + 0x2c]
0x000026c7      4c8dbc24e000.  lea r15, [rsp + 0xe0]
0x000026cf      488d4d4c       lea rcx, [rbp + 0x4c]
0x000026d3      4c89f8         mov rax, r15
0x000026d6      84d2           test dl, dl
0x000026d8      0f857d010000   jne 0x285b
0x000026de      6690           nop
0x000026e0      c60000         mov byte [rax], 0
0x000026e3      4c89ff         mov rdi, r15
0x000026e6      e8d5f1ffff     call sym.imp.getpwnam
0x000026eb      4885c0         test rax, rax
0x000026ee      4889c3         mov rbx, rax
0x000026f1      0f8409030000   je 0x2a00
0x000026f7      4c8b7818       mov r15, qword [rax + 0x18]
0x000026fb      be2c000000     mov esi, 0x2c                           ; ','
0x00002700      4c89ff         mov rdi, r15
0x00002703      e828f1ffff     call sym.imp.strchr
0x00002708      4885c0         test rax, rax
0x0000270b      7407           je 0x2714
0x0000270d      c60000         mov byte [rax], 0
0x00002710      4c8b7b18       mov r15, qword [rbx + 0x18]
0x00002714      488b33         mov rsi, qword [rbx]
0x00002717      4c89ff         mov rdi, r15
0x0000271a      e8b1f9ffff     call sym.create_fullname
0x0000271f      488d35a83500.  lea rsi, str.19.19s                     ; 0x5cce ; " %-19.19s"
0x00002726      4889c3         mov rbx, rax
0x00002729      4889c2         mov rdx, rax
0x0000272c      bf01000000     mov edi, 1
0x00002731      31c0           xor eax, eax
0x00002733      e868f2ffff     call sym.imp.__printf_chk
0x00002738      4889df         mov rdi, rbx
0x0000273b      e8b0efffff     call sym.imp.free
0x00002740      488d35913500.  lea rsi, str.c__8._s                    ; 0x5cd8 ; " %c%-8.*s"
0x00002747      31c0           xor eax, eax
0x00002749      4d89e0         mov r8, r12
0x0000274c      b920000000     mov ecx, 0x20                           ; "@"
0x00002751      4489ea         mov edx, r13d
0x00002754      bf01000000     mov edi, 1
0x00002759      e842f2ffff     call sym.imp.__printf_chk
0x0000275e      803db2582000.  cmp byte [obj.include_idle], 0          ; [0x208017:1]=1
0x00002765      7432           je 0x2799
0x00002767      4d85f6         test r14, r14
0x0000276a      0f85b0010000   jne 0x2920
0x00002770      488d35803500.  lea rsi, str.                           ; 0x5cf7 ; "?????"
0x00002777      ba05000000     mov edx, 5
0x0000277c      31ff           xor edi, edi
0x0000277e      e84df0ffff     call sym.imp.dcgettext
0x00002783      4889c2         mov rdx, rax
0x00002786      488d35643500.  lea rsi, str.6s                         ; 0x5cf1 ; " %-6s"
0x0000278d      bf01000000     mov edi, 1
0x00002792      31c0           xor eax, eax
0x00002794      e807f2ffff     call sym.imp.__printf_chk
0x00002799      486385540100.  movsxd rax, dword [rbp + 0x154]
0x000027a0      488d7c2418     lea rdi, [rsp + 0x18]
0x000027a5      4889442418     mov qword [rsp + 0x18], rax
0x000027aa      e851efffff     call sym.imp.localtime
0x000027af      4885c0         test rax, rax
0x000027b2      0f8428020000   je 0x29e0
0x000027b8      488b15795920.  mov rdx, qword [obj.time_format]        ; [0x208138:8]=0
0x000027bf      488d3d1a5920.  lea rdi, obj.buf.7049                   ; 0x2080e0
0x000027c6      4889c1         mov rcx, rax
0x000027c9      be21000000     mov esi, 0x21                           ; '!'
0x000027ce      e8ddf1ffff     call sym.imp.strftime
0x000027d3      488d15065920.  lea rdx, obj.buf.7049                   ; 0x2080e0
0x000027da      488d351f3b00.  lea rsi, [0x00006300]                   ; " %s"
0x000027e1      31c0           xor eax, eax
0x000027e3      bf01000000     mov edi, 1
0x000027e8      e8b3f1ffff     call sym.imp.__printf_chk
0x000027ed      803d1c582000.  cmp byte [obj.include_where], 0         ; [0x208010:1]=1
0x000027f4      740c           je 0x2802
0x000027f6      0fb6554c       movzx edx, byte [rbp + 0x4c]
0x000027fa      84d2           test dl, dl
0x000027fc      0f857e000000   jne 0x2880
0x00002802      488b3d9f5820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002809      488b4728       mov rax, qword [rdi + 0x28]
0x0000280d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002811      0f8369020000   jae 0x2a80
0x00002817      488d5001       lea rdx, [rax + 1]
0x0000281b      48895728       mov qword [rdi + 0x28], rdx
0x0000281f      c6000a         mov byte [rax], 0xa
0x00002822      488b8424e801.  mov rax, qword [rsp + 0x1e8]
0x0000282a      644833042528.  xor rax, qword fs:[0x28]
0x00002833      0f8500030000   jne 0x2b39
0x00002839      4881c4f80100.  add rsp, 0x1f8
0x00002840      5b             pop rbx
0x00002841      5d             pop rbp
0x00002842      415c           pop r12
0x00002844      415d           pop r13
0x00002846      415e           pop r14
0x00002848      415f           pop r15
0x0000284a      c3             ret
0x0000284b      0f1f440000     nop dword [rax + rax]
0x00002850      0fb613         movzx edx, byte [rbx]
0x00002853      84d2           test dl, dl
0x00002855      0f8485feffff   je 0x26e0
0x0000285b      4883c301       add rbx, 1
0x0000285f      4883c001       add rax, 1
0x00002863      8850ff         mov byte [rax - 1], dl
0x00002866      4839d9         cmp rcx, rbx
0x00002869      77e5           ja 0x2850
0x0000286b      e970feffff     jmp 0x26e0
0x00002870      41bd3f000000   mov r13d, 0x3f                          ; '?'
0x00002876      4531f6         xor r14d, r14d
0x00002879      e91dfeffff     jmp 0x269b
0x0000287e      6690           nop
0x00002880      4c8dbc24e000.  lea r15, [rsp + 0xe0]
0x00002888      488d454c       lea rax, [rbp + 0x4c]
0x0000288c      4881c54c0100.  add rbp, 0x14c
0x00002893      4c89f9         mov rcx, r15
0x00002896      eb0f           jmp 0x28a7
0x00002898      0f1f84000000.  nop dword [rax + rax]
0x000028a0      0fb610         movzx edx, byte [rax]
0x000028a3      84d2           test dl, dl
0x000028a5      7410           je 0x28b7
0x000028a7      4883c001       add rax, 1
0x000028ab      4883c101       add rcx, 1
0x000028af      8851ff         mov byte [rcx - 1], dl
0x000028b2      4839c5         cmp rbp, rax
0x000028b5      77e9           ja 0x28a0
0x000028b7      c60100         mov byte [rcx], 0
0x000028ba      be3a000000     mov esi, 0x3a                           ; ':'
0x000028bf      4c89ff         mov rdi, r15
0x000028c2      e869efffff     call sym.imp.strchr
0x000028c7      4885c0         test rax, rax
0x000028ca      0f8480010000   je 0x2a50
0x000028d0      c60000         mov byte [rax], 0
0x000028d3      80bc24e00000.  cmp byte [rsp + 0xe0], 0
0x000028db      488d4801       lea rcx, [rax + 1]
0x000028df      0f8518020000   jne 0x2afd
0x000028e5      4c89fb         mov rbx, r15
0x000028e8      4885c9         test rcx, rcx
0x000028eb      0f8470010000   je 0x2a61
0x000028f1      488d35053400.  lea rsi, str.s:_s                       ; 0x5cfd ; " %s:%s"
0x000028f8      4889da         mov rdx, rbx
0x000028fb      bf01000000     mov edi, 1
0x00002900      31c0           xor eax, eax
0x00002902      e899f0ffff     call sym.imp.__printf_chk
0x00002907      4c39fb         cmp rbx, r15
0x0000290a      0f84f2feffff   je 0x2802
0x00002910      4889df         mov rdi, rbx
0x00002913      e8d8edffff     call sym.imp.free
0x00002918      e9e5feffff     jmp 0x2802
0x0000291d      0f1f00         nop dword [rax]
0x00002920      488b0d015820.  mov rcx, qword [obj.now.7040]           ; [0x208128:8]=0
0x00002927      4885c9         test rcx, rcx
0x0000292a      0f8400010000   je 0x2a30
0x00002930      4c29f1         sub rcx, r14
0x00002933      488d157c3300.  lea rdx, [0x00005cb6]                   ; "     "
0x0000293a      4883f93b       cmp rcx, 0x3b
0x0000293e      0f8e42feffff   jle 0x2786
0x00002944      4881f97f5101.  cmp rcx, 0x1517f
0x0000294b      0f8e3f010000   jle 0x2a90
0x00002951      4889c8         mov rax, rcx
0x00002954      48ba572951ce.  movabs rdx, 0x1845c8a0ce512957
0x0000295e      48c1f93f       sar rcx, 0x3f
0x00002962      48f7ea         imul rdx
0x00002965      488d3da45720.  lea rdi, obj.buf.7041                   ; 0x208110
0x0000296c      be01000000     mov esi, 1
0x00002971      31c0           xor eax, eax
0x00002973      48c1fa0d       sar rdx, 0xd
0x00002977      4829ca         sub rdx, rcx
0x0000297a      488d0d6b3300.  lea rcx, str.lud                        ; 0x5cec ; "%lud"
0x00002981      4989d0         mov r8, rdx
0x00002984      ba16000000     mov edx, 0x16
0x00002989      e812f1ffff     call sym.imp.__sprintf_chk
0x0000298e      488d157b5720.  lea rdx, obj.buf.7041                   ; 0x208110
0x00002995      e9ecfdffff     jmp 0x2786
0x0000299a      660f1f440000   nop word [rax + rax]
0x000029a0      b82f000000     mov eax, 0x2f                           ; '/'
0x000029a5      488db424b000.  lea rsi, [rsp + 0xb0]
0x000029ad      84c9           test cl, cl
0x000029af      66898424b400.  mov word [rsp + 0xb4], ax
0x000029b7      488d4708       lea rax, [rdi + 8]
0x000029bb      c78424b00000.  mov dword [rsp + 0xb0], 0x7665642f      ; '/dev'
                                                                       ; [0x7665642f:4]=-1
0x000029c6      488d7f28       lea rdi, [rdi + 0x28]
0x000029ca      488d5605       lea rdx, [rsi + 5]
0x000029ce      4989c4         mov r12, rax
0x000029d1      0f8580fcffff   jne 0x2657
0x000029d7      e98bfcffff     jmp 0x2667
0x000029dc      0f1f4000       nop dword [rax]
0x000029e0      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000029e5      488d35f45620.  lea rsi, obj.buf.7049                   ; 0x2080e0
0x000029ec      e8df060000     call sym.imaxtostr
0x000029f1      4889c2         mov rdx, rax
0x000029f4      e9e1fdffff     jmp 0x27da
0x000029f9      0f1f80000000.  nop dword [rax]
0x00002a00      488d35b53200.  lea rsi, [0x00005cbc]                   ; "        ???"
0x00002a07      31ff           xor edi, edi
0x00002a09      ba05000000     mov edx, 5
0x00002a0e      e8bdedffff     call sym.imp.dcgettext
0x00002a13      488d35ae3200.  lea rsi, [0x00005cc8]                   ; " %19s"
0x00002a1a      4889c2         mov rdx, rax
0x00002a1d      bf01000000     mov edi, 1
0x00002a22      31c0           xor eax, eax
0x00002a24      e877efffff     call sym.imp.__printf_chk
0x00002a29      e912fdffff     jmp 0x2740
0x00002a2e      6690           nop
0x00002a30      488d3df15620.  lea rdi, obj.now.7040                   ; 0x208128
0x00002a37      e8c4eeffff     call sym.imp.time
0x00002a3c      488b0de55620.  mov rcx, qword [obj.now.7040]           ; [0x208128:8]=0
0x00002a43      e9e8feffff     jmp 0x2930
0x00002a48      0f1f84000000.  nop dword [rax + rax]
0x00002a50      80bc24e00000.  cmp byte [rsp + 0xe0], 0
0x00002a58      0f85c2000000   jne 0x2b20
0x00002a5e      4c89fb         mov rbx, r15
0x00002a61      488d35983800.  lea rsi, [0x00006300]                   ; " %s"
0x00002a68      4889da         mov rdx, rbx
0x00002a6b      bf01000000     mov edi, 1
0x00002a70      31c0           xor eax, eax
0x00002a72      e829efffff     call sym.imp.__printf_chk
0x00002a77      e98bfeffff     jmp 0x2907
0x00002a7c      0f1f4000       nop dword [rax]
0x00002a80      be0a000000     mov esi, 0xa
0x00002a85      e8c6edffff     call sym.imp.__overflow
0x00002a8a      e993fdffff     jmp 0x2822
0x00002a8f      90             nop
0x00002a90      4889c8         mov rax, rcx
0x00002a93      48ba057cf36a.  movabs rdx, 0x48d159e26af37c05
0x00002a9d      488d3d6c5620.  lea rdi, obj.buf.7041                   ; 0x208110
0x00002aa4      48f7ea         imul rdx
0x00002aa7      4889c8         mov rax, rcx
0x00002aaa      be01000000     mov esi, 1
0x00002aaf      48c1f83f       sar rax, 0x3f
0x00002ab3      48c1fa0a       sar rdx, 0xa
0x00002ab7      4989d0         mov r8, rdx
0x00002aba      48ba89888888.  movabs rdx, 0x8888888888888889
0x00002ac4      4929c0         sub r8, rax
0x00002ac7      4969c0100e00.  imul rax, r8, 0xe10
0x00002ace      4829c1         sub rcx, rax
0x00002ad1      4889c8         mov rax, rcx
0x00002ad4      488d0d073200.  lea rcx, str.02d:_02d                   ; 0x5ce2 ; "%02d:%02d"
0x00002adb      48f7e2         mul rdx
0x00002ade      31c0           xor eax, eax
0x00002ae0      48c1ea05       shr rdx, 5
0x00002ae4      4189d1         mov r9d, edx
0x00002ae7      ba16000000     mov edx, 0x16
0x00002aec      e8afefffff     call sym.imp.__sprintf_chk
0x00002af1      488d15185620.  lea rdx, obj.buf.7041                   ; 0x208110
0x00002af8      e989fcffff     jmp 0x2786
0x00002afd      4c89ff         mov rdi, r15
0x00002b00      48894c2408     mov qword [rsp + 8], rcx
0x00002b05      e876040000     call sym.canon_host
0x00002b0a      4885c0         test rax, rax
0x00002b0d      4889c3         mov rbx, rax
0x00002b10      488b4c2408     mov rcx, qword [rsp + 8]
0x00002b15      0f85cdfdffff   jne 0x28e8
0x00002b1b      e9c5fdffff     jmp 0x28e5
0x00002b20      4c89ff         mov rdi, r15
0x00002b23      e858040000     call sym.canon_host
0x00002b28      4885c0         test rax, rax
0x00002b2b      4889c3         mov rbx, rax
0x00002b2e      0f852dffffff   jne 0x2a61
0x00002b34      e925ffffff     jmp 0x2a5e
0x00002b39      e8c2ecffff     call sym.imp.__stack_chk_fail
0x00002b3e      6690           nop
;-- usage:
0x00002b40      4155           push r13
0x00002b42      4154           push r12
0x00002b44      ba05000000     mov edx, 5
0x00002b49      55             push rbp
0x00002b4a      53             push rbx
0x00002b4b      89fd           mov ebp, edi
0x00002b4d      4881ec880000.  sub rsp, 0x88
0x00002b54      488b1d2d5620.  mov rbx, qword [obj.program_name]       ; [0x208188:8]=0
0x00002b5b      64488b042528.  mov rax, qword fs:[0x28]
0x00002b64      4889442478     mov qword [rsp + 0x78], rax
0x00002b69      31c0           xor eax, eax
0x00002b6b      85ff           test edi, edi
0x00002b6d      742e           je 0x2b9d
0x00002b6f      488d35fa3200.  lea rsi, str.Try___s___help__for_more_information. ; 0x5e70 ; "Try '%s --help' for more information.\n"
0x00002b76      31ff           xor edi, edi
0x00002b78      e853ecffff     call sym.imp.dcgettext
0x00002b7d      488b3d3c5520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002b84      4889c2         mov rdx, rax
0x00002b87      4889d9         mov rcx, rbx
0x00002b8a      be01000000     mov esi, 1
0x00002b8f      31c0           xor eax, eax
0x00002b91      e89aeeffff     call sym.imp.__fprintf_chk
0x00002b96      89ef           mov edi, ebp
0x00002b98      e873eeffff     call sym.imp.exit
0x00002b9d      488d35f43200.  lea rsi, str.Usage:__s__OPTION_...__USER_... ; 0x5e98 ; "Usage: %s [OPTION]... [USER]...\n"
0x00002ba4      31ff           xor edi, edi
0x00002ba6      e825ecffff     call sym.imp.dcgettext
0x00002bab      4889da         mov rdx, rbx
0x00002bae      4889c6         mov rsi, rax
0x00002bb1      bf01000000     mov edi, 1
0x00002bb6      31c0           xor eax, eax
0x00002bb8      e8e3edffff     call sym.imp.__printf_chk
0x00002bbd      488b1de45420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002bc4      488d35f53200.  lea rsi, str.l______________produce_long_format_output_for_the_specified_USERs_____b______________omit_the_user_s_home_directory_and_shell_in_long_format_____h______________omit_the_user_s_project_file_in_long_format_____p______________omit_the_user_s_plan_file_in_long_format_____s______________do_short_format_output__this_is_the_default ; 0x5ec0 ; "\n  -l              produce long format output for the specified USERs\n  -b              omit the user's home directory and shell in long format\n  -h              omit the user's project file in long format\n  -p              omit the user's plan file in long format\n  -s              do short format output, this is the default\n"
0x00002bcb      ba05000000     mov edx, 5
0x00002bd0      31ff           xor edi, edi
0x00002bd2      e8f9ebffff     call sym.imp.dcgettext
0x00002bd7      4889de         mov rsi, rbx
0x00002bda      4889c7         mov rdi, rax
0x00002bdd      e8beecffff     call sym.imp.fputs_unlocked
0x00002be2      488b1dbf5420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002be9      488d35183400.  lea rsi, str.f______________omit_the_line_of_column_headings_in_short_format_____w______________omit_the_user_s_full_name_in_short_format_____i______________omit_the_user_s_full_name_and_remote_host_in_short_format_____q______________omit_the_user_s_full_name__remote_host_and_idle_time____________________in_short_format ; 0x6008 ; "  -f              omit the line of column headings in short format\n  -w              omit the user's full name in short format\n  -i              omit the user's full name and remote host in short format\n  -q              omit the user's full name, remote host and idle time\n                  in short format\n"
0x00002bf0      ba05000000     mov edx, 5
0x00002bf5      31ff           xor edi, edi
0x00002bf7      e8d4ebffff     call sym.imp.dcgettext
0x00002bfc      4889de         mov rsi, rbx
0x00002bff      4889c7         mov rdi, rax
0x00002c02      e899ecffff     call sym.imp.fputs_unlocked
0x00002c07      488b1d9a5420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002c0e      488d352b3500.  lea rsi, str.help_____display_this_help_and_exit ; 0x6140 ; "      --help     display this help and exit\n"
0x00002c15      ba05000000     mov edx, 5
0x00002c1a      31ff           xor edi, edi
0x00002c1c      e8afebffff     call sym.imp.dcgettext
0x00002c21      4889de         mov rsi, rbx
0x00002c24      4889c7         mov rdi, rax
0x00002c27      e874ecffff     call sym.imp.fputs_unlocked
0x00002c2c      488b1d755420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002c33      488d35363500.  lea rsi, str.version__output_version_information_and_exit ; 0x6170 ; "      --version  output version information and exit\n"
0x00002c3a      ba05000000     mov edx, 5
0x00002c3f      31ff           xor edi, edi
0x00002c41      e88aebffff     call sym.imp.dcgettext
0x00002c46      4889de         mov rsi, rbx
0x00002c49      4889c7         mov rdi, rax
0x00002c4c      488d1db13000.  lea rbx, str.pinky                      ; 0x5d04 ; "pinky"
0x00002c53      e848ecffff     call sym.imp.fputs_unlocked
0x00002c58      488d35493500.  lea rsi, str.A_lightweight__finger__program___print_user_information.__The_utmp_file_will_be__s. ; 0x61a8 ; "\nA lightweight 'finger' program;  print user information.\nThe utmp file will be %s.\n"
0x00002c5f      ba05000000     mov edx, 5
0x00002c64      31ff           xor edi, edi
0x00002c66      e865ebffff     call sym.imp.dcgettext
0x00002c6b      488d15983000.  lea rdx, str.var_run_utmp               ; 0x5d0a ; "/var/run/utmp"
0x00002c72      4889c6         mov rsi, rax
0x00002c75      bf01000000     mov edi, 1
0x00002c7a      31c0           xor eax, eax
0x00002c7c      e81fedffff     call sym.imp.__printf_chk
0x00002c81      488d05903000.  lea rax, [0x00005d18]                   ; "["
0x00002c88      488d0dca3000.  lea rcx, str.sha256sum                  ; 0x5d59 ; "sha256sum"
0x00002c8f      48c744246000.  mov qword [rsp + 0x60], 0
0x00002c98      48c744246800.  mov qword [rsp + 0x68], 0
0x00002ca1      4889e2         mov rdx, rsp
0x00002ca4      48890424       mov qword [rsp], rax
0x00002ca8      488d056b3000.  lea rax, str.test_invocation            ; 0x5d1a ; "test invocation"
0x00002caf      48894c2430     mov qword [rsp + 0x30], rcx
0x00002cb4      488d0da83000.  lea rcx, str.sha384sum                  ; 0x5d63 ; "sha384sum"
0x00002cbb      4889442408     mov qword [rsp + 8], rax
0x00002cc0      488d05cb3000.  lea rax, [0x00005d92]                   ; "coreutils"
0x00002cc7      48894c2440     mov qword [rsp + 0x40], rcx
0x00002ccc      488d0d9a3000.  lea rcx, str.sha512sum                  ; 0x5d6d ; "sha512sum"
0x00002cd3      4889442410     mov qword [rsp + 0x10], rax
0x00002cd8      488d054b3000.  lea rax, str.Multi_call_invocation      ; 0x5d2a ; "Multi-call invocation"
0x00002cdf      48894c2450     mov qword [rsp + 0x50], rcx
0x00002ce4      4889442418     mov qword [rsp + 0x18], rax
0x00002ce9      488d05503000.  lea rax, str.sha224sum                  ; 0x5d40 ; "sha224sum"
0x00002cf0      4889442420     mov qword [rsp + 0x20], rax
0x00002cf5      488d054e3000.  lea rax, str.sha2_utilities             ; 0x5d4a ; "sha2 utilities"
0x00002cfc      4889442428     mov qword [rsp + 0x28], rax
0x00002d01      4889442438     mov qword [rsp + 0x38], rax
0x00002d06      4889442448     mov qword [rsp + 0x48], rax
0x00002d0b      4889442458     mov qword [rsp + 0x58], rax
0x00002d10      4883c210       add rdx, 0x10
0x00002d14      488b3a         mov rdi, qword [rdx]
0x00002d17      4885ff         test rdi, rdi
0x00002d1a      7413           je 0x2d2f
0x00002d1c      b906000000     mov ecx, 6
0x00002d21      4889de         mov rsi, rbx
0x00002d24      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d26      0f97c0         seta al
0x00002d29      1c00           sbb al, 0
0x00002d2b      84c0           test al, al
0x00002d2d      75e1           jne 0x2d10
0x00002d2f      4c8b6208       mov r12, qword [rdx + 8]
0x00002d33      31ff           xor edi, edi
0x00002d35      ba05000000     mov edx, 5
0x00002d3a      488d35363000.  lea rsi, str.s_online_help:___s         ; 0x5d77 ; "\n%s online help: <%s>\n"
0x00002d41      4d85e4         test r12, r12
0x00002d44      0f84c1000000   je 0x2e0b
0x00002d4a      e881eaffff     call sym.imp.dcgettext
0x00002d4f      488d0daa3400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6200 ; "https://www.gnu.org/software/coreutils/"
0x00002d56      488d15313000.  lea rdx, str.GNU_coreutils              ; 0x5d8e ; "GNU coreutils"
0x00002d5d      4889c6         mov rsi, rax
0x00002d60      bf01000000     mov edi, 1
0x00002d65      31c0           xor eax, eax
0x00002d67      e834ecffff     call sym.imp.__printf_chk
0x00002d6c      31f6           xor esi, esi
0x00002d6e      bf05000000     mov edi, 5
0x00002d73      e818ecffff     call sym.imp.setlocale
0x00002d78      4885c0         test rax, rax
0x00002d7b      741c           je 0x2d99
0x00002d7d      488d35183000.  lea rsi, [0x00005d9c]                   ; "en_"
0x00002d84      ba03000000     mov edx, 3
0x00002d89      4889c7         mov rdi, rax
0x00002d8c      e8afe9ffff     call sym.imp.strncmp
0x00002d91      85c0           test eax, eax
0x00002d93      0f8507010000   jne 0x2ea0
0x00002d99      488d35003000.  lea rsi, str.Full_documentation___s_s   ; 0x5da0 ; "Full documentation <%s%s>\n"
0x00002da0      31ff           xor edi, edi
0x00002da2      ba05000000     mov edx, 5
0x00002da7      e824eaffff     call sym.imp.dcgettext
0x00002dac      488d0d512f00.  lea rcx, str.pinky                      ; 0x5d04 ; "pinky"
0x00002db3      488d15463400.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6200 ; "https://www.gnu.org/software/coreutils/"
0x00002dba      4889c6         mov rsi, rax
0x00002dbd      bf01000000     mov edi, 1
0x00002dc2      31c0           xor eax, eax
0x00002dc4      e8d7ebffff     call sym.imp.__printf_chk
0x00002dc9      4939dc         cmp r12, rbx
0x00002dcc      488d0d612f00.  lea rcx, [0x00005d34]                   ; " invocation"
0x00002dd3      488d1da73a00.  lea rbx, [0x00006881]
0x00002dda      480f44d9       cmove rbx, rcx
0x00002dde      488d358b3400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6270 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002de5      31ff           xor edi, edi
0x00002de7      ba05000000     mov edx, 5
0x00002dec      e8dfe9ffff     call sym.imp.dcgettext
0x00002df1      4889d9         mov rcx, rbx
0x00002df4      4889c6         mov rsi, rax
0x00002df7      4c89e2         mov rdx, r12
0x00002dfa      bf01000000     mov edi, 1
0x00002dff      31c0           xor eax, eax
0x00002e01      e89aebffff     call sym.imp.__printf_chk
0x00002e06      e98bfdffff     jmp 0x2b96
0x00002e0b      e8c0e9ffff     call sym.imp.dcgettext
0x00002e10      488d0de93300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6200 ; "https://www.gnu.org/software/coreutils/"
0x00002e17      488d15702f00.  lea rdx, str.GNU_coreutils              ; 0x5d8e ; "GNU coreutils"
0x00002e1e      4889c6         mov rsi, rax
0x00002e21      bf01000000     mov edi, 1
0x00002e26      31c0           xor eax, eax
0x00002e28      e873ebffff     call sym.imp.__printf_chk
0x00002e2d      31f6           xor esi, esi
0x00002e2f      bf05000000     mov edi, 5
0x00002e34      e857ebffff     call sym.imp.setlocale
0x00002e39      4885c0         test rax, rax
0x00002e3c      7418           je 0x2e56
0x00002e3e      488d35572f00.  lea rsi, [0x00005d9c]                   ; "en_"
0x00002e45      ba03000000     mov edx, 3
0x00002e4a      4889c7         mov rdi, rax
0x00002e4d      e8eee8ffff     call sym.imp.strncmp
0x00002e52      85c0           test eax, eax
0x00002e54      7543           jne 0x2e99
0x00002e56      488d35432f00.  lea rsi, str.Full_documentation___s_s   ; 0x5da0 ; "Full documentation <%s%s>\n"
0x00002e5d      ba05000000     mov edx, 5
0x00002e62      31ff           xor edi, edi
0x00002e64      4c8d25992e00.  lea r12, str.pinky                      ; 0x5d04 ; "pinky"
0x00002e6b      488d1dc22e00.  lea rbx, [0x00005d34]                   ; " invocation"
0x00002e72      e859e9ffff     call sym.imp.dcgettext
0x00002e77      488d0d862e00.  lea rcx, str.pinky                      ; 0x5d04 ; "pinky"
0x00002e7e      488d157b3300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6200 ; "https://www.gnu.org/software/coreutils/"
0x00002e85      4889c6         mov rsi, rax
0x00002e88      bf01000000     mov edi, 1
0x00002e8d      31c0           xor eax, eax
0x00002e8f      e80cebffff     call sym.imp.__printf_chk
0x00002e94      e945ffffff     jmp 0x2dde
0x00002e99      4c8d25642e00.  lea r12, str.pinky                      ; 0x5d04 ; "pinky"
0x00002ea0      4c8b2d015220.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002ea7      488d357a3300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6228 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002eae      31ff           xor edi, edi
0x00002eb0      ba05000000     mov edx, 5
0x00002eb5      e816e9ffff     call sym.imp.dcgettext
0x00002eba      4c89ee         mov rsi, r13
0x00002ebd      4889c7         mov rdi, rax
0x00002ec0      e8dbe9ffff     call sym.imp.fputs_unlocked
0x00002ec5      e9cffeffff     jmp 0x2d99
0x00002eca      660f1f440000   nop word [rax + rax]
;-- canon_host_r:
0x00002ed0      4154           push r12                                ; ../coreutils-8.31/lib/canon-host.c:61
0x00002ed2      55             push rbp
0x00002ed3      488d15665220.  lea rdx, obj.hints.3317                 ; ../coreutils-8.31/lib/canon-host.c:68 ; 0x208140
0x00002eda      53             push rbx                                ; ../coreutils-8.31/lib/canon-host.c:61
0x00002edb      4889f3         mov rbx, rsi
0x00002ede      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/canon-host.c:68
0x00002ee0      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/canon-host.c:61
0x00002ee3      4883ec10       sub rsp, 0x10
0x00002ee7      c7054f522000.  mov dword [obj.hints.3317], 2           ; ../coreutils-8.31/lib/canon-host.c:67 ; [0x208140:4]=0
0x00002ef1      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/canon-host.c:68
0x00002ef4      48c704240000.  mov qword [rsp], 0                      ; ../coreutils-8.31/lib/canon-host.c:64
0x00002efc      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/canon-host.c:61
0x00002f05      4889442408     mov qword [rsp + 8], rax
0x00002f0a      31c0           xor eax, eax
0x00002f0c      e82febffff     call sym.imp.getaddrinfo                ; ../coreutils-8.31/lib/canon-host.c:68
0x00002f11      85c0           test eax, eax                           ; ../coreutils-8.31/lib/canon-host.c:69
0x00002f13      7553           jne 0x2f68
0x00002f15      4c8b2424       mov r12, qword [rsp]                    ; ../coreutils-8.31/lib/canon-host.c:74
0x00002f19      498b7c2420     mov rdi, qword [r12 + 0x20]
0x00002f1e      4885ff         test rdi, rdi
0x00002f21      480f44fd       cmove rdi, rbp
0x00002f25      e826ebffff     call sym.imp.strdup
0x00002f2a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/canon-host.c:75
0x00002f2d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/canon-host.c:74
0x00002f30      750b           jne 0x2f3d                              ; ../coreutils-8.31/lib/canon-host.c:75
0x00002f32      4885db         test rbx, rbx
0x00002f35      7406           je 0x2f3d
0x00002f37      c703f6ffffff   mov dword [rbx], 0xfffffff6             ; ../coreutils-8.31/lib/canon-host.c:76 ; [0xfffffff6:4]=-1 ; 4294967286
0x00002f3d      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/canon-host.c:77
0x00002f40      e84bebffff     call sym.imp.freeaddrinfo
0x00002f45      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/canon-host.c:83
0x00002f4a      644833142528.  xor rdx, qword fs:[0x28]
0x00002f53      4889e8         mov rax, rbp
0x00002f56      751b           jne 0x2f73
0x00002f58      4883c410       add rsp, 0x10
0x00002f5c      5b             pop rbx
0x00002f5d      5d             pop rbp
0x00002f5e      415c           pop r12
0x00002f60      c3             ret
0x00002f61      0f1f80000000.  nop dword [rax]
0x00002f68      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/canon-host.c:62
0x00002f6a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/canon-host.c:79
0x00002f6d      74d6           je 0x2f45
0x00002f6f      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/canon-host.c:80
0x00002f71      ebd2           jmp 0x2f45
0x00002f73      e888e8ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/canon-host.c:83
0x00002f78      0f1f84000000.  nop dword [rax + rax]
;-- canon_host:
0x00002f80      488d35e95120.  lea rsi, obj.last_cherror               ; ../coreutils-8.31/lib/canon-host.c:34 ; 0x208170
0x00002f87      e944ffffff     jmp sym.canon_host_r
0x00002f8c      0f1f4000       nop dword [rax]
;-- ch_strerror:
0x00002f90      8b3dda512000   mov edi, dword [obj.last_cherror]       ; ../coreutils-8.31/lib/canon-host.c:88 ; [0x208170:4]=0
0x00002f96      e9a5e8ffff     jmp sym.imp.gai_strerror
0x00002f9b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/canon-host.c:89
;-- close_stdout_set_file_name:
0x00002fa0      48893dd95120.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208180:8]=0
0x00002fa7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002fa8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002fb0      40883dc15120.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208178:1]=0
0x00002fb7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002fb8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002fc0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002fc1      53             push rbx
0x00002fc2      4883ec08       sub rsp, 8
0x00002fc6      488b3ddb5020.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002fcd      e81e2b0000     call sym.close_stream
0x00002fd2      85c0           test eax, eax
0x00002fd4      7416           je 0x2fec
0x00002fd6      e845e7ffff     call sym.imp.__errno_location
0x00002fdb      803d96512000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208178:1]=0
0x00002fe2      4889c3         mov rbx, rax
0x00002fe5      741c           je 0x3003
0x00002fe7      833820         cmp dword [rax], 0x20
0x00002fea      7517           jne 0x3003
0x00002fec      488b3dcd5020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00002ff3      e8f82a0000     call sym.close_stream
0x00002ff8      85c0           test eax, eax
0x00002ffa      7546           jne 0x3042
0x00002ffc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003000      5b             pop rbx
0x00003001      5d             pop rbp
0x00003002      c3             ret
0x00003003      488d35e73200.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x62f1 ; "write error"
0x0000300a      31ff           xor edi, edi
0x0000300c      ba05000000     mov edx, 5
0x00003011      e8bae7ffff     call sym.imp.dcgettext
0x00003016      488b3d635120.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208180:8]=0
0x0000301d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003020      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003023      7428           je 0x304d
0x00003025      e8561c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000302a      8b33           mov esi, dword [rbx]
0x0000302c      488d15ca3200.  lea rdx, str.s:__s                      ; 0x62fd ; "%s: %s"
0x00003033      4889c1         mov rcx, rax
0x00003036      4989e8         mov r8, rbp
0x00003039      31ff           xor edi, edi
0x0000303b      31c0           xor eax, eax
0x0000303d      e88ee9ffff     call sym.imp.error
0x00003042      8b3dd84f2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208020:4]=1
0x00003048      e803e7ffff     call sym.imp._exit
0x0000304d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000304f      488d15ab3200.  lea rdx, [0x00006301]                   ; "%s"
0x00003056      4889c1         mov rcx, rax
0x00003059      31ff           xor edi, edi
0x0000305b      31c0           xor eax, eax
0x0000305d      e86ee9ffff     call sym.imp.error
0x00003062      ebde           jmp 0x3042
0x00003064      662e0f1f8400.  nop word cs:[rax + rax]
0x0000306e      6690           nop
;-- hard_locale:
0x00003070      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00003074      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00003076      e815e9ffff     call sym.imp.setlocale
0x0000307b      4889c2         mov rdx, rax
0x0000307e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00003083      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00003086      741d           je 0x30a5
0x00003088      488d3d753200.  lea rdi, [0x00006304]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000308f      b902000000     mov ecx, 2
0x00003094      4889d6         mov rsi, rdx
0x00003097      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003099      0f97c1         seta cl
0x0000309c      80d900         sbb cl, 0
0x0000309f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000030a1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000030a3      750b           jne 0x30b0
0x000030a5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000030a9      c3             ret
0x000030aa      660f1f440000   nop word [rax + rax]
0x000030b0      488d3d4f3200.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6306 ; "POSIX"
0x000030b7      b906000000     mov ecx, 6
0x000030bc      4889d6         mov rsi, rdx
0x000030bf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000030c1      0f97c0         seta al
0x000030c4      1c00           sbb al, 0
0x000030c6      84c0           test al, al
0x000030c8      0f95c0         setne al
0x000030cb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000030cf      c3             ret
;-- imaxtostr:
0x000030d0      4885ff         test rdi, rdi
0x000030d3      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x000030d7      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000030db      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x000030e5      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x000030ef      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x000030f5      783c           js 0x3133                               ; ../coreutils-8.31/lib/anytostr.c:41
0x000030f7      660f1f840000.  nop word [rax + rax]
0x00003100      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x00003103      4883e901       sub rcx, 1
0x00003107      48f7e6         mul rsi
0x0000310a      48c1ea03       shr rdx, 3
0x0000310e      488d0492       lea rax, [rdx + rdx*4]
0x00003112      4801c0         add rax, rax
0x00003115      4829c7         sub rdi, rax
0x00003118      83c730         add edi, 0x30
0x0000311b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000311e      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003121      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00003124      75da           jne 0x3100
0x00003126      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003129      c3             ret
0x0000312a      660f1f440000   nop word [rax + rax]
0x00003130      4889f1         mov rcx, rsi
0x00003133      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x00003136      488d71ff       lea rsi, [rcx - 1]
0x0000313a      49f7e9         imul r9
0x0000313d      4889f8         mov rax, rdi
0x00003140      48c1f83f       sar rax, 0x3f
0x00003144      48c1fa02       sar rdx, 2
0x00003148      4829c2         sub rdx, rax
0x0000314b      488d0492       lea rax, [rdx + rdx*4]
0x0000314f      418d0440       lea eax, [r8 + rax*2]
0x00003153      29f8           sub eax, edi
0x00003155      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00003158      4889d7         mov rdi, rdx
0x0000315b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000315e      75d0           jne 0x3130                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00003160      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00003164      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00003168      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000316b      c3             ret
0x0000316c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00003170      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003173      53             push rbx
0x00003174      7477           je 0x31ed                               ; ../coreutils-8.31/lib/progname.c:51
0x00003176      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000317b      4889fb         mov rbx, rdi
0x0000317e      e8dde6ffff     call sym.imp.strrchr
0x00003183      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003186      7455           je 0x31dd
0x00003188      4c8d4001       lea r8, [rax + 1]
0x0000318c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000318f      4829da         sub rdx, rbx
0x00003192      4883fa06       cmp rdx, 6
0x00003196      7e45           jle 0x31dd
0x00003198      488d70fa       lea rsi, [rax - 6]
0x0000319c      488d3da53100.  lea rdi, str..libs                      ; 0x6348 ; "/.libs/"
0x000031a3      b907000000     mov ecx, 7
0x000031a8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000031aa      0f97c2         seta dl
0x000031ad      80da00         sbb dl, 0
0x000031b0      84d2           test dl, dl
0x000031b2      7529           jne 0x31dd
0x000031b4      488d3d953100.  lea rdi, [0x00006350]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000031bb      b903000000     mov ecx, 3
0x000031c0      4c89c6         mov rsi, r8
0x000031c3      4c89c3         mov rbx, r8
0x000031c6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000031c8      0f97c2         seta dl
0x000031cb      80da00         sbb dl, 0
0x000031ce      84d2           test dl, dl
0x000031d0      750b           jne 0x31dd
0x000031d2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000031d6      48891dc34e20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x000031dd      48891da44f20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208188:8]=0
0x000031e4      48891dcd4e20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080b8:8]=0
0x000031eb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000031ec      c3             ret
0x000031ed      488b0dcc4e20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x000031f4      488d3d153100.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6310 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000031fb      ba37000000     mov edx, 0x37                           ; '7'
0x00003200      be01000000     mov esi, 1
0x00003205      e816e8ffff     call sym.imp.fwrite
0x0000320a      e801e5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000320f      90             nop
;-- gettext_quote.part.1:
0x00003210      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003211      53             push rbx
0x00003212      4889fd         mov rbp, rdi
0x00003215      89f3           mov ebx, esi
0x00003217      4883ec08       sub rsp, 8
0x0000321b      e850290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003220      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003223      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003226      80fa55         cmp dl, 0x55
0x00003229      7475           je 0x32a0
0x0000322b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000322e      7420           je 0x3250
0x00003230      488d052c3100.  lea rax, str.l______l                   ; 0x6363 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003237      488d15273100.  lea rdx, [0x00006365]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000323e      83fb09         cmp ebx, 9
0x00003241      480f45c2       cmovne rax, rdx
0x00003245      4883c408       add rsp, 8
0x00003249      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000324a      5d             pop rbp
0x0000324b      c3             ret
0x0000324c      0f1f4000       nop dword [rax]
0x00003250      0fb65001       movzx edx, byte [rax + 1]
0x00003254      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003257      80fa42         cmp dl, 0x42
0x0000325a      75d4           jne 0x3230
0x0000325c      80780231       cmp byte [rax + 2], 0x31
0x00003260      75ce           jne 0x3230
0x00003262      80780338       cmp byte [rax + 3], 0x38
0x00003266      75c8           jne 0x3230
0x00003268      80780430       cmp byte [rax + 4], 0x30
0x0000326c      75c2           jne 0x3230
0x0000326e      80780533       cmp byte [rax + 5], 0x33
0x00003272      75bc           jne 0x3230
0x00003274      80780630       cmp byte [rax + 6], 0x30
0x00003278      75b6           jne 0x3230
0x0000327a      80780700       cmp byte [rax + 7], 0
0x0000327e      75b0           jne 0x3230
0x00003280      807d0060       cmp byte [rbp], 0x60
0x00003284      488d05d13000.  lea rax, [0x0000635c]
0x0000328b      488d15ce3000.  lea rdx, [0x00006360]
0x00003292      480f45c2       cmovne rax, rdx
0x00003296      4883c408       add rsp, 8
0x0000329a      5b             pop rbx
0x0000329b      5d             pop rbp
0x0000329c      c3             ret
0x0000329d      0f1f00         nop dword [rax]
0x000032a0      0fb65001       movzx edx, byte [rax + 1]
0x000032a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032a7      80fa54         cmp dl, 0x54
0x000032aa      7584           jne 0x3230
0x000032ac      0fb65002       movzx edx, byte [rax + 2]
0x000032b0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032b3      80fa46         cmp dl, 0x46
0x000032b6      0f8574ffffff   jne 0x3230
0x000032bc      8078032d       cmp byte [rax + 3], 0x2d
0x000032c0      0f856affffff   jne 0x3230
0x000032c6      80780438       cmp byte [rax + 4], 0x38
0x000032ca      0f8560ffffff   jne 0x3230
0x000032d0      80780500       cmp byte [rax + 5], 0
0x000032d4      0f8556ffffff   jne 0x3230
0x000032da      807d0060       cmp byte [rbp], 0x60
0x000032de      488d056f3000.  lea rax, [0x00006354]                   ; "\u2018"
0x000032e5      488d156c3000.  lea rdx, [0x00006358]                   ; "\u2019"
0x000032ec      480f45c2       cmovne rax, rdx
0x000032f0      4883c408       add rsp, 8
0x000032f4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000032f5      5d             pop rbp
0x000032f6      c3             ret
0x000032f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003300      4157           push r15
0x00003302      4156           push r14
0x00003304      4589c7         mov r15d, r8d
0x00003307      4155           push r13
0x00003309      4154           push r12
0x0000330b      4989fe         mov r14, rdi
0x0000330e      55             push rbp
0x0000330f      53             push rbx
0x00003310      4489cb         mov ebx, r9d
0x00003313      4989f5         mov r13, rsi
0x00003316      4889cd         mov rbp, rcx
0x00003319      83e302         and ebx, 2
0x0000331c      4881ecb80000.  sub rsp, 0xb8
0x00003323      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000332b      4889542410     mov qword [rsp + 0x10], rdx
0x00003330      4489442408     mov dword [rsp + 8], r8d
0x00003335      44894c2478     mov dword [rsp + 0x78], r9d
0x0000333a      4889442420     mov qword [rsp + 0x20], rax
0x0000333f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003347      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000334c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003354      4889442460     mov qword [rsp + 0x60], rax
0x00003359      64488b042528.  mov rax, qword fs:[0x28]
0x00003362      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000336a      31c0           xor eax, eax
0x0000336c      e86fe4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003371      4183ff0a       cmp r15d, 0xa
0x00003375      4889442458     mov qword [rsp + 0x58], rax
0x0000337a      0f87af110000   ja 0x452f
0x00003380      488d0d393000.  lea rcx, [0x000063c0]
0x00003387      4489fa         mov edx, r15d
0x0000338a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000338e      4801c8         add rax, rcx
0x00003391      ffe0           jmp rax
0x00003393      c644240e01     mov byte [rsp + 0xe], 1
0x00003398      c644247c00     mov byte [rsp + 0x7c], 0
0x0000339d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000033a0      48c744245000.  mov qword [rsp + 0x50], 0
0x000033a9      c644240f01     mov byte [rsp + 0xf], 1
0x000033ae      c644240d00     mov byte [rsp + 0xd], 0
0x000033b3      488d05ab2f00.  lea rax, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000033ba      48c744241801.  mov qword [rsp + 0x18], 1
0x000033c3      4531ff         xor r15d, r15d
0x000033c6      c74424080200.  mov dword [rsp + 8], 2
0x000033ce      4889442448     mov qword [rsp + 0x48], rax
0x000033d3      4531db         xor r11d, r11d
0x000033d6      4889e8         mov rax, rbp
0x000033d9      4589e0         mov r8d, r12d
0x000033dc      4c89dd         mov rbp, r11
0x000033df      4989c3         mov r11, rax
0x000033e2      660f1f440000   nop word [rax + rax]
0x000033e8      4939eb         cmp r11, rbp
0x000033eb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000033ef      4983fbff       cmp r11, 0xffffffffffffffff
0x000033f3      750d           jne 0x3402
0x000033f5      488b442410     mov rax, qword [rsp + 0x10]
0x000033fa      803c2800       cmp byte [rax + rbp], 0
0x000033fe      410f95c4       setne r12b
0x00003402      4584e4         test r12b, r12b
0x00003405      0f8455060000   je 0x3a60
0x0000340b      837c240802     cmp dword [rsp + 8], 2
0x00003410      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003415      4c8d0c2f       lea r9, [rdi + rbp]
0x00003419      0f95c0         setne al
0x0000341c      2244240d       and al, byte [rsp + 0xd]
0x00003420      4189c2         mov r10d, eax
0x00003423      0f84a7000000   je 0x34d0
0x00003429      488b442418     mov rax, qword [rsp + 0x18]
0x0000342e      4885c0         test rax, rax
0x00003431      0f8429040000   je 0x3860
0x00003437      4983fbff       cmp r11, 0xffffffffffffffff
0x0000343b      488d5c0500     lea rbx, [rbp + rax]
0x00003440      752e           jne 0x3470
0x00003442      4883f801       cmp rax, 1
0x00003446      7628           jbe 0x3470
0x00003448      4488442438     mov byte [rsp + 0x38], r8b
0x0000344d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003452      4c894c2428     mov qword [rsp + 0x28], r9
0x00003457      e894e3ffff     call sym.imp.strlen
0x0000345c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003462      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003468      4989c3         mov r11, rax
0x0000346b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003470      4c39db         cmp rbx, r11
0x00003473      4488542428     mov byte [rsp + 0x28], r10b
0x00003478      0f87b2050000   ja 0x3a30
0x0000347e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003483      488b742448     mov rsi, qword [rsp + 0x48]
0x00003488      4c89cf         mov rdi, r9
0x0000348b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003490      4488442438     mov byte [rsp + 0x38], r8b
0x00003495      4c894c2430     mov qword [rsp + 0x30], r9
0x0000349a      e8f1e3ffff     call sym.imp.memcmp
0x0000349f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000034a1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000034a6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000034ac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000034b1      0f8579050000   jne 0x3a30
0x000034b7      807c240f00     cmp byte [rsp + 0xf], 0
0x000034bc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000034c2      0f857d0f0000   jne 0x4445
0x000034c8      0f1f84000000.  nop dword [rax + rax]
0x000034d0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000034d4      80fb7e         cmp bl, 0x7e
0x000034d7      0f871b030000   ja 0x37f8
0x000034dd      488d0d082f00.  lea rcx, [0x000063ec]
0x000034e4      0fb6d3         movzx edx, bl
0x000034e7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000034eb      4801c8         add rax, rcx
0x000034ee      ffe0           jmp rax
0x000034f0      4531d2         xor r10d, r10d
0x000034f3      4983fb01       cmp r11, 1
0x000034f7      0f95c0         setne al
0x000034fa      4983fbff       cmp r11, 0xffffffffffffffff
0x000034fe      750c           jne 0x350c
0x00003500      488b442410     mov rax, qword [rsp + 0x10]
0x00003505      80780100       cmp byte [rax + 1], 0
0x00003509      0f95c0         setne al
0x0000350c      837c240802     cmp dword [rsp + 8], 2
0x00003511      0f94c2         sete dl
0x00003514      84c0           test al, al
0x00003516      0f844c020000   je 0x3768
0x0000351c      4531e4         xor r12d, r12d
0x0000351f      31c0           xor eax, eax
0x00003521      0f1f80000000.  nop dword [rax]
0x00003528      807c240d01     cmp byte [rsp + 0xd], 1
0x0000352d      0f850f010000   jne 0x3642
0x00003533      84d2           test dl, dl
0x00003535      0f8507010000   jne 0x3642
0x0000353b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003540      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003543      7414           je 0x3559
0x00003545      89da           mov edx, ebx
0x00003547      c0ea05         shr dl, 5
0x0000354a      0fb6d2         movzx edx, dl
0x0000354d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003550      0fa3da         bt edx, ebx
0x00003553      0f824a010000   jb 0x36a3
0x00003559      4584d2         test r10b, r10b
0x0000355c      0f8541010000   jne 0x36a3
0x00003562      83f001         xor eax, 1
0x00003565      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003569      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000356c      84c0           test al, al
0x0000356e      7420           je 0x3590                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003570      4d39fd         cmp r13, r15
0x00003573      7605           jbe 0x357a
0x00003575      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000357a      498d4701       lea rax, [r15 + 1]
0x0000357e      4939c5         cmp r13, rax
0x00003581      7606           jbe 0x3589
0x00003583      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003589      4983c702       add r15, 2
0x0000358d      4531c0         xor r8d, r8d
0x00003590      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003593      7304           jae 0x3599                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003595      43881c3e       mov byte [r14 + r15], bl
0x00003599      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000359e      4983c701       add r15, 1
0x000035a2      b800000000     mov eax, 0
0x000035a7      4584e4         test r12b, r12b
0x000035aa      0f44f8         cmove edi, eax
0x000035ad      40887c240e     mov byte [rsp + 0xe], dil
0x000035b2      e931feffff     jmp 0x33e8
0x000035b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000035c0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000035c3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000035c7      83f802         cmp eax, 2
0x000035ca      0f84b8050000   je 0x3b88
0x000035d0      83f805         cmp eax, 5
0x000035d3      0f846f050000   je 0x3b48
0x000035d9      83f802         cmp eax, 2
0x000035dc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000035e1      0f94c2         sete dl
0x000035e4      4531e4         xor r12d, r12d
0x000035e7      31c0           xor eax, eax
0x000035e9      e93affffff     jmp 0x3528
0x000035ee      6690           nop
0x000035f0      4531d2         xor r10d, r10d
0x000035f3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000035f8      0f8402050000   je 0x3b00
0x000035fe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003603      31d2           xor edx, edx
0x00003605      31c0           xor eax, eax
0x00003607      bb27000000     mov ebx, 0x27                           ; '''
0x0000360c      e917ffffff     jmp 0x3528
0x00003611      0f1f80000000.  nop dword [rax]
0x00003618      ba09000000     mov edx, 9
0x0000361d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003622      837c240802     cmp dword [rsp + 8], 2
0x00003627      0f94c0         sete al
0x0000362a      2244240f       and al, byte [rsp + 0xf]
0x0000362e      0f854a010000   jne 0x377e
0x00003634      807c240d00     cmp byte [rsp + 0xd], 0
0x00003639      7565           jne 0x36a0
0x0000363b      89d3           mov ebx, edx
0x0000363d      4531e4         xor r12d, r12d
0x00003640      31c0           xor eax, eax
0x00003642      807c240f00     cmp byte [rsp + 0xf], 0
0x00003647      0f85eefeffff   jne 0x353b
0x0000364d      e907ffffff     jmp 0x3559                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003652      660f1f440000   nop word [rax + rax]
0x00003658      ba08000000     mov edx, 8
0x0000365d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003662      ebd0           jmp 0x3634
0x00003664      0f1f4000       nop dword [rax]
0x00003668      837c240802     cmp dword [rsp + 8], 2
0x0000366d      0f84cd030000   je 0x3a40
0x00003673      807c240d00     cmp byte [rsp + 0xd], 0
0x00003678      0f8412020000   je 0x3890
0x0000367e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003683      0f8407020000   je 0x3890
0x00003689      48837c241800   cmp qword [rsp + 0x18], 0
0x0000368f      0f85b6030000   jne 0x3a4b
0x00003695      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000369a      660f1f440000   nop word [rax + rax]
0x000036a0      4531e4         xor r12d, r12d
0x000036a3      837c240802     cmp dword [rsp + 8], 2
0x000036a8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000036ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000036b0      89d0           mov eax, edx
0x000036b2      0f8550080000   jne 0x3f08
0x000036b8      4489c0         mov eax, r8d
0x000036bb      83f001         xor eax, 1
0x000036be      20d0           and al, dl
0x000036c0      742f           je 0x36f1
0x000036c2      4d39fd         cmp r13, r15
0x000036c5      7605           jbe 0x36cc
0x000036c7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000036cc      498d5701       lea rdx, [r15 + 1]
0x000036d0      4939d5         cmp r13, rdx
0x000036d3      7606           jbe 0x36db
0x000036d5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000036db      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000036df      4939d5         cmp r13, rdx
0x000036e2      7606           jbe 0x36ea
0x000036e4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000036ea      4983c703       add r15, 3
0x000036ee      4189c0         mov r8d, eax
0x000036f1      4d39fd         cmp r13, r15
0x000036f4      7605           jbe 0x36fb
0x000036f6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036fb      4983c701       add r15, 1
0x000036ff      4883c501       add rbp, 1
0x00003703      e988feffff     jmp 0x3590
0x00003708      0f1f84000000.  nop dword [rax + rax]
0x00003710      807c240d00     cmp byte [rsp + 0xd], 0
0x00003715      0f85c8010000   jne 0x38e3
0x0000371b      31d2           xor edx, edx
0x0000371d      f644247801     test byte [rsp + 0x78], 1
0x00003722      0f8413ffffff   je 0x363b
0x00003728      4883c501       add rbp, 1
0x0000372c      e9b7fcffff     jmp 0x33e8
0x00003731      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003738      837c240802     cmp dword [rsp + 8], 2
0x0000373d      0f94c2         sete dl
0x00003740      31c0           xor eax, eax
0x00003742      e9e1fdffff     jmp 0x3528
0x00003747      660f1f840000.  nop word [rax + rax]
0x00003750      ba07000000     mov edx, 7
0x00003755      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000375a      e9d5feffff     jmp 0x3634
0x0000375f      90             nop
0x00003760      837c240802     cmp dword [rsp + 8], 2
0x00003765      0f94c2         sete dl
0x00003768      4885ed         test rbp, rbp
0x0000376b      0f85abfdffff   jne 0x351c
0x00003771      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003776      20d0           and al, dl
0x00003778      0f84aafdffff   je 0x3528
0x0000377e      4c89dd         mov rbp, r11
0x00003781      c74424080200.  mov dword [rsp + 8], 2
0x00003789      e9fb060000     jmp 0x3e89
0x0000378e      6690           nop
0x00003790      837c240802     cmp dword [rsp + 8], 2
0x00003795      0f94c2         sete dl
0x00003798      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000379b      ebd4           jmp 0x3771
0x0000379d      0f1f00         nop dword [rax]
0x000037a0      837c240802     cmp dword [rsp + 8], 2
0x000037a5      bb20000000     mov ebx, 0x20                           ; "@"
0x000037aa      0f94c2         sete dl
0x000037ad      ebc2           jmp 0x3771
0x000037af      90             nop
0x000037b0      ba0d000000     mov edx, 0xd
0x000037b5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000037ba      e963feffff     jmp 0x3622
0x000037bf      90             nop
0x000037c0      ba0c000000     mov edx, 0xc
0x000037c5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000037ca      e965feffff     jmp 0x3634
0x000037cf      90             nop
0x000037d0      ba0b000000     mov edx, 0xb
0x000037d5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000037da      e955feffff     jmp 0x3634
0x000037df      90             nop
0x000037e0      ba0a000000     mov edx, 0xa
0x000037e5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000037ea      e933feffff     jmp 0x3622
0x000037ef      90             nop
0x000037f0      4531d2         xor r10d, r10d
0x000037f3      0f1f440000     nop dword [rax + rax]
0x000037f8      48837c245801   cmp qword [rsp + 0x58], 1
0x000037fe      0f85a4030000   jne 0x3ba8
0x00003804      4c895c2438     mov qword [rsp + 0x38], r11
0x00003809      4488442430     mov byte [rsp + 0x30], r8b
0x0000380e      4488542428     mov byte [rsp + 0x28], r10b
0x00003813      e868e2ffff     call sym.imp.__ctype_b_loc
0x00003818      488b08         mov rcx, qword [rax]
0x0000381b      0fb6d3         movzx edx, bl
0x0000381e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003824      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000382a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000382f      bf01000000     mov edi, 1
0x00003834      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003838      66250040       and ax, 0x4000
0x0000383c      410f95c4       setne r12b
0x00003840      0f94c0         sete al
0x00003843      2244240d       and al, byte [rsp + 0xd]
0x00003847      84c0           test al, al
0x00003849      0f8592090000   jne 0x41e1
0x0000384f      837c240802     cmp dword [rsp + 8], 2
0x00003854      0f94c2         sete dl
0x00003857      e9ccfcffff     jmp 0x3528
0x0000385c      0f1f4000       nop dword [rax]
0x00003860      410fb619       movzx ebx, byte [r9]
0x00003864      80fb7e         cmp bl, 0x7e
0x00003867      7787           ja 0x37f0
0x00003869      488d0d782d00.  lea rcx, [0x000065e8]
0x00003870      0fb6d3         movzx edx, bl
0x00003873      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003877      4801c8         add rax, rcx
0x0000387a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000387c      0f1f4000       nop dword [rax]
0x00003880      4531d2         xor r10d, r10d
0x00003883      807c240d00     cmp byte [rsp + 0xd], 0
0x00003888      0f85f0fdffff   jne 0x367e
0x0000388e      6690           nop
0x00003890      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003895      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000389a      e995fdffff     jmp 0x3634
0x0000389f      90             nop
0x000038a0      ba0c000000     mov edx, 0xc
0x000038a5      4531d2         xor r10d, r10d
0x000038a8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000038ad      e982fdffff     jmp 0x3634
0x000038b2      660f1f440000   nop word [rax + rax]
0x000038b8      ba0a000000     mov edx, 0xa
0x000038bd      4531d2         xor r10d, r10d
0x000038c0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000038c5      e958fdffff     jmp 0x3622
0x000038ca      660f1f440000   nop word [rax + rax]
0x000038d0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000038d5      e9c6fdffff     jmp 0x36a0
0x000038da      660f1f440000   nop word [rax + rax]
0x000038e0      4531d2         xor r10d, r10d
0x000038e3      837c240802     cmp dword [rsp + 8], 2
0x000038e8      0f94c2         sete dl
0x000038eb      807c240f00     cmp byte [rsp + 0xf], 0
0x000038f0      0f85940b0000   jne 0x448a
0x000038f6      4489c0         mov eax, r8d
0x000038f9      4c89f9         mov rcx, r15
0x000038fc      83f001         xor eax, 1
0x000038ff      20d0           and al, dl
0x00003901      742d           je 0x3930
0x00003903      4d39fd         cmp r13, r15
0x00003906      7605           jbe 0x390d
0x00003908      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000390d      498d4f01       lea rcx, [r15 + 1]
0x00003911      4939cd         cmp r13, rcx
0x00003914      7606           jbe 0x391c
0x00003916      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000391c      498d4f02       lea rcx, [r15 + 2]
0x00003920      4939cd         cmp r13, rcx
0x00003923      0f8730060000   ja 0x3f59
0x00003929      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000392d      4189c0         mov r8d, eax
0x00003930      4939cd         cmp r13, rcx
0x00003933      7605           jbe 0x393a
0x00003935      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000393a      837c240802     cmp dword [rsp + 8], 2
0x0000393f      4c8d7901       lea r15, [rcx + 1]
0x00003943      0f8400060000   je 0x3f49
0x00003949      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000394d      4c39d8         cmp rax, r11
0x00003950      7319           jae 0x396b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003952      488b442410     mov rax, qword [rsp + 0x10]
0x00003957      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000395c      88442428       mov byte [rsp + 0x28], al
0x00003960      83e830         sub eax, 0x30
0x00003963      3c09           cmp al, 9
0x00003965      0f862e080000   jbe 0x4199
0x0000396b      4489e0         mov eax, r12d
0x0000396e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003973      4531e4         xor r12d, r12d
0x00003976      e9adfbffff     jmp 0x3528                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000397b      0f1f440000     nop dword [rax + rax]
0x00003980      837c240802     cmp dword [rsp + 8], 2
0x00003985      4589d4         mov r12d, r10d
0x00003988      0f94c2         sete dl
0x0000398b      4531d2         xor r10d, r10d
0x0000398e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003990      e993fbffff     jmp 0x3528                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003995      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003998      837c240802     cmp dword [rsp + 8], 2
0x0000399d      0f94c2         sete dl
0x000039a0      4531d2         xor r10d, r10d
0x000039a3      e9c0fdffff     jmp 0x3768
0x000039a8      0f1f84000000.  nop dword [rax + rax]
0x000039b0      837c240802     cmp dword [rsp + 8], 2
0x000039b5      0f94c2         sete dl
0x000039b8      4531d2         xor r10d, r10d
0x000039bb      4531e4         xor r12d, r12d
0x000039be      e9aefdffff     jmp 0x3771
0x000039c3      0f1f440000     nop dword [rax + rax]
0x000039c8      837c240802     cmp dword [rsp + 8], 2
0x000039cd      4589d4         mov r12d, r10d
0x000039d0      bb20000000     mov ebx, 0x20                           ; "@"
0x000039d5      0f94c2         sete dl
0x000039d8      4531d2         xor r10d, r10d
0x000039db      e991fdffff     jmp 0x3771
0x000039e0      ba0d000000     mov edx, 0xd
0x000039e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000039e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000039ed      e930fcffff     jmp 0x3622
0x000039f2      660f1f440000   nop word [rax + rax]
0x000039f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000039fd      e99efcffff     jmp 0x36a0
0x00003a02      660f1f440000   nop word [rax + rax]
0x00003a08      ba09000000     mov edx, 9
0x00003a0d      4531d2         xor r10d, r10d
0x00003a10      bb74000000     mov ebx, 0x74                           ; 't'
0x00003a15      e908fcffff     jmp 0x3622
0x00003a1a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003a20      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a25      e976fcffff     jmp 0x36a0
0x00003a2a      660f1f440000   nop word [rax + rax]
0x00003a30      4531d2         xor r10d, r10d
0x00003a33      e998faffff     jmp 0x34d0
0x00003a38      0f1f84000000.  nop dword [rax + rax]
0x00003a40      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a45      0f8565090000   jne 0x43b0
0x00003a4b      4883c501       add rbp, 1
0x00003a4f      4489c0         mov eax, r8d
0x00003a52      4531e4         xor r12d, r12d
0x00003a55      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a5a      e90dfbffff     jmp 0x356c
0x00003a5f      90             nop
0x00003a60      837c240802     cmp dword [rsp + 8], 2
0x00003a65      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003a6a      4589c4         mov r12d, r8d
0x00003a6d      4c89dd         mov rbp, r11
0x00003a70      0f94c2         sete dl
0x00003a73      89d8           mov eax, ebx
0x00003a75      4d85ff         test r15, r15
0x00003a78      0f94c1         sete cl
0x00003a7b      21d0           and eax, edx
0x00003a7d      20c8           and al, cl
0x00003a7f      0f85610a0000   jne 0x44e6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003a85      89d8           mov eax, ebx
0x00003a87      83f001         xor eax, 1
0x00003a8a      20c2           and dl, al
0x00003a8c      0f846a090000   je 0x43fc
0x00003a92      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003a97      0f845d090000   je 0x43fa
0x00003a9d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003aa2      0f85f5090000   jne 0x449d
0x00003aa8      4d85ed         test r13, r13
0x00003aab      0f94c0         sete al
0x00003aae      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ab4      0f95c2         setne dl
0x00003ab7      20d0           and al, dl
0x00003ab9      0f841d0a0000   je 0x44dc
0x00003abf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ac4      488d1d9a2800.  lea rbx, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003acb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003acf      c74424080200.  mov dword [rsp + 8], 2
0x00003ad7      41bf01000000   mov r15d, 1
0x00003add      48c744241801.  mov qword [rsp + 0x18], 1
0x00003ae6      c644240f00     mov byte [rsp + 0xf], 0
0x00003aeb      48895c2448     mov qword [rsp + 0x48], rbx
0x00003af0      8844247c       mov byte [rsp + 0x7c], al
0x00003af4      e9daf8ffff     jmp 0x33d3
0x00003af9      0f1f80000000.  nop dword [rax]
0x00003b00      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b05      0f85a5080000   jne 0x43b0
0x00003b0b      4d85ed         test r13, r13
0x00003b0e      0f84fc030000   je 0x3f10                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003b14      31d2           xor edx, edx
0x00003b16      48837c245000   cmp qword [rsp + 0x50], 0
0x00003b1c      0f85ee030000   jne 0x3f10                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003b22      4c896c2450     mov qword [rsp + 0x50], r13
0x00003b27      4983c703       add r15, 3
0x00003b2b      31c0           xor eax, eax
0x00003b2d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003b32      4531c0         xor r8d, r8d
0x00003b35      4989d5         mov r13, rdx
0x00003b38      bb27000000     mov ebx, 0x27                           ; '''
0x00003b3d      e917faffff     jmp 0x3559
0x00003b42      660f1f440000   nop word [rax + rax]
0x00003b48      f644247804     test byte [rsp + 0x78], 4
0x00003b4d      7421           je 0x3b70
0x00003b4f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003b53      4c39d9         cmp rcx, r11
0x00003b56      7318           jae 0x3b70
0x00003b58      488b442410     mov rax, qword [rsp + 0x10]
0x00003b5d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003b62      0f848a070000   je 0x42f2
0x00003b68      0f1f84000000.  nop dword [rax + rax]
0x00003b70      31d2           xor edx, edx
0x00003b72      4531e4         xor r12d, r12d
0x00003b75      31c0           xor eax, eax
0x00003b77      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b7c      e9a7f9ffff     jmp 0x3528
0x00003b81      0f1f80000000.  nop dword [rax]
0x00003b88      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b8d      0f851d080000   jne 0x43b0
0x00003b93      4531e4         xor r12d, r12d
0x00003b96      31c0           xor eax, eax
0x00003b98      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b9d      e9b7f9ffff     jmp 0x3559                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003ba2      660f1f440000   nop word [rax + rax]
0x00003ba8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003bb0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bb4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003bc0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003bc5      752d           jne 0x3bf4
0x00003bc7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bcc      4488442440     mov byte [rsp + 0x40], r8b
0x00003bd1      4488542438     mov byte [rsp + 0x38], r10b
0x00003bd6      4c894c2430     mov qword [rsp + 0x30], r9
0x00003bdb      e810dcffff     call sym.imp.strlen
0x00003be0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003be6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003bec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003bef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003bf4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003bfc      31c9           xor ecx, ecx
0x00003bfe      885c247e       mov byte [rsp + 0x7e], bl
0x00003c02      448844247d     mov byte [rsp + 0x7d], r8b
0x00003c07      4889cb         mov rbx, rcx
0x00003c0a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003c12      4889442438     mov qword [rsp + 0x38], rax
0x00003c17      448854247f     mov byte [rsp + 0x7f], r10b
0x00003c1c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003c24      4c89742440     mov qword [rsp + 0x40], r14
0x00003c29      4c896c2470     mov qword [rsp + 0x70], r13
0x00003c2e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003c33      488b442410     mov rax, qword [rsp + 0x10]
0x00003c38      4c8d741d00     lea r14, [rbp + rbx]
0x00003c3d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003c42      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003c47      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003c4c      4e8d2c30       lea r13, [rax + r14]
0x00003c50      4c29f2         sub rdx, r14
0x00003c53      4c89ee         mov rsi, r13
0x00003c56      e8151c0000     call sym.rpl_mbrtowc
0x00003c5b      4885c0         test rax, rax
0x00003c5e      4989c7         mov r15, rax
0x00003c61      744e           je 0x3cb1
0x00003c63      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003c67      0f8418060000   je 0x4285
0x00003c6d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003c71      0f849a050000   je 0x4211
0x00003c77      837c240802     cmp dword [rsp + 8], 2
0x00003c7c      0f94c0         sete al
0x00003c7f      2244240f       and al, byte [rsp + 0xf]
0x00003c83      0f8597010000   jne 0x3e20
0x00003c89      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003c90      e8dbddffff     call sym.imp.iswprint
0x00003c95      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003c9a      85c0           test eax, eax
0x00003c9c      b800000000     mov eax, 0
0x00003ca1      440f44e0       cmove r12d, eax
0x00003ca5      4c01fb         add rbx, r15
0x00003ca8      e8b3ddffff     call sym.imp.mbsinit
0x00003cad      85c0           test eax, eax
0x00003caf      7482           je 0x3c33
0x00003cb1      4489e2         mov edx, r12d
0x00003cb4      4889df         mov rdi, rbx
0x00003cb7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003cbd      83f201         xor edx, 1
0x00003cc0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003cc5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003ccb      2254240d       and dl, byte [rsp + 0xd]
0x00003ccf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003cd7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003cdc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ce1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003ce6      4883ff01       cmp rdi, 1
0x00003cea      0f86fb050000   jbe 0x42eb
0x00003cf0      4889f9         mov rcx, rdi
0x00003cf3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003cf5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003cfb      4801e9         add rcx, rbp
0x00003cfe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003d03      e9b6000000     jmp 0x3dbe
0x00003d08      0f1f84000000.  nop dword [rax + rax]
0x00003d10      837c240802     cmp dword [rsp + 8], 2
0x00003d15      0f94c0         sete al
0x00003d18      4584c9         test r9b, r9b
0x00003d1b      0f85af040000   jne 0x41d0
0x00003d21      4489c6         mov esi, r8d
0x00003d24      83f601         xor esi, 1
0x00003d27      4020f0         and al, sil
0x00003d2a      742f           je 0x3d5b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003d2c      4d39fd         cmp r13, r15
0x00003d2f      7605           jbe 0x3d36
0x00003d31      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d36      498d7701       lea rsi, [r15 + 1]
0x00003d3a      4939f5         cmp r13, rsi
0x00003d3d      7606           jbe 0x3d45                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003d3f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003d45      498d7702       lea rsi, [r15 + 2]
0x00003d49      4939f5         cmp r13, rsi
0x00003d4c      7606           jbe 0x3d54
0x00003d4e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d54      4983c703       add r15, 3
0x00003d58      4189c0         mov r8d, eax
0x00003d5b      4d39fd         cmp r13, r15
0x00003d5e      7605           jbe 0x3d65
0x00003d60      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003d65      498d4701       lea rax, [r15 + 1]
0x00003d69      4939c5         cmp r13, rax
0x00003d6c      760d           jbe 0x3d7b
0x00003d6e      89d8           mov eax, ebx
0x00003d70      c0e806         shr al, 6
0x00003d73      83c030         add eax, 0x30
0x00003d76      4388443e01     mov byte [r14 + r15 + 1], al
0x00003d7b      498d4702       lea rax, [r15 + 2]
0x00003d7f      4939c5         cmp r13, rax
0x00003d82      7610           jbe 0x3d94
0x00003d84      89d8           mov eax, ebx
0x00003d86      c0e803         shr al, 3
0x00003d89      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003d8c      83c030         add eax, 0x30
0x00003d8f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003d94      83e307         and ebx, 7
0x00003d97      4883c501       add rbp, 1
0x00003d9b      4983c703       add r15, 3
0x00003d9f      83c330         add ebx, 0x30
0x00003da2      4839cd         cmp rbp, rcx
0x00003da5      0f83e5f7ffff   jae 0x3590
0x00003dab      89d6           mov esi, edx
0x00003dad      4d39fd         cmp r13, r15
0x00003db0      7604           jbe 0x3db6
0x00003db2      43881c3e       mov byte [r14 + r15], bl
0x00003db6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003dba      4983c701       add r15, 1
0x00003dbe      84d2           test dl, dl
0x00003dc0      0f854affffff   jne 0x3d10
0x00003dc6      89f0           mov eax, esi
0x00003dc8      83f001         xor eax, 1
0x00003dcb      4421c0         and eax, r8d
0x00003dce      4584d2         test r10b, r10b
0x00003dd1      740e           je 0x3de1
0x00003dd3      4d39fd         cmp r13, r15
0x00003dd6      7605           jbe 0x3ddd
0x00003dd8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003ddd      4983c701       add r15, 1
0x00003de1      4883c501       add rbp, 1
0x00003de5      4839cd         cmp rbp, rcx
0x00003de8      0f837ef7ffff   jae 0x356c
0x00003dee      84c0           test al, al
0x00003df0      0f84f8030000   je 0x41ee
0x00003df6      4d39fd         cmp r13, r15
0x00003df9      7605           jbe 0x3e00
0x00003dfb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e00      498d4701       lea rax, [r15 + 1]
0x00003e04      4939c5         cmp r13, rax
0x00003e07      7606           jbe 0x3e0f
0x00003e09      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e0f      4983c702       add r15, 2
0x00003e13      4531d2         xor r10d, r10d
0x00003e16      4531c0         xor r8d, r8d
0x00003e19      eb92           jmp 0x3dad
0x00003e1b      0f1f440000     nop dword [rax + rax]
0x00003e20      4983ff01       cmp r15, 1
0x00003e24      0f845ffeffff   je 0x3c89
0x00003e2a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003e2f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003e33      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003e38      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003e3c      eb0f           jmp 0x3e4d
0x00003e3e      6690           nop
0x00003e40      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003e44      4939d0         cmp r8, rdx
0x00003e47      0f843cfeffff   je 0x3c89
0x00003e4d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003e50      83e95b         sub ecx, 0x5b
0x00003e53      80f921         cmp cl, 0x21
0x00003e56      77e8           ja 0x3e40                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003e58      be01000000     mov esi, 1
0x00003e5d      48d3e6         shl rsi, cl
0x00003e60      4889f1         mov rcx, rsi
0x00003e63      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003e6d      4885f1         test rcx, rsi
0x00003e70      74ce           je 0x3e40
0x00003e72      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e77      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e7c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003e81      c74424080200.  mov dword [rsp + 8], 2
0x00003e89      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e8e      7410           je 0x3ea0
0x00003e90      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003e92      b804000000     mov eax, 4
0x00003e97      0f44442408     cmove eax, dword [rsp + 8]
0x00003e9c      89442408       mov dword [rsp + 8], eax
0x00003ea0      4883ec08       sub rsp, 8
0x00003ea4      4889e9         mov rcx, rbp
0x00003ea7      4c89ee         mov rsi, r13
0x00003eaa      ff742468       push qword [rsp + 0x68]
0x00003eae      ff742478       push qword [rsp + 0x78]
0x00003eb2      4c89f7         mov rdi, r14
0x00003eb5      6a00           push 0
0x00003eb7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003ebf      448b442428     mov r8d, dword [rsp + 0x28]
0x00003ec4      488b542430     mov rdx, qword [rsp + 0x30]
0x00003ec9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003ecd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003ed2      4883c420       add rsp, 0x20
0x00003ed6      4989c7         mov r15, rax
0x00003ed9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003ee1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003eea      4c89f8         mov rax, r15
0x00003eed      0f8500060000   jne 0x44f3
0x00003ef3      4881c4b80000.  add rsp, 0xb8
0x00003efa      5b             pop rbx
0x00003efb      5d             pop rbp
0x00003efc      415c           pop r12
0x00003efe      415d           pop r13
0x00003f00      415e           pop r14
0x00003f02      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003f04      c3             ret
0x00003f05      0f1f00         nop dword [rax]
0x00003f08      4c89dd         mov rbp, r11
0x00003f0b      e979ffffff     jmp 0x3e89
0x00003f10      4d39fd         cmp r13, r15
0x00003f13      7605           jbe 0x3f1a
0x00003f15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f1a      498d4701       lea rax, [r15 + 1]
0x00003f1e      4939c5         cmp r13, rax
0x00003f21      7606           jbe 0x3f29
0x00003f23      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003f29      498d4702       lea rax, [r15 + 2]
0x00003f2d      4939c5         cmp r13, rax
0x00003f30      0f86ec050000   jbe 0x4522
0x00003f36      4c89ea         mov rdx, r13
0x00003f39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f3f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003f44      e9d9fbffff     jmp 0x3b22
0x00003f49      4489e0         mov eax, r12d
0x00003f4c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003f51      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003f54      e900f6ffff     jmp 0x3559                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003f59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f5f      e9c5f9ffff     jmp 0x3929
0x00003f64      85db           test ebx, ebx
0x00003f66      0f8527f4ffff   jne 0x3393
0x00003f6c      c644240d01     mov byte [rsp + 0xd], 1
0x00003f71      4d85ed         test r13, r13
0x00003f74      0f8590050000   jne 0x450a
0x00003f7a      488d05e42300.  lea rax, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f81      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f8a      c644240e01     mov byte [rsp + 0xe], 1
0x00003f8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f94      4531e4         xor r12d, r12d
0x00003f97      c644240f00     mov byte [rsp + 0xf], 0
0x00003f9c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003fa5      4889442448     mov qword [rsp + 0x48], rax
0x00003faa      41bf01000000   mov r15d, 1
0x00003fb0      c74424080200.  mov dword [rsp + 8], 2
0x00003fb8      e916f4ffff     jmp 0x33d3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003fbd      0f1f00         nop dword [rax]
0x00003fc0      85db           test ebx, ebx
0x00003fc2      0f85f5030000   jne 0x43bd
0x00003fc8      4d85ed         test r13, r13
0x00003fcb      0f8425020000   je 0x41f6
0x00003fd1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003fd5      c644240e01     mov byte [rsp + 0xe], 1
0x00003fda      4531e4         xor r12d, r12d
0x00003fdd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003fe2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003feb      488d05712300.  lea rax, str.l______l                   ; 0x6363 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003ff2      c644240f00     mov byte [rsp + 0xf], 0
0x00003ff7      c644240d01     mov byte [rsp + 0xd], 1
0x00003ffc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004005      41bf01000000   mov r15d, 1
0x0000400b      4889442448     mov qword [rsp + 0x48], rax
0x00004010      e9bef3ffff     jmp 0x33d3
0x00004015      488d05472300.  lea rax, str.l______l                   ; 0x6363 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000401c      c644240e01     mov byte [rsp + 0xe], 1
0x00004021      c644247c00     mov byte [rsp + 0x7c], 0
0x00004026      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004029      48c744245000.  mov qword [rsp + 0x50], 0
0x00004032      c644240f01     mov byte [rsp + 0xf], 1
0x00004037      c644240d01     mov byte [rsp + 0xd], 1
0x0000403c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004045      4531ff         xor r15d, r15d
0x00004048      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000404d      c74424080500.  mov dword [rsp + 8], 5
0x00004055      e979f3ffff     jmp 0x33d3
0x0000405a      c644240e01     mov byte [rsp + 0xe], 1
0x0000405f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004064      4531e4         xor r12d, r12d
0x00004067      48c744245000.  mov qword [rsp + 0x50], 0
0x00004070      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004075      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004078      c644240d01     mov byte [rsp + 0xd], 1
0x0000407d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004086      48c744244800.  mov qword [rsp + 0x48], 0
0x0000408f      e93ff3ffff     jmp 0x33d3
0x00004094      837c24080a     cmp dword [rsp + 8], 0xa
0x00004099      7456           je 0x40f1
0x0000409b      488d35c52200.  lea rsi, [0x00006367]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000040a2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000040a4      ba05000000     mov edx, 5
0x000040a9      e822d7ffff     call sym.imp.dcgettext
0x000040ae      4889c1         mov rcx, rax
0x000040b1      4889442468     mov qword [rsp + 0x68], rax
0x000040b6      488d05aa2200.  lea rax, [0x00006367]                   ; "`"
0x000040bd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000040c0      0f8498030000   je 0x445e
0x000040c6      488d35982200.  lea rsi, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040cd      31ff           xor edi, edi
0x000040cf      ba05000000     mov edx, 5
0x000040d4      e8f7d6ffff     call sym.imp.dcgettext
0x000040d9      4889c1         mov rcx, rax
0x000040dc      4889442460     mov qword [rsp + 0x60], rax
0x000040e1      488d057d2200.  lea rax, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040e8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000040eb      0f8483030000   je 0x4474
0x000040f1      4531ff         xor r15d, r15d
0x000040f4      85db           test ebx, ebx
0x000040f6      0f84c1010000   je 0x42bd
0x000040fc      85db           test ebx, ebx
0x000040fe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004103      0f9544240f     setne byte [rsp + 0xf]
0x00004108      4531e4         xor r12d, r12d
0x0000410b      4889df         mov rdi, rbx
0x0000410e      e8ddd6ffff     call sym.imp.strlen
0x00004113      48895c2448     mov qword [rsp + 0x48], rbx
0x00004118      4889442418     mov qword [rsp + 0x18], rax
0x0000411d      c644240e01     mov byte [rsp + 0xe], 1
0x00004122      c644247c00     mov byte [rsp + 0x7c], 0
0x00004127      48c744245000.  mov qword [rsp + 0x50], 0
0x00004130      c644240d01     mov byte [rsp + 0xd], 1
0x00004135      e999f2ffff     jmp 0x33d3
0x0000413a      c644240e01     mov byte [rsp + 0xe], 1
0x0000413f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004144      4531e4         xor r12d, r12d
0x00004147      48c744245000.  mov qword [rsp + 0x50], 0
0x00004150      c644240f00     mov byte [rsp + 0xf], 0
0x00004155      4531ff         xor r15d, r15d
0x00004158      c644240d00     mov byte [rsp + 0xd], 0
0x0000415d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004166      48c744244800.  mov qword [rsp + 0x48], 0
0x0000416f      e95ff2ffff     jmp 0x33d3
0x00004174      c644240e01     mov byte [rsp + 0xe], 1
0x00004179      c644247c00     mov byte [rsp + 0x7c], 0
0x0000417e      4531e4         xor r12d, r12d
0x00004181      48c744245000.  mov qword [rsp + 0x50], 0
0x0000418a      c644240f01     mov byte [rsp + 0xf], 1
0x0000418f      c644240d01     mov byte [rsp + 0xd], 1
0x00004194      e91af2ffff     jmp 0x33b3
0x00004199      4d39fd         cmp r13, r15
0x0000419c      7605           jbe 0x41a3
0x0000419e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000041a3      488d4102       lea rax, [rcx + 2]
0x000041a7      4939c5         cmp r13, rax
0x000041aa      7606           jbe 0x41b2
0x000041ac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000041b2      4489e0         mov eax, r12d
0x000041b5      4c8d7903       lea r15, [rcx + 3]
0x000041b9      4531e4         xor r12d, r12d
0x000041bc      bb30000000     mov ebx, 0x30                           ; '0'
0x000041c1      e962f3ffff     jmp 0x3528
0x000041c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000041d0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000041d5      4c89dd         mov rbp, r11
0x000041d8      885c240d       mov byte [rsp + 0xd], bl
0x000041dc      e9a8fcffff     jmp 0x3e89
0x000041e1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000041e6      4531e4         xor r12d, r12d
0x000041e9      e902fbffff     jmp 0x3cf0
0x000041ee      4531d2         xor r10d, r10d
0x000041f1      e9b7fbffff     jmp 0x3dad
0x000041f6      48c744245000.  mov qword [rsp + 0x50], 0
0x000041ff      c644240e01     mov byte [rsp + 0xe], 1
0x00004204      4531e4         xor r12d, r12d
0x00004207      c644247c00     mov byte [rsp + 0x7c], 0
0x0000420c      e9dafdffff     jmp 0x3feb
0x00004211      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004216      4c89f6         mov rsi, r14
0x00004219      4c89e9         mov rcx, r13
0x0000421c      4889d8         mov rax, rbx
0x0000421f      4889df         mov rdi, rbx
0x00004222      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004228      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000422d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004235      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004238      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000423e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004246      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000424b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004250      7326           jae 0x4278
0x00004252      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004255      7510           jne 0x4267
0x00004257      eb1f           jmp 0x4278
0x00004259      0f1f80000000.  nop dword [rax]
0x00004260      41803c0100     cmp byte [r9 + rax], 0
0x00004265      740e           je 0x4275
0x00004267      4883c001       add rax, 1
0x0000426b      488d540500     lea rdx, [rbp + rax]
0x00004270      4939d3         cmp r11, rdx
0x00004273      77eb           ja 0x4260
0x00004275      4889c7         mov rdi, rax
0x00004278      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000427d      4531e4         xor r12d, r12d
0x00004280      e961faffff     jmp 0x3ce6
0x00004285      4889df         mov rdi, rbx
0x00004288      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000428e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004293      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004299      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000042a1      4531e4         xor r12d, r12d
0x000042a4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000042a9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000042ae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000042b3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000042b8      e929faffff     jmp 0x3ce6
0x000042bd      488b542468     mov rdx, qword [rsp + 0x68]
0x000042c2      0fb602         movzx eax, byte [rdx]
0x000042c5      84c0           test al, al
0x000042c7      0f842ffeffff   je 0x40fc
0x000042cd      0f1f00         nop dword [rax]
0x000042d0      4d39fd         cmp r13, r15
0x000042d3      7604           jbe 0x42d9
0x000042d5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000042d9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000042dd      420fb6043a     movzx eax, byte [rdx + r15]
0x000042e2      84c0           test al, al
0x000042e4      75ea           jne 0x42d0
0x000042e6      e911feffff     jmp 0x40fc
0x000042eb      89d0           mov eax, edx
0x000042ed      e955f5ffff     jmp 0x3847
0x000042f2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000042f6      80fb3e         cmp bl, 0x3e
0x000042f9      0f8771f8ffff   ja 0x3b70
0x000042ff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004309      480fa3d8       bt rax, rbx
0x0000430d      0f835df8ffff   jae 0x3b70
0x00004313      807c240f00     cmp byte [rsp + 0xf], 0
0x00004318      0f85e4010000   jne 0x4502                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000431e      4d39fd         cmp r13, r15
0x00004321      7605           jbe 0x4328
0x00004323      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004328      498d4701       lea rax, [r15 + 1]
0x0000432c      4939c5         cmp r13, rax
0x0000432f      7606           jbe 0x4337
0x00004331      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004337      498d4702       lea rax, [r15 + 2]
0x0000433b      4939c5         cmp r13, rax
0x0000433e      7606           jbe 0x4346
0x00004340      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004346      498d4703       lea rax, [r15 + 3]
0x0000434a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000434d      7606           jbe 0x4355
0x0000434f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004355      4983c704       add r15, 4
0x00004359      31d2           xor edx, edx
0x0000435b      4531e4         xor r12d, r12d
0x0000435e      31c0           xor eax, eax
0x00004360      4889cd         mov rbp, rcx
0x00004363      e9c0f1ffff     jmp 0x3528
0x00004368      85db           test ebx, ebx
0x0000436a      0f8488010000   je 0x44f8
0x00004370      488d05ee1f00.  lea rax, [0x00006365]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004377      c644240e01     mov byte [rsp + 0xe], 1
0x0000437c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004381      4531e4         xor r12d, r12d
0x00004384      48c744245000.  mov qword [rsp + 0x50], 0
0x0000438d      c644240f01     mov byte [rsp + 0xf], 1
0x00004392      c644240d00     mov byte [rsp + 0xd], 0
0x00004397      48c744241801.  mov qword [rsp + 0x18], 1
0x000043a0      4531ff         xor r15d, r15d
0x000043a3      4889442448     mov qword [rsp + 0x48], rax
0x000043a8      e926f0ffff     jmp 0x33d3
0x000043ad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000043b0      4c89dd         mov rbp, r11
0x000043b3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000043b8      e9ccfaffff     jmp 0x3e89
0x000043bd      488d059f1f00.  lea rax, str.l______l                   ; 0x6363 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000043c4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000043c9      c644247c00     mov byte [rsp + 0x7c], 0
0x000043ce      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000043d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000043da      c644240f01     mov byte [rsp + 0xf], 1
0x000043df      c644240d01     mov byte [rsp + 0xd], 1
0x000043e4      48c744241801.  mov qword [rsp + 0x18], 1
0x000043ed      4531ff         xor r15d, r15d
0x000043f0      4889442448     mov qword [rsp + 0x48], rax
0x000043f5      e9d9efffff     jmp 0x33d3
0x000043fa      89d0           mov eax, edx
0x000043fc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004401      4885db         test rbx, rbx
0x00004404      742c           je 0x4432
0x00004406      84c0           test al, al
0x00004408      7428           je 0x4432
0x0000440a      0fb60b         movzx ecx, byte [rbx]
0x0000440d      4889d8         mov rax, rbx
0x00004410      84c9           test cl, cl
0x00004412      741e           je 0x4432
0x00004414      4c89fa         mov rdx, r15
0x00004417      4c29f8         sub rax, r15
0x0000441a      4939d5         cmp r13, rdx
0x0000441d      7604           jbe 0x4423
0x0000441f      41880c16       mov byte [r14 + rdx], cl
0x00004423      4883c201       add rdx, 1
0x00004427      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000442b      84c9           test cl, cl
0x0000442d      75eb           jne 0x441a
0x0000442f      4989d7         mov r15, rdx
0x00004432      4d39fd         cmp r13, r15
0x00004435      0f869efaffff   jbe 0x3ed9
0x0000443b      43c6043e00     mov byte [r14 + r15], 0
0x00004440      e994faffff     jmp 0x3ed9
0x00004445      837c240802     cmp dword [rsp + 8], 2
0x0000444a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000444f      4c89dd         mov rbp, r11
0x00004452      0f94c0         sete al
0x00004455      885c240d       mov byte [rsp + 0xd], bl
0x00004459      e92bfaffff     jmp 0x3e89
0x0000445e      8b742408       mov esi, dword [rsp + 8]
0x00004462      4889cf         mov rdi, rcx
0x00004465      e8a6edffff     call sym.gettext_quote.part.1
0x0000446a      4889442468     mov qword [rsp + 0x68], rax
0x0000446f      e952fcffff     jmp 0x40c6
0x00004474      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004478      4889cf         mov rdi, rcx
0x0000447b      e890edffff     call sym.gettext_quote.part.1
0x00004480      4889442460     mov qword [rsp + 0x60], rax
0x00004485      e967fcffff     jmp 0x40f1
0x0000448a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000448f      4c89dd         mov rbp, r11
0x00004492      89d0           mov eax, edx
0x00004494      885c240d       mov byte [rsp + 0xd], bl
0x00004498      e9ecf9ffff     jmp 0x3e89
0x0000449d      4883ec08       sub rsp, 8
0x000044a1      41b805000000   mov r8d, 5
0x000044a7      4c89d9         mov rcx, r11
0x000044aa      ff742468       push qword [rsp + 0x68]
0x000044ae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000044b2      4c89f7         mov rdi, r14
0x000044b5      ff742438       push qword [rsp + 0x38]
0x000044b9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000044c1      488b542430     mov rdx, qword [rsp + 0x30]
0x000044c6      488b742470     mov rsi, qword [rsp + 0x70]
0x000044cb      e830eeffff     call sym.quotearg_buffer_restyled
0x000044d0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000044d4      4989c7         mov r15, rax
0x000044d7      e9fdf9ffff     jmp 0x3ed9
0x000044dc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000044e1      e916ffffff     jmp 0x43fc
0x000044e6      c74424080200.  mov dword [rsp + 8], 2
0x000044ee      e996f9ffff     jmp 0x3e89
0x000044f3      e808d3ffff     call sym.imp.__stack_chk_fail
0x000044f8      c644240d00     mov byte [rsp + 0xd], 0
0x000044fd      e96ffaffff     jmp 0x3f71
0x00004502      4c89dd         mov rbp, r11
0x00004505      e996f9ffff     jmp 0x3ea0
0x0000450a      c644240e01     mov byte [rsp + 0xe], 1
0x0000450f      31c0           xor eax, eax
0x00004511      4531e4         xor r12d, r12d
0x00004514      48c744245000.  mov qword [rsp + 0x50], 0
0x0000451d      e9a2f5ffff     jmp 0x3ac4
0x00004522      4c89ea         mov rdx, r13
0x00004525      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000452a      e9f3f5ffff     jmp 0x3b22
0x0000452f      e8dcd1ffff     call sym.imp.abort
0x00004534      6690           nop
0x00004536      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004540      4157           push r15
0x00004542      4156           push r14
0x00004544      4c63ff         movsxd r15, edi
0x00004547      4155           push r13
0x00004549      4154           push r12
0x0000454b      4989d6         mov r14, rdx
0x0000454e      55             push rbp
0x0000454f      53             push rbx
0x00004550      4889cd         mov rbp, rcx
0x00004553      4883ec28       sub rsp, 0x28
0x00004557      4889742408     mov qword [rsp + 8], rsi
0x0000455c      e8bfd1ffff     call sym.imp.__errno_location
0x00004561      4989c5         mov r13, rax
0x00004564      8b00           mov eax, dword [rax]
0x00004566      4585ff         test r15d, r15d
0x00004569      488b1d103b20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208080:8]=0x208090 obj.slotvec0
0x00004570      89442418       mov dword [rsp + 0x18], eax
0x00004574      0f8867010000   js 0x46e1
0x0000457a      44393df73a20.  cmp dword [obj.nslots], r15d            ; [0x208078:4]=1
0x00004581      7f62           jg 0x45e5
0x00004583      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000458a      0f8456010000   je 0x46e6
0x00004590      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004594      488d05f53a20.  lea rax, obj.slotvec0                   ; 0x208090
0x0000459b      4963f4         movsxd rsi, r12d
0x0000459e      48c1e604       shl rsi, 4
0x000045a2      4839c3         cmp rbx, rax
0x000045a5      0f8415010000   je 0x46c0
0x000045ab      4889df         mov rdi, rbx
0x000045ae      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000045b3      4889c3         mov rbx, rax
0x000045b6      488905c33a20.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x000045bd      48633db43a20.  movsxd rdi, dword [obj.nslots]          ; [0x208078:4]=1
0x000045c4      4489e2         mov edx, r12d
0x000045c7      31f6           xor esi, esi
0x000045c9      29fa           sub edx, edi
0x000045cb      48c1e704       shl rdi, 4
0x000045cf      4863d2         movsxd rdx, edx
0x000045d2      4801df         add rdi, rbx
0x000045d5      48c1e204       shl rdx, 4
0x000045d9      e8a2d2ffff     call sym.imp.memset
0x000045de      448925933a20.  mov dword [obj.nslots], r12d            ; [0x208078:4]=1
0x000045e5      8b4504         mov eax, dword [rbp + 4]
0x000045e8      49c1e704       shl r15, 4
0x000045ec      4883ec08       sub rsp, 8
0x000045f0      4c01fb         add rbx, r15
0x000045f3      4c8d7d08       lea r15, [rbp + 8]
0x000045f7      448b4500       mov r8d, dword [rbp]
0x000045fb      4c8b1b         mov r11, qword [rbx]
0x000045fe      4c8b6308       mov r12, qword [rbx + 8]
0x00004602      4c89f1         mov rcx, r14
0x00004605      83c801         or eax, 1
0x00004608      89442424       mov dword [rsp + 0x24], eax
0x0000460c      ff7530         push qword [rbp + 0x30]
0x0000460f      4189c1         mov r9d, eax
0x00004612      ff7528         push qword [rbp + 0x28]
0x00004615      4157           push r15
0x00004617      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000461a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000461f      4c89e7         mov rdi, r12
0x00004622      4c895c2430     mov qword [rsp + 0x30], r11
0x00004627      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000462c      4883c420       add rsp, 0x20
0x00004630      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004635      4939c3         cmp r11, rax
0x00004638      7767           ja 0x46a1
0x0000463a      488d7001       lea rsi, [rax + 1]
0x0000463e      488d055b3b20.  lea rax, obj.slot0                      ; 0x2081a0
0x00004645      4939c4         cmp r12, rax
0x00004648      488933         mov qword [rbx], rsi
0x0000464b      7412           je 0x465f
0x0000464d      4c89e7         mov rdi, r12
0x00004650      4889742410     mov qword [rsp + 0x10], rsi
0x00004655      e896d0ffff     call sym.imp.free
0x0000465a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000465f      4889f7         mov rdi, rsi
0x00004662      4889742410     mov qword [rsp + 0x10], rsi
0x00004667      e8540e0000     call sym.xmalloc
0x0000466c      4883ec08       sub rsp, 8
0x00004670      48894308       mov qword [rbx + 8], rax
0x00004674      448b4500       mov r8d, dword [rbp]
0x00004678      ff7530         push qword [rbp + 0x30]
0x0000467b      ff7528         push qword [rbp + 0x28]
0x0000467e      4c89f1         mov rcx, r14
0x00004681      4157           push r15
0x00004683      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004688      4889c7         mov rdi, rax
0x0000468b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004690      488b742430     mov rsi, qword [rsp + 0x30]
0x00004695      4989c4         mov r12, rax
0x00004698      e863ecffff     call sym.quotearg_buffer_restyled
0x0000469d      4883c420       add rsp, 0x20
0x000046a1      8b442418       mov eax, dword [rsp + 0x18]
0x000046a5      41894500       mov dword [r13], eax
0x000046a9      4883c428       add rsp, 0x28
0x000046ad      4c89e0         mov rax, r12
0x000046b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000046b1      5d             pop rbp
0x000046b2      415c           pop r12
0x000046b4      415d           pop r13
0x000046b6      415e           pop r14
0x000046b8      415f           pop r15
0x000046ba      c3             ret
0x000046bb      0f1f440000     nop dword [rax + rax]
0x000046c0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000046c2      e8590e0000     call sym.xrealloc
0x000046c7      660f6f05c139.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000046cf      4889c3         mov rbx, rax
0x000046d2      488905a73920.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x000046d9      0f1100         movups xmmword [rax], xmm0
0x000046dc      e9dcfeffff     jmp 0x45bd
0x000046e1      e82ad0ffff     call sym.imp.abort
0x000046e6      e825100000     call sym.xalloc_die
0x000046eb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000046f0      4154           push r12
0x000046f2      55             push rbp
0x000046f3      53             push rbx
0x000046f4      4889fb         mov rbx, rdi
0x000046f7      e824d0ffff     call sym.imp.__errno_location
0x000046fc      448b20         mov r12d, dword [rax]
0x000046ff      4889c5         mov rbp, rax
0x00004702      488d05973b20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x00004709      4885db         test rbx, rbx
0x0000470c      be38000000     mov esi, 0x38                           ; '8'
0x00004711      480f44d8       cmove rbx, rax
0x00004715      4889df         mov rdi, rbx
0x00004718      e8a30f0000     call sym.xmemdup
0x0000471d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004721      5b             pop rbx
0x00004722      5d             pop rbp
0x00004723      415c           pop r12
0x00004725      c3             ret
0x00004726      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004730      488d05693b20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x00004737      4885ff         test rdi, rdi
0x0000473a      480f44f8       cmove rdi, rax
0x0000473e      8b07           mov eax, dword [rdi]
0x00004740      c3             ret
0x00004741      0f1f440000     nop dword [rax + rax]
0x00004746      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004750      488d05493b20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x00004757      4885ff         test rdi, rdi
0x0000475a      480f44f8       cmove rdi, rax
0x0000475e      8937           mov dword [rdi], esi
0x00004760      c3             ret
0x00004761      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004770      488d05293b20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x00004777      4885ff         test rdi, rdi
0x0000477a      89f1           mov ecx, esi
0x0000477c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004780      89f0           mov eax, esi
0x00004782      83e11f         and ecx, 0x1f
0x00004785      c0e805         shr al, 5
0x00004788      0fb6c0         movzx eax, al
0x0000478b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004790      8b37           mov esi, dword [rdi]
0x00004792      89f0           mov eax, esi
0x00004794      d3e8           shr eax, cl
0x00004796      31c2           xor edx, eax
0x00004798      83e001         and eax, 1
0x0000479b      83e201         and edx, 1
0x0000479e      d3e2           shl edx, cl
0x000047a0      31f2           xor edx, esi
0x000047a2      8917           mov dword [rdi], edx
0x000047a4      c3             ret
0x000047a5      90             nop
0x000047a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000047b0      488d05e93a20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x000047b7      4885ff         test rdi, rdi
0x000047ba      480f44f8       cmove rdi, rax
0x000047be      8b4704         mov eax, dword [rdi + 4]
0x000047c1      897704         mov dword [rdi + 4], esi
0x000047c4      c3             ret
0x000047c5      90             nop
0x000047c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000047d0      488d05c93a20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x000047d7      4885ff         test rdi, rdi
0x000047da      480f44f8       cmove rdi, rax
0x000047de      4885f6         test rsi, rsi
0x000047e1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000047e7      740e           je 0x47f7
0x000047e9      4885d2         test rdx, rdx
0x000047ec      7409           je 0x47f7
0x000047ee      48897728       mov qword [rdi + 0x28], rsi
0x000047f2      48895730       mov qword [rdi + 0x30], rdx
0x000047f6      c3             ret
0x000047f7      4883ec08       sub rsp, 8
0x000047fb      e810cfffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004800      4157           push r15
0x00004802      4156           push r14
0x00004804      488d05953a20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x0000480b      4155           push r13
0x0000480d      4154           push r12
0x0000480f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004812      55             push rbp
0x00004813      53             push rbx
0x00004814      4c89c3         mov rbx, r8
0x00004817      4989f6         mov r14, rsi
0x0000481a      4989d7         mov r15, rdx
0x0000481d      4883ec18       sub rsp, 0x18
0x00004821      4d85c0         test r8, r8
0x00004824      480f44d8       cmove rbx, rax
0x00004828      48894c2408     mov qword [rsp + 8], rcx
0x0000482d      e8eeceffff     call sym.imp.__errno_location
0x00004832      448b20         mov r12d, dword [rax]
0x00004835      4889c5         mov rbp, rax
0x00004838      488d4308       lea rax, [rbx + 8]
0x0000483c      4883ec08       sub rsp, 8
0x00004840      448b4b04       mov r9d, dword [rbx + 4]
0x00004844      ff7330         push qword [rbx + 0x30]
0x00004847      448b03         mov r8d, dword [rbx]
0x0000484a      ff7328         push qword [rbx + 0x28]
0x0000484d      4c89fa         mov rdx, r15
0x00004850      50             push rax
0x00004851      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004856      4c89f6         mov rsi, r14
0x00004859      4c89ef         mov rdi, r13
0x0000485c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004861      44896500       mov dword [rbp], r12d
0x00004865      4883c438       add rsp, 0x38
0x00004869      5b             pop rbx
0x0000486a      5d             pop rbp
0x0000486b      415c           pop r12
0x0000486d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000486f      415e           pop r14
0x00004871      415f           pop r15
0x00004873      c3             ret
0x00004874      6690           nop
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004880      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004882      4156           push r14
0x00004884      488d05153a20.  lea rax, obj.default_quoting_options    ; 0x2082a0
0x0000488b      4155           push r13
0x0000488d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000488f      4989d4         mov r12, rdx
0x00004892      55             push rbp
0x00004893      53             push rbx
0x00004894      4889cb         mov rbx, rcx
0x00004897      4989fe         mov r14, rdi
0x0000489a      4989f7         mov r15, rsi
0x0000489d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000048a1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000048a4      480f44d8       cmove rbx, rax
0x000048a8      31ed           xor ebp, ebp
0x000048aa      e871ceffff     call sym.imp.__errno_location
0x000048af      4d85e4         test r12, r12
0x000048b2      4989c5         mov r13, rax
0x000048b5      8b00           mov eax, dword [rax]
0x000048b7      400f94c5       sete bpl
0x000048bb      0b6b04         or ebp, dword [rbx + 4]
0x000048be      4c8d5308       lea r10, [rbx + 8]
0x000048c2      4883ec08       sub rsp, 8
0x000048c6      448b03         mov r8d, dword [rbx]
0x000048c9      4c89f9         mov rcx, r15
0x000048cc      89442414       mov dword [rsp + 0x14], eax
0x000048d0      ff7330         push qword [rbx + 0x30]
0x000048d3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000048d6      ff7328         push qword [rbx + 0x28]
0x000048d9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000048db      31f6           xor esi, esi
0x000048dd      4189e9         mov r9d, ebp
0x000048e0      31ff           xor edi, edi
0x000048e2      4c89542440     mov qword [rsp + 0x40], r10
0x000048e7      e814eaffff     call sym.quotearg_buffer_restyled
0x000048ec      488d7001       lea rsi, [rax + 1]
0x000048f0      4889442448     mov qword [rsp + 0x48], rax
0x000048f5      4883c420       add rsp, 0x20
0x000048f9      4889f7         mov rdi, rsi
0x000048fc      4889742418     mov qword [rsp + 0x18], rsi
0x00004901      e8ba0b0000     call sym.xmalloc
0x00004906      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000490b      4883ec08       sub rsp, 8
0x0000490f      ff7330         push qword [rbx + 0x30]
0x00004912      ff7328         push qword [rbx + 0x28]
0x00004915      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000491a      4189e9         mov r9d, ebp
0x0000491d      448b03         mov r8d, dword [rbx]
0x00004920      4c89f9         mov rcx, r15
0x00004923      4c89f2         mov rdx, r14
0x00004926      4889c7         mov rdi, rax
0x00004929      4152           push r10
0x0000492b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004930      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004935      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004939      4883c420       add rsp, 0x20
0x0000493d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004940      41894500       mov dword [r13], eax
0x00004944      7409           je 0x494f
0x00004946      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000494b      4d891c24       mov qword [r12], r11
0x0000494f      488b442410     mov rax, qword [rsp + 0x10]
0x00004954      4883c438       add rsp, 0x38
0x00004958      5b             pop rbx
0x00004959      5d             pop rbp
0x0000495a      415c           pop r12
0x0000495c      415d           pop r13
0x0000495e      415e           pop r14
0x00004960      415f           pop r15
0x00004962      c3             ret
0x00004963      0f1f00         nop dword [rax]
0x00004966      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004970      4889d1         mov rcx, rdx
0x00004973      31d2           xor edx, edx
0x00004975      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000497a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004980      8b05f2362000   mov eax, dword [obj.nslots]             ; [0x208078:4]=1
0x00004986      4154           push r12
0x00004988      4c8b25f13620.  mov r12, qword [obj.slotvec]            ; [0x208080:8]=0x208090 obj.slotvec0
0x0000498f      55             push rbp
0x00004990      53             push rbx
0x00004991      83f801         cmp eax, 1
0x00004994      7e2b           jle 0x49c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004996      83e802         sub eax, 2
0x00004999      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000499e      48c1e004       shl rax, 4
0x000049a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000049a7      660f1f840000.  nop word [rax + rax]
0x000049b0      488b3b         mov rdi, qword [rbx]
0x000049b3      4883c310       add rbx, 0x10
0x000049b7      e834cdffff     call sym.imp.free
0x000049bc      4839eb         cmp rbx, rbp
0x000049bf      75ef           jne 0x49b0
0x000049c1      498b7c2408     mov rdi, qword [r12 + 8]
0x000049c6      488d1dd33720.  lea rbx, obj.slot0                      ; 0x2081a0
0x000049cd      4839df         cmp rdi, rbx
0x000049d0      7417           je 0x49e9
0x000049d2      e819cdffff     call sym.imp.free
0x000049d7      48c705ae3620.  mov qword [obj.slotvec0], 0x100         ; [0x208090:8]=256
0x000049e2      48891daf3620.  mov qword [0x00208098], rbx             ; [0x208098:8]=0x2081a0 obj.slot0
0x000049e9      488d1da03620.  lea rbx, obj.slotvec0                   ; 0x208090
0x000049f0      4939dc         cmp r12, rbx
0x000049f3      740f           je 0x4a04
0x000049f5      4c89e7         mov rdi, r12
0x000049f8      e8f3ccffff     call sym.imp.free
0x000049fd      48891d7c3620.  mov qword [obj.slotvec], rbx            ; [0x208080:8]=0x208090 obj.slotvec0
0x00004a04      5b             pop rbx
0x00004a05      c70569362000.  mov dword [obj.nslots], 1               ; [0x208078:4]=1
0x00004a0f      5d             pop rbp
0x00004a10      415c           pop r12
0x00004a12      c3             ret
0x00004a13      0f1f00         nop dword [rax]
0x00004a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004a20      488d0d793820.  lea rcx, obj.default_quoting_options    ; 0x2082a0
0x00004a27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a2e      e90dfbffff     jmp sym.quotearg_n_options
0x00004a33      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004a40      488d0d593820.  lea rcx, obj.default_quoting_options    ; 0x2082a0
0x00004a47      e9f4faffff     jmp sym.quotearg_n_options
0x00004a4c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004a50      488d0d493820.  lea rcx, obj.default_quoting_options    ; 0x2082a0
0x00004a57      4889fe         mov rsi, rdi
0x00004a5a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a61      31ff           xor edi, edi
0x00004a63      e9d8faffff     jmp sym.quotearg_n_options
0x00004a68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004a70      488d0d293820.  lea rcx, obj.default_quoting_options    ; 0x2082a0
0x00004a77      4889f2         mov rdx, rsi
0x00004a7a      4889fe         mov rsi, rdi
0x00004a7d      31ff           xor edi, edi
0x00004a7f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004a84      6690           nop
0x00004a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004a90      4883ec48       sub rsp, 0x48
0x00004a94      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004a97      64488b142528.  mov rdx, qword fs:[0x28]
0x00004aa0      4889542438     mov qword [rsp + 0x38], rdx
0x00004aa5      31d2           xor edx, edx
0x00004aa7      83fe0a         cmp esi, 0xa
0x00004aaa      7468           je 0x4b14
0x00004aac      893424         mov dword [rsp], esi
0x00004aaf      4889e1         mov rcx, rsp
0x00004ab2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ab9      4889c6         mov rsi, rax
0x00004abc      48c744240400.  mov qword [rsp + 4], 0
0x00004ac5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004ace      48c744241400.  mov qword [rsp + 0x14], 0
0x00004ad7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004ae0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004ae9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004af2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004afa      e841faffff     call sym.quotearg_n_options
0x00004aff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004b04      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004b0d      750a           jne 0x4b19                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004b0f      4883c448       add rsp, 0x48
0x00004b13      c3             ret
0x00004b14      e8f7cbffff     call sym.imp.abort
0x00004b19      e8e2ccffff     call sym.imp.__stack_chk_fail
0x00004b1e      6690           nop
;-- quotearg_n_style_mem:
0x00004b20      4883ec48       sub rsp, 0x48
0x00004b24      4889d0         mov rax, rdx
0x00004b27      4889ca         mov rdx, rcx
0x00004b2a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004b33      48894c2438     mov qword [rsp + 0x38], rcx
0x00004b38      31c9           xor ecx, ecx
0x00004b3a      83fe0a         cmp esi, 0xa
0x00004b3d      7461           je 0x4ba0
0x00004b3f      893424         mov dword [rsp], esi
0x00004b42      4889e1         mov rcx, rsp
0x00004b45      4889c6         mov rsi, rax
0x00004b48      48c744240400.  mov qword [rsp + 4], 0
0x00004b51      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004b5a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004b63      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004b6c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004b75      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004b7e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004b86      e8b5f9ffff     call sym.quotearg_n_options
0x00004b8b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004b90      644833142528.  xor rdx, qword fs:[0x28]
0x00004b99      750a           jne 0x4ba5
0x00004b9b      4883c448       add rsp, 0x48
0x00004b9f      c3             ret
0x00004ba0      e86bcbffff     call sym.imp.abort
0x00004ba5      e856ccffff     call sym.imp.__stack_chk_fail
0x00004baa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004bb0      4889f2         mov rdx, rsi
0x00004bb3      89fe           mov esi, edi
0x00004bb5      31ff           xor edi, edi
0x00004bb7      e9d4feffff     jmp sym.quotearg_n_style
0x00004bbc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004bc0      4889d1         mov rcx, rdx
0x00004bc3      4889f2         mov rdx, rsi
0x00004bc6      89fe           mov esi, edi
0x00004bc8      31ff           xor edi, edi
0x00004bca      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004bcf      90             nop
;-- quotearg_char_mem:
0x00004bd0      4883ec48       sub rsp, 0x48
0x00004bd4      89d1           mov ecx, edx
0x00004bd6      64488b042528.  mov rax, qword fs:[0x28]
0x00004bdf      4889442438     mov qword [rsp + 0x38], rax
0x00004be4      31c0           xor eax, eax
0x00004be6      488b05e33620.  mov rax, qword [0x002082d0]             ; [0x2082d0:8]=0
0x00004bed      4989e0         mov r8, rsp
0x00004bf0      83e11f         and ecx, 0x1f
0x00004bf3      660f6f05a536.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004bfb      4889442430     mov qword [rsp + 0x30], rax
0x00004c00      89d0           mov eax, edx
0x00004c02      0f290424       movaps xmmword [rsp], xmm0
0x00004c06      c0e805         shr al, 5
0x00004c09      0fb6c0         movzx eax, al
0x00004c0c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004c11      660f6f059736.  movdqa xmm0, xmmword [0x002082b0]
0x00004c19      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004c1e      660f6f059a36.  movdqa xmm0, xmmword [0x002082c0]
0x00004c26      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004c2b      418b11         mov edx, dword [r9]
0x00004c2e      89d0           mov eax, edx
0x00004c30      d3e8           shr eax, cl
0x00004c32      f7d0           not eax
0x00004c34      83e001         and eax, 1
0x00004c37      d3e0           shl eax, cl
0x00004c39      4c89c1         mov rcx, r8
0x00004c3c      31d0           xor eax, edx
0x00004c3e      4889f2         mov rdx, rsi
0x00004c41      4889fe         mov rsi, rdi
0x00004c44      418901         mov dword [r9], eax
0x00004c47      31ff           xor edi, edi
0x00004c49      e8f2f8ffff     call sym.quotearg_n_options
0x00004c4e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004c53      644833342528.  xor rsi, qword fs:[0x28]
0x00004c5c      7505           jne 0x4c63
0x00004c5e      4883c448       add rsp, 0x48
0x00004c62      c3             ret
0x00004c63      e898cbffff     call sym.imp.__stack_chk_fail
0x00004c68      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004c70      400fbed6       movsx edx, sil
0x00004c74      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c7b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004c80      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004c85      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004c8c      e93fffffff     jmp sym.quotearg_char_mem
0x00004c91      0f1f440000     nop dword [rax + rax]
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004ca0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004ca5      e926ffffff     jmp sym.quotearg_char_mem
0x00004caa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004cb0      4883ec48       sub rsp, 0x48
0x00004cb4      4889d0         mov rax, rdx
0x00004cb7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004cc0      4889542438     mov qword [rsp + 0x38], rdx
0x00004cc5      31d2           xor edx, edx
0x00004cc7      83fe0a         cmp esi, 0xa
0x00004cca      7468           je 0x4d34
0x00004ccc      893424         mov dword [rsp], esi
0x00004ccf      4889e1         mov rcx, rsp
0x00004cd2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004cd9      4889c6         mov rsi, rax
0x00004cdc      48c744240400.  mov qword [rsp + 4], 0
0x00004ce5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004cee      48c744241400.  mov qword [rsp + 0x14], 0
0x00004cf7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d00      48c744242400.  mov qword [rsp + 0x24], 0
0x00004d09      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d12      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d1a      e821f8ffff     call sym.quotearg_n_options
0x00004d1f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004d24      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d2d      750a           jne 0x4d39
0x00004d2f      4883c448       add rsp, 0x48
0x00004d33      c3             ret
0x00004d34      e8d7c9ffff     call sym.imp.abort
0x00004d39      e8c2caffff     call sym.imp.__stack_chk_fail
0x00004d3e      6690           nop
;-- quotearg_n_custom_mem:
0x00004d40      4883ec48       sub rsp, 0x48
0x00004d44      4989c9         mov r9, rcx
0x00004d47      488b0d823520.  mov rcx, qword [0x002082d0]             ; [0x2082d0:8]=0
0x00004d4e      660f6f054a35.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004d56      64488b042528.  mov rax, qword fs:[0x28]
0x00004d5f      4889442438     mov qword [rsp + 0x38], rax
0x00004d64      31c0           xor eax, eax
0x00004d66      0f290424       movaps xmmword [rsp], xmm0
0x00004d6a      4885f6         test rsi, rsi
0x00004d6d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004d72      c704240a0000.  mov dword [rsp], 0xa
0x00004d79      660f6f052f35.  movdqa xmm0, xmmword [0x002082b0]
0x00004d81      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004d86      660f6f053235.  movdqa xmm0, xmmword [0x002082c0]
0x00004d8e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004d93      7432           je 0x4dc7
0x00004d95      4885d2         test rdx, rdx
0x00004d98      742d           je 0x4dc7
0x00004d9a      4889742428     mov qword [rsp + 0x28], rsi
0x00004d9f      4889542430     mov qword [rsp + 0x30], rdx
0x00004da4      4889e1         mov rcx, rsp
0x00004da7      4c89c2         mov rdx, r8
0x00004daa      4c89ce         mov rsi, r9
0x00004dad      e88ef7ffff     call sym.quotearg_n_options
0x00004db2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004db7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004dc0      750a           jne 0x4dcc
0x00004dc2      4883c448       add rsp, 0x48
0x00004dc6      c3             ret
0x00004dc7      e844c9ffff     call sym.imp.abort
0x00004dcc      e82fcaffff     call sym.imp.__stack_chk_fail
0x00004dd1      0f1f440000     nop dword [rax + rax]
0x00004dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004de0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004de7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004dec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004df0      4889d1         mov rcx, rdx
0x00004df3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004dfa      4889f2         mov rdx, rsi
0x00004dfd      4889fe         mov rsi, rdi
0x00004e00      31ff           xor edi, edi
0x00004e02      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004e07      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004e10      4989c8         mov r8, rcx
0x00004e13      4889d1         mov rcx, rdx
0x00004e16      4889f2         mov rdx, rsi
0x00004e19      4889fe         mov rsi, rdi
0x00004e1c      31ff           xor edi, edi
0x00004e1e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004e23      0f1f00         nop dword [rax]
0x00004e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004e30      488d0d093220.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004e37      e904f7ffff     jmp sym.quotearg_n_options
0x00004e3c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004e40      488d0df93120.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004e47      4889f2         mov rdx, rsi
0x00004e4a      4889fe         mov rsi, rdi
0x00004e4d      31ff           xor edi, edi
0x00004e4f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004e54      6690           nop
0x00004e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004e60      488d0dd93120.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004e67      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e6e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004e73      0f1f00         nop dword [rax]
0x00004e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004e80      488d0db93120.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004e87      4889fe         mov rsi, rdi
0x00004e8a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e91      31ff           xor edi, edi
0x00004e93      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004e98      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004ea0      4157           push r15
0x00004ea2      4156           push r14
0x00004ea4      4155           push r13
0x00004ea6      4154           push r12
0x00004ea8      4d89cc         mov r12, r9
0x00004eab      55             push rbp
0x00004eac      53             push rbx
0x00004ead      4889fd         mov rbp, rdi
0x00004eb0      4c89c3         mov rbx, r8
0x00004eb3      4883ec28       sub rsp, 0x28
0x00004eb7      4885f6         test rsi, rsi
0x00004eba      0f8418010000   je 0x4fd8
0x00004ec0      4989d0         mov r8, rdx
0x00004ec3      488d155e1900.  lea rdx, [0x00006828]                   ; "%s (%s) %s\n"
0x00004eca      4989c9         mov r9, rcx
0x00004ecd      31c0           xor eax, eax
0x00004ecf      4889f1         mov rcx, rsi
0x00004ed2      be01000000     mov esi, 1
0x00004ed7      e854cbffff     call sym.imp.__fprintf_chk
0x00004edc      488d35581900.  lea rsi, [0x0000683b]                   ; "(C)"
0x00004ee3      31ff           xor edi, edi
0x00004ee5      ba05000000     mov edx, 5
0x00004eea      e8e1c8ffff     call sym.imp.dcgettext
0x00004eef      488d156a1c00.  lea rdx, obj.version_etc_copyright      ; 0x6b60 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004ef6      4889c1         mov rcx, rax
0x00004ef9      41b8e3070000   mov r8d, 0x7e3
0x00004eff      be01000000     mov esi, 1
0x00004f04      4889ef         mov rdi, rbp
0x00004f07      31c0           xor eax, eax
0x00004f09      e822cbffff     call sym.imp.__fprintf_chk
0x00004f0e      488d35b31900.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x68c8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004f15      31ff           xor edi, edi
0x00004f17      ba05000000     mov edx, 5
0x00004f1c      e8afc8ffff     call sym.imp.dcgettext
0x00004f21      4889ee         mov rsi, rbp
0x00004f24      4889c7         mov rdi, rax
0x00004f27      e874c9ffff     call sym.imp.fputs_unlocked
0x00004f2c      4983fc09       cmp r12, 9
0x00004f30      0f873a030000   ja 0x5270
0x00004f36      488d15eb1b00.  lea rdx, [0x00006b28]
0x00004f3d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004f41      4801d0         add rax, rdx
0x00004f44      ffe0           jmp rax
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f50      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004f54      488b4310       mov rax, qword [rbx + 0x10]
0x00004f58      488d35d91a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6a38 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004f5f      4c8b4308       mov r8, qword [rbx + 8]
0x00004f63      ba05000000     mov edx, 5
0x00004f68      31ff           xor edi, edi
0x00004f6a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004f6e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004f72      4c894c2410     mov qword [rsp + 0x10], r9
0x00004f77      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004f7b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004f7f      48890424       mov qword [rsp], rax
0x00004f83      4c89442408     mov qword [rsp + 8], r8
0x00004f88      488b1b         mov rbx, qword [rbx]
0x00004f8b      e840c8ffff     call sym.imp.dcgettext
0x00004f90      4883ec08       sub rsp, 8
0x00004f94      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004f99      4889c2         mov rdx, rax
0x00004f9c      4889d9         mov rcx, rbx
0x00004f9f      be01000000     mov esi, 1
0x00004fa4      4889ef         mov rdi, rbp
0x00004fa7      31c0           xor eax, eax
0x00004fa9      4151           push r9
0x00004fab      4155           push r13
0x00004fad      4154           push r12
0x00004faf      4157           push r15
0x00004fb1      4156           push r14
0x00004fb3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004fb8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004fbd      e86ecaffff     call sym.imp.__fprintf_chk
0x00004fc2      4883c430       add rsp, 0x30
0x00004fc6      4883c428       add rsp, 0x28
0x00004fca      5b             pop rbx
0x00004fcb      5d             pop rbp
0x00004fcc      415c           pop r12
0x00004fce      415d           pop r13
0x00004fd0      415e           pop r14
0x00004fd2      415f           pop r15
0x00004fd4      c3             ret
0x00004fd5      0f1f00         nop dword [rax]
0x00004fd8      4989c8         mov r8, rcx
0x00004fdb      4889d1         mov rcx, rdx
0x00004fde      488d154f1800.  lea rdx, str.s__s                       ; 0x6834 ; "%s %s\n"
0x00004fe5      be01000000     mov esi, 1
0x00004fea      31c0           xor eax, eax
0x00004fec      e83fcaffff     call sym.imp.__fprintf_chk
0x00004ff1      e9e6feffff     jmp 0x4edc
0x00004ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005000      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005004      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005008      488d35591a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6a68 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000500f      488b4310       mov rax, qword [rbx + 0x10]
0x00005013      4c8b4308       mov r8, qword [rbx + 8]
0x00005017      ba05000000     mov edx, 5
0x0000501c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005020      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005024      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005028      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000502c      488b1b         mov rbx, qword [rbx]
0x0000502f      4c89542418     mov qword [rsp + 0x18], r10
0x00005034      4c894c2410     mov qword [rsp + 0x10], r9
0x00005039      48890424       mov qword [rsp], rax
0x0000503d      4c89442408     mov qword [rsp + 8], r8
0x00005042      31ff           xor edi, edi
0x00005044      e887c7ffff     call sym.imp.dcgettext
0x00005049      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000504e      4152           push r10
0x00005050      e93fffffff     jmp 0x4f94
0x00005055      0f1f00         nop dword [rax]
0x00005058      488b1b         mov rbx, qword [rbx]
0x0000505b      488d35dd1700.  lea rsi, str.Written_by__s.             ; 0x683f ; "Written by %s.\n"
0x00005062      ba05000000     mov edx, 5
0x00005067      31ff           xor edi, edi
0x00005069      e862c7ffff     call sym.imp.dcgettext
0x0000506e      4883c428       add rsp, 0x28
0x00005072      4889d9         mov rcx, rbx
0x00005075      4889ef         mov rdi, rbp
0x00005078      5b             pop rbx
0x00005079      5d             pop rbp
0x0000507a      415c           pop r12
0x0000507c      415d           pop r13
0x0000507e      415e           pop r14
0x00005080      415f           pop r15
0x00005082      4889c2         mov rdx, rax
0x00005085      be01000000     mov esi, 1
0x0000508a      31c0           xor eax, eax
0x0000508c      e99fc9ffff     jmp sym.imp.__fprintf_chk
0x00005091      0f1f80000000.  nop dword [rax]
0x00005098      4c8b6308       mov r12, qword [rbx + 8]
0x0000509c      488d35ac1700.  lea rsi, str.Written_by__s_and__s.      ; 0x684f ; "Written by %s and %s.\n"
0x000050a3      488b1b         mov rbx, qword [rbx]
0x000050a6      ba05000000     mov edx, 5
0x000050ab      31ff           xor edi, edi
0x000050ad      e81ec7ffff     call sym.imp.dcgettext
0x000050b2      4883c428       add rsp, 0x28
0x000050b6      4d89e0         mov r8, r12
0x000050b9      4889d9         mov rcx, rbx
0x000050bc      4889ef         mov rdi, rbp
0x000050bf      4889c2         mov rdx, rax
0x000050c2      be01000000     mov esi, 1
0x000050c7      5b             pop rbx
0x000050c8      5d             pop rbp
0x000050c9      415c           pop r12
0x000050cb      415d           pop r13
0x000050cd      415e           pop r14
0x000050cf      415f           pop r15
0x000050d1      31c0           xor eax, eax
0x000050d3      e958c9ffff     jmp sym.imp.__fprintf_chk
0x000050d8      0f1f84000000.  nop dword [rax + rax]
0x000050e0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000050e4      4c8b6308       mov r12, qword [rbx + 8]
0x000050e8      488d35771700.  lea rsi, str.Written_by__s___s__and__s. ; 0x6866 ; "Written by %s, %s, and %s.\n"
0x000050ef      488b1b         mov rbx, qword [rbx]
0x000050f2      ba05000000     mov edx, 5
0x000050f7      31ff           xor edi, edi
0x000050f9      e8d2c6ffff     call sym.imp.dcgettext
0x000050fe      4883c428       add rsp, 0x28
0x00005102      4d89e9         mov r9, r13
0x00005105      4d89e0         mov r8, r12
0x00005108      4889d9         mov rcx, rbx
0x0000510b      4889ef         mov rdi, rbp
0x0000510e      4889c2         mov rdx, rax
0x00005111      5b             pop rbx
0x00005112      5d             pop rbp
0x00005113      415c           pop r12
0x00005115      415d           pop r13
0x00005117      415e           pop r14
0x00005119      415f           pop r15
0x0000511b      be01000000     mov esi, 1
0x00005120      31c0           xor eax, eax
0x00005122      e909c9ffff     jmp sym.imp.__fprintf_chk
0x00005127      660f1f840000.  nop word [rax + rax]
0x00005130      488d35611800.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6998 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005137      ba05000000     mov edx, 5
0x0000513c      31ff           xor edi, edi
0x0000513e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005142      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005146      4c8b6308       mov r12, qword [rbx + 8]
0x0000514a      488b1b         mov rbx, qword [rbx]
0x0000514d      e87ec6ffff     call sym.imp.dcgettext
0x00005152      4883ec08       sub rsp, 8
0x00005156      4156           push r14
0x00005158      4889c2         mov rdx, rax
0x0000515b      4d89e9         mov r9, r13
0x0000515e      4d89e0         mov r8, r12
0x00005161      4889d9         mov rcx, rbx
0x00005164      4889ef         mov rdi, rbp
0x00005167      be01000000     mov esi, 1
0x0000516c      31c0           xor eax, eax
0x0000516e      e8bdc8ffff     call sym.imp.__fprintf_chk
0x00005173      58             pop rax
0x00005174      5a             pop rdx
0x00005175      4883c428       add rsp, 0x28
0x00005179      5b             pop rbx
0x0000517a      5d             pop rbp
0x0000517b      415c           pop r12
0x0000517d      415d           pop r13
0x0000517f      415e           pop r14
0x00005181      415f           pop r15
0x00005183      c3             ret
0x00005184      0f1f4000       nop dword [rax]
0x00005188      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000518c      488d35251800.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x69b8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005193      ba05000000     mov edx, 5
0x00005198      31ff           xor edi, edi
0x0000519a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000519e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051a2      4c8b6308       mov r12, qword [rbx + 8]
0x000051a6      488b1b         mov rbx, qword [rbx]
0x000051a9      e822c6ffff     call sym.imp.dcgettext
0x000051ae      4157           push r15
0x000051b0      eba4           jmp 0x5156
0x000051b2      660f1f440000   nop word [rax + rax]
0x000051b8      4c8b4308       mov r8, qword [rbx + 8]
0x000051bc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000051c0      488d35191800.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x69e0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000051c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000051cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000051cf      ba05000000     mov edx, 5
0x000051d4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051d8      31ff           xor edi, edi
0x000051da      488b1b         mov rbx, qword [rbx]
0x000051dd      4c890424       mov qword [rsp], r8
0x000051e1      e8eac5ffff     call sym.imp.dcgettext
0x000051e6      4883ec08       sub rsp, 8
0x000051ea      4d89e9         mov r9, r13
0x000051ed      4154           push r12
0x000051ef      4157           push r15
0x000051f1      4156           push r14
0x000051f3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000051f8      4889d9         mov rcx, rbx
0x000051fb      4889c2         mov rdx, rax
0x000051fe      4889ef         mov rdi, rbp
0x00005201      be01000000     mov esi, 1
0x00005206      31c0           xor eax, eax
0x00005208      e823c8ffff     call sym.imp.__fprintf_chk
0x0000520d      4883c420       add rsp, 0x20
0x00005211      4883c428       add rsp, 0x28
0x00005215      5b             pop rbx
0x00005216      5d             pop rbp
0x00005217      415c           pop r12
0x00005219      415d           pop r13
0x0000521b      415e           pop r14
0x0000521d      415f           pop r15
0x0000521f      c3             ret
0x00005220      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005224      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005228      488d35d91700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6a08 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000522f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005233      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005237      ba05000000     mov edx, 5
0x0000523c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005240      4c8b4308       mov r8, qword [rbx + 8]
0x00005244      31ff           xor edi, edi
0x00005246      4c894c2408     mov qword [rsp + 8], r9
0x0000524b      488b1b         mov rbx, qword [rbx]
0x0000524e      4c890424       mov qword [rsp], r8
0x00005252      e879c5ffff     call sym.imp.dcgettext
0x00005257      4155           push r13
0x00005259      4154           push r12
0x0000525b      4157           push r15
0x0000525d      4156           push r14
0x0000525f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005264      eb8d           jmp 0x51f3
0x00005266      662e0f1f8400.  nop word cs:[rax + rax]
0x00005270      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005274      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005278      ba05000000     mov edx, 5
0x0000527d      488b4310       mov rax, qword [rbx + 0x10]
0x00005281      4c8b4308       mov r8, qword [rbx + 8]
0x00005285      488d35141800.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6aa0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000528c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005290      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005294      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005298      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000529c      4c89542418     mov qword [rsp + 0x18], r10
0x000052a1      4c894c2410     mov qword [rsp + 0x10], r9
0x000052a6      48890424       mov qword [rsp], rax
0x000052aa      4c89442408     mov qword [rsp + 8], r8
0x000052af      488b1b         mov rbx, qword [rbx]
0x000052b2      e98bfdffff     jmp 0x5042
0x000052b7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000052c0      4531c9         xor r9d, r9d
0x000052c3      49833800       cmp qword [r8], 0
0x000052c7      7412           je 0x52db
0x000052c9      0f1f80000000.  nop dword [rax]
0x000052d0      4983c101       add r9, 1
0x000052d4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000052d9      75f5           jne 0x52d0
0x000052db      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000052e0      4883ec68       sub rsp, 0x68
0x000052e4      4d89c2         mov r10, r8
0x000052e7      4531c9         xor r9d, r9d
0x000052ea      64488b042528.  mov rax, qword fs:[0x28]
0x000052f3      4889442458     mov qword [rsp + 0x58], rax
0x000052f8      31c0           xor eax, eax
0x000052fa      4989e0         mov r8, rsp
0x000052fd      0f1f00         nop dword [rax]
0x00005300      418b02         mov eax, dword [r10]
0x00005303      83f82f         cmp eax, 0x2f
0x00005306      7742           ja 0x534a
0x00005308      4189c3         mov r11d, eax
0x0000530b      4d035a10       add r11, qword [r10 + 0x10]
0x0000530f      83c008         add eax, 8
0x00005312      418902         mov dword [r10], eax
0x00005315      498b03         mov rax, qword [r11]
0x00005318      4885c0         test rax, rax
0x0000531b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000531f      740a           je 0x532b
0x00005321      4983c101       add r9, 1
0x00005325      4983f90a       cmp r9, 0xa
0x00005329      75d5           jne 0x5300
0x0000532b      e870fbffff     call sym.version_etc_arn
0x00005330      488b442458     mov rax, qword [rsp + 0x58]
0x00005335      644833042528.  xor rax, qword fs:[0x28]
0x0000533e      7505           jne 0x5345
0x00005340      4883c468       add rsp, 0x68
0x00005344      c3             ret
0x00005345      e8b6c4ffff     call sym.imp.__stack_chk_fail
0x0000534a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000534e      498d4308       lea rax, [r11 + 8]
0x00005352      49894208       mov qword [r10 + 8], rax
0x00005356      ebbd           jmp 0x5315
0x00005358      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005360      55             push rbp
0x00005361      53             push rbx
0x00005362      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005368      4531db         xor r11d, r11d
0x0000536b      4881ecb80000.  sub rsp, 0xb8
0x00005372      64488b042528.  mov rax, qword fs:[0x28]
0x0000537b      4889442478     mov qword [rsp + 0x78], rax
0x00005380      31c0           xor eax, eax
0x00005382      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000538a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005392      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000539a      4c8d442420     lea r8, [rsp + 0x20]
0x0000539f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000053a7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000053af      4889442410     mov qword [rsp + 0x10], rax
0x000053b4      488d84248000.  lea rax, [rsp + 0x80]
0x000053bc      4531c9         xor r9d, r9d
0x000053bf      4889442418     mov qword [rsp + 0x18], rax
0x000053c4      4889c5         mov rbp, rax
0x000053c7      660f1f840000.  nop word [rax + rax]
0x000053d0      4183fa2f       cmp r10d, 0x2f
0x000053d4      7756           ja 0x542c
0x000053d6      4489d0         mov eax, r10d
0x000053d9      41bb01000000   mov r11d, 1
0x000053df      4183c208       add r10d, 8
0x000053e3      4801e8         add rax, rbp
0x000053e6      488b00         mov rax, qword [rax]
0x000053e9      4885c0         test rax, rax
0x000053ec      4b8904c8       mov qword [r8 + r9*8], rax
0x000053f0      740a           je 0x53fc
0x000053f2      4983c101       add r9, 1
0x000053f6      4983f90a       cmp r9, 0xa
0x000053fa      75d4           jne 0x53d0
0x000053fc      4584db         test r11b, r11b
0x000053ff      7524           jne 0x5425
0x00005401      e89afaffff     call sym.version_etc_arn
0x00005406      488b442478     mov rax, qword [rsp + 0x78]
0x0000540b      644833042528.  xor rax, qword fs:[0x28]
0x00005414      750a           jne 0x5420
0x00005416      4881c4b80000.  add rsp, 0xb8
0x0000541d      5b             pop rbx
0x0000541e      5d             pop rbp
0x0000541f      c3             ret
0x00005420      e8dbc3ffff     call sym.imp.__stack_chk_fail
0x00005425      4489542408     mov dword [rsp + 8], r10d
0x0000542a      ebd5           jmp 0x5401
0x0000542c      4889d8         mov rax, rbx
0x0000542f      4883c308       add rbx, 8
0x00005433      ebb1           jmp 0x53e6
0x00005435      90             nop
0x00005436      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005440      53             push rbx
0x00005441      488d353a1400.  lea rsi, str.Report_bugs_to:__s         ; 0x6882 ; "\nReport bugs to: %s\n"
0x00005448      ba05000000     mov edx, 5
0x0000544d      31ff           xor edi, edi
0x0000544f      e87cc3ffff     call sym.imp.dcgettext
0x00005454      488d153c1400.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6897 ; "bug-coreutils@gnu.org"
0x0000545b      4889c6         mov rsi, rax
0x0000545e      bf01000000     mov edi, 1
0x00005463      31c0           xor eax, eax
0x00005465      e836c5ffff     call sym.imp.__printf_chk
0x0000546a      488d353c1400.  lea rsi, str.s_home_page:___s           ; 0x68ad ; "%s home page: <%s>\n"
0x00005471      ba05000000     mov edx, 5
0x00005476      31ff           xor edi, edi
0x00005478      e853c3ffff     call sym.imp.dcgettext
0x0000547d      488d0d7c0d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6200 ; "https://www.gnu.org/software/coreutils/"
0x00005484      488d15030900.  lea rdx, str.GNU_coreutils              ; 0x5d8e ; "GNU coreutils"
0x0000548b      4889c6         mov rsi, rax
0x0000548e      bf01000000     mov edi, 1
0x00005493      31c0           xor eax, eax
0x00005495      e806c5ffff     call sym.imp.__printf_chk
0x0000549a      488b1d072c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000054a1      488d35381600.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6ae0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000054a8      31ff           xor edi, edi
0x000054aa      ba05000000     mov edx, 5
0x000054af      e81cc3ffff     call sym.imp.dcgettext
0x000054b4      4889de         mov rsi, rbx
0x000054b7      4889c7         mov rdi, rax
0x000054ba      5b             pop rbx
0x000054bb      e9e0c3ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000054c0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000054c1      4889fb         mov rbx, rdi
0x000054c4      e867c4ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000054c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000054cc      7505           jne 0x54d3
0x000054ce      4885db         test rbx, rbx
0x000054d1      7502           jne 0x54d5
0x000054d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000054d4      c3             ret
0x000054d5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000054da      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000054e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000054e3      48f7e6         mul rsi
0x000054e6      4889c7         mov rdi, rax
0x000054e9      0f90c0         seto al
0x000054ec      4885ff         test rdi, rdi
0x000054ef      780a           js 0x54fb
0x000054f1      0fb6c0         movzx eax, al
0x000054f4      4885c0         test rax, rax
0x000054f7      7502           jne 0x54fb
0x000054f9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000054fb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000054ff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005504      6690           nop
0x00005506      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005510      ebae           jmp sym.xmalloc
0x00005512      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005516      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005520      4885f6         test rsi, rsi
0x00005523      53             push rbx
0x00005524      4889f3         mov rbx, rsi
0x00005527      7505           jne 0x552e
0x00005529      4885ff         test rdi, rdi
0x0000552c      751a           jne 0x5548
0x0000552e      4889de         mov rsi, rbx
0x00005531      e84ac4ffff     call sym.imp.realloc
0x00005536      4885c0         test rax, rax
0x00005539      7505           jne 0x5540
0x0000553b      4885db         test rbx, rbx
0x0000553e      7511           jne 0x5551                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005540      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005541      c3             ret
0x00005542      660f1f440000   nop word [rax + rax]
0x00005548      e8a3c1ffff     call sym.imp.free
0x0000554d      31c0           xor eax, eax
0x0000554f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005550      c3             ret
0x00005551      e8ba010000     call sym.xalloc_die
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005560      4889f0         mov rax, rsi
0x00005563      48f7e2         mul rdx
0x00005566      4889c6         mov rsi, rax
0x00005569      0f90c0         seto al
0x0000556c      4885f6         test rsi, rsi
0x0000556f      780a           js 0x557b
0x00005571      0fb6c0         movzx eax, al
0x00005574      4885c0         test rax, rax
0x00005577      7502           jne 0x557b
0x00005579      eba5           jmp sym.xrealloc
0x0000557b      4883ec08       sub rsp, 8
0x0000557f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005584      6690           nop
0x00005586      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005590      4885ff         test rdi, rdi
0x00005593      4989d1         mov r9, rdx
0x00005596      488b0e         mov rcx, qword [rsi]
0x00005599      7435           je 0x55d0
0x0000559b      31d2           xor edx, edx
0x0000559d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000055a7      49f7f1         div r9
0x000055aa      4839c8         cmp rax, rcx
0x000055ad      763c           jbe 0x55eb
0x000055af      4889c8         mov rax, rcx
0x000055b2      48d1e8         shr rax, 1
0x000055b5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000055ba      48890e         mov qword [rsi], rcx
0x000055bd      490fafc9       imul rcx, r9
0x000055c1      4889ce         mov rsi, rcx
0x000055c4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000055c9      0f1f80000000.  nop dword [rax]
0x000055d0      4885c9         test rcx, rcx
0x000055d3      7423           je 0x55f8
0x000055d5      4889c8         mov rax, rcx
0x000055d8      49f7e1         mul r9
0x000055db      0f90c2         seto dl
0x000055de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000055e1      0fb6d2         movzx edx, dl
0x000055e4      7805           js 0x55eb
0x000055e6      4885d2         test rdx, rdx
0x000055e9      74cf           je 0x55ba
0x000055eb      4883ec08       sub rsp, 8
0x000055ef      e81c010000     call sym.xalloc_die
0x000055f4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000055f8      31d2           xor edx, edx
0x000055fa      b880000000     mov eax, 0x80
0x000055ff      4531c0         xor r8d, r8d
0x00005602      49f7f1         div r9
0x00005605      4885c0         test rax, rax
0x00005608      410f94c0       sete r8b
0x0000560c      498d0c00       lea rcx, [r8 + rax]
0x00005610      ebc3           jmp 0x55d5
0x00005612      0f1f4000       nop dword [rax]
0x00005616      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005620      4885ff         test rdi, rdi
0x00005623      488b06         mov rax, qword [rsi]
0x00005626      7428           je 0x5650
0x00005628      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005632      4839d0         cmp rax, rdx
0x00005635      772a           ja 0x5661
0x00005637      4889c2         mov rdx, rax
0x0000563a      48d1ea         shr rdx, 1
0x0000563d      488d440201     lea rax, [rdx + rax + 1]
0x00005642      488906         mov qword [rsi], rax
0x00005645      4889c6         mov rsi, rax
0x00005648      e9d3feffff     jmp sym.xrealloc
0x0000564d      0f1f00         nop dword [rax]
0x00005650      4885c0         test rax, rax
0x00005653      ba80000000     mov edx, 0x80
0x00005658      480f44c2       cmove rax, rdx
0x0000565c      4885c0         test rax, rax
0x0000565f      79e1           jns 0x5642
0x00005661      4883ec08       sub rsp, 8
0x00005665      e8a6000000     call sym.xalloc_die
0x0000566a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005670      53             push rbx
0x00005671      4889fb         mov rbx, rdi
0x00005674      e847feffff     call sym.xmalloc
0x00005679      4889da         mov rdx, rbx
0x0000567c      31f6           xor esi, esi
0x0000567e      4889c7         mov rdi, rax
0x00005681      5b             pop rbx
0x00005682      e9f9c1ffff     jmp sym.imp.memset
0x00005687      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005690      4889f8         mov rax, rdi
0x00005693      4883ec08       sub rsp, 8
0x00005697      48f7e6         mul rsi
0x0000569a      0f90c2         seto dl
0x0000569d      4885c0         test rax, rax
0x000056a0      7817           js 0x56b9
0x000056a2      0fb6d2         movzx edx, dl
0x000056a5      4885d2         test rdx, rdx
0x000056a8      750f           jne 0x56b9
0x000056aa      e801c2ffff     call sym.imp.calloc
0x000056af      4885c0         test rax, rax
0x000056b2      7405           je 0x56b9
0x000056b4      4883c408       add rsp, 8
0x000056b8      c3             ret
0x000056b9      e852000000     call sym.xalloc_die
0x000056be      6690           nop
;-- xmemdup:
0x000056c0      55             push rbp
0x000056c1      53             push rbx
0x000056c2      4889fd         mov rbp, rdi
0x000056c5      4889f7         mov rdi, rsi
0x000056c8      4889f3         mov rbx, rsi
0x000056cb      4883ec08       sub rsp, 8
0x000056cf      e8ecfdffff     call sym.xmalloc
0x000056d4      4883c408       add rsp, 8
0x000056d8      4889da         mov rdx, rbx
0x000056db      4889ee         mov rsi, rbp
0x000056de      5b             pop rbx
0x000056df      5d             pop rbp
0x000056e0      4889c7         mov rdi, rax
0x000056e3      e9f8c1ffff     jmp sym.imp.memcpy
0x000056e8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000056f0      53             push rbx
0x000056f1      4889fb         mov rbx, rdi
0x000056f4      e8f7c0ffff     call sym.imp.strlen
0x000056f9      4889df         mov rdi, rbx
0x000056fc      488d7001       lea rsi, [rax + 1]
0x00005700      5b             pop rbx
0x00005701      ebbd           jmp sym.xmemdup
0x00005703      662e0f1f8400.  nop word cs:[rax + rax]
0x0000570d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005710      488d35781400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6b8f ; "memory exhausted"
0x00005717      4883ec08       sub rsp, 8
0x0000571b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005720      31ff           xor edi, edi
0x00005722      e8a9c0ffff     call sym.imp.dcgettext
0x00005727      8b3df3282000   mov edi, dword [obj.exit_failure]       ; [0x208020:4]=1
0x0000572d      488d15cd0b00.  lea rdx, [0x00006301]                   ; "%s"
0x00005734      4889c1         mov rcx, rax
0x00005737      31f6           xor esi, esi
0x00005739      31c0           xor eax, eax
0x0000573b      e890c2ffff     call sym.imp.error
0x00005740      e8cbbfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005745      662e0f1f8400.  nop word cs:[rax + rax]
0x0000574f      90             nop
;-- rpl_fclose:
0x00005750      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005752      55             push rbp
0x00005753      53             push rbx
0x00005754      4889fb         mov rbx, rdi
0x00005757      e8b4c1ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000575c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000575e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005761      7854           js 0x57b7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005763      e8f8c1ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005768      85c0           test eax, eax
0x0000576a      752c           jne 0x5798
0x0000576c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000576f      e85c000000     call sym.rpl_fflush
0x00005774      85c0           test eax, eax
0x00005776      743c           je 0x57b4
0x00005778      e8a3bfffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000577d      448b20         mov r12d, dword [rax]
0x00005780      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005783      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005786      e815c0ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000578b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000578e      7530           jne 0x57c0
0x00005790      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005791      5d             pop rbp
0x00005792      415c           pop r12
0x00005794      c3             ret
0x00005795      0f1f00         nop dword [rax]
0x00005798      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000579b      e870c1ffff     call sym.imp.fileno
0x000057a0      31f6           xor esi, esi
0x000057a2      ba01000000     mov edx, 1
0x000057a7      89c7           mov edi, eax
0x000057a9      e8c2c0ffff     call sym.imp.lseek
0x000057ae      4883f8ff       cmp rax, 0xffffffffffffffff
0x000057b2      75b8           jne 0x576c
0x000057b4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000057b7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000057b8      5d             pop rbp
0x000057b9      415c           pop r12
0x000057bb      e9e0bfffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000057c0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000057c4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000057c9      ebc5           jmp 0x5790
0x000057cb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000057d0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000057d3      53             push rbx
0x000057d4      4889fb         mov rbx, rdi
0x000057d7      7411           je 0x57ea                               ; ../coreutils-8.31/lib/fflush.c:150
0x000057d9      e882c1ffff     call sym.imp.__freading
0x000057de      85c0           test eax, eax
0x000057e0      7408           je 0x57ea
0x000057e2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000057e8      750e           jne 0x57f8
0x000057ea      4889df         mov rdi, rbx
0x000057ed      5b             pop rbx
0x000057ee      e94dc1ffff     jmp sym.imp.fflush
0x000057f3      0f1f440000     nop dword [rax + rax]
0x000057f8      4889df         mov rdi, rbx
0x000057fb      ba01000000     mov edx, 1
0x00005800      31f6           xor esi, esi
0x00005802      e809000000     call sym.rpl_fseeko
0x00005807      4889df         mov rdi, rbx
0x0000580a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000580b      e930c1ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005810      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005814      48394710       cmp qword [rdi + 0x10], rax
0x00005818      7406           je 0x5820                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000581a      e9c1c1ffff     jmp sym.imp.fseeko
0x0000581f      90             nop
0x00005820      488b4720       mov rax, qword [rdi + 0x20]
0x00005824      48394728       cmp qword [rdi + 0x28], rax
0x00005828      75f0           jne 0x581a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000582a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000582f      75e9           jne 0x581a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005831      4154           push r12
0x00005833      55             push rbp
0x00005834      4189d4         mov r12d, edx
0x00005837      53             push rbx
0x00005838      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000583b      4889fb         mov rbx, rdi
0x0000583e      e8cdc0ffff     call sym.imp.fileno
0x00005843      4489e2         mov edx, r12d
0x00005846      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005849      89c7           mov edi, eax
0x0000584b      e820c0ffff     call sym.imp.lseek
0x00005850      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005854      740c           je 0x5862
0x00005856      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005859      488983900000.  mov qword [rbx + 0x90], rax
0x00005860      31c0           xor eax, eax
0x00005862      5b             pop rbx
0x00005863      5d             pop rbp
0x00005864      415c           pop r12
0x00005866      c3             ret
0x00005867      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005870      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005872      4154           push r12
0x00005874      4989f5         mov r13, rsi
0x00005877      55             push rbp
0x00005878      53             push rbx
0x00005879      4889fb         mov rbx, rdi
0x0000587c      4989d4         mov r12, rdx
0x0000587f      4883ec18       sub rsp, 0x18
0x00005883      64488b042528.  mov rax, qword fs:[0x28]
0x0000588c      4889442408     mov qword [rsp + 8], rax
0x00005891      31c0           xor eax, eax
0x00005893      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005898      4885ff         test rdi, rdi
0x0000589b      480f44d8       cmove rbx, rax
0x0000589f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000058a2      e879bfffff     call sym.imp.mbrtowc
0x000058a7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000058ab      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000058ae      7620           jbe 0x58d0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000058b0      4d85e4         test r12, r12
0x000058b3      741b           je 0x58d0
0x000058b5      31ff           xor edi, edi
0x000058b7      e8b4d7ffff     call sym.hard_locale
0x000058bc      84c0           test al, al
0x000058be      7510           jne 0x58d0
0x000058c0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000058c5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000058ca      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000058cc      0f1f4000       nop dword [rax]
0x000058d0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000058d5      644833142528.  xor rdx, qword fs:[0x28]
0x000058de      4889e8         mov rax, rbp
0x000058e1      750b           jne 0x58ee
0x000058e3      4883c418       add rsp, 0x18
0x000058e7      5b             pop rbx
0x000058e8      5d             pop rbp
0x000058e9      415c           pop r12
0x000058eb      415d           pop r13
0x000058ed      c3             ret
0x000058ee      e80dbfffff     call sym.imp.__stack_chk_fail
0x000058f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000058fd      0f1f00         nop dword [rax]
;-- extract_trimmed_name:
0x00005900      55             push rbp                                ; ../coreutils-8.31/lib/readutmp.c:50
0x00005901      53             push rbx
0x00005902      4889fd         mov rbp, rdi
0x00005905      bf21000000     mov edi, 0x21                           ; ../coreutils-8.31/lib/readutmp.c:53 ; '!'
0x0000590a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:50
0x0000590e      e8adfbffff     call sym.xmalloc                        ; ../coreutils-8.31/lib/readutmp.c:53
0x00005913      488d752c       lea rsi, [rbp + 0x2c]                   ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
0x00005917      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:53
0x0000591a      ba20000000     mov edx, 0x20                           ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest)); ; "@"
0x0000591f      4889c7         mov rdi, rax
0x00005922      e809beffff     call sym.imp.strncpy
0x00005927      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readutmp.c:59
0x0000592a      c6432000       mov byte [rbx + 0x20], 0                ; ../coreutils-8.31/lib/readutmp.c:58
0x0000592e      e8bdbeffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/readutmp.c:59
0x00005933      4801d8         add rax, rbx
0x00005936      4839c3         cmp rbx, rax
0x00005939      7306           jae 0x5941
0x0000593b      8078ff20       cmp byte [rax - 1], 0x20                ; ../coreutils-8.31/lib/readutmp.c:60
0x0000593f      740f           je 0x5950
0x00005941      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:64
0x00005945      4889d8         mov rax, rbx
0x00005948      5b             pop rbx
0x00005949      5d             pop rbp
0x0000594a      c3             ret
0x0000594b      0f1f440000     nop dword [rax + rax]
0x00005950      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/readutmp.c:61
0x00005954      c60000         mov byte [rax], 0
0x00005957      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:59
0x0000595a      75df           jne 0x593b
0x0000595c      ebe3           jmp 0x5941
0x0000595e      6690           nop
;-- read_utmp:
0x00005960      4157           push r15                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00005962      4156           push r14
0x00005964      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/readutmp.c:97
0x00005967      4155           push r13                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00005969      4189cd         mov r13d, ecx
0x0000596c      4154           push r12
0x0000596e      55             push rbp
0x0000596f      53             push rbx
0x00005970      4589ec         mov r12d, r13d                          ; ../coreutils-8.31/lib/readutmp.c:72
0x00005973      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/readutmp.c:108
0x00005975      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/readutmp.c:96
0x00005977      4183e402       and r12d, 2                             ; ../coreutils-8.31/lib/readutmp.c:72
0x0000597b      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:94
0x0000597f      4183e501       and r13d, 1                             ; ../coreutils-8.31/lib/readutmp.c:74
0x00005983      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/readutmp.c:94
0x00005987      4889542408     mov qword [rsp + 8], rdx
0x0000598c      e84fbdffff     call sym.imp.utmpxname                  ; ../coreutils-8.31/lib/readutmp.c:104
0x00005991      e83abfffff     call sym.imp.setutxent                  ; ../coreutils-8.31/lib/readutmp.c:106
0x00005996      e825c0ffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x0000599b      4885c0         test rax, rax
0x0000599e      4989c7         mov r15, rax
0x000059a1      746e           je 0x5a11
0x000059a3      6641833f07     cmp word [r15], 7                       ; ../coreutils-8.31/lib/readutmp.c:71
0x000059a8      750b           jne 0x59b5
0x000059aa      41807f2c00     cmp byte [r15 + 0x2c], 0
0x000059af      0f858b000000   jne 0x5a40
0x000059b5      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/readutmp.c:72
0x000059b8      75dc           jne 0x5996
0x000059ba      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x000059bd      0f84bd000000   je 0x5a80
0x000059c3      488d045b       lea rax, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/readutmp.c:114
0x000059c7      498b17         mov rdx, qword [r15]
0x000059ca      4c89fe         mov rsi, r15
0x000059cd      4883c301       add rbx, 1
0x000059d1      48c1e007       shl rax, 7
0x000059d5      4c01f0         add rax, r14
0x000059d8      488910         mov qword [rax], rdx
0x000059db      488d7808       lea rdi, [rax + 8]
0x000059df      498b97780100.  mov rdx, qword [r15 + 0x178]
0x000059e6      4883e7f8       and rdi, 0xfffffffffffffff8
0x000059ea      488990780100.  mov qword [rax + 0x178], rdx
0x000059f1      4829f8         sub rax, rdi
0x000059f4      4829c6         sub rsi, rax
0x000059f7      0580010000     add eax, 0x180
0x000059fc      c1e803         shr eax, 3
0x000059ff      89c1           mov ecx, eax
0x00005a01      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00005a04      e8b7bfffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x00005a09      4885c0         test rax, rax
0x00005a0c      4989c7         mov r15, rax
0x00005a0f      7592           jne 0x59a3
0x00005a11      e87abdffff     call sym.imp.endutxent                  ; ../coreutils-8.31/lib/readutmp.c:117
0x00005a16      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/readutmp.c:119
0x00005a1a      488918         mov qword [rax], rbx
0x00005a1d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/readutmp.c:120
0x00005a22      4c8930         mov qword [rax], r14
0x00005a25      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:123
0x00005a29      31c0           xor eax, eax
0x00005a2b      5b             pop rbx
0x00005a2c      5d             pop rbp
0x00005a2d      415c           pop r12
0x00005a2f      415d           pop r13
0x00005a31      415e           pop r14
0x00005a33      415f           pop r15
0x00005a35      c3             ret
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a40      418b7f04       mov edi, dword [r15 + 4]                ; ../coreutils-8.31/lib/readutmp.c:109
0x00005a44      85ff           test edi, edi                           ; ../coreutils-8.31/lib/readutmp.c:76
0x00005a46      0f8e6effffff   jle 0x59ba
0x00005a4c      4584ed         test r13b, r13b
0x00005a4f      0f8465ffffff   je 0x59ba
0x00005a55      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/readutmp.c:77
0x00005a57      e894beffff     call sym.imp.kill
0x00005a5c      85c0           test eax, eax
0x00005a5e      0f8956ffffff   jns 0x59ba
0x00005a64      e8b7bcffff     call sym.imp.__errno_location
0x00005a69      833803         cmp dword [rax], 3
0x00005a6c      0f8424ffffff   je 0x5996
0x00005a72      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x00005a75      0f8548ffffff   jne 0x59c3
0x00005a7b      0f1f440000     nop dword [rax + rax]
0x00005a80      4d85f6         test r14, r14
0x00005a83      7433           je 0x5ab8
0x00005a85      48b8378ee338.  movabs rax, 0x38e38e38e38e37
0x00005a8f      4839c5         cmp rbp, rax
0x00005a92      7749           ja 0x5add
0x00005a94      4889e8         mov rax, rbp
0x00005a97      48d1e8         shr rax, 1
0x00005a9a      488d6c0501     lea rbp, [rbp + rax + 1]
0x00005a9f      488d746d00     lea rsi, [rbp + rbp*2]
0x00005aa4      4c89f7         mov rdi, r14
0x00005aa7      48c1e607       shl rsi, 7
0x00005aab      e870faffff     call sym.xrealloc
0x00005ab0      4989c6         mov r14, rax
0x00005ab3      e90bffffff     jmp 0x59c3
0x00005ab8      4885ed         test rbp, rbp
0x00005abb      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xalloc.h:41
0x00005ac0      ba80010000     mov edx, 0x180
0x00005ac5      480f44e8       cmove rbp, rax
0x00005ac9      4889d0         mov rax, rdx
0x00005acc      31f6           xor esi, esi
0x00005ace      48f7e5         mul rbp
0x00005ad1      700f           jo 0x5ae2
0x00005ad3      4885c0         test rax, rax
0x00005ad6      7805           js 0x5add
0x00005ad8      4885f6         test rsi, rsi
0x00005adb      74c2           je 0x5a9f
0x00005add      e82efcffff     call sym.xalloc_die
0x00005ae2      be01000000     mov esi, 1
0x00005ae7      ebea           jmp 0x5ad3
0x00005ae9      0f1f80000000.  nop dword [rax]
;-- close_stream:
0x00005af0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005af2      55             push rbp
0x00005af3      4889fd         mov rbp, rdi
0x00005af6      53             push rbx
0x00005af7      e864bcffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005afc      8b5d00         mov ebx, dword [rbp]
0x00005aff      4889ef         mov rdi, rbp
0x00005b02      4989c4         mov r12, rax
0x00005b05      e846fcffff     call sym.rpl_fclose
0x00005b0a      83e320         and ebx, 0x20                           ; "@"
0x00005b0d      85db           test ebx, ebx
0x00005b0f      7517           jne 0x5b28
0x00005b11      85c0           test eax, eax
0x00005b13      740a           je 0x5b1f                               ; stdio.h:-186
0x00005b15      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005b18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b1d      7439           je 0x5b58
0x00005b1f      5b             pop rbx
0x00005b20      5d             pop rbp
0x00005b21      415c           pop r12
0x00005b23      c3             ret
0x00005b24      0f1f4000       nop dword [rax]
0x00005b28      85c0           test eax, eax
0x00005b2a      751c           jne 0x5b48
0x00005b2c      e8efbbffff     call sym.imp.__errno_location
0x00005b31      c70000000000   mov dword [rax], 0
0x00005b37      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b3c      5b             pop rbx
0x00005b3d      5d             pop rbp
0x00005b3e      415c           pop r12
0x00005b40      c3             ret
0x00005b41      0f1f80000000.  nop dword [rax]
0x00005b48      5b             pop rbx
0x00005b49      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005b4e      5d             pop rbp                                 ; stdio.h:-186
0x00005b4f      415c           pop r12
0x00005b51      c3             ret
0x00005b52      660f1f440000   nop word [rax + rax]
0x00005b58      e8c3bbffff     call sym.imp.__errno_location
0x00005b5d      833809         cmp dword [rax], 9
0x00005b60      5b             pop rbx
0x00005b61      5d             pop rbp
0x00005b62      415c           pop r12                                 ; stdio.h:-178
0x00005b64      0f95c0         setne al
0x00005b67      0fb6c0         movzx eax, al
0x00005b6a      f7d8           neg eax
0x00005b6c      c3             ret
0x00005b6d      0f1f00         nop dword [rax]
;-- locale_charset:
0x00005b70      4883ec08       sub rsp, 8
0x00005b74      bf0e000000     mov edi, 0xe
0x00005b79      e8d2bdffff     call sym.imp.nl_langinfo
0x00005b7e      4885c0         test rax, rax
0x00005b81      741d           je 0x5ba0
0x00005b83      803800         cmp byte [rax], 0
0x00005b86      488d15131000.  lea rdx, str.ASCII                      ; 0x6ba0 ; "ASCII"
0x00005b8d      480f44c2       cmove rax, rdx
0x00005b91      4883c408       add rsp, 8
0x00005b95      c3             ret
0x00005b96      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ba0      488d05f90f00.  lea rax, str.ASCII                      ; 0x6ba0 ; "ASCII"
0x00005ba7      4883c408       add rsp, 8
0x00005bab      c3             ret
0x00005bac      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005bb0      4157           push r15
0x00005bb2      4156           push r14
0x00005bb4      4989d7         mov r15, rdx
0x00005bb7      4155           push r13
0x00005bb9      4154           push r12
0x00005bbb      4c8d254e1f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x00005bc2      55             push rbp
0x00005bc3      488d2d4e1f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18
0x00005bca      53             push rbx
0x00005bcb      4189fd         mov r13d, edi
0x00005bce      4989f6         mov r14, rsi
0x00005bd1      4c29e5         sub rbp, r12
0x00005bd4      4883ec08       sub rsp, 8
0x00005bd8      48c1fd03       sar rbp, 3
0x00005bdc      e8bfbaffff     call sym._init
0x00005be1      4885ed         test rbp, rbp
0x00005be4      7420           je 0x5c06
0x00005be6      31db           xor ebx, ebx
0x00005be8      0f1f84000000.  nop dword [rax + rax]
0x00005bf0      4c89fa         mov rdx, r15
0x00005bf3      4c89f6         mov rsi, r14
0x00005bf6      4489ef         mov edi, r13d
0x00005bf9      41ff14dc       call qword [r12 + rbx*8]
0x00005bfd      4883c301       add rbx, 1
0x00005c01      4839dd         cmp rbp, rbx
0x00005c04      75ea           jne 0x5bf0
0x00005c06      4883c408       add rsp, 8
0x00005c0a      5b             pop rbx
0x00005c0b      5d             pop rbp
0x00005c0c      415c           pop r12
0x00005c0e      415d           pop r13
0x00005c10      415e           pop r14
0x00005c12      415f           pop r15
0x00005c14      c3             ret
0x00005c15      90             nop
0x00005c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005c20      f3c3           ret
0x00005c22      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c2c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005c30      488b15d12320.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005c37      31f6           xor esi, esi
0x00005c39      e9c2bdffff     jmp sym.imp.__cxa_atexit
0x00005c3e      0000           add byte [rax], al
