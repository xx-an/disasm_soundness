;-- section..plt:
;-- .plt:
0x00001a00      ff356af32000   push qword [0x00210d70]                 ; [12] -r-x section size 1184 named .plt
0x00001a06      ff256cf32000   jmp qword [0x00210d78]                  ; [0x210d78:8]=0
0x00001a0c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001a10      ff256af32000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x210d80:8]=0x1a16
0x00001a16      6800000000     push 0
0x00001a1b      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001a20      ff2562f32000   jmp qword [reloc.getenv]                ; [0x210d88:8]=0x1a26 ; "&\x1a"
0x00001a26      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x00001a2b      e9d0ffffff     jmp sym..plt
;-- imp.sigprocmask:
0x00001a30      ff255af32000   jmp qword [reloc.sigprocmask]           ; [0x210d90:8]=0x1a36 ; "6\x1a"
0x00001a36      6802000000     push 2
0x00001a3b      e9c0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001a40      ff2552f32000   jmp qword [reloc.__snprintf_chk]        ; [0x210d98:8]=0x1a46 ; "F\x1a"
0x00001a46      6803000000     push 3
0x00001a4b      e9b0ffffff     jmp sym..plt
;-- imp.raise:
0x00001a50      ff254af32000   jmp qword [reloc.raise]                 ; [0x210da0:8]=0x1a56 ; "V\x1a"
0x00001a56      6804000000     push 4
0x00001a5b      e9a0ffffff     jmp sym..plt
;-- imp.free:
0x00001a60      ff2542f32000   jmp qword [reloc.free]                  ; [0x210da8:8]=0x1a66 ; "f\x1a"
0x00001a66      6805000000     push 5
0x00001a6b      e990ffffff     jmp sym..plt
;-- imp.abort:
0x00001a70      ff253af32000   jmp qword [reloc.abort]                 ; [0x210db0:8]=0x1a76 ; "v\x1a"
0x00001a76      6806000000     push 6
0x00001a7b      e980ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001a80      ff2532f32000   jmp qword [reloc.__errno_location]      ; [0x210db8:8]=0x1a86
0x00001a86      6807000000     push 7
0x00001a8b      e970ffffff     jmp sym..plt
;-- imp.fdatasync:
0x00001a90      ff252af32000   jmp qword [reloc.fdatasync]             ; [0x210dc0:8]=0x1a96
0x00001a96      6808000000     push 8
0x00001a9b      e960ffffff     jmp sym..plt
;-- imp.error_at_line:
0x00001aa0      ff2522f32000   jmp qword [reloc.error_at_line]         ; [0x210dc8:8]=0x1aa6
0x00001aa6      6809000000     push 9
0x00001aab      e950ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001ab0      ff251af32000   jmp qword [reloc.strncmp]               ; [0x210dd0:8]=0x1ab6
0x00001ab6      680a000000     push 0xa
0x00001abb      e940ffffff     jmp sym..plt
;-- imp._exit:
0x00001ac0      ff2512f32000   jmp qword [reloc._exit]                 ; [0x210dd8:8]=0x1ac6
0x00001ac6      680b000000     push 0xb
0x00001acb      e930ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001ad0      ff250af32000   jmp qword [reloc.__fpending]            ; [0x210de0:8]=0x1ad6
0x00001ad6      680c000000     push 0xc
0x00001adb      e920ffffff     jmp sym..plt
;-- imp.sigaction:
0x00001ae0      ff2502f32000   jmp qword [reloc.sigaction]             ; [0x210de8:8]=0x1ae6
0x00001ae6      680d000000     push 0xd
0x00001aeb      e910ffffff     jmp sym..plt
;-- imp.localeconv:
0x00001af0      ff25faf22000   jmp qword [reloc.localeconv]            ; [0x210df0:8]=0x1af6
0x00001af6      680e000000     push 0xe
0x00001afb      e900ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001b00      ff25f2f22000   jmp qword [reloc.fcntl]                 ; [0x210df8:8]=0x1b06
0x00001b06      680f000000     push 0xf
0x00001b0b      e9f0feffff     jmp sym..plt
;-- imp.clock_gettime:
0x00001b10      ff25eaf22000   jmp qword [reloc.clock_gettime]         ; [0x210e00:8]=0x1b16
0x00001b16      6810000000     push 0x10
0x00001b1b      e9e0feffff     jmp sym..plt
;-- imp.write:
0x00001b20      ff25e2f22000   jmp qword [reloc.write]                 ; [0x210e08:8]=0x1b26 ; "&\x1b"
0x00001b26      6811000000     push 0x11
0x00001b2b      e9d0feffff     jmp sym..plt
;-- imp.textdomain:
0x00001b30      ff25daf22000   jmp qword [reloc.textdomain]            ; [0x210e10:8]=0x1b36 ; "6\x1b"
0x00001b36      6812000000     push 0x12
0x00001b3b      e9c0feffff     jmp sym..plt
;-- imp.fclose:
0x00001b40      ff25d2f22000   jmp qword [reloc.fclose]                ; [0x210e18:8]=0x1b46 ; "F\x1b"
0x00001b46      6813000000     push 0x13
0x00001b4b      e9b0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001b50      ff25caf22000   jmp qword [reloc.bindtextdomain]        ; [0x210e20:8]=0x1b56 ; "V\x1b"
0x00001b56      6814000000     push 0x14
0x00001b5b      e9a0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001b60      ff25c2f22000   jmp qword [reloc.dcgettext]             ; [0x210e28:8]=0x1b66 ; "f\x1b"
0x00001b66      6815000000     push 0x15
0x00001b6b      e990feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001b70      ff25baf22000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x210e30:8]=0x1b76 ; "v\x1b"
0x00001b76      6816000000     push 0x16
0x00001b7b      e980feffff     jmp sym..plt
;-- imp.strlen:
0x00001b80      ff25b2f22000   jmp qword [reloc.strlen]                ; [0x210e38:8]=0x1b86
0x00001b86      6817000000     push 0x17
0x00001b8b      e970feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001b90      ff25aaf22000   jmp qword [reloc.__stack_chk_fail]      ; [0x210e40:8]=0x1b96
0x00001b96      6818000000     push 0x18
0x00001b9b      e960feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ba0      ff25a2f22000   jmp qword [reloc.getopt_long]           ; [0x210e48:8]=0x1ba6
0x00001ba6      6819000000     push 0x19                               ; "<"
0x00001bab      e950feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001bb0      ff259af22000   jmp qword [reloc.mbrtowc]               ; [0x210e50:8]=0x1bb6
0x00001bb6      681a000000     push 0x1a
0x00001bbb      e940feffff     jmp sym..plt
;-- imp.dup2:
0x00001bc0      ff2592f22000   jmp qword [reloc.dup2]                  ; [0x210e58:8]=0x1bc6
0x00001bc6      681b000000     push 0x1b
0x00001bcb      e930feffff     jmp sym..plt
;-- imp.strchr:
0x00001bd0      ff258af22000   jmp qword [reloc.strchr]                ; [0x210e60:8]=0x1bd6
0x00001bd6      681c000000     push 0x1c
0x00001bdb      e920feffff     jmp sym..plt
;-- imp.__overflow:
0x00001be0      ff2582f22000   jmp qword [reloc.__overflow]            ; [0x210e68:8]=0x1be6
0x00001be6      681d000000     push 0x1d
0x00001beb      e910feffff     jmp sym..plt
;-- imp.strrchr:
0x00001bf0      ff257af22000   jmp qword [reloc.strrchr]               ; [0x210e70:8]=0x1bf6
0x00001bf6      681e000000     push 0x1e
0x00001bfb      e900feffff     jmp sym..plt
;-- imp.ftruncate:
0x00001c00      ff2572f22000   jmp qword [reloc.ftruncate]             ; [0x210e78:8]=0x1c06
0x00001c06      681f000000     push 0x1f
0x00001c0b      e9f0fdffff     jmp sym..plt
;-- imp.lseek:
0x00001c10      ff256af22000   jmp qword [reloc.lseek]                 ; [0x210e80:8]=0x1c16
0x00001c16      6820000000     push 0x20                               ; "@"
0x00001c1b      e9e0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001c20      ff2562f22000   jmp qword [reloc.__assert_fail]         ; [0x210e88:8]=0x1c26 ; "&\x1c"
0x00001c26      6821000000     push 0x21                               ; '!'
0x00001c2b      e9d0fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001c30      ff255af22000   jmp qword [reloc.__strtoul_internal]    ; [0x210e90:8]=0x1c36 ; "6\x1c"
0x00001c36      6822000000     push 0x22                               ; '"'
0x00001c3b      e9c0fdffff     jmp sym..plt
;-- imp.memset:
0x00001c40      ff2552f22000   jmp qword [reloc.memset]                ; [0x210e98:8]=0x1c46 ; "F\x1c"
0x00001c46      6823000000     push 0x23                               ; '#'
0x00001c4b      e9b0fdffff     jmp sym..plt
;-- imp.ioctl:
0x00001c50      ff254af22000   jmp qword [reloc.ioctl]                 ; [0x210ea0:8]=0x1c56 ; "V\x1c"
0x00001c56      6824000000     push 0x24                               ; '$'
0x00001c5b      e9a0fdffff     jmp sym..plt
;-- imp.close:
0x00001c60      ff2542f22000   jmp qword [reloc.close]                 ; [0x210ea8:8]=0x1c66 ; "f\x1c"
0x00001c66      6825000000     push 0x25                               ; '%'
0x00001c6b      e990fdffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001c70      ff253af22000   jmp qword [reloc.posix_fadvise]         ; [0x210eb0:8]=0x1c76 ; "v\x1c"
0x00001c76      6826000000     push 0x26                               ; '&'
0x00001c7b      e980fdffff     jmp sym..plt
;-- imp.read:
0x00001c80      ff2532f22000   jmp qword [reloc.read]                  ; [0x210eb8:8]=0x1c86
0x00001c86      6827000000     push 0x27                               ; '''
0x00001c8b      e970fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001c90      ff252af22000   jmp qword [reloc.memcmp]                ; [0x210ec0:8]=0x1c96
0x00001c96      6828000000     push 0x28                               ; '('
0x00001c9b      e960fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001ca0      ff2522f22000   jmp qword [reloc.fputs_unlocked]        ; [0x210ec8:8]=0x1ca6
0x00001ca6      6829000000     push 0x29                               ; ')'
0x00001cab      e950fdffff     jmp sym..plt
;-- imp.calloc:
0x00001cb0      ff251af22000   jmp qword [reloc.calloc]                ; [0x210ed0:8]=0x1cb6
0x00001cb6      682a000000     push 0x2a                               ; '*'
0x00001cbb      e940fdffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x00001cc0      ff2512f22000   jmp qword [reloc.__memcpy_chk]          ; [0x210ed8:8]=0x1cc6
0x00001cc6      682b000000     push 0x2b                               ; '+'
0x00001ccb      e930fdffff     jmp sym..plt
;-- imp.sigemptyset:
0x00001cd0      ff250af22000   jmp qword [reloc.sigemptyset]           ; [0x210ee0:8]=0x1cd6
0x00001cd6      682c000000     push 0x2c                               ; ','
0x00001cdb      e920fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001ce0      ff2502f22000   jmp qword [reloc.memcpy]                ; [0x210ee8:8]=0x1ce6
0x00001ce6      682d000000     push 0x2d                               ; '-'
0x00001ceb      e910fdffff     jmp sym..plt
;-- imp.fileno:
0x00001cf0      ff25faf12000   jmp qword [reloc.fileno]                ; [0x210ef0:8]=0x1cf6
0x00001cf6      682e000000     push 0x2e                               ; '.'
0x00001cfb      e900fdffff     jmp sym..plt
;-- imp.malloc:
0x00001d00      ff25f2f12000   jmp qword [reloc.malloc]                ; [0x210ef8:8]=0x1d06
0x00001d06      682f000000     push 0x2f                               ; '/'
0x00001d0b      e9f0fcffff     jmp sym..plt
;-- imp.fflush:
0x00001d10      ff25eaf12000   jmp qword [reloc.fflush]                ; [0x210f00:8]=0x1d16
0x00001d16      6830000000     push 0x30                               ; '0'
0x00001d1b      e9e0fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001d20      ff25e2f12000   jmp qword [reloc.nl_langinfo]           ; [0x210f08:8]=0x1d26 ; "&\x1d"
0x00001d26      6831000000     push 0x31                               ; '1'
0x00001d2b      e9d0fcffff     jmp sym..plt
;-- imp.__fxstat:
0x00001d30      ff25daf12000   jmp qword [reloc.__fxstat]              ; [0x210f10:8]=0x1d36 ; "6\x1d"
0x00001d36      6832000000     push 0x32                               ; '2'
0x00001d3b      e9c0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001d40      ff25d2f12000   jmp qword [reloc.__freading]            ; [0x210f18:8]=0x1d46 ; "F\x1d"
0x00001d46      6833000000     push 0x33                               ; '3'
0x00001d4b      e9b0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001d50      ff25caf12000   jmp qword [reloc.realloc]               ; [0x210f20:8]=0x1d56 ; "V\x1d"
0x00001d56      6834000000     push 0x34                               ; '4'
0x00001d5b      e9a0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001d60      ff25c2f12000   jmp qword [reloc.setlocale]             ; [0x210f28:8]=0x1d66 ; "f\x1d"
0x00001d66      6835000000     push 0x35                               ; '5'
0x00001d6b      e990fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001d70      ff25baf12000   jmp qword [reloc.__printf_chk]          ; [0x210f30:8]=0x1d76 ; "v\x1d"
0x00001d76      6836000000     push 0x36                               ; '6'
0x00001d7b      e980fcffff     jmp sym..plt
;-- imp.memmove:
0x00001d80      ff25b2f12000   jmp qword [reloc.memmove]               ; [0x210f38:8]=0x1d86
0x00001d86      6837000000     push 0x37                               ; '7'
0x00001d8b      e970fcffff     jmp sym..plt
;-- imp.error:
0x00001d90      ff25aaf12000   jmp qword [reloc.error]                 ; [0x210f40:8]=0x1d96
0x00001d96      6838000000     push 0x38                               ; '8'
0x00001d9b      e960fcffff     jmp sym..plt
;-- imp.fsync:
0x00001da0      ff25a2f12000   jmp qword [reloc.fsync]                 ; [0x210f48:8]=0x1da6
0x00001da6      6839000000     push 0x39                               ; '9'
0x00001dab      e950fcffff     jmp sym..plt
;-- imp.open:
0x00001db0      ff259af12000   jmp qword [reloc.open]                  ; [0x210f50:8]=0x1db6
0x00001db6      683a000000     push 0x3a                               ; ':'
0x00001dbb      e940fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001dc0      ff2592f12000   jmp qword [reloc.fseeko]                ; [0x210f58:8]=0x1dc6
0x00001dc6      683b000000     push 0x3b                               ; ';'
0x00001dcb      e930fcffff     jmp sym..plt
;-- imp.dcngettext:
0x00001dd0      ff258af12000   jmp qword [reloc.dcngettext]            ; [0x210f60:8]=0x1dd6
0x00001dd6      683c000000     push 0x3c                               ; '<'
0x00001ddb      e920fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001de0      ff2582f12000   jmp qword [reloc.__cxa_atexit]          ; [0x210f68:8]=0x1de6
0x00001de6      683d000000     push 0x3d                               ; '='
0x00001deb      e910fcffff     jmp sym..plt
;-- imp.getpagesize:
0x00001df0      ff257af12000   jmp qword [reloc.getpagesize]           ; [0x210f70:8]=0x1df6
0x00001df6      683e000000     push 0x3e                               ; '>'
0x00001dfb      e900fcffff     jmp sym..plt
;-- imp.sigismember:
0x00001e00      ff2572f12000   jmp qword [reloc.sigismember]           ; [0x210f78:8]=0x1e06
0x00001e06      683f000000     push 0x3f                               ; '?'
0x00001e0b      e9f0fbffff     jmp sym..plt
;-- imp.exit:
0x00001e10      ff256af12000   jmp qword [reloc.exit]                  ; [0x210f80:8]=0x1e16
0x00001e16      6840000000     push 0x40                               ; segment.PHDR
0x00001e1b      e9e0fbffff     jmp sym..plt
;-- imp.fwrite:
0x00001e20      ff2562f12000   jmp qword [reloc.fwrite]                ; [0x210f88:8]=0x1e26 ; "&\x1e"
0x00001e26      6841000000     push 0x41                               ; 'A'
0x00001e2b      e9d0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001e30      ff255af12000   jmp qword [reloc.__fprintf_chk]         ; [0x210f90:8]=0x1e36 ; "6\x1e"
0x00001e36      6842000000     push 0x42                               ; 'B'
0x00001e3b      e9c0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001e40      ff2552f12000   jmp qword [reloc.mbsinit]               ; [0x210f98:8]=0x1e46 ; "F\x1e"
0x00001e46      6843000000     push 0x43                               ; 'C'
0x00001e4b      e9b0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001e50      ff254af12000   jmp qword [reloc.iswprint]              ; [0x210fa0:8]=0x1e56 ; "V\x1e"
0x00001e56      6844000000     push 0x44                               ; 'D'
0x00001e5b      e9a0fbffff     jmp sym..plt
;-- imp.sigaddset:
0x00001e60      ff2542f12000   jmp qword [reloc.sigaddset]             ; [0x210fa8:8]=0x1e66 ; "f\x1e"
0x00001e66      6845000000     push 0x45                               ; 'E'
0x00001e6b      e990fbffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00001e70      ff253af12000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x210fb0:8]=0x1e76 ; "v\x1e"
0x00001e76      6846000000     push 0x46                               ; 'F'
0x00001e7b      e980fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001e80      ff2532f12000   jmp qword [reloc.__ctype_b_loc]         ; [0x210fb8:8]=0x1e86
0x00001e86      6847000000     push 0x47                               ; 'G'
0x00001e8b      e970fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001e90      ff252af12000   jmp qword [reloc.__sprintf_chk]         ; [0x210fc0:8]=0x1e96
0x00001e96      6848000000     push 0x48                               ; 'H'
0x00001e9b      e960fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001ea0      .qword 0x90660020f14225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001ea8      0000           add byte [rax], al
0x00001eaa      0000           add byte [rax], al
0x00001eac      0000           add byte [rax], al
0x00001eae      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001eb0      4157           push r15                                ; [14] -r-x section size 42814 named .text
0x00001eb2      4156           push r14
0x00001eb4      4155           push r13
0x00001eb6      4154           push r12
0x00001eb8      4189fc         mov r12d, edi
0x00001ebb      55             push rbp
0x00001ebc      53             push rbx
0x00001ebd      488d3d78a900.  lea rdi, str.POSIXLY_CORRECT            ; 0xc83c ; "POSIXLY_CORRECT"
0x00001ec4      4889f5         mov rbp, rsi
0x00001ec7      4881ece80000.  sub rsp, 0xe8
0x00001ece      64488b042528.  mov rax, qword fs:[0x28]
0x00001ed7      48898424d800.  mov qword [rsp + 0xd8], rax
0x00001edf      31c0           xor eax, eax
0x00001ee1      e83afbffff     call sym.imp.getenv
0x00001ee6      488d3d93f320.  lea rdi, obj.caught_signals             ; 0x211280
0x00001eed      4889c3         mov rbx, rax
0x00001ef0      e8dbfdffff     call sym.imp.sigemptyset
0x00001ef5      4885db         test rbx, rbx
0x00001ef8      0f847c160000   je 0x357a
0x00001efe      488d442440     lea rax, [rsp + 0x40]
0x00001f03      31f6           xor esi, esi
0x00001f05      bf02000000     mov edi, 2
0x00001f0a      4889c2         mov rdx, rax
0x00001f0d      4889442420     mov qword [rsp + 0x20], rax
0x00001f12      e8c9fbffff     call sym.imp.sigaction
0x00001f17      48837c244001   cmp qword [rsp + 0x40], 1
0x00001f1d      7411           je 0x1f30
0x00001f1f      488d3d5af320.  lea rdi, obj.caught_signals             ; 0x211280
0x00001f26      be02000000     mov esi, 2
0x00001f2b      e830ffffff     call sym.imp.sigaddset
0x00001f30      660f6f0548f3.  movdqa xmm0, xmmword [obj.caught_signals]
0x00001f38      488d3d41f320.  lea rdi, obj.caught_signals             ; 0x211280
0x00001f3f      be0a000000     mov esi, 0xa
0x00001f44      0f11442448     movups xmmword [rsp + 0x48], xmm0
0x00001f49      660f6f053ff3.  movdqa xmm0, xmmword [0x00211290]
0x00001f51      0f11442458     movups xmmword [rsp + 0x58], xmm0
0x00001f56      660f6f0542f3.  movdqa xmm0, xmmword [0x002112a0]
0x00001f5e      0f11442468     movups xmmword [rsp + 0x68], xmm0
0x00001f63      660f6f0545f3.  movdqa xmm0, xmmword [0x002112b0]
0x00001f6b      0f11442478     movups xmmword [rsp + 0x78], xmm0
0x00001f70      660f6f0548f3.  movdqa xmm0, xmmword [0x002112c0]
0x00001f78      0f1184248800.  movups xmmword [rsp + 0x88], xmm0
0x00001f80      660f6f0548f3.  movdqa xmm0, xmmword [0x002112d0]
0x00001f88      0f1184249800.  movups xmmword [rsp + 0x98], xmm0
0x00001f90      660f6f0548f3.  movdqa xmm0, xmmword [0x002112e0]
0x00001f98      0f118424a800.  movups xmmword [rsp + 0xa8], xmm0
0x00001fa0      660f6f0548f3.  movdqa xmm0, xmmword [0x002112f0]
0x00001fa8      0f118424b800.  movups xmmword [rsp + 0xb8], xmm0
0x00001fb0      e84bfeffff     call sym.imp.sigismember
0x00001fb5      85c0           test eax, eax
0x00001fb7      7428           je 0x1fe1
0x00001fb9      488b742420     mov rsi, qword [rsp + 0x20]
0x00001fbe      488d05db1d00.  lea rax, sym.siginfo_handler            ; 0x3da0
0x00001fc5      31d2           xor edx, edx
0x00001fc7      bf0a000000     mov edi, 0xa
0x00001fcc      c78424c80000.  mov dword [rsp + 0xc8], 0
0x00001fd7      4889442440     mov qword [rsp + 0x40], rax
0x00001fdc      e8fffaffff     call sym.imp.sigaction
0x00001fe1      488d3d98f220.  lea rdi, obj.caught_signals             ; 0x211280
0x00001fe8      be02000000     mov esi, 2
0x00001fed      e80efeffff     call sym.imp.sigismember
0x00001ff2      85c0           test eax, eax
0x00001ff4      7428           je 0x201e
0x00001ff6      488b742420     mov rsi, qword [rsp + 0x20]
0x00001ffb      488d058e1d00.  lea rax, sym.interrupt_handler          ; 0x3d90
0x00002002      31d2           xor edx, edx
0x00002004      bf02000000     mov edi, 2
0x00002009      c78424c80000.  mov dword [rsp + 0xc8], 0xc0000000      ; [0xc0000000:4]=-1
0x00002014      4889442440     mov qword [rsp + 0x40], rax
0x00002019      e8c2faffff     call sym.imp.sigaction
0x0000201e      488b7d00       mov rdi, qword [rbp]
0x00002022      488d1d37f120.  lea rbx, obj.trans_table                ; 0x211160
0x00002029      e8724f0000     call sym.set_program_name
0x0000202e      488d356cc700.  lea rsi, [0x0000e7a1]
0x00002035      bf06000000     mov edi, 6
0x0000203a      e821fdffff     call sym.imp.setlocale
0x0000203f      488d3506a800.  lea rsi, str.usr_local_share_locale     ; 0xc84c ; "/usr/local/share/locale"
0x00002046      488d3d29a700.  lea rdi, [0x0000c776]                   ; "coreutils"
0x0000204d      e8fefaffff     call sym.imp.bindtextdomain
0x00002052      488d3d1da700.  lea rdi, [0x0000c776]                   ; "coreutils"
0x00002059      e8d2faffff     call sym.imp.textdomain
0x0000205e      488d3dcb2600.  lea rdi, sym.maybe_close_stdout         ; 0x4730
0x00002065      e876a50000     call sym.atexit
0x0000206a      e881fdffff     call sym.imp.getpagesize
0x0000206f      4898           cdqe
0x00002071      4883ec08       sub rsp, 8
0x00002075      4c8b05acef20.  mov r8, qword [obj.Version]             ; [0x211028:8]=0xe178 ; "x\xe1"
0x0000207c      48890555f320.  mov qword [obj.page_size], rax          ; [0x2113d8:8]=0
0x00002083      488d05daa700.  lea rax, str.Stuart_Kemp                ; 0xc864 ; "Stuart Kemp"
0x0000208a      6a00           push 0
0x0000208c      488d0de3a600.  lea rcx, [0x0000c776]                   ; "coreutils"
0x00002093      488d155aa600.  lea rdx, [0x0000c6f4]                   ; "dd"
0x0000209a      41b901000000   mov r9d, 1
0x000020a0      50             push rax
0x000020a1      488d05c8a700.  lea rax, str.David_MacKenzie            ; 0xc870 ; "David MacKenzie"
0x000020a8      4889ee         mov rsi, rbp
0x000020ab      4489e7         mov edi, r12d
0x000020ae      50             push rax
0x000020af      488d05caa700.  lea rax, str.Paul_Rubin                 ; 0xc880 ; "Paul Rubin"
0x000020b6      50             push rax
0x000020b7      488d05722f00.  lea rax, sym.usage                      ; 0x5030 ; "AUAT\xba\x05"
0x000020be      50             push rax
0x000020bf      31c0           xor eax, eax
0x000020c1      e89a4d0000     call sym.parse_gnu_standard_options_only
0x000020c6      c6054bef2000.  mov byte [obj.close_stdout_required], 0 ; [0x211018:1]=1
0x000020cd      4883c430       add rsp, 0x30
0x000020d1      31c0           xor eax, eax
0x000020d3      0f1f440000     nop dword [rax + rax]
0x000020d8      880403         mov byte [rbx + rax], al
0x000020db      4883c001       add rax, 1
0x000020df      483d00010000   cmp rax, 0x100
0x000020e5      75f1           jne 0x20d8
0x000020e7      8b05e3ef2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110d0:4]=0
0x000020ed      4139c4         cmp r12d, eax
0x000020f0      0f8e3c090000   jle 0x2a32
0x000020f6      4863d0         movsxd rdx, eax
0x000020f9      f7d0           not eax
0x000020fb      48c744240800.  mov qword [rsp + 8], 0
0x00002104      4401e0         add eax, r12d
0x00002107      4c8d74d500     lea r14, [rbp + rdx*8]
0x0000210c      4531e4         xor r12d, r12d
0x0000210f      4801d0         add rax, rdx
0x00002112      48c7442410ff.  mov qword [rsp + 0x10], 0xffffffffffffffff
0x0000211b      4531ff         xor r15d, r15d
0x0000211e      488d6cc508     lea rbp, [rbp + rax*8 + 8]
0x00002123      488d442438     lea rax, [rsp + 0x38]
0x00002128      4889442418     mov qword [rsp + 0x18], rax
0x0000212d      0f1f00         nop dword [rax]
0x00002130      4d8b2e         mov r13, qword [r14]
0x00002133      be3d000000     mov esi, 0x3d                           ; '='
0x00002138      4c89ef         mov rdi, r13
0x0000213b      e890faffff     call sym.imp.strchr
0x00002140      4885c0         test rax, rax
0x00002143      0f84d8170000   je 0x3921
0x00002149      4c8d4001       lea r8, [rax + 1]
0x0000214d      488d0da1a600.  lea rcx, [0x0000c7f5]                   ; "if"
0x00002154      4c89ea         mov rdx, r13
0x00002157      be69000000     mov esi, 0x69                           ; 'i'
0x0000215c      0f1f4000       nop dword [rax]
0x00002160      4883c201       add rdx, 1
0x00002164      4883c101       add rcx, 1
0x00002168      403872ff       cmp byte [rdx - 1], sil
0x0000216c      0f853e070000   jne 0x28b0
0x00002172      0fb631         movzx esi, byte [rcx]
0x00002175      4084f6         test sil, sil
0x00002178      75e6           jne 0x2160
0x0000217a      0fb602         movzx eax, byte [rdx]
0x0000217d      3c3d           cmp al, 0x3d
0x0000217f      7408           je 0x2189
0x00002181      84c0           test al, al
0x00002183      0f8527070000   jne 0x28b0
0x00002189      4c890558f220.  mov qword [obj.input_file], r8          ; [0x2113e8:8]=0
0x00002190      4983c608       add r14, 8
0x00002194      4c39f5         cmp rbp, r14
0x00002197      7597           jne 0x2130
0x00002199      4d85ff         test r15, r15
0x0000219c      0f84a5080000   je 0x2a47
0x000021a2      4c893d1ff220.  mov qword [obj.output_blocksize], r15   ; [0x2113c8:8]=0
0x000021a9      4c893d20f220.  mov qword [obj.input_blocksize], r15    ; [0x2113d0:8]=0
0x000021b0      48833d08f220.  cmp qword [obj.conversion_blocksize], 0 ; [0x2113c0:8]=0
0x000021b8      7507           jne 0x21c1
0x000021ba      8325cbf12000.  and dword [obj.conversions_mask], 0xffffffe7 ; [0x21138c:4]=0
0x000021c1      8b05c1f12000   mov eax, dword [obj.input_flags]        ; [0x211388:4]=0
0x000021c7      a900101000     test eax, 0x101000
0x000021cc      740b           je 0x21d9
0x000021ce      0d00101000     or eax, 0x101000
0x000021d3      8905aff12000   mov dword [obj.input_flags], eax        ; [0x211388:4]=0
0x000021d9      8b35a5f12000   mov esi, dword [obj.output_flags]       ; [0x211384:4]=0
0x000021df      40f6c601       test sil, 1
0x000021e3      0f859a190000   jne 0x3b83
0x000021e9      8b0d99f12000   mov ecx, dword [obj.input_flags]        ; [0x211388:4]=0
0x000021ef      f6c110         test cl, 0x10
0x000021f2      0f85671a0000   jne 0x3c5f
0x000021f8      40f6c60c       test sil, 0xc
0x000021fc      0f852e1a0000   jne 0x3c30
0x00002202      f6c108         test cl, 8
0x00002205      488b442408     mov rax, qword [rsp + 8]
0x0000220a      0f840d080000   je 0x2a1d
0x00002210      4885c0         test rax, rax
0x00002213      0f856b080000   jne 0x2a84
0x00002219      f6c104         test cl, 4
0x0000221c      488b442410     mov rax, qword [rsp + 0x10]
0x00002221      0f84e0070000   je 0x2a07
0x00002227      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000222b      7417           je 0x2244
0x0000222d      31d2           xor edx, edx
0x0000222f      48f7359af120.  div qword [obj.input_blocksize]
0x00002236      488905e3ed20.  mov qword [obj.max_records], rax        ; [0x211020:8]=-1
0x0000223d      4889154cf120.  mov qword [obj.max_bytes], rdx          ; [0x211390:8]=0
0x00002244      40f6c610       test sil, 0x10
0x00002248      0f84a4070000   je 0x29f2
0x0000224e      4d85e4         test r12, r12
0x00002251      0f8580080000   jne 0x2ad7
0x00002257      8b2d2ff12000   mov ebp, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x0000225d      89c8           mov eax, ecx
0x0000225f      83e001         and eax, 1
0x00002262      f7c500080000   test ebp, 0x800
0x00002268      0f85960d0000   jne 0x3004
0x0000226e      85c0           test eax, eax
0x00002270      0f842a080000   je 0x2aa0
0x00002276      488d05132900.  lea rax, sym.iread_fullblock            ; 0x4b90 ; "H\x85\xd2tYAUATA\x89\xfdUSH\x89\xf5H\x89\xd3E1\xe4H\x83\xec\b\xeb\x10\x0f\x1f"
0x0000227d      c605a4f02000.  mov byte [obj.warn_partial_read], 0     ; [0x211328:1]=0
0x00002284      488905d5ef20.  mov qword [obj.iread_fnc], rax          ; [0x211260:8]=0
0x0000228b      89c8           mov eax, ecx
0x0000228d      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x00002290      8905f2f02000   mov dword [obj.input_flags], eax        ; [0x211388:4]=0
0x00002296      89e8           mov eax, ebp
0x00002298      83e007         and eax, 7
0x0000229b      8d50ff         lea edx, [rax - 1]
0x0000229e      85c2           test edx, eax
0x000022a0      0f8566190000   jne 0x3c0c
0x000022a6      89e8           mov eax, ebp
0x000022a8      83e018         and eax, 0x18
0x000022ab      8d50ff         lea edx, [rax - 1]
0x000022ae      85c2           test edx, eax
0x000022b0      0f8581170000   jne 0x3a37
0x000022b6      89e8           mov eax, ebp
0x000022b8      83e060         and eax, 0x60
0x000022bb      8d50ff         lea edx, [rax - 1]
0x000022be      85c2           test edx, eax
0x000022c0      0f8595170000   jne 0x3a5b
0x000022c6      89e8           mov eax, ebp
0x000022c8      2500300000     and eax, 0x3000
0x000022cd      8d50ff         lea edx, [rax - 1]
0x000022d0      85c2           test edx, eax
0x000022d2      0f85b9170000   jne 0x3a91
0x000022d8      89c8           mov eax, ecx
0x000022da      2502400000     and eax, 0x4002
0x000022df      8d50ff         lea edx, [rax - 1]
0x000022e2      85c2           test edx, eax
0x000022e4      0f85cb170000   jne 0x3ab5
0x000022ea      89f0           mov eax, esi
0x000022ec      2502400000     and eax, 0x4002
0x000022f1      8d50ff         lea edx, [rax - 1]
0x000022f4      21c2           and edx, eax
0x000022f6      89542428       mov dword [rsp + 0x28], edx
0x000022fa      0f85b5170000   jne 0x3ab5
0x00002300      f6c102         test cl, 2
0x00002303      7436           je 0x233b
0x00002305      31c0           xor eax, eax
0x00002307      48833d11ed20.  cmp qword [obj.max_records], 0          ; [0x211020:8]=-1
0x0000230f      c60555ef2000.  mov byte [obj.i_nocache], 1             ; [0x21126b:1]=0
0x00002316      750d           jne 0x2325
0x00002318      31c0           xor eax, eax
0x0000231a      48833d6ef020.  cmp qword [obj.max_bytes], 0            ; [0x211390:8]=0
0x00002322      0f94c0         sete al
0x00002325      88053eef2000   mov byte [obj.i_nocache_eof], al        ; [0x211269:1]=0
0x0000232b      802537ef2000.  and byte [obj.i_nocache_eof], 1         ; [0x211269:1]=0
0x00002332      83e1fc         and ecx, 0xfffffffc                     ; 4294967292
0x00002335      890d4df02000   mov dword [obj.input_flags], ecx        ; [0x211388:4]=0
0x0000233b      40f6c602       test sil, 2
0x0000233f      7436           je 0x2377
0x00002341      31c0           xor eax, eax
0x00002343      48833dd5ec20.  cmp qword [obj.max_records], 0          ; [0x211020:8]=-1
0x0000234b      c60518ef2000.  mov byte [obj.o_nocache], 1             ; [0x21126a:1]=0
0x00002352      750d           jne 0x2361
0x00002354      31c0           xor eax, eax
0x00002356      48833d32f020.  cmp qword [obj.max_bytes], 0            ; [0x211390:8]=0
0x0000235e      0f94c0         sete al
0x00002361      880501ef2000   mov byte [obj.o_nocache_eof], al        ; [0x211268:1]=0
0x00002367      8025faee2000.  and byte [obj.o_nocache_eof], 1         ; [0x211268:1]=0
0x0000236e      83e6fd         and esi, 0xfffffffd                     ; 4294967293
0x00002371      89350df02000   mov dword [obj.output_flags], esi       ; [0x211384:4]=0
0x00002377      40f6c501       test bpl, 1
0x0000237b      7435           je 0x23b2
0x0000237d      488d05dced20.  lea rax, obj.trans_table                ; 0x211160
0x00002384      488d0d55b800.  lea rcx, obj.ebcdic_to_ascii            ; 0xdbe0
0x0000238b      488db0000100.  lea rsi, [rax + 0x100]
0x00002392      660f1f440000   nop word [rax + rax]
0x00002398      0fb610         movzx edx, byte [rax]
0x0000239b      4883c001       add rax, 1
0x0000239f      0fb61411       movzx edx, byte [rcx + rdx]
0x000023a3      8850ff         mov byte [rax - 1], dl
0x000023a6      4839c6         cmp rsi, rax
0x000023a9      75ed           jne 0x2398
0x000023ab      c605ceef2000.  mov byte [obj.translation_needed], 1    ; [0x211380:1]=0
0x000023b2      40f6c540       test bpl, 0x40                          ; segment.PHDR
0x000023b6      0f84fc0b0000   je 0x2fb8
0x000023bc      e84ff6ffff     call sym.imp.__ctype_toupper_loc
0x000023c1      488b30         mov rsi, qword [rax]
0x000023c4      488d0595ed20.  lea rax, obj.trans_table                ; 0x211160
0x000023cb      488d88000100.  lea rcx, [rax + 0x100]
0x000023d2      660f1f440000   nop word [rax + rax]
0x000023d8      0fb610         movzx edx, byte [rax]
0x000023db      4883c001       add rax, 1
0x000023df      8b1496         mov edx, dword [rsi + rdx*4]
0x000023e2      8850ff         mov byte [rax - 1], dl
0x000023e5      4839c1         cmp rcx, rax
0x000023e8      75ee           jne 0x23d8
0x000023ea      c6058fef2000.  mov byte [obj.translation_needed], 1    ; [0x211380:1]=0
0x000023f1      40f6c502       test bpl, 2
0x000023f5      0f84850b0000   je 0x2f80
0x000023fb      488d055eed20.  lea rax, obj.trans_table                ; 0x211160
0x00002402      488d0dd7b900.  lea rcx, obj.ascii_to_ebcdic            ; 0xdde0
0x00002409      488db0000100.  lea rsi, [rax + 0x100]
0x00002410      0fb610         movzx edx, byte [rax]
0x00002413      4883c001       add rax, 1
0x00002417      0fb61411       movzx edx, byte [rcx + rdx]
0x0000241b      8850ff         mov byte [rax - 1], dl
0x0000241e      4839c6         cmp rsi, rax
0x00002421      75ed           jne 0x2410
0x00002423      c60556ef2000.  mov byte [obj.translation_needed], 1    ; [0x211380:1]=0
0x0000242a      c605e9eb2000.  mov byte [obj.newline_character], 0x25  ; '%'
                                                                       ; [0x21101a:1]=10 ; u"\n\x03"
0x00002431      c605e1eb2000.  mov byte [obj.space_character], 0x40    ; [0x211019:1]=32 ; " \n"
0x00002438      488b2da9ef20.  mov rbp, qword [obj.input_file]         ; [0x2113e8:8]=0
0x0000243f      448b2542ef20.  mov r12d, dword [obj.input_flags]       ; [0x211388:4]=0
0x00002446      e835f6ffff     call sym.imp.__errno_location
0x0000244b      4889442410     mov qword [rsp + 0x10], rax
0x00002450      4885ed         test rbp, rbp
0x00002453      0f84dc0d0000   je 0x3235
0x00002459      31c9           xor ecx, ecx
0x0000245b      31ff           xor edi, edi
0x0000245d      4489e2         mov edx, r12d
0x00002460      4889ee         mov rsi, rbp
0x00002463      e8b8250000     call sym.ifd_reopen
0x00002468      85c0           test eax, eax
0x0000246a      0f885c170000   js 0x3bcc
0x00002470      31f6           xor esi, esi
0x00002472      ba01000000     mov edx, 1
0x00002477      31ff           xor edi, edi
0x00002479      e892f7ffff     call sym.imp.lseek
0x0000247e      4889c2         mov rdx, rax
0x00002481      488b3558ef20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00002488      448b25f5ee20.  mov r12d, dword [obj.output_flags]      ; [0x211384:4]=0
0x0000248f      48f7d2         not rdx
0x00002492      48c1ea3f       shr rdx, 0x3f
0x00002496      4885c0         test rax, rax
0x00002499      88159dee2000   mov byte [obj.input_seekable], dl       ; [0x21133c:1]=0
0x0000249f      ba00000000     mov edx, 0
0x000024a4      480f48c2       cmovs rax, rdx
0x000024a8      4885f6         test rsi, rsi
0x000024ab      4889057eee20.  mov qword [obj.input_offset], rax       ; [0x211330:8]=0
0x000024b2      488b442410     mov rax, qword [rsp + 0x10]
0x000024b7      8b00           mov eax, dword [rax]
0x000024b9      890579ee2000   mov dword [obj.input_seek_errno], eax   ; [0x211338:4]=0
0x000024bf      0f84cb100000   je 0x3590
0x000024c5      8b05c1ee2000   mov eax, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x000024cb      31d2           xor edx, edx
0x000024cd      89c5           mov ebp, eax
0x000024cf      f6c410         test ah, 0x10
0x000024d2      0f94c2         sete dl
0x000024d5      c1fd06         sar ebp, 6
0x000024d8      81e580000000   and ebp, 0x80
0x000024de      c1e206         shl edx, 6
0x000024e1      4409e5         or ebp, r12d
0x000024e4      09d5           or ebp, edx
0x000024e6      48833dbaee20.  cmp qword [obj.seek_records], 0         ; [0x2113a8:8]=0
0x000024ee      0f85c80b0000   jne 0x30bc
0x000024f4      2500020000     and eax, 0x200
0x000024f9      83f801         cmp eax, 1
0x000024fc      19c0           sbb eax, eax
0x000024fe      2500020000     and eax, 0x200
0x00002503      09c5           or ebp, eax
0x00002505      89ea           mov edx, ebp
0x00002507      b9b6010000     mov ecx, 0x1b6
0x0000250c      bf01000000     mov edi, 1
0x00002511      83ca01         or edx, 1
0x00002514      e807250000     call sym.ifd_reopen
0x00002519      85c0           test eax, eax
0x0000251b      0f88b8150000   js 0x3ad9
0x00002521      488b2d80ee20.  mov rbp, qword [obj.seek_records]       ; [0x2113a8:8]=0
0x00002528      4885ed         test rbp, rbp
0x0000252b      7446           je 0x2573
0x0000252d      f60559ee2000.  test byte [0x0021138d], 2               ; [0x21138d:1]=0
0x00002534      753d           jne 0x2573
0x00002536      4c8b358bee20.  mov r14, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x0000253d      31d2           xor edx, edx
0x0000253f      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00002549      4989ec         mov r12, rbp
0x0000254c      49f7f6         div r14
0x0000254f      4d0fafe6       imul r12, r14
0x00002553      4c032546ee20.  add r12, qword [obj.seek_bytes]         ; [0x2113a0:8]=0
0x0000255a      4839c5         cmp rbp, rax
0x0000255d      0f87b6150000   ja 0x3b19
0x00002563      4c89e7         mov rdi, r12
0x00002566      e885280000     call sym.iftruncate.constprop.6
0x0000256b      85c0           test eax, eax
0x0000256d      0f855a0f0000   jne 0x34cd
0x00002573      e8e8390000     call sym.gethrxtime
0x00002578      4c8b3539ee20.  mov r14, qword [obj.skip_records]       ; [0x2113b8:8]=0
0x0000257f      488905caed20.  mov qword [obj.start_time], rax         ; [0x211350:8]=0
0x00002586      480500ca9a3b   add rax, 0x3b9aca00
0x0000258c      488905b5ed20.  mov qword [obj.next_time], rax          ; [0x211348:8]=0
0x00002593      4d85f6         test r14, r14
0x00002596      750a           jne 0x25a2
0x00002598      48833d10ee20.  cmp qword [obj.skip_bytes], 0           ; [0x2113b0:8]=0
0x000025a0      745c           je 0x25fe
0x000025a2      4c8b3d27ee20.  mov r15, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x000025a9      488b3538ee20.  mov rsi, qword [obj.input_file]         ; [0x2113e8:8]=0
0x000025b0      4c8d05f9ed20.  lea r8, obj.skip_bytes                  ; 0x2113b0
0x000025b7      31ff           xor edi, edi
0x000025b9      4c89f2         mov rdx, r14
0x000025bc      488b2d6ded20.  mov rbp, qword [obj.input_offset]       ; [0x211330:8]=0
0x000025c3      4c8b25e6ed20.  mov r12, qword [obj.skip_bytes]         ; [0x2113b0:8]=0
0x000025ca      4c89f9         mov rcx, r15
0x000025cd      e85e310000     call sym.skip
0x000025d2      4885c0         test rax, rax
0x000025d5      0f852e050000   jne 0x2b09
0x000025db      4c89f0         mov rax, r14
0x000025de      4c01e5         add rbp, r12
0x000025e1      490fafc7       imul rax, r15
0x000025e5      4801e8         add rax, rbp
0x000025e8      483b0541ed20.  cmp rax, qword [obj.input_offset]       ; [0x211330:8]=0
0x000025ef      740d           je 0x25fe
0x000025f1      803d31ed2000.  cmp byte [obj.input_offset_overflow], 1 ; [0x211329:1]=0
0x000025f8      0f850b050000   jne 0x2b09
0x000025fe      488b15a3ed20.  mov rdx, qword [obj.seek_records]       ; [0x2113a8:8]=0
0x00002605      488b0594ed20.  mov rax, qword [obj.seek_bytes]         ; [0x2113a0:8]=0
0x0000260c      4885d2         test rdx, rdx
0x0000260f      7509           jne 0x261a
0x00002611      4885c0         test rax, rax
0x00002614      0f8490000000   je 0x26aa
0x0000261a      488b0da7ed20.  mov rcx, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00002621      488b35b8ed20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00002628      4c8d442438     lea r8, [rsp + 0x38]
0x0000262d      bf01000000     mov edi, 1
0x00002632      4889442438     mov qword [rsp + 0x38], rax
0x00002637      e8f4300000     call sym.skip
0x0000263c      4885c0         test rax, rax
0x0000263f      4989c4         mov r12, rax
0x00002642      0f849c0a0000   je 0x30e4
0x00002648      488b1579ed20.  mov rdx, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x0000264f      488b3dbaec20.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00002656      31f6           xor esi, esi
0x00002658      e8e3f5ffff     call sym.imp.memset
0x0000265d      0f1f00         nop dword [rax]
0x00002660      488b2d61ed20.  mov rbp, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00002667      488b3da2ec20.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x0000266e      4889ee         mov rsi, rbp
0x00002671      e8ba270000     call sym.iwrite.constprop.7
0x00002676      4839c5         cmp rbp, rax
0x00002679      0f85db120000   jne 0x395a
0x0000267f      4983ec01       sub r12, 1
0x00002683      75db           jne 0x2660
0x00002685      48837c243800   cmp qword [rsp + 0x38], 0
0x0000268b      741d           je 0x26aa
0x0000268d      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00002692      488b3d77ec20.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00002699      4889ee         mov rsi, rbp
0x0000269c      e88f270000     call sym.iwrite.constprop.7
0x000026a1      4839c5         cmp rbp, rax
0x000026a4      0f85b0120000   jne 0x395a
0x000026aa      48833d6ee920.  cmp qword [obj.max_records], 0          ; [0x211020:8]=-1
0x000026b2      750e           jne 0x26c2
0x000026b4      48833dd4ec20.  cmp qword [obj.max_bytes], 0            ; [0x211390:8]=0
0x000026bc      0f84410c0000   je 0x3303
0x000026c2      48833d4eec20.  cmp qword [obj.ibuf], 0                 ; [0x211318:8]=0
0x000026ca      0f84740f0000   je 0x3644
0x000026d0      e8cb260000     call sym.alloc_obuf
0x000026d5      c74424180000.  mov dword [rsp + 0x18], 0
0x000026dd      48c744240800.  mov qword [rsp + 8], 0
0x000026e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000026f0      833d25e92000.  cmp dword [obj.status_level], 4         ; [0x21101c:4]=3
0x000026f7      0f8480010000   je 0x287d
0x000026fd      4c8b2d8cec20.  mov r13, qword [obj.max_bytes]          ; [0x211390:8]=0
0x00002704      488b2d55ec20.  mov rbp, qword [obj.r_full]             ; [0x211360:8]=0
0x0000270b      31c0           xor eax, eax
0x0000270d      48032d54ec20.  add rbp, qword [obj.r_partial]          ; [0x211368:8]=0
0x00002714      4c8b2505e920.  mov r12, qword [obj.max_records]        ; [0x211020:8]=-1
0x0000271b      8b356bec2000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x00002721      4d85ed         test r13, r13
0x00002724      0f95c0         setne al
0x00002727      4c01e0         add rax, r12
0x0000272a      4839c5         cmp rbp, rax
0x0000272d      0f830f0a0000   jae 0x3142
0x00002733      89f0           mov eax, esi
0x00002735      488b0ddceb20.  mov rcx, qword [obj.ibuf]               ; [0x211318:8]=0
0x0000273c      2500050000     and eax, 0x500
0x00002741      3d00050000     cmp eax, 0x500
0x00002746      751d           jne 0x2765
0x00002748      488b1581ec20.  mov rdx, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x0000274f      83e618         and esi, 0x18
0x00002752      b820000000     mov eax, 0x20                           ; "@"
0x00002757      4889cf         mov rdi, rcx
0x0000275a      0f45f0         cmovne esi, eax
0x0000275d      e8def4ffff     call sym.imp.memset
0x00002762      4889c1         mov rcx, rax
0x00002765      4c39e5         cmp rbp, r12
0x00002768      488b05f1ea20.  mov rax, qword [obj.iread_fnc]          ; [0x211260:8]=0
0x0000276f      0f829b040000   jb 0x2c10
0x00002775      31ff           xor edi, edi
0x00002777      4c89ea         mov rdx, r13
0x0000277a      4889ce         mov rsi, rcx
0x0000277d      ffd0           call rax
0x0000277f      4883f800       cmp rax, 0
0x00002783      0f8e9f040000   jle 0x2c28
0x00002789      31d2           xor edx, edx
0x0000278b      4889c1         mov rcx, rax
0x0000278e      48030d9beb20.  add rcx, qword [obj.input_offset]       ; [0x211330:8]=0
0x00002795      4889c5         mov rbp, rax
0x00002798      0f92c2         setb dl
0x0000279b      48890d8eeb20.  mov qword [obj.input_offset], rcx       ; [0x211330:8]=0
0x000027a2      4885d2         test rdx, rdx
0x000027a5      7407           je 0x27ae
0x000027a7      c6057beb2000.  mov byte [obj.input_offset_overflow], 1 ; [0x211329:1]=0
0x000027ae      803db6ea2000.  cmp byte [obj.i_nocache], 0             ; [0x21126b:1]=0
0x000027b5      0f857a060000   jne 0x2e35
0x000027bb      4c8b250eec20.  mov r12, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x000027c2      4939ec         cmp r12, rbp
0x000027c5      0f8695050000   jbe 0x2d60
0x000027cb      8b35bbeb2000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x000027d1      4883058feb20.  add qword [obj.r_partial], 1            ; [0x211368:8]=0
0x000027d9      48896c2408     mov qword [rsp + 8], rbp
0x000027de      f7c600040000   test esi, 0x400
0x000027e4      743a           je 0x2820
0x000027e6      f7c600010000   test esi, 0x100
0x000027ec      0f8505080000   jne 0x2ff7
0x000027f2      4c89e2         mov rdx, r12
0x000027f5      4829ea         sub rdx, rbp
0x000027f8      83e618         and esi, 0x18
0x000027fb      7405           je 0x2802
0x000027fd      be20000000     mov esi, 0x20                           ; "@"
0x00002802      488b3d0feb20.  mov rdi, qword [obj.ibuf]               ; [0x211318:8]=0
0x00002809      4801ef         add rdi, rbp
0x0000280c      e82ff4ffff     call sym.imp.memset
0x00002811      48896c2408     mov qword [rsp + 8], rbp
0x00002816      4c89e5         mov rbp, r12
0x00002819      0f1f80000000.  nop dword [rax]
0x00002820      4c8b3df1ea20.  mov r15, qword [obj.ibuf]               ; [0x211318:8]=0
0x00002827      488b3de2ea20.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x0000282e      4939ff         cmp r15, rdi
0x00002831      0f8470060000   je 0x2ea7
0x00002837      803d42eb2000.  cmp byte [obj.translation_needed], 0    ; [0x211380:1]=0
0x0000283e      0f8532050000   jne 0x2d76
0x00002844      8b0d42eb2000   mov ecx, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x0000284a      f6c180         test cl, 0x80
0x0000284d      0f855f050000   jne 0x2db2
0x00002853      f6c108         test cl, 8
0x00002856      0f85c9050000   jne 0x2e25
0x0000285c      83e110         and ecx, 0x10
0x0000285f      0f8468030000   je 0x2bcd
0x00002865      4889ee         mov rsi, rbp
0x00002868      4c89ff         mov rdi, r15
0x0000286b      e8d0330000     call sym.copy_with_unblock
0x00002870      833da5e72000.  cmp dword [obj.status_level], 4         ; [0x21101c:4]=3
0x00002877      0f8580feffff   jne 0x26fd
0x0000287d      e8de360000     call sym.gethrxtime
0x00002882      483b05bfea20.  cmp rax, qword [obj.next_time]          ; [0x211348:8]=0
0x00002889      0f8c6efeffff   jl 0x26fd
0x0000288f      4889c7         mov rdi, rax
0x00002892      e819150000     call sym.print_xfer_stats
0x00002897      488105a6ea20.  add qword [obj.next_time], 0x3b9aca00   ; [0x211348:8]=0
0x000028a2      e956feffff     jmp 0x26fd
0x000028a7      660f1f840000.  nop word [rax + rax]
0x000028b0      488d05419f00.  lea rax, [0x0000c7f8]                   ; "of"
0x000028b7      4c89ea         mov rdx, r13
0x000028ba      b96f000000     mov ecx, 0x6f                           ; 'o'
0x000028bf      4883c201       add rdx, 1
0x000028c3      4883c001       add rax, 1
0x000028c7      384aff         cmp byte [rdx - 1], cl
0x000028ca      7524           jne 0x28f0
0x000028cc      0fb608         movzx ecx, byte [rax]
0x000028cf      84c9           test cl, cl
0x000028d1      75ec           jne 0x28bf
0x000028d3      0fb602         movzx eax, byte [rdx]
0x000028d6      3c3d           cmp al, 0x3d
0x000028d8      7404           je 0x28de
0x000028da      84c0           test al, al
0x000028dc      7512           jne 0x28f0
0x000028de      4c8905fbea20.  mov qword [obj.output_file], r8         ; [0x2113e0:8]=0
0x000028e5      e9a6f8ffff     jmp 0x2190
0x000028ea      660f1f440000   nop word [rax + rax]
0x000028f0      488d15049f00.  lea rdx, str.conv                       ; 0xc7fb ; "conv"
0x000028f7      4c89e8         mov rax, r13
0x000028fa      b963000000     mov ecx, 0x63                           ; 'c'
0x000028ff      4883c001       add rax, 1
0x00002903      4883c201       add rdx, 1
0x00002907      3848ff         cmp byte [rax - 1], cl
0x0000290a      7535           jne 0x2941
0x0000290c      0fb60a         movzx ecx, byte [rdx]
0x0000290f      84c9           test cl, cl
0x00002911      75ec           jne 0x28ff
0x00002913      0fb600         movzx eax, byte [rax]
0x00002916      84c0           test al, al
0x00002918      7404           je 0x291e
0x0000291a      3c3d           cmp al, 0x3d
0x0000291c      7523           jne 0x2941
0x0000291e      488d0d7e9f00.  lea rcx, str.invalid_conversion         ; 0xc8a3 ; "invalid conversion"
0x00002925      488d3534b700.  lea rsi, obj.conversions                ; 0xe060 ; "ascii"
0x0000292c      31d2           xor edx, edx
0x0000292e      4c89c7         mov rdi, r8
0x00002931      e80a2d0000     call sym.parse_symbols
0x00002936      090550ea2000   or dword [obj.conversions_mask], eax    ; [0x21138c:4]=0
0x0000293c      e94ff8ffff     jmp 0x2190
0x00002941      488d15b89e00.  lea rdx, str.iflag                      ; 0xc800 ; "iflag"
0x00002948      4c89e8         mov rax, r13
0x0000294b      b969000000     mov ecx, 0x69                           ; 'i'
0x00002950      4883c001       add rax, 1
0x00002954      4883c201       add rdx, 1
0x00002958      3848ff         cmp byte [rax - 1], cl
0x0000295b      7535           jne 0x2992
0x0000295d      0fb60a         movzx ecx, byte [rdx]
0x00002960      84c9           test cl, cl
0x00002962      75ec           jne 0x2950
0x00002964      0fb600         movzx eax, byte [rax]
0x00002967      3c3d           cmp al, 0x3d
0x00002969      7404           je 0x296f
0x0000296b      84c0           test al, al
0x0000296d      7523           jne 0x2992
0x0000296f      488d0d409f00.  lea rcx, str.invalid_input_flag         ; 0xc8b6 ; "invalid input flag"
0x00002976      488d35a3b500.  lea rsi, obj.flags                      ; 0xdf20 ; "append"
0x0000297d      31d2           xor edx, edx
0x0000297f      4c89c7         mov rdi, r8
0x00002982      e8b92c0000     call sym.parse_symbols
0x00002987      0905fbe92000   or dword [obj.input_flags], eax         ; [0x211388:4]=0
0x0000298d      e9fef7ffff     jmp 0x2190
0x00002992      488d156d9e00.  lea rdx, str.oflag                      ; 0xc806 ; "oflag"
0x00002999      4c89e8         mov rax, r13
0x0000299c      b96f000000     mov ecx, 0x6f                           ; 'o'
0x000029a1      0f1f80000000.  nop dword [rax]
0x000029a8      4883c001       add rax, 1
0x000029ac      4883c201       add rdx, 1
0x000029b0      3848ff         cmp byte [rax - 1], cl
0x000029b3      0f859c010000   jne 0x2b55
0x000029b9      0fb60a         movzx ecx, byte [rdx]
0x000029bc      84c9           test cl, cl
0x000029be      75e8           jne 0x29a8
0x000029c0      0fb600         movzx eax, byte [rax]
0x000029c3      3c3d           cmp al, 0x3d
0x000029c5      7408           je 0x29cf
0x000029c7      84c0           test al, al
0x000029c9      0f8586010000   jne 0x2b55
0x000029cf      488d0df39e00.  lea rcx, str.invalid_output_flag        ; 0xc8c9 ; "invalid output flag"
0x000029d6      488d3543b500.  lea rsi, obj.flags                      ; 0xdf20 ; "append"
0x000029dd      31d2           xor edx, edx
0x000029df      4c89c7         mov rdi, r8
0x000029e2      e8592c0000     call sym.parse_symbols
0x000029e7      090597e92000   or dword [obj.output_flags], eax        ; [0x211384:4]=0
0x000029ed      e99ef7ffff     jmp 0x2190
0x000029f2      4d85e4         test r12, r12
0x000029f5      0f845cf8ffff   je 0x2257
0x000029fb      4c8925a6e920.  mov qword [obj.seek_records], r12       ; [0x2113a8:8]=0
0x00002a02      e950f8ffff     jmp 0x2257
0x00002a07      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002a0b      0f8433f8ffff   je 0x2244
0x00002a11      48890508e620.  mov qword [obj.max_records], rax        ; [0x211020:8]=-1
0x00002a18      e927f8ffff     jmp 0x2244
0x00002a1d      4885c0         test rax, rax
0x00002a20      0f84f3f7ffff   je 0x2219
0x00002a26      4889058be920.  mov qword [obj.skip_records], rax       ; [0x2113b8:8]=0
0x00002a2d      e9e7f7ffff     jmp 0x2219
0x00002a32      48c7442410ff.  mov qword [rsp + 0x10], 0xffffffffffffffff
0x00002a3b      48c744240800.  mov qword [rsp + 8], 0
0x00002a44      4531e4         xor r12d, r12d
0x00002a47      810d3be92000.  or dword [obj.conversions_mask], 0x800  ; [0x21138c:4]=0
0x00002a51      48833d77e920.  cmp qword [obj.input_blocksize], 0      ; [0x2113d0:8]=0
0x00002a59      750b           jne 0x2a66
0x00002a5b      48c7056ae920.  mov qword [obj.input_blocksize], 0x200  ; [0x2113d0:8]=0
0x00002a66      48833d5ae920.  cmp qword [obj.output_blocksize], 0     ; [0x2113c8:8]=0
0x00002a6e      0f853cf7ffff   jne 0x21b0
0x00002a74      48c70549e920.  mov qword [obj.output_blocksize], 0x200 ; [0x2113c8:8]=0
0x00002a7f      e92cf7ffff     jmp 0x21b0
0x00002a84      31d2           xor edx, edx
0x00002a86      48f73543e920.  div qword [obj.input_blocksize]
0x00002a8d      48890524e920.  mov qword [obj.skip_records], rax       ; [0x2113b8:8]=0
0x00002a94      48891515e920.  mov qword [obj.skip_bytes], rdx         ; [0x2113b0:8]=0
0x00002a9b      e979f7ffff     jmp 0x2219
0x00002aa0      48833d10e920.  cmp qword [obj.skip_records], 0         ; [0x2113b8:8]=0
0x00002aa8      754c           jne 0x2af6
0x00002aaa      488b056fe520.  mov rax, qword [obj.max_records]        ; [0x211020:8]=-1
0x00002ab1      4883e801       sub rax, 1
0x00002ab5      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00002ab9      763b           jbe 0x2af6
0x00002abb      89f0           mov eax, esi
0x00002abd      09c8           or eax, ecx
0x00002abf      f6c440         test ah, 0x40                           ; segment.PHDR
0x00002ac2      7532           jne 0x2af6
0x00002ac4      c6055de82000.  mov byte [obj.warn_partial_read], 0     ; [0x211328:1]=0
0x00002acb      488d059e1f00.  lea rax, sym.iread                      ; 0x4a70 ; "AUATA\x89\xfdUSI\x89\xf4H\x89\xd5H\x83\xec\b\xeb\x19\x0f\x1f"
0x00002ad2      e9adf7ffff     jmp 0x2284
0x00002ad7      4c89e0         mov rax, r12
0x00002ada      31d2           xor edx, edx
0x00002adc      48f735e5e820.  div qword [obj.output_blocksize]
0x00002ae3      488905bee820.  mov qword [obj.seek_records], rax       ; [0x2113a8:8]=0
0x00002aea      488915afe820.  mov qword [obj.seek_bytes], rdx         ; [0x2113a0:8]=0
0x00002af1      e961f7ffff     jmp 0x2257
0x00002af6      c6052be82000.  mov byte [obj.warn_partial_read], 1     ; [0x211328:1]=0
0x00002afd      488d056c1f00.  lea rax, sym.iread                      ; 0x4a70 ; "AUATA\x89\xfdUSI\x89\xf4H\x89\xd5H\x83\xec\b\xeb\x19\x0f\x1f"
0x00002b04      e97bf7ffff     jmp 0x2284
0x00002b09      833d0ce52000.  cmp dword [obj.status_level], 1         ; [0x21101c:4]=3
0x00002b10      0f84e8faffff   je 0x25fe
0x00002b16      488b15cbe820.  mov rdx, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00002b1d      31ff           xor edi, edi
0x00002b1f      be03000000     mov esi, 3
0x00002b24      e8b75f0000     call sym.quotearg_n_style_colon
0x00002b29      488d35a0af00.  lea rsi, str.s:_cannot_skip_to_specified_offset ; 0xdad0 ; "%s: cannot skip to specified offset"
0x00002b30      4889c5         mov rbp, rax
0x00002b33      31ff           xor edi, edi
0x00002b35      ba05000000     mov edx, 5
0x00002b3a      e821f0ffff     call sym.imp.dcgettext
0x00002b3f      4889e9         mov rcx, rbp
0x00002b42      4889c2         mov rdx, rax
0x00002b45      31f6           xor esi, esi
0x00002b47      31ff           xor edi, edi
0x00002b49      31c0           xor eax, eax
0x00002b4b      e8f0150000     call sym.nl_error
0x00002b50      e9a9faffff     jmp 0x25fe
0x00002b55      488d15b09c00.  lea rdx, str.status                     ; 0xc80c ; "status"
0x00002b5c      4c89e8         mov rax, r13
0x00002b5f      b973000000     mov ecx, 0x73                           ; 's'
0x00002b64      0f1f4000       nop dword [rax]
0x00002b68      4883c001       add rax, 1
0x00002b6c      4883c201       add rdx, 1
0x00002b70      3848ff         cmp byte [rax - 1], cl
0x00002b73      0f8537080000   jne 0x33b0
0x00002b79      0fb60a         movzx ecx, byte [rdx]
0x00002b7c      84c9           test cl, cl
0x00002b7e      75e8           jne 0x2b68
0x00002b80      0fb600         movzx eax, byte [rax]
0x00002b83      84c0           test al, al
0x00002b85      0f851d080000   jne 0x33a8
0x00002b8b      488d0d4b9d00.  lea rcx, str.invalid_status_level       ; 0xc8dd ; "invalid status level"
0x00002b92      488d3547b300.  lea rsi, obj.statuses                   ; 0xdee0 ; "none"
0x00002b99      ba01000000     mov edx, 1
0x00002b9e      4c89c7         mov rdi, r8
0x00002ba1      e89a2a0000     call sym.parse_symbols
0x00002ba6      890570e42000   mov dword [obj.status_level], eax       ; [0x21101c:4]=3
0x00002bac      e9dff5ffff     jmp 0x2190
0x00002bb1      0f1f80000000.  nop dword [rax]
0x00002bb8      e8c32e0000     call sym.write_output
0x00002bbd      4885ed         test rbp, rbp
0x00002bc0      0f842afbffff   je 0x26f0
0x00002bc6      488b3d43e720.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00002bcd      4c8b35f4e720.  mov r14, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00002bd4      4c8b2d2de720.  mov r13, qword [obj.oc]                 ; [0x211308:8]=0
0x00002bdb      4c89fe         mov rsi, r15
0x00002bde      4d89f4         mov r12, r14
0x00002be1      4d29ec         sub r12, r13
0x00002be4      4939ec         cmp r12, rbp
0x00002be7      4c0f47e5       cmova r12, rbp
0x00002beb      4c01ef         add rdi, r13
0x00002bee      4c89e2         mov rdx, r12
0x00002bf1      4c29e5         sub rbp, r12
0x00002bf4      4d01e7         add r15, r12
0x00002bf7      4d01ec         add r12, r13
0x00002bfa      e8e1f0ffff     call sym.imp.memcpy
0x00002bff      4d39e6         cmp r14, r12
0x00002c02      4c8925ffe620.  mov qword [obj.oc], r12                 ; [0x211308:8]=0
0x00002c09      77b2           ja 0x2bbd
0x00002c0b      ebab           jmp 0x2bb8
0x00002c0d      0f1f00         nop dword [rax]
0x00002c10      31ff           xor edi, edi
0x00002c12      488b15b7e720.  mov rdx, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x00002c19      4889ce         mov rsi, rcx
0x00002c1c      ffd0           call rax
0x00002c1e      4883f800       cmp rax, 0
0x00002c22      0f8f61fbffff   jg 0x2789
0x00002c28      8b355ee72000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x00002c2e      0f84d1040000   je 0x3105
0x00002c34      81e600010000   and esi, 0x100
0x00002c3a      7409           je 0x2c45
0x00002c3c      833dd9e32000.  cmp dword [obj.status_level], 1         ; [0x21101c:4]=3
0x00002c43      745d           je 0x2ca2
0x00002c45      488b359ce720.  mov rsi, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00002c4c      bf04000000     mov edi, 4
0x00002c51      e88a5d0000     call sym.quotearg_style
0x00002c56      488d35799b00.  lea rsi, str.error_reading__s           ; 0xc7d6 ; "error reading %s"
0x00002c5d      31ff           xor edi, edi
0x00002c5f      ba05000000     mov edx, 5
0x00002c64      4889c5         mov rbp, rax
0x00002c67      e8f4eeffff     call sym.imp.dcgettext
0x00002c6c      4889c2         mov rdx, rax
0x00002c6f      488b442410     mov rax, qword [rsp + 0x10]
0x00002c74      31ff           xor edi, edi
0x00002c76      4889e9         mov rcx, rbp
0x00002c79      8b30           mov esi, dword [rax]
0x00002c7b      31c0           xor eax, eax
0x00002c7d      e8be140000     call sym.nl_error
0x00002c82      8b3504e72000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x00002c88      f7c600010000   test esi, 0x100
0x00002c8e      0f84110b0000   je 0x37a5
0x00002c94      833d81e32000.  cmp dword [obj.status_level], 1         ; [0x21101c:4]=3
0x00002c9b      7405           je 0x2ca2
0x00002c9d      e8ce1a0000     call sym.print_stats.part.2
0x00002ca2      488b2d27e720.  mov rbp, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x00002ca9      482b6c2408     sub rbp, qword [rsp + 8]
0x00002cae      31ff           xor edi, edi
0x00002cb0      4889ee         mov rsi, rbp
0x00002cb3      e8f8180000     call sym.invalidate_cache
0x00002cb8      803d7de62000.  cmp byte [obj.input_seekable], 0        ; [0x21133c:1]=0
0x00002cbf      0f857f010000   jne 0x2e44
0x00002cc5      8b056de62000   mov eax, dword [obj.input_seek_errno]   ; [0x211338:4]=0
0x00002ccb      83f81d         cmp eax, 0x1d
0x00002cce      745f           je 0x2d2f
0x00002cd0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002cd5      8907           mov dword [rdi], eax
0x00002cd7      488b150ae720.  mov rdx, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00002cde      be03000000     mov esi, 3
0x00002ce3      31ff           xor edi, edi
0x00002ce5      e8f65d0000     call sym.quotearg_n_style_colon
0x00002cea      488d35d59a00.  lea rsi, str.s:_cannot_seek             ; 0xc7c6 ; "%s: cannot seek"
0x00002cf1      ba05000000     mov edx, 5
0x00002cf6      31ff           xor edi, edi
0x00002cf8      4889c5         mov rbp, rax
0x00002cfb      e860eeffff     call sym.imp.dcgettext
0x00002d00      4889c2         mov rdx, rax
0x00002d03      488b442410     mov rax, qword [rsp + 0x10]
0x00002d08      4889e9         mov rcx, rbp
0x00002d0b      31ff           xor edi, edi
0x00002d0d      8b30           mov esi, dword [rax]
0x00002d0f      31c0           xor eax, eax
0x00002d11      e82a140000     call sym.nl_error
0x00002d16      c6051fe62000.  mov byte [obj.input_seekable], 0        ; [0x21133c:1]=0
0x00002d1d      c70511e62000.  mov dword [obj.input_seek_errno], 0x1d  ; [0x211338:4]=0
0x00002d27      c74424180100.  mov dword [rsp + 0x18], 1
0x00002d2f      f60557e62000.  test byte [0x0021138d], 4               ; [0x21138d:1]=0
0x00002d36      0f84b4f9ffff   je 0x26f0
0x00002d3c      48837c240800   cmp qword [rsp + 8], 0
0x00002d42      0f85a8f9ffff   jne 0x26f0
0x00002d48      4c8b2581e620.  mov r12, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x00002d4f      31ed           xor ebp, ebp
0x00002d51      4939ec         cmp r12, rbp
0x00002d54      0f8771faffff   ja 0x27cb
0x00002d5a      660f1f440000   nop word [rax + rax]
0x00002d60      488305f8e520.  add qword [obj.r_full], 1               ; [0x211360:8]=0
0x00002d68      48c744240800.  mov qword [rsp + 8], 0
0x00002d71      e9aafaffff     jmp 0x2820
0x00002d76      4885ed         test rbp, rbp
0x00002d79      0f84c5faffff   je 0x2844
0x00002d7f      498d0c2f       lea rcx, [r15 + rbp]
0x00002d83      4c89f8         mov rax, r15
0x00002d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002d90      0fb610         movzx edx, byte [rax]
0x00002d93      4883c001       add rax, 1
0x00002d97      0fb61413       movzx edx, byte [rbx + rdx]
0x00002d9b      8850ff         mov byte [rax - 1], dl
0x00002d9e      4839c8         cmp rax, rcx
0x00002da1      75ed           jne 0x2d90
0x00002da3      8b0de3e52000   mov ecx, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x00002da9      f6c180         test cl, 0x80
0x00002dac      0f84a1faffff   je 0x2853
0x00002db2      803d88e32000.  cmp byte [obj.char_is_saved], 0         ; [0x211141:1]=0
0x00002db9      7419           je 0x2dd4
0x00002dbb      0fb6057ee320.  movzx eax, byte [obj.saved_char]        ; [0x211140:1]=0
0x00002dc2      4883c501       add rbp, 1
0x00002dc6      c60574e32000.  mov byte [obj.char_is_saved], 0         ; [0x211141:1]=0
0x00002dcd      4983ef01       sub r15, 1
0x00002dd1      418807         mov byte [r15], al
0x00002dd4      40f6c501       test bpl, 1
0x00002dd8      7416           je 0x2df0
0x00002dda      4883ed01       sub rbp, 1
0x00002dde      c6055ce32000.  mov byte [obj.char_is_saved], 1         ; [0x211141:1]=0
0x00002de5      410fb6042f     movzx eax, byte [r15 + rbp]
0x00002dea      880550e32000   mov byte [obj.saved_char], al           ; [0x211140:1]=0
0x00002df0      4889ea         mov rdx, rbp
0x00002df3      498d042f       lea rax, [r15 + rbp]
0x00002df7      48d1ea         shr rdx, 1
0x00002dfa      741c           je 0x2e18
0x00002dfc      48f7da         neg rdx
0x00002dff      488d3450       lea rsi, [rax + rdx*2]
0x00002e03      0f1f440000     nop dword [rax + rax]
0x00002e08      0fb650fe       movzx edx, byte [rax - 2]
0x00002e0c      4883e802       sub rax, 2
0x00002e10      885002         mov byte [rax + 2], dl
0x00002e13      4839f0         cmp rax, rsi
0x00002e16      75f0           jne 0x2e08
0x00002e18      4983c701       add r15, 1
0x00002e1c      f6c108         test cl, 8
0x00002e1f      0f8437faffff   je 0x285c
0x00002e25      4889ee         mov rsi, rbp
0x00002e28      4c89ff         mov rdi, r15
0x00002e2b      e8f02c0000     call sym.copy_with_block
0x00002e30      e9bbf8ffff     jmp 0x26f0
0x00002e35      4889c6         mov rsi, rax
0x00002e38      31ff           xor edi, edi
0x00002e3a      e871170000     call sym.invalidate_cache
0x00002e3f      e977f9ffff     jmp 0x27bb
0x00002e44      31c0           xor eax, eax
0x00002e46      4989ec         mov r12, rbp
0x00002e49      4c0325e0e420.  add r12, qword [obj.input_offset]       ; [0x211330:8]=0
0x00002e50      0f92c0         setb al
0x00002e53      4c8925d6e420.  mov qword [obj.input_offset], r12       ; [0x211330:8]=0
0x00002e5a      4885c0         test rax, rax
0x00002e5d      0f84c1010000   je 0x3024
0x00002e63      c605bfe42000.  mov byte [obj.input_offset_overflow], 1 ; [0x211329:1]=0
0x00002e6a      488b3577e520.  mov rsi, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00002e71      bf04000000     mov edi, 4
0x00002e76      e8655b0000     call sym.quotearg_style
0x00002e7b      488d3576ac00.  lea rsi, str.offset_overflow_while_reading_file__s ; 0xdaf8 ; "offset overflow while reading file %s"
0x00002e82      4889c5         mov rbp, rax
0x00002e85      31ff           xor edi, edi
0x00002e87      ba05000000     mov edx, 5
0x00002e8c      e8cfecffff     call sym.imp.dcgettext
0x00002e91      4889e9         mov rcx, rbp
0x00002e94      4889c2         mov rdx, rax
0x00002e97      31f6           xor esi, esi
0x00002e99      31ff           xor edi, edi
0x00002e9b      31c0           xor eax, eax
0x00002e9d      e89e120000     call sym.nl_error
0x00002ea2      e96ffeffff     jmp 0x2d16
0x00002ea7      4889ee         mov rsi, rbp
0x00002eaa      4c89ff         mov rdi, r15
0x00002ead      e87e1f0000     call sym.iwrite.constprop.7
0x00002eb2      4801059fe420.  add qword [obj.w_bytes], rax            ; [0x211358:8]=0
0x00002eb9      4839e8         cmp rax, rbp
0x00002ebc      0f8427040000   je 0x32e9
0x00002ec2      488b3517e520.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00002ec9      bf04000000     mov edi, 4
0x00002ece      e80d5b0000     call sym.quotearg_style
0x00002ed3      488d355e9a00.  lea rsi, str.error_writing__s           ; 0xc938 ; "error writing %s"
0x00002eda      4889c3         mov rbx, rax
0x00002edd      ba05000000     mov edx, 5
0x00002ee2      31ff           xor edi, edi
0x00002ee4      e877ecffff     call sym.imp.dcgettext
0x00002ee9      4889c2         mov rdx, rax
0x00002eec      488b442410     mov rax, qword [rsp + 0x10]
0x00002ef1      4889d9         mov rcx, rbx
0x00002ef4      31ff           xor edi, edi
0x00002ef6      8b30           mov esi, dword [rax]
0x00002ef8      31c0           xor eax, eax
0x00002efa      e841120000     call sym.nl_error
0x00002eff      c74424180100.  mov dword [rsp + 0x18], 1
0x00002f07      48833d11e120.  cmp qword [obj.max_records], 0          ; [0x211020:8]=-1
0x00002f0f      0f844c030000   je 0x3261
0x00002f15      803d4fe32000.  cmp byte [obj.i_nocache], 0             ; [0x21126b:1]=0
0x00002f1c      7509           jne 0x2f27
0x00002f1e      803d44e32000.  cmp byte [obj.i_nocache_eof], 0         ; [0x211269:1]=0
0x00002f25      7409           je 0x2f30
0x00002f27      31f6           xor esi, esi
0x00002f29      31ff           xor edi, edi
0x00002f2b      e880160000     call sym.invalidate_cache
0x00002f30      803d33e32000.  cmp byte [obj.o_nocache], 0             ; [0x21126a:1]=0
0x00002f37      7509           jne 0x2f42
0x00002f39      803d28e32000.  cmp byte [obj.o_nocache_eof], 0         ; [0x211268:1]=0
0x00002f40      740c           je 0x2f4e
0x00002f42      31f6           xor esi, esi
0x00002f44      bf01000000     mov edi, 1
0x00002f49      e862160000     call sym.invalidate_cache
0x00002f4e      e8ad1c0000     call sym.finish_up
0x00002f53      488b9c24d800.  mov rbx, qword [rsp + 0xd8]
0x00002f5b      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002f64      8b442418       mov eax, dword [rsp + 0x18]
0x00002f68      0f85590c0000   jne 0x3bc7
0x00002f6e      4881c4e80000.  add rsp, 0xe8
0x00002f75      5b             pop rbx
0x00002f76      5d             pop rbp
0x00002f77      415c           pop r12
0x00002f79      415d           pop r13
0x00002f7b      415e           pop r14
0x00002f7d      415f           pop r15
0x00002f7f      c3             ret
0x00002f80      4080e504       and bpl, 4
0x00002f84      0f84aef4ffff   je 0x2438
0x00002f8a      488d05cfe120.  lea rax, obj.trans_table                ; 0x211160
0x00002f91      488d0d48ad00.  lea rcx, obj.ascii_to_ibm               ; 0xdce0
0x00002f98      488db0000100.  lea rsi, [rax + 0x100]
0x00002f9f      90             nop
0x00002fa0      0fb610         movzx edx, byte [rax]
0x00002fa3      4883c001       add rax, 1
0x00002fa7      0fb61411       movzx edx, byte [rcx + rdx]
0x00002fab      8850ff         mov byte [rax - 1], dl
0x00002fae      4839c6         cmp rsi, rax
0x00002fb1      75ed           jne 0x2fa0
0x00002fb3      e96bf4ffff     jmp 0x2423
0x00002fb8      40f6c520       test bpl, 0x20                          ; "@"
0x00002fbc      0f842ff4ffff   je 0x23f1
0x00002fc2      e8a9eeffff     call sym.imp.__ctype_tolower_loc
0x00002fc7      488b30         mov rsi, qword [rax]
0x00002fca      488d058fe120.  lea rax, obj.trans_table                ; 0x211160
0x00002fd1      488d88000100.  lea rcx, [rax + 0x100]
0x00002fd8      0f1f84000000.  nop dword [rax + rax]
0x00002fe0      0fb610         movzx edx, byte [rax]
0x00002fe3      4883c001       add rax, 1
0x00002fe7      8b1496         mov edx, dword [rsi + rdx*4]
0x00002fea      8850ff         mov byte [rax - 1], dl
0x00002fed      4839c1         cmp rcx, rax
0x00002ff0      75ee           jne 0x2fe0
0x00002ff2      e9f3f3ffff     jmp 0x23ea
0x00002ff7      48896c2408     mov qword [rsp + 8], rbp
0x00002ffc      4c89e5         mov rbp, r12
0x00002fff      e91cf8ffff     jmp 0x2820
0x00003004      85c0           test eax, eax
0x00003006      488d15831b00.  lea rdx, sym.iread_fullblock            ; 0x4b90 ; "H\x85\xd2tYAUATA\x89\xfdUSH\x89\xf5H\x89\xd3E1\xe4H\x83\xec\b\xeb\x10\x0f\x1f"
0x0000300d      488d055c1a00.  lea rax, sym.iread                      ; 0x4a70 ; "AUATA\x89\xfdUSI\x89\xf4H\x89\xd5H\x83\xec\b\xeb\x19\x0f\x1f"
0x00003014      c6050de32000.  mov byte [obj.warn_partial_read], 0     ; [0x211328:1]=0
0x0000301b      480f45c2       cmovne rax, rdx
0x0000301f      e960f2ffff     jmp 0x2284
0x00003024      4c89e0         mov rax, r12
0x00003027      48c1e83f       shr rax, 0x3f
0x0000302b      0805f8e22000   or byte [obj.input_offset_overflow], al ; [0x211329:1]=0
0x00003031      0f8533feffff   jne 0x2e6a
0x00003037      31f6           xor esi, esi
0x00003039      31ff           xor edi, edi
0x0000303b      ba01000000     mov edx, 1
0x00003040      e8cbebffff     call sym.imp.lseek
0x00003045      4885c0         test rax, rax
0x00003048      0f8889fcffff   js 0x2cd7
0x0000304e      4939c4         cmp r12, rax
0x00003051      0f84d8fcffff   je 0x2d2f
0x00003057      4929c4         sub r12, rax
0x0000305a      0f88e7040000   js 0x3547
0x00003060      4c39e5         cmp rbp, r12
0x00003063      0f82de040000   jb 0x3547
0x00003069      488b3d78e320.  mov rdi, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00003070      31f6           xor esi, esi
0x00003072      b901000000     mov ecx, 1
0x00003077      4c89e2         mov rdx, r12
0x0000307a      e831140000     call sym.skip_via_lseek
0x0000307f      4885c0         test rax, rax
0x00003082      0f89a7fcffff   jns 0x2d2f
0x00003088      488b442410     mov rax, qword [rsp + 0x10]
0x0000308d      833800         cmp dword [rax], 0
0x00003090      0f8541fcffff   jne 0x2cd7
0x00003096      488d35b3aa00.  lea rsi, str.cannot_work_around_kernel_bug_after_all ; 0xdb50 ; "cannot work around kernel bug after all"
0x0000309d      31ff           xor edi, edi
0x0000309f      ba05000000     mov edx, 5
0x000030a4      e8b7eaffff     call sym.imp.dcgettext
0x000030a9      31f6           xor esi, esi
0x000030ab      4889c2         mov rdx, rax
0x000030ae      31ff           xor edi, edi
0x000030b0      31c0           xor eax, eax
0x000030b2      e889100000     call sym.nl_error
0x000030b7      e91bfcffff     jmp 0x2cd7
0x000030bc      89ea           mov edx, ebp
0x000030be      b9b6010000     mov ecx, 0x1b6
0x000030c3      bf01000000     mov edi, 1
0x000030c8      83ca02         or edx, 2
0x000030cb      e850190000     call sym.ifd_reopen
0x000030d0      85c0           test eax, eax
0x000030d2      0f8949f4ffff   jns 0x2521
0x000030d8      488b3501e320.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x000030df      e921f4ffff     jmp 0x2505
0x000030e4      488b542438     mov rdx, qword [rsp + 0x38]
0x000030e9      4885d2         test rdx, rdx
0x000030ec      0f84b8f5ffff   je 0x26aa
0x000030f2      488b3d17e220.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x000030f9      31f6           xor esi, esi
0x000030fb      e840ebffff     call sym.imp.memset
0x00003100      e988f5ffff     jmp 0x268d
0x00003105      0fb6055fe120.  movzx eax, byte [obj.i_nocache]         ; [0x21126b:1]=0
0x0000310c      080557e12000   or byte [obj.i_nocache_eof], al         ; [0x211269:1]=0
0x00003112      803d51e12000.  cmp byte [obj.o_nocache], 0             ; [0x21126a:1]=0
0x00003119      0fb60548e120.  movzx eax, byte [obj.o_nocache_eof]     ; [0x211268:1]=0
0x00003120      740f           je 0x3131
0x00003122      31db           xor ebx, ebx
0x00003124      f7c600020000   test esi, 0x200
0x0000312a      0f94c3         sete bl
0x0000312d      895c2428       mov dword [rsp + 0x28], ebx
0x00003131      0b442428       or eax, dword [rsp + 0x28]
0x00003135      88052de12000   mov byte [obj.o_nocache_eof], al        ; [0x211268:1]=0
0x0000313b      802526e12000.  and byte [obj.o_nocache_eof], 1         ; [0x211268:1]=0
0x00003142      803df8df2000.  cmp byte [obj.char_is_saved], 0         ; [0x211141:1]=0
0x00003149      0f84c0000000   je 0x320f
0x0000314f      40f6c608       test sil, 8
0x00003153      0f8586060000   jne 0x37df
0x00003159      4080e610       and sil, 0x10
0x0000315d      0f8598060000   jne 0x37fb
0x00003163      488b059ee120.  mov rax, qword [obj.oc]                 ; [0x211308:8]=0
0x0000316a      0fb60dcfdf20.  movzx ecx, byte [obj.saved_char]        ; [0x211140:1]=0
0x00003171      488b1598e120.  mov rdx, qword [obj.obuf]               ; [0x211310:8]=0
0x00003178      488d7001       lea rsi, [rax + 1]
0x0000317c      483b3545e220.  cmp rsi, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00003183      880c02         mov byte [rdx + rax], cl
0x00003186      4889357be120.  mov qword [obj.oc], rsi                 ; [0x211308:8]=0
0x0000318d      7375           jae 0x3204
0x0000318f      4885f6         test rsi, rsi
0x00003192      0f85b6040000   jne 0x364e
0x00003198      803df9e12000.  cmp byte [obj.final_op_was_seek], 0     ; [0x211398:1]=0
0x0000319f      0f8515050000   jne 0x36ba
0x000031a5      8b35e1e12000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x000031ab      f7c600400000   test esi, 0x4000
0x000031b1      0f85c9040000   jne 0x3680
0x000031b7      81e600800000   and esi, 0x8000
0x000031bd      0f8444fdffff   je 0x2f07
0x000031c3      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000031c8      bf01000000     mov edi, 1
0x000031cd      e8ceebffff     call sym.imp.fsync
0x000031d2      85c0           test eax, eax
0x000031d4      0f842dfdffff   je 0x2f07
0x000031da      833b04         cmp dword [rbx], 4
0x000031dd      74e9           je 0x31c8
0x000031df      488b35fae120.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x000031e6      bf04000000     mov edi, 4
0x000031eb      e8f0570000     call sym.quotearg_style
0x000031f0      ba05000000     mov edx, 5
0x000031f5      4889c3         mov rbx, rax
0x000031f8      488d35629700.  lea rsi, str.fsync_failed_for__s        ; 0xc961 ; "fsync failed for %s"
0x000031ff      e9defcffff     jmp 0x2ee2
0x00003204      e877280000     call sym.write_output
0x00003209      8b357de12000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x0000320f      4080e608       and sil, 8
0x00003213      0f8437010000   je 0x3350
0x00003219      488b1de0e020.  mov rbx, qword [obj.col]                ; [0x211300:8]=0
0x00003220      4885db         test rbx, rbx
0x00003223      0f8515010000   jne 0x333e
0x00003229      488b35d8e020.  mov rsi, qword [obj.oc]                 ; [0x211308:8]=0
0x00003230      e95affffff     jmp 0x318f
0x00003235      488d35cb9600.  lea rsi, str.standard_input             ; 0xc907 ; "standard input"
0x0000323c      31ff           xor edi, edi
0x0000323e      ba05000000     mov edx, 5
0x00003243      e818e9ffff     call sym.imp.dcgettext
0x00003248      4489e6         mov esi, r12d
0x0000324b      4889c2         mov rdx, rax
0x0000324e      31ff           xor edi, edi
0x00003250      48890591e120.  mov qword [obj.input_file], rax         ; [0x2113e8:8]=0
0x00003257      e844110000     call sym.set_fd_flags
0x0000325c      e90ff2ffff     jmp 0x2470
0x00003261      48833d27e120.  cmp qword [obj.max_bytes], 0            ; [0x211390:8]=0
0x00003269      0f85a6fcffff   jne 0x2f15
0x0000326f      803df5df2000.  cmp byte [obj.i_nocache], 0             ; [0x21126b:1]=0
0x00003276      0f85e7010000   jne 0x3463
0x0000327c      803de7df2000.  cmp byte [obj.o_nocache], 0             ; [0x21126a:1]=0
0x00003283      0f84c5fcffff   je 0x2f4e
0x00003289      31f6           xor esi, esi
0x0000328b      bf01000000     mov edi, 1
0x00003290      e81b130000     call sym.invalidate_cache
0x00003295      84c0           test al, al
0x00003297      0f85b1fcffff   jne 0x2f4e
0x0000329d      488b153ce120.  mov rdx, qword [obj.output_file]        ; [0x2113e0:8]=0
0x000032a4      be03000000     mov esi, 3
0x000032a9      31ff           xor edi, edi
0x000032ab      e830580000     call sym.quotearg_n_style_colon
0x000032b0      488d35f9a800.  lea rsi, str.failed_to_discard_cache_for:__s ; 0xdbb0 ; "failed to discard cache for: %s"
0x000032b7      ba05000000     mov edx, 5
0x000032bc      31ff           xor edi, edi
0x000032be      4889c3         mov rbx, rax
0x000032c1      e89ae8ffff     call sym.imp.dcgettext
0x000032c6      4889c2         mov rdx, rax
0x000032c9      488b442410     mov rax, qword [rsp + 0x10]
0x000032ce      4889d9         mov rcx, rbx
0x000032d1      31ff           xor edi, edi
0x000032d3      8b30           mov esi, dword [rax]
0x000032d5      31c0           xor eax, eax
0x000032d7      e8640e0000     call sym.nl_error
0x000032dc      c74424180100.  mov dword [rsp + 0x18], 1
0x000032e4      e965fcffff     jmp 0x2f4e
0x000032e9      48392de0e020.  cmp qword [obj.input_blocksize], rbp    ; [0x2113d0:8]=0
0x000032f0      0f84ca010000   je 0x34c0
0x000032f6      4883057ae020.  add qword [obj.w_partial], 1            ; [0x211378:8]=0
0x000032fe      e9edf3ffff     jmp 0x26f0
0x00003303      c74424180000.  mov dword [rsp + 0x18], 0
0x0000330b      e95fffffff     jmp 0x326f
0x00003310      488d4601       lea rax, [rsi + 1]
0x00003314      0fb60dfedc20.  movzx ecx, byte [obj.space_character]   ; [0x211019:1]=32 ; " \n"
0x0000331b      483b05a6e020.  cmp rax, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00003322      488b15e7df20.  mov rdx, qword [obj.obuf]               ; [0x211310:8]=0
0x00003329      488905d8df20.  mov qword [obj.oc], rax                 ; [0x211308:8]=0
0x00003330      880c32         mov byte [rdx + rsi], cl
0x00003333      7205           jb 0x333a
0x00003335      e846270000     call sym.write_output
0x0000333a      4883c301       add rbx, 1
0x0000333e      483b1d7be020.  cmp rbx, qword [obj.conversion_blocksize] ; [0x2113c0:8]=0
0x00003345      488b35bcdf20.  mov rsi, qword [obj.oc]                 ; [0x211308:8]=0
0x0000334c      72c2           jb 0x3310
0x0000334e      eb07           jmp 0x3357
0x00003350      488b35b1df20.  mov rsi, qword [obj.oc]                 ; [0x211308:8]=0
0x00003357      48833da1df20.  cmp qword [obj.col], 0                  ; [0x211300:8]=0
0x0000335f      0f842afeffff   je 0x318f
0x00003365      f60520e02000.  test byte [obj.conversions_mask], 0x10  ; [0x21138c:1]=0
0x0000336c      0f841dfeffff   je 0x318f
0x00003372      488d4601       lea rax, [rsi + 1]
0x00003376      0fb60d9ddc20.  movzx ecx, byte [obj.newline_character] ; [0x21101a:1]=10 ; u"\n\x03"
0x0000337d      483b0544e020.  cmp rax, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00003384      488b1585df20.  mov rdx, qword [obj.obuf]               ; [0x211310:8]=0
0x0000338b      48890576df20.  mov qword [obj.oc], rax                 ; [0x211308:8]=0
0x00003392      880c32         mov byte [rdx + rsi], cl
0x00003395      4889c6         mov rsi, rax
0x00003398      0f82f1fdffff   jb 0x318f
0x0000339e      e8dd260000     call sym.write_output
0x000033a3      e981feffff     jmp 0x3229
0x000033a8      3c3d           cmp al, 0x3d
0x000033aa      0f84dbf7ffff   je 0x2b8b
0x000033b0      488b742418     mov rsi, qword [rsp + 0x18]
0x000033b5      4c89c7         mov rdi, r8
0x000033b8      4c89442428     mov qword [rsp + 0x28], r8
0x000033bd      c74424380000.  mov dword [rsp + 0x38], 0
0x000033c5      e8860e0000     call sym.parse_integer
0x000033ca      4c89ea         mov rdx, r13
0x000033cd      be69000000     mov esi, 0x69                           ; 'i'
0x000033d2      488d0d3a9400.  lea rcx, [0x0000c813]                   ; "ibs"
0x000033d9      4c8b442428     mov r8, qword [rsp + 0x28]
0x000033de      eb0c           jmp 0x33ec
0x000033e0      0fb631         movzx esi, byte [rcx]
0x000033e3      4084f6         test sil, sil
0x000033e6      0f847b030000   je 0x3767
0x000033ec      4883c201       add rdx, 1
0x000033f0      4883c101       add rcx, 1
0x000033f4      403872ff       cmp byte [rdx - 1], sil
0x000033f8      74e6           je 0x33e0
0x000033fa      488d0d169400.  lea rcx, [0x0000c817]                   ; "obs"
0x00003401      4c89ea         mov rdx, r13
0x00003404      be6f000000     mov esi, 0x6f                           ; 'o'
0x00003409      4883c201       add rdx, 1
0x0000340d      4883c101       add rcx, 1
0x00003411      403872ff       cmp byte [rdx - 1], sil
0x00003415      751c           jne 0x3433
0x00003417      0fb631         movzx esi, byte [rcx]
0x0000341a      4084f6         test sil, sil
0x0000341d      75ea           jne 0x3409
0x0000341f      0fb612         movzx edx, byte [rdx]
0x00003422      84d2           test dl, dl
0x00003424      0f8495010000   je 0x35bf
0x0000342a      80fa3d         cmp dl, 0x3d
0x0000342d      0f848c010000   je 0x35bf
0x00003433      4c89ea         mov rdx, r13
0x00003436      be62000000     mov esi, 0x62                           ; 'b'
0x0000343b      488d0dda9300.  lea rcx, [0x0000c81c]                   ; "bs"
0x00003442      eb0c           jmp 0x3450
0x00003444      0fb631         movzx esi, byte [rcx]
0x00003447      4084f6         test sil, sil
0x0000344a      0f8456050000   je 0x39a6
0x00003450      4883c201       add rdx, 1
0x00003454      4883c101       add rcx, 1
0x00003458      403872ff       cmp byte [rdx - 1], sil
0x0000345c      74e6           je 0x3444
0x0000345e      e94f050000     jmp 0x39b2
0x00003463      31f6           xor esi, esi
0x00003465      31ff           xor edi, edi
0x00003467      e844110000     call sym.invalidate_cache
0x0000346c      84c0           test al, al
0x0000346e      0f8508feffff   jne 0x327c
0x00003474      488b156ddf20.  mov rdx, qword [obj.input_file]         ; [0x2113e8:8]=0
0x0000347b      be03000000     mov esi, 3
0x00003480      31ff           xor edi, edi
0x00003482      e859560000     call sym.quotearg_n_style_colon
0x00003487      488d3522a700.  lea rsi, str.failed_to_discard_cache_for:__s ; 0xdbb0 ; "failed to discard cache for: %s"
0x0000348e      ba05000000     mov edx, 5
0x00003493      31ff           xor edi, edi
0x00003495      4889c3         mov rbx, rax
0x00003498      e8c3e6ffff     call sym.imp.dcgettext
0x0000349d      4889c2         mov rdx, rax
0x000034a0      488b442410     mov rax, qword [rsp + 0x10]
0x000034a5      4889d9         mov rcx, rbx
0x000034a8      31ff           xor edi, edi
0x000034aa      8b30           mov esi, dword [rax]
0x000034ac      31c0           xor eax, eax
0x000034ae      e88d0c0000     call sym.nl_error
0x000034b3      c74424180100.  mov dword [rsp + 0x18], 1
0x000034bb      e9bcfdffff     jmp 0x327c
0x000034c0      488305a8de20.  add qword [obj.w_full], 1               ; [0x211370:8]=0
0x000034c8      e923f2ffff     jmp 0x26f0
0x000034cd      488b442410     mov rax, qword [rsp + 0x10]
0x000034d2      488b542420     mov rdx, qword [rsp + 0x20]
0x000034d7      be01000000     mov esi, 1
0x000034dc      bf01000000     mov edi, 1
0x000034e1      8b28           mov ebp, dword [rax]
0x000034e3      e848e8ffff     call sym.imp.__fxstat
0x000034e8      85c0           test eax, eax
0x000034ea      0f8553060000   jne 0x3b43
0x000034f0      8b442458       mov eax, dword [rsp + 0x58]
0x000034f4      2500f00000     and eax, 0xf000
0x000034f9      2d00400000     sub eax, 0x4000
0x000034fe      a900b0ffff     test eax, 0xffffb000
0x00003503      0f856af0ffff   jne 0x2573
0x00003509      488b35d0de20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00003510      bf04000000     mov edi, 4
0x00003515      e8c6540000     call sym.quotearg_style
0x0000351a      488d3577a500.  lea rsi, str.failed_to_truncate_to__lu_bytes_in_output_file__s ; 0xda98 ; "failed to truncate to %lu bytes in output file %s"
0x00003521      4889c3         mov rbx, rax
0x00003524      ba05000000     mov edx, 5
0x00003529      31ff           xor edi, edi
0x0000352b      e830e6ffff     call sym.imp.dcgettext
0x00003530      4989d8         mov r8, rbx
0x00003533      4889c2         mov rdx, rax
0x00003536      4c89e1         mov rcx, r12
0x00003539      89ee           mov esi, ebp
0x0000353b      bf01000000     mov edi, 1
0x00003540      31c0           xor eax, eax
0x00003542      e8f90b0000     call sym.nl_error
0x00003547      833dceda2000.  cmp dword [obj.status_level], 1         ; [0x21101c:4]=3
0x0000354e      0f8415fbffff   je 0x3069
0x00003554      488d35c5a500.  lea rsi, str.warning:_invalid_file_offset_after_failed_read ; 0xdb20 ; "warning: invalid file offset after failed read"
0x0000355b      31ff           xor edi, edi
0x0000355d      ba05000000     mov edx, 5
0x00003562      e8f9e5ffff     call sym.imp.dcgettext
0x00003567      31f6           xor esi, esi
0x00003569      4889c2         mov rdx, rax
0x0000356c      31ff           xor edi, edi
0x0000356e      31c0           xor eax, eax
0x00003570      e8cb0b0000     call sym.nl_error
0x00003575      e9effaffff     jmp 0x3069
0x0000357a      488d3dffdc20.  lea rdi, obj.caught_signals             ; 0x211280
0x00003581      be0a000000     mov esi, 0xa
0x00003586      e8d5e8ffff     call sym.imp.sigaddset
0x0000358b      e96ee9ffff     jmp 0x1efe
0x00003590      488d35919300.  lea rsi, str.standard_output            ; 0xc928 ; "standard output"
0x00003597      31ff           xor edi, edi
0x00003599      ba05000000     mov edx, 5
0x0000359e      e8bde5ffff     call sym.imp.dcgettext
0x000035a3      4489e6         mov esi, r12d
0x000035a6      4889c2         mov rdx, rax
0x000035a9      bf01000000     mov edi, 1
0x000035ae      4889052bde20.  mov qword [obj.output_file], rax        ; [0x2113e0:8]=0
0x000035b5      e8e60d0000     call sym.set_fd_flags
0x000035ba      e9b4efffff     jmp 0x2573
0x000035bf      488b1512de20.  mov rdx, qword [obj.page_size]          ; [0x2113d8:8]=0
0x000035c6      48bfffffffff.  movabs rdi, 0x7fffffffffffffff          ; 9223372036854775807
0x000035d0      488905f1dd20.  mov qword [obj.output_blocksize], rax   ; [0x2113c8:8]=0
0x000035d7      48f7da         neg rdx
0x000035da      4839fa         cmp rdx, rdi
0x000035dd      480f47d7       cmova rdx, rdi
0x000035e1      4885c0         test rax, rax
0x000035e4      0f84e8010000   je 0x37d2
0x000035ea      4839d0         cmp rax, rdx
0x000035ed      0f86af020000   jbe 0x38a2
0x000035f3      c74424380100.  mov dword [rsp + 0x38], 1
0x000035fb      4c89c7         mov rdi, r8
0x000035fe      e8ad560000     call sym.quote
0x00003603      488d356b9300.  lea rsi, str.invalid_number             ; 0xc975 ; "invalid number"
0x0000360a      31ff           xor edi, edi
0x0000360c      ba05000000     mov edx, 5
0x00003611      4889c3         mov rbx, rax
0x00003614      e847e5ffff     call sym.imp.dcgettext
0x00003619      837c243801     cmp dword [rsp + 0x38], 1
0x0000361e      ba00000000     mov edx, 0
0x00003623      be4b000000     mov esi, 0x4b                           ; 'K'
0x00003628      4889c1         mov rcx, rax
0x0000362b      4989d8         mov r8, rbx
0x0000362e      bf01000000     mov edi, 1
0x00003633      0f45f2         cmovne esi, edx
0x00003636      488d15629100.  lea rdx, str.s:__s                      ; 0xc79f ; "%s: %s"
0x0000363d      31c0           xor eax, eax
0x0000363f      e8fc0a0000     call sym.nl_error
0x00003644      e8d7150000     call sym.alloc_ibuf.part.4
0x00003649      e982f0ffff     jmp 0x26d0
0x0000364e      488b3dbbdc20.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00003655      e8d6170000     call sym.iwrite.constprop.7
0x0000365a      480105f7dc20.  add qword [obj.w_bytes], rax            ; [0x211358:8]=0
0x00003661      4885c0         test rax, rax
0x00003664      7408           je 0x366e
0x00003666      4883050add20.  add qword [obj.w_partial], 1            ; [0x211378:8]=0
0x0000366e      483b0593dc20.  cmp rax, qword [obj.oc]                 ; [0x211308:8]=0
0x00003675      0f841dfbffff   je 0x3198
0x0000367b      e942f8ffff     jmp 0x2ec2
0x00003680      bf01000000     mov edi, 1
0x00003685      e806e4ffff     call sym.imp.fdatasync
0x0000368a      85c0           test eax, eax
0x0000368c      7421           je 0x36af
0x0000368e      488b442410     mov rax, qword [rsp + 0x10]
0x00003693      8b00           mov eax, dword [rax]
0x00003695      89442408       mov dword [rsp + 8], eax
0x00003699      83e816         sub eax, 0x16
0x0000369c      83e0ef         and eax, 0xffffffef                     ; 4294967279
0x0000369f      0f8532020000   jne 0x38d7
0x000036a5      810ddddc2000.  or dword [obj.conversions_mask], 0x8000 ; [0x21138c:4]=0
0x000036af      8b35d7dc2000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x000036b5      e9fdfaffff     jmp 0x31b7
0x000036ba      488b542420     mov rdx, qword [rsp + 0x20]
0x000036bf      be01000000     mov esi, 1
0x000036c4      bf01000000     mov edi, 1
0x000036c9      e862e6ffff     call sym.imp.__fxstat
0x000036ce      85c0           test eax, eax
0x000036d0      0f85dc010000   jne 0x38b2
0x000036d6      8b442458       mov eax, dword [rsp + 0x58]
0x000036da      2500f00000     and eax, 0xf000
0x000036df      3d00800000     cmp eax, 0x8000
0x000036e4      0f85bbfaffff   jne 0x31a5
0x000036ea      31f6           xor esi, esi
0x000036ec      ba01000000     mov edx, 1
0x000036f1      bf01000000     mov edi, 1
0x000036f6      e815e5ffff     call sym.imp.lseek
0x000036fb      4885c0         test rax, rax
0x000036fe      4889c3         mov rbx, rax
0x00003701      0f889efaffff   js 0x31a5
0x00003707      483b442470     cmp rax, qword [rsp + 0x70]
0x0000370c      0f8e93faffff   jle 0x31a5
0x00003712      4889c7         mov rdi, rax
0x00003715      e8d6160000     call sym.iftruncate.constprop.6
0x0000371a      85c0           test eax, eax
0x0000371c      0f8483faffff   je 0x31a5
0x00003722      488b35b7dc20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00003729      bf04000000     mov edi, 4
0x0000372e      e8ad520000     call sym.quotearg_style
0x00003733      488d353ea400.  lea rsi, str.failed_to_truncate_to__ld_bytes_in_output_file__s ; 0xdb78 ; "failed to truncate to %ld bytes in output file %s"
0x0000373a      31ff           xor edi, edi
0x0000373c      ba05000000     mov edx, 5
0x00003741      4889c5         mov rbp, rax
0x00003744      e817e4ffff     call sym.imp.dcgettext
0x00003749      4889c2         mov rdx, rax
0x0000374c      488b442410     mov rax, qword [rsp + 0x10]
0x00003751      4989e8         mov r8, rbp
0x00003754      4889d9         mov rcx, rbx
0x00003757      31ff           xor edi, edi
0x00003759      8b30           mov esi, dword [rax]
0x0000375b      31c0           xor eax, eax
0x0000375d      e8de090000     call sym.nl_error
0x00003762      e998f7ffff     jmp 0x2eff
0x00003767      0fb612         movzx edx, byte [rdx]
0x0000376a      84d2           test dl, dl
0x0000376c      7409           je 0x3777
0x0000376e      80fa3d         cmp dl, 0x3d
0x00003771      0f8583fcffff   jne 0x33fa
0x00003777      488b3d5adc20.  mov rdi, qword [obj.page_size]          ; [0x2113d8:8]=0
0x0000377e      4889054bdc20.  mov qword [obj.input_blocksize], rax    ; [0x2113d0:8]=0
0x00003785      488d5702       lea rdx, [rdi + 2]
0x00003789      48bfffffffff.  movabs rdi, 0x7fffffffffffffff          ; 9223372036854775807
0x00003793      4801d2         add rdx, rdx
0x00003796      48f7da         neg rdx
0x00003799      4839fa         cmp rdx, rdi
0x0000379c      480f47d7       cmova rdx, rdi
0x000037a0      e93cfeffff     jmp 0x35e1
0x000037a5      c74424180100.  mov dword [rsp + 0x18], 1
0x000037ad      e990f9ffff     jmp 0x3142
0x000037b2      0fb612         movzx edx, byte [rdx]
0x000037b5      84d2           test dl, dl
0x000037b7      7409           je 0x37c2
0x000037b9      80fa3d         cmp dl, 0x3d
0x000037bc      0f851b020000   jne 0x39dd
0x000037c2      4885c0         test rax, rax
0x000037c5      488905f4db20.  mov qword [obj.conversion_blocksize], rax ; [0x2113c0:8]=0
0x000037cc      0f85d0000000   jne 0x38a2
0x000037d2      c74424380400.  mov dword [rsp + 0x38], 4
0x000037da      e91cfeffff     jmp 0x35fb
0x000037df      488d3d5ad920.  lea rdi, obj.saved_char                 ; 0x211140
0x000037e6      be01000000     mov esi, 1
0x000037eb      e830230000     call sym.copy_with_block
0x000037f0      8b3596db2000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x000037f6      e914faffff     jmp 0x320f
0x000037fb      488d3d3ed920.  lea rdi, obj.saved_char                 ; 0x211140
0x00003802      be01000000     mov esi, 1
0x00003807      e834240000     call sym.copy_with_unblock
0x0000380c      8b357adb2000   mov esi, dword [obj.conversions_mask]   ; [0x21138c:4]=0
0x00003812      e9f8f9ffff     jmp 0x320f
0x00003817      0fb612         movzx edx, byte [rdx]
0x0000381a      80fa3d         cmp dl, 0x3d
0x0000381d      0f845c020000   je 0x3a7f
0x00003823      84d2           test dl, dl
0x00003825      0f8454020000   je 0x3a7f
0x0000382b      488d0d9f8f00.  lea rcx, [0x0000c7d1]                   ; "seek"
0x00003832      4c89ea         mov rdx, r13
0x00003835      be73000000     mov esi, 0x73                           ; 's'
0x0000383a      4883c201       add rdx, 1
0x0000383e      4883c101       add rcx, 1
0x00003842      403872ff       cmp byte [rdx - 1], sil
0x00003846      751c           jne 0x3864
0x00003848      0fb631         movzx esi, byte [rcx]
0x0000384b      4084f6         test sil, sil
0x0000384e      75ea           jne 0x383a
0x00003850      0fb612         movzx edx, byte [rdx]
0x00003853      80fa3d         cmp dl, 0x3d
0x00003856      0f842d020000   je 0x3a89
0x0000385c      84d2           test dl, dl
0x0000385e      0f8425020000   je 0x3a89
0x00003864      488d0db48f00.  lea rcx, str.count                      ; 0xc81f ; "count"
0x0000386b      4c89ea         mov rdx, r13
0x0000386e      be63000000     mov esi, 0x63                           ; 'c'
0x00003873      4883c201       add rdx, 1
0x00003877      4883c101       add rcx, 1
0x0000387b      403872ff       cmp byte [rdx - 1], sil
0x0000387f      0f859c000000   jne 0x3921
0x00003885      0fb631         movzx esi, byte [rcx]
0x00003888      4084f6         test sil, sil
0x0000388b      75e6           jne 0x3873
0x0000388d      0fb612         movzx edx, byte [rdx]
0x00003890      80fa3d         cmp dl, 0x3d
0x00003893      7408           je 0x389d
0x00003895      84d2           test dl, dl
0x00003897      0f8584000000   jne 0x3921
0x0000389d      4889442410     mov qword [rsp + 0x10], rax
0x000038a2      837c243800     cmp dword [rsp + 0x38], 0
0x000038a7      0f84e3e8ffff   je 0x2190
0x000038ad      e949fdffff     jmp 0x35fb
0x000038b2      488b3527db20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x000038b9      bf04000000     mov edi, 4
0x000038be      e81d510000     call sym.quotearg_style
0x000038c3      ba05000000     mov edx, 5
0x000038c8      4889c3         mov rbx, rax
0x000038cb      488d35d48e00.  lea rsi, str.cannot_fstat__s            ; 0xc7a6 ; "cannot fstat %s"
0x000038d2      e90bf6ffff     jmp 0x2ee2
0x000038d7      488b3502db20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x000038de      bf04000000     mov edi, 4
0x000038e3      e8f8500000     call sym.quotearg_style
0x000038e8      488d355a9000.  lea rsi, str.fdatasync_failed_for__s    ; 0xc949 ; "fdatasync failed for %s"
0x000038ef      ba05000000     mov edx, 5
0x000038f4      31ff           xor edi, edi
0x000038f6      4889c3         mov rbx, rax
0x000038f9      e862e2ffff     call sym.imp.dcgettext
0x000038fe      4889c2         mov rdx, rax
0x00003901      488b442410     mov rax, qword [rsp + 0x10]
0x00003906      4889d9         mov rcx, rbx
0x00003909      31ff           xor edi, edi
0x0000390b      8b30           mov esi, dword [rax]
0x0000390d      31c0           xor eax, eax
0x0000390f      e82c080000     call sym.nl_error
0x00003914      c74424180100.  mov dword [rsp + 0x18], 1
0x0000391c      e984fdffff     jmp 0x36a5
0x00003921      4c89ef         mov rdi, r13
0x00003924      e887530000     call sym.quote
0x00003929      488d355b8f00.  lea rsi, str.unrecognized_operand__s    ; 0xc88b ; "unrecognized operand %s"
0x00003930      4889c3         mov rbx, rax
0x00003933      ba05000000     mov edx, 5
0x00003938      31ff           xor edi, edi
0x0000393a      e821e2ffff     call sym.imp.dcgettext
0x0000393f      31ff           xor edi, edi
0x00003941      4889c2         mov rdx, rax
0x00003944      4889d9         mov rcx, rbx
0x00003947      31f6           xor esi, esi
0x00003949      31c0           xor eax, eax
0x0000394b      e8f0070000     call sym.nl_error
0x00003950      bf01000000     mov edi, 1
0x00003955      e8d6160000     call sym.usage
0x0000395a      488b357fda20.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00003961      bf04000000     mov edi, 4
0x00003966      e875500000     call sym.quotearg_style
0x0000396b      488d35758e00.  lea rsi, str.writing_to__s              ; 0xc7e7 ; "writing to %s"
0x00003972      ba05000000     mov edx, 5
0x00003977      31ff           xor edi, edi
0x00003979      4889c3         mov rbx, rax
0x0000397c      e8dfe1ffff     call sym.imp.dcgettext
0x00003981      4889c2         mov rdx, rax
0x00003984      488b442410     mov rax, qword [rsp + 0x10]
0x00003989      31ff           xor edi, edi
0x0000398b      4889d9         mov rcx, rbx
0x0000398e      8b30           mov esi, dword [rax]
0x00003990      31c0           xor eax, eax
0x00003992      e8a9070000     call sym.nl_error
0x00003997      e864120000     call sym.finish_up
0x0000399c      bf01000000     mov edi, 1
0x000039a1      e86ae4ffff     call sym.imp.exit
0x000039a6      0fb612         movzx edx, byte [rdx]
0x000039a9      84d2           test dl, dl
0x000039ab      7460           je 0x3a0d
0x000039ad      80fa3d         cmp dl, 0x3d
0x000039b0      745b           je 0x3a0d
0x000039b2      4c89ea         mov rdx, r13
0x000039b5      be63000000     mov esi, 0x63                           ; 'c'
0x000039ba      488d0d5a8e00.  lea rcx, [0x0000c81b]                   ; "cbs"
0x000039c1      eb0c           jmp 0x39cf
0x000039c3      0fb631         movzx esi, byte [rcx]
0x000039c6      4084f6         test sil, sil
0x000039c9      0f84e3fdffff   je 0x37b2
0x000039cf      4883c201       add rdx, 1
0x000039d3      4883c101       add rcx, 1
0x000039d7      403872ff       cmp byte [rdx - 1], sil
0x000039db      74e6           je 0x39c3
0x000039dd      4c89ea         mov rdx, r13
0x000039e0      be73000000     mov esi, 0x73                           ; 's'
0x000039e5      488d0dd58d00.  lea rcx, [0x0000c7c1]                   ; "skip"
0x000039ec      eb0c           jmp 0x39fa
0x000039ee      0fb631         movzx esi, byte [rcx]
0x000039f1      4084f6         test sil, sil
0x000039f4      0f841dfeffff   je 0x3817
0x000039fa      4883c201       add rdx, 1
0x000039fe      4883c101       add rcx, 1
0x00003a02      403872ff       cmp byte [rdx - 1], sil
0x00003a06      74e6           je 0x39ee
0x00003a08      e91efeffff     jmp 0x382b
0x00003a0d      488b3dc4d920.  mov rdi, qword [obj.page_size]          ; [0x2113d8:8]=0
0x00003a14      4989c7         mov r15, rax
0x00003a17      488d5702       lea rdx, [rdi + 2]
0x00003a1b      48bfffffffff.  movabs rdi, 0x7fffffffffffffff          ; 9223372036854775807
0x00003a25      4801d2         add rdx, rdx
0x00003a28      48f7da         neg rdx
0x00003a2b      4839fa         cmp rdx, rdi
0x00003a2e      480f47d7       cmova rdx, rdi
0x00003a32      e9aafbffff     jmp 0x35e1
0x00003a37      488d357a9f00.  lea rsi, str.cannot_combine_block_and_unblock ; 0xd9b8 ; "cannot combine block and unblock"
0x00003a3e      ba05000000     mov edx, 5
0x00003a43      31ff           xor edi, edi
0x00003a45      e816e1ffff     call sym.imp.dcgettext
0x00003a4a      31f6           xor esi, esi
0x00003a4c      4889c2         mov rdx, rax
0x00003a4f      bf01000000     mov edi, 1
0x00003a54      31c0           xor eax, eax
0x00003a56      e8e5060000     call sym.nl_error
0x00003a5b      488d357e9f00.  lea rsi, str.cannot_combine_lcase_and_ucase ; 0xd9e0 ; "cannot combine lcase and ucase"
0x00003a62      ba05000000     mov edx, 5
0x00003a67      31ff           xor edi, edi
0x00003a69      e8f2e0ffff     call sym.imp.dcgettext
0x00003a6e      31f6           xor esi, esi
0x00003a70      4889c2         mov rdx, rax
0x00003a73      bf01000000     mov edi, 1
0x00003a78      31c0           xor eax, eax
0x00003a7a      e8c1060000     call sym.nl_error
0x00003a7f      4889442408     mov qword [rsp + 8], rax
0x00003a84      e919feffff     jmp 0x38a2
0x00003a89      4989c4         mov r12, rax
0x00003a8c      e911feffff     jmp 0x38a2
0x00003a91      488d35689f00.  lea rsi, str.cannot_combine_excl_and_nocreat ; 0xda00 ; "cannot combine excl and nocreat"
0x00003a98      ba05000000     mov edx, 5
0x00003a9d      31ff           xor edi, edi
0x00003a9f      e8bce0ffff     call sym.imp.dcgettext
0x00003aa4      31f6           xor esi, esi
0x00003aa6      4889c2         mov rdx, rax
0x00003aa9      bf01000000     mov edi, 1
0x00003aae      31c0           xor eax, eax
0x00003ab0      e88b060000     call sym.nl_error
0x00003ab5      488d35649f00.  lea rsi, str.cannot_combine_direct_and_nocache ; 0xda20 ; "cannot combine direct and nocache"
0x00003abc      ba05000000     mov edx, 5
0x00003ac1      31ff           xor edi, edi
0x00003ac3      e898e0ffff     call sym.imp.dcgettext
0x00003ac8      31f6           xor esi, esi
0x00003aca      4889c2         mov rdx, rax
0x00003acd      bf01000000     mov edi, 1
0x00003ad2      31c0           xor eax, eax
0x00003ad4      e867060000     call sym.nl_error
0x00003ad9      488b3500d920.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00003ae0      bf04000000     mov edi, 4
0x00003ae5      e8f64e0000     call sym.quotearg_style
0x00003aea      488d35258e00.  lea rsi, str.failed_to_open__s          ; 0xc916 ; "failed to open %s"
0x00003af1      ba05000000     mov edx, 5
0x00003af6      31ff           xor edi, edi
0x00003af8      4889c3         mov rbx, rax
0x00003afb      e860e0ffff     call sym.imp.dcgettext
0x00003b00      4889c2         mov rdx, rax
0x00003b03      488b442410     mov rax, qword [rsp + 0x10]
0x00003b08      4889d9         mov rcx, rbx
0x00003b0b      bf01000000     mov edi, 1
0x00003b10      8b30           mov esi, dword [rax]
0x00003b12      31c0           xor eax, eax
0x00003b14      e827060000     call sym.nl_error
0x00003b19      488d35289f00.  lea rsi, str.offset_too_large:_cannot_truncate_to_a_length_of_seek__lu___lu_byte__blocks ; 0xda48 ; "offset too large: cannot truncate to a length of seek=%lu (%lu-byte) blocks"
0x00003b20      ba05000000     mov edx, 5
0x00003b25      31ff           xor edi, edi
0x00003b27      e834e0ffff     call sym.imp.dcgettext
0x00003b2c      4d89f0         mov r8, r14
0x00003b2f      4889c2         mov rdx, rax
0x00003b32      4889e9         mov rcx, rbp
0x00003b35      31f6           xor esi, esi
0x00003b37      bf01000000     mov edi, 1
0x00003b3c      31c0           xor eax, eax
0x00003b3e      e8fd050000     call sym.nl_error
0x00003b43      488b3596d820.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00003b4a      bf04000000     mov edi, 4
0x00003b4f      e88c4e0000     call sym.quotearg_style
0x00003b54      488d354b8c00.  lea rsi, str.cannot_fstat__s            ; 0xc7a6 ; "cannot fstat %s"
0x00003b5b      ba05000000     mov edx, 5
0x00003b60      31ff           xor edi, edi
0x00003b62      4889c3         mov rbx, rax
0x00003b65      e8f6dfffff     call sym.imp.dcgettext
0x00003b6a      4889c2         mov rdx, rax
0x00003b6d      488b442410     mov rax, qword [rsp + 0x10]
0x00003b72      4889d9         mov rcx, rbx
0x00003b75      bf01000000     mov edi, 1
0x00003b7a      8b30           mov esi, dword [rax]
0x00003b7c      31c0           xor eax, eax
0x00003b7e      e8bd050000     call sym.nl_error
0x00003b83      488d3d688d00.  lea rdi, [0x0000c8f2]                   ; "fullblock"
0x00003b8a      e821510000     call sym.quote
0x00003b8f      488d35338d00.  lea rsi, str.invalid_output_flag        ; 0xc8c9 ; "invalid output flag"
0x00003b96      4889c3         mov rbx, rax
0x00003b99      ba05000000     mov edx, 5
0x00003b9e      31ff           xor edi, edi
0x00003ba0      e8bbdfffff     call sym.imp.dcgettext
0x00003ba5      488d15f38b00.  lea rdx, str.s:__s                      ; 0xc79f ; "%s: %s"
0x00003bac      4889c1         mov rcx, rax
0x00003baf      31ff           xor edi, edi
0x00003bb1      4989d8         mov r8, rbx
0x00003bb4      31f6           xor esi, esi
0x00003bb6      31c0           xor eax, eax
0x00003bb8      e883050000     call sym.nl_error
0x00003bbd      bf01000000     mov edi, 1
0x00003bc2      e869140000     call sym.usage
0x00003bc7      e8c4dfffff     call sym.imp.__stack_chk_fail
0x00003bcc      488b3515d820.  mov rsi, qword [obj.input_file]         ; [0x2113e8:8]=0
0x00003bd3      bf04000000     mov edi, 4
0x00003bd8      e8034e0000     call sym.quotearg_style
0x00003bdd      488d35328d00.  lea rsi, str.failed_to_open__s          ; 0xc916 ; "failed to open %s"
0x00003be4      ba05000000     mov edx, 5
0x00003be9      31ff           xor edi, edi
0x00003beb      4889c3         mov rbx, rax
0x00003bee      e86ddfffff     call sym.imp.dcgettext
0x00003bf3      4889c2         mov rdx, rax
0x00003bf6      488b442410     mov rax, qword [rsp + 0x10]
0x00003bfb      4889d9         mov rcx, rbx
0x00003bfe      bf01000000     mov edi, 1
0x00003c03      8b30           mov esi, dword [rax]
0x00003c05      31c0           xor eax, eax
0x00003c07      e834050000     call sym.nl_error
0x00003c0c      488d35759d00.  lea rsi, str.cannot_combine_any_two_of__ascii_ebcdic_ibm ; 0xd988 ; "cannot combine any two of {ascii,ebcdic,ibm}"
0x00003c13      ba05000000     mov edx, 5
0x00003c18      31ff           xor edi, edi
0x00003c1a      e841dfffff     call sym.imp.dcgettext
0x00003c1f      31f6           xor esi, esi
0x00003c21      4889c2         mov rdx, rax
0x00003c24      bf01000000     mov edi, 1
0x00003c29      31c0           xor eax, eax
0x00003c2b      e810050000     call sym.nl_error
0x00003c30      488d05ee8b00.  lea rax, [0x0000c825]                   ; "count_bytes"
0x00003c37      488d3df38b00.  lea rdi, [0x0000c831]                   ; "skip_bytes"
0x00003c3e      4080e604       and sil, 4
0x00003c42      480f45f8       cmovne rdi, rax
0x00003c46      e865500000     call sym.quote
0x00003c4b      ba05000000     mov edx, 5
0x00003c50      4889c3         mov rbx, rax
0x00003c53      488d356f8c00.  lea rsi, str.invalid_output_flag        ; 0xc8c9 ; "invalid output flag"
0x00003c5a      e93fffffff     jmp 0x3b9e
0x00003c5f      488d3d968c00.  lea rdi, [0x0000c8fc]                   ; "seek_bytes"
0x00003c66      e845500000     call sym.quote
0x00003c6b      ba05000000     mov edx, 5
0x00003c70      4889c3         mov rbx, rax
0x00003c73      488d353c8c00.  lea rsi, str.invalid_input_flag         ; 0xc8b6 ; "invalid input flag"
0x00003c7a      e91fffffff     jmp 0x3b9e
0x00003c7f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00003c80      31ed           xor ebp, ebp
0x00003c82      4989d1         mov r9, rdx
0x00003c85      5e             pop rsi
0x00003c86      4889e2         mov rdx, rsp
0x00003c89      4883e4f0       and rsp, 0xfffffffffffffff0
0x00003c8d      50             push rax
0x00003c8e      54             push rsp
0x00003c8f      4c8d053a8900.  lea r8, sym.__libc_csu_fini             ; 0xc5d0
0x00003c96      488d0dc38800.  lea rcx, sym.__libc_csu_init            ; 0xc560 ; "AWAVI\x89\xd7AUATL\x8d%\x1eE "
0x00003c9d      488d3d0ce2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1eb0 ; "AWAVAUATA\x89\xfcUSH\x8d=x\xa9"
0x00003ca4      ff1526d32000   call qword [reloc.__libc_start_main]    ; [0x210fd0:8]=0
0x00003caa      f4             hlt
0x00003cab      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003cb0      488d3df1d320.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2110a8
0x00003cb7      55             push rbp
0x00003cb8      488d05e9d320.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2110a8
0x00003cbf      4839f8         cmp rax, rdi
0x00003cc2      4889e5         mov rbp, rsp
0x00003cc5      7419           je 0x3ce0
0x00003cc7      488b05fad220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x210fc8:8]=0
0x00003cce      4885c0         test rax, rax
0x00003cd1      740d           je 0x3ce0
0x00003cd3      5d             pop rbp
0x00003cd4      ffe0           jmp rax
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ce0      5d             pop rbp
0x00003ce1      c3             ret
0x00003ce2      0f1f4000       nop dword [rax]
0x00003ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003cf0      488d3db1d320.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2110a8
0x00003cf7      488d35aad320.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2110a8
0x00003cfe      55             push rbp
0x00003cff      4829fe         sub rsi, rdi
0x00003d02      4889e5         mov rbp, rsp
0x00003d05      48c1fe03       sar rsi, 3
0x00003d09      4889f0         mov rax, rsi
0x00003d0c      48c1e83f       shr rax, 0x3f
0x00003d10      4801c6         add rsi, rax
0x00003d13      48d1fe         sar rsi, 1
0x00003d16      7418           je 0x3d30
0x00003d18      488b05c1d220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x210fe0:8]=0
0x00003d1f      4885c0         test rax, rax
0x00003d22      740c           je 0x3d30
0x00003d24      5d             pop rbp
0x00003d25      ffe0           jmp rax
0x00003d27      660f1f840000.  nop word [rax + rax]
0x00003d30      5d             pop rbp
0x00003d31      c3             ret
0x00003d32      0f1f4000       nop dword [rax]
0x00003d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003d40      803dc1d32000.  cmp byte [obj.completed.7697], 0        ; [0x211108:1]=0
0x00003d47      752f           jne 0x3d78
0x00003d49      48833d97d220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x210fe8:8]=0
0x00003d51      55             push rbp
0x00003d52      4889e5         mov rbp, rsp
0x00003d55      740c           je 0x3d63
0x00003d57      488b3daad220.  mov rdi, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x00003d5e      e83de1ffff     call sym..plt.got
0x00003d63      e848ffffff     call sym.deregister_tm_clones
0x00003d68      c60599d32000.  mov byte [obj.completed.7697], 1        ; [0x211108:1]=0
0x00003d6f      5d             pop rbp
0x00003d70      c3             ret
0x00003d71      0f1f80000000.  nop dword [rax]
0x00003d78      f3c3           ret
0x00003d7a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003d80      55             push rbp
0x00003d81      4889e5         mov rbp, rsp
0x00003d84      5d             pop rbp
0x00003d85      e966ffffff     jmp sym.register_tm_clones
0x00003d8a      660f1f440000   nop word [rax + rax]
;-- interrupt_handler:
0x00003d90      893ddad42000   mov dword [obj.interrupt_signal], edi   ; /src:879 ; [0x211270:4]=0
0x00003d96      c3             ret                                     ; /src:883
0x00003d97      660f1f840000.  nop word [rax + rax]
;-- siginfo_handler:
0x00003da0      8b05c6d42000   mov eax, dword [obj.info_signal_count]  ; /src:889 ; [0x21126c:4]=0
0x00003da6      83c001         add eax, 1
0x00003da9      8905bdd42000   mov dword [obj.info_signal_count], eax  ; [0x21126c:4]=0
0x00003daf      c3             ret                                     ; /src:893
;-- print_xfer_stats:
0x00003db0      4157           push r15                                ; /src:771
0x00003db2      4156           push r14
0x00003db4      4989fe         mov r14, rdi
0x00003db7      4155           push r13
0x00003db9      4154           push r12
0x00003dbb      55             push rbp
0x00003dbc      53             push rbx
0x00003dbd      4889fd         mov rbp, rdi
0x00003dc0      4881ece80700.  sub rsp, 0x7e8
0x00003dc7      64488b042528.  mov rax, qword fs:[0x28]
0x00003dd0      48898424d807.  mov qword [rsp + 0x7d8], rax
0x00003dd8      31c0           xor eax, eax
0x00003dda      4885ff         test rdi, rdi                           ; /src:772
0x00003ddd      0f844d020000   je 0x4030
0x00003de3      488d5c2410     lea rbx, [rsp + 0x10]                   ; /src:777
0x00003de8      488b3d69d520.  mov rdi, qword [obj.w_bytes]            ; [0x211358:8]=0
0x00003def      41b801000000   mov r8d, 1
0x00003df5      b901000000     mov ecx, 1
0x00003dfa      bad1010000     mov edx, 0x1d1
0x00003dff      4889de         mov rsi, rbx
0x00003e02      e819230000     call sym.human_readable
0x00003e07      488b3d4ad520.  mov rdi, qword [obj.w_bytes]            ; /src:778 ; [0x211358:8]=0
0x00003e0e      488db38e0200.  lea rsi, [rbx + 0x28e]
0x00003e15      41b801000000   mov r8d, 1
0x00003e1b      b901000000     mov ecx, 1
0x00003e20      baf1010000     mov edx, 0x1f1
0x00003e25      4989c4         mov r12, rax                            ; /src:777
0x00003e28      e8f3220000     call sym.human_readable                 ; /src:778
0x00003e2d      4989c5         mov r13, rax
0x00003e30      488b0519d520.  mov rax, qword [obj.start_time]         ; /src:785 ; [0x211350:8]=0
0x00003e37      4c39f0         cmp rax, r14
0x00003e3a      0f8d48010000   jge 0x3f88
0x00003e40      4929c6         sub r14, rax                            ; /src:790
0x00003e43      4d89f0         mov r8, r14
0x00003e46      0f8864020000   js 0x40b0
0x00003e4c      660fefc0       pxor xmm0, xmm0
0x00003e50      f2490f2ac6     cvtsi2sd xmm0, r14
0x00003e55      f20f5e0513a3.  divsd xmm0, qword [0x0000e170]
0x00003e5d      488b3df4d420.  mov rdi, qword [obj.w_bytes]            ; /src:791 ; [0x211358:8]=0
0x00003e64      488db31c0500.  lea rsi, [rbx + 0x51c]
0x00003e6b      b900ca9a3b     mov ecx, 0x3b9aca00
0x00003e70      bad1010000     mov edx, 0x1d1
0x00003e75      f20f11442408   movsd qword [rsp + 8], xmm0             ; /src:790
0x00003e7b      e8a0220000     call sym.human_readable                 ; /src:791
0x00003e80      4889c7         mov rdi, rax                            ; /coreutils-8.31/lib:128
0x00003e83      4889c3         mov rbx, rax                            ; /src:791
0x00003e86      e8f5dcffff     call sym.imp.strlen                     ; /coreutils-8.31/lib:128
0x00003e8b      b92f730000     mov ecx, 0x732f                         ; '/s'
0x00003e90      4885ed         test rbp, rbp                           ; /src:802
0x00003e93      c644030200     mov byte [rbx + rax + 2], 0             ; /coreutils-8.31/lib:128
0x00003e98      66890c03       mov word [rbx + rax], cx
0x00003e9c      f20f10442408   movsd xmm0, qword [rsp + 8]
0x00003ea2      4c8d05628700.  lea r8, str.g_s                         ; /src:811 ; 0xc60b ; "%g s"
0x00003ea9      0f852a010000   jne 0x3fd9                              ; /src:802
0x00003eaf      4c8db424c007.  lea r14, [rsp + 0x7c0]                  ; .//ib:64
0x00003eb7      b918000000     mov ecx, 0x18
0x00003ebc      ba01000000     mov edx, 1
0x00003ec1      be18000000     mov esi, 0x18
0x00003ec6      b801000000     mov eax, 1
0x00003ecb      4c89f7         mov rdi, r14
0x00003ece      e86ddbffff     call sym.imp.__snprintf_chk
0x00003ed3      4c89e7         mov rdi, r12                            ; /src:764
0x00003ed6      e8a5dcffff     call sym.imp.strlen
0x00003edb      41807c04fe20   cmp byte [r12 + rax - 2], 0x20          ; /src:821
0x00003ee1      0f8479010000   je 0x4060
0x00003ee7      4c89ef         mov rdi, r13                            ; /src:764
0x00003eea      e891dcffff     call sym.imp.strlen
0x00003eef      41807c05fe20   cmp byte [r13 + rax - 2], 0x20          ; /src:825
0x00003ef5      4c8b3d5cd420.  mov r15, qword [obj.w_bytes]            ; [0x211358:8]=0
0x00003efc      ba05000000     mov edx, 5                              ; /src:823
0x00003f01      0f8439010000   je 0x4040                               ; /src:825
0x00003f07      488d357a8a00.  lea rsi, str.lu_bytes___s___s__copied___s___s ; /src:826 ; 0xc988 ; "%lu bytes (%s, %s) copied, %s, %s"
0x00003f0e      31ff           xor edi, edi
0x00003f10      e84bdcffff     call sym.imp.dcgettext
0x00003f15      53             push rbx                                ; .//ib:97
0x00003f16      4156           push r14
0x00003f18      4d89e9         mov r9, r13
0x00003f1b      488b3dded120.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00003f22      4889c2         mov rdx, rax
0x00003f25      4d89e0         mov r8, r12
0x00003f28      4c89f9         mov rcx, r15
0x00003f2b      be01000000     mov esi, 1
0x00003f30      31c0           xor eax, eax
0x00003f32      e8f9deffff     call sym.imp.__fprintf_chk
0x00003f37      89c3           mov ebx, eax
0x00003f39      58             pop rax
0x00003f3a      5a             pop rdx
0x00003f3b      4885ed         test rbp, rbp                           ; /src:829
0x00003f3e      0f84c4000000   je 0x4008
0x00003f44      85db           test ebx, ebx                           ; /src:837
0x00003f46      780e           js 0x3f56
0x00003f48      8b0df2d32000   mov ecx, dword [obj.progress_len]       ; [0x211340:4]=0
0x00003f4e      39d9           cmp ecx, ebx
0x00003f50      0f8f82010000   jg 0x40d8
0x00003f56      891de4d32000   mov dword [obj.progress_len], ebx       ; /src:839 ; [0x211340:4]=0
0x00003f5c      488b8424d807.  mov rax, qword [rsp + 0x7d8]            ; /src:843
0x00003f64      644833042528.  xor rax, qword fs:[0x28]
0x00003f6d      0f85bf010000   jne 0x4132
0x00003f73      4881c4e80700.  add rsp, 0x7e8
0x00003f7a      5b             pop rbx
0x00003f7b      5d             pop rbp
0x00003f7c      415c           pop r12
0x00003f7e      415d           pop r13
0x00003f80      415e           pop r14
0x00003f82      415f           pop r15
0x00003f84      c3             ret
0x00003f85      0f1f00         nop dword [rax]
0x00003f88      488d35818600.  lea rsi, str.Infinity                   ; /src:798 ; 0xc610 ; "Infinity"
0x00003f8f      31ff           xor edi, edi
0x00003f91      ba05000000     mov edx, 5
0x00003f96      4881c31c0500.  add rbx, 0x51c                          ; .//ib:64
0x00003f9d      e8bedbffff     call sym.imp.dcgettext                  ; /src:798
0x00003fa2      4c8d05708600.  lea r8, str.s_B_s                       ; .//ib:64 ; 0xc619 ; "%s B/s"
0x00003fa9      4989c1         mov r9, rax                             ; /src:798
0x00003fac      b98e020000     mov ecx, 0x28e                          ; .//ib:64
0x00003fb1      31c0           xor eax, eax
0x00003fb3      ba01000000     mov edx, 1
0x00003fb8      be8e020000     mov esi, 0x28e
0x00003fbd      4889df         mov rdi, rbx
0x00003fc0      e87bdaffff     call sym.imp.__snprintf_chk
0x00003fc5      4885ed         test rbp, rbp                           ; /src:802
0x00003fc8      660fefc0       pxor xmm0, xmm0                         ; /src:797
0x00003fcc      4c8d05388600.  lea r8, str.g_s                         ; /src:811 ; 0xc60b ; "%g s"
0x00003fd3      0f84d6feffff   je 0x3eaf                               ; /src:802
0x00003fd9      488b3d20d120.  mov rdi, qword [obj.stderr]             ; /src:803 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00003fe0      488b4728       mov rax, qword [rdi + 0x28]             ; ../coreutils-8.31/src/.c:90
0x00003fe4      483b4730       cmp rax, qword [rdi + 0x30]
0x00003fe8      0f8322010000   jae 0x4110
0x00003fee      488d5001       lea rdx, [rax + 1]
0x00003ff2      4c8d050b8600.  lea r8, str..0f_s                       ; /src:811 ; 0xc604 ; "%.0f s"
0x00003ff9      48895728       mov qword [rdi + 0x28], rdx             ; ../coreutils-8.31/src/.c:90
0x00003ffd      c6000d         mov byte [rax], 0xd                     ; [0xd:1]=0
0x00004000      e9aafeffff     jmp 0x3eaf
0x00004005      0f1f00         nop dword [rax]
0x00004008      488b3df1d020.  mov rdi, qword [obj.stderr]             ; /src:842 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000400f      488b4728       mov rax, qword [rdi + 0x28]             ; ../coreutils-8.31/src/.c:90
0x00004013      483b4730       cmp rax, qword [rdi + 0x30]
0x00004017      0f83e3000000   jae 0x4100
0x0000401d      488d5001       lea rdx, [rax + 1]
0x00004021      48895728       mov qword [rdi + 0x28], rdx
0x00004025      c6000a         mov byte [rax], 0xa
0x00004028      e92fffffff     jmp 0x3f5c                              ; /src:843
0x0000402d      0f1f00         nop dword [rax]
0x00004030      e82b1f0000     call sym.gethrxtime                     ; /src:772
0x00004035      4989c6         mov r14, rax
0x00004038      e9a6fdffff     jmp 0x3de3
0x0000403d      0f1f00         nop dword [rax]
0x00004040      488d350a8600.  lea rsi, str.lu_bytes___s__copied___s___s ; /src:823 ; 0xc651 ; "%lu bytes (%s) copied, %s, %s"
0x00004047      31ff           xor edi, edi
0x00004049      e812dbffff     call sym.imp.dcgettext
0x0000404e      4883ec08       sub rsp, 8                              ; .//ib:97
0x00004052      4d89f1         mov r9, r14
0x00004055      53             push rbx
0x00004056      e9c0feffff     jmp 0x3f1b
0x0000405b      0f1f440000     nop dword [rax + rax]
0x00004060      4c8b25f1d220.  mov r12, qword [obj.w_bytes]            ; /src:816 ; [0x211358:8]=0
0x00004067      488d15b28500.  lea rdx, str.lu_bytes_copied___s___s    ; /src:817 ; 0xc620 ; "%lu bytes copied, %s, %s"
0x0000406e      488d35c48500.  lea rsi, str.lu_byte_copied___s___s     ; 0xc639 ; "%lu byte copied, %s, %s"
0x00004075      41b805000000   mov r8d, 5
0x0000407b      31ff           xor edi, edi
0x0000407d      4c89e1         mov rcx, r12
0x00004080      e84bddffff     call sym.imp.dcngettext
0x00004085      488b3d74d020.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000408c      4989d9         mov r9, rbx
0x0000408f      4889c2         mov rdx, rax
0x00004092      4d89f0         mov r8, r14
0x00004095      4c89e1         mov rcx, r12
0x00004098      be01000000     mov esi, 1
0x0000409d      31c0           xor eax, eax
0x0000409f      e88cddffff     call sym.imp.__fprintf_chk
0x000040a4      89c3           mov ebx, eax
0x000040a6      e990feffff     jmp 0x3f3b
0x000040ab      0f1f440000     nop dword [rax + rax]
0x000040b0      4c89f0         mov rax, r14                            ; /src:790
0x000040b3      4c89f2         mov rdx, r14
0x000040b6      660fefc0       pxor xmm0, xmm0
0x000040ba      48d1e8         shr rax, 1
0x000040bd      83e201         and edx, 1
0x000040c0      4809d0         or rax, rdx
0x000040c3      f2480f2ac0     cvtsi2sd xmm0, rax
0x000040c8      f20f58c0       addsd xmm0, xmm0
0x000040cc      e984fdffff     jmp 0x3e55
0x000040d1      0f1f80000000.  nop dword [rax]
0x000040d8      488b3d21d020.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000040df      4c8d05bba600.  lea r8, [0x0000e7a1]
0x000040e6      488d15828500.  lea rdx, [0x0000c66f]                   ; "%*s"
0x000040ed      29d9           sub ecx, ebx                            ; /src:838
0x000040ef      be01000000     mov esi, 1                              ; .//ib:97
0x000040f4      31c0           xor eax, eax
0x000040f6      e835ddffff     call sym.imp.__fprintf_chk
0x000040fb      e956feffff     jmp 0x3f56
0x00004100      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/src/.c:90
0x00004105      e8d6daffff     call sym.imp.__overflow
0x0000410a      e94dfeffff     jmp 0x3f5c
0x0000410f      90             nop
0x00004110      be0d000000     mov esi, 0xd
0x00004115      f20f11442408   movsd qword [rsp + 8], xmm0
0x0000411b      e8c0daffff     call sym.imp.__overflow
0x00004120      4c8d05dd8400.  lea r8, str..0f_s                       ; /src:811 ; 0xc604 ; "%.0f s"
0x00004127      f20f10442408   movsd xmm0, qword [rsp + 8]
0x0000412d      e97dfdffff     jmp 0x3eaf
0x00004132      e859daffff     call sym.imp.__stack_chk_fail           ; /src:843
0x00004137      660f1f840000.  nop word [rax + rax]
;-- nl_error:
0x00004140      55             push rbp                                ; /src:536
0x00004141      53             push rbx
0x00004142      89f5           mov ebp, esi
0x00004144      89fb           mov ebx, edi
0x00004146      4881ece80000.  sub rsp, 0xe8
0x0000414d      84c0           test al, al
0x0000414f      48894c2448     mov qword [rsp + 0x48], rcx
0x00004154      4c89442450     mov qword [rsp + 0x50], r8
0x00004159      4c894c2458     mov qword [rsp + 0x58], r9
0x0000415e      743a           je 0x419a
0x00004160      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00004165      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x0000416a      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00004172      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x0000417a      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00004182      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x0000418a      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00004192      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x0000419a      64488b042528.  mov rax, qword fs:[0x28]
0x000041a3      4889442428     mov qword [rsp + 0x28], rax
0x000041a8      31c0           xor eax, eax
0x000041aa      8b0590d12000   mov eax, dword [obj.progress_len]       ; /src:537 ; [0x211340:4]=0
0x000041b0      85c0           test eax, eax
0x000041b2      7e26           jle 0x41da
0x000041b4      488b3d45cf20.  mov rdi, qword [obj.stderr]             ; /src:539 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000041bb      488b4728       mov rax, qword [rdi + 0x28]             ; ../coreutils-8.31/src/.c:90
0x000041bf      483b4730       cmp rax, qword [rdi + 0x30]
0x000041c3      736b           jae 0x4230
0x000041c5      488d4801       lea rcx, [rax + 1]
0x000041c9      48894f28       mov qword [rdi + 0x28], rcx
0x000041cd      c6000a         mov byte [rax], 0xa
0x000041d0      c70566d12000.  mov dword [obj.progress_len], 0         ; /src:540 ; [0x211340:4]=0
0x000041da      488d84240001.  lea rax, [rsp + 0x100]                  ; /src:544
0x000041e2      488d4c2410     lea rcx, [rsp + 0x10]                   ; /src:545
0x000041e7      89ee           mov esi, ebp
0x000041e9      89df           mov edi, ebx
0x000041eb      c74424101800.  mov dword [rsp + 0x10], 0x18            ; /src:544 ; [0x18:4]=0x3c80 rip
0x000041f3      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x000041fb      4889442418     mov qword [rsp + 0x18], rax
0x00004200      488d442430     lea rax, [rsp + 0x30]
0x00004205      4889442420     mov qword [rsp + 0x20], rax
0x0000420a      e8814b0000     call sym.verror                         ; /src:545
0x0000420f      488b442428     mov rax, qword [rsp + 0x28]             ; /src:547
0x00004214      644833042528.  xor rax, qword fs:[0x28]
0x0000421d      7527           jne 0x4246
0x0000421f      4881c4e80000.  add rsp, 0xe8
0x00004226      5b             pop rbx
0x00004227      5d             pop rbp
0x00004228      c3             ret
0x00004229      0f1f80000000.  nop dword [rax]
0x00004230      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/src/.c:90
0x00004235      4889542408     mov qword [rsp + 8], rdx
0x0000423a      e8a1d9ffff     call sym.imp.__overflow
0x0000423f      488b542408     mov rdx, qword [rsp + 8]
0x00004244      eb8a           jmp 0x41d0
0x00004246      e845d9ffff     call sym.imp.__stack_chk_fail           ; /src:547
0x0000424b      0f1f440000     nop dword [rax + rax]
;-- parse_integer:
0x00004250      4155           push r13                                ; /src:1366
0x00004252      4154           push r12
0x00004254      4c8d05188400.  lea r8, str.bcEGkKMPTwYZ0               ; /src:1369 ; 0xc673 ; "bcEGkKMPTwYZ0"
0x0000425b      55             push rbp                                ; /src:1366
0x0000425c      53             push rbx
0x0000425d      4989f4         mov r12, rsi
0x00004260      ba0a000000     mov edx, 0xa                            ; /src:1369
0x00004265      4889fd         mov rbp, rdi                            ; /src:1366
0x00004268      4883ec28       sub rsp, 0x28
0x0000426c      488d4c2408     lea rcx, [rsp + 8]                      ; /src:1369
0x00004271      488d742410     lea rsi, [rsp + 0x10]
0x00004276      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1366
0x0000427f      4889442418     mov qword [rsp + 0x18], rax
0x00004284      31c0           xor eax, eax
0x00004286      e8c5530000     call sym.xstrtoumax                     ; /src:1369
0x0000428b      83f802         cmp eax, 2                              ; /src:1371
0x0000428e      89c2           mov edx, eax                            ; /src:1369
0x00004290      742e           je 0x42c0                               ; /src:1371
0x00004292      85d2           test edx, edx                           ; /src:1389
0x00004294      488b442408     mov rax, qword [rsp + 8]
0x00004299      752f           jne 0x42ca
0x0000429b      488b5c2418     mov rbx, qword [rsp + 0x18]             ; /src:1396
0x000042a0      6448331c2528.  xor rbx, qword fs:[0x28]
0x000042a9      0f85e1000000   jne 0x4390
0x000042af      4883c428       add rsp, 0x28
0x000042b3      5b             pop rbx
0x000042b4      5d             pop rbp
0x000042b5      415c           pop r12
0x000042b7      415d           pop r13
0x000042b9      c3             ret
0x000042ba      660f1f440000   nop word [rax + rax]
0x000042c0      488b7c2410     mov rdi, qword [rsp + 0x10]             ; /src:1371
0x000042c5      803f78         cmp byte [rdi], 0x78
0x000042c8      740e           je 0x42d8
0x000042ca      41891424       mov dword [r12], edx                    ; /src:1391
0x000042ce      31c0           xor eax, eax                            ; /src:1392
0x000042d0      ebc9           jmp 0x429b
0x000042d2      660f1f440000   nop word [rax + rax]
0x000042d8      4883c701       add rdi, 1                              ; /src:1373
0x000042dc      4c89e6         mov rsi, r12
0x000042df      e86cffffff     call sym.parse_integer
0x000042e4      4885c0         test rax, rax                           ; /src:1375
0x000042e7      4889c3         mov rbx, rax                            ; /src:1373
0x000042ea      7424           je 0x4310                               ; /src:1375
0x000042ec      488b4c2408     mov rcx, qword [rsp + 8]
0x000042f1      31d2           xor edx, edx
0x000042f3      4889c8         mov rax, rcx
0x000042f6      480fafc3       imul rax, rbx
0x000042fa      48f7f3         div rbx
0x000042fd      4839c1         cmp rcx, rax
0x00004300      7413           je 0x4315
0x00004302      41c704240100.  mov dword [r12], 1                      ; /src:1377
0x0000430a      31c0           xor eax, eax                            ; /src:1378
0x0000430c      eb8d           jmp 0x429b
0x0000430e      6690           nop
0x00004310      488b442408     mov rax, qword [rsp + 8]
0x00004315      4885c0         test rax, rax                           ; /src:1381
0x00004318      751e           jne 0x4338
0x0000431a      4c8d25618300.  lea r12, [0x0000c682]                   ; "0x"
0x00004321      b902000000     mov ecx, 2
0x00004326      4889ee         mov rsi, rbp
0x00004329      4c89e7         mov rdi, r12
0x0000432c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000432e      0f97c2         seta dl
0x00004331      80da00         sbb dl, 0
0x00004334      84d2           test dl, dl
0x00004336      7409           je 0x4341
0x00004338      480fafc3       imul rax, rbx                           ; /src:1387
0x0000433c      e95affffff     jmp 0x429b                              ; /src:1372
0x00004341      488d35398300.  lea rsi, [0x0000c681]                   ; /src:1382 ; "00x"
0x00004348      bf01000000     mov edi, 1
0x0000434d      e83e490000     call sym.quote_n
0x00004352      4c89e6         mov rsi, r12
0x00004355      31ff           xor edi, edi
0x00004357      4989c5         mov r13, rax
0x0000435a      e831490000     call sym.quote_n
0x0000435f      488d354a8600.  lea rsi, str.warning:__s_is_a_zero_multiplier__use__s_if_that_is_intended ; /src:1383 ; 0xc9b0 ; "warning: %s is a zero multiplier; use %s if that is intended"
0x00004366      4889c5         mov rbp, rax                            ; /src:1382
0x00004369      ba05000000     mov edx, 5                              ; /src:1383
0x0000436e      31ff           xor edi, edi
0x00004370      e8ebd7ffff     call sym.imp.dcgettext
0x00004375      4d89e8         mov r8, r13                             ; /src:1382
0x00004378      4889c2         mov rdx, rax
0x0000437b      4889e9         mov rcx, rbp
0x0000437e      31c0           xor eax, eax
0x00004380      31f6           xor esi, esi
0x00004382      31ff           xor edi, edi
0x00004384      e8b7fdffff     call sym.nl_error
0x00004389      488b442408     mov rax, qword [rsp + 8]
0x0000438e      eba8           jmp 0x4338
0x00004390      e8fbd7ffff     call sym.imp.__stack_chk_fail           ; /src:1396
0x00004395      90             nop
0x00004396      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_fd_flags:
0x000043a0      4155           push r13                                ; /src:2021
0x000043a2      4154           push r12
0x000043a4      55             push rbp
0x000043a5      53             push rbx
0x000043a6      89f3           mov ebx, esi                            ; /src:2025
0x000043a8      4881eca80000.  sub rsp, 0xa8                           ; /src:2021
0x000043af      64488b042528.  mov rax, qword fs:[0x28]
0x000043b8      488984249800.  mov qword [rsp + 0x98], rax
0x000043c0      31c0           xor eax, eax
0x000043c2      81e3fffefdff   and ebx, 0xfffdfeff                     ; /src:2025
0x000043c8      7525           jne 0x43ef
0x000043ca      488b84249800.  mov rax, qword [rsp + 0x98]             ; /src:2062
0x000043d2      644833042528.  xor rax, qword fs:[0x28]
0x000043db      0f85ca000000   jne 0x44ab
0x000043e1      4881c4a80000.  add rsp, 0xa8
0x000043e8      5b             pop rbx
0x000043e9      5d             pop rbp
0x000043ea      415c           pop r12
0x000043ec      415d           pop r13
0x000043ee      c3             ret
0x000043ef      be03000000     mov esi, 3                              ; /src:2027
0x000043f4      89fd           mov ebp, edi
0x000043f6      4989d5         mov r13, rdx
0x000043f9      e8f2580000     call sym.rpl_fcntl
0x000043fe      09c3           or ebx, eax                             ; /src:2028
0x00004400      85c0           test eax, eax                           ; /src:2030
0x00004402      4189c4         mov r12d, eax                           ; /src:2027
0x00004405      7851           js 0x4458                               ; /src:2030
0x00004407      39d8           cmp eax, ebx                            ; /src:2032
0x00004409      74bf           je 0x43ca
0x0000440b      f7c300000100   test ebx, 0x10000                       ; /src:2034
0x00004411      7517           jne 0x442a
0x00004413      31c0           xor eax, eax                            ; /src:2055
0x00004415      89da           mov edx, ebx
0x00004417      be04000000     mov esi, 4
0x0000441c      89ef           mov edi, ebp
0x0000441e      e8cd580000     call sym.rpl_fcntl
0x00004423      83c001         add eax, 1
0x00004426      75a2           jne 0x43ca
0x00004428      eb2e           jmp 0x4458
0x0000442a      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:465
0x0000442d      89ee           mov esi, ebp
0x0000442f      bf01000000     mov edi, 1
0x00004434      e8f7d8ffff     call sym.imp.__fxstat
0x00004439      85c0           test eax, eax                           ; /src:2039
0x0000443b      751b           jne 0x4458
0x0000443d      8b442418       mov eax, dword [rsp + 0x18]             ; /src:2041
0x00004441      2500f00000     and eax, 0xf000
0x00004446      3d00400000     cmp eax, 0x4000
0x0000444b      744a           je 0x4497
0x0000444d      e82ed6ffff     call sym.imp.__errno_location           ; /src:2043
0x00004452      c70014000000   mov dword [rax], 0x14                   ; [0x14:4]=1
0x00004458      4c89ee         mov rsi, r13                            ; /src:2060
0x0000445b      bf04000000     mov edi, 4
0x00004460      e87b450000     call sym.quotearg_style
0x00004465      488d35198200.  lea rsi, str.setting_flags_for__s       ; 0xc685 ; "setting flags for %s"
0x0000446c      ba05000000     mov edx, 5
0x00004471      31ff           xor edi, edi
0x00004473      4889c5         mov rbp, rax
0x00004476      e8e5d6ffff     call sym.imp.dcgettext
0x0000447b      4889c3         mov rbx, rax
0x0000447e      e8fdd5ffff     call sym.imp.__errno_location
0x00004483      8b30           mov esi, dword [rax]
0x00004485      4889e9         mov rcx, rbp
0x00004488      4889da         mov rdx, rbx
0x0000448b      bf01000000     mov edi, 1
0x00004490      31c0           xor eax, eax
0x00004492      e8a9fcffff     call sym.nl_error
0x00004497      81e3fffffeff   and ebx, 0xfffeffff                     ; /src:2051
0x0000449d      4439e3         cmp ebx, r12d                           ; /src:2054
0x000044a0      0f856dffffff   jne 0x4413
0x000044a6      e91fffffff     jmp 0x43ca
0x000044ab      e8e0d6ffff     call sym.imp.__stack_chk_fail           ; /src:2062
;-- skip_via_lseek:
0x000044b0      4156           push r14                                ; /src:1729
0x000044b2      4155           push r13
0x000044b4      4989fd         mov r13, rdi
0x000044b7      4154           push r12
0x000044b9      55             push rbp
0x000044ba      4189cc         mov r12d, ecx
0x000044bd      53             push rbx
0x000044be      89f3           mov ebx, esi
0x000044c0      4889d5         mov rbp, rdx
0x000044c3      be026d3080     mov esi, 0x80306d02                     ; /src:1732
0x000044c8      89df           mov edi, ebx
0x000044ca      4883ec70       sub rsp, 0x70                           ; /src:1729
0x000044ce      64488b042528.  mov rax, qword fs:[0x28]
0x000044d7      4889442468     mov qword [rsp + 0x68], rax
0x000044dc      31c0           xor eax, eax
0x000044de      4889e2         mov rdx, rsp                            ; /src:1732
0x000044e1      e86ad7ffff     call sym.imp.ioctl
0x000044e6      4889ee         mov rsi, rbp                            ; /src:1736
0x000044e9      4489e2         mov edx, r12d
0x000044ec      89df           mov edi, ebx
0x000044ee      4189c6         mov r14d, eax                           ; /src:1732
0x000044f1      e81ad7ffff     call sym.imp.lseek                      ; /src:1736
0x000044f6      4885c0         test rax, rax                           ; /src:1737
0x000044f9      4889c5         mov rbp, rax                            ; /src:1736
0x000044fc      783a           js 0x4538                               ; /src:1737
0x000044fe      4585f6         test r14d, r14d
0x00004501      7535           jne 0x4538
0x00004503      488d542430     lea rdx, [rsp + 0x30]                   ; /src:1739
0x00004508      31c0           xor eax, eax
0x0000450a      be026d3080     mov esi, 0x80306d02
0x0000450f      89df           mov edi, ebx
0x00004511      e83ad7ffff     call sym.imp.ioctl
0x00004516      85c0           test eax, eax
0x00004518      751e           jne 0x4538
0x0000451a      488b442438     mov rax, qword [rsp + 0x38]             ; /src:1740
0x0000451f      4839442408     cmp qword [rsp + 8], rax
0x00004524      7512           jne 0x4538
0x00004526      488b442458     mov rax, qword [rsp + 0x58]
0x0000452b      4839442428     cmp qword [rsp + 0x28], rax
0x00004530      7426           je 0x4558
0x00004532      660f1f440000   nop word [rax + rax]
0x00004538      488b4c2468     mov rcx, qword [rsp + 0x68]             ; /src:1752
0x0000453d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004546      4889e8         mov rax, rbp
0x00004549      7553           jne 0x459e
0x0000454b      4883c470       add rsp, 0x70
0x0000454f      5b             pop rbx
0x00004550      5d             pop rbp
0x00004551      415c           pop r12
0x00004553      415d           pop r13
0x00004555      415e           pop r14
0x00004557      c3             ret
0x00004558      833dbdca2000.  cmp dword [obj.status_level], 1         ; /src:1742 ; [0x21101c:4]=3
0x0000455f      742c           je 0x458d
0x00004561      488b5c2430     mov rbx, qword [rsp + 0x30]             ; /src:1743
0x00004566      488d35838400.  lea rsi, str.warning:_working_around_lseek_kernel_bug_for_file___s_____of_mt_type_0x_0lx____see__sys_mtio.h__for_the_list_of_types ; 0xc9f0 ; "warning: working around lseek kernel bug for file (%s)\n  of mt_type=0x%0lx -- see <sys/mtio.h> for the list of types"
0x0000456d      ba05000000     mov edx, 5
0x00004572      31ff           xor edi, edi
0x00004574      e8e7d5ffff     call sym.imp.dcgettext
0x00004579      4989d8         mov r8, rbx
0x0000457c      4889c2         mov rdx, rax
0x0000457f      4c89e9         mov rcx, r13
0x00004582      31f6           xor esi, esi
0x00004584      31ff           xor edi, edi
0x00004586      31c0           xor eax, eax
0x00004588      e8b3fbffff     call sym.nl_error
0x0000458d      e8eed4ffff     call sym.imp.__errno_location           ; /src:1747
0x00004592      4883cdff       or rbp, 0xffffffffffffffff              ; /src:1748
0x00004596      c70000000000   mov dword [rax], 0                      ; /src:1747
0x0000459c      eb9a           jmp 0x4538                              ; /src:1751
0x0000459e      e8edd5ffff     call sym.imp.__stack_chk_fail           ; /src:1752
0x000045a3      0f1f00         nop dword [rax]
0x000045a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- invalidate_cache:
0x000045b0      4157           push r15                                ; /src:1039
0x000045b2      4156           push r14
0x000045b4      4155           push r13
0x000045b6      4154           push r12
0x000045b8      55             push rbp
0x000045b9      53             push rbx
0x000045ba      4883ec08       sub rsp, 8
0x000045be      85ff           test edi, edi                           ; /src:1042
0x000045c0      0f858a000000   jne 0x4650
0x000045c6      440fb63d9bcc.  movzx r15d, byte [obj.i_nocache_eof]    ; [0x211269:1]=0
0x000045ce      488d0553cb20.  lea rax, obj.i_pending.7166             ; /src:1016 ; 0x211128
0x000045d5      4885f6         test rsi, rsi                           ; /src:1018
0x000045d8      488b18         mov rbx, qword [rax]
0x000045db      7433           je 0x4610
0x000045dd      4801f3         add rbx, rsi                            ; /src:1020
0x000045e0      4989de         mov r14, rbx                            ; /src:1021
0x000045e3      4181e6ffff01.  and r14d, 0x1ffff
0x000045ea      4c39f3         cmp rbx, r14                            ; /src:1022
0x000045ed      4c8930         mov qword [rax], r14                    ; /src:1021
0x000045f0      7776           ja 0x4668                               ; /src:1022
0x000045f2      41bc01000000   mov r12d, 1                             ; /src:1047
0x000045f8      4883c408       add rsp, 8                              ; /src:1101
0x000045fc      4489e0         mov eax, r12d
0x000045ff      5b             pop rbx
0x00004600      5d             pop rbp
0x00004601      415c           pop r12
0x00004603      415d           pop r13
0x00004605      415e           pop r14
0x00004607      415f           pop r15
0x00004609      c3             ret
0x0000460a      660f1f440000   nop word [rax + rax]
0x00004610      4885db         test rbx, rbx                           ; /src:1048
0x00004613      7505           jne 0x461a
0x00004615      4584ff         test r15b, r15b
0x00004618      74d8           je 0x45f2
0x0000461a      4531f6         xor r14d, r14d                          ; /src:1050
0x0000461d      85ff           test edi, edi                           ; /src:1052
0x0000461f      4889f5         mov rbp, rsi
0x00004622      4189fd         mov r13d, edi
0x00004625      7549           jne 0x4670
0x00004627      440fb6250dcd.  movzx r12d, byte [obj.input_seekable]   ; /src:1054 ; [0x21133c:1]=0
0x0000462f      488b35facc20.  mov rsi, qword [obj.input_offset]       ; /src:1055 ; [0x211330:8]=0
0x00004636      4584e4         test r12b, r12b                         ; /src:1054
0x00004639      7561           jne 0x469c
0x0000463b      e840d4ffff     call sym.imp.__errno_location           ; /src:1059
0x00004640      c7001d000000   mov dword [rax], 0x1d                   ; [0x1d:4]=0x40000000
0x00004646      ebb0           jmp 0x45f8
0x00004648      0f1f84000000.  nop dword [rax + rax]
0x00004650      440fb63d10cc.  movzx r15d, byte [obj.o_nocache_eof]    ; /src:1042 ; [0x211268:1]=0
0x00004658      488d05c1ca20.  lea rax, obj.o_pending.7167             ; /src:1016 ; 0x211120
0x0000465f      e971ffffff     jmp 0x45d5
0x00004664      0f1f4000       nop dword [rax]
0x00004668      4c29f3         sub rbx, r14                            ; /src:1046
0x0000466b      7485           je 0x45f2
0x0000466d      ebae           jmp 0x461d
0x0000466f      90             nop
0x00004670      488b3599c920.  mov rsi, qword [obj.output_offset.7179] ; /src:1066 ; [0x211010:8]=-2
0x00004677      4531e4         xor r12d, r12d
0x0000467a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000467e      0f8474ffffff   je 0x45f8
0x00004684      4885f6         test rsi, rsi                           ; /src:1068
0x00004687      787f           js 0x4708
0x00004689      4885ed         test rbp, rbp                           ; /src:1070
0x0000468c      741a           je 0x46a8
0x0000468e      498d041e       lea rax, [r14 + rbx]                    ; /src:1071
0x00004692      4801c6         add rsi, rax
0x00004695      48893574c920.  mov qword [obj.output_offset.7179], rsi ; [0x211010:8]=-2
0x0000469c      4531e4         xor r12d, r12d
0x0000469f      4885f6         test rsi, rsi                           ; /src:1077
0x000046a2      0f8850ffffff   js 0x45f8
0x000046a8      4829de         sub rsi, rbx
0x000046ab      4885ed         test rbp, rbp                           ; /src:1079
0x000046ae      7540           jne 0x46f0
0x000046b0      4885db         test rbx, rbx
0x000046b3      743b           je 0x46f0
0x000046b5      4584ff         test r15b, r15b
0x000046b8      7446           je 0x4700
0x000046ba      4889f0         mov rax, rsi                            ; /src:1093
0x000046bd      31d2           xor edx, edx
0x000046bf      31db           xor ebx, ebx
0x000046c1      48f73510cd20.  div qword [obj.page_size]
0x000046c8      4829d6         sub rsi, rdx
0x000046cb      b904000000     mov ecx, 4                              ; /src:1094
0x000046d0      4889da         mov rdx, rbx
0x000046d3      4489ef         mov edi, r13d
0x000046d6      e895d5ffff     call sym.imp.posix_fadvise
0x000046db      83f8ff         cmp eax, 0xffffffff
0x000046de      410f95c4       setne r12b
0x000046e2      e911ffffff     jmp 0x45f8
0x000046e7      660f1f840000.  nop word [rax + rax]
0x000046f0      4c29f6         sub rsi, r14                            ; /src:1090
0x000046f3      4885db         test rbx, rbx                           ; /src:1092
0x000046f6      75d3           jne 0x46cb
0x000046f8      ebc0           jmp 0x46ba
0x000046fa      660f1f440000   nop word [rax + rax]
0x00004700      4c29f6         sub rsi, r14                            ; /src:1090
0x00004703      ebc6           jmp 0x46cb
0x00004705      0f1f00         nop dword [rax]
0x00004708      31f6           xor esi, esi                            ; /src:1069
0x0000470a      ba01000000     mov edx, 1
0x0000470f      bf01000000     mov edi, 1
0x00004714      e8f7d4ffff     call sym.imp.lseek
0x00004719      4889c6         mov rsi, rax
0x0000471c      488905edc820.  mov qword [obj.output_offset.7179], rax ; [0x211010:8]=-2
0x00004723      e974ffffff     jmp 0x469c
0x00004728      0f1f84000000.  nop dword [rax + rax]
;-- maybe_close_stdout:
0x00004730      803de1c82000.  cmp byte [obj.close_stdout_required], 0 ; /src:525 ; [0x211018:1]=1
0x00004737      751f           jne 0x4758
0x00004739      4883ec08       sub rsp, 8
0x0000473d      488b3dbcc920.  mov rdi, qword [obj.stderr]             ; /src:528 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00004744      e867160000     call sym.close_stream
0x00004749      85c0           test eax, eax
0x0000474b      7510           jne 0x475d
0x0000474d      4883c408       add rsp, 8                              ; /src:530
0x00004751      c3             ret
0x00004752      660f1f440000   nop word [rax + rax]
0x00004758      e9f3160000     jmp sym.close_stdout                    ; /src:527
0x0000475d      bf01000000     mov edi, 1                              ; /src:529
0x00004762      e859d3ffff     call sym.imp._exit
0x00004767      660f1f840000.  nop word [rax + rax]
;-- print_stats.part.2:
0x00004770      4155           push r13                                ; /src:846
0x00004772      4154           push r12
0x00004774      55             push rbp
0x00004775      53             push rbx
0x00004776      4883ec08       sub rsp, 8
0x0000477a      8b0dc0cb2000   mov ecx, dword [obj.progress_len]       ; /src:851 ; [0x211340:4]=0
0x00004780      85c9           test ecx, ecx
0x00004782      7e2a           jle 0x47ae
0x00004784      488b3d75c920.  mov rdi, qword [obj.stderr]             ; /src:853 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000478b      488b4728       mov rax, qword [rdi + 0x28]             ; ../coreutils-8.31/src/.c:90
0x0000478f      483b4730       cmp rax, qword [rdi + 0x30]
0x00004793      0f83e7000000   jae 0x4880
0x00004799      488d5001       lea rdx, [rax + 1]
0x0000479d      48895728       mov qword [rdi + 0x28], rdx
0x000047a1      c6000a         mov byte [rax], 0xa
0x000047a4      c70592cb2000.  mov dword [obj.progress_len], 0         ; /src:854 ; [0x211340:4]=0
0x000047ae      4c8b2dc3cb20.  mov r13, qword [obj.w_partial]          ; /src:857 ; [0x211378:8]=0
0x000047b5      488d35ac8200.  lea rsi, str.lu__lu_records_in___lu__lu_records_out ; /src:858 ; 0xca68 ; "%lu+%lu records in\n%lu+%lu records out\n"
0x000047bc      488b1d9dcb20.  mov rbx, qword [obj.r_full]             ; /src:857 ; [0x211360:8]=0
0x000047c3      31ff           xor edi, edi                            ; /src:858
0x000047c5      4c8b25a4cb20.  mov r12, qword [obj.w_full]             ; /src:857 ; [0x211370:8]=0
0x000047cc      488b2d95cb20.  mov rbp, qword [obj.r_partial]          ; [0x211368:8]=0
0x000047d3      ba05000000     mov edx, 5                              ; /src:858
0x000047d8      e883d3ffff     call sym.imp.dcgettext
0x000047dd      4883ec08       sub rsp, 8                              ; .//ib:97
0x000047e1      488b3d18c920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x000047e8      4889c2         mov rdx, rax
0x000047eb      4155           push r13
0x000047ed      4889d9         mov rcx, rbx
0x000047f0      31c0           xor eax, eax
0x000047f2      4d89e1         mov r9, r12
0x000047f5      4989e8         mov r8, rbp
0x000047f8      be01000000     mov esi, 1
0x000047fd      e82ed6ffff     call sym.imp.__fprintf_chk
0x00004802      488b1d17cb20.  mov rbx, qword [obj.r_truncate]         ; /src:862 ; [0x211320:8]=0
0x00004809      58             pop rax
0x0000480a      5a             pop rdx
0x0000480b      4885db         test rbx, rbx
0x0000480e      7530           jne 0x4840
0x00004810      833d05c82000.  cmp dword [obj.status_level], 2         ; /src:869 ; [0x21101c:4]=3
0x00004817      7417           je 0x4830
0x00004819      4883c408       add rsp, 8                              ; /src:873
0x0000481d      31ff           xor edi, edi                            ; /src:872
0x0000481f      5b             pop rbx                                 ; /src:873
0x00004820      5d             pop rbp
0x00004821      415c           pop r12
0x00004823      415d           pop r13
0x00004825      e986f5ffff     jmp sym.print_xfer_stats                ; /src:872
0x0000482a      660f1f440000   nop word [rax + rax]
0x00004830      4883c408       add rsp, 8                              ; /src:873
0x00004834      5b             pop rbx
0x00004835      5d             pop rbp
0x00004836      415c           pop r12
0x00004838      415d           pop r13
0x0000483a      c3             ret
0x0000483b      0f1f440000     nop dword [rax + rax]
0x00004840      488d15537e00.  lea rdx, str.lu_truncated_records       ; /src:864 ; 0xc69a ; "%lu truncated records\n"
0x00004847      488d35637e00.  lea rsi, str.lu_truncated_record        ; 0xc6b1 ; "%lu truncated record\n"
0x0000484e      4889d9         mov rcx, rbx
0x00004851      31ff           xor edi, edi
0x00004853      41b805000000   mov r8d, 5
0x00004859      e872d5ffff     call sym.imp.dcngettext
0x0000485e      488b3d9bc820.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00004865      4889c2         mov rdx, rax
0x00004868      4889d9         mov rcx, rbx
0x0000486b      be01000000     mov esi, 1
0x00004870      31c0           xor eax, eax
0x00004872      e8b9d5ffff     call sym.imp.__fprintf_chk
0x00004877      eb97           jmp 0x4810
0x00004879      0f1f80000000.  nop dword [rax]
0x00004880      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/src/.c:90
0x00004885      e856d3ffff     call sym.imp.__overflow
0x0000488a      e915ffffff     jmp 0x47a4
0x0000488f      90             nop
;-- cleanup:
0x00004890      55             push rbp                                ; /src:947
0x00004891      53             push rbx
0x00004892      31ff           xor edi, edi                            ; /src:948
0x00004894      4883ec08       sub rsp, 8                              ; /src:947
0x00004898      e8c3d3ffff     call sym.imp.close                      ; /src:948
0x0000489d      85c0           test eax, eax
0x0000489f      7815           js 0x48b6
0x000048a1      bf01000000     mov edi, 1                              ; /src:954
0x000048a6      e8b5d3ffff     call sym.imp.close
0x000048ab      85c0           test eax, eax
0x000048ad      784a           js 0x48f9
0x000048af      4883c408       add rsp, 8                              ; /src:957
0x000048b3      5b             pop rbx
0x000048b4      5d             pop rbp
0x000048b5      c3             ret
0x000048b6      488b352bcb20.  mov rsi, qword [obj.input_file]         ; /src:949 ; [0x2113e8:8]=0
0x000048bd      bf04000000     mov edi, 4
0x000048c2      e819410000     call sym.quotearg_style
0x000048c7      488d35f97d00.  lea rsi, str.closing_input_file__s      ; 0xc6c7 ; "closing input file %s"
0x000048ce      ba05000000     mov edx, 5
0x000048d3      31ff           xor edi, edi
0x000048d5      4889c5         mov rbp, rax
0x000048d8      e883d2ffff     call sym.imp.dcgettext
0x000048dd      4889c3         mov rbx, rax
0x000048e0      e89bd1ffff     call sym.imp.__errno_location
0x000048e5      8b30           mov esi, dword [rax]
0x000048e7      4889e9         mov rcx, rbp
0x000048ea      4889da         mov rdx, rbx
0x000048ed      bf01000000     mov edi, 1
0x000048f2      31c0           xor eax, eax
0x000048f4      e847f8ffff     call sym.nl_error
0x000048f9      488b35e0ca20.  mov rsi, qword [obj.output_file]        ; /src:955 ; [0x2113e0:8]=0
0x00004900      bf04000000     mov edi, 4
0x00004905      e8d6400000     call sym.quotearg_style
0x0000490a      488d35cc7d00.  lea rsi, str.closing_output_file__s     ; 0xc6dd ; "closing output file %s"
0x00004911      ba05000000     mov edx, 5
0x00004916      31ff           xor edi, edi
0x00004918      4889c5         mov rbp, rax
0x0000491b      e840d2ffff     call sym.imp.dcgettext
0x00004920      4889c3         mov rbx, rax
0x00004923      e858d1ffff     call sym.imp.__errno_location
0x00004928      8b30           mov esi, dword [rax]
0x0000492a      4889e9         mov rcx, rbp
0x0000492d      4889da         mov rdx, rbx
0x00004930      bf01000000     mov edi, 1
0x00004935      31c0           xor eax, eax
0x00004937      e804f8ffff     call sym.nl_error
0x0000493c      0f1f4000       nop dword [rax]
;-- process_signals:
0x00004940      55             push rbp                                ; /src:965
0x00004941      53             push rbx
0x00004942      4881ec980000.  sub rsp, 0x98
0x00004949      64488b042528.  mov rax, qword fs:[0x28]
0x00004952      488984248800.  mov qword [rsp + 0x88], rax
0x0000495a      31c0           xor eax, eax
0x0000495c      4889e5         mov rbp, rsp                            ; /src:972
0x0000495f      90             nop
0x00004960      8b050ac92000   mov eax, dword [obj.interrupt_signal]   ; /src:966 ; [0x211270:4]=0
0x00004966      85c0           test eax, eax
0x00004968      750a           jne 0x4974
0x0000496a      8b05fcc82000   mov eax, dword [obj.info_signal_count]  ; [0x21126c:4]=0
0x00004970      85c0           test eax, eax
0x00004972      747c           je 0x49f0
0x00004974      488d3505c920.  lea rsi, obj.caught_signals             ; /src:972 ; 0x211280
0x0000497b      31ff           xor edi, edi
0x0000497d      4889ea         mov rdx, rbp
0x00004980      e8abd0ffff     call sym.imp.sigprocmask
0x00004985      8b1de5c82000   mov ebx, dword [obj.interrupt_signal]   ; /src:976 ; [0x211270:4]=0
0x0000498b      8b05dbc82000   mov eax, dword [obj.info_signal_count]  ; /src:977 ; [0x21126c:4]=0
0x00004991      85c0           test eax, eax                           ; /src:979
0x00004993      7409           je 0x499e
0x00004995      83e801         sub eax, 1                              ; /src:980
0x00004998      8905cec82000   mov dword [obj.info_signal_count], eax  ; [0x21126c:4]=0
0x0000499e      31d2           xor edx, edx                            ; /src:982
0x000049a0      4889ee         mov rsi, rbp
0x000049a3      bf02000000     mov edi, 2
0x000049a8      e883d0ffff     call sym.imp.sigprocmask
0x000049ad      85db           test ebx, ebx                           ; /src:984
0x000049af      7517           jne 0x49c8
0x000049b1      833d64c62000.  cmp dword [obj.status_level], 1         ; /src:848 ; [0x21101c:4]=3
0x000049b8      74a6           je 0x4960
0x000049ba      e8b1fdffff     call sym.print_stats.part.2
0x000049bf      eb9f           jmp 0x4960
0x000049c1      0f1f80000000.  nop dword [rax]
0x000049c8      e8c3feffff     call sym.cleanup                        ; /src:985
0x000049cd      833d48c62000.  cmp dword [obj.status_level], 1         ; /src:848 ; [0x21101c:4]=3
0x000049d4      7405           je 0x49db
0x000049d6      e895fdffff     call sym.print_stats.part.2
0x000049db      89df           mov edi, ebx                            ; /src:988
0x000049dd      e86ed0ffff     call sym.imp.raise
0x000049e2      e979ffffff     jmp 0x4960
0x000049e7      660f1f840000.  nop word [rax + rax]
0x000049f0      488b84248800.  mov rax, qword [rsp + 0x88]             ; /src:990
0x000049f8      644833042528.  xor rax, qword fs:[0x28]
0x00004a01      750a           jne 0x4a0d
0x00004a03      4881c4980000.  add rsp, 0x98
0x00004a0a      5b             pop rbx
0x00004a0b      5d             pop rbp
0x00004a0c      c3             ret
0x00004a0d      e87ed1ffff     call sym.imp.__stack_chk_fail
0x00004a12      0f1f4000       nop dword [rax]
0x00004a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- ifd_reopen:
0x00004a20      4156           push r14                                ; /src:1278
0x00004a22      4189fe         mov r14d, edi
0x00004a25      4155           push r13
0x00004a27      4989f5         mov r13, rsi
0x00004a2a      4154           push r12
0x00004a2c      4189d4         mov r12d, edx
0x00004a2f      55             push rbp
0x00004a30      89cd           mov ebp, ecx
0x00004a32      53             push rbx
0x00004a33      eb0d           jmp 0x4a42
0x00004a35      0f1f00         nop dword [rax]
0x00004a38      e843d0ffff     call sym.imp.__errno_location           ; /src:1286
0x00004a3d      833804         cmp dword [rax], 4
0x00004a40      751b           jne 0x4a5d
0x00004a42      e8f9feffff     call sym.process_signals                ; /src:1283
0x00004a47      89e9           mov ecx, ebp                            ; /src:1284
0x00004a49      4489e2         mov edx, r12d
0x00004a4c      4c89ee         mov rsi, r13
0x00004a4f      4489f7         mov edi, r14d
0x00004a52      e8a9140000     call sym.fd_reopen
0x00004a57      85c0           test eax, eax                           ; /src:1286
0x00004a59      89c3           mov ebx, eax                            ; /src:1284
0x00004a5b      78db           js 0x4a38                               ; /src:1286
0x00004a5d      89d8           mov eax, ebx                            ; /src:1289
0x00004a5f      5b             pop rbx
0x00004a60      5d             pop rbp
0x00004a61      415c           pop r12
0x00004a63      415d           pop r13
0x00004a65      415e           pop r14
0x00004a67      c3             ret
0x00004a68      0f1f84000000.  nop dword [rax + rax]
;-- iread:
0x00004a70      4155           push r13                                ; /src:1109
0x00004a72      4154           push r12
0x00004a74      4189fd         mov r13d, edi
0x00004a77      55             push rbp
0x00004a78      53             push rbx
0x00004a79      4989f4         mov r12, rsi
0x00004a7c      4889d5         mov rbp, rdx
0x00004a7f      4883ec08       sub rsp, 8
0x00004a83      eb19           jmp 0x4a9e
0x00004a85      0f1f00         nop dword [rax]
0x00004a88      4883f800       cmp rax, 0                              ; /src:1127
0x00004a8c      7d72           jge 0x4b00
0x00004a8e      e8edcfffff     call sym.imp.__errno_location
0x00004a93      8b10           mov edx, dword [rax]
0x00004a95      83fa04         cmp edx, 4
0x00004a98      0f85cc000000   jne 0x4b6a
0x00004a9e      e89dfeffff     call sym.process_signals                ; /src:1115
0x00004aa3      4889ea         mov rdx, rbp                            ; stdio2.h:44    _G_va_list __ap))
0x00004aa6      4c89e6         mov rsi, r12
0x00004aa9      4489ef         mov edi, r13d
0x00004aac      e8cfd1ffff     call sym.imp.read
0x00004ab1      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:1119
0x00004ab5      4889c3         mov rbx, rax                            ; stdio2.h:44    _G_va_list __ap))
0x00004ab8      75ce           jne 0x4a88                              ; /src:1119
0x00004aba      e8c1cfffff     call sym.imp.__errno_location
0x00004abf      8b10           mov edx, dword [rax]
0x00004ac1      83fa16         cmp edx, 0x16
0x00004ac4      75cf           jne 0x4a95
0x00004ac6      488b156bc620.  mov rdx, qword [obj.prev_nread.7186]    ; /src:1120 ; [0x211138:8]=0
0x00004acd      4885d2         test rdx, rdx
0x00004ad0      7e12           jle 0x4ae4
0x00004ad2      4839ea         cmp rdx, rbp
0x00004ad5      730d           jae 0x4ae4
0x00004ad7      f605abc82000.  test byte [0x00211389], 0x40            ; /src:1121 ; [0x211389:1]=0
0x00004ade      0f8594000000   jne 0x4b78
0x00004ae4      48891d4dc620.  mov qword [obj.prev_nread.7186], rbx    ; /src:1149 ; [0x211138:8]=0
0x00004aeb      4883c408       add rsp, 8                              ; /src:1151
0x00004aef      4889d8         mov rax, rbx
0x00004af2      5b             pop rbx
0x00004af3      5d             pop rbp
0x00004af4      415c           pop r12
0x00004af6      415d           pop r13
0x00004af8      c3             ret
0x00004af9      0f1f80000000.  nop dword [rax]
0x00004b00      7e68           jle 0x4b6a                              ; /src:1130
0x00004b02      4839e8         cmp rax, rbp
0x00004b05      7363           jae 0x4b6a
0x00004b07      e834feffff     call sym.process_signals                ; /src:1131
0x00004b0c      803d15c82000.  cmp byte [obj.warn_partial_read], 0     ; /src:1133 ; [0x211328:1]=0
0x00004b13      74cf           je 0x4ae4
0x00004b15      4c8b251cc620.  mov r12, qword [obj.prev_nread.7186]    ; /src:1135 ; [0x211138:8]=0
0x00004b1c      4d85e4         test r12, r12
0x00004b1f      7ec3           jle 0x4ae4
0x00004b21      4939ec         cmp r12, rbp
0x00004b24      73be           jae 0x4ae4
0x00004b26      833defc42000.  cmp dword [obj.status_level], 1         ; /src:1138 ; [0x21101c:4]=3
0x00004b2d      742f           je 0x4b5e
0x00004b2f      488d155a7f00.  lea rdx, str.warning:_partial_read___lu_bytes___suggest_iflag_fullblock ; /src:1139 ; 0xca90 ; "warning: partial read (%lu bytes); suggest iflag=fullblock"
0x00004b36      488d35937f00.  lea rsi, str.warning:_partial_read___lu_byte___suggest_iflag_fullblock ; 0xcad0 ; "warning: partial read (%lu byte); suggest iflag=fullblock"
0x00004b3d      4c89e1         mov rcx, r12
0x00004b40      31ff           xor edi, edi
0x00004b42      41b805000000   mov r8d, 5
0x00004b48      e883d2ffff     call sym.imp.dcngettext
0x00004b4d      4c89e1         mov rcx, r12
0x00004b50      4889c2         mov rdx, rax
0x00004b53      31f6           xor esi, esi
0x00004b55      31ff           xor edi, edi
0x00004b57      31c0           xor eax, eax
0x00004b59      e8e2f5ffff     call sym.nl_error
0x00004b5e      c605c3c72000.  mov byte [obj.warn_partial_read], 0     ; /src:1145 ; [0x211328:1]=0
0x00004b65      e97affffff     jmp 0x4ae4
0x00004b6a      4885db         test rbx, rbx                           ; /src:1133
0x00004b6d      7f9d           jg 0x4b0c
0x00004b6f      e970ffffff     jmp 0x4ae4
0x00004b74      0f1f4000       nop dword [rax]
0x00004b78      c70000000000   mov dword [rax], 0                      ; /src:1123
0x00004b7e      31db           xor ebx, ebx                            ; /src:1124
0x00004b80      e95fffffff     jmp 0x4ae4
0x00004b85      90             nop
0x00004b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- iread_fullblock:
0x00004b90      4885d2         test rdx, rdx                           ; /src:1156
0x00004b93      7459           je 0x4bee
0x00004b95      4155           push r13
0x00004b97      4154           push r12
0x00004b99      4189fd         mov r13d, edi
0x00004b9c      55             push rbp
0x00004b9d      53             push rbx
0x00004b9e      4889f5         mov rbp, rsi
0x00004ba1      4889d3         mov rbx, rdx
0x00004ba4      4531e4         xor r12d, r12d                          ; /src:1157
0x00004ba7      4883ec08       sub rsp, 8                              ; /src:1156
0x00004bab      eb10           jmp 0x4bbd
0x00004bad      0f1f00         nop dword [rax]
0x00004bb0      742e           je 0x4be0                               ; /src:1164
0x00004bb2      4901c4         add r12, rax                            ; /src:1166
0x00004bb5      4801c5         add rbp, rax                            ; /src:1167
0x00004bb8      4829c3         sub rbx, rax                            ; /src:1159
0x00004bbb      7423           je 0x4be0
0x00004bbd      4889da         mov rdx, rbx                            ; /src:1161
0x00004bc0      4889ee         mov rsi, rbp
0x00004bc3      4489ef         mov edi, r13d
0x00004bc6      e8a5feffff     call sym.iread
0x00004bcb      4885c0         test rax, rax                           ; /src:1162
0x00004bce      79e0           jns 0x4bb0
0x00004bd0      4883c408       add rsp, 8                              ; /src:1172
0x00004bd4      5b             pop rbx
0x00004bd5      5d             pop rbp
0x00004bd6      415c           pop r12
0x00004bd8      415d           pop r13
0x00004bda      c3             ret
0x00004bdb      0f1f440000     nop dword [rax + rax]
0x00004be0      4883c408       add rsp, 8
0x00004be4      4c89e0         mov rax, r12
0x00004be7      5b             pop rbx
0x00004be8      5d             pop rbp
0x00004be9      415c           pop r12
0x00004beb      415d           pop r13
0x00004bed      c3             ret
0x00004bee      31c0           xor eax, eax                            ; /src:1157
0x00004bf0      c3             ret                                     ; /src:1172
0x00004bf1      0f1f440000     nop dword [rax + rax]
0x00004bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- finish_up:
0x00004c00      4883ec08       sub rsp, 8                              ; /src:994
0x00004c04      e887fcffff     call sym.cleanup                        ; /src:995
0x00004c09      833d0cc42000.  cmp dword [obj.status_level], 1         ; /src:848 ; [0x21101c:4]=3
0x00004c10      7405           je 0x4c17
0x00004c12      e859fbffff     call sym.print_stats.part.2
0x00004c17      4883c408       add rsp, 8                              ; /src:998
0x00004c1b      e920fdffff     jmp sym.process_signals                 ; /src:997
;-- alloc_ibuf.part.4:
0x00004c20      55             push rbp                                ; /src:691
0x00004c21      53             push rbx
0x00004c22      4881eca80200.  sub rsp, 0x2a8
0x00004c29      488b1da8c720.  mov rbx, qword [obj.page_size]          ; /src:696 ; [0x2113d8:8]=0
0x00004c30      488b2d99c720.  mov rbp, qword [obj.input_blocksize]    ; [0x2113d0:8]=0
0x00004c37      64488b042528.  mov rax, qword fs:[0x28]                ; /src:691
0x00004c40      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x00004c48      31c0           xor eax, eax
0x00004c4a      488d7c5d03     lea rdi, [rbp + rbx*2 + 3]              ; /src:696
0x00004c4f      e8acd0ffff     call sym.imp.malloc
0x00004c54      4885c0         test rax, rax                           ; /src:697
0x00004c57      7434           je 0x4c8d
0x00004c59      488d4c1801     lea rcx, [rax + rbx + 1]                ; /usr/include/x86_64-linux-gnu/bits/stdio.h:501
0x00004c5e      31d2           xor edx, edx                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:502
0x00004c60      4889c8         mov rax, rcx
0x00004c63      48f7f3         div rbx
0x00004c66      4829d1         sub rcx, rdx
0x00004c69      488b84249802.  mov rax, qword [rsp + sym..gnu.hash]    ; /src:711
0x00004c71      644833042528.  xor rax, qword fs:[0x28]
0x00004c7a      48890d97c620.  mov qword [obj.ibuf], rcx               ; /usr/include/x86_64-linux-gnu/bits/stdio.h:502 ; [0x211318:8]=0
0x00004c81      7552           jne 0x4cd5                              ; /src:711
0x00004c83      4881c4a80200.  add rsp, 0x2a8
0x00004c8a      5b             pop rbx
0x00004c8b      5d             pop rbp
0x00004c8c      c3             ret
0x00004c8d      41b801000000   mov r8d, 1                              ; /src:701
0x00004c93      b901000000     mov ecx, 1
0x00004c98      4889e6         mov rsi, rsp
0x00004c9b      baf1010000     mov edx, 0x1f1
0x00004ca0      4889ef         mov rdi, rbp
0x00004ca3      e878140000     call sym.human_readable
0x00004ca8      488d35617e00.  lea rsi, str.memory_exhausted_by_input_buffer_of_size__lu_bytes___s ; 0xcb10 ; "memory exhausted by input buffer of size %lu bytes (%s)"
0x00004caf      4889c3         mov rbx, rax
0x00004cb2      ba05000000     mov edx, 5
0x00004cb7      31ff           xor edi, edi
0x00004cb9      e8a2ceffff     call sym.imp.dcgettext
0x00004cbe      4989d8         mov r8, rbx
0x00004cc1      4889c2         mov rdx, rax
0x00004cc4      4889e9         mov rcx, rbp
0x00004cc7      31f6           xor esi, esi
0x00004cc9      bf01000000     mov edi, 1
0x00004cce      31c0           xor eax, eax
0x00004cd0      e86bf4ffff     call sym.nl_error
0x00004cd5      e8b6ceffff     call sym.imp.__stack_chk_fail           ; /src:711
0x00004cda      660f1f440000   nop word [rax + rax]
;-- alloc_obuf.part.5:
0x00004ce0      55             push rbp                                ; /src:716
0x00004ce1      53             push rbx
0x00004ce2      4881eca80200.  sub rsp, 0x2a8
0x00004ce9      488b1de8c620.  mov rbx, qword [obj.page_size]          ; /src:724 ; [0x2113d8:8]=0
0x00004cf0      488b2dd1c620.  mov rbp, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00004cf7      64488b042528.  mov rax, qword fs:[0x28]                ; /src:716
0x00004d00      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x00004d08      31c0           xor eax, eax
0x00004d0a      488d7c2bff     lea rdi, [rbx + rbp - 1]                ; /src:724
0x00004d0f      e8eccfffff     call sym.imp.malloc
0x00004d14      4885c0         test rax, rax                           ; /src:725
0x00004d17      7434           je 0x4d4d
0x00004d19      488d4c18ff     lea rcx, [rax + rbx - 1]                ; /usr/include/x86_64-linux-gnu/bits/stdio.h:501
0x00004d1e      31d2           xor edx, edx                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:502
0x00004d20      4889c8         mov rax, rcx
0x00004d23      48f7f3         div rbx
0x00004d26      4829d1         sub rcx, rdx
0x00004d29      488b84249802.  mov rax, qword [rsp + sym..gnu.hash]    ; /src:743
0x00004d31      644833042528.  xor rax, qword fs:[0x28]
0x00004d3a      48890dcfc520.  mov qword [obj.obuf], rcx               ; /usr/include/x86_64-linux-gnu/bits/stdio.h:502 ; [0x211310:8]=0
0x00004d41      7552           jne 0x4d95                              ; /src:743
0x00004d43      4881c4a80200.  add rsp, 0x2a8
0x00004d4a      5b             pop rbx
0x00004d4b      5d             pop rbp
0x00004d4c      c3             ret
0x00004d4d      41b801000000   mov r8d, 1                              ; /src:729
0x00004d53      b901000000     mov ecx, 1
0x00004d58      4889e6         mov rsi, rsp
0x00004d5b      baf1010000     mov edx, 0x1f1
0x00004d60      4889ef         mov rdi, rbp
0x00004d63      e8b8130000     call sym.human_readable
0x00004d68      488d35d97d00.  lea rsi, str.memory_exhausted_by_output_buffer_of_size__lu_bytes___s ; 0xcb48 ; "memory exhausted by output buffer of size %lu bytes (%s)"
0x00004d6f      4889c3         mov rbx, rax
0x00004d72      ba05000000     mov edx, 5
0x00004d77      31ff           xor edi, edi
0x00004d79      e8e2cdffff     call sym.imp.dcgettext
0x00004d7e      4989d8         mov r8, rbx
0x00004d81      4889c2         mov rdx, rax
0x00004d84      4889e9         mov rcx, rbp
0x00004d87      31f6           xor esi, esi
0x00004d89      bf01000000     mov edi, 1
0x00004d8e      31c0           xor eax, eax
0x00004d90      e8abf3ffff     call sym.nl_error
0x00004d95      e8f6cdffff     call sym.imp.__stack_chk_fail           ; /src:743
0x00004d9a      660f1f440000   nop word [rax + rax]
;-- alloc_obuf:
0x00004da0      48833d68c520.  cmp qword [obj.obuf], 0                 ; /src:717 ; [0x211310:8]=0
0x00004da8      7402           je 0x4dac
0x00004daa      f3c3           ret
0x00004dac      f605dac52000.  test byte [0x0021138d], 8               ; /src:721 ; [0x21138d:1]=0
0x00004db3      7519           jne 0x4dce
0x00004db5      48833d5bc520.  cmp qword [obj.ibuf], 0                 ; /src:693 ; [0x211318:8]=0
0x00004dbd      7414           je 0x4dd3
0x00004dbf      488b0552c520.  mov rax, qword [obj.ibuf]               ; /src:741 ; [0x211318:8]=0
0x00004dc6      48890543c520.  mov qword [obj.obuf], rax               ; [0x211310:8]=0
0x00004dcd      c3             ret
0x00004dce      e90dffffff     jmp sym.alloc_obuf.part.5
0x00004dd3      4883ec08       sub rsp, 8                              ; /src:717
0x00004dd7      e844feffff     call sym.alloc_ibuf.part.4
0x00004ddc      488b0535c520.  mov rax, qword [obj.ibuf]               ; /src:741 ; [0x211318:8]=0
0x00004de3      48890526c520.  mov qword [obj.obuf], rax               ; [0x211310:8]=0
0x00004dea      58             pop rax                                 ; /src:743
0x00004deb      c3             ret
0x00004dec      0f1f4000       nop dword [rax]
;-- iftruncate.constprop.6:
0x00004df0      55             push rbp                                ; /src:1294
0x00004df1      53             push rbx
0x00004df2      4889fd         mov rbp, rdi
0x00004df5      4883ec08       sub rsp, 8
0x00004df9      eb0f           jmp 0x4e0a
0x00004dfb      0f1f440000     nop dword [rax + rax]
0x00004e00      e87bccffff     call sym.imp.__errno_location           ; /src:1303
0x00004e05      833804         cmp dword [rax], 4
0x00004e08      7518           jne 0x4e22
0x00004e0a      e831fbffff     call sym.process_signals                ; /src:1300
0x00004e0f      4889ee         mov rsi, rbp                            ; /src:1301
0x00004e12      bf01000000     mov edi, 1
0x00004e17      e8e4cdffff     call sym.imp.ftruncate
0x00004e1c      85c0           test eax, eax                           ; /src:1303
0x00004e1e      89c3           mov ebx, eax                            ; /src:1301
0x00004e20      78de           js 0x4e00                               ; /src:1303
0x00004e22      4883c408       add rsp, 8                              ; /src:1306
0x00004e26      89d8           mov eax, ebx
0x00004e28      5b             pop rbx
0x00004e29      5d             pop rbp
0x00004e2a      c3             ret
0x00004e2b      0f1f440000     nop dword [rax + rax]
;-- iwrite.constprop.7:
0x00004e30      4155           push r13                                ; /src:1180
0x00004e32      4154           push r12
0x00004e34      4989fc         mov r12, rdi
0x00004e37      55             push rbp
0x00004e38      53             push rbx
0x00004e39      4889f5         mov rbp, rsi
0x00004e3c      4883ec08       sub rsp, 8
0x00004e40      f6053ec52000.  test byte [0x00211385], 0x40            ; /src:1184 ; [0x211385:1]=0
0x00004e47      740d           je 0x4e56
0x00004e49      48393578c520.  cmp qword [obj.output_blocksize], rsi   ; [0x2113c8:8]=0
0x00004e50      0f873a010000   ja 0x4f90
0x00004e56      31db           xor ebx, ebx                            ; /src:1208
0x00004e58      4885ed         test rbp, rbp
0x00004e5b      7519           jne 0x4e76
0x00004e5d      e990000000     jmp 0x4ef2
0x00004e62      660f1f440000   nop word [rax + rax]
0x00004e68      0f84ea000000   je 0x4f58                               ; /src:1237
0x00004e6e      4801c3         add rbx, rax                            ; /src:1246
0x00004e71      4839dd         cmp rbp, rbx                            ; /src:1208
0x00004e74      766a           jbe 0x4ee0
0x00004e76      e8c5faffff     call sym.process_signals                ; /src:1211
0x00004e7b      448b2d0ac520.  mov r13d, dword [obj.conversions_mask]  ; /src:1215 ; [0x21138c:4]=0
0x00004e82      c6050fc52000.  mov byte [obj.final_op_was_seek], 0     ; /src:1214 ; [0x211398:1]=0
0x00004e89      41f7c5000001.  test r13d, 0x10000                      ; /src:1215
0x00004e90      7426           je 0x4eb8
0x00004e92      4c89e6         mov rsi, r12
0x00004e95      4889ea         mov rdx, rbp
0x00004e98      803e00         cmp byte [rsi], 0                       ; /usr/include/x86_64-linux-gnu/bits/stdio.h:542
0x00004e9b      751b           jne 0x4eb8
0x00004e9d      4883c601       add rsi, 1                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:544
0x00004ea1      4883ea01       sub rdx, 1                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:546
0x00004ea5      7459           je 0x4f00
0x00004ea7      f6c20f         test dl, 0xf                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:548
0x00004eaa      75ec           jne 0x4e98
0x00004eac      4c89e7         mov rdi, r12                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:553
0x00004eaf      e8dccdffff     call sym.imp.memcmp
0x00004eb4      85c0           test eax, eax                           ; /src:1215
0x00004eb6      7448           je 0x4f00
0x00004eb8      4889ea         mov rdx, rbp                            ; /src:1230
0x00004ebb      498d341c       lea rsi, [r12 + rbx]
0x00004ebf      bf01000000     mov edi, 1
0x00004ec4      4829da         sub rdx, rbx
0x00004ec7      e854ccffff     call sym.imp.write
0x00004ecc      4885c0         test rax, rax                           ; /src:1232
0x00004ecf      7997           jns 0x4e68
0x00004ed1      e8aacbffff     call sym.imp.__errno_location           ; /src:1234
0x00004ed6      833804         cmp dword [rax], 4
0x00004ed9      7496           je 0x4e71
0x00004edb      0f1f440000     nop dword [rax + rax]
0x00004ee0      803d83c32000.  cmp byte [obj.o_nocache], 0             ; /src:1249 ; [0x21126a:1]=0
0x00004ee7      7409           je 0x4ef2
0x00004ee9      4885db         test rbx, rbx
0x00004eec      0f857e000000   jne 0x4f70
0x00004ef2      4883c408       add rsp, 8                              ; /src:1253
0x00004ef6      4889d8         mov rax, rbx
0x00004ef9      5b             pop rbx
0x00004efa      5d             pop rbp
0x00004efb      415c           pop r12
0x00004efd      415d           pop r13
0x00004eff      c3             ret
0x00004f00      ba01000000     mov edx, 1                              ; /src:1217
0x00004f05      4889ee         mov rsi, rbp
0x00004f08      bf01000000     mov edi, 1
0x00004f0d      e8feccffff     call sym.imp.lseek
0x00004f12      4885c0         test rax, rax
0x00004f15      7829           js 0x4f40
0x00004f17      4885ed         test rbp, rbp                           ; /src:1232
0x00004f1a      c60577c42000.  mov byte [obj.final_op_was_seek], 1     ; /src:1224 ; [0x211398:1]=0
0x00004f21      4889e8         mov rax, rbp                            ; /src:1232
0x00004f24      0f8944ffffff   jns 0x4e6e
0x00004f2a      e851cbffff     call sym.imp.__errno_location           ; /src:1234
0x00004f2f      833804         cmp dword [rax], 4
0x00004f32      0f8439ffffff   je 0x4e71
0x00004f38      eba6           jmp 0x4ee0
0x00004f3a      660f1f440000   nop word [rax + rax]
0x00004f40      4181e5fffffe.  and r13d, 0xfffeffff                    ; /src:1219
0x00004f47      44892d3ec420.  mov dword [obj.conversions_mask], r13d  ; [0x21138c:4]=0
0x00004f4e      e965ffffff     jmp 0x4eb8
0x00004f53      0f1f440000     nop dword [rax + rax]
0x00004f58      e823cbffff     call sym.imp.__errno_location           ; /src:1242
0x00004f5d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x00004f63      e978ffffff     jmp 0x4ee0
0x00004f68      0f1f84000000.  nop dword [rax + rax]
0x00004f70      4889de         mov rsi, rbx                            ; /src:1250
0x00004f73      bf01000000     mov edi, 1
0x00004f78      e833f6ffff     call sym.invalidate_cache
0x00004f7d      4883c408       add rsp, 8                              ; /src:1253
0x00004f81      4889d8         mov rax, rbx
0x00004f84      5b             pop rbx
0x00004f85      5d             pop rbp
0x00004f86      415c           pop r12
0x00004f88      415d           pop r13
0x00004f8a      c3             ret
0x00004f8b      0f1f440000     nop dword [rax + rax]
0x00004f90      be03000000     mov esi, 3                              ; /src:1186
0x00004f95      bf01000000     mov edi, 1
0x00004f9a      31c0           xor eax, eax
0x00004f9c      e84f4d0000     call sym.rpl_fcntl
0x00004fa1      80e4bf         and ah, 0xbf                            ; /src:1187
0x00004fa4      be04000000     mov esi, 4
0x00004fa9      bf01000000     mov edi, 1
0x00004fae      89c2           mov edx, eax
0x00004fb0      31c0           xor eax, eax
0x00004fb2      e8394d0000     call sym.rpl_fcntl
0x00004fb7      85c0           test eax, eax
0x00004fb9      7409           je 0x4fc4
0x00004fbb      833d5ac02000.  cmp dword [obj.status_level], 1         ; /src:1188 ; [0x21101c:4]=3
0x00004fc2      7522           jne 0x4fe6
0x00004fc4      31f6           xor esi, esi                            ; /src:1198
0x00004fc6      bf01000000     mov edi, 1
0x00004fcb      c60596c22000.  mov byte [obj.o_nocache_eof], 1         ; /src:1197 ; [0x211268:1]=0
0x00004fd2      e8d9f5ffff     call sym.invalidate_cache               ; /src:1198
0x00004fd7      810dabc32000.  or dword [obj.conversions_mask], 0x8000 ; /src:1202 ; [0x21138c:4]=0
0x00004fe1      e970feffff     jmp 0x4e56
0x00004fe6      488b15f3c320.  mov rdx, qword [obj.output_file]        ; /src:1189 ; [0x2113e0:8]=0
0x00004fed      31ff           xor edi, edi
0x00004fef      be03000000     mov esi, 3
0x00004ff4      e8e73a0000     call sym.quotearg_n_style_colon
0x00004ff9      488d35887b00.  lea rsi, str.failed_to_turn_off_O_DIRECT:__s ; 0xcb88 ; "failed to turn off O_DIRECT: %s"
0x00005000      31ff           xor edi, edi
0x00005002      ba05000000     mov edx, 5
0x00005007      4989c5         mov r13, rax
0x0000500a      e851cbffff     call sym.imp.dcgettext
0x0000500f      4889c3         mov rbx, rax
0x00005012      e869caffff     call sym.imp.__errno_location
0x00005017      8b30           mov esi, dword [rax]
0x00005019      4c89e9         mov rcx, r13
0x0000501c      4889da         mov rdx, rbx
0x0000501f      31ff           xor edi, edi
0x00005021      31c0           xor eax, eax
0x00005023      e818f1ffff     call sym.nl_error
0x00005028      eb9a           jmp 0x4fc4
0x0000502a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00005030      4155           push r13                                ; /src:553
0x00005032      4154           push r12
0x00005034      ba05000000     mov edx, 5                              ; /src:555
0x00005039      55             push rbp                                ; /src:553
0x0000503a      53             push rbx
0x0000503b      89fd           mov ebp, edi
0x0000503d      4881ec880000.  sub rsp, 0x88
0x00005044      488b1db5c320.  mov rbx, qword [obj.program_name]       ; [0x211400:8]=0
0x0000504b      64488b042528.  mov rax, qword fs:[0x28]
0x00005054      4889442478     mov qword [rsp + 0x78], rax
0x00005059      31c0           xor eax, eax
0x0000505b      85ff           test edi, edi                           ; /src:554
0x0000505d      742e           je 0x508d
0x0000505f      488d35427b00.  lea rsi, str.Try___s___help__for_more_information. ; /src:555 ; 0xcba8 ; "Try '%s --help' for more information.\n"
0x00005066      31ff           xor edi, edi
0x00005068      e8f3caffff     call sym.imp.dcgettext
0x0000506d      488b3d8cc020.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00005074      4889c2         mov rdx, rax
0x00005077      4889d9         mov rcx, rbx
0x0000507a      be01000000     mov esi, 1
0x0000507f      31c0           xor eax, eax
0x00005081      e8aacdffff     call sym.imp.__fprintf_chk
0x00005086      89ef           mov edi, ebp                            ; /src:680
0x00005088      e883cdffff     call sym.imp.exit
0x0000508d      488d353c7b00.  lea rsi, str.Usage:__s__OPERAND_...____or:___s_OPTION ; /src:558 ; 0xcbd0 ; "Usage: %s [OPERAND]...\n  or:  %s OPTION\n"
0x00005094      31ff           xor edi, edi
0x00005096      e8c5caffff     call sym.imp.dcgettext
0x0000509b      4889d9         mov rcx, rbx                            ; .//ib:104
0x0000509e      4889da         mov rdx, rbx
0x000050a1      4889c6         mov rsi, rax
0x000050a4      bf01000000     mov edi, 1
0x000050a9      31c0           xor eax, eax
0x000050ab      e8c0ccffff     call sym.imp.__printf_chk
0x000050b0      488b1d11c020.  mov rbx, qword [obj.stdout]             ; /src:563 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000050b7      488d35427b00.  lea rsi, str.Copy_a_file__converting_and_formatting_according_to_the_operands.______bs_BYTES________read_and_write_up_to_BYTES_bytes_at_a_time__default:_512______________________overrides_ibs_and_obs____cbs_BYTES_______convert_BYTES_bytes_at_a_time____conv_CONVS______convert_the_file_as_per_the_comma_separated_symbol_list____count_N_________copy_only_N_input_blocks____ibs_BYTES_______read_up_to_BYTES_bytes_at_a_time__default:_512 ; 0xcc00 ; "Copy a file, converting and formatting according to the operands.\n\n  bs=BYTES        read and write up to BYTES bytes at a time (default: 512);\n                  overrides ibs and obs\n  cbs=BYTES       convert BYTES bytes at a time\n  conv=CONVS      convert the file as per the comma separated symbol list\n  count=N         copy only N input blocks\n  ibs=BYTES       read up to BYTES bytes at a time (default: 512)\n"
0x000050be      ba05000000     mov edx, 5
0x000050c3      31ff           xor edi, edi
0x000050c5      e896caffff     call sym.imp.dcgettext
0x000050ca      4889de         mov rsi, rbx
0x000050cd      4889c7         mov rdi, rax
0x000050d0      e8cbcbffff     call sym.imp.fputs_unlocked
0x000050d5      488b1decbf20.  mov rbx, qword [obj.stdout]             ; /src:573 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000050dc      488d35bd7c00.  lea rsi, str.if_FILE_________read_from_FILE_instead_of_stdin____iflag_FLAGS_____read_as_per_the_comma_separated_symbol_list____obs_BYTES_______write_BYTES_bytes_at_a_time__default:_512_____of_FILE_________write_to_FILE_instead_of_stdout____oflag_FLAGS_____write_as_per_the_comma_separated_symbol_list____seek_N__________skip_N_obs_sized_blocks_at_start_of_output____skip_N__________skip_N_ibs_sized_blocks_at_start_of_input____status_LEVEL____The_LEVEL_of_information_to_print_to_stderr______________________none__suppresses_everything_but_error_messages______________________noxfer__suppresses_the_final_transfer_statistics______________________progress__shows_periodic_transfer_statistics ; 0xcda0 ; "  if=FILE         read from FILE instead of stdin\n  iflag=FLAGS     read as per the comma separated symbol list\n  obs=BYTES       write BYTES bytes at a time (default: 512)\n  of=FILE         write to FILE instead of stdout\n  oflag=FLAGS     write as per the comma separated symbol list\n  seek=N          skip N obs-sized blocks at start of output\n  skip=N          skip N ibs-sized blocks at start of input\n  status=LEVEL    The LEVEL of information to print to stderr;\n                  'none' suppresses everything but error messages,\n                  'noxfer' suppresses the final transfer statistics,\n                  'progress' shows periodic transfer statistics\n"
0x000050e3      ba05000000     mov edx, 5
0x000050e8      31ff           xor edi, edi
0x000050ea      e871caffff     call sym.imp.dcgettext
0x000050ef      4889de         mov rsi, rbx
0x000050f2      4889c7         mov rdi, rax
0x000050f5      e8a6cbffff     call sym.imp.fputs_unlocked
0x000050fa      488b1dc7bf20.  mov rbx, qword [obj.stdout]             ; /src:586 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005101      488d35387f00.  lea rsi, str.N_and_BYTES_may_be_followed_by_the_following_multiplicative_suffixes:__c_1__w_2__b_512__kB_1000__K_1024__MB_1000_1000__M_1024_1024__xM_M___GB_1000_1000_1000__G_1024_1024_1024__and_so_on_for_T__P__E__Z__Y.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on.____Each_CONV_symbol_may_be: ; 0xd040 ; "\nN and BYTES may be followed by the following multiplicative suffixes:\nc=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, xM=M,\nGB=1000*1000*1000, G=1024*1024*1024, and so on for T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n\nEach CONV symbol may be:\n\n"
0x00005108      ba05000000     mov edx, 5
0x0000510d      31ff           xor edi, edi
0x0000510f      e84ccaffff     call sym.imp.dcgettext
0x00005114      4889de         mov rsi, rbx
0x00005117      4889c7         mov rdi, rax
0x0000511a      e881cbffff     call sym.imp.fputs_unlocked
0x0000511f      488b1da2bf20.  mov rbx, qword [obj.stdout]             ; /src:596 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005126      488d353b8000.  lea rsi, str.ascii_____from_EBCDIC_to_ASCII____ebcdic____from_ASCII_to_EBCDIC____ibm_______from_ASCII_to_alternate_EBCDIC____block_____pad_newline_terminated_records_with_spaces_to_cbs_size____unblock___replace_trailing_spaces_in_cbs_size_records_with_newline____lcase_____change_upper_case_to_lower_case____ucase_____change_lower_case_to_upper_case____sparse____try_to_seek_rather_than_write_the_output_for_NUL_input_blocks____swab______swap_every_pair_of_input_bytes____sync______pad_every_input_block_with_NULs_to_ibs_size__when_used______________with_block_or_unblock__pad_with_spaces_rather_than_NULs ; 0xd168 ; "  ascii     from EBCDIC to ASCII\n  ebcdic    from ASCII to EBCDIC\n  ibm       from ASCII to alternate EBCDIC\n  block     pad newline-terminated records with spaces to cbs-size\n  unblock   replace trailing spaces in cbs-size records with newline\n  lcase     change upper case to lower case\n  ucase     change lower case to upper case\n  sparse    try to seek rather than write the output for NUL input blocks\n  swab      swap every pair of input bytes\n  sync      pad every input block with NULs to ibs-size; when used\n            with block or unblock, pad with spaces rather than NULs\n"
0x0000512d      ba05000000     mov edx, 5
0x00005132      31ff           xor edi, edi
0x00005134      e827caffff     call sym.imp.dcgettext
0x00005139      4889de         mov rsi, rbx
0x0000513c      4889c7         mov rdi, rax
0x0000513f      e85ccbffff     call sym.imp.fputs_unlocked
0x00005144      488b1d7dbf20.  mov rbx, qword [obj.stdout]             ; /src:609 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x0000514b      488d35668200.  lea rsi, str.excl______fail_if_the_output_file_already_exists____nocreat___do_not_create_the_output_file____notrunc___do_not_truncate_the_output_file____noerror___continue_after_read_errors____fdatasync__physically_write_output_file_data_before_finishing____fsync_____likewise__but_also_write_metadata ; 0xd3b8 ; "  excl      fail if the output file already exists\n  nocreat   do not create the output file\n  notrunc   do not truncate the output file\n  noerror   continue after read errors\n  fdatasync  physically write output file data before finishing\n  fsync     likewise, but also write metadata\n"
0x00005152      ba05000000     mov edx, 5
0x00005157      31ff           xor edi, edi
0x00005159      e802caffff     call sym.imp.dcgettext
0x0000515e      4889de         mov rsi, rbx
0x00005161      4889c7         mov rdi, rax
0x00005164      e837cbffff     call sym.imp.fputs_unlocked
0x00005169      488b1d58bf20.  mov rbx, qword [obj.stdout]             ; /src:617 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005170      488d35618300.  lea rsi, str.Each_FLAG_symbol_may_be:______append____append_mode__makes_sense_only_for_output__conv_notrunc_suggested ; 0xd4d8 ; "\nEach FLAG symbol may be:\n\n  append    append mode (makes sense only for output; conv=notrunc suggested)\n"
0x00005177      ba05000000     mov edx, 5
0x0000517c      31ff           xor edi, edi
0x0000517e      e8ddc9ffff     call sym.imp.dcgettext
0x00005183      4889de         mov rsi, rbx
0x00005186      4889c7         mov rdi, rax
0x00005189      e812cbffff     call sym.imp.fputs_unlocked
0x0000518e      488b1d33bf20.  mov rbx, qword [obj.stdout]             ; /src:626 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005195      488d35ac8300.  lea rsi, str.direct____use_direct_I_O_for_data ; 0xd548 ; "  direct    use direct I/O for data\n"
0x0000519c      ba05000000     mov edx, 5
0x000051a1      31ff           xor edi, edi
0x000051a3      e8b8c9ffff     call sym.imp.dcgettext
0x000051a8      4889de         mov rsi, rbx
0x000051ab      4889c7         mov rdi, rax
0x000051ae      e8edcaffff     call sym.imp.fputs_unlocked
0x000051b3      488b1d0ebf20.  mov rbx, qword [obj.stdout]             ; /src:628 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000051ba      488d35af8300.  lea rsi, str.directory__fail_unless_a_directory ; 0xd570 ; "  directory  fail unless a directory\n"
0x000051c1      ba05000000     mov edx, 5
0x000051c6      31ff           xor edi, edi
0x000051c8      e893c9ffff     call sym.imp.dcgettext
0x000051cd      4889de         mov rsi, rbx
0x000051d0      4889c7         mov rdi, rax
0x000051d3      e8c8caffff     call sym.imp.fputs_unlocked
0x000051d8      488b1de9be20.  mov rbx, qword [obj.stdout]             ; /src:630 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000051df      488d35b28300.  lea rsi, str.dsync_____use_synchronized_I_O_for_data ; 0xd598 ; "  dsync     use synchronized I/O for data\n"
0x000051e6      ba05000000     mov edx, 5
0x000051eb      31ff           xor edi, edi
0x000051ed      e86ec9ffff     call sym.imp.dcgettext
0x000051f2      4889de         mov rsi, rbx
0x000051f5      4889c7         mov rdi, rax
0x000051f8      e8a3caffff     call sym.imp.fputs_unlocked
0x000051fd      488b1dc4be20.  mov rbx, qword [obj.stdout]             ; /src:632 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005204      488d35bd8300.  lea rsi, str.sync______likewise__but_also_for_metadata ; 0xd5c8 ; "  sync      likewise, but also for metadata\n"
0x0000520b      ba05000000     mov edx, 5
0x00005210      31ff           xor edi, edi
0x00005212      e849c9ffff     call sym.imp.dcgettext
0x00005217      4889de         mov rsi, rbx
0x0000521a      4889c7         mov rdi, rax
0x0000521d      e87ecaffff     call sym.imp.fputs_unlocked
0x00005222      488b1d9fbe20.  mov rbx, qword [obj.stdout]             ; /src:633 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005229      488d35c88300.  lea rsi, str.fullblock__accumulate_full_blocks_of_input__iflag_only ; 0xd5f8 ; "  fullblock  accumulate full blocks of input (iflag only)\n"
0x00005230      ba05000000     mov edx, 5
0x00005235      31ff           xor edi, edi
0x00005237      e824c9ffff     call sym.imp.dcgettext
0x0000523c      4889de         mov rsi, rbx
0x0000523f      4889c7         mov rdi, rax
0x00005242      e859caffff     call sym.imp.fputs_unlocked
0x00005247      488b1d7abe20.  mov rbx, qword [obj.stdout]             ; /src:636 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x0000524e      488d35e38300.  lea rsi, str.nonblock__use_non_blocking_I_O ; 0xd638 ; "  nonblock  use non-blocking I/O\n"
0x00005255      ba05000000     mov edx, 5
0x0000525a      31ff           xor edi, edi
0x0000525c      e8ffc8ffff     call sym.imp.dcgettext
0x00005261      4889de         mov rsi, rbx
0x00005264      4889c7         mov rdi, rax
0x00005267      e834caffff     call sym.imp.fputs_unlocked
0x0000526c      488b1d55be20.  mov rbx, qword [obj.stdout]             ; /src:638 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005273      488d35e68300.  lea rsi, str.noatime___do_not_update_access_time ; 0xd660 ; "  noatime   do not update access time\n"
0x0000527a      ba05000000     mov edx, 5
0x0000527f      31ff           xor edi, edi
0x00005281      e8dac8ffff     call sym.imp.dcgettext
0x00005286      4889de         mov rsi, rbx
0x00005289      4889c7         mov rdi, rax
0x0000528c      e80fcaffff     call sym.imp.fputs_unlocked
0x00005291      488b1d30be20.  mov rbx, qword [obj.stdout]             ; /src:641 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005298      488d35e98300.  lea rsi, str.nocache___Request_to_drop_cache.__See_also_oflag_sync ; 0xd688 ; "  nocache   Request to drop cache.  See also oflag=sync\n"
0x0000529f      ba05000000     mov edx, 5
0x000052a4      31ff           xor edi, edi
0x000052a6      e8b5c8ffff     call sym.imp.dcgettext
0x000052ab      4889de         mov rsi, rbx
0x000052ae      4889c7         mov rdi, rax
0x000052b1      e8eac9ffff     call sym.imp.fputs_unlocked
0x000052b6      488b1d0bbe20.  mov rbx, qword [obj.stdout]             ; /src:645 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000052bd      488d35048400.  lea rsi, str.noctty____do_not_assign_controlling_terminal_from_file ; 0xd6c8 ; "  noctty    do not assign controlling terminal from file\n"
0x000052c4      ba05000000     mov edx, 5
0x000052c9      31ff           xor edi, edi
0x000052cb      e890c8ffff     call sym.imp.dcgettext
0x000052d0      4889de         mov rsi, rbx
0x000052d3      4889c7         mov rdi, rax
0x000052d6      e8c5c9ffff     call sym.imp.fputs_unlocked
0x000052db      488b1de6bd20.  mov rbx, qword [obj.stdout]             ; /src:648 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000052e2      488d351f8400.  lea rsi, str.nofollow__do_not_follow_symlinks ; 0xd708 ; "  nofollow  do not follow symlinks\n"
0x000052e9      ba05000000     mov edx, 5
0x000052ee      31ff           xor edi, edi
0x000052f0      e86bc8ffff     call sym.imp.dcgettext
0x000052f5      4889de         mov rsi, rbx
0x000052f8      4889c7         mov rdi, rax
0x000052fb      e8a0c9ffff     call sym.imp.fputs_unlocked
0x00005300      488b1dc1bd20.  mov rbx, qword [obj.stdout]             ; /src:656 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005307      488d35228400.  lea rsi, str.count_bytes__treat__count_N__as_a_byte_count__iflag_only ; 0xd730 ; "  count_bytes  treat 'count=N' as a byte count (iflag only)\n"
0x0000530e      ba05000000     mov edx, 5
0x00005313      31ff           xor edi, edi
0x00005315      e846c8ffff     call sym.imp.dcgettext
0x0000531a      4889de         mov rsi, rbx
0x0000531d      4889c7         mov rdi, rax
0x00005320      e87bc9ffff     call sym.imp.fputs_unlocked
0x00005325      488b1d9cbd20.  mov rbx, qword [obj.stdout]             ; /src:659 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x0000532c      488d353d8400.  lea rsi, str.skip_bytes__treat__skip_N__as_a_byte_count__iflag_only ; 0xd770 ; "  skip_bytes  treat 'skip=N' as a byte count (iflag only)\n"
0x00005333      ba05000000     mov edx, 5
0x00005338      31ff           xor edi, edi
0x0000533a      e821c8ffff     call sym.imp.dcgettext
0x0000533f      4889de         mov rsi, rbx
0x00005342      4889c7         mov rdi, rax
0x00005345      e856c9ffff     call sym.imp.fputs_unlocked
0x0000534a      488b1d77bd20.  mov rbx, qword [obj.stdout]             ; /src:662 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005351      488d35588400.  lea rsi, str.seek_bytes__treat__seek_N__as_a_byte_count__oflag_only ; 0xd7b0 ; "  seek_bytes  treat 'seek=N' as a byte count (oflag only)\n"
0x00005358      ba05000000     mov edx, 5
0x0000535d      31ff           xor edi, edi
0x0000535f      e8fcc7ffff     call sym.imp.dcgettext
0x00005364      4889de         mov rsi, rbx
0x00005367      4889c7         mov rdi, rax
0x0000536a      e831c9ffff     call sym.imp.fputs_unlocked
0x0000536f      488d357a8400.  lea rsi, str.Sending_a__s_signal_to_a_running__dd__process_makes_it__print_I_O_statistics_to_standard_error_and_then_resume_copying.____Options_are: ; /src:666 ; 0xd7f0 ; "\nSending a %s signal to a running 'dd' process makes it\nprint I/O statistics to standard error and then resume copying.\n\nOptions are:\n\n"
0x00005376      31ff           xor edi, edi
0x00005378      ba05000000     mov edx, 5
0x0000537d      e8dec7ffff     call sym.imp.dcgettext
0x00005382      488d156e7300.  lea rdx, str.USR1                       ; .//ib:104 ; 0xc6f7 ; "USR1"
0x00005389      4889c6         mov rsi, rax
0x0000538c      bf01000000     mov edi, 1
0x00005391      31c0           xor eax, eax
0x00005393      e8d8c9ffff     call sym.imp.__printf_chk
0x00005398      488b1d29bd20.  mov rbx, qword [obj.stdout]             ; /src:676 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x0000539f      488d35d28400.  lea rsi, str.help_____display_this_help_and_exit ; 0xd878 ; "      --help     display this help and exit\n"
0x000053a6      ba05000000     mov edx, 5
0x000053ab      31ff           xor edi, edi
0x000053ad      e8aec7ffff     call sym.imp.dcgettext
0x000053b2      4889de         mov rsi, rbx
0x000053b5      4889c7         mov rdi, rax
0x000053b8      e8e3c8ffff     call sym.imp.fputs_unlocked
0x000053bd      488b1d04bd20.  mov rbx, qword [obj.stdout]             ; /src:677 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000053c4      488d35dd8400.  lea rsi, str.version__output_version_information_and_exit ; 0xd8a8 ; "      --version  output version information and exit\n"
0x000053cb      ba05000000     mov edx, 5
0x000053d0      31ff           xor edi, edi
0x000053d2      e889c7ffff     call sym.imp.dcgettext
0x000053d7      4889de         mov rsi, rbx
0x000053da      4889c7         mov rdi, rax
0x000053dd      488d1d107300.  lea rbx, [0x0000c6f4]                   ; "dd"
0x000053e4      e8b7c8ffff     call sym.imp.fputs_unlocked
0x000053e9      488d050c7300.  lea rax, [0x0000c6fc]                   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:633 ; "["
0x000053f0      488d0d467300.  lea rcx, str.sha256sum                  ; 0xc73d ; "sha256sum"
0x000053f7      48c744246000.  mov qword [rsp + 0x60], 0
0x00005400      48c744246800.  mov qword [rsp + 0x68], 0
0x00005409      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:644
0x0000540c      48890424       mov qword [rsp], rax                    ; /usr/include/x86_64-linux-gnu/bits/stdio.h:633
0x00005410      488d05e77200.  lea rax, str.test_invocation            ; 0xc6fe ; "test invocation"
0x00005417      48894c2430     mov qword [rsp + 0x30], rcx
0x0000541c      488d0d247300.  lea rcx, str.sha384sum                  ; 0xc747 ; "sha384sum"
0x00005423      4889442408     mov qword [rsp + 8], rax
0x00005428      488d05477300.  lea rax, [0x0000c776]                   ; "coreutils"
0x0000542f      48894c2440     mov qword [rsp + 0x40], rcx
0x00005434      488d0d167300.  lea rcx, str.sha512sum                  ; 0xc751 ; "sha512sum"
0x0000543b      4889442410     mov qword [rsp + 0x10], rax
0x00005440      488d05c77200.  lea rax, str.Multi_call_invocation      ; 0xc70e ; "Multi-call invocation"
0x00005447      48894c2450     mov qword [rsp + 0x50], rcx
0x0000544c      4889442418     mov qword [rsp + 0x18], rax
0x00005451      488d05cc7200.  lea rax, str.sha224sum                  ; 0xc724 ; "sha224sum"
0x00005458      4889442420     mov qword [rsp + 0x20], rax
0x0000545d      488d05ca7200.  lea rax, str.sha2_utilities             ; 0xc72e ; "sha2 utilities"
0x00005464      4889442428     mov qword [rsp + 0x28], rax
0x00005469      4889442438     mov qword [rsp + 0x38], rax
0x0000546e      4889442448     mov qword [rsp + 0x48], rax
0x00005473      4889442458     mov qword [rsp + 0x58], rax
0x00005478      0f1f84000000.  nop dword [rax + rax]
0x00005480      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:647
0x00005484      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio.h:646
0x00005487      4885ff         test rdi, rdi
0x0000548a      7413           je 0x549f
0x0000548c      b903000000     mov ecx, 3
0x00005491      4889de         mov rsi, rbx
0x00005494      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005496      0f97c0         seta al
0x00005499      1c00           sbb al, 0
0x0000549b      84c0           test al, al
0x0000549d      75e1           jne 0x5480
0x0000549f      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio.h:649
0x000054a3      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:652
0x000054a5      ba05000000     mov edx, 5
0x000054aa      488d35aa7200.  lea rsi, str.s_online_help:___s         ; 0xc75b ; "\n%s online help: <%s>\n"
0x000054b1      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:649
0x000054b4      0f84c1000000   je 0x557b
0x000054ba      e8a1c6ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio.h:652
0x000054bf      488d0d1a8400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0xd8e0 ; "https://www.gnu.org/software/coreutils/"
0x000054c6      488d15a57200.  lea rdx, str.GNU_coreutils              ; 0xc772 ; "GNU coreutils"
0x000054cd      4889c6         mov rsi, rax
0x000054d0      bf01000000     mov edi, 1
0x000054d5      31c0           xor eax, eax
0x000054d7      e894c8ffff     call sym.imp.__printf_chk
0x000054dc      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:656
0x000054de      bf05000000     mov edi, 5
0x000054e3      e878c8ffff     call sym.imp.setlocale
0x000054e8      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:657
0x000054eb      741c           je 0x5509
0x000054ed      488d358c7200.  lea rsi, [0x0000c780]                   ; "en_"
0x000054f4      ba03000000     mov edx, 3
0x000054f9      4889c7         mov rdi, rax
0x000054fc      e8afc5ffff     call sym.imp.strncmp
0x00005501      85c0           test eax, eax
0x00005503      0f8507010000   jne 0x5610
0x00005509      488d35747200.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:666 ; 0xc784 ; "Full documentation <%s%s>\n"
0x00005510      31ff           xor edi, edi
0x00005512      ba05000000     mov edx, 5
0x00005517      e844c6ffff     call sym.imp.dcgettext
0x0000551c      488d0dd17100.  lea rcx, [0x0000c6f4]                   ; .//ib:104 ; "dd"
0x00005523      488d15b68300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd8e0 ; "https://www.gnu.org/software/coreutils/"
0x0000552a      4889c6         mov rsi, rax
0x0000552d      bf01000000     mov edi, 1
0x00005532      31c0           xor eax, eax
0x00005534      e837c8ffff     call sym.imp.__printf_chk
0x00005539      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:668
0x0000553c      488d0dd57100.  lea rcx, [0x0000c718]                   ; " invocation"
0x00005543      488d1d579200.  lea rbx, [0x0000e7a1]
0x0000554a      480f44d9       cmove rbx, rcx
0x0000554e      488d35fb8300.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xd950 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00005555      31ff           xor edi, edi
0x00005557      ba05000000     mov edx, 5
0x0000555c      e8ffc5ffff     call sym.imp.dcgettext
0x00005561      4889d9         mov rcx, rbx                            ; .//ib:104
0x00005564      4889c6         mov rsi, rax
0x00005567      4c89e2         mov rdx, r12
0x0000556a      bf01000000     mov edi, 1
0x0000556f      31c0           xor eax, eax
0x00005571      e8fac7ffff     call sym.imp.__printf_chk
0x00005576      e90bfbffff     jmp 0x5086
0x0000557b      e8e0c5ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio.h:652
0x00005580      488d0d598300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0xd8e0 ; "https://www.gnu.org/software/coreutils/"
0x00005587      488d15e47100.  lea rdx, str.GNU_coreutils              ; 0xc772 ; "GNU coreutils"
0x0000558e      4889c6         mov rsi, rax
0x00005591      bf01000000     mov edi, 1
0x00005596      31c0           xor eax, eax
0x00005598      e8d3c7ffff     call sym.imp.__printf_chk
0x0000559d      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:656
0x0000559f      bf05000000     mov edi, 5
0x000055a4      e8b7c7ffff     call sym.imp.setlocale
0x000055a9      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:657
0x000055ac      7418           je 0x55c6
0x000055ae      488d35cb7100.  lea rsi, [0x0000c780]                   ; "en_"
0x000055b5      ba03000000     mov edx, 3
0x000055ba      4889c7         mov rdi, rax
0x000055bd      e8eec4ffff     call sym.imp.strncmp
0x000055c2      85c0           test eax, eax
0x000055c4      7543           jne 0x5609
0x000055c6      488d35b77100.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:666 ; 0xc784 ; "Full documentation <%s%s>\n"
0x000055cd      ba05000000     mov edx, 5
0x000055d2      31ff           xor edi, edi
0x000055d4      4c8d25197100.  lea r12, [0x0000c6f4]                   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:643 ; "dd"
0x000055db      488d1d367100.  lea rbx, [0x0000c718]                   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:668 ; " invocation"
0x000055e2      e879c5ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio.h:666
0x000055e7      488d0d067100.  lea rcx, [0x0000c6f4]                   ; .//ib:104 ; "dd"
0x000055ee      488d15eb8200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xd8e0 ; "https://www.gnu.org/software/coreutils/"
0x000055f5      4889c6         mov rsi, rax
0x000055f8      bf01000000     mov edi, 1
0x000055fd      31c0           xor eax, eax
0x000055ff      e86cc7ffff     call sym.imp.__printf_chk
0x00005604      e945ffffff     jmp 0x554e
0x00005609      4c8d25e47000.  lea r12, [0x0000c6f4]                   ; /usr/include/x86_64-linux-gnu/bits/stdio.h:643 ; "dd"
0x00005610      4c8b2db1ba20.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005617      488d35ea8200.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xd908 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000561e      31ff           xor edi, edi
0x00005620      ba05000000     mov edx, 5
0x00005625      e836c5ffff     call sym.imp.dcgettext
0x0000562a      4c89ee         mov rsi, r13
0x0000562d      4889c7         mov rdi, rax
0x00005630      e86bc6ffff     call sym.imp.fputs_unlocked
0x00005635      e9cffeffff     jmp 0x5509
0x0000563a      660f1f440000   nop word [rax + rax]
;-- parse_symbols:
0x00005640      4156           push r14                                ; /src:1326
0x00005642      4989fe         mov r14, rdi
0x00005645      4155           push r13
0x00005647      4989cd         mov r13, rcx
0x0000564a      4154           push r12
0x0000564c      4989f4         mov r12, rsi
0x0000564f      55             push rbp
0x00005650      89d5           mov ebp, edx
0x00005652      53             push rbx
0x00005653      31db           xor ebx, ebx                            ; /src:1327
0x00005655      be2c000000     mov esi, 0x2c                           ; /src:1331 ; ','
0x0000565a      4c89f7         mov rdi, r14
0x0000565d      e86ec5ffff     call sym.imp.strchr
0x00005662      4d89e0         mov r8, r12                             ; /src:1334
0x00005665      0f1f00         nop dword [rax]
0x00005668      4c89c1         mov rcx, r8
0x0000566b      4c89f2         mov rdx, r14
0x0000566e      eb0d           jmp 0x567d
0x00005670      4883c201       add rdx, 1                              ; /src:1314
0x00005674      4883c101       add rcx, 1
0x00005678      4038fe         cmp sil, dil
0x0000567b      751e           jne 0x569b
0x0000567d      0fb631         movzx esi, byte [rcx]                   ; /src:1313
0x00005680      0fb63a         movzx edi, byte [rdx]
0x00005683      4084f6         test sil, sil
0x00005686      75e8           jne 0x5670
0x00005688      4080ff2c       cmp dil, 0x2c                           ; /src:1334
0x0000568c      7405           je 0x5693
0x0000568e      4084ff         test dil, dil
0x00005691      7508           jne 0x569b
0x00005693      418b500c       mov edx, dword [r8 + 0xc]               ; /src:1335
0x00005697      85d2           test edx, edx
0x00005699      750c           jne 0x56a7
0x0000569b      41803800       cmp byte [r8], 0                        ; /src:1338
0x0000569f      7426           je 0x56c7
0x000056a1      4983c010       add r8, 0x10                            ; /src:1336
0x000056a5      ebc1           jmp 0x5668
0x000056a7      09d3           or ebx, edx                             ; /src:1350
0x000056a9      4084ed         test bpl, bpl
0x000056ac      0f44d3         cmove edx, ebx
0x000056af      4885c0         test rax, rax                           ; /src:1351
0x000056b2      7408           je 0x56bc
0x000056b4      4c8d7001       lea r14, [rax + 1]                      ; /src:1353
0x000056b8      89d3           mov ebx, edx                            ; /src:1330
0x000056ba      eb99           jmp 0x5655
0x000056bc      5b             pop rbx                                 ; /src:1357
0x000056bd      89d0           mov eax, edx
0x000056bf      5d             pop rbp
0x000056c0      415c           pop r12
0x000056c2      415d           pop r13
0x000056c4      415e           pop r14
0x000056c6      c3             ret
0x000056c7      4885c0         test rax, rax                           ; /src:1340
0x000056ca      7449           je 0x5715
0x000056cc      4c29f0         sub rax, r14
0x000056cf      4889c1         mov rcx, rax                            ; /src:1341
0x000056d2      4c89f2         mov rdx, r14
0x000056d5      be08000000     mov esi, 8
0x000056da      31ff           xor edi, edi
0x000056dc      e86f320000     call sym.quotearg_n_style_mem
0x000056e1      ba05000000     mov edx, 5
0x000056e6      4c89ee         mov rsi, r13
0x000056e9      31ff           xor edi, edi
0x000056eb      4889c3         mov rbx, rax
0x000056ee      e86dc4ffff     call sym.imp.dcgettext
0x000056f3      488d15a57000.  lea rdx, str.s:__s                      ; 0xc79f ; "%s: %s"
0x000056fa      4889c1         mov rcx, rax
0x000056fd      31ff           xor edi, edi
0x000056ff      4989d8         mov r8, rbx
0x00005702      31f6           xor esi, esi
0x00005704      31c0           xor eax, eax
0x00005706      e835eaffff     call sym.nl_error
0x0000570b      bf01000000     mov edi, 1                              ; /src:1343
0x00005710      e81bf9ffff     call sym.usage
0x00005715      31c0           xor eax, eax                            ; /src:1340
0x00005717      4883c9ff       or rcx, 0xffffffffffffffff
0x0000571b      4c89f7         mov rdi, r14
0x0000571e      f2ae           repne scasb al, byte [rdi]
0x00005720      4889c8         mov rax, rcx
0x00005723      48f7d0         not rax
0x00005726      4883e801       sub rax, 1
0x0000572a      eba3           jmp 0x56cf
0x0000572c      0f1f4000       nop dword [rax]
;-- skip:
0x00005730      4157           push r15                                ; /src:1769
0x00005732      4156           push r14
0x00005734      4989d6         mov r14, rdx
0x00005737      4155           push r13
0x00005739      4154           push r12
0x0000573b      4d89c5         mov r13, r8
0x0000573e      55             push rbp
0x0000573f      53             push rbx
0x00005740      4989cc         mov r12, rcx
0x00005743      89fb           mov ebx, edi
0x00005745      4881ecb80000.  sub rsp, 0xb8
0x0000574c      498b28         mov rbp, qword [r8]                     ; /src:1770
0x0000574f      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1769
0x00005758      48898424a800.  mov qword [rsp + 0xa8], rax
0x00005760      31c0           xor eax, eax
0x00005762      48893424       mov qword [rsp], rsi
0x00005766      e815c3ffff     call sym.imp.__errno_location           ; /src:1776
0x0000576b      31d2           xor edx, edx                            ; /src:1777
0x0000576d      4989c7         mov r15, rax                            ; /src:1776
0x00005770      c70000000000   mov dword [rax], 0
0x00005776      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; /src:1777 ; 9223372036854775807
0x00005780      49f7f4         div r12
0x00005783      4c39f0         cmp rax, r14
0x00005786      726b           jb 0x57f3
0x00005788      4c89f0         mov rax, r14                            ; /src:1770
0x0000578b      488b3c24       mov rdi, qword [rsp]                    ; /src:1778
0x0000578f      b901000000     mov ecx, 1
0x00005794      490fafc4       imul rax, r12                           ; /src:1770
0x00005798      89de           mov esi, ebx                            ; /src:1778
0x0000579a      4801c5         add rbp, rax                            ; /src:1770
0x0000579d      4889ea         mov rdx, rbp                            ; /src:1778
0x000057a0      e80bedffff     call sym.skip_via_lseek
0x000057a5      4885c0         test rax, rax
0x000057a8      0f8817010000   js 0x58c5
0x000057ae      85db           test ebx, ebx                           ; /src:1780
0x000057b0      0f846c010000   je 0x5922
0x000057b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057c0      49c745000000.  mov qword [r13], 0                      ; /src:1800
0x000057c8      31c0           xor eax, eax                            ; /src:1799
0x000057ca      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x000057d2      6448330c2528.  xor rcx, qword fs:[0x28]
0x000057db      0f855f020000   jne 0x5a40
0x000057e1      4881c4b80000.  add rsp, 0xb8
0x000057e8      5b             pop rbx
0x000057e9      5d             pop rbp                                 ; ../coreutils-8.31/src/.c:1768
0x000057ea      415c           pop r12
0x000057ec      415d           pop r13
0x000057ee      415e           pop r14
0x000057f0      415f           pop r15
0x000057f2      c3             ret
0x000057f3      488b3c24       mov rdi, qword [rsp]
0x000057f7      31d2           xor edx, edx
0x000057f9      b902000000     mov ecx, 2                              ; ../coreutils-8.31/src/.c:1598
0x000057fe      89de           mov esi, ebx
0x00005800      e8abecffff     call sym.skip_via_lseek                 ; ../coreutils-8.31/src/.c:1599
0x00005805      4885c0         test rax, rax                           ; ../coreutils-8.31/src/.c:1600
0x00005808      0f89e0000000   jns 0x58ee
0x0000580e      c744240c0000.  mov dword [rsp + 0xc], 0
0x00005816      85db           test ebx, ebx
0x00005818      757f           jne 0x5899
0x0000581a      48833df6ba20.  cmp qword [obj.ibuf], 0                 ; [0x211318:8]=0
0x00005822      0f8459010000   je 0x5981
0x00005828      488b2de9ba20.  mov rbp, qword [obj.ibuf]               ; ../coreutils-8.31/src/.c:1753 ; [0x211318:8]=0
0x0000582f      90             nop
0x00005830      4d85f6         test r14, r14
0x00005833      488b0526ba20.  mov rax, qword [obj.iread_fnc]          ; [0x211260:8]=0
0x0000583a      4c89e2         mov rdx, r12
0x0000583d      7471           je 0x58b0
0x0000583f      4889ee         mov rsi, rbp
0x00005842      89df           mov edi, ebx
0x00005844      ffd0           call rax
0x00005846      4885c0         test rax, rax
0x00005849      0f884f010000   js 0x599e
0x0000584f      746c           je 0x58bd
0x00005851      85db           test ebx, ebx
0x00005853      751f           jne 0x5874
0x00005855      31d2           xor edx, edx
0x00005857      480305d2ba20.  add rax, qword [obj.input_offset]       ; [0x211330:8]=0
0x0000585e      0f92c2         setb dl
0x00005861      488905c8ba20.  mov qword [obj.input_offset], rax       ; [0x211330:8]=0
0x00005868      4885d2         test rdx, rdx
0x0000586b      7407           je 0x5874
0x0000586d      c605b5ba2000.  mov byte [obj.input_offset_overflow], 1 ; ../coreutils-8.31/src/.c:1705 ; [0x211329:1]=0
0x00005874      4d85f6         test r14, r14
0x00005877      0f8443ffffff   je 0x57c0
0x0000587d      4983ee01       sub r14, 1
0x00005881      75ad           jne 0x5830
0x00005883      498b5500       mov rdx, qword [r13]
0x00005887      4885d2         test rdx, rdx
0x0000588a      0f84a9010000   je 0x5a39
0x00005890      488b05c9b920.  mov rax, qword [obj.iread_fnc]          ; ../coreutils-8.31/src/.c:1729 ; [0x211260:8]=0
0x00005897      eb1f           jmp 0x58b8
0x00005899      e802f5ffff     call sym.alloc_obuf
0x0000589e      488b2d6bba20.  mov rbp, qword [obj.obuf]               ; [0x211310:8]=0
0x000058a5      eb89           jmp 0x5830
0x000058a7      660f1f840000.  nop word [rax + rax]
0x000058b0      498b5500       mov rdx, qword [r13]
0x000058b4      0f1f4000       nop dword [rax]
0x000058b8      4531f6         xor r14d, r14d
0x000058bb      eb82           jmp 0x583f
0x000058bd      4c89f0         mov rax, r14
0x000058c0      e905ffffff     jmp 0x57ca
0x000058c5      418b07         mov eax, dword [r15]
0x000058c8      488b3c24       mov rdi, qword [rsp]
0x000058cc      31d2           xor edx, edx
0x000058ce      b902000000     mov ecx, 2
0x000058d3      89de           mov esi, ebx                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:603
0x000058d5      8944240c       mov dword [rsp + 0xc], eax
0x000058d9      e8d2ebffff     call sym.skip_via_lseek
0x000058de      4885c0         test rax, rax
0x000058e1      0f882fffffff   js 0x5816
0x000058e7      837c240c00     cmp dword [rsp + 0xc], 0
0x000058ec      7508           jne 0x58f6
0x000058ee      c744240c4b00.  mov dword [rsp + 0xc], 0x4b             ; /src:1684 ; 'K'
                                                                       ; [0x4b:4]=0
0x000058f6      31ff           xor edi, edi
0x000058f8      85db           test ebx, ebx
0x000058fa      488b1424       mov rdx, qword [rsp]
0x000058fe      be03000000     mov esi, 3
0x00005903      0f8500010000   jne 0x5a09
0x00005909      e8d2310000     call sym.quotearg_n_style_colon
0x0000590e      ba05000000     mov edx, 5
0x00005913      4889c3         mov rbx, rax
0x00005916      488d35996e00.  lea rsi, str.s:_cannot_skip             ; 0xc7b6 ; "%s: cannot skip"
0x0000591d      e9fb000000     jmp 0x5a1d
0x00005922      488d542410     lea rdx, [rsp + 0x10]
0x00005927      31f6           xor esi, esi
0x00005929      bf01000000     mov edi, 1
0x0000592e      e8fdc3ffff     call sym.imp.__fxstat
0x00005933      85c0           test eax, eax
0x00005935      0f850a010000   jne 0x5a45
0x0000593b      8b542428       mov edx, dword [rsp + 0x28]
0x0000593f      31c0           xor eax, eax
0x00005941      488b0de8b920.  mov rcx, qword [obj.input_offset]       ; [0x211330:8]=0
0x00005948      81e200d00000   and edx, 0xd000
0x0000594e      81fa00800000   cmp edx, 0x8000
0x00005954      750f           jne 0x5965
0x00005956      488b742440     mov rsi, qword [rsp + 0x40]
0x0000595b      488d540d00     lea rdx, [rbp + rcx]
0x00005960      4839d6         cmp rsi, rdx
0x00005963      7226           jb 0x598b
0x00005965      4801cd         add rbp, rcx
0x00005968      48892dc1b920.  mov qword [obj.input_offset], rbp       ; /src:644 ; [0x211330:8]=0
0x0000596f      0f8355feffff   jae 0x57ca
0x00005975      c605adb92000.  mov byte [obj.input_offset_overflow], 1 ; [0x211329:1]=0
0x0000597c      e949feffff     jmp 0x57ca
0x00005981      e89af2ffff     call sym.alloc_ibuf.part.4
0x00005986      e99dfeffff     jmp 0x5828
0x0000598b      4889e8         mov rax, rbp
0x0000598e      31d2           xor edx, edx
0x00005990      4829f0         sub rax, rsi
0x00005993      4829ce         sub rsi, rcx
0x00005996      49f7f4         div r12
0x00005999      4889f5         mov rbp, rsi
0x0000599c      ebc7           jmp 0x5965
0x0000599e      85db           test ebx, ebx
0x000059a0      755c           jne 0x59fe
0x000059a2      488b3424       mov rsi, qword [rsp]
0x000059a6      bf04000000     mov edi, 4
0x000059ab      e830300000     call sym.quotearg_style
0x000059b0      488d351f6e00.  lea rsi, str.error_reading__s           ; 0xc7d6 ; "error reading %s"
0x000059b7      31ff           xor edi, edi
0x000059b9      ba05000000     mov edx, 5                              ; /src:1522
0x000059be      4889c3         mov rbx, rax                            ; /src:1425
0x000059c1      e89ac1ffff     call sym.imp.dcgettext
0x000059c6      418b37         mov esi, dword [r15]
0x000059c9      4889c2         mov rdx, rax
0x000059cc      31ff           xor edi, edi
0x000059ce      31c0           xor eax, eax
0x000059d0      4889d9         mov rcx, rbx
0x000059d3      e868e7ffff     call sym.nl_error
0x000059d8      f605aeb92000.  test byte [0x0021138d], 1               ; [0x21138d:1]=0
0x000059df      740e           je 0x59ef
0x000059e1      833d34b62000.  cmp dword [obj.status_level], 1         ; [0x21101c:4]=3
0x000059e8      7405           je 0x59ef
0x000059ea      e881edffff     call sym.print_stats.part.2
0x000059ef      e80cf2ffff     call sym.finish_up
0x000059f4      bf01000000     mov edi, 1
0x000059f9      e812c4ffff     call sym.imp.exit                       ; /src:900
0x000059fe      488b1424       mov rdx, qword [rsp]
0x00005a02      be03000000     mov esi, 3
0x00005a07      31ff           xor edi, edi
0x00005a09      e8d2300000     call sym.quotearg_n_style_colon
0x00005a0e      488d35b16d00.  lea rsi, str.s:_cannot_seek             ; 0xc7c6 ; "%s: cannot seek"
0x00005a15      4889c3         mov rbx, rax
0x00005a18      ba05000000     mov edx, 5
0x00005a1d      31ff           xor edi, edi
0x00005a1f      e83cc1ffff     call sym.imp.dcgettext
0x00005a24      8b74240c       mov esi, dword [rsp + 0xc]
0x00005a28      4889c2         mov rdx, rax
0x00005a2b      4889d9         mov rcx, rbx
0x00005a2e      31ff           xor edi, edi
0x00005a30      31c0           xor eax, eax
0x00005a32      e809e7ffff     call sym.nl_error
0x00005a37      ebb6           jmp 0x59ef
0x00005a39      31c0           xor eax, eax
0x00005a3b      e98afdffff     jmp 0x57ca
0x00005a40      e84bc1ffff     call sym.imp.__stack_chk_fail
0x00005a45      488b3424       mov rsi, qword [rsp]
0x00005a49      bf04000000     mov edi, 4
0x00005a4e      e88d2f0000     call sym.quotearg_style
0x00005a53      488d354c6d00.  lea rsi, str.cannot_fstat__s            ; 0xc7a6 ; "cannot fstat %s"
0x00005a5a      ba05000000     mov edx, 5
0x00005a5f      31ff           xor edi, edi
0x00005a61      4889c3         mov rbx, rax
0x00005a64      e8f7c0ffff     call sym.imp.dcgettext
0x00005a69      418b37         mov esi, dword [r15]
0x00005a6c      4889c2         mov rdx, rax
0x00005a6f      4889d9         mov rcx, rbx
0x00005a72      bf01000000     mov edi, 1
0x00005a77      31c0           xor eax, eax
0x00005a79      e8c2e6ffff     call sym.nl_error
0x00005a7e      6690           nop
;-- write_output:
0x00005a80      488b3541b920.  mov rsi, qword [obj.output_blocksize]   ; /src:907 ; [0x2113c8:8]=0
0x00005a87      488b3d82b820.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00005a8e      4154           push r12
0x00005a90      55             push rbp
0x00005a91      53             push rbx
0x00005a92      e899f3ffff     call sym.iwrite.constprop.7
0x00005a97      480105bab820.  add qword [obj.w_bytes], rax            ; [0x211358:8]=0
0x00005a9e      48390523b920.  cmp qword [obj.output_blocksize], rax   ; [0x2113c8:8]=0
0x00005aa5      7518           jne 0x5abf
0x00005aa7      5b             pop rbx
0x00005aa8      488305c0b820.  add qword [obj.w_full], 1               ; [0x211370:8]=0
0x00005ab0      48c7054db820.  mov qword [obj.oc], 0                   ; [0x211308:8]=0
0x00005abb      5d             pop rbp
0x00005abc      415c           pop r12
0x00005abe      c3             ret
0x00005abf      488b351ab920.  mov rsi, qword [obj.output_file]        ; [0x2113e0:8]=0
0x00005ac6      bf04000000     mov edi, 4
0x00005acb      4889c3         mov rbx, rax
0x00005ace      e80d2f0000     call sym.quotearg_style
0x00005ad3      488d350d6d00.  lea rsi, str.writing_to__s              ; 0xc7e7 ; "writing to %s"
0x00005ada      31ff           xor edi, edi
0x00005adc      ba05000000     mov edx, 5
0x00005ae1      4989c4         mov r12, rax
0x00005ae4      e877c0ffff     call sym.imp.dcgettext
0x00005ae9      4889c5         mov rbp, rax
0x00005aec      e88fbfffff     call sym.imp.__errno_location
0x00005af1      8b30           mov esi, dword [rax]                    ; /src:1617
0x00005af3      31ff           xor edi, edi
0x00005af5      31c0           xor eax, eax                            ; /src:1599
0x00005af7      4c89e1         mov rcx, r12
0x00005afa      4889ea         mov rdx, rbp
0x00005afd      e83ee6ffff     call sym.nl_error
0x00005b02      4885db         test rbx, rbx
0x00005b05      7408           je 0x5b0f
0x00005b07      48830569b820.  add qword [obj.w_partial], 1            ; [0x211378:8]=0
0x00005b0f      e8ecf0ffff     call sym.finish_up
0x00005b14      bf01000000     mov edi, 1
0x00005b19      e8f2c2ffff     call sym.imp.exit
0x00005b1e      6690           nop
;-- copy_with_block:
0x00005b20      4885f6         test rsi, rsi
0x00005b23      0f8407010000   je 0x5c30
0x00005b29      4154           push r12
0x00005b2b      4c8d2437       lea r12, [rdi + rsi]
0x00005b2f      55             push rbp
0x00005b30      4889fd         mov rbp, rdi
0x00005b33      53             push rbx
0x00005b34      eb52           jmp 0x5b88                              ; /src:1620
0x00005b36      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b40      4839da         cmp rdx, rbx
0x00005b43      0f84bf000000   je 0x5c08
0x00005b49      7629           jbe 0x5b74
0x00005b4b      488b0db6b720.  mov rcx, qword [obj.oc]                 ; /src:1607 ; [0x211308:8]=0
0x00005b52      488b35b7b720.  mov rsi, qword [obj.obuf]               ; [0x211310:8]=0
0x00005b59      488d5101       lea rdx, [rcx + 1]
0x00005b5d      483b1564b820.  cmp rdx, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00005b64      88040e         mov byte [rsi + rcx], al
0x00005b67      4889159ab720.  mov qword [obj.oc], rdx                 ; [0x211308:8]=0
0x00005b6e      0f83a4000000   jae 0x5c18
0x00005b74      4883c501       add rbp, 1
0x00005b78      4883c301       add rbx, 1
0x00005b7c      4939ec         cmp r12, rbp
0x00005b7f      48891d7ab720.  mov qword [obj.col], rbx                ; [0x211300:8]=0
0x00005b86      7433           je 0x5bbb
0x00005b88      0fb64500       movzx eax, byte [rbp]
0x00005b8c      488b1d6db720.  mov rbx, qword [obj.col]                ; [0x211300:8]=0
0x00005b93      3a0581b42000   cmp al, byte [obj.newline_character]    ; [0x21101a:1]=10 ; u"\n\x03"
0x00005b99      488b1520b820.  mov rdx, qword [obj.conversion_blocksize] ; [0x2113c0:8]=0
0x00005ba0      759e           jne 0x5b40
0x00005ba2      4839da         cmp rdx, rbx
0x00005ba5      772b           ja 0x5bd2
0x00005ba7      4883c501       add rbp, 1
0x00005bab      48c7054ab720.  mov qword [obj.col], 0                  ; [0x211300:8]=0
0x00005bb6      4939ec         cmp r12, rbp
0x00005bb9      75cd           jne 0x5b88                              ; /src:1628
0x00005bbb      5b             pop rbx
0x00005bbc      5d             pop rbp
0x00005bbd      415c           pop r12
0x00005bbf      c3             ret
0x00005bc0      e8bbfeffff     call sym.write_output
0x00005bc5      4883c301       add rbx, 1
0x00005bc9      48391df0b720.  cmp qword [obj.conversion_blocksize], rbx ; [0x2113c0:8]=0
0x00005bd0      76d5           jbe 0x5ba7
0x00005bd2      488b152fb720.  mov rdx, qword [obj.oc]                 ; [0x211308:8]=0
0x00005bd9      0fb63539b420.  movzx esi, byte [obj.space_character]   ; /src:1639 ; [0x211019:1]=32 ; " \n"
0x00005be0      488b0d29b720.  mov rcx, qword [obj.obuf]               ; /src:1638 ; [0x211310:8]=0
0x00005be7      488d4201       lea rax, [rdx + 1]
0x00005beb      483b05d6b720.  cmp rax, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00005bf2      40883411       mov byte [rcx + rdx], sil               ; /src:1637
0x00005bf6      4889050bb720.  mov qword [obj.oc], rax                 ; [0x211308:8]=0
0x00005bfd      72c6           jb 0x5bc5
0x00005bff      ebbf           jmp 0x5bc0
0x00005c01      0f1f80000000.  nop dword [rax]
0x00005c08      48830510b720.  add qword [obj.r_truncate], 1           ; /src:1639 ; [0x211320:8]=0
0x00005c10      e95fffffff     jmp 0x5b74
0x00005c15      0f1f00         nop dword [rax]
0x00005c18      e863feffff     call sym.write_output
0x00005c1d      488b1ddcb620.  mov rbx, qword [obj.col]                ; [0x211300:8]=0
0x00005c24      e94bffffff     jmp 0x5b74                              ; /src:1631
0x00005c29      0f1f80000000.  nop dword [rax]
0x00005c30      f3c3           ret
0x00005c32      0f1f4000       nop dword [rax]
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- copy_with_unblock:
0x00005c40      4885f6         test rsi, rsi
0x00005c43      0f845f010000   je 0x5da8
0x00005c49      4155           push r13
0x00005c4b      4154           push r12
0x00005c4d      4989fc         mov r12, rdi
0x00005c50      55             push rbp
0x00005c51      53             push rbx                                ; /src:1641
0x00005c52      4889f5         mov rbp, rsi
0x00005c55      31db           xor ebx, ebx
0x00005c57      4883ec08       sub rsp, 8
0x00005c5b      eb5b           jmp 0x5cb8
0x00005c5d      0f1f00         nop dword [rax]
0x00005c60      488b15a1b620.  mov rdx, qword [obj.oc]                 ; [0x211308:8]=0
0x00005c67      4883eb01       sub rbx, 1
0x00005c6b      0fb635a8b320.  movzx esi, byte [obj.newline_character] ; [0x21101a:1]=10 ; u"\n\x03"
0x00005c72      488b0d97b620.  mov rcx, qword [obj.obuf]               ; [0x211310:8]=0
0x00005c79      48c705acb420.  mov qword [obj.pending_spaces.7443], 0  ; [0x211130:8]=0
0x00005c84      48c70571b620.  mov qword [obj.col], 0                  ; [0x211300:8]=0
0x00005c8f      488d4201       lea rax, [rdx + 1]
0x00005c93      483b052eb720.  cmp rax, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00005c9a      40883411       mov byte [rcx + rdx], sil
0x00005c9e      48890563b620.  mov qword [obj.oc], rax                 ; [0x211308:8]=0
0x00005ca5      0f83c8000000   jae 0x5d73
0x00005cab      4883c301       add rbx, 1
0x00005caf      4839dd         cmp rbp, rbx
0x00005cb2      0f86cd000000   jbe 0x5d85
0x00005cb8      488b0541b620.  mov rax, qword [obj.col]                ; [0x211300:8]=0
0x00005cbf      483b05fab620.  cmp rax, qword [obj.conversion_blocksize] ; [0x2113c0:8]=0
0x00005cc6      450fb62c1c     movzx r13d, byte [r12 + rbx]
0x00005ccb      488d5001       lea rdx, [rax + 1]
0x00005ccf      4889152ab620.  mov qword [obj.col], rdx                ; [0x211300:8]=0
0x00005cd6      7388           jae 0x5c60
0x00005cd8      0fb60d3ab320.  movzx ecx, byte [obj.space_character]   ; [0x211019:1]=32 ; " \n"
0x00005cdf      488b154ab420.  mov rdx, qword [obj.pending_spaces.7443] ; [0x211130:8]=0
0x00005ce6      4438e9         cmp cl, r13b
0x00005ce9      0f84a1000000   je 0x5d90
0x00005cef      4885d2         test rdx, rdx
0x00005cf2      488b3d17b620.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00005cf9      488b0508b620.  mov rax, qword [obj.oc]                 ; [0x211308:8]=0
0x00005d00      488b35c1b620.  mov rsi, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00005d07      751b           jne 0x5d24
0x00005d09      e992000000     jmp 0x5da0                              ; /src:1642
0x00005d0e      6690           nop
0x00005d10      48832d18b420.  sub qword [obj.pending_spaces.7443], 1  ; [0x211130:8]=0
0x00005d18      7441           je 0x5d5b
0x00005d1a      0fb60df8b220.  movzx ecx, byte [obj.space_character]   ; [0x211019:1]=32 ; " \n"
0x00005d21      4889d0         mov rax, rdx
0x00005d24      488d5001       lea rdx, [rax + 1]
0x00005d28      880c07         mov byte [rdi + rax], cl
0x00005d2b      4839f2         cmp rdx, rsi
0x00005d2e      488915d3b520.  mov qword [obj.oc], rdx                 ; [0x211308:8]=0
0x00005d35      72d9           jb 0x5d10
0x00005d37      e844fdffff     call sym.write_output
0x00005d3c      48832decb320.  sub qword [obj.pending_spaces.7443], 1  ; [0x211130:8]=0
0x00005d44      488b3dc5b520.  mov rdi, qword [obj.obuf]               ; [0x211310:8]=0
0x00005d4b      488b15b6b520.  mov rdx, qword [obj.oc]                 ; [0x211308:8]=0
0x00005d52      488b356fb620.  mov rsi, qword [obj.output_blocksize]   ; [0x2113c8:8]=0
0x00005d59      75bf           jne 0x5d1a
0x00005d5b      488d4201       lea rax, [rdx + 1]
0x00005d5f      44882c17       mov byte [rdi + rdx], r13b
0x00005d63      4839f0         cmp rax, rsi
0x00005d66      4889059bb520.  mov qword [obj.oc], rax                 ; [0x211308:8]=0
0x00005d6d      0f8238ffffff   jb 0x5cab
0x00005d73      4883c301       add rbx, 1
0x00005d77      e804fdffff     call sym.write_output
0x00005d7c      4839dd         cmp rbp, rbx
0x00005d7f      0f8733ffffff   ja 0x5cb8
0x00005d85      4883c408       add rsp, 8
0x00005d89      5b             pop rbx
0x00005d8a      5d             pop rbp
0x00005d8b      415c           pop r12
0x00005d8d      415d           pop r13
0x00005d8f      c3             ret
0x00005d90      4883c201       add rdx, 1
0x00005d94      48891595b320.  mov qword [obj.pending_spaces.7443], rdx ; [0x211130:8]=0
0x00005d9b      e90bffffff     jmp 0x5cab
0x00005da0      4889c2         mov rdx, rax
0x00005da3      ebb6           jmp 0x5d5b
0x00005da5      0f1f00         nop dword [rax]
0x00005da8      f3c3           ret
0x00005daa      660f1f440000   nop word [rax + rax]
;-- close_stream:
0x00005db0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005db2      55             push rbp
0x00005db3      4889fd         mov rbp, rdi
0x00005db6      53             push rbx
0x00005db7      e814bdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005dbc      8b5d00         mov ebx, dword [rbp]
0x00005dbf      4889ef         mov rdi, rbp
0x00005dc2      4989c4         mov r12, rax
0x00005dc5      e8a63e0000     call sym.rpl_fclose
0x00005dca      83e320         and ebx, 0x20                           ; "@"
0x00005dcd      85db           test ebx, ebx
0x00005dcf      7517           jne 0x5de8
0x00005dd1      85c0           test eax, eax
0x00005dd3      740a           je 0x5ddf                               ; stdio.h:-186
0x00005dd5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005dd8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005ddd      7439           je 0x5e18
0x00005ddf      5b             pop rbx
0x00005de0      5d             pop rbp
0x00005de1      415c           pop r12
0x00005de3      c3             ret
0x00005de4      0f1f4000       nop dword [rax]
0x00005de8      85c0           test eax, eax
0x00005dea      751c           jne 0x5e08
0x00005dec      e88fbcffff     call sym.imp.__errno_location
0x00005df1      c70000000000   mov dword [rax], 0
0x00005df7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005dfc      5b             pop rbx
0x00005dfd      5d             pop rbp
0x00005dfe      415c           pop r12
0x00005e00      c3             ret
0x00005e01      0f1f80000000.  nop dword [rax]
0x00005e08      5b             pop rbx
0x00005e09      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005e0e      5d             pop rbp                                 ; stdio.h:-186
0x00005e0f      415c           pop r12
0x00005e11      c3             ret
0x00005e12      660f1f440000   nop word [rax + rax]
0x00005e18      e863bcffff     call sym.imp.__errno_location
0x00005e1d      833809         cmp dword [rax], 9
0x00005e20      5b             pop rbx
0x00005e21      5d             pop rbp
0x00005e22      415c           pop r12                                 ; stdio.h:-178
0x00005e24      0f95c0         setne al
0x00005e27      0fb6c0         movzx eax, al
0x00005e2a      f7d8           neg eax
0x00005e2c      c3             ret
0x00005e2d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00005e30      48893dc1b520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2113f8:8]=0
0x00005e37      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005e38      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005e40      40883da9b520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2113f0:1]=0
0x00005e47      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005e48      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005e50      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005e51      53             push rbx
0x00005e52      4883ec08       sub rsp, 8
0x00005e56      488b3d6bb220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00005e5d      e84effffff     call sym.close_stream
0x00005e62      85c0           test eax, eax
0x00005e64      7416           je 0x5e7c
0x00005e66      e815bcffff     call sym.imp.__errno_location
0x00005e6b      803d7eb52000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2113f0:1]=0
0x00005e72      4889c3         mov rbx, rax
0x00005e75      741c           je 0x5e93
0x00005e77      833820         cmp dword [rax], 0x20
0x00005e7a      7517           jne 0x5e93
0x00005e7c      488b3d7db220.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00005e83      e828ffffff     call sym.close_stream
0x00005e88      85c0           test eax, eax
0x00005e8a      7546           jne 0x5ed2
0x00005e8c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005e90      5b             pop rbx
0x00005e91      5d             pop rbp
0x00005e92      c3             ret
0x00005e93      488d35e38200.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xe17d ; "write error"
0x00005e9a      31ff           xor edi, edi
0x00005e9c      ba05000000     mov edx, 5
0x00005ea1      e8babcffff     call sym.imp.dcgettext
0x00005ea6      488b3d4bb520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2113f8:8]=0
0x00005ead      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005eb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005eb3      7428           je 0x5edd
0x00005eb5      e8f62b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00005eba      8b33           mov esi, dword [rbx]
0x00005ebc      488d15dc6800.  lea rdx, str.s:__s                      ; 0xc79f ; "%s: %s"
0x00005ec3      4889c1         mov rcx, rax
0x00005ec6      4989e8         mov r8, rbp
0x00005ec9      31ff           xor edi, edi
0x00005ecb      31c0           xor eax, eax
0x00005ecd      e8bebeffff     call sym.imp.error
0x00005ed2      8b3d58b12000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x211030:4]=1
0x00005ed8      e8e3bbffff     call sym.imp._exit
0x00005edd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00005edf      488d15866700.  lea rdx, [0x0000c66c]                   ; "%s"
0x00005ee6      4889c1         mov rcx, rax
0x00005ee9      31ff           xor edi, edi
0x00005eeb      31c0           xor eax, eax
0x00005eed      e89ebeffff     call sym.imp.error
0x00005ef2      ebde           jmp 0x5ed2
0x00005ef4      662e0f1f8400.  nop word cs:[rax + rax]
0x00005efe      6690           nop
;-- fd_reopen:
0x00005f00      4155           push r13                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00005f02      4154           push r12
0x00005f04      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005f06      55             push rbp                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x00005f07      53             push rbx
0x00005f08      89fd           mov ebp, edi
0x00005f0a      4889f7         mov rdi, rsi
0x00005f0d      89d6           mov esi, edx
0x00005f0f      89ca           mov edx, ecx
0x00005f11      4883ec08       sub rsp, 8
0x00005f15      e896beffff     call sym.imp.open                       ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005f1a      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00005f1c      89c3           mov ebx, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005f1e      7429           je 0x5f49                               ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00005f20      85c0           test eax, eax
0x00005f22      7825           js 0x5f49
0x00005f24      89ee           mov esi, ebp                            ; ../coreutils-8.31/lib/fd-reopen.c:40
0x00005f26      89c7           mov edi, eax
0x00005f28      e893bcffff     call sym.imp.dup2
0x00005f2d      4189c4         mov r12d, eax
0x00005f30      e84bbbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-reopen.c:41
0x00005f35      448b28         mov r13d, dword [rax]
0x00005f38      4889c5         mov rbp, rax
0x00005f3b      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-reopen.c:42
0x00005f3d      e81ebdffff     call sym.imp.close
0x00005f42      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-reopen.c:44
0x00005f45      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-reopen.c:43
0x00005f49      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-reopen.c:46
0x00005f4d      89d8           mov eax, ebx
0x00005f4f      5b             pop rbx
0x00005f50      5d             pop rbp
0x00005f51      415c           pop r12
0x00005f53      415d           pop r13
0x00005f55      c3             ret
0x00005f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- gethrxtime:
0x00005f60      53             push rbx                                ; ../coreutils-8.31/lib/gethrxtime.c:37
0x00005f61      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/gethrxtime.c:49
0x00005f66      4883ec20       sub rsp, 0x20                           ; ../coreutils-8.31/lib/gethrxtime.c:37
0x00005f6a      4889e3         mov rbx, rsp                            ; ../coreutils-8.31/lib/gethrxtime.c:49
0x00005f6d      4889de         mov rsi, rbx
0x00005f70      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gethrxtime.c:37
0x00005f79      4889442418     mov qword [rsp + 0x18], rax
0x00005f7e      31c0           xor eax, eax
0x00005f80      e88bbbffff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gethrxtime.c:49
0x00005f85      85c0           test eax, eax
0x00005f87      7408           je 0x5f91
0x00005f89      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/gethrxtime.c:66
0x00005f8c      e85f000000     call sym.gettime
0x00005f91      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/gethrxtime.c:67
0x00005f96      48bab394d626.  movabs rdx, 0x112e0be826d694b3          ; ../coreutils-8.31/lib/xtime.h:58
0x00005fa0      4889c8         mov rax, rcx
0x00005fa3      48f7ea         imul rdx
0x00005fa6      4889c8         mov rax, rcx
0x00005fa9      48c1f83f       sar rax, 0x3f
0x00005fad      48c1fa1a       sar rdx, 0x1a
0x00005fb1      4829c2         sub rdx, rax
0x00005fb4      488b0424       mov rax, qword [rsp]
0x00005fb8      4801d0         add rax, rdx
0x00005fbb      4869d200ca9a.  imul rdx, rdx, 0x3b9aca00               ; ../coreutils-8.31/lib/xtime.h:59
0x00005fc2      4869c000ca9a.  imul rax, rax, 0x3b9aca00               ; ../coreutils-8.31/lib/xtime.h:63
0x00005fc9      4829d1         sub rcx, rdx                            ; ../coreutils-8.31/lib/xtime.h:59
0x00005fcc      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/xtime.h:63
0x00005fcf      488b742418     mov rsi, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gethrxtime.c:71
0x00005fd4      644833342528.  xor rsi, qword fs:[0x28]
0x00005fdd      7506           jne 0x5fe5
0x00005fdf      4883c420       add rsp, 0x20
0x00005fe3      5b             pop rbx
0x00005fe4      c3             ret
0x00005fe5      e8a6bbffff     call sym.imp.__stack_chk_fail
0x00005fea      660f1f440000   nop word [rax + rax]
;-- gettime:
0x00005ff0      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x00005ff3      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00005ff5      e916bbffff     jmp sym.imp.clock_gettime
0x00005ffa      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x00006000      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x00006004      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x00006006      4889e6         mov rsi, rsp
0x00006009      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x00006012      4889442418     mov qword [rsp + 0x18], rax
0x00006017      31c0           xor eax, eax
0x00006019      e8f2baffff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x0000601e      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x00006023      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000602c      488b0424       mov rax, qword [rsp]
0x00006030      488b542408     mov rdx, qword [rsp + 8]
0x00006035      7505           jne 0x603c
0x00006037      4883c428       add rsp, 0x28
0x0000603b      c3             ret
0x0000603c      e84fbbffff     call sym.imp.__stack_chk_fail
0x00006041      662e0f1f8400.  nop word cs:[rax + rax]
0x0000604b      0f1f440000     nop dword [rax + rax]
;-- adjust_value.part.0:
0x00006050      d9058e810000   fld dword [0x0000e1e4]                  ; ../coreutils-8.31/lib/human.c:54
0x00006056      db6c2408       fld xword [rsp + 8]
0x0000605a      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x0000605c      7372           jae 0x60d0
0x0000605e      ddd9           fstp st(1)
0x00006060      d97c24f6       fnstcw word [rsp - 0xa]
0x00006064      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00006069      80cc0c         or ah, 0xc
0x0000606c      66894424f4     mov word [rsp - 0xc], ax
0x00006071      d9c0           fld st(0)
0x00006073      d96c24f4       fldcw word [rsp - 0xc]
0x00006077      df7c24e8       fistp qword [rsp - 0x18]
0x0000607b      d96c24f6       fldcw word [rsp - 0xa]
0x0000607f      488b4424e8     mov rax, qword [rsp - 0x18]
0x00006084      48894424e0     mov qword [rsp - 0x20], rax
0x00006089      4885c0         test rax, rax
0x0000608c      df6c24e0       fild qword [rsp - 0x20]
0x00006090      7906           jns 0x6098
0x00006092      d80550810000   fadd dword [0x0000e1e8]
0x00006098      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x0000609a      752c           jne 0x60c8
0x0000609c      d9c9           fxch st(1)
0x0000609e      dfe9           fucomip st(1)
0x000060a0      7a06           jp 0x60a8
0x000060a2      7426           je 0x60ca
0x000060a4      ddd8           fstp st(0)
0x000060a6      eb08           jmp 0x60b0
0x000060a8      ddd8           fstp st(0)
0x000060aa      660f1f440000   nop word [rax + rax]
0x000060b0      4883c001       add rax, 1
0x000060b4      48894424e0     mov qword [rsp - 0x20], rax
0x000060b9      4885c0         test rax, rax
0x000060bc      df6c24e0       fild qword [rsp - 0x20]
0x000060c0      784e           js 0x6110
0x000060c2      eb06           jmp 0x60ca
0x000060c4      0f1f4000       nop dword [rax]
0x000060c8      ddd9           fstp st(1)
0x000060ca      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x000060cc      0f1f4000       nop dword [rax]
0x000060d0      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x000060d4      0fb74424f6     movzx eax, word [rsp - 0xa]
0x000060d9      dce1           fsubr st(1), st(0)
0x000060db      d9c9           fxch st(1)
0x000060dd      48ba00000000.  movabs rdx, 0x8000000000000000
0x000060e7      80cc0c         or ah, 0xc
0x000060ea      66894424f4     mov word [rsp - 0xc], ax
0x000060ef      d96c24f4       fldcw word [rsp - 0xc]
0x000060f3      df7c24e8       fistp qword [rsp - 0x18]
0x000060f7      d96c24f6       fldcw word [rsp - 0xa]
0x000060fb      488b4424e8     mov rax, qword [rsp - 0x18]
0x00006100      4831d0         xor rax, rdx
0x00006103      e97cffffff     jmp 0x6084
0x00006108      0f1f84000000.  nop dword [rax + rax]
0x00006110      d805d2800000   fadd dword [0x0000e1e8]
0x00006116      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x00006117      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x00006120      4157           push r15
0x00006122      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x00006124      89d0           mov eax, edx
0x00006126      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x00006128      4154           push r12
0x0000612a      4189d7         mov r15d, edx
0x0000612d      55             push rbp
0x0000612e      53             push rbx
0x0000612f      83e020         and eax, 0x20                           ; "@"
0x00006132      4183e703       and r15d, 3
0x00006136      4189d4         mov r12d, edx
0x00006139      4889fb         mov rbx, rdi
0x0000613c      4881ec980000.  sub rsp, 0x98
0x00006143      48894c2418     mov qword [rsp + 0x18], rcx
0x00006148      89442430       mov dword [rsp + 0x30], eax
0x0000614c      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006155      48898c248800.  mov qword [rsp + 0x88], rcx
0x0000615d      31c9           xor ecx, ecx
0x0000615f      83f801         cmp eax, 1
0x00006162      48893424       mov qword [rsp], rsi
0x00006166      4c89442410     mov qword [rsp + 0x10], r8
0x0000616b      19c0           sbb eax, eax
0x0000616d      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x00006170      0500040000     add eax, 0x400
0x00006175      89442434       mov dword [rsp + 0x34], eax
0x00006179      e872b9ffff     call sym.imp.localeconv
0x0000617e      4c8b30         mov r14, qword [rax]
0x00006181      4989c5         mov r13, rax
0x00006184      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x00006187      e8f4b9ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x0000618c      498b4d10       mov rcx, qword [r13 + 0x10]
0x00006190      4d8b6d08       mov r13, qword [r13 + 8]
0x00006194      4889c5         mov rbp, rax
0x00006197      4883e801       sub rax, 1
0x0000619b      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x000061a0      4883f810       cmp rax, 0x10
0x000061a4      488d05de7f00.  lea rax, [0x0000e189]                   ; "."
0x000061ab      4c89ef         mov rdi, r13
0x000061ae      480f43ea       cmovae rbp, rdx
0x000061b2      48894c2438     mov qword [rsp + 0x38], rcx
0x000061b7      4c0f43f0       cmovae r14, rax
0x000061bb      e8c0b9ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x000061c0      4883f811       cmp rax, 0x11
0x000061c4      488d05d68500.  lea rax, [0x0000e7a1]
0x000061cb      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000061d0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000061d5      4c0f43e8       cmovae r13, rax
0x000061d9      488b0424       mov rax, qword [rsp]
0x000061dd      480587020000   add rax, 0x287
0x000061e3      4839cf         cmp rdi, rcx
0x000061e6      4889442408     mov qword [rsp + 8], rax
0x000061eb      0f8747010000   ja 0x6338
0x000061f1      31d2           xor edx, edx
0x000061f3      4889c8         mov rax, rcx
0x000061f6      48f7f7         div rdi
0x000061f9      4885d2         test rdx, rdx
0x000061fc      4889c7         mov rdi, rax
0x000061ff      0f845b030000   je 0x6560
0x00006205      48894c2418     mov qword [rsp + 0x18], rcx
0x0000620a      4885c9         test rcx, rcx
0x0000620d      df6c2418       fild qword [rsp + 0x18]
0x00006211      7906           jns 0x6219
0x00006213      d805cf7f0000   fadd dword [0x0000e1e8]
0x00006219      488b442410     mov rax, qword [rsp + 0x10]
0x0000621e      4889442418     mov qword [rsp + 0x18], rax
0x00006223      4885c0         test rax, rax
0x00006226      df6c2418       fild qword [rsp + 0x18]
0x0000622a      7906           jns 0x6232
0x0000622c      d805b67f0000   fadd dword [0x0000e1e8]
0x00006232      def9           fdivp st(1)
0x00006234      48895c2418     mov qword [rsp + 0x18], rbx
0x00006239      4885db         test rbx, rbx
0x0000623c      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x00006240      7906           jns 0x6248
0x00006242      d805a07f0000   fadd dword [0x0000e1e8]
0x00006248      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x0000624c      dec9           fmulp st(1)
0x0000624e      0f84c4010000   je 0x6418
0x00006254      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x00006258      31db           xor ebx, ebx
0x0000625a      d9c0           fld st(0)
0x0000625c      eb06           jmp 0x6264
0x0000625e      6690           nop
0x00006260      ddd9           fstp st(1)
0x00006262      d9ca           fxch st(2)
0x00006264      d9c0           fld st(0)
0x00006266      83c301         add ebx, 1
0x00006269      d8ca           fmul st(2)
0x0000626b      d9cb           fxch st(3)
0x0000626d      dbeb           fucomi st(3)
0x0000626f      720f           jb 0x6280
0x00006271      83fb08         cmp ebx, 8
0x00006274      75ea           jne 0x6260
0x00006276      ddda           fstp st(2)
0x00006278      ddda           fstp st(2)
0x0000627a      eb08           jmp 0x6284
0x0000627c      0f1f4000       nop dword [rax]
0x00006280      ddda           fstp st(2)
0x00006282      ddda           fstp st(2)
0x00006284      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00006288      4883c501       add rbp, 1
0x0000628c      31c0           xor eax, eax
0x0000628e      def1           fdivrp st(1)
0x00006290      85c9           test ecx, ecx
0x00006292      0f94c0         sete al
0x00006295      4183ff01       cmp r15d, 1
0x00006299      488d440501     lea rax, [rbp + rax + 1]
0x0000629e      4889442418     mov qword [rsp + 0x18], rax
0x000062a3      0f8467050000   je 0x6810
0x000062a9      db2d417f0000   fld xword [0x0000e1f0]
0x000062af      dfe9           fucomip st(1)
0x000062b1      0f87d1030000   ja 0x6688
0x000062b7      d9c0           fld st(0)
0x000062b9      db7c2420       fstp xword [rsp + 0x20]
0x000062bd      4883ec10       sub rsp, 0x10
0x000062c1      488d0dc97e00.  lea rcx, str..1Lf                       ; 0xe191 ; "%.1Lf"
0x000062c8      be01000000     mov esi, 1
0x000062cd      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000062d4      31c0           xor eax, eax
0x000062d6      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x000062db      4c89f7         mov rdi, r14
0x000062de      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x000062e1      e8aabbffff     call sym.imp.__sprintf_chk
0x000062e6      4c89f7         mov rdi, r14
0x000062e9      e892b8ffff     call sym.imp.strlen
0x000062ee      59             pop rcx
0x000062ef      5e             pop rsi
0x000062f0      483b442418     cmp rax, qword [rsp + 0x18]
0x000062f5      4989c6         mov r14, rax
0x000062f8      db6c2420       fld xword [rsp + 0x20]
0x000062fc      0f87a6050000   ja 0x68a8                               ; ../coreutils-8.31/lib/human.c:128
0x00006302      41f6c408       test r12b, 8
0x00006306      0f8464010000   je 0x6470
0x0000630c      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x00006310      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x00006316      0f855c010000   jne 0x6478
0x0000631c      d905ca7e0000   fld dword [0x0000e1ec]
0x00006322      4183ff01       cmp r15d, 1
0x00006326      dcc9           fmul st(1), st(0)
0x00006328      0f8582050000   jne 0x68b0                              ; ../coreutils-8.31/lib/human.c:81
0x0000632e      e930050000     jmp 0x6863
0x00006333      0f1f440000     nop dword [rax + rax]
0x00006338      4885c9         test rcx, rcx
0x0000633b      0f84c4feffff   je 0x6205
0x00006341      488b442410     mov rax, qword [rsp + 0x10]
0x00006346      31d2           xor edx, edx
0x00006348      48f7f1         div rcx
0x0000634b      4885d2         test rdx, rdx
0x0000634e      4989c0         mov r8, rax
0x00006351      0f85aefeffff   jne 0x6205
0x00006357      4889d8         mov rax, rbx
0x0000635a      31d2           xor edx, edx
0x0000635c      49f7f0         div r8
0x0000635f      4889c3         mov rbx, rax
0x00006362      488d0492       lea rax, [rdx + rdx*4]
0x00006366      31d2           xor edx, edx
0x00006368      4889de         mov rsi, rbx
0x0000636b      4801c0         add rax, rax
0x0000636e      49f7f0         div r8
0x00006371      4801d2         add rdx, rdx
0x00006374      4189c1         mov r9d, eax
0x00006377      4939d0         cmp r8, rdx
0x0000637a      0f8688050000   jbe 0x6908
0x00006380      31ff           xor edi, edi
0x00006382      4885d2         test rdx, rdx
0x00006385      400f95c7       setne dil
0x00006389      4489e1         mov ecx, r12d
0x0000638c      4c8b442408     mov r8, qword [rsp + 8]
0x00006391      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00006396      83e110         and ecx, 0x10
0x00006399      0f84c1030000   je 0x6760
0x0000639f      448b442434     mov r8d, dword [rsp + 0x34]
0x000063a4      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x000063a7      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x000063aa      0f8770050000   ja 0x6920
0x000063b0      31db           xor ebx, ebx
0x000063b2      eb23           jmp 0x63d7
0x000063b4      0f1f4000       nop dword [rax]
0x000063b8      85ff           test edi, edi
0x000063ba      400f95c7       setne dil
0x000063be      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x000063c2      83c301         add ebx, 1
0x000063c5      4d39d0         cmp r8, r10
0x000063c8      0f870f030000   ja 0x66dd                               ; ../coreutils-8.31/lib/human.c:26
0x000063ce      83fb08         cmp ebx, 8
0x000063d1      0f84a1050000   je 0x6978
0x000063d7      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x000063da      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x000063dc      89fe           mov esi, edi
0x000063de      49f7f0         div r8
0x000063e1      d1fe           sar esi, 1
0x000063e3      4989c2         mov r10, rax
0x000063e6      8d0492         lea eax, [rdx + rdx*4]
0x000063e9      31d2           xor edx, edx
0x000063eb      418d0441       lea eax, [r9 + rax*2]
0x000063ef      41f7f3         div r11d
0x000063f2      8d1456         lea edx, [rsi + rdx*2]
0x000063f5      4189c1         mov r9d, eax
0x000063f8      4c89d6         mov rsi, r10
0x000063fb      01d7           add edi, edx
0x000063fd      4139d3         cmp r11d, edx
0x00006400      77b6           ja 0x63b8
0x00006402      4139fb         cmp r11d, edi
0x00006405      400f92c7       setb dil
0x00006409      400fb6ff       movzx edi, dil
0x0000640d      83c702         add edi, 2
0x00006410      ebb0           jmp 0x63c2
0x00006412      660f1f440000   nop word [rax + rax]
0x00006418      4183ff01       cmp r15d, 1
0x0000641c      740e           je 0x642c
0x0000641e      db2dcc7d0000   fld xword [0x0000e1f0]
0x00006424      dfe9           fucomip st(1)
0x00006426      0f8784020000   ja 0x66b0
0x0000642c      4883ec10       sub rsp, 0x10
0x00006430      488d0d547d00.  lea rcx, str..0Lf                       ; 0xe18b ; "%.0Lf"
0x00006437      be01000000     mov esi, 1
0x0000643c      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x00006441      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006448      31c0           xor eax, eax
0x0000644a      db3c24         fstp xword [rsp]
0x0000644d      31ed           xor ebp, ebp
0x0000644f      4889df         mov rdi, rbx
0x00006452      e839baffff     call sym.imp.__sprintf_chk
0x00006457      4889df         mov rdi, rbx
0x0000645a      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000645f      e81cb7ffff     call sym.imp.strlen
0x00006464      5e             pop rsi
0x00006465      5f             pop rdi
0x00006466      4989c6         mov r14, rax
0x00006469      eb15           jmp 0x6480
0x0000646b      0f1f440000     nop dword [rax + rax]
0x00006470      ddd8           fstp st(0)
0x00006472      eb0c           jmp 0x6480
0x00006474      0f1f4000       nop dword [rax]
0x00006478      ddd8           fstp st(0)
0x0000647a      660f1f440000   nop word [rax + rax]
0x00006480      4c8b7c2408     mov r15, qword [rsp + 8]
0x00006485      488b3424       mov rsi, qword [rsp]
0x00006489      4c89f2         mov rdx, r14
0x0000648c      4d29f7         sub r15, r14
0x0000648f      4929ee         sub r14, rbp
0x00006492      4c89ff         mov rdi, r15
0x00006495      e8e6b8ffff     call sym.imp.memmove
0x0000649a      4d89f0         mov r8, r14
0x0000649d      4d01f8         add r8, r15
0x000064a0      41f6c404       test r12b, 4
0x000064a4      0f85de000000   jne 0x6588
0x000064aa      41f6c480       test r12b, 0x80
0x000064ae      7477           je 0x6527
0x000064b0      83fbff         cmp ebx, 0xffffffff
0x000064b3      0f8417030000   je 0x67d0
0x000064b9      4489e0         mov eax, r12d
0x000064bc      2500010000     and eax, 0x100
0x000064c1      89c1           mov ecx, eax
0x000064c3      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x000064c5      7460           je 0x6527
0x000064c7      4183e440       and r12d, 0x40                          ; segment.PHDR
0x000064cb      0f8597010000   jne 0x6668
0x000064d1      85db           test ebx, ebx
0x000064d3      0f842d060000   je 0x6b06
0x000064d9      83fb01         cmp ebx, 1
0x000064dc      750e           jne 0x64ec                              ; ../coreutils-8.31/lib/human.c:-122
0x000064de      448b4c2430     mov r9d, dword [rsp + 0x30]
0x000064e3      4585c9         test r9d, r9d
0x000064e6      0f8444040000   je 0x6930
0x000064ec      488d0de57c00.  lea rcx, obj.power_letter               ; 0xe1d8
0x000064f3      4863db         movsxd rbx, ebx
0x000064f6      488b7c2408     mov rdi, qword [rsp + 8]
0x000064fb      85c0           test eax, eax
0x000064fd      0fb60c19       movzx ecx, byte [rcx + rbx]
0x00006501      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x00006505      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x00006507      0f8437040000   je 0x6944
0x0000650d      448b442430     mov r8d, dword [rsp + 0x30]
0x00006512      4585c0         test r8d, r8d
0x00006515      0f85b5010000   jne 0x66d0
0x0000651b      488d4201       lea rax, [rdx + 1]
0x0000651f      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x00006522      4889442408     mov qword [rsp + 8], rax
0x00006527      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x0000652c      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00006534      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000653d      c60000         mov byte [rax], 0
0x00006540      4c89f8         mov rax, r15
0x00006543      0f8592050000   jne 0x6adb
0x00006549      4881c4980000.  add rsp, 0x98
0x00006550      5b             pop rbx
0x00006551      5d             pop rbp
0x00006552      415c           pop r12
0x00006554      415d           pop r13
0x00006556      415e           pop r14
0x00006558      415f           pop r15
0x0000655a      c3             ret
0x0000655b      0f1f440000     nop dword [rax + rax]
0x00006560      4889de         mov rsi, rbx
0x00006563      31d2           xor edx, edx
0x00006565      480faff0       imul rsi, rax
0x00006569      4889f0         mov rax, rsi
0x0000656c      48f7f7         div rdi
0x0000656f      4839d8         cmp rax, rbx
0x00006572      0f858dfcffff   jne 0x6205
0x00006578      31ff           xor edi, edi
0x0000657a      4531c9         xor r9d, r9d
0x0000657d      e907feffff     jmp 0x6389
0x00006582      660f1f440000   nop word [rax + rax]
0x00006588      4d89c6         mov r14, r8
0x0000658b      4c89ef         mov rdi, r13
0x0000658e      4c89442448     mov qword [rsp + 0x48], r8
0x00006593      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x00006596      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x0000659d      e8deb5ffff     call sym.imp.strlen
0x000065a2      488d7c2450     lea rdi, [rsp + 0x50]
0x000065a7      b929000000     mov ecx, 0x29                           ; ')'
0x000065ac      4c89f2         mov rdx, r14
0x000065af      4c89fe         mov rsi, r15
0x000065b2      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x000065b7      48897c2418     mov qword [rsp + 0x18], rdi
0x000065bc      e8ffb6ffff     call sym.imp.__memcpy_chk
0x000065c1      4489e1         mov ecx, r12d
0x000065c4      895c2420       mov dword [rsp + 0x20], ebx
0x000065c8      4d89f4         mov r12, r14
0x000065cb      4c89eb         mov rbx, r13
0x000065ce      4c8b442448     mov r8, qword [rsp + 0x48]
0x000065d3      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000065d8      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x000065dd      4189ce         mov r14d, ecx
0x000065e0      eb40           jmp 0x6622
0x000065e2      660f1f440000   nop word [rax + rax]
0x000065e8      488b442418     mov rax, qword [rsp + 0x18]
0x000065ed      4929ec         sub r12, rbp
0x000065f0      4929e8         sub r8, rbp
0x000065f3      4c89c7         mov rdi, r8
0x000065f6      4889ea         mov rdx, rbp
0x000065f9      4a8d3420       lea rsi, [rax + r12]
0x000065fd      e8deb6ffff     call sym.imp.memcpy
0x00006602      4d85e4         test r12, r12
0x00006605      4989c0         mov r8, rax
0x00006608      0f840a050000   je 0x6b18
0x0000660e      4d29e8         sub r8, r13
0x00006611      4c89ea         mov rdx, r13
0x00006614      4889de         mov rsi, rbx
0x00006617      4c89c7         mov rdi, r8
0x0000661a      e8c1b6ffff     call sym.imp.memcpy
0x0000661f      4989c0         mov r8, rax
0x00006622      410fb607       movzx eax, byte [r15]
0x00006626      84c0           test al, al
0x00006628      740d           je 0x6637
0x0000662a      3c7f           cmp al, 0x7f
0x0000662c      0fb6e8         movzx ebp, al
0x0000662f      490f43ec       cmovae rbp, r12
0x00006633      4983c701       add r15, 1
0x00006637      4c39e5         cmp rbp, r12
0x0000663a      76ac           jbe 0x65e8
0x0000663c      4489f0         mov eax, r14d
0x0000663f      4d89c7         mov r15, r8
0x00006642      4d89e6         mov r14, r12
0x00006645      488b742418     mov rsi, qword [rsp + 0x18]
0x0000664a      4d29f7         sub r15, r14
0x0000664d      4c89f2         mov rdx, r14
0x00006650      4c89ff         mov rdi, r15
0x00006653      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x00006657      4189c4         mov r12d, eax
0x0000665a      e881b6ffff     call sym.imp.memcpy
0x0000665f      e946feffff     jmp 0x64aa
0x00006664      0f1f4000       nop dword [rax]
0x00006668      488b0c24       mov rcx, qword [rsp]
0x0000666c      488db9880200.  lea rdi, [rcx + 0x288]
0x00006673      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x0000667a      48897c2408     mov qword [rsp + 8], rdi
0x0000667f      e94dfeffff     jmp 0x64d1
0x00006684      0f1f4000       nop dword [rax]
0x00006688      4883ec10       sub rsp, 0x10
0x0000668c      4489ff         mov edi, r15d
0x0000668f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x00006691      db3c24         fstp xword [rsp]
0x00006694      db7c2430       fstp xword [rsp + 0x30]
0x00006698      e8b3f9ffff     call sym.adjust_value.part.0
0x0000669d      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x0000669e      5a             pop rdx
0x0000669f      db6c2420       fld xword [rsp + 0x20]
0x000066a3      e911fcffff     jmp 0x62b9
0x000066a8      0f1f84000000.  nop dword [rax + rax]
0x000066b0      4883ec10       sub rsp, 0x10
0x000066b4      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x000066b7      db3c24         fstp xword [rsp]
0x000066ba      e891f9ffff     call sym.adjust_value.part.0
0x000066bf      4158           pop r8
0x000066c1      4159           pop r9
0x000066c3      e964fdffff     jmp 0x642c
0x000066c8      0f1f84000000.  nop dword [rax + rax]
0x000066d0      488d5702       lea rdx, [rdi + 2]
0x000066d4      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x000066d8      e93efeffff     jmp 0x651b
0x000066dd      4983fa09       cmp r10, 9
0x000066e1      0f8791020000   ja 0x6978
0x000066e7      4183ff01       cmp r15d, 1
0x000066eb      0f84b1020000   je 0x69a2
0x000066f1      4585ff         test r15d, r15d
0x000066f4      0f94c2         sete dl
0x000066f7      85ff           test edi, edi
0x000066f9      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x000066fd      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x00006700      84d2           test dl, dl
0x00006702      0f8481020000   je 0x6989
0x00006708      448d4801       lea r9d, [rax + 1]
0x0000670c      4183f90a       cmp r9d, 0xa
0x00006710      0f84fb020000   je 0x6a11
0x00006716      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x0000671a      488b0424       mov rax, qword [rsp]
0x0000671e      4c8d80860200.  lea r8, [rax + 0x286]
0x00006725      448888860200.  mov byte [rax + 0x286], r9b
0x0000672c      89e8           mov eax, ebp
0x0000672e      4929e8         sub r8, rbp
0x00006731      83fd08         cmp ebp, 8
0x00006734      0f8387020000   jae 0x69c1
0x0000673a      40f6c504       test bpl, 4
0x0000673e      0f8582030000   jne 0x6ac6                              ; ../coreutils-8.31/lib/human.c:-674
0x00006744      85c0           test eax, eax
0x00006746      740f           je 0x6757
0x00006748      410fb616       movzx edx, byte [r14]
0x0000674c      a802           test al, 2
0x0000674e      418810         mov byte [r8], dl
0x00006751      0f8589030000   jne 0x6ae0
0x00006757      31ff           xor edi, edi
0x00006759      4531c9         xor r9d, r9d
0x0000675c      0f1f4000       nop dword [rax]
0x00006760      4183ff01       cmp r15d, 1
0x00006764      0f8476010000   je 0x68e0
0x0000676a      4585ff         test r15d, r15d
0x0000676d      7521           jne 0x6790
0x0000676f      4401cf         add edi, r9d
0x00006772      85ff           test edi, edi
0x00006774      7e1a           jle 0x6790
0x00006776      4883c601       add rsi, 1
0x0000677a      85c9           test ecx, ecx
0x0000677c      7412           je 0x6790
0x0000677e      8b442434       mov eax, dword [rsp + 0x34]
0x00006782      4839f0         cmp rax, rsi
0x00006785      0f84c5010000   je 0x6950
0x0000678b      0f1f440000     nop dword [rax + rax]
0x00006790      4d89c7         mov r15, r8
0x00006793      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x0000679d      0f1f00         nop dword [rax]
0x000067a0      4889f0         mov rax, rsi
0x000067a3      4983ef01       sub r15, 1
0x000067a7      48f7e1         mul rcx
0x000067aa      48c1ea03       shr rdx, 3
0x000067ae      488d0492       lea rax, [rdx + rdx*4]
0x000067b2      4801c0         add rax, rax
0x000067b5      4829c6         sub rsi, rax
0x000067b8      83c630         add esi, 0x30
0x000067bb      4885d2         test rdx, rdx
0x000067be      418837         mov byte [r15], sil
0x000067c1      4889d6         mov rsi, rdx
0x000067c4      75da           jne 0x67a0
0x000067c6      e9d5fcffff     jmp 0x64a0
0x000067cb      0f1f440000     nop dword [rax + rax]
0x000067d0      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000067d5      4883f901       cmp rcx, 1
0x000067d9      0f86a3010000   jbe 0x6982
0x000067df      8b542434       mov edx, dword [rsp + 0x34]
0x000067e3      bb01000000     mov ebx, 1
0x000067e8      b801000000     mov eax, 1
0x000067ed      480fafc2       imul rax, rdx
0x000067f1      4839c1         cmp rcx, rax
0x000067f4      0f86bffcffff   jbe 0x64b9
0x000067fa      83c301         add ebx, 1
0x000067fd      83fb08         cmp ebx, 8
0x00006800      75eb           jne 0x67ed
0x00006802      e9b2fcffff     jmp 0x64b9
0x00006807      660f1f840000.  nop word [rax + rax]
0x00006810      4883ec10       sub rsp, 0x10
0x00006814      488d0d767900.  lea rcx, str..1Lf                       ; 0xe191 ; "%.1Lf"
0x0000681b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006822      d9c0           fld st(0)
0x00006824      db3c24         fstp xword [rsp]
0x00006827      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000682c      be01000000     mov esi, 1
0x00006831      31c0           xor eax, eax
0x00006833      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x00006836      db7c2430       fstp xword [rsp + 0x30]
0x0000683a      e851b6ffff     call sym.imp.__sprintf_chk
0x0000683f      4c89f7         mov rdi, r14
0x00006842      e839b3ffff     call sym.imp.strlen
0x00006847      4989c6         mov r14, rax
0x0000684a      58             pop rax
0x0000684b      5a             pop rdx
0x0000684c      4c3b742418     cmp r14, qword [rsp + 0x18]
0x00006851      db6c2420       fld xword [rsp + 0x20]
0x00006855      0f86a7faffff   jbe 0x6302
0x0000685b      d9058b790000   fld dword [0x0000e1ec]
0x00006861      dcc9           fmul st(1), st(0)
0x00006863      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x00006865      4883ec10       sub rsp, 0x10
0x00006869      488d0d1b7900.  lea rcx, str..0Lf                       ; 0xe18b ; "%.0Lf"
0x00006870      4c8b742410     mov r14, qword [rsp + 0x10]
0x00006875      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000687c      be01000000     mov esi, 1
0x00006881      31c0           xor eax, eax
0x00006883      31ed           xor ebp, ebp
0x00006885      4c89f7         mov rdi, r14
0x00006888      db3c24         fstp xword [rsp]
0x0000688b      e800b6ffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x00006890      4c89f7         mov rdi, r14
0x00006893      e8e8b2ffff     call sym.imp.strlen
0x00006898      415a           pop r10
0x0000689a      4989c6         mov r14, rax
0x0000689d      415b           pop r11
0x0000689f      e9dcfbffff     jmp 0x6480
0x000068a4      0f1f4000       nop dword [rax]
0x000068a8      d9053e790000   fld dword [0x0000e1ec]
0x000068ae      dcc9           fmul st(1), st(0)
0x000068b0      db2d3a790000   fld xword [0x0000e1f0]
0x000068b6      dfea           fucomip st(2)
0x000068b8      76a9           jbe 0x6863
0x000068ba      d95c2418       fstp dword [rsp + 0x18]
0x000068be      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x000068c2      4489ff         mov edi, r15d
0x000068c5      db3c24         fstp xword [rsp]
0x000068c8      e883f7ffff     call sym.adjust_value.part.0
0x000068cd      5d             pop rbp
0x000068ce      415e           pop r14
0x000068d0      d9442418       fld dword [rsp + 0x18]
0x000068d4      eb8d           jmp 0x6863                              ; ../coreutils-8.31/lib/human.c:-902
0x000068d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000068e0      4889f0         mov rax, rsi
0x000068e3      4863ff         movsxd rdi, edi
0x000068e6      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x000068e9      4801f8         add rax, rdi
0x000068ec      0f95c0         setne al
0x000068ef      0fb6c0         movzx eax, al
0x000068f2      4101c1         add r9d, eax
0x000068f5      4183f905       cmp r9d, 5
0x000068f9      0f8f77feffff   jg 0x6776
0x000068ff      e98cfeffff     jmp 0x6790                              ; ../coreutils-8.31/lib/human.c:-938
0x00006904      0f1f4000       nop dword [rax]
0x00006908      400f92c7       setb dil
0x0000690c      400fb6ff       movzx edi, dil
0x00006910      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x00006913      e971faffff     jmp 0x6389
0x00006918      0f1f84000000.  nop dword [rax + rax]
0x00006920      4c8b442408     mov r8, qword [rsp + 8]
0x00006925      31db           xor ebx, ebx
0x00006927      e934feffff     jmp 0x6760
0x0000692c      0f1f4000       nop dword [rax]
0x00006930      488b5c2408     mov rbx, qword [rsp + 8]
0x00006935      85c0           test eax, eax
0x00006937      488d5301       lea rdx, [rbx + 1]
0x0000693b      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x0000693e      0f85d7fbffff   jne 0x651b
0x00006944      4889542408     mov qword [rsp + 8], rdx
0x00006949      e9d9fbffff     jmp 0x6527
0x0000694e      6690           nop
0x00006950      83fb08         cmp ebx, 8
0x00006953      0f8437feffff   je 0x6790
0x00006959      83c301         add ebx, 1
0x0000695c      41f6c408       test r12b, 8
0x00006960      0f84bc000000   je 0x6a22
0x00006966      4d8d78ff       lea r15, [r8 - 1]
0x0000696a      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x0000696f      e92cfbffff     jmp 0x64a0
0x00006974      0f1f4000       nop dword [rax]
0x00006978      4c8b442408     mov r8, qword [rsp + 8]
0x0000697d      e9defdffff     jmp 0x6760
0x00006982      31db           xor ebx, ebx
0x00006984      e930fbffff     jmp 0x64b9
0x00006989      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x0000698b      0f8585fdffff   jne 0x6716
0x00006991      41f6c408       test r12b, 8
0x00006995      751d           jne 0x69b4
0x00006997      41b930000000   mov r9d, 0x30                           ; '0'
0x0000699d      e978fdffff     jmp 0x671a
0x000069a2      89c2           mov edx, eax
0x000069a4      83e201         and edx, 1
0x000069a7      01fa           add edx, edi
0x000069a9      83fa02         cmp edx, 2
0x000069ac      0f9fc2         setg dl
0x000069af      e94cfdffff     jmp 0x6700
0x000069b4      4c8b442408     mov r8, qword [rsp + 8]
0x000069b9      4531c9         xor r9d, r9d
0x000069bc      e99ffdffff     jmp 0x6760
0x000069c1      498b06         mov rax, qword [r14]
0x000069c4      4d89f1         mov r9, r14
0x000069c7      498900         mov qword [r8], rax
0x000069ca      89e8           mov eax, ebp
0x000069cc      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x000069d1      49895400f8     mov qword [r8 + rax - 8], rdx
0x000069d6      498d5008       lea rdx, [r8 + 8]
0x000069da      4c89c0         mov rax, r8
0x000069dd      4883e2f8       and rdx, 0xfffffffffffffff8
0x000069e1      4829d0         sub rax, rdx
0x000069e4      4929c1         sub r9, rax
0x000069e7      01e8           add eax, ebp
0x000069e9      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x000069ec      83f808         cmp eax, 8
0x000069ef      0f8262fdffff   jb 0x6757
0x000069f5      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x000069f8      31ff           xor edi, edi
0x000069fa      4189fa         mov r10d, edi
0x000069fd      83c708         add edi, 8
0x00006a00      4f8b1c11       mov r11, qword [r9 + r10]
0x00006a04      39c7           cmp edi, eax
0x00006a06      4e891c12       mov qword [rdx + r10], r11
0x00006a0a      72ee           jb 0x69fa
0x00006a0c      e946fdffff     jmp 0x6757
0x00006a11      498d7201       lea rsi, [r10 + 1]
0x00006a15      4883fe0a       cmp rsi, 0xa
0x00006a19      7455           je 0x6a70
0x00006a1b      31ff           xor edi, edi
0x00006a1d      e96fffffff     jmp 0x6991
0x00006a22      4889e8         mov rax, rbp
0x00006a25      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x00006a2a      48f7d0         not rax
0x00006a2d      4901c0         add r8, rax
0x00006a30      83fd08         cmp ebp, 8
0x00006a33      89e8           mov eax, ebp
0x00006a35      7343           jae 0x6a7a
0x00006a37      83e504         and ebp, 4
0x00006a3a      0f85b1000000   jne 0x6af1
0x00006a40      85c0           test eax, eax
0x00006a42      0f841effffff   je 0x6966
0x00006a48      410fb616       movzx edx, byte [r14]
0x00006a4c      a802           test al, 2
0x00006a4e      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x00006a51      0f840fffffff   je 0x6966
0x00006a57      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x00006a5d      6641895400fe   mov word [r8 + rax - 2], dx
0x00006a63      e9fefeffff     jmp 0x6966
0x00006a68      0f1f84000000.  nop dword [rax + rax]
0x00006a70      4c8b442408     mov r8, qword [rsp + 8]
0x00006a75      e9ddfcffff     jmp 0x6757
0x00006a7a      498b06         mov rax, qword [r14]
0x00006a7d      498d4808       lea rcx, [r8 + 8]
0x00006a81      4883e1f8       and rcx, 0xfffffffffffffff8
0x00006a85      498900         mov qword [r8], rax
0x00006a88      89e8           mov eax, ebp
0x00006a8a      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00006a8f      49895400f8     mov qword [r8 + rax - 8], rdx
0x00006a94      4c89c0         mov rax, r8
0x00006a97      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x00006a9a      4929c6         sub r14, rax
0x00006a9d      01e8           add eax, ebp
0x00006a9f      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00006aa2      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x00006aa5      0f82bbfeffff   jb 0x6966
0x00006aab      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x00006aae      31d2           xor edx, edx
0x00006ab0      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x00006ab2      83c208         add edx, 8
0x00006ab5      498b3c36       mov rdi, qword [r14 + rsi]
0x00006ab9      39c2           cmp edx, eax
0x00006abb      48893c31       mov qword [rcx + rsi], rdi
0x00006abf      72ef           jb 0x6ab0
0x00006ac1      e9a0feffff     jmp 0x6966
0x00006ac6      418b16         mov edx, dword [r14]
0x00006ac9      418910         mov dword [r8], edx
0x00006acc      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00006ad1      41895400fc     mov dword [r8 + rax - 4], edx
0x00006ad6      e97cfcffff     jmp 0x6757
0x00006adb      e8b0b0ffff     call sym.imp.__stack_chk_fail
0x00006ae0      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x00006ae6      6641895400fe   mov word [r8 + rax - 2], dx
0x00006aec      e966fcffff     jmp 0x6757
0x00006af1      418b16         mov edx, dword [r14]
0x00006af4      418910         mov dword [r8], edx
0x00006af7      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00006afc      41895400fc     mov dword [r8 + rax - 4], edx
0x00006b01      e960feffff     jmp 0x6966
0x00006b06      85c0           test eax, eax
0x00006b08      488b542408     mov rdx, qword [rsp + 8]
0x00006b0d      0f8508faffff   jne 0x651b
0x00006b13      e90ffaffff     jmp 0x6527
0x00006b18      8b5c2420       mov ebx, dword [rsp + 0x20]
0x00006b1c      4989c7         mov r15, rax
0x00006b1f      4589f4         mov r12d, r14d
0x00006b22      e983f9ffff     jmp 0x64aa
0x00006b27      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x00006b30      4155           push r13
0x00006b32      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x00006b34      4989f5         mov r13, rsi
0x00006b37      55             push rbp
0x00006b38      53             push rbx
0x00006b39      4989d4         mov r12, rdx
0x00006b3c      4889fb         mov rbx, rdi
0x00006b3f      4883ec18       sub rsp, 0x18
0x00006b43      64488b042528.  mov rax, qword fs:[0x28]
0x00006b4c      4889442408     mov qword [rsp + 8], rax
0x00006b51      31c0           xor eax, eax
0x00006b53      4885ff         test rdi, rdi
0x00006b56      0f8414010000   je 0x6c70
0x00006b5c      31ed           xor ebp, ebp
0x00006b5e      803b27         cmp byte [rbx], 0x27
0x00006b61      7509           jne 0x6b6c
0x00006b63      4883c301       add rbx, 1
0x00006b67      bd04000000     mov ebp, 4
0x00006b6c      488d155d7600.  lea rdx, obj.block_size_opts            ; 0xe1d0
0x00006b73      488d35269f20.  lea rsi, obj.block_size_args            ; 0x210aa0
0x00006b7a      b904000000     mov ecx, 4
0x00006b7f      4889df         mov rdi, rbx
0x00006b82      e8a9350000     call sym.argmatch
0x00006b87      85c0           test eax, eax
0x00006b89      783d           js 0x6bc8
0x00006b8b      488d153e7600.  lea rdx, obj.block_size_opts            ; 0xe1d0
0x00006b92      4898           cdqe
0x00006b94      49c704240100.  mov qword [r12], 1
0x00006b9c      0b2c82         or ebp, dword [rdx + rax*4]
0x00006b9f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x00006ba1      41896d00       mov dword [r13], ebp
0x00006ba5      488b4c2408     mov rcx, qword [rsp + 8]
0x00006baa      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006bb3      0f8558010000   jne 0x6d11
0x00006bb9      4883c418       add rsp, 0x18
0x00006bbd      5b             pop rbx
0x00006bbe      5d             pop rbp
0x00006bbf      415c           pop r12
0x00006bc1      415d           pop r13
0x00006bc3      c3             ret
0x00006bc4      0f1f4000       nop dword [rax]
0x00006bc8      4c8d05dd7500.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0xe1ac ; "eEgGkKmMpPtTyYzZ0"
0x00006bcf      31d2           xor edx, edx
0x00006bd1      4889e6         mov rsi, rsp
0x00006bd4      4c89e1         mov rcx, r12
0x00006bd7      4889df         mov rdi, rbx
0x00006bda      e8712a0000     call sym.xstrtoumax
0x00006bdf      85c0           test eax, eax
0x00006be1      7545           jne 0x6c28
0x00006be3      0fb633         movzx esi, byte [rbx]
0x00006be6      8d56d0         lea edx, [rsi - 0x30]
0x00006be9      80fa09         cmp dl, 9
0x00006bec      762a           jbe 0x6c18
0x00006bee      488b0c24       mov rcx, qword [rsp]
0x00006bf2      4839cb         cmp rbx, rcx
0x00006bf5      7512           jne 0x6c09                              ; ../coreutils-8.31/lib/human.c:-960
0x00006bf7      e9d4000000     jmp 0x6cd0
0x00006bfc      0f1f4000       nop dword [rax]
0x00006c00      4839cb         cmp rbx, rcx
0x00006c03      0f84c7000000   je 0x6cd0
0x00006c09      4883c301       add rbx, 1
0x00006c0d      0fb63b         movzx edi, byte [rbx]
0x00006c10      8d57d0         lea edx, [rdi - 0x30]
0x00006c13      80fa09         cmp dl, 9
0x00006c16      77e8           ja 0x6c00
0x00006c18      498b1424       mov rdx, qword [r12]
0x00006c1c      41896d00       mov dword [r13], ebp
0x00006c20      eb12           jmp 0x6c34
0x00006c22      660f1f440000   nop word [rax + rax]
0x00006c28      498b1424       mov rdx, qword [r12]
0x00006c2c      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x00006c34      4885d2         test rdx, rdx
0x00006c37      0f8568ffffff   jne 0x6ba5
0x00006c3d      488d3df85b00.  lea rdi, str.POSIXLY_CORRECT            ; 0xc83c ; "POSIXLY_CORRECT"
0x00006c44      e8d7adffff     call sym.imp.getenv
0x00006c49      4883f801       cmp rax, 1
0x00006c4d      4819c0         sbb rax, rax
0x00006c50      2500020000     and eax, 0x200
0x00006c55      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x00006c5b      49890424       mov qword [r12], rax
0x00006c5f      b804000000     mov eax, 4
0x00006c64      e93cffffff     jmp 0x6ba5
0x00006c69      0f1f80000000.  nop dword [rax]
0x00006c70      488d3d207500.  lea rdi, str.BLOCK_SIZE                 ; 0xe197 ; "BLOCK_SIZE"
0x00006c77      e8a4adffff     call sym.imp.getenv
0x00006c7c      4885c0         test rax, rax
0x00006c7f      4889c3         mov rbx, rax
0x00006c82      0f85d4feffff   jne 0x6b5c
0x00006c88      488d3d137500.  lea rdi, str.BLOCKSIZE                  ; 0xe1a2 ; "BLOCKSIZE"
0x00006c8f      e88cadffff     call sym.imp.getenv
0x00006c94      4885c0         test rax, rax
0x00006c97      4889c3         mov rbx, rax
0x00006c9a      0f85bcfeffff   jne 0x6b5c
0x00006ca0      488d3d955b00.  lea rdi, str.POSIXLY_CORRECT            ; 0xc83c ; "POSIXLY_CORRECT"
0x00006ca7      e874adffff     call sym.imp.getenv
0x00006cac      4885c0         test rax, rax
0x00006caf      7449           je 0x6cfa
0x00006cb1      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x00006cb9      31c0           xor eax, eax
0x00006cbb      41c745000000.  mov dword [r13], 0
0x00006cc3      e9ddfeffff     jmp 0x6ba5
0x00006cc8      0f1f84000000.  nop dword [rax + rax]
0x00006cd0      8079ff42       cmp byte [rcx - 1], 0x42
0x00006cd4      7412           je 0x6ce8
0x00006cd6      4080cd80       or bpl, 0x80
0x00006cda      83cd20         or ebp, 0x20                            ; "@"
0x00006cdd      e936ffffff     jmp 0x6c18
0x00006ce2      660f1f440000   nop word [rax + rax]
0x00006ce8      81cd80010000   or ebp, 0x180
0x00006cee      8079fe69       cmp byte [rcx - 2], 0x69
0x00006cf2      0f8520ffffff   jne 0x6c18
0x00006cf8      ebe0           jmp 0x6cda
0x00006cfa      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0x20000003a1
0x00006d02      31c0           xor eax, eax
0x00006d04      41c745000000.  mov dword [r13], 0
0x00006d0c      e994feffff     jmp 0x6ba5
0x00006d11      e87aaeffff     call sym.imp.__stack_chk_fail
0x00006d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_long_options:
0x00006d20      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00006d22      4154           push r12
0x00006d24      4d89c5         mov r13, r8
0x00006d27      55             push rbp
0x00006d28      53             push rbx
0x00006d29      4889d5         mov rbp, rdx
0x00006d2c      4989cc         mov r12, rcx
0x00006d2f      4881ece80000.  sub rsp, 0xe8
0x00006d36      84c0           test al, al
0x00006d38      743a           je 0x6d74
0x00006d3a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00006d3f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00006d44      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00006d4c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00006d54      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00006d5c      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00006d64      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00006d6c      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00006d74      64488b042528.  mov rax, qword fs:[0x28]
0x00006d7d      4889442428     mov qword [rsp + 0x28], rax
0x00006d82      31c0           xor eax, eax
0x00006d84      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x00006d87      8b1d53a32000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006d8d      c70549a32000.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006d97      7437           je 0x6dd0                               ; ../coreutils-8.31/lib/long-options.c:61
0x00006d99      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x00006d9e      644833042528.  xor rax, qword fs:[0x28]
0x00006da7      891d33a32000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006dad      c70519a32000.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2110d0:4]=0
0x00006db7      0f859d000000   jne 0x6e5a                              ; ../coreutils-8.31/lib/long-options.c:90
0x00006dbd      4881c4e80000.  add rsp, 0xe8
0x00006dc4      5b             pop rbx
0x00006dc5      5d             pop rbp
0x00006dc6      415c           pop r12
0x00006dc8      415d           pop r13
0x00006dca      c3             ret
0x00006dcb      0f1f440000     nop dword [rax + rax]
0x00006dd0      488d0de99c20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x210ac0
0x00006dd7      488d15227400.  lea rdx, [0x0000e200]                   ; "+"
0x00006dde      4531c0         xor r8d, r8d
0x00006de1      4c894c2408     mov qword [rsp + 8], r9
0x00006de6      e8b5adffff     call sym.imp.getopt_long
0x00006deb      83f8ff         cmp eax, 0xffffffff
0x00006dee      74a9           je 0x6d99
0x00006df0      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00006df3      4c8b4c2408     mov r9, qword [rsp + 8]
0x00006df8      7456           je 0x6e50
0x00006dfa      83f876         cmp eax, 0x76
0x00006dfd      759a           jne 0x6d99
0x00006dff      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00006e07      488b3dbaa220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00006e0e      4c8d442410     lea r8, [rsp + 0x10]
0x00006e13      4c89e9         mov rcx, r13
0x00006e16      4c89e2         mov rdx, r12
0x00006e19      4889ee         mov rsi, rbp
0x00006e1c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00006e21      488d442430     lea rax, [rsp + 0x30]
0x00006e26      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00006e2e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00006e36      4889442420     mov qword [rsp + 0x20], rax
0x00006e3b      e8a0230000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00006e40      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00006e42      e8c9afffff     call sym.imp.exit
0x00006e47      660f1f840000.  nop word [rax + rax]
0x00006e50      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x00006e52      41ffd1         call r9
0x00006e55      e93fffffff     jmp 0x6d99                              ; ../coreutils-8.31/lib/long-options.c:68
0x00006e5a      e831adffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x00006e5f      90             nop
;-- parse_gnu_standard_options_only:
0x00006e60      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x00006e62      4155           push r13
0x00006e64      4d89c6         mov r14, r8
0x00006e67      4154           push r12
0x00006e69      55             push rbp
0x00006e6a      4989d4         mov r12, rdx
0x00006e6d      53             push rbx
0x00006e6e      4989cd         mov r13, rcx
0x00006e71      4881ecd00000.  sub rsp, 0xd0
0x00006e78      84c0           test al, al
0x00006e7a      488bac240001.  mov rbp, qword [rsp + 0x100]
0x00006e82      7437           je 0x6ebb
0x00006e84      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00006e89      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00006e8e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00006e93      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00006e9b      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00006ea3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00006eab      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00006eb3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00006ebb      64488b042528.  mov rax, qword fs:[0x28]
0x00006ec4      4889442418     mov qword [rsp + 0x18], rax
0x00006ec9      31c0           xor eax, eax
0x00006ecb      488d15cf7800.  lea rdx, [0x0000e7a1]                   ; ../coreutils-8.31/lib/long-options.c:113
0x00006ed2      488d05277300.  lea rax, [0x0000e200]                   ; "+"
0x00006ed9      4584c9         test r9b, r9b
0x00006edc      488d0ddd9b20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x210ac0
0x00006ee3      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x00006ee7      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x00006eea      8b1df0a12000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006ef0      c705e6a12000.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006efa      e8a1acffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x00006eff      83f8ff         cmp eax, 0xffffffff
0x00006f02      7464           je 0x6f68
0x00006f04      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x00006f07      0f8483000000   je 0x6f90
0x00006f0d      83f876         cmp eax, 0x76
0x00006f10      754e           jne 0x6f60
0x00006f12      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x00006f1a      488b3da7a120.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x00006f21      4989e0         mov r8, rsp
0x00006f24      4c89f1         mov rcx, r14
0x00006f27      4c89ea         mov rdx, r13
0x00006f2a      4c89e6         mov rsi, r12
0x00006f2d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00006f32      488d442420     lea rax, [rsp + 0x20]
0x00006f37      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x00006f3e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00006f46      4889442410     mov qword [rsp + 0x10], rax
0x00006f4b      e890220000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x00006f50      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x00006f52      e8b9aeffff     call sym.imp.exit
0x00006f57      660f1f840000.  nop word [rax + rax]
0x00006f60      8b3dcaa02000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x211030:4]=1
0x00006f66      ffd5           call rbp
0x00006f68      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x00006f6d      644833042528.  xor rax, qword fs:[0x28]
0x00006f76      891d64a12000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2110e0:4]=0
0x00006f7c      7518           jne 0x6f96                              ; ../coreutils-8.31/lib/long-options.c:139
0x00006f7e      4881c4d00000.  add rsp, 0xd0
0x00006f85      5b             pop rbx
0x00006f86      5d             pop rbp
0x00006f87      415c           pop r12
0x00006f89      415d           pop r13
0x00006f8b      415e           pop r14
0x00006f8d      c3             ret
0x00006f8e      6690           nop
0x00006f90      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x00006f92      ffd5           call rbp
0x00006f94      ebd2           jmp 0x6f68                              ; ../coreutils-8.31/lib/long-options.c:121
0x00006f96      e8f5abffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x00006f9b      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00006fa0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00006fa3      53             push rbx
0x00006fa4      7477           je 0x701d                               ; ../coreutils-8.31/lib/progname.c:51
0x00006fa6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00006fab      4889fb         mov rbx, rdi
0x00006fae      e83dacffff     call sym.imp.strrchr
0x00006fb3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00006fb6      7455           je 0x700d
0x00006fb8      4c8d4001       lea r8, [rax + 1]
0x00006fbc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00006fbf      4829da         sub rdx, rbx
0x00006fc2      4883fa06       cmp rdx, 6
0x00006fc6      7e45           jle 0x700d
0x00006fc8      488d70fa       lea rsi, [rax - 6]
0x00006fcc      488d3d6d7200.  lea rdi, str..libs                      ; 0xe240 ; "/.libs/"
0x00006fd3      b907000000     mov ecx, 7
0x00006fd8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006fda      0f97c2         seta dl
0x00006fdd      80da00         sbb dl, 0
0x00006fe0      84d2           test dl, dl
0x00006fe2      7529           jne 0x700d
0x00006fe4      488d3d5d7200.  lea rdi, [0x0000e248]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00006feb      b903000000     mov ecx, 3
0x00006ff0      4c89c6         mov rsi, r8
0x00006ff3      4c89c3         mov rbx, r8
0x00006ff6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006ff8      0f97c2         seta dl
0x00006ffb      80da00         sbb dl, 0
0x00006ffe      84d2           test dl, dl
0x00007000      750b           jne 0x700d
0x00007002      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00007006      48891db3a020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2110c0:8]=0
0x0000700d      48891deca320.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x211400:8]=0
0x00007014      48891dbda020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2110d8:8]=0
0x0000701b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000701c      c3             ret
0x0000701d      488b0ddca020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x00007024      488d3ddd7100.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xe208 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000702b      ba37000000     mov edx, 0x37                           ; '7'
0x00007030      be01000000     mov esi, 1
0x00007035      e8e6adffff     call sym.imp.fwrite
0x0000703a      e831aaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000703f      90             nop
;-- gettext_quote.part.1:
0x00007040      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00007041      53             push rbx
0x00007042      4889fd         mov rbp, rdi
0x00007045      89f3           mov ebx, esi
0x00007047      4883ec08       sub rsp, 8
0x0000704b      e8c0340000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00007050      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00007053      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007056      80fa55         cmp dl, 0x55
0x00007059      7475           je 0x70d0
0x0000705b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000705e      7420           je 0x7080
0x00007060      488d05f47100.  lea rax, str.l______l                   ; 0xe25b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007067      488d15ef7100.  lea rdx, [0x0000e25d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000706e      83fb09         cmp ebx, 9
0x00007071      480f45c2       cmovne rax, rdx
0x00007075      4883c408       add rsp, 8
0x00007079      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000707a      5d             pop rbp
0x0000707b      c3             ret
0x0000707c      0f1f4000       nop dword [rax]
0x00007080      0fb65001       movzx edx, byte [rax + 1]
0x00007084      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007087      80fa42         cmp dl, 0x42
0x0000708a      75d4           jne 0x7060
0x0000708c      80780231       cmp byte [rax + 2], 0x31
0x00007090      75ce           jne 0x7060
0x00007092      80780338       cmp byte [rax + 3], 0x38
0x00007096      75c8           jne 0x7060
0x00007098      80780430       cmp byte [rax + 4], 0x30
0x0000709c      75c2           jne 0x7060
0x0000709e      80780533       cmp byte [rax + 5], 0x33
0x000070a2      75bc           jne 0x7060
0x000070a4      80780630       cmp byte [rax + 6], 0x30
0x000070a8      75b6           jne 0x7060
0x000070aa      80780700       cmp byte [rax + 7], 0
0x000070ae      75b0           jne 0x7060
0x000070b0      807d0060       cmp byte [rbp], 0x60
0x000070b4      488d05997100.  lea rax, [0x0000e254]
0x000070bb      488d15967100.  lea rdx, [0x0000e258]
0x000070c2      480f45c2       cmovne rax, rdx
0x000070c6      4883c408       add rsp, 8
0x000070ca      5b             pop rbx
0x000070cb      5d             pop rbp
0x000070cc      c3             ret
0x000070cd      0f1f00         nop dword [rax]
0x000070d0      0fb65001       movzx edx, byte [rax + 1]
0x000070d4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000070d7      80fa54         cmp dl, 0x54
0x000070da      7584           jne 0x7060
0x000070dc      0fb65002       movzx edx, byte [rax + 2]
0x000070e0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000070e3      80fa46         cmp dl, 0x46
0x000070e6      0f8574ffffff   jne 0x7060
0x000070ec      8078032d       cmp byte [rax + 3], 0x2d
0x000070f0      0f856affffff   jne 0x7060
0x000070f6      80780438       cmp byte [rax + 4], 0x38
0x000070fa      0f8560ffffff   jne 0x7060
0x00007100      80780500       cmp byte [rax + 5], 0
0x00007104      0f8556ffffff   jne 0x7060
0x0000710a      807d0060       cmp byte [rbp], 0x60
0x0000710e      488d05377100.  lea rax, [0x0000e24c]                   ; "\u2018"
0x00007115      488d15347100.  lea rdx, [0x0000e250]                   ; "\u2019"
0x0000711c      480f45c2       cmovne rax, rdx
0x00007120      4883c408       add rsp, 8
0x00007124      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00007125      5d             pop rbp
0x00007126      c3             ret
0x00007127      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00007130      4157           push r15
0x00007132      4156           push r14
0x00007134      4589c7         mov r15d, r8d
0x00007137      4155           push r13
0x00007139      4154           push r12
0x0000713b      4989fe         mov r14, rdi
0x0000713e      55             push rbp
0x0000713f      53             push rbx
0x00007140      4489cb         mov ebx, r9d
0x00007143      4989f5         mov r13, rsi
0x00007146      4889cd         mov rbp, rcx
0x00007149      83e302         and ebx, 2
0x0000714c      4881ecb80000.  sub rsp, 0xb8
0x00007153      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000715b      4889542410     mov qword [rsp + 0x10], rdx
0x00007160      4489442408     mov dword [rsp + 8], r8d
0x00007165      44894c2478     mov dword [rsp + 0x78], r9d
0x0000716a      4889442420     mov qword [rsp + 0x20], rax
0x0000716f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00007177      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000717c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00007184      4889442460     mov qword [rsp + 0x60], rax
0x00007189      64488b042528.  mov rax, qword fs:[0x28]
0x00007192      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000719a      31c0           xor eax, eax
0x0000719c      e8cfa9ffff     call sym.imp.__ctype_get_mb_cur_max
0x000071a1      4183ff0a       cmp r15d, 0xa
0x000071a5      4889442458     mov qword [rsp + 0x58], rax
0x000071aa      0f87af110000   ja 0x835f
0x000071b0      488d0d097100.  lea rcx, [0x0000e2c0]
0x000071b7      4489fa         mov edx, r15d
0x000071ba      48630491       movsxd rax, dword [rcx + rdx*4]
0x000071be      4801c8         add rax, rcx
0x000071c1      ffe0           jmp rax
0x000071c3      c644240e01     mov byte [rsp + 0xe], 1
0x000071c8      c644247c00     mov byte [rsp + 0x7c], 0
0x000071cd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000071d0      48c744245000.  mov qword [rsp + 0x50], 0
0x000071d9      c644240f01     mov byte [rsp + 0xf], 1
0x000071de      c644240d00     mov byte [rsp + 0xd], 0
0x000071e3      488d05737000.  lea rax, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000071ea      48c744241801.  mov qword [rsp + 0x18], 1
0x000071f3      4531ff         xor r15d, r15d
0x000071f6      c74424080200.  mov dword [rsp + 8], 2
0x000071fe      4889442448     mov qword [rsp + 0x48], rax
0x00007203      4531db         xor r11d, r11d
0x00007206      4889e8         mov rax, rbp
0x00007209      4589e0         mov r8d, r12d
0x0000720c      4c89dd         mov rbp, r11
0x0000720f      4989c3         mov r11, rax
0x00007212      660f1f440000   nop word [rax + rax]
0x00007218      4939eb         cmp r11, rbp
0x0000721b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000721f      4983fbff       cmp r11, 0xffffffffffffffff
0x00007223      750d           jne 0x7232
0x00007225      488b442410     mov rax, qword [rsp + 0x10]
0x0000722a      803c2800       cmp byte [rax + rbp], 0
0x0000722e      410f95c4       setne r12b
0x00007232      4584e4         test r12b, r12b
0x00007235      0f8455060000   je 0x7890
0x0000723b      837c240802     cmp dword [rsp + 8], 2
0x00007240      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007245      4c8d0c2f       lea r9, [rdi + rbp]
0x00007249      0f95c0         setne al
0x0000724c      2244240d       and al, byte [rsp + 0xd]
0x00007250      4189c2         mov r10d, eax
0x00007253      0f84a7000000   je 0x7300
0x00007259      488b442418     mov rax, qword [rsp + 0x18]
0x0000725e      4885c0         test rax, rax
0x00007261      0f8429040000   je 0x7690
0x00007267      4983fbff       cmp r11, 0xffffffffffffffff
0x0000726b      488d5c0500     lea rbx, [rbp + rax]
0x00007270      752e           jne 0x72a0
0x00007272      4883f801       cmp rax, 1
0x00007276      7628           jbe 0x72a0
0x00007278      4488442438     mov byte [rsp + 0x38], r8b
0x0000727d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00007282      4c894c2428     mov qword [rsp + 0x28], r9
0x00007287      e8f4a8ffff     call sym.imp.strlen
0x0000728c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007292      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00007298      4989c3         mov r11, rax
0x0000729b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000072a0      4c39db         cmp rbx, r11
0x000072a3      4488542428     mov byte [rsp + 0x28], r10b
0x000072a8      0f87b2050000   ja 0x7860
0x000072ae      488b542418     mov rdx, qword [rsp + 0x18]
0x000072b3      488b742448     mov rsi, qword [rsp + 0x48]
0x000072b8      4c89cf         mov rdi, r9
0x000072bb      4c895c2440     mov qword [rsp + 0x40], r11
0x000072c0      4488442438     mov byte [rsp + 0x38], r8b
0x000072c5      4c894c2430     mov qword [rsp + 0x30], r9
0x000072ca      e8c1a9ffff     call sym.imp.memcmp
0x000072cf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000072d1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000072d6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000072dc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000072e1      0f8579050000   jne 0x7860
0x000072e7      807c240f00     cmp byte [rsp + 0xf], 0
0x000072ec      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000072f2      0f857d0f0000   jne 0x8275
0x000072f8      0f1f84000000.  nop dword [rax + rax]
0x00007300      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00007304      80fb7e         cmp bl, 0x7e
0x00007307      0f871b030000   ja 0x7628
0x0000730d      488d0dd86f00.  lea rcx, [0x0000e2ec]
0x00007314      0fb6d3         movzx edx, bl
0x00007317      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000731b      4801c8         add rax, rcx
0x0000731e      ffe0           jmp rax
0x00007320      4531d2         xor r10d, r10d
0x00007323      4983fb01       cmp r11, 1
0x00007327      0f95c0         setne al
0x0000732a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000732e      750c           jne 0x733c
0x00007330      488b442410     mov rax, qword [rsp + 0x10]
0x00007335      80780100       cmp byte [rax + 1], 0
0x00007339      0f95c0         setne al
0x0000733c      837c240802     cmp dword [rsp + 8], 2
0x00007341      0f94c2         sete dl
0x00007344      84c0           test al, al
0x00007346      0f844c020000   je 0x7598
0x0000734c      4531e4         xor r12d, r12d
0x0000734f      31c0           xor eax, eax
0x00007351      0f1f80000000.  nop dword [rax]
0x00007358      807c240d01     cmp byte [rsp + 0xd], 1
0x0000735d      0f850f010000   jne 0x7472
0x00007363      84d2           test dl, dl
0x00007365      0f8507010000   jne 0x7472
0x0000736b      488b742420     mov rsi, qword [rsp + 0x20]
0x00007370      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00007373      7414           je 0x7389
0x00007375      89da           mov edx, ebx
0x00007377      c0ea05         shr dl, 5
0x0000737a      0fb6d2         movzx edx, dl
0x0000737d      8b1496         mov edx, dword [rsi + rdx*4]
0x00007380      0fa3da         bt edx, ebx
0x00007383      0f824a010000   jb 0x74d3
0x00007389      4584d2         test r10b, r10b
0x0000738c      0f8541010000   jne 0x74d3
0x00007392      83f001         xor eax, 1
0x00007395      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00007399      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000739c      84c0           test al, al
0x0000739e      7420           je 0x73c0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000073a0      4d39fd         cmp r13, r15
0x000073a3      7605           jbe 0x73aa
0x000073a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000073aa      498d4701       lea rax, [r15 + 1]
0x000073ae      4939c5         cmp r13, rax
0x000073b1      7606           jbe 0x73b9
0x000073b3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000073b9      4983c702       add r15, 2
0x000073bd      4531c0         xor r8d, r8d
0x000073c0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000073c3      7304           jae 0x73c9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000073c5      43881c3e       mov byte [r14 + r15], bl
0x000073c9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000073ce      4983c701       add r15, 1
0x000073d2      b800000000     mov eax, 0
0x000073d7      4584e4         test r12b, r12b
0x000073da      0f44f8         cmove edi, eax
0x000073dd      40887c240e     mov byte [rsp + 0xe], dil
0x000073e2      e931feffff     jmp 0x7218
0x000073e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000073f0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000073f3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000073f7      83f802         cmp eax, 2
0x000073fa      0f84b8050000   je 0x79b8
0x00007400      83f805         cmp eax, 5
0x00007403      0f846f050000   je 0x7978
0x00007409      83f802         cmp eax, 2
0x0000740c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00007411      0f94c2         sete dl
0x00007414      4531e4         xor r12d, r12d
0x00007417      31c0           xor eax, eax
0x00007419      e93affffff     jmp 0x7358
0x0000741e      6690           nop
0x00007420      4531d2         xor r10d, r10d
0x00007423      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00007428      0f8402050000   je 0x7930
0x0000742e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00007433      31d2           xor edx, edx
0x00007435      31c0           xor eax, eax
0x00007437      bb27000000     mov ebx, 0x27                           ; '''
0x0000743c      e917ffffff     jmp 0x7358
0x00007441      0f1f80000000.  nop dword [rax]
0x00007448      ba09000000     mov edx, 9
0x0000744d      bb74000000     mov ebx, 0x74                           ; 't'
0x00007452      837c240802     cmp dword [rsp + 8], 2
0x00007457      0f94c0         sete al
0x0000745a      2244240f       and al, byte [rsp + 0xf]
0x0000745e      0f854a010000   jne 0x75ae
0x00007464      807c240d00     cmp byte [rsp + 0xd], 0
0x00007469      7565           jne 0x74d0
0x0000746b      89d3           mov ebx, edx
0x0000746d      4531e4         xor r12d, r12d
0x00007470      31c0           xor eax, eax
0x00007472      807c240f00     cmp byte [rsp + 0xf], 0
0x00007477      0f85eefeffff   jne 0x736b
0x0000747d      e907ffffff     jmp 0x7389                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00007482      660f1f440000   nop word [rax + rax]
0x00007488      ba08000000     mov edx, 8
0x0000748d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007492      ebd0           jmp 0x7464
0x00007494      0f1f4000       nop dword [rax]
0x00007498      837c240802     cmp dword [rsp + 8], 2
0x0000749d      0f84cd030000   je 0x7870
0x000074a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000074a8      0f8412020000   je 0x76c0
0x000074ae      807c240f00     cmp byte [rsp + 0xf], 0
0x000074b3      0f8407020000   je 0x76c0
0x000074b9      48837c241800   cmp qword [rsp + 0x18], 0
0x000074bf      0f85b6030000   jne 0x787b
0x000074c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000074ca      660f1f440000   nop word [rax + rax]
0x000074d0      4531e4         xor r12d, r12d
0x000074d3      837c240802     cmp dword [rsp + 8], 2
0x000074d8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000074db      807c240f00     cmp byte [rsp + 0xf], 0
0x000074e0      89d0           mov eax, edx
0x000074e2      0f8550080000   jne 0x7d38
0x000074e8      4489c0         mov eax, r8d
0x000074eb      83f001         xor eax, 1
0x000074ee      20d0           and al, dl
0x000074f0      742f           je 0x7521
0x000074f2      4d39fd         cmp r13, r15
0x000074f5      7605           jbe 0x74fc
0x000074f7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000074fc      498d5701       lea rdx, [r15 + 1]
0x00007500      4939d5         cmp r13, rdx
0x00007503      7606           jbe 0x750b
0x00007505      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000750b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000750f      4939d5         cmp r13, rdx
0x00007512      7606           jbe 0x751a
0x00007514      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000751a      4983c703       add r15, 3
0x0000751e      4189c0         mov r8d, eax
0x00007521      4d39fd         cmp r13, r15
0x00007524      7605           jbe 0x752b
0x00007526      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000752b      4983c701       add r15, 1
0x0000752f      4883c501       add rbp, 1
0x00007533      e988feffff     jmp 0x73c0
0x00007538      0f1f84000000.  nop dword [rax + rax]
0x00007540      807c240d00     cmp byte [rsp + 0xd], 0
0x00007545      0f85c8010000   jne 0x7713
0x0000754b      31d2           xor edx, edx
0x0000754d      f644247801     test byte [rsp + 0x78], 1
0x00007552      0f8413ffffff   je 0x746b
0x00007558      4883c501       add rbp, 1
0x0000755c      e9b7fcffff     jmp 0x7218
0x00007561      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00007568      837c240802     cmp dword [rsp + 8], 2
0x0000756d      0f94c2         sete dl
0x00007570      31c0           xor eax, eax
0x00007572      e9e1fdffff     jmp 0x7358
0x00007577      660f1f840000.  nop word [rax + rax]
0x00007580      ba07000000     mov edx, 7
0x00007585      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000758a      e9d5feffff     jmp 0x7464
0x0000758f      90             nop
0x00007590      837c240802     cmp dword [rsp + 8], 2
0x00007595      0f94c2         sete dl
0x00007598      4885ed         test rbp, rbp
0x0000759b      0f85abfdffff   jne 0x734c
0x000075a1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000075a6      20d0           and al, dl
0x000075a8      0f84aafdffff   je 0x7358
0x000075ae      4c89dd         mov rbp, r11
0x000075b1      c74424080200.  mov dword [rsp + 8], 2
0x000075b9      e9fb060000     jmp 0x7cb9
0x000075be      6690           nop
0x000075c0      837c240802     cmp dword [rsp + 8], 2
0x000075c5      0f94c2         sete dl
0x000075c8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000075cb      ebd4           jmp 0x75a1
0x000075cd      0f1f00         nop dword [rax]
0x000075d0      837c240802     cmp dword [rsp + 8], 2
0x000075d5      bb20000000     mov ebx, 0x20                           ; "@"
0x000075da      0f94c2         sete dl
0x000075dd      ebc2           jmp 0x75a1
0x000075df      90             nop
0x000075e0      ba0d000000     mov edx, 0xd
0x000075e5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000075ea      e963feffff     jmp 0x7452
0x000075ef      90             nop
0x000075f0      ba0c000000     mov edx, 0xc
0x000075f5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000075fa      e965feffff     jmp 0x7464
0x000075ff      90             nop
0x00007600      ba0b000000     mov edx, 0xb
0x00007605      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000760a      e955feffff     jmp 0x7464
0x0000760f      90             nop
0x00007610      ba0a000000     mov edx, 0xa
0x00007615      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000761a      e933feffff     jmp 0x7452
0x0000761f      90             nop
0x00007620      4531d2         xor r10d, r10d
0x00007623      0f1f440000     nop dword [rax + rax]
0x00007628      48837c245801   cmp qword [rsp + 0x58], 1
0x0000762e      0f85a4030000   jne 0x79d8
0x00007634      4c895c2438     mov qword [rsp + 0x38], r11
0x00007639      4488442430     mov byte [rsp + 0x30], r8b
0x0000763e      4488542428     mov byte [rsp + 0x28], r10b
0x00007643      e838a8ffff     call sym.imp.__ctype_b_loc
0x00007648      488b08         mov rcx, qword [rax]
0x0000764b      0fb6d3         movzx edx, bl
0x0000764e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00007654      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000765a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000765f      bf01000000     mov edi, 1
0x00007664      0fb70451       movzx eax, word [rcx + rdx*2]
0x00007668      66250040       and ax, 0x4000
0x0000766c      410f95c4       setne r12b
0x00007670      0f94c0         sete al
0x00007673      2244240d       and al, byte [rsp + 0xd]
0x00007677      84c0           test al, al
0x00007679      0f8592090000   jne 0x8011
0x0000767f      837c240802     cmp dword [rsp + 8], 2
0x00007684      0f94c2         sete dl
0x00007687      e9ccfcffff     jmp 0x7358
0x0000768c      0f1f4000       nop dword [rax]
0x00007690      410fb619       movzx ebx, byte [r9]
0x00007694      80fb7e         cmp bl, 0x7e
0x00007697      7787           ja 0x7620
0x00007699      488d0d486e00.  lea rcx, [0x0000e4e8]
0x000076a0      0fb6d3         movzx edx, bl
0x000076a3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000076a7      4801c8         add rax, rcx
0x000076aa      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000076ac      0f1f4000       nop dword [rax]
0x000076b0      4531d2         xor r10d, r10d
0x000076b3      807c240d00     cmp byte [rsp + 0xd], 0
0x000076b8      0f85f0fdffff   jne 0x74ae
0x000076be      6690           nop
0x000076c0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000076c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000076ca      e995fdffff     jmp 0x7464
0x000076cf      90             nop
0x000076d0      ba0c000000     mov edx, 0xc
0x000076d5      4531d2         xor r10d, r10d
0x000076d8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000076dd      e982fdffff     jmp 0x7464
0x000076e2      660f1f440000   nop word [rax + rax]
0x000076e8      ba0a000000     mov edx, 0xa
0x000076ed      4531d2         xor r10d, r10d
0x000076f0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000076f5      e958fdffff     jmp 0x7452
0x000076fa      660f1f440000   nop word [rax + rax]
0x00007700      bb61000000     mov ebx, 0x61                           ; 'a'
0x00007705      e9c6fdffff     jmp 0x74d0
0x0000770a      660f1f440000   nop word [rax + rax]
0x00007710      4531d2         xor r10d, r10d
0x00007713      837c240802     cmp dword [rsp + 8], 2
0x00007718      0f94c2         sete dl
0x0000771b      807c240f00     cmp byte [rsp + 0xf], 0
0x00007720      0f85940b0000   jne 0x82ba
0x00007726      4489c0         mov eax, r8d
0x00007729      4c89f9         mov rcx, r15
0x0000772c      83f001         xor eax, 1
0x0000772f      20d0           and al, dl
0x00007731      742d           je 0x7760
0x00007733      4d39fd         cmp r13, r15
0x00007736      7605           jbe 0x773d
0x00007738      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000773d      498d4f01       lea rcx, [r15 + 1]
0x00007741      4939cd         cmp r13, rcx
0x00007744      7606           jbe 0x774c
0x00007746      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000774c      498d4f02       lea rcx, [r15 + 2]
0x00007750      4939cd         cmp r13, rcx
0x00007753      0f8730060000   ja 0x7d89
0x00007759      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000775d      4189c0         mov r8d, eax
0x00007760      4939cd         cmp r13, rcx
0x00007763      7605           jbe 0x776a
0x00007765      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000776a      837c240802     cmp dword [rsp + 8], 2
0x0000776f      4c8d7901       lea r15, [rcx + 1]
0x00007773      0f8400060000   je 0x7d79
0x00007779      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000777d      4c39d8         cmp rax, r11
0x00007780      7319           jae 0x779b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00007782      488b442410     mov rax, qword [rsp + 0x10]
0x00007787      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000778c      88442428       mov byte [rsp + 0x28], al
0x00007790      83e830         sub eax, 0x30
0x00007793      3c09           cmp al, 9
0x00007795      0f862e080000   jbe 0x7fc9
0x0000779b      4489e0         mov eax, r12d
0x0000779e      bb30000000     mov ebx, 0x30                           ; '0'
0x000077a3      4531e4         xor r12d, r12d
0x000077a6      e9adfbffff     jmp 0x7358                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000077ab      0f1f440000     nop dword [rax + rax]
0x000077b0      837c240802     cmp dword [rsp + 8], 2
0x000077b5      4589d4         mov r12d, r10d
0x000077b8      0f94c2         sete dl
0x000077bb      4531d2         xor r10d, r10d
0x000077be      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000077c0      e993fbffff     jmp 0x7358                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000077c5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000077c8      837c240802     cmp dword [rsp + 8], 2
0x000077cd      0f94c2         sete dl
0x000077d0      4531d2         xor r10d, r10d
0x000077d3      e9c0fdffff     jmp 0x7598
0x000077d8      0f1f84000000.  nop dword [rax + rax]
0x000077e0      837c240802     cmp dword [rsp + 8], 2
0x000077e5      0f94c2         sete dl
0x000077e8      4531d2         xor r10d, r10d
0x000077eb      4531e4         xor r12d, r12d
0x000077ee      e9aefdffff     jmp 0x75a1
0x000077f3      0f1f440000     nop dword [rax + rax]
0x000077f8      837c240802     cmp dword [rsp + 8], 2
0x000077fd      4589d4         mov r12d, r10d
0x00007800      bb20000000     mov ebx, 0x20                           ; "@"
0x00007805      0f94c2         sete dl
0x00007808      4531d2         xor r10d, r10d
0x0000780b      e991fdffff     jmp 0x75a1
0x00007810      ba0d000000     mov edx, 0xd
0x00007815      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00007818      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000781d      e930fcffff     jmp 0x7452
0x00007822      660f1f440000   nop word [rax + rax]
0x00007828      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000782d      e99efcffff     jmp 0x74d0
0x00007832      660f1f440000   nop word [rax + rax]
0x00007838      ba09000000     mov edx, 9
0x0000783d      4531d2         xor r10d, r10d
0x00007840      bb74000000     mov ebx, 0x74                           ; 't'
0x00007845      e908fcffff     jmp 0x7452
0x0000784a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00007850      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007855      e976fcffff     jmp 0x74d0
0x0000785a      660f1f440000   nop word [rax + rax]
0x00007860      4531d2         xor r10d, r10d
0x00007863      e998faffff     jmp 0x7300
0x00007868      0f1f84000000.  nop dword [rax + rax]
0x00007870      807c240f00     cmp byte [rsp + 0xf], 0
0x00007875      0f8565090000   jne 0x81e0
0x0000787b      4883c501       add rbp, 1
0x0000787f      4489c0         mov eax, r8d
0x00007882      4531e4         xor r12d, r12d
0x00007885      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000788a      e90dfbffff     jmp 0x739c
0x0000788f      90             nop
0x00007890      837c240802     cmp dword [rsp + 8], 2
0x00007895      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000789a      4589c4         mov r12d, r8d
0x0000789d      4c89dd         mov rbp, r11
0x000078a0      0f94c2         sete dl
0x000078a3      89d8           mov eax, ebx
0x000078a5      4d85ff         test r15, r15
0x000078a8      0f94c1         sete cl
0x000078ab      21d0           and eax, edx
0x000078ad      20c8           and al, cl
0x000078af      0f85610a0000   jne 0x8316                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000078b5      89d8           mov eax, ebx
0x000078b7      83f001         xor eax, 1
0x000078ba      20c2           and dl, al
0x000078bc      0f846a090000   je 0x822c
0x000078c2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000078c7      0f845d090000   je 0x822a
0x000078cd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000078d2      0f85f5090000   jne 0x82cd
0x000078d8      4d85ed         test r13, r13
0x000078db      0f94c0         sete al
0x000078de      48837c245000   cmp qword [rsp + 0x50], 0
0x000078e4      0f95c2         setne dl
0x000078e7      20d0           and al, dl
0x000078e9      0f841d0a0000   je 0x830c
0x000078ef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000078f4      488d1d626900.  lea rbx, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000078fb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000078ff      c74424080200.  mov dword [rsp + 8], 2
0x00007907      41bf01000000   mov r15d, 1
0x0000790d      48c744241801.  mov qword [rsp + 0x18], 1
0x00007916      c644240f00     mov byte [rsp + 0xf], 0
0x0000791b      48895c2448     mov qword [rsp + 0x48], rbx
0x00007920      8844247c       mov byte [rsp + 0x7c], al
0x00007924      e9daf8ffff     jmp 0x7203
0x00007929      0f1f80000000.  nop dword [rax]
0x00007930      807c240f00     cmp byte [rsp + 0xf], 0
0x00007935      0f85a5080000   jne 0x81e0
0x0000793b      4d85ed         test r13, r13
0x0000793e      0f84fc030000   je 0x7d40                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00007944      31d2           xor edx, edx
0x00007946      48837c245000   cmp qword [rsp + 0x50], 0
0x0000794c      0f85ee030000   jne 0x7d40                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00007952      4c896c2450     mov qword [rsp + 0x50], r13
0x00007957      4983c703       add r15, 3
0x0000795b      31c0           xor eax, eax
0x0000795d      448864247c     mov byte [rsp + 0x7c], r12b
0x00007962      4531c0         xor r8d, r8d
0x00007965      4989d5         mov r13, rdx
0x00007968      bb27000000     mov ebx, 0x27                           ; '''
0x0000796d      e917faffff     jmp 0x7389
0x00007972      660f1f440000   nop word [rax + rax]
0x00007978      f644247804     test byte [rsp + 0x78], 4
0x0000797d      7421           je 0x79a0
0x0000797f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00007983      4c39d9         cmp rcx, r11
0x00007986      7318           jae 0x79a0
0x00007988      488b442410     mov rax, qword [rsp + 0x10]
0x0000798d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00007992      0f848a070000   je 0x8122
0x00007998      0f1f84000000.  nop dword [rax + rax]
0x000079a0      31d2           xor edx, edx
0x000079a2      4531e4         xor r12d, r12d
0x000079a5      31c0           xor eax, eax
0x000079a7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000079ac      e9a7f9ffff     jmp 0x7358
0x000079b1      0f1f80000000.  nop dword [rax]
0x000079b8      807c240f00     cmp byte [rsp + 0xf], 0
0x000079bd      0f851d080000   jne 0x81e0
0x000079c3      4531e4         xor r12d, r12d
0x000079c6      31c0           xor eax, eax
0x000079c8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000079cd      e9b7f9ffff     jmp 0x7389                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000079d2      660f1f440000   nop word [rax + rax]
0x000079d8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000079e0      4983fbff       cmp r11, 0xffffffffffffffff
0x000079e4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000079f0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000079f5      752d           jne 0x7a24
0x000079f7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000079fc      4488442440     mov byte [rsp + 0x40], r8b
0x00007a01      4488542438     mov byte [rsp + 0x38], r10b
0x00007a06      4c894c2430     mov qword [rsp + 0x30], r9
0x00007a0b      e870a1ffff     call sym.imp.strlen
0x00007a10      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00007a16      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00007a1c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00007a1f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007a24      488d84249c00.  lea rax, [rsp + 0x9c]
0x00007a2c      31c9           xor ecx, ecx
0x00007a2e      885c247e       mov byte [rsp + 0x7e], bl
0x00007a32      448844247d     mov byte [rsp + 0x7d], r8b
0x00007a37      4889cb         mov rbx, rcx
0x00007a3a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00007a42      4889442438     mov qword [rsp + 0x38], rax
0x00007a47      448854247f     mov byte [rsp + 0x7f], r10b
0x00007a4c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00007a54      4c89742440     mov qword [rsp + 0x40], r14
0x00007a59      4c896c2470     mov qword [rsp + 0x70], r13
0x00007a5e      4c895c2430     mov qword [rsp + 0x30], r11
0x00007a63      488b442410     mov rax, qword [rsp + 0x10]
0x00007a68      4c8d741d00     lea r14, [rbp + rbx]
0x00007a6d      488b542430     mov rdx, qword [rsp + 0x30]
0x00007a72      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007a77      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00007a7c      4e8d2c30       lea r13, [rax + r14]
0x00007a80      4c29f2         sub rdx, r14
0x00007a83      4c89ee         mov rsi, r13
0x00007a86      e885250000     call sym.rpl_mbrtowc
0x00007a8b      4885c0         test rax, rax
0x00007a8e      4989c7         mov r15, rax
0x00007a91      744e           je 0x7ae1
0x00007a93      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007a97      0f8418060000   je 0x80b5
0x00007a9d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00007aa1      0f849a050000   je 0x8041
0x00007aa7      837c240802     cmp dword [rsp + 8], 2
0x00007aac      0f94c0         sete al
0x00007aaf      2244240f       and al, byte [rsp + 0xf]
0x00007ab3      0f8597010000   jne 0x7c50
0x00007ab9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00007ac0      e88ba3ffff     call sym.imp.iswprint
0x00007ac5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00007aca      85c0           test eax, eax
0x00007acc      b800000000     mov eax, 0
0x00007ad1      440f44e0       cmove r12d, eax
0x00007ad5      4c01fb         add rbx, r15
0x00007ad8      e863a3ffff     call sym.imp.mbsinit
0x00007add      85c0           test eax, eax
0x00007adf      7482           je 0x7a63
0x00007ae1      4489e2         mov edx, r12d
0x00007ae4      4889df         mov rdi, rbx
0x00007ae7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007aed      83f201         xor edx, 1
0x00007af0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007af5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007afb      2254240d       and dl, byte [rsp + 0xd]
0x00007aff      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007b07      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007b0c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007b11      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007b16      4883ff01       cmp rdi, 1
0x00007b1a      0f86fb050000   jbe 0x811b
0x00007b20      4889f9         mov rcx, rdi
0x00007b23      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00007b25      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00007b2b      4801e9         add rcx, rbp
0x00007b2e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007b33      e9b6000000     jmp 0x7bee
0x00007b38      0f1f84000000.  nop dword [rax + rax]
0x00007b40      837c240802     cmp dword [rsp + 8], 2
0x00007b45      0f94c0         sete al
0x00007b48      4584c9         test r9b, r9b
0x00007b4b      0f85af040000   jne 0x8000
0x00007b51      4489c6         mov esi, r8d
0x00007b54      83f601         xor esi, 1
0x00007b57      4020f0         and al, sil
0x00007b5a      742f           je 0x7b8b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00007b5c      4d39fd         cmp r13, r15
0x00007b5f      7605           jbe 0x7b66
0x00007b61      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007b66      498d7701       lea rsi, [r15 + 1]
0x00007b6a      4939f5         cmp r13, rsi
0x00007b6d      7606           jbe 0x7b75                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00007b6f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007b75      498d7702       lea rsi, [r15 + 2]
0x00007b79      4939f5         cmp r13, rsi
0x00007b7c      7606           jbe 0x7b84
0x00007b7e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007b84      4983c703       add r15, 3
0x00007b88      4189c0         mov r8d, eax
0x00007b8b      4d39fd         cmp r13, r15
0x00007b8e      7605           jbe 0x7b95
0x00007b90      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007b95      498d4701       lea rax, [r15 + 1]
0x00007b99      4939c5         cmp r13, rax
0x00007b9c      760d           jbe 0x7bab
0x00007b9e      89d8           mov eax, ebx
0x00007ba0      c0e806         shr al, 6
0x00007ba3      83c030         add eax, 0x30
0x00007ba6      4388443e01     mov byte [r14 + r15 + 1], al
0x00007bab      498d4702       lea rax, [r15 + 2]
0x00007baf      4939c5         cmp r13, rax
0x00007bb2      7610           jbe 0x7bc4
0x00007bb4      89d8           mov eax, ebx
0x00007bb6      c0e803         shr al, 3
0x00007bb9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00007bbc      83c030         add eax, 0x30
0x00007bbf      4388443e02     mov byte [r14 + r15 + 2], al
0x00007bc4      83e307         and ebx, 7
0x00007bc7      4883c501       add rbp, 1
0x00007bcb      4983c703       add r15, 3
0x00007bcf      83c330         add ebx, 0x30
0x00007bd2      4839cd         cmp rbp, rcx
0x00007bd5      0f83e5f7ffff   jae 0x73c0
0x00007bdb      89d6           mov esi, edx
0x00007bdd      4d39fd         cmp r13, r15
0x00007be0      7604           jbe 0x7be6
0x00007be2      43881c3e       mov byte [r14 + r15], bl
0x00007be6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00007bea      4983c701       add r15, 1
0x00007bee      84d2           test dl, dl
0x00007bf0      0f854affffff   jne 0x7b40
0x00007bf6      89f0           mov eax, esi
0x00007bf8      83f001         xor eax, 1
0x00007bfb      4421c0         and eax, r8d
0x00007bfe      4584d2         test r10b, r10b
0x00007c01      740e           je 0x7c11
0x00007c03      4d39fd         cmp r13, r15
0x00007c06      7605           jbe 0x7c0d
0x00007c08      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007c0d      4983c701       add r15, 1
0x00007c11      4883c501       add rbp, 1
0x00007c15      4839cd         cmp rbp, rcx
0x00007c18      0f837ef7ffff   jae 0x739c
0x00007c1e      84c0           test al, al
0x00007c20      0f84f8030000   je 0x801e
0x00007c26      4d39fd         cmp r13, r15
0x00007c29      7605           jbe 0x7c30
0x00007c2b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007c30      498d4701       lea rax, [r15 + 1]
0x00007c34      4939c5         cmp r13, rax
0x00007c37      7606           jbe 0x7c3f
0x00007c39      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007c3f      4983c702       add r15, 2
0x00007c43      4531d2         xor r10d, r10d
0x00007c46      4531c0         xor r8d, r8d
0x00007c49      eb92           jmp 0x7bdd
0x00007c4b      0f1f440000     nop dword [rax + rax]
0x00007c50      4983ff01       cmp r15, 1
0x00007c54      0f845ffeffff   je 0x7ab9
0x00007c5a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007c5f      4a8d0c3f       lea rcx, [rdi + r15]
0x00007c63      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00007c68      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00007c6c      eb0f           jmp 0x7c7d
0x00007c6e      6690           nop
0x00007c70      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00007c74      4939d0         cmp r8, rdx
0x00007c77      0f843cfeffff   je 0x7ab9
0x00007c7d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00007c80      83e95b         sub ecx, 0x5b
0x00007c83      80f921         cmp cl, 0x21
0x00007c86      77e8           ja 0x7c70                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00007c88      be01000000     mov esi, 1
0x00007c8d      48d3e6         shl rsi, cl
0x00007c90      4889f1         mov rcx, rsi
0x00007c93      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00007c9d      4885f1         test rcx, rsi
0x00007ca0      74ce           je 0x7c70
0x00007ca2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007ca7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007cac      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00007cb1      c74424080200.  mov dword [rsp + 8], 2
0x00007cb9      807c240d00     cmp byte [rsp + 0xd], 0
0x00007cbe      7410           je 0x7cd0
0x00007cc0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00007cc2      b804000000     mov eax, 4
0x00007cc7      0f44442408     cmove eax, dword [rsp + 8]
0x00007ccc      89442408       mov dword [rsp + 8], eax
0x00007cd0      4883ec08       sub rsp, 8
0x00007cd4      4889e9         mov rcx, rbp
0x00007cd7      4c89ee         mov rsi, r13
0x00007cda      ff742468       push qword [rsp + 0x68]
0x00007cde      ff742478       push qword [rsp + 0x78]
0x00007ce2      4c89f7         mov rdi, r14
0x00007ce5      6a00           push 0
0x00007ce7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007cef      448b442428     mov r8d, dword [rsp + 0x28]
0x00007cf4      488b542430     mov rdx, qword [rsp + 0x30]
0x00007cf9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00007cfd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00007d02      4883c420       add rsp, 0x20
0x00007d06      4989c7         mov r15, rax
0x00007d09      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00007d11      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007d1a      4c89f8         mov rax, r15
0x00007d1d      0f8500060000   jne 0x8323
0x00007d23      4881c4b80000.  add rsp, 0xb8
0x00007d2a      5b             pop rbx
0x00007d2b      5d             pop rbp
0x00007d2c      415c           pop r12
0x00007d2e      415d           pop r13
0x00007d30      415e           pop r14
0x00007d32      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00007d34      c3             ret
0x00007d35      0f1f00         nop dword [rax]
0x00007d38      4c89dd         mov rbp, r11
0x00007d3b      e979ffffff     jmp 0x7cb9
0x00007d40      4d39fd         cmp r13, r15
0x00007d43      7605           jbe 0x7d4a
0x00007d45      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007d4a      498d4701       lea rax, [r15 + 1]
0x00007d4e      4939c5         cmp r13, rax
0x00007d51      7606           jbe 0x7d59
0x00007d53      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00007d59      498d4702       lea rax, [r15 + 2]
0x00007d5d      4939c5         cmp r13, rax
0x00007d60      0f86ec050000   jbe 0x8352
0x00007d66      4c89ea         mov rdx, r13
0x00007d69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007d6f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007d74      e9d9fbffff     jmp 0x7952
0x00007d79      4489e0         mov eax, r12d
0x00007d7c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00007d81      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00007d84      e900f6ffff     jmp 0x7389                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00007d89      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007d8f      e9c5f9ffff     jmp 0x7759
0x00007d94      85db           test ebx, ebx
0x00007d96      0f8527f4ffff   jne 0x71c3
0x00007d9c      c644240d01     mov byte [rsp + 0xd], 1
0x00007da1      4d85ed         test r13, r13
0x00007da4      0f8590050000   jne 0x833a
0x00007daa      488d05ac6400.  lea rax, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007db1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007dba      c644240e01     mov byte [rsp + 0xe], 1
0x00007dbf      c644247c00     mov byte [rsp + 0x7c], 0
0x00007dc4      4531e4         xor r12d, r12d
0x00007dc7      c644240f00     mov byte [rsp + 0xf], 0
0x00007dcc      48c744241801.  mov qword [rsp + 0x18], 1
0x00007dd5      4889442448     mov qword [rsp + 0x48], rax
0x00007dda      41bf01000000   mov r15d, 1
0x00007de0      c74424080200.  mov dword [rsp + 8], 2
0x00007de8      e916f4ffff     jmp 0x7203                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00007ded      0f1f00         nop dword [rax]
0x00007df0      85db           test ebx, ebx
0x00007df2      0f85f5030000   jne 0x81ed
0x00007df8      4d85ed         test r13, r13
0x00007dfb      0f8425020000   je 0x8026
0x00007e01      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00007e05      c644240e01     mov byte [rsp + 0xe], 1
0x00007e0a      4531e4         xor r12d, r12d
0x00007e0d      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e12      48c744245000.  mov qword [rsp + 0x50], 0
0x00007e1b      488d05396400.  lea rax, str.l______l                   ; 0xe25b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007e22      c644240f00     mov byte [rsp + 0xf], 0
0x00007e27      c644240d01     mov byte [rsp + 0xd], 1
0x00007e2c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007e35      41bf01000000   mov r15d, 1
0x00007e3b      4889442448     mov qword [rsp + 0x48], rax
0x00007e40      e9bef3ffff     jmp 0x7203
0x00007e45      488d050f6400.  lea rax, str.l______l                   ; 0xe25b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007e4c      c644240e01     mov byte [rsp + 0xe], 1
0x00007e51      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e56      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00007e59      48c744245000.  mov qword [rsp + 0x50], 0
0x00007e62      c644240f01     mov byte [rsp + 0xf], 1
0x00007e67      c644240d01     mov byte [rsp + 0xd], 1
0x00007e6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007e75      4531ff         xor r15d, r15d
0x00007e78      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00007e7d      c74424080500.  mov dword [rsp + 8], 5
0x00007e85      e979f3ffff     jmp 0x7203
0x00007e8a      c644240e01     mov byte [rsp + 0xe], 1
0x00007e8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e94      4531e4         xor r12d, r12d
0x00007e97      48c744245000.  mov qword [rsp + 0x50], 0
0x00007ea0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00007ea5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00007ea8      c644240d01     mov byte [rsp + 0xd], 1
0x00007ead      48c744241800.  mov qword [rsp + 0x18], 0
0x00007eb6      48c744244800.  mov qword [rsp + 0x48], 0
0x00007ebf      e93ff3ffff     jmp 0x7203
0x00007ec4      837c24080a     cmp dword [rsp + 8], 0xa
0x00007ec9      7456           je 0x7f21
0x00007ecb      488d358d6300.  lea rsi, [0x0000e25f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00007ed2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00007ed4      ba05000000     mov edx, 5
0x00007ed9      e8829cffff     call sym.imp.dcgettext
0x00007ede      4889c1         mov rcx, rax
0x00007ee1      4889442468     mov qword [rsp + 0x68], rax
0x00007ee6      488d05726300.  lea rax, [0x0000e25f]                   ; "`"
0x00007eed      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00007ef0      0f8498030000   je 0x828e
0x00007ef6      488d35606300.  lea rsi, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007efd      31ff           xor edi, edi
0x00007eff      ba05000000     mov edx, 5
0x00007f04      e8579cffff     call sym.imp.dcgettext
0x00007f09      4889c1         mov rcx, rax
0x00007f0c      4889442460     mov qword [rsp + 0x60], rax
0x00007f11      488d05456300.  lea rax, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007f18      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00007f1b      0f8483030000   je 0x82a4
0x00007f21      4531ff         xor r15d, r15d
0x00007f24      85db           test ebx, ebx
0x00007f26      0f84c1010000   je 0x80ed
0x00007f2c      85db           test ebx, ebx
0x00007f2e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00007f33      0f9544240f     setne byte [rsp + 0xf]
0x00007f38      4531e4         xor r12d, r12d
0x00007f3b      4889df         mov rdi, rbx
0x00007f3e      e83d9cffff     call sym.imp.strlen
0x00007f43      48895c2448     mov qword [rsp + 0x48], rbx
0x00007f48      4889442418     mov qword [rsp + 0x18], rax
0x00007f4d      c644240e01     mov byte [rsp + 0xe], 1
0x00007f52      c644247c00     mov byte [rsp + 0x7c], 0
0x00007f57      48c744245000.  mov qword [rsp + 0x50], 0
0x00007f60      c644240d01     mov byte [rsp + 0xd], 1
0x00007f65      e999f2ffff     jmp 0x7203
0x00007f6a      c644240e01     mov byte [rsp + 0xe], 1
0x00007f6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007f74      4531e4         xor r12d, r12d
0x00007f77      48c744245000.  mov qword [rsp + 0x50], 0
0x00007f80      c644240f00     mov byte [rsp + 0xf], 0
0x00007f85      4531ff         xor r15d, r15d
0x00007f88      c644240d00     mov byte [rsp + 0xd], 0
0x00007f8d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007f96      48c744244800.  mov qword [rsp + 0x48], 0
0x00007f9f      e95ff2ffff     jmp 0x7203
0x00007fa4      c644240e01     mov byte [rsp + 0xe], 1
0x00007fa9      c644247c00     mov byte [rsp + 0x7c], 0
0x00007fae      4531e4         xor r12d, r12d
0x00007fb1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007fba      c644240f01     mov byte [rsp + 0xf], 1
0x00007fbf      c644240d01     mov byte [rsp + 0xd], 1
0x00007fc4      e91af2ffff     jmp 0x71e3
0x00007fc9      4d39fd         cmp r13, r15
0x00007fcc      7605           jbe 0x7fd3
0x00007fce      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00007fd3      488d4102       lea rax, [rcx + 2]
0x00007fd7      4939c5         cmp r13, rax
0x00007fda      7606           jbe 0x7fe2
0x00007fdc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007fe2      4489e0         mov eax, r12d
0x00007fe5      4c8d7903       lea r15, [rcx + 3]
0x00007fe9      4531e4         xor r12d, r12d
0x00007fec      bb30000000     mov ebx, 0x30                           ; '0'
0x00007ff1      e962f3ffff     jmp 0x7358
0x00007ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008000      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00008005      4c89dd         mov rbp, r11
0x00008008      885c240d       mov byte [rsp + 0xd], bl
0x0000800c      e9a8fcffff     jmp 0x7cb9
0x00008011      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00008016      4531e4         xor r12d, r12d
0x00008019      e902fbffff     jmp 0x7b20
0x0000801e      4531d2         xor r10d, r10d
0x00008021      e9b7fbffff     jmp 0x7bdd
0x00008026      48c744245000.  mov qword [rsp + 0x50], 0
0x0000802f      c644240e01     mov byte [rsp + 0xe], 1
0x00008034      4531e4         xor r12d, r12d
0x00008037      c644247c00     mov byte [rsp + 0x7c], 0
0x0000803c      e9dafdffff     jmp 0x7e1b
0x00008041      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008046      4c89f6         mov rsi, r14
0x00008049      4c89e9         mov rcx, r13
0x0000804c      4889d8         mov rax, rbx
0x0000804f      4889df         mov rdi, rbx
0x00008052      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00008058      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000805d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00008065      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00008068      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000806e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00008076      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000807b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00008080      7326           jae 0x80a8
0x00008082      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00008085      7510           jne 0x8097
0x00008087      eb1f           jmp 0x80a8
0x00008089      0f1f80000000.  nop dword [rax]
0x00008090      41803c0100     cmp byte [r9 + rax], 0
0x00008095      740e           je 0x80a5
0x00008097      4883c001       add rax, 1
0x0000809b      488d540500     lea rdx, [rbp + rax]
0x000080a0      4939d3         cmp r11, rdx
0x000080a3      77eb           ja 0x8090
0x000080a5      4889c7         mov rdi, rax
0x000080a8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000080ad      4531e4         xor r12d, r12d
0x000080b0      e961faffff     jmp 0x7b16
0x000080b5      4889df         mov rdi, rbx
0x000080b8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000080be      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000080c3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000080c9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000080d1      4531e4         xor r12d, r12d
0x000080d4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000080d9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000080de      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000080e3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000080e8      e929faffff     jmp 0x7b16
0x000080ed      488b542468     mov rdx, qword [rsp + 0x68]
0x000080f2      0fb602         movzx eax, byte [rdx]
0x000080f5      84c0           test al, al
0x000080f7      0f842ffeffff   je 0x7f2c
0x000080fd      0f1f00         nop dword [rax]
0x00008100      4d39fd         cmp r13, r15
0x00008103      7604           jbe 0x8109
0x00008105      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00008109      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000810d      420fb6043a     movzx eax, byte [rdx + r15]
0x00008112      84c0           test al, al
0x00008114      75ea           jne 0x8100
0x00008116      e911feffff     jmp 0x7f2c
0x0000811b      89d0           mov eax, edx
0x0000811d      e955f5ffff     jmp 0x7677
0x00008122      0fb61c08       movzx ebx, byte [rax + rcx]
0x00008126      80fb3e         cmp bl, 0x3e
0x00008129      0f8771f8ffff   ja 0x79a0
0x0000812f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00008139      480fa3d8       bt rax, rbx
0x0000813d      0f835df8ffff   jae 0x79a0
0x00008143      807c240f00     cmp byte [rsp + 0xf], 0
0x00008148      0f85e4010000   jne 0x8332                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000814e      4d39fd         cmp r13, r15
0x00008151      7605           jbe 0x8158
0x00008153      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00008158      498d4701       lea rax, [r15 + 1]
0x0000815c      4939c5         cmp r13, rax
0x0000815f      7606           jbe 0x8167
0x00008161      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008167      498d4702       lea rax, [r15 + 2]
0x0000816b      4939c5         cmp r13, rax
0x0000816e      7606           jbe 0x8176
0x00008170      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008176      498d4703       lea rax, [r15 + 3]
0x0000817a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000817d      7606           jbe 0x8185
0x0000817f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00008185      4983c704       add r15, 4
0x00008189      31d2           xor edx, edx
0x0000818b      4531e4         xor r12d, r12d
0x0000818e      31c0           xor eax, eax
0x00008190      4889cd         mov rbp, rcx
0x00008193      e9c0f1ffff     jmp 0x7358
0x00008198      85db           test ebx, ebx
0x0000819a      0f8488010000   je 0x8328
0x000081a0      488d05b66000.  lea rax, [0x0000e25d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000081a7      c644240e01     mov byte [rsp + 0xe], 1
0x000081ac      c644247c00     mov byte [rsp + 0x7c], 0
0x000081b1      4531e4         xor r12d, r12d
0x000081b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000081bd      c644240f01     mov byte [rsp + 0xf], 1
0x000081c2      c644240d00     mov byte [rsp + 0xd], 0
0x000081c7      48c744241801.  mov qword [rsp + 0x18], 1
0x000081d0      4531ff         xor r15d, r15d
0x000081d3      4889442448     mov qword [rsp + 0x48], rax
0x000081d8      e926f0ffff     jmp 0x7203
0x000081dd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000081e0      4c89dd         mov rbp, r11
0x000081e3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000081e8      e9ccfaffff     jmp 0x7cb9
0x000081ed      488d05676000.  lea rax, str.l______l                   ; 0xe25b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000081f4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000081f9      c644247c00     mov byte [rsp + 0x7c], 0
0x000081fe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00008201      48c744245000.  mov qword [rsp + 0x50], 0
0x0000820a      c644240f01     mov byte [rsp + 0xf], 1
0x0000820f      c644240d01     mov byte [rsp + 0xd], 1
0x00008214      48c744241801.  mov qword [rsp + 0x18], 1
0x0000821d      4531ff         xor r15d, r15d
0x00008220      4889442448     mov qword [rsp + 0x48], rax
0x00008225      e9d9efffff     jmp 0x7203
0x0000822a      89d0           mov eax, edx
0x0000822c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00008231      4885db         test rbx, rbx
0x00008234      742c           je 0x8262
0x00008236      84c0           test al, al
0x00008238      7428           je 0x8262
0x0000823a      0fb60b         movzx ecx, byte [rbx]
0x0000823d      4889d8         mov rax, rbx
0x00008240      84c9           test cl, cl
0x00008242      741e           je 0x8262
0x00008244      4c89fa         mov rdx, r15
0x00008247      4c29f8         sub rax, r15
0x0000824a      4939d5         cmp r13, rdx
0x0000824d      7604           jbe 0x8253
0x0000824f      41880c16       mov byte [r14 + rdx], cl
0x00008253      4883c201       add rdx, 1
0x00008257      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000825b      84c9           test cl, cl
0x0000825d      75eb           jne 0x824a
0x0000825f      4989d7         mov r15, rdx
0x00008262      4d39fd         cmp r13, r15
0x00008265      0f869efaffff   jbe 0x7d09
0x0000826b      43c6043e00     mov byte [r14 + r15], 0
0x00008270      e994faffff     jmp 0x7d09
0x00008275      837c240802     cmp dword [rsp + 8], 2
0x0000827a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000827f      4c89dd         mov rbp, r11
0x00008282      0f94c0         sete al
0x00008285      885c240d       mov byte [rsp + 0xd], bl
0x00008289      e92bfaffff     jmp 0x7cb9
0x0000828e      8b742408       mov esi, dword [rsp + 8]
0x00008292      4889cf         mov rdi, rcx
0x00008295      e8a6edffff     call sym.gettext_quote.part.1
0x0000829a      4889442468     mov qword [rsp + 0x68], rax
0x0000829f      e952fcffff     jmp 0x7ef6
0x000082a4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000082a8      4889cf         mov rdi, rcx
0x000082ab      e890edffff     call sym.gettext_quote.part.1
0x000082b0      4889442460     mov qword [rsp + 0x60], rax
0x000082b5      e967fcffff     jmp 0x7f21
0x000082ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000082bf      4c89dd         mov rbp, r11
0x000082c2      89d0           mov eax, edx
0x000082c4      885c240d       mov byte [rsp + 0xd], bl
0x000082c8      e9ecf9ffff     jmp 0x7cb9
0x000082cd      4883ec08       sub rsp, 8
0x000082d1      41b805000000   mov r8d, 5
0x000082d7      4c89d9         mov rcx, r11
0x000082da      ff742468       push qword [rsp + 0x68]
0x000082de      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000082e2      4c89f7         mov rdi, r14
0x000082e5      ff742438       push qword [rsp + 0x38]
0x000082e9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000082f1      488b542430     mov rdx, qword [rsp + 0x30]
0x000082f6      488b742470     mov rsi, qword [rsp + 0x70]
0x000082fb      e830eeffff     call sym.quotearg_buffer_restyled
0x00008300      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00008304      4989c7         mov r15, rax
0x00008307      e9fdf9ffff     jmp 0x7d09
0x0000830c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00008311      e916ffffff     jmp 0x822c
0x00008316      c74424080200.  mov dword [rsp + 8], 2
0x0000831e      e996f9ffff     jmp 0x7cb9
0x00008323      e86898ffff     call sym.imp.__stack_chk_fail
0x00008328      c644240d00     mov byte [rsp + 0xd], 0
0x0000832d      e96ffaffff     jmp 0x7da1
0x00008332      4c89dd         mov rbp, r11
0x00008335      e996f9ffff     jmp 0x7cd0
0x0000833a      c644240e01     mov byte [rsp + 0xe], 1
0x0000833f      31c0           xor eax, eax
0x00008341      4531e4         xor r12d, r12d
0x00008344      48c744245000.  mov qword [rsp + 0x50], 0
0x0000834d      e9a2f5ffff     jmp 0x78f4
0x00008352      4c89ea         mov rdx, r13
0x00008355      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000835a      e9f3f5ffff     jmp 0x7952
0x0000835f      e80c97ffff     call sym.imp.abort
0x00008364      6690           nop
0x00008366      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00008370      4157           push r15
0x00008372      4156           push r14
0x00008374      4c63ff         movsxd r15, edi
0x00008377      4155           push r13
0x00008379      4154           push r12
0x0000837b      4989d6         mov r14, rdx
0x0000837e      55             push rbp
0x0000837f      53             push rbx
0x00008380      4889cd         mov rbp, rcx
0x00008383      4883ec28       sub rsp, 0x28
0x00008387      4889742408     mov qword [rsp + 8], rsi
0x0000838c      e8ef96ffff     call sym.imp.__errno_location
0x00008391      4989c5         mov r13, rax
0x00008394      8b00           mov eax, dword [rax]
0x00008396      4585ff         test r15d, r15d
0x00008399      488b1de08c20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x211080:8]=0x211090 obj.slotvec0
0x000083a0      89442418       mov dword [rsp + 0x18], eax
0x000083a4      0f8867010000   js 0x8511
0x000083aa      44393dc78c20.  cmp dword [obj.nslots], r15d            ; [0x211078:4]=1
0x000083b1      7f62           jg 0x8415
0x000083b3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000083ba      0f8456010000   je 0x8516
0x000083c0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000083c4      488d05c58c20.  lea rax, obj.slotvec0                   ; 0x211090
0x000083cb      4963f4         movsxd rsi, r12d
0x000083ce      48c1e604       shl rsi, 4
0x000083d2      4839c3         cmp rbx, rax
0x000083d5      0f8415010000   je 0x84f0
0x000083db      4889df         mov rdi, rbx
0x000083de      e83d100000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000083e3      4889c3         mov rbx, rax
0x000083e6      488905938c20.  mov qword [obj.slotvec], rax            ; [0x211080:8]=0x211090 obj.slotvec0
0x000083ed      48633d848c20.  movsxd rdi, dword [obj.nslots]          ; [0x211078:4]=1
0x000083f4      4489e2         mov edx, r12d
0x000083f7      31f6           xor esi, esi
0x000083f9      29fa           sub edx, edi
0x000083fb      48c1e704       shl rdi, 4
0x000083ff      4863d2         movsxd rdx, edx
0x00008402      4801df         add rdi, rbx
0x00008405      48c1e204       shl rdx, 4
0x00008409      e83298ffff     call sym.imp.memset
0x0000840e      448925638c20.  mov dword [obj.nslots], r12d            ; [0x211078:4]=1
0x00008415      8b4504         mov eax, dword [rbp + 4]
0x00008418      49c1e704       shl r15, 4
0x0000841c      4883ec08       sub rsp, 8
0x00008420      4c01fb         add rbx, r15
0x00008423      4c8d7d08       lea r15, [rbp + 8]
0x00008427      448b4500       mov r8d, dword [rbp]
0x0000842b      4c8b1b         mov r11, qword [rbx]
0x0000842e      4c8b6308       mov r12, qword [rbx + 8]
0x00008432      4c89f1         mov rcx, r14
0x00008435      83c801         or eax, 1
0x00008438      89442424       mov dword [rsp + 0x24], eax
0x0000843c      ff7530         push qword [rbp + 0x30]
0x0000843f      4189c1         mov r9d, eax
0x00008442      ff7528         push qword [rbp + 0x28]
0x00008445      4157           push r15
0x00008447      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000844a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000844f      4c89e7         mov rdi, r12
0x00008452      4c895c2430     mov qword [rsp + 0x30], r11
0x00008457      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000845c      4883c420       add rsp, 0x20
0x00008460      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008465      4939c3         cmp r11, rax
0x00008468      7767           ja 0x84d1
0x0000846a      488d7001       lea rsi, [rax + 1]
0x0000846e      488d05ab8f20.  lea rax, obj.slot0                      ; 0x211420
0x00008475      4939c4         cmp r12, rax
0x00008478      488933         mov qword [rbx], rsi
0x0000847b      7412           je 0x848f
0x0000847d      4c89e7         mov rdi, r12
0x00008480      4889742410     mov qword [rsp + 0x10], rsi
0x00008485      e8d695ffff     call sym.imp.free
0x0000848a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000848f      4889f7         mov rdi, rsi
0x00008492      4889742410     mov qword [rsp + 0x10], rsi
0x00008497      e8240f0000     call sym.xmalloc
0x0000849c      4883ec08       sub rsp, 8
0x000084a0      48894308       mov qword [rbx + 8], rax
0x000084a4      448b4500       mov r8d, dword [rbp]
0x000084a8      ff7530         push qword [rbp + 0x30]
0x000084ab      ff7528         push qword [rbp + 0x28]
0x000084ae      4c89f1         mov rcx, r14
0x000084b1      4157           push r15
0x000084b3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000084b8      4889c7         mov rdi, rax
0x000084bb      488b542428     mov rdx, qword [rsp + 0x28]
0x000084c0      488b742430     mov rsi, qword [rsp + 0x30]
0x000084c5      4989c4         mov r12, rax
0x000084c8      e863ecffff     call sym.quotearg_buffer_restyled
0x000084cd      4883c420       add rsp, 0x20
0x000084d1      8b442418       mov eax, dword [rsp + 0x18]
0x000084d5      41894500       mov dword [r13], eax
0x000084d9      4883c428       add rsp, 0x28
0x000084dd      4c89e0         mov rax, r12
0x000084e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000084e1      5d             pop rbp
0x000084e2      415c           pop r12
0x000084e4      415d           pop r13
0x000084e6      415e           pop r14
0x000084e8      415f           pop r15
0x000084ea      c3             ret
0x000084eb      0f1f440000     nop dword [rax + rax]
0x000084f0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000084f2      e8290f0000     call sym.xrealloc
0x000084f7      660f6f05918b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000084ff      4889c3         mov rbx, rax
0x00008502      488905778b20.  mov qword [obj.slotvec], rax            ; [0x211080:8]=0x211090 obj.slotvec0
0x00008509      0f1100         movups xmmword [rax], xmm0
0x0000850c      e9dcfeffff     jmp 0x83ed
0x00008511      e85a95ffff     call sym.imp.abort
0x00008516      e8f5100000     call sym.xalloc_die
0x0000851b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00008520      4154           push r12
0x00008522      55             push rbp
0x00008523      53             push rbx
0x00008524      4889fb         mov rbx, rdi
0x00008527      e85495ffff     call sym.imp.__errno_location
0x0000852c      448b20         mov r12d, dword [rax]
0x0000852f      4889c5         mov rbp, rax
0x00008532      488d05e78f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x00008539      4885db         test rbx, rbx
0x0000853c      be38000000     mov esi, 0x38                           ; '8'
0x00008541      480f44d8       cmove rbx, rax
0x00008545      4889df         mov rdi, rbx
0x00008548      e873100000     call sym.xmemdup
0x0000854d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008551      5b             pop rbx
0x00008552      5d             pop rbp
0x00008553      415c           pop r12
0x00008555      c3             ret
0x00008556      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00008560      488d05b98f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x00008567      4885ff         test rdi, rdi
0x0000856a      480f44f8       cmove rdi, rax
0x0000856e      8b07           mov eax, dword [rdi]
0x00008570      c3             ret
0x00008571      0f1f440000     nop dword [rax + rax]
0x00008576      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00008580      488d05998f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x00008587      4885ff         test rdi, rdi
0x0000858a      480f44f8       cmove rdi, rax
0x0000858e      8937           mov dword [rdi], esi
0x00008590      c3             ret
0x00008591      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008596      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000085a0      488d05798f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x000085a7      4885ff         test rdi, rdi
0x000085aa      89f1           mov ecx, esi
0x000085ac      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000085b0      89f0           mov eax, esi
0x000085b2      83e11f         and ecx, 0x1f
0x000085b5      c0e805         shr al, 5
0x000085b8      0fb6c0         movzx eax, al
0x000085bb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000085c0      8b37           mov esi, dword [rdi]
0x000085c2      89f0           mov eax, esi
0x000085c4      d3e8           shr eax, cl
0x000085c6      31c2           xor edx, eax
0x000085c8      83e001         and eax, 1
0x000085cb      83e201         and edx, 1
0x000085ce      d3e2           shl edx, cl
0x000085d0      31f2           xor edx, esi
0x000085d2      8917           mov dword [rdi], edx
0x000085d4      c3             ret
0x000085d5      90             nop
0x000085d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000085e0      488d05398f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x000085e7      4885ff         test rdi, rdi
0x000085ea      480f44f8       cmove rdi, rax
0x000085ee      8b4704         mov eax, dword [rdi + 4]
0x000085f1      897704         mov dword [rdi + 4], esi
0x000085f4      c3             ret
0x000085f5      90             nop
0x000085f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00008600      488d05198f20.  lea rax, obj.default_quoting_options    ; 0x211520
0x00008607      4885ff         test rdi, rdi
0x0000860a      480f44f8       cmove rdi, rax
0x0000860e      4885f6         test rsi, rsi
0x00008611      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00008617      740e           je 0x8627
0x00008619      4885d2         test rdx, rdx
0x0000861c      7409           je 0x8627
0x0000861e      48897728       mov qword [rdi + 0x28], rsi
0x00008622      48895730       mov qword [rdi + 0x30], rdx
0x00008626      c3             ret
0x00008627      4883ec08       sub rsp, 8
0x0000862b      e84094ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00008630      4157           push r15
0x00008632      4156           push r14
0x00008634      488d05e58e20.  lea rax, obj.default_quoting_options    ; 0x211520
0x0000863b      4155           push r13
0x0000863d      4154           push r12
0x0000863f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00008642      55             push rbp
0x00008643      53             push rbx
0x00008644      4c89c3         mov rbx, r8
0x00008647      4989f6         mov r14, rsi
0x0000864a      4989d7         mov r15, rdx
0x0000864d      4883ec18       sub rsp, 0x18
0x00008651      4d85c0         test r8, r8
0x00008654      480f44d8       cmove rbx, rax
0x00008658      48894c2408     mov qword [rsp + 8], rcx
0x0000865d      e81e94ffff     call sym.imp.__errno_location
0x00008662      448b20         mov r12d, dword [rax]
0x00008665      4889c5         mov rbp, rax
0x00008668      488d4308       lea rax, [rbx + 8]
0x0000866c      4883ec08       sub rsp, 8
0x00008670      448b4b04       mov r9d, dword [rbx + 4]
0x00008674      ff7330         push qword [rbx + 0x30]
0x00008677      448b03         mov r8d, dword [rbx]
0x0000867a      ff7328         push qword [rbx + 0x28]
0x0000867d      4c89fa         mov rdx, r15
0x00008680      50             push rax
0x00008681      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008686      4c89f6         mov rsi, r14
0x00008689      4c89ef         mov rdi, r13
0x0000868c      e89feaffff     call sym.quotearg_buffer_restyled
0x00008691      44896500       mov dword [rbp], r12d
0x00008695      4883c438       add rsp, 0x38
0x00008699      5b             pop rbx
0x0000869a      5d             pop rbp
0x0000869b      415c           pop r12
0x0000869d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000869f      415e           pop r14
0x000086a1      415f           pop r15
0x000086a3      c3             ret
0x000086a4      6690           nop
0x000086a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000086b0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000086b2      4156           push r14
0x000086b4      488d05658e20.  lea rax, obj.default_quoting_options    ; 0x211520
0x000086bb      4155           push r13
0x000086bd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000086bf      4989d4         mov r12, rdx
0x000086c2      55             push rbp
0x000086c3      53             push rbx
0x000086c4      4889cb         mov rbx, rcx
0x000086c7      4989fe         mov r14, rdi
0x000086ca      4989f7         mov r15, rsi
0x000086cd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000086d1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000086d4      480f44d8       cmove rbx, rax
0x000086d8      31ed           xor ebp, ebp
0x000086da      e8a193ffff     call sym.imp.__errno_location
0x000086df      4d85e4         test r12, r12
0x000086e2      4989c5         mov r13, rax
0x000086e5      8b00           mov eax, dword [rax]
0x000086e7      400f94c5       sete bpl
0x000086eb      0b6b04         or ebp, dword [rbx + 4]
0x000086ee      4c8d5308       lea r10, [rbx + 8]
0x000086f2      4883ec08       sub rsp, 8
0x000086f6      448b03         mov r8d, dword [rbx]
0x000086f9      4c89f9         mov rcx, r15
0x000086fc      89442414       mov dword [rsp + 0x14], eax
0x00008700      ff7330         push qword [rbx + 0x30]
0x00008703      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00008706      ff7328         push qword [rbx + 0x28]
0x00008709      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000870b      31f6           xor esi, esi
0x0000870d      4189e9         mov r9d, ebp
0x00008710      31ff           xor edi, edi
0x00008712      4c89542440     mov qword [rsp + 0x40], r10
0x00008717      e814eaffff     call sym.quotearg_buffer_restyled
0x0000871c      488d7001       lea rsi, [rax + 1]
0x00008720      4889442448     mov qword [rsp + 0x48], rax
0x00008725      4883c420       add rsp, 0x20
0x00008729      4889f7         mov rdi, rsi
0x0000872c      4889742418     mov qword [rsp + 0x18], rsi
0x00008731      e88a0c0000     call sym.xmalloc
0x00008736      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000873b      4883ec08       sub rsp, 8
0x0000873f      ff7330         push qword [rbx + 0x30]
0x00008742      ff7328         push qword [rbx + 0x28]
0x00008745      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000874a      4189e9         mov r9d, ebp
0x0000874d      448b03         mov r8d, dword [rbx]
0x00008750      4c89f9         mov rcx, r15
0x00008753      4c89f2         mov rdx, r14
0x00008756      4889c7         mov rdi, rax
0x00008759      4152           push r10
0x0000875b      488b742438     mov rsi, qword [rsp + 0x38]
0x00008760      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00008765      8b44242c       mov eax, dword [rsp + 0x2c]
0x00008769      4883c420       add rsp, 0x20
0x0000876d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00008770      41894500       mov dword [r13], eax
0x00008774      7409           je 0x877f
0x00008776      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000877b      4d891c24       mov qword [r12], r11
0x0000877f      488b442410     mov rax, qword [rsp + 0x10]
0x00008784      4883c438       add rsp, 0x38
0x00008788      5b             pop rbx
0x00008789      5d             pop rbp
0x0000878a      415c           pop r12
0x0000878c      415d           pop r13
0x0000878e      415e           pop r14
0x00008790      415f           pop r15
0x00008792      c3             ret
0x00008793      0f1f00         nop dword [rax]
0x00008796      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000087a0      4889d1         mov rcx, rdx
0x000087a3      31d2           xor edx, edx
0x000087a5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000087aa      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000087b0      8b05c2882000   mov eax, dword [obj.nslots]             ; [0x211078:4]=1
0x000087b6      4154           push r12
0x000087b8      4c8b25c18820.  mov r12, qword [obj.slotvec]            ; [0x211080:8]=0x211090 obj.slotvec0
0x000087bf      55             push rbp
0x000087c0      53             push rbx
0x000087c1      83f801         cmp eax, 1
0x000087c4      7e2b           jle 0x87f1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000087c6      83e802         sub eax, 2
0x000087c9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000087ce      48c1e004       shl rax, 4
0x000087d2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000087d7      660f1f840000.  nop word [rax + rax]
0x000087e0      488b3b         mov rdi, qword [rbx]
0x000087e3      4883c310       add rbx, 0x10
0x000087e7      e87492ffff     call sym.imp.free
0x000087ec      4839eb         cmp rbx, rbp
0x000087ef      75ef           jne 0x87e0
0x000087f1      498b7c2408     mov rdi, qword [r12 + 8]
0x000087f6      488d1d238c20.  lea rbx, obj.slot0                      ; 0x211420
0x000087fd      4839df         cmp rdi, rbx
0x00008800      7417           je 0x8819
0x00008802      e85992ffff     call sym.imp.free
0x00008807      48c7057e8820.  mov qword [obj.slotvec0], 0x100         ; [0x211090:8]=256
0x00008812      48891d7f8820.  mov qword [0x00211098], rbx             ; [0x211098:8]=0x211420 obj.slot0
0x00008819      488d1d708820.  lea rbx, obj.slotvec0                   ; 0x211090
0x00008820      4939dc         cmp r12, rbx
0x00008823      740f           je 0x8834
0x00008825      4c89e7         mov rdi, r12
0x00008828      e83392ffff     call sym.imp.free
0x0000882d      48891d4c8820.  mov qword [obj.slotvec], rbx            ; [0x211080:8]=0x211090 obj.slotvec0
0x00008834      5b             pop rbx
0x00008835      c70539882000.  mov dword [obj.nslots], 1               ; [0x211078:4]=1
0x0000883f      5d             pop rbp
0x00008840      415c           pop r12
0x00008842      c3             ret
0x00008843      0f1f00         nop dword [rax]
0x00008846      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00008850      488d0dc98c20.  lea rcx, obj.default_quoting_options    ; 0x211520
0x00008857      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000885e      e90dfbffff     jmp sym.quotearg_n_options
0x00008863      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00008866      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00008870      488d0da98c20.  lea rcx, obj.default_quoting_options    ; 0x211520
0x00008877      e9f4faffff     jmp sym.quotearg_n_options
0x0000887c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00008880      488d0d998c20.  lea rcx, obj.default_quoting_options    ; 0x211520
0x00008887      4889fe         mov rsi, rdi
0x0000888a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008891      31ff           xor edi, edi
0x00008893      e9d8faffff     jmp sym.quotearg_n_options
0x00008898      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000088a0      488d0d798c20.  lea rcx, obj.default_quoting_options    ; 0x211520
0x000088a7      4889f2         mov rdx, rsi
0x000088aa      4889fe         mov rsi, rdi
0x000088ad      31ff           xor edi, edi
0x000088af      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000088b4      6690           nop
0x000088b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000088c0      4883ec48       sub rsp, 0x48
0x000088c4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000088c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000088d0      4889542438     mov qword [rsp + 0x38], rdx
0x000088d5      31d2           xor edx, edx
0x000088d7      83fe0a         cmp esi, 0xa
0x000088da      7468           je 0x8944
0x000088dc      893424         mov dword [rsp], esi
0x000088df      4889e1         mov rcx, rsp
0x000088e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000088e9      4889c6         mov rsi, rax
0x000088ec      48c744240400.  mov qword [rsp + 4], 0
0x000088f5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000088fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00008907      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008910      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00008919      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008922      c74424340000.  mov dword [rsp + 0x34], 0
0x0000892a      e841faffff     call sym.quotearg_n_options
0x0000892f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008934      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000893d      750a           jne 0x8949                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000893f      4883c448       add rsp, 0x48
0x00008943      c3             ret
0x00008944      e82791ffff     call sym.imp.abort
0x00008949      e84292ffff     call sym.imp.__stack_chk_fail
0x0000894e      6690           nop
;-- quotearg_n_style_mem:
0x00008950      4883ec48       sub rsp, 0x48
0x00008954      4889d0         mov rax, rdx
0x00008957      4889ca         mov rdx, rcx
0x0000895a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00008963      48894c2438     mov qword [rsp + 0x38], rcx
0x00008968      31c9           xor ecx, ecx
0x0000896a      83fe0a         cmp esi, 0xa
0x0000896d      7461           je 0x89d0
0x0000896f      893424         mov dword [rsp], esi
0x00008972      4889e1         mov rcx, rsp
0x00008975      4889c6         mov rsi, rax
0x00008978      48c744240400.  mov qword [rsp + 4], 0
0x00008981      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000898a      48c744241400.  mov qword [rsp + 0x14], 0
0x00008993      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000899c      48c744242400.  mov qword [rsp + 0x24], 0
0x000089a5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000089ae      c74424340000.  mov dword [rsp + 0x34], 0
0x000089b6      e8b5f9ffff     call sym.quotearg_n_options
0x000089bb      488b542438     mov rdx, qword [rsp + 0x38]
0x000089c0      644833142528.  xor rdx, qword fs:[0x28]
0x000089c9      750a           jne 0x89d5
0x000089cb      4883c448       add rsp, 0x48
0x000089cf      c3             ret
0x000089d0      e89b90ffff     call sym.imp.abort
0x000089d5      e8b691ffff     call sym.imp.__stack_chk_fail
0x000089da      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000089e0      4889f2         mov rdx, rsi
0x000089e3      89fe           mov esi, edi
0x000089e5      31ff           xor edi, edi
0x000089e7      e9d4feffff     jmp sym.quotearg_n_style
0x000089ec      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000089f0      4889d1         mov rcx, rdx
0x000089f3      4889f2         mov rdx, rsi
0x000089f6      89fe           mov esi, edi
0x000089f8      31ff           xor edi, edi
0x000089fa      e951ffffff     jmp sym.quotearg_n_style_mem
0x000089ff      90             nop
;-- quotearg_char_mem:
0x00008a00      4883ec48       sub rsp, 0x48
0x00008a04      89d1           mov ecx, edx
0x00008a06      64488b042528.  mov rax, qword fs:[0x28]
0x00008a0f      4889442438     mov qword [rsp + 0x38], rax
0x00008a14      31c0           xor eax, eax
0x00008a16      488b05338b20.  mov rax, qword [0x00211550]             ; [0x211550:8]=0
0x00008a1d      4989e0         mov r8, rsp
0x00008a20      83e11f         and ecx, 0x1f
0x00008a23      660f6f05f58a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00008a2b      4889442430     mov qword [rsp + 0x30], rax
0x00008a30      89d0           mov eax, edx
0x00008a32      0f290424       movaps xmmword [rsp], xmm0
0x00008a36      c0e805         shr al, 5
0x00008a39      0fb6c0         movzx eax, al
0x00008a3c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00008a41      660f6f05e78a.  movdqa xmm0, xmmword [0x00211530]
0x00008a49      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008a4e      660f6f05ea8a.  movdqa xmm0, xmmword [0x00211540]
0x00008a56      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00008a5b      418b11         mov edx, dword [r9]
0x00008a5e      89d0           mov eax, edx
0x00008a60      d3e8           shr eax, cl
0x00008a62      f7d0           not eax
0x00008a64      83e001         and eax, 1
0x00008a67      d3e0           shl eax, cl
0x00008a69      4c89c1         mov rcx, r8
0x00008a6c      31d0           xor eax, edx
0x00008a6e      4889f2         mov rdx, rsi
0x00008a71      4889fe         mov rsi, rdi
0x00008a74      418901         mov dword [r9], eax
0x00008a77      31ff           xor edi, edi
0x00008a79      e8f2f8ffff     call sym.quotearg_n_options
0x00008a7e      488b742438     mov rsi, qword [rsp + 0x38]
0x00008a83      644833342528.  xor rsi, qword fs:[0x28]
0x00008a8c      7505           jne 0x8a93
0x00008a8e      4883c448       add rsp, 0x48
0x00008a92      c3             ret
0x00008a93      e8f890ffff     call sym.imp.__stack_chk_fail
0x00008a98      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00008aa0      400fbed6       movsx edx, sil
0x00008aa4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00008aab      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00008ab0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00008ab5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00008abc      e93fffffff     jmp sym.quotearg_char_mem
0x00008ac1      0f1f440000     nop dword [rax + rax]
0x00008ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00008ad0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00008ad5      e926ffffff     jmp sym.quotearg_char_mem
0x00008ada      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00008ae0      4883ec48       sub rsp, 0x48
0x00008ae4      4889d0         mov rax, rdx
0x00008ae7      64488b142528.  mov rdx, qword fs:[0x28]
0x00008af0      4889542438     mov qword [rsp + 0x38], rdx
0x00008af5      31d2           xor edx, edx
0x00008af7      83fe0a         cmp esi, 0xa
0x00008afa      7468           je 0x8b64
0x00008afc      893424         mov dword [rsp], esi
0x00008aff      4889e1         mov rcx, rsp
0x00008b02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008b09      4889c6         mov rsi, rax
0x00008b0c      48c744240400.  mov qword [rsp + 4], 0
0x00008b15      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00008b1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00008b27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008b30      48c744242400.  mov qword [rsp + 0x24], 0
0x00008b39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008b42      c74424340000.  mov dword [rsp + 0x34], 0
0x00008b4a      e821f8ffff     call sym.quotearg_n_options
0x00008b4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008b54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008b5d      750a           jne 0x8b69
0x00008b5f      4883c448       add rsp, 0x48
0x00008b63      c3             ret
0x00008b64      e8078fffff     call sym.imp.abort
0x00008b69      e82290ffff     call sym.imp.__stack_chk_fail
0x00008b6e      6690           nop
;-- quotearg_n_custom_mem:
0x00008b70      4883ec48       sub rsp, 0x48
0x00008b74      4989c9         mov r9, rcx
0x00008b77      488b0dd28920.  mov rcx, qword [0x00211550]             ; [0x211550:8]=0
0x00008b7e      660f6f059a89.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00008b86      64488b042528.  mov rax, qword fs:[0x28]
0x00008b8f      4889442438     mov qword [rsp + 0x38], rax
0x00008b94      31c0           xor eax, eax
0x00008b96      0f290424       movaps xmmword [rsp], xmm0
0x00008b9a      4885f6         test rsi, rsi
0x00008b9d      48894c2430     mov qword [rsp + 0x30], rcx
0x00008ba2      c704240a0000.  mov dword [rsp], 0xa
0x00008ba9      660f6f057f89.  movdqa xmm0, xmmword [0x00211530]
0x00008bb1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008bb6      660f6f058289.  movdqa xmm0, xmmword [0x00211540]
0x00008bbe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00008bc3      7432           je 0x8bf7
0x00008bc5      4885d2         test rdx, rdx
0x00008bc8      742d           je 0x8bf7
0x00008bca      4889742428     mov qword [rsp + 0x28], rsi
0x00008bcf      4889542430     mov qword [rsp + 0x30], rdx
0x00008bd4      4889e1         mov rcx, rsp
0x00008bd7      4c89c2         mov rdx, r8
0x00008bda      4c89ce         mov rsi, r9
0x00008bdd      e88ef7ffff     call sym.quotearg_n_options
0x00008be2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008be7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008bf0      750a           jne 0x8bfc
0x00008bf2      4883c448       add rsp, 0x48
0x00008bf6      c3             ret
0x00008bf7      e8748effff     call sym.imp.abort
0x00008bfc      e88f8fffff     call sym.imp.__stack_chk_fail
0x00008c01      0f1f440000     nop dword [rax + rax]
0x00008c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00008c10      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00008c17      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00008c1c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00008c20      4889d1         mov rcx, rdx
0x00008c23      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00008c2a      4889f2         mov rdx, rsi
0x00008c2d      4889fe         mov rsi, rdi
0x00008c30      31ff           xor edi, edi
0x00008c32      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00008c37      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00008c40      4989c8         mov r8, rcx
0x00008c43      4889d1         mov rcx, rdx
0x00008c46      4889f2         mov rdx, rsi
0x00008c49      4889fe         mov rsi, rdi
0x00008c4c      31ff           xor edi, edi
0x00008c4e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00008c53      0f1f00         nop dword [rax]
0x00008c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00008c60      488d0dd98320.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00008c67      e904f7ffff     jmp sym.quotearg_n_options
0x00008c6c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00008c70      488d0dc98320.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00008c77      4889f2         mov rdx, rsi
0x00008c7a      4889fe         mov rsi, rdi
0x00008c7d      31ff           xor edi, edi
0x00008c7f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00008c84      6690           nop
0x00008c86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00008c90      488d0da98320.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00008c97      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008c9e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00008ca3      0f1f00         nop dword [rax]
0x00008ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00008cb0      488d0d898320.  lea rcx, obj.quote_quoting_options      ; 0x211040
0x00008cb7      4889fe         mov rsi, rdi
0x00008cba      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008cc1      31ff           xor edi, edi
0x00008cc3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00008cc8      0f1f84000000.  nop dword [rax + rax]
;-- verror_at_line:
0x00008cd0      4156           push r14                                ; ../coreutils-8.31/lib/verror.c:57
0x00008cd2      4155           push r13
0x00008cd4      4189f5         mov r13d, esi
0x00008cd7      4154           push r12
0x00008cd9      55             push rbp
0x00008cda      4189fc         mov r12d, edi
0x00008cdd      53             push rbx
0x00008cde      4c89ce         mov rsi, r9                             ; ../coreutils-8.31/lib/verror.c:58
0x00008ce1      4c89c7         mov rdi, r8
0x00008ce4      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/verror.c:57
0x00008ce7      4189ce         mov r14d, ecx
0x00008cea      e8d10e0000     call sym.xvasprintf                     ; ../coreutils-8.31/lib/verror.c:58
0x00008cef      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/verror.c:59
0x00008cf2      7463           je 0x8d57
0x00008cf4      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/verror.c:64
0x00008cf7      4889c3         mov rbx, rax
0x00008cfa      7434           je 0x8d30
0x00008cfc      4c8d05693900.  lea r8, [0x0000c66c]                    ; ../coreutils-8.31/lib/verror.c:65 ; "%s"
0x00008d03      4489e7         mov edi, r12d
0x00008d06      4989c1         mov r9, rax
0x00008d09      4489f1         mov ecx, r14d
0x00008d0c      4889ea         mov rdx, rbp
0x00008d0f      4489ee         mov esi, r13d
0x00008d12      31c0           xor eax, eax
0x00008d14      e8878dffff     call sym.imp.error_at_line
0x00008d19      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x00008d1c      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x00008d1d      5d             pop rbp
0x00008d1e      415c           pop r12
0x00008d20      415d           pop r13
0x00008d22      415e           pop r14
0x00008d24      e9378dffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x00008d29      0f1f80000000.  nop dword [rax]
0x00008d30      488d15353900.  lea rdx, [0x0000c66c]                   ; ../coreutils-8.31/lib/verror.c:67 ; "%s"
0x00008d37      4489e7         mov edi, r12d
0x00008d3a      4889c1         mov rcx, rax
0x00008d3d      4489ee         mov esi, r13d
0x00008d40      31c0           xor eax, eax
0x00008d42      e84990ffff     call sym.imp.error
0x00008d47      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x00008d4a      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x00008d4b      5d             pop rbp
0x00008d4c      415c           pop r12
0x00008d4e      415d           pop r13
0x00008d50      415e           pop r14
0x00008d52      e9098dffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x00008d57      488d35ca5900.  lea rsi, [0x0000e728]                   ; ../coreutils-8.31/lib/verror.c:73 ; "unable to display error message"
0x00008d5e      ba05000000     mov edx, 5
0x00008d63      31ff           xor edi, edi
0x00008d65      e8f68dffff     call sym.imp.dcgettext
0x00008d6a      4889c3         mov rbx, rax
0x00008d6d      e80e8dffff     call sym.imp.__errno_location
0x00008d72      8b30           mov esi, dword [rax]
0x00008d74      4889da         mov rdx, rbx
0x00008d77      31ff           xor edi, edi
0x00008d79      31c0           xor eax, eax
0x00008d7b      e81090ffff     call sym.imp.error
0x00008d80      e8eb8cffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/verror.c:74
0x00008d85      90             nop
0x00008d86      662e0f1f8400.  nop word cs:[rax + rax]
;-- verror:
0x00008d90      4989d0         mov r8, rdx                             ; ../coreutils-8.31/lib/verror.c:44
0x00008d93      4989c9         mov r9, rcx
0x00008d96      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/verror.c:45
0x00008d98      31c9           xor ecx, ecx
0x00008d9a      e931ffffff     jmp sym.verror_at_line
0x00008d9f      90             nop
;-- version_etc_arn:
0x00008da0      4157           push r15
0x00008da2      4156           push r14
0x00008da4      4155           push r13
0x00008da6      4154           push r12
0x00008da8      4d89cc         mov r12, r9
0x00008dab      55             push rbp
0x00008dac      53             push rbx
0x00008dad      4889fd         mov rbp, rdi
0x00008db0      4c89c3         mov rbx, r8
0x00008db3      4883ec28       sub rsp, 0x28
0x00008db7      4885f6         test rsi, rsi
0x00008dba      0f8418010000   je 0x8ed8
0x00008dc0      4989d0         mov r8, rdx
0x00008dc3      488d157e5900.  lea rdx, str.s___s___s                  ; 0xe748 ; "%s (%s) %s\n"
0x00008dca      4989c9         mov r9, rcx
0x00008dcd      31c0           xor eax, eax
0x00008dcf      4889f1         mov rcx, rsi
0x00008dd2      be01000000     mov esi, 1
0x00008dd7      e85490ffff     call sym.imp.__fprintf_chk
0x00008ddc      488d35785900.  lea rsi, [0x0000e75b]                   ; "(C)"
0x00008de3      31ff           xor edi, edi
0x00008de5      ba05000000     mov edx, 5
0x00008dea      e8718dffff     call sym.imp.dcgettext
0x00008def      488d158a5c00.  lea rdx, obj.version_etc_copyright      ; 0xea80 ; "Copyright %s %d Free Software Foundation, Inc."
0x00008df6      4889c1         mov rcx, rax
0x00008df9      41b8e3070000   mov r8d, 0x7e3
0x00008dff      be01000000     mov esi, 1
0x00008e04      4889ef         mov rdi, rbp
0x00008e07      31c0           xor eax, eax
0x00008e09      e82290ffff     call sym.imp.__fprintf_chk
0x00008e0e      488d35d35900.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xe7e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00008e15      31ff           xor edi, edi
0x00008e17      ba05000000     mov edx, 5
0x00008e1c      e83f8dffff     call sym.imp.dcgettext
0x00008e21      4889ee         mov rsi, rbp
0x00008e24      4889c7         mov rdi, rax
0x00008e27      e8748effff     call sym.imp.fputs_unlocked
0x00008e2c      4983fc09       cmp r12, 9
0x00008e30      0f873a030000   ja 0x9170
0x00008e36      488d15075c00.  lea rdx, [0x0000ea44]
0x00008e3d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00008e41      4801d0         add rax, rdx
0x00008e44      ffe0           jmp rax
0x00008e46      662e0f1f8400.  nop word cs:[rax + rax]
0x00008e50      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008e54      488b4310       mov rax, qword [rbx + 0x10]
0x00008e58      488d35f95a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xe958 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00008e5f      4c8b4308       mov r8, qword [rbx + 8]
0x00008e63      ba05000000     mov edx, 5
0x00008e68      31ff           xor edi, edi
0x00008e6a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008e6e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008e72      4c894c2410     mov qword [rsp + 0x10], r9
0x00008e77      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008e7b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008e7f      48890424       mov qword [rsp], rax
0x00008e83      4c89442408     mov qword [rsp + 8], r8
0x00008e88      488b1b         mov rbx, qword [rbx]
0x00008e8b      e8d08cffff     call sym.imp.dcgettext
0x00008e90      4883ec08       sub rsp, 8
0x00008e94      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00008e99      4889c2         mov rdx, rax
0x00008e9c      4889d9         mov rcx, rbx
0x00008e9f      be01000000     mov esi, 1
0x00008ea4      4889ef         mov rdi, rbp
0x00008ea7      31c0           xor eax, eax
0x00008ea9      4151           push r9
0x00008eab      4155           push r13
0x00008ead      4154           push r12
0x00008eaf      4157           push r15
0x00008eb1      4156           push r14
0x00008eb3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008eb8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00008ebd      e86e8fffff     call sym.imp.__fprintf_chk
0x00008ec2      4883c430       add rsp, 0x30
0x00008ec6      4883c428       add rsp, 0x28
0x00008eca      5b             pop rbx
0x00008ecb      5d             pop rbp
0x00008ecc      415c           pop r12
0x00008ece      415d           pop r13
0x00008ed0      415e           pop r14
0x00008ed2      415f           pop r15
0x00008ed4      c3             ret
0x00008ed5      0f1f00         nop dword [rax]
0x00008ed8      4989c8         mov r8, rcx
0x00008edb      4889d1         mov rcx, rdx
0x00008ede      488d156f5800.  lea rdx, str.s__s                       ; 0xe754 ; "%s %s\n"
0x00008ee5      be01000000     mov esi, 1
0x00008eea      31c0           xor eax, eax
0x00008eec      e83f8fffff     call sym.imp.__fprintf_chk
0x00008ef1      e9e6feffff     jmp 0x8ddc
0x00008ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008f00      4c8b5340       mov r10, qword [rbx + 0x40]
0x00008f04      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00008f08      488d35795a00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xe988 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00008f0f      488b4310       mov rax, qword [rbx + 0x10]
0x00008f13      4c8b4308       mov r8, qword [rbx + 8]
0x00008f17      ba05000000     mov edx, 5
0x00008f1c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00008f20      4c8b6328       mov r12, qword [rbx + 0x28]
0x00008f24      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00008f28      4c8b7318       mov r14, qword [rbx + 0x18]
0x00008f2c      488b1b         mov rbx, qword [rbx]
0x00008f2f      4c89542418     mov qword [rsp + 0x18], r10
0x00008f34      4c894c2410     mov qword [rsp + 0x10], r9
0x00008f39      48890424       mov qword [rsp], rax
0x00008f3d      4c89442408     mov qword [rsp + 8], r8
0x00008f42      31ff           xor edi, edi
0x00008f44      e8178cffff     call sym.imp.dcgettext
0x00008f49      4c8b542418     mov r10, qword [rsp + 0x18]
0x00008f4e      4152           push r10
0x00008f50      e93fffffff     jmp 0x8e94
0x00008f55      0f1f00         nop dword [rax]
0x00008f58      488b1b         mov rbx, qword [rbx]
0x00008f5b      488d35fd5700.  lea rsi, str.Written_by__s.             ; 0xe75f ; "Written by %s.\n"
0x00008f62      ba05000000     mov edx, 5
0x00008f67      31ff           xor edi, edi
0x00008f69      e8f28bffff     call sym.imp.dcgettext
0x00008f6e      4883c428       add rsp, 0x28
0x00008f72      4889d9         mov rcx, rbx
0x00008f75      4889ef         mov rdi, rbp
0x00008f78      5b             pop rbx
0x00008f79      5d             pop rbp
0x00008f7a      415c           pop r12
0x00008f7c      415d           pop r13
0x00008f7e      415e           pop r14
0x00008f80      415f           pop r15
0x00008f82      4889c2         mov rdx, rax
0x00008f85      be01000000     mov esi, 1
0x00008f8a      31c0           xor eax, eax
0x00008f8c      e99f8effff     jmp sym.imp.__fprintf_chk
0x00008f91      0f1f80000000.  nop dword [rax]
0x00008f98      4c8b6308       mov r12, qword [rbx + 8]
0x00008f9c      488d35cc5700.  lea rsi, str.Written_by__s_and__s.      ; 0xe76f ; "Written by %s and %s.\n"
0x00008fa3      488b1b         mov rbx, qword [rbx]
0x00008fa6      ba05000000     mov edx, 5
0x00008fab      31ff           xor edi, edi
0x00008fad      e8ae8bffff     call sym.imp.dcgettext
0x00008fb2      4883c428       add rsp, 0x28
0x00008fb6      4d89e0         mov r8, r12
0x00008fb9      4889d9         mov rcx, rbx
0x00008fbc      4889ef         mov rdi, rbp
0x00008fbf      4889c2         mov rdx, rax
0x00008fc2      be01000000     mov esi, 1
0x00008fc7      5b             pop rbx
0x00008fc8      5d             pop rbp
0x00008fc9      415c           pop r12
0x00008fcb      415d           pop r13
0x00008fcd      415e           pop r14
0x00008fcf      415f           pop r15
0x00008fd1      31c0           xor eax, eax
0x00008fd3      e9588effff     jmp sym.imp.__fprintf_chk
0x00008fd8      0f1f84000000.  nop dword [rax + rax]
0x00008fe0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00008fe4      4c8b6308       mov r12, qword [rbx + 8]
0x00008fe8      488d35975700.  lea rsi, str.Written_by__s___s__and__s. ; 0xe786 ; "Written by %s, %s, and %s.\n"
0x00008fef      488b1b         mov rbx, qword [rbx]
0x00008ff2      ba05000000     mov edx, 5
0x00008ff7      31ff           xor edi, edi
0x00008ff9      e8628bffff     call sym.imp.dcgettext
0x00008ffe      4883c428       add rsp, 0x28
0x00009002      4d89e9         mov r9, r13
0x00009005      4d89e0         mov r8, r12
0x00009008      4889d9         mov rcx, rbx
0x0000900b      4889ef         mov rdi, rbp
0x0000900e      4889c2         mov rdx, rax
0x00009011      5b             pop rbx
0x00009012      5d             pop rbp
0x00009013      415c           pop r12
0x00009015      415d           pop r13
0x00009017      415e           pop r14
0x00009019      415f           pop r15
0x0000901b      be01000000     mov esi, 1
0x00009020      31c0           xor eax, eax
0x00009022      e9098effff     jmp sym.imp.__fprintf_chk
0x00009027      660f1f840000.  nop word [rax + rax]
0x00009030      488d35815800.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xe8b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009037      ba05000000     mov edx, 5
0x0000903c      31ff           xor edi, edi
0x0000903e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009042      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009046      4c8b6308       mov r12, qword [rbx + 8]
0x0000904a      488b1b         mov rbx, qword [rbx]
0x0000904d      e80e8bffff     call sym.imp.dcgettext
0x00009052      4883ec08       sub rsp, 8
0x00009056      4156           push r14
0x00009058      4889c2         mov rdx, rax
0x0000905b      4d89e9         mov r9, r13
0x0000905e      4d89e0         mov r8, r12
0x00009061      4889d9         mov rcx, rbx
0x00009064      4889ef         mov rdi, rbp
0x00009067      be01000000     mov esi, 1
0x0000906c      31c0           xor eax, eax
0x0000906e      e8bd8dffff     call sym.imp.__fprintf_chk
0x00009073      58             pop rax
0x00009074      5a             pop rdx
0x00009075      4883c428       add rsp, 0x28
0x00009079      5b             pop rbx
0x0000907a      5d             pop rbp
0x0000907b      415c           pop r12
0x0000907d      415d           pop r13
0x0000907f      415e           pop r14
0x00009081      415f           pop r15
0x00009083      c3             ret
0x00009084      0f1f4000       nop dword [rax]
0x00009088      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000908c      488d35455800.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xe8d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00009093      ba05000000     mov edx, 5
0x00009098      31ff           xor edi, edi
0x0000909a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000909e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000090a2      4c8b6308       mov r12, qword [rbx + 8]
0x000090a6      488b1b         mov rbx, qword [rbx]
0x000090a9      e8b28affff     call sym.imp.dcgettext
0x000090ae      4157           push r15
0x000090b0      eba4           jmp 0x9056
0x000090b2      660f1f440000   nop word [rax + rax]
0x000090b8      4c8b4308       mov r8, qword [rbx + 8]
0x000090bc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000090c0      488d35395800.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xe900 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000090c7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000090cb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000090cf      ba05000000     mov edx, 5
0x000090d4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000090d8      31ff           xor edi, edi
0x000090da      488b1b         mov rbx, qword [rbx]
0x000090dd      4c890424       mov qword [rsp], r8
0x000090e1      e87a8affff     call sym.imp.dcgettext
0x000090e6      4883ec08       sub rsp, 8
0x000090ea      4d89e9         mov r9, r13
0x000090ed      4154           push r12
0x000090ef      4157           push r15
0x000090f1      4156           push r14
0x000090f3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000090f8      4889d9         mov rcx, rbx
0x000090fb      4889c2         mov rdx, rax
0x000090fe      4889ef         mov rdi, rbp
0x00009101      be01000000     mov esi, 1
0x00009106      31c0           xor eax, eax
0x00009108      e8238dffff     call sym.imp.__fprintf_chk
0x0000910d      4883c420       add rsp, 0x20
0x00009111      4883c428       add rsp, 0x28
0x00009115      5b             pop rbx
0x00009116      5d             pop rbp
0x00009117      415c           pop r12
0x00009119      415d           pop r13
0x0000911b      415e           pop r14
0x0000911d      415f           pop r15
0x0000911f      c3             ret
0x00009120      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009124      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009128      488d35f95700.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xe928 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000912f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009133      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009137      ba05000000     mov edx, 5
0x0000913c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009140      4c8b4308       mov r8, qword [rbx + 8]
0x00009144      31ff           xor edi, edi
0x00009146      4c894c2408     mov qword [rsp + 8], r9
0x0000914b      488b1b         mov rbx, qword [rbx]
0x0000914e      4c890424       mov qword [rsp], r8
0x00009152      e8098affff     call sym.imp.dcgettext
0x00009157      4155           push r13
0x00009159      4154           push r12
0x0000915b      4157           push r15
0x0000915d      4156           push r14
0x0000915f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009164      eb8d           jmp 0x90f3
0x00009166      662e0f1f8400.  nop word cs:[rax + rax]
0x00009170      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009174      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009178      ba05000000     mov edx, 5
0x0000917d      488b4310       mov rax, qword [rbx + 0x10]
0x00009181      4c8b4308       mov r8, qword [rbx + 8]
0x00009185      488d35345800.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xe9c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000918c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009190      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009194      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009198      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000919c      4c89542418     mov qword [rsp + 0x18], r10
0x000091a1      4c894c2410     mov qword [rsp + 0x10], r9
0x000091a6      48890424       mov qword [rsp], rax
0x000091aa      4c89442408     mov qword [rsp + 8], r8
0x000091af      488b1b         mov rbx, qword [rbx]
0x000091b2      e98bfdffff     jmp 0x8f42
0x000091b7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000091c0      4531c9         xor r9d, r9d
0x000091c3      49833800       cmp qword [r8], 0
0x000091c7      7412           je 0x91db
0x000091c9      0f1f80000000.  nop dword [rax]
0x000091d0      4983c101       add r9, 1
0x000091d4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000091d9      75f5           jne 0x91d0
0x000091db      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000091e0      4883ec68       sub rsp, 0x68
0x000091e4      4d89c2         mov r10, r8
0x000091e7      4531c9         xor r9d, r9d
0x000091ea      64488b042528.  mov rax, qword fs:[0x28]
0x000091f3      4889442458     mov qword [rsp + 0x58], rax
0x000091f8      31c0           xor eax, eax
0x000091fa      4989e0         mov r8, rsp
0x000091fd      0f1f00         nop dword [rax]
0x00009200      418b02         mov eax, dword [r10]
0x00009203      83f82f         cmp eax, 0x2f
0x00009206      7742           ja 0x924a
0x00009208      4189c3         mov r11d, eax
0x0000920b      4d035a10       add r11, qword [r10 + 0x10]
0x0000920f      83c008         add eax, 8
0x00009212      418902         mov dword [r10], eax
0x00009215      498b03         mov rax, qword [r11]
0x00009218      4885c0         test rax, rax
0x0000921b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000921f      740a           je 0x922b
0x00009221      4983c101       add r9, 1
0x00009225      4983f90a       cmp r9, 0xa
0x00009229      75d5           jne 0x9200
0x0000922b      e870fbffff     call sym.version_etc_arn
0x00009230      488b442458     mov rax, qword [rsp + 0x58]
0x00009235      644833042528.  xor rax, qword fs:[0x28]
0x0000923e      7505           jne 0x9245
0x00009240      4883c468       add rsp, 0x68
0x00009244      c3             ret
0x00009245      e84689ffff     call sym.imp.__stack_chk_fail
0x0000924a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000924e      498d4308       lea rax, [r11 + 8]
0x00009252      49894208       mov qword [r10 + 8], rax
0x00009256      ebbd           jmp 0x9215
0x00009258      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00009260      55             push rbp
0x00009261      53             push rbx
0x00009262      41ba20000000   mov r10d, 0x20                          ; "@"
0x00009268      4531db         xor r11d, r11d
0x0000926b      4881ecb80000.  sub rsp, 0xb8
0x00009272      64488b042528.  mov rax, qword fs:[0x28]
0x0000927b      4889442478     mov qword [rsp + 0x78], rax
0x00009280      31c0           xor eax, eax
0x00009282      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000928a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00009292      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000929a      4c8d442420     lea r8, [rsp + 0x20]
0x0000929f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000092a7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000092af      4889442410     mov qword [rsp + 0x10], rax
0x000092b4      488d84248000.  lea rax, [rsp + 0x80]
0x000092bc      4531c9         xor r9d, r9d
0x000092bf      4889442418     mov qword [rsp + 0x18], rax
0x000092c4      4889c5         mov rbp, rax
0x000092c7      660f1f840000.  nop word [rax + rax]
0x000092d0      4183fa2f       cmp r10d, 0x2f
0x000092d4      7756           ja 0x932c
0x000092d6      4489d0         mov eax, r10d
0x000092d9      41bb01000000   mov r11d, 1
0x000092df      4183c208       add r10d, 8
0x000092e3      4801e8         add rax, rbp
0x000092e6      488b00         mov rax, qword [rax]
0x000092e9      4885c0         test rax, rax
0x000092ec      4b8904c8       mov qword [r8 + r9*8], rax
0x000092f0      740a           je 0x92fc
0x000092f2      4983c101       add r9, 1
0x000092f6      4983f90a       cmp r9, 0xa
0x000092fa      75d4           jne 0x92d0
0x000092fc      4584db         test r11b, r11b
0x000092ff      7524           jne 0x9325
0x00009301      e89afaffff     call sym.version_etc_arn
0x00009306      488b442478     mov rax, qword [rsp + 0x78]
0x0000930b      644833042528.  xor rax, qword fs:[0x28]
0x00009314      750a           jne 0x9320
0x00009316      4881c4b80000.  add rsp, 0xb8
0x0000931d      5b             pop rbx
0x0000931e      5d             pop rbp
0x0000931f      c3             ret
0x00009320      e86b88ffff     call sym.imp.__stack_chk_fail
0x00009325      4489542408     mov dword [rsp + 8], r10d
0x0000932a      ebd5           jmp 0x9301
0x0000932c      4889d8         mov rax, rbx
0x0000932f      4883c308       add rbx, 8
0x00009333      ebb1           jmp 0x92e6
0x00009335      90             nop
0x00009336      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009340      53             push rbx
0x00009341      488d355a5400.  lea rsi, str.Report_bugs_to:__s         ; 0xe7a2 ; "\nReport bugs to: %s\n"
0x00009348      ba05000000     mov edx, 5
0x0000934d      31ff           xor edi, edi
0x0000934f      e80c88ffff     call sym.imp.dcgettext
0x00009354      488d155c5400.  lea rdx, str.bug_coreutils_gnu.org      ; 0xe7b7 ; "bug-coreutils@gnu.org"
0x0000935b      4889c6         mov rsi, rax
0x0000935e      bf01000000     mov edi, 1
0x00009363      31c0           xor eax, eax
0x00009365      e8068affff     call sym.imp.__printf_chk
0x0000936a      488d355c5400.  lea rsi, str.s_home_page:___s           ; 0xe7cd ; "%s home page: <%s>\n"
0x00009371      ba05000000     mov edx, 5
0x00009376      31ff           xor edi, edi
0x00009378      e8e387ffff     call sym.imp.dcgettext
0x0000937d      488d0d5c4500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xd8e0 ; "https://www.gnu.org/software/coreutils/"
0x00009384      488d15e73300.  lea rdx, str.GNU_coreutils              ; 0xc772 ; "GNU coreutils"
0x0000938b      4889c6         mov rsi, rax
0x0000938e      bf01000000     mov edi, 1
0x00009393      31c0           xor eax, eax
0x00009395      e8d689ffff     call sym.imp.__printf_chk
0x0000939a      488b1d277d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2110c8:8]=0
0x000093a1      488d35585600.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xea00 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000093a8      31ff           xor edi, edi
0x000093aa      ba05000000     mov edx, 5
0x000093af      e8ac87ffff     call sym.imp.dcgettext
0x000093b4      4889de         mov rsi, rbx
0x000093b7      4889c7         mov rdi, rax
0x000093ba      5b             pop rbx
0x000093bb      e9e088ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000093c0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000093c1      4889fb         mov rbx, rdi
0x000093c4      e83789ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000093c9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000093cc      7505           jne 0x93d3
0x000093ce      4885db         test rbx, rbx
0x000093d1      7502           jne 0x93d5
0x000093d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000093d4      c3             ret
0x000093d5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000093da      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000093e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000093e3      48f7e6         mul rsi
0x000093e6      4889c7         mov rdi, rax
0x000093e9      0f90c0         seto al
0x000093ec      4885ff         test rdi, rdi
0x000093ef      780a           js 0x93fb
0x000093f1      0fb6c0         movzx eax, al
0x000093f4      4885c0         test rax, rax
0x000093f7      7502           jne 0x93fb
0x000093f9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000093fb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000093ff      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009404      6690           nop
0x00009406      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009410      ebae           jmp sym.xmalloc
0x00009412      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009416      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009420      4885f6         test rsi, rsi
0x00009423      53             push rbx
0x00009424      4889f3         mov rbx, rsi
0x00009427      7505           jne 0x942e
0x00009429      4885ff         test rdi, rdi
0x0000942c      751a           jne 0x9448
0x0000942e      4889de         mov rsi, rbx
0x00009431      e81a89ffff     call sym.imp.realloc
0x00009436      4885c0         test rax, rax
0x00009439      7505           jne 0x9440
0x0000943b      4885db         test rbx, rbx
0x0000943e      7511           jne 0x9451                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009440      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009441      c3             ret
0x00009442      660f1f440000   nop word [rax + rax]
0x00009448      e81386ffff     call sym.imp.free
0x0000944d      31c0           xor eax, eax
0x0000944f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00009450      c3             ret
0x00009451      e8ba010000     call sym.xalloc_die
0x00009456      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00009460      4889f0         mov rax, rsi
0x00009463      48f7e2         mul rdx
0x00009466      4889c6         mov rsi, rax
0x00009469      0f90c0         seto al
0x0000946c      4885f6         test rsi, rsi
0x0000946f      780a           js 0x947b
0x00009471      0fb6c0         movzx eax, al
0x00009474      4885c0         test rax, rax
0x00009477      7502           jne 0x947b
0x00009479      eba5           jmp sym.xrealloc
0x0000947b      4883ec08       sub rsp, 8
0x0000947f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00009484      6690           nop
0x00009486      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00009490      4885ff         test rdi, rdi
0x00009493      4989d1         mov r9, rdx
0x00009496      488b0e         mov rcx, qword [rsi]
0x00009499      7435           je 0x94d0
0x0000949b      31d2           xor edx, edx
0x0000949d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000094a7      49f7f1         div r9
0x000094aa      4839c8         cmp rax, rcx
0x000094ad      763c           jbe 0x94eb
0x000094af      4889c8         mov rax, rcx
0x000094b2      48d1e8         shr rax, 1
0x000094b5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000094ba      48890e         mov qword [rsi], rcx
0x000094bd      490fafc9       imul rcx, r9
0x000094c1      4889ce         mov rsi, rcx
0x000094c4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000094c9      0f1f80000000.  nop dword [rax]
0x000094d0      4885c9         test rcx, rcx
0x000094d3      7423           je 0x94f8
0x000094d5      4889c8         mov rax, rcx
0x000094d8      49f7e1         mul r9
0x000094db      0f90c2         seto dl
0x000094de      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000094e1      0fb6d2         movzx edx, dl
0x000094e4      7805           js 0x94eb
0x000094e6      4885d2         test rdx, rdx
0x000094e9      74cf           je 0x94ba
0x000094eb      4883ec08       sub rsp, 8
0x000094ef      e81c010000     call sym.xalloc_die
0x000094f4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000094f8      31d2           xor edx, edx
0x000094fa      b880000000     mov eax, 0x80
0x000094ff      4531c0         xor r8d, r8d
0x00009502      49f7f1         div r9
0x00009505      4885c0         test rax, rax
0x00009508      410f94c0       sete r8b
0x0000950c      498d0c00       lea rcx, [r8 + rax]
0x00009510      ebc3           jmp 0x94d5
0x00009512      0f1f4000       nop dword [rax]
0x00009516      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009520      4885ff         test rdi, rdi
0x00009523      488b06         mov rax, qword [rsi]
0x00009526      7428           je 0x9550
0x00009528      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009532      4839d0         cmp rax, rdx
0x00009535      772a           ja 0x9561
0x00009537      4889c2         mov rdx, rax
0x0000953a      48d1ea         shr rdx, 1
0x0000953d      488d440201     lea rax, [rdx + rax + 1]
0x00009542      488906         mov qword [rsi], rax
0x00009545      4889c6         mov rsi, rax
0x00009548      e9d3feffff     jmp sym.xrealloc
0x0000954d      0f1f00         nop dword [rax]
0x00009550      4885c0         test rax, rax
0x00009553      ba80000000     mov edx, 0x80
0x00009558      480f44c2       cmove rax, rdx
0x0000955c      4885c0         test rax, rax
0x0000955f      79e1           jns 0x9542
0x00009561      4883ec08       sub rsp, 8
0x00009565      e8a6000000     call sym.xalloc_die
0x0000956a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00009570      53             push rbx
0x00009571      4889fb         mov rbx, rdi
0x00009574      e847feffff     call sym.xmalloc
0x00009579      4889da         mov rdx, rbx
0x0000957c      31f6           xor esi, esi
0x0000957e      4889c7         mov rdi, rax
0x00009581      5b             pop rbx
0x00009582      e9b986ffff     jmp sym.imp.memset
0x00009587      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00009590      4889f8         mov rax, rdi
0x00009593      4883ec08       sub rsp, 8
0x00009597      48f7e6         mul rsi
0x0000959a      0f90c2         seto dl
0x0000959d      4885c0         test rax, rax
0x000095a0      7817           js 0x95b9
0x000095a2      0fb6d2         movzx edx, dl
0x000095a5      4885d2         test rdx, rdx
0x000095a8      750f           jne 0x95b9
0x000095aa      e80187ffff     call sym.imp.calloc
0x000095af      4885c0         test rax, rax
0x000095b2      7405           je 0x95b9
0x000095b4      4883c408       add rsp, 8
0x000095b8      c3             ret
0x000095b9      e852000000     call sym.xalloc_die
0x000095be      6690           nop
;-- xmemdup:
0x000095c0      55             push rbp
0x000095c1      53             push rbx
0x000095c2      4889fd         mov rbp, rdi
0x000095c5      4889f7         mov rdi, rsi
0x000095c8      4889f3         mov rbx, rsi
0x000095cb      4883ec08       sub rsp, 8
0x000095cf      e8ecfdffff     call sym.xmalloc
0x000095d4      4883c408       add rsp, 8
0x000095d8      4889da         mov rdx, rbx
0x000095db      4889ee         mov rsi, rbp
0x000095de      5b             pop rbx
0x000095df      5d             pop rbp
0x000095e0      4889c7         mov rdi, rax
0x000095e3      e9f886ffff     jmp sym.imp.memcpy
0x000095e8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000095f0      53             push rbx
0x000095f1      4889fb         mov rbx, rdi
0x000095f4      e88785ffff     call sym.imp.strlen
0x000095f9      4889df         mov rdi, rbx
0x000095fc      488d7001       lea rsi, [rax + 1]
0x00009600      5b             pop rbx
0x00009601      ebbd           jmp sym.xmemdup
0x00009603      662e0f1f8400.  nop word cs:[rax + rax]
0x0000960d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00009610      488d35985400.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xeaaf ; "memory exhausted"
0x00009617      4883ec08       sub rsp, 8
0x0000961b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00009620      31ff           xor edi, edi
0x00009622      e83985ffff     call sym.imp.dcgettext
0x00009627      8b3d037a2000   mov edi, dword [obj.exit_failure]       ; [0x211030:4]=1
0x0000962d      488d15383000.  lea rdx, [0x0000c66c]                   ; "%s"
0x00009634      4889c1         mov rcx, rax
0x00009637      31f6           xor esi, esi
0x00009639      31c0           xor eax, eax
0x0000963b      e85087ffff     call sym.imp.error
0x00009640      e82b84ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00009645      662e0f1f8400.  nop word cs:[rax + rax]
0x0000964f      90             nop
;-- xstrtoumax:
0x00009650      4157           push r15
0x00009652      4156           push r14
0x00009654      4155           push r13
0x00009656      4154           push r12
0x00009658      55             push rbp
0x00009659      53             push rbx
0x0000965a      4883ec28       sub rsp, 0x28
0x0000965e      64488b042528.  mov rax, qword fs:[0x28]
0x00009667      4889442418     mov qword [rsp + 0x18], rax
0x0000966c      31c0           xor eax, eax
0x0000966e      83fa24         cmp edx, 0x24
0x00009671      0f875e030000   ja 0x99d5
0x00009677      488d442410     lea rax, [rsp + 0x10]
0x0000967c      4989f7         mov r15, rsi
0x0000967f      4885f6         test rsi, rsi
0x00009682      4889fd         mov rbp, rdi
0x00009685      89542408       mov dword [rsp + 8], edx
0x00009689      4989ce         mov r14, rcx
0x0000968c      4d89c5         mov r13, r8
0x0000968f      4c0f44f8       cmove r15, rax
0x00009693      e8e883ffff     call sym.imp.__errno_location
0x00009698      c70000000000   mov dword [rax], 0
0x0000969e      4989c4         mov r12, rax
0x000096a1      0fb65d00       movzx ebx, byte [rbp]
0x000096a5      e8d687ffff     call sym.imp.__ctype_b_loc
0x000096aa      8b542408       mov edx, dword [rsp + 8]
0x000096ae      488b30         mov rsi, qword [rax]
0x000096b1      4889e8         mov rax, rbp
0x000096b4      eb11           jmp 0x96c7
0x000096b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000096c0      4883c001       add rax, 1
0x000096c4      0fb618         movzx ebx, byte [rax]
0x000096c7      0fb6cb         movzx ecx, bl
0x000096ca      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000096cf      75ef           jne 0x96c0
0x000096d1      80fb2d         cmp bl, 0x2d
0x000096d4      7452           je 0x9728
0x000096d6      31c9           xor ecx, ecx
0x000096d8      4c89fe         mov rsi, r15
0x000096db      4889ef         mov rdi, rbp
0x000096de      e84d85ffff     call sym.imp.__strtoul_internal
0x000096e3      498b0f         mov rcx, qword [r15]
0x000096e6      4889c3         mov rbx, rax
0x000096e9      4839e9         cmp rcx, rbp
0x000096ec      742a           je 0x9718
0x000096ee      418b0424       mov eax, dword [r12]
0x000096f2      85c0           test eax, eax
0x000096f4      7462           je 0x9758
0x000096f6      83f822         cmp eax, 0x22
0x000096f9      bd01000000     mov ebp, 1
0x000096fe      7528           jne 0x9728
0x00009700      4d85ed         test r13, r13
0x00009703      7409           je 0x970e
0x00009705      440fb621       movzx r12d, byte [rcx]
0x00009709      4584e4         test r12b, r12b
0x0000970c      7579           jne 0x9787
0x0000970e      49891e         mov qword [r14], rbx
0x00009711      eb1a           jmp 0x972d
0x00009713      0f1f440000     nop dword [rax + rax]
0x00009718      4d85ed         test r13, r13
0x0000971b      48894c2408     mov qword [rsp + 8], rcx
0x00009720      753e           jne 0x9760
0x00009722      660f1f440000   nop word [rax + rax]
0x00009728      bd04000000     mov ebp, 4
0x0000972d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00009732      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000973b      89e8           mov eax, ebp
0x0000973d      0f858d020000   jne 0x99d0
0x00009743      4883c428       add rsp, 0x28
0x00009747      5b             pop rbx
0x00009748      5d             pop rbp
0x00009749      415c           pop r12
0x0000974b      415d           pop r13
0x0000974d      415e           pop r14
0x0000974f      415f           pop r15
0x00009751      c3             ret
0x00009752      660f1f440000   nop word [rax + rax]
0x00009758      31ed           xor ebp, ebp
0x0000975a      eba4           jmp 0x9700
0x0000975c      0f1f4000       nop dword [rax]
0x00009760      440fb66500     movzx r12d, byte [rbp]
0x00009765      4584e4         test r12b, r12b
0x00009768      74be           je 0x9728
0x0000976a      410fbef4       movsx esi, r12b
0x0000976e      4c89ef         mov rdi, r13
0x00009771      31ed           xor ebp, ebp
0x00009773      e85884ffff     call sym.imp.strchr
0x00009778      4885c0         test rax, rax
0x0000977b      bb01000000     mov ebx, 1
0x00009780      488b4c2408     mov rcx, qword [rsp + 8]
0x00009785      74a1           je 0x9728
0x00009787      410fbef4       movsx esi, r12b
0x0000978b      4c89ef         mov rdi, r13
0x0000978e      48894c2408     mov qword [rsp + 8], rcx
0x00009793      e83884ffff     call sym.imp.strchr
0x00009798      4885c0         test rax, rax
0x0000979b      488b4c2408     mov rcx, qword [rsp + 8]
0x000097a0      0f84c6000000   je 0x986c
0x000097a6      418d4424bb     lea eax, [r12 - 0x45]
0x000097ab      3c2f           cmp al, 0x2f
0x000097ad      7751           ja 0x9800
0x000097af      48ba45893000.  movabs rdx, 0x814400308945
0x000097b9      480fa3c2       bt rdx, rax
0x000097bd      7341           jae 0x9800
0x000097bf      be30000000     mov esi, 0x30                           ; '0'
0x000097c4      4c89ef         mov rdi, r13
0x000097c7      48894c2408     mov qword [rsp + 8], rcx
0x000097cc      e8ff83ffff     call sym.imp.strchr
0x000097d1      4885c0         test rax, rax
0x000097d4      488b4c2408     mov rcx, qword [rsp + 8]
0x000097d9      7425           je 0x9800
0x000097db      0fb64101       movzx eax, byte [rcx + 1]
0x000097df      3c44           cmp al, 0x44
0x000097e1      740c           je 0x97ef
0x000097e3      3c69           cmp al, 0x69
0x000097e5      0f84cd010000   je 0x99b8
0x000097eb      3c42           cmp al, 0x42
0x000097ed      7511           jne 0x9800
0x000097ef      bf02000000     mov edi, 2
0x000097f4      bee8030000     mov esi, 0x3e8
0x000097f9      eb0f           jmp 0x980a
0x000097fb      0f1f440000     nop dword [rax + rax]
0x00009800      bf01000000     mov edi, 1
0x00009805      be00040000     mov esi, 0x400
0x0000980a      4183ec42       sub r12d, 0x42
0x0000980e      4180fc35       cmp r12b, 0x35
0x00009812      7758           ja 0x986c
0x00009814      488d15ed5200.  lea rdx, [0x0000eb08]
0x0000981b      450fb6e4       movzx r12d, r12b
0x0000981f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009823      4801d0         add rax, rdx
0x00009826      ffe0           jmp rax
0x00009828      4889d8         mov rax, rbx
0x0000982b      48f7e6         mul rsi
0x0000982e      0f80ed010000   jo 0x9a21
0x00009834      4531c0         xor r8d, r8d
0x00009837      48f7e6         mul rsi
0x0000983a      0f80d2010000   jo 0x9a12
0x00009840      4889c3         mov rbx, rax
0x00009843      4409c5         or ebp, r8d
0x00009846      662e0f1f8400.  nop word cs:[rax + rax]
0x00009850      4863ff         movsxd rdi, edi
0x00009853      89e8           mov eax, ebp
0x00009855      4801f9         add rcx, rdi
0x00009858      83c802         or eax, 2
0x0000985b      49890f         mov qword [r15], rcx
0x0000985e      803900         cmp byte [rcx], 0
0x00009861      49891e         mov qword [r14], rbx
0x00009864      0f45e8         cmovne ebp, eax
0x00009867      e9c1feffff     jmp 0x972d
0x0000986c      49891e         mov qword [r14], rbx
0x0000986f      83cd02         or ebp, 2
0x00009872      e9b6feffff     jmp 0x972d
0x00009877      ba02000000     mov edx, 2
0x0000987c      4889d0         mov rax, rdx
0x0000987f      48f7e3         mul rbx
0x00009882      0f8096000000   jo 0x991e
0x00009888      4801db         add rbx, rbx
0x0000988b      ebc3           jmp 0x9850
0x0000988d      ba00020000     mov edx, 0x200
0x00009892      4889d0         mov rax, rdx
0x00009895      48f7e3         mul rbx
0x00009898      0f8080000000   jo 0x991e
0x0000989e      48c1e309       shl rbx, 9
0x000098a2      ebac           jmp 0x9850
0x000098a4      41b807000000   mov r8d, 7
0x000098aa      4531c9         xor r9d, r9d
0x000098ad      0f1f00         nop dword [rax]
0x000098b0      4889d8         mov rax, rbx
0x000098b3      48f7e6         mul rsi
0x000098b6      4889c3         mov rbx, rax
0x000098b9      0f808f010000   jo 0x9a4e
0x000098bf      4183e801       sub r8d, 1
0x000098c3      75eb           jne 0x98b0
0x000098c5      4409cd         or ebp, r9d
0x000098c8      eb86           jmp 0x9850
0x000098ca      41b808000000   mov r8d, 8
0x000098d0      4531c9         xor r9d, r9d
0x000098d3      0f1f440000     nop dword [rax + rax]
0x000098d8      4889d8         mov rax, rbx
0x000098db      48f7e6         mul rsi
0x000098de      4889c3         mov rbx, rax
0x000098e1      0f8049010000   jo 0x9a30
0x000098e7      4183e801       sub r8d, 1
0x000098eb      75eb           jne 0x98d8
0x000098ed      ebd6           jmp 0x98c5
0x000098ef      41b804000000   mov r8d, 4
0x000098f5      4531c9         xor r9d, r9d
0x000098f8      4889d8         mov rax, rbx
0x000098fb      48f7e6         mul rsi
0x000098fe      4889c3         mov rbx, rax
0x00009901      0f80fc000000   jo 0x9a03
0x00009907      4183e801       sub r8d, 1
0x0000990b      75eb           jne 0x98f8
0x0000990d      ebb6           jmp 0x98c5
0x0000990f      4889d8         mov rax, rbx
0x00009912      48f7e6         mul rsi
0x00009915      4889c3         mov rbx, rax
0x00009918      0f8132ffffff   jno 0x9850
0x0000991e      bd01000000     mov ebp, 1
0x00009923      4883cbff       or rbx, 0xffffffffffffffff
0x00009927      e924ffffff     jmp 0x9850
0x0000992c      0f1f4000       nop dword [rax]
0x00009930      41b805000000   mov r8d, 5
0x00009936      4531c9         xor r9d, r9d
0x00009939      4889d8         mov rax, rbx
0x0000993c      48f7e6         mul rsi
0x0000993f      4889c3         mov rbx, rax
0x00009942      0f80f7000000   jo 0x9a3f
0x00009948      4183e801       sub r8d, 1
0x0000994c      75eb           jne 0x9939
0x0000994e      e972ffffff     jmp 0x98c5
0x00009953      41b806000000   mov r8d, 6
0x00009959      4531c9         xor r9d, r9d
0x0000995c      4889d8         mov rax, rbx
0x0000995f      48f7e6         mul rsi
0x00009962      4889c3         mov rbx, rax
0x00009965      0f8089000000   jo 0x99f4
0x0000996b      4183e801       sub r8d, 1
0x0000996f      75eb           jne 0x995c
0x00009971      e94fffffff     jmp 0x98c5
0x00009976      ba00040000     mov edx, 0x400
0x0000997b      4889d0         mov rax, rdx
0x0000997e      48f7e3         mul rbx
0x00009981      709b           jo 0x991e
0x00009983      48c1e30a       shl rbx, 0xa
0x00009987      e9c4feffff     jmp 0x9850
0x0000998c      4889d8         mov rax, rbx
0x0000998f      48f7e6         mul rsi
0x00009992      0f80c5000000   jo 0x9a5d
0x00009998      4531c0         xor r8d, r8d
0x0000999b      48f7e6         mul rsi
0x0000999e      0f8193feffff   jno 0x9837
0x000099a4      41b801000000   mov r8d, 1
0x000099aa      4883c8ff       or rax, 0xffffffffffffffff
0x000099ae      e984feffff     jmp 0x9837
0x000099b3      0f1f440000     nop dword [rax + rax]
0x000099b8      31ff           xor edi, edi
0x000099ba      80790242       cmp byte [rcx + 2], 0x42
0x000099be      be00040000     mov esi, 0x400
0x000099c3      400f94c7       sete dil
0x000099c7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000099cb      e93afeffff     jmp 0x980a
0x000099d0      e8bb81ffff     call sym.imp.__stack_chk_fail
0x000099d5      488d0d045200.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xebe0 ; "xstrtoumax"
0x000099dc      488d35dd5000.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xeac0 ; "../coreutils-8.31/lib/xstrtol.c"
0x000099e3      488d3df65000.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xeae0 ; "0 <= strtol_base && strtol_base <= 36"
0x000099ea      ba54000000     mov edx, 0x54                           ; 'T'
0x000099ef      e82c82ffff     call sym.imp.__assert_fail
0x000099f4      41b901000000   mov r9d, 1
0x000099fa      4883cbff       or rbx, 0xffffffffffffffff
0x000099fe      e968ffffff     jmp 0x996b
0x00009a03      41b901000000   mov r9d, 1
0x00009a09      4883cbff       or rbx, 0xffffffffffffffff
0x00009a0d      e9f5feffff     jmp 0x9907
0x00009a12      41b801000000   mov r8d, 1
0x00009a18      4883cbff       or rbx, 0xffffffffffffffff
0x00009a1c      e922feffff     jmp 0x9843
0x00009a21      4883c8ff       or rax, 0xffffffffffffffff
0x00009a25      41b801000000   mov r8d, 1
0x00009a2b      e907feffff     jmp 0x9837
0x00009a30      41b901000000   mov r9d, 1
0x00009a36      4883cbff       or rbx, 0xffffffffffffffff
0x00009a3a      e9a8feffff     jmp 0x98e7
0x00009a3f      41b901000000   mov r9d, 1
0x00009a45      4883cbff       or rbx, 0xffffffffffffffff
0x00009a49      e9fafeffff     jmp 0x9948
0x00009a4e      41b901000000   mov r9d, 1
0x00009a54      4883cbff       or rbx, 0xffffffffffffffff
0x00009a58      e962feffff     jmp 0x98bf
0x00009a5d      41b801000000   mov r8d, 1
0x00009a63      4883c8ff       or rax, 0xffffffffffffffff
0x00009a67      e92fffffff     jmp 0x999b
0x00009a6c      0f1f4000       nop dword [rax]
;-- xstrcat:
0x00009a70      4157           push r15                                ; ../coreutils-8.31/lib/xvasprintf.c:34
0x00009a72      4156           push r14
0x00009a74      4155           push r13
0x00009a76      4154           push r12
0x00009a78      55             push rbp
0x00009a79      53             push rbx
0x00009a7a      4883ec28       sub rsp, 0x28
0x00009a7e      64488b042528.  mov rax, qword fs:[0x28]
0x00009a87      4889442418     mov qword [rsp + 0x18], rax
0x00009a8c      31c0           xor eax, eax
0x00009a8e      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00009a91      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/xvasprintf.c:43
0x00009a95      0f110424       movups xmmword [rsp], xmm0
0x00009a99      4c8b7610       mov r14, qword [rsi + 0x10]
0x00009a9d      4c89742410     mov qword [rsp + 0x10], r14
0x00009aa2      0f84a8000000   je 0x9b50                               ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00009aa8      4989fc         mov r12, rdi
0x00009aab      4989f7         mov r15, rsi
0x00009aae      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00009ab1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/xvasprintf.c:42
0x00009ab3      49c7c5ffffff.  mov r13, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00009aba      8b1424         mov edx, dword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00009abd      83fa2f         cmp edx, 0x2f
0x00009ac0      0f87da000000   ja 0x9ba0
0x00009ac6      89d0           mov eax, edx
0x00009ac8      83c208         add edx, 8
0x00009acb      4c01f0         add rax, r14
0x00009ace      891424         mov dword [rsp], edx
0x00009ad1      488b38         mov rdi, qword [rax]                    ; ../coreutils-8.31/lib/xvasprintf.c:47
0x00009ad4      e8a780ffff     call sym.imp.strlen
0x00009ad9      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/xsize.h:66
0x00009adc      490f42dd       cmovb rbx, r13
0x00009ae0      4883ed01       sub rbp, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00009ae4      75d4           jne 0x9aba
0x00009ae6      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/xvasprintf.c:54
0x00009aed      0f879d000000   ja 0x9b90
0x00009af3      488d7b01       lea rdi, [rbx + 1]                      ; ../coreutils-8.31/lib/xvasprintf.c:61
0x00009af7      e8c4f8ffff     call sym.xmalloc
0x00009afc      4989c6         mov r14, rax
0x00009aff      4889c3         mov rbx, rax
0x00009b02      eb31           jmp 0x9b35
0x00009b04      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/xvasprintf.c:65
0x00009b06      49034710       add rax, qword [r15 + 0x10]
0x00009b0a      83c208         add edx, 8
0x00009b0d      418917         mov dword [r15], edx
0x00009b10      4c8b28         mov r13, qword [rax]
0x00009b13      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x00009b16      e86580ffff     call sym.imp.strlen
0x00009b1b      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00009b1e      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x00009b21      4889c2         mov rdx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00009b24      4c89ee         mov rsi, r13
0x00009b27      4801eb         add rbx, rbp                            ; ../coreutils-8.31/lib/xvasprintf.c:68
0x00009b2a      e8b181ffff     call sym.imp.memcpy                     ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00009b2f      4983ec01       sub r12, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:63
0x00009b33      742b           je 0x9b60
0x00009b35      418b17         mov edx, dword [r15]                    ; ../coreutils-8.31/lib/xvasprintf.c:65
0x00009b38      83fa2f         cmp edx, 0x2f
0x00009b3b      76c7           jbe 0x9b04
0x00009b3d      498b4708       mov rax, qword [r15 + 8]
0x00009b41      488d5008       lea rdx, [rax + 8]
0x00009b45      49895708       mov qword [r15 + 8], rdx
0x00009b49      ebc5           jmp 0x9b10
0x00009b4b      0f1f440000     nop dword [rax + rax]
0x00009b50      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:61
0x00009b55      e866f8ffff     call sym.xmalloc
0x00009b5a      4889c3         mov rbx, rax
0x00009b5d      4989c6         mov r14, rax
0x00009b60      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/xvasprintf.c:70
0x00009b63      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xvasprintf.c:73
0x00009b68      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009b71      4c89f0         mov rax, r14
0x00009b74      750f           jne 0x9b85
0x00009b76      4883c428       add rsp, 0x28
0x00009b7a      5b             pop rbx
0x00009b7b      5d             pop rbp
0x00009b7c      415c           pop r12
0x00009b7e      415d           pop r13
0x00009b80      415e           pop r14
0x00009b82      415f           pop r15
0x00009b84      c3             ret
0x00009b85      e80680ffff     call sym.imp.__stack_chk_fail
0x00009b8a      660f1f440000   nop word [rax + rax]
0x00009b90      e8eb7effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:56
0x00009b95      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00009b98      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xvasprintf.c:56 ; 'K'
                                                                       ; [0x4b:4]=0
0x00009b9e      ebc3           jmp 0x9b63                              ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00009ba0      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00009ba5      488d5008       lea rdx, [rax + 8]
0x00009ba9      4889542408     mov qword [rsp + 8], rdx
0x00009bae      e91effffff     jmp 0x9ad1
0x00009bb3      0f1f00         nop dword [rax]
0x00009bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xvasprintf:
0x00009bc0      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/xvasprintf.c:77
0x00009bc4      64488b042528.  mov rax, qword fs:[0x28]
0x00009bcd      4889442408     mov qword [rsp + 8], rax
0x00009bd2      31c0           xor eax, eax
0x00009bd4      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/xvasprintf.c:89
0x00009bd7      84c0           test al, al
0x00009bd9      747b           je 0x9c56
0x00009bdb      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x00009bdd      4989f8         mov r8, rdi
0x00009be0      7536           jne 0x9c18
0x00009be2      807f0173       cmp byte [rdi + 1], 0x73                ; ../coreutils-8.31/lib/xvasprintf.c:95
0x00009be6      7530           jne 0x9c18
0x00009be8      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x00009bea      eb11           jmp 0x9bfd
0x00009bec      0f1f4000       nop dword [rax]
0x00009bf0      80f925         cmp cl, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x00009bf3      7523           jne 0x9c18
0x00009bf5      41807c780173   cmp byte [r8 + rdi*2 + 1], 0x73         ; ../coreutils-8.31/lib/xvasprintf.c:95
0x00009bfb      751b           jne 0x9c18
0x00009bfd      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:98
0x00009c01      410fb60c78     movzx ecx, byte [r8 + rdi*2]            ; ../coreutils-8.31/lib/xvasprintf.c:89
0x00009c06      84c9           test cl, cl
0x00009c08      75e6           jne 0x9bf0
0x00009c0a      e861feffff     call sym.xstrcat                        ; ../coreutils-8.31/lib/xvasprintf.c:91
0x00009c0f      eb1d           jmp 0x9c2e
0x00009c11      0f1f80000000.  nop dword [rax]
0x00009c18      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/xvasprintf.c:102
0x00009c1b      4889e7         mov rdi, rsp
0x00009c1e      4c89c6         mov rsi, r8
0x00009c21      e87a040000     call sym.rpl_vasprintf
0x00009c26      85c0           test eax, eax
0x00009c28      781e           js 0x9c48
0x00009c2a      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:109
0x00009c2e      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:110
0x00009c33      644833142528.  xor rdx, qword fs:[0x28]
0x00009c3c      751c           jne 0x9c5a
0x00009c3e      4883c418       add rsp, 0x18
0x00009c42      c3             ret
0x00009c43      0f1f440000     nop dword [rax + rax]
0x00009c48      e8337effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:104
0x00009c4d      83380c         cmp dword [rax], 0xc
0x00009c50      740d           je 0x9c5f
0x00009c52      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xvasprintf.c:106
0x00009c54      ebd8           jmp 0x9c2e
0x00009c56      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x00009c58      ebb0           jmp 0x9c0a
0x00009c5a      e8317fffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xvasprintf.c:110
0x00009c5f      e8acf9ffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xvasprintf.c:105
0x00009c64      662e0f1f8400.  nop word cs:[rax + rax]
0x00009c6e      6690           nop
;-- rpl_fclose:
0x00009c70      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00009c72      55             push rbp
0x00009c73      53             push rbx
0x00009c74      4889fb         mov rbx, rdi
0x00009c77      e87480ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00009c7c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00009c7e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00009c81      7854           js 0x9cd7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00009c83      e8b880ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00009c88      85c0           test eax, eax
0x00009c8a      752c           jne 0x9cb8
0x00009c8c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00009c8f      e8dc020000     call sym.rpl_fflush
0x00009c94      85c0           test eax, eax
0x00009c96      743c           je 0x9cd4
0x00009c98      e8e37dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00009c9d      448b20         mov r12d, dword [rax]
0x00009ca0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009ca3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00009ca6      e8957effff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00009cab      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00009cae      7530           jne 0x9ce0
0x00009cb0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009cb1      5d             pop rbp
0x00009cb2      415c           pop r12
0x00009cb4      c3             ret
0x00009cb5      0f1f00         nop dword [rax]
0x00009cb8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00009cbb      e83080ffff     call sym.imp.fileno
0x00009cc0      31f6           xor esi, esi
0x00009cc2      ba01000000     mov edx, 1
0x00009cc7      89c7           mov edi, eax
0x00009cc9      e8427fffff     call sym.imp.lseek
0x00009cce      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009cd2      75b8           jne 0x9c8c
0x00009cd4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009cd7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009cd8      5d             pop rbp
0x00009cd9      415c           pop r12
0x00009cdb      e9607effff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00009ce0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00009ce4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00009ce9      ebc5           jmp 0x9cb0
0x00009ceb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00009cf0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00009cf2      55             push rbp
0x00009cf3      89fd           mov ebp, edi
0x00009cf5      53             push rbx
0x00009cf6      4883ec50       sub rsp, 0x50
0x00009cfa      64488b042528.  mov rax, qword fs:[0x28]
0x00009d03      4889442418     mov qword [rsp + 0x18], rax
0x00009d08      31c0           xor eax, eax
0x00009d0a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00009d0f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00009d11      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00009d16      48894c2438     mov qword [rsp + 0x38], rcx
0x00009d1b      4c89442440     mov qword [rsp + 0x40], r8
0x00009d20      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00009d25      488d442420     lea rax, [rsp + 0x20]
0x00009d2a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00009d2f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00009d36      4889442410     mov qword [rsp + 0x10], rax
0x00009d3b      0f8401020000   je 0x9f42                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00009d41      81fe06040000   cmp esi, 0x406
0x00009d47      7547           jne 0x9d90
0x00009d49      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00009d4e      833d03782000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x211558:4]=0
0x00009d55      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3c80 rip
0x00009d5c      448b6010       mov r12d, dword [rax + 0x10]
0x00009d60      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00009d63      0f882a010000   js 0x9e93                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00009d69      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00009d6b      be06040000     mov esi, 0x406
0x00009d70      e88b7dffff     call sym.imp.fcntl
0x00009d75      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00009d77      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00009d79      0f8889010000   js 0x9f08                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00009d7f      c705cf772000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x211558:4]=0
0x00009d89      eb45           jmp 0x9dd0
0x00009d8b      0f1f440000     nop dword [rax + rax]
0x00009d90      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00009d93      742b           je 0x9dc0
0x00009d95      7f59           jg 0x9df0
0x00009d97      83fe04         cmp esi, 4
0x00009d9a      0f84d0000000   je 0x9e70
0x00009da0      0f8fba000000   jg 0x9e60
0x00009da6      83fe02         cmp esi, 2
0x00009da9      0f84c1000000   je 0x9e70
0x00009daf      7f0f           jg 0x9dc0
0x00009db1      83fe01         cmp esi, 1
0x00009db4      7562           jne 0x9e18
0x00009db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009dc0      89ef           mov edi, ebp
0x00009dc2      31c0           xor eax, eax
0x00009dc4      e8377dffff     call sym.imp.fcntl
0x00009dc9      89c3           mov ebx, eax
0x00009dcb      0f1f440000     nop dword [rax + rax]
0x00009dd0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009dd5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009dde      89d8           mov eax, ebx
0x00009de0      0f8557010000   jne 0x9f3d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00009de6      4883c450       add rsp, 0x50
0x00009dea      5b             pop rbx
0x00009deb      5d             pop rbp
0x00009dec      415c           pop r12
0x00009dee      c3             ret
0x00009def      90             nop
0x00009df0      81fe07040000   cmp esi, 0x407
0x00009df6      7f48           jg 0x9e40
0x00009df8      81fe06040000   cmp esi, 0x406
0x00009dfe      7d70           jge 0x9e70
0x00009e00      81fe01040000   cmp esi, 0x401
0x00009e06      74b8           je 0x9dc0
0x00009e08      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00009e0e      7460           je 0x9e70
0x00009e10      81fe00040000   cmp esi, 0x400
0x00009e16      7458           je 0x9e70
0x00009e18      8b0424         mov eax, dword [rsp]
0x00009e1b      83f82f         cmp eax, 0x2f
0x00009e1e      0f8736010000   ja 0x9f5a
0x00009e24      4803442410     add rax, qword [rsp + 0x10]
0x00009e29      488b10         mov rdx, qword [rax]
0x00009e2c      89ef           mov edi, ebp
0x00009e2e      31c0           xor eax, eax
0x00009e30      e8cb7cffff     call sym.imp.fcntl
0x00009e35      89c3           mov ebx, eax
0x00009e37      eb97           jmp 0x9dd0
0x00009e39      0f1f80000000.  nop dword [rax]
0x00009e40      81fe09040000   cmp esi, 0x409
0x00009e46      7428           je 0x9e70
0x00009e48      0f8c72ffffff   jl 0x9dc0
0x00009e4e      81fe0a040000   cmp esi, 0x40a
0x00009e54      75c2           jne 0x9e18
0x00009e56      e965ffffff     jmp 0x9dc0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00009e5b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00009e60      83fe09         cmp esi, 9
0x00009e63      0f8457ffffff   je 0x9dc0
0x00009e69      7f05           jg 0x9e70
0x00009e6b      83fe08         cmp esi, 8
0x00009e6e      75a8           jne 0x9e18
0x00009e70      8b0424         mov eax, dword [rsp]
0x00009e73      83f82f         cmp eax, 0x2f
0x00009e76      0f87e8000000   ja 0x9f64
0x00009e7c      4803442410     add rax, qword [rsp + 0x10]
0x00009e81      8b10           mov edx, dword [rax]
0x00009e83      89ef           mov edi, ebp
0x00009e85      31c0           xor eax, eax
0x00009e87      e8747cffff     call sym.imp.fcntl
0x00009e8c      89c3           mov ebx, eax
0x00009e8e      e93dffffff     jmp 0x9dd0
0x00009e93      31f6           xor esi, esi
0x00009e95      31c0           xor eax, eax
0x00009e97      e8647cffff     call sym.imp.fcntl
0x00009e9c      85c0           test eax, eax
0x00009e9e      89c3           mov ebx, eax
0x00009ea0      0f882affffff   js 0x9dd0
0x00009ea6      833dab762000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211558:4]=0
0x00009ead      0f851dffffff   jne 0x9dd0
0x00009eb3      31c0           xor eax, eax
0x00009eb5      be01000000     mov esi, 1
0x00009eba      89df           mov edi, ebx
0x00009ebc      e83f7cffff     call sym.imp.fcntl
0x00009ec1      85c0           test eax, eax
0x00009ec3      781c           js 0x9ee1
0x00009ec5      83c801         or eax, 1
0x00009ec8      be02000000     mov esi, 2
0x00009ecd      89df           mov edi, ebx
0x00009ecf      89c2           mov edx, eax
0x00009ed1      31c0           xor eax, eax
0x00009ed3      e8287cffff     call sym.imp.fcntl
0x00009ed8      83f8ff         cmp eax, 0xffffffff
0x00009edb      0f85effeffff   jne 0x9dd0
0x00009ee1      e89a7bffff     call sym.imp.__errno_location
0x00009ee6      448b20         mov r12d, dword [rax]
0x00009ee9      4889c5         mov rbp, rax
0x00009eec      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00009eee      e86d7dffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00009ef3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009ef8      44896500       mov dword [rbp], r12d
0x00009efc      e9cffeffff     jmp 0x9dd0
0x00009f01      0f1f80000000.  nop dword [rax]
0x00009f08      e8737bffff     call sym.imp.__errno_location
0x00009f0d      833816         cmp dword [rax], 0x16
0x00009f10      0f8569feffff   jne 0x9d7f
0x00009f16      31f6           xor esi, esi
0x00009f18      31c0           xor eax, eax
0x00009f1a      4489e2         mov edx, r12d
0x00009f1d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00009f1f      e8dc7bffff     call sym.imp.fcntl
0x00009f24      85c0           test eax, eax
0x00009f26      89c3           mov ebx, eax
0x00009f28      0f88a2feffff   js 0x9dd0
0x00009f2e      c70520762000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x211558:4]=0
0x00009f38      e976ffffff     jmp 0x9eb3
0x00009f3d      e84e7cffff     call sym.imp.__stack_chk_fail
0x00009f42      488b442410     mov rax, qword [rsp + 0x10]
0x00009f47      31f6           xor esi, esi
0x00009f49      8b5010         mov edx, dword [rax + 0x10]
0x00009f4c      31c0           xor eax, eax
0x00009f4e      e8ad7bffff     call sym.imp.fcntl
0x00009f53      89c3           mov ebx, eax
0x00009f55      e976feffff     jmp 0x9dd0
0x00009f5a      488b442408     mov rax, qword [rsp + 8]
0x00009f5f      e9c5feffff     jmp 0x9e29
0x00009f64      488b442408     mov rax, qword [rsp + 8]
0x00009f69      e913ffffff     jmp 0x9e81
0x00009f6e      6690           nop
;-- rpl_fflush:
0x00009f70      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009f73      53             push rbx
0x00009f74      4889fb         mov rbx, rdi
0x00009f77      7411           je 0x9f8a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009f79      e8c27dffff     call sym.imp.__freading
0x00009f7e      85c0           test eax, eax
0x00009f80      7408           je 0x9f8a
0x00009f82      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00009f88      750e           jne 0x9f98
0x00009f8a      4889df         mov rdi, rbx
0x00009f8d      5b             pop rbx
0x00009f8e      e97d7dffff     jmp sym.imp.fflush
0x00009f93      0f1f440000     nop dword [rax + rax]
0x00009f98      4889df         mov rdi, rbx
0x00009f9b      ba01000000     mov edx, 1
0x00009fa0      31f6           xor esi, esi
0x00009fa2      e809000000     call sym.rpl_fseeko
0x00009fa7      4889df         mov rdi, rbx
0x00009faa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00009fab      e9607dffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00009fb0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00009fb4      48394710       cmp qword [rdi + 0x10], rax
0x00009fb8      7406           je 0x9fc0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00009fba      e9017effff     jmp sym.imp.fseeko
0x00009fbf      90             nop
0x00009fc0      488b4720       mov rax, qword [rdi + 0x20]
0x00009fc4      48394728       cmp qword [rdi + 0x28], rax
0x00009fc8      75f0           jne 0x9fba                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00009fca      48837f4800     cmp qword [rdi + 0x48], 0
0x00009fcf      75e9           jne 0x9fba                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00009fd1      4154           push r12
0x00009fd3      55             push rbp
0x00009fd4      4189d4         mov r12d, edx
0x00009fd7      53             push rbx
0x00009fd8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00009fdb      4889fb         mov rbx, rdi
0x00009fde      e80d7dffff     call sym.imp.fileno
0x00009fe3      4489e2         mov edx, r12d
0x00009fe6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009fe9      89c7           mov edi, eax
0x00009feb      e8207cffff     call sym.imp.lseek
0x00009ff0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009ff4      740c           je 0xa002
0x00009ff6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009ff9      488983900000.  mov qword [rbx + 0x90], rax
0x0000a000      31c0           xor eax, eax
0x0000a002      5b             pop rbx
0x0000a003      5d             pop rbp
0x0000a004      415c           pop r12
0x0000a006      c3             ret
0x0000a007      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x0000a010      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000a012      4154           push r12
0x0000a014      4989f5         mov r13, rsi
0x0000a017      55             push rbp
0x0000a018      53             push rbx
0x0000a019      4889fb         mov rbx, rdi
0x0000a01c      4989d4         mov r12, rdx
0x0000a01f      4883ec18       sub rsp, 0x18
0x0000a023      64488b042528.  mov rax, qword fs:[0x28]
0x0000a02c      4889442408     mov qword [rsp + 8], rax
0x0000a031      31c0           xor eax, eax
0x0000a033      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000a038      4885ff         test rdi, rdi
0x0000a03b      480f44d8       cmove rbx, rax
0x0000a03f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a042      e8697bffff     call sym.imp.mbrtowc
0x0000a047      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a04b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a04e      7620           jbe 0xa070                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a050      4d85e4         test r12, r12
0x0000a053      741b           je 0xa070
0x0000a055      31ff           xor edi, edi
0x0000a057      e854040000     call sym.hard_locale
0x0000a05c      84c0           test al, al
0x0000a05e      7510           jne 0xa070
0x0000a060      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a065      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000a06a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a06c      0f1f4000       nop dword [rax]
0x0000a070      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000a075      644833142528.  xor rdx, qword fs:[0x28]
0x0000a07e      4889e8         mov rax, rbp
0x0000a081      750b           jne 0xa08e
0x0000a083      4883c418       add rsp, 0x18
0x0000a087      5b             pop rbx
0x0000a088      5d             pop rbp
0x0000a089      415c           pop r12
0x0000a08b      415d           pop r13
0x0000a08d      c3             ret
0x0000a08e      e8fd7affff     call sym.imp.__stack_chk_fail
0x0000a093      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a09d      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x0000a0a0      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x0000a0a1      4889f0         mov rax, rsi
0x0000a0a4      4889fb         mov rbx, rdi
0x0000a0a7      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x0000a0a9      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x0000a0ad      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000a0b6      48894c2408     mov qword [rsp + 8], rcx
0x0000a0bb      31c9           xor ecx, ecx
0x0000a0bd      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x0000a0c0      4889d1         mov rcx, rdx
0x0000a0c3      4889c2         mov rdx, rax
0x0000a0c6      e885040000     call sym.vasnprintf
0x0000a0cb      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x0000a0ce      7442           je 0xa112
0x0000a0d0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x0000a0d4      4881faffffff.  cmp rdx, 0x7fffffff
0x0000a0db      771b           ja 0xa0f8
0x0000a0dd      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x0000a0e0      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x0000a0e2      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000a0e7      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a0f0      7527           jne 0xa119
0x0000a0f2      4883c410       add rsp, 0x10
0x0000a0f6      5b             pop rbx
0x0000a0f7      c3             ret
0x0000a0f8      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x0000a0fb      e86079ffff     call sym.imp.free
0x0000a100      e87b79ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x0000a105      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000a10b      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x0000a110      ebd0           jmp 0xa0e2
0x0000a112      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x0000a117      ebc9           jmp 0xa0e2
0x0000a119      e8727affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000a11e      6690           nop
;-- __argmatch_die:
0x0000a120      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x0000a125      e906afffff     jmp sym.usage
0x0000a12a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x0000a130      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x0000a132      4156           push r14
0x0000a134      4989f7         mov r15, rsi
0x0000a137      4155           push r13
0x0000a139      4154           push r12
0x0000a13b      4989cd         mov r13, rcx
0x0000a13e      55             push rbp
0x0000a13f      53             push rbx
0x0000a140      4889d5         mov rbp, rdx
0x0000a143      4883ec28       sub rsp, 0x28
0x0000a147      48897c2408     mov qword [rsp + 8], rdi
0x0000a14c      4889542418     mov qword [rsp + 0x18], rdx
0x0000a151      e82a7affff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x0000a156      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a159      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x0000a161      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a164      0f84b3000000   je 0xa21d
0x0000a16a      4989c4         mov r12, rax
0x0000a16d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x0000a172      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a174      eb51           jmp 0xa1c7
0x0000a176      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a180      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x0000a185      4885c0         test rax, rax
0x0000a188      0f84a2000000   je 0xa230
0x0000a18e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x0000a192      4c89ea         mov rdx, r13
0x0000a195      4889ee         mov rsi, rbp
0x0000a198      490faffd       imul rdi, r13
0x0000a19c      4801c7         add rdi, rax
0x0000a19f      e8ec7affff     call sym.imp.memcmp
0x0000a1a4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x0000a1a6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000a1ab      b901000000     mov ecx, 1
0x0000a1b0      0f45c1         cmovne eax, ecx
0x0000a1b3      88442417       mov byte [rsp + 0x17], al
0x0000a1b7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a1bb      4c01ed         add rbp, r13
0x0000a1be      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000a1c2      4d85f6         test r14, r14
0x0000a1c5      7441           je 0xa208
0x0000a1c7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000a1cc      4c89e2         mov rdx, r12
0x0000a1cf      4c89f7         mov rdi, r14
0x0000a1d2      e8d978ffff     call sym.imp.strncmp
0x0000a1d7      85c0           test eax, eax
0x0000a1d9      75dc           jne 0xa1b7
0x0000a1db      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000a1de      e89d79ffff     call sym.imp.strlen
0x0000a1e3      4c39e0         cmp rax, r12
0x0000a1e6      7458           je 0xa240
0x0000a1e8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000a1ed      7591           jne 0xa180
0x0000a1ef      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x0000a1f3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000a1f7      4c01ed         add rbp, r13
0x0000a1fa      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000a1fe      4d85f6         test r14, r14
0x0000a201      75c4           jne 0xa1c7
0x0000a203      0f1f440000     nop dword [rax + rax]
0x0000a208      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000a20d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000a214      480f440424     cmove rax, qword [rsp]
0x0000a219      48890424       mov qword [rsp], rax
0x0000a21d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x0000a221      4883c428       add rsp, 0x28
0x0000a225      5b             pop rbx
0x0000a226      5d             pop rbp
0x0000a227      415c           pop r12
0x0000a229      415d           pop r13
0x0000a22b      415e           pop r14
0x0000a22d      415f           pop r15
0x0000a22f      c3             ret
0x0000a230      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x0000a235      eb80           jmp 0xa1b7
0x0000a237      660f1f840000.  nop word [rax + rax]
0x0000a240      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x0000a244      ebd7           jmp 0xa21d
0x0000a246      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x0000a250      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x0000a254      4154           push r12
0x0000a256      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000a25b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000a25c      4989f4         mov r12, rsi
0x0000a25f      53             push rbx
0x0000a260      4889fd         mov rbp, rdi
0x0000a263      744b           je 0xa2b0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x0000a265      488d359a4900.  lea rsi, str.ambiguous_argument__s_for__s ; 0xec06 ; "ambiguous argument %s for %s"
0x0000a26c      31ff           xor edi, edi
0x0000a26e      e8ed78ffff     call sym.imp.dcgettext
0x0000a273      4889c3         mov rbx, rax
0x0000a276      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000a279      bf01000000     mov edi, 1
0x0000a27e      e80deaffff     call sym.quote_n
0x0000a283      4c89e2         mov rdx, r12
0x0000a286      4889c5         mov rbp, rax
0x0000a289      be08000000     mov esi, 8
0x0000a28e      31ff           xor edi, edi
0x0000a290      e82be6ffff     call sym.quotearg_n_style
0x0000a295      4989e8         mov r8, rbp
0x0000a298      4889da         mov rdx, rbx
0x0000a29b      4889c1         mov rcx, rax
0x0000a29e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000a29f      5d             pop rbp
0x0000a2a0      415c           pop r12
0x0000a2a2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000a2a4      31ff           xor edi, edi
0x0000a2a6      31c0           xor eax, eax
0x0000a2a8      e9e37affff     jmp sym.imp.error
0x0000a2ad      0f1f00         nop dword [rax]
0x0000a2b0      488d35344900.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xebeb ; "invalid argument %s for %s"
0x0000a2b7      31ff           xor edi, edi
0x0000a2b9      e8a278ffff     call sym.imp.dcgettext
0x0000a2be      4889c3         mov rbx, rax
0x0000a2c1      ebb3           jmp 0xa276
0x0000a2c3      0f1f00         nop dword [rax]
0x0000a2c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x0000a2d0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a2d2      4156           push r14
0x0000a2d4      4989fe         mov r14, rdi
0x0000a2d7      4155           push r13
0x0000a2d9      4154           push r12
0x0000a2db      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000a2dd      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a2de      53             push rbx
0x0000a2df      4889f5         mov rbp, rsi
0x0000a2e2      488d353a4900.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xec23 ; "Valid arguments are:"
0x0000a2e9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a2ec      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x0000a2f1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x0000a2f5      488b1d046e20.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000a2fc      e85f78ffff     call sym.imp.dcgettext
0x0000a301      4889c7         mov rdi, rax
0x0000a304      4889de         mov rsi, rbx
0x0000a307      e89479ffff     call sym.imp.fputs_unlocked
0x0000a30c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a30f      4d85ff         test r15, r15
0x0000a312      0f8490000000   je 0xa3a8
0x0000a318      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000a31b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a31d      eb39           jmp 0xa358
0x0000a31f      90             nop
0x0000a320      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x0000a323      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a327      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000a32a      e881e9ffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000a32f      488b3dca6d20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000a336      488d15fb4800.  lea rdx, str.s                          ; 0xec38 ; "\n  - %s"
0x0000a33d      4889c1         mov rcx, rax
0x0000a340      be01000000     mov esi, 1
0x0000a345      31c0           xor eax, eax
0x0000a347      4c01e5         add rbp, r12
0x0000a34a      e8e17affff     call sym.imp.__fprintf_chk
0x0000a34f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a353      4d85ff         test r15, r15
0x0000a356      7450           je 0xa3a8
0x0000a358      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000a35b      74c3           je 0xa320
0x0000a35d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x0000a360      4889ee         mov rsi, rbp
0x0000a363      4c89ef         mov rdi, r13
0x0000a366      e82579ffff     call sym.imp.memcmp
0x0000a36b      85c0           test eax, eax
0x0000a36d      75b1           jne 0xa320
0x0000a36f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x0000a372      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a376      4c01e5         add rbp, r12
0x0000a379      e832e9ffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000a37e      488b3d7b6d20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000a385      488d15de2200.  lea rdx, [0x0000c66a]                   ; ", %s"
0x0000a38c      4889c1         mov rcx, rax
0x0000a38f      be01000000     mov esi, 1
0x0000a394      31c0           xor eax, eax
0x0000a396      e8957affff     call sym.imp.__fprintf_chk
0x0000a39b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000a39f      4d85ff         test r15, r15
0x0000a3a2      75b4           jne 0xa358
0x0000a3a4      0f1f4000       nop dword [rax]
0x0000a3a8      488b3d516d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x211100:8]=0
0x0000a3af      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x0000a3b3      483b4730       cmp rax, qword [rdi + 0x30]
0x0000a3b7      731f           jae 0xa3d8
0x0000a3b9      488d5001       lea rdx, [rax + 1]
0x0000a3bd      48895728       mov qword [rdi + 0x28], rdx
0x0000a3c1      c6000a         mov byte [rax], 0xa
0x0000a3c4      4883c408       add rsp, 8
0x0000a3c8      5b             pop rbx
0x0000a3c9      5d             pop rbp
0x0000a3ca      415c           pop r12
0x0000a3cc      415d           pop r13
0x0000a3ce      415e           pop r14
0x0000a3d0      415f           pop r15
0x0000a3d2      c3             ret
0x0000a3d3      0f1f440000     nop dword [rax + rax]
0x0000a3d8      4883c408       add rsp, 8
0x0000a3dc      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x0000a3e1      5b             pop rbx
0x0000a3e2      5d             pop rbp
0x0000a3e3      415c           pop r12
0x0000a3e5      415d           pop r13
0x0000a3e7      415e           pop r14
0x0000a3e9      415f           pop r15
0x0000a3eb      e9f077ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x0000a3f0      4157           push r15
0x0000a3f2      4156           push r14
0x0000a3f4      4989fe         mov r14, rdi
0x0000a3f7      4155           push r13
0x0000a3f9      4154           push r12
0x0000a3fb      4989f4         mov r12, rsi
0x0000a3fe      55             push rbp
0x0000a3ff      53             push rbx
0x0000a400      4889cd         mov rbp, rcx
0x0000a403      4889d3         mov rbx, rdx
0x0000a406      4c89c1         mov rcx, r8
0x0000a409      4889ea         mov rdx, rbp
0x0000a40c      4883ec08       sub rsp, 8
0x0000a410      4889de         mov rsi, rbx
0x0000a413      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x0000a416      4d89c7         mov r15, r8
0x0000a419      4d89cd         mov r13, r9
0x0000a41c      e80ffdffff     call sym.argmatch
0x0000a421      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x0000a424      780f           js 0xa435                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x0000a426      4883c408       add rsp, 8
0x0000a42a      5b             pop rbx
0x0000a42b      5d             pop rbp
0x0000a42c      415c           pop r12
0x0000a42e      415d           pop r13
0x0000a430      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x0000a432      415f           pop r15
0x0000a434      c3             ret
0x0000a435      4889c2         mov rdx, rax
0x0000a438      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000a43b      4c89f7         mov rdi, r14
0x0000a43e      e80dfeffff     call sym.argmatch_invalid
0x0000a443      4c89fa         mov rdx, r15
0x0000a446      4889ee         mov rsi, rbp
0x0000a449      4889df         mov rdi, rbx
0x0000a44c      e87ffeffff     call sym.argmatch_valid
0x0000a451      41ffd5         call r13
0x0000a454      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000a45b      ebc9           jmp 0xa426
0x0000a45d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x0000a460      4156           push r14
0x0000a462      4155           push r13
0x0000a464      4154           push r12
0x0000a466      55             push rbp
0x0000a467      53             push rbx
0x0000a468      4c8b36         mov r14, qword [rsi]
0x0000a46b      4d85f6         test r14, r14
0x0000a46e      7431           je 0xa4a1
0x0000a470      4989cc         mov r12, rcx
0x0000a473      4989fd         mov r13, rdi
0x0000a476      4889d5         mov rbp, rdx
0x0000a479      488d5e08       lea rbx, [rsi + 8]
0x0000a47d      eb10           jmp 0xa48f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000a47f      90             nop
0x0000a480      4c8b33         mov r14, qword [rbx]
0x0000a483      4c01e5         add rbp, r12
0x0000a486      4883c308       add rbx, 8
0x0000a48a      4d85f6         test r14, r14
0x0000a48d      7412           je 0xa4a1
0x0000a48f      4c89e2         mov rdx, r12
0x0000a492      4889ee         mov rsi, rbp
0x0000a495      4c89ef         mov rdi, r13
0x0000a498      e8f377ffff     call sym.imp.memcmp
0x0000a49d      85c0           test eax, eax
0x0000a49f      75df           jne 0xa480
0x0000a4a1      5b             pop rbx
0x0000a4a2      4c89f0         mov rax, r14
0x0000a4a5      5d             pop rbp
0x0000a4a6      415c           pop r12
0x0000a4a8      415d           pop r13
0x0000a4aa      415e           pop r14
0x0000a4ac      c3             ret
0x0000a4ad      0f1f00         nop dword [rax]
;-- hard_locale:
0x0000a4b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000a4b4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000a4b6      e8a578ffff     call sym.imp.setlocale
0x0000a4bb      4889c2         mov rdx, rax
0x0000a4be      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000a4c3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000a4c6      741d           je 0xa4e5
0x0000a4c8      488d3d714700.  lea rdi, [0x0000ec40]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000a4cf      b902000000     mov ecx, 2
0x0000a4d4      4889d6         mov rsi, rdx
0x0000a4d7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a4d9      0f97c1         seta cl
0x0000a4dc      80d900         sbb cl, 0
0x0000a4df      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000a4e1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000a4e3      750b           jne 0xa4f0
0x0000a4e5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a4e9      c3             ret
0x0000a4ea      660f1f440000   nop word [rax + rax]
0x0000a4f0      488d3d4b4700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xec42 ; "POSIX"
0x0000a4f7      b906000000     mov ecx, 6
0x0000a4fc      4889d6         mov rsi, rdx
0x0000a4ff      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a501      0f97c0         seta al
0x0000a504      1c00           sbb al, 0
0x0000a506      84c0           test al, al
0x0000a508      0f95c0         setne al
0x0000a50b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a50f      c3             ret
;-- locale_charset:
0x0000a510      4883ec08       sub rsp, 8
0x0000a514      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000a519      e80278ffff     call sym.imp.nl_langinfo
0x0000a51e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000a521      741d           je 0xa540
0x0000a523      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000a526      488d151b4700.  lea rdx, str.ASCII                      ; 0xec48 ; "ASCII"
0x0000a52d      480f44c2       cmove rax, rdx
0x0000a531      4883c408       add rsp, 8
0x0000a535      c3             ret
0x0000a536      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a540      488d05014700.  lea rax, str.ASCII                      ; 0xec48 ; "ASCII"
0x0000a547      4883c408       add rsp, 8
0x0000a54b      c3             ret
0x0000a54c      0f1f4000       nop dword [rax]
;-- vasnprintf:
0x0000a550      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000a551      4889e5         mov rbp, rsp
0x0000a554      4157           push r15
0x0000a556      4156           push r14
0x0000a558      4155           push r13
0x0000a55a      4154           push r12
0x0000a55c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000a563      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000a564      4889d3         mov rbx, rdx
0x0000a567      4989cc         mov r12, rcx
0x0000a56a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000a56d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000a574      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000a57b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000a582      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000a589      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000a58c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x0000a593      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000a59c      488945c8       mov qword [rbp - 0x38], rax
0x0000a5a0      31c0           xor eax, eax
0x0000a5a2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000a5a9      e8c2120000     call sym.printf_parse
0x0000a5ae      85c0           test eax, eax
0x0000a5b0      0f88620e0000   js 0xb418
0x0000a5b6      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x0000a5b9      4c89e7         mov rdi, r12
0x0000a5bc      e8af100000     call sym.printf_fetchargs
0x0000a5c1      85c0           test eax, eax
0x0000a5c3      0f88b70e0000   js 0xb480
0x0000a5c9      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x0000a5d0      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x0000a5d7      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x0000a5db      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000a5df      480f46c2       cmovbe rax, rdx
0x0000a5e3      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x0000a5ea      0f82280a0000   jb 0xb018
0x0000a5f0      4889c7         mov rdi, rax
0x0000a5f3      4531c0         xor r8d, r8d
0x0000a5f6      4883c706       add rdi, 6
0x0000a5fa      410f92c0       setb r8b
0x0000a5fe      0f82140a0000   jb 0xb018
0x0000a604      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x0000a60b      0f8647010000   jbe 0xa758
0x0000a611      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x0000a615      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x0000a61c      0f84f6090000   je 0xb018
0x0000a622      e8d976ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x0000a627      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000a62a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x0000a631      0f84e1090000   je 0xb018                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000a637      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0000a63e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x0000a645      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x0000a648      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x0000a650      740a           je 0xa65c
0x0000a652      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x0000a659      4c8b20         mov r12, qword [rax]
0x0000a65c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x0000a663      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000a66a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x0000a671      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0000a67c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000a683      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x0000a686      4c89c3         mov rbx, r8
0x0000a689      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000a68d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x0000a690      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000a693      0f8468090000   je 0xb001
0x0000a699      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000a69c      4889d8         mov rax, rbx
0x0000a69f      4801c8         add rax, rcx
0x0000a6a2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x0000a6a5      0f83dd000000   jae 0xa788                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000a6ab      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000a6af      0f84cb0a0000   je 0xb180
0x0000a6b5      e8c673ffff     call sym.imp.__errno_location
0x0000a6ba      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000a6c1      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x0000a6c8      7409           je 0xa6d3
0x0000a6ca      4d85ff         test r15, r15
0x0000a6cd      0f85dd0a0000   jne 0xb1b0
0x0000a6d3      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x0000a6da      4885c0         test rax, rax
0x0000a6dd      7408           je 0xa6e7
0x0000a6df      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x0000a6e2      e87973ffff     call sym.imp.free
0x0000a6e7      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x0000a6ee      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000a6f5      4883c020       add rax, 0x20                           ; "@"
0x0000a6f9      4839c7         cmp rdi, rax
0x0000a6fc      7405           je 0xa703
0x0000a6fe      e85d73ffff     call sym.imp.free
0x0000a703      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000a70a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000a711      4883c010       add rax, 0x10
0x0000a715      4839c7         cmp rdi, rax
0x0000a718      7405           je 0xa71f
0x0000a71a      e84173ffff     call sym.imp.free
0x0000a71f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x0000a726      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x0000a729      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0000a72f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x0000a733      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000a73c      4c89f8         mov rax, r15
0x0000a73f      0f85020f0000   jne 0xb647
0x0000a745      488d65d8       lea rsp, [rbp - 0x28]
0x0000a749      5b             pop rbx
0x0000a74a      415c           pop r12
0x0000a74c      415d           pop r13
0x0000a74e      415e           pop r14
0x0000a750      415f           pop r15
0x0000a752      5d             pop rbp
0x0000a753      c3             ret
0x0000a754      0f1f4000       nop dword [rax]
0x0000a758      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000a75c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x0000a767      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000a76b      4829c4         sub rsp, rax
0x0000a76e      488d44240f     lea rax, [rsp + 0xf]
0x0000a773      4883e0f0       and rax, 0xfffffffffffffff0
0x0000a777      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0000a77e      e9c2feffff     jmp 0xa645
0x0000a783      0f1f440000     nop dword [rax + rax]
0x0000a788      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000a78b      7367           jae 0xa7f4
0x0000a78d      4d85e4         test r12, r12
0x0000a790      0f852a090000   jne 0xb0c0
0x0000a796      4883f80c       cmp rax, 0xc
0x0000a79a      0f8732090000   ja 0xb0d2
0x0000a7a0      41bc0c000000   mov r12d, 0xc
0x0000a7a6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000a7ad      0f94c2         sete dl
0x0000a7b0      4d85ff         test r15, r15
0x0000a7b3      0f843f090000   je 0xb0f8
0x0000a7b9      84d2           test dl, dl
0x0000a7bb      0f8537090000   jne 0xb0f8
0x0000a7c1      4c89e6         mov rsi, r12
0x0000a7c4      4c89ff         mov rdi, r15
0x0000a7c7      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000a7ce      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000a7d5      e87675ffff     call sym.imp.realloc
0x0000a7da      4885c0         test rax, rax
0x0000a7dd      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000a7e4      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000a7eb      0f84aa090000   je 0xb19b
0x0000a7f1      4989c7         mov r15, rax
0x0000a7f4      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x0000a7f8      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a7fb      4c89c6         mov rsi, r8
0x0000a7fe      e8dd74ffff     call sym.imp.memcpy
0x0000a803      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0000a80a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x0000a811      0f84b40c0000   je 0xb4cb
0x0000a817      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0000a81c      498b4550       mov rax, qword [r13 + 0x50]
0x0000a820      80fa25         cmp dl, 0x25
0x0000a823      0f848f070000   je 0xafb8
0x0000a829      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0000a82d      0f84430c0000   je 0xb476
0x0000a833      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0000a83a      48c1e005       shl rax, 5
0x0000a83e      4c01c0         add rax, r8
0x0000a841      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x0000a844      8b38           mov edi, dword [rax]
0x0000a846      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0000a84c      0f84de070000   je 0xb030
0x0000a852      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x0000a856      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0000a85d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000a85f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x0000a862      488d5f01       lea rbx, [rdi + 1]
0x0000a866      740f           je 0xa877                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000a868      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0000a86f      488d5f02       lea rbx, [rdi + 2]
0x0000a873      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x0000a877      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x0000a879      7407           je 0xa882
0x0000a87b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0000a87e      4883c301       add rbx, 1
0x0000a882      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x0000a884      7407           je 0xa88d
0x0000a886      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x0000a889      4883c301       add rbx, 1
0x0000a88d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000a88f      7407           je 0xa898
0x0000a891      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x0000a894      4883c301       add rbx, 1
0x0000a898      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000a89a      7407           je 0xa8a3
0x0000a89c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000a89f      4883c301       add rbx, 1
0x0000a8a3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x0000a8a5      7407           je 0xa8ae
0x0000a8a7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x0000a8aa      4883c301       add rbx, 1
0x0000a8ae      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x0000a8b0      7407           je 0xa8b9
0x0000a8b2      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x0000a8b5      4883c301       add rbx, 1
0x0000a8b9      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000a8bd      498b5520       mov rdx, qword [r13 + 0x20]
0x0000a8c1      4839d6         cmp rsi, rdx
0x0000a8c4      7430           je 0xa8f6
0x0000a8c6      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x0000a8c9      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a8cc      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000a8d3      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x0000a8d6      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a8d9      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000a8e0      e8fb73ffff     call sym.imp.memcpy
0x0000a8e5      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000a8ec      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000a8f3      4801cb         add rbx, rcx
0x0000a8f6      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0000a8fa      498b5538       mov rdx, qword [r13 + 0x38]
0x0000a8fe      4839d6         cmp rsi, rdx
0x0000a901      7430           je 0xa933
0x0000a903      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x0000a906      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a909      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000a910      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x0000a913      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a916      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000a91d      e8be73ffff     call sym.imp.memcpy
0x0000a922      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x0000a929      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000a930      4801cb         add rbx, rcx
0x0000a933      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x0000a939      83ff10         cmp edi, 0x10
0x0000a93c      772d           ja 0xa96b
0x0000a93e      b801000000     mov eax, 1
0x0000a943      89f9           mov ecx, edi
0x0000a945      48d3e0         shl rax, cl
0x0000a948      a980410100     test eax, 0x14180
0x0000a94d      7515           jne 0xa964
0x0000a94f      f6c410         test ah, 0x10
0x0000a952      0f8558090000   jne 0xb2b0
0x0000a958      f6c406         test ah, 6
0x0000a95b      740e           je 0xa96b
0x0000a95d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x0000a960      4883c301       add rbx, 1
0x0000a964      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x0000a967      4883c301       add rbx, 1
0x0000a96b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x0000a970      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x0000a974      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x0000a976      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000a97a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a97e      0f842c070000   je 0xb0b0
0x0000a984      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x0000a988      4c01c0         add rax, r8
0x0000a98b      833805         cmp dword [rax], 5
0x0000a98e      0f85e20a0000   jne 0xb476
0x0000a994      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x0000a997      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x0000a9a1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x0000a9a7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000a9ab      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a9af      742b           je 0xa9dc
0x0000a9b1      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x0000a9b5      4901c0         add r8, rax
0x0000a9b8      41833805       cmp dword [r8], 5
0x0000a9bc      0f85b40a0000   jne 0xb476
0x0000a9c2      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x0000a9c8      418b5010       mov edx, dword [r8 + 0x10]
0x0000a9cc      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x0000a9d3      8d4001         lea eax, [rax + 1]
0x0000a9d6      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000a9dc      4c89f0         mov rax, r14
0x0000a9df      31d2           xor edx, edx
0x0000a9e1      4883c002       add rax, 2
0x0000a9e5      0f82610c0000   jb 0xb64c
0x0000a9eb      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000a9ee      734b           jae 0xaa3b
0x0000a9f0      4d85e4         test r12, r12
0x0000a9f3      0f851f080000   jne 0xb218
0x0000a9f9      4883f80c       cmp rax, 0xc
0x0000a9fd      0f872d080000   ja 0xb230
0x0000aa03      41bc0c000000   mov r12d, 0xc
0x0000aa09      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000aa10      0f94c2         sete dl
0x0000aa13      4d85ff         test r15, r15
0x0000aa16      0f8444080000   je 0xb260
0x0000aa1c      84d2           test dl, dl
0x0000aa1e      0f853c080000   jne 0xb260
0x0000aa24      4c89e6         mov rsi, r12
0x0000aa27      4c89ff         mov rdi, r15
0x0000aa2a      e82173ffff     call sym.imp.realloc
0x0000aa2f      4885c0         test rax, rax
0x0000aa32      0f847dfcffff   je 0xa6b5
0x0000aa38      4989c7         mov r15, rax
0x0000aa3b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x0000aa40      e83b70ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x0000aa45      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000aa4c      8b00           mov eax, dword [rax]
0x0000aa4e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x0000aa55      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000aa5b      0f1f440000     nop dword [rax + rax]
0x0000aa60      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000aa67      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000aa6a      41baffffff7f   mov r10d, 0x7fffffff
0x0000aa70      4c29f3         sub rbx, r14
0x0000aa73      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000aa7d      4881fbffffff.  cmp rbx, 0x7fffffff
0x0000aa84      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000aa8a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x0000aa90      4c0f46d3       cmovbe r10, rbx
0x0000aa94      83f811         cmp eax, 0x11
0x0000aa97      0f87d9090000   ja 0xb476
0x0000aa9d      488d35ac4100.  lea rsi, [0x0000ec50]
0x0000aaa4      48630486       movsxd rax, dword [rsi + rax*4]
0x0000aaa8      4801f0         add rax, rsi
0x0000aaab      ffe0           jmp rax
0x0000aaad      0f1f00         nop dword [rax]
0x0000aab0      498b4550       mov rax, qword [r13 + 0x50]
0x0000aab4      4b8d3c37       lea rdi, [r15 + r14]
0x0000aab8      48c1e005       shl rax, 5
0x0000aabc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000aac3      4c8b4810       mov r9, qword [rax + 0x10]
0x0000aac7      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000aacd      83f801         cmp eax, 1
0x0000aad0      0f84c2040000   je 0xaf98
0x0000aad6      83f802         cmp eax, 2
0x0000aad9      0f84a1040000   je 0xaf80
0x0000aadf      4883ec08       sub rsp, 8
0x0000aae3      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000aae9      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000aaf0      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x0000aaf3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000aafa      ba01000000     mov edx, 1
0x0000aaff      31c0           xor eax, eax
0x0000ab01      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000ab08      e8336fffff     call sym.imp.__snprintf_chk
0x0000ab0d      5e             pop rsi
0x0000ab0e      5f             pop rdi
0x0000ab0f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000ab16      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000ab1c      85c9           test ecx, ecx
0x0000ab1e      0f8838010000   js 0xac5c
0x0000ab24      4863d1         movsxd rdx, ecx
0x0000ab27      4c39d2         cmp rdx, r10
0x0000ab2a      730e           jae 0xab3a
0x0000ab2c      4c01fa         add rdx, r15
0x0000ab2f      42803c3200     cmp byte [rdx + r14], 0
0x0000ab34      0f853c090000   jne 0xb476
0x0000ab3a      39c1           cmp ecx, eax
0x0000ab3c      7d08           jge 0xab46
0x0000ab3e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x0000ab44      89c1           mov ecx, eax
0x0000ab46      8d4101         lea eax, [rcx + 1]
0x0000ab49      4c39d0         cmp rax, r10
0x0000ab4c      0f822e080000   jb 0xb380
0x0000ab52      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x0000ab59      0f8741080000   ja 0xb3a0
0x0000ab5f      4b8d3424       lea rsi, [r12 + r12]
0x0000ab63      8d5102         lea edx, [rcx + 2]
0x0000ab66      4d85e4         test r12, r12
0x0000ab69      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000ab70      480f49c6       cmovns rax, rsi
0x0000ab74      4c01f2         add rdx, r14
0x0000ab77      0f82bb0a0000   jb 0xb638
0x0000ab7d      4839d0         cmp rax, rdx
0x0000ab80      480f42c2       cmovb rax, rdx
0x0000ab84      4939c4         cmp r12, rax
0x0000ab87      0f83d3feffff   jae 0xaa60
0x0000ab8d      4d85e4         test r12, r12
0x0000ab90      0f882bfbffff   js 0xa6c1
0x0000ab96      4839c6         cmp rsi, rax
0x0000ab99      4989f4         mov r12, rsi
0x0000ab9c      730d           jae 0xabab
0x0000ab9e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000aba2      0f8419fbffff   je 0xa6c1
0x0000aba8      4989c4         mov r12, rax
0x0000abab      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000abb2      0f94c3         sete bl
0x0000abb5      4d85ff         test r15, r15
0x0000abb8      0f8482030000   je 0xaf40
0x0000abbe      84db           test bl, bl
0x0000abc0      0f857a030000   jne 0xaf40
0x0000abc6      4c89e6         mov rsi, r12
0x0000abc9      4c89ff         mov rdi, r15
0x0000abcc      e87f71ffff     call sym.imp.realloc
0x0000abd1      4885c0         test rax, rax
0x0000abd4      0f84e7faffff   je 0xa6c1
0x0000abda      4989c7         mov r15, rax
0x0000abdd      e97efeffff     jmp 0xaa60                              ; stdio2.h:-211
0x0000abe2      660f1f440000   nop word [rax + rax]
0x0000abe8      498b4550       mov rax, qword [r13 + 0x50]
0x0000abec      4b8d3c37       lea rdi, [r15 + r14]
0x0000abf0      48c1e005       shl rax, 5
0x0000abf4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000abfb      448b4810       mov r9d, dword [rax + 0x10]
0x0000abff      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000ac05      83f801         cmp eax, 1
0x0000ac08      0f8432020000   je 0xae40
0x0000ac0e      83f802         cmp eax, 2
0x0000ac11      0f8471020000   je 0xae88
0x0000ac17      4883ec08       sub rsp, 8
0x0000ac1b      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000ac21      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000ac28      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000ac2f      ba01000000     mov edx, 1
0x0000ac34      4c89d6         mov rsi, r10
0x0000ac37      31c0           xor eax, eax
0x0000ac39      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000ac40      e8fb6dffff     call sym.imp.__snprintf_chk
0x0000ac45      5a             pop rdx
0x0000ac46      59             pop rcx
0x0000ac47      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000ac4d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x0000ac54      85c9           test ecx, ecx
0x0000ac56      0f89c8feffff   jns 0xab24
0x0000ac5c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x0000ac63      807f0100       cmp byte [rdi + 1], 0
0x0000ac67      0f853b030000   jne 0xafa8
0x0000ac6d      85c0           test eax, eax
0x0000ac6f      0f89c9feffff   jns 0xab3e
0x0000ac75      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000ac7c      8b18           mov ebx, dword [rax]
0x0000ac7e      85db           test ebx, ebx
0x0000ac80      751e           jne 0xaca0
0x0000ac82      410fb64548     movzx eax, byte [r13 + 0x48]
0x0000ac87      bb16000000     mov ebx, 0x16
0x0000ac8c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000ac8f      3c63           cmp al, 0x63
0x0000ac91      b854000000     mov eax, 0x54                           ; 'T'
0x0000ac96      0f44d8         cmove ebx, eax
0x0000ac99      0f1f80000000.  nop dword [rax]
0x0000aca0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000aca7      7409           je 0xacb2
0x0000aca9      4d85ff         test r15, r15
0x0000acac      0f85aa070000   jne 0xb45c
0x0000acb2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000acb9      4885c0         test rax, rax
0x0000acbc      7408           je 0xacc6
0x0000acbe      4889c7         mov rdi, rax
0x0000acc1      e89a6dffff     call sym.imp.free
0x0000acc6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000accd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000acd4      4883c020       add rax, 0x20                           ; "@"
0x0000acd8      4839c7         cmp rdi, rax
0x0000acdb      7405           je 0xace2
0x0000acdd      e87e6dffff     call sym.imp.free
0x0000ace2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000ace9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000acf0      4883c010       add rax, 0x10
0x0000acf4      4839c7         cmp rdi, rax
0x0000acf7      7405           je 0xacfe
0x0000acf9      e8626dffff     call sym.imp.free
0x0000acfe      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000ad05      4531ff         xor r15d, r15d
0x0000ad08      8918           mov dword [rax], ebx
0x0000ad0a      e920faffff     jmp 0xa72f
0x0000ad0f      90             nop
0x0000ad10      498b4550       mov rax, qword [r13 + 0x50]
0x0000ad14      4b8d3c37       lea rdi, [r15 + r14]
0x0000ad18      48c1e005       shl rax, 5
0x0000ad1c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000ad23      db6810         fld xword [rax + 0x10]
0x0000ad26      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000ad2c      83f801         cmp eax, 1
0x0000ad2f      0f842b060000   je 0xb360
0x0000ad35      83f802         cmp eax, 2
0x0000ad38      0f85c2040000   jne 0xb200
0x0000ad3e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000ad44      4883ec08       sub rsp, 8
0x0000ad48      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x0000ad4e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000ad55      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000ad5c      4c89d6         mov rsi, r10
0x0000ad5f      4883ec18       sub rsp, 0x18
0x0000ad63      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000ad6a      ba01000000     mov edx, 1
0x0000ad6f      db7c2408       fstp xword [rsp + 8]
0x0000ad73      50             push rax
0x0000ad74      31c0           xor eax, eax
0x0000ad76      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x0000ad7d      e8be6cffff     call sym.imp.__snprintf_chk
0x0000ad82      4883c430       add rsp, 0x30
0x0000ad86      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000ad8d      e984fdffff     jmp 0xab16
0x0000ad92      660f1f440000   nop word [rax + rax]
0x0000ad98      498b4550       mov rax, qword [r13 + 0x50]
0x0000ad9c      4b8d3c37       lea rdi, [r15 + r14]
0x0000ada0      48c1e005       shl rax, 5
0x0000ada4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000adab      f20f104010     movsd xmm0, qword [rax + 0x10]
0x0000adb0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000adb6      83f801         cmp eax, 1
0x0000adb9      0f8491050000   je 0xb350
0x0000adbf      83f802         cmp eax, 2
0x0000adc2      0f85f8030000   jne 0xb1c0
0x0000adc8      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000adce      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000add4      50             push rax
0x0000add5      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000addc      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000ade3      4c89d6         mov rsi, r10
0x0000ade6      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000aded      ba01000000     mov edx, 1
0x0000adf2      b801000000     mov eax, 1
0x0000adf7      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000adfe      e83d6cffff     call sym.imp.__snprintf_chk
0x0000ae03      4158           pop r8
0x0000ae05      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000ae0c      4159           pop r9
0x0000ae0e      e903fdffff     jmp 0xab16
0x0000ae13      0f1f440000     nop dword [rax + rax]
0x0000ae18      498b4550       mov rax, qword [r13 + 0x50]
0x0000ae1c      4b8d3c37       lea rdi, [r15 + r14]
0x0000ae20      48c1e005       shl rax, 5
0x0000ae24      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000ae2b      440fb74810     movzx r9d, word [rax + 0x10]
0x0000ae30      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000ae36      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x0000ae39      0f85cffdffff   jne 0xac0e
0x0000ae3f      90             nop
0x0000ae40      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000ae46      4151           push r9
0x0000ae48      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000ae4f      e9cdfdffff     jmp 0xac21
0x0000ae54      0f1f4000       nop dword [rax]
0x0000ae58      498b4550       mov rax, qword [r13 + 0x50]
0x0000ae5c      4b8d3c37       lea rdi, [r15 + r14]
0x0000ae60      48c1e005       shl rax, 5
0x0000ae64      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000ae6b      440fbf4810     movsx r9d, word [rax + 0x10]
0x0000ae70      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000ae76      83f801         cmp eax, 1
0x0000ae79      74c5           je 0xae40
0x0000ae7b      83f802         cmp eax, 2
0x0000ae7e      0f8593fdffff   jne 0xac17
0x0000ae84      0f1f4000       nop dword [rax]
0x0000ae88      4883ec08       sub rsp, 8
0x0000ae8c      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000ae92      4151           push r9
0x0000ae94      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000ae9a      50             push rax
0x0000ae9b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x0000aea2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000aea9      4c89d6         mov rsi, r10
0x0000aeac      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000aeb3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x0000aeb8      31c0           xor eax, eax
0x0000aeba      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000aec1      e87a6bffff     call sym.imp.__snprintf_chk
0x0000aec6      4883c420       add rsp, 0x20
0x0000aeca      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000aed1      e940fcffff     jmp 0xab16
0x0000aed6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000aee0      498b4550       mov rax, qword [r13 + 0x50]
0x0000aee4      4b8d3c37       lea rdi, [r15 + r14]
0x0000aee8      48c1e005       shl rax, 5
0x0000aeec      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000aef3      440fb64810     movzx r9d, byte [rax + 0x10]
0x0000aef8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000aefe      83f801         cmp eax, 1
0x0000af01      0f8507fdffff   jne 0xac0e
0x0000af07      e934ffffff     jmp 0xae40
0x0000af0c      0f1f4000       nop dword [rax]
0x0000af10      498b4550       mov rax, qword [r13 + 0x50]
0x0000af14      4b8d3c37       lea rdi, [r15 + r14]
0x0000af18      48c1e005       shl rax, 5
0x0000af1c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000af23      440fbe4810     movsx r9d, byte [rax + 0x10]
0x0000af28      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000af2e      83f801         cmp eax, 1
0x0000af31      0f85d7fcffff   jne 0xac0e
0x0000af37      e904ffffff     jmp 0xae40
0x0000af3c      0f1f4000       nop dword [rax]
0x0000af40      4c89e7         mov rdi, r12
0x0000af43      e8b86dffff     call sym.imp.malloc
0x0000af48      4885c0         test rax, rax
0x0000af4b      4889c1         mov rcx, rax
0x0000af4e      0f846df7ffff   je 0xa6c1
0x0000af54      4d85f6         test r14, r14
0x0000af57      0f84b3000000   je 0xb010
0x0000af5d      84db           test bl, bl
0x0000af5f      0f84ab000000   je 0xb010
0x0000af65      4c89fe         mov rsi, r15
0x0000af68      4c89f2         mov rdx, r14
0x0000af6b      4889c7         mov rdi, rax
0x0000af6e      e86d6dffff     call sym.imp.memcpy
0x0000af73      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x0000af76      e9e5faffff     jmp 0xaa60
0x0000af7b      0f1f440000     nop dword [rax + rax]
0x0000af80      4883ec08       sub rsp, 8
0x0000af84      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x0000af8a      4151           push r9
0x0000af8c      e903ffffff     jmp 0xae94
0x0000af91      0f1f80000000.  nop dword [rax]
0x0000af98      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000af9e      4151           push r9
0x0000afa0      e9a3feffff     jmp 0xae48
0x0000afa5      0f1f00         nop dword [rax]
0x0000afa8      c6470100       mov byte [rdi + 1], 0
0x0000afac      e9affaffff     jmp 0xaa60
0x0000afb1      0f1f80000000.  nop dword [rax]
0x0000afb8      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000afbc      0f85b4040000   jne 0xb476
0x0000afc2      4c89f0         mov rax, r14
0x0000afc5      4883c001       add rax, 1
0x0000afc9      4889c3         mov rbx, rax
0x0000afcc      0f8386000000   jae 0xb058
0x0000afd2      4983fcff       cmp r12, 0xffffffffffffffff
0x0000afd6      0f85d9f6ffff   jne 0xa6b5
0x0000afdc      4c89e3         mov rbx, r12
0x0000afdf      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x0000afe4      4d8b4508       mov r8, qword [r13 + 8]
0x0000afe8      4983c558       add r13, 0x58
0x0000afec      498b4d00       mov rcx, qword [r13]
0x0000aff0      48838500fcff.  add qword [rbp - 0x400], 1
0x0000aff8      4c39c1         cmp rcx, r8
0x0000affb      0f8598f6ffff   jne 0xa699
0x0000b001      4989de         mov r14, rbx
0x0000b004      e9faf7ffff     jmp 0xa803                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x0000b009      0f1f80000000.  nop dword [rax]
0x0000b010      4989cf         mov r15, rcx
0x0000b013      e948faffff     jmp 0xaa60                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x0000b018      e8636affff     call sym.imp.__errno_location
0x0000b01d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000b024      e9bef6ffff     jmp 0xa6e7
0x0000b029      0f1f80000000.  nop dword [rax]
0x0000b030      89fa           mov edx, edi
0x0000b032      83ea12         sub edx, 0x12
0x0000b035      83fa04         cmp edx, 4
0x0000b038      0f8738040000   ja 0xb476
0x0000b03e      488d3d533c00.  lea rdi, [0x0000ec98]
0x0000b045      488b4010       mov rax, qword [rax + 0x10]
0x0000b049      48631497       movsxd rdx, dword [rdi + rdx*4]
0x0000b04d      4801fa         add rdx, rdi
0x0000b050      ffe2           jmp rdx
0x0000b052      660f1f440000   nop word [rax + rax]
0x0000b058      4939c4         cmp r12, rax
0x0000b05b      7382           jae 0xafdf
0x0000b05d      4d85e4         test r12, r12
0x0000b060      0f85ca030000   jne 0xb430
0x0000b066      4883f80c       cmp rax, 0xc
0x0000b06a      0f87d2030000   ja 0xb442
0x0000b070      41bc0c000000   mov r12d, 0xc
0x0000b076      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b07d      0f94c2         sete dl
0x0000b080      4d85ff         test r15, r15
0x0000b083      0f8467020000   je 0xb2f0
0x0000b089      84d2           test dl, dl
0x0000b08b      0f855f020000   jne 0xb2f0
0x0000b091      4c89e6         mov rsi, r12
0x0000b094      4c89ff         mov rdi, r15
0x0000b097      e8b46cffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x0000b09c      4885c0         test rax, rax
0x0000b09f      0f84f6000000   je 0xb19b
0x0000b0a5      4989c7         mov r15, rax
0x0000b0a8      e932ffffff     jmp 0xafdf
0x0000b0ad      0f1f00         nop dword [rax]
0x0000b0b0      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x0000b0ba      e9e8f8ffff     jmp 0xa9a7
0x0000b0bf      90             nop
0x0000b0c0      0f88eff5ffff   js 0xa6b5
0x0000b0c6      4d01e4         add r12, r12
0x0000b0c9      4939c4         cmp r12, rax
0x0000b0cc      0f83d4f6ffff   jae 0xa7a6
0x0000b0d2      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b0d6      0f84d9f5ffff   je 0xa6b5
0x0000b0dc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b0e3      4989c4         mov r12, rax
0x0000b0e6      0f94c2         sete dl
0x0000b0e9      4d85ff         test r15, r15
0x0000b0ec      0f85c7f6ffff   jne 0xa7b9
0x0000b0f2      660f1f440000   nop word [rax + rax]
0x0000b0f8      4c89e7         mov rdi, r12
0x0000b0fb      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000b102      889530fcffff   mov byte [rbp - 0x3d0], dl
0x0000b108      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000b10f      e8ec6bffff     call sym.imp.malloc
0x0000b114      4885c0         test rax, rax
0x0000b117      4989c1         mov r9, rax
0x0000b11a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000b121      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x0000b128      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000b12f      0f8480f5ffff   je 0xa6b5
0x0000b135      4885db         test rbx, rbx
0x0000b138      0f8402020000   je 0xb340
0x0000b13e      84d2           test dl, dl
0x0000b140      0f84fa010000   je 0xb340
0x0000b146      4c89fe         mov rsi, r15
0x0000b149      4889da         mov rdx, rbx
0x0000b14c      4889c7         mov rdi, rax
0x0000b14f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000b156      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000b15d      e87e6bffff     call sym.imp.memcpy
0x0000b162      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000b169      4989c7         mov r15, rax
0x0000b16c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000b173      e97cf6ffff     jmp 0xa7f4
0x0000b178      0f1f84000000.  nop dword [rax + rax]
0x0000b180      4d89e6         mov r14, r12
0x0000b183      e96cf6ffff     jmp 0xa7f4
0x0000b188      0f1f84000000.  nop dword [rax + rax]
0x0000b190      4c8930         mov qword [rax], r14
0x0000b193      4c89f3         mov rbx, r14
0x0000b196      e949feffff     jmp 0xafe4
0x0000b19b      e8e068ffff     call sym.imp.__errno_location
0x0000b1a0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000b1a7      660f1f840000.  nop word [rax + rax]
0x0000b1b0      4c89ff         mov rdi, r15
0x0000b1b3      e8a868ffff     call sym.imp.free
0x0000b1b8      e916f5ffff     jmp 0xa6d3
0x0000b1bd      0f1f00         nop dword [rax]
0x0000b1c0      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000b1c7      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000b1ce      4c89d6         mov rsi, r10
0x0000b1d1      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000b1d8      ba01000000     mov edx, 1
0x0000b1dd      b801000000     mov eax, 1
0x0000b1e2      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000b1e9      e85268ffff     call sym.imp.__snprintf_chk
0x0000b1ee      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000b1f5      e91cf9ffff     jmp 0xab16
0x0000b1fa      660f1f440000   nop word [rax + rax]
0x0000b200      4883ec10       sub rsp, 0x10
0x0000b204      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000b20b      db3c24         fstp xword [rsp]
0x0000b20e      e9d6f8ffff     jmp 0xaae9
0x0000b213      0f1f440000     nop dword [rax + rax]
0x0000b218      0f8897f4ffff   js 0xa6b5
0x0000b21e      4d01e4         add r12, r12
0x0000b221      4939c4         cmp r12, rax
0x0000b224      0f83dff7ffff   jae 0xaa09
0x0000b22a      660f1f440000   nop word [rax + rax]
0x0000b230      4885d2         test rdx, rdx
0x0000b233      0f857cf4ffff   jne 0xa6b5
0x0000b239      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b23d      0f8472f4ffff   je 0xa6b5
0x0000b243      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b24a      4989c4         mov r12, rax
0x0000b24d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x0000b250      4d85ff         test r15, r15
0x0000b253      0f85c3f7ffff   jne 0xaa1c
0x0000b259      0f1f80000000.  nop dword [rax]
0x0000b260      4c89e7         mov rdi, r12
0x0000b263      889538fcffff   mov byte [rbp - 0x3c8], dl
0x0000b269      e8926affff     call sym.imp.malloc
0x0000b26e      4885c0         test rax, rax
0x0000b271      4889c1         mov rcx, rax
0x0000b274      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000b27b      0f8434f4ffff   je 0xa6b5                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x0000b281      4d85f6         test r14, r14
0x0000b284      0f8496010000   je 0xb420
0x0000b28a      84d2           test dl, dl
0x0000b28c      0f848e010000   je 0xb420
0x0000b292      4c89fe         mov rsi, r15
0x0000b295      4c89f2         mov rdx, r14
0x0000b298      4889c7         mov rdi, rax
0x0000b29b      e8406affff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x0000b2a0      4989c7         mov r15, rax
0x0000b2a3      e993f7ffff     jmp 0xaa3b
0x0000b2a8      0f1f84000000.  nop dword [rax + rax]
0x0000b2b0      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x0000b2b3      4883c301       add rbx, 1
0x0000b2b7      e9aff6ffff     jmp 0xa96b
0x0000b2bc      0f1f4000       nop dword [rax]
0x0000b2c0      448830         mov byte [rax], r14b
0x0000b2c3      4c89f3         mov rbx, r14
0x0000b2c6      e919fdffff     jmp 0xafe4
0x0000b2cb      0f1f440000     nop dword [rax + rax]
0x0000b2d0      448930         mov dword [rax], r14d
0x0000b2d3      4c89f3         mov rbx, r14
0x0000b2d6      e909fdffff     jmp 0xafe4
0x0000b2db      0f1f440000     nop dword [rax + rax]
0x0000b2e0      66448930       mov word [rax], r14w
0x0000b2e4      4c89f3         mov rbx, r14
0x0000b2e7      e9f8fcffff     jmp 0xafe4
0x0000b2ec      0f1f4000       nop dword [rax]
0x0000b2f0      4c89e7         mov rdi, r12
0x0000b2f3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x0000b2f9      e8026affff     call sym.imp.malloc
0x0000b2fe      4885c0         test rax, rax
0x0000b301      4889c1         mov rcx, rax
0x0000b304      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000b30b      0f84a4f3ffff   je 0xa6b5                               ; stdio2.h:-339
0x0000b311      4d85f6         test r14, r14
0x0000b314      0f843a010000   je 0xb454
0x0000b31a      84d2           test dl, dl
0x0000b31c      0f8432010000   je 0xb454
0x0000b322      4c89fe         mov rsi, r15
0x0000b325      4c89f2         mov rdx, r14
0x0000b328      4889c7         mov rdi, rax
0x0000b32b      e8b069ffff     call sym.imp.memcpy
0x0000b330      4989c7         mov r15, rax
0x0000b333      e9a7fcffff     jmp 0xafdf
0x0000b338      0f1f84000000.  nop dword [rax + rax]
0x0000b340      4d89cf         mov r15, r9
0x0000b343      e9acf4ffff     jmp 0xa7f4
0x0000b348      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x0000b350      4883ec08       sub rsp, 8
0x0000b354      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000b35a      e976faffff     jmp 0xadd5
0x0000b35f      90             nop
0x0000b360      4883ec08       sub rsp, 8
0x0000b364      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000b36a      4883ec10       sub rsp, 0x10
0x0000b36e      db3c24         fstp xword [rsp]
0x0000b371      e925fbffff     jmp 0xae9b
0x0000b376      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b380      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000b387      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000b38d      4863d9         movsxd rbx, ecx
0x0000b390      4c01f3         add rbx, r14
0x0000b393      8938           mov dword [rax], edi
0x0000b395      e94afcffff     jmp 0xafe4
0x0000b39a      660f1f440000   nop word [rax + rax]
0x0000b3a0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b3a7      7409           je 0xb3b2
0x0000b3a9      4d85ff         test r15, r15
0x0000b3ac      0f85b7000000   jne 0xb469
0x0000b3b2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000b3b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000b3bc      7408           je 0xb3c6
0x0000b3be      4889c7         mov rdi, rax
0x0000b3c1      e89a66ffff     call sym.imp.free
0x0000b3c6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000b3cd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000b3d4      4883c020       add rax, 0x20                           ; "@"
0x0000b3d8      4839c7         cmp rdi, rax
0x0000b3db      7405           je 0xb3e2
0x0000b3dd      e87e66ffff     call sym.imp.free
0x0000b3e2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000b3e9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000b3f0      4883c010       add rax, 0x10
0x0000b3f4      4839c7         cmp rdi, rax
0x0000b3f7      7405           je 0xb3fe
0x0000b3f9      e86266ffff     call sym.imp.free
0x0000b3fe      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000b405      4531ff         xor r15d, r15d
0x0000b408      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000b40e      e91cf3ffff     jmp 0xa72f
0x0000b413      0f1f440000     nop dword [rax + rax]
0x0000b418      4531ff         xor r15d, r15d
0x0000b41b      e90ff3ffff     jmp 0xa72f
0x0000b420      4989cf         mov r15, rcx
0x0000b423      e913f6ffff     jmp 0xaa3b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x0000b428      0f1f84000000.  nop dword [rax + rax]
0x0000b430      0f887ff2ffff   js 0xa6b5
0x0000b436      4d01e4         add r12, r12
0x0000b439      4939c4         cmp r12, rax
0x0000b43c      0f8334fcffff   jae 0xb076
0x0000b442      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b446      0f8469f2ffff   je 0xa6b5
0x0000b44c      4989c4         mov r12, rax
0x0000b44f      e922fcffff     jmp 0xb076
0x0000b454      4989cf         mov r15, rcx
0x0000b457      e983fbffff     jmp 0xafdf
0x0000b45c      4c89ff         mov rdi, r15
0x0000b45f      e8fc65ffff     call sym.imp.free
0x0000b464      e949f8ffff     jmp 0xacb2
0x0000b469      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000b46c      e8ef65ffff     call sym.imp.free
0x0000b471      e93cffffff     jmp 0xb3b2
0x0000b476      e8f565ffff     call sym.imp.abort
0x0000b47b      0f1f440000     nop dword [rax + rax]
0x0000b480      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000b487      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000b48e      4883c020       add rax, 0x20                           ; "@"
0x0000b492      4839c7         cmp rdi, rax
0x0000b495      7405           je 0xb49c
0x0000b497      e8c465ffff     call sym.imp.free
0x0000b49c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000b4a3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000b4aa      4883c010       add rax, 0x10
0x0000b4ae      4839c7         cmp rdi, rax
0x0000b4b1      7405           je 0xb4b8
0x0000b4b3      e8a865ffff     call sym.imp.free
0x0000b4b8      e8c365ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000b4bd      4531ff         xor r15d, r15d
0x0000b4c0      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3c800000
0x0000b4c6      e964f2ffff     jmp 0xa72f
0x0000b4cb      4c89f3         mov rbx, r14
0x0000b4ce      31c0           xor eax, eax
0x0000b4d0      4883c301       add rbx, 1
0x0000b4d4      0f8206010000   jb 0xb5e0
0x0000b4da      4939dc         cmp r12, rbx
0x0000b4dd      734d           jae 0xb52c
0x0000b4df      4d85e4         test r12, r12
0x0000b4e2      0f8531010000   jne 0xb619                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x0000b4e8      4883fb0c       cmp rbx, 0xc
0x0000b4ec      0f870c010000   ja 0xb5fe
0x0000b4f2      41bc0c000000   mov r12d, 0xc
0x0000b4f8      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b4ff      410f94c5       sete r13b
0x0000b503      4d85ff         test r15, r15
0x0000b506      0f84a0000000   je 0xb5ac
0x0000b50c      4584ed         test r13b, r13b
0x0000b50f      0f8597000000   jne 0xb5ac
0x0000b515      4c89e6         mov rsi, r12
0x0000b518      4c89ff         mov rdi, r15
0x0000b51b      e83068ffff     call sym.imp.realloc
0x0000b520      4885c0         test rax, rax
0x0000b523      0f8472fcffff   je 0xb19b
0x0000b529      4989c7         mov r15, rax
0x0000b52c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000b533      43c6043700     mov byte [r15 + r14], 0
0x0000b538      7417           je 0xb551
0x0000b53a      4939dc         cmp r12, rbx
0x0000b53d      7612           jbe 0xb551
0x0000b53f      4c89ff         mov rdi, r15
0x0000b542      4889de         mov rsi, rbx
0x0000b545      e80668ffff     call sym.imp.realloc
0x0000b54a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0000b54d      4c0f45f8       cmovne r15, rax
0x0000b551      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000b558      4885c0         test rax, rax
0x0000b55b      7408           je 0xb565
0x0000b55d      4889c7         mov rdi, rax
0x0000b560      e8fb64ffff     call sym.imp.free
0x0000b565      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000b56c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000b573      4883c020       add rax, 0x20                           ; "@"
0x0000b577      4839c7         cmp rdi, rax
0x0000b57a      7405           je 0xb581
0x0000b57c      e8df64ffff     call sym.imp.free
0x0000b581      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000b588      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000b58f      4883c010       add rax, 0x10
0x0000b593      4839c7         cmp rdi, rax
0x0000b596      7405           je 0xb59d
0x0000b598      e8c364ffff     call sym.imp.free
0x0000b59d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x0000b5a4      4c8930         mov qword [rax], r14
0x0000b5a7      e983f1ffff     jmp 0xa72f
0x0000b5ac      4c89e7         mov rdi, r12
0x0000b5af      e84c67ffff     call sym.imp.malloc
0x0000b5b4      4885c0         test rax, rax
0x0000b5b7      4889c1         mov rcx, rax
0x0000b5ba      0f84f5f0ffff   je 0xa6b5
0x0000b5c0      4d85f6         test r14, r14
0x0000b5c3      746b           je 0xb630
0x0000b5c5      4584ed         test r13b, r13b
0x0000b5c8      7466           je 0xb630
0x0000b5ca      4c89fe         mov rsi, r15
0x0000b5cd      4c89f2         mov rdx, r14
0x0000b5d0      4889c7         mov rdi, rax
0x0000b5d3      e80867ffff     call sym.imp.memcpy
0x0000b5d8      4989c7         mov r15, rax
0x0000b5db      e94cffffff     jmp 0xb52c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x0000b5e0      4983fcff       cmp r12, 0xffffffffffffffff
0x0000b5e4      b801000000     mov eax, 1
0x0000b5e9      0f843dffffff   je 0xb52c
0x0000b5ef      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x0000b5f2      0f84bdf0ffff   je 0xa6b5
0x0000b5f8      0f88b7f0ffff   js 0xa6b5
0x0000b5fe      4885c0         test rax, rax
0x0000b601      0f85aef0ffff   jne 0xa6b5
0x0000b607      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000b60b      0f84a4f0ffff   je 0xa6b5
0x0000b611      4989dc         mov r12, rbx
0x0000b614      e9dffeffff     jmp 0xb4f8
0x0000b619      0f8896f0ffff   js 0xa6b5
0x0000b61f      4d01e4         add r12, r12
0x0000b622      4939dc         cmp r12, rbx
0x0000b625      0f83cdfeffff   jae 0xb4f8
0x0000b62b      ebd1           jmp 0xb5fe
0x0000b62d      0f1f00         nop dword [rax]
0x0000b630      4989cf         mov r15, rcx
0x0000b633      e9f4feffff     jmp 0xb52c
0x0000b638      4983fcff       cmp r12, 0xffffffffffffffff
0x0000b63c      0f841ef4ffff   je 0xaa60
0x0000b642      e97af0ffff     jmp 0xa6c1
0x0000b647      e84465ffff     call sym.imp.__stack_chk_fail
0x0000b64c      4983fcff       cmp r12, 0xffffffffffffffff
0x0000b650      ba01000000     mov edx, 1
0x0000b655      0f84e0f3ffff   je 0xaa3b
0x0000b65b      4d85e4         test r12, r12
0x0000b65e      0f8451f0ffff   je 0xa6b5
0x0000b664      0f89c6fbffff   jns 0xb230
0x0000b66a      e946f0ffff     jmp 0xa6b5
0x0000b66f      90             nop
;-- printf_fetchargs:
0x0000b670      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x0000b674      488b4608       mov rax, qword [rsi + 8]
0x0000b678      7463           je 0xb6dd
0x0000b67a      4c8d053f3600.  lea r8, [0x0000ecc0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x0000b681      4c8d15983600.  lea r10, obj.wide_null_string.2696      ; 0xed20 ; U"(NULL)"
0x0000b688      4c8d0d1d3600.  lea r9, [0x0000ecac]                    ; "(NULL)"
0x0000b68f      31c9           xor ecx, ecx
0x0000b691      0f1f80000000.  nop dword [rax]
0x0000b698      833816         cmp dword [rax], 0x16
0x0000b69b      7743           ja 0xb6e0
0x0000b69d      8b10           mov edx, dword [rax]
0x0000b69f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x0000b6a3      4c01c2         add rdx, r8
0x0000b6a6      ffe2           jmp rdx
0x0000b6a8      0f1f84000000.  nop dword [rax + rax]
0x0000b6b0      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x0000b6b4      4883c20f       add rdx, 0xf
0x0000b6b8      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000b6bc      4c8d5a10       lea r11, [rdx + 0x10]
0x0000b6c0      4c895f08       mov qword [rdi + 8], r11
0x0000b6c4      db2a           fld xword [rdx]
0x0000b6c6      db7810         fstp xword [rax + 0x10]
0x0000b6c9      0f1f80000000.  nop dword [rax]
0x0000b6d0      4883c101       add rcx, 1
0x0000b6d4      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x0000b6d8      48390e         cmp qword [rsi], rcx
0x0000b6db      77bb           ja 0xb698
0x0000b6dd      31c0           xor eax, eax
0x0000b6df      c3             ret
0x0000b6e0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b6e5      c3             ret
0x0000b6e6      448b1f         mov r11d, dword [rdi]
0x0000b6e9      4183fb2f       cmp r11d, 0x2f
0x0000b6ed      0f8737010000   ja 0xb82a
0x0000b6f3      4489da         mov edx, r11d
0x0000b6f6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x0000b6fa      4183c308       add r11d, 8
0x0000b6fe      44891f         mov dword [rdi], r11d
0x0000b701      488b12         mov rdx, qword [rdx]
0x0000b704      48895010       mov qword [rax + 0x10], rdx
0x0000b708      ebc6           jmp 0xb6d0
0x0000b70a      448b1f         mov r11d, dword [rdi]
0x0000b70d      4183fb2f       cmp r11d, 0x2f
0x0000b711      0f8735010000   ja 0xb84c
0x0000b717      4489da         mov edx, r11d
0x0000b71a      48035710       add rdx, qword [rdi + 0x10]
0x0000b71e      4183c308       add r11d, 8
0x0000b722      44891f         mov dword [rdi], r11d
0x0000b725      8b12           mov edx, dword [rdx]
0x0000b727      895010         mov dword [rax + 0x10], edx
0x0000b72a      eba4           jmp 0xb6d0
0x0000b72c      448b1f         mov r11d, dword [rdi]
0x0000b72f      4183fb2f       cmp r11d, 0x2f
0x0000b733      0f8702010000   ja 0xb83b
0x0000b739      4489da         mov edx, r11d                           ; stddef.h:-47
0x0000b73c      48035710       add rdx, qword [rdi + 0x10]
0x0000b740      4183c308       add r11d, 8
0x0000b744      44891f         mov dword [rdi], r11d
0x0000b747      8b12           mov edx, dword [rdx]
0x0000b749      885010         mov byte [rax + 0x10], dl
0x0000b74c      eb82           jmp 0xb6d0
0x0000b74e      448b1f         mov r11d, dword [rdi]
0x0000b751      4183fb2f       cmp r11d, 0x2f
0x0000b755      0f879f000000   ja 0xb7fa
0x0000b75b      4489da         mov edx, r11d
0x0000b75e      48035710       add rdx, qword [rdi + 0x10]
0x0000b762      4183c308       add r11d, 8
0x0000b766      44891f         mov dword [rdi], r11d
0x0000b769      8b12           mov edx, dword [rdx]
0x0000b76b      66895010       mov word [rax + 0x10], dx
0x0000b76f      e95cffffff     jmp 0xb6d0
0x0000b774      448b1f         mov r11d, dword [rdi]
0x0000b777      4183fb2f       cmp r11d, 0x2f
0x0000b77b      0f878a000000   ja 0xb80b
0x0000b781      4489da         mov edx, r11d
0x0000b784      48035710       add rdx, qword [rdi + 0x10]
0x0000b788      4183c308       add r11d, 8
0x0000b78c      44891f         mov dword [rdi], r11d
0x0000b78f      488b12         mov rdx, qword [rdx]
0x0000b792      4885d2         test rdx, rdx
0x0000b795      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x0000b799      48895010       mov qword [rax + 0x10], rdx
0x0000b79d      e92effffff     jmp 0xb6d0
0x0000b7a2      448b5f04       mov r11d, dword [rdi + 4]
0x0000b7a6      4181fbaf0000.  cmp r11d, 0xaf
0x0000b7ad      0f87aa000000   ja 0xb85d
0x0000b7b3      4489da         mov edx, r11d
0x0000b7b6      48035710       add rdx, qword [rdi + 0x10]
0x0000b7ba      4183c310       add r11d, 0x10
0x0000b7be      44895f04       mov dword [rdi + 4], r11d
0x0000b7c2      f20f1002       movsd xmm0, qword [rdx]
0x0000b7c6      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000b7cb      e900ffffff     jmp 0xb6d0
0x0000b7d0      448b1f         mov r11d, dword [rdi]
0x0000b7d3      4183fb2f       cmp r11d, 0x2f
0x0000b7d7      7743           ja 0xb81c
0x0000b7d9      4489da         mov edx, r11d
0x0000b7dc      48035710       add rdx, qword [rdi + 0x10]
0x0000b7e0      4183c308       add r11d, 8
0x0000b7e4      44891f         mov dword [rdi], r11d
0x0000b7e7      488b12         mov rdx, qword [rdx]
0x0000b7ea      4885d2         test rdx, rdx
0x0000b7ed      490f44d2       cmove rdx, r10
0x0000b7f1      48895010       mov qword [rax + 0x10], rdx
0x0000b7f5      e9d6feffff     jmp 0xb6d0
0x0000b7fa      488b5708       mov rdx, qword [rdi + 8]
0x0000b7fe      4c8d5a08       lea r11, [rdx + 8]
0x0000b802      4c895f08       mov qword [rdi + 8], r11
0x0000b806      e95effffff     jmp 0xb769
0x0000b80b      488b5708       mov rdx, qword [rdi + 8]
0x0000b80f      4c8d5a08       lea r11, [rdx + 8]
0x0000b813      4c895f08       mov qword [rdi + 8], r11
0x0000b817      e973ffffff     jmp 0xb78f
0x0000b81c      488b5708       mov rdx, qword [rdi + 8]
0x0000b820      4c8d5a08       lea r11, [rdx + 8]
0x0000b824      4c895f08       mov qword [rdi + 8], r11
0x0000b828      ebbd           jmp 0xb7e7
0x0000b82a      488b5708       mov rdx, qword [rdi + 8]
0x0000b82e      4c8d5a08       lea r11, [rdx + 8]
0x0000b832      4c895f08       mov qword [rdi + 8], r11
0x0000b836      e9c6feffff     jmp 0xb701
0x0000b83b      488b5708       mov rdx, qword [rdi + 8]
0x0000b83f      4c8d5a08       lea r11, [rdx + 8]
0x0000b843      4c895f08       mov qword [rdi + 8], r11
0x0000b847      e9fbfeffff     jmp 0xb747
0x0000b84c      488b5708       mov rdx, qword [rdi + 8]
0x0000b850      4c8d5a08       lea r11, [rdx + 8]
0x0000b854      4c895f08       mov qword [rdi + 8], r11
0x0000b858      e9c8feffff     jmp 0xb725
0x0000b85d      488b5708       mov rdx, qword [rdi + 8]
0x0000b861      4c8d5a08       lea r11, [rdx + 8]
0x0000b865      4c895f08       mov qword [rdi + 8], r11
0x0000b869      e954ffffff     jmp 0xb7c2
0x0000b86e      6690           nop
;-- printf_parse:
0x0000b870      4157           push r15
0x0000b872      4156           push r14
0x0000b874      488d4e20       lea rcx, [rsi + 0x20]
0x0000b878      4155           push r13
0x0000b87a      4154           push r12
0x0000b87c      488d4210       lea rax, [rdx + 0x10]
0x0000b880      55             push rbp
0x0000b881      53             push rbx
0x0000b882      4989f6         mov r14, rsi
0x0000b885      4989d7         mov r15, rdx
0x0000b888      31db           xor ebx, ebx
0x0000b88a      41b907000000   mov r9d, 7
0x0000b890      4883ec58       sub rsp, 0x58
0x0000b894      41ba07000000   mov r10d, 7
0x0000b89a      48c706000000.  mov qword [rsi], 0
0x0000b8a1      48894e08       mov qword [rsi + 8], rcx
0x0000b8a5      48894c2428     mov qword [rsp + 0x28], rcx
0x0000b8aa      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000b8b1      48c702000000.  mov qword [rdx], 0
0x0000b8b8      4889442408     mov qword [rsp + 8], rax
0x0000b8bd      48894208       mov qword [rdx + 8], rax
0x0000b8c1      48c744241800.  mov qword [rsp + 0x18], 0
0x0000b8ca      48c744241000.  mov qword [rsp + 0x10], 0
0x0000b8d3      48c744242000.  mov qword [rsp + 0x20], 0
0x0000b8dc      eb0d           jmp 0xb8eb
0x0000b8de      6690           nop
0x0000b8e0      3c25           cmp al, 0x25
0x0000b8e2      488d6f01       lea rbp, [rdi + 1]
0x0000b8e6      7440           je 0xb928
0x0000b8e8      4889ef         mov rdi, rbp
0x0000b8eb      0fb607         movzx eax, byte [rdi]
0x0000b8ee      84c0           test al, al
0x0000b8f0      75ee           jne 0xb8e0
0x0000b8f2      488d049b       lea rax, [rbx + rbx*4]
0x0000b8f6      488d0443       lea rax, [rbx + rax*2]
0x0000b8fa      48893cc1       mov qword [rcx + rax*8], rdi
0x0000b8fe      488b442410     mov rax, qword [rsp + 0x10]
0x0000b903      49894610       mov qword [r14 + 0x10], rax
0x0000b907      488b442418     mov rax, qword [rsp + 0x18]
0x0000b90c      49894618       mov qword [r14 + 0x18], rax
0x0000b910      31c0           xor eax, eax
0x0000b912      4883c458       add rsp, 0x58
0x0000b916      5b             pop rbx
0x0000b917      5d             pop rbp
0x0000b918      415c           pop r12
0x0000b91a      415d           pop r13
0x0000b91c      415e           pop r14
0x0000b91e      415f           pop r15
0x0000b920      c3             ret
0x0000b921      0f1f80000000.  nop dword [rax]
0x0000b928      488d049b       lea rax, [rbx + rbx*4]
0x0000b92c      4d89c5         mov r13, r8
0x0000b92f      488d0443       lea rax, [rbx + rax*2]
0x0000b933      4c8d24c1       lea r12, [rcx + rax*8]
0x0000b937      49893c24       mov qword [r12], rdi
0x0000b93b      41c744241000.  mov dword [r12 + 0x10], 0
0x0000b944      49c744241800.  mov qword [r12 + 0x18], 0
0x0000b94d      49c744242000.  mov qword [r12 + 0x20], 0
0x0000b956      4d89442428     mov qword [r12 + 0x28], r8
0x0000b95b      49c744243000.  mov qword [r12 + 0x30], 0
0x0000b964      49c744243800.  mov qword [r12 + 0x38], 0
0x0000b96d      4d89442440     mov qword [r12 + 0x40], r8
0x0000b972      4d89442450     mov qword [r12 + 0x50], r8
0x0000b977      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000b97b      8d43d0         lea eax, [rbx - 0x30]
0x0000b97e      3c09           cmp al, 9
0x0000b980      773c           ja 0xb9be
0x0000b982      e933040000     jmp 0xbdba
0x0000b987      660f1f840000.  nop word [rax + rax]
0x0000b990      80fb2d         cmp bl, 0x2d
0x0000b993      7443           je 0xb9d8
0x0000b995      80fb2b         cmp bl, 0x2b
0x0000b998      7446           je 0xb9e0
0x0000b99a      80fb20         cmp bl, 0x20                            ; "@"
0x0000b99d      7451           je 0xb9f0
0x0000b99f      80fb23         cmp bl, 0x23
0x0000b9a2      745c           je 0xba00
0x0000b9a4      80fb30         cmp bl, 0x30
0x0000b9a7      7467           je 0xba10
0x0000b9a9      80fb49         cmp bl, 0x49
0x0000b9ac      7572           jne 0xba20
0x0000b9ae      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x0000b9b4      0f1f4000       nop dword [rax]
0x0000b9b8      0fb618         movzx ebx, byte [rax]
0x0000b9bb      4889c5         mov rbp, rax
0x0000b9be      488d4501       lea rax, [rbp + 1]
0x0000b9c2      80fb27         cmp bl, 0x27
0x0000b9c5      4889c2         mov rdx, rax
0x0000b9c8      75c6           jne 0xb990
0x0000b9ca      41834c241001   or dword [r12 + 0x10], 1
0x0000b9d0      ebe6           jmp 0xb9b8
0x0000b9d2      660f1f440000   nop word [rax + rax]
0x0000b9d8      41834c241002   or dword [r12 + 0x10], 2
0x0000b9de      ebd8           jmp 0xb9b8
0x0000b9e0      41834c241004   or dword [r12 + 0x10], 4
0x0000b9e6      ebd0           jmp 0xb9b8
0x0000b9e8      0f1f84000000.  nop dword [rax + rax]
0x0000b9f0      41834c241008   or dword [r12 + 0x10], 8
0x0000b9f6      ebc0           jmp 0xb9b8
0x0000b9f8      0f1f84000000.  nop dword [rax + rax]
0x0000ba00      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x0000ba06      ebb0           jmp 0xb9b8
0x0000ba08      0f1f84000000.  nop dword [rax + rax]
0x0000ba10      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x0000ba16      eba0           jmp 0xb9b8
0x0000ba18      0f1f84000000.  nop dword [rax + rax]
0x0000ba20      80fb2a         cmp bl, 0x2a
0x0000ba23      0f84b0010000   je 0xbbd9
0x0000ba29      8d4bd0         lea ecx, [rbx - 0x30]
0x0000ba2c      80f909         cmp cl, 9
0x0000ba2f      0f8612040000   jbe 0xbe47
0x0000ba35      80fb2e         cmp bl, 0x2e
0x0000ba38      0f84d1020000   je 0xbd0f
0x0000ba3e      31c0           xor eax, eax
0x0000ba40      be01000000     mov esi, 1
0x0000ba45      eb30           jmp 0xba77
0x0000ba47      660f1f840000.  nop word [rax + rax]
0x0000ba50      80fb4c         cmp bl, 0x4c
0x0000ba53      743b           je 0xba90
0x0000ba55      80fb6c         cmp bl, 0x6c
0x0000ba58      7416           je 0xba70
0x0000ba5a      80fb6a         cmp bl, 0x6a
0x0000ba5d      7411           je 0xba70
0x0000ba5f      89da           mov edx, ebx
0x0000ba61      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000ba64      80fa5a         cmp dl, 0x5a
0x0000ba67      7407           je 0xba70
0x0000ba69      80fb74         cmp bl, 0x74
0x0000ba6c      752a           jne 0xba98
0x0000ba6e      6690           nop
0x0000ba70      83c008         add eax, 8
0x0000ba73      0fb65d00       movzx ebx, byte [rbp]
0x0000ba77      4883c501       add rbp, 1
0x0000ba7b      80fb68         cmp bl, 0x68
0x0000ba7e      75d0           jne 0xba50
0x0000ba80      89c1           mov ecx, eax
0x0000ba82      89f2           mov edx, esi
0x0000ba84      83e101         and ecx, 1
0x0000ba87      d3e2           shl edx, cl
0x0000ba89      09d0           or eax, edx
0x0000ba8b      ebe6           jmp 0xba73
0x0000ba8d      0f1f00         nop dword [rax]
0x0000ba90      83c804         or eax, 4
0x0000ba93      ebde           jmp 0xba73
0x0000ba95      0f1f00         nop dword [rax]
0x0000ba98      8d53db         lea edx, [rbx - 0x25]
0x0000ba9b      80fa53         cmp dl, 0x53
0x0000ba9e      0f8717060000   ja 0xc0bb
0x0000baa4      488d0d913200.  lea rcx, [0x0000ed3c]
0x0000baab      0fb6d2         movzx edx, dl
0x0000baae      48631491       movsxd rdx, dword [rcx + rdx*4]
0x0000bab2      4801ca         add rdx, rcx
0x0000bab5      ffe2           jmp rdx
0x0000bab7      41bb10000000   mov r11d, 0x10
0x0000babd      bb73000000     mov ebx, 0x73                           ; 's'
0x0000bac2      660f1f440000   nop word [rax + rax]
0x0000bac8      4983fdff       cmp r13, 0xffffffffffffffff
0x0000bacc      0f84b5060000   je 0xc187
0x0000bad2      4d896c2450     mov qword [r12 + 0x50], r13
0x0000bad7      4d39e9         cmp r9, r13
0x0000bada      498b4f08       mov rcx, qword [r15 + 8]
0x0000bade      0f861c060000   jbe 0xc100
0x0000bae4      498b07         mov rax, qword [r15]
0x0000bae7      4889c2         mov rdx, rax
0x0000baea      48c1e205       shl rdx, 5
0x0000baee      4801ca         add rdx, rcx
0x0000baf1      4c39e8         cmp rax, r13
0x0000baf4      7720           ja 0xbb16
0x0000baf6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bb00      4883c001       add rax, 1
0x0000bb04      c70200000000   mov dword [rdx], 0
0x0000bb0a      4883c220       add rdx, 0x20                           ; "@"
0x0000bb0e      4c39e8         cmp rax, r13
0x0000bb11      76ed           jbe 0xbb00
0x0000bb13      498907         mov qword [r15], rax
0x0000bb16      49c1e505       shl r13, 5
0x0000bb1a      4a8d0429       lea rax, [rcx + r13]
0x0000bb1e      8b10           mov edx, dword [rax]
0x0000bb20      85d2           test edx, edx
0x0000bb22      0f85cb050000   jne 0xc0f3
0x0000bb28      448918         mov dword [rax], r11d
0x0000bb2b      41885c2448     mov byte [r12 + 0x48], bl
0x0000bb30      498b06         mov rax, qword [r14]
0x0000bb33      49896c2408     mov qword [r12 + 8], rbp
0x0000bb38      488d5801       lea rbx, [rax + 1]
0x0000bb3c      4939da         cmp r10, rbx
0x0000bb3f      49891e         mov qword [r14], rbx
0x0000bb42      0f8788000000   ja 0xbbd0
0x0000bb48      4d85d2         test r10, r10
0x0000bb4b      0f88a6090000   js 0xc4f7
0x0000bb51      4d01d2         add r10, r10
0x0000bb54      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000bb5e      4939c2         cmp r10, rax
0x0000bb61      0f8790090000   ja 0xc4f7
0x0000bb67      4b8d0492       lea rax, [r10 + r10*4]
0x0000bb6b      498b7e08       mov rdi, qword [r14 + 8]
0x0000bb6f      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000bb74      4c894c2440     mov qword [rsp + 0x40], r9
0x0000bb79      4c89542438     mov qword [rsp + 0x38], r10
0x0000bb7e      498d0442       lea rax, [r10 + rax*2]
0x0000bb82      4c89442430     mov qword [rsp + 0x30], r8
0x0000bb87      488d34c50000.  lea rsi, [rax*8]
0x0000bb8f      0f84b8060000   je 0xc24d
0x0000bb95      e8b661ffff     call sym.imp.realloc
0x0000bb9a      4885c0         test rax, rax
0x0000bb9d      4889c1         mov rcx, rax
0x0000bba0      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000bba5      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000bbaa      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000bbaf      0f8442090000   je 0xc4f7
0x0000bbb5      488b442428     mov rax, qword [rsp + 0x28]
0x0000bbba      493b4608       cmp rax, qword [r14 + 8]
0x0000bbbe      498b1e         mov rbx, qword [r14]
0x0000bbc1      0f84a9060000   je 0xc270
0x0000bbc7      49894e08       mov qword [r14 + 8], rcx
0x0000bbcb      e918fdffff     jmp 0xb8e8
0x0000bbd0      498b4e08       mov rcx, qword [r14 + 8]
0x0000bbd4      e90ffdffff     jmp 0xb8e8
0x0000bbd9      488b742410     mov rsi, qword [rsp + 0x10]
0x0000bbde      b901000000     mov ecx, 1
0x0000bbe3      49896c2418     mov qword [r12 + 0x18], rbp
0x0000bbe8      4989442420     mov qword [r12 + 0x20], rax
0x0000bbed      4885f6         test rsi, rsi
0x0000bbf0      480f45ce       cmovne rcx, rsi
0x0000bbf4      48894c2410     mov qword [rsp + 0x10], rcx
0x0000bbf9      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000bbfd      8d71d0         lea esi, [rcx - 0x30]
0x0000bc00      4080fe09       cmp sil, 9
0x0000bc04      0f86db020000   jbe 0xbee5
0x0000bc0a      488b742420     mov rsi, qword [rsp + 0x20]
0x0000bc0f      4883feff       cmp rsi, 0xffffffffffffffff
0x0000bc13      488d5601       lea rdx, [rsi + 1]
0x0000bc17      4989742428     mov qword [r12 + 0x28], rsi
0x0000bc1c      0f8499040000   je 0xc0bb
0x0000bc22      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000bc27      4889c5         mov rbp, rax
0x0000bc2a      4889542420     mov qword [rsp + 0x20], rdx
0x0000bc2f      4939d9         cmp r9, rbx
0x0000bc32      498b4f08       mov rcx, qword [r15 + 8]
0x0000bc36      0f8776060000   ja 0xc2b2
0x0000bc3c      4d01c9         add r9, r9
0x0000bc3f      488d4301       lea rax, [rbx + 1]
0x0000bc43      4939d9         cmp r9, rbx
0x0000bc46      4c0f46c8       cmovbe r9, rax
0x0000bc4a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000bc54      4939c1         cmp r9, rax
0x0000bc57      0f879e080000   ja 0xc4fb
0x0000bc5d      4c89ce         mov rsi, r9
0x0000bc60      4c894c2440     mov qword [rsp + 0x40], r9
0x0000bc65      4c89542438     mov qword [rsp + 0x38], r10
0x0000bc6a      48c1e605       shl rsi, 5
0x0000bc6e      48394c2408     cmp qword [rsp + 8], rcx
0x0000bc73      4c89442430     mov qword [rsp + 0x30], r8
0x0000bc78      0f8413070000   je 0xc391
0x0000bc7e      4889cf         mov rdi, rcx
0x0000bc81      e8ca60ffff     call sym.imp.realloc
0x0000bc86      498b5708       mov rdx, qword [r15 + 8]
0x0000bc8a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000bc8f      4889c1         mov rcx, rax
0x0000bc92      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000bc97      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000bc9c      4885c9         test rcx, rcx
0x0000bc9f      0f84b2080000   je 0xc557
0x0000bca5      4839542408     cmp qword [rsp + 8], rdx
0x0000bcaa      498b07         mov rax, qword [r15]
0x0000bcad      0f84b8070000   je 0xc46b
0x0000bcb3      49894f08       mov qword [r15 + 8], rcx
0x0000bcb7      4889c2         mov rdx, rax
0x0000bcba      48c1e205       shl rdx, 5
0x0000bcbe      4801ca         add rdx, rcx
0x0000bcc1      4839d8         cmp rax, rbx
0x0000bcc4      7720           ja 0xbce6
0x0000bcc6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bcd0      4883c001       add rax, 1
0x0000bcd4      c70200000000   mov dword [rdx], 0
0x0000bcda      4883c220       add rdx, 0x20                           ; "@"
0x0000bcde      4839d8         cmp rax, rbx
0x0000bce1      76ed           jbe 0xbcd0
0x0000bce3      498907         mov qword [r15], rax
0x0000bce6      48c1e305       shl rbx, 5
0x0000bcea      488d0419       lea rax, [rcx + rbx]
0x0000bcee      8b10           mov edx, dword [rax]
0x0000bcf0      85d2           test edx, edx
0x0000bcf2      0f85d3040000   jne 0xc1cb
0x0000bcf8      c70005000000   mov dword [rax], 5
0x0000bcfe      0fb65d00       movzx ebx, byte [rbp]
0x0000bd02      488d5501       lea rdx, [rbp + 1]
0x0000bd06      80fb2e         cmp bl, 0x2e
0x0000bd09      0f852ffdffff   jne 0xba3e
0x0000bd0f      807d012a       cmp byte [rbp + 1], 0x2a
0x0000bd13      49896c2430     mov qword [r12 + 0x30], rbp
0x0000bd18      0f8580010000   jne 0xbe9e
0x0000bd1e      488b742418     mov rsi, qword [rsp + 0x18]
0x0000bd23      4c8d5d02       lea r11, [rbp + 2]
0x0000bd27      b802000000     mov eax, 2
0x0000bd2c      4d895c2438     mov qword [r12 + 0x38], r11
0x0000bd31      4883fe02       cmp rsi, 2
0x0000bd35      480f43c6       cmovae rax, rsi
0x0000bd39      4889442418     mov qword [rsp + 0x18], rax
0x0000bd3e      0fbe4502       movsx eax, byte [rbp + 2]
0x0000bd42      8d50d0         lea edx, [rax - 0x30]
0x0000bd45      80fa09         cmp dl, 9
0x0000bd48      0f868e060000   jbe 0xc3dc
0x0000bd4e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x0000bd53      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000bd57      0f8458060000   je 0xc3b5
0x0000bd5d      4939d9         cmp r9, rbx
0x0000bd60      498b4f08       mov rcx, qword [r15 + 8]
0x0000bd64      0f8665050000   jbe 0xc2cf
0x0000bd6a      498b07         mov rax, qword [r15]
0x0000bd6d      4889c2         mov rdx, rax
0x0000bd70      48c1e205       shl rdx, 5
0x0000bd74      4801ca         add rdx, rcx
0x0000bd77      4839d8         cmp rax, rbx
0x0000bd7a      771a           ja 0xbd96
0x0000bd7c      0f1f4000       nop dword [rax]
0x0000bd80      4883c001       add rax, 1
0x0000bd84      c70200000000   mov dword [rdx], 0
0x0000bd8a      4883c220       add rdx, 0x20                           ; "@"
0x0000bd8e      4839d8         cmp rax, rbx
0x0000bd91      76ed           jbe 0xbd80
0x0000bd93      498907         mov qword [r15], rax
0x0000bd96      48c1e305       shl rbx, 5
0x0000bd9a      488d0419       lea rax, [rcx + rbx]
0x0000bd9e      8b10           mov edx, dword [rax]
0x0000bda0      85d2           test edx, edx
0x0000bda2      0f8512050000   jne 0xc2ba
0x0000bda8      c70005000000   mov dword [rax], 5
0x0000bdae      4c89dd         mov rbp, r11
0x0000bdb1      410fb61b       movzx ebx, byte [r11]
0x0000bdb5      e984fcffff     jmp 0xba3e
0x0000bdba      4889e8         mov rax, rbp
0x0000bdbd      0f1f00         nop dword [rax]
0x0000bdc0      4883c001       add rax, 1
0x0000bdc4      0fb610         movzx edx, byte [rax]
0x0000bdc7      8d4ad0         lea ecx, [rdx - 0x30]
0x0000bdca      80f909         cmp cl, 9
0x0000bdcd      76f1           jbe 0xbdc0
0x0000bdcf      80fa24         cmp dl, 0x24
0x0000bdd2      4d89c5         mov r13, r8
0x0000bdd5      0f85e3fbffff   jne 0xb9be
0x0000bddb      31d2           xor edx, edx
0x0000bddd      0fbec3         movsx eax, bl
0x0000bde0      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000bdea      4c89c6         mov rsi, r8
0x0000bded      83e830         sub eax, 0x30
0x0000bdf0      4839fa         cmp rdx, rdi
0x0000bdf3      4898           cdqe
0x0000bdf5      7707           ja 0xbdfe
0x0000bdf7      488d3492       lea rsi, [rdx + rdx*4]
0x0000bdfb      4801f6         add rsi, rsi
0x0000bdfe      4889e9         mov rcx, rbp
0x0000be01      4801f0         add rax, rsi
0x0000be04      0fb65d01       movzx ebx, byte [rbp + 1]
0x0000be08      400f92c6       setb sil
0x0000be0c      4883c501       add rbp, 1
0x0000be10      4889c2         mov rdx, rax
0x0000be13      400fb6f6       movzx esi, sil
0x0000be17      4885f6         test rsi, rsi
0x0000be1a      8d7bd0         lea edi, [rbx - 0x30]
0x0000be1d      0f858b030000   jne 0xc1ae
0x0000be23      4080ff09       cmp dil, 9
0x0000be27      76b4           jbe 0xbddd
0x0000be29      4989c5         mov r13, rax
0x0000be2c      4983ed01       sub r13, 1
0x0000be30      4983fdfd       cmp r13, 0xfffffffffffffffd
0x0000be34      0f8781020000   ja 0xc0bb
0x0000be3a      488d6902       lea rbp, [rcx + 2]
0x0000be3e      0fb65902       movzx ebx, byte [rcx + 2]
0x0000be42      e977fbffff     jmp 0xb9be
0x0000be47      49896c2418     mov qword [r12 + 0x18], rbp
0x0000be4c      0fb67d00       movzx edi, byte [rbp]
0x0000be50      4889ee         mov rsi, rbp
0x0000be53      8d4fd0         lea ecx, [rdi - 0x30]
0x0000be56      80f909         cmp cl, 9
0x0000be59      760c           jbe 0xbe67
0x0000be5b      eb33           jmp 0xbe90
0x0000be5d      0f1f00         nop dword [rax]
0x0000be60      4889c5         mov rbp, rax
0x0000be63      4883c001       add rax, 1
0x0000be67      0fb638         movzx edi, byte [rax]
0x0000be6a      8d57d0         lea edx, [rdi - 0x30]
0x0000be6d      80fa09         cmp dl, 9
0x0000be70      76ee           jbe 0xbe60
0x0000be72      4889c1         mov rcx, rax
0x0000be75      488d5502       lea rdx, [rbp + 2]
0x0000be79      4889c5         mov rbp, rax
0x0000be7c      4829f1         sub rcx, rsi
0x0000be7f      488b742410     mov rsi, qword [rsp + 0x10]
0x0000be84      4839ce         cmp rsi, rcx
0x0000be87      480f43ce       cmovae rcx, rsi
0x0000be8b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000be90      49896c2420     mov qword [r12 + 0x20], rbp
0x0000be95      0fb65d00       movzx ebx, byte [rbp]
0x0000be99      e997fbffff     jmp 0xba35
0x0000be9e      0fb64501       movzx eax, byte [rbp + 1]
0x0000bea2      83e830         sub eax, 0x30
0x0000bea5      3c09           cmp al, 9
0x0000bea7      7715           ja 0xbebe
0x0000bea9      0f1f80000000.  nop dword [rax]
0x0000beb0      4883c201       add rdx, 1
0x0000beb4      0fb602         movzx eax, byte [rdx]
0x0000beb7      83e830         sub eax, 0x30
0x0000beba      3c09           cmp al, 9
0x0000bebc      76f2           jbe 0xbeb0
0x0000bebe      488b742418     mov rsi, qword [rsp + 0x18]
0x0000bec3      4889d0         mov rax, rdx
0x0000bec6      4989542438     mov qword [r12 + 0x38], rdx
0x0000becb      4829e8         sub rax, rbp
0x0000bece      0fb61a         movzx ebx, byte [rdx]
0x0000bed1      4889d5         mov rbp, rdx
0x0000bed4      4839c6         cmp rsi, rax
0x0000bed7      480f43c6       cmovae rax, rsi
0x0000bedb      4889442418     mov qword [rsp + 0x18], rax
0x0000bee0      e959fbffff     jmp 0xba3e
0x0000bee5      4889c6         mov rsi, rax
0x0000bee8      4883c601       add rsi, 1
0x0000beec      0fb63e         movzx edi, byte [rsi]
0x0000beef      448d5fd0       lea r11d, [rdi - 0x30]
0x0000bef3      4180fb09       cmp r11b, 9
0x0000bef7      76ef           jbe 0xbee8
0x0000bef9      4080ff24       cmp dil, 0x24
0x0000befd      0f8507fdffff   jne 0xbc0a
0x0000bf03      31f6           xor esi, esi
0x0000bf05      0fbec1         movsx eax, cl
0x0000bf08      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000bf12      4c89c1         mov rcx, r8
0x0000bf15      83e830         sub eax, 0x30
0x0000bf18      4839fe         cmp rsi, rdi
0x0000bf1b      4898           cdqe
0x0000bf1d      7707           ja 0xbf26
0x0000bf1f      488d0cb6       lea rcx, [rsi + rsi*4]
0x0000bf23      4801c9         add rcx, rcx
0x0000bf26      4889d5         mov rbp, rdx
0x0000bf29      4531db         xor r11d, r11d
0x0000bf2c      4801c8         add rax, rcx
0x0000bf2f      0fb64a01       movzx ecx, byte [rdx + 1]
0x0000bf33      410f92c3       setb r11b
0x0000bf37      4883c201       add rdx, 1
0x0000bf3b      4889c6         mov rsi, rax
0x0000bf3e      4d85db         test r11, r11
0x0000bf41      8d79d0         lea edi, [rcx - 0x30]
0x0000bf44      0f8504050000   jne 0xc44e
0x0000bf4a      4080ff09       cmp dil, 9
0x0000bf4e      76b5           jbe 0xbf05
0x0000bf50      488d58ff       lea rbx, [rax - 1]
0x0000bf54      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000bf58      0f875d010000   ja 0xc0bb
0x0000bf5e      49895c2428     mov qword [r12 + 0x28], rbx
0x0000bf63      4883c502       add rbp, 2
0x0000bf67      e9c3fcffff     jmp 0xbc2f
0x0000bf6c      83f80f         cmp eax, 0xf
0x0000bf6f      41bb16000000   mov r11d, 0x16
0x0000bf75      0f8f4dfbffff   jg 0xbac8
0x0000bf7b      a804           test al, 4
0x0000bf7d      0f8545fbffff   jne 0xbac8
0x0000bf83      83f807         cmp eax, 7
0x0000bf86      41bb15000000   mov r11d, 0x15
0x0000bf8c      0f8f36fbffff   jg 0xbac8
0x0000bf92      a802           test al, 2
0x0000bf94      41bb12000000   mov r11d, 0x12
0x0000bf9a      0f8528fbffff   jne 0xbac8
0x0000bfa0      4531db         xor r11d, r11d
0x0000bfa3      a801           test al, 1
0x0000bfa5      410f94c3       sete r11b
0x0000bfa9      4183c313       add r11d, 0x13
0x0000bfad      e916fbffff     jmp 0xbac8
0x0000bfb2      660f1f440000   nop word [rax + rax]
0x0000bfb8      4531db         xor r11d, r11d
0x0000bfbb      83f807         cmp eax, 7
0x0000bfbe      410f9fc3       setg r11b
0x0000bfc2      4183c30d       add r11d, 0xd
0x0000bfc6      e9fdfaffff     jmp 0xbac8
0x0000bfcb      83f80f         cmp eax, 0xf
0x0000bfce      41bb09000000   mov r11d, 9
0x0000bfd4      0f8feefaffff   jg 0xbac8
0x0000bfda      a804           test al, 4
0x0000bfdc      0f85e6faffff   jne 0xbac8
0x0000bfe2      83f807         cmp eax, 7
0x0000bfe5      41bb07000000   mov r11d, 7
0x0000bfeb      0f8fd7faffff   jg 0xbac8
0x0000bff1      a802           test al, 2
0x0000bff3      41bb01000000   mov r11d, 1
0x0000bff9      0f85c9faffff   jne 0xbac8
0x0000bfff      83e001         and eax, 1
0x0000c002      83f801         cmp eax, 1
0x0000c005      4519db         sbb r11d, r11d
0x0000c008      4183e302       and r11d, 2
0x0000c00c      4183c303       add r11d, 3
0x0000c010      e9b3faffff     jmp 0xbac8
0x0000c015      0f1f00         nop dword [rax]
0x0000c018      4531db         xor r11d, r11d
0x0000c01b      83f807         cmp eax, 7
0x0000c01e      410f9fc3       setg r11b
0x0000c022      4183c30f       add r11d, 0xf
0x0000c026      e99dfaffff     jmp 0xbac8
0x0000c02b      83f80f         cmp eax, 0xf
0x0000c02e      41bb0c000000   mov r11d, 0xc
0x0000c034      0f8f8efaffff   jg 0xbac8
0x0000c03a      4531db         xor r11d, r11d
0x0000c03d      a804           test al, 4
0x0000c03f      410f95c3       setne r11b
0x0000c043      4183c30b       add r11d, 0xb
0x0000c047      e97cfaffff     jmp 0xbac8
0x0000c04c      41bb0e000000   mov r11d, 0xe
0x0000c052      bb63000000     mov ebx, 0x63                           ; 'c'
0x0000c057      e96cfaffff     jmp 0xbac8
0x0000c05c      83f80f         cmp eax, 0xf
0x0000c05f      41bb0a000000   mov r11d, 0xa
0x0000c065      0f8f5dfaffff   jg 0xbac8
0x0000c06b      a804           test al, 4
0x0000c06d      0f8555faffff   jne 0xbac8
0x0000c073      83f807         cmp eax, 7
0x0000c076      41bb08000000   mov r11d, 8
0x0000c07c      0f8f46faffff   jg 0xbac8
0x0000c082      a802           test al, 2
0x0000c084      41bb02000000   mov r11d, 2
0x0000c08a      0f8538faffff   jne 0xbac8
0x0000c090      83e001         and eax, 1
0x0000c093      83f801         cmp eax, 1
0x0000c096      4519db         sbb r11d, r11d
0x0000c099      4183e302       and r11d, 2
0x0000c09d      4183c304       add r11d, 4
0x0000c0a1      e922faffff     jmp 0xbac8
0x0000c0a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c0b0      41bb11000000   mov r11d, 0x11
0x0000c0b6      e90dfaffff     jmp 0xbac8
0x0000c0bb      498b4f08       mov rcx, qword [r15 + 8]
0x0000c0bf      48394c2408     cmp qword [rsp + 8], rcx
0x0000c0c4      7408           je 0xc0ce
0x0000c0c6      4889cf         mov rdi, rcx
0x0000c0c9      e89259ffff     call sym.imp.free
0x0000c0ce      498b7e08       mov rdi, qword [r14 + 8]
0x0000c0d2      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000c0d7      7405           je 0xc0de
0x0000c0d9      e88259ffff     call sym.imp.free
0x0000c0de      e89d59ffff     call sym.imp.__errno_location
0x0000c0e3      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3c800000
0x0000c0e9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c0ee      e91ff8ffff     jmp 0xb912
0x0000c0f3      4439da         cmp edx, r11d
0x0000c0f6      0f842ffaffff   je 0xbb2b
0x0000c0fc      ebc1           jmp 0xc0bf
0x0000c0fe      6690           nop
0x0000c100      4d01c9         add r9, r9
0x0000c103      498d4501       lea rax, [r13 + 1]
0x0000c107      4d39e9         cmp r9, r13
0x0000c10a      4c0f46c8       cmovbe r9, rax
0x0000c10e      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000c118      4939c1         cmp r9, rax
0x0000c11b      0f87da030000   ja 0xc4fb
0x0000c121      4c89ce         mov rsi, r9
0x0000c124      4c894c2448     mov qword [rsp + 0x48], r9
0x0000c129      4c89542440     mov qword [rsp + 0x40], r10
0x0000c12e      48c1e605       shl rsi, 5
0x0000c132      48394c2408     cmp qword [rsp + 8], rcx
0x0000c137      4c89442438     mov qword [rsp + 0x38], r8
0x0000c13c      44895c2430     mov dword [rsp + 0x30], r11d
0x0000c141      0f849a000000   je 0xc1e1
0x0000c147      4889cf         mov rdi, rcx
0x0000c14a      e8015cffff     call sym.imp.realloc
0x0000c14f      4885c0         test rax, rax
0x0000c152      4889c1         mov rcx, rax
0x0000c155      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000c15a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c15f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c164      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c169      0f8488030000   je 0xc4f7
0x0000c16f      488b442408     mov rax, qword [rsp + 8]
0x0000c174      493b4708       cmp rax, qword [r15 + 8]
0x0000c178      0f848b000000   je 0xc209
0x0000c17e      49894f08       mov qword [r15 + 8], rcx
0x0000c182      e95df9ffff     jmp 0xbae4
0x0000c187      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c18c      4883feff       cmp rsi, 0xffffffffffffffff
0x0000c190      488d4601       lea rax, [rsi + 1]
0x0000c194      4989742450     mov qword [r12 + 0x50], rsi
0x0000c199      0f841cffffff   je 0xc0bb
0x0000c19f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000c1a4      4889442420     mov qword [rsp + 0x20], rax
0x0000c1a9      e929f9ffff     jmp 0xbad7
0x0000c1ae      4080ff09       cmp dil, 9
0x0000c1b2      0f8703ffffff   ja 0xc0bb
0x0000c1b8      0fbec3         movsx eax, bl
0x0000c1bb      4c89c6         mov rsi, r8
0x0000c1be      4889e9         mov rcx, rbp
0x0000c1c1      83e830         sub eax, 0x30
0x0000c1c4      4898           cdqe
0x0000c1c6      e936fcffff     jmp 0xbe01
0x0000c1cb      83fa05         cmp edx, 5
0x0000c1ce      0f85ebfeffff   jne 0xc0bf
0x0000c1d4      0fb65d00       movzx ebx, byte [rbp]
0x0000c1d8      488d5501       lea rdx, [rbp + 1]
0x0000c1dc      e954f8ffff     jmp 0xba35
0x0000c1e1      4889f7         mov rdi, rsi
0x0000c1e4      e8175bffff     call sym.imp.malloc
0x0000c1e9      4885c0         test rax, rax
0x0000c1ec      4889c1         mov rcx, rax
0x0000c1ef      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000c1f4      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c1f9      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c1fe      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c203      0f8463010000   je 0xc36c
0x0000c209      498b17         mov rdx, qword [r15]
0x0000c20c      488b742408     mov rsi, qword [rsp + 8]
0x0000c211      4889cf         mov rdi, rcx
0x0000c214      4c894c2448     mov qword [rsp + 0x48], r9
0x0000c219      4c89542440     mov qword [rsp + 0x40], r10
0x0000c21e      4c89442438     mov qword [rsp + 0x38], r8
0x0000c223      44895c2430     mov dword [rsp + 0x30], r11d
0x0000c228      48c1e205       shl rdx, 5
0x0000c22c      e8af5affff     call sym.imp.memcpy
0x0000c231      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c236      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c23b      4889c1         mov rcx, rax
0x0000c23e      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c243      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000c248      e931ffffff     jmp 0xc17e
0x0000c24d      4889f7         mov rdi, rsi
0x0000c250      e8ab5affff     call sym.imp.malloc
0x0000c255      4885c0         test rax, rax
0x0000c258      4889c1         mov rcx, rax
0x0000c25b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c260      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000c265      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000c26a      0f84e9000000   je 0xc359
0x0000c270      488d049b       lea rax, [rbx + rbx*4]
0x0000c274      488b742428     mov rsi, qword [rsp + 0x28]
0x0000c279      4889cf         mov rdi, rcx
0x0000c27c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000c281      4c89542438     mov qword [rsp + 0x38], r10
0x0000c286      488d1443       lea rdx, [rbx + rax*2]
0x0000c28a      4c89442430     mov qword [rsp + 0x30], r8
0x0000c28f      48c1e203       shl rdx, 3
0x0000c293      e8485affff     call sym.imp.memcpy
0x0000c298      498b1e         mov rbx, qword [r14]
0x0000c29b      4889c1         mov rcx, rax
0x0000c29e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000c2a3      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000c2a8      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c2ad      e915f9ffff     jmp 0xbbc7
0x0000c2b2      498b07         mov rax, qword [r15]
0x0000c2b5      e9fdf9ffff     jmp 0xbcb7
0x0000c2ba      83fa05         cmp edx, 5
0x0000c2bd      0f85fcfdffff   jne 0xc0bf
0x0000c2c3      410fb61b       movzx ebx, byte [r11]
0x0000c2c7      4c89dd         mov rbp, r11
0x0000c2ca      e96ff7ffff     jmp 0xba3e
0x0000c2cf      4d01c9         add r9, r9
0x0000c2d2      488d4301       lea rax, [rbx + 1]
0x0000c2d6      4939d9         cmp r9, rbx
0x0000c2d9      4c0f46c8       cmovbe r9, rax
0x0000c2dd      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000c2e7      4939c1         cmp r9, rax
0x0000c2ea      0f870b020000   ja 0xc4fb
0x0000c2f0      4c89ce         mov rsi, r9
0x0000c2f3      4c894c2448     mov qword [rsp + 0x48], r9
0x0000c2f8      4c89542440     mov qword [rsp + 0x40], r10
0x0000c2fd      48c1e605       shl rsi, 5
0x0000c301      48394c2408     cmp qword [rsp + 8], rcx
0x0000c306      4c89442438     mov qword [rsp + 0x38], r8
0x0000c30b      4c895c2430     mov qword [rsp + 0x30], r11
0x0000c310      0f84b8010000   je 0xc4ce
0x0000c316      4889cf         mov rdi, rcx
0x0000c319      e8325affff     call sym.imp.realloc
0x0000c31e      498b5708       mov rdx, qword [r15 + 8]
0x0000c322      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000c327      4889c1         mov rcx, rax
0x0000c32a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c32f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c334      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c339      4885c9         test rcx, rcx
0x0000c33c      0f8415020000   je 0xc557
0x0000c342      4839542408     cmp qword [rsp + 8], rdx
0x0000c347      498b07         mov rax, qword [r15]
0x0000c34a      0f84c0010000   je 0xc510
0x0000c350      49894f08       mov qword [r15 + 8], rcx
0x0000c354      e914faffff     jmp 0xbd6d
0x0000c359      498b4f08       mov rcx, qword [r15 + 8]
0x0000c35d      48394c2408     cmp qword [rsp + 8], rcx
0x0000c362      7418           je 0xc37c
0x0000c364      4889cf         mov rdi, rcx
0x0000c367      e8f456ffff     call sym.imp.free
0x0000c36c      498b7e08       mov rdi, qword [r14 + 8]
0x0000c370      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000c375      7405           je 0xc37c
0x0000c377      e8e456ffff     call sym.imp.free
0x0000c37c      e8ff56ffff     call sym.imp.__errno_location
0x0000c381      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c387      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c38c      e981f5ffff     jmp 0xb912
0x0000c391      4889f7         mov rdi, rsi
0x0000c394      e86759ffff     call sym.imp.malloc
0x0000c399      488b542408     mov rdx, qword [rsp + 8]
0x0000c39e      4889c1         mov rcx, rax
0x0000c3a1      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000c3a6      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000c3ab      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c3b0      e9e7f8ffff     jmp 0xbc9c
0x0000c3b5      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c3ba      4883feff       cmp rsi, 0xffffffffffffffff
0x0000c3be      488d4601       lea rax, [rsi + 1]
0x0000c3c2      4989742440     mov qword [r12 + 0x40], rsi
0x0000c3c7      0f84eefcffff   je 0xc0bb
0x0000c3cd      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000c3d2      4889442420     mov qword [rsp + 0x20], rax
0x0000c3d7      e981f9ffff     jmp 0xbd5d
0x0000c3dc      4c89da         mov rdx, r11
0x0000c3df      4883c201       add rdx, 1
0x0000c3e3      0fb60a         movzx ecx, byte [rdx]
0x0000c3e6      8d71d0         lea esi, [rcx - 0x30]
0x0000c3e9      4080fe09       cmp sil, 9
0x0000c3ed      76f0           jbe 0xc3df
0x0000c3ef      80f924         cmp cl, 0x24
0x0000c3f2      0f8556f9ffff   jne 0xbd4e
0x0000c3f8      31c9           xor ecx, ecx
0x0000c3fa      48be99999999.  movabs rsi, 0x1999999999999999
0x0000c404      83e830         sub eax, 0x30
0x0000c407      4c89c2         mov rdx, r8
0x0000c40a      4839f1         cmp rcx, rsi
0x0000c40d      4898           cdqe
0x0000c40f      7707           ja 0xc418
0x0000c411      488d1489       lea rdx, [rcx + rcx*4]
0x0000c415      4801d2         add rdx, rdx
0x0000c418      4c89de         mov rsi, r11
0x0000c41b      31db           xor ebx, ebx
0x0000c41d      4801c2         add rdx, rax
0x0000c420      410fbe4301     movsx eax, byte [r11 + 1]
0x0000c425      0f92c3         setb bl
0x0000c428      4983c301       add r11, 1
0x0000c42c      4889d1         mov rcx, rdx
0x0000c42f      4885db         test rbx, rbx
0x0000c432      8d78d0         lea edi, [rax - 0x30]
0x0000c435      7471           je 0xc4a8
0x0000c437      4080ff09       cmp dil, 9
0x0000c43b      0f877afcffff   ja 0xc0bb
0x0000c441      83e830         sub eax, 0x30
0x0000c444      4c89c2         mov rdx, r8
0x0000c447      4c89de         mov rsi, r11
0x0000c44a      4898           cdqe
0x0000c44c      ebcd           jmp 0xc41b
0x0000c44e      4080ff09       cmp dil, 9
0x0000c452      0f8763fcffff   ja 0xc0bb
0x0000c458      0fbec1         movsx eax, cl
0x0000c45b      4889d5         mov rbp, rdx
0x0000c45e      4c89c1         mov rcx, r8
0x0000c461      83e830         sub eax, 0x30
0x0000c464      4898           cdqe
0x0000c466      e9befaffff     jmp 0xbf29
0x0000c46b      488b742408     mov rsi, qword [rsp + 8]
0x0000c470      48c1e005       shl rax, 5
0x0000c474      4889cf         mov rdi, rcx
0x0000c477      4889c2         mov rdx, rax
0x0000c47a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000c47f      4c89542438     mov qword [rsp + 0x38], r10
0x0000c484      4c89442430     mov qword [rsp + 0x30], r8
0x0000c489      e85258ffff     call sym.imp.memcpy
0x0000c48e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000c493      4889c1         mov rcx, rax
0x0000c496      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000c49b      498b07         mov rax, qword [r15]
0x0000c49e      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000c4a3      e90bf8ffff     jmp 0xbcb3
0x0000c4a8      4080ff09       cmp dil, 9
0x0000c4ac      0f8648ffffff   jbe 0xc3fa
0x0000c4b2      488d5aff       lea rbx, [rdx - 1]
0x0000c4b6      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000c4ba      0f87fbfbffff   ja 0xc0bb
0x0000c4c0      49895c2440     mov qword [r12 + 0x40], rbx
0x0000c4c5      4c8d5e02       lea r11, [rsi + 2]
0x0000c4c9      e98ff8ffff     jmp 0xbd5d
0x0000c4ce      4889f7         mov rdi, rsi
0x0000c4d1      e82a58ffff     call sym.imp.malloc
0x0000c4d6      488b542408     mov rdx, qword [rsp + 8]
0x0000c4db      4889c1         mov rcx, rax
0x0000c4de      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c4e3      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c4e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c4ed      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000c4f2      e942feffff     jmp 0xc339
0x0000c4f7      498b4f08       mov rcx, qword [r15 + 8]
0x0000c4fb      48394c2408     cmp qword [rsp + 8], rcx
0x0000c500      0f855efeffff   jne 0xc364
0x0000c506      e961feffff     jmp 0xc36c
0x0000c50b      0f1f440000     nop dword [rax + rax]
0x0000c510      488b742408     mov rsi, qword [rsp + 8]
0x0000c515      48c1e005       shl rax, 5
0x0000c519      4889cf         mov rdi, rcx
0x0000c51c      4889c2         mov rdx, rax
0x0000c51f      4c894c2448     mov qword [rsp + 0x48], r9
0x0000c524      4c89542440     mov qword [rsp + 0x40], r10
0x0000c529      4c89442438     mov qword [rsp + 0x38], r8
0x0000c52e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000c533      e8a857ffff     call sym.imp.memcpy
0x0000c538      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000c53d      4889c1         mov rcx, rax
0x0000c540      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000c545      498b07         mov rax, qword [r15]
0x0000c548      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000c54d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000c552      e9f9fdffff     jmp 0xc350
0x0000c557      4889d1         mov rcx, rdx
0x0000c55a      eb9f           jmp 0xc4fb
0x0000c55c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000c560      4157           push r15
0x0000c562      4156           push r14
0x0000c564      4989d7         mov r15, rdx
0x0000c567      4155           push r13
0x0000c569      4154           push r12
0x0000c56b      4c8d251e4520.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x210a90
0x0000c572      55             push rbp
0x0000c573      488d2d1e4520.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x210a98 ; "@="
0x0000c57a      53             push rbx
0x0000c57b      4189fd         mov r13d, edi
0x0000c57e      4989f6         mov r14, rsi
0x0000c581      4c29e5         sub rbp, r12
0x0000c584      4883ec08       sub rsp, 8
0x0000c588      48c1fd03       sar rbp, 3
0x0000c58c      e85754ffff     call sym._init
0x0000c591      4885ed         test rbp, rbp
0x0000c594      7420           je 0xc5b6
0x0000c596      31db           xor ebx, ebx
0x0000c598      0f1f84000000.  nop dword [rax + rax]
0x0000c5a0      4c89fa         mov rdx, r15
0x0000c5a3      4c89f6         mov rsi, r14
0x0000c5a6      4489ef         mov edi, r13d
0x0000c5a9      41ff14dc       call qword [r12 + rbx*8]
0x0000c5ad      4883c301       add rbx, 1
0x0000c5b1      4839dd         cmp rbp, rbx
0x0000c5b4      75ea           jne 0xc5a0
0x0000c5b6      4883c408       add rsp, 8
0x0000c5ba      5b             pop rbx
0x0000c5bb      5d             pop rbp
0x0000c5bc      415c           pop r12
0x0000c5be      415d           pop r13
0x0000c5c0      415e           pop r14
0x0000c5c2      415f           pop r15
0x0000c5c4      c3             ret
0x0000c5c5      90             nop
0x0000c5c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000c5d0      f3c3           ret
0x0000c5d2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c5dc      0f1f4000       nop dword [rax]
;-- atexit:
0x0000c5e0      488b15214a20.  mov rdx, qword [obj.__dso_handle]       ; [0x211008:8]=0x211008 obj.__dso_handle
0x0000c5e7      31f6           xor esi, esi
0x0000c5e9      e9f257ffff     jmp sym.imp.__cxa_atexit
0x0000c5ee      0000           add byte [rax], al
