;-- section..plt:
;-- .plt:
0x00001490      ff359a692000   push qword [0x00207e30]                 ; [12] -r-x section size 816 named .plt
0x00001496      ff259c692000   jmp qword [0x00207e38]                  ; [0x207e38:8]=0
0x0000149c      0f1f4000       nop dword [rax]
;-- imp.free:
0x000014a0      ff259a692000   jmp qword [reloc.free]                  ; [0x207e40:8]=0x14a6
0x000014a6      6800000000     push 0
0x000014ab      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000014b0      ff2592692000   jmp qword [reloc.abort]                 ; [0x207e48:8]=0x14b6
0x000014b6      6801000000     push 1
0x000014bb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014c0      ff258a692000   jmp qword [reloc.__errno_location]      ; [0x207e50:8]=0x14c6
0x000014c6      6802000000     push 2
0x000014cb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014d0      ff2582692000   jmp qword [reloc.strncmp]               ; [0x207e58:8]=0x14d6
0x000014d6      6803000000     push 3
0x000014db      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000014e0      ff257a692000   jmp qword [reloc._exit]                 ; [0x207e60:8]=0x14e6
0x000014e6      6804000000     push 4
0x000014eb      e9a0ffffff     jmp sym..plt
;-- imp.strcpy:
0x000014f0      ff2572692000   jmp qword [reloc.strcpy]                ; [0x207e68:8]=0x14f6
0x000014f6      6805000000     push 5
0x000014fb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001500      ff256a692000   jmp qword [reloc.__fpending]            ; [0x207e70:8]=0x1506
0x00001506      6806000000     push 6
0x0000150b      e980ffffff     jmp sym..plt
;-- imp.puts:
0x00001510      ff2562692000   jmp qword [reloc.puts]                  ; [0x207e78:8]=0x1516
0x00001516      6807000000     push 7
0x0000151b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001520      ff255a692000   jmp qword [reloc.textdomain]            ; [0x207e80:8]=0x1526 ; "&\x15"
0x00001526      6808000000     push 8
0x0000152b      e960ffffff     jmp sym..plt
;-- imp.__strtol_internal:
0x00001530      ff2552692000   jmp qword [reloc.__strtol_internal]     ; [0x207e88:8]=0x1536 ; "6\x15"
0x00001536      6809000000     push 9
0x0000153b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001540      ff254a692000   jmp qword [reloc.fclose]                ; [0x207e90:8]=0x1546 ; "F\x15"
0x00001546      680a000000     push 0xa
0x0000154b      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001550      ff2542692000   jmp qword [reloc.bindtextdomain]        ; [0x207e98:8]=0x1556 ; "V\x15"
0x00001556      680b000000     push 0xb
0x0000155b      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001560      ff253a692000   jmp qword [reloc.dcgettext]             ; [0x207ea0:8]=0x1566 ; "f\x15"
0x00001566      680c000000     push 0xc
0x0000156b      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001570      ff2532692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ea8:8]=0x1576 ; "v\x15"
0x00001576      680d000000     push 0xd
0x0000157b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001580      ff252a692000   jmp qword [reloc.strlen]                ; [0x207eb0:8]=0x1586
0x00001586      680e000000     push 0xe
0x0000158b      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001590      ff2522692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207eb8:8]=0x1596
0x00001596      680f000000     push 0xf
0x0000159b      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000015a0      ff251a692000   jmp qword [reloc.getopt_long]           ; [0x207ec0:8]=0x15a6
0x000015a6      6810000000     push 0x10
0x000015ab      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015b0      ff2512692000   jmp qword [reloc.mbrtowc]               ; [0x207ec8:8]=0x15b6
0x000015b6      6811000000     push 0x11
0x000015bb      e9d0feffff     jmp sym..plt
;-- imp.strchr:
0x000015c0      ff250a692000   jmp qword [reloc.strchr]                ; [0x207ed0:8]=0x15c6
0x000015c6      6812000000     push 0x12
0x000015cb      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000015d0      ff2502692000   jmp qword [reloc.strrchr]               ; [0x207ed8:8]=0x15d6
0x000015d6      6813000000     push 0x13
0x000015db      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000015e0      ff25fa682000   jmp qword [reloc.lseek]                 ; [0x207ee0:8]=0x15e6
0x000015e6      6814000000     push 0x14
0x000015eb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x000015f0      ff25f2682000   jmp qword [reloc.memset]                ; [0x207ee8:8]=0x15f6
0x000015f6      6815000000     push 0x15
0x000015fb      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001600      ff25ea682000   jmp qword [reloc.memcmp]                ; [0x207ef0:8]=0x1606
0x00001606      6816000000     push 0x16
0x0000160b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001610      ff25e2682000   jmp qword [reloc.fputs_unlocked]        ; [0x207ef8:8]=0x1616
0x00001616      6817000000     push 0x17
0x0000161b      e970feffff     jmp sym..plt
;-- imp.calloc:
0x00001620      ff25da682000   jmp qword [reloc.calloc]                ; [0x207f00:8]=0x1626 ; "&\x16"
0x00001626      6818000000     push 0x18
0x0000162b      e960feffff     jmp sym..plt
;-- imp.strcmp:
0x00001630      ff25d2682000   jmp qword [reloc.strcmp]                ; [0x207f08:8]=0x1636 ; "6\x16"
0x00001636      6819000000     push 0x19
0x0000163b      e950feffff     jmp sym..plt
;-- imp.strtol:
0x00001640      ff25ca682000   jmp qword [reloc.strtol]                ; [0x207f10:8]=0x1646 ; "F\x16"
0x00001646      681a000000     push 0x1a
0x0000164b      e940feffff     jmp sym..plt
;-- imp.memcpy:
0x00001650      ff25c2682000   jmp qword [reloc.memcpy]                ; [0x207f18:8]=0x1656 ; "V\x16"
0x00001656      681b000000     push 0x1b
0x0000165b      e930feffff     jmp sym..plt
;-- imp.kill:
0x00001660      ff25ba682000   jmp qword [reloc.kill]                  ; [0x207f20:8]=0x1666 ; "f\x16"
0x00001666      681c000000     push 0x1c
0x0000166b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001670      ff25b2682000   jmp qword [reloc.fileno]                ; [0x207f28:8]=0x1676 ; "v\x16"
0x00001676      681d000000     push 0x1d
0x0000167b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001680      ff25aa682000   jmp qword [reloc.malloc]                ; [0x207f30:8]=0x1686
0x00001686      681e000000     push 0x1e
0x0000168b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001690      ff25a2682000   jmp qword [reloc.fflush]                ; [0x207f38:8]=0x1696
0x00001696      681f000000     push 0x1f
0x0000169b      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000016a0      ff259a682000   jmp qword [reloc.nl_langinfo]           ; [0x207f40:8]=0x16a6
0x000016a6      6820000000     push 0x20                               ; "@"
0x000016ab      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000016b0      ff2592682000   jmp qword [reloc.__freading]            ; [0x207f48:8]=0x16b6
0x000016b6      6821000000     push 0x21                               ; '!'
0x000016bb      e9d0fdffff     jmp sym..plt
;-- imp.strsignal:
0x000016c0      ff258a682000   jmp qword [reloc.strsignal]             ; [0x207f50:8]=0x16c6
0x000016c6      6822000000     push 0x22                               ; '"'
0x000016cb      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000016d0      ff2582682000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x16d6
0x000016d6      6823000000     push 0x23                               ; '#'
0x000016db      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000016e0      ff257a682000   jmp qword [reloc.setlocale]             ; [0x207f60:8]=0x16e6
0x000016e6      6824000000     push 0x24                               ; '$'
0x000016eb      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000016f0      ff2572682000   jmp qword [reloc.__printf_chk]          ; [0x207f68:8]=0x16f6
0x000016f6      6825000000     push 0x25                               ; '%'
0x000016fb      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001700      ff256a682000   jmp qword [reloc.error]                 ; [0x207f70:8]=0x1706
0x00001706      6826000000     push 0x26                               ; '&'
0x0000170b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001710      ff2562682000   jmp qword [reloc.fseeko]                ; [0x207f78:8]=0x1716
0x00001716      6827000000     push 0x27                               ; '''
0x0000171b      e970fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001720      ff255a682000   jmp qword [reloc.__cxa_atexit]          ; [0x207f80:8]=0x1726 ; "&\x17"
0x00001726      6828000000     push 0x28                               ; '(' ; "xf\x02"
0x0000172b      e960fdffff     jmp sym..plt
;-- imp.__libc_current_sigrtmin:
0x00001730      ff2552682000   jmp qword [reloc.__libc_current_sigrtmin] ; [0x207f88:8]=0x1736 ; "6\x17"
0x00001736      6829000000     push 0x29                               ; ')'
0x0000173b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001740      ff254a682000   jmp qword [reloc.exit]                  ; [0x207f90:8]=0x1746 ; "F\x17"
0x00001746      682a000000     push 0x2a                               ; '*'
0x0000174b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001750      ff2542682000   jmp qword [reloc.fwrite]                ; [0x207f98:8]=0x1756 ; "V\x17"
0x00001756      682b000000     push 0x2b                               ; '+'
0x0000175b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001760      ff253a682000   jmp qword [reloc.__fprintf_chk]         ; [0x207fa0:8]=0x1766 ; "f\x17"
0x00001766      682c000000     push 0x2c                               ; ','
0x0000176b      e920fdffff     jmp sym..plt
;-- imp.__libc_current_sigrtmax:
0x00001770      ff2532682000   jmp qword [reloc.__libc_current_sigrtmax] ; [0x207fa8:8]=0x1776 ; "v\x17"
0x00001776      682d000000     push 0x2d                               ; '-'
0x0000177b      e910fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001780      ff252a682000   jmp qword [reloc.mbsinit]               ; [0x207fb0:8]=0x1786
0x00001786      682e000000     push 0x2e                               ; '.'
0x0000178b      e900fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001790      ff2522682000   jmp qword [reloc.iswprint]              ; [0x207fb8:8]=0x1796
0x00001796      682f000000     push 0x2f                               ; '/'
0x0000179b      e9f0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000017a0      ff251a682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fc0:8]=0x17a6
0x000017a6      6830000000     push 0x30                               ; '0'
0x000017ab      e9e0fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000017b0      ff2512682000   jmp qword [reloc.__sprintf_chk]         ; [0x207fc8:8]=0x17b6
0x000017b6      6831000000     push 0x31                               ; '1'
0x000017bb      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000017c0      .qword 0x90660020682a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000017c8      0000           add byte [rax], al
0x000017ca      0000           add byte [rax], al
0x000017cc      0000           add byte [rax], al
0x000017ce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000017d0      4157           push r15                                ; [14] -r-x section size 14654 named .text
0x000017d2      4156           push r14
0x000017d4      4531ff         xor r15d, r15d
0x000017d7      4155           push r13
0x000017d9      4154           push r12
0x000017db      4189fc         mov r12d, edi
0x000017de      55             push rbp
0x000017df      53             push rbx
0x000017e0      4889f3         mov rbx, rsi
0x000017e3      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x000017e8      4531ed         xor r13d, r13d
0x000017eb      4883ec68       sub rsp, 0x68
0x000017ef      488b3e         mov rdi, qword [rsi]
0x000017f2      64488b042528.  mov rax, qword fs:[0x28]
0x000017fb      4889442458     mov qword [rsp + 0x58], rax
0x00001800      31c0           xor eax, eax
0x00001802      4c8d742420     lea r14, [rsp + 0x20]
0x00001807      e8540d0000     call sym.set_program_name
0x0000180c      488d356e4500.  lea rsi, [0x00005d81]
0x00001813      bf06000000     mov edi, 6
0x00001818      e8c3feffff     call sym.imp.setlocale
0x0000181d      488d35aa3900.  lea rsi, str.usr_local_share_locale     ; 0x51ce ; "/usr/local/share/locale"
0x00001824      488d3d783900.  lea rdi, [0x000051a3]                   ; "coreutils"
0x0000182b      e820fdffff     call sym.imp.bindtextdomain
0x00001830      488d3d6c3900.  lea rdi, [0x000051a3]                   ; "coreutils"
0x00001837      e8e4fcffff     call sym.imp.textdomain
0x0000183c      488d3d6d0c00.  lea rdi, sym.close_stdout               ; 0x24b0 ; "USH\x83\xec\bH\x8b=\x8b] "
0x00001843      e8b8380000     call sym.atexit
0x00001848      0f1f84000000.  nop dword [rax + rax]
0x00001850      488d0dc96220.  lea rcx, obj.long_options               ; 0x207b20 ; "GR"
0x00001857      488d15023f00.  lea rdx, obj.short_options              ; 0x5760 ; "0::1::2::3::4::5::6::7::8::9::A::B::C::D::E::F::G::H::I::J::K::M::N::O::P::Q::R::S::T::U::V::W::X::Y::Z::Lln:s:t"
0x0000185e      4531c0         xor r8d, r8d
0x00001861      4889de         mov rsi, rbx
0x00001864      4489e7         mov edi, r12d
0x00001867      e834fdffff     call sym.imp.getopt_long
0x0000186c      83f8ff         cmp eax, 0xffffffff
0x0000186f      4189c0         mov r8d, eax
0x00001872      0f8458010000   je 0x19d0
0x00001878      4183f84c       cmp r8d, 0x4c
0x0000187c      7432           je 0x18b0
0x0000187e      7e50           jle 0x18d0
0x00001880      4183f86c       cmp r8d, 0x6c
0x00001884      7430           je 0x18b6
0x00001886      0f8e1d010000   jle 0x19a9
0x0000188c      4183f873       cmp r8d, 0x73
0x00001890      0f8492000000   je 0x1928
0x00001896      4183f874       cmp r8d, 0x74
0x0000189a      7414           je 0x18b0
0x0000189c      4183f86e       cmp r8d, 0x6e
0x000018a0      0f8482000000   je 0x1928
0x000018a6      bf01000000     mov edi, 1
0x000018ab      e810060000     call sym.usage
0x000018b0      41bf01000000   mov r15d, 1
0x000018b6      4584ed         test r13b, r13b
0x000018b9      0f8581040000   jne 0x1d40
0x000018bf      41bd01000000   mov r13d, 1
0x000018c5      eb89           jmp 0x1850
0x000018c7      660f1f840000.  nop word [rax + rax]
0x000018d0      4183f839       cmp r8d, 0x39
0x000018d4      0f8fe2000000   jg 0x19bc
0x000018da      4183f830       cmp r8d, 0x30
0x000018de      7d70           jge 0x1950
0x000018e0      4181f87dffff.  cmp r8d, 0xffffff7d                     ; 4294967165
0x000018e7      0f8504040000   jne 0x1cf1
0x000018ed      488b3d546920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x000018f4      488b0d156720.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x57ff str.8.31
0x000018fb      4c8d05f93800.  lea r8, str.Paul_Eggert                 ; 0x51fb ; "Paul Eggert"
0x00001902      488d15963800.  lea rdx, str.GNU_coreutils              ; 0x519f ; "GNU coreutils"
0x00001909      488d35143800.  lea rsi, str.kill                       ; 0x5124 ; "kill"
0x00001910      4531c9         xor r9d, r9d
0x00001913      31c0           xor eax, eax
0x00001915      e8362e0000     call sym.version_etc
0x0000191a      31ff           xor edi, edi
0x0000191c      e81ffeffff     call sym.imp.exit
0x00001921      0f1f80000000.  nop dword [rax]
0x00001928      488b3d296920.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208258:8]=0
0x0000192f      83fdff         cmp ebp, 0xffffffff
0x00001932      0f85cd030000   jne 0x1d05
0x00001938      4c89f6         mov rsi, r14
0x0000193b      e860090000     call sym.operand2sig
0x00001940      85c0           test eax, eax
0x00001942      89c5           mov ebp, eax
0x00001944      0f8906ffffff   jns 0x1850
0x0000194a      e957ffffff     jmp 0x18a6
0x0000194f      90             nop
0x00001950      486305f96820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208250:4]=0
0x00001957      83f802         cmp eax, 2
0x0000195a      756b           jne 0x19c7
0x0000195c      488b0df56820.  mov rcx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208258:8]=0
0x00001963      488d74c3f8     lea rsi, [rbx + rax*8 - 8]
0x00001968      488b16         mov rdx, qword [rsi]
0x0000196b      4885c9         test rcx, rcx
0x0000196e      741a           je 0x198a
0x00001970      488d4202       lea rax, [rdx + 2]
0x00001974      4839c1         cmp rcx, rax
0x00001977      0f85e9030000   jne 0x1d66
0x0000197d      488d7a01       lea rdi, [rdx + 1]
0x00001981      48893dd06820.  mov qword [obj.optarg], rdi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208258:8]=0
0x00001988      eba5           jmp 0x192f
0x0000198a      4889d7         mov rdi, rdx
0x0000198d      4883c9ff       or rcx, 0xffffffffffffffff
0x00001991      31c0           xor eax, eax
0x00001993      f2ae           repne scasb al, byte [rdi]
0x00001995      48f7d1         not rcx
0x00001998      488d4c0aff     lea rcx, [rdx + rcx - 1]
0x0000199d      48890db46820.  mov qword [obj.optarg], rcx             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x208258:8]=0
0x000019a4      488b16         mov rdx, qword [rsi]
0x000019a7      ebc7           jmp 0x1970
0x000019a9      4183f85a       cmp r8d, 0x5a
0x000019ad      0f8ff3feffff   jg 0x18a6
0x000019b3      486305966820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208250:4]=0
0x000019ba      eba0           jmp 0x195c
0x000019bc      4183f841       cmp r8d, 0x41
0x000019c0      7df1           jge 0x19b3
0x000019c2      e9dffeffff     jmp 0x18a6
0x000019c7      83e801         sub eax, 1
0x000019ca      890580682000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208250:4]=0
0x000019d0      83fdff         cmp ebp, 0xffffffff
0x000019d3      486305766820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x208250:4]=0
0x000019da      0f8422010000   je 0x1b02
0x000019e0      4584ed         test r13b, r13b
0x000019e3      ba05000000     mov edx, 5
0x000019e8      488d35413d00.  lea rsi, str.cannot_combine_signal_with__l_or__t ; 0x5730 ; "cannot combine signal with -l or -t"
0x000019ef      0f8557030000   jne 0x1d4c
0x000019f5      4439e0         cmp eax, r12d
0x000019f8      ba05000000     mov edx, 5
0x000019fd      488d35033800.  lea rsi, str.no_process_ID_specified    ; 0x5207 ; "no process ID specified"
0x00001a04      0f8d42030000   jge 0x1d4c
0x00001a0a      4c8d2cc3       lea r13, [rbx + rax*8]
0x00001a0e      4c8d7c2418     lea r15, [rsp + 0x18]
0x00001a13      31db           xor ebx, ebx
0x00001a15      e8a6faffff     call sym.imp.__errno_location
0x00001a1a      4d8b6500       mov r12, qword [r13]
0x00001a1e      4989c6         mov r14, rax
0x00001a21      eb54           jmp 0x1a77
0x00001a23      488b542418     mov rdx, qword [rsp + 0x18]
0x00001a28      4939d4         cmp r12, rdx
0x00001a2b      7409           je 0x1a36
0x00001a2d      803a00         cmp byte [rdx], 0
0x00001a30      0f8497000000   je 0x1acd
0x00001a36      4c89e7         mov rdi, r12
0x00001a39      e832280000     call sym.quote
0x00001a3e      488d35eb3700.  lea rsi, str.s:_invalid_process_id      ; 0x5230 ; "%s: invalid process id"
0x00001a45      4889c3         mov rbx, rax
0x00001a48      ba05000000     mov edx, 5
0x00001a4d      31ff           xor edi, edi
0x00001a4f      e80cfbffff     call sym.imp.dcgettext
0x00001a54      4889d9         mov rcx, rbx
0x00001a57      4889c2         mov rdx, rax
0x00001a5a      31f6           xor esi, esi
0x00001a5c      31ff           xor edi, edi
0x00001a5e      31c0           xor eax, eax
0x00001a60      bb01000000     mov ebx, 1
0x00001a65      e896fcffff     call sym.imp.error
0x00001a6a      4983c508       add r13, 8
0x00001a6e      4d8b6500       mov r12, qword [r13]
0x00001a72      4d85e4         test r12, r12
0x00001a75      7431           je 0x1aa8
0x00001a77      31c9           xor ecx, ecx
0x00001a79      41c706000000.  mov dword [r14], 0
0x00001a80      ba0a000000     mov edx, 0xa
0x00001a85      4c89fe         mov rsi, r15
0x00001a88      4c89e7         mov rdi, r12
0x00001a8b      e8a0faffff     call sym.imp.__strtol_internal
0x00001a90      41833e22       cmp dword [r14], 0x22
0x00001a94      74a0           je 0x1a36
0x00001a96      4863d0         movsxd rdx, eax
0x00001a99      4839d0         cmp rax, rdx
0x00001a9c      7598           jne 0x1a36
0x00001a9e      eb83           jmp 0x1a23
0x00001aa0      31db           xor ebx, ebx
0x00001aa2      660f1f440000   nop word [rax + rax]
0x00001aa8      488b742458     mov rsi, qword [rsp + 0x58]
0x00001aad      644833342528.  xor rsi, qword fs:[0x28]
0x00001ab6      89d8           mov eax, ebx
0x00001ab8      0f857d020000   jne 0x1d3b
0x00001abe      4883c468       add rsp, 0x68
0x00001ac2      5b             pop rbx
0x00001ac3      5d             pop rbp
0x00001ac4      415c           pop r12
0x00001ac6      415d           pop r13
0x00001ac8      415e           pop r14
0x00001aca      415f           pop r15
0x00001acc      c3             ret
0x00001acd      89ee           mov esi, ebp
0x00001acf      89c7           mov edi, eax
0x00001ad1      e88afbffff     call sym.imp.kill
0x00001ad6      85c0           test eax, eax
0x00001ad8      7490           je 0x1a6a
0x00001ada      4c89e7         mov rdi, r12
0x00001add      bb01000000     mov ebx, 1
0x00001ae2      e889270000     call sym.quote
0x00001ae7      418b36         mov esi, dword [r14]
0x00001aea      488d15233d00.  lea rdx, [0x00005814]                   ; "%s"
0x00001af1      4889c1         mov rcx, rax
0x00001af4      31ff           xor edi, edi
0x00001af6      31c0           xor eax, eax
0x00001af8      e803fcffff     call sym.imp.error
0x00001afd      e968ffffff     jmp 0x1a6a
0x00001b02      4584ed         test r13b, r13b
0x00001b05      0f8493020000   je 0x1d9e
0x00001b0b      31ed           xor ebp, ebp
0x00001b0d      4139c4         cmp r12d, eax
0x00001b10      7e04           jle 0x1b16
0x00001b12      488d2cc3       lea rbp, [rbx + rax*8]
0x00001b16      4584ff         test r15b, r15b
0x00001b19      0f84dc000000   je 0x1bfb
0x00001b1f      4c8d642440     lea r12, [rsp + 0x40]
0x00001b24      4531ed         xor r13d, r13d
0x00001b27      bb01000000     mov ebx, 1
0x00001b2c      0f1f4000       nop dword [rax]
0x00001b30      4c89e6         mov rsi, r12
0x00001b33      89df           mov edi, ebx
0x00001b35      e826320000     call sym.sig2str
0x00001b3a      85c0           test eax, eax
0x00001b3c      7545           jne 0x1b83
0x00001b3e      4c89e2         mov rdx, r12
0x00001b41      8b0a           mov ecx, dword [rdx]
0x00001b43      4883c204       add rdx, 4
0x00001b47      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00001b4d      f7d1           not ecx
0x00001b4f      21c8           and eax, ecx
0x00001b51      2580808080     and eax, 0x80808080
0x00001b56      74e9           je 0x1b41
0x00001b58      89c1           mov ecx, eax
0x00001b5a      c1e910         shr ecx, 0x10
0x00001b5d      a980800000     test eax, 0x8080
0x00001b62      0f44c1         cmove eax, ecx
0x00001b65      488d4a02       lea rcx, [rdx + 2]
0x00001b69      89c6           mov esi, eax
0x00001b6b      480f44d1       cmove rdx, rcx
0x00001b6f      4000c6         add sil, al
0x00001b72      4489e8         mov eax, r13d
0x00001b75      4883da03       sbb rdx, 3
0x00001b79      4c29e2         sub rdx, r12
0x00001b7c      4839c2         cmp rdx, rax
0x00001b7f      440f47ea       cmova r13d, edx
0x00001b83      83c301         add ebx, 1
0x00001b86      83fb41         cmp ebx, 0x41
0x00001b89      75a5           jne 0x1b30
0x00001b8b      31db           xor ebx, ebx
0x00001b8d      4885ed         test rbp, rbp
0x00001b90      4c8d35353600.  lea r14, [0x000051cc]                   ; "?"
0x00001b97      750e           jne 0x1ba7
0x00001b99      e9ee000000     jmp 0x1c8c
0x00001b9e      bb01000000     mov ebx, 1
0x00001ba3      4883c508       add rbp, 8
0x00001ba7      488b7d00       mov rdi, qword [rbp]
0x00001bab      4885ff         test rdi, rdi
0x00001bae      0f84f4feffff   je 0x1aa8
0x00001bb4      4c89e6         mov rsi, r12
0x00001bb7      e8e4060000     call sym.operand2sig
0x00001bbc      85c0           test eax, eax
0x00001bbe      4189c7         mov r15d, eax
0x00001bc1      78db           js 0x1b9e
0x00001bc3      89c7           mov edi, eax
0x00001bc5      e8f6faffff     call sym.imp.strsignal
0x00001bca      4885c0         test rax, rax
0x00001bcd      488d354b3600.  lea rsi, str.d____s__s                  ; 0x521f ; "%*d %-*s %s\n"
0x00001bd4      4489f9         mov ecx, r15d
0x00001bd7      490f44c6       cmove rax, r14
0x00001bdb      4883ec08       sub rsp, 8
0x00001bdf      4d89e1         mov r9, r12
0x00001be2      50             push rax
0x00001be3      4589e8         mov r8d, r13d
0x00001be6      ba02000000     mov edx, 2
0x00001beb      bf01000000     mov edi, 1
0x00001bf0      31c0           xor eax, eax
0x00001bf2      e8f9faffff     call sym.imp.__printf_chk
0x00001bf7      59             pop rcx
0x00001bf8      5e             pop rsi
0x00001bf9      eba8           jmp 0x1ba3
0x00001bfb      31db           xor ebx, ebx
0x00001bfd      4885ed         test rbp, rbp
0x00001c00      4c8d642440     lea r12, [rsp + 0x40]
0x00001c05      751d           jne 0x1c24
0x00001c07      eb52           jmp 0x1c5b
0x00001c09      488b5500       mov rdx, qword [rbp]
0x00001c0d      0fbe0a         movsx ecx, byte [rdx]
0x00001c10      83e930         sub ecx, 0x30
0x00001c13      83f909         cmp ecx, 9
0x00001c16      772c           ja 0x1c44
0x00001c18      4c89e7         mov rdi, r12
0x00001c1b      e8f0f8ffff     call sym.imp.puts
0x00001c20      4883c508       add rbp, 8
0x00001c24      488b7d00       mov rdi, qword [rbp]
0x00001c28      4885ff         test rdi, rdi
0x00001c2b      0f8477feffff   je 0x1aa8
0x00001c31      4c89e6         mov rsi, r12
0x00001c34      e867060000     call sym.operand2sig
0x00001c39      85c0           test eax, eax
0x00001c3b      79cc           jns 0x1c09
0x00001c3d      bb01000000     mov ebx, 1
0x00001c42      ebdc           jmp 0x1c20
0x00001c44      488d35e13500.  lea rsi, [0x0000522c]                   ; "%d\n"
0x00001c4b      89c2           mov edx, eax
0x00001c4d      bf01000000     mov edi, 1
0x00001c52      31c0           xor eax, eax
0x00001c54      e897faffff     call sym.imp.__printf_chk
0x00001c59      ebc5           jmp 0x1c20
0x00001c5b      bb01000000     mov ebx, 1
0x00001c60      eb12           jmp 0x1c74
0x00001c62      660f1f440000   nop word [rax + rax]
0x00001c68      83c301         add ebx, 1
0x00001c6b      83fb41         cmp ebx, 0x41
0x00001c6e      0f842cfeffff   je 0x1aa0
0x00001c74      4c89e6         mov rsi, r12
0x00001c77      89df           mov edi, ebx
0x00001c79      e8e2300000     call sym.sig2str
0x00001c7e      85c0           test eax, eax
0x00001c80      75e6           jne 0x1c68
0x00001c82      4c89e7         mov rdi, r12
0x00001c85      e886f8ffff     call sym.imp.puts
0x00001c8a      ebdc           jmp 0x1c68
0x00001c8c      bb01000000     mov ebx, 1
0x00001c91      4c89f5         mov rbp, r14
0x00001c94      eb16           jmp 0x1cac
0x00001c96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ca0      83c301         add ebx, 1
0x00001ca3      83fb41         cmp ebx, 0x41
0x00001ca6      0f84f4fdffff   je 0x1aa0
0x00001cac      4c89e6         mov rsi, r12
0x00001caf      89df           mov edi, ebx
0x00001cb1      e8aa300000     call sym.sig2str
0x00001cb6      85c0           test eax, eax
0x00001cb8      75e6           jne 0x1ca0
0x00001cba      89df           mov edi, ebx
0x00001cbc      e8fff9ffff     call sym.imp.strsignal
0x00001cc1      4885c0         test rax, rax
0x00001cc4      488d35543500.  lea rsi, str.d____s__s                  ; 0x521f ; "%*d %-*s %s\n"
0x00001ccb      ba02000000     mov edx, 2
0x00001cd0      480f44c5       cmove rax, rbp
0x00001cd4      4883ec08       sub rsp, 8
0x00001cd8      4d89e1         mov r9, r12
0x00001cdb      50             push rax
0x00001cdc      4589e8         mov r8d, r13d
0x00001cdf      89d9           mov ecx, ebx
0x00001ce1      bf01000000     mov edi, 1
0x00001ce6      31c0           xor eax, eax
0x00001ce8      e803faffff     call sym.imp.__printf_chk
0x00001ced      58             pop rax
0x00001cee      5a             pop rdx
0x00001cef      ebaf           jmp 0x1ca0
0x00001cf1      4181f87effff.  cmp r8d, 0xffffff7e                     ; 4294967166
0x00001cf8      0f85a8fbffff   jne 0x18a6
0x00001cfe      31ff           xor edi, edi
0x00001d00      e8bb010000     call sym.usage
0x00001d05      e866250000     call sym.quote
0x00001d0a      488d35d73900.  lea rsi, str.s:_multiple_signals_specified ; 0x56e8 ; "%s: multiple signals specified"
0x00001d11      4889c3         mov rbx, rax
0x00001d14      ba05000000     mov edx, 5
0x00001d19      31ff           xor edi, edi
0x00001d1b      e840f8ffff     call sym.imp.dcgettext
0x00001d20      31ff           xor edi, edi
0x00001d22      4889c2         mov rdx, rax
0x00001d25      4889d9         mov rcx, rbx
0x00001d28      31f6           xor esi, esi
0x00001d2a      31c0           xor eax, eax
0x00001d2c      e8cff9ffff     call sym.imp.error
0x00001d31      bf01000000     mov edi, 1
0x00001d36      e885010000     call sym.usage
0x00001d3b      e850f8ffff     call sym.imp.__stack_chk_fail
0x00001d40      488d35c13900.  lea rsi, str.multiple__l_or__t_options_specified ; 0x5708 ; "multiple -l or -t options specified"
0x00001d47      ba05000000     mov edx, 5
0x00001d4c      31ff           xor edi, edi
0x00001d4e      e80df8ffff     call sym.imp.dcgettext
0x00001d53      31f6           xor esi, esi
0x00001d55      4889c2         mov rdx, rax
0x00001d58      31ff           xor edi, edi
0x00001d5a      31c0           xor eax, eax
0x00001d5c      e89ff9ffff     call sym.imp.error
0x00001d61      e940fbffff     jmp 0x18a6
0x00001d66      488d35793400.  lea rsi, str.invalid_option_____c       ; 0x51e6 ; "invalid option -- %c"
0x00001d6d      ba05000000     mov edx, 5
0x00001d72      31ff           xor edi, edi
0x00001d74      448944240c     mov dword [rsp + 0xc], r8d
0x00001d79      e8e2f7ffff     call sym.imp.dcgettext
0x00001d7e      448b44240c     mov r8d, dword [rsp + 0xc]
0x00001d83      4889c2         mov rdx, rax
0x00001d86      31ff           xor edi, edi
0x00001d88      31f6           xor esi, esi
0x00001d8a      31c0           xor eax, eax
0x00001d8c      4489c1         mov ecx, r8d
0x00001d8f      e86cf9ffff     call sym.imp.error
0x00001d94      bf01000000     mov edi, 1
0x00001d99      e822010000     call sym.usage
0x00001d9e      bd0f000000     mov ebp, 0xf
0x00001da3      e94dfcffff     jmp 0x19f5
0x00001da8      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001db0      31ed           xor ebp, ebp
0x00001db2      4989d1         mov r9, rdx
0x00001db5      5e             pop rsi
0x00001db6      4889e2         mov rdx, rsp
0x00001db9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001dbd      50             push rax
0x00001dbe      54             push rsp
0x00001dbf      4c8d052a3300.  lea r8, sym.__libc_csu_fini             ; 0x50f0
0x00001dc6      488d0db33200.  lea rcx, sym.__libc_csu_init            ; 0x5080 ; "AWAVI\x89\xd7AUATL\x8d%~* "
0x00001dcd      488d3dfcf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x17d0 ; "AWAVE1\xffAUATA\x89\xfcUSH\x89\xf3\xbd\xff\xff\xff\xffE1\xedH\x83\xechH\x8b>dH\x8b\x04%("
0x00001dd4      ff15fe612000   call qword [reloc.__libc_start_main]    ; [0x207fd8:8]=0
0x00001dda      f4             hlt
0x00001ddb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001de0      488d3d416420.  lea rdi, obj.__TMC_END                  ; 0x208228
0x00001de7      55             push rbp
0x00001de8      488d05396420.  lea rax, obj.__TMC_END                  ; 0x208228
0x00001def      4839f8         cmp rax, rdi
0x00001df2      4889e5         mov rbp, rsp
0x00001df5      7419           je 0x1e10
0x00001df7      488b05d26120.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd0:8]=0
0x00001dfe      4885c0         test rax, rax
0x00001e01      740d           je 0x1e10
0x00001e03      5d             pop rbp
0x00001e04      ffe0           jmp rax
0x00001e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e10      5d             pop rbp
0x00001e11      c3             ret
0x00001e12      0f1f4000       nop dword [rax]
0x00001e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001e20      488d3d016420.  lea rdi, obj.__TMC_END                  ; 0x208228
0x00001e27      488d35fa6320.  lea rsi, obj.__TMC_END                  ; 0x208228
0x00001e2e      55             push rbp
0x00001e2f      4829fe         sub rsi, rdi
0x00001e32      4889e5         mov rbp, rsp
0x00001e35      48c1fe03       sar rsi, 3
0x00001e39      4889f0         mov rax, rsi
0x00001e3c      48c1e83f       shr rax, 0x3f
0x00001e40      4801c6         add rsi, rax
0x00001e43      48d1fe         sar rsi, 1
0x00001e46      7418           je 0x1e60
0x00001e48      488b05996120.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe8:8]=0
0x00001e4f      4885c0         test rax, rax
0x00001e52      740c           je 0x1e60
0x00001e54      5d             pop rbp
0x00001e55      ffe0           jmp rax
0x00001e57      660f1f840000.  nop word [rax + rax]
0x00001e60      5d             pop rbp
0x00001e61      c3             ret
0x00001e62      0f1f4000       nop dword [rax]
0x00001e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001e70      803d11642000.  cmp byte [obj.completed.7697], 0        ; [0x208288:1]=0
0x00001e77      752f           jne 0x1ea8
0x00001e79      48833d6f6120.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff0:8]=0
0x00001e81      55             push rbp
0x00001e82      4889e5         mov rbp, rsp
0x00001e85      740c           je 0x1e93
0x00001e87      488b3d7a6120.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001e8e      e82df9ffff     call sym..plt.got
0x00001e93      e848ffffff     call sym.deregister_tm_clones
0x00001e98      c605e9632000.  mov byte [obj.completed.7697], 1        ; [0x208288:1]=0
0x00001e9f      5d             pop rbp
0x00001ea0      c3             ret
0x00001ea1      0f1f80000000.  nop dword [rax]
0x00001ea8      f3c3           ret
0x00001eaa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001eb0      55             push rbp
0x00001eb1      4889e5         mov rbp, rsp
0x00001eb4      5d             pop rbp
0x00001eb5      e966ffffff     jmp sym.register_tm_clones
0x00001eba      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001ec0      4155           push r13
0x00001ec2      4154           push r12
0x00001ec4      ba05000000     mov edx, 5
0x00001ec9      55             push rbp
0x00001eca      53             push rbx
0x00001ecb      89fd           mov ebp, edi
0x00001ecd      4881ec880000.  sub rsp, 0x88
0x00001ed4      488b1dc56320.  mov rbx, qword [obj.program_name]       ; [0x2082a0:8]=0
0x00001edb      64488b042528.  mov rax, qword fs:[0x28]
0x00001ee4      4889442478     mov qword [rsp + 0x78], rax
0x00001ee9      31c0           xor eax, eax
0x00001eeb      85ff           test edi, edi
0x00001eed      742e           je 0x1f1d
0x00001eef      488d356a3300.  lea rsi, str.Try___s___help__for_more_information. ; 0x5260 ; "Try '%s --help' for more information.\n"
0x00001ef6      31ff           xor edi, edi
0x00001ef8      e863f6ffff     call sym.imp.dcgettext
0x00001efd      488b3d7c6320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x208280:8]=0
0x00001f04      4889c2         mov rdx, rax
0x00001f07      4889d9         mov rcx, rbx
0x00001f0a      be01000000     mov esi, 1
0x00001f0f      31c0           xor eax, eax
0x00001f11      e84af8ffff     call sym.imp.__fprintf_chk
0x00001f16      89ef           mov edi, ebp
0x00001f18      e823f8ffff     call sym.imp.exit
0x00001f1d      488d35643300.  lea rsi, str.Usage:__s___s_SIGNAL____SIGNAL__PID...____or:___s__l__SIGNAL_...____or:___s__t__SIGNAL_... ; 0x5288 ; "Usage: %s [-s SIGNAL | -SIGNAL] PID...\n  or:  %s -l [SIGNAL]...\n  or:  %s -t [SIGNAL]...\n"
0x00001f24      31ff           xor edi, edi
0x00001f26      e835f6ffff     call sym.imp.dcgettext
0x00001f2b      4889d9         mov rcx, rbx
0x00001f2e      4989d8         mov r8, rbx
0x00001f31      4889da         mov rdx, rbx
0x00001f34      4889c6         mov rsi, rax
0x00001f37      bf01000000     mov edi, 1
0x00001f3c      31c0           xor eax, eax
0x00001f3e      e8adf7ffff     call sym.imp.__printf_chk
0x00001f43      488b1dfe6220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00001f4a      488d35973300.  lea rsi, str.Send_signals_to_processes__or_list_signals. ; 0x52e8 ; "Send signals to processes, or list signals.\n"
0x00001f51      ba05000000     mov edx, 5
0x00001f56      31ff           xor edi, edi
0x00001f58      e803f6ffff     call sym.imp.dcgettext
0x00001f5d      4889de         mov rsi, rbx
0x00001f60      4889c7         mov rdi, rax
0x00001f63      e8a8f6ffff     call sym.imp.fputs_unlocked
0x00001f68      488b1dd96220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00001f6f      488d35a23300.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x5318 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001f76      ba05000000     mov edx, 5
0x00001f7b      31ff           xor edi, edi
0x00001f7d      e8def5ffff     call sym.imp.dcgettext
0x00001f82      4889de         mov rsi, rbx
0x00001f85      4889c7         mov rdi, rax
0x00001f88      e883f6ffff     call sym.imp.fputs_unlocked
0x00001f8d      488b1db46220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00001f94      488d35cd3300.  lea rsi, str.s____signal_SIGNAL___SIGNAL_____________________specify_the_name_or_number_of_the_signal_to_be_sent_____l____list_______list_signal_names__or_convert_signal_names_to_from_numbers_____t____table______print_a_table_of_signal_information ; 0x5368 ; "  -s, --signal=SIGNAL, -SIGNAL\n                   specify the name or number of the signal to be sent\n  -l, --list       list signal names, or convert signal names to/from numbers\n  -t, --table      print a table of signal information\n"
0x00001f9b      ba05000000     mov edx, 5
0x00001fa0      31ff           xor edi, edi
0x00001fa2      e8b9f5ffff     call sym.imp.dcgettext
0x00001fa7      4889de         mov rsi, rbx
0x00001faa      4889c7         mov rdi, rax
0x00001fad      e85ef6ffff     call sym.imp.fputs_unlocked
0x00001fb2      488b1d8f6220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00001fb9      488d35983400.  lea rsi, str.help_____display_this_help_and_exit ; 0x5458 ; "      --help     display this help and exit\n"
0x00001fc0      ba05000000     mov edx, 5
0x00001fc5      31ff           xor edi, edi
0x00001fc7      e894f5ffff     call sym.imp.dcgettext
0x00001fcc      4889de         mov rsi, rbx
0x00001fcf      4889c7         mov rdi, rax
0x00001fd2      e839f6ffff     call sym.imp.fputs_unlocked
0x00001fd7      488b1d6a6220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00001fde      488d35a33400.  lea rsi, str.version__output_version_information_and_exit ; 0x5488 ; "      --version  output version information and exit\n"
0x00001fe5      ba05000000     mov edx, 5
0x00001fea      31ff           xor edi, edi
0x00001fec      e86ff5ffff     call sym.imp.dcgettext
0x00001ff1      4889de         mov rsi, rbx
0x00001ff4      4889c7         mov rdi, rax
0x00001ff7      e814f6ffff     call sym.imp.fputs_unlocked
0x00001ffc      488b1d456220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00002003      488d35b63400.  lea rsi, str.SIGNAL_may_be_a_signal_name_like__HUP___or_a_signal_number_like__1____or_the_exit_status_of_a_process_terminated_by_a_signal.__PID_is_an_integer__if_negative_it_identifies_a_process_group. ; 0x54c0 ; "\nSIGNAL may be a signal name like 'HUP', or a signal number like '1',\nor the exit status of a process terminated by a signal.\nPID is an integer; if negative it identifies a process group.\n"
0x0000200a      ba05000000     mov edx, 5
0x0000200f      31ff           xor edi, edi
0x00002011      e84af5ffff     call sym.imp.dcgettext
0x00002016      4889de         mov rsi, rbx
0x00002019      4889c7         mov rdi, rax
0x0000201c      488d1d013100.  lea rbx, str.kill                       ; 0x5124 ; "kill"
0x00002023      e8e8f5ffff     call sym.imp.fputs_unlocked
0x00002028      488d35513500.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x5580 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x0000202f      ba05000000     mov edx, 5
0x00002034      31ff           xor edi, edi
0x00002036      e825f5ffff     call sym.imp.dcgettext
0x0000203b      488d15e23000.  lea rdx, str.kill                       ; 0x5124 ; "kill"
0x00002042      4889c6         mov rsi, rax
0x00002045      bf01000000     mov edi, 1
0x0000204a      31c0           xor eax, eax
0x0000204c      e89ff6ffff     call sym.imp.__printf_chk
0x00002051      488d05d13000.  lea rax, [0x00005129]                   ; "["
0x00002058      488d0d0b3100.  lea rcx, str.sha256sum                  ; 0x516a ; "sha256sum"
0x0000205f      48c744246000.  mov qword [rsp + 0x60], 0
0x00002068      48c744246800.  mov qword [rsp + 0x68], 0
0x00002071      4889e2         mov rdx, rsp
0x00002074      48890424       mov qword [rsp], rax
0x00002078      488d05ac3000.  lea rax, str.test_invocation            ; 0x512b ; "test invocation"
0x0000207f      48894c2430     mov qword [rsp + 0x30], rcx
0x00002084      488d0de93000.  lea rcx, str.sha384sum                  ; 0x5174 ; "sha384sum"
0x0000208b      4889442408     mov qword [rsp + 8], rax
0x00002090      488d050c3100.  lea rax, [0x000051a3]                   ; "coreutils"
0x00002097      48894c2440     mov qword [rsp + 0x40], rcx
0x0000209c      488d0ddb3000.  lea rcx, str.sha512sum                  ; 0x517e ; "sha512sum"
0x000020a3      4889442410     mov qword [rsp + 0x10], rax
0x000020a8      488d058c3000.  lea rax, str.Multi_call_invocation      ; 0x513b ; "Multi-call invocation"
0x000020af      48894c2450     mov qword [rsp + 0x50], rcx
0x000020b4      4889442418     mov qword [rsp + 0x18], rax
0x000020b9      488d05913000.  lea rax, str.sha224sum                  ; 0x5151 ; "sha224sum"
0x000020c0      4889442420     mov qword [rsp + 0x20], rax
0x000020c5      488d058f3000.  lea rax, str.sha2_utilities             ; 0x515b ; "sha2 utilities"
0x000020cc      4889442428     mov qword [rsp + 0x28], rax
0x000020d1      4889442438     mov qword [rsp + 0x38], rax
0x000020d6      4889442448     mov qword [rsp + 0x48], rax
0x000020db      4889442458     mov qword [rsp + 0x58], rax
0x000020e0      4883c210       add rdx, 0x10
0x000020e4      488b3a         mov rdi, qword [rdx]
0x000020e7      4885ff         test rdi, rdi
0x000020ea      7413           je 0x20ff
0x000020ec      b905000000     mov ecx, 5
0x000020f1      4889de         mov rsi, rbx
0x000020f4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000020f6      0f97c0         seta al
0x000020f9      1c00           sbb al, 0
0x000020fb      84c0           test al, al
0x000020fd      75e1           jne 0x20e0
0x000020ff      4c8b6208       mov r12, qword [rdx + 8]
0x00002103      31ff           xor edi, edi
0x00002105      ba05000000     mov edx, 5
0x0000210a      488d35773000.  lea rsi, str.s_online_help:___s         ; 0x5188 ; "\n%s online help: <%s>\n"
0x00002111      4d85e4         test r12, r12
0x00002114      0f84c1000000   je 0x21db
0x0000211a      e841f4ffff     call sym.imp.dcgettext
0x0000211f      488d0d1a3500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5640 ; "https://www.gnu.org/software/coreutils/"
0x00002126      488d15723000.  lea rdx, str.GNU_coreutils              ; 0x519f ; "GNU coreutils"
0x0000212d      4889c6         mov rsi, rax
0x00002130      bf01000000     mov edi, 1
0x00002135      31c0           xor eax, eax
0x00002137      e8b4f5ffff     call sym.imp.__printf_chk
0x0000213c      31f6           xor esi, esi
0x0000213e      bf05000000     mov edi, 5
0x00002143      e898f5ffff     call sym.imp.setlocale
0x00002148      4885c0         test rax, rax
0x0000214b      741c           je 0x2169
0x0000214d      488d35593000.  lea rsi, [0x000051ad]                   ; "en_"
0x00002154      ba03000000     mov edx, 3
0x00002159      4889c7         mov rdi, rax
0x0000215c      e86ff3ffff     call sym.imp.strncmp
0x00002161      85c0           test eax, eax
0x00002163      0f8507010000   jne 0x2270
0x00002169      488d35413000.  lea rsi, str.Full_documentation___s_s   ; 0x51b1 ; "Full documentation <%s%s>\n"
0x00002170      31ff           xor edi, edi
0x00002172      ba05000000     mov edx, 5
0x00002177      e8e4f3ffff     call sym.imp.dcgettext
0x0000217c      488d0da12f00.  lea rcx, str.kill                       ; 0x5124 ; "kill"
0x00002183      488d15b63400.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5640 ; "https://www.gnu.org/software/coreutils/"
0x0000218a      4889c6         mov rsi, rax
0x0000218d      bf01000000     mov edi, 1
0x00002192      31c0           xor eax, eax
0x00002194      e857f5ffff     call sym.imp.__printf_chk
0x00002199      4939dc         cmp r12, rbx
0x0000219c      488d0da22f00.  lea rcx, [0x00005145]                   ; " invocation"
0x000021a3      488d1dd73b00.  lea rbx, [0x00005d81]
0x000021aa      480f44d9       cmove rbx, rcx
0x000021ae      488d35fb3400.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x56b0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000021b5      31ff           xor edi, edi
0x000021b7      ba05000000     mov edx, 5
0x000021bc      e89ff3ffff     call sym.imp.dcgettext
0x000021c1      4889d9         mov rcx, rbx
0x000021c4      4889c6         mov rsi, rax
0x000021c7      4c89e2         mov rdx, r12
0x000021ca      bf01000000     mov edi, 1
0x000021cf      31c0           xor eax, eax
0x000021d1      e81af5ffff     call sym.imp.__printf_chk
0x000021d6      e93bfdffff     jmp 0x1f16
0x000021db      e880f3ffff     call sym.imp.dcgettext
0x000021e0      488d0d593400.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5640 ; "https://www.gnu.org/software/coreutils/"
0x000021e7      488d15b12f00.  lea rdx, str.GNU_coreutils              ; 0x519f ; "GNU coreutils"
0x000021ee      4889c6         mov rsi, rax
0x000021f1      bf01000000     mov edi, 1
0x000021f6      31c0           xor eax, eax
0x000021f8      e8f3f4ffff     call sym.imp.__printf_chk
0x000021fd      31f6           xor esi, esi
0x000021ff      bf05000000     mov edi, 5
0x00002204      e8d7f4ffff     call sym.imp.setlocale
0x00002209      4885c0         test rax, rax
0x0000220c      7418           je 0x2226
0x0000220e      488d35982f00.  lea rsi, [0x000051ad]                   ; "en_"
0x00002215      ba03000000     mov edx, 3
0x0000221a      4889c7         mov rdi, rax
0x0000221d      e8aef2ffff     call sym.imp.strncmp
0x00002222      85c0           test eax, eax
0x00002224      7543           jne 0x2269
0x00002226      488d35842f00.  lea rsi, str.Full_documentation___s_s   ; 0x51b1 ; "Full documentation <%s%s>\n"
0x0000222d      ba05000000     mov edx, 5
0x00002232      31ff           xor edi, edi
0x00002234      4c8d25e92e00.  lea r12, str.kill                       ; 0x5124 ; "kill"
0x0000223b      488d1d032f00.  lea rbx, [0x00005145]                   ; " invocation"
0x00002242      e819f3ffff     call sym.imp.dcgettext
0x00002247      488d0dd62e00.  lea rcx, str.kill                       ; 0x5124 ; "kill"
0x0000224e      488d15eb3300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5640 ; "https://www.gnu.org/software/coreutils/"
0x00002255      4889c6         mov rsi, rax
0x00002258      bf01000000     mov edi, 1
0x0000225d      31c0           xor eax, eax
0x0000225f      e88cf4ffff     call sym.imp.__printf_chk
0x00002264      e945ffffff     jmp 0x21ae
0x00002269      4c8d25b42e00.  lea r12, str.kill                       ; 0x5124 ; "kill"
0x00002270      4c8b2dd15f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00002277      488d35ea3300.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5668 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000227e      31ff           xor edi, edi
0x00002280      ba05000000     mov edx, 5
0x00002285      e8d6f2ffff     call sym.imp.dcgettext
0x0000228a      4c89ee         mov rsi, r13
0x0000228d      4889c7         mov rdi, rax
0x00002290      e87bf3ffff     call sym.imp.fputs_unlocked
0x00002295      e9cffeffff     jmp 0x2169
0x0000229a      660f1f440000   nop word [rax + rax]
;-- operand2sig:
0x000022a0      4157           push r15                                ; /src:37
0x000022a2      4156           push r14
0x000022a4      4989f6         mov r14, rsi
0x000022a7      4155           push r13
0x000022a9      4154           push r12
0x000022ab      55             push rbp
0x000022ac      53             push rbx
0x000022ad      4889fd         mov rbp, rdi
0x000022b0      4883ec28       sub rsp, 0x28
0x000022b4      64488b042528.  mov rax, qword fs:[0x28]
0x000022bd      4889442418     mov qword [rsp + 0x18], rax
0x000022c2      31c0           xor eax, eax
0x000022c4      0fbe07         movsx eax, byte [rdi]                   ; /src:40
0x000022c7      83e830         sub eax, 0x30
0x000022ca      83f809         cmp eax, 9
0x000022cd      0f878d000000   ja 0x2360
0x000022d3      e8e8f1ffff     call sym.imp.__errno_location           ; /src:54
0x000022d8      488d742410     lea rsi, [rsp + 0x10]
0x000022dd      ba0a000000     mov edx, 0xa
0x000022e2      c70000000000   mov dword [rax], 0
0x000022e8      4889ef         mov rdi, rbp
0x000022eb      4889c3         mov rbx, rax
0x000022ee      e84df3ffff     call sym.imp.strtol
0x000022f3      488b542410     mov rdx, qword [rsp + 0x10]             ; /src:56
0x000022f8      4839ea         cmp rdx, rbp
0x000022fb      741b           je 0x2318
0x000022fd      803a00         cmp byte [rdx], 0
0x00002300      7516           jne 0x2318
0x00002302      8b13           mov edx, dword [rbx]
0x00002304      85d2           test edx, edx
0x00002306      7510           jne 0x2318
0x00002308      4863d0         movsxd rdx, eax
0x0000230b      4839c2         cmp rdx, rax
0x0000230e      0f843c010000   je 0x2450
0x00002314      0f1f4000       nop dword [rax]
0x00002318      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; [0xffffffff:4]=-1 ; -1
0x00002320      4889ef         mov rdi, rbp                            ; /src:88
0x00002323      e8481f0000     call sym.quote
0x00002328      488d35bd3400.  lea rsi, str.s:_invalid_signal          ; 0x57ec ; "%s: invalid signal"
0x0000232f      4889c3         mov rbx, rax
0x00002332      ba05000000     mov edx, 5
0x00002337      31ff           xor edi, edi
0x00002339      e822f2ffff     call sym.imp.dcgettext
0x0000233e      4889d9         mov rcx, rbx
0x00002341      4889c2         mov rdx, rax
0x00002344      31f6           xor esi, esi
0x00002346      31c0           xor eax, eax
0x00002348      31ff           xor edi, edi
0x0000234a      e8b1f3ffff     call sym.imp.error
0x0000234f      b8ffffffff     mov eax, 0xffffffff                     ; /src:89 ; -1
0x00002354      e987000000     jmp 0x23e0
0x00002359      0f1f80000000.  nop dword [rax]
0x00002360      e87b270000     call sym.xstrdup                        ; /src:70
0x00002365      0fb618         movzx ebx, byte [rax]                   ; /src:72
0x00002368      4989c5         mov r13, rax                            ; /src:70
0x0000236b      84db           test bl, bl                             ; /src:72
0x0000236d      7433           je 0x23a2
0x0000236f      4c8d255b3400.  lea r12, str.abcdefghijklmnopqrstuvwxyz ; /src:73 ; 0x57d1 ; "abcdefghijklmnopqrstuvwxyz"
0x00002376      4989c7         mov r15, rax                            ; /src:72
0x00002379      0f1f80000000.  nop dword [rax]
0x00002380      0fbef3         movsx esi, bl                           ; /src:73
0x00002383      4c89e7         mov rdi, r12
0x00002386      e835f2ffff     call sym.imp.strchr
0x0000238b      4885c0         test rax, rax
0x0000238e      7406           je 0x2396
0x00002390      83eb20         sub ebx, 0x20                           ; /src:74 ; "@"
0x00002393      41881f         mov byte [r15], bl
0x00002396      4983c701       add r15, 1                              ; /src:72
0x0000239a      410fb61f       movzx ebx, byte [r15]
0x0000239e      84db           test bl, bl
0x000023a0      75de           jne 0x2380
0x000023a2      488d5c240c     lea rbx, [rsp + 0xc]                    ; /src:78
0x000023a7      4c89ef         mov rdi, r13
0x000023aa      4889de         mov rsi, rbx
0x000023ad      e81e280000     call sym.str2sig
0x000023b2      85c0           test eax, eax
0x000023b4      7552           jne 0x2408
0x000023b6      8b5c240c       mov ebx, dword [rsp + 0xc]
0x000023ba      4c89ef         mov rdi, r13                            ; /src:83
0x000023bd      e8def0ffff     call sym.imp.free
0x000023c2      85db           test ebx, ebx                           ; /src:86
0x000023c4      0f8856ffffff   js 0x2320
0x000023ca      4c89f6         mov rsi, r14
0x000023cd      89df           mov edi, ebx
0x000023cf      e88c290000     call sym.sig2str
0x000023d4      85c0           test eax, eax
0x000023d6      0f8544ffffff   jne 0x2320
0x000023dc      8b44240c       mov eax, dword [rsp + 0xc]              ; /src:92
0x000023e0      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:93
0x000023e5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000023ee      0f8588000000   jne 0x247c
0x000023f4      4883c428       add rsp, 0x28
0x000023f8      5b             pop rbx
0x000023f9      5d             pop rbp
0x000023fa      415c           pop r12
0x000023fc      415d           pop r13
0x000023fe      415e           pop r14
0x00002400      415f           pop r15
0x00002402      c3             ret
0x00002403      0f1f440000     nop dword [rax + rax]
0x00002408      41807d0053     cmp byte [r13], 0x53                    ; /src:78
0x0000240d      7419           je 0x2428
0x0000240f      4c89ef         mov rdi, r13                            ; /src:83
0x00002412      c744240cffff.  mov dword [rsp + 0xc], 0xffffffff       ; /src:81 ; [0xffffffff:4]=-1 ; -1
0x0000241a      e881f0ffff     call sym.imp.free                       ; /src:83
0x0000241f      e9fcfeffff     jmp 0x2320
0x00002424      0f1f4000       nop dword [rax]
0x00002428      41807d0149     cmp byte [r13 + 1], 0x49                ; /src:79
0x0000242d      75e0           jne 0x240f
0x0000242f      41807d0247     cmp byte [r13 + 2], 0x47
0x00002434      75d9           jne 0x240f
0x00002436      498d7d03       lea rdi, [r13 + 3]                      ; /src:80
0x0000243a      4889de         mov rsi, rbx
0x0000243d      e88e270000     call sym.str2sig
0x00002442      85c0           test eax, eax
0x00002444      75c9           jne 0x240f
0x00002446      e96bffffff     jmp 0x23b6
0x0000244b      0f1f440000     nop dword [rax + rax]
0x00002450      83faff         cmp edx, 0xffffffff                     ; /src:58
0x00002453      741e           je 0x2473
0x00002455      81faff000000   cmp edx, 0xff                           ; /src:63
0x0000245b      b87f000000     mov eax, 0x7f
0x00002460      bbff000000     mov ebx, 0xff
0x00002465      0f4cd8         cmovl ebx, eax
0x00002468      21d3           and ebx, edx
0x0000246a      895c240c       mov dword [rsp + 0xc], ebx
0x0000246e      e957ffffff     jmp 0x23ca
0x00002473      8954240c       mov dword [rsp + 0xc], edx              ; /src:56
0x00002477      e9a4feffff     jmp 0x2320
0x0000247c      e80ff1ffff     call sym.imp.__stack_chk_fail           ; /src:93
0x00002481      662e0f1f8400.  nop word cs:[rax + rax]
0x0000248b      0f1f440000     nop dword [rax + rax]
;-- close_stdout_set_file_name:
0x00002490      48893d015e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208298:8]=0
0x00002497      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002498      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000024a0      40883de95d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208290:1]=0
0x000024a7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000024a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000024b0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000024b1      53             push rbx
0x000024b2      4883ec08       sub rsp, 8
0x000024b6      488b3d8b5d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x000024bd      e87e290000     call sym.close_stream
0x000024c2      85c0           test eax, eax
0x000024c4      7416           je 0x24dc
0x000024c6      e8f5efffff     call sym.imp.__errno_location
0x000024cb      803dbe5d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208290:1]=0
0x000024d2      4889c3         mov rbx, rax
0x000024d5      741c           je 0x24f3
0x000024d7      833820         cmp dword [rax], 0x20
0x000024da      7517           jne 0x24f3
0x000024dc      488b3d9d5d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x208280:8]=0
0x000024e3      e858290000     call sym.close_stream
0x000024e8      85c0           test eax, eax
0x000024ea      7546           jne 0x2532
0x000024ec      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000024f0      5b             pop rbx
0x000024f1      5d             pop rbp
0x000024f2      c3             ret
0x000024f3      488d350a3300.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5804 ; "write error"
0x000024fa      31ff           xor edi, edi
0x000024fc      ba05000000     mov edx, 5
0x00002501      e85af0ffff     call sym.imp.dcgettext
0x00002506      488b3d8b5d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208298:8]=0
0x0000250d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002510      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002513      7428           je 0x253d
0x00002515      e8561b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000251a      8b33           mov esi, dword [rbx]
0x0000251c      488d15ed3200.  lea rdx, str.s:__s                      ; 0x5810 ; "%s: %s"
0x00002523      4889c1         mov rcx, rax
0x00002526      4989e8         mov r8, rbp
0x00002529      31ff           xor edi, edi
0x0000252b      31c0           xor eax, eax
0x0000252d      e8cef1ffff     call sym.imp.error
0x00002532      8b3de05a2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208018:4]=1
0x00002538      e8a3efffff     call sym.imp._exit
0x0000253d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000253f      488d15ce3200.  lea rdx, [0x00005814]                   ; "%s"
0x00002546      4889c1         mov rcx, rax
0x00002549      31ff           xor edi, edi
0x0000254b      31c0           xor eax, eax
0x0000254d      e8aef1ffff     call sym.imp.error
0x00002552      ebde           jmp 0x2532
0x00002554      662e0f1f8400.  nop word cs:[rax + rax]
0x0000255e      6690           nop
;-- set_program_name:
0x00002560      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002563      53             push rbx
0x00002564      7477           je 0x25dd                               ; ../coreutils-8.31/lib/progname.c:51
0x00002566      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000256b      4889fb         mov rbx, rdi
0x0000256e      e85df0ffff     call sym.imp.strrchr
0x00002573      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002576      7455           je 0x25cd
0x00002578      4c8d4001       lea r8, [rax + 1]
0x0000257c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000257f      4829da         sub rdx, rbx
0x00002582      4883fa06       cmp rdx, 6
0x00002586      7e45           jle 0x25cd
0x00002588      488d70fa       lea rsi, [rax - 6]
0x0000258c      488d3dbd3200.  lea rdi, str..libs                      ; 0x5850 ; "/.libs/"
0x00002593      b907000000     mov ecx, 7
0x00002598      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000259a      0f97c2         seta dl
0x0000259d      80da00         sbb dl, 0
0x000025a0      84d2           test dl, dl
0x000025a2      7529           jne 0x25cd
0x000025a4      488d3dad3200.  lea rdi, [0x00005858]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000025ab      b903000000     mov ecx, 3
0x000025b0      4c89c6         mov rsi, r8
0x000025b3      4c89c3         mov rbx, r8
0x000025b6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000025b8      0f97c2         seta dl
0x000025bb      80da00         sbb dl, 0
0x000025be      84d2           test dl, dl
0x000025c0      750b           jne 0x25cd
0x000025c2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000025c6      48891d735c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x208240:8]=0
0x000025cd      48891dcc5c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2082a0:8]=0
0x000025d4      48891d855c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x208260:8]=0
0x000025db      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000025dc      c3             ret
0x000025dd      488b0d9c5c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x208280:8]=0
0x000025e4      488d3d2d3200.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5818 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000025eb      ba37000000     mov edx, 0x37                           ; '7'
0x000025f0      be01000000     mov esi, 1
0x000025f5      e856f1ffff     call sym.imp.fwrite
0x000025fa      e8b1eeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000025ff      90             nop
;-- gettext_quote.part.1:
0x00002600      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002601      53             push rbx
0x00002602      4889fd         mov rbp, rdi
0x00002605      89f3           mov ebx, esi
0x00002607      4883ec08       sub rsp, 8
0x0000260b      e810290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002610      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002613      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002616      80fa55         cmp dl, 0x55
0x00002619      7475           je 0x2690
0x0000261b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000261e      7420           je 0x2640
0x00002620      488d05443200.  lea rax, str.l______l                   ; 0x586b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002627      488d153f3200.  lea rdx, [0x0000586d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000262e      83fb09         cmp ebx, 9
0x00002631      480f45c2       cmovne rax, rdx
0x00002635      4883c408       add rsp, 8
0x00002639      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000263a      5d             pop rbp
0x0000263b      c3             ret
0x0000263c      0f1f4000       nop dword [rax]
0x00002640      0fb65001       movzx edx, byte [rax + 1]
0x00002644      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002647      80fa42         cmp dl, 0x42
0x0000264a      75d4           jne 0x2620
0x0000264c      80780231       cmp byte [rax + 2], 0x31
0x00002650      75ce           jne 0x2620
0x00002652      80780338       cmp byte [rax + 3], 0x38
0x00002656      75c8           jne 0x2620
0x00002658      80780430       cmp byte [rax + 4], 0x30
0x0000265c      75c2           jne 0x2620
0x0000265e      80780533       cmp byte [rax + 5], 0x33
0x00002662      75bc           jne 0x2620
0x00002664      80780630       cmp byte [rax + 6], 0x30
0x00002668      75b6           jne 0x2620
0x0000266a      80780700       cmp byte [rax + 7], 0
0x0000266e      75b0           jne 0x2620
0x00002670      807d0060       cmp byte [rbp], 0x60
0x00002674      488d05e93100.  lea rax, [0x00005864]
0x0000267b      488d15e63100.  lea rdx, [0x00005868]
0x00002682      480f45c2       cmovne rax, rdx
0x00002686      4883c408       add rsp, 8
0x0000268a      5b             pop rbx
0x0000268b      5d             pop rbp
0x0000268c      c3             ret
0x0000268d      0f1f00         nop dword [rax]
0x00002690      0fb65001       movzx edx, byte [rax + 1]
0x00002694      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002697      80fa54         cmp dl, 0x54
0x0000269a      7584           jne 0x2620
0x0000269c      0fb65002       movzx edx, byte [rax + 2]
0x000026a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000026a3      80fa46         cmp dl, 0x46
0x000026a6      0f8574ffffff   jne 0x2620
0x000026ac      8078032d       cmp byte [rax + 3], 0x2d
0x000026b0      0f856affffff   jne 0x2620
0x000026b6      80780438       cmp byte [rax + 4], 0x38
0x000026ba      0f8560ffffff   jne 0x2620
0x000026c0      80780500       cmp byte [rax + 5], 0
0x000026c4      0f8556ffffff   jne 0x2620
0x000026ca      807d0060       cmp byte [rbp], 0x60
0x000026ce      488d05873100.  lea rax, [0x0000585c]                   ; "\u2018"
0x000026d5      488d15843100.  lea rdx, [0x00005860]                   ; "\u2019"
0x000026dc      480f45c2       cmovne rax, rdx
0x000026e0      4883c408       add rsp, 8
0x000026e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000026e5      5d             pop rbp
0x000026e6      c3             ret
0x000026e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000026f0      4157           push r15
0x000026f2      4156           push r14
0x000026f4      4589c7         mov r15d, r8d
0x000026f7      4155           push r13
0x000026f9      4154           push r12
0x000026fb      4989fe         mov r14, rdi
0x000026fe      55             push rbp
0x000026ff      53             push rbx
0x00002700      4489cb         mov ebx, r9d
0x00002703      4989f5         mov r13, rsi
0x00002706      4889cd         mov rbp, rcx
0x00002709      83e302         and ebx, 2
0x0000270c      4881ecb80000.  sub rsp, 0xb8
0x00002713      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000271b      4889542410     mov qword [rsp + 0x10], rdx
0x00002720      4489442408     mov dword [rsp + 8], r8d
0x00002725      44894c2478     mov dword [rsp + 0x78], r9d
0x0000272a      4889442420     mov qword [rsp + 0x20], rax
0x0000272f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002737      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000273c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002744      4889442460     mov qword [rsp + 0x60], rax
0x00002749      64488b042528.  mov rax, qword fs:[0x28]
0x00002752      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000275a      31c0           xor eax, eax
0x0000275c      e80feeffff     call sym.imp.__ctype_get_mb_cur_max
0x00002761      4183ff0a       cmp r15d, 0xa
0x00002765      4889442458     mov qword [rsp + 0x58], rax
0x0000276a      0f87af110000   ja 0x391f
0x00002770      488d0d493100.  lea rcx, [0x000058c0]
0x00002777      4489fa         mov edx, r15d
0x0000277a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000277e      4801c8         add rax, rcx
0x00002781      ffe0           jmp rax
0x00002783      c644240e01     mov byte [rsp + 0xe], 1
0x00002788      c644247c00     mov byte [rsp + 0x7c], 0
0x0000278d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002790      48c744245000.  mov qword [rsp + 0x50], 0
0x00002799      c644240f01     mov byte [rsp + 0xf], 1
0x0000279e      c644240d00     mov byte [rsp + 0xd], 0
0x000027a3      488d05c33000.  lea rax, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000027aa      48c744241801.  mov qword [rsp + 0x18], 1
0x000027b3      4531ff         xor r15d, r15d
0x000027b6      c74424080200.  mov dword [rsp + 8], 2
0x000027be      4889442448     mov qword [rsp + 0x48], rax
0x000027c3      4531db         xor r11d, r11d
0x000027c6      4889e8         mov rax, rbp
0x000027c9      4589e0         mov r8d, r12d
0x000027cc      4c89dd         mov rbp, r11
0x000027cf      4989c3         mov r11, rax
0x000027d2      660f1f440000   nop word [rax + rax]
0x000027d8      4939eb         cmp r11, rbp
0x000027db      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000027df      4983fbff       cmp r11, 0xffffffffffffffff
0x000027e3      750d           jne 0x27f2
0x000027e5      488b442410     mov rax, qword [rsp + 0x10]
0x000027ea      803c2800       cmp byte [rax + rbp], 0
0x000027ee      410f95c4       setne r12b
0x000027f2      4584e4         test r12b, r12b
0x000027f5      0f8455060000   je 0x2e50
0x000027fb      837c240802     cmp dword [rsp + 8], 2
0x00002800      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002805      4c8d0c2f       lea r9, [rdi + rbp]
0x00002809      0f95c0         setne al
0x0000280c      2244240d       and al, byte [rsp + 0xd]
0x00002810      4189c2         mov r10d, eax
0x00002813      0f84a7000000   je 0x28c0
0x00002819      488b442418     mov rax, qword [rsp + 0x18]
0x0000281e      4885c0         test rax, rax
0x00002821      0f8429040000   je 0x2c50
0x00002827      4983fbff       cmp r11, 0xffffffffffffffff
0x0000282b      488d5c0500     lea rbx, [rbp + rax]
0x00002830      752e           jne 0x2860
0x00002832      4883f801       cmp rax, 1
0x00002836      7628           jbe 0x2860
0x00002838      4488442438     mov byte [rsp + 0x38], r8b
0x0000283d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002842      4c894c2428     mov qword [rsp + 0x28], r9
0x00002847      e834edffff     call sym.imp.strlen
0x0000284c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002852      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002858      4989c3         mov r11, rax
0x0000285b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002860      4c39db         cmp rbx, r11
0x00002863      4488542428     mov byte [rsp + 0x28], r10b
0x00002868      0f87b2050000   ja 0x2e20
0x0000286e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002873      488b742448     mov rsi, qword [rsp + 0x48]
0x00002878      4c89cf         mov rdi, r9
0x0000287b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002880      4488442438     mov byte [rsp + 0x38], r8b
0x00002885      4c894c2430     mov qword [rsp + 0x30], r9
0x0000288a      e871edffff     call sym.imp.memcmp
0x0000288f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002891      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002896      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000289c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000028a1      0f8579050000   jne 0x2e20
0x000028a7      807c240f00     cmp byte [rsp + 0xf], 0
0x000028ac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000028b2      0f857d0f0000   jne 0x3835
0x000028b8      0f1f84000000.  nop dword [rax + rax]
0x000028c0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000028c4      80fb7e         cmp bl, 0x7e
0x000028c7      0f871b030000   ja 0x2be8
0x000028cd      488d0d183000.  lea rcx, [0x000058ec]
0x000028d4      0fb6d3         movzx edx, bl
0x000028d7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000028db      4801c8         add rax, rcx
0x000028de      ffe0           jmp rax
0x000028e0      4531d2         xor r10d, r10d
0x000028e3      4983fb01       cmp r11, 1
0x000028e7      0f95c0         setne al
0x000028ea      4983fbff       cmp r11, 0xffffffffffffffff
0x000028ee      750c           jne 0x28fc
0x000028f0      488b442410     mov rax, qword [rsp + 0x10]
0x000028f5      80780100       cmp byte [rax + 1], 0
0x000028f9      0f95c0         setne al
0x000028fc      837c240802     cmp dword [rsp + 8], 2
0x00002901      0f94c2         sete dl
0x00002904      84c0           test al, al
0x00002906      0f844c020000   je 0x2b58
0x0000290c      4531e4         xor r12d, r12d
0x0000290f      31c0           xor eax, eax
0x00002911      0f1f80000000.  nop dword [rax]
0x00002918      807c240d01     cmp byte [rsp + 0xd], 1
0x0000291d      0f850f010000   jne 0x2a32
0x00002923      84d2           test dl, dl
0x00002925      0f8507010000   jne 0x2a32
0x0000292b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002930      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002933      7414           je 0x2949
0x00002935      89da           mov edx, ebx
0x00002937      c0ea05         shr dl, 5
0x0000293a      0fb6d2         movzx edx, dl
0x0000293d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002940      0fa3da         bt edx, ebx
0x00002943      0f824a010000   jb 0x2a93
0x00002949      4584d2         test r10b, r10b
0x0000294c      0f8541010000   jne 0x2a93
0x00002952      83f001         xor eax, 1
0x00002955      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002959      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000295c      84c0           test al, al
0x0000295e      7420           je 0x2980                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002960      4d39fd         cmp r13, r15
0x00002963      7605           jbe 0x296a
0x00002965      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000296a      498d4701       lea rax, [r15 + 1]
0x0000296e      4939c5         cmp r13, rax
0x00002971      7606           jbe 0x2979
0x00002973      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002979      4983c702       add r15, 2
0x0000297d      4531c0         xor r8d, r8d
0x00002980      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002983      7304           jae 0x2989                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002985      43881c3e       mov byte [r14 + r15], bl
0x00002989      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000298e      4983c701       add r15, 1
0x00002992      b800000000     mov eax, 0
0x00002997      4584e4         test r12b, r12b
0x0000299a      0f44f8         cmove edi, eax
0x0000299d      40887c240e     mov byte [rsp + 0xe], dil
0x000029a2      e931feffff     jmp 0x27d8
0x000029a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000029b0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000029b3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000029b7      83f802         cmp eax, 2
0x000029ba      0f84b8050000   je 0x2f78
0x000029c0      83f805         cmp eax, 5
0x000029c3      0f846f050000   je 0x2f38
0x000029c9      83f802         cmp eax, 2
0x000029cc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000029d1      0f94c2         sete dl
0x000029d4      4531e4         xor r12d, r12d
0x000029d7      31c0           xor eax, eax
0x000029d9      e93affffff     jmp 0x2918
0x000029de      6690           nop
0x000029e0      4531d2         xor r10d, r10d
0x000029e3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000029e8      0f8402050000   je 0x2ef0
0x000029ee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000029f3      31d2           xor edx, edx
0x000029f5      31c0           xor eax, eax
0x000029f7      bb27000000     mov ebx, 0x27                           ; '''
0x000029fc      e917ffffff     jmp 0x2918
0x00002a01      0f1f80000000.  nop dword [rax]
0x00002a08      ba09000000     mov edx, 9
0x00002a0d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002a12      837c240802     cmp dword [rsp + 8], 2
0x00002a17      0f94c0         sete al
0x00002a1a      2244240f       and al, byte [rsp + 0xf]
0x00002a1e      0f854a010000   jne 0x2b6e
0x00002a24      807c240d00     cmp byte [rsp + 0xd], 0
0x00002a29      7565           jne 0x2a90
0x00002a2b      89d3           mov ebx, edx
0x00002a2d      4531e4         xor r12d, r12d
0x00002a30      31c0           xor eax, eax
0x00002a32      807c240f00     cmp byte [rsp + 0xf], 0
0x00002a37      0f85eefeffff   jne 0x292b
0x00002a3d      e907ffffff     jmp 0x2949                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002a42      660f1f440000   nop word [rax + rax]
0x00002a48      ba08000000     mov edx, 8
0x00002a4d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002a52      ebd0           jmp 0x2a24
0x00002a54      0f1f4000       nop dword [rax]
0x00002a58      837c240802     cmp dword [rsp + 8], 2
0x00002a5d      0f84cd030000   je 0x2e30
0x00002a63      807c240d00     cmp byte [rsp + 0xd], 0
0x00002a68      0f8412020000   je 0x2c80
0x00002a6e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002a73      0f8407020000   je 0x2c80
0x00002a79      48837c241800   cmp qword [rsp + 0x18], 0
0x00002a7f      0f85b6030000   jne 0x2e3b
0x00002a85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002a8a      660f1f440000   nop word [rax + rax]
0x00002a90      4531e4         xor r12d, r12d
0x00002a93      837c240802     cmp dword [rsp + 8], 2
0x00002a98      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002a9b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002aa0      89d0           mov eax, edx
0x00002aa2      0f8550080000   jne 0x32f8
0x00002aa8      4489c0         mov eax, r8d
0x00002aab      83f001         xor eax, 1
0x00002aae      20d0           and al, dl
0x00002ab0      742f           je 0x2ae1
0x00002ab2      4d39fd         cmp r13, r15
0x00002ab5      7605           jbe 0x2abc
0x00002ab7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002abc      498d5701       lea rdx, [r15 + 1]
0x00002ac0      4939d5         cmp r13, rdx
0x00002ac3      7606           jbe 0x2acb
0x00002ac5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002acb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002acf      4939d5         cmp r13, rdx
0x00002ad2      7606           jbe 0x2ada
0x00002ad4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ada      4983c703       add r15, 3
0x00002ade      4189c0         mov r8d, eax
0x00002ae1      4d39fd         cmp r13, r15
0x00002ae4      7605           jbe 0x2aeb
0x00002ae6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002aeb      4983c701       add r15, 1
0x00002aef      4883c501       add rbp, 1
0x00002af3      e988feffff     jmp 0x2980
0x00002af8      0f1f84000000.  nop dword [rax + rax]
0x00002b00      807c240d00     cmp byte [rsp + 0xd], 0
0x00002b05      0f85c8010000   jne 0x2cd3
0x00002b0b      31d2           xor edx, edx
0x00002b0d      f644247801     test byte [rsp + 0x78], 1
0x00002b12      0f8413ffffff   je 0x2a2b
0x00002b18      4883c501       add rbp, 1
0x00002b1c      e9b7fcffff     jmp 0x27d8
0x00002b21      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002b28      837c240802     cmp dword [rsp + 8], 2
0x00002b2d      0f94c2         sete dl
0x00002b30      31c0           xor eax, eax
0x00002b32      e9e1fdffff     jmp 0x2918
0x00002b37      660f1f840000.  nop word [rax + rax]
0x00002b40      ba07000000     mov edx, 7
0x00002b45      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002b4a      e9d5feffff     jmp 0x2a24
0x00002b4f      90             nop
0x00002b50      837c240802     cmp dword [rsp + 8], 2
0x00002b55      0f94c2         sete dl
0x00002b58      4885ed         test rbp, rbp
0x00002b5b      0f85abfdffff   jne 0x290c
0x00002b61      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002b66      20d0           and al, dl
0x00002b68      0f84aafdffff   je 0x2918
0x00002b6e      4c89dd         mov rbp, r11
0x00002b71      c74424080200.  mov dword [rsp + 8], 2
0x00002b79      e9fb060000     jmp 0x3279
0x00002b7e      6690           nop
0x00002b80      837c240802     cmp dword [rsp + 8], 2
0x00002b85      0f94c2         sete dl
0x00002b88      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002b8b      ebd4           jmp 0x2b61
0x00002b8d      0f1f00         nop dword [rax]
0x00002b90      837c240802     cmp dword [rsp + 8], 2
0x00002b95      bb20000000     mov ebx, 0x20                           ; "@"
0x00002b9a      0f94c2         sete dl
0x00002b9d      ebc2           jmp 0x2b61
0x00002b9f      90             nop
0x00002ba0      ba0d000000     mov edx, 0xd
0x00002ba5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002baa      e963feffff     jmp 0x2a12
0x00002baf      90             nop
0x00002bb0      ba0c000000     mov edx, 0xc
0x00002bb5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002bba      e965feffff     jmp 0x2a24
0x00002bbf      90             nop
0x00002bc0      ba0b000000     mov edx, 0xb
0x00002bc5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002bca      e955feffff     jmp 0x2a24
0x00002bcf      90             nop
0x00002bd0      ba0a000000     mov edx, 0xa
0x00002bd5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002bda      e933feffff     jmp 0x2a12
0x00002bdf      90             nop
0x00002be0      4531d2         xor r10d, r10d
0x00002be3      0f1f440000     nop dword [rax + rax]
0x00002be8      48837c245801   cmp qword [rsp + 0x58], 1
0x00002bee      0f85a4030000   jne 0x2f98
0x00002bf4      4c895c2438     mov qword [rsp + 0x38], r11
0x00002bf9      4488442430     mov byte [rsp + 0x30], r8b
0x00002bfe      4488542428     mov byte [rsp + 0x28], r10b
0x00002c03      e898ebffff     call sym.imp.__ctype_b_loc
0x00002c08      488b08         mov rcx, qword [rax]
0x00002c0b      0fb6d3         movzx edx, bl
0x00002c0e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002c14      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002c1a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002c1f      bf01000000     mov edi, 1
0x00002c24      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002c28      66250040       and ax, 0x4000
0x00002c2c      410f95c4       setne r12b
0x00002c30      0f94c0         sete al
0x00002c33      2244240d       and al, byte [rsp + 0xd]
0x00002c37      84c0           test al, al
0x00002c39      0f8592090000   jne 0x35d1
0x00002c3f      837c240802     cmp dword [rsp + 8], 2
0x00002c44      0f94c2         sete dl
0x00002c47      e9ccfcffff     jmp 0x2918
0x00002c4c      0f1f4000       nop dword [rax]
0x00002c50      410fb619       movzx ebx, byte [r9]
0x00002c54      80fb7e         cmp bl, 0x7e
0x00002c57      7787           ja 0x2be0
0x00002c59      488d0d882e00.  lea rcx, [0x00005ae8]
0x00002c60      0fb6d3         movzx edx, bl
0x00002c63      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002c67      4801c8         add rax, rcx
0x00002c6a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002c6c      0f1f4000       nop dword [rax]
0x00002c70      4531d2         xor r10d, r10d
0x00002c73      807c240d00     cmp byte [rsp + 0xd], 0
0x00002c78      0f85f0fdffff   jne 0x2a6e
0x00002c7e      6690           nop
0x00002c80      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002c85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002c8a      e995fdffff     jmp 0x2a24
0x00002c8f      90             nop
0x00002c90      ba0c000000     mov edx, 0xc
0x00002c95      4531d2         xor r10d, r10d
0x00002c98      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002c9d      e982fdffff     jmp 0x2a24
0x00002ca2      660f1f440000   nop word [rax + rax]
0x00002ca8      ba0a000000     mov edx, 0xa
0x00002cad      4531d2         xor r10d, r10d
0x00002cb0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002cb5      e958fdffff     jmp 0x2a12
0x00002cba      660f1f440000   nop word [rax + rax]
0x00002cc0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002cc5      e9c6fdffff     jmp 0x2a90
0x00002cca      660f1f440000   nop word [rax + rax]
0x00002cd0      4531d2         xor r10d, r10d
0x00002cd3      837c240802     cmp dword [rsp + 8], 2
0x00002cd8      0f94c2         sete dl
0x00002cdb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ce0      0f85940b0000   jne 0x387a
0x00002ce6      4489c0         mov eax, r8d
0x00002ce9      4c89f9         mov rcx, r15
0x00002cec      83f001         xor eax, 1
0x00002cef      20d0           and al, dl
0x00002cf1      742d           je 0x2d20
0x00002cf3      4d39fd         cmp r13, r15
0x00002cf6      7605           jbe 0x2cfd
0x00002cf8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002cfd      498d4f01       lea rcx, [r15 + 1]
0x00002d01      4939cd         cmp r13, rcx
0x00002d04      7606           jbe 0x2d0c
0x00002d06      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002d0c      498d4f02       lea rcx, [r15 + 2]
0x00002d10      4939cd         cmp r13, rcx
0x00002d13      0f8730060000   ja 0x3349
0x00002d19      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00002d1d      4189c0         mov r8d, eax
0x00002d20      4939cd         cmp r13, rcx
0x00002d23      7605           jbe 0x2d2a
0x00002d25      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002d2a      837c240802     cmp dword [rsp + 8], 2
0x00002d2f      4c8d7901       lea r15, [rcx + 1]
0x00002d33      0f8400060000   je 0x3339
0x00002d39      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002d3d      4c39d8         cmp rax, r11
0x00002d40      7319           jae 0x2d5b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002d42      488b442410     mov rax, qword [rsp + 0x10]
0x00002d47      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00002d4c      88442428       mov byte [rsp + 0x28], al
0x00002d50      83e830         sub eax, 0x30
0x00002d53      3c09           cmp al, 9
0x00002d55      0f862e080000   jbe 0x3589
0x00002d5b      4489e0         mov eax, r12d
0x00002d5e      bb30000000     mov ebx, 0x30                           ; '0'
0x00002d63      4531e4         xor r12d, r12d
0x00002d66      e9adfbffff     jmp 0x2918                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00002d6b      0f1f440000     nop dword [rax + rax]
0x00002d70      837c240802     cmp dword [rsp + 8], 2
0x00002d75      4589d4         mov r12d, r10d
0x00002d78      0f94c2         sete dl
0x00002d7b      4531d2         xor r10d, r10d
0x00002d7e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002d80      e993fbffff     jmp 0x2918                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00002d85      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00002d88      837c240802     cmp dword [rsp + 8], 2
0x00002d8d      0f94c2         sete dl
0x00002d90      4531d2         xor r10d, r10d
0x00002d93      e9c0fdffff     jmp 0x2b58
0x00002d98      0f1f84000000.  nop dword [rax + rax]
0x00002da0      837c240802     cmp dword [rsp + 8], 2
0x00002da5      0f94c2         sete dl
0x00002da8      4531d2         xor r10d, r10d
0x00002dab      4531e4         xor r12d, r12d
0x00002dae      e9aefdffff     jmp 0x2b61
0x00002db3      0f1f440000     nop dword [rax + rax]
0x00002db8      837c240802     cmp dword [rsp + 8], 2
0x00002dbd      4589d4         mov r12d, r10d
0x00002dc0      bb20000000     mov ebx, 0x20                           ; "@"
0x00002dc5      0f94c2         sete dl
0x00002dc8      4531d2         xor r10d, r10d
0x00002dcb      e991fdffff     jmp 0x2b61
0x00002dd0      ba0d000000     mov edx, 0xd
0x00002dd5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002dd8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002ddd      e930fcffff     jmp 0x2a12
0x00002de2      660f1f440000   nop word [rax + rax]
0x00002de8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002ded      e99efcffff     jmp 0x2a90
0x00002df2      660f1f440000   nop word [rax + rax]
0x00002df8      ba09000000     mov edx, 9
0x00002dfd      4531d2         xor r10d, r10d
0x00002e00      bb74000000     mov ebx, 0x74                           ; 't'
0x00002e05      e908fcffff     jmp 0x2a12
0x00002e0a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002e10      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002e15      e976fcffff     jmp 0x2a90
0x00002e1a      660f1f440000   nop word [rax + rax]
0x00002e20      4531d2         xor r10d, r10d
0x00002e23      e998faffff     jmp 0x28c0
0x00002e28      0f1f84000000.  nop dword [rax + rax]
0x00002e30      807c240f00     cmp byte [rsp + 0xf], 0
0x00002e35      0f8565090000   jne 0x37a0
0x00002e3b      4883c501       add rbp, 1
0x00002e3f      4489c0         mov eax, r8d
0x00002e42      4531e4         xor r12d, r12d
0x00002e45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002e4a      e90dfbffff     jmp 0x295c
0x00002e4f      90             nop
0x00002e50      837c240802     cmp dword [rsp + 8], 2
0x00002e55      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002e5a      4589c4         mov r12d, r8d
0x00002e5d      4c89dd         mov rbp, r11
0x00002e60      0f94c2         sete dl
0x00002e63      89d8           mov eax, ebx
0x00002e65      4d85ff         test r15, r15
0x00002e68      0f94c1         sete cl
0x00002e6b      21d0           and eax, edx
0x00002e6d      20c8           and al, cl
0x00002e6f      0f85610a0000   jne 0x38d6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002e75      89d8           mov eax, ebx
0x00002e77      83f001         xor eax, 1
0x00002e7a      20c2           and dl, al
0x00002e7c      0f846a090000   je 0x37ec
0x00002e82      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002e87      0f845d090000   je 0x37ea
0x00002e8d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002e92      0f85f5090000   jne 0x388d
0x00002e98      4d85ed         test r13, r13
0x00002e9b      0f94c0         sete al
0x00002e9e      48837c245000   cmp qword [rsp + 0x50], 0
0x00002ea4      0f95c2         setne dl
0x00002ea7      20d0           and al, dl
0x00002ea9      0f841d0a0000   je 0x38cc
0x00002eaf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002eb4      488d1db22900.  lea rbx, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002ebb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00002ebf      c74424080200.  mov dword [rsp + 8], 2
0x00002ec7      41bf01000000   mov r15d, 1
0x00002ecd      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ed6      c644240f00     mov byte [rsp + 0xf], 0
0x00002edb      48895c2448     mov qword [rsp + 0x48], rbx
0x00002ee0      8844247c       mov byte [rsp + 0x7c], al
0x00002ee4      e9daf8ffff     jmp 0x27c3
0x00002ee9      0f1f80000000.  nop dword [rax]
0x00002ef0      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ef5      0f85a5080000   jne 0x37a0
0x00002efb      4d85ed         test r13, r13
0x00002efe      0f84fc030000   je 0x3300                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002f04      31d2           xor edx, edx
0x00002f06      48837c245000   cmp qword [rsp + 0x50], 0
0x00002f0c      0f85ee030000   jne 0x3300                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002f12      4c896c2450     mov qword [rsp + 0x50], r13
0x00002f17      4983c703       add r15, 3
0x00002f1b      31c0           xor eax, eax
0x00002f1d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002f22      4531c0         xor r8d, r8d
0x00002f25      4989d5         mov r13, rdx
0x00002f28      bb27000000     mov ebx, 0x27                           ; '''
0x00002f2d      e917faffff     jmp 0x2949
0x00002f32      660f1f440000   nop word [rax + rax]
0x00002f38      f644247804     test byte [rsp + 0x78], 4
0x00002f3d      7421           je 0x2f60
0x00002f3f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00002f43      4c39d9         cmp rcx, r11
0x00002f46      7318           jae 0x2f60
0x00002f48      488b442410     mov rax, qword [rsp + 0x10]
0x00002f4d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00002f52      0f848a070000   je 0x36e2
0x00002f58      0f1f84000000.  nop dword [rax + rax]
0x00002f60      31d2           xor edx, edx
0x00002f62      4531e4         xor r12d, r12d
0x00002f65      31c0           xor eax, eax
0x00002f67      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002f6c      e9a7f9ffff     jmp 0x2918
0x00002f71      0f1f80000000.  nop dword [rax]
0x00002f78      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f7d      0f851d080000   jne 0x37a0
0x00002f83      4531e4         xor r12d, r12d
0x00002f86      31c0           xor eax, eax
0x00002f88      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002f8d      e9b7f9ffff     jmp 0x2949                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00002f92      660f1f440000   nop word [rax + rax]
0x00002f98      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002fa0      4983fbff       cmp r11, 0xffffffffffffffff
0x00002fa4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002fb0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002fb5      752d           jne 0x2fe4
0x00002fb7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002fbc      4488442440     mov byte [rsp + 0x40], r8b
0x00002fc1      4488542438     mov byte [rsp + 0x38], r10b
0x00002fc6      4c894c2430     mov qword [rsp + 0x30], r9
0x00002fcb      e8b0e5ffff     call sym.imp.strlen
0x00002fd0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002fd6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00002fdc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00002fdf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002fe4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00002fec      31c9           xor ecx, ecx
0x00002fee      885c247e       mov byte [rsp + 0x7e], bl
0x00002ff2      448844247d     mov byte [rsp + 0x7d], r8b
0x00002ff7      4889cb         mov rbx, rcx
0x00002ffa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003002      4889442438     mov qword [rsp + 0x38], rax
0x00003007      448854247f     mov byte [rsp + 0x7f], r10b
0x0000300c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003014      4c89742440     mov qword [rsp + 0x40], r14
0x00003019      4c896c2470     mov qword [rsp + 0x70], r13
0x0000301e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003023      488b442410     mov rax, qword [rsp + 0x10]
0x00003028      4c8d741d00     lea r14, [rbp + rbx]
0x0000302d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003032      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003037      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000303c      4e8d2c30       lea r13, [rax + r14]
0x00003040      4c29f2         sub rdx, r14
0x00003043      4c89ee         mov rsi, r13
0x00003046      e8f51a0000     call sym.rpl_mbrtowc
0x0000304b      4885c0         test rax, rax
0x0000304e      4989c7         mov r15, rax
0x00003051      744e           je 0x30a1
0x00003053      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003057      0f8418060000   je 0x3675
0x0000305d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003061      0f849a050000   je 0x3601
0x00003067      837c240802     cmp dword [rsp + 8], 2
0x0000306c      0f94c0         sete al
0x0000306f      2244240f       and al, byte [rsp + 0xf]
0x00003073      0f8597010000   jne 0x3210
0x00003079      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003080      e80be7ffff     call sym.imp.iswprint
0x00003085      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000308a      85c0           test eax, eax
0x0000308c      b800000000     mov eax, 0
0x00003091      440f44e0       cmove r12d, eax
0x00003095      4c01fb         add rbx, r15
0x00003098      e8e3e6ffff     call sym.imp.mbsinit
0x0000309d      85c0           test eax, eax
0x0000309f      7482           je 0x3023
0x000030a1      4489e2         mov edx, r12d
0x000030a4      4889df         mov rdi, rbx
0x000030a7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000030ad      83f201         xor edx, 1
0x000030b0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000030b5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000030bb      2254240d       and dl, byte [rsp + 0xd]
0x000030bf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000030c7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000030cc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000030d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000030d6      4883ff01       cmp rdi, 1
0x000030da      0f86fb050000   jbe 0x36db
0x000030e0      4889f9         mov rcx, rdi
0x000030e3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000030e5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000030eb      4801e9         add rcx, rbp
0x000030ee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000030f3      e9b6000000     jmp 0x31ae
0x000030f8      0f1f84000000.  nop dword [rax + rax]
0x00003100      837c240802     cmp dword [rsp + 8], 2
0x00003105      0f94c0         sete al
0x00003108      4584c9         test r9b, r9b
0x0000310b      0f85af040000   jne 0x35c0
0x00003111      4489c6         mov esi, r8d
0x00003114      83f601         xor esi, 1
0x00003117      4020f0         and al, sil
0x0000311a      742f           je 0x314b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000311c      4d39fd         cmp r13, r15
0x0000311f      7605           jbe 0x3126
0x00003121      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003126      498d7701       lea rsi, [r15 + 1]
0x0000312a      4939f5         cmp r13, rsi
0x0000312d      7606           jbe 0x3135                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000312f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003135      498d7702       lea rsi, [r15 + 2]
0x00003139      4939f5         cmp r13, rsi
0x0000313c      7606           jbe 0x3144
0x0000313e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003144      4983c703       add r15, 3
0x00003148      4189c0         mov r8d, eax
0x0000314b      4d39fd         cmp r13, r15
0x0000314e      7605           jbe 0x3155
0x00003150      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003155      498d4701       lea rax, [r15 + 1]
0x00003159      4939c5         cmp r13, rax
0x0000315c      760d           jbe 0x316b
0x0000315e      89d8           mov eax, ebx
0x00003160      c0e806         shr al, 6
0x00003163      83c030         add eax, 0x30
0x00003166      4388443e01     mov byte [r14 + r15 + 1], al
0x0000316b      498d4702       lea rax, [r15 + 2]
0x0000316f      4939c5         cmp r13, rax
0x00003172      7610           jbe 0x3184
0x00003174      89d8           mov eax, ebx
0x00003176      c0e803         shr al, 3
0x00003179      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000317c      83c030         add eax, 0x30
0x0000317f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003184      83e307         and ebx, 7
0x00003187      4883c501       add rbp, 1
0x0000318b      4983c703       add r15, 3
0x0000318f      83c330         add ebx, 0x30
0x00003192      4839cd         cmp rbp, rcx
0x00003195      0f83e5f7ffff   jae 0x2980
0x0000319b      89d6           mov esi, edx
0x0000319d      4d39fd         cmp r13, r15
0x000031a0      7604           jbe 0x31a6
0x000031a2      43881c3e       mov byte [r14 + r15], bl
0x000031a6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000031aa      4983c701       add r15, 1
0x000031ae      84d2           test dl, dl
0x000031b0      0f854affffff   jne 0x3100
0x000031b6      89f0           mov eax, esi
0x000031b8      83f001         xor eax, 1
0x000031bb      4421c0         and eax, r8d
0x000031be      4584d2         test r10b, r10b
0x000031c1      740e           je 0x31d1
0x000031c3      4d39fd         cmp r13, r15
0x000031c6      7605           jbe 0x31cd
0x000031c8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000031cd      4983c701       add r15, 1
0x000031d1      4883c501       add rbp, 1
0x000031d5      4839cd         cmp rbp, rcx
0x000031d8      0f837ef7ffff   jae 0x295c
0x000031de      84c0           test al, al
0x000031e0      0f84f8030000   je 0x35de
0x000031e6      4d39fd         cmp r13, r15
0x000031e9      7605           jbe 0x31f0
0x000031eb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000031f0      498d4701       lea rax, [r15 + 1]
0x000031f4      4939c5         cmp r13, rax
0x000031f7      7606           jbe 0x31ff
0x000031f9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000031ff      4983c702       add r15, 2
0x00003203      4531d2         xor r10d, r10d
0x00003206      4531c0         xor r8d, r8d
0x00003209      eb92           jmp 0x319d
0x0000320b      0f1f440000     nop dword [rax + rax]
0x00003210      4983ff01       cmp r15, 1
0x00003214      0f845ffeffff   je 0x3079
0x0000321a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000321f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003223      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003228      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000322c      eb0f           jmp 0x323d
0x0000322e      6690           nop
0x00003230      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003234      4939d0         cmp r8, rdx
0x00003237      0f843cfeffff   je 0x3079
0x0000323d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003240      83e95b         sub ecx, 0x5b
0x00003243      80f921         cmp cl, 0x21
0x00003246      77e8           ja 0x3230                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003248      be01000000     mov esi, 1
0x0000324d      48d3e6         shl rsi, cl
0x00003250      4889f1         mov rcx, rsi
0x00003253      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000325d      4885f1         test rcx, rsi
0x00003260      74ce           je 0x3230
0x00003262      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003267      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000326c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003271      c74424080200.  mov dword [rsp + 8], 2
0x00003279      807c240d00     cmp byte [rsp + 0xd], 0
0x0000327e      7410           je 0x3290
0x00003280      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003282      b804000000     mov eax, 4
0x00003287      0f44442408     cmove eax, dword [rsp + 8]
0x0000328c      89442408       mov dword [rsp + 8], eax
0x00003290      4883ec08       sub rsp, 8
0x00003294      4889e9         mov rcx, rbp
0x00003297      4c89ee         mov rsi, r13
0x0000329a      ff742468       push qword [rsp + 0x68]
0x0000329e      ff742478       push qword [rsp + 0x78]
0x000032a2      4c89f7         mov rdi, r14
0x000032a5      6a00           push 0
0x000032a7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000032af      448b442428     mov r8d, dword [rsp + 0x28]
0x000032b4      488b542430     mov rdx, qword [rsp + 0x30]
0x000032b9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000032bd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000032c2      4883c420       add rsp, 0x20
0x000032c6      4989c7         mov r15, rax
0x000032c9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000032d1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000032da      4c89f8         mov rax, r15
0x000032dd      0f8500060000   jne 0x38e3
0x000032e3      4881c4b80000.  add rsp, 0xb8
0x000032ea      5b             pop rbx
0x000032eb      5d             pop rbp
0x000032ec      415c           pop r12
0x000032ee      415d           pop r13
0x000032f0      415e           pop r14
0x000032f2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000032f4      c3             ret
0x000032f5      0f1f00         nop dword [rax]
0x000032f8      4c89dd         mov rbp, r11
0x000032fb      e979ffffff     jmp 0x3279
0x00003300      4d39fd         cmp r13, r15
0x00003303      7605           jbe 0x330a
0x00003305      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000330a      498d4701       lea rax, [r15 + 1]
0x0000330e      4939c5         cmp r13, rax
0x00003311      7606           jbe 0x3319
0x00003313      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003319      498d4702       lea rax, [r15 + 2]
0x0000331d      4939c5         cmp r13, rax
0x00003320      0f86ec050000   jbe 0x3912
0x00003326      4c89ea         mov rdx, r13
0x00003329      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000332f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003334      e9d9fbffff     jmp 0x2f12
0x00003339      4489e0         mov eax, r12d
0x0000333c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003341      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003344      e900f6ffff     jmp 0x2949                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003349      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000334f      e9c5f9ffff     jmp 0x2d19
0x00003354      85db           test ebx, ebx
0x00003356      0f8527f4ffff   jne 0x2783
0x0000335c      c644240d01     mov byte [rsp + 0xd], 1
0x00003361      4d85ed         test r13, r13
0x00003364      0f8590050000   jne 0x38fa
0x0000336a      488d05fc2400.  lea rax, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003371      48c744245000.  mov qword [rsp + 0x50], 0
0x0000337a      c644240e01     mov byte [rsp + 0xe], 1
0x0000337f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003384      4531e4         xor r12d, r12d
0x00003387      c644240f00     mov byte [rsp + 0xf], 0
0x0000338c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003395      4889442448     mov qword [rsp + 0x48], rax
0x0000339a      41bf01000000   mov r15d, 1
0x000033a0      c74424080200.  mov dword [rsp + 8], 2
0x000033a8      e916f4ffff     jmp 0x27c3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000033ad      0f1f00         nop dword [rax]
0x000033b0      85db           test ebx, ebx
0x000033b2      0f85f5030000   jne 0x37ad
0x000033b8      4d85ed         test r13, r13
0x000033bb      0f8425020000   je 0x35e6
0x000033c1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000033c5      c644240e01     mov byte [rsp + 0xe], 1
0x000033ca      4531e4         xor r12d, r12d
0x000033cd      c644247c00     mov byte [rsp + 0x7c], 0
0x000033d2      48c744245000.  mov qword [rsp + 0x50], 0
0x000033db      488d05892400.  lea rax, str.l______l                   ; 0x586b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000033e2      c644240f00     mov byte [rsp + 0xf], 0
0x000033e7      c644240d01     mov byte [rsp + 0xd], 1
0x000033ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000033f5      41bf01000000   mov r15d, 1
0x000033fb      4889442448     mov qword [rsp + 0x48], rax
0x00003400      e9bef3ffff     jmp 0x27c3
0x00003405      488d055f2400.  lea rax, str.l______l                   ; 0x586b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000340c      c644240e01     mov byte [rsp + 0xe], 1
0x00003411      c644247c00     mov byte [rsp + 0x7c], 0
0x00003416      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003419      48c744245000.  mov qword [rsp + 0x50], 0
0x00003422      c644240f01     mov byte [rsp + 0xf], 1
0x00003427      c644240d01     mov byte [rsp + 0xd], 1
0x0000342c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003435      4531ff         xor r15d, r15d
0x00003438      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000343d      c74424080500.  mov dword [rsp + 8], 5
0x00003445      e979f3ffff     jmp 0x27c3
0x0000344a      c644240e01     mov byte [rsp + 0xe], 1
0x0000344f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003454      4531e4         xor r12d, r12d
0x00003457      48c744245000.  mov qword [rsp + 0x50], 0
0x00003460      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003465      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003468      c644240d01     mov byte [rsp + 0xd], 1
0x0000346d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003476      48c744244800.  mov qword [rsp + 0x48], 0
0x0000347f      e93ff3ffff     jmp 0x27c3
0x00003484      837c24080a     cmp dword [rsp + 8], 0xa
0x00003489      7456           je 0x34e1
0x0000348b      488d35dd2300.  lea rsi, [0x0000586f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003492      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003494      ba05000000     mov edx, 5
0x00003499      e8c2e0ffff     call sym.imp.dcgettext
0x0000349e      4889c1         mov rcx, rax
0x000034a1      4889442468     mov qword [rsp + 0x68], rax
0x000034a6      488d05c22300.  lea rax, [0x0000586f]                   ; "`"
0x000034ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000034b0      0f8498030000   je 0x384e
0x000034b6      488d35b02300.  lea rsi, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000034bd      31ff           xor edi, edi
0x000034bf      ba05000000     mov edx, 5
0x000034c4      e897e0ffff     call sym.imp.dcgettext
0x000034c9      4889c1         mov rcx, rax
0x000034cc      4889442460     mov qword [rsp + 0x60], rax
0x000034d1      488d05952300.  lea rax, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000034d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000034db      0f8483030000   je 0x3864
0x000034e1      4531ff         xor r15d, r15d
0x000034e4      85db           test ebx, ebx
0x000034e6      0f84c1010000   je 0x36ad
0x000034ec      85db           test ebx, ebx
0x000034ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000034f3      0f9544240f     setne byte [rsp + 0xf]
0x000034f8      4531e4         xor r12d, r12d
0x000034fb      4889df         mov rdi, rbx
0x000034fe      e87de0ffff     call sym.imp.strlen
0x00003503      48895c2448     mov qword [rsp + 0x48], rbx
0x00003508      4889442418     mov qword [rsp + 0x18], rax
0x0000350d      c644240e01     mov byte [rsp + 0xe], 1
0x00003512      c644247c00     mov byte [rsp + 0x7c], 0
0x00003517      48c744245000.  mov qword [rsp + 0x50], 0
0x00003520      c644240d01     mov byte [rsp + 0xd], 1
0x00003525      e999f2ffff     jmp 0x27c3
0x0000352a      c644240e01     mov byte [rsp + 0xe], 1
0x0000352f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003534      4531e4         xor r12d, r12d
0x00003537      48c744245000.  mov qword [rsp + 0x50], 0
0x00003540      c644240f00     mov byte [rsp + 0xf], 0
0x00003545      4531ff         xor r15d, r15d
0x00003548      c644240d00     mov byte [rsp + 0xd], 0
0x0000354d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003556      48c744244800.  mov qword [rsp + 0x48], 0
0x0000355f      e95ff2ffff     jmp 0x27c3
0x00003564      c644240e01     mov byte [rsp + 0xe], 1
0x00003569      c644247c00     mov byte [rsp + 0x7c], 0
0x0000356e      4531e4         xor r12d, r12d
0x00003571      48c744245000.  mov qword [rsp + 0x50], 0
0x0000357a      c644240f01     mov byte [rsp + 0xf], 1
0x0000357f      c644240d01     mov byte [rsp + 0xd], 1
0x00003584      e91af2ffff     jmp 0x27a3
0x00003589      4d39fd         cmp r13, r15
0x0000358c      7605           jbe 0x3593
0x0000358e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003593      488d4102       lea rax, [rcx + 2]
0x00003597      4939c5         cmp r13, rax
0x0000359a      7606           jbe 0x35a2
0x0000359c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000035a2      4489e0         mov eax, r12d
0x000035a5      4c8d7903       lea r15, [rcx + 3]
0x000035a9      4531e4         xor r12d, r12d
0x000035ac      bb30000000     mov ebx, 0x30                           ; '0'
0x000035b1      e962f3ffff     jmp 0x2918
0x000035b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000035c0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000035c5      4c89dd         mov rbp, r11
0x000035c8      885c240d       mov byte [rsp + 0xd], bl
0x000035cc      e9a8fcffff     jmp 0x3279
0x000035d1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000035d6      4531e4         xor r12d, r12d
0x000035d9      e902fbffff     jmp 0x30e0
0x000035de      4531d2         xor r10d, r10d
0x000035e1      e9b7fbffff     jmp 0x319d
0x000035e6      48c744245000.  mov qword [rsp + 0x50], 0
0x000035ef      c644240e01     mov byte [rsp + 0xe], 1
0x000035f4      4531e4         xor r12d, r12d
0x000035f7      c644247c00     mov byte [rsp + 0x7c], 0
0x000035fc      e9dafdffff     jmp 0x33db
0x00003601      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003606      4c89f6         mov rsi, r14
0x00003609      4c89e9         mov rcx, r13
0x0000360c      4889d8         mov rax, rbx
0x0000360f      4889df         mov rdi, rbx
0x00003612      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003618      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000361d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003625      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003628      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000362e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003636      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000363b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003640      7326           jae 0x3668
0x00003642      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003645      7510           jne 0x3657
0x00003647      eb1f           jmp 0x3668
0x00003649      0f1f80000000.  nop dword [rax]
0x00003650      41803c0100     cmp byte [r9 + rax], 0
0x00003655      740e           je 0x3665
0x00003657      4883c001       add rax, 1
0x0000365b      488d540500     lea rdx, [rbp + rax]
0x00003660      4939d3         cmp r11, rdx
0x00003663      77eb           ja 0x3650
0x00003665      4889c7         mov rdi, rax
0x00003668      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000366d      4531e4         xor r12d, r12d
0x00003670      e961faffff     jmp 0x30d6
0x00003675      4889df         mov rdi, rbx
0x00003678      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000367e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003683      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003689      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003691      4531e4         xor r12d, r12d
0x00003694      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003699      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000369e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000036a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000036a8      e929faffff     jmp 0x30d6
0x000036ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000036b2      0fb602         movzx eax, byte [rdx]
0x000036b5      84c0           test al, al
0x000036b7      0f842ffeffff   je 0x34ec
0x000036bd      0f1f00         nop dword [rax]
0x000036c0      4d39fd         cmp r13, r15
0x000036c3      7604           jbe 0x36c9
0x000036c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000036c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000036cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000036d2      84c0           test al, al
0x000036d4      75ea           jne 0x36c0
0x000036d6      e911feffff     jmp 0x34ec
0x000036db      89d0           mov eax, edx
0x000036dd      e955f5ffff     jmp 0x2c37
0x000036e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000036e6      80fb3e         cmp bl, 0x3e
0x000036e9      0f8771f8ffff   ja 0x2f60
0x000036ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000036f9      480fa3d8       bt rax, rbx
0x000036fd      0f835df8ffff   jae 0x2f60
0x00003703      807c240f00     cmp byte [rsp + 0xf], 0
0x00003708      0f85e4010000   jne 0x38f2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000370e      4d39fd         cmp r13, r15
0x00003711      7605           jbe 0x3718
0x00003713      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003718      498d4701       lea rax, [r15 + 1]
0x0000371c      4939c5         cmp r13, rax
0x0000371f      7606           jbe 0x3727
0x00003721      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003727      498d4702       lea rax, [r15 + 2]
0x0000372b      4939c5         cmp r13, rax
0x0000372e      7606           jbe 0x3736
0x00003730      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003736      498d4703       lea rax, [r15 + 3]
0x0000373a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000373d      7606           jbe 0x3745
0x0000373f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003745      4983c704       add r15, 4
0x00003749      31d2           xor edx, edx
0x0000374b      4531e4         xor r12d, r12d
0x0000374e      31c0           xor eax, eax
0x00003750      4889cd         mov rbp, rcx
0x00003753      e9c0f1ffff     jmp 0x2918
0x00003758      85db           test ebx, ebx
0x0000375a      0f8488010000   je 0x38e8
0x00003760      488d05062100.  lea rax, [0x0000586d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003767      c644240e01     mov byte [rsp + 0xe], 1
0x0000376c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003771      4531e4         xor r12d, r12d
0x00003774      48c744245000.  mov qword [rsp + 0x50], 0
0x0000377d      c644240f01     mov byte [rsp + 0xf], 1
0x00003782      c644240d00     mov byte [rsp + 0xd], 0
0x00003787      48c744241801.  mov qword [rsp + 0x18], 1
0x00003790      4531ff         xor r15d, r15d
0x00003793      4889442448     mov qword [rsp + 0x48], rax
0x00003798      e926f0ffff     jmp 0x27c3
0x0000379d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000037a0      4c89dd         mov rbp, r11
0x000037a3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000037a8      e9ccfaffff     jmp 0x3279
0x000037ad      488d05b72000.  lea rax, str.l______l                   ; 0x586b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037b4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000037b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000037be      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000037c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000037ca      c644240f01     mov byte [rsp + 0xf], 1
0x000037cf      c644240d01     mov byte [rsp + 0xd], 1
0x000037d4      48c744241801.  mov qword [rsp + 0x18], 1
0x000037dd      4531ff         xor r15d, r15d
0x000037e0      4889442448     mov qword [rsp + 0x48], rax
0x000037e5      e9d9efffff     jmp 0x27c3
0x000037ea      89d0           mov eax, edx
0x000037ec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000037f1      4885db         test rbx, rbx
0x000037f4      742c           je 0x3822
0x000037f6      84c0           test al, al
0x000037f8      7428           je 0x3822
0x000037fa      0fb60b         movzx ecx, byte [rbx]
0x000037fd      4889d8         mov rax, rbx
0x00003800      84c9           test cl, cl
0x00003802      741e           je 0x3822
0x00003804      4c89fa         mov rdx, r15
0x00003807      4c29f8         sub rax, r15
0x0000380a      4939d5         cmp r13, rdx
0x0000380d      7604           jbe 0x3813
0x0000380f      41880c16       mov byte [r14 + rdx], cl
0x00003813      4883c201       add rdx, 1
0x00003817      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000381b      84c9           test cl, cl
0x0000381d      75eb           jne 0x380a
0x0000381f      4989d7         mov r15, rdx
0x00003822      4d39fd         cmp r13, r15
0x00003825      0f869efaffff   jbe 0x32c9
0x0000382b      43c6043e00     mov byte [r14 + r15], 0
0x00003830      e994faffff     jmp 0x32c9
0x00003835      837c240802     cmp dword [rsp + 8], 2
0x0000383a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000383f      4c89dd         mov rbp, r11
0x00003842      0f94c0         sete al
0x00003845      885c240d       mov byte [rsp + 0xd], bl
0x00003849      e92bfaffff     jmp 0x3279
0x0000384e      8b742408       mov esi, dword [rsp + 8]
0x00003852      4889cf         mov rdi, rcx
0x00003855      e8a6edffff     call sym.gettext_quote.part.1
0x0000385a      4889442468     mov qword [rsp + 0x68], rax
0x0000385f      e952fcffff     jmp 0x34b6
0x00003864      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003868      4889cf         mov rdi, rcx
0x0000386b      e890edffff     call sym.gettext_quote.part.1
0x00003870      4889442460     mov qword [rsp + 0x60], rax
0x00003875      e967fcffff     jmp 0x34e1
0x0000387a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000387f      4c89dd         mov rbp, r11
0x00003882      89d0           mov eax, edx
0x00003884      885c240d       mov byte [rsp + 0xd], bl
0x00003888      e9ecf9ffff     jmp 0x3279
0x0000388d      4883ec08       sub rsp, 8
0x00003891      41b805000000   mov r8d, 5
0x00003897      4c89d9         mov rcx, r11
0x0000389a      ff742468       push qword [rsp + 0x68]
0x0000389e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000038a2      4c89f7         mov rdi, r14
0x000038a5      ff742438       push qword [rsp + 0x38]
0x000038a9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000038b1      488b542430     mov rdx, qword [rsp + 0x30]
0x000038b6      488b742470     mov rsi, qword [rsp + 0x70]
0x000038bb      e830eeffff     call sym.quotearg_buffer_restyled
0x000038c0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000038c4      4989c7         mov r15, rax
0x000038c7      e9fdf9ffff     jmp 0x32c9
0x000038cc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000038d1      e916ffffff     jmp 0x37ec
0x000038d6      c74424080200.  mov dword [rsp + 8], 2
0x000038de      e996f9ffff     jmp 0x3279
0x000038e3      e8a8dcffff     call sym.imp.__stack_chk_fail
0x000038e8      c644240d00     mov byte [rsp + 0xd], 0
0x000038ed      e96ffaffff     jmp 0x3361
0x000038f2      4c89dd         mov rbp, r11
0x000038f5      e996f9ffff     jmp 0x3290
0x000038fa      c644240e01     mov byte [rsp + 0xe], 1
0x000038ff      31c0           xor eax, eax
0x00003901      4531e4         xor r12d, r12d
0x00003904      48c744245000.  mov qword [rsp + 0x50], 0
0x0000390d      e9a2f5ffff     jmp 0x2eb4
0x00003912      4c89ea         mov rdx, r13
0x00003915      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000391a      e9f3f5ffff     jmp 0x2f12
0x0000391f      e88cdbffff     call sym.imp.abort
0x00003924      6690           nop
0x00003926      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003930      4157           push r15
0x00003932      4156           push r14
0x00003934      4c63ff         movsxd r15, edi
0x00003937      4155           push r13
0x00003939      4154           push r12
0x0000393b      4989d6         mov r14, rdx
0x0000393e      55             push rbp
0x0000393f      53             push rbx
0x00003940      4889cd         mov rbp, rcx
0x00003943      4883ec28       sub rsp, 0x28
0x00003947      4889742408     mov qword [rsp + 8], rsi
0x0000394c      e86fdbffff     call sym.imp.__errno_location
0x00003951      4989c5         mov r13, rax
0x00003954      8b00           mov eax, dword [rax]
0x00003956      4585ff         test r15d, r15d
0x00003959      488b1d004720.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003960      89442418       mov dword [rsp + 0x18], eax
0x00003964      0f8867010000   js 0x3ad1
0x0000396a      44393de74620.  cmp dword [obj.nslots], r15d            ; [0x208058:4]=1
0x00003971      7f62           jg 0x39d5
0x00003973      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000397a      0f8456010000   je 0x3ad6
0x00003980      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003984      488d05e54620.  lea rax, obj.slotvec0                   ; 0x208070
0x0000398b      4963f4         movsxd rsi, r12d
0x0000398e      48c1e604       shl rsi, 4
0x00003992      4839c3         cmp rbx, rax
0x00003995      0f8415010000   je 0x3ab0
0x0000399b      4889df         mov rdi, rbx
0x0000399e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000039a3      4889c3         mov rbx, rax
0x000039a6      488905b34620.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x000039ad      48633da44620.  movsxd rdi, dword [obj.nslots]          ; [0x208058:4]=1
0x000039b4      4489e2         mov edx, r12d
0x000039b7      31f6           xor esi, esi
0x000039b9      29fa           sub edx, edi
0x000039bb      48c1e704       shl rdi, 4
0x000039bf      4863d2         movsxd rdx, edx
0x000039c2      4801df         add rdi, rbx
0x000039c5      48c1e204       shl rdx, 4
0x000039c9      e822dcffff     call sym.imp.memset
0x000039ce      448925834620.  mov dword [obj.nslots], r12d            ; [0x208058:4]=1
0x000039d5      8b4504         mov eax, dword [rbp + 4]
0x000039d8      49c1e704       shl r15, 4
0x000039dc      4883ec08       sub rsp, 8
0x000039e0      4c01fb         add rbx, r15
0x000039e3      4c8d7d08       lea r15, [rbp + 8]
0x000039e7      448b4500       mov r8d, dword [rbp]
0x000039eb      4c8b1b         mov r11, qword [rbx]
0x000039ee      4c8b6308       mov r12, qword [rbx + 8]
0x000039f2      4c89f1         mov rcx, r14
0x000039f5      83c801         or eax, 1
0x000039f8      89442424       mov dword [rsp + 0x24], eax
0x000039fc      ff7530         push qword [rbp + 0x30]
0x000039ff      4189c1         mov r9d, eax
0x00003a02      ff7528         push qword [rbp + 0x28]
0x00003a05      4157           push r15
0x00003a07      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003a0a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003a0f      4c89e7         mov rdi, r12
0x00003a12      4c895c2430     mov qword [rsp + 0x30], r11
0x00003a17      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003a1c      4883c420       add rsp, 0x20
0x00003a20      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003a25      4939c3         cmp r11, rax
0x00003a28      7767           ja 0x3a91
0x00003a2a      488d7001       lea rsi, [rax + 1]
0x00003a2e      488d058b4820.  lea rax, obj.slot0                      ; 0x2082c0
0x00003a35      4939c4         cmp r12, rax
0x00003a38      488933         mov qword [rbx], rsi
0x00003a3b      7412           je 0x3a4f
0x00003a3d      4c89e7         mov rdi, r12
0x00003a40      4889742410     mov qword [rsp + 0x10], rsi
0x00003a45      e856daffff     call sym.imp.free
0x00003a4a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003a4f      4889f7         mov rdi, rsi
0x00003a52      4889742410     mov qword [rsp + 0x10], rsi
0x00003a57      e8540e0000     call sym.xmalloc
0x00003a5c      4883ec08       sub rsp, 8
0x00003a60      48894308       mov qword [rbx + 8], rax
0x00003a64      448b4500       mov r8d, dword [rbp]
0x00003a68      ff7530         push qword [rbp + 0x30]
0x00003a6b      ff7528         push qword [rbp + 0x28]
0x00003a6e      4c89f1         mov rcx, r14
0x00003a71      4157           push r15
0x00003a73      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003a78      4889c7         mov rdi, rax
0x00003a7b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003a80      488b742430     mov rsi, qword [rsp + 0x30]
0x00003a85      4989c4         mov r12, rax
0x00003a88      e863ecffff     call sym.quotearg_buffer_restyled
0x00003a8d      4883c420       add rsp, 0x20
0x00003a91      8b442418       mov eax, dword [rsp + 0x18]
0x00003a95      41894500       mov dword [r13], eax
0x00003a99      4883c428       add rsp, 0x28
0x00003a9d      4c89e0         mov rax, r12
0x00003aa0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003aa1      5d             pop rbp
0x00003aa2      415c           pop r12
0x00003aa4      415d           pop r13
0x00003aa6      415e           pop r14
0x00003aa8      415f           pop r15
0x00003aaa      c3             ret
0x00003aab      0f1f440000     nop dword [rax + rax]
0x00003ab0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003ab2      e8590e0000     call sym.xrealloc
0x00003ab7      660f6f05b145.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003abf      4889c3         mov rbx, rax
0x00003ac2      488905974520.  mov qword [obj.slotvec], rax            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003ac9      0f1100         movups xmmword [rax], xmm0
0x00003acc      e9dcfeffff     jmp 0x39ad
0x00003ad1      e8dad9ffff     call sym.imp.abort
0x00003ad6      e825100000     call sym.xalloc_die
0x00003adb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003ae0      4154           push r12
0x00003ae2      55             push rbp
0x00003ae3      53             push rbx
0x00003ae4      4889fb         mov rbx, rdi
0x00003ae7      e8d4d9ffff     call sym.imp.__errno_location
0x00003aec      448b20         mov r12d, dword [rax]
0x00003aef      4889c5         mov rbp, rax
0x00003af2      488d05c74820.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003af9      4885db         test rbx, rbx
0x00003afc      be38000000     mov esi, 0x38                           ; '8'
0x00003b01      480f44d8       cmove rbx, rax
0x00003b05      4889df         mov rdi, rbx
0x00003b08      e8a30f0000     call sym.xmemdup
0x00003b0d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003b11      5b             pop rbx
0x00003b12      5d             pop rbp
0x00003b13      415c           pop r12
0x00003b15      c3             ret
0x00003b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003b20      488d05994820.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003b27      4885ff         test rdi, rdi
0x00003b2a      480f44f8       cmove rdi, rax
0x00003b2e      8b07           mov eax, dword [rdi]
0x00003b30      c3             ret
0x00003b31      0f1f440000     nop dword [rax + rax]
0x00003b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003b40      488d05794820.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003b47      4885ff         test rdi, rdi
0x00003b4a      480f44f8       cmove rdi, rax
0x00003b4e      8937           mov dword [rdi], esi
0x00003b50      c3             ret
0x00003b51      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003b60      488d05594820.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003b67      4885ff         test rdi, rdi
0x00003b6a      89f1           mov ecx, esi
0x00003b6c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003b70      89f0           mov eax, esi
0x00003b72      83e11f         and ecx, 0x1f
0x00003b75      c0e805         shr al, 5
0x00003b78      0fb6c0         movzx eax, al
0x00003b7b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003b80      8b37           mov esi, dword [rdi]
0x00003b82      89f0           mov eax, esi
0x00003b84      d3e8           shr eax, cl
0x00003b86      31c2           xor edx, eax
0x00003b88      83e001         and eax, 1
0x00003b8b      83e201         and edx, 1
0x00003b8e      d3e2           shl edx, cl
0x00003b90      31f2           xor edx, esi
0x00003b92      8917           mov dword [rdi], edx
0x00003b94      c3             ret
0x00003b95      90             nop
0x00003b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003ba0      488d05194820.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003ba7      4885ff         test rdi, rdi
0x00003baa      480f44f8       cmove rdi, rax
0x00003bae      8b4704         mov eax, dword [rdi + 4]
0x00003bb1      897704         mov dword [rdi + 4], esi
0x00003bb4      c3             ret
0x00003bb5      90             nop
0x00003bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003bc0      488d05f94720.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003bc7      4885ff         test rdi, rdi
0x00003bca      480f44f8       cmove rdi, rax
0x00003bce      4885f6         test rsi, rsi
0x00003bd1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003bd7      740e           je 0x3be7
0x00003bd9      4885d2         test rdx, rdx
0x00003bdc      7409           je 0x3be7
0x00003bde      48897728       mov qword [rdi + 0x28], rsi
0x00003be2      48895730       mov qword [rdi + 0x30], rdx
0x00003be6      c3             ret
0x00003be7      4883ec08       sub rsp, 8
0x00003beb      e8c0d8ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003bf0      4157           push r15
0x00003bf2      4156           push r14
0x00003bf4      488d05c54720.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003bfb      4155           push r13
0x00003bfd      4154           push r12
0x00003bff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003c02      55             push rbp
0x00003c03      53             push rbx
0x00003c04      4c89c3         mov rbx, r8
0x00003c07      4989f6         mov r14, rsi
0x00003c0a      4989d7         mov r15, rdx
0x00003c0d      4883ec18       sub rsp, 0x18
0x00003c11      4d85c0         test r8, r8
0x00003c14      480f44d8       cmove rbx, rax
0x00003c18      48894c2408     mov qword [rsp + 8], rcx
0x00003c1d      e89ed8ffff     call sym.imp.__errno_location
0x00003c22      448b20         mov r12d, dword [rax]
0x00003c25      4889c5         mov rbp, rax
0x00003c28      488d4308       lea rax, [rbx + 8]
0x00003c2c      4883ec08       sub rsp, 8
0x00003c30      448b4b04       mov r9d, dword [rbx + 4]
0x00003c34      ff7330         push qword [rbx + 0x30]
0x00003c37      448b03         mov r8d, dword [rbx]
0x00003c3a      ff7328         push qword [rbx + 0x28]
0x00003c3d      4c89fa         mov rdx, r15
0x00003c40      50             push rax
0x00003c41      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003c46      4c89f6         mov rsi, r14
0x00003c49      4c89ef         mov rdi, r13
0x00003c4c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003c51      44896500       mov dword [rbp], r12d
0x00003c55      4883c438       add rsp, 0x38
0x00003c59      5b             pop rbx
0x00003c5a      5d             pop rbp
0x00003c5b      415c           pop r12
0x00003c5d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003c5f      415e           pop r14
0x00003c61      415f           pop r15
0x00003c63      c3             ret
0x00003c64      6690           nop
0x00003c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003c70      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003c72      4156           push r14
0x00003c74      488d05454720.  lea rax, obj.default_quoting_options    ; 0x2083c0
0x00003c7b      4155           push r13
0x00003c7d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003c7f      4989d4         mov r12, rdx
0x00003c82      55             push rbp
0x00003c83      53             push rbx
0x00003c84      4889cb         mov rbx, rcx
0x00003c87      4989fe         mov r14, rdi
0x00003c8a      4989f7         mov r15, rsi
0x00003c8d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003c91      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003c94      480f44d8       cmove rbx, rax
0x00003c98      31ed           xor ebp, ebp
0x00003c9a      e821d8ffff     call sym.imp.__errno_location
0x00003c9f      4d85e4         test r12, r12
0x00003ca2      4989c5         mov r13, rax
0x00003ca5      8b00           mov eax, dword [rax]
0x00003ca7      400f94c5       sete bpl
0x00003cab      0b6b04         or ebp, dword [rbx + 4]
0x00003cae      4c8d5308       lea r10, [rbx + 8]
0x00003cb2      4883ec08       sub rsp, 8
0x00003cb6      448b03         mov r8d, dword [rbx]
0x00003cb9      4c89f9         mov rcx, r15
0x00003cbc      89442414       mov dword [rsp + 0x14], eax
0x00003cc0      ff7330         push qword [rbx + 0x30]
0x00003cc3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003cc6      ff7328         push qword [rbx + 0x28]
0x00003cc9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003ccb      31f6           xor esi, esi
0x00003ccd      4189e9         mov r9d, ebp
0x00003cd0      31ff           xor edi, edi
0x00003cd2      4c89542440     mov qword [rsp + 0x40], r10
0x00003cd7      e814eaffff     call sym.quotearg_buffer_restyled
0x00003cdc      488d7001       lea rsi, [rax + 1]
0x00003ce0      4889442448     mov qword [rsp + 0x48], rax
0x00003ce5      4883c420       add rsp, 0x20
0x00003ce9      4889f7         mov rdi, rsi
0x00003cec      4889742418     mov qword [rsp + 0x18], rsi
0x00003cf1      e8ba0b0000     call sym.xmalloc
0x00003cf6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003cfb      4883ec08       sub rsp, 8
0x00003cff      ff7330         push qword [rbx + 0x30]
0x00003d02      ff7328         push qword [rbx + 0x28]
0x00003d05      4c8b542438     mov r10, qword [rsp + 0x38]
0x00003d0a      4189e9         mov r9d, ebp
0x00003d0d      448b03         mov r8d, dword [rbx]
0x00003d10      4c89f9         mov rcx, r15
0x00003d13      4c89f2         mov rdx, r14
0x00003d16      4889c7         mov rdi, rax
0x00003d19      4152           push r10
0x00003d1b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003d20      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003d25      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003d29      4883c420       add rsp, 0x20
0x00003d2d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003d30      41894500       mov dword [r13], eax
0x00003d34      7409           je 0x3d3f
0x00003d36      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00003d3b      4d891c24       mov qword [r12], r11
0x00003d3f      488b442410     mov rax, qword [rsp + 0x10]
0x00003d44      4883c438       add rsp, 0x38
0x00003d48      5b             pop rbx
0x00003d49      5d             pop rbp
0x00003d4a      415c           pop r12
0x00003d4c      415d           pop r13
0x00003d4e      415e           pop r14
0x00003d50      415f           pop r15
0x00003d52      c3             ret
0x00003d53      0f1f00         nop dword [rax]
0x00003d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003d60      4889d1         mov rcx, rdx
0x00003d63      31d2           xor edx, edx
0x00003d65      e906ffffff     jmp sym.quotearg_alloc_mem
0x00003d6a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00003d70      8b05e2422000   mov eax, dword [obj.nslots]             ; [0x208058:4]=1
0x00003d76      4154           push r12
0x00003d78      4c8b25e14220.  mov r12, qword [obj.slotvec]            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003d7f      55             push rbp
0x00003d80      53             push rbx
0x00003d81      83f801         cmp eax, 1
0x00003d84      7e2b           jle 0x3db1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00003d86      83e802         sub eax, 2
0x00003d89      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003d8e      48c1e004       shl rax, 4
0x00003d92      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00003d97      660f1f840000.  nop word [rax + rax]
0x00003da0      488b3b         mov rdi, qword [rbx]
0x00003da3      4883c310       add rbx, 0x10
0x00003da7      e8f4d6ffff     call sym.imp.free
0x00003dac      4839eb         cmp rbx, rbp
0x00003daf      75ef           jne 0x3da0
0x00003db1      498b7c2408     mov rdi, qword [r12 + 8]
0x00003db6      488d1d034520.  lea rbx, obj.slot0                      ; 0x2082c0
0x00003dbd      4839df         cmp rdi, rbx
0x00003dc0      7417           je 0x3dd9
0x00003dc2      e8d9d6ffff     call sym.imp.free
0x00003dc7      48c7059e4220.  mov qword [obj.slotvec0], 0x100         ; [0x208070:8]=256
0x00003dd2      48891d9f4220.  mov qword [0x00208078], rbx             ; [0x208078:8]=0x2082c0 obj.slot0
0x00003dd9      488d1d904220.  lea rbx, obj.slotvec0                   ; 0x208070
0x00003de0      4939dc         cmp r12, rbx
0x00003de3      740f           je 0x3df4
0x00003de5      4c89e7         mov rdi, r12
0x00003de8      e8b3d6ffff     call sym.imp.free
0x00003ded      48891d6c4220.  mov qword [obj.slotvec], rbx            ; [0x208060:8]=0x208070 obj.slotvec0 ; "p\x80 "
0x00003df4      5b             pop rbx
0x00003df5      c70559422000.  mov dword [obj.nslots], 1               ; [0x208058:4]=1
0x00003dff      5d             pop rbp
0x00003e00      415c           pop r12
0x00003e02      c3             ret
0x00003e03      0f1f00         nop dword [rax]
0x00003e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003e10      488d0da94520.  lea rcx, obj.default_quoting_options    ; 0x2083c0
0x00003e17      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003e1e      e90dfbffff     jmp sym.quotearg_n_options
0x00003e23      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003e30      488d0d894520.  lea rcx, obj.default_quoting_options    ; 0x2083c0
0x00003e37      e9f4faffff     jmp sym.quotearg_n_options
0x00003e3c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003e40      488d0d794520.  lea rcx, obj.default_quoting_options    ; 0x2083c0
0x00003e47      4889fe         mov rsi, rdi
0x00003e4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003e51      31ff           xor edi, edi
0x00003e53      e9d8faffff     jmp sym.quotearg_n_options
0x00003e58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003e60      488d0d594520.  lea rcx, obj.default_quoting_options    ; 0x2083c0
0x00003e67      4889f2         mov rdx, rsi
0x00003e6a      4889fe         mov rsi, rdi
0x00003e6d      31ff           xor edi, edi
0x00003e6f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003e74      6690           nop
0x00003e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003e80      4883ec48       sub rsp, 0x48
0x00003e84      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003e87      64488b142528.  mov rdx, qword fs:[0x28]
0x00003e90      4889542438     mov qword [rsp + 0x38], rdx
0x00003e95      31d2           xor edx, edx
0x00003e97      83fe0a         cmp esi, 0xa
0x00003e9a      7468           je 0x3f04
0x00003e9c      893424         mov dword [rsp], esi
0x00003e9f      4889e1         mov rcx, rsp
0x00003ea2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003ea9      4889c6         mov rsi, rax
0x00003eac      48c744240400.  mov qword [rsp + 4], 0
0x00003eb5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003ebe      48c744241400.  mov qword [rsp + 0x14], 0
0x00003ec7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003ed0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003ed9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003ee2      c74424340000.  mov dword [rsp + 0x34], 0
0x00003eea      e841faffff     call sym.quotearg_n_options
0x00003eef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003ef4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003efd      750a           jne 0x3f09                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00003eff      4883c448       add rsp, 0x48
0x00003f03      c3             ret
0x00003f04      e8a7d5ffff     call sym.imp.abort
0x00003f09      e882d6ffff     call sym.imp.__stack_chk_fail
0x00003f0e      6690           nop
;-- quotearg_n_style_mem:
0x00003f10      4883ec48       sub rsp, 0x48
0x00003f14      4889d0         mov rax, rdx
0x00003f17      4889ca         mov rdx, rcx
0x00003f1a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003f23      48894c2438     mov qword [rsp + 0x38], rcx
0x00003f28      31c9           xor ecx, ecx
0x00003f2a      83fe0a         cmp esi, 0xa
0x00003f2d      7461           je 0x3f90
0x00003f2f      893424         mov dword [rsp], esi
0x00003f32      4889e1         mov rcx, rsp
0x00003f35      4889c6         mov rsi, rax
0x00003f38      48c744240400.  mov qword [rsp + 4], 0
0x00003f41      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003f4a      48c744241400.  mov qword [rsp + 0x14], 0
0x00003f53      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003f5c      48c744242400.  mov qword [rsp + 0x24], 0
0x00003f65      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003f6e      c74424340000.  mov dword [rsp + 0x34], 0
0x00003f76      e8b5f9ffff     call sym.quotearg_n_options
0x00003f7b      488b542438     mov rdx, qword [rsp + 0x38]
0x00003f80      644833142528.  xor rdx, qword fs:[0x28]
0x00003f89      750a           jne 0x3f95
0x00003f8b      4883c448       add rsp, 0x48
0x00003f8f      c3             ret
0x00003f90      e81bd5ffff     call sym.imp.abort
0x00003f95      e8f6d5ffff     call sym.imp.__stack_chk_fail
0x00003f9a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003fa0      4889f2         mov rdx, rsi
0x00003fa3      89fe           mov esi, edi
0x00003fa5      31ff           xor edi, edi
0x00003fa7      e9d4feffff     jmp sym.quotearg_n_style
0x00003fac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003fb0      4889d1         mov rcx, rdx
0x00003fb3      4889f2         mov rdx, rsi
0x00003fb6      89fe           mov esi, edi
0x00003fb8      31ff           xor edi, edi
0x00003fba      e951ffffff     jmp sym.quotearg_n_style_mem
0x00003fbf      90             nop
;-- quotearg_char_mem:
0x00003fc0      4883ec48       sub rsp, 0x48
0x00003fc4      89d1           mov ecx, edx
0x00003fc6      64488b042528.  mov rax, qword fs:[0x28]
0x00003fcf      4889442438     mov qword [rsp + 0x38], rax
0x00003fd4      31c0           xor eax, eax
0x00003fd6      488b05134420.  mov rax, qword [0x002083f0]             ; [0x2083f0:8]=0
0x00003fdd      4989e0         mov r8, rsp
0x00003fe0      83e11f         and ecx, 0x1f
0x00003fe3      660f6f05d543.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003feb      4889442430     mov qword [rsp + 0x30], rax
0x00003ff0      89d0           mov eax, edx
0x00003ff2      0f290424       movaps xmmword [rsp], xmm0
0x00003ff6      c0e805         shr al, 5
0x00003ff9      0fb6c0         movzx eax, al
0x00003ffc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004001      660f6f05c743.  movdqa xmm0, xmmword [0x002083d0]
0x00004009      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000400e      660f6f05ca43.  movdqa xmm0, xmmword [0x002083e0]
0x00004016      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000401b      418b11         mov edx, dword [r9]
0x0000401e      89d0           mov eax, edx
0x00004020      d3e8           shr eax, cl
0x00004022      f7d0           not eax
0x00004024      83e001         and eax, 1
0x00004027      d3e0           shl eax, cl
0x00004029      4c89c1         mov rcx, r8
0x0000402c      31d0           xor eax, edx
0x0000402e      4889f2         mov rdx, rsi
0x00004031      4889fe         mov rsi, rdi
0x00004034      418901         mov dword [r9], eax
0x00004037      31ff           xor edi, edi
0x00004039      e8f2f8ffff     call sym.quotearg_n_options
0x0000403e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004043      644833342528.  xor rsi, qword fs:[0x28]
0x0000404c      7505           jne 0x4053
0x0000404e      4883c448       add rsp, 0x48
0x00004052      c3             ret
0x00004053      e838d5ffff     call sym.imp.__stack_chk_fail
0x00004058      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004060      400fbed6       movsx edx, sil
0x00004064      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000406b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004070      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004075      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000407c      e93fffffff     jmp sym.quotearg_char_mem
0x00004081      0f1f440000     nop dword [rax + rax]
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004090      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004095      e926ffffff     jmp sym.quotearg_char_mem
0x0000409a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000040a0      4883ec48       sub rsp, 0x48
0x000040a4      4889d0         mov rax, rdx
0x000040a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000040b0      4889542438     mov qword [rsp + 0x38], rdx
0x000040b5      31d2           xor edx, edx
0x000040b7      83fe0a         cmp esi, 0xa
0x000040ba      7468           je 0x4124
0x000040bc      893424         mov dword [rsp], esi
0x000040bf      4889e1         mov rcx, rsp
0x000040c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000040c9      4889c6         mov rsi, rax
0x000040cc      48c744240400.  mov qword [rsp + 4], 0
0x000040d5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000040de      48c744241400.  mov qword [rsp + 0x14], 0
0x000040e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000040f0      48c744242400.  mov qword [rsp + 0x24], 0
0x000040f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004102      c74424340000.  mov dword [rsp + 0x34], 0
0x0000410a      e821f8ffff     call sym.quotearg_n_options
0x0000410f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004114      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000411d      750a           jne 0x4129
0x0000411f      4883c448       add rsp, 0x48
0x00004123      c3             ret
0x00004124      e887d3ffff     call sym.imp.abort
0x00004129      e862d4ffff     call sym.imp.__stack_chk_fail
0x0000412e      6690           nop
;-- quotearg_n_custom_mem:
0x00004130      4883ec48       sub rsp, 0x48
0x00004134      4989c9         mov r9, rcx
0x00004137      488b0db24220.  mov rcx, qword [0x002083f0]             ; [0x2083f0:8]=0
0x0000413e      660f6f057a42.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004146      64488b042528.  mov rax, qword fs:[0x28]
0x0000414f      4889442438     mov qword [rsp + 0x38], rax
0x00004154      31c0           xor eax, eax
0x00004156      0f290424       movaps xmmword [rsp], xmm0
0x0000415a      4885f6         test rsi, rsi
0x0000415d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004162      c704240a0000.  mov dword [rsp], 0xa
0x00004169      660f6f055f42.  movdqa xmm0, xmmword [0x002083d0]
0x00004171      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004176      660f6f056242.  movdqa xmm0, xmmword [0x002083e0]
0x0000417e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004183      7432           je 0x41b7
0x00004185      4885d2         test rdx, rdx
0x00004188      742d           je 0x41b7
0x0000418a      4889742428     mov qword [rsp + 0x28], rsi
0x0000418f      4889542430     mov qword [rsp + 0x30], rdx
0x00004194      4889e1         mov rcx, rsp
0x00004197      4c89c2         mov rdx, r8
0x0000419a      4c89ce         mov rsi, r9
0x0000419d      e88ef7ffff     call sym.quotearg_n_options
0x000041a2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000041a7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000041b0      750a           jne 0x41bc
0x000041b2      4883c448       add rsp, 0x48
0x000041b6      c3             ret
0x000041b7      e8f4d2ffff     call sym.imp.abort
0x000041bc      e8cfd3ffff     call sym.imp.__stack_chk_fail
0x000041c1      0f1f440000     nop dword [rax + rax]
0x000041c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000041d0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000041d7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000041dc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000041e0      4889d1         mov rcx, rdx
0x000041e3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000041ea      4889f2         mov rdx, rsi
0x000041ed      4889fe         mov rsi, rdi
0x000041f0      31ff           xor edi, edi
0x000041f2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000041f7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004200      4989c8         mov r8, rcx
0x00004203      4889d1         mov rcx, rdx
0x00004206      4889f2         mov rdx, rsi
0x00004209      4889fe         mov rsi, rdi
0x0000420c      31ff           xor edi, edi
0x0000420e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004213      0f1f00         nop dword [rax]
0x00004216      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004220      488d0df93d20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004227      e904f7ffff     jmp sym.quotearg_n_options
0x0000422c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004230      488d0de93d20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004237      4889f2         mov rdx, rsi
0x0000423a      4889fe         mov rsi, rdi
0x0000423d      31ff           xor edi, edi
0x0000423f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004244      6690           nop
0x00004246      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004250      488d0dc93d20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004257      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000425e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004263      0f1f00         nop dword [rax]
0x00004266      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004270      488d0da93d20.  lea rcx, obj.quote_quoting_options      ; 0x208020
0x00004277      4889fe         mov rsi, rdi
0x0000427a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004281      31ff           xor edi, edi
0x00004283      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004288      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004290      4157           push r15
0x00004292      4156           push r14
0x00004294      4155           push r13
0x00004296      4154           push r12
0x00004298      4d89cc         mov r12, r9
0x0000429b      55             push rbp
0x0000429c      53             push rbx
0x0000429d      4889fd         mov rbp, rdi
0x000042a0      4c89c3         mov rbx, r8
0x000042a3      4883ec28       sub rsp, 0x28
0x000042a7      4885f6         test rsi, rsi
0x000042aa      0f8418010000   je 0x43c8
0x000042b0      4989d0         mov r8, rdx
0x000042b3      488d156e1a00.  lea rdx, [0x00005d28]                   ; "%s (%s) %s\n"
0x000042ba      4989c9         mov r9, rcx
0x000042bd      31c0           xor eax, eax
0x000042bf      4889f1         mov rcx, rsi
0x000042c2      be01000000     mov esi, 1
0x000042c7      e894d4ffff     call sym.imp.__fprintf_chk
0x000042cc      488d35681a00.  lea rsi, [0x00005d3b]                   ; "(C)"
0x000042d3      31ff           xor edi, edi
0x000042d5      ba05000000     mov edx, 5
0x000042da      e881d2ffff     call sym.imp.dcgettext
0x000042df      488d157a1d00.  lea rdx, obj.version_etc_copyright      ; 0x6060 ; "Copyright %s %d Free Software Foundation, Inc."
0x000042e6      4889c1         mov rcx, rax
0x000042e9      41b8e3070000   mov r8d, 0x7e3
0x000042ef      be01000000     mov esi, 1
0x000042f4      4889ef         mov rdi, rbp
0x000042f7      31c0           xor eax, eax
0x000042f9      e862d4ffff     call sym.imp.__fprintf_chk
0x000042fe      488d35c31a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x5dc8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004305      31ff           xor edi, edi
0x00004307      ba05000000     mov edx, 5
0x0000430c      e84fd2ffff     call sym.imp.dcgettext
0x00004311      4889ee         mov rsi, rbp
0x00004314      4889c7         mov rdi, rax
0x00004317      e8f4d2ffff     call sym.imp.fputs_unlocked
0x0000431c      4983fc09       cmp r12, 9
0x00004320      0f873a030000   ja 0x4660
0x00004326      488d15fb1c00.  lea rdx, [0x00006028]
0x0000432d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004331      4801d0         add rax, rdx
0x00004334      ffe0           jmp rax
0x00004336      662e0f1f8400.  nop word cs:[rax + rax]
0x00004340      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004344      488b4310       mov rax, qword [rbx + 0x10]
0x00004348      488d35e91b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5f38 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000434f      4c8b4308       mov r8, qword [rbx + 8]
0x00004353      ba05000000     mov edx, 5
0x00004358      31ff           xor edi, edi
0x0000435a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000435e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004362      4c894c2410     mov qword [rsp + 0x10], r9
0x00004367      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000436b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000436f      48890424       mov qword [rsp], rax
0x00004373      4c89442408     mov qword [rsp + 8], r8
0x00004378      488b1b         mov rbx, qword [rbx]
0x0000437b      e8e0d1ffff     call sym.imp.dcgettext
0x00004380      4883ec08       sub rsp, 8
0x00004384      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004389      4889c2         mov rdx, rax
0x0000438c      4889d9         mov rcx, rbx
0x0000438f      be01000000     mov esi, 1
0x00004394      4889ef         mov rdi, rbp
0x00004397      31c0           xor eax, eax
0x00004399      4151           push r9
0x0000439b      4155           push r13
0x0000439d      4154           push r12
0x0000439f      4157           push r15
0x000043a1      4156           push r14
0x000043a3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000043a8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000043ad      e8aed3ffff     call sym.imp.__fprintf_chk
0x000043b2      4883c430       add rsp, 0x30
0x000043b6      4883c428       add rsp, 0x28
0x000043ba      5b             pop rbx
0x000043bb      5d             pop rbp
0x000043bc      415c           pop r12
0x000043be      415d           pop r13
0x000043c0      415e           pop r14
0x000043c2      415f           pop r15
0x000043c4      c3             ret
0x000043c5      0f1f00         nop dword [rax]
0x000043c8      4989c8         mov r8, rcx
0x000043cb      4889d1         mov rcx, rdx
0x000043ce      488d155f1900.  lea rdx, str.s__s                       ; 0x5d34 ; "%s %s\n"
0x000043d5      be01000000     mov esi, 1
0x000043da      31c0           xor eax, eax
0x000043dc      e87fd3ffff     call sym.imp.__fprintf_chk
0x000043e1      e9e6feffff     jmp 0x42cc
0x000043e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000043f0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000043f4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000043f8      488d35691b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5f68 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000043ff      488b4310       mov rax, qword [rbx + 0x10]
0x00004403      4c8b4308       mov r8, qword [rbx + 8]
0x00004407      ba05000000     mov edx, 5
0x0000440c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004410      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004414      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004418      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000441c      488b1b         mov rbx, qword [rbx]
0x0000441f      4c89542418     mov qword [rsp + 0x18], r10
0x00004424      4c894c2410     mov qword [rsp + 0x10], r9
0x00004429      48890424       mov qword [rsp], rax
0x0000442d      4c89442408     mov qword [rsp + 8], r8
0x00004432      31ff           xor edi, edi
0x00004434      e827d1ffff     call sym.imp.dcgettext
0x00004439      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000443e      4152           push r10
0x00004440      e93fffffff     jmp 0x4384
0x00004445      0f1f00         nop dword [rax]
0x00004448      488b1b         mov rbx, qword [rbx]
0x0000444b      488d35ed1800.  lea rsi, str.Written_by__s.             ; 0x5d3f ; "Written by %s.\n"
0x00004452      ba05000000     mov edx, 5
0x00004457      31ff           xor edi, edi
0x00004459      e802d1ffff     call sym.imp.dcgettext
0x0000445e      4883c428       add rsp, 0x28
0x00004462      4889d9         mov rcx, rbx
0x00004465      4889ef         mov rdi, rbp
0x00004468      5b             pop rbx
0x00004469      5d             pop rbp
0x0000446a      415c           pop r12
0x0000446c      415d           pop r13
0x0000446e      415e           pop r14
0x00004470      415f           pop r15
0x00004472      4889c2         mov rdx, rax
0x00004475      be01000000     mov esi, 1
0x0000447a      31c0           xor eax, eax
0x0000447c      e9dfd2ffff     jmp sym.imp.__fprintf_chk
0x00004481      0f1f80000000.  nop dword [rax]
0x00004488      4c8b6308       mov r12, qword [rbx + 8]
0x0000448c      488d35bc1800.  lea rsi, str.Written_by__s_and__s.      ; 0x5d4f ; "Written by %s and %s.\n"
0x00004493      488b1b         mov rbx, qword [rbx]
0x00004496      ba05000000     mov edx, 5
0x0000449b      31ff           xor edi, edi
0x0000449d      e8bed0ffff     call sym.imp.dcgettext
0x000044a2      4883c428       add rsp, 0x28
0x000044a6      4d89e0         mov r8, r12
0x000044a9      4889d9         mov rcx, rbx
0x000044ac      4889ef         mov rdi, rbp
0x000044af      4889c2         mov rdx, rax
0x000044b2      be01000000     mov esi, 1
0x000044b7      5b             pop rbx
0x000044b8      5d             pop rbp
0x000044b9      415c           pop r12
0x000044bb      415d           pop r13
0x000044bd      415e           pop r14
0x000044bf      415f           pop r15
0x000044c1      31c0           xor eax, eax
0x000044c3      e998d2ffff     jmp sym.imp.__fprintf_chk
0x000044c8      0f1f84000000.  nop dword [rax + rax]
0x000044d0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000044d4      4c8b6308       mov r12, qword [rbx + 8]
0x000044d8      488d35871800.  lea rsi, str.Written_by__s___s__and__s. ; 0x5d66 ; "Written by %s, %s, and %s.\n"
0x000044df      488b1b         mov rbx, qword [rbx]
0x000044e2      ba05000000     mov edx, 5
0x000044e7      31ff           xor edi, edi
0x000044e9      e872d0ffff     call sym.imp.dcgettext
0x000044ee      4883c428       add rsp, 0x28
0x000044f2      4d89e9         mov r9, r13
0x000044f5      4d89e0         mov r8, r12
0x000044f8      4889d9         mov rcx, rbx
0x000044fb      4889ef         mov rdi, rbp
0x000044fe      4889c2         mov rdx, rax
0x00004501      5b             pop rbx
0x00004502      5d             pop rbp
0x00004503      415c           pop r12
0x00004505      415d           pop r13
0x00004507      415e           pop r14
0x00004509      415f           pop r15
0x0000450b      be01000000     mov esi, 1
0x00004510      31c0           xor eax, eax
0x00004512      e949d2ffff     jmp sym.imp.__fprintf_chk
0x00004517      660f1f840000.  nop word [rax + rax]
0x00004520      488d35711900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5e98 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004527      ba05000000     mov edx, 5
0x0000452c      31ff           xor edi, edi
0x0000452e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004532      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004536      4c8b6308       mov r12, qword [rbx + 8]
0x0000453a      488b1b         mov rbx, qword [rbx]
0x0000453d      e81ed0ffff     call sym.imp.dcgettext
0x00004542      4883ec08       sub rsp, 8
0x00004546      4156           push r14
0x00004548      4889c2         mov rdx, rax
0x0000454b      4d89e9         mov r9, r13
0x0000454e      4d89e0         mov r8, r12
0x00004551      4889d9         mov rcx, rbx
0x00004554      4889ef         mov rdi, rbp
0x00004557      be01000000     mov esi, 1
0x0000455c      31c0           xor eax, eax
0x0000455e      e8fdd1ffff     call sym.imp.__fprintf_chk
0x00004563      58             pop rax
0x00004564      5a             pop rdx
0x00004565      4883c428       add rsp, 0x28
0x00004569      5b             pop rbx
0x0000456a      5d             pop rbp
0x0000456b      415c           pop r12
0x0000456d      415d           pop r13
0x0000456f      415e           pop r14
0x00004571      415f           pop r15
0x00004573      c3             ret
0x00004574      0f1f4000       nop dword [rax]
0x00004578      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000457c      488d35351900.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5eb8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004583      ba05000000     mov edx, 5
0x00004588      31ff           xor edi, edi
0x0000458a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000458e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004592      4c8b6308       mov r12, qword [rbx + 8]
0x00004596      488b1b         mov rbx, qword [rbx]
0x00004599      e8c2cfffff     call sym.imp.dcgettext
0x0000459e      4157           push r15
0x000045a0      eba4           jmp 0x4546
0x000045a2      660f1f440000   nop word [rax + rax]
0x000045a8      4c8b4308       mov r8, qword [rbx + 8]
0x000045ac      4c8b6328       mov r12, qword [rbx + 0x28]
0x000045b0      488d35291900.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x5ee0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000045b7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000045bb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000045bf      ba05000000     mov edx, 5
0x000045c4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000045c8      31ff           xor edi, edi
0x000045ca      488b1b         mov rbx, qword [rbx]
0x000045cd      4c890424       mov qword [rsp], r8
0x000045d1      e88acfffff     call sym.imp.dcgettext
0x000045d6      4883ec08       sub rsp, 8
0x000045da      4d89e9         mov r9, r13
0x000045dd      4154           push r12
0x000045df      4157           push r15
0x000045e1      4156           push r14
0x000045e3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000045e8      4889d9         mov rcx, rbx
0x000045eb      4889c2         mov rdx, rax
0x000045ee      4889ef         mov rdi, rbp
0x000045f1      be01000000     mov esi, 1
0x000045f6      31c0           xor eax, eax
0x000045f8      e863d1ffff     call sym.imp.__fprintf_chk
0x000045fd      4883c420       add rsp, 0x20
0x00004601      4883c428       add rsp, 0x28
0x00004605      5b             pop rbx
0x00004606      5d             pop rbp
0x00004607      415c           pop r12
0x00004609      415d           pop r13
0x0000460b      415e           pop r14
0x0000460d      415f           pop r15
0x0000460f      c3             ret
0x00004610      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004614      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004618      488d35e91800.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x5f08 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000461f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004623      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004627      ba05000000     mov edx, 5
0x0000462c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004630      4c8b4308       mov r8, qword [rbx + 8]
0x00004634      31ff           xor edi, edi
0x00004636      4c894c2408     mov qword [rsp + 8], r9
0x0000463b      488b1b         mov rbx, qword [rbx]
0x0000463e      4c890424       mov qword [rsp], r8
0x00004642      e819cfffff     call sym.imp.dcgettext
0x00004647      4155           push r13
0x00004649      4154           push r12
0x0000464b      4157           push r15
0x0000464d      4156           push r14
0x0000464f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004654      eb8d           jmp 0x45e3
0x00004656      662e0f1f8400.  nop word cs:[rax + rax]
0x00004660      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004664      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004668      ba05000000     mov edx, 5
0x0000466d      488b4310       mov rax, qword [rbx + 0x10]
0x00004671      4c8b4308       mov r8, qword [rbx + 8]
0x00004675      488d35241900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5fa0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000467c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004680      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004684      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004688      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000468c      4c89542418     mov qword [rsp + 0x18], r10
0x00004691      4c894c2410     mov qword [rsp + 0x10], r9
0x00004696      48890424       mov qword [rsp], rax
0x0000469a      4c89442408     mov qword [rsp + 8], r8
0x0000469f      488b1b         mov rbx, qword [rbx]
0x000046a2      e98bfdffff     jmp 0x4432
0x000046a7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000046b0      4531c9         xor r9d, r9d
0x000046b3      49833800       cmp qword [r8], 0
0x000046b7      7412           je 0x46cb
0x000046b9      0f1f80000000.  nop dword [rax]
0x000046c0      4983c101       add r9, 1
0x000046c4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000046c9      75f5           jne 0x46c0
0x000046cb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000046d0      4883ec68       sub rsp, 0x68
0x000046d4      4d89c2         mov r10, r8
0x000046d7      4531c9         xor r9d, r9d
0x000046da      64488b042528.  mov rax, qword fs:[0x28]
0x000046e3      4889442458     mov qword [rsp + 0x58], rax
0x000046e8      31c0           xor eax, eax
0x000046ea      4989e0         mov r8, rsp
0x000046ed      0f1f00         nop dword [rax]
0x000046f0      418b02         mov eax, dword [r10]
0x000046f3      83f82f         cmp eax, 0x2f
0x000046f6      7742           ja 0x473a
0x000046f8      4189c3         mov r11d, eax
0x000046fb      4d035a10       add r11, qword [r10 + 0x10]
0x000046ff      83c008         add eax, 8
0x00004702      418902         mov dword [r10], eax
0x00004705      498b03         mov rax, qword [r11]
0x00004708      4885c0         test rax, rax
0x0000470b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000470f      740a           je 0x471b
0x00004711      4983c101       add r9, 1
0x00004715      4983f90a       cmp r9, 0xa
0x00004719      75d5           jne 0x46f0
0x0000471b      e870fbffff     call sym.version_etc_arn
0x00004720      488b442458     mov rax, qword [rsp + 0x58]
0x00004725      644833042528.  xor rax, qword fs:[0x28]
0x0000472e      7505           jne 0x4735
0x00004730      4883c468       add rsp, 0x68
0x00004734      c3             ret
0x00004735      e856ceffff     call sym.imp.__stack_chk_fail
0x0000473a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000473e      498d4308       lea rax, [r11 + 8]
0x00004742      49894208       mov qword [r10 + 8], rax
0x00004746      ebbd           jmp 0x4705
0x00004748      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004750      55             push rbp
0x00004751      53             push rbx
0x00004752      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004758      4531db         xor r11d, r11d
0x0000475b      4881ecb80000.  sub rsp, 0xb8
0x00004762      64488b042528.  mov rax, qword fs:[0x28]
0x0000476b      4889442478     mov qword [rsp + 0x78], rax
0x00004770      31c0           xor eax, eax
0x00004772      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000477a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004782      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000478a      4c8d442420     lea r8, [rsp + 0x20]
0x0000478f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004797      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000479f      4889442410     mov qword [rsp + 0x10], rax
0x000047a4      488d84248000.  lea rax, [rsp + 0x80]
0x000047ac      4531c9         xor r9d, r9d
0x000047af      4889442418     mov qword [rsp + 0x18], rax
0x000047b4      4889c5         mov rbp, rax
0x000047b7      660f1f840000.  nop word [rax + rax]
0x000047c0      4183fa2f       cmp r10d, 0x2f
0x000047c4      7756           ja 0x481c
0x000047c6      4489d0         mov eax, r10d
0x000047c9      41bb01000000   mov r11d, 1
0x000047cf      4183c208       add r10d, 8
0x000047d3      4801e8         add rax, rbp
0x000047d6      488b00         mov rax, qword [rax]
0x000047d9      4885c0         test rax, rax
0x000047dc      4b8904c8       mov qword [r8 + r9*8], rax
0x000047e0      740a           je 0x47ec
0x000047e2      4983c101       add r9, 1
0x000047e6      4983f90a       cmp r9, 0xa
0x000047ea      75d4           jne 0x47c0
0x000047ec      4584db         test r11b, r11b
0x000047ef      7524           jne 0x4815
0x000047f1      e89afaffff     call sym.version_etc_arn
0x000047f6      488b442478     mov rax, qword [rsp + 0x78]
0x000047fb      644833042528.  xor rax, qword fs:[0x28]
0x00004804      750a           jne 0x4810
0x00004806      4881c4b80000.  add rsp, 0xb8
0x0000480d      5b             pop rbx
0x0000480e      5d             pop rbp
0x0000480f      c3             ret
0x00004810      e87bcdffff     call sym.imp.__stack_chk_fail
0x00004815      4489542408     mov dword [rsp + 8], r10d
0x0000481a      ebd5           jmp 0x47f1
0x0000481c      4889d8         mov rax, rbx
0x0000481f      4883c308       add rbx, 8
0x00004823      ebb1           jmp 0x47d6
0x00004825      90             nop
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004830      53             push rbx
0x00004831      488d354a1500.  lea rsi, str.Report_bugs_to:__s         ; 0x5d82 ; "\nReport bugs to: %s\n"
0x00004838      ba05000000     mov edx, 5
0x0000483d      31ff           xor edi, edi
0x0000483f      e81ccdffff     call sym.imp.dcgettext
0x00004844      488d154c1500.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5d97 ; "bug-coreutils@gnu.org"
0x0000484b      4889c6         mov rsi, rax
0x0000484e      bf01000000     mov edi, 1
0x00004853      31c0           xor eax, eax
0x00004855      e896ceffff     call sym.imp.__printf_chk
0x0000485a      488d354c1500.  lea rsi, str.s_home_page:___s           ; 0x5dad ; "%s home page: <%s>\n"
0x00004861      ba05000000     mov edx, 5
0x00004866      31ff           xor edi, edi
0x00004868      e8f3ccffff     call sym.imp.dcgettext
0x0000486d      488d0dcc0d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5640 ; "https://www.gnu.org/software/coreutils/"
0x00004874      488d15240900.  lea rdx, str.GNU_coreutils              ; 0x519f ; "GNU coreutils"
0x0000487b      4889c6         mov rsi, rax
0x0000487e      bf01000000     mov edi, 1
0x00004883      31c0           xor eax, eax
0x00004885      e866ceffff     call sym.imp.__printf_chk
0x0000488a      488b1db73920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x208248:8]=0
0x00004891      488d35481700.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x5fe0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004898      31ff           xor edi, edi
0x0000489a      ba05000000     mov edx, 5
0x0000489f      e8bcccffff     call sym.imp.dcgettext
0x000048a4      4889de         mov rsi, rbx
0x000048a7      4889c7         mov rdi, rax
0x000048aa      5b             pop rbx
0x000048ab      e960cdffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000048b0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000048b1      4889fb         mov rbx, rdi
0x000048b4      e8c7cdffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000048b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000048bc      7505           jne 0x48c3
0x000048be      4885db         test rbx, rbx
0x000048c1      7502           jne 0x48c5
0x000048c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000048c4      c3             ret
0x000048c5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000048ca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000048d0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000048d3      48f7e6         mul rsi
0x000048d6      4889c7         mov rdi, rax
0x000048d9      0f90c0         seto al
0x000048dc      4885ff         test rdi, rdi
0x000048df      780a           js 0x48eb
0x000048e1      0fb6c0         movzx eax, al
0x000048e4      4885c0         test rax, rax
0x000048e7      7502           jne 0x48eb
0x000048e9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000048eb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000048ef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000048f4      6690           nop
0x000048f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004900      ebae           jmp sym.xmalloc
0x00004902      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004906      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004910      4885f6         test rsi, rsi
0x00004913      53             push rbx
0x00004914      4889f3         mov rbx, rsi
0x00004917      7505           jne 0x491e
0x00004919      4885ff         test rdi, rdi
0x0000491c      751a           jne 0x4938
0x0000491e      4889de         mov rsi, rbx
0x00004921      e8aacdffff     call sym.imp.realloc
0x00004926      4885c0         test rax, rax
0x00004929      7505           jne 0x4930
0x0000492b      4885db         test rbx, rbx
0x0000492e      7511           jne 0x4941                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004930      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004931      c3             ret
0x00004932      660f1f440000   nop word [rax + rax]
0x00004938      e863cbffff     call sym.imp.free
0x0000493d      31c0           xor eax, eax
0x0000493f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004940      c3             ret
0x00004941      e8ba010000     call sym.xalloc_die
0x00004946      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004950      4889f0         mov rax, rsi
0x00004953      48f7e2         mul rdx
0x00004956      4889c6         mov rsi, rax
0x00004959      0f90c0         seto al
0x0000495c      4885f6         test rsi, rsi
0x0000495f      780a           js 0x496b
0x00004961      0fb6c0         movzx eax, al
0x00004964      4885c0         test rax, rax
0x00004967      7502           jne 0x496b
0x00004969      eba5           jmp sym.xrealloc
0x0000496b      4883ec08       sub rsp, 8
0x0000496f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004974      6690           nop
0x00004976      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004980      4885ff         test rdi, rdi
0x00004983      4989d1         mov r9, rdx
0x00004986      488b0e         mov rcx, qword [rsi]
0x00004989      7435           je 0x49c0
0x0000498b      31d2           xor edx, edx
0x0000498d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004997      49f7f1         div r9
0x0000499a      4839c8         cmp rax, rcx
0x0000499d      763c           jbe 0x49db
0x0000499f      4889c8         mov rax, rcx
0x000049a2      48d1e8         shr rax, 1
0x000049a5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000049aa      48890e         mov qword [rsi], rcx
0x000049ad      490fafc9       imul rcx, r9
0x000049b1      4889ce         mov rsi, rcx
0x000049b4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000049b9      0f1f80000000.  nop dword [rax]
0x000049c0      4885c9         test rcx, rcx
0x000049c3      7423           je 0x49e8
0x000049c5      4889c8         mov rax, rcx
0x000049c8      49f7e1         mul r9
0x000049cb      0f90c2         seto dl
0x000049ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000049d1      0fb6d2         movzx edx, dl
0x000049d4      7805           js 0x49db
0x000049d6      4885d2         test rdx, rdx
0x000049d9      74cf           je 0x49aa
0x000049db      4883ec08       sub rsp, 8
0x000049df      e81c010000     call sym.xalloc_die
0x000049e4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000049e8      31d2           xor edx, edx
0x000049ea      b880000000     mov eax, 0x80
0x000049ef      4531c0         xor r8d, r8d
0x000049f2      49f7f1         div r9
0x000049f5      4885c0         test rax, rax
0x000049f8      410f94c0       sete r8b
0x000049fc      498d0c00       lea rcx, [r8 + rax]
0x00004a00      ebc3           jmp 0x49c5
0x00004a02      0f1f4000       nop dword [rax]
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004a10      4885ff         test rdi, rdi
0x00004a13      488b06         mov rax, qword [rsi]
0x00004a16      7428           je 0x4a40
0x00004a18      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004a22      4839d0         cmp rax, rdx
0x00004a25      772a           ja 0x4a51
0x00004a27      4889c2         mov rdx, rax
0x00004a2a      48d1ea         shr rdx, 1
0x00004a2d      488d440201     lea rax, [rdx + rax + 1]
0x00004a32      488906         mov qword [rsi], rax
0x00004a35      4889c6         mov rsi, rax
0x00004a38      e9d3feffff     jmp sym.xrealloc
0x00004a3d      0f1f00         nop dword [rax]
0x00004a40      4885c0         test rax, rax
0x00004a43      ba80000000     mov edx, 0x80
0x00004a48      480f44c2       cmove rax, rdx
0x00004a4c      4885c0         test rax, rax
0x00004a4f      79e1           jns 0x4a32
0x00004a51      4883ec08       sub rsp, 8
0x00004a55      e8a6000000     call sym.xalloc_die
0x00004a5a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004a60      53             push rbx
0x00004a61      4889fb         mov rbx, rdi
0x00004a64      e847feffff     call sym.xmalloc
0x00004a69      4889da         mov rdx, rbx
0x00004a6c      31f6           xor esi, esi
0x00004a6e      4889c7         mov rdi, rax
0x00004a71      5b             pop rbx
0x00004a72      e979cbffff     jmp sym.imp.memset
0x00004a77      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004a80      4889f8         mov rax, rdi
0x00004a83      4883ec08       sub rsp, 8
0x00004a87      48f7e6         mul rsi
0x00004a8a      0f90c2         seto dl
0x00004a8d      4885c0         test rax, rax
0x00004a90      7817           js 0x4aa9
0x00004a92      0fb6d2         movzx edx, dl
0x00004a95      4885d2         test rdx, rdx
0x00004a98      750f           jne 0x4aa9
0x00004a9a      e881cbffff     call sym.imp.calloc
0x00004a9f      4885c0         test rax, rax
0x00004aa2      7405           je 0x4aa9
0x00004aa4      4883c408       add rsp, 8
0x00004aa8      c3             ret
0x00004aa9      e852000000     call sym.xalloc_die
0x00004aae      6690           nop
;-- xmemdup:
0x00004ab0      55             push rbp
0x00004ab1      53             push rbx
0x00004ab2      4889fd         mov rbp, rdi
0x00004ab5      4889f7         mov rdi, rsi
0x00004ab8      4889f3         mov rbx, rsi
0x00004abb      4883ec08       sub rsp, 8
0x00004abf      e8ecfdffff     call sym.xmalloc
0x00004ac4      4883c408       add rsp, 8
0x00004ac8      4889da         mov rdx, rbx
0x00004acb      4889ee         mov rsi, rbp
0x00004ace      5b             pop rbx
0x00004acf      5d             pop rbp
0x00004ad0      4889c7         mov rdi, rax
0x00004ad3      e978cbffff     jmp sym.imp.memcpy
0x00004ad8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004ae0      53             push rbx
0x00004ae1      4889fb         mov rbx, rdi
0x00004ae4      e897caffff     call sym.imp.strlen
0x00004ae9      4889df         mov rdi, rbx
0x00004aec      488d7001       lea rsi, [rax + 1]
0x00004af0      5b             pop rbx
0x00004af1      ebbd           jmp sym.xmemdup
0x00004af3      662e0f1f8400.  nop word cs:[rax + rax]
0x00004afd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004b00      488d35881500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x608f ; "memory exhausted"
0x00004b07      4883ec08       sub rsp, 8
0x00004b0b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004b10      31ff           xor edi, edi
0x00004b12      e849caffff     call sym.imp.dcgettext
0x00004b17      8b3dfb342000   mov edi, dword [obj.exit_failure]       ; [0x208018:4]=1
0x00004b1d      488d15f00c00.  lea rdx, [0x00005814]                   ; "%s"
0x00004b24      4889c1         mov rcx, rax
0x00004b27      31f6           xor esi, esi
0x00004b29      31c0           xor eax, eax
0x00004b2b      e8d0cbffff     call sym.imp.error
0x00004b30      e87bc9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004b35      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b3f      90             nop
;-- rpl_mbrtowc:
0x00004b40      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004b42      4154           push r12
0x00004b44      4989f5         mov r13, rsi
0x00004b47      55             push rbp
0x00004b48      53             push rbx
0x00004b49      4889fb         mov rbx, rdi
0x00004b4c      4989d4         mov r12, rdx
0x00004b4f      4883ec18       sub rsp, 0x18
0x00004b53      64488b042528.  mov rax, qword fs:[0x28]
0x00004b5c      4889442408     mov qword [rsp + 8], rax
0x00004b61      31c0           xor eax, eax
0x00004b63      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004b68      4885ff         test rdi, rdi
0x00004b6b      480f44d8       cmove rbx, rax
0x00004b6f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004b72      e839caffff     call sym.imp.mbrtowc
0x00004b77      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004b7b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00004b7e      7620           jbe 0x4ba0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00004b80      4d85e4         test r12, r12
0x00004b83      741b           je 0x4ba0
0x00004b85      31ff           xor edi, edi
0x00004b87      e834030000     call sym.hard_locale
0x00004b8c      84c0           test al, al
0x00004b8e      7510           jne 0x4ba0
0x00004b90      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004b95      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00004b9a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00004b9c      0f1f4000       nop dword [rax]
0x00004ba0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00004ba5      644833142528.  xor rdx, qword fs:[0x28]
0x00004bae      4889e8         mov rax, rbp
0x00004bb1      750b           jne 0x4bbe
0x00004bb3      4883c418       add rsp, 0x18
0x00004bb7      5b             pop rbx
0x00004bb8      5d             pop rbp
0x00004bb9      415c           pop r12
0x00004bbb      415d           pop r13
0x00004bbd      c3             ret
0x00004bbe      e8cdc9ffff     call sym.imp.__stack_chk_fail
0x00004bc3      662e0f1f8400.  nop word cs:[rax + rax]
0x00004bcd      0f1f00         nop dword [rax]
;-- str2sig:
0x00004bd0      4155           push r13                                ; ../coreutils-8.31/lib/sig2str.c:305
0x00004bd2      4154           push r12
0x00004bd4      4989f5         mov r13, rsi
0x00004bd7      55             push rbp
0x00004bd8      53             push rbx
0x00004bd9      31db           xor ebx, ebx
0x00004bdb      4989fc         mov r12, rdi
0x00004bde      488d2d9f3420.  lea rbp, [0x00208084]                   ; "HUP"
0x00004be5      4883ec18       sub rsp, 0x18
0x00004be9      64488b042528.  mov rax, qword fs:[0x28]
0x00004bf2      4889442408     mov qword [rsp + 8], rax
0x00004bf7      31c0           xor eax, eax
0x00004bf9      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/sig2str.c:263
0x00004bfc      83e830         sub eax, 0x30
0x00004bff      83f809         cmp eax, 9
0x00004c02      7718           ja 0x4c1c
0x00004c04      eb5a           jmp 0x4c60
0x00004c06      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c10      83c301         add ebx, 1                              ; ../coreutils-8.31/lib/sig2str.c:273
0x00004c13      4883c50c       add rbp, 0xc
0x00004c17      83fb23         cmp ebx, 0x23
0x00004c1a      7474           je 0x4c90
0x00004c1c      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/sig2str.c:274
0x00004c1f      4889ef         mov rdi, rbp
0x00004c22      e809caffff     call sym.imp.strcmp
0x00004c27      85c0           test eax, eax
0x00004c29      75e5           jne 0x4c10
0x00004c2b      488d145b       lea rdx, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/sig2str.c:275
0x00004c2f      488d054a3420.  lea rax, obj.numname_table              ; 0x208080
0x00004c36      8b0490         mov eax, dword [rax + rdx*4]
0x00004c39      41894500       mov dword [r13], eax                    ; ../coreutils-8.31/lib/sig2str.c:306
0x00004c3d      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/sig2str.c:307
0x00004c40      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/sig2str.c:308
0x00004c45      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004c4e      0f85fc000000   jne 0x4d50
0x00004c54      4883c418       add rsp, 0x18
0x00004c58      5b             pop rbx
0x00004c59      5d             pop rbp
0x00004c5a      415c           pop r12
0x00004c5c      415d           pop r13
0x00004c5e      c3             ret
0x00004c5f      90             nop
0x00004c60      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/sig2str.c:266
0x00004c65      4889e6         mov rsi, rsp
0x00004c68      e8d3c9ffff     call sym.imp.strtol
0x00004c6d      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:267
0x00004c71      803a00         cmp byte [rdx], 0
0x00004c74      7506           jne 0x4c7c
0x00004c76      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x00004c7a      7ebd           jle 0x4c39
0x00004c7c      41c74500ffff.  mov dword [r13], 0xffffffff             ; ../coreutils-8.31/lib/sig2str.c:306 ; [0xffffffff:4]=-1 ; -1
0x00004c84      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:307 ; -1
0x00004c89      ebb5           jmp 0x4c40
0x00004c8b      0f1f440000     nop dword [rax + rax]
0x00004c90      e89bcaffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:279
0x00004c95      89c5           mov ebp, eax
0x00004c97      e8d4caffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:280
0x00004c9c      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/sig2str.c:282
0x00004c9e      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/sig2str.c:280
0x00004ca0      7e1a           jle 0x4cbc                              ; ../coreutils-8.31/lib/sig2str.c:282
0x00004ca2      488d3df71300.  lea rdi, str.RTMIN                      ; 0x60a0 ; "RTMIN"
0x00004ca9      b905000000     mov ecx, 5
0x00004cae      4c89e6         mov rsi, r12
0x00004cb1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004cb3      0f97c0         seta al
0x00004cb6      1c00           sbb al, 0
0x00004cb8      84c0           test al, al
0x00004cba      7457           je 0x4d13
0x00004cbc      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/sig2str.c:288
0x00004cbe      7ebc           jle 0x4c7c
0x00004cc0      488d3ddf1300.  lea rdi, str.RTMAX                      ; 0x60a6 ; "RTMAX"
0x00004cc7      b905000000     mov ecx, 5
0x00004ccc      4c89e6         mov rsi, r12
0x00004ccf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004cd1      0f97c0         seta al
0x00004cd4      1c00           sbb al, 0
0x00004cd6      84c0           test al, al
0x00004cd8      75a2           jne 0x4c7c
0x00004cda      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:290
0x00004cdf      ba0a000000     mov edx, 0xa
0x00004ce4      4889e6         mov rsi, rsp
0x00004ce7      e854c9ffff     call sym.imp.strtol
0x00004cec      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:291
0x00004cf0      803a00         cmp byte [rdx], 0
0x00004cf3      7587           jne 0x4c7c
0x00004cf5      29dd           sub ebp, ebx
0x00004cf7      4863ed         movsxd rbp, ebp
0x00004cfa      4839e8         cmp rax, rbp
0x00004cfd      0f8c79ffffff   jl 0x4c7c
0x00004d03      4885c0         test rax, rax
0x00004d06      0f8f70ffffff   jg 0x4c7c
0x00004d0c      01d8           add eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:292
0x00004d0e      e926ffffff     jmp 0x4c39
0x00004d13      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:284
0x00004d18      ba0a000000     mov edx, 0xa
0x00004d1d      4889e6         mov rsi, rsp
0x00004d20      e81bc9ffff     call sym.imp.strtol
0x00004d25      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:285
0x00004d29      803a00         cmp byte [rdx], 0
0x00004d2c      0f854affffff   jne 0x4c7c
0x00004d32      4885c0         test rax, rax
0x00004d35      0f8841ffffff   js 0x4c7c
0x00004d3b      29eb           sub ebx, ebp
0x00004d3d      4863d3         movsxd rdx, ebx
0x00004d40      4839d0         cmp rax, rdx
0x00004d43      0f8f33ffffff   jg 0x4c7c
0x00004d49      01e8           add eax, ebp                            ; ../coreutils-8.31/lib/sig2str.c:286
0x00004d4b      e9e9feffff     jmp 0x4c39
0x00004d50      e83bc8ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/sig2str.c:308
0x00004d55      90             nop
0x00004d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- sig2str:
0x00004d60      55             push rbp                                ; ../coreutils-8.31/lib/sig2str.c:316
0x00004d61      488d05183320.  lea rax, obj.numname_table              ; 0x208080
0x00004d68      53             push rbx
0x00004d69      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/sig2str.c:318
0x00004d6b      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/sig2str.c:316
0x00004d6d      4889f7         mov rdi, rsi
0x00004d70      4883ec18       sub rsp, 0x18
0x00004d74      4889c1         mov rcx, rax
0x00004d77      eb13           jmp 0x4d8c
0x00004d79      0f1f80000000.  nop dword [rax]
0x00004d80      83c201         add edx, 1                              ; ../coreutils-8.31/lib/sig2str.c:318
0x00004d83      4883c10c       add rcx, 0xc
0x00004d87      83fa23         cmp edx, 0x23
0x00004d8a      7424           je 0x4db0
0x00004d8c      3919           cmp dword [rcx], ebx                    ; ../coreutils-8.31/lib/sig2str.c:319
0x00004d8e      75f0           jne 0x4d80
0x00004d90      488d1452       lea rdx, [rdx + rdx*2]                  ; ../coreutils-8.31/lib/sig2str.c:321
0x00004d94      488d749004     lea rsi, [rax + rdx*4 + 4]
0x00004d99      e852c7ffff     call sym.imp.strcpy                     ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
0x00004d9e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:322
0x00004da0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00004da4      5b             pop rbx
0x00004da5      5d             pop rbp
0x00004da6      c3             ret
0x00004da7      660f1f840000.  nop word [rax + rax]
0x00004db0      48897c2408     mov qword [rsp + 8], rdi
0x00004db5      e876c9ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:326
0x00004dba      89c5           mov ebp, eax
0x00004dbc      e8afc9ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:327
0x00004dc1      39dd           cmp ebp, ebx                            ; ../coreutils-8.31/lib/sig2str.c:330
0x00004dc3      7f6c           jg 0x4e31
0x00004dc5      39d8           cmp eax, ebx
0x00004dc7      7c68           jl 0x4e31
0x00004dc9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/sig2str.c:333
0x00004dcb      488b7c2408     mov rdi, qword [rsp + 8]
0x00004dd0      29ea           sub edx, ebp
0x00004dd2      d1fa           sar edx, 1
0x00004dd4      01ea           add edx, ebp
0x00004dd6      39da           cmp edx, ebx
0x00004dd8      7d46           jge 0x4e20
0x00004dda      ba58000000     mov edx, 0x58                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'X'
0x00004ddf      c70752544d41   mov dword [rdi], 0x414d5452             ; 'RTMA'
                                                                       ; [0x414d5452:4]=-1
0x00004de5      89c5           mov ebp, eax
0x00004de7      66895704       mov word [rdi + 4], dx
0x00004deb      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:345
0x00004ded      29e8           sub eax, ebp
0x00004def      74af           je 0x4da0
0x00004df1      488d0db41200.  lea rcx, [0x000060ac]                   ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1, ; "%+d"
0x00004df8      4189c0         mov r8d, eax
0x00004dfb      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/sig2str.c:346
0x00004dff      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
0x00004e06      be01000000     mov esi, 1
0x00004e0b      31c0           xor eax, eax
0x00004e0d      e89ec9ffff     call sym.imp.__sprintf_chk
0x00004e12      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00004e16      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:347
0x00004e18      5b             pop rbx                                 ; ../coreutils-8.31/lib/sig2str.c:349
0x00004e19      5d             pop rbp
0x00004e1a      c3             ret
0x00004e1b      0f1f440000     nop dword [rax + rax]
0x00004e20      b94e000000     mov ecx, 0x4e                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'N'
0x00004e25      c70752544d49   mov dword [rdi], 0x494d5452             ; 'RTMI'
                                                                       ; [0x494d5452:4]=-1
0x00004e2b      66894f04       mov word [rdi + 4], cx
0x00004e2f      ebba           jmp 0x4deb
0x00004e31      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:331 ; -1
0x00004e36      e965ffffff     jmp 0x4da0
0x00004e3b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00004e40      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00004e42      55             push rbp
0x00004e43      4889fd         mov rbp, rdi
0x00004e46      53             push rbx
0x00004e47      e8b4c6ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00004e4c      8b5d00         mov ebx, dword [rbp]
0x00004e4f      4889ef         mov rdi, rbp
0x00004e52      4989c4         mov r12, rax
0x00004e55      e806010000     call sym.rpl_fclose
0x00004e5a      83e320         and ebx, 0x20                           ; "@"
0x00004e5d      85db           test ebx, ebx
0x00004e5f      7517           jne 0x4e78
0x00004e61      85c0           test eax, eax
0x00004e63      740a           je 0x4e6f                               ; stdio.h:-186
0x00004e65      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004e68      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e6d      7439           je 0x4ea8
0x00004e6f      5b             pop rbx
0x00004e70      5d             pop rbp
0x00004e71      415c           pop r12
0x00004e73      c3             ret
0x00004e74      0f1f4000       nop dword [rax]
0x00004e78      85c0           test eax, eax
0x00004e7a      751c           jne 0x4e98
0x00004e7c      e83fc6ffff     call sym.imp.__errno_location
0x00004e81      c70000000000   mov dword [rax], 0
0x00004e87      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e8c      5b             pop rbx
0x00004e8d      5d             pop rbp
0x00004e8e      415c           pop r12
0x00004e90      c3             ret
0x00004e91      0f1f80000000.  nop dword [rax]
0x00004e98      5b             pop rbx
0x00004e99      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004e9e      5d             pop rbp                                 ; stdio.h:-186
0x00004e9f      415c           pop r12
0x00004ea1      c3             ret
0x00004ea2      660f1f440000   nop word [rax + rax]
0x00004ea8      e813c6ffff     call sym.imp.__errno_location
0x00004ead      833809         cmp dword [rax], 9
0x00004eb0      5b             pop rbx
0x00004eb1      5d             pop rbp
0x00004eb2      415c           pop r12                                 ; stdio.h:-178
0x00004eb4      0f95c0         setne al
0x00004eb7      0fb6c0         movzx eax, al
0x00004eba      f7d8           neg eax
0x00004ebc      c3             ret
0x00004ebd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004ec0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004ec4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004ec6      e815c8ffff     call sym.imp.setlocale
0x00004ecb      4889c2         mov rdx, rax
0x00004ece      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004ed3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004ed6      741d           je 0x4ef5
0x00004ed8      488d3dd11100.  lea rdi, [0x000060b0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00004edf      b902000000     mov ecx, 2
0x00004ee4      4889d6         mov rsi, rdx
0x00004ee7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004ee9      0f97c1         seta cl
0x00004eec      80d900         sbb cl, 0
0x00004eef      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004ef1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004ef3      750b           jne 0x4f00
0x00004ef5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004ef9      c3             ret
0x00004efa      660f1f440000   nop word [rax + rax]
0x00004f00      488d3dab1100.  lea rdi, [0x000060b2]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x00004f07      b906000000     mov ecx, 6
0x00004f0c      4889d6         mov rsi, rdx
0x00004f0f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004f11      0f97c0         seta al
0x00004f14      1c00           sbb al, 0
0x00004f16      84c0           test al, al
0x00004f18      0f95c0         setne al
0x00004f1b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004f1f      c3             ret
;-- locale_charset:
0x00004f20      4883ec08       sub rsp, 8
0x00004f24      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004f29      e872c7ffff     call sym.imp.nl_langinfo
0x00004f2e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004f31      741d           je 0x4f50
0x00004f33      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004f36      488d157b1100.  lea rdx, str.ASCII                      ; 0x60b8 ; "ASCII"
0x00004f3d      480f44c2       cmove rax, rdx
0x00004f41      4883c408       add rsp, 8
0x00004f45      c3             ret
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f50      488d05611100.  lea rax, str.ASCII                      ; 0x60b8 ; "ASCII"
0x00004f57      4883c408       add rsp, 8
0x00004f5b      c3             ret
0x00004f5c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004f60      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004f62      55             push rbp
0x00004f63      53             push rbx
0x00004f64      4889fb         mov rbx, rdi
0x00004f67      e804c7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004f6c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004f6e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004f71      7854           js 0x4fc7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004f73      e838c7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004f78      85c0           test eax, eax
0x00004f7a      752c           jne 0x4fa8
0x00004f7c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004f7f      e85c000000     call sym.rpl_fflush
0x00004f84      85c0           test eax, eax
0x00004f86      743c           je 0x4fc4
0x00004f88      e833c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004f8d      448b20         mov r12d, dword [rax]
0x00004f90      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004f93      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004f96      e8a5c5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004f9b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004f9e      7530           jne 0x4fd0
0x00004fa0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004fa1      5d             pop rbp
0x00004fa2      415c           pop r12
0x00004fa4      c3             ret
0x00004fa5      0f1f00         nop dword [rax]
0x00004fa8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004fab      e8c0c6ffff     call sym.imp.fileno
0x00004fb0      31f6           xor esi, esi
0x00004fb2      ba01000000     mov edx, 1
0x00004fb7      89c7           mov edi, eax
0x00004fb9      e822c6ffff     call sym.imp.lseek
0x00004fbe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004fc2      75b8           jne 0x4f7c
0x00004fc4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004fc7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004fc8      5d             pop rbp
0x00004fc9      415c           pop r12
0x00004fcb      e970c5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004fd0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004fd4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004fd9      ebc5           jmp 0x4fa0
0x00004fdb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004fe0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004fe3      53             push rbx
0x00004fe4      4889fb         mov rbx, rdi
0x00004fe7      7411           je 0x4ffa                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004fe9      e8c2c6ffff     call sym.imp.__freading
0x00004fee      85c0           test eax, eax
0x00004ff0      7408           je 0x4ffa
0x00004ff2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004ff8      750e           jne 0x5008
0x00004ffa      4889df         mov rdi, rbx
0x00004ffd      5b             pop rbx
0x00004ffe      e98dc6ffff     jmp sym.imp.fflush
0x00005003      0f1f440000     nop dword [rax + rax]
0x00005008      4889df         mov rdi, rbx
0x0000500b      ba01000000     mov edx, 1
0x00005010      31f6           xor esi, esi
0x00005012      e809000000     call sym.rpl_fseeko
0x00005017      4889df         mov rdi, rbx
0x0000501a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000501b      e970c6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005020      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005024      48394710       cmp qword [rdi + 0x10], rax
0x00005028      7406           je 0x5030                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000502a      e9e1c6ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000502f      90             nop
0x00005030      488b4720       mov rax, qword [rdi + 0x20]
0x00005034      48394728       cmp qword [rdi + 0x28], rax
0x00005038      75f0           jne 0x502a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000503a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000503f      75e9           jne 0x502a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005041      4154           push r12
0x00005043      55             push rbp
0x00005044      4189d4         mov r12d, edx
0x00005047      53             push rbx
0x00005048      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000504b      4889fb         mov rbx, rdi
0x0000504e      e81dc6ffff     call sym.imp.fileno
0x00005053      4489e2         mov edx, r12d
0x00005056      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005059      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000505b      e880c5ffff     call sym.imp.lseek
0x00005060      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005064      740c           je 0x5072
0x00005066      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005069      488983900000.  mov qword [rbx + 0x90], rax
0x00005070      31c0           xor eax, eax
0x00005072      5b             pop rbx                                 ; /sys_errlist.h:19
0x00005073      5d             pop rbp
0x00005074      415c           pop r12
0x00005076      c3             ret
0x00005077      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00005080      4157           push r15
0x00005082      4156           push r14
0x00005084      4989d7         mov r15, rdx
0x00005087      4155           push r13
0x00005089      4154           push r12
0x0000508b      4c8d257e2a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b10
0x00005092      55             push rbp
0x00005093      488d2d7e2a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b18 ; "p\x1e"
0x0000509a      53             push rbx
0x0000509b      4189fd         mov r13d, edi
0x0000509e      4989f6         mov r14, rsi
0x000050a1      4c29e5         sub rbp, r12
0x000050a4      4883ec08       sub rsp, 8
0x000050a8      48c1fd03       sar rbp, 3
0x000050ac      e8bfc3ffff     call sym._init
0x000050b1      4885ed         test rbp, rbp
0x000050b4      7420           je 0x50d6
0x000050b6      31db           xor ebx, ebx
0x000050b8      0f1f84000000.  nop dword [rax + rax]
0x000050c0      4c89fa         mov rdx, r15
0x000050c3      4c89f6         mov rsi, r14
0x000050c6      4489ef         mov edi, r13d
0x000050c9      41ff14dc       call qword [r12 + rbx*8]
0x000050cd      4883c301       add rbx, 1
0x000050d1      4839dd         cmp rbp, rbx
0x000050d4      75ea           jne 0x50c0
0x000050d6      4883c408       add rsp, 8
0x000050da      5b             pop rbx
0x000050db      5d             pop rbp
0x000050dc      415c           pop r12
0x000050de      415d           pop r13
0x000050e0      415e           pop r14
0x000050e2      415f           pop r15
0x000050e4      c3             ret
0x000050e5      90             nop
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000050f0      f3c3           ret
0x000050f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000050fc      0f1f4000       nop dword [rax]
;-- atexit:
0x00005100      488b15012f20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005107      31f6           xor esi, esi
0x00005109      e912c6ffff     jmp sym.imp.__cxa_atexit
0x0000510e      0000           add byte [rax], al
