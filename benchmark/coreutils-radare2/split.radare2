;-- section..plt:
;-- .plt:
0x00001b20      ff354aa22000   push qword [0x0020bd70]                 ; [12] -r-x section size 1200 named .plt
0x00001b26      ff254ca22000   jmp qword [0x0020bd78]                  ; [0x20bd78:8]=0
0x00001b2c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00001b30      ff254aa22000   jmp qword [reloc.getenv]                ; [0x20bd80:8]=0x1b36 ; "6\x1b"
0x00001b36      6800000000     push 0
0x00001b3b      e9e0ffffff     jmp sym..plt
;-- imp.sigprocmask:
0x00001b40      ff2542a22000   jmp qword [reloc.sigprocmask]           ; [0x20bd88:8]=0x1b46 ; "F\x1b"
0x00001b46      6801000000     push 1
0x00001b4b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001b50      ff253aa22000   jmp qword [reloc.free]                  ; [0x20bd90:8]=0x1b56 ; "V\x1b"
0x00001b56      6802000000     push 2
0x00001b5b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001b60      ff2532a22000   jmp qword [reloc.abort]                 ; [0x20bd98:8]=0x1b66 ; "f\x1b"
0x00001b66      6803000000     push 3
0x00001b6b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001b70      ff252aa22000   jmp qword [reloc.__errno_location]      ; [0x20bda0:8]=0x1b76 ; "v\x1b"
0x00001b76      6804000000     push 4
0x00001b7b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001b80      ff2522a22000   jmp qword [reloc.strncmp]               ; [0x20bda8:8]=0x1b86
0x00001b86      6805000000     push 5
0x00001b8b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001b90      ff251aa22000   jmp qword [reloc._exit]                 ; [0x20bdb0:8]=0x1b96
0x00001b96      6806000000     push 6
0x00001b9b      e980ffffff     jmp sym..plt
;-- imp.strcpy:
0x00001ba0      ff2512a22000   jmp qword [reloc.strcpy]                ; [0x20bdb8:8]=0x1ba6
0x00001ba6      6807000000     push 7
0x00001bab      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001bb0      ff250aa22000   jmp qword [reloc.__fpending]            ; [0x20bdc0:8]=0x1bb6
0x00001bb6      6808000000     push 8
0x00001bbb      e960ffffff     jmp sym..plt
;-- imp.sigaction:
0x00001bc0      ff2502a22000   jmp qword [reloc.sigaction]             ; [0x20bdc8:8]=0x1bc6
0x00001bc6      6809000000     push 9
0x00001bcb      e950ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001bd0      ff25faa12000   jmp qword [reloc.fcntl]                 ; [0x20bdd0:8]=0x1bd6
0x00001bd6      680a000000     push 0xa
0x00001bdb      e940ffffff     jmp sym..plt
;-- imp.setenv:
0x00001be0      ff25f2a12000   jmp qword [reloc.setenv]                ; [0x20bdd8:8]=0x1be6
0x00001be6      680b000000     push 0xb
0x00001beb      e930ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001bf0      ff25eaa12000   jmp qword [reloc.clearerr_unlocked]     ; [0x20bde0:8]=0x1bf6
0x00001bf6      680c000000     push 0xc
0x00001bfb      e920ffffff     jmp sym..plt
;-- imp.write:
0x00001c00      ff25e2a12000   jmp qword [reloc.write]                 ; [0x20bde8:8]=0x1c06
0x00001c06      680d000000     push 0xd
0x00001c0b      e910ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001c10      ff25daa12000   jmp qword [reloc.textdomain]            ; [0x20bdf0:8]=0x1c16
0x00001c16      680e000000     push 0xe
0x00001c1b      e900ffffff     jmp sym..plt
;-- imp.fclose:
0x00001c20      ff25d2a12000   jmp qword [reloc.fclose]                ; [0x20bdf8:8]=0x1c26 ; "&\x1c"
0x00001c26      680f000000     push 0xf
0x00001c2b      e9f0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001c30      ff25caa12000   jmp qword [reloc.bindtextdomain]        ; [0x20be00:8]=0x1c36 ; "6\x1c"
0x00001c36      6810000000     push 0x10
0x00001c3b      e9e0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001c40      ff25c2a12000   jmp qword [reloc.dcgettext]             ; [0x20be08:8]=0x1c46 ; "F\x1c"
0x00001c46      6811000000     push 0x11
0x00001c4b      e9d0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001c50      ff25baa12000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20be10:8]=0x1c56 ; "V\x1c"
0x00001c56      6812000000     push 0x12
0x00001c5b      e9c0feffff     jmp sym..plt
;-- imp.strlen:
0x00001c60      ff25b2a12000   jmp qword [reloc.strlen]                ; [0x20be18:8]=0x1c66 ; "f\x1c"
0x00001c66      6813000000     push 0x13
0x00001c6b      e9b0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001c70      ff25aaa12000   jmp qword [reloc.__stack_chk_fail]      ; [0x20be20:8]=0x1c76 ; "v\x1c"
0x00001c76      6814000000     push 0x14
0x00001c7b      e9a0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001c80      ff25a2a12000   jmp qword [reloc.getopt_long]           ; [0x20be28:8]=0x1c86
0x00001c86      6815000000     push 0x15
0x00001c8b      e990feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001c90      ff259aa12000   jmp qword [reloc.mbrtowc]               ; [0x20be30:8]=0x1c96
0x00001c96      6816000000     push 0x16
0x00001c9b      e980feffff     jmp sym..plt
;-- imp.dup2:
0x00001ca0      ff2592a12000   jmp qword [reloc.dup2]                  ; [0x20be38:8]=0x1ca6
0x00001ca6      6817000000     push 0x17
0x00001cab      e970feffff     jmp sym..plt
;-- imp.strchr:
0x00001cb0      ff258aa12000   jmp qword [reloc.strchr]                ; [0x20be40:8]=0x1cb6
0x00001cb6      6818000000     push 0x18
0x00001cbb      e960feffff     jmp sym..plt
;-- imp.strrchr:
0x00001cc0      ff2582a12000   jmp qword [reloc.strrchr]               ; [0x20be48:8]=0x1cc6
0x00001cc6      6819000000     push 0x19
0x00001ccb      e950feffff     jmp sym..plt
;-- imp.ftruncate:
0x00001cd0      ff257aa12000   jmp qword [reloc.ftruncate]             ; [0x20be50:8]=0x1cd6
0x00001cd6      681a000000     push 0x1a
0x00001cdb      e940feffff     jmp sym..plt
;-- imp.lseek:
0x00001ce0      ff2572a12000   jmp qword [reloc.lseek]                 ; [0x20be58:8]=0x1ce6
0x00001ce6      681b000000     push 0x1b
0x00001ceb      e930feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001cf0      ff256aa12000   jmp qword [reloc.__assert_fail]         ; [0x20be60:8]=0x1cf6
0x00001cf6      681c000000     push 0x1c
0x00001cfb      e920feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001d00      ff2562a12000   jmp qword [reloc.__strtoul_internal]    ; [0x20be68:8]=0x1d06
0x00001d06      681d000000     push 0x1d
0x00001d0b      e910feffff     jmp sym..plt
;-- imp.memset:
0x00001d10      ff255aa12000   jmp qword [reloc.memset]                ; [0x20be70:8]=0x1d16
0x00001d16      681e000000     push 0x1e
0x00001d1b      e900feffff     jmp sym..plt
;-- imp.close:
0x00001d20      ff2552a12000   jmp qword [reloc.close]                 ; [0x20be78:8]=0x1d26 ; "&\x1d"
0x00001d26      681f000000     push 0x1f
0x00001d2b      e9f0fdffff     jmp sym..plt
;-- imp.pipe:
0x00001d30      ff254aa12000   jmp qword [reloc.pipe]                  ; [0x20be80:8]=0x1d36 ; "6\x1d"
0x00001d36      6820000000     push 0x20                               ; "@"
0x00001d3b      e9e0fdffff     jmp sym..plt
;-- imp.strspn:
0x00001d40      ff2542a12000   jmp qword [reloc.strspn]                ; [0x20be88:8]=0x1d46 ; "F\x1d"
0x00001d46      6821000000     push 0x21                               ; '!'
0x00001d4b      e9d0fdffff     jmp sym..plt
;-- imp.memchr:
0x00001d50      ff253aa12000   jmp qword [reloc.memchr]                ; [0x20be90:8]=0x1d56 ; "V\x1d"
0x00001d56      6822000000     push 0x22                               ; '"'
0x00001d5b      e9c0fdffff     jmp sym..plt
;-- imp.read:
0x00001d60      ff2532a12000   jmp qword [reloc.read]                  ; [0x20be98:8]=0x1d66 ; "f\x1d"
0x00001d66      6823000000     push 0x23                               ; '#'
0x00001d6b      e9b0fdffff     jmp sym..plt
;-- imp.memcmp:
0x00001d70      ff252aa12000   jmp qword [reloc.memcmp]                ; [0x20bea0:8]=0x1d76 ; "v\x1d"
0x00001d76      6824000000     push 0x24                               ; '$'
0x00001d7b      e9a0fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001d80      ff2522a12000   jmp qword [reloc.fputs_unlocked]        ; [0x20bea8:8]=0x1d86
0x00001d86      6825000000     push 0x25                               ; '%'
0x00001d8b      e990fdffff     jmp sym..plt
;-- imp.calloc:
0x00001d90      ff251aa12000   jmp qword [reloc.calloc]                ; [0x20beb0:8]=0x1d96
0x00001d96      6826000000     push 0x26                               ; '&'
0x00001d9b      e980fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001da0      ff2512a12000   jmp qword [reloc.strcmp]                ; [0x20beb8:8]=0x1da6
0x00001da6      6827000000     push 0x27                               ; '''
0x00001dab      e970fdffff     jmp sym..plt
;-- imp.sigemptyset:
0x00001db0      ff250aa12000   jmp qword [reloc.sigemptyset]           ; [0x20bec0:8]=0x1db6
0x00001db6      6828000000     push 0x28                               ; '('
0x00001dbb      e960fdffff     jmp sym..plt
;-- imp.strtol:
0x00001dc0      ff2502a12000   jmp qword [reloc.strtol]                ; [0x20bec8:8]=0x1dc6
0x00001dc6      6829000000     push 0x29                               ; ')'
0x00001dcb      e950fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001dd0      ff25faa02000   jmp qword [reloc.memcpy]                ; [0x20bed0:8]=0x1dd6
0x00001dd6      682a000000     push 0x2a                               ; '*'
0x00001ddb      e940fdffff     jmp sym..plt
;-- imp.fileno:
0x00001de0      ff25f2a02000   jmp qword [reloc.fileno]                ; [0x20bed8:8]=0x1de6
0x00001de6      682b000000     push 0x2b                               ; '+'
0x00001deb      e930fdffff     jmp sym..plt
;-- imp.malloc:
0x00001df0      ff25eaa02000   jmp qword [reloc.malloc]                ; [0x20bee0:8]=0x1df6
0x00001df6      682c000000     push 0x2c                               ; ','
0x00001dfb      e920fdffff     jmp sym..plt
;-- imp.fflush:
0x00001e00      ff25e2a02000   jmp qword [reloc.fflush]                ; [0x20bee8:8]=0x1e06
0x00001e06      682d000000     push 0x2d                               ; '-'
0x00001e0b      e910fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001e10      ff25daa02000   jmp qword [reloc.nl_langinfo]           ; [0x20bef0:8]=0x1e16
0x00001e16      682e000000     push 0x2e                               ; '.'
0x00001e1b      e900fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001e20      ff25d2a02000   jmp qword [reloc.__fxstat]              ; [0x20bef8:8]=0x1e26 ; "&\x1e"
0x00001e26      682f000000     push 0x2f                               ; '/'
0x00001e2b      e9f0fcffff     jmp sym..plt
;-- imp.__freading:
0x00001e30      ff25caa02000   jmp qword [reloc.__freading]            ; [0x20bf00:8]=0x1e36 ; "6\x1e"
0x00001e36      6830000000     push 0x30                               ; '0'
0x00001e3b      e9e0fcffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001e40      ff25c2a02000   jmp qword [reloc.fwrite_unlocked]       ; [0x20bf08:8]=0x1e46 ; "F\x1e"
0x00001e46      6831000000     push 0x31                               ; '1'
0x00001e4b      e9d0fcffff     jmp sym..plt
;-- imp.realloc:
0x00001e50      ff25baa02000   jmp qword [reloc.realloc]               ; [0x20bf10:8]=0x1e56 ; "V\x1e"
0x00001e56      6832000000     push 0x32                               ; '2'
0x00001e5b      e9c0fcffff     jmp sym..plt
;-- imp.fdopen:
0x00001e60      ff25b2a02000   jmp qword [reloc.fdopen]                ; [0x20bf18:8]=0x1e66 ; "f\x1e"
0x00001e66      6833000000     push 0x33                               ; '3'
0x00001e6b      e9b0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001e70      ff25aaa02000   jmp qword [reloc.setlocale]             ; [0x20bf20:8]=0x1e76 ; "v\x1e"
0x00001e76      6834000000     push 0x34                               ; '4'
0x00001e7b      e9a0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001e80      ff25a2a02000   jmp qword [reloc.__printf_chk]          ; [0x20bf28:8]=0x1e86
0x00001e86      6835000000     push 0x35                               ; '5'
0x00001e8b      e990fcffff     jmp sym..plt
;-- imp.memmove:
0x00001e90      ff259aa02000   jmp qword [reloc.memmove]               ; [0x20bf30:8]=0x1e96
0x00001e96      6836000000     push 0x36                               ; '6'
0x00001e9b      e980fcffff     jmp sym..plt
;-- imp.error:
0x00001ea0      ff2592a02000   jmp qword [reloc.error]                 ; [0x20bf38:8]=0x1ea6
0x00001ea6      6837000000     push 0x37                               ; '7'
0x00001eab      e970fcffff     jmp sym..plt
;-- imp.memrchr:
0x00001eb0      ff258aa02000   jmp qword [reloc.memrchr]               ; [0x20bf40:8]=0x1eb6
0x00001eb6      6838000000     push 0x38                               ; '8'
0x00001ebb      e960fcffff     jmp sym..plt
;-- imp.waitpid:
0x00001ec0      ff2582a02000   jmp qword [reloc.waitpid]               ; [0x20bf48:8]=0x1ec6
0x00001ec6      6839000000     push 0x39                               ; '9'
0x00001ecb      e950fcffff     jmp sym..plt
;-- imp.open:
0x00001ed0      ff257aa02000   jmp qword [reloc.open]                  ; [0x20bf50:8]=0x1ed6
0x00001ed6      683a000000     push 0x3a                               ; ':'
0x00001edb      e940fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001ee0      ff2572a02000   jmp qword [reloc.fseeko]                ; [0x20bf58:8]=0x1ee6
0x00001ee6      683b000000     push 0x3b                               ; ';'
0x00001eeb      e930fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001ef0      ff256aa02000   jmp qword [reloc.__cxa_atexit]          ; [0x20bf60:8]=0x1ef6
0x00001ef6      683c000000     push 0x3c                               ; '<'
0x00001efb      e920fcffff     jmp sym..plt
;-- imp.getpagesize:
0x00001f00      ff2562a02000   jmp qword [reloc.getpagesize]           ; [0x20bf68:8]=0x1f06
0x00001f06      683d000000     push 0x3d                               ; '='
0x00001f0b      e910fcffff     jmp sym..plt
;-- imp.__libc_current_sigrtmin:
0x00001f10      ff255aa02000   jmp qword [reloc.__libc_current_sigrtmin] ; [0x20bf70:8]=0x1f16
0x00001f16      683e000000     push 0x3e                               ; '>'
0x00001f1b      e900fcffff     jmp sym..plt
;-- imp.exit:
0x00001f20      ff2552a02000   jmp qword [reloc.exit]                  ; [0x20bf78:8]=0x1f26 ; "&\x1f"
0x00001f26      683f000000     push 0x3f                               ; '?'
0x00001f2b      e9f0fbffff     jmp sym..plt
;-- imp.fwrite:
0x00001f30      ff254aa02000   jmp qword [reloc.fwrite]                ; [0x20bf80:8]=0x1f36 ; "6\x1f"
0x00001f36      6840000000     push 0x40                               ; segment.PHDR
0x00001f3b      e9e0fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001f40      ff2542a02000   jmp qword [reloc.__fprintf_chk]         ; [0x20bf88:8]=0x1f46 ; "F\x1f"
0x00001f46      6841000000     push 0x41                               ; 'A'
0x00001f4b      e9d0fbffff     jmp sym..plt
;-- imp.__libc_current_sigrtmax:
0x00001f50      ff253aa02000   jmp qword [reloc.__libc_current_sigrtmax] ; [0x20bf90:8]=0x1f56 ; "V\x1f"
0x00001f56      6842000000     push 0x42                               ; 'B'
0x00001f5b      e9c0fbffff     jmp sym..plt
;-- imp.mbsinit:
0x00001f60      ff2532a02000   jmp qword [reloc.mbsinit]               ; [0x20bf98:8]=0x1f66 ; "f\x1f"
0x00001f66      6843000000     push 0x43                               ; 'C'
0x00001f6b      e9b0fbffff     jmp sym..plt
;-- imp.execl:
0x00001f70      ff252aa02000   jmp qword [reloc.execl]                 ; [0x20bfa0:8]=0x1f76 ; "v\x1f"
0x00001f76      6844000000     push 0x44                               ; 'D'
0x00001f7b      e9a0fbffff     jmp sym..plt
;-- imp.iswprint:
0x00001f80      ff2522a02000   jmp qword [reloc.iswprint]              ; [0x20bfa8:8]=0x1f86
0x00001f86      6845000000     push 0x45                               ; 'E'
0x00001f8b      e990fbffff     jmp sym..plt
;-- imp.sigaddset:
0x00001f90      ff251aa02000   jmp qword [reloc.sigaddset]             ; [0x20bfb0:8]=0x1f96
0x00001f96      6846000000     push 0x46                               ; 'F'
0x00001f9b      e980fbffff     jmp sym..plt
;-- imp.fork:
0x00001fa0      ff2512a02000   jmp qword [reloc.fork]                  ; [0x20bfb8:8]=0x1fa6
0x00001fa6      6847000000     push 0x47                               ; 'G'
0x00001fab      e970fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001fb0      ff250aa02000   jmp qword [reloc.__ctype_b_loc]         ; [0x20bfc0:8]=0x1fb6
0x00001fb6      6848000000     push 0x48                               ; 'H'
0x00001fbb      e960fbffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001fc0      ff2502a02000   jmp qword [reloc.__sprintf_chk]         ; [0x20bfc8:8]=0x1fc6
0x00001fc6      6849000000     push 0x49                               ; 'I'
0x00001fcb      e950fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001fd0      .qword 0x90660020a01a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001fd8      0000           add byte [rax], al
0x00001fda      0000           add byte [rax], al
0x00001fdc      0000           add byte [rax], al
0x00001fde      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001fe0      4157           push r15                                ; [14] -r-x section size 27326 named .text
0x00001fe2      4156           push r14
0x00001fe4      4531f6         xor r14d, r14d
0x00001fe7      4155           push r13
0x00001fe9      4154           push r12
0x00001feb      4531e4         xor r12d, r12d
0x00001fee      55             push rbp
0x00001fef      53             push rbx
0x00001ff0      4889f3         mov rbx, rsi
0x00001ff3      89fd           mov ebp, edi
0x00001ff5      4881ec480100.  sub rsp, 0x148
0x00001ffc      64488b042528.  mov rax, qword fs:[0x28]
0x00002005      488984243801.  mov qword [rsp + 0x138], rax
0x0000200d      31c0           xor eax, eax
0x0000200f      e8ecfeffff     call sym.imp.getpagesize
0x00002014      488b3b         mov rdi, qword [rbx]
0x00002017      4898           cdqe
0x00002019      4889442408     mov qword [rsp + 8], rax
0x0000201e      e8ed350000     call sym.set_program_name
0x00002023      488d35178100.  lea rsi, [0x0000a141]
0x0000202a      bf06000000     mov edi, 6
0x0000202f      e83cfeffff     call sym.imp.setlocale
0x00002034      488d35736c00.  lea rsi, str.usr_local_share_locale     ; 0x8cae ; "/usr/local/share/locale"
0x0000203b      488d3d436c00.  lea rdi, [0x00008c85]                   ; "coreutils"
0x00002042      e8e9fbffff     call sym.imp.bindtextdomain
0x00002047      488d3d376c00.  lea rdi, [0x00008c85]                   ; "coreutils"
0x0000204e      e8bdfbffff     call sym.imp.textdomain
0x00002053      488d3db63200.  lea rdi, sym.close_stdout               ; 0x5310 ; "USH\x83\xec\bH\x8b=Ko "
0x0000205a      e8316a0000     call sym.atexit
0x0000205f      488d05ac7b00.  lea rax, [0x00009c12]                   ; "-"
0x00002066      48c704240000.  mov qword [rsp], 0
0x0000206e      48c744241000.  mov qword [rsp + 0x10], 0
0x00002077      48c744244000.  mov qword [rsp + 0x40], 0
0x00002080      48890509a320.  mov qword [obj.infile], rax             ; [0x20c390:8]=0
0x00002087      488d05ff6d00.  lea rax, [0x00008e8d]                   ; "x"
0x0000208e      4889052ba320.  mov qword [obj.outbase], rax            ; [0x20c3c0:8]=0
0x00002095      0f1f00         nop dword [rax]
0x00002098      448b2dd1a120.  mov r13d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20c270:4]=0
0x0000209f      b801000000     mov eax, 1
0x000020a4      488d0d559820.  lea rcx, obj.longopts                   ; 0x20b900 ; "\t\x8d"
0x000020ab      488d15146c00.  lea rdx, str.0123456789C:a:b:del:n:t:ux ; 0x8cc6 ; "0123456789C:a:b:del:n:t:ux"
0x000020b2      4889de         mov rsi, rbx
0x000020b5      89ef           mov edi, ebp
0x000020b7      4585ed         test r13d, r13d
0x000020ba      440f44e8       cmove r13d, eax
0x000020be      4531c0         xor r8d, r8d
0x000020c1      e8bafbffff     call sym.imp.getopt_long
0x000020c6      83f8ff         cmp eax, 0xffffffff
0x000020c9      4189c7         mov r15d, eax
0x000020cc      0f8496050000   je 0x2668
0x000020d2      83f865         cmp eax, 0x65
0x000020d5      0f8465010000   je 0x2240
0x000020db      7e43           jle 0x2120
0x000020dd      83f878         cmp eax, 0x78
0x000020e0      0f84d5040000   je 0x25bb
0x000020e6      0f8fac000000   jg 0x2198
0x000020ec      83f86e         cmp eax, 0x6e
0x000020ef      0f8453020000   je 0x2348
0x000020f5      0f8eed010000   jle 0x22e8
0x000020fb      83f874         cmp eax, 0x74
0x000020fe      0f848c010000   je 0x2290
0x00002104      83f875         cmp eax, 0x75
0x00002107      0f851f180000   jne 0x392c
0x0000210d      c605cca12000.  mov byte [obj.unbuffered], 1            ; [0x20c2e0:1]=0
0x00002114      eb82           jmp 0x2098
0x00002116      662e0f1f8400.  nop word cs:[rax + rax]
0x00002120      83f839         cmp eax, 0x39
0x00002123      0f8ebf000000   jle 0x21e8
0x00002129      83f861         cmp eax, 0x61
0x0000212c      0f848e030000   je 0x24c0
0x00002132      0f8e28030000   jle 0x2460
0x00002138      83f862         cmp eax, 0x62
0x0000213b      0f850b050000   jne 0x264c
0x00002141      4585e4         test r12d, r12d
0x00002144      0f855e1b0000   jne 0x3ca8
0x0000214a      488d35a66b00.  lea rsi, str.invalid_number_of_bytes    ; 0x8cf7 ; "invalid number of bytes"
0x00002151      ba05000000     mov edx, 5
0x00002156      31ff           xor edi, edi
0x00002158      41bc01000000   mov r12d, 1
0x0000215e      e8ddfaffff     call sym.imp.dcgettext
0x00002163      488b3d0ea120.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x0000216a      488d0d477a00.  lea rcx, obj.multipliers.7397           ; 0x9bb8 ; "bEGKkMmPTYZ0"
0x00002171      4989c0         mov r8, rax
0x00002174      4531c9         xor r9d, r9d
0x00002177      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x00002181      be01000000     mov esi, 1
0x00002186      e8655c0000     call sym.xdectoumax
0x0000218b      48890424       mov qword [rsp], rax
0x0000218f      e904ffffff     jmp 0x2098
0x00002194      0f1f4000       nop dword [rax]
0x00002198      3d81000000     cmp eax, 0x81
0x0000219d      0f84cd030000   je 0x2570
0x000021a3      0f8ea7030000   jle 0x2550
0x000021a9      3d82000000     cmp eax, 0x82
0x000021ae      0f8454030000   je 0x2508
0x000021b4      3d83000000     cmp eax, 0x83
0x000021b9      0f856d170000   jne 0x392c
0x000021bf      4c8b2db2a020.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000021c6      4c89ef         mov rdi, r13
0x000021c9      e8f2310000     call sym.last_component
0x000021ce      4939c5         cmp r13, rax
0x000021d1      0f85c7180000   jne 0x3a9e
0x000021d7      4c892dbaa120.  mov qword [obj.additional_suffix], r13  ; [0x20c398:8]=0
0x000021de      e9b5feffff     jmp 0x2098
0x000021e3      0f1f440000     nop dword [rax + rax]
0x000021e8      83f830         cmp eax, 0x30
0x000021eb      7d63           jge 0x2250
0x000021ed      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000021f2      0f854a160000   jne 0x3842
0x000021f8      4883ec08       sub rsp, 8
0x000021fc      488b3d65a020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00002203      488b0d1e9e20.  mov rcx, qword [obj.Version]            ; [0x20c028:8]=0x9bc5 str.8.31
0x0000220a      6a00           push 0
0x0000220c      4c8d0db16b00.  lea r9, str.Richard_M._Stallman         ; 0x8dc4 ; "Richard M. Stallman"
0x00002213      4c8d05be6b00.  lea r8, str.Torbjorn_Granlund           ; 0x8dd8 ; "Torbjorn Granlund"
0x0000221a      488d15606a00.  lea rdx, str.GNU_coreutils              ; 0x8c81 ; "GNU coreutils"
0x00002221      488d35dd6900.  lea rsi, str.split                      ; 0x8c05 ; "split"
0x00002228      31c0           xor eax, eax
0x0000222a      e8d1560000     call sym.version_etc
0x0000222f      31ff           xor edi, edi
0x00002231      e8eafcffff     call sym.imp.exit
0x00002236      662e0f1f8400.  nop word cs:[rax + rax]
0x00002240      c6059aa02000.  mov byte [obj.elide_empty_files], 1     ; [0x20c2e1:1]=0
0x00002247      e94cfeffff     jmp 0x2098
0x0000224c      0f1f4000       nop dword [rax]
0x00002250      4585e4         test r12d, r12d
0x00002253      741c           je 0x2271
0x00002255      4183fc04       cmp r12d, 4
0x00002259      0f85491a0000   jne 0x3ca8
0x0000225f      4585f6         test r14d, r14d
0x00002262      0f8485060000   je 0x28ed
0x00002268      4539ee         cmp r14d, r13d
0x0000226b      0f847c060000   je 0x28ed
0x00002271      4183ef30       sub r15d, 0x30
0x00002275      4589ee         mov r14d, r13d
0x00002278      41bc04000000   mov r12d, 4
0x0000227e      4963c7         movsxd rax, r15d
0x00002281      48890424       mov qword [rsp], rax
0x00002285      e90efeffff     jmp 0x2098
0x0000228a      660f1f440000   nop word [rax + rax]
0x00002290      4c8b2de19f20.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002297      410fbe4500     movsx eax, byte [r13]
0x0000229c      84c0           test al, al
0x0000229e      0f849c190000   je 0x3c40
0x000022a4      41807d0100     cmp byte [r13 + 1], 0
0x000022a9      7419           je 0x22c4
0x000022ab      488d35c06a00.  lea rsi, [0x00008d72]                   ; "\0"
0x000022b2      4c89ef         mov rdi, r13
0x000022b5      e8e6faffff     call sym.imp.strcmp
0x000022ba      85c0           test eax, eax
0x000022bc      0f851b1a0000   jne 0x3cdd
0x000022c2      31c0           xor eax, eax
0x000022c4      8b15469d2000   mov edx, dword [obj.eolchar]            ; [0x20c010:4]=-1
0x000022ca      85d2           test edx, edx
0x000022cc      7808           js 0x22d6
0x000022ce      39c2           cmp edx, eax
0x000022d0      0f85e3190000   jne 0x3cb9
0x000022d6      8905349d2000   mov dword [obj.eolchar], eax            ; [0x20c010:4]=-1
0x000022dc      e9b7fdffff     jmp 0x2098
0x000022e1      0f1f80000000.  nop dword [rax]
0x000022e8      83f86c         cmp eax, 0x6c
0x000022eb      0f853b160000   jne 0x392c
0x000022f1      4585e4         test r12d, r12d
0x000022f4      0f85ae190000   jne 0x3ca8
0x000022fa      488d350e6a00.  lea rsi, str.invalid_number_of_lines    ; 0x8d0f ; "invalid number of lines"
0x00002301      ba05000000     mov edx, 5
0x00002306      31ff           xor edi, edi
0x00002308      41bc03000000   mov r12d, 3
0x0000230e      e82df9ffff     call sym.imp.dcgettext
0x00002313      488b3d5e9f20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x0000231a      488d0d207e00.  lea rcx, [0x0000a141]
0x00002321      4989c0         mov r8, rax
0x00002324      4531c9         xor r9d, r9d
0x00002327      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000232e      be01000000     mov esi, 1
0x00002333      e8b85a0000     call sym.xdectoumax
0x00002338      48890424       mov qword [rsp], rax
0x0000233c      e957fdffff     jmp 0x2098
0x00002341      0f1f80000000.  nop dword [rax]
0x00002348      4585e4         test r12d, r12d
0x0000234b      0f8557190000   jne 0x3ca8
0x00002351      e85afcffff     call sym.imp.__ctype_b_loc
0x00002356      488b08         mov rcx, qword [rax]
0x00002359      488b05189f20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002360      eb0d           jmp 0x236f
0x00002362      660f1f440000   nop word [rax + rax]
0x00002368      488905099f20.  mov qword [obj.optarg], rax             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x0000236f      4989c5         mov r13, rax
0x00002372      4883c001       add rax, 1
0x00002376      410fb65500     movzx edx, byte [r13]
0x0000237b      f644510120     test byte [rcx + rdx*2 + 1], 0x20
0x00002380      75e6           jne 0x2368
0x00002382      488d3d9e6900.  lea rdi, [0x00008d27]                   ; "r/"
0x00002389      b902000000     mov ecx, 2
0x0000238e      4c89ee         mov rsi, r13
0x00002391      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002393      0f97c0         seta al
0x00002396      1c00           sbb al, 0
0x00002398      84c0           test al, al
0x0000239a      0f85e3010000   jne 0x2583
0x000023a0      4983c502       add r13, 2
0x000023a4      41bc07000000   mov r12d, 7
0x000023aa      4c892dc79e20.  mov qword [obj.optarg], r13             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000023b1      488b3dc09e20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000023b8      be2f000000     mov esi, 0x2f                           ; '/'
0x000023bd      e8eef8ffff     call sym.imp.strchr
0x000023c2      31ff           xor edi, edi
0x000023c4      4885c0         test rax, rax
0x000023c7      4989c5         mov r13, rax
0x000023ca      ba05000000     mov edx, 5
0x000023cf      488d35576900.  lea rsi, str.invalid_number_of_chunks   ; 0x8d2d ; "invalid number of chunks"
0x000023d6      0f84ce040000   je 0x28aa
0x000023dc      e85ff8ffff     call sym.imp.dcgettext
0x000023e1      498d7d01       lea rdi, [r13 + 1]
0x000023e5      488d0d557d00.  lea rcx, [0x0000a141]
0x000023ec      4531c9         xor r9d, r9d
0x000023ef      4883caff       or rdx, 0xffffffffffffffff
0x000023f3      4989c0         mov r8, rax
0x000023f6      be01000000     mov esi, 1
0x000023fb      e8f0590000     call sym.xdectoumax
0x00002400      4c3b2d719e20.  cmp r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002407      4989c7         mov r15, rax
0x0000240a      48890424       mov qword [rsp], rax
0x0000240e      0f8484fcffff   je 0x2098
0x00002414      488d352b6900.  lea rsi, str.invalid_chunk_number       ; 0x8d46 ; "invalid chunk number"
0x0000241b      ba05000000     mov edx, 5
0x00002420      31ff           xor edi, edi
0x00002422      41c6450000     mov byte [r13], 0
0x00002427      e814f8ffff     call sym.imp.dcgettext
0x0000242c      488b3d459e20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002433      488d0d077d00.  lea rcx, [0x0000a141]
0x0000243a      4989c0         mov r8, rax
0x0000243d      4531c9         xor r9d, r9d
0x00002440      4c89fa         mov rdx, r15
0x00002443      be01000000     mov esi, 1
0x00002448      e8a3590000     call sym.xdectoumax
0x0000244d      4889442410     mov qword [rsp + 0x10], rax
0x00002452      e941fcffff     jmp 0x2098
0x00002457      660f1f840000.  nop word [rax + rax]
0x00002460      83f843         cmp eax, 0x43
0x00002463      0f85c3140000   jne 0x392c
0x00002469      4585e4         test r12d, r12d
0x0000246c      0f8536180000   jne 0x3ca8
0x00002472      488d357e6800.  lea rsi, str.invalid_number_of_bytes    ; 0x8cf7 ; "invalid number of bytes"
0x00002479      ba05000000     mov edx, 5
0x0000247e      31ff           xor edi, edi
0x00002480      41bc02000000   mov r12d, 2
0x00002486      e8b5f7ffff     call sym.imp.dcgettext
0x0000248b      488b3de69d20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002492      488d0d1f7700.  lea rcx, obj.multipliers.7397           ; 0x9bb8 ; "bEGKkMmPTYZ0"
0x00002499      4989c0         mov r8, rax
0x0000249c      4531c9         xor r9d, r9d
0x0000249f      48baffffffff.  movabs rdx, 0x7fffffffffffffff          ; 9223372036854775807
0x000024a9      be01000000     mov esi, 1
0x000024ae      e83d590000     call sym.xdectoumax
0x000024b3      48890424       mov qword [rsp], rax
0x000024b7      e9dcfbffff     jmp 0x2098
0x000024bc      0f1f4000       nop dword [rax]
0x000024c0      488d351a6800.  lea rsi, str.invalid_suffix_length      ; 0x8ce1 ; "invalid suffix length"
0x000024c7      ba05000000     mov edx, 5
0x000024cc      31ff           xor edi, edi
0x000024ce      e86df7ffff     call sym.imp.dcgettext
0x000024d3      488b3d9e9d20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000024da      488d0d607c00.  lea rcx, [0x0000a141]
0x000024e1      4989c0         mov r8, rax
0x000024e4      4531c9         xor r9d, r9d
0x000024e7      48baffffffff.  movabs rdx, 0x1fffffffffffffff          ; 2305843009213693951
0x000024f1      31f6           xor esi, esi
0x000024f3      e8f8580000     call sym.xdectoumax
0x000024f8      488905a99e20.  mov qword [obj.suffix_length], rax      ; [0x20c3a8:8]=0
0x000024ff      e994fbffff     jmp 0x2098
0x00002504      0f1f4000       nop dword [rax]
0x00002508      488d359f6800.  lea rsi, str.invalid_IO_block_size      ; 0x8dae ; "invalid IO block size"
0x0000250f      ba05000000     mov edx, 5
0x00002514      31ff           xor edi, edi
0x00002516      e825f7ffff     call sym.imp.dcgettext
0x0000251b      488b542408     mov rdx, qword [rsp + 8]
0x00002520      488b3d519d20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002527      488d0d8a7600.  lea rcx, obj.multipliers.7397           ; 0x9bb8 ; "bEGKkMmPTYZ0"
0x0000252e      4989c0         mov r8, rax
0x00002531      4531c9         xor r9d, r9d
0x00002534      be01000000     mov esi, 1
0x00002539      48f7d2         not rdx
0x0000253c      e8af580000     call sym.xdectoumax
0x00002541      4889442440     mov qword [rsp + 0x40], rax
0x00002546      e94dfbffff     jmp 0x2098
0x0000254b      0f1f440000     nop dword [rax + rax]
0x00002550      4183c780       add r15d, 0xffffff80
0x00002554      0f85d2130000   jne 0x392c
0x0000255a      c605819d2000.  mov byte [obj.verbose], 1               ; [0x20c2e2:1]=0
0x00002561      e932fbffff     jmp 0x2098
0x00002566      662e0f1f8400.  nop word cs:[rax + rax]
0x00002570      488b05019d20.  mov rax, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002577      488905829f20.  mov qword [obj.filter_command], rax     ; [0x20c500:8]=0
0x0000257e      e915fbffff     jmp 0x2098
0x00002583      488d35a06700.  lea rsi, [0x00008d2a]                   ; "l/"
0x0000258a      ba02000000     mov edx, 2
0x0000258f      4c89ef         mov rdi, r13
0x00002592      41bc05000000   mov r12d, 5
0x00002598      e8e3f5ffff     call sym.imp.strncmp
0x0000259d      85c0           test eax, eax
0x0000259f      0f850cfeffff   jne 0x23b1
0x000025a5      4983c502       add r13, 2
0x000025a9      41bc06000000   mov r12d, 6
0x000025af      4c892dc29c20.  mov qword [obj.optarg], r13             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000025b6      e9f6fdffff     jmp 0x23b1
0x000025bb      488d05db6700.  lea rax, str.0123456789abcdef           ; 0x8d9d ; "0123456789abcdef"
0x000025c2      488905579a20.  mov qword [obj.suffix_alphabet], rax    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x000025c9      4c8b2da89c20.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000025d0      4d85ed         test r13, r13
0x000025d3      0f84bffaffff   je 0x2098
0x000025d9      31c0           xor eax, eax
0x000025db      4883c9ff       or rcx, 0xffffffffffffffff
0x000025df      4c89ef         mov rdi, r13
0x000025e2      f2ae           repne scasb al, byte [rdi]
0x000025e4      4c89ef         mov rdi, r13
0x000025e7      4889ce         mov rsi, rcx
0x000025ea      48f7d6         not rsi
0x000025ed      488d46ff       lea rax, [rsi - 1]
0x000025f1      488b35289a20.  mov rsi, qword [obj.suffix_alphabet]    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x000025f8      4889442418     mov qword [rsp + 0x18], rax
0x000025fd      e83ef7ffff     call sym.imp.strspn
0x00002602      4839442418     cmp qword [rsp + 0x18], rax
0x00002607      0f85f7150000   jne 0x3c04
0x0000260d      41807d0030     cmp byte [r13], 0x30
0x00002612      752c           jne 0x2640
0x00002614      41807d0100     cmp byte [r13 + 1], 0
0x00002619      498d4501       lea rax, [r13 + 1]
0x0000261d      7512           jne 0x2631
0x0000261f      eb1f           jmp 0x2640
0x00002621      0f1f80000000.  nop dword [rax]
0x00002628      4883c001       add rax, 1
0x0000262c      803800         cmp byte [rax], 0
0x0000262f      740f           je 0x2640
0x00002631      488905409c20.  mov qword [obj.optarg], rax             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x00002638      803830         cmp byte [rax], 0x30
0x0000263b      4989c5         mov r13, rax
0x0000263e      74e8           je 0x2628
0x00002640      4c892d599d20.  mov qword [obj.numeric_suffix_start], r13 ; [0x20c3a0:8]=0
0x00002647      e94cfaffff     jmp 0x2098
0x0000264c      83f864         cmp eax, 0x64
0x0000264f      0f85d7120000   jne 0x392c
0x00002655      488d05366700.  lea rax, str.0123456789                 ; 0x8d92 ; "0123456789"
0x0000265c      488905bd9920.  mov qword [obj.suffix_alphabet], rax    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x00002663      e961ffffff     jmp 0x25c9
0x00002668      48837c241000   cmp qword [rsp + 0x10], 0
0x0000266e      740e           je 0x267e
0x00002670      48833d889e20.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x00002678      0f858d120000   jne 0x390b
0x0000267e      4585e4         test r12d, r12d
0x00002681      0f8453020000   je 0x28da
0x00002687      48833c2400     cmp qword [rsp], 0
0x0000268c      0f84d2150000   je 0x3c64
0x00002692      833d77992000.  cmp dword [obj.eolchar], 0              ; [0x20c010:4]=-1
0x00002699      790a           jns 0x26a5
0x0000269b      c7056b992000.  mov dword [obj.eolchar], 0xa            ; [0x20c010:4]=-1
0x000026a5      488b3df49c20.  mov rdi, qword [obj.numeric_suffix_start] ; [0x20c3a0:8]=0
0x000026ac      458d6c24fb     lea r13d, [r12 - 5]
0x000026b1      4885ff         test rdi, rdi
0x000026b4      0f846d020000   je 0x2927
0x000026ba      4183fd02       cmp r13d, 2
0x000026be      c60553992000.  mov byte [obj.suffix_auto], 0           ; [0x20c018:1]=1
0x000026c5      0f86db020000   jbe 0x29a6
0x000026cb      4531f6         xor r14d, r14d
0x000026ce      48833dd29c20.  cmp qword [obj.suffix_length], 0        ; [0x20c3a8:8]=0
0x000026d6      0f85be020000   jne 0x299a
0x000026dc      4983fe02       cmp r14, 2
0x000026e0      b802000000     mov eax, 2
0x000026e5      490f43c6       cmovae rax, r14
0x000026e9      488905b89c20.  mov qword [obj.suffix_length], rax      ; [0x20c3a8:8]=0
0x000026f0      8b057a9b2000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20c270:4]=0
0x000026f6      39e8           cmp eax, ebp
0x000026f8      7d40           jge 0x273a
0x000026fa      4863c8         movsxd rcx, eax
0x000026fd      8d5001         lea edx, [rax + 1]
0x00002700      488d34cd0000.  lea rsi, [rcx*8]
0x00002708      488b0ccb       mov rcx, qword [rbx + rcx*8]
0x0000270c      39ea           cmp edx, ebp
0x0000270e      89155c9b2000   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20c270:4]=0
0x00002714      48890d759c20.  mov qword [obj.infile], rcx             ; [0x20c390:8]=0
0x0000271b      7d1d           jge 0x273a
0x0000271d      488b543308     mov rdx, qword [rbx + rsi + 8]
0x00002722      83c002         add eax, 2
0x00002725      39e8           cmp eax, ebp
0x00002727      8905439b2000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20c270:4]=0
0x0000272d      4889158c9c20.  mov qword [obj.outbase], rdx            ; [0x20c3c0:8]=0
0x00002734      0f8c28130000   jl 0x3a62
0x0000273a      488b3d5f9c20.  mov rdi, qword [obj.numeric_suffix_start] ; [0x20c3a0:8]=0
0x00002741      4885ff         test rdi, rdi
0x00002744      742b           je 0x2771
0x00002746      31c0           xor eax, eax
0x00002748      4883c9ff       or rcx, 0xffffffffffffffff
0x0000274c      ba05000000     mov edx, 5
0x00002751      f2ae           repne scasb al, byte [rdi]
0x00002753      488d35667300.  lea rsi, str.numerical_suffix_start_value_is_too_large_for_the_suffix_length ; 0x9ac0 ; "numerical suffix start value is too large for the suffix length"
0x0000275a      4889c8         mov rax, rcx
0x0000275d      48f7d0         not rax
0x00002760      4883e801       sub rax, 1
0x00002764      483b053d9c20.  cmp rax, qword [obj.suffix_length]      ; [0x20c3a8:8]=0
0x0000276b      0f87a6110000   ja 0x3917
0x00002771      488b1d189c20.  mov rbx, qword [obj.infile]             ; [0x20c390:8]=0
0x00002778      488d35937400.  lea rsi, [0x00009c12]                   ; "-"
0x0000277f      4889df         mov rdi, rbx
0x00002782      e819f6ffff     call sym.imp.strcmp
0x00002787      85c0           test eax, eax
0x00002789      7416           je 0x27a1
0x0000278b      31c9           xor ecx, ecx
0x0000278d      31d2           xor edx, edx
0x0000278f      31ff           xor edi, edi
0x00002791      4889de         mov rsi, rbx
0x00002794      e8472d0000     call sym.fd_reopen
0x00002799      85c0           test eax, eax
0x0000279b      0f887e120000   js 0x3a1f
0x000027a1      488d15589b20.  lea rdx, obj.in_stat_buf                ; 0x20c300
0x000027a8      31f6           xor esi, esi
0x000027aa      bf01000000     mov edi, 1
0x000027af      e86cf6ffff     call sym.imp.__fxstat
0x000027b4      85c0           test eax, eax
0x000027b6      0f8530120000   jne 0x39ec
0x000027bc      48837c244000   cmp qword [rsp + 0x40], 0
0x000027c2      7529           jne 0x27ed
0x000027c4      488b356d9b20.  mov rsi, qword [0x0020c338]             ; [0x20c338:8]=0
0x000027cb      48b80000feff.  movabs rax, 0x1ffffffffffe0000
0x000027d5      488d960000fe.  lea rdx, [rsi - 0x20000]
0x000027dc      4839c2         cmp rdx, rax
0x000027df      b800000200     mov eax, 0x20000
0x000027e4      480f46c6       cmovbe rax, rsi
0x000027e8      4889442440     mov qword [rsp + 0x40], rax
0x000027ed      488b5c2408     mov rbx, qword [rsp + 8]
0x000027f2      488b7c2440     mov rdi, qword [rsp + 0x40]
0x000027f7      4883cdff       or rbp, 0xffffffffffffffff
0x000027fb      4801df         add rdi, rbx
0x000027fe      e85d520000     call sym.xmalloc
0x00002803      488d4c18ff     lea rcx, [rax + rbx - 1]
0x00002808      31d2           xor edx, edx
0x0000280a      4889c8         mov rax, rcx
0x0000280d      48f7f3         div rbx
0x00002810      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x0000281a      4889442418     mov qword [rsp + 0x18], rax
0x0000281f      4829d1         sub rcx, rdx
0x00002822      4183fd01       cmp r13d, 1
0x00002826      48894c2448     mov qword [rsp + 0x48], rcx
0x0000282b      0f86be010000   jbe 0x29ef
0x00002831      48833dc79c20.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x00002839      7451           je 0x288c
0x0000283b      488d3d9e9b20.  lea rdi, obj.newblocked                 ; 0x20c3e0
0x00002842      e869f5ffff     call sym.imp.sigemptyset
0x00002847      488d94248000.  lea rdx, [rsp + 0x80]
0x0000284f      31f6           xor esi, esi
0x00002851      bf0d000000     mov edi, 0xd
0x00002856      e865f3ffff     call sym.imp.sigaction
0x0000285b      4883bc248000.  cmp qword [rsp + 0x80], 1
0x00002864      7411           je 0x2877
0x00002866      488d3d739b20.  lea rdi, obj.newblocked                 ; 0x20c3e0
0x0000286d      be0d000000     mov esi, 0xd
0x00002872      e819f7ffff     call sym.imp.sigaddset
0x00002877      488d15e29b20.  lea rdx, obj.oldblocked                 ; 0x20c460
0x0000287e      488d355b9b20.  lea rsi, obj.newblocked                 ; 0x20c3e0
0x00002885      31ff           xor edi, edi
0x00002887      e8b4f2ffff     call sym.imp.sigprocmask
0x0000288c      4183ec02       sub r12d, 2
0x00002890      4183fc05       cmp r12d, 5
0x00002894      0f87f20b0000   ja 0x348c
0x0000289a      488d15af7200.  lea rdx, [0x00009b50]
0x000028a1      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000028a5      4801d0         add rax, rdx
0x000028a8      ffe0           jmp rax
0x000028aa      e891f3ffff     call sym.imp.dcgettext
0x000028af      488b3dc29920.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20c278:8]=0
0x000028b6      488d0d847800.  lea rcx, [0x0000a141]
0x000028bd      4989c0         mov r8, rax
0x000028c0      4531c9         xor r9d, r9d
0x000028c3      4883caff       or rdx, 0xffffffffffffffff
0x000028c7      be01000000     mov esi, 1
0x000028cc      e81f550000     call sym.xdectoumax
0x000028d1      48890424       mov qword [rsp], rax
0x000028d5      e9bef7ffff     jmp 0x2098
0x000028da      48c70424e803.  mov qword [rsp], 0x3e8                  ; [0x3e8:8]=0x1200000225
0x000028e2      41bc03000000   mov r12d, 3
0x000028e8      e9a5fdffff     jmp 0x2692
0x000028ed      488b3c24       mov rdi, qword [rsp]
0x000028f1      48b899999999.  movabs rax, 0x1999999999999999
0x000028fb      4839c7         cmp rdi, rax
0x000028fe      0f875f120000   ja 0x3b63
0x00002904      486bc70a       imul rax, rdi, 0xa
0x00002908      418d57d0       lea edx, [r15 - 0x30]
0x0000290c      4863d2         movsxd rdx, edx
0x0000290f      4801d0         add rax, rdx
0x00002912      4839f8         cmp rax, rdi
0x00002915      0f8248120000   jb 0x3b63
0x0000291b      48890424       mov qword [rsp], rax
0x0000291f      4589ee         mov r14d, r13d
0x00002922      e971f7ffff     jmp 0x2098
0x00002927      4183fd02       cmp r13d, 2
0x0000292b      488b1424       mov rdx, qword [rsp]
0x0000292f      0f8796fdffff   ja 0x26cb
0x00002935      488b3de49620.  mov rdi, qword [obj.suffix_alphabet]    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x0000293c      31c0           xor eax, eax
0x0000293e      4883c9ff       or rcx, 0xffffffffffffffff
0x00002942      f2ae           repne scasb al, byte [rdi]
0x00002944      4889d0         mov rax, rdx
0x00002947      31d2           xor edx, edx
0x00002949      48f7d1         not rcx
0x0000294c      4883e901       sub rcx, 1
0x00002950      48f7f1         div rcx
0x00002953      4885d2         test rdx, rdx
0x00002956      400f95c7       setne dil
0x0000295a      4885c0         test rax, rax
0x0000295d      7413           je 0x2972
0x0000295f      31f6           xor esi, esi
0x00002961      31d2           xor edx, edx
0x00002963      4883c601       add rsi, 1
0x00002967      48f7f1         div rcx
0x0000296a      4885c0         test rax, rax
0x0000296d      75f2           jne 0x2961
0x0000296f      4889f0         mov rax, rsi
0x00002972      400fb6ff       movzx edi, dil
0x00002976      c6059b962000.  mov byte [obj.suffix_auto], 0           ; [0x20c018:1]=1
0x0000297d      4c8d3407       lea r14, [rdi + rax]
0x00002981      488b05209a20.  mov rax, qword [obj.suffix_length]      ; [0x20c3a8:8]=0
0x00002988      4885c0         test rax, rax
0x0000298b      0f844bfdffff   je 0x26dc
0x00002991      4939c6         cmp r14, rax
0x00002994      0f87a2110000   ja 0x3b3c
0x0000299a      c60577962000.  mov byte [obj.suffix_auto], 0           ; [0x20c018:1]=1
0x000029a1      e94afdffff     jmp 0x26f0
0x000029a6      488d4c2478     lea rcx, [rsp + 0x78]
0x000029ab      4c8d058f7700.  lea r8, [0x0000a141]
0x000029b2      ba0a000000     mov edx, 0xa
0x000029b7      31f6           xor esi, esi
0x000029b9      e862540000     call sym.xstrtoumax
0x000029be      488b0c24       mov rcx, qword [rsp]
0x000029c2      85c0           test eax, eax
0x000029c4      4889ca         mov rdx, rcx
0x000029c7      0f8568ffffff   jne 0x2935
0x000029cd      488b542478     mov rdx, qword [rsp + 0x78]
0x000029d2      4889c8         mov rax, rcx
0x000029d5      48f7d0         not rax
0x000029d8      4839d0         cmp rax, rdx
0x000029db      7209           jb 0x29e6
0x000029dd      4839ca         cmp rdx, rcx
0x000029e0      0f826e0e0000   jb 0x3854
0x000029e6      488b1424       mov rdx, qword [rsp]
0x000029ea      e946ffffff     jmp 0x2935
0x000029ef      31f6           xor esi, esi
0x000029f1      31ff           xor edi, edi
0x000029f3      ba01000000     mov edx, 1
0x000029f8      e8e3f2ffff     call sym.imp.lseek
0x000029fd      4531ed         xor r13d, r13d
0x00002a00      4885c0         test rax, rax
0x00002a03      4889c3         mov rbx, rax
0x00002a06      0f885e050000   js 0x2f6a
0x00002a0c      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002a11      4c8b7c2448     mov r15, qword [rsp + 0x48]
0x00002a16      eb1b           jmp 0x2a33
0x00002a18      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002a1c      0f8458050000   je 0x2f7a
0x00002a22      498d6c0500     lea rbp, [r13 + rax]
0x00002a27      4939ee         cmp r14, rbp
0x00002a2a      4989ed         mov r13, rbp
0x00002a2d      0f86820d0000   jbe 0x37b5
0x00002a33      4c89f2         mov rdx, r14
0x00002a36      4b8d342f       lea rsi, [r15 + r13]
0x00002a3a      31ff           xor edi, edi
0x00002a3c      4c29ea         sub rdx, r13
0x00002a3f      e8fc480000     call sym.safe_read
0x00002a44      4885c0         test rax, rax
0x00002a47      75cf           jne 0x2a18
0x00002a49      4d85ed         test r13, r13
0x00002a4c      0f8828050000   js 0x2f7a
0x00002a52      488b442440     mov rax, qword [rsp + 0x40]
0x00002a57      4939c5         cmp r13, rax
0x00002a5a      4889c5         mov rbp, rax
0x00002a5d      490f46ed       cmovbe rbp, r13
0x00002a61      48833c2400     cmp qword [rsp], 0
0x00002a66      0f884b100000   js 0x3ab7
0x00002a6c      488b0424       mov rax, qword [rsp]
0x00002a70      4939c5         cmp r13, rax
0x00002a73      4c0f42e8       cmovb r13, rax
0x00002a77      4c896c2418     mov qword [rsp + 0x18], r13
0x00002a7c      e9b0fdffff     jmp 0x2831
0x00002a81      4c8b3c24       mov r15, qword [rsp]
0x00002a85      31db           xor ebx, ebx
0x00002a87      41bd01000000   mov r13d, 1
0x00002a8d      488b542440     mov rdx, qword [rsp + 0x40]
0x00002a92      488b742448     mov rsi, qword [rsp + 0x48]
0x00002a97      31ff           xor edi, edi
0x00002a99      e8a2480000     call sym.safe_read
0x00002a9e      4889442408     mov qword [rsp + 8], rax
0x00002aa3      4883c001       add rax, 1
0x00002aa7      0f84ad0e0000   je 0x395a
0x00002aad      488b442448     mov rax, qword [rsp + 0x48]
0x00002ab2      488b6c2408     mov rbp, qword [rsp + 8]
0x00002ab7      448b25529520.  mov r12d, dword [obj.eolchar]           ; [0x20c010:4]=-1
0x00002abe      4801c5         add rbp, rax
0x00002ac1      4989c6         mov r14, rax
0x00002ac4      4889c1         mov rcx, rax
0x00002ac7      44886500       mov byte [rbp], r12b
0x00002acb      0f1f440000     nop dword [rax + rax]
0x00002ad0      4889ea         mov rdx, rbp
0x00002ad3      4489e6         mov esi, r12d
0x00002ad6      4889cf         mov rdi, rcx
0x00002ad9      4829ca         sub rdx, rcx
0x00002adc      4883c201       add rdx, 1
0x00002ae0      e86bf2ffff     call sym.imp.memchr
0x00002ae5      4839c5         cmp rbp, rax
0x00002ae8      0f8472050000   je 0x3060
0x00002aee      4883c301       add rbx, 1
0x00002af2      488d4801       lea rcx, [rax + 1]
0x00002af6      4c39fb         cmp rbx, r15
0x00002af9      72d5           jb 0x2ad0
0x00002afb      4889ca         mov rdx, rcx
0x00002afe      410fb6fd       movzx edi, r13b
0x00002b02      4c89f6         mov rsi, r14
0x00002b05      4c29f2         sub rdx, r14
0x00002b08      48890c24       mov qword [rsp], rcx
0x00002b0c      31db           xor ebx, ebx
0x00002b0e      e86d200000     call sym.cwrite
0x00002b13      488b0c24       mov rcx, qword [rsp]
0x00002b17      448b25f29420.  mov r12d, dword [obj.eolchar]           ; [0x20c010:4]=-1
0x00002b1e      41bd01000000   mov r13d, 1
0x00002b24      4989ce         mov r14, rcx
0x00002b27      eba7           jmp 0x2ad0
0x00002b29      c644241000     mov byte [rsp + 0x10], 0
0x00002b2e      48c744241800.  mov qword [rsp + 0x18], 0
0x00002b37      4531e4         xor r12d, r12d
0x00002b3a      48c744240800.  mov qword [rsp + 8], 0
0x00002b43      4531ed         xor r13d, r13d
0x00002b46      662e0f1f8400.  nop word cs:[rax + rax]
0x00002b50      488b542440     mov rdx, qword [rsp + 0x40]
0x00002b55      488b742448     mov rsi, qword [rsp + 0x48]
0x00002b5a      31ff           xor edi, edi
0x00002b5c      e8df470000     call sym.safe_read
0x00002b61      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002b65      4889c5         mov rbp, rax
0x00002b68      0f844b0e0000   je 0x39b9
0x00002b6e      4885c0         test rax, rax
0x00002b71      0f843b050000   je 0x30b2
0x00002b77      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00002b7c      eb71           jmp 0x2bef
0x00002b7e      6690           nop
0x00002b80      4889ca         mov rdx, rcx
0x00002b83      4889df         mov rdi, rbx
0x00002b86      4c8d740bff     lea r14, [rbx + rcx - 1]
0x00002b8b      e820f3ffff     call sym.imp.memrchr
0x00002b90      4d85e4         test r12, r12
0x00002b93      4989c0         mov r8, rax
0x00002b96      0f848c000000   je 0x2c28
0x00002b9c      4d85ed         test r13, r13
0x00002b9f      400f94c7       sete dil
0x00002ba3      4d85c0         test r8, r8
0x00002ba6      0f853c040000   jne 0x2fe8
0x00002bac      4084ff         test dil, dil
0x00002baf      0f8533040000   jne 0x2fe8
0x00002bb5      807c241000     cmp byte [rsp + 0x10], 0
0x00002bba      0f85a9000000   jne 0x2c69
0x00002bc0      31ff           xor edi, edi
0x00002bc2      4d85ed         test r13, r13
0x00002bc5      400f94c7       sete dil
0x00002bc9      4d85f6         test r14, r14
0x00002bcc      0f846e040000   je 0x3040
0x00002bd2      4889de         mov rsi, rbx
0x00002bd5      4c89fa         mov rdx, r15
0x00002bd8      4c29fd         sub rbp, r15
0x00002bdb      4c01fb         add rbx, r15
0x00002bde      4531ed         xor r13d, r13d
0x00002be1      e89a1f0000     call sym.cwrite
0x00002be6      4885ed         test rbp, rbp
0x00002be9      0f8461ffffff   je 0x2b50
0x00002bef      488b0c24       mov rcx, qword [rsp]
0x00002bf3      8b3517942000   mov esi, dword [obj.eolchar]            ; [0x20c010:4]=-1
0x00002bf9      4c29e9         sub rcx, r13
0x00002bfc      4c29e1         sub rcx, r12
0x00002bff      4839cd         cmp rbp, rcx
0x00002c02      4989cf         mov r15, rcx
0x00002c05      0f8375ffffff   jae 0x2b80
0x00002c0b      4889ea         mov rdx, rbp
0x00002c0e      4889df         mov rdi, rbx
0x00002c11      4531f6         xor r14d, r14d
0x00002c14      e897f2ffff     call sym.imp.memrchr
0x00002c19      4531ff         xor r15d, r15d
0x00002c1c      4d85e4         test r12, r12
0x00002c1f      4989c0         mov r8, rax
0x00002c22      0f8574ffffff   jne 0x2b9c
0x00002c28      4d85c0         test r8, r8
0x00002c2b      0f8427040000   je 0x3058
0x00002c31      4929d8         sub r8, rbx
0x00002c34      31ff           xor edi, edi
0x00002c36      4d85ed         test r13, r13
0x00002c39      4d8d6001       lea r12, [r8 + 1]
0x00002c3d      400f94c7       sete dil
0x00002c41      4889de         mov rsi, rbx
0x00002c44      4c89e2         mov rdx, r12
0x00002c47      4d01e5         add r13, r12
0x00002c4a      4c29e5         sub rbp, r12
0x00002c4d      e82e1f0000     call sym.cwrite
0x00002c52      4c01e3         add rbx, r12
0x00002c55      4d85f6         test r14, r14
0x00002c58      0f8462030000   je 0x2fc0
0x00002c5e      4d29e7         sub r15, r12
0x00002c61      c644241001     mov byte [rsp + 0x10], 1
0x00002c66      4531e4         xor r12d, r12d
0x00002c69      4d85f6         test r14, r14
0x00002c6c      0f8456030000   je 0x2fc8
0x00002c72      4d85ff         test r15, r15
0x00002c75      0f844d030000   je 0x2fc8
0x00002c7b      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002c80      4889c8         mov rax, rcx
0x00002c83      4c29e0         sub rax, r12
0x00002c86      4c39f8         cmp rax, r15
0x00002c89      732e           jae 0x2cb9
0x00002c8b      488b742440     mov rsi, qword [rsp + 0x40]
0x00002c90      4889f0         mov rax, rsi
0x00002c93      48f7d0         not rax
0x00002c96      4839c8         cmp rax, rcx
0x00002c99      0f82970c0000   jb 0x3936
0x00002c9f      488b7c2408     mov rdi, qword [rsp + 8]
0x00002ca4      4801f1         add rcx, rsi
0x00002ca7      4889ce         mov rsi, rcx
0x00002caa      48894c2418     mov qword [rsp + 0x18], rcx
0x00002caf      e80c4e0000     call sym.xrealloc
0x00002cb4      4889442408     mov qword [rsp + 8], rax
0x00002cb9      488b442408     mov rax, qword [rsp + 8]
0x00002cbe      4889de         mov rsi, rbx
0x00002cc1      4c89fa         mov rdx, r15
0x00002cc4      4c29fd         sub rbp, r15
0x00002cc7      4c01fb         add rbx, r15
0x00002cca      4a8d3c20       lea rdi, [rax + r12]
0x00002cce      4d01fc         add r12, r15
0x00002cd1      e8faf0ffff     call sym.imp.memcpy
0x00002cd6      0fb67c2410     movzx edi, byte [rsp + 0x10]
0x00002cdb      4d85f6         test r14, r14
0x00002cde      b800000000     mov eax, 0
0x00002ce3      0f45f8         cmovne edi, eax
0x00002ce6      b800000000     mov eax, 0
0x00002ceb      40887c2410     mov byte [rsp + 0x10], dil
0x00002cf0      4c0f45e8       cmovne r13, rax
0x00002cf4      e9edfeffff     jmp 0x2be6
0x00002cf9      488b0424       mov rax, qword [rsp]
0x00002cfd      4839442410     cmp qword [rsp + 0x10], rax
0x00002d02      0f87a00e0000   ja 0x3ba8
0x00002d08      4839442418     cmp qword [rsp + 0x18], rax
0x00002d0d      0f82950e0000   jb 0x3ba8
0x00002d13      488b442418     mov rax, qword [rsp + 0x18]
0x00002d18      31d2           xor edx, edx
0x00002d1a      488b742410     mov rsi, qword [rsp + 0x10]
0x00002d1f      48f73424       div qword [rsp]
0x00002d23      4883fe01       cmp rsi, 1
0x00002d27      4889442408     mov qword [rsp + 8], rax
0x00002d2c      0f861a0a0000   jbe 0x374c
0x00002d32      4c8d66ff       lea r12, [rsi - 1]
0x00002d36      490fafc4       imul rax, r12
0x00002d3a      4889c3         mov rbx, rax
0x00002d3d      4883eb01       sub rbx, 1
0x00002d41      4839dd         cmp rbp, rbx
0x00002d44      4989dd         mov r13, rbx
0x00002d47      0f86a8090000   jbe 0x36f5
0x00002d4d      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00002d52      4829dd         sub rbp, rbx
0x00002d55      4889ea         mov rdx, rbp
0x00002d58      488d341f       lea rsi, [rdi + rbx]
0x00002d5c      e82ff1ffff     call sym.imp.memmove
0x00002d61      48895c2420     mov qword [rsp + 0x20], rbx
0x00002d66      488b442418     mov rax, qword [rsp + 0x18]
0x00002d6b      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00002d70      c644246700     mov byte [rsp + 0x67], 0
0x00002d75      c644245001     mov byte [rsp + 0x50], 1
0x00002d7a      4883e801       sub rax, 1
0x00002d7e      4889442468     mov qword [rsp + 0x68], rax
0x00002d83      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002d88      48397c2418     cmp qword [rsp + 0x18], rdi
0x00002d8d      0f8e430b0000   jle 0x38d6
0x00002d93      4883fdff       cmp rbp, 0xffffffffffffffff
0x00002d97      0f84bf0a0000   je 0x385c
0x00002d9d      4885ed         test rbp, rbp
0x00002da0      0f84300b0000   je 0x38d6
0x00002da6      488b442418     mov rax, qword [rsp + 0x18]
0x00002dab      482b442420     sub rax, qword [rsp + 0x20]
0x00002db0      4c8b442448     mov r8, qword [rsp + 0x48]
0x00002db5      c644246700     mov byte [rsp + 0x67], 0
0x00002dba      4839e8         cmp rax, rbp
0x00002dbd      4d89c6         mov r14, r8
0x00002dc0      480f46e8       cmovbe rbp, rax
0x00002dc4      4901ee         add r14, rbp
0x00002dc7      48896c2438     mov qword [rsp + 0x38], rbp
0x00002dcc      488b2c24       mov rbp, qword [rsp]
0x00002dd0      4d89f7         mov r15, r14
0x00002dd3      4c8b742468     mov r14, qword [rsp + 0x68]
0x00002dd8      4883c8ff       or rax, 0xffffffffffffffff
0x00002ddc      4d39c7         cmp r15, r8
0x00002ddf      0f84e90a0000   je 0x38ce
0x00002de5      4c89e8         mov rax, r13
0x00002de8      482b442420     sub rax, qword [rsp + 0x20]
0x00002ded      488b742438     mov rsi, qword [rsp + 0x38]
0x00002df2      ba00000000     mov edx, 0
0x00002df7      4c89442428     mov qword [rsp + 0x28], r8
0x00002dfc      480f48c2       cmovs rax, rdx
0x00002e00      4839f0         cmp rax, rsi
0x00002e03      480f47c6       cmova rax, rsi
0x00002e07      4829c6         sub rsi, rax
0x00002e0a      498d3c00       lea rdi, [r8 + rax]
0x00002e0e      4889f2         mov rdx, rsi
0x00002e11      8b35f9912000   mov esi, dword [obj.eolchar]            ; [0x20c010:4]=-1
0x00002e17      e834efffff     call sym.imp.memchr
0x00002e1c      4885c0         test rax, rax
0x00002e1f      4c8b442428     mov r8, qword [rsp + 0x28]
0x00002e24      0f8481060000   je 0x34ab
0x00002e2a      4c8d4801       lea r9, [rax + 1]
0x00002e2e      c644243001     mov byte [rsp + 0x30], 1
0x00002e33      4c89c8         mov rax, r9
0x00002e36      4c29c0         sub rax, r8
0x00002e39      4939dc         cmp r12, rbx
0x00002e3c      4889442428     mov qword [rsp + 0x28], rax
0x00002e41      0f8492060000   je 0x34d9
0x00002e47      4885db         test rbx, rbx
0x00002e4a      0f8468060000   je 0x34b8
0x00002e50      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00002e55      48034c2428     add rcx, qword [rsp + 0x28]
0x00002e5a      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002e60      48894c2420     mov qword [rsp + 0x20], rcx
0x00002e65      0f1f00         nop dword [rax]
0x00002e68      4c39e9         cmp rcx, r13
0x00002e6b      7f09           jg 0x2e76
0x00002e6d      4584c0         test r8b, r8b
0x00002e70      0f8421020000   je 0x3097
0x00002e76      4489c0         mov eax, r8d
0x00002e79      83f001         xor eax, 1
0x00002e7c      4d39cf         cmp r15, r9
0x00002e7f      0f94c2         sete dl
0x00002e82      20d0           and al, dl
0x00002e84      0f8509020000   jne 0x3093
0x00002e8a      4983c401       add r12, 1
0x00002e8e      4885db         test rbx, rbx
0x00002e91      0f95c2         setne dl
0x00002e94      4939dc         cmp r12, rbx
0x00002e97      0f97c0         seta al
0x00002e9a      84c2           test dl, al
0x00002e9c      7578           jne 0x2f16
0x00002e9e      4c036c2408     add r13, qword [rsp + 8]
0x00002ea3      4939ec         cmp r12, rbp
0x00002ea6      4d0f44ee       cmove r13, r14
0x00002eaa      4c39e9         cmp rcx, r13
0x00002ead      0f8ed8010000   jle 0x308b
0x00002eb3      4885db         test rbx, rbx
0x00002eb6      75b0           jne 0x2e68
0x00002eb8      31d2           xor edx, edx
0x00002eba      31f6           xor esi, esi
0x00002ebc      bf01000000     mov edi, 1
0x00002ec1      4488442466     mov byte [rsp + 0x66], r8b
0x00002ec6      48894c2458     mov qword [rsp + 0x58], rcx
0x00002ecb      4c894c2450     mov qword [rsp + 0x50], r9
0x00002ed0      e8ab1c0000     call sym.cwrite
0x00002ed5      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00002eda      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00002edf      440fb6442466   movzx r8d, byte [rsp + 0x66]
0x00002ee5      eb81           jmp 0x2e68
0x00002ee7      48837c241000   cmp qword [rsp + 0x10], 0
0x00002eed      0f859c060000   jne 0x358f
0x00002ef3      488b442418     mov rax, qword [rsp + 0x18]
0x00002ef8      4c8b0424       mov r8, qword [rsp]
0x00002efc      31d2           xor edx, edx
0x00002efe      488b742448     mov rsi, qword [rsp + 0x48]
0x00002f03      4889e9         mov rcx, rbp
0x00002f06      49f7f0         div r8
0x00002f09      488b542440     mov rdx, qword [rsp + 0x40]
0x00002f0e      4889c7         mov rdi, rax
0x00002f11      e87a1d0000     call sym.bytes_split
0x00002f16      31ff           xor edi, edi
0x00002f18      e803eeffff     call sym.imp.close
0x00002f1d      85c0           test eax, eax
0x00002f1f      0f85e40b0000   jne 0x3b09
0x00002f25      488b0d8c9420.  mov rcx, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x00002f2c      8b15c6952000   mov edx, dword [obj.filter_pid]         ; [0x20c4f8:4]=0
0x00002f32      31ff           xor edi, edi
0x00002f34      8b35da902000   mov esi, dword [obj.output_desc]        ; [0x20c014:4]=-1
0x00002f3a      e841190000     call sym.closeout
0x00002f3f      31c0           xor eax, eax
0x00002f41      488b8c243801.  mov rcx, qword [rsp + 0x138]
0x00002f49      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002f52      0f85ac0b0000   jne 0x3b04
0x00002f58      4881c4480100.  add rsp, 0x148
0x00002f5f      5b             pop rbx
0x00002f60      5d             pop rbp
0x00002f61      415c           pop r12
0x00002f63      415d           pop r13
0x00002f65      415e           pop r14
0x00002f67      415f           pop r15
0x00002f69      c3             ret
0x00002f6a      e801ecffff     call sym.imp.__errno_location
0x00002f6f      83381d         cmp dword [rax], 0x1d
0x00002f72      7506           jne 0x2f7a
0x00002f74      c70000000000   mov dword [rax], 0
0x00002f7a      488b150f9420.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00002f81      be03000000     mov esi, 3
0x00002f86      31ff           xor edi, edi
0x00002f88      e8c3410000     call sym.quotearg_n_style_colon
0x00002f8d      488d356c6b00.  lea rsi, str.s:_cannot_determine_file_size ; 0x9b00 ; "%s: cannot determine file size"
0x00002f94      ba05000000     mov edx, 5
0x00002f99      31ff           xor edi, edi
0x00002f9b      4889c5         mov rbp, rax
0x00002f9e      e89decffff     call sym.imp.dcgettext
0x00002fa3      4889c3         mov rbx, rax
0x00002fa6      e8c5ebffff     call sym.imp.__errno_location
0x00002fab      8b30           mov esi, dword [rax]
0x00002fad      4889e9         mov rcx, rbp
0x00002fb0      4889da         mov rdx, rbx
0x00002fb3      bf01000000     mov edi, 1
0x00002fb8      31c0           xor eax, eax
0x00002fba      e8e1eeffff     call sym.imp.error
0x00002fbf      90             nop
0x00002fc0      4531e4         xor r12d, r12d
0x00002fc3      c644241001     mov byte [rsp + 0x10], 1
0x00002fc8      4d85f6         test r14, r14
0x00002fcb      0f8505fdffff   jne 0x2cd6
0x00002fd1      4885ed         test rbp, rbp
0x00002fd4      0f84fcfcffff   je 0x2cd6
0x00002fda      4989ef         mov r15, rbp
0x00002fdd      e999fcffff     jmp 0x2c7b
0x00002fe2      660f1f440000   nop word [rax + rax]
0x00002fe8      488b742408     mov rsi, qword [rsp + 8]
0x00002fed      400fb6ff       movzx edi, dil
0x00002ff1      4c89e2         mov rdx, r12
0x00002ff4      4c89442420     mov qword [rsp + 0x20], r8
0x00002ff9      4d01e5         add r13, r12
0x00002ffc      e87f1b0000     call sym.cwrite
0x00003001      488b442440     mov rax, qword [rsp + 0x40]
0x00003006      4c8b442420     mov r8, qword [rsp + 0x20]
0x0000300b      4c39e0         cmp rax, r12
0x0000300e      4889442418     mov qword [rsp + 0x18], rax
0x00003013      0f830ffcffff   jae 0x2c28
0x00003019      488b7c2408     mov rdi, qword [rsp + 8]
0x0000301e      4989c4         mov r12, rax
0x00003021      4889c6         mov rsi, rax
0x00003024      e8974a0000     call sym.xrealloc
0x00003029      4c89642418     mov qword [rsp + 0x18], r12
0x0000302e      4889442408     mov qword [rsp + 8], rax
0x00003033      4c8b442420     mov r8, qword [rsp + 0x20]
0x00003038      e9ebfbffff     jmp 0x2c28
0x0000303d      0f1f00         nop dword [rax]
0x00003040      4889ea         mov rdx, rbp
0x00003043      4889de         mov rsi, rbx
0x00003046      4901ed         add r13, rbp
0x00003049      e8321b0000     call sym.cwrite
0x0000304e      e9fdfaffff     jmp 0x2b50
0x00003053      0f1f440000     nop dword [rax + rax]
0x00003058      4531e4         xor r12d, r12d
0x0000305b      e955fbffff     jmp 0x2bb5
0x00003060      4c39f5         cmp rbp, r14
0x00003063      7415           je 0x307a
0x00003065      4889ea         mov rdx, rbp
0x00003068      410fb6fd       movzx edi, r13b
0x0000306c      4c89f6         mov rsi, r14
0x0000306f      4c29f2         sub rdx, r14
0x00003072      4531ed         xor r13d, r13d
0x00003075      e8061b0000     call sym.cwrite
0x0000307a      48837c240800   cmp qword [rsp + 8], 0
0x00003080      0f8507faffff   jne 0x2a8d
0x00003086      e98bfeffff     jmp 0x2f16
0x0000308b      4531c0         xor r8d, r8d
0x0000308e      e9d5fdffff     jmp 0x2e68
0x00003093      88442467       mov byte [rsp + 0x67], al
0x00003097      0fb6442430     movzx eax, byte [rsp + 0x30]
0x0000309c      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000030a1      4d89c8         mov r8, r9
0x000030a4      48294c2438     sub qword [rsp + 0x38], rcx
0x000030a9      88442450       mov byte [rsp + 0x50], al
0x000030ad      e926fdffff     jmp 0x2dd8
0x000030b2      4d85e4         test r12, r12
0x000030b5      0f851f060000   jne 0x36da
0x000030bb      488b7c2408     mov rdi, qword [rsp + 8]
0x000030c0      e88beaffff     call sym.imp.free
0x000030c5      e94cfeffff     jmp 0x2f16
0x000030ca      48837c241000   cmp qword [rsp + 0x10], 0
0x000030d0      7578           jne 0x314a
0x000030d2      ba20000000     mov edx, 0x20                           ; "@"
0x000030d7      31c9           xor ecx, ecx
0x000030d9      4889d0         mov rax, rdx
0x000030dc      48f72424       mul qword [rsp]
0x000030e0      0f80140b0000   jo 0x3bfa
0x000030e6      4885c0         test rax, rax
0x000030e9      0f8847080000   js 0x3936
0x000030ef      4885c9         test rcx, rcx
0x000030f2      0f853e080000   jne 0x3936
0x000030f8      4c8b2424       mov r12, qword [rsp]
0x000030fc      31ed           xor ebp, ebp
0x000030fe      4c89e7         mov rdi, r12
0x00003101      48c1e705       shl rdi, 5
0x00003105      e856490000     call sym.xmalloc
0x0000310a      4889442430     mov qword [rsp + 0x30], rax
0x0000310f      4889c3         mov rbx, rax
0x00003112      e8090d0000     call sym.next_file_name
0x00003117      488b3d9a9220.  mov rdi, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x0000311e      4883c501       add rbp, 1
0x00003122      4883c320       add rbx, 0x20                           ; "@"
0x00003126      e8654b0000     call sym.xstrdup
0x0000312b      c743e8ffffff.  mov dword [rbx - 0x18], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00003132      488943e0       mov qword [rbx - 0x20], rax
0x00003136      48c743f00000.  mov qword [rbx - 0x10], 0
0x0000313e      c743f8000000.  mov dword [rbx - 8], 0
0x00003145      4c39e5         cmp rbp, r12
0x00003148      75c8           jne 0x3112
0x0000314a      48c744240801.  mov qword [rsp + 8], 1
0x00003153      48c744241800.  mov qword [rsp + 0x18], 0
0x0000315c      c644243800     mov byte [rsp + 0x38], 0
0x00003161      c644242800     mov byte [rsp + 0x28], 0
0x00003166      c644245000     mov byte [rsp + 0x50], 0
0x0000316b      488b542440     mov rdx, qword [rsp + 0x40]
0x00003170      488b742448     mov rsi, qword [rsp + 0x48]
0x00003175      31ff           xor edi, edi
0x00003177      e8c4410000     call sym.safe_read
0x0000317c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003180      0f84410a0000   je 0x3bc7
0x00003186      4885c0         test rax, rax
0x00003189      0f841e070000   je 0x38ad
0x0000318f      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00003194      488d2c07       lea rbp, [rdi + rax]
0x00003198      4839ef         cmp rdi, rbp
0x0000319b      74ce           je 0x316b
0x0000319d      4989fd         mov r13, rdi
0x000031a0      eb3a           jmp 0x31dc
0x000031a2      660f1f440000   nop word [rax + rax]
0x000031a8      4839442408     cmp qword [rsp + 8], rax
0x000031ad      0f844d010000   je 0x3300
0x000031b3      4584ff         test r15b, r15b
0x000031b6      741c           je 0x31d4
0x000031b8      488b542408     mov rdx, qword [rsp + 8]
0x000031bd      483b1424       cmp rdx, qword [rsp]
0x000031c1      41bd01000000   mov r13d, 1
0x000031c7      488d4201       lea rax, [rdx + 1]
0x000031cb      4c0f45e8       cmovne r13, rax
0x000031cf      4c896c2408     mov qword [rsp + 8], r13
0x000031d4      4c39e5         cmp rbp, r12
0x000031d7      4d89e5         mov r13, r12
0x000031da      748f           je 0x316b
0x000031dc      4889eb         mov rbx, rbp
0x000031df      8b352b8e2000   mov esi, dword [obj.eolchar]            ; [0x20c010:4]=-1
0x000031e5      4c89ef         mov rdi, r13
0x000031e8      4c29eb         sub rbx, r13
0x000031eb      4889da         mov rdx, rbx
0x000031ee      e85debffff     call sym.imp.memchr
0x000031f3      4885c0         test rax, rax
0x000031f6      0f84f4000000   je 0x32f0
0x000031fc      4c8d6001       lea r12, [rax + 1]
0x00003200      41bf01000000   mov r15d, 1
0x00003206      4c89e3         mov rbx, r12
0x00003209      4c29eb         sub rbx, r13
0x0000320c      488b442410     mov rax, qword [rsp + 0x10]
0x00003211      4885c0         test rax, rax
0x00003214      7592           jne 0x31a8
0x00003216      4c8b742418     mov r14, qword [rsp + 0x18]
0x0000321b      488b1424       mov rdx, qword [rsp]
0x0000321f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003224      4c89f6         mov rsi, r14
0x00003227      49c1e605       shl r14, 5
0x0000322b      e850140000     call sym.ofile_open
0x00003230      4c03742430     add r14, qword [rsp + 0x30]
0x00003235      08442438       or byte [rsp + 0x38], al
0x00003239      e832e9ffff     call sym.imp.__errno_location
0x0000323e      803d9b902000.  cmp byte [obj.unbuffered], 0            ; [0x20c2e0:1]=0
0x00003245      4889442420     mov qword [rsp + 0x20], rax
0x0000324a      0f8590010000   jne 0x33e0
0x00003250      498b4e10       mov rcx, qword [r14 + 0x10]
0x00003254      ba01000000     mov edx, 1
0x00003259      4889de         mov rsi, rbx
0x0000325c      4c89ef         mov rdi, r13
0x0000325f      e8dcebffff     call sym.imp.fwrite_unlocked
0x00003264      4883f801       cmp rax, 1
0x00003268      488b442420     mov rax, qword [rsp + 0x20]
0x0000326d      0f85fd000000   jne 0x3370
0x00003273      833820         cmp dword [rax], 0x20
0x00003276      0f94c0         sete al
0x00003279      48833d7f9220.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x00003281      0f95c2         setne dl
0x00003284      21d0           and eax, edx
0x00003286      ba01000000     mov edx, 1
0x0000328b      84c0           test al, al
0x0000328d      0fb6442428     movzx eax, byte [rsp + 0x28]
0x00003292      0f44c2         cmove eax, edx
0x00003295      88442428       mov byte [rsp + 0x28], al
0x00003299      807c243800     cmp byte [rsp + 0x38], 0
0x0000329e      0f850c010000   jne 0x33b0
0x000032a4      4584ff         test r15b, r15b
0x000032a7      0f8427ffffff   je 0x31d4
0x000032ad      488344241801   add qword [rsp + 0x18], 1
0x000032b3      488b442418     mov rax, qword [rsp + 0x18]
0x000032b8      483b0424       cmp rax, qword [rsp]
0x000032bc      0f8512ffffff   jne 0x31d4
0x000032c2      807c242800     cmp byte [rsp + 0x28], 0
0x000032c7      0f8464020000   je 0x3531
0x000032cd      0fb6442428     movzx eax, byte [rsp + 0x28]
0x000032d2      48c744241800.  mov qword [rsp + 0x18], 0
0x000032db      c644242800     mov byte [rsp + 0x28], 0
0x000032e0      88442450       mov byte [rsp + 0x50], al
0x000032e4      e9ebfeffff     jmp 0x31d4
0x000032e9      0f1f80000000.  nop dword [rax]
0x000032f0      4989ec         mov r12, rbp
0x000032f3      4531ff         xor r15d, r15d
0x000032f6      e911ffffff     jmp 0x320c
0x000032fb      0f1f440000     nop dword [rax + rax]
0x00003300      803dd98f2000.  cmp byte [obj.unbuffered], 0            ; [0x20c2e0:1]=0
0x00003307      0f8533010000   jne 0x3440
0x0000330d      488b0d548f20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00003314      ba01000000     mov edx, 1
0x00003319      4889de         mov rsi, rbx
0x0000331c      4c89ef         mov rdi, r13
0x0000331f      e81cebffff     call sym.imp.fwrite_unlocked
0x00003324      4883f801       cmp rax, 1
0x00003328      0f8485feffff   je 0x31b3
0x0000332e      488b3d338f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00003335      e8b6e8ffff     call sym.imp.clearerr_unlocked
0x0000333a      488d35fa5a00.  lea rsi, str.write_error                ; 0x8e3b ; "write error"
0x00003341      ba05000000     mov edx, 5
0x00003346      31ff           xor edi, edi
0x00003348      e8f3e8ffff     call sym.imp.dcgettext
0x0000334d      4889c3         mov rbx, rax
0x00003350      e81be8ffff     call sym.imp.__errno_location
0x00003355      8b30           mov esi, dword [rax]
0x00003357      488d15905a00.  lea rdx, [0x00008dee]                   ; "%s"
0x0000335e      4889d9         mov rcx, rbx
0x00003361      bf01000000     mov edi, 1
0x00003366      31c0           xor eax, eax
0x00003368      e833ebffff     call sym.imp.error
0x0000336d      0f1f00         nop dword [rax]
0x00003370      833820         cmp dword [rax], 0x20
0x00003373      750e           jne 0x3383
0x00003375      48833d839120.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x0000337d      0f8516ffffff   jne 0x3299
0x00003383      498b16         mov rdx, qword [r14]
0x00003386      be03000000     mov esi, 3
0x0000338b      31ff           xor edi, edi
0x0000338d      e8be3d0000     call sym.quotearg_n_style_colon
0x00003392      4889c1         mov rcx, rax
0x00003395      488b442420     mov rax, qword [rsp + 0x20]
0x0000339a      488d154d5a00.  lea rdx, [0x00008dee]                   ; "%s"
0x000033a1      bf01000000     mov edi, 1
0x000033a6      8b30           mov esi, dword [rax]
0x000033a8      31c0           xor eax, eax
0x000033aa      e8f1eaffff     call sym.imp.error
0x000033af      90             nop
0x000033b0      498b7e10       mov rdi, qword [r14 + 0x10]
0x000033b4      e8874e0000     call sym.rpl_fclose
0x000033b9      85c0           test eax, eax
0x000033bb      0f85cc050000   jne 0x398d
0x000033c1      49c746100000.  mov qword [r14 + 0x10], 0
0x000033c9      41c74608feff.  mov dword [r14 + 8], 0xfffffffe         ; [0xfffffffe:4]=-1 ; 4294967294
0x000033d1      e9cefeffff     jmp 0x32a4
0x000033d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000033e0      418b7e08       mov edi, dword [r14 + 8]
0x000033e4      4889da         mov rdx, rbx
0x000033e7      4c89ee         mov rsi, r13
0x000033ea      e851210000     call sym.full_write
0x000033ef      4839d8         cmp rax, rbx
0x000033f2      488b442420     mov rax, qword [rsp + 0x20]
0x000033f7      0f8476feffff   je 0x3273
0x000033fd      833820         cmp dword [rax], 0x20
0x00003400      750e           jne 0x3410
0x00003402      48833df69020.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x0000340a      0f8589feffff   jne 0x3299
0x00003410      498b16         mov rdx, qword [r14]
0x00003413      be03000000     mov esi, 3
0x00003418      31ff           xor edi, edi
0x0000341a      e8313d0000     call sym.quotearg_n_style_colon
0x0000341f      4889c1         mov rcx, rax
0x00003422      488b442420     mov rax, qword [rsp + 0x20]
0x00003427      488d15c05900.  lea rdx, [0x00008dee]                   ; "%s"
0x0000342e      bf01000000     mov edi, 1
0x00003433      8b30           mov esi, dword [rax]
0x00003435      31c0           xor eax, eax
0x00003437      e864eaffff     call sym.imp.error
0x0000343c      0f1f4000       nop dword [rax]
0x00003440      4889da         mov rdx, rbx
0x00003443      4c89ee         mov rsi, r13
0x00003446      bf01000000     mov edi, 1
0x0000344b      e8f0200000     call sym.full_write
0x00003450      4839d8         cmp rax, rbx
0x00003453      0f845afdffff   je 0x31b3
0x00003459      488d35db5900.  lea rsi, str.write_error                ; 0x8e3b ; "write error"
0x00003460      ba05000000     mov edx, 5
0x00003465      31ff           xor edi, edi
0x00003467      e8d4e7ffff     call sym.imp.dcgettext
0x0000346c      4889c3         mov rbx, rax
0x0000346f      e8fce6ffff     call sym.imp.__errno_location
0x00003474      8b30           mov esi, dword [rax]
0x00003476      488d15715900.  lea rdx, [0x00008dee]                   ; "%s"
0x0000347d      4889d9         mov rcx, rbx
0x00003480      bf01000000     mov edi, 1
0x00003485      31c0           xor eax, eax
0x00003487      e814eaffff     call sym.imp.error
0x0000348c      488b542440     mov rdx, qword [rsp + 0x40]
0x00003491      488b742448     mov rsi, qword [rsp + 0x48]
0x00003496      4531c0         xor r8d, r8d
0x00003499      488b3c24       mov rdi, qword [rsp]
0x0000349d      4883c9ff       or rcx, 0xffffffffffffffff
0x000034a1      e8ea170000     call sym.bytes_split
0x000034a6      e96bfaffff     jmp 0x2f16
0x000034ab      4d89f9         mov r9, r15
0x000034ae      c644243000     mov byte [rsp + 0x30], 0
0x000034b3      e97bf9ffff     jmp 0x2e33
0x000034b8      0fb67c2450     movzx edi, byte [rsp + 0x50]
0x000034bd      488b542428     mov rdx, qword [rsp + 0x28]
0x000034c2      4c89c6         mov rsi, r8
0x000034c5      4c894c2458     mov qword [rsp + 0x58], r9
0x000034ca      e8b1160000     call sym.cwrite
0x000034cf      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x000034d4      e977f9ffff     jmp 0x2e50
0x000034d9      4889c2         mov rdx, rax
0x000034dc      4c89c6         mov rsi, r8
0x000034df      bf01000000     mov edi, 1
0x000034e4      4c894c2450     mov qword [rsp + 0x50], r9
0x000034e9      e852200000     call sym.full_write
0x000034ee      4839442428     cmp qword [rsp + 0x28], rax
0x000034f3      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x000034f8      0f8452f9ffff   je 0x2e50
0x000034fe      488d35365900.  lea rsi, str.write_error                ; 0x8e3b ; "write error"
0x00003505      ba05000000     mov edx, 5
0x0000350a      31ff           xor edi, edi
0x0000350c      e82fe7ffff     call sym.imp.dcgettext
0x00003511      4889c3         mov rbx, rax
0x00003514      e857e6ffff     call sym.imp.__errno_location
0x00003519      8b30           mov esi, dword [rax]
0x0000351b      488d15cc5800.  lea rdx, [0x00008dee]                   ; "%s"
0x00003522      4889d9         mov rcx, rbx
0x00003525      bf01000000     mov edi, 1
0x0000352a      31c0           xor eax, eax
0x0000352c      e86fe9ffff     call sym.imp.error
0x00003531      48631c24       movsxd rbx, dword [rsp]
0x00003535      488b6c2430     mov rbp, qword [rsp + 0x30]
0x0000353a      4c8b2c24       mov r13, qword [rsp]
0x0000353e      4531e4         xor r12d, r12d
0x00003541      4c39e3         cmp rbx, r12
0x00003544      7719           ja 0x355f
0x00003546      803d948d2000.  cmp byte [obj.elide_empty_files], 0     ; [0x20c2e1:1]=0
0x0000354d      7510           jne 0x355f
0x0000354f      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00003554      4c89ea         mov rdx, r13
0x00003557      4c89e6         mov rsi, r12
0x0000355a      e821110000     call sym.ofile_open
0x0000355f      8b7508         mov esi, dword [rbp + 8]
0x00003562      85f6           test esi, esi
0x00003564      7810           js 0x3576
0x00003566      8b5518         mov edx, dword [rbp + 0x18]
0x00003569      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000356d      488b4d00       mov rcx, qword [rbp]
0x00003571      e80a130000     call sym.closeout
0x00003576      4983c401       add r12, 1
0x0000357a      c74508feffff.  mov dword [rbp + 8], 0xfffffffe         ; 4294967294
0x00003581      4883c520       add rbp, 0x20                           ; "@"
0x00003585      4d39ec         cmp r12, r13
0x00003588      75b7           jne 0x3541
0x0000358a      e987f9ffff     jmp 0x2f16
0x0000358f      488b0424       mov rax, qword [rsp]
0x00003593      4839442410     cmp qword [rsp + 0x10], rax
0x00003598      0f879d030000   ja 0x393b
0x0000359e      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000035a3      4839c8         cmp rax, rcx
0x000035a6      0f878f030000   ja 0x393b
0x000035ac      488b3c24       mov rdi, qword [rsp]
0x000035b0      488b442418     mov rax, qword [rsp + 0x18]
0x000035b5      31d2           xor edx, edx
0x000035b7      488b4c2410     mov rcx, qword [rsp + 0x10]
0x000035bc      48f7f7         div rdi
0x000035bf      488d71ff       lea rsi, [rcx - 1]
0x000035c3      480faff0       imul rsi, rax
0x000035c7      4839f9         cmp rcx, rdi
0x000035ca      4889f3         mov rbx, rsi
0x000035cd      7409           je 0x35d8
0x000035cf      480fafc1       imul rax, rcx
0x000035d3      4889442418     mov qword [rsp + 0x18], rax
0x000035d8      4839f5         cmp rbp, rsi
0x000035db      0f8688010000   jbe 0x3769
0x000035e1      488b7c2448     mov rdi, qword [rsp + 0x48]
0x000035e6      4829f5         sub rbp, rsi
0x000035e9      4889ea         mov rdx, rbp
0x000035ec      4801fe         add rsi, rdi
0x000035ef      e89ce8ffff     call sym.imp.memmove
0x000035f4      4c8b742418     mov r14, qword [rsp + 0x18]
0x000035f9      4c8b7c2448     mov r15, qword [rsp + 0x48]
0x000035fe      4983ccff       or r12, 0xffffffffffffffff
0x00003602      4889e8         mov rax, rbp
0x00003605      4939de         cmp r14, rbx
0x00003608      0f8e08f9ffff   jle 0x2f16
0x0000360e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003612      747a           je 0x368e
0x00003614      4885c0         test rax, rax
0x00003617      0f84f9f8ffff   je 0x2f16
0x0000361d      4c89f5         mov rbp, r14
0x00003620      4c89fe         mov rsi, r15
0x00003623      bf01000000     mov edi, 1
0x00003628      4829dd         sub rbp, rbx
0x0000362b      4839c5         cmp rbp, rax
0x0000362e      480f47e8       cmova rbp, rax
0x00003632      4889ea         mov rdx, rbp
0x00003635      e8061f0000     call sym.full_write
0x0000363a      4839c5         cmp rbp, rax
0x0000363d      7444           je 0x3683
0x0000363f      e82ce5ffff     call sym.imp.__errno_location
0x00003644      48833db48e20.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x0000364c      7405           je 0x3653
0x0000364e      833820         cmp dword [rax], 0x20
0x00003651      7430           je 0x3683
0x00003653      488d15b86500.  lea rdx, [0x00009c12]                   ; "-"
0x0000365a      4989c5         mov r13, rax
0x0000365d      be03000000     mov esi, 3
0x00003662      31ff           xor edi, edi
0x00003664      e8e73a0000     call sym.quotearg_n_style_colon
0x00003669      418b7500       mov esi, dword [r13]
0x0000366d      488d157a5700.  lea rdx, [0x00008dee]                   ; "%s"
0x00003674      4889c1         mov rcx, rax
0x00003677      bf01000000     mov edi, 1
0x0000367c      31c0           xor eax, eax
0x0000367e      e81de8ffff     call sym.imp.error
0x00003683      4801eb         add rbx, rbp
0x00003686      4c89e0         mov rax, r12
0x00003689      e977ffffff     jmp 0x3605
0x0000368e      488b542440     mov rdx, qword [rsp + 0x40]
0x00003693      31ff           xor edi, edi
0x00003695      4c89fe         mov rsi, r15
0x00003698      e8a33c0000     call sym.safe_read
0x0000369d      4883f8ff       cmp rax, 0xffffffffffffffff
0x000036a1      0f856dffffff   jne 0x3614
0x000036a7      488b15e28c20.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x000036ae      be03000000     mov esi, 3
0x000036b3      31ff           xor edi, edi
0x000036b5      e8963a0000     call sym.quotearg_n_style_colon
0x000036ba      4889c3         mov rbx, rax
0x000036bd      e8aee4ffff     call sym.imp.__errno_location
0x000036c2      8b30           mov esi, dword [rax]
0x000036c4      488d15235700.  lea rdx, [0x00008dee]                   ; "%s"
0x000036cb      4889d9         mov rcx, rbx
0x000036ce      bf01000000     mov edi, 1
0x000036d3      31c0           xor eax, eax
0x000036d5      e8c6e7ffff     call sym.imp.error
0x000036da      488b742408     mov rsi, qword [rsp + 8]
0x000036df      31ff           xor edi, edi
0x000036e1      4d85ed         test r13, r13
0x000036e4      400f94c7       sete dil
0x000036e8      4c89e2         mov rdx, r12
0x000036eb      e890140000     call sym.cwrite
0x000036f0      e9c6f9ffff     jmp 0x30bb
0x000036f5      4889de         mov rsi, rbx
0x000036f8      31ff           xor edi, edi
0x000036fa      ba01000000     mov edx, 1
0x000036ff      4829ee         sub rsi, rbp
0x00003702      4883cdff       or rbp, 0xffffffffffffffff
0x00003706      e8d5e5ffff     call sym.imp.lseek
0x0000370b      4885c0         test rax, rax
0x0000370e      48895c2420     mov qword [rsp + 0x20], rbx
0x00003713      0f894df6ffff   jns 0x2d66
0x00003719      488b15708c20.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003720      be03000000     mov esi, 3
0x00003725      31ff           xor edi, edi
0x00003727      e8243a0000     call sym.quotearg_n_style_colon
0x0000372c      4889c3         mov rbx, rax
0x0000372f      e83ce4ffff     call sym.imp.__errno_location
0x00003734      8b30           mov esi, dword [rax]
0x00003736      488d15b15600.  lea rdx, [0x00008dee]                   ; "%s"
0x0000373d      4889d9         mov rcx, rbx
0x00003740      bf01000000     mov edi, 1
0x00003745      31c0           xor eax, eax
0x00003747      e854e7ffff     call sym.imp.error
0x0000374c      488b442408     mov rax, qword [rsp + 8]
0x00003751      48c744242000.  mov qword [rsp + 0x20], 0
0x0000375a      41bc01000000   mov r12d, 1
0x00003760      4c8d68ff       lea r13, [rax - 1]
0x00003764      e9fdf5ffff     jmp 0x2d66
0x00003769      31ff           xor edi, edi
0x0000376b      ba01000000     mov edx, 1
0x00003770      4883cdff       or rbp, 0xffffffffffffffff
0x00003774      e867e5ffff     call sym.imp.lseek
0x00003779      4885c0         test rax, rax
0x0000377c      0f8972feffff   jns 0x35f4
0x00003782      488b15078c20.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003789      be03000000     mov esi, 3
0x0000378e      31ff           xor edi, edi
0x00003790      e8bb390000     call sym.quotearg_n_style_colon
0x00003795      4889c3         mov rbx, rax
0x00003798      e8d3e3ffff     call sym.imp.__errno_location
0x0000379d      8b30           mov esi, dword [rax]
0x0000379f      488d15485600.  lea rdx, [0x00008dee]                   ; "%s"
0x000037a6      4889d9         mov rcx, rbx
0x000037a9      bf01000000     mov edi, 1
0x000037ae      31c0           xor eax, eax
0x000037b0      e8ebe6ffff     call sym.imp.error
0x000037b5      4c8b35748b20.  mov r14, qword [0x0020c330]             ; [0x20c330:8]=0
0x000037bc      4d85f6         test r14, r14
0x000037bf      7471           je 0x3832
0x000037c1      8b05518b2000   mov eax, dword [0x0020c318]             ; [0x20c318:4]=0
0x000037c7      4801eb         add rbx, rbp
0x000037ca      2500d00000     and eax, 0xd000
0x000037cf      3d00800000     cmp eax, 0x8000
0x000037d4      7505           jne 0x37db
0x000037d6      4939de         cmp r14, rbx
0x000037d9      7d3b           jge 0x3816
0x000037db      31f6           xor esi, esi
0x000037dd      31ff           xor edi, edi
0x000037df      ba02000000     mov edx, 2
0x000037e4      e8f7e4ffff     call sym.imp.lseek
0x000037e9      4885c0         test rax, rax
0x000037ec      4989c6         mov r14, rax
0x000037ef      0f8885f7ffff   js 0x2f7a
0x000037f5      4839c3         cmp rbx, rax
0x000037f8      741c           je 0x3816
0x000037fa      31d2           xor edx, edx
0x000037fc      31ff           xor edi, edi
0x000037fe      4889de         mov rsi, rbx
0x00003801      e8dae4ffff     call sym.imp.lseek
0x00003806      4885c0         test rax, rax
0x00003809      0f886bf7ffff   js 0x2f7a
0x0000380f      4939de         cmp r14, rbx
0x00003812      4c0f4cf3       cmovl r14, rbx
0x00003816      4929de         sub r14, rbx
0x00003819      48b8ffffffff.  movabs rax, 0x7fffffffffffffff          ; 9223372036854775807
0x00003823      4d89f5         mov r13, r14
0x00003826      4901ed         add r13, rbp
0x00003829      4939c5         cmp r13, rax
0x0000382c      0f8517f2ffff   jne 0x2a49
0x00003832      e839e3ffff     call sym.imp.__errno_location
0x00003837      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000383d      e938f7ffff     jmp 0x2f7a
0x00003842      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00003847      0f85df000000   jne 0x392c
0x0000384d      31ff           xor edi, edi
0x0000384f      e86c160000     call sym.usage
0x00003854      4801ca         add rdx, rcx
0x00003857      e9d9f0ffff     jmp 0x2935
0x0000385c      488b542440     mov rdx, qword [rsp + 0x40]
0x00003861      488b742448     mov rsi, qword [rsp + 0x48]
0x00003866      31ff           xor edi, edi
0x00003868      e8d33a0000     call sym.safe_read
0x0000386d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003871      4889c5         mov rbp, rax
0x00003874      0f8523f5ffff   jne 0x2d9d
0x0000387a      488b150f8b20.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003881      be03000000     mov esi, 3
0x00003886      31ff           xor edi, edi
0x00003888      e8c3380000     call sym.quotearg_n_style_colon
0x0000388d      4889c3         mov rbx, rax
0x00003890      e8dbe2ffff     call sym.imp.__errno_location
0x00003895      8b30           mov esi, dword [rax]
0x00003897      488d15505500.  lea rdx, [0x00008dee]                   ; "%s"
0x0000389e      4889d9         mov rcx, rbx
0x000038a1      bf01000000     mov edi, 1
0x000038a6      31c0           xor eax, eax
0x000038a8      e8f3e5ffff     call sym.imp.error
0x000038ad      48837c241000   cmp qword [rsp + 0x10], 0
0x000038b3      0f855df6ffff   jne 0x2f16
0x000038b9      807c245000     cmp byte [rsp + 0x50], 0
0x000038be      0f856dfcffff   jne 0x3531
0x000038c4      48635c2418     movsxd rbx, dword [rsp + 0x18]
0x000038c9      e967fcffff     jmp 0x3535
0x000038ce      4889c5         mov rbp, rax
0x000038d1      e9adf4ffff     jmp 0x2d83
0x000038d6      807c246700     cmp byte [rsp + 0x67], 0
0x000038db      7404           je 0x38e1
0x000038dd      4983c401       add r12, 1
0x000038e1      48837c241000   cmp qword [rsp + 0x10], 0
0x000038e7      7417           je 0x3900
0x000038e9      e928f6ffff     jmp 0x2f16
0x000038ee      31d2           xor edx, edx
0x000038f0      31f6           xor esi, esi
0x000038f2      bf01000000     mov edi, 1
0x000038f7      4983c401       add r12, 1
0x000038fb      e880120000     call sym.cwrite
0x00003900      4c3b2424       cmp r12, qword [rsp]
0x00003904      76e8           jbe 0x38ee
0x00003906      e90bf6ffff     jmp 0x2f16
0x0000390b      488d35466100.  lea rsi, str.filter_does_not_process_a_chunk_extracted_to_stdout ; 0x9a58 ; "--filter does not process a chunk extracted to stdout"
0x00003912      ba05000000     mov edx, 5
0x00003917      31ff           xor edi, edi
0x00003919      e822e3ffff     call sym.imp.dcgettext
0x0000391e      31f6           xor esi, esi
0x00003920      4889c2         mov rdx, rax
0x00003923      31ff           xor edi, edi
0x00003925      31c0           xor eax, eax
0x00003927      e874e5ffff     call sym.imp.error
0x0000392c      bf01000000     mov edi, 1
0x00003931      e88a150000     call sym.usage
0x00003936      e875430000     call sym.xalloc_die
0x0000393b      488d0d4e6200.  lea rcx, obj.__PRETTY_FUNCTION__.7285   ; 0x9b90 ; "bytes_chunk_extract"
0x00003942      488d357b5100.  lea rsi, str..._coreutils_8.31_src_split.c ; 0x8ac4 ; "../coreutils-8.31/src/split.c"
0x00003949      488d3dd06100.  lea rdi, str.k____n____k____n____n____file_size ; 0x9b20 ; "k && n && k <= n && n <= file_size"
0x00003950      bae0030000     mov edx, 0x3e0
0x00003955      e896e3ffff     call sym.imp.__assert_fail
0x0000395a      488b152f8a20.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003961      be03000000     mov esi, 3
0x00003966      31ff           xor edi, edi
0x00003968      e8e3370000     call sym.quotearg_n_style_colon
0x0000396d      4889c3         mov rbx, rax
0x00003970      e8fbe1ffff     call sym.imp.__errno_location
0x00003975      8b30           mov esi, dword [rax]
0x00003977      488d15705400.  lea rdx, [0x00008dee]                   ; "%s"
0x0000397e      4889d9         mov rcx, rbx
0x00003981      bf01000000     mov edi, 1
0x00003986      31c0           xor eax, eax
0x00003988      e813e5ffff     call sym.imp.error
0x0000398d      498b16         mov rdx, qword [r14]
0x00003990      be03000000     mov esi, 3
0x00003995      31ff           xor edi, edi
0x00003997      e8b4370000     call sym.quotearg_n_style_colon
0x0000399c      4889c1         mov rcx, rax
0x0000399f      488b442420     mov rax, qword [rsp + 0x20]
0x000039a4      488d15435400.  lea rdx, [0x00008dee]                   ; "%s"
0x000039ab      bf01000000     mov edi, 1
0x000039b0      8b30           mov esi, dword [rax]
0x000039b2      31c0           xor eax, eax
0x000039b4      e8e7e4ffff     call sym.imp.error
0x000039b9      488b15d08920.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x000039c0      be03000000     mov esi, 3
0x000039c5      31ff           xor edi, edi
0x000039c7      e884370000     call sym.quotearg_n_style_colon
0x000039cc      4889c3         mov rbx, rax
0x000039cf      e89ce1ffff     call sym.imp.__errno_location
0x000039d4      8b30           mov esi, dword [rax]
0x000039d6      488d15115400.  lea rdx, [0x00008dee]                   ; "%s"
0x000039dd      4889d9         mov rcx, rbx
0x000039e0      bf01000000     mov edi, 1
0x000039e5      31c0           xor eax, eax
0x000039e7      e8b4e4ffff     call sym.imp.error
0x000039ec      488b159d8920.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x000039f3      be03000000     mov esi, 3
0x000039f8      31ff           xor edi, edi
0x000039fa      e851370000     call sym.quotearg_n_style_colon
0x000039ff      4889c3         mov rbx, rax
0x00003a02      e869e1ffff     call sym.imp.__errno_location
0x00003a07      8b30           mov esi, dword [rax]
0x00003a09      488d15de5300.  lea rdx, [0x00008dee]                   ; "%s"
0x00003a10      4889d9         mov rcx, rbx
0x00003a13      bf01000000     mov edi, 1
0x00003a18      31c0           xor eax, eax
0x00003a1a      e881e4ffff     call sym.imp.error
0x00003a1f      488b356a8920.  mov rsi, qword [obj.infile]             ; [0x20c390:8]=0
0x00003a26      bf04000000     mov edi, 4
0x00003a2b      e820360000     call sym.quotearg_style
0x00003a30      488d35cb5300.  lea rsi, str.cannot_open__s_for_reading ; 0x8e02 ; "cannot open %s for reading"
0x00003a37      ba05000000     mov edx, 5
0x00003a3c      31ff           xor edi, edi
0x00003a3e      4889c5         mov rbp, rax
0x00003a41      e8fae1ffff     call sym.imp.dcgettext
0x00003a46      4889c3         mov rbx, rax
0x00003a49      e822e1ffff     call sym.imp.__errno_location
0x00003a4e      8b30           mov esi, dword [rax]
0x00003a50      4889e9         mov rcx, rbp
0x00003a53      4889da         mov rdx, rbx
0x00003a56      bf01000000     mov edi, 1
0x00003a5b      31c0           xor eax, eax
0x00003a5d      e83ee4ffff     call sym.imp.error
0x00003a62      4898           cdqe
0x00003a64      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00003a68      e8b3380000     call sym.quote
0x00003a6d      488d357d5300.  lea rsi, str.extra_operand__s           ; 0x8df1 ; "extra operand %s"
0x00003a74      4889c3         mov rbx, rax
0x00003a77      ba05000000     mov edx, 5
0x00003a7c      31ff           xor edi, edi
0x00003a7e      e8bde1ffff     call sym.imp.dcgettext
0x00003a83      4889c2         mov rdx, rax
0x00003a86      31ff           xor edi, edi
0x00003a88      4889d9         mov rcx, rbx
0x00003a8b      31f6           xor esi, esi
0x00003a8d      31c0           xor eax, eax
0x00003a8f      e80ce4ffff     call sym.imp.error
0x00003a94      bf01000000     mov edi, 1
0x00003a99      e822140000     call sym.usage
0x00003a9e      4c89ef         mov rdi, r13
0x00003aa1      e87a380000     call sym.quote
0x00003aa6      ba05000000     mov edx, 5
0x00003aab      4889c3         mov rbx, rax
0x00003aae      488d359b5e00.  lea rsi, str.invalid_suffix__s__contains_directory_separator ; 0x9950 ; "invalid suffix %s, contains directory separator"
0x00003ab5      ebc5           jmp 0x3a7c
0x00003ab7      488b3c24       mov rdi, qword [rsp]
0x00003abb      488db4242001.  lea rsi, [rsp + 0x120]
0x00003ac3      e8f81a0000     call sym.umaxtostr
0x00003ac8      4889c7         mov rdi, rax
0x00003acb      e850380000     call sym.quote
0x00003ad0      488d35565200.  lea rsi, str.invalid_number_of_chunks   ; 0x8d2d ; "invalid number of chunks"
0x00003ad7      ba05000000     mov edx, 5
0x00003adc      31ff           xor edi, edi
0x00003ade      4889c3         mov rbx, rax
0x00003ae1      e85ae1ffff     call sym.imp.dcgettext
0x00003ae6      488d15fd5200.  lea rdx, str.s:__s                      ; 0x8dea ; "%s: %s"
0x00003aed      4889c1         mov rcx, rax
0x00003af0      4989d8         mov r8, rbx
0x00003af3      be4b000000     mov esi, 0x4b                           ; 'K'
0x00003af8      bf01000000     mov edi, 1
0x00003afd      31c0           xor eax, eax
0x00003aff      e89ce3ffff     call sym.imp.error
0x00003b04      e867e1ffff     call sym.imp.__stack_chk_fail
0x00003b09      488b15808820.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003b10      be03000000     mov esi, 3
0x00003b15      31ff           xor edi, edi
0x00003b17      e834360000     call sym.quotearg_n_style_colon
0x00003b1c      4889c3         mov rbx, rax
0x00003b1f      e84ce0ffff     call sym.imp.__errno_location
0x00003b24      8b30           mov esi, dword [rax]
0x00003b26      488d15c15200.  lea rdx, [0x00008dee]                   ; "%s"
0x00003b2d      4889d9         mov rcx, rbx
0x00003b30      bf01000000     mov edi, 1
0x00003b35      31c0           xor eax, eax
0x00003b37      e864e3ffff     call sym.imp.error
0x00003b3c      488d354d5f00.  lea rsi, str.the_suffix_length_needs_to_be_at_least__lu ; 0x9a90 ; "the suffix length needs to be at least %lu"
0x00003b43      ba05000000     mov edx, 5
0x00003b48      31ff           xor edi, edi
0x00003b4a      e8f1e0ffff     call sym.imp.dcgettext
0x00003b4f      4c89f1         mov rcx, r14
0x00003b52      4889c2         mov rdx, rax
0x00003b55      31f6           xor esi, esi
0x00003b57      bf01000000     mov edi, 1
0x00003b5c      31c0           xor eax, eax
0x00003b5e      e83de3ffff     call sym.imp.error
0x00003b63      488b3c24       mov rdi, qword [rsp]
0x00003b67      488db4242001.  lea rsi, [rsp + 0x120]
0x00003b6f      44897c2408     mov dword [rsp + 8], r15d
0x00003b74      e8471a0000     call sym.umaxtostr
0x00003b79      488d35505e00.  lea rsi, str.line_count_option___s_c..._is_too_large ; 0x99d0 ; "line count option -%s%c... is too large"
0x00003b80      ba05000000     mov edx, 5
0x00003b85      31ff           xor edi, edi
0x00003b87      4889c3         mov rbx, rax
0x00003b8a      e8b1e0ffff     call sym.imp.dcgettext
0x00003b8f      448b442408     mov r8d, dword [rsp + 8]
0x00003b94      4889c2         mov rdx, rax
0x00003b97      4889d9         mov rcx, rbx
0x00003b9a      31f6           xor esi, esi
0x00003b9c      bf01000000     mov edi, 1
0x00003ba1      31c0           xor eax, eax
0x00003ba3      e8f8e2ffff     call sym.imp.error
0x00003ba8      488d0dc15f00.  lea rcx, obj.__PRETTY_FUNCTION__.7242   ; 0x9b70 ; "lines_chunk_split"
0x00003baf      488d350e4f00.  lea rsi, str..._coreutils_8.31_src_split.c ; 0x8ac4 ; "../coreutils-8.31/src/split.c"
0x00003bb6      488d3d605200.  lea rdi, str.n____k____n____n____file_size ; 0x8e1d ; "n && k <= n && n <= file_size"
0x00003bbd      ba62030000     mov edx, 0x362
0x00003bc2      e829e1ffff     call sym.imp.__assert_fail
0x00003bc7      488b15c28720.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00003bce      be03000000     mov esi, 3
0x00003bd3      31ff           xor edi, edi
0x00003bd5      e876350000     call sym.quotearg_n_style_colon
0x00003bda      4889c3         mov rbx, rax
0x00003bdd      e88edfffff     call sym.imp.__errno_location
0x00003be2      8b30           mov esi, dword [rax]
0x00003be4      488d15035200.  lea rdx, [0x00008dee]                   ; "%s"
0x00003beb      4889d9         mov rcx, rbx
0x00003bee      bf01000000     mov edi, 1
0x00003bf3      31c0           xor eax, eax
0x00003bf5      e8a6e2ffff     call sym.imp.error
0x00003bfa      b901000000     mov ecx, 1
0x00003bff      e9e2f4ffff     jmp 0x30e6
0x00003c04      4c89ef         mov rdi, r13
0x00003c07      44893c24       mov dword [rsp], r15d
0x00003c0b      e810370000     call sym.quote
0x00003c10      448b0424       mov r8d, dword [rsp]
0x00003c14      4889c3         mov rbx, rax
0x00003c17      ba05000000     mov edx, 5
0x00003c1c      488d35055e00.  lea rsi, str.s:_invalid_start_value_for_hexadecimal_suffix ; 0x9a28 ; "%s: invalid start value for hexadecimal suffix"
0x00003c23      4183f864       cmp r8d, 0x64
0x00003c27      0f854ffeffff   jne 0x3a7c
0x00003c2d      488d35c45d00.  lea rsi, str.s:_invalid_start_value_for_numerical_suffix ; 0x99f8 ; "%s: invalid start value for numerical suffix"
0x00003c34      31ff           xor edi, edi
0x00003c36      e805e0ffff     call sym.imp.dcgettext
0x00003c3b      e943feffff     jmp 0x3a83
0x00003c40      488d35145100.  lea rsi, str.empty_record_separator     ; 0x8d5b ; "empty record separator"
0x00003c47      ba05000000     mov edx, 5
0x00003c4c      31ff           xor edi, edi
0x00003c4e      e8eddfffff     call sym.imp.dcgettext
0x00003c53      31f6           xor esi, esi
0x00003c55      4889c2         mov rdx, rax
0x00003c58      bf01000000     mov edi, 1
0x00003c5d      31c0           xor eax, eax
0x00003c5f      e83ce2ffff     call sym.imp.error
0x00003c64      488d3d085100.  lea rdi, [0x00008d73]                   ; "0"
0x00003c6b      e8b0360000     call sym.quote
0x00003c70      488d35985000.  lea rsi, str.invalid_number_of_lines    ; 0x8d0f ; "invalid number of lines"
0x00003c77      ba05000000     mov edx, 5
0x00003c7c      31ff           xor edi, edi
0x00003c7e      4889c3         mov rbx, rax
0x00003c81      e8badfffff     call sym.imp.dcgettext
0x00003c86      488d155d5100.  lea rdx, str.s:__s                      ; 0x8dea ; "%s: %s"
0x00003c8d      4889c1         mov rcx, rax
0x00003c90      31ff           xor edi, edi
0x00003c92      4989d8         mov r8, rbx
0x00003c95      31f6           xor esi, esi
0x00003c97      31c0           xor eax, eax
0x00003c99      e802e2ffff     call sym.imp.error
0x00003c9e      bf01000000     mov edi, 1
0x00003ca3      e818120000     call sym.usage
0x00003ca8      ba05000000     mov edx, 5
0x00003cad      488d35cc5c00.  lea rsi, str.cannot_split_in_more_than_one_way ; 0x9980 ; "cannot split in more than one way"
0x00003cb4      e95efcffff     jmp 0x3917
0x00003cb9      488d35e85c00.  lea rsi, str.multiple_separator_characters_specified ; 0x99a8 ; "multiple separator characters specified"
0x00003cc0      ba05000000     mov edx, 5
0x00003cc5      31ff           xor edi, edi
0x00003cc7      e874dfffff     call sym.imp.dcgettext
0x00003ccc      31f6           xor esi, esi
0x00003cce      4889c2         mov rdx, rax
0x00003cd1      bf01000000     mov edi, 1
0x00003cd6      31c0           xor eax, eax
0x00003cd8      e8c3e1ffff     call sym.imp.error
0x00003cdd      4c89ef         mov rdi, r13
0x00003ce0      e83b360000     call sym.quote
0x00003ce5      488d35895000.  lea rsi, str.multi_character_separator__s ; 0x8d75 ; "multi-character separator %s"
0x00003cec      4889c3         mov rbx, rax
0x00003cef      ba05000000     mov edx, 5
0x00003cf4      31ff           xor edi, edi
0x00003cf6      e845dfffff     call sym.imp.dcgettext
0x00003cfb      4889d9         mov rcx, rbx
0x00003cfe      4889c2         mov rdx, rax
0x00003d01      31f6           xor esi, esi
0x00003d03      bf01000000     mov edi, 1
0x00003d08      31c0           xor eax, eax
0x00003d0a      e891e1ffff     call sym.imp.error
0x00003d0f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00003d10      31ed           xor ebp, ebp
0x00003d12      4989d1         mov r9, rdx
0x00003d15      5e             pop rsi
0x00003d16      4889e2         mov rdx, rsp
0x00003d19      4883e4f0       and rsp, 0xfffffffffffffff0
0x00003d1d      50             push rax
0x00003d1e      54             push rsp
0x00003d1f      4c8d055a4d00.  lea r8, sym.__libc_csu_fini             ; 0x8a80
0x00003d26      488d0de34c00.  lea rcx, sym.__libc_csu_init            ; 0x8a10 ; "AWAVI\x89\xd7AUATL\x8d%\xce. "
0x00003d2d      488d3dace2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1fe0 ; "AWAVE1\xf6AUATE1\xe4USH\x89\xf3\x89\xfdH\x81\xecH\x01"
0x00003d34      ff159e822000   call qword [reloc.__libc_start_main]    ; [0x20bfd8:8]=0
0x00003d3a      f4             hlt
0x00003d3b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003d40      488d3d018520.  lea rdi, obj.__TMC_END                  ; 0x20c248
0x00003d47      55             push rbp
0x00003d48      488d05f98420.  lea rax, obj.__TMC_END                  ; 0x20c248
0x00003d4f      4839f8         cmp rax, rdi
0x00003d52      4889e5         mov rbp, rsp
0x00003d55      7419           je 0x3d70
0x00003d57      488b05728220.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20bfd0:8]=0
0x00003d5e      4885c0         test rax, rax
0x00003d61      740d           je 0x3d70
0x00003d63      5d             pop rbp
0x00003d64      ffe0           jmp rax
0x00003d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00003d70      5d             pop rbp
0x00003d71      c3             ret
0x00003d72      0f1f4000       nop dword [rax]
0x00003d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003d80      488d3dc18420.  lea rdi, obj.__TMC_END                  ; 0x20c248
0x00003d87      488d35ba8420.  lea rsi, obj.__TMC_END                  ; 0x20c248
0x00003d8e      55             push rbp
0x00003d8f      4829fe         sub rsi, rdi
0x00003d92      4889e5         mov rbp, rsp
0x00003d95      48c1fe03       sar rsi, 3
0x00003d99      4889f0         mov rax, rsi
0x00003d9c      48c1e83f       shr rax, 0x3f
0x00003da0      4801c6         add rsi, rax
0x00003da3      48d1fe         sar rsi, 1
0x00003da6      7418           je 0x3dc0
0x00003da8      488b05398220.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20bfe8:8]=0
0x00003daf      4885c0         test rax, rax
0x00003db2      740c           je 0x3dc0
0x00003db4      5d             pop rbp
0x00003db5      ffe0           jmp rax
0x00003db7      660f1f840000.  nop word [rax + rax]
0x00003dc0      5d             pop rbp
0x00003dc1      c3             ret
0x00003dc2      0f1f4000       nop dword [rax]
0x00003dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003dd0      803dd1842000.  cmp byte [obj.completed.7697], 0        ; [0x20c2a8:1]=0
0x00003dd7      752f           jne 0x3e08
0x00003dd9      48833d0f8220.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20bff0:8]=0
0x00003de1      55             push rbp
0x00003de2      4889e5         mov rbp, rsp
0x00003de5      740c           je 0x3df3
0x00003de7      488b3d1a8220.  mov rdi, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x00003dee      e8dde1ffff     call sym..plt.got
0x00003df3      e848ffffff     call sym.deregister_tm_clones
0x00003df8      c605a9842000.  mov byte [obj.completed.7697], 1        ; [0x20c2a8:1]=0
0x00003dff      5d             pop rbp
0x00003e00      c3             ret
0x00003e01      0f1f80000000.  nop dword [rax]
0x00003e08      f3c3           ret
0x00003e0a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003e10      55             push rbp
0x00003e11      4889e5         mov rbp, rsp
0x00003e14      5d             pop rbp
0x00003e15      e966ffffff     jmp sym.register_tm_clones
0x00003e1a      660f1f440000   nop word [rax + rax]
;-- next_file_name:
0x00003e20      4155           push r13                                ; /src:351
0x00003e22      4154           push r12
0x00003e24      55             push rbp
0x00003e25      53             push rbx
0x00003e26      4883ec08       sub rsp, 8
0x00003e2a      4c8b25878520.  mov r12, qword [obj.outfile]            ; /src:358 ; [0x20c3b8:8]=0
0x00003e31      488b1d708520.  mov rbx, qword [obj.suffix_length]      ; [0x20c3a8:8]=0
0x00003e38      4d85e4         test r12, r12
0x00003e3b      747f           je 0x3ebc
0x00003e3d      4885db         test rbx, rbx
0x00003e40      488d43ff       lea rax, [rbx - 1]
0x00003e44      0f8454020000   je 0x409e
0x00003e4a      488b0d6f8420.  mov rcx, qword [obj.sufindex.7081]      ; [0x20c2c0:8]=0
0x00003e51      440fb605bf81.  movzx r8d, byte [obj.suffix_auto]       ; [0x20c018:1]=1
0x00003e59      488b35c08120.  mov rsi, qword [obj.suffix_alphabet]    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x00003e60      488b3d498520.  mov rdi, qword [obj.outfile_mid]        ; [0x20c3b0:8]=0
0x00003e67      eb32           jmp 0x3e9b
0x00003e69      0f1f80000000.  nop dword [rax]
0x00003e70      0fb61416       movzx edx, byte [rsi + rdx]
0x00003e74      84d2           test dl, dl                             ; /src:320
0x00003e76      881407         mov byte [rdi + rax], dl
0x00003e79      0f85aa010000   jne 0x4029
0x00003e7f      48c704c10000.  mov qword [rcx + rax*8], 0
0x00003e87      0fb616         movzx edx, byte [rsi]
0x00003e8a      881407         mov byte [rdi + rax], dl
0x00003e8d      4883e801       sub rax, 1
0x00003e91      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003e95      0f8403020000   je 0x409e
0x00003e9b      488b14c1       mov rdx, qword [rcx + rax*8]
0x00003e9f      4883c201       add rdx, 1
0x00003ea3      4885c0         test rax, rax
0x00003ea6      488914c1       mov qword [rcx + rax*8], rdx
0x00003eaa      75c4           jne 0x3e70
0x00003eac      4584c0         test r8b, r8b
0x00003eaf      74bf           je 0x3e70
0x00003eb1      4c8b09         mov r9, qword [rcx]
0x00003eb4      42807c0e0100   cmp byte [rsi + r9 + 1], 0
0x00003eba      75b4           jne 0x3e70
0x00003ebc      488b2d158420.  mov rbp, qword [obj.outfile_length.7083] ; [0x20c2d8:8]=0
0x00003ec3      4885ed         test rbp, rbp
0x00003ec6      0f856c010000   jne 0x4038
0x00003ecc      488b3ded8420.  mov rdi, qword [obj.outbase]            ; /src:241 ; [0x20c3c0:8]=0
0x00003ed3      e888ddffff     call sym.imp.strlen
0x00003ed8      488b3db98420.  mov rdi, qword [obj.additional_suffix]  ; [0x20c398:8]=0
0x00003edf      4989c5         mov r13, rax
0x00003ee2      488905e78320.  mov qword [obj.outbase_length.7082], rax ; /src:243 ; [0x20c2d0:8]=0
0x00003ee9      31c0           xor eax, eax
0x00003eeb      4885ff         test rdi, rdi
0x00003eee      7405           je 0x3ef5
0x00003ef0      e86bddffff     call sym.imp.strlen
0x00003ef5      498d741d00     lea rsi, [r13 + rbx]
0x00003efa      488905c78320.  mov qword [obj.addsuf_length.7084], rax ; [0x20c2c8:8]=0
0x00003f01      4801c6         add rsi, rax
0x00003f04      488935cd8320.  mov qword [obj.outfile_length.7083], rsi ; [0x20c2d8:8]=0
0x00003f0b      4883c601       add rsi, 1
0x00003f0f      4939f5         cmp r13, rsi
0x00003f12      0f87aa010000   ja 0x40c2
0x00003f18      4c89e7         mov rdi, r12
0x00003f1b      e8a03b0000     call sym.xrealloc
0x00003f20      488b1da98320.  mov rbx, qword [obj.outbase_length.7082] ; [0x20c2d0:8]=0
0x00003f27      488b35928420.  mov rsi, qword [obj.outbase]            ; [0x20c3c0:8]=0
0x00003f2e      4889c7         mov rdi, rax
0x00003f31      4989c4         mov r12, rax
0x00003f34      4889057d8420.  mov qword [obj.outfile], rax            ; [0x20c3b8:8]=0
0x00003f3b      4889da         mov rdx, rbx
0x00003f3e      e88ddeffff     call sym.imp.memcpy                     ; /src:269
0x00003f43      488b05d68020.  mov rax, qword [obj.suffix_alphabet]    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x00003f4a      4c8b2d6f8320.  mov r13, qword [obj.sufindex.7081]      ; [0x20c2c0:8]=0
0x00003f51      498d0c1c       lea rcx, [r12 + rbx]
0x00003f55      0fbe30         movsx esi, byte [rax]
0x00003f58      488b1d498420.  mov rbx, qword [obj.suffix_length]      ; [0x20c3a8:8]=0
0x00003f5f      4889cf         mov rdi, rcx
0x00003f62      48890d478420.  mov qword [obj.outfile_mid], rcx        ; [0x20c3b0:8]=0
0x00003f69      4889da         mov rdx, rbx
0x00003f6c      e89fddffff     call sym.imp.memset
0x00003f71      488b35208420.  mov rsi, qword [obj.additional_suffix]  ; /src:272 ; [0x20c398:8]=0
0x00003f78      4885f6         test rsi, rsi
0x00003f7b      7410           je 0x3f8d
0x00003f7d      488b15448320.  mov rdx, qword [obj.addsuf_length.7084] ; [0x20c2c8:8]=0
0x00003f84      488d3c18       lea rdi, [rax + rbx]                    ; /src:273
0x00003f88      e843deffff     call sym.imp.memcpy
0x00003f8d      488b05448320.  mov rax, qword [obj.outfile_length.7083] ; [0x20c2d8:8]=0
0x00003f94      4c89ef         mov rdi, r13
0x00003f97      41c6040400     mov byte [r12 + rax], 0
0x00003f9c      e8afdbffff     call sym.imp.free
0x00003fa1      4889df         mov rdi, rbx
0x00003fa4      be08000000     mov esi, 8
0x00003fa9      e8823c0000     call sym.xcalloc
0x00003fae      4c8b25eb8320.  mov r12, qword [obj.numeric_suffix_start] ; [0x20c3a0:8]=0
0x00003fb5      4889c3         mov rbx, rax
0x00003fb8      488905018320.  mov qword [obj.sufindex.7081], rax      ; [0x20c2c0:8]=0
0x00003fbf      4d85e4         test r12, r12
0x00003fc2      7465           je 0x4029                               ; /src:284
0x00003fc4      4885ed         test rbp, rbp
0x00003fc7      0f85fa000000   jne 0x40c7
0x00003fcd      4c89e7         mov rdi, r12
0x00003fd0      e88bdcffff     call sym.imp.strlen
0x00003fd5      4c8b2dcc8320.  mov r13, qword [obj.suffix_length]      ; /src:287 ; [0x20c3a8:8]=0
0x00003fdc      4889c5         mov rbp, rax
0x00003fdf      4889c2         mov rdx, rax
0x00003fe2      4c89e6         mov rsi, r12
0x00003fe5      4c89ef         mov rdi, r13
0x00003fe8      49c1e503       shl r13, 3                              ; /src:288
0x00003fec      4829c7         sub rdi, rax
0x00003fef      48033dba8320.  add rdi, qword [obj.outfile_mid]        ; [0x20c3b0:8]=0
0x00003ff6      e8d5ddffff     call sym.imp.memcpy
0x00003ffb      4885ed         test rbp, rbp
0x00003ffe      488d4dff       lea rcx, [rbp - 1]
0x00004002      7425           je 0x4029
0x00004004      48f7dd         neg rbp
0x00004007      498d44ed00     lea rax, [r13 + rbp*8]
0x0000400c      4801d8         add rax, rbx
0x0000400f      90             nop
0x00004010      410fbe140c     movsx edx, byte [r12 + rcx]
0x00004015      83ea30         sub edx, 0x30
0x00004018      4863d2         movsxd rdx, edx
0x0000401b      488914c8       mov qword [rax + rcx*8], rdx
0x0000401f      4883e901       sub rcx, 1
0x00004023      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00004027      75e7           jne 0x4010
0x00004029      4883c408       add rsp, 8                              ; /src:256
0x0000402d      5b             pop rbx
0x0000402e      5d             pop rbp
0x0000402f      415c           pop r12
0x00004031      415d           pop r13
0x00004033      c3             ret
0x00004034      0f1f4000       nop dword [rax]                         ; /src:252
0x00004038      4883c301       add rbx, 1                              ; /src:253
0x0000403c      488d7503       lea rsi, [rbp + 3]
0x00004040      483b35898220.  cmp rsi, qword [obj.outbase_length.7082] ; [0x20c2d0:8]=0
0x00004047      488d4502       lea rax, [rbp + 2]
0x0000404b      48891d568320.  mov qword [obj.suffix_length], rbx      ; [0x20c3a8:8]=0
0x00004052      4889057f8220.  mov qword [obj.outfile_length.7083], rax ; [0x20c2d8:8]=0
0x00004059      7267           jb 0x40c2
0x0000405b      4c89e7         mov rdi, r12
0x0000405e      e85d3a0000     call sym.xrealloc
0x00004063      4c8b2d568220.  mov r13, qword [obj.sufindex.7081]      ; [0x20c2c0:8]=0
0x0000406a      4989c4         mov r12, rax
0x0000406d      488905448320.  mov qword [obj.outfile], rax            ; [0x20c3b8:8]=0
0x00004074      488b05a57f20.  mov rax, qword [obj.suffix_alphabet]    ; [0x20c020:8]=0x8ed5 str.abcdefghijklmnopqrstuvwxyz
0x0000407b      488b0d4e8220.  mov rcx, qword [obj.outbase_length.7082] ; /src:266 ; [0x20c2d0:8]=0
0x00004082      498b5500       mov rdx, qword [r13]                    ; /src:265
0x00004086      488d5901       lea rbx, [rcx + 1]
0x0000408a      0fb61410       movzx edx, byte [rax + rdx]
0x0000408e      48891d3b8220.  mov qword [obj.outbase_length.7082], rbx ; [0x20c2d0:8]=0
0x00004095      4188140c       mov byte [r12 + rcx], dl
0x00004099      e9b3feffff     jmp 0x3f51
0x0000409e      488d354b4e00.  lea rsi, str.output_file_suffixes_exhausted ; 0x8ef0 ; "output file suffixes exhausted"
0x000040a5      ba05000000     mov edx, 5
0x000040aa      31ff           xor edi, edi
0x000040ac      e88fdbffff     call sym.imp.dcgettext
0x000040b1      31f6           xor esi, esi
0x000040b3      4889c2         mov rdx, rax
0x000040b6      bf01000000     mov edi, 1
0x000040bb      31c0           xor eax, eax
0x000040bd      e8deddffff     call sym.imp.error
0x000040c2      e8e93b0000     call sym.xalloc_die
0x000040c7      488d0dda5a00.  lea rcx, obj.__PRETTY_FUNCTION__.7087   ; 0x9ba8 ; "next_file_name"
0x000040ce      488d35ef4900.  lea rsi, str..._coreutils_8.31_src_split.c ; 0x8ac4 ; "../coreutils-8.31/src/split.c"
0x000040d5      488d3d064a00.  lea rdi, str.widen                      ; 0x8ae2 ; "! widen"
0x000040dc      ba98010000     mov edx, 0x198
0x000040e1      e80adcffff     call sym.imp.__assert_fail
0x000040e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- create:
0x000040f0      4154           push r12
0x000040f2      55             push rbp
0x000040f3      4989fc         mov r12, rdi
0x000040f6      53             push rbx
0x000040f7      4881eca00000.  sub rsp, 0xa0
0x000040fe      64488b042528.  mov rax, qword fs:[0x28]                ; /src:331
0x00004107      488984249800.  mov qword [rsp + 0x98], rax
0x0000410f      31c0           xor eax, eax
0x00004111      48833de78320.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x00004119      0f84b9010000   je 0x42d8
0x0000411f      488d3d054a00.  lea rdi, str.SHELL                      ; /src:357 ; 0x8b2b ; "SHELL"
0x00004126      e805daffff     call sym.imp.getenv
0x0000412b      488d3dff4900.  lea rdi, str.FILE                       ; 0x8b31 ; "FILE"
0x00004132      4885c0         test rax, rax
0x00004135      4889c5         mov rbp, rax
0x00004138      488d05ab4900.  lea rax, str.bin_sh                     ; /src:358 ; 0x8aea ; "/bin/sh"
0x0000413f      ba01000000     mov edx, 1
0x00004144      4c89e6         mov rsi, r12
0x00004147      480f44e8       cmove rbp, rax
0x0000414b      e890daffff     call sym.imp.setenv
0x00004150      85c0           test eax, eax
0x00004152      0f85a9030000   jne 0x4501                              ; /src:363
0x00004158      803d83812000.  cmp byte [obj.verbose], 0               ; [0x20c2e2:1]=0
0x0000415f      0f853b020000   jne 0x43a0
0x00004165      4889e7         mov rdi, rsp
0x00004168      e8c3dbffff     call sym.imp.pipe
0x0000416d      85c0           test eax, eax                           ; /src:394
0x0000416f      0f85b8030000   jne 0x452d
0x00004175      e826deffff     call sym.imp.fork
0x0000417a      85c0           test eax, eax
0x0000417c      89c3           mov ebx, eax
0x0000417e      7478           je 0x41f8
0x00004180      83f8ff         cmp eax, 0xffffffff
0x00004183      0f84c4040000   je 0x464d
0x00004189      8b3c24         mov edi, dword [rsp]
0x0000418c      e88fdbffff     call sym.imp.close
0x00004191      85c0           test eax, eax
0x00004193      0f8588040000   jne 0x4621
0x00004199      488b0d408320.  mov rcx, qword [obj.n_open_pipes]       ; [0x20c4e0:8]=0
0x000041a0      483b0d418320.  cmp rcx, qword [obj.open_pipes_alloc]   ; [0x20c4e8:8]=0
0x000041a7      891d4b832000   mov dword [obj.filter_pid], ebx         ; /src:402 ; [0x20c4f8:4]=0
0x000041ad      488b3d3c8320.  mov rdi, qword [obj.open_pipes]         ; [0x20c4f0:8]=0
0x000041b4      0f849e020000   je 0x4458
0x000041ba      488d4101       lea rax, [rcx + 1]
0x000041be      4889051b8320.  mov qword [obj.n_open_pipes], rax       ; [0x20c4e0:8]=0
0x000041c5      8b442404       mov eax, dword [rsp + 4]
0x000041c9      89048f         mov dword [rdi + rcx*4], eax
0x000041cc      8b5c2404       mov ebx, dword [rsp + 4]
0x000041d0      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x000041d8      6448330c2528.  xor rcx, qword fs:[0x28]
0x000041e1      89d8           mov eax, ebx
0x000041e3      0f8513030000   jne 0x44fc
0x000041e9      4881c4a00000.  add rsp, 0xa0
0x000041f0      5b             pop rbx
0x000041f1      5d             pop rbp
0x000041f2      415c           pop r12
0x000041f4      c3             ret
0x000041f5      0f1f00         nop dword [rax]                         ; /src:377
0x000041f8      48833de08220.  cmp qword [obj.n_open_pipes], 0         ; [0x20c4e0:8]=0
0x00004200      742a           je 0x422c
0x00004202      31db           xor ebx, ebx
0x00004204      0f1f4000       nop dword [rax]
0x00004208      488b05e18220.  mov rax, qword [obj.open_pipes]         ; [0x20c4f0:8]=0
0x0000420f      8b3c98         mov edi, dword [rax + rbx*4]
0x00004212      e809dbffff     call sym.imp.close
0x00004217      85c0           test eax, eax
0x00004219      0f85b1020000   jne 0x44d0                              ; /src:379
0x0000421f      4883c301       add rbx, 1
0x00004223      48391db68220.  cmp qword [obj.n_open_pipes], rbx       ; [0x20c4e0:8]=0
0x0000422a      77dc           ja 0x4208
0x0000422c      8b7c2404       mov edi, dword [rsp + 4]
0x00004230      e8ebdaffff     call sym.imp.close
0x00004235      4189c4         mov r12d, eax
0x00004238      e833d9ffff     call sym.imp.__errno_location
0x0000423d      4585e4         test r12d, r12d                         ; /src:383
0x00004240      4889c3         mov rbx, rax
0x00004243      0f8551030000   jne 0x459a
0x00004249      8b3c24         mov edi, dword [rsp]
0x0000424c      85ff           test edi, edi                           ; /src:385
0x0000424e      741f           je 0x426f
0x00004250      31f6           xor esi, esi
0x00004252      e849daffff     call sym.imp.dup2
0x00004257      85c0           test eax, eax
0x00004259      0f855f030000   jne 0x45be
0x0000425f      8b3c24         mov edi, dword [rsp]
0x00004262      e8b9daffff     call sym.imp.close
0x00004267      85c0           test eax, eax
0x00004269      0f8579010000   jne 0x43e8
0x0000426f      488d35ea8120.  lea rsi, obj.oldblocked                 ; /src:389 ; 0x20c460
0x00004276      31d2           xor edx, edx
0x00004278      bf02000000     mov edi, 2
0x0000427d      e8bed8ffff     call sym.imp.sigprocmask
0x00004282      4c8b25778220.  mov r12, qword [obj.filter_command]     ; [0x20c500:8]=0
0x00004289      4889ef         mov rdi, rbp
0x0000428c      e82f110000     call sym.last_component
0x00004291      488d15184900.  lea rdx, [0x00008bb0]                   ; "-c"
0x00004298      4531c0         xor r8d, r8d                            ; /src:391
0x0000429b      4889c6         mov rsi, rax
0x0000429e      4c89e1         mov rcx, r12
0x000042a1      4889ef         mov rdi, rbp
0x000042a4      31c0           xor eax, eax
0x000042a6      e8c5dcffff     call sym.imp.execl
0x000042ab      488d35ae4c00.  lea rsi, str.failed_to_run_command:___s__c__s ; 0x8f60 ; "failed to run command: \"%s -c %s\""
0x000042b2      ba05000000     mov edx, 5
0x000042b7      31ff           xor edi, edi
0x000042b9      e882d9ffff     call sym.imp.dcgettext
0x000042be      8b33           mov esi, dword [rbx]
0x000042c0      4889c2         mov rdx, rax
0x000042c3      4d89e0         mov r8, r12
0x000042c6      4889e9         mov rcx, rbp
0x000042c9      bf01000000     mov edi, 1
0x000042ce      31c0           xor eax, eax
0x000042d0      e8cbdbffff     call sym.imp.error
0x000042d5      0f1f00         nop dword [rax]
0x000042d8      803d03802000.  cmp byte [obj.verbose], 0               ; [0x20c2e2:1]=0
0x000042df      0f852b010000   jne 0x4410
0x000042e5      31c0           xor eax, eax
0x000042e7      bab6010000     mov edx, 0x1b6
0x000042ec      be41000000     mov esi, 0x41                           ; 'A'
0x000042f1      4c89e7         mov rdi, r12
0x000042f4      e877110000     call sym.open_safer
0x000042f9      85c0           test eax, eax
0x000042fb      89c3           mov ebx, eax
0x000042fd      0f88cdfeffff   js 0x41d0
0x00004303      4889e2         mov rdx, rsp
0x00004306      89c6           mov esi, eax
0x00004308      bf01000000     mov edi, 1
0x0000430d      e80edbffff     call sym.imp.__fxstat
0x00004312      85c0           test eax, eax
0x00004314      0f85c8020000   jne 0x45e2
0x0000431a      488b442408     mov rax, qword [rsp + 8]
0x0000431f      483905e27f20.  cmp qword [0x0020c308], rax             ; [0x20c308:8]=0
0x00004326      7511           jne 0x4339                              ; /src:345
0x00004328      488b0424       mov rax, qword [rsp]
0x0000432c      483905cd7f20.  cmp qword [obj.in_stat_buf], rax        ; [0x20c300:8]=0
0x00004333      0f842a020000   je 0x4563
0x00004339      31f6           xor esi, esi
0x0000433b      89df           mov edi, ebx
0x0000433d      e88ed9ffff     call sym.imp.ftruncate
0x00004342      85c0           test eax, eax
0x00004344      0f8486feffff   je 0x41d0
0x0000434a      8b442418       mov eax, dword [rsp + 0x18]
0x0000434e      2500f00000     and eax, 0xf000
0x00004353      3d00800000     cmp eax, 0x8000
0x00004358      0f8572feffff   jne 0x41d0
0x0000435e      4c89e2         mov rdx, r12
0x00004361      be03000000     mov esi, 3
0x00004366      31ff           xor edi, edi
0x00004368      e8e32d0000     call sym.quotearg_n_style_colon
0x0000436d      488d35a24700.  lea rsi, str.s:_error_truncating        ; 0x8b16 ; "%s: error truncating"
0x00004374      ba05000000     mov edx, 5
0x00004379      31ff           xor edi, edi
0x0000437b      4889c5         mov rbp, rax
0x0000437e      e8bdd8ffff     call sym.imp.dcgettext
0x00004383      4889c3         mov rbx, rax
0x00004386      e8e5d7ffff     call sym.imp.__errno_location
0x0000438b      8b30           mov esi, dword [rax]
0x0000438d      4889e9         mov rcx, rbp                            ; /src:362
0x00004390      4889da         mov rdx, rbx
0x00004393      bf01000000     mov edi, 1
0x00004398      31c0           xor eax, eax
0x0000439a      e801dbffff     call sym.imp.error
0x0000439f      90             nop
0x000043a0      4c89e2         mov rdx, r12
0x000043a3      31ff           xor edi, edi
0x000043a5      be03000000     mov esi, 3
0x000043aa      e8a12d0000     call sym.quotearg_n_style_colon
0x000043af      488d35804700.  lea rsi, str.executing_with_FILE__s     ; 0x8b36 ; "executing with FILE=%s\n"
0x000043b6      31ff           xor edi, edi
0x000043b8      ba05000000     mov edx, 5
0x000043bd      4889c3         mov rbx, rax
0x000043c0      e87bd8ffff     call sym.imp.dcgettext
0x000043c5      488b3d9c7e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x000043cc      4889c2         mov rdx, rax
0x000043cf      4889d9         mov rcx, rbx
0x000043d2      be01000000     mov esi, 1
0x000043d7      31c0           xor eax, eax
0x000043d9      e862dbffff     call sym.imp.__fprintf_chk
0x000043de      e982fdffff     jmp 0x4165
0x000043e3      0f1f440000     nop dword [rax + rax]
0x000043e8      488d35ae4700.  lea rsi, str.closing_input_pipe         ; 0x8b9d ; "closing input pipe"
0x000043ef      ba05000000     mov edx, 5
0x000043f4      31ff           xor edi, edi
0x000043f6      e845d8ffff     call sym.imp.dcgettext
0x000043fb      8b33           mov esi, dword [rbx]
0x000043fd      4889c2         mov rdx, rax                            ; /src:334
0x00004400      bf01000000     mov edi, 1
0x00004405      31c0           xor eax, eax
0x00004407      e894daffff     call sym.imp.error
0x0000440c      0f1f4000       nop dword [rax]
0x00004410      4889fe         mov rsi, rdi
0x00004413      bf04000000     mov edi, 4
0x00004418      e8332c0000     call sym.quotearg_style
0x0000441d      488d35ce4600.  lea rsi, str.creating_file__s           ; 0x8af2 ; "creating file %s\n"
0x00004424      31ff           xor edi, edi
0x00004426      ba05000000     mov edx, 5
0x0000442b      4889c3         mov rbx, rax
0x0000442e      e80dd8ffff     call sym.imp.dcgettext
0x00004433      488b3d2e7e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x0000443a      4889c2         mov rdx, rax
0x0000443d      4889d9         mov rcx, rbx
0x00004440      be01000000     mov esi, 1
0x00004445      31c0           xor eax, eax
0x00004447      e8f4daffff     call sym.imp.__fprintf_chk              ; stat.h:-50
0x0000444c      e994feffff     jmp 0x42e5
0x00004451      0f1f80000000.  nop dword [rax]
0x00004458      4885ff         test rdi, rdi
0x0000445b      7444           je 0x44a1
0x0000445d      48b854555555.  movabs rax, 0x1555555555555554          ; /src:272
0x00004467      4839c1         cmp rcx, rax
0x0000446a      775e           ja 0x44ca
0x0000446c      4889c8         mov rax, rcx
0x0000446f      48d1e8         shr rax, 1
0x00004472      488d4c0101     lea rcx, [rcx + rax + 1]
0x00004477      488d348d0000.  lea rsi, [rcx*4]
0x0000447f      48890d628020.  mov qword [obj.open_pipes_alloc], rcx   ; [0x20c4e8:8]=0
0x00004486      e835360000     call sym.xrealloc
0x0000448b      488b0d4e8020.  mov rcx, qword [obj.n_open_pipes]       ; [0x20c4e0:8]=0
0x00004492      4889c7         mov rdi, rax                            ; stat.h:-64
0x00004495      488905548020.  mov qword [obj.open_pipes], rax         ; [0x20c4f0:8]=0
0x0000449c      e919fdffff     jmp 0x41ba
0x000044a1      4885c9         test rcx, rcx
0x000044a4      b820000000     mov eax, 0x20                           ; "@"
0x000044a9      ba04000000     mov edx, 4
0x000044ae      480f44c8       cmove rcx, rax
0x000044b2      4889d0         mov rax, rdx
0x000044b5      31f6           xor esi, esi
0x000044b7      48f7e1         mul rcx
0x000044ba      0f8099000000   jo 0x4559
0x000044c0      4885c0         test rax, rax
0x000044c3      7805           js 0x44ca
0x000044c5      4885f6         test rsi, rsi
0x000044c8      74ad           je 0x4477
0x000044ca      e8e1370000     call sym.xalloc_die
0x000044cf      90             nop
0x000044d0      488d358d4600.  lea rsi, str.closing_prior_pipe         ; 0x8b64 ; "closing prior pipe"
0x000044d7      ba05000000     mov edx, 5
0x000044dc      31ff           xor edi, edi
0x000044de      e85dd7ffff     call sym.imp.dcgettext
0x000044e3      4889c3         mov rbx, rax
0x000044e6      e885d6ffff     call sym.imp.__errno_location
0x000044eb      8b30           mov esi, dword [rax]
0x000044ed      4889da         mov rdx, rbx
0x000044f0      bf01000000     mov edi, 1
0x000044f5      31c0           xor eax, eax                            ; /src:236
0x000044f7      e8a4d9ffff     call sym.imp.error
0x000044fc      e86fd7ffff     call sym.imp.__stack_chk_fail
0x00004501      488d35304a00.  lea rsi, str.failed_to_set_FILE_environment_variable ; 0x8f38 ; "failed to set FILE environment variable"
0x00004508      ba05000000     mov edx, 5
0x0000450d      31ff           xor edi, edi
0x0000450f      e82cd7ffff     call sym.imp.dcgettext
0x00004514      4889c3         mov rbx, rax
0x00004517      e854d6ffff     call sym.imp.__errno_location
0x0000451c      8b30           mov esi, dword [rax]
0x0000451e      4889da         mov rdx, rbx
0x00004521      bf01000000     mov edi, 1                              ; stat.h:-65
0x00004526      31c0           xor eax, eax
0x00004528      e873d9ffff     call sym.imp.error
0x0000452d      488d351a4600.  lea rsi, str.failed_to_create_pipe      ; 0x8b4e ; "failed to create pipe"
0x00004534      ba05000000     mov edx, 5
0x00004539      31ff           xor edi, edi
0x0000453b      e800d7ffff     call sym.imp.dcgettext
0x00004540      4889c3         mov rbx, rax
0x00004543      e828d6ffff     call sym.imp.__errno_location
0x00004548      8b30           mov esi, dword [rax]
0x0000454a      4889da         mov rdx, rbx
0x0000454d      bf01000000     mov edi, 1
0x00004552      31c0           xor eax, eax
0x00004554      e847d9ffff     call sym.imp.error
0x00004559      be01000000     mov esi, 1
0x0000455e      e95dffffff     jmp 0x44c0
0x00004563      4c89e6         mov rsi, r12
0x00004566      bf04000000     mov edi, 4
0x0000456b      e8e02a0000     call sym.quotearg_style
0x00004570      488d35994900.  lea rsi, str.s_would_overwrite_input__aborting ; 0x8f10 ; "%s would overwrite input; aborting"
0x00004577      4889c3         mov rbx, rax
0x0000457a      ba05000000     mov edx, 5
0x0000457f      31ff           xor edi, edi
0x00004581      e8bad6ffff     call sym.imp.dcgettext
0x00004586      4889d9         mov rcx, rbx                            ; /src:256
0x00004589      4889c2         mov rdx, rax
0x0000458c      31f6           xor esi, esi
0x0000458e      bf01000000     mov edi, 1
0x00004593      31c0           xor eax, eax
0x00004595      e806d9ffff     call sym.imp.error
0x0000459a      488d35d64500.  lea rsi, str.closing_output_pipe        ; 0x8b77 ; "closing output pipe"
0x000045a1      ba05000000     mov edx, 5
0x000045a6      31ff           xor edi, edi
0x000045a8      e893d6ffff     call sym.imp.dcgettext
0x000045ad      8b33           mov esi, dword [rbx]
0x000045af      4889c2         mov rdx, rax
0x000045b2      bf01000000     mov edi, 1
0x000045b7      31c0           xor eax, eax
0x000045b9      e8e2d8ffff     call sym.imp.error
0x000045be      488d35c64500.  lea rsi, str.moving_input_pipe          ; 0x8b8b ; "moving input pipe"
0x000045c5      ba05000000     mov edx, 5
0x000045ca      31ff           xor edi, edi
0x000045cc      e86fd6ffff     call sym.imp.dcgettext
0x000045d1      8b33           mov esi, dword [rbx]
0x000045d3      4889c2         mov rdx, rax
0x000045d6      bf01000000     mov edi, 1
0x000045db      31c0           xor eax, eax
0x000045dd      e8bed8ffff     call sym.imp.error
0x000045e2      4c89e6         mov rsi, r12
0x000045e5      bf04000000     mov edi, 4
0x000045ea      e8612a0000     call sym.quotearg_style
0x000045ef      488d350e4500.  lea rsi, str.failed_to_stat__s          ; 0x8b04 ; "failed to stat %s"
0x000045f6      ba05000000     mov edx, 5
0x000045fb      31ff           xor edi, edi
0x000045fd      4889c5         mov rbp, rax
0x00004600      e83bd6ffff     call sym.imp.dcgettext
0x00004605      4889c3         mov rbx, rax
0x00004608      e863d5ffff     call sym.imp.__errno_location
0x0000460d      8b30           mov esi, dword [rax]
0x0000460f      4889e9         mov rcx, rbp
0x00004612      4889da         mov rdx, rbx
0x00004615      bf01000000     mov edi, 1                              ; /src:267
0x0000461a      31c0           xor eax, eax
0x0000461c      e87fd8ffff     call sym.imp.error
0x00004621      488d35a34500.  lea rsi, str.failed_to_close_input_pipe ; 0x8bcb ; "failed to close input pipe"
0x00004628      ba05000000     mov edx, 5
0x0000462d      31ff           xor edi, edi
0x0000462f      e80cd6ffff     call sym.imp.dcgettext
0x00004634      4889c3         mov rbx, rax
0x00004637      e834d5ffff     call sym.imp.__errno_location
0x0000463c      8b30           mov esi, dword [rax]
0x0000463e      4889da         mov rdx, rbx
0x00004641      bf01000000     mov edi, 1
0x00004646      31c0           xor eax, eax
0x00004648      e853d8ffff     call sym.imp.error                      ; /src:798
0x0000464d      488d355f4500.  lea rsi, str.fork_system_call_failed    ; 0x8bb3 ; "fork system call failed"
0x00004654      ba05000000     mov edx, 5
0x00004659      31ff           xor edi, edi                            ; /src:801
0x0000465b      e8e0d5ffff     call sym.imp.dcgettext
0x00004660      4889c3         mov rbx, rax
0x00004663      e808d5ffff     call sym.imp.__errno_location
0x00004668      8b30           mov esi, dword [rax]
0x0000466a      4889da         mov rdx, rbx
0x0000466d      bf01000000     mov edi, 1
0x00004672      31c0           xor eax, eax
0x00004674      e827d8ffff     call sym.imp.error
0x00004679      0f1f80000000.  nop dword [rax]
;-- ofile_open:
0x00004680      4157           push r15
0x00004682      4156           push r14
0x00004684      4155           push r13
0x00004686      4989f5         mov r13, rsi
0x00004689      4154           push r12
0x0000468b      49c1e505       shl r13, 5
0x0000468f      55             push rbp
0x00004690      53             push rbx
0x00004691      4901fd         add r13, rdi
0x00004694      31ed           xor ebp, ebp
0x00004696      4883ec18       sub rsp, 0x18
0x0000469a      418b4508       mov eax, dword [r13 + 8]
0x0000469e      85c0           test eax, eax
0x000046a0      7811           js 0x46b3
0x000046a2      4883c418       add rsp, 0x18
0x000046a6      89e8           mov eax, ebp
0x000046a8      5b             pop rbx
0x000046a9      5d             pop rbp
0x000046aa      415c           pop r12
0x000046ac      415d           pop r13                                 ; /src:769
0x000046ae      415e           pop r14
0x000046b0      415f           pop r15
0x000046b2      c3             ret
0x000046b3      488d5eff       lea rbx, [rsi - 1]
0x000046b7      4c8d72ff       lea r14, [rdx - 1]
0x000046bb      4885f6         test rsi, rsi
0x000046be      4989fc         mov r12, rdi
0x000046c1      4989f7         mov r15, rsi
0x000046c4      498b7d00       mov rdi, qword [r13]
0x000046c8      490f44de       cmove rbx, r14                          ; /src:777
0x000046cc      83f8ff         cmp eax, 0xffffffff
0x000046cf      0f8496000000   je 0x476b
0x000046d5      0f1f00         nop dword [rax]
0x000046d8      31c0           xor eax, eax
0x000046da      be010c0000     mov esi, 0xc01
0x000046df      e88c0d0000     call sym.open_safer                     ; /src:775
0x000046e4      85c0           test eax, eax
0x000046e6      0f898c000000   jns 0x4778
0x000046ec      e87fd4ffff     call sym.imp.__errno_location
0x000046f1      4989c0         mov r8, rax
0x000046f4      8b00           mov eax, dword [rax]
0x000046f6      83e817         sub eax, 0x17
0x000046f9      83f801         cmp eax, 1
0x000046fc      7621           jbe 0x471f
0x000046fe      e9e0000000     jmp 0x47e3
0x00004703      0f1f440000     nop dword [rax + rax]
0x00004708      488d43ff       lea rax, [rbx - 1]
0x0000470c      4885db         test rbx, rbx
0x0000470f      490f44c6       cmove rax, r14
0x00004713      4c39f8         cmp rax, r15
0x00004716      4889c3         mov rbx, rax
0x00004719      0f8491000000   je 0x47b0
0x0000471f      4889dd         mov rbp, rbx
0x00004722      48c1e505       shl rbp, 5                              ; /src:744
0x00004726      4c01e5         add rbp, r12
0x00004729      8b4508         mov eax, dword [rbp + 8]
0x0000472c      85c0           test eax, eax
0x0000472e      78d8           js 0x4708
0x00004730      488b7d10       mov rdi, qword [rbp + 0x10]             ; /src:766
0x00004734      4c89442408     mov qword [rsp + 8], r8
0x00004739      e8023b0000     call sym.rpl_fclose
0x0000473e      85c0           test eax, eax
0x00004740      0f85d0000000   jne 0x4816
0x00004746      c74508feffff.  mov dword [rbp + 8], 0xfffffffe         ; 4294967294
0x0000474d      418b4508       mov eax, dword [r13 + 8]
0x00004751      48c745100000.  mov qword [rbp + 0x10], 0
0x00004759      498b7d00       mov rdi, qword [r13]
0x0000475d      bd01000000     mov ebp, 1                              ; /src:794
0x00004762      83f8ff         cmp eax, 0xffffffff
0x00004765      0f856dffffff   jne 0x46d8
0x0000476b      e880f9ffff     call sym.create
0x00004770      85c0           test eax, eax                           ; /src:780
0x00004772      0f8874ffffff   js 0x46ec
0x00004778      488d35674400.  lea rsi, [0x00008be6]                   ; "a"
0x0000477f      41894508       mov dword [r13 + 8], eax
0x00004783      89c7           mov edi, eax
0x00004785      e8d6d6ffff     call sym.imp.fdopen
0x0000478a      4885c0         test rax, rax
0x0000478d      49894510       mov qword [r13 + 0x10], rax
0x00004791      0f84ad000000   je 0x4844
0x00004797      8b055b7d2000   mov eax, dword [obj.filter_pid]         ; [0x20c4f8:4]=0
0x0000479d      c705517d2000.  mov dword [obj.filter_pid], 0           ; [0x20c4f8:4]=0
0x000047a7      41894518       mov dword [r13 + 0x18], eax
0x000047ab      e9f2feffff     jmp 0x46a2
0x000047b0      498b5500       mov rdx, qword [r13]
0x000047b4      be03000000     mov esi, 3
0x000047b9      31ff           xor edi, edi
0x000047bb      4c89442408     mov qword [rsp + 8], r8
0x000047c0      e88b290000     call sym.quotearg_n_style_colon
0x000047c5      4c8b442408     mov r8, qword [rsp + 8]
0x000047ca      488d151d4600.  lea rdx, [0x00008dee]                   ; "%s"
0x000047d1      4889c1         mov rcx, rax
0x000047d4      bf01000000     mov edi, 1
0x000047d9      31c0           xor eax, eax
0x000047db      418b30         mov esi, dword [r8]
0x000047de      e8bdd6ffff     call sym.imp.error
0x000047e3      498b5500       mov rdx, qword [r13]
0x000047e7      be03000000     mov esi, 3
0x000047ec      31ff           xor edi, edi
0x000047ee      4c89442408     mov qword [rsp + 8], r8
0x000047f3      e858290000     call sym.quotearg_n_style_colon
0x000047f8      4c8b442408     mov r8, qword [rsp + 8]
0x000047fd      488d15ea4500.  lea rdx, [0x00008dee]                   ; "%s"
0x00004804      4889c1         mov rcx, rax                            ; /src:792
0x00004807      bf01000000     mov edi, 1
0x0000480c      31c0           xor eax, eax
0x0000480e      418b30         mov esi, dword [r8]
0x00004811      e88ad6ffff     call sym.imp.error
0x00004816      488b5500       mov rdx, qword [rbp]
0x0000481a      be03000000     mov esi, 3
0x0000481f      31ff           xor edi, edi
0x00004821      e82a290000     call sym.quotearg_n_style_colon
0x00004826      4c8b442408     mov r8, qword [rsp + 8]
0x0000482b      488d15bc4500.  lea rdx, [0x00008dee]                   ; "%s"
0x00004832      4889c1         mov rcx, rax
0x00004835      bf01000000     mov edi, 1
0x0000483a      31c0           xor eax, eax
0x0000483c      418b30         mov esi, dword [r8]
0x0000483f      e85cd6ffff     call sym.imp.error
0x00004844      498b5500       mov rdx, qword [r13]
0x00004848      be03000000     mov esi, 3
0x0000484d      31ff           xor edi, edi
0x0000484f      e8fc280000     call sym.quotearg_n_style_colon
0x00004854      4889c3         mov rbx, rax
0x00004857      e814d3ffff     call sym.imp.__errno_location
0x0000485c      8b30           mov esi, dword [rax]
0x0000485e      488d15894500.  lea rdx, [0x00008dee]                   ; "%s"
0x00004865      4889d9         mov rcx, rbx
0x00004868      bf01000000     mov edi, 1
0x0000486d      31c0           xor eax, eax
0x0000486f      e82cd6ffff     call sym.imp.error
0x00004874      6690           nop
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- closeout:
0x00004880      4155           push r13
0x00004882      4154           push r12
0x00004884      4189d4         mov r12d, edx
0x00004887      55             push rbp
0x00004888      53             push rbx                                ; /src:227
0x00004889      89f5           mov ebp, esi
0x0000488b      4889cb         mov rbx, rcx
0x0000488e      4883ec48       sub rsp, 0x48
0x00004892      64488b042528.  mov rax, qword fs:[0x28]
0x0000489b      4889442438     mov qword [rsp + 0x38], rax
0x000048a0      31c0           xor eax, eax
0x000048a2      4885ff         test rdi, rdi
0x000048a5      0f840d010000   je 0x49b8
0x000048ab      e890390000     call sym.rpl_fclose
0x000048b0      85c0           test eax, eax
0x000048b2      0f85b8000000   jne 0x4970
0x000048b8      85ed           test ebp, ebp
0x000048ba      7844           js 0x4900
0x000048bc      488b3d1d7c20.  mov rdi, qword [obj.n_open_pipes]       ; [0x20c4e0:8]=0
0x000048c3      4885ff         test rdi, rdi
0x000048c6      7438           je 0x4900
0x000048c8      488b35217c20.  mov rsi, qword [obj.open_pipes]         ; [0x20c4f0:8]=0
0x000048cf      3b2e           cmp ebp, dword [rsi]                    ; /src:236
0x000048d1      0f8429010000   je 0x4a00
0x000048d7      488d5604       lea rdx, [rsi + 4]                      ; /src:237
0x000048db      4883ef01       sub rdi, 1
0x000048df      31c0           xor eax, eax
0x000048e1      eb18           jmp 0x48fb
0x000048e3      0f1f440000     nop dword [rax + rax]
0x000048e8      4889d1         mov rcx, rdx
0x000048eb      4883c001       add rax, 1
0x000048ef      4883c204       add rdx, 4
0x000048f3      3929           cmp dword [rcx], ebp
0x000048f5      0f8415010000   je 0x4a10
0x000048fb      4839c7         cmp rdi, rax
0x000048fe      75e8           jne 0x48e8
0x00004900      4585e4         test r12d, r12d
0x00004903      7e43           jle 0x4948
0x00004905      488d74241c     lea rsi, [rsp + 0x1c]
0x0000490a      31d2           xor edx, edx
0x0000490c      4489e7         mov edi, r12d
0x0000490f      c744241c0000.  mov dword [rsp + 0x1c], 0
0x00004917      e8a4d5ffff     call sym.imp.waitpid
0x0000491c      83f8ff         cmp eax, 0xffffffff
0x0000491f      0f8463010000   je 0x4a88
0x00004925      8b4c241c       mov ecx, dword [rsp + 0x1c]
0x00004929      89cd           mov ebp, ecx
0x0000492b      83e57f         and ebp, 0x7f
0x0000492e      8d4501         lea eax, [rbp + 1]
0x00004931      3c01           cmp al, 1
0x00004933      0f8eef000000   jle 0x4a28
0x00004939      83fd0d         cmp ebp, 0xd
0x0000493c      0f857e010000   jne 0x4ac0
0x00004942      660f1f440000   nop word [rax + rax]
0x00004948      488b442438     mov rax, qword [rsp + 0x38]
0x0000494d      644833042528.  xor rax, qword fs:[0x28]
0x00004956      0f85e4010000   jne 0x4b40
0x0000495c      4883c448       add rsp, 0x48
0x00004960      5b             pop rbx
0x00004961      5d             pop rbp
0x00004962      415c           pop r12
0x00004964      415d           pop r13
0x00004966      c3             ret
0x00004967      660f1f840000.  nop word [rax + rax]
0x00004970      e8fbd1ffff     call sym.imp.__errno_location
0x00004975      48833d837b20.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x0000497d      4989c5         mov r13, rax
0x00004980      7409           je 0x498b                               ; /src:222
0x00004982      833820         cmp dword [rax], 0x20
0x00004985      0f842dffffff   je 0x48b8
0x0000498b      4889da         mov rdx, rbx
0x0000498e      be03000000     mov esi, 3
0x00004993      31ff           xor edi, edi
0x00004995      e8b6270000     call sym.quotearg_n_style_colon
0x0000499a      418b7500       mov esi, dword [r13]
0x0000499e      488d15494400.  lea rdx, [0x00008dee]                   ; "%s"
0x000049a5      4889c1         mov rcx, rax
0x000049a8      bf01000000     mov edi, 1
0x000049ad      31c0           xor eax, eax
0x000049af      e8ecd4ffff     call sym.imp.error
0x000049b4      0f1f4000       nop dword [rax]
0x000049b8      85f6           test esi, esi
0x000049ba      0f8840ffffff   js 0x4900
0x000049c0      89ef           mov edi, ebp                            ; /src:227
0x000049c2      e859d3ffff     call sym.imp.close
0x000049c7      85c0           test eax, eax
0x000049c9      0f89edfeffff   jns 0x48bc
0x000049cf      4889da         mov rdx, rbx
0x000049d2      be03000000     mov esi, 3
0x000049d7      31ff           xor edi, edi
0x000049d9      e872270000     call sym.quotearg_n_style_colon
0x000049de      4889c3         mov rbx, rax
0x000049e1      e88ad1ffff     call sym.imp.__errno_location
0x000049e6      8b30           mov esi, dword [rax]
0x000049e8      488d15ff4300.  lea rdx, [0x00008dee]                   ; /src:252 ; "%s"
0x000049ef      4889d9         mov rcx, rbx
0x000049f2      bf01000000     mov edi, 1
0x000049f7      31c0           xor eax, eax
0x000049f9      e8a2d4ffff     call sym.imp.error
0x000049fe      6690           nop
0x00004a00      4889f1         mov rcx, rsi
0x00004a03      4883ef01       sub rdi, 1
0x00004a07      660f1f840000.  nop word [rax + rax]
0x00004a10      8b04be         mov eax, dword [rsi + rdi*4]
0x00004a13      48893dc67a20.  mov qword [obj.n_open_pipes], rdi       ; [0x20c4e0:8]=0
0x00004a1a      8901           mov dword [rcx], eax
0x00004a1c      e9dffeffff     jmp 0x4900
0x00004a21      0f1f80000000.  nop dword [rax]
0x00004a28      85ed           test ebp, ebp
0x00004a2a      0f8515010000   jne 0x4b45
0x00004a30      0fb6ed         movzx ebp, ch
0x00004a33      85ed           test ebp, ebp
0x00004a35      0f840dffffff   je 0x4948
0x00004a3b      4c8b25be7a20.  mov r12, qword [obj.filter_command]     ; [0x20c500:8]=0
0x00004a42      4889da         mov rdx, rbx
0x00004a45      31ff           xor edi, edi
0x00004a47      be03000000     mov esi, 3
0x00004a4c      e8ff260000     call sym.quotearg_n_style_colon
0x00004a51      488d35604500.  lea rsi, str.with_FILE__s__exit__d_from_command:__s ; 0x8fb8 ; "with FILE=%s, exit %d from command: %s"
0x00004a58      4889c3         mov rbx, rax
0x00004a5b      31ff           xor edi, edi
0x00004a5d      ba05000000     mov edx, 5
0x00004a62      e8d9d1ffff     call sym.imp.dcgettext
0x00004a67      4d89e1         mov r9, r12
0x00004a6a      4889c2         mov rdx, rax
0x00004a6d      4189e8         mov r8d, ebp
0x00004a70      4889d9         mov rcx, rbx
0x00004a73      31f6           xor esi, esi
0x00004a75      89ef           mov edi, ebp
0x00004a77      31c0           xor eax, eax
0x00004a79      e822d4ffff     call sym.imp.error
0x00004a7e      e9c5feffff     jmp 0x4948
0x00004a83      0f1f440000     nop dword [rax + rax]
0x00004a88      e8e3d0ffff     call sym.imp.__errno_location
0x00004a8d      83380a         cmp dword [rax], 0xa
0x00004a90      4889c5         mov rbp, rax
0x00004a93      0f848cfeffff   je 0x4925                               ; /src:247
0x00004a99      488d35484100.  lea rsi, str.waiting_for_child_process  ; 0x8be8 ; "waiting for child process"
0x00004aa0      ba05000000     mov edx, 5
0x00004aa5      31ff           xor edi, edi
0x00004aa7      e894d1ffff     call sym.imp.dcgettext
0x00004aac      8b7500         mov esi, dword [rbp]
0x00004aaf      4889c2         mov rdx, rax
0x00004ab2      bf01000000     mov edi, 1
0x00004ab7      31c0           xor eax, eax
0x00004ab9      e8e2d3ffff     call sym.imp.error
0x00004abe      6690           nop
0x00004ac0      4c8d642420     lea r12, [rsp + 0x20]
0x00004ac5      89ef           mov edi, ebp
0x00004ac7      4c89e6         mov rsi, r12
0x00004aca      e8b13a0000     call sym.sig2str
0x00004acf      85c0           test eax, eax
0x00004ad1      754d           jne 0x4b20
0x00004ad3      4889da         mov rdx, rbx
0x00004ad6      31ff           xor edi, edi
0x00004ad8      be03000000     mov esi, 3
0x00004add      4c8b2d1c7a20.  mov r13, qword [obj.filter_command]     ; [0x20c500:8]=0
0x00004ae4      e867260000     call sym.quotearg_n_style_colon
0x00004ae9      488d35984400.  lea rsi, str.with_FILE__s__signal__s_from_command:__s ; 0x8f88 ; "with FILE=%s, signal %s from command: %s"
0x00004af0      31ff           xor edi, edi
0x00004af2      ba05000000     mov edx, 5
0x00004af7      4889c3         mov rbx, rax
0x00004afa      e841d1ffff     call sym.imp.dcgettext
0x00004aff      8dbd80000000   lea edi, [rbp + 0x80]
0x00004b05      4889c2         mov rdx, rax                            ; /src:262
0x00004b08      4d89e9         mov r9, r13
0x00004b0b      4d89e0         mov r8, r12
0x00004b0e      4889d9         mov rcx, rbx
0x00004b11      31f6           xor esi, esi
0x00004b13      31c0           xor eax, eax
0x00004b15      e886d3ffff     call sym.imp.error
0x00004b1a      e929feffff     jmp 0x4948
0x00004b1f      90             nop
0x00004b20      488d0ddb4000.  lea rcx, [0x00008c02]                   ; "%d"
0x00004b27      4189e8         mov r8d, ebp
0x00004b2a      ba13000000     mov edx, 0x13
0x00004b2f      be01000000     mov esi, 1
0x00004b34      4c89e7         mov rdi, r12
0x00004b37      31c0           xor eax, eax
0x00004b39      e882d4ffff     call sym.imp.__sprintf_chk
0x00004b3e      eb93           jmp 0x4ad3
0x00004b40      e82bd1ffff     call sym.imp.__stack_chk_fail           ; /src:275
0x00004b45      488d35944400.  lea rsi, str.unknown_status_from_command__0x_X ; 0x8fe0 ; "unknown status from command (0x%X)"
0x00004b4c      ba05000000     mov edx, 5                              ; /src:276
0x00004b51      31ff           xor edi, edi
0x00004b53      894c240c       mov dword [rsp + 0xc], ecx
0x00004b57      e8e4d0ffff     call sym.imp.dcgettext
0x00004b5c      8b4c240c       mov ecx, dword [rsp + 0xc]
0x00004b60      4889c2         mov rdx, rax
0x00004b63      31f6           xor esi, esi
0x00004b65      bf01000000     mov edi, 1
0x00004b6a      31c0           xor eax, eax
0x00004b6c      e82fd3ffff     call sym.imp.error                      ; /src:280
0x00004b71      0f1f440000     nop dword [rax + rax]
0x00004b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- cwrite:
0x00004b80      55             push rbp
0x00004b81      53             push rbx
0x00004b82      4889f5         mov rbp, rsi
0x00004b85      4889d3         mov rbx, rdx
0x00004b88      4883ec08       sub rsp, 8
0x00004b8c      4084ff         test dil, dil
0x00004b8f      0f84bb000000   je 0x4c50
0x00004b95      4885f6         test rsi, rsi
0x00004b98      7512           jne 0x4bac
0x00004b9a      4885d2         test rdx, rdx
0x00004b9d      750d           jne 0x4bac
0x00004b9f      803d3b772000.  cmp byte [obj.elide_empty_files], 0     ; [0x20c2e1:1]=0
0x00004ba6      0f8594000000   jne 0x4c40
0x00004bac      488b0d057820.  mov rcx, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x00004bb3      8b153f792000   mov edx, dword [obj.filter_pid]         ; /src:291 ; [0x20c4f8:4]=0
0x00004bb9      31ff           xor edi, edi
0x00004bbb      8b3553742000   mov esi, dword [obj.output_desc]        ; [0x20c014:4]=-1
0x00004bc1      e8bafcffff     call sym.closeout
0x00004bc6      e855f2ffff     call sym.next_file_name
0x00004bcb      488b3de67720.  mov rdi, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x00004bd2      e819f5ffff     call sym.create
0x00004bd7      85c0           test eax, eax
0x00004bd9      89c7           mov edi, eax
0x00004bdb      890533742000   mov dword [obj.output_desc], eax        ; [0x20c014:4]=-1
0x00004be1      7875           js 0x4c58
0x00004be3      4889da         mov rdx, rbx
0x00004be6      4889ee         mov rsi, rbp
0x00004be9      e852090000     call sym.full_write
0x00004bee      4839d8         cmp rax, rbx
0x00004bf1      744d           je 0x4c40
0x00004bf3      e878cfffff     call sym.imp.__errno_location
0x00004bf8      48833d007920.  cmp qword [obj.filter_command], 0       ; [0x20c500:8]=0
0x00004c00      4889c3         mov rbx, rax                            ; /src:279
0x00004c03      7407           je 0x4c0c
0x00004c05      31c0           xor eax, eax                            ; /src:295
0x00004c07      833b20         cmp dword [rbx], 0x20
0x00004c0a      7439           je 0x4c45
0x00004c0c      488b15a57720.  mov rdx, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x00004c13      be03000000     mov esi, 3
0x00004c18      31ff           xor edi, edi                            ; /src:284
0x00004c1a      e831250000     call sym.quotearg_n_style_colon
0x00004c1f      8b33           mov esi, dword [rbx]
0x00004c21      488d15c64100.  lea rdx, [0x00008dee]                   ; "%s"
0x00004c28      4889c1         mov rcx, rax
0x00004c2b      bf01000000     mov edi, 1
0x00004c30      31c0           xor eax, eax
0x00004c32      e869d2ffff     call sym.imp.error
0x00004c37      660f1f840000.  nop word [rax + rax]
0x00004c40      b801000000     mov eax, 1
0x00004c45      4883c408       add rsp, 8
0x00004c49      5b             pop rbx
0x00004c4a      5d             pop rbp
0x00004c4b      c3             ret
0x00004c4c      0f1f4000       nop dword [rax]
0x00004c50      8b3dbe732000   mov edi, dword [obj.output_desc]        ; /src:304 ; [0x20c014:4]=-1
0x00004c56      eb8b           jmp 0x4be3
0x00004c58      488b15597720.  mov rdx, qword [obj.outfile]            ; [0x20c3b8:8]=0
0x00004c5f      be03000000     mov esi, 3
0x00004c64      31ff           xor edi, edi
0x00004c66      e8e5240000     call sym.quotearg_n_style_colon
0x00004c6b      4889c3         mov rbx, rax
0x00004c6e      e8fdceffff     call sym.imp.__errno_location
0x00004c73      8b30           mov esi, dword [rax]
0x00004c75      488d15724100.  lea rdx, [0x00008dee]                   ; "%s"
0x00004c7c      4889d9         mov rcx, rbx
0x00004c7f      bf01000000     mov edi, 1                              ; /src:314
0x00004c84      31c0           xor eax, eax
0x00004c86      e815d2ffff     call sym.imp.error
0x00004c8b      0f1f440000     nop dword [rax + rax]
;-- bytes_split:
0x00004c90      4157           push r15                                ; /src:335
0x00004c92      4156           push r14
0x00004c94      4531f6         xor r14d, r14d
0x00004c97      4155           push r13
0x00004c99      4154           push r12
0x00004c9b      4989ff         mov r15, rdi
0x00004c9e      55             push rbp
0x00004c9f      53             push rbx
0x00004ca0      4989fc         mov r12, rdi
0x00004ca3      bd01000000     mov ebp, 1
0x00004ca8      bb01000000     mov ebx, 1
0x00004cad      4883ec38       sub rsp, 0x38
0x00004cb1      4883f9ff       cmp rcx, 0xffffffffffffffff
0x00004cb5      4889742420     mov qword [rsp + 0x20], rsi
0x00004cba      4889542428     mov qword [rsp + 0x28], rdx
0x00004cbf      0f849f000000   je 0x4d64
0x00004cc5      4839d1         cmp rcx, rdx
0x00004cc8      4989cd         mov r13, rcx
0x00004ccb      0f9244241f     setb byte [rsp + 0x1f]
0x00004cd0      4d39e5         cmp r13, r12
0x00004cd3      0f82cd000000   jb 0x4da6
0x00004cd9      4d85c0         test r8, r8
0x00004cdc      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00004ce1      410f94c3       sete r11b
0x00004ce5      eb31           jmp 0x4d18
0x00004ce7      660f1f840000.  nop word [rax + rax]
0x00004cf0      0fb6db         movzx ebx, bl
0x00004cf3      4901de         add r14, rbx
0x00004cf6      4d39c6         cmp r14, r8
0x00004cf9      0f92c3         setb bl
0x00004cfc      4408db         or bl, r11b
0x00004cff      7509           jne 0x4d0a
0x00004d01      4084ed         test bpl, bpl
0x00004d04      0f84be000000   je 0x4dc8
0x00004d0a      4d29e5         sub r13, r12
0x00004d0d      4d01e1         add r9, r12
0x00004d10      4d89fc         mov r12, r15                            ; /src:352
0x00004d13      4d39ef         cmp r15, r13
0x00004d16      7738           ja 0x4d50
0x00004d18      4008dd         or bpl, bl
0x00004d1b      74d3           je 0x4cf0
0x00004d1d      4c89ce         mov rsi, r9
0x00004d20      0fb6fb         movzx edi, bl
0x00004d23      4c89e2         mov rdx, r12
0x00004d26      4c89442410     mov qword [rsp + 0x10], r8
0x00004d2b      44885c241e     mov byte [rsp + 0x1e], r11b
0x00004d30      4c894c2408     mov qword [rsp + 8], r9
0x00004d35      e846feffff     call sym.cwrite
0x00004d3a      4c8b442410     mov r8, qword [rsp + 0x10]
0x00004d3f      89c5           mov ebp, eax
0x00004d41      440fb65c241e   movzx r11d, byte [rsp + 0x1e]
0x00004d47      4c8b4c2408     mov r9, qword [rsp + 8]                 ; /src:329
0x00004d4c      eba2           jmp 0x4cf0
0x00004d4e      6690           nop
0x00004d50      4d85ed         test r13, r13
0x00004d53      0f8587000000   jne 0x4de0
0x00004d59      807c241f00     cmp byte [rsp + 0x1f], 0
0x00004d5e      0f85ea000000   jne 0x4e4e
0x00004d64      4084ed         test bpl, bpl
0x00004d67      0f84b3000000   je 0x4e20
0x00004d6d      488b542428     mov rdx, qword [rsp + 0x28]
0x00004d72      488b742420     mov rsi, qword [rsp + 0x20]
0x00004d77      31ff           xor edi, edi
0x00004d79      4c89442408     mov qword [rsp + 8], r8
0x00004d7e      e8bd250000     call sym.safe_read                      ; /src:358
0x00004d83      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004d87      4989c5         mov r13, rax
0x00004d8a      4c8b442408     mov r8, qword [rsp + 8]
0x00004d8f      0f84f1000000   je 0x4e86
0x00004d95      4885c0         test rax, rax
0x00004d98      0f9444241f     sete byte [rsp + 0x1f]
0x00004d9d      4d39e5         cmp r13, r12
0x00004da0      0f8333ffffff   jae 0x4cd9                              ; /src:355
0x00004da6      4d85ed         test r13, r13
0x00004da9      74ae           je 0x4d59
0x00004dab      89e8           mov eax, ebp
0x00004dad      08d8           or al, bl
0x00004daf      7526           jne 0x4dd7
0x00004db1      0fb6c0         movzx eax, al
0x00004db4      31ed           xor ebp, ebp
0x00004db6      ba01000000     mov edx, 1
0x00004dbb      4901c6         add r14, rax
0x00004dbe      4d39f0         cmp r8, r14
0x00004dc1      0f94c3         sete bl                                 ; /src:356
0x00004dc4      20d3           and bl, dl
0x00004dc6      7449           je 0x4e11
0x00004dc8      4883c438       add rsp, 0x38
0x00004dcc      5b             pop rbx
0x00004dcd      5d             pop rbp
0x00004dce      415c           pop r12
0x00004dd0      415d           pop r13
0x00004dd2      415e           pop r14
0x00004dd4      415f           pop r15
0x00004dd6      c3             ret
0x00004dd7      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x00004ddc      0f1f4000       nop dword [rax]
0x00004de0      0fb6fb         movzx edi, bl                           ; /src:323
0x00004de3      4c89ea         mov rdx, r13
0x00004de6      4c89ce         mov rsi, r9
0x00004de9      4c89442408     mov qword [rsp + 8], r8
0x00004dee      e88dfdffff     call sym.cwrite
0x00004df3      4c8b442408     mov r8, qword [rsp + 8]
0x00004df8      89c2           mov edx, eax
0x00004dfa      89c5           mov ebp, eax
0x00004dfc      89d8           mov eax, ebx
0x00004dfe      83f201         xor edx, 1
0x00004e01      0fb6c0         movzx eax, al
0x00004e04      4901c6         add r14, rax
0x00004e07      4d39f0         cmp r8, r14
0x00004e0a      0f94c3         sete bl
0x00004e0d      20d3           and bl, dl
0x00004e0f      75b7           jne 0x4dc8
0x00004e11      4d29ec         sub r12, r13
0x00004e14      e940ffffff     jmp 0x4d59
0x00004e19      0f1f80000000.  nop dword [rax]
0x00004e20      4c89e6         mov rsi, r12                            ; /src:372
0x00004e23      31ff           xor edi, edi
0x00004e25      ba01000000     mov edx, 1
0x00004e2a      4c89442408     mov qword [rsp + 8], r8
0x00004e2f      e8acceffff     call sym.imp.lseek
0x00004e34      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004e38      b801000000     mov eax, 1
0x00004e3d      4c8b442408     mov r8, qword [rsp + 8]
0x00004e42      4d0f45e7       cmovne r12, r15
0x00004e46      0f45d8         cmovne ebx, eax                         ; /src:331
0x00004e49      e91fffffff     jmp 0x4d6d
0x00004e4e      4d39c6         cmp r14, r8
0x00004e51      498d5e01       lea rbx, [r14 + 1]
0x00004e55      0f836dffffff   jae 0x4dc8
0x00004e5b      498d6801       lea rbp, [r8 + 1]
0x00004e5f      90             nop
0x00004e60      31d2           xor edx, edx
0x00004e62      31f6           xor esi, esi
0x00004e64      bf01000000     mov edi, 1
0x00004e69      4883c301       add rbx, 1
0x00004e6d      e80efdffff     call sym.cwrite
0x00004e72      4839dd         cmp rbp, rbx
0x00004e75      75e9           jne 0x4e60
0x00004e77      4883c438       add rsp, 0x38
0x00004e7b      5b             pop rbx
0x00004e7c      5d             pop rbp
0x00004e7d      415c           pop r12
0x00004e7f      415d           pop r13
0x00004e81      415e           pop r14
0x00004e83      415f           pop r15
0x00004e85      c3             ret
0x00004e86      488b15037520.  mov rdx, qword [obj.infile]             ; [0x20c390:8]=0
0x00004e8d      be03000000     mov esi, 3
0x00004e92      31ff           xor edi, edi
0x00004e94      e8b7220000     call sym.quotearg_n_style_colon
0x00004e99      4889c3         mov rbx, rax
0x00004e9c      e8cfccffff     call sym.imp.__errno_location
0x00004ea1      8b30           mov esi, dword [rax]
0x00004ea3      488d15443f00.  lea rdx, [0x00008dee]                   ; "%s"
0x00004eaa      4889d9         mov rcx, rbx
0x00004ead      bf01000000     mov edi, 1
0x00004eb2      31c0           xor eax, eax
0x00004eb4      e8e7cfffff     call sym.imp.error
0x00004eb9      0f1f80000000.  nop dword [rax]
;-- usage:
0x00004ec0      4155           push r13
0x00004ec2      4154           push r12
0x00004ec4      ba05000000     mov edx, 5
0x00004ec9      55             push rbp
0x00004eca      53             push rbx
0x00004ecb      89fd           mov ebp, edi
0x00004ecd      4881ec880000.  sub rsp, 0x88
0x00004ed4      488b1d3d7620.  mov rbx, qword [obj.program_name]       ; [0x20c518:8]=0
0x00004edb      64488b042528.  mov rax, qword fs:[0x28]
0x00004ee4      4889442478     mov qword [rsp + 0x78], rax
0x00004ee9      31c0           xor eax, eax
0x00004eeb      85ff           test edi, edi                           ; string_fortified.h:-219
0x00004eed      742e           je 0x4f1d
0x00004eef      488d35124100.  lea rsi, str.Try___s___help__for_more_information. ; 0x9008 ; "Try '%s --help' for more information.\n"
0x00004ef6      31ff           xor edi, edi
0x00004ef8      e843cdffff     call sym.imp.dcgettext
0x00004efd      488b3d9c7320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c2a0:8]=0
0x00004f04      4889c2         mov rdx, rax
0x00004f07      4889d9         mov rcx, rbx
0x00004f0a      be01000000     mov esi, 1
0x00004f0f      31c0           xor eax, eax
0x00004f11      e82ad0ffff     call sym.imp.__fprintf_chk
0x00004f16      89ef           mov edi, ebp
0x00004f18      e803d0ffff     call sym.imp.exit
0x00004f1d      488d350c4100.  lea rsi, str.Usage:__s__OPTION_...__FILE__PREFIX ; 0x9030 ; "Usage: %s [OPTION]... [FILE [PREFIX]]\n"
0x00004f24      31ff           xor edi, edi
0x00004f26      e815cdffff     call sym.imp.dcgettext
0x00004f2b      4889da         mov rdx, rbx
0x00004f2e      4889c6         mov rsi, rax
0x00004f31      bf01000000     mov edi, 1
0x00004f36      31c0           xor eax, eax
0x00004f38      e843cfffff     call sym.imp.__printf_chk
0x00004f3d      488b1d247320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00004f44      488d350d4100.  lea rsi, str.Output_pieces_of_FILE_to_PREFIXaa__PREFIXab__...___default_size_is_1000_lines__and_default_PREFIX_is__x_. ; 0x9058 ; "Output pieces of FILE to PREFIXaa, PREFIXab, ...;\ndefault size is 1000 lines, and default PREFIX is 'x'.\n"
0x00004f4b      ba05000000     mov edx, 5
0x00004f50      31ff           xor edi, edi
0x00004f52      e8e9ccffff     call sym.imp.dcgettext
0x00004f57      4889de         mov rsi, rbx
0x00004f5a      4889c7         mov rdi, rax                            ; /src:-213
0x00004f5d      e81eceffff     call sym.imp.fputs_unlocked
0x00004f62      488b1dff7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00004f69      488d35584100.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x90c8 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00004f70      ba05000000     mov edx, 5
0x00004f75      31ff           xor edi, edi
0x00004f77      e8c4ccffff     call sym.imp.dcgettext
0x00004f7c      4889de         mov rsi, rbx
0x00004f7f      4889c7         mov rdi, rax
0x00004f82      e8f9cdffff     call sym.imp.fputs_unlocked
0x00004f87      488b1dda7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00004f8e      488d356b4100.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x9100 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00004f95      ba05000000     mov edx, 5
0x00004f9a      31ff           xor edi, edi
0x00004f9c      e89fccffff     call sym.imp.dcgettext
0x00004fa1      4889de         mov rsi, rbx
0x00004fa4      4889c7         mov rdi, rax
0x00004fa7      e8d4cdffff     call sym.imp.fputs_unlocked
0x00004fac      488d359d4100.  lea rsi, [str.a____suffix_length_N___generate_suffixes_of_length_N__default__d___________additional_suffix_SUFFIX__append_an_additional_SUFFIX_to_file_names_____b____bytes_SIZE________put_SIZE_bytes_per_output_file_____C____line_bytes_SIZE___put_at_most_SIZE_bytes_of_records_per_output_file_____d______________________use_numeric_suffixes_starting_at_0__not_alphabetic__________numeric_suffixes__FROM___same_as__d__but_allow_setting_the_start_value_____x______________________use_hex_suffixes_starting_at_0__not_alphabetic__________hex_suffixes__FROM___same_as__x__but_allow_setting_the_start_value_____e____elide_empty_files__do_not_generate_empty_output_files_with___n___________filter_COMMAND____write_to_shell_COMMAND__file_name_is__FILE_____l____lines_NUMBER______put_NUMBER_lines_records_per_output_file_____n____number_CHUNKS_____generate_CHUNKS_output_files__see_explanation_below_____t____separator_SEP_____use_SEP_instead_of_newline_as_the_record_separator__________________________________0___zero__specifies_th ; str.a____suffix_length_N___generate_suffixes_of_length_N__default__d___________additional_suffix_SUFFIX__append_an_additional_SUFFIX_to_file_names_____b____bytes_SIZE________put_SIZE_bytes_per_output_file_____C____line_bytes_SIZE___put_at_most_SIZE_bytes_of_records_per_output_file_____d______________________use_numeric_suffixes_starting_at_0__not_alphabetic__________numeric_suffixes__FROM___same_as__d__but_allow_setting_the_start_value_____x______________________use_hex_suffixes_starting_at_0__not_alphabetic__________hex_suffixes__FROM___same_as__x__but_allow_setting_the_start_value_____e____elide_empty_files__do_not_generate_empty_output_files_with___n___________filter_COMMAND____write_to_shell_COMMAND__file_name_is__FILE_____l____lines_NUMBER______put_NUMBER_lines_records_per_output_file_____n____number_CHUNKS_____generate_CHUNKS_output_files__see_explanation_below_____t____separator_SEP_____use_SEP_instead_of_newline_as_the_record_separator__________________________________0___zero__specifies_the_NUL_character_____u____unbuffered________immediately_copy_input_to_output_with___n_r_...
                                                                       ; 0x9150 ; "  -a, --suffix-length=N   generate suffixes of length N (default %d)\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\n  -b, --bytes=SIZE        put SIZE bytes per output file\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output file\n  -d                      use numeric suffixes starting at 0, not alphabetic\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\n  -x                      use hex suffixes starting at 0, not alphabetic\n      --hex-suffixes[=FROM]  same as -x, but allow setting the start value\n  -e, --elide-empty-files  do not generate empty output files with '-n'\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\n  -l, --lines=NUMBER      put NUMBER lines/records per output file\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\n                            '\0' (zero) specifies the NUL character\n  -u, --unbuffered        immediately copy input to output with '-n r/...'\n"
0x00004fb3      ba05000000     mov edx, 5
0x00004fb8      31ff           xor edi, edi
0x00004fba      e881ccffff     call sym.imp.dcgettext
0x00004fbf      488b3da27220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00004fc6      b902000000     mov ecx, 2
0x00004fcb      4889c2         mov rdx, rax
0x00004fce      be01000000     mov esi, 1
0x00004fd3      31c0           xor eax, eax
0x00004fd5      e866cfffff     call sym.imp.__fprintf_chk
0x00004fda      488b1d877220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00004fe1      488d35b04500.  lea rsi, str.verbose___________print_a_diagnostic_just_before_each______________________________output_file_is_opened ; 0x9598 ; "      --verbose           print a diagnostic just before each\n                            output file is opened\n"
0x00004fe8      ba05000000     mov edx, 5
0x00004fed      31ff           xor edi, edi
0x00004fef      e84cccffff     call sym.imp.dcgettext
0x00004ff4      4889de         mov rsi, rbx
0x00004ff7      4889c7         mov rdi, rax                            ; stdio2.h:144 #  elif !defined __cplusplus
0x00004ffa      e881cdffff     call sym.imp.fputs_unlocked
0x00004fff      488b1d627220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00005006      488d35034600.  lea rsi, str.help_____display_this_help_and_exit ; 0x9610 ; "      --help     display this help and exit\n"
0x0000500d      ba05000000     mov edx, 5
0x00005012      31ff           xor edi, edi
0x00005014      e827ccffff     call sym.imp.dcgettext
0x00005019      4889de         mov rsi, rbx
0x0000501c      4889c7         mov rdi, rax                            ; /src:-188
0x0000501f      e85ccdffff     call sym.imp.fputs_unlocked
0x00005024      488b1d3d7220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x0000502b      488d350e4600.  lea rsi, str.version__output_version_information_and_exit ; 0x9640 ; "      --version  output version information and exit\n"
0x00005032      ba05000000     mov edx, 5
0x00005037      31ff           xor edi, edi
0x00005039      e802ccffff     call sym.imp.dcgettext
0x0000503e      4889de         mov rsi, rbx
0x00005041      4889c7         mov rdi, rax
0x00005044      e837cdffff     call sym.imp.fputs_unlocked
0x00005049      488b1d187220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00005050      488d35214600.  lea rsi, str.The_SIZE_argument_is_an_integer_and_optional_unit__example:_10K_is_10_1024_.__Units_are_K_M_G_T_P_E_Z_Y__powers_of_1024__or_KB_MB_...__powers_of_1000_.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0x9678 ; "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x00005057      ba05000000     mov edx, 5
0x0000505c      31ff           xor edi, edi
0x0000505e      e8ddcbffff     call sym.imp.dcgettext
0x00005063      4889de         mov rsi, rbx
0x00005066      4889c7         mov rdi, rax
0x00005069      e812cdffff     call sym.imp.fputs_unlocked
0x0000506e      488b1df37120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00005075      488d35d44600.  lea rsi, str.CHUNKS_may_be:____N_______split_into_N_files_based_on_size_of_input____K_N_____output_Kth_of_N_to_stdout____l_N_____split_into_N_files_without_splitting_lines_records____l_K_N___output_Kth_of_N_to_stdout_without_splitting_lines_records____r_N_____like__l__but_use_round_robin_distribution____r_K_N___likewise_but_only_output_Kth_of_N_to_stdout ; 0x9750 ; "\nCHUNKS may be:\n  N       split into N files based on size of input\n  K/N     output Kth of N to stdout\n  l/N     split into N files without splitting lines/records\n  l/K/N   output Kth of N to stdout without splitting lines/records\n  r/N     like 'l' but use round robin distribution\n  r/K/N   likewise but only output Kth of N to stdout\n"
0x0000507c      ba05000000     mov edx, 5
0x00005081      31ff           xor edi, edi
0x00005083      e8b8cbffff     call sym.imp.dcgettext
0x00005088      4889de         mov rsi, rbx
0x0000508b      4889c7         mov rdi, rax
0x0000508e      488d1d703b00.  lea rbx, str.split                      ; 0x8c05 ; "split"
0x00005095      e8e6ccffff     call sym.imp.fputs_unlocked
0x0000509a      488d056a3b00.  lea rax, [0x00008c0b]                   ; "["
0x000050a1      488d0da43b00.  lea rcx, str.sha256sum                  ; 0x8c4c ; "sha256sum"
0x000050a8      48c744246000.  mov qword [rsp + 0x60], 0
0x000050b1      48c744246800.  mov qword [rsp + 0x68], 0
0x000050ba      4889e2         mov rdx, rsp
0x000050bd      48890424       mov qword [rsp], rax
0x000050c1      488d05453b00.  lea rax, str.test_invocation            ; 0x8c0d ; "test invocation"
0x000050c8      48894c2430     mov qword [rsp + 0x30], rcx
0x000050cd      488d0d823b00.  lea rcx, str.sha384sum                  ; 0x8c56 ; "sha384sum"
0x000050d4      4889442408     mov qword [rsp + 8], rax
0x000050d9      488d05a53b00.  lea rax, [0x00008c85]                   ; "coreutils"
0x000050e0      48894c2440     mov qword [rsp + 0x40], rcx
0x000050e5      488d0d743b00.  lea rcx, str.sha512sum                  ; 0x8c60 ; "sha512sum"
0x000050ec      4889442410     mov qword [rsp + 0x10], rax
0x000050f1      488d05253b00.  lea rax, str.Multi_call_invocation      ; 0x8c1d ; "Multi-call invocation"
0x000050f8      48894c2450     mov qword [rsp + 0x50], rcx
0x000050fd      4889442418     mov qword [rsp + 0x18], rax             ; stdio2.h:198 #   define asprintf(ptr, ...) \
0x00005102      488d052a3b00.  lea rax, str.sha224sum                  ; 0x8c33 ; "sha224sum"
0x00005109      4889442420     mov qword [rsp + 0x20], rax
0x0000510e      488d05283b00.  lea rax, str.sha2_utilities             ; 0x8c3d ; "sha2 utilities"
0x00005115      4889442428     mov qword [rsp + 0x28], rax
0x0000511a      4889442438     mov qword [rsp + 0x38], rax
0x0000511f      4889442448     mov qword [rsp + 0x48], rax
0x00005124      4889442458     mov qword [rsp + 0x58], rax
0x00005129      0f1f80000000.  nop dword [rax]
0x00005130      4883c210       add rdx, 0x10
0x00005134      488b3a         mov rdi, qword [rdx]
0x00005137      4885ff         test rdi, rdi
0x0000513a      7413           je 0x514f                               ; stdio2.h:205
0x0000513c      b906000000     mov ecx, 6
0x00005141      4889de         mov rsi, rbx
0x00005144      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005146      0f97c0         seta al                                 ; stdio2.h:206 __fortify_function int
0x00005149      1c00           sbb al, 0
0x0000514b      84c0           test al, al
0x0000514d      75e1           jne 0x5130
0x0000514f      4c8b6208       mov r12, qword [rdx + 8]
0x00005153      31ff           xor edi, edi
0x00005155      ba05000000     mov edx, 5
0x0000515a      488d35093b00.  lea rsi, str.s_online_help:___s         ; 0x8c6a ; "\n%s online help: <%s>\n"
0x00005161      4d85e4         test r12, r12
0x00005164      0f84c1000000   je 0x522b
0x0000516a      e8d1caffff     call sym.imp.dcgettext
0x0000516f      488d0d324700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x98a8 ; "https://www.gnu.org/software/coreutils/"
0x00005176      488d15043b00.  lea rdx, str.GNU_coreutils              ; 0x8c81 ; "GNU coreutils"
0x0000517d      4889c6         mov rsi, rax
0x00005180      bf01000000     mov edi, 1
0x00005185      31c0           xor eax, eax
0x00005187      e8f4ccffff     call sym.imp.__printf_chk
0x0000518c      31f6           xor esi, esi
0x0000518e      bf05000000     mov edi, 5
0x00005193      e8d8ccffff     call sym.imp.setlocale
0x00005198      4885c0         test rax, rax
0x0000519b      741c           je 0x51b9
0x0000519d      488d35eb3a00.  lea rsi, [0x00008c8f]                   ; "en_"
0x000051a4      ba03000000     mov edx, 3
0x000051a9      4889c7         mov rdi, rax
0x000051ac      e8cfc9ffff     call sym.imp.strncmp
0x000051b1      85c0           test eax, eax
0x000051b3      0f8507010000   jne 0x52c0
0x000051b9      488d35d33a00.  lea rsi, str.Full_documentation___s_s   ; 0x8c93 ; "Full documentation <%s%s>\n"
0x000051c0      31ff           xor edi, edi
0x000051c2      ba05000000     mov edx, 5
0x000051c7      e874caffff     call sym.imp.dcgettext
0x000051cc      488d0d323a00.  lea rcx, str.split                      ; 0x8c05 ; "split"
0x000051d3      488d15ce4600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x98a8 ; "https://www.gnu.org/software/coreutils/"
0x000051da      4889c6         mov rsi, rax
0x000051dd      bf01000000     mov edi, 1
0x000051e2      31c0           xor eax, eax
0x000051e4      e897ccffff     call sym.imp.__printf_chk
0x000051e9      4939dc         cmp r12, rbx
0x000051ec      488d0d343a00.  lea rcx, [0x00008c27]                   ; " invocation"
0x000051f3      488d1d474f00.  lea rbx, [0x0000a141]
0x000051fa      480f44d9       cmove rbx, rcx
0x000051fe      488d35134700.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x9918 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00005205      31ff           xor edi, edi
0x00005207      ba05000000     mov edx, 5
0x0000520c      e82fcaffff     call sym.imp.dcgettext
0x00005211      4889d9         mov rcx, rbx
0x00005214      4889c6         mov rsi, rax
0x00005217      4c89e2         mov rdx, r12
0x0000521a      bf01000000     mov edi, 1
0x0000521f      31c0           xor eax, eax
0x00005221      e85accffff     call sym.imp.__printf_chk
0x00005226      e9ebfcffff     jmp 0x4f16
0x0000522b      e810caffff     call sym.imp.dcgettext
0x00005230      488d0d714600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x98a8 ; "https://www.gnu.org/software/coreutils/"
0x00005237      488d15433a00.  lea rdx, str.GNU_coreutils              ; 0x8c81 ; "GNU coreutils"
0x0000523e      4889c6         mov rsi, rax
0x00005241      bf01000000     mov edi, 1
0x00005246      31c0           xor eax, eax
0x00005248      e833ccffff     call sym.imp.__printf_chk
0x0000524d      31f6           xor esi, esi
0x0000524f      bf05000000     mov edi, 5
0x00005254      e817ccffff     call sym.imp.setlocale
0x00005259      4885c0         test rax, rax
0x0000525c      7418           je 0x5276
0x0000525e      488d352a3a00.  lea rsi, [0x00008c8f]                   ; "en_"
0x00005265      ba03000000     mov edx, 3
0x0000526a      4889c7         mov rdi, rax
0x0000526d      e80ec9ffff     call sym.imp.strncmp
0x00005272      85c0           test eax, eax
0x00005274      7543           jne 0x52b9
0x00005276      488d35163a00.  lea rsi, str.Full_documentation___s_s   ; 0x8c93 ; "Full documentation <%s%s>\n"
0x0000527d      ba05000000     mov edx, 5
0x00005282      31ff           xor edi, edi
0x00005284      4c8d257a3900.  lea r12, str.split                      ; 0x8c05 ; "split"
0x0000528b      488d1d953900.  lea rbx, [0x00008c27]                   ; " invocation"
0x00005292      e8a9c9ffff     call sym.imp.dcgettext
0x00005297      488d0d673900.  lea rcx, str.split                      ; 0x8c05 ; "split"
0x0000529e      488d15034600.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x98a8 ; "https://www.gnu.org/software/coreutils/"
0x000052a5      4889c6         mov rsi, rax
0x000052a8      bf01000000     mov edi, 1
0x000052ad      31c0           xor eax, eax
0x000052af      e8cccbffff     call sym.imp.__printf_chk
0x000052b4      e945ffffff     jmp 0x51fe
0x000052b9      4c8d25453900.  lea r12, str.split                      ; 0x8c05 ; "split"
0x000052c0      4c8b2da16f20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x000052c7      488d35024600.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x98d0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000052ce      31ff           xor edi, edi
0x000052d0      ba05000000     mov edx, 5
0x000052d5      e866c9ffff     call sym.imp.dcgettext
0x000052da      4c89ee         mov rsi, r13
0x000052dd      4889c7         mov rdi, rax
0x000052e0      e89bcaffff     call sym.imp.fputs_unlocked
0x000052e5      e9cffeffff     jmp 0x51b9
0x000052ea      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000052f0      48893d197220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20c510:8]=0
0x000052f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000052f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005300      40883d017220.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20c508:1]=0
0x00005307      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005308      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005310      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005311      53             push rbx
0x00005312      4883ec08       sub rsp, 8
0x00005316      488b3d4b6f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x0000531d      e83e330000     call sym.close_stream
0x00005322      85c0           test eax, eax
0x00005324      7416           je 0x533c
0x00005326      e845c8ffff     call sym.imp.__errno_location
0x0000532b      803dd6712000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20c508:1]=0
0x00005332      4889c3         mov rbx, rax
0x00005335      741c           je 0x5353
0x00005337      833820         cmp dword [rax], 0x20
0x0000533a      7517           jne 0x5353
0x0000533c      488b3d5d6f20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c2a0:8]=0
0x00005343      e818330000     call sym.close_stream
0x00005348      85c0           test eax, eax
0x0000534a      7546           jne 0x5392
0x0000534c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005350      5b             pop rbx
0x00005351      5d             pop rbp
0x00005352      c3             ret
0x00005353      488d35e13a00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8e3b ; "write error"
0x0000535a      31ff           xor edi, edi
0x0000535c      ba05000000     mov edx, 5
0x00005361      e8dac8ffff     call sym.imp.dcgettext
0x00005366      488b3da37120.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20c510:8]=0
0x0000536d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005370      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005373      7428           je 0x539d
0x00005375      e8a61d0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000537a      8b33           mov esi, dword [rbx]
0x0000537c      488d15673a00.  lea rdx, str.s:__s                      ; 0x8dea ; "%s: %s"
0x00005383      4889c1         mov rcx, rax
0x00005386      4989e8         mov r8, rbp
0x00005389      31ff           xor edi, edi
0x0000538b      31c0           xor eax, eax
0x0000538d      e80ecbffff     call sym.imp.error
0x00005392      8b3d986c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20c030:4]=1
0x00005398      e8f3c7ffff     call sym.imp._exit
0x0000539d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000539f      488d15483a00.  lea rdx, [0x00008dee]                   ; "%s"
0x000053a6      4889c1         mov rcx, rax
0x000053a9      31ff           xor edi, edi
0x000053ab      31c0           xor eax, eax
0x000053ad      e8eecaffff     call sym.imp.error
0x000053b2      ebde           jmp 0x5392
0x000053b4      662e0f1f8400.  nop word cs:[rax + rax]
0x000053be      6690           nop
;-- last_component:
0x000053c0      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x000053c3      4889f8         mov rax, rdi
0x000053c6      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000053c9      7511           jne 0x53dc
0x000053cb      0f1f440000     nop dword [rax + rax]
0x000053d0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x000053d4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000053d7      80fa2f         cmp dl, 0x2f
0x000053da      74f4           je 0x53d0
0x000053dc      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000053de      743a           je 0x541a
0x000053e0      4889c1         mov rcx, rax
0x000053e3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x000053e5      eb1e           jmp 0x5405
0x000053e7      660f1f840000.  nop word [rax + rax]
0x000053f0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x000053f3      7405           je 0x53fa
0x000053f5      4889c8         mov rax, rcx
0x000053f8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x000053fa      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000053fe      0fb611         movzx edx, byte [rcx]
0x00005401      84d2           test dl, dl
0x00005403      7415           je 0x541a
0x00005405      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00005408      75e6           jne 0x53f0
0x0000540a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000540e      0fb611         movzx edx, byte [rcx]
0x00005411      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00005416      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00005418      75eb           jne 0x5405
0x0000541a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000541c      0f1f4000       nop dword [rax]
;-- base_len:
0x00005420      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00005421      4889fb         mov rbx, rdi
0x00005424      e837c8ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005429      4883f801       cmp rax, 1
0x0000542d      760b           jbe 0x543a
0x0000542f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00005434      488d50ff       lea rdx, [rax - 1]
0x00005438      740e           je 0x5448
0x0000543a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000543b      c3             ret
0x0000543c      0f1f4000       nop dword [rax]
0x00005440      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005443      0f1f440000     nop dword [rax + rax]
0x00005448      4883fa01       cmp rdx, 1
0x0000544c      7412           je 0x5460
0x0000544e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00005453      488d42ff       lea rax, [rdx - 1]
0x00005457      74e7           je 0x5440
0x00005459      4889d0         mov rax, rdx
0x0000545c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000545d      c3             ret
0x0000545e      6690           nop
0x00005460      b801000000     mov eax, 1
0x00005465      5b             pop rbx
0x00005466      c3             ret
0x00005467      660f1f840000.  nop word [rax + rax]
;-- open_safer:
0x00005470      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00005474      4889542430     mov qword [rsp + 0x30], rdx
0x00005479      31d2           xor edx, edx
0x0000547b      64488b042528.  mov rax, qword fs:[0x28]
0x00005484      4889442418     mov qword [rsp + 0x18], rax
0x00005489      31c0           xor eax, eax
0x0000548b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000548f      7527           jne 0x54b8
0x00005491      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00005493      e838caffff     call sym.imp.open
0x00005498      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000549a      e8611f0000     call sym.fd_safer
0x0000549f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x000054a4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000054ad      752a           jne 0x54d9
0x000054af      4883c458       add rsp, 0x58
0x000054b3      c3             ret
0x000054b4      0f1f4000       nop dword [rax]
0x000054b8      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x000054bd      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x000054c4      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x000054c8      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x000054cd      488d442420     lea rax, [rsp + 0x20]
0x000054d2      4889442410     mov qword [rsp + 0x10], rax
0x000054d7      ebb8           jmp 0x5491
0x000054d9      e892c7ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x000054de      6690           nop
;-- fd_reopen:
0x000054e0      4155           push r13                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x000054e2      4154           push r12
0x000054e4      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000054e6      55             push rbp                                ; ../coreutils-8.31/lib/fd-reopen.c:33
0x000054e7      53             push rbx
0x000054e8      89fd           mov ebp, edi
0x000054ea      4889f7         mov rdi, rsi
0x000054ed      89d6           mov esi, edx
0x000054ef      89ca           mov edx, ecx
0x000054f1      4883ec08       sub rsp, 8
0x000054f5      e8d6c9ffff     call sym.imp.open                       ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000054fa      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/fd-reopen.c:36
0x000054fc      89c3           mov ebx, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000054fe      7429           je 0x5529                               ; ../coreutils-8.31/lib/fd-reopen.c:36
0x00005500      85c0           test eax, eax
0x00005502      7825           js 0x5529
0x00005504      89ee           mov esi, ebp                            ; ../coreutils-8.31/lib/fd-reopen.c:40
0x00005506      89c7           mov edi, eax
0x00005508      e893c7ffff     call sym.imp.dup2
0x0000550d      4189c4         mov r12d, eax
0x00005510      e85bc6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-reopen.c:41
0x00005515      448b28         mov r13d, dword [rax]
0x00005518      4889c5         mov rbp, rax
0x0000551b      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-reopen.c:42
0x0000551d      e8fec7ffff     call sym.imp.close
0x00005522      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-reopen.c:44
0x00005525      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-reopen.c:43
0x00005529      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-reopen.c:46
0x0000552d      89d8           mov eax, ebx
0x0000552f      5b             pop rbx
0x00005530      5d             pop rbp
0x00005531      415c           pop r12
0x00005533      415d           pop r13
0x00005535      c3             ret
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
;-- full_write:
0x00005540      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x00005542      4154           push r12
0x00005544      55             push rbp
0x00005545      53             push rbx
0x00005546      4883ec08       sub rsp, 8
0x0000554a      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000554d      7462           je 0x55b1
0x0000554f      4189fd         mov r13d, edi
0x00005552      4889f5         mov rbp, rsi
0x00005555      4889d3         mov rbx, rdx
0x00005558      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000555b      eb13           jmp 0x5570
0x0000555d      0f1f00         nop dword [rax]
0x00005560      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x00005563      7433           je 0x5598
0x00005565      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x00005568      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000556b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000556e      7414           je 0x5584
0x00005570      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x00005573      4889ee         mov rsi, rbp
0x00005576      4489ef         mov edi, r13d
0x00005579      e8221e0000     call sym.safe_write
0x0000557e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x00005582      75dc           jne 0x5560
0x00005584      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x00005588      4c89e0         mov rax, r12
0x0000558b      5b             pop rbx
0x0000558c      5d             pop rbp
0x0000558d      415c           pop r12
0x0000558f      415d           pop r13
0x00005591      c3             ret
0x00005592      660f1f440000   nop word [rax + rax]
0x00005598      e8d3c5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000559d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x000055a3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x000055a7      4c89e0         mov rax, r12
0x000055aa      5b             pop rbx
0x000055ab      5d             pop rbp
0x000055ac      415c           pop r12
0x000055ae      415d           pop r13
0x000055b0      c3             ret
0x000055b1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x000055b4      ebce           jmp 0x5584                              ; ../coreutils-8.31/lib/full-write.c:78
0x000055b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- umaxtostr:
0x000055c0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x000055c4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000055c8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x000055d2      660f1f440000   nop word [rax + rax]
0x000055d8      4889f8         mov rax, rdi
0x000055db      4883e901       sub rcx, 1
0x000055df      48f7e6         mul rsi
0x000055e2      48c1ea03       shr rdx, 3
0x000055e6      488d0492       lea rax, [rdx + rdx*4]
0x000055ea      4801c0         add rax, rax
0x000055ed      4829c7         sub rdi, rax
0x000055f0      83c730         add edi, 0x30
0x000055f3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x000055f6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x000055f9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x000055fc      75da           jne 0x55d8
0x000055fe      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00005601      c3             ret
0x00005602      662e0f1f8400.  nop word cs:[rax + rax]
0x0000560c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00005610      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00005613      53             push rbx
0x00005614      7477           je 0x568d                               ; ../coreutils-8.31/lib/progname.c:51
0x00005616      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000561b      4889fb         mov rbx, rdi
0x0000561e      e89dc6ffff     call sym.imp.strrchr
0x00005623      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00005626      7455           je 0x567d
0x00005628      4c8d4001       lea r8, [rax + 1]
0x0000562c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000562f      4829da         sub rdx, rbx
0x00005632      4883fa06       cmp rdx, 6
0x00005636      7e45           jle 0x567d
0x00005638      488d70fa       lea rsi, [rax - 6]
0x0000563c      488d3dc54500.  lea rdi, str..libs                      ; 0x9c08 ; "/.libs/"
0x00005643      b907000000     mov ecx, 7
0x00005648      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000564a      0f97c2         seta dl
0x0000564d      80da00         sbb dl, 0
0x00005650      84d2           test dl, dl
0x00005652      7529           jne 0x567d
0x00005654      488d3db54500.  lea rdi, [0x00009c10]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000565b      b903000000     mov ecx, 3
0x00005660      4c89c6         mov rsi, r8
0x00005663      4c89c3         mov rbx, r8
0x00005666      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005668      0f97c2         seta dl
0x0000566b      80da00         sbb dl, 0
0x0000566e      84d2           test dl, dl
0x00005670      750b           jne 0x567d
0x00005672      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00005676      48891de36b20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20c260:8]=0
0x0000567d      48891d946e20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20c518:8]=0
0x00005684      48891df56b20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20c280:8]=0
0x0000568b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000568c      c3             ret
0x0000568d      488b0d0c6c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c2a0:8]=0
0x00005694      488d3d354500.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x9bd0 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000569b      ba37000000     mov edx, 0x37                           ; '7'
0x000056a0      be01000000     mov esi, 1
0x000056a5      e886c8ffff     call sym.imp.fwrite
0x000056aa      e8b1c4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000056af      90             nop
;-- gettext_quote.part.1:
0x000056b0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000056b1      53             push rbx
0x000056b2      4889fd         mov rbp, rdi
0x000056b5      89f3           mov ebx, esi
0x000056b7      4883ec08       sub rsp, 8
0x000056bb      e880300000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000056c0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000056c3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000056c6      80fa55         cmp dl, 0x55
0x000056c9      7475           je 0x5740
0x000056cb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000056ce      7420           je 0x56f0
0x000056d0      488d054c4500.  lea rax, str.l______l                   ; 0x9c23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000056d7      488d15474500.  lea rdx, [0x00009c25]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000056de      83fb09         cmp ebx, 9
0x000056e1      480f45c2       cmovne rax, rdx
0x000056e5      4883c408       add rsp, 8
0x000056e9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000056ea      5d             pop rbp
0x000056eb      c3             ret
0x000056ec      0f1f4000       nop dword [rax]
0x000056f0      0fb65001       movzx edx, byte [rax + 1]
0x000056f4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000056f7      80fa42         cmp dl, 0x42
0x000056fa      75d4           jne 0x56d0
0x000056fc      80780231       cmp byte [rax + 2], 0x31
0x00005700      75ce           jne 0x56d0
0x00005702      80780338       cmp byte [rax + 3], 0x38
0x00005706      75c8           jne 0x56d0
0x00005708      80780430       cmp byte [rax + 4], 0x30
0x0000570c      75c2           jne 0x56d0
0x0000570e      80780533       cmp byte [rax + 5], 0x33
0x00005712      75bc           jne 0x56d0
0x00005714      80780630       cmp byte [rax + 6], 0x30
0x00005718      75b6           jne 0x56d0
0x0000571a      80780700       cmp byte [rax + 7], 0
0x0000571e      75b0           jne 0x56d0
0x00005720      807d0060       cmp byte [rbp], 0x60
0x00005724      488d05f14400.  lea rax, [0x00009c1c]
0x0000572b      488d15ee4400.  lea rdx, [0x00009c20]
0x00005732      480f45c2       cmovne rax, rdx
0x00005736      4883c408       add rsp, 8
0x0000573a      5b             pop rbx
0x0000573b      5d             pop rbp
0x0000573c      c3             ret
0x0000573d      0f1f00         nop dword [rax]
0x00005740      0fb65001       movzx edx, byte [rax + 1]
0x00005744      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005747      80fa54         cmp dl, 0x54
0x0000574a      7584           jne 0x56d0
0x0000574c      0fb65002       movzx edx, byte [rax + 2]
0x00005750      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00005753      80fa46         cmp dl, 0x46
0x00005756      0f8574ffffff   jne 0x56d0
0x0000575c      8078032d       cmp byte [rax + 3], 0x2d
0x00005760      0f856affffff   jne 0x56d0
0x00005766      80780438       cmp byte [rax + 4], 0x38
0x0000576a      0f8560ffffff   jne 0x56d0
0x00005770      80780500       cmp byte [rax + 5], 0
0x00005774      0f8556ffffff   jne 0x56d0
0x0000577a      807d0060       cmp byte [rbp], 0x60
0x0000577e      488d058f4400.  lea rax, [0x00009c14]                   ; "\u2018"
0x00005785      488d158c4400.  lea rdx, [0x00009c18]                   ; "\u2019"
0x0000578c      480f45c2       cmovne rax, rdx
0x00005790      4883c408       add rsp, 8
0x00005794      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00005795      5d             pop rbp
0x00005796      c3             ret
0x00005797      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000057a0      4157           push r15
0x000057a2      4156           push r14
0x000057a4      4589c7         mov r15d, r8d
0x000057a7      4155           push r13
0x000057a9      4154           push r12
0x000057ab      4989fe         mov r14, rdi
0x000057ae      55             push rbp
0x000057af      53             push rbx
0x000057b0      4489cb         mov ebx, r9d
0x000057b3      4989f5         mov r13, rsi
0x000057b6      4889cd         mov rbp, rcx
0x000057b9      83e302         and ebx, 2
0x000057bc      4881ecb80000.  sub rsp, 0xb8
0x000057c3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000057cb      4889542410     mov qword [rsp + 0x10], rdx
0x000057d0      4489442408     mov dword [rsp + 8], r8d
0x000057d5      44894c2478     mov dword [rsp + 0x78], r9d
0x000057da      4889442420     mov qword [rsp + 0x20], rax
0x000057df      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000057e7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000057ec      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000057f4      4889442460     mov qword [rsp + 0x60], rax
0x000057f9      64488b042528.  mov rax, qword fs:[0x28]
0x00005802      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000580a      31c0           xor eax, eax
0x0000580c      e83fc4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00005811      4183ff0a       cmp r15d, 0xa
0x00005815      4889442458     mov qword [rsp + 0x58], rax
0x0000581a      0f87af110000   ja 0x69cf
0x00005820      488d0d594400.  lea rcx, [0x00009c80]
0x00005827      4489fa         mov edx, r15d
0x0000582a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000582e      4801c8         add rax, rcx
0x00005831      ffe0           jmp rax
0x00005833      c644240e01     mov byte [rsp + 0xe], 1
0x00005838      c644247c00     mov byte [rsp + 0x7c], 0
0x0000583d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00005840      48c744245000.  mov qword [rsp + 0x50], 0
0x00005849      c644240f01     mov byte [rsp + 0xf], 1
0x0000584e      c644240d00     mov byte [rsp + 0xd], 0
0x00005853      488d05cb4300.  lea rax, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000585a      48c744241801.  mov qword [rsp + 0x18], 1
0x00005863      4531ff         xor r15d, r15d
0x00005866      c74424080200.  mov dword [rsp + 8], 2
0x0000586e      4889442448     mov qword [rsp + 0x48], rax
0x00005873      4531db         xor r11d, r11d
0x00005876      4889e8         mov rax, rbp
0x00005879      4589e0         mov r8d, r12d
0x0000587c      4c89dd         mov rbp, r11
0x0000587f      4989c3         mov r11, rax
0x00005882      660f1f440000   nop word [rax + rax]
0x00005888      4939eb         cmp r11, rbp
0x0000588b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000588f      4983fbff       cmp r11, 0xffffffffffffffff
0x00005893      750d           jne 0x58a2
0x00005895      488b442410     mov rax, qword [rsp + 0x10]
0x0000589a      803c2800       cmp byte [rax + rbp], 0
0x0000589e      410f95c4       setne r12b
0x000058a2      4584e4         test r12b, r12b
0x000058a5      0f8455060000   je 0x5f00
0x000058ab      837c240802     cmp dword [rsp + 8], 2
0x000058b0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000058b5      4c8d0c2f       lea r9, [rdi + rbp]
0x000058b9      0f95c0         setne al
0x000058bc      2244240d       and al, byte [rsp + 0xd]
0x000058c0      4189c2         mov r10d, eax
0x000058c3      0f84a7000000   je 0x5970
0x000058c9      488b442418     mov rax, qword [rsp + 0x18]
0x000058ce      4885c0         test rax, rax
0x000058d1      0f8429040000   je 0x5d00
0x000058d7      4983fbff       cmp r11, 0xffffffffffffffff
0x000058db      488d5c0500     lea rbx, [rbp + rax]
0x000058e0      752e           jne 0x5910
0x000058e2      4883f801       cmp rax, 1
0x000058e6      7628           jbe 0x5910
0x000058e8      4488442438     mov byte [rsp + 0x38], r8b
0x000058ed      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000058f2      4c894c2428     mov qword [rsp + 0x28], r9
0x000058f7      e864c3ffff     call sym.imp.strlen
0x000058fc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00005902      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00005908      4989c3         mov r11, rax
0x0000590b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005910      4c39db         cmp rbx, r11
0x00005913      4488542428     mov byte [rsp + 0x28], r10b
0x00005918      0f87b2050000   ja 0x5ed0
0x0000591e      488b542418     mov rdx, qword [rsp + 0x18]
0x00005923      488b742448     mov rsi, qword [rsp + 0x48]
0x00005928      4c89cf         mov rdi, r9
0x0000592b      4c895c2440     mov qword [rsp + 0x40], r11
0x00005930      4488442438     mov byte [rsp + 0x38], r8b
0x00005935      4c894c2430     mov qword [rsp + 0x30], r9
0x0000593a      e831c4ffff     call sym.imp.memcmp
0x0000593f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00005941      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005946      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000594c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00005951      0f8579050000   jne 0x5ed0
0x00005957      807c240f00     cmp byte [rsp + 0xf], 0
0x0000595c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005962      0f857d0f0000   jne 0x68e5
0x00005968      0f1f84000000.  nop dword [rax + rax]
0x00005970      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00005974      80fb7e         cmp bl, 0x7e
0x00005977      0f871b030000   ja 0x5c98
0x0000597d      488d0d284300.  lea rcx, [0x00009cac]
0x00005984      0fb6d3         movzx edx, bl
0x00005987      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000598b      4801c8         add rax, rcx
0x0000598e      ffe0           jmp rax
0x00005990      4531d2         xor r10d, r10d
0x00005993      4983fb01       cmp r11, 1
0x00005997      0f95c0         setne al
0x0000599a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000599e      750c           jne 0x59ac
0x000059a0      488b442410     mov rax, qword [rsp + 0x10]
0x000059a5      80780100       cmp byte [rax + 1], 0
0x000059a9      0f95c0         setne al
0x000059ac      837c240802     cmp dword [rsp + 8], 2
0x000059b1      0f94c2         sete dl
0x000059b4      84c0           test al, al
0x000059b6      0f844c020000   je 0x5c08
0x000059bc      4531e4         xor r12d, r12d
0x000059bf      31c0           xor eax, eax
0x000059c1      0f1f80000000.  nop dword [rax]
0x000059c8      807c240d01     cmp byte [rsp + 0xd], 1
0x000059cd      0f850f010000   jne 0x5ae2
0x000059d3      84d2           test dl, dl
0x000059d5      0f8507010000   jne 0x5ae2
0x000059db      488b742420     mov rsi, qword [rsp + 0x20]
0x000059e0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000059e3      7414           je 0x59f9
0x000059e5      89da           mov edx, ebx
0x000059e7      c0ea05         shr dl, 5
0x000059ea      0fb6d2         movzx edx, dl
0x000059ed      8b1496         mov edx, dword [rsi + rdx*4]
0x000059f0      0fa3da         bt edx, ebx
0x000059f3      0f824a010000   jb 0x5b43
0x000059f9      4584d2         test r10b, r10b
0x000059fc      0f8541010000   jne 0x5b43
0x00005a02      83f001         xor eax, 1
0x00005a05      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00005a09      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00005a0c      84c0           test al, al
0x00005a0e      7420           je 0x5a30                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00005a10      4d39fd         cmp r13, r15
0x00005a13      7605           jbe 0x5a1a
0x00005a15      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005a1a      498d4701       lea rax, [r15 + 1]
0x00005a1e      4939c5         cmp r13, rax
0x00005a21      7606           jbe 0x5a29
0x00005a23      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005a29      4983c702       add r15, 2
0x00005a2d      4531c0         xor r8d, r8d
0x00005a30      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00005a33      7304           jae 0x5a39                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00005a35      43881c3e       mov byte [r14 + r15], bl
0x00005a39      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00005a3e      4983c701       add r15, 1
0x00005a42      b800000000     mov eax, 0
0x00005a47      4584e4         test r12b, r12b
0x00005a4a      0f44f8         cmove edi, eax
0x00005a4d      40887c240e     mov byte [rsp + 0xe], dil
0x00005a52      e931feffff     jmp 0x5888
0x00005a57      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00005a60      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00005a63      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00005a67      83f802         cmp eax, 2
0x00005a6a      0f84b8050000   je 0x6028
0x00005a70      83f805         cmp eax, 5
0x00005a73      0f846f050000   je 0x5fe8
0x00005a79      83f802         cmp eax, 2
0x00005a7c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00005a81      0f94c2         sete dl
0x00005a84      4531e4         xor r12d, r12d
0x00005a87      31c0           xor eax, eax
0x00005a89      e93affffff     jmp 0x59c8
0x00005a8e      6690           nop
0x00005a90      4531d2         xor r10d, r10d
0x00005a93      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00005a98      0f8402050000   je 0x5fa0
0x00005a9e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00005aa3      31d2           xor edx, edx
0x00005aa5      31c0           xor eax, eax
0x00005aa7      bb27000000     mov ebx, 0x27                           ; '''
0x00005aac      e917ffffff     jmp 0x59c8
0x00005ab1      0f1f80000000.  nop dword [rax]
0x00005ab8      ba09000000     mov edx, 9
0x00005abd      bb74000000     mov ebx, 0x74                           ; 't'
0x00005ac2      837c240802     cmp dword [rsp + 8], 2
0x00005ac7      0f94c0         sete al
0x00005aca      2244240f       and al, byte [rsp + 0xf]
0x00005ace      0f854a010000   jne 0x5c1e
0x00005ad4      807c240d00     cmp byte [rsp + 0xd], 0
0x00005ad9      7565           jne 0x5b40
0x00005adb      89d3           mov ebx, edx
0x00005add      4531e4         xor r12d, r12d
0x00005ae0      31c0           xor eax, eax
0x00005ae2      807c240f00     cmp byte [rsp + 0xf], 0
0x00005ae7      0f85eefeffff   jne 0x59db
0x00005aed      e907ffffff     jmp 0x59f9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00005af2      660f1f440000   nop word [rax + rax]
0x00005af8      ba08000000     mov edx, 8
0x00005afd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005b02      ebd0           jmp 0x5ad4
0x00005b04      0f1f4000       nop dword [rax]
0x00005b08      837c240802     cmp dword [rsp + 8], 2
0x00005b0d      0f84cd030000   je 0x5ee0
0x00005b13      807c240d00     cmp byte [rsp + 0xd], 0
0x00005b18      0f8412020000   je 0x5d30
0x00005b1e      807c240f00     cmp byte [rsp + 0xf], 0
0x00005b23      0f8407020000   je 0x5d30
0x00005b29      48837c241800   cmp qword [rsp + 0x18], 0
0x00005b2f      0f85b6030000   jne 0x5eeb
0x00005b35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005b3a      660f1f440000   nop word [rax + rax]
0x00005b40      4531e4         xor r12d, r12d
0x00005b43      837c240802     cmp dword [rsp + 8], 2
0x00005b48      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00005b4b      807c240f00     cmp byte [rsp + 0xf], 0
0x00005b50      89d0           mov eax, edx
0x00005b52      0f8550080000   jne 0x63a8
0x00005b58      4489c0         mov eax, r8d
0x00005b5b      83f001         xor eax, 1
0x00005b5e      20d0           and al, dl
0x00005b60      742f           je 0x5b91
0x00005b62      4d39fd         cmp r13, r15
0x00005b65      7605           jbe 0x5b6c
0x00005b67      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005b6c      498d5701       lea rdx, [r15 + 1]
0x00005b70      4939d5         cmp r13, rdx
0x00005b73      7606           jbe 0x5b7b
0x00005b75      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005b7b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00005b7f      4939d5         cmp r13, rdx
0x00005b82      7606           jbe 0x5b8a
0x00005b84      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00005b8a      4983c703       add r15, 3
0x00005b8e      4189c0         mov r8d, eax
0x00005b91      4d39fd         cmp r13, r15
0x00005b94      7605           jbe 0x5b9b
0x00005b96      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005b9b      4983c701       add r15, 1
0x00005b9f      4883c501       add rbp, 1
0x00005ba3      e988feffff     jmp 0x5a30
0x00005ba8      0f1f84000000.  nop dword [rax + rax]
0x00005bb0      807c240d00     cmp byte [rsp + 0xd], 0
0x00005bb5      0f85c8010000   jne 0x5d83
0x00005bbb      31d2           xor edx, edx
0x00005bbd      f644247801     test byte [rsp + 0x78], 1
0x00005bc2      0f8413ffffff   je 0x5adb
0x00005bc8      4883c501       add rbp, 1
0x00005bcc      e9b7fcffff     jmp 0x5888
0x00005bd1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00005bd8      837c240802     cmp dword [rsp + 8], 2
0x00005bdd      0f94c2         sete dl
0x00005be0      31c0           xor eax, eax
0x00005be2      e9e1fdffff     jmp 0x59c8
0x00005be7      660f1f840000.  nop word [rax + rax]
0x00005bf0      ba07000000     mov edx, 7
0x00005bf5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00005bfa      e9d5feffff     jmp 0x5ad4
0x00005bff      90             nop
0x00005c00      837c240802     cmp dword [rsp + 8], 2
0x00005c05      0f94c2         sete dl
0x00005c08      4885ed         test rbp, rbp
0x00005c0b      0f85abfdffff   jne 0x59bc
0x00005c11      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005c16      20d0           and al, dl
0x00005c18      0f84aafdffff   je 0x59c8
0x00005c1e      4c89dd         mov rbp, r11
0x00005c21      c74424080200.  mov dword [rsp + 8], 2
0x00005c29      e9fb060000     jmp 0x6329
0x00005c2e      6690           nop
0x00005c30      837c240802     cmp dword [rsp + 8], 2
0x00005c35      0f94c2         sete dl
0x00005c38      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00005c3b      ebd4           jmp 0x5c11
0x00005c3d      0f1f00         nop dword [rax]
0x00005c40      837c240802     cmp dword [rsp + 8], 2
0x00005c45      bb20000000     mov ebx, 0x20                           ; "@"
0x00005c4a      0f94c2         sete dl
0x00005c4d      ebc2           jmp 0x5c11
0x00005c4f      90             nop
0x00005c50      ba0d000000     mov edx, 0xd
0x00005c55      bb72000000     mov ebx, 0x72                           ; 'r'
0x00005c5a      e963feffff     jmp 0x5ac2
0x00005c5f      90             nop
0x00005c60      ba0c000000     mov edx, 0xc
0x00005c65      bb66000000     mov ebx, 0x66                           ; 'f'
0x00005c6a      e965feffff     jmp 0x5ad4
0x00005c6f      90             nop
0x00005c70      ba0b000000     mov edx, 0xb
0x00005c75      bb76000000     mov ebx, 0x76                           ; 'v'
0x00005c7a      e955feffff     jmp 0x5ad4
0x00005c7f      90             nop
0x00005c80      ba0a000000     mov edx, 0xa
0x00005c85      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00005c8a      e933feffff     jmp 0x5ac2
0x00005c8f      90             nop
0x00005c90      4531d2         xor r10d, r10d
0x00005c93      0f1f440000     nop dword [rax + rax]
0x00005c98      48837c245801   cmp qword [rsp + 0x58], 1
0x00005c9e      0f85a4030000   jne 0x6048
0x00005ca4      4c895c2438     mov qword [rsp + 0x38], r11
0x00005ca9      4488442430     mov byte [rsp + 0x30], r8b
0x00005cae      4488542428     mov byte [rsp + 0x28], r10b
0x00005cb3      e8f8c2ffff     call sym.imp.__ctype_b_loc
0x00005cb8      488b08         mov rcx, qword [rax]
0x00005cbb      0fb6d3         movzx edx, bl
0x00005cbe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00005cc4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00005cca      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00005ccf      bf01000000     mov edi, 1
0x00005cd4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00005cd8      66250040       and ax, 0x4000                          ; "M\xfft%H\xf7\xddI\x8dD\xed"
0x00005cdc      410f95c4       setne r12b
0x00005ce0      0f94c0         sete al
0x00005ce3      2244240d       and al, byte [rsp + 0xd]
0x00005ce7      84c0           test al, al
0x00005ce9      0f8592090000   jne 0x6681
0x00005cef      837c240802     cmp dword [rsp + 8], 2
0x00005cf4      0f94c2         sete dl
0x00005cf7      e9ccfcffff     jmp 0x59c8
0x00005cfc      0f1f4000       nop dword [rax]
0x00005d00      410fb619       movzx ebx, byte [r9]
0x00005d04      80fb7e         cmp bl, 0x7e
0x00005d07      7787           ja 0x5c90
0x00005d09      488d0d984100.  lea rcx, [0x00009ea8]
0x00005d10      0fb6d3         movzx edx, bl
0x00005d13      48630491       movsxd rax, dword [rcx + rdx*4]
0x00005d17      4801c8         add rax, rcx
0x00005d1a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00005d1c      0f1f4000       nop dword [rax]
0x00005d20      4531d2         xor r10d, r10d
0x00005d23      807c240d00     cmp byte [rsp + 0xd], 0
0x00005d28      0f85f0fdffff   jne 0x5b1e
0x00005d2e      6690           nop
0x00005d30      ba5c000000     mov edx, 0x5c                           ; '\'
0x00005d35      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005d3a      e995fdffff     jmp 0x5ad4
0x00005d3f      90             nop
0x00005d40      ba0c000000     mov edx, 0xc
0x00005d45      4531d2         xor r10d, r10d
0x00005d48      bb66000000     mov ebx, 0x66                           ; 'f'
0x00005d4d      e982fdffff     jmp 0x5ad4
0x00005d52      660f1f440000   nop word [rax + rax]
0x00005d58      ba0a000000     mov edx, 0xa
0x00005d5d      4531d2         xor r10d, r10d
0x00005d60      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00005d65      e958fdffff     jmp 0x5ac2
0x00005d6a      660f1f440000   nop word [rax + rax]
0x00005d70      bb61000000     mov ebx, 0x61                           ; 'a'
0x00005d75      e9c6fdffff     jmp 0x5b40
0x00005d7a      660f1f440000   nop word [rax + rax]
0x00005d80      4531d2         xor r10d, r10d
0x00005d83      837c240802     cmp dword [rsp + 8], 2
0x00005d88      0f94c2         sete dl
0x00005d8b      807c240f00     cmp byte [rsp + 0xf], 0
0x00005d90      0f85940b0000   jne 0x692a
0x00005d96      4489c0         mov eax, r8d
0x00005d99      4c89f9         mov rcx, r15
0x00005d9c      83f001         xor eax, 1
0x00005d9f      20d0           and al, dl
0x00005da1      742d           je 0x5dd0
0x00005da3      4d39fd         cmp r13, r15
0x00005da6      7605           jbe 0x5dad
0x00005da8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00005dad      498d4f01       lea rcx, [r15 + 1]
0x00005db1      4939cd         cmp r13, rcx
0x00005db4      7606           jbe 0x5dbc
0x00005db6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00005dbc      498d4f02       lea rcx, [r15 + 2]
0x00005dc0      4939cd         cmp r13, rcx
0x00005dc3      0f8730060000   ja 0x63f9
0x00005dc9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00005dcd      4189c0         mov r8d, eax
0x00005dd0      4939cd         cmp r13, rcx
0x00005dd3      7605           jbe 0x5dda
0x00005dd5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00005dda      837c240802     cmp dword [rsp + 8], 2
0x00005ddf      4c8d7901       lea r15, [rcx + 1]
0x00005de3      0f8400060000   je 0x63e9
0x00005de9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005ded      4c39d8         cmp rax, r11
0x00005df0      7319           jae 0x5e0b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00005df2      488b442410     mov rax, qword [rsp + 0x10]
0x00005df7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00005dfc      88442428       mov byte [rsp + 0x28], al
0x00005e00      83e830         sub eax, 0x30
0x00005e03      3c09           cmp al, 9
0x00005e05      0f862e080000   jbe 0x6639
0x00005e0b      4489e0         mov eax, r12d
0x00005e0e      bb30000000     mov ebx, 0x30                           ; '0'
0x00005e13      4531e4         xor r12d, r12d
0x00005e16      e9adfbffff     jmp 0x59c8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00005e1b      0f1f440000     nop dword [rax + rax]
0x00005e20      837c240802     cmp dword [rsp + 8], 2
0x00005e25      4589d4         mov r12d, r10d
0x00005e28      0f94c2         sete dl
0x00005e2b      4531d2         xor r10d, r10d
0x00005e2e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005e30      e993fbffff     jmp 0x59c8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00005e35      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00005e38      837c240802     cmp dword [rsp + 8], 2
0x00005e3d      0f94c2         sete dl
0x00005e40      4531d2         xor r10d, r10d
0x00005e43      e9c0fdffff     jmp 0x5c08
0x00005e48      0f1f84000000.  nop dword [rax + rax]
0x00005e50      837c240802     cmp dword [rsp + 8], 2
0x00005e55      0f94c2         sete dl
0x00005e58      4531d2         xor r10d, r10d
0x00005e5b      4531e4         xor r12d, r12d
0x00005e5e      e9aefdffff     jmp 0x5c11
0x00005e63      0f1f440000     nop dword [rax + rax]
0x00005e68      837c240802     cmp dword [rsp + 8], 2
0x00005e6d      4589d4         mov r12d, r10d
0x00005e70      bb20000000     mov ebx, 0x20                           ; "@"
0x00005e75      0f94c2         sete dl
0x00005e78      4531d2         xor r10d, r10d
0x00005e7b      e991fdffff     jmp 0x5c11
0x00005e80      ba0d000000     mov edx, 0xd
0x00005e85      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00005e88      bb72000000     mov ebx, 0x72                           ; 'r'
0x00005e8d      e930fcffff     jmp 0x5ac2
0x00005e92      660f1f440000   nop word [rax + rax]
0x00005e98      bb76000000     mov ebx, 0x76                           ; 'v'
0x00005e9d      e99efcffff     jmp 0x5b40
0x00005ea2      660f1f440000   nop word [rax + rax]
0x00005ea8      ba09000000     mov edx, 9
0x00005ead      4531d2         xor r10d, r10d
0x00005eb0      bb74000000     mov ebx, 0x74                           ; 't'
0x00005eb5      e908fcffff     jmp 0x5ac2
0x00005eba      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00005ec0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00005ec5      e976fcffff     jmp 0x5b40
0x00005eca      660f1f440000   nop word [rax + rax]
0x00005ed0      4531d2         xor r10d, r10d
0x00005ed3      e998faffff     jmp 0x5970
0x00005ed8      0f1f84000000.  nop dword [rax + rax]
0x00005ee0      807c240f00     cmp byte [rsp + 0xf], 0
0x00005ee5      0f8565090000   jne 0x6850
0x00005eeb      4883c501       add rbp, 1
0x00005eef      4489c0         mov eax, r8d
0x00005ef2      4531e4         xor r12d, r12d
0x00005ef5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00005efa      e90dfbffff     jmp 0x5a0c
0x00005eff      90             nop
0x00005f00      837c240802     cmp dword [rsp + 8], 2
0x00005f05      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005f0a      4589c4         mov r12d, r8d
0x00005f0d      4c89dd         mov rbp, r11
0x00005f10      0f94c2         sete dl
0x00005f13      89d8           mov eax, ebx
0x00005f15      4d85ff         test r15, r15
0x00005f18      0f94c1         sete cl
0x00005f1b      21d0           and eax, edx
0x00005f1d      20c8           and al, cl
0x00005f1f      0f85610a0000   jne 0x6986                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00005f25      89d8           mov eax, ebx
0x00005f27      83f001         xor eax, 1
0x00005f2a      20c2           and dl, al
0x00005f2c      0f846a090000   je 0x689c
0x00005f32      807c247c00     cmp byte [rsp + 0x7c], 0
0x00005f37      0f845d090000   je 0x689a
0x00005f3d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00005f42      0f85f5090000   jne 0x693d
0x00005f48      4d85ed         test r13, r13
0x00005f4b      0f94c0         sete al
0x00005f4e      48837c245000   cmp qword [rsp + 0x50], 0
0x00005f54      0f95c2         setne dl
0x00005f57      20d0           and al, dl
0x00005f59      0f841d0a0000   je 0x697c
0x00005f5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005f64      488d1dba3c00.  lea rbx, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005f6b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00005f6f      c74424080200.  mov dword [rsp + 8], 2
0x00005f77      41bf01000000   mov r15d, 1
0x00005f7d      48c744241801.  mov qword [rsp + 0x18], 1
0x00005f86      c644240f00     mov byte [rsp + 0xf], 0
0x00005f8b      48895c2448     mov qword [rsp + 0x48], rbx
0x00005f90      8844247c       mov byte [rsp + 0x7c], al
0x00005f94      e9daf8ffff     jmp 0x5873
0x00005f99      0f1f80000000.  nop dword [rax]
0x00005fa0      807c240f00     cmp byte [rsp + 0xf], 0
0x00005fa5      0f85a5080000   jne 0x6850
0x00005fab      4d85ed         test r13, r13
0x00005fae      0f84fc030000   je 0x63b0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00005fb4      31d2           xor edx, edx
0x00005fb6      48837c245000   cmp qword [rsp + 0x50], 0
0x00005fbc      0f85ee030000   jne 0x63b0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00005fc2      4c896c2450     mov qword [rsp + 0x50], r13
0x00005fc7      4983c703       add r15, 3
0x00005fcb      31c0           xor eax, eax
0x00005fcd      448864247c     mov byte [rsp + 0x7c], r12b
0x00005fd2      4531c0         xor r8d, r8d
0x00005fd5      4989d5         mov r13, rdx
0x00005fd8      bb27000000     mov ebx, 0x27                           ; '''
0x00005fdd      e917faffff     jmp 0x59f9
0x00005fe2      660f1f440000   nop word [rax + rax]
0x00005fe8      f644247804     test byte [rsp + 0x78], 4
0x00005fed      7421           je 0x6010
0x00005fef      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00005ff3      4c39d9         cmp rcx, r11
0x00005ff6      7318           jae 0x6010
0x00005ff8      488b442410     mov rax, qword [rsp + 0x10]
0x00005ffd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00006002      0f848a070000   je 0x6792
0x00006008      0f1f84000000.  nop dword [rax + rax]
0x00006010      31d2           xor edx, edx
0x00006012      4531e4         xor r12d, r12d
0x00006015      31c0           xor eax, eax
0x00006017      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000601c      e9a7f9ffff     jmp 0x59c8
0x00006021      0f1f80000000.  nop dword [rax]
0x00006028      807c240f00     cmp byte [rsp + 0xf], 0
0x0000602d      0f851d080000   jne 0x6850
0x00006033      4531e4         xor r12d, r12d
0x00006036      31c0           xor eax, eax
0x00006038      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000603d      e9b7f9ffff     jmp 0x59f9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00006042      660f1f440000   nop word [rax + rax]
0x00006048      488d8424a000.  lea rax, [rsp + 0xa0]
0x00006050      4983fbff       cmp r11, 0xffffffffffffffff
0x00006054      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00006060      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00006065      752d           jne 0x6094
0x00006067      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000606c      4488442440     mov byte [rsp + 0x40], r8b
0x00006071      4488542438     mov byte [rsp + 0x38], r10b
0x00006076      4c894c2430     mov qword [rsp + 0x30], r9
0x0000607b      e8e0bbffff     call sym.imp.strlen
0x00006080      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00006086      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000608c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000608f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006094      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000609c      31c9           xor ecx, ecx
0x0000609e      885c247e       mov byte [rsp + 0x7e], bl
0x000060a2      448844247d     mov byte [rsp + 0x7d], r8b
0x000060a7      4889cb         mov rbx, rcx
0x000060aa      4c898c248800.  mov qword [rsp + 0x88], r9
0x000060b2      4889442438     mov qword [rsp + 0x38], rax
0x000060b7      448854247f     mov byte [rsp + 0x7f], r10b
0x000060bc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000060c4      4c89742440     mov qword [rsp + 0x40], r14
0x000060c9      4c896c2470     mov qword [rsp + 0x70], r13
0x000060ce      4c895c2430     mov qword [rsp + 0x30], r11
0x000060d3      488b442410     mov rax, qword [rsp + 0x10]
0x000060d8      4c8d741d00     lea r14, [rbp + rbx]
0x000060dd      488b542430     mov rdx, qword [rsp + 0x30]
0x000060e2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000060e7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000060ec      4e8d2c30       lea r13, [rax + r14]
0x000060f0      4c29f2         sub rdx, r14
0x000060f3      4c89ee         mov rsi, r13
0x000060f6      e865220000     call sym.rpl_mbrtowc
0x000060fb      4885c0         test rax, rax
0x000060fe      4989c7         mov r15, rax
0x00006101      744e           je 0x6151
0x00006103      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006107      0f8418060000   je 0x6725
0x0000610d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006111      0f849a050000   je 0x66b1
0x00006117      837c240802     cmp dword [rsp + 8], 2
0x0000611c      0f94c0         sete al
0x0000611f      2244240f       and al, byte [rsp + 0xf]
0x00006123      0f8597010000   jne 0x62c0
0x00006129      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00006130      e84bbeffff     call sym.imp.iswprint
0x00006135      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000613a      85c0           test eax, eax
0x0000613c      b800000000     mov eax, 0
0x00006141      440f44e0       cmove r12d, eax
0x00006145      4c01fb         add rbx, r15
0x00006148      e813beffff     call sym.imp.mbsinit
0x0000614d      85c0           test eax, eax
0x0000614f      7482           je 0x60d3
0x00006151      4489e2         mov edx, r12d
0x00006154      4889df         mov rdi, rbx
0x00006157      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000615d      83f201         xor edx, 1
0x00006160      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006165      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000616b      2254240d       and dl, byte [rsp + 0xd]
0x0000616f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006177      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000617c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00006181      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006186      4883ff01       cmp rdi, 1
0x0000618a      0f86fb050000   jbe 0x678b
0x00006190      4889f9         mov rcx, rdi
0x00006193      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00006195      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000619b      4801e9         add rcx, rbp
0x0000619e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000061a3      e9b6000000     jmp 0x625e
0x000061a8      0f1f84000000.  nop dword [rax + rax]
0x000061b0      837c240802     cmp dword [rsp + 8], 2
0x000061b5      0f94c0         sete al
0x000061b8      4584c9         test r9b, r9b
0x000061bb      0f85af040000   jne 0x6670
0x000061c1      4489c6         mov esi, r8d
0x000061c4      83f601         xor esi, 1
0x000061c7      4020f0         and al, sil
0x000061ca      742f           je 0x61fb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000061cc      4d39fd         cmp r13, r15
0x000061cf      7605           jbe 0x61d6
0x000061d1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000061d6      498d7701       lea rsi, [r15 + 1]
0x000061da      4939f5         cmp r13, rsi
0x000061dd      7606           jbe 0x61e5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000061df      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000061e5      498d7702       lea rsi, [r15 + 2]
0x000061e9      4939f5         cmp r13, rsi
0x000061ec      7606           jbe 0x61f4
0x000061ee      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000061f4      4983c703       add r15, 3
0x000061f8      4189c0         mov r8d, eax
0x000061fb      4d39fd         cmp r13, r15
0x000061fe      7605           jbe 0x6205
0x00006200      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00006205      498d4701       lea rax, [r15 + 1]
0x00006209      4939c5         cmp r13, rax
0x0000620c      760d           jbe 0x621b
0x0000620e      89d8           mov eax, ebx
0x00006210      c0e806         shr al, 6
0x00006213      83c030         add eax, 0x30
0x00006216      4388443e01     mov byte [r14 + r15 + 1], al
0x0000621b      498d4702       lea rax, [r15 + 2]
0x0000621f      4939c5         cmp r13, rax
0x00006222      7610           jbe 0x6234
0x00006224      89d8           mov eax, ebx
0x00006226      c0e803         shr al, 3
0x00006229      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000622c      83c030         add eax, 0x30
0x0000622f      4388443e02     mov byte [r14 + r15 + 2], al
0x00006234      83e307         and ebx, 7
0x00006237      4883c501       add rbp, 1
0x0000623b      4983c703       add r15, 3
0x0000623f      83c330         add ebx, 0x30
0x00006242      4839cd         cmp rbp, rcx
0x00006245      0f83e5f7ffff   jae 0x5a30
0x0000624b      89d6           mov esi, edx
0x0000624d      4d39fd         cmp r13, r15
0x00006250      7604           jbe 0x6256
0x00006252      43881c3e       mov byte [r14 + r15], bl
0x00006256      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000625a      4983c701       add r15, 1
0x0000625e      84d2           test dl, dl
0x00006260      0f854affffff   jne 0x61b0
0x00006266      89f0           mov eax, esi
0x00006268      83f001         xor eax, 1
0x0000626b      4421c0         and eax, r8d
0x0000626e      4584d2         test r10b, r10b
0x00006271      740e           je 0x6281
0x00006273      4d39fd         cmp r13, r15
0x00006276      7605           jbe 0x627d
0x00006278      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000627d      4983c701       add r15, 1
0x00006281      4883c501       add rbp, 1
0x00006285      4839cd         cmp rbp, rcx
0x00006288      0f837ef7ffff   jae 0x5a0c
0x0000628e      84c0           test al, al
0x00006290      0f84f8030000   je 0x668e
0x00006296      4d39fd         cmp r13, r15
0x00006299      7605           jbe 0x62a0
0x0000629b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000062a0      498d4701       lea rax, [r15 + 1]
0x000062a4      4939c5         cmp r13, rax
0x000062a7      7606           jbe 0x62af
0x000062a9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000062af      4983c702       add r15, 2
0x000062b3      4531d2         xor r10d, r10d
0x000062b6      4531c0         xor r8d, r8d
0x000062b9      eb92           jmp 0x624d
0x000062bb      0f1f440000     nop dword [rax + rax]
0x000062c0      4983ff01       cmp r15, 1
0x000062c4      0f845ffeffff   je 0x6129
0x000062ca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000062cf      4a8d0c3f       lea rcx, [rdi + r15]
0x000062d3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000062d8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000062dc      eb0f           jmp 0x62ed
0x000062de      6690           nop
0x000062e0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000062e4      4939d0         cmp r8, rdx
0x000062e7      0f843cfeffff   je 0x6129
0x000062ed      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000062f0      83e95b         sub ecx, 0x5b
0x000062f3      80f921         cmp cl, 0x21
0x000062f6      77e8           ja 0x62e0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000062f8      be01000000     mov esi, 1
0x000062fd      48d3e6         shl rsi, cl
0x00006300      4889f1         mov rcx, rsi
0x00006303      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000630d      4885f1         test rcx, rsi
0x00006310      74ce           je 0x62e0
0x00006312      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006317      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000631c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00006321      c74424080200.  mov dword [rsp + 8], 2
0x00006329      807c240d00     cmp byte [rsp + 0xd], 0
0x0000632e      7410           je 0x6340
0x00006330      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00006332      b804000000     mov eax, 4
0x00006337      0f44442408     cmove eax, dword [rsp + 8]
0x0000633c      89442408       mov dword [rsp + 8], eax
0x00006340      4883ec08       sub rsp, 8
0x00006344      4889e9         mov rcx, rbp
0x00006347      4c89ee         mov rsi, r13
0x0000634a      ff742468       push qword [rsp + 0x68]
0x0000634e      ff742478       push qword [rsp + 0x78]
0x00006352      4c89f7         mov rdi, r14
0x00006355      6a00           push 0
0x00006357      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000635f      448b442428     mov r8d, dword [rsp + 0x28]
0x00006364      488b542430     mov rdx, qword [rsp + 0x30]
0x00006369      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000636d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00006372      4883c420       add rsp, 0x20
0x00006376      4989c7         mov r15, rax
0x00006379      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00006381      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000638a      4c89f8         mov rax, r15
0x0000638d      0f8500060000   jne 0x6993
0x00006393      4881c4b80000.  add rsp, 0xb8
0x0000639a      5b             pop rbx
0x0000639b      5d             pop rbp
0x0000639c      415c           pop r12
0x0000639e      415d           pop r13
0x000063a0      415e           pop r14
0x000063a2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000063a4      c3             ret
0x000063a5      0f1f00         nop dword [rax]
0x000063a8      4c89dd         mov rbp, r11
0x000063ab      e979ffffff     jmp 0x6329
0x000063b0      4d39fd         cmp r13, r15
0x000063b3      7605           jbe 0x63ba
0x000063b5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000063ba      498d4701       lea rax, [r15 + 1]
0x000063be      4939c5         cmp r13, rax
0x000063c1      7606           jbe 0x63c9
0x000063c3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000063c9      498d4702       lea rax, [r15 + 2]
0x000063cd      4939c5         cmp r13, rax
0x000063d0      0f86ec050000   jbe 0x69c2
0x000063d6      4c89ea         mov rdx, r13
0x000063d9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000063df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000063e4      e9d9fbffff     jmp 0x5fc2
0x000063e9      4489e0         mov eax, r12d
0x000063ec      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000063f1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000063f4      e900f6ffff     jmp 0x59f9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000063f9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000063ff      e9c5f9ffff     jmp 0x5dc9
0x00006404      85db           test ebx, ebx
0x00006406      0f8527f4ffff   jne 0x5833
0x0000640c      c644240d01     mov byte [rsp + 0xd], 1
0x00006411      4d85ed         test r13, r13
0x00006414      0f8590050000   jne 0x69aa
0x0000641a      488d05043800.  lea rax, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006421      48c744245000.  mov qword [rsp + 0x50], 0
0x0000642a      c644240e01     mov byte [rsp + 0xe], 1
0x0000642f      c644247c00     mov byte [rsp + 0x7c], 0
0x00006434      4531e4         xor r12d, r12d
0x00006437      c644240f00     mov byte [rsp + 0xf], 0
0x0000643c      48c744241801.  mov qword [rsp + 0x18], 1
0x00006445      4889442448     mov qword [rsp + 0x48], rax
0x0000644a      41bf01000000   mov r15d, 1
0x00006450      c74424080200.  mov dword [rsp + 8], 2
0x00006458      e916f4ffff     jmp 0x5873                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000645d      0f1f00         nop dword [rax]
0x00006460      85db           test ebx, ebx
0x00006462      0f85f5030000   jne 0x685d
0x00006468      4d85ed         test r13, r13
0x0000646b      0f8425020000   je 0x6696
0x00006471      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00006475      c644240e01     mov byte [rsp + 0xe], 1
0x0000647a      4531e4         xor r12d, r12d
0x0000647d      c644247c00     mov byte [rsp + 0x7c], 0
0x00006482      48c744245000.  mov qword [rsp + 0x50], 0
0x0000648b      488d05913700.  lea rax, str.l______l                   ; 0x9c23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006492      c644240f00     mov byte [rsp + 0xf], 0
0x00006497      c644240d01     mov byte [rsp + 0xd], 1
0x0000649c      48c744241801.  mov qword [rsp + 0x18], 1
0x000064a5      41bf01000000   mov r15d, 1
0x000064ab      4889442448     mov qword [rsp + 0x48], rax
0x000064b0      e9bef3ffff     jmp 0x5873
0x000064b5      488d05673700.  lea rax, str.l______l                   ; 0x9c23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000064bc      c644240e01     mov byte [rsp + 0xe], 1
0x000064c1      c644247c00     mov byte [rsp + 0x7c], 0
0x000064c6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000064c9      48c744245000.  mov qword [rsp + 0x50], 0
0x000064d2      c644240f01     mov byte [rsp + 0xf], 1
0x000064d7      c644240d01     mov byte [rsp + 0xd], 1
0x000064dc      48c744241801.  mov qword [rsp + 0x18], 1
0x000064e5      4531ff         xor r15d, r15d
0x000064e8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000064ed      c74424080500.  mov dword [rsp + 8], 5
0x000064f5      e979f3ffff     jmp 0x5873
0x000064fa      c644240e01     mov byte [rsp + 0xe], 1
0x000064ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00006504      4531e4         xor r12d, r12d
0x00006507      48c744245000.  mov qword [rsp + 0x50], 0
0x00006510      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00006515      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00006518      c644240d01     mov byte [rsp + 0xd], 1
0x0000651d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006526      48c744244800.  mov qword [rsp + 0x48], 0
0x0000652f      e93ff3ffff     jmp 0x5873
0x00006534      837c24080a     cmp dword [rsp + 8], 0xa
0x00006539      7456           je 0x6591
0x0000653b      488d35e53600.  lea rsi, [0x00009c27]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00006542      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00006544      ba05000000     mov edx, 5
0x00006549      e8f2b6ffff     call sym.imp.dcgettext
0x0000654e      4889c1         mov rcx, rax
0x00006551      4889442468     mov qword [rsp + 0x68], rax
0x00006556      488d05ca3600.  lea rax, [0x00009c27]                   ; "`"
0x0000655d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00006560      0f8498030000   je 0x68fe
0x00006566      488d35b83600.  lea rsi, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000656d      31ff           xor edi, edi
0x0000656f      ba05000000     mov edx, 5
0x00006574      e8c7b6ffff     call sym.imp.dcgettext
0x00006579      4889c1         mov rcx, rax
0x0000657c      4889442460     mov qword [rsp + 0x60], rax
0x00006581      488d059d3600.  lea rax, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006588      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000658b      0f8483030000   je 0x6914
0x00006591      4531ff         xor r15d, r15d
0x00006594      85db           test ebx, ebx
0x00006596      0f84c1010000   je 0x675d
0x0000659c      85db           test ebx, ebx
0x0000659e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000065a3      0f9544240f     setne byte [rsp + 0xf]
0x000065a8      4531e4         xor r12d, r12d
0x000065ab      4889df         mov rdi, rbx
0x000065ae      e8adb6ffff     call sym.imp.strlen
0x000065b3      48895c2448     mov qword [rsp + 0x48], rbx
0x000065b8      4889442418     mov qword [rsp + 0x18], rax
0x000065bd      c644240e01     mov byte [rsp + 0xe], 1
0x000065c2      c644247c00     mov byte [rsp + 0x7c], 0
0x000065c7      48c744245000.  mov qword [rsp + 0x50], 0
0x000065d0      c644240d01     mov byte [rsp + 0xd], 1
0x000065d5      e999f2ffff     jmp 0x5873
0x000065da      c644240e01     mov byte [rsp + 0xe], 1
0x000065df      c644247c00     mov byte [rsp + 0x7c], 0
0x000065e4      4531e4         xor r12d, r12d
0x000065e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000065f0      c644240f00     mov byte [rsp + 0xf], 0
0x000065f5      4531ff         xor r15d, r15d
0x000065f8      c644240d00     mov byte [rsp + 0xd], 0
0x000065fd      48c744241800.  mov qword [rsp + 0x18], 0
0x00006606      48c744244800.  mov qword [rsp + 0x48], 0
0x0000660f      e95ff2ffff     jmp 0x5873
0x00006614      c644240e01     mov byte [rsp + 0xe], 1
0x00006619      c644247c00     mov byte [rsp + 0x7c], 0
0x0000661e      4531e4         xor r12d, r12d
0x00006621      48c744245000.  mov qword [rsp + 0x50], 0
0x0000662a      c644240f01     mov byte [rsp + 0xf], 1
0x0000662f      c644240d01     mov byte [rsp + 0xd], 1
0x00006634      e91af2ffff     jmp 0x5853
0x00006639      4d39fd         cmp r13, r15
0x0000663c      7605           jbe 0x6643
0x0000663e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00006643      488d4102       lea rax, [rcx + 2]
0x00006647      4939c5         cmp r13, rax
0x0000664a      7606           jbe 0x6652
0x0000664c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00006652      4489e0         mov eax, r12d
0x00006655      4c8d7903       lea r15, [rcx + 3]
0x00006659      4531e4         xor r12d, r12d
0x0000665c      bb30000000     mov ebx, 0x30                           ; '0'
0x00006661      e962f3ffff     jmp 0x59c8
0x00006666      662e0f1f8400.  nop word cs:[rax + rax]
0x00006670      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00006675      4c89dd         mov rbp, r11
0x00006678      885c240d       mov byte [rsp + 0xd], bl
0x0000667c      e9a8fcffff     jmp 0x6329
0x00006681      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006686      4531e4         xor r12d, r12d
0x00006689      e902fbffff     jmp 0x6190
0x0000668e      4531d2         xor r10d, r10d
0x00006691      e9b7fbffff     jmp 0x624d
0x00006696      48c744245000.  mov qword [rsp + 0x50], 0
0x0000669f      c644240e01     mov byte [rsp + 0xe], 1
0x000066a4      4531e4         xor r12d, r12d
0x000066a7      c644247c00     mov byte [rsp + 0x7c], 0
0x000066ac      e9dafdffff     jmp 0x648b
0x000066b1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000066b6      4c89f6         mov rsi, r14
0x000066b9      4c89e9         mov rcx, r13
0x000066bc      4889d8         mov rax, rbx
0x000066bf      4889df         mov rdi, rbx
0x000066c2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000066c8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000066cd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000066d5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000066d8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000066de      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000066e6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000066eb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000066f0      7326           jae 0x6718
0x000066f2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000066f5      7510           jne 0x6707
0x000066f7      eb1f           jmp 0x6718
0x000066f9      0f1f80000000.  nop dword [rax]
0x00006700      41803c0100     cmp byte [r9 + rax], 0
0x00006705      740e           je 0x6715
0x00006707      4883c001       add rax, 1
0x0000670b      488d540500     lea rdx, [rbp + rax]
0x00006710      4939d3         cmp r11, rdx
0x00006713      77eb           ja 0x6700
0x00006715      4889c7         mov rdi, rax
0x00006718      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000671d      4531e4         xor r12d, r12d
0x00006720      e961faffff     jmp 0x6186
0x00006725      4889df         mov rdi, rbx
0x00006728      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000672e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00006733      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00006739      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00006741      4531e4         xor r12d, r12d
0x00006744      4c8b742440     mov r14, qword [rsp + 0x40]
0x00006749      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000674e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00006753      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00006758      e929faffff     jmp 0x6186
0x0000675d      488b542468     mov rdx, qword [rsp + 0x68]
0x00006762      0fb602         movzx eax, byte [rdx]
0x00006765      84c0           test al, al
0x00006767      0f842ffeffff   je 0x659c
0x0000676d      0f1f00         nop dword [rax]
0x00006770      4d39fd         cmp r13, r15
0x00006773      7604           jbe 0x6779
0x00006775      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00006779      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000677d      420fb6043a     movzx eax, byte [rdx + r15]
0x00006782      84c0           test al, al
0x00006784      75ea           jne 0x6770
0x00006786      e911feffff     jmp 0x659c
0x0000678b      89d0           mov eax, edx
0x0000678d      e955f5ffff     jmp 0x5ce7
0x00006792      0fb61c08       movzx ebx, byte [rax + rcx]
0x00006796      80fb3e         cmp bl, 0x3e
0x00006799      0f8771f8ffff   ja 0x6010
0x0000679f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000067a9      480fa3d8       bt rax, rbx
0x000067ad      0f835df8ffff   jae 0x6010
0x000067b3      807c240f00     cmp byte [rsp + 0xf], 0
0x000067b8      0f85e4010000   jne 0x69a2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000067be      4d39fd         cmp r13, r15
0x000067c1      7605           jbe 0x67c8
0x000067c3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000067c8      498d4701       lea rax, [r15 + 1]
0x000067cc      4939c5         cmp r13, rax
0x000067cf      7606           jbe 0x67d7
0x000067d1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000067d7      498d4702       lea rax, [r15 + 2]
0x000067db      4939c5         cmp r13, rax
0x000067de      7606           jbe 0x67e6
0x000067e0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000067e6      498d4703       lea rax, [r15 + 3]
0x000067ea      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000067ed      7606           jbe 0x67f5
0x000067ef      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000067f5      4983c704       add r15, 4
0x000067f9      31d2           xor edx, edx
0x000067fb      4531e4         xor r12d, r12d
0x000067fe      31c0           xor eax, eax
0x00006800      4889cd         mov rbp, rcx
0x00006803      e9c0f1ffff     jmp 0x59c8
0x00006808      85db           test ebx, ebx
0x0000680a      0f8488010000   je 0x6998
0x00006810      488d050e3400.  lea rax, [0x00009c25]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006817      c644240e01     mov byte [rsp + 0xe], 1
0x0000681c      c644247c00     mov byte [rsp + 0x7c], 0
0x00006821      4531e4         xor r12d, r12d
0x00006824      48c744245000.  mov qword [rsp + 0x50], 0
0x0000682d      c644240f01     mov byte [rsp + 0xf], 1
0x00006832      c644240d00     mov byte [rsp + 0xd], 0
0x00006837      48c744241801.  mov qword [rsp + 0x18], 1
0x00006840      4531ff         xor r15d, r15d
0x00006843      4889442448     mov qword [rsp + 0x48], rax
0x00006848      e926f0ffff     jmp 0x5873
0x0000684d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00006850      4c89dd         mov rbp, r11
0x00006853      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00006858      e9ccfaffff     jmp 0x6329
0x0000685d      488d05bf3300.  lea rax, str.l______l                   ; 0x9c23 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006864      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00006869      c644247c00     mov byte [rsp + 0x7c], 0
0x0000686e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00006871      48c744245000.  mov qword [rsp + 0x50], 0
0x0000687a      c644240f01     mov byte [rsp + 0xf], 1
0x0000687f      c644240d01     mov byte [rsp + 0xd], 1
0x00006884      48c744241801.  mov qword [rsp + 0x18], 1
0x0000688d      4531ff         xor r15d, r15d
0x00006890      4889442448     mov qword [rsp + 0x48], rax
0x00006895      e9d9efffff     jmp 0x5873
0x0000689a      89d0           mov eax, edx
0x0000689c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000068a1      4885db         test rbx, rbx
0x000068a4      742c           je 0x68d2
0x000068a6      84c0           test al, al
0x000068a8      7428           je 0x68d2
0x000068aa      0fb60b         movzx ecx, byte [rbx]
0x000068ad      4889d8         mov rax, rbx
0x000068b0      84c9           test cl, cl
0x000068b2      741e           je 0x68d2
0x000068b4      4c89fa         mov rdx, r15
0x000068b7      4c29f8         sub rax, r15
0x000068ba      4939d5         cmp r13, rdx
0x000068bd      7604           jbe 0x68c3
0x000068bf      41880c16       mov byte [r14 + rdx], cl
0x000068c3      4883c201       add rdx, 1
0x000068c7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000068cb      84c9           test cl, cl
0x000068cd      75eb           jne 0x68ba
0x000068cf      4989d7         mov r15, rdx
0x000068d2      4d39fd         cmp r13, r15
0x000068d5      0f869efaffff   jbe 0x6379
0x000068db      43c6043e00     mov byte [r14 + r15], 0
0x000068e0      e994faffff     jmp 0x6379
0x000068e5      837c240802     cmp dword [rsp + 8], 2
0x000068ea      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000068ef      4c89dd         mov rbp, r11
0x000068f2      0f94c0         sete al
0x000068f5      885c240d       mov byte [rsp + 0xd], bl
0x000068f9      e92bfaffff     jmp 0x6329
0x000068fe      8b742408       mov esi, dword [rsp + 8]
0x00006902      4889cf         mov rdi, rcx
0x00006905      e8a6edffff     call sym.gettext_quote.part.1
0x0000690a      4889442468     mov qword [rsp + 0x68], rax
0x0000690f      e952fcffff     jmp 0x6566
0x00006914      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00006918      4889cf         mov rdi, rcx
0x0000691b      e890edffff     call sym.gettext_quote.part.1
0x00006920      4889442460     mov qword [rsp + 0x60], rax
0x00006925      e967fcffff     jmp 0x6591
0x0000692a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000692f      4c89dd         mov rbp, r11
0x00006932      89d0           mov eax, edx
0x00006934      885c240d       mov byte [rsp + 0xd], bl
0x00006938      e9ecf9ffff     jmp 0x6329
0x0000693d      4883ec08       sub rsp, 8
0x00006941      41b805000000   mov r8d, 5
0x00006947      4c89d9         mov rcx, r11
0x0000694a      ff742468       push qword [rsp + 0x68]
0x0000694e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00006952      4c89f7         mov rdi, r14
0x00006955      ff742438       push qword [rsp + 0x38]
0x00006959      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00006961      488b542430     mov rdx, qword [rsp + 0x30]
0x00006966      488b742470     mov rsi, qword [rsp + 0x70]
0x0000696b      e830eeffff     call sym.quotearg_buffer_restyled
0x00006970      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00006974      4989c7         mov r15, rax
0x00006977      e9fdf9ffff     jmp 0x6379
0x0000697c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00006981      e916ffffff     jmp 0x689c
0x00006986      c74424080200.  mov dword [rsp + 8], 2
0x0000698e      e996f9ffff     jmp 0x6329
0x00006993      e8d8b2ffff     call sym.imp.__stack_chk_fail
0x00006998      c644240d00     mov byte [rsp + 0xd], 0
0x0000699d      e96ffaffff     jmp 0x6411
0x000069a2      4c89dd         mov rbp, r11
0x000069a5      e996f9ffff     jmp 0x6340
0x000069aa      c644240e01     mov byte [rsp + 0xe], 1
0x000069af      31c0           xor eax, eax
0x000069b1      4531e4         xor r12d, r12d
0x000069b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000069bd      e9a2f5ffff     jmp 0x5f64
0x000069c2      4c89ea         mov rdx, r13
0x000069c5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000069ca      e9f3f5ffff     jmp 0x5fc2
0x000069cf      e88cb1ffff     call sym.imp.abort
0x000069d4      6690           nop
0x000069d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000069e0      4157           push r15
0x000069e2      4156           push r14
0x000069e4      4c63ff         movsxd r15, edi
0x000069e7      4155           push r13
0x000069e9      4154           push r12
0x000069eb      4989d6         mov r14, rdx
0x000069ee      55             push rbp
0x000069ef      53             push rbx
0x000069f0      4889cd         mov rbp, rcx
0x000069f3      4883ec28       sub rsp, 0x28
0x000069f7      4889742408     mov qword [rsp + 8], rsi
0x000069fc      e86fb1ffff     call sym.imp.__errno_location
0x00006a01      4989c5         mov r13, rax
0x00006a04      8b00           mov eax, dword [rax]
0x00006a06      4585ff         test r15d, r15d
0x00006a09      488b1d705620.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00006a10      89442418       mov dword [rsp + 0x18], eax
0x00006a14      0f8867010000   js 0x6b81
0x00006a1a      44393d575620.  cmp dword [obj.nslots], r15d            ; [0x20c078:4]=1
0x00006a21      7f62           jg 0x6a85
0x00006a23      4181ffffffff.  cmp r15d, 0x7fffffff
0x00006a2a      0f8456010000   je 0x6b86
0x00006a30      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006a34      488d05555620.  lea rax, obj.slotvec0                   ; 0x20c090
0x00006a3b      4963f4         movsxd rsi, r12d
0x00006a3e      48c1e604       shl rsi, 4
0x00006a42      4839c3         cmp rbx, rax
0x00006a45      0f8415010000   je 0x6b60
0x00006a4b      4889df         mov rdi, rbx
0x00006a4e      e86d100000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00006a53      4889c3         mov rbx, rax
0x00006a56      488905235620.  mov qword [obj.slotvec], rax            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00006a5d      48633d145620.  movsxd rdi, dword [obj.nslots]          ; [0x20c078:4]=1
0x00006a64      4489e2         mov edx, r12d
0x00006a67      31f6           xor esi, esi
0x00006a69      29fa           sub edx, edi
0x00006a6b      48c1e704       shl rdi, 4
0x00006a6f      4863d2         movsxd rdx, edx
0x00006a72      4801df         add rdi, rbx
0x00006a75      48c1e204       shl rdx, 4
0x00006a79      e892b2ffff     call sym.imp.memset
0x00006a7e      448925f35520.  mov dword [obj.nslots], r12d            ; [0x20c078:4]=1
0x00006a85      8b4504         mov eax, dword [rbp + 4]
0x00006a88      49c1e704       shl r15, 4
0x00006a8c      4883ec08       sub rsp, 8
0x00006a90      4c01fb         add rbx, r15
0x00006a93      4c8d7d08       lea r15, [rbp + 8]
0x00006a97      448b4500       mov r8d, dword [rbp]
0x00006a9b      4c8b1b         mov r11, qword [rbx]
0x00006a9e      4c8b6308       mov r12, qword [rbx + 8]
0x00006aa2      4c89f1         mov rcx, r14
0x00006aa5      83c801         or eax, 1
0x00006aa8      89442424       mov dword [rsp + 0x24], eax
0x00006aac      ff7530         push qword [rbp + 0x30]
0x00006aaf      4189c1         mov r9d, eax
0x00006ab2      ff7528         push qword [rbp + 0x28]
0x00006ab5      4157           push r15
0x00006ab7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006aba      488b542428     mov rdx, qword [rsp + 0x28]
0x00006abf      4c89e7         mov rdi, r12
0x00006ac2      4c895c2430     mov qword [rsp + 0x30], r11
0x00006ac7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00006acc      4883c420       add rsp, 0x20
0x00006ad0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00006ad5      4939c3         cmp r11, rax
0x00006ad8      7767           ja 0x6b41
0x00006ada      488d7001       lea rsi, [rax + 1]
0x00006ade      488d053b5a20.  lea rax, obj.slot0                      ; 0x20c520
0x00006ae5      4939c4         cmp r12, rax
0x00006ae8      488933         mov qword [rbx], rsi
0x00006aeb      7412           je 0x6aff
0x00006aed      4c89e7         mov rdi, r12
0x00006af0      4889742410     mov qword [rsp + 0x10], rsi
0x00006af5      e856b0ffff     call sym.imp.free
0x00006afa      488b742410     mov rsi, qword [rsp + 0x10]
0x00006aff      4889f7         mov rdi, rsi
0x00006b02      4889742410     mov qword [rsp + 0x10], rsi
0x00006b07      e8540f0000     call sym.xmalloc
0x00006b0c      4883ec08       sub rsp, 8
0x00006b10      48894308       mov qword [rbx + 8], rax
0x00006b14      448b4500       mov r8d, dword [rbp]
0x00006b18      ff7530         push qword [rbp + 0x30]
0x00006b1b      ff7528         push qword [rbp + 0x28]
0x00006b1e      4c89f1         mov rcx, r14
0x00006b21      4157           push r15
0x00006b23      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00006b28      4889c7         mov rdi, rax
0x00006b2b      488b542428     mov rdx, qword [rsp + 0x28]
0x00006b30      488b742430     mov rsi, qword [rsp + 0x30]
0x00006b35      4989c4         mov r12, rax
0x00006b38      e863ecffff     call sym.quotearg_buffer_restyled
0x00006b3d      4883c420       add rsp, 0x20
0x00006b41      8b442418       mov eax, dword [rsp + 0x18]
0x00006b45      41894500       mov dword [r13], eax
0x00006b49      4883c428       add rsp, 0x28
0x00006b4d      4c89e0         mov rax, r12
0x00006b50      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00006b51      5d             pop rbp
0x00006b52      415c           pop r12
0x00006b54      415d           pop r13
0x00006b56      415e           pop r14
0x00006b58      415f           pop r15
0x00006b5a      c3             ret
0x00006b5b      0f1f440000     nop dword [rax + rax]
0x00006b60      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00006b62      e8590f0000     call sym.xrealloc
0x00006b67      660f6f052155.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00006b6f      4889c3         mov rbx, rax
0x00006b72      488905075520.  mov qword [obj.slotvec], rax            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00006b79      0f1100         movups xmmword [rax], xmm0
0x00006b7c      e9dcfeffff     jmp 0x6a5d
0x00006b81      e8daafffff     call sym.imp.abort
0x00006b86      e825110000     call sym.xalloc_die
0x00006b8b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00006b90      4154           push r12
0x00006b92      55             push rbp
0x00006b93      53             push rbx
0x00006b94      4889fb         mov rbx, rdi
0x00006b97      e8d4afffff     call sym.imp.__errno_location
0x00006b9c      448b20         mov r12d, dword [rax]
0x00006b9f      4889c5         mov rbp, rax
0x00006ba2      488d05775a20.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006ba9      4885db         test rbx, rbx
0x00006bac      be38000000     mov esi, 0x38                           ; '8'
0x00006bb1      480f44d8       cmove rbx, rax
0x00006bb5      4889df         mov rdi, rbx
0x00006bb8      e8a3100000     call sym.xmemdup
0x00006bbd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00006bc1      5b             pop rbx
0x00006bc2      5d             pop rbp
0x00006bc3      415c           pop r12
0x00006bc5      c3             ret
0x00006bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00006bd0      488d05495a20.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006bd7      4885ff         test rdi, rdi
0x00006bda      480f44f8       cmove rdi, rax
0x00006bde      8b07           mov eax, dword [rdi]
0x00006be0      c3             ret
0x00006be1      0f1f440000     nop dword [rax + rax]
0x00006be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00006bf0      488d05295a20.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006bf7      4885ff         test rdi, rdi
0x00006bfa      480f44f8       cmove rdi, rax
0x00006bfe      8937           mov dword [rdi], esi
0x00006c00      c3             ret
0x00006c01      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00006c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00006c10      488d05095a20.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006c17      4885ff         test rdi, rdi
0x00006c1a      89f1           mov ecx, esi
0x00006c1c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00006c20      89f0           mov eax, esi
0x00006c22      83e11f         and ecx, 0x1f
0x00006c25      c0e805         shr al, 5
0x00006c28      0fb6c0         movzx eax, al
0x00006c2b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00006c30      8b37           mov esi, dword [rdi]
0x00006c32      89f0           mov eax, esi
0x00006c34      d3e8           shr eax, cl
0x00006c36      31c2           xor edx, eax
0x00006c38      83e001         and eax, 1
0x00006c3b      83e201         and edx, 1
0x00006c3e      d3e2           shl edx, cl
0x00006c40      31f2           xor edx, esi
0x00006c42      8917           mov dword [rdi], edx
0x00006c44      c3             ret
0x00006c45      90             nop
0x00006c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00006c50      488d05c95920.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006c57      4885ff         test rdi, rdi
0x00006c5a      480f44f8       cmove rdi, rax
0x00006c5e      8b4704         mov eax, dword [rdi + 4]
0x00006c61      897704         mov dword [rdi + 4], esi
0x00006c64      c3             ret
0x00006c65      90             nop
0x00006c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00006c70      488d05a95920.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006c77      4885ff         test rdi, rdi
0x00006c7a      480f44f8       cmove rdi, rax
0x00006c7e      4885f6         test rsi, rsi
0x00006c81      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00006c87      740e           je 0x6c97
0x00006c89      4885d2         test rdx, rdx
0x00006c8c      7409           je 0x6c97
0x00006c8e      48897728       mov qword [rdi + 0x28], rsi
0x00006c92      48895730       mov qword [rdi + 0x30], rdx
0x00006c96      c3             ret
0x00006c97      4883ec08       sub rsp, 8
0x00006c9b      e8c0aeffff     call sym.imp.abort
;-- quotearg_buffer:
0x00006ca0      4157           push r15
0x00006ca2      4156           push r14
0x00006ca4      488d05755920.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006cab      4155           push r13
0x00006cad      4154           push r12
0x00006caf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00006cb2      55             push rbp
0x00006cb3      53             push rbx
0x00006cb4      4c89c3         mov rbx, r8
0x00006cb7      4989f6         mov r14, rsi
0x00006cba      4989d7         mov r15, rdx
0x00006cbd      4883ec18       sub rsp, 0x18
0x00006cc1      4d85c0         test r8, r8
0x00006cc4      480f44d8       cmove rbx, rax
0x00006cc8      48894c2408     mov qword [rsp + 8], rcx
0x00006ccd      e89eaeffff     call sym.imp.__errno_location
0x00006cd2      448b20         mov r12d, dword [rax]
0x00006cd5      4889c5         mov rbp, rax
0x00006cd8      488d4308       lea rax, [rbx + 8]
0x00006cdc      4883ec08       sub rsp, 8
0x00006ce0      448b4b04       mov r9d, dword [rbx + 4]
0x00006ce4      ff7330         push qword [rbx + 0x30]
0x00006ce7      448b03         mov r8d, dword [rbx]
0x00006cea      ff7328         push qword [rbx + 0x28]
0x00006ced      4c89fa         mov rdx, r15
0x00006cf0      50             push rax
0x00006cf1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00006cf6      4c89f6         mov rsi, r14
0x00006cf9      4c89ef         mov rdi, r13
0x00006cfc      e89feaffff     call sym.quotearg_buffer_restyled
0x00006d01      44896500       mov dword [rbp], r12d
0x00006d05      4883c438       add rsp, 0x38
0x00006d09      5b             pop rbx
0x00006d0a      5d             pop rbp
0x00006d0b      415c           pop r12
0x00006d0d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00006d0f      415e           pop r14
0x00006d11      415f           pop r15
0x00006d13      c3             ret
0x00006d14      6690           nop
0x00006d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00006d20      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00006d22      4156           push r14
0x00006d24      488d05f55820.  lea rax, obj.default_quoting_options    ; 0x20c620
0x00006d2b      4155           push r13
0x00006d2d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00006d2f      4989d4         mov r12, rdx
0x00006d32      55             push rbp
0x00006d33      53             push rbx
0x00006d34      4889cb         mov rbx, rcx
0x00006d37      4989fe         mov r14, rdi
0x00006d3a      4989f7         mov r15, rsi
0x00006d3d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00006d41      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00006d44      480f44d8       cmove rbx, rax
0x00006d48      31ed           xor ebp, ebp
0x00006d4a      e821aeffff     call sym.imp.__errno_location
0x00006d4f      4d85e4         test r12, r12
0x00006d52      4989c5         mov r13, rax
0x00006d55      8b00           mov eax, dword [rax]
0x00006d57      400f94c5       sete bpl
0x00006d5b      0b6b04         or ebp, dword [rbx + 4]
0x00006d5e      4c8d5308       lea r10, [rbx + 8]
0x00006d62      4883ec08       sub rsp, 8
0x00006d66      448b03         mov r8d, dword [rbx]
0x00006d69      4c89f9         mov rcx, r15
0x00006d6c      89442414       mov dword [rsp + 0x14], eax
0x00006d70      ff7330         push qword [rbx + 0x30]
0x00006d73      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00006d76      ff7328         push qword [rbx + 0x28]
0x00006d79      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00006d7b      31f6           xor esi, esi
0x00006d7d      4189e9         mov r9d, ebp
0x00006d80      31ff           xor edi, edi
0x00006d82      4c89542440     mov qword [rsp + 0x40], r10
0x00006d87      e814eaffff     call sym.quotearg_buffer_restyled
0x00006d8c      488d7001       lea rsi, [rax + 1]
0x00006d90      4889442448     mov qword [rsp + 0x48], rax
0x00006d95      4883c420       add rsp, 0x20
0x00006d99      4889f7         mov rdi, rsi
0x00006d9c      4889742418     mov qword [rsp + 0x18], rsi
0x00006da1      e8ba0c0000     call sym.xmalloc
0x00006da6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00006dab      4883ec08       sub rsp, 8
0x00006daf      ff7330         push qword [rbx + 0x30]
0x00006db2      ff7328         push qword [rbx + 0x28]
0x00006db5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00006dba      4189e9         mov r9d, ebp
0x00006dbd      448b03         mov r8d, dword [rbx]
0x00006dc0      4c89f9         mov rcx, r15
0x00006dc3      4c89f2         mov rdx, r14
0x00006dc6      4889c7         mov rdi, rax
0x00006dc9      4152           push r10
0x00006dcb      488b742438     mov rsi, qword [rsp + 0x38]
0x00006dd0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00006dd5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00006dd9      4883c420       add rsp, 0x20
0x00006ddd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00006de0      41894500       mov dword [r13], eax
0x00006de4      7409           je 0x6def
0x00006de6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00006deb      4d891c24       mov qword [r12], r11
0x00006def      488b442410     mov rax, qword [rsp + 0x10]
0x00006df4      4883c438       add rsp, 0x38
0x00006df8      5b             pop rbx
0x00006df9      5d             pop rbp
0x00006dfa      415c           pop r12
0x00006dfc      415d           pop r13
0x00006dfe      415e           pop r14
0x00006e00      415f           pop r15
0x00006e02      c3             ret
0x00006e03      0f1f00         nop dword [rax]
0x00006e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00006e10      4889d1         mov rcx, rdx
0x00006e13      31d2           xor edx, edx
0x00006e15      e906ffffff     jmp sym.quotearg_alloc_mem
0x00006e1a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00006e20      8b0552522000   mov eax, dword [obj.nslots]             ; [0x20c078:4]=1
0x00006e26      4154           push r12
0x00006e28      4c8b25515220.  mov r12, qword [obj.slotvec]            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00006e2f      55             push rbp
0x00006e30      53             push rbx
0x00006e31      83f801         cmp eax, 1
0x00006e34      7e2b           jle 0x6e61                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00006e36      83e802         sub eax, 2
0x00006e39      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00006e3e      48c1e004       shl rax, 4
0x00006e42      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00006e47      660f1f840000.  nop word [rax + rax]
0x00006e50      488b3b         mov rdi, qword [rbx]
0x00006e53      4883c310       add rbx, 0x10
0x00006e57      e8f4acffff     call sym.imp.free
0x00006e5c      4839eb         cmp rbx, rbp
0x00006e5f      75ef           jne 0x6e50
0x00006e61      498b7c2408     mov rdi, qword [r12 + 8]
0x00006e66      488d1db35620.  lea rbx, obj.slot0                      ; 0x20c520
0x00006e6d      4839df         cmp rdi, rbx
0x00006e70      7417           je 0x6e89
0x00006e72      e8d9acffff     call sym.imp.free
0x00006e77      48c7050e5220.  mov qword [obj.slotvec0], 0x100         ; [0x20c090:8]=256
0x00006e82      48891d0f5220.  mov qword [0x0020c098], rbx             ; [0x20c098:8]=0x20c520 obj.slot0
0x00006e89      488d1d005220.  lea rbx, obj.slotvec0                   ; 0x20c090
0x00006e90      4939dc         cmp r12, rbx
0x00006e93      740f           je 0x6ea4
0x00006e95      4c89e7         mov rdi, r12
0x00006e98      e8b3acffff     call sym.imp.free
0x00006e9d      48891ddc5120.  mov qword [obj.slotvec], rbx            ; [0x20c080:8]=0x20c090 obj.slotvec0
0x00006ea4      5b             pop rbx
0x00006ea5      c705c9512000.  mov dword [obj.nslots], 1               ; [0x20c078:4]=1
0x00006eaf      5d             pop rbp
0x00006eb0      415c           pop r12
0x00006eb2      c3             ret
0x00006eb3      0f1f00         nop dword [rax]
0x00006eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00006ec0      488d0d595720.  lea rcx, obj.default_quoting_options    ; 0x20c620
0x00006ec7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006ece      e90dfbffff     jmp sym.quotearg_n_options
0x00006ed3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00006ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00006ee0      488d0d395720.  lea rcx, obj.default_quoting_options    ; 0x20c620
0x00006ee7      e9f4faffff     jmp sym.quotearg_n_options
0x00006eec      0f1f4000       nop dword [rax]
;-- quotearg:
0x00006ef0      488d0d295720.  lea rcx, obj.default_quoting_options    ; 0x20c620
0x00006ef7      4889fe         mov rsi, rdi
0x00006efa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006f01      31ff           xor edi, edi
0x00006f03      e9d8faffff     jmp sym.quotearg_n_options
0x00006f08      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00006f10      488d0d095720.  lea rcx, obj.default_quoting_options    ; 0x20c620
0x00006f17      4889f2         mov rdx, rsi
0x00006f1a      4889fe         mov rsi, rdi
0x00006f1d      31ff           xor edi, edi
0x00006f1f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00006f24      6690           nop
0x00006f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00006f30      4883ec48       sub rsp, 0x48
0x00006f34      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00006f37      64488b142528.  mov rdx, qword fs:[0x28]
0x00006f40      4889542438     mov qword [rsp + 0x38], rdx
0x00006f45      31d2           xor edx, edx
0x00006f47      83fe0a         cmp esi, 0xa
0x00006f4a      7468           je 0x6fb4
0x00006f4c      893424         mov dword [rsp], esi
0x00006f4f      4889e1         mov rcx, rsp
0x00006f52      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006f59      4889c6         mov rsi, rax
0x00006f5c      48c744240400.  mov qword [rsp + 4], 0
0x00006f65      48c744240c00.  mov qword [rsp + 0xc], 0
0x00006f6e      48c744241400.  mov qword [rsp + 0x14], 0
0x00006f77      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00006f80      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00006f89      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00006f92      c74424340000.  mov dword [rsp + 0x34], 0
0x00006f9a      e841faffff     call sym.quotearg_n_options
0x00006f9f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00006fa4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006fad      750a           jne 0x6fb9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00006faf      4883c448       add rsp, 0x48
0x00006fb3      c3             ret
0x00006fb4      e8a7abffff     call sym.imp.abort
0x00006fb9      e8b2acffff     call sym.imp.__stack_chk_fail
0x00006fbe      6690           nop
;-- quotearg_n_style_mem:
0x00006fc0      4883ec48       sub rsp, 0x48
0x00006fc4      4889d0         mov rax, rdx
0x00006fc7      4889ca         mov rdx, rcx
0x00006fca      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00006fd3      48894c2438     mov qword [rsp + 0x38], rcx
0x00006fd8      31c9           xor ecx, ecx
0x00006fda      83fe0a         cmp esi, 0xa
0x00006fdd      7461           je 0x7040
0x00006fdf      893424         mov dword [rsp], esi
0x00006fe2      4889e1         mov rcx, rsp
0x00006fe5      4889c6         mov rsi, rax
0x00006fe8      48c744240400.  mov qword [rsp + 4], 0
0x00006ff1      48c744240c00.  mov qword [rsp + 0xc], 0
0x00006ffa      48c744241400.  mov qword [rsp + 0x14], 0
0x00007003      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000700c      48c744242400.  mov qword [rsp + 0x24], 0
0x00007015      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000701e      c74424340000.  mov dword [rsp + 0x34], 0
0x00007026      e8b5f9ffff     call sym.quotearg_n_options
0x0000702b      488b542438     mov rdx, qword [rsp + 0x38]
0x00007030      644833142528.  xor rdx, qword fs:[0x28]
0x00007039      750a           jne 0x7045
0x0000703b      4883c448       add rsp, 0x48
0x0000703f      c3             ret
0x00007040      e81babffff     call sym.imp.abort
0x00007045      e826acffff     call sym.imp.__stack_chk_fail
0x0000704a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00007050      4889f2         mov rdx, rsi
0x00007053      89fe           mov esi, edi
0x00007055      31ff           xor edi, edi
0x00007057      e9d4feffff     jmp sym.quotearg_n_style
0x0000705c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00007060      4889d1         mov rcx, rdx
0x00007063      4889f2         mov rdx, rsi
0x00007066      89fe           mov esi, edi
0x00007068      31ff           xor edi, edi
0x0000706a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000706f      90             nop
;-- quotearg_char_mem:
0x00007070      4883ec48       sub rsp, 0x48
0x00007074      89d1           mov ecx, edx
0x00007076      64488b042528.  mov rax, qword fs:[0x28]
0x0000707f      4889442438     mov qword [rsp + 0x38], rax
0x00007084      31c0           xor eax, eax
0x00007086      488b05c35520.  mov rax, qword [0x0020c650]             ; [0x20c650:8]=0
0x0000708d      4989e0         mov r8, rsp
0x00007090      83e11f         and ecx, 0x1f
0x00007093      660f6f058555.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000709b      4889442430     mov qword [rsp + 0x30], rax
0x000070a0      89d0           mov eax, edx
0x000070a2      0f290424       movaps xmmword [rsp], xmm0
0x000070a6      c0e805         shr al, 5
0x000070a9      0fb6c0         movzx eax, al
0x000070ac      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000070b1      660f6f057755.  movdqa xmm0, xmmword [0x0020c630]
0x000070b9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000070be      660f6f057a55.  movdqa xmm0, xmmword [0x0020c640]
0x000070c6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000070cb      418b11         mov edx, dword [r9]
0x000070ce      89d0           mov eax, edx
0x000070d0      d3e8           shr eax, cl
0x000070d2      f7d0           not eax
0x000070d4      83e001         and eax, 1
0x000070d7      d3e0           shl eax, cl
0x000070d9      4c89c1         mov rcx, r8
0x000070dc      31d0           xor eax, edx
0x000070de      4889f2         mov rdx, rsi
0x000070e1      4889fe         mov rsi, rdi
0x000070e4      418901         mov dword [r9], eax
0x000070e7      31ff           xor edi, edi
0x000070e9      e8f2f8ffff     call sym.quotearg_n_options
0x000070ee      488b742438     mov rsi, qword [rsp + 0x38]
0x000070f3      644833342528.  xor rsi, qword fs:[0x28]
0x000070fc      7505           jne 0x7103
0x000070fe      4883c448       add rsp, 0x48
0x00007102      c3             ret
0x00007103      e868abffff     call sym.imp.__stack_chk_fail
0x00007108      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00007110      400fbed6       movsx edx, sil
0x00007114      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000711b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00007120      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007125      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000712c      e93fffffff     jmp sym.quotearg_char_mem
0x00007131      0f1f440000     nop dword [rax + rax]
0x00007136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00007140      ba3a000000     mov edx, 0x3a                           ; ':'
0x00007145      e926ffffff     jmp sym.quotearg_char_mem
0x0000714a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00007150      4883ec48       sub rsp, 0x48
0x00007154      4889d0         mov rax, rdx
0x00007157      64488b142528.  mov rdx, qword fs:[0x28]
0x00007160      4889542438     mov qword [rsp + 0x38], rdx
0x00007165      31d2           xor edx, edx
0x00007167      83fe0a         cmp esi, 0xa
0x0000716a      7468           je 0x71d4
0x0000716c      893424         mov dword [rsp], esi
0x0000716f      4889e1         mov rcx, rsp
0x00007172      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007179      4889c6         mov rsi, rax
0x0000717c      48c744240400.  mov qword [rsp + 4], 0
0x00007185      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000718e      48c744241400.  mov qword [rsp + 0x14], 0
0x00007197      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000071a0      48c744242400.  mov qword [rsp + 0x24], 0
0x000071a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000071b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000071ba      e821f8ffff     call sym.quotearg_n_options
0x000071bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000071c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000071cd      750a           jne 0x71d9
0x000071cf      4883c448       add rsp, 0x48
0x000071d3      c3             ret
0x000071d4      e887a9ffff     call sym.imp.abort
0x000071d9      e892aaffff     call sym.imp.__stack_chk_fail
0x000071de      6690           nop
;-- quotearg_n_custom_mem:
0x000071e0      4883ec48       sub rsp, 0x48
0x000071e4      4989c9         mov r9, rcx
0x000071e7      488b0d625420.  mov rcx, qword [0x0020c650]             ; [0x20c650:8]=0
0x000071ee      660f6f052a54.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000071f6      64488b042528.  mov rax, qword fs:[0x28]
0x000071ff      4889442438     mov qword [rsp + 0x38], rax
0x00007204      31c0           xor eax, eax
0x00007206      0f290424       movaps xmmword [rsp], xmm0
0x0000720a      4885f6         test rsi, rsi
0x0000720d      48894c2430     mov qword [rsp + 0x30], rcx
0x00007212      c704240a0000.  mov dword [rsp], 0xa
0x00007219      660f6f050f54.  movdqa xmm0, xmmword [0x0020c630]
0x00007221      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00007226      660f6f051254.  movdqa xmm0, xmmword [0x0020c640]
0x0000722e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00007233      7432           je 0x7267
0x00007235      4885d2         test rdx, rdx
0x00007238      742d           je 0x7267
0x0000723a      4889742428     mov qword [rsp + 0x28], rsi
0x0000723f      4889542430     mov qword [rsp + 0x30], rdx
0x00007244      4889e1         mov rcx, rsp
0x00007247      4c89c2         mov rdx, r8
0x0000724a      4c89ce         mov rsi, r9
0x0000724d      e88ef7ffff     call sym.quotearg_n_options
0x00007252      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00007257      6448333c2528.  xor rdi, qword fs:[0x28]
0x00007260      750a           jne 0x726c
0x00007262      4883c448       add rsp, 0x48
0x00007266      c3             ret
0x00007267      e8f4a8ffff     call sym.imp.abort
0x0000726c      e8ffa9ffff     call sym.imp.__stack_chk_fail
0x00007271      0f1f440000     nop dword [rax + rax]
0x00007276      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00007280      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00007287      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000728c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00007290      4889d1         mov rcx, rdx
0x00007293      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000729a      4889f2         mov rdx, rsi
0x0000729d      4889fe         mov rsi, rdi
0x000072a0      31ff           xor edi, edi
0x000072a2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000072a7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000072b0      4989c8         mov r8, rcx
0x000072b3      4889d1         mov rcx, rdx
0x000072b6      4889f2         mov rdx, rsi
0x000072b9      4889fe         mov rsi, rdi
0x000072bc      31ff           xor edi, edi
0x000072be      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000072c3      0f1f00         nop dword [rax]
0x000072c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000072d0      488d0d694d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x000072d7      e904f7ffff     jmp sym.quotearg_n_options
0x000072dc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000072e0      488d0d594d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x000072e7      4889f2         mov rdx, rsi
0x000072ea      4889fe         mov rsi, rdi
0x000072ed      31ff           xor edi, edi
0x000072ef      e9ecf6ffff     jmp sym.quotearg_n_options
0x000072f4      6690           nop
0x000072f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00007300      488d0d394d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x00007307      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000730e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00007313      0f1f00         nop dword [rax]
0x00007316      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00007320      488d0d194d20.  lea rcx, obj.quote_quoting_options      ; 0x20c040
0x00007327      4889fe         mov rsi, rdi
0x0000732a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007331      31ff           xor edi, edi
0x00007333      e9a8f6ffff     jmp sym.quotearg_n_options
0x00007338      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00007340      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00007342      4154           push r12
0x00007344      4189fd         mov r13d, edi
0x00007347      55             push rbp
0x00007348      53             push rbx
0x00007349      4989f4         mov r12, rsi
0x0000734c      4889d3         mov rbx, rdx
0x0000734f      4883ec08       sub rsp, 8
0x00007353      0f1f440000     nop dword [rax + rax]
0x00007358      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000735b      4c89e6         mov rsi, r12
0x0000735e      4489ef         mov edi, r13d
0x00007361      e8faa9ffff     call sym.imp.read
0x00007366      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00007369      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000736c      7922           jns 0x7390                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000736e      e8fda7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00007373      8b00           mov eax, dword [rax]
0x00007375      83f804         cmp eax, 4
0x00007378      74de           je 0x7358
0x0000737a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00007381      760d           jbe 0x7390
0x00007383      83f816         cmp eax, 0x16
0x00007386      7508           jne 0x7390
0x00007388      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000738d      ebc9           jmp 0x7358
0x0000738f      90             nop
0x00007390      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00007394      4889e8         mov rax, rbp
0x00007397      5b             pop rbx
0x00007398      5d             pop rbp
0x00007399      415c           pop r12
0x0000739b      415d           pop r13
0x0000739d      c3             ret
0x0000739e      6690           nop
;-- safe_write:
0x000073a0      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x000073a2      4154           push r12
0x000073a4      4189fd         mov r13d, edi
0x000073a7      55             push rbp
0x000073a8      53             push rbx
0x000073a9      4989f4         mov r12, rsi
0x000073ac      4889d3         mov rbx, rdx
0x000073af      4883ec08       sub rsp, 8
0x000073b3      0f1f440000     nop dword [rax + rax]
0x000073b8      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x000073bb      4c89e6         mov rsi, r12
0x000073be      4489ef         mov edi, r13d
0x000073c1      e83aa8ffff     call sym.imp.write
0x000073c6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x000073c9      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x000073cc      7922           jns 0x73f0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x000073ce      e89da7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x000073d3      8b00           mov eax, dword [rax]
0x000073d5      83f804         cmp eax, 4
0x000073d8      74de           je 0x73b8
0x000073da      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x000073dd      7511           jne 0x73f0
0x000073df      4881fb0000f0.  cmp rbx, 0x7ff00000
0x000073e6      7608           jbe 0x73f0
0x000073e8      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x000073ed      ebc9           jmp 0x73b8
0x000073ef      90             nop
0x000073f0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x000073f4      4889e8         mov rax, rbp
0x000073f7      5b             pop rbx
0x000073f8      5d             pop rbp
0x000073f9      415c           pop r12
0x000073fb      415d           pop r13
0x000073fd      c3             ret
0x000073fe      6690           nop
;-- fd_safer:
0x00007400      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x00007402      4154           push r12
0x00007404      55             push rbp
0x00007405      53             push rbx
0x00007406      89fb           mov ebx, edi
0x00007408      4883ec08       sub rsp, 8
0x0000740c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000740f      7721           ja 0x7432
0x00007411      e86a130000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00007416      4189c4         mov r12d, eax
0x00007419      e852a7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000741e      448b28         mov r13d, dword [rax]
0x00007421      4889c5         mov rbp, rax
0x00007424      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00007426      e8f5a8ffff     call sym.imp.close
0x0000742b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000742e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00007432      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00007436      89d8           mov eax, ebx
0x00007438      5b             pop rbx
0x00007439      5d             pop rbp
0x0000743a      415c           pop r12
0x0000743c      415d           pop r13
0x0000743e      c3             ret
0x0000743f      90             nop
;-- version_etc_arn:
0x00007440      4157           push r15
0x00007442      4156           push r14
0x00007444      4155           push r13
0x00007446      4154           push r12
0x00007448      4d89cc         mov r12, r9
0x0000744b      55             push rbp
0x0000744c      53             push rbx
0x0000744d      4889fd         mov rbp, rdi
0x00007450      4c89c3         mov rbx, r8
0x00007453      4883ec28       sub rsp, 0x28
0x00007457      4885f6         test rsi, rsi
0x0000745a      0f8418010000   je 0x7578
0x00007460      4989d0         mov r8, rdx
0x00007463      488d157e2c00.  lea rdx, [0x0000a0e8]                   ; "%s (%s) %s\n"
0x0000746a      4989c9         mov r9, rcx
0x0000746d      31c0           xor eax, eax
0x0000746f      4889f1         mov rcx, rsi
0x00007472      be01000000     mov esi, 1
0x00007477      e8c4aaffff     call sym.imp.__fprintf_chk
0x0000747c      488d35782c00.  lea rsi, [0x0000a0fb]                   ; "(C)"
0x00007483      31ff           xor edi, edi
0x00007485      ba05000000     mov edx, 5
0x0000748a      e8b1a7ffff     call sym.imp.dcgettext
0x0000748f      488d158a2f00.  lea rdx, obj.version_etc_copyright      ; 0xa420 ; "Copyright %s %d Free Software Foundation, Inc."
0x00007496      4889c1         mov rcx, rax
0x00007499      41b8e3070000   mov r8d, 0x7e3
0x0000749f      be01000000     mov esi, 1
0x000074a4      4889ef         mov rdi, rbp
0x000074a7      31c0           xor eax, eax
0x000074a9      e892aaffff     call sym.imp.__fprintf_chk
0x000074ae      488d35d32c00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xa188 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000074b5      31ff           xor edi, edi
0x000074b7      ba05000000     mov edx, 5
0x000074bc      e87fa7ffff     call sym.imp.dcgettext
0x000074c1      4889ee         mov rsi, rbp
0x000074c4      4889c7         mov rdi, rax
0x000074c7      e8b4a8ffff     call sym.imp.fputs_unlocked
0x000074cc      4983fc09       cmp r12, 9
0x000074d0      0f873a030000   ja 0x7810
0x000074d6      488d15072f00.  lea rdx, [0x0000a3e4]
0x000074dd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000074e1      4801d0         add rax, rdx
0x000074e4      ffe0           jmp rax
0x000074e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000074f0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000074f4      488b4310       mov rax, qword [rbx + 0x10]
0x000074f8      488d35f92d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xa2f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000074ff      4c8b4308       mov r8, qword [rbx + 8]
0x00007503      ba05000000     mov edx, 5
0x00007508      31ff           xor edi, edi
0x0000750a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000750e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007512      4c894c2410     mov qword [rsp + 0x10], r9
0x00007517      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000751b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000751f      48890424       mov qword [rsp], rax
0x00007523      4c89442408     mov qword [rsp + 8], r8
0x00007528      488b1b         mov rbx, qword [rbx]
0x0000752b      e810a7ffff     call sym.imp.dcgettext
0x00007530      4883ec08       sub rsp, 8
0x00007534      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00007539      4889c2         mov rdx, rax
0x0000753c      4889d9         mov rcx, rbx
0x0000753f      be01000000     mov esi, 1
0x00007544      4889ef         mov rdi, rbp
0x00007547      31c0           xor eax, eax
0x00007549      4151           push r9
0x0000754b      4155           push r13
0x0000754d      4154           push r12
0x0000754f      4157           push r15
0x00007551      4156           push r14
0x00007553      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007558      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000755d      e8dea9ffff     call sym.imp.__fprintf_chk
0x00007562      4883c430       add rsp, 0x30
0x00007566      4883c428       add rsp, 0x28
0x0000756a      5b             pop rbx
0x0000756b      5d             pop rbp
0x0000756c      415c           pop r12
0x0000756e      415d           pop r13
0x00007570      415e           pop r14
0x00007572      415f           pop r15
0x00007574      c3             ret
0x00007575      0f1f00         nop dword [rax]
0x00007578      4989c8         mov r8, rcx
0x0000757b      4889d1         mov rcx, rdx
0x0000757e      488d156f2b00.  lea rdx, str.s__s                       ; 0xa0f4 ; "%s %s\n"
0x00007585      be01000000     mov esi, 1
0x0000758a      31c0           xor eax, eax
0x0000758c      e8afa9ffff     call sym.imp.__fprintf_chk
0x00007591      e9e6feffff     jmp 0x747c
0x00007596      662e0f1f8400.  nop word cs:[rax + rax]
0x000075a0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000075a4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000075a8      488d35792d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xa328 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000075af      488b4310       mov rax, qword [rbx + 0x10]
0x000075b3      4c8b4308       mov r8, qword [rbx + 8]
0x000075b7      ba05000000     mov edx, 5
0x000075bc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000075c0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000075c4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000075c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000075cc      488b1b         mov rbx, qword [rbx]
0x000075cf      4c89542418     mov qword [rsp + 0x18], r10
0x000075d4      4c894c2410     mov qword [rsp + 0x10], r9
0x000075d9      48890424       mov qword [rsp], rax
0x000075dd      4c89442408     mov qword [rsp + 8], r8
0x000075e2      31ff           xor edi, edi
0x000075e4      e857a6ffff     call sym.imp.dcgettext
0x000075e9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000075ee      4152           push r10
0x000075f0      e93fffffff     jmp 0x7534
0x000075f5      0f1f00         nop dword [rax]
0x000075f8      488b1b         mov rbx, qword [rbx]
0x000075fb      488d35fd2a00.  lea rsi, str.Written_by__s.             ; 0xa0ff ; "Written by %s.\n"
0x00007602      ba05000000     mov edx, 5
0x00007607      31ff           xor edi, edi
0x00007609      e832a6ffff     call sym.imp.dcgettext
0x0000760e      4883c428       add rsp, 0x28
0x00007612      4889d9         mov rcx, rbx
0x00007615      4889ef         mov rdi, rbp
0x00007618      5b             pop rbx
0x00007619      5d             pop rbp
0x0000761a      415c           pop r12
0x0000761c      415d           pop r13
0x0000761e      415e           pop r14
0x00007620      415f           pop r15
0x00007622      4889c2         mov rdx, rax
0x00007625      be01000000     mov esi, 1
0x0000762a      31c0           xor eax, eax
0x0000762c      e90fa9ffff     jmp sym.imp.__fprintf_chk
0x00007631      0f1f80000000.  nop dword [rax]
0x00007638      4c8b6308       mov r12, qword [rbx + 8]
0x0000763c      488d35cc2a00.  lea rsi, str.Written_by__s_and__s.      ; 0xa10f ; "Written by %s and %s.\n"
0x00007643      488b1b         mov rbx, qword [rbx]
0x00007646      ba05000000     mov edx, 5
0x0000764b      31ff           xor edi, edi
0x0000764d      e8eea5ffff     call sym.imp.dcgettext
0x00007652      4883c428       add rsp, 0x28
0x00007656      4d89e0         mov r8, r12
0x00007659      4889d9         mov rcx, rbx
0x0000765c      4889ef         mov rdi, rbp
0x0000765f      4889c2         mov rdx, rax
0x00007662      be01000000     mov esi, 1
0x00007667      5b             pop rbx
0x00007668      5d             pop rbp
0x00007669      415c           pop r12
0x0000766b      415d           pop r13
0x0000766d      415e           pop r14
0x0000766f      415f           pop r15
0x00007671      31c0           xor eax, eax
0x00007673      e9c8a8ffff     jmp sym.imp.__fprintf_chk
0x00007678      0f1f84000000.  nop dword [rax + rax]
0x00007680      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007684      4c8b6308       mov r12, qword [rbx + 8]
0x00007688      488d35972a00.  lea rsi, str.Written_by__s___s__and__s. ; 0xa126 ; "Written by %s, %s, and %s.\n"
0x0000768f      488b1b         mov rbx, qword [rbx]
0x00007692      ba05000000     mov edx, 5
0x00007697      31ff           xor edi, edi
0x00007699      e8a2a5ffff     call sym.imp.dcgettext
0x0000769e      4883c428       add rsp, 0x28
0x000076a2      4d89e9         mov r9, r13
0x000076a5      4d89e0         mov r8, r12
0x000076a8      4889d9         mov rcx, rbx
0x000076ab      4889ef         mov rdi, rbp
0x000076ae      4889c2         mov rdx, rax
0x000076b1      5b             pop rbx
0x000076b2      5d             pop rbp
0x000076b3      415c           pop r12
0x000076b5      415d           pop r13
0x000076b7      415e           pop r14
0x000076b9      415f           pop r15
0x000076bb      be01000000     mov esi, 1
0x000076c0      31c0           xor eax, eax
0x000076c2      e979a8ffff     jmp sym.imp.__fprintf_chk
0x000076c7      660f1f840000.  nop word [rax + rax]
0x000076d0      488d35812b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xa258 ; "Written by %s, %s, %s,\nand %s.\n"
0x000076d7      ba05000000     mov edx, 5
0x000076dc      31ff           xor edi, edi
0x000076de      4c8b7318       mov r14, qword [rbx + 0x18]
0x000076e2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000076e6      4c8b6308       mov r12, qword [rbx + 8]
0x000076ea      488b1b         mov rbx, qword [rbx]
0x000076ed      e84ea5ffff     call sym.imp.dcgettext
0x000076f2      4883ec08       sub rsp, 8
0x000076f6      4156           push r14
0x000076f8      4889c2         mov rdx, rax
0x000076fb      4d89e9         mov r9, r13
0x000076fe      4d89e0         mov r8, r12
0x00007701      4889d9         mov rcx, rbx
0x00007704      4889ef         mov rdi, rbp
0x00007707      be01000000     mov esi, 1
0x0000770c      31c0           xor eax, eax
0x0000770e      e82da8ffff     call sym.imp.__fprintf_chk
0x00007713      58             pop rax
0x00007714      5a             pop rdx
0x00007715      4883c428       add rsp, 0x28
0x00007719      5b             pop rbx
0x0000771a      5d             pop rbp
0x0000771b      415c           pop r12
0x0000771d      415d           pop r13
0x0000771f      415e           pop r14
0x00007721      415f           pop r15
0x00007723      c3             ret
0x00007724      0f1f4000       nop dword [rax]
0x00007728      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000772c      488d35452b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xa278 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00007733      ba05000000     mov edx, 5
0x00007738      31ff           xor edi, edi
0x0000773a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000773e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007742      4c8b6308       mov r12, qword [rbx + 8]
0x00007746      488b1b         mov rbx, qword [rbx]
0x00007749      e8f2a4ffff     call sym.imp.dcgettext
0x0000774e      4157           push r15
0x00007750      eba4           jmp 0x76f6
0x00007752      660f1f440000   nop word [rax + rax]
0x00007758      4c8b4308       mov r8, qword [rbx + 8]
0x0000775c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007760      488d35392b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xa2a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00007767      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000776b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000776f      ba05000000     mov edx, 5
0x00007774      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00007778      31ff           xor edi, edi
0x0000777a      488b1b         mov rbx, qword [rbx]
0x0000777d      4c890424       mov qword [rsp], r8
0x00007781      e8baa4ffff     call sym.imp.dcgettext
0x00007786      4883ec08       sub rsp, 8
0x0000778a      4d89e9         mov r9, r13
0x0000778d      4154           push r12
0x0000778f      4157           push r15
0x00007791      4156           push r14
0x00007793      4c8b442420     mov r8, qword [rsp + 0x20]
0x00007798      4889d9         mov rcx, rbx
0x0000779b      4889c2         mov rdx, rax
0x0000779e      4889ef         mov rdi, rbp
0x000077a1      be01000000     mov esi, 1
0x000077a6      31c0           xor eax, eax
0x000077a8      e893a7ffff     call sym.imp.__fprintf_chk
0x000077ad      4883c420       add rsp, 0x20
0x000077b1      4883c428       add rsp, 0x28
0x000077b5      5b             pop rbx
0x000077b6      5d             pop rbp
0x000077b7      415c           pop r12
0x000077b9      415d           pop r13
0x000077bb      415e           pop r14
0x000077bd      415f           pop r15
0x000077bf      c3             ret
0x000077c0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000077c4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000077c8      488d35f92a00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xa2c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000077cf      4c8b6328       mov r12, qword [rbx + 0x28]
0x000077d3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000077d7      ba05000000     mov edx, 5
0x000077dc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000077e0      4c8b4308       mov r8, qword [rbx + 8]
0x000077e4      31ff           xor edi, edi
0x000077e6      4c894c2408     mov qword [rsp + 8], r9
0x000077eb      488b1b         mov rbx, qword [rbx]
0x000077ee      4c890424       mov qword [rsp], r8
0x000077f2      e849a4ffff     call sym.imp.dcgettext
0x000077f7      4155           push r13
0x000077f9      4154           push r12
0x000077fb      4157           push r15
0x000077fd      4156           push r14
0x000077ff      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00007804      eb8d           jmp 0x7793
0x00007806      662e0f1f8400.  nop word cs:[rax + rax]
0x00007810      4c8b5340       mov r10, qword [rbx + 0x40]
0x00007814      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00007818      ba05000000     mov edx, 5
0x0000781d      488b4310       mov rax, qword [rbx + 0x10]
0x00007821      4c8b4308       mov r8, qword [rbx + 8]
0x00007825      488d35342b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xa360 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000782c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00007830      4c8b6328       mov r12, qword [rbx + 0x28]
0x00007834      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00007838      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000783c      4c89542418     mov qword [rsp + 0x18], r10
0x00007841      4c894c2410     mov qword [rsp + 0x10], r9
0x00007846      48890424       mov qword [rsp], rax
0x0000784a      4c89442408     mov qword [rsp + 8], r8
0x0000784f      488b1b         mov rbx, qword [rbx]
0x00007852      e98bfdffff     jmp 0x75e2
0x00007857      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00007860      4531c9         xor r9d, r9d
0x00007863      49833800       cmp qword [r8], 0
0x00007867      7412           je 0x787b
0x00007869      0f1f80000000.  nop dword [rax]
0x00007870      4983c101       add r9, 1
0x00007874      4b833cc800     cmp qword [r8 + r9*8], 0
0x00007879      75f5           jne 0x7870
0x0000787b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00007880      4883ec68       sub rsp, 0x68
0x00007884      4d89c2         mov r10, r8
0x00007887      4531c9         xor r9d, r9d
0x0000788a      64488b042528.  mov rax, qword fs:[0x28]
0x00007893      4889442458     mov qword [rsp + 0x58], rax
0x00007898      31c0           xor eax, eax
0x0000789a      4989e0         mov r8, rsp
0x0000789d      0f1f00         nop dword [rax]
0x000078a0      418b02         mov eax, dword [r10]
0x000078a3      83f82f         cmp eax, 0x2f
0x000078a6      7742           ja 0x78ea
0x000078a8      4189c3         mov r11d, eax
0x000078ab      4d035a10       add r11, qword [r10 + 0x10]
0x000078af      83c008         add eax, 8
0x000078b2      418902         mov dword [r10], eax
0x000078b5      498b03         mov rax, qword [r11]
0x000078b8      4885c0         test rax, rax
0x000078bb      4b8904c8       mov qword [r8 + r9*8], rax
0x000078bf      740a           je 0x78cb
0x000078c1      4983c101       add r9, 1
0x000078c5      4983f90a       cmp r9, 0xa
0x000078c9      75d5           jne 0x78a0
0x000078cb      e870fbffff     call sym.version_etc_arn
0x000078d0      488b442458     mov rax, qword [rsp + 0x58]
0x000078d5      644833042528.  xor rax, qword fs:[0x28]
0x000078de      7505           jne 0x78e5
0x000078e0      4883c468       add rsp, 0x68
0x000078e4      c3             ret
0x000078e5      e886a3ffff     call sym.imp.__stack_chk_fail
0x000078ea      4d8b5a08       mov r11, qword [r10 + 8]
0x000078ee      498d4308       lea rax, [r11 + 8]
0x000078f2      49894208       mov qword [r10 + 8], rax
0x000078f6      ebbd           jmp 0x78b5
0x000078f8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00007900      55             push rbp
0x00007901      53             push rbx
0x00007902      41ba20000000   mov r10d, 0x20                          ; "@"
0x00007908      4531db         xor r11d, r11d
0x0000790b      4881ecb80000.  sub rsp, 0xb8
0x00007912      64488b042528.  mov rax, qword fs:[0x28]
0x0000791b      4889442478     mov qword [rsp + 0x78], rax
0x00007920      31c0           xor eax, eax
0x00007922      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000792a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00007932      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000793a      4c8d442420     lea r8, [rsp + 0x20]
0x0000793f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00007947      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000794f      4889442410     mov qword [rsp + 0x10], rax
0x00007954      488d84248000.  lea rax, [rsp + 0x80]
0x0000795c      4531c9         xor r9d, r9d
0x0000795f      4889442418     mov qword [rsp + 0x18], rax
0x00007964      4889c5         mov rbp, rax
0x00007967      660f1f840000.  nop word [rax + rax]
0x00007970      4183fa2f       cmp r10d, 0x2f
0x00007974      7756           ja 0x79cc
0x00007976      4489d0         mov eax, r10d
0x00007979      41bb01000000   mov r11d, 1
0x0000797f      4183c208       add r10d, 8
0x00007983      4801e8         add rax, rbp
0x00007986      488b00         mov rax, qword [rax]
0x00007989      4885c0         test rax, rax
0x0000798c      4b8904c8       mov qword [r8 + r9*8], rax
0x00007990      740a           je 0x799c
0x00007992      4983c101       add r9, 1
0x00007996      4983f90a       cmp r9, 0xa
0x0000799a      75d4           jne 0x7970
0x0000799c      4584db         test r11b, r11b
0x0000799f      7524           jne 0x79c5
0x000079a1      e89afaffff     call sym.version_etc_arn
0x000079a6      488b442478     mov rax, qword [rsp + 0x78]
0x000079ab      644833042528.  xor rax, qword fs:[0x28]
0x000079b4      750a           jne 0x79c0
0x000079b6      4881c4b80000.  add rsp, 0xb8
0x000079bd      5b             pop rbx
0x000079be      5d             pop rbp
0x000079bf      c3             ret
0x000079c0      e8aba2ffff     call sym.imp.__stack_chk_fail
0x000079c5      4489542408     mov dword [rsp + 8], r10d
0x000079ca      ebd5           jmp 0x79a1
0x000079cc      4889d8         mov rax, rbx
0x000079cf      4883c308       add rbx, 8
0x000079d3      ebb1           jmp 0x7986
0x000079d5      90             nop
0x000079d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000079e0      53             push rbx
0x000079e1      488d355a2700.  lea rsi, str.Report_bugs_to:__s         ; 0xa142 ; "\nReport bugs to: %s\n"
0x000079e8      ba05000000     mov edx, 5
0x000079ed      31ff           xor edi, edi
0x000079ef      e84ca2ffff     call sym.imp.dcgettext
0x000079f4      488d155c2700.  lea rdx, str.bug_coreutils_gnu.org      ; 0xa157 ; "bug-coreutils@gnu.org"
0x000079fb      4889c6         mov rsi, rax
0x000079fe      bf01000000     mov edi, 1
0x00007a03      31c0           xor eax, eax
0x00007a05      e876a4ffff     call sym.imp.__printf_chk
0x00007a0a      488d355c2700.  lea rsi, str.s_home_page:___s           ; 0xa16d ; "%s home page: <%s>\n"
0x00007a11      ba05000000     mov edx, 5
0x00007a16      31ff           xor edi, edi
0x00007a18      e823a2ffff     call sym.imp.dcgettext
0x00007a1d      488d0d841e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x98a8 ; "https://www.gnu.org/software/coreutils/"
0x00007a24      488d15561200.  lea rdx, str.GNU_coreutils              ; 0x8c81 ; "GNU coreutils"
0x00007a2b      4889c6         mov rsi, rax
0x00007a2e      bf01000000     mov edi, 1
0x00007a33      31c0           xor eax, eax
0x00007a35      e846a4ffff     call sym.imp.__printf_chk
0x00007a3a      488b1d274820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c268:8]=0
0x00007a41      488d35582900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xa3a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00007a48      31ff           xor edi, edi
0x00007a4a      ba05000000     mov edx, 5
0x00007a4f      e8eca1ffff     call sym.imp.dcgettext
0x00007a54      4889de         mov rsi, rbx
0x00007a57      4889c7         mov rdi, rax
0x00007a5a      5b             pop rbx
0x00007a5b      e920a3ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00007a60      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00007a61      4889fb         mov rbx, rdi
0x00007a64      e887a3ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00007a69      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00007a6c      7505           jne 0x7a73
0x00007a6e      4885db         test rbx, rbx
0x00007a71      7502           jne 0x7a75
0x00007a73      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00007a74      c3             ret
0x00007a75      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00007a7a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00007a80      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00007a83      48f7e6         mul rsi
0x00007a86      4889c7         mov rdi, rax
0x00007a89      0f90c0         seto al
0x00007a8c      4885ff         test rdi, rdi
0x00007a8f      780a           js 0x7a9b
0x00007a91      0fb6c0         movzx eax, al
0x00007a94      4885c0         test rax, rax
0x00007a97      7502           jne 0x7a9b
0x00007a99      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00007a9b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00007a9f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00007aa4      6690           nop
0x00007aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00007ab0      ebae           jmp sym.xmalloc
0x00007ab2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00007ab6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00007ac0      4885f6         test rsi, rsi
0x00007ac3      53             push rbx
0x00007ac4      4889f3         mov rbx, rsi
0x00007ac7      7505           jne 0x7ace
0x00007ac9      4885ff         test rdi, rdi
0x00007acc      751a           jne 0x7ae8
0x00007ace      4889de         mov rsi, rbx
0x00007ad1      e87aa3ffff     call sym.imp.realloc
0x00007ad6      4885c0         test rax, rax
0x00007ad9      7505           jne 0x7ae0
0x00007adb      4885db         test rbx, rbx
0x00007ade      7511           jne 0x7af1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00007ae0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00007ae1      c3             ret
0x00007ae2      660f1f440000   nop word [rax + rax]
0x00007ae8      e863a0ffff     call sym.imp.free
0x00007aed      31c0           xor eax, eax
0x00007aef      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00007af0      c3             ret
0x00007af1      e8ba010000     call sym.xalloc_die
0x00007af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00007b00      4889f0         mov rax, rsi
0x00007b03      48f7e2         mul rdx
0x00007b06      4889c6         mov rsi, rax
0x00007b09      0f90c0         seto al
0x00007b0c      4885f6         test rsi, rsi
0x00007b0f      780a           js 0x7b1b
0x00007b11      0fb6c0         movzx eax, al
0x00007b14      4885c0         test rax, rax
0x00007b17      7502           jne 0x7b1b
0x00007b19      eba5           jmp sym.xrealloc
0x00007b1b      4883ec08       sub rsp, 8
0x00007b1f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00007b24      6690           nop
0x00007b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00007b30      4885ff         test rdi, rdi
0x00007b33      4989d1         mov r9, rdx
0x00007b36      488b0e         mov rcx, qword [rsi]
0x00007b39      7435           je 0x7b70
0x00007b3b      31d2           xor edx, edx
0x00007b3d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00007b47      49f7f1         div r9
0x00007b4a      4839c8         cmp rax, rcx
0x00007b4d      763c           jbe 0x7b8b
0x00007b4f      4889c8         mov rax, rcx
0x00007b52      48d1e8         shr rax, 1
0x00007b55      488d4c0801     lea rcx, [rax + rcx + 1]
0x00007b5a      48890e         mov qword [rsi], rcx
0x00007b5d      490fafc9       imul rcx, r9
0x00007b61      4889ce         mov rsi, rcx
0x00007b64      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00007b69      0f1f80000000.  nop dword [rax]
0x00007b70      4885c9         test rcx, rcx
0x00007b73      7423           je 0x7b98
0x00007b75      4889c8         mov rax, rcx
0x00007b78      49f7e1         mul r9
0x00007b7b      0f90c2         seto dl
0x00007b7e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00007b81      0fb6d2         movzx edx, dl
0x00007b84      7805           js 0x7b8b
0x00007b86      4885d2         test rdx, rdx
0x00007b89      74cf           je 0x7b5a
0x00007b8b      4883ec08       sub rsp, 8
0x00007b8f      e81c010000     call sym.xalloc_die
0x00007b94      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00007b98      31d2           xor edx, edx
0x00007b9a      b880000000     mov eax, 0x80
0x00007b9f      4531c0         xor r8d, r8d
0x00007ba2      49f7f1         div r9
0x00007ba5      4885c0         test rax, rax
0x00007ba8      410f94c0       sete r8b
0x00007bac      498d0c00       lea rcx, [r8 + rax]
0x00007bb0      ebc3           jmp 0x7b75
0x00007bb2      0f1f4000       nop dword [rax]
0x00007bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00007bc0      4885ff         test rdi, rdi
0x00007bc3      488b06         mov rax, qword [rsi]
0x00007bc6      7428           je 0x7bf0
0x00007bc8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00007bd2      4839d0         cmp rax, rdx
0x00007bd5      772a           ja 0x7c01
0x00007bd7      4889c2         mov rdx, rax
0x00007bda      48d1ea         shr rdx, 1
0x00007bdd      488d440201     lea rax, [rdx + rax + 1]
0x00007be2      488906         mov qword [rsi], rax
0x00007be5      4889c6         mov rsi, rax
0x00007be8      e9d3feffff     jmp sym.xrealloc
0x00007bed      0f1f00         nop dword [rax]
0x00007bf0      4885c0         test rax, rax
0x00007bf3      ba80000000     mov edx, 0x80
0x00007bf8      480f44c2       cmove rax, rdx
0x00007bfc      4885c0         test rax, rax
0x00007bff      79e1           jns 0x7be2
0x00007c01      4883ec08       sub rsp, 8
0x00007c05      e8a6000000     call sym.xalloc_die
0x00007c0a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00007c10      53             push rbx
0x00007c11      4889fb         mov rbx, rdi
0x00007c14      e847feffff     call sym.xmalloc
0x00007c19      4889da         mov rdx, rbx
0x00007c1c      31f6           xor esi, esi
0x00007c1e      4889c7         mov rdi, rax
0x00007c21      5b             pop rbx
0x00007c22      e9e9a0ffff     jmp sym.imp.memset
0x00007c27      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00007c30      4889f8         mov rax, rdi
0x00007c33      4883ec08       sub rsp, 8
0x00007c37      48f7e6         mul rsi
0x00007c3a      0f90c2         seto dl
0x00007c3d      4885c0         test rax, rax
0x00007c40      7817           js 0x7c59
0x00007c42      0fb6d2         movzx edx, dl
0x00007c45      4885d2         test rdx, rdx
0x00007c48      750f           jne 0x7c59
0x00007c4a      e841a1ffff     call sym.imp.calloc
0x00007c4f      4885c0         test rax, rax
0x00007c52      7405           je 0x7c59
0x00007c54      4883c408       add rsp, 8
0x00007c58      c3             ret
0x00007c59      e852000000     call sym.xalloc_die
0x00007c5e      6690           nop
;-- xmemdup:
0x00007c60      55             push rbp
0x00007c61      53             push rbx
0x00007c62      4889fd         mov rbp, rdi
0x00007c65      4889f7         mov rdi, rsi
0x00007c68      4889f3         mov rbx, rsi
0x00007c6b      4883ec08       sub rsp, 8
0x00007c6f      e8ecfdffff     call sym.xmalloc
0x00007c74      4883c408       add rsp, 8
0x00007c78      4889da         mov rdx, rbx
0x00007c7b      4889ee         mov rsi, rbp
0x00007c7e      5b             pop rbx
0x00007c7f      5d             pop rbp
0x00007c80      4889c7         mov rdi, rax
0x00007c83      e948a1ffff     jmp sym.imp.memcpy
0x00007c88      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00007c90      53             push rbx
0x00007c91      4889fb         mov rbx, rdi
0x00007c94      e8c79fffff     call sym.imp.strlen
0x00007c99      4889df         mov rdi, rbx
0x00007c9c      488d7001       lea rsi, [rax + 1]
0x00007ca0      5b             pop rbx
0x00007ca1      ebbd           jmp sym.xmemdup
0x00007ca3      662e0f1f8400.  nop word cs:[rax + rax]
0x00007cad      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00007cb0      488d35982700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xa44f ; "memory exhausted"
0x00007cb7      4883ec08       sub rsp, 8
0x00007cbb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00007cc0      31ff           xor edi, edi
0x00007cc2      e8799fffff     call sym.imp.dcgettext
0x00007cc7      8b3d63432000   mov edi, dword [obj.exit_failure]       ; [0x20c030:4]=1
0x00007ccd      488d151a1100.  lea rdx, [0x00008dee]                   ; "%s"
0x00007cd4      4889c1         mov rcx, rax
0x00007cd7      31f6           xor esi, esi
0x00007cd9      31c0           xor eax, eax
0x00007cdb      e8c0a1ffff     call sym.imp.error
0x00007ce0      e87b9effff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00007ce5      662e0f1f8400.  nop word cs:[rax + rax]
0x00007cef      90             nop
;-- xnumtoumax:
0x00007cf0      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00007cf2      4156           push r14
0x00007cf4      4989cf         mov r15, rcx
0x00007cf7      4155           push r13
0x00007cf9      4154           push r12
0x00007cfb      4989d6         mov r14, rdx
0x00007cfe      55             push rbp
0x00007cff      53             push rbx
0x00007d00      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00007d02      31f6           xor esi, esi
0x00007d04      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00007d07      4d89cd         mov r13, r9
0x00007d0a      4883ec18       sub rsp, 0x18
0x00007d0e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00007d11      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00007d15      64488b042528.  mov rax, qword fs:[0x28]
0x00007d1e      4889442408     mov qword [rsp + 8], rax
0x00007d23      31c0           xor eax, eax
0x00007d25      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00007d2a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00007d2c      0f858e000000   jne 0x7dc0
0x00007d32      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00007d36      4c39f5         cmp rbp, r14
0x00007d39      7205           jb 0x7d40
0x00007d3b      4c39fd         cmp rbp, r15
0x00007d3e      7654           jbe 0x7d94
0x00007d40      e82b9effff     call sym.imp.__errno_location
0x00007d45      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x00007d4c      4989c6         mov r14, rax
0x00007d4f      19c0           sbb eax, eax
0x00007d51      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00007d54      83c04b         add eax, 0x4b
0x00007d57      418906         mov dword [r14], eax
0x00007d5a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00007d5d      e8bef5ffff     call sym.quote
0x00007d62      418b36         mov esi, dword [r14]
0x00007d65      4989c0         mov r8, rax
0x00007d68      b800000000     mov eax, 0
0x00007d6d      488d15761000.  lea rdx, str.s:__s                      ; 0x8dea ; "%s: %s"
0x00007d74      4c89e9         mov rcx, r13
0x00007d77      83fe16         cmp esi, 0x16
0x00007d7a      0f44f0         cmove esi, eax
0x00007d7d      85db           test ebx, ebx
0x00007d7f      b801000000     mov eax, 1
0x00007d84      0f44d8         cmove ebx, eax
0x00007d87      31c0           xor eax, eax
0x00007d89      89df           mov edi, ebx
0x00007d8b      e810a1ffff     call sym.imp.error
0x00007d90      488b2c24       mov rbp, qword [rsp]
0x00007d94      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00007d99      644833142528.  xor rdx, qword fs:[0x28]
0x00007da2      4889e8         mov rax, rbp
0x00007da5      7544           jne 0x7deb
0x00007da7      4883c418       add rsp, 0x18
0x00007dab      5b             pop rbx
0x00007dac      5d             pop rbp
0x00007dad      415c           pop r12
0x00007daf      415d           pop r13
0x00007db1      415e           pop r14
0x00007db3      415f           pop r15
0x00007db5      c3             ret
0x00007db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007dc0      89c5           mov ebp, eax
0x00007dc2      e8a99dffff     call sym.imp.__errno_location
0x00007dc7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x00007dca      4989c6         mov r14, rax
0x00007dcd      7411           je 0x7de0
0x00007dcf      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00007dd2      7586           jne 0x7d5a
0x00007dd4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x00007dda      e97bffffff     jmp 0x7d5a
0x00007ddf      90             nop
0x00007de0      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00007de6      e96fffffff     jmp 0x7d5a
0x00007deb      e8809effff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00007df0      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00007df4      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00007df6      4d89c1         mov r9, r8
0x00007df9      4989c8         mov r8, rcx
0x00007dfc      4889d1         mov rcx, rdx
0x00007dff      4889f2         mov rdx, rsi
0x00007e02      be0a000000     mov esi, 0xa
0x00007e07      e8e4feffff     call sym.xnumtoumax
0x00007e0c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00007e10      c3             ret
0x00007e11      662e0f1f8400.  nop word cs:[rax + rax]
0x00007e1b      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00007e20      4157           push r15
0x00007e22      4156           push r14
0x00007e24      4155           push r13
0x00007e26      4154           push r12
0x00007e28      55             push rbp
0x00007e29      53             push rbx
0x00007e2a      4883ec28       sub rsp, 0x28
0x00007e2e      64488b042528.  mov rax, qword fs:[0x28]
0x00007e37      4889442418     mov qword [rsp + 0x18], rax
0x00007e3c      31c0           xor eax, eax
0x00007e3e      83fa24         cmp edx, 0x24
0x00007e41      0f875e030000   ja 0x81a5
0x00007e47      488d442410     lea rax, [rsp + 0x10]
0x00007e4c      4989f7         mov r15, rsi
0x00007e4f      4885f6         test rsi, rsi
0x00007e52      4889fd         mov rbp, rdi
0x00007e55      89542408       mov dword [rsp + 8], edx
0x00007e59      4989ce         mov r14, rcx
0x00007e5c      4d89c5         mov r13, r8
0x00007e5f      4c0f44f8       cmove r15, rax
0x00007e63      e8089dffff     call sym.imp.__errno_location
0x00007e68      c70000000000   mov dword [rax], 0
0x00007e6e      4989c4         mov r12, rax
0x00007e71      0fb65d00       movzx ebx, byte [rbp]
0x00007e75      e836a1ffff     call sym.imp.__ctype_b_loc
0x00007e7a      8b542408       mov edx, dword [rsp + 8]
0x00007e7e      488b30         mov rsi, qword [rax]
0x00007e81      4889e8         mov rax, rbp
0x00007e84      eb11           jmp 0x7e97
0x00007e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00007e90      4883c001       add rax, 1
0x00007e94      0fb618         movzx ebx, byte [rax]
0x00007e97      0fb6cb         movzx ecx, bl
0x00007e9a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00007e9f      75ef           jne 0x7e90
0x00007ea1      80fb2d         cmp bl, 0x2d
0x00007ea4      7452           je 0x7ef8
0x00007ea6      31c9           xor ecx, ecx
0x00007ea8      4c89fe         mov rsi, r15
0x00007eab      4889ef         mov rdi, rbp
0x00007eae      e84d9effff     call sym.imp.__strtoul_internal
0x00007eb3      498b0f         mov rcx, qword [r15]
0x00007eb6      4889c3         mov rbx, rax
0x00007eb9      4839e9         cmp rcx, rbp
0x00007ebc      742a           je 0x7ee8
0x00007ebe      418b0424       mov eax, dword [r12]
0x00007ec2      85c0           test eax, eax
0x00007ec4      7462           je 0x7f28
0x00007ec6      83f822         cmp eax, 0x22
0x00007ec9      bd01000000     mov ebp, 1
0x00007ece      7528           jne 0x7ef8
0x00007ed0      4d85ed         test r13, r13
0x00007ed3      7409           je 0x7ede
0x00007ed5      440fb621       movzx r12d, byte [rcx]
0x00007ed9      4584e4         test r12b, r12b
0x00007edc      7579           jne 0x7f57
0x00007ede      49891e         mov qword [r14], rbx
0x00007ee1      eb1a           jmp 0x7efd
0x00007ee3      0f1f440000     nop dword [rax + rax]
0x00007ee8      4d85ed         test r13, r13
0x00007eeb      48894c2408     mov qword [rsp + 8], rcx
0x00007ef0      753e           jne 0x7f30
0x00007ef2      660f1f440000   nop word [rax + rax]
0x00007ef8      bd04000000     mov ebp, 4
0x00007efd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00007f02      6448333c2528.  xor rdi, qword fs:[0x28]
0x00007f0b      89e8           mov eax, ebp
0x00007f0d      0f858d020000   jne 0x81a0
0x00007f13      4883c428       add rsp, 0x28
0x00007f17      5b             pop rbx
0x00007f18      5d             pop rbp
0x00007f19      415c           pop r12
0x00007f1b      415d           pop r13
0x00007f1d      415e           pop r14
0x00007f1f      415f           pop r15
0x00007f21      c3             ret
0x00007f22      660f1f440000   nop word [rax + rax]
0x00007f28      31ed           xor ebp, ebp
0x00007f2a      eba4           jmp 0x7ed0
0x00007f2c      0f1f4000       nop dword [rax]
0x00007f30      440fb66500     movzx r12d, byte [rbp]
0x00007f35      4584e4         test r12b, r12b
0x00007f38      74be           je 0x7ef8
0x00007f3a      410fbef4       movsx esi, r12b
0x00007f3e      4c89ef         mov rdi, r13
0x00007f41      31ed           xor ebp, ebp
0x00007f43      e8689dffff     call sym.imp.strchr
0x00007f48      4885c0         test rax, rax
0x00007f4b      bb01000000     mov ebx, 1
0x00007f50      488b4c2408     mov rcx, qword [rsp + 8]
0x00007f55      74a1           je 0x7ef8
0x00007f57      410fbef4       movsx esi, r12b
0x00007f5b      4c89ef         mov rdi, r13
0x00007f5e      48894c2408     mov qword [rsp + 8], rcx
0x00007f63      e8489dffff     call sym.imp.strchr
0x00007f68      4885c0         test rax, rax
0x00007f6b      488b4c2408     mov rcx, qword [rsp + 8]
0x00007f70      0f84c6000000   je 0x803c
0x00007f76      418d4424bb     lea eax, [r12 - 0x45]
0x00007f7b      3c2f           cmp al, 0x2f
0x00007f7d      7751           ja 0x7fd0
0x00007f7f      48ba45893000.  movabs rdx, 0x814400308945
0x00007f89      480fa3c2       bt rdx, rax
0x00007f8d      7341           jae 0x7fd0
0x00007f8f      be30000000     mov esi, 0x30                           ; '0'
0x00007f94      4c89ef         mov rdi, r13
0x00007f97      48894c2408     mov qword [rsp + 8], rcx
0x00007f9c      e80f9dffff     call sym.imp.strchr
0x00007fa1      4885c0         test rax, rax
0x00007fa4      488b4c2408     mov rcx, qword [rsp + 8]
0x00007fa9      7425           je 0x7fd0
0x00007fab      0fb64101       movzx eax, byte [rcx + 1]
0x00007faf      3c44           cmp al, 0x44
0x00007fb1      740c           je 0x7fbf
0x00007fb3      3c69           cmp al, 0x69
0x00007fb5      0f84cd010000   je 0x8188
0x00007fbb      3c42           cmp al, 0x42
0x00007fbd      7511           jne 0x7fd0
0x00007fbf      bf02000000     mov edi, 2
0x00007fc4      bee8030000     mov esi, 0x3e8
0x00007fc9      eb0f           jmp 0x7fda
0x00007fcb      0f1f440000     nop dword [rax + rax]
0x00007fd0      bf01000000     mov edi, 1
0x00007fd5      be00040000     mov esi, 0x400
0x00007fda      4183ec42       sub r12d, 0x42
0x00007fde      4180fc35       cmp r12b, 0x35
0x00007fe2      7758           ja 0x803c
0x00007fe4      488d15bd2400.  lea rdx, [0x0000a4a8]
0x00007feb      450fb6e4       movzx r12d, r12b
0x00007fef      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00007ff3      4801d0         add rax, rdx
0x00007ff6      ffe0           jmp rax
0x00007ff8      4889d8         mov rax, rbx
0x00007ffb      48f7e6         mul rsi
0x00007ffe      0f80ed010000   jo 0x81f1
0x00008004      4531c0         xor r8d, r8d
0x00008007      48f7e6         mul rsi
0x0000800a      0f80d2010000   jo 0x81e2
0x00008010      4889c3         mov rbx, rax
0x00008013      4409c5         or ebp, r8d
0x00008016      662e0f1f8400.  nop word cs:[rax + rax]
0x00008020      4863ff         movsxd rdi, edi
0x00008023      89e8           mov eax, ebp
0x00008025      4801f9         add rcx, rdi
0x00008028      83c802         or eax, 2
0x0000802b      49890f         mov qword [r15], rcx
0x0000802e      803900         cmp byte [rcx], 0
0x00008031      49891e         mov qword [r14], rbx
0x00008034      0f45e8         cmovne ebp, eax
0x00008037      e9c1feffff     jmp 0x7efd
0x0000803c      49891e         mov qword [r14], rbx
0x0000803f      83cd02         or ebp, 2
0x00008042      e9b6feffff     jmp 0x7efd
0x00008047      ba02000000     mov edx, 2
0x0000804c      4889d0         mov rax, rdx
0x0000804f      48f7e3         mul rbx
0x00008052      0f8096000000   jo 0x80ee
0x00008058      4801db         add rbx, rbx
0x0000805b      ebc3           jmp 0x8020
0x0000805d      ba00020000     mov edx, 0x200
0x00008062      4889d0         mov rax, rdx
0x00008065      48f7e3         mul rbx
0x00008068      0f8080000000   jo 0x80ee
0x0000806e      48c1e309       shl rbx, 9
0x00008072      ebac           jmp 0x8020
0x00008074      41b807000000   mov r8d, 7
0x0000807a      4531c9         xor r9d, r9d
0x0000807d      0f1f00         nop dword [rax]
0x00008080      4889d8         mov rax, rbx
0x00008083      48f7e6         mul rsi
0x00008086      4889c3         mov rbx, rax
0x00008089      0f808f010000   jo 0x821e
0x0000808f      4183e801       sub r8d, 1
0x00008093      75eb           jne 0x8080
0x00008095      4409cd         or ebp, r9d
0x00008098      eb86           jmp 0x8020
0x0000809a      41b808000000   mov r8d, 8
0x000080a0      4531c9         xor r9d, r9d
0x000080a3      0f1f440000     nop dword [rax + rax]
0x000080a8      4889d8         mov rax, rbx
0x000080ab      48f7e6         mul rsi
0x000080ae      4889c3         mov rbx, rax
0x000080b1      0f8049010000   jo 0x8200
0x000080b7      4183e801       sub r8d, 1
0x000080bb      75eb           jne 0x80a8
0x000080bd      ebd6           jmp 0x8095
0x000080bf      41b804000000   mov r8d, 4
0x000080c5      4531c9         xor r9d, r9d
0x000080c8      4889d8         mov rax, rbx
0x000080cb      48f7e6         mul rsi
0x000080ce      4889c3         mov rbx, rax
0x000080d1      0f80fc000000   jo 0x81d3
0x000080d7      4183e801       sub r8d, 1
0x000080db      75eb           jne 0x80c8
0x000080dd      ebb6           jmp 0x8095
0x000080df      4889d8         mov rax, rbx
0x000080e2      48f7e6         mul rsi
0x000080e5      4889c3         mov rbx, rax
0x000080e8      0f8132ffffff   jno 0x8020
0x000080ee      bd01000000     mov ebp, 1
0x000080f3      4883cbff       or rbx, 0xffffffffffffffff
0x000080f7      e924ffffff     jmp 0x8020
0x000080fc      0f1f4000       nop dword [rax]
0x00008100      41b805000000   mov r8d, 5
0x00008106      4531c9         xor r9d, r9d
0x00008109      4889d8         mov rax, rbx
0x0000810c      48f7e6         mul rsi
0x0000810f      4889c3         mov rbx, rax
0x00008112      0f80f7000000   jo 0x820f
0x00008118      4183e801       sub r8d, 1
0x0000811c      75eb           jne 0x8109
0x0000811e      e972ffffff     jmp 0x8095
0x00008123      41b806000000   mov r8d, 6
0x00008129      4531c9         xor r9d, r9d
0x0000812c      4889d8         mov rax, rbx
0x0000812f      48f7e6         mul rsi
0x00008132      4889c3         mov rbx, rax
0x00008135      0f8089000000   jo 0x81c4
0x0000813b      4183e801       sub r8d, 1
0x0000813f      75eb           jne 0x812c
0x00008141      e94fffffff     jmp 0x8095
0x00008146      ba00040000     mov edx, 0x400
0x0000814b      4889d0         mov rax, rdx
0x0000814e      48f7e3         mul rbx
0x00008151      709b           jo 0x80ee
0x00008153      48c1e30a       shl rbx, 0xa
0x00008157      e9c4feffff     jmp 0x8020
0x0000815c      4889d8         mov rax, rbx
0x0000815f      48f7e6         mul rsi
0x00008162      0f80c5000000   jo 0x822d
0x00008168      4531c0         xor r8d, r8d
0x0000816b      48f7e6         mul rsi
0x0000816e      0f8193feffff   jno 0x8007
0x00008174      41b801000000   mov r8d, 1
0x0000817a      4883c8ff       or rax, 0xffffffffffffffff
0x0000817e      e984feffff     jmp 0x8007
0x00008183      0f1f440000     nop dword [rax + rax]
0x00008188      31ff           xor edi, edi
0x0000818a      80790242       cmp byte [rcx + 2], 0x42
0x0000818e      be00040000     mov esi, 0x400
0x00008193      400f94c7       sete dil
0x00008197      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000819b      e93afeffff     jmp 0x7fda
0x000081a0      e8cb9affff     call sym.imp.__stack_chk_fail
0x000081a5      488d0dd42300.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0xa580 ; "xstrtoumax"
0x000081ac      488d35ad2200.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0xa460 ; "../coreutils-8.31/lib/xstrtol.c"
0x000081b3      488d3dc62200.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0xa480 ; "0 <= strtol_base && strtol_base <= 36"
0x000081ba      ba54000000     mov edx, 0x54                           ; 'T'
0x000081bf      e82c9bffff     call sym.imp.__assert_fail
0x000081c4      41b901000000   mov r9d, 1
0x000081ca      4883cbff       or rbx, 0xffffffffffffffff
0x000081ce      e968ffffff     jmp 0x813b
0x000081d3      41b901000000   mov r9d, 1
0x000081d9      4883cbff       or rbx, 0xffffffffffffffff
0x000081dd      e9f5feffff     jmp 0x80d7
0x000081e2      41b801000000   mov r8d, 1
0x000081e8      4883cbff       or rbx, 0xffffffffffffffff
0x000081ec      e922feffff     jmp 0x8013
0x000081f1      4883c8ff       or rax, 0xffffffffffffffff
0x000081f5      41b801000000   mov r8d, 1
0x000081fb      e907feffff     jmp 0x8007
0x00008200      41b901000000   mov r9d, 1
0x00008206      4883cbff       or rbx, 0xffffffffffffffff
0x0000820a      e9a8feffff     jmp 0x80b7
0x0000820f      41b901000000   mov r9d, 1
0x00008215      4883cbff       or rbx, 0xffffffffffffffff
0x00008219      e9fafeffff     jmp 0x8118
0x0000821e      41b901000000   mov r9d, 1
0x00008224      4883cbff       or rbx, 0xffffffffffffffff
0x00008228      e962feffff     jmp 0x808f
0x0000822d      41b801000000   mov r8d, 1
0x00008233      4883c8ff       or rax, 0xffffffffffffffff
0x00008237      e92fffffff     jmp 0x816b
0x0000823c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00008240      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00008242      55             push rbp
0x00008243      53             push rbx
0x00008244      4889fb         mov rbx, rdi
0x00008247      e8949bffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000824c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000824e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00008251      7854           js 0x82a7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00008253      e8d89bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00008258      85c0           test eax, eax
0x0000825a      752c           jne 0x8288
0x0000825c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000825f      e85c000000     call sym.rpl_fflush
0x00008264      85c0           test eax, eax
0x00008266      743c           je 0x82a4
0x00008268      e80399ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000826d      448b20         mov r12d, dword [rax]
0x00008270      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00008273      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00008276      e8a599ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000827b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000827e      7530           jne 0x82b0
0x00008280      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00008281      5d             pop rbp
0x00008282      415c           pop r12
0x00008284      c3             ret
0x00008285      0f1f00         nop dword [rax]
0x00008288      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000828b      e8509bffff     call sym.imp.fileno
0x00008290      31f6           xor esi, esi
0x00008292      ba01000000     mov edx, 1
0x00008297      89c7           mov edi, eax
0x00008299      e8429affff     call sym.imp.lseek
0x0000829e      4883f8ff       cmp rax, 0xffffffffffffffff
0x000082a2      75b8           jne 0x825c
0x000082a4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000082a7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000082a8      5d             pop rbp
0x000082a9      415c           pop r12
0x000082ab      e97099ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000082b0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000082b4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000082b9      ebc5           jmp 0x8280
0x000082bb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000082c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000082c3      53             push rbx
0x000082c4      4889fb         mov rbx, rdi
0x000082c7      7411           je 0x82da                               ; ../coreutils-8.31/lib/fflush.c:150
0x000082c9      e8629bffff     call sym.imp.__freading
0x000082ce      85c0           test eax, eax
0x000082d0      7408           je 0x82da
0x000082d2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000082d8      750e           jne 0x82e8
0x000082da      4889df         mov rdi, rbx
0x000082dd      5b             pop rbx
0x000082de      e91d9bffff     jmp sym.imp.fflush
0x000082e3      0f1f440000     nop dword [rax + rax]
0x000082e8      4889df         mov rdi, rbx
0x000082eb      ba01000000     mov edx, 1
0x000082f0      31f6           xor esi, esi
0x000082f2      e809000000     call sym.rpl_fseeko
0x000082f7      4889df         mov rdi, rbx
0x000082fa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000082fb      e9009bffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00008300      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00008304      48394710       cmp qword [rdi + 0x10], rax
0x00008308      7406           je 0x8310                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000830a      e9d19bffff     jmp sym.imp.fseeko
0x0000830f      90             nop
0x00008310      488b4720       mov rax, qword [rdi + 0x20]
0x00008314      48394728       cmp qword [rdi + 0x28], rax
0x00008318      75f0           jne 0x830a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000831a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000831f      75e9           jne 0x830a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00008321      4154           push r12
0x00008323      55             push rbp
0x00008324      4189d4         mov r12d, edx
0x00008327      53             push rbx
0x00008328      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000832b      4889fb         mov rbx, rdi
0x0000832e      e8ad9affff     call sym.imp.fileno
0x00008333      4489e2         mov edx, r12d
0x00008336      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00008339      89c7           mov edi, eax
0x0000833b      e8a099ffff     call sym.imp.lseek
0x00008340      4883f8ff       cmp rax, 0xffffffffffffffff
0x00008344      740c           je 0x8352
0x00008346      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00008349      488983900000.  mov qword [rbx + 0x90], rax
0x00008350      31c0           xor eax, eax
0x00008352      5b             pop rbx
0x00008353      5d             pop rbp
0x00008354      415c           pop r12
0x00008356      c3             ret
0x00008357      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00008360      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008362      4154           push r12
0x00008364      4989f5         mov r13, rsi
0x00008367      55             push rbp
0x00008368      53             push rbx
0x00008369      4889fb         mov rbx, rdi
0x0000836c      4989d4         mov r12, rdx
0x0000836f      4883ec18       sub rsp, 0x18
0x00008373      64488b042528.  mov rax, qword fs:[0x28]
0x0000837c      4889442408     mov qword [rsp + 8], rax
0x00008381      31c0           xor eax, eax
0x00008383      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008388      4885ff         test rdi, rdi
0x0000838b      480f44d8       cmove rbx, rax
0x0000838f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008392      e8f998ffff     call sym.imp.mbrtowc
0x00008397      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000839b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000839e      7620           jbe 0x83c0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000083a0      4d85e4         test r12, r12
0x000083a3      741b           je 0x83c0
0x000083a5      31ff           xor edi, edi
0x000083a7      e834030000     call sym.hard_locale
0x000083ac      84c0           test al, al
0x000083ae      7510           jne 0x83c0
0x000083b0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000083b5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000083ba      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000083bc      0f1f4000       nop dword [rax]
0x000083c0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000083c5      644833142528.  xor rdx, qword fs:[0x28]
0x000083ce      4889e8         mov rax, rbp
0x000083d1      750b           jne 0x83de
0x000083d3      4883c418       add rsp, 0x18
0x000083d7      5b             pop rbx
0x000083d8      5d             pop rbp
0x000083d9      415c           pop r12
0x000083db      415d           pop r13
0x000083dd      c3             ret
0x000083de      e88d98ffff     call sym.imp.__stack_chk_fail
0x000083e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000083ed      0f1f00         nop dword [rax]
;-- str2sig:
0x000083f0      4155           push r13                                ; ../coreutils-8.31/lib/sig2str.c:305
0x000083f2      4154           push r12
0x000083f4      4989f5         mov r13, rsi
0x000083f7      55             push rbp
0x000083f8      53             push rbx
0x000083f9      31db           xor ebx, ebx
0x000083fb      4989fc         mov r12, rdi
0x000083fe      488d2d9f3c20.  lea rbp, [0x0020c0a4]                   ; "HUP"
0x00008405      4883ec18       sub rsp, 0x18
0x00008409      64488b042528.  mov rax, qword fs:[0x28]
0x00008412      4889442408     mov qword [rsp + 8], rax
0x00008417      31c0           xor eax, eax
0x00008419      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/sig2str.c:263
0x0000841c      83e830         sub eax, 0x30
0x0000841f      83f809         cmp eax, 9
0x00008422      7718           ja 0x843c
0x00008424      eb5a           jmp 0x8480
0x00008426      662e0f1f8400.  nop word cs:[rax + rax]
0x00008430      83c301         add ebx, 1                              ; ../coreutils-8.31/lib/sig2str.c:273
0x00008433      4883c50c       add rbp, 0xc
0x00008437      83fb23         cmp ebx, 0x23
0x0000843a      7474           je 0x84b0
0x0000843c      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/sig2str.c:274
0x0000843f      4889ef         mov rdi, rbp
0x00008442      e85999ffff     call sym.imp.strcmp
0x00008447      85c0           test eax, eax
0x00008449      75e5           jne 0x8430
0x0000844b      488d145b       lea rdx, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/sig2str.c:275
0x0000844f      488d054a3c20.  lea rax, obj.numname_table              ; 0x20c0a0
0x00008456      8b0490         mov eax, dword [rax + rdx*4]
0x00008459      41894500       mov dword [r13], eax                    ; ../coreutils-8.31/lib/sig2str.c:306
0x0000845d      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/sig2str.c:307
0x00008460      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/sig2str.c:308
0x00008465      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000846e      0f85fc000000   jne 0x8570
0x00008474      4883c418       add rsp, 0x18
0x00008478      5b             pop rbx
0x00008479      5d             pop rbp
0x0000847a      415c           pop r12
0x0000847c      415d           pop r13
0x0000847e      c3             ret
0x0000847f      90             nop
0x00008480      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/sig2str.c:266
0x00008485      4889e6         mov rsi, rsp
0x00008488      e83399ffff     call sym.imp.strtol
0x0000848d      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:267
0x00008491      803a00         cmp byte [rdx], 0
0x00008494      7506           jne 0x849c
0x00008496      4883f840       cmp rax, 0x40                           ; segment.PHDR
0x0000849a      7ebd           jle 0x8459
0x0000849c      41c74500ffff.  mov dword [r13], 0xffffffff             ; ../coreutils-8.31/lib/sig2str.c:306 ; [0xffffffff:4]=-1 ; -1
0x000084a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:307 ; -1
0x000084a9      ebb5           jmp 0x8460
0x000084ab      0f1f440000     nop dword [rax + rax]
0x000084b0      e85b9affff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:279
0x000084b5      89c5           mov ebp, eax
0x000084b7      e8949affff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:280
0x000084bc      85ed           test ebp, ebp                           ; ../coreutils-8.31/lib/sig2str.c:282
0x000084be      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/sig2str.c:280
0x000084c0      7e1a           jle 0x84dc                              ; ../coreutils-8.31/lib/sig2str.c:282
0x000084c2      488d3dc22000.  lea rdi, str.RTMIN                      ; 0xa58b ; "RTMIN"
0x000084c9      b905000000     mov ecx, 5
0x000084ce      4c89e6         mov rsi, r12
0x000084d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000084d3      0f97c0         seta al
0x000084d6      1c00           sbb al, 0
0x000084d8      84c0           test al, al
0x000084da      7457           je 0x8533
0x000084dc      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/sig2str.c:288
0x000084de      7ebc           jle 0x849c
0x000084e0      488d3daa2000.  lea rdi, str.RTMAX                      ; 0xa591 ; "RTMAX"
0x000084e7      b905000000     mov ecx, 5
0x000084ec      4c89e6         mov rsi, r12
0x000084ef      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000084f1      0f97c0         seta al
0x000084f4      1c00           sbb al, 0
0x000084f6      84c0           test al, al
0x000084f8      75a2           jne 0x849c
0x000084fa      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:290
0x000084ff      ba0a000000     mov edx, 0xa
0x00008504      4889e6         mov rsi, rsp
0x00008507      e8b498ffff     call sym.imp.strtol
0x0000850c      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:291
0x00008510      803a00         cmp byte [rdx], 0
0x00008513      7587           jne 0x849c
0x00008515      29dd           sub ebp, ebx
0x00008517      4863ed         movsxd rbp, ebp
0x0000851a      4839e8         cmp rax, rbp
0x0000851d      0f8c79ffffff   jl 0x849c
0x00008523      4885c0         test rax, rax
0x00008526      0f8f70ffffff   jg 0x849c
0x0000852c      01d8           add eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:292
0x0000852e      e926ffffff     jmp 0x8459
0x00008533      498d7c2405     lea rdi, [r12 + 5]                      ; ../coreutils-8.31/lib/sig2str.c:284
0x00008538      ba0a000000     mov edx, 0xa
0x0000853d      4889e6         mov rsi, rsp
0x00008540      e87b98ffff     call sym.imp.strtol
0x00008545      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/sig2str.c:285
0x00008549      803a00         cmp byte [rdx], 0
0x0000854c      0f854affffff   jne 0x849c
0x00008552      4885c0         test rax, rax
0x00008555      0f8841ffffff   js 0x849c
0x0000855b      29eb           sub ebx, ebp
0x0000855d      4863d3         movsxd rdx, ebx
0x00008560      4839d0         cmp rax, rdx
0x00008563      0f8f33ffffff   jg 0x849c
0x00008569      01e8           add eax, ebp                            ; ../coreutils-8.31/lib/sig2str.c:286
0x0000856b      e9e9feffff     jmp 0x8459
0x00008570      e8fb96ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/sig2str.c:308
0x00008575      90             nop
0x00008576      662e0f1f8400.  nop word cs:[rax + rax]
;-- sig2str:
0x00008580      55             push rbp                                ; ../coreutils-8.31/lib/sig2str.c:316
0x00008581      488d05183b20.  lea rax, obj.numname_table              ; 0x20c0a0
0x00008588      53             push rbx
0x00008589      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/sig2str.c:318
0x0000858b      89fb           mov ebx, edi                            ; ../coreutils-8.31/lib/sig2str.c:316
0x0000858d      4889f7         mov rdi, rsi
0x00008590      4883ec18       sub rsp, 0x18
0x00008594      4889c1         mov rcx, rax
0x00008597      eb13           jmp 0x85ac
0x00008599      0f1f80000000.  nop dword [rax]
0x000085a0      83c201         add edx, 1                              ; ../coreutils-8.31/lib/sig2str.c:318
0x000085a3      4883c10c       add rcx, 0xc
0x000085a7      83fa23         cmp edx, 0x23
0x000085aa      7424           je 0x85d0
0x000085ac      3919           cmp dword [rcx], ebx                    ; ../coreutils-8.31/lib/sig2str.c:319
0x000085ae      75f0           jne 0x85a0
0x000085b0      488d1452       lea rdx, [rdx + rdx*2]                  ; ../coreutils-8.31/lib/sig2str.c:321
0x000085b4      488d749004     lea rsi, [rax + rdx*4 + 4]
0x000085b9      e8e295ffff     call sym.imp.strcpy                     ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest));
0x000085be      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:322
0x000085c0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x000085c4      5b             pop rbx
0x000085c5      5d             pop rbp
0x000085c6      c3             ret
0x000085c7      660f1f840000.  nop word [rax + rax]
0x000085d0      48897c2408     mov qword [rsp + 8], rdi
0x000085d5      e83699ffff     call sym.imp.__libc_current_sigrtmin    ; ../coreutils-8.31/lib/sig2str.c:326
0x000085da      89c5           mov ebp, eax
0x000085dc      e86f99ffff     call sym.imp.__libc_current_sigrtmax    ; ../coreutils-8.31/lib/sig2str.c:327
0x000085e1      39dd           cmp ebp, ebx                            ; ../coreutils-8.31/lib/sig2str.c:330
0x000085e3      7f6c           jg 0x8651
0x000085e5      39d8           cmp eax, ebx
0x000085e7      7c68           jl 0x8651
0x000085e9      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/sig2str.c:333
0x000085eb      488b7c2408     mov rdi, qword [rsp + 8]
0x000085f0      29ea           sub edx, ebp
0x000085f2      d1fa           sar edx, 1
0x000085f4      01ea           add edx, ebp
0x000085f6      39da           cmp edx, ebx
0x000085f8      7d46           jge 0x8640
0x000085fa      ba58000000     mov edx, 0x58                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'X'
0x000085ff      c70752544d41   mov dword [rdi], 0x414d5452             ; 'RTMA'
                                                                       ; [0x414d5452:4]=-1
0x00008605      89c5           mov ebp, eax
0x00008607      66895704       mov word [rdi + 4], dx
0x0000860b      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/sig2str.c:345
0x0000860d      29e8           sub eax, ebp
0x0000860f      74af           je 0x85c0
0x00008611      488d0d7f1f00.  lea rcx, [0x0000a597]                   ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1, ; "%+d"
0x00008618      4189c0         mov r8d, eax
0x0000861b      4883c705       add rdi, 5                              ; ../coreutils-8.31/lib/sig2str.c:346
0x0000861f      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; stdio2.h:33   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
0x00008626      be01000000     mov esi, 1
0x0000862b      31c0           xor eax, eax
0x0000862d      e88e99ffff     call sym.imp.__sprintf_chk
0x00008632      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/sig2str.c:349
0x00008636      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/sig2str.c:347
0x00008638      5b             pop rbx                                 ; ../coreutils-8.31/lib/sig2str.c:349
0x00008639      5d             pop rbp
0x0000863a      c3             ret
0x0000863b      0f1f440000     nop dword [rax + rax]
0x00008640      b94e000000     mov ecx, 0x4e                           ; string_fortified.h:90   return __builtin___strcpy_chk (__dest, __src, __bos (__dest)); ; 'N'
0x00008645      c70752544d49   mov dword [rdi], 0x494d5452             ; 'RTMI'
                                                                       ; [0x494d5452:4]=-1
0x0000864b      66894f04       mov word [rdi + 4], cx
0x0000864f      ebba           jmp 0x860b
0x00008651      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/sig2str.c:331 ; -1
0x00008656      e965ffffff     jmp 0x85c0
0x0000865b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00008660      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008662      55             push rbp
0x00008663      4889fd         mov rbp, rdi
0x00008666      53             push rbx
0x00008667      e84495ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000866c      8b5d00         mov ebx, dword [rbp]
0x0000866f      4889ef         mov rdi, rbp
0x00008672      4989c4         mov r12, rax
0x00008675      e8c6fbffff     call sym.rpl_fclose
0x0000867a      83e320         and ebx, 0x20                           ; "@"
0x0000867d      85db           test ebx, ebx
0x0000867f      7517           jne 0x8698
0x00008681      85c0           test eax, eax
0x00008683      740a           je 0x868f                               ; stdio.h:-186
0x00008685      4d85e4         test r12, r12                           ; stdio.h:-178
0x00008688      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000868d      7439           je 0x86c8
0x0000868f      5b             pop rbx
0x00008690      5d             pop rbp
0x00008691      415c           pop r12
0x00008693      c3             ret
0x00008694      0f1f4000       nop dword [rax]
0x00008698      85c0           test eax, eax
0x0000869a      751c           jne 0x86b8
0x0000869c      e8cf94ffff     call sym.imp.__errno_location
0x000086a1      c70000000000   mov dword [rax], 0
0x000086a7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000086ac      5b             pop rbx
0x000086ad      5d             pop rbp
0x000086ae      415c           pop r12
0x000086b0      c3             ret
0x000086b1      0f1f80000000.  nop dword [rax]
0x000086b8      5b             pop rbx
0x000086b9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000086be      5d             pop rbp                                 ; stdio.h:-186
0x000086bf      415c           pop r12
0x000086c1      c3             ret
0x000086c2      660f1f440000   nop word [rax + rax]
0x000086c8      e8a394ffff     call sym.imp.__errno_location
0x000086cd      833809         cmp dword [rax], 9
0x000086d0      5b             pop rbx
0x000086d1      5d             pop rbp
0x000086d2      415c           pop r12                                 ; stdio.h:-178
0x000086d4      0f95c0         setne al
0x000086d7      0fb6c0         movzx eax, al
0x000086da      f7d8           neg eax
0x000086dc      c3             ret
0x000086dd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000086e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000086e4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000086e6      e88597ffff     call sym.imp.setlocale
0x000086eb      4889c2         mov rdx, rax
0x000086ee      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000086f3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000086f6      741d           je 0x8715
0x000086f8      488d3d9c1e00.  lea rdi, [0x0000a59b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000086ff      b902000000     mov ecx, 2
0x00008704      4889d6         mov rsi, rdx
0x00008707      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008709      0f97c1         seta cl
0x0000870c      80d900         sbb cl, 0
0x0000870f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00008711      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00008713      750b           jne 0x8720
0x00008715      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008719      c3             ret
0x0000871a      660f1f440000   nop word [rax + rax]
0x00008720      488d3d761e00.  lea rdi, [0x0000a59d]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x00008727      b906000000     mov ecx, 6
0x0000872c      4889d6         mov rsi, rdx
0x0000872f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008731      0f97c0         seta al
0x00008734      1c00           sbb al, 0
0x00008736      84c0           test al, al
0x00008738      0f95c0         setne al
0x0000873b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000873f      c3             ret
;-- locale_charset:
0x00008740      4883ec08       sub rsp, 8
0x00008744      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00008749      e8c296ffff     call sym.imp.nl_langinfo
0x0000874e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00008751      741d           je 0x8770
0x00008753      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00008756      488d15461e00.  lea rdx, str.ASCII                      ; 0xa5a3 ; "ASCII"
0x0000875d      480f44c2       cmove rax, rdx
0x00008761      4883c408       add rsp, 8
0x00008765      c3             ret
0x00008766      662e0f1f8400.  nop word cs:[rax + rax]
0x00008770      488d052c1e00.  lea rax, str.ASCII                      ; 0xa5a3 ; "ASCII"
0x00008777      4883c408       add rsp, 8
0x0000877b      c3             ret
0x0000877c      0f1f4000       nop dword [rax]
;-- dup_safer:
0x00008780      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00008785      31f6           xor esi, esi
0x00008787      31c0           xor eax, eax
0x00008789      e902000000     jmp sym.rpl_fcntl
0x0000878e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fcntl:
0x00008790      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00008792      55             push rbp
0x00008793      89fd           mov ebp, edi
0x00008795      53             push rbx
0x00008796      4883ec50       sub rsp, 0x50
0x0000879a      64488b042528.  mov rax, qword fs:[0x28]
0x000087a3      4889442418     mov qword [rsp + 0x18], rax
0x000087a8      31c0           xor eax, eax
0x000087aa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x000087af      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x000087b1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x000087b6      48894c2438     mov qword [rsp + 0x38], rcx
0x000087bb      4c89442440     mov qword [rsp + 0x40], r8
0x000087c0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x000087c5      488d442420     lea rax, [rsp + 0x20]
0x000087ca      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x000087cf      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x000087d6      4889442410     mov qword [rsp + 0x10], rax
0x000087db      0f8401020000   je 0x89e2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x000087e1      81fe06040000   cmp esi, 0x406
0x000087e7      7547           jne 0x8830
0x000087e9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x000087ee      833d633e2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20c658:4]=0
0x000087f5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3d10 rip
0x000087fc      448b6010       mov r12d, dword [rax + 0x10]
0x00008800      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00008803      0f882a010000   js 0x8933                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00008809      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000880b      be06040000     mov esi, 0x406
0x00008810      e8bb93ffff     call sym.imp.fcntl
0x00008815      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00008817      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00008819      0f8889010000   js 0x89a8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000881f      c7052f3e2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20c658:4]=0
0x00008829      eb45           jmp 0x8870
0x0000882b      0f1f440000     nop dword [rax + rax]
0x00008830      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00008833      742b           je 0x8860
0x00008835      7f59           jg 0x8890
0x00008837      83fe04         cmp esi, 4
0x0000883a      0f84d0000000   je 0x8910
0x00008840      0f8fba000000   jg 0x8900
0x00008846      83fe02         cmp esi, 2
0x00008849      0f84c1000000   je 0x8910
0x0000884f      7f0f           jg 0x8860
0x00008851      83fe01         cmp esi, 1
0x00008854      7562           jne 0x88b8
0x00008856      662e0f1f8400.  nop word cs:[rax + rax]
0x00008860      89ef           mov edi, ebp
0x00008862      31c0           xor eax, eax
0x00008864      e86793ffff     call sym.imp.fcntl
0x00008869      89c3           mov ebx, eax
0x0000886b      0f1f440000     nop dword [rax + rax]
0x00008870      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00008875      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000887e      89d8           mov eax, ebx
0x00008880      0f8557010000   jne 0x89dd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00008886      4883c450       add rsp, 0x50
0x0000888a      5b             pop rbx
0x0000888b      5d             pop rbp
0x0000888c      415c           pop r12
0x0000888e      c3             ret
0x0000888f      90             nop
0x00008890      81fe07040000   cmp esi, 0x407
0x00008896      7f48           jg 0x88e0
0x00008898      81fe06040000   cmp esi, 0x406
0x0000889e      7d70           jge 0x8910
0x000088a0      81fe01040000   cmp esi, 0x401
0x000088a6      74b8           je 0x8860
0x000088a8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000088ae      7460           je 0x8910
0x000088b0      81fe00040000   cmp esi, 0x400
0x000088b6      7458           je 0x8910
0x000088b8      8b0424         mov eax, dword [rsp]
0x000088bb      83f82f         cmp eax, 0x2f
0x000088be      0f8736010000   ja 0x89fa
0x000088c4      4803442410     add rax, qword [rsp + 0x10]
0x000088c9      488b10         mov rdx, qword [rax]
0x000088cc      89ef           mov edi, ebp
0x000088ce      31c0           xor eax, eax
0x000088d0      e8fb92ffff     call sym.imp.fcntl
0x000088d5      89c3           mov ebx, eax
0x000088d7      eb97           jmp 0x8870
0x000088d9      0f1f80000000.  nop dword [rax]
0x000088e0      81fe09040000   cmp esi, 0x409
0x000088e6      7428           je 0x8910
0x000088e8      0f8c72ffffff   jl 0x8860
0x000088ee      81fe0a040000   cmp esi, 0x40a
0x000088f4      75c2           jne 0x88b8
0x000088f6      e965ffffff     jmp 0x8860                              ; ../coreutils-8.31/lib/fcntl.c:350
0x000088fb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00008900      83fe09         cmp esi, 9
0x00008903      0f8457ffffff   je 0x8860
0x00008909      7f05           jg 0x8910
0x0000890b      83fe08         cmp esi, 8
0x0000890e      75a8           jne 0x88b8
0x00008910      8b0424         mov eax, dword [rsp]
0x00008913      83f82f         cmp eax, 0x2f
0x00008916      0f87e8000000   ja 0x8a04
0x0000891c      4803442410     add rax, qword [rsp + 0x10]
0x00008921      8b10           mov edx, dword [rax]
0x00008923      89ef           mov edi, ebp
0x00008925      31c0           xor eax, eax
0x00008927      e8a492ffff     call sym.imp.fcntl
0x0000892c      89c3           mov ebx, eax
0x0000892e      e93dffffff     jmp 0x8870
0x00008933      31f6           xor esi, esi
0x00008935      31c0           xor eax, eax
0x00008937      e89492ffff     call sym.imp.fcntl
0x0000893c      85c0           test eax, eax
0x0000893e      89c3           mov ebx, eax
0x00008940      0f882affffff   js 0x8870
0x00008946      833d0b3d2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20c658:4]=0
0x0000894d      0f851dffffff   jne 0x8870
0x00008953      31c0           xor eax, eax
0x00008955      be01000000     mov esi, 1
0x0000895a      89df           mov edi, ebx
0x0000895c      e86f92ffff     call sym.imp.fcntl
0x00008961      85c0           test eax, eax
0x00008963      781c           js 0x8981
0x00008965      83c801         or eax, 1
0x00008968      be02000000     mov esi, 2
0x0000896d      89df           mov edi, ebx
0x0000896f      89c2           mov edx, eax
0x00008971      31c0           xor eax, eax
0x00008973      e85892ffff     call sym.imp.fcntl
0x00008978      83f8ff         cmp eax, 0xffffffff
0x0000897b      0f85effeffff   jne 0x8870
0x00008981      e8ea91ffff     call sym.imp.__errno_location
0x00008986      448b20         mov r12d, dword [rax]
0x00008989      4889c5         mov rbp, rax
0x0000898c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000898e      e88d93ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00008993      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00008998      44896500       mov dword [rbp], r12d
0x0000899c      e9cffeffff     jmp 0x8870
0x000089a1      0f1f80000000.  nop dword [rax]
0x000089a8      e8c391ffff     call sym.imp.__errno_location
0x000089ad      833816         cmp dword [rax], 0x16
0x000089b0      0f8569feffff   jne 0x881f
0x000089b6      31f6           xor esi, esi
0x000089b8      31c0           xor eax, eax
0x000089ba      4489e2         mov edx, r12d
0x000089bd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x000089bf      e80c92ffff     call sym.imp.fcntl
0x000089c4      85c0           test eax, eax
0x000089c6      89c3           mov ebx, eax
0x000089c8      0f88a2feffff   js 0x8870
0x000089ce      c705803c2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20c658:4]=0
0x000089d8      e976ffffff     jmp 0x8953
0x000089dd      e88e92ffff     call sym.imp.__stack_chk_fail
0x000089e2      488b442410     mov rax, qword [rsp + 0x10]
0x000089e7      31f6           xor esi, esi
0x000089e9      8b5010         mov edx, dword [rax + 0x10]
0x000089ec      31c0           xor eax, eax
0x000089ee      e8dd91ffff     call sym.imp.fcntl
0x000089f3      89c3           mov ebx, eax
0x000089f5      e976feffff     jmp 0x8870
0x000089fa      488b442408     mov rax, qword [rsp + 8]
0x000089ff      e9c5feffff     jmp 0x88c9
0x00008a04      488b442408     mov rax, qword [rsp + 8]
0x00008a09      e913ffffff     jmp 0x8921
0x00008a0e      6690           nop
;-- __libc_csu_init:
0x00008a10      4157           push r15
0x00008a12      4156           push r14
0x00008a14      4989d7         mov r15, rdx
0x00008a17      4155           push r13
0x00008a19      4154           push r12
0x00008a1b      4c8d25ce2e20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20b8f0
0x00008a22      55             push rbp
0x00008a23      488d2dce2e20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20b8f8
0x00008a2a      53             push rbx
0x00008a2b      4189fd         mov r13d, edi
0x00008a2e      4989f6         mov r14, rsi
0x00008a31      4c29e5         sub rbp, r12
0x00008a34      4883ec08       sub rsp, 8
0x00008a38      48c1fd03       sar rbp, 3
0x00008a3c      e8c790ffff     call sym._init
0x00008a41      4885ed         test rbp, rbp
0x00008a44      7420           je 0x8a66
0x00008a46      31db           xor ebx, ebx
0x00008a48      0f1f84000000.  nop dword [rax + rax]
0x00008a50      4c89fa         mov rdx, r15
0x00008a53      4c89f6         mov rsi, r14
0x00008a56      4489ef         mov edi, r13d
0x00008a59      41ff14dc       call qword [r12 + rbx*8]
0x00008a5d      4883c301       add rbx, 1
0x00008a61      4839dd         cmp rbp, rbx
0x00008a64      75ea           jne 0x8a50
0x00008a66      4883c408       add rsp, 8
0x00008a6a      5b             pop rbx
0x00008a6b      5d             pop rbp
0x00008a6c      415c           pop r12
0x00008a6e      415d           pop r13
0x00008a70      415e           pop r14
0x00008a72      415f           pop r15
0x00008a74      c3             ret
0x00008a75      90             nop
0x00008a76      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00008a80      f3c3           ret
0x00008a82      662e0f1f8400.  nop word cs:[rax + rax]
0x00008a8c      0f1f4000       nop dword [rax]
;-- atexit:
0x00008a90      488b15713520.  mov rdx, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x00008a97      31f6           xor esi, esi
0x00008a99      e95294ffff     jmp sym.imp.__cxa_atexit
0x00008a9e      0000           add byte [rax], al
