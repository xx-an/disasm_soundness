;-- section..plt:
;-- .plt:
0x000013b0      ff357a5a2000   push qword [0x00206e30]                 ; [12] -r-x section size 784 named .plt
0x000013b6      ff257c5a2000   jmp qword [0x00206e38]                  ; [0x206e38:8]=0
0x000013bc      0f1f4000       nop dword [rax]
;-- imp.utmpxname:
0x000013c0      ff257a5a2000   jmp qword [reloc.utmpxname]             ; [0x206e40:8]=0x13c6
0x000013c6      6800000000     push 0
0x000013cb      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x000013d0      ff25725a2000   jmp qword [reloc.free]                  ; [0x206e48:8]=0x13d6
0x000013d6      6801000000     push 1
0x000013db      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000013e0      ff256a5a2000   jmp qword [reloc.abort]                 ; [0x206e50:8]=0x13e6
0x000013e6      6802000000     push 2
0x000013eb      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000013f0      ff25625a2000   jmp qword [reloc.__errno_location]      ; [0x206e58:8]=0x13f6
0x000013f6      6803000000     push 3
0x000013fb      e9b0ffffff     jmp sym..plt
;-- imp.strncpy:
0x00001400      ff255a5a2000   jmp qword [reloc.strncpy]               ; [0x206e60:8]=0x1406
0x00001406      6804000000     push 4
0x0000140b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001410      ff25525a2000   jmp qword [reloc.strncmp]               ; [0x206e68:8]=0x1416
0x00001416      6805000000     push 5
0x0000141b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001420      ff254a5a2000   jmp qword [reloc._exit]                 ; [0x206e70:8]=0x1426 ; "&\x14"
0x00001426      6806000000     push 6
0x0000142b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001430      ff25425a2000   jmp qword [reloc.__fpending]            ; [0x206e78:8]=0x1436 ; "6\x14"
0x00001436      6807000000     push 7
0x0000143b      e970ffffff     jmp sym..plt
;-- imp.qsort:
0x00001440      ff253a5a2000   jmp qword [reloc.qsort]                 ; [0x206e80:8]=0x1446 ; "F\x14"
0x00001446      6808000000     push 8
0x0000144b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001450      ff25325a2000   jmp qword [reloc.textdomain]            ; [0x206e88:8]=0x1456 ; "V\x14"
0x00001456      6809000000     push 9
0x0000145b      e950ffffff     jmp sym..plt
;-- imp.endutxent:
0x00001460      ff252a5a2000   jmp qword [reloc.endutxent]             ; [0x206e90:8]=0x1466 ; "f\x14"
0x00001466      680a000000     push 0xa
0x0000146b      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001470      ff25225a2000   jmp qword [reloc.fclose]                ; [0x206e98:8]=0x1476 ; "v\x14"
0x00001476      680b000000     push 0xb
0x0000147b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001480      ff251a5a2000   jmp qword [reloc.bindtextdomain]        ; [0x206ea0:8]=0x1486
0x00001486      680c000000     push 0xc
0x0000148b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001490      ff25125a2000   jmp qword [reloc.dcgettext]             ; [0x206ea8:8]=0x1496
0x00001496      680d000000     push 0xd
0x0000149b      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000014a0      ff250a5a2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x206eb0:8]=0x14a6
0x000014a6      680e000000     push 0xe
0x000014ab      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x000014b0      ff25025a2000   jmp qword [reloc.strlen]                ; [0x206eb8:8]=0x14b6
0x000014b6      680f000000     push 0xf
0x000014bb      e9f0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000014c0      ff25fa592000   jmp qword [reloc.__stack_chk_fail]      ; [0x206ec0:8]=0x14c6
0x000014c6      6810000000     push 0x10
0x000014cb      e9e0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000014d0      ff25f2592000   jmp qword [reloc.getopt_long]           ; [0x206ec8:8]=0x14d6
0x000014d6      6811000000     push 0x11
0x000014db      e9d0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000014e0      ff25ea592000   jmp qword [reloc.mbrtowc]               ; [0x206ed0:8]=0x14e6
0x000014e6      6812000000     push 0x12
0x000014eb      e9c0feffff     jmp sym..plt
;-- imp.__overflow:
0x000014f0      ff25e2592000   jmp qword [reloc.__overflow]            ; [0x206ed8:8]=0x14f6
0x000014f6      6813000000     push 0x13
0x000014fb      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001500      ff25da592000   jmp qword [reloc.strrchr]               ; [0x206ee0:8]=0x1506
0x00001506      6814000000     push 0x14
0x0000150b      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x00001510      ff25d2592000   jmp qword [reloc.lseek]                 ; [0x206ee8:8]=0x1516
0x00001516      6815000000     push 0x15
0x0000151b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001520      ff25ca592000   jmp qword [reloc.memset]                ; [0x206ef0:8]=0x1526 ; "&\x15"
0x00001526      6816000000     push 0x16
0x0000152b      e980feffff     jmp sym..plt
;-- imp.memcmp:
0x00001530      ff25c2592000   jmp qword [reloc.memcmp]                ; [0x206ef8:8]=0x1536 ; "6\x15"
0x00001536      6817000000     push 0x17
0x0000153b      e970feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001540      ff25ba592000   jmp qword [reloc.fputs_unlocked]        ; [0x206f00:8]=0x1546 ; "F\x15"
0x00001546      6818000000     push 0x18
0x0000154b      e960feffff     jmp sym..plt
;-- imp.calloc:
0x00001550      ff25b2592000   jmp qword [reloc.calloc]                ; [0x206f08:8]=0x1556 ; "V\x15"
0x00001556      6819000000     push 0x19
0x0000155b      e950feffff     jmp sym..plt
;-- imp.strcmp:
0x00001560      ff25aa592000   jmp qword [reloc.strcmp]                ; [0x206f10:8]=0x1566 ; "f\x15"
0x00001566      681a000000     push 0x1a
0x0000156b      e940feffff     jmp sym..plt
;-- imp.setutxent:
0x00001570      ff25a2592000   jmp qword [reloc.setutxent]             ; [0x206f18:8]=0x1576 ; "v\x15"
0x00001576      681b000000     push 0x1b
0x0000157b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001580      ff259a592000   jmp qword [reloc.memcpy]                ; [0x206f20:8]=0x1586
0x00001586      681c000000     push 0x1c
0x0000158b      e920feffff     jmp sym..plt
;-- imp.kill:
0x00001590      ff2592592000   jmp qword [reloc.kill]                  ; [0x206f28:8]=0x1596
0x00001596      681d000000     push 0x1d
0x0000159b      e910feffff     jmp sym..plt
;-- imp.fileno:
0x000015a0      ff258a592000   jmp qword [reloc.fileno]                ; [0x206f30:8]=0x15a6
0x000015a6      681e000000     push 0x1e
0x000015ab      e900feffff     jmp sym..plt
;-- imp.malloc:
0x000015b0      ff2582592000   jmp qword [reloc.malloc]                ; [0x206f38:8]=0x15b6
0x000015b6      681f000000     push 0x1f
0x000015bb      e9f0fdffff     jmp sym..plt
;-- imp.fflush:
0x000015c0      ff257a592000   jmp qword [reloc.fflush]                ; [0x206f40:8]=0x15c6
0x000015c6      6820000000     push 0x20                               ; "@"
0x000015cb      e9e0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000015d0      ff2572592000   jmp qword [reloc.nl_langinfo]           ; [0x206f48:8]=0x15d6
0x000015d6      6821000000     push 0x21                               ; '!'
0x000015db      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x000015e0      ff256a592000   jmp qword [reloc.__freading]            ; [0x206f50:8]=0x15e6
0x000015e6      6822000000     push 0x22                               ; '"'
0x000015eb      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000015f0      ff2562592000   jmp qword [reloc.realloc]               ; [0x206f58:8]=0x15f6
0x000015f6      6823000000     push 0x23                               ; '#'
0x000015fb      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001600      ff255a592000   jmp qword [reloc.setlocale]             ; [0x206f60:8]=0x1606
0x00001606      6824000000     push 0x24                               ; '$'
0x0000160b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001610      ff2552592000   jmp qword [reloc.__printf_chk]          ; [0x206f68:8]=0x1616
0x00001616      6825000000     push 0x25                               ; '%'
0x0000161b      e990fdffff     jmp sym..plt
;-- imp.getutxent:
0x00001620      ff254a592000   jmp qword [reloc.getutxent]             ; [0x206f70:8]=0x1626 ; "&\x16"
0x00001626      6826000000     push 0x26                               ; '&'
0x0000162b      e980fdffff     jmp sym..plt
;-- imp.error:
0x00001630      ff2542592000   jmp qword [reloc.error]                 ; [0x206f78:8]=0x1636 ; "6\x16"
0x00001636      6827000000     push 0x27                               ; '''
0x0000163b      e970fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001640      ff253a592000   jmp qword [reloc.fseeko]                ; [0x206f80:8]=0x1646 ; "F\x16"
0x00001646      6828000000     push 0x28                               ; '(' ; "0M\x02"
0x0000164b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001650      ff2532592000   jmp qword [reloc.__cxa_atexit]          ; [0x206f88:8]=0x1656 ; "V\x16"
0x00001656      6829000000     push 0x29                               ; ')'
0x0000165b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001660      ff252a592000   jmp qword [reloc.exit]                  ; [0x206f90:8]=0x1666 ; "f\x16"
0x00001666      682a000000     push 0x2a                               ; '*'
0x0000166b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001670      ff2522592000   jmp qword [reloc.fwrite]                ; [0x206f98:8]=0x1676 ; "v\x16"
0x00001676      682b000000     push 0x2b                               ; '+'
0x0000167b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001680      ff251a592000   jmp qword [reloc.__fprintf_chk]         ; [0x206fa0:8]=0x1686
0x00001686      682c000000     push 0x2c                               ; ','
0x0000168b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001690      ff2512592000   jmp qword [reloc.mbsinit]               ; [0x206fa8:8]=0x1696
0x00001696      682d000000     push 0x2d                               ; '-'
0x0000169b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x000016a0      ff250a592000   jmp qword [reloc.iswprint]              ; [0x206fb0:8]=0x16a6
0x000016a6      682e000000     push 0x2e                               ; '.'
0x000016ab      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000016b0      ff2502592000   jmp qword [reloc.__ctype_b_loc]         ; [0x206fb8:8]=0x16b6
0x000016b6      682f000000     push 0x2f                               ; '/'
0x000016bb      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000016c0      .qword 0x90660020591a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000016c8      0000           add byte [rax], al
0x000016ca      0000           add byte [rax], al
0x000016cc      0000           add byte [rax], al
0x000016ce      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000016d0      55             push rbp                                ; [14] -r-x section size 13806 named .text
0x000016d1      53             push rbx
0x000016d2      89fb           mov ebx, edi
0x000016d4      4889f5         mov rbp, rsi
0x000016d7      4883ec08       sub rsp, 8
0x000016db      488b3e         mov rdi, qword [rsi]
0x000016de      e8ad0a0000     call sym.set_program_name
0x000016e3      488d35773e00.  lea rsi, [0x00005561]
0x000016ea      bf06000000     mov edi, 6
0x000016ef      e80cffffff     call sym.imp.setlocale
0x000016f4      488d35cc3600.  lea rsi, str.usr_local_share_locale     ; 0x4dc7 ; "/usr/local/share/locale"
0x000016fb      488d3d9c3600.  lea rdi, [0x00004d9e]                   ; "coreutils"
0x00001702      e879fdffff     call sym.imp.bindtextdomain
0x00001707      488d3d903600.  lea rdi, [0x00004d9e]                   ; "coreutils"
0x0000170e      e83dfdffff     call sym.imp.textdomain
0x00001713      488d3d460700.  lea rdi, sym.close_stdout               ; 0x1e60 ; "USH\x83\xec\bH\x8b=\x1bR "
0x0000171a      e891350000     call sym.atexit
0x0000171f      488d05b93600.  lea rax, str.David_MacKenzie            ; 0x4ddf ; "David MacKenzie"
0x00001726      6a00           push 0
0x00001728      4c8b05e15820.  mov r8, qword [obj.Version]             ; [0x207010:8]=0x4fbb str.8.31
0x0000172f      488d0d643600.  lea rcx, str.GNU_coreutils              ; 0x4d9a ; "GNU coreutils"
0x00001736      488d15a73500.  lea rdx, str.users                      ; 0x4ce4 ; "users"
0x0000173d      89df           mov edi, ebx
0x0000173f      50             push rax
0x00001740      488d05a83600.  lea rax, str.Joseph_Arceneaux           ; 0x4def ; "Joseph Arceneaux"
0x00001747      41b901000000   mov r9d, 1
0x0000174d      4889ee         mov rsi, rbp
0x00001750      50             push rax
0x00001751      488d05980300.  lea rax, sym.usage                      ; 0x1af0 ; "AUAT\xba\x05"
0x00001758      50             push rax
0x00001759      31c0           xor eax, eax
0x0000175b      e8f0080000     call sym.parse_gnu_standard_options_only
0x00001760      486305295920.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001767      4883c420       add rsp, 0x20
0x0000176b      29c3           sub ebx, eax
0x0000176d      741a           je 0x1789
0x0000176f      83eb01         sub ebx, 1
0x00001772      7528           jne 0x179c
0x00001774      488b7cc500     mov rdi, qword [rbp + rax*8]
0x00001779      31f6           xor esi, esi
0x0000177b      e880010000     call sym.users
0x00001780      4883c408       add rsp, 8
0x00001784      31c0           xor eax, eax
0x00001786      5b             pop rbx
0x00001787      5d             pop rbp
0x00001788      c3             ret
0x00001789      488d3d863500.  lea rdi, str.var_run_utmp               ; 0x4d16 ; "/var/run/utmp"
0x00001790      be01000000     mov esi, 1
0x00001795      e866010000     call sym.users
0x0000179a      ebe4           jmp 0x1780
0x0000179c      488b7cc508     mov rdi, qword [rbp + rax*8 + 8]
0x000017a1      e8fa260000     call sym.quote
0x000017a6      488d35533600.  lea rsi, str.extra_operand__s           ; 0x4e00 ; "extra operand %s"
0x000017ad      4889c3         mov rbx, rax
0x000017b0      ba05000000     mov edx, 5
0x000017b5      31ff           xor edi, edi
0x000017b7      e8d4fcffff     call sym.imp.dcgettext
0x000017bc      31ff           xor edi, edi
0x000017be      4889c2         mov rdx, rax
0x000017c1      4889d9         mov rcx, rbx
0x000017c4      31f6           xor esi, esi
0x000017c6      31c0           xor eax, eax
0x000017c8      e863feffff     call sym.imp.error
0x000017cd      bf01000000     mov edi, 1
0x000017d2      e819030000     call sym.usage
0x000017d7      660f1f840000.  nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000017e0      31ed           xor ebp, ebp
0x000017e2      4989d1         mov r9, rdx
0x000017e5      5e             pop rsi
0x000017e6      4889e2         mov rdx, rsp
0x000017e9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000017ed      50             push rax
0x000017ee      54             push rsp
0x000017ef      4c8d05aa3400.  lea r8, sym.__libc_csu_fini             ; 0x4ca0
0x000017f6      488d0d333400.  lea rcx, sym.__libc_csu_init            ; 0x4c30 ; "AWAVI\x89\xd7AUATL\x8d%.\x1f "
0x000017fd      488d3dccfeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x16d0 ; "US\x89\xfbH\x89\xf5H\x83\xec\bH\x8b>\xe8\xad\n"
0x00001804      ff15be572000   call qword [reloc.__libc_start_main]    ; [0x206fc8:8]=0
0x0000180a      f4             hlt
0x0000180b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001810      488d3d695820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x00001817      55             push rbp
0x00001818      488d05615820.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x0000181f      4839f8         cmp rax, rdi
0x00001822      4889e5         mov rbp, rsp
0x00001825      7419           je 0x1840
0x00001827      488b05925720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x206fc0:8]=0
0x0000182e      4885c0         test rax, rax
0x00001831      740d           je 0x1840
0x00001833      5d             pop rbp
0x00001834      ffe0           jmp rax
0x00001836      662e0f1f8400.  nop word cs:[rax + rax]
0x00001840      5d             pop rbp
0x00001841      c3             ret
0x00001842      0f1f4000       nop dword [rax]
0x00001846      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001850      488d3d295820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x00001857      488d35225820.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x207080
0x0000185e      55             push rbp
0x0000185f      4829fe         sub rsi, rdi
0x00001862      4889e5         mov rbp, rsp
0x00001865      48c1fe03       sar rsi, 3
0x00001869      4889f0         mov rax, rsi
0x0000186c      48c1e83f       shr rax, 0x3f
0x00001870      4801c6         add rsi, rax
0x00001873      48d1fe         sar rsi, 1
0x00001876      7418           je 0x1890
0x00001878      488b05595720.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x206fd8:8]=0
0x0000187f      4885c0         test rax, rax
0x00001882      740c           je 0x1890
0x00001884      5d             pop rbp
0x00001885      ffe0           jmp rax
0x00001887      660f1f840000.  nop word [rax + rax]
0x00001890      5d             pop rbp
0x00001891      c3             ret
0x00001892      0f1f4000       nop dword [rax]
0x00001896      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000018a0      803d21582000.  cmp byte [obj.completed.7697], 0        ; [0x2070c8:1]=0
0x000018a7      752f           jne 0x18d8
0x000018a9      48833d2f5720.  cmp qword [reloc.__cxa_finalize], 0     ; [0x206fe0:8]=0
0x000018b1      55             push rbp
0x000018b2      4889e5         mov rbp, rsp
0x000018b5      740c           je 0x18c3
0x000018b7      488b3d4a5720.  mov rdi, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x000018be      e8fdfdffff     call sym..plt.got
0x000018c3      e848ffffff     call sym.deregister_tm_clones
0x000018c8      c605f9572000.  mov byte [obj.completed.7697], 1        ; [0x2070c8:1]=0
0x000018cf      5d             pop rbp
0x000018d0      c3             ret
0x000018d1      0f1f80000000.  nop dword [rax]
0x000018d8      f3c3           ret
0x000018da      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000018e0      55             push rbp
0x000018e1      4889e5         mov rbp, rsp
0x000018e4      5d             pop rbp
0x000018e5      e966ffffff     jmp sym.register_tm_clones
0x000018ea      660f1f440000   nop word [rax + rax]
;-- userid_compare:
0x000018f0      488b36         mov rsi, qword [rsi]                    ; .//src:40
0x000018f3      488b3f         mov rdi, qword [rdi]
0x000018f6      e965fcffff     jmp sym.imp.strcmp
0x000018fb      0f1f440000     nop dword [rax + rax]
;-- users:
0x00001900      4157           push r15                                ; .//src:86
0x00001902      4156           push r14
0x00001904      89f1           mov ecx, esi
0x00001906      4155           push r13
0x00001908      4154           push r12
0x0000190a      55             push rbp
0x0000190b      53             push rbx
0x0000190c      4889fb         mov rbx, rdi
0x0000190f      4883ec28       sub rsp, 0x28
0x00001913      488d542410     lea rdx, [rsp + 0x10]                   ; .//src:90
0x00001918      488d742408     lea rsi, [rsp + 8]
0x0000191d      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:86
0x00001926      4889442418     mov qword [rsp + 0x18], rax
0x0000192b      31c0           xor eax, eax
0x0000192d      e82e2f0000     call sym.read_utmp                      ; .//src:90
0x00001932      85c0           test eax, eax
0x00001934      0f8584010000   jne 0x1abe
0x0000193a      4c8b642408     mov r12, qword [rsp + 8]                ; .//src:93
0x0000193f      ba08000000     mov edx, 8                              ; ../coreutils-8.31/src/ers.c:101
0x00001944      31c9           xor ecx, ecx
0x00001946      4889d0         mov rax, rdx
0x00001949      488b5c2410     mov rbx, qword [rsp + 0x10]             ; .//src:93
0x0000194e      49f7e4         mul r12                                 ; ../coreutils-8.31/src/ers.c:101
0x00001951      0f805d010000   jo 0x1ab4
0x00001957      4885c0         test rax, rax
0x0000195a      0f884f010000   js 0x1aaf
0x00001960      4885c9         test rcx, rcx
0x00001963      0f8546010000   jne 0x1aaf
0x00001969      4a8d3ce50000.  lea rdi, [r12*8]                        ; ../coreutils-8.31/src/ers.c:103
0x00001971      498d6c24ff     lea rbp, [r12 - 1]                      ; .//src:53
0x00001976      e8652b0000     call sym.xmalloc                        ; ../coreutils-8.31/src/ers.c:103
0x0000197b      4d85e4         test r12, r12                           ; .//src:53
0x0000197e      4989c6         mov r14, rax                            ; ../coreutils-8.31/src/ers.c:103
0x00001981      0f840b010000   je 0x1a92                               ; .//src:53
0x00001987      4531ff         xor r15d, r15d                          ; .//src:51
0x0000198a      660f1f440000   nop word [rax + rax]
0x00001990      807b2c00       cmp byte [rbx + 0x2c], 0                ; .//src:55
0x00001994      740a           je 0x19a0
0x00001996      66833b07       cmp word [rbx], 7
0x0000199a      0f84d3000000   je 0x1a73
0x000019a0      4883ed01       sub rbp, 1                              ; .//src:53
0x000019a4      4881c3800100.  add rbx, 0x180                          ; .//src:64
0x000019ab      4883fdff       cmp rbp, 0xffffffffffffffff             ; .//src:53
0x000019af      75df           jne 0x1990
0x000019b1      488d0d38ffff.  lea rcx, sym.userid_compare             ; .//src:67 ; 0x18f0 ; "H\x8b6H\x8b?\xe9e\xfc\xff\xff\x0f\x1fD"
0x000019b8      ba08000000     mov edx, 8
0x000019bd      4c89fe         mov rsi, r15
0x000019c0      4c89f7         mov rdi, r14
0x000019c3      e878faffff     call sym.imp.qsort
0x000019c8      4d85ff         test r15, r15                           ; .//src:69
0x000019cb      7475           je 0x1a42
0x000019cd      4d8d6fff       lea r13, [r15 - 1]
0x000019d1      31db           xor ebx, ebx
0x000019d3      0f1f440000     nop dword [rax + rax]
0x000019d8      4c39eb         cmp rbx, r13                            ; .//src:71
0x000019db      498b3cde       mov rdi, qword [r14 + rbx*8]            ; .//src:72
0x000019df      488b35a25620.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000019e6      4519e4         sbb r12d, r12d                          ; .//src:71
0x000019e9      4183e416       and r12d, 0x16
0x000019ed      4183c40a       add r12d, 0xa
0x000019f1      4c39eb         cmp rbx, r13
0x000019f4      19ed           sbb ebp, ebp
0x000019f6      e845fbffff     call sym.imp.fputs_unlocked             ; .//src:72
0x000019fb      488b3d865620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/xalloc.h:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001a02      83e516         and ebp, 0x16                           ; .//src:71
0x00001a05      83c50a         add ebp, 0xa
0x00001a08      488b4728       mov rax, qword [rdi + 0x28]             ; ../coreutils-8.31/lib/xalloc.h:107
0x00001a0c      483b4730       cmp rax, qword [rdi + 0x30]
0x00001a10      7376           jae 0x1a88
0x00001a12      488d5001       lea rdx, [rax + 1]
0x00001a16      48895728       mov qword [rdi + 0x28], rdx
0x00001a1a      408828         mov byte [rax], bpl
0x00001a1d      4883c301       add rbx, 1                              ; .//src:69
0x00001a21      4c39fb         cmp rbx, r15
0x00001a24      75b2           jne 0x19d8
0x00001a26      498d1cde       lea rbx, [r14 + rbx*8]
0x00001a2a      4c89f5         mov rbp, r14
0x00001a2d      0f1f00         nop dword [rax]
0x00001a30      488b7d00       mov rdi, qword [rbp]                    ; .//src:77
0x00001a34      4883c508       add rbp, 8
0x00001a38      e893f9ffff     call sym.imp.free
0x00001a3d      4839dd         cmp rbp, rbx                            ; .//src:76
0x00001a40      75ee           jne 0x1a30
0x00001a42      4c89f7         mov rdi, r14                            ; .//src:78
0x00001a45      e886f9ffff     call sym.imp.free
0x00001a4a      488b7c2410     mov rdi, qword [rsp + 0x10]             ; .//src:95
0x00001a4f      e87cf9ffff     call sym.imp.free
0x00001a54      488b442418     mov rax, qword [rsp + 0x18]             ; .//src:96
0x00001a59      644833042528.  xor rax, qword fs:[0x28]
0x00001a62      7546           jne 0x1aaa
0x00001a64      4883c428       add rsp, 0x28
0x00001a68      5b             pop rbx
0x00001a69      5d             pop rbp
0x00001a6a      415c           pop r12
0x00001a6c      415d           pop r13
0x00001a6e      415e           pop r14
0x00001a70      415f           pop r15
0x00001a72      c3             ret
0x00001a73      4889df         mov rdi, rbx                            ; .//src:59
0x00001a76      e8852d0000     call sym.extract_trimmed_name
0x00001a7b      4b8904fe       mov qword [r14 + r15*8], rax            ; .//src:61
0x00001a7f      4983c701       add r15, 1                              ; .//src:62
0x00001a83      e918ffffff     jmp 0x19a0
0x00001a88      4489e6         mov esi, r12d                           ; ../coreutils-8.31/lib/xalloc.h:107
0x00001a8b      e860faffff     call sym.imp.__overflow
0x00001a90      eb8b           jmp 0x1a1d
0x00001a92      488d0d57feff.  lea rcx, sym.userid_compare             ; .//src:67 ; 0x18f0 ; "H\x8b6H\x8b?\xe9e\xfc\xff\xff\x0f\x1fD"
0x00001a99      ba08000000     mov edx, 8
0x00001a9e      31f6           xor esi, esi
0x00001aa0      4889c7         mov rdi, rax
0x00001aa3      e898f9ffff     call sym.imp.qsort
0x00001aa8      eb98           jmp 0x1a42
0x00001aaa      e811faffff     call sym.imp.__stack_chk_fail           ; .//src:96
0x00001aaf      e87c2c0000     call sym.xalloc_die                     ; ../coreutils-8.31/src/ers.c:102
0x00001ab4      b901000000     mov ecx, 1                              ; ../coreutils-8.31/src/ers.c:101
0x00001ab9      e999feffff     jmp 0x1957
0x00001abe      4889da         mov rdx, rbx                            ; .//src:91
0x00001ac1      be03000000     mov esi, 3
0x00001ac6      31ff           xor edi, edi
0x00001ac8      e803220000     call sym.quotearg_n_style_colon
0x00001acd      4889c3         mov rbx, rax
0x00001ad0      e81bf9ffff     call sym.imp.__errno_location
0x00001ad5      8b30           mov esi, dword [rax]
0x00001ad7      488d15f23400.  lea rdx, [0x00004fd0]                   ; "%s"
0x00001ade      4889d9         mov rcx, rbx
0x00001ae1      bf01000000     mov edi, 1
0x00001ae6      31c0           xor eax, eax
0x00001ae8      e843fbffff     call sym.imp.error
0x00001aed      0f1f00         nop dword [rax]
;-- usage:
0x00001af0      4155           push r13                                ; .//src:100
0x00001af2      4154           push r12
0x00001af4      ba05000000     mov edx, 5                              ; .//src:102
0x00001af9      55             push rbp                                ; .//src:100
0x00001afa      53             push rbx
0x00001afb      89fd           mov ebp, edi
0x00001afd      4881ec880000.  sub rsp, 0x88
0x00001b04      488b1dd55520.  mov rbx, qword [obj.program_name]       ; [0x2070e0:8]=0
0x00001b0b      64488b042528.  mov rax, qword fs:[0x28]
0x00001b14      4889442478     mov qword [rsp + 0x78], rax
0x00001b19      31c0           xor eax, eax
0x00001b1b      85ff           test edi, edi                           ; .//src:101
0x00001b1d      742e           je 0x1b4d
0x00001b1f      488d35f23200.  lea rsi, str.Try___s___help__for_more_information. ; .//src:102 ; 0x4e18 ; "Try '%s --help' for more information.\n"
0x00001b26      31ff           xor edi, edi
0x00001b28      e863f9ffff     call sym.imp.dcgettext
0x00001b2d      488b3d8c5520.  mov rdi, qword [obj.stderr]             ; stdio.h:97 __STDIO_INLINE int ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001b34      4889c2         mov rdx, rax
0x00001b37      4889d9         mov rcx, rbx
0x00001b3a      be01000000     mov esi, 1
0x00001b3f      31c0           xor eax, eax
0x00001b41      e83afbffff     call sym.imp.__fprintf_chk
0x00001b46      89ef           mov edi, ebp                            ; .//src:116
0x00001b48      e813fbffff     call sym.imp.exit
0x00001b4d      488d35963100.  lea rsi, str.Usage:__s__OPTION_...__FILE ; .//src:105 ; 0x4cea ; "Usage: %s [OPTION]... [FILE]\n"
0x00001b54      31ff           xor edi, edi
0x00001b56      e835f9ffff     call sym.imp.dcgettext
0x00001b5b      4889da         mov rdx, rbx                            ; stdio.h:104 __STDIO_INLINE int
0x00001b5e      4889c6         mov rsi, rax
0x00001b61      bf01000000     mov edi, 1
0x00001b66      31c0           xor eax, eax
0x00001b68      e8a3faffff     call sym.imp.__printf_chk
0x00001b6d      488d35cc3200.  lea rsi, str.Output_who_is_currently_logged_in_according_to_FILE.__If_FILE_is_not_specified__use__s.___s_as_FILE_is_common. ; .//src:106 ; 0x4e40 ; "Output who is currently logged in according to FILE.\nIf FILE is not specified, use %s.  %s as FILE is common.\n\n"
0x00001b74      ba05000000     mov edx, 5
0x00001b79      31ff           xor edi, edi
0x00001b7b      e810f9ffff     call sym.imp.dcgettext
0x00001b80      488d0d813100.  lea rcx, str.var_log_wtmp               ; stdio.h:104 __STDIO_INLINE int ; 0x4d08 ; "/var/log/wtmp"
0x00001b87      488d15883100.  lea rdx, str.var_run_utmp               ; 0x4d16 ; "/var/run/utmp"
0x00001b8e      4889c6         mov rsi, rax
0x00001b91      bf01000000     mov edi, 1
0x00001b96      31c0           xor eax, eax
0x00001b98      e873faffff     call sym.imp.__printf_chk
0x00001b9d      488b1de45420.  mov rbx, qword [obj.stdout]             ; .//src:112 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001ba4      488d35053300.  lea rsi, str.help_____display_this_help_and_exit ; 0x4eb0 ; "      --help     display this help and exit\n"
0x00001bab      ba05000000     mov edx, 5
0x00001bb0      31ff           xor edi, edi
0x00001bb2      e8d9f8ffff     call sym.imp.dcgettext
0x00001bb7      4889de         mov rsi, rbx
0x00001bba      4889c7         mov rdi, rax
0x00001bbd      e87ef9ffff     call sym.imp.fputs_unlocked
0x00001bc2      488b1dbf5420.  mov rbx, qword [obj.stdout]             ; .//src:113 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001bc9      488d35103300.  lea rsi, str.version__output_version_information_and_exit ; 0x4ee0 ; "      --version  output version information and exit\n"
0x00001bd0      ba05000000     mov edx, 5
0x00001bd5      31ff           xor edi, edi
0x00001bd7      e8b4f8ffff     call sym.imp.dcgettext
0x00001bdc      4889de         mov rsi, rbx
0x00001bdf      4889c7         mov rdi, rax
0x00001be2      488d1d863100.  lea rbx, str.sha384sum                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; 0x4d6f ; "sha384sum"
0x00001be9      e852f9ffff     call sym.imp.fputs_unlocked             ; .//src:113
0x00001bee      488d052f3100.  lea rax, [0x00004d24]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; "["
0x00001bf5      488d0d693100.  lea rcx, str.sha256sum                  ; 0x4d65 ; "sha256sum"
0x00001bfc      48895c2440     mov qword [rsp + 0x40], rbx
0x00001c01      488d1ddc3000.  lea rbx, str.users                      ; 0x4ce4 ; "users"
0x00001c08      48c744246000.  mov qword [rsp + 0x60], 0
0x00001c11      48c744246800.  mov qword [rsp + 0x68], 0
0x00001c1a      48890424       mov qword [rsp], rax
0x00001c1e      488d05013100.  lea rax, str.test_invocation            ; 0x4d26 ; "test invocation"
0x00001c25      48894c2430     mov qword [rsp + 0x30], rcx
0x00001c2a      488d0d483100.  lea rcx, str.sha512sum                  ; 0x4d79 ; "sha512sum"
0x00001c31      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:644
0x00001c34      4889442408     mov qword [rsp + 8], rax                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633
0x00001c39      488d055e3100.  lea rax, [0x00004d9e]                   ; "coreutils"
0x00001c40      48894c2450     mov qword [rsp + 0x50], rcx
0x00001c45      4889442410     mov qword [rsp + 0x10], rax
0x00001c4a      488d05e53000.  lea rax, str.Multi_call_invocation      ; 0x4d36 ; "Multi-call invocation"
0x00001c51      4889442418     mov qword [rsp + 0x18], rax
0x00001c56      488d05ef3000.  lea rax, str.sha224sum                  ; 0x4d4c ; "sha224sum"
0x00001c5d      4889442420     mov qword [rsp + 0x20], rax
0x00001c62      488d05ed3000.  lea rax, str.sha2_utilities             ; 0x4d56 ; "sha2 utilities"
0x00001c69      4889442428     mov qword [rsp + 0x28], rax
0x00001c6e      4889442438     mov qword [rsp + 0x38], rax
0x00001c73      4889442448     mov qword [rsp + 0x48], rax
0x00001c78      4889442458     mov qword [rsp + 0x58], rax
0x00001c7d      0f1f00         nop dword [rax]
0x00001c80      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:647
0x00001c84      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:646
0x00001c87      4885ff         test rdi, rdi
0x00001c8a      7413           je 0x1c9f
0x00001c8c      b906000000     mov ecx, 6
0x00001c91      4889de         mov rsi, rbx
0x00001c94      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001c96      0f97c0         seta al
0x00001c99      1c00           sbb al, 0
0x00001c9b      84c0           test al, al
0x00001c9d      75e1           jne 0x1c80
0x00001c9f      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00001ca3      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00001ca5      ba05000000     mov edx, 5
0x00001caa      488d35d23000.  lea rsi, str.s_online_help:___s         ; 0x4d83 ; "\n%s online help: <%s>\n"
0x00001cb1      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00001cb4      0f84c1000000   je 0x1d7b
0x00001cba      e8d1f7ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00001cbf      488d0d523200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio.h:104 __STDIO_INLINE int ; 0x4f18 ; "https://www.gnu.org/software/coreutils/"
0x00001cc6      488d15cd3000.  lea rdx, str.GNU_coreutils              ; 0x4d9a ; "GNU coreutils"
0x00001ccd      4889c6         mov rsi, rax
0x00001cd0      bf01000000     mov edi, 1
0x00001cd5      31c0           xor eax, eax
0x00001cd7      e834f9ffff     call sym.imp.__printf_chk
0x00001cdc      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x00001cde      bf05000000     mov edi, 5
0x00001ce3      e818f9ffff     call sym.imp.setlocale
0x00001ce8      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x00001ceb      741c           je 0x1d09
0x00001ced      488d35b43000.  lea rsi, [0x00004da8]                   ; "en_"
0x00001cf4      ba03000000     mov edx, 3
0x00001cf9      4889c7         mov rdi, rax
0x00001cfc      e80ff7ffff     call sym.imp.strncmp
0x00001d01      85c0           test eax, eax
0x00001d03      0f8507010000   jne 0x1e10
0x00001d09      488d359c3000.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x4dac ; "Full documentation <%s%s>\n"
0x00001d10      31ff           xor edi, edi
0x00001d12      ba05000000     mov edx, 5
0x00001d17      e874f7ffff     call sym.imp.dcgettext
0x00001d1c      488d0dc12f00.  lea rcx, str.users                      ; stdio.h:104 __STDIO_INLINE int ; 0x4ce4 ; "users"
0x00001d23      488d15ee3100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4f18 ; "https://www.gnu.org/software/coreutils/"
0x00001d2a      4889c6         mov rsi, rax
0x00001d2d      bf01000000     mov edi, 1
0x00001d32      31c0           xor eax, eax
0x00001d34      e8d7f8ffff     call sym.imp.__printf_chk
0x00001d39      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668
0x00001d3c      488d0dfd2f00.  lea rcx, [0x00004d40]                   ; " invocation"
0x00001d43      488d1d173800.  lea rbx, [0x00005561]
0x00001d4a      480f44d9       cmove rbx, rcx
0x00001d4e      488d35333200.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x4f88 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001d55      31ff           xor edi, edi
0x00001d57      ba05000000     mov edx, 5
0x00001d5c      e82ff7ffff     call sym.imp.dcgettext
0x00001d61      4889d9         mov rcx, rbx                            ; stdio.h:104 __STDIO_INLINE int
0x00001d64      4889c6         mov rsi, rax
0x00001d67      4c89e2         mov rdx, r12
0x00001d6a      bf01000000     mov edi, 1
0x00001d6f      31c0           xor eax, eax
0x00001d71      e89af8ffff     call sym.imp.__printf_chk
0x00001d76      e9cbfdffff     jmp 0x1b46
0x00001d7b      e810f7ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00001d80      488d0d913100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; stdio.h:104 __STDIO_INLINE int ; 0x4f18 ; "https://www.gnu.org/software/coreutils/"
0x00001d87      488d150c3000.  lea rdx, str.GNU_coreutils              ; 0x4d9a ; "GNU coreutils"
0x00001d8e      4889c6         mov rsi, rax
0x00001d91      bf01000000     mov edi, 1
0x00001d96      31c0           xor eax, eax
0x00001d98      e873f8ffff     call sym.imp.__printf_chk
0x00001d9d      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x00001d9f      bf05000000     mov edi, 5
0x00001da4      e857f8ffff     call sym.imp.setlocale
0x00001da9      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x00001dac      7418           je 0x1dc6
0x00001dae      488d35f32f00.  lea rsi, [0x00004da8]                   ; "en_"
0x00001db5      ba03000000     mov edx, 3
0x00001dba      4889c7         mov rdi, rax
0x00001dbd      e84ef6ffff     call sym.imp.strncmp
0x00001dc2      85c0           test eax, eax
0x00001dc4      7543           jne 0x1e09
0x00001dc6      488d35df2f00.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x4dac ; "Full documentation <%s%s>\n"
0x00001dcd      ba05000000     mov edx, 5
0x00001dd2      31ff           xor edi, edi
0x00001dd4      4c8d25092f00.  lea r12, str.users                      ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x4ce4 ; "users"
0x00001ddb      488d1d5e2f00.  lea rbx, [0x00004d40]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668 ; " invocation"
0x00001de2      e8a9f6ffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666
0x00001de7      488d0df62e00.  lea rcx, str.users                      ; stdio.h:104 __STDIO_INLINE int ; 0x4ce4 ; "users"
0x00001dee      488d15233100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x4f18 ; "https://www.gnu.org/software/coreutils/"
0x00001df5      4889c6         mov rsi, rax
0x00001df8      bf01000000     mov edi, 1
0x00001dfd      31c0           xor eax, eax
0x00001dff      e80cf8ffff     call sym.imp.__printf_chk
0x00001e04      e945ffffff     jmp 0x1d4e
0x00001e09      4c8d25d42e00.  lea r12, str.users                      ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x4ce4 ; "users"
0x00001e10      4c8b2d715220.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001e17      488d35223100.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x4f40 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001e1e      31ff           xor edi, edi
0x00001e20      ba05000000     mov edx, 5
0x00001e25      e866f6ffff     call sym.imp.dcgettext
0x00001e2a      4c89ee         mov rsi, r13
0x00001e2d      4889c7         mov rdi, rax
0x00001e30      e80bf7ffff     call sym.imp.fputs_unlocked
0x00001e35      e9cffeffff     jmp 0x1d09
0x00001e3a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00001e40      48893d915220.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2070d8:8]=0
0x00001e47      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00001e48      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00001e50      40883d795220.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2070d0:1]=0
0x00001e57      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00001e58      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00001e60      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00001e61      53             push rbx
0x00001e62      4883ec08       sub rsp, 8
0x00001e66      488b3d1b5220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001e6d      e87e2b0000     call sym.close_stream
0x00001e72      85c0           test eax, eax
0x00001e74      7416           je 0x1e8c
0x00001e76      e875f5ffff     call sym.imp.__errno_location
0x00001e7b      803d4e522000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2070d0:1]=0
0x00001e82      4889c3         mov rbx, rax
0x00001e85      741c           je 0x1ea3
0x00001e87      833820         cmp dword [rax], 0x20
0x00001e8a      7517           jne 0x1ea3
0x00001e8c      488b3d2d5220.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00001e93      e8582b0000     call sym.close_stream
0x00001e98      85c0           test eax, eax
0x00001e9a      7546           jne 0x1ee2
0x00001e9c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00001ea0      5b             pop rbx
0x00001ea1      5d             pop rbp
0x00001ea2      c3             ret
0x00001ea3      488d35163100.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x4fc0 ; "write error"
0x00001eaa      31ff           xor edi, edi
0x00001eac      ba05000000     mov edx, 5
0x00001eb1      e8daf5ffff     call sym.imp.dcgettext
0x00001eb6      488b3d1b5220.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2070d8:8]=0
0x00001ebd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00001ec0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00001ec3      7428           je 0x1eed
0x00001ec5      e8d61d0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00001eca      8b33           mov esi, dword [rbx]
0x00001ecc      488d15f93000.  lea rdx, str.s:__s                      ; 0x4fcc ; "%s: %s"
0x00001ed3      4889c1         mov rcx, rax
0x00001ed6      4989e8         mov r8, rbp
0x00001ed9      31ff           xor edi, edi
0x00001edb      31c0           xor eax, eax
0x00001edd      e84ef7ffff     call sym.imp.error
0x00001ee2      8b3d30512000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x207018:4]=1
0x00001ee8      e833f5ffff     call sym.imp._exit
0x00001eed      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00001eef      488d15da3000.  lea rdx, [0x00004fd0]                   ; "%s"
0x00001ef6      4889c1         mov rcx, rax
0x00001ef9      31ff           xor edi, edi
0x00001efb      31c0           xor eax, eax
0x00001efd      e82ef7ffff     call sym.imp.error
0x00001f02      ebde           jmp 0x1ee2
0x00001f04      662e0f1f8400.  nop word cs:[rax + rax]
0x00001f0e      6690           nop
;-- parse_long_options:
0x00001f10      4155           push r13                                ; ../coreutils-8.31/lib/long-options.c:52
0x00001f12      4154           push r12
0x00001f14      4d89c5         mov r13, r8
0x00001f17      55             push rbp
0x00001f18      53             push rbx
0x00001f19      4889d5         mov rbp, rdx
0x00001f1c      4989cc         mov r12, rcx
0x00001f1f      4881ece80000.  sub rsp, 0xe8
0x00001f26      84c0           test al, al
0x00001f28      743a           je 0x1f64
0x00001f2a      0f29442460     movaps xmmword [rsp + 0x60], xmm0
0x00001f2f      0f294c2470     movaps xmmword [rsp + 0x70], xmm1
0x00001f34      0f2994248000.  movaps xmmword [rsp + 0x80], xmm2
0x00001f3c      0f299c249000.  movaps xmmword [rsp + 0x90], xmm3
0x00001f44      0f29a424a000.  movaps xmmword [rsp + 0xa0], xmm4
0x00001f4c      0f29ac24b000.  movaps xmmword [rsp + 0xb0], xmm5
0x00001f54      0f29b424c000.  movaps xmmword [rsp + 0xc0], xmm6
0x00001f5c      0f29bc24d000.  movaps xmmword [rsp + 0xd0], xmm7
0x00001f64      64488b042528.  mov rax, qword fs:[0x28]
0x00001f6d      4889442428     mov qword [rsp + 0x28], rax
0x00001f72      31c0           xor eax, eax
0x00001f74      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/long-options.c:61
0x00001f77      8b1d23512000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:56 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001f7d      c70519512000.  mov dword [obj.opterr], 0               ; ../coreutils-8.31/lib/long-options.c:59 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001f87      7437           je 0x1fc0                               ; ../coreutils-8.31/lib/long-options.c:61
0x00001f89      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/long-options.c:90
0x00001f8e      644833042528.  xor rax, qword fs:[0x28]
0x00001f97      891d03512000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:85 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x00001f9d      c705e9502000.  mov dword [obj.optind], 0               ; ../coreutils-8.31/lib/long-options.c:89 ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x207090:4]=0
0x00001fa7      0f859d000000   jne 0x204a                              ; ../coreutils-8.31/lib/long-options.c:90
0x00001fad      4881c4e80000.  add rsp, 0xe8
0x00001fb4      5b             pop rbx
0x00001fb5      5d             pop rbp
0x00001fb6      415c           pop r12
0x00001fb8      415d           pop r13
0x00001fba      c3             ret
0x00001fbb      0f1f440000     nop dword [rax + rax]
0x00001fc0      488d0db94b20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:62 ; 0x206b80
0x00001fc7      488d15053000.  lea rdx, [0x00004fd3]                   ; "+"
0x00001fce      4531c0         xor r8d, r8d
0x00001fd1      4c894c2408     mov qword [rsp + 8], r9
0x00001fd6      e8f5f4ffff     call sym.imp.getopt_long
0x00001fdb      83f8ff         cmp eax, 0xffffffff
0x00001fde      74a9           je 0x1f89
0x00001fe0      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:64
0x00001fe3      4c8b4c2408     mov r9, qword [rsp + 8]
0x00001fe8      7456           je 0x2040
0x00001fea      83f876         cmp eax, 0x76
0x00001fed      759a           jne 0x1f89
0x00001fef      488d84241001.  lea rax, [rsp + 0x110]                  ; ../coreutils-8.31/lib/long-options.c:73
0x00001ff7      488b3d8a5020.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:74 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00001ffe      4c8d442410     lea r8, [rsp + 0x10]
0x00002003      4c89e9         mov rcx, r13
0x00002006      4c89e2         mov rdx, r12
0x00002009      4889ee         mov rsi, rbp
0x0000200c      4889442418     mov qword [rsp + 0x18], rax             ; ../coreutils-8.31/lib/long-options.c:73
0x00002011      488d442430     lea rax, [rsp + 0x30]
0x00002016      c74424103000.  mov dword [rsp + 0x10], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x0000201e      c74424143000.  mov dword [rsp + 0x14], 0x30            ; '0'
                                                                       ; [0x30:4]=0
0x00002026      4889442420     mov qword [rsp + 0x20], rax
0x0000202b      e8d0220000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:74
0x00002030      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:75
0x00002032      e829f6ffff     call sym.imp.exit
0x00002037      660f1f840000.  nop word [rax + rax]
0x00002040      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:67
0x00002042      41ffd1         call r9
0x00002045      e93fffffff     jmp 0x1f89                              ; ../coreutils-8.31/lib/long-options.c:68
0x0000204a      e871f4ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:90
0x0000204f      90             nop
;-- parse_gnu_standard_options_only:
0x00002050      4156           push r14                                ; ../coreutils-8.31/lib/long-options.c:106
0x00002052      4155           push r13
0x00002054      4d89c6         mov r14, r8
0x00002057      4154           push r12
0x00002059      55             push rbp
0x0000205a      4989d4         mov r12, rdx
0x0000205d      53             push rbx
0x0000205e      4989cd         mov r13, rcx
0x00002061      4881ecd00000.  sub rsp, 0xd0
0x00002068      84c0           test al, al
0x0000206a      488bac240001.  mov rbp, qword [rsp + 0x100]
0x00002072      7437           je 0x20ab
0x00002074      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00002079      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x0000207e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00002083      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x0000208b      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00002093      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x0000209b      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000020a3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000020ab      64488b042528.  mov rax, qword fs:[0x28]
0x000020b4      4889442418     mov qword [rsp + 0x18], rax
0x000020b9      31c0           xor eax, eax
0x000020bb      488d159f3400.  lea rdx, [0x00005561]                   ; ../coreutils-8.31/lib/long-options.c:113
0x000020c2      488d050a2f00.  lea rax, [0x00004fd3]                   ; "+"
0x000020c9      4584c9         test r9b, r9b
0x000020cc      488d0dad4a20.  lea rcx, obj.long_options               ; ../coreutils-8.31/lib/long-options.c:115 ; 0x206b80
0x000020d3      480f44d0       cmove rdx, rax                          ; ../coreutils-8.31/lib/long-options.c:113
0x000020d7      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/long-options.c:115
0x000020da      8b1dc04f2000   mov ebx, dword [obj.opterr]             ; ../coreutils-8.31/lib/long-options.c:108 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x000020e0      c705b64f2000.  mov dword [obj.opterr], 1               ; ../coreutils-8.31/lib/long-options.c:111 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x000020ea      e8e1f3ffff     call sym.imp.getopt_long                ; ../coreutils-8.31/lib/long-options.c:115
0x000020ef      83f8ff         cmp eax, 0xffffffff
0x000020f2      7464           je 0x2158
0x000020f4      83f868         cmp eax, 0x68                           ; ../coreutils-8.31/lib/long-options.c:117
0x000020f7      0f8483000000   je 0x2180
0x000020fd      83f876         cmp eax, 0x76
0x00002100      754e           jne 0x2150
0x00002102      488d84240801.  lea rax, [rsp + 0x108]                  ; ../coreutils-8.31/lib/long-options.c:126
0x0000210a      488b3d774f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/long-options.c:127 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x00002111      4989e0         mov r8, rsp
0x00002114      4c89f1         mov rcx, r14
0x00002117      4c89ea         mov rdx, r13
0x0000211a      4c89e6         mov rsi, r12
0x0000211d      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/long-options.c:126
0x00002122      488d442420     lea rax, [rsp + 0x20]
0x00002127      c70424300000.  mov dword [rsp], 0x30                   ; '0'
                                                                       ; [0x30:4]=0
0x0000212e      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00002136      4889442410     mov qword [rsp + 0x10], rax
0x0000213b      e8c0210000     call sym.version_etc_va                 ; ../coreutils-8.31/lib/long-options.c:127
0x00002140      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:128
0x00002142      e819f5ffff     call sym.imp.exit
0x00002147      660f1f840000.  nop word [rax + rax]
0x00002150      8b3dc24e2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/long-options.c:132 ; [0x207018:4]=1
0x00002156      ffd5           call rbp
0x00002158      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/long-options.c:139
0x0000215d      644833042528.  xor rax, qword fs:[0x28]
0x00002166      891d344f2000   mov dword [obj.opterr], ebx             ; ../coreutils-8.31/lib/long-options.c:138 ; obj.opterr__GLIBC_2.2.5
                                                                       ; [0x2070a0:4]=0
0x0000216c      7518           jne 0x2186                              ; ../coreutils-8.31/lib/long-options.c:139
0x0000216e      4881c4d00000.  add rsp, 0xd0
0x00002175      5b             pop rbx
0x00002176      5d             pop rbp
0x00002177      415c           pop r12
0x00002179      415d           pop r13
0x0000217b      415e           pop r14
0x0000217d      c3             ret
0x0000217e      6690           nop
0x00002180      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/long-options.c:120
0x00002182      ffd5           call rbp
0x00002184      ebd2           jmp 0x2158                              ; ../coreutils-8.31/lib/long-options.c:121
0x00002186      e835f3ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/long-options.c:139
0x0000218b      0f1f440000     nop dword [rax + rax]
;-- set_program_name:
0x00002190      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002193      53             push rbx
0x00002194      7477           je 0x220d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002196      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000219b      4889fb         mov rbx, rdi
0x0000219e      e85df3ffff     call sym.imp.strrchr
0x000021a3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000021a6      7455           je 0x21fd
0x000021a8      4c8d4001       lea r8, [rax + 1]
0x000021ac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000021af      4829da         sub rdx, rbx
0x000021b2      4883fa06       cmp rdx, 6
0x000021b6      7e45           jle 0x21fd
0x000021b8      488d70fa       lea rsi, [rax - 6]
0x000021bc      488d3d5d2e00.  lea rdi, str..libs                      ; 0x5020 ; "/.libs/"
0x000021c3      b907000000     mov ecx, 7
0x000021c8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000021ca      0f97c2         seta dl
0x000021cd      80da00         sbb dl, 0
0x000021d0      84d2           test dl, dl
0x000021d2      7529           jne 0x21fd
0x000021d4      488d3d4d2e00.  lea rdi, [0x00005028]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000021db      b903000000     mov ecx, 3
0x000021e0      4c89c6         mov rsi, r8
0x000021e3      4c89c3         mov rbx, r8
0x000021e6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000021e8      0f97c2         seta dl
0x000021eb      80da00         sbb dl, 0
0x000021ee      84d2           test dl, dl
0x000021f0      750b           jne 0x21fd
0x000021f2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000021f6      48891d834e20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x207080:8]=0
0x000021fd      48891ddc4e20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x2070e0:8]=0
0x00002204      48891d8d4e20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x207098:8]=0
0x0000220b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000220c      c3             ret
0x0000220d      488b0dac4e20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2070c0:8]=0
0x00002214      488d3dcd2d00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x4fe8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000221b      ba37000000     mov edx, 0x37                           ; '7'
0x00002220      be01000000     mov esi, 1
0x00002225      e846f4ffff     call sym.imp.fwrite
0x0000222a      e8b1f1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000222f      90             nop
;-- gettext_quote.part.1:
0x00002230      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002231      53             push rbx
0x00002232      4889fd         mov rbp, rdi
0x00002235      89f3           mov ebx, esi
0x00002237      4883ec08       sub rsp, 8
0x0000223b      e890280000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002240      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002243      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002246      80fa55         cmp dl, 0x55
0x00002249      7475           je 0x22c0
0x0000224b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000224e      7420           je 0x2270
0x00002250      488d05e42d00.  lea rax, str.l______l                   ; 0x503b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002257      488d15df2d00.  lea rdx, [0x0000503d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000225e      83fb09         cmp ebx, 9
0x00002261      480f45c2       cmovne rax, rdx
0x00002265      4883c408       add rsp, 8
0x00002269      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000226a      5d             pop rbp
0x0000226b      c3             ret
0x0000226c      0f1f4000       nop dword [rax]
0x00002270      0fb65001       movzx edx, byte [rax + 1]
0x00002274      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002277      80fa42         cmp dl, 0x42
0x0000227a      75d4           jne 0x2250
0x0000227c      80780231       cmp byte [rax + 2], 0x31
0x00002280      75ce           jne 0x2250
0x00002282      80780338       cmp byte [rax + 3], 0x38
0x00002286      75c8           jne 0x2250
0x00002288      80780430       cmp byte [rax + 4], 0x30
0x0000228c      75c2           jne 0x2250
0x0000228e      80780533       cmp byte [rax + 5], 0x33
0x00002292      75bc           jne 0x2250
0x00002294      80780630       cmp byte [rax + 6], 0x30
0x00002298      75b6           jne 0x2250
0x0000229a      80780700       cmp byte [rax + 7], 0
0x0000229e      75b0           jne 0x2250
0x000022a0      807d0060       cmp byte [rbp], 0x60
0x000022a4      488d05892d00.  lea rax, [0x00005034]
0x000022ab      488d15862d00.  lea rdx, [0x00005038]
0x000022b2      480f45c2       cmovne rax, rdx
0x000022b6      4883c408       add rsp, 8
0x000022ba      5b             pop rbx
0x000022bb      5d             pop rbp
0x000022bc      c3             ret
0x000022bd      0f1f00         nop dword [rax]
0x000022c0      0fb65001       movzx edx, byte [rax + 1]
0x000022c4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000022c7      80fa54         cmp dl, 0x54
0x000022ca      7584           jne 0x2250
0x000022cc      0fb65002       movzx edx, byte [rax + 2]
0x000022d0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000022d3      80fa46         cmp dl, 0x46
0x000022d6      0f8574ffffff   jne 0x2250
0x000022dc      8078032d       cmp byte [rax + 3], 0x2d
0x000022e0      0f856affffff   jne 0x2250
0x000022e6      80780438       cmp byte [rax + 4], 0x38
0x000022ea      0f8560ffffff   jne 0x2250
0x000022f0      80780500       cmp byte [rax + 5], 0
0x000022f4      0f8556ffffff   jne 0x2250
0x000022fa      807d0060       cmp byte [rbp], 0x60
0x000022fe      488d05272d00.  lea rax, [0x0000502c]                   ; "\u2018"
0x00002305      488d15242d00.  lea rdx, [0x00005030]                   ; "\u2019"
0x0000230c      480f45c2       cmovne rax, rdx
0x00002310      4883c408       add rsp, 8
0x00002314      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002315      5d             pop rbp
0x00002316      c3             ret
0x00002317      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002320      4157           push r15
0x00002322      4156           push r14
0x00002324      4589c7         mov r15d, r8d
0x00002327      4155           push r13
0x00002329      4154           push r12
0x0000232b      4989fe         mov r14, rdi
0x0000232e      55             push rbp
0x0000232f      53             push rbx
0x00002330      4489cb         mov ebx, r9d
0x00002333      4989f5         mov r13, rsi
0x00002336      4889cd         mov rbp, rcx
0x00002339      83e302         and ebx, 2
0x0000233c      4881ecb80000.  sub rsp, 0xb8
0x00002343      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000234b      4889542410     mov qword [rsp + 0x10], rdx
0x00002350      4489442408     mov dword [rsp + 8], r8d
0x00002355      44894c2478     mov dword [rsp + 0x78], r9d
0x0000235a      4889442420     mov qword [rsp + 0x20], rax
0x0000235f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002367      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000236c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002374      4889442460     mov qword [rsp + 0x60], rax
0x00002379      64488b042528.  mov rax, qword fs:[0x28]
0x00002382      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000238a      31c0           xor eax, eax
0x0000238c      e80ff1ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002391      4183ff0a       cmp r15d, 0xa
0x00002395      4889442458     mov qword [rsp + 0x58], rax
0x0000239a      0f87af110000   ja 0x354f
0x000023a0      488d0df92c00.  lea rcx, [0x000050a0]
0x000023a7      4489fa         mov edx, r15d
0x000023aa      48630491       movsxd rax, dword [rcx + rdx*4]
0x000023ae      4801c8         add rax, rcx
0x000023b1      ffe0           jmp rax
0x000023b3      c644240e01     mov byte [rsp + 0xe], 1
0x000023b8      c644247c00     mov byte [rsp + 0x7c], 0
0x000023bd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000023c0      48c744245000.  mov qword [rsp + 0x50], 0
0x000023c9      c644240f01     mov byte [rsp + 0xf], 1
0x000023ce      c644240d00     mov byte [rsp + 0xd], 0
0x000023d3      488d05632c00.  lea rax, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000023da      48c744241801.  mov qword [rsp + 0x18], 1
0x000023e3      4531ff         xor r15d, r15d
0x000023e6      c74424080200.  mov dword [rsp + 8], 2
0x000023ee      4889442448     mov qword [rsp + 0x48], rax
0x000023f3      4531db         xor r11d, r11d
0x000023f6      4889e8         mov rax, rbp
0x000023f9      4589e0         mov r8d, r12d
0x000023fc      4c89dd         mov rbp, r11
0x000023ff      4989c3         mov r11, rax
0x00002402      660f1f440000   nop word [rax + rax]
0x00002408      4939eb         cmp r11, rbp
0x0000240b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000240f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002413      750d           jne 0x2422
0x00002415      488b442410     mov rax, qword [rsp + 0x10]
0x0000241a      803c2800       cmp byte [rax + rbp], 0
0x0000241e      410f95c4       setne r12b
0x00002422      4584e4         test r12b, r12b
0x00002425      0f8455060000   je 0x2a80
0x0000242b      837c240802     cmp dword [rsp + 8], 2
0x00002430      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002435      4c8d0c2f       lea r9, [rdi + rbp]
0x00002439      0f95c0         setne al
0x0000243c      2244240d       and al, byte [rsp + 0xd]
0x00002440      4189c2         mov r10d, eax
0x00002443      0f84a7000000   je 0x24f0
0x00002449      488b442418     mov rax, qword [rsp + 0x18]
0x0000244e      4885c0         test rax, rax
0x00002451      0f8429040000   je 0x2880
0x00002457      4983fbff       cmp r11, 0xffffffffffffffff
0x0000245b      488d5c0500     lea rbx, [rbp + rax]
0x00002460      752e           jne 0x2490
0x00002462      4883f801       cmp rax, 1
0x00002466      7628           jbe 0x2490
0x00002468      4488442438     mov byte [rsp + 0x38], r8b
0x0000246d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002472      4c894c2428     mov qword [rsp + 0x28], r9
0x00002477      e834f0ffff     call sym.imp.strlen
0x0000247c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002482      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002488      4989c3         mov r11, rax
0x0000248b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002490      4c39db         cmp rbx, r11
0x00002493      4488542428     mov byte [rsp + 0x28], r10b
0x00002498      0f87b2050000   ja 0x2a50
0x0000249e      488b542418     mov rdx, qword [rsp + 0x18]
0x000024a3      488b742448     mov rsi, qword [rsp + 0x48]
0x000024a8      4c89cf         mov rdi, r9
0x000024ab      4c895c2440     mov qword [rsp + 0x40], r11
0x000024b0      4488442438     mov byte [rsp + 0x38], r8b
0x000024b5      4c894c2430     mov qword [rsp + 0x30], r9
0x000024ba      e871f0ffff     call sym.imp.memcmp
0x000024bf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000024c1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000024c6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000024cc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000024d1      0f8579050000   jne 0x2a50
0x000024d7      807c240f00     cmp byte [rsp + 0xf], 0
0x000024dc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000024e2      0f857d0f0000   jne 0x3465
0x000024e8      0f1f84000000.  nop dword [rax + rax]
0x000024f0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000024f4      80fb7e         cmp bl, 0x7e
0x000024f7      0f871b030000   ja 0x2818
0x000024fd      488d0dc82b00.  lea rcx, [0x000050cc]
0x00002504      0fb6d3         movzx edx, bl
0x00002507      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000250b      4801c8         add rax, rcx
0x0000250e      ffe0           jmp rax
0x00002510      4531d2         xor r10d, r10d
0x00002513      4983fb01       cmp r11, 1
0x00002517      0f95c0         setne al
0x0000251a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000251e      750c           jne 0x252c
0x00002520      488b442410     mov rax, qword [rsp + 0x10]
0x00002525      80780100       cmp byte [rax + 1], 0
0x00002529      0f95c0         setne al
0x0000252c      837c240802     cmp dword [rsp + 8], 2
0x00002531      0f94c2         sete dl
0x00002534      84c0           test al, al
0x00002536      0f844c020000   je 0x2788
0x0000253c      4531e4         xor r12d, r12d
0x0000253f      31c0           xor eax, eax
0x00002541      0f1f80000000.  nop dword [rax]
0x00002548      807c240d01     cmp byte [rsp + 0xd], 1
0x0000254d      0f850f010000   jne 0x2662
0x00002553      84d2           test dl, dl
0x00002555      0f8507010000   jne 0x2662
0x0000255b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002560      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002563      7414           je 0x2579
0x00002565      89da           mov edx, ebx
0x00002567      c0ea05         shr dl, 5
0x0000256a      0fb6d2         movzx edx, dl
0x0000256d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002570      0fa3da         bt edx, ebx
0x00002573      0f824a010000   jb 0x26c3
0x00002579      4584d2         test r10b, r10b
0x0000257c      0f8541010000   jne 0x26c3
0x00002582      83f001         xor eax, 1
0x00002585      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002589      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000258c      84c0           test al, al
0x0000258e      7420           je 0x25b0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002590      4d39fd         cmp r13, r15
0x00002593      7605           jbe 0x259a
0x00002595      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000259a      498d4701       lea rax, [r15 + 1]
0x0000259e      4939c5         cmp r13, rax
0x000025a1      7606           jbe 0x25a9
0x000025a3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000025a9      4983c702       add r15, 2
0x000025ad      4531c0         xor r8d, r8d
0x000025b0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000025b3      7304           jae 0x25b9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000025b5      43881c3e       mov byte [r14 + r15], bl
0x000025b9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000025be      4983c701       add r15, 1
0x000025c2      b800000000     mov eax, 0
0x000025c7      4584e4         test r12b, r12b
0x000025ca      0f44f8         cmove edi, eax
0x000025cd      40887c240e     mov byte [rsp + 0xe], dil
0x000025d2      e931feffff     jmp 0x2408
0x000025d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000025e0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000025e3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000025e7      83f802         cmp eax, 2
0x000025ea      0f84b8050000   je 0x2ba8
0x000025f0      83f805         cmp eax, 5
0x000025f3      0f846f050000   je 0x2b68
0x000025f9      83f802         cmp eax, 2
0x000025fc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002601      0f94c2         sete dl
0x00002604      4531e4         xor r12d, r12d
0x00002607      31c0           xor eax, eax
0x00002609      e93affffff     jmp 0x2548
0x0000260e      6690           nop
0x00002610      4531d2         xor r10d, r10d
0x00002613      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002618      0f8402050000   je 0x2b20
0x0000261e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002623      31d2           xor edx, edx
0x00002625      31c0           xor eax, eax
0x00002627      bb27000000     mov ebx, 0x27                           ; '''
0x0000262c      e917ffffff     jmp 0x2548
0x00002631      0f1f80000000.  nop dword [rax]
0x00002638      ba09000000     mov edx, 9
0x0000263d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002642      837c240802     cmp dword [rsp + 8], 2
0x00002647      0f94c0         sete al
0x0000264a      2244240f       and al, byte [rsp + 0xf]
0x0000264e      0f854a010000   jne 0x279e
0x00002654      807c240d00     cmp byte [rsp + 0xd], 0
0x00002659      7565           jne 0x26c0
0x0000265b      89d3           mov ebx, edx
0x0000265d      4531e4         xor r12d, r12d
0x00002660      31c0           xor eax, eax
0x00002662      807c240f00     cmp byte [rsp + 0xf], 0
0x00002667      0f85eefeffff   jne 0x255b
0x0000266d      e907ffffff     jmp 0x2579                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002672      660f1f440000   nop word [rax + rax]
0x00002678      ba08000000     mov edx, 8
0x0000267d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002682      ebd0           jmp 0x2654
0x00002684      0f1f4000       nop dword [rax]
0x00002688      837c240802     cmp dword [rsp + 8], 2
0x0000268d      0f84cd030000   je 0x2a60
0x00002693      807c240d00     cmp byte [rsp + 0xd], 0
0x00002698      0f8412020000   je 0x28b0
0x0000269e      807c240f00     cmp byte [rsp + 0xf], 0
0x000026a3      0f8407020000   je 0x28b0
0x000026a9      48837c241800   cmp qword [rsp + 0x18], 0
0x000026af      0f85b6030000   jne 0x2a6b
0x000026b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000026ba      660f1f440000   nop word [rax + rax]
0x000026c0      4531e4         xor r12d, r12d
0x000026c3      837c240802     cmp dword [rsp + 8], 2
0x000026c8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000026cb      807c240f00     cmp byte [rsp + 0xf], 0
0x000026d0      89d0           mov eax, edx
0x000026d2      0f8550080000   jne 0x2f28
0x000026d8      4489c0         mov eax, r8d
0x000026db      83f001         xor eax, 1
0x000026de      20d0           and al, dl
0x000026e0      742f           je 0x2711
0x000026e2      4d39fd         cmp r13, r15
0x000026e5      7605           jbe 0x26ec
0x000026e7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000026ec      498d5701       lea rdx, [r15 + 1]
0x000026f0      4939d5         cmp r13, rdx
0x000026f3      7606           jbe 0x26fb
0x000026f5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000026fb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000026ff      4939d5         cmp r13, rdx
0x00002702      7606           jbe 0x270a
0x00002704      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000270a      4983c703       add r15, 3
0x0000270e      4189c0         mov r8d, eax
0x00002711      4d39fd         cmp r13, r15
0x00002714      7605           jbe 0x271b
0x00002716      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000271b      4983c701       add r15, 1
0x0000271f      4883c501       add rbp, 1
0x00002723      e988feffff     jmp 0x25b0
0x00002728      0f1f84000000.  nop dword [rax + rax]
0x00002730      807c240d00     cmp byte [rsp + 0xd], 0
0x00002735      0f85c8010000   jne 0x2903
0x0000273b      31d2           xor edx, edx
0x0000273d      f644247801     test byte [rsp + 0x78], 1
0x00002742      0f8413ffffff   je 0x265b
0x00002748      4883c501       add rbp, 1
0x0000274c      e9b7fcffff     jmp 0x2408
0x00002751      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002758      837c240802     cmp dword [rsp + 8], 2
0x0000275d      0f94c2         sete dl
0x00002760      31c0           xor eax, eax
0x00002762      e9e1fdffff     jmp 0x2548
0x00002767      660f1f840000.  nop word [rax + rax]
0x00002770      ba07000000     mov edx, 7
0x00002775      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000277a      e9d5feffff     jmp 0x2654
0x0000277f      90             nop
0x00002780      837c240802     cmp dword [rsp + 8], 2
0x00002785      0f94c2         sete dl
0x00002788      4885ed         test rbp, rbp
0x0000278b      0f85abfdffff   jne 0x253c
0x00002791      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002796      20d0           and al, dl
0x00002798      0f84aafdffff   je 0x2548
0x0000279e      4c89dd         mov rbp, r11
0x000027a1      c74424080200.  mov dword [rsp + 8], 2
0x000027a9      e9fb060000     jmp 0x2ea9
0x000027ae      6690           nop
0x000027b0      837c240802     cmp dword [rsp + 8], 2
0x000027b5      0f94c2         sete dl
0x000027b8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000027bb      ebd4           jmp 0x2791
0x000027bd      0f1f00         nop dword [rax]
0x000027c0      837c240802     cmp dword [rsp + 8], 2
0x000027c5      bb20000000     mov ebx, 0x20                           ; "@"
0x000027ca      0f94c2         sete dl
0x000027cd      ebc2           jmp 0x2791
0x000027cf      90             nop
0x000027d0      ba0d000000     mov edx, 0xd
0x000027d5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000027da      e963feffff     jmp 0x2642
0x000027df      90             nop
0x000027e0      ba0c000000     mov edx, 0xc
0x000027e5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000027ea      e965feffff     jmp 0x2654
0x000027ef      90             nop
0x000027f0      ba0b000000     mov edx, 0xb
0x000027f5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000027fa      e955feffff     jmp 0x2654
0x000027ff      90             nop
0x00002800      ba0a000000     mov edx, 0xa
0x00002805      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000280a      e933feffff     jmp 0x2642
0x0000280f      90             nop
0x00002810      4531d2         xor r10d, r10d
0x00002813      0f1f440000     nop dword [rax + rax]
0x00002818      48837c245801   cmp qword [rsp + 0x58], 1
0x0000281e      0f85a4030000   jne 0x2bc8
0x00002824      4c895c2438     mov qword [rsp + 0x38], r11
0x00002829      4488442430     mov byte [rsp + 0x30], r8b
0x0000282e      4488542428     mov byte [rsp + 0x28], r10b
0x00002833      e878eeffff     call sym.imp.__ctype_b_loc
0x00002838      488b08         mov rcx, qword [rax]
0x0000283b      0fb6d3         movzx edx, bl
0x0000283e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002844      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000284a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000284f      bf01000000     mov edi, 1
0x00002854      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002858      66250040       and ax, 0x4000
0x0000285c      410f95c4       setne r12b
0x00002860      0f94c0         sete al
0x00002863      2244240d       and al, byte [rsp + 0xd]
0x00002867      84c0           test al, al
0x00002869      0f8592090000   jne 0x3201
0x0000286f      837c240802     cmp dword [rsp + 8], 2
0x00002874      0f94c2         sete dl
0x00002877      e9ccfcffff     jmp 0x2548
0x0000287c      0f1f4000       nop dword [rax]
0x00002880      410fb619       movzx ebx, byte [r9]
0x00002884      80fb7e         cmp bl, 0x7e
0x00002887      7787           ja 0x2810
0x00002889      488d0d382a00.  lea rcx, [0x000052c8]
0x00002890      0fb6d3         movzx edx, bl
0x00002893      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002897      4801c8         add rax, rcx
0x0000289a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000289c      0f1f4000       nop dword [rax]
0x000028a0      4531d2         xor r10d, r10d
0x000028a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000028a8      0f85f0fdffff   jne 0x269e
0x000028ae      6690           nop
0x000028b0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000028b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000028ba      e995fdffff     jmp 0x2654
0x000028bf      90             nop
0x000028c0      ba0c000000     mov edx, 0xc
0x000028c5      4531d2         xor r10d, r10d
0x000028c8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000028cd      e982fdffff     jmp 0x2654
0x000028d2      660f1f440000   nop word [rax + rax]
0x000028d8      ba0a000000     mov edx, 0xa
0x000028dd      4531d2         xor r10d, r10d
0x000028e0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000028e5      e958fdffff     jmp 0x2642
0x000028ea      660f1f440000   nop word [rax + rax]
0x000028f0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000028f5      e9c6fdffff     jmp 0x26c0
0x000028fa      660f1f440000   nop word [rax + rax]
0x00002900      4531d2         xor r10d, r10d
0x00002903      837c240802     cmp dword [rsp + 8], 2
0x00002908      0f94c2         sete dl
0x0000290b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002910      0f85940b0000   jne 0x34aa
0x00002916      4489c0         mov eax, r8d
0x00002919      4c89f9         mov rcx, r15
0x0000291c      83f001         xor eax, 1
0x0000291f      20d0           and al, dl
0x00002921      742d           je 0x2950
0x00002923      4d39fd         cmp r13, r15
0x00002926      7605           jbe 0x292d
0x00002928      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000292d      498d4f01       lea rcx, [r15 + 1]
0x00002931      4939cd         cmp r13, rcx
0x00002934      7606           jbe 0x293c
0x00002936      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000293c      498d4f02       lea rcx, [r15 + 2]
0x00002940      4939cd         cmp r13, rcx
0x00002943      0f8730060000   ja 0x2f79
0x00002949      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000294d      4189c0         mov r8d, eax
0x00002950      4939cd         cmp r13, rcx
0x00002953      7605           jbe 0x295a
0x00002955      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000295a      837c240802     cmp dword [rsp + 8], 2
0x0000295f      4c8d7901       lea r15, [rcx + 1]
0x00002963      0f8400060000   je 0x2f69
0x00002969      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000296d      4c39d8         cmp rax, r11
0x00002970      7319           jae 0x298b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00002972      488b442410     mov rax, qword [rsp + 0x10]
0x00002977      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000297c      88442428       mov byte [rsp + 0x28], al
0x00002980      83e830         sub eax, 0x30
0x00002983      3c09           cmp al, 9
0x00002985      0f862e080000   jbe 0x31b9
0x0000298b      4489e0         mov eax, r12d
0x0000298e      bb30000000     mov ebx, 0x30                           ; '0'
0x00002993      4531e4         xor r12d, r12d
0x00002996      e9adfbffff     jmp 0x2548                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000299b      0f1f440000     nop dword [rax + rax]
0x000029a0      837c240802     cmp dword [rsp + 8], 2
0x000029a5      4589d4         mov r12d, r10d
0x000029a8      0f94c2         sete dl
0x000029ab      4531d2         xor r10d, r10d
0x000029ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000029b0      e993fbffff     jmp 0x2548                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000029b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000029b8      837c240802     cmp dword [rsp + 8], 2
0x000029bd      0f94c2         sete dl
0x000029c0      4531d2         xor r10d, r10d
0x000029c3      e9c0fdffff     jmp 0x2788
0x000029c8      0f1f84000000.  nop dword [rax + rax]
0x000029d0      837c240802     cmp dword [rsp + 8], 2
0x000029d5      0f94c2         sete dl
0x000029d8      4531d2         xor r10d, r10d
0x000029db      4531e4         xor r12d, r12d
0x000029de      e9aefdffff     jmp 0x2791
0x000029e3      0f1f440000     nop dword [rax + rax]
0x000029e8      837c240802     cmp dword [rsp + 8], 2
0x000029ed      4589d4         mov r12d, r10d
0x000029f0      bb20000000     mov ebx, 0x20                           ; "@"
0x000029f5      0f94c2         sete dl
0x000029f8      4531d2         xor r10d, r10d
0x000029fb      e991fdffff     jmp 0x2791
0x00002a00      ba0d000000     mov edx, 0xd
0x00002a05      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00002a08      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002a0d      e930fcffff     jmp 0x2642
0x00002a12      660f1f440000   nop word [rax + rax]
0x00002a18      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002a1d      e99efcffff     jmp 0x26c0
0x00002a22      660f1f440000   nop word [rax + rax]
0x00002a28      ba09000000     mov edx, 9
0x00002a2d      4531d2         xor r10d, r10d
0x00002a30      bb74000000     mov ebx, 0x74                           ; 't'
0x00002a35      e908fcffff     jmp 0x2642
0x00002a3a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00002a40      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002a45      e976fcffff     jmp 0x26c0
0x00002a4a      660f1f440000   nop word [rax + rax]
0x00002a50      4531d2         xor r10d, r10d
0x00002a53      e998faffff     jmp 0x24f0
0x00002a58      0f1f84000000.  nop dword [rax + rax]
0x00002a60      807c240f00     cmp byte [rsp + 0xf], 0
0x00002a65      0f8565090000   jne 0x33d0
0x00002a6b      4883c501       add rbp, 1
0x00002a6f      4489c0         mov eax, r8d
0x00002a72      4531e4         xor r12d, r12d
0x00002a75      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002a7a      e90dfbffff     jmp 0x258c
0x00002a7f      90             nop
0x00002a80      837c240802     cmp dword [rsp + 8], 2
0x00002a85      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00002a8a      4589c4         mov r12d, r8d
0x00002a8d      4c89dd         mov rbp, r11
0x00002a90      0f94c2         sete dl
0x00002a93      89d8           mov eax, ebx
0x00002a95      4d85ff         test r15, r15
0x00002a98      0f94c1         sete cl
0x00002a9b      21d0           and eax, edx
0x00002a9d      20c8           and al, cl
0x00002a9f      0f85610a0000   jne 0x3506                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00002aa5      89d8           mov eax, ebx
0x00002aa7      83f001         xor eax, 1
0x00002aaa      20c2           and dl, al
0x00002aac      0f846a090000   je 0x341c
0x00002ab2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00002ab7      0f845d090000   je 0x341a
0x00002abd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00002ac2      0f85f5090000   jne 0x34bd
0x00002ac8      4d85ed         test r13, r13
0x00002acb      0f94c0         sete al
0x00002ace      48837c245000   cmp qword [rsp + 0x50], 0
0x00002ad4      0f95c2         setne dl
0x00002ad7      20d0           and al, dl
0x00002ad9      0f841d0a0000   je 0x34fc
0x00002adf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002ae4      488d1d522500.  lea rbx, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002aeb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00002aef      c74424080200.  mov dword [rsp + 8], 2
0x00002af7      41bf01000000   mov r15d, 1
0x00002afd      48c744241801.  mov qword [rsp + 0x18], 1
0x00002b06      c644240f00     mov byte [rsp + 0xf], 0
0x00002b0b      48895c2448     mov qword [rsp + 0x48], rbx
0x00002b10      8844247c       mov byte [rsp + 0x7c], al
0x00002b14      e9daf8ffff     jmp 0x23f3
0x00002b19      0f1f80000000.  nop dword [rax]
0x00002b20      807c240f00     cmp byte [rsp + 0xf], 0
0x00002b25      0f85a5080000   jne 0x33d0
0x00002b2b      4d85ed         test r13, r13
0x00002b2e      0f84fc030000   je 0x2f30                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00002b34      31d2           xor edx, edx
0x00002b36      48837c245000   cmp qword [rsp + 0x50], 0
0x00002b3c      0f85ee030000   jne 0x2f30                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00002b42      4c896c2450     mov qword [rsp + 0x50], r13
0x00002b47      4983c703       add r15, 3
0x00002b4b      31c0           xor eax, eax
0x00002b4d      448864247c     mov byte [rsp + 0x7c], r12b
0x00002b52      4531c0         xor r8d, r8d
0x00002b55      4989d5         mov r13, rdx
0x00002b58      bb27000000     mov ebx, 0x27                           ; '''
0x00002b5d      e917faffff     jmp 0x2579
0x00002b62      660f1f440000   nop word [rax + rax]
0x00002b68      f644247804     test byte [rsp + 0x78], 4
0x00002b6d      7421           je 0x2b90
0x00002b6f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00002b73      4c39d9         cmp rcx, r11
0x00002b76      7318           jae 0x2b90
0x00002b78      488b442410     mov rax, qword [rsp + 0x10]
0x00002b7d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00002b82      0f848a070000   je 0x3312
0x00002b88      0f1f84000000.  nop dword [rax + rax]
0x00002b90      31d2           xor edx, edx
0x00002b92      4531e4         xor r12d, r12d
0x00002b95      31c0           xor eax, eax
0x00002b97      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002b9c      e9a7f9ffff     jmp 0x2548
0x00002ba1      0f1f80000000.  nop dword [rax]
0x00002ba8      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bad      0f851d080000   jne 0x33d0
0x00002bb3      4531e4         xor r12d, r12d
0x00002bb6      31c0           xor eax, eax
0x00002bb8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002bbd      e9b7f9ffff     jmp 0x2579                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00002bc2      660f1f440000   nop word [rax + rax]
0x00002bc8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002bd0      4983fbff       cmp r11, 0xffffffffffffffff
0x00002bd4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00002be0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00002be5      752d           jne 0x2c14
0x00002be7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002bec      4488442440     mov byte [rsp + 0x40], r8b
0x00002bf1      4488542438     mov byte [rsp + 0x38], r10b
0x00002bf6      4c894c2430     mov qword [rsp + 0x30], r9
0x00002bfb      e8b0e8ffff     call sym.imp.strlen
0x00002c00      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00002c06      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00002c0c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00002c0f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002c14      488d84249c00.  lea rax, [rsp + 0x9c]
0x00002c1c      31c9           xor ecx, ecx
0x00002c1e      885c247e       mov byte [rsp + 0x7e], bl
0x00002c22      448844247d     mov byte [rsp + 0x7d], r8b
0x00002c27      4889cb         mov rbx, rcx
0x00002c2a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00002c32      4889442438     mov qword [rsp + 0x38], rax
0x00002c37      448854247f     mov byte [rsp + 0x7f], r10b
0x00002c3c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00002c44      4c89742440     mov qword [rsp + 0x40], r14
0x00002c49      4c896c2470     mov qword [rsp + 0x70], r13
0x00002c4e      4c895c2430     mov qword [rsp + 0x30], r11
0x00002c53      488b442410     mov rax, qword [rsp + 0x10]
0x00002c58      4c8d741d00     lea r14, [rbp + rbx]
0x00002c5d      488b542430     mov rdx, qword [rsp + 0x30]
0x00002c62      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002c67      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00002c6c      4e8d2c30       lea r13, [rax + r14]
0x00002c70      4c29f2         sub rdx, r14
0x00002c73      4c89ee         mov rsi, r13
0x00002c76      e8f51a0000     call sym.rpl_mbrtowc
0x00002c7b      4885c0         test rax, rax
0x00002c7e      4989c7         mov r15, rax
0x00002c81      744e           je 0x2cd1
0x00002c83      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002c87      0f8418060000   je 0x32a5
0x00002c8d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00002c91      0f849a050000   je 0x3231
0x00002c97      837c240802     cmp dword [rsp + 8], 2
0x00002c9c      0f94c0         sete al
0x00002c9f      2244240f       and al, byte [rsp + 0xf]
0x00002ca3      0f8597010000   jne 0x2e40
0x00002ca9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00002cb0      e8ebe9ffff     call sym.imp.iswprint
0x00002cb5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00002cba      85c0           test eax, eax
0x00002cbc      b800000000     mov eax, 0
0x00002cc1      440f44e0       cmove r12d, eax
0x00002cc5      4c01fb         add rbx, r15
0x00002cc8      e8c3e9ffff     call sym.imp.mbsinit
0x00002ccd      85c0           test eax, eax
0x00002ccf      7482           je 0x2c53
0x00002cd1      4489e2         mov edx, r12d
0x00002cd4      4889df         mov rdi, rbx
0x00002cd7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00002cdd      83f201         xor edx, 1
0x00002ce0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00002ce5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00002ceb      2254240d       and dl, byte [rsp + 0xd]
0x00002cef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002cf7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002cfc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002d01      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00002d06      4883ff01       cmp rdi, 1
0x00002d0a      0f86fb050000   jbe 0x330b
0x00002d10      4889f9         mov rcx, rdi
0x00002d13      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00002d15      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00002d1b      4801e9         add rcx, rbp
0x00002d1e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d23      e9b6000000     jmp 0x2dde
0x00002d28      0f1f84000000.  nop dword [rax + rax]
0x00002d30      837c240802     cmp dword [rsp + 8], 2
0x00002d35      0f94c0         sete al
0x00002d38      4584c9         test r9b, r9b
0x00002d3b      0f85af040000   jne 0x31f0
0x00002d41      4489c6         mov esi, r8d
0x00002d44      83f601         xor esi, 1
0x00002d47      4020f0         and al, sil
0x00002d4a      742f           je 0x2d7b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00002d4c      4d39fd         cmp r13, r15
0x00002d4f      7605           jbe 0x2d56
0x00002d51      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002d56      498d7701       lea rsi, [r15 + 1]
0x00002d5a      4939f5         cmp r13, rsi
0x00002d5d      7606           jbe 0x2d65                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00002d5f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002d65      498d7702       lea rsi, [r15 + 2]
0x00002d69      4939f5         cmp r13, rsi
0x00002d6c      7606           jbe 0x2d74
0x00002d6e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002d74      4983c703       add r15, 3
0x00002d78      4189c0         mov r8d, eax
0x00002d7b      4d39fd         cmp r13, r15
0x00002d7e      7605           jbe 0x2d85
0x00002d80      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002d85      498d4701       lea rax, [r15 + 1]
0x00002d89      4939c5         cmp r13, rax
0x00002d8c      760d           jbe 0x2d9b
0x00002d8e      89d8           mov eax, ebx
0x00002d90      c0e806         shr al, 6
0x00002d93      83c030         add eax, 0x30
0x00002d96      4388443e01     mov byte [r14 + r15 + 1], al
0x00002d9b      498d4702       lea rax, [r15 + 2]
0x00002d9f      4939c5         cmp r13, rax
0x00002da2      7610           jbe 0x2db4
0x00002da4      89d8           mov eax, ebx
0x00002da6      c0e803         shr al, 3
0x00002da9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00002dac      83c030         add eax, 0x30
0x00002daf      4388443e02     mov byte [r14 + r15 + 2], al
0x00002db4      83e307         and ebx, 7
0x00002db7      4883c501       add rbp, 1
0x00002dbb      4983c703       add r15, 3
0x00002dbf      83c330         add ebx, 0x30
0x00002dc2      4839cd         cmp rbp, rcx
0x00002dc5      0f83e5f7ffff   jae 0x25b0
0x00002dcb      89d6           mov esi, edx
0x00002dcd      4d39fd         cmp r13, r15
0x00002dd0      7604           jbe 0x2dd6
0x00002dd2      43881c3e       mov byte [r14 + r15], bl
0x00002dd6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002dda      4983c701       add r15, 1
0x00002dde      84d2           test dl, dl
0x00002de0      0f854affffff   jne 0x2d30
0x00002de6      89f0           mov eax, esi
0x00002de8      83f001         xor eax, 1
0x00002deb      4421c0         and eax, r8d
0x00002dee      4584d2         test r10b, r10b
0x00002df1      740e           je 0x2e01
0x00002df3      4d39fd         cmp r13, r15
0x00002df6      7605           jbe 0x2dfd
0x00002df8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002dfd      4983c701       add r15, 1
0x00002e01      4883c501       add rbp, 1
0x00002e05      4839cd         cmp rbp, rcx
0x00002e08      0f837ef7ffff   jae 0x258c
0x00002e0e      84c0           test al, al
0x00002e10      0f84f8030000   je 0x320e
0x00002e16      4d39fd         cmp r13, r15
0x00002e19      7605           jbe 0x2e20
0x00002e1b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e20      498d4701       lea rax, [r15 + 1]
0x00002e24      4939c5         cmp r13, rax
0x00002e27      7606           jbe 0x2e2f
0x00002e29      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002e2f      4983c702       add r15, 2
0x00002e33      4531d2         xor r10d, r10d
0x00002e36      4531c0         xor r8d, r8d
0x00002e39      eb92           jmp 0x2dcd
0x00002e3b      0f1f440000     nop dword [rax + rax]
0x00002e40      4983ff01       cmp r15, 1
0x00002e44      0f845ffeffff   je 0x2ca9
0x00002e4a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002e4f      4a8d0c3f       lea rcx, [rdi + r15]
0x00002e53      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00002e58      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00002e5c      eb0f           jmp 0x2e6d
0x00002e5e      6690           nop
0x00002e60      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00002e64      4939d0         cmp r8, rdx
0x00002e67      0f843cfeffff   je 0x2ca9
0x00002e6d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00002e70      83e95b         sub ecx, 0x5b
0x00002e73      80f921         cmp cl, 0x21
0x00002e76      77e8           ja 0x2e60                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00002e78      be01000000     mov esi, 1
0x00002e7d      48d3e6         shl rsi, cl
0x00002e80      4889f1         mov rcx, rsi
0x00002e83      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00002e8d      4885f1         test rcx, rsi
0x00002e90      74ce           je 0x2e60
0x00002e92      4c8b742440     mov r14, qword [rsp + 0x40]
0x00002e97      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00002e9c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002ea1      c74424080200.  mov dword [rsp + 8], 2
0x00002ea9      807c240d00     cmp byte [rsp + 0xd], 0
0x00002eae      7410           je 0x2ec0
0x00002eb0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00002eb2      b804000000     mov eax, 4
0x00002eb7      0f44442408     cmove eax, dword [rsp + 8]
0x00002ebc      89442408       mov dword [rsp + 8], eax
0x00002ec0      4883ec08       sub rsp, 8
0x00002ec4      4889e9         mov rcx, rbp
0x00002ec7      4c89ee         mov rsi, r13
0x00002eca      ff742468       push qword [rsp + 0x68]
0x00002ece      ff742478       push qword [rsp + 0x78]
0x00002ed2      4c89f7         mov rdi, r14
0x00002ed5      6a00           push 0
0x00002ed7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00002edf      448b442428     mov r8d, dword [rsp + 0x28]
0x00002ee4      488b542430     mov rdx, qword [rsp + 0x30]
0x00002ee9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00002eed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00002ef2      4883c420       add rsp, 0x20
0x00002ef6      4989c7         mov r15, rax
0x00002ef9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00002f01      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002f0a      4c89f8         mov rax, r15
0x00002f0d      0f8500060000   jne 0x3513
0x00002f13      4881c4b80000.  add rsp, 0xb8
0x00002f1a      5b             pop rbx
0x00002f1b      5d             pop rbp
0x00002f1c      415c           pop r12
0x00002f1e      415d           pop r13
0x00002f20      415e           pop r14
0x00002f22      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00002f24      c3             ret
0x00002f25      0f1f00         nop dword [rax]
0x00002f28      4c89dd         mov rbp, r11
0x00002f2b      e979ffffff     jmp 0x2ea9
0x00002f30      4d39fd         cmp r13, r15
0x00002f33      7605           jbe 0x2f3a
0x00002f35      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002f3a      498d4701       lea rax, [r15 + 1]
0x00002f3e      4939c5         cmp r13, rax
0x00002f41      7606           jbe 0x2f49
0x00002f43      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00002f49      498d4702       lea rax, [r15 + 2]
0x00002f4d      4939c5         cmp r13, rax
0x00002f50      0f86ec050000   jbe 0x3542
0x00002f56      4c89ea         mov rdx, r13
0x00002f59      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002f5f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002f64      e9d9fbffff     jmp 0x2b42
0x00002f69      4489e0         mov eax, r12d
0x00002f6c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00002f71      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00002f74      e900f6ffff     jmp 0x2579                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00002f79      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002f7f      e9c5f9ffff     jmp 0x2949
0x00002f84      85db           test ebx, ebx
0x00002f86      0f8527f4ffff   jne 0x23b3
0x00002f8c      c644240d01     mov byte [rsp + 0xd], 1
0x00002f91      4d85ed         test r13, r13
0x00002f94      0f8590050000   jne 0x352a
0x00002f9a      488d059c2000.  lea rax, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002fa1      48c744245000.  mov qword [rsp + 0x50], 0
0x00002faa      c644240e01     mov byte [rsp + 0xe], 1
0x00002faf      c644247c00     mov byte [rsp + 0x7c], 0
0x00002fb4      4531e4         xor r12d, r12d
0x00002fb7      c644240f00     mov byte [rsp + 0xf], 0
0x00002fbc      48c744241801.  mov qword [rsp + 0x18], 1
0x00002fc5      4889442448     mov qword [rsp + 0x48], rax
0x00002fca      41bf01000000   mov r15d, 1
0x00002fd0      c74424080200.  mov dword [rsp + 8], 2
0x00002fd8      e916f4ffff     jmp 0x23f3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00002fdd      0f1f00         nop dword [rax]
0x00002fe0      85db           test ebx, ebx
0x00002fe2      0f85f5030000   jne 0x33dd
0x00002fe8      4d85ed         test r13, r13
0x00002feb      0f8425020000   je 0x3216
0x00002ff1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00002ff5      c644240e01     mov byte [rsp + 0xe], 1
0x00002ffa      4531e4         xor r12d, r12d
0x00002ffd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003002      48c744245000.  mov qword [rsp + 0x50], 0
0x0000300b      488d05292000.  lea rax, str.l______l                   ; 0x503b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003012      c644240f00     mov byte [rsp + 0xf], 0
0x00003017      c644240d01     mov byte [rsp + 0xd], 1
0x0000301c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003025      41bf01000000   mov r15d, 1
0x0000302b      4889442448     mov qword [rsp + 0x48], rax
0x00003030      e9bef3ffff     jmp 0x23f3
0x00003035      488d05ff1f00.  lea rax, str.l______l                   ; 0x503b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000303c      c644240e01     mov byte [rsp + 0xe], 1
0x00003041      c644247c00     mov byte [rsp + 0x7c], 0
0x00003046      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003049      48c744245000.  mov qword [rsp + 0x50], 0
0x00003052      c644240f01     mov byte [rsp + 0xf], 1
0x00003057      c644240d01     mov byte [rsp + 0xd], 1
0x0000305c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003065      4531ff         xor r15d, r15d
0x00003068      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000306d      c74424080500.  mov dword [rsp + 8], 5
0x00003075      e979f3ffff     jmp 0x23f3
0x0000307a      c644240e01     mov byte [rsp + 0xe], 1
0x0000307f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003084      4531e4         xor r12d, r12d
0x00003087      48c744245000.  mov qword [rsp + 0x50], 0
0x00003090      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003095      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003098      c644240d01     mov byte [rsp + 0xd], 1
0x0000309d      48c744241800.  mov qword [rsp + 0x18], 0
0x000030a6      48c744244800.  mov qword [rsp + 0x48], 0
0x000030af      e93ff3ffff     jmp 0x23f3
0x000030b4      837c24080a     cmp dword [rsp + 8], 0xa
0x000030b9      7456           je 0x3111
0x000030bb      488d357d1f00.  lea rsi, [0x0000503f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000030c2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000030c4      ba05000000     mov edx, 5
0x000030c9      e8c2e3ffff     call sym.imp.dcgettext
0x000030ce      4889c1         mov rcx, rax
0x000030d1      4889442468     mov qword [rsp + 0x68], rax
0x000030d6      488d05621f00.  lea rax, [0x0000503f]                   ; "`"
0x000030dd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000030e0      0f8498030000   je 0x347e
0x000030e6      488d35501f00.  lea rsi, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000030ed      31ff           xor edi, edi
0x000030ef      ba05000000     mov edx, 5
0x000030f4      e897e3ffff     call sym.imp.dcgettext
0x000030f9      4889c1         mov rcx, rax
0x000030fc      4889442460     mov qword [rsp + 0x60], rax
0x00003101      488d05351f00.  lea rax, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003108      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000310b      0f8483030000   je 0x3494
0x00003111      4531ff         xor r15d, r15d
0x00003114      85db           test ebx, ebx
0x00003116      0f84c1010000   je 0x32dd
0x0000311c      85db           test ebx, ebx
0x0000311e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003123      0f9544240f     setne byte [rsp + 0xf]
0x00003128      4531e4         xor r12d, r12d
0x0000312b      4889df         mov rdi, rbx
0x0000312e      e87de3ffff     call sym.imp.strlen
0x00003133      48895c2448     mov qword [rsp + 0x48], rbx
0x00003138      4889442418     mov qword [rsp + 0x18], rax
0x0000313d      c644240e01     mov byte [rsp + 0xe], 1
0x00003142      c644247c00     mov byte [rsp + 0x7c], 0
0x00003147      48c744245000.  mov qword [rsp + 0x50], 0
0x00003150      c644240d01     mov byte [rsp + 0xd], 1
0x00003155      e999f2ffff     jmp 0x23f3
0x0000315a      c644240e01     mov byte [rsp + 0xe], 1
0x0000315f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003164      4531e4         xor r12d, r12d
0x00003167      48c744245000.  mov qword [rsp + 0x50], 0
0x00003170      c644240f00     mov byte [rsp + 0xf], 0
0x00003175      4531ff         xor r15d, r15d
0x00003178      c644240d00     mov byte [rsp + 0xd], 0
0x0000317d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003186      48c744244800.  mov qword [rsp + 0x48], 0
0x0000318f      e95ff2ffff     jmp 0x23f3
0x00003194      c644240e01     mov byte [rsp + 0xe], 1
0x00003199      c644247c00     mov byte [rsp + 0x7c], 0
0x0000319e      4531e4         xor r12d, r12d
0x000031a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000031aa      c644240f01     mov byte [rsp + 0xf], 1
0x000031af      c644240d01     mov byte [rsp + 0xd], 1
0x000031b4      e91af2ffff     jmp 0x23d3
0x000031b9      4d39fd         cmp r13, r15
0x000031bc      7605           jbe 0x31c3
0x000031be      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000031c3      488d4102       lea rax, [rcx + 2]
0x000031c7      4939c5         cmp r13, rax
0x000031ca      7606           jbe 0x31d2
0x000031cc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000031d2      4489e0         mov eax, r12d
0x000031d5      4c8d7903       lea r15, [rcx + 3]
0x000031d9      4531e4         xor r12d, r12d
0x000031dc      bb30000000     mov ebx, 0x30                           ; '0'
0x000031e1      e962f3ffff     jmp 0x2548
0x000031e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000031f0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000031f5      4c89dd         mov rbp, r11
0x000031f8      885c240d       mov byte [rsp + 0xd], bl
0x000031fc      e9a8fcffff     jmp 0x2ea9
0x00003201      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003206      4531e4         xor r12d, r12d
0x00003209      e902fbffff     jmp 0x2d10
0x0000320e      4531d2         xor r10d, r10d
0x00003211      e9b7fbffff     jmp 0x2dcd
0x00003216      48c744245000.  mov qword [rsp + 0x50], 0
0x0000321f      c644240e01     mov byte [rsp + 0xe], 1
0x00003224      4531e4         xor r12d, r12d
0x00003227      c644247c00     mov byte [rsp + 0x7c], 0
0x0000322c      e9dafdffff     jmp 0x300b
0x00003231      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003236      4c89f6         mov rsi, r14
0x00003239      4c89e9         mov rcx, r13
0x0000323c      4889d8         mov rax, rbx
0x0000323f      4889df         mov rdi, rbx
0x00003242      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003248      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000324d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003255      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003258      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000325e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003266      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000326b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003270      7326           jae 0x3298
0x00003272      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003275      7510           jne 0x3287
0x00003277      eb1f           jmp 0x3298
0x00003279      0f1f80000000.  nop dword [rax]
0x00003280      41803c0100     cmp byte [r9 + rax], 0
0x00003285      740e           je 0x3295
0x00003287      4883c001       add rax, 1
0x0000328b      488d540500     lea rdx, [rbp + rax]
0x00003290      4939d3         cmp r11, rdx
0x00003293      77eb           ja 0x3280
0x00003295      4889c7         mov rdi, rax
0x00003298      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000329d      4531e4         xor r12d, r12d
0x000032a0      e961faffff     jmp 0x2d06
0x000032a5      4889df         mov rdi, rbx
0x000032a8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000032ae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000032b3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000032b9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000032c1      4531e4         xor r12d, r12d
0x000032c4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000032c9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000032ce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000032d3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000032d8      e929faffff     jmp 0x2d06
0x000032dd      488b542468     mov rdx, qword [rsp + 0x68]
0x000032e2      0fb602         movzx eax, byte [rdx]
0x000032e5      84c0           test al, al
0x000032e7      0f842ffeffff   je 0x311c
0x000032ed      0f1f00         nop dword [rax]
0x000032f0      4d39fd         cmp r13, r15
0x000032f3      7604           jbe 0x32f9
0x000032f5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000032f9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000032fd      420fb6043a     movzx eax, byte [rdx + r15]
0x00003302      84c0           test al, al
0x00003304      75ea           jne 0x32f0
0x00003306      e911feffff     jmp 0x311c
0x0000330b      89d0           mov eax, edx
0x0000330d      e955f5ffff     jmp 0x2867
0x00003312      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003316      80fb3e         cmp bl, 0x3e
0x00003319      0f8771f8ffff   ja 0x2b90
0x0000331f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003329      480fa3d8       bt rax, rbx
0x0000332d      0f835df8ffff   jae 0x2b90
0x00003333      807c240f00     cmp byte [rsp + 0xf], 0
0x00003338      0f85e4010000   jne 0x3522                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000333e      4d39fd         cmp r13, r15
0x00003341      7605           jbe 0x3348
0x00003343      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003348      498d4701       lea rax, [r15 + 1]
0x0000334c      4939c5         cmp r13, rax
0x0000334f      7606           jbe 0x3357
0x00003351      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003357      498d4702       lea rax, [r15 + 2]
0x0000335b      4939c5         cmp r13, rax
0x0000335e      7606           jbe 0x3366
0x00003360      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003366      498d4703       lea rax, [r15 + 3]
0x0000336a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000336d      7606           jbe 0x3375
0x0000336f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003375      4983c704       add r15, 4
0x00003379      31d2           xor edx, edx
0x0000337b      4531e4         xor r12d, r12d
0x0000337e      31c0           xor eax, eax
0x00003380      4889cd         mov rbp, rcx
0x00003383      e9c0f1ffff     jmp 0x2548
0x00003388      85db           test ebx, ebx
0x0000338a      0f8488010000   je 0x3518
0x00003390      488d05a61c00.  lea rax, [0x0000503d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003397      c644240e01     mov byte [rsp + 0xe], 1
0x0000339c      c644247c00     mov byte [rsp + 0x7c], 0
0x000033a1      4531e4         xor r12d, r12d
0x000033a4      48c744245000.  mov qword [rsp + 0x50], 0
0x000033ad      c644240f01     mov byte [rsp + 0xf], 1
0x000033b2      c644240d00     mov byte [rsp + 0xd], 0
0x000033b7      48c744241801.  mov qword [rsp + 0x18], 1
0x000033c0      4531ff         xor r15d, r15d
0x000033c3      4889442448     mov qword [rsp + 0x48], rax
0x000033c8      e926f0ffff     jmp 0x23f3
0x000033cd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000033d0      4c89dd         mov rbp, r11
0x000033d3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000033d8      e9ccfaffff     jmp 0x2ea9
0x000033dd      488d05571c00.  lea rax, str.l______l                   ; 0x503b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000033e4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000033e9      c644247c00     mov byte [rsp + 0x7c], 0
0x000033ee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000033f1      48c744245000.  mov qword [rsp + 0x50], 0
0x000033fa      c644240f01     mov byte [rsp + 0xf], 1
0x000033ff      c644240d01     mov byte [rsp + 0xd], 1
0x00003404      48c744241801.  mov qword [rsp + 0x18], 1
0x0000340d      4531ff         xor r15d, r15d
0x00003410      4889442448     mov qword [rsp + 0x48], rax
0x00003415      e9d9efffff     jmp 0x23f3
0x0000341a      89d0           mov eax, edx
0x0000341c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003421      4885db         test rbx, rbx
0x00003424      742c           je 0x3452
0x00003426      84c0           test al, al
0x00003428      7428           je 0x3452
0x0000342a      0fb60b         movzx ecx, byte [rbx]
0x0000342d      4889d8         mov rax, rbx
0x00003430      84c9           test cl, cl
0x00003432      741e           je 0x3452
0x00003434      4c89fa         mov rdx, r15
0x00003437      4c29f8         sub rax, r15
0x0000343a      4939d5         cmp r13, rdx
0x0000343d      7604           jbe 0x3443
0x0000343f      41880c16       mov byte [r14 + rdx], cl
0x00003443      4883c201       add rdx, 1
0x00003447      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000344b      84c9           test cl, cl
0x0000344d      75eb           jne 0x343a
0x0000344f      4989d7         mov r15, rdx
0x00003452      4d39fd         cmp r13, r15
0x00003455      0f869efaffff   jbe 0x2ef9
0x0000345b      43c6043e00     mov byte [r14 + r15], 0
0x00003460      e994faffff     jmp 0x2ef9
0x00003465      837c240802     cmp dword [rsp + 8], 2
0x0000346a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000346f      4c89dd         mov rbp, r11
0x00003472      0f94c0         sete al
0x00003475      885c240d       mov byte [rsp + 0xd], bl
0x00003479      e92bfaffff     jmp 0x2ea9
0x0000347e      8b742408       mov esi, dword [rsp + 8]
0x00003482      4889cf         mov rdi, rcx
0x00003485      e8a6edffff     call sym.gettext_quote.part.1
0x0000348a      4889442468     mov qword [rsp + 0x68], rax
0x0000348f      e952fcffff     jmp 0x30e6
0x00003494      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003498      4889cf         mov rdi, rcx
0x0000349b      e890edffff     call sym.gettext_quote.part.1
0x000034a0      4889442460     mov qword [rsp + 0x60], rax
0x000034a5      e967fcffff     jmp 0x3111
0x000034aa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000034af      4c89dd         mov rbp, r11
0x000034b2      89d0           mov eax, edx
0x000034b4      885c240d       mov byte [rsp + 0xd], bl
0x000034b8      e9ecf9ffff     jmp 0x2ea9
0x000034bd      4883ec08       sub rsp, 8
0x000034c1      41b805000000   mov r8d, 5
0x000034c7      4c89d9         mov rcx, r11
0x000034ca      ff742468       push qword [rsp + 0x68]
0x000034ce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000034d2      4c89f7         mov rdi, r14
0x000034d5      ff742438       push qword [rsp + 0x38]
0x000034d9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000034e1      488b542430     mov rdx, qword [rsp + 0x30]
0x000034e6      488b742470     mov rsi, qword [rsp + 0x70]
0x000034eb      e830eeffff     call sym.quotearg_buffer_restyled
0x000034f0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000034f4      4989c7         mov r15, rax
0x000034f7      e9fdf9ffff     jmp 0x2ef9
0x000034fc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003501      e916ffffff     jmp 0x341c
0x00003506      c74424080200.  mov dword [rsp + 8], 2
0x0000350e      e996f9ffff     jmp 0x2ea9
0x00003513      e8a8dfffff     call sym.imp.__stack_chk_fail
0x00003518      c644240d00     mov byte [rsp + 0xd], 0
0x0000351d      e96ffaffff     jmp 0x2f91
0x00003522      4c89dd         mov rbp, r11
0x00003525      e996f9ffff     jmp 0x2ec0
0x0000352a      c644240e01     mov byte [rsp + 0xe], 1
0x0000352f      31c0           xor eax, eax
0x00003531      4531e4         xor r12d, r12d
0x00003534      48c744245000.  mov qword [rsp + 0x50], 0
0x0000353d      e9a2f5ffff     jmp 0x2ae4
0x00003542      4c89ea         mov rdx, r13
0x00003545      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000354a      e9f3f5ffff     jmp 0x2b42
0x0000354f      e88cdeffff     call sym.imp.abort
0x00003554      6690           nop
0x00003556      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003560      4157           push r15
0x00003562      4156           push r14
0x00003564      4c63ff         movsxd r15, edi
0x00003567      4155           push r13
0x00003569      4154           push r12
0x0000356b      4989d6         mov r14, rdx
0x0000356e      55             push rbp
0x0000356f      53             push rbx
0x00003570      4889cd         mov rbp, rcx
0x00003573      4883ec28       sub rsp, 0x28
0x00003577      4889742408     mov qword [rsp + 8], rsi
0x0000357c      e86fdeffff     call sym.imp.__errno_location
0x00003581      4989c5         mov r13, rax
0x00003584      8b00           mov eax, dword [rax]
0x00003586      4585ff         test r15d, r15d
0x00003589      488b1dd03a20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003590      89442418       mov dword [rsp + 0x18], eax
0x00003594      0f8867010000   js 0x3701
0x0000359a      44393db73a20.  cmp dword [obj.nslots], r15d            ; [0x207058:4]=1
0x000035a1      7f62           jg 0x3605
0x000035a3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000035aa      0f8456010000   je 0x3706
0x000035b0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000035b4      488d05b53a20.  lea rax, obj.slotvec0                   ; 0x207070
0x000035bb      4963f4         movsxd rsi, r12d
0x000035be      48c1e604       shl rsi, 4
0x000035c2      4839c3         cmp rbx, rax
0x000035c5      0f8415010000   je 0x36e0
0x000035cb      4889df         mov rdi, rbx
0x000035ce      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000035d3      4889c3         mov rbx, rax
0x000035d6      488905833a20.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000035dd      48633d743a20.  movsxd rdi, dword [obj.nslots]          ; [0x207058:4]=1
0x000035e4      4489e2         mov edx, r12d
0x000035e7      31f6           xor esi, esi
0x000035e9      29fa           sub edx, edi
0x000035eb      48c1e704       shl rdi, 4
0x000035ef      4863d2         movsxd rdx, edx
0x000035f2      4801df         add rdi, rbx
0x000035f5      48c1e204       shl rdx, 4
0x000035f9      e822dfffff     call sym.imp.memset
0x000035fe      448925533a20.  mov dword [obj.nslots], r12d            ; [0x207058:4]=1
0x00003605      8b4504         mov eax, dword [rbp + 4]
0x00003608      49c1e704       shl r15, 4
0x0000360c      4883ec08       sub rsp, 8
0x00003610      4c01fb         add rbx, r15
0x00003613      4c8d7d08       lea r15, [rbp + 8]
0x00003617      448b4500       mov r8d, dword [rbp]
0x0000361b      4c8b1b         mov r11, qword [rbx]
0x0000361e      4c8b6308       mov r12, qword [rbx + 8]
0x00003622      4c89f1         mov rcx, r14
0x00003625      83c801         or eax, 1
0x00003628      89442424       mov dword [rsp + 0x24], eax
0x0000362c      ff7530         push qword [rbp + 0x30]
0x0000362f      4189c1         mov r9d, eax
0x00003632      ff7528         push qword [rbp + 0x28]
0x00003635      4157           push r15
0x00003637      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000363a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000363f      4c89e7         mov rdi, r12
0x00003642      4c895c2430     mov qword [rsp + 0x30], r11
0x00003647      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000364c      4883c420       add rsp, 0x20
0x00003650      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003655      4939c3         cmp r11, rax
0x00003658      7767           ja 0x36c1
0x0000365a      488d7001       lea rsi, [rax + 1]
0x0000365e      488d059b3a20.  lea rax, obj.slot0                      ; 0x207100
0x00003665      4939c4         cmp r12, rax
0x00003668      488933         mov qword [rbx], rsi
0x0000366b      7412           je 0x367f
0x0000366d      4c89e7         mov rdi, r12
0x00003670      4889742410     mov qword [rsp + 0x10], rsi
0x00003675      e856ddffff     call sym.imp.free
0x0000367a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000367f      4889f7         mov rdi, rsi
0x00003682      4889742410     mov qword [rsp + 0x10], rsi
0x00003687      e8540e0000     call sym.xmalloc
0x0000368c      4883ec08       sub rsp, 8
0x00003690      48894308       mov qword [rbx + 8], rax
0x00003694      448b4500       mov r8d, dword [rbp]
0x00003698      ff7530         push qword [rbp + 0x30]
0x0000369b      ff7528         push qword [rbp + 0x28]
0x0000369e      4c89f1         mov rcx, r14
0x000036a1      4157           push r15
0x000036a3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000036a8      4889c7         mov rdi, rax
0x000036ab      488b542428     mov rdx, qword [rsp + 0x28]
0x000036b0      488b742430     mov rsi, qword [rsp + 0x30]
0x000036b5      4989c4         mov r12, rax
0x000036b8      e863ecffff     call sym.quotearg_buffer_restyled
0x000036bd      4883c420       add rsp, 0x20
0x000036c1      8b442418       mov eax, dword [rsp + 0x18]
0x000036c5      41894500       mov dword [r13], eax
0x000036c9      4883c428       add rsp, 0x28
0x000036cd      4c89e0         mov rax, r12
0x000036d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000036d1      5d             pop rbp
0x000036d2      415c           pop r12
0x000036d4      415d           pop r13
0x000036d6      415e           pop r14
0x000036d8      415f           pop r15
0x000036da      c3             ret
0x000036db      0f1f440000     nop dword [rax + rax]
0x000036e0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000036e2      e8590e0000     call sym.xrealloc
0x000036e7      660f6f058139.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000036ef      4889c3         mov rbx, rax
0x000036f2      488905673920.  mov qword [obj.slotvec], rax            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000036f9      0f1100         movups xmmword [rax], xmm0
0x000036fc      e9dcfeffff     jmp 0x35dd
0x00003701      e8dadcffff     call sym.imp.abort
0x00003706      e825100000     call sym.xalloc_die
0x0000370b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003710      4154           push r12
0x00003712      55             push rbp
0x00003713      53             push rbx
0x00003714      4889fb         mov rbx, rdi
0x00003717      e8d4dcffff     call sym.imp.__errno_location
0x0000371c      448b20         mov r12d, dword [rax]
0x0000371f      4889c5         mov rbp, rax
0x00003722      488d05d73a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003729      4885db         test rbx, rbx
0x0000372c      be38000000     mov esi, 0x38                           ; '8'
0x00003731      480f44d8       cmove rbx, rax
0x00003735      4889df         mov rdi, rbx
0x00003738      e8a30f0000     call sym.xmemdup
0x0000373d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003741      5b             pop rbx
0x00003742      5d             pop rbp
0x00003743      415c           pop r12
0x00003745      c3             ret
0x00003746      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003750      488d05a93a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003757      4885ff         test rdi, rdi
0x0000375a      480f44f8       cmove rdi, rax
0x0000375e      8b07           mov eax, dword [rdi]
0x00003760      c3             ret
0x00003761      0f1f440000     nop dword [rax + rax]
0x00003766      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003770      488d05893a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003777      4885ff         test rdi, rdi
0x0000377a      480f44f8       cmove rdi, rax
0x0000377e      8937           mov dword [rdi], esi
0x00003780      c3             ret
0x00003781      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003786      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003790      488d05693a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x00003797      4885ff         test rdi, rdi
0x0000379a      89f1           mov ecx, esi
0x0000379c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000037a0      89f0           mov eax, esi
0x000037a2      83e11f         and ecx, 0x1f
0x000037a5      c0e805         shr al, 5
0x000037a8      0fb6c0         movzx eax, al
0x000037ab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000037b0      8b37           mov esi, dword [rdi]
0x000037b2      89f0           mov eax, esi
0x000037b4      d3e8           shr eax, cl
0x000037b6      31c2           xor edx, eax
0x000037b8      83e001         and eax, 1
0x000037bb      83e201         and edx, 1
0x000037be      d3e2           shl edx, cl
0x000037c0      31f2           xor edx, esi
0x000037c2      8917           mov dword [rdi], edx
0x000037c4      c3             ret
0x000037c5      90             nop
0x000037c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000037d0      488d05293a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000037d7      4885ff         test rdi, rdi
0x000037da      480f44f8       cmove rdi, rax
0x000037de      8b4704         mov eax, dword [rdi + 4]
0x000037e1      897704         mov dword [rdi + 4], esi
0x000037e4      c3             ret
0x000037e5      90             nop
0x000037e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000037f0      488d05093a20.  lea rax, obj.default_quoting_options    ; 0x207200
0x000037f7      4885ff         test rdi, rdi
0x000037fa      480f44f8       cmove rdi, rax
0x000037fe      4885f6         test rsi, rsi
0x00003801      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003807      740e           je 0x3817
0x00003809      4885d2         test rdx, rdx
0x0000380c      7409           je 0x3817
0x0000380e      48897728       mov qword [rdi + 0x28], rsi
0x00003812      48895730       mov qword [rdi + 0x30], rdx
0x00003816      c3             ret
0x00003817      4883ec08       sub rsp, 8
0x0000381b      e8c0dbffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003820      4157           push r15
0x00003822      4156           push r14
0x00003824      488d05d53920.  lea rax, obj.default_quoting_options    ; 0x207200
0x0000382b      4155           push r13
0x0000382d      4154           push r12
0x0000382f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003832      55             push rbp
0x00003833      53             push rbx
0x00003834      4c89c3         mov rbx, r8
0x00003837      4989f6         mov r14, rsi
0x0000383a      4989d7         mov r15, rdx
0x0000383d      4883ec18       sub rsp, 0x18
0x00003841      4d85c0         test r8, r8
0x00003844      480f44d8       cmove rbx, rax
0x00003848      48894c2408     mov qword [rsp + 8], rcx
0x0000384d      e89edbffff     call sym.imp.__errno_location
0x00003852      448b20         mov r12d, dword [rax]
0x00003855      4889c5         mov rbp, rax
0x00003858      488d4308       lea rax, [rbx + 8]
0x0000385c      4883ec08       sub rsp, 8
0x00003860      448b4b04       mov r9d, dword [rbx + 4]
0x00003864      ff7330         push qword [rbx + 0x30]
0x00003867      448b03         mov r8d, dword [rbx]
0x0000386a      ff7328         push qword [rbx + 0x28]
0x0000386d      4c89fa         mov rdx, r15
0x00003870      50             push rax
0x00003871      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003876      4c89f6         mov rsi, r14
0x00003879      4c89ef         mov rdi, r13
0x0000387c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003881      44896500       mov dword [rbp], r12d
0x00003885      4883c438       add rsp, 0x38
0x00003889      5b             pop rbx
0x0000388a      5d             pop rbp
0x0000388b      415c           pop r12
0x0000388d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000388f      415e           pop r14
0x00003891      415f           pop r15
0x00003893      c3             ret
0x00003894      6690           nop
0x00003896      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000038a0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000038a2      4156           push r14
0x000038a4      488d05553920.  lea rax, obj.default_quoting_options    ; 0x207200
0x000038ab      4155           push r13
0x000038ad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000038af      4989d4         mov r12, rdx
0x000038b2      55             push rbp
0x000038b3      53             push rbx
0x000038b4      4889cb         mov rbx, rcx
0x000038b7      4989fe         mov r14, rdi
0x000038ba      4989f7         mov r15, rsi
0x000038bd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000038c1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000038c4      480f44d8       cmove rbx, rax
0x000038c8      31ed           xor ebp, ebp
0x000038ca      e821dbffff     call sym.imp.__errno_location
0x000038cf      4d85e4         test r12, r12
0x000038d2      4989c5         mov r13, rax
0x000038d5      8b00           mov eax, dword [rax]
0x000038d7      400f94c5       sete bpl
0x000038db      0b6b04         or ebp, dword [rbx + 4]
0x000038de      4c8d5308       lea r10, [rbx + 8]
0x000038e2      4883ec08       sub rsp, 8
0x000038e6      448b03         mov r8d, dword [rbx]
0x000038e9      4c89f9         mov rcx, r15
0x000038ec      89442414       mov dword [rsp + 0x14], eax
0x000038f0      ff7330         push qword [rbx + 0x30]
0x000038f3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000038f6      ff7328         push qword [rbx + 0x28]
0x000038f9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000038fb      31f6           xor esi, esi
0x000038fd      4189e9         mov r9d, ebp
0x00003900      31ff           xor edi, edi
0x00003902      4c89542440     mov qword [rsp + 0x40], r10
0x00003907      e814eaffff     call sym.quotearg_buffer_restyled
0x0000390c      488d7001       lea rsi, [rax + 1]
0x00003910      4889442448     mov qword [rsp + 0x48], rax
0x00003915      4883c420       add rsp, 0x20
0x00003919      4889f7         mov rdi, rsi
0x0000391c      4889742418     mov qword [rsp + 0x18], rsi
0x00003921      e8ba0b0000     call sym.xmalloc
0x00003926      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000392b      4883ec08       sub rsp, 8
0x0000392f      ff7330         push qword [rbx + 0x30]
0x00003932      ff7328         push qword [rbx + 0x28]
0x00003935      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000393a      4189e9         mov r9d, ebp
0x0000393d      448b03         mov r8d, dword [rbx]
0x00003940      4c89f9         mov rcx, r15
0x00003943      4c89f2         mov rdx, r14
0x00003946      4889c7         mov rdi, rax
0x00003949      4152           push r10
0x0000394b      488b742438     mov rsi, qword [rsp + 0x38]
0x00003950      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00003955      8b44242c       mov eax, dword [rsp + 0x2c]
0x00003959      4883c420       add rsp, 0x20
0x0000395d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00003960      41894500       mov dword [r13], eax
0x00003964      7409           je 0x396f
0x00003966      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000396b      4d891c24       mov qword [r12], r11
0x0000396f      488b442410     mov rax, qword [rsp + 0x10]
0x00003974      4883c438       add rsp, 0x38
0x00003978      5b             pop rbx
0x00003979      5d             pop rbp
0x0000397a      415c           pop r12
0x0000397c      415d           pop r13
0x0000397e      415e           pop r14
0x00003980      415f           pop r15
0x00003982      c3             ret
0x00003983      0f1f00         nop dword [rax]
0x00003986      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00003990      4889d1         mov rcx, rdx
0x00003993      31d2           xor edx, edx
0x00003995      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000399a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000039a0      8b05b2362000   mov eax, dword [obj.nslots]             ; [0x207058:4]=1
0x000039a6      4154           push r12
0x000039a8      4c8b25b13620.  mov r12, qword [obj.slotvec]            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x000039af      55             push rbp
0x000039b0      53             push rbx
0x000039b1      83f801         cmp eax, 1
0x000039b4      7e2b           jle 0x39e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000039b6      83e802         sub eax, 2
0x000039b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000039be      48c1e004       shl rax, 4
0x000039c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000039c7      660f1f840000.  nop word [rax + rax]
0x000039d0      488b3b         mov rdi, qword [rbx]
0x000039d3      4883c310       add rbx, 0x10
0x000039d7      e8f4d9ffff     call sym.imp.free
0x000039dc      4839eb         cmp rbx, rbp
0x000039df      75ef           jne 0x39d0
0x000039e1      498b7c2408     mov rdi, qword [r12 + 8]
0x000039e6      488d1d133720.  lea rbx, obj.slot0                      ; 0x207100
0x000039ed      4839df         cmp rdi, rbx
0x000039f0      7417           je 0x3a09
0x000039f2      e8d9d9ffff     call sym.imp.free
0x000039f7      48c7056e3620.  mov qword [obj.slotvec0], 0x100         ; [0x207070:8]=256
0x00003a02      48891d6f3620.  mov qword [0x00207078], rbx             ; [0x207078:8]=0x207100 obj.slot0
0x00003a09      488d1d603620.  lea rbx, obj.slotvec0                   ; 0x207070
0x00003a10      4939dc         cmp r12, rbx
0x00003a13      740f           je 0x3a24
0x00003a15      4c89e7         mov rdi, r12
0x00003a18      e8b3d9ffff     call sym.imp.free
0x00003a1d      48891d3c3620.  mov qword [obj.slotvec], rbx            ; [0x207060:8]=0x207070 obj.slotvec0 ; "pp "
0x00003a24      5b             pop rbx
0x00003a25      c70529362000.  mov dword [obj.nslots], 1               ; [0x207058:4]=1
0x00003a2f      5d             pop rbp
0x00003a30      415c           pop r12
0x00003a32      c3             ret
0x00003a33      0f1f00         nop dword [rax]
0x00003a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00003a40      488d0db93720.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003a47      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003a4e      e90dfbffff     jmp sym.quotearg_n_options
0x00003a53      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00003a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00003a60      488d0d993720.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003a67      e9f4faffff     jmp sym.quotearg_n_options
0x00003a6c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00003a70      488d0d893720.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003a77      4889fe         mov rsi, rdi
0x00003a7a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003a81      31ff           xor edi, edi
0x00003a83      e9d8faffff     jmp sym.quotearg_n_options
0x00003a88      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00003a90      488d0d693720.  lea rcx, obj.default_quoting_options    ; 0x207200
0x00003a97      4889f2         mov rdx, rsi
0x00003a9a      4889fe         mov rsi, rdi
0x00003a9d      31ff           xor edi, edi
0x00003a9f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00003aa4      6690           nop
0x00003aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00003ab0      4883ec48       sub rsp, 0x48
0x00003ab4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00003ab7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003ac0      4889542438     mov qword [rsp + 0x38], rdx
0x00003ac5      31d2           xor edx, edx
0x00003ac7      83fe0a         cmp esi, 0xa
0x00003aca      7468           je 0x3b34
0x00003acc      893424         mov dword [rsp], esi
0x00003acf      4889e1         mov rcx, rsp
0x00003ad2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003ad9      4889c6         mov rsi, rax
0x00003adc      48c744240400.  mov qword [rsp + 4], 0
0x00003ae5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003aee      48c744241400.  mov qword [rsp + 0x14], 0
0x00003af7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003b00      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00003b09      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003b12      c74424340000.  mov dword [rsp + 0x34], 0
0x00003b1a      e841faffff     call sym.quotearg_n_options
0x00003b1f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003b24      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003b2d      750a           jne 0x3b39                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00003b2f      4883c448       add rsp, 0x48
0x00003b33      c3             ret
0x00003b34      e8a7d8ffff     call sym.imp.abort
0x00003b39      e882d9ffff     call sym.imp.__stack_chk_fail
0x00003b3e      6690           nop
;-- quotearg_n_style_mem:
0x00003b40      4883ec48       sub rsp, 0x48
0x00003b44      4889d0         mov rax, rdx
0x00003b47      4889ca         mov rdx, rcx
0x00003b4a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00003b53      48894c2438     mov qword [rsp + 0x38], rcx
0x00003b58      31c9           xor ecx, ecx
0x00003b5a      83fe0a         cmp esi, 0xa
0x00003b5d      7461           je 0x3bc0
0x00003b5f      893424         mov dword [rsp], esi
0x00003b62      4889e1         mov rcx, rsp
0x00003b65      4889c6         mov rsi, rax
0x00003b68      48c744240400.  mov qword [rsp + 4], 0
0x00003b71      48c744240c00.  mov qword [rsp + 0xc], 0
0x00003b7a      48c744241400.  mov qword [rsp + 0x14], 0
0x00003b83      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003b8c      48c744242400.  mov qword [rsp + 0x24], 0
0x00003b95      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003b9e      c74424340000.  mov dword [rsp + 0x34], 0
0x00003ba6      e8b5f9ffff     call sym.quotearg_n_options
0x00003bab      488b542438     mov rdx, qword [rsp + 0x38]
0x00003bb0      644833142528.  xor rdx, qword fs:[0x28]
0x00003bb9      750a           jne 0x3bc5
0x00003bbb      4883c448       add rsp, 0x48
0x00003bbf      c3             ret
0x00003bc0      e81bd8ffff     call sym.imp.abort
0x00003bc5      e8f6d8ffff     call sym.imp.__stack_chk_fail
0x00003bca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00003bd0      4889f2         mov rdx, rsi
0x00003bd3      89fe           mov esi, edi
0x00003bd5      31ff           xor edi, edi
0x00003bd7      e9d4feffff     jmp sym.quotearg_n_style
0x00003bdc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00003be0      4889d1         mov rcx, rdx
0x00003be3      4889f2         mov rdx, rsi
0x00003be6      89fe           mov esi, edi
0x00003be8      31ff           xor edi, edi
0x00003bea      e951ffffff     jmp sym.quotearg_n_style_mem
0x00003bef      90             nop
;-- quotearg_char_mem:
0x00003bf0      4883ec48       sub rsp, 0x48
0x00003bf4      89d1           mov ecx, edx
0x00003bf6      64488b042528.  mov rax, qword fs:[0x28]
0x00003bff      4889442438     mov qword [rsp + 0x38], rax
0x00003c04      31c0           xor eax, eax
0x00003c06      488b05233620.  mov rax, qword [0x00207230]             ; [0x207230:8]=0
0x00003c0d      4989e0         mov r8, rsp
0x00003c10      83e11f         and ecx, 0x1f
0x00003c13      660f6f05e535.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003c1b      4889442430     mov qword [rsp + 0x30], rax
0x00003c20      89d0           mov eax, edx
0x00003c22      0f290424       movaps xmmword [rsp], xmm0
0x00003c26      c0e805         shr al, 5
0x00003c29      0fb6c0         movzx eax, al
0x00003c2c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00003c31      660f6f05d735.  movdqa xmm0, xmmword [0x00207210]
0x00003c39      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003c3e      660f6f05da35.  movdqa xmm0, xmmword [0x00207220]
0x00003c46      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003c4b      418b11         mov edx, dword [r9]
0x00003c4e      89d0           mov eax, edx
0x00003c50      d3e8           shr eax, cl
0x00003c52      f7d0           not eax
0x00003c54      83e001         and eax, 1
0x00003c57      d3e0           shl eax, cl
0x00003c59      4c89c1         mov rcx, r8
0x00003c5c      31d0           xor eax, edx
0x00003c5e      4889f2         mov rdx, rsi
0x00003c61      4889fe         mov rsi, rdi
0x00003c64      418901         mov dword [r9], eax
0x00003c67      31ff           xor edi, edi
0x00003c69      e8f2f8ffff     call sym.quotearg_n_options
0x00003c6e      488b742438     mov rsi, qword [rsp + 0x38]
0x00003c73      644833342528.  xor rsi, qword fs:[0x28]
0x00003c7c      7505           jne 0x3c83
0x00003c7e      4883c448       add rsp, 0x48
0x00003c82      c3             ret
0x00003c83      e838d8ffff     call sym.imp.__stack_chk_fail
0x00003c88      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00003c90      400fbed6       movsx edx, sil
0x00003c94      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003c9b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00003ca0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003ca5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00003cac      e93fffffff     jmp sym.quotearg_char_mem
0x00003cb1      0f1f440000     nop dword [rax + rax]
0x00003cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00003cc0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00003cc5      e926ffffff     jmp sym.quotearg_char_mem
0x00003cca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00003cd0      4883ec48       sub rsp, 0x48
0x00003cd4      4889d0         mov rax, rdx
0x00003cd7      64488b142528.  mov rdx, qword fs:[0x28]
0x00003ce0      4889542438     mov qword [rsp + 0x38], rdx
0x00003ce5      31d2           xor edx, edx
0x00003ce7      83fe0a         cmp esi, 0xa
0x00003cea      7468           je 0x3d54
0x00003cec      893424         mov dword [rsp], esi
0x00003cef      4889e1         mov rcx, rsp
0x00003cf2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003cf9      4889c6         mov rsi, rax
0x00003cfc      48c744240400.  mov qword [rsp + 4], 0
0x00003d05      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00003d0e      48c744241400.  mov qword [rsp + 0x14], 0
0x00003d17      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00003d20      48c744242400.  mov qword [rsp + 0x24], 0
0x00003d29      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00003d32      c74424340000.  mov dword [rsp + 0x34], 0
0x00003d3a      e821f8ffff     call sym.quotearg_n_options
0x00003d3f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003d44      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003d4d      750a           jne 0x3d59
0x00003d4f      4883c448       add rsp, 0x48
0x00003d53      c3             ret
0x00003d54      e887d6ffff     call sym.imp.abort
0x00003d59      e862d7ffff     call sym.imp.__stack_chk_fail
0x00003d5e      6690           nop
;-- quotearg_n_custom_mem:
0x00003d60      4883ec48       sub rsp, 0x48
0x00003d64      4989c9         mov r9, rcx
0x00003d67      488b0dc23420.  mov rcx, qword [0x00207230]             ; [0x207230:8]=0
0x00003d6e      660f6f058a34.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00003d76      64488b042528.  mov rax, qword fs:[0x28]
0x00003d7f      4889442438     mov qword [rsp + 0x38], rax
0x00003d84      31c0           xor eax, eax
0x00003d86      0f290424       movaps xmmword [rsp], xmm0
0x00003d8a      4885f6         test rsi, rsi
0x00003d8d      48894c2430     mov qword [rsp + 0x30], rcx
0x00003d92      c704240a0000.  mov dword [rsp], 0xa
0x00003d99      660f6f056f34.  movdqa xmm0, xmmword [0x00207210]
0x00003da1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00003da6      660f6f057234.  movdqa xmm0, xmmword [0x00207220]
0x00003dae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00003db3      7432           je 0x3de7
0x00003db5      4885d2         test rdx, rdx
0x00003db8      742d           je 0x3de7
0x00003dba      4889742428     mov qword [rsp + 0x28], rsi
0x00003dbf      4889542430     mov qword [rsp + 0x30], rdx
0x00003dc4      4889e1         mov rcx, rsp
0x00003dc7      4c89c2         mov rdx, r8
0x00003dca      4c89ce         mov rsi, r9
0x00003dcd      e88ef7ffff     call sym.quotearg_n_options
0x00003dd2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003dd7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00003de0      750a           jne 0x3dec
0x00003de2      4883c448       add rsp, 0x48
0x00003de6      c3             ret
0x00003de7      e8f4d5ffff     call sym.imp.abort
0x00003dec      e8cfd6ffff     call sym.imp.__stack_chk_fail
0x00003df1      0f1f440000     nop dword [rax + rax]
0x00003df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00003e00      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003e07      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00003e0c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00003e10      4889d1         mov rcx, rdx
0x00003e13      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00003e1a      4889f2         mov rdx, rsi
0x00003e1d      4889fe         mov rsi, rdi
0x00003e20      31ff           xor edi, edi
0x00003e22      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00003e27      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00003e30      4989c8         mov r8, rcx
0x00003e33      4889d1         mov rcx, rdx
0x00003e36      4889f2         mov rdx, rsi
0x00003e39      4889fe         mov rsi, rdi
0x00003e3c      31ff           xor edi, edi
0x00003e3e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00003e43      0f1f00         nop dword [rax]
0x00003e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00003e50      488d0dc93120.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003e57      e904f7ffff     jmp sym.quotearg_n_options
0x00003e5c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00003e60      488d0db93120.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003e67      4889f2         mov rdx, rsi
0x00003e6a      4889fe         mov rsi, rdi
0x00003e6d      31ff           xor edi, edi
0x00003e6f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00003e74      6690           nop
0x00003e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00003e80      488d0d993120.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003e87      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003e8e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00003e93      0f1f00         nop dword [rax]
0x00003e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00003ea0      488d0d793120.  lea rcx, obj.quote_quoting_options      ; 0x207020
0x00003ea7      4889fe         mov rsi, rdi
0x00003eaa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00003eb1      31ff           xor edi, edi
0x00003eb3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00003eb8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00003ec0      4157           push r15
0x00003ec2      4156           push r14
0x00003ec4      4155           push r13
0x00003ec6      4154           push r12
0x00003ec8      4d89cc         mov r12, r9
0x00003ecb      55             push rbp
0x00003ecc      53             push rbx
0x00003ecd      4889fd         mov rbp, rdi
0x00003ed0      4c89c3         mov rbx, r8
0x00003ed3      4883ec28       sub rsp, 0x28
0x00003ed7      4885f6         test rsi, rsi
0x00003eda      0f8418010000   je 0x3ff8
0x00003ee0      4989d0         mov r8, rdx
0x00003ee3      488d151e1600.  lea rdx, [0x00005508]                   ; "%s (%s) %s\n"
0x00003eea      4989c9         mov r9, rcx
0x00003eed      31c0           xor eax, eax
0x00003eef      4889f1         mov rcx, rsi
0x00003ef2      be01000000     mov esi, 1
0x00003ef7      e884d7ffff     call sym.imp.__fprintf_chk
0x00003efc      488d35181600.  lea rsi, [0x0000551b]                   ; "(C)"
0x00003f03      31ff           xor edi, edi
0x00003f05      ba05000000     mov edx, 5
0x00003f0a      e881d5ffff     call sym.imp.dcgettext
0x00003f0f      488d152a1900.  lea rdx, obj.version_etc_copyright      ; 0x5840 ; "Copyright %s %d Free Software Foundation, Inc."
0x00003f16      4889c1         mov rcx, rax
0x00003f19      41b8e3070000   mov r8d, 0x7e3
0x00003f1f      be01000000     mov esi, 1
0x00003f24      4889ef         mov rdi, rbp
0x00003f27      31c0           xor eax, eax
0x00003f29      e852d7ffff     call sym.imp.__fprintf_chk
0x00003f2e      488d35731600.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x55a8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00003f35      31ff           xor edi, edi
0x00003f37      ba05000000     mov edx, 5
0x00003f3c      e84fd5ffff     call sym.imp.dcgettext
0x00003f41      4889ee         mov rsi, rbp
0x00003f44      4889c7         mov rdi, rax
0x00003f47      e8f4d5ffff     call sym.imp.fputs_unlocked
0x00003f4c      4983fc09       cmp r12, 9
0x00003f50      0f873a030000   ja 0x4290
0x00003f56      488d15ab1800.  lea rdx, [0x00005808]
0x00003f5d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00003f61      4801d0         add rax, rdx
0x00003f64      ffe0           jmp rax
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f70      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00003f74      488b4310       mov rax, qword [rbx + 0x10]
0x00003f78      488d35991700.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x5718 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00003f7f      4c8b4308       mov r8, qword [rbx + 8]
0x00003f83      ba05000000     mov edx, 5
0x00003f88      31ff           xor edi, edi
0x00003f8a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00003f8e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00003f92      4c894c2410     mov qword [rsp + 0x10], r9
0x00003f97      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00003f9b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00003f9f      48890424       mov qword [rsp], rax
0x00003fa3      4c89442408     mov qword [rsp + 8], r8
0x00003fa8      488b1b         mov rbx, qword [rbx]
0x00003fab      e8e0d4ffff     call sym.imp.dcgettext
0x00003fb0      4883ec08       sub rsp, 8
0x00003fb4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00003fb9      4889c2         mov rdx, rax
0x00003fbc      4889d9         mov rcx, rbx
0x00003fbf      be01000000     mov esi, 1
0x00003fc4      4889ef         mov rdi, rbp
0x00003fc7      31c0           xor eax, eax
0x00003fc9      4151           push r9
0x00003fcb      4155           push r13
0x00003fcd      4154           push r12
0x00003fcf      4157           push r15
0x00003fd1      4156           push r14
0x00003fd3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003fd8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00003fdd      e89ed6ffff     call sym.imp.__fprintf_chk
0x00003fe2      4883c430       add rsp, 0x30
0x00003fe6      4883c428       add rsp, 0x28
0x00003fea      5b             pop rbx
0x00003feb      5d             pop rbp
0x00003fec      415c           pop r12
0x00003fee      415d           pop r13
0x00003ff0      415e           pop r14
0x00003ff2      415f           pop r15
0x00003ff4      c3             ret
0x00003ff5      0f1f00         nop dword [rax]
0x00003ff8      4989c8         mov r8, rcx
0x00003ffb      4889d1         mov rcx, rdx
0x00003ffe      488d150f1500.  lea rdx, str.s__s                       ; 0x5514 ; "%s %s\n"
0x00004005      be01000000     mov esi, 1
0x0000400a      31c0           xor eax, eax
0x0000400c      e86fd6ffff     call sym.imp.__fprintf_chk
0x00004011      e9e6feffff     jmp 0x3efc
0x00004016      662e0f1f8400.  nop word cs:[rax + rax]
0x00004020      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004024      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004028      488d35191700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x5748 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000402f      488b4310       mov rax, qword [rbx + 0x10]
0x00004033      4c8b4308       mov r8, qword [rbx + 8]
0x00004037      ba05000000     mov edx, 5
0x0000403c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004040      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004044      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004048      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000404c      488b1b         mov rbx, qword [rbx]
0x0000404f      4c89542418     mov qword [rsp + 0x18], r10
0x00004054      4c894c2410     mov qword [rsp + 0x10], r9
0x00004059      48890424       mov qword [rsp], rax
0x0000405d      4c89442408     mov qword [rsp + 8], r8
0x00004062      31ff           xor edi, edi
0x00004064      e827d4ffff     call sym.imp.dcgettext
0x00004069      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000406e      4152           push r10
0x00004070      e93fffffff     jmp 0x3fb4
0x00004075      0f1f00         nop dword [rax]
0x00004078      488b1b         mov rbx, qword [rbx]
0x0000407b      488d359d1400.  lea rsi, str.Written_by__s.             ; 0x551f ; "Written by %s.\n"
0x00004082      ba05000000     mov edx, 5
0x00004087      31ff           xor edi, edi
0x00004089      e802d4ffff     call sym.imp.dcgettext
0x0000408e      4883c428       add rsp, 0x28
0x00004092      4889d9         mov rcx, rbx
0x00004095      4889ef         mov rdi, rbp
0x00004098      5b             pop rbx
0x00004099      5d             pop rbp
0x0000409a      415c           pop r12
0x0000409c      415d           pop r13
0x0000409e      415e           pop r14
0x000040a0      415f           pop r15
0x000040a2      4889c2         mov rdx, rax
0x000040a5      be01000000     mov esi, 1
0x000040aa      31c0           xor eax, eax
0x000040ac      e9cfd5ffff     jmp sym.imp.__fprintf_chk
0x000040b1      0f1f80000000.  nop dword [rax]
0x000040b8      4c8b6308       mov r12, qword [rbx + 8]
0x000040bc      488d356c1400.  lea rsi, str.Written_by__s_and__s.      ; 0x552f ; "Written by %s and %s.\n"
0x000040c3      488b1b         mov rbx, qword [rbx]
0x000040c6      ba05000000     mov edx, 5
0x000040cb      31ff           xor edi, edi
0x000040cd      e8bed3ffff     call sym.imp.dcgettext
0x000040d2      4883c428       add rsp, 0x28
0x000040d6      4d89e0         mov r8, r12
0x000040d9      4889d9         mov rcx, rbx
0x000040dc      4889ef         mov rdi, rbp
0x000040df      4889c2         mov rdx, rax
0x000040e2      be01000000     mov esi, 1
0x000040e7      5b             pop rbx
0x000040e8      5d             pop rbp
0x000040e9      415c           pop r12
0x000040eb      415d           pop r13
0x000040ed      415e           pop r14
0x000040ef      415f           pop r15
0x000040f1      31c0           xor eax, eax
0x000040f3      e988d5ffff     jmp sym.imp.__fprintf_chk
0x000040f8      0f1f84000000.  nop dword [rax + rax]
0x00004100      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004104      4c8b6308       mov r12, qword [rbx + 8]
0x00004108      488d35371400.  lea rsi, str.Written_by__s___s__and__s. ; 0x5546 ; "Written by %s, %s, and %s.\n"
0x0000410f      488b1b         mov rbx, qword [rbx]
0x00004112      ba05000000     mov edx, 5
0x00004117      31ff           xor edi, edi
0x00004119      e872d3ffff     call sym.imp.dcgettext
0x0000411e      4883c428       add rsp, 0x28
0x00004122      4d89e9         mov r9, r13
0x00004125      4d89e0         mov r8, r12
0x00004128      4889d9         mov rcx, rbx
0x0000412b      4889ef         mov rdi, rbp
0x0000412e      4889c2         mov rdx, rax
0x00004131      5b             pop rbx
0x00004132      5d             pop rbp
0x00004133      415c           pop r12
0x00004135      415d           pop r13
0x00004137      415e           pop r14
0x00004139      415f           pop r15
0x0000413b      be01000000     mov esi, 1
0x00004140      31c0           xor eax, eax
0x00004142      e939d5ffff     jmp sym.imp.__fprintf_chk
0x00004147      660f1f840000.  nop word [rax + rax]
0x00004150      488d35211500.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x5678 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004157      ba05000000     mov edx, 5
0x0000415c      31ff           xor edi, edi
0x0000415e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004162      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004166      4c8b6308       mov r12, qword [rbx + 8]
0x0000416a      488b1b         mov rbx, qword [rbx]
0x0000416d      e81ed3ffff     call sym.imp.dcgettext
0x00004172      4883ec08       sub rsp, 8
0x00004176      4156           push r14
0x00004178      4889c2         mov rdx, rax
0x0000417b      4d89e9         mov r9, r13
0x0000417e      4d89e0         mov r8, r12
0x00004181      4889d9         mov rcx, rbx
0x00004184      4889ef         mov rdi, rbp
0x00004187      be01000000     mov esi, 1
0x0000418c      31c0           xor eax, eax
0x0000418e      e8edd4ffff     call sym.imp.__fprintf_chk
0x00004193      58             pop rax
0x00004194      5a             pop rdx
0x00004195      4883c428       add rsp, 0x28
0x00004199      5b             pop rbx
0x0000419a      5d             pop rbp
0x0000419b      415c           pop r12
0x0000419d      415d           pop r13
0x0000419f      415e           pop r14
0x000041a1      415f           pop r15
0x000041a3      c3             ret
0x000041a4      0f1f4000       nop dword [rax]
0x000041a8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000041ac      488d35e51400.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x5698 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000041b3      ba05000000     mov edx, 5
0x000041b8      31ff           xor edi, edi
0x000041ba      4c8b7318       mov r14, qword [rbx + 0x18]
0x000041be      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000041c2      4c8b6308       mov r12, qword [rbx + 8]
0x000041c6      488b1b         mov rbx, qword [rbx]
0x000041c9      e8c2d2ffff     call sym.imp.dcgettext
0x000041ce      4157           push r15
0x000041d0      eba4           jmp 0x4176
0x000041d2      660f1f440000   nop word [rax + rax]
0x000041d8      4c8b4308       mov r8, qword [rbx + 8]
0x000041dc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000041e0      488d35d91400.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x56c0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000041e7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000041eb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000041ef      ba05000000     mov edx, 5
0x000041f4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000041f8      31ff           xor edi, edi
0x000041fa      488b1b         mov rbx, qword [rbx]
0x000041fd      4c890424       mov qword [rsp], r8
0x00004201      e88ad2ffff     call sym.imp.dcgettext
0x00004206      4883ec08       sub rsp, 8
0x0000420a      4d89e9         mov r9, r13
0x0000420d      4154           push r12
0x0000420f      4157           push r15
0x00004211      4156           push r14
0x00004213      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004218      4889d9         mov rcx, rbx
0x0000421b      4889c2         mov rdx, rax
0x0000421e      4889ef         mov rdi, rbp
0x00004221      be01000000     mov esi, 1
0x00004226      31c0           xor eax, eax
0x00004228      e853d4ffff     call sym.imp.__fprintf_chk
0x0000422d      4883c420       add rsp, 0x20
0x00004231      4883c428       add rsp, 0x28
0x00004235      5b             pop rbx
0x00004236      5d             pop rbp
0x00004237      415c           pop r12
0x00004239      415d           pop r13
0x0000423b      415e           pop r14
0x0000423d      415f           pop r15
0x0000423f      c3             ret
0x00004240      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004244      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004248      488d35991400.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x56e8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000424f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004253      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004257      ba05000000     mov edx, 5
0x0000425c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004260      4c8b4308       mov r8, qword [rbx + 8]
0x00004264      31ff           xor edi, edi
0x00004266      4c894c2408     mov qword [rsp + 8], r9
0x0000426b      488b1b         mov rbx, qword [rbx]
0x0000426e      4c890424       mov qword [rsp], r8
0x00004272      e819d2ffff     call sym.imp.dcgettext
0x00004277      4155           push r13
0x00004279      4154           push r12
0x0000427b      4157           push r15
0x0000427d      4156           push r14
0x0000427f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004284      eb8d           jmp 0x4213
0x00004286      662e0f1f8400.  nop word cs:[rax + rax]
0x00004290      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004294      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004298      ba05000000     mov edx, 5
0x0000429d      488b4310       mov rax, qword [rbx + 0x10]
0x000042a1      4c8b4308       mov r8, qword [rbx + 8]
0x000042a5      488d35d41400.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x5780 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000042ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000042b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000042b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000042b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000042bc      4c89542418     mov qword [rsp + 0x18], r10
0x000042c1      4c894c2410     mov qword [rsp + 0x10], r9
0x000042c6      48890424       mov qword [rsp], rax
0x000042ca      4c89442408     mov qword [rsp + 8], r8
0x000042cf      488b1b         mov rbx, qword [rbx]
0x000042d2      e98bfdffff     jmp 0x4062
0x000042d7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000042e0      4531c9         xor r9d, r9d
0x000042e3      49833800       cmp qword [r8], 0
0x000042e7      7412           je 0x42fb
0x000042e9      0f1f80000000.  nop dword [rax]
0x000042f0      4983c101       add r9, 1
0x000042f4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000042f9      75f5           jne 0x42f0
0x000042fb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004300      4883ec68       sub rsp, 0x68
0x00004304      4d89c2         mov r10, r8
0x00004307      4531c9         xor r9d, r9d
0x0000430a      64488b042528.  mov rax, qword fs:[0x28]
0x00004313      4889442458     mov qword [rsp + 0x58], rax
0x00004318      31c0           xor eax, eax
0x0000431a      4989e0         mov r8, rsp
0x0000431d      0f1f00         nop dword [rax]
0x00004320      418b02         mov eax, dword [r10]
0x00004323      83f82f         cmp eax, 0x2f
0x00004326      7742           ja 0x436a
0x00004328      4189c3         mov r11d, eax
0x0000432b      4d035a10       add r11, qword [r10 + 0x10]
0x0000432f      83c008         add eax, 8
0x00004332      418902         mov dword [r10], eax
0x00004335      498b03         mov rax, qword [r11]
0x00004338      4885c0         test rax, rax
0x0000433b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000433f      740a           je 0x434b
0x00004341      4983c101       add r9, 1
0x00004345      4983f90a       cmp r9, 0xa
0x00004349      75d5           jne 0x4320
0x0000434b      e870fbffff     call sym.version_etc_arn
0x00004350      488b442458     mov rax, qword [rsp + 0x58]
0x00004355      644833042528.  xor rax, qword fs:[0x28]
0x0000435e      7505           jne 0x4365
0x00004360      4883c468       add rsp, 0x68
0x00004364      c3             ret
0x00004365      e856d1ffff     call sym.imp.__stack_chk_fail
0x0000436a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000436e      498d4308       lea rax, [r11 + 8]
0x00004372      49894208       mov qword [r10 + 8], rax
0x00004376      ebbd           jmp 0x4335
0x00004378      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004380      55             push rbp
0x00004381      53             push rbx
0x00004382      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004388      4531db         xor r11d, r11d
0x0000438b      4881ecb80000.  sub rsp, 0xb8
0x00004392      64488b042528.  mov rax, qword fs:[0x28]
0x0000439b      4889442478     mov qword [rsp + 0x78], rax
0x000043a0      31c0           xor eax, eax
0x000043a2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000043aa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000043b2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000043ba      4c8d442420     lea r8, [rsp + 0x20]
0x000043bf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000043c7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000043cf      4889442410     mov qword [rsp + 0x10], rax
0x000043d4      488d84248000.  lea rax, [rsp + 0x80]
0x000043dc      4531c9         xor r9d, r9d
0x000043df      4889442418     mov qword [rsp + 0x18], rax
0x000043e4      4889c5         mov rbp, rax
0x000043e7      660f1f840000.  nop word [rax + rax]
0x000043f0      4183fa2f       cmp r10d, 0x2f
0x000043f4      7756           ja 0x444c
0x000043f6      4489d0         mov eax, r10d
0x000043f9      41bb01000000   mov r11d, 1
0x000043ff      4183c208       add r10d, 8
0x00004403      4801e8         add rax, rbp
0x00004406      488b00         mov rax, qword [rax]
0x00004409      4885c0         test rax, rax
0x0000440c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004410      740a           je 0x441c
0x00004412      4983c101       add r9, 1
0x00004416      4983f90a       cmp r9, 0xa
0x0000441a      75d4           jne 0x43f0
0x0000441c      4584db         test r11b, r11b
0x0000441f      7524           jne 0x4445
0x00004421      e89afaffff     call sym.version_etc_arn
0x00004426      488b442478     mov rax, qword [rsp + 0x78]
0x0000442b      644833042528.  xor rax, qword fs:[0x28]
0x00004434      750a           jne 0x4440
0x00004436      4881c4b80000.  add rsp, 0xb8
0x0000443d      5b             pop rbx
0x0000443e      5d             pop rbp
0x0000443f      c3             ret
0x00004440      e87bd0ffff     call sym.imp.__stack_chk_fail
0x00004445      4489542408     mov dword [rsp + 8], r10d
0x0000444a      ebd5           jmp 0x4421
0x0000444c      4889d8         mov rax, rbx
0x0000444f      4883c308       add rbx, 8
0x00004453      ebb1           jmp 0x4406
0x00004455      90             nop
0x00004456      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004460      53             push rbx
0x00004461      488d35fa1000.  lea rsi, str.Report_bugs_to:__s         ; 0x5562 ; "\nReport bugs to: %s\n"
0x00004468      ba05000000     mov edx, 5
0x0000446d      31ff           xor edi, edi
0x0000446f      e81cd0ffff     call sym.imp.dcgettext
0x00004474      488d15fc1000.  lea rdx, str.bug_coreutils_gnu.org      ; 0x5577 ; "bug-coreutils@gnu.org"
0x0000447b      4889c6         mov rsi, rax
0x0000447e      bf01000000     mov edi, 1
0x00004483      31c0           xor eax, eax
0x00004485      e886d1ffff     call sym.imp.__printf_chk
0x0000448a      488d35fc1000.  lea rsi, str.s_home_page:___s           ; 0x558d ; "%s home page: <%s>\n"
0x00004491      ba05000000     mov edx, 5
0x00004496      31ff           xor edi, edi
0x00004498      e8f3cfffff     call sym.imp.dcgettext
0x0000449d      488d0d740a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x4f18 ; "https://www.gnu.org/software/coreutils/"
0x000044a4      488d15ef0800.  lea rdx, str.GNU_coreutils              ; 0x4d9a ; "GNU coreutils"
0x000044ab      4889c6         mov rsi, rax
0x000044ae      bf01000000     mov edi, 1
0x000044b3      31c0           xor eax, eax
0x000044b5      e856d1ffff     call sym.imp.__printf_chk
0x000044ba      488b1dc72b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x207088:8]=0
0x000044c1      488d35f81200.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x57c0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000044c8      31ff           xor edi, edi
0x000044ca      ba05000000     mov edx, 5
0x000044cf      e8bccfffff     call sym.imp.dcgettext
0x000044d4      4889de         mov rsi, rbx
0x000044d7      4889c7         mov rdi, rax
0x000044da      5b             pop rbx
0x000044db      e960d0ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000044e0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000044e1      4889fb         mov rbx, rdi
0x000044e4      e8c7d0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000044e9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000044ec      7505           jne 0x44f3
0x000044ee      4885db         test rbx, rbx
0x000044f1      7502           jne 0x44f5
0x000044f3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000044f4      c3             ret
0x000044f5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000044fa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004500      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004503      48f7e6         mul rsi
0x00004506      4889c7         mov rdi, rax
0x00004509      0f90c0         seto al
0x0000450c      4885ff         test rdi, rdi
0x0000450f      780a           js 0x451b
0x00004511      0fb6c0         movzx eax, al
0x00004514      4885c0         test rax, rax
0x00004517      7502           jne 0x451b
0x00004519      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000451b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000451f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004524      6690           nop
0x00004526      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004530      ebae           jmp sym.xmalloc
0x00004532      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004536      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004540      4885f6         test rsi, rsi
0x00004543      53             push rbx
0x00004544      4889f3         mov rbx, rsi
0x00004547      7505           jne 0x454e
0x00004549      4885ff         test rdi, rdi
0x0000454c      751a           jne 0x4568
0x0000454e      4889de         mov rsi, rbx
0x00004551      e89ad0ffff     call sym.imp.realloc
0x00004556      4885c0         test rax, rax
0x00004559      7505           jne 0x4560
0x0000455b      4885db         test rbx, rbx
0x0000455e      7511           jne 0x4571                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004560      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004561      c3             ret
0x00004562      660f1f440000   nop word [rax + rax]
0x00004568      e863ceffff     call sym.imp.free
0x0000456d      31c0           xor eax, eax
0x0000456f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004570      c3             ret
0x00004571      e8ba010000     call sym.xalloc_die
0x00004576      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004580      4889f0         mov rax, rsi
0x00004583      48f7e2         mul rdx
0x00004586      4889c6         mov rsi, rax
0x00004589      0f90c0         seto al
0x0000458c      4885f6         test rsi, rsi
0x0000458f      780a           js 0x459b
0x00004591      0fb6c0         movzx eax, al
0x00004594      4885c0         test rax, rax
0x00004597      7502           jne 0x459b
0x00004599      eba5           jmp sym.xrealloc
0x0000459b      4883ec08       sub rsp, 8
0x0000459f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000045a4      6690           nop
0x000045a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000045b0      4885ff         test rdi, rdi
0x000045b3      4989d1         mov r9, rdx
0x000045b6      488b0e         mov rcx, qword [rsi]
0x000045b9      7435           je 0x45f0
0x000045bb      31d2           xor edx, edx
0x000045bd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000045c7      49f7f1         div r9
0x000045ca      4839c8         cmp rax, rcx
0x000045cd      763c           jbe 0x460b
0x000045cf      4889c8         mov rax, rcx
0x000045d2      48d1e8         shr rax, 1
0x000045d5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000045da      48890e         mov qword [rsi], rcx
0x000045dd      490fafc9       imul rcx, r9
0x000045e1      4889ce         mov rsi, rcx
0x000045e4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000045e9      0f1f80000000.  nop dword [rax]
0x000045f0      4885c9         test rcx, rcx
0x000045f3      7423           je 0x4618
0x000045f5      4889c8         mov rax, rcx
0x000045f8      49f7e1         mul r9
0x000045fb      0f90c2         seto dl
0x000045fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004601      0fb6d2         movzx edx, dl
0x00004604      7805           js 0x460b
0x00004606      4885d2         test rdx, rdx
0x00004609      74cf           je 0x45da
0x0000460b      4883ec08       sub rsp, 8
0x0000460f      e81c010000     call sym.xalloc_die
0x00004614      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004618      31d2           xor edx, edx
0x0000461a      b880000000     mov eax, 0x80
0x0000461f      4531c0         xor r8d, r8d
0x00004622      49f7f1         div r9
0x00004625      4885c0         test rax, rax
0x00004628      410f94c0       sete r8b
0x0000462c      498d0c00       lea rcx, [r8 + rax]
0x00004630      ebc3           jmp 0x45f5
0x00004632      0f1f4000       nop dword [rax]
0x00004636      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004640      4885ff         test rdi, rdi
0x00004643      488b06         mov rax, qword [rsi]
0x00004646      7428           je 0x4670
0x00004648      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004652      4839d0         cmp rax, rdx
0x00004655      772a           ja 0x4681
0x00004657      4889c2         mov rdx, rax
0x0000465a      48d1ea         shr rdx, 1
0x0000465d      488d440201     lea rax, [rdx + rax + 1]
0x00004662      488906         mov qword [rsi], rax
0x00004665      4889c6         mov rsi, rax
0x00004668      e9d3feffff     jmp sym.xrealloc
0x0000466d      0f1f00         nop dword [rax]
0x00004670      4885c0         test rax, rax
0x00004673      ba80000000     mov edx, 0x80
0x00004678      480f44c2       cmove rax, rdx
0x0000467c      4885c0         test rax, rax
0x0000467f      79e1           jns 0x4662
0x00004681      4883ec08       sub rsp, 8
0x00004685      e8a6000000     call sym.xalloc_die
0x0000468a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004690      53             push rbx
0x00004691      4889fb         mov rbx, rdi
0x00004694      e847feffff     call sym.xmalloc
0x00004699      4889da         mov rdx, rbx
0x0000469c      31f6           xor esi, esi
0x0000469e      4889c7         mov rdi, rax
0x000046a1      5b             pop rbx
0x000046a2      e979ceffff     jmp sym.imp.memset
0x000046a7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000046b0      4889f8         mov rax, rdi
0x000046b3      4883ec08       sub rsp, 8
0x000046b7      48f7e6         mul rsi
0x000046ba      0f90c2         seto dl
0x000046bd      4885c0         test rax, rax
0x000046c0      7817           js 0x46d9
0x000046c2      0fb6d2         movzx edx, dl
0x000046c5      4885d2         test rdx, rdx
0x000046c8      750f           jne 0x46d9
0x000046ca      e881ceffff     call sym.imp.calloc
0x000046cf      4885c0         test rax, rax
0x000046d2      7405           je 0x46d9
0x000046d4      4883c408       add rsp, 8
0x000046d8      c3             ret
0x000046d9      e852000000     call sym.xalloc_die
0x000046de      6690           nop
;-- xmemdup:
0x000046e0      55             push rbp
0x000046e1      53             push rbx
0x000046e2      4889fd         mov rbp, rdi
0x000046e5      4889f7         mov rdi, rsi
0x000046e8      4889f3         mov rbx, rsi
0x000046eb      4883ec08       sub rsp, 8
0x000046ef      e8ecfdffff     call sym.xmalloc
0x000046f4      4883c408       add rsp, 8
0x000046f8      4889da         mov rdx, rbx
0x000046fb      4889ee         mov rsi, rbp
0x000046fe      5b             pop rbx
0x000046ff      5d             pop rbp
0x00004700      4889c7         mov rdi, rax
0x00004703      e978ceffff     jmp sym.imp.memcpy
0x00004708      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004710      53             push rbx
0x00004711      4889fb         mov rbx, rdi
0x00004714      e897cdffff     call sym.imp.strlen
0x00004719      4889df         mov rdi, rbx
0x0000471c      488d7001       lea rsi, [rax + 1]
0x00004720      5b             pop rbx
0x00004721      ebbd           jmp sym.xmemdup
0x00004723      662e0f1f8400.  nop word cs:[rax + rax]
0x0000472d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004730      488d35381100.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x586f ; "memory exhausted"
0x00004737      4883ec08       sub rsp, 8
0x0000473b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004740      31ff           xor edi, edi
0x00004742      e849cdffff     call sym.imp.dcgettext
0x00004747      8b3dcb282000   mov edi, dword [obj.exit_failure]       ; [0x207018:4]=1
0x0000474d      488d157c0800.  lea rdx, [0x00004fd0]                   ; "%s"
0x00004754      4889c1         mov rcx, rax
0x00004757      31f6           xor esi, esi
0x00004759      31c0           xor eax, eax
0x0000475b      e8d0ceffff     call sym.imp.error
0x00004760      e87bccffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004765      662e0f1f8400.  nop word cs:[rax + rax]
0x0000476f      90             nop
;-- rpl_mbrtowc:
0x00004770      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00004772      4154           push r12
0x00004774      4989f5         mov r13, rsi
0x00004777      55             push rbp
0x00004778      53             push rbx
0x00004779      4889fb         mov rbx, rdi
0x0000477c      4989d4         mov r12, rdx
0x0000477f      4883ec18       sub rsp, 0x18
0x00004783      64488b042528.  mov rax, qword fs:[0x28]
0x0000478c      4889442408     mov qword [rsp + 8], rax
0x00004791      31c0           xor eax, eax
0x00004793      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00004798      4885ff         test rdi, rdi
0x0000479b      480f44d8       cmove rbx, rax
0x0000479f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000047a2      e839cdffff     call sym.imp.mbrtowc
0x000047a7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000047ab      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000047ae      7620           jbe 0x47d0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000047b0      4d85e4         test r12, r12
0x000047b3      741b           je 0x47d0
0x000047b5      31ff           xor edi, edi
0x000047b7      e8b4020000     call sym.hard_locale
0x000047bc      84c0           test al, al
0x000047be      7510           jne 0x47d0
0x000047c0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000047c5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000047ca      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000047cc      0f1f4000       nop dword [rax]
0x000047d0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000047d5      644833142528.  xor rdx, qword fs:[0x28]
0x000047de      4889e8         mov rax, rbp
0x000047e1      750b           jne 0x47ee
0x000047e3      4883c418       add rsp, 0x18
0x000047e7      5b             pop rbx
0x000047e8      5d             pop rbp
0x000047e9      415c           pop r12
0x000047eb      415d           pop r13
0x000047ed      c3             ret
0x000047ee      e8cdccffff     call sym.imp.__stack_chk_fail
0x000047f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000047fd      0f1f00         nop dword [rax]
;-- extract_trimmed_name:
0x00004800      55             push rbp                                ; ../coreutils-8.31/lib/readutmp.c:50
0x00004801      53             push rbx
0x00004802      4889fd         mov rbp, rdi
0x00004805      bf21000000     mov edi, 0x21                           ; ../coreutils-8.31/lib/readutmp.c:53 ; '!'
0x0000480a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:50
0x0000480e      e8cdfcffff     call sym.xmalloc                        ; ../coreutils-8.31/lib/readutmp.c:53
0x00004813      488d752c       lea rsi, [rbp + 0x2c]                   ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
0x00004817      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:53
0x0000481a      ba20000000     mov edx, 0x20                           ; string_fortified.h:106   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest)); ; "@"
0x0000481f      4889c7         mov rdi, rax
0x00004822      e8d9cbffff     call sym.imp.strncpy
0x00004827      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readutmp.c:59
0x0000482a      c6432000       mov byte [rbx + 0x20], 0                ; ../coreutils-8.31/lib/readutmp.c:58
0x0000482e      e87dccffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/readutmp.c:59
0x00004833      4801d8         add rax, rbx
0x00004836      4839c3         cmp rbx, rax
0x00004839      7306           jae 0x4841
0x0000483b      8078ff20       cmp byte [rax - 1], 0x20                ; ../coreutils-8.31/lib/readutmp.c:60
0x0000483f      740f           je 0x4850
0x00004841      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/readutmp.c:64
0x00004845      4889d8         mov rax, rbx
0x00004848      5b             pop rbx
0x00004849      5d             pop rbp
0x0000484a      c3             ret
0x0000484b      0f1f440000     nop dword [rax + rax]
0x00004850      4883e801       sub rax, 1                              ; ../coreutils-8.31/lib/readutmp.c:61
0x00004854      c60000         mov byte [rax], 0
0x00004857      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/readutmp.c:59
0x0000485a      75df           jne 0x483b
0x0000485c      ebe3           jmp 0x4841
0x0000485e      6690           nop
;-- read_utmp:
0x00004860      4157           push r15                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00004862      4156           push r14
0x00004864      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/readutmp.c:97
0x00004867      4155           push r13                                ; ../coreutils-8.31/lib/readutmp.c:94
0x00004869      4189cd         mov r13d, ecx
0x0000486c      4154           push r12
0x0000486e      55             push rbp
0x0000486f      53             push rbx
0x00004870      4589ec         mov r12d, r13d                          ; ../coreutils-8.31/lib/readutmp.c:72
0x00004873      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/readutmp.c:108
0x00004875      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/readutmp.c:96
0x00004877      4183e402       and r12d, 2                             ; ../coreutils-8.31/lib/readutmp.c:72
0x0000487b      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:94
0x0000487f      4183e501       and r13d, 1                             ; ../coreutils-8.31/lib/readutmp.c:74
0x00004883      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/readutmp.c:94
0x00004887      4889542408     mov qword [rsp + 8], rdx
0x0000488c      e82fcbffff     call sym.imp.utmpxname                  ; ../coreutils-8.31/lib/readutmp.c:104
0x00004891      e8daccffff     call sym.imp.setutxent                  ; ../coreutils-8.31/lib/readutmp.c:106
0x00004896      e885cdffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x0000489b      4885c0         test rax, rax
0x0000489e      4989c7         mov r15, rax
0x000048a1      746e           je 0x4911
0x000048a3      6641833f07     cmp word [r15], 7                       ; ../coreutils-8.31/lib/readutmp.c:71
0x000048a8      750b           jne 0x48b5
0x000048aa      41807f2c00     cmp byte [r15 + 0x2c], 0
0x000048af      0f858b000000   jne 0x4940
0x000048b5      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/readutmp.c:72
0x000048b8      75dc           jne 0x4896
0x000048ba      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x000048bd      0f84bd000000   je 0x4980
0x000048c3      488d045b       lea rax, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/readutmp.c:114
0x000048c7      498b17         mov rdx, qword [r15]
0x000048ca      4c89fe         mov rsi, r15
0x000048cd      4883c301       add rbx, 1
0x000048d1      48c1e007       shl rax, 7
0x000048d5      4c01f0         add rax, r14
0x000048d8      488910         mov qword [rax], rdx
0x000048db      488d7808       lea rdi, [rax + 8]
0x000048df      498b97780100.  mov rdx, qword [r15 + 0x178]
0x000048e6      4883e7f8       and rdi, 0xfffffffffffffff8
0x000048ea      488990780100.  mov qword [rax + 0x178], rdx
0x000048f1      4829f8         sub rax, rdi
0x000048f4      4829c6         sub rsi, rax
0x000048f7      0580010000     add eax, 0x180
0x000048fc      c1e803         shr eax, 3
0x000048ff      89c1           mov ecx, eax
0x00004901      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00004904      e817cdffff     call sym.imp.getutxent                  ; ../coreutils-8.31/lib/readutmp.c:108
0x00004909      4885c0         test rax, rax
0x0000490c      4989c7         mov r15, rax
0x0000490f      7592           jne 0x48a3
0x00004911      e84acbffff     call sym.imp.endutxent                  ; ../coreutils-8.31/lib/readutmp.c:117
0x00004916      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/readutmp.c:119
0x0000491a      488918         mov qword [rax], rbx
0x0000491d      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/readutmp.c:120
0x00004922      4c8930         mov qword [rax], r14
0x00004925      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/readutmp.c:123
0x00004929      31c0           xor eax, eax
0x0000492b      5b             pop rbx
0x0000492c      5d             pop rbp
0x0000492d      415c           pop r12
0x0000492f      415d           pop r13
0x00004931      415e           pop r14
0x00004933      415f           pop r15
0x00004935      c3             ret
0x00004936      662e0f1f8400.  nop word cs:[rax + rax]
0x00004940      418b7f04       mov edi, dword [r15 + 4]                ; ../coreutils-8.31/lib/readutmp.c:109
0x00004944      85ff           test edi, edi                           ; ../coreutils-8.31/lib/readutmp.c:76
0x00004946      0f8e6effffff   jle 0x48ba
0x0000494c      4584ed         test r13b, r13b
0x0000494f      0f8465ffffff   je 0x48ba
0x00004955      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/readutmp.c:77
0x00004957      e834ccffff     call sym.imp.kill
0x0000495c      85c0           test eax, eax
0x0000495e      0f8956ffffff   jns 0x48ba
0x00004964      e887caffff     call sym.imp.__errno_location
0x00004969      833803         cmp dword [rax], 3
0x0000496c      0f8424ffffff   je 0x4896
0x00004972      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/readutmp.c:111
0x00004975      0f8548ffffff   jne 0x48c3
0x0000497b      0f1f440000     nop dword [rax + rax]
0x00004980      4d85f6         test r14, r14
0x00004983      7433           je 0x49b8
0x00004985      48b8378ee338.  movabs rax, 0x38e38e38e38e37
0x0000498f      4839c5         cmp rbp, rax
0x00004992      7749           ja 0x49dd
0x00004994      4889e8         mov rax, rbp
0x00004997      48d1e8         shr rax, 1
0x0000499a      488d6c0501     lea rbp, [rbp + rax + 1]
0x0000499f      488d746d00     lea rsi, [rbp + rbp*2]
0x000049a4      4c89f7         mov rdi, r14
0x000049a7      48c1e607       shl rsi, 7
0x000049ab      e890fbffff     call sym.xrealloc
0x000049b0      4989c6         mov r14, rax
0x000049b3      e90bffffff     jmp 0x48c3
0x000049b8      4885ed         test rbp, rbp
0x000049bb      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/xalloc.h:41
0x000049c0      ba80010000     mov edx, 0x180
0x000049c5      480f44e8       cmove rbp, rax
0x000049c9      4889d0         mov rax, rdx
0x000049cc      31f6           xor esi, esi
0x000049ce      48f7e5         mul rbp
0x000049d1      700f           jo 0x49e2
0x000049d3      4885c0         test rax, rax
0x000049d6      7805           js 0x49dd
0x000049d8      4885f6         test rsi, rsi
0x000049db      74c2           je 0x499f
0x000049dd      e84efdffff     call sym.xalloc_die
0x000049e2      be01000000     mov esi, 1
0x000049e7      ebea           jmp 0x49d3
0x000049e9      0f1f80000000.  nop dword [rax]
;-- close_stream:
0x000049f0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000049f2      55             push rbp
0x000049f3      4889fd         mov rbp, rdi
0x000049f6      53             push rbx
0x000049f7      e834caffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000049fc      8b5d00         mov ebx, dword [rbp]
0x000049ff      4889ef         mov rdi, rbp
0x00004a02      4989c4         mov r12, rax
0x00004a05      e806010000     call sym.rpl_fclose
0x00004a0a      83e320         and ebx, 0x20                           ; "@"
0x00004a0d      85db           test ebx, ebx
0x00004a0f      7517           jne 0x4a28
0x00004a11      85c0           test eax, eax
0x00004a13      740a           je 0x4a1f                               ; stdio.h:-186
0x00004a15      4d85e4         test r12, r12                           ; stdio.h:-178
0x00004a18      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a1d      7439           je 0x4a58
0x00004a1f      5b             pop rbx
0x00004a20      5d             pop rbp
0x00004a21      415c           pop r12
0x00004a23      c3             ret
0x00004a24      0f1f4000       nop dword [rax]
0x00004a28      85c0           test eax, eax
0x00004a2a      751c           jne 0x4a48
0x00004a2c      e8bfc9ffff     call sym.imp.__errno_location
0x00004a31      c70000000000   mov dword [rax], 0
0x00004a37      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a3c      5b             pop rbx
0x00004a3d      5d             pop rbp
0x00004a3e      415c           pop r12
0x00004a40      c3             ret
0x00004a41      0f1f80000000.  nop dword [rax]
0x00004a48      5b             pop rbx
0x00004a49      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00004a4e      5d             pop rbp                                 ; stdio.h:-186
0x00004a4f      415c           pop r12
0x00004a51      c3             ret
0x00004a52      660f1f440000   nop word [rax + rax]
0x00004a58      e893c9ffff     call sym.imp.__errno_location
0x00004a5d      833809         cmp dword [rax], 9
0x00004a60      5b             pop rbx
0x00004a61      5d             pop rbp
0x00004a62      415c           pop r12                                 ; stdio.h:-178
0x00004a64      0f95c0         setne al
0x00004a67      0fb6c0         movzx eax, al
0x00004a6a      f7d8           neg eax
0x00004a6c      c3             ret
0x00004a6d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00004a70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00004a74      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00004a76      e885cbffff     call sym.imp.setlocale
0x00004a7b      4889c2         mov rdx, rax
0x00004a7e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00004a83      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00004a86      741d           je 0x4aa5
0x00004a88      488d3df10d00.  lea rdi, [0x00005880]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00004a8f      b902000000     mov ecx, 2
0x00004a94      4889d6         mov rsi, rdx
0x00004a97      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004a99      0f97c1         seta cl
0x00004a9c      80d900         sbb cl, 0
0x00004a9f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00004aa1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00004aa3      750b           jne 0x4ab0
0x00004aa5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004aa9      c3             ret
0x00004aaa      660f1f440000   nop word [rax + rax]
0x00004ab0      488d3dcb0d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x5882 ; "POSIX"
0x00004ab7      b906000000     mov ecx, 6
0x00004abc      4889d6         mov rsi, rdx
0x00004abf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004ac1      0f97c0         seta al
0x00004ac4      1c00           sbb al, 0
0x00004ac6      84c0           test al, al
0x00004ac8      0f95c0         setne al
0x00004acb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00004acf      c3             ret
;-- locale_charset:
0x00004ad0      4883ec08       sub rsp, 8
0x00004ad4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00004ad9      e8f2caffff     call sym.imp.nl_langinfo
0x00004ade      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00004ae1      741d           je 0x4b00
0x00004ae3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00004ae6      488d159b0d00.  lea rdx, str.ASCII                      ; 0x5888 ; "ASCII"
0x00004aed      480f44c2       cmove rax, rdx
0x00004af1      4883c408       add rsp, 8
0x00004af5      c3             ret
0x00004af6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b00      488d05810d00.  lea rax, str.ASCII                      ; 0x5888 ; "ASCII"
0x00004b07      4883c408       add rsp, 8
0x00004b0b      c3             ret
0x00004b0c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00004b10      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004b12      55             push rbp
0x00004b13      53             push rbx
0x00004b14      4889fb         mov rbx, rdi
0x00004b17      e884caffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004b1c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004b1e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004b21      7854           js 0x4b77                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004b23      e8b8caffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004b28      85c0           test eax, eax
0x00004b2a      752c           jne 0x4b58
0x00004b2c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004b2f      e85c000000     call sym.rpl_fflush
0x00004b34      85c0           test eax, eax
0x00004b36      743c           je 0x4b74
0x00004b38      e8b3c8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004b3d      448b20         mov r12d, dword [rax]
0x00004b40      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004b43      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004b46      e825c9ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004b4b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004b4e      7530           jne 0x4b80
0x00004b50      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004b51      5d             pop rbp
0x00004b52      415c           pop r12
0x00004b54      c3             ret
0x00004b55      0f1f00         nop dword [rax]
0x00004b58      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004b5b      e840caffff     call sym.imp.fileno
0x00004b60      31f6           xor esi, esi
0x00004b62      ba01000000     mov edx, 1
0x00004b67      89c7           mov edi, eax
0x00004b69      e8a2c9ffff     call sym.imp.lseek
0x00004b6e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004b72      75b8           jne 0x4b2c
0x00004b74      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004b77      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004b78      5d             pop rbp
0x00004b79      415c           pop r12
0x00004b7b      e9f0c8ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004b80      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004b84      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004b89      ebc5           jmp 0x4b50
0x00004b8b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00004b90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00004b93      53             push rbx
0x00004b94      4889fb         mov rbx, rdi
0x00004b97      7411           je 0x4baa                               ; ../coreutils-8.31/lib/fflush.c:150
0x00004b99      e842caffff     call sym.imp.__freading
0x00004b9e      85c0           test eax, eax
0x00004ba0      7408           je 0x4baa
0x00004ba2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00004ba8      750e           jne 0x4bb8
0x00004baa      4889df         mov rdi, rbx
0x00004bad      5b             pop rbx
0x00004bae      e90dcaffff     jmp sym.imp.fflush
0x00004bb3      0f1f440000     nop dword [rax + rax]
0x00004bb8      4889df         mov rdi, rbx
0x00004bbb      ba01000000     mov edx, 1
0x00004bc0      31f6           xor esi, esi
0x00004bc2      e809000000     call sym.rpl_fseeko
0x00004bc7      4889df         mov rdi, rbx
0x00004bca      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00004bcb      e9f0c9ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00004bd0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00004bd4      48394710       cmp qword [rdi + 0x10], rax
0x00004bd8      7406           je 0x4be0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00004bda      e961caffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00004bdf      90             nop
0x00004be0      488b4720       mov rax, qword [rdi + 0x20]
0x00004be4      48394728       cmp qword [rdi + 0x28], rax
0x00004be8      75f0           jne 0x4bda                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00004bea      48837f4800     cmp qword [rdi + 0x48], 0
0x00004bef      75e9           jne 0x4bda                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00004bf1      4154           push r12
0x00004bf3      55             push rbp
0x00004bf4      4189d4         mov r12d, edx
0x00004bf7      53             push rbx
0x00004bf8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00004bfb      4889fb         mov rbx, rdi
0x00004bfe      e89dc9ffff     call sym.imp.fileno
0x00004c03      4489e2         mov edx, r12d
0x00004c06      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00004c09      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00004c0b      e800c9ffff     call sym.imp.lseek
0x00004c10      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004c14      740c           je 0x4c22
0x00004c16      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00004c19      488983900000.  mov qword [rbx + 0x90], rax
0x00004c20      31c0           xor eax, eax
0x00004c22      5b             pop rbx                                 ; /sys_errlist.h:19
0x00004c23      5d             pop rbp
0x00004c24      415c           pop r12
0x00004c26      c3             ret
0x00004c27      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00004c30      4157           push r15
0x00004c32      4156           push r14
0x00004c34      4989d7         mov r15, rdx
0x00004c37      4155           push r13
0x00004c39      4154           push r12
0x00004c3b      4c8d252e1f20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x206b70
0x00004c42      55             push rbp
0x00004c43      488d2d2e1f20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x206b78
0x00004c4a      53             push rbx
0x00004c4b      4189fd         mov r13d, edi
0x00004c4e      4989f6         mov r14, rsi
0x00004c51      4c29e5         sub rbp, r12
0x00004c54      4883ec08       sub rsp, 8
0x00004c58      48c1fd03       sar rbp, 3
0x00004c5c      e82fc7ffff     call sym._init
0x00004c61      4885ed         test rbp, rbp
0x00004c64      7420           je 0x4c86
0x00004c66      31db           xor ebx, ebx
0x00004c68      0f1f84000000.  nop dword [rax + rax]
0x00004c70      4c89fa         mov rdx, r15
0x00004c73      4c89f6         mov rsi, r14
0x00004c76      4489ef         mov edi, r13d
0x00004c79      41ff14dc       call qword [r12 + rbx*8]
0x00004c7d      4883c301       add rbx, 1
0x00004c81      4839dd         cmp rbp, rbx
0x00004c84      75ea           jne 0x4c70
0x00004c86      4883c408       add rsp, 8
0x00004c8a      5b             pop rbx
0x00004c8b      5d             pop rbp
0x00004c8c      415c           pop r12
0x00004c8e      415d           pop r13
0x00004c90      415e           pop r14
0x00004c92      415f           pop r15
0x00004c94      c3             ret
0x00004c95      90             nop
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00004ca0      f3c3           ret
0x00004ca2      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cac      0f1f4000       nop dword [rax]
;-- atexit:
0x00004cb0      488b15512320.  mov rdx, qword [obj.__dso_handle]       ; [0x207008:8]=0x207008 obj.__dso_handle
0x00004cb7      31f6           xor esi, esi
0x00004cb9      e992c9ffff     jmp sym.imp.__cxa_atexit
0x00004cbe      0000           add byte [rax], al
