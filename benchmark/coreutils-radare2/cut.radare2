;-- section..plt:
;-- .plt:
0x00001660      ff35aa772000   push qword [0x00208e10]                 ; [12] -r-x section size 896 named .plt
0x00001666      ff25ac772000   jmp qword [0x00208e18]                  ; [0x208e18:8]=0
0x0000166c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001670      ff25aa772000   jmp qword [reloc.__uflow]               ; [0x208e20:8]=0x1676 ; "v\x16"
0x00001676      6800000000     push 0
0x0000167b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001680      ff25a2772000   jmp qword [reloc.free]                  ; [0x208e28:8]=0x1686
0x00001686      6801000000     push 1
0x0000168b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001690      ff259a772000   jmp qword [reloc.abort]                 ; [0x208e30:8]=0x1696
0x00001696      6802000000     push 2
0x0000169b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000016a0      ff2592772000   jmp qword [reloc.__errno_location]      ; [0x208e38:8]=0x16a6
0x000016a6      6803000000     push 3
0x000016ab      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000016b0      ff258a772000   jmp qword [reloc.strncmp]               ; [0x208e40:8]=0x16b6
0x000016b6      6804000000     push 4
0x000016bb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000016c0      ff2582772000   jmp qword [reloc._exit]                 ; [0x208e48:8]=0x16c6
0x000016c6      6805000000     push 5
0x000016cb      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000016d0      ff257a772000   jmp qword [reloc.__fpending]            ; [0x208e50:8]=0x16d6
0x000016d6      6806000000     push 6
0x000016db      e980ffffff     jmp sym..plt
;-- imp.ferror:
0x000016e0      ff2572772000   jmp qword [reloc.ferror]                ; [0x208e58:8]=0x16e6
0x000016e6      6807000000     push 7
0x000016eb      e970ffffff     jmp sym..plt
;-- imp.qsort:
0x000016f0      ff256a772000   jmp qword [reloc.qsort]                 ; [0x208e60:8]=0x16f6
0x000016f6      6808000000     push 8
0x000016fb      e960ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001700      ff2562772000   jmp qword [reloc.clearerr_unlocked]     ; [0x208e68:8]=0x1706
0x00001706      6809000000     push 9
0x0000170b      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001710      ff255a772000   jmp qword [reloc.textdomain]            ; [0x208e70:8]=0x1716
0x00001716      680a000000     push 0xa
0x0000171b      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001720      ff2552772000   jmp qword [reloc.fclose]                ; [0x208e78:8]=0x1726 ; "&\x17"
0x00001726      680b000000     push 0xb
0x0000172b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001730      ff254a772000   jmp qword [reloc.bindtextdomain]        ; [0x208e80:8]=0x1736 ; "6\x17"
0x00001736      680c000000     push 0xc
0x0000173b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001740      ff2542772000   jmp qword [reloc.dcgettext]             ; [0x208e88:8]=0x1746 ; "F\x17"
0x00001746      680d000000     push 0xd
0x0000174b      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001750      ff253a772000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e90:8]=0x1756 ; "V\x17"
0x00001756      680e000000     push 0xe
0x0000175b      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x00001760      ff2532772000   jmp qword [reloc.strlen]                ; [0x208e98:8]=0x1766 ; "f\x17"
0x00001766      680f000000     push 0xf
0x0000176b      e9f0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001770      ff252a772000   jmp qword [reloc.__stack_chk_fail]      ; [0x208ea0:8]=0x1776 ; "v\x17"
0x00001776      6810000000     push 0x10
0x0000177b      e9e0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001780      ff2522772000   jmp qword [reloc.getopt_long]           ; [0x208ea8:8]=0x1786
0x00001786      6811000000     push 0x11
0x0000178b      e9d0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001790      ff251a772000   jmp qword [reloc.mbrtowc]               ; [0x208eb0:8]=0x1796
0x00001796      6812000000     push 0x12
0x0000179b      e9c0feffff     jmp sym..plt
;-- imp.__overflow:
0x000017a0      ff2512772000   jmp qword [reloc.__overflow]            ; [0x208eb8:8]=0x17a6
0x000017a6      6813000000     push 0x13
0x000017ab      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x000017b0      ff250a772000   jmp qword [reloc.strrchr]               ; [0x208ec0:8]=0x17b6
0x000017b6      6814000000     push 0x14
0x000017bb      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x000017c0      ff2502772000   jmp qword [reloc.lseek]                 ; [0x208ec8:8]=0x17c6
0x000017c6      6815000000     push 0x15
0x000017cb      e990feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000017d0      ff25fa762000   jmp qword [reloc.__assert_fail]         ; [0x208ed0:8]=0x17d6
0x000017d6      6816000000     push 0x16
0x000017db      e980feffff     jmp sym..plt
;-- imp.memset:
0x000017e0      ff25f2762000   jmp qword [reloc.memset]                ; [0x208ed8:8]=0x17e6
0x000017e6      6817000000     push 0x17
0x000017eb      e970feffff     jmp sym..plt
;-- imp.fgetc:
0x000017f0      ff25ea762000   jmp qword [reloc.fgetc]                 ; [0x208ee0:8]=0x17f6
0x000017f6      6818000000     push 0x18
0x000017fb      e960feffff     jmp sym..plt
;-- imp.strspn:
0x00001800      ff25e2762000   jmp qword [reloc.strspn]                ; [0x208ee8:8]=0x1806
0x00001806      6819000000     push 0x19
0x0000180b      e950feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001810      ff25da762000   jmp qword [reloc.posix_fadvise]         ; [0x208ef0:8]=0x1816
0x00001816      681a000000     push 0x1a
0x0000181b      e940feffff     jmp sym..plt
;-- imp.memchr:
0x00001820      ff25d2762000   jmp qword [reloc.memchr]                ; [0x208ef8:8]=0x1826 ; "&\x18"
0x00001826      681b000000     push 0x1b
0x0000182b      e930feffff     jmp sym..plt
;-- imp.strndup:
0x00001830      ff25ca762000   jmp qword [reloc.strndup]               ; [0x208f00:8]=0x1836 ; "6\x18"
0x00001836      681c000000     push 0x1c
0x0000183b      e920feffff     jmp sym..plt
;-- imp.memcmp:
0x00001840      ff25c2762000   jmp qword [reloc.memcmp]                ; [0x208f08:8]=0x1846 ; "F\x18"
0x00001846      681d000000     push 0x1d
0x0000184b      e910feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001850      ff25ba762000   jmp qword [reloc.fputs_unlocked]        ; [0x208f10:8]=0x1856 ; "V\x18"
0x00001856      681e000000     push 0x1e
0x0000185b      e900feffff     jmp sym..plt
;-- imp.calloc:
0x00001860      ff25b2762000   jmp qword [reloc.calloc]                ; [0x208f18:8]=0x1866 ; "f\x18"
0x00001866      681f000000     push 0x1f
0x0000186b      e9f0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001870      ff25aa762000   jmp qword [reloc.memcpy]                ; [0x208f20:8]=0x1876 ; "v\x18"
0x00001876      6820000000     push 0x20                               ; "@"
0x0000187b      e9e0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001880      ff25a2762000   jmp qword [reloc.fileno]                ; [0x208f28:8]=0x1886
0x00001886      6821000000     push 0x21                               ; '!'
0x0000188b      e9d0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001890      ff259a762000   jmp qword [reloc.malloc]                ; [0x208f30:8]=0x1896
0x00001896      6822000000     push 0x22                               ; '"'
0x0000189b      e9c0fdffff     jmp sym..plt
;-- imp.fflush:
0x000018a0      ff2592762000   jmp qword [reloc.fflush]                ; [0x208f38:8]=0x18a6
0x000018a6      6823000000     push 0x23                               ; '#'
0x000018ab      e9b0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000018b0      ff258a762000   jmp qword [reloc.nl_langinfo]           ; [0x208f40:8]=0x18b6
0x000018b6      6824000000     push 0x24                               ; '$'
0x000018bb      e9a0fdffff     jmp sym..plt
;-- imp.ungetc:
0x000018c0      ff2582762000   jmp qword [reloc.ungetc]                ; [0x208f48:8]=0x18c6
0x000018c6      6825000000     push 0x25                               ; '%'
0x000018cb      e990fdffff     jmp sym..plt
;-- imp.__freading:
0x000018d0      ff257a762000   jmp qword [reloc.__freading]            ; [0x208f50:8]=0x18d6
0x000018d6      6826000000     push 0x26                               ; '&'
0x000018db      e980fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000018e0      ff2572762000   jmp qword [reloc.fwrite_unlocked]       ; [0x208f58:8]=0x18e6
0x000018e6      6827000000     push 0x27                               ; '''
0x000018eb      e970fdffff     jmp sym..plt
;-- imp.realloc:
0x000018f0      ff256a762000   jmp qword [reloc.realloc]               ; [0x208f60:8]=0x18f6
0x000018f6      6828000000     push 0x28                               ; '('
0x000018fb      e960fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001900      ff2562762000   jmp qword [reloc.setlocale]             ; [0x208f68:8]=0x1906
0x00001906      6829000000     push 0x29                               ; ')'
0x0000190b      e950fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001910      ff255a762000   jmp qword [reloc.__printf_chk]          ; [0x208f70:8]=0x1916
0x00001916      682a000000     push 0x2a                               ; '*'
0x0000191b      e940fdffff     jmp sym..plt
;-- imp.__fread_chk:
0x00001920      ff2552762000   jmp qword [reloc.__fread_chk]           ; [0x208f78:8]=0x1926 ; "&\x19"
0x00001926      682b000000     push 0x2b                               ; '+'
0x0000192b      e930fdffff     jmp sym..plt
;-- imp.memmove:
0x00001930      ff254a762000   jmp qword [reloc.memmove]               ; [0x208f80:8]=0x1936 ; "6\x19"
0x00001936      682c000000     push 0x2c                               ; ','
0x0000193b      e920fdffff     jmp sym..plt
;-- imp.error:
0x00001940      ff2542762000   jmp qword [reloc.error]                 ; [0x208f88:8]=0x1946 ; "F\x19"
0x00001946      682d000000     push 0x2d                               ; '-'
0x0000194b      e910fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001950      ff253a762000   jmp qword [reloc.fseeko]                ; [0x208f90:8]=0x1956 ; "V\x19"
0x00001956      682e000000     push 0x2e                               ; '.'
0x0000195b      e900fdffff     jmp sym..plt
;-- imp.fopen:
0x00001960      ff2532762000   jmp qword [reloc.fopen]                 ; [0x208f98:8]=0x1966 ; "f\x19"
0x00001966      682f000000     push 0x2f                               ; '/'
0x0000196b      e9f0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001970      ff252a762000   jmp qword [reloc.__cxa_atexit]          ; [0x208fa0:8]=0x1976 ; "v\x19"
0x00001976      6830000000     push 0x30                               ; '0'
0x0000197b      e9e0fcffff     jmp sym..plt
;-- imp.exit:
0x00001980      ff2522762000   jmp qword [reloc.exit]                  ; [0x208fa8:8]=0x1986
0x00001986      6831000000     push 0x31                               ; '1'
0x0000198b      e9d0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001990      ff251a762000   jmp qword [reloc.fwrite]                ; [0x208fb0:8]=0x1996
0x00001996      6832000000     push 0x32                               ; '2'
0x0000199b      e9c0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000019a0      ff2512762000   jmp qword [reloc.__fprintf_chk]         ; [0x208fb8:8]=0x19a6
0x000019a6      6833000000     push 0x33                               ; '3'
0x000019ab      e9b0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000019b0      ff250a762000   jmp qword [reloc.mbsinit]               ; [0x208fc0:8]=0x19b6
0x000019b6      6834000000     push 0x34                               ; '4'
0x000019bb      e9a0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000019c0      ff2502762000   jmp qword [reloc.iswprint]              ; [0x208fc8:8]=0x19c6
0x000019c6      6835000000     push 0x35                               ; '5'
0x000019cb      e990fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000019d0      ff25fa752000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fd0:8]=0x19d6
0x000019d6      6836000000     push 0x36                               ; '6'
0x000019db      e980fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000019e0      .qword 0x90660020761225ff                              ; [13] -r-x section size 8 named .plt.got
0x000019e8      0000           add byte [rax], al
0x000019ea      0000           add byte [rax], al
0x000019ec      0000           add byte [rax], al
0x000019ee      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000019f0      4157           push r15                                ; [14] -r-x section size 19054 named .text
0x000019f2      4156           push r14
0x000019f4      4531f6         xor r14d, r14d
0x000019f7      4155           push r13
0x000019f9      4154           push r12
0x000019fb      4c8d2d5e7020.  lea r13, obj.longopts                   ; 0x208a60
0x00001a02      55             push rbp
0x00001a03      53             push rbx
0x00001a04      89fd           mov ebp, edi
0x00001a06      4889f3         mov rbx, rsi
0x00001a09      4c8d25884b00.  lea r12, str.b:c:d:f:nsz                ; 0x6598 ; "b:c:d:f:nsz"
0x00001a10      4883ec08       sub rsp, 8
0x00001a14      488b3e         mov rdi, qword [rsi]
0x00001a17      e8141f0000     call sym.set_program_name
0x00001a1c      488d357e5b00.  lea rsi, [0x000075a1]
0x00001a23      bf06000000     mov edi, 6
0x00001a28      e8d3feffff     call sym.imp.setlocale
0x00001a2d      488d35204b00.  lea rsi, str.usr_local_share_locale     ; 0x6554 ; "/usr/local/share/locale"
0x00001a34      488d3df04a00.  lea rdi, [0x0000652b]                   ; "coreutils"
0x00001a3b      e8f0fcffff     call sym.imp.bindtextdomain
0x00001a40      488d3de44a00.  lea rdi, [0x0000652b]                   ; "coreutils"
0x00001a47      e8c4fcffff     call sym.imp.textdomain
0x00001a4c      488d3dad1800.  lea rdi, sym.close_stdout               ; 0x3300 ; "USH\x83\xec\bH\x8b=\x9b] "
0x00001a53      e8f8490000     call sym.atexit
0x00001a58      c705aa762000.  mov dword [obj.operating_mode], 0       ; [0x20910c:4]=0
0x00001a62      c605a2762000.  mov byte [obj.suppress_non_delimited], 0 ; [0x20910b:1]=0
0x00001a69      c60599762000.  mov byte [obj.delim], 0                 ; [0x209109:1]=0
0x00001a70      c6057b762000.  mov byte [obj.have_read_stdin], 0       ; [0x2090f2:1]=0
0x00001a77      660f1f840000.  nop word [rax + rax]
0x00001a80      4531c0         xor r8d, r8d
0x00001a83      4c89e9         mov rcx, r13
0x00001a86      4c89e2         mov rdx, r12
0x00001a89      4889de         mov rsi, rbx
0x00001a8c      89ef           mov edi, ebp
0x00001a8e      e8edfcffff     call sym.imp.getopt_long
0x00001a93      83f8ff         cmp eax, 0xffffffff
0x00001a96      0f849c010000   je 0x1c38
0x00001a9c      83f866         cmp eax, 0x66
0x00001a9f      0f84b3000000   je 0x1b58
0x00001aa5      7e29           jle 0x1ad0
0x00001aa7      83f87a         cmp eax, 0x7a
0x00001aaa      0f8430010000   je 0x1be0
0x00001ab0      7f7e           jg 0x1b30
0x00001ab2      83f86e         cmp eax, 0x6e
0x00001ab5      74c9           je 0x1a80
0x00001ab7      83f873         cmp eax, 0x73
0x00001aba      0f8577030000   jne 0x1e37
0x00001ac0      c60544762000.  mov byte [obj.suppress_non_delimited], 1 ; [0x20910b:1]=0
0x00001ac7      ebb7           jmp 0x1a80
0x00001ac9      0f1f80000000.  nop dword [rax]
0x00001ad0      83f863         cmp eax, 0x63
0x00001ad3      0f8fcf000000   jg 0x1ba8
0x00001ad9      83f862         cmp eax, 0x62
0x00001adc      0f8d9e000000   jge 0x1b80
0x00001ae2      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001ae7      0f851b030000   jne 0x1e08
0x00001aed      488d05974a00.  lea rax, str.Jim_Meyering               ; 0x658b ; "Jim Meyering"
0x00001af4      488b3dad7520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001afb      488b0d167520.  mov rcx, qword [obj.Version]            ; [0x209018:8]=0x7001 str.8.31
0x00001b02      6a00           push 0
0x00001b04      4c8d0d614a00.  lea r9, str.David_MacKenzie             ; 0x656c ; "David MacKenzie"
0x00001b0b      4c8d056a4a00.  lea r8, str.David_M._Ihnat              ; 0x657c ; "David M. Ihnat"
0x00001b12      50             push rax
0x00001b13      488d150d4a00.  lea rdx, str.GNU_coreutils              ; 0x6527 ; "GNU coreutils"
0x00001b1a      488d358c4900.  lea rsi, [0x000064ad]                   ; "cut"
0x00001b21      31c0           xor eax, eax
0x00001b23      e8f83f0000     call sym.version_etc
0x00001b28      31ff           xor edi, edi
0x00001b2a      e851feffff     call sym.imp.exit
0x00001b2f      90             nop
0x00001b30      3d80000000     cmp eax, 0x80
0x00001b35      0f84b5000000   je 0x1bf0
0x00001b3b      3d81000000     cmp eax, 0x81
0x00001b40      0f85f1020000   jne 0x1e37
0x00001b46      c605bd752000.  mov byte [obj.complement], 1            ; [0x20910a:1]=0
0x00001b4d      e92effffff     jmp 0x1a80
0x00001b52      660f1f440000   nop word [rax + rax]
0x00001b58      8b0dae752000   mov ecx, dword [obj.operating_mode]     ; [0x20910c:4]=0
0x00001b5e      85c9           test ecx, ecx
0x00001b60      0f85eb020000   jne 0x1e51
0x00001b66      c7059c752000.  mov dword [obj.operating_mode], 2       ; [0x20910c:4]=0
0x00001b70      4c8b3d497520.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00001b77      e904ffffff     jmp 0x1a80
0x00001b7c      0f1f4000       nop dword [rax]
0x00001b80      8b3586752000   mov esi, dword [obj.operating_mode]     ; [0x20910c:4]=0
0x00001b86      85f6           test esi, esi
0x00001b88      0f85c3020000   jne 0x1e51
0x00001b8e      c70574752000.  mov dword [obj.operating_mode], 1       ; [0x20910c:4]=0
0x00001b98      4c8b3d217520.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00001b9f      e9dcfeffff     jmp 0x1a80
0x00001ba4      0f1f4000       nop dword [rax]
0x00001ba8      83f864         cmp eax, 0x64
0x00001bab      0f8586020000   jne 0x1e37
0x00001bb1      488b15087520.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00001bb8      0fb602         movzx eax, byte [rdx]
0x00001bbb      84c0           test al, al
0x00001bbd      740a           je 0x1bc9
0x00001bbf      807a0100       cmp byte [rdx + 1], 0
0x00001bc3      0f854d020000   jne 0x1e16
0x00001bc9      88053a752000   mov byte [obj.delim], al                ; [0x209109:1]=0
0x00001bcf      41be01000000   mov r14d, 1
0x00001bd5      e9a6feffff     jmp 0x1a80
0x00001bda      660f1f440000   nop word [rax + rax]
0x00001be0      c60529742000.  mov byte [obj.line_delim], 0            ; [0x209010:1]=10 ; "\n"
0x00001be7      e994feffff     jmp 0x1a80
0x00001bec      0f1f4000       nop dword [rax]
0x00001bf0      488b15c97420.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00001bf7      c6050a752000.  mov byte [obj.output_delimiter_specified], 1 ; [0x209108:1]=0
0x00001bfe      b801000000     mov eax, 1
0x00001c03      803a00         cmp byte [rdx], 0
0x00001c06      7415           je 0x1c1d
0x00001c08      31c0           xor eax, eax
0x00001c0a      4883c9ff       or rcx, 0xffffffffffffffff
0x00001c0e      4889d7         mov rdi, rdx
0x00001c11      f2ae           repne scasb al, byte [rdi]
0x00001c13      4889c8         mov rax, rcx
0x00001c16      48f7d0         not rax
0x00001c19      4883e801       sub rax, 1
0x00001c1d      4889d7         mov rdi, rdx
0x00001c20      488905d97420.  mov qword [obj.output_delimiter_length], rax ; [0x209100:8]=0
0x00001c27      e884420000     call sym.xstrdup
0x00001c2c      488905c57420.  mov qword [obj.output_delimiter_string], rax ; [0x2090f8:8]=0
0x00001c33      e948feffff     jmp 0x1a80
0x00001c38      8b05ce742000   mov eax, dword [obj.operating_mode]     ; [0x20910c:4]=0
0x00001c3e      ba05000000     mov edx, 5
0x00001c43      488d35465100.  lea rsi, str.you_must_specify_a_list_of_bytes__characters__or_fields ; 0x6d90 ; "you must specify a list of bytes, characters, or fields"
0x00001c4a      85c0           test eax, eax
0x00001c4c      0f84d0010000   je 0x1e22
0x00001c52      4584f6         test r14b, r14b
0x00001c55      743b           je 0x1c92
0x00001c57      83f802         cmp eax, 2
0x00001c5a      ba05000000     mov edx, 5
0x00001c5f      488d35625100.  lea rsi, str.an_input_delimiter_may_be_specified_only_when_operating_on_fields ; 0x6dc8 ; "an input delimiter may be specified only when operating on fields"
0x00001c66      0f85b6010000   jne 0x1e22
0x00001c6c      803d98742000.  cmp byte [obj.suppress_non_delimited], 0 ; [0x20910b:1]=0
0x00001c73      0f84e9000000   je 0x1d62
0x00001c79      803d8a742000.  cmp byte [obj.complement], 0            ; [0x20910a:1]=0
0x00001c80      0f85eb000000   jne 0x1d71
0x00001c86      31f6           xor esi, esi
0x00001c88      4c89ff         mov rdi, r15
0x00001c8b      e850100000     call sym.set_fields
0x00001c90      eb3a           jmp 0x1ccc
0x00001c92      803d72742000.  cmp byte [obj.suppress_non_delimited], 0 ; [0x20910b:1]=0
0x00001c99      0f858f000000   jne 0x1d2e
0x00001c9f      31f6           xor esi, esi
0x00001ca1      83f802         cmp eax, 2
0x00001ca4      400f95c6       setne sil
0x00001ca8      c1e602         shl esi, 2
0x00001cab      803d58742000.  cmp byte [obj.complement], 0            ; [0x20910a:1]=0
0x00001cb2      0f8589010000   jne 0x1e41
0x00001cb8      4c89ff         mov rdi, r15
0x00001cbb      e820100000     call sym.set_fields
0x00001cc0      4584f6         test r14b, r14b
0x00001cc3      7507           jne 0x1ccc
0x00001cc5      c6053d742000.  mov byte [obj.delim], 9                 ; [0x209109:1]=0
0x00001ccc      48833d247420.  cmp qword [obj.output_delimiter_string], 0 ; [0x2090f8:8]=0
0x00001cd4      0f84d9000000   je 0x1db3
0x00001cda      8b05d8732000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001ce0      39e8           cmp eax, ebp
0x00001ce2      0f84fd000000   je 0x1de5
0x00001ce8      41bc01000000   mov r12d, 1
0x00001cee      7d21           jge 0x1d11
0x00001cf0      4898           cdqe
0x00001cf2      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001cf6      e875020000     call sym.cut_file
0x00001cfb      4121c4         and r12d, eax
0x00001cfe      8b05b4732000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001d04      83c001         add eax, 1
0x00001d07      39e8           cmp eax, ebp
0x00001d09      8905a9732000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001d0f      7cdf           jl 0x1cf0
0x00001d11      803dda732000.  cmp byte [obj.have_read_stdin], 0       ; [0x2090f2:1]=0
0x00001d18      7569           jne 0x1d83
0x00001d1a      4183f401       xor r12d, 1
0x00001d1e      5a             pop rdx
0x00001d1f      410fb6c4       movzx eax, r12b
0x00001d23      5b             pop rbx
0x00001d24      5d             pop rbp
0x00001d25      415c           pop r12
0x00001d27      415d           pop r13
0x00001d29      415e           pop r14
0x00001d2b      415f           pop r15
0x00001d2d      c3             ret
0x00001d2e      83f802         cmp eax, 2
0x00001d31      ba05000000     mov edx, 5
0x00001d36      488d35d35000.  lea rsi, str.suppressing_non_delimited_lines_makes_sense____only_when_operating_on_fields ; 0x6e10 ; "suppressing non-delimited lines makes sense\n\tonly when operating on fields"
0x00001d3d      0f85df000000   jne 0x1e22
0x00001d43      803dc0732000.  cmp byte [obj.complement], 0            ; [0x20910a:1]=0
0x00001d4a      0f84a9000000   je 0x1df9
0x00001d50      be02000000     mov esi, 2
0x00001d55      4c89ff         mov rdi, r15
0x00001d58      e8830f0000     call sym.set_fields
0x00001d5d      e963ffffff     jmp 0x1cc5
0x00001d62      31f6           xor esi, esi
0x00001d64      803d9f732000.  cmp byte [obj.complement], 0            ; [0x20910a:1]=0
0x00001d6b      0f8447ffffff   je 0x1cb8
0x00001d71      be02000000     mov esi, 2
0x00001d76      4c89ff         mov rdi, r15
0x00001d79      e8620f0000     call sym.set_fields
0x00001d7e      e949ffffff     jmp 0x1ccc
0x00001d83      488b3d267320.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2090b0:8]=0
0x00001d8a      e8a1410000     call sym.rpl_fclose
0x00001d8f      83c001         add eax, 1
0x00001d92      7586           jne 0x1d1a
0x00001d94      e807f9ffff     call sym.imp.__errno_location
0x00001d99      8b30           mov esi, dword [rax]
0x00001d9b      488d15c05200.  lea rdx, [0x00007062]                   ; "-"
0x00001da2      31ff           xor edi, edi
0x00001da4      31c0           xor eax, eax
0x00001da6      4531e4         xor r12d, r12d
0x00001da9      e892fbffff     call sym.imp.error
0x00001dae      e967ffffff     jmp 0x1d1a
0x00001db3      0fb6054f7320.  movzx eax, byte [obj.delim]             ; [0x209109:1]=0
0x00001dba      c60530732000.  mov byte [0x002090f1], 0                ; [0x2090f1:1]=0
0x00001dc1      48c705347320.  mov qword [obj.output_delimiter_length], 1 ; [0x209100:8]=0
0x00001dcc      88051e732000   mov byte [obj.dummy.7081], al           ; [0x2090f0:1]=0
0x00001dd2      488d05177320.  lea rax, obj.dummy.7081                 ; 0x2090f0
0x00001dd9      488905187320.  mov qword [obj.output_delimiter_string], rax ; [0x2090f8:8]=0
0x00001de0      e9f5feffff     jmp 0x1cda
0x00001de5      488d3d765200.  lea rdi, [0x00007062]                   ; "-"
0x00001dec      e87f010000     call sym.cut_file
0x00001df1      4189c4         mov r12d, eax
0x00001df4      e918ffffff     jmp 0x1d11
0x00001df9      31f6           xor esi, esi
0x00001dfb      4c89ff         mov rdi, r15
0x00001dfe      e8dd0e0000     call sym.set_fields
0x00001e03      e9bdfeffff     jmp 0x1cc5
0x00001e08      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001e0d      7528           jne 0x1e37
0x00001e0f      31ff           xor edi, edi
0x00001e11      e84a090000     call sym.usage
0x00001e16      488d35434f00.  lea rsi, str.the_delimiter_must_be_a_single_character ; 0x6d60 ; "the delimiter must be a single character"
0x00001e1d      ba05000000     mov edx, 5
0x00001e22      31ff           xor edi, edi
0x00001e24      e817f9ffff     call sym.imp.dcgettext
0x00001e29      31f6           xor esi, esi
0x00001e2b      4889c2         mov rdx, rax
0x00001e2e      31ff           xor edi, edi
0x00001e30      31c0           xor eax, eax
0x00001e32      e809fbffff     call sym.imp.error
0x00001e37      bf01000000     mov edi, 1
0x00001e3c      e81f090000     call sym.usage
0x00001e41      83ce02         or esi, 2
0x00001e44      4c89ff         mov rdi, r15
0x00001e47      e8940e0000     call sym.set_fields
0x00001e4c      e974feffff     jmp 0x1cc5
0x00001e51      ba05000000     mov edx, 5
0x00001e56      488d35db4e00.  lea rsi, str.only_one_type_of_list_may_be_specified ; 0x6d38 ; "only one type of list may be specified"
0x00001e5d      ebc3           jmp 0x1e22
0x00001e5f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00001e60      31ed           xor ebp, ebp
0x00001e62      4989d1         mov r9, rdx
0x00001e65      5e             pop rsi
0x00001e66      4889e2         mov rdx, rsp
0x00001e69      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001e6d      50             push rax
0x00001e6e      54             push rsp
0x00001e6f      4c8d05ca4500.  lea r8, sym.__libc_csu_fini             ; 0x6440
0x00001e76      488d0d534500.  lea rcx, sym.__libc_csu_init            ; 0x63d0 ; "AWAVI\x89\xd7AUATL\x8d%n& "
0x00001e7d      488d3d6cfbff.  lea rdi, main                           ; sym.main
                                                                       ; 0x19f0 ; "AWAVE1\xf6AUATL\x8d-^p "
0x00001e84      ff1556712000   call qword [reloc.__libc_start_main]    ; [0x208fe0:8]=0
0x00001e8a      f4             hlt
0x00001e8b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001e90      488d3d097220.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001e97      55             push rbp
0x00001e98      488d05017220.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001e9f      4839f8         cmp rax, rdi
0x00001ea2      4889e5         mov rbp, rsp
0x00001ea5      7419           je 0x1ec0
0x00001ea7      488b052a7120.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fd8:8]=0
0x00001eae      4885c0         test rax, rax
0x00001eb1      740d           je 0x1ec0
0x00001eb3      5d             pop rbp
0x00001eb4      ffe0           jmp rax
0x00001eb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ec0      5d             pop rbp
0x00001ec1      c3             ret
0x00001ec2      0f1f4000       nop dword [rax]
0x00001ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001ed0      488d3dc97120.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001ed7      488d35c27120.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001ede      55             push rbp
0x00001edf      4829fe         sub rsi, rdi
0x00001ee2      4889e5         mov rbp, rsp
0x00001ee5      48c1fe03       sar rsi, 3
0x00001ee9      4889f0         mov rax, rsi
0x00001eec      48c1e83f       shr rax, 0x3f
0x00001ef0      4801c6         add rsi, rax
0x00001ef3      48d1fe         sar rsi, 1
0x00001ef6      7418           je 0x1f10
0x00001ef8      488b05f17020.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208ff0:8]=0
0x00001eff      4885c0         test rax, rax
0x00001f02      740c           je 0x1f10
0x00001f04      5d             pop rbp
0x00001f05      ffe0           jmp rax
0x00001f07      660f1f840000.  nop word [rax + rax]
0x00001f10      5d             pop rbp
0x00001f11      c3             ret
0x00001f12      0f1f4000       nop dword [rax]
0x00001f16      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001f20      803dc1712000.  cmp byte [obj.completed.7697], 0        ; [0x2090e8:1]=0
0x00001f27      752f           jne 0x1f58
0x00001f29      48833dc77020.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208ff8:8]=0
0x00001f31      55             push rbp
0x00001f32      4889e5         mov rbp, rsp
0x00001f35      740c           je 0x1f43
0x00001f37      488b3dca7020.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00001f3e      e89dfaffff     call sym..plt.got
0x00001f43      e848ffffff     call sym.deregister_tm_clones
0x00001f48      c60599712000.  mov byte [obj.completed.7697], 1        ; [0x2090e8:1]=0
0x00001f4f      5d             pop rbp
0x00001f50      c3             ret
0x00001f51      0f1f80000000.  nop dword [rax]
0x00001f58      f3c3           ret
0x00001f5a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001f60      55             push rbp
0x00001f61      4889e5         mov rbp, rsp
0x00001f64      5d             pop rbp
0x00001f65      e966ffffff     jmp sym.register_tm_clones
0x00001f6a      660f1f440000   nop word [rax + rax]
;-- cut_file:
0x00001f70      4157           push r15                                ; /src:442
0x00001f72      4156           push r14
0x00001f74      4889fe         mov rsi, rdi                            ; /src:445
0x00001f77      4155           push r13                                ; /src:442
0x00001f79      4154           push r12
0x00001f7b      b902000000     mov ecx, 2                              ; /src:445
0x00001f80      55             push rbp                                ; /src:442
0x00001f81      53             push rbx
0x00001f82      4883ec18       sub rsp, 0x18
0x00001f86      48893c24       mov qword [rsp], rdi
0x00001f8a      488d3dd15000.  lea rdi, [0x00007062]                   ; /src:445 ; "-"
0x00001f91      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001f93      0f97c0         seta al
0x00001f96      1c00           sbb al, 0
0x00001f98      84c0           test al, al
0x00001f9a      0f8500050000   jne 0x24a0
0x00001fa0      4c8b3d097120.  mov r15, qword [obj.stdin]              ; /src:448 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2090b0:8]=0
0x00001fa7      c60544712000.  mov byte [obj.have_read_stdin], 1       ; /src:447 ; [0x2090f2:1]=0
0x00001fae      be02000000     mov esi, 2                              ; /src:460
0x00001fb3      4c89ff         mov rdi, r15
0x00001fb6      e805140000     call sym.fadvise
0x00001fbb      833d4a712000.  cmp dword [obj.operating_mode], 1       ; /src:431 ; [0x20910c:4]=0
0x00001fc2      488b05cf7220.  mov rax, qword [obj.frp]                ; /src:242 ; [0x209298:8]=0
0x00001fc9      488905507120.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x00001fd0      0f843d050000   je 0x2513                               ; /src:431
0x00001fd6      498b4708       mov rax, qword [r15 + 8]                ; /coreutils-8.31/lib:65
0x00001fda      493b4710       cmp rax, qword [r15 + 0x10]
0x00001fde      0f835b040000   jae 0x243f
0x00001fe4      488d5001       lea rdx, [rax + 1]
0x00001fe8      49895708       mov qword [r15 + 8], rdx
0x00001fec      0fb638         movzx edi, byte [rax]
0x00001fef      4c89fe         mov rsi, r15                            ; /src:299
0x00001ff2      41bd01000000   mov r13d, 1                             ; /src:289
0x00001ff8      e8c3f8ffff     call sym.imp.ungetc                     ; /src:299
0x00001ffd      488b051c7120.  mov rax, qword [obj.current_rp]         ; /src:219 ; [0x209120:8]=0
0x00002004      48833801       cmp qword [rax], 1
0x00002008      400f97c5       seta bpl
0x0000200c      40322df87020.  xor bpl, byte [obj.suppress_non_delimited] ; /src:183 ; [0x20910b:1]=0
0x00002013      4531e4         xor r12d, r12d
0x00002016      4531f6         xor r14d, r14d                          ; /src:41
0x00002019      0f1f80000000.  nop dword [rax]
0x00002020      4983fd01       cmp r13, 1
0x00002024      0f94c3         sete bl
0x00002027      4020eb         and bl, bpl
0x0000202a      0f8500010000   jne 0x2130
0x00002030      488b05e97020.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x00002037      4c3928         cmp qword [rax], r13
0x0000203a      0f87da000000   ja 0x211a
0x00002040      4584e4         test r12b, r12b
0x00002043      0f8480000000   je 0x20c9
0x00002049      488b0d587020.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002050      488b15a97020.  mov rdx, qword [obj.output_delimiter_length] ; [0x209100:8]=0
0x00002057      be01000000     mov esi, 1
0x0000205c      488b3d957020.  mov rdi, qword [obj.output_delimiter_string] ; [0x2090f8:8]=0
0x00002063      e878f8ffff     call sym.imp.fwrite_unlocked
0x00002068      eb5f           jmp 0x20c9
0x0000206a      660f1f440000   nop word [rax + rax]
0x00002070      488d5001       lea rdx, [rax + 1]
0x00002074      49895708       mov qword [r15 + 8], rdx
0x00002078      0fb618         movzx ebx, byte [rax]
0x0000207b      0fb605877020.  movzx eax, byte [obj.delim]             ; [0x209109:1]=0
0x00002082      0fb615876f20.  movzx edx, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x00002089      39c3           cmp ebx, eax
0x0000208b      89c6           mov esi, eax
0x0000208d      0f84dd010000   je 0x2270
0x00002093      0fb6c2         movzx eax, dl
0x00002096      39c3           cmp ebx, eax
0x00002098      0f84d2020000   je 0x2370
0x0000209e      83fbff         cmp ebx, 0xffffffff
0x000020a1      0f84f9020000   je 0x23a0
0x000020a7      488b3dfa6f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000020ae      488b4728       mov rax, qword [rdi + 0x28]
0x000020b2      483b4730       cmp rax, qword [rdi + 0x30]
0x000020b6      0f833c010000   jae 0x21f8                              ; /src:212
0x000020bc      488d5001       lea rdx, [rax + 1]
0x000020c0      48895728       mov qword [rdi + 0x28], rdx             ; /src:219
0x000020c4      8818           mov byte [rax], bl
0x000020c6      4189de         mov r14d, ebx                           ; /src:228
0x000020c9      498b4708       mov rax, qword [r15 + 8]
0x000020cd      493b4710       cmp rax, qword [r15 + 0x10]
0x000020d1      729d           jb 0x2070
0x000020d3      4c89ff         mov rdi, r15
0x000020d6      e895f5ffff     call sym.imp.__uflow                    ; /src:230
0x000020db      89c3           mov ebx, eax
0x000020dd      eb9c           jmp 0x207b
0x000020df      90             nop
0x000020e0      488d5001       lea rdx, [rax + 1]
0x000020e4      49895708       mov qword [r15 + 8], rdx
0x000020e8      0fb600         movzx eax, byte [rax]
0x000020eb      0fb60d177020.  movzx ecx, byte [obj.delim]             ; [0x209109:1]=0
0x000020f2      0fb615176f20.  movzx edx, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x000020f9      39c1           cmp ecx, eax                            ; /src:233
0x000020fb      89ce           mov esi, ecx
0x000020fd      0f843d010000   je 0x2240
0x00002103      0fb6ca         movzx ecx, dl
0x00002106      39c8           cmp eax, ecx
0x00002108      0f84aa010000   je 0x22b8                               ; /src:235
0x0000210e      83f8ff         cmp eax, 0xffffffff                     ; /src:236
0x00002111      0f84a1020000   je 0x23b8
0x00002117      4189c6         mov r14d, eax
0x0000211a      498b4708       mov rax, qword [r15 + 8]
0x0000211e      493b4710       cmp rax, qword [r15 + 0x10]             ; /coreutils-8.31/lib:-73
0x00002122      72bc           jb 0x20e0
0x00002124      4c89ff         mov rdi, r15
0x00002127      e844f5ffff     call sym.imp.__uflow
0x0000212c      ebbd           jmp 0x20eb
0x0000212e      6690           nop
0x00002130      440fb60dd86e.  movzx r9d, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x00002138      440fb605c96f.  movzx r8d, byte [obj.delim]             ; [0x209109:1]=0
0x00002140      4883ec08       sub rsp, 8
0x00002144      4157           push r15
0x00002146      488d35c36f20.  lea rsi, obj.field_1_bufsize            ; 0x209110
0x0000214d      488d3dc46f20.  lea rdi, obj.field_1_buffer             ; 0x209118
0x00002154      31d2           xor edx, edx
0x00002156      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000215d      e88e120000     call sym.getndelim2
0x00002162      4989c5         mov r13, rax
0x00002165      4d85ed         test r13, r13
0x00002168      58             pop rax
0x00002169      5a             pop rdx
0x0000216a      0f88f9040000   js 0x2669
0x00002170      0f84c2050000   je 0x2738
0x00002176      488b3d9b6f20.  mov rdi, qword [obj.field_1_buffer]     ; [0x209118:8]=0
0x0000217d      0fb605856f20.  movzx eax, byte [obj.delim]             ; [0x209109:1]=0
0x00002184      498d55ff       lea rdx, [r13 - 1]
0x00002188      4238442fff     cmp byte [rdi + r13 - 1], al
0x0000218d      7479           je 0x2208
0x0000218f      803d756f2000.  cmp byte [obj.suppress_non_delimited], 0 ; [0x20910b:1]=0
0x00002196      0f8534020000   jne 0x23d0
0x0000219c      488b0d056f20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000021a3      4c89ea         mov rdx, r13
0x000021a6      be01000000     mov esi, 1
0x000021ab      e830f7ffff     call sym.imp.fwrite_unlocked
0x000021b0      488b15616f20.  mov rdx, qword [obj.field_1_buffer]     ; [0x209118:8]=0
0x000021b7      440fb635516e.  movzx r14d, byte [obj.line_delim]       ; [0x209010:1]=10 ; "\n"
0x000021bf      420fbe542aff   movsx edx, byte [rdx + r13 - 1]
0x000021c5      4439f2         cmp edx, r14d
0x000021c8      7420           je 0x21ea
0x000021ca      488b3dd76e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000021d1      488b5728       mov rdx, qword [rdi + 0x28]
0x000021d5      483b5730       cmp rdx, qword [rdi + 0x30]
0x000021d9      0f8375040000   jae 0x2654
0x000021df      488d4a01       lea rcx, [rdx + 1]
0x000021e3      48894f28       mov qword [rdi + 0x28], rcx
0x000021e7      448832         mov byte [rdx], r14b
0x000021ea      41bd01000000   mov r13d, 1
0x000021f0      e92bfeffff     jmp 0x2020
0x000021f5      0f1f00         nop dword [rax]
0x000021f8      0fb6f3         movzx esi, bl
0x000021fb      e8a0f5ffff     call sym.imp.__overflow
0x00002200      e9c1feffff     jmp 0x20c6
0x00002205      0f1f00         nop dword [rax]
0x00002208      488b05116f20.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x0000220f      48833801       cmp qword [rax], 1
0x00002213      0f86c7010000   jbe 0x23e0                              ; /src:48
0x00002219      4883780801     cmp qword [rax + 8], 1
0x0000221e      0f879c010000   ja 0x23c0
0x00002224      4883c010       add rax, 0x10
0x00002228      41bd02000000   mov r13d, 2
0x0000222e      4531f6         xor r14d, r14d
0x00002231      488905e86e20.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x00002238      e9fafdffff     jmp 0x2037
0x0000223d      0f1f00         nop dword [rax]
0x00002240      4038d6         cmp sil, dl
0x00002243      4489f1         mov ecx, r14d
0x00002246      4189c6         mov r14d, eax                           ; /src:149
0x00002249      7436           je 0x2281
0x0000224b      488b05ce6e20.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x00002252      4983c501       add r13, 1
0x00002256      4c3b6808       cmp r13, qword [rax + 8]
0x0000225a      0f86c0fdffff   jbe 0x2020
0x00002260      4883c010       add rax, 0x10
0x00002264      488905b56e20.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x0000226b      e9b0fdffff     jmp 0x2020
0x00002270      4038d6         cmp sil, dl
0x00002273      4489f1         mov ecx, r14d
0x00002276      41bc01000000   mov r12d, 1
0x0000227c      4189de         mov r14d, ebx
0x0000227f      75ca           jne 0x224b
0x00002281      498b4708       mov rax, qword [r15 + 8]
0x00002285      493b4710       cmp rax, qword [r15 + 0x10]
0x00002289      0f8301040000   jae 0x2690
0x0000228f      488d5001       lea rdx, [rax + 1]
0x00002293      49895708       mov qword [r15 + 8], rdx
0x00002297      0fb638         movzx edi, byte [rax]
0x0000229a      4c89fe         mov rsi, r15
0x0000229d      894c240c       mov dword [rsp + 0xc], ecx
0x000022a1      e81af6ffff     call sym.imp.ungetc                     ; /src:138
0x000022a6      0fb6055c6e20.  movzx eax, byte [obj.delim]             ; [0x209109:1]=0
0x000022ad      8b4c240c       mov ecx, dword [rsp + 0xc]
0x000022b1      89c6           mov esi, eax
0x000022b3      eb16           jmp 0x22cb
0x000022b5      0f1f00         nop dword [rax]
0x000022b8      4038d6         cmp sil, dl
0x000022bb      4489f1         mov ecx, r14d
0x000022be      4189c6         mov r14d, eax
0x000022c1      400fb6c6       movzx eax, sil
0x000022c5      0f84be000000   je 0x2389
0x000022cb      4439f0         cmp eax, r14d
0x000022ce      0fb6153b6d20.  movzx edx, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x000022d5      0f8470ffffff   je 0x224b
0x000022db      4183feff       cmp r14d, 0xffffffff
0x000022df      0fb6c2         movzx eax, dl
0x000022e2      0f94c3         sete bl
0x000022e5      4439f0         cmp eax, r14d                           ; /src:155
0x000022e8      400f94c7       sete dil
0x000022ec      84db           test bl, bl
0x000022ee      7509           jne 0x22f9                              ; /src:161
0x000022f0      4084ff         test dil, dil
0x000022f3      0f8427fdffff   je 0x2020                               ; /src:162
0x000022f9      4584e4         test r12b, r12b
0x000022fc      750f           jne 0x230d
0x000022fe      803d066e2000.  cmp byte [obj.suppress_non_delimited], 1 ; /src:-75 ; [0x20910b:1]=0
0x00002305      7506           jne 0x230d
0x00002307      4983fd01       cmp r13, 1
0x0000230b      7435           je 0x2342                               ; /coreutils-8.31/lib:-250
0x0000230d      39c8           cmp eax, ecx
0x0000230f      410f95c1       setne r9b
0x00002313      4038d6         cmp sil, dl
0x00002316      0f94c1         sete cl
0x00002319      4108c9         or r9b, cl
0x0000231c      7505           jne 0x2323
0x0000231e      4084ff         test dil, dil
0x00002321      741f           je 0x2342
0x00002323      488b3d7e6d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000232a      488b4f28       mov rcx, qword [rdi + 0x28]
0x0000232e      483b4f30       cmp rcx, qword [rdi + 0x30]
0x00002332      0f8310030000   jae 0x2648
0x00002338      488d4101       lea rax, [rcx + 1]
0x0000233c      48894728       mov qword [rdi + 0x28], rax
0x00002340      8811           mov byte [rcx], dl
0x00002342      84db           test bl, bl
0x00002344      0f850e010000   jne 0x2458                              ; /src:-104
0x0000234a      488b05476f20.  mov rax, qword [obj.frp]                ; [0x209298:8]=0
0x00002351      4531e4         xor r12d, r12d
0x00002354      41bd01000000   mov r13d, 1
0x0000235a      488905bf6d20.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x00002361      e9bafcffff     jmp 0x2020
0x00002366      662e0f1f8400.  nop word cs:[rax + rax]
0x00002370      4038d6         cmp sil, dl
0x00002373      4489f1         mov ecx, r14d
0x00002376      41bc01000000   mov r12d, 1
0x0000237c      4189de         mov r14d, ebx
0x0000237f      400fb6c6       movzx eax, sil
0x00002383      0f8542ffffff   jne 0x22cb
0x00002389      4439f0         cmp eax, r14d
0x0000238c      0f8549ffffff   jne 0x22db
0x00002392      e9eafeffff     jmp 0x2281
0x00002397      660f1f840000.  nop word [rax + rax]
0x000023a0      4489f1         mov ecx, r14d
0x000023a3      41bc01000000   mov r12d, 1
0x000023a9      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x000023af      e927ffffff     jmp 0x22db
0x000023b4      0f1f4000       nop dword [rax]
0x000023b8      4489f1         mov ecx, r14d
0x000023bb      ebec           jmp 0x23a9
0x000023bd      0f1f00         nop dword [rax]
0x000023c0      41bd02000000   mov r13d, 2                             ; /src:-57
0x000023c6      4531f6         xor r14d, r14d
0x000023c9      e969fcffff     jmp 0x2037                              ; /coreutils-8.31/lib:-208
0x000023ce      6690           nop
0x000023d0      41bd01000000   mov r13d, 1
0x000023d6      4531f6         xor r14d, r14d
0x000023d9      e942fcffff     jmp 0x2020
0x000023de      6690           nop
0x000023e0      488b0dc16c20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000023e7      be01000000     mov esi, 1
0x000023ec      e8eff4ffff     call sym.imp.fwrite_unlocked
0x000023f1      0fb605186c20.  movzx eax, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x000023f8      38050b6d2000   cmp byte [obj.delim], al                ; [0x209109:1]=0
0x000023fe      740f           je 0x240f
0x00002400      488b05196d20.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x00002407      4189dc         mov r12d, ebx
0x0000240a      e90afeffff     jmp 0x2219
0x0000240f      498b4708       mov rax, qword [r15 + 8]
0x00002413      493b4710       cmp rax, qword [r15 + 0x10]
0x00002417      0f83ef020000   jae 0x270c
0x0000241d      488d5001       lea rdx, [rax + 1]
0x00002421      49895708       mov qword [r15 + 8], rdx
0x00002425      0fb638         movzx edi, byte [rax]
0x00002428      4c89fe         mov rsi, r15
0x0000242b      4189dc         mov r12d, ebx
0x0000242e      e88df4ffff     call sym.imp.ungetc
0x00002433      488b05e66c20.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x0000243a      e9dafdffff     jmp 0x2219
0x0000243f      4c89ff         mov rdi, r15
0x00002442      e829f2ffff     call sym.imp.__uflow
0x00002447      83f8ff         cmp eax, 0xffffffff
0x0000244a      89c7           mov edi, eax
0x0000244c      0f859dfbffff   jne 0x1fef
0x00002452      660f1f440000   nop word [rax + rax]
0x00002458      418b07         mov eax, dword [r15]
0x0000245b      a820           test al, 0x20                           ; "@"
0x0000245d      755d           jne 0x24bc
0x0000245f      488b3424       mov rsi, qword [rsp]
0x00002463      488d3df84b00.  lea rdi, [0x00007062]                   ; /src:7 ; "-"
0x0000246a      b902000000     mov ecx, 2
0x0000246f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002471      4c89ff         mov rdi, r15
0x00002474      0f97c0         seta al
0x00002477      1c00           sbb al, 0
0x00002479      84c0           test al, al
0x0000247b      747d           je 0x24fa                               ; /coreutils-8.31/lib:-250
0x0000247d      e8ae3a0000     call sym.rpl_fclose
0x00002482      89c2           mov edx, eax
0x00002484      b801000000     mov eax, 1
0x00002489      83faff         cmp edx, 0xffffffff
0x0000248c      742e           je 0x24bc                               ; /src:87
0x0000248e      4883c418       add rsp, 0x18
0x00002492      5b             pop rbx
0x00002493      5d             pop rbp
0x00002494      415c           pop r12
0x00002496      415d           pop r13                                 ; /src:95
0x00002498      415e           pop r14
0x0000249a      415f           pop r15
0x0000249c      c3             ret
0x0000249d      0f1f00         nop dword [rax]                         ; /src:93
0x000024a0      488b3c24       mov rdi, qword [rsp]
0x000024a4      488d35284100.  lea rsi, [0x000065d3]                   ; /src:95 ; "r"
0x000024ab      e8b0f4ffff     call sym.imp.fopen
0x000024b0      4885c0         test rax, rax
0x000024b3      4989c7         mov r15, rax
0x000024b6      0f85f2faffff   jne 0x1fae
0x000024bc      488b1424       mov rdx, qword [rsp]
0x000024c0      be03000000     mov esi, 3
0x000024c5      31ff           xor edi, edi
0x000024c7      e8a42f0000     call sym.quotearg_n_style_colon
0x000024cc      4889c3         mov rbx, rax
0x000024cf      e8ccf1ffff     call sym.imp.__errno_location
0x000024d4      8b30           mov esi, dword [rax]
0x000024d6      488d15394b00.  lea rdx, [0x00007016]                   ; "%s"
0x000024dd      4889d9         mov rcx, rbx
0x000024e0      31c0           xor eax, eax
0x000024e2      31ff           xor edi, edi
0x000024e4      e857f4ffff     call sym.imp.error
0x000024e9      4883c418       add rsp, 0x18
0x000024ed      31c0           xor eax, eax
0x000024ef      5b             pop rbx
0x000024f0      5d             pop rbp
0x000024f1      415c           pop r12
0x000024f3      415d           pop r13
0x000024f5      415e           pop r14
0x000024f7      415f           pop r15                                 ; /coreutils-8.31/lib:-250
0x000024f9      c3             ret
0x000024fa      e801f2ffff     call sym.imp.clearerr_unlocked
0x000024ff      4883c418       add rsp, 0x18                           ; /src:46
0x00002503      b801000000     mov eax, 1
0x00002508      5b             pop rbx
0x00002509      5d             pop rbp
0x0000250a      415c           pop r12
0x0000250c      415d           pop r13
0x0000250e      415e           pop r14
0x00002510      415f           pop r15
0x00002512      c3             ret
0x00002513      31db           xor ebx, ebx
0x00002515      4531e4         xor r12d, r12d
0x00002518      0f1f84000000.  nop dword [rax + rax]
0x00002520      498b4708       mov rax, qword [r15 + 8]
0x00002524      493b4710       cmp rax, qword [r15 + 0x10]
0x00002528      0f8389000000   jae 0x25b7
0x0000252e      488d5001       lea rdx, [rax + 1]
0x00002532      0fb635d76a20.  movzx esi, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x00002539      49895708       mov qword [r15 + 8], rdx
0x0000253d      0fb628         movzx ebp, byte [rax]
0x00002540      39f5           cmp ebp, esi
0x00002542      0f84c8000000   je 0x2610
0x00002548      488b05d16b20.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x0000254f      4883c301       add rbx, 1                              ; /src:-171
0x00002553      483b5808       cmp rbx, qword [rax + 8]
0x00002557      760b           jbe 0x2564
0x00002559      4883c010       add rax, 0x10
0x0000255d      488905bc6b20.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x00002564      488b00         mov rax, qword [rax]
0x00002567      4839c3         cmp rbx, rax
0x0000256a      72b4           jb 0x2520
0x0000256c      0fb615956b20.  movzx edx, byte [obj.output_delimiter_specified] ; [0x209108:1]=0
0x00002573      488b0d2e6b20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000257a      84d2           test dl, dl
0x0000257c      7412           je 0x2590
0x0000257e      4839c3         cmp rbx, rax
0x00002581      0f94c0         sete al
0x00002584      4120c4         and r12b, al
0x00002587      0f855b010000   jne 0x26e8
0x0000258d      4189d4         mov r12d, edx
0x00002590      488b4128       mov rax, qword [rcx + 0x28]
0x00002594      483b4130       cmp rax, qword [rcx + 0x30]
0x00002598      0f8339010000   jae 0x26d7
0x0000259e      488d5001       lea rdx, [rax + 1]
0x000025a2      48895128       mov qword [rcx + 0x28], rdx
0x000025a6      408828         mov byte [rax], bpl
0x000025a9      498b4708       mov rax, qword [r15 + 8]
0x000025ad      493b4710       cmp rax, qword [r15 + 0x10]
0x000025b1      0f8277ffffff   jb 0x252e
0x000025b7      4c89ff         mov rdi, r15
0x000025ba      e8b1f0ffff     call sym.imp.__uflow
0x000025bf      0fb6354a6a20.  movzx esi, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x000025c6      89c5           mov ebp, eax
0x000025c8      39f5           cmp ebp, esi
0x000025ca      7444           je 0x2610
0x000025cc      83fdff         cmp ebp, 0xffffffff
0x000025cf      0f8573ffffff   jne 0x2548
0x000025d5      4885db         test rbx, rbx
0x000025d8      0f847afeffff   je 0x2458
0x000025de      488b3dc36a20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000025e5      488b5728       mov rdx, qword [rdi + 0x28]
0x000025e9      483b5730       cmp rdx, qword [rdi + 0x30]
0x000025ed      0f8338010000   jae 0x272b
0x000025f3      488d4a01       lea rcx, [rdx + 1]
0x000025f7      48894f28       mov qword [rdi + 0x28], rcx
0x000025fb      408832         mov byte [rdx], sil
0x000025fe      418b07         mov eax, dword [r15]
0x00002601      e955feffff     jmp 0x245b
0x00002606      662e0f1f8400.  nop word cs:[rax + rax]
0x00002610      488b3d916a20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002617      488b4728       mov rax, qword [rdi + 0x28]
0x0000261b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000261f      0f83a8000000   jae 0x26cd
0x00002625      488d5001       lea rdx, [rax + 1]
0x00002629      48895728       mov qword [rdi + 0x28], rdx
0x0000262d      408830         mov byte [rax], sil
0x00002630      488b05616c20.  mov rax, qword [obj.frp]                ; [0x209298:8]=0
0x00002637      31db           xor ebx, ebx
0x00002639      4531e4         xor r12d, r12d
0x0000263c      488905dd6a20.  mov qword [obj.current_rp], rax         ; [0x209120:8]=0
0x00002643      e9d8feffff     jmp 0x2520                              ; /src:-280
0x00002648      89c6           mov esi, eax
0x0000264a      e851f1ffff     call sym.imp.__overflow
0x0000264f      e9eefcffff     jmp 0x2342
0x00002654      4489f6         mov esi, r14d
0x00002657      e844f1ffff     call sym.imp.__overflow
0x0000265c      440fb635ac69.  movzx r14d, byte [obj.line_delim]       ; [0x209010:1]=10 ; "\n"
0x00002664      e981fbffff     jmp 0x21ea
0x00002669      488b3da86a20.  mov rdi, qword [obj.field_1_buffer]     ; [0x209118:8]=0
0x00002670      e80bf0ffff     call sym.imp.free
0x00002675      418b07         mov eax, dword [r15]
0x00002678      48c705956a20.  mov qword [obj.field_1_buffer], 0       ; [0x209118:8]=0
0x00002683      a830           test al, 0x30
0x00002685      0f85d0fdffff   jne 0x245b
0x0000268b      e840380000     call sym.xalloc_die
0x00002690      4c89ff         mov rdi, r15
0x00002693      894c240c       mov dword [rsp + 0xc], ecx
0x00002697      e8d4efffff     call sym.imp.__uflow
0x0000269c      83f8ff         cmp eax, 0xffffffff
0x0000269f      89c7           mov edi, eax
0x000026a1      8b4c240c       mov ecx, dword [rsp + 0xc]
0x000026a5      0f85effbffff   jne 0x229a
0x000026ab      0fb6055e6920.  movzx eax, byte [obj.line_delim]        ; [0x209010:1]=10 ; "\n"
0x000026b2      0fb635506a20.  movzx esi, byte [obj.delim]             ; /src:-265 ; [0x209109:1]=0
0x000026b9      41beffffffff   mov r14d, 0xffffffff                    ; -1
0x000026bf      31ff           xor edi, edi
0x000026c1      bb01000000     mov ebx, 1
0x000026c6      89c2           mov edx, eax
0x000026c8      e92cfcffff     jmp 0x22f9
0x000026cd      e8cef0ffff     call sym.imp.__overflow
0x000026d2      e959ffffff     jmp 0x2630
0x000026d7      400fb6f5       movzx esi, bpl                          ; /src:-262
0x000026db      4889cf         mov rdi, rcx
0x000026de      e8bdf0ffff     call sym.imp.__overflow
0x000026e3      e938feffff     jmp 0x2520
0x000026e8      488b15116a20.  mov rdx, qword [obj.output_delimiter_length] ; [0x209100:8]=0
0x000026ef      488b3d026a20.  mov rdi, qword [obj.output_delimiter_string] ; [0x2090f8:8]=0
0x000026f6      be01000000     mov esi, 1
0x000026fb      e8e0f1ffff     call sym.imp.fwrite_unlocked
0x00002700      488b0da16920.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002707      e984feffff     jmp 0x2590
0x0000270c      4c89ff         mov rdi, r15
0x0000270f      e85cefffff     call sym.imp.__uflow
0x00002714      83f8ff         cmp eax, 0xffffffff
0x00002717      89c7           mov edi, eax
0x00002719      0f8509fdffff   jne 0x2428
0x0000271f      488b05fa6920.  mov rax, qword [obj.current_rp]         ; [0x209120:8]=0
0x00002726      e9eefaffff     jmp 0x2219
0x0000272b      e870f0ffff     call sym.imp.__overflow
0x00002730      418b07         mov eax, dword [r15]
0x00002733      e923fdffff     jmp 0x245b
0x00002738      488d0d214700.  lea rcx, obj.__PRETTY_FUNCTION__.7017   ; 0x6e60 ; "cut_fields"
0x0000273f      488d353e3d00.  lea rsi, str..._coreutils_8.31_src_cut.c ; 0x6484 ; "../coreutils-8.31/src/cut.c"
0x00002746      488d3d533d00.  lea rdi, str.n_bytes____0               ; /src:-254 ; 0x64a0 ; "n_bytes != 0"
0x0000274d      ba49010000     mov edx, 0x149
0x00002752      e879f0ffff     call sym.imp.__assert_fail
0x00002757      660f1f840000.  nop word [rax + rax]
;-- usage:
0x00002760      4155           push r13
0x00002762      4154           push r12
0x00002764      ba05000000     mov edx, 5
0x00002769      55             push rbp
0x0000276a      53             push rbx
0x0000276b      89fd           mov ebp, edi
0x0000276d      4881ec880000.  sub rsp, 0x88
0x00002774      488b1dcd6920.  mov rbx, qword [obj.program_name]       ; [0x209148:8]=0
0x0000277b      64488b042528.  mov rax, qword fs:[0x28]
0x00002784      4889442478     mov qword [rsp + 0x78], rax
0x00002789      31c0           xor eax, eax
0x0000278b      85ff           test edi, edi
0x0000278d      742e           je 0x27bd
0x0000278f      488d356a3e00.  lea rsi, str.Try___s___help__for_more_information. ; 0x6600 ; "Try '%s --help' for more information.\n"
0x00002796      31ff           xor edi, edi
0x00002798      e8a3efffff     call sym.imp.dcgettext
0x0000279d      488b3d3c6920.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x000027a4      4889c2         mov rdx, rax
0x000027a7      4889d9         mov rcx, rbx
0x000027aa      be01000000     mov esi, 1
0x000027af      31c0           xor eax, eax
0x000027b1      e8eaf1ffff     call sym.imp.__fprintf_chk
0x000027b6      89ef           mov edi, ebp
0x000027b8      e8c3f1ffff     call sym.imp.exit
0x000027bd      488d35643e00.  lea rsi, str.Usage:__s_OPTION...__FILE_... ; 0x6628 ; "Usage: %s OPTION... [FILE]...\n"
0x000027c4      31ff           xor edi, edi
0x000027c6      e875efffff     call sym.imp.dcgettext
0x000027cb      4889da         mov rdx, rbx
0x000027ce      4889c6         mov rsi, rax
0x000027d1      bf01000000     mov edi, 1
0x000027d6      31c0           xor eax, eax
0x000027d8      e833f1ffff     call sym.imp.__printf_chk
0x000027dd      488b1dc46820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000027e4      488d355d3e00.  lea rsi, str.Print_selected_parts_of_lines_from_each_FILE_to_standard_output. ; 0x6648 ; "Print selected parts of lines from each FILE to standard output.\n"
0x000027eb      ba05000000     mov edx, 5
0x000027f0      31ff           xor edi, edi
0x000027f2      e849efffff     call sym.imp.dcgettext
0x000027f7      4889de         mov rsi, rbx
0x000027fa      4889c7         mov rdi, rax
0x000027fd      e84ef0ffff     call sym.imp.fputs_unlocked
0x00002802      488b1d9f6820.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/t.c:204 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002809      488d35803e00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x6690 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002810      ba05000000     mov edx, 5
0x00002815      31ff           xor edi, edi
0x00002817      e824efffff     call sym.imp.dcgettext
0x0000281c      4889de         mov rsi, rbx
0x0000281f      4889c7         mov rdi, rax
0x00002822      e829f0ffff     call sym.imp.fputs_unlocked
0x00002827      488b1d7a6820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000282e      488d35933e00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x66c8 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002835      ba05000000     mov edx, 5
0x0000283a      31ff           xor edi, edi
0x0000283c      e8ffeeffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/t.c:209
0x00002841      4889de         mov rsi, rbx                            ; .//ib:-339
0x00002844      4889c7         mov rdi, rax
0x00002847      e804f0ffff     call sym.imp.fputs_unlocked
0x0000284c      488b1d556820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002853      488d35be3e00.  lea rsi, str.b____bytes_LIST________select_only_these_bytes_____c____characters_LIST___select_only_these_characters_____d____delimiter_DELIM___use_DELIM_instead_of_TAB_for_field_delimiter ; 0x6718 ; "  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n"
0x0000285a      ba05000000     mov edx, 5
0x0000285f      31ff           xor edi, edi
0x00002861      e8daeeffff     call sym.imp.dcgettext
0x00002866      4889de         mov rsi, rbx
0x00002869      4889c7         mov rdi, rax
0x0000286c      e8dfefffff     call sym.imp.fputs_unlocked
0x00002871      488b1d306820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002878      488d35513f00.  lea rsi, str.f____fields_LIST_______select_only_these_fields___also_print_any_line______________________________that_contains_no_delimiter_character__unless______________________________the__s_option_is_specified_____n_______________________ignored ; 0x67d0 ; "  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n"
0x0000287f      ba05000000     mov edx, 5
0x00002884      31ff           xor edi, edi
0x00002886      e8b5eeffff     call sym.imp.dcgettext
0x0000288b      4889de         mov rsi, rbx                            ; ../coreutils-8.31/src/t.c:223
0x0000288e      4889c7         mov rdi, rax
0x00002891      e8baefffff     call sym.imp.fputs_unlocked
0x00002896      488b1d0b6820.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000289d      488d351c4000.  lea rsi, str.complement________complement_the_set_of_selected_bytes__characters______________________________or_fields ; 0x68c0 ; "      --complement        complement the set of selected bytes, characters\n                            or fields\n"
0x000028a4      ba05000000     mov edx, 5
0x000028a9      31ff           xor edi, edi
0x000028ab      e890eeffff     call sym.imp.dcgettext
0x000028b0      4889de         mov rsi, rbx
0x000028b3      4889c7         mov rdi, rax
0x000028b6      e895efffff     call sym.imp.fputs_unlocked
0x000028bb      488b1de66720.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/t.c:225 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000028c2      488d356f4000.  lea rsi, str.s____only_delimited____do_not_print_lines_not_containing_delimiters__________output_delimiter_STRING__use_STRING_as_the_output_delimiter______________________________the_default_is_to_use_the_input_delimiter ; 0x6938 ; "  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n"
0x000028c9      ba05000000     mov edx, 5
0x000028ce      31ff           xor edi, edi
0x000028d0      e86beeffff     call sym.imp.dcgettext
0x000028d5      4889de         mov rsi, rbx
0x000028d8      4889c7         mov rdi, rax
0x000028db      e870efffff     call sym.imp.fputs_unlocked
0x000028e0      488b1dc16720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000028e7      488d35224100.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0x6a10 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x000028ee      ba05000000     mov edx, 5
0x000028f3      31ff           xor edi, edi
0x000028f5      e846eeffff     call sym.imp.dcgettext
0x000028fa      4889de         mov rsi, rbx
0x000028fd      4889c7         mov rdi, rax                            ; ../coreutils-8.31/src/t.c:209
0x00002900      e84befffff     call sym.imp.fputs_unlocked
0x00002905      488b1d9c6720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000290c      488d353d4100.  lea rsi, str.help_____display_this_help_and_exit ; 0x6a50 ; "      --help     display this help and exit\n"
0x00002913      ba05000000     mov edx, 5
0x00002918      31ff           xor edi, edi
0x0000291a      e821eeffff     call sym.imp.dcgettext
0x0000291f      4889de         mov rsi, rbx                            ; ../coreutils-8.31/src/t.c:213
0x00002922      4889c7         mov rdi, rax
0x00002925      e826efffff     call sym.imp.fputs_unlocked
0x0000292a      488b1d776720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002931      488d35484100.  lea rsi, str.version__output_version_information_and_exit ; 0x6a80 ; "      --version  output version information and exit\n"
0x00002938      ba05000000     mov edx, 5
0x0000293d      31ff           xor edi, edi
0x0000293f      e8fcedffff     call sym.imp.dcgettext
0x00002944      4889de         mov rsi, rbx
0x00002947      4889c7         mov rdi, rax
0x0000294a      e801efffff     call sym.imp.fputs_unlocked
0x0000294f      488b1d526720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002956      488d355b4100.  lea rsi, str.Use_one__and_only_one_of__b___c_or__f.__Each_LIST_is_made_up_of_one__range__or_many_ranges_separated_by_commas.__Selected_input_is_written__in_the_same_order_that_it_is_read__and_is_written_exactly_once. ; ../coreutils-8.31/src/t.c:200 ; 0x6ab8 ; "\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n"
0x0000295d      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/t.c:225
0x00002962      31ff           xor edi, edi
0x00002964      e8d7edffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/t.c:223
0x00002969      4889de         mov rsi, rbx                            ; .//ib:-339
0x0000296c      4889c7         mov rdi, rax
0x0000296f      e8dceeffff     call sym.imp.fputs_unlocked
0x00002974      488b1d2d6720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000297b      488d35064200.  lea rsi, str.Each_range_is_one_of:______N_____N_th_byte__character_or_field__counted_from_1____N_____from_N_th_byte__character_or_field__to_end_of_line____N_M___from_N_th_to_M_th__included__byte__character_or_field_____M____from_first_to_M_th__included__byte__character_or_field ; 0x6b88 ; "Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or field\n"
0x00002982      ba05000000     mov edx, 5
0x00002987      31ff           xor edi, edi
0x00002989      e8b2edffff     call sym.imp.dcgettext
0x0000298e      4889de         mov rsi, rbx
0x00002991      4889c7         mov rdi, rax
0x00002994      488d1d123b00.  lea rbx, [0x000064ad]                   ; "cut"
0x0000299b      e8b0eeffff     call sym.imp.fputs_unlocked
0x000029a0      488d050a3b00.  lea rax, [0x000064b1]                   ; "["
0x000029a7      488d0d443b00.  lea rcx, str.sha256sum                  ; 0x64f2 ; "sha256sum"
0x000029ae      48c744246000.  mov qword [rsp + 0x60], 0
0x000029b7      48c744246800.  mov qword [rsp + 0x68], 0
0x000029c0      4889e2         mov rdx, rsp
0x000029c3      48890424       mov qword [rsp], rax
0x000029c7      488d05e53a00.  lea rax, [0x000064b3]                   ; "test invocation"
0x000029ce      48894c2430     mov qword [rsp + 0x30], rcx
0x000029d3      488d0d223b00.  lea rcx, str.sha384sum                  ; 0x64fc ; "sha384sum"
0x000029da      4889442408     mov qword [rsp + 8], rax
0x000029df      488d05453b00.  lea rax, [0x0000652b]                   ; "coreutils"
0x000029e6      48894c2440     mov qword [rsp + 0x40], rcx
0x000029eb      488d0d143b00.  lea rcx, str.sha512sum                  ; 0x6506 ; "sha512sum"
0x000029f2      4889442410     mov qword [rsp + 0x10], rax
0x000029f7      488d05c53a00.  lea rax, [0x000064c3]                   ; "Multi-call invocation"
0x000029fe      48894c2450     mov qword [rsp + 0x50], rcx
0x00002a03      4889442418     mov qword [rsp + 0x18], rax
0x00002a08      488d05ca3a00.  lea rax, str.sha224sum                  ; 0x64d9 ; "sha224sum"
0x00002a0f      4889442420     mov qword [rsp + 0x20], rax
0x00002a14      488d05c83a00.  lea rax, str.sha2_utilities             ; 0x64e3 ; "sha2 utilities"
0x00002a1b      4889442428     mov qword [rsp + 0x28], rax
0x00002a20      4889442438     mov qword [rsp + 0x38], rax
0x00002a25      4889442448     mov qword [rsp + 0x48], rax
0x00002a2a      4889442458     mov qword [rsp + 0x58], rax
0x00002a2f      90             nop
0x00002a30      4883c210       add rdx, 0x10
0x00002a34      488b3a         mov rdi, qword [rdx]
0x00002a37      4885ff         test rdi, rdi
0x00002a3a      7413           je 0x2a4f
0x00002a3c      b904000000     mov ecx, 4
0x00002a41      4889de         mov rsi, rbx
0x00002a44      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002a46      0f97c0         seta al
0x00002a49      1c00           sbb al, 0
0x00002a4b      84c0           test al, al
0x00002a4d      75e1           jne 0x2a30
0x00002a4f      4c8b6208       mov r12, qword [rdx + 8]
0x00002a53      31ff           xor edi, edi
0x00002a55      ba05000000     mov edx, 5
0x00002a5a      488d35af3a00.  lea rsi, str.s_online_help:___s         ; 0x6510 ; "\n%s online help: <%s>\n"
0x00002a61      4d85e4         test r12, r12
0x00002a64      0f84c1000000   je 0x2b2b
0x00002a6a      e8d1ecffff     call sym.imp.dcgettext
0x00002a6f      488d0d1a4200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6c90 ; "https://www.gnu.org/software/coreutils/"
0x00002a76      488d15aa3a00.  lea rdx, str.GNU_coreutils              ; 0x6527 ; "GNU coreutils"
0x00002a7d      4889c6         mov rsi, rax
0x00002a80      bf01000000     mov edi, 1
0x00002a85      31c0           xor eax, eax
0x00002a87      e884eeffff     call sym.imp.__printf_chk
0x00002a8c      31f6           xor esi, esi
0x00002a8e      bf05000000     mov edi, 5
0x00002a93      e868eeffff     call sym.imp.setlocale
0x00002a98      4885c0         test rax, rax
0x00002a9b      741c           je 0x2ab9
0x00002a9d      488d35913a00.  lea rsi, [0x00006535]                   ; "en_"
0x00002aa4      ba03000000     mov edx, 3
0x00002aa9      4889c7         mov rdi, rax
0x00002aac      e8ffebffff     call sym.imp.strncmp
0x00002ab1      85c0           test eax, eax
0x00002ab3      0f8507010000   jne 0x2bc0
0x00002ab9      488d35793a00.  lea rsi, str.Full_documentation___s_s   ; 0x6539 ; "Full documentation <%s%s>\n"
0x00002ac0      31ff           xor edi, edi
0x00002ac2      ba05000000     mov edx, 5
0x00002ac7      e874ecffff     call sym.imp.dcgettext
0x00002acc      488d0dda3900.  lea rcx, [0x000064ad]                   ; "cut"
0x00002ad3      488d15b64100.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6c90 ; "https://www.gnu.org/software/coreutils/"
0x00002ada      4889c6         mov rsi, rax
0x00002add      bf01000000     mov edi, 1
0x00002ae2      31c0           xor eax, eax
0x00002ae4      e827eeffff     call sym.imp.__printf_chk
0x00002ae9      4939dc         cmp r12, rbx
0x00002aec      488d0dda3900.  lea rcx, [0x000064cd]                   ; " invocation"
0x00002af3      488d1da74a00.  lea rbx, [0x000075a1]
0x00002afa      480f44d9       cmove rbx, rcx
0x00002afe      488d35fb4100.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6d00 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002b05      31ff           xor edi, edi
0x00002b07      ba05000000     mov edx, 5
0x00002b0c      e82fecffff     call sym.imp.dcgettext
0x00002b11      4889d9         mov rcx, rbx
0x00002b14      4889c6         mov rsi, rax
0x00002b17      4c89e2         mov rdx, r12
0x00002b1a      bf01000000     mov edi, 1
0x00002b1f      31c0           xor eax, eax
0x00002b21      e8eaedffff     call sym.imp.__printf_chk
0x00002b26      e98bfcffff     jmp 0x27b6
0x00002b2b      e810ecffff     call sym.imp.dcgettext
0x00002b30      488d0d594100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6c90 ; "https://www.gnu.org/software/coreutils/"
0x00002b37      488d15e93900.  lea rdx, str.GNU_coreutils              ; 0x6527 ; "GNU coreutils"
0x00002b3e      4889c6         mov rsi, rax
0x00002b41      bf01000000     mov edi, 1
0x00002b46      31c0           xor eax, eax
0x00002b48      e8c3edffff     call sym.imp.__printf_chk
0x00002b4d      31f6           xor esi, esi
0x00002b4f      bf05000000     mov edi, 5
0x00002b54      e8a7edffff     call sym.imp.setlocale
0x00002b59      4885c0         test rax, rax
0x00002b5c      7418           je 0x2b76
0x00002b5e      488d35d03900.  lea rsi, [0x00006535]                   ; "en_"
0x00002b65      ba03000000     mov edx, 3
0x00002b6a      4889c7         mov rdi, rax
0x00002b6d      e83eebffff     call sym.imp.strncmp
0x00002b72      85c0           test eax, eax
0x00002b74      7543           jne 0x2bb9
0x00002b76      488d35bc3900.  lea rsi, str.Full_documentation___s_s   ; 0x6539 ; "Full documentation <%s%s>\n"
0x00002b7d      ba05000000     mov edx, 5
0x00002b82      31ff           xor edi, edi
0x00002b84      4c8d25223900.  lea r12, [0x000064ad]                   ; "cut"
0x00002b8b      488d1d3b3900.  lea rbx, [0x000064cd]                   ; " invocation"
0x00002b92      e8a9ebffff     call sym.imp.dcgettext
0x00002b97      488d0d0f3900.  lea rcx, [0x000064ad]                   ; "cut"
0x00002b9e      488d15eb4000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6c90 ; "https://www.gnu.org/software/coreutils/"
0x00002ba5      4889c6         mov rsi, rax
0x00002ba8      bf01000000     mov edi, 1
0x00002bad      31c0           xor eax, eax
0x00002baf      e85cedffff     call sym.imp.__printf_chk
0x00002bb4      e945ffffff     jmp 0x2afe
0x00002bb9      4c8d25ed3800.  lea r12, [0x000064ad]                   ; "cut"
0x00002bc0      4c8b2de16420.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002bc7      488d35ea4000.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6cb8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002bce      31ff           xor edi, edi
0x00002bd0      ba05000000     mov edx, 5
0x00002bd5      e866ebffff     call sym.imp.dcgettext
0x00002bda      4c89ee         mov rsi, r13
0x00002bdd      4889c7         mov rdi, rax
0x00002be0      e86becffff     call sym.imp.fputs_unlocked
0x00002be5      e9cffeffff     jmp 0x2ab9
0x00002bea      660f1f440000   nop word [rax + rax]
;-- compare_ranges:
0x00002bf0      8b06           mov eax, dword [rsi]                    ; .//src:62
0x00002bf2      3907           cmp dword [rdi], eax
0x00002bf4      7c0a           jl 0x2c00
0x00002bf6      0f9fc0         setg al                                 ; .//src:65
0x00002bf9      0fb6c0         movzx eax, al
0x00002bfc      c3             ret
0x00002bfd      0f1f00         nop dword [rax]
0x00002c00      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00002c05      c3             ret                                     ; .//src:66
0x00002c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- add_range_pair:
0x00002c10      55             push rbp                                ; .//src:49
0x00002c11      53             push rbx
0x00002c12      4889f3         mov rbx, rsi
0x00002c15      4889fd         mov rbp, rdi
0x00002c18      4883ec08       sub rsp, 8
0x00002c1c      488b357d6620.  mov rsi, qword [obj.n_frp]              ; .//src:50 ; [0x2092a0:8]=0
0x00002c23      483b35066520.  cmp rsi, qword [obj.n_frp_allocated]    ; [0x209130:8]=0
0x00002c2a      488b3d676620.  mov rdi, qword [obj.frp]                ; [0x209298:8]=0
0x00002c31      742d           je 0x2c60
0x00002c33      4889f0         mov rax, rsi                            ; .//src:52
0x00002c36      4883c601       add rsi, 1                              ; .//src:54
0x00002c3a      48c1e004       shl rax, 4                              ; .//src:52
0x00002c3e      4801c7         add rdi, rax
0x00002c41      48892f         mov qword [rdi], rbp
0x00002c44      48895f08       mov qword [rdi + 8], rbx                ; .//src:53
0x00002c48      488935516620.  mov qword [obj.n_frp], rsi              ; .//src:54 ; [0x2092a0:8]=0
0x00002c4f      4883c408       add rsp, 8                              ; .//src:55
0x00002c53      5b             pop rbx
0x00002c54      5d             pop rbp                                 ; ../coreutils-8.31/src/t-fields.c:72
0x00002c55      c3             ret
0x00002c56      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c60      4885ff         test rdi, rdi
0x00002c63      7443           je 0x2ca8                               ; ../coreutils-8.31/src/t-fields.c:75
0x00002c65      48b854555555.  movabs rax, 0x555555555555554
0x00002c6f      4839c6         cmp rsi, rax
0x00002c72      7759           ja 0x2ccd
0x00002c74      4889f0         mov rax, rsi
0x00002c77      48d1e8         shr rax, 1
0x00002c7a      488d740601     lea rsi, [rsi + rax + 1]
0x00002c7f      488935aa6420.  mov qword [obj.n_frp_allocated], rsi    ; [0x209130:8]=0
0x00002c86      48c1e604       shl rsi, 4
0x00002c8a      e851300000     call sym.xrealloc
0x00002c8f      488b350a6620.  mov rsi, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x00002c96      4889c7         mov rdi, rax
0x00002c99      488905f86520.  mov qword [obj.frp], rax                ; [0x209298:8]=0
0x00002ca0      eb91           jmp 0x2c33
0x00002ca2      660f1f440000   nop word [rax + rax]
0x00002ca8      4885f6         test rsi, rsi                           ; ../coreutils-8.31/src/t-fields.c:63
0x00002cab      b808000000     mov eax, 8
0x00002cb0      ba10000000     mov edx, 0x10
0x00002cb5      480f44f0       cmove rsi, rax
0x00002cb9      4889d0         mov rax, rdx
0x00002cbc      31c9           xor ecx, ecx                            ; ../coreutils-8.31/src/t-fields.c:64
0x00002cbe      48f7e6         mul rsi
0x00002cc1      700f           jo 0x2cd2                               ; ../coreutils-8.31/src/t-fields.c:63
0x00002cc3      4885c0         test rax, rax
0x00002cc6      7805           js 0x2ccd
0x00002cc8      4885c9         test rcx, rcx
0x00002ccb      74b2           je 0x2c7f
0x00002ccd      e8fe310000     call sym.xalloc_die
0x00002cd2      b901000000     mov ecx, 1
0x00002cd7      ebea           jmp 0x2cc3
0x00002cd9      0f1f80000000.  nop dword [rax]
;-- set_fields:
0x00002ce0      4157           push r15
0x00002ce2      4156           push r14                                ; .//src:23
0x00002ce4      89f0           mov eax, esi
0x00002ce6      4155           push r13
0x00002ce8      4154           push r12
0x00002cea      4989fe         mov r14, rdi
0x00002ced      55             push rbp
0x00002cee      53             push rbx
0x00002cef      4883ec28       sub rsp, 0x28
0x00002cf3      83e001         and eax, 1
0x00002cf6      8974241c       mov dword [rsp + 0x1c], esi
0x00002cfa      89442418       mov dword [rsp + 0x18], eax
0x00002cfe      741e           je 0x2d1e
0x00002d00      488d3d5b4300.  lea rdi, [0x00007062]                   ; "-"
0x00002d07      b902000000     mov ecx, 2
0x00002d0c      4c89f6         mov rsi, r14
0x00002d0f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d11      0f97c0         seta al
0x00002d14      1c00           sbb al, 0
0x00002d16      84c0           test al, al
0x00002d18      0f84fb020000   je 0x3019
0x00002d1e      4531ff         xor r15d, r15d
0x00002d21      31db           xor ebx, ebx
0x00002d23      89dd           mov ebp, ebx
0x00002d25      4531ed         xor r13d, r13d
0x00002d28      4531e4         xor r12d, r12d
0x00002d2b      48c744241001.  mov qword [rsp + 0x10], 1
0x00002d34      e985000000     jmp 0x2dbe
0x00002d39      0f1f80000000.  nop dword [rax]
0x00002d40      4180f82c       cmp r8b, 0x2c
0x00002d44      4488442408     mov byte [rsp + 8], r8b
0x00002d49      741c           je 0x2d67
0x00002d4b      e880ecffff     call sym.imp.__ctype_b_loc
0x00002d50      0fb6542408     movzx edx, byte [rsp + 8]
0x00002d55      4c8b10         mov r10, qword [rax]
0x00002d58      41f6045201     test byte [r10 + rdx*2], 1
0x00002d5d      7508           jne 0x2d67
0x00002d5f      84d2           test dl, dl                             ; .//src:62
0x00002d61      0f8539020000   jne 0x2fa0
0x00002d67      4084ed         test bpl, bpl
0x00002d6a      0f84a0000000   je 0x2e10
0x00002d70      84db           test bl, bl                             ; .//src:65
0x00002d72      0f85e8010000   jne 0x2f60
0x00002d78      4584e4         test r12b, r12b
0x00002d7b      0f85ef010000   jne 0x2f70
0x00002d81      8b442418       mov eax, dword [rsp + 0x18]
0x00002d85      85c0           test eax, eax                           ; .//src:76
0x00002d87      0f845c040000   je 0x31e9
0x00002d8d      48c744241001.  mov qword [rsp + 0x10], 1
0x00002d96      488b7c2410     mov rdi, qword [rsp + 0x10]             ; .//src:100
0x00002d9b      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00002da2      e869feffff     call sym.add_range_pair
0x00002da7      41803e00       cmp byte [r14], 0                       ; .//src:104
0x00002dab      747d           je 0x2e2a
0x00002dad      4531ff         xor r15d, r15d                          ; .//src:33
0x00002db0      4531ed         xor r13d, r13d
0x00002db3      31ed           xor ebp, ebp
0x00002db5      4531e4         xor r12d, r12d
0x00002db8      31db           xor ebx, ebx
0x00002dba      4983c601       add r14, 1
0x00002dbe      450fb606       movzx r8d, byte [r14]
0x00002dc2      4180f82d       cmp r8b, 0x2d
0x00002dc6      0f8574ffffff   jne 0x2d40
0x00002dcc      4084ed         test bpl, bpl
0x00002dcf      0f8588030000   jne 0x315d
0x00002dd5      4d85ff         test r15, r15
0x00002dd8      410f94c1       sete r9b
0x00002ddc      4120d9         and r9b, bl
0x00002ddf      4589cd         mov r13d, r9d                           ; .//src:35
0x00002de2      0f851e030000   jne 0x3106                              ; .//src:51
0x00002de8      84db           test bl, bl
0x00002dea      0f85a0010000   jne 0x2f90                              ; .//src:50
0x00002df0      4189dd         mov r13d, ebx
0x00002df3      4531ff         xor r15d, r15d
0x00002df6      bd01000000     mov ebp, 1
0x00002dfb      48c744241001.  mov qword [rsp + 0x10], 1
0x00002e04      ebb4           jmp 0x2dba
0x00002e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e10      4d85ff         test r15, r15
0x00002e13      0f84ed020000   je 0x3106                               ; .//src:100
0x00002e19      4c89fe         mov rsi, r15                            ; .//src:150
0x00002e1c      4c89ff         mov rdi, r15
0x00002e1f      e8ecfdffff     call sym.add_range_pair
0x00002e24      41803e00       cmp byte [r14], 0
0x00002e28      7583           jne 0x2dad
0x00002e2a      488b356f6420.  mov rsi, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x00002e31      4885f6         test rsi, rsi
0x00002e34      0f84e3030000   je 0x321d
0x00002e3a      488b3d576420.  mov rdi, qword [obj.frp]                ; [0x209298:8]=0
0x00002e41      488d0da8fdff.  lea rcx, sym.compare_ranges             ; .//src:155 ; 0x2bf0
0x00002e48      ba10000000     mov edx, 0x10
0x00002e4d      4531ff         xor r15d, r15d
0x00002e50      31ed           xor ebp, ebp
0x00002e52      e899e8ffff     call sym.imp.qsort
0x00002e57      488b1d426420.  mov rbx, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x00002e5e      488b0d336420.  mov rcx, qword [obj.frp]                ; [0x209298:8]=0
0x00002e65      4939df         cmp r15, rbx
0x00002e68      0f838f000000   jae 0x2efd                              ; .//src:162
0x00002e6e      6690           nop
0x00002e70      4983c701       add r15, 1
0x00002e74      4939df         cmp r15, rbx
0x00002e77      7377           jae 0x2ef0
0x00002e79      4d89fd         mov r13, r15
0x00002e7c      488d1429       lea rdx, [rcx + rbp]
0x00002e80      49c1e504       shl r13, 4
0x00002e84      4a8d3c29       lea rdi, [rcx + r13]
0x00002e88      488b4208       mov rax, qword [rdx + 8]
0x00002e8c      483b07         cmp rax, qword [rdi]
0x00002e8f      725f           jb 0x2ef0
0x00002e91      4c8d7520       lea r14, [rbp + 0x20]
0x00002e95      eb1a           jmp 0x2eb1
0x00002e97      660f1f840000.  nop word [rax + rax]
0x00002ea0      4a8d3c29       lea rdi, [rcx + r13]                    ; .//src:164
0x00002ea4      488d1429       lea rdx, [rcx + rbp]                    ; .//src:165
0x00002ea8      488b4208       mov rax, qword [rdx + 8]                ; .//src:164
0x00002eac      483907         cmp qword [rdi], rax
0x00002eaf      773f           ja 0x2ef0
0x00002eb1      48394708       cmp qword [rdi + 8], rax
0x00002eb5      4a8d3431       lea rsi, [rcx + r14]
0x00002eb9      480f434708     cmovae rax, qword [rdi + 8]
0x00002ebe      4c29fb         sub rbx, r15
0x00002ec1      48c1e304       shl rbx, 4                              ; .//src:166
0x00002ec5      48894208       mov qword [rdx + 8], rax
0x00002ec9      488d53f0       lea rdx, [rbx - 0x10]
0x00002ecd      e85eeaffff     call sym.imp.memmove
0x00002ed2      488b05c76320.  mov rax, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x00002ed9      488b0db86320.  mov rcx, qword [obj.frp]                ; [0x209298:8]=0
0x00002ee0      488d58ff       lea rbx, [rax - 1]
0x00002ee4      4c39fb         cmp rbx, r15
0x00002ee7      48891db26320.  mov qword [obj.n_frp], rbx              ; [0x2092a0:8]=0
0x00002eee      77b0           ja 0x2ea0
0x00002ef0      4883c510       add rbp, 0x10
0x00002ef4      4939df         cmp r15, rbx
0x00002ef7      0f8273ffffff   jb 0x2e70                               ; .//src:180
0x00002efd      f644241c02     test byte [rsp + 0x1c], 2
0x00002f02      0f8525010000   jne 0x302d
0x00002f08      4883c301       add rbx, 1                              ; .//src:181
0x00002f0c      4889cf         mov rdi, rcx
0x00002f0f      4889de         mov rsi, rbx
0x00002f12      48891d876320.  mov qword [obj.n_frp], rbx              ; [0x2092a0:8]=0
0x00002f19      48c1e604       shl rsi, 4
0x00002f1d      e8be2d0000     call sym.xrealloc
0x00002f22      488b15776320.  mov rdx, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x00002f29      488905686320.  mov qword [obj.frp], rax                ; [0x209298:8]=0
0x00002f30      48c1e204       shl rdx, 4
0x00002f34      488d4410f0     lea rax, [rax + rdx - 0x10]
0x00002f39      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002f40      48895008       mov qword [rax + 8], rdx
0x00002f44      488910         mov qword [rax], rdx
0x00002f47      4883c428       add rsp, 0x28
0x00002f4b      5b             pop rbx
0x00002f4c      5d             pop rbp
0x00002f4d      415c           pop r12
0x00002f4f      415d           pop r13                                 ; .//src:73
0x00002f51      415e           pop r14
0x00002f53      415f           pop r15
0x00002f55      c3             ret
0x00002f56      662e0f1f8400.  nop word cs:[rax + rax]
0x00002f60      4584e4         test r12b, r12b
0x00002f63      0f842dfeffff   je 0x2d96
0x00002f69      0f1f80000000.  nop dword [rax]
0x00002f70      4c397c2410     cmp qword [rsp + 0x10], r15
0x00002f75      0f87cd010000   ja 0x3148
0x00002f7b      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002f80      4c89fe         mov rsi, r15
0x00002f83      e888fcffff     call sym.add_range_pair
0x00002f88      e91afeffff     jmp 0x2da7
0x00002f8d      0f1f00         nop dword [rax]
0x00002f90      4c897c2410     mov qword [rsp + 0x10], r15
0x00002f95      89dd           mov ebp, ebx
0x00002f97      4531ff         xor r15d, r15d
0x00002f9a      e91bfeffff     jmp 0x2dba
0x00002f9f      90             nop
0x00002fa0      0fbec2         movsx eax, dl
0x00002fa3      8d50d0         lea edx, [rax - 0x30]                   ; .//src:112
0x00002fa6      83fa09         cmp edx, 9
0x00002fa9      0f878d020000   ja 0x323c
0x00002faf      4584ed         test r13b, r13b
0x00002fb2      745c           je 0x3010
0x00002fb4      48833d6c6120.  cmp qword [obj.num_start.6877], 0       ; [0x209128:8]=0
0x00002fbc      7452           je 0x3010
0x00002fbe      4084ed         test bpl, bpl
0x00002fc1      ba01000000     mov edx, 1
0x00002fc6      48b999999999.  movabs rcx, 0x1999999999999999          ; .//src:122
0x00002fd0      440f45e5       cmovne r12d, ebp
0x00002fd4      0f44da         cmove ebx, edx
0x00002fd7      4939cf         cmp r15, rcx
0x00002fda      0f879d010000   ja 0x317d
0x00002fe0      83e830         sub eax, 0x30
0x00002fe3      4b8d14bf       lea rdx, [r15 + r15*4]
0x00002fe7      4898           cdqe
0x00002fe9      488d0450       lea rax, [rax + rdx*2]
0x00002fed      4c39f8         cmp rax, r15
0x00002ff0      0f8287010000   jb 0x317d
0x00002ff6      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002ffa      0f847d010000   je 0x317d
0x00003000      4989c7         mov r15, rax
0x00003003      41bd01000000   mov r13d, 1
0x00003009      e9acfdffff     jmp 0x2dba
0x0000300e      6690           nop
0x00003010      4c8935116120.  mov qword [obj.num_start.6877], r14     ; [0x209128:8]=0
0x00003017      eba5           jmp 0x2fbe
0x00003019      4983c601       add r14, 1
0x0000301d      41bf01000000   mov r15d, 1
0x00003023      bb01000000     mov ebx, 1
0x00003028      e9f6fcffff     jmp 0x2d23
0x0000302d      488b01         mov rax, qword [rcx]
0x00003030      48c7055d6220.  mov qword [obj.frp], 0                  ; [0x209298:8]=0
0x0000303b      48c7055a6220.  mov qword [obj.n_frp], 0                ; [0x2092a0:8]=0
0x00003046      48c705df6020.  mov qword [obj.n_frp_allocated], 0      ; [0x209130:8]=0
0x00003051      4883f801       cmp rax, 1
0x00003055      0f878e000000   ja 0x30e9
0x0000305b      4883fb01       cmp rbx, 1
0x0000305f      7644           jbe 0x30a5
0x00003061      4889d8         mov rax, rbx
0x00003064      488d6908       lea rbp, [rcx + 8]
0x00003068      48c1e004       shl rax, 4
0x0000306c      4c8d6401f8     lea r12, [rcx + rax - 8]
0x00003071      0f1f80000000.  nop dword [rax]
0x00003078      488b4500       mov rax, qword [rbp]                    ; .//src:-39
0x0000307c      488d7801       lea rdi, [rax + 1]
0x00003080      488b4508       mov rax, qword [rbp + 8]
0x00003084      4839c7         cmp rdi, rax
0x00003087      7413           je 0x309c
0x00003089      488d70ff       lea rsi, [rax - 1]
0x0000308d      48894c2408     mov qword [rsp + 8], rcx
0x00003092      e879fbffff     call sym.add_range_pair
0x00003097      488b4c2408     mov rcx, qword [rsp + 8]
0x0000309c      4883c510       add rbp, 0x10
0x000030a0      4939ec         cmp r12, rbp
0x000030a3      75d3           jne 0x3078                              ; .//src:-35
0x000030a5      48c1e304       shl rbx, 4
0x000030a9      488b4419f8     mov rax, qword [rcx + rbx - 8]
0x000030ae      4883f8ff       cmp rax, 0xffffffffffffffff
0x000030b2      741a           je 0x30ce
0x000030b4      488d7801       lea rdi, [rax + 1]
0x000030b8      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000030bf      48894c2408     mov qword [rsp + 8], rcx
0x000030c4      e847fbffff     call sym.add_range_pair
0x000030c9      488b4c2408     mov rcx, qword [rsp + 8]
0x000030ce      4889cf         mov rdi, rcx
0x000030d1      e8aae5ffff     call sym.imp.free
0x000030d6      488b1dc36120.  mov rbx, qword [obj.n_frp]              ; [0x2092a0:8]=0
0x000030dd      488b0db46120.  mov rcx, qword [obj.frp]                ; [0x209298:8]=0
0x000030e4      e91ffeffff     jmp 0x2f08
0x000030e9      488d70ff       lea rsi, [rax - 1]
0x000030ed      bf01000000     mov edi, 1
0x000030f2      48894c2408     mov qword [rsp + 8], rcx
0x000030f7      e814fbffff     call sym.add_range_pair
0x000030fc      488b4c2408     mov rcx, qword [rsp + 8]
0x00003101      e955ffffff     jmp 0x305b                              ; .//src:92
0x00003106      f644241c04     test byte [rsp + 0x1c], 4
0x0000310b      ba05000000     mov edx, 5
0x00003110      7426           je 0x3138
0x00003112      488d35173e00.  lea rsi, str.byte_character_positions_are_numbered_from_1 ; 0x6f30 ; "byte/character positions are numbered from 1"
0x00003119      31ff           xor edi, edi
0x0000311b      e820e6ffff     call sym.imp.dcgettext
0x00003120      4889c2         mov rdx, rax
0x00003123      31ff           xor edi, edi
0x00003125      31f6           xor esi, esi
0x00003127      31c0           xor eax, eax
0x00003129      e812e8ffff     call sym.imp.error
0x0000312e      bf01000000     mov edi, 1
0x00003133      e828f6ffff     call sym.usage
0x00003138      488d35403d00.  lea rsi, str.fields_are_numbered_from_1 ; 0x6e7f ; "fields are numbered from 1"
0x0000313f      31ff           xor edi, edi                            ; .//src:20
0x00003141      e8fae5ffff     call sym.imp.dcgettext
0x00003146      ebd8           jmp 0x3120
0x00003148      488d354b3d00.  lea rsi, str.invalid_decreasing_range   ; 0x6e9a ; "invalid decreasing range"
0x0000314f      ba05000000     mov edx, 5
0x00003154      31ff           xor edi, edi
0x00003156      e8e5e5ffff     call sym.imp.dcgettext
0x0000315b      ebc3           jmp 0x3120
0x0000315d      f644241c04     test byte [rsp + 0x1c], 4
0x00003162      ba05000000     mov edx, 5
0x00003167      0f848d000000   je 0x31fa
0x0000316d      488d359c3d00.  lea rsi, str.invalid_byte_or_character_range ; 0x6f10 ; "invalid byte or character range"
0x00003174      31ff           xor edi, edi
0x00003176      e8c5e5ffff     call sym.imp.dcgettext
0x0000317b      eba3           jmp 0x3120
0x0000317d      488b1da45f20.  mov rbx, qword [obj.num_start.6877]     ; .//src:-17 ; [0x209128:8]=0
0x00003184      488d35283d00.  lea rsi, str.0123456789                 ; 0x6eb3 ; "0123456789"
0x0000318b      4889df         mov rdi, rbx
0x0000318e      e86de6ffff     call sym.imp.strspn
0x00003193      4889df         mov rdi, rbx
0x00003196      4889c6         mov rsi, rax
0x00003199      e8722d0000     call sym.xstrndup
0x0000319e      4889c7         mov rdi, rax
0x000031a1      4889c3         mov rbx, rax
0x000031a4      e897240000     call sym.quote                          ; .//src:-12
0x000031a9      f644241c04     test byte [rsp + 0x1c], 4
0x000031ae      4889c5         mov rbp, rax                            ; .//src:-79
0x000031b1      ba05000000     mov edx, 5
0x000031b6      7455           je 0x320d
0x000031b8      488d35c93d00.  lea rsi, str.byte_character_offset__s_is_too_large ; 0x6f88 ; "byte/character offset %s is too large"
0x000031bf      31ff           xor edi, edi                            ; .//src:-109
0x000031c1      e87ae5ffff     call sym.imp.dcgettext
0x000031c6      4889c2         mov rdx, rax
0x000031c9      4889e9         mov rcx, rbp
0x000031cc      31f6           xor esi, esi
0x000031ce      31ff           xor edi, edi
0x000031d0      31c0           xor eax, eax
0x000031d2      e869e7ffff     call sym.imp.error
0x000031d7      4889df         mov rdi, rbx
0x000031da      e8a1e4ffff     call sym.imp.free
0x000031df      bf01000000     mov edi, 1
0x000031e4      e877f5ffff     call sym.usage
0x000031e9      ba05000000     mov edx, 5
0x000031ee      488d356b3d00.  lea rsi, str.invalid_range_with_no_endpoint: ; .//src:-133 ; 0x6f60 ; "invalid range with no endpoint: -"
0x000031f5      e95affffff     jmp 0x3154
0x000031fa      488d356a3c00.  lea rsi, str.invalid_field_range        ; 0x6e6b ; "invalid field range"
0x00003201      31ff           xor edi, edi
0x00003203      e838e5ffff     call sym.imp.dcgettext
0x00003208      e913ffffff     jmp 0x3120
0x0000320d      488d35aa3c00.  lea rsi, str.field_number__s_is_too_large ; 0x6ebe ; "field number %s is too large"
0x00003214      31ff           xor edi, edi
0x00003216      e825e5ffff     call sym.imp.dcgettext
0x0000321b      eba9           jmp 0x31c6
0x0000321d      f644241c04     test byte [rsp + 0x1c], 4
0x00003222      ba05000000     mov edx, 5
0x00003227      7453           je 0x327c
0x00003229      488d35a83d00.  lea rsi, str.missing_list_of_byte_character_positions ; 0x6fd8 ; "missing list of byte/character positions"
0x00003230      31ff           xor edi, edi
0x00003232      e809e5ffff     call sym.imp.dcgettext
0x00003237      e9e4feffff     jmp 0x3120
0x0000323c      4c89f7         mov rdi, r14
0x0000323f      e8fc230000     call sym.quote
0x00003244      f644241c04     test byte [rsp + 0x1c], 4
0x00003249      4889c3         mov rbx, rax
0x0000324c      ba05000000     mov edx, 5
0x00003251      7435           je 0x3288
0x00003253      488d35563d00.  lea rsi, str.invalid_byte_character_position__s ; 0x6fb0 ; "invalid byte/character position %s"
0x0000325a      31ff           xor edi, edi
0x0000325c      e8dfe4ffff     call sym.imp.dcgettext
0x00003261      4889c2         mov rdx, rax
0x00003264      31ff           xor edi, edi
0x00003266      4889d9         mov rcx, rbx
0x00003269      31f6           xor esi, esi
0x0000326b      31c0           xor eax, eax
0x0000326d      e8cee6ffff     call sym.imp.error
0x00003272      bf01000000     mov edi, 1
0x00003277      e8e4f4ffff     call sym.usage
0x0000327c      488d356f3c00.  lea rsi, str.missing_list_of_fields     ; 0x6ef2 ; "missing list of fields"
0x00003283      e9ccfeffff     jmp 0x3154                              ; .//src:-83
0x00003288      488d354c3c00.  lea rsi, str.invalid_field_value__s     ; 0x6edb ; "invalid field value %s"
0x0000328f      31ff           xor edi, edi
0x00003291      e8aae4ffff     call sym.imp.dcgettext
0x00003296      ebc9           jmp 0x3261
0x00003298      0f1f84000000.  nop dword [rax + rax]
;-- reset_fields:
0x000032a0      4883ec08       sub rsp, 8
0x000032a4      488b3ded5f20.  mov rdi, qword [obj.frp]                ; [0x209298:8]=0
0x000032ab      48c705ea5f20.  mov qword [obj.n_frp], 0                ; [0x2092a0:8]=0
0x000032b6      48c7056f5e20.  mov qword [obj.n_frp_allocated], 0      ; [0x209130:8]=0
0x000032c1      e8bae3ffff     call sym.imp.free
0x000032c6      48c705c75f20.  mov qword [obj.frp], 0                  ; [0x209298:8]=0
0x000032d1      4883c408       add rsp, 8
0x000032d5      c3             ret
0x000032d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x000032e0      48893d595e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x209140:8]=0
0x000032e7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000032e8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000032f0      40883d415e20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x209138:1]=0
0x000032f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000032f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003300      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003301      53             push rbx
0x00003302      4883ec08       sub rsp, 8
0x00003306      488b3d9b5d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000330d      e8fe2d0000     call sym.close_stream
0x00003312      85c0           test eax, eax
0x00003314      7416           je 0x332c
0x00003316      e885e3ffff     call sym.imp.__errno_location
0x0000331b      803d165e2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x209138:1]=0
0x00003322      4889c3         mov rbx, rax
0x00003325      741c           je 0x3343
0x00003327      833820         cmp dword [rax], 0x20
0x0000332a      7517           jne 0x3343
0x0000332c      488b3dad5d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00003333      e8d82d0000     call sym.close_stream
0x00003338      85c0           test eax, eax
0x0000333a      7546           jne 0x3382
0x0000333c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003340      5b             pop rbx
0x00003341      5d             pop rbp
0x00003342      c3             ret
0x00003343      488d35bc3c00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7006 ; "write error"
0x0000334a      31ff           xor edi, edi
0x0000334c      ba05000000     mov edx, 5
0x00003351      e8eae3ffff     call sym.imp.dcgettext
0x00003356      488b3de35d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x209140:8]=0
0x0000335d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003360      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003363      7428           je 0x338d
0x00003365      e8d6200000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000336a      8b33           mov esi, dword [rbx]
0x0000336c      488d159f3c00.  lea rdx, str.s:__s                      ; 0x7012 ; "%s: %s"
0x00003373      4889c1         mov rcx, rax
0x00003376      4989e8         mov r8, rbp
0x00003379      31ff           xor edi, edi
0x0000337b      31c0           xor eax, eax
0x0000337d      e8bee5ffff     call sym.imp.error
0x00003382      8b3d985c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209020:4]=1
0x00003388      e833e3ffff     call sym.imp._exit
0x0000338d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000338f      488d15803c00.  lea rdx, [0x00007016]                   ; "%s"
0x00003396      4889c1         mov rcx, rax
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e89ee5ffff     call sym.imp.error
0x000033a2      ebde           jmp 0x3382
0x000033a4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ae      6690           nop
;-- fdadvise:
0x000033b0      e95be4ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000033b5      90             nop
0x000033b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000033c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000033c3      741b           je 0x33e0
0x000033c5      53             push rbx
0x000033c6      89f3           mov ebx, esi
0x000033c8      e8b3e4ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000033cd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000033cf      31d2           xor edx, edx
0x000033d1      31f6           xor esi, esi
0x000033d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000033d4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000033d6      e935e4ffff     jmp sym.imp.posix_fadvise
0x000033db      0f1f440000     nop dword [rax + rax]
0x000033e0      f3c3           ret
0x000033e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ec      0f1f4000       nop dword [rax]
;-- getndelim2:
0x000033f0      4157           push r15
0x000033f2      4156           push r14
0x000033f4      4155           push r13
0x000033f6      4154           push r12
0x000033f8      55             push rbp
0x000033f9      53             push rbx
0x000033fa      4883ec68       sub rsp, 0x68
0x000033fe      4c8b3f         mov r15, qword [rdi]
0x00003401      4c8b26         mov r12, qword [rsi]
0x00003404      64488b1c2528.  mov rbx, qword fs:[0x28]
0x0000340d      48895c2458     mov qword [rsp + 0x58], rbx
0x00003412      31db           xor ebx, ebx
0x00003414      48897c2440     mov qword [rsp + 0x40], rdi
0x00003419      4889742448     mov qword [rsp + 0x48], rsi
0x0000341e      4d85ff         test r15, r15
0x00003421      4889542420     mov qword [rsp + 0x20], rdx
0x00003426      48894c2408     mov qword [rsp + 8], rcx
0x0000342b      4489442414     mov dword [rsp + 0x14], r8d
0x00003430      44894c2434     mov dword [rsp + 0x34], r9d
0x00003435      4c8bb424a000.  mov r14, qword [rsp + 0xa0]
0x0000343d      0f848d020000   je 0x36d0
0x00003443      4c3b642420     cmp r12, qword [rsp + 0x20]
0x00003448      733e           jae 0x3488
0x0000344a      488b442440     mov rax, qword [rsp + 0x40]
0x0000344f      4c8938         mov qword [rax], r15
0x00003452      488b442448     mov rax, qword [rsp + 0x48]
0x00003457      4c8920         mov qword [rax], r12
0x0000345a      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00003461      488b5c2458     mov rbx, qword [rsp + 0x58]
0x00003466      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000346f      0f85f5020000   jne 0x376a
0x00003475      4883c468       add rsp, 0x68
0x00003479      5b             pop rbx
0x0000347a      5d             pop rbp
0x0000347b      415c           pop r12
0x0000347d      415d           pop r13
0x0000347f      415e           pop r14
0x00003481      415f           pop r15
0x00003483      c3             ret
0x00003484      0f1f4000       nop dword [rax]
0x00003488      4c89e5         mov rbp, r12
0x0000348b      482b6c2420     sub rbp, qword [rsp + 0x20]
0x00003490      0f94c2         sete dl
0x00003493      4c3b642408     cmp r12, qword [rsp + 8]
0x00003498      0f93c0         setae al
0x0000349b      84c2           test dl, al
0x0000349d      75ab           jne 0x344a
0x0000349f      8b442414       mov eax, dword [rsp + 0x14]
0x000034a3      83f8ff         cmp eax, 0xffffffff
0x000034a6      0f8424010000   je 0x35d0
0x000034ac      8b5c2434       mov ebx, dword [rsp + 0x34]
0x000034b0      83fbff         cmp ebx, 0xffffffff
0x000034b3      0f44d8         cmove ebx, eax
0x000034b6      895c2434       mov dword [rsp + 0x34], ebx
0x000034ba      488b442420     mov rax, qword [rsp + 0x20]
0x000034bf      4c897c2428     mov qword [rsp + 0x28], r15
0x000034c4      498d1c07       lea rbx, [r15 + rax]
0x000034c8      488d442450     lea rax, [rsp + 0x50]
0x000034cd      4889442418     mov qword [rsp + 0x18], rax
0x000034d2      e992000000     jmp 0x3569
0x000034d7      660f1f840000.  nop word [rax + rax]
0x000034e0      837c2414ff     cmp dword [rsp + 0x14], 0xffffffff
0x000034e5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000034ea      0f85a0010000   jne 0x3690
0x000034f0      498d4d01       lea rcx, [r13 + 1]
0x000034f4      4531ed         xor r13d, r13d
0x000034f7      488b7c2408     mov rdi, qword [rsp + 8]
0x000034fc      4939fc         cmp r12, rdi
0x000034ff      7309           jae 0x350a
0x00003501      4839cd         cmp rbp, rcx
0x00003504      0f82e6000000   jb 0x35f0
0x0000350a      4883fd01       cmp rbp, 1
0x0000350e      7636           jbe 0x3546
0x00003510      488d4dff       lea rcx, [rbp - 1]
0x00003514      48394c2450     cmp qword [rsp + 0x50], rcx
0x00003519      480f464c2450   cmovbe rcx, qword [rsp + 0x50]
0x0000351f      4d85ff         test r15, r15
0x00003522      0f84b8000000   je 0x35e0
0x00003528      4889ca         mov rdx, rcx
0x0000352b      4c89fe         mov rsi, r15
0x0000352e      4889df         mov rdi, rbx
0x00003531      48894c2438     mov qword [rsp + 0x38], rcx
0x00003536      e835e3ffff     call sym.imp.memcpy
0x0000353b      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00003540      4801cb         add rbx, rcx
0x00003543      4829cd         sub rbp, rcx
0x00003546      4d85ff         test r15, r15
0x00003549      7415           je 0x3560
0x0000354b      488b742450     mov rsi, qword [rsp + 0x50]
0x00003550      4c89f7         mov rdi, r14
0x00003553      e8382c0000     call sym.freadseek
0x00003558      85c0           test eax, eax
0x0000355a      0f8500020000   jne 0x3760
0x00003560      4584ed         test r13b, r13b
0x00003563      0f85bf010000   jne 0x3728
0x00003569      488b742418     mov rsi, qword [rsp + 0x18]
0x0000356e      4c89f7         mov rdi, r14
0x00003571      e87a2a0000     call sym.freadptr
0x00003576      4885c0         test rax, rax
0x00003579      4989c7         mov r15, rax
0x0000357c      0f855effffff   jne 0x34e0
0x00003582      498b4608       mov rax, qword [r14 + 8]
0x00003586      493b4610       cmp rax, qword [r14 + 0x10]
0x0000358a      0f8370010000   jae 0x3700
0x00003590      488d5001       lea rdx, [rax + 1]
0x00003594      49895608       mov qword [r14 + 8], rdx
0x00003598      0fb600         movzx eax, byte [rax]
0x0000359b      89442430       mov dword [rsp + 0x30], eax
0x0000359f      8b442430       mov eax, dword [rsp + 0x30]
0x000035a3      39442414       cmp dword [rsp + 0x14], eax
0x000035a7      b902000000     mov ecx, 2
0x000035ac      48c744245001.  mov qword [rsp + 0x50], 1
0x000035b5      410f94c5       sete r13b
0x000035b9      39442434       cmp dword [rsp + 0x34], eax
0x000035bd      0f94c0         sete al
0x000035c0      4109c5         or r13d, eax
0x000035c3      e92fffffff     jmp 0x34f7
0x000035c8      0f1f84000000.  nop dword [rax + rax]
0x000035d0      8b442434       mov eax, dword [rsp + 0x34]
0x000035d4      89442414       mov dword [rsp + 0x14], eax
0x000035d8      e9ddfeffff     jmp 0x34ba
0x000035dd      0f1f00         nop dword [rax]
0x000035e0      0fb6442430     movzx eax, byte [rsp + 0x30]
0x000035e5      8803           mov byte [rbx], al
0x000035e7      e954ffffff     jmp 0x3540
0x000035ec      0f1f4000       nop dword [rax]
0x000035f0      498d442440     lea rax, [r12 + 0x40]
0x000035f5      4b8d1424       lea rdx, [r12 + r12]
0x000035f9      4983fc3f       cmp r12, 0x3f
0x000035fd      480f46d0       cmovbe rdx, rax
0x00003601      482b5c2428     sub rbx, qword [rsp + 0x28]
0x00003606      4889d6         mov rsi, rdx
0x00003609      4829de         sub rsi, rbx
0x0000360c      488d040b       lea rax, [rbx + rcx]
0x00003610      4839ce         cmp rsi, rcx
0x00003613      480f42d0       cmovb rdx, rax
0x00003617      4939d4         cmp r12, rdx
0x0000361a      7364           jae 0x3680
0x0000361c      4839fa         cmp rdx, rdi
0x0000361f      775f           ja 0x3680
0x00003621      488b442420     mov rax, qword [rsp + 0x20]
0x00003626      4839c2         cmp rdx, rax
0x00003629      7916           jns 0x3641
0x0000362b      48ba00000000.  movabs rdx, 0x8000000000000000
0x00003635      4801c2         add rdx, rax
0x00003638      4939d4         cmp r12, rdx
0x0000363b      0f841f010000   je 0x3760
0x00003641      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003646      4889d5         mov rbp, rdx
0x00003649      4889d6         mov rsi, rdx
0x0000364c      4829dd         sub rbp, rbx
0x0000364f      4889542438     mov qword [rsp + 0x38], rdx
0x00003654      e897e2ffff     call sym.imp.realloc
0x00003659      4885c0         test rax, rax
0x0000365c      0f84fe000000   je 0x3760
0x00003662      488b542438     mov rdx, qword [rsp + 0x38]
0x00003667      4801c3         add rbx, rax
0x0000366a      4889442428     mov qword [rsp + 0x28], rax
0x0000366f      4989d4         mov r12, rdx
0x00003672      e993feffff     jmp 0x350a
0x00003677      660f1f840000.  nop word [rax + rax]
0x00003680      488b542408     mov rdx, qword [rsp + 8]
0x00003685      eb9a           jmp 0x3621
0x00003687      660f1f840000.  nop word [rax + rax]
0x00003690      8b542434       mov edx, dword [rsp + 0x34]
0x00003694      8b742414       mov esi, dword [rsp + 0x14]
0x00003698      4c89e9         mov rcx, r13
0x0000369b      4889c7         mov rdi, rax
0x0000369e      e8cd000000     call sym.memchr2
0x000036a3      4885c0         test rax, rax
0x000036a6      0f8444feffff   je 0x34f0
0x000036ac      4c29f8         sub rax, r15
0x000036af      41bd01000000   mov r13d, 1
0x000036b5      488d5001       lea rdx, [rax + 1]
0x000036b9      488d4802       lea rcx, [rax + 2]
0x000036bd      4889542450     mov qword [rsp + 0x50], rdx
0x000036c2      e930feffff     jmp 0x34f7
0x000036c7      660f1f840000.  nop word [rax + rax]
0x000036d0      4883f940       cmp rcx, 0x40                           ; segment.PHDR
0x000036d4      41bc40000000   mov r12d, 0x40                          ; segment.PHDR
0x000036da      4c0f46e1       cmovbe r12, rcx
0x000036de      4c89e7         mov rdi, r12
0x000036e1      e8aae1ffff     call sym.imp.malloc
0x000036e6      4885c0         test rax, rax
0x000036e9      4989c7         mov r15, rax
0x000036ec      0f8551fdffff   jne 0x3443
0x000036f2      e963fdffff     jmp 0x345a
0x000036f7      660f1f840000.  nop word [rax + rax]
0x00003700      4c89f7         mov rdi, r14
0x00003703      e868dfffff     call sym.imp.__uflow
0x00003708      83f8ff         cmp eax, 0xffffffff
0x0000370b      89442430       mov dword [rsp + 0x30], eax
0x0000370f      0f858afeffff   jne 0x359f
0x00003715      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x0000371a      4c39fb         cmp rbx, r15
0x0000371d      750e           jne 0x372d
0x0000371f      e926fdffff     jmp 0x344a
0x00003724      0f1f4000       nop dword [rax]
0x00003728      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x0000372d      488b742440     mov rsi, qword [rsp + 0x40]
0x00003732      488b442420     mov rax, qword [rsp + 0x20]
0x00003737      c60300         mov byte [rbx], 0
0x0000373a      4c893e         mov qword [rsi], r15
0x0000373d      488b742448     mov rsi, qword [rsp + 0x48]
0x00003742      4c01f8         add rax, r15
0x00003745      4829c3         sub rbx, rax
0x00003748      4889d8         mov rax, rbx
0x0000374b      4c8926         mov qword [rsi], r12
0x0000374e      0f850dfdffff   jne 0x3461
0x00003754      e901fdffff     jmp 0x345a
0x00003759      0f1f80000000.  nop dword [rax]
0x00003760      4c8b7c2428     mov r15, qword [rsp + 0x28]
0x00003765      e9e0fcffff     jmp 0x344a
0x0000376a      e801e0ffff     call sym.imp.__stack_chk_fail
0x0000376f      90             nop
;-- memchr2:
0x00003770      4038d6         cmp sil, dl                             ; ../coreutils-8.31/lib/memchr2.c:37
0x00003773      0f8497010000   je 0x3910
0x00003779      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/memchr2.c:62
0x0000377c      4157           push r15                                ; ../coreutils-8.31/lib/memchr2.c:37
0x0000377e      4189d3         mov r11d, edx
0x00003781      4156           push r14
0x00003783      4155           push r13
0x00003785      4154           push r12
0x00003787      55             push rbp
0x00003788      53             push rbx
0x00003789      89f3           mov ebx, esi
0x0000378b      7447           je 0x37d4                               ; ../coreutils-8.31/lib/memchr2.c:62
0x0000378d      40f6c707       test dil, 7                             ; ../coreutils-8.31/lib/memchr2.c:63
0x00003791      7441           je 0x37d4
0x00003793      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/memchr2.c:67
0x00003796      38d0           cmp al, dl
0x00003798      0f845a010000   je 0x38f8
0x0000379e      4038f0         cmp al, sil
0x000037a1      7527           jne 0x37ca
0x000037a3      e950010000     jmp 0x38f8
0x000037a8      0f1f84000000.  nop dword [rax + rax]
0x000037b0      40f6c707       test dil, 7                             ; ../coreutils-8.31/lib/memchr2.c:63
0x000037b4      741e           je 0x37d4
0x000037b6      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/memchr2.c:67
0x000037b9      4438d8         cmp al, r11b
0x000037bc      0f8436010000   je 0x38f8
0x000037c2      38d8           cmp al, bl
0x000037c4      0f842e010000   je 0x38f8
0x000037ca      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/memchr2.c:69
0x000037ce      4883e901       sub rcx, 1                              ; ../coreutils-8.31/lib/memchr2.c:62
0x000037d2      75dc           jne 0x37b0
0x000037d4      4189f4         mov r12d, esi                           ; ../coreutils-8.31/lib/memchr2.c:82
0x000037d7      400fb6c6       movzx eax, sil
0x000037db      4189d5         mov r13d, edx                           ; ../coreutils-8.31/lib/memchr2.c:83
0x000037de      41c1e408       shl r12d, 8                             ; ../coreutils-8.31/lib/memchr2.c:82
0x000037e2      41c1e508       shl r13d, 8                             ; ../coreutils-8.31/lib/memchr2.c:83
0x000037e6      450fb7e4       movzx r12d, r12w                        ; ../coreutils-8.31/lib/memchr2.c:82
0x000037ea      450fb7ed       movzx r13d, r13w                        ; ../coreutils-8.31/lib/memchr2.c:83
0x000037ee      4109c4         or r12d, eax                            ; ../coreutils-8.31/lib/memchr2.c:82
0x000037f1      0fb6c2         movzx eax, dl                           ; ../coreutils-8.31/lib/memchr2.c:83
0x000037f4      4d63e4         movsxd r12, r12d                        ; ../coreutils-8.31/lib/memchr2.c:82
0x000037f7      4109c5         or r13d, eax                            ; ../coreutils-8.31/lib/memchr2.c:83
0x000037fa      4c89e0         mov rax, r12                            ; ../coreutils-8.31/lib/memchr2.c:84
0x000037fd      4d63ed         movsxd r13, r13d                        ; ../coreutils-8.31/lib/memchr2.c:83
0x00003800      48c1e010       shl rax, 0x10                           ; ../coreutils-8.31/lib/memchr2.c:84
0x00003804      4909c4         or r12, rax
0x00003807      4c89e8         mov rax, r13                            ; ../coreutils-8.31/lib/memchr2.c:85
0x0000380a      48c1e010       shl rax, 0x10
0x0000380e      4909c5         or r13, rax
0x00003811      4c89e0         mov rax, r12                            ; ../coreutils-8.31/lib/memchr2.c:89
0x00003814      48c1e020       shl rax, 0x20
0x00003818      4909c4         or r12, rax
0x0000381b      4c89e8         mov rax, r13                            ; ../coreutils-8.31/lib/memchr2.c:90
0x0000381e      48c1e020       shl rax, 0x20
0x00003822      4909c5         or r13, rax
0x00003825      4883f907       cmp rcx, 7                              ; ../coreutils-8.31/lib/memchr2.c:140
0x00003829      0f86ed000000   jbe 0x391c
0x0000382f      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/memchr2.c:142
0x00003832      4d89e1         mov r9, r12
0x00003835      48bdfffefefe.  movabs rbp, 0xfefefefefefefeff          ; ../coreutils-8.31/lib/memchr2.c:145
0x0000383f      49bf80808080.  movabs r15, 0x8080808080808080          ; ../coreutils-8.31/lib/memchr2.c:147
0x00003849      4931c1         xor r9, rax                             ; ../coreutils-8.31/lib/memchr2.c:142
0x0000384c      4c31e8         xor rax, r13                            ; ../coreutils-8.31/lib/memchr2.c:143
0x0000384f      4d8d0429       lea r8, [r9 + rbp]                      ; ../coreutils-8.31/lib/memchr2.c:145
0x00003853      49f7d1         not r9
0x00003856      4d21c8         and r8, r9
0x00003859      4c8d0c28       lea r9, [rax + rbp]                     ; ../coreutils-8.31/lib/memchr2.c:146
0x0000385d      48f7d0         not rax
0x00003860      4c21c8         and rax, r9
0x00003863      4c09c0         or rax, r8
0x00003866      4c85f8         test rax, r15                           ; ../coreutils-8.31/lib/memchr2.c:145
0x00003869      0f85b2000000   jne 0x3921
0x0000386f      4c8d49f8       lea r9, [rcx - 8]
0x00003873      4889f8         mov rax, rdi
0x00003876      4d89ce         mov r14, r9
0x00003879      4183e607       and r14d, 7
0x0000387d      eb2d           jmp 0x38ac
0x0000387f      90             nop
0x00003880      488b38         mov rdi, qword [rax]                    ; ../coreutils-8.31/lib/memchr2.c:142
0x00003883      4989fa         mov r10, rdi
0x00003886      4c31ef         xor rdi, r13                            ; ../coreutils-8.31/lib/memchr2.c:143
0x00003889      4d31e2         xor r10, r12                            ; ../coreutils-8.31/lib/memchr2.c:142
0x0000388c      4d8d042a       lea r8, [r10 + rbp]                     ; ../coreutils-8.31/lib/memchr2.c:145
0x00003890      49f7d2         not r10
0x00003893      4d21d0         and r8, r10
0x00003896      4c8d142f       lea r10, [rdi + rbp]                    ; ../coreutils-8.31/lib/memchr2.c:146
0x0000389a      48f7d7         not rdi
0x0000389d      4c21d7         and rdi, r10
0x000038a0      4909f8         or r8, rdi
0x000038a3      4d85f8         test r8, r15                            ; ../coreutils-8.31/lib/memchr2.c:145
0x000038a6      7510           jne 0x38b8
0x000038a8      4983e908       sub r9, 8
0x000038ac      4883c008       add rax, 8                              ; ../coreutils-8.31/lib/memchr2.c:149
0x000038b0      4d39f1         cmp r9, r14                             ; ../coreutils-8.31/lib/memchr2.c:140
0x000038b3      4c89c9         mov rcx, r9                             ; ../coreutils-8.31/lib/memchr2.c:150
0x000038b6      75c8           jne 0x3880                              ; ../coreutils-8.31/lib/memchr2.c:140
0x000038b8      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/memchr2.c:162
0x000038bb      7428           je 0x38e5
0x000038bd      0fb638         movzx edi, byte [rax]                   ; ../coreutils-8.31/lib/memchr2.c:164
0x000038c0      4038d7         cmp dil, dl
0x000038c3      7422           je 0x38e7
0x000038c5      4038f7         cmp dil, sil
0x000038c8      741d           je 0x38e7
0x000038ca      488d1408       lea rdx, [rax + rcx]
0x000038ce      eb0c           jmp 0x38dc
0x000038d0      0fb608         movzx ecx, byte [rax]
0x000038d3      38d9           cmp cl, bl
0x000038d5      7410           je 0x38e7
0x000038d7      4438d9         cmp cl, r11b
0x000038da      740b           je 0x38e7
0x000038dc      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/memchr2.c:162
0x000038e0      4839d0         cmp rax, rdx
0x000038e3      75eb           jne 0x38d0
0x000038e5      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memchr2.c:168
0x000038e7      5b             pop rbx                                 ; ../coreutils-8.31/lib/memchr2.c:169
0x000038e8      5d             pop rbp
0x000038e9      415c           pop r12
0x000038eb      415d           pop r13
0x000038ed      415e           pop r14
0x000038ef      415f           pop r15
0x000038f1      c3             ret
0x000038f2      660f1f440000   nop word [rax + rax]
0x000038f8      5b             pop rbx
0x000038f9      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/memchr2.c:69
0x000038fc      5d             pop rbp
0x000038fd      415c           pop r12
0x000038ff      415d           pop r13
0x00003901      415e           pop r14
0x00003903      415f           pop r15
0x00003905      c3             ret
0x00003906      662e0f1f8400.  nop word cs:[rax + rax]
0x00003910      400fb6f6       movzx esi, sil
0x00003914      4889ca         mov rdx, rcx
0x00003917      e904dfffff     jmp sym.imp.memchr
0x0000391c      4889f8         mov rax, rdi
0x0000391f      eb97           jmp 0x38b8
0x00003921      4889f8         mov rax, rdi
0x00003924      eb97           jmp 0x38bd
0x00003926      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_program_name:
0x00003930      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003933      53             push rbx
0x00003934      7477           je 0x39ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00003936      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000393b      4889fb         mov rbx, rdi
0x0000393e      e86ddeffff     call sym.imp.strrchr
0x00003943      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003946      7455           je 0x399d
0x00003948      4c8d4001       lea r8, [rax + 1]
0x0000394c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000394f      4829da         sub rdx, rbx
0x00003952      4883fa06       cmp rdx, 6
0x00003956      7e45           jle 0x399d
0x00003958      488d70fa       lea rsi, [rax - 6]
0x0000395c      488d3df53600.  lea rdi, str..libs                      ; 0x7058 ; "/.libs/"
0x00003963      b907000000     mov ecx, 7
0x00003968      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000396a      0f97c2         seta dl
0x0000396d      80da00         sbb dl, 0
0x00003970      84d2           test dl, dl
0x00003972      7529           jne 0x399d
0x00003974      488d3de53600.  lea rdi, [0x00007060]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000397b      b903000000     mov ecx, 3
0x00003980      4c89c6         mov rsi, r8
0x00003983      4c89c3         mov rbx, r8
0x00003986      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003988      0f97c2         seta dl
0x0000398b      80da00         sbb dl, 0
0x0000398e      84d2           test dl, dl
0x00003990      750b           jne 0x399d
0x00003992      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003996      48891d035720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x0000399d      48891da45720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x209148:8]=0
0x000039a4      48891d1d5720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090c8:8]=0
0x000039ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000039ac      c3             ret
0x000039ad      488b0d2c5720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x000039b4      488d3d653600.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x7020 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000039bb      ba37000000     mov edx, 0x37                           ; '7'
0x000039c0      be01000000     mov esi, 1
0x000039c5      e8c6dfffff     call sym.imp.fwrite
0x000039ca      e8c1dcffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000039cf      90             nop
;-- gettext_quote.part.1:
0x000039d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000039d1      53             push rbx
0x000039d2      4889fd         mov rbp, rdi
0x000039d5      89f3           mov ebx, esi
0x000039d7      4883ec08       sub rsp, 8
0x000039db      e880290000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000039e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000039e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000039e6      80fa55         cmp dl, 0x55
0x000039e9      7475           je 0x3a60
0x000039eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000039ee      7420           je 0x3a10
0x000039f0      488d057c3600.  lea rax, str.l______l                   ; 0x7073 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039f7      488d15773600.  lea rdx, [0x00007075]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039fe      83fb09         cmp ebx, 9
0x00003a01      480f45c2       cmovne rax, rdx
0x00003a05      4883c408       add rsp, 8
0x00003a09      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00003a0a      5d             pop rbp
0x00003a0b      c3             ret
0x00003a0c      0f1f4000       nop dword [rax]
0x00003a10      0fb65001       movzx edx, byte [rax + 1]
0x00003a14      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a17      80fa42         cmp dl, 0x42
0x00003a1a      75d4           jne 0x39f0
0x00003a1c      80780231       cmp byte [rax + 2], 0x31
0x00003a20      75ce           jne 0x39f0
0x00003a22      80780338       cmp byte [rax + 3], 0x38
0x00003a26      75c8           jne 0x39f0
0x00003a28      80780430       cmp byte [rax + 4], 0x30
0x00003a2c      75c2           jne 0x39f0
0x00003a2e      80780533       cmp byte [rax + 5], 0x33
0x00003a32      75bc           jne 0x39f0
0x00003a34      80780630       cmp byte [rax + 6], 0x30
0x00003a38      75b6           jne 0x39f0
0x00003a3a      80780700       cmp byte [rax + 7], 0
0x00003a3e      75b0           jne 0x39f0
0x00003a40      807d0060       cmp byte [rbp], 0x60
0x00003a44      488d05213600.  lea rax, [0x0000706c]
0x00003a4b      488d151e3600.  lea rdx, [0x00007070]
0x00003a52      480f45c2       cmovne rax, rdx
0x00003a56      4883c408       add rsp, 8
0x00003a5a      5b             pop rbx
0x00003a5b      5d             pop rbp
0x00003a5c      c3             ret
0x00003a5d      0f1f00         nop dword [rax]
0x00003a60      0fb65001       movzx edx, byte [rax + 1]
0x00003a64      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a67      80fa54         cmp dl, 0x54
0x00003a6a      7584           jne 0x39f0
0x00003a6c      0fb65002       movzx edx, byte [rax + 2]
0x00003a70      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a73      80fa46         cmp dl, 0x46
0x00003a76      0f8574ffffff   jne 0x39f0
0x00003a7c      8078032d       cmp byte [rax + 3], 0x2d
0x00003a80      0f856affffff   jne 0x39f0
0x00003a86      80780438       cmp byte [rax + 4], 0x38
0x00003a8a      0f8560ffffff   jne 0x39f0
0x00003a90      80780500       cmp byte [rax + 5], 0
0x00003a94      0f8556ffffff   jne 0x39f0
0x00003a9a      807d0060       cmp byte [rbp], 0x60
0x00003a9e      488d05bf3500.  lea rax, [0x00007064]                   ; "\u2018"
0x00003aa5      488d15bc3500.  lea rdx, [0x00007068]                   ; "\u2019"
0x00003aac      480f45c2       cmovne rax, rdx
0x00003ab0      4883c408       add rsp, 8
0x00003ab4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003ab5      5d             pop rbp
0x00003ab6      c3             ret
0x00003ab7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003ac0      4157           push r15
0x00003ac2      4156           push r14
0x00003ac4      4589c7         mov r15d, r8d
0x00003ac7      4155           push r13
0x00003ac9      4154           push r12
0x00003acb      4989fe         mov r14, rdi
0x00003ace      55             push rbp
0x00003acf      53             push rbx
0x00003ad0      4489cb         mov ebx, r9d
0x00003ad3      4989f5         mov r13, rsi
0x00003ad6      4889cd         mov rbp, rcx
0x00003ad9      83e302         and ebx, 2
0x00003adc      4881ecb80000.  sub rsp, 0xb8
0x00003ae3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00003aeb      4889542410     mov qword [rsp + 0x10], rdx
0x00003af0      4489442408     mov dword [rsp + 8], r8d
0x00003af5      44894c2478     mov dword [rsp + 0x78], r9d
0x00003afa      4889442420     mov qword [rsp + 0x20], rax
0x00003aff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003b07      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00003b0c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003b14      4889442460     mov qword [rsp + 0x60], rax
0x00003b19      64488b042528.  mov rax, qword fs:[0x28]
0x00003b22      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003b2a      31c0           xor eax, eax
0x00003b2c      e81fdcffff     call sym.imp.__ctype_get_mb_cur_max
0x00003b31      4183ff0a       cmp r15d, 0xa
0x00003b35      4889442458     mov qword [rsp + 0x58], rax
0x00003b3a      0f87af110000   ja 0x4cef
0x00003b40      488d0d993500.  lea rcx, [0x000070e0]
0x00003b47      4489fa         mov edx, r15d
0x00003b4a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003b4e      4801c8         add rax, rcx
0x00003b51      ffe0           jmp rax
0x00003b53      c644240e01     mov byte [rsp + 0xe], 1
0x00003b58      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b5d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003b60      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b69      c644240f01     mov byte [rsp + 0xf], 1
0x00003b6e      c644240d00     mov byte [rsp + 0xd], 0
0x00003b73      488d05fb3400.  lea rax, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b7a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b83      4531ff         xor r15d, r15d
0x00003b86      c74424080200.  mov dword [rsp + 8], 2
0x00003b8e      4889442448     mov qword [rsp + 0x48], rax
0x00003b93      4531db         xor r11d, r11d
0x00003b96      4889e8         mov rax, rbp
0x00003b99      4589e0         mov r8d, r12d
0x00003b9c      4c89dd         mov rbp, r11
0x00003b9f      4989c3         mov r11, rax
0x00003ba2      660f1f440000   nop word [rax + rax]
0x00003ba8      4939eb         cmp r11, rbp
0x00003bab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00003baf      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bb3      750d           jne 0x3bc2
0x00003bb5      488b442410     mov rax, qword [rsp + 0x10]
0x00003bba      803c2800       cmp byte [rax + rbp], 0
0x00003bbe      410f95c4       setne r12b
0x00003bc2      4584e4         test r12b, r12b
0x00003bc5      0f8455060000   je 0x4220
0x00003bcb      837c240802     cmp dword [rsp + 8], 2
0x00003bd0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003bd5      4c8d0c2f       lea r9, [rdi + rbp]
0x00003bd9      0f95c0         setne al
0x00003bdc      2244240d       and al, byte [rsp + 0xd]
0x00003be0      4189c2         mov r10d, eax
0x00003be3      0f84a7000000   je 0x3c90
0x00003be9      488b442418     mov rax, qword [rsp + 0x18]
0x00003bee      4885c0         test rax, rax
0x00003bf1      0f8429040000   je 0x4020
0x00003bf7      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bfb      488d5c0500     lea rbx, [rbp + rax]
0x00003c00      752e           jne 0x3c30
0x00003c02      4883f801       cmp rax, 1
0x00003c06      7628           jbe 0x3c30
0x00003c08      4488442438     mov byte [rsp + 0x38], r8b
0x00003c0d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003c12      4c894c2428     mov qword [rsp + 0x28], r9
0x00003c17      e844dbffff     call sym.imp.strlen
0x00003c1c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003c22      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003c28      4989c3         mov r11, rax
0x00003c2b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003c30      4c39db         cmp rbx, r11
0x00003c33      4488542428     mov byte [rsp + 0x28], r10b
0x00003c38      0f87b2050000   ja 0x41f0
0x00003c3e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003c43      488b742448     mov rsi, qword [rsp + 0x48]
0x00003c48      4c89cf         mov rdi, r9
0x00003c4b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003c50      4488442438     mov byte [rsp + 0x38], r8b
0x00003c55      4c894c2430     mov qword [rsp + 0x30], r9
0x00003c5a      e8e1dbffff     call sym.imp.memcmp
0x00003c5f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003c61      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003c66      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003c6c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003c71      0f8579050000   jne 0x41f0
0x00003c77      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c7c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003c82      0f857d0f0000   jne 0x4c05
0x00003c88      0f1f84000000.  nop dword [rax + rax]
0x00003c90      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003c94      80fb7e         cmp bl, 0x7e
0x00003c97      0f871b030000   ja 0x3fb8
0x00003c9d      488d0d683400.  lea rcx, [0x0000710c]
0x00003ca4      0fb6d3         movzx edx, bl
0x00003ca7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003cab      4801c8         add rax, rcx
0x00003cae      ffe0           jmp rax
0x00003cb0      4531d2         xor r10d, r10d
0x00003cb3      4983fb01       cmp r11, 1
0x00003cb7      0f95c0         setne al
0x00003cba      4983fbff       cmp r11, 0xffffffffffffffff
0x00003cbe      750c           jne 0x3ccc
0x00003cc0      488b442410     mov rax, qword [rsp + 0x10]
0x00003cc5      80780100       cmp byte [rax + 1], 0
0x00003cc9      0f95c0         setne al
0x00003ccc      837c240802     cmp dword [rsp + 8], 2
0x00003cd1      0f94c2         sete dl
0x00003cd4      84c0           test al, al
0x00003cd6      0f844c020000   je 0x3f28
0x00003cdc      4531e4         xor r12d, r12d
0x00003cdf      31c0           xor eax, eax
0x00003ce1      0f1f80000000.  nop dword [rax]
0x00003ce8      807c240d01     cmp byte [rsp + 0xd], 1
0x00003ced      0f850f010000   jne 0x3e02
0x00003cf3      84d2           test dl, dl
0x00003cf5      0f8507010000   jne 0x3e02
0x00003cfb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003d00      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003d03      7414           je 0x3d19
0x00003d05      89da           mov edx, ebx
0x00003d07      c0ea05         shr dl, 5
0x00003d0a      0fb6d2         movzx edx, dl
0x00003d0d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003d10      0fa3da         bt edx, ebx
0x00003d13      0f824a010000   jb 0x3e63
0x00003d19      4584d2         test r10b, r10b
0x00003d1c      0f8541010000   jne 0x3e63
0x00003d22      83f001         xor eax, 1
0x00003d25      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003d29      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003d2c      84c0           test al, al
0x00003d2e      7420           je 0x3d50                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003d30      4d39fd         cmp r13, r15
0x00003d33      7605           jbe 0x3d3a
0x00003d35      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003d3a      498d4701       lea rax, [r15 + 1]
0x00003d3e      4939c5         cmp r13, rax
0x00003d41      7606           jbe 0x3d49
0x00003d43      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d49      4983c702       add r15, 2
0x00003d4d      4531c0         xor r8d, r8d
0x00003d50      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d53      7304           jae 0x3d59                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003d55      43881c3e       mov byte [r14 + r15], bl
0x00003d59      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003d5e      4983c701       add r15, 1
0x00003d62      b800000000     mov eax, 0
0x00003d67      4584e4         test r12b, r12b
0x00003d6a      0f44f8         cmove edi, eax
0x00003d6d      40887c240e     mov byte [rsp + 0xe], dil
0x00003d72      e931feffff     jmp 0x3ba8
0x00003d77      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003d80      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d83      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003d87      83f802         cmp eax, 2
0x00003d8a      0f84b8050000   je 0x4348
0x00003d90      83f805         cmp eax, 5
0x00003d93      0f846f050000   je 0x4308
0x00003d99      83f802         cmp eax, 2
0x00003d9c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003da1      0f94c2         sete dl
0x00003da4      4531e4         xor r12d, r12d
0x00003da7      31c0           xor eax, eax
0x00003da9      e93affffff     jmp 0x3ce8
0x00003dae      6690           nop
0x00003db0      4531d2         xor r10d, r10d
0x00003db3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003db8      0f8402050000   je 0x42c0
0x00003dbe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003dc3      31d2           xor edx, edx
0x00003dc5      31c0           xor eax, eax
0x00003dc7      bb27000000     mov ebx, 0x27                           ; '''
0x00003dcc      e917ffffff     jmp 0x3ce8
0x00003dd1      0f1f80000000.  nop dword [rax]
0x00003dd8      ba09000000     mov edx, 9
0x00003ddd      bb74000000     mov ebx, 0x74                           ; 't'
0x00003de2      837c240802     cmp dword [rsp + 8], 2
0x00003de7      0f94c0         sete al
0x00003dea      2244240f       and al, byte [rsp + 0xf]
0x00003dee      0f854a010000   jne 0x3f3e
0x00003df4      807c240d00     cmp byte [rsp + 0xd], 0
0x00003df9      7565           jne 0x3e60
0x00003dfb      89d3           mov ebx, edx
0x00003dfd      4531e4         xor r12d, r12d
0x00003e00      31c0           xor eax, eax
0x00003e02      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e07      0f85eefeffff   jne 0x3cfb
0x00003e0d      e907ffffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003e12      660f1f440000   nop word [rax + rax]
0x00003e18      ba08000000     mov edx, 8
0x00003e1d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003e22      ebd0           jmp 0x3df4
0x00003e24      0f1f4000       nop dword [rax]
0x00003e28      837c240802     cmp dword [rsp + 8], 2
0x00003e2d      0f84cd030000   je 0x4200
0x00003e33      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e38      0f8412020000   je 0x4050
0x00003e3e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e43      0f8407020000   je 0x4050
0x00003e49      48837c241800   cmp qword [rsp + 0x18], 0
0x00003e4f      0f85b6030000   jne 0x420b
0x00003e55      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e5a      660f1f440000   nop word [rax + rax]
0x00003e60      4531e4         xor r12d, r12d
0x00003e63      837c240802     cmp dword [rsp + 8], 2
0x00003e68      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003e6b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e70      89d0           mov eax, edx
0x00003e72      0f8550080000   jne 0x46c8
0x00003e78      4489c0         mov eax, r8d
0x00003e7b      83f001         xor eax, 1
0x00003e7e      20d0           and al, dl
0x00003e80      742f           je 0x3eb1
0x00003e82      4d39fd         cmp r13, r15
0x00003e85      7605           jbe 0x3e8c
0x00003e87      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e8c      498d5701       lea rdx, [r15 + 1]
0x00003e90      4939d5         cmp r13, rdx
0x00003e93      7606           jbe 0x3e9b
0x00003e95      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003e9b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003e9f      4939d5         cmp r13, rdx
0x00003ea2      7606           jbe 0x3eaa
0x00003ea4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003eaa      4983c703       add r15, 3
0x00003eae      4189c0         mov r8d, eax
0x00003eb1      4d39fd         cmp r13, r15
0x00003eb4      7605           jbe 0x3ebb
0x00003eb6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003ebb      4983c701       add r15, 1
0x00003ebf      4883c501       add rbp, 1
0x00003ec3      e988feffff     jmp 0x3d50
0x00003ec8      0f1f84000000.  nop dword [rax + rax]
0x00003ed0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ed5      0f85c8010000   jne 0x40a3
0x00003edb      31d2           xor edx, edx
0x00003edd      f644247801     test byte [rsp + 0x78], 1
0x00003ee2      0f8413ffffff   je 0x3dfb
0x00003ee8      4883c501       add rbp, 1
0x00003eec      e9b7fcffff     jmp 0x3ba8
0x00003ef1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003ef8      837c240802     cmp dword [rsp + 8], 2
0x00003efd      0f94c2         sete dl
0x00003f00      31c0           xor eax, eax
0x00003f02      e9e1fdffff     jmp 0x3ce8
0x00003f07      660f1f840000.  nop word [rax + rax]
0x00003f10      ba07000000     mov edx, 7
0x00003f15      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003f1a      e9d5feffff     jmp 0x3df4
0x00003f1f      90             nop
0x00003f20      837c240802     cmp dword [rsp + 8], 2
0x00003f25      0f94c2         sete dl
0x00003f28      4885ed         test rbp, rbp
0x00003f2b      0f85abfdffff   jne 0x3cdc
0x00003f31      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003f36      20d0           and al, dl
0x00003f38      0f84aafdffff   je 0x3ce8
0x00003f3e      4c89dd         mov rbp, r11
0x00003f41      c74424080200.  mov dword [rsp + 8], 2
0x00003f49      e9fb060000     jmp 0x4649
0x00003f4e      6690           nop
0x00003f50      837c240802     cmp dword [rsp + 8], 2
0x00003f55      0f94c2         sete dl
0x00003f58      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003f5b      ebd4           jmp 0x3f31
0x00003f5d      0f1f00         nop dword [rax]
0x00003f60      837c240802     cmp dword [rsp + 8], 2
0x00003f65      bb20000000     mov ebx, 0x20                           ; "@"
0x00003f6a      0f94c2         sete dl
0x00003f6d      ebc2           jmp 0x3f31
0x00003f6f      90             nop
0x00003f70      ba0d000000     mov edx, 0xd
0x00003f75      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003f7a      e963feffff     jmp 0x3de2
0x00003f7f      90             nop
0x00003f80      ba0c000000     mov edx, 0xc
0x00003f85      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003f8a      e965feffff     jmp 0x3df4
0x00003f8f      90             nop
0x00003f90      ba0b000000     mov edx, 0xb
0x00003f95      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003f9a      e955feffff     jmp 0x3df4
0x00003f9f      90             nop
0x00003fa0      ba0a000000     mov edx, 0xa
0x00003fa5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003faa      e933feffff     jmp 0x3de2
0x00003faf      90             nop
0x00003fb0      4531d2         xor r10d, r10d
0x00003fb3      0f1f440000     nop dword [rax + rax]
0x00003fb8      48837c245801   cmp qword [rsp + 0x58], 1
0x00003fbe      0f85a4030000   jne 0x4368
0x00003fc4      4c895c2438     mov qword [rsp + 0x38], r11
0x00003fc9      4488442430     mov byte [rsp + 0x30], r8b
0x00003fce      4488542428     mov byte [rsp + 0x28], r10b
0x00003fd3      e8f8d9ffff     call sym.imp.__ctype_b_loc
0x00003fd8      488b08         mov rcx, qword [rax]
0x00003fdb      0fb6d3         movzx edx, bl
0x00003fde      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003fe4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003fea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003fef      bf01000000     mov edi, 1
0x00003ff4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003ff8      66250040       and ax, 0x4000
0x00003ffc      410f95c4       setne r12b
0x00004000      0f94c0         sete al
0x00004003      2244240d       and al, byte [rsp + 0xd]
0x00004007      84c0           test al, al
0x00004009      0f8592090000   jne 0x49a1
0x0000400f      837c240802     cmp dword [rsp + 8], 2
0x00004014      0f94c2         sete dl
0x00004017      e9ccfcffff     jmp 0x3ce8
0x0000401c      0f1f4000       nop dword [rax]
0x00004020      410fb619       movzx ebx, byte [r9]
0x00004024      80fb7e         cmp bl, 0x7e
0x00004027      7787           ja 0x3fb0
0x00004029      488d0dd83200.  lea rcx, [0x00007308]
0x00004030      0fb6d3         movzx edx, bl
0x00004033      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004037      4801c8         add rax, rcx
0x0000403a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000403c      0f1f4000       nop dword [rax]
0x00004040      4531d2         xor r10d, r10d
0x00004043      807c240d00     cmp byte [rsp + 0xd], 0
0x00004048      0f85f0fdffff   jne 0x3e3e
0x0000404e      6690           nop
0x00004050      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004055      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000405a      e995fdffff     jmp 0x3df4
0x0000405f      90             nop
0x00004060      ba0c000000     mov edx, 0xc
0x00004065      4531d2         xor r10d, r10d
0x00004068      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000406d      e982fdffff     jmp 0x3df4
0x00004072      660f1f440000   nop word [rax + rax]
0x00004078      ba0a000000     mov edx, 0xa
0x0000407d      4531d2         xor r10d, r10d
0x00004080      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004085      e958fdffff     jmp 0x3de2
0x0000408a      660f1f440000   nop word [rax + rax]
0x00004090      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004095      e9c6fdffff     jmp 0x3e60
0x0000409a      660f1f440000   nop word [rax + rax]
0x000040a0      4531d2         xor r10d, r10d
0x000040a3      837c240802     cmp dword [rsp + 8], 2
0x000040a8      0f94c2         sete dl
0x000040ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000040b0      0f85940b0000   jne 0x4c4a
0x000040b6      4489c0         mov eax, r8d
0x000040b9      4c89f9         mov rcx, r15
0x000040bc      83f001         xor eax, 1
0x000040bf      20d0           and al, dl
0x000040c1      742d           je 0x40f0
0x000040c3      4d39fd         cmp r13, r15
0x000040c6      7605           jbe 0x40cd
0x000040c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000040cd      498d4f01       lea rcx, [r15 + 1]
0x000040d1      4939cd         cmp r13, rcx
0x000040d4      7606           jbe 0x40dc
0x000040d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000040dc      498d4f02       lea rcx, [r15 + 2]
0x000040e0      4939cd         cmp r13, rcx
0x000040e3      0f8730060000   ja 0x4719
0x000040e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000040ed      4189c0         mov r8d, eax
0x000040f0      4939cd         cmp r13, rcx
0x000040f3      7605           jbe 0x40fa
0x000040f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000040fa      837c240802     cmp dword [rsp + 8], 2
0x000040ff      4c8d7901       lea r15, [rcx + 1]
0x00004103      0f8400060000   je 0x4709
0x00004109      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000410d      4c39d8         cmp rax, r11
0x00004110      7319           jae 0x412b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004112      488b442410     mov rax, qword [rsp + 0x10]
0x00004117      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000411c      88442428       mov byte [rsp + 0x28], al
0x00004120      83e830         sub eax, 0x30
0x00004123      3c09           cmp al, 9
0x00004125      0f862e080000   jbe 0x4959
0x0000412b      4489e0         mov eax, r12d
0x0000412e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004133      4531e4         xor r12d, r12d
0x00004136      e9adfbffff     jmp 0x3ce8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000413b      0f1f440000     nop dword [rax + rax]
0x00004140      837c240802     cmp dword [rsp + 8], 2
0x00004145      4589d4         mov r12d, r10d
0x00004148      0f94c2         sete dl
0x0000414b      4531d2         xor r10d, r10d
0x0000414e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004150      e993fbffff     jmp 0x3ce8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004155      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004158      837c240802     cmp dword [rsp + 8], 2
0x0000415d      0f94c2         sete dl
0x00004160      4531d2         xor r10d, r10d
0x00004163      e9c0fdffff     jmp 0x3f28
0x00004168      0f1f84000000.  nop dword [rax + rax]
0x00004170      837c240802     cmp dword [rsp + 8], 2
0x00004175      0f94c2         sete dl
0x00004178      4531d2         xor r10d, r10d
0x0000417b      4531e4         xor r12d, r12d
0x0000417e      e9aefdffff     jmp 0x3f31
0x00004183      0f1f440000     nop dword [rax + rax]
0x00004188      837c240802     cmp dword [rsp + 8], 2
0x0000418d      4589d4         mov r12d, r10d
0x00004190      bb20000000     mov ebx, 0x20                           ; "@"
0x00004195      0f94c2         sete dl
0x00004198      4531d2         xor r10d, r10d
0x0000419b      e991fdffff     jmp 0x3f31
0x000041a0      ba0d000000     mov edx, 0xd
0x000041a5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000041a8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000041ad      e930fcffff     jmp 0x3de2
0x000041b2      660f1f440000   nop word [rax + rax]
0x000041b8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000041bd      e99efcffff     jmp 0x3e60
0x000041c2      660f1f440000   nop word [rax + rax]
0x000041c8      ba09000000     mov edx, 9
0x000041cd      4531d2         xor r10d, r10d
0x000041d0      bb74000000     mov ebx, 0x74                           ; 't'
0x000041d5      e908fcffff     jmp 0x3de2
0x000041da      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000041e0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000041e5      e976fcffff     jmp 0x3e60
0x000041ea      660f1f440000   nop word [rax + rax]
0x000041f0      4531d2         xor r10d, r10d
0x000041f3      e998faffff     jmp 0x3c90
0x000041f8      0f1f84000000.  nop dword [rax + rax]
0x00004200      807c240f00     cmp byte [rsp + 0xf], 0
0x00004205      0f8565090000   jne 0x4b70
0x0000420b      4883c501       add rbp, 1
0x0000420f      4489c0         mov eax, r8d
0x00004212      4531e4         xor r12d, r12d
0x00004215      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000421a      e90dfbffff     jmp 0x3d2c
0x0000421f      90             nop
0x00004220      837c240802     cmp dword [rsp + 8], 2
0x00004225      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000422a      4589c4         mov r12d, r8d
0x0000422d      4c89dd         mov rbp, r11
0x00004230      0f94c2         sete dl
0x00004233      89d8           mov eax, ebx
0x00004235      4d85ff         test r15, r15
0x00004238      0f94c1         sete cl
0x0000423b      21d0           and eax, edx
0x0000423d      20c8           and al, cl
0x0000423f      0f85610a0000   jne 0x4ca6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004245      89d8           mov eax, ebx
0x00004247      83f001         xor eax, 1
0x0000424a      20c2           and dl, al
0x0000424c      0f846a090000   je 0x4bbc
0x00004252      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004257      0f845d090000   je 0x4bba
0x0000425d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004262      0f85f5090000   jne 0x4c5d
0x00004268      4d85ed         test r13, r13
0x0000426b      0f94c0         sete al
0x0000426e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004274      0f95c2         setne dl
0x00004277      20d0           and al, dl
0x00004279      0f841d0a0000   je 0x4c9c
0x0000427f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004284      488d1dea2d00.  lea rbx, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000428b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000428f      c74424080200.  mov dword [rsp + 8], 2
0x00004297      41bf01000000   mov r15d, 1
0x0000429d      48c744241801.  mov qword [rsp + 0x18], 1
0x000042a6      c644240f00     mov byte [rsp + 0xf], 0
0x000042ab      48895c2448     mov qword [rsp + 0x48], rbx
0x000042b0      8844247c       mov byte [rsp + 0x7c], al
0x000042b4      e9daf8ffff     jmp 0x3b93
0x000042b9      0f1f80000000.  nop dword [rax]
0x000042c0      807c240f00     cmp byte [rsp + 0xf], 0
0x000042c5      0f85a5080000   jne 0x4b70
0x000042cb      4d85ed         test r13, r13
0x000042ce      0f84fc030000   je 0x46d0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000042d4      31d2           xor edx, edx
0x000042d6      48837c245000   cmp qword [rsp + 0x50], 0
0x000042dc      0f85ee030000   jne 0x46d0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000042e2      4c896c2450     mov qword [rsp + 0x50], r13
0x000042e7      4983c703       add r15, 3
0x000042eb      31c0           xor eax, eax
0x000042ed      448864247c     mov byte [rsp + 0x7c], r12b
0x000042f2      4531c0         xor r8d, r8d
0x000042f5      4989d5         mov r13, rdx
0x000042f8      bb27000000     mov ebx, 0x27                           ; '''
0x000042fd      e917faffff     jmp 0x3d19
0x00004302      660f1f440000   nop word [rax + rax]
0x00004308      f644247804     test byte [rsp + 0x78], 4
0x0000430d      7421           je 0x4330
0x0000430f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004313      4c39d9         cmp rcx, r11
0x00004316      7318           jae 0x4330
0x00004318      488b442410     mov rax, qword [rsp + 0x10]
0x0000431d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004322      0f848a070000   je 0x4ab2
0x00004328      0f1f84000000.  nop dword [rax + rax]
0x00004330      31d2           xor edx, edx
0x00004332      4531e4         xor r12d, r12d
0x00004335      31c0           xor eax, eax
0x00004337      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000433c      e9a7f9ffff     jmp 0x3ce8
0x00004341      0f1f80000000.  nop dword [rax]
0x00004348      807c240f00     cmp byte [rsp + 0xf], 0
0x0000434d      0f851d080000   jne 0x4b70
0x00004353      4531e4         xor r12d, r12d
0x00004356      31c0           xor eax, eax
0x00004358      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000435d      e9b7f9ffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004362      660f1f440000   nop word [rax + rax]
0x00004368      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004370      4983fbff       cmp r11, 0xffffffffffffffff
0x00004374      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004380      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004385      752d           jne 0x43b4
0x00004387      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000438c      4488442440     mov byte [rsp + 0x40], r8b
0x00004391      4488542438     mov byte [rsp + 0x38], r10b
0x00004396      4c894c2430     mov qword [rsp + 0x30], r9
0x0000439b      e8c0d3ffff     call sym.imp.strlen
0x000043a0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000043a6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000043ac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000043af      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000043b4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000043bc      31c9           xor ecx, ecx
0x000043be      885c247e       mov byte [rsp + 0x7e], bl
0x000043c2      448844247d     mov byte [rsp + 0x7d], r8b
0x000043c7      4889cb         mov rbx, rcx
0x000043ca      4c898c248800.  mov qword [rsp + 0x88], r9
0x000043d2      4889442438     mov qword [rsp + 0x38], rax
0x000043d7      448854247f     mov byte [rsp + 0x7f], r10b
0x000043dc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000043e4      4c89742440     mov qword [rsp + 0x40], r14
0x000043e9      4c896c2470     mov qword [rsp + 0x70], r13
0x000043ee      4c895c2430     mov qword [rsp + 0x30], r11
0x000043f3      488b442410     mov rax, qword [rsp + 0x10]
0x000043f8      4c8d741d00     lea r14, [rbp + rbx]
0x000043fd      488b542430     mov rdx, qword [rsp + 0x30]
0x00004402      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004407      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000440c      4e8d2c30       lea r13, [rax + r14]
0x00004410      4c29f2         sub rdx, r14
0x00004413      4c89ee         mov rsi, r13
0x00004416      e8651c0000     call sym.rpl_mbrtowc
0x0000441b      4885c0         test rax, rax
0x0000441e      4989c7         mov r15, rax
0x00004421      744e           je 0x4471
0x00004423      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004427      0f8418060000   je 0x4a45
0x0000442d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004431      0f849a050000   je 0x49d1
0x00004437      837c240802     cmp dword [rsp + 8], 2
0x0000443c      0f94c0         sete al
0x0000443f      2244240f       and al, byte [rsp + 0xf]
0x00004443      0f8597010000   jne 0x45e0
0x00004449      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004450      e86bd5ffff     call sym.imp.iswprint
0x00004455      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000445a      85c0           test eax, eax
0x0000445c      b800000000     mov eax, 0
0x00004461      440f44e0       cmove r12d, eax
0x00004465      4c01fb         add rbx, r15
0x00004468      e843d5ffff     call sym.imp.mbsinit
0x0000446d      85c0           test eax, eax
0x0000446f      7482           je 0x43f3
0x00004471      4489e2         mov edx, r12d
0x00004474      4889df         mov rdi, rbx
0x00004477      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000447d      83f201         xor edx, 1
0x00004480      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004485      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000448b      2254240d       and dl, byte [rsp + 0xd]
0x0000448f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004497      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000449c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000044a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000044a6      4883ff01       cmp rdi, 1
0x000044aa      0f86fb050000   jbe 0x4aab
0x000044b0      4889f9         mov rcx, rdi
0x000044b3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000044b5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000044bb      4801e9         add rcx, rbp
0x000044be      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000044c3      e9b6000000     jmp 0x457e
0x000044c8      0f1f84000000.  nop dword [rax + rax]
0x000044d0      837c240802     cmp dword [rsp + 8], 2
0x000044d5      0f94c0         sete al
0x000044d8      4584c9         test r9b, r9b
0x000044db      0f85af040000   jne 0x4990
0x000044e1      4489c6         mov esi, r8d
0x000044e4      83f601         xor esi, 1
0x000044e7      4020f0         and al, sil
0x000044ea      742f           je 0x451b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000044ec      4d39fd         cmp r13, r15
0x000044ef      7605           jbe 0x44f6
0x000044f1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044f6      498d7701       lea rsi, [r15 + 1]
0x000044fa      4939f5         cmp r13, rsi
0x000044fd      7606           jbe 0x4505                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000044ff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004505      498d7702       lea rsi, [r15 + 2]
0x00004509      4939f5         cmp r13, rsi
0x0000450c      7606           jbe 0x4514
0x0000450e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004514      4983c703       add r15, 3
0x00004518      4189c0         mov r8d, eax
0x0000451b      4d39fd         cmp r13, r15
0x0000451e      7605           jbe 0x4525
0x00004520      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004525      498d4701       lea rax, [r15 + 1]
0x00004529      4939c5         cmp r13, rax
0x0000452c      760d           jbe 0x453b
0x0000452e      89d8           mov eax, ebx
0x00004530      c0e806         shr al, 6
0x00004533      83c030         add eax, 0x30
0x00004536      4388443e01     mov byte [r14 + r15 + 1], al
0x0000453b      498d4702       lea rax, [r15 + 2]
0x0000453f      4939c5         cmp r13, rax
0x00004542      7610           jbe 0x4554
0x00004544      89d8           mov eax, ebx
0x00004546      c0e803         shr al, 3
0x00004549      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000454c      83c030         add eax, 0x30
0x0000454f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004554      83e307         and ebx, 7
0x00004557      4883c501       add rbp, 1
0x0000455b      4983c703       add r15, 3
0x0000455f      83c330         add ebx, 0x30
0x00004562      4839cd         cmp rbp, rcx
0x00004565      0f83e5f7ffff   jae 0x3d50
0x0000456b      89d6           mov esi, edx
0x0000456d      4d39fd         cmp r13, r15
0x00004570      7604           jbe 0x4576
0x00004572      43881c3e       mov byte [r14 + r15], bl
0x00004576      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000457a      4983c701       add r15, 1
0x0000457e      84d2           test dl, dl
0x00004580      0f854affffff   jne 0x44d0
0x00004586      89f0           mov eax, esi
0x00004588      83f001         xor eax, 1
0x0000458b      4421c0         and eax, r8d
0x0000458e      4584d2         test r10b, r10b
0x00004591      740e           je 0x45a1
0x00004593      4d39fd         cmp r13, r15
0x00004596      7605           jbe 0x459d
0x00004598      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000459d      4983c701       add r15, 1
0x000045a1      4883c501       add rbp, 1
0x000045a5      4839cd         cmp rbp, rcx
0x000045a8      0f837ef7ffff   jae 0x3d2c
0x000045ae      84c0           test al, al
0x000045b0      0f84f8030000   je 0x49ae
0x000045b6      4d39fd         cmp r13, r15
0x000045b9      7605           jbe 0x45c0
0x000045bb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000045c0      498d4701       lea rax, [r15 + 1]
0x000045c4      4939c5         cmp r13, rax
0x000045c7      7606           jbe 0x45cf
0x000045c9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000045cf      4983c702       add r15, 2
0x000045d3      4531d2         xor r10d, r10d
0x000045d6      4531c0         xor r8d, r8d
0x000045d9      eb92           jmp 0x456d
0x000045db      0f1f440000     nop dword [rax + rax]
0x000045e0      4983ff01       cmp r15, 1
0x000045e4      0f845ffeffff   je 0x4449
0x000045ea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000045ef      4a8d0c3f       lea rcx, [rdi + r15]
0x000045f3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000045f8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000045fc      eb0f           jmp 0x460d
0x000045fe      6690           nop
0x00004600      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004604      4939d0         cmp r8, rdx
0x00004607      0f843cfeffff   je 0x4449
0x0000460d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004610      83e95b         sub ecx, 0x5b
0x00004613      80f921         cmp cl, 0x21
0x00004616      77e8           ja 0x4600                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004618      be01000000     mov esi, 1
0x0000461d      48d3e6         shl rsi, cl
0x00004620      4889f1         mov rcx, rsi
0x00004623      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000462d      4885f1         test rcx, rsi
0x00004630      74ce           je 0x4600
0x00004632      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004637      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000463c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004641      c74424080200.  mov dword [rsp + 8], 2
0x00004649      807c240d00     cmp byte [rsp + 0xd], 0
0x0000464e      7410           je 0x4660
0x00004650      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004652      b804000000     mov eax, 4
0x00004657      0f44442408     cmove eax, dword [rsp + 8]
0x0000465c      89442408       mov dword [rsp + 8], eax
0x00004660      4883ec08       sub rsp, 8
0x00004664      4889e9         mov rcx, rbp
0x00004667      4c89ee         mov rsi, r13
0x0000466a      ff742468       push qword [rsp + 0x68]
0x0000466e      ff742478       push qword [rsp + 0x78]
0x00004672      4c89f7         mov rdi, r14
0x00004675      6a00           push 0
0x00004677      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000467f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004684      488b542430     mov rdx, qword [rsp + 0x30]
0x00004689      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000468d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004692      4883c420       add rsp, 0x20
0x00004696      4989c7         mov r15, rax
0x00004699      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000046a1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000046aa      4c89f8         mov rax, r15
0x000046ad      0f8500060000   jne 0x4cb3
0x000046b3      4881c4b80000.  add rsp, 0xb8
0x000046ba      5b             pop rbx
0x000046bb      5d             pop rbp
0x000046bc      415c           pop r12
0x000046be      415d           pop r13
0x000046c0      415e           pop r14
0x000046c2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000046c4      c3             ret
0x000046c5      0f1f00         nop dword [rax]
0x000046c8      4c89dd         mov rbp, r11
0x000046cb      e979ffffff     jmp 0x4649
0x000046d0      4d39fd         cmp r13, r15
0x000046d3      7605           jbe 0x46da
0x000046d5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000046da      498d4701       lea rax, [r15 + 1]
0x000046de      4939c5         cmp r13, rax
0x000046e1      7606           jbe 0x46e9
0x000046e3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000046e9      498d4702       lea rax, [r15 + 2]
0x000046ed      4939c5         cmp r13, rax
0x000046f0      0f86ec050000   jbe 0x4ce2
0x000046f6      4c89ea         mov rdx, r13
0x000046f9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046ff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004704      e9d9fbffff     jmp 0x42e2
0x00004709      4489e0         mov eax, r12d
0x0000470c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004711      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004714      e900f6ffff     jmp 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004719      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000471f      e9c5f9ffff     jmp 0x40e9
0x00004724      85db           test ebx, ebx
0x00004726      0f8527f4ffff   jne 0x3b53
0x0000472c      c644240d01     mov byte [rsp + 0xd], 1
0x00004731      4d85ed         test r13, r13
0x00004734      0f8590050000   jne 0x4cca
0x0000473a      488d05342900.  lea rax, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004741      48c744245000.  mov qword [rsp + 0x50], 0
0x0000474a      c644240e01     mov byte [rsp + 0xe], 1
0x0000474f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004754      4531e4         xor r12d, r12d
0x00004757      c644240f00     mov byte [rsp + 0xf], 0
0x0000475c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004765      4889442448     mov qword [rsp + 0x48], rax
0x0000476a      41bf01000000   mov r15d, 1
0x00004770      c74424080200.  mov dword [rsp + 8], 2
0x00004778      e916f4ffff     jmp 0x3b93                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000477d      0f1f00         nop dword [rax]
0x00004780      85db           test ebx, ebx
0x00004782      0f85f5030000   jne 0x4b7d
0x00004788      4d85ed         test r13, r13
0x0000478b      0f8425020000   je 0x49b6
0x00004791      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004795      c644240e01     mov byte [rsp + 0xe], 1
0x0000479a      4531e4         xor r12d, r12d
0x0000479d      c644247c00     mov byte [rsp + 0x7c], 0
0x000047a2      48c744245000.  mov qword [rsp + 0x50], 0
0x000047ab      488d05c12800.  lea rax, str.l______l                   ; 0x7073 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000047b2      c644240f00     mov byte [rsp + 0xf], 0
0x000047b7      c644240d01     mov byte [rsp + 0xd], 1
0x000047bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000047c5      41bf01000000   mov r15d, 1
0x000047cb      4889442448     mov qword [rsp + 0x48], rax
0x000047d0      e9bef3ffff     jmp 0x3b93
0x000047d5      488d05972800.  lea rax, str.l______l                   ; 0x7073 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000047dc      c644240e01     mov byte [rsp + 0xe], 1
0x000047e1      c644247c00     mov byte [rsp + 0x7c], 0
0x000047e6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000047e9      48c744245000.  mov qword [rsp + 0x50], 0
0x000047f2      c644240f01     mov byte [rsp + 0xf], 1
0x000047f7      c644240d01     mov byte [rsp + 0xd], 1
0x000047fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004805      4531ff         xor r15d, r15d
0x00004808      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000480d      c74424080500.  mov dword [rsp + 8], 5
0x00004815      e979f3ffff     jmp 0x3b93
0x0000481a      c644240e01     mov byte [rsp + 0xe], 1
0x0000481f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004824      4531e4         xor r12d, r12d
0x00004827      48c744245000.  mov qword [rsp + 0x50], 0
0x00004830      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004835      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004838      c644240d01     mov byte [rsp + 0xd], 1
0x0000483d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004846      48c744244800.  mov qword [rsp + 0x48], 0
0x0000484f      e93ff3ffff     jmp 0x3b93
0x00004854      837c24080a     cmp dword [rsp + 8], 0xa
0x00004859      7456           je 0x48b1
0x0000485b      488d35152800.  lea rsi, [0x00007077]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004862      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004864      ba05000000     mov edx, 5
0x00004869      e8d2ceffff     call sym.imp.dcgettext
0x0000486e      4889c1         mov rcx, rax
0x00004871      4889442468     mov qword [rsp + 0x68], rax
0x00004876      488d05fa2700.  lea rax, [0x00007077]                   ; "`"
0x0000487d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004880      0f8498030000   je 0x4c1e
0x00004886      488d35e82700.  lea rsi, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000488d      31ff           xor edi, edi
0x0000488f      ba05000000     mov edx, 5
0x00004894      e8a7ceffff     call sym.imp.dcgettext
0x00004899      4889c1         mov rcx, rax
0x0000489c      4889442460     mov qword [rsp + 0x60], rax
0x000048a1      488d05cd2700.  lea rax, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000048a8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000048ab      0f8483030000   je 0x4c34
0x000048b1      4531ff         xor r15d, r15d
0x000048b4      85db           test ebx, ebx
0x000048b6      0f84c1010000   je 0x4a7d
0x000048bc      85db           test ebx, ebx
0x000048be      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000048c3      0f9544240f     setne byte [rsp + 0xf]
0x000048c8      4531e4         xor r12d, r12d
0x000048cb      4889df         mov rdi, rbx
0x000048ce      e88dceffff     call sym.imp.strlen
0x000048d3      48895c2448     mov qword [rsp + 0x48], rbx
0x000048d8      4889442418     mov qword [rsp + 0x18], rax
0x000048dd      c644240e01     mov byte [rsp + 0xe], 1
0x000048e2      c644247c00     mov byte [rsp + 0x7c], 0
0x000048e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000048f0      c644240d01     mov byte [rsp + 0xd], 1
0x000048f5      e999f2ffff     jmp 0x3b93
0x000048fa      c644240e01     mov byte [rsp + 0xe], 1
0x000048ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00004904      4531e4         xor r12d, r12d
0x00004907      48c744245000.  mov qword [rsp + 0x50], 0
0x00004910      c644240f00     mov byte [rsp + 0xf], 0
0x00004915      4531ff         xor r15d, r15d
0x00004918      c644240d00     mov byte [rsp + 0xd], 0
0x0000491d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004926      48c744244800.  mov qword [rsp + 0x48], 0
0x0000492f      e95ff2ffff     jmp 0x3b93
0x00004934      c644240e01     mov byte [rsp + 0xe], 1
0x00004939      c644247c00     mov byte [rsp + 0x7c], 0
0x0000493e      4531e4         xor r12d, r12d
0x00004941      48c744245000.  mov qword [rsp + 0x50], 0
0x0000494a      c644240f01     mov byte [rsp + 0xf], 1
0x0000494f      c644240d01     mov byte [rsp + 0xd], 1
0x00004954      e91af2ffff     jmp 0x3b73
0x00004959      4d39fd         cmp r13, r15
0x0000495c      7605           jbe 0x4963
0x0000495e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004963      488d4102       lea rax, [rcx + 2]
0x00004967      4939c5         cmp r13, rax
0x0000496a      7606           jbe 0x4972
0x0000496c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004972      4489e0         mov eax, r12d
0x00004975      4c8d7903       lea r15, [rcx + 3]
0x00004979      4531e4         xor r12d, r12d
0x0000497c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004981      e962f3ffff     jmp 0x3ce8
0x00004986      662e0f1f8400.  nop word cs:[rax + rax]
0x00004990      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004995      4c89dd         mov rbp, r11
0x00004998      885c240d       mov byte [rsp + 0xd], bl
0x0000499c      e9a8fcffff     jmp 0x4649
0x000049a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000049a6      4531e4         xor r12d, r12d
0x000049a9      e902fbffff     jmp 0x44b0
0x000049ae      4531d2         xor r10d, r10d
0x000049b1      e9b7fbffff     jmp 0x456d
0x000049b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000049bf      c644240e01     mov byte [rsp + 0xe], 1
0x000049c4      4531e4         xor r12d, r12d
0x000049c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000049cc      e9dafdffff     jmp 0x47ab
0x000049d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000049d6      4c89f6         mov rsi, r14
0x000049d9      4c89e9         mov rcx, r13
0x000049dc      4889d8         mov rax, rbx
0x000049df      4889df         mov rdi, rbx
0x000049e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000049e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000049ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000049f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000049f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000049fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004a06      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004a0b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004a10      7326           jae 0x4a38
0x00004a12      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004a15      7510           jne 0x4a27
0x00004a17      eb1f           jmp 0x4a38
0x00004a19      0f1f80000000.  nop dword [rax]
0x00004a20      41803c0100     cmp byte [r9 + rax], 0
0x00004a25      740e           je 0x4a35
0x00004a27      4883c001       add rax, 1
0x00004a2b      488d540500     lea rdx, [rbp + rax]
0x00004a30      4939d3         cmp r11, rdx
0x00004a33      77eb           ja 0x4a20
0x00004a35      4889c7         mov rdi, rax
0x00004a38      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004a3d      4531e4         xor r12d, r12d
0x00004a40      e961faffff     jmp 0x44a6
0x00004a45      4889df         mov rdi, rbx
0x00004a48      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004a4e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004a53      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004a59      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004a61      4531e4         xor r12d, r12d
0x00004a64      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004a69      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004a6e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004a73      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004a78      e929faffff     jmp 0x44a6
0x00004a7d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004a82      0fb602         movzx eax, byte [rdx]
0x00004a85      84c0           test al, al
0x00004a87      0f842ffeffff   je 0x48bc
0x00004a8d      0f1f00         nop dword [rax]
0x00004a90      4d39fd         cmp r13, r15
0x00004a93      7604           jbe 0x4a99
0x00004a95      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004a99      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00004a9d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004aa2      84c0           test al, al
0x00004aa4      75ea           jne 0x4a90
0x00004aa6      e911feffff     jmp 0x48bc
0x00004aab      89d0           mov eax, edx
0x00004aad      e955f5ffff     jmp 0x4007
0x00004ab2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004ab6      80fb3e         cmp bl, 0x3e
0x00004ab9      0f8771f8ffff   ja 0x4330
0x00004abf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004ac9      480fa3d8       bt rax, rbx
0x00004acd      0f835df8ffff   jae 0x4330
0x00004ad3      807c240f00     cmp byte [rsp + 0xf], 0
0x00004ad8      0f85e4010000   jne 0x4cc2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00004ade      4d39fd         cmp r13, r15
0x00004ae1      7605           jbe 0x4ae8
0x00004ae3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004ae8      498d4701       lea rax, [r15 + 1]
0x00004aec      4939c5         cmp r13, rax
0x00004aef      7606           jbe 0x4af7
0x00004af1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004af7      498d4702       lea rax, [r15 + 2]
0x00004afb      4939c5         cmp r13, rax
0x00004afe      7606           jbe 0x4b06
0x00004b00      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004b06      498d4703       lea rax, [r15 + 3]
0x00004b0a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00004b0d      7606           jbe 0x4b15
0x00004b0f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004b15      4983c704       add r15, 4
0x00004b19      31d2           xor edx, edx
0x00004b1b      4531e4         xor r12d, r12d
0x00004b1e      31c0           xor eax, eax
0x00004b20      4889cd         mov rbp, rcx
0x00004b23      e9c0f1ffff     jmp 0x3ce8
0x00004b28      85db           test ebx, ebx
0x00004b2a      0f8488010000   je 0x4cb8
0x00004b30      488d053e2500.  lea rax, [0x00007075]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b37      c644240e01     mov byte [rsp + 0xe], 1
0x00004b3c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b41      4531e4         xor r12d, r12d
0x00004b44      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b4d      c644240f01     mov byte [rsp + 0xf], 1
0x00004b52      c644240d00     mov byte [rsp + 0xd], 0
0x00004b57      48c744241801.  mov qword [rsp + 0x18], 1
0x00004b60      4531ff         xor r15d, r15d
0x00004b63      4889442448     mov qword [rsp + 0x48], rax
0x00004b68      e926f0ffff     jmp 0x3b93
0x00004b6d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004b70      4c89dd         mov rbp, r11
0x00004b73      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004b78      e9ccfaffff     jmp 0x4649
0x00004b7d      488d05ef2400.  lea rax, str.l______l                   ; 0x7073 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b84      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004b89      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b8e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004b91      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b9a      c644240f01     mov byte [rsp + 0xf], 1
0x00004b9f      c644240d01     mov byte [rsp + 0xd], 1
0x00004ba4      48c744241801.  mov qword [rsp + 0x18], 1
0x00004bad      4531ff         xor r15d, r15d
0x00004bb0      4889442448     mov qword [rsp + 0x48], rax
0x00004bb5      e9d9efffff     jmp 0x3b93
0x00004bba      89d0           mov eax, edx
0x00004bbc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004bc1      4885db         test rbx, rbx
0x00004bc4      742c           je 0x4bf2
0x00004bc6      84c0           test al, al
0x00004bc8      7428           je 0x4bf2
0x00004bca      0fb60b         movzx ecx, byte [rbx]
0x00004bcd      4889d8         mov rax, rbx
0x00004bd0      84c9           test cl, cl
0x00004bd2      741e           je 0x4bf2
0x00004bd4      4c89fa         mov rdx, r15
0x00004bd7      4c29f8         sub rax, r15
0x00004bda      4939d5         cmp r13, rdx
0x00004bdd      7604           jbe 0x4be3
0x00004bdf      41880c16       mov byte [r14 + rdx], cl
0x00004be3      4883c201       add rdx, 1
0x00004be7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00004beb      84c9           test cl, cl
0x00004bed      75eb           jne 0x4bda
0x00004bef      4989d7         mov r15, rdx
0x00004bf2      4d39fd         cmp r13, r15
0x00004bf5      0f869efaffff   jbe 0x4699
0x00004bfb      43c6043e00     mov byte [r14 + r15], 0
0x00004c00      e994faffff     jmp 0x4699
0x00004c05      837c240802     cmp dword [rsp + 8], 2
0x00004c0a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004c0f      4c89dd         mov rbp, r11
0x00004c12      0f94c0         sete al
0x00004c15      885c240d       mov byte [rsp + 0xd], bl
0x00004c19      e92bfaffff     jmp 0x4649
0x00004c1e      8b742408       mov esi, dword [rsp + 8]
0x00004c22      4889cf         mov rdi, rcx
0x00004c25      e8a6edffff     call sym.gettext_quote.part.1
0x00004c2a      4889442468     mov qword [rsp + 0x68], rax
0x00004c2f      e952fcffff     jmp 0x4886
0x00004c34      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004c38      4889cf         mov rdi, rcx
0x00004c3b      e890edffff     call sym.gettext_quote.part.1
0x00004c40      4889442460     mov qword [rsp + 0x60], rax
0x00004c45      e967fcffff     jmp 0x48b1
0x00004c4a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004c4f      4c89dd         mov rbp, r11
0x00004c52      89d0           mov eax, edx
0x00004c54      885c240d       mov byte [rsp + 0xd], bl
0x00004c58      e9ecf9ffff     jmp 0x4649
0x00004c5d      4883ec08       sub rsp, 8
0x00004c61      41b805000000   mov r8d, 5
0x00004c67      4c89d9         mov rcx, r11
0x00004c6a      ff742468       push qword [rsp + 0x68]
0x00004c6e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004c72      4c89f7         mov rdi, r14
0x00004c75      ff742438       push qword [rsp + 0x38]
0x00004c79      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004c81      488b542430     mov rdx, qword [rsp + 0x30]
0x00004c86      488b742470     mov rsi, qword [rsp + 0x70]
0x00004c8b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004c90      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004c94      4989c7         mov r15, rax
0x00004c97      e9fdf9ffff     jmp 0x4699
0x00004c9c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004ca1      e916ffffff     jmp 0x4bbc
0x00004ca6      c74424080200.  mov dword [rsp + 8], 2
0x00004cae      e996f9ffff     jmp 0x4649
0x00004cb3      e8b8caffff     call sym.imp.__stack_chk_fail
0x00004cb8      c644240d00     mov byte [rsp + 0xd], 0
0x00004cbd      e96ffaffff     jmp 0x4731
0x00004cc2      4c89dd         mov rbp, r11
0x00004cc5      e996f9ffff     jmp 0x4660
0x00004cca      c644240e01     mov byte [rsp + 0xe], 1
0x00004ccf      31c0           xor eax, eax
0x00004cd1      4531e4         xor r12d, r12d
0x00004cd4      48c744245000.  mov qword [rsp + 0x50], 0
0x00004cdd      e9a2f5ffff     jmp 0x4284
0x00004ce2      4c89ea         mov rdx, r13
0x00004ce5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004cea      e9f3f5ffff     jmp 0x42e2
0x00004cef      e89cc9ffff     call sym.imp.abort
0x00004cf4      6690           nop
0x00004cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004d00      4157           push r15
0x00004d02      4156           push r14
0x00004d04      4c63ff         movsxd r15, edi
0x00004d07      4155           push r13
0x00004d09      4154           push r12
0x00004d0b      4989d6         mov r14, rdx
0x00004d0e      55             push rbp
0x00004d0f      53             push rbx
0x00004d10      4889cd         mov rbp, rcx
0x00004d13      4883ec28       sub rsp, 0x28
0x00004d17      4889742408     mov qword [rsp + 8], rsi
0x00004d1c      e87fc9ffff     call sym.imp.__errno_location
0x00004d21      4989c5         mov r13, rax
0x00004d24      8b00           mov eax, dword [rax]
0x00004d26      4585ff         test r15d, r15d
0x00004d29      488b1d504320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209080:8]=0x209090 obj.slotvec0
0x00004d30      89442418       mov dword [rsp + 0x18], eax
0x00004d34      0f8867010000   js 0x4ea1
0x00004d3a      44393d374320.  cmp dword [obj.nslots], r15d            ; [0x209078:4]=1
0x00004d41      7f62           jg 0x4da5
0x00004d43      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004d4a      0f8456010000   je 0x4ea6
0x00004d50      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004d54      488d05354320.  lea rax, obj.slotvec0                   ; 0x209090
0x00004d5b      4963f4         movsxd rsi, r12d
0x00004d5e      48c1e604       shl rsi, 4
0x00004d62      4839c3         cmp rbx, rax
0x00004d65      0f8415010000   je 0x4e80
0x00004d6b      4889df         mov rdi, rbx
0x00004d6e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004d73      4889c3         mov rbx, rax
0x00004d76      488905034320.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x00004d7d      48633df44220.  movsxd rdi, dword [obj.nslots]          ; [0x209078:4]=1
0x00004d84      4489e2         mov edx, r12d
0x00004d87      31f6           xor esi, esi
0x00004d89      29fa           sub edx, edi
0x00004d8b      48c1e704       shl rdi, 4
0x00004d8f      4863d2         movsxd rdx, edx
0x00004d92      4801df         add rdi, rbx
0x00004d95      48c1e204       shl rdx, 4
0x00004d99      e842caffff     call sym.imp.memset
0x00004d9e      448925d34220.  mov dword [obj.nslots], r12d            ; [0x209078:4]=1
0x00004da5      8b4504         mov eax, dword [rbp + 4]
0x00004da8      49c1e704       shl r15, 4
0x00004dac      4883ec08       sub rsp, 8
0x00004db0      4c01fb         add rbx, r15
0x00004db3      4c8d7d08       lea r15, [rbp + 8]
0x00004db7      448b4500       mov r8d, dword [rbp]
0x00004dbb      4c8b1b         mov r11, qword [rbx]
0x00004dbe      4c8b6308       mov r12, qword [rbx + 8]
0x00004dc2      4c89f1         mov rcx, r14
0x00004dc5      83c801         or eax, 1
0x00004dc8      89442424       mov dword [rsp + 0x24], eax
0x00004dcc      ff7530         push qword [rbp + 0x30]
0x00004dcf      4189c1         mov r9d, eax
0x00004dd2      ff7528         push qword [rbp + 0x28]
0x00004dd5      4157           push r15
0x00004dd7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004dda      488b542428     mov rdx, qword [rsp + 0x28]
0x00004ddf      4c89e7         mov rdi, r12
0x00004de2      4c895c2430     mov qword [rsp + 0x30], r11
0x00004de7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004dec      4883c420       add rsp, 0x20
0x00004df0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004df5      4939c3         cmp r11, rax
0x00004df8      7767           ja 0x4e61
0x00004dfa      488d7001       lea rsi, [rax + 1]
0x00004dfe      488d055b4320.  lea rax, obj.slot0                      ; 0x209160
0x00004e05      4939c4         cmp r12, rax
0x00004e08      488933         mov qword [rbx], rsi
0x00004e0b      7412           je 0x4e1f
0x00004e0d      4c89e7         mov rdi, r12
0x00004e10      4889742410     mov qword [rsp + 0x10], rsi
0x00004e15      e866c8ffff     call sym.imp.free
0x00004e1a      488b742410     mov rsi, qword [rsp + 0x10]
0x00004e1f      4889f7         mov rdi, rsi
0x00004e22      4889742410     mov qword [rsp + 0x10], rsi
0x00004e27      e8540e0000     call sym.xmalloc
0x00004e2c      4883ec08       sub rsp, 8
0x00004e30      48894308       mov qword [rbx + 8], rax
0x00004e34      448b4500       mov r8d, dword [rbp]
0x00004e38      ff7530         push qword [rbp + 0x30]
0x00004e3b      ff7528         push qword [rbp + 0x28]
0x00004e3e      4c89f1         mov rcx, r14
0x00004e41      4157           push r15
0x00004e43      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004e48      4889c7         mov rdi, rax
0x00004e4b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004e50      488b742430     mov rsi, qword [rsp + 0x30]
0x00004e55      4989c4         mov r12, rax
0x00004e58      e863ecffff     call sym.quotearg_buffer_restyled
0x00004e5d      4883c420       add rsp, 0x20
0x00004e61      8b442418       mov eax, dword [rsp + 0x18]
0x00004e65      41894500       mov dword [r13], eax
0x00004e69      4883c428       add rsp, 0x28
0x00004e6d      4c89e0         mov rax, r12
0x00004e70      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004e71      5d             pop rbp
0x00004e72      415c           pop r12
0x00004e74      415d           pop r13
0x00004e76      415e           pop r14
0x00004e78      415f           pop r15
0x00004e7a      c3             ret
0x00004e7b      0f1f440000     nop dword [rax + rax]
0x00004e80      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004e82      e8590e0000     call sym.xrealloc
0x00004e87      660f6f050142.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004e8f      4889c3         mov rbx, rax
0x00004e92      488905e74120.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x00004e99      0f1100         movups xmmword [rax], xmm0
0x00004e9c      e9dcfeffff     jmp 0x4d7d
0x00004ea1      e8eac7ffff     call sym.imp.abort
0x00004ea6      e825100000     call sym.xalloc_die
0x00004eab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004eb0      4154           push r12
0x00004eb2      55             push rbp
0x00004eb3      53             push rbx
0x00004eb4      4889fb         mov rbx, rdi
0x00004eb7      e8e4c7ffff     call sym.imp.__errno_location
0x00004ebc      448b20         mov r12d, dword [rax]
0x00004ebf      4889c5         mov rbp, rax
0x00004ec2      488d05974320.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004ec9      4885db         test rbx, rbx
0x00004ecc      be38000000     mov esi, 0x38                           ; '8'
0x00004ed1      480f44d8       cmove rbx, rax
0x00004ed5      4889df         mov rdi, rbx
0x00004ed8      e8a30f0000     call sym.xmemdup
0x00004edd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ee1      5b             pop rbx
0x00004ee2      5d             pop rbp
0x00004ee3      415c           pop r12
0x00004ee5      c3             ret
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004ef0      488d05694320.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004ef7      4885ff         test rdi, rdi
0x00004efa      480f44f8       cmove rdi, rax
0x00004efe      8b07           mov eax, dword [rdi]
0x00004f00      c3             ret
0x00004f01      0f1f440000     nop dword [rax + rax]
0x00004f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004f10      488d05494320.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004f17      4885ff         test rdi, rdi
0x00004f1a      480f44f8       cmove rdi, rax
0x00004f1e      8937           mov dword [rdi], esi
0x00004f20      c3             ret
0x00004f21      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004f30      488d05294320.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004f37      4885ff         test rdi, rdi
0x00004f3a      89f1           mov ecx, esi
0x00004f3c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004f40      89f0           mov eax, esi
0x00004f42      83e11f         and ecx, 0x1f
0x00004f45      c0e805         shr al, 5
0x00004f48      0fb6c0         movzx eax, al
0x00004f4b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004f50      8b37           mov esi, dword [rdi]
0x00004f52      89f0           mov eax, esi
0x00004f54      d3e8           shr eax, cl
0x00004f56      31c2           xor edx, eax
0x00004f58      83e001         and eax, 1
0x00004f5b      83e201         and edx, 1
0x00004f5e      d3e2           shl edx, cl
0x00004f60      31f2           xor edx, esi
0x00004f62      8917           mov dword [rdi], edx
0x00004f64      c3             ret
0x00004f65      90             nop
0x00004f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004f70      488d05e94220.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004f77      4885ff         test rdi, rdi
0x00004f7a      480f44f8       cmove rdi, rax
0x00004f7e      8b4704         mov eax, dword [rdi + 4]
0x00004f81      897704         mov dword [rdi + 4], esi
0x00004f84      c3             ret
0x00004f85      90             nop
0x00004f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004f90      488d05c94220.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004f97      4885ff         test rdi, rdi
0x00004f9a      480f44f8       cmove rdi, rax
0x00004f9e      4885f6         test rsi, rsi
0x00004fa1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004fa7      740e           je 0x4fb7
0x00004fa9      4885d2         test rdx, rdx
0x00004fac      7409           je 0x4fb7
0x00004fae      48897728       mov qword [rdi + 0x28], rsi
0x00004fb2      48895730       mov qword [rdi + 0x30], rdx
0x00004fb6      c3             ret
0x00004fb7      4883ec08       sub rsp, 8
0x00004fbb      e8d0c6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004fc0      4157           push r15
0x00004fc2      4156           push r14
0x00004fc4      488d05954220.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004fcb      4155           push r13
0x00004fcd      4154           push r12
0x00004fcf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004fd2      55             push rbp
0x00004fd3      53             push rbx
0x00004fd4      4c89c3         mov rbx, r8
0x00004fd7      4989f6         mov r14, rsi
0x00004fda      4989d7         mov r15, rdx
0x00004fdd      4883ec18       sub rsp, 0x18
0x00004fe1      4d85c0         test r8, r8
0x00004fe4      480f44d8       cmove rbx, rax
0x00004fe8      48894c2408     mov qword [rsp + 8], rcx
0x00004fed      e8aec6ffff     call sym.imp.__errno_location
0x00004ff2      448b20         mov r12d, dword [rax]
0x00004ff5      4889c5         mov rbp, rax
0x00004ff8      488d4308       lea rax, [rbx + 8]
0x00004ffc      4883ec08       sub rsp, 8
0x00005000      448b4b04       mov r9d, dword [rbx + 4]
0x00005004      ff7330         push qword [rbx + 0x30]
0x00005007      448b03         mov r8d, dword [rbx]
0x0000500a      ff7328         push qword [rbx + 0x28]
0x0000500d      4c89fa         mov rdx, r15
0x00005010      50             push rax
0x00005011      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005016      4c89f6         mov rsi, r14
0x00005019      4c89ef         mov rdi, r13
0x0000501c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005021      44896500       mov dword [rbp], r12d
0x00005025      4883c438       add rsp, 0x38
0x00005029      5b             pop rbx
0x0000502a      5d             pop rbp
0x0000502b      415c           pop r12
0x0000502d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000502f      415e           pop r14
0x00005031      415f           pop r15
0x00005033      c3             ret
0x00005034      6690           nop
0x00005036      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005040      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005042      4156           push r14
0x00005044      488d05154220.  lea rax, obj.default_quoting_options    ; 0x209260
0x0000504b      4155           push r13
0x0000504d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000504f      4989d4         mov r12, rdx
0x00005052      55             push rbp
0x00005053      53             push rbx
0x00005054      4889cb         mov rbx, rcx
0x00005057      4989fe         mov r14, rdi
0x0000505a      4989f7         mov r15, rsi
0x0000505d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005061      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005064      480f44d8       cmove rbx, rax
0x00005068      31ed           xor ebp, ebp
0x0000506a      e831c6ffff     call sym.imp.__errno_location
0x0000506f      4d85e4         test r12, r12
0x00005072      4989c5         mov r13, rax
0x00005075      8b00           mov eax, dword [rax]
0x00005077      400f94c5       sete bpl
0x0000507b      0b6b04         or ebp, dword [rbx + 4]
0x0000507e      4c8d5308       lea r10, [rbx + 8]
0x00005082      4883ec08       sub rsp, 8
0x00005086      448b03         mov r8d, dword [rbx]
0x00005089      4c89f9         mov rcx, r15
0x0000508c      89442414       mov dword [rsp + 0x14], eax
0x00005090      ff7330         push qword [rbx + 0x30]
0x00005093      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005096      ff7328         push qword [rbx + 0x28]
0x00005099      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000509b      31f6           xor esi, esi
0x0000509d      4189e9         mov r9d, ebp
0x000050a0      31ff           xor edi, edi
0x000050a2      4c89542440     mov qword [rsp + 0x40], r10
0x000050a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000050ac      488d7001       lea rsi, [rax + 1]
0x000050b0      4889442448     mov qword [rsp + 0x48], rax
0x000050b5      4883c420       add rsp, 0x20
0x000050b9      4889f7         mov rdi, rsi
0x000050bc      4889742418     mov qword [rsp + 0x18], rsi
0x000050c1      e8ba0b0000     call sym.xmalloc
0x000050c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000050cb      4883ec08       sub rsp, 8
0x000050cf      ff7330         push qword [rbx + 0x30]
0x000050d2      ff7328         push qword [rbx + 0x28]
0x000050d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000050da      4189e9         mov r9d, ebp
0x000050dd      448b03         mov r8d, dword [rbx]
0x000050e0      4c89f9         mov rcx, r15
0x000050e3      4c89f2         mov rdx, r14
0x000050e6      4889c7         mov rdi, rax
0x000050e9      4152           push r10
0x000050eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000050f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000050f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000050f9      4883c420       add rsp, 0x20
0x000050fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005100      41894500       mov dword [r13], eax
0x00005104      7409           je 0x510f
0x00005106      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000510b      4d891c24       mov qword [r12], r11
0x0000510f      488b442410     mov rax, qword [rsp + 0x10]
0x00005114      4883c438       add rsp, 0x38
0x00005118      5b             pop rbx
0x00005119      5d             pop rbp
0x0000511a      415c           pop r12
0x0000511c      415d           pop r13
0x0000511e      415e           pop r14
0x00005120      415f           pop r15
0x00005122      c3             ret
0x00005123      0f1f00         nop dword [rax]
0x00005126      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005130      4889d1         mov rcx, rdx
0x00005133      31d2           xor edx, edx
0x00005135      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000513a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005140      8b05323f2000   mov eax, dword [obj.nslots]             ; [0x209078:4]=1
0x00005146      4154           push r12
0x00005148      4c8b25313f20.  mov r12, qword [obj.slotvec]            ; [0x209080:8]=0x209090 obj.slotvec0
0x0000514f      55             push rbp
0x00005150      53             push rbx
0x00005151      83f801         cmp eax, 1
0x00005154      7e2b           jle 0x5181                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005156      83e802         sub eax, 2
0x00005159      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000515e      48c1e004       shl rax, 4
0x00005162      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005167      660f1f840000.  nop word [rax + rax]
0x00005170      488b3b         mov rdi, qword [rbx]
0x00005173      4883c310       add rbx, 0x10
0x00005177      e804c5ffff     call sym.imp.free
0x0000517c      4839eb         cmp rbx, rbp
0x0000517f      75ef           jne 0x5170
0x00005181      498b7c2408     mov rdi, qword [r12 + 8]
0x00005186      488d1dd33f20.  lea rbx, obj.slot0                      ; 0x209160
0x0000518d      4839df         cmp rdi, rbx
0x00005190      7417           je 0x51a9
0x00005192      e8e9c4ffff     call sym.imp.free
0x00005197      48c705ee3e20.  mov qword [obj.slotvec0], 0x100         ; [0x209090:8]=256
0x000051a2      48891def3e20.  mov qword [0x00209098], rbx             ; [0x209098:8]=0x209160 obj.slot0
0x000051a9      488d1de03e20.  lea rbx, obj.slotvec0                   ; 0x209090
0x000051b0      4939dc         cmp r12, rbx
0x000051b3      740f           je 0x51c4
0x000051b5      4c89e7         mov rdi, r12
0x000051b8      e8c3c4ffff     call sym.imp.free
0x000051bd      48891dbc3e20.  mov qword [obj.slotvec], rbx            ; [0x209080:8]=0x209090 obj.slotvec0
0x000051c4      5b             pop rbx
0x000051c5      c705a93e2000.  mov dword [obj.nslots], 1               ; [0x209078:4]=1
0x000051cf      5d             pop rbp
0x000051d0      415c           pop r12
0x000051d2      c3             ret
0x000051d3      0f1f00         nop dword [rax]
0x000051d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000051e0      488d0d794020.  lea rcx, obj.default_quoting_options    ; 0x209260
0x000051e7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000051ee      e90dfbffff     jmp sym.quotearg_n_options
0x000051f3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000051f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005200      488d0d594020.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00005207      e9f4faffff     jmp sym.quotearg_n_options
0x0000520c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005210      488d0d494020.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00005217      4889fe         mov rsi, rdi
0x0000521a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005221      31ff           xor edi, edi
0x00005223      e9d8faffff     jmp sym.quotearg_n_options
0x00005228      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005230      488d0d294020.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00005237      4889f2         mov rdx, rsi
0x0000523a      4889fe         mov rsi, rdi
0x0000523d      31ff           xor edi, edi
0x0000523f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005244      6690           nop
0x00005246      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005250      4883ec48       sub rsp, 0x48
0x00005254      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005257      64488b142528.  mov rdx, qword fs:[0x28]
0x00005260      4889542438     mov qword [rsp + 0x38], rdx
0x00005265      31d2           xor edx, edx
0x00005267      83fe0a         cmp esi, 0xa
0x0000526a      7468           je 0x52d4
0x0000526c      893424         mov dword [rsp], esi
0x0000526f      4889e1         mov rcx, rsp
0x00005272      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005279      4889c6         mov rsi, rax
0x0000527c      48c744240400.  mov qword [rsp + 4], 0
0x00005285      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000528e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005297      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000052a0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000052a9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000052b2      c74424340000.  mov dword [rsp + 0x34], 0
0x000052ba      e841faffff     call sym.quotearg_n_options
0x000052bf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000052c4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052cd      750a           jne 0x52d9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000052cf      4883c448       add rsp, 0x48
0x000052d3      c3             ret
0x000052d4      e8b7c3ffff     call sym.imp.abort
0x000052d9      e892c4ffff     call sym.imp.__stack_chk_fail
0x000052de      6690           nop
;-- quotearg_n_style_mem:
0x000052e0      4883ec48       sub rsp, 0x48
0x000052e4      4889d0         mov rax, rdx
0x000052e7      4889ca         mov rdx, rcx
0x000052ea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000052f3      48894c2438     mov qword [rsp + 0x38], rcx
0x000052f8      31c9           xor ecx, ecx
0x000052fa      83fe0a         cmp esi, 0xa
0x000052fd      7461           je 0x5360
0x000052ff      893424         mov dword [rsp], esi
0x00005302      4889e1         mov rcx, rsp
0x00005305      4889c6         mov rsi, rax
0x00005308      48c744240400.  mov qword [rsp + 4], 0
0x00005311      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000531a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005323      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000532c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005335      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000533e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005346      e8b5f9ffff     call sym.quotearg_n_options
0x0000534b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005350      644833142528.  xor rdx, qword fs:[0x28]
0x00005359      750a           jne 0x5365
0x0000535b      4883c448       add rsp, 0x48
0x0000535f      c3             ret
0x00005360      e82bc3ffff     call sym.imp.abort
0x00005365      e806c4ffff     call sym.imp.__stack_chk_fail
0x0000536a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005370      4889f2         mov rdx, rsi
0x00005373      89fe           mov esi, edi
0x00005375      31ff           xor edi, edi
0x00005377      e9d4feffff     jmp sym.quotearg_n_style
0x0000537c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005380      4889d1         mov rcx, rdx
0x00005383      4889f2         mov rdx, rsi
0x00005386      89fe           mov esi, edi
0x00005388      31ff           xor edi, edi
0x0000538a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000538f      90             nop
;-- quotearg_char_mem:
0x00005390      4883ec48       sub rsp, 0x48
0x00005394      89d1           mov ecx, edx
0x00005396      64488b042528.  mov rax, qword fs:[0x28]
0x0000539f      4889442438     mov qword [rsp + 0x38], rax
0x000053a4      31c0           xor eax, eax
0x000053a6      488b05e33e20.  mov rax, qword [0x00209290]             ; [0x209290:8]=0
0x000053ad      4989e0         mov r8, rsp
0x000053b0      83e11f         and ecx, 0x1f
0x000053b3      660f6f05a53e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000053bb      4889442430     mov qword [rsp + 0x30], rax
0x000053c0      89d0           mov eax, edx
0x000053c2      0f290424       movaps xmmword [rsp], xmm0
0x000053c6      c0e805         shr al, 5
0x000053c9      0fb6c0         movzx eax, al
0x000053cc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000053d1      660f6f05973e.  movdqa xmm0, xmmword [0x00209270]
0x000053d9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000053de      660f6f059a3e.  movdqa xmm0, xmmword [0x00209280]
0x000053e6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000053eb      418b11         mov edx, dword [r9]
0x000053ee      89d0           mov eax, edx
0x000053f0      d3e8           shr eax, cl
0x000053f2      f7d0           not eax
0x000053f4      83e001         and eax, 1
0x000053f7      d3e0           shl eax, cl
0x000053f9      4c89c1         mov rcx, r8
0x000053fc      31d0           xor eax, edx
0x000053fe      4889f2         mov rdx, rsi
0x00005401      4889fe         mov rsi, rdi
0x00005404      418901         mov dword [r9], eax
0x00005407      31ff           xor edi, edi
0x00005409      e8f2f8ffff     call sym.quotearg_n_options
0x0000540e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005413      644833342528.  xor rsi, qword fs:[0x28]
0x0000541c      7505           jne 0x5423
0x0000541e      4883c448       add rsp, 0x48
0x00005422      c3             ret
0x00005423      e848c3ffff     call sym.imp.__stack_chk_fail
0x00005428      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005430      400fbed6       movsx edx, sil
0x00005434      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000543b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005440      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005445      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000544c      e93fffffff     jmp sym.quotearg_char_mem
0x00005451      0f1f440000     nop dword [rax + rax]
0x00005456      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005460      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005465      e926ffffff     jmp sym.quotearg_char_mem
0x0000546a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005470      4883ec48       sub rsp, 0x48
0x00005474      4889d0         mov rax, rdx
0x00005477      64488b142528.  mov rdx, qword fs:[0x28]
0x00005480      4889542438     mov qword [rsp + 0x38], rdx
0x00005485      31d2           xor edx, edx
0x00005487      83fe0a         cmp esi, 0xa
0x0000548a      7468           je 0x54f4
0x0000548c      893424         mov dword [rsp], esi
0x0000548f      4889e1         mov rcx, rsp
0x00005492      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005499      4889c6         mov rsi, rax
0x0000549c      48c744240400.  mov qword [rsp + 4], 0
0x000054a5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000054ae      48c744241400.  mov qword [rsp + 0x14], 0
0x000054b7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000054c0      48c744242400.  mov qword [rsp + 0x24], 0
0x000054c9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000054d2      c74424340000.  mov dword [rsp + 0x34], 0
0x000054da      e821f8ffff     call sym.quotearg_n_options
0x000054df      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000054e4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000054ed      750a           jne 0x54f9
0x000054ef      4883c448       add rsp, 0x48
0x000054f3      c3             ret
0x000054f4      e897c1ffff     call sym.imp.abort
0x000054f9      e872c2ffff     call sym.imp.__stack_chk_fail
0x000054fe      6690           nop
;-- quotearg_n_custom_mem:
0x00005500      4883ec48       sub rsp, 0x48
0x00005504      4989c9         mov r9, rcx
0x00005507      488b0d823d20.  mov rcx, qword [0x00209290]             ; [0x209290:8]=0
0x0000550e      660f6f054a3d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005516      64488b042528.  mov rax, qword fs:[0x28]
0x0000551f      4889442438     mov qword [rsp + 0x38], rax
0x00005524      31c0           xor eax, eax
0x00005526      0f290424       movaps xmmword [rsp], xmm0
0x0000552a      4885f6         test rsi, rsi
0x0000552d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005532      c704240a0000.  mov dword [rsp], 0xa
0x00005539      660f6f052f3d.  movdqa xmm0, xmmword [0x00209270]
0x00005541      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005546      660f6f05323d.  movdqa xmm0, xmmword [0x00209280]
0x0000554e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005553      7432           je 0x5587
0x00005555      4885d2         test rdx, rdx
0x00005558      742d           je 0x5587
0x0000555a      4889742428     mov qword [rsp + 0x28], rsi
0x0000555f      4889542430     mov qword [rsp + 0x30], rdx
0x00005564      4889e1         mov rcx, rsp
0x00005567      4c89c2         mov rdx, r8
0x0000556a      4c89ce         mov rsi, r9
0x0000556d      e88ef7ffff     call sym.quotearg_n_options
0x00005572      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005577      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005580      750a           jne 0x558c
0x00005582      4883c448       add rsp, 0x48
0x00005586      c3             ret
0x00005587      e804c1ffff     call sym.imp.abort
0x0000558c      e8dfc1ffff     call sym.imp.__stack_chk_fail
0x00005591      0f1f440000     nop dword [rax + rax]
0x00005596      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000055a0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000055a7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000055ac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000055b0      4889d1         mov rcx, rdx
0x000055b3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000055ba      4889f2         mov rdx, rsi
0x000055bd      4889fe         mov rsi, rdi
0x000055c0      31ff           xor edi, edi
0x000055c2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000055c7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000055d0      4989c8         mov r8, rcx
0x000055d3      4889d1         mov rcx, rdx
0x000055d6      4889f2         mov rdx, rsi
0x000055d9      4889fe         mov rsi, rdi
0x000055dc      31ff           xor edi, edi
0x000055de      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000055e3      0f1f00         nop dword [rax]
0x000055e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000055f0      488d0d493a20.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x000055f7      e904f7ffff     jmp sym.quotearg_n_options
0x000055fc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005600      488d0d393a20.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00005607      4889f2         mov rdx, rsi
0x0000560a      4889fe         mov rsi, rdi
0x0000560d      31ff           xor edi, edi
0x0000560f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005614      6690           nop
0x00005616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005620      488d0d193a20.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00005627      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000562e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005633      0f1f00         nop dword [rax]
0x00005636      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005640      488d0df93920.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00005647      4889fe         mov rsi, rdi
0x0000564a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005651      31ff           xor edi, edi
0x00005653      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005658      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005660      4157           push r15
0x00005662      4156           push r14
0x00005664      4155           push r13
0x00005666      4154           push r12
0x00005668      4d89cc         mov r12, r9
0x0000566b      55             push rbp
0x0000566c      53             push rbx
0x0000566d      4889fd         mov rbp, rdi
0x00005670      4c89c3         mov rbx, r8
0x00005673      4883ec28       sub rsp, 0x28
0x00005677      4885f6         test rsi, rsi
0x0000567a      0f8418010000   je 0x5798
0x00005680      4989d0         mov r8, rdx
0x00005683      488d15be1e00.  lea rdx, [0x00007548]                   ; "%s (%s) %s\n"
0x0000568a      4989c9         mov r9, rcx
0x0000568d      31c0           xor eax, eax
0x0000568f      4889f1         mov rcx, rsi
0x00005692      be01000000     mov esi, 1
0x00005697      e804c3ffff     call sym.imp.__fprintf_chk
0x0000569c      488d35b81e00.  lea rsi, [0x0000755b]                   ; "(C)"
0x000056a3      31ff           xor edi, edi
0x000056a5      ba05000000     mov edx, 5
0x000056aa      e891c0ffff     call sym.imp.dcgettext
0x000056af      488d15ca2100.  lea rdx, obj.version_etc_copyright      ; 0x7880 ; "Copyright %s %d Free Software Foundation, Inc."
0x000056b6      4889c1         mov rcx, rax
0x000056b9      41b8e3070000   mov r8d, 0x7e3
0x000056bf      be01000000     mov esi, 1
0x000056c4      4889ef         mov rdi, rbp
0x000056c7      31c0           xor eax, eax
0x000056c9      e8d2c2ffff     call sym.imp.__fprintf_chk
0x000056ce      488d35131f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x75e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000056d5      31ff           xor edi, edi
0x000056d7      ba05000000     mov edx, 5
0x000056dc      e85fc0ffff     call sym.imp.dcgettext
0x000056e1      4889ee         mov rsi, rbp
0x000056e4      4889c7         mov rdi, rax
0x000056e7      e864c1ffff     call sym.imp.fputs_unlocked
0x000056ec      4983fc09       cmp r12, 9
0x000056f0      0f873a030000   ja 0x5a30
0x000056f6      488d154b2100.  lea rdx, [0x00007848]                   ; ">\xdf\xff\xff\xd0\xdf\xff\xff\x10\xe0\xff\xffX\xe0\xff\xff\xa8\xe0\xff\xff"
0x000056fd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005701      4801d0         add rax, rdx
0x00005704      ffe0           jmp rax
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
0x00005710      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005714      488b4310       mov rax, qword [rbx + 0x10]
0x00005718      488d35392000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7758 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000571f      4c8b4308       mov r8, qword [rbx + 8]
0x00005723      ba05000000     mov edx, 5
0x00005728      31ff           xor edi, edi
0x0000572a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000572e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005732      4c894c2410     mov qword [rsp + 0x10], r9
0x00005737      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000573b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000573f      48890424       mov qword [rsp], rax
0x00005743      4c89442408     mov qword [rsp + 8], r8
0x00005748      488b1b         mov rbx, qword [rbx]
0x0000574b      e8f0bfffff     call sym.imp.dcgettext
0x00005750      4883ec08       sub rsp, 8
0x00005754      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005759      4889c2         mov rdx, rax
0x0000575c      4889d9         mov rcx, rbx
0x0000575f      be01000000     mov esi, 1
0x00005764      4889ef         mov rdi, rbp
0x00005767      31c0           xor eax, eax
0x00005769      4151           push r9
0x0000576b      4155           push r13
0x0000576d      4154           push r12
0x0000576f      4157           push r15
0x00005771      4156           push r14
0x00005773      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005778      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000577d      e81ec2ffff     call sym.imp.__fprintf_chk
0x00005782      4883c430       add rsp, 0x30
0x00005786      4883c428       add rsp, 0x28
0x0000578a      5b             pop rbx
0x0000578b      5d             pop rbp
0x0000578c      415c           pop r12
0x0000578e      415d           pop r13
0x00005790      415e           pop r14
0x00005792      415f           pop r15
0x00005794      c3             ret
0x00005795      0f1f00         nop dword [rax]
0x00005798      4989c8         mov r8, rcx
0x0000579b      4889d1         mov rcx, rdx
0x0000579e      488d15af1d00.  lea rdx, str.s__s                       ; 0x7554 ; "%s %s\n"
0x000057a5      be01000000     mov esi, 1
0x000057aa      31c0           xor eax, eax
0x000057ac      e8efc1ffff     call sym.imp.__fprintf_chk
0x000057b1      e9e6feffff     jmp 0x569c
0x000057b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057c0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000057c4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000057c8      488d35b91f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7788 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000057cf      488b4310       mov rax, qword [rbx + 0x10]
0x000057d3      4c8b4308       mov r8, qword [rbx + 8]
0x000057d7      ba05000000     mov edx, 5
0x000057dc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000057e0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000057e4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000057e8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000057ec      488b1b         mov rbx, qword [rbx]
0x000057ef      4c89542418     mov qword [rsp + 0x18], r10
0x000057f4      4c894c2410     mov qword [rsp + 0x10], r9
0x000057f9      48890424       mov qword [rsp], rax
0x000057fd      4c89442408     mov qword [rsp + 8], r8
0x00005802      31ff           xor edi, edi
0x00005804      e837bfffff     call sym.imp.dcgettext
0x00005809      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000580e      4152           push r10
0x00005810      e93fffffff     jmp 0x5754
0x00005815      0f1f00         nop dword [rax]
0x00005818      488b1b         mov rbx, qword [rbx]
0x0000581b      488d353d1d00.  lea rsi, str.Written_by__s.             ; 0x755f ; "Written by %s.\n"
0x00005822      ba05000000     mov edx, 5
0x00005827      31ff           xor edi, edi
0x00005829      e812bfffff     call sym.imp.dcgettext
0x0000582e      4883c428       add rsp, 0x28
0x00005832      4889d9         mov rcx, rbx
0x00005835      4889ef         mov rdi, rbp
0x00005838      5b             pop rbx
0x00005839      5d             pop rbp
0x0000583a      415c           pop r12
0x0000583c      415d           pop r13
0x0000583e      415e           pop r14
0x00005840      415f           pop r15
0x00005842      4889c2         mov rdx, rax
0x00005845      be01000000     mov esi, 1
0x0000584a      31c0           xor eax, eax
0x0000584c      e94fc1ffff     jmp sym.imp.__fprintf_chk
0x00005851      0f1f80000000.  nop dword [rax]
0x00005858      4c8b6308       mov r12, qword [rbx + 8]
0x0000585c      488d350c1d00.  lea rsi, str.Written_by__s_and__s.      ; 0x756f ; "Written by %s and %s.\n"
0x00005863      488b1b         mov rbx, qword [rbx]
0x00005866      ba05000000     mov edx, 5
0x0000586b      31ff           xor edi, edi
0x0000586d      e8cebeffff     call sym.imp.dcgettext
0x00005872      4883c428       add rsp, 0x28
0x00005876      4d89e0         mov r8, r12
0x00005879      4889d9         mov rcx, rbx
0x0000587c      4889ef         mov rdi, rbp
0x0000587f      4889c2         mov rdx, rax
0x00005882      be01000000     mov esi, 1
0x00005887      5b             pop rbx
0x00005888      5d             pop rbp
0x00005889      415c           pop r12
0x0000588b      415d           pop r13
0x0000588d      415e           pop r14
0x0000588f      415f           pop r15
0x00005891      31c0           xor eax, eax
0x00005893      e908c1ffff     jmp sym.imp.__fprintf_chk
0x00005898      0f1f84000000.  nop dword [rax + rax]
0x000058a0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000058a4      4c8b6308       mov r12, qword [rbx + 8]
0x000058a8      488d35d71c00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7586 ; "Written by %s, %s, and %s.\n"
0x000058af      488b1b         mov rbx, qword [rbx]
0x000058b2      ba05000000     mov edx, 5
0x000058b7      31ff           xor edi, edi
0x000058b9      e882beffff     call sym.imp.dcgettext
0x000058be      4883c428       add rsp, 0x28
0x000058c2      4d89e9         mov r9, r13
0x000058c5      4d89e0         mov r8, r12
0x000058c8      4889d9         mov rcx, rbx
0x000058cb      4889ef         mov rdi, rbp
0x000058ce      4889c2         mov rdx, rax
0x000058d1      5b             pop rbx
0x000058d2      5d             pop rbp
0x000058d3      415c           pop r12
0x000058d5      415d           pop r13
0x000058d7      415e           pop r14
0x000058d9      415f           pop r15
0x000058db      be01000000     mov esi, 1
0x000058e0      31c0           xor eax, eax
0x000058e2      e9b9c0ffff     jmp sym.imp.__fprintf_chk
0x000058e7      660f1f840000.  nop word [rax + rax]
0x000058f0      488d35c11d00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x76b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x000058f7      ba05000000     mov edx, 5
0x000058fc      31ff           xor edi, edi
0x000058fe      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005902      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005906      4c8b6308       mov r12, qword [rbx + 8]
0x0000590a      488b1b         mov rbx, qword [rbx]
0x0000590d      e82ebeffff     call sym.imp.dcgettext
0x00005912      4883ec08       sub rsp, 8
0x00005916      4156           push r14
0x00005918      4889c2         mov rdx, rax
0x0000591b      4d89e9         mov r9, r13
0x0000591e      4d89e0         mov r8, r12
0x00005921      4889d9         mov rcx, rbx
0x00005924      4889ef         mov rdi, rbp
0x00005927      be01000000     mov esi, 1
0x0000592c      31c0           xor eax, eax
0x0000592e      e86dc0ffff     call sym.imp.__fprintf_chk
0x00005933      58             pop rax
0x00005934      5a             pop rdx
0x00005935      4883c428       add rsp, 0x28
0x00005939      5b             pop rbx
0x0000593a      5d             pop rbp
0x0000593b      415c           pop r12
0x0000593d      415d           pop r13
0x0000593f      415e           pop r14
0x00005941      415f           pop r15
0x00005943      c3             ret
0x00005944      0f1f4000       nop dword [rax]
0x00005948      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000594c      488d35851d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x76d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005953      ba05000000     mov edx, 5
0x00005958      31ff           xor edi, edi
0x0000595a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000595e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005962      4c8b6308       mov r12, qword [rbx + 8]
0x00005966      488b1b         mov rbx, qword [rbx]
0x00005969      e8d2bdffff     call sym.imp.dcgettext
0x0000596e      4157           push r15
0x00005970      eba4           jmp 0x5916
0x00005972      660f1f440000   nop word [rax + rax]
0x00005978      4c8b4308       mov r8, qword [rbx + 8]
0x0000597c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005980      488d35791d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7700 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005987      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000598b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000598f      ba05000000     mov edx, 5
0x00005994      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005998      31ff           xor edi, edi
0x0000599a      488b1b         mov rbx, qword [rbx]
0x0000599d      4c890424       mov qword [rsp], r8
0x000059a1      e89abdffff     call sym.imp.dcgettext
0x000059a6      4883ec08       sub rsp, 8
0x000059aa      4d89e9         mov r9, r13
0x000059ad      4154           push r12
0x000059af      4157           push r15
0x000059b1      4156           push r14
0x000059b3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000059b8      4889d9         mov rcx, rbx
0x000059bb      4889c2         mov rdx, rax
0x000059be      4889ef         mov rdi, rbp
0x000059c1      be01000000     mov esi, 1
0x000059c6      31c0           xor eax, eax
0x000059c8      e8d3bfffff     call sym.imp.__fprintf_chk
0x000059cd      4883c420       add rsp, 0x20
0x000059d1      4883c428       add rsp, 0x28
0x000059d5      5b             pop rbx
0x000059d6      5d             pop rbp
0x000059d7      415c           pop r12
0x000059d9      415d           pop r13
0x000059db      415e           pop r14
0x000059dd      415f           pop r15
0x000059df      c3             ret
0x000059e0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000059e4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000059e8      488d35391d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x7728 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000059ef      4c8b6328       mov r12, qword [rbx + 0x28]
0x000059f3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000059f7      ba05000000     mov edx, 5
0x000059fc      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a00      4c8b4308       mov r8, qword [rbx + 8]
0x00005a04      31ff           xor edi, edi
0x00005a06      4c894c2408     mov qword [rsp + 8], r9
0x00005a0b      488b1b         mov rbx, qword [rbx]
0x00005a0e      4c890424       mov qword [rsp], r8
0x00005a12      e829bdffff     call sym.imp.dcgettext
0x00005a17      4155           push r13
0x00005a19      4154           push r12
0x00005a1b      4157           push r15
0x00005a1d      4156           push r14
0x00005a1f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005a24      eb8d           jmp 0x59b3
0x00005a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a30      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005a34      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005a38      ba05000000     mov edx, 5
0x00005a3d      488b4310       mov rax, qword [rbx + 0x10]
0x00005a41      4c8b4308       mov r8, qword [rbx + 8]
0x00005a45      488d35741d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x77c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00005a4c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005a50      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005a54      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a58      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a5c      4c89542418     mov qword [rsp + 0x18], r10
0x00005a61      4c894c2410     mov qword [rsp + 0x10], r9
0x00005a66      48890424       mov qword [rsp], rax
0x00005a6a      4c89442408     mov qword [rsp + 8], r8
0x00005a6f      488b1b         mov rbx, qword [rbx]
0x00005a72      e98bfdffff     jmp 0x5802
0x00005a77      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005a80      4531c9         xor r9d, r9d
0x00005a83      49833800       cmp qword [r8], 0
0x00005a87      7412           je 0x5a9b
0x00005a89      0f1f80000000.  nop dword [rax]
0x00005a90      4983c101       add r9, 1
0x00005a94      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005a99      75f5           jne 0x5a90
0x00005a9b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005aa0      4883ec68       sub rsp, 0x68
0x00005aa4      4d89c2         mov r10, r8
0x00005aa7      4531c9         xor r9d, r9d
0x00005aaa      64488b042528.  mov rax, qword fs:[0x28]
0x00005ab3      4889442458     mov qword [rsp + 0x58], rax
0x00005ab8      31c0           xor eax, eax
0x00005aba      4989e0         mov r8, rsp
0x00005abd      0f1f00         nop dword [rax]
0x00005ac0      418b02         mov eax, dword [r10]
0x00005ac3      83f82f         cmp eax, 0x2f
0x00005ac6      7742           ja 0x5b0a
0x00005ac8      4189c3         mov r11d, eax
0x00005acb      4d035a10       add r11, qword [r10 + 0x10]
0x00005acf      83c008         add eax, 8
0x00005ad2      418902         mov dword [r10], eax
0x00005ad5      498b03         mov rax, qword [r11]
0x00005ad8      4885c0         test rax, rax
0x00005adb      4b8904c8       mov qword [r8 + r9*8], rax
0x00005adf      740a           je 0x5aeb
0x00005ae1      4983c101       add r9, 1
0x00005ae5      4983f90a       cmp r9, 0xa
0x00005ae9      75d5           jne 0x5ac0
0x00005aeb      e870fbffff     call sym.version_etc_arn
0x00005af0      488b442458     mov rax, qword [rsp + 0x58]
0x00005af5      644833042528.  xor rax, qword fs:[0x28]
0x00005afe      7505           jne 0x5b05
0x00005b00      4883c468       add rsp, 0x68
0x00005b04      c3             ret
0x00005b05      e866bcffff     call sym.imp.__stack_chk_fail
0x00005b0a      4d8b5a08       mov r11, qword [r10 + 8]
0x00005b0e      498d4308       lea rax, [r11 + 8]
0x00005b12      49894208       mov qword [r10 + 8], rax
0x00005b16      ebbd           jmp 0x5ad5
0x00005b18      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005b20      55             push rbp
0x00005b21      53             push rbx
0x00005b22      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005b28      4531db         xor r11d, r11d
0x00005b2b      4881ecb80000.  sub rsp, 0xb8
0x00005b32      64488b042528.  mov rax, qword fs:[0x28]
0x00005b3b      4889442478     mov qword [rsp + 0x78], rax
0x00005b40      31c0           xor eax, eax
0x00005b42      488d8424d000.  lea rax, [rsp + 0xd0]
0x00005b4a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005b52      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00005b5a      4c8d442420     lea r8, [rsp + 0x20]
0x00005b5f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005b67      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00005b6f      4889442410     mov qword [rsp + 0x10], rax
0x00005b74      488d84248000.  lea rax, [rsp + 0x80]
0x00005b7c      4531c9         xor r9d, r9d
0x00005b7f      4889442418     mov qword [rsp + 0x18], rax
0x00005b84      4889c5         mov rbp, rax
0x00005b87      660f1f840000.  nop word [rax + rax]
0x00005b90      4183fa2f       cmp r10d, 0x2f
0x00005b94      7756           ja 0x5bec
0x00005b96      4489d0         mov eax, r10d
0x00005b99      41bb01000000   mov r11d, 1
0x00005b9f      4183c208       add r10d, 8
0x00005ba3      4801e8         add rax, rbp
0x00005ba6      488b00         mov rax, qword [rax]
0x00005ba9      4885c0         test rax, rax
0x00005bac      4b8904c8       mov qword [r8 + r9*8], rax
0x00005bb0      740a           je 0x5bbc
0x00005bb2      4983c101       add r9, 1
0x00005bb6      4983f90a       cmp r9, 0xa
0x00005bba      75d4           jne 0x5b90
0x00005bbc      4584db         test r11b, r11b
0x00005bbf      7524           jne 0x5be5
0x00005bc1      e89afaffff     call sym.version_etc_arn
0x00005bc6      488b442478     mov rax, qword [rsp + 0x78]
0x00005bcb      644833042528.  xor rax, qword fs:[0x28]
0x00005bd4      750a           jne 0x5be0
0x00005bd6      4881c4b80000.  add rsp, 0xb8
0x00005bdd      5b             pop rbx
0x00005bde      5d             pop rbp
0x00005bdf      c3             ret
0x00005be0      e88bbbffff     call sym.imp.__stack_chk_fail
0x00005be5      4489542408     mov dword [rsp + 8], r10d
0x00005bea      ebd5           jmp 0x5bc1
0x00005bec      4889d8         mov rax, rbx
0x00005bef      4883c308       add rbx, 8
0x00005bf3      ebb1           jmp 0x5ba6
0x00005bf5      90             nop
0x00005bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005c00      53             push rbx
0x00005c01      488d359a1900.  lea rsi, str.Report_bugs_to:__s         ; 0x75a2 ; "\nReport bugs to: %s\n"
0x00005c08      ba05000000     mov edx, 5
0x00005c0d      31ff           xor edi, edi
0x00005c0f      e82cbbffff     call sym.imp.dcgettext
0x00005c14      488d159c1900.  lea rdx, str.bug_coreutils_gnu.org      ; 0x75b7 ; "bug-coreutils@gnu.org"
0x00005c1b      4889c6         mov rsi, rax
0x00005c1e      bf01000000     mov edi, 1
0x00005c23      31c0           xor eax, eax
0x00005c25      e8e6bcffff     call sym.imp.__printf_chk
0x00005c2a      488d359c1900.  lea rsi, str.s_home_page:___s           ; 0x75cd ; "%s home page: <%s>\n"
0x00005c31      ba05000000     mov edx, 5
0x00005c36      31ff           xor edi, edi
0x00005c38      e803bbffff     call sym.imp.dcgettext
0x00005c3d      488d0d4c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6c90 ; "https://www.gnu.org/software/coreutils/"
0x00005c44      488d15dc0800.  lea rdx, str.GNU_coreutils              ; 0x6527 ; "GNU coreutils"
0x00005c4b      4889c6         mov rsi, rax
0x00005c4e      bf01000000     mov edi, 1
0x00005c53      31c0           xor eax, eax
0x00005c55      e8b6bcffff     call sym.imp.__printf_chk
0x00005c5a      488b1d473420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00005c61      488d35981b00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7800 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005c68      31ff           xor edi, edi
0x00005c6a      ba05000000     mov edx, 5
0x00005c6f      e8ccbaffff     call sym.imp.dcgettext
0x00005c74      4889de         mov rsi, rbx
0x00005c77      4889c7         mov rdi, rax
0x00005c7a      5b             pop rbx
0x00005c7b      e9d0bbffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005c80      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005c81      4889fb         mov rbx, rdi
0x00005c84      e807bcffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005c89      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005c8c      7505           jne 0x5c93
0x00005c8e      4885db         test rbx, rbx
0x00005c91      7502           jne 0x5c95
0x00005c93      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005c94      c3             ret
0x00005c95      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005c9a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005ca0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005ca3      48f7e6         mul rsi
0x00005ca6      4889c7         mov rdi, rax
0x00005ca9      0f90c0         seto al
0x00005cac      4885ff         test rdi, rdi
0x00005caf      780a           js 0x5cbb
0x00005cb1      0fb6c0         movzx eax, al
0x00005cb4      4885c0         test rax, rax
0x00005cb7      7502           jne 0x5cbb
0x00005cb9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005cbb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005cbf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005cc4      6690           nop
0x00005cc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005cd0      ebae           jmp sym.xmalloc
0x00005cd2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005cd6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005ce0      4885f6         test rsi, rsi
0x00005ce3      53             push rbx
0x00005ce4      4889f3         mov rbx, rsi
0x00005ce7      7505           jne 0x5cee
0x00005ce9      4885ff         test rdi, rdi
0x00005cec      751a           jne 0x5d08
0x00005cee      4889de         mov rsi, rbx
0x00005cf1      e8fabbffff     call sym.imp.realloc
0x00005cf6      4885c0         test rax, rax
0x00005cf9      7505           jne 0x5d00
0x00005cfb      4885db         test rbx, rbx
0x00005cfe      7511           jne 0x5d11                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005d00      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005d01      c3             ret
0x00005d02      660f1f440000   nop word [rax + rax]
0x00005d08      e873b9ffff     call sym.imp.free
0x00005d0d      31c0           xor eax, eax
0x00005d0f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005d10      c3             ret
0x00005d11      e8ba010000     call sym.xalloc_die
0x00005d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005d20      4889f0         mov rax, rsi
0x00005d23      48f7e2         mul rdx
0x00005d26      4889c6         mov rsi, rax
0x00005d29      0f90c0         seto al
0x00005d2c      4885f6         test rsi, rsi
0x00005d2f      780a           js 0x5d3b
0x00005d31      0fb6c0         movzx eax, al
0x00005d34      4885c0         test rax, rax
0x00005d37      7502           jne 0x5d3b
0x00005d39      eba5           jmp sym.xrealloc
0x00005d3b      4883ec08       sub rsp, 8
0x00005d3f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005d44      6690           nop
0x00005d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005d50      4885ff         test rdi, rdi
0x00005d53      4989d1         mov r9, rdx
0x00005d56      488b0e         mov rcx, qword [rsi]
0x00005d59      7435           je 0x5d90
0x00005d5b      31d2           xor edx, edx
0x00005d5d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005d67      49f7f1         div r9
0x00005d6a      4839c8         cmp rax, rcx
0x00005d6d      763c           jbe 0x5dab
0x00005d6f      4889c8         mov rax, rcx
0x00005d72      48d1e8         shr rax, 1
0x00005d75      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005d7a      48890e         mov qword [rsi], rcx
0x00005d7d      490fafc9       imul rcx, r9
0x00005d81      4889ce         mov rsi, rcx
0x00005d84      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005d89      0f1f80000000.  nop dword [rax]
0x00005d90      4885c9         test rcx, rcx
0x00005d93      7423           je 0x5db8
0x00005d95      4889c8         mov rax, rcx
0x00005d98      49f7e1         mul r9
0x00005d9b      0f90c2         seto dl
0x00005d9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005da1      0fb6d2         movzx edx, dl
0x00005da4      7805           js 0x5dab
0x00005da6      4885d2         test rdx, rdx
0x00005da9      74cf           je 0x5d7a
0x00005dab      4883ec08       sub rsp, 8
0x00005daf      e81c010000     call sym.xalloc_die
0x00005db4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005db8      31d2           xor edx, edx
0x00005dba      b880000000     mov eax, 0x80
0x00005dbf      4531c0         xor r8d, r8d
0x00005dc2      49f7f1         div r9
0x00005dc5      4885c0         test rax, rax
0x00005dc8      410f94c0       sete r8b
0x00005dcc      498d0c00       lea rcx, [r8 + rax]
0x00005dd0      ebc3           jmp 0x5d95
0x00005dd2      0f1f4000       nop dword [rax]
0x00005dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005de0      4885ff         test rdi, rdi
0x00005de3      488b06         mov rax, qword [rsi]
0x00005de6      7428           je 0x5e10
0x00005de8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005df2      4839d0         cmp rax, rdx
0x00005df5      772a           ja 0x5e21
0x00005df7      4889c2         mov rdx, rax
0x00005dfa      48d1ea         shr rdx, 1
0x00005dfd      488d440201     lea rax, [rdx + rax + 1]
0x00005e02      488906         mov qword [rsi], rax
0x00005e05      4889c6         mov rsi, rax
0x00005e08      e9d3feffff     jmp sym.xrealloc
0x00005e0d      0f1f00         nop dword [rax]
0x00005e10      4885c0         test rax, rax
0x00005e13      ba80000000     mov edx, 0x80
0x00005e18      480f44c2       cmove rax, rdx
0x00005e1c      4885c0         test rax, rax
0x00005e1f      79e1           jns 0x5e02
0x00005e21      4883ec08       sub rsp, 8
0x00005e25      e8a6000000     call sym.xalloc_die
0x00005e2a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005e30      53             push rbx
0x00005e31      4889fb         mov rbx, rdi
0x00005e34      e847feffff     call sym.xmalloc
0x00005e39      4889da         mov rdx, rbx
0x00005e3c      31f6           xor esi, esi
0x00005e3e      4889c7         mov rdi, rax
0x00005e41      5b             pop rbx
0x00005e42      e999b9ffff     jmp sym.imp.memset
0x00005e47      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005e50      4889f8         mov rax, rdi
0x00005e53      4883ec08       sub rsp, 8
0x00005e57      48f7e6         mul rsi
0x00005e5a      0f90c2         seto dl
0x00005e5d      4885c0         test rax, rax
0x00005e60      7817           js 0x5e79
0x00005e62      0fb6d2         movzx edx, dl
0x00005e65      4885d2         test rdx, rdx
0x00005e68      750f           jne 0x5e79
0x00005e6a      e8f1b9ffff     call sym.imp.calloc
0x00005e6f      4885c0         test rax, rax
0x00005e72      7405           je 0x5e79
0x00005e74      4883c408       add rsp, 8
0x00005e78      c3             ret
0x00005e79      e852000000     call sym.xalloc_die
0x00005e7e      6690           nop
;-- xmemdup:
0x00005e80      55             push rbp
0x00005e81      53             push rbx
0x00005e82      4889fd         mov rbp, rdi
0x00005e85      4889f7         mov rdi, rsi
0x00005e88      4889f3         mov rbx, rsi
0x00005e8b      4883ec08       sub rsp, 8
0x00005e8f      e8ecfdffff     call sym.xmalloc
0x00005e94      4883c408       add rsp, 8
0x00005e98      4889da         mov rdx, rbx
0x00005e9b      4889ee         mov rsi, rbp
0x00005e9e      5b             pop rbx
0x00005e9f      5d             pop rbp
0x00005ea0      4889c7         mov rdi, rax
0x00005ea3      e9c8b9ffff     jmp sym.imp.memcpy
0x00005ea8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005eb0      53             push rbx
0x00005eb1      4889fb         mov rbx, rdi
0x00005eb4      e8a7b8ffff     call sym.imp.strlen
0x00005eb9      4889df         mov rdi, rbx
0x00005ebc      488d7001       lea rsi, [rax + 1]
0x00005ec0      5b             pop rbx
0x00005ec1      ebbd           jmp sym.xmemdup
0x00005ec3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ecd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005ed0      488d35d81900.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x78af ; "memory exhausted"
0x00005ed7      4883ec08       sub rsp, 8
0x00005edb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005ee0      31ff           xor edi, edi
0x00005ee2      e859b8ffff     call sym.imp.dcgettext
0x00005ee7      8b3d33312000   mov edi, dword [obj.exit_failure]       ; [0x209020:4]=1
0x00005eed      488d15221100.  lea rdx, [0x00007016]                   ; "%s"
0x00005ef4      4889c1         mov rcx, rax
0x00005ef7      31f6           xor esi, esi
0x00005ef9      31c0           xor eax, eax
0x00005efb      e840baffff     call sym.imp.error
0x00005f00      e88bb7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005f05      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f0f      90             nop
;-- xstrndup:
0x00005f10      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x00005f14      e817b9ffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x00005f19      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x00005f1c      7405           je 0x5f23
0x00005f1e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x00005f22      c3             ret
0x00005f23      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x00005f28      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fclose:
0x00005f30      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005f32      55             push rbp
0x00005f33      53             push rbx
0x00005f34      4889fb         mov rbx, rdi
0x00005f37      e844b9ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005f3c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005f3e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005f41      7854           js 0x5f97                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005f43      e888b9ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005f48      85c0           test eax, eax
0x00005f4a      752c           jne 0x5f78
0x00005f4c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005f4f      e85c000000     call sym.rpl_fflush
0x00005f54      85c0           test eax, eax
0x00005f56      743c           je 0x5f94
0x00005f58      e843b7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005f5d      448b20         mov r12d, dword [rax]
0x00005f60      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005f63      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005f66      e8b5b7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005f6b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005f6e      7530           jne 0x5fa0
0x00005f70      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005f71      5d             pop rbp
0x00005f72      415c           pop r12
0x00005f74      c3             ret
0x00005f75      0f1f00         nop dword [rax]
0x00005f78      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005f7b      e800b9ffff     call sym.imp.fileno
0x00005f80      31f6           xor esi, esi
0x00005f82      ba01000000     mov edx, 1
0x00005f87      89c7           mov edi, eax
0x00005f89      e832b8ffff     call sym.imp.lseek
0x00005f8e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005f92      75b8           jne 0x5f4c
0x00005f94      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005f97      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005f98      5d             pop rbp
0x00005f99      415c           pop r12
0x00005f9b      e980b7ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005fa0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005fa4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005fa9      ebc5           jmp 0x5f70
0x00005fab      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005fb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005fb3      53             push rbx
0x00005fb4      4889fb         mov rbx, rdi
0x00005fb7      7411           je 0x5fca                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005fb9      e812b9ffff     call sym.imp.__freading
0x00005fbe      85c0           test eax, eax
0x00005fc0      7408           je 0x5fca
0x00005fc2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005fc8      750e           jne 0x5fd8
0x00005fca      4889df         mov rdi, rbx
0x00005fcd      5b             pop rbx
0x00005fce      e9cdb8ffff     jmp sym.imp.fflush
0x00005fd3      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:41
0x00005fd8      4889df         mov rdi, rbx
0x00005fdb      ba01000000     mov edx, 1
0x00005fe0      31f6           xor esi, esi
0x00005fe2      e839000000     call sym.rpl_fseeko
0x00005fe7      4889df         mov rdi, rbx
0x00005fea      5b             pop rbx
0x00005feb      e9b0b8ffff     jmp sym.imp.fflush
;-- freadptr:
0x00005ff0      488b4720       mov rax, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadptr.c:31
0x00005ff4      48394728       cmp qword [rdi + 0x28], rax
0x00005ff8      7716           ja 0x6010
0x00005ffa      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/freadptr.c:39
0x00005ffe      488b5710       mov rdx, qword [rdi + 0x10]
0x00006002      4829c2         sub rdx, rax                            ; ../coreutils-8.31/lib/freadptr.c:40
0x00006005      7409           je 0x6010
0x00006007      488916         mov qword [rsi], rdx                    ; ../coreutils-8.31/lib/freadptr.c:42
0x0000600a      c3             ret                                     ; ../coreutils-8.31/lib/freadptr.c:43
0x0000600b      0f1f440000     nop dword [rax + rax]
0x00006010      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadptr.c:38
0x00006012      c3             ret
0x00006013      662e0f1f8400.  nop word cs:[rax + rax]
0x0000601d      0f1f00         nop dword [rax]
;-- rpl_fseeko:
0x00006020      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006024      48394710       cmp qword [rdi + 0x10], rax
0x00006028      7406           je 0x6030                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000602a      e921b9ffff     jmp sym.imp.fseeko
0x0000602f      90             nop
0x00006030      488b4720       mov rax, qword [rdi + 0x20]
0x00006034      48394728       cmp qword [rdi + 0x28], rax
0x00006038      75f0           jne 0x602a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000603a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000603f      75e9           jne 0x602a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006041      4154           push r12
0x00006043      55             push rbp
0x00006044      4189d4         mov r12d, edx
0x00006047      53             push rbx
0x00006048      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000604b      4889fb         mov rbx, rdi
0x0000604e      e82db8ffff     call sym.imp.fileno
0x00006053      4489e2         mov edx, r12d
0x00006056      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006059      89c7           mov edi, eax
0x0000605b      e860b7ffff     call sym.imp.lseek
0x00006060      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006064      740c           je 0x6072
0x00006066      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006069      488983900000.  mov qword [rbx + 0x90], rax
0x00006070      31c0           xor eax, eax
0x00006072      5b             pop rbx
0x00006073      5d             pop rbp
0x00006074      415c           pop r12
0x00006076      c3             ret
0x00006077      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00006080      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006082      4154           push r12
0x00006084      4989f5         mov r13, rsi
0x00006087      55             push rbp
0x00006088      53             push rbx
0x00006089      4889fb         mov rbx, rdi
0x0000608c      4989d4         mov r12, rdx
0x0000608f      4883ec18       sub rsp, 0x18
0x00006093      64488b042528.  mov rax, qword fs:[0x28]
0x0000609c      4889442408     mov qword [rsp + 8], rax
0x000060a1      31c0           xor eax, eax
0x000060a3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000060a8      4885ff         test rdi, rdi
0x000060ab      480f44d8       cmove rbx, rax
0x000060af      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000060b2      e8d9b6ffff     call sym.imp.mbrtowc
0x000060b7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000060bb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000060be      7620           jbe 0x60e0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000060c0      4d85e4         test r12, r12
0x000060c3      741b           je 0x60e0
0x000060c5      31ff           xor edi, edi
0x000060c7      e834020000     call sym.hard_locale
0x000060cc      84c0           test al, al
0x000060ce      7510           jne 0x60e0
0x000060d0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000060d5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000060da      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000060dc      0f1f4000       nop dword [rax]
0x000060e0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000060e5      644833142528.  xor rdx, qword fs:[0x28]
0x000060ee      4889e8         mov rax, rbp
0x000060f1      750b           jne 0x60fe
0x000060f3      4883c418       add rsp, 0x18
0x000060f7      5b             pop rbx
0x000060f8      5d             pop rbp
0x000060f9      415c           pop r12
0x000060fb      415d           pop r13
0x000060fd      c3             ret
0x000060fe      e86db6ffff     call sym.imp.__stack_chk_fail
0x00006103      662e0f1f8400.  nop word cs:[rax + rax]
0x0000610d      0f1f00         nop dword [rax]
;-- close_stream:
0x00006110      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006112      55             push rbp
0x00006113      4889fd         mov rbp, rdi
0x00006116      53             push rbx
0x00006117      e8b4b5ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000611c      8b5d00         mov ebx, dword [rbp]
0x0000611f      4889ef         mov rdi, rbp
0x00006122      4989c4         mov r12, rax
0x00006125      e806feffff     call sym.rpl_fclose
0x0000612a      83e320         and ebx, 0x20                           ; "@"
0x0000612d      85db           test ebx, ebx
0x0000612f      7517           jne 0x6148
0x00006131      85c0           test eax, eax
0x00006133      740a           je 0x613f                               ; stdio.h:-186
0x00006135      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006138      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000613d      7439           je 0x6178
0x0000613f      5b             pop rbx
0x00006140      5d             pop rbp
0x00006141      415c           pop r12
0x00006143      c3             ret
0x00006144      0f1f4000       nop dword [rax]
0x00006148      85c0           test eax, eax
0x0000614a      751c           jne 0x6168
0x0000614c      e84fb5ffff     call sym.imp.__errno_location
0x00006151      c70000000000   mov dword [rax], 0
0x00006157      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000615c      5b             pop rbx
0x0000615d      5d             pop rbp
0x0000615e      415c           pop r12
0x00006160      c3             ret
0x00006161      0f1f80000000.  nop dword [rax]
0x00006168      5b             pop rbx
0x00006169      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000616e      5d             pop rbp                                 ; stdio.h:-186
0x0000616f      415c           pop r12
0x00006171      c3             ret
0x00006172      660f1f440000   nop word [rax + rax]
0x00006178      e823b5ffff     call sym.imp.__errno_location
0x0000617d      833809         cmp dword [rax], 9
0x00006180      5b             pop rbx
0x00006181      5d             pop rbp
0x00006182      415c           pop r12                                 ; stdio.h:-178
0x00006184      0f95c0         setne al
0x00006187      0fb6c0         movzx eax, al
0x0000618a      f7d8           neg eax
0x0000618c      c3             ret
0x0000618d      0f1f00         nop dword [rax]
;-- freadseek:
0x00006190      4156           push r14
0x00006192      4155           push r13
0x00006194      4154           push r12
0x00006196      55             push rbp
0x00006197      53             push rbx
0x00006198      4881ec201000.  sub rsp, 0x1020
0x0000619f      64488b042528.  mov rax, qword fs:[0x28]
0x000061a8      488984241810.  mov qword [rsp + 0x1018], rax
0x000061b0      31c0           xor eax, eax
0x000061b2      4885f6         test rsi, rsi
0x000061b5      0f8488000000   je 0x6243
0x000061bb      4989fc         mov r12, rdi
0x000061be      4889f3         mov rbx, rsi
0x000061c1      e8da010000     call sym.freadahead
0x000061c6      4885c0         test rax, rax
0x000061c9      4889c5         mov rbp, rax
0x000061cc      0f84a6000000   je 0x6278
0x000061d2      4c8d6c2408     lea r13, [rsp + 8]
0x000061d7      eb1b           jmp 0x61f4
0x000061d9      0f1f80000000.  nop dword [rax]
0x000061e0      4883eb01       sub rbx, 1
0x000061e4      0f8486000000   je 0x6270
0x000061ea      4883ed01       sub rbp, 1
0x000061ee      0f8484000000   je 0x6278
0x000061f4      4c89ee         mov rsi, r13
0x000061f7      4c89e7         mov rdi, r12
0x000061fa      e8f1fdffff     call sym.freadptr
0x000061ff      4885c0         test rax, rax
0x00006202      7420           je 0x6224
0x00006204      488b442408     mov rax, qword [rsp + 8]
0x00006209      4885c0         test rax, rax
0x0000620c      7416           je 0x6224
0x0000620e      4839d8         cmp rax, rbx
0x00006211      480f47c3       cmova rax, rbx
0x00006215      4901442408     add qword [r12 + 8], rax
0x0000621a      4829c3         sub rbx, rax
0x0000621d      7451           je 0x6270
0x0000621f      4829c5         sub rbp, rax
0x00006222      7454           je 0x6278
0x00006224      4c89e7         mov rdi, r12
0x00006227      e8c4b5ffff     call sym.imp.fgetc
0x0000622c      83f8ff         cmp eax, 0xffffffff
0x0000622f      75af           jne 0x61e0
0x00006231      4c89e7         mov rdi, r12
0x00006234      e8a7b4ffff     call sym.imp.ferror
0x00006239      85c0           test eax, eax
0x0000623b      0f95c0         setne al
0x0000623e      0fb6c0         movzx eax, al
0x00006241      f7d8           neg eax
0x00006243      488b8c241810.  mov rcx, qword [rsp + 0x1018]
0x0000624b      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006254      0f859e000000   jne 0x62f8
0x0000625a      4881c4201000.  add rsp, 0x1020
0x00006261      5b             pop rbx
0x00006262      5d             pop rbp
0x00006263      415c           pop r12
0x00006265      415d           pop r13
0x00006267      415e           pop r14
0x00006269      c3             ret
0x0000626a      660f1f440000   nop word [rax + rax]
0x00006270      31c0           xor eax, eax
0x00006272      ebcf           jmp 0x6243
0x00006274      0f1f4000       nop dword [rax]
0x00006278      4c89e7         mov rdi, r12
0x0000627b      e800b6ffff     call sym.imp.fileno
0x00006280      85c0           test eax, eax
0x00006282      794c           jns 0x62d0
0x00006284      4c8d742410     lea r14, [rsp + 0x10]
0x00006289      41bd00100000   mov r13d, 0x1000
0x0000628f      eb0c           jmp 0x629d
0x00006291      0f1f80000000.  nop dword [rax]
0x00006298      4829eb         sub rbx, rbp
0x0000629b      74d3           je 0x6270
0x0000629d      4881fb001000.  cmp rbx, 0x1000
0x000062a4      4c89ed         mov rbp, r13
0x000062a7      4d89e0         mov r8, r12
0x000062aa      480f46eb       cmovbe rbp, rbx
0x000062ae      ba01000000     mov edx, 1
0x000062b3      be00100000     mov esi, 0x1000
0x000062b8      4889e9         mov rcx, rbp
0x000062bb      4c89f7         mov rdi, r14
0x000062be      e85db6ffff     call sym.imp.__fread_chk
0x000062c3      4839c5         cmp rbp, rax
0x000062c6      76d0           jbe 0x6298
0x000062c8      e964ffffff     jmp 0x6231
0x000062cd      0f1f00         nop dword [rax]
0x000062d0      31f6           xor esi, esi
0x000062d2      ba01000000     mov edx, 1
0x000062d7      89c7           mov edi, eax
0x000062d9      e8e2b4ffff     call sym.imp.lseek
0x000062de      4885c0         test rax, rax
0x000062e1      78a1           js 0x6284
0x000062e3      ba01000000     mov edx, 1
0x000062e8      4889de         mov rsi, rbx
0x000062eb      4c89e7         mov rdi, r12
0x000062ee      e82dfdffff     call sym.rpl_fseeko
0x000062f3      e94bffffff     jmp 0x6243
0x000062f8      e873b4ffff     call sym.imp.__stack_chk_fail
0x000062fd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006300      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006304      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006306      e8f5b5ffff     call sym.imp.setlocale
0x0000630b      4889c2         mov rdx, rax
0x0000630e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006313      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006316      741d           je 0x6335
0x00006318      488d3da11500.  lea rdi, [0x000078c0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000631f      b902000000     mov ecx, 2
0x00006324      4889d6         mov rsi, rdx
0x00006327      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006329      0f97c1         seta cl
0x0000632c      80d900         sbb cl, 0
0x0000632f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006331      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006333      750b           jne 0x6340
0x00006335      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006339      c3             ret
0x0000633a      660f1f440000   nop word [rax + rax]
0x00006340      488d3d7b1500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x78c2 ; "POSIX"
0x00006347      b906000000     mov ecx, 6
0x0000634c      4889d6         mov rsi, rdx
0x0000634f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006351      0f97c0         seta al
0x00006354      1c00           sbb al, 0
0x00006356      84c0           test al, al
0x00006358      0f95c0         setne al
0x0000635b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000635f      c3             ret
;-- locale_charset:
0x00006360      4883ec08       sub rsp, 8
0x00006364      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006369      e842b5ffff     call sym.imp.nl_langinfo
0x0000636e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006371      741d           je 0x6390
0x00006373      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006376      488d154b1500.  lea rdx, str.ASCII                      ; 0x78c8 ; "ASCII"
0x0000637d      480f44c2       cmove rax, rdx
0x00006381      4883c408       add rsp, 8
0x00006385      c3             ret
0x00006386      662e0f1f8400.  nop word cs:[rax + rax]
0x00006390      488d05311500.  lea rax, str.ASCII                      ; 0x78c8 ; "ASCII"
0x00006397      4883c408       add rsp, 8
0x0000639b      c3             ret
0x0000639c      0f1f4000       nop dword [rax]
;-- freadahead:
0x000063a0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x000063a2      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x000063a6      48394f28       cmp qword [rdi + 0x28], rcx             ; /r/include/x86_64-linux-gnu/bits/types:360
0x000063aa      771b           ja 0x63c7
0x000063ac      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x000063b0      482b4708       sub rax, qword [rdi + 8]
0x000063b4      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x000063ba      740b           je 0x63c7
0x000063bc      488b5758       mov rdx, qword [rdi + 0x58]
0x000063c0      482b5748       sub rdx, qword [rdi + 0x48]
0x000063c4      4801d0         add rax, rdx
0x000063c7      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x000063c9      0f1f80000000.  nop dword [rax]
;-- __libc_csu_init:
0x000063d0      4157           push r15
0x000063d2      4156           push r14
0x000063d4      4989d7         mov r15, rdx
0x000063d7      4155           push r13
0x000063d9      4154           push r12
0x000063db      4c8d256e2620.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208a50 ; "`\x1f"
0x000063e2      55             push rbp
0x000063e3      488d2d6e2620.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208a58 ; " \x1f"
0x000063ea      53             push rbx
0x000063eb      4189fd         mov r13d, edi
0x000063ee      4989f6         mov r14, rsi
0x000063f1      4c29e5         sub rbp, r12
0x000063f4      4883ec08       sub rsp, 8
0x000063f8      48c1fd03       sar rbp, 3
0x000063fc      e847b2ffff     call sym._init
0x00006401      4885ed         test rbp, rbp
0x00006404      7420           je 0x6426
0x00006406      31db           xor ebx, ebx
0x00006408      0f1f84000000.  nop dword [rax + rax]                   ; .//:682
0x00006410      4c89fa         mov rdx, r15
0x00006413      4c89f6         mov rsi, r14
0x00006416      4489ef         mov edi, r13d
0x00006419      41ff14dc       call qword [r12 + rbx*8]
0x0000641d      4883c301       add rbx, 1
0x00006421      4839dd         cmp rbp, rbx
0x00006424      75ea           jne 0x6410
0x00006426      4883c408       add rsp, 8
0x0000642a      5b             pop rbx
0x0000642b      5d             pop rbp
0x0000642c      415c           pop r12
0x0000642e      415d           pop r13
0x00006430      415e           pop r14
0x00006432      415f           pop r15
0x00006434      c3             ret
0x00006435      90             nop
0x00006436      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006440      f3c3           ret
0x00006442      662e0f1f8400.  nop word cs:[rax + rax]
0x0000644c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006450      488b15b12b20.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00006457      31f6           xor esi, esi
0x00006459      e912b5ffff     jmp sym.imp.__cxa_atexit
0x0000645e      0000           add byte [rax], al
