;-- section..plt:
;-- .plt:
0x00001470      ff35ba792000   push qword [0x00208e30]                 ; [12] -r-x section size 784 named .plt
0x00001476      ff25bc792000   jmp qword [0x00208e38]                  ; [0x208e38:8]=0
0x0000147c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001480      ff25ba792000   jmp qword [reloc.__uflow]               ; [0x208e40:8]=0x1486
0x00001486      6800000000     push 0
0x0000148b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001490      ff25b2792000   jmp qword [reloc.free]                  ; [0x208e48:8]=0x1496
0x00001496      6801000000     push 1
0x0000149b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x000014a0      ff25aa792000   jmp qword [reloc.abort]                 ; [0x208e50:8]=0x14a6
0x000014a6      6802000000     push 2
0x000014ab      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000014b0      ff25a2792000   jmp qword [reloc.__errno_location]      ; [0x208e58:8]=0x14b6
0x000014b6      6803000000     push 3
0x000014bb      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000014c0      ff259a792000   jmp qword [reloc.strncmp]               ; [0x208e60:8]=0x14c6
0x000014c6      6804000000     push 4
0x000014cb      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x000014d0      ff2592792000   jmp qword [reloc._exit]                 ; [0x208e68:8]=0x14d6
0x000014d6      6805000000     push 5
0x000014db      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x000014e0      ff258a792000   jmp qword [reloc.__fpending]            ; [0x208e70:8]=0x14e6
0x000014e6      6806000000     push 6
0x000014eb      e980ffffff     jmp sym..plt
;-- imp.fcntl:
0x000014f0      ff2582792000   jmp qword [reloc.fcntl]                 ; [0x208e78:8]=0x14f6
0x000014f6      6807000000     push 7
0x000014fb      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001500      ff257a792000   jmp qword [reloc.textdomain]            ; [0x208e80:8]=0x1506
0x00001506      6808000000     push 8
0x0000150b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001510      ff2572792000   jmp qword [reloc.fclose]                ; [0x208e88:8]=0x1516
0x00001516      6809000000     push 9
0x0000151b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001520      ff256a792000   jmp qword [reloc.bindtextdomain]        ; [0x208e90:8]=0x1526 ; "&\x15"
0x00001526      680a000000     push 0xa
0x0000152b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001530      ff2562792000   jmp qword [reloc.dcgettext]             ; [0x208e98:8]=0x1536 ; "6\x15"
0x00001536      680b000000     push 0xb
0x0000153b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001540      ff255a792000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208ea0:8]=0x1546 ; "F\x15"
0x00001546      680c000000     push 0xc
0x0000154b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001550      ff2552792000   jmp qword [reloc.strlen]                ; [0x208ea8:8]=0x1556 ; "V\x15"
0x00001556      680d000000     push 0xd
0x0000155b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001560      ff254a792000   jmp qword [reloc.__stack_chk_fail]      ; [0x208eb0:8]=0x1566 ; "f\x15"
0x00001566      680e000000     push 0xe
0x0000156b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001570      ff2542792000   jmp qword [reloc.getopt_long]           ; [0x208eb8:8]=0x1576 ; "v\x15"
0x00001576      680f000000     push 0xf
0x0000157b      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001580      ff253a792000   jmp qword [reloc.mbrtowc]               ; [0x208ec0:8]=0x1586
0x00001586      6810000000     push 0x10
0x0000158b      e9e0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001590      ff2532792000   jmp qword [reloc.strrchr]               ; [0x208ec8:8]=0x1596
0x00001596      6811000000     push 0x11
0x0000159b      e9d0feffff     jmp sym..plt
;-- imp.lseek:
0x000015a0      ff252a792000   jmp qword [reloc.lseek]                 ; [0x208ed0:8]=0x15a6
0x000015a6      6812000000     push 0x12
0x000015ab      e9c0feffff     jmp sym..plt
;-- imp.memset:
0x000015b0      ff2522792000   jmp qword [reloc.memset]                ; [0x208ed8:8]=0x15b6
0x000015b6      6813000000     push 0x13
0x000015bb      e9b0feffff     jmp sym..plt
;-- imp.close:
0x000015c0      ff251a792000   jmp qword [reloc.close]                 ; [0x208ee0:8]=0x15c6
0x000015c6      6814000000     push 0x14
0x000015cb      e9a0feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000015d0      ff2512792000   jmp qword [reloc.posix_fadvise]         ; [0x208ee8:8]=0x15d6
0x000015d6      6815000000     push 0x15
0x000015db      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x000015e0      ff250a792000   jmp qword [reloc.memcmp]                ; [0x208ef0:8]=0x15e6
0x000015e6      6816000000     push 0x16
0x000015eb      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000015f0      ff2502792000   jmp qword [reloc.fputs_unlocked]        ; [0x208ef8:8]=0x15f6
0x000015f6      6817000000     push 0x17
0x000015fb      e970feffff     jmp sym..plt
;-- imp.calloc:
0x00001600      ff25fa782000   jmp qword [reloc.calloc]                ; [0x208f00:8]=0x1606
0x00001606      6818000000     push 0x18
0x0000160b      e960feffff     jmp sym..plt
;-- imp.strcmp:
0x00001610      ff25f2782000   jmp qword [reloc.strcmp]                ; [0x208f08:8]=0x1616
0x00001616      6819000000     push 0x19
0x0000161b      e950feffff     jmp sym..plt
;-- imp.memcpy:
0x00001620      ff25ea782000   jmp qword [reloc.memcpy]                ; [0x208f10:8]=0x1626 ; "&\x16"
0x00001626      681a000000     push 0x1a
0x0000162b      e940feffff     jmp sym..plt
;-- imp.fileno:
0x00001630      ff25e2782000   jmp qword [reloc.fileno]                ; [0x208f18:8]=0x1636 ; "6\x16"
0x00001636      681b000000     push 0x1b
0x0000163b      e930feffff     jmp sym..plt
;-- imp.malloc:
0x00001640      ff25da782000   jmp qword [reloc.malloc]                ; [0x208f20:8]=0x1646 ; "F\x16"
0x00001646      681c000000     push 0x1c
0x0000164b      e920feffff     jmp sym..plt
;-- imp.fflush:
0x00001650      ff25d2782000   jmp qword [reloc.fflush]                ; [0x208f28:8]=0x1656 ; "V\x16"
0x00001656      681d000000     push 0x1d
0x0000165b      e910feffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001660      ff25ca782000   jmp qword [reloc.nl_langinfo]           ; [0x208f30:8]=0x1666 ; "f\x16"
0x00001666      681e000000     push 0x1e
0x0000166b      e900feffff     jmp sym..plt
;-- imp.strcoll:
0x00001670      ff25c2782000   jmp qword [reloc.strcoll]               ; [0x208f38:8]=0x1676 ; "v\x16"
0x00001676      681f000000     push 0x1f
0x0000167b      e9f0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001680      ff25ba782000   jmp qword [reloc.__freading]            ; [0x208f40:8]=0x1686
0x00001686      6820000000     push 0x20                               ; "@"
0x0000168b      e9e0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001690      ff25b2782000   jmp qword [reloc.fwrite_unlocked]       ; [0x208f48:8]=0x1696
0x00001696      6821000000     push 0x21                               ; '!'
0x0000169b      e9d0fdffff     jmp sym..plt
;-- imp.realloc:
0x000016a0      ff25aa782000   jmp qword [reloc.realloc]               ; [0x208f50:8]=0x16a6
0x000016a6      6822000000     push 0x22                               ; '"'
0x000016ab      e9c0fdffff     jmp sym..plt
;-- imp.fdopen:
0x000016b0      ff25a2782000   jmp qword [reloc.fdopen]                ; [0x208f58:8]=0x16b6
0x000016b6      6823000000     push 0x23                               ; '#'
0x000016bb      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000016c0      ff259a782000   jmp qword [reloc.setlocale]             ; [0x208f60:8]=0x16c6
0x000016c6      6824000000     push 0x24                               ; '$'
0x000016cb      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000016d0      ff2592782000   jmp qword [reloc.__printf_chk]          ; [0x208f68:8]=0x16d6
0x000016d6      6825000000     push 0x25                               ; '%'
0x000016db      e990fdffff     jmp sym..plt
;-- imp.error:
0x000016e0      ff258a782000   jmp qword [reloc.error]                 ; [0x208f70:8]=0x16e6
0x000016e6      6826000000     push 0x26                               ; '&'
0x000016eb      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x000016f0      ff2582782000   jmp qword [reloc.fseeko]                ; [0x208f78:8]=0x16f6
0x000016f6      6827000000     push 0x27                               ; '''
0x000016fb      e970fdffff     jmp sym..plt
;-- imp.fopen:
0x00001700      ff257a782000   jmp qword [reloc.fopen]                 ; [0x208f80:8]=0x1706
0x00001706      6828000000     push 0x28                               ; '('
0x0000170b      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001710      ff2572782000   jmp qword [reloc.__cxa_atexit]          ; [0x208f88:8]=0x1716
0x00001716      6829000000     push 0x29                               ; ')'
0x0000171b      e950fdffff     jmp sym..plt
;-- imp.exit:
0x00001720      ff256a782000   jmp qword [reloc.exit]                  ; [0x208f90:8]=0x1726 ; "&\x17"
0x00001726      682a000000     push 0x2a                               ; '*'
0x0000172b      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001730      ff2562782000   jmp qword [reloc.fwrite]                ; [0x208f98:8]=0x1736 ; "6\x17"
0x00001736      682b000000     push 0x2b                               ; '+'
0x0000173b      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001740      ff255a782000   jmp qword [reloc.__fprintf_chk]         ; [0x208fa0:8]=0x1746 ; "F\x17"
0x00001746      682c000000     push 0x2c                               ; ','
0x0000174b      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001750      ff2552782000   jmp qword [reloc.mbsinit]               ; [0x208fa8:8]=0x1756 ; "V\x17"
0x00001756      682d000000     push 0x2d                               ; '-'
0x0000175b      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001760      ff254a782000   jmp qword [reloc.iswprint]              ; [0x208fb0:8]=0x1766 ; "f\x17"
0x00001766      682e000000     push 0x2e                               ; '.'
0x0000176b      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001770      ff2542782000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fb8:8]=0x1776 ; "v\x17"
0x00001776      682f000000     push 0x2f                               ; '/'
0x0000177b      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001780      .qword 0x90660020785a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001788      0000           add byte [rax], al
0x0000178a      0000           add byte [rax], al
0x0000178c      0000           add byte [rax], al
0x0000178e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001790      4155           push r13                                ; [14] -r-x section size 17102 named .text
0x00001792      4154           push r12
0x00001794      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x0000179b      55             push rbp
0x0000179c      53             push rbx
0x0000179d      4863ef         movsxd rbp, edi
0x000017a0      4889f3         mov rbx, rsi
0x000017a3      4883ec08       sub rsp, 8
0x000017a7      488b3e         mov rdi, qword [rsi]
0x000017aa      e811140000     call sym.set_program_name
0x000017af      488d35434a00.  lea rsi, [0x000061f9]
0x000017b6      bf06000000     mov edi, 6
0x000017bb      e800ffffff     call sym.imp.setlocale
0x000017c0      488d355d4900.  lea rsi, str.usr_local_share_locale     ; 0x6124 ; "/usr/local/share/locale"
0x000017c7      488d3d2d4900.  lea rdi, [0x000060fb]                   ; "coreutils"
0x000017ce      e84dfdffff     call sym.imp.bindtextdomain
0x000017d3      488d3d214900.  lea rdi, [0x000060fb]                   ; "coreutils"
0x000017da      e821fdffff     call sym.imp.textdomain
0x000017df      bf03000000     mov edi, 3
0x000017e4      e8a7110000     call sym.hard_locale
0x000017e9      488d3d101000.  lea rdi, sym.close_stdout               ; 0x2800 ; "USH\x83\xec\bH\x8b=\x9bh "
0x000017f0      88050d792000   mov byte [obj.hard_LC_COLLATE], al      ; [0x209103:1]=0
0x000017f6      e855420000     call sym.atexit
0x000017fb      c60500792000.  mov byte [obj.only_file_1], 1           ; [0x209102:1]=0
0x00001802      c605f8782000.  mov byte [obj.only_file_2], 1           ; [0x209101:1]=0
0x00001809      c605f0782000.  mov byte [obj.both], 1                  ; [0x209100:1]=0
0x00001810      c605e8782000.  mov byte [obj.seen_unpairable], 0       ; [0x2090ff:1]=0
0x00001817      c605e0782000.  mov byte [0x002090fe], 0                ; [0x2090fe:1]=0
0x0000181e      c605d8782000.  mov byte [obj.issued_disorder_warning], 0 ; [0x2090fd:1]=0
0x00001825      c705c9782000.  mov dword [obj.check_input_order], 0    ; [0x2090f8:4]=0
0x0000182f      c605c6782000.  mov byte [obj.total_option], 0          ; [0x2090fc:1]=0
0x00001836      662e0f1f8400.  nop word cs:[rax + rax]
0x00001840      488d0d997220.  lea rcx, obj.long_options               ; 0x208ae0
0x00001847      488d15124900.  lea rdx, str.123z                       ; 0x6160 ; "123z"
0x0000184e      4531c0         xor r8d, r8d
0x00001851      4889de         mov rsi, rbx
0x00001854      89ef           mov edi, ebp
0x00001856      e815fdffff     call sym.imp.getopt_long
0x0000185b      83f8ff         cmp eax, 0xffffffff
0x0000185e      0f8475010000   je 0x19d9
0x00001864      83f833         cmp eax, 0x33
0x00001867      0f84f3000000   je 0x1960
0x0000186d      7e31           jle 0x18a0
0x0000186f      3d81000000     cmp eax, 0x81
0x00001874      747a           je 0x18f0
0x00001876      7f58           jg 0x18d0
0x00001878      83f87a         cmp eax, 0x7a
0x0000187b      0f84ef000000   je 0x1970
0x00001881      83c080         add eax, 0xffffff80
0x00001884      0f85e1010000   jne 0x1a6b
0x0000188a      c70564782000.  mov dword [obj.check_input_order], 1    ; [0x2090f8:4]=0
0x00001894      ebaa           jmp 0x1840
0x00001896      662e0f1f8400.  nop word cs:[rax + rax]
0x000018a0      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000018a5      0f84ca010000   je 0x1a75
0x000018ab      0f8edf000000   jle 0x1990
0x000018b1      83f831         cmp eax, 0x31
0x000018b4      0f84c6000000   je 0x1980
0x000018ba      83f832         cmp eax, 0x32
0x000018bd      0f85a8010000   jne 0x1a6b
0x000018c3      c60537782000.  mov byte [obj.only_file_2], 0           ; [0x209101:1]=0
0x000018ca      e971ffffff     jmp 0x1840
0x000018cf      90             nop
0x000018d0      3d82000000     cmp eax, 0x82
0x000018d5      7429           je 0x1900
0x000018d7      3d83000000     cmp eax, 0x83
0x000018dc      0f8589010000   jne 0x1a6b
0x000018e2      c60513782000.  mov byte [obj.total_option], 1          ; [0x2090fc:1]=0
0x000018e9      e952ffffff     jmp 0x1840
0x000018ee      6690           nop
0x000018f0      c705fe772000.  mov dword [obj.check_input_order], 2    ; [0x2090f8:4]=0
0x000018fa      e941ffffff     jmp 0x1840
0x000018ff      90             nop
0x00001900      48833de87720.  cmp qword [obj.col_sep_len], 0          ; [0x2090f0:8]=0
0x00001908      4c8b2db17720.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x0000190f      7417           je 0x1928
0x00001911      488b3d007720.  mov rdi, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x00001918      4c89ee         mov rsi, r13
0x0000191b      e8f0fcffff     call sym.imp.strcmp
0x00001920      85c0           test eax, eax
0x00001922      0f857b010000   jne 0x1aa3
0x00001928      41807d0000     cmp byte [r13], 0
0x0000192d      4c892de47620.  mov qword [obj.col_sep], r13            ; [0x209018:8]=0x61f8
0x00001934      b801000000     mov eax, 1
0x00001939      7414           je 0x194f
0x0000193b      31c0           xor eax, eax
0x0000193d      4c89e1         mov rcx, r12
0x00001940      4c89ef         mov rdi, r13
0x00001943      f2ae           repne scasb al, byte [rdi]
0x00001945      4889c8         mov rax, rcx
0x00001948      48f7d0         not rax
0x0000194b      4883e801       sub rax, 1
0x0000194f      4889059a7720.  mov qword [obj.col_sep_len], rax        ; [0x2090f0:8]=0
0x00001956      e9e5feffff     jmp 0x1840
0x0000195b      0f1f440000     nop dword [rax + rax]
0x00001960      c60599772000.  mov byte [obj.both], 0                  ; [0x209100:1]=0
0x00001967      e9d4feffff     jmp 0x1840
0x0000196c      0f1f4000       nop dword [rax]
0x00001970      c60599762000.  mov byte [obj.delim], 0                 ; [0x209010:1]=10 ; "\n"
0x00001977      e9c4feffff     jmp 0x1840
0x0000197c      0f1f4000       nop dword [rax]
0x00001980      c6057b772000.  mov byte [obj.only_file_1], 0           ; [0x209102:1]=0
0x00001987      e9b4feffff     jmp 0x1840
0x0000198c      0f1f4000       nop dword [rax]
0x00001990      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001995      0f85d0000000   jne 0x1a6b
0x0000199b      4883ec08       sub rsp, 8
0x0000199f      488b3d027720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000019a6      488b0d737620.  mov rcx, qword [obj.Version]            ; [0x209020:8]=0x61fa str.8.31
0x000019ad      6a00           push 0
0x000019af      4c8d0d864700.  lea r9, str.David_MacKenzie             ; 0x613c ; "David MacKenzie"
0x000019b6      4c8d058f4700.  lea r8, str.Richard_M._Stallman         ; 0x614c ; "Richard M. Stallman"
0x000019bd      488d15334700.  lea rdx, str.GNU_coreutils              ; 0x60f7 ; "GNU coreutils"
0x000019c4      488d35b14600.  lea rsi, str.comm                       ; 0x607c ; "comm"
0x000019cb      31c0           xor eax, eax
0x000019cd      e8ee330000     call sym.version_etc
0x000019d2      31ff           xor edi, edi
0x000019d4      e847fdffff     call sym.imp.exit
0x000019d9      48833d0f7720.  cmp qword [obj.col_sep_len], 0          ; [0x2090f0:8]=0
0x000019e1      744a           je 0x1a2d
0x000019e3      486305ce7620.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x000019ea      89ea           mov edx, ebp
0x000019ec      29c2           sub edx, eax
0x000019ee      83fa01         cmp edx, 1
0x000019f1      0f8e85000000   jle 0x1a7c
0x000019f7      83fa02         cmp edx, 2
0x000019fa      0f85c7000000   jne 0x1ac7
0x00001a00      488d3cc3       lea rdi, [rbx + rax*8]
0x00001a04      e857030000     call sym.compare_files
0x00001a09      803ded762000.  cmp byte [obj.issued_disorder_warning], 0 ; [0x2090fd:1]=0
0x00001a10      0f85cf000000   jne 0x1ae5
0x00001a16      803de1762000.  cmp byte [0x002090fe], 0                ; [0x2090fe:1]=0
0x00001a1d      0f85c2000000   jne 0x1ae5
0x00001a23      5a             pop rdx
0x00001a24      31c0           xor eax, eax
0x00001a26      5b             pop rbx
0x00001a27      5d             pop rbp
0x00001a28      415c           pop r12
0x00001a2a      415d           pop r13
0x00001a2c      c3             ret
0x00001a2d      48c705b87620.  mov qword [obj.col_sep_len], 1          ; [0x2090f0:8]=0
0x00001a38      eba9           jmp 0x19e3
0x00001a3a      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x00001a3f      e88c2e0000     call sym.quote
0x00001a44      488d352a4700.  lea rsi, str.missing_operand_after__s   ; 0x6175 ; "missing operand after %s"
0x00001a4b      4889c3         mov rbx, rax
0x00001a4e      ba05000000     mov edx, 5
0x00001a53      31ff           xor edi, edi
0x00001a55      e8d6faffff     call sym.imp.dcgettext
0x00001a5a      4889d9         mov rcx, rbx
0x00001a5d      4889c2         mov rdx, rax
0x00001a60      31f6           xor esi, esi
0x00001a62      31ff           xor edi, edi
0x00001a64      31c0           xor eax, eax
0x00001a66      e875fcffff     call sym.imp.error
0x00001a6b      bf01000000     mov edi, 1
0x00001a70      e8cb080000     call sym.usage
0x00001a75      31ff           xor edi, edi
0x00001a77      e8c4080000     call sym.usage
0x00001a7c      39e8           cmp eax, ebp
0x00001a7e      7cba           jl 0x1a3a
0x00001a80      488d35de4600.  lea rsi, str.missing_operand            ; 0x6165 ; "missing operand"
0x00001a87      31ff           xor edi, edi
0x00001a89      ba05000000     mov edx, 5
0x00001a8e      e89dfaffff     call sym.imp.dcgettext
0x00001a93      31f6           xor esi, esi
0x00001a95      4889c2         mov rdx, rax
0x00001a98      31ff           xor edi, edi
0x00001a9a      31c0           xor eax, eax
0x00001a9c      e83ffcffff     call sym.imp.error
0x00001aa1      ebc8           jmp 0x1a6b
0x00001aa3      488d35964500.  lea rsi, str.multiple_output_delimiters_specified ; 0x6040 ; "multiple output delimiters specified"
0x00001aaa      ba05000000     mov edx, 5
0x00001aaf      31ff           xor edi, edi
0x00001ab1      e87afaffff     call sym.imp.dcgettext
0x00001ab6      31f6           xor esi, esi
0x00001ab8      4889c2         mov rdx, rax
0x00001abb      bf01000000     mov edi, 1
0x00001ac0      31c0           xor eax, eax
0x00001ac2      e819fcffff     call sym.imp.error
0x00001ac7      488b7cc310     mov rdi, qword [rbx + rax*8 + 0x10]
0x00001acc      e8ff2d0000     call sym.quote
0x00001ad1      ba05000000     mov edx, 5
0x00001ad6      4889c3         mov rbx, rax
0x00001ad9      488d35ae4600.  lea rsi, str.extra_operand__s           ; 0x618e ; "extra operand %s"
0x00001ae0      e96effffff     jmp 0x1a53
0x00001ae5      488d35b34600.  lea rsi, str.input_is_not_in_sorted_order ; 0x619f ; "input is not in sorted order"
0x00001aec      ba05000000     mov edx, 5
0x00001af1      31ff           xor edi, edi
0x00001af3      e838faffff     call sym.imp.dcgettext
0x00001af8      31f6           xor esi, esi
0x00001afa      4889c2         mov rdx, rax
0x00001afd      bf01000000     mov edi, 1
0x00001b02      31c0           xor eax, eax
0x00001b04      e8d7fbffff     call sym.imp.error
0x00001b09      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001b10      31ed           xor ebp, ebp
0x00001b12      4989d1         mov r9, rdx
0x00001b15      5e             pop rsi
0x00001b16      4889e2         mov rdx, rsp
0x00001b19      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001b1d      50             push rax
0x00001b1e      54             push rsp
0x00001b1f      4c8d051a3f00.  lea r8, sym.__libc_csu_fini             ; 0x5a40
0x00001b26      488d0da33e00.  lea rcx, sym.__libc_csu_init            ; 0x59d0 ; "AWAVI\x89\xd7AUATL\x8d%\xee0 "
0x00001b2d      488d3d5cfcff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1790 ; "AUATI\xc7\xc4\xff\xff\xff\xffUSHc\xefH\x89\xf3H\x83\xec\bH\x8b>\xe8\x11\x14"
0x00001b34      ff158e742000   call qword [reloc.__libc_start_main]    ; [0x208fc8:8]=0
0x00001b3a      f4             hlt
0x00001b3b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001b40      488d3d597520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001b47      55             push rbp
0x00001b48      488d05517520.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001b4f      4839f8         cmp rax, rdi
0x00001b52      4889e5         mov rbp, rsp
0x00001b55      7419           je 0x1b70
0x00001b57      488b05627420.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fc0:8]=0
0x00001b5e      4885c0         test rax, rax
0x00001b61      740d           je 0x1b70
0x00001b63      5d             pop rbp
0x00001b64      ffe0           jmp rax
0x00001b66      662e0f1f8400.  nop word cs:[rax + rax]
0x00001b70      5d             pop rbp
0x00001b71      c3             ret
0x00001b72      0f1f4000       nop dword [rax]
0x00001b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001b80      488d3d197520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001b87      488d35127520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001b8e      55             push rbp
0x00001b8f      4829fe         sub rsi, rdi
0x00001b92      4889e5         mov rbp, rsp
0x00001b95      48c1fe03       sar rsi, 3
0x00001b99      4889f0         mov rax, rsi
0x00001b9c      48c1e83f       shr rax, 0x3f
0x00001ba0      4801c6         add rsi, rax
0x00001ba3      48d1fe         sar rsi, 1
0x00001ba6      7418           je 0x1bc0
0x00001ba8      488b05297420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fd8:8]=0
0x00001baf      4885c0         test rax, rax
0x00001bb2      740c           je 0x1bc0
0x00001bb4      5d             pop rbp
0x00001bb5      ffe0           jmp rax
0x00001bb7      660f1f840000.  nop word [rax + rax]
0x00001bc0      5d             pop rbp
0x00001bc1      c3             ret
0x00001bc2      0f1f4000       nop dword [rax]
0x00001bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001bd0      803d11752000.  cmp byte [obj.completed.7697], 0        ; [0x2090e8:1]=0
0x00001bd7      752f           jne 0x1c08
0x00001bd9      48833dff7320.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208fe0:8]=0
0x00001be1      55             push rbp
0x00001be2      4889e5         mov rbp, rsp
0x00001be5      740c           je 0x1bf3
0x00001be7      488b3d1a7420.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00001bee      e88dfbffff     call sym..plt.got
0x00001bf3      e848ffffff     call sym.deregister_tm_clones
0x00001bf8      c605e9742000.  mov byte [obj.completed.7697], 1        ; [0x2090e8:1]=0
0x00001bff      5d             pop rbp
0x00001c00      c3             ret
0x00001c01      0f1f80000000.  nop dword [rax]
0x00001c08      f3c3           ret
0x00001c0a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001c10      55             push rbp
0x00001c11      4889e5         mov rbp, rsp
0x00001c14      5d             pop rbp
0x00001c15      e966ffffff     jmp sym.register_tm_clones
0x00001c1a      660f1f440000   nop word [rax + rax]
;-- writeline.isra.0:
0x00001c20      83f902         cmp ecx, 2                              ; /src:174
0x00001c23      4154           push r12
0x00001c25      4989fc         mov r12, rdi
0x00001c28      55             push rbp
0x00001c29      4889f5         mov rbp, rsi
0x00001c2c      53             push rbx
0x00001c2d      4889d3         mov rbx, rdx
0x00001c30      746e           je 0x1ca0                               ; /src:176
0x00001c32      83f903         cmp ecx, 3
0x00001c35      7559           jne 0x1c90
0x00001c37      803dc2742000.  cmp byte [obj.both], 0                  ; /src:191 ; [0x209100:1]=0
0x00001c3e      7459           je 0x1c99
0x00001c40      803dbb742000.  cmp byte [obj.only_file_1], 0           ; /src:193 ; [0x209102:1]=0
0x00001c47      741b           je 0x1c64
0x00001c49      4889d1         mov rcx, rdx                            ; /src:194
0x00001c4c      488b3dc57320.  mov rdi, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x00001c53      488b15967420.  mov rdx, qword [obj.col_sep_len]        ; [0x2090f0:8]=0
0x00001c5a      be01000000     mov esi, 1
0x00001c5f      e82cfaffff     call sym.imp.fwrite_unlocked
0x00001c64      803d96742000.  cmp byte [obj.only_file_2], 0           ; /src:195 ; [0x209101:1]=0
0x00001c6b      7545           jne 0x1cb2
0x00001c6d      4889d9         mov rcx, rbx                            ; /src:200
0x00001c70      498b1424       mov rdx, qword [r12]
0x00001c74      488b7d00       mov rdi, qword [rbp]
0x00001c78      5b             pop rbx                                 ; /src:201
0x00001c79      5d             pop rbp
0x00001c7a      415c           pop r12
0x00001c7c      be01000000     mov esi, 1                              ; /src:200
0x00001c81      e90afaffff     jmp sym.imp.fwrite_unlocked
0x00001c86      662e0f1f8400.  nop word cs:[rax + rax]
0x00001c90      803d6b742000.  cmp byte [obj.only_file_1], 0           ; /src:179 ; [0x209102:1]=0
0x00001c97      75d4           jne 0x1c6d
0x00001c99      5b             pop rbx                                 ; /src:201
0x00001c9a      5d             pop rbp
0x00001c9b      415c           pop r12
0x00001c9d      c3             ret
0x00001c9e      6690           nop
0x00001ca0      803d5a742000.  cmp byte [obj.only_file_2], 0           ; /src:184 ; [0x209101:1]=0
0x00001ca7      74f0           je 0x1c99
0x00001ca9      803d52742000.  cmp byte [obj.only_file_1], 0           ; /src:186 ; [0x209102:1]=0
0x00001cb0      74bb           je 0x1c6d
0x00001cb2      488b15377420.  mov rdx, qword [obj.col_sep_len]        ; /src:196 ; [0x2090f0:8]=0
0x00001cb9      488b3d587320.  mov rdi, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x00001cc0      4889d9         mov rcx, rbx
0x00001cc3      be01000000     mov esi, 1
0x00001cc8      e8c3f9ffff     call sym.imp.fwrite_unlocked
0x00001ccd      eb9e           jmp 0x1c6d
0x00001ccf      90             nop
;-- check_order.isra.1.part.2:
0x00001cd0      4154           push r12                                ; /src:215
0x00001cd2      55             push rbp
0x00001cd3      4c8d25237420.  lea r12, obj.issued_disorder_warning    ; /src:223 ; 0x2090fd
0x00001cda      53             push rbx                                ; /src:215
0x00001cdb      418d58ff       lea ebx, [r8 - 1]                       ; /src:223
0x00001cdf      4863db         movsxd rbx, ebx
0x00001ce2      41803c1c00     cmp byte [r12 + rbx], 0
0x00001ce7      7562           jne 0x1d4b
0x00001ce9      4889f0         mov rax, rsi
0x00001cec      4489c5         mov ebp, r8d
0x00001cef      488b37         mov rsi, qword [rdi]
0x00001cf2      4989c8         mov r8, rcx
0x00001cf5      488b0a         mov rcx, qword [rdx]
0x00001cf8      488b38         mov rdi, qword [rax]
0x00001cfb      498b10         mov rdx, qword [r8]
0x00001cfe      4883ee01       sub rsi, 1
0x00001d02      4883e901       sub rcx, 1
0x00001d06      803df6732000.  cmp byte [obj.hard_LC_COLLATE], 0       ; /src:227 ; [0x209103:1]=0
0x00001d0d      7541           jne 0x1d50
0x00001d0f      e86c0e0000     call sym.memcmp2                        ; /src:231
0x00001d14      85c0           test eax, eax                           ; /src:234
0x00001d16      7e33           jle 0x1d4b
0x00001d18      488d35693d00.  lea rsi, str.file__d_is_not_in_sorted_order ; /src:238 ; 0x5a88 ; "file %d is not in sorted order"
0x00001d1f      31ff           xor edi, edi
0x00001d21      ba05000000     mov edx, 5
0x00001d26      e805f8ffff     call sym.imp.dcgettext
0x00001d2b      31ff           xor edi, edi                            ; /src:236
0x00001d2d      833dc4732000.  cmp dword [obj.check_input_order], 1    ; [0x2090f8:4]=0
0x00001d34      4889c2         mov rdx, rax
0x00001d37      89e9           mov ecx, ebp
0x00001d39      400f94c7       sete dil
0x00001d3d      31f6           xor esi, esi
0x00001d3f      31c0           xor eax, eax
0x00001d41      e89af9ffff     call sym.imp.error
0x00001d46      41c6041c01     mov byte [r12 + rbx], 1                 ; /src:242
0x00001d4b      5b             pop rbx                                 ; /src:246
0x00001d4c      5d             pop rbp
0x00001d4d      415c           pop r12
0x00001d4f      c3             ret
0x00001d50      e81b350000     call sym.xmemcoll                       ; /src:228
0x00001d55      ebbd           jmp 0x1d14
0x00001d57      660f1f840000.  nop word [rax + rax]
;-- compare_files:
0x00001d60      4157           push r15                                ; /src:255
0x00001d62      4156           push r14
0x00001d64      4989fe         mov r14, rdi
0x00001d67      4155           push r13
0x00001d69      4154           push r12
0x00001d6b      55             push rbp
0x00001d6c      53             push rbx
0x00001d6d      31ed           xor ebp, ebp
0x00001d6f      4881ec080200.  sub rsp, 0x208
0x00001d76      64488b042528.  mov rax, qword fs:[0x28]
0x00001d7f      48898424f801.  mov qword [rsp + 0x1f8], rax
0x00001d87      31c0           xor eax, eax
0x00001d89      488d84248000.  lea rax, [rsp + 0x80]
0x00001d91      4c8dbc24e000.  lea r15, [rsp + 0xe0]
0x00001d99      48897c2448     mov qword [rsp + 0x48], rdi
0x00001d9e      4889442410     mov qword [rsp + 0x10], rax
0x00001da3      4989c4         mov r12, rax
0x00001da6      488d442470     lea rax, [rsp + 0x70]
0x00001dab      4889442418     mov qword [rsp + 0x18], rax
0x00001db0      488d8424a000.  lea rax, [rsp + 0xa0]
0x00001db8      4889442420     mov qword [rsp + 0x20], rax
0x00001dbd      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00001dc2      4889e8         mov rax, rbp
0x00001dc5      4d8d6f60       lea r13, [r15 + 0x60]
0x00001dc9      48c1e005       shl rax, 5
0x00001dcd      896c2408       mov dword [rsp + 8], ebp
0x00001dd1      488d1c01       lea rbx, [rcx + rax]
0x00001dd5      4c89ff         mov rdi, r15                            ; /src:284
0x00001dd8      4883c308       add rbx, 8
0x00001ddc      e85f0c0000     call sym.initbuffer
0x00001de1      4c897bf8       mov qword [rbx - 8], r15                ; /src:285
0x00001de5      4983c718       add r15, 0x18
0x00001de9      4d39ef         cmp r15, r13                            ; /src:282
0x00001dec      75e7           jne 0x1dd5
0x00001dee      498b16         mov rdx, qword [r14]                    ; /src:290
0x00001df1      488d3d6a4400.  lea rdi, [0x00006262]                   ; "-"
0x00001df8      b902000000     mov ecx, 2
0x00001dfd      41c704240000.  mov dword [r12], 0                      ; /src:287
0x00001e05      41c744240400.  mov dword [r12 + 4], 0                  ; /src:288
0x00001e0e      41c744240800.  mov dword [r12 + 8], 0                  ; /src:289
0x00001e17      4c8b2d927220.  mov r13, qword [obj.stdin]              ; /src:290 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2090b0:8]=0
0x00001e1e      4889d6         mov rsi, rdx
0x00001e21      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e23      0f97c0         seta al
0x00001e26      1c00           sbb al, 0
0x00001e28      84c0           test al, al
0x00001e2a      0f8515040000   jne 0x2245
0x00001e30      488b442418     mov rax, qword [rsp + 0x18]
0x00001e35      4d85ed         test r13, r13                           ; /src:291
0x00001e38      4c892ce8       mov qword [rax + rbp*8], r13            ; /src:290
0x00001e3c      0f84c8040000   je 0x230a                               ; /src:291
0x00001e42      be02000000     mov esi, 2                              ; /src:294
0x00001e47      4c89ef         mov rdi, r13
0x00001e4a      e8710a0000     call sym.fadvise
0x00001e4f      48635c2408     movsxd rbx, dword [rsp + 8]             ; /src:296
0x00001e54      0fbe15b57120.  movsx edx, byte [obj.delim]             ; [0x209010:1]=10 ; "\n"
0x00001e5b      4c89ee         mov rsi, r13
0x00001e5e      48c1e305       shl rbx, 5
0x00001e62      488bbc1ca000.  mov rdi, qword [rsp + rbx + 0xa0]
0x00001e6a      e8e10b0000     call sym.readlinebuffer_delim
0x00001e6f      488d542460     lea rdx, [rsp + 0x60]
0x00001e74      488904ea       mov qword [rdx + rbp*8], rax
0x00001e78      418b4500       mov eax, dword [r13]                    ; /coreutils-8.31/lib:134
0x00001e7c      83e020         and eax, 0x20                           ; /src:298 ; "@"
0x00001e7f      0f8556040000   jne 0x22db
0x00001e85      4983c608       add r14, 8
0x00001e89      4983c40c       add r12, 0xc
0x00001e8d      4883fd01       cmp rbp, 1                              ; /src:280
0x00001e91      740d           je 0x1ea0
0x00001e93      bd01000000     mov ebp, 1
0x00001e98      e920ffffff     jmp 0x1dbd
0x00001e9d      0f1f00         nop dword [rax]
0x00001ea0      89442444       mov dword [rsp + 0x44], eax
0x00001ea4      4889542420     mov qword [rsp + 0x20], rdx
0x00001ea9      48c744243800.  mov qword [rsp + 0x38], 0               ; /src:275
0x00001eb2      48c744242800.  mov qword [rsp + 0x28], 0
0x00001ebb      48c744243000.  mov qword [rsp + 0x30], 0
0x00001ec4      0f1f4000       nop dword [rax]
0x00001ec8      488b6c2460     mov rbp, qword [rsp + 0x60]             ; /src:302
0x00001ecd      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00001ed2      4885ed         test rbp, rbp
0x00001ed5      0f84cd010000   je 0x20a8
0x00001edb      4885db         test rbx, rbx                           ; /src:311
0x00001ede      c644245e00     mov byte [rsp + 0x5e], 0                ; /src:305
0x00001ee3      c644245f00     mov byte [rsp + 0x5f], 0
0x00001ee8      0f8402020000   je 0x20f0                               ; /src:311
0x00001eee      803d0e722000.  cmp byte [obj.hard_LC_COLLATE], 0       ; /src:315 ; [0x209103:1]=0
0x00001ef5      4c8b7308       mov r14, qword [rbx + 8]
0x00001ef9      488b7310       mov rsi, qword [rbx + 0x10]
0x00001efd      4c8b7d08       mov r15, qword [rbp + 8]
0x00001f01      488b7d10       mov rdi, qword [rbp + 0x10]
0x00001f05      0f852d020000   jne 0x2138
0x00001f0b      4d39f7         cmp r15, r14                            ; /src:320
0x00001f0e      4c89f2         mov rdx, r14
0x00001f11      490f46d7       cmovbe rdx, r15
0x00001f15      4883ea01       sub rdx, 1
0x00001f19      e8c2f6ffff     call sym.imp.memcmp                     ; /src:321
0x00001f1e      85c0           test eax, eax                           ; /src:322
0x00001f20      0f85fa010000   jne 0x2120
0x00001f26      4d39f7         cmp r15, r14                            ; /src:325
0x00001f29      0f82c1010000   jb 0x20f0
0x00001f2f      0f95c0         setne al
0x00001f32      0fb6c0         movzx eax, al
0x00001f35      85c0           test eax, eax                           ; /src:330
0x00001f37      488b156a7120.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001f3e      0f85e3010000   jne 0x2127
0x00001f44      488d7310       lea rsi, [rbx + 0x10]                   ; /src:334
0x00001f48      488d7b08       lea rdi, [rbx + 8]
0x00001f4c      b903000000     mov ecx, 3
0x00001f51      488344243801   add qword [rsp + 0x38], 1               ; /src:333
0x00001f57      e8c4fcffff     call sym.writeline.isra.0               ; /src:334
0x00001f5c      c644245f01     mov byte [rsp + 0x5f], 1                ; /src:356
0x00001f61      c644245e01     mov byte [rsp + 0x5e], 1                ; /src:358
0x00001f66      b801000000     mov eax, 1
0x00001f6b      31db           xor ebx, ebx
0x00001f6d      84c0           test al, al                             ; /src:361
0x00001f6f      488b6c2410     mov rbp, qword [rsp + 0x10]             ; /src:358
0x00001f74      4189de         mov r14d, ebx
0x00001f77      751f           jne 0x1f98                              ; /src:361
0x00001f79      4883c50c       add rbp, 0xc
0x00001f7d      4883fb01       cmp rbx, 1                              ; /src:360
0x00001f81      0f8441ffffff   je 0x1ec8
0x00001f87      0fb644245f     movzx eax, byte [rsp + 0x5f]
0x00001f8c      bb01000000     mov ebx, 1
0x00001f91      4189de         mov r14d, ebx
0x00001f94      84c0           test al, al                             ; /src:361
0x00001f96      74e1           je 0x1f79
0x00001f98      4c636500       movsxd r12, dword [rbp]                 ; /src:365
0x00001f9c      488b4c2418     mov rcx, qword [rsp + 0x18]             ; /src:368
0x00001fa1      4c637d04       movsxd r15, dword [rbp + 4]             ; /src:364
0x00001fa5      0fbe15647020.  movsx edx, byte [obj.delim]             ; /src:368 ; [0x209010:1]=10 ; "\n"
0x00001fac      4c8b2cd9       mov r13, qword [rcx + rbx*8]
0x00001fb0      488d0c9d0000.  lea rcx, [rbx*4]
0x00001fb8      418d442401     lea eax, [r12 + 1]                      ; /src:366
0x00001fbd      44896504       mov dword [rbp + 4], r12d               ; /src:365
0x00001fc1      44897d08       mov dword [rbp + 8], r15d               ; /src:364
0x00001fc5      48894c2408     mov qword [rsp + 8], rcx                ; /src:368
0x00001fca      83e003         and eax, 3                              ; /src:366
0x00001fcd      4c89ee         mov rsi, r13                            ; /src:368
0x00001fd0      894500         mov dword [rbp], eax                    ; /src:366
0x00001fd3      4898           cdqe                                    ; /src:368
0x00001fd5      4801c8         add rax, rcx
0x00001fd8      488bbcc4a000.  mov rdi, qword [rsp + rax*8 + 0xa0]
0x00001fe0      e86b0a0000     call sym.readlinebuffer_delim
0x00001fe5      488b742420     mov rsi, qword [rsp + 0x20]
0x00001fea      4885c0         test rax, rax                           ; /src:371
0x00001fed      488b4c2408     mov rcx, qword [rsp + 8]
0x00001ff2      488904de       mov qword [rsi + rbx*8], rax            ; /src:368
0x00001ff6      7458           je 0x2050                               ; /src:371
0x00001ff8      8b15fa702000   mov edx, dword [obj.check_input_order]  ; /src:220 ; [0x2090f8:4]=0
0x00001ffe      83fa02         cmp edx, 2
0x00002001      7436           je 0x2039
0x00002003      83fa01         cmp edx, 1                              ; /src:221
0x00002006      7409           je 0x2011
0x00002008      803df0702000.  cmp byte [obj.seen_unpairable], 0       ; [0x2090ff:1]=0
0x0000200f      7428           je 0x2039
0x00002011      4963d6         movsxd rdx, r14d                        ; /src:372
0x00002014      488d4810       lea rcx, [rax + 0x10]
0x00002018      448d4301       lea r8d, [rbx + 1]
0x0000201c      498d1494       lea rdx, [r12 + rdx*4]
0x00002020      488bbcd4a000.  mov rdi, qword [rsp + rdx*8 + 0xa0]
0x00002028      488d5008       lea rdx, [rax + 8]
0x0000202c      488d7710       lea rsi, [rdi + 0x10]
0x00002030      4883c708       add rdi, 8
0x00002034      e897fcffff     call sym.check_order.isra.1.part.2
0x00002039      41f6450020     test byte [r13], 0x20                   ; /src:381
0x0000203e      0f8518020000   jne 0x225c
0x00002044      c6441c5e00     mov byte [rsp + rbx + 0x5e], 0          ; /src:384
0x00002049      e92bffffff     jmp 0x1f79
0x0000204e      6690           nop
0x00002050      4c01f9         add rcx, r15                            ; /src:377
0x00002053      488bbccca000.  mov rdi, qword [rsp + rcx*8 + 0xa0]
0x0000205b      48837f1000     cmp qword [rdi + 0x10], 0
0x00002060      74d7           je 0x2039
0x00002062      8b0590702000   mov eax, dword [obj.check_input_order]  ; /src:220 ; [0x2090f8:4]=0
0x00002068      83f802         cmp eax, 2
0x0000206b      74cc           je 0x2039
0x0000206d      83f801         cmp eax, 1                              ; /src:221
0x00002070      7409           je 0x207b
0x00002072      803d86702000.  cmp byte [obj.seen_unpairable], 0       ; [0x2090ff:1]=0
0x00002079      74be           je 0x2039
0x0000207b      4963c6         movsxd rax, r14d                        ; /src:379
0x0000207e      488d7710       lea rsi, [rdi + 0x10]
0x00002082      448d4301       lea r8d, [rbx + 1]
0x00002086      498d0484       lea rax, [r12 + rax*4]
0x0000208a      4883c708       add rdi, 8
0x0000208e      488b94c4a000.  mov rdx, qword [rsp + rax*8 + 0xa0]
0x00002096      488d4a10       lea rcx, [rdx + 0x10]
0x0000209a      4883c208       add rdx, 8
0x0000209e      e82dfcffff     call sym.check_order.isra.1.part.2
0x000020a3      eb94           jmp 0x2039
0x000020a5      0f1f00         nop dword [rax]
0x000020a8      4885db         test rbx, rbx                           ; /src:302
0x000020ab      0f849f000000   je 0x2150
0x000020b1      488b15f06f20.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000020b8      c644245e00     mov byte [rsp + 0x5e], 0                ; /src:305
0x000020bd      c6053b702000.  mov byte [obj.seen_unpairable], 1       ; /src:338 ; [0x2090ff:1]=0
0x000020c4      488d7310       lea rsi, [rbx + 0x10]                   ; /src:349
0x000020c8      488d7b08       lea rdi, [rbx + 8]
0x000020cc      b902000000     mov ecx, 2
0x000020d1      488344242801   add qword [rsp + 0x28], 1               ; /src:348
0x000020d7      e844fbffff     call sym.writeline.isra.0               ; /src:349
0x000020dc      c644245f01     mov byte [rsp + 0x5f], 1                ; /src:356
0x000020e1      0fb644245e     movzx eax, byte [rsp + 0x5e]
0x000020e6      e980feffff     jmp 0x1f6b
0x000020eb      0f1f440000     nop dword [rax + rax]
0x000020f0      488b15b16f20.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000020f7      c60501702000.  mov byte [obj.seen_unpairable], 1       ; /src:338 ; [0x2090ff:1]=0
0x000020fe      488d7510       lea rsi, [rbp + 0x10]                   ; /src:343
0x00002102      488d7d08       lea rdi, [rbp + 8]
0x00002106      b901000000     mov ecx, 1
0x0000210b      488344243001   add qword [rsp + 0x30], 1               ; /src:342
0x00002111      e80afbffff     call sym.writeline.isra.0               ; /src:343
0x00002116      e946feffff     jmp 0x1f61
0x0000211b      0f1f440000     nop dword [rax + rax]
0x00002120      488b15816f20.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002127      85c0           test eax, eax                           ; /src:339
0x00002129      c605cf6f2000.  mov byte [obj.seen_unpairable], 1       ; /src:338 ; [0x2090ff:1]=0
0x00002130      7f92           jg 0x20c4                               ; /src:339
0x00002132      ebca           jmp 0x20fe
0x00002134      0f1f4000       nop dword [rax]
0x00002138      4983ef01       sub r15, 1                              ; /src:316
0x0000213c      498d4eff       lea rcx, [r14 - 1]
0x00002140      4889f2         mov rdx, rsi
0x00002143      4c89fe         mov rsi, r15
0x00002146      e825310000     call sym.xmemcoll
0x0000214b      e9e5fdffff     jmp 0x1f35
0x00002150      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00002155      e8b6310000     call sym.rpl_fclose
0x0000215a      85c0           test eax, eax
0x0000215c      0f853a010000   jne 0x229c                              ; /src:264
0x00002162      488b7c2478     mov rdi, qword [rsp + 0x78]
0x00002167      e8a4310000     call sym.rpl_fclose
0x0000216c      85c0           test eax, eax
0x0000216e      0f8520010000   jne 0x2294
0x00002174      803d816f2000.  cmp byte [obj.total_option], 0          ; [0x2090fc:1]=0
0x0000217b      0f849b000000   je 0x221c
0x00002181      488d35dd3e00.  lea rsi, str.total                      ; 0x6065 ; "total"
0x00002188      ba05000000     mov edx, 5
0x0000218d      31ff           xor edi, edi
0x0000218f      0fb62d7a6e20.  movzx ebp, byte [obj.delim]             ; [0x209010:1]=10 ; "\n"
0x00002196      e895f3ffff     call sym.imp.dcgettext
0x0000219b      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000021a0      488db424e001.  lea rsi, [rsp + 0x1e0]
0x000021a8      4889c3         mov rbx, rax
0x000021ab      4c8b3d666e20.  mov r15, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x000021b2      e839080000     call sym.umaxtostr
0x000021b7      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000021bc      488db424c001.  lea rsi, [rsp + 0x1c0]
0x000021c4      4989c6         mov r14, rax
0x000021c7      4c8b254a6e20.  mov r12, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x000021ce      e81d080000     call sym.umaxtostr
0x000021d3      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000021d8      488db424a001.  lea rsi, [rsp + 0x1a0]
0x000021e0      4c8b2d316e20.  mov r13, qword [obj.col_sep]            ; [0x209018:8]=0x61f8
0x000021e7      4889442408     mov qword [rsp + 8], rax
0x000021ec      e8ff070000     call sym.umaxtostr
0x000021f1      55             push rbp
0x000021f2      53             push rbx
0x000021f3      488d35713e00.  lea rsi, str.s_s_s_s_s_s_s_c            ; 0x606b ; "%s%s%s%s%s%s%s%c"
0x000021fa      4157           push r15
0x000021fc      4156           push r14
0x000021fe      4889c2         mov rdx, rax
0x00002201      4c8b442428     mov r8, qword [rsp + 0x28]
0x00002206      4d89e1         mov r9, r12
0x00002209      4c89e9         mov rcx, r13
0x0000220c      bf01000000     mov edi, 1
0x00002211      31c0           xor eax, eax
0x00002213      e8b8f4ffff     call sym.imp.__printf_chk
0x00002218      4883c420       add rsp, 0x20
0x0000221c      488b8424f801.  mov rax, qword [rsp + 0x1f8]
0x00002224      644833042528.  xor rax, qword fs:[0x28]
0x0000222d      0f85a3000000   jne 0x22d6                              ; /src:162
0x00002233      4881c4080200.  add rsp, 0x208
0x0000223a      5b             pop rbx
0x0000223b      5d             pop rbp
0x0000223c      415c           pop r12
0x0000223e      415d           pop r13
0x00002240      415e           pop r14
0x00002242      415f           pop r15
0x00002244      c3             ret
0x00002245      488d356e3f00.  lea rsi, [0x000061ba]                   ; "r"
0x0000224c      4889d7         mov rdi, rdx
0x0000224f      e89c060000     call sym.fopen_safer
0x00002254      4989c5         mov r13, rax
0x00002257      e9d4fbffff     jmp 0x1e30
0x0000225c      488b442448     mov rax, qword [rsp + 0x48]
0x00002261      4d63fe         movsxd r15, r14d
0x00002264      be03000000     mov esi, 3
0x00002269      31ff           xor edi, edi
0x0000226b      4a8b14f8       mov rdx, qword [rax + r15*8]
0x0000226f      e88c240000     call sym.quotearg_n_style_colon
0x00002274      4889c3         mov rbx, rax
0x00002277      e834f2ffff     call sym.imp.__errno_location
0x0000227c      8b30           mov esi, dword [rax]
0x0000227e      488d158a3f00.  lea rdx, [0x0000620f]                   ; "%s"
0x00002285      4889d9         mov rcx, rbx
0x00002288      bf01000000     mov edi, 1
0x0000228d      31c0           xor eax, eax
0x0000228f      e84cf4ffff     call sym.imp.error
0x00002294      c74424440100.  mov dword [rsp + 0x44], 1
0x0000229c      4863442444     movsxd rax, dword [rsp + 0x44]
0x000022a1      488b4c2448     mov rcx, qword [rsp + 0x48]
0x000022a6      be03000000     mov esi, 3
0x000022ab      31ff           xor edi, edi
0x000022ad      488b14c1       mov rdx, qword [rcx + rax*8]
0x000022b1      e84a240000     call sym.quotearg_n_style_colon
0x000022b6      4889c3         mov rbx, rax
0x000022b9      e8f2f1ffff     call sym.imp.__errno_location
0x000022be      8b30           mov esi, dword [rax]
0x000022c0      488d15483f00.  lea rdx, [0x0000620f]                   ; "%s"
0x000022c7      4889d9         mov rcx, rbx
0x000022ca      bf01000000     mov edi, 1
0x000022cf      31c0           xor eax, eax
0x000022d1      e80af4ffff     call sym.imp.error
0x000022d6      e885f2ffff     call sym.imp.__stack_chk_fail
0x000022db      498b16         mov rdx, qword [r14]                    ; /src:36
0x000022de      be03000000     mov esi, 3
0x000022e3      31ff           xor edi, edi
0x000022e5      e816240000     call sym.quotearg_n_style_colon
0x000022ea      4889c3         mov rbx, rax
0x000022ed      e8bef1ffff     call sym.imp.__errno_location
0x000022f2      8b30           mov esi, dword [rax]
0x000022f4      488d15143f00.  lea rdx, [0x0000620f]                   ; "%s"
0x000022fb      4889d9         mov rcx, rbx
0x000022fe      bf01000000     mov edi, 1
0x00002303      31c0           xor eax, eax
0x00002305      e8d6f3ffff     call sym.imp.error
0x0000230a      498b16         mov rdx, qword [r14]
0x0000230d      be03000000     mov esi, 3
0x00002312      31ff           xor edi, edi
0x00002314      e8e7230000     call sym.quotearg_n_style_colon
0x00002319      4889c3         mov rbx, rax
0x0000231c      e88ff1ffff     call sym.imp.__errno_location
0x00002321      8b30           mov esi, dword [rax]
0x00002323      488d15e53e00.  lea rdx, [0x0000620f]                   ; "%s"
0x0000232a      4889d9         mov rcx, rbx
0x0000232d      bf01000000     mov edi, 1
0x00002332      31c0           xor eax, eax
0x00002334      e8a7f3ffff     call sym.imp.error
0x00002339      0f1f80000000.  nop dword [rax]
;-- usage:
0x00002340      4155           push r13                                ; /src:-147
0x00002342      4154           push r12
0x00002344      ba05000000     mov edx, 5
0x00002349      55             push rbp
0x0000234a      53             push rbx
0x0000234b      89fd           mov ebp, edi
0x0000234d      4881ec880000.  sub rsp, 0x88
0x00002354      488b1dbd6d20.  mov rbx, qword [obj.program_name]       ; [0x209118:8]=0
0x0000235b      64488b042528.  mov rax, qword fs:[0x28]
0x00002364      4889442478     mov qword [rsp + 0x78], rax
0x00002369      31c0           xor eax, eax
0x0000236b      85ff           test edi, edi
0x0000236d      742e           je 0x239d
0x0000236f      488d35323700.  lea rsi, str.Try___s___help__for_more_information. ; 0x5aa8 ; "Try '%s --help' for more information.\n"
0x00002376      31ff           xor edi, edi
0x00002378      e8b3f1ffff     call sym.imp.dcgettext
0x0000237d      488b3d5c6d20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00002384      4889c2         mov rdx, rax
0x00002387      4889d9         mov rcx, rbx
0x0000238a      be01000000     mov esi, 1
0x0000238f      31c0           xor eax, eax
0x00002391      e8aaf3ffff     call sym.imp.__fprintf_chk
0x00002396      89ef           mov edi, ebp
0x00002398      e883f3ffff     call sym.imp.exit
0x0000239d      488d352c3700.  lea rsi, str.Usage:__s__OPTION_..._FILE1_FILE2 ; 0x5ad0 ; "Usage: %s [OPTION]... FILE1 FILE2\n"
0x000023a4      31ff           xor edi, edi
0x000023a6      e885f1ffff     call sym.imp.dcgettext
0x000023ab      4889da         mov rdx, rbx
0x000023ae      4889c6         mov rsi, rax
0x000023b1      bf01000000     mov edi, 1
0x000023b6      31c0           xor eax, eax
0x000023b8      e813f3ffff     call sym.imp.__printf_chk
0x000023bd      488b1de46c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000023c4      488d352d3700.  lea rsi, str.Compare_sorted_files_FILE1_and_FILE2_line_by_line. ; 0x5af8 ; "Compare sorted files FILE1 and FILE2 line by line.\n"
0x000023cb      ba05000000     mov edx, 5
0x000023d0      31ff           xor edi, edi
0x000023d2      e859f1ffff     call sym.imp.dcgettext
0x000023d7      4889de         mov rsi, rbx
0x000023da      4889c7         mov rdi, rax
0x000023dd      e80ef2ffff     call sym.imp.fputs_unlocked
0x000023e2      488b1dbf6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000023e9      488d35403700.  lea rsi, str.When_FILE1_or_FILE2__not_both__is____read_standard_input. ; 0x5b30 ; "\nWhen FILE1 or FILE2 (not both) is -, read standard input.\n"
0x000023f0      ba05000000     mov edx, 5
0x000023f5      31ff           xor edi, edi
0x000023f7      e834f1ffff     call sym.imp.dcgettext
0x000023fc      4889de         mov rsi, rbx
0x000023ff      4889c7         mov rdi, rax
0x00002402      e8e9f1ffff     call sym.imp.fputs_unlocked
0x00002407      488b1d9a6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000240e      488d355b3700.  lea rsi, str.With_no_options__produce_three_column_output.__Column_one_contains__lines_unique_to_FILE1__column_two_contains_lines_unique_to_FILE2___and_column_three_contains_lines_common_to_both_files. ; 0x5b70 ; "\nWith no options, produce three-column output.  Column one contains\nlines unique to FILE1, column two contains lines unique to FILE2,\nand column three contains lines common to both files.\n"
0x00002415      ba05000000     mov edx, 5
0x0000241a      31ff           xor edi, edi
0x0000241c      e80ff1ffff     call sym.imp.dcgettext
0x00002421      4889de         mov rsi, rbx
0x00002424      4889c7         mov rdi, rax
0x00002427      e8c4f1ffff     call sym.imp.fputs_unlocked
0x0000242c      488b1d756c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002433      488d35f63700.  lea rsi, str.1______________suppress_column_1__lines_unique_to_FILE1______2______________suppress_column_2__lines_unique_to_FILE2______3______________suppress_column_3__lines_that_appear_in_both_files ; 0x5c30 ; "\n  -1              suppress column 1 (lines unique to FILE1)\n  -2              suppress column 2 (lines unique to FILE2)\n  -3              suppress column 3 (lines that appear in both files)\n"
0x0000243a      ba05000000     mov edx, 5
0x0000243f      31ff           xor edi, edi
0x00002441      e8eaf0ffff     call sym.imp.dcgettext
0x00002446      4889de         mov rsi, rbx
0x00002449      4889c7         mov rdi, rax
0x0000244c      e89ff1ffff     call sym.imp.fputs_unlocked
0x00002451      488b1d506c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002458      488d35913800.  lea rsi, str.check_order_____check_that_the_input_is_correctly_sorted__even________________________if_all_input_lines_are_pairable______nocheck_order___do_not_check_that_the_input_is_correctly_sorted ; 0x5cf0 ; "\n  --check-order     check that the input is correctly sorted, even\n                      if all input lines are pairable\n  --nocheck-order   do not check that the input is correctly sorted\n"
0x0000245f      ba05000000     mov edx, 5
0x00002464      31ff           xor edi, edi
0x00002466      e8c5f0ffff     call sym.imp.dcgettext
0x0000246b      4889de         mov rsi, rbx
0x0000246e      4889c7         mov rdi, rax
0x00002471      e87af1ffff     call sym.imp.fputs_unlocked
0x00002476      488b1d2b6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000247d      488d352c3900.  lea rsi, str.output_delimiter_STR__separate_columns_with_STR ; 0x5db0 ; "  --output-delimiter=STR  separate columns with STR\n"
0x00002484      ba05000000     mov edx, 5
0x00002489      31ff           xor edi, edi
0x0000248b      e8a0f0ffff     call sym.imp.dcgettext
0x00002490      4889de         mov rsi, rbx
0x00002493      4889c7         mov rdi, rax
0x00002496      e855f1ffff     call sym.imp.fputs_unlocked
0x0000249b      488b1d066c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000024a2      488d353f3900.  lea rsi, str.total___________output_a_summary ; 0x5de8 ; "  --total           output a summary\n"
0x000024a9      ba05000000     mov edx, 5
0x000024ae      31ff           xor edi, edi
0x000024b0      e87bf0ffff     call sym.imp.dcgettext
0x000024b5      4889de         mov rsi, rbx
0x000024b8      4889c7         mov rdi, rax
0x000024bb      e830f1ffff     call sym.imp.fputs_unlocked
0x000024c0      488b1de16b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000024c7      488d35423900.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0x5e10 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x000024ce      ba05000000     mov edx, 5
0x000024d3      31ff           xor edi, edi
0x000024d5      e856f0ffff     call sym.imp.dcgettext
0x000024da      4889de         mov rsi, rbx
0x000024dd      4889c7         mov rdi, rax
0x000024e0      e80bf1ffff     call sym.imp.fputs_unlocked
0x000024e5      488b1dbc6b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000024ec      488d355d3900.  lea rsi, str.help_____display_this_help_and_exit ; 0x5e50 ; "      --help     display this help and exit\n"
0x000024f3      ba05000000     mov edx, 5
0x000024f8      31ff           xor edi, edi
0x000024fa      e831f0ffff     call sym.imp.dcgettext
0x000024ff      4889de         mov rsi, rbx
0x00002502      4889c7         mov rdi, rax
0x00002505      e8e6f0ffff     call sym.imp.fputs_unlocked
0x0000250a      488b1d976b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002511      488d35683900.  lea rsi, str.version__output_version_information_and_exit ; 0x5e80 ; "      --version  output version information and exit\n"
0x00002518      ba05000000     mov edx, 5
0x0000251d      31ff           xor edi, edi
0x0000251f      e80cf0ffff     call sym.imp.dcgettext
0x00002524      4889de         mov rsi, rbx
0x00002527      4889c7         mov rdi, rax
0x0000252a      e8c1f0ffff     call sym.imp.fputs_unlocked
0x0000252f      488b1d726b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002536      488d357b3900.  lea rsi, str.Note__comparisons_honor_the_rules_specified_by__LC_COLLATE_. ; 0x5eb8 ; "\nNote, comparisons honor the rules specified by 'LC_COLLATE'.\n"
0x0000253d      ba05000000     mov edx, 5
0x00002542      31ff           xor edi, edi                            ; ../coreutils-8.31/src/mm.c:249
0x00002544      e8e7efffff     call sym.imp.dcgettext
0x00002549      4889de         mov rsi, rbx
0x0000254c      4889c7         mov rdi, rax
0x0000254f      e89cf0ffff     call sym.imp.fputs_unlocked
0x00002554      488b1dbd6b20.  mov rbx, qword [obj.program_name]       ; [0x209118:8]=0
0x0000255b      488d35963900.  lea rsi, str.Examples:_____s__12_file1_file2__Print_only_lines_present_in_both_file1_and_file2._____s__3_file1_file2__Print_lines_in_file1_not_in_file2__and_vice_versa. ; 0x5ef8 ; "\nExamples:\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\n"
0x00002562      ba05000000     mov edx, 5                              ; ../coreutils-8.31/src/mm.c:260
0x00002567      31ff           xor edi, edi
0x00002569      e8c2efffff     call sym.imp.dcgettext
0x0000256e      4889d9         mov rcx, rbx
0x00002571      4889da         mov rdx, rbx
0x00002574      4889c6         mov rsi, rax
0x00002577      bf01000000     mov edi, 1
0x0000257c      31c0           xor eax, eax
0x0000257e      488d1df73a00.  lea rbx, str.comm                       ; 0x607c ; "comm"
0x00002585      e846f1ffff     call sym.imp.__printf_chk
0x0000258a      488d05f03a00.  lea rax, [0x00006081]                   ; "["
0x00002591      488d0d2a3b00.  lea rcx, str.sha256sum                  ; 0x60c2 ; "sha256sum"
0x00002598      48c744246000.  mov qword [rsp + 0x60], 0
0x000025a1      48c744246800.  mov qword [rsp + 0x68], 0
0x000025aa      4889e2         mov rdx, rsp
0x000025ad      48890424       mov qword [rsp], rax
0x000025b1      488d05cb3a00.  lea rax, str.test_invocation            ; 0x6083 ; "test invocation"
0x000025b8      48894c2430     mov qword [rsp + 0x30], rcx
0x000025bd      488d0d083b00.  lea rcx, str.sha384sum                  ; 0x60cc ; "sha384sum"
0x000025c4      4889442408     mov qword [rsp + 8], rax
0x000025c9      488d052b3b00.  lea rax, [0x000060fb]                   ; "coreutils"
0x000025d0      48894c2440     mov qword [rsp + 0x40], rcx
0x000025d5      488d0dfa3a00.  lea rcx, str.sha512sum                  ; 0x60d6 ; "sha512sum"
0x000025dc      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/src/mm.c:262
0x000025e1      488d05ab3a00.  lea rax, str.Multi_call_invocation      ; 0x6093 ; "Multi-call invocation"
0x000025e8      48894c2450     mov qword [rsp + 0x50], rcx
0x000025ed      4889442418     mov qword [rsp + 0x18], rax
0x000025f2      488d05b03a00.  lea rax, str.sha224sum                  ; 0x60a9 ; "sha224sum"
0x000025f9      4889442420     mov qword [rsp + 0x20], rax
0x000025fe      488d05ae3a00.  lea rax, str.sha2_utilities             ; 0x60b3 ; "sha2 utilities"
0x00002605      4889442428     mov qword [rsp + 0x28], rax
0x0000260a      4889442438     mov qword [rsp + 0x38], rax
0x0000260f      4889442448     mov qword [rsp + 0x48], rax
0x00002614      4889442458     mov qword [rsp + 0x58], rax
0x00002619      0f1f80000000.  nop dword [rax]
0x00002620      4883c210       add rdx, 0x10
0x00002624      488b3a         mov rdi, qword [rdx]
0x00002627      4885ff         test rdi, rdi
0x0000262a      7413           je 0x263f
0x0000262c      b905000000     mov ecx, 5
0x00002631      4889de         mov rsi, rbx
0x00002634      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; ../coreutils-8.31/src/mm.c:272
0x00002636      0f97c0         seta al
0x00002639      1c00           sbb al, 0
0x0000263b      84c0           test al, al
0x0000263d      75e1           jne 0x2620
0x0000263f      4c8b6208       mov r12, qword [rdx + 8]
0x00002643      31ff           xor edi, edi
0x00002645      ba05000000     mov edx, 5
0x0000264a      488d358f3a00.  lea rsi, str.s_online_help:___s         ; 0x60e0 ; "\n%s online help: <%s>\n"
0x00002651      4d85e4         test r12, r12
0x00002654      0f84c1000000   je 0x271b
0x0000265a      e8d1eeffff     call sym.imp.dcgettext
0x0000265f      488d0d323900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5f98 ; "https://www.gnu.org/software/coreutils/"
0x00002666      488d158a3a00.  lea rdx, str.GNU_coreutils              ; 0x60f7 ; "GNU coreutils"
0x0000266d      4889c6         mov rsi, rax
0x00002670      bf01000000     mov edi, 1
0x00002675      31c0           xor eax, eax
0x00002677      e854f0ffff     call sym.imp.__printf_chk
0x0000267c      31f6           xor esi, esi
0x0000267e      bf05000000     mov edi, 5
0x00002683      e838f0ffff     call sym.imp.setlocale
0x00002688      4885c0         test rax, rax
0x0000268b      741c           je 0x26a9
0x0000268d      488d35713a00.  lea rsi, [0x00006105]                   ; "en_"
0x00002694      ba03000000     mov edx, 3
0x00002699      4889c7         mov rdi, rax
0x0000269c      e81feeffff     call sym.imp.strncmp
0x000026a1      85c0           test eax, eax
0x000026a3      0f8507010000   jne 0x27b0
0x000026a9      488d35593a00.  lea rsi, str.Full_documentation___s_s   ; 0x6109 ; "Full documentation <%s%s>\n"
0x000026b0      31ff           xor edi, edi
0x000026b2      ba05000000     mov edx, 5
0x000026b7      e874eeffff     call sym.imp.dcgettext
0x000026bc      488d0db93900.  lea rcx, str.comm                       ; 0x607c ; "comm"
0x000026c3      488d15ce3800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5f98 ; "https://www.gnu.org/software/coreutils/"
0x000026ca      4889c6         mov rsi, rax
0x000026cd      bf01000000     mov edi, 1
0x000026d2      31c0           xor eax, eax
0x000026d4      e8f7efffff     call sym.imp.__printf_chk
0x000026d9      4939dc         cmp r12, rbx
0x000026dc      488d0dba3900.  lea rcx, [0x0000609d]                   ; " invocation"
0x000026e3      488d1d0f3b00.  lea rbx, [0x000061f9]
0x000026ea      480f44d9       cmove rbx, rcx
0x000026ee      488d35133900.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6008 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000026f5      31ff           xor edi, edi
0x000026f7      ba05000000     mov edx, 5
0x000026fc      e82feeffff     call sym.imp.dcgettext
0x00002701      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/mm.c:273
0x00002704      4889c6         mov rsi, rax
0x00002707      4c89e2         mov rdx, r12
0x0000270a      bf01000000     mov edi, 1
0x0000270f      31c0           xor eax, eax
0x00002711      e8baefffff     call sym.imp.__printf_chk
0x00002716      e97bfcffff     jmp 0x2396
0x0000271b      e810eeffff     call sym.imp.dcgettext
0x00002720      488d0d713800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5f98 ; "https://www.gnu.org/software/coreutils/"
0x00002727      488d15c93900.  lea rdx, str.GNU_coreutils              ; 0x60f7 ; "GNU coreutils"
0x0000272e      4889c6         mov rsi, rax
0x00002731      bf01000000     mov edi, 1
0x00002736      31c0           xor eax, eax
0x00002738      e893efffff     call sym.imp.__printf_chk
0x0000273d      31f6           xor esi, esi
0x0000273f      bf05000000     mov edi, 5                              ; .//ib:-280
0x00002744      e877efffff     call sym.imp.setlocale
0x00002749      4885c0         test rax, rax
0x0000274c      7418           je 0x2766
0x0000274e      488d35b03900.  lea rsi, [0x00006105]                   ; "en_"
0x00002755      ba03000000     mov edx, 3
0x0000275a      4889c7         mov rdi, rax
0x0000275d      e85eedffff     call sym.imp.strncmp
0x00002762      85c0           test eax, eax
0x00002764      7543           jne 0x27a9
0x00002766      488d359c3900.  lea rsi, str.Full_documentation___s_s   ; 0x6109 ; "Full documentation <%s%s>\n"
0x0000276d      ba05000000     mov edx, 5
0x00002772      31ff           xor edi, edi
0x00002774      4c8d25013900.  lea r12, str.comm                       ; 0x607c ; "comm"
0x0000277b      488d1d1b3900.  lea rbx, [0x0000609d]                   ; " invocation"
0x00002782      e8a9edffff     call sym.imp.dcgettext
0x00002787      488d0dee3800.  lea rcx, str.comm                       ; 0x607c ; "comm"
0x0000278e      488d15033800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5f98 ; "https://www.gnu.org/software/coreutils/"
0x00002795      4889c6         mov rsi, rax
0x00002798      bf01000000     mov edi, 1
0x0000279d      31c0           xor eax, eax
0x0000279f      e82cefffff     call sym.imp.__printf_chk
0x000027a4      e945ffffff     jmp 0x26ee
0x000027a9      4c8d25cc3800.  lea r12, str.comm                       ; 0x607c ; "comm"
0x000027b0      4c8b2df16820.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000027b7      488d35023800.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5fc0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000027be      31ff           xor edi, edi
0x000027c0      ba05000000     mov edx, 5
0x000027c5      e866edffff     call sym.imp.dcgettext
0x000027ca      4c89ee         mov rsi, r13
0x000027cd      4889c7         mov rdi, rax
0x000027d0      e81beeffff     call sym.imp.fputs_unlocked
0x000027d5      e9cffeffff     jmp 0x26a9
0x000027da      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000027e0      48893d296920.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x209110:8]=0
0x000027e7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000027e8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000027f0      40883d116920.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x209108:1]=0
0x000027f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000027f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002800      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002801      53             push rbx
0x00002802      4883ec08       sub rsp, 8
0x00002806      488b3d9b6820.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000280d      e82e2f0000     call sym.close_stream
0x00002812      85c0           test eax, eax
0x00002814      7416           je 0x282c
0x00002816      e895ecffff     call sym.imp.__errno_location
0x0000281b      803de6682000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x209108:1]=0
0x00002822      4889c3         mov rbx, rax
0x00002825      741c           je 0x2843
0x00002827      833820         cmp dword [rax], 0x20
0x0000282a      7517           jne 0x2843
0x0000282c      488b3dad6820.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00002833      e8082f0000     call sym.close_stream
0x00002838      85c0           test eax, eax
0x0000283a      7546           jne 0x2882
0x0000283c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002840      5b             pop rbx
0x00002841      5d             pop rbp
0x00002842      c3             ret
0x00002843      488d35b53900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x61ff ; "write error"
0x0000284a      31ff           xor edi, edi
0x0000284c      ba05000000     mov edx, 5
0x00002851      e8daecffff     call sym.imp.dcgettext
0x00002856      488b3db36820.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x209110:8]=0
0x0000285d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002860      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002863      7428           je 0x288d
0x00002865      e8661e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000286a      8b33           mov esi, dword [rbx]
0x0000286c      488d15983900.  lea rdx, str.s:__s                      ; 0x620b ; "%s: %s"
0x00002873      4889c1         mov rcx, rax
0x00002876      4989e8         mov r8, rbp
0x00002879      31ff           xor edi, edi
0x0000287b      31c0           xor eax, eax
0x0000287d      e85eeeffff     call sym.imp.error
0x00002882      8b3da0672000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209028:4]=1
0x00002888      e843ecffff     call sym.imp._exit
0x0000288d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000288f      488d15793900.  lea rdx, [0x0000620f]                   ; "%s"
0x00002896      4889c1         mov rcx, rax
0x00002899      31ff           xor edi, edi
0x0000289b      31c0           xor eax, eax
0x0000289d      e83eeeffff     call sym.imp.error
0x000028a2      ebde           jmp 0x2882
0x000028a4      662e0f1f8400.  nop word cs:[rax + rax]
0x000028ae      6690           nop
;-- fdadvise:
0x000028b0      e91bedffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x000028b5      90             nop
0x000028b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000028c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000028c3      741b           je 0x28e0
0x000028c5      53             push rbx
0x000028c6      89f3           mov ebx, esi
0x000028c8      e863edffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000028cd      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000028cf      31d2           xor edx, edx
0x000028d1      31f6           xor esi, esi
0x000028d3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000028d4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000028d6      e9f5ecffff     jmp sym.imp.posix_fadvise
0x000028db      0f1f440000     nop dword [rax + rax]
0x000028e0      f3c3           ret
0x000028e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000028ec      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x000028f0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x000028f2      55             push rbp
0x000028f3      4889f5         mov rbp, rsi
0x000028f6      53             push rbx
0x000028f7      e804eeffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000028fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000028ff      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x00002902      740d           je 0x2911                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x00002904      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x00002907      e824edffff     call sym.imp.fileno
0x0000290c      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x0000290f      760f           jbe 0x2920
0x00002911      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x00002914      5b             pop rbx
0x00002915      5d             pop rbp
0x00002916      415c           pop r12
0x00002918      c3             ret
0x00002919      0f1f80000000.  nop dword [rax]
0x00002920      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00002922      e8c91f0000     call sym.dup_safer
0x00002927      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00002929      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000292c      783a           js 0x2968                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000292e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00002931      e8da290000     call sym.rpl_fclose
0x00002936      85c0           test eax, eax
0x00002938      7513           jne 0x294d
0x0000293a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0000293d      4489e7         mov edi, r12d
0x00002940      e86bedffff     call sym.imp.fdopen
0x00002945      4885c0         test rax, rax
0x00002948      4889c3         mov rbx, rax
0x0000294b      75c4           jne 0x2911
0x0000294d      e85eebffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00002952      8b28           mov ebp, dword [rax]
0x00002954      4889c3         mov rbx, rax
0x00002957      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0000295a      e861ecffff     call sym.imp.close
0x0000295f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00002961      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00002963      ebac           jmp 0x2911
0x00002965      0f1f00         nop dword [rax]
0x00002968      e843ebffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0000296d      448b20         mov r12d, dword [rax]
0x00002970      4889c5         mov rbp, rax
0x00002973      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00002976      e895290000     call sym.rpl_fclose
0x0000297b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000297d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00002981      eb8e           jmp 0x2911                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00002983      662e0f1f8400.  nop word cs:[rax + rax]
0x0000298d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00002990      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00002994      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00002996      e825edffff     call sym.imp.setlocale
0x0000299b      4889c2         mov rdx, rax
0x0000299e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000029a3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000029a6      741d           je 0x29c5
0x000029a8      488d3d633800.  lea rdi, [0x00006212]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000029af      b902000000     mov ecx, 2
0x000029b4      4889d6         mov rsi, rdx
0x000029b7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000029b9      0f97c1         seta cl
0x000029bc      80d900         sbb cl, 0
0x000029bf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000029c1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000029c3      750b           jne 0x29d0
0x000029c5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000029c9      c3             ret
0x000029ca      660f1f440000   nop word [rax + rax]
0x000029d0      488d3d3d3800.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x6214 ; "POSIX"
0x000029d7      b906000000     mov ecx, 6
0x000029dc      4889d6         mov rsi, rdx
0x000029df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000029e1      0f97c0         seta al
0x000029e4      1c00           sbb al, 0
0x000029e6      84c0           test al, al
0x000029e8      0f95c0         setne al
0x000029eb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000029ef      c3             ret
;-- umaxtostr:
0x000029f0      488d4e14       lea rcx, [rsi + 0x14]
0x000029f4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000029f8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00002a02      660f1f440000   nop word [rax + rax]
0x00002a08      4889f8         mov rax, rdi
0x00002a0b      4883e901       sub rcx, 1
0x00002a0f      48f7e6         mul rsi
0x00002a12      48c1ea03       shr rdx, 3
0x00002a16      488d0492       lea rax, [rdx + rdx*4]
0x00002a1a      4801c0         add rax, rax
0x00002a1d      4829c7         sub rdi, rax
0x00002a20      83c730         add edi, 0x30
0x00002a23      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00002a26      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00002a29      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00002a2c      75da           jne 0x2a08
0x00002a2e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00002a31      c3             ret
0x00002a32      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a3c      0f1f4000       nop dword [rax]
;-- initbuffer:
0x00002a40      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/linebuffer.c:38
0x00002a44      48c747100000.  mov qword [rdi + 0x10], 0
0x00002a4c      0f1107         movups xmmword [rdi], xmm0
0x00002a4f      c3             ret                                     ; ../coreutils-8.31/lib/linebuffer.c:40
;-- readlinebuffer_delim:
0x00002a50      4157           push r15                                ; ../coreutils-8.31/lib/linebuffer.c:61
0x00002a52      4156           push r14
0x00002a54      4155           push r13
0x00002a56      4154           push r12
0x00002a58      55             push rbp
0x00002a59      53             push rbx
0x00002a5a      4883ec18       sub rsp, 0x18
0x00002a5e      4c8b6f10       mov r13, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:63
0x00002a62      4c8b07         mov r8, qword [rdi]                     ; ../coreutils-8.31/lib/linebuffer.c:65
0x00002a65      4d01e8         add r8, r13
0x00002a68      f60610         test byte [rsi], 0x10                   ; ../coreutils-8.31/lib/linebuffer.c:67
0x00002a6b      0f85cf000000   jne 0x2b40
0x00002a71      4989fe         mov r14, rdi
0x00002a74      4889f5         mov rbp, rsi
0x00002a77      4c89eb         mov rbx, r13
0x00002a7a      440fbefa       movsx r15d, dl
0x00002a7e      eb0b           jmp 0x2a8b
0x00002a80      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002a83      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002a87      880e           mov byte [rsi], cl
0x00002a89      745b           je 0x2ae6                               ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002a8b      488b4d08       mov rcx, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002a8f      483b4d10       cmp rcx, qword [rbp + 0x10]
0x00002a93      736b           jae 0x2b00
0x00002a95      488d4101       lea rax, [rcx + 1]
0x00002a99      48894508       mov qword [rbp + 8], rax
0x00002a9d      440fb621       movzx r12d, byte [rcx]
0x00002aa1      4489e1         mov ecx, r12d
0x00002aa4      4c39c3         cmp rbx, r8                             ; ../coreutils-8.31/lib/linebuffer.c:81
0x00002aa7      4889de         mov rsi, rbx
0x00002aaa      75d4           jne 0x2a80
0x00002aac      498b1e         mov rbx, qword [r14]                    ; ../coreutils-8.31/lib/linebuffer.c:83
0x00002aaf      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00002ab2      4c89ef         mov rdi, r13
0x00002ab5      8854240f       mov byte [rsp + 0xf], dl
0x00002ab9      880c24         mov byte [rsp], cl
0x00002abc      e8bf250000     call sym.x2realloc
0x00002ac1      4d8b06         mov r8, qword [r14]                     ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002ac4      0fb60c24       movzx ecx, byte [rsp]
0x00002ac8      488d3418       lea rsi, [rax + rbx]                    ; ../coreutils-8.31/lib/linebuffer.c:85
0x00002acc      49894610       mov qword [r14 + 0x10], rax             ; ../coreutils-8.31/lib/linebuffer.c:86
0x00002ad0      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00002ad3      0fb654240f     movzx edx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002ad8      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002adc      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00002adf      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002ae2      880e           mov byte [rsi], cl                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00002ae4      75a5           jne 0x2a8b                              ; ../coreutils-8.31/lib/linebuffer.c:91
0x00002ae6      4c29eb         sub rbx, r13                            ; ../coreutils-8.31/lib/linebuffer.c:93
0x00002ae9      4c89f0         mov rax, r14                            ; ../coreutils-8.31/lib/linebuffer.c:94
0x00002aec      49895e08       mov qword [r14 + 8], rbx                ; ../coreutils-8.31/lib/linebuffer.c:93
0x00002af0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002af4      5b             pop rbx
0x00002af5      5d             pop rbp
0x00002af6      415c           pop r12
0x00002af8      415d           pop r13
0x00002afa      415e           pop r14
0x00002afc      415f           pop r15
0x00002afe      c3             ret
0x00002aff      90             nop
0x00002b00      4889ef         mov rdi, rbp                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002b03      8854240f       mov byte [rsp + 0xf], dl
0x00002b07      4c890424       mov qword [rsp], r8
0x00002b0b      e870e9ffff     call sym.imp.__uflow
0x00002b10      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00002b13      4189c4         mov r12d, eax                           ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00002b16      4c8b0424       mov r8, qword [rsp]                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x00002b1a      0fb654240f     movzx edx, byte [rsp + 0xf]
0x00002b1f      7530           jne 0x2b51
0x00002b21      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/linebuffer.c:75
0x00002b24      741a           je 0x2b40
0x00002b26      f6450020       test byte [rbp], 0x20
0x00002b2a      7514           jne 0x2b40
0x00002b2c      3853ff         cmp byte [rbx - 1], dl                  ; ../coreutils-8.31/lib/linebuffer.c:77
0x00002b2f      74b5           je 0x2ae6
0x00002b31      4589fc         mov r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:79
0x00002b34      89d1           mov ecx, edx
0x00002b36      e969ffffff     jmp 0x2aa4
0x00002b3b      0f1f440000     nop dword [rax + rax]
0x00002b40      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002b44      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/linebuffer.c:68
0x00002b46      5b             pop rbx                                 ; ../coreutils-8.31/lib/linebuffer.c:95
0x00002b47      5d             pop rbp
0x00002b48      415c           pop r12
0x00002b4a      415d           pop r13
0x00002b4c      415e           pop r14
0x00002b4e      415f           pop r15
0x00002b50      c3             ret
0x00002b51      89c1           mov ecx, eax
0x00002b53      e94cffffff     jmp 0x2aa4
0x00002b58      0f1f84000000.  nop dword [rax + rax]
;-- readlinebuffer:
0x00002b60      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/linebuffer.c:44
0x00002b65      e9e6feffff     jmp sym.readlinebuffer_delim
0x00002b6a      660f1f440000   nop word [rax + rax]
;-- freebuffer:
0x00002b70      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:101
0x00002b74      e917e9ffff     jmp sym.imp.free
0x00002b79      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/linebuffer.c:102
;-- memcmp2:
0x00002b80      55             push rbp                                ; ../coreutils-8.31/lib/memcmp2.c:26
0x00002b81      53             push rbx
0x00002b82      4889f5         mov rbp, rsi
0x00002b85      4889d6         mov rsi, rdx
0x00002b88      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/memcmp2.c:27
0x00002b8b      4889cb         mov rbx, rcx                            ; ../coreutils-8.31/lib/memcmp2.c:26
0x00002b8e      4883ec08       sub rsp, 8
0x00002b92      4839cd         cmp rbp, rcx                            ; ../coreutils-8.31/lib/memcmp2.c:27
0x00002b95      480f46d5       cmovbe rdx, rbp
0x00002b99      e842eaffff     call sym.imp.memcmp
0x00002b9e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/memcmp2.c:28
0x00002ba0      750b           jne 0x2bad
0x00002ba2      4839dd         cmp rbp, rbx                            ; ../coreutils-8.31/lib/memcmp2.c:30
0x00002ba5      7211           jb 0x2bb8
0x00002ba7      0f97c0         seta al                                 ; ../coreutils-8.31/lib/memcmp2.c:32
0x00002baa      0fb6c0         movzx eax, al
0x00002bad      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcmp2.c:36
0x00002bb1      5b             pop rbx
0x00002bb2      5d             pop rbp
0x00002bb3      c3             ret
0x00002bb4      0f1f4000       nop dword [rax]
0x00002bb8      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/memcmp2.c:31 ; -1
0x00002bbd      ebee           jmp 0x2bad                              ; ../coreutils-8.31/lib/memcmp2.c:35
0x00002bbf      90             nop
;-- set_program_name:
0x00002bc0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002bc3      53             push rbx
0x00002bc4      7477           je 0x2c3d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002bc6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002bcb      4889fb         mov rbx, rdi
0x00002bce      e8bde9ffff     call sym.imp.strrchr
0x00002bd3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002bd6      7455           je 0x2c2d
0x00002bd8      4c8d4001       lea r8, [rax + 1]
0x00002bdc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002bdf      4829da         sub rdx, rbx
0x00002be2      4883fa06       cmp rdx, 6
0x00002be6      7e45           jle 0x2c2d
0x00002be8      488d70fa       lea rsi, [rax - 6]
0x00002bec      488d3d653600.  lea rdi, str..libs                      ; 0x6258 ; "/.libs/"
0x00002bf3      b907000000     mov ecx, 7
0x00002bf8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002bfa      0f97c2         seta dl
0x00002bfd      80da00         sbb dl, 0
0x00002c00      84d2           test dl, dl
0x00002c02      7529           jne 0x2c2d
0x00002c04      488d3d553600.  lea rdi, [0x00006260]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002c0b      b903000000     mov ecx, 3
0x00002c10      4c89c6         mov rsi, r8
0x00002c13      4c89c3         mov rbx, r8
0x00002c16      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002c18      0f97c2         seta dl
0x00002c1b      80da00         sbb dl, 0
0x00002c1e      84d2           test dl, dl
0x00002c20      750b           jne 0x2c2d
0x00002c22      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002c26      48891d736420.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x00002c2d      48891de46420.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x209118:8]=0
0x00002c34      48891d8d6420.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090c8:8]=0
0x00002c3b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002c3c      c3             ret
0x00002c3d      488b0d9c6420.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00002c44      488d3dd53500.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6220 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002c4b      ba37000000     mov edx, 0x37                           ; '7'
0x00002c50      be01000000     mov esi, 1
0x00002c55      e8d6eaffff     call sym.imp.fwrite
0x00002c5a      e841e8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002c5f      90             nop
;-- gettext_quote.part.1:
0x00002c60      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002c61      53             push rbx
0x00002c62      4889fd         mov rbp, rdi
0x00002c65      89f3           mov ebx, esi
0x00002c67      4883ec08       sub rsp, 8
0x00002c6b      e8502b0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002c70      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002c73      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002c76      80fa55         cmp dl, 0x55
0x00002c79      7475           je 0x2cf0
0x00002c7b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002c7e      7420           je 0x2ca0
0x00002c80      488d05ec3500.  lea rax, str.l______l                   ; 0x6273 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002c87      488d15e73500.  lea rdx, [0x00006275]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002c8e      83fb09         cmp ebx, 9
0x00002c91      480f45c2       cmovne rax, rdx
0x00002c95      4883c408       add rsp, 8
0x00002c99      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002c9a      5d             pop rbp
0x00002c9b      c3             ret
0x00002c9c      0f1f4000       nop dword [rax]
0x00002ca0      0fb65001       movzx edx, byte [rax + 1]
0x00002ca4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002ca7      80fa42         cmp dl, 0x42
0x00002caa      75d4           jne 0x2c80
0x00002cac      80780231       cmp byte [rax + 2], 0x31
0x00002cb0      75ce           jne 0x2c80
0x00002cb2      80780338       cmp byte [rax + 3], 0x38
0x00002cb6      75c8           jne 0x2c80
0x00002cb8      80780430       cmp byte [rax + 4], 0x30
0x00002cbc      75c2           jne 0x2c80
0x00002cbe      80780533       cmp byte [rax + 5], 0x33
0x00002cc2      75bc           jne 0x2c80
0x00002cc4      80780630       cmp byte [rax + 6], 0x30
0x00002cc8      75b6           jne 0x2c80
0x00002cca      80780700       cmp byte [rax + 7], 0
0x00002cce      75b0           jne 0x2c80
0x00002cd0      807d0060       cmp byte [rbp], 0x60
0x00002cd4      488d05913500.  lea rax, [0x0000626c]
0x00002cdb      488d158e3500.  lea rdx, [0x00006270]
0x00002ce2      480f45c2       cmovne rax, rdx
0x00002ce6      4883c408       add rsp, 8
0x00002cea      5b             pop rbx
0x00002ceb      5d             pop rbp
0x00002cec      c3             ret
0x00002ced      0f1f00         nop dword [rax]
0x00002cf0      0fb65001       movzx edx, byte [rax + 1]
0x00002cf4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002cf7      80fa54         cmp dl, 0x54
0x00002cfa      7584           jne 0x2c80
0x00002cfc      0fb65002       movzx edx, byte [rax + 2]
0x00002d00      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002d03      80fa46         cmp dl, 0x46
0x00002d06      0f8574ffffff   jne 0x2c80
0x00002d0c      8078032d       cmp byte [rax + 3], 0x2d
0x00002d10      0f856affffff   jne 0x2c80
0x00002d16      80780438       cmp byte [rax + 4], 0x38
0x00002d1a      0f8560ffffff   jne 0x2c80
0x00002d20      80780500       cmp byte [rax + 5], 0
0x00002d24      0f8556ffffff   jne 0x2c80
0x00002d2a      807d0060       cmp byte [rbp], 0x60
0x00002d2e      488d052f3500.  lea rax, [0x00006264]                   ; "\u2018"
0x00002d35      488d152c3500.  lea rdx, [0x00006268]                   ; "\u2019"
0x00002d3c      480f45c2       cmovne rax, rdx
0x00002d40      4883c408       add rsp, 8
0x00002d44      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002d45      5d             pop rbp
0x00002d46      c3             ret
0x00002d47      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002d50      4157           push r15
0x00002d52      4156           push r14
0x00002d54      4589c7         mov r15d, r8d
0x00002d57      4155           push r13
0x00002d59      4154           push r12
0x00002d5b      4989fe         mov r14, rdi
0x00002d5e      55             push rbp
0x00002d5f      53             push rbx
0x00002d60      4489cb         mov ebx, r9d
0x00002d63      4989f5         mov r13, rsi
0x00002d66      4889cd         mov rbp, rcx
0x00002d69      83e302         and ebx, 2
0x00002d6c      4881ecb80000.  sub rsp, 0xb8
0x00002d73      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002d7b      4889542410     mov qword [rsp + 0x10], rdx
0x00002d80      4489442408     mov dword [rsp + 8], r8d
0x00002d85      44894c2478     mov dword [rsp + 0x78], r9d
0x00002d8a      4889442420     mov qword [rsp + 0x20], rax
0x00002d8f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002d97      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002d9c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002da4      4889442460     mov qword [rsp + 0x60], rax
0x00002da9      64488b042528.  mov rax, qword fs:[0x28]
0x00002db2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002dba      31c0           xor eax, eax
0x00002dbc      e87fe7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002dc1      4183ff0a       cmp r15d, 0xa
0x00002dc5      4889442458     mov qword [rsp + 0x58], rax
0x00002dca      0f87af110000   ja 0x3f7f
0x00002dd0      488d0d093500.  lea rcx, [0x000062e0]
0x00002dd7      4489fa         mov edx, r15d
0x00002dda      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002dde      4801c8         add rax, rcx
0x00002de1      ffe0           jmp rax
0x00002de3      c644240e01     mov byte [rsp + 0xe], 1
0x00002de8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002ded      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002df0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002df9      c644240f01     mov byte [rsp + 0xf], 1
0x00002dfe      c644240d00     mov byte [rsp + 0xd], 0
0x00002e03      488d056b3400.  lea rax, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002e0a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002e13      4531ff         xor r15d, r15d
0x00002e16      c74424080200.  mov dword [rsp + 8], 2
0x00002e1e      4889442448     mov qword [rsp + 0x48], rax
0x00002e23      4531db         xor r11d, r11d
0x00002e26      4889e8         mov rax, rbp
0x00002e29      4589e0         mov r8d, r12d
0x00002e2c      4c89dd         mov rbp, r11
0x00002e2f      4989c3         mov r11, rax
0x00002e32      660f1f440000   nop word [rax + rax]
0x00002e38      4939eb         cmp r11, rbp
0x00002e3b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002e3f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e43      750d           jne 0x2e52
0x00002e45      488b442410     mov rax, qword [rsp + 0x10]
0x00002e4a      803c2800       cmp byte [rax + rbp], 0
0x00002e4e      410f95c4       setne r12b
0x00002e52      4584e4         test r12b, r12b
0x00002e55      0f8455060000   je 0x34b0
0x00002e5b      837c240802     cmp dword [rsp + 8], 2
0x00002e60      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002e65      4c8d0c2f       lea r9, [rdi + rbp]
0x00002e69      0f95c0         setne al
0x00002e6c      2244240d       and al, byte [rsp + 0xd]
0x00002e70      4189c2         mov r10d, eax
0x00002e73      0f84a7000000   je 0x2f20
0x00002e79      488b442418     mov rax, qword [rsp + 0x18]
0x00002e7e      4885c0         test rax, rax
0x00002e81      0f8429040000   je 0x32b0
0x00002e87      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e8b      488d5c0500     lea rbx, [rbp + rax]
0x00002e90      752e           jne 0x2ec0
0x00002e92      4883f801       cmp rax, 1
0x00002e96      7628           jbe 0x2ec0
0x00002e98      4488442438     mov byte [rsp + 0x38], r8b
0x00002e9d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002ea2      4c894c2428     mov qword [rsp + 0x28], r9
0x00002ea7      e8a4e6ffff     call sym.imp.strlen
0x00002eac      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002eb2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002eb8      4989c3         mov r11, rax
0x00002ebb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002ec0      4c39db         cmp rbx, r11
0x00002ec3      4488542428     mov byte [rsp + 0x28], r10b
0x00002ec8      0f87b2050000   ja 0x3480
0x00002ece      488b542418     mov rdx, qword [rsp + 0x18]
0x00002ed3      488b742448     mov rsi, qword [rsp + 0x48]
0x00002ed8      4c89cf         mov rdi, r9
0x00002edb      4c895c2440     mov qword [rsp + 0x40], r11
0x00002ee0      4488442438     mov byte [rsp + 0x38], r8b
0x00002ee5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002eea      e8f1e6ffff     call sym.imp.memcmp
0x00002eef      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002ef1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002ef6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002efc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002f01      0f8579050000   jne 0x3480
0x00002f07      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f0c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002f12      0f857d0f0000   jne 0x3e95
0x00002f18      0f1f84000000.  nop dword [rax + rax]
0x00002f20      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002f24      80fb7e         cmp bl, 0x7e
0x00002f27      0f871b030000   ja 0x3248
0x00002f2d      488d0dd83300.  lea rcx, [0x0000630c]
0x00002f34      0fb6d3         movzx edx, bl
0x00002f37      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f3b      4801c8         add rax, rcx
0x00002f3e      ffe0           jmp rax
0x00002f40      4531d2         xor r10d, r10d
0x00002f43      4983fb01       cmp r11, 1
0x00002f47      0f95c0         setne al
0x00002f4a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002f4e      750c           jne 0x2f5c
0x00002f50      488b442410     mov rax, qword [rsp + 0x10]
0x00002f55      80780100       cmp byte [rax + 1], 0
0x00002f59      0f95c0         setne al
0x00002f5c      837c240802     cmp dword [rsp + 8], 2
0x00002f61      0f94c2         sete dl
0x00002f64      84c0           test al, al
0x00002f66      0f844c020000   je 0x31b8
0x00002f6c      4531e4         xor r12d, r12d
0x00002f6f      31c0           xor eax, eax
0x00002f71      0f1f80000000.  nop dword [rax]
0x00002f78      807c240d01     cmp byte [rsp + 0xd], 1
0x00002f7d      0f850f010000   jne 0x3092
0x00002f83      84d2           test dl, dl
0x00002f85      0f8507010000   jne 0x3092
0x00002f8b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002f90      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002f93      7414           je 0x2fa9
0x00002f95      89da           mov edx, ebx
0x00002f97      c0ea05         shr dl, 5
0x00002f9a      0fb6d2         movzx edx, dl
0x00002f9d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002fa0      0fa3da         bt edx, ebx
0x00002fa3      0f824a010000   jb 0x30f3
0x00002fa9      4584d2         test r10b, r10b
0x00002fac      0f8541010000   jne 0x30f3
0x00002fb2      83f001         xor eax, 1
0x00002fb5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002fb9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002fbc      84c0           test al, al
0x00002fbe      7420           je 0x2fe0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002fc0      4d39fd         cmp r13, r15
0x00002fc3      7605           jbe 0x2fca
0x00002fc5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002fca      498d4701       lea rax, [r15 + 1]
0x00002fce      4939c5         cmp r13, rax
0x00002fd1      7606           jbe 0x2fd9
0x00002fd3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002fd9      4983c702       add r15, 2
0x00002fdd      4531c0         xor r8d, r8d
0x00002fe0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002fe3      7304           jae 0x2fe9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002fe5      43881c3e       mov byte [r14 + r15], bl
0x00002fe9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002fee      4983c701       add r15, 1
0x00002ff2      b800000000     mov eax, 0
0x00002ff7      4584e4         test r12b, r12b
0x00002ffa      0f44f8         cmove edi, eax
0x00002ffd      40887c240e     mov byte [rsp + 0xe], dil
0x00003002      e931feffff     jmp 0x2e38
0x00003007      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003010      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003013      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003017      83f802         cmp eax, 2
0x0000301a      0f84b8050000   je 0x35d8
0x00003020      83f805         cmp eax, 5
0x00003023      0f846f050000   je 0x3598
0x00003029      83f802         cmp eax, 2
0x0000302c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003031      0f94c2         sete dl
0x00003034      4531e4         xor r12d, r12d
0x00003037      31c0           xor eax, eax
0x00003039      e93affffff     jmp 0x2f78
0x0000303e      6690           nop
0x00003040      4531d2         xor r10d, r10d
0x00003043      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003048      0f8402050000   je 0x3550
0x0000304e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003053      31d2           xor edx, edx
0x00003055      31c0           xor eax, eax
0x00003057      bb27000000     mov ebx, 0x27                           ; '''
0x0000305c      e917ffffff     jmp 0x2f78
0x00003061      0f1f80000000.  nop dword [rax]
0x00003068      ba09000000     mov edx, 9
0x0000306d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003072      837c240802     cmp dword [rsp + 8], 2
0x00003077      0f94c0         sete al
0x0000307a      2244240f       and al, byte [rsp + 0xf]
0x0000307e      0f854a010000   jne 0x31ce
0x00003084      807c240d00     cmp byte [rsp + 0xd], 0
0x00003089      7565           jne 0x30f0
0x0000308b      89d3           mov ebx, edx
0x0000308d      4531e4         xor r12d, r12d
0x00003090      31c0           xor eax, eax
0x00003092      807c240f00     cmp byte [rsp + 0xf], 0
0x00003097      0f85eefeffff   jne 0x2f8b
0x0000309d      e907ffffff     jmp 0x2fa9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x000030a2      660f1f440000   nop word [rax + rax]
0x000030a8      ba08000000     mov edx, 8
0x000030ad      bb62000000     mov ebx, 0x62                           ; 'b'
0x000030b2      ebd0           jmp 0x3084
0x000030b4      0f1f4000       nop dword [rax]
0x000030b8      837c240802     cmp dword [rsp + 8], 2
0x000030bd      0f84cd030000   je 0x3490
0x000030c3      807c240d00     cmp byte [rsp + 0xd], 0
0x000030c8      0f8412020000   je 0x32e0
0x000030ce      807c240f00     cmp byte [rsp + 0xf], 0
0x000030d3      0f8407020000   je 0x32e0
0x000030d9      48837c241800   cmp qword [rsp + 0x18], 0
0x000030df      0f85b6030000   jne 0x349b
0x000030e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000030ea      660f1f440000   nop word [rax + rax]
0x000030f0      4531e4         xor r12d, r12d
0x000030f3      837c240802     cmp dword [rsp + 8], 2
0x000030f8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000030fb      807c240f00     cmp byte [rsp + 0xf], 0
0x00003100      89d0           mov eax, edx
0x00003102      0f8550080000   jne 0x3958
0x00003108      4489c0         mov eax, r8d
0x0000310b      83f001         xor eax, 1
0x0000310e      20d0           and al, dl
0x00003110      742f           je 0x3141
0x00003112      4d39fd         cmp r13, r15
0x00003115      7605           jbe 0x311c
0x00003117      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000311c      498d5701       lea rdx, [r15 + 1]
0x00003120      4939d5         cmp r13, rdx
0x00003123      7606           jbe 0x312b
0x00003125      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000312b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000312f      4939d5         cmp r13, rdx
0x00003132      7606           jbe 0x313a
0x00003134      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000313a      4983c703       add r15, 3
0x0000313e      4189c0         mov r8d, eax
0x00003141      4d39fd         cmp r13, r15
0x00003144      7605           jbe 0x314b
0x00003146      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000314b      4983c701       add r15, 1
0x0000314f      4883c501       add rbp, 1
0x00003153      e988feffff     jmp 0x2fe0
0x00003158      0f1f84000000.  nop dword [rax + rax]
0x00003160      807c240d00     cmp byte [rsp + 0xd], 0
0x00003165      0f85c8010000   jne 0x3333
0x0000316b      31d2           xor edx, edx
0x0000316d      f644247801     test byte [rsp + 0x78], 1
0x00003172      0f8413ffffff   je 0x308b
0x00003178      4883c501       add rbp, 1
0x0000317c      e9b7fcffff     jmp 0x2e38
0x00003181      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003188      837c240802     cmp dword [rsp + 8], 2
0x0000318d      0f94c2         sete dl
0x00003190      31c0           xor eax, eax
0x00003192      e9e1fdffff     jmp 0x2f78
0x00003197      660f1f840000.  nop word [rax + rax]
0x000031a0      ba07000000     mov edx, 7
0x000031a5      bb61000000     mov ebx, 0x61                           ; 'a'
0x000031aa      e9d5feffff     jmp 0x3084
0x000031af      90             nop
0x000031b0      837c240802     cmp dword [rsp + 8], 2
0x000031b5      0f94c2         sete dl
0x000031b8      4885ed         test rbp, rbp
0x000031bb      0f85abfdffff   jne 0x2f6c
0x000031c1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000031c6      20d0           and al, dl
0x000031c8      0f84aafdffff   je 0x2f78
0x000031ce      4c89dd         mov rbp, r11
0x000031d1      c74424080200.  mov dword [rsp + 8], 2
0x000031d9      e9fb060000     jmp 0x38d9
0x000031de      6690           nop
0x000031e0      837c240802     cmp dword [rsp + 8], 2
0x000031e5      0f94c2         sete dl
0x000031e8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000031eb      ebd4           jmp 0x31c1
0x000031ed      0f1f00         nop dword [rax]
0x000031f0      837c240802     cmp dword [rsp + 8], 2
0x000031f5      bb20000000     mov ebx, 0x20                           ; "@"
0x000031fa      0f94c2         sete dl
0x000031fd      ebc2           jmp 0x31c1
0x000031ff      90             nop
0x00003200      ba0d000000     mov edx, 0xd
0x00003205      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000320a      e963feffff     jmp 0x3072
0x0000320f      90             nop
0x00003210      ba0c000000     mov edx, 0xc
0x00003215      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000321a      e965feffff     jmp 0x3084
0x0000321f      90             nop
0x00003220      ba0b000000     mov edx, 0xb
0x00003225      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000322a      e955feffff     jmp 0x3084
0x0000322f      90             nop
0x00003230      ba0a000000     mov edx, 0xa
0x00003235      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000323a      e933feffff     jmp 0x3072
0x0000323f      90             nop
0x00003240      4531d2         xor r10d, r10d
0x00003243      0f1f440000     nop dword [rax + rax]
0x00003248      48837c245801   cmp qword [rsp + 0x58], 1
0x0000324e      0f85a4030000   jne 0x35f8
0x00003254      4c895c2438     mov qword [rsp + 0x38], r11
0x00003259      4488442430     mov byte [rsp + 0x30], r8b
0x0000325e      4488542428     mov byte [rsp + 0x28], r10b
0x00003263      e808e5ffff     call sym.imp.__ctype_b_loc
0x00003268      488b08         mov rcx, qword [rax]
0x0000326b      0fb6d3         movzx edx, bl
0x0000326e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003274      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000327a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000327f      bf01000000     mov edi, 1
0x00003284      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003288      66250040       and ax, 0x4000
0x0000328c      410f95c4       setne r12b
0x00003290      0f94c0         sete al
0x00003293      2244240d       and al, byte [rsp + 0xd]
0x00003297      84c0           test al, al
0x00003299      0f8592090000   jne 0x3c31
0x0000329f      837c240802     cmp dword [rsp + 8], 2
0x000032a4      0f94c2         sete dl
0x000032a7      e9ccfcffff     jmp 0x2f78
0x000032ac      0f1f4000       nop dword [rax]
0x000032b0      410fb619       movzx ebx, byte [r9]
0x000032b4      80fb7e         cmp bl, 0x7e
0x000032b7      7787           ja 0x3240
0x000032b9      488d0d483200.  lea rcx, [0x00006508]
0x000032c0      0fb6d3         movzx edx, bl
0x000032c3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000032c7      4801c8         add rax, rcx
0x000032ca      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000032cc      0f1f4000       nop dword [rax]
0x000032d0      4531d2         xor r10d, r10d
0x000032d3      807c240d00     cmp byte [rsp + 0xd], 0
0x000032d8      0f85f0fdffff   jne 0x30ce
0x000032de      6690           nop
0x000032e0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000032e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000032ea      e995fdffff     jmp 0x3084
0x000032ef      90             nop
0x000032f0      ba0c000000     mov edx, 0xc
0x000032f5      4531d2         xor r10d, r10d
0x000032f8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000032fd      e982fdffff     jmp 0x3084
0x00003302      660f1f440000   nop word [rax + rax]
0x00003308      ba0a000000     mov edx, 0xa
0x0000330d      4531d2         xor r10d, r10d
0x00003310      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003315      e958fdffff     jmp 0x3072
0x0000331a      660f1f440000   nop word [rax + rax]
0x00003320      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003325      e9c6fdffff     jmp 0x30f0
0x0000332a      660f1f440000   nop word [rax + rax]
0x00003330      4531d2         xor r10d, r10d
0x00003333      837c240802     cmp dword [rsp + 8], 2
0x00003338      0f94c2         sete dl
0x0000333b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003340      0f85940b0000   jne 0x3eda
0x00003346      4489c0         mov eax, r8d
0x00003349      4c89f9         mov rcx, r15
0x0000334c      83f001         xor eax, 1
0x0000334f      20d0           and al, dl
0x00003351      742d           je 0x3380
0x00003353      4d39fd         cmp r13, r15
0x00003356      7605           jbe 0x335d
0x00003358      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000335d      498d4f01       lea rcx, [r15 + 1]
0x00003361      4939cd         cmp r13, rcx
0x00003364      7606           jbe 0x336c
0x00003366      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000336c      498d4f02       lea rcx, [r15 + 2]
0x00003370      4939cd         cmp r13, rcx
0x00003373      0f8730060000   ja 0x39a9
0x00003379      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000337d      4189c0         mov r8d, eax
0x00003380      4939cd         cmp r13, rcx
0x00003383      7605           jbe 0x338a
0x00003385      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000338a      837c240802     cmp dword [rsp + 8], 2
0x0000338f      4c8d7901       lea r15, [rcx + 1]
0x00003393      0f8400060000   je 0x3999
0x00003399      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000339d      4c39d8         cmp rax, r11
0x000033a0      7319           jae 0x33bb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000033a2      488b442410     mov rax, qword [rsp + 0x10]
0x000033a7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000033ac      88442428       mov byte [rsp + 0x28], al
0x000033b0      83e830         sub eax, 0x30
0x000033b3      3c09           cmp al, 9
0x000033b5      0f862e080000   jbe 0x3be9
0x000033bb      4489e0         mov eax, r12d
0x000033be      bb30000000     mov ebx, 0x30                           ; '0'
0x000033c3      4531e4         xor r12d, r12d
0x000033c6      e9adfbffff     jmp 0x2f78                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000033cb      0f1f440000     nop dword [rax + rax]
0x000033d0      837c240802     cmp dword [rsp + 8], 2
0x000033d5      4589d4         mov r12d, r10d
0x000033d8      0f94c2         sete dl
0x000033db      4531d2         xor r10d, r10d
0x000033de      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000033e0      e993fbffff     jmp 0x2f78                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000033e5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000033e8      837c240802     cmp dword [rsp + 8], 2
0x000033ed      0f94c2         sete dl
0x000033f0      4531d2         xor r10d, r10d
0x000033f3      e9c0fdffff     jmp 0x31b8
0x000033f8      0f1f84000000.  nop dword [rax + rax]
0x00003400      837c240802     cmp dword [rsp + 8], 2
0x00003405      0f94c2         sete dl
0x00003408      4531d2         xor r10d, r10d
0x0000340b      4531e4         xor r12d, r12d
0x0000340e      e9aefdffff     jmp 0x31c1
0x00003413      0f1f440000     nop dword [rax + rax]
0x00003418      837c240802     cmp dword [rsp + 8], 2
0x0000341d      4589d4         mov r12d, r10d
0x00003420      bb20000000     mov ebx, 0x20                           ; "@"
0x00003425      0f94c2         sete dl
0x00003428      4531d2         xor r10d, r10d
0x0000342b      e991fdffff     jmp 0x31c1
0x00003430      ba0d000000     mov edx, 0xd
0x00003435      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003438      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000343d      e930fcffff     jmp 0x3072
0x00003442      660f1f440000   nop word [rax + rax]
0x00003448      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000344d      e99efcffff     jmp 0x30f0
0x00003452      660f1f440000   nop word [rax + rax]
0x00003458      ba09000000     mov edx, 9
0x0000345d      4531d2         xor r10d, r10d
0x00003460      bb74000000     mov ebx, 0x74                           ; 't'
0x00003465      e908fcffff     jmp 0x3072
0x0000346a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003470      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003475      e976fcffff     jmp 0x30f0
0x0000347a      660f1f440000   nop word [rax + rax]
0x00003480      4531d2         xor r10d, r10d
0x00003483      e998faffff     jmp 0x2f20
0x00003488      0f1f84000000.  nop dword [rax + rax]
0x00003490      807c240f00     cmp byte [rsp + 0xf], 0
0x00003495      0f8565090000   jne 0x3e00
0x0000349b      4883c501       add rbp, 1
0x0000349f      4489c0         mov eax, r8d
0x000034a2      4531e4         xor r12d, r12d
0x000034a5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000034aa      e90dfbffff     jmp 0x2fbc
0x000034af      90             nop
0x000034b0      837c240802     cmp dword [rsp + 8], 2
0x000034b5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000034ba      4589c4         mov r12d, r8d
0x000034bd      4c89dd         mov rbp, r11
0x000034c0      0f94c2         sete dl
0x000034c3      89d8           mov eax, ebx
0x000034c5      4d85ff         test r15, r15
0x000034c8      0f94c1         sete cl
0x000034cb      21d0           and eax, edx
0x000034cd      20c8           and al, cl
0x000034cf      0f85610a0000   jne 0x3f36                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000034d5      89d8           mov eax, ebx
0x000034d7      83f001         xor eax, 1
0x000034da      20c2           and dl, al
0x000034dc      0f846a090000   je 0x3e4c
0x000034e2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000034e7      0f845d090000   je 0x3e4a
0x000034ed      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000034f2      0f85f5090000   jne 0x3eed
0x000034f8      4d85ed         test r13, r13
0x000034fb      0f94c0         sete al
0x000034fe      48837c245000   cmp qword [rsp + 0x50], 0
0x00003504      0f95c2         setne dl
0x00003507      20d0           and al, dl
0x00003509      0f841d0a0000   je 0x3f2c
0x0000350f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003514      488d1d5a2d00.  lea rbx, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000351b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000351f      c74424080200.  mov dword [rsp + 8], 2
0x00003527      41bf01000000   mov r15d, 1
0x0000352d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003536      c644240f00     mov byte [rsp + 0xf], 0
0x0000353b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003540      8844247c       mov byte [rsp + 0x7c], al
0x00003544      e9daf8ffff     jmp 0x2e23
0x00003549      0f1f80000000.  nop dword [rax]
0x00003550      807c240f00     cmp byte [rsp + 0xf], 0
0x00003555      0f85a5080000   jne 0x3e00
0x0000355b      4d85ed         test r13, r13
0x0000355e      0f84fc030000   je 0x3960                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003564      31d2           xor edx, edx
0x00003566      48837c245000   cmp qword [rsp + 0x50], 0
0x0000356c      0f85ee030000   jne 0x3960                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003572      4c896c2450     mov qword [rsp + 0x50], r13
0x00003577      4983c703       add r15, 3
0x0000357b      31c0           xor eax, eax
0x0000357d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003582      4531c0         xor r8d, r8d
0x00003585      4989d5         mov r13, rdx
0x00003588      bb27000000     mov ebx, 0x27                           ; '''
0x0000358d      e917faffff     jmp 0x2fa9
0x00003592      660f1f440000   nop word [rax + rax]
0x00003598      f644247804     test byte [rsp + 0x78], 4
0x0000359d      7421           je 0x35c0
0x0000359f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000035a3      4c39d9         cmp rcx, r11
0x000035a6      7318           jae 0x35c0
0x000035a8      488b442410     mov rax, qword [rsp + 0x10]
0x000035ad      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000035b2      0f848a070000   je 0x3d42
0x000035b8      0f1f84000000.  nop dword [rax + rax]
0x000035c0      31d2           xor edx, edx
0x000035c2      4531e4         xor r12d, r12d
0x000035c5      31c0           xor eax, eax
0x000035c7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000035cc      e9a7f9ffff     jmp 0x2f78
0x000035d1      0f1f80000000.  nop dword [rax]
0x000035d8      807c240f00     cmp byte [rsp + 0xf], 0
0x000035dd      0f851d080000   jne 0x3e00
0x000035e3      4531e4         xor r12d, r12d
0x000035e6      31c0           xor eax, eax
0x000035e8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000035ed      e9b7f9ffff     jmp 0x2fa9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000035f2      660f1f440000   nop word [rax + rax]
0x000035f8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003600      4983fbff       cmp r11, 0xffffffffffffffff
0x00003604      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003610      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003615      752d           jne 0x3644
0x00003617      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000361c      4488442440     mov byte [rsp + 0x40], r8b
0x00003621      4488542438     mov byte [rsp + 0x38], r10b
0x00003626      4c894c2430     mov qword [rsp + 0x30], r9
0x0000362b      e820dfffff     call sym.imp.strlen
0x00003630      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003636      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000363c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000363f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003644      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000364c      31c9           xor ecx, ecx
0x0000364e      885c247e       mov byte [rsp + 0x7e], bl
0x00003652      448844247d     mov byte [rsp + 0x7d], r8b
0x00003657      4889cb         mov rbx, rcx
0x0000365a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003662      4889442438     mov qword [rsp + 0x38], rax
0x00003667      448854247f     mov byte [rsp + 0x7f], r10b
0x0000366c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003674      4c89742440     mov qword [rsp + 0x40], r14
0x00003679      4c896c2470     mov qword [rsp + 0x70], r13
0x0000367e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003683      488b442410     mov rax, qword [rsp + 0x10]
0x00003688      4c8d741d00     lea r14, [rbp + rbx]
0x0000368d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003692      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003697      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000369c      4e8d2c30       lea r13, [rax + r14]
0x000036a0      4c29f2         sub rdx, r14
0x000036a3      4c89ee         mov rsi, r13
0x000036a6      e805200000     call sym.rpl_mbrtowc
0x000036ab      4885c0         test rax, rax
0x000036ae      4989c7         mov r15, rax
0x000036b1      744e           je 0x3701
0x000036b3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000036b7      0f8418060000   je 0x3cd5
0x000036bd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000036c1      0f849a050000   je 0x3c61
0x000036c7      837c240802     cmp dword [rsp + 8], 2
0x000036cc      0f94c0         sete al
0x000036cf      2244240f       and al, byte [rsp + 0xf]
0x000036d3      0f8597010000   jne 0x3870
0x000036d9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000036e0      e87be0ffff     call sym.imp.iswprint
0x000036e5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000036ea      85c0           test eax, eax
0x000036ec      b800000000     mov eax, 0
0x000036f1      440f44e0       cmove r12d, eax
0x000036f5      4c01fb         add rbx, r15
0x000036f8      e853e0ffff     call sym.imp.mbsinit
0x000036fd      85c0           test eax, eax
0x000036ff      7482           je 0x3683
0x00003701      4489e2         mov edx, r12d
0x00003704      4889df         mov rdi, rbx
0x00003707      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000370d      83f201         xor edx, 1
0x00003710      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003715      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000371b      2254240d       and dl, byte [rsp + 0xd]
0x0000371f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003727      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000372c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003731      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003736      4883ff01       cmp rdi, 1
0x0000373a      0f86fb050000   jbe 0x3d3b
0x00003740      4889f9         mov rcx, rdi
0x00003743      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003745      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000374b      4801e9         add rcx, rbp
0x0000374e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003753      e9b6000000     jmp 0x380e
0x00003758      0f1f84000000.  nop dword [rax + rax]
0x00003760      837c240802     cmp dword [rsp + 8], 2
0x00003765      0f94c0         sete al
0x00003768      4584c9         test r9b, r9b
0x0000376b      0f85af040000   jne 0x3c20
0x00003771      4489c6         mov esi, r8d
0x00003774      83f601         xor esi, 1
0x00003777      4020f0         and al, sil
0x0000377a      742f           je 0x37ab                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000377c      4d39fd         cmp r13, r15
0x0000377f      7605           jbe 0x3786
0x00003781      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003786      498d7701       lea rsi, [r15 + 1]
0x0000378a      4939f5         cmp r13, rsi
0x0000378d      7606           jbe 0x3795                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000378f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003795      498d7702       lea rsi, [r15 + 2]
0x00003799      4939f5         cmp r13, rsi
0x0000379c      7606           jbe 0x37a4
0x0000379e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000037a4      4983c703       add r15, 3
0x000037a8      4189c0         mov r8d, eax
0x000037ab      4d39fd         cmp r13, r15
0x000037ae      7605           jbe 0x37b5
0x000037b0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000037b5      498d4701       lea rax, [r15 + 1]
0x000037b9      4939c5         cmp r13, rax
0x000037bc      760d           jbe 0x37cb
0x000037be      89d8           mov eax, ebx
0x000037c0      c0e806         shr al, 6
0x000037c3      83c030         add eax, 0x30
0x000037c6      4388443e01     mov byte [r14 + r15 + 1], al
0x000037cb      498d4702       lea rax, [r15 + 2]
0x000037cf      4939c5         cmp r13, rax
0x000037d2      7610           jbe 0x37e4
0x000037d4      89d8           mov eax, ebx
0x000037d6      c0e803         shr al, 3
0x000037d9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000037dc      83c030         add eax, 0x30
0x000037df      4388443e02     mov byte [r14 + r15 + 2], al
0x000037e4      83e307         and ebx, 7
0x000037e7      4883c501       add rbp, 1
0x000037eb      4983c703       add r15, 3
0x000037ef      83c330         add ebx, 0x30
0x000037f2      4839cd         cmp rbp, rcx
0x000037f5      0f83e5f7ffff   jae 0x2fe0
0x000037fb      89d6           mov esi, edx
0x000037fd      4d39fd         cmp r13, r15
0x00003800      7604           jbe 0x3806
0x00003802      43881c3e       mov byte [r14 + r15], bl
0x00003806      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000380a      4983c701       add r15, 1
0x0000380e      84d2           test dl, dl
0x00003810      0f854affffff   jne 0x3760
0x00003816      89f0           mov eax, esi
0x00003818      83f001         xor eax, 1
0x0000381b      4421c0         and eax, r8d
0x0000381e      4584d2         test r10b, r10b
0x00003821      740e           je 0x3831
0x00003823      4d39fd         cmp r13, r15
0x00003826      7605           jbe 0x382d
0x00003828      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000382d      4983c701       add r15, 1
0x00003831      4883c501       add rbp, 1
0x00003835      4839cd         cmp rbp, rcx
0x00003838      0f837ef7ffff   jae 0x2fbc
0x0000383e      84c0           test al, al
0x00003840      0f84f8030000   je 0x3c3e
0x00003846      4d39fd         cmp r13, r15
0x00003849      7605           jbe 0x3850
0x0000384b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003850      498d4701       lea rax, [r15 + 1]
0x00003854      4939c5         cmp r13, rax
0x00003857      7606           jbe 0x385f
0x00003859      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000385f      4983c702       add r15, 2
0x00003863      4531d2         xor r10d, r10d
0x00003866      4531c0         xor r8d, r8d
0x00003869      eb92           jmp 0x37fd
0x0000386b      0f1f440000     nop dword [rax + rax]
0x00003870      4983ff01       cmp r15, 1
0x00003874      0f845ffeffff   je 0x36d9
0x0000387a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000387f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003883      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003888      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000388c      eb0f           jmp 0x389d
0x0000388e      6690           nop
0x00003890      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003894      4939d0         cmp r8, rdx
0x00003897      0f843cfeffff   je 0x36d9
0x0000389d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000038a0      83e95b         sub ecx, 0x5b
0x000038a3      80f921         cmp cl, 0x21
0x000038a6      77e8           ja 0x3890                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000038a8      be01000000     mov esi, 1
0x000038ad      48d3e6         shl rsi, cl
0x000038b0      4889f1         mov rcx, rsi
0x000038b3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000038bd      4885f1         test rcx, rsi
0x000038c0      74ce           je 0x3890
0x000038c2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000038c7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000038cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000038d1      c74424080200.  mov dword [rsp + 8], 2
0x000038d9      807c240d00     cmp byte [rsp + 0xd], 0
0x000038de      7410           je 0x38f0
0x000038e0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000038e2      b804000000     mov eax, 4
0x000038e7      0f44442408     cmove eax, dword [rsp + 8]
0x000038ec      89442408       mov dword [rsp + 8], eax
0x000038f0      4883ec08       sub rsp, 8
0x000038f4      4889e9         mov rcx, rbp
0x000038f7      4c89ee         mov rsi, r13
0x000038fa      ff742468       push qword [rsp + 0x68]
0x000038fe      ff742478       push qword [rsp + 0x78]
0x00003902      4c89f7         mov rdi, r14
0x00003905      6a00           push 0
0x00003907      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000390f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003914      488b542430     mov rdx, qword [rsp + 0x30]
0x00003919      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000391d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003922      4883c420       add rsp, 0x20
0x00003926      4989c7         mov r15, rax
0x00003929      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003931      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000393a      4c89f8         mov rax, r15
0x0000393d      0f8500060000   jne 0x3f43
0x00003943      4881c4b80000.  add rsp, 0xb8
0x0000394a      5b             pop rbx
0x0000394b      5d             pop rbp
0x0000394c      415c           pop r12
0x0000394e      415d           pop r13
0x00003950      415e           pop r14
0x00003952      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003954      c3             ret
0x00003955      0f1f00         nop dword [rax]
0x00003958      4c89dd         mov rbp, r11
0x0000395b      e979ffffff     jmp 0x38d9
0x00003960      4d39fd         cmp r13, r15
0x00003963      7605           jbe 0x396a
0x00003965      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000396a      498d4701       lea rax, [r15 + 1]
0x0000396e      4939c5         cmp r13, rax
0x00003971      7606           jbe 0x3979
0x00003973      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003979      498d4702       lea rax, [r15 + 2]
0x0000397d      4939c5         cmp r13, rax
0x00003980      0f86ec050000   jbe 0x3f72
0x00003986      4c89ea         mov rdx, r13
0x00003989      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000398f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003994      e9d9fbffff     jmp 0x3572
0x00003999      4489e0         mov eax, r12d
0x0000399c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000039a1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000039a4      e900f6ffff     jmp 0x2fa9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000039a9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000039af      e9c5f9ffff     jmp 0x3379
0x000039b4      85db           test ebx, ebx
0x000039b6      0f8527f4ffff   jne 0x2de3
0x000039bc      c644240d01     mov byte [rsp + 0xd], 1
0x000039c1      4d85ed         test r13, r13
0x000039c4      0f8590050000   jne 0x3f5a
0x000039ca      488d05a42800.  lea rax, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039d1      48c744245000.  mov qword [rsp + 0x50], 0
0x000039da      c644240e01     mov byte [rsp + 0xe], 1
0x000039df      c644247c00     mov byte [rsp + 0x7c], 0
0x000039e4      4531e4         xor r12d, r12d
0x000039e7      c644240f00     mov byte [rsp + 0xf], 0
0x000039ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000039f5      4889442448     mov qword [rsp + 0x48], rax
0x000039fa      41bf01000000   mov r15d, 1
0x00003a00      c74424080200.  mov dword [rsp + 8], 2
0x00003a08      e916f4ffff     jmp 0x2e23                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003a0d      0f1f00         nop dword [rax]
0x00003a10      85db           test ebx, ebx
0x00003a12      0f85f5030000   jne 0x3e0d
0x00003a18      4d85ed         test r13, r13
0x00003a1b      0f8425020000   je 0x3c46
0x00003a21      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003a25      c644240e01     mov byte [rsp + 0xe], 1
0x00003a2a      4531e4         xor r12d, r12d
0x00003a2d      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a32      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a3b      488d05312800.  lea rax, str.l______l                   ; 0x6273 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a42      c644240f00     mov byte [rsp + 0xf], 0
0x00003a47      c644240d01     mov byte [rsp + 0xd], 1
0x00003a4c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003a55      41bf01000000   mov r15d, 1
0x00003a5b      4889442448     mov qword [rsp + 0x48], rax
0x00003a60      e9bef3ffff     jmp 0x2e23
0x00003a65      488d05072800.  lea rax, str.l______l                   ; 0x6273 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a6c      c644240e01     mov byte [rsp + 0xe], 1
0x00003a71      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a76      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003a79      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a82      c644240f01     mov byte [rsp + 0xf], 1
0x00003a87      c644240d01     mov byte [rsp + 0xd], 1
0x00003a8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003a95      4531ff         xor r15d, r15d
0x00003a98      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003a9d      c74424080500.  mov dword [rsp + 8], 5
0x00003aa5      e979f3ffff     jmp 0x2e23
0x00003aaa      c644240e01     mov byte [rsp + 0xe], 1
0x00003aaf      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ab4      4531e4         xor r12d, r12d
0x00003ab7      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ac0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003ac5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003ac8      c644240d01     mov byte [rsp + 0xd], 1
0x00003acd      48c744241800.  mov qword [rsp + 0x18], 0
0x00003ad6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003adf      e93ff3ffff     jmp 0x2e23
0x00003ae4      837c24080a     cmp dword [rsp + 8], 0xa
0x00003ae9      7456           je 0x3b41
0x00003aeb      488d35852700.  lea rsi, [0x00006277]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003af2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003af4      ba05000000     mov edx, 5
0x00003af9      e832daffff     call sym.imp.dcgettext
0x00003afe      4889c1         mov rcx, rax
0x00003b01      4889442468     mov qword [rsp + 0x68], rax
0x00003b06      488d056a2700.  lea rax, [0x00006277]                   ; "`"
0x00003b0d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003b10      0f8498030000   je 0x3eae
0x00003b16      488d35582700.  lea rsi, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b1d      31ff           xor edi, edi
0x00003b1f      ba05000000     mov edx, 5
0x00003b24      e807daffff     call sym.imp.dcgettext
0x00003b29      4889c1         mov rcx, rax
0x00003b2c      4889442460     mov qword [rsp + 0x60], rax
0x00003b31      488d053d2700.  lea rax, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b38      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003b3b      0f8483030000   je 0x3ec4
0x00003b41      4531ff         xor r15d, r15d
0x00003b44      85db           test ebx, ebx
0x00003b46      0f84c1010000   je 0x3d0d
0x00003b4c      85db           test ebx, ebx
0x00003b4e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003b53      0f9544240f     setne byte [rsp + 0xf]
0x00003b58      4531e4         xor r12d, r12d
0x00003b5b      4889df         mov rdi, rbx
0x00003b5e      e8edd9ffff     call sym.imp.strlen
0x00003b63      48895c2448     mov qword [rsp + 0x48], rbx
0x00003b68      4889442418     mov qword [rsp + 0x18], rax
0x00003b6d      c644240e01     mov byte [rsp + 0xe], 1
0x00003b72      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b77      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b80      c644240d01     mov byte [rsp + 0xd], 1
0x00003b85      e999f2ffff     jmp 0x2e23
0x00003b8a      c644240e01     mov byte [rsp + 0xe], 1
0x00003b8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b94      4531e4         xor r12d, r12d
0x00003b97      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ba0      c644240f00     mov byte [rsp + 0xf], 0
0x00003ba5      4531ff         xor r15d, r15d
0x00003ba8      c644240d00     mov byte [rsp + 0xd], 0
0x00003bad      48c744241800.  mov qword [rsp + 0x18], 0
0x00003bb6      48c744244800.  mov qword [rsp + 0x48], 0
0x00003bbf      e95ff2ffff     jmp 0x2e23
0x00003bc4      c644240e01     mov byte [rsp + 0xe], 1
0x00003bc9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003bce      4531e4         xor r12d, r12d
0x00003bd1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003bda      c644240f01     mov byte [rsp + 0xf], 1
0x00003bdf      c644240d01     mov byte [rsp + 0xd], 1
0x00003be4      e91af2ffff     jmp 0x2e03
0x00003be9      4d39fd         cmp r13, r15
0x00003bec      7605           jbe 0x3bf3
0x00003bee      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003bf3      488d4102       lea rax, [rcx + 2]
0x00003bf7      4939c5         cmp r13, rax
0x00003bfa      7606           jbe 0x3c02
0x00003bfc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003c02      4489e0         mov eax, r12d
0x00003c05      4c8d7903       lea r15, [rcx + 3]
0x00003c09      4531e4         xor r12d, r12d
0x00003c0c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003c11      e962f3ffff     jmp 0x2f78
0x00003c16      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c20      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003c25      4c89dd         mov rbp, r11
0x00003c28      885c240d       mov byte [rsp + 0xd], bl
0x00003c2c      e9a8fcffff     jmp 0x38d9
0x00003c31      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003c36      4531e4         xor r12d, r12d
0x00003c39      e902fbffff     jmp 0x3740
0x00003c3e      4531d2         xor r10d, r10d
0x00003c41      e9b7fbffff     jmp 0x37fd
0x00003c46      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c4f      c644240e01     mov byte [rsp + 0xe], 1
0x00003c54      4531e4         xor r12d, r12d
0x00003c57      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c5c      e9dafdffff     jmp 0x3a3b
0x00003c61      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003c66      4c89f6         mov rsi, r14
0x00003c69      4c89e9         mov rcx, r13
0x00003c6c      4889d8         mov rax, rbx
0x00003c6f      4889df         mov rdi, rbx
0x00003c72      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003c78      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003c7d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003c85      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003c88      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003c8e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003c96      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003c9b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003ca0      7326           jae 0x3cc8
0x00003ca2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003ca5      7510           jne 0x3cb7
0x00003ca7      eb1f           jmp 0x3cc8
0x00003ca9      0f1f80000000.  nop dword [rax]
0x00003cb0      41803c0100     cmp byte [r9 + rax], 0
0x00003cb5      740e           je 0x3cc5
0x00003cb7      4883c001       add rax, 1
0x00003cbb      488d540500     lea rdx, [rbp + rax]
0x00003cc0      4939d3         cmp r11, rdx
0x00003cc3      77eb           ja 0x3cb0
0x00003cc5      4889c7         mov rdi, rax
0x00003cc8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003ccd      4531e4         xor r12d, r12d
0x00003cd0      e961faffff     jmp 0x3736
0x00003cd5      4889df         mov rdi, rbx
0x00003cd8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003cde      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003ce3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003ce9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003cf1      4531e4         xor r12d, r12d
0x00003cf4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003cf9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003cfe      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003d03      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003d08      e929faffff     jmp 0x3736
0x00003d0d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003d12      0fb602         movzx eax, byte [rdx]
0x00003d15      84c0           test al, al
0x00003d17      0f842ffeffff   je 0x3b4c
0x00003d1d      0f1f00         nop dword [rax]
0x00003d20      4d39fd         cmp r13, r15
0x00003d23      7604           jbe 0x3d29
0x00003d25      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003d29      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003d2d      420fb6043a     movzx eax, byte [rdx + r15]
0x00003d32      84c0           test al, al
0x00003d34      75ea           jne 0x3d20
0x00003d36      e911feffff     jmp 0x3b4c
0x00003d3b      89d0           mov eax, edx
0x00003d3d      e955f5ffff     jmp 0x3297
0x00003d42      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003d46      80fb3e         cmp bl, 0x3e
0x00003d49      0f8771f8ffff   ja 0x35c0
0x00003d4f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003d59      480fa3d8       bt rax, rbx
0x00003d5d      0f835df8ffff   jae 0x35c0
0x00003d63      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d68      0f85e4010000   jne 0x3f52                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003d6e      4d39fd         cmp r13, r15
0x00003d71      7605           jbe 0x3d78
0x00003d73      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003d78      498d4701       lea rax, [r15 + 1]
0x00003d7c      4939c5         cmp r13, rax
0x00003d7f      7606           jbe 0x3d87
0x00003d81      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003d87      498d4702       lea rax, [r15 + 2]
0x00003d8b      4939c5         cmp r13, rax
0x00003d8e      7606           jbe 0x3d96
0x00003d90      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003d96      498d4703       lea rax, [r15 + 3]
0x00003d9a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003d9d      7606           jbe 0x3da5
0x00003d9f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003da5      4983c704       add r15, 4
0x00003da9      31d2           xor edx, edx
0x00003dab      4531e4         xor r12d, r12d
0x00003dae      31c0           xor eax, eax
0x00003db0      4889cd         mov rbp, rcx
0x00003db3      e9c0f1ffff     jmp 0x2f78
0x00003db8      85db           test ebx, ebx
0x00003dba      0f8488010000   je 0x3f48
0x00003dc0      488d05ae2400.  lea rax, [0x00006275]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003dc7      c644240e01     mov byte [rsp + 0xe], 1
0x00003dcc      c644247c00     mov byte [rsp + 0x7c], 0
0x00003dd1      4531e4         xor r12d, r12d
0x00003dd4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ddd      c644240f01     mov byte [rsp + 0xf], 1
0x00003de2      c644240d00     mov byte [rsp + 0xd], 0
0x00003de7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003df0      4531ff         xor r15d, r15d
0x00003df3      4889442448     mov qword [rsp + 0x48], rax
0x00003df8      e926f0ffff     jmp 0x2e23
0x00003dfd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003e00      4c89dd         mov rbp, r11
0x00003e03      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003e08      e9ccfaffff     jmp 0x38d9
0x00003e0d      488d055f2400.  lea rax, str.l______l                   ; 0x6273 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003e14      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003e19      c644247c00     mov byte [rsp + 0x7c], 0
0x00003e1e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003e21      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e2a      c644240f01     mov byte [rsp + 0xf], 1
0x00003e2f      c644240d01     mov byte [rsp + 0xd], 1
0x00003e34      48c744241801.  mov qword [rsp + 0x18], 1
0x00003e3d      4531ff         xor r15d, r15d
0x00003e40      4889442448     mov qword [rsp + 0x48], rax
0x00003e45      e9d9efffff     jmp 0x2e23
0x00003e4a      89d0           mov eax, edx
0x00003e4c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003e51      4885db         test rbx, rbx
0x00003e54      742c           je 0x3e82
0x00003e56      84c0           test al, al
0x00003e58      7428           je 0x3e82
0x00003e5a      0fb60b         movzx ecx, byte [rbx]
0x00003e5d      4889d8         mov rax, rbx
0x00003e60      84c9           test cl, cl
0x00003e62      741e           je 0x3e82
0x00003e64      4c89fa         mov rdx, r15
0x00003e67      4c29f8         sub rax, r15
0x00003e6a      4939d5         cmp r13, rdx
0x00003e6d      7604           jbe 0x3e73
0x00003e6f      41880c16       mov byte [r14 + rdx], cl
0x00003e73      4883c201       add rdx, 1
0x00003e77      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003e7b      84c9           test cl, cl
0x00003e7d      75eb           jne 0x3e6a
0x00003e7f      4989d7         mov r15, rdx
0x00003e82      4d39fd         cmp r13, r15
0x00003e85      0f869efaffff   jbe 0x3929
0x00003e8b      43c6043e00     mov byte [r14 + r15], 0
0x00003e90      e994faffff     jmp 0x3929
0x00003e95      837c240802     cmp dword [rsp + 8], 2
0x00003e9a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e9f      4c89dd         mov rbp, r11
0x00003ea2      0f94c0         sete al
0x00003ea5      885c240d       mov byte [rsp + 0xd], bl
0x00003ea9      e92bfaffff     jmp 0x38d9
0x00003eae      8b742408       mov esi, dword [rsp + 8]
0x00003eb2      4889cf         mov rdi, rcx
0x00003eb5      e8a6edffff     call sym.gettext_quote.part.1
0x00003eba      4889442468     mov qword [rsp + 0x68], rax
0x00003ebf      e952fcffff     jmp 0x3b16
0x00003ec4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003ec8      4889cf         mov rdi, rcx
0x00003ecb      e890edffff     call sym.gettext_quote.part.1
0x00003ed0      4889442460     mov qword [rsp + 0x60], rax
0x00003ed5      e967fcffff     jmp 0x3b41
0x00003eda      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003edf      4c89dd         mov rbp, r11
0x00003ee2      89d0           mov eax, edx
0x00003ee4      885c240d       mov byte [rsp + 0xd], bl
0x00003ee8      e9ecf9ffff     jmp 0x38d9
0x00003eed      4883ec08       sub rsp, 8
0x00003ef1      41b805000000   mov r8d, 5
0x00003ef7      4c89d9         mov rcx, r11
0x00003efa      ff742468       push qword [rsp + 0x68]
0x00003efe      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003f02      4c89f7         mov rdi, r14
0x00003f05      ff742438       push qword [rsp + 0x38]
0x00003f09      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003f11      488b542430     mov rdx, qword [rsp + 0x30]
0x00003f16      488b742470     mov rsi, qword [rsp + 0x70]
0x00003f1b      e830eeffff     call sym.quotearg_buffer_restyled
0x00003f20      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003f24      4989c7         mov r15, rax
0x00003f27      e9fdf9ffff     jmp 0x3929
0x00003f2c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003f31      e916ffffff     jmp 0x3e4c
0x00003f36      c74424080200.  mov dword [rsp + 8], 2
0x00003f3e      e996f9ffff     jmp 0x38d9
0x00003f43      e818d6ffff     call sym.imp.__stack_chk_fail
0x00003f48      c644240d00     mov byte [rsp + 0xd], 0
0x00003f4d      e96ffaffff     jmp 0x39c1
0x00003f52      4c89dd         mov rbp, r11
0x00003f55      e996f9ffff     jmp 0x38f0
0x00003f5a      c644240e01     mov byte [rsp + 0xe], 1
0x00003f5f      31c0           xor eax, eax
0x00003f61      4531e4         xor r12d, r12d
0x00003f64      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f6d      e9a2f5ffff     jmp 0x3514
0x00003f72      4c89ea         mov rdx, r13
0x00003f75      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003f7a      e9f3f5ffff     jmp 0x3572
0x00003f7f      e81cd5ffff     call sym.imp.abort
0x00003f84      6690           nop
0x00003f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003f90      4157           push r15
0x00003f92      4156           push r14
0x00003f94      4c63ff         movsxd r15, edi
0x00003f97      4155           push r13
0x00003f99      4154           push r12
0x00003f9b      4989d6         mov r14, rdx
0x00003f9e      55             push rbp
0x00003f9f      53             push rbx
0x00003fa0      4889cd         mov rbp, rcx
0x00003fa3      4883ec28       sub rsp, 0x28
0x00003fa7      4889742408     mov qword [rsp + 8], rsi
0x00003fac      e8ffd4ffff     call sym.imp.__errno_location
0x00003fb1      4989c5         mov r13, rax
0x00003fb4      8b00           mov eax, dword [rax]
0x00003fb6      4585ff         test r15d, r15d
0x00003fb9      488b1dc05020.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209080:8]=0x209090 obj.slotvec0
0x00003fc0      89442418       mov dword [rsp + 0x18], eax
0x00003fc4      0f8867010000   js 0x4131
0x00003fca      44393da75020.  cmp dword [obj.nslots], r15d            ; [0x209078:4]=1
0x00003fd1      7f62           jg 0x4035
0x00003fd3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003fda      0f8456010000   je 0x4136
0x00003fe0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003fe4      488d05a55020.  lea rax, obj.slotvec0                   ; 0x209090
0x00003feb      4963f4         movsxd rsi, r12d
0x00003fee      48c1e604       shl rsi, 4
0x00003ff2      4839c3         cmp rbx, rax
0x00003ff5      0f8415010000   je 0x4110
0x00003ffb      4889df         mov rdi, rbx
0x00003ffe      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004003      4889c3         mov rbx, rax
0x00004006      488905735020.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x0000400d      48633d645020.  movsxd rdi, dword [obj.nslots]          ; [0x209078:4]=1
0x00004014      4489e2         mov edx, r12d
0x00004017      31f6           xor esi, esi
0x00004019      29fa           sub edx, edi
0x0000401b      48c1e704       shl rdi, 4
0x0000401f      4863d2         movsxd rdx, edx
0x00004022      4801df         add rdi, rbx
0x00004025      48c1e204       shl rdx, 4
0x00004029      e882d5ffff     call sym.imp.memset
0x0000402e      448925435020.  mov dword [obj.nslots], r12d            ; [0x209078:4]=1
0x00004035      8b4504         mov eax, dword [rbp + 4]
0x00004038      49c1e704       shl r15, 4
0x0000403c      4883ec08       sub rsp, 8
0x00004040      4c01fb         add rbx, r15
0x00004043      4c8d7d08       lea r15, [rbp + 8]
0x00004047      448b4500       mov r8d, dword [rbp]
0x0000404b      4c8b1b         mov r11, qword [rbx]
0x0000404e      4c8b6308       mov r12, qword [rbx + 8]
0x00004052      4c89f1         mov rcx, r14
0x00004055      83c801         or eax, 1
0x00004058      89442424       mov dword [rsp + 0x24], eax
0x0000405c      ff7530         push qword [rbp + 0x30]
0x0000405f      4189c1         mov r9d, eax
0x00004062      ff7528         push qword [rbp + 0x28]
0x00004065      4157           push r15
0x00004067      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000406a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000406f      4c89e7         mov rdi, r12
0x00004072      4c895c2430     mov qword [rsp + 0x30], r11
0x00004077      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000407c      4883c420       add rsp, 0x20
0x00004080      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004085      4939c3         cmp r11, rax
0x00004088      7767           ja 0x40f1
0x0000408a      488d7001       lea rsi, [rax + 1]
0x0000408e      488d058b5020.  lea rax, obj.slot0                      ; 0x209120
0x00004095      4939c4         cmp r12, rax
0x00004098      488933         mov qword [rbx], rsi
0x0000409b      7412           je 0x40af
0x0000409d      4c89e7         mov rdi, r12
0x000040a0      4889742410     mov qword [rsp + 0x10], rsi
0x000040a5      e8e6d3ffff     call sym.imp.free
0x000040aa      488b742410     mov rsi, qword [rsp + 0x10]
0x000040af      4889f7         mov rdi, rsi
0x000040b2      4889742410     mov qword [rsp + 0x10], rsi
0x000040b7      e8640e0000     call sym.xmalloc
0x000040bc      4883ec08       sub rsp, 8
0x000040c0      48894308       mov qword [rbx + 8], rax
0x000040c4      448b4500       mov r8d, dword [rbp]
0x000040c8      ff7530         push qword [rbp + 0x30]
0x000040cb      ff7528         push qword [rbp + 0x28]
0x000040ce      4c89f1         mov rcx, r14
0x000040d1      4157           push r15
0x000040d3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000040d8      4889c7         mov rdi, rax
0x000040db      488b542428     mov rdx, qword [rsp + 0x28]
0x000040e0      488b742430     mov rsi, qword [rsp + 0x30]
0x000040e5      4989c4         mov r12, rax
0x000040e8      e863ecffff     call sym.quotearg_buffer_restyled
0x000040ed      4883c420       add rsp, 0x20
0x000040f1      8b442418       mov eax, dword [rsp + 0x18]
0x000040f5      41894500       mov dword [r13], eax
0x000040f9      4883c428       add rsp, 0x28
0x000040fd      4c89e0         mov rax, r12
0x00004100      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004101      5d             pop rbp
0x00004102      415c           pop r12
0x00004104      415d           pop r13
0x00004106      415e           pop r14
0x00004108      415f           pop r15
0x0000410a      c3             ret
0x0000410b      0f1f440000     nop dword [rax + rax]
0x00004110      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004112      e8690e0000     call sym.xrealloc
0x00004117      660f6f05714f.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000411f      4889c3         mov rbx, rax
0x00004122      488905574f20.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x00004129      0f1100         movups xmmword [rax], xmm0
0x0000412c      e9dcfeffff     jmp 0x400d
0x00004131      e86ad3ffff     call sym.imp.abort
0x00004136      e835100000     call sym.xalloc_die
0x0000413b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004140      4154           push r12
0x00004142      55             push rbp
0x00004143      53             push rbx
0x00004144      4889fb         mov rbx, rdi
0x00004147      e864d3ffff     call sym.imp.__errno_location
0x0000414c      448b20         mov r12d, dword [rax]
0x0000414f      4889c5         mov rbp, rax
0x00004152      488d05c75020.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004159      4885db         test rbx, rbx
0x0000415c      be38000000     mov esi, 0x38                           ; '8'
0x00004161      480f44d8       cmove rbx, rax
0x00004165      4889df         mov rdi, rbx
0x00004168      e8b30f0000     call sym.xmemdup
0x0000416d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004171      5b             pop rbx
0x00004172      5d             pop rbp
0x00004173      415c           pop r12
0x00004175      c3             ret
0x00004176      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004180      488d05995020.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004187      4885ff         test rdi, rdi
0x0000418a      480f44f8       cmove rdi, rax
0x0000418e      8b07           mov eax, dword [rdi]
0x00004190      c3             ret
0x00004191      0f1f440000     nop dword [rax + rax]
0x00004196      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x000041a0      488d05795020.  lea rax, obj.default_quoting_options    ; 0x209220
0x000041a7      4885ff         test rdi, rdi
0x000041aa      480f44f8       cmove rdi, rax
0x000041ae      8937           mov dword [rdi], esi
0x000041b0      c3             ret
0x000041b1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000041b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000041c0      488d05595020.  lea rax, obj.default_quoting_options    ; 0x209220
0x000041c7      4885ff         test rdi, rdi
0x000041ca      89f1           mov ecx, esi
0x000041cc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000041d0      89f0           mov eax, esi
0x000041d2      83e11f         and ecx, 0x1f
0x000041d5      c0e805         shr al, 5
0x000041d8      0fb6c0         movzx eax, al
0x000041db      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000041e0      8b37           mov esi, dword [rdi]
0x000041e2      89f0           mov eax, esi
0x000041e4      d3e8           shr eax, cl
0x000041e6      31c2           xor edx, eax
0x000041e8      83e001         and eax, 1
0x000041eb      83e201         and edx, 1
0x000041ee      d3e2           shl edx, cl
0x000041f0      31f2           xor edx, esi
0x000041f2      8917           mov dword [rdi], edx
0x000041f4      c3             ret
0x000041f5      90             nop
0x000041f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004200      488d05195020.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004207      4885ff         test rdi, rdi
0x0000420a      480f44f8       cmove rdi, rax
0x0000420e      8b4704         mov eax, dword [rdi + 4]
0x00004211      897704         mov dword [rdi + 4], esi
0x00004214      c3             ret
0x00004215      90             nop
0x00004216      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004220      488d05f94f20.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004227      4885ff         test rdi, rdi
0x0000422a      480f44f8       cmove rdi, rax
0x0000422e      4885f6         test rsi, rsi
0x00004231      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004237      740e           je 0x4247
0x00004239      4885d2         test rdx, rdx
0x0000423c      7409           je 0x4247
0x0000423e      48897728       mov qword [rdi + 0x28], rsi
0x00004242      48895730       mov qword [rdi + 0x30], rdx
0x00004246      c3             ret
0x00004247      4883ec08       sub rsp, 8
0x0000424b      e850d2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004250      4157           push r15
0x00004252      4156           push r14
0x00004254      488d05c54f20.  lea rax, obj.default_quoting_options    ; 0x209220
0x0000425b      4155           push r13
0x0000425d      4154           push r12
0x0000425f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004262      55             push rbp
0x00004263      53             push rbx
0x00004264      4c89c3         mov rbx, r8
0x00004267      4989f6         mov r14, rsi
0x0000426a      4989d7         mov r15, rdx
0x0000426d      4883ec18       sub rsp, 0x18
0x00004271      4d85c0         test r8, r8
0x00004274      480f44d8       cmove rbx, rax
0x00004278      48894c2408     mov qword [rsp + 8], rcx
0x0000427d      e82ed2ffff     call sym.imp.__errno_location
0x00004282      448b20         mov r12d, dword [rax]
0x00004285      4889c5         mov rbp, rax
0x00004288      488d4308       lea rax, [rbx + 8]
0x0000428c      4883ec08       sub rsp, 8
0x00004290      448b4b04       mov r9d, dword [rbx + 4]
0x00004294      ff7330         push qword [rbx + 0x30]
0x00004297      448b03         mov r8d, dword [rbx]
0x0000429a      ff7328         push qword [rbx + 0x28]
0x0000429d      4c89fa         mov rdx, r15
0x000042a0      50             push rax
0x000042a1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000042a6      4c89f6         mov rsi, r14
0x000042a9      4c89ef         mov rdi, r13
0x000042ac      e89feaffff     call sym.quotearg_buffer_restyled
0x000042b1      44896500       mov dword [rbp], r12d
0x000042b5      4883c438       add rsp, 0x38
0x000042b9      5b             pop rbx
0x000042ba      5d             pop rbp
0x000042bb      415c           pop r12
0x000042bd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000042bf      415e           pop r14
0x000042c1      415f           pop r15
0x000042c3      c3             ret
0x000042c4      6690           nop
0x000042c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000042d0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000042d2      4156           push r14
0x000042d4      488d05454f20.  lea rax, obj.default_quoting_options    ; 0x209220
0x000042db      4155           push r13
0x000042dd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000042df      4989d4         mov r12, rdx
0x000042e2      55             push rbp
0x000042e3      53             push rbx
0x000042e4      4889cb         mov rbx, rcx
0x000042e7      4989fe         mov r14, rdi
0x000042ea      4989f7         mov r15, rsi
0x000042ed      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000042f1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000042f4      480f44d8       cmove rbx, rax
0x000042f8      31ed           xor ebp, ebp
0x000042fa      e8b1d1ffff     call sym.imp.__errno_location
0x000042ff      4d85e4         test r12, r12
0x00004302      4989c5         mov r13, rax
0x00004305      8b00           mov eax, dword [rax]
0x00004307      400f94c5       sete bpl
0x0000430b      0b6b04         or ebp, dword [rbx + 4]
0x0000430e      4c8d5308       lea r10, [rbx + 8]
0x00004312      4883ec08       sub rsp, 8
0x00004316      448b03         mov r8d, dword [rbx]
0x00004319      4c89f9         mov rcx, r15
0x0000431c      89442414       mov dword [rsp + 0x14], eax
0x00004320      ff7330         push qword [rbx + 0x30]
0x00004323      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004326      ff7328         push qword [rbx + 0x28]
0x00004329      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000432b      31f6           xor esi, esi
0x0000432d      4189e9         mov r9d, ebp
0x00004330      31ff           xor edi, edi
0x00004332      4c89542440     mov qword [rsp + 0x40], r10
0x00004337      e814eaffff     call sym.quotearg_buffer_restyled
0x0000433c      488d7001       lea rsi, [rax + 1]
0x00004340      4889442448     mov qword [rsp + 0x48], rax
0x00004345      4883c420       add rsp, 0x20
0x00004349      4889f7         mov rdi, rsi
0x0000434c      4889742418     mov qword [rsp + 0x18], rsi
0x00004351      e8ca0b0000     call sym.xmalloc
0x00004356      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000435b      4883ec08       sub rsp, 8
0x0000435f      ff7330         push qword [rbx + 0x30]
0x00004362      ff7328         push qword [rbx + 0x28]
0x00004365      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000436a      4189e9         mov r9d, ebp
0x0000436d      448b03         mov r8d, dword [rbx]
0x00004370      4c89f9         mov rcx, r15
0x00004373      4c89f2         mov rdx, r14
0x00004376      4889c7         mov rdi, rax
0x00004379      4152           push r10
0x0000437b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004380      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004385      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004389      4883c420       add rsp, 0x20
0x0000438d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004390      41894500       mov dword [r13], eax
0x00004394      7409           je 0x439f
0x00004396      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000439b      4d891c24       mov qword [r12], r11
0x0000439f      488b442410     mov rax, qword [rsp + 0x10]
0x000043a4      4883c438       add rsp, 0x38
0x000043a8      5b             pop rbx
0x000043a9      5d             pop rbp
0x000043aa      415c           pop r12
0x000043ac      415d           pop r13
0x000043ae      415e           pop r14
0x000043b0      415f           pop r15
0x000043b2      c3             ret
0x000043b3      0f1f00         nop dword [rax]
0x000043b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000043c0      4889d1         mov rcx, rdx
0x000043c3      31d2           xor edx, edx
0x000043c5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000043ca      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000043d0      8b05a24c2000   mov eax, dword [obj.nslots]             ; [0x209078:4]=1
0x000043d6      4154           push r12
0x000043d8      4c8b25a14c20.  mov r12, qword [obj.slotvec]            ; [0x209080:8]=0x209090 obj.slotvec0
0x000043df      55             push rbp
0x000043e0      53             push rbx
0x000043e1      83f801         cmp eax, 1
0x000043e4      7e2b           jle 0x4411                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000043e6      83e802         sub eax, 2
0x000043e9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000043ee      48c1e004       shl rax, 4
0x000043f2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000043f7      660f1f840000.  nop word [rax + rax]
0x00004400      488b3b         mov rdi, qword [rbx]
0x00004403      4883c310       add rbx, 0x10
0x00004407      e884d0ffff     call sym.imp.free
0x0000440c      4839eb         cmp rbx, rbp
0x0000440f      75ef           jne 0x4400
0x00004411      498b7c2408     mov rdi, qword [r12 + 8]
0x00004416      488d1d034d20.  lea rbx, obj.slot0                      ; 0x209120
0x0000441d      4839df         cmp rdi, rbx
0x00004420      7417           je 0x4439
0x00004422      e869d0ffff     call sym.imp.free
0x00004427      48c7055e4c20.  mov qword [obj.slotvec0], 0x100         ; [0x209090:8]=256
0x00004432      48891d5f4c20.  mov qword [0x00209098], rbx             ; [0x209098:8]=0x209120 obj.slot0
0x00004439      488d1d504c20.  lea rbx, obj.slotvec0                   ; 0x209090
0x00004440      4939dc         cmp r12, rbx
0x00004443      740f           je 0x4454
0x00004445      4c89e7         mov rdi, r12
0x00004448      e843d0ffff     call sym.imp.free
0x0000444d      48891d2c4c20.  mov qword [obj.slotvec], rbx            ; [0x209080:8]=0x209090 obj.slotvec0
0x00004454      5b             pop rbx
0x00004455      c705194c2000.  mov dword [obj.nslots], 1               ; [0x209078:4]=1
0x0000445f      5d             pop rbp
0x00004460      415c           pop r12
0x00004462      c3             ret
0x00004463      0f1f00         nop dword [rax]
0x00004466      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004470      488d0da94d20.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004477      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000447e      e90dfbffff     jmp sym.quotearg_n_options
0x00004483      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004486      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004490      488d0d894d20.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004497      e9f4faffff     jmp sym.quotearg_n_options
0x0000449c      0f1f4000       nop dword [rax]
;-- quotearg:
0x000044a0      488d0d794d20.  lea rcx, obj.default_quoting_options    ; 0x209220
0x000044a7      4889fe         mov rsi, rdi
0x000044aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000044b1      31ff           xor edi, edi
0x000044b3      e9d8faffff     jmp sym.quotearg_n_options
0x000044b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000044c0      488d0d594d20.  lea rcx, obj.default_quoting_options    ; 0x209220
0x000044c7      4889f2         mov rdx, rsi
0x000044ca      4889fe         mov rsi, rdi
0x000044cd      31ff           xor edi, edi
0x000044cf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000044d4      6690           nop
0x000044d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000044e0      4883ec48       sub rsp, 0x48
0x000044e4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000044e7      64488b142528.  mov rdx, qword fs:[0x28]
0x000044f0      4889542438     mov qword [rsp + 0x38], rdx
0x000044f5      31d2           xor edx, edx
0x000044f7      83fe0a         cmp esi, 0xa
0x000044fa      7468           je 0x4564
0x000044fc      893424         mov dword [rsp], esi
0x000044ff      4889e1         mov rcx, rsp
0x00004502      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004509      4889c6         mov rsi, rax
0x0000450c      48c744240400.  mov qword [rsp + 4], 0
0x00004515      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000451e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004527      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004530      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004539      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004542      c74424340000.  mov dword [rsp + 0x34], 0
0x0000454a      e841faffff     call sym.quotearg_n_options
0x0000454f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004554      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000455d      750a           jne 0x4569                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000455f      4883c448       add rsp, 0x48
0x00004563      c3             ret
0x00004564      e837cfffff     call sym.imp.abort
0x00004569      e8f2cfffff     call sym.imp.__stack_chk_fail
0x0000456e      6690           nop
;-- quotearg_n_style_mem:
0x00004570      4883ec48       sub rsp, 0x48
0x00004574      4889d0         mov rax, rdx
0x00004577      4889ca         mov rdx, rcx
0x0000457a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004583      48894c2438     mov qword [rsp + 0x38], rcx
0x00004588      31c9           xor ecx, ecx
0x0000458a      83fe0a         cmp esi, 0xa
0x0000458d      7461           je 0x45f0
0x0000458f      893424         mov dword [rsp], esi
0x00004592      4889e1         mov rcx, rsp
0x00004595      4889c6         mov rsi, rax
0x00004598      48c744240400.  mov qword [rsp + 4], 0
0x000045a1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000045aa      48c744241400.  mov qword [rsp + 0x14], 0
0x000045b3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000045bc      48c744242400.  mov qword [rsp + 0x24], 0
0x000045c5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000045ce      c74424340000.  mov dword [rsp + 0x34], 0
0x000045d6      e8b5f9ffff     call sym.quotearg_n_options
0x000045db      488b542438     mov rdx, qword [rsp + 0x38]
0x000045e0      644833142528.  xor rdx, qword fs:[0x28]
0x000045e9      750a           jne 0x45f5
0x000045eb      4883c448       add rsp, 0x48
0x000045ef      c3             ret
0x000045f0      e8abceffff     call sym.imp.abort
0x000045f5      e866cfffff     call sym.imp.__stack_chk_fail
0x000045fa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004600      4889f2         mov rdx, rsi
0x00004603      89fe           mov esi, edi
0x00004605      31ff           xor edi, edi
0x00004607      e9d4feffff     jmp sym.quotearg_n_style
0x0000460c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004610      4889d1         mov rcx, rdx
0x00004613      4889f2         mov rdx, rsi
0x00004616      89fe           mov esi, edi
0x00004618      31ff           xor edi, edi
0x0000461a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000461f      90             nop
;-- quotearg_char_mem:
0x00004620      4883ec48       sub rsp, 0x48
0x00004624      89d1           mov ecx, edx
0x00004626      64488b042528.  mov rax, qword fs:[0x28]
0x0000462f      4889442438     mov qword [rsp + 0x38], rax
0x00004634      31c0           xor eax, eax
0x00004636      488b05134c20.  mov rax, qword [0x00209250]             ; [0x209250:8]=0
0x0000463d      4989e0         mov r8, rsp
0x00004640      83e11f         and ecx, 0x1f
0x00004643      660f6f05d54b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000464b      4889442430     mov qword [rsp + 0x30], rax
0x00004650      89d0           mov eax, edx
0x00004652      0f290424       movaps xmmword [rsp], xmm0
0x00004656      c0e805         shr al, 5
0x00004659      0fb6c0         movzx eax, al
0x0000465c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004661      660f6f05c74b.  movdqa xmm0, xmmword [0x00209230]
0x00004669      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000466e      660f6f05ca4b.  movdqa xmm0, xmmword [0x00209240]
0x00004676      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000467b      418b11         mov edx, dword [r9]
0x0000467e      89d0           mov eax, edx
0x00004680      d3e8           shr eax, cl
0x00004682      f7d0           not eax
0x00004684      83e001         and eax, 1
0x00004687      d3e0           shl eax, cl
0x00004689      4c89c1         mov rcx, r8
0x0000468c      31d0           xor eax, edx
0x0000468e      4889f2         mov rdx, rsi
0x00004691      4889fe         mov rsi, rdi
0x00004694      418901         mov dword [r9], eax
0x00004697      31ff           xor edi, edi
0x00004699      e8f2f8ffff     call sym.quotearg_n_options
0x0000469e      488b742438     mov rsi, qword [rsp + 0x38]
0x000046a3      644833342528.  xor rsi, qword fs:[0x28]
0x000046ac      7505           jne 0x46b3
0x000046ae      4883c448       add rsp, 0x48
0x000046b2      c3             ret
0x000046b3      e8a8ceffff     call sym.imp.__stack_chk_fail
0x000046b8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000046c0      400fbed6       movsx edx, sil
0x000046c4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000046cb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000046d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000046d5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000046dc      e93fffffff     jmp sym.quotearg_char_mem
0x000046e1      0f1f440000     nop dword [rax + rax]
0x000046e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000046f0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000046f5      e926ffffff     jmp sym.quotearg_char_mem
0x000046fa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004700      4883ec48       sub rsp, 0x48
0x00004704      4889d0         mov rax, rdx
0x00004707      64488b142528.  mov rdx, qword fs:[0x28]
0x00004710      4889542438     mov qword [rsp + 0x38], rdx
0x00004715      31d2           xor edx, edx
0x00004717      83fe0a         cmp esi, 0xa
0x0000471a      7468           je 0x4784
0x0000471c      893424         mov dword [rsp], esi
0x0000471f      4889e1         mov rcx, rsp
0x00004722      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004729      4889c6         mov rsi, rax
0x0000472c      48c744240400.  mov qword [rsp + 4], 0
0x00004735      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000473e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004747      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004750      48c744242400.  mov qword [rsp + 0x24], 0
0x00004759      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004762      c74424340000.  mov dword [rsp + 0x34], 0
0x0000476a      e821f8ffff     call sym.quotearg_n_options
0x0000476f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004774      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000477d      750a           jne 0x4789
0x0000477f      4883c448       add rsp, 0x48
0x00004783      c3             ret
0x00004784      e817cdffff     call sym.imp.abort
0x00004789      e8d2cdffff     call sym.imp.__stack_chk_fail
0x0000478e      6690           nop
;-- quotearg_n_custom_mem:
0x00004790      4883ec48       sub rsp, 0x48
0x00004794      4989c9         mov r9, rcx
0x00004797      488b0db24a20.  mov rcx, qword [0x00209250]             ; [0x209250:8]=0
0x0000479e      660f6f057a4a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000047a6      64488b042528.  mov rax, qword fs:[0x28]
0x000047af      4889442438     mov qword [rsp + 0x38], rax
0x000047b4      31c0           xor eax, eax
0x000047b6      0f290424       movaps xmmword [rsp], xmm0
0x000047ba      4885f6         test rsi, rsi
0x000047bd      48894c2430     mov qword [rsp + 0x30], rcx
0x000047c2      c704240a0000.  mov dword [rsp], 0xa
0x000047c9      660f6f055f4a.  movdqa xmm0, xmmword [0x00209230]
0x000047d1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000047d6      660f6f05624a.  movdqa xmm0, xmmword [0x00209240]
0x000047de      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000047e3      7432           je 0x4817
0x000047e5      4885d2         test rdx, rdx
0x000047e8      742d           je 0x4817
0x000047ea      4889742428     mov qword [rsp + 0x28], rsi
0x000047ef      4889542430     mov qword [rsp + 0x30], rdx
0x000047f4      4889e1         mov rcx, rsp
0x000047f7      4c89c2         mov rdx, r8
0x000047fa      4c89ce         mov rsi, r9
0x000047fd      e88ef7ffff     call sym.quotearg_n_options
0x00004802      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004807      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004810      750a           jne 0x481c
0x00004812      4883c448       add rsp, 0x48
0x00004816      c3             ret
0x00004817      e884ccffff     call sym.imp.abort
0x0000481c      e83fcdffff     call sym.imp.__stack_chk_fail
0x00004821      0f1f440000     nop dword [rax + rax]
0x00004826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004830      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004837      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000483c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004840      4889d1         mov rcx, rdx
0x00004843      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000484a      4889f2         mov rdx, rsi
0x0000484d      4889fe         mov rsi, rdi
0x00004850      31ff           xor edi, edi
0x00004852      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004857      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004860      4989c8         mov r8, rcx
0x00004863      4889d1         mov rcx, rdx
0x00004866      4889f2         mov rdx, rsi
0x00004869      4889fe         mov rsi, rdi
0x0000486c      31ff           xor edi, edi
0x0000486e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004873      0f1f00         nop dword [rax]
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004880      488d0db94720.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004887      e904f7ffff     jmp sym.quotearg_n_options
0x0000488c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004890      488d0da94720.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004897      4889f2         mov rdx, rsi
0x0000489a      4889fe         mov rsi, rdi
0x0000489d      31ff           xor edi, edi
0x0000489f      e9ecf6ffff     jmp sym.quotearg_n_options
0x000048a4      6690           nop
0x000048a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000048b0      488d0d894720.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x000048b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000048be      e9cdf6ffff     jmp sym.quotearg_n_options
0x000048c3      0f1f00         nop dword [rax]
0x000048c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000048d0      488d0d694720.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x000048d7      4889fe         mov rsi, rdi
0x000048da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000048e1      31ff           xor edi, edi
0x000048e3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000048e8      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000048f0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000048f5      31f6           xor esi, esi
0x000048f7      31c0           xor eax, eax
0x000048f9      e9920a0000     jmp sym.rpl_fcntl
0x000048fe      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x00004900      4157           push r15
0x00004902      4156           push r14
0x00004904      4155           push r13
0x00004906      4154           push r12
0x00004908      4d89cc         mov r12, r9
0x0000490b      55             push rbp
0x0000490c      53             push rbx
0x0000490d      4889fd         mov rbp, rdi
0x00004910      4c89c3         mov rbx, r8
0x00004913      4883ec28       sub rsp, 0x28
0x00004917      4885f6         test rsi, rsi
0x0000491a      0f8418010000   je 0x4a38
0x00004920      4989d0         mov r8, rdx
0x00004923      488d151e1e00.  lea rdx, [0x00006748]                   ; "%s (%s) %s\n"
0x0000492a      4989c9         mov r9, rcx
0x0000492d      31c0           xor eax, eax
0x0000492f      4889f1         mov rcx, rsi
0x00004932      be01000000     mov esi, 1
0x00004937      e804ceffff     call sym.imp.__fprintf_chk
0x0000493c      488d35181e00.  lea rsi, [0x0000675b]                   ; "(C)"
0x00004943      31ff           xor edi, edi
0x00004945      ba05000000     mov edx, 5
0x0000494a      e8e1cbffff     call sym.imp.dcgettext
0x0000494f      488d152a2100.  lea rdx, obj.version_etc_copyright      ; 0x6a80 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004956      4889c1         mov rcx, rax
0x00004959      41b8e3070000   mov r8d, 0x7e3
0x0000495f      be01000000     mov esi, 1
0x00004964      4889ef         mov rdi, rbp
0x00004967      31c0           xor eax, eax
0x00004969      e8d2cdffff     call sym.imp.__fprintf_chk
0x0000496e      488d35731e00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x67e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004975      31ff           xor edi, edi
0x00004977      ba05000000     mov edx, 5
0x0000497c      e8afcbffff     call sym.imp.dcgettext
0x00004981      4889ee         mov rsi, rbp
0x00004984      4889c7         mov rdi, rax
0x00004987      e864ccffff     call sym.imp.fputs_unlocked
0x0000498c      4983fc09       cmp r12, 9
0x00004990      0f873a030000   ja 0x4cd0
0x00004996      488d15a72000.  lea rdx, [0x00006a44]
0x0000499d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000049a1      4801d0         add rax, rdx
0x000049a4      ffe0           jmp rax
0x000049a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000049b0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000049b4      488b4310       mov rax, qword [rbx + 0x10]
0x000049b8      488d35991f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6958 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000049bf      4c8b4308       mov r8, qword [rbx + 8]
0x000049c3      ba05000000     mov edx, 5
0x000049c8      31ff           xor edi, edi
0x000049ca      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000049ce      4c8b6328       mov r12, qword [rbx + 0x28]
0x000049d2      4c894c2410     mov qword [rsp + 0x10], r9
0x000049d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000049db      4c8b7318       mov r14, qword [rbx + 0x18]
0x000049df      48890424       mov qword [rsp], rax
0x000049e3      4c89442408     mov qword [rsp + 8], r8
0x000049e8      488b1b         mov rbx, qword [rbx]
0x000049eb      e840cbffff     call sym.imp.dcgettext
0x000049f0      4883ec08       sub rsp, 8
0x000049f4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000049f9      4889c2         mov rdx, rax
0x000049fc      4889d9         mov rcx, rbx
0x000049ff      be01000000     mov esi, 1
0x00004a04      4889ef         mov rdi, rbp
0x00004a07      31c0           xor eax, eax
0x00004a09      4151           push r9
0x00004a0b      4155           push r13
0x00004a0d      4154           push r12
0x00004a0f      4157           push r15
0x00004a11      4156           push r14
0x00004a13      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004a18      4c8b442438     mov r8, qword [rsp + 0x38]
0x00004a1d      e81ecdffff     call sym.imp.__fprintf_chk
0x00004a22      4883c430       add rsp, 0x30
0x00004a26      4883c428       add rsp, 0x28
0x00004a2a      5b             pop rbx
0x00004a2b      5d             pop rbp
0x00004a2c      415c           pop r12
0x00004a2e      415d           pop r13
0x00004a30      415e           pop r14
0x00004a32      415f           pop r15
0x00004a34      c3             ret
0x00004a35      0f1f00         nop dword [rax]
0x00004a38      4989c8         mov r8, rcx
0x00004a3b      4889d1         mov rcx, rdx
0x00004a3e      488d150f1d00.  lea rdx, str.s__s                       ; 0x6754 ; "%s %s\n"
0x00004a45      be01000000     mov esi, 1
0x00004a4a      31c0           xor eax, eax
0x00004a4c      e8efccffff     call sym.imp.__fprintf_chk
0x00004a51      e9e6feffff     jmp 0x493c
0x00004a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00004a60      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004a64      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004a68      488d35191f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6988 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x00004a6f      488b4310       mov rax, qword [rbx + 0x10]
0x00004a73      4c8b4308       mov r8, qword [rbx + 8]
0x00004a77      ba05000000     mov edx, 5
0x00004a7c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004a80      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004a84      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004a88      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004a8c      488b1b         mov rbx, qword [rbx]
0x00004a8f      4c89542418     mov qword [rsp + 0x18], r10
0x00004a94      4c894c2410     mov qword [rsp + 0x10], r9
0x00004a99      48890424       mov qword [rsp], rax
0x00004a9d      4c89442408     mov qword [rsp + 8], r8
0x00004aa2      31ff           xor edi, edi
0x00004aa4      e887caffff     call sym.imp.dcgettext
0x00004aa9      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004aae      4152           push r10
0x00004ab0      e93fffffff     jmp 0x49f4
0x00004ab5      0f1f00         nop dword [rax]
0x00004ab8      488b1b         mov rbx, qword [rbx]
0x00004abb      488d359d1c00.  lea rsi, str.Written_by__s.             ; 0x675f ; "Written by %s.\n"
0x00004ac2      ba05000000     mov edx, 5
0x00004ac7      31ff           xor edi, edi
0x00004ac9      e862caffff     call sym.imp.dcgettext
0x00004ace      4883c428       add rsp, 0x28
0x00004ad2      4889d9         mov rcx, rbx
0x00004ad5      4889ef         mov rdi, rbp
0x00004ad8      5b             pop rbx
0x00004ad9      5d             pop rbp
0x00004ada      415c           pop r12
0x00004adc      415d           pop r13
0x00004ade      415e           pop r14
0x00004ae0      415f           pop r15
0x00004ae2      4889c2         mov rdx, rax
0x00004ae5      be01000000     mov esi, 1
0x00004aea      31c0           xor eax, eax
0x00004aec      e94fccffff     jmp sym.imp.__fprintf_chk
0x00004af1      0f1f80000000.  nop dword [rax]
0x00004af8      4c8b6308       mov r12, qword [rbx + 8]
0x00004afc      488d356c1c00.  lea rsi, str.Written_by__s_and__s.      ; 0x676f ; "Written by %s and %s.\n"
0x00004b03      488b1b         mov rbx, qword [rbx]
0x00004b06      ba05000000     mov edx, 5
0x00004b0b      31ff           xor edi, edi
0x00004b0d      e81ecaffff     call sym.imp.dcgettext
0x00004b12      4883c428       add rsp, 0x28
0x00004b16      4d89e0         mov r8, r12
0x00004b19      4889d9         mov rcx, rbx
0x00004b1c      4889ef         mov rdi, rbp
0x00004b1f      4889c2         mov rdx, rax
0x00004b22      be01000000     mov esi, 1
0x00004b27      5b             pop rbx
0x00004b28      5d             pop rbp
0x00004b29      415c           pop r12
0x00004b2b      415d           pop r13
0x00004b2d      415e           pop r14
0x00004b2f      415f           pop r15
0x00004b31      31c0           xor eax, eax
0x00004b33      e908ccffff     jmp sym.imp.__fprintf_chk
0x00004b38      0f1f84000000.  nop dword [rax + rax]
0x00004b40      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004b44      4c8b6308       mov r12, qword [rbx + 8]
0x00004b48      488d35371c00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6786 ; "Written by %s, %s, and %s.\n"
0x00004b4f      488b1b         mov rbx, qword [rbx]
0x00004b52      ba05000000     mov edx, 5
0x00004b57      31ff           xor edi, edi
0x00004b59      e8d2c9ffff     call sym.imp.dcgettext
0x00004b5e      4883c428       add rsp, 0x28
0x00004b62      4d89e9         mov r9, r13
0x00004b65      4d89e0         mov r8, r12
0x00004b68      4889d9         mov rcx, rbx
0x00004b6b      4889ef         mov rdi, rbp
0x00004b6e      4889c2         mov rdx, rax
0x00004b71      5b             pop rbx
0x00004b72      5d             pop rbp
0x00004b73      415c           pop r12
0x00004b75      415d           pop r13
0x00004b77      415e           pop r14
0x00004b79      415f           pop r15
0x00004b7b      be01000000     mov esi, 1
0x00004b80      31c0           xor eax, eax
0x00004b82      e9b9cbffff     jmp sym.imp.__fprintf_chk
0x00004b87      660f1f840000.  nop word [rax + rax]
0x00004b90      488d35211d00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x68b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004b97      ba05000000     mov edx, 5
0x00004b9c      31ff           xor edi, edi
0x00004b9e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ba2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ba6      4c8b6308       mov r12, qword [rbx + 8]
0x00004baa      488b1b         mov rbx, qword [rbx]
0x00004bad      e87ec9ffff     call sym.imp.dcgettext
0x00004bb2      4883ec08       sub rsp, 8
0x00004bb6      4156           push r14
0x00004bb8      4889c2         mov rdx, rax
0x00004bbb      4d89e9         mov r9, r13
0x00004bbe      4d89e0         mov r8, r12
0x00004bc1      4889d9         mov rcx, rbx
0x00004bc4      4889ef         mov rdi, rbp
0x00004bc7      be01000000     mov esi, 1
0x00004bcc      31c0           xor eax, eax
0x00004bce      e86dcbffff     call sym.imp.__fprintf_chk
0x00004bd3      58             pop rax
0x00004bd4      5a             pop rdx
0x00004bd5      4883c428       add rsp, 0x28
0x00004bd9      5b             pop rbx
0x00004bda      5d             pop rbp
0x00004bdb      415c           pop r12
0x00004bdd      415d           pop r13
0x00004bdf      415e           pop r14
0x00004be1      415f           pop r15
0x00004be3      c3             ret
0x00004be4      0f1f4000       nop dword [rax]
0x00004be8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004bec      488d35e51c00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x68d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004bf3      ba05000000     mov edx, 5
0x00004bf8      31ff           xor edi, edi
0x00004bfa      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004bfe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004c02      4c8b6308       mov r12, qword [rbx + 8]
0x00004c06      488b1b         mov rbx, qword [rbx]
0x00004c09      e822c9ffff     call sym.imp.dcgettext
0x00004c0e      4157           push r15
0x00004c10      eba4           jmp 0x4bb6
0x00004c12      660f1f440000   nop word [rax + rax]
0x00004c18      4c8b4308       mov r8, qword [rbx + 8]
0x00004c1c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c20      488d35d91c00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6900 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004c27      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c2b      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004c2f      ba05000000     mov edx, 5
0x00004c34      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004c38      31ff           xor edi, edi
0x00004c3a      488b1b         mov rbx, qword [rbx]
0x00004c3d      4c890424       mov qword [rsp], r8
0x00004c41      e8eac8ffff     call sym.imp.dcgettext
0x00004c46      4883ec08       sub rsp, 8
0x00004c4a      4d89e9         mov r9, r13
0x00004c4d      4154           push r12
0x00004c4f      4157           push r15
0x00004c51      4156           push r14
0x00004c53      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004c58      4889d9         mov rcx, rbx
0x00004c5b      4889c2         mov rdx, rax
0x00004c5e      4889ef         mov rdi, rbp
0x00004c61      be01000000     mov esi, 1
0x00004c66      31c0           xor eax, eax
0x00004c68      e8d3caffff     call sym.imp.__fprintf_chk
0x00004c6d      4883c420       add rsp, 0x20
0x00004c71      4883c428       add rsp, 0x28
0x00004c75      5b             pop rbx
0x00004c76      5d             pop rbp
0x00004c77      415c           pop r12
0x00004c79      415d           pop r13
0x00004c7b      415e           pop r14
0x00004c7d      415f           pop r15
0x00004c7f      c3             ret
0x00004c80      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004c84      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004c88      488d35991c00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6928 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004c8f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004c93      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004c97      ba05000000     mov edx, 5
0x00004c9c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004ca0      4c8b4308       mov r8, qword [rbx + 8]
0x00004ca4      31ff           xor edi, edi
0x00004ca6      4c894c2408     mov qword [rsp + 8], r9
0x00004cab      488b1b         mov rbx, qword [rbx]
0x00004cae      4c890424       mov qword [rsp], r8
0x00004cb2      e879c8ffff     call sym.imp.dcgettext
0x00004cb7      4155           push r13
0x00004cb9      4154           push r12
0x00004cbb      4157           push r15
0x00004cbd      4156           push r14
0x00004cbf      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004cc4      eb8d           jmp 0x4c53
0x00004cc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004cd0      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004cd4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004cd8      ba05000000     mov edx, 5
0x00004cdd      488b4310       mov rax, qword [rbx + 0x10]
0x00004ce1      4c8b4308       mov r8, qword [rbx + 8]
0x00004ce5      488d35d41c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x69c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004cec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004cf0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004cf4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004cf8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004cfc      4c89542418     mov qword [rsp + 0x18], r10
0x00004d01      4c894c2410     mov qword [rsp + 0x10], r9
0x00004d06      48890424       mov qword [rsp], rax
0x00004d0a      4c89442408     mov qword [rsp + 8], r8
0x00004d0f      488b1b         mov rbx, qword [rbx]
0x00004d12      e98bfdffff     jmp 0x4aa2
0x00004d17      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004d20      4531c9         xor r9d, r9d
0x00004d23      49833800       cmp qword [r8], 0
0x00004d27      7412           je 0x4d3b
0x00004d29      0f1f80000000.  nop dword [rax]
0x00004d30      4983c101       add r9, 1
0x00004d34      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004d39      75f5           jne 0x4d30
0x00004d3b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004d40      4883ec68       sub rsp, 0x68
0x00004d44      4d89c2         mov r10, r8
0x00004d47      4531c9         xor r9d, r9d
0x00004d4a      64488b042528.  mov rax, qword fs:[0x28]
0x00004d53      4889442458     mov qword [rsp + 0x58], rax
0x00004d58      31c0           xor eax, eax
0x00004d5a      4989e0         mov r8, rsp
0x00004d5d      0f1f00         nop dword [rax]
0x00004d60      418b02         mov eax, dword [r10]
0x00004d63      83f82f         cmp eax, 0x2f
0x00004d66      7742           ja 0x4daa
0x00004d68      4189c3         mov r11d, eax
0x00004d6b      4d035a10       add r11, qword [r10 + 0x10]
0x00004d6f      83c008         add eax, 8
0x00004d72      418902         mov dword [r10], eax
0x00004d75      498b03         mov rax, qword [r11]
0x00004d78      4885c0         test rax, rax
0x00004d7b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004d7f      740a           je 0x4d8b
0x00004d81      4983c101       add r9, 1
0x00004d85      4983f90a       cmp r9, 0xa
0x00004d89      75d5           jne 0x4d60
0x00004d8b      e870fbffff     call sym.version_etc_arn
0x00004d90      488b442458     mov rax, qword [rsp + 0x58]
0x00004d95      644833042528.  xor rax, qword fs:[0x28]
0x00004d9e      7505           jne 0x4da5
0x00004da0      4883c468       add rsp, 0x68
0x00004da4      c3             ret
0x00004da5      e8b6c7ffff     call sym.imp.__stack_chk_fail
0x00004daa      4d8b5a08       mov r11, qword [r10 + 8]
0x00004dae      498d4308       lea rax, [r11 + 8]
0x00004db2      49894208       mov qword [r10 + 8], rax
0x00004db6      ebbd           jmp 0x4d75
0x00004db8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004dc0      55             push rbp
0x00004dc1      53             push rbx
0x00004dc2      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004dc8      4531db         xor r11d, r11d
0x00004dcb      4881ecb80000.  sub rsp, 0xb8
0x00004dd2      64488b042528.  mov rax, qword fs:[0x28]
0x00004ddb      4889442478     mov qword [rsp + 0x78], rax
0x00004de0      31c0           xor eax, eax
0x00004de2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004dea      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004df2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004dfa      4c8d442420     lea r8, [rsp + 0x20]
0x00004dff      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004e07      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004e0f      4889442410     mov qword [rsp + 0x10], rax
0x00004e14      488d84248000.  lea rax, [rsp + 0x80]
0x00004e1c      4531c9         xor r9d, r9d
0x00004e1f      4889442418     mov qword [rsp + 0x18], rax
0x00004e24      4889c5         mov rbp, rax
0x00004e27      660f1f840000.  nop word [rax + rax]
0x00004e30      4183fa2f       cmp r10d, 0x2f
0x00004e34      7756           ja 0x4e8c
0x00004e36      4489d0         mov eax, r10d
0x00004e39      41bb01000000   mov r11d, 1
0x00004e3f      4183c208       add r10d, 8
0x00004e43      4801e8         add rax, rbp
0x00004e46      488b00         mov rax, qword [rax]
0x00004e49      4885c0         test rax, rax
0x00004e4c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004e50      740a           je 0x4e5c
0x00004e52      4983c101       add r9, 1
0x00004e56      4983f90a       cmp r9, 0xa
0x00004e5a      75d4           jne 0x4e30
0x00004e5c      4584db         test r11b, r11b
0x00004e5f      7524           jne 0x4e85
0x00004e61      e89afaffff     call sym.version_etc_arn
0x00004e66      488b442478     mov rax, qword [rsp + 0x78]
0x00004e6b      644833042528.  xor rax, qword fs:[0x28]
0x00004e74      750a           jne 0x4e80
0x00004e76      4881c4b80000.  add rsp, 0xb8
0x00004e7d      5b             pop rbx
0x00004e7e      5d             pop rbp
0x00004e7f      c3             ret
0x00004e80      e8dbc6ffff     call sym.imp.__stack_chk_fail
0x00004e85      4489542408     mov dword [rsp + 8], r10d
0x00004e8a      ebd5           jmp 0x4e61
0x00004e8c      4889d8         mov rax, rbx
0x00004e8f      4883c308       add rbx, 8
0x00004e93      ebb1           jmp 0x4e46
0x00004e95      90             nop
0x00004e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004ea0      53             push rbx
0x00004ea1      488d35fa1800.  lea rsi, str.Report_bugs_to:__s         ; 0x67a2 ; "\nReport bugs to: %s\n"
0x00004ea8      ba05000000     mov edx, 5
0x00004ead      31ff           xor edi, edi
0x00004eaf      e87cc6ffff     call sym.imp.dcgettext
0x00004eb4      488d15fc1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x67b7 ; "bug-coreutils@gnu.org"
0x00004ebb      4889c6         mov rsi, rax
0x00004ebe      bf01000000     mov edi, 1
0x00004ec3      31c0           xor eax, eax
0x00004ec5      e806c8ffff     call sym.imp.__printf_chk
0x00004eca      488d35fc1800.  lea rsi, str.s_home_page:___s           ; 0x67cd ; "%s home page: <%s>\n"
0x00004ed1      ba05000000     mov edx, 5
0x00004ed6      31ff           xor edi, edi
0x00004ed8      e853c6ffff     call sym.imp.dcgettext
0x00004edd      488d0db41000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5f98 ; "https://www.gnu.org/software/coreutils/"
0x00004ee4      488d150c1200.  lea rdx, str.GNU_coreutils              ; 0x60f7 ; "GNU coreutils"
0x00004eeb      4889c6         mov rsi, rax
0x00004eee      bf01000000     mov edi, 1
0x00004ef3      31c0           xor eax, eax
0x00004ef5      e8d6c7ffff     call sym.imp.__printf_chk
0x00004efa      488b1da74120.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00004f01      488d35f81a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6a00 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004f08      31ff           xor edi, edi
0x00004f0a      ba05000000     mov edx, 5
0x00004f0f      e81cc6ffff     call sym.imp.dcgettext
0x00004f14      4889de         mov rsi, rbx
0x00004f17      4889c7         mov rdi, rax
0x00004f1a      5b             pop rbx
0x00004f1b      e9d0c6ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004f20      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004f21      4889fb         mov rbx, rdi
0x00004f24      e817c7ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004f29      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004f2c      7505           jne 0x4f33
0x00004f2e      4885db         test rbx, rbx
0x00004f31      7502           jne 0x4f35
0x00004f33      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004f34      c3             ret
0x00004f35      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004f3a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004f40      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004f43      48f7e6         mul rsi
0x00004f46      4889c7         mov rdi, rax
0x00004f49      0f90c0         seto al
0x00004f4c      4885ff         test rdi, rdi
0x00004f4f      780a           js 0x4f5b
0x00004f51      0fb6c0         movzx eax, al
0x00004f54      4885c0         test rax, rax
0x00004f57      7502           jne 0x4f5b
0x00004f59      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004f5b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004f5f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004f64      6690           nop
0x00004f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004f70      ebae           jmp sym.xmalloc
0x00004f72      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004f76      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004f80      4885f6         test rsi, rsi
0x00004f83      53             push rbx
0x00004f84      4889f3         mov rbx, rsi
0x00004f87      7505           jne 0x4f8e
0x00004f89      4885ff         test rdi, rdi
0x00004f8c      751a           jne 0x4fa8
0x00004f8e      4889de         mov rsi, rbx
0x00004f91      e80ac7ffff     call sym.imp.realloc
0x00004f96      4885c0         test rax, rax
0x00004f99      7505           jne 0x4fa0
0x00004f9b      4885db         test rbx, rbx
0x00004f9e      7511           jne 0x4fb1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004fa0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004fa1      c3             ret
0x00004fa2      660f1f440000   nop word [rax + rax]
0x00004fa8      e8e3c4ffff     call sym.imp.free
0x00004fad      31c0           xor eax, eax
0x00004faf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004fb0      c3             ret
0x00004fb1      e8ba010000     call sym.xalloc_die
0x00004fb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004fc0      4889f0         mov rax, rsi
0x00004fc3      48f7e2         mul rdx
0x00004fc6      4889c6         mov rsi, rax
0x00004fc9      0f90c0         seto al
0x00004fcc      4885f6         test rsi, rsi
0x00004fcf      780a           js 0x4fdb
0x00004fd1      0fb6c0         movzx eax, al
0x00004fd4      4885c0         test rax, rax
0x00004fd7      7502           jne 0x4fdb
0x00004fd9      eba5           jmp sym.xrealloc
0x00004fdb      4883ec08       sub rsp, 8
0x00004fdf      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004fe4      6690           nop
0x00004fe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004ff0      4885ff         test rdi, rdi
0x00004ff3      4989d1         mov r9, rdx
0x00004ff6      488b0e         mov rcx, qword [rsi]
0x00004ff9      7435           je 0x5030
0x00004ffb      31d2           xor edx, edx
0x00004ffd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005007      49f7f1         div r9
0x0000500a      4839c8         cmp rax, rcx
0x0000500d      763c           jbe 0x504b
0x0000500f      4889c8         mov rax, rcx
0x00005012      48d1e8         shr rax, 1
0x00005015      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000501a      48890e         mov qword [rsi], rcx
0x0000501d      490fafc9       imul rcx, r9
0x00005021      4889ce         mov rsi, rcx
0x00005024      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005029      0f1f80000000.  nop dword [rax]
0x00005030      4885c9         test rcx, rcx
0x00005033      7423           je 0x5058
0x00005035      4889c8         mov rax, rcx
0x00005038      49f7e1         mul r9
0x0000503b      0f90c2         seto dl
0x0000503e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005041      0fb6d2         movzx edx, dl
0x00005044      7805           js 0x504b
0x00005046      4885d2         test rdx, rdx
0x00005049      74cf           je 0x501a
0x0000504b      4883ec08       sub rsp, 8
0x0000504f      e81c010000     call sym.xalloc_die
0x00005054      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005058      31d2           xor edx, edx
0x0000505a      b880000000     mov eax, 0x80
0x0000505f      4531c0         xor r8d, r8d
0x00005062      49f7f1         div r9
0x00005065      4885c0         test rax, rax
0x00005068      410f94c0       sete r8b
0x0000506c      498d0c00       lea rcx, [r8 + rax]
0x00005070      ebc3           jmp 0x5035
0x00005072      0f1f4000       nop dword [rax]
0x00005076      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005080      4885ff         test rdi, rdi
0x00005083      488b06         mov rax, qword [rsi]
0x00005086      7428           je 0x50b0
0x00005088      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005092      4839d0         cmp rax, rdx
0x00005095      772a           ja 0x50c1
0x00005097      4889c2         mov rdx, rax
0x0000509a      48d1ea         shr rdx, 1
0x0000509d      488d440201     lea rax, [rdx + rax + 1]
0x000050a2      488906         mov qword [rsi], rax
0x000050a5      4889c6         mov rsi, rax
0x000050a8      e9d3feffff     jmp sym.xrealloc
0x000050ad      0f1f00         nop dword [rax]
0x000050b0      4885c0         test rax, rax
0x000050b3      ba80000000     mov edx, 0x80
0x000050b8      480f44c2       cmove rax, rdx
0x000050bc      4885c0         test rax, rax
0x000050bf      79e1           jns 0x50a2
0x000050c1      4883ec08       sub rsp, 8
0x000050c5      e8a6000000     call sym.xalloc_die
0x000050ca      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000050d0      53             push rbx
0x000050d1      4889fb         mov rbx, rdi
0x000050d4      e847feffff     call sym.xmalloc
0x000050d9      4889da         mov rdx, rbx
0x000050dc      31f6           xor esi, esi
0x000050de      4889c7         mov rdi, rax
0x000050e1      5b             pop rbx
0x000050e2      e9c9c4ffff     jmp sym.imp.memset
0x000050e7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000050f0      4889f8         mov rax, rdi
0x000050f3      4883ec08       sub rsp, 8
0x000050f7      48f7e6         mul rsi
0x000050fa      0f90c2         seto dl
0x000050fd      4885c0         test rax, rax
0x00005100      7817           js 0x5119
0x00005102      0fb6d2         movzx edx, dl
0x00005105      4885d2         test rdx, rdx
0x00005108      750f           jne 0x5119
0x0000510a      e8f1c4ffff     call sym.imp.calloc
0x0000510f      4885c0         test rax, rax
0x00005112      7405           je 0x5119
0x00005114      4883c408       add rsp, 8
0x00005118      c3             ret
0x00005119      e852000000     call sym.xalloc_die
0x0000511e      6690           nop
;-- xmemdup:
0x00005120      55             push rbp
0x00005121      53             push rbx
0x00005122      4889fd         mov rbp, rdi
0x00005125      4889f7         mov rdi, rsi
0x00005128      4889f3         mov rbx, rsi
0x0000512b      4883ec08       sub rsp, 8
0x0000512f      e8ecfdffff     call sym.xmalloc
0x00005134      4883c408       add rsp, 8
0x00005138      4889da         mov rdx, rbx
0x0000513b      4889ee         mov rsi, rbp
0x0000513e      5b             pop rbx
0x0000513f      5d             pop rbp
0x00005140      4889c7         mov rdi, rax
0x00005143      e9d8c4ffff     jmp sym.imp.memcpy
0x00005148      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005150      53             push rbx
0x00005151      4889fb         mov rbx, rdi
0x00005154      e8f7c3ffff     call sym.imp.strlen
0x00005159      4889df         mov rdi, rbx
0x0000515c      488d7001       lea rsi, [rax + 1]
0x00005160      5b             pop rbx
0x00005161      ebbd           jmp sym.xmemdup
0x00005163      662e0f1f8400.  nop word cs:[rax + rax]
0x0000516d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005170      488d35381900.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6aaf ; "memory exhausted"
0x00005177      4883ec08       sub rsp, 8
0x0000517b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005180      31ff           xor edi, edi
0x00005182      e8a9c3ffff     call sym.imp.dcgettext
0x00005187      8b3d9b3e2000   mov edi, dword [obj.exit_failure]       ; [0x209028:4]=1
0x0000518d      488d157b1000.  lea rdx, [0x0000620f]                   ; "%s"
0x00005194      4889c1         mov rcx, rax
0x00005197      31f6           xor esi, esi
0x00005199      31c0           xor eax, eax
0x0000519b      e840c5ffff     call sym.imp.error
0x000051a0      e8fbc2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000051a5      662e0f1f8400.  nop word cs:[rax + rax]
0x000051af      90             nop
;-- collate_error:
0x000051b0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:38
0x000051b2      4155           push r13
0x000051b4      4189fe         mov r14d, edi
0x000051b7      4154           push r12
0x000051b9      55             push rbp
0x000051ba      4989d4         mov r12, rdx
0x000051bd      53             push rbx
0x000051be      4889f3         mov rbx, rsi
0x000051c1      488d35f81800.  lea rsi, str.string_comparison_failed   ; ../coreutils-8.31/lib/xmemcoll.c:39 ; 0x6ac0 ; "string comparison failed"
0x000051c8      ba05000000     mov edx, 5
0x000051cd      31ff           xor edi, edi
0x000051cf      4d89c5         mov r13, r8                             ; ../coreutils-8.31/lib/xmemcoll.c:38
0x000051d2      4889cd         mov rbp, rcx
0x000051d5      e856c3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/lib/xmemcoll.c:39
0x000051da      4489f6         mov esi, r14d
0x000051dd      4889c2         mov rdx, rax
0x000051e0      31ff           xor edi, edi
0x000051e2      31c0           xor eax, eax
0x000051e4      e8f7c4ffff     call sym.imp.error
0x000051e9      488d35f01800.  lea rsi, str.Set_LC_ALL__C__to_work_around_the_problem. ; ../coreutils-8.31/lib/xmemcoll.c:40 ; 0x6ae0 ; "Set LC_ALL='C' to work around the problem."
0x000051f0      ba05000000     mov edx, 5
0x000051f5      31ff           xor edi, edi
0x000051f7      e834c3ffff     call sym.imp.dcgettext
0x000051fc      31f6           xor esi, esi
0x000051fe      4889c2         mov rdx, rax
0x00005201      31ff           xor edi, edi
0x00005203      31c0           xor eax, eax
0x00005205      e8d6c4ffff     call sym.imp.error
0x0000520a      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x0000520d      4889ea         mov rdx, rbp
0x00005210      be08000000     mov esi, 8
0x00005215      bf01000000     mov edi, 1
0x0000521a      e851f3ffff     call sym.quotearg_n_style_mem
0x0000521f      4c89e1         mov rcx, r12
0x00005222      4889da         mov rdx, rbx
0x00005225      be08000000     mov esi, 8
0x0000522a      31ff           xor edi, edi
0x0000522c      4889c5         mov rbp, rax
0x0000522f      e83cf3ffff     call sym.quotearg_n_style_mem
0x00005234      488d35d51800.  lea rsi, str.The_strings_compared_were__s_and__s. ; ../coreutils-8.31/lib/xmemcoll.c:42 ; 0x6b10 ; "The strings compared were %s and %s."
0x0000523b      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x0000523e      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xmemcoll.c:42
0x00005243      31ff           xor edi, edi
0x00005245      e8e6c2ffff     call sym.imp.dcgettext
0x0000524a      4989e8         mov r8, rbp                             ; ../coreutils-8.31/lib/xmemcoll.c:41
0x0000524d      4889d9         mov rcx, rbx
0x00005250      8b3dd23d2000   mov edi, dword [obj.exit_failure]       ; [0x209028:4]=1
0x00005256      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:45
0x00005257      5d             pop rbp
0x00005258      415c           pop r12
0x0000525a      415d           pop r13
0x0000525c      415e           pop r14
0x0000525e      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00005261      31f6           xor esi, esi
0x00005263      31c0           xor eax, eax
0x00005265      e976c4ffff     jmp sym.imp.error
0x0000526a      660f1f440000   nop word [rax + rax]
;-- xmemcoll:
0x00005270      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:55
0x00005272      4155           push r13
0x00005274      4989cd         mov r13, rcx
0x00005277      4154           push r12
0x00005279      55             push rbp
0x0000527a      4989d4         mov r12, rdx
0x0000527d      53             push rbx
0x0000527e      4889f5         mov rbp, rsi
0x00005281      4889fb         mov rbx, rdi
0x00005284      e837060000     call sym.memcoll                        ; ../coreutils-8.31/lib/xmemcoll.c:56
0x00005289      4189c6         mov r14d, eax
0x0000528c      e81fc2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:57
0x00005291      8b38           mov edi, dword [rax]
0x00005293      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:58
0x00005295      7411           je 0x52a8
0x00005297      4d89e8         mov r8, r13                             ; ../coreutils-8.31/lib/xmemcoll.c:59
0x0000529a      4c89e1         mov rcx, r12
0x0000529d      4889ea         mov rdx, rbp
0x000052a0      4889de         mov rsi, rbx
0x000052a3      e808ffffff     call sym.collate_error
0x000052a8      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:61
0x000052a9      4489f0         mov eax, r14d
0x000052ac      5d             pop rbp
0x000052ad      415c           pop r12
0x000052af      415d           pop r13
0x000052b1      415e           pop r14
0x000052b3      c3             ret
0x000052b4      6690           nop
0x000052b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xmemcoll0:
0x000052c0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:70
0x000052c2      4155           push r13
0x000052c4      4989ce         mov r14, rcx
0x000052c7      4154           push r12
0x000052c9      55             push rbp
0x000052ca      4989d4         mov r12, rdx
0x000052cd      53             push rbx
0x000052ce      4889fd         mov rbp, rdi
0x000052d1      4889f3         mov rbx, rsi
0x000052d4      e897060000     call sym.memcoll0                       ; ../coreutils-8.31/lib/xmemcoll.c:71
0x000052d9      4189c5         mov r13d, eax
0x000052dc      e8cfc1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:72
0x000052e1      8b38           mov edi, dword [rax]
0x000052e3      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:73
0x000052e5      7413           je 0x52fa
0x000052e7      488d53ff       lea rdx, [rbx - 1]                      ; ../coreutils-8.31/lib/xmemcoll.c:74
0x000052eb      4d8d46ff       lea r8, [r14 - 1]
0x000052ef      4c89e1         mov rcx, r12
0x000052f2      4889ee         mov rsi, rbp
0x000052f5      e8b6feffff     call sym.collate_error
0x000052fa      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:76
0x000052fb      4489e8         mov eax, r13d
0x000052fe      5d             pop rbp
0x000052ff      415c           pop r12
0x00005301      415d           pop r13
0x00005303      415e           pop r14
0x00005305      c3             ret
0x00005306      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fclose:
0x00005310      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005312      55             push rbp
0x00005313      53             push rbx
0x00005314      4889fb         mov rbx, rdi
0x00005317      e814c3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000531c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000531e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005321      7854           js 0x5377                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005323      e858c3ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005328      85c0           test eax, eax
0x0000532a      752c           jne 0x5358
0x0000532c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000532f      e8dc020000     call sym.rpl_fflush
0x00005334      85c0           test eax, eax
0x00005336      743c           je 0x5374
0x00005338      e873c1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000533d      448b20         mov r12d, dword [rax]
0x00005340      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005343      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005346      e8c5c1ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000534b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000534e      7530           jne 0x5380
0x00005350      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005351      5d             pop rbp
0x00005352      415c           pop r12
0x00005354      c3             ret
0x00005355      0f1f00         nop dword [rax]
0x00005358      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000535b      e8d0c2ffff     call sym.imp.fileno
0x00005360      31f6           xor esi, esi
0x00005362      ba01000000     mov edx, 1
0x00005367      89c7           mov edi, eax
0x00005369      e832c2ffff     call sym.imp.lseek
0x0000536e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005372      75b8           jne 0x532c
0x00005374      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005377      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005378      5d             pop rbp
0x00005379      415c           pop r12
0x0000537b      e990c1ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005380      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005384      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005389      ebc5           jmp 0x5350
0x0000538b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00005390      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00005392      55             push rbp
0x00005393      89fd           mov ebp, edi
0x00005395      53             push rbx
0x00005396      4883ec50       sub rsp, 0x50
0x0000539a      64488b042528.  mov rax, qword fs:[0x28]
0x000053a3      4889442418     mov qword [rsp + 0x18], rax
0x000053a8      31c0           xor eax, eax
0x000053aa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x000053af      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x000053b1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x000053b6      48894c2438     mov qword [rsp + 0x38], rcx
0x000053bb      4c89442440     mov qword [rsp + 0x40], r8
0x000053c0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x000053c5      488d442420     lea rax, [rsp + 0x20]
0x000053ca      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x000053cf      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x000053d6      4889442410     mov qword [rsp + 0x10], rax
0x000053db      0f8401020000   je 0x55e2                               ; ../coreutils-8.31/lib/fcntl.c:210
0x000053e1      81fe06040000   cmp esi, 0x406
0x000053e7      7547           jne 0x5430
0x000053e9      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x000053ee      833d633e2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x209258:4]=0
0x000053f5      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x1b10 rip
0x000053fc      448b6010       mov r12d, dword [rax + 0x10]
0x00005400      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00005403      0f882a010000   js 0x5533                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00005409      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000540b      be06040000     mov esi, 0x406
0x00005410      e8dbc0ffff     call sym.imp.fcntl
0x00005415      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00005417      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00005419      0f8889010000   js 0x55a8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000541f      c7052f3e2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x209258:4]=0
0x00005429      eb45           jmp 0x5470
0x0000542b      0f1f440000     nop dword [rax + rax]
0x00005430      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00005433      742b           je 0x5460
0x00005435      7f59           jg 0x5490
0x00005437      83fe04         cmp esi, 4
0x0000543a      0f84d0000000   je 0x5510
0x00005440      0f8fba000000   jg 0x5500
0x00005446      83fe02         cmp esi, 2
0x00005449      0f84c1000000   je 0x5510
0x0000544f      7f0f           jg 0x5460
0x00005451      83fe01         cmp esi, 1
0x00005454      7562           jne 0x54b8
0x00005456      662e0f1f8400.  nop word cs:[rax + rax]
0x00005460      89ef           mov edi, ebp
0x00005462      31c0           xor eax, eax
0x00005464      e887c0ffff     call sym.imp.fcntl
0x00005469      89c3           mov ebx, eax
0x0000546b      0f1f440000     nop dword [rax + rax]
0x00005470      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005475      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000547e      89d8           mov eax, ebx
0x00005480      0f8557010000   jne 0x55dd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00005486      4883c450       add rsp, 0x50
0x0000548a      5b             pop rbx
0x0000548b      5d             pop rbp
0x0000548c      415c           pop r12
0x0000548e      c3             ret
0x0000548f      90             nop
0x00005490      81fe07040000   cmp esi, 0x407
0x00005496      7f48           jg 0x54e0
0x00005498      81fe06040000   cmp esi, 0x406
0x0000549e      7d70           jge 0x5510
0x000054a0      81fe01040000   cmp esi, 0x401
0x000054a6      74b8           je 0x5460
0x000054a8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000054ae      7460           je 0x5510
0x000054b0      81fe00040000   cmp esi, 0x400
0x000054b6      7458           je 0x5510
0x000054b8      8b0424         mov eax, dword [rsp]
0x000054bb      83f82f         cmp eax, 0x2f
0x000054be      0f8736010000   ja 0x55fa
0x000054c4      4803442410     add rax, qword [rsp + 0x10]
0x000054c9      488b10         mov rdx, qword [rax]
0x000054cc      89ef           mov edi, ebp
0x000054ce      31c0           xor eax, eax
0x000054d0      e81bc0ffff     call sym.imp.fcntl
0x000054d5      89c3           mov ebx, eax
0x000054d7      eb97           jmp 0x5470
0x000054d9      0f1f80000000.  nop dword [rax]
0x000054e0      81fe09040000   cmp esi, 0x409
0x000054e6      7428           je 0x5510
0x000054e8      0f8c72ffffff   jl 0x5460
0x000054ee      81fe0a040000   cmp esi, 0x40a
0x000054f4      75c2           jne 0x54b8
0x000054f6      e965ffffff     jmp 0x5460                              ; ../coreutils-8.31/lib/fcntl.c:350
0x000054fb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00005500      83fe09         cmp esi, 9
0x00005503      0f8457ffffff   je 0x5460
0x00005509      7f05           jg 0x5510
0x0000550b      83fe08         cmp esi, 8
0x0000550e      75a8           jne 0x54b8
0x00005510      8b0424         mov eax, dword [rsp]
0x00005513      83f82f         cmp eax, 0x2f
0x00005516      0f87e8000000   ja 0x5604
0x0000551c      4803442410     add rax, qword [rsp + 0x10]
0x00005521      8b10           mov edx, dword [rax]
0x00005523      89ef           mov edi, ebp
0x00005525      31c0           xor eax, eax
0x00005527      e8c4bfffff     call sym.imp.fcntl
0x0000552c      89c3           mov ebx, eax
0x0000552e      e93dffffff     jmp 0x5470
0x00005533      31f6           xor esi, esi
0x00005535      31c0           xor eax, eax
0x00005537      e8b4bfffff     call sym.imp.fcntl
0x0000553c      85c0           test eax, eax
0x0000553e      89c3           mov ebx, eax
0x00005540      0f882affffff   js 0x5470
0x00005546      833d0b3d2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x209258:4]=0
0x0000554d      0f851dffffff   jne 0x5470
0x00005553      31c0           xor eax, eax
0x00005555      be01000000     mov esi, 1
0x0000555a      89df           mov edi, ebx
0x0000555c      e88fbfffff     call sym.imp.fcntl
0x00005561      85c0           test eax, eax
0x00005563      781c           js 0x5581
0x00005565      83c801         or eax, 1
0x00005568      be02000000     mov esi, 2
0x0000556d      89df           mov edi, ebx
0x0000556f      89c2           mov edx, eax
0x00005571      31c0           xor eax, eax
0x00005573      e878bfffff     call sym.imp.fcntl
0x00005578      83f8ff         cmp eax, 0xffffffff
0x0000557b      0f85effeffff   jne 0x5470
0x00005581      e82abfffff     call sym.imp.__errno_location
0x00005586      448b20         mov r12d, dword [rax]
0x00005589      4889c5         mov rbp, rax
0x0000558c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000558e      e82dc0ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00005593      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00005598      44896500       mov dword [rbp], r12d
0x0000559c      e9cffeffff     jmp 0x5470
0x000055a1      0f1f80000000.  nop dword [rax]
0x000055a8      e803bfffff     call sym.imp.__errno_location
0x000055ad      833816         cmp dword [rax], 0x16
0x000055b0      0f8569feffff   jne 0x541f
0x000055b6      31f6           xor esi, esi
0x000055b8      31c0           xor eax, eax
0x000055ba      4489e2         mov edx, r12d
0x000055bd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x000055bf      e82cbfffff     call sym.imp.fcntl
0x000055c4      85c0           test eax, eax
0x000055c6      89c3           mov ebx, eax
0x000055c8      0f88a2feffff   js 0x5470
0x000055ce      c705803c2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x209258:4]=0
0x000055d8      e976ffffff     jmp 0x5553
0x000055dd      e87ebfffff     call sym.imp.__stack_chk_fail
0x000055e2      488b442410     mov rax, qword [rsp + 0x10]
0x000055e7      31f6           xor esi, esi
0x000055e9      8b5010         mov edx, dword [rax + 0x10]
0x000055ec      31c0           xor eax, eax
0x000055ee      e8fdbeffff     call sym.imp.fcntl
0x000055f3      89c3           mov ebx, eax
0x000055f5      e976feffff     jmp 0x5470
0x000055fa      488b442408     mov rax, qword [rsp + 8]
0x000055ff      e9c5feffff     jmp 0x54c9
0x00005604      488b442408     mov rax, qword [rsp + 8]
0x00005609      e913ffffff     jmp 0x5521
0x0000560e      6690           nop
;-- rpl_fflush:
0x00005610      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005613      53             push rbx
0x00005614      4889fb         mov rbx, rdi
0x00005617      7411           je 0x562a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005619      e862c0ffff     call sym.imp.__freading
0x0000561e      85c0           test eax, eax
0x00005620      7408           je 0x562a
0x00005622      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005628      750e           jne 0x5638
0x0000562a      4889df         mov rdi, rbx
0x0000562d      5b             pop rbx
0x0000562e      e91dc0ffff     jmp sym.imp.fflush
0x00005633      0f1f440000     nop dword [rax + rax]
0x00005638      4889df         mov rdi, rbx
0x0000563b      ba01000000     mov edx, 1
0x00005640      31f6           xor esi, esi
0x00005642      e809000000     call sym.rpl_fseeko
0x00005647      4889df         mov rdi, rbx
0x0000564a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000564b      e900c0ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005650      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005654      48394710       cmp qword [rdi + 0x10], rax
0x00005658      7406           je 0x5660                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000565a      e991c0ffff     jmp sym.imp.fseeko
0x0000565f      90             nop
0x00005660      488b4720       mov rax, qword [rdi + 0x20]
0x00005664      48394728       cmp qword [rdi + 0x28], rax
0x00005668      75f0           jne 0x565a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000566a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000566f      75e9           jne 0x565a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005671      4154           push r12
0x00005673      55             push rbp
0x00005674      4189d4         mov r12d, edx
0x00005677      53             push rbx
0x00005678      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000567b      4889fb         mov rbx, rdi
0x0000567e      e8adbfffff     call sym.imp.fileno
0x00005683      4489e2         mov edx, r12d
0x00005686      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005689      89c7           mov edi, eax
0x0000568b      e810bfffff     call sym.imp.lseek
0x00005690      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005694      740c           je 0x56a2
0x00005696      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005699      488983900000.  mov qword [rbx + 0x90], rax
0x000056a0      31c0           xor eax, eax
0x000056a2      5b             pop rbx
0x000056a3      5d             pop rbp
0x000056a4      415c           pop r12
0x000056a6      c3             ret
0x000056a7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000056b0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000056b2      4154           push r12
0x000056b4      4989f5         mov r13, rsi
0x000056b7      55             push rbp
0x000056b8      53             push rbx
0x000056b9      4889fb         mov rbx, rdi
0x000056bc      4989d4         mov r12, rdx
0x000056bf      4883ec18       sub rsp, 0x18
0x000056c3      64488b042528.  mov rax, qword fs:[0x28]
0x000056cc      4889442408     mov qword [rsp + 8], rax
0x000056d1      31c0           xor eax, eax
0x000056d3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000056d8      4885ff         test rdi, rdi
0x000056db      480f44d8       cmove rbx, rax
0x000056df      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000056e2      e899beffff     call sym.imp.mbrtowc
0x000056e7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000056eb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000056ee      7620           jbe 0x5710                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000056f0      4d85e4         test r12, r12
0x000056f3      741b           je 0x5710
0x000056f5      31ff           xor edi, edi
0x000056f7      e894d2ffff     call sym.hard_locale
0x000056fc      84c0           test al, al
0x000056fe      7510           jne 0x5710
0x00005700      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005705      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000570a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000570c      0f1f4000       nop dword [rax]
0x00005710      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005715      644833142528.  xor rdx, qword fs:[0x28]
0x0000571e      4889e8         mov rax, rbp
0x00005721      750b           jne 0x572e
0x00005723      4883c418       add rsp, 0x18
0x00005727      5b             pop rbx
0x00005728      5d             pop rbp
0x00005729      415c           pop r12
0x0000572b      415d           pop r13
0x0000572d      c3             ret
0x0000572e      e82dbeffff     call sym.imp.__stack_chk_fail
0x00005733      662e0f1f8400.  nop word cs:[rax + rax]
0x0000573d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005740      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005742      55             push rbp
0x00005743      4889fd         mov rbp, rdi
0x00005746      53             push rbx
0x00005747      e894bdffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000574c      8b5d00         mov ebx, dword [rbp]
0x0000574f      4889ef         mov rdi, rbp
0x00005752      4989c4         mov r12, rax
0x00005755      e8b6fbffff     call sym.rpl_fclose
0x0000575a      83e320         and ebx, 0x20                           ; "@"
0x0000575d      85db           test ebx, ebx
0x0000575f      7517           jne 0x5778
0x00005761      85c0           test eax, eax
0x00005763      740a           je 0x576f                               ; stdio.h:-186
0x00005765      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005768      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000576d      7439           je 0x57a8
0x0000576f      5b             pop rbx
0x00005770      5d             pop rbp
0x00005771      415c           pop r12
0x00005773      c3             ret
0x00005774      0f1f4000       nop dword [rax]
0x00005778      85c0           test eax, eax
0x0000577a      751c           jne 0x5798
0x0000577c      e82fbdffff     call sym.imp.__errno_location
0x00005781      c70000000000   mov dword [rax], 0
0x00005787      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000578c      5b             pop rbx
0x0000578d      5d             pop rbp
0x0000578e      415c           pop r12
0x00005790      c3             ret
0x00005791      0f1f80000000.  nop dword [rax]
0x00005798      5b             pop rbx
0x00005799      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000579e      5d             pop rbp                                 ; stdio.h:-186
0x0000579f      415c           pop r12
0x000057a1      c3             ret
0x000057a2      660f1f440000   nop word [rax + rax]
0x000057a8      e803bdffff     call sym.imp.__errno_location
0x000057ad      833809         cmp dword [rax], 9
0x000057b0      5b             pop rbx
0x000057b1      5d             pop rbp
0x000057b2      415c           pop r12                                 ; stdio.h:-178
0x000057b4      0f95c0         setne al
0x000057b7      0fb6c0         movzx eax, al
0x000057ba      f7d8           neg eax
0x000057bc      c3             ret
0x000057bd      0f1f00         nop dword [rax]
;-- locale_charset:
0x000057c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x000057c4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000057c9      e892beffff     call sym.imp.nl_langinfo
0x000057ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000057d1      741d           je 0x57f0
0x000057d3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000057d6      488d155b1300.  lea rdx, str.ASCII                      ; 0x6b38 ; "ASCII"
0x000057dd      480f44c2       cmove rax, rdx
0x000057e1      4883c408       add rsp, 8
0x000057e5      c3             ret
0x000057e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057f0      488d05411300.  lea rax, str.ASCII                      ; 0x6b38 ; "ASCII"
0x000057f7      4883c408       add rsp, 8
0x000057fb      c3             ret
0x000057fc      0f1f4000       nop dword [rax]
;-- strcoll_loop:
0x00005800      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:36
0x00005802      4156           push r14
0x00005804      4989ce         mov r14, rcx
0x00005807      4155           push r13
0x00005809      4154           push r12
0x0000580b      4989f5         mov r13, rsi
0x0000580e      55             push rbp
0x0000580f      53             push rbx
0x00005810      4989fc         mov r12, rdi
0x00005813      4889d5         mov rbp, rdx
0x00005816      4883ec08       sub rsp, 8
0x0000581a      e891bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:39
0x0000581f      4989c7         mov r15, rax
0x00005822      eb2f           jmp 0x5853
0x00005824      0f1f4000       nop dword [rax]
0x00005828      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/memcoll.c:44
0x0000582b      e820bdffff     call sym.imp.strlen
0x00005830      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/memcoll.c:45
0x00005833      488d5801       lea rbx, [rax + 1]                      ; ../coreutils-8.31/lib/memcoll.c:44
0x00005837      e814bdffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/memcoll.c:45
0x0000583c      4883c001       add rax, 1
0x00005840      4901dc         add r12, rbx                            ; ../coreutils-8.31/lib/memcoll.c:46
0x00005843      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/memcoll.c:47
0x00005846      4929c6         sub r14, rax                            ; ../coreutils-8.31/lib/memcoll.c:49
0x00005849      4929dd         sub r13, rbx                            ; ../coreutils-8.31/lib/memcoll.c:51
0x0000584c      7432           je 0x5880
0x0000584e      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/memcoll.c:53
0x00005851      744d           je 0x58a0
0x00005853      41c707000000.  mov dword [r15], 0                      ; ../coreutils-8.31/lib/memcoll.c:39
0x0000585a      4889ee         mov rsi, rbp
0x0000585d      4c89e7         mov rdi, r12
0x00005860      e80bbeffff     call sym.imp.strcoll
0x00005865      85c0           test eax, eax
0x00005867      74bf           je 0x5828
0x00005869      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000586d      5b             pop rbx
0x0000586e      5d             pop rbp
0x0000586f      415c           pop r12
0x00005871      415d           pop r13
0x00005873      415e           pop r14
0x00005875      415f           pop r15
0x00005877      c3             ret
0x00005878      0f1f84000000.  nop dword [rax + rax]
0x00005880      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcoll.c:52
0x00005882      4d85f6         test r14, r14
0x00005885      0f95c0         setne al
0x00005888      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000588c      5b             pop rbx
0x0000588d      f7d8           neg eax                                 ; ../coreutils-8.31/lib/memcoll.c:52
0x0000588f      5d             pop rbp                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x00005890      415c           pop r12
0x00005892      415d           pop r13
0x00005894      415e           pop r14
0x00005896      415f           pop r15
0x00005898      c3             ret
0x00005899      0f1f80000000.  nop dword [rax]
0x000058a0      4883c408       add rsp, 8
0x000058a4      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/memcoll.c:54
0x000058a9      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x000058aa      5d             pop rbp
0x000058ab      415c           pop r12
0x000058ad      415d           pop r13
0x000058af      415e           pop r14
0x000058b1      415f           pop r15
0x000058b3      c3             ret
0x000058b4      6690           nop
0x000058b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcoll:
0x000058c0      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:67
0x000058c2      4156           push r14
0x000058c4      4989d7         mov r15, rdx
0x000058c7      4155           push r13
0x000058c9      4154           push r12
0x000058cb      4989fe         mov r14, rdi
0x000058ce      55             push rbp
0x000058cf      53             push rbx
0x000058d0      4889cd         mov rbp, rcx
0x000058d3      4889f3         mov rbx, rsi
0x000058d6      4883ec18       sub rsp, 0x18
0x000058da      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:74
0x000058dd      7513           jne 0x58f2
0x000058df      4889f2         mov rdx, rsi
0x000058e2      4c89fe         mov rsi, r15
0x000058e5      e8f6bcffff     call sym.imp.memcmp
0x000058ea      85c0           test eax, eax
0x000058ec      89442408       mov dword [rsp + 8], eax
0x000058f0      7466           je 0x5958
0x000058f2      4d8d2c1e       lea r13, [r14 + rbx]                    ; ../coreutils-8.31/lib/memcoll.c:81
0x000058f6      4d8d242f       lea r12, [r15 + rbp]                    ; ../coreutils-8.31/lib/memcoll.c:82
0x000058fa      488d4d01       lea rcx, [rbp + 1]                      ; ../coreutils-8.31/lib/memcoll.c:87
0x000058fe      488d7301       lea rsi, [rbx + 1]
0x00005902      4c89fa         mov rdx, r15
0x00005905      4c89f7         mov rdi, r14
0x00005908      450fb64d00     movzx r9d, byte [r13]                   ; ../coreutils-8.31/lib/memcoll.c:81
0x0000590d      450fb60424     movzx r8d, byte [r12]                   ; ../coreutils-8.31/lib/memcoll.c:82
0x00005912      41c6450000     mov byte [r13], 0                       ; ../coreutils-8.31/lib/memcoll.c:84
0x00005917      41c6042400     mov byte [r12], 0                       ; ../coreutils-8.31/lib/memcoll.c:85
0x0000591c      44884c240f     mov byte [rsp + 0xf], r9b               ; ../coreutils-8.31/lib/memcoll.c:81
0x00005921      4488442408     mov byte [rsp + 8], r8b                 ; ../coreutils-8.31/lib/memcoll.c:82
0x00005926      e8d5feffff     call sym.strcoll_loop                   ; ../coreutils-8.31/lib/memcoll.c:87
0x0000592b      440fb64c240f   movzx r9d, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/memcoll.c:89
0x00005931      440fb6442408   movzx r8d, byte [rsp + 8]               ; ../coreutils-8.31/lib/memcoll.c:90
0x00005937      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/memcoll.c:87
0x00005939      45884d00       mov byte [r13], r9b                     ; ../coreutils-8.31/lib/memcoll.c:89
0x0000593d      45880424       mov byte [r12], r8b                     ; ../coreutils-8.31/lib/memcoll.c:90
0x00005941      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/memcoll.c:94
0x00005945      89d0           mov eax, edx
0x00005947      5b             pop rbx
0x00005948      5d             pop rbp
0x00005949      415c           pop r12
0x0000594b      415d           pop r13
0x0000594d      415e           pop r14
0x0000594f      415f           pop r15
0x00005951      c3             ret
0x00005952      660f1f440000   nop word [rax + rax]
0x00005958      e853bbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:76
0x0000595d      8b542408       mov edx, dword [rsp + 8]                ; ../coreutils-8.31/lib/memcoll.c:77
0x00005961      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/memcoll.c:76
0x00005967      ebd8           jmp 0x5941                              ; ../coreutils-8.31/lib/memcoll.c:77
0x00005969      0f1f80000000.  nop dword [rax]
;-- memcoll0:
0x00005970      4154           push r12                                ; ../coreutils-8.31/lib/memcoll.c:103
0x00005972      55             push rbp
0x00005973      4989d4         mov r12, rdx
0x00005976      53             push rbx
0x00005977      4889fd         mov rbp, rdi
0x0000597a      4889f3         mov rbx, rsi
0x0000597d      4883ec10       sub rsp, 0x10
0x00005981      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:104
0x00005984      7519           jne 0x599f
0x00005986      4889f2         mov rdx, rsi
0x00005989      4c89e6         mov rsi, r12
0x0000598c      48894c2408     mov qword [rsp + 8], rcx
0x00005991      e84abcffff     call sym.imp.memcmp
0x00005996      85c0           test eax, eax
0x00005998      488b4c2408     mov rcx, qword [rsp + 8]
0x0000599d      7419           je 0x59b8
0x0000599f      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x000059a3      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/memcoll.c:110
0x000059a6      4889de         mov rsi, rbx
0x000059a9      4889ef         mov rdi, rbp
0x000059ac      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:111
0x000059ad      5d             pop rbp
0x000059ae      415c           pop r12
0x000059b0      e94bfeffff     jmp sym.strcoll_loop                    ; ../coreutils-8.31/lib/memcoll.c:110
0x000059b5      0f1f00         nop dword [rax]
0x000059b8      e8f3baffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:106
0x000059bd      c70000000000   mov dword [rax], 0
0x000059c3      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x000059c7      31c0           xor eax, eax
0x000059c9      5b             pop rbx
0x000059ca      5d             pop rbp
0x000059cb      415c           pop r12
0x000059cd      c3             ret
0x000059ce      6690           nop
;-- __libc_csu_init:
0x000059d0      4157           push r15
0x000059d2      4156           push r14
0x000059d4      4989d7         mov r15, rdx
0x000059d7      4155           push r13
0x000059d9      4154           push r12
0x000059db      4c8d25ee3020.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208ad0
0x000059e2      55             push rbp
0x000059e3      488d2dee3020.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208ad8
0x000059ea      53             push rbx
0x000059eb      4189fd         mov r13d, edi
0x000059ee      4989f6         mov r14, rsi
0x000059f1      4c29e5         sub rbp, r12
0x000059f4      4883ec08       sub rsp, 8
0x000059f8      48c1fd03       sar rbp, 3
0x000059fc      e857baffff     call sym._init
0x00005a01      4885ed         test rbp, rbp
0x00005a04      7420           je 0x5a26
0x00005a06      31db           xor ebx, ebx
0x00005a08      0f1f84000000.  nop dword [rax + rax]
0x00005a10      4c89fa         mov rdx, r15
0x00005a13      4c89f6         mov rsi, r14
0x00005a16      4489ef         mov edi, r13d
0x00005a19      41ff14dc       call qword [r12 + rbx*8]
0x00005a1d      4883c301       add rbx, 1
0x00005a21      4839dd         cmp rbp, rbx
0x00005a24      75ea           jne 0x5a10
0x00005a26      4883c408       add rsp, 8
0x00005a2a      5b             pop rbx
0x00005a2b      5d             pop rbp
0x00005a2c      415c           pop r12
0x00005a2e      415d           pop r13
0x00005a30      415e           pop r14
0x00005a32      415f           pop r15
0x00005a34      c3             ret
0x00005a35      90             nop
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005a40      f3c3           ret
0x00005a42      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a4c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005a50      488b15b13520.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00005a57      31f6           xor esi, esi
0x00005a59      e9b2bcffff     jmp sym.imp.__cxa_atexit
0x00005a5e      0000           add byte [rax], al
