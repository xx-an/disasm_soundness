;-- section..plt:
;-- .plt:
0x00003230      ff355aca2100   push qword [0x0021fc90]                 ; [12] -r-x section size 1616 named .plt
0x00003236      ff255cca2100   jmp qword [0x0021fc98]                  ; [0x21fc98:8]=0
0x0000323c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00003240      ff255aca2100   jmp qword [reloc.__ctype_toupper_loc]   ; [0x21fca0:8]=0x3246 ; "F2"
0x00003246      6800000000     push 0
0x0000324b      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00003250      ff2552ca2100   jmp qword [reloc.getenv]                ; [0x21fca8:8]=0x3256 ; "V2"
0x00003256      6801000000     push 1
0x0000325b      e9d0ffffff     jmp sym..plt
;-- imp.sigprocmask:
0x00003260      ff254aca2100   jmp qword [reloc.sigprocmask]           ; [0x21fcb0:8]=0x3266 ; "f2"
0x00003266      6802000000     push 2
0x0000326b      e9c0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00003270      ff2542ca2100   jmp qword [reloc.__snprintf_chk]        ; [0x21fcb8:8]=0x3276 ; "v2"
0x00003276      6803000000     push 3
0x0000327b      e9b0ffffff     jmp sym..plt
;-- imp.raise:
0x00003280      ff253aca2100   jmp qword [reloc.raise]                 ; [0x21fcc0:8]=0x3286
0x00003286      6804000000     push 4
0x0000328b      e9a0ffffff     jmp sym..plt
;-- imp.abort:
0x00003290      ff2532ca2100   jmp qword [reloc.abort]                 ; [0x21fcc8:8]=0x3296
0x00003296      6805000000     push 5
0x0000329b      e990ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000032a0      ff252aca2100   jmp qword [reloc.__errno_location]      ; [0x21fcd0:8]=0x32a6
0x000032a6      6806000000     push 6
0x000032ab      e980ffffff     jmp sym..plt
;-- imp.strncmp:
0x000032b0      ff2522ca2100   jmp qword [reloc.strncmp]               ; [0x21fcd8:8]=0x32b6
0x000032b6      6807000000     push 7
0x000032bb      e970ffffff     jmp sym..plt
;-- imp.localtime_r:
0x000032c0      ff251aca2100   jmp qword [reloc.localtime_r]           ; [0x21fce0:8]=0x32c6
0x000032c6      6808000000     push 8
0x000032cb      e960ffffff     jmp sym..plt
;-- imp._exit:
0x000032d0      ff2512ca2100   jmp qword [reloc._exit]                 ; [0x21fce8:8]=0x32d6
0x000032d6      6809000000     push 9
0x000032db      e950ffffff     jmp sym..plt
;-- imp.strcpy:
0x000032e0      ff250aca2100   jmp qword [reloc.strcpy]                ; [0x21fcf0:8]=0x32e6
0x000032e6      680a000000     push 0xa
0x000032eb      e940ffffff     jmp sym..plt
;-- imp.__fpending:
0x000032f0      ff2502ca2100   jmp qword [reloc.__fpending]            ; [0x21fcf8:8]=0x32f6
0x000032f6      680b000000     push 0xb
0x000032fb      e930ffffff     jmp sym..plt
;-- imp.isatty:
0x00003300      ff25fac92100   jmp qword [reloc.isatty]                ; [0x21fd00:8]=0x3306
0x00003306      680c000000     push 0xc
0x0000330b      e920ffffff     jmp sym..plt
;-- imp.sigaction:
0x00003310      ff25f2c92100   jmp qword [reloc.sigaction]             ; [0x21fd08:8]=0x3316
0x00003316      680d000000     push 0xd
0x0000331b      e910ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00003320      ff25eac92100   jmp qword [reloc.iswcntrl]              ; [0x21fd10:8]=0x3326 ; "&3"
0x00003326      680e000000     push 0xe
0x0000332b      e900ffffff     jmp sym..plt
;-- imp.wcswidth:
0x00003330      ff25e2c92100   jmp qword [reloc.wcswidth]              ; [0x21fd18:8]=0x3336 ; "63"
0x00003336      680f000000     push 0xf
0x0000333b      e9f0feffff     jmp sym..plt
;-- imp.localeconv:
0x00003340      ff25dac92100   jmp qword [reloc.localeconv]            ; [0x21fd20:8]=0x3346 ; "F3"
0x00003346      6810000000     push 0x10
0x0000334b      e9e0feffff     jmp sym..plt
;-- imp.mbstowcs:
0x00003350      ff25d2c92100   jmp qword [reloc.mbstowcs]              ; [0x21fd28:8]=0x3356 ; "V3"
0x00003356      6811000000     push 0x11
0x0000335b      e9d0feffff     jmp sym..plt
;-- imp.readlink:
0x00003360      ff25cac92100   jmp qword [reloc.readlink]              ; [0x21fd30:8]=0x3366 ; "f3"
0x00003366      6812000000     push 0x12                               ; u">\x01"
0x0000336b      e9c0feffff     jmp sym..plt
;-- imp.clock_gettime:
0x00003370      ff25c2c92100   jmp qword [reloc.clock_gettime]         ; [0x21fd38:8]=0x3376 ; "v3"
0x00003376      6813000000     push 0x13
0x0000337b      e9b0feffff     jmp sym..plt
;-- imp.setenv:
0x00003380      ff25bac92100   jmp qword [reloc.setenv]                ; [0x21fd40:8]=0x3386
0x00003386      6814000000     push 0x14
0x0000338b      e9a0feffff     jmp sym..plt
;-- imp.textdomain:
0x00003390      ff25b2c92100   jmp qword [reloc.textdomain]            ; [0x21fd48:8]=0x3396
0x00003396      6815000000     push 0x15
0x0000339b      e990feffff     jmp sym..plt
;-- imp.fclose:
0x000033a0      ff25aac92100   jmp qword [reloc.fclose]                ; [0x21fd50:8]=0x33a6
0x000033a6      6816000000     push 0x16
0x000033ab      e980feffff     jmp sym..plt
;-- imp.opendir:
0x000033b0      ff25a2c92100   jmp qword [reloc.opendir]               ; [0x21fd58:8]=0x33b6
0x000033b6      6817000000     push 0x17
0x000033bb      e970feffff     jmp sym..plt
;-- imp.getpwuid:
0x000033c0      ff259ac92100   jmp qword [reloc.getpwuid]              ; [0x21fd60:8]=0x33c6
0x000033c6      6818000000     push 0x18                               ; "pR"
0x000033cb      e960feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000033d0      ff2592c92100   jmp qword [reloc.bindtextdomain]        ; [0x21fd68:8]=0x33d6
0x000033d6      6819000000     push 0x19                               ; "R"
0x000033db      e950feffff     jmp sym..plt
;-- imp.dcgettext:
0x000033e0      ff258ac92100   jmp qword [reloc.dcgettext]             ; [0x21fd70:8]=0x33e6
0x000033e6      681a000000     push 0x1a
0x000033eb      e940feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000033f0      ff2582c92100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x21fd78:8]=0x33f6
0x000033f6      681b000000     push 0x1b
0x000033fb      e930feffff     jmp sym..plt
;-- imp.strlen:
0x00003400      ff257ac92100   jmp qword [reloc.strlen]                ; [0x21fd80:8]=0x3406
0x00003406      681c000000     push 0x1c
0x0000340b      e920feffff     jmp sym..plt
;-- imp.__lxstat:
0x00003410      ff2572c92100   jmp qword [reloc.__lxstat]              ; [0x21fd88:8]=0x3416
0x00003416      681d000000     push 0x1d
0x0000341b      e910feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00003420      ff256ac92100   jmp qword [reloc.__stack_chk_fail]      ; [0x21fd90:8]=0x3426 ; "&4"
0x00003426      681e000000     push 0x1e
0x0000342b      e900feffff     jmp sym..plt
;-- imp.getopt_long:
0x00003430      ff2562c92100   jmp qword [reloc.getopt_long]           ; [0x21fd98:8]=0x3436 ; "64"
0x00003436      681f000000     push 0x1f
0x0000343b      e9f0fdffff     jmp sym..plt
;-- imp.mbrtowc:
0x00003440      ff255ac92100   jmp qword [reloc.mbrtowc]               ; [0x21fda0:8]=0x3446 ; "F4"
0x00003446      6820000000     push 0x20                               ; "@"
0x0000344b      e9e0fdffff     jmp sym..plt
;-- imp.strchr:
0x00003450      ff2552c92100   jmp qword [reloc.strchr]                ; [0x21fda8:8]=0x3456 ; "V4"
0x00003456      6821000000     push 0x21                               ; '!'
0x0000345b      e9d0fdffff     jmp sym..plt
;-- imp.getgrgid:
0x00003460      ff254ac92100   jmp qword [reloc.getgrgid]              ; [0x21fdb0:8]=0x3466 ; "f4"
0x00003466      6822000000     push 0x22                               ; '"'
0x0000346b      e9c0fdffff     jmp sym..plt
;-- imp.__fxstatat:
0x00003470      ff2542c92100   jmp qword [reloc.__fxstatat]            ; [0x21fdb8:8]=0x3476 ; "v4"
0x00003476      6823000000     push 0x23                               ; '#'
0x0000347b      e9b0fdffff     jmp sym..plt
;-- imp.snprintf:
0x00003480      ff253ac92100   jmp qword [reloc.snprintf]              ; [0x21fdc0:8]=0x3486
0x00003486      6824000000     push 0x24                               ; '$'
0x0000348b      e9a0fdffff     jmp sym..plt
;-- imp.__overflow:
0x00003490      ff2532c92100   jmp qword [reloc.__overflow]            ; [0x21fdc8:8]=0x3496
0x00003496      6825000000     push 0x25                               ; '%'
0x0000349b      e990fdffff     jmp sym..plt
;-- imp.strrchr:
0x000034a0      ff252ac92100   jmp qword [reloc.strrchr]               ; [0x21fdd0:8]=0x34a6
0x000034a6      6826000000     push 0x26                               ; '&'
0x000034ab      e980fdffff     jmp sym..plt
;-- imp.gmtime_r:
0x000034b0      ff2522c92100   jmp qword [reloc.gmtime_r]              ; [0x21fdd8:8]=0x34b6
0x000034b6      6827000000     push 0x27                               ; '''
0x000034bb      e970fdffff     jmp sym..plt
;-- imp.lseek:
0x000034c0      ff251ac92100   jmp qword [reloc.lseek]                 ; [0x21fde0:8]=0x34c6
0x000034c6      6828000000     push 0x28                               ; '(' ; "X\x81\t"
0x000034cb      e960fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x000034d0      ff2512c92100   jmp qword [reloc.__assert_fail]         ; [0x21fde8:8]=0x34d6
0x000034d6      6829000000     push 0x29                               ; ')'
0x000034db      e950fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000034e0      ff250ac92100   jmp qword [reloc.__strtoul_internal]    ; [0x21fdf0:8]=0x34e6
0x000034e6      682a000000     push 0x2a                               ; '*' ; "\t"
0x000034eb      e940fdffff     jmp sym..plt
;-- imp.fnmatch:
0x000034f0      ff2502c92100   jmp qword [reloc.fnmatch]               ; [0x21fdf8:8]=0x34f6
0x000034f6      682b000000     push 0x2b                               ; '+'
0x000034fb      e930fdffff     jmp sym..plt
;-- imp.memset:
0x00003500      ff25fac82100   jmp qword [reloc.memset]                ; [0x21fe00:8]=0x3506
0x00003506      682c000000     push 0x2c                               ; ','
0x0000350b      e920fdffff     jmp sym..plt
;-- imp.ioctl:
0x00003510      ff25f2c82100   jmp qword [reloc.ioctl]                 ; [0x21fe08:8]=0x3516
0x00003516      682d000000     push 0x2d                               ; '-'
0x0000351b      e910fdffff     jmp sym..plt
;-- imp.getcwd:
0x00003520      ff25eac82100   jmp qword [reloc.getcwd]                ; [0x21fe10:8]=0x3526 ; "&5"
0x00003526      682e000000     push 0x2e                               ; '.'
0x0000352b      e900fdffff     jmp sym..plt
;-- imp.strspn:
0x00003530      ff25e2c82100   jmp qword [reloc.strspn]                ; [0x21fe18:8]=0x3536 ; "65"
0x00003536      682f000000     push 0x2f                               ; '/'
0x0000353b      e9f0fcffff     jmp sym..plt
;-- imp.closedir:
0x00003540      ff25dac82100   jmp qword [reloc.closedir]              ; [0x21fe20:8]=0x3546 ; "F5"
0x00003546      6830000000     push 0x30                               ; '0'
0x0000354b      e9e0fcffff     jmp sym..plt
;-- imp.memcmp:
0x00003550      ff25d2c82100   jmp qword [reloc.memcmp]                ; [0x21fe28:8]=0x3556 ; "V5"
0x00003556      6831000000     push 0x31                               ; '1'
0x0000355b      e9d0fcffff     jmp sym..plt
;-- imp._setjmp:
0x00003560      ff25cac82100   jmp qword [reloc._setjmp]               ; [0x21fe30:8]=0x3566 ; "f5"
0x00003566      6832000000     push 0x32                               ; '2'
0x0000356b      e9c0fcffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00003570      ff25c2c82100   jmp qword [reloc.fputs_unlocked]        ; [0x21fe38:8]=0x3576 ; "v5"
0x00003576      6833000000     push 0x33                               ; '3'
0x0000357b      e9b0fcffff     jmp sym..plt
;-- imp.calloc:
0x00003580      ff25bac82100   jmp qword [reloc.calloc]                ; [0x21fe40:8]=0x3586
0x00003586      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x0000358b      e9a0fcffff     jmp sym..plt
;-- imp.strcmp:
0x00003590      ff25b2c82100   jmp qword [reloc.strcmp]                ; [0x21fe48:8]=0x3596
0x00003596      6835000000     push 0x35                               ; '5'
0x0000359b      e990fcffff     jmp sym..plt
;-- imp.signal:
0x000035a0      ff25aac82100   jmp qword [reloc.signal]                ; [0x21fe50:8]=0x35a6
0x000035a6      6836000000     push 0x36                               ; '6' ; u"8\t@%$\x06"
0x000035ab      e980fcffff     jmp sym..plt
;-- imp.dirfd:
0x000035b0      ff25a2c82100   jmp qword [reloc.dirfd]                 ; [0x21fe58:8]=0x35b6
0x000035b6      6837000000     push 0x37                               ; '7'
0x000035bb      e970fcffff     jmp sym..plt
;-- imp.getpwnam:
0x000035c0      ff259ac82100   jmp qword [reloc.getpwnam]              ; [0x21fe60:8]=0x35c6
0x000035c6      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x000035cb      e960fcffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x000035d0      ff2592c82100   jmp qword [reloc.__memcpy_chk]          ; [0x21fe68:8]=0x35d6
0x000035d6      6839000000     push 0x39                               ; '9'
0x000035db      e950fcffff     jmp sym..plt
;-- imp.sigemptyset:
0x000035e0      ff258ac82100   jmp qword [reloc.sigemptyset]           ; [0x21fe70:8]=0x35e6
0x000035e6      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x000035eb      e940fcffff     jmp sym..plt
;-- imp.memcpy:
0x000035f0      ff2582c82100   jmp qword [reloc.memcpy]                ; [0x21fe78:8]=0x35f6
0x000035f6      683b000000     push 0x3b                               ; ';'
0x000035fb      e930fcffff     jmp sym..plt
;-- imp.getgrnam:
0x00003600      ff257ac82100   jmp qword [reloc.getgrnam]              ; [0x21fe80:8]=0x3606
0x00003606      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x0000360b      e920fcffff     jmp sym..plt
;-- imp.tzset:
0x00003610      ff2572c82100   jmp qword [reloc.tzset]                 ; [0x21fe88:8]=0x3616
0x00003616      683d000000     push 0x3d                               ; '='
0x0000361b      e910fcffff     jmp sym..plt
;-- imp.fileno:
0x00003620      ff256ac82100   jmp qword [reloc.fileno]                ; [0x21fe90:8]=0x3626 ; "&6"
0x00003626      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x0000362b      e900fcffff     jmp sym..plt
;-- imp.tcgetpgrp:
0x00003630      ff2562c82100   jmp qword [reloc.tcgetpgrp]             ; [0x21fe98:8]=0x3636 ; "66"
0x00003636      683f000000     push 0x3f                               ; '?'
0x0000363b      e9f0fbffff     jmp sym..plt
;-- imp.__xstat:
0x00003640      ff255ac82100   jmp qword [reloc.__xstat]               ; [0x21fea0:8]=0x3646 ; "F6"
0x00003646      6840000000     push 0x40                               ; segment.PHDR
0x0000364b      e9e0fbffff     jmp sym..plt
;-- imp.readdir:
0x00003650      ff2552c82100   jmp qword [reloc.readdir]               ; [0x21fea8:8]=0x3656 ; "V6"
0x00003656      6841000000     push 0x41                               ; 'A'
0x0000365b      e9d0fbffff     jmp sym..plt
;-- imp.wcwidth:
0x00003660      ff254ac82100   jmp qword [reloc.wcwidth]               ; [0x21feb0:8]=0x3666 ; "f6"
0x00003666      6842000000     push 0x42                               ; 'B'
0x0000366b      e9c0fbffff     jmp sym..plt
;-- imp.fflush:
0x00003670      ff2542c82100   jmp qword [reloc.fflush]                ; [0x21feb8:8]=0x3676 ; "v6"
0x00003676      6843000000     push 0x43                               ; 'C'
0x0000367b      e9b0fbffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00003680      ff253ac82100   jmp qword [reloc.nl_langinfo]           ; [0x21fec0:8]=0x3686
0x00003686      6844000000     push 0x44                               ; 'D'
0x0000368b      e9a0fbffff     jmp sym..plt
;-- imp.__fxstat:
0x00003690      ff2532c82100   jmp qword [reloc.__fxstat]              ; [0x21fec8:8]=0x3696
0x00003696      6845000000     push 0x45                               ; 'E'
0x0000369b      e990fbffff     jmp sym..plt
;-- imp.strcoll:
0x000036a0      ff252ac82100   jmp qword [reloc.strcoll]               ; [0x21fed0:8]=0x36a6
0x000036a6      6846000000     push 0x46                               ; 'F'
0x000036ab      e980fbffff     jmp sym..plt
;-- imp.mktime:
0x000036b0      ff2522c82100   jmp qword [reloc.mktime]                ; [0x21fed8:8]=0x36b6
0x000036b6      6847000000     push 0x47                               ; 'G'
0x000036bb      e970fbffff     jmp sym..plt
;-- imp.__freading:
0x000036c0      ff251ac82100   jmp qword [reloc.__freading]            ; [0x21fee0:8]=0x36c6
0x000036c6      6848000000     push 0x48                               ; 'H' ; "@"
0x000036cb      e960fbffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000036d0      ff2512c82100   jmp qword [reloc.fwrite_unlocked]       ; [0x21fee8:8]=0x36d6
0x000036d6      6849000000     push 0x49                               ; 'I'
0x000036db      e950fbffff     jmp sym..plt
;-- imp.realloc:
0x000036e0      ff250ac82100   jmp qword [reloc.realloc]               ; [0x21fef0:8]=0x36e6
0x000036e6      684a000000     push 0x4a                               ; 'J'
0x000036eb      e940fbffff     jmp sym..plt
;-- imp.stpncpy:
0x000036f0      ff2502c82100   jmp qword [reloc.stpncpy]               ; [0x21fef8:8]=0x36f6
0x000036f6      684b000000     push 0x4b                               ; 'K'
0x000036fb      e930fbffff     jmp sym..plt
;-- imp.setlocale:
0x00003700      ff25fac72100   jmp qword [reloc.setlocale]             ; [0x21ff00:8]=0x3706
0x00003706      684c000000     push 0x4c                               ; 'L'
0x0000370b      e920fbffff     jmp sym..plt
;-- imp.__printf_chk:
0x00003710      ff25f2c72100   jmp qword [reloc.__printf_chk]          ; [0x21ff08:8]=0x3716
0x00003716      684d000000     push 0x4d                               ; 'M'
0x0000371b      e910fbffff     jmp sym..plt
;-- imp.timegm:
0x00003720      ff25eac72100   jmp qword [reloc.timegm]                ; [0x21ff10:8]=0x3726 ; "&7"
0x00003726      684e000000     push 0x4e                               ; 'N'
0x0000372b      e900fbffff     jmp sym..plt
;-- imp.strftime:
0x00003730      ff25e2c72100   jmp qword [reloc.strftime]              ; [0x21ff18:8]=0x3736 ; "67"
0x00003736      684f000000     push 0x4f                               ; 'O'
0x0000373b      e9f0faffff     jmp sym..plt
;-- imp.mempcpy:
0x00003740      ff25dac72100   jmp qword [reloc.mempcpy]               ; [0x21ff20:8]=0x3746 ; "F7"
0x00003746      6850000000     push 0x50                               ; 'P' ; "@"
0x0000374b      e9e0faffff     jmp sym..plt
;-- imp.memmove:
0x00003750      ff25d2c72100   jmp qword [reloc.memmove]               ; [0x21ff28:8]=0x3756 ; "V7"
0x00003756      6851000000     push 0x51                               ; 'Q'
0x0000375b      e9d0faffff     jmp sym..plt
;-- imp.error:
0x00003760      ff25cac72100   jmp qword [reloc.error]                 ; [0x21ff30:8]=0x3766 ; "f7"
0x00003766      6852000000     push 0x52                               ; 'R'
0x0000376b      e9c0faffff     jmp sym..plt
;-- imp.fseeko:
0x00003770      ff25c2c72100   jmp qword [reloc.fseeko]                ; [0x21ff38:8]=0x3776 ; "v7"
0x00003776      6853000000     push 0x53                               ; 'S'
0x0000377b      e9b0faffff     jmp sym..plt
;-- imp.unsetenv:
0x00003780      ff25bac72100   jmp qword [reloc.unsetenv]              ; [0x21ff40:8]=0x3786
0x00003786      6854000000     push 0x54                               ; 'T'
0x0000378b      e9a0faffff     jmp sym..plt
;-- imp.strtoul:
0x00003790      ff25b2c72100   jmp qword [reloc.strtoul]               ; [0x21ff48:8]=0x3796
0x00003796      6855000000     push 0x55                               ; 'U'
0x0000379b      e990faffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000037a0      ff25aac72100   jmp qword [reloc.__cxa_atexit]          ; [0x21ff50:8]=0x37a6
0x000037a6      6856000000     push 0x56                               ; 'V'
0x000037ab      e980faffff     jmp sym..plt
;-- imp.wcstombs:
0x000037b0      ff25a2c72100   jmp qword [reloc.wcstombs]              ; [0x21ff58:8]=0x37b6
0x000037b6      6857000000     push 0x57                               ; 'W'
0x000037bb      e970faffff     jmp sym..plt
;-- imp.gethostname:
0x000037c0      ff259ac72100   jmp qword [reloc.gethostname]           ; [0x21ff60:8]=0x37c6
0x000037c6      6858000000     push 0x58                               ; 'X' ; "@"
0x000037cb      e960faffff     jmp sym..plt
;-- imp.sigismember:
0x000037d0      ff2592c72100   jmp qword [reloc.sigismember]           ; [0x21ff68:8]=0x37d6
0x000037d6      6859000000     push 0x59                               ; 'Y'
0x000037db      e950faffff     jmp sym..plt
;-- imp.exit:
0x000037e0      ff258ac72100   jmp qword [reloc.exit]                  ; [0x21ff70:8]=0x37e6
0x000037e6      685a000000     push 0x5a                               ; 'Z'
0x000037eb      e940faffff     jmp sym..plt
;-- imp.fwrite:
0x000037f0      ff2582c72100   jmp qword [reloc.fwrite]                ; [0x21ff78:8]=0x37f6
0x000037f6      685b000000     push 0x5b                               ; '['
0x000037fb      e930faffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00003800      ff257ac72100   jmp qword [reloc.__fprintf_chk]         ; [0x21ff80:8]=0x3806
0x00003806      685c000000     push 0x5c                               ; '\'
0x0000380b      e920faffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00003810      ff2572c72100   jmp qword [reloc.fflush_unlocked]       ; [0x21ff88:8]=0x3816
0x00003816      685d000000     push 0x5d                               ; ']'
0x0000381b      e910faffff     jmp sym..plt
;-- imp.mbsinit:
0x00003820      ff256ac72100   jmp qword [reloc.mbsinit]               ; [0x21ff90:8]=0x3826 ; "&8"
0x00003826      685e000000     push 0x5e                               ; '^'
0x0000382b      e900faffff     jmp sym..plt
;-- imp.iswprint:
0x00003830      ff2562c72100   jmp qword [reloc.iswprint]              ; [0x21ff98:8]=0x3836 ; "68"
0x00003836      685f000000     push 0x5f                               ; '_'
0x0000383b      e9f0f9ffff     jmp sym..plt
;-- imp.sigaddset:
0x00003840      ff255ac72100   jmp qword [reloc.sigaddset]             ; [0x21ffa0:8]=0x3846 ; "F8"
0x00003846      6860000000     push 0x60                               ; '`'
0x0000384b      e9e0f9ffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x00003850      ff2552c72100   jmp qword [reloc.__ctype_tolower_loc]   ; [0x21ffa8:8]=0x3856 ; "V8"
0x00003856      6861000000     push 0x61                               ; 'a'
0x0000385b      e9d0f9ffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00003860      ff254ac72100   jmp qword [reloc.__ctype_b_loc]         ; [0x21ffb0:8]=0x3866 ; "f8"
0x00003866      6862000000     push 0x62                               ; 'b'
0x0000386b      e9c0f9ffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00003870      ff2542c72100   jmp qword [reloc.__sprintf_chk]         ; [0x21ffb8:8]=0x3876 ; "v8"
0x00003876      6863000000     push 0x63                               ; 'c'
0x0000387b      e9b0f9ffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00003880      .qword 0x90660021c73a25ff                              ; [13] -r-x section size 24 named .plt.got
0x00003888      .qword 0x90660021c75225ff
0x00003890      .qword 0x90660021c75a25ff
0x00003898      0000           add byte [rax], al
0x0000389a      0000           add byte [rax], al
0x0000389c      0000           add byte [rax], al
0x0000389e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000038a0      4157           push r15                                ; [14] -r-x section size 75438 named .text
0x000038a2      4156           push r14
0x000038a4      4155           push r13
0x000038a6      4154           push r12
0x000038a8      55             push rbp
0x000038a9      53             push rbx
0x000038aa      89fd           mov ebp, edi
0x000038ac      4889f3         mov rbx, rsi
0x000038af      4883ec58       sub rsp, 0x58
0x000038b3      488b3e         mov rdi, qword [rsi]
0x000038b6      64488b042528.  mov rax, qword fs:[0x28]
0x000038bf      4889442448     mov qword [rsp + 0x48], rax
0x000038c4      31c0           xor eax, eax
0x000038c6      e885e70000     call sym.set_program_name
0x000038cb      488d35e13f01.  lea rsi, [0x000178b3]
0x000038d2      bf06000000     mov edi, 6
0x000038d7      e824feffff     call sym.imp.setlocale
0x000038dc      488d352c4101.  lea rsi, str.usr_local_share_locale     ; 0x17a0f ; "/usr/local/share/locale"
0x000038e3      488d3df04001.  lea rdi, [0x000179da]                   ; "coreutils"
0x000038ea      e8e1faffff     call sym.imp.bindtextdomain
0x000038ef      488d3de44001.  lea rdi, [0x000179da]                   ; "coreutils"
0x000038f6      e895faffff     call sym.imp.textdomain
0x000038fb      488d3d9e9200.  lea rdi, sym.close_stdout               ; 0xcba0 ; "USH\x83\xec\bH\x8b=\xdb6!"
0x00003902      c705ecc82100.  mov dword [obj.exit_failure], 2         ; [0x2201f8:4]=1
0x0000390c      e82f260100     call sym.atexit
0x00003911      48b800000000.  movabs rax, 0x8000000000000000
0x0000391b      c705ebd82100.  mov dword [obj.exit_status], 0          ; [0x221210:4]=0
0x00003925      c6058cd92100.  mov byte [obj.print_dir_name], 1        ; [0x2212b8:1]=0
0x0000392c      4889053dda21.  mov qword [obj.current_time], rax       ; [0x221370:8]=0
0x00003933      8b05a7c82100   mov eax, dword [obj.ls_mode]            ; [0x2201e0:4]=2
0x00003939      48c7053cda21.  mov qword [obj.pending_dirs], 0         ; [0x221380:8]=0
0x00003944      48c70529da21.  mov qword [0x00221378], 0xffffffffffffffff ; [0x221378:8]=0
0x0000394f      c60582d92100.  mov byte [obj.qmark_funny_chars], 0     ; [0x2212d8:1]=0
0x00003956      83f802         cmp eax, 2
0x00003959      0f84980d0000   je 0x46f7
0x0000395f      83f803         cmp eax, 3
0x00003962      740e           je 0x3972
0x00003964      83e801         sub eax, 1
0x00003967      0f84ed080000   je 0x425a
0x0000396d      e81ef9ffff     call sym.imp.abort
0x00003972      be07000000     mov esi, 7
0x00003977      31ff           xor edi, edi
0x00003979      c705b5d92100.  mov dword [obj.format], 0               ; [0x221338:4]=0
0x00003983      e8a8fc0000     call sym.set_quoting_style
0x00003988      488d3d984001.  lea rdi, str.QUOTING_STYLE              ; 0x17a27 ; "QUOTING_STYLE"
0x0000398f      c7059bd92100.  mov dword [obj.time_type], 0            ; [0x221334:4]=0
0x00003999      c7058dd92100.  mov dword [obj.sort_type], 0            ; [0x221330:4]=0
0x000039a3      c60585d92100.  mov byte [obj.sort_reverse], 0          ; [0x22132f:1]=0
0x000039aa      c6057cd92100.  mov byte [obj.numeric_ids], 0           ; [0x22132d:1]=0
0x000039b1      c60574d92100.  mov byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x000039b8      c70552d92100.  mov dword [obj.indicator_style], 0      ; [0x221314:4]=0
0x000039c2      c60533d92100.  mov byte [obj.print_inode], 0           ; [0x2212fc:1]=0
0x000039c9      c70525d92100.  mov dword [obj.dereference], 1          ; [0x2212f8:4]=0
0x000039d3      c6051cd92100.  mov byte [obj.recursive], 0             ; [0x2212f6:1]=0
0x000039da      c60514d92100.  mov byte [obj.immediate_dirs], 0        ; [0x2212f5:1]=0
0x000039e1      c70505d92100.  mov dword [obj.ignore_mode], 0          ; [0x2212f0:4]=0
0x000039eb      48c705f2d821.  mov qword [obj.ignore_patterns], 0      ; [0x2212e8:8]=0
0x000039f6      48c705dfd821.  mov qword [obj.hide_patterns], 0        ; [0x2212e0:8]=0
0x00003a01      c6055dd92100.  mov byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00003a08      e843f8ffff     call sym.imp.getenv
0x00003a0d      4885c0         test rax, rax
0x00003a10      4989c4         mov r12, rax
0x00003a13      7436           je 0x3a4b
0x00003a15      488d15a46d01.  lea rdx, obj.quoting_style_vals         ; 0x1a7c0
0x00003a1c      488d351dc021.  lea rsi, obj.quoting_style_args         ; 0x21fa40 ; "K}\x01"
0x00003a23      b904000000     mov ecx, 4
0x00003a28      4889c7         mov rdi, rax
0x00003a2b      e820870000     call sym.argmatch
0x00003a30      85c0           test eax, eax
0x00003a32      0f88da0c0000   js 0x4712
0x00003a38      488d15816d01.  lea rdx, obj.quoting_style_vals         ; 0x1a7c0
0x00003a3f      4898           cdqe
0x00003a41      31ff           xor edi, edi
0x00003a43      8b3482         mov esi, dword [rdx + rax*4]
0x00003a46      e8e5fb0000     call sym.set_quoting_style
0x00003a4b      488d3de33f01.  lea rdi, str.COLUMNS                    ; 0x17a35 ; "COLUMNS"
0x00003a52      48c70553d821.  mov qword [obj.line_length], 0x50       ; 'P'
                                                                       ; [0x2212b0:8]=0
0x00003a5d      e8eef7ffff     call sym.imp.getenv
0x00003a62      4885c0         test rax, rax
0x00003a65      4989c4         mov r12, rax
0x00003a68      7409           je 0x3a73
0x00003a6a      803800         cmp byte [rax], 0
0x00003a6d      0f85da0c0000   jne 0x474d
0x00003a73      4c8d642430     lea r12, [rsp + 0x30]
0x00003a78      31c0           xor eax, eax
0x00003a7a      be13540000     mov esi, 0x5413
0x00003a7f      bf01000000     mov edi, 1
0x00003a84      4c89e2         mov rdx, r12
0x00003a87      e884faffff     call sym.imp.ioctl
0x00003a8c      83f8ff         cmp eax, 0xffffffff
0x00003a8f      7411           je 0x3aa2
0x00003a91      0fb7442432     movzx eax, word [rsp + 0x32]
0x00003a96      6685c0         test ax, ax
0x00003a99      7407           je 0x3aa2
0x00003a9b      4889050ed821.  mov qword [obj.line_length], rax        ; [0x2212b0:8]=0
0x00003aa2      488d3d943f01.  lea rdi, str.TABSIZE                    ; 0x17a3d ; "TABSIZE"
0x00003aa9      e8a2f7ffff     call sym.imp.getenv
0x00003aae      4885c0         test rax, rax
0x00003ab1      4989c5         mov r13, rax
0x00003ab4      48c70501d821.  mov qword [obj.tabsize], 8              ; [0x2212c0:8]=0
0x00003abf      7426           je 0x3ae7
0x00003ac1      4531c0         xor r8d, r8d
0x00003ac4      31d2           xor edx, edx
0x00003ac6      31f6           xor esi, esi
0x00003ac8      4c89e1         mov rcx, r12
0x00003acb      4889c7         mov rdi, rax
0x00003ace      e88d0f0100     call sym.xstrtoul
0x00003ad3      85c0           test eax, eax
0x00003ad5      0f8532110000   jne 0x4c0d
0x00003adb      488b442430     mov rax, qword [rsp + 0x30]
0x00003ae0      488905d9d721.  mov qword [obj.tabsize], rax            ; [0x2212c0:8]=0
0x00003ae7      4c8d2d8a2601.  lea r13, [0x00016178]
0x00003aee      c644241000     mov byte [rsp + 0x10], 0
0x00003af3      c644240800     mov byte [rsp + 8], 0
0x00003af8      4531f6         xor r14d, r14d
0x00003afb      41bf01000000   mov r15d, 1
0x00003b01      0f1f80000000.  nop dword [rax]
0x00003b08      488d0d31b821.  lea rcx, obj.long_options               ; 0x21f340
0x00003b0f      488d15c26201.  lea rdx, str.abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1 ; 0x19dd8 ; "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1"
0x00003b16      4d89e0         mov r8, r12
0x00003b19      4889de         mov rsi, rbx
0x00003b1c      89ef           mov edi, ebp
0x00003b1e      c7442430ffff.  mov dword [rsp + 0x30], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00003b26      e805f9ffff     call sym.imp.getopt_long
0x00003b2b      83f8ff         cmp eax, 0xffffffff
0x00003b2e      0f8487070000   je 0x42bb
0x00003b34      0583000000     add eax, 0x83
0x00003b39      3d13010000     cmp eax, 0x113
0x00003b3e      0f8773150000   ja 0x50b7
0x00003b44      4963448500     movsxd rax, dword [r13 + rax*4]
0x00003b49      4c01e8         add rax, r13
0x00003b4c      ffe0           jmp rax
0x00003b4e      44883dd8d721.  mov byte [obj.numeric_ids], r15b        ; [0x22132d:1]=0
0x00003b55      c705d9d72100.  mov dword [obj.format], 0               ; [0x221338:4]=0
0x00003b5f      eba7           jmp 0x3b08
0x00003b61      c644241001     mov byte [rsp + 0x10], 1
0x00003b66      eba0           jmp 0x3b08
0x00003b68      44883d8dd721.  mov byte [obj.print_inode], r15b        ; [0x2212fc:1]=0
0x00003b6f      eb97           jmp 0x3b08
0x00003b71      c705add72100.  mov dword [obj.human_output_opts], 0xb0 ; [0x221328:4]=0
0x00003b7b      c70597d72100.  mov dword [obj.file_human_output_opts], 0xb0 ; [0x22131c:4]=0
0x00003b85      48c70590d721.  mov qword [obj.output_block_size], 1    ; [0x221320:8]=0
0x00003b90      48c7057dc421.  mov qword [obj.file_output_block_size], 1 ; [0x220018:8]=1
0x00003b9b      e968ffffff     jmp 0x3b08
0x00003ba0      c7058ed72100.  mov dword [obj.format], 0               ; [0x221338:4]=0
0x00003baa      c60570c42100.  mov byte [obj.print_owner], 0           ; [0x220021:1]=1
0x00003bb1      e952ffffff     jmp 0x3b08
0x00003bb6      833d7bd72100.  cmp dword [obj.format], 0               ; [0x221338:4]=0
0x00003bbd      c70529d72100.  mov dword [obj.ignore_mode], 2          ; [0x2212f0:4]=0
0x00003bc7      c7055fd72100.  mov dword [obj.sort_type], 0xffffffff   ; [0x221330:4]=0
0x00003bd1      0f8424110000   je 0x4cfb
0x00003bd7      c6054ed72100.  mov byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x00003bde      c6052dd72100.  mov byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00003be5      c60525d72100.  mov byte [obj.print_hyperlink], 0       ; [0x221311:1]=0
0x00003bec      c644240801     mov byte [rsp + 8], 1
0x00003bf1      e912ffffff     jmp 0x3b08
0x00003bf6      44883df8d621.  mov byte [obj.immediate_dirs], r15b     ; [0x2212f5:1]=0
0x00003bfd      e906ffffff     jmp 0x3b08
0x00003c02      c70528d72100.  mov dword [obj.time_type], 1            ; [0x221334:4]=0
0x00003c0c      e9f7feffff     jmp 0x3b08
0x00003c11      be07000000     mov esi, 7
0x00003c16      31ff           xor edi, edi
0x00003c18      e813fa0000     call sym.set_quoting_style
0x00003c1d      e9e6feffff     jmp 0x3b08
0x00003c22      c705c4d62100.  mov dword [obj.ignore_mode], 2          ; [0x2212f0:4]=0
0x00003c2c      e9d7feffff     jmp 0x3b08
0x00003c31      44883d2dd721.  mov byte [obj.print_scontext], r15b     ; [0x221365:1]=0
0x00003c38      e9cbfeffff     jmp 0x3b08
0x00003c3d      c705e9d62100.  mov dword [obj.sort_type], 1            ; [0x221330:4]=0
0x00003c47      c644240801     mov byte [rsp + 8], 1
0x00003c4c      e9b7feffff     jmp 0x3b08
0x00003c51      c705d5d62100.  mov dword [obj.sort_type], 0xffffffff   ; [0x221330:4]=0
0x00003c5b      c644240801     mov byte [rsp + 8], 1
0x00003c60      e9a3feffff     jmp 0x3b08
0x00003c65      488d35f73d01.  lea rsi, str.invalid_tab_size           ; 0x17a63 ; "invalid tab size"
0x00003c6c      ba05000000     mov edx, 5
0x00003c71      31ff           xor edi, edi
0x00003c73      e868f7ffff     call sym.imp.dcgettext
0x00003c78      4883ec08       sub rsp, 8
0x00003c7c      488b3d15c621.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003c83      4c8d05293c01.  lea r8, [0x000178b3]
0x00003c8a      6a02           push 2
0x00003c8c      31d2           xor edx, edx
0x00003c8e      4989c1         mov r9, rax
0x00003c91      4883c9ff       or rcx, 0xffffffffffffffff
0x00003c95      31f6           xor esi, esi
0x00003c97      e8840b0100     call sym.xnumtoumax
0x00003c9c      4889051dd621.  mov qword [obj.tabsize], rax            ; [0x2212c0:8]=0
0x00003ca3      58             pop rax
0x00003ca4      5a             pop rdx
0x00003ca5      e95efeffff     jmp 0x3b08
0x00003caa      c7057cd62100.  mov dword [obj.sort_type], 2            ; [0x221330:4]=0
0x00003cb4      c644240801     mov byte [rsp + 8], 1
0x00003cb9      e94afeffff     jmp 0x3b08
0x00003cbe      44883d31d621.  mov byte [obj.recursive], r15b          ; [0x2212f6:1]=0
0x00003cc5      e93efeffff     jmp 0x3b08
0x00003cca      be05000000     mov esi, 5
0x00003ccf      31ff           xor edi, edi
0x00003cd1      e85af90000     call sym.set_quoting_style
0x00003cd6      e92dfeffff     jmp 0x3b08
0x00003cdb      31f6           xor esi, esi
0x00003cdd      31ff           xor edi, edi
0x00003cdf      e84cf90000     call sym.set_quoting_style
0x00003ce4      e91ffeffff     jmp 0x3b08
0x00003ce9      c70505d62100.  mov dword [obj.dereference], 5          ; [0x2212f8:4]=0
0x00003cf3      e910feffff     jmp 0x3b08
0x00003cf8      488b1599c521.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003cff      bf10000000     mov edi, 0x10
0x00003d04      4889542418     mov qword [rsp + 0x18], rdx
0x00003d09      e882080100     call sym.xmalloc
0x00003d0e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003d13      488910         mov qword [rax], rdx
0x00003d16      488b15cbd521.  mov rdx, qword [obj.ignore_patterns]    ; [0x2212e8:8]=0
0x00003d1d      48895008       mov qword [rax + 8], rdx
0x00003d21      488905c0d521.  mov qword [obj.ignore_patterns], rax    ; [0x2212e8:8]=0
0x00003d28      e9dbfdffff     jmp 0x3b08
0x00003d2d      c705c1d52100.  mov dword [obj.dereference], 3          ; [0x2212f8:4]=0
0x00003d37      e9ccfdffff     jmp 0x3b08
0x00003d3c      c605ddc22100.  mov byte [obj.print_group], 0           ; [0x220020:1]=1
0x00003d43      e9c0fdffff     jmp 0x3b08
0x00003d48      c705c2d52100.  mov dword [obj.indicator_style], 3      ; [0x221314:4]=0
0x00003d52      e9b1fdffff     jmp 0x3b08
0x00003d57      44883dbad521.  mov byte [obj.dired], r15b              ; [0x221318:1]=0
0x00003d5e      e9a5fdffff     jmp 0x3b08
0x00003d63      c705cbd52100.  mov dword [obj.format], 2               ; [0x221338:4]=0
0x00003d6d      e996fdffff     jmp 0x3b08
0x00003d72      bf10000000     mov edi, 0x10
0x00003d77      e814080100     call sym.xmalloc
0x00003d7c      488b1565d521.  mov rdx, qword [obj.ignore_patterns]    ; [0x2212e8:8]=0
0x00003d83      488d35d63c01.  lea rsi, [0x00017a60]                   ; "*~"
0x00003d8a      bf10000000     mov edi, 0x10
0x00003d8f      48890552d521.  mov qword [obj.ignore_patterns], rax    ; [0x2212e8:8]=0
0x00003d96      488930         mov qword [rax], rsi
0x00003d99      48895008       mov qword [rax + 8], rdx
0x00003d9d      e8ee070100     call sym.xmalloc
0x00003da2      488b153fd521.  mov rdx, qword [obj.ignore_patterns]    ; [0x2212e8:8]=0
0x00003da9      488d35af3c01.  lea rsi, [0x00017a5f]                   ; ".*~"
0x00003db0      488930         mov qword [rax], rsi
0x00003db3      48895008       mov qword [rax + 8], rdx
0x00003db7      4889052ad521.  mov qword [obj.ignore_patterns], rax    ; [0x2212e8:8]=0
0x00003dbe      e945fdffff     jmp 0x3b08
0x00003dc3      c70523d52100.  mov dword [obj.ignore_mode], 1          ; [0x2212f0:4]=0
0x00003dcd      e936fdffff     jmp 0x3b08
0x00003dd2      833d5fd52100.  cmp dword [obj.format], 0               ; [0x221338:4]=0
0x00003dd9      0f8429fdffff   je 0x3b08
0x00003ddf      c7054fd52100.  mov dword [obj.format], 1               ; [0x221338:4]=0
0x00003de9      e91afdffff     jmp 0x3b08
0x00003dee      8b05ecc32100   mov eax, dword [obj.ls_mode]            ; [0x2201e0:4]=2
0x00003df4      488b0dedc321.  mov rcx, qword [obj.Version]            ; [0x2201e8:8]=0x19f30 str.8.31 ; "0\x9f\x01"
0x00003dfb      488d35df3b01.  lea rsi, [0x000179e1]                   ; "ls"
0x00003e02      83f801         cmp eax, 1
0x00003e05      7415           je 0x3e1c
0x00003e07      83f802         cmp eax, 2
0x00003e0a      488d354c3b01.  lea rsi, str.vdir                       ; 0x1795d ; "vdir"
0x00003e11      488d05463b01.  lea rax, [0x0001795e]                   ; "dir"
0x00003e18      480f44f0       cmove rsi, rax
0x00003e1c      4883ec08       sub rsp, 8
0x00003e20      488b3d61c421.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00003e27      4c8d0d933c01.  lea r9, str.David_MacKenzie             ; 0x17ac1 ; "David MacKenzie"
0x00003e2e      6a00           push 0
0x00003e30      4c8d059a3c01.  lea r8, str.Richard_M._Stallman         ; 0x17ad1 ; "Richard M. Stallman"
0x00003e37      488d15983b01.  lea rdx, str.GNU_coreutils              ; 0x179d6 ; "GNU coreutils"
0x00003e3e      31c0           xor eax, eax
0x00003e40      e8eb050100     call sym.version_etc
0x00003e45      31ff           xor edi, edi
0x00003e47      e894f9ffff     call sym.imp.exit
0x00003e4c      4c8b3545c421.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003e53      e9b0fcffff     jmp 0x3b08
0x00003e58      4c8b0d91c321.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00003e5f      488b3532c421.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003e66      488d1513b421.  lea rdx, obj.time_args                  ; 0x21f280
0x00003e6d      488d0d7c2801.  lea rcx, obj.time_types                 ; 0x166f0
0x00003e74      488d3d003c01.  lea rdi, str.time                       ; 0x17a7b ; "--time"
0x00003e7b      41b804000000   mov r8d, 4
0x00003e81      e88a850000     call sym.__xargmatch_internal
0x00003e86      488d15632801.  lea rdx, obj.time_types                 ; 0x166f0
0x00003e8d      8b0482         mov eax, dword [rdx + rax*4]
0x00003e90      89059ed42100   mov dword [obj.time_type], eax          ; [0x221334:4]=0
0x00003e96      e96dfcffff     jmp 0x3b08
0x00003e9b      4c8b0d4ec321.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00003ea2      488b35efc321.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003ea9      488d1510b421.  lea rdx, obj.sort_args                  ; 0x21f2c0
0x00003eb0      488d0d592801.  lea rcx, obj.sort_types                 ; 0x16710
0x00003eb7      488d3db63b01.  lea rdi, str.sort                       ; 0x17a74 ; "--sort"
0x00003ebe      41b804000000   mov r8d, 4
0x00003ec4      e847850000     call sym.__xargmatch_internal
0x00003ec9      488d15402801.  lea rdx, obj.sort_types                 ; 0x16710
0x00003ed0      c644240801     mov byte [rsp + 8], 1
0x00003ed5      8b0482         mov eax, dword [rdx + rax*4]
0x00003ed8      890552d42100   mov dword [obj.sort_type], eax          ; [0x221330:4]=0
0x00003ede      e925fcffff     jmp 0x3b08
0x00003ee3      c7053bd42100.  mov dword [obj.human_output_opts], 0x90 ; [0x221328:4]=0
0x00003eed      c70525d42100.  mov dword [obj.file_human_output_opts], 0x90 ; [0x22131c:4]=0
0x00003ef7      48c7051ed421.  mov qword [obj.output_block_size], 1    ; [0x221320:8]=0
0x00003f02      48c7050bc121.  mov qword [obj.file_output_block_size], 1 ; [0x220018:8]=1
0x00003f0d      e9f6fbffff     jmp 0x3b08
0x00003f12      c605bfd32100.  mov byte [obj.qmark_funny_chars], 0     ; [0x2212d8:1]=0
0x00003f19      e9eafbffff     jmp 0x3b08
0x00003f1e      4c8b0dcbc221.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00003f25      488b356cc321.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003f2c      488d0d8d6801.  lea rcx, obj.quoting_style_vals         ; 0x1a7c0
0x00003f33      488d1506bb21.  lea rdx, obj.quoting_style_args         ; 0x21fa40 ; "K}\x01"
0x00003f3a      488d3d703b01.  lea rdi, str.quoting_style              ; 0x17ab1 ; "--quoting-style"
0x00003f41      41b804000000   mov r8d, 4
0x00003f47      e8c4840000     call sym.__xargmatch_internal
0x00003f4c      488d156d6801.  lea rdx, obj.quoting_style_vals         ; 0x1a7c0
0x00003f53      31ff           xor edi, edi
0x00003f55      8b3482         mov esi, dword [rdx + rax*4]
0x00003f58      e8d3f60000     call sym.set_quoting_style
0x00003f5d      e9a6fbffff     jmp 0x3b08
0x00003f62      4c8b0d87c221.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00003f69      488b3528c321.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003f70      488d1529ba21.  lea rdx, obj.indicator_style_args       ; 0x21f9a0
0x00003f77      488d0dd22701.  lea rcx, obj.indicator_style_types      ; 0x16750
0x00003f7e      488d3d1a3b01.  lea rdi, str.indicator_style            ; 0x17a9f ; "--indicator-style"
0x00003f85      41b804000000   mov r8d, 4
0x00003f8b      e880840000     call sym.__xargmatch_internal
0x00003f90      488d15b92701.  lea rdx, obj.indicator_style_types      ; 0x16750
0x00003f97      8b0482         mov eax, dword [rdx + rax*4]
0x00003f9a      890574d32100   mov dword [obj.indicator_style], eax    ; [0x221314:4]=0
0x00003fa0      e963fbffff     jmp 0x3b08
0x00003fa5      488b35ecc221.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00003fac      4885f6         test rsi, rsi
0x00003faf      0f84ef020000   je 0x42a4
0x00003fb5      4c8b0d34c221.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00003fbc      488d155db221.  lea rdx, obj.when_args                  ; 0x21f220 ; "L\xa3\x01"
0x00003fc3      488d0df62601.  lea rcx, obj.when_types                 ; 0x166c0
0x00003fca      488d3dc23a01.  lea rdi, str.hyperlink                  ; 0x17a93 ; "--hyperlink"
0x00003fd1      41b804000000   mov r8d, 4
0x00003fd7      e834840000     call sym.__xargmatch_internal
0x00003fdc      488d15dd2601.  lea rdx, obj.when_types                 ; 0x166c0
0x00003fe3      8b1482         mov edx, dword [rdx + rax*4]
0x00003fe6      83fa01         cmp edx, 1
0x00003fe9      0f84b5020000   je 0x42a4
0x00003fef      31c0           xor eax, eax
0x00003ff1      83fa02         cmp edx, 2
0x00003ff4      0f85af020000   jne 0x42a9
0x00003ffa      bf01000000     mov edi, 1
0x00003fff      e8fcf2ffff     call sym.imp.isatty
0x00004004      85c0           test eax, eax
0x00004006      0f95c0         setne al
0x00004009      0fb6c0         movzx eax, al
0x0000400c      e998020000     jmp 0x42a9
0x00004011      bf10000000     mov edi, 0x10
0x00004016      e875050100     call sym.xmalloc
0x0000401b      488b1576c221.  mov rdx, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00004022      488910         mov qword [rax], rdx
0x00004025      488b15b4d221.  mov rdx, qword [obj.hide_patterns]      ; [0x2212e0:8]=0
0x0000402c      488905add221.  mov qword [obj.hide_patterns], rax      ; [0x2212e0:8]=0
0x00004033      48895008       mov qword [rax + 8], rdx
0x00004037      e9ccfaffff     jmp 0x3b08
0x0000403c      44883db1d221.  mov byte [obj.directories_first], r15b  ; [0x2212f4:1]=0
0x00004043      e9c0faffff     jmp 0x3b08
0x00004048      c705e6d22100.  mov dword [obj.format], 0               ; [0x221338:4]=0
0x00004052      4c8d35aa3901.  lea r14, str.full_iso                   ; 0x17a03 ; "full-iso"
0x00004059      e9aafaffff     jmp 0x3b08
0x0000405e      4c8b0d8bc121.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x00004065      488b352cc221.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x0000406c      488d158db221.  lea rdx, obj.format_args                ; 0x21f300 ; "(|\x01"
0x00004073      488d0db62601.  lea rcx, obj.format_types               ; 0x16730
0x0000407a      488d3d013a01.  lea rdi, str.format                     ; 0x17a82 ; "--format"
0x00004081      41b804000000   mov r8d, 4
0x00004087      e884830000     call sym.__xargmatch_internal
0x0000408c      488d159d2601.  lea rdx, obj.format_types               ; 0x16730
0x00004093      8b0482         mov eax, dword [rdx + rax*4]
0x00004096      89059cd22100   mov dword [obj.format], eax             ; [0x221338:4]=0
0x0000409c      e967faffff     jmp 0x3b08
0x000040a1      c70569d22100.  mov dword [obj.indicator_style], 2      ; [0x221314:4]=0
0x000040ab      e958faffff     jmp 0x3b08
0x000040b0      c7053ed22100.  mov dword [obj.dereference], 4          ; [0x2212f8:4]=0
0x000040ba      e949faffff     jmp 0x3b08
0x000040bf      488b35d2c121.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x000040c6      4885f6         test rsi, rsi
0x000040c9      0f84be010000   je 0x428d
0x000040cf      4c8b0d1ac121.  mov r9, qword [obj.argmatch_die]        ; [0x2201f0:8]=0xc140 sym.__argmatch_die ; "@\xc1"
0x000040d6      488d1543b121.  lea rdx, obj.when_args                  ; 0x21f220 ; "L\xa3\x01"
0x000040dd      488d0ddc2501.  lea rcx, obj.when_types                 ; 0x166c0
0x000040e4      488d3da03901.  lea rdi, str.color                      ; 0x17a8b ; "--color"
0x000040eb      41b804000000   mov r8d, 4
0x000040f1      e81a830000     call sym.__xargmatch_internal
0x000040f6      488d15c32501.  lea rdx, obj.when_types                 ; 0x166c0
0x000040fd      8b0482         mov eax, dword [rdx + rax*4]
0x00004100      83f801         cmp eax, 1
0x00004103      0f8484010000   je 0x428d
0x00004109      83f802         cmp eax, 2
0x0000410c      0f8469010000   je 0x427b
0x00004112      c605f9d12100.  mov byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004119      e9eaf9ffff     jmp 0x3b08
0x0000411e      488b3d73c121.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x00004125      488d15f4d121.  lea rdx, obj.output_block_size          ; 0x221320
0x0000412c      488d35f5d121.  lea rsi, obj.human_output_opts          ; 0x221328
0x00004133      e898b40000     call sym.human_options
0x00004138      85c0           test eax, eax
0x0000413a      0f8504110000   jne 0x5244
0x00004140      8b05e2d12100   mov eax, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x00004146      8905d0d12100   mov dword [obj.file_human_output_opts], eax ; [0x22131c:4]=0
0x0000414c      488b05cdd121.  mov rax, qword [obj.output_block_size]  ; [0x221320:8]=0
0x00004153      488905bebe21.  mov qword [obj.file_output_block_size], rax ; [0x220018:8]=1
0x0000415a      e9a9f9ffff     jmp 0x3b08
0x0000415f      c705c7d12100.  mov dword [obj.sort_type], 4            ; [0x221330:4]=0
0x00004169      c644240801     mov byte [rsp + 8], 1
0x0000416e      e995f9ffff     jmp 0x3b08
0x00004173      44883db2d121.  mov byte [obj.print_block_size], r15b   ; [0x22132c:1]=0
0x0000417a      e989f9ffff     jmp 0x3b08
0x0000417f      44883da9d121.  mov byte [obj.sort_reverse], r15b       ; [0x22132f:1]=0
0x00004186      e97df9ffff     jmp 0x3b08
0x0000418b      44883d46d121.  mov byte [obj.qmark_funny_chars], r15b  ; [0x2212d8:1]=0
0x00004192      e971f9ffff     jmp 0x3b08
0x00004197      c70573d12100.  mov dword [obj.indicator_style], 1      ; [0x221314:4]=0
0x000041a1      e962f9ffff     jmp 0x3b08
0x000041a6      c70588d12100.  mov dword [obj.format], 0               ; [0x221338:4]=0
0x000041b0      c60569be2100.  mov byte [obj.print_group], 0           ; [0x220020:1]=1
0x000041b7      e94cf9ffff     jmp 0x3b08
0x000041bc      c70572d12100.  mov dword [obj.format], 4               ; [0x221338:4]=0
0x000041c6      e93df9ffff     jmp 0x3b08
0x000041cb      c70563d12100.  mov dword [obj.format], 3               ; [0x221338:4]=0
0x000041d5      e92ef9ffff     jmp 0x3b08
0x000041da      488b3db7c021.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x000041e1      e8ea140000     call sym.set_line_length
0x000041e6      84c0           test al, al
0x000041e8      0f851af9ffff   jne 0x3b08
0x000041ee      488b3da3c021.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x000041f5      e866fb0000     call sym.quote
0x000041fa      488d35443801.  lea rsi, str.invalid_line_width         ; 0x17a45 ; "invalid line width"
0x00004201      ba05000000     mov edx, 5
0x00004206      31ff           xor edi, edi
0x00004208      4889c3         mov rbx, rax
0x0000420b      e8d0f1ffff     call sym.imp.dcgettext
0x00004210      488d15413801.  lea rdx, str.s:__s                      ; 0x17a58 ; "%s: %s"
0x00004217      4889c1         mov rcx, rax
0x0000421a      4989d8         mov r8, rbx
0x0000421d      31f6           xor esi, esi
0x0000421f      bf02000000     mov edi, 2
0x00004224      31c0           xor eax, eax
0x00004226      e835f5ffff     call sym.imp.error
0x0000422b      c705fbd02100.  mov dword [obj.sort_type], 3            ; [0x221330:4]=0
0x00004235      c644240801     mov byte [rsp + 8], 1
0x0000423a      e9c9f8ffff     jmp 0x3b08
0x0000423f      c705ebd02100.  mov dword [obj.time_type], 2            ; [0x221334:4]=0
0x00004249      e9baf8ffff     jmp 0x3b08
0x0000424e      44883dd9d021.  mov byte [obj.print_author], r15b       ; [0x22132e:1]=0
0x00004255      e9aef8ffff     jmp 0x3b08
0x0000425a      bf01000000     mov edi, 1
0x0000425f      e89cf0ffff     call sym.imp.isatty
0x00004264      85c0           test eax, eax
0x00004266      0f85c30a0000   jne 0x4d2f
0x0000426c      c705c2d02100.  mov dword [obj.format], 1               ; [0x221338:4]=0
0x00004276      e90df7ffff     jmp 0x3988
0x0000427b      bf01000000     mov edi, 1
0x00004280      e87bf0ffff     call sym.imp.isatty
0x00004285      85c0           test eax, eax
0x00004287      0f8485feffff   je 0x4112
0x0000428d      44883d7ed021.  mov byte [obj.print_with_color], r15b   ; [0x221312:1]=0
0x00004294      48c70521d021.  mov qword [obj.tabsize], 0              ; [0x2212c0:8]=0
0x0000429f      e964f8ffff     jmp 0x3b08
0x000042a4      b801000000     mov eax, 1
0x000042a9      880562d02100   mov byte [obj.print_hyperlink], al      ; [0x221311:1]=0
0x000042af      80255bd02100.  and byte [obj.print_hyperlink], 1       ; [0x221311:1]=0
0x000042b6      e94df8ffff     jmp 0x3b08
0x000042bb      48833d5dd021.  cmp qword [obj.output_block_size], 0    ; [0x221320:8]=0
0x000042c3      0f8422060000   je 0x48eb
0x000042c9      488b05e0cf21.  mov rax, qword [obj.line_length]        ; [0x2212b0:8]=0
0x000042d0      b903000000     mov ecx, 3
0x000042d5      31d2           xor edx, edx
0x000042d7      48f7f1         div rcx
0x000042da      4885d2         test rdx, rdx
0x000042dd      0f95c2         setne dl
0x000042e0      31ff           xor edi, edi
0x000042e2      0fb6d2         movzx edx, dl
0x000042e5      4801d0         add rax, rdx
0x000042e8      48890511cf21.  mov qword [obj.max_idx], rax            ; [0x221200:8]=0
0x000042ef      e81cf30000     call sym.get_quoting_style
0x000042f4      8b153ed02100   mov edx, dword [obj.format]             ; [0x221338:4]=0
0x000042fa      4189c5         mov r13d, eax
0x000042fd      83fa04         cmp edx, 4
0x00004300      0f8440040000   je 0x4746
0x00004306      83fa01         cmp edx, 1
0x00004309      0f8437040000   je 0x4746
0x0000430f      48833d99cf21.  cmp qword [obj.line_length], 0          ; [0x2212b0:8]=0
0x00004317      7506           jne 0x431f
0x00004319      31c0           xor eax, eax
0x0000431b      85d2           test edx, edx
0x0000431d      7518           jne 0x4337
0x0000431f      4489e8         mov eax, r13d
0x00004322      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00004325      83e801         sub eax, 1
0x00004328      0f94c0         sete al
0x0000432b      4183fd06       cmp r13d, 6
0x0000432f      0f94c2         sete dl
0x00004332      09d0           or eax, edx
0x00004334      0fb6c0         movzx eax, al
0x00004337      31ff           xor edi, edi
0x00004339      880569d02100   mov byte [obj.align_variable_outer_quotes], al ; [0x2213a8:1]=0
0x0000433f      802562d02100.  and byte [obj.align_variable_outer_quotes], 1 ; [0x2213a8:1]=0
0x00004346      e885f20000     call sym.clone_quoting_options
0x0000434b      4183fd07       cmp r13d, 7
0x0000434f      4889057acf21.  mov qword [obj.filename_quoting_options], rax ; [0x2212d0:8]=0
0x00004356      0f84bc090000   je 0x4d18
0x0000435c      8b05b2cf2100   mov eax, dword [obj.indicator_style]    ; [0x221314:4]=0
0x00004362      83f801         cmp eax, 1
0x00004365      7638           jbe 0x439f
0x00004367      488d15853701.  lea rdx, str.                           ; 0x17af3 ; "*=>@|"
0x0000436e      83e802         sub eax, 2
0x00004371      0fbe3402       movsx esi, byte [rdx + rax]
0x00004375      4c8d2c10       lea r13, [rax + rdx]
0x00004379      4084f6         test sil, sil
0x0000437c      7421           je 0x439f
0x0000437e      6690           nop
0x00004380      488b3d49cf21.  mov rdi, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x00004387      4983c501       add r13, 1
0x0000438b      ba01000000     mov edx, 1
0x00004390      e8bbf20000     call sym.set_char_quoting
0x00004395      410fbe7500     movsx esi, byte [r13]
0x0000439a      4084f6         test sil, sil
0x0000439d      75e1           jne 0x4380
0x0000439f      31ff           xor edi, edi
0x000043a1      e82af20000     call sym.clone_quoting_options
0x000043a6      ba01000000     mov edx, 1
0x000043ab      be3a000000     mov esi, 0x3a                           ; ':'
0x000043b0      4889c7         mov rdi, rax
0x000043b3      4889050ecf21.  mov qword [obj.dirname_quoting_options], rax ; [0x2212c8:8]=0
0x000043ba      e891f20000     call sym.set_char_quoting
0x000043bf      803d52cf2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x000043c6      7414           je 0x43dc
0x000043c8      833d69cf2100.  cmp dword [obj.format], 0               ; [0x221338:4]=0
0x000043cf      0f84bb040000   je 0x4890
0x000043d5      c6053ccf2100.  mov byte [obj.dired], 0                 ; [0x221318:1]=0
0x000043dc      8b0552cf2100   mov eax, dword [obj.time_type]          ; [0x221334:4]=0
0x000043e2      8b1550cf2100   mov edx, dword [obj.format]             ; [0x221338:4]=0
0x000043e8      83e801         sub eax, 1
0x000043eb      83f801         cmp eax, 1
0x000043ee      770b           ja 0x43fb
0x000043f0      807c240800     cmp byte [rsp + 8], 0
0x000043f5      0f8456090000   je 0x4d51
0x000043fb      85d2           test edx, edx
0x000043fd      7543           jne 0x4442
0x000043ff      4d85f6         test r14, r14
0x00004402      0f847d090000   je 0x4d85
0x00004408      4c8d2da42201.  lea r13, obj.posix_prefix.10077         ; 0x166b3 ; "posix-"
0x0000440f      eb0b           jmp 0x441c
0x00004411      0f1f80000000.  nop dword [rax]
0x00004418      4983c606       add r14, 6
0x0000441c      ba06000000     mov edx, 6
0x00004421      4c89ee         mov rsi, r13
0x00004424      4c89f7         mov rdi, r14
0x00004427      e884eeffff     call sym.imp.strncmp
0x0000442c      85c0           test eax, eax
0x0000442e      0f852d080000   jne 0x4c61
0x00004434      bf02000000     mov edi, 2
0x00004439      e8a2920000     call sym.hard_locale
0x0000443e      84c0           test al, al
0x00004440      75d6           jne 0x4418
0x00004442      803dc9ce2100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004449      4c632d40be21.  movsxd r13, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x220290:4]=0
0x00004450      0f857b060000   jne 0x4ad1
0x00004456      803d97ce2100.  cmp byte [obj.directories_first], 0     ; [0x2212f4:1]=0
0x0000445d      7407           je 0x4466
0x0000445f      c60597ce2100.  mov byte [obj.check_symlink_mode], 1    ; [0x2212fd:1]=0
0x00004466      833d8bce2100.  cmp dword [obj.dereference], 1          ; [0x2212f8:4]=0
0x0000446d      0f8447040000   je 0x48ba
0x00004473      803d7cce2100.  cmp byte [obj.recursive], 0             ; [0x2212f6:1]=0
0x0000447a      744f           je 0x44cb
0x0000447c      4c8d054d0f00.  lea r8, sym.dev_ino_free                ; 0x53d0
0x00004483      488d0d060f00.  lea rcx, sym.dev_ino_compare            ; 0x5390 ; "1\xc0H\x8b\x16H9\x17t\x06\xf3\xc3\x0f\x1f@"
0x0000448a      488d15ef0e00.  lea rdx, sym.dev_ino_hash               ; 0x5380 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00004491      31f6           xor esi, esi
0x00004493      bf1e000000     mov edi, 0x1e
0x00004498      e8139b0000     call sym.hash_initialize
0x0000449d      4885c0         test rax, rax
0x000044a0      48890521cf21.  mov qword [obj.active_dir_set], rax     ; [0x2213c8:8]=0
0x000044a7      0f84b70d0000   je 0x5264
0x000044ad      4c8b050cbb21.  mov r8, qword [reloc.free]              ; [0x21ffc0:8]=0
0x000044b4      488b0d25bb21.  mov rcx, qword [reloc.malloc]           ; [0x21ffe0:8]=0
0x000044bb      488d3d1ecc21.  lea rdi, obj.dev_ino_obstack            ; 0x2210e0
0x000044c2      31d2           xor edx, edx
0x000044c4      31f6           xor esi, esi
0x000044c6      e825100100     call sym._obstack_begin
0x000044cb      488d3dea3601.  lea rdi, [0x00017bbc]                   ; "TZ"
0x000044d2      e879edffff     call sym.imp.getenv
0x000044d7      4889c7         mov rdi, rax
0x000044da      e8e1120100     call sym.tzalloc
0x000044df      488905c2cd21.  mov qword [obj.localtz], rax            ; [0x2212a8:8]=0
0x000044e6      8b0544ce2100   mov eax, dword [obj.sort_type]          ; [0x221330:4]=0
0x000044ec      83e802         sub eax, 2
0x000044ef      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x000044f2      740d           je 0x4501
0x000044f4      833d3dce2100.  cmp dword [obj.format], 0               ; [0x221338:4]=0
0x000044fb      0f8536030000   jne 0x4837
0x00004501      c60599cd2100.  mov byte [obj.format_needs_stat], 1     ; [0x2212a1:1]=0
0x00004508      31c0           xor eax, eax
0x0000450a      880590cd2100   mov byte [obj.format_needs_type], al    ; [0x2212a0:1]=0
0x00004510      802589cd2100.  and byte [obj.format_needs_type], 1     ; [0x2212a0:1]=0
0x00004517      803dfacd2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x0000451e      0f85b0040000   jne 0x49d4
0x00004524      803de6cd2100.  cmp byte [obj.print_hyperlink], 0       ; [0x221311:1]=0
0x0000452b      0f8527040000   jne 0x4958
0x00004531      4189ee         mov r14d, ebp
0x00004534      bf204e0000     mov edi, 0x4e20                         ; ' N' ; "D$0H\x89\$\x10H\x8bD$(\x0f\xb6\x10\x80\xfa*\x0f\x84\x88\x01"
0x00004539      48c70574ce21.  mov qword [obj.cwd_n_alloc], 0x64       ; 'd'
                                                                       ; [0x2213b8:8]=0
0x00004544      4529ee         sub r14d, r13d
0x00004547      4c8d3d653301.  lea r15, [0x000178b3]
0x0000454e      e83d000100     call sym.xmalloc
0x00004553      48c70552ce21.  mov qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x0000455e      4889055bce21.  mov qword [obj.cwd_file], rax           ; [0x2213c0:8]=0
0x00004565      e8864f0000     call sym.clear_files
0x0000456a      4585f6         test r14d, r14d
0x0000456d      0f8e1e020000   jle 0x4791
0x00004573      0f1f440000     nop dword [rax + rax]
0x00004578      4a8b3ceb       mov rdi, qword [rbx + r13*8]
0x0000457c      31f6           xor esi, esi
0x0000457e      4c89f9         mov rcx, r15
0x00004581      ba01000000     mov edx, 1
0x00004586      4983c501       add r13, 1
0x0000458a      e801510000     call sym.gobble_file.constprop.52
0x0000458f      4439ed         cmp ebp, r13d
0x00004592      7fe4           jg 0x4578
0x00004594      48833d14ce21.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x0000459c      0f8571040000   jne 0x4a13
0x000045a2      4183ee01       sub r14d, 1
0x000045a6      488b1dd3cd21.  mov rbx, qword [obj.pending_dirs]       ; [0x221380:8]=0
0x000045ad      7f3d           jg 0x45ec
0x000045af      e98d060000     jmp 0x4c41
0x000045b4      0f1f4000       nop dword [rax]
0x000045b8      0fb65310       movzx edx, byte [rbx + 0x10]
0x000045bc      488b7308       mov rsi, qword [rbx + 8]
0x000045c0      e82b5e0000     call sym.print_dir
0x000045c5      488b3b         mov rdi, qword [rbx]
0x000045c8      e8b3f2ffff     call sym..plt.got
0x000045cd      488b7b08       mov rdi, qword [rbx + 8]
0x000045d1      e8aaf2ffff     call sym..plt.got
0x000045d6      4889df         mov rdi, rbx
0x000045d9      e8a2f2ffff     call sym..plt.got
0x000045de      c605d3cc2100.  mov byte [obj.print_dir_name], 1        ; [0x2212b8:1]=0
0x000045e5      488b1d94cd21.  mov rbx, qword [obj.pending_dirs]       ; [0x221380:8]=0
0x000045ec      4885db         test rbx, rbx
0x000045ef      0f8491000000   je 0x4686
0x000045f5      488b4318       mov rax, qword [rbx + 0x18]
0x000045f9      488b3b         mov rdi, qword [rbx]
0x000045fc      4889057dcd21.  mov qword [obj.pending_dirs], rax       ; [0x221380:8]=0
0x00004603      488b05becd21.  mov rax, qword [obj.active_dir_set]     ; [0x2213c8:8]=0
0x0000460a      4885c0         test rax, rax
0x0000460d      74a9           je 0x45b8
0x0000460f      4885ff         test rdi, rdi
0x00004612      75a4           jne 0x45b8
0x00004614      488b15ddca21.  mov rdx, qword [0x002210f8]             ; [0x2210f8:8]=0
0x0000461b      4889d1         mov rcx, rdx
0x0000461e      482b0dcbca21.  sub rcx, qword [0x002210f0]             ; [0x2210f0:8]=0
0x00004625      4883f90f       cmp rcx, 0xf
0x00004629      0f86b80b0000   jbe 0x51e7
0x0000462f      488d4af0       lea rcx, [rdx - 0x10]
0x00004633      4c89e6         mov rsi, r12
0x00004636      4889c7         mov rdi, rax
0x00004639      48890db8ca21.  mov qword [0x002210f8], rcx             ; [0x2210f8:8]=0
0x00004640      488b4af0       mov rcx, qword [rdx - 0x10]
0x00004644      488b52f8       mov rdx, qword [rdx - 8]
0x00004648      48894c2430     mov qword [rsp + 0x30], rcx
0x0000464d      4889542438     mov qword [rsp + 0x38], rdx
0x00004652      e8b9a10000     call sym.hash_delete
0x00004657      4885c0         test rax, rax
0x0000465a      0f84a60b0000   je 0x5206
0x00004660      4889c7         mov rdi, rax
0x00004663      e818f2ffff     call sym..plt.got
0x00004668      488b3b         mov rdi, qword [rbx]
0x0000466b      e810f2ffff     call sym..plt.got
0x00004670      488b7b08       mov rdi, qword [rbx + 8]
0x00004674      e807f2ffff     call sym..plt.got
0x00004679      4889df         mov rdi, rbx
0x0000467c      e8fff1ffff     call sym..plt.got
0x00004681      e95fffffff     jmp 0x45e5
0x00004686      803d85cc2100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x0000468d      740d           je 0x469c
0x0000468f      803d7acc2100.  cmp byte [obj.used_color], 0            ; [0x221310:1]=0
0x00004696      0f8520010000   jne 0x47bc
0x0000469c      803d75cc2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x000046a3      0f85d1030000   jne 0x4a7a
0x000046a9      488b1d18cd21.  mov rbx, qword [obj.active_dir_set]     ; [0x2213c8:8]=0
0x000046b0      4885db         test rbx, rbx
0x000046b3      7419           je 0x46ce
0x000046b5      4889df         mov rdi, rbx
0x000046b8      e873940000     call sym.hash_get_n_entries
0x000046bd      4885c0         test rax, rax
0x000046c0      0f855f0b0000   jne 0x5225
0x000046c6      4889df         mov rdi, rbx
0x000046c9      e8329b0000     call sym.hash_free
0x000046ce      488b742448     mov rsi, qword [rsp + 0x48]
0x000046d3      644833342528.  xor rsi, qword fs:[0x28]
0x000046dc      8b052ecb2100   mov eax, dword [obj.exit_status]        ; [0x221210:4]=0
0x000046e2      0f85770b0000   jne 0x525f
0x000046e8      4883c458       add rsp, 0x58
0x000046ec      5b             pop rbx
0x000046ed      5d             pop rbp
0x000046ee      415c           pop r12
0x000046f0      415d           pop r13
0x000046f2      415e           pop r14
0x000046f4      415f           pop r15
0x000046f6      c3             ret
0x000046f7      be07000000     mov esi, 7
0x000046fc      31ff           xor edi, edi
0x000046fe      c70530cc2100.  mov dword [obj.format], 2               ; [0x221338:4]=0
0x00004708      e823ef0000     call sym.set_quoting_style
0x0000470d      e976f2ffff     jmp 0x3988
0x00004712      4c89e7         mov rdi, r12
0x00004715      e846f60000     call sym.quote
0x0000471a      488d35ef5501.  lea rsi, str.ignoring_invalid_value_of_environment_variable_QUOTING_STYLE:__s ; 0x19d10 ; "ignoring invalid value of environment variable QUOTING_STYLE: %s"
0x00004721      4989c4         mov r12, rax
0x00004724      31ff           xor edi, edi
0x00004726      ba05000000     mov edx, 5
0x0000472b      e8b0ecffff     call sym.imp.dcgettext
0x00004730      4c89e1         mov rcx, r12
0x00004733      4889c2         mov rdx, rax
0x00004736      31f6           xor esi, esi
0x00004738      31ff           xor edi, edi
0x0000473a      31c0           xor eax, eax
0x0000473c      e81ff0ffff     call sym.imp.error
0x00004741      e905f3ffff     jmp 0x3a4b
0x00004746      31c0           xor eax, eax
0x00004748      e9eafbffff     jmp 0x4337
0x0000474d      4889c7         mov rdi, rax
0x00004750      e87b0f0000     call sym.set_line_length
0x00004755      84c0           test al, al
0x00004757      0f8516f3ffff   jne 0x3a73
0x0000475d      4c89e7         mov rdi, r12
0x00004760      e8fbf50000     call sym.quote
0x00004765      488d35ec5501.  lea rsi, str.ignoring_invalid_width_in_environment_variable_COLUMNS:__s ; 0x19d58 ; "ignoring invalid width in environment variable COLUMNS: %s"
0x0000476c      4989c4         mov r12, rax
0x0000476f      31ff           xor edi, edi
0x00004771      ba05000000     mov edx, 5
0x00004776      e865ecffff     call sym.imp.dcgettext
0x0000477b      4c89e1         mov rcx, r12
0x0000477e      4889c2         mov rdx, rax
0x00004781      31f6           xor esi, esi
0x00004783      31ff           xor edi, edi
0x00004785      31c0           xor eax, eax
0x00004787      e8d4efffff     call sym.imp.error
0x0000478c      e9e2f2ffff     jmp 0x3a73
0x00004791      803d5dcb2100.  cmp byte [obj.immediate_dirs], 0        ; [0x2212f5:1]=0
0x00004798      0f8404010000   je 0x48a2
0x0000479e      488d3df75701.  lea rdi, [0x00019f9c]                   ; u".C\u4f50\u4953X\u2023\u6e65\u7274\u6569\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u2023\u7562\u6b63\u7465\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u616d\u2078\u7562\u6b63\u7465\u6c20\u6e65\u7467\u3a68\u2520\u756c\n"
0x000047a5      4c89f9         mov rcx, r15
0x000047a8      ba01000000     mov edx, 1
0x000047ad      be03000000     mov esi, 3
0x000047b2      e8d94e0000     call sym.gobble_file.constprop.52
0x000047b7      e9d8fdffff     jmp 0x4594
0x000047bc      48833d9cb821.  cmp qword [obj.color_indicator], 2      ; [0x220060:8]=2
0x000047c4      7512           jne 0x47d8
0x000047c6      488b059bb821.  mov rax, qword [0x00220068]             ; [0x220068:8]=0x17dc3
0x000047cd      6681381b5b     cmp word [rax], 0x5b1b
0x000047d2      0f849b070000   je 0x4f73
0x000047d8      488d3d81b821.  lea rdi, obj.color_indicator            ; 0x220060
0x000047df      e88c260000     call sym.put_indicator
0x000047e4      488d3d85b821.  lea rdi, [0x00220070]
0x000047eb      e880260000     call sym.put_indicator
0x000047f0      488b3d91ba21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000047f7      e814f0ffff     call sym.imp.fflush_unlocked
0x000047fc      31ff           xor edi, edi
0x000047fe      e84d240000     call sym.signal_setup
0x00004803      8b1d0bca2100   mov ebx, dword [obj.stop_signal_count]  ; [0x221214:4]=0
0x00004809      85db           test ebx, ebx
0x0000480b      7412           je 0x481f
0x0000480d      0f1f00         nop dword [rax]
0x00004810      bf13000000     mov edi, 0x13
0x00004815      e866eaffff     call sym.imp.raise
0x0000481a      83eb01         sub ebx, 1
0x0000481d      75f1           jne 0x4810
0x0000481f      8b3df3c92100   mov edi, dword [obj.interrupt_signal]   ; [0x221218:4]=0
0x00004825      85ff           test edi, edi
0x00004827      0f846ffeffff   je 0x469c
0x0000482d      e84eeaffff     call sym.imp.raise
0x00004832      e965feffff     jmp 0x469c
0x00004837      803d27cb2100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x0000483e      0f85bdfcffff   jne 0x4501
0x00004844      803de1ca2100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x0000484b      0f85b0fcffff   jne 0x4501
0x00004851      803d9eca2100.  cmp byte [obj.recursive], 0             ; [0x2212f6:1]=0
0x00004858      c60542ca2100.  mov byte [obj.format_needs_stat], 0     ; [0x2212a1:1]=0
0x0000485f      b801000000     mov eax, 1
0x00004864      0f85a0fcffff   jne 0x450a
0x0000486a      803da1ca2100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004871      0f8593fcffff   jne 0x450a
0x00004877      833d96ca2100.  cmp dword [obj.indicator_style], 0      ; [0x221314:4]=0
0x0000487e      0f8586fcffff   jne 0x450a
0x00004884      0fb60569ca21.  movzx eax, byte [obj.directories_first] ; [0x2212f4:1]=0
0x0000488b      e97afcffff     jmp 0x450a
0x00004890      803d7aca2100.  cmp byte [obj.print_hyperlink], 0       ; [0x221311:1]=0
0x00004897      0f8462fbffff   je 0x43ff
0x0000489d      e933fbffff     jmp 0x43d5
0x000048a2      488d3df35601.  lea rdi, [0x00019f9c]                   ; u".C\u4f50\u4953X\u2023\u6e65\u7274\u6569\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u2023\u7562\u6b63\u7465\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u616d\u2078\u7562\u6b63\u7465\u6c20\u6e65\u7467\u3a68\u2520\u756c\n"
0x000048a9      ba01000000     mov edx, 1
0x000048ae      31f6           xor esi, esi
0x000048b0      e81b110000     call sym.queue_directory
0x000048b5      e9dafcffff     jmp 0x4594
0x000048ba      803d34ca2100.  cmp byte [obj.immediate_dirs], 0        ; [0x2212f5:1]=0
0x000048c1      b802000000     mov eax, 2
0x000048c6      7518           jne 0x48e0
0x000048c8      833d45ca2100.  cmp dword [obj.indicator_style], 3      ; [0x221314:4]=0
0x000048cf      740f           je 0x48e0
0x000048d1      833d60ca2100.  cmp dword [obj.format], 1               ; [0x221338:4]=0
0x000048d8      19c0           sbb eax, eax
0x000048da      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x000048dd      83c004         add eax, 4
0x000048e0      890512ca2100   mov dword [obj.dereference], eax        ; [0x2212f8:4]=0
0x000048e6      e988fbffff     jmp 0x4473
0x000048eb      488d3df33101.  lea rdi, str.LS_BLOCK_SIZE              ; 0x17ae5 ; "LS_BLOCK_SIZE"
0x000048f2      e859e9ffff     call sym.imp.getenv
0x000048f7      488d1522ca21.  lea rdx, obj.output_block_size          ; 0x221320
0x000048fe      488d3523ca21.  lea rsi, obj.human_output_opts          ; 0x221328
0x00004905      4989c5         mov r13, rax
0x00004908      4889c7         mov rdi, rax
0x0000490b      e8c0ac0000     call sym.human_options
0x00004910      4d85ed         test r13, r13
0x00004913      0f841c080000   je 0x5135
0x00004919      8b0509ca2100   mov eax, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x0000491f      8905f7c92100   mov dword [obj.file_human_output_opts], eax ; [0x22131c:4]=0
0x00004925      488b05f4c921.  mov rax, qword [obj.output_block_size]  ; [0x221320:8]=0
0x0000492c      488905e5b621.  mov qword [obj.file_output_block_size], rax ; [0x220018:8]=1
0x00004933      807c241000     cmp byte [rsp + 0x10], 0
0x00004938      0f848bf9ffff   je 0x42c9
0x0000493e      c705e0c92100.  mov dword [obj.human_output_opts], 0    ; [0x221328:4]=0
0x00004948      48c705cdc921.  mov qword [obj.output_block_size], 0x400 ; [0x221320:8]=0
0x00004953      e971f9ffff     jmp 0x42c9
0x00004958      488d1581c621.  lea rdx, obj.RFC3986                    ; 0x220fe0
0x0000495f      31c0           xor eax, eax
0x00004961      eb35           jmp 0x4998
0x00004963      0f1f440000     nop dword [rax + rax]
0x00004968      83f841         cmp eax, 0x41
0x0000496b      7d38           jge 0x49a5
0x0000496d      8d48d0         lea ecx, [rax - 0x30]
0x00004970      83f909         cmp ecx, 9
0x00004973      7630           jbe 0x49a5
0x00004975      8d48d3         lea ecx, [rax - 0x2d]
0x00004978      83f901         cmp ecx, 1
0x0000497b      7628           jbe 0x49a5
0x0000497d      83f87e         cmp eax, 0x7e
0x00004980      7423           je 0x49a5
0x00004982      83f85f         cmp eax, 0x5f
0x00004985      0f94c1         sete cl
0x00004988      83c001         add eax, 1
0x0000498b      080a           or byte [rdx], cl
0x0000498d      4883c201       add rdx, 1
0x00004991      3d00010000     cmp eax, 0x100
0x00004996      7422           je 0x49ba
0x00004998      83f85a         cmp eax, 0x5a
0x0000499b      7ecb           jle 0x4968
0x0000499d      8d489f         lea ecx, [rax - 0x61]
0x000049a0      83f919         cmp ecx, 0x19
0x000049a3      77d0           ja 0x4975
0x000049a5      83c001         add eax, 1
0x000049a8      b901000000     mov ecx, 1
0x000049ad      080a           or byte [rdx], cl
0x000049af      4883c201       add rdx, 1
0x000049b3      3d00010000     cmp eax, 0x100
0x000049b8      75de           jne 0x4998
0x000049ba      e8c1ff0000     call sym.xgethostname
0x000049bf      4885c0         test rax, rax
0x000049c2      0f84b1030000   je 0x4d79
0x000049c8      488905b9c921.  mov qword [obj.hostname], rax           ; [0x221388:8]=0
0x000049cf      e95dfbffff     jmp 0x4531
0x000049d4      4c8b3de5b521.  mov r15, qword [reloc.free]             ; [0x21ffc0:8]=0
0x000049db      4c8b35feb521.  mov r14, qword [reloc.malloc]           ; [0x21ffe0:8]=0
0x000049e2      488d3db7c721.  lea rdi, obj.dired_obstack              ; 0x2211a0
0x000049e9      31d2           xor edx, edx
0x000049eb      31f6           xor esi, esi
0x000049ed      4d89f8         mov r8, r15
0x000049f0      4c89f1         mov rcx, r14
0x000049f3      e8f80a0100     call sym._obstack_begin
0x000049f8      488d3d41c721.  lea rdi, obj.subdired_obstack           ; 0x221140
0x000049ff      4d89f8         mov r8, r15
0x00004a02      4c89f1         mov rcx, r14
0x00004a05      31d2           xor edx, edx
0x00004a07      31f6           xor esi, esi
0x00004a09      e8e20a0100     call sym._obstack_begin
0x00004a0e      e911fbffff     jmp 0x4524
0x00004a13      e828120000     call sym.sort_files
0x00004a18      803dd6c82100.  cmp byte [obj.immediate_dirs], 0        ; [0x2212f5:1]=0
0x00004a1f      0f8443030000   je 0x4d68
0x00004a25      48833d83c921.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x00004a2d      0f846ffbffff   je 0x45a2
0x00004a33      e868450000     call sym.print_current_files
0x00004a38      48833d40c921.  cmp qword [obj.pending_dirs], 0         ; [0x221380:8]=0
0x00004a40      0f8440fcffff   je 0x4686
0x00004a46      488b3d3bb821.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00004a4d      488b4728       mov rax, qword [rdi + 0x28]
0x00004a51      48394730       cmp qword [rdi + 0x30], rax
0x00004a55      0f862f070000   jbe 0x518a
0x00004a5b      488d5001       lea rdx, [rax + 1]
0x00004a5f      48895728       mov qword [rdi + 0x28], rdx
0x00004a63      c6000a         mov byte [rax], 0xa
0x00004a66      4883058ac721.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x00004a6e      488b1d0bc921.  mov rbx, qword [obj.pending_dirs]       ; [0x221380:8]=0
0x00004a75      e972fbffff     jmp 0x45ec
0x00004a7a      488d351fc721.  lea rsi, obj.dired_obstack              ; 0x2211a0
0x00004a81      488d3d3d3101.  lea rdi, str.DIRED                      ; 0x17bc5 ; "//DIRED//"
0x00004a88      e883160000     call sym.dired_dump_obstack
0x00004a8d      488d35acc621.  lea rsi, obj.subdired_obstack           ; 0x221140
0x00004a94      488d3d343101.  lea rdi, str.SUBDIRED                   ; 0x17bcf ; "//SUBDIRED//"
0x00004a9b      e870160000     call sym.dired_dump_obstack
0x00004aa0      488b3d29c821.  mov rdi, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x00004aa7      e864eb0000     call sym.get_quoting_style
0x00004aac      488d158daf21.  lea rdx, obj.quoting_style_args         ; 0x21fa40 ; "K}\x01"
0x00004ab3      89c0           mov eax, eax
0x00004ab5      488d35bc5301.  lea rsi, str.DIRED_OPTIONS_____quoting_style__s ; 0x19e78 ; "//DIRED-OPTIONS// --quoting-style=%s\n"
0x00004abc      bf01000000     mov edi, 1
0x00004ac1      488b14c2       mov rdx, qword [rdx + rax*8]
0x00004ac5      31c0           xor eax, eax
0x00004ac7      e844ecffff     call sym.imp.__printf_chk
0x00004acc      e9d8fbffff     jmp 0x46a9
0x00004ad1      488d3dab3001.  lea rdi, str.LS_COLORS                  ; 0x17b83 ; "LS_COLORS"
0x00004ad8      e873e7ffff     call sym.imp.getenv
0x00004add      4885c0         test rax, rax
0x00004ae0      4889442428     mov qword [rsp + 0x28], rax
0x00004ae5      7409           je 0x4af0
0x00004ae7      803800         cmp byte [rax], 0
0x00004aea      0f8508030000   jne 0x4df8
0x00004af0      488d3d963001.  lea rdi, str.COLORTERM                  ; 0x17b8d ; "COLORTERM"
0x00004af7      e854e7ffff     call sym.imp.getenv
0x00004afc      4885c0         test rax, rax
0x00004aff      7409           je 0x4b0a
0x00004b01      803800         cmp byte [rax], 0
0x00004b04      0f8598000000   jne 0x4ba2
0x00004b0a      488d3d813001.  lea rdi, [0x00017b92]                   ; "TERM"
0x00004b11      e83ae7ffff     call sym.imp.getenv
0x00004b16      4885c0         test rax, rax
0x00004b19      4889442408     mov qword [rsp + 8], rax
0x00004b1e      747b           je 0x4b9b
0x00004b20      488b442408     mov rax, qword [rsp + 8]
0x00004b25      803800         cmp byte [rax], 0
0x00004b28      7471           je 0x4b9b
0x00004b2a      4c8d354f1c01.  lea r14, obj.G_line                     ; 0x16780 ; "# Configuration file for dircolors, a utility to help you set the"
0x00004b31      4c89e0         mov rax, r12
0x00004b34      4989dc         mov r12, rbx
0x00004b37      4989c7         mov r15, rax
0x00004b3a      4c89f3         mov rbx, r14
0x00004b3d      eb14           jmp 0x4b53
0x00004b3f      31c0           xor eax, eax
0x00004b41      4889df         mov rdi, rbx
0x00004b44      4883c9ff       or rcx, 0xffffffffffffffff
0x00004b48      f2ae           repne scasb al, byte [rdi]
0x00004b4a      4889c8         mov rax, rcx
0x00004b4d      48f7d0         not rax
0x00004b50      4801c3         add rbx, rax
0x00004b53      4889d8         mov rax, rbx
0x00004b56      4c29f0         sub rax, r14
0x00004b59      483dc3100000   cmp rax, 0x10c3
0x00004b5f      7734           ja 0x4b95
0x00004b61      488d352f3001.  lea rsi, str.TERM                       ; 0x17b97 ; "TERM "
0x00004b68      ba05000000     mov edx, 5
0x00004b6d      4889df         mov rdi, rbx
0x00004b70      e83be7ffff     call sym.imp.strncmp
0x00004b75      85c0           test eax, eax
0x00004b77      75c6           jne 0x4b3f
0x00004b79      488b742408     mov rsi, qword [rsp + 8]
0x00004b7e      488d7b05       lea rdi, [rbx + 5]
0x00004b82      31d2           xor edx, edx
0x00004b84      e867e9ffff     call sym.imp.fnmatch
0x00004b89      85c0           test eax, eax
0x00004b8b      75b2           jne 0x4b3f
0x00004b8d      4c89e3         mov rbx, r12
0x00004b90      4d89fc         mov r12, r15
0x00004b93      eb0d           jmp 0x4ba2
0x00004b95      4c89e3         mov rbx, r12
0x00004b98      4d89fc         mov r12, r15
0x00004b9b      c60570c72100.  mov byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004ba2      803d4bc72100.  cmp byte [obj.directories_first], 0     ; [0x2212f4:1]=0
0x00004ba9      0f85b0f8ffff   jne 0x445f
0x00004baf      803d5cc72100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004bb6      0f84aaf8ffff   je 0x4466
0x00004bbc      bf0d000000     mov edi, 0xd
0x00004bc1      e8aa0a0000     call sym.is_colored
0x00004bc6      84c0           test al, al
0x00004bc8      0f8591f8ffff   jne 0x445f
0x00004bce      bf0e000000     mov edi, 0xe
0x00004bd3      e8980a0000     call sym.is_colored
0x00004bd8      84c0           test al, al
0x00004bda      740d           je 0x4be9
0x00004bdc      803dadc72100.  cmp byte [obj.color_symlink_as_referent], 0 ; [0x221390:1]=0
0x00004be3      0f8576f8ffff   jne 0x445f
0x00004be9      bf0c000000     mov edi, 0xc
0x00004bee      e87d0a0000     call sym.is_colored
0x00004bf3      84c0           test al, al
0x00004bf5      0f846bf8ffff   je 0x4466
0x00004bfb      833d36c72100.  cmp dword [obj.format], 0               ; [0x221338:4]=0
0x00004c02      0f8457f8ffff   je 0x445f
0x00004c08      e959f8ffff     jmp 0x4466
0x00004c0d      4c89ef         mov rdi, r13
0x00004c10      e84bf10000     call sym.quote
0x00004c15      488d357c5101.  lea rsi, str.ignoring_invalid_tab_size_in_environment_variable_TABSIZE:__s ; 0x19d98 ; "ignoring invalid tab size in environment variable TABSIZE: %s"
0x00004c1c      4989c5         mov r13, rax
0x00004c1f      31ff           xor edi, edi
0x00004c21      ba05000000     mov edx, 5
0x00004c26      e8b5e7ffff     call sym.imp.dcgettext
0x00004c2b      4c89e9         mov rcx, r13
0x00004c2e      4889c2         mov rdx, rax
0x00004c31      31f6           xor esi, esi
0x00004c33      31ff           xor edi, edi
0x00004c35      31c0           xor eax, eax
0x00004c37      e824ebffff     call sym.imp.error
0x00004c3c      e9a6eeffff     jmp 0x3ae7
0x00004c41      4885db         test rbx, rbx
0x00004c44      0f843cfaffff   je 0x4686
0x00004c4a      48837b1800     cmp qword [rbx + 0x18], 0
0x00004c4f      0f8597f9ffff   jne 0x45ec
0x00004c55      c6055cc62100.  mov byte [obj.print_dir_name], 0        ; [0x2212b8:1]=0
0x00004c5c      e98bf9ffff     jmp 0x45ec
0x00004c61      41803e2b       cmp byte [r14], 0x2b
0x00004c65      0f843e010000   je 0x4da9
0x00004c6b      488d15ee1a01.  lea rdx, obj.time_style_types           ; 0x16760
0x00004c72      488d3567ad21.  lea rsi, obj.time_style_args            ; 0x21f9e0
0x00004c79      b904000000     mov ecx, 4
0x00004c7e      4c89f7         mov rdi, r14
0x00004c81      e8ca740000     call sym.argmatch
0x00004c86      4885c0         test rax, rax
0x00004c89      0f8895030000   js 0x5024
0x00004c8f      4883f801       cmp rax, 1
0x00004c93      0f84d7040000   je 0x5170
0x00004c99      0f8ef7020000   jle 0x4f96
0x00004c9f      4883f802       cmp rax, 2
0x00004ca3      0f84a6040000   je 0x514f
0x00004ca9      4883f803       cmp rax, 3
0x00004cad      7542           jne 0x4cf1
0x00004caf      bf02000000     mov edi, 2
0x00004cb4      e8278a0000     call sym.hard_locale
0x00004cb9      84c0           test al, al
0x00004cbb      7434           je 0x4cf1
0x00004cbd      488b357cb321.  mov rsi, qword [obj.long_time_format]   ; [0x220040:8]=0x17dad str.b__e___Y
0x00004cc4      ba02000000     mov edx, 2
0x00004cc9      31ff           xor edi, edi
0x00004ccb      e810e7ffff     call sym.imp.dcgettext
0x00004cd0      488b3571b321.  mov rsi, qword [0x00220048]             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x00004cd7      ba02000000     mov edx, 2
0x00004cdc      31ff           xor edi, edi
0x00004cde      4889055bb321.  mov qword [obj.long_time_format], rax   ; [0x220040:8]=0x17dad str.b__e___Y
0x00004ce5      e8f6e6ffff     call sym.imp.dcgettext
0x00004cea      48890557b321.  mov qword [0x00220048], rax             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x00004cf1      e85a0a0000     call sym.abformat_init
0x00004cf6      e947f7ffff     jmp 0x4442
0x00004cfb      bf01000000     mov edi, 1
0x00004d00      e8fbe5ffff     call sym.imp.isatty
0x00004d05      83f801         cmp eax, 1
0x00004d08      19c0           sbb eax, eax
0x00004d0a      83c002         add eax, 2
0x00004d0d      890525c62100   mov dword [obj.format], eax             ; [0x221338:4]=0
0x00004d13      e9bfeeffff     jmp 0x3bd7
0x00004d18      ba01000000     mov edx, 1
0x00004d1d      be20000000     mov esi, 0x20                           ; "@"
0x00004d22      4889c7         mov rdi, rax
0x00004d25      e826e90000     call sym.set_char_quoting
0x00004d2a      e92df6ffff     jmp 0x435c
0x00004d2f      be03000000     mov esi, 3
0x00004d34      31ff           xor edi, edi
0x00004d36      c705f8c52100.  mov dword [obj.format], 2               ; [0x221338:4]=0
0x00004d40      e8ebe80000     call sym.set_quoting_style
0x00004d45      c6058cc52100.  mov byte [obj.qmark_funny_chars], 1     ; [0x2212d8:1]=0
0x00004d4c      e937ecffff     jmp 0x3988
0x00004d51      85d2           test edx, edx
0x00004d53      0f84a6f6ffff   je 0x43ff
0x00004d59      c705cdc52100.  mov dword [obj.sort_type], 4            ; [0x221330:4]=0
0x00004d63      e9daf6ffff     jmp 0x4442
0x00004d68      be01000000     mov esi, 1
0x00004d6d      31ff           xor edi, edi
0x00004d6f      e84c110000     call sym.extract_dirs_from_files
0x00004d74      e9acfcffff     jmp 0x4a25
0x00004d79      488d05332b01.  lea rax, [0x000178b3]
0x00004d80      e943fcffff     jmp 0x49c8
0x00004d85      488d3d6d2d01.  lea rdi, str.TIME_STYLE                 ; 0x17af9 ; "TIME_STYLE"
0x00004d8c      e8bfe4ffff     call sym.imp.getenv
0x00004d91      4885c0         test rax, rax
0x00004d94      4989c6         mov r14, rax
0x00004d97      0f856bf6ffff   jne 0x4408
0x00004d9d      4c8d357c2c01.  lea r14, [0x00017a20]                   ; "locale"
0x00004da4      e9c2feffff     jmp 0x4c6b
0x00004da9      4983c601       add r14, 1
0x00004dad      be0a000000     mov esi, 0xa
0x00004db2      4c89f7         mov rdi, r14
0x00004db5      e896e6ffff     call sym.imp.strchr
0x00004dba      4885c0         test rax, rax
0x00004dbd      4989c5         mov r13, rax
0x00004dc0      0f84f3010000   je 0x4fb9
0x00004dc6      4c8d7801       lea r15, [rax + 1]
0x00004dca      be0a000000     mov esi, 0xa
0x00004dcf      4c89ff         mov rdi, r15
0x00004dd2      e879e6ffff     call sym.imp.strchr
0x00004dd7      4885c0         test rax, rax
0x00004dda      0f85d5030000   jne 0x51b5
0x00004de0      41c6450000     mov byte [r13], 0
0x00004de5      4c893554b221.  mov qword [obj.long_time_format], r14   ; [0x220040:8]=0x17dad str.b__e___Y
0x00004dec      4c893d55b221.  mov qword [0x00220048], r15             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x00004df3      e9f9feffff     jmp 0x4cf1
0x00004df8      4889c7         mov rdi, rax
0x00004dfb      4c8d3dbeaa21.  lea r15, obj.indicator_name             ; 0x21f8c0
0x00004e02      66c74424453f.  mov word [rsp + 0x45], 0x3f3f           ; '??'
                                                                       ; [0x3f3f:2]=1
0x00004e09      c644244700     mov byte [rsp + 0x47], 0
0x00004e0e      e8adf90000     call sym.xstrdup
0x00004e13      896c2408       mov dword [rsp + 8], ebp
0x00004e17      488905e2c421.  mov qword [obj.color_buf], rax          ; [0x221300:8]=0
0x00004e1e      4889442430     mov qword [rsp + 0x30], rax
0x00004e23      48895c2410     mov qword [rsp + 0x10], rbx
0x00004e28      488b442428     mov rax, qword [rsp + 0x28]
0x00004e2d      0fb610         movzx edx, byte [rax]
0x00004e30      80fa2a         cmp dl, 0x2a
0x00004e33      0f8488010000   je 0x4fc1
0x00004e39      80fa3a         cmp dl, 0x3a
0x00004e3c      0f8457030000   je 0x5199
0x00004e42      84d2           test dl, dl
0x00004e44      0f845d030000   je 0x51a7
0x00004e4a      488d5001       lea rdx, [rax + 1]
0x00004e4e      4889542428     mov qword [rsp + 0x28], rdx
0x00004e53      0fb610         movzx edx, byte [rax]
0x00004e56      88542445       mov byte [rsp + 0x45], dl
0x00004e5a      80780100       cmp byte [rax + 1], 0
0x00004e5e      0f84ab010000   je 0x500f
0x00004e64      488d5002       lea rdx, [rax + 2]
0x00004e68      4889542428     mov qword [rsp + 0x28], rdx
0x00004e6d      0fb65001       movzx edx, byte [rax + 1]
0x00004e71      88542446       mov byte [rsp + 0x46], dl
0x00004e75      488d5003       lea rdx, [rax + 3]
0x00004e79      4889542428     mov qword [rsp + 0x28], rdx
0x00004e7e      8078023d       cmp byte [rax + 2], 0x3d
0x00004e82      0f8587010000   jne 0x500f
0x00004e88      488d357d2b01.  lea rsi, [0x00017a0c]                   ; "lc"
0x00004e8f      488d5c2445     lea rbx, [rsp + 0x45]
0x00004e94      31ed           xor ebp, ebp
0x00004e96      4889df         mov rdi, rbx
0x00004e99      e8f2e6ffff     call sym.imp.strcmp
0x00004e9e      85c0           test eax, eax
0x00004ea0      0f8459020000   je 0x50ff
0x00004ea6      4883c501       add rbp, 1
0x00004eaa      498b34ef       mov rsi, qword [r15 + rbp*8]
0x00004eae      4885f6         test rsi, rsi
0x00004eb1      75e3           jne 0x4e96
0x00004eb3      4889df         mov rdi, rbx
0x00004eb6      8b6c2408       mov ebp, dword [rsp + 8]
0x00004eba      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00004ebf      e89cee0000     call sym.quote
0x00004ec4      488d35d22c01.  lea rsi, str.unrecognized_prefix:__s    ; 0x17b9d ; "unrecognized prefix: %s"
0x00004ecb      4989c6         mov r14, rax
0x00004ece      ba05000000     mov edx, 5
0x00004ed3      31ff           xor edi, edi
0x00004ed5      e806e5ffff     call sym.imp.dcgettext
0x00004eda      4c89f1         mov rcx, r14
0x00004edd      4889c2         mov rdx, rax
0x00004ee0      31f6           xor esi, esi
0x00004ee2      31ff           xor edi, edi
0x00004ee4      31c0           xor eax, eax
0x00004ee6      e875e8ffff     call sym.imp.error
0x00004eeb      488d35de4f01.  lea rsi, str.unparsable_value_for_LS_COLORS_environment_variable ; 0x19ed0 ; "unparsable value for LS_COLORS environment variable"
0x00004ef2      ba05000000     mov edx, 5
0x00004ef7      31ff           xor edi, edi
0x00004ef9      e8e2e4ffff     call sym.imp.dcgettext
0x00004efe      31f6           xor esi, esi
0x00004f00      4889c2         mov rdx, rax
0x00004f03      31ff           xor edi, edi
0x00004f05      31c0           xor eax, eax
0x00004f07      e854e8ffff     call sym.imp.error
0x00004f0c      488b3dedc321.  mov rdi, qword [obj.color_buf]          ; [0x221300:8]=0
0x00004f13      e868e9ffff     call sym..plt.got
0x00004f18      488b3de9c321.  mov rdi, qword [obj.color_ext_list]     ; [0x221308:8]=0
0x00004f1f      eb0c           jmp 0x4f2d
0x00004f21      4c8b7720       mov r14, qword [rdi + 0x20]
0x00004f25      e856e9ffff     call sym..plt.got
0x00004f2a      4c89f7         mov rdi, r14
0x00004f2d      4885ff         test rdi, rdi
0x00004f30      75ef           jne 0x4f21
0x00004f32      c605d9c32100.  mov byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00004f39      48833d8fb121.  cmp qword [0x002200d0], 6               ; [0x2200d0:8]=5
0x00004f41      0f855bfcffff   jne 0x4ba2
0x00004f47      488b3d8ab121.  mov rdi, qword [0x002200d8]             ; [0x2200d8:8]=0x17dcc str.01_36
0x00004f4e      488d35602c01.  lea rsi, str.target                     ; 0x17bb5 ; "target"
0x00004f55      ba06000000     mov edx, 6
0x00004f5a      e851e3ffff     call sym.imp.strncmp
0x00004f5f      85c0           test eax, eax
0x00004f61      0f853bfcffff   jne 0x4ba2
0x00004f67      c60522c42100.  mov byte [obj.color_symlink_as_referent], 1 ; [0x221390:1]=0
0x00004f6e      e92ffcffff     jmp 0x4ba2
0x00004f73      48833df5b021.  cmp qword [0x00220070], 1               ; [0x220070:8]=1
0x00004f7b      0f8557f8ffff   jne 0x47d8
0x00004f81      488b05f0b021.  mov rax, qword [0x00220078]             ; [0x220078:8]=0x179bd
0x00004f88      80386d         cmp byte [rax], 0x6d
0x00004f8b      0f8547f8ffff   jne 0x47d8
0x00004f91      e95af8ffff     jmp 0x47f0
0x00004f96      4885c0         test rax, rax
0x00004f99      0f8552fdffff   jne 0x4cf1
0x00004f9f      488d05ac2b01.  lea rax, str.Y__m__d__H:_M:_S._N__z     ; 0x17b52 ; "%Y-%m-%d %H:%M:%S.%N %z"
0x00004fa6      4889059bb021.  mov qword [0x00220048], rax             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x00004fad      4889058cb021.  mov qword [obj.long_time_format], rax   ; [0x220040:8]=0x17dad str.b__e___Y
0x00004fb4      e938fdffff     jmp 0x4cf1
0x00004fb9      4d89f7         mov r15, r14
0x00004fbc      e924feffff     jmp 0x4de5
0x00004fc1      bf28000000     mov edi, 0x28                           ; '('
0x00004fc6      488d5c2428     lea rbx, [rsp + 0x28]
0x00004fcb      e8c0f50000     call sym.xmalloc
0x00004fd0      4989c6         mov r14, rax
0x00004fd3      488b052ec321.  mov rax, qword [obj.color_ext_list]     ; [0x221308:8]=0
0x00004fda      ba01000000     mov edx, 1
0x00004fdf      4c89f1         mov rcx, r14
0x00004fe2      4889de         mov rsi, rbx
0x00004fe5      4c89e7         mov rdi, r12
0x00004fe8      488344242801   add qword [rsp + 0x28], 1
0x00004fee      4c893513c321.  mov qword [obj.color_ext_list], r14     ; [0x221308:8]=0
0x00004ff5      49894620       mov qword [r14 + 0x20], rax
0x00004ff9      488b442430     mov rax, qword [rsp + 0x30]
0x00004ffe      49894608       mov qword [r14 + 8], rax
0x00005002      e8d9030000     call sym.get_funky_string
0x00005007      84c0           test al, al
0x00005009      0f85b2000000   jne 0x50c1
0x0000500f      8b6c2408       mov ebp, dword [rsp + 8]
0x00005013      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00005018      e9cefeffff     jmp 0x4eeb
0x0000501d      31ff           xor edi, edi
0x0000501f      e8ec680000     call sym.usage
0x00005024      488d3df62a01.  lea rdi, [0x00017b21]                   ; "time style"
0x0000502b      4889c2         mov rdx, rax
0x0000502e      4c89f6         mov rsi, r14
0x00005031      488d2d0a2b01.  lea rbp, str.posix___s                  ; 0x17b42 ; "  - [posix-]%s\n"
0x00005038      e833720000     call sym.argmatch_invalid
0x0000503d      488b1d7cb221.  mov rbx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x00005044      488d35e12a01.  lea rsi, [0x00017b2c]                   ; "Valid arguments are:\n"
0x0000504b      ba05000000     mov edx, 5
0x00005050      31ff           xor edi, edi
0x00005052      e889e3ffff     call sym.imp.dcgettext
0x00005057      4889de         mov rsi, rbx
0x0000505a      4889c7         mov rdi, rax
0x0000505d      488d1d7ca921.  lea rbx, obj.time_style_args            ; 0x21f9e0
0x00005064      e807e5ffff     call sym.imp.fputs_unlocked
0x00005069      488d0d932901.  lea rcx, str.full_iso                   ; 0x17a03 ; "full-iso"
0x00005070      488b3d49b221.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x00005077      4883c308       add rbx, 8
0x0000507b      31c0           xor eax, eax
0x0000507d      4889ea         mov rdx, rbp
0x00005080      be01000000     mov esi, 1
0x00005085      e876e7ffff     call sym.imp.__fprintf_chk
0x0000508a      488b0b         mov rcx, qword [rbx]
0x0000508d      4885c9         test rcx, rcx
0x00005090      75de           jne 0x5070
0x00005092      488b1d27b221.  mov rbx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x00005099      488d35684d01.  lea rsi, str.FORMAT__e.g.____H:_M__for_a__date__style_format ; 0x19e08 ; "  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\n"
0x000050a0      31ff           xor edi, edi
0x000050a2      ba05000000     mov edx, 5
0x000050a7      e834e3ffff     call sym.imp.dcgettext
0x000050ac      4889de         mov rsi, rbx
0x000050af      4889c7         mov rdi, rax
0x000050b2      e8b9e4ffff     call sym.imp.fputs_unlocked
0x000050b7      bf02000000     mov edi, 2
0x000050bc      e84f680000     call sym.usage
0x000050c1      488b442428     mov rax, qword [rsp + 0x28]
0x000050c6      488d5001       lea rdx, [rax + 1]
0x000050ca      4889542428     mov qword [rsp + 0x28], rdx
0x000050cf      80383d         cmp byte [rax], 0x3d
0x000050d2      0f8537ffffff   jne 0x500f
0x000050d8      488b442430     mov rax, qword [rsp + 0x30]
0x000050dd      498d4e10       lea rcx, [r14 + 0x10]
0x000050e1      31d2           xor edx, edx
0x000050e3      4889de         mov rsi, rbx
0x000050e6      4c89e7         mov rdi, r12
0x000050e9      49894618       mov qword [r14 + 0x18], rax
0x000050ed      e8ee020000     call sym.get_funky_string
0x000050f2      84c0           test al, al
0x000050f4      0f852efdffff   jne 0x4e28
0x000050fa      e910ffffff     jmp 0x500f
0x000050ff      488d055aaf21.  lea rax, obj.color_indicator            ; 0x220060
0x00005106      4863cd         movsxd rcx, ebp
0x00005109      488d742428     lea rsi, [rsp + 0x28]
0x0000510e      48c1e104       shl rcx, 4
0x00005112      31d2           xor edx, edx
0x00005114      4c89e7         mov rdi, r12
0x00005117      4801c1         add rcx, rax
0x0000511a      488b442430     mov rax, qword [rsp + 0x30]
0x0000511f      48894108       mov qword [rcx + 8], rax
0x00005123      e8b8020000     call sym.get_funky_string
0x00005128      84c0           test al, al
0x0000512a      0f85f8fcffff   jne 0x4e28
0x00005130      e97efdffff     jmp 0x4eb3
0x00005135      488d3dac2901.  lea rdi, [0x00017ae8]                   ; "BLOCK_SIZE"
0x0000513c      e80fe1ffff     call sym.imp.getenv
0x00005141      4885c0         test rax, rax
0x00005144      0f85cff7ffff   jne 0x4919
0x0000514a      e9e4f7ffff     jmp 0x4933
0x0000514f      488d05232a01.  lea rax, [0x00017b79]                   ; "%Y-%m-%d "
0x00005156      488905e3ae21.  mov qword [obj.long_time_format], rax   ; [0x220040:8]=0x17dad str.b__e___Y
0x0000515d      488d05092a01.  lea rax, [0x00017b6d]                   ; "%m-%d %H:%M"
0x00005164      488905ddae21.  mov qword [0x00220048], rax             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x0000516b      e981fbffff     jmp 0x4cf1
0x00005170      488d05f32901.  lea rax, str.Y__m__d__H:_M              ; 0x17b6a ; "%Y-%m-%d %H:%M"
0x00005177      488905caae21.  mov qword [0x00220048], rax             ; [0x220048:8]=0x17db7 str.b__e__H:_M
0x0000517e      488905bbae21.  mov qword [obj.long_time_format], rax   ; [0x220040:8]=0x17dad str.b__e___Y
0x00005185      e967fbffff     jmp 0x4cf1
0x0000518a      be0a000000     mov esi, 0xa
0x0000518f      e8fce2ffff     call sym.imp.__overflow
0x00005194      e9cdf8ffff     jmp 0x4a66
0x00005199      4883c001       add rax, 1
0x0000519d      4889442428     mov qword [rsp + 0x28], rax
0x000051a2      e981fcffff     jmp 0x4e28
0x000051a7      8b6c2408       mov ebp, dword [rsp + 8]
0x000051ab      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000051b0      e984fdffff     jmp 0x4f39
0x000051b5      4c89f7         mov rdi, r14
0x000051b8      e8a3eb0000     call sym.quote
0x000051bd      488d35402901.  lea rsi, str.invalid_time_style_format__s ; 0x17b04 ; "invalid time style format %s"
0x000051c4      4889c3         mov rbx, rax
0x000051c7      ba05000000     mov edx, 5
0x000051cc      31ff           xor edi, edi
0x000051ce      e80de2ffff     call sym.imp.dcgettext
0x000051d3      4889d9         mov rcx, rbx
0x000051d6      4889c2         mov rdx, rax
0x000051d9      31f6           xor esi, esi
0x000051db      bf02000000     mov edi, 2
0x000051e0      31c0           xor eax, eax
0x000051e2      e879e5ffff     call sym.imp.error
0x000051e7      488d0d2a1401.  lea rcx, obj.__PRETTY_FUNCTION__.9809   ; 0x16618 ; "dev_ino_pop"
0x000051ee      488d35622601.  lea rsi, str..._coreutils_8.31_src_ls.c ; 0x17857 ; "../coreutils-8.31/src/ls.c"
0x000051f5      488d3d444c01.  lea rdi, str.dev_ino_size____obstack_object_size___dev_ino_obstack ; 0x19e40 ; "dev_ino_size <= obstack_object_size (&dev_ino_obstack)"
0x000051fc      ba03040000     mov edx, 0x403
0x00005201      e8cae2ffff     call sym.imp.__assert_fail
0x00005206      488d0dad1401.  lea rcx, obj.__PRETTY_FUNCTION__.9964   ; 0x166ba ; "main"
0x0000520d      488d35432601.  lea rsi, str..._coreutils_8.31_src_ls.c ; 0x17857 ; "../coreutils-8.31/src/ls.c"
0x00005214      488d3da42901.  lea rdi, str.found                      ; 0x17bbf ; "found"
0x0000521b      ba40060000     mov edx, 0x640
0x00005220      e8abe2ffff     call sym.imp.__assert_fail
0x00005225      488d0d8e1401.  lea rcx, obj.__PRETTY_FUNCTION__.9964   ; 0x166ba ; "main"
0x0000522c      488d35242601.  lea rsi, str..._coreutils_8.31_src_ls.c ; 0x17857 ; "../coreutils-8.31/src/ls.c"
0x00005233      488d3d664c01.  lea rdi, str.hash_get_n_entries__active_dir_set_____0 ; 0x19ea0 ; "hash_get_n_entries (active_dir_set) == 0"
0x0000523a      ba74060000     mov edx, 0x674
0x0000523f      e88ce2ffff     call sym.imp.__assert_fail
0x00005244      4c8b054db021.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x220298:8]=0
0x0000524b      8b742430       mov esi, dword [rsp + 0x30]
0x0000524f      488d0deaa021.  lea rcx, obj.long_options               ; 0x21f340
0x00005256      31d2           xor edx, edx
0x00005258      89c7           mov edi, eax
0x0000525a      e821fc0000     call sym.xstrtol_fatal
0x0000525f      e8bce1ffff     call sym.imp.__stack_chk_fail
0x00005264      e877f50000     call sym.xalloc_die
0x00005269      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00005270      31ed           xor ebp, ebp
0x00005272      4989d1         mov r9, rdx
0x00005275      5e             pop rsi
0x00005276      4889e2         mov rdx, rsp
0x00005279      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000527d      50             push rax
0x0000527e      54             push rsp
0x0000527f      4c8d05aa0c01.  lea r8, sym.__libc_csu_fini             ; 0x15f30
0x00005286      488d0d330c01.  lea rcx, sym.__libc_csu_init            ; 0x15ec0 ; "AWAVI\x89\xd7AUATL\x8d%~\x91 "
0x0000528d      488d3d0ce6ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x38a0 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x83\xecXH\x8b>dH\x8b\x04%("
0x00005294      ff1536ad2100   call qword [reloc.__libc_start_main]    ; [0x21ffd0:8]=0
0x0000529a      f4             hlt
0x0000529b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000052a0      488d3dc1af21.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x220268
0x000052a7      55             push rbp
0x000052a8      488d05b9af21.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x220268
0x000052af      4839f8         cmp rax, rdi
0x000052b2      4889e5         mov rbp, rsp
0x000052b5      7419           je 0x52d0
0x000052b7      488b050aad21.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x21ffc8:8]=0
0x000052be      4885c0         test rax, rax
0x000052c1      740d           je 0x52d0
0x000052c3      5d             pop rbp
0x000052c4      ffe0           jmp rax
0x000052c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000052d0      5d             pop rbp
0x000052d1      c3             ret
0x000052d2      0f1f4000       nop dword [rax]
0x000052d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000052e0      488d3d81af21.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x220268
0x000052e7      488d357aaf21.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x220268
0x000052ee      55             push rbp
0x000052ef      4829fe         sub rsi, rdi
0x000052f2      4889e5         mov rbp, rsp
0x000052f5      48c1fe03       sar rsi, 3
0x000052f9      4889f0         mov rax, rsi
0x000052fc      48c1e83f       shr rax, 0x3f
0x00005300      4801c6         add rsi, rax
0x00005303      48d1fe         sar rsi, 1
0x00005306      7418           je 0x5320
0x00005308      488b05d9ac21.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x21ffe8:8]=0
0x0000530f      4885c0         test rax, rax
0x00005312      740c           je 0x5320
0x00005314      5d             pop rbp
0x00005315      ffe0           jmp rax
0x00005317      660f1f840000.  nop word [rax + rax]
0x00005320      5d             pop rbp
0x00005321      c3             ret
0x00005322      0f1f4000       nop dword [rax]
0x00005326      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00005330      803d91af2100.  cmp byte [obj.completed.7697], 0        ; [0x2202c8:1]=0
0x00005337      752f           jne 0x5368
0x00005339      48833dafac21.  cmp qword [reloc.__cxa_finalize], 0     ; [0x21fff0:8]=0
0x00005341      55             push rbp
0x00005342      4889e5         mov rbp, rsp
0x00005345      740c           je 0x5353
0x00005347      488b3dbaac21.  mov rdi, qword [obj.__dso_handle]       ; [0x220008:8]=0x220008 obj.__dso_handle
0x0000534e      e83de5ffff     call 0x3890
0x00005353      e848ffffff     call sym.deregister_tm_clones
0x00005358      c60569af2100.  mov byte [obj.completed.7697], 1        ; [0x2202c8:1]=0
0x0000535f      5d             pop rbp
0x00005360      c3             ret
0x00005361      0f1f80000000.  nop dword [rax]
0x00005368      f3c3           ret
0x0000536a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00005370      55             push rbp
0x00005371      4889e5         mov rbp, rsp
0x00005374      5d             pop rbp
0x00005375      e966ffffff     jmp sym.register_tm_clones
0x0000537a      660f1f440000   nop word [rax + rax]
;-- dev_ino_hash:
0x00005380      488b07         mov rax, qword [rdi]                    ; .//src:1193
0x00005383      31d2           xor edx, edx
0x00005385      48f7f6         div rsi
0x00005388      4889d0         mov rax, rdx                            ; .//src:1196
0x0000538b      c3             ret
0x0000538c      0f1f4000       nop dword [rax]
;-- dev_ino_compare:
0x00005390      31c0           xor eax, eax                            ; .//src:1200
0x00005392      488b16         mov rdx, qword [rsi]                    ; .//src:1203
0x00005395      483917         cmp qword [rdi], rdx
0x00005398      7406           je 0x53a0
0x0000539a      f3c3           ret                                     ; .//src:1204
0x0000539c      0f1f4000       nop dword [rax]
0x000053a0      488b4608       mov rax, qword [rsi + 8]                ; .//src:1203
0x000053a4      48394708       cmp qword [rdi + 8], rax
0x000053a8      0f94c0         sete al
0x000053ab      c3             ret                                     ; .//src:1204
0x000053ac      0f1f4000       nop dword [rax]
;-- sighandler:
0x000053b0      8b0562be2100   mov eax, dword [obj.interrupt_signal]   ; [0x221218:4]=0
0x000053b6      85c0           test eax, eax
0x000053b8      7506           jne 0x53c0
0x000053ba      893d58be2100   mov dword [obj.interrupt_signal], edi   ; [0x221218:4]=0
0x000053c0      f3c3           ret
0x000053c2      0f1f4000       nop dword [rax]
0x000053c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- dev_ino_free:
0x000053d0      e9abe4ffff     jmp sym..plt.got
0x000053d5      90             nop
0x000053d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_funky_string:
0x000053e0      4c8b06         mov r8, qword [rsi]
0x000053e3      4c8b0f         mov r9, qword [rdi]
0x000053e6      4c8d1d930b01.  lea r11, [0x00015f80]
0x000053ed      4157           push r15                                ; .//src:2152
0x000053ef      4531d2         xor r10d, r10d
0x000053f2      4156           push r14
0x000053f4      b801000000     mov eax, 1
0x000053f9      4155           push r13
0x000053fb      4154           push r12
0x000053fd      4189d4         mov r12d, edx
0x00005400      55             push rbp
0x00005401      48bd00000000.  movabs rbp, 0x7e000000000000            ; 35465847065542656
0x0000540b      53             push rbx
0x0000540c      4889cb         mov rbx, rcx
0x0000540f      410fb608       movzx ecx, byte [r8]
0x00005413      80f93d         cmp cl, 0x3d
0x00005416      744a           je 0x5462
0x00005418      0f1f84000000.  nop dword [rax + rax]
0x00005420      0f8ed2000000   jle 0x54f8
0x00005426      80f95c         cmp cl, 0x5c
0x00005429      745d           je 0x5488
0x0000542b      80f95e         cmp cl, 0x5e                            ; .//src:2318
0x0000542e      7540           jne 0x5470
0x00005430      410fb64801     movzx ecx, byte [r8 + 1]                ; .//src:2185
0x00005435      4d8d7001       lea r14, [r8 + 1]
0x00005439      448d69c0       lea r13d, [rcx - 0x40]
0x0000543d      4180fd3e       cmp r13b, 0x3e
0x00005441      0f8791000000   ja 0x54d8
0x00005447      4983c002       add r8, 2
0x0000544b      83e11f         and ecx, 0x1f
0x0000544e      418809         mov byte [r9], cl
0x00005451      410fb608       movzx ecx, byte [r8]
0x00005455      4983c201       add r10, 1
0x00005459      4983c101       add r9, 1
0x0000545d      80f93d         cmp cl, 0x3d                            ; .//src:2188
0x00005460      75be           jne 0x5420
0x00005462      4584e4         test r12b, r12b
0x00005465      7409           je 0x5470
0x00005467      89d0           mov eax, edx
0x00005469      4d89c6         mov r14, r8
0x0000546c      eb71           jmp 0x54df
0x0000546e      6690           nop
0x00005470      418809         mov byte [r9], cl
0x00005473      4983c001       add r8, 1
0x00005477      4983c201       add r10, 1
0x0000547b      4983c101       add r9, 1
0x0000547f      eb8e           jmp 0x540f
0x00005481      0f1f80000000.  nop dword [rax]
0x00005488      410fb64801     movzx ecx, byte [r8 + 1]
0x0000548d      4983c002       add r8, 2
0x00005491      80f978         cmp cl, 0x78
0x00005494      77b8           ja 0x544e                               ; .//src:2146
0x00005496      440fb6e9       movzx r13d, cl
0x0000549a      4f632cab       movsxd r13, dword [r11 + r13*4]
0x0000549e      4d01dd         add r13, r11
0x000054a1      41ffe5         jmp r13
0x000054a4      0f1f4000       nop dword [rax]
0x000054a8      450fb628       movzx r13d, byte [r8]
0x000054ac      83e930         sub ecx, 0x30
0x000054af      458d75d0       lea r14d, [r13 - 0x30]
0x000054b3      4180fe07       cmp r14b, 7                             ; .//src:2195
0x000054b7      7795           ja 0x544e
0x000054b9      4983c001       add r8, 1
0x000054bd      418d4ccdd0     lea ecx, [r13 + rcx*8 - 0x30]           ; .//src:2210
0x000054c2      450fb628       movzx r13d, byte [r8]
0x000054c6      458d75d0       lea r14d, [r13 - 0x30]
0x000054ca      4180fe07       cmp r14b, 7
0x000054ce      76e9           jbe 0x54b9
0x000054d0      e979ffffff     jmp 0x544e
0x000054d5      0f1f00         nop dword [rax]
0x000054d8      80f93f         cmp cl, 0x3f
0x000054db      7433           je 0x5510
0x000054dd      31c0           xor eax, eax
0x000054df      4c890f         mov qword [rdi], r9
0x000054e2      4c8936         mov qword [rsi], r14
0x000054e5      4c8913         mov qword [rbx], r10
0x000054e8      5b             pop rbx
0x000054e9      5d             pop rbp
0x000054ea      415c           pop r12
0x000054ec      415d           pop r13
0x000054ee      415e           pop r14
0x000054f0      415f           pop r15
0x000054f2      c3             ret
0x000054f3      0f1f440000     nop dword [rax + rax]                   ; .//src:2197
0x000054f8      84c9           test cl, cl
0x000054fa      7409           je 0x5505
0x000054fc      80f93a         cmp cl, 0x3a
0x000054ff      0f856bffffff   jne 0x5470
0x00005505      4d89c6         mov r14, r8
0x00005508      b801000000     mov eax, 1
0x0000550d      ebd0           jmp 0x54df
0x0000550f      90             nop
0x00005510      41c6017f       mov byte [r9], 0x7f                     ; [0x7f:1]=0
0x00005514      4983c201       add r10, 1
0x00005518      4983c101       add r9, 1
0x0000551c      4d89f0         mov r8, r14
0x0000551f      e9ebfeffff     jmp 0x540f
0x00005524      0f1f4000       nop dword [rax]
0x00005528      b91b000000     mov ecx, 0x1b
0x0000552d      e91cffffff     jmp 0x544e
0x00005532      660f1f440000   nop word [rax + rax]
0x00005538      4d89c6         mov r14, r8
0x0000553b      31c0           xor eax, eax                            ; .//src:2053
0x0000553d      eba0           jmp 0x54df
0x0000553f      90             nop
0x00005540      4531f6         xor r14d, r14d
0x00005543      0f1f440000     nop dword [rax + rax]
0x00005548      450fb628       movzx r13d, byte [r8]
0x0000554c      418d4dd0       lea ecx, [r13 - 0x30]                   ; .//src:1992
0x00005550      80f936         cmp cl, 0x36
0x00005553      7743           ja 0x5598
0x00005555      4989c7         mov r15, rax
0x00005558      49d3e7         shl r15, cl
0x0000555b      41f7c700007e.  test r15d, 0x7e0000
0x00005562      0f85d8000000   jne 0x5640
0x00005568      4985ef         test r15, rbp
0x0000556b      0f85e7000000   jne 0x5658
0x00005571      41f7c7ff0300.  test r15d, 0x3ff                        ; .//src:1987
0x00005578      741e           je 0x5598
0x0000557a      4983c001       add r8, 1
0x0000557e      41c1e604       shl r14d, 4
0x00005582      478d7435d0     lea r14d, [r13 + r14 - 0x30]
0x00005587      450fb628       movzx r13d, byte [r8]
0x0000558b      418d4dd0       lea ecx, [r13 - 0x30]
0x0000558f      80f936         cmp cl, 0x36
0x00005592      76c1           jbe 0x5555
0x00005594      0f1f4000       nop dword [rax]
0x00005598      458831         mov byte [r9], r14b
0x0000559b      4983c201       add r10, 1
0x0000559f      4983c101       add r9, 1
0x000055a3      e967feffff     jmp 0x540f
0x000055a8      0f1f84000000.  nop dword [rax + rax]
0x000055b0      b920000000     mov ecx, 0x20                           ; "@"
0x000055b5      e994feffff     jmp 0x544e
0x000055ba      660f1f440000   nop word [rax + rax]
0x000055c0      b907000000     mov ecx, 7
0x000055c5      e984feffff     jmp 0x544e
0x000055ca      660f1f440000   nop word [rax + rax]
0x000055d0      b90b000000     mov ecx, 0xb
0x000055d5      e974feffff     jmp 0x544e
0x000055da      660f1f440000   nop word [rax + rax]
0x000055e0      b97f000000     mov ecx, 0x7f
0x000055e5      e964feffff     jmp 0x544e
0x000055ea      660f1f440000   nop word [rax + rax]
0x000055f0      b908000000     mov ecx, 8
0x000055f5      e954feffff     jmp 0x544e
0x000055fa      660f1f440000   nop word [rax + rax]
0x00005600      b90c000000     mov ecx, 0xc
0x00005605      e944feffff     jmp 0x544e
0x0000560a      660f1f440000   nop word [rax + rax]
0x00005610      b90a000000     mov ecx, 0xa
0x00005615      e934feffff     jmp 0x544e
0x0000561a      660f1f440000   nop word [rax + rax]
0x00005620      b90d000000     mov ecx, 0xd
0x00005625      e924feffff     jmp 0x544e                              ; .//src:753
0x0000562a      660f1f440000   nop word [rax + rax]
0x00005630      b909000000     mov ecx, 9                              ; .//src:755
0x00005635      e914feffff     jmp 0x544e
0x0000563a      660f1f440000   nop word [rax + rax]
0x00005640      41c1e604       shl r14d, 4
0x00005644      4983c001       add r8, 1
0x00005648      478d7435c9     lea r14d, [r13 + r14 - 0x37]            ; .//src:756
0x0000564d      e9f6feffff     jmp 0x5548
0x00005652      660f1f440000   nop word [rax + rax]
0x00005658      41c1e604       shl r14d, 4
0x0000565c      4983c001       add r8, 1
0x00005660      478d7435a9     lea r14d, [r13 + r14 - 0x57]
0x00005665      e9defeffff     jmp 0x5548                              ; .//src:1162
0x0000566a      660f1f440000   nop word [rax + rax]
;-- is_colored:
0x00005670      488d05e9a921.  lea rax, obj.color_indicator            ; 0x220060
0x00005677      89ff           mov edi, edi
0x00005679      48c1e704       shl rdi, 4
0x0000567d      4801c7         add rdi, rax
0x00005680      31c0           xor eax, eax
0x00005682      488b17         mov rdx, qword [rdi]
0x00005685      4885d2         test rdx, rdx
0x00005688      742d           je 0x56b7
0x0000568a      4883fa01       cmp rdx, 1
0x0000568e      488b7708       mov rsi, qword [rdi + 8]
0x00005692      742c           je 0x56c0
0x00005694      4883fa02       cmp rdx, 2
0x00005698      b801000000     mov eax, 1
0x0000569d      7518           jne 0x56b7
0x0000569f      488d3d9e2101.  lea rdi, [0x00017844]                   ; "00"
0x000056a6      b902000000     mov ecx, 2
0x000056ab      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000056ad      0f97c0         seta al
0x000056b0      1c00           sbb al, 0
0x000056b2      84c0           test al, al
0x000056b4      0f95c0         setne al
0x000056b7      f3c3           ret
0x000056b9      0f1f80000000.  nop dword [rax]
0x000056c0      803e30         cmp byte [rsi], 0x30
0x000056c3      0f95c0         setne al
0x000056c6      c3             ret
0x000056c7      660f1f840000.  nop word [rax + rax]
;-- set_line_length:
0x000056d0      4883ec18       sub rsp, 0x18
0x000056d4      4c8d05d82101.  lea r8, [0x000178b3]                    ; .//src:1166
0x000056db      31d2           xor edx, edx                            ; .//src:1175
0x000056dd      31f6           xor esi, esi
0x000056df      4889e1         mov rcx, rsp
0x000056e2      64488b042528.  mov rax, qword fs:[0x28]
0x000056eb      4889442408     mov qword [rsp + 8], rax
0x000056f0      31c0           xor eax, eax
0x000056f2      e839f80000     call sym.xstrtoumax
0x000056f7      85c0           test eax, eax
0x000056f9      743d           je 0x5738                               ; .//src:646
0x000056fb      83f801         cmp eax, 1
0x000056fe      7420           je 0x5720
0x00005700      31c0           xor eax, eax
0x00005702      488b542408     mov rdx, qword [rsp + 8]
0x00005707      644833142528.  xor rdx, qword fs:[0x28]
0x00005710      7538           jne 0x574a
0x00005712      4883c418       add rsp, 0x18
0x00005716      c3             ret
0x00005717      660f1f840000.  nop word [rax + rax]
0x00005720      48c70585bb21.  mov qword [obj.line_length], 0xffffffffffffffff ; [0x2212b0:8]=0
0x0000572b      b801000000     mov eax, 1
0x00005730      ebd0           jmp 0x5702
0x00005732      660f1f440000   nop word [rax + rax]                    ; .//src:568
0x00005738      488b0424       mov rax, qword [rsp]
0x0000573c      4889056dbb21.  mov qword [obj.line_length], rax        ; .//src:573 ; [0x2212b0:8]=0
0x00005743      b801000000     mov eax, 1
0x00005748      ebb8           jmp 0x5702
0x0000574a      e8d1dcffff     call sym.imp.__stack_chk_fail
0x0000574f      90             nop
;-- abformat_init:
0x00005750      4157           push r15
0x00005752      4156           push r14
0x00005754      31f6           xor esi, esi                            ; ../coreutils-8.31/src/.c:504
0x00005756      4155           push r13
0x00005758      4154           push r12
0x0000575a      55             push rbp
0x0000575b      53             push rbx
0x0000575c      4881ec580600.  sub rsp, 0x658
0x00005763      488d7c2430     lea rdi, [rsp + 0x30]
0x00005768      64488b042528.  mov rax, qword fs:[0x28]
0x00005771      488984244806.  mov qword [rsp + 0x648], rax
0x00005779      31c0           xor eax, eax
0x0000577b      48897c2410     mov qword [rsp + 0x10], rdi
0x00005780      488d05b9a821.  lea rax, obj.long_time_format           ; 0x220040
0x00005787      488b0430       mov rax, qword [rax + rsi]
0x0000578b      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/src/.c:458
0x0000578e      84d2           test dl, dl                             ; ../coreutils-8.31/src/.c:-621
0x00005790      7419           je 0x57ab
0x00005792      660f1f440000   nop word [rax + rax]
0x00005798      80fa25         cmp dl, 0x25
0x0000579b      0fb64801       movzx ecx, byte [rax + 1]
0x0000579f      740f           je 0x57b0
0x000057a1      89ca           mov edx, ecx
0x000057a3      4883c001       add rax, 1
0x000057a7      84d2           test dl, dl
0x000057a9      75ed           jne 0x5798
0x000057ab      31c0           xor eax, eax
0x000057ad      eb0f           jmp 0x57be
0x000057af      90             nop
0x000057b0      80f925         cmp cl, 0x25
0x000057b3      0f84d7000000   je 0x5890
0x000057b9      80f962         cmp cl, 0x62
0x000057bc      75e3           jne 0x57a1
0x000057be      48890437       mov qword [rdi + rsi], rax
0x000057c2      4883c608       add rsi, 8                              ; .//src:491
0x000057c6      4883fe10       cmp rsi, 0x10
0x000057ca      75b4           jne 0x5780
0x000057cc      48837c243000   cmp qword [rsp + 0x30], 0
0x000057d2      41bd0c000000   mov r13d, 0xc
0x000057d8      0f8403010000   je 0x58e1
0x000057de      488d442440     lea rax, [rsp + 0x40]
0x000057e3      4889442408     mov qword [rsp + 8], rax
0x000057e8      488d442428     lea rax, [rsp + 0x28]
0x000057ed      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/.c:-621
0x000057f1      4c8b7c2408     mov r15, qword [rsp + 8]
0x000057f6      41bc0e000200   mov r12d, 0x2000e
0x000057fc      31ed           xor ebp, ebp
0x000057fe      4d8db7000600.  lea r14, [r15 + 0x600]
0x00005805      0f1f00         nop dword [rax]
0x00005808      4489e7         mov edi, r12d
0x0000580b      4c896c2428     mov qword [rsp + 0x28], r13
0x00005810      e86bdeffff     call sym.imp.nl_langinfo
0x00005815      be25000000     mov esi, 0x25                           ; '%'
0x0000581a      4889c7         mov rdi, rax
0x0000581d      4889c3         mov rbx, rax
0x00005820      e82bdcffff     call sym.imp.strchr
0x00005825      4885c0         test rax, rax
0x00005828      0f858a000000   jne 0x58b8
0x0000582e      e82de0ffff     call sym.imp.__ctype_b_loc
0x00005833      0fb613         movzx edx, byte [rbx]
0x00005836      488b00         mov rax, qword [rax]
0x00005839      4531c9         xor r9d, r9d
0x0000583c      488b0c24       mov rcx, qword [rsp]
0x00005840      4c89fe         mov rsi, r15
0x00005843      4889df         mov rdi, rbx
0x00005846      440fb70450     movzx r8d, word [rax + rdx*2]
0x0000584b      ba80000000     mov edx, 0x80
0x00005850      6641c1e80b     shr r8w, 0xb
0x00005855      4183e001       and r8d, 1
0x00005859      e892a30000     call sym.mbsalign
0x0000585e      4883f87f       cmp rax, 0x7f
0x00005862      7754           ja 0x58b8
0x00005864      488b442428     mov rax, qword [rsp + 0x28]
0x00005869      4839c5         cmp rbp, rax
0x0000586c      480f42e8       cmovb rbp, rax                          ; .//src:2020
0x00005870      4983ef80       sub r15, 0xffffffffffffff80
0x00005874      4183c401       add r12d, 1
0x00005878      4d39f7         cmp r15, r14                            ; .//src:2021
0x0000587b      758b           jne 0x5808
0x0000587d      4939ed         cmp r13, rbp                            ; .//src:2020
0x00005880      766d           jbe 0x58ef
0x00005882      4989ed         mov r13, rbp
0x00005885      e967ffffff     jmp 0x57f1
0x0000588a      660f1f440000   nop word [rax + rax]
0x00005890      0fb65002       movzx edx, byte [rax + 2]
0x00005894      4883c001       add rax, 1
0x00005898      e906ffffff     jmp 0x57a3
0x0000589d      4c8b2c24       mov r13, qword [rsp]
0x000058a1      4983c508       add r13, 8
0x000058a5      4983fd10       cmp r13, 0x10
0x000058a9      754c           jne 0x58f7
0x000058ab      c60516ab2100.  mov byte [obj.use_abformat], 1          ; [0x2203c8:1]=0
0x000058b2      660f1f440000   nop word [rax + rax]
0x000058b8      488b84244806.  mov rax, qword [rsp + 0x648]            ; .//src:2024
0x000058c0      644833042528.  xor rax, qword fs:[0x28]
0x000058c9      0f85ed000000   jne 0x59bc
0x000058cf      4881c4580600.  add rsp, 0x658
0x000058d6      5b             pop rbx
0x000058d7      5d             pop rbp
0x000058d8      415c           pop r12
0x000058da      415d           pop r13
0x000058dc      415e           pop r14                                 ; .//src:3005
0x000058de      415f           pop r15
0x000058e0      c3             ret
0x000058e1      48837c243800   cmp qword [rsp + 0x38], 0
0x000058e7      0f85f1feffff   jne 0x57de
0x000058ed      ebc9           jmp 0x58b8
0x000058ef      4531ed         xor r13d, r13d
0x000058f2      4c897c2418     mov qword [rsp + 0x18], r15
0x000058f7      488d0542a721.  lea rax, obj.long_time_format           ; 0x220040
0x000058fe      4c892c24       mov qword [rsp], r13
0x00005902      488b5c2408     mov rbx, qword [rsp + 8]
0x00005907      4d69d5c00000.  imul r10, r13, 0xc0
0x0000590e      4e8b2428       mov r12, qword [rax + r13]
0x00005912      488b442410     mov rax, qword [rsp + 0x10]
0x00005917      4e8b3428       mov r14, qword [rax + r13]
0x0000591b      488d05beaa21.  lea rax, obj.abformat                   ; 0x2203e0
0x00005922      4e8d3c10       lea r15, [rax + r10]
0x00005926      4c89f5         mov rbp, r14
0x00005929      4d89f5         mov r13, r14                            ; .//src:2979
0x0000592c      4c8b742418     mov r14, qword [rsp + 0x18]
0x00005931      4c29e5         sub rbp, r12
0x00005934      eb66           jmp 0x599c
0x00005936      662e0f1f8400.  nop word cs:[rax + rax]
0x00005940      4881fd800000.  cmp rbp, 0x80
0x00005947      0f8f6bffffff   jg 0x58b8
0x0000594d      498d4502       lea rax, [r13 + 2]
0x00005951      4883ec08       sub rsp, 8
0x00005955      4c8d05eb1e01.  lea r8, str.._s_s_s                     ; 0x17847 ; "%.*s%s%s"
0x0000595c      4189e9         mov r9d, ebp                            ; .//src:3006
0x0000595f      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00005966      ba01000000     mov edx, 1
0x0000596b      50             push rax
0x0000596c      53             push rbx
0x0000596d      be80000000     mov esi, 0x80
0x00005972      4154           push r12
0x00005974      4c89ff         mov rdi, r15
0x00005977      31c0           xor eax, eax
0x00005979      e8f2d8ffff     call sym.imp.__snprintf_chk
0x0000597e      4883c420       add rsp, 0x20
0x00005982      83f87f         cmp eax, 0x7f
0x00005985      0f872dffffff   ja 0x58b8
0x0000598b      4883eb80       sub rbx, 0xffffffffffffff80
0x0000598f      4983ef80       sub r15, 0xffffffffffffff80
0x00005993      4c39f3         cmp rbx, r14
0x00005996      0f8401ffffff   je 0x589d
0x0000599c      4d85ed         test r13, r13
0x0000599f      759f           jne 0x5940
0x000059a1      488d15e44501.  lea rdx, [0x00019f8c]                   ; "%s"
0x000059a8      4c89e1         mov rcx, r12
0x000059ab      be80000000     mov esi, 0x80
0x000059b0      4c89ff         mov rdi, r15                            ; .//src:2417
0x000059b3      31c0           xor eax, eax
0x000059b5      e8c6daffff     call sym.imp.snprintf                   ; .//src:2419
0x000059ba      ebc6           jmp 0x5982
0x000059bc      e85fdaffff     call sym.imp.__stack_chk_fail
0x000059c1      0f1f440000     nop dword [rax + rax]
0x000059c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- queue_directory:
0x000059d0      4155           push r13
0x000059d2      4154           push r12
0x000059d4      4989f4         mov r12, rsi
0x000059d7      55             push rbp
0x000059d8      53             push rbx
0x000059d9      4889fd         mov rbp, rdi
0x000059dc      bf20000000     mov edi, 0x20                           ; "@"
0x000059e1      4189d5         mov r13d, edx
0x000059e4      4883ec08       sub rsp, 8
0x000059e8      e8a3eb0000     call sym.xmalloc
0x000059ed      4889c3         mov rbx, rax
0x000059f0      31c0           xor eax, eax
0x000059f2      4d85e4         test r12, r12
0x000059f5      7408           je 0x59ff
0x000059f7      4c89e7         mov rdi, r12
0x000059fa      e8c1ed0000     call sym.xstrdup
0x000059ff      48894308       mov qword [rbx + 8], rax
0x00005a03      31c0           xor eax, eax
0x00005a05      4885ed         test rbp, rbp
0x00005a08      7408           je 0x5a12
0x00005a0a      4889ef         mov rdi, rbp                            ; .//src:3771
0x00005a0d      e8aeed0000     call sym.xstrdup
0x00005a12      488903         mov qword [rbx], rax
0x00005a15      488b0564b921.  mov rax, qword [obj.pending_dirs]       ; [0x221380:8]=0
0x00005a1c      44886b10       mov byte [rbx + 0x10], r13b
0x00005a20      48891d59b921.  mov qword [obj.pending_dirs], rbx       ; [0x221380:8]=0
0x00005a27      48894318       mov qword [rbx + 0x18], rax
0x00005a2b      4883c408       add rsp, 8
0x00005a2f      5b             pop rbx
0x00005a30      5d             pop rbp
0x00005a31      415c           pop r12
0x00005a33      415d           pop r13
0x00005a35      c3             ret                                     ; stdio2.h:-582
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_size:
0x00005a40      488b4648       mov rax, qword [rsi + 0x48]
0x00005a44      48394748       cmp qword [rdi + 0x48], rax
0x00005a48      7f26           jg 0x5a70                               ; .//src:3772
0x00005a4a      7c14           jl 0x5a60
0x00005a4c      488b36         mov rsi, qword [rsi]
0x00005a4f      488b3f         mov rdi, qword [rdi]
0x00005a52      e939dbffff     jmp sym.imp.strcmp
0x00005a57      660f1f840000.  nop word [rax + rax]
0x00005a60      b801000000     mov eax, 1
0x00005a65      c3             ret
0x00005a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005a75      c3             ret
0x00005a76      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:3773
;-- rev_strcmp_size:
0x00005a80      488b5748       mov rdx, qword [rdi + 0x48]
0x00005a84      48395648       cmp qword [rsi + 0x48], rdx
0x00005a88      4889f0         mov rax, rsi
0x00005a8b      7f23           jg 0x5ab0
0x00005a8d      7c11           jl 0x5aa0
0x00005a8f      488b37         mov rsi, qword [rdi]
0x00005a92      488b38         mov rdi, qword [rax]
0x00005a95      e9f6daffff     jmp sym.imp.strcmp
0x00005a9a      660f1f440000   nop word [rax + rax]
0x00005aa0      b801000000     mov eax, 1
0x00005aa5      c3             ret
0x00005aa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005ab0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005ab5      c3             ret
0x00005ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_name:
0x00005ac0      488b36         mov rsi, qword [rsi]
0x00005ac3      488b3f         mov rdi, qword [rdi]
0x00005ac6      e9c5daffff     jmp sym.imp.strcmp
0x00005acb      0f1f440000     nop dword [rax + rax]
;-- rev_strcmp_name:
0x00005ad0      4889f0         mov rax, rsi
0x00005ad3      488b37         mov rsi, qword [rdi]
0x00005ad6      488b38         mov rdi, qword [rax]
0x00005ad9      e9b2daffff     jmp sym.imp.strcmp
0x00005ade      6690           nop
;-- needs_quoting:
0x00005ae0      55             push rbp
0x00005ae1      53             push rbx
0x00005ae2      4889fb         mov rbx, rdi
0x00005ae5      4889da         mov rdx, rbx
0x00005ae8      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00005aef      be02000000     mov esi, 2
0x00005af4      4883ec18       sub rsp, 0x18
0x00005af8      4c8b05d1b721.  mov r8, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x00005aff      488d7c2406     lea rdi, [rsp + 6]
0x00005b04      64488b042528.  mov rax, qword fs:[0x28]
0x00005b0d      4889442408     mov qword [rsp + 8], rax
0x00005b12      31c0           xor eax, eax
0x00005b14      e8c7db0000     call sym.quotearg_buffer
0x00005b19      0fb6542406     movzx edx, byte [rsp + 6]
0x00005b1e      3813           cmp byte [rbx], dl
0x00005b20      741e           je 0x5b40
0x00005b22      b801000000     mov eax, 1
0x00005b27      488b4c2408     mov rcx, qword [rsp + 8]
0x00005b2c      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005b35      751c           jne 0x5b53
0x00005b37      4883c418       add rsp, 0x18
0x00005b3b      5b             pop rbx                                 ; .//src:3128
0x00005b3c      5d             pop rbp
0x00005b3d      c3             ret
0x00005b3e      6690           nop
0x00005b40      4889c5         mov rbp, rax
0x00005b43      4889df         mov rdi, rbx
0x00005b46      e8b5d8ffff     call sym.imp.strlen
0x00005b4b      4839e8         cmp rax, rbp
0x00005b4e      0f95c0         setne al
0x00005b51      ebd4           jmp 0x5b27                              ; .//src:3133
0x00005b53      e8c8d8ffff     call sym.imp.__stack_chk_fail
0x00005b58      0f1f84000000.  nop dword [rax + rax]
;-- file_escape:
0x00005b60      4156           push r14
0x00005b62      4155           push r13
0x00005b64      4154           push r12
0x00005b66      55             push rbp
0x00005b67      4189f4         mov r12d, esi
0x00005b6a      53             push rbx
0x00005b6b      4889fb         mov rbx, rdi
0x00005b6e      e88dd8ffff     call sym.imp.strlen
0x00005b73      488d4801       lea rcx, [rax + 1]
0x00005b77      b803000000     mov eax, 3
0x00005b7c      48f7e1         mul rcx                                 ; .//src:3101
0x00005b7f      0f809d000000   jo 0x5c22
0x00005b85      31f6           xor esi, esi
0x00005b87      4885c0         test rax, rax
0x00005b8a      0f889c000000   js 0x5c2c                               ; .//src:3100
0x00005b90      4885f6         test rsi, rsi
0x00005b93      0f8593000000   jne 0x5c2c
0x00005b99      488d3c49       lea rdi, [rcx + rcx*2]
0x00005b9d      4c8d353cb421.  lea r14, obj.RFC3986                    ; 0x220fe0
0x00005ba4      e8e7e90000     call sym.xmalloc
0x00005ba9      4989c5         mov r13, rax
0x00005bac      4889c5         mov rbp, rax
0x00005baf      0fb603         movzx eax, byte [rbx]
0x00005bb2      84c0           test al, al
0x00005bb4      7428           je 0x5bde
0x00005bb6      4883c301       add rbx, 1
0x00005bba      3c2f           cmp al, 0x2f
0x00005bbc      7505           jne 0x5bc3
0x00005bbe      4584e4         test r12b, r12b
0x00005bc1      7555           jne 0x5c18
0x00005bc3      0fb6d0         movzx edx, al
0x00005bc6      41803c1600     cmp byte [r14 + rdx], 0
0x00005bcb      4989d0         mov r8, rdx
0x00005bce      7420           je 0x5bf0
0x00005bd0      884500         mov byte [rbp], al
0x00005bd3      0fb603         movzx eax, byte [rbx]
0x00005bd6      4883c501       add rbp, 1
0x00005bda      84c0           test al, al
0x00005bdc      75d8           jne 0x5bb6
0x00005bde      c6450000       mov byte [rbp], 0
0x00005be2      4c89e8         mov rax, r13
0x00005be5      5b             pop rbx
0x00005be6      5d             pop rbp
0x00005be7      415c           pop r12
0x00005be9      415d           pop r13
0x00005beb      415e           pop r14
0x00005bed      c3             ret
0x00005bee      6690           nop
0x00005bf0      488d0d591c01.  lea rcx, str.02x                        ; 0x17850 ; "%%%02x"
0x00005bf7      4889ef         mov rdi, rbp
0x00005bfa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c01      be01000000     mov esi, 1
0x00005c06      31c0           xor eax, eax
0x00005c08      4883c503       add rbp, 3
0x00005c0c      e85fdcffff     call sym.imp.__sprintf_chk
0x00005c11      eb9c           jmp 0x5baf
0x00005c13      0f1f440000     nop dword [rax + rax]
0x00005c18      c645002f       mov byte [rbp], 0x2f                    ; stdio2.h:-582 ; '/'
0x00005c1c      4883c501       add rbp, 1
0x00005c20      eb8d           jmp 0x5baf
0x00005c22      be01000000     mov esi, 1
0x00005c27      e95bffffff     jmp 0x5b87
0x00005c2c      e8afeb0000     call sym.xalloc_die                     ; .//src:3114
0x00005c31      0f1f440000     nop dword [rax + rax]
0x00005c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- sort_files:
0x00005c40      53             push rbx
0x00005c41      488b1d68b721.  mov rbx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005c48      4889d8         mov rax, rbx
0x00005c4b      48d1e8         shr rax, 1
0x00005c4e      4801d8         add rax, rbx
0x00005c51      483b0540b721.  cmp rax, qword [obj.sorted_file_alloc]  ; [0x221398:8]=0
0x00005c58      0f87f2000000   ja 0x5d50
0x00005c5e      4885db         test rbx, rbx
0x00005c61      742f           je 0x5c92
0x00005c63      488d0c9b       lea rcx, [rbx + rbx*4]
0x00005c67      488b0552b721.  mov rax, qword [obj.cwd_file]           ; [0x2213c0:8]=0
0x00005c6e      488b152bb721.  mov rdx, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005c75      488d0c89       lea rcx, [rcx + rcx*4]
0x00005c79      488d0cc8       lea rcx, [rax + rcx*8]
0x00005c7d      0f1f00         nop dword [rax]
0x00005c80      488902         mov qword [rdx], rax
0x00005c83      4805c8000000   add rax, 0xc8
0x00005c89      4883c208       add rdx, 8
0x00005c8d      4839c1         cmp rcx, rax
0x00005c90      75ee           jne 0x5c80
0x00005c92      833d97b62100.  cmp dword [obj.sort_type], 0xffffffff   ; [0x221330:4]=0
0x00005c99      0f84ad000000   je 0x5d4c
0x00005c9f      488d3d5aa621.  lea rdi, obj.failed_strcoll             ; .//src:2886 ; 0x220300
0x00005ca6      e8b5d8ffff     call sym.imp._setjmp
0x00005cab      85c0           test eax, eax
0x00005cad      8b0d7db62100   mov ecx, dword [obj.sort_type]          ; [0x221330:4]=0
0x00005cb3      744b           je 0x5d00
0x00005cb5      83f903         cmp ecx, 3
0x00005cb8      0f84e9000000   je 0x5da7
0x00005cbe      488b35ebb621.  mov rsi, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005cc5      488b3dd4b621.  mov rdi, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005ccc      4885f6         test rsi, rsi
0x00005ccf      7422           je 0x5cf3                               ; .//src:2904
0x00005cd1      488b15e8b621.  mov rdx, qword [obj.cwd_file]           ; [0x2213c0:8]=0
0x00005cd8      4c8d04f7       lea r8, [rdi + rsi*8]
0x00005cdc      4889f8         mov rax, rdi
0x00005cdf      90             nop
0x00005ce0      488910         mov qword [rax], rdx
0x00005ce3      4883c008       add rax, 8
0x00005ce7      4881c2c80000.  add rdx, 0xc8
0x00005cee      4c39c0         cmp rax, r8
0x00005cf1      75ed           jne 0x5ce0
0x00005cf3      b801000000     mov eax, 1
0x00005cf8      eb14           jmp 0x5d0e
0x00005cfa      660f1f440000   nop word [rax + rax]
0x00005d00      488b35a9b621.  mov rsi, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005d07      488b3d92b621.  mov rdi, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005d0e      83f904         cmp ecx, 4
0x00005d11      ba00000000     mov edx, 0
0x00005d16      0f441517b621.  cmove edx, dword [obj.time_type]
0x00005d1d      4898           cdqe
0x00005d1f      440fb605cdb5.  movzx r8d, byte [obj.directories_first] ; .//src:2905 ; [0x2212f4:1]=0
0x00005d27      01ca           add edx, ecx
0x00005d29      488d1450       lea rdx, [rax + rdx*2]
0x00005d2d      0fb605fbb521.  movzx eax, byte [obj.sort_reverse]      ; [0x22132f:1]=0
0x00005d34      488d0450       lea rax, [rax + rdx*2]
0x00005d38      498d1440       lea rdx, [r8 + rax*2]
0x00005d3c      488d051d9321.  lea rax, obj.sort_functions             ; 0x21f060
0x00005d43      488b14d0       mov rdx, qword [rax + rdx*8]
0x00005d47      e844a70000     call sym.mpsort
0x00005d4c      5b             pop rbx
0x00005d4d      c3             ret
0x00005d4e      6690           nop
0x00005d50      488b3d49b621.  mov rdi, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005d57      e824dbffff     call sym..plt.got
0x00005d5c      ba18000000     mov edx, 0x18
0x00005d61      31c9           xor ecx, ecx
0x00005d63      4889d0         mov rax, rdx
0x00005d66      48f7e3         mul rbx
0x00005d69      705b           jo 0x5dc6                               ; .//src:2732
0x00005d6b      4885c0         test rax, rax
0x00005d6e      b801000000     mov eax, 1
0x00005d73      480f48c8       cmovs rcx, rax                          ; .//src:2737
0x00005d77      4885c9         test rcx, rcx
0x00005d7a      7551           jne 0x5dcd
0x00005d7c      488d3c5b       lea rdi, [rbx + rbx*2]
0x00005d80      48c1e703       shl rdi, 3
0x00005d84      e807e80000     call sym.xmalloc
0x00005d89      488b1d20b621.  mov rbx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005d90      48890509b621.  mov qword [obj.sorted_file], rax        ; [0x2213a0:8]=0
0x00005d97      488d045b       lea rax, [rbx + rbx*2]
0x00005d9b      488905f6b521.  mov qword [obj.sorted_file_alloc], rax  ; [0x221398:8]=0
0x00005da2      e9b7feffff     jmp 0x5c5e
0x00005da7      488d0dfa0801.  lea rcx, obj.__PRETTY_FUNCTION__.10745  ; 0x166a8 ; "sort_files"
0x00005dae      488d35a21a01.  lea rsi, str..._coreutils_8.31_src_ls.c ; 0x17857 ; "../coreutils-8.31/src/ls.c"
0x00005db5      488d3db61a01.  lea rdi, str.sort_type____sort_version  ; 0x17872 ; "sort_type != sort_version"
0x00005dbc      baea0e0000     mov edx, 0xeea
0x00005dc1      e80ad7ffff     call sym.imp.__assert_fail
0x00005dc6      b901000000     mov ecx, 1
0x00005dcb      eb9e           jmp 0x5d6b
0x00005dcd      e80eea0000     call sym.xalloc_die
0x00005dd2      0f1f4000       nop dword [rax]
0x00005dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll:
0x00005de0      55             push rbp
0x00005de1      53             push rbx
0x00005de2      4889f5         mov rbp, rsi                            ; .//src:2766
0x00005de5      4889fb         mov rbx, rdi
0x00005de8      4883ec08       sub rsp, 8
0x00005dec      e8afd4ffff     call sym.imp.__errno_location
0x00005df1      c70000000000   mov dword [rax], 0                      ; .//src:2769
0x00005df7      4883c408       add rsp, 8
0x00005dfb      4889ee         mov rsi, rbp
0x00005dfe      4889df         mov rdi, rbx
0x00005e01      5b             pop rbx
0x00005e02      5d             pop rbp                                 ; .//src:2766
0x00005e03      e998d8ffff     jmp sym.imp.strcoll
0x00005e08      0f1f84000000.  nop dword [rax + rax]
;-- xstrcoll_size:
0x00005e10      488b4648       mov rax, qword [rsi + 0x48]
0x00005e14      48394748       cmp qword [rdi + 0x48], rax
0x00005e18      7f16           jg 0x5e30
0x00005e1a      b801000000     mov eax, 1
0x00005e1f      7d07           jge 0x5e28                              ; .//src:2747
0x00005e21      f3c3           ret
0x00005e23      0f1f440000     nop dword [rax + rax]
0x00005e28      488b36         mov rsi, qword [rsi]                    ; .//src:2713
0x00005e2b      488b3f         mov rdi, qword [rdi]
0x00005e2e      ebb0           jmp sym.xstrcoll
0x00005e30      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/xalloc.h:-519 ; -1
0x00005e35      c3             ret                                     ; .//src:2750
0x00005e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_xstrcoll_size:
0x00005e40      488b4748       mov rax, qword [rdi + 0x48]
0x00005e44      48394648       cmp qword [rsi + 0x48], rax
0x00005e48      4889f2         mov rdx, rsi                            ; .//src:2755
0x00005e4b      7f23           jg 0x5e70
0x00005e4d      b801000000     mov eax, 1
0x00005e52      7d0c           jge 0x5e60
0x00005e54      f3c3           ret
0x00005e56      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e60      488b37         mov rsi, qword [rdi]
0x00005e63      488b3a         mov rdi, qword [rdx]
0x00005e66      e975ffffff     jmp sym.xstrcoll
0x00005e6b      0f1f440000     nop dword [rax + rax]
0x00005e70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005e75      c3             ret
0x00005e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll_name:
0x00005e80      488b36         mov rsi, qword [rsi]
0x00005e83      488b3f         mov rdi, qword [rdi]
0x00005e86      e955ffffff     jmp sym.xstrcoll
0x00005e8b      0f1f440000     nop dword [rax + rax]
;-- rev_xstrcoll_name:
0x00005e90      4889f0         mov rax, rsi
0x00005e93      488b37         mov rsi, qword [rdi]
0x00005e96      488b38         mov rdi, qword [rax]
0x00005e99      e942ffffff     jmp sym.xstrcoll
0x00005e9e      6690           nop
;-- rev_xstrcoll_version:
0x00005ea0      4889f0         mov rax, rsi
0x00005ea3      488b37         mov rsi, qword [rdi]
0x00005ea6      488b38         mov rdi, qword [rax]
0x00005ea9      e9a2730000     jmp sym.filevercmp
0x00005eae      6690           nop
;-- xstrcoll_version:
0x00005eb0      488b36         mov rsi, qword [rsi]
0x00005eb3      488b3f         mov rdi, qword [rdi]
0x00005eb6      e995730000     jmp sym.filevercmp
0x00005ebb      0f1f440000     nop dword [rax + rax]
;-- extract_dirs_from_files:
0x00005ec0      4157           push r15
0x00005ec2      4156           push r14
0x00005ec4      4989fe         mov r14, rdi
0x00005ec7      4155           push r13
0x00005ec9      4154           push r12
0x00005ecb      440fb6ee       movzx r13d, sil
0x00005ecf      55             push rbp                                ; .//src:4179
0x00005ed0      53             push rbx
0x00005ed1      4883ec08       sub rsp, 8
0x00005ed5      4885ff         test rdi, rdi
0x00005ed8      7416           je 0x5ef0
0x00005eda      48833de6b421.  cmp qword [obj.active_dir_set], 0       ; [0x2213c8:8]=0
0x00005ee2      740c           je 0x5ef0
0x00005ee4      4889fe         mov rsi, rdi
0x00005ee7      31d2           xor edx, edx                            ; .//src:4182
0x00005ee9      31ff           xor edi, edi
0x00005eeb      e8e0faffff     call sym.queue_directory
0x00005ef0      488b1db9b421.  mov rbx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005ef7      4c8d24ddf8ff.  lea r12, [rbx*8 - 8]
0x00005eff      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/src/system.h:-679
0x00005f03      4883fbff       cmp rbx, 0xffffffffffffffff
0x00005f07      7430           je 0x5f39
0x00005f09      0f1f80000000.  nop dword [rax]
0x00005f10      488b0589b421.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005f17      4a8b2c20       mov rbp, qword [rax + r12]
0x00005f1b      8b85a8000000   mov eax, dword [rbp + 0xa8]
0x00005f21      83f803         cmp eax, 3
0x00005f24      746a           je 0x5f90
0x00005f26      83f809         cmp eax, 9
0x00005f29      7465           je 0x5f90
0x00005f2b      4883eb01       sub rbx, 1
0x00005f2f      4983ec08       sub r12, 8
0x00005f33      4883fbff       cmp rbx, 0xffffffffffffffff
0x00005f37      75d7           jne 0x5f10
0x00005f39      488b1570b421.  mov rdx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00005f40      4885d2         test rdx, rdx
0x00005f43      7433           je 0x5f78
0x00005f45      488b3554b421.  mov rsi, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00005f4c      488d3cd6       lea rdi, [rsi + rdx*8]
0x00005f50      4889f0         mov rax, rsi
0x00005f53      31d2           xor edx, edx
0x00005f55      0f1f00         nop dword [rax]
0x00005f58      488b08         mov rcx, qword [rax]
0x00005f5b      83b9a8000000.  cmp dword [rcx + 0xa8], 9
0x00005f62      48890cd6       mov qword [rsi + rdx*8], rcx
0x00005f66      0f95c1         setne cl
0x00005f69      4883c008       add rax, 8
0x00005f6d      0fb6c9         movzx ecx, cl
0x00005f70      4801ca         add rdx, rcx
0x00005f73      4839c7         cmp rdi, rax
0x00005f76      75e0           jne 0x5f58
0x00005f78      48891531b421.  mov qword [obj.cwd_n_used], rdx         ; [0x2213b0:8]=0
0x00005f7f      4883c408       add rsp, 8
0x00005f83      5b             pop rbx
0x00005f84      5d             pop rbp
0x00005f85      415c           pop r12
0x00005f87      415d           pop r13
0x00005f89      415e           pop r14
0x00005f8b      415f           pop r15
0x00005f8d      c3             ret
0x00005f8e      6690           nop
0x00005f90      4d85f6         test r14, r14
0x00005f93      4c8b7d00       mov r15, qword [rbp]
0x00005f97      7467           je 0x6000
0x00005f99      4c89ff         mov rdi, r15
0x00005f9c      e86f6d0000     call sym.last_component
0x00005fa1      80382e         cmp byte [rax], 0x2e
0x00005fa4      7472           je 0x6018
0x00005fa6      41803f2f       cmp byte [r15], 0x2f
0x00005faa      7454           je 0x6000
0x00005fac      4c89fe         mov rsi, r15
0x00005faf      31d2           xor edx, edx
0x00005fb1      4c89f7         mov rdi, r14
0x00005fb4      e8a7700000     call sym.file_name_concat
0x00005fb9      488b7508       mov rsi, qword [rbp + 8]
0x00005fbd      4989c7         mov r15, rax
0x00005fc0      4889c7         mov rdi, rax
0x00005fc3      4489ea         mov edx, r13d
0x00005fc6      e805faffff     call sym.queue_directory
0x00005fcb      4c89ff         mov rdi, r15
0x00005fce      e8add8ffff     call sym..plt.got
0x00005fd3      83bda8000000.  cmp dword [rbp + 0xa8], 9
0x00005fda      0f854bffffff   jne 0x5f2b
0x00005fe0      488b7d00       mov rdi, qword [rbp]
0x00005fe4      e897d8ffff     call sym..plt.got
0x00005fe9      488b7d08       mov rdi, qword [rbp + 8]
0x00005fed      e88ed8ffff     call sym..plt.got
0x00005ff2      488b7d10       mov rdi, qword [rbp + 0x10]
0x00005ff6      e885d8ffff     call sym..plt.got                       ; ../coreutils-8.31/src/.c:-682
0x00005ffb      e92bffffff     jmp 0x5f2b
0x00006000      488b7508       mov rsi, qword [rbp + 8]
0x00006004      4489ea         mov edx, r13d
0x00006007      4c89ff         mov rdi, r15
0x0000600a      e8c1f9ffff     call sym.queue_directory
0x0000600f      ebc2           jmp 0x5fd3
0x00006011      0f1f80000000.  nop dword [rax]
0x00006018      31d2           xor edx, edx
0x0000601a      8078012e       cmp byte [rax + 1], 0x2e
0x0000601e      0f94c2         sete dl
0x00006021      0fb6441001     movzx eax, byte [rax + rdx + 1]
0x00006026      84c0           test al, al
0x00006028      0f84fdfeffff   je 0x5f2b
0x0000602e      3c2f           cmp al, 0x2f
0x00006030      0f84f5feffff   je 0x5f2b
0x00006036      e96bffffff     jmp 0x5fa6
0x0000603b      0f1f440000     nop dword [rax + rax]
;-- indent:
0x00006040      4839f7         cmp rdi, rsi
0x00006043      0f839f000000   jae 0x60e8
0x00006049      4154           push r12
0x0000604b      4989f4         mov r12, rsi                            ; .//src:272
0x0000604e      55             push rbp
0x0000604f      53             push rbx
0x00006050      4889fb         mov rbx, rdi
0x00006053      eb41           jmp 0x6096
0x00006055      0f1f00         nop dword [rax]
0x00006058      31d2           xor edx, edx
0x0000605a      4c89e0         mov rax, r12                            ; .//src:278
0x0000605d      48f7f1         div rcx
0x00006060      31d2           xor edx, edx
0x00006062      4989c1         mov r9, rax
0x00006065      4889e8         mov rax, rbp
0x00006068      48f7f1         div rcx
0x0000606b      4939c1         cmp r9, rax
0x0000606e      7645           jbe 0x60b5
0x00006070      4c39c6         cmp rsi, r8
0x00006073      737b           jae 0x60f0
0x00006075      488d4601       lea rax, [rsi + 1]
0x00006079      48894728       mov qword [rdi + 0x28], rax
0x0000607d      c60609         mov byte [rsi], 9
0x00006080      4889d8         mov rax, rbx                            ; .//src:3149
0x00006083      31d2           xor edx, edx
0x00006085      48f7f1         div rcx
0x00006088      4801d9         add rcx, rbx
0x0000608b      4889cb         mov rbx, rcx
0x0000608e      4829d3         sub rbx, rdx
0x00006091      4c39e3         cmp rbx, r12                            ; .//src:3150
0x00006094      7337           jae 0x60cd
0x00006096      488b0d23b221.  mov rcx, qword [obj.tabsize]            ; [0x2212c0:8]=0
0x0000609d      488b3de4a121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000060a4      488d6b01       lea rbp, [rbx + 1]
0x000060a8      4885c9         test rcx, rcx
0x000060ab      488b7728       mov rsi, qword [rdi + 0x28]
0x000060af      4c8b4730       mov r8, qword [rdi + 0x30]
0x000060b3      75a3           jne 0x6058
0x000060b5      4c39c6         cmp rsi, r8
0x000060b8      731e           jae 0x60d8
0x000060ba      488d4601       lea rax, [rsi + 1]
0x000060be      48894728       mov qword [rdi + 0x28], rax
0x000060c2      c60620         mov byte [rsi], 0x20                    ; [0x20:1]=64 ; "@"
0x000060c5      4889eb         mov rbx, rbp
0x000060c8      4c39e3         cmp rbx, r12                            ; ../coreutils-8.31/src/system.h:-679
0x000060cb      72c9           jb 0x6096
0x000060cd      5b             pop rbx
0x000060ce      5d             pop rbp
0x000060cf      415c           pop r12
0x000060d1      c3             ret
0x000060d2      660f1f440000   nop word [rax + rax]
0x000060d8      be20000000     mov esi, 0x20                           ; "@"
0x000060dd      e8aed3ffff     call sym.imp.__overflow
0x000060e2      ebe1           jmp 0x60c5
0x000060e4      0f1f4000       nop dword [rax]
0x000060e8      f3c3           ret
0x000060ea      660f1f440000   nop word [rax + rax]
0x000060f0      be09000000     mov esi, 9
0x000060f5      e896d3ffff     call sym.imp.__overflow
0x000060fa      488b0dbfb121.  mov rcx, qword [obj.tabsize]            ; [0x2212c0:8]=0
0x00006101      e97affffff     jmp 0x6080
0x00006106      662e0f1f8400.  nop word cs:[rax + rax]
;-- dired_dump_obstack:
0x00006110      4154           push r12
0x00006112      55             push rbp
0x00006113      53             push rbx
0x00006114      488b4618       mov rax, qword [rsi + 0x18]
0x00006118      488b5e10       mov rbx, qword [rsi + 0x10]
0x0000611c      4889c5         mov rbp, rax
0x0000611f      4829dd         sub rbp, rbx
0x00006122      48c1ed03       shr rbp, 3
0x00006126      4885ed         test rbp, rbp
0x00006129      0f8488000000   je 0x61b7
0x0000612f      4839d8         cmp rax, rbx                            ; .//src:3172
0x00006132      0f848a000000   je 0x61c2
0x00006138      488b5630       mov rdx, qword [rsi + 0x30]
0x0000613c      488b4e20       mov rcx, qword [rsi + 0x20]
0x00006140      4801d0         add rax, rdx
0x00006143      48f7d2         not rdx
0x00006146      4989c8         mov r8, rcx
0x00006149      4821d0         and rax, rdx
0x0000614c      488b5608       mov rdx, qword [rsi + 8]                ; .//src:3175
0x00006150      48894618       mov qword [rsi + 0x18], rax             ; .//src:3173
0x00006154      4929d0         sub r8, rdx
0x00006157      4829d0         sub rax, rdx
0x0000615a      4c39c0         cmp rax, r8
0x0000615d      775d           ja 0x61bc
0x0000615f      488b4618       mov rax, qword [rsi + 0x18]
0x00006163      4c8d24eb       lea r12, [rbx + rbp*8]
0x00006167      488d2d1e1701.  lea rbp, [0x0001788c]                   ; " %lu"
0x0000616e      48894610       mov qword [rsi + 0x10], rax
0x00006172      488b350fa121.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00006179      e8f2d3ffff     call sym.imp.fputs_unlocked             ; .//src:516
0x0000617e      6690           nop
0x00006180      488b13         mov rdx, qword [rbx]
0x00006183      31c0           xor eax, eax
0x00006185      4889ee         mov rsi, rbp
0x00006188      bf01000000     mov edi, 1                              ; .//src:517
0x0000618d      4883c308       add rbx, 8
0x00006191      e87ad5ffff     call sym.imp.__printf_chk
0x00006196      4c39e3         cmp rbx, r12                            ; .//src:1903
0x00006199      75e5           jne 0x6180                              ; .//src:1902
0x0000619b      488b3de6a021.  mov rdi, qword [obj.stdout]             ; .//src:1903 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000061a2      488b4728       mov rax, qword [rdi + 0x28]
0x000061a6      483b4730       cmp rax, qword [rdi + 0x30]
0x000061aa      731f           jae 0x61cb
0x000061ac      488d5001       lea rdx, [rax + 1]
0x000061b0      48895728       mov qword [rdi + 0x28], rdx
0x000061b4      c6000a         mov byte [rax], 0xa
0x000061b7      5b             pop rbx
0x000061b8      5d             pop rbp
0x000061b9      415c           pop r12
0x000061bb      c3             ret
0x000061bc      48894e18       mov qword [rsi + 0x18], rcx
0x000061c0      eb9d           jmp 0x615f
0x000061c2      804e5002       or byte [rsi + 0x50], 2                 ; .//src:1891
0x000061c6      e96dffffff     jmp 0x6138
0x000061cb      5b             pop rbx
0x000061cc      5d             pop rbp                                 ; .//src:1905
0x000061cd      415c           pop r12
0x000061cf      be0a000000     mov esi, 0xa
0x000061d4      e9b7d2ffff     jmp sym.imp.__overflow
0x000061d9      0f1f80000000.  nop dword [rax]
;-- format_user_or_group:
0x000061e0      55             push rbp
0x000061e1      53             push rbx
0x000061e2      89d3           mov ebx, edx                            ; .//src:1893
0x000061e4      4883ec08       sub rsp, 8
0x000061e8      4885ff         test rdi, rdi
0x000061eb      0f848f000000   je 0x6280
0x000061f1      31f6           xor esi, esi
0x000061f3      4889fd         mov rbp, rdi
0x000061f6      e825a00000     call sym.gnu_mbswidth
0x000061fb      488b3586a021.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00006202      29c3           sub ebx, eax
0x00006204      b800000000     mov eax, 0
0x00006209      0f48d8         cmovs ebx, eax
0x0000620c      4889ef         mov rdi, rbp
0x0000620f      e85cd3ffff     call sym.imp.fputs_unlocked
0x00006214      4889ef         mov rdi, rbp
0x00006217      4863eb         movsxd rbp, ebx
0x0000621a      e8e1d1ffff     call sym.imp.strlen
0x0000621f      4801c5         add rbp, rax
0x00006222      660f1f440000   nop word [rax + rax]
0x00006228      488b3d59a021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000622f      488b5728       mov rdx, qword [rdi + 0x28]
0x00006233      483b5730       cmp rdx, qword [rdi + 0x30]             ; .//src:2904
0x00006237      7337           jae 0x6270
0x00006239      488d4a01       lea rcx, [rdx + 1]
0x0000623d      48894f28       mov qword [rdi + 0x28], rcx
0x00006241      c60220         mov byte [rdx], 0x20                    ; [0x20:1]=64 ; "@"
0x00006244      83eb01         sub ebx, 1
0x00006247      83fbff         cmp ebx, 0xffffffff                     ; .//src:2659
0x0000624a      75dc           jne 0x6228
0x0000624c      488b05a5af21.  mov rax, qword [obj.dired_pos]          ; [0x2211f8:8]=0
0x00006253      488d440501     lea rax, [rbp + rax + 1]
0x00006258      48890599af21.  mov qword [obj.dired_pos], rax          ; [0x2211f8:8]=0
0x0000625f      4883c408       add rsp, 8
0x00006263      5b             pop rbx
0x00006264      5d             pop rbp
0x00006265      c3             ret
0x00006266      662e0f1f8400.  nop word cs:[rax + rax]
0x00006270      be20000000     mov esi, 0x20                           ; "@"
0x00006275      e816d2ffff     call sym.imp.__overflow
0x0000627a      ebc8           jmp 0x6244
0x0000627c      0f1f4000       nop dword [rax]
0x00006280      4889f1         mov rcx, rsi
0x00006283      488d35071601.  lea rsi, str.lu                         ; 0x17891 ; "%*lu "
0x0000628a      bf01000000     mov edi, 1
0x0000628f      31c0           xor eax, eax
0x00006291      4863eb         movsxd rbp, ebx
0x00006294      e877d4ffff     call sym.imp.__printf_chk
0x00006299      ebb1           jmp 0x624c
0x0000629b      0f1f440000     nop dword [rax + rax]
;-- format_user:
0x000062a0      53             push rbx
0x000062a1      488d05ef1501.  lea rax, [0x00017897]                   ; "?"
0x000062a8      89fb           mov ebx, edi
0x000062aa      4883ec10       sub rsp, 0x10
0x000062ae      84d2           test dl, dl
0x000062b0      740b           je 0x62bd
0x000062b2      31c0           xor eax, eax
0x000062b4      803d72b02100.  cmp byte [obj.numeric_ids], 0           ; [0x22132d:1]=0
0x000062bb      7413           je 0x62d0
0x000062bd      4883c410       add rsp, 0x10
0x000062c1      89f2           mov edx, esi
0x000062c3      4889de         mov rsi, rbx
0x000062c6      5b             pop rbx
0x000062c7      4889c7         mov rdi, rax
0x000062ca      e911ffffff     jmp sym.format_user_or_group
0x000062cf      90             nop
0x000062d0      8974240c       mov dword [rsp + 0xc], esi
0x000062d4      e8e7940000     call sym.getuser
0x000062d9      8b74240c       mov esi, dword [rsp + 0xc]
0x000062dd      ebde           jmp 0x62bd
0x000062df      90             nop
;-- stophandler:
0x000062e0      8b0532af2100   mov eax, dword [obj.interrupt_signal]   ; [0x221218:4]=0
0x000062e6      85c0           test eax, eax
0x000062e8      750f           jne 0x62f9
0x000062ea      8b0524af2100   mov eax, dword [obj.stop_signal_count]  ; [0x221214:4]=0
0x000062f0      83c001         add eax, 1
0x000062f3      89051baf2100   mov dword [obj.stop_signal_count], eax  ; [0x221214:4]=0
0x000062f9      f3c3           ret
0x000062fb      0f1f440000     nop dword [rax + rax]
;-- file_failure:
0x00006300      4154           push r12
0x00006302      55             push rbp                                ; .//src:2904
0x00006303      4889f5         mov rbp, rsi
0x00006306      53             push rbx
0x00006307      4889d6         mov rsi, rdx                            ; .//src:2659
0x0000630a      89fb           mov ebx, edi
0x0000630c      bf04000000     mov edi, 4
0x00006311      e87ad70000     call sym.quotearg_style
0x00006316      4989c4         mov r12, rax
0x00006319      e882cfffff     call sym.imp.__errno_location           ; .//src:2904
0x0000631e      8b30           mov esi, dword [rax]
0x00006320      31ff           xor edi, edi
0x00006322      31c0           xor eax, eax
0x00006324      4c89e1         mov rcx, r12
0x00006327      4889ea         mov rdx, rbp
0x0000632a      e831d4ffff     call sym.imp.error
0x0000632f      84db           test bl, bl
0x00006331      7415           je 0x6348
0x00006333      c705d3ae2100.  mov dword [obj.exit_status], 2          ; [0x221210:4]=0
0x0000633d      5b             pop rbx
0x0000633e      5d             pop rbp
0x0000633f      415c           pop r12
0x00006341      c3             ret
0x00006342      660f1f440000   nop word [rax + rax]
0x00006348      8b05c2ae2100   mov eax, dword [obj.exit_status]        ; [0x221210:4]=0
0x0000634e      85c0           test eax, eax
0x00006350      75eb           jne 0x633d
0x00006352      5b             pop rbx
0x00006353      c705b3ae2100.  mov dword [obj.exit_status], 1          ; [0x221210:4]=0
0x0000635d      5d             pop rbp
0x0000635e      415c           pop r12
0x00006360      c3             ret
0x00006361      0f1f440000     nop dword [rax + rax]
0x00006366      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll_df_size:
0x00006370      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006376      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000637c      83fa03         cmp edx, 3
0x0000637f      0f94c0         sete al
0x00006382      83fa09         cmp edx, 9
0x00006385      0f94c2         sete dl
0x00006388      09d0           or eax, edx
0x0000638a      83f903         cmp ecx, 3
0x0000638d      7429           je 0x63b8
0x0000638f      83f909         cmp ecx, 9
0x00006392      7424           je 0x63b8
0x00006394      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000639a      81e200f00000   and edx, 0xf000
0x000063a0      84c0           test al, al
0x000063a2      7434           je 0x63d8
0x000063a4      81fa00400000   cmp edx, 0x4000
0x000063aa      7446           je 0x63f2
0x000063ac      b801000000     mov eax, 1
0x000063b1      c3             ret
0x000063b2      660f1f440000   nop word [rax + rax]
0x000063b8      84c0           test al, al
0x000063ba      7536           jne 0x63f2
0x000063bc      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000063c2      2500f00000     and eax, 0xf000
0x000063c7      3d00400000     cmp eax, 0x4000
0x000063cc      7424           je 0x63f2
0x000063ce      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000063d3      f3c3           ret
0x000063d5      0f1f00         nop dword [rax]
0x000063d8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000063de      2500f00000     and eax, 0xf000
0x000063e3      3d00400000     cmp eax, 0x4000
0x000063e8      74ba           je 0x63a4
0x000063ea      81fa00400000   cmp edx, 0x4000
0x000063f0      74dc           je 0x63ce
0x000063f2      488b4648       mov rax, qword [rsi + 0x48]
0x000063f6      48394748       cmp qword [rdi + 0x48], rax
0x000063fa      7fd2           jg 0x63ce
0x000063fc      b801000000     mov eax, 1                              ; .//src:2659
0x00006401      7cd0           jl 0x63d3
0x00006403      488b36         mov rsi, qword [rsi]
0x00006406      488b3f         mov rdi, qword [rdi]
0x00006409      e9d2f9ffff     jmp sym.xstrcoll
0x0000640e      6690           nop
;-- strcmp_df_size:
0x00006410      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006416      8b8fa8000000   mov ecx, dword [rdi + 0xa8]             ; .//src:2904
0x0000641c      83fa03         cmp edx, 3
0x0000641f      0f94c0         sete al
0x00006422      83fa09         cmp edx, 9
0x00006425      0f94c2         sete dl
0x00006428      09d0           or eax, edx
0x0000642a      83f903         cmp ecx, 3
0x0000642d      7429           je 0x6458
0x0000642f      83f909         cmp ecx, 9
0x00006432      7424           je 0x6458
0x00006434      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000643a      81e200f00000   and edx, 0xf000
0x00006440      84c0           test al, al
0x00006442      7434           je 0x6478
0x00006444      81fa00400000   cmp edx, 0x4000
0x0000644a      7446           je 0x6492
0x0000644c      b801000000     mov eax, 1
0x00006451      c3             ret
0x00006452      660f1f440000   nop word [rax + rax]
0x00006458      84c0           test al, al
0x0000645a      7536           jne 0x6492
0x0000645c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006462      2500f00000     and eax, 0xf000
0x00006467      3d00400000     cmp eax, 0x4000
0x0000646c      7424           je 0x6492
0x0000646e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006473      c3             ret
0x00006474      0f1f4000       nop dword [rax]
0x00006478      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000647e      2500f00000     and eax, 0xf000
0x00006483      3d00400000     cmp eax, 0x4000
0x00006488      74ba           je 0x6444
0x0000648a      81fa00400000   cmp edx, 0x4000
0x00006490      74dc           je 0x646e
0x00006492      488b4648       mov rax, qword [rsi + 0x48]
0x00006496      48394748       cmp qword [rdi + 0x48], rax
0x0000649a      7fd2           jg 0x646e
0x0000649c      7cae           jl 0x644c
0x0000649e      488b36         mov rsi, qword [rsi]
0x000064a1      488b3f         mov rdi, qword [rdi]
0x000064a4      e9e7d0ffff     jmp sym.imp.strcmp
0x000064a9      0f1f80000000.  nop dword [rax]
;-- rev_xstrcoll_df_size:
0x000064b0      4889f2         mov rdx, rsi
0x000064b3      8bb7a8000000   mov esi, dword [rdi + 0xa8]             ; .//src:2905
0x000064b9      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x000064bf      83f903         cmp ecx, 3
0x000064c2      0f94c0         sete al
0x000064c5      83f909         cmp ecx, 9
0x000064c8      0f94c1         sete cl
0x000064cb      09c8           or eax, ecx
0x000064cd      83fe03         cmp esi, 3
0x000064d0      7426           je 0x64f8
0x000064d2      83fe09         cmp esi, 9
0x000064d5      7421           je 0x64f8
0x000064d7      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x000064dd      81e100f00000   and ecx, 0xf000
0x000064e3      84c0           test al, al
0x000064e5      7431           je 0x6518
0x000064e7      81f900400000   cmp ecx, 0x4000                         ; .//src:2659
0x000064ed      7443           je 0x6532
0x000064ef      b801000000     mov eax, 1
0x000064f4      c3             ret
0x000064f5      0f1f00         nop dword [rax]
0x000064f8      84c0           test al, al
0x000064fa      7536           jne 0x6532
0x000064fc      8b82ac000000   mov eax, dword [rdx + 0xac]
0x00006502      2500f00000     and eax, 0xf000
0x00006507      3d00400000     cmp eax, 0x4000
0x0000650c      7424           je 0x6532
0x0000650e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006513      f3c3           ret
0x00006515      0f1f00         nop dword [rax]                         ; .//src:2905
0x00006518      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000651e      2500f00000     and eax, 0xf000
0x00006523      3d00400000     cmp eax, 0x4000
0x00006528      74bd           je 0x64e7
0x0000652a      81f900400000   cmp ecx, 0x4000
0x00006530      74dc           je 0x650e
0x00006532      488b4748       mov rax, qword [rdi + 0x48]
0x00006536      48394248       cmp qword [rdx + 0x48], rax
0x0000653a      7fd2           jg 0x650e
0x0000653c      b801000000     mov eax, 1
0x00006541      7cd0           jl 0x6513
0x00006543      488b37         mov rsi, qword [rdi]
0x00006546      488b3a         mov rdi, qword [rdx]
0x00006549      e992f8ffff     jmp sym.xstrcoll
0x0000654e      6690           nop
;-- rev_strcmp_df_size:
0x00006550      4889f2         mov rdx, rsi
0x00006553      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x00006559      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000655f      83f903         cmp ecx, 3
0x00006562      0f94c0         sete al
0x00006565      83f909         cmp ecx, 9
0x00006568      0f94c1         sete cl
0x0000656b      09c8           or eax, ecx
0x0000656d      83fe03         cmp esi, 3
0x00006570      7426           je 0x6598
0x00006572      83fe09         cmp esi, 9
0x00006575      7421           je 0x6598
0x00006577      8b8fac000000   mov ecx, dword [rdi + 0xac]             ; .//src:2659
0x0000657d      81e100f00000   and ecx, 0xf000
0x00006583      84c0           test al, al
0x00006585      7431           je 0x65b8
0x00006587      81f900400000   cmp ecx, 0x4000
0x0000658d      7443           je 0x65d2
0x0000658f      b801000000     mov eax, 1
0x00006594      c3             ret
0x00006595      0f1f00         nop dword [rax]
0x00006598      84c0           test al, al
0x0000659a      7536           jne 0x65d2
0x0000659c      8b82ac000000   mov eax, dword [rdx + 0xac]
0x000065a2      2500f00000     and eax, 0xf000
0x000065a7      3d00400000     cmp eax, 0x4000
0x000065ac      7424           je 0x65d2
0x000065ae      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000065b3      c3             ret
0x000065b4      0f1f4000       nop dword [rax]
0x000065b8      8b82ac000000   mov eax, dword [rdx + 0xac]
0x000065be      2500f00000     and eax, 0xf000
0x000065c3      3d00400000     cmp eax, 0x4000
0x000065c8      74bd           je 0x6587
0x000065ca      81f900400000   cmp ecx, 0x4000
0x000065d0      74dc           je 0x65ae
0x000065d2      488b4748       mov rax, qword [rdi + 0x48]
0x000065d6      48394248       cmp qword [rdx + 0x48], rax             ; .//src:2905
0x000065da      7fd2           jg 0x65ae
0x000065dc      7cb1           jl 0x658f
0x000065de      488b37         mov rsi, qword [rdi]
0x000065e1      488b3a         mov rdi, qword [rdx]
0x000065e4      e9a7cfffff     jmp sym.imp.strcmp
0x000065e9      0f1f80000000.  nop dword [rax]
;-- xstrcoll_df_name:
0x000065f0      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x000065f6      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x000065fc      83fa03         cmp edx, 3
0x000065ff      0f94c0         sete al
0x00006602      83fa09         cmp edx, 9
0x00006605      0f94c2         sete dl
0x00006608      09d0           or eax, edx
0x0000660a      83f903         cmp ecx, 3
0x0000660d      7429           je 0x6638
0x0000660f      83f909         cmp ecx, 9
0x00006612      7424           je 0x6638
0x00006614      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000661a      81e200f00000   and edx, 0xf000
0x00006620      84c0           test al, al
0x00006622      7434           je 0x6658
0x00006624      81fa00400000   cmp edx, 0x4000
0x0000662a      7446           je 0x6672
0x0000662c      b801000000     mov eax, 1
0x00006631      c3             ret
0x00006632      660f1f440000   nop word [rax + rax]
0x00006638      84c0           test al, al
0x0000663a      7536           jne 0x6672
0x0000663c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006642      2500f00000     and eax, 0xf000
0x00006647      3d00400000     cmp eax, 0x4000
0x0000664c      7424           je 0x6672                               ; .//src:2659
0x0000664e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006653      c3             ret
0x00006654      0f1f4000       nop dword [rax]
0x00006658      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000665e      2500f00000     and eax, 0xf000
0x00006663      3d00400000     cmp eax, 0x4000
0x00006668      74ba           je 0x6624
0x0000666a      81fa00400000   cmp edx, 0x4000
0x00006670      74dc           je 0x664e
0x00006672      488b36         mov rsi, qword [rsi]
0x00006675      488b3f         mov rdi, qword [rdi]
0x00006678      e963f7ffff     jmp sym.xstrcoll
0x0000667d      0f1f00         nop dword [rax]
;-- strcmp_df_name:
0x00006680      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006686      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000668c      83fa03         cmp edx, 3
0x0000668f      0f94c0         sete al
0x00006692      83fa09         cmp edx, 9
0x00006695      0f94c2         sete dl
0x00006698      09d0           or eax, edx
0x0000669a      83f903         cmp ecx, 3
0x0000669d      7429           je 0x66c8
0x0000669f      83f909         cmp ecx, 9
0x000066a2      7424           je 0x66c8
0x000066a4      8b97ac000000   mov edx, dword [rdi + 0xac]
0x000066aa      81e200f00000   and edx, 0xf000
0x000066b0      84c0           test al, al
0x000066b2      7434           je 0x66e8
0x000066b4      81fa00400000   cmp edx, 0x4000
0x000066ba      7446           je 0x6702
0x000066bc      b801000000     mov eax, 1
0x000066c1      c3             ret
0x000066c2      660f1f440000   nop word [rax + rax]
0x000066c8      84c0           test al, al
0x000066ca      7536           jne 0x6702
0x000066cc      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000066d2      2500f00000     and eax, 0xf000                         ; .//src:3846
0x000066d7      3d00400000     cmp eax, 0x4000
0x000066dc      7424           je 0x6702
0x000066de      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000066e3      c3             ret
0x000066e4      0f1f4000       nop dword [rax]
0x000066e8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000066ee      2500f00000     and eax, 0xf000                         ; .//src:3850
0x000066f3      3d00400000     cmp eax, 0x4000
0x000066f8      74ba           je 0x66b4
0x000066fa      81fa00400000   cmp edx, 0x4000
0x00006700      74dc           je 0x66de
0x00006702      488b36         mov rsi, qword [rsi]
0x00006705      488b3f         mov rdi, qword [rdi]                    ; .//src:3846
0x00006708      e983ceffff     jmp sym.imp.strcmp
0x0000670d      0f1f00         nop dword [rax]
;-- rev_xstrcoll_df_name:
0x00006710      4889f1         mov rcx, rsi                            ; .//src:3854
0x00006713      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x00006719      8b91a8000000   mov edx, dword [rcx + 0xa8]
0x0000671f      83fa03         cmp edx, 3
0x00006722      0f94c0         sete al
0x00006725      83fa09         cmp edx, 9
0x00006728      0f94c2         sete dl
0x0000672b      09d0           or eax, edx                             ; .//src:3856
0x0000672d      83fe03         cmp esi, 3
0x00006730      7426           je 0x6758
0x00006732      83fe09         cmp esi, 9
0x00006735      7421           je 0x6758
0x00006737      8b97ac000000   mov edx, dword [rdi + 0xac]             ; .//src:3859
0x0000673d      81e200f00000   and edx, 0xf000
0x00006743      84c0           test al, al
0x00006745      7431           je 0x6778
0x00006747      81fa00400000   cmp edx, 0x4000
0x0000674d      7443           je 0x6792
0x0000674f      b801000000     mov eax, 1
0x00006754      c3             ret
0x00006755      0f1f00         nop dword [rax]
0x00006758      84c0           test al, al
0x0000675a      7536           jne 0x6792
0x0000675c      8b81ac000000   mov eax, dword [rcx + 0xac]
0x00006762      2500f00000     and eax, 0xf000                         ; .//src:3854
0x00006767      3d00400000     cmp eax, 0x4000
0x0000676c      7424           je 0x6792
0x0000676e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006773      c3             ret
0x00006774      0f1f4000       nop dword [rax]
0x00006778      8b81ac000000   mov eax, dword [rcx + 0xac]
0x0000677e      2500f00000     and eax, 0xf000
0x00006783      3d00400000     cmp eax, 0x4000
0x00006788      74bd           je 0x6747
0x0000678a      81fa00400000   cmp edx, 0x4000                         ; .//src:3844
0x00006790      74dc           je 0x676e
0x00006792      488b37         mov rsi, qword [rdi]
0x00006795      488b39         mov rdi, qword [rcx]
0x00006798      e943f6ffff     jmp sym.xstrcoll
0x0000679d      0f1f00         nop dword [rax]
;-- rev_strcmp_df_name:
0x000067a0      4889f2         mov rdx, rsi
0x000067a3      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x000067a9      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x000067af      83f903         cmp ecx, 3
0x000067b2      0f94c0         sete al
0x000067b5      83f909         cmp ecx, 9
0x000067b8      0f94c1         sete cl
0x000067bb      09c8           or eax, ecx
0x000067bd      83fe03         cmp esi, 3
0x000067c0      7426           je 0x67e8                               ; .//src:3871
0x000067c2      83fe09         cmp esi, 9
0x000067c5      7421           je 0x67e8
0x000067c7      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x000067cd      81e100f00000   and ecx, 0xf000                         ; .//src:3872
0x000067d3      84c0           test al, al
0x000067d5      7431           je 0x6808
0x000067d7      81f900400000   cmp ecx, 0x4000
0x000067dd      7443           je 0x6822
0x000067df      b801000000     mov eax, 1
0x000067e4      c3             ret
0x000067e5      0f1f00         nop dword [rax]
0x000067e8      84c0           test al, al
0x000067ea      7536           jne 0x6822                              ; .//src:3873
0x000067ec      8b82ac000000   mov eax, dword [rdx + 0xac]
0x000067f2      2500f00000     and eax, 0xf000                         ; .//src:3874
0x000067f7      3d00400000     cmp eax, 0x4000                         ; .//src:3875
0x000067fc      7424           je 0x6822
0x000067fe      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006803      c3             ret
0x00006804      0f1f4000       nop dword [rax]
0x00006808      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000680e      2500f00000     and eax, 0xf000
0x00006813      3d00400000     cmp eax, 0x4000
0x00006818      74bd           je 0x67d7
0x0000681a      81f900400000   cmp ecx, 0x4000
0x00006820      74dc           je 0x67fe
0x00006822      488b37         mov rsi, qword [rdi]
0x00006825      488b3a         mov rdi, qword [rdx]
0x00006828      e963cdffff     jmp sym.imp.strcmp
0x0000682d      0f1f00         nop dword [rax]
;-- get_type_indicator:
0x00006830      4084ff         test dil, dil
0x00006833      7423           je 0x6858
0x00006835      89f0           mov eax, esi
0x00006837      2500f00000     and eax, 0xf000
0x0000683c      3d00800000     cmp eax, 0x8000
0x00006841      756d           jne 0x68b0
0x00006843      31c0           xor eax, eax                            ; .//src:2902
0x00006845      833dc8aa2100.  cmp dword [obj.indicator_style], 3      ; [0x221314:4]=0
0x0000684c      0f84a6000000   je 0x68f8
0x00006852      f3c3           ret
0x00006854      0f1f4000       nop dword [rax]
0x00006858      31c0           xor eax, eax
0x0000685a      83fa05         cmp edx, 5
0x0000685d      7461           je 0x68c0
0x0000685f      83fa03         cmp edx, 3
0x00006862      0f94c1         sete cl
0x00006865      83fa09         cmp edx, 9
0x00006868      0f94c0         sete al
0x0000686b      09c1           or ecx, eax
0x0000686d      84c9           test cl, cl                             ; stdio.h:-694
0x0000686f      b82f000000     mov eax, 0x2f                           ; '/'
0x00006874      75dc           jne 0x6852
0x00006876      31c0           xor eax, eax
0x00006878      833d95aa2100.  cmp dword [obj.indicator_style], 1      ; [0x221314:4]=0
0x0000687f      74d1           je 0x6852
0x00006881      4084ff         test dil, dil
0x00006884      7542           jne 0x68c8
0x00006886      83fa06         cmp edx, 6
0x00006889      b840000000     mov eax, 0x40                           ; .//src:2902 ; segment.PHDR
0x0000688e      0f847c000000   je 0x6910
0x00006894      83fa01         cmp edx, 1
0x00006897      b87c000000     mov eax, 0x7c                           ; stdio.h:-695 ; '|'
0x0000689c      0f8486000000   je 0x6928
0x000068a2      83fa07         cmp edx, 7
0x000068a5      0f94c0         sete al
0x000068a8      f7d8           neg eax
0x000068aa      83e03d         and eax, 0x3d
0x000068ad      c3             ret
0x000068ae      6690           nop
0x000068b0      3d00400000     cmp eax, 0x4000
0x000068b5      0f94c1         sete cl
0x000068b8      ebb3           jmp 0x686d
0x000068ba      660f1f440000   nop word [rax + rax]
0x000068c0      f3c3           ret
0x000068c2      660f1f440000   nop word [rax + rax]
0x000068c8      81e600f00000   and esi, 0xf000
0x000068ce      b840000000     mov eax, 0x40                           ; segment.PHDR
0x000068d3      81fe00a00000   cmp esi, 0xa000
0x000068d9      743d           je 0x6918
0x000068db      81fe00100000   cmp esi, 0x1000
0x000068e1      b87c000000     mov eax, 0x7c                           ; '|'
0x000068e6      7438           je 0x6920
0x000068e8      81fe00c00000   cmp esi, 0xc000
0x000068ee      0f94c0         sete al
0x000068f1      ebb5           jmp 0x68a8
0x000068f3      0f1f440000     nop dword [rax + rax]
0x000068f8      83e649         and esi, 0x49
0x000068fb      83fe01         cmp esi, 1
0x000068fe      19c0           sbb eax, eax
0x00006900      f7d0           not eax
0x00006902      83e02a         and eax, 0x2a
0x00006905      c3             ret
0x00006906      662e0f1f8400.  nop word cs:[rax + rax]
0x00006910      f3c3           ret
0x00006912      660f1f440000   nop word [rax + rax]
0x00006918      f3c3           ret
0x0000691a      660f1f440000   nop word [rax + rax]
0x00006920      f3c3           ret
0x00006922      660f1f440000   nop word [rax + rax]
0x00006928      f3c3           ret
0x0000692a      660f1f440000   nop word [rax + rax]
;-- print_type_indicator:
0x00006930      53             push rbx
0x00006931      400fb6ff       movzx edi, dil
0x00006935      e8f6feffff     call sym.get_type_indicator
0x0000693a      84c0           test al, al
0x0000693c      89c3           mov ebx, eax
0x0000693e      7423           je 0x6963
0x00006940      488b3d419921.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00006947      488b4728       mov rax, qword [rdi + 0x28]
0x0000694b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000694f      731f           jae 0x6970                              ; .//src:2928
0x00006951      488d5001       lea rdx, [rax + 1]
0x00006955      48895728       mov qword [rdi + 0x28], rdx
0x00006959      8818           mov byte [rax], bl
0x0000695b      48830595a821.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x00006963      84db           test bl, bl
0x00006965      0f95c0         setne al
0x00006968      5b             pop rbx
0x00006969      c3             ret                                     ; .//src:2659
0x0000696a      660f1f440000   nop word [rax + rax]
0x00006970      0fb6f3         movzx esi, bl
0x00006973      e818cbffff     call sym.imp.__overflow
0x00006978      ebe1           jmp 0x695b
0x0000697a      660f1f440000   nop word [rax + rax]
;-- strcmp_df_mtime:
0x00006980      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006986      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000698c      83fa03         cmp edx, 3
0x0000698f      0f94c0         sete al
0x00006992      83fa09         cmp edx, 9
0x00006995      0f94c2         sete dl
0x00006998      09d0           or eax, edx
0x0000699a      83f903         cmp ecx, 3
0x0000699d      7429           je 0x69c8
0x0000699f      83f909         cmp ecx, 9
0x000069a2      7424           je 0x69c8
0x000069a4      8b97ac000000   mov edx, dword [rdi + 0xac]
0x000069aa      81e200f00000   and edx, 0xf000
0x000069b0      84c0           test al, al
0x000069b2      7434           je 0x69e8
0x000069b4      81fa00400000   cmp edx, 0x4000
0x000069ba      744c           je 0x6a08
0x000069bc      b801000000     mov eax, 1
0x000069c1      c3             ret
0x000069c2      660f1f440000   nop word [rax + rax]
0x000069c8      84c0           test al, al
0x000069ca      753c           jne 0x6a08
0x000069cc      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000069d2      2500f00000     and eax, 0xf000
0x000069d7      3d00400000     cmp eax, 0x4000
0x000069dc      742a           je 0x6a08
0x000069de      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000069e3      f3c3           ret
0x000069e5      0f1f00         nop dword [rax]
0x000069e8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x000069ee      2500f00000     and eax, 0xf000
0x000069f3      3d00400000     cmp eax, 0x4000
0x000069f8      74ba           je 0x69b4
0x000069fa      81fa00400000   cmp edx, 0x4000
0x00006a00      74dc           je 0x69de
0x00006a02      660f1f440000   nop word [rax + rax]
0x00006a08      488b4670       mov rax, qword [rsi + 0x70]
0x00006a0c      48394770       cmp qword [rdi + 0x70], rax
0x00006a10      7fcc           jg 0x69de
0x00006a12      7ca8           jl 0x69bc
0x00006a14      488b4678       mov rax, qword [rsi + 0x78]
0x00006a18      2b4778         sub eax, dword [rdi + 0x78]
0x00006a1b      75c6           jne 0x69e3
0x00006a1d      488b36         mov rsi, qword [rsi]
0x00006a20      488b3f         mov rdi, qword [rdi]
0x00006a23      e968cbffff     jmp sym.imp.strcmp
0x00006a28      0f1f84000000.  nop dword [rax + rax]
;-- rev_xstrcoll_df_version:
0x00006a30      4889f2         mov rdx, rsi
0x00006a33      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x00006a39      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x00006a3f      83f903         cmp ecx, 3
0x00006a42      0f94c0         sete al
0x00006a45      83f909         cmp ecx, 9
0x00006a48      0f94c1         sete cl
0x00006a4b      09c8           or eax, ecx
0x00006a4d      83fe03         cmp esi, 3
0x00006a50      7426           je 0x6a78
0x00006a52      83fe09         cmp esi, 9
0x00006a55      7421           je 0x6a78
0x00006a57      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x00006a5d      81e100f00000   and ecx, 0xf000
0x00006a63      84c0           test al, al
0x00006a65      7431           je 0x6a98
0x00006a67      81f900400000   cmp ecx, 0x4000
0x00006a6d      7443           je 0x6ab2
0x00006a6f      b801000000     mov eax, 1
0x00006a74      c3             ret
0x00006a75      0f1f00         nop dword [rax]
0x00006a78      84c0           test al, al
0x00006a7a      7536           jne 0x6ab2
0x00006a7c      8b82ac000000   mov eax, dword [rdx + 0xac]
0x00006a82      2500f00000     and eax, 0xf000
0x00006a87      3d00400000     cmp eax, 0x4000
0x00006a8c      7424           je 0x6ab2
0x00006a8e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006a93      c3             ret
0x00006a94      0f1f4000       nop dword [rax]
0x00006a98      8b82ac000000   mov eax, dword [rdx + 0xac]
0x00006a9e      2500f00000     and eax, 0xf000
0x00006aa3      3d00400000     cmp eax, 0x4000
0x00006aa8      74bd           je 0x6a67
0x00006aaa      81f900400000   cmp ecx, 0x4000
0x00006ab0      74dc           je 0x6a8e
0x00006ab2      488b37         mov rsi, qword [rdi]
0x00006ab5      488b3a         mov rdi, qword [rdx]
0x00006ab8      e993670000     jmp sym.filevercmp
0x00006abd      0f1f00         nop dword [rax]                         ; .//src:2898
;-- xstrcoll_df_version:
0x00006ac0      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006ac6      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x00006acc      83fa03         cmp edx, 3
0x00006acf      0f94c0         sete al                                 ; .//src:2897
0x00006ad2      83fa09         cmp edx, 9
0x00006ad5      0f94c2         sete dl
0x00006ad8      09d0           or eax, edx
0x00006ada      83f903         cmp ecx, 3
0x00006add      7429           je 0x6b08
0x00006adf      83f909         cmp ecx, 9                              ; .//src:570
0x00006ae2      7424           je 0x6b08
0x00006ae4      8b97ac000000   mov edx, dword [rdi + 0xac]
0x00006aea      81e200f00000   and edx, 0xf000
0x00006af0      84c0           test al, al
0x00006af2      7434           je 0x6b28
0x00006af4      81fa00400000   cmp edx, 0x4000
0x00006afa      7446           je 0x6b42
0x00006afc      b801000000     mov eax, 1
0x00006b01      c3             ret
0x00006b02      660f1f440000   nop word [rax + rax]
0x00006b08      84c0           test al, al
0x00006b0a      7536           jne 0x6b42
0x00006b0c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006b12      2500f00000     and eax, 0xf000
0x00006b17      3d00400000     cmp eax, 0x4000
0x00006b1c      7424           je 0x6b42
0x00006b1e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006b23      c3             ret
0x00006b24      0f1f4000       nop dword [rax]
0x00006b28      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006b2e      2500f00000     and eax, 0xf000
0x00006b33      3d00400000     cmp eax, 0x4000
0x00006b38      74ba           je 0x6af4
0x00006b3a      81fa00400000   cmp edx, 0x4000
0x00006b40      74dc           je 0x6b1e                               ; .//src:642
0x00006b42      488b36         mov rsi, qword [rsi]
0x00006b45      488b3f         mov rdi, qword [rdi]
0x00006b48      e903670000     jmp sym.filevercmp
0x00006b4d      0f1f00         nop dword [rax]
;-- rev_strcmp_df_extension:
0x00006b50      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x00006b56      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x00006b5c      83fa03         cmp edx, 3
0x00006b5f      0f94c0         sete al
0x00006b62      83fa09         cmp edx, 9
0x00006b65      0f94c2         sete dl
0x00006b68      09d0           or eax, edx
0x00006b6a      83f903         cmp ecx, 3
0x00006b6d      7429           je 0x6b98
0x00006b6f      83f909         cmp ecx, 9
0x00006b72      7424           je 0x6b98
0x00006b74      8b97ac000000   mov edx, dword [rdi + 0xac]
0x00006b7a      81e200f00000   and edx, 0xf000
0x00006b80      84c0           test al, al
0x00006b82      7434           je 0x6bb8
0x00006b84      81fa00400000   cmp edx, 0x4000
0x00006b8a      744c           je 0x6bd8
0x00006b8c      b801000000     mov eax, 1
0x00006b91      c3             ret
0x00006b92      660f1f440000   nop word [rax + rax]
0x00006b98      84c0           test al, al
0x00006b9a      753c           jne 0x6bd8
0x00006b9c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006ba2      2500f00000     and eax, 0xf000
0x00006ba7      3d00400000     cmp eax, 0x4000
0x00006bac      742a           je 0x6bd8
0x00006bae      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006bb3      c3             ret
0x00006bb4      0f1f4000       nop dword [rax]
0x00006bb8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x00006bbe      2500f00000     and eax, 0xf000
0x00006bc3      3d00400000     cmp eax, 0x4000                         ; .//src:612
0x00006bc8      74ba           je 0x6b84
0x00006bca      81fa00400000   cmp edx, 0x4000                         ; .//src:613
0x00006bd0      74dc           je 0x6bae
0x00006bd2      660f1f440000   nop word [rax + rax]
0x00006bd8      4154           push r12
0x00006bda      55             push rbp                                ; .//src:616
0x00006bdb      53             push rbx
0x00006bdc      4c8b26         mov r12, qword [rsi]
0x00006bdf      4889fb         mov rbx, rdi
0x00006be2      be2e000000     mov esi, 0x2e                           ; .//src:617 ; '.'
0x00006be7      4c89e7         mov rdi, r12
0x00006bea      e8b1c8ffff     call sym.imp.strrchr
0x00006bef      488b1b         mov rbx, qword [rbx]
0x00006bf2      be2e000000     mov esi, 0x2e                           ; '.'
0x00006bf7      4889c5         mov rbp, rax
0x00006bfa      4889df         mov rdi, rbx                            ; .//src:622
0x00006bfd      e89ec8ffff     call sym.imp.strrchr
0x00006c02      4885c0         test rax, rax
0x00006c05      7439           je 0x6c40
0x00006c07      488d15a50c01.  lea rdx, [0x000178b3]
0x00006c0e      4885ed         test rbp, rbp
0x00006c11      480f44ea       cmove rbp, rdx
0x00006c15      4889c6         mov rsi, rax
0x00006c18      4889ef         mov rdi, rbp
0x00006c1b      e870c9ffff     call sym.imp.strcmp
0x00006c20      85c0           test eax, eax
0x00006c22      7514           jne 0x6c38
0x00006c24      4889de         mov rsi, rbx
0x00006c27      4c89e7         mov rdi, r12
0x00006c2a      5b             pop rbx
0x00006c2b      5d             pop rbp
0x00006c2c      415c           pop r12
0x00006c2e      e95dc9ffff     jmp sym.imp.strcmp
0x00006c33      0f1f440000     nop dword [rax + rax]
0x00006c38      5b             pop rbx
0x00006c39      5d             pop rbp
0x00006c3a      415c           pop r12
0x00006c3c      c3             ret
0x00006c3d      0f1f00         nop dword [rax]
0x00006c40      4885ed         test rbp, rbp
0x00006c43      488d05690c01.  lea rax, [0x000178b3]
0x00006c4a      75c9           jne 0x6c15
0x00006c4c      ebd6           jmp 0x6c24
0x00006c4e      6690           nop
;-- signal_setup:
0x00006c50      4157           push r15
0x00006c52      4156           push r14
0x00006c54      4155           push r13
0x00006c56      4154           push r12
0x00006c58      55             push rbp
0x00006c59      53             push rbx
0x00006c5a      4881eca80000.  sub rsp, 0xa8
0x00006c61      64488b042528.  mov rax, qword fs:[0x28]
0x00006c6a      488984249800.  mov qword [rsp + 0x98], rax
0x00006c72      31c0           xor eax, eax
0x00006c74      4084ff         test dil, dil
0x00006c77      7577           jne 0x6cf0
0x00006c79      488d1dc4f900.  lea rbx, [0x00016644]
0x00006c80      bd14000000     mov ebp, 0x14
0x00006c85      4c8d2594a521.  lea r12, obj.caught_signals             ; 0x221220
0x00006c8c      4c8d6b2c       lea r13, [rbx + 0x2c]
0x00006c90      eb11           jmp 0x6ca3
0x00006c92      660f1f440000   nop word [rax + rax]
0x00006c98      4c39eb         cmp rbx, r13
0x00006c9b      7422           je 0x6cbf
0x00006c9d      8b2b           mov ebp, dword [rbx]
0x00006c9f      4883c304       add rbx, 4
0x00006ca3      89ee           mov esi, ebp
0x00006ca5      4c89e7         mov rdi, r12
0x00006ca8      e823cbffff     call sym.imp.sigismember                ; .//src:649
0x00006cad      85c0           test eax, eax
0x00006caf      74e7           je 0x6c98                               ; .//src:3791
0x00006cb1      31f6           xor esi, esi
0x00006cb3      89ef           mov edi, ebp
0x00006cb5      e8e6c8ffff     call sym.imp.signal
0x00006cba      4c39eb         cmp rbx, r13
0x00006cbd      75de           jne 0x6c9d
0x00006cbf      488b84249800.  mov rax, qword [rsp + 0x98]
0x00006cc7      644833042528.  xor rax, qword fs:[0x28]                ; .//src:3796
0x00006cd0      0f8543010000   jne 0x6e19
0x00006cd6      4881c4a80000.  add rsp, 0xa8
0x00006cdd      5b             pop rbx
0x00006cde      5d             pop rbp
0x00006cdf      415c           pop r12
0x00006ce1      415d           pop r13
0x00006ce3      415e           pop r14                                 ; .//src:3798
0x00006ce5      415f           pop r15
0x00006ce7      c3             ret
0x00006ce8      0f1f84000000.  nop dword [rax + rax]
0x00006cf0      488d2d4df900.  lea rbp, [0x00016644]
0x00006cf7      488d3d22a521.  lea rdi, obj.caught_signals             ; 0x221220
0x00006cfe      41bd14000000   mov r13d, 0x14
0x00006d04      4989e4         mov r12, rsp
0x00006d07      4c8d3d12a521.  lea r15, obj.caught_signals             ; .//src:4008 ; 0x221220
0x00006d0e      e8cdc8ffff     call sym.imp.sigemptyset
0x00006d13      4c8d752c       lea r14, [rbp + 0x2c]
0x00006d17      4889eb         mov rbx, rbp
0x00006d1a      eb0b           jmp 0x6d27
0x00006d1c      0f1f4000       nop dword [rax]
0x00006d20      448b2b         mov r13d, dword [rbx]
0x00006d23      4883c304       add rbx, 4
0x00006d27      31f6           xor esi, esi
0x00006d29      4c89e2         mov rdx, r12
0x00006d2c      4489ef         mov edi, r13d
0x00006d2f      e8dcc5ffff     call sym.imp.sigaction                  ; .//src:4017
0x00006d34      48833c2401     cmp qword [rsp], 1                      ; .//src:4011
0x00006d39      740b           je 0x6d46
0x00006d3b      4489ee         mov esi, r13d                           ; .//src:4017
0x00006d3e      4c89ff         mov rdi, r15
0x00006d41      e8facaffff     call sym.imp.sigaddset
0x00006d46      4c39f3         cmp rbx, r14
0x00006d49      75d5           jne 0x6d20
0x00006d4b      660f6f05cda4.  movdqa xmm0, xmmword [obj.caught_signals]
0x00006d53      41be14000000   mov r14d, 0x14
0x00006d59      c78424880000.  mov dword [rsp + 0x88], 0x10000000      ; .//src:4020 ; [0x10000000:4]=-1
0x00006d64      4c8d2db5a421.  lea r13, obj.caught_signals             ; 0x221220
0x00006d6b      4c8d3d3ee6ff.  lea r15, sym.sighandler                 ; 0x53b0
0x00006d72      0f11442408     movups xmmword [rsp + 8], xmm0
0x00006d77      660f6f05b1a4.  movdqa xmm0, xmmword [0x00221230]
0x00006d7f      0f11442418     movups xmmword [rsp + 0x18], xmm0
0x00006d84      660f6f05b4a4.  movdqa xmm0, xmmword [0x00221240]
0x00006d8c      0f11442428     movups xmmword [rsp + 0x28], xmm0
0x00006d91      660f6f05b7a4.  movdqa xmm0, xmmword [0x00221250]
0x00006d99      0f11442438     movups xmmword [rsp + 0x38], xmm0
0x00006d9e      660f6f05baa4.  movdqa xmm0, xmmword [0x00221260]
0x00006da6      0f11442448     movups xmmword [rsp + 0x48], xmm0
0x00006dab      660f6f05bda4.  movdqa xmm0, xmmword [0x00221270]
0x00006db3      0f11442458     movups xmmword [rsp + 0x58], xmm0
0x00006db8      660f6f05c0a4.  movdqa xmm0, xmmword [0x00221280]
0x00006dc0      0f11442468     movups xmmword [rsp + 0x68], xmm0       ; .//src:548
0x00006dc5      660f6f05c3a4.  movdqa xmm0, xmmword [0x00221290]
0x00006dcd      0f11442478     movups xmmword [rsp + 0x78], xmm0
0x00006dd2      eb0c           jmp 0x6de0                              ; .//src:557
0x00006dd4      0f1f4000       nop dword [rax]
0x00006dd8      448b7500       mov r14d, dword [rbp]
0x00006ddc      4883c504       add rbp, 4
0x00006de0      4489f6         mov esi, r14d
0x00006de3      4c89ef         mov rdi, r13
0x00006de6      e8e5c9ffff     call sym.imp.sigismember
0x00006deb      85c0           test eax, eax
0x00006ded      7420           je 0x6e0f
0x00006def      488d05eaf4ff.  lea rax, sym.stophandler                ; 0x62e0
0x00006df6      4183fe14       cmp r14d, 0x14
0x00006dfa      4c89e6         mov rsi, r12
0x00006dfd      4489f7         mov edi, r14d
0x00006e00      490f45c7       cmovne rax, r15
0x00006e04      31d2           xor edx, edx
0x00006e06      48890424       mov qword [rsp], rax
0x00006e0a      e801c5ffff     call sym.imp.sigaction
0x00006e0f      4839dd         cmp rbp, rbx
0x00006e12      75c4           jne 0x6dd8
0x00006e14      e9a6feffff     jmp 0x6cbf
0x00006e19      e802c6ffff     call sym.imp.__stack_chk_fail
0x00006e1e      6690           nop
;-- prep_non_filename_text:
0x00006e20      48833d609221.  cmp qword [0x00220088], 0               ; [0x220088:8]=0
0x00006e28      740e           je 0x6e38
0x00006e2a      488d3d4f9221.  lea rdi, [0x00220080]
0x00006e31      eb3d           jmp sym.put_indicator
0x00006e33      0f1f440000     nop dword [rax + rax]
0x00006e38      488d3d219221.  lea rdi, obj.color_indicator            ; 0x220060
0x00006e3f      4883ec08       sub rsp, 8
0x00006e43      e828000000     call sym.put_indicator
0x00006e48      488d3d419221.  lea rdi, [0x00220090]
0x00006e4f      e81c000000     call sym.put_indicator
0x00006e54      488d3d159221.  lea rdi, [0x00220070]
0x00006e5b      4883c408       add rsp, 8
0x00006e5f      eb0f           jmp sym.put_indicator
0x00006e61      0f1f440000     nop dword [rax + rax]
0x00006e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- put_indicator:
0x00006e70      803d99a42100.  cmp byte [obj.used_color], 0            ; [0x221310:1]=0
0x00006e77      53             push rbx
0x00006e78      4889fb         mov rbx, rdi
0x00006e7b      7423           je 0x6ea0
0x00006e7d      488b7b08       mov rdi, qword [rbx + 8]                ; .//src:364
0x00006e81      488b33         mov rsi, qword [rbx]
0x00006e84      ba01000000     mov edx, 1
0x00006e89      5b             pop rbx                                 ; .//src:365
0x00006e8a      488b0df79321.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00006e91      e93ac8ffff     jmp sym.imp.fwrite_unlocked
0x00006e96      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ea0      bf01000000     mov edi, 1
0x00006ea5      c60564a42100.  mov byte [obj.used_color], 1            ; [0x221310:1]=0
0x00006eac      e87fc7ffff     call sym.imp.tcgetpgrp
0x00006eb1      85c0           test eax, eax
0x00006eb3      790b           jns 0x6ec0
0x00006eb5      e866ffffff     call sym.prep_non_filename_text
0x00006eba      ebc1           jmp 0x6e7d                              ; .//src:3326
0x00006ebc      0f1f4000       nop dword [rax]
0x00006ec0      bf01000000     mov edi, 1
0x00006ec5      e886fdffff     call sym.signal_setup
0x00006eca      e851ffffff     call sym.prep_non_filename_text
0x00006ecf      ebac           jmp 0x6e7d
0x00006ed1      0f1f440000     nop dword [rax + rax]
0x00006ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- process_signals:
0x00006ee0      55             push rbp
0x00006ee1      53             push rbx
0x00006ee2      4881ec980000.  sub rsp, 0x98
0x00006ee9      64488b042528.  mov rax, qword fs:[0x28]
0x00006ef2      488984248800.  mov qword [rsp + 0x88], rax
0x00006efa      31c0           xor eax, eax
0x00006efc      4889e5         mov rbp, rsp
0x00006eff      eb58           jmp 0x6f59
0x00006f01      0f1f80000000.  nop dword [rax]
0x00006f08      488b3d799321.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00006f0f      e8fcc8ffff     call sym.imp.fflush_unlocked
0x00006f14      488d3505a321.  lea rsi, obj.caught_signals             ; 0x221220
0x00006f1b      31ff           xor edi, edi                            ; .//src:3343
0x00006f1d      4889ea         mov rdx, rbp
0x00006f20      e83bc3ffff     call sym.imp.sigprocmask
0x00006f25      8b1deda22100   mov ebx, dword [obj.interrupt_signal]   ; [0x221218:4]=0
0x00006f2b      8b05e3a22100   mov eax, dword [obj.stop_signal_count]  ; [0x221214:4]=0
0x00006f31      85c0           test eax, eax
0x00006f33      7463           je 0x6f98
0x00006f35      83e801         sub eax, 1
0x00006f38      bb13000000     mov ebx, 0x13
0x00006f3d      8905d1a22100   mov dword [obj.stop_signal_count], eax  ; [0x221214:4]=0
0x00006f43      89df           mov edi, ebx
0x00006f45      e836c3ffff     call sym.imp.raise
0x00006f4a      31d2           xor edx, edx
0x00006f4c      4889ee         mov rsi, rbp
0x00006f4f      bf02000000     mov edi, 2
0x00006f54      e807c3ffff     call sym.imp.sigprocmask
0x00006f59      8b05b9a22100   mov eax, dword [obj.interrupt_signal]   ; [0x221218:4]=0
0x00006f5f      85c0           test eax, eax
0x00006f61      750a           jne 0x6f6d
0x00006f63      8b05aba22100   mov eax, dword [obj.stop_signal_count]  ; [0x221214:4]=0
0x00006f69      85c0           test eax, eax                           ; .//src:3363
0x00006f6b      743b           je 0x6fa8
0x00006f6d      803d9ca32100.  cmp byte [obj.used_color], 0            ; [0x221310:1]=0
0x00006f74      7492           je 0x6f08
0x00006f76      488d3de39021.  lea rdi, obj.color_indicator            ; 0x220060
0x00006f7d      e8eefeffff     call sym.put_indicator
0x00006f82      488d3de79021.  lea rdi, [0x00220070]
0x00006f89      e8e2feffff     call sym.put_indicator
0x00006f8e      e975ffffff     jmp 0x6f08                              ; .//src:3359
0x00006f93      0f1f440000     nop dword [rax + rax]
0x00006f98      31f6           xor esi, esi
0x00006f9a      89df           mov edi, ebx
0x00006f9c      e8ffc5ffff     call sym.imp.signal
0x00006fa1      eba0           jmp 0x6f43
0x00006fa3      0f1f440000     nop dword [rax + rax]
0x00006fa8      488b84248800.  mov rax, qword [rsp + 0x88]
0x00006fb0      644833042528.  xor rax, qword fs:[0x28]
0x00006fb9      750a           jne 0x6fc5
0x00006fbb      4881c4980000.  add rsp, 0x98
0x00006fc2      5b             pop rbx
0x00006fc3      5d             pop rbp
0x00006fc4      c3             ret                                     ; .//src:3370
0x00006fc5      e856c4ffff     call sym.imp.__stack_chk_fail
0x00006fca      660f1f440000   nop word [rax + rax]
;-- set_normal_color:
0x00006fd0      803d3ba32100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00006fd7      7417           je 0x6ff0
0x00006fd9      4883ec08       sub rsp, 8
0x00006fdd      bf04000000     mov edi, 4
0x00006fe2      e889e6ffff     call sym.is_colored
0x00006fe7      84c0           test al, al
0x00006fe9      750d           jne 0x6ff8
0x00006feb      4883c408       add rsp, 8
0x00006fef      c3             ret
0x00006ff0      f3c3           ret
0x00006ff2      660f1f440000   nop word [rax + rax]
0x00006ff8      488d3d619021.  lea rdi, obj.color_indicator            ; 0x220060
0x00006fff      e86cfeffff     call sym.put_indicator
0x00007004      488d3d959021.  lea rdi, [0x002200a0]
0x0000700b      e860feffff     call sym.put_indicator
0x00007010      488d3d599021.  lea rdi, [0x00220070]
0x00007017      4883c408       add rsp, 8
0x0000701b      e950feffff     jmp sym.put_indicator
;-- quote_name_buf.constprop.54:
0x00007020      4157           push r15
0x00007022      4156           push r14                                ; .//src:3215
0x00007024      4989d6         mov r14, rdx
0x00007027      4155           push r13
0x00007029      4154           push r12
0x0000702b      4989f4         mov r12, rsi
0x0000702e      55             push rbp
0x0000702f      53             push rbx
0x00007030      89cb           mov ebx, ecx
0x00007032      4883ec68       sub rsp, 0x68
0x00007036      4c8b2f         mov r13, qword [rdi]
0x00007039      48897c2430     mov qword [rsp + 0x30], rdi
0x0000703e      4889d7         mov rdi, rdx
0x00007041      4c89442420     mov qword [rsp + 0x20], r8
0x00007046      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000704f      48894c2458     mov qword [rsp + 0x58], rcx
0x00007054      31c9           xor ecx, ecx
0x00007056      4c894c2438     mov qword [rsp + 0x38], r9
0x0000705b      e8b0c50000     call sym.get_quoting_style
0x00007060      83f802         cmp eax, 2
0x00007063      0f96c0         setbe al
0x00007066      22056ca22100   and al, byte [obj.qmark_funny_chars]    ; [0x2212d8:1]=0
0x0000706c      8844242f       mov byte [rsp + 0x2f], al
0x00007070      0f855a010000   jne 0x71d0
0x00007076      4531c9         xor r9d, r9d
0x00007079      85db           test ebx, ebx
0x0000707b      7473           je 0x70f0
0x0000707d      4d89f0         mov r8, r14
0x00007080      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00007087      4c89e2         mov rdx, r12
0x0000708a      be00200000     mov esi, 0x2000
0x0000708f      4c89ef         mov rdi, r13
0x00007092      44894c2408     mov dword [rsp + 8], r9d
0x00007097      e844c60000     call sym.quotearg_buffer
0x0000709c      483dff1f0000   cmp rax, 0x1fff
0x000070a2      4889c3         mov rbx, rax                            ; .//src:3269
0x000070a5      448b4c2408     mov r9d, dword [rsp + 8]
0x000070aa      0f8788030000   ja 0x7438
0x000070b0      410fb64500     movzx eax, byte [r13]
0x000070b5      c644242f01     mov byte [rsp + 0x2f], 1
0x000070ba      41380424       cmp byte [r12], al
0x000070be      751a           jne 0x70da
0x000070c0      4c89e7         mov rdi, r12
0x000070c3      44894c2408     mov dword [rsp + 8], r9d
0x000070c8      e833c3ffff     call sym.imp.strlen
0x000070cd      448b4c2408     mov r9d, dword [rsp + 8]
0x000070d2      4839c3         cmp rbx, rax
0x000070d5      0f9544242f     setne byte [rsp + 0x2f]
0x000070da      4585c9         test r9d, r9d
0x000070dd      741f           je 0x70fe
0x000070df      4889dd         mov rbp, rbx
0x000070e2      e91c010000     jmp 0x7203                              ; .//src:3300
0x000070e7      660f1f840000.  nop word [rax + rax]
0x000070f0      4c89e7         mov rdi, r12
0x000070f3      4d89e5         mov r13, r12
0x000070f6      e805c3ffff     call sym.imp.strlen
0x000070fb      4889c3         mov rbx, rax
0x000070fe      48837c242000   cmp qword [rsp + 0x20], 0               ; .//src:3305
0x00007104      0f84ae000000   je 0x71b8
0x0000710a      e8e1c2ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000710f      4883f801       cmp rax, 1
0x00007113      0f87ff010000   ja 0x7318
0x00007119      4d8d641d00     lea r12, [r13 + rbx]                    ; .//src:3310
0x0000711e      4d39e5         cmp r13, r12
0x00007121      0f834b030000   jae 0x7472                              ; .//src:3311
0x00007127      e834c7ffff     call sym.imp.__ctype_b_loc
0x0000712c      31ed           xor ebp, ebp
0x0000712e      488b08         mov rcx, qword [rax]
0x00007131      4c89e8         mov rax, r13
0x00007134      0f1f4000       nop dword [rax]
0x00007138      0fb610         movzx edx, byte [rax]
0x0000713b      0fb71451       movzx edx, word [rcx + rdx*2]
0x0000713f      6681e20040     and dx, 0x4000
0x00007144      6683fa01       cmp dx, 1
0x00007148      4883ddff       sbb rbp, 0xffffffffffffffff
0x0000714c      4883c001       add rax, 1
0x00007150      4939c4         cmp r12, rax
0x00007153      75e3           jne 0x7138
0x00007155      0fb6054ca221.  movzx eax, byte [obj.align_variable_outer_quotes] ; [0x2213a8:1]=0
0x0000715c      84c0           test al, al
0x0000715e      7411           je 0x7171
0x00007160      0fb60542a221.  movzx eax, byte [obj.cwd_some_quoted]   ; [0x2213a9:1]=0
0x00007167      83f001         xor eax, 1
0x0000716a      0a44242f       or al, byte [rsp + 0x2f]                ; .//src:3367
0x0000716e      83f001         xor eax, 1
0x00007171      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00007176      8801           mov byte [rcx], al
0x00007178      488b442420     mov rax, qword [rsp + 0x20]
0x0000717d      4885c0         test rax, rax
0x00007180      7403           je 0x7185
0x00007182      488928         mov qword [rax], rbp                    ; .//src:3319
0x00007185      488b442430     mov rax, qword [rsp + 0x30]             ; .//src:3320
0x0000718a      4c8928         mov qword [rax], r13
0x0000718d      4889d8         mov rax, rbx
0x00007190      488b5c2458     mov rbx, qword [rsp + 0x58]
0x00007195      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000719e      0f85d5020000   jne 0x7479
0x000071a4      4883c468       add rsp, 0x68
0x000071a8      5b             pop rbx
0x000071a9      5d             pop rbp
0x000071aa      415c           pop r12
0x000071ac      415d           pop r13
0x000071ae      415e           pop r14
0x000071b0      415f           pop r15
0x000071b2      c3             ret                                     ; .//src:3238
0x000071b3      0f1f440000     nop dword [rax + rax]
0x000071b8      803de9a12100.  cmp byte [obj.align_variable_outer_quotes], 0 ; [0x2213a8:1]=0
0x000071bf      759f           jne 0x7160
0x000071c1      488b442438     mov rax, qword [rsp + 0x38]
0x000071c6      c60000         mov byte [rax], 0
0x000071c9      ebba           jmp 0x7185
0x000071cb      0f1f440000     nop dword [rax + rax]
0x000071d0      85db           test ebx, ebx                           ; .//src:3262
0x000071d2      0f85a6020000   jne 0x747e
0x000071d8      4c89e7         mov rdi, r12
0x000071db      e820c2ffff     call sym.imp.strlen
0x000071e0      483dff1f0000   cmp rax, 0x1fff
0x000071e6      4889c5         mov rbp, rax                            ; .//src:3284
0x000071e9      488d5001       lea rdx, [rax + 1]                      ; .//src:3285
0x000071ed      0f8725020000   ja 0x7418                               ; .//src:3286
0x000071f3      4c89e6         mov rsi, r12
0x000071f6      4c89ef         mov rdi, r13
0x000071f9      e8f2c3ffff     call sym.imp.memcpy
0x000071fe      c644242f00     mov byte [rsp + 0x2f], 0
0x00007203      498d5c2d00     lea rbx, [r13 + rbp]
0x00007208      e8e3c1ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000720d      4883f801       cmp rax, 1
0x00007211      48895c2408     mov qword [rsp + 8], rbx
0x00007216      0f86b4010000   jbe 0x73d0
0x0000721c      4939dd         cmp r13, rbx
0x0000721f      0f8344020000   jae 0x7469
0x00007225      488d44244c     lea rax, [rsp + 0x4c]
0x0000722a      4c8d642450     lea r12, [rsp + 0x50]
0x0000722f      4c89eb         mov rbx, r13                            ; .//src:3339
0x00007232      4d89ef         mov r15, r13                            ; .//src:3340
0x00007235      31ed           xor ebp, ebp
0x00007237      4889442418     mov qword [rsp + 0x18], rax
0x0000723c      0f1f4000       nop dword [rax]
0x00007240      410fb607       movzx eax, byte [r15]
0x00007244      3c3f           cmp al, 0x3f                            ; .//src:3336
0x00007246      0f8f24010000   jg 0x7370
0x0000724c      3c25           cmp al, 0x25
0x0000724e      0f8d34010000   jge 0x7388
0x00007254      8d50e0         lea edx, [rax - 0x20]
0x00007257      80fa03         cmp dl, 3
0x0000725a      0f8628010000   jbe 0x7388                              ; .//src:3216
0x00007260      48c744245000.  mov qword [rsp + 0x50], 0
0x00007269      0f1f80000000.  nop dword [rax]
0x00007270      488b542408     mov rdx, qword [rsp + 8]
0x00007275      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000727a      4c89e1         mov rcx, r12                            ; .//src:3206
0x0000727d      4c89fe         mov rsi, r15
0x00007280      4c8d7301       lea r14, [rbx + 1]
0x00007284      4c29fa         sub rdx, r15
0x00007287      e8c4e00000     call sym.rpl_mbrtowc
0x0000728c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007290      0f840a010000   je 0x73a0
0x00007296      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000729a      0f8418010000   je 0x73b8
0x000072a0      4885c0         test rax, rax
0x000072a3      8b7c244c       mov edi, dword [rsp + 0x4c]
0x000072a7      4889442410     mov qword [rsp + 0x10], rax
0x000072ac      0f849e000000   je 0x7350
0x000072b2      e8a9c3ffff     call sym.imp.wcwidth
0x000072b7      488b542410     mov rdx, qword [rsp + 0x10]
0x000072bc      85c0           test eax, eax
0x000072be      498d0c17       lea rcx, [r15 + rdx]
0x000072c2      787c           js 0x7340
0x000072c4      4889df         mov rdi, rbx
0x000072c7      660f1f840000.  nop word [rax + rax]
0x000072d0      4c89fe         mov rsi, r15
0x000072d3      a4             movsb byte [rdi], byte ptr [rsi]
0x000072d4      4839ce         cmp rsi, rcx
0x000072d7      4989f7         mov r15, rsi
0x000072da      75f4           jne 0x72d0                              ; .//src:3228
0x000072dc      4801d3         add rbx, rdx
0x000072df      4898           cdqe
0x000072e1      4801c5         add rbp, rax
0x000072e4      4c89e7         mov rdi, r12
0x000072e7      e834c5ffff     call sym.imp.mbsinit
0x000072ec      85c0           test eax, eax
0x000072ee      7480           je 0x7270
0x000072f0      4c3b7c2408     cmp r15, qword [rsp + 8]
0x000072f5      0f8245ffffff   jb 0x7240
0x000072fb      0fb605a6a021.  movzx eax, byte [obj.align_variable_outer_quotes] ; [0x2213a8:1]=0
0x00007302      4c29eb         sub rbx, r13
0x00007305      84c0           test al, al
0x00007307      0f8464feffff   je 0x7171                               ; .//src:3230
0x0000730d      e94efeffff     jmp 0x7160
0x00007312      660f1f440000   nop word [rax + rax]
0x00007318      31d2           xor edx, edx
0x0000731a      4889de         mov rsi, rbx
0x0000731d      4c89ef         mov rdi, r13
0x00007320      e83b8d0000     call sym.mbsnwidth
0x00007325      4863e8         movsxd rbp, eax                         ; ../coreutils-8.31/lib/timespec.h:-1257
0x00007328      0fb60579a021.  movzx eax, byte [obj.align_variable_outer_quotes] ; .//src:3233 ; [0x2213a8:1]=0
0x0000732f      84c0           test al, al
0x00007331      0f843afeffff   je 0x7171
0x00007337      e924feffff     jmp 0x7160
0x0000733c      0f1f4000       nop dword [rax]
0x00007340      c6033f         mov byte [rbx], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x00007343      4883c501       add rbp, 1
0x00007347      4c89f3         mov rbx, r14
0x0000734a      4989cf         mov r15, rcx
0x0000734d      eb95           jmp 0x72e4
0x0000734f      90             nop                                     ; .//src:3238
0x00007350      e80bc3ffff     call sym.imp.wcwidth
0x00007355      85c0           test eax, eax
0x00007357      498d4f01       lea rcx, [r15 + 1]
0x0000735b      78e3           js 0x7340
0x0000735d      410fb617       movzx edx, byte [r15]
0x00007361      4989cf         mov r15, rcx
0x00007364      8813           mov byte [rbx], dl
0x00007366      4c89f3         mov rbx, r14
0x00007369      e971ffffff     jmp 0x72df
0x0000736e      6690           nop
0x00007370      3c41           cmp al, 0x41
0x00007372      0f8ce8feffff   jl 0x7260
0x00007378      3c5f           cmp al, 0x5f
0x0000737a      7e0c           jle 0x7388
0x0000737c      8d509f         lea edx, [rax - 0x61]
0x0000737f      80fa1d         cmp dl, 0x1d
0x00007382      0f87d8feffff   ja 0x7260
0x00007388      8803           mov byte [rbx], al
0x0000738a      4983c701       add r15, 1
0x0000738e      4883c501       add rbp, 1
0x00007392      4883c301       add rbx, 1                              ; .//src:3245
0x00007396      e955ffffff     jmp 0x72f0
0x0000739b      0f1f440000     nop dword [rax + rax]
0x000073a0      4983c701       add r15, 1
0x000073a4      c6033f         mov byte [rbx], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x000073a7      4883c501       add rbp, 1
0x000073ab      4c89f3         mov rbx, r14
0x000073ae      e93dffffff     jmp 0x72f0
0x000073b3      0f1f440000     nop dword [rax + rax]
0x000073b8      c6033f         mov byte [rbx], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x000073bb      4883c501       add rbp, 1
0x000073bf      4c8b7c2408     mov r15, qword [rsp + 8]
0x000073c4      ebe5           jmp 0x73ab
0x000073c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000073d0      4c3b6c2408     cmp r13, qword [rsp + 8]
0x000073d5      7324           jae 0x73fb
0x000073d7      e884c4ffff     call sym.imp.__ctype_b_loc
0x000073dc      4c89ea         mov rdx, r13
0x000073df      90             nop
0x000073e0      0fb632         movzx esi, byte [rdx]
0x000073e3      488b08         mov rcx, qword [rax]
0x000073e6      f644710140     test byte [rcx + rsi*2 + 1], 0x40
0x000073eb      7503           jne 0x73f0
0x000073ed      c6023f         mov byte [rdx], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x000073f0      4883c201       add rdx, 1
0x000073f4      483b542408     cmp rdx, qword [rsp + 8]
0x000073f9      75e5           jne 0x73e0                              ; .//src:3211
0x000073fb      0fb605a69f21.  movzx eax, byte [obj.align_variable_outer_quotes] ; [0x2213a8:1]=0
0x00007402      4889eb         mov rbx, rbp
0x00007405      84c0           test al, al
0x00007407      0f8464fdffff   je 0x7171
0x0000740d      e94efdffff     jmp 0x7160
0x00007412      660f1f440000   nop word [rax + rax]
0x00007418      4889d7         mov rdi, rdx
0x0000741b      4889542408     mov qword [rsp + 8], rdx
0x00007420      e86bd10000     call sym.xmalloc
0x00007425      488b542408     mov rdx, qword [rsp + 8]
0x0000742a      4989c5         mov r13, rax
0x0000742d      e9c1fdffff     jmp 0x71f3
0x00007432      660f1f440000   nop word [rax + rax]
0x00007438      4c8d7801       lea r15, [rax + 1]
0x0000743c      4c89ff         mov rdi, r15
0x0000743f      e84cd10000     call sym.xmalloc
0x00007444      4d89f0         mov r8, r14
0x00007447      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000744e      4c89e2         mov rdx, r12
0x00007451      4c89fe         mov rsi, r15
0x00007454      4889c7         mov rdi, rax
0x00007457      4989c5         mov r13, rax
0x0000745a      e881c20000     call sym.quotearg_buffer
0x0000745f      448b4c2408     mov r9d, dword [rsp + 8]
0x00007464      e947fcffff     jmp 0x70b0
0x00007469      31db           xor ebx, ebx
0x0000746b      31ed           xor ebp, ebp
0x0000746d      e9e3fcffff     jmp 0x7155
0x00007472      31ed           xor ebp, ebp
0x00007474      e9dcfcffff     jmp 0x7155
0x00007479      e8a2bfffff     call sym.imp.__stack_chk_fail
0x0000747e      41b901000000   mov r9d, 1
0x00007484      e9f4fbffff     jmp 0x707d
0x00007489      0f1f80000000.  nop dword [rax]
;-- quote_name:
0x00007490      4157           push r15
0x00007492      4156           push r14
0x00007494      4889f8         mov rax, rdi
0x00007497      4155           push r13
0x00007499      4154           push r12
0x0000749b      4989ce         mov r14, rcx
0x0000749e      55             push rbp
0x0000749f      53             push rbx
0x000074a0      4c89cb         mov rbx, r9
0x000074a3      4589c7         mov r15d, r8d
0x000074a6      4531c0         xor r8d, r8d
0x000074a9      4881ec482000.  sub rsp, 0x2048
0x000074b0      48893c24       mov qword [rsp], rdi
0x000074b4      4c8d6c2430     lea r13, [rsp + 0x30]
0x000074b9      488d7c2428     lea rdi, [rsp + 0x28]
0x000074be      4c8d4c2427     lea r9, [rsp + 0x27]
0x000074c3      4c8ba4248020.  mov r12, qword [rsp + 0x2080]
0x000074cb      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000074d4      48898c243820.  mov qword [rsp + 0x2038], rcx
0x000074dc      31c9           xor ecx, ecx
0x000074de      89d1           mov ecx, edx
0x000074e0      4889f2         mov rdx, rsi
0x000074e3      4889c6         mov rsi, rax
0x000074e6      4c896c2428     mov qword [rsp + 0x28], r13
0x000074eb      e830fbffff     call sym.quote_name_buf.constprop.54
0x000074f0      807c242700     cmp byte [rsp + 0x27], 0
0x000074f5      4889c5         mov rbp, rax
0x000074f8      7409           je 0x7503
0x000074fa      4584ff         test r15b, r15b
0x000074fd      0f8555020000   jne 0x7758
0x00007503      4d85f6         test r14, r14
0x00007506      7432           je 0x753a
0x00007508      bf04000000     mov edi, 4
0x0000750d      e85ee1ffff     call sym.is_colored
0x00007512      84c0           test al, al
0x00007514      0f85ae020000   jne 0x77c8
0x0000751a      488d3d3f8b21.  lea rdi, obj.color_indicator            ; 0x220060
0x00007521      e84af9ffff     call sym.put_indicator
0x00007526      4c89f7         mov rdi, r14
0x00007529      e842f9ffff     call sym.put_indicator
0x0000752e      488d3d3b8b21.  lea rdi, [0x00220070]
0x00007535      e836f9ffff     call sym.put_indicator
0x0000753a      4d85e4         test r12, r12
0x0000753d      0f8445020000   je 0x7788
0x00007543      440fb6355d9e.  movzx r14d, byte [obj.align_variable_outer_quotes] ; [0x2213a8:1]=0
0x0000754b      4584f6         test r14b, r14b
0x0000754e      0f85ac010000   jne 0x7700
0x00007554      4989ea         mov r10, rbp
0x00007557      4531c9         xor r9d, r9d
0x0000755a      488b3d279e21.  mov rdi, qword [obj.hostname]           ; [0x221388:8]=0
0x00007561      31f6           xor esi, esi
0x00007563      4c89542418     mov qword [rsp + 0x18], r10
0x00007568      4c894c2410     mov qword [rsp + 0x10], r9
0x0000756d      e8eee5ffff     call sym.file_escape                    ; .//src:3253
0x00007572      be01000000     mov esi, 1
0x00007577      4c89e7         mov rdi, r12
0x0000757a      4989c7         mov r15, rax
0x0000757d      e8dee5ffff     call sym.file_escape
0x00007582      80382f         cmp byte [rax], 0x2f
0x00007585      4989c3         mov r11, rax
0x00007588      488d0d3e0601.  lea rcx, [0x00017bcd]                   ; "/"
0x0000758f      488d051d0301.  lea rax, [0x000178b3]
0x00007596      488d35fc0201.  lea rsi, str.e_8__file:___s_s_s         ; 0x17899
0x0000759d      4d89d8         mov r8, r11
0x000075a0      4c89fa         mov rdx, r15
0x000075a3      bf01000000     mov edi, 1
0x000075a8      4c895c2408     mov qword [rsp + 8], r11
0x000075ad      480f44c8       cmove rcx, rax
0x000075b1      31c0           xor eax, eax                            ; .//src:3263
0x000075b3      e858c1ffff     call sym.imp.__printf_chk
0x000075b8      4c89ff         mov rdi, r15
0x000075bb      e8c0c2ffff     call sym..plt.got
0x000075c0      4c8b5c2408     mov r11, qword [rsp + 8]
0x000075c5      4c89df         mov rdi, r11
0x000075c8      e8b3c2ffff     call sym..plt.got
0x000075cd      4885db         test rbx, rbx                           ; .//src:3265
0x000075d0      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000075d5      4c8b542418     mov r10, qword [rsp + 0x18]
0x000075da      0f84ba010000   je 0x779a
0x000075e0      803d319d2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x000075e7      7424           je 0x760d
0x000075e9      488b5318       mov rdx, qword [rbx + 0x18]
0x000075ed      488b4320       mov rax, qword [rbx + 0x20]             ; .//src:3257
0x000075f1      4829d0         sub rax, rdx
0x000075f4      4883f807       cmp rax, 7                              ; .//src:3409
0x000075f8      0f86ea010000   jbe 0x77e8
0x000075fe      488b05f39b21.  mov rax, qword [obj.dired_pos]          ; [0x2211f8:8]=0
0x00007605      488902         mov qword [rdx], rax
0x00007608      4883431808     add qword [rbx + 0x18], 8
0x0000760d      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00007612      488b0d6f8c21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00007619      4c89d2         mov rdx, r10
0x0000761c      be01000000     mov esi, 1                              ; .//src:3420
0x00007621      4c01cf         add rdi, r9
0x00007624      e8a7c0ffff     call sym.imp.fwrite_unlocked
0x00007629      488b05c89b21.  mov rax, qword [obj.dired_pos]          ; [0x2211f8:8]=0
0x00007630      4801e8         add rax, rbp
0x00007633      803dde9c2100.  cmp byte [obj.dired], 0                 ; .//src:3472 ; [0x221318:1]=0
0x0000763a      488905b79b21.  mov qword [obj.dired_pos], rax          ; [0x2211f8:8]=0
0x00007641      741d           je 0x7660
0x00007643      488b4b18       mov rcx, qword [rbx + 0x18]
0x00007647      488b5320       mov rdx, qword [rbx + 0x20]
0x0000764b      4829ca         sub rdx, rcx
0x0000764e      4883fa07       cmp rdx, 7
0x00007652      0f86c0010000   jbe 0x7818
0x00007658      488901         mov qword [rcx], rax
0x0000765b      4883431808     add qword [rbx + 0x18], 8
0x00007660      4d85e4         test r12, r12
0x00007663      744b           je 0x76b0
0x00007665      488b0d1c8c21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000766c      488d3d3a0201.  lea rdi, str.e_8                        ; 0x178ad
0x00007673      ba06000000     mov edx, 6
0x00007678      be01000000     mov esi, 1
0x0000767d      e84ec0ffff     call sym.imp.fwrite_unlocked
0x00007682      4584f6         test r14b, r14b
0x00007685      7429           je 0x76b0                               ; .//src:3260
0x00007687      488b442428     mov rax, qword [rsp + 0x28]
0x0000768c      488b3df58b21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00007693      0fb65428ff     movzx edx, byte [rax + rbp - 1]
0x00007698      488b4728       mov rax, qword [rdi + 0x28]
0x0000769c      483b4730       cmp rax, qword [rdi + 0x30]
0x000076a0      0f83aa010000   jae 0x7850
0x000076a6      488d4801       lea rcx, [rax + 1]
0x000076aa      48894f28       mov qword [rdi + 0x28], rcx
0x000076ae      8810           mov byte [rax], dl
0x000076b0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000076b5      483b3c24       cmp rdi, qword [rsp]
0x000076b9      740a           je 0x76c5
0x000076bb      4c39ef         cmp rdi, r13
0x000076be      7405           je 0x76c5
0x000076c0      e8bbc1ffff     call sym..plt.got
0x000076c5      0fb6442427     movzx eax, byte [rsp + 0x27]            ; .//src:3265
0x000076ca      4801e8         add rax, rbp                            ; .//src:3268
0x000076cd      488b9c243820.  mov rbx, qword [rsp + 0x2038]
0x000076d5      6448331c2528.  xor rbx, qword fs:[0x28]
0x000076de      0f85a8010000   jne 0x788c
0x000076e4      4881c4482000.  add rsp, 0x2048
0x000076eb      5b             pop rbx
0x000076ec      5d             pop rbp
0x000076ed      415c           pop r12
0x000076ef      415d           pop r13
0x000076f1      415e           pop r14
0x000076f3      415f           pop r15
0x000076f5      c3             ret
0x000076f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007700      440fb635a19c.  movzx r14d, byte [obj.cwd_some_quoted]  ; [0x2213a9:1]=0
0x00007708      4584f6         test r14b, r14b
0x0000770b      0f8443feffff   je 0x7554                               ; .//src:3281
0x00007711      807c242700     cmp byte [rsp + 0x27], 0
0x00007716      0f851c010000   jne 0x7838
0x0000771c      488b442428     mov rax, qword [rsp + 0x28]
0x00007721      488b3d608b21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00007728      4c8d55fe       lea r10, [rbp - 2]
0x0000772c      0fb610         movzx edx, byte [rax]
0x0000772f      488b4728       mov rax, qword [rdi + 0x28]
0x00007733      483b4730       cmp rax, qword [rdi + 0x30]
0x00007737      0f8332010000   jae 0x786f
0x0000773d      488d4801       lea rcx, [rax + 1]                      ; .//src:3276
0x00007741      41b901000000   mov r9d, 1
0x00007747      48894f28       mov qword [rdi + 0x28], rcx             ; .//src:3296
0x0000774b      8810           mov byte [rax], dl
0x0000774d      e908feffff     jmp 0x755a
0x00007752      660f1f440000   nop word [rax + rax]
0x00007758      488b3d298b21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000775f      488b4728       mov rax, qword [rdi + 0x28]
0x00007763      483b4730       cmp rax, qword [rdi + 0x30]
0x00007767      0f83f3000000   jae 0x7860
0x0000776d      488d5001       lea rdx, [rax + 1]
0x00007771      48895728       mov qword [rdi + 0x28], rdx
0x00007775      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00007778      488305789a21.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x00007780      e97efdffff     jmp 0x7503                              ; .//src:3327
0x00007785      0f1f00         nop dword [rax]
0x00007788      4531c9         xor r9d, r9d
0x0000778b      4531f6         xor r14d, r14d
0x0000778e      4885db         test rbx, rbx
0x00007791      4989ea         mov r10, rbp
0x00007794      0f8546feffff   jne 0x75e0
0x0000779a      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000779f      488b0de28a21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000077a6      4c89d2         mov rdx, r10
0x000077a9      be01000000     mov esi, 1
0x000077ae      4c01cf         add rdi, r9
0x000077b1      e81abfffff     call sym.imp.fwrite_unlocked
0x000077b6      48012d3b9a21.  add qword [obj.dired_pos], rbp          ; [0x2211f8:8]=0
0x000077bd      e99efeffff     jmp 0x7660                              ; .//src:3281
0x000077c2      660f1f440000   nop word [rax + rax]
0x000077c8      488d3d918821.  lea rdi, obj.color_indicator            ; 0x220060
0x000077cf      e89cf6ffff     call sym.put_indicator                  ; .//src:3222
0x000077d4      488d3d958821.  lea rdi, [0x00220070]
0x000077db      e890f6ffff     call sym.put_indicator
0x000077e0      e935fdffff     jmp 0x751a
0x000077e5      0f1f00         nop dword [rax]                         ; .//src:3225
0x000077e8      be08000000     mov esi, 8
0x000077ed      4889df         mov rdi, rbx
0x000077f0      4c89542410     mov qword [rsp + 0x10], r10
0x000077f5      4c894c2408     mov qword [rsp + 8], r9
0x000077fa      e831dd0000     call sym._obstack_newchunk
0x000077ff      488b5318       mov rdx, qword [rbx + 0x18]
0x00007803      4c8b542410     mov r10, qword [rsp + 0x10]
0x00007808      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000780d      e9ecfdffff     jmp 0x75fe
0x00007812      660f1f440000   nop word [rax + rax]
0x00007818      be08000000     mov esi, 8
0x0000781d      4889df         mov rdi, rbx                            ; .//src:3238
0x00007820      e80bdd0000     call sym._obstack_newchunk
0x00007825      488b4b18       mov rcx, qword [rbx + 0x18]
0x00007829      488b05c89921.  mov rax, qword [obj.dired_pos]          ; [0x2211f8:8]=0
0x00007830      e923feffff     jmp 0x7658
0x00007835      0f1f00         nop dword [rax]
0x00007838      4989ea         mov r10, rbp
0x0000783b      4531c9         xor r9d, r9d
0x0000783e      4531f6         xor r14d, r14d
0x00007841      e914fdffff     jmp 0x755a
0x00007846      662e0f1f8400.  nop word cs:[rax + rax]
0x00007850      0fb6f2         movzx esi, dl
0x00007853      e838bcffff     call sym.imp.__overflow
0x00007858      e953feffff     jmp 0x76b0
0x0000785d      0f1f00         nop dword [rax]
0x00007860      be20000000     mov esi, 0x20                           ; "@"
0x00007865      e826bcffff     call sym.imp.__overflow
0x0000786a      e909ffffff     jmp 0x7778
0x0000786f      0fb6f2         movzx esi, dl
0x00007872      4c89542408     mov qword [rsp + 8], r10
0x00007877      e814bcffff     call sym.imp.__overflow
0x0000787c      41b901000000   mov r9d, 1
0x00007882      4c8b542408     mov r10, qword [rsp + 8]
0x00007887      e9cefcffff     jmp 0x755a
0x0000788c      e88fbbffff     call sym.imp.__stack_chk_fail
0x00007891      0f1f440000     nop dword [rax + rax]
0x00007896      662e0f1f8400.  nop word cs:[rax + rax]
;-- print_name_with_quoting:
0x000078a0      4157           push r15
0x000078a2      4156           push r14
0x000078a4      4189f7         mov r15d, esi
0x000078a7      4155           push r13
0x000078a9      4154           push r12
0x000078ab      4989fe         mov r14, rdi
0x000078ae      55             push rbp
0x000078af      53             push rbx
0x000078b0      4989d5         mov r13, rdx
0x000078b3      4989cc         mov r12, rcx
0x000078b6      4883ec18       sub rsp, 0x18
0x000078ba      4084f6         test sil, sil
0x000078bd      0fb6054e9a21.  movzx eax, byte [obj.print_with_color]  ; [0x221312:1]=0
0x000078c4      745a           je 0x7920
0x000078c6      84c0           test al, al
0x000078c8      488b6f08       mov rbp, qword [rdi + 8]
0x000078cc      0f8576010000   jne 0x7a48
0x000078d2      418b96c40000.  mov edx, dword [r14 + 0xc4]
0x000078d9      488b35f09921.  mov rsi, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x000078e0      4883ec08       sub rsp, 8
0x000078e4      4183f701       xor r15d, 1
0x000078e8      41ff7610       push qword [r14 + 0x10]
0x000078ec      4d89e9         mov r9, r13
0x000078ef      450fb6c7       movzx r8d, r15b
0x000078f3      31c9           xor ecx, ecx
0x000078f5      4889ef         mov rdi, rbp
0x000078f8      e893fbffff     call sym.quote_name
0x000078fd      4889c3         mov rbx, rax
0x00007900      e8dbf5ffff     call sym.process_signals
0x00007905      58             pop rax
0x00007906      5a             pop rdx
0x00007907      4883c418       add rsp, 0x18
0x0000790b      4889d8         mov rax, rbx
0x0000790e      5b             pop rbx
0x0000790f      5d             pop rbp
0x00007910      415c           pop r12
0x00007912      415d           pop r13
0x00007914      415e           pop r14
0x00007916      415f           pop r15
0x00007918      c3             ret
0x00007919      0f1f80000000.  nop dword [rax]
0x00007920      84c0           test al, al
0x00007922      488b2f         mov rbp, qword [rdi]
0x00007925      74ab           je 0x78d2
0x00007927      803d629a2100.  cmp byte [obj.color_symlink_as_referent], 0 ; [0x221390:1]=0
0x0000792e      0fb697b90000.  movzx edx, byte [rdi + 0xb9]
0x00007935      0f85cd010000   jne 0x7b08
0x0000793b      458b4630       mov r8d, dword [r14 + 0x30]
0x0000793f      410fb68eb800.  movzx ecx, byte [r14 + 0xb8]
0x00007947      84c9           test cl, cl
0x00007949      0f8543010000   jne 0x7a92
0x0000794f      418b8ea80000.  mov ecx, dword [r14 + 0xa8]
0x00007956      488d0523ed00.  lea rax, obj.filetype_indicator.11085   ; 0x16680 ; "\r"
0x0000795d      8b0488         mov eax, dword [rax + rcx*4]
0x00007960      83f807         cmp eax, 7
0x00007963      0f94c1         sete cl
0x00007966      83f805         cmp eax, 5
0x00007969      0f84b1010000   je 0x7b20
0x0000796f      85d2           test edx, edx
0x00007971      0f8575030000   jne 0x7cec
0x00007977      84c9           test cl, cl
0x00007979      0f846d030000   je 0x7cec
0x0000797f      803d0a9a2100.  cmp byte [obj.color_symlink_as_referent], 0 ; [0x221390:1]=0
0x00007986      b9d0000000     mov ecx, 0xd0
0x0000798b      751a           jne 0x79a7
0x0000798d      bf0d000000     mov edi, 0xd
0x00007992      e8d9dcffff     call sym.is_colored
0x00007997      3c01           cmp al, 1
0x00007999      4819c9         sbb rcx, rcx
0x0000799c      4883e1a0       and rcx, 0xffffffffffffffa0
0x000079a0      4881c1d00000.  add rcx, 0xd0
0x000079a7      488d1db28621.  lea rbx, obj.color_indicator            ; 0x220060
0x000079ae      4801d9         add rcx, rbx
0x000079b1      4883790800     cmp qword [rcx + 8], 0
0x000079b6      7514           jne 0x79cc
0x000079b8      bf04000000     mov edi, 4
0x000079bd      e8aedcffff     call sym.is_colored
0x000079c2      84c0           test al, al
0x000079c4      0f8408ffffff   je 0x78d2                               ; .//src:3052
0x000079ca      31c9           xor ecx, ecx
0x000079cc      488b35fd9821.  mov rsi, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x000079d3      418b96c40000.  mov edx, dword [r14 + 0xc4]
0x000079da      4883ec08       sub rsp, 8
0x000079de      4183f701       xor r15d, 1
0x000079e2      41ff7610       push qword [r14 + 0x10]
0x000079e6      4889ef         mov rdi, rbp
0x000079e9      4d89e9         mov r9, r13
0x000079ec      450fb6c7       movzx r8d, r15b
0x000079f0      e89bfaffff     call sym.quote_name
0x000079f5      4889c3         mov rbx, rax                            ; .//src:3053
0x000079f8      e8e3f4ffff     call sym.process_signals
0x000079fd      e81ef4ffff     call sym.prep_non_filename_text
0x00007a02      488b0da79821.  mov rcx, qword [obj.line_length]        ; [0x2212b0:8]=0
0x00007a09      5e             pop rsi
0x00007a0a      5f             pop rdi
0x00007a0b      4885c9         test rcx, rcx
0x00007a0e      0f84f3feffff   je 0x7907                               ; .//src:3056
0x00007a14      31d2           xor edx, edx
0x00007a16      4c89e0         mov rax, r12
0x00007a19      48f7f1         div rcx
0x00007a1c      31d2           xor edx, edx
0x00007a1e      4889c6         mov rsi, rax
0x00007a21      4a8d4423ff     lea rax, [rbx + r12 - 1]
0x00007a26      48f7f1         div rcx
0x00007a29      4839c6         cmp rsi, rax
0x00007a2c      0f84d5feffff   je 0x7907
0x00007a32      488d3d978721.  lea rdi, [0x002201d0]
0x00007a39      e832f4ffff     call sym.put_indicator
0x00007a3e      e9c4feffff     jmp 0x7907
0x00007a43      0f1f440000     nop dword [rax + rax]
0x00007a48      80bfb9000000.  cmp byte [rdi + 0xb9], 0
0x00007a4f      448b87ac0000.  mov r8d, dword [rdi + 0xac]             ; .//src:3062
0x00007a56      7528           jne 0x7a80
0x00007a58      bf0c000000     mov edi, 0xc                            ; .//src:3063
0x00007a5d      e80edcffff     call sym.is_colored
0x00007a62      84c0           test al, al
0x00007a64      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007a69      0f84d0feffff   je 0x793f
0x00007a6f      b9c0000000     mov ecx, 0xc0
0x00007a74      e92effffff     jmp 0x79a7
0x00007a79      0f1f80000000.  nop dword [rax]
0x00007a80      410fb68eb800.  movzx ecx, byte [r14 + 0xb8]
0x00007a88      31d2           xor edx, edx
0x00007a8a      84c9           test cl, cl
0x00007a8c      0f84bdfeffff   je 0x794f
0x00007a92      4489c0         mov eax, r8d
0x00007a95      2500f00000     and eax, 0xf000                         ; .//src:3067
0x00007a9a      3d00800000     cmp eax, 0x8000
0x00007a9f      0f84eb000000   je 0x7b90                               ; .//src:3068
0x00007aa5      3d00400000     cmp eax, 0x4000
0x00007aaa      0f8460010000   je 0x7c10
0x00007ab0      3d00a00000     cmp eax, 0xa000
0x00007ab5      0f84b5010000   je 0x7c70
0x00007abb      3d00100000     cmp eax, 0x1000
0x00007ac0      b980000000     mov ecx, 0x80
0x00007ac5      0f84dcfeffff   je 0x79a7
0x00007acb      3d00c00000     cmp eax, 0xc000
0x00007ad0      b990000000     mov ecx, 0x90
0x00007ad5      0f84ccfeffff   je 0x79a7
0x00007adb      3d00600000     cmp eax, 0x6000                         ; "H\x8bu\bD\x89\xeaL\x89\xff\xe8\xc1\xf9\xff\xff\xeb\xc2\x0f\x1f\x80"
0x00007ae0      b9a0000000     mov ecx, 0xa0
0x00007ae5      0f84bcfeffff   je 0x79a7
0x00007aeb      3d00200000     cmp eax, 0x2000
0x00007af0      b9d0000000     mov ecx, 0xd0
0x00007af5      bbb0000000     mov ebx, 0xb0
0x00007afa      480f44cb       cmove rcx, rbx
0x00007afe      e9a4feffff     jmp 0x79a7
0x00007b03      0f1f440000     nop dword [rax + rax]
0x00007b08      84d2           test dl, dl
0x00007b0a      0f842bfeffff   je 0x793b
0x00007b10      458b86ac0000.  mov r8d, dword [r14 + 0xac]
0x00007b17      e923feffff     jmp 0x793f
0x00007b1c      0f1f4000       nop dword [rax]
0x00007b20      4889ef         mov rdi, rbp
0x00007b23      e8d8b8ffff     call sym.imp.strlen
0x00007b28      488b1dd99721.  mov rbx, qword [obj.color_ext_list]     ; [0x221308:8]=0
0x00007b2f      4889c1         mov rcx, rax
0x00007b32      4885db         test rbx, rbx
0x00007b35      743a           je 0x7b71
0x00007b37      660f1f840000.  nop word [rax + rax]
0x00007b40      488b13         mov rdx, qword [rbx]
0x00007b43      4839d1         cmp rcx, rdx
0x00007b46      7220           jb 0x7b68
0x00007b48      4889cf         mov rdi, rcx
0x00007b4b      488b7308       mov rsi, qword [rbx + 8]
0x00007b4f      48894c2408     mov qword [rsp + 8], rcx
0x00007b54      4829d7         sub rdi, rdx                            ; .//src:2492
0x00007b57      4801ef         add rdi, rbp
0x00007b5a      e871490000     call sym.c_strncasecmp
0x00007b5f      85c0           test eax, eax
0x00007b61      488b4c2408     mov rcx, qword [rsp + 8]                ; .//src:2493
0x00007b66      7418           je 0x7b80
0x00007b68      488b5b20       mov rbx, qword [rbx + 0x20]
0x00007b6c      4885db         test rbx, rbx
0x00007b6f      75cf           jne 0x7b40
0x00007b71      b950000000     mov ecx, 0x50                           ; 'P'
0x00007b76      e92cfeffff     jmp 0x79a7
0x00007b7b      0f1f440000     nop dword [rax + rax]
0x00007b80      488d4b10       lea rcx, [rbx + 0x10]
0x00007b84      e928feffff     jmp 0x79b1
0x00007b89      0f1f80000000.  nop dword [rax]
0x00007b90      41f7c0000800.  test r8d, 0x800
0x00007b97      741f           je 0x7bb8
0x00007b99      bf10000000     mov edi, 0x10
0x00007b9e      e8cddaffff     call sym.is_colored
0x00007ba3      84c0           test al, al
0x00007ba5      7411           je 0x7bb8
0x00007ba7      b900010000     mov ecx, 0x100
0x00007bac      e9f6fdffff     jmp 0x79a7                              ; .//src:2516
0x00007bb1      0f1f80000000.  nop dword [rax]
0x00007bb8      41f7c0000400.  test r8d, 0x400
0x00007bbf      752f           jne 0x7bf0
0x00007bc1      bf15000000     mov edi, 0x15
0x00007bc6      e8a5daffff     call sym.is_colored
0x00007bcb      84c0           test al, al
0x00007bcd      0f84ad000000   je 0x7c80
0x00007bd3      4180bec00000.  cmp byte [r14 + 0xc0], 0
0x00007bdb      0f849f000000   je 0x7c80
0x00007be1      b950010000     mov ecx, 0x150
0x00007be6      e9bcfdffff     jmp 0x79a7                              ; ../coreutils-8.31/src/.c:-1514
0x00007beb      0f1f440000     nop dword [rax + rax]
0x00007bf0      bf11000000     mov edi, 0x11
0x00007bf5      e876daffff     call sym.is_colored
0x00007bfa      84c0           test al, al
0x00007bfc      74c3           je 0x7bc1
0x00007bfe      b910010000     mov ecx, 0x110
0x00007c03      e99ffdffff     jmp 0x79a7
0x00007c08      0f1f84000000.  nop dword [rax + rax]
0x00007c10      4489c0         mov eax, r8d
0x00007c13      2502020000     and eax, 0x202                          ; .//src:2531
0x00007c18      3d02020000     cmp eax, 0x202
0x00007c1d      0f84ad000000   je 0x7cd0
0x00007c23      41f6c002       test r8b, 2
0x00007c27      7417           je 0x7c40
0x00007c29      bf13000000     mov edi, 0x13
0x00007c2e      e83ddaffff     call sym.is_colored
0x00007c33      84c0           test al, al
0x00007c35      b930010000     mov ecx, 0x130
0x00007c3a      0f8567fdffff   jne 0x79a7
0x00007c40      4181e0000200.  and r8d, 0x200
0x00007c47      b960000000     mov ecx, 0x60                           ; '`'
0x00007c4c      0f8455fdffff   je 0x79a7
0x00007c52      bf12000000     mov edi, 0x12
0x00007c57      e814daffff     call sym.is_colored
0x00007c5c      3c01           cmp al, 1
0x00007c5e      4819c9         sbb rcx, rcx
0x00007c61      80e140         and cl, 0x40                            ; segment.PHDR
0x00007c64      4881c1200100.  add rcx, 0x120
0x00007c6b      e937fdffff     jmp 0x79a7
0x00007c70      b807000000     mov eax, 7
0x00007c75      e9f5fcffff     jmp 0x796f
0x00007c7a      660f1f440000   nop word [rax + rax]
0x00007c80      4183e049       and r8d, 0x49
0x00007c84      741a           je 0x7ca0
0x00007c86      bf0e000000     mov edi, 0xe
0x00007c8b      e8e0d9ffff     call sym.is_colored
0x00007c90      84c0           test al, al
0x00007c92      740c           je 0x7ca0
0x00007c94      b9e0000000     mov ecx, 0xe0
0x00007c99      e909fdffff     jmp 0x79a7
0x00007c9e      6690           nop
0x00007ca0      49837e2801     cmp qword [r14 + 0x28], 1
0x00007ca5      0f8675feffff   jbe 0x7b20                              ; .//src:2543
0x00007cab      bf16000000     mov edi, 0x16
0x00007cb0      e8bbd9ffff     call sym.is_colored
0x00007cb5      84c0           test al, al
0x00007cb7      0f8463feffff   je 0x7b20
0x00007cbd      b960010000     mov ecx, 0x160
0x00007cc2      e9e0fcffff     jmp 0x79a7
0x00007cc7      660f1f840000.  nop word [rax + rax]
0x00007cd0      bf14000000     mov edi, 0x14
0x00007cd5      e896d9ffff     call sym.is_colored
0x00007cda      84c0           test al, al
0x00007cdc      b940010000     mov ecx, 0x140
0x00007ce1      0f85c0fcffff   jne 0x79a7
0x00007ce7      e937ffffff     jmp 0x7c23
0x00007cec      48c1e004       shl rax, 4
0x00007cf0      4889c1         mov rcx, rax
0x00007cf3      e9affcffff     jmp 0x79a7
0x00007cf8      0f1f84000000.  nop dword [rax + rax]
;-- print_file_name_and_frills:
0x00007d00      55             push rbp
0x00007d01      53             push rbx
0x00007d02      4889f5         mov rbp, rsi
0x00007d05      4889fb         mov rbx, rdi
0x00007d08      4881eca80200.  sub rsp, 0x2a8
0x00007d0f      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:2560
0x00007d18      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x00007d20      31c0           xor eax, eax
0x00007d22      e8a9f2ffff     call sym.set_normal_color
0x00007d27      803dce952100.  cmp byte [obj.print_inode], 0           ; [0x2212fc:1]=0
0x00007d2e      7441           je 0x7d71
0x00007d30      80bbb8000000.  cmp byte [rbx + 0xb8], 0
0x00007d37      488d0d59fb00.  lea rcx, [0x00017897]                   ; "?"
0x00007d3e      740d           je 0x7d4d
0x00007d40      488b7b20       mov rdi, qword [rbx + 0x20]
0x00007d44      4885ff         test rdi, rdi
0x00007d47      0f852b010000   jne 0x7e78
0x00007d4d      31d2           xor edx, edx                            ; .//src:2566
0x00007d4f      833de2952100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00007d56      7406           je 0x7d5e
0x00007d58      8b1502962100   mov edx, dword [obj.inode_number_width] ; [0x221360:4]=0
0x00007d5e      488d355ffb00.  lea rsi, [0x000178c4]                   ; "%*s "
0x00007d65      bf01000000     mov edi, 1
0x00007d6a      31c0           xor eax, eax
0x00007d6c      e89fb9ffff     call sym.imp.__printf_chk
0x00007d71      803db4952100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x00007d78      7438           je 0x7db2
0x00007d7a      80bbb8000000.  cmp byte [rbx + 0xb8], 0
0x00007d81      488d0d0ffb00.  lea rcx, [0x00017897]                   ; "?"
0x00007d88      0f85b2000000   jne 0x7e40
0x00007d8e      31d2           xor edx, edx
0x00007d90      833da1952100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00007d97      7406           je 0x7d9f                               ; .//src:2577
0x00007d99      8b15bd952100   mov edx, dword [obj.block_size_width]   ; [0x22135c:4]=0
0x00007d9f      488d351efb00.  lea rsi, [0x000178c4]                   ; "%*s "
0x00007da6      bf01000000     mov edi, 1
0x00007dab      31c0           xor eax, eax
0x00007dad      e85eb9ffff     call sym.imp.__printf_chk
0x00007db2      803dac952100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00007db9      742b           je 0x7de6
0x00007dbb      31d2           xor edx, edx
0x00007dbd      833d74952100.  cmp dword [obj.format], 4               ; .//src:2604 ; [0x221338:4]=0
0x00007dc4      488b8bb00000.  mov rcx, qword [rbx + 0xb0]
0x00007dcb      7406           je 0x7dd3
0x00007dcd      8b1581952100   mov edx, dword [obj.scontext_width]     ; [0x221354:4]=0
0x00007dd3      488d35eafa00.  lea rsi, [0x000178c4]                   ; "%*s "
0x00007dda      bf01000000     mov edi, 1
0x00007ddf      31c0           xor eax, eax
0x00007de1      e82ab9ffff     call sym.imp.__printf_chk
0x00007de6      4889e9         mov rcx, rbp
0x00007de9      31d2           xor edx, edx
0x00007deb      31f6           xor esi, esi
0x00007ded      4889df         mov rdi, rbx
0x00007df0      e8abfaffff     call sym.print_name_with_quoting
0x00007df5      4889c5         mov rbp, rax
0x00007df8      8b0516952100   mov eax, dword [obj.indicator_style]    ; [0x221314:4]=0
0x00007dfe      85c0           test eax, eax
0x00007e00      741b           je 0x7e1d
0x00007e02      0fb6bbb80000.  movzx edi, byte [rbx + 0xb8]
0x00007e09      8b93a8000000   mov edx, dword [rbx + 0xa8]
0x00007e0f      8b7330         mov esi, dword [rbx + 0x30]
0x00007e12      e819ebffff     call sym.print_type_indicator
0x00007e17      0fb6c0         movzx eax, al
0x00007e1a      4801c5         add rbp, rax
0x00007e1d      488b9c249802.  mov rbx, qword [rsp + sym..gnu.hash]
0x00007e25      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007e2e      4889e8         mov rax, rbp
0x00007e31      7555           jne 0x7e88
0x00007e33      4881c4a80200.  add rsp, 0x2a8
0x00007e3a      5b             pop rbx
0x00007e3b      5d             pop rbp                                 ; .//src:2612
0x00007e3c      c3             ret
0x00007e3d      0f1f00         nop dword [rax]
0x00007e40      8b15e2942100   mov edx, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x00007e46      488b7b58       mov rdi, qword [rbx + 0x58]
0x00007e4a      b900020000     mov ecx, 0x200                          ; .//src:2658
0x00007e4f      4c8b05ca9421.  mov r8, qword [obj.output_block_size]   ; [0x221320:8]=0
0x00007e56      4889e6         mov rsi, rsp
0x00007e59      e8626d0000     call sym.human_readable
0x00007e5e      31d2           xor edx, edx
0x00007e60      833dd1942100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00007e67      4889c1         mov rcx, rax                            ; ../coreutils-8.31/src/.c:-1514
0x00007e6a      0f8529ffffff   jne 0x7d99
0x00007e70      e92affffff     jmp 0x7d9f
0x00007e75      0f1f00         nop dword [rax]
0x00007e78      4889e6         mov rsi, rsp
0x00007e7b      e8207d0000     call sym.umaxtostr
0x00007e80      4889c1         mov rcx, rax
0x00007e83      e9c5feffff     jmp 0x7d4d
0x00007e88      e893b5ffff     call sym.imp.__stack_chk_fail
0x00007e8d      0f1f00         nop dword [rax]
;-- print_long_format:
0x00007e90      4157           push r15
0x00007e92      4156           push r14
0x00007e94      4155           push r13                                ; .//src:2666
0x00007e96      4154           push r12
0x00007e98      55             push rbp
0x00007e99      53             push rbx
0x00007e9a      4889fd         mov rbp, rdi
0x00007e9d      4881ec281300.  sub rsp, 0x1328
0x00007ea4      64488b042528.  mov rax, qword fs:[0x28]
0x00007ead      488984241813.  mov qword [rsp + 0x1318], rax
0x00007eb5      31c0           xor eax, eax
0x00007eb7      80bfb8000000.  cmp byte [rdi + 0xb8], 0
0x00007ebe      0f84bc030000   je 0x8280
0x00007ec4      4c8dac24b400.  lea r13, [rsp + 0xb4]
0x00007ecc      488d7f18       lea rdi, [rdi + 0x18]
0x00007ed0      4c89ee         mov rsi, r13
0x00007ed3      e878510000     call sym.filemodestring                 ; .//src:2679
0x00007ed8      803d85942100.  cmp byte [obj.any_has_acl], 0           ; [0x221364:1]=0
0x00007edf      0f85ed030000   jne 0x82d2
0x00007ee5      c68424be0000.  mov byte [rsp + 0xbe], 0
0x00007eed      8b0541942100   mov eax, dword [obj.time_type]          ; [0x221334:4]=0
0x00007ef3      83f801         cmp eax, 1
0x00007ef6      0f840c040000   je 0x8308
0x00007efc      0f8246040000   jb 0x8348
0x00007f02      83f802         cmp eax, 2
0x00007f05      0f855d090000   jne 0x8868
0x00007f0b      488b4568       mov rax, qword [rbp + 0x68]
0x00007f0f      488b5560       mov rdx, qword [rbp + 0x60]
0x00007f13      4889442428     mov qword [rsp + 0x28], rax
0x00007f18      4889542420     mov qword [rsp + 0x20], rdx
0x00007f1d      803dd8932100.  cmp byte [obj.print_inode], 0           ; .//src:2496 ; [0x2212fc:1]=0
0x00007f24      0fb695b80000.  movzx edx, byte [rbp + 0xb8]
0x00007f2b      0f8403040000   je 0x8334
0x00007f31      84d2           test dl, dl                             ; ../coreutils-8.31/lib/timespec.h:-1476
0x00007f33      4c8d0d5df900.  lea r9, [0x00017897]                    ; "?"
0x00007f3a      740d           je 0x7f49
0x00007f3c      488b7d20       mov rdi, qword [rbp + 0x20]
0x00007f40      4885ff         test rdi, rdi
0x00007f43      0f85bf060000   jne 0x8608
0x00007f49      4c8da424d004.  lea r12, [rsp + 0x4d0]
0x00007f51      448b05089421.  mov r8d, dword [obj.inode_number_width] ; [0x221360:4]=0
0x00007f58      488d0d65f900.  lea rcx, [0x000178c4]                   ; "%*s "
0x00007f5f      ba3b0e0000     mov edx, 0xe3b
0x00007f64      be01000000     mov esi, 1
0x00007f69      31c0           xor eax, eax                            ; .//src:2500
0x00007f6b      4c89e7         mov rdi, r12
0x00007f6e      4c89e3         mov rbx, r12
0x00007f71      e8fab8ffff     call sym.imp.__sprintf_chk
0x00007f76      8b03           mov eax, dword [rbx]
0x00007f78      4883c304       add rbx, 4
0x00007f7c      8d90fffefefe   lea edx, [rax - 0x1010101]
0x00007f82      f7d0           not eax
0x00007f84      21c2           and edx, eax
0x00007f86      81e280808080   and edx, 0x80808080
0x00007f8c      74e8           je 0x7f76
0x00007f8e      89d0           mov eax, edx
0x00007f90      c1e810         shr eax, 0x10
0x00007f93      f7c280800000   test edx, 0x8080
0x00007f99      0f44d0         cmove edx, eax
0x00007f9c      488d4302       lea rax, [rbx + 2]
0x00007fa0      480f44d8       cmove rbx, rax
0x00007fa4      89d0           mov eax, edx
0x00007fa6      00d0           add al, dl
0x00007fa8      0fb695b80000.  movzx edx, byte [rbp + 0xb8]
0x00007faf      4883db03       sbb rbx, 3
0x00007fb3      803d72932100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x00007fba      747b           je 0x8037
0x00007fbc      84d2           test dl, dl
0x00007fbe      4c8d3dd2f800.  lea r15, [0x00017897]                   ; "?"
0x00007fc5      0f85b5060000   jne 0x8680
0x00007fcb      448b358a9321.  mov r14d, dword [obj.block_size_width]  ; .//src:2524 ; [0x22135c:4]=0
0x00007fd2      31f6           xor esi, esi
0x00007fd4      4c89ff         mov rdi, r15
0x00007fd7      e844820000     call sym.gnu_mbswidth
0x00007fdc      4129c6         sub r14d, eax
0x00007fdf      4585f6         test r14d, r14d
0x00007fe2      4489f0         mov eax, r14d
0x00007fe5      0f8e15050000   jle 0x8500
0x00007feb      83e801         sub eax, 1
0x00007fee      4889c2         mov rdx, rax
0x00007ff1      488d4c0301     lea rcx, [rbx + rax + 1]
0x00007ff6      4889d8         mov rax, rbx
0x00007ff9      0f1f80000000.  nop dword [rax]
0x00008000      4883c001       add rax, 1
0x00008004      c640ff20       mov byte [rax - 1], 0x20                ; [0x20:1]=64 ; "@"
0x00008008      4839c1         cmp rcx, rax
0x0000800b      75f3           jne 0x8000
0x0000800d      4863c2         movsxd rax, edx
0x00008010      488d540301     lea rdx, [rbx + rax + 1]
0x00008015      4983c701       add r15, 1
0x00008019      410fb647ff     movzx eax, byte [r15 - 1]
0x0000801e      488d5a01       lea rbx, [rdx + 1]
0x00008022      84c0           test al, al
0x00008024      8843ff         mov byte [rbx - 1], al
0x00008027      0f85d3040000   jne 0x8500
0x0000802d      c60220         mov byte [rdx], 0x20                    ; [0x20:1]=64 ; "@"
0x00008030      0fb695b80000.  movzx edx, byte [rbp + 0xb8]
0x00008037      84d2           test dl, dl
0x00008039      488d0557f800.  lea rax, [0x00017897]                   ; "?"
0x00008040      0f85a2040000   jne 0x84e8
0x00008046      4883ec08       sub rsp, 8
0x0000804a      448b0d079321.  mov r9d, dword [obj.nlink_width]        ; .//src:2480 ; [0x221358:4]=0
0x00008051      488d0d5cf800.  lea rcx, [0x000178b4]                   ; "%s %*s "
0x00008058      50             push rax                                ; .//src:2481
0x00008059      4d89e8         mov r8, r13
0x0000805c      4889df         mov rdi, rbx
0x0000805f      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008066      be01000000     mov esi, 1
0x0000806b      31c0           xor eax, eax
0x0000806d      e8feb7ffff     call sym.imp.__sprintf_chk
0x00008072      4889df         mov rdi, rbx
0x00008075      e886b3ffff     call sym.imp.strlen
0x0000807a      4801c3         add rbx, rax
0x0000807d      803d94922100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x00008084      4158           pop r8
0x00008086      4159           pop r9
0x00008088      0f852a040000   jne 0x84b8
0x0000808e      803d8c7f2100.  cmp byte [obj.print_owner], 0           ; [0x220021:1]=1
0x00008095      7519           jne 0x80b0
0x00008097      803d827f2100.  cmp byte [obj.print_group], 0           ; [0x220020:1]=1
0x0000809e      7510           jne 0x80b0
0x000080a0      803d87922100.  cmp byte [obj.print_author], 0          ; [0x22132e:1]=0
0x000080a7      0f8443050000   je 0x85f0
0x000080ad      0f1f00         nop dword [rax]
0x000080b0      488b35d18121.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000080b7      4c89e7         mov rdi, r12
0x000080ba      4c29e3         sub rbx, r12
0x000080bd      e8aeb4ffff     call sym.imp.fputs_unlocked
0x000080c2      48011d2f9121.  add qword [obj.dired_pos], rbx          ; [0x2211f8:8]=0
0x000080c9      803d517f2100.  cmp byte [obj.print_owner], 0           ; [0x220021:1]=1
0x000080d0      0f85ca040000   jne 0x85a0
0x000080d6      803d437f2100.  cmp byte [obj.print_group], 0           ; [0x220020:1]=1
0x000080dd      0f856d040000   jne 0x8550                              ; stdio.h:-1649
0x000080e3      803d44922100.  cmp byte [obj.print_author], 0          ; [0x22132e:1]=0
0x000080ea      0f8540040000   jne 0x8530
0x000080f0      803d6e922100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x000080f7      4c89e3         mov rbx, r12
0x000080fa      0f8510040000   jne 0x8510
0x00008100      80bdb8000000.  cmp byte [rbp + 0xb8], 0
0x00008107      0f8453020000   je 0x8360
0x0000810d      8b4530         mov eax, dword [rbp + 0x30]
0x00008110      2500b00000     and eax, 0xb000
0x00008115      3d00200000     cmp eax, 0x2000
0x0000811a      0f8490050000   je 0x86b0
0x00008120      488b7d48       mov rdi, qword [rbp + 0x48]
0x00008124      4c8b05ed7e21.  mov r8, qword [obj.file_output_block_size] ; [0x220018:8]=1
0x0000812b      488db424e000.  lea rsi, [rsp + 0xe0]
0x00008133      8b15e3912100   mov edx, dword [obj.file_human_output_opts] ; [0x22131c:4]=0
0x00008139      b901000000     mov ecx, 1
0x0000813e      e87d6a0000     call sym.human_readable                 ; .//src:2367
0x00008143      4989c6         mov r14, rax
0x00008146      448b2def9121.  mov r13d, dword [obj.file_size_width]   ; [0x22133c:4]=0
0x0000814d      31f6           xor esi, esi
0x0000814f      4c89f7         mov rdi, r14
0x00008152      e8c9800000     call sym.gnu_mbswidth
0x00008157      4129c5         sub r13d, eax
0x0000815a      4585ed         test r13d, r13d
0x0000815d      4489e8         mov eax, r13d
0x00008160      7e23           jle 0x8185
0x00008162      83e801         sub eax, 1
0x00008165      4889c2         mov rdx, rax
0x00008168      488d4c0301     lea rcx, [rbx + rax + 1]
0x0000816d      4889d8         mov rax, rbx
0x00008170      4883c001       add rax, 1
0x00008174      c640ff20       mov byte [rax - 1], 0x20                ; [0x20:1]=64 ; "@"
0x00008178      4839c8         cmp rax, rcx
0x0000817b      75f3           jne 0x8170
0x0000817d      4863c2         movsxd rax, edx
0x00008180      488d5c0301     lea rbx, [rbx + rax + 1]
0x00008185      4983c601       add r14, 1
0x00008189      410fb646ff     movzx eax, byte [r14 - 1]
0x0000818e      4c8d6b01       lea r13, [rbx + 1]
0x00008192      84c0           test al, al
0x00008194      418845ff       mov byte [r13 - 1], al
0x00008198      0f85d2010000   jne 0x8370
0x0000819e      c60320         mov byte [rbx], 0x20                    ; [0x20:1]=64 ; "@"
0x000081a1      41c6450001     mov byte [r13], 1
0x000081a6      80bdb8000000.  cmp byte [rbp + 0xb8], 0
0x000081ad      488d1de3f600.  lea rbx, [0x00017897]                   ; "?"
0x000081b4      0f8536020000   jne 0x83f0
0x000081ba      448b05537e21.  mov r8d, dword [obj.width.10774]        ; [0x220014:4]=-1
0x000081c1      4585c0         test r8d, r8d
0x000081c4      0f88b6050000   js 0x8780
0x000081ca      488d0df3f600.  lea rcx, [0x000178c4]                   ; "%*s "
0x000081d1      4989d9         mov r9, rbx
0x000081d4      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000081db      be01000000     mov esi, 1
0x000081e0      4c89ef         mov rdi, r13
0x000081e3      31c0           xor eax, eax                            ; .//src:2226
0x000081e5      e886b6ffff     call sym.imp.__sprintf_chk
0x000081ea      4c89ef         mov rdi, r13                            ; .//src:2377
0x000081ed      e80eb2ffff     call sym.imp.strlen                     ; .//src:2226
0x000081f2      498d5c0500     lea rbx, [r13 + rax]
0x000081f7      488b358a8021.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000081fe      4c89e7         mov rdi, r12
0x00008201      4c29e3         sub rbx, r12
0x00008204      e867b3ffff     call sym.imp.fputs_unlocked
0x00008209      488d15908f21.  lea rdx, obj.dired_obstack              ; 0x2211a0
0x00008210      31f6           xor esi, esi
0x00008212      4889d9         mov rcx, rbx
0x00008215      4889ef         mov rdi, rbp
0x00008218      48011dd98f21.  add qword [obj.dired_pos], rbx          ; [0x2211f8:8]=0
0x0000821f      e87cf6ffff     call sym.print_name_with_quoting
0x00008224      8b95a8000000   mov edx, dword [rbp + 0xa8]
0x0000822a      4989c4         mov r12, rax
0x0000822d      83fa06         cmp edx, 6
0x00008230      0f844a010000   je 0x8380
0x00008236      8b05d8902100   mov eax, dword [obj.indicator_style]    ; [0x221314:4]=0
0x0000823c      85c0           test eax, eax
0x0000823e      740f           je 0x824f
0x00008240      0fb6bdb80000.  movzx edi, byte [rbp + 0xb8]
0x00008247      8b7530         mov esi, dword [rbp + 0x30]
0x0000824a      e8e1e6ffff     call sym.print_type_indicator
0x0000824f      488b84241813.  mov rax, qword [rsp + 0x1318]
0x00008257      644833042528.  xor rax, qword fs:[0x28]
0x00008260      0f85fd050000   jne 0x8863
0x00008266      4881c4281300.  add rsp, 0x1328
0x0000826d      5b             pop rbx
0x0000826e      5d             pop rbp                                 ; .//src:2145
0x0000826f      415c           pop r12
0x00008271      415d           pop r13
0x00008273      415e           pop r14
0x00008275      415f           pop r15
0x00008277      c3             ret
0x00008278      0f1f84000000.  nop dword [rax + rax]
0x00008280      8b87a8000000   mov eax, dword [rdi + 0xa8]
0x00008286      488d15e3e400.  lea rdx, obj.filetype_letter            ; .//src:2304 ; 0x16770 ; "?pcdb-lswd"
0x0000828d      803dd0902100.  cmp byte [obj.any_has_acl], 0           ; [0x221364:1]=0
0x00008294      4c8dac24b400.  lea r13, [rsp + 0xb4]
0x0000829c      41ba3f3f0000   mov r10d, 0x3f3f                        ; '??'
0x000082a2      0fb60402       movzx eax, byte [rdx + rax]
0x000082a6      888424b40000.  mov byte [rsp + 0xb4], al
0x000082ad      48b83f3f3f3f.  movabs rax, 0x3f3f3f3f3f3f3f3f          ; '????????'
0x000082b7      48898424b500.  mov qword [rsp + 0xb5], rax
0x000082bf      6645895509     mov word [r13 + 9], r10w
0x000082c4      c68424bf0000.  mov byte [rsp + 0xbf], 0
0x000082cc      0f8413fcffff   je 0x7ee5
0x000082d2      8b85bc000000   mov eax, dword [rbp + 0xbc]
0x000082d8      83f801         cmp eax, 1                              ; .//src:2314
0x000082db      0f84ff020000   je 0x85e0
0x000082e1      83f802         cmp eax, 2
0x000082e4      0f8503fcffff   jne 0x7eed
0x000082ea      8b0544902100   mov eax, dword [obj.time_type]          ; [0x221334:4]=0
0x000082f0      c68424be0000.  mov byte [rsp + 0xbe], 0x2b             ; '+'
                                                                       ; [0x2b:1]=0
0x000082f8      83f801         cmp eax, 1
0x000082fb      0f85fbfbffff   jne 0x7efc
0x00008301      0f1f80000000.  nop dword [rax]
0x00008308      803ded8f2100.  cmp byte [obj.print_inode], 0           ; [0x2212fc:1]=0
0x0000830f      488b95800000.  mov rdx, qword [rbp + 0x80]
0x00008316      488b85880000.  mov rax, qword [rbp + 0x88]             ; .//src:2267
0x0000831d      4889542420     mov qword [rsp + 0x20], rdx
0x00008322      0fb695b80000.  movzx edx, byte [rbp + 0xb8]            ; .//src:2268
0x00008329      4889442428     mov qword [rsp + 0x28], rax
0x0000832e      0f85fdfbffff   jne 0x7f31
0x00008334      4c8da424d004.  lea r12, [rsp + 0x4d0]
0x0000833c      4c89e3         mov rbx, r12                            ; string_fortified.h:-1790
0x0000833f      e96ffcffff     jmp 0x7fb3
0x00008344      0f1f4000       nop dword [rax]
0x00008348      488b4578       mov rax, qword [rbp + 0x78]
0x0000834c      488b5570       mov rdx, qword [rbp + 0x70]
0x00008350      4889442428     mov qword [rsp + 0x28], rax
0x00008355      4889542420     mov qword [rsp + 0x20], rdx
0x0000835a      e9befbffff     jmp 0x7f1d
0x0000835f      90             nop
0x00008360      4c8d3530f500.  lea r14, [0x00017897]                   ; "?"
0x00008367      e9dafdffff     jmp 0x8146
0x0000836c      0f1f4000       nop dword [rax]
0x00008370      4c89eb         mov rbx, r13
0x00008373      e90dfeffff     jmp 0x8185
0x00008378      0f1f84000000.  nop dword [rax + rax]
0x00008380      48837d0800     cmp qword [rbp + 8], 0
0x00008385      0f84c4feffff   je 0x824f
0x0000838b      488b0df67e21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00008392      488d3d30f500.  lea rdi, [0x000178c9]                   ; ../coreutils-8.31/src/.c:-1837 ; " -> "
0x00008399      ba04000000     mov edx, 4
0x0000839e      be01000000     mov esi, 1
0x000083a3      e828b3ffff     call sym.imp.fwrite_unlocked
0x000083a8      4a8d4c2304     lea rcx, [rbx + r12 + 4]                ; .//src:2268
0x000083ad      31d2           xor edx, edx
0x000083af      be01000000     mov esi, 1
0x000083b4      4889ef         mov rdi, rbp
0x000083b7      488305398e21.  add qword [obj.dired_pos], 4            ; [0x2211f8:8]=0
0x000083bf      e8dcf4ffff     call sym.print_name_with_quoting
0x000083c4      8b154a8f2100   mov edx, dword [obj.indicator_style]    ; [0x221314:4]=0
0x000083ca      85d2           test edx, edx                           ; .//src:2273
0x000083cc      0f847dfeffff   je 0x824f
0x000083d2      8bb5ac000000   mov esi, dword [rbp + 0xac]
0x000083d8      31d2           xor edx, edx
0x000083da      bf01000000     mov edi, 1
0x000083df      e84ce5ffff     call sym.print_type_indicator
0x000083e4      e966feffff     jmp 0x824f
0x000083e9      0f1f80000000.  nop dword [rax]
0x000083f0      488d5c2430     lea rbx, [rsp + 0x30]
0x000083f5      488b3dac8e21.  mov rdi, qword [obj.localtz]            ; [0x2212a8:8]=0
0x000083fc      488d742420     lea rsi, [rsp + 0x20]
0x00008401      4889da         mov rdx, rbx
0x00008404      e877d60000     call sym.localtime_rz
0x00008409      4885c0         test rax, rax
0x0000840c      0f84ae010000   je 0x85c0
0x00008412      488b0d578f21.  mov rcx, qword [obj.current_time]       ; [0x221370:8]=0
0x00008419      488b542420     mov rdx, qword [rsp + 0x20]
0x0000841e      4839d1         cmp rcx, rdx
0x00008421      0f8cf9010000   jl 0x8620
0x00008427      488b3d4a8f21.  mov rdi, qword [0x00221378]             ; [0x221378:8]=0
0x0000842e      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00008433      0f8fc7030000   jg 0x8800
0x00008439      4439cf         cmp edi, r9d
0x0000843c      0f88de010000   js 0x8620
0x00008442      488d81543d0f.  lea rax, [rcx - 0xf0c2ac]
0x00008449      4839d0         cmp rax, rdx
0x0000844c      0f8c1b020000   jl 0x866d
0x00008452      b800000000     mov eax, 0
0x00008457      0f8ec3030000   jle 0x8820
0x0000845d      0f1f00         nop dword [rax]
0x00008460      803d617f2100.  cmp byte [obj.use_abformat], 0          ; [0x2203c8:1]=0
0x00008467      4c8b053a8e21.  mov r8, qword [obj.localtz]             ; [0x2212a8:8]=0
0x0000846e      0f84fc020000   je 0x8770
0x00008474      488d1400       lea rdx, [rax + rax]
0x00008478      4801d0         add rax, rdx
0x0000847b      4863542440     movsxd rdx, dword [rsp + 0x40]          ; .//src:2314
0x00008480      488d1482       lea rdx, [rdx + rax*4]
0x00008484      488d05557f21.  lea rax, obj.abformat                   ; 0x2203e0
0x0000848b      48c1e207       shl rdx, 7
0x0000848f      4801c2         add rdx, rax
0x00008492      4889d9         mov rcx, rbx
0x00008495      bee9030000     mov esi, 0x3e9
0x0000849a      4c89ef         mov rdi, r13
0x0000849d      e85e9b0000     call sym.nstrftime
0x000084a2      4885c0         test rax, rax
0x000084a5      0f8415010000   je 0x85c0
0x000084ab      4901c5         add r13, rax
0x000084ae      e918010000     jmp 0x85cb
0x000084b3      0f1f440000     nop dword [rax + rax]
0x000084b8      488b0dc97d21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000084bf      488d3df6f300.  lea rdi, [0x000178bc]                   ; "  "
0x000084c6      ba02000000     mov edx, 2
0x000084cb      be01000000     mov esi, 1
0x000084d0      e8fbb1ffff     call sym.imp.fwrite_unlocked
0x000084d5      4883051b8d21.  add qword [obj.dired_pos], 2            ; [0x2211f8:8]=0
0x000084dd      e9acfbffff     jmp 0x808e
0x000084e2      660f1f440000   nop word [rax + rax]
0x000084e8      488b7d28       mov rdi, qword [rbp + 0x28]
0x000084ec      488db424e000.  lea rsi, [rsp + 0xe0]
0x000084f4      e8a7760000     call sym.umaxtostr
0x000084f9      e948fbffff     jmp 0x8046
0x000084fe      6690           nop
0x00008500      4889da         mov rdx, rbx
0x00008503      e90dfbffff     jmp 0x8015
0x00008508      0f1f84000000.  nop dword [rax + rax]
0x00008510      488bbdb00000.  mov rdi, qword [rbp + 0xb0]
0x00008517      8b15378e2100   mov edx, dword [obj.scontext_width]     ; [0x221354:4]=0
0x0000851d      31f6           xor esi, esi
0x0000851f      e8bcdcffff     call sym.format_user_or_group           ; .//src:2570
0x00008524      e9d7fbffff     jmp 0x8100
0x00008529      0f1f80000000.  nop dword [rax]
0x00008530      0fb695b80000.  movzx edx, byte [rbp + 0xb8]
0x00008537      8b7d34         mov edi, dword [rbp + 0x34]
0x0000853a      8b35088e2100   mov esi, dword [obj.author_width]       ; [0x221348:4]=0
0x00008540      e85bddffff     call sym.format_user
0x00008545      e9a6fbffff     jmp 0x80f0
0x0000854a      660f1f440000   nop word [rax + rax]
0x00008550      80bdb8000000.  cmp byte [rbp + 0xb8], 0
0x00008557      8b15ef8d2100   mov edx, dword [obj.group_width]        ; [0x22134c:4]=0
0x0000855d      488d3d33f300.  lea rdi, [0x00017897]                   ; "?"
0x00008564      8b7538         mov esi, dword [rbp + 0x38]
0x00008567      7427           je 0x8590
0x00008569      31ff           xor edi, edi                            ; .//src:2579
0x0000856b      803dbb8d2100.  cmp byte [obj.numeric_ids], 0           ; [0x22132d:1]=0
0x00008572      751c           jne 0x8590
0x00008574      89f7           mov edi, esi
0x00008576      4889742408     mov qword [rsp + 8], rsi
0x0000857b      89542404       mov dword [rsp + 4], edx
0x0000857f      e8dc730000     call sym.getgroup
0x00008584      488b742408     mov rsi, qword [rsp + 8]
0x00008589      8b542404       mov edx, dword [rsp + 4]
0x0000858d      4889c7         mov rdi, rax
0x00008590      e84bdcffff     call sym.format_user_or_group
0x00008595      e949fbffff     jmp 0x80e3
0x0000859a      660f1f440000   nop word [rax + rax]
0x000085a0      0fb695b80000.  movzx edx, byte [rbp + 0xb8]
0x000085a7      8b7d34         mov edi, dword [rbp + 0x34]
0x000085aa      8b35a08d2100   mov esi, dword [obj.owner_width]        ; [0x221350:4]=0
0x000085b0      e8ebdcffff     call sym.format_user
0x000085b5      e91cfbffff     jmp 0x80d6                              ; .//src:2948
0x000085ba      660f1f440000   nop word [rax + rax]
0x000085c0      41807d0000     cmp byte [r13], 0
0x000085c5      0f85a2020000   jne 0x886d
0x000085cb      b920000000     mov ecx, 0x20                           ; "@"
0x000085d0      498d5d01       lea rbx, [r13 + 1]
0x000085d4      6641894d00     mov word [r13], cx
0x000085d9      e919fcffff     jmp 0x81f7
0x000085de      6690           nop
0x000085e0      c68424be0000.  mov byte [rsp + 0xbe], 0x2e             ; '.'
                                                                       ; [0x2e:1]=0
0x000085e8      e900f9ffff     jmp 0x7eed
0x000085ed      0f1f00         nop dword [rax]
0x000085f0      803d6e8d2100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x000085f7      0f8403fbffff   je 0x8100
0x000085fd      e9aefaffff     jmp 0x80b0
0x00008602      660f1f440000   nop word [rax + rax]                    ; .//src:2964
0x00008608      488db424e000.  lea rsi, [rsp + 0xe0]
0x00008610      e88b750000     call sym.umaxtostr
0x00008615      4989c1         mov r9, rax
0x00008618      e92cf9ffff     jmp 0x7f49
0x0000861d      0f1f00         nop dword [rax]
0x00008620      488d3d498d21.  lea rdi, obj.current_time               ; 0x221370
0x00008627      e854500000     call sym.gettime
0x0000862c      488b0d3d8d21.  mov rcx, qword [obj.current_time]       ; [0x221370:8]=0
0x00008633      488b542420     mov rdx, qword [rsp + 0x20]
0x00008638      488b3d398d21.  mov rdi, qword [0x00221378]             ; [0x221378:8]=0
0x0000863f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00008644      488db1543d0f.  lea rsi, [rcx - 0xf0c2ac]
0x0000864b      4839d6         cmp rsi, rdx
0x0000864e      0f8dc1010000   jge 0x8815
0x00008654      4839ca         cmp rdx, rcx
0x00008657      b801000000     mov eax, 1
0x0000865c      0f8cfefdffff   jl 0x8460
0x00008662      b800000000     mov eax, 0
0x00008667      0f8ff3fdffff   jg 0x8460
0x0000866d      4489c8         mov eax, r9d
0x00008670      29f8           sub eax, edi                            ; .//src:2953
0x00008672      c1e81f         shr eax, 0x1f
0x00008675      e9e6fdffff     jmp 0x8460
0x0000867a      660f1f440000   nop word [rax + rax]
0x00008680      488b7d58       mov rdi, qword [rbp + 0x58]
0x00008684      4c8b05958c21.  mov r8, qword [obj.output_block_size]   ; [0x221320:8]=0
0x0000868b      488db424e000.  lea rsi, [rsp + 0xe0]
0x00008693      8b158f8c2100   mov edx, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x00008699      b900020000     mov ecx, 0x200
0x0000869e      e81d650000     call sym.human_readable
0x000086a3      4989c7         mov r15, rax
0x000086a6      e920f9ffff     jmp 0x7fcb
0x000086ab      0f1f440000     nop dword [rax + rax]
0x000086b0      8b158e8c2100   mov edx, dword [obj.major_device_number_width] ; [0x221344:4]=0
0x000086b6      8b05848c2100   mov eax, dword [obj.minor_device_number_width] ; [0x221340:4]=0
0x000086bc      488db424e000.  lea rsi, [rsp + 0xe0]
0x000086c4      448b2d718c21.  mov r13d, dword [obj.file_size_width]   ; [0x22133c:4]=0
0x000086cb      8d440202       lea eax, [rdx + rax + 2]
0x000086cf      4129c5         sub r13d, eax
0x000086d2      488b4540       mov rax, qword [rbp + 0x40]
0x000086d6      0fb6d0         movzx edx, al
0x000086d9      48c1e80c       shr rax, 0xc
0x000086dd      4889c7         mov rdi, rax
0x000086e0      4030ff         xor dil, dil
0x000086e3      09d7           or edi, edx
0x000086e5      e8b6740000     call sym.umaxtostr
0x000086ea      4989c7         mov r15, rax
0x000086ed      488b4540       mov rax, qword [rbp + 0x40]
0x000086f1      488db424c000.  lea rsi, [rsp + 0xc0]
0x000086f9      448b35408c21.  mov r14d, dword [obj.minor_device_number_width] ; [0x221340:4]=0
0x00008700      4889c7         mov rdi, rax
0x00008703      48c1e820       shr rax, 0x20
0x00008707      48c1ef08       shr rdi, 8
0x0000870b      89fa           mov edx, edi
0x0000870d      4889c7         mov rdi, rax
0x00008710      81e2ff0f0000   and edx, 0xfff
0x00008716      81e700f0ffff   and edi, 0xfffff000
0x0000871c      09d7           or edi, edx
0x0000871e      e87d740000     call sym.umaxtostr
0x00008723      4585ed         test r13d, r13d
0x00008726      41b800000000   mov r8d, 0                              ; .//src:2962
0x0000872c      4157           push r15
0x0000872e      450f49c5       cmovns r8d, r13d
0x00008732      4403050b8c21.  add r8d, dword [obj.major_device_number_width] ; [0x221344:4]=0
0x00008739      4156           push r14
0x0000873b      488d0d7df100.  lea rcx, str.s____s                     ; 0x178bf ; "%*s, %*s "
0x00008742      4989c1         mov r9, rax
0x00008745      be01000000     mov esi, 1
0x0000874a      4889df         mov rdi, rbx
0x0000874d      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008754      31c0           xor eax, eax                            ; .//src:3208
0x00008756      e815b1ffff     call sym.imp.__sprintf_chk
0x0000875b      486305da8b21.  movsxd rax, dword [obj.file_size_width] ; [0x22133c:4]=0
0x00008762      5e             pop rsi                                 ; .//src:3215
0x00008763      5f             pop rdi
0x00008764      4c8d6c0301     lea r13, [rbx + rax + 1]
0x00008769      e933faffff     jmp 0x81a1                              ; .//src:3147
0x0000876e      6690           nop
0x00008770      488d15c97821.  lea rdx, obj.long_time_format           ; 0x220040
0x00008777      488b14c2       mov rdx, qword [rdx + rax*8]
0x0000877b      e912fdffff     jmp 0x8492
0x00008780      4c8d7c2470     lea r15, [rsp + 0x70]
0x00008785      488b3d1c8b21.  mov rdi, qword [obj.localtz]            ; [0x2212a8:8]=0
0x0000878c      488d742418     lea rsi, [rsp + 0x18]                   ; stdio2.h:-1756
0x00008791      48c744241800.  mov qword [rsp + 0x18], 0
0x0000879a      4c89fa         mov rdx, r15
0x0000879d      e8ded20000     call sym.localtime_rz
0x000087a2      4885c0         test rax, rax
0x000087a5      7437           je 0x87de
0x000087a7      803d1a7c2100.  cmp byte [obj.use_abformat], 0          ; [0x2203c8:1]=0
0x000087ae      4c8b05f38a21.  mov r8, qword [obj.localtz]             ; [0x2212a8:8]=0
0x000087b5      488b15847821.  mov rdx, qword [obj.long_time_format]   ; [0x220040:8]=0x17dad str.b__e___Y
0x000087bc      7572           jne 0x8830
0x000087be      4c8db424e000.  lea r14, [rsp + 0xe0]                   ; .//src:3166
0x000087c6      4531c9         xor r9d, r9d
0x000087c9      4c89f9         mov rcx, r15
0x000087cc      bee9030000     mov esi, 0x3e9                          ; .//src:3174
0x000087d1      4c89f7         mov rdi, r14
0x000087d4      e827980000     call sym.nstrftime
0x000087d9      4885c0         test rax, rax
0x000087dc      756d           jne 0x884b
0x000087de      448b052f7821.  mov r8d, dword [obj.width.10774]        ; [0x220014:4]=-1
0x000087e5      4585c0         test r8d, r8d
0x000087e8      0f89dcf9ffff   jns 0x81ca
0x000087ee      c7051c782100.  mov dword [obj.width.10774], 0          ; [0x220014:4]=-1
0x000087f8      4531c0         xor r8d, r8d
0x000087fb      e9caf9ffff     jmp 0x81ca
0x00008800      488db1543d0f.  lea rsi, [rcx - 0xf0c2ac]
0x00008807      b801000000     mov eax, 1
0x0000880c      4839d6         cmp rsi, rdx
0x0000880f      0f8c4bfcffff   jl 0x8460                               ; .//src:3179
0x00008815      31c0           xor eax, eax
0x00008817      4839d6         cmp rsi, rdx
0x0000881a      0f8f40fcffff   jg 0x8460
0x00008820      31c0           xor eax, eax
0x00008822      4439cf         cmp edi, r9d
0x00008825      0f8935fcffff   jns 0x8460
0x0000882b      e924feffff     jmp 0x8654
0x00008830      486394248000.  movsxd rdx, dword [rsp + 0x80]
0x00008838      488d05a17b21.  lea rax, obj.abformat                   ; 0x2203e0
0x0000883f      48c1e207       shl rdx, 7                              ; .//src:3183
0x00008843      4801c2         add rdx, rax
0x00008846      e973ffffff     jmp 0x87be
0x0000884b      31d2           xor edx, edx
0x0000884d      4889c6         mov rsi, rax
0x00008850      4c89f7         mov rdi, r14
0x00008853      e808780000     call sym.mbsnwidth
0x00008858      4189c0         mov r8d, eax
0x0000885b      8905b3772100   mov dword [obj.width.10774], eax        ; [0x220014:4]=-1
0x00008861      eb82           jmp 0x87e5
0x00008863      e8b8abffff     call sym.imp.__stack_chk_fail
0x00008868      e823aaffff     call sym.imp.abort
0x0000886d      80bdb8000000.  cmp byte [rbp + 0xb8], 0
0x00008874      488d1d1cf000.  lea rbx, [0x00017897]                   ; "?"
0x0000887b      0f8439f9ffff   je 0x81ba
0x00008881      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00008886      488db424c000.  lea rsi, [rsp + 0xc0]
0x0000888e      e86d720000     call sym.imaxtostr
0x00008893      4889c3         mov rbx, rax
0x00008896      e91ff9ffff     jmp 0x81ba
0x0000889b      0f1f440000     nop dword [rax + rax]
;-- quote_name_width:
0x000088a0      55             push rbp
0x000088a1      53             push rbx
0x000088a2      4889fd         mov rbp, rdi
0x000088a5      89d1           mov ecx, edx
0x000088a7      4889f2         mov rdx, rsi
0x000088aa      4889ee         mov rsi, rbp
0x000088ad      4881ec382000.  sub rsp, 0x2038
0x000088b4      488d5c2420     lea rbx, [rsp + 0x20]
0x000088b9      488d7c2410     lea rdi, [rsp + 0x10]
0x000088be      4c8d4c240f     lea r9, [rsp + 0xf]
0x000088c3      4c8d442418     lea r8, [rsp + 0x18]
0x000088c8      64488b042528.  mov rax, qword fs:[0x28]
0x000088d1      488984242820.  mov qword [rsp + 0x2028], rax           ; .//src:3198
0x000088d9      31c0           xor eax, eax
0x000088db      48895c2410     mov qword [rsp + 0x10], rbx
0x000088e0      e83be7ffff     call sym.quote_name_buf.constprop.54
0x000088e5      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000088ea      4839df         cmp rdi, rbx
0x000088ed      740a           je 0x88f9
0x000088ef      4839ef         cmp rdi, rbp
0x000088f2      7405           je 0x88f9
0x000088f4      e887afffff     call sym..plt.got
0x000088f9      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000088fe      4803442418     add rax, qword [rsp + 0x18]             ; .//src:3225
0x00008903      488b8c242820.  mov rcx, qword [rsp + 0x2028]
0x0000890b      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008914      750a           jne 0x8920
0x00008916      4881c4382000.  add rsp, 0x2038
0x0000891d      5b             pop rbx
0x0000891e      5d             pop rbp
0x0000891f      c3             ret
0x00008920      e8fbaaffff     call sym.imp.__stack_chk_fail
0x00008925      90             nop                                     ; .//src:3230
0x00008926      662e0f1f8400.  nop word cs:[rax + rax]
;-- length_of_file_name_and_frills:
0x00008930      55             push rbp
0x00008931      53             push rbx
0x00008932      4889fd         mov rbp, rdi
0x00008935      4881eca80200.  sub rsp, 0x2a8
0x0000893c      64488b042528.  mov rax, qword fs:[0x28]
0x00008945      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x0000894d      31c0           xor eax, eax
0x0000894f      803da6892100.  cmp byte [obj.print_inode], 0           ; [0x2212fc:1]=0
0x00008956      0f84ac000000   je 0x8a08
0x0000895c      833dd5892100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00008963      0f8437010000   je 0x8aa0
0x00008969      48631df08921.  movsxd rbx, dword [obj.inode_number_width] ; [0x221360:4]=0
0x00008970      4883c301       add rbx, 1
0x00008974      803db1892100.  cmp byte [obj.print_block_size], 0      ; .//src:3240 ; [0x22132c:1]=0
0x0000897b      0f8407010000   je 0x8a88
0x00008981      486305d48921.  movsxd rax, dword [obj.block_size_width] ; [0x22135c:4]=0
0x00008988      4883c001       add rax, 1
0x0000898c      4801c3         add rbx, rax
0x0000898f      803dcf892100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00008996      0f85cc000000   jne 0x8a68
0x0000899c      8b95c4000000   mov edx, dword [rbp + 0xc4]
0x000089a2      488b35278921.  mov rsi, qword [obj.filename_quoting_options] ; [0x2212d0:8]=0
0x000089a9      488b7d00       mov rdi, qword [rbp]
0x000089ad      e8eefeffff     call sym.quote_name_width
0x000089b2      4801c3         add rbx, rax
0x000089b5      8b0559892100   mov eax, dword [obj.indicator_style]    ; [0x221314:4]=0
0x000089bb      85c0           test eax, eax
0x000089bd      7420           je 0x89df
0x000089bf      0fb6bdb80000.  movzx edi, byte [rbp + 0xb8]
0x000089c6      8b95a8000000   mov edx, dword [rbp + 0xa8]
0x000089cc      8b7530         mov esi, dword [rbp + 0x30]
0x000089cf      e85cdeffff     call sym.get_type_indicator
0x000089d4      84c0           test al, al
0x000089d6      0f95c0         setne al
0x000089d9      0fb6c0         movzx eax, al
0x000089dc      4801c3         add rbx, rax
0x000089df      488b8c249802.  mov rcx, qword [rsp + sym..gnu.hash]
0x000089e7      6448330c2528.  xor rcx, qword fs:[0x28]
0x000089f0      4889d8         mov rax, rbx
0x000089f3      0f85d9000000   jne 0x8ad2
0x000089f9      4881c4a80200.  add rsp, 0x2a8
0x00008a00      5b             pop rbx
0x00008a01      5d             pop rbp
0x00008a02      c3             ret
0x00008a03      0f1f440000     nop dword [rax + rax]
0x00008a08      31db           xor ebx, ebx
0x00008a0a      803d1b892100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x00008a11      0f8478ffffff   je 0x898f
0x00008a17      833d1a892100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00008a1e      0f855dffffff   jne 0x8981
0x00008a24      80bdb8000000.  cmp byte [rbp + 0xb8], 0
0x00008a2b      b802000000     mov eax, 2
0x00008a30      0f8456ffffff   je 0x898c
0x00008a36      488b7d58       mov rdi, qword [rbp + 0x58]
0x00008a3a      4c8b05df8821.  mov r8, qword [obj.output_block_size]   ; [0x221320:8]=0
0x00008a41      4889e6         mov rsi, rsp
0x00008a44      8b15de882100   mov edx, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x00008a4a      b900020000     mov ecx, 0x200
0x00008a4f      e86c610000     call sym.human_readable
0x00008a54      4889c7         mov rdi, rax
0x00008a57      e8a4a9ffff     call sym.imp.strlen
0x00008a5c      4883c001       add rax, 1
0x00008a60      e927ffffff     jmp 0x898c
0x00008a65      0f1f00         nop dword [rax]
0x00008a68      833dc9882100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00008a6f      744f           je 0x8ac0
0x00008a71      486305dc8821.  movsxd rax, dword [obj.scontext_width]  ; [0x221354:4]=0
0x00008a78      4883c001       add rax, 1                              ; .//src:3058
0x00008a7c      4801c3         add rbx, rax
0x00008a7f      e918ffffff     jmp 0x899c
0x00008a84      0f1f4000       nop dword [rax]
0x00008a88      803dd6882100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00008a8f      75e0           jne 0x8a71
0x00008a91      e906ffffff     jmp 0x899c
0x00008a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00008aa0      488b7f20       mov rdi, qword [rdi + 0x20]
0x00008aa4      4889e6         mov rsi, rsp
0x00008aa7      e8f4700000     call sym.umaxtostr
0x00008aac      4889c7         mov rdi, rax
0x00008aaf      e84ca9ffff     call sym.imp.strlen
0x00008ab4      488d5801       lea rbx, [rax + 1]
0x00008ab8      e94dffffff     jmp 0x8a0a
0x00008abd      0f1f00         nop dword [rax]
0x00008ac0      488bbdb00000.  mov rdi, qword [rbp + 0xb0]
0x00008ac7      e834a9ffff     call sym.imp.strlen
0x00008acc      4883c001       add rax, 1
0x00008ad0      ebaa           jmp 0x8a7c
0x00008ad2      e849a9ffff     call sym.imp.__stack_chk_fail
0x00008ad7      660f1f840000.  nop word [rax + rax]
;-- calculate_columns:
0x00008ae0      4c8b0dc98821.  mov r9, qword [obj.cwd_n_used]          ; [0x2213b0:8]=0
0x00008ae7      488b0d128721.  mov rcx, qword [obj.max_idx]            ; [0x221200:8]=0
0x00008aee      4156           push r14
0x00008af0      4155           push r13
0x00008af2      4154           push r12
0x00008af4      55             push rbp
0x00008af5      4189fc         mov r12d, edi
0x00008af8      4939c9         cmp r9, rcx
0x00008afb      53             push rbx
0x00008afc      4889cb         mov rbx, rcx
0x00008aff      490f46d9       cmovbe rbx, r9
0x00008b03      483b1dd67721.  cmp rbx, qword [obj.column_info_alloc.11173] ; [0x2202e0:8]=0
0x00008b0a      0f8619010000   jbe 0x8c29
0x00008b10      4889c8         mov rax, rcx
0x00008b13      488b3dee8621.  mov rdi, qword [obj.column_info]        ; [0x221208:8]=0
0x00008b1a      48d1e8         shr rax, 1
0x00008b1d      4839c3         cmp rbx, rax
0x00008b20      0f826a020000   jb 0x8d90
0x00008b26      ba18000000     mov edx, 0x18
0x00008b2b      31f6           xor esi, esi
0x00008b2d      4889d0         mov rax, rdx
0x00008b30      48f7e1         mul rcx
0x00008b33      0f808e020000   jo 0x8dc7
0x00008b39      4885c0         test rax, rax
0x00008b3c      0f888f020000   js 0x8dd1
0x00008b42      4885f6         test rsi, rsi
0x00008b45      0f8586020000   jne 0x8dd1
0x00008b4b      488d3449       lea rsi, [rcx + rcx*2]
0x00008b4f      48c1e603       shl rsi, 3
0x00008b53      e898ba0000     call sym.xrealloc
0x00008b58      488b2da18621.  mov rbp, qword [obj.max_idx]            ; [0x221200:8]=0
0x00008b5f      488905a28621.  mov qword [obj.column_info], rax        ; [0x221208:8]=0
0x00008b66      488b05737721.  mov rax, qword [obj.column_info_alloc.11173] ; [0x2202e0:8]=0
0x00008b6d      4889ef         mov rdi, rbp
0x00008b70      4829c7         sub rdi, rax
0x00008b73      4883c001       add rax, 1
0x00008b77      4801e8         add rax, rbp
0x00008b7a      4889f9         mov rcx, rdi
0x00008b7d      4889c6         mov rsi, rax
0x00008b80      0f92c0         setb al
0x00008b83      0fb6c0         movzx eax, al
0x00008b86      480fafce       imul rcx, rsi
0x00008b8a      4885c0         test rax, rax                           ; .//src:3088
0x00008b8d      0f853e020000   jne 0x8dd1
0x00008b93      31d2           xor edx, edx
0x00008b95      4889c8         mov rax, rcx
0x00008b98      48f7f7         div rdi
0x00008b9b      4839c6         cmp rsi, rax
0x00008b9e      0f852d020000   jne 0x8dd1
0x00008ba4      ba08000000     mov edx, 8
0x00008ba9      48d1e9         shr rcx, 1
0x00008bac      31f6           xor esi, esi
0x00008bae      4889d0         mov rax, rdx
0x00008bb1      48f7e1         mul rcx
0x00008bb4      0f801c020000   jo 0x8dd6
0x00008bba      4885c0         test rax, rax
0x00008bbd      0f880e020000   js 0x8dd1
0x00008bc3      4885f6         test rsi, rsi
0x00008bc6      0f8505020000   jne 0x8dd1                              ; .//src:3080
0x00008bcc      488d3ccd0000.  lea rdi, [rcx*8]
0x00008bd4      e8b7b90000     call sym.xmalloc
0x00008bd9      488b15007721.  mov rdx, qword [obj.column_info_alloc.11173] ; [0x2202e0:8]=0
0x00008be0      4839d5         cmp rbp, rdx
0x00008be3      7636           jbe 0x8c1b
0x00008be5      488b0d1c8621.  mov rcx, qword [obj.column_info]        ; [0x221208:8]=0
0x00008bec      488d3452       lea rsi, [rdx + rdx*2]
0x00008bf0      488d14d50800.  lea rdx, [rdx*8 + 8]
0x00008bf8      488d4cf110     lea rcx, [rcx + rsi*8 + 0x10]
0x00008bfd      488d34ed0800.  lea rsi, [rbp*8 + 8]
0x00008c05      0f1f00         nop dword [rax]
0x00008c08      488901         mov qword [rcx], rax
0x00008c0b      4801d0         add rax, rdx
0x00008c0e      4883c208       add rdx, 8
0x00008c12      4883c118       add rcx, 0x18
0x00008c16      4839d6         cmp rsi, rdx
0x00008c19      75ed           jne 0x8c08
0x00008c1b      4c8b0d8e8721.  mov r9, qword [obj.cwd_n_used]          ; [0x2213b0:8]=0
0x00008c22      48892db77621.  mov qword [obj.column_info_alloc.11173], rbp ; [0x2202e0:8]=0
0x00008c29      4885db         test rbx, rbx
0x00008c2c      744b           je 0x8c79
0x00008c2e      488b3dd38521.  mov rdi, qword [obj.column_info]        ; [0x221208:8]=0
0x00008c35      4c8d445b03     lea r8, [rbx + rbx*2 + 3]
0x00008c3a      31f6           xor esi, esi
0x00008c3c      ba03000000     mov edx, 3
0x00008c41      0f1f80000000.  nop dword [rax]
0x00008c48      488b44d7f8     mov rax, qword [rdi + rdx*8 - 8]
0x00008c4d      4883c608       add rsi, 8
0x00008c51      c644d7e801     mov byte [rdi + rdx*8 - 0x18], 1
0x00008c56      488954d7f0     mov qword [rdi + rdx*8 - 0x10], rdx
0x00008c5b      488d0c30       lea rcx, [rax + rsi]
0x00008c5f      90             nop
0x00008c60      48c700030000.  mov qword [rax], 3
0x00008c67      4883c008       add rax, 8
0x00008c6b      4839c1         cmp rcx, rax
0x00008c6e      75f0           jne 0x8c60
0x00008c70      4883c203       add rdx, 3                              ; .//src:3019
0x00008c74      4939d0         cmp r8, rdx
0x00008c77      75cf           jne 0x8c48
0x00008c79      4d85c9         test r9, r9
0x00008c7c      0f84cb000000   je 0x8d4d
0x00008c82      31ed           xor ebp, ebp
0x00008c84      0f1f4000       nop dword [rax]
0x00008c88      488b05118721.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00008c8f      488b3ce8       mov rdi, qword [rax + rbp*8]
0x00008c93      e898fcffff     call sym.length_of_file_name_and_frills
0x00008c98      4885db         test rbx, rbx
0x00008c9b      4989c2         mov r10, rax
0x00008c9e      488b3d0b8721.  mov rdi, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00008ca5      0f8495000000   je 0x8d40
0x00008cab      4c8b35fe8521.  mov r14, qword [obj.line_length]        ; [0x2212b0:8]=0
0x00008cb2      488b0d4f8521.  mov rcx, qword [obj.column_info]        ; [0x221208:8]=0
0x00008cb9      31f6           xor esi, esi
0x00008cbb      4c8d5802       lea r11, [rax + 2]
0x00008cbf      4c8d6fff       lea r13, [rdi - 1]
0x00008cc3      eb5c           jmp 0x8d21
0x00008cc5      0f1f00         nop dword [rax]
0x00008cc8      4b8d440500     lea rax, [r13 + r8]
0x00008ccd      31d2           xor edx, edx
0x00008ccf      49f7f0         div r8
0x00008cd2      31d2           xor edx, edx
0x00008cd4      4989c1         mov r9, rax
0x00008cd7      4889e8         mov rax, rbp
0x00008cda      49f7f1         div r9
0x00008cdd      4989c1         mov r9, rax
0x00008ce0      488b5110       mov rdx, qword [rcx + 0x10]
0x00008ce4      4939f1         cmp r9, rsi
0x00008ce7      4c89d0         mov rax, r10
0x00008cea      490f45c3       cmovne rax, r11
0x00008cee      4a8d34ca       lea rsi, [rdx + r9*8]
0x00008cf2      488b16         mov rdx, qword [rsi]
0x00008cf5      4839c2         cmp rdx, rax
0x00008cf8      731b           jae 0x8d15
0x00008cfa      4c8b4908       mov r9, qword [rcx + 8]                 ; .//src:3044
0x00008cfe      4929d1         sub r9, rdx
0x00008d01      4c89ca         mov rdx, r9
0x00008d04      4801c2         add rdx, rax
0x00008d07      48895108       mov qword [rcx + 8], rdx
0x00008d0b      488906         mov qword [rsi], rax                    ; .//src:3028
0x00008d0e      4c397108       cmp qword [rcx + 8], r14
0x00008d12      0f9201         setb byte [rcx]
0x00008d15      4883c118       add rcx, 0x18
0x00008d19      4c39c3         cmp rbx, r8                             ; .//src:3030
0x00008d1c      4c89c6         mov rsi, r8
0x00008d1f      741f           je 0x8d40
0x00008d21      803900         cmp byte [rcx], 0
0x00008d24      4c8d4601       lea r8, [rsi + 1]
0x00008d28      74eb           je 0x8d15                               ; .//src:3037
0x00008d2a      4584e4         test r12b, r12b
0x00008d2d      7599           jne 0x8cc8
0x00008d2f      4889e8         mov rax, rbp
0x00008d32      31d2           xor edx, edx
0x00008d34      49f7f0         div r8
0x00008d37      4989d1         mov r9, rdx
0x00008d3a      eba4           jmp 0x8ce0
0x00008d3c      0f1f4000       nop dword [rax]
0x00008d40      4883c501       add rbp, 1
0x00008d44      4839fd         cmp rbp, rdi
0x00008d47      0f823bffffff   jb 0x8c88
0x00008d4d      4883fb01       cmp rbx, 1
0x00008d51      7631           jbe 0x8d84
0x00008d53      488b15ae8421.  mov rdx, qword [obj.column_info]        ; [0x221208:8]=0
0x00008d5a      488d045b       lea rax, [rbx + rbx*2]
0x00008d5e      48c1e003       shl rax, 3
0x00008d62      807c02e800     cmp byte [rdx + rax - 0x18], 0
0x00008d67      751b           jne 0x8d84
0x00008d69      488d4402d0     lea rax, [rdx + rax - 0x30]
0x00008d6e      eb0a           jmp 0x8d7a
0x00008d70      4883e818       sub rax, 0x18
0x00008d74      80781800       cmp byte [rax + 0x18], 0
0x00008d78      750a           jne 0x8d84                              ; ../coreutils-8.31/src/system.h:-1763
0x00008d7a      4883eb01       sub rbx, 1
0x00008d7e      4883fb01       cmp rbx, 1
0x00008d82      75ec           jne 0x8d70
0x00008d84      4889d8         mov rax, rbx
0x00008d87      5b             pop rbx
0x00008d88      5d             pop rbp
0x00008d89      415c           pop r12
0x00008d8b      415d           pop r13
0x00008d8d      415e           pop r14
0x00008d8f      c3             ret
0x00008d90      ba30000000     mov edx, 0x30                           ; '0'
0x00008d95      31c9           xor ecx, ecx
0x00008d97      4889d0         mov rax, rdx
0x00008d9a      48f7e3         mul rbx
0x00008d9d      7041           jo 0x8de0
0x00008d9f      4885c0         test rax, rax
0x00008da2      782d           js 0x8dd1
0x00008da4      4885c9         test rcx, rcx
0x00008da7      7528           jne 0x8dd1
0x00008da9      488d2c1b       lea rbp, [rbx + rbx]
0x00008dad      488d741d00     lea rsi, [rbp + rbx]
0x00008db2      48c1e604       shl rsi, 4
0x00008db6      e835b80000     call sym.xrealloc                       ; .//src:1977
0x00008dbb      488905468421.  mov qword [obj.column_info], rax        ; [0x221208:8]=0
0x00008dc2      e99ffdffff     jmp 0x8b66
0x00008dc7      be01000000     mov esi, 1
0x00008dcc      e968fdffff     jmp 0x8b39
0x00008dd1      e80aba0000     call sym.xalloc_die
0x00008dd6      be01000000     mov esi, 1
0x00008ddb      e9dafdffff     jmp 0x8bba
0x00008de0      b901000000     mov ecx, 1
0x00008de5      ebb8           jmp 0x8d9f
0x00008de7      660f1f840000.  nop word [rax + rax]
;-- print_with_separator:
0x00008df0      4157           push r15
0x00008df2      4156           push r14
0x00008df4      4155           push r13
0x00008df6      4154           push r12                                ; .//src:2986
0x00008df8      55             push rbp
0x00008df9      53             push rbx
0x00008dfa      4883ec18       sub rsp, 0x18
0x00008dfe      48833daa8521.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x00008e06      0f84fc000000   je 0x8f08
0x00008e0c      4189fe         mov r14d, edi
0x00008e0f      4531ed         xor r13d, r13d
0x00008e12      31db           xor ebx, ebx
0x00008e14      49c7c7fdffff.  mov r15, 0xfffffffffffffffd
0x00008e1b      eb2b           jmp 0x8e48
0x00008e1d      0f1f00         nop dword [rax]
0x00008e20      4885db         test rbx, rbx
0x00008e23      4c89ed         mov rbp, r13                            ; .//src:1969
0x00008e26      0f85c4000000   jne 0x8ef0                              ; .//src:2990
0x00008e2c      4889ee         mov rsi, rbp
0x00008e2f      4c89e7         mov rdi, r12
0x00008e32      4883c301       add rbx, 1
0x00008e36      e8c5eeffff     call sym.print_file_name_and_frills     ; .//src:3004
0x00008e3b      48391d6e8521.  cmp qword [obj.cwd_n_used], rbx         ; [0x2213b0:8]=0
0x00008e42      0f86c0000000   jbe 0x8f08
0x00008e48      48833d608421.  cmp qword [obj.line_length], 0          ; [0x2212b0:8]=0
0x00008e50      488b05498521.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00008e57      4c8b24d8       mov r12, qword [rax + rbx*8]
0x00008e5b      74c3           je 0x8e20
0x00008e5d      4c89e7         mov rdi, r12
0x00008e60      e8cbfaffff     call sym.length_of_file_name_and_frills
0x00008e65      4885db         test rbx, rbx
0x00008e68      0f84d2000000   je 0x8f40
0x00008e6e      488b153b8421.  mov rdx, qword [obj.line_length]        ; [0x2212b0:8]=0
0x00008e75      498d6d02       lea rbp, [r13 + 2]
0x00008e79      488d0c28       lea rcx, [rax + rbp]
0x00008e7d      4885d2         test rdx, rdx
0x00008e80      0f84b2000000   je 0x8f38                               ; .//src:2998
0x00008e86      4839ca         cmp rdx, rcx
0x00008e89      760f           jbe 0x8e9a
0x00008e8b      4c89fa         mov rdx, r15
0x00008e8e      4829c2         sub rdx, rax
0x00008e91      4c39ea         cmp rdx, r13
0x00008e94      0f839e000000   jae 0x8f38
0x00008e9a      4989c5         mov r13, rax
0x00008e9d      b90a000000     mov ecx, 0xa
0x00008ea2      ba0a000000     mov edx, 0xa
0x00008ea7      31ed           xor ebp, ebp
0x00008ea9      488b3dd87321.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00008eb0      488b4728       mov rax, qword [rdi + 0x28]
0x00008eb4      483b4730       cmp rax, qword [rdi + 0x30]
0x00008eb8      0f83a2000000   jae 0x8f60                              ; .//src:2986
0x00008ebe      488d7001       lea rsi, [rax + 1]
0x00008ec2      48897728       mov qword [rdi + 0x28], rsi
0x00008ec6      448830         mov byte [rax], r14b
0x00008ec9      488b3db87321.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00008ed0      488b4728       mov rax, qword [rdi + 0x28]
0x00008ed4      483b4730       cmp rax, qword [rdi + 0x30]
0x00008ed8      7376           jae 0x8f50
0x00008eda      488d4801       lea rcx, [rax + 1]
0x00008ede      48894f28       mov qword [rdi + 0x28], rcx
0x00008ee2      8810           mov byte [rax], dl
0x00008ee4      e943ffffff     jmp 0x8e2c
0x00008ee9      0f1f80000000.  nop dword [rax]
0x00008ef0      498d6d02       lea rbp, [r13 + 2]
0x00008ef4      4989ed         mov r13, rbp
0x00008ef7      b920000000     mov ecx, 0x20                           ; "@"
0x00008efc      ba20000000     mov edx, 0x20                           ; "@"
0x00008f01      eba6           jmp 0x8ea9                              ; .//src:1999
0x00008f03      0f1f440000     nop dword [rax + rax]
0x00008f08      488b3d797321.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00008f0f      488b4728       mov rax, qword [rdi + 0x28]
0x00008f13      483b4730       cmp rax, qword [rdi + 0x30]
0x00008f17      7367           jae 0x8f80
0x00008f19      488d5001       lea rdx, [rax + 1]
0x00008f1d      48895728       mov qword [rdi + 0x28], rdx
0x00008f21      c6000a         mov byte [rax], 0xa
0x00008f24      4883c418       add rsp, 0x18
0x00008f28      5b             pop rbx
0x00008f29      5d             pop rbp
0x00008f2a      415c           pop r12
0x00008f2c      415d           pop r13
0x00008f2e      415e           pop r14
0x00008f30      415f           pop r15
0x00008f32      c3             ret
0x00008f33      0f1f440000     nop dword [rax + rax]
0x00008f38      4989cd         mov r13, rcx
0x00008f3b      ebba           jmp 0x8ef7
0x00008f3d      0f1f00         nop dword [rax]
0x00008f40      4c89ed         mov rbp, r13
0x00008f43      4901c5         add r13, rax
0x00008f46      e9e1feffff     jmp 0x8e2c
0x00008f4b      0f1f440000     nop dword [rax + rax]
0x00008f50      89ce           mov esi, ecx
0x00008f52      e839a5ffff     call sym.imp.__overflow
0x00008f57      e9d0feffff     jmp 0x8e2c
0x00008f5c      0f1f4000       nop dword [rax]
0x00008f60      410fbef6       movsx esi, r14b
0x00008f64      894c240c       mov dword [rsp + 0xc], ecx
0x00008f68      8854240b       mov byte [rsp + 0xb], dl
0x00008f6c      e81fa5ffff     call sym.imp.__overflow
0x00008f71      0fb654240b     movzx edx, byte [rsp + 0xb]
0x00008f76      8b4c240c       mov ecx, dword [rsp + 0xc]
0x00008f7a      e94affffff     jmp 0x8ec9
0x00008f7f      90             nop
0x00008f80      4883c418       add rsp, 0x18
0x00008f84      be0a000000     mov esi, 0xa
0x00008f89      5b             pop rbx
0x00008f8a      5d             pop rbp
0x00008f8b      415c           pop r12
0x00008f8d      415d           pop r13
0x00008f8f      415e           pop r14
0x00008f91      415f           pop r15
0x00008f93      e9f8a4ffff     jmp sym.imp.__overflow
0x00008f98      0f1f84000000.  nop dword [rax + rax]
;-- print_current_files:
0x00008fa0      833d91832100.  cmp dword [obj.format], 4               ; [0x221338:4]=0
0x00008fa7      0f874b030000   ja 0x92f8
0x00008fad      4157           push r15
0x00008faf      4156           push r14
0x00008fb1      488d15acd100.  lea rdx, [0x00016164]
0x00008fb8      4155           push r13
0x00008fba      4154           push r12
0x00008fbc      55             push rbp
0x00008fbd      53             push rbx
0x00008fbe      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/src/system.h:-1763
0x00008fc2      8b0570832100   mov eax, dword [obj.format]             ; [0x221338:4]=0
0x00008fc8      48630482       movsxd rax, dword [rdx + rax*4]         ; .//src:2003
0x00008fcc      4801d0         add rax, rdx                            ; ../coreutils-8.31/src/system.h:-1763
0x00008fcf      ffe0           jmp rax
0x00008fd1      0f1f80000000.  nop dword [rax]                         ; .//src:2003
0x00008fd8      48833dd08221.  cmp qword [obj.line_length], 0          ; [0x2212b0:8]=0
0x00008fe0      0f8402030000   je 0x92e8
0x00008fe6      31ff           xor edi, edi                            ; .//src:1819
0x00008fe8      e8f3faffff     call sym.calculate_columns
0x00008fed      488d1440       lea rdx, [rax + rax*2]
0x00008ff1      4989c6         mov r14, rax
0x00008ff4      488b050d8221.  mov rax, qword [obj.column_info]        ; [0x221208:8]=0
0x00008ffb      4c8d7cd0e8     lea r15, [rax + rdx*8 - 0x18]
0x00009000      488b05998321.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00009007      488b18         mov rbx, qword [rax]
0x0000900a      4889df         mov rdi, rbx
0x0000900d      e81ef9ffff     call sym.length_of_file_name_and_frills
0x00009012      4889442408     mov qword [rsp + 8], rax
0x00009017      498b4710       mov rax, qword [r15 + 0x10]
0x0000901b      31f6           xor esi, esi
0x0000901d      4889df         mov rdi, rbx
0x00009020      4c8b20         mov r12, qword [rax]
0x00009023      e8d8ecffff     call sym.print_file_name_and_frills
0x00009028      48833d808321.  cmp qword [obj.cwd_n_used], 1           ; [0x2213b0:8]=0
0x00009030      0f86da020000   jbe 0x9310
0x00009036      4531ed         xor r13d, r13d
0x00009039      bb01000000     mov ebx, 1
0x0000903e      488b4c2408     mov rcx, qword [rsp + 8]
0x00009043      eb60           jmp 0x90a5
0x00009045      0f1f00         nop dword [rax]
0x00009048      488b3d397221.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000904f      488b4728       mov rax, qword [rdi + 0x28]
0x00009053      483b4730       cmp rax, qword [rdi + 0x30]
0x00009057      0f83f3020000   jae 0x9350
0x0000905d      488d5001       lea rdx, [rax + 1]
0x00009061      4531ed         xor r13d, r13d
0x00009064      48895728       mov qword [rdi + 0x28], rdx
0x00009068      c6000a         mov byte [rax], 0xa
0x0000906b      488b052e8321.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00009072      4c89ee         mov rsi, r13
0x00009075      4c8b24d8       mov r12, qword [rax + rbx*8]
0x00009079      4883c301       add rbx, 1
0x0000907d      4c89e7         mov rdi, r12
0x00009080      e87becffff     call sym.print_file_name_and_frills
0x00009085      4c89e7         mov rdi, r12
0x00009088      e8a3f8ffff     call sym.length_of_file_name_and_frills
0x0000908d      483b1d1c8321.  cmp rbx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00009094      4889c1         mov rcx, rax
0x00009097      498b4710       mov rax, qword [r15 + 0x10]
0x0000909b      4c8b24e8       mov r12, qword [rax + rbp*8]
0x0000909f      0f836b020000   jae 0x9310
0x000090a5      31d2           xor edx, edx
0x000090a7      4889d8         mov rax, rbx
0x000090aa      49f7f6         div r14
0x000090ad      4885d2         test rdx, rdx
0x000090b0      4889d5         mov rbp, rdx
0x000090b3      7493           je 0x9048                               ; .//src:1575
0x000090b5      4d01ec         add r12, r13
0x000090b8      4a8d3c29       lea rdi, [rcx + r13]
0x000090bc      4c89e6         mov rsi, r12
0x000090bf      4d89e5         mov r13, r12
0x000090c2      e879cfffff     call sym.indent
0x000090c7      eba2           jmp 0x906b
0x000090c9      0f1f80000000.  nop dword [rax]
0x000090d0      bf2c000000     mov edi, 0x2c                           ; ','
0x000090d5      4883c438       add rsp, 0x38                           ; stdio.h:-1776
0x000090d9      5b             pop rbx
0x000090da      5d             pop rbp
0x000090db      415c           pop r12
0x000090dd      415d           pop r13
0x000090df      415e           pop r14
0x000090e1      415f           pop r15
0x000090e3      e908fdffff     jmp sym.print_with_separator
0x000090e8      0f1f84000000.  nop dword [rax + rax]
0x000090f0      31db           xor ebx, ebx
0x000090f2      48833db68221.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x000090fa      0f8468010000   je 0x9268
0x00009100      488b05998221.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00009107      31f6           xor esi, esi
0x00009109      488b3cd8       mov rdi, qword [rax + rbx*8]
0x0000910d      e8eeebffff     call sym.print_file_name_and_frills
0x00009112      488b3d6f7121.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00009119      488b4728       mov rax, qword [rdi + 0x28]
0x0000911d      483b4730       cmp rax, qword [rdi + 0x30]
0x00009121      0f83d9010000   jae 0x9300
0x00009127      488d5001       lea rdx, [rax + 1]
0x0000912b      48895728       mov qword [rdi + 0x28], rdx
0x0000912f      c6000a         mov byte [rax], 0xa
0x00009132      4883c301       add rbx, 1
0x00009136      48391d738221.  cmp qword [obj.cwd_n_used], rbx         ; [0x2213b0:8]=0
0x0000913d      77c1           ja 0x9100
0x0000913f      4883c438       add rsp, 0x38                           ; .//src:1786
0x00009143      5b             pop rbx
0x00009144      5d             pop rbp
0x00009145      415c           pop r12
0x00009147      415d           pop r13
0x00009149      415e           pop r14
0x0000914b      415f           pop r15
0x0000914d      c3             ret
0x0000914e      6690           nop
0x00009150      48833d588121.  cmp qword [obj.line_length], 0          ; [0x2212b0:8]=0
0x00009158      0f848a010000   je 0x92e8
0x0000915e      bf01000000     mov edi, 1
0x00009163      e878f9ffff     call sym.calculate_columns
0x00009168      488d1440       lea rdx, [rax + rax*2]
0x0000916c      4889c1         mov rcx, rax
0x0000916f      488b05928021.  mov rax, qword [obj.column_info]        ; [0x221208:8]=0
0x00009176      4c8d7cd0e8     lea r15, [rax + rdx*8 - 0x18]           ; .//src:1124
0x0000917b      488b052e8221.  mov rax, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00009182      31d2           xor edx, edx
0x00009184      48f7f1         div rcx
0x00009187      4885d2         test rdx, rdx
0x0000918a      0f95c2         setne dl
0x0000918d      0fb6d2         movzx edx, dl
0x00009190      4801c2         add rdx, rax
0x00009193      4889d0         mov rax, rdx
0x00009196      4889542418     mov qword [rsp + 0x18], rdx
0x0000919b      0f84c7000000   je 0x9268
0x000091a1      48c1e003       shl rax, 3
0x000091a5      48c744242800.  mov qword [rsp + 0x28], 0
0x000091ae      4889442420     mov qword [rsp + 0x20], rax
0x000091b3      0f1f440000     nop dword [rax + rax]
0x000091b8      4c8b6c2428     mov r13, qword [rsp + 0x28]             ; .//src:1131
0x000091bd      4531e4         xor r12d, r12d
0x000091c0      31ed           xor ebp, ebp
0x000091c2      4e8d34ed0000.  lea r14, [r13*8]                        ; .//src:1132
0x000091ca      eb1f           jmp 0x91eb
0x000091cc      0f1f4000       nop dword [rax]                         ; .//src:1133
0x000091d0      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000091d5      488b7c2408     mov rdi, qword [rsp + 8]
0x000091da      4801eb         add rbx, rbp
0x000091dd      4801ef         add rdi, rbp
0x000091e0      4889de         mov rsi, rbx                            ; .//src:1135
0x000091e3      4889dd         mov rbp, rbx
0x000091e6      e855ceffff     call sym.indent
0x000091eb      488b05ae8121.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x000091f2      4a8b1c30       mov rbx, qword [rax + r14]
0x000091f6      4889df         mov rdi, rbx
0x000091f9      e832f7ffff     call sym.length_of_file_name_and_frills
0x000091fe      4889442408     mov qword [rsp + 8], rax                ; .//src:1138
0x00009203      498b4710       mov rax, qword [r15 + 0x10]
0x00009207      4889ee         mov rsi, rbp
0x0000920a      4889df         mov rdi, rbx
0x0000920d      4a8b0c20       mov rcx, qword [rax + r12]
0x00009211      4983c408       add r12, 8
0x00009215      48894c2410     mov qword [rsp + 0x10], rcx
0x0000921a      e8e1eaffff     call sym.print_file_name_and_frills
0x0000921f      4c036c2418     add r13, qword [rsp + 0x18]
0x00009224      4c03742420     add r14, qword [rsp + 0x20]
0x00009229      4c3b2d808121.  cmp r13, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x00009230      729e           jb 0x91d0
0x00009232      488b3d4f7021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00009239      488b4728       mov rax, qword [rdi + 0x28]
0x0000923d      483b4730       cmp rax, qword [rdi + 0x30]
0x00009241      0f83f1000000   jae 0x9338
0x00009247      488d5001       lea rdx, [rax + 1]                      ; ../coreutils-8.31/src/.c:-1837
0x0000924b      48895728       mov qword [rdi + 0x28], rdx
0x0000924f      c6000a         mov byte [rax], 0xa
0x00009252      488344242801   add qword [rsp + 0x28], 1
0x00009258      488b442428     mov rax, qword [rsp + 0x28]
0x0000925d      4839442418     cmp qword [rsp + 0x18], rax
0x00009262      0f8550ffffff   jne 0x91b8
0x00009268      4883c438       add rsp, 0x38                           ; .//src:2116
0x0000926c      5b             pop rbx
0x0000926d      5d             pop rbp
0x0000926e      415c           pop r12
0x00009270      415d           pop r13
0x00009272      415e           pop r14
0x00009274      415f           pop r15
0x00009276      c3             ret
0x00009277      660f1f840000.  nop word [rax + rax]
0x00009280      31db           xor ebx, ebx
0x00009282      48833d268121.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x0000928a      7524           jne 0x92b0
0x0000928c      ebda           jmp 0x9268
0x0000928e      6690           nop
0x00009290      488d5001       lea rdx, [rax + 1]
0x00009294      48895728       mov qword [rdi + 0x28], rdx
0x00009298      c6000a         mov byte [rax], 0xa
0x0000929b      488305557f21.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x000092a3      4883c301       add rbx, 1
0x000092a7      48391d028121.  cmp qword [obj.cwd_n_used], rbx         ; [0x2213b0:8]=0
0x000092ae      76b8           jbe 0x9268
0x000092b0      e81bddffff     call sym.set_normal_color
0x000092b5      488b05e48021.  mov rax, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x000092bc      488b3cd8       mov rdi, qword [rax + rbx*8]
0x000092c0      e8cbebffff     call sym.print_long_format
0x000092c5      488b3dbc6f21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x000092cc      488b4728       mov rax, qword [rdi + 0x28]
0x000092d0      483b4730       cmp rax, qword [rdi + 0x30]
0x000092d4      72ba           jb 0x9290
0x000092d6      be0a000000     mov esi, 0xa                            ; .//src:2110
0x000092db      e8b0a1ffff     call sym.imp.__overflow
0x000092e0      ebb9           jmp 0x929b
0x000092e2      660f1f440000   nop word [rax + rax]                    ; .//src:2126
0x000092e8      bf20000000     mov edi, 0x20                           ; "@"
0x000092ed      e9e3fdffff     jmp 0x90d5
0x000092f2      660f1f440000   nop word [rax + rax]
0x000092f8      f3c3           ret
0x000092fa      660f1f440000   nop word [rax + rax]
0x00009300      be0a000000     mov esi, 0xa
0x00009305      e886a1ffff     call sym.imp.__overflow
0x0000930a      e923feffff     jmp 0x9132
0x0000930f      90             nop
0x00009310      488b3d716f21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00009317      488b4728       mov rax, qword [rdi + 0x28]
0x0000931b      483b4730       cmp rax, qword [rdi + 0x30]
0x0000931f      7341           jae 0x9362
0x00009321      488d5001       lea rdx, [rax + 1]
0x00009325      48895728       mov qword [rdi + 0x28], rdx
0x00009329      c6000a         mov byte [rax], 0xa
0x0000932c      e937ffffff     jmp 0x9268
0x00009331      0f1f80000000.  nop dword [rax]
0x00009338      be0a000000     mov esi, 0xa
0x0000933d      e84ea1ffff     call sym.imp.__overflow
0x00009342      e90bffffff     jmp 0x9252
0x00009347      660f1f840000.  nop word [rax + rax]
0x00009350      be0a000000     mov esi, 0xa
0x00009355      4531ed         xor r13d, r13d
0x00009358      e833a1ffff     call sym.imp.__overflow
0x0000935d      e909fdffff     jmp 0x906b
0x00009362      4883c438       add rsp, 0x38
0x00009366      be0a000000     mov esi, 0xa
0x0000936b      5b             pop rbx
0x0000936c      5d             pop rbp
0x0000936d      415c           pop r12
0x0000936f      415d           pop r13
0x00009371      415e           pop r14
0x00009373      415f           pop r15
0x00009375      e916a1ffff     jmp sym.imp.__overflow
0x0000937a      660f1f440000   nop word [rax + rax]
;-- rev_strcmp_df_atime:
0x00009380      4889f2         mov rdx, rsi
0x00009383      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x00009389      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000938f      83f903         cmp ecx, 3
0x00009392      0f94c0         sete al
0x00009395      83f909         cmp ecx, 9
0x00009398      0f94c1         sete cl
0x0000939b      09c8           or eax, ecx
0x0000939d      83fe03         cmp esi, 3
0x000093a0      7426           je 0x93c8
0x000093a2      83fe09         cmp esi, 9
0x000093a5      7421           je 0x93c8
0x000093a7      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x000093ad      81e100f00000   and ecx, 0xf000
0x000093b3      84c0           test al, al
0x000093b5      7431           je 0x93e8
0x000093b7      81f900400000   cmp ecx, 0x4000
0x000093bd      7449           je 0x9408
0x000093bf      b801000000     mov eax, 1
0x000093c4      c3             ret
0x000093c5      0f1f00         nop dword [rax]
0x000093c8      84c0           test al, al                             ; .//src:1259
0x000093ca      753c           jne 0x9408
0x000093cc      8b82ac000000   mov eax, dword [rdx + 0xac]
0x000093d2      2500f00000     and eax, 0xf000
0x000093d7      3d00400000     cmp eax, 0x4000                         ; .//src:1262
0x000093dc      742a           je 0x9408
0x000093de      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000093e3      f3c3           ret
0x000093e5      0f1f00         nop dword [rax]
0x000093e8      8b82ac000000   mov eax, dword [rdx + 0xac]
0x000093ee      2500f00000     and eax, 0xf000
0x000093f3      3d00400000     cmp eax, 0x4000
0x000093f8      74bd           je 0x93b7
0x000093fa      81f900400000   cmp ecx, 0x4000
0x00009400      74dc           je 0x93de
0x00009402      660f1f440000   nop word [rax + rax]
0x00009408      488b4760       mov rax, qword [rdi + 0x60]             ; .//src:1315
0x0000940c      48394260       cmp qword [rdx + 0x60], rax
0x00009410      7fcc           jg 0x93de
0x00009412      7cab           jl 0x93bf
0x00009414      488b4768       mov rax, qword [rdi + 0x68]
0x00009418      2b4268         sub eax, dword [rdx + 0x68]
0x0000941b      75c6           jne 0x93e3
0x0000941d      488b37         mov rsi, qword [rdi]
0x00009420      488b3a         mov rdi, qword [rdx]
0x00009423      e968a1ffff     jmp sym.imp.strcmp
0x00009428      0f1f84000000.  nop dword [rax + rax]
;-- rev_strcmp_df_ctime:
0x00009430      4889f2         mov rdx, rsi
0x00009433      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x00009439      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000943f      83f903         cmp ecx, 3
0x00009442      0f94c0         sete al
0x00009445      83f909         cmp ecx, 9
0x00009448      0f94c1         sete cl
0x0000944b      09c8           or eax, ecx
0x0000944d      83fe03         cmp esi, 3
0x00009450      7426           je 0x9478
0x00009452      83fe09         cmp esi, 9
0x00009455      7421           je 0x9478
0x00009457      8b8fac000000   mov ecx, dword [rdi + 0xac]             ; sysmacros.h:-1419
0x0000945d      81e100f00000   and ecx, 0xf000
0x00009463      84c0           test al, al
0x00009465      7431           je 0x9498
0x00009467      81f900400000   cmp ecx, 0x4000                         ; .//src:1369
0x0000946d      7449           je 0x94b8
0x0000946f      b801000000     mov eax, 1                              ; .//src:1388
0x00009474      c3             ret
0x00009475      0f1f00         nop dword [rax]
0x00009478      84c0           test al, al
0x0000947a      753c           jne 0x94b8
0x0000947c      8b82ac000000   mov eax, dword [rdx + 0xac]
0x00009482      2500f00000     and eax, 0xf000
0x00009487      3d00400000     cmp eax, 0x4000
0x0000948c      742a           je 0x94b8
0x0000948e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009493      f3c3           ret                                     ; .//src:1392
0x00009495      0f1f00         nop dword [rax]
0x00009498      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000949e      2500f00000     and eax, 0xf000
0x000094a3      3d00400000     cmp eax, 0x4000
0x000094a8      74bd           je 0x9467
0x000094aa      81f900400000   cmp ecx, 0x4000
0x000094b0      74dc           je 0x948e
0x000094b2      660f1f440000   nop word [rax + rax]
0x000094b8      488b87800000.  mov rax, qword [rdi + 0x80]
0x000094bf      483982800000.  cmp qword [rdx + 0x80], rax
0x000094c6      7fc6           jg 0x948e
0x000094c8      7ca5           jl 0x946f
0x000094ca      488b87880000.  mov rax, qword [rdi + 0x88]             ; .//src:1418
0x000094d1      2b8288000000   sub eax, dword [rdx + 0x88]             ; .//src:1408
0x000094d7      75ba           jne 0x9493
0x000094d9      488b37         mov rsi, qword [rdi]
0x000094dc      488b3a         mov rdi, qword [rdx]
0x000094df      e9aca0ffff     jmp sym.imp.strcmp                      ; .//src:1418
0x000094e4      6690           nop
0x000094e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- clear_files:
0x000094f0      488b05b97e21.  mov rax, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x000094f7      4154           push r12
0x000094f9      55             push rbp
0x000094fa      53             push rbx
0x000094fb      4885c0         test rax, rax
0x000094fe      7437           je 0x9537
0x00009500      488b1d997e21.  mov rbx, qword [obj.sorted_file]        ; [0x2213a0:8]=0
0x00009507      4c8d24c3       lea r12, [rbx + rax*8]
0x0000950b      0f1f440000     nop dword [rax + rax]
0x00009510      488b2b         mov rbp, qword [rbx]                    ; .//src:1471
0x00009513      4883c308       add rbx, 8
0x00009517      488b7d00       mov rdi, qword [rbp]
0x0000951b      e860a3ffff     call sym..plt.got
0x00009520      488b7d08       mov rdi, qword [rbp + 8]                ; .//src:1473
0x00009524      e857a3ffff     call sym..plt.got                       ; .//src:1474
0x00009529      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000952d      e84ea3ffff     call sym..plt.got
0x00009532      4c39e3         cmp rbx, r12
0x00009535      75d9           jne 0x9510
0x00009537      5b             pop rbx
0x00009538      48c7056d7e21.  mov qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x00009543      c6055f7e2100.  mov byte [obj.cwd_some_quoted], 0       ; [0x2213a9:1]=0
0x0000954a      5d             pop rbp
0x0000954b      c605127e2100.  mov byte [obj.any_has_acl], 0           ; [0x221364:1]=0
0x00009552      c705047e2100.  mov dword [obj.inode_number_width], 0   ; [0x221360:4]=0
0x0000955c      c705f67d2100.  mov dword [obj.block_size_width], 0     ; [0x22135c:4]=0
0x00009566      c705e87d2100.  mov dword [obj.nlink_width], 0          ; [0x221358:4]=0
0x00009570      c705d67d2100.  mov dword [obj.owner_width], 0          ; [0x221350:4]=0
0x0000957a      c705c87d2100.  mov dword [obj.group_width], 0          ; [0x22134c:4]=0
0x00009584      c705ba7d2100.  mov dword [obj.author_width], 0         ; [0x221348:4]=0
0x0000958e      c705bc7d2100.  mov dword [obj.scontext_width], 0       ; [0x221354:4]=0
0x00009598      c705a27d2100.  mov dword [obj.major_device_number_width], 0 ; [0x221344:4]=0
0x000095a2      c705947d2100.  mov dword [obj.minor_device_number_width], 0 ; .//src:1508 ; [0x221340:4]=0
0x000095ac      c705867d2100.  mov dword [obj.file_size_width], 0      ; [0x22133c:4]=0
0x000095b6      415c           pop r12
0x000095b8      c3             ret
0x000095b9      0f1f80000000.  nop dword [rax]
;-- format_user_width:
0x000095c0      55             push rbp
0x000095c1      53             push rbx
0x000095c2      89fd           mov ebp, edi
0x000095c4      4883ec28       sub rsp, 0x28
0x000095c8      64488b042528.  mov rax, qword fs:[0x28]
0x000095d1      4889442418     mov qword [rsp + 0x18], rax
0x000095d6      31c0           xor eax, eax
0x000095d8      803d4e7d2100.  cmp byte [obj.numeric_ids], 0           ; .//src:1549 ; [0x22132d:1]=0
0x000095df      7477           je 0x9658
0x000095e1      4889e3         mov rbx, rsp
0x000095e4      488d0da2e200.  lea rcx, [0x0001788d]                   ; "%lu"
0x000095eb      4189e8         mov r8d, ebp
0x000095ee      ba15000000     mov edx, 0x15
0x000095f3      be01000000     mov esi, 1
0x000095f8      4889df         mov rdi, rbx
0x000095fb      31c0           xor eax, eax
0x000095fd      e86ea2ffff     call sym.imp.__sprintf_chk
0x00009602      4889d8         mov rax, rbx
0x00009605      8b08           mov ecx, dword [rax]
0x00009607      4883c004       add rax, 4
0x0000960b      8d91fffefefe   lea edx, [rcx - 0x1010101]
0x00009611      f7d1           not ecx
0x00009613      21ca           and edx, ecx
0x00009615      81e280808080   and edx, 0x80808080
0x0000961b      74e8           je 0x9605
0x0000961d      89d1           mov ecx, edx
0x0000961f      c1e910         shr ecx, 0x10
0x00009622      f7c280800000   test edx, 0x8080
0x00009628      0f44d1         cmove edx, ecx
0x0000962b      488d4802       lea rcx, [rax + 2]
0x0000962f      89d6           mov esi, edx                            ; .//src:1273
0x00009631      480f44c1       cmove rax, rcx
0x00009635      4000d6         add sil, dl
0x00009638      4883d803       sbb rax, 3
0x0000963c      29d8           sub eax, ebx                            ; .//src:1277
0x0000963e      488b742418     mov rsi, qword [rsp + 0x18]
0x00009643      644833342528.  xor rsi, qword fs:[0x28]
0x0000964c      752e           jne 0x967c
0x0000964e      4883c428       add rsp, 0x28
0x00009652      5b             pop rbx
0x00009653      5d             pop rbp
0x00009654      c3             ret
0x00009655      0f1f00         nop dword [rax]
0x00009658      e863610000     call sym.getuser
0x0000965d      4885c0         test rax, rax
0x00009660      4889c7         mov rdi, rax
0x00009663      0f8478ffffff   je 0x95e1
0x00009669      31f6           xor esi, esi
0x0000966b      e8b06b0000     call sym.gnu_mbswidth
0x00009670      ba00000000     mov edx, 0
0x00009675      85c0           test eax, eax
0x00009677      0f48c2         cmovs eax, edx
0x0000967a      ebc2           jmp 0x963e
0x0000967c      e89f9dffff     call sym.imp.__stack_chk_fail
0x00009681      0f1f440000     nop dword [rax + rax]
0x00009686      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:1284
;-- gobble_file.constprop.52:
0x00009690      55             push rbp
0x00009691      4889e5         mov rbp, rsp
0x00009694      4157           push r15
0x00009696      4156           push r14
0x00009698      4155           push r13
0x0000969a      4154           push r12                                ; .//src:1285
0x0000969c      4989cf         mov r15, rcx
0x0000969f      53             push rbx
0x000096a0      4189f6         mov r14d, esi
0x000096a3      4189d5         mov r13d, edx
0x000096a6      4881ec780300.  sub rsp, 0x378
0x000096ad      488b0dfc7c21.  mov rcx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x000096b4      4889bd78fcff.  mov qword [rbp - 0x388], rdi
0x000096bb      64488b042528.  mov rax, qword fs:[0x28]
0x000096c4      488945c8       mov qword [rbp - 0x38], rax
0x000096c8      31c0           xor eax, eax
0x000096ca      483b0de77c21.  cmp rcx, qword [obj.cwd_n_alloc]        ; [0x2213b8:8]=0
0x000096d1      488b3de87c21.  mov rdi, qword [obj.cwd_file]           ; [0x2213c0:8]=0
0x000096d8      754e           jne 0x9728
0x000096da      ba90010000     mov edx, 0x190                          ; .//src:1295
0x000096df      31f6           xor esi, esi
0x000096e1      4889d0         mov rax, rdx
0x000096e4      48f7e1         mul rcx
0x000096e7      0f80f10c0000   jo 0xa3de
0x000096ed      4885c0         test rax, rax
0x000096f0      0f88e30c0000   js 0xa3d9                               ; .//src:1302
0x000096f6      4885f6         test rsi, rsi
0x000096f9      0f85da0c0000   jne 0xa3d9
0x000096ff      488d0489       lea rax, [rcx + rcx*4]
0x00009703      488d3480       lea rsi, [rax + rax*4]
0x00009707      48c1e604       shl rsi, 4
0x0000970b      e8e0ae0000     call sym.xrealloc
0x00009710      48d125a17c21.  shl qword [obj.cwd_n_alloc], 1
0x00009717      488b0d927c21.  mov rcx, qword [obj.cwd_n_used]         ; [0x2213b0:8]=0
0x0000971e      4889c7         mov rdi, rax
0x00009721      488905987c21.  mov qword [obj.cwd_file], rax           ; [0x2213c0:8]=0
0x00009728      488d0489       lea rax, [rcx + rcx*4]
0x0000972c      488d0480       lea rax, [rax + rax*4]
0x00009730      488d1cc7       lea rbx, [rdi + rax*8]                  ; .//src:1305
0x00009734      31c0           xor eax, eax
0x00009736      488d7b08       lea rdi, [rbx + 8]
0x0000973a      4889d9         mov rcx, rbx
0x0000973d      48c703000000.  mov qword [rbx], 0
0x00009744      48c783bc0000.  mov qword [rbx + 0xbc], 0
0x0000974f      4883e7f8       and rdi, 0xfffffffffffffff8
0x00009753      4829f9         sub rcx, rdi
0x00009756      81c1c4000000   add ecx, 0xc4
0x0000975c      c1e903         shr ecx, 3
0x0000975f      f348ab         rep stosq qword [rdi], rax
0x00009762      48c743200000.  mov qword [rbx + 0x20], 0
0x0000976a      4489b3a80000.  mov dword [rbx + 0xa8], r14d
0x00009771      c783c4000000.  mov dword [rbx + 0xc4], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000977b      803d277c2100.  cmp byte [obj.cwd_some_quoted], 0       ; [0x2213a9:1]=0
0x00009782      750d           jne 0x9791
0x00009784      803d1d7c2100.  cmp byte [obj.align_variable_outer_quotes], 0 ; [0x2213a8:1]=0
0x0000978b      0f85ef060000   jne 0x9e80
0x00009791      4584ed         test r13b, r13b
0x00009794      440fb605757b.  movzx r8d, byte [obj.print_hyperlink]   ; [0x221311:1]=0
0x0000979c      0f841e020000   je 0x99c0
0x000097a2      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x000097a9      410fb61424     movzx edx, byte [r12]
0x000097ae      80fa2f         cmp dl, 0x2f
0x000097b1      0f84610a0000   je 0xa218
0x000097b7      410fb60f       movzx ecx, byte [r15]
0x000097bb      84c9           test cl, cl
0x000097bd      0f85f0050000   jne 0x9db3
0x000097c3      4584c0         test r8b, r8b
0x000097c6      0f852e040000   jne 0x9bfa
0x000097cc      8b0d267b2100   mov ecx, dword [obj.dereference]        ; [0x2212f8:4]=0
0x000097d2      4c8d7b18       lea r15, [rbx + 0x18]
0x000097d6      83f903         cmp ecx, 3
0x000097d9      0f8261030000   jb 0x9b40
0x000097df      83f904         cmp ecx, 4
0x000097e2      0f8658040000   jbe 0x9c40
0x000097e8      83f905         cmp ecx, 5
0x000097eb      0f854f030000   jne 0x9b40
0x000097f1      4c89fa         mov rdx, r15
0x000097f4      4c89e6         mov rsi, r12
0x000097f7      bf01000000     mov edi, 1
0x000097fc      e83f9effff     call sym.imp.__xstat
0x00009801      85c0           test eax, eax
0x00009803      0f854f030000   jne 0x9b58
0x00009809      4183fe05       cmp r14d, 5
0x0000980d      c683b8000000.  mov byte [rbx + 0xb8], 1
0x00009814      0f8476030000   je 0x9b90
0x0000981a      8b4330         mov eax, dword [rbx + 0x30]
0x0000981d      2500f00000     and eax, 0xf000
0x00009822      3d00800000     cmp eax, 0x8000
0x00009827      0f8463030000   je 0x9b90
0x0000982d      448b15047b21.  mov r10d, dword [obj.format]            ; .//src:1224 ; [0x221338:4]=0
0x00009834      4585d2         test r10d, r10d                         ; .//src:1390
0x00009837      7409           je 0x9842
0x00009839      803d257b2100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00009840      744a           je 0x988c
0x00009842      e8599affff     call sym.imp.__errno_location
0x00009847      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000984b      4c3b359e6a21.  cmp r14, qword [obj.unsupported_device.10314] ; [0x2202f0:8]=0
0x00009852      4989c0         mov r8, rax
0x00009855      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000985b      7407           je 0x9864
0x0000985d      4c89358c6a21.  mov qword [obj.unsupported_device.10314], r14 ; [0x2202f0:8]=0
0x00009864      448b0dcd7a21.  mov r9d, dword [obj.format]             ; [0x221338:4]=0
0x0000986b      488d05b06721.  lea rax, obj.UNKNOWN_SECURITY_CONTEXT   ; 0x220022 ; "?"
0x00009872      488983b00000.  mov qword [rbx + 0xb0], rax
0x00009879      4585c9         test r9d, r9d
0x0000987c      0f84be060000   je 0x9f40
0x00009882      c783bc000000.  mov dword [rbx + 0xbc], 0
0x0000988c      8b4330         mov eax, dword [rbx + 0x30]
0x0000988f      2500f00000     and eax, 0xf000
0x00009894      3d00a00000     cmp eax, 0xa000
0x00009899      0f8441070000   je 0x9fe0
0x0000989f      3d00400000     cmp eax, 0x4000
0x000098a4      0f8456080000   je 0xa100
0x000098aa      c783a8000000.  mov dword [rbx + 0xa8], 5
0x000098b4      8b0d7e7a2100   mov ecx, dword [obj.format]             ; [0x221338:4]=0
0x000098ba      4c8b6358       mov r12, qword [rbx + 0x58]
0x000098be      85c9           test ecx, ecx
0x000098c0      7409           je 0x98cb
0x000098c2      803d637a2100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x000098c9      7471           je 0x993c
0x000098cb      4c8b054e7a21.  mov r8, qword [obj.output_block_size]   ; [0x221320:8]=0
0x000098d2      8b15507a2100   mov edx, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x000098d8      4c8dad30fdff.  lea r13, [rbp - 0x2d0]
0x000098df      b900020000     mov ecx, 0x200
0x000098e4      4c89e7         mov rdi, r12
0x000098e7      4c89ee         mov rsi, r13
0x000098ea      e8d1520000     call sym.human_readable
0x000098ef      31f6           xor esi, esi
0x000098f1      4889c7         mov rdi, rax
0x000098f4      e827690000     call sym.gnu_mbswidth
0x000098f9      3b055d7a2100   cmp eax, dword [obj.block_size_width]   ; [0x22135c:4]=0
0x000098ff      7e06           jle 0x9907
0x00009901      8905557a2100   mov dword [obj.block_size_width], eax   ; [0x22135c:4]=0
0x00009907      8b152b7a2100   mov edx, dword [obj.format]             ; [0x221338:4]=0
0x0000990d      85d2           test edx, edx
0x0000990f      0f853b080000   jne 0xa150
0x00009915      803d05672100.  cmp byte [obj.print_owner], 0           ; [0x220021:1]=1
0x0000991c      0f850e080000   jne 0xa130
0x00009922      803df7662100.  cmp byte [obj.print_group], 0           ; .//src:1554 ; [0x220020:1]=1
0x00009929      0f8561080000   jne 0xa190
0x0000992f      803df8792100.  cmp byte [obj.print_author], 0          ; [0x22132e:1]=0
0x00009936      0f852c080000   jne 0xa168                              ; .//src:1518
0x0000993c      803d227a2100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x00009943      7418           je 0x995d
0x00009945      488bbbb00000.  mov rdi, qword [rbx + 0xb0]
0x0000994c      e8af9affff     call sym.imp.strlen
0x00009951      3b05fd792100   cmp eax, dword [obj.scontext_width]     ; [0x221354:4]=0
0x00009957      0f8f53050000   jg 0x9eb0
0x0000995d      8b05d5792100   mov eax, dword [obj.format]             ; [0x221338:4]=0
0x00009963      85c0           test eax, eax
0x00009965      0f8465030000   je 0x9cd0
0x0000996b      0fb6058a7921.  movzx eax, byte [obj.print_inode]       ; [0x2212fc:1]=0
0x00009972      84c0           test al, al
0x00009974      0f851e030000   jne 0x9c98
0x0000997a      488bbd78fcff.  mov rdi, qword [rbp - 0x388]
0x00009981      e83aae0000     call sym.xstrdup
0x00009986      488305227a21.  add qword [obj.cwd_n_used], 1           ; [0x2213b0:8]=0
0x0000998e      488903         mov qword [rbx], rax
0x00009991      488b75c8       mov rsi, qword [rbp - 0x38]
0x00009995      644833342528.  xor rsi, qword fs:[0x28]
0x0000999e      4c89e0         mov rax, r12
0x000099a1      0f852d0a0000   jne 0xa3d4
0x000099a7      488d65d8       lea rsp, [rbp - 0x28]
0x000099ab      5b             pop rbx
0x000099ac      415c           pop r12
0x000099ae      415d           pop r13
0x000099b0      415e           pop r14                                 ; .//src:1527
0x000099b2      415f           pop r15
0x000099b4      5d             pop rbp
0x000099b5      c3             ret
0x000099b6      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:1528
0x000099c0      4584c0         test r8b, r8b
0x000099c3      0f8517020000   jne 0x9be0
0x000099c9      803dd1782100.  cmp byte [obj.format_needs_stat], 0     ; [0x2212a1:1]=0
0x000099d0      0f852a010000   jne 0x9b00
0x000099d6      4183fe03       cmp r14d, 3
0x000099da      0f8410090000   je 0xa2f0
0x000099e0      0fb605157921.  movzx eax, byte [obj.print_inode]       ; [0x2212fc:1]=0
0x000099e7      84c0           test al, al
0x000099e9      7535           jne 0x9a20
0x000099eb      803dae782100.  cmp byte [obj.format_needs_type], 0     ; .//src:1531 ; [0x2212a0:1]=0
0x000099f2      741c           je 0x9a10
0x000099f4      4585f6         test r14d, r14d
0x000099f7      0f94c1         sete cl
0x000099fa      4183fe06       cmp r14d, 6
0x000099fe      89ca           mov edx, ecx
0x00009a00      7432           je 0x9a34
0x00009a02      84c9           test cl, cl
0x00009a04      752e           jne 0x9a34
0x00009a06      803d93782100.  cmp byte [obj.format_needs_type], 0     ; .//src:1315 ; [0x2212a0:1]=0
0x00009a0d      7565           jne 0x9a74
0x00009a0f      90             nop
0x00009a10      4531e4         xor r12d, r12d
0x00009a13      e962ffffff     jmp 0x997a
0x00009a18      0f1f84000000.  nop dword [rax + rax]
0x00009a20      4585f6         test r14d, r14d
0x00009a23      0f94c2         sete dl
0x00009a26      4183fe06       cmp r14d, 6
0x00009a2a      7408           je 0x9a34
0x00009a2c      84d2           test dl, dl
0x00009a2e      0f84cc000000   je 0x9b00
0x00009a34      833dbd782100.  cmp dword [obj.dereference], 5          ; [0x2212f8:4]=0
0x00009a3b      0f84bf000000   je 0x9b00
0x00009a41      803d48792100.  cmp byte [obj.color_symlink_as_referent], 0 ; [0x221390:1]=0
0x00009a48      0f85b2000000   jne 0x9b00                              ; .//src:3121
0x00009a4e      803da8782100.  cmp byte [obj.check_symlink_mode], 0    ; [0x2212fd:1]=0
0x00009a55      0f85a5000000   jne 0x9b00
0x00009a5b      84c0           test al, al
0x00009a5d      0f859d000000   jne 0x9b00
0x00009a63      803d36782100.  cmp byte [obj.format_needs_type], 0     ; .//src:1319 ; [0x2212a0:1]=0
0x00009a6a      74a4           je 0x9a10
0x00009a6c      84d2           test dl, dl
0x00009a6e      0f858c000000   jne 0x9b00
0x00009a74      4531e4         xor r12d, r12d
0x00009a77      4183fe05       cmp r14d, 5
0x00009a7b      0f85f9feffff   jne 0x997a
0x00009a81      833d8c782100.  cmp dword [obj.indicator_style], 3      ; [0x221314:4]=0
0x00009a88      7476           je 0x9b00
0x00009a8a      803d81782100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00009a91      44888570fcff.  mov byte [rbp - 0x390], r8b             ; .//src:3124
0x00009a98      0f84dcfeffff   je 0x997a
0x00009a9e      bf0e000000     mov edi, 0xe
0x00009aa3      e8c8bbffff     call sym.is_colored
0x00009aa8      84c0           test al, al
0x00009aaa      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x00009ab2      754c           jne 0x9b00
0x00009ab4      bf10000000     mov edi, 0x10
0x00009ab9      e8b2bbffff     call sym.is_colored
0x00009abe      84c0           test al, al
0x00009ac0      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x00009ac8      7536           jne 0x9b00
0x00009aca      bf11000000     mov edi, 0x11
0x00009acf      e89cbbffff     call sym.is_colored
0x00009ad4      84c0           test al, al
0x00009ad6      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x00009ade      7520           jne 0x9b00
0x00009ae0      bf15000000     mov edi, 0x15
0x00009ae5      e886bbffff     call sym.is_colored
0x00009aea      84c0           test al, al
0x00009aec      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x00009af4      0f8480feffff   je 0x997a
0x00009afa      660f1f440000   nop word [rax + rax]
0x00009b00      488b8578fcff.  mov rax, qword [rbp - 0x388]
0x00009b07      0fb610         movzx edx, byte [rax]
0x00009b0a      80fa2f         cmp dl, 0x2f
0x00009b0d      0f850d040000   jne 0x9f20
0x00009b13      8b05df772100   mov eax, dword [obj.dereference]        ; [0x2212f8:4]=0
0x00009b19      4c8d7b18       lea r15, [rbx + 0x18]
0x00009b1d      83f803         cmp eax, 3
0x00009b20      7215           jb 0x9b37
0x00009b22      83f804         cmp eax, 4
0x00009b25      7610           jbe 0x9b37
0x00009b27      83f805         cmp eax, 5
0x00009b2a      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x00009b31      0f84bafcffff   je 0x97f1
0x00009b37      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x00009b3e      6690           nop
0x00009b40      4c89fa         mov rdx, r15
0x00009b43      4c89e6         mov rsi, r12
0x00009b46      bf01000000     mov edi, 1
0x00009b4b      e8c098ffff     call sym.imp.__lxstat
0x00009b50      85c0           test eax, eax
0x00009b52      0f84b1fcffff   je 0x9809                               ; .//src:1543
0x00009b58      488d3587dd00.  lea rsi, str.cannot_access__s           ; 0x178e6 ; "cannot access %s"
0x00009b5f      31ff           xor edi, edi
0x00009b61      ba05000000     mov edx, 5
0x00009b66      e87598ffff     call sym.imp.dcgettext
0x00009b6b      4c89e2         mov rdx, r12
0x00009b6e      410fb6fd       movzx edi, r13b                         ; .//src:3121
0x00009b72      4889c6         mov rsi, rax
0x00009b75      e886c7ffff     call sym.file_failure
0x00009b7a      4531e4         xor r12d, r12d
0x00009b7d      4584ed         test r13b, r13b
0x00009b80      0f850bfeffff   jne 0x9991
0x00009b86      e9effdffff     jmp 0x997a                              ; .//src:1315
0x00009b8b      0f1f440000     nop dword [rax + rax]
0x00009b90      803d7b772100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x00009b97      0f8490fcffff   je 0x982d
0x00009b9d      bf15000000     mov edi, 0x15
0x00009ba2      e8c9baffff     call sym.is_colored
0x00009ba7      84c0           test al, al
0x00009ba9      0f847efcffff   je 0x982d
0x00009baf      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009bb3      e8e896ffff     call sym.imp.__errno_location           ; .//src:1199
0x00009bb8      4c3b35396721.  cmp r14, qword [obj.unsupported_device.10326] ; [0x2202f8:8]=0
0x00009bbf      c7005f000000   mov dword [rax], 0x5f                   ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x00009bc5      7407           je 0x9bce
0x00009bc7      4c89352a6721.  mov qword [obj.unsupported_device.10326], r14 ; .//src:1200 ; [0x2202f8:8]=0
0x00009bce      c683c0000000.  mov byte [rbx + 0xc0], 0
0x00009bd5      e953fcffff     jmp 0x982d
0x00009bda      660f1f440000   nop word [rax + rax]
0x00009be0      488b8578fcff.  mov rax, qword [rbp - 0x388]
0x00009be7      0fb610         movzx edx, byte [rax]
0x00009bea      80fa2f         cmp dl, 0x2f
0x00009bed      0f85ad010000   jne 0x9da0
0x00009bf3      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x00009bfa      be02000000     mov esi, 2                              ; .//src:1432
0x00009bff      4c89e7         mov rdi, r12
0x00009c02      e839290000     call sym.canonicalize_filename_mode
0x00009c07      4885c0         test rax, rax
0x00009c0a      48894310       mov qword [rbx + 0x10], rax
0x00009c0e      0f85b8fbffff   jne 0x97cc
0x00009c14      488d35b3dc00.  lea rsi, str.error_canonicalizing__s    ; 0x178ce ; "error canonicalizing %s"
0x00009c1b      31ff           xor edi, edi
0x00009c1d      ba05000000     mov edx, 5
0x00009c22      e8b997ffff     call sym.imp.dcgettext
0x00009c27      410fb6fd       movzx edi, r13b
0x00009c2b      4c89e2         mov rdx, r12
0x00009c2e      4889c6         mov rsi, rax
0x00009c31      e8cac6ffff     call sym.file_failure
0x00009c36      e991fbffff     jmp 0x97cc
0x00009c3b      0f1f440000     nop dword [rax + rax]                   ; .//src:1437
0x00009c40      4584ed         test r13b, r13b
0x00009c43      0f84f7feffff   je 0x9b40
0x00009c49      4c89fa         mov rdx, r15
0x00009c4c      4c89e6         mov rsi, r12
0x00009c4f      bf01000000     mov edi, 1
0x00009c54      898d70fcffff   mov dword [rbp - 0x390], ecx
0x00009c5a      e8e199ffff     call sym.imp.__xstat
0x00009c5f      8b8d70fcffff   mov ecx, dword [rbp - 0x390]            ; .//src:1586
0x00009c65      83f903         cmp ecx, 3
0x00009c68      741d           je 0x9c87
0x00009c6a      85c0           test eax, eax
0x00009c6c      0f88fe050000   js 0xa270
0x00009c72      8b5330         mov edx, dword [rbx + 0x30]
0x00009c75      81e200f00000   and edx, 0xf000
0x00009c7b      81fa00400000   cmp edx, 0x4000
0x00009c81      0f85b9feffff   jne 0x9b40                              ; .//src:1608
0x00009c87      85c0           test eax, eax
0x00009c89      0f847afbffff   je 0x9809
0x00009c8f      e9ea050000     jmp 0xa27e
0x00009c94      0f1f4000       nop dword [rax]
0x00009c98      488b7b20       mov rdi, qword [rbx + 0x20]
0x00009c9c      488db530fdff.  lea rsi, [rbp - 0x2d0]
0x00009ca3      e8f85e0000     call sym.umaxtostr
0x00009ca8      4889c7         mov rdi, rax
0x00009cab      e85097ffff     call sym.imp.strlen
0x00009cb0      3b05aa762100   cmp eax, dword [obj.inode_number_width] ; [0x221360:4]=0
0x00009cb6      0f8ebefcffff   jle 0x997a
0x00009cbc      89059e762100   mov dword [obj.inode_number_width], eax ; .//src:1617 ; [0x221360:4]=0
0x00009cc2      e9b3fcffff     jmp 0x997a
0x00009cc7      660f1f840000.  nop word [rax + rax]
0x00009cd0      488b7b28       mov rdi, qword [rbx + 0x28]
0x00009cd4      488db510fdff.  lea rsi, [rbp - 0x2f0]
0x00009cdb      e8c05e0000     call sym.umaxtostr
0x00009ce0      4889c7         mov rdi, rax
0x00009ce3      e81897ffff     call sym.imp.strlen
0x00009ce8      3b056a762100   cmp eax, dword [obj.nlink_width]        ; [0x221358:4]=0
0x00009cee      7e06           jle 0x9cf6
0x00009cf0      890562762100   mov dword [obj.nlink_width], eax        ; [0x221358:4]=0
0x00009cf6      8b4330         mov eax, dword [rbx + 0x30]
0x00009cf9      2500b00000     and eax, 0xb000
0x00009cfe      3d00200000     cmp eax, 0x2000
0x00009d03      0f85b7010000   jne 0x9ec0
0x00009d09      488b4340       mov rax, qword [rbx + 0x40]
0x00009d0d      4c8dad30fdff.  lea r13, [rbp - 0x2d0]
0x00009d14      4c89ee         mov rsi, r13
0x00009d17      4889c7         mov rdi, rax
0x00009d1a      48c1e820       shr rax, 0x20
0x00009d1e      48c1ef08       shr rdi, 8
0x00009d22      89fa           mov edx, edi
0x00009d24      4889c7         mov rdi, rax
0x00009d27      81e2ff0f0000   and edx, 0xfff
0x00009d2d      81e700f0ffff   and edi, 0xfffff000
0x00009d33      09d7           or edi, edx
0x00009d35      e8665e0000     call sym.umaxtostr
0x00009d3a      4889c7         mov rdi, rax
0x00009d3d      e8be96ffff     call sym.imp.strlen
0x00009d42      3b05fc752100   cmp eax, dword [obj.major_device_number_width] ; [0x221344:4]=0
0x00009d48      7e06           jle 0x9d50
0x00009d4a      8905f4752100   mov dword [obj.major_device_number_width], eax ; .//src:1453 ; [0x221344:4]=0
0x00009d50      488b4340       mov rax, qword [rbx + 0x40]
0x00009d54      4c89ee         mov rsi, r13                            ; .//src:1455
0x00009d57      0fb6d0         movzx edx, al
0x00009d5a      48c1e80c       shr rax, 0xc
0x00009d5e      4889c7         mov rdi, rax
0x00009d61      4030ff         xor dil, dil
0x00009d64      09d7           or edi, edx
0x00009d66      e8355e0000     call sym.umaxtostr                      ; .//src:1465
0x00009d6b      4889c7         mov rdi, rax
0x00009d6e      e88d96ffff     call sym.imp.strlen
0x00009d73      8b15c7752100   mov edx, dword [obj.minor_device_number_width] ; [0x221340:4]=0
0x00009d79      39d0           cmp eax, edx
0x00009d7b      7e08           jle 0x9d85
0x00009d7d      8905bd752100   mov dword [obj.minor_device_number_width], eax ; [0x221340:4]=0
0x00009d83      89c2           mov edx, eax
0x00009d85      8b05b9752100   mov eax, dword [obj.major_device_number_width] ; [0x221344:4]=0
0x00009d8b      8d440202       lea eax, [rdx + rax + 2]
0x00009d8f      3b05a7752100   cmp eax, dword [obj.file_size_width]    ; [0x22133c:4]=0
0x00009d95      0f8ed0fbffff   jle 0x996b
0x00009d9b      e958010000     jmp 0x9ef8
0x00009da0      410fb60f       movzx ecx, byte [r15]
0x00009da4      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x00009dab      84c9           test cl, cl
0x00009dad      0f8447feffff   je 0x9bfa
0x00009db3      488bbd78fcff.  mov rdi, qword [rbp - 0x388]
0x00009dba      88956efcffff   mov byte [rbp - 0x392], dl
0x00009dc0      888d6ffcffff   mov byte [rbp - 0x391], cl
0x00009dc6      44888570fcff.  mov byte [rbp - 0x390], r8b
0x00009dcd      e82e96ffff     call sym.imp.strlen
0x00009dd2      4c89ff         mov rdi, r15
0x00009dd5      4989c4         mov r12, rax
0x00009dd8      e82396ffff     call sym.imp.strlen
0x00009ddd      498d440420     lea rax, [r12 + rax + 0x20]
0x00009de2      0fb68d6ffcff.  movzx ecx, byte [rbp - 0x391]           ; .//src:1504
0x00009de9      450fb65701     movzx r10d, byte [r15 + 1]
0x00009dee      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x00009df6      0fb6956efcff.  movzx edx, byte [rbp - 0x392]           ; .//src:2133
0x00009dfd      4883e0f0       and rax, 0xfffffffffffffff0             ; .//src:1495
0x00009e01      4829c4         sub rsp, rax                            ; .//src:2133
0x00009e04      488d7c240f     lea rdi, [rsp + 0xf]
0x00009e09      4883e7f0       and rdi, 0xfffffffffffffff0
0x00009e0d      80f92e         cmp cl, 0x2e
0x00009e10      4989fc         mov r12, rdi
0x00009e13      0f84ef000000   je 0x9f08
0x00009e19      4c89fe         mov rsi, r15
0x00009e1c      eb0d           jmp 0x9e2b
0x00009e1e      6690           nop
0x00009e20      4489d1         mov ecx, r10d
0x00009e23      440fb65601     movzx r10d, byte [rsi + 1]
0x00009e28      4889c7         mov rdi, rax
0x00009e2b      488d4701       lea rax, [rdi + 1]
0x00009e2f      4883c601       add rsi, 1
0x00009e33      4584d2         test r10b, r10b
0x00009e36      8848ff         mov byte [rax - 1], cl
0x00009e39      75e5           jne 0x9e20
0x00009e3b      4939f7         cmp r15, rsi
0x00009e3e      730d           jae 0x9e4d
0x00009e40      807eff2f       cmp byte [rsi - 1], 0x2f
0x00009e44      7407           je 0x9e4d
0x00009e46      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00009e49      488d4702       lea rax, [rdi + 2]
0x00009e4d      84d2           test dl, dl
0x00009e4f      7421           je 0x9e72
0x00009e51      488b8d78fcff.  mov rcx, qword [rbp - 0x388]
0x00009e58      0f1f84000000.  nop dword [rax + rax]
0x00009e60      4883c101       add rcx, 1
0x00009e64      4883c001       add rax, 1
0x00009e68      8850ff         mov byte [rax - 1], dl
0x00009e6b      0fb611         movzx edx, byte [rcx]
0x00009e6e      84d2           test dl, dl                             ; .//src:1497
0x00009e70      75ee           jne 0x9e60
0x00009e72      c60000         mov byte [rax], 0
0x00009e75      e949f9ffff     jmp 0x97c3
0x00009e7a      660f1f440000   nop word [rax + rax]
0x00009e80      488bbd78fcff.  mov rdi, qword [rbp - 0x388]
0x00009e87      e854bcffff     call sym.needs_quoting
0x00009e8c      0fb6d0         movzx edx, al
0x00009e8f      84c0           test al, al
0x00009e91      8993c4000000   mov dword [rbx + 0xc4], edx
0x00009e97      0f84f4f8ffff   je 0x9791
0x00009e9d      c60505752100.  mov byte [obj.cwd_some_quoted], 1       ; [0x2213a9:1]=0
0x00009ea4      e9e8f8ffff     jmp 0x9791
0x00009ea9      0f1f80000000.  nop dword [rax]
0x00009eb0      89059e742100   mov dword [obj.scontext_width], eax     ; .//src:1425 ; [0x221354:4]=0
0x00009eb6      e9a2faffff     jmp 0x995d
0x00009ebb      0f1f440000     nop dword [rax + rax]
0x00009ec0      488b7b48       mov rdi, qword [rbx + 0x48]
0x00009ec4      4c8b054d6121.  mov r8, qword [obj.file_output_block_size] ; [0x220018:8]=1
0x00009ecb      488db530fdff.  lea rsi, [rbp - 0x2d0]
0x00009ed2      8b1544742100   mov edx, dword [obj.file_human_output_opts] ; [0x22131c:4]=0
0x00009ed8      b901000000     mov ecx, 1
0x00009edd      e8de4c0000     call sym.human_readable
0x00009ee2      31f6           xor esi, esi
0x00009ee4      4889c7         mov rdi, rax                            ; .//src:1375
0x00009ee7      e834630000     call sym.gnu_mbswidth
0x00009eec      3b054a742100   cmp eax, dword [obj.file_size_width]    ; [0x22133c:4]=0
0x00009ef2      0f8e73faffff   jle 0x996b
0x00009ef8      89053e742100   mov dword [obj.file_size_width], eax    ; [0x22133c:4]=0
0x00009efe      e968faffff     jmp 0x996b
0x00009f03      0f1f440000     nop dword [rax + rax]
0x00009f08      4584d2         test r10b, r10b
0x00009f0b      4889f8         mov rax, rdi
0x00009f0e      0f8439ffffff   je 0x9e4d
0x00009f14      e900ffffff     jmp 0x9e19
0x00009f19      0f1f80000000.  nop dword [rax]
0x00009f20      410fb60f       movzx ecx, byte [r15]
0x00009f24      84c9           test cl, cl
0x00009f26      0f8587feffff   jne 0x9db3
0x00009f2c      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x00009f33      e994f8ffff     jmp 0x97cc
0x00009f38      0f1f84000000.  nop dword [rax + rax]                   ; .//src:1442
0x00009f40      4c3b35a16321.  cmp r14, qword [obj.unsupported_device.10320] ; [0x2202e8:8]=0
0x00009f47      0f84f3020000   je 0xa240
0x00009f4d      41c700000000.  mov dword [r8], 0
0x00009f54      4c89fe         mov rsi, r15
0x00009f57      4c89e7         mov rdi, r12
0x00009f5a      4c898570fcff.  mov qword [rbp - 0x390], r8
0x00009f61      e85a2e0000     call sym.file_has_acl
0x00009f66      85c0           test eax, eax
0x00009f68      b901000000     mov ecx, 1
0x00009f6d      ba02000000     mov edx, 2
0x00009f72      4c8b8570fcff.  mov r8, qword [rbp - 0x390]
0x00009f79      0f8e31040000   jle 0xa3b0
0x00009f7f      080ddf732100   or byte [obj.any_has_acl], cl           ; [0x221364:1]=0
0x00009f85      85c0           test eax, eax
0x00009f87      4c898570fcff.  mov qword [rbp - 0x390], r8
0x00009f8e      8993bc000000   mov dword [rbx + 0xbc], edx
0x00009f94      792c           jns 0x9fc2
0x00009f96      4c89e2         mov rdx, r12
0x00009f99      be03000000     mov esi, 3
0x00009f9e      31ff           xor edi, edi                            ; .//src:1280
0x00009fa0      e8eb9b0000     call sym.quotearg_n_style_colon
0x00009fa5      4c8b8570fcff.  mov r8, qword [rbp - 0x390]
0x00009fac      488d15d9ff00.  lea rdx, [0x00019f8c]                   ; "%s"
0x00009fb3      4889c1         mov rcx, rax
0x00009fb6      31ff           xor edi, edi
0x00009fb8      31c0           xor eax, eax
0x00009fba      418b30         mov esi, dword [r8]
0x00009fbd      e89e97ffff     call sym.imp.error
0x00009fc2      8b4330         mov eax, dword [rbx + 0x30]
0x00009fc5      2500f00000     and eax, 0xf000
0x00009fca      3d00a00000     cmp eax, 0xa000
0x00009fcf      0f85caf8ffff   jne 0x989f
0x00009fd5      8b3d5d732100   mov edi, dword [obj.format]             ; [0x221338:4]=0
0x00009fdb      85ff           test edi, edi
0x00009fdd      740e           je 0x9fed
0x00009fdf      90             nop
0x00009fe0      803d16732100.  cmp byte [obj.check_symlink_mode], 0    ; [0x2212fd:1]=0
0x00009fe7      0f84ce000000   je 0xa0bb
0x00009fed      488b7348       mov rsi, qword [rbx + 0x48]
0x00009ff1      4c89e7         mov rdi, r12
0x00009ff4      e857200000     call sym.areadlink_with_size
0x00009ff9      4885c0         test rax, rax
0x00009ffc      4989c6         mov r14, rax
0x00009fff      48894308       mov qword [rbx + 8], rax
0x0000a003      0f84a7020000   je 0xa2b0
0x0000a009      41803e2f       cmp byte [r14], 0x2f
0x0000a00d      0f8415020000   je 0xa228
0x0000a013      4c89e7         mov rdi, r12
0x0000a016      e8352c0000     call sym.dir_len                        ; .//src:1201
0x0000a01b      4885c0         test rax, rax
0x0000a01e      0f8404020000   je 0xa228
0x0000a024      4c89f7         mov rdi, r14
0x0000a027      48898570fcff.  mov qword [rbp - 0x390], rax
0x0000a02e      e8cd93ffff     call sym.imp.strlen
0x0000a033      488b9570fcff.  mov rdx, qword [rbp - 0x390]
0x0000a03a      488d7c0202     lea rdi, [rdx + rax + 2]                ; .//src:1561
0x0000a03f      e84ca50000     call sym.xmalloc                        ; stdio2.h:-1755
0x0000a044      488b9570fcff.  mov rdx, qword [rbp - 0x390]            ; stdio2.h:-1756
0x0000a04b      4989c7         mov r15, rax
0x0000a04e      41807c14ff2f   cmp byte [r12 + rdx - 1], 0x2f
0x0000a054      7404           je 0xa05a
0x0000a056      4883c201       add rdx, 1                              ; .//src:851
0x0000a05a      4c89e6         mov rsi, r12
0x0000a05d      4c89ff         mov rdi, r15
0x0000a060      e88b96ffff     call sym.imp.stpncpy
0x0000a065      4c89f6         mov rsi, r14
0x0000a068      4889c7         mov rdi, rax
0x0000a06b      e87092ffff     call sym.imp.strcpy
0x0000a070      4d85ff         test r15, r15
0x0000a073      0f8467020000   je 0xa2e0
0x0000a079      8bb3c4000000   mov esi, dword [rbx + 0xc4]
0x0000a07f      85f6           test esi, esi
0x0000a081      0f8409030000   je 0xa390
0x0000a087      833d86722100.  cmp dword [obj.indicator_style], 1      ; [0x221314:4]=0
0x0000a08e      7740           ja 0xa0d0
0x0000a090      803d66722100.  cmp byte [obj.check_symlink_mode], 0    ; .//src:857 ; [0x2212fd:1]=0
0x0000a097      7537           jne 0xa0d0
0x0000a099      0f1f80000000.  nop dword [rax]                         ; .//src:858
0x0000a0a0      4c89ff         mov rdi, r15
0x0000a0a3      e8d897ffff     call sym..plt.got
0x0000a0a8      8b4330         mov eax, dword [rbx + 0x30]
0x0000a0ab      2500f00000     and eax, 0xf000
0x0000a0b0      3d00a00000     cmp eax, 0xa000
0x0000a0b5      0f85e4f7ffff   jne 0x989f
0x0000a0bb      c783a8000000.  mov dword [rbx + 0xa8], 6
0x0000a0c5      e9eaf7ffff     jmp 0x98b4
0x0000a0ca      660f1f440000   nop word [rax + rax]
0x0000a0d0      488d9580fcff.  lea rdx, [rbp - 0x380]
0x0000a0d7      4c89fe         mov rsi, r15
0x0000a0da      bf01000000     mov edi, 1
0x0000a0df      e85c95ffff     call sym.imp.__xstat
0x0000a0e4      85c0           test eax, eax
0x0000a0e6      75b8           jne 0xa0a0
0x0000a0e8      8b8598fcffff   mov eax, dword [rbp - 0x368]
0x0000a0ee      c683b9000000.  mov byte [rbx + 0xb9], 1
0x0000a0f5      8983ac000000   mov dword [rbx + 0xac], eax
0x0000a0fb      eba3           jmp 0xa0a0
0x0000a0fd      0f1f00         nop dword [rax]
0x0000a100      4584ed         test r13b, r13b
0x0000a103      741b           je 0xa120
0x0000a105      803de9712100.  cmp byte [obj.immediate_dirs], 0        ; [0x2212f5:1]=0
0x0000a10c      7512           jne 0xa120
0x0000a10e      c783a8000000.  mov dword [rbx + 0xa8], 9
0x0000a118      e997f7ffff     jmp 0x98b4
0x0000a11d      0f1f00         nop dword [rax]
0x0000a120      c783a8000000.  mov dword [rbx + 0xa8], 3
0x0000a12a      e985f7ffff     jmp 0x98b4
0x0000a12f      90             nop
0x0000a130      8b7b34         mov edi, dword [rbx + 0x34]
0x0000a133      e888f4ffff     call sym.format_user_width
0x0000a138      3b0512722100   cmp eax, dword [obj.owner_width]        ; [0x221350:4]=0
0x0000a13e      0f8edef7ffff   jle 0x9922
0x0000a144      890506722100   mov dword [obj.owner_width], eax        ; [0x221350:4]=0
0x0000a14a      e9d3f7ffff     jmp 0x9922                              ; .//src:883
0x0000a14f      90             nop                                     ; .//src:-647
0x0000a150      803d0e722100.  cmp byte [obj.print_scontext], 0        ; [0x221365:1]=0
0x0000a157      0f85e8f7ffff   jne 0x9945
0x0000a15d      e909f8ffff     jmp 0x996b
0x0000a162      660f1f440000   nop word [rax + rax]                    ; .//src:-646
0x0000a168      8b7b34         mov edi, dword [rbx + 0x34]
0x0000a16b      e850f4ffff     call sym.format_user_width
0x0000a170      3b05d2712100   cmp eax, dword [obj.author_width]       ; .//src:-645 ; [0x221348:4]=0
0x0000a176      0f8ec0f7ffff   jle 0x993c
0x0000a17c      8905c6712100   mov dword [obj.author_width], eax       ; [0x221348:4]=0
0x0000a182      e9b5f7ffff     jmp 0x993c
0x0000a187      660f1f840000.  nop word [rax + rax]
0x0000a190      803d96712100.  cmp byte [obj.numeric_ids], 0           ; [0x22132d:1]=0
0x0000a197      448b7338       mov r14d, dword [rbx + 0x38]
0x0000a19b      0f84bf010000   je 0xa360
0x0000a1a1      488d0de5d600.  lea rcx, [0x0001788d]                   ; "%lu"
0x0000a1a8      4589f0         mov r8d, r14d
0x0000a1ab      ba15000000     mov edx, 0x15
0x0000a1b0      be01000000     mov esi, 1
0x0000a1b5      4c89ef         mov rdi, r13
0x0000a1b8      31c0           xor eax, eax
0x0000a1ba      e8b196ffff     call sym.imp.__sprintf_chk
0x0000a1bf      4c89e8         mov rax, r13
0x0000a1c2      8b08           mov ecx, dword [rax]
0x0000a1c4      4883c004       add rax, 4
0x0000a1c8      8d91fffefefe   lea edx, [rcx - 0x1010101]
0x0000a1ce      f7d1           not ecx
0x0000a1d0      21ca           and edx, ecx
0x0000a1d2      81e280808080   and edx, 0x80808080
0x0000a1d8      74e8           je 0xa1c2
0x0000a1da      89d1           mov ecx, edx
0x0000a1dc      c1e910         shr ecx, 0x10
0x0000a1df      f7c280800000   test edx, 0x8080
0x0000a1e5      0f44d1         cmove edx, ecx
0x0000a1e8      488d4802       lea rcx, [rax + 2]
0x0000a1ec      89d6           mov esi, edx
0x0000a1ee      480f44c1       cmove rax, rcx
0x0000a1f2      4000d6         add sil, dl
0x0000a1f5      4883d803       sbb rax, 3
0x0000a1f9      4429e8         sub eax, r13d
0x0000a1fc      39054a712100   cmp dword [obj.group_width], eax        ; [0x22134c:4]=0
0x0000a202      0f8d27f7ffff   jge 0x992f
0x0000a208      89053e712100   mov dword [obj.group_width], eax        ; [0x22134c:4]=0
0x0000a20e      e91cf7ffff     jmp 0x992f
0x0000a213      0f1f440000     nop dword [rax + rax]
0x0000a218      4c8ba578fcff.  mov r12, qword [rbp - 0x388]
0x0000a21f      e99ff5ffff     jmp 0x97c3
0x0000a224      0f1f4000       nop dword [rax]
0x0000a228      4c89f7         mov rdi, r14
0x0000a22b      e890a50000     call sym.xstrdup
0x0000a230      4989c7         mov r15, rax
0x0000a233      e938feffff     jmp 0xa070
0x0000a238      0f1f84000000.  nop dword [rax + rax]
0x0000a240      41c7005f0000.  mov dword [r8], 0x5f                    ; '_'
                                                                       ; [0x5f:4]=0x1f800
0x0000a247      8b4330         mov eax, dword [rbx + 0x30]
0x0000a24a      c783bc000000.  mov dword [rbx + 0xbc], 0
0x0000a254      2500f00000     and eax, 0xf000
0x0000a259      3d00a00000     cmp eax, 0xa000
0x0000a25e      0f853bf6ffff   jne 0x989f                              ; .//src:928
0x0000a264      e984fdffff     jmp 0x9fed
0x0000a269      0f1f80000000.  nop dword [rax]
0x0000a270      e82b90ffff     call sym.imp.__errno_location
0x0000a275      833802         cmp dword [rax], 2
0x0000a278      0f84c2f8ffff   je 0x9b40
0x0000a27e      488d3561d600.  lea rsi, str.cannot_access__s           ; 0x178e6 ; "cannot access %s"
0x0000a285      ba05000000     mov edx, 5                              ; .//src:921
0x0000a28a      31ff           xor edi, edi
0x0000a28c      e84f91ffff     call sym.imp.dcgettext
0x0000a291      4c89e2         mov rdx, r12
0x0000a294      4889c6         mov rsi, rax                            ; .//src:907
0x0000a297      bf01000000     mov edi, 1
0x0000a29c      e85fc0ffff     call sym.file_failure
0x0000a2a1      4531e4         xor r12d, r12d
0x0000a2a4      e9e8f6ffff     jmp 0x9991
0x0000a2a9      0f1f80000000.  nop dword [rax]
0x0000a2b0      488d3540d600.  lea rsi, str.cannot_read_symbolic_link__s ; 0x178f7 ; "cannot read symbolic link %s"
0x0000a2b7      31ff           xor edi, edi
0x0000a2b9      ba05000000     mov edx, 5
0x0000a2be      e81d91ffff     call sym.imp.dcgettext
0x0000a2c3      410fb6fd       movzx edi, r13b
0x0000a2c7      4c89e2         mov rdx, r12
0x0000a2ca      4889c6         mov rsi, rax
0x0000a2cd      e82ec0ffff     call sym.file_failure
0x0000a2d2      4c8b7308       mov r14, qword [rbx + 8]
0x0000a2d6      4d85f6         test r14, r14
0x0000a2d9      0f852afdffff   jne 0xa009
0x0000a2df      90             nop
0x0000a2e0      4531ff         xor r15d, r15d
0x0000a2e3      e9b8fdffff     jmp 0xa0a0
0x0000a2e8      0f1f84000000.  nop dword [rax + rax]
0x0000a2f0      803d1b702100.  cmp byte [obj.print_with_color], 0      ; [0x221312:1]=0
0x0000a2f7      0f84e3f6ffff   je 0x99e0
0x0000a2fd      bf13000000     mov edi, 0x13
0x0000a302      44888570fcff.  mov byte [rbp - 0x390], r8b
0x0000a309      e862b3ffff     call sym.is_colored
0x0000a30e      84c0           test al, al
0x0000a310      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x0000a318      0f85e2f7ffff   jne 0x9b00
0x0000a31e      bf12000000     mov edi, 0x12
0x0000a323      e848b3ffff     call sym.is_colored                     ; .//src:772
0x0000a328      84c0           test al, al
0x0000a32a      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x0000a332      0f85c8f7ffff   jne 0x9b00
0x0000a338      bf14000000     mov edi, 0x14
0x0000a33d      e82eb3ffff     call sym.is_colored
0x0000a342      84c0           test al, al
0x0000a344      440fb68570fc.  movzx r8d, byte [rbp - 0x390]
0x0000a34c      0f85aef7ffff   jne 0x9b00
0x0000a352      e989f6ffff     jmp 0x99e0
0x0000a357      660f1f840000.  nop word [rax + rax]
0x0000a360      4489f7         mov edi, r14d
0x0000a363      e8f8550000     call sym.getgroup
0x0000a368      4885c0         test rax, rax
0x0000a36b      4889c7         mov rdi, rax
0x0000a36e      0f842dfeffff   je 0xa1a1
0x0000a374      31f6           xor esi, esi
0x0000a376      e8a55e0000     call sym.gnu_mbswidth
0x0000a37b      ba00000000     mov edx, 0
0x0000a380      85c0           test eax, eax
0x0000a382      0f48c2         cmovs eax, edx
0x0000a385      e972feffff     jmp 0xa1fc
0x0000a38a      660f1f440000   nop word [rax + rax]
0x0000a390      488b7b08       mov rdi, qword [rbx + 8]
0x0000a394      e847b7ffff     call sym.needs_quoting
0x0000a399      84c0           test al, al
0x0000a39b      0f84e6fcffff   je 0xa087
0x0000a3a1      c783c4000000.  mov dword [rbx + 0xc4], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x0000a3ab      e9d7fcffff     jmp 0xa087
0x0000a3b0      418b10         mov edx, dword [r8]
0x0000a3b3      8d4aea         lea ecx, [rdx - 0x16]
0x0000a3b6      83e1ef         and ecx, 0xffffffef                     ; 4294967279
0x0000a3b9      7405           je 0xa3c0
0x0000a3bb      83fa5f         cmp edx, 0x5f
0x0000a3be      750b           jne 0xa3cb
0x0000a3c0      488b5318       mov rdx, qword [rbx + 0x18]
0x0000a3c4      4889151d5f21.  mov qword [obj.unsupported_device.10320], rdx ; [0x2202e8:8]=0
0x0000a3cb      31c9           xor ecx, ecx
0x0000a3cd      31d2           xor edx, edx
0x0000a3cf      e9abfbffff     jmp 0x9f7f
0x0000a3d4      e84790ffff     call sym.imp.__stack_chk_fail
0x0000a3d9      e802a40000     call sym.xalloc_die
0x0000a3de      be01000000     mov esi, 1
0x0000a3e3      e905f3ffff     jmp 0x96ed
0x0000a3e8      0f1f84000000.  nop dword [rax + rax]
;-- print_dir:
0x0000a3f0      4157           push r15
0x0000a3f2      4156           push r14
0x0000a3f4      4989fe         mov r14, rdi                            ; .//src:867
0x0000a3f7      4155           push r13
0x0000a3f9      4154           push r12
0x0000a3fb      55             push rbp
0x0000a3fc      53             push rbx
0x0000a3fd      4889f3         mov rbx, rsi
0x0000a400      4881ec480300.  sub rsp, 0x348
0x0000a407      8954240c       mov dword [rsp + 0xc], edx
0x0000a40b      8854240b       mov byte [rsp + 0xb], dl                ; .//src:872
0x0000a40f      64488b042528.  mov rax, qword fs:[0x28]
0x0000a418      488984243803.  mov qword [rsp + 0x338], rax            ; .//src:873
0x0000a420      31c0           xor eax, eax
0x0000a422      e8798effff     call sym.imp.__errno_location
0x0000a427      4c89f7         mov rdi, r14
0x0000a42a      c70000000000   mov dword [rax], 0
0x0000a430      4989c4         mov r12, rax
0x0000a433      e8788fffff     call sym.imp.opendir
0x0000a438      4885c0         test rax, rax
0x0000a43b      0f842f050000   je 0xa970
0x0000a441      48833d7f6f21.  cmp qword [obj.active_dir_set], 0       ; [0x2213c8:8]=0
0x0000a449      4989c5         mov r13, rax
0x0000a44c      0f8475010000   je 0xa5c7                               ; .//src:874
0x0000a452      4889c7         mov rdi, rax
0x0000a455      e85691ffff     call sym.imp.dirfd
0x0000a45a      85c0           test eax, eax
0x0000a45c      488d542410     lea rdx, [rsp + 0x10]
0x0000a461      786d           js 0xa4d0
0x0000a463      89c6           mov esi, eax
0x0000a465      bf01000000     mov edi, 1
0x0000a46a      e82192ffff     call sym.imp.__fxstat
0x0000a46f      c1e81f         shr eax, 0x1f
0x0000a472      84c0           test al, al
0x0000a474      746e           je 0xa4e4
0x0000a476      488d35dbd900.  lea rsi, str.cannot_determine_device_and_inode_of__s ; 0x17e58 ; "cannot determine device and inode of %s"
0x0000a47d      ba05000000     mov edx, 5
0x0000a482      31ff           xor edi, edi
0x0000a484      e8578fffff     call sym.imp.dcgettext
0x0000a489      0fb67c240c     movzx edi, byte [rsp + 0xc]
0x0000a48e      4c89f2         mov rdx, r14
0x0000a491      4889c6         mov rsi, rax
0x0000a494      e867beffff     call sym.file_failure
0x0000a499      4c89ef         mov rdi, r13
0x0000a49c      e89f90ffff     call sym.imp.closedir
0x0000a4a1      488b84243803.  mov rax, qword [rsp + 0x338]            ; .//src:878
0x0000a4a9      644833042528.  xor rax, qword fs:[0x28]
0x0000a4b2      0f85e2050000   jne 0xaa9a
0x0000a4b8      4881c4480300.  add rsp, 0x348
0x0000a4bf      5b             pop rbx                                 ; ../coreutils-8.31/src/system.h:-1896
0x0000a4c0      5d             pop rbp
0x0000a4c1      415c           pop r12
0x0000a4c3      415d           pop r13
0x0000a4c5      415e           pop r14
0x0000a4c7      415f           pop r15
0x0000a4c9      c3             ret
0x0000a4ca      660f1f440000   nop word [rax + rax]
0x0000a4d0      4c89f6         mov rsi, r14
0x0000a4d3      bf01000000     mov edi, 1
0x0000a4d8      e86391ffff     call sym.imp.__xstat                    ; .//src:879
0x0000a4dd      c1e81f         shr eax, 0x1f
0x0000a4e0      84c0           test al, al                             ; .//src:882
0x0000a4e2      7592           jne 0xa476
0x0000a4e4      488b542418     mov rdx, qword [rsp + 0x18]
0x0000a4e9      bf10000000     mov edi, 0x10
0x0000a4ee      4c8b7c2410     mov r15, qword [rsp + 0x10]             ; .//src:883
0x0000a4f3      48891424       mov qword [rsp], rdx
0x0000a4f7      e894a00000     call sym.xmalloc
0x0000a4fc      488b1424       mov rdx, qword [rsp]                    ; .//src:920
0x0000a500      488b3dc16e21.  mov rdi, qword [obj.active_dir_set]     ; [0x2213c8:8]=0
0x0000a507      4889c6         mov rsi, rax
0x0000a50a      4c897808       mov qword [rax + 8], r15
0x0000a50e      4889c5         mov rbp, rax
0x0000a511      488910         mov qword [rax], rdx
0x0000a514      e897420000     call sym.hash_insert
0x0000a519      4885c0         test rax, rax
0x0000a51c      0f847d050000   je 0xaa9f                               ; .//src:923
0x0000a522      4839c5         cmp rbp, rax
0x0000a525      7455           je 0xa57c
0x0000a527      4889ef         mov rdi, rbp
0x0000a52a      e85193ffff     call sym..plt.got
0x0000a52f      4c89f2         mov rdx, r14
0x0000a532      be03000000     mov esi, 3
0x0000a537      31ff           xor edi, edi
0x0000a539      e852960000     call sym.quotearg_n_style_colon
0x0000a53e      488d353bd900.  lea rsi, str.s:_not_listing_already_listed_directory ; 0x17e80 ; "%s: not listing already-listed directory"
0x0000a545      4889c3         mov rbx, rax
0x0000a548      ba05000000     mov edx, 5
0x0000a54d      31ff           xor edi, edi
0x0000a54f      e88c8effff     call sym.imp.dcgettext
0x0000a554      4889d9         mov rcx, rbx
0x0000a557      4889c2         mov rdx, rax
0x0000a55a      31f6           xor esi, esi
0x0000a55c      31ff           xor edi, edi
0x0000a55e      31c0           xor eax, eax
0x0000a560      e8fb91ffff     call sym.imp.error
0x0000a565      4c89ef         mov rdi, r13
0x0000a568      e8d38fffff     call sym.imp.closedir
0x0000a56d      c705996c2100.  mov dword [obj.exit_status], 2          ; [0x221210:4]=0
0x0000a577      e925ffffff     jmp 0xa4a1
0x0000a57c      488b05756b21.  mov rax, qword [0x002210f8]             ; [0x2210f8:8]=0
0x0000a583      488b15766b21.  mov rdx, qword [0x00221100]             ; [0x221100:8]=0
0x0000a58a      488b6c2418     mov rbp, qword [rsp + 0x18]
0x0000a58f      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x0000a594      4829c2         sub rdx, rax
0x0000a597      4883fa0f       cmp rdx, 0xf
0x0000a59b      7718           ja 0xa5b5
0x0000a59d      488d3d3c6b21.  lea rdi, obj.dev_ino_obstack            ; 0x2210e0
0x0000a5a4      be10000000     mov esi, 0x10
0x0000a5a9      e882af0000     call sym._obstack_newchunk
0x0000a5ae      488b05436b21.  mov rax, qword [0x002210f8]             ; [0x2210f8:8]=0
0x0000a5b5      488d5010       lea rdx, [rax + 0x10]
0x0000a5b9      488915386b21.  mov qword [0x002210f8], rdx             ; [0x2210f8:8]=0
0x0000a5c0      4c897808       mov qword [rax + 8], r15
0x0000a5c4      488928         mov qword [rax], rbp
0x0000a5c7      e824efffff     call sym.clear_files
0x0000a5cc      803d236d2100.  cmp byte [obj.recursive], 0             ; .//src:728 ; [0x2212f6:1]=0
0x0000a5d3      0f85a7000000   jne 0xa680
0x0000a5d9      803dd86c2100.  cmp byte [obj.print_dir_name], 0        ; [0x2212b8:1]=0
0x0000a5e0      0f859a000000   jne 0xa680
0x0000a5e6      48c704240000.  mov qword [rsp], 0
0x0000a5ee      6690           nop
0x0000a5f0      41c704240000.  mov dword [r12], 0
0x0000a5f8      4c89ef         mov rdi, r13
0x0000a5fb      e85090ffff     call sym.imp.readdir
0x0000a600      4885c0         test rax, rax
0x0000a603      4889c5         mov rbp, rax
0x0000a606      0f8434010000   je 0xa740
0x0000a60c      488d5813       lea rbx, [rax + 0x13]                   ; .//src:854
0x0000a610      8b05da6c2100   mov eax, dword [obj.ignore_mode]        ; [0x2212f0:4]=0
0x0000a616      83f802         cmp eax, 2
0x0000a619      0f84a1020000   je 0xa8c0
0x0000a61f      807d132e       cmp byte [rbp + 0x13], 0x2e
0x0000a623      0f8477020000   je 0xa8a0
0x0000a629      85c0           test eax, eax
0x0000a62b      0f858f020000   jne 0xa8c0
0x0000a631      4c8b3da86c21.  mov r15, qword [obj.hide_patterns]      ; [0x2212e0:8]=0
0x0000a638      4d85ff         test r15, r15
0x0000a63b      7518           jne 0xa655
0x0000a63d      e97e020000     jmp 0xa8c0
0x0000a642      660f1f440000   nop word [rax + rax]
0x0000a648      4d8b7f08       mov r15, qword [r15 + 8]
0x0000a64c      4d85ff         test r15, r15
0x0000a64f      0f846b020000   je 0xa8c0
0x0000a655      498b3f         mov rdi, qword [r15]
0x0000a658      ba04000000     mov edx, 4
0x0000a65d      4889de         mov rsi, rbx
0x0000a660      e88b8effff     call sym.imp.fnmatch
0x0000a665      85c0           test eax, eax
0x0000a667      75df           jne 0xa648
0x0000a669      0f1f80000000.  nop dword [rax]
0x0000a670      e86bc8ffff     call sym.process_signals
0x0000a675      e976ffffff     jmp 0xa5f0
0x0000a67a      660f1f440000   nop word [rax + rax]
0x0000a680      803d89592100.  cmp byte [obj.first.10256], 0           ; [0x220010:1]=1
0x0000a687      7528           jne 0xa6b1
0x0000a689      488b3df85b21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a690      488b4728       mov rax, qword [rdi + 0x28]
0x0000a694      483b4730       cmp rax, qword [rdi + 0x30]
0x0000a698      0f83ed030000   jae 0xaa8b
0x0000a69e      488d5001       lea rdx, [rax + 1]
0x0000a6a2      48895728       mov qword [rdi + 0x28], rdx
0x0000a6a6      c6000a         mov byte [rax], 0xa
0x0000a6a9      488305476b21.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x0000a6b1      803d606c2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x0000a6b8      c60551592100.  mov byte [obj.first.10256], 0           ; [0x220010:1]=1
0x0000a6bf      0f857e030000   jne 0xaa43
0x0000a6c5      31ed           xor ebp, ebp
0x0000a6c7      803d436c2100.  cmp byte [obj.print_hyperlink], 0       ; [0x221311:1]=0
0x0000a6ce      0f852e030000   jne 0xaa02
0x0000a6d4      4885db         test rbx, rbx
0x0000a6d7      488b35ea6b21.  mov rsi, qword [obj.dirname_quoting_options] ; [0x2212c8:8]=0
0x0000a6de      4c8d0d5b6a21.  lea r9, obj.subdired_obstack            ; 0x221140
0x0000a6e5      490f44de       cmove rbx, r14
0x0000a6e9      4883ec08       sub rsp, 8
0x0000a6ed      41b801000000   mov r8d, 1
0x0000a6f3      55             push rbp
0x0000a6f4      31c9           xor ecx, ecx
0x0000a6f6      baffffffff     mov edx, 0xffffffff                     ; .//src:884 ; -1
0x0000a6fb      4889df         mov rdi, rbx                            ; .//src:-770
0x0000a6fe      e88dcdffff     call sym.quote_name
0x0000a703      4889ef         mov rdi, rbp
0x0000a706      e87591ffff     call sym..plt.got
0x0000a70b      488b0d765b21.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a712      488d3d26d400.  lea rdi, [0x00017b3f]                   ; ":\n"
0x0000a719      be01000000     mov esi, 1
0x0000a71e      ba02000000     mov edx, 2                              ; stdio.h:-1902
0x0000a723      e8a88fffff     call sym.imp.fwrite_unlocked
0x0000a728      59             pop rcx
0x0000a729      488305c76a21.  add qword [obj.dired_pos], 2            ; [0x2211f8:8]=0
0x0000a731      5e             pop rsi
0x0000a732      e9affeffff     jmp 0xa5e6
0x0000a737      660f1f840000.  nop word [rax + rax]
0x0000a740      418b1424       mov edx, dword [r12]
0x0000a744      85d2           test edx, edx
0x0000a746      742e           je 0xa776
0x0000a748      488d35ded100.  lea rsi, str.reading_directory__s       ; 0x1792d ; "reading directory %s"
0x0000a74f      31ff           xor edi, edi
0x0000a751      ba05000000     mov edx, 5
0x0000a756      e8858cffff     call sym.imp.dcgettext
0x0000a75b      0fb67c240b     movzx edi, byte [rsp + 0xb]
0x0000a760      4c89f2         mov rdx, r14
0x0000a763      4889c6         mov rsi, rax
0x0000a766      e895bbffff     call sym.file_failure                   ; stdio.h:-1910
0x0000a76b      41833c244b     cmp dword [r12], 0x4b
0x0000a770      0f84fafeffff   je 0xa670
0x0000a776      4c89ef         mov rdi, r13
0x0000a779      e8c28dffff     call sym.imp.closedir
0x0000a77e      85c0           test eax, eax
0x0000a780      0f852a020000   jne 0xa9b0
0x0000a786      e8b5b4ffff     call sym.sort_files
0x0000a78b      803d646b2100.  cmp byte [obj.recursive], 0             ; [0x2212f6:1]=0
0x0000a792      0f8500020000   jne 0xa998
0x0000a798      8b059a6b2100   mov eax, dword [obj.format]             ; [0x221338:4]=0
0x0000a79e      85c0           test eax, eax
0x0000a7a0      740d           je 0xa7af
0x0000a7a2      803d836b2100.  cmp byte [obj.print_block_size], 0      ; [0x22132c:1]=0
0x0000a7a9      0f84d5000000   je 0xa884
0x0000a7af      803d626b2100.  cmp byte [obj.dired], 0                 ; [0x221318:1]=0
0x0000a7b6      0f851c020000   jne 0xa9d8
0x0000a7bc      488d3594d100.  lea rsi, str.total                      ; stdio.h:-1909 ; 0x17957 ; "total"
0x0000a7c3      ba05000000     mov edx, 5
0x0000a7c8      31ff           xor edi, edi
0x0000a7ca      e8118cffff     call sym.imp.dcgettext
0x0000a7cf      488b35b25a21.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a7d6      4889c3         mov rbx, rax
0x0000a7d9      4889c7         mov rdi, rax
0x0000a7dc      e88f8dffff     call sym.imp.fputs_unlocked             ; .//src:1685
0x0000a7e1      4889df         mov rdi, rbx
0x0000a7e4      e8178cffff     call sym.imp.strlen
0x0000a7e9      488b3d985a21.  mov rdi, qword [obj.stdout]             ; stdio.h:-1910 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a7f0      480105016a21.  add qword [obj.dired_pos], rax          ; [0x2211f8:8]=0
0x0000a7f7      488b4728       mov rax, qword [rdi + 0x28]
0x0000a7fb      483b4730       cmp rax, qword [rdi + 0x30]
0x0000a7ff      0f8368020000   jae 0xaa6d
0x0000a805      488d5001       lea rdx, [rax + 1]
0x0000a809      48895728       mov qword [rdi + 0x28], rdx             ; .//src:1685
0x0000a80d      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x0000a810      4c8b05096b21.  mov r8, qword [obj.output_block_size]   ; [0x221320:8]=0
0x0000a817      8b150b6b2100   mov edx, dword [obj.human_output_opts]  ; [0x221328:4]=0
0x0000a81d      488db424a000.  lea rsi, [rsp + 0xa0]
0x0000a825      488b3c24       mov rdi, qword [rsp]
0x0000a829      b900020000     mov ecx, 0x200                          ; stdio.h:-1910
0x0000a82e      488305c26921.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x0000a836      e885430000     call sym.human_readable
0x0000a83b      488b35465a21.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a842      4889c3         mov rbx, rax
0x0000a845      4889c7         mov rdi, rax
0x0000a848      e8238dffff     call sym.imp.fputs_unlocked
0x0000a84d      4889df         mov rdi, rbx
0x0000a850      e8ab8bffff     call sym.imp.strlen
0x0000a855      488b3d2c5a21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a85c      480105956921.  add qword [obj.dired_pos], rax          ; .//src:1684 ; [0x2211f8:8]=0
0x0000a863      488b4728       mov rax, qword [rdi + 0x28]
0x0000a867      483b4730       cmp rax, qword [rdi + 0x30]
0x0000a86b      0f830b020000   jae 0xaa7c
0x0000a871      488d5001       lea rdx, [rax + 1]                      ; stdio.h:-1902
0x0000a875      48895728       mov qword [rdi + 0x28], rdx
0x0000a879      c6000a         mov byte [rax], 0xa
0x0000a87c      488305746921.  add qword [obj.dired_pos], 1            ; [0x2211f8:8]=0
0x0000a884      48833d246b21.  cmp qword [obj.cwd_n_used], 0           ; [0x2213b0:8]=0
0x0000a88c      0f840ffcffff   je 0xa4a1                               ; stdio.h:-1909
0x0000a892      e809e7ffff     call sym.print_current_files
0x0000a897      e905fcffff     jmp 0xa4a1
0x0000a89c      0f1f4000       nop dword [rax]                         ; stdio.h:-1911
0x0000a8a0      85c0           test eax, eax
0x0000a8a2      0f84c8fdffff   je 0xa670
0x0000a8a8      31c0           xor eax, eax
0x0000a8aa      807d142e       cmp byte [rbp + 0x14], 0x2e
0x0000a8ae      0f94c0         sete al
0x0000a8b1      807c051400     cmp byte [rbp + rax + 0x14], 0
0x0000a8b6      0f84b4fdffff   je 0xa670                               ; .//src:1689
0x0000a8bc      0f1f4000       nop dword [rax]
0x0000a8c0      4c8b3d216a21.  mov r15, qword [obj.ignore_patterns]    ; [0x2212e8:8]=0
0x0000a8c7      4d85ff         test r15, r15
0x0000a8ca      750d           jne 0xa8d9
0x0000a8cc      eb2a           jmp 0xa8f8                              ; .//src:1678
0x0000a8ce      6690           nop
0x0000a8d0      4d8b7f08       mov r15, qword [r15 + 8]
0x0000a8d4      4d85ff         test r15, r15                           ; .//src:1680
0x0000a8d7      741f           je 0xa8f8
0x0000a8d9      498b3f         mov rdi, qword [r15]
0x0000a8dc      ba04000000     mov edx, 4
0x0000a8e1      4889de         mov rsi, rbx
0x0000a8e4      e8078cffff     call sym.imp.fnmatch
0x0000a8e9      85c0           test eax, eax
0x0000a8eb      75e3           jne 0xa8d0
0x0000a8ed      e97efdffff     jmp 0xa670
0x0000a8f2      660f1f440000   nop word [rax + rax]
0x0000a8f8      0fb64512       movzx eax, byte [rbp + 0x12]            ; .//src:1689
0x0000a8fc      31f6           xor esi, esi
0x0000a8fe      83e801         sub eax, 1
0x0000a901      3c0d           cmp al, 0xd
0x0000a903      770d           ja 0xa912
0x0000a905      488d0dd4bc00.  lea rcx, obj.CSWTCH.920                 ; 0x165e0
0x0000a90c      0fb6c0         movzx eax, al
0x0000a90f      8b3481         mov esi, dword [rcx + rax*4]
0x0000a912      31d2           xor edx, edx
0x0000a914      4c89f1         mov rcx, r14
0x0000a917      4889df         mov rdi, rbx
0x0000a91a      e871edffff     call sym.gobble_file.constprop.52
0x0000a91f      48010424       add qword [rsp], rax
0x0000a923      833d0e6a2100.  cmp dword [obj.format], 1               ; [0x221338:4]=0
0x0000a92a      0f8540fdffff   jne 0xa670
0x0000a930      833df9692100.  cmp dword [obj.sort_type], 0xffffffff   ; [0x221330:4]=0
0x0000a937      0f8533fdffff   jne 0xa670
0x0000a93d      803de8692100.  cmp byte [obj.print_block_size], 0      ; .//src:1678 ; [0x22132c:1]=0
0x0000a944      0f8526fdffff   jne 0xa670
0x0000a94a      803da5692100.  cmp byte [obj.recursive], 0             ; [0x2212f6:1]=0
0x0000a951      0f8519fdffff   jne 0xa670
0x0000a957      e8e4b2ffff     call sym.sort_files
0x0000a95c      e83fe6ffff     call sym.print_current_files
0x0000a961      e88aebffff     call sym.clear_files
0x0000a966      e905fdffff     jmp 0xa670
0x0000a96b      0f1f440000     nop dword [rax + rax]
0x0000a970      488d359dcf00.  lea rsi, str.cannot_open_directory__s   ; 0x17914 ; "cannot open directory %s"
0x0000a977      31ff           xor edi, edi
0x0000a979      ba05000000     mov edx, 5
0x0000a97e      e85d8affff     call sym.imp.dcgettext
0x0000a983      0fb67c240c     movzx edi, byte [rsp + 0xc]
0x0000a988      4c89f2         mov rdx, r14
0x0000a98b      4889c6         mov rsi, rax
0x0000a98e      e86db9ffff     call sym.file_failure
0x0000a993      e909fbffff     jmp 0xa4a1
0x0000a998      31f6           xor esi, esi
0x0000a99a      4c89f7         mov rdi, r14
0x0000a99d      e81eb5ffff     call sym.extract_dirs_from_files
0x0000a9a2      e9f1fdffff     jmp 0xa798
0x0000a9a7      660f1f840000.  nop word [rax + rax]
0x0000a9b0      488d358bcf00.  lea rsi, str.closing_directory__s       ; 0x17942 ; "closing directory %s"
0x0000a9b7      31ff           xor edi, edi
0x0000a9b9      ba05000000     mov edx, 5                              ; .//src:1686
0x0000a9be      e81d8affff     call sym.imp.dcgettext
0x0000a9c3      0fb67c240c     movzx edi, byte [rsp + 0xc]
0x0000a9c8      4c89f2         mov rdx, r14
0x0000a9cb      4889c6         mov rsi, rax
0x0000a9ce      e82db9ffff     call sym.file_failure
0x0000a9d3      e9aefdffff     jmp 0xa786
0x0000a9d8      488b0da95821.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000a9df      488d3dd6ce00.  lea rdi, [0x000178bc]                   ; .//src:1644 ; "  "
0x0000a9e6      ba02000000     mov edx, 2
0x0000a9eb      be01000000     mov esi, 1
0x0000a9f0      e8db8cffff     call sym.imp.fwrite_unlocked
0x0000a9f5      488305fb6721.  add qword [obj.dired_pos], 2            ; [0x2211f8:8]=0
0x0000a9fd      e9bafdffff     jmp 0xa7bc
0x0000aa02      be02000000     mov esi, 2
0x0000aa07      4c89f7         mov rdi, r14
0x0000aa0a      e8311b0000     call sym.canonicalize_filename_mode
0x0000aa0f      4885c0         test rax, rax
0x0000aa12      4889c5         mov rbp, rax
0x0000aa15      0f85b9fcffff   jne 0xa6d4
0x0000aa1b      488d35acce00.  lea rsi, str.error_canonicalizing__s    ; 0x178ce ; "error canonicalizing %s"
0x0000aa22      31ff           xor edi, edi
0x0000aa24      ba05000000     mov edx, 5
0x0000aa29      e8b289ffff     call sym.imp.dcgettext
0x0000aa2e      0fb67c240c     movzx edi, byte [rsp + 0xc]
0x0000aa33      4c89f2         mov rdx, r14
0x0000aa36      4889c6         mov rsi, rax
0x0000aa39      e8c2b8ffff     call sym.file_failure
0x0000aa3e      e991fcffff     jmp 0xa6d4
0x0000aa43      488b0d3e5821.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000aa4a      488d3d6bce00.  lea rdi, [0x000178bc]                   ; "  "
0x0000aa51      ba02000000     mov edx, 2
0x0000aa56      be01000000     mov esi, 1
0x0000aa5b      e8708cffff     call sym.imp.fwrite_unlocked
0x0000aa60      488305906721.  add qword [obj.dired_pos], 2            ; [0x2211f8:8]=0
0x0000aa68      e958fcffff     jmp 0xa6c5                              ; stdio.h:-1902
0x0000aa6d      be20000000     mov esi, 0x20                           ; "@"
0x0000aa72      e8198affff     call sym.imp.__overflow
0x0000aa77      e994fdffff     jmp 0xa810
0x0000aa7c      be0a000000     mov esi, 0xa                            ; stdio.h:-1909
0x0000aa81      e80a8affff     call sym.imp.__overflow                 ; .//src:1686
0x0000aa86      e9f1fdffff     jmp 0xa87c
0x0000aa8b      be0a000000     mov esi, 0xa
0x0000aa90      e8fb89ffff     call sym.imp.__overflow
0x0000aa95      e90ffcffff     jmp 0xa6a9
0x0000aa9a      e88189ffff     call sym.imp.__stack_chk_fail
0x0000aa9f      e83c9d0000     call sym.xalloc_die
0x0000aaa4      6690           nop
0x0000aaa6      662e0f1f8400.  nop word cs:[rax + rax]                 ; stdio.h:-1910
;-- xstrcoll_ctime:
0x0000aab0      488b86800000.  mov rax, qword [rsi + 0x80]
0x0000aab7      483987800000.  cmp qword [rdi + 0x80], rax
0x0000aabe      7f30           jg 0xaaf0
0x0000aac0      7c1e           jl 0xaae0
0x0000aac2      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000aac9      2b8788000000   sub eax, dword [rdi + 0x88]
0x0000aacf      7514           jne 0xaae5
0x0000aad1      488b36         mov rsi, qword [rsi]
0x0000aad4      488b3f         mov rdi, qword [rdi]
0x0000aad7      e904b3ffff     jmp sym.xstrcoll
0x0000aadc      0f1f4000       nop dword [rax]                         ; .//src:1684
0x0000aae0      b801000000     mov eax, 1
0x0000aae5      f3c3           ret
0x0000aae7      660f1f840000.  nop word [rax + rax]
0x0000aaf0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000aaf5      c3             ret                                     ; .//src:1635
0x0000aaf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll_atime:
0x0000ab00      488b4660       mov rax, qword [rsi + 0x60]
0x0000ab04      48394760       cmp qword [rdi + 0x60], rax
0x0000ab08      7f26           jg 0xab30
0x0000ab0a      7c14           jl 0xab20
0x0000ab0c      488b4668       mov rax, qword [rsi + 0x68]             ; stdio.h:-1909
0x0000ab10      2b4768         sub eax, dword [rdi + 0x68]
0x0000ab13      7510           jne 0xab25
0x0000ab15      488b36         mov rsi, qword [rsi]
0x0000ab18      488b3f         mov rdi, qword [rdi]
0x0000ab1b      e9c0b2ffff     jmp sym.xstrcoll
0x0000ab20      b801000000     mov eax, 1
0x0000ab25      f3c3           ret
0x0000ab27      660f1f840000.  nop word [rax + rax]
0x0000ab30      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ab35      c3             ret
0x0000ab36      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll_mtime:
0x0000ab40      488b4670       mov rax, qword [rsi + 0x70]
0x0000ab44      48394770       cmp qword [rdi + 0x70], rax
0x0000ab48      7f26           jg 0xab70
0x0000ab4a      7c14           jl 0xab60
0x0000ab4c      488b4678       mov rax, qword [rsi + 0x78]
0x0000ab50      2b4778         sub eax, dword [rdi + 0x78]
0x0000ab53      7510           jne 0xab65
0x0000ab55      488b36         mov rsi, qword [rsi]
0x0000ab58      488b3f         mov rdi, qword [rdi]
0x0000ab5b      e980b2ffff     jmp sym.xstrcoll
0x0000ab60      b801000000     mov eax, 1                              ; .//src:1686
0x0000ab65      f3c3           ret
0x0000ab67      660f1f840000.  nop word [rax + rax]
0x0000ab70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ab75      c3             ret
0x0000ab76      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_xstrcoll_mtime:
0x0000ab80      488b4770       mov rax, qword [rdi + 0x70]
0x0000ab84      48394670       cmp qword [rsi + 0x70], rax
0x0000ab88      4889f2         mov rdx, rsi
0x0000ab8b      7f23           jg 0xabb0
0x0000ab8d      7c19           jl 0xaba8
0x0000ab8f      488b4778       mov rax, qword [rdi + 0x78]
0x0000ab93      2b4678         sub eax, dword [rsi + 0x78]
0x0000ab96      7515           jne 0xabad
0x0000ab98      488b37         mov rsi, qword [rdi]
0x0000ab9b      488b3a         mov rdi, qword [rdx]
0x0000ab9e      e93db2ffff     jmp sym.xstrcoll
0x0000aba3      0f1f440000     nop dword [rax + rax]
0x0000aba8      b801000000     mov eax, 1
0x0000abad      f3c3           ret
0x0000abaf      90             nop
0x0000abb0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000abb5      c3             ret
0x0000abb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_xstrcoll_atime:
0x0000abc0      488b4760       mov rax, qword [rdi + 0x60]             ; stdio.h:-1902
0x0000abc4      48394660       cmp qword [rsi + 0x60], rax             ; .//src:1653
0x0000abc8      4889f2         mov rdx, rsi
0x0000abcb      7f23           jg 0xabf0
0x0000abcd      7c19           jl 0xabe8
0x0000abcf      488b4768       mov rax, qword [rdi + 0x68]
0x0000abd3      2b4668         sub eax, dword [rsi + 0x68]
0x0000abd6      7515           jne 0xabed
0x0000abd8      488b37         mov rsi, qword [rdi]
0x0000abdb      488b3a         mov rdi, qword [rdx]
0x0000abde      e9fdb1ffff     jmp sym.xstrcoll
0x0000abe3      0f1f440000     nop dword [rax + rax]
0x0000abe8      b801000000     mov eax, 1
0x0000abed      f3c3           ret
0x0000abef      90             nop
0x0000abf0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000abf5      c3             ret
0x0000abf6      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:1442
;-- rev_xstrcoll_ctime:
0x0000ac00      488b87800000.  mov rax, qword [rdi + 0x80]
0x0000ac07      483986800000.  cmp qword [rsi + 0x80], rax
0x0000ac0e      4889f2         mov rdx, rsi
0x0000ac11      7f2d           jg 0xac40
0x0000ac13      7c1b           jl 0xac30
0x0000ac15      488b87880000.  mov rax, qword [rdi + 0x88]
0x0000ac1c      2b8688000000   sub eax, dword [rsi + 0x88]
0x0000ac22      7511           jne 0xac35
0x0000ac24      488b37         mov rsi, qword [rdi]
0x0000ac27      488b3a         mov rdi, qword [rdx]
0x0000ac2a      e9b1b1ffff     jmp sym.xstrcoll
0x0000ac2f      90             nop
0x0000ac30      b801000000     mov eax, 1
0x0000ac35      f3c3           ret
0x0000ac37      660f1f840000.  nop word [rax + rax]
0x0000ac40      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ac45      c3             ret
0x0000ac46      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrcoll_extension:
0x0000ac50      4154           push r12
0x0000ac52      55             push rbp
0x0000ac53      4889fd         mov rbp, rdi
0x0000ac56      53             push rbx                                ; .//src:1685
0x0000ac57      488b3f         mov rdi, qword [rdi]
0x0000ac5a      4989f4         mov r12, rsi
0x0000ac5d      be2e000000     mov esi, 0x2e                           ; '.'
0x0000ac62      e83988ffff     call sym.imp.strrchr
0x0000ac67      498b3c24       mov rdi, qword [r12]
0x0000ac6b      be2e000000     mov esi, 0x2e                           ; '.'
0x0000ac70      4889c3         mov rbx, rax                            ; stdio.h:-1902
0x0000ac73      e82888ffff     call sym.imp.strrchr
0x0000ac78      488d1534cc00.  lea rdx, [0x000178b3]
0x0000ac7f      4885c0         test rax, rax
0x0000ac82      480f44c2       cmove rax, rdx
0x0000ac86      4885db         test rbx, rbx
0x0000ac89      480f44da       cmove rbx, rdx
0x0000ac8d      4889c6         mov rsi, rax
0x0000ac90      4889df         mov rdi, rbx
0x0000ac93      e848b1ffff     call sym.xstrcoll
0x0000ac98      85c0           test eax, eax
0x0000ac9a      7514           jne 0xacb0
0x0000ac9c      5b             pop rbx
0x0000ac9d      498b3424       mov rsi, qword [r12]
0x0000aca1      488b7d00       mov rdi, qword [rbp]
0x0000aca5      5d             pop rbp
0x0000aca6      415c           pop r12
0x0000aca8      e933b1ffff     jmp sym.xstrcoll
0x0000acad      0f1f00         nop dword [rax]
0x0000acb0      5b             pop rbx
0x0000acb1      5d             pop rbp
0x0000acb2      415c           pop r12
0x0000acb4      c3             ret
0x0000acb5      90             nop
0x0000acb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_xstrcoll_extension:
0x0000acc0      4154           push r12
0x0000acc2      55             push rbp
0x0000acc3      4889f5         mov rbp, rsi                            ; .//src:1684
0x0000acc6      53             push rbx
0x0000acc7      4989fc         mov r12, rdi
0x0000acca      488b7d00       mov rdi, qword [rbp]
0x0000acce      be2e000000     mov esi, 0x2e                           ; '.'
0x0000acd3      e8c887ffff     call sym.imp.strrchr
0x0000acd8      498b3c24       mov rdi, qword [r12]
0x0000acdc      be2e000000     mov esi, 0x2e                           ; '.'
0x0000ace1      4889c3         mov rbx, rax
0x0000ace4      e8b787ffff     call sym.imp.strrchr
0x0000ace9      488d15c3cb00.  lea rdx, [0x000178b3]
0x0000acf0      4885c0         test rax, rax
0x0000acf3      480f44c2       cmove rax, rdx
0x0000acf7      4885db         test rbx, rbx
0x0000acfa      480f44da       cmove rbx, rdx
0x0000acfe      4889c6         mov rsi, rax
0x0000ad01      4889df         mov rdi, rbx
0x0000ad04      e8d7b0ffff     call sym.xstrcoll
0x0000ad09      85c0           test eax, eax
0x0000ad0b      7513           jne 0xad20
0x0000ad0d      5b             pop rbx
0x0000ad0e      498b3424       mov rsi, qword [r12]
0x0000ad12      488b7d00       mov rdi, qword [rbp]
0x0000ad16      5d             pop rbp
0x0000ad17      415c           pop r12
0x0000ad19      e9c2b0ffff     jmp sym.xstrcoll
0x0000ad1e      6690           nop
0x0000ad20      5b             pop rbx
0x0000ad21      5d             pop rbp
0x0000ad22      415c           pop r12
0x0000ad24      c3             ret                                     ; stdio.h:-1910
0x0000ad25      90             nop
0x0000ad26      662e0f1f8400.  nop word cs:[rax + rax]                 ; stdio.h:-1902
;-- rev_strcmp_atime:
0x0000ad30      488b4760       mov rax, qword [rdi + 0x60]
0x0000ad34      48394660       cmp qword [rsi + 0x60], rax
0x0000ad38      4889f2         mov rdx, rsi
0x0000ad3b      7f23           jg 0xad60
0x0000ad3d      7c19           jl 0xad58
0x0000ad3f      488b4768       mov rax, qword [rdi + 0x68]
0x0000ad43      2b4668         sub eax, dword [rsi + 0x68]
0x0000ad46      7515           jne 0xad5d
0x0000ad48      488b37         mov rsi, qword [rdi]
0x0000ad4b      488b3a         mov rdi, qword [rdx]
0x0000ad4e      e93d88ffff     jmp sym.imp.strcmp
0x0000ad53      0f1f440000     nop dword [rax + rax]
0x0000ad58      b801000000     mov eax, 1
0x0000ad5d      f3c3           ret
0x0000ad5f      90             nop
0x0000ad60      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ad65      c3             ret
0x0000ad66      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_strcmp_mtime:
0x0000ad70      488b4770       mov rax, qword [rdi + 0x70]
0x0000ad74      48394670       cmp qword [rsi + 0x70], rax
0x0000ad78      4889f2         mov rdx, rsi
0x0000ad7b      7f23           jg 0xada0
0x0000ad7d      7c19           jl 0xad98
0x0000ad7f      488b4778       mov rax, qword [rdi + 0x78]
0x0000ad83      2b4678         sub eax, dword [rsi + 0x78]             ; .//src:1685
0x0000ad86      7515           jne 0xad9d
0x0000ad88      488b37         mov rsi, qword [rdi]
0x0000ad8b      488b3a         mov rdi, qword [rdx]                    ; stdio.h:-1909
0x0000ad8e      e9fd87ffff     jmp sym.imp.strcmp
0x0000ad93      0f1f440000     nop dword [rax + rax]
0x0000ad98      b801000000     mov eax, 1
0x0000ad9d      f3c3           ret
0x0000ad9f      90             nop
0x0000ada0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ada5      c3             ret
0x0000ada6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_strcmp_ctime:
0x0000adb0      488b87800000.  mov rax, qword [rdi + 0x80]
0x0000adb7      483986800000.  cmp qword [rsi + 0x80], rax
0x0000adbe      4889f2         mov rdx, rsi
0x0000adc1      7f2d           jg 0xadf0
0x0000adc3      7c1b           jl 0xade0
0x0000adc5      488b87880000.  mov rax, qword [rdi + 0x88]
0x0000adcc      2b8688000000   sub eax, dword [rsi + 0x88]
0x0000add2      7511           jne 0xade5
0x0000add4      488b37         mov rsi, qword [rdi]                    ; stdio.h:-1912
0x0000add7      488b3a         mov rdi, qword [rdx]
0x0000adda      e9b187ffff     jmp sym.imp.strcmp
0x0000addf      90             nop
0x0000ade0      b801000000     mov eax, 1                              ; stdio.h:-1902
0x0000ade5      f3c3           ret
0x0000ade7      660f1f840000.  nop word [rax + rax]
0x0000adf0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000adf5      c3             ret
0x0000adf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_atime:
0x0000ae00      488b4660       mov rax, qword [rsi + 0x60]
0x0000ae04      48394760       cmp qword [rdi + 0x60], rax
0x0000ae08      7f26           jg 0xae30
0x0000ae0a      7c14           jl 0xae20
0x0000ae0c      488b4668       mov rax, qword [rsi + 0x68]
0x0000ae10      2b4768         sub eax, dword [rdi + 0x68]
0x0000ae13      7510           jne 0xae25
0x0000ae15      488b36         mov rsi, qword [rsi]
0x0000ae18      488b3f         mov rdi, qword [rdi]
0x0000ae1b      e97087ffff     jmp sym.imp.strcmp
0x0000ae20      b801000000     mov eax, 1
0x0000ae25      f3c3           ret
0x0000ae27      660f1f840000.  nop word [rax + rax]
0x0000ae30      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ae35      c3             ret
0x0000ae36      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_mtime:
0x0000ae40      488b4670       mov rax, qword [rsi + 0x70]
0x0000ae44      48394770       cmp qword [rdi + 0x70], rax             ; .//src:1442
0x0000ae48      7f26           jg 0xae70
0x0000ae4a      7c14           jl 0xae60
0x0000ae4c      488b4678       mov rax, qword [rsi + 0x78]
0x0000ae50      2b4778         sub eax, dword [rdi + 0x78]
0x0000ae53      7510           jne 0xae65
0x0000ae55      488b36         mov rsi, qword [rsi]
0x0000ae58      488b3f         mov rdi, qword [rdi]
0x0000ae5b      e93087ffff     jmp sym.imp.strcmp
0x0000ae60      b801000000     mov eax, 1
0x0000ae65      f3c3           ret
0x0000ae67      660f1f840000.  nop word [rax + rax]
0x0000ae70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ae75      c3             ret
0x0000ae76      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:1686
;-- strcmp_ctime:
0x0000ae80      488b86800000.  mov rax, qword [rsi + 0x80]
0x0000ae87      483987800000.  cmp qword [rdi + 0x80], rax
0x0000ae8e      7f30           jg 0xaec0                               ; stdio.h:-1910
0x0000ae90      7c1e           jl 0xaeb0                               ; stdio.h:-1902
0x0000ae92      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000ae99      2b8788000000   sub eax, dword [rdi + 0x88]
0x0000ae9f      7514           jne 0xaeb5
0x0000aea1      488b36         mov rsi, qword [rsi]
0x0000aea4      488b3f         mov rdi, qword [rdi]
0x0000aea7      e9e486ffff     jmp sym.imp.strcmp
0x0000aeac      0f1f4000       nop dword [rax]                         ; .//src:1684
0x0000aeb0      b801000000     mov eax, 1
0x0000aeb5      f3c3           ret
0x0000aeb7      660f1f840000.  nop word [rax + rax]
0x0000aec0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000aec5      c3             ret
0x0000aec6      662e0f1f8400.  nop word cs:[rax + rax]                 ; .//src:1442
;-- xstrcoll_df_atime:
0x0000aed0      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000aed6      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000aedc      83fa03         cmp edx, 3
0x0000aedf      0f94c0         sete al
0x0000aee2      83fa09         cmp edx, 9
0x0000aee5      0f94c2         sete dl
0x0000aee8      09d0           or eax, edx                             ; stdio.h:-1909
0x0000aeea      83f903         cmp ecx, 3
0x0000aeed      7429           je 0xaf18
0x0000aeef      83f909         cmp ecx, 9
0x0000aef2      7424           je 0xaf18
0x0000aef4      8b97ac000000   mov edx, dword [rdi + 0xac]             ; .//src:1442
0x0000aefa      81e200f00000   and edx, 0xf000
0x0000af00      84c0           test al, al
0x0000af02      7434           je 0xaf38
0x0000af04      81fa00400000   cmp edx, 0x4000
0x0000af0a      744c           je 0xaf58                               ; stdio.h:-1911
0x0000af0c      b801000000     mov eax, 1
0x0000af11      c3             ret
0x0000af12      660f1f440000   nop word [rax + rax]
0x0000af18      84c0           test al, al
0x0000af1a      753c           jne 0xaf58
0x0000af1c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000af22      2500f00000     and eax, 0xf000
0x0000af27      3d00400000     cmp eax, 0x4000
0x0000af2c      742a           je 0xaf58
0x0000af2e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000af33      f3c3           ret
0x0000af35      0f1f00         nop dword [rax]
0x0000af38      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000af3e      2500f00000     and eax, 0xf000
0x0000af43      3d00400000     cmp eax, 0x4000
0x0000af48      74ba           je 0xaf04
0x0000af4a      81fa00400000   cmp edx, 0x4000
0x0000af50      74dc           je 0xaf2e
0x0000af52      660f1f440000   nop word [rax + rax]
0x0000af58      488b4660       mov rax, qword [rsi + 0x60]
0x0000af5c      48394760       cmp qword [rdi + 0x60], rax
0x0000af60      7fcc           jg 0xaf2e
0x0000af62      7ca8           jl 0xaf0c
0x0000af64      488b4668       mov rax, qword [rsi + 0x68]
0x0000af68      2b4768         sub eax, dword [rdi + 0x68]
0x0000af6b      75c6           jne 0xaf33
0x0000af6d      488b36         mov rsi, qword [rsi]
0x0000af70      488b3f         mov rdi, qword [rdi]
0x0000af73      e968aeffff     jmp sym.xstrcoll                        ; .//src:1678
0x0000af78      0f1f84000000.  nop dword [rax + rax]
;-- xstrcoll_df_mtime:
0x0000af80      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000af86      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000af8c      83fa03         cmp edx, 3
0x0000af8f      0f94c0         sete al                                 ; .//src:1679
0x0000af92      83fa09         cmp edx, 9
0x0000af95      0f94c2         sete dl
0x0000af98      09d0           or eax, edx
0x0000af9a      83f903         cmp ecx, 3
0x0000af9d      7429           je 0xafc8
0x0000af9f      83f909         cmp ecx, 9
0x0000afa2      7424           je 0xafc8
0x0000afa4      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000afaa      81e200f00000   and edx, 0xf000
0x0000afb0      84c0           test al, al
0x0000afb2      7434           je 0xafe8
0x0000afb4      81fa00400000   cmp edx, 0x4000
0x0000afba      744c           je 0xb008                               ; .//src:1681
0x0000afbc      b801000000     mov eax, 1
0x0000afc1      c3             ret
0x0000afc2      660f1f440000   nop word [rax + rax]
0x0000afc8      84c0           test al, al
0x0000afca      753c           jne 0xb008
0x0000afcc      8b86ac000000   mov eax, dword [rsi + 0xac]             ; .//src:1680
0x0000afd2      2500f00000     and eax, 0xf000
0x0000afd7      3d00400000     cmp eax, 0x4000
0x0000afdc      742a           je 0xb008
0x0000afde      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000afe3      f3c3           ret                                     ; .//src:1681
0x0000afe5      0f1f00         nop dword [rax]
0x0000afe8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000afee      2500f00000     and eax, 0xf000
0x0000aff3      3d00400000     cmp eax, 0x4000                         ; .//src:1678
0x0000aff8      74ba           je 0xafb4
0x0000affa      81fa00400000   cmp edx, 0x4000
0x0000b000      74dc           je 0xafde
0x0000b002      660f1f440000   nop word [rax + rax]
0x0000b008      488b4670       mov rax, qword [rsi + 0x70]
0x0000b00c      48394770       cmp qword [rdi + 0x70], rax
0x0000b010      7fcc           jg 0xafde
0x0000b012      7ca8           jl 0xafbc
0x0000b014      488b4678       mov rax, qword [rsi + 0x78]
0x0000b018      2b4778         sub eax, dword [rdi + 0x78]
0x0000b01b      75c6           jne 0xafe3
0x0000b01d      488b36         mov rsi, qword [rsi]
0x0000b020      488b3f         mov rdi, qword [rdi]
0x0000b023      e9b8adffff     jmp sym.xstrcoll
0x0000b028      0f1f84000000.  nop dword [rax + rax]
;-- rev_xstrcoll_df_ctime:
0x0000b030      4889f2         mov rdx, rsi
0x0000b033      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x0000b039      8b8aa8000000   mov ecx, dword [rdx + 0xa8]             ; .//src:1689
0x0000b03f      83f903         cmp ecx, 3
0x0000b042      0f94c0         sete al
0x0000b045      83f909         cmp ecx, 9
0x0000b048      0f94c1         sete cl
0x0000b04b      09c8           or eax, ecx
0x0000b04d      83fe03         cmp esi, 3
0x0000b050      7426           je 0xb078
0x0000b052      83fe09         cmp esi, 9
0x0000b055      7421           je 0xb078
0x0000b057      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x0000b05d      81e100f00000   and ecx, 0xf000
0x0000b063      84c0           test al, al                             ; .//src:1681
0x0000b065      7431           je 0xb098
0x0000b067      81f900400000   cmp ecx, 0x4000                         ; .//src:1689
0x0000b06d      7449           je 0xb0b8
0x0000b06f      b801000000     mov eax, 1
0x0000b074      c3             ret
0x0000b075      0f1f00         nop dword [rax]
0x0000b078      84c0           test al, al
0x0000b07a      753c           jne 0xb0b8
0x0000b07c      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b082      2500f00000     and eax, 0xf000
0x0000b087      3d00400000     cmp eax, 0x4000
0x0000b08c      742a           je 0xb0b8
0x0000b08e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b093      f3c3           ret
0x0000b095      0f1f00         nop dword [rax]
0x0000b098      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b09e      2500f00000     and eax, 0xf000
0x0000b0a3      3d00400000     cmp eax, 0x4000
0x0000b0a8      74bd           je 0xb067
0x0000b0aa      81f900400000   cmp ecx, 0x4000
0x0000b0b0      74dc           je 0xb08e
0x0000b0b2      660f1f440000   nop word [rax + rax]
0x0000b0b8      488b87800000.  mov rax, qword [rdi + 0x80]
0x0000b0bf      483982800000.  cmp qword [rdx + 0x80], rax
0x0000b0c6      7fc6           jg 0xb08e
0x0000b0c8      7ca5           jl 0xb06f
0x0000b0ca      488b87880000.  mov rax, qword [rdi + 0x88]
0x0000b0d1      2b8288000000   sub eax, dword [rdx + 0x88]
0x0000b0d7      75ba           jne 0xb093
0x0000b0d9      488b37         mov rsi, qword [rdi]
0x0000b0dc      488b3a         mov rdi, qword [rdx]
0x0000b0df      e9fcacffff     jmp sym.xstrcoll
0x0000b0e4      6690           nop
0x0000b0e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rev_xstrcoll_df_mtime:
0x0000b0f0      4889f2         mov rdx, rsi
0x0000b0f3      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x0000b0f9      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000b0ff      83f903         cmp ecx, 3
0x0000b102      0f94c0         sete al
0x0000b105      83f909         cmp ecx, 9
0x0000b108      0f94c1         sete cl
0x0000b10b      09c8           or eax, ecx                             ; .//src:1679
0x0000b10d      83fe03         cmp esi, 3
0x0000b110      7426           je 0xb138
0x0000b112      83fe09         cmp esi, 9
0x0000b115      7421           je 0xb138
0x0000b117      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x0000b11d      81e100f00000   and ecx, 0xf000
0x0000b123      84c0           test al, al
0x0000b125      7431           je 0xb158
0x0000b127      81f900400000   cmp ecx, 0x4000
0x0000b12d      7449           je 0xb178
0x0000b12f      b801000000     mov eax, 1
0x0000b134      c3             ret
0x0000b135      0f1f00         nop dword [rax]
0x0000b138      84c0           test al, al
0x0000b13a      753c           jne 0xb178
0x0000b13c      8b82ac000000   mov eax, dword [rdx + 0xac]             ; .//src:1681
0x0000b142      2500f00000     and eax, 0xf000
0x0000b147      3d00400000     cmp eax, 0x4000                         ; .//src:1689
0x0000b14c      742a           je 0xb178
0x0000b14e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b153      f3c3           ret
0x0000b155      0f1f00         nop dword [rax]
0x0000b158      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b15e      2500f00000     and eax, 0xf000
0x0000b163      3d00400000     cmp eax, 0x4000
0x0000b168      74bd           je 0xb127
0x0000b16a      81f900400000   cmp ecx, 0x4000
0x0000b170      74dc           je 0xb14e
0x0000b172      660f1f440000   nop word [rax + rax]
0x0000b178      488b4770       mov rax, qword [rdi + 0x70]
0x0000b17c      48394270       cmp qword [rdx + 0x70], rax
0x0000b180      7fcc           jg 0xb14e
0x0000b182      7cab           jl 0xb12f
0x0000b184      488b4778       mov rax, qword [rdi + 0x78]
0x0000b188      2b4278         sub eax, dword [rdx + 0x78]
0x0000b18b      75c6           jne 0xb153
0x0000b18d      488b37         mov rsi, qword [rdi]
0x0000b190      488b3a         mov rdi, qword [rdx]
0x0000b193      e948acffff     jmp sym.xstrcoll
0x0000b198      0f1f84000000.  nop dword [rax + rax]
;-- rev_xstrcoll_df_atime:
0x0000b1a0      4889f2         mov rdx, rsi
0x0000b1a3      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x0000b1a9      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000b1af      83f903         cmp ecx, 3
0x0000b1b2      0f94c0         sete al
0x0000b1b5      83f909         cmp ecx, 9
0x0000b1b8      0f94c1         sete cl
0x0000b1bb      09c8           or eax, ecx
0x0000b1bd      83fe03         cmp esi, 3
0x0000b1c0      7426           je 0xb1e8
0x0000b1c2      83fe09         cmp esi, 9
0x0000b1c5      7421           je 0xb1e8
0x0000b1c7      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x0000b1cd      81e100f00000   and ecx, 0xf000
0x0000b1d3      84c0           test al, al
0x0000b1d5      7431           je 0xb208
0x0000b1d7      81f900400000   cmp ecx, 0x4000
0x0000b1dd      7449           je 0xb228
0x0000b1df      b801000000     mov eax, 1
0x0000b1e4      c3             ret
0x0000b1e5      0f1f00         nop dword [rax]
0x0000b1e8      84c0           test al, al
0x0000b1ea      753c           jne 0xb228
0x0000b1ec      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b1f2      2500f00000     and eax, 0xf000
0x0000b1f7      3d00400000     cmp eax, 0x4000
0x0000b1fc      742a           je 0xb228
0x0000b1fe      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b203      f3c3           ret                                     ; .//src:1678
0x0000b205      0f1f00         nop dword [rax]
0x0000b208      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b20e      2500f00000     and eax, 0xf000
0x0000b213      3d00400000     cmp eax, 0x4000
0x0000b218      74bd           je 0xb1d7
0x0000b21a      81f900400000   cmp ecx, 0x4000
0x0000b220      74dc           je 0xb1fe
0x0000b222      660f1f440000   nop word [rax + rax]
0x0000b228      488b4760       mov rax, qword [rdi + 0x60]
0x0000b22c      48394260       cmp qword [rdx + 0x60], rax
0x0000b230      7fcc           jg 0xb1fe
0x0000b232      7cab           jl 0xb1df
0x0000b234      488b4768       mov rax, qword [rdi + 0x68]
0x0000b238      2b4268         sub eax, dword [rdx + 0x68]
0x0000b23b      75c6           jne 0xb203
0x0000b23d      488b37         mov rsi, qword [rdi]
0x0000b240      488b3a         mov rdi, qword [rdx]
0x0000b243      e998abffff     jmp sym.xstrcoll
0x0000b248      0f1f84000000.  nop dword [rax + rax]
;-- xstrcoll_df_ctime:
0x0000b250      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b256      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b25c      83fa03         cmp edx, 3
0x0000b25f      0f94c0         sete al
0x0000b262      83fa09         cmp edx, 9
0x0000b265      0f94c2         sete dl
0x0000b268      09d0           or eax, edx
0x0000b26a      83f903         cmp ecx, 3
0x0000b26d      7429           je 0xb298
0x0000b26f      83f909         cmp ecx, 9
0x0000b272      7424           je 0xb298
0x0000b274      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000b27a      81e200f00000   and edx, 0xf000
0x0000b280      84c0           test al, al                             ; .//src:1686
0x0000b282      7434           je 0xb2b8
0x0000b284      81fa00400000   cmp edx, 0x4000
0x0000b28a      744c           je 0xb2d8
0x0000b28c      b801000000     mov eax, 1
0x0000b291      c3             ret
0x0000b292      660f1f440000   nop word [rax + rax]
0x0000b298      84c0           test al, al
0x0000b29a      753c           jne 0xb2d8
0x0000b29c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b2a2      2500f00000     and eax, 0xf000
0x0000b2a7      3d00400000     cmp eax, 0x4000
0x0000b2ac      742a           je 0xb2d8
0x0000b2ae      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b2b3      f3c3           ret
0x0000b2b5      0f1f00         nop dword [rax]
0x0000b2b8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b2be      2500f00000     and eax, 0xf000
0x0000b2c3      3d00400000     cmp eax, 0x4000
0x0000b2c8      74ba           je 0xb284
0x0000b2ca      81fa00400000   cmp edx, 0x4000
0x0000b2d0      74dc           je 0xb2ae
0x0000b2d2      660f1f440000   nop word [rax + rax]
0x0000b2d8      488b86800000.  mov rax, qword [rsi + 0x80]
0x0000b2df      483987800000.  cmp qword [rdi + 0x80], rax
0x0000b2e6      7fc6           jg 0xb2ae
0x0000b2e8      7ca2           jl 0xb28c
0x0000b2ea      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000b2f1      2b8788000000   sub eax, dword [rdi + 0x88]
0x0000b2f7      75ba           jne 0xb2b3
0x0000b2f9      488b36         mov rsi, qword [rsi]
0x0000b2fc      488b3f         mov rdi, qword [rdi]                    ; .//src:1685
0x0000b2ff      e9dcaaffff     jmp sym.xstrcoll
0x0000b304      6690           nop
0x0000b306      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_extension:
0x0000b310      4154           push r12
0x0000b312      55             push rbp
0x0000b313      4989f4         mov r12, rsi
0x0000b316      53             push rbx
0x0000b317      488b2f         mov rbp, qword [rdi]
0x0000b31a      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b31f      4889ef         mov rdi, rbp
0x0000b322      e87981ffff     call sym.imp.strrchr
0x0000b327      4d8b2424       mov r12, qword [r12]
0x0000b32b      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b330      4889c3         mov rbx, rax
0x0000b333      4c89e7         mov rdi, r12
0x0000b336      e86581ffff     call sym.imp.strrchr
0x0000b33b      4885c0         test rax, rax                           ; stdio.h:-1909
0x0000b33e      7430           je 0xb370
0x0000b340      488d156cc500.  lea rdx, [0x000178b3]
0x0000b347      4885db         test rbx, rbx
0x0000b34a      4889c6         mov rsi, rax
0x0000b34d      480f44da       cmove rbx, rdx
0x0000b351      4889df         mov rdi, rbx
0x0000b354      e83782ffff     call sym.imp.strcmp
0x0000b359      85c0           test eax, eax
0x0000b35b      752e           jne 0xb38b
0x0000b35d      5b             pop rbx
0x0000b35e      4c89e6         mov rsi, r12
0x0000b361      4889ef         mov rdi, rbp
0x0000b364      5d             pop rbp                                 ; .//src:1442
0x0000b365      415c           pop r12
0x0000b367      e92482ffff     jmp sym.imp.strcmp
0x0000b36c      0f1f4000       nop dword [rax]
0x0000b370      4885db         test rbx, rbx
0x0000b373      488d0539c500.  lea rax, [0x000178b3]
0x0000b37a      74e1           je 0xb35d
0x0000b37c      4889c6         mov rsi, rax
0x0000b37f      4889df         mov rdi, rbx
0x0000b382      e80982ffff     call sym.imp.strcmp
0x0000b387      85c0           test eax, eax
0x0000b389      74d2           je 0xb35d
0x0000b38b      5b             pop rbx
0x0000b38c      5d             pop rbp
0x0000b38d      415c           pop r12
0x0000b38f      c3             ret
;-- rev_strcmp_extension:
0x0000b390      4154           push r12                                ; stdio.h:-1902
0x0000b392      55             push rbp
0x0000b393      4989fc         mov r12, rdi
0x0000b396      53             push rbx
0x0000b397      488b2e         mov rbp, qword [rsi]
0x0000b39a      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b39f      4889ef         mov rdi, rbp
0x0000b3a2      e8f980ffff     call sym.imp.strrchr
0x0000b3a7      4d8b2424       mov r12, qword [r12]
0x0000b3ab      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b3b0      4889c3         mov rbx, rax
0x0000b3b3      4c89e7         mov rdi, r12
0x0000b3b6      e8e580ffff     call sym.imp.strrchr
0x0000b3bb      4885c0         test rax, rax
0x0000b3be      7430           je 0xb3f0
0x0000b3c0      488d15ecc400.  lea rdx, [0x000178b3]
0x0000b3c7      4885db         test rbx, rbx
0x0000b3ca      4889c6         mov rsi, rax
0x0000b3cd      480f44da       cmove rbx, rdx
0x0000b3d1      4889df         mov rdi, rbx
0x0000b3d4      e8b781ffff     call sym.imp.strcmp
0x0000b3d9      85c0           test eax, eax
0x0000b3db      752e           jne 0xb40b
0x0000b3dd      5b             pop rbx
0x0000b3de      4c89e6         mov rsi, r12
0x0000b3e1      4889ef         mov rdi, rbp
0x0000b3e4      5d             pop rbp
0x0000b3e5      415c           pop r12
0x0000b3e7      e9a481ffff     jmp sym.imp.strcmp
0x0000b3ec      0f1f4000       nop dword [rax]
0x0000b3f0      4885db         test rbx, rbx
0x0000b3f3      488d05b9c400.  lea rax, [0x000178b3]
0x0000b3fa      74e1           je 0xb3dd
0x0000b3fc      4889c6         mov rsi, rax
0x0000b3ff      4889df         mov rdi, rbx
0x0000b402      e88981ffff     call sym.imp.strcmp
0x0000b407      85c0           test eax, eax
0x0000b409      74d2           je 0xb3dd
0x0000b40b      5b             pop rbx
0x0000b40c      5d             pop rbp
0x0000b40d      415c           pop r12
0x0000b40f      c3             ret                                     ; .//src:1684
;-- rev_xstrcoll_df_extension:
0x0000b410      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b416      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b41c      83fa03         cmp edx, 3
0x0000b41f      0f94c0         sete al
0x0000b422      83fa09         cmp edx, 9
0x0000b425      0f94c2         sete dl
0x0000b428      09d0           or eax, edx
0x0000b42a      83f903         cmp ecx, 3
0x0000b42d      7429           je 0xb458
0x0000b42f      83f909         cmp ecx, 9
0x0000b432      7424           je 0xb458
0x0000b434      8b97ac000000   mov edx, dword [rdi + 0xac]             ; stdio.h:-1912
0x0000b43a      81e200f00000   and edx, 0xf000
0x0000b440      84c0           test al, al
0x0000b442      7434           je 0xb478
0x0000b444      81fa00400000   cmp edx, 0x4000                         ; stdio.h:-1910
0x0000b44a      744c           je 0xb498
0x0000b44c      b801000000     mov eax, 1
0x0000b451      c3             ret
0x0000b452      660f1f440000   nop word [rax + rax]
0x0000b458      84c0           test al, al
0x0000b45a      753c           jne 0xb498
0x0000b45c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b462      2500f00000     and eax, 0xf000
0x0000b467      3d00400000     cmp eax, 0x4000
0x0000b46c      742a           je 0xb498                               ; .//src:1689
0x0000b46e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b473      c3             ret
0x0000b474      0f1f4000       nop dword [rax]
0x0000b478      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b47e      2500f00000     and eax, 0xf000
0x0000b483      3d00400000     cmp eax, 0x4000
0x0000b488      74ba           je 0xb444
0x0000b48a      81fa00400000   cmp edx, 0x4000
0x0000b490      74dc           je 0xb46e
0x0000b492      660f1f440000   nop word [rax + rax]
0x0000b498      4154           push r12
0x0000b49a      55             push rbp
0x0000b49b      4889fd         mov rbp, rdi
0x0000b49e      53             push rbx
0x0000b49f      4889f3         mov rbx, rsi
0x0000b4a2      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b4a7      488b3b         mov rdi, qword [rbx]
0x0000b4aa      e8f17fffff     call sym.imp.strrchr
0x0000b4af      488b7d00       mov rdi, qword [rbp]
0x0000b4b3      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b4b8      4989c4         mov r12, rax
0x0000b4bb      e8e07fffff     call sym.imp.strrchr
0x0000b4c0      488d15ecc300.  lea rdx, [0x000178b3]
0x0000b4c7      4885c0         test rax, rax
0x0000b4ca      480f44c2       cmove rax, rdx
0x0000b4ce      4d85e4         test r12, r12
0x0000b4d1      4c0f44e2       cmove r12, rdx
0x0000b4d5      4889c6         mov rsi, rax
0x0000b4d8      4c89e7         mov rdi, r12
0x0000b4db      e800a9ffff     call sym.xstrcoll
0x0000b4e0      85c0           test eax, eax
0x0000b4e2      7514           jne 0xb4f8
0x0000b4e4      488b7500       mov rsi, qword [rbp]
0x0000b4e8      488b3b         mov rdi, qword [rbx]
0x0000b4eb      5b             pop rbx
0x0000b4ec      5d             pop rbp
0x0000b4ed      415c           pop r12
0x0000b4ef      e9eca8ffff     jmp sym.xstrcoll
0x0000b4f4      0f1f4000       nop dword [rax]
0x0000b4f8      5b             pop rbx                                 ; .//src:1678
0x0000b4f9      5d             pop rbp
0x0000b4fa      415c           pop r12
0x0000b4fc      c3             ret
0x0000b4fd      0f1f00         nop dword [rax]
;-- xstrcoll_df_extension:
0x0000b500      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b506      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b50c      83fa03         cmp edx, 3
0x0000b50f      0f94c0         sete al
0x0000b512      83fa09         cmp edx, 9
0x0000b515      0f94c2         sete dl
0x0000b518      09d0           or eax, edx
0x0000b51a      83f903         cmp ecx, 3
0x0000b51d      7429           je 0xb548
0x0000b51f      83f909         cmp ecx, 9
0x0000b522      7424           je 0xb548
0x0000b524      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000b52a      81e200f00000   and edx, 0xf000
0x0000b530      84c0           test al, al
0x0000b532      7434           je 0xb568
0x0000b534      81fa00400000   cmp edx, 0x4000
0x0000b53a      744c           je 0xb588
0x0000b53c      b801000000     mov eax, 1                              ; .//src:1681
0x0000b541      c3             ret
0x0000b542      660f1f440000   nop word [rax + rax]
0x0000b548      84c0           test al, al
0x0000b54a      753c           jne 0xb588
0x0000b54c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b552      2500f00000     and eax, 0xf000
0x0000b557      3d00400000     cmp eax, 0x4000
0x0000b55c      742a           je 0xb588                               ; .//src:1680
0x0000b55e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b563      c3             ret
0x0000b564      0f1f4000       nop dword [rax]
0x0000b568      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b56e      2500f00000     and eax, 0xf000
0x0000b573      3d00400000     cmp eax, 0x4000
0x0000b578      74ba           je 0xb534
0x0000b57a      81fa00400000   cmp edx, 0x4000
0x0000b580      74dc           je 0xb55e
0x0000b582      660f1f440000   nop word [rax + rax]
0x0000b588      4154           push r12                                ; .//src:3125
0x0000b58a      55             push rbp
0x0000b58b      4889fd         mov rbp, rdi
0x0000b58e      53             push rbx
0x0000b58f      488b3f         mov rdi, qword [rdi]
0x0000b592      4889f3         mov rbx, rsi
0x0000b595      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b59a      e8017fffff     call sym.imp.strrchr
0x0000b59f      488b3b         mov rdi, qword [rbx]
0x0000b5a2      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b5a7      4989c4         mov r12, rax
0x0000b5aa      e8f17effff     call sym.imp.strrchr                    ; ../coreutils-8.31/src/.c:-1906
0x0000b5af      488d15fdc200.  lea rdx, [0x000178b3]
0x0000b5b6      4885c0         test rax, rax
0x0000b5b9      480f44c2       cmove rax, rdx
0x0000b5bd      4d85e4         test r12, r12
0x0000b5c0      4c0f44e2       cmove r12, rdx
0x0000b5c4      4889c6         mov rsi, rax
0x0000b5c7      4c89e7         mov rdi, r12
0x0000b5ca      e811a8ffff     call sym.xstrcoll
0x0000b5cf      85c0           test eax, eax
0x0000b5d1      7515           jne 0xb5e8
0x0000b5d3      488b33         mov rsi, qword [rbx]
0x0000b5d6      488b7d00       mov rdi, qword [rbp]
0x0000b5da      5b             pop rbx
0x0000b5db      5d             pop rbp                                 ; .//src:3130
0x0000b5dc      415c           pop r12
0x0000b5de      e9fda7ffff     jmp sym.xstrcoll
0x0000b5e3      0f1f440000     nop dword [rax + rax]
0x0000b5e8      5b             pop rbx
0x0000b5e9      5d             pop rbp
0x0000b5ea      415c           pop r12
0x0000b5ec      c3             ret
0x0000b5ed      0f1f00         nop dword [rax]
;-- strcmp_df_atime:
0x0000b5f0      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b5f6      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b5fc      83fa03         cmp edx, 3
0x0000b5ff      0f94c0         sete al
0x0000b602      83fa09         cmp edx, 9
0x0000b605      0f94c2         sete dl
0x0000b608      09d0           or eax, edx
0x0000b60a      83f903         cmp ecx, 3
0x0000b60d      7429           je 0xb638
0x0000b60f      83f909         cmp ecx, 9
0x0000b612      7424           je 0xb638
0x0000b614      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000b61a      81e200f00000   and edx, 0xf000
0x0000b620      84c0           test al, al
0x0000b622      7434           je 0xb658
0x0000b624      81fa00400000   cmp edx, 0x4000
0x0000b62a      744c           je 0xb678
0x0000b62c      b801000000     mov eax, 1
0x0000b631      c3             ret
0x0000b632      660f1f440000   nop word [rax + rax]
0x0000b638      84c0           test al, al
0x0000b63a      753c           jne 0xb678
0x0000b63c      8b86ac000000   mov eax, dword [rsi + 0xac]             ; .//src:3138
0x0000b642      2500f00000     and eax, 0xf000
0x0000b647      3d00400000     cmp eax, 0x4000
0x0000b64c      742a           je 0xb678
0x0000b64e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b653      f3c3           ret
0x0000b655      0f1f00         nop dword [rax]
0x0000b658      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b65e      2500f00000     and eax, 0xf000
0x0000b663      3d00400000     cmp eax, 0x4000
0x0000b668      74ba           je 0xb624
0x0000b66a      81fa00400000   cmp edx, 0x4000
0x0000b670      74dc           je 0xb64e
0x0000b672      660f1f440000   nop word [rax + rax]
0x0000b678      488b4660       mov rax, qword [rsi + 0x60]
0x0000b67c      48394760       cmp qword [rdi + 0x60], rax
0x0000b680      7fcc           jg 0xb64e
0x0000b682      7ca8           jl 0xb62c
0x0000b684      488b4668       mov rax, qword [rsi + 0x68]
0x0000b688      2b4768         sub eax, dword [rdi + 0x68]
0x0000b68b      75c6           jne 0xb653
0x0000b68d      488b36         mov rsi, qword [rsi]
0x0000b690      488b3f         mov rdi, qword [rdi]
0x0000b693      e9f87effff     jmp sym.imp.strcmp
0x0000b698      0f1f84000000.  nop dword [rax + rax]
;-- rev_strcmp_df_mtime:
0x0000b6a0      4889f2         mov rdx, rsi
0x0000b6a3      8bb7a8000000   mov esi, dword [rdi + 0xa8]
0x0000b6a9      8b8aa8000000   mov ecx, dword [rdx + 0xa8]
0x0000b6af      83f903         cmp ecx, 3
0x0000b6b2      0f94c0         sete al
0x0000b6b5      83f909         cmp ecx, 9
0x0000b6b8      0f94c1         sete cl
0x0000b6bb      09c8           or eax, ecx
0x0000b6bd      83fe03         cmp esi, 3
0x0000b6c0      7426           je 0xb6e8
0x0000b6c2      83fe09         cmp esi, 9
0x0000b6c5      7421           je 0xb6e8
0x0000b6c7      8b8fac000000   mov ecx, dword [rdi + 0xac]
0x0000b6cd      81e100f00000   and ecx, 0xf000
0x0000b6d3      84c0           test al, al
0x0000b6d5      7431           je 0xb708
0x0000b6d7      81f900400000   cmp ecx, 0x4000
0x0000b6dd      7449           je 0xb728
0x0000b6df      b801000000     mov eax, 1
0x0000b6e4      c3             ret
0x0000b6e5      0f1f00         nop dword [rax]
0x0000b6e8      84c0           test al, al
0x0000b6ea      753c           jne 0xb728
0x0000b6ec      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b6f2      2500f00000     and eax, 0xf000
0x0000b6f7      3d00400000     cmp eax, 0x4000
0x0000b6fc      742a           je 0xb728
0x0000b6fe      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b703      f3c3           ret
0x0000b705      0f1f00         nop dword [rax]
0x0000b708      8b82ac000000   mov eax, dword [rdx + 0xac]
0x0000b70e      2500f00000     and eax, 0xf000
0x0000b713      3d00400000     cmp eax, 0x4000
0x0000b718      74bd           je 0xb6d7
0x0000b71a      81f900400000   cmp ecx, 0x4000                         ; .//src:3175
0x0000b720      74dc           je 0xb6fe
0x0000b722      660f1f440000   nop word [rax + rax]
0x0000b728      488b4770       mov rax, qword [rdi + 0x70]
0x0000b72c      48394270       cmp qword [rdx + 0x70], rax
0x0000b730      7fcc           jg 0xb6fe
0x0000b732      7cab           jl 0xb6df
0x0000b734      488b4778       mov rax, qword [rdi + 0x78]
0x0000b738      2b4278         sub eax, dword [rdx + 0x78]
0x0000b73b      75c6           jne 0xb703
0x0000b73d      488b37         mov rsi, qword [rdi]
0x0000b740      488b3a         mov rdi, qword [rdx]
0x0000b743      e9487effff     jmp sym.imp.strcmp
0x0000b748      0f1f84000000.  nop dword [rax + rax]
;-- strcmp_df_ctime:
0x0000b750      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b756      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b75c      83fa03         cmp edx, 3
0x0000b75f      0f94c0         sete al
0x0000b762      83fa09         cmp edx, 9
0x0000b765      0f94c2         sete dl
0x0000b768      09d0           or eax, edx
0x0000b76a      83f903         cmp ecx, 3
0x0000b76d      7429           je 0xb798
0x0000b76f      83f909         cmp ecx, 9
0x0000b772      7424           je 0xb798
0x0000b774      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000b77a      81e200f00000   and edx, 0xf000
0x0000b780      84c0           test al, al
0x0000b782      7434           je 0xb7b8
0x0000b784      81fa00400000   cmp edx, 0x4000
0x0000b78a      744c           je 0xb7d8
0x0000b78c      b801000000     mov eax, 1
0x0000b791      c3             ret
0x0000b792      660f1f440000   nop word [rax + rax]
0x0000b798      84c0           test al, al
0x0000b79a      753c           jne 0xb7d8
0x0000b79c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b7a2      2500f00000     and eax, 0xf000
0x0000b7a7      3d00400000     cmp eax, 0x4000
0x0000b7ac      742a           je 0xb7d8
0x0000b7ae      b8ffffffff     mov eax, 0xffffffff                     ; .//src:3198 ; -1
0x0000b7b3      f3c3           ret
0x0000b7b5      0f1f00         nop dword [rax]
0x0000b7b8      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b7be      2500f00000     and eax, 0xf000
0x0000b7c3      3d00400000     cmp eax, 0x4000
0x0000b7c8      74ba           je 0xb784
0x0000b7ca      81fa00400000   cmp edx, 0x4000
0x0000b7d0      74dc           je 0xb7ae
0x0000b7d2      660f1f440000   nop word [rax + rax]
0x0000b7d8      488b86800000.  mov rax, qword [rsi + 0x80]
0x0000b7df      483987800000.  cmp qword [rdi + 0x80], rax
0x0000b7e6      7fc6           jg 0xb7ae
0x0000b7e8      7ca2           jl 0xb78c
0x0000b7ea      488b86880000.  mov rax, qword [rsi + 0x88]
0x0000b7f1      2b8788000000   sub eax, dword [rdi + 0x88]
0x0000b7f7      75ba           jne 0xb7b3
0x0000b7f9      488b36         mov rsi, qword [rsi]
0x0000b7fc      488b3f         mov rdi, qword [rdi]
0x0000b7ff      e98c7dffff     jmp sym.imp.strcmp
0x0000b804      6690           nop
0x0000b806      662e0f1f8400.  nop word cs:[rax + rax]
;-- strcmp_df_extension:
0x0000b810      8b96a8000000   mov edx, dword [rsi + 0xa8]
0x0000b816      8b8fa8000000   mov ecx, dword [rdi + 0xa8]
0x0000b81c      83fa03         cmp edx, 3
0x0000b81f      0f94c0         sete al
0x0000b822      83fa09         cmp edx, 9
0x0000b825      0f94c2         sete dl
0x0000b828      09d0           or eax, edx
0x0000b82a      83f903         cmp ecx, 3
0x0000b82d      7429           je 0xb858
0x0000b82f      83f909         cmp ecx, 9
0x0000b832      7424           je 0xb858
0x0000b834      8b97ac000000   mov edx, dword [rdi + 0xac]
0x0000b83a      81e200f00000   and edx, 0xf000
0x0000b840      84c0           test al, al
0x0000b842      7434           je 0xb878                               ; .//src:3223
0x0000b844      81fa00400000   cmp edx, 0x4000
0x0000b84a      744c           je 0xb898
0x0000b84c      b801000000     mov eax, 1
0x0000b851      c3             ret
0x0000b852      660f1f440000   nop word [rax + rax]
0x0000b858      84c0           test al, al
0x0000b85a      753c           jne 0xb898
0x0000b85c      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b862      2500f00000     and eax, 0xf000
0x0000b867      3d00400000     cmp eax, 0x4000                         ; .//src:3230
0x0000b86c      742a           je 0xb898
0x0000b86e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b873      c3             ret
0x0000b874      0f1f4000       nop dword [rax]
0x0000b878      8b86ac000000   mov eax, dword [rsi + 0xac]
0x0000b87e      2500f00000     and eax, 0xf000
0x0000b883      3d00400000     cmp eax, 0x4000
0x0000b888      74ba           je 0xb844
0x0000b88a      81fa00400000   cmp edx, 0x4000
0x0000b890      74dc           je 0xb86e
0x0000b892      660f1f440000   nop word [rax + rax]
0x0000b898      4154           push r12
0x0000b89a      55             push rbp
0x0000b89b      53             push rbx
0x0000b89c      4c8b27         mov r12, qword [rdi]
0x0000b89f      4889f3         mov rbx, rsi
0x0000b8a2      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b8a7      4c89e7         mov rdi, r12
0x0000b8aa      e8f17bffff     call sym.imp.strrchr
0x0000b8af      488b1b         mov rbx, qword [rbx]
0x0000b8b2      be2e000000     mov esi, 0x2e                           ; '.'
0x0000b8b7      4889c5         mov rbp, rax
0x0000b8ba      4889df         mov rdi, rbx
0x0000b8bd      e8de7bffff     call sym.imp.strrchr
0x0000b8c2      4885c0         test rax, rax
0x0000b8c5      7439           je 0xb900
0x0000b8c7      488d15e5bf00.  lea rdx, [0x000178b3]
0x0000b8ce      4885ed         test rbp, rbp
0x0000b8d1      480f44ea       cmove rbp, rdx
0x0000b8d5      4889c6         mov rsi, rax
0x0000b8d8      4889ef         mov rdi, rbp
0x0000b8db      e8b07cffff     call sym.imp.strcmp
0x0000b8e0      85c0           test eax, eax
0x0000b8e2      7514           jne 0xb8f8
0x0000b8e4      4889de         mov rsi, rbx
0x0000b8e7      4c89e7         mov rdi, r12
0x0000b8ea      5b             pop rbx
0x0000b8eb      5d             pop rbp
0x0000b8ec      415c           pop r12
0x0000b8ee      e99d7cffff     jmp sym.imp.strcmp
0x0000b8f3      0f1f440000     nop dword [rax + rax]
0x0000b8f8      5b             pop rbx
0x0000b8f9      5d             pop rbp
0x0000b8fa      415c           pop r12
0x0000b8fc      c3             ret
0x0000b8fd      0f1f00         nop dword [rax]
0x0000b900      4885ed         test rbp, rbp
0x0000b903      488d05a9bf00.  lea rax, [0x000178b3]
0x0000b90a      75c9           jne 0xb8d5
0x0000b90c      ebd6           jmp 0xb8e4
0x0000b90e      6690           nop
;-- usage:
0x0000b910      4155           push r13
0x0000b912      4154           push r12
0x0000b914      ba05000000     mov edx, 5
0x0000b919      55             push rbp
0x0000b91a      53             push rbx
0x0000b91b      4189fc         mov r12d, edi
0x0000b91e      4881ec880000.  sub rsp, 0x88
0x0000b925      488b1dd45a21.  mov rbx, qword [obj.program_name]       ; [0x221400:8]=0
0x0000b92c      64488b042528.  mov rax, qword fs:[0x28]
0x0000b935      4889442478     mov qword [rsp + 0x78], rax
0x0000b93a      31c0           xor eax, eax
0x0000b93c      85ff           test edi, edi
0x0000b93e      742f           je 0xb96f
0x0000b940      488d3569c500.  lea rsi, str.Try___s___help__for_more_information. ; 0x17eb0 ; "Try '%s --help' for more information.\n"
0x0000b947      31ff           xor edi, edi
0x0000b949      e8927affff     call sym.imp.dcgettext
0x0000b94e      488b3d6b4921.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000b955      4889c2         mov rdx, rax
0x0000b958      4889d9         mov rcx, rbx
0x0000b95b      be01000000     mov esi, 1
0x0000b960      31c0           xor eax, eax
0x0000b962      e8997effff     call sym.imp.__fprintf_chk
0x0000b967      4489e7         mov edi, r12d
0x0000b96a      e8717effff     call sym.imp.exit                       ; .//src:3279
0x0000b96f      488d3562c500.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x17ed8 ; "Usage: %s [OPTION]... [FILE]...\n"
0x0000b976      31ff           xor edi, edi
0x0000b978      488d2d62c000.  lea rbp, [0x000179e1]                   ; "ls"
0x0000b97f      e85c7affff     call sym.imp.dcgettext
0x0000b984      4889da         mov rdx, rbx
0x0000b987      4889c6         mov rsi, rax
0x0000b98a      bf01000000     mov edi, 1
0x0000b98f      31c0           xor eax, eax                            ; .//src:3280
0x0000b991      e87a7dffff     call sym.imp.__printf_chk
0x0000b996      488b1deb4821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000b99d      488d355cc500.  lea rsi, str.List_information_about_the_FILEs__the_current_directory_by_default_.__Sort_entries_alphabetically_if_none_of__cftuvSUX_nor___sort_is_specified. ; 0x17f00 ; "List information about the FILEs (the current directory by default).\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n"
0x0000b9a4      ba05000000     mov edx, 5
0x0000b9a9      31ff           xor edi, edi
0x0000b9ab      e8307affff     call sym.imp.dcgettext
0x0000b9b0      4889de         mov rsi, rbx
0x0000b9b3      4889c7         mov rdi, rax
0x0000b9b6      e8b57bffff     call sym.imp.fputs_unlocked
0x0000b9bb      488b1dc64821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000b9c2      488d35c7c500.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x17f90 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x0000b9c9      ba05000000     mov edx, 5
0x0000b9ce      31ff           xor edi, edi
0x0000b9d0      e80b7affff     call sym.imp.dcgettext
0x0000b9d5      4889de         mov rsi, rbx
0x0000b9d8      4889c7         mov rdi, rax
0x0000b9db      e8907bffff     call sym.imp.fputs_unlocked
0x0000b9e0      488b1da14821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000b9e7      488d35f2c500.  lea rsi, str.a____all__________________do_not_ignore_entries_starting_with_._____A____almost_all___________do_not_list_implied_._and_..__________author_______________with__l__print_the_author_of_each_file_____b____escape_______________print_C_style_escapes_for_nongraphic_characters ; 0x17fe0 ; "  -a, --all                  do not ignore entries starting with .\n  -A, --almost-all           do not list implied . and ..\n      --author               with -l, print the author of each file\n  -b, --escape               print C-style escapes for nongraphic characters\n"
0x0000b9ee      ba05000000     mov edx, 5
0x0000b9f3      31ff           xor edi, edi
0x0000b9f5      e8e679ffff     call sym.imp.dcgettext
0x0000b9fa      4889de         mov rsi, rbx
0x0000b9fd      4889c7         mov rdi, rax
0x0000ba00      e86b7bffff     call sym.imp.fputs_unlocked
0x0000ba05      488b1d7c4821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000ba0c      488d35ddc600.  lea rsi, str.block_size_SIZE______with__l__scale_sizes_by_SIZE_when_printing_them__________________________________e.g._____block_size_M___see_SIZE_format_below ; 0x180f0 ; "      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\n                               e.g., '--block-size=M'; see SIZE format below\n"
0x0000ba13      ba05000000     mov edx, 5
0x0000ba18      31ff           xor edi, edi
0x0000ba1a      e8c179ffff     call sym.imp.dcgettext
0x0000ba1f      4889de         mov rsi, rbx
0x0000ba22      4889c7         mov rdi, rax
0x0000ba25      e8467bffff     call sym.imp.fputs_unlocked
0x0000ba2a      488b1d574821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000ba31      488d3558c700.  lea rsi, str.B____ignore_backups_______do_not_list_implied_entries_ending_with_______c_________________________with__lt:_sort_by__and_show__ctime__time_of_last_________________________________modification_of_file_status_information___________________________________with__l:_show_ctime_and_sort_by_name__________________________________otherwise:_sort_by_ctime__newest_first ; 0x18190 ; "  -B, --ignore-backups       do not list implied entries ending with ~\n  -c                         with -lt: sort by, and show, ctime (time of last\n                               modification of file status information);\n                               with -l: show ctime and sort by name;\n                               otherwise: sort by ctime, newest first\n"
0x0000ba38      ba05000000     mov edx, 5
0x0000ba3d      31ff           xor edi, edi
0x0000ba3f      e89c79ffff     call sym.imp.dcgettext
0x0000ba44      4889de         mov rsi, rbx
0x0000ba47      4889c7         mov rdi, rax
0x0000ba4a      e8217bffff     call sym.imp.fputs_unlocked
0x0000ba4f      488b1d324821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000ba56      488d35a3c800.  lea rsi, str.C_________________________list_entries_by_columns__________color__WHEN__________colorize_the_output__WHEN_can_be__always___default_________________________________if_omitted____auto___or__never___more_info_below_____d____directory____________list_directories_themselves__not_their_contents_____D____dired________________generate_output_designed_for_Emacs__dired_mode ; 0x18300 ; "  -C                         list entries by columns\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\n                               if omitted), 'auto', or 'never'; more info below\n  -d, --directory            list directories themselves, not their contents\n  -D, --dired                generate output designed for Emacs' dired mode\n"
0x0000ba5d      ba05000000     mov edx, 5
0x0000ba62      31ff           xor edi, edi
0x0000ba64      e87779ffff     call sym.imp.dcgettext
0x0000ba69      4889de         mov rsi, rbx
0x0000ba6c      4889c7         mov rdi, rax
0x0000ba6f      e8fc7affff     call sym.imp.fputs_unlocked
0x0000ba74      488b1d0d4821.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000ba7b      488d35eec900.  lea rsi, str.f_________________________do_not_sort__enable__aU__disable__ls___color_____F____classify_____________append_indicator__one_of_________to_entries__________file_type____________likewise__except_do_not_append______________format_WORD__________across__x__commas__m__horizontal__x__long__l__________________________________single_column__1__verbose__l__vertical__C__________full_time____________like__l___time_style_full_iso ; 0x18470 ; "  -f                         do not sort, enable -aU, disable -ls --color\n  -F, --classify             append indicator (one of */=>@|) to entries\n      --file-type            likewise, except do not append '*'\n      --format=WORD          across -x, commas -m, horizontal -x, long -l,\n                               single-column -1, verbose -l, vertical -C\n      --full-time            like -l --time-style=full-iso\n"
0x0000ba82      ba05000000     mov edx, 5
0x0000ba87      31ff           xor edi, edi
0x0000ba89      e85279ffff     call sym.imp.dcgettext
0x0000ba8e      4889de         mov rsi, rbx
0x0000ba91      4889c7         mov rdi, rax
0x0000ba94      e8d77affff     call sym.imp.fputs_unlocked
0x0000ba99      488b1de84721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000baa0      488d3571cb00.  lea rsi, str.g_________________________like__l__but_do_not_list_owner ; 0x18618 ; "  -g                         like -l, but do not list owner\n"
0x0000baa7      ba05000000     mov edx, 5
0x0000baac      31ff           xor edi, edi
0x0000baae      e82d79ffff     call sym.imp.dcgettext
0x0000bab3      4889de         mov rsi, rbx
0x0000bab6      4889c7         mov rdi, rax
0x0000bab9      e8b27affff     call sym.imp.fputs_unlocked
0x0000babe      488b1dc34721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bac5      488d358ccb00.  lea rsi, str.group_directories_first_______________________________group_directories_before_files__________________________________can_be_augmented_with_a___sort_option__but_any_________________________________use_of___sort_none___U__disables_grouping ; 0x18658 ; "      --group-directories-first\n                             group directories before files;\n                               can be augmented with a --sort option, but any\n                               use of --sort=none (-U) disables grouping\n"
0x0000bacc      ba05000000     mov edx, 5
0x0000bad1      31ff           xor edi, edi
0x0000bad3      e80879ffff     call sym.imp.dcgettext
0x0000bad8      4889de         mov rsi, rbx
0x0000badb      4889c7         mov rdi, rax
0x0000bade      e88d7affff     call sym.imp.fputs_unlocked
0x0000bae3      488b1d9e4721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000baea      488d355fcc00.  lea rsi, str.G____no_group_____________in_a_long_listing__don_t_print_group_names ; 0x18750 ; "  -G, --no-group             in a long listing, don't print group names\n"
0x0000baf1      ba05000000     mov edx, 5
0x0000baf6      31ff           xor edi, edi
0x0000baf8      e8e378ffff     call sym.imp.dcgettext
0x0000bafd      4889de         mov rsi, rbx
0x0000bb00      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/xalloc.h:-1357
0x0000bb03      e8687affff     call sym.imp.fputs_unlocked
0x0000bb08      488b1d794721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bb0f      488d358acc00.  lea rsi, str.h____human_readable_______with__l_and__s__print_sizes_like_1K_234M_2G_etc.__________si___________________likewise__but_use_powers_of_1000_not_1024 ; 0x187a0 ; "  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\n      --si                   likewise, but use powers of 1000 not 1024\n"
0x0000bb16      ba05000000     mov edx, 5
0x0000bb1b      31ff           xor edi, edi
0x0000bb1d      e8be78ffff     call sym.imp.dcgettext
0x0000bb22      4889de         mov rsi, rbx
0x0000bb25      4889c7         mov rdi, rax
0x0000bb28      e8437affff     call sym.imp.fputs_unlocked
0x0000bb2d      488b1d544721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bb34      488d35fdcc00.  lea rsi, str.H____dereference_command_line_______________________________follow_symbolic_links_listed_on_the_command_line__________dereference_command_line_symlink_to_dir_______________________________follow_each_command_line_symbolic_link_________________________________that_points_to_a_directory__________hide_PATTERN_________do_not_list_implied_entries_matching_shell_PATTERN__________________________________overridden_by__a_or__A ; ../coreutils-8.31/src/.c:-1899 ; 0x18838 ; "  -H, --dereference-command-line\n                             follow symbolic links listed on the command line\n      --dereference-command-line-symlink-to-dir\n                             follow each command line symbolic link\n                               that points to a directory\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\n                               (overridden by -a or -A)\n"
0x0000bb3b      ba05000000     mov edx, 5
0x0000bb40      31ff           xor edi, edi
0x0000bb42      e89978ffff     call sym.imp.dcgettext
0x0000bb47      4889de         mov rsi, rbx
0x0000bb4a      4889c7         mov rdi, rax
0x0000bb4d      e81e7affff     call sym.imp.fputs_unlocked
0x0000bb52      488b1d2f4721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bb59      488d3580ce00.  lea rsi, str.hyperlink__WHEN______hyperlink_file_names__WHEN_can_be__always___________________________________default_if_omitted____auto___or__never ; 0x189e0 ; "      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\n                               (default if omitted), 'auto', or 'never'\n"
0x0000bb60      ba05000000     mov edx, 5
0x0000bb65      31ff           xor edi, edi
0x0000bb67      e87478ffff     call sym.imp.dcgettext
0x0000bb6c      4889de         mov rsi, rbx
0x0000bb6f      4889c7         mov rdi, rax
0x0000bb72      e8f979ffff     call sym.imp.fputs_unlocked
0x0000bb77      488b1d0a4721.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bb7e      488d35f3ce00.  lea rsi, str.indicator_style_WORD__append_indicator_with_style_WORD_to_entry_names:_________________________________none__default___slash___p___________________________________file_type____file_type___classify___F______i____inode________________print_the_index_number_of_each_file_____I____ignore_PATTERN_______do_not_list_implied_entries_matching_shell_PATTERN ; ../coreutils-8.31/lib/xalloc.h:-1337 ; 0x18a78 ; "      --indicator-style=WORD  append indicator with style WORD to entry names:\n                               none (default), slash (-p),\n                               file-type (--file-type), classify (-F)\n  -i, --inode                print the index number of each file\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\n"
0x0000bb85      ba05000000     mov edx, 5
0x0000bb8a      31ff           xor edi, edi
0x0000bb8c      e84f78ffff     call sym.imp.dcgettext
0x0000bb91      4889de         mov rsi, rbx                            ; ../coreutils-8.31/src/.c:-1899
0x0000bb94      4889c7         mov rdi, rax
0x0000bb97      e8d479ffff     call sym.imp.fputs_unlocked
0x0000bb9c      488b1de54621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bba3      488d3536d000.  lea rsi, str.k____kibibytes____________default_to_1024_byte_blocks_for_disk_usage__________________________________used_only_with__s_and_per_directory_totals ; 0x18be0 ; "  -k, --kibibytes            default to 1024-byte blocks for disk usage;\n                               used only with -s and per directory totals\n"
0x0000bbaa      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc.h:-1335
0x0000bbaf      31ff           xor edi, edi
0x0000bbb1      e82a78ffff     call sym.imp.dcgettext
0x0000bbb6      4889de         mov rsi, rbx
0x0000bbb9      4889c7         mov rdi, rax
0x0000bbbc      e8af79ffff     call sym.imp.fputs_unlocked
0x0000bbc1      488b1dc04621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bbc8      488d35a9d000.  lea rsi, str.l_________________________use_a_long_listing_format_____L____dereference__________when_showing_file_information_for_a_symbolic_________________________________link__show_information_for_the_file_the_link_________________________________references_rather_than_for_the_link_itself_____m_________________________fill_width_with_a_comma_separated_list_of_entries ; 0x18c78 ; "  -l                         use a long listing format\n  -L, --dereference          when showing file information for a symbolic\n                               link, show information for the file the link\n                               references rather than for the link itself\n  -m                         fill width with a comma separated list of entries\n"
0x0000bbcf      ba05000000     mov edx, 5
0x0000bbd4      31ff           xor edi, edi
0x0000bbd6      e80578ffff     call sym.imp.dcgettext
0x0000bbdb      4889de         mov rsi, rbx
0x0000bbde      4889c7         mov rdi, rax
0x0000bbe1      e88a79ffff     call sym.imp.fputs_unlocked
0x0000bbe6      488b1d9b4621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bbed      488d35ecd100.  lea rsi, str.n____numeric_uid_gid______like__l__but_list_numeric_user_and_group_IDs_____N____literal______________print_entry_names_without_quoting_____o_________________________like__l__but_do_not_list_group_information_____p____indicator_style_slash_______________________________append___indicator_to_directories ; 0x18de0 ; "  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\n  -N, --literal              print entry names without quoting\n  -o                         like -l, but do not list group information\n  -p, --indicator-style=slash\n                             append / indicator to directories\n"
0x0000bbf4      ba05000000     mov edx, 5
0x0000bbf9      31ff           xor edi, edi
0x0000bbfb      e8e077ffff     call sym.imp.dcgettext
0x0000bc00      4889de         mov rsi, rbx
0x0000bc03      4889c7         mov rdi, rax
0x0000bc06      e86579ffff     call sym.imp.fputs_unlocked
0x0000bc0b      488b1d764621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bc12      488d35f7d200.  lea rsi, str.q____hide_control_chars___print___instead_of_nongraphic_characters__________show_control_chars___show_nongraphic_characters_as_is__the_default__________________________________unless_program_is__ls__and_output_is_a_terminal______Q____quote_name___________enclose_entry_names_in_double_quotes__________quoting_style_WORD___use_quoting_style_WORD_for_entry_names:_________________________________literal__locale__shell__shell_always__________________________________shell_escape__shell_escape_always__c__escape__________________________________overrides_QUOTING_STYLE_environment_variable ; 0x18f10 ; "  -q, --hide-control-chars   print ? instead of nongraphic characters\n      --show-control-chars   show nongraphic characters as-is (the default,\n                               unless program is 'ls' and output is a terminal)\n  -Q, --quote-name           enclose entry names in double quotes\n      --quoting-style=WORD   use quoting style WORD for entry names:\n                               literal, locale, shell, shell-always,\n                               shell-escape, shell-escape-always, c, escape\n                               (overrides QUOTING_STYLE environment variable)\n"
0x0000bc19      ba05000000     mov edx, 5
0x0000bc1e      31ff           xor edi, edi
0x0000bc20      e8bb77ffff     call sym.imp.dcgettext
0x0000bc25      4889de         mov rsi, rbx
0x0000bc28      4889c7         mov rdi, rax
0x0000bc2b      e84079ffff     call sym.imp.fputs_unlocked
0x0000bc30      488b1d514621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bc37      488d3522d500.  lea rsi, str.r____reverse______________reverse_order_while_sorting_____R____recursive____________list_subdirectories_recursively_____s____size_________________print_the_allocated_size_of_each_file__in_blocks ; ../coreutils-8.31/lib/xalloc.h:-1337 ; 0x19160 ; "  -r, --reverse              reverse order while sorting\n  -R, --recursive            list subdirectories recursively\n  -s, --size                 print the allocated size of each file, in blocks\n"
0x0000bc3e      ba05000000     mov edx, 5
0x0000bc43      31ff           xor edi, edi
0x0000bc45      e89677ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/.c:-1899
0x0000bc4a      4889de         mov rsi, rbx
0x0000bc4d      4889c7         mov rdi, rax
0x0000bc50      e81b79ffff     call sym.imp.fputs_unlocked
0x0000bc55      488b1d2c4621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bc5c      488d35c5d500.  lea rsi, str.S_________________________sort_by_file_size__largest_first__________sort_WORD____________sort_by_WORD_instead_of_name:_none___U___size___S___________________________________time___t___version___v___extension___X___________time_WORD____________with__l__show_time_as_WORD_instead_of_default_________________________________modification_time:_atime_or_access_or_use___u___________________________________ctime_or_status___c___also_use_specified_time_________________________________as_sort_key_if___sort_time__newest_first ; 0x19228 ; "  -S                         sort by file size, largest first\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\n                               time (-t), version (-v), extension (-X)\n      --time=WORD            with -l, show time as WORD instead of default\n                               modification time: atime or access or use (-u);\n                               ctime or status (-c); also use specified time\n                               as sort key if --sort=time (newest first)\n"
0x0000bc63      ba05000000     mov edx, 5
0x0000bc68      31ff           xor edi, edi
0x0000bc6a      e87177ffff     call sym.imp.dcgettext
0x0000bc6f      4889de         mov rsi, rbx
0x0000bc72      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/xalloc.h:-1346
0x0000bc75      e8f678ffff     call sym.imp.fputs_unlocked             ; ../coreutils-8.31/lib/xalloc.h:-1340
0x0000bc7a      488b1d074621.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bc81      488d35a8d700.  lea rsi, str.time_style_TIME_STYLE__time_date_format_with__l__see_TIME_STYLE_below ; 0x19430 ; "      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\n"
0x0000bc88      31ff           xor edi, edi
0x0000bc8a      ba05000000     mov edx, 5
0x0000bc8f      e84c77ffff     call sym.imp.dcgettext
0x0000bc94      4889de         mov rsi, rbx
0x0000bc97      4889c7         mov rdi, rax
0x0000bc9a      e8d178ffff     call sym.imp.fputs_unlocked
0x0000bc9f      488b1de24521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bca6      488d35d3d700.  lea rsi, str.t_________________________sort_by_modification_time__newest_first_____T____tabsize_COLS_________assume_tab_stops_at_each_COLS_instead_of_8 ; 0x19480 ; "  -t                         sort by modification time, newest first\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\n"
0x0000bcad      ba05000000     mov edx, 5
0x0000bcb2      31ff           xor edi, edi
0x0000bcb4      e82777ffff     call sym.imp.dcgettext
0x0000bcb9      4889de         mov rsi, rbx
0x0000bcbc      4889c7         mov rdi, rax
0x0000bcbf      e8ac78ffff     call sym.imp.fputs_unlocked
0x0000bcc4      488b1dbd4521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bccb      488d353ed800.  lea rsi, str.u_________________________with__lt:_sort_by__and_show__access_time__________________________________with__l:_show_access_time_and_sort_by_name__________________________________otherwise:_sort_by_access_time__newest_first_____U_________________________do_not_sort__list_entries_in_directory_order_____v_________________________natural_sort_of__version__numbers_within_text ; 0x19510 ; "  -u                         with -lt: sort by, and show, access time;\n                               with -l: show access time and sort by name;\n                               otherwise: sort by access time, newest first\n  -U                         do not sort; list entries in directory order\n  -v                         natural sort of (version) numbers within text\n"
0x0000bcd2      ba05000000     mov edx, 5
0x0000bcd7      31ff           xor edi, edi
0x0000bcd9      e80277ffff     call sym.imp.dcgettext
0x0000bcde      4889de         mov rsi, rbx
0x0000bce1      4889c7         mov rdi, rax
0x0000bce4      e88778ffff     call sym.imp.fputs_unlocked
0x0000bce9      488b1d984521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bcf0      488d3591d900.  lea rsi, str.w____width_COLS___________set_output_width_to_COLS.__0_means_no_limit_____x_________________________list_entries_by_lines_instead_of_by_columns_____X_________________________sort_alphabetically_by_entry_extension_____Z____context______________print_any_security_context_of_each_file_____1_________________________list_one_file_per_line.__Avoid_______with__q_or__b ; 0x19688 ; "  -w, --width=COLS           set output width to COLS.  0 means no limit\n  -x                         list entries by lines instead of by columns\n  -X                         sort alphabetically by entry extension\n  -Z, --context              print any security context of each file\n  -1                         list one file per line.  Avoid '\n' with -q or -b\n"
0x0000bcf7      ba05000000     mov edx, 5
0x0000bcfc      31ff           xor edi, edi
0x0000bcfe      e8dd76ffff     call sym.imp.dcgettext
0x0000bd03      4889de         mov rsi, rbx
0x0000bd06      4889c7         mov rdi, rax
0x0000bd09      e86278ffff     call sym.imp.fputs_unlocked
0x0000bd0e      488b1d734521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bd15      488d35dcda00.  lea rsi, str.help_____display_this_help_and_exit ; 0x197f8 ; "      --help     display this help and exit\n"
0x0000bd1c      ba05000000     mov edx, 5
0x0000bd21      31ff           xor edi, edi
0x0000bd23      e8b876ffff     call sym.imp.dcgettext
0x0000bd28      4889de         mov rsi, rbx
0x0000bd2b      4889c7         mov rdi, rax
0x0000bd2e      e83d78ffff     call sym.imp.fputs_unlocked
0x0000bd33      488b1d4e4521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bd3a      488d35e7da00.  lea rsi, str.version__output_version_information_and_exit ; 0x19828 ; "      --version  output version information and exit\n"
0x0000bd41      ba05000000     mov edx, 5
0x0000bd46      31ff           xor edi, edi
0x0000bd48      e89376ffff     call sym.imp.dcgettext
0x0000bd4d      4889de         mov rsi, rbx
0x0000bd50      4889c7         mov rdi, rax
0x0000bd53      e81878ffff     call sym.imp.fputs_unlocked
0x0000bd58      488b1d294521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bd5f      488d35fada00.  lea rsi, str.The_SIZE_argument_is_an_integer_and_optional_unit__example:_10K_is_10_1024_.__Units_are_K_M_G_T_P_E_Z_Y__powers_of_1024__or_KB_MB_...__powers_of_1000_.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0x19860 ; "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x0000bd66      ba05000000     mov edx, 5
0x0000bd6b      31ff           xor edi, edi
0x0000bd6d      e86e76ffff     call sym.imp.dcgettext
0x0000bd72      4889de         mov rsi, rbx
0x0000bd75      4889c7         mov rdi, rax
0x0000bd78      e8f377ffff     call sym.imp.fputs_unlocked
0x0000bd7d      488b1d044521.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bd84      488d35addb00.  lea rsi, str.The_TIME_STYLE_argument_can_be_full_iso__long_iso__iso__locale__or__FORMAT.__FORMAT_is_interpreted_like_in_date_1_.__If_FORMAT_is_FORMAT1_newline_FORMAT2___then_FORMAT1_applies_to_non_recent_files_and_FORMAT2_to_recent_files.__TIME_STYLE_prefixed_with__posix___takes_effect_only_outside_the_POSIX_locale.__Also_the_TIME_STYLE_environment_variable_sets_the_default_style_to_use. ; 0x19938 ; "\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\nTIME_STYLE prefixed with 'posix-' takes effect only outside the POSIX locale.\nAlso the TIME_STYLE environment variable sets the default style to use.\n"
0x0000bd8b      ba05000000     mov edx, 5
0x0000bd90      31ff           xor edi, edi
0x0000bd92      e84976ffff     call sym.imp.dcgettext
0x0000bd97      4889de         mov rsi, rbx
0x0000bd9a      4889c7         mov rdi, rax
0x0000bd9d      e8ce77ffff     call sym.imp.fputs_unlocked
0x0000bda2      488b1ddf4421.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bda9      488d3500dd00.  lea rsi, str.Using_color_to_distinguish_file_types_is_disabled_both_by_default_and__with___color_never.__With___color_auto__ls_emits_color_codes_only_when__standard_output_is_connected_to_a_terminal.__The_LS_COLORS_environment__variable_can_change_the_settings.__Use_the_dircolors_command_to_set_it. ; 0x19ab0 ; "\nUsing color to distinguish file types is disabled both by default and\nwith --color=never.  With --color=auto, ls emits color codes only when\nstandard output is connected to a terminal.  The LS_COLORS environment\nvariable can change the settings.  Use the dircolors command to set it.\n"
0x0000bdb0      ba05000000     mov edx, 5
0x0000bdb5      31ff           xor edi, edi
0x0000bdb7      e82476ffff     call sym.imp.dcgettext
0x0000bdbc      4889de         mov rsi, rbx
0x0000bdbf      4889c7         mov rdi, rax
0x0000bdc2      e8a977ffff     call sym.imp.fputs_unlocked
0x0000bdc7      488b1dba4421.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000bdce      488d35fbdd00.  lea rsi, str.Exit_status:___0__if_OK____1__if_minor_problems__e.g.__cannot_access_subdirectory_____2__if_serious_trouble__e.g.__cannot_access_command_line_argument_. ; 0x19bd0 ; "\nExit status:\n 0  if OK,\n 1  if minor problems (e.g., cannot access subdirectory),\n 2  if serious trouble (e.g., cannot access command-line argument).\n"
0x0000bdd5      31ff           xor edi, edi
0x0000bdd7      ba05000000     mov edx, 5
0x0000bddc      e8ff75ffff     call sym.imp.dcgettext
0x0000bde1      4889de         mov rsi, rbx
0x0000bde4      4889c7         mov rdi, rax
0x0000bde7      e88477ffff     call sym.imp.fputs_unlocked
0x0000bdec      8b05ee432100   mov eax, dword [obj.ls_mode]            ; [0x2201e0:4]=2
0x0000bdf2      83f801         cmp eax, 1
0x0000bdf5      7415           je 0xbe0c
0x0000bdf7      83f802         cmp eax, 2
0x0000bdfa      488d2d5cbb00.  lea rbp, str.vdir                       ; 0x1795d ; "vdir"
0x0000be01      488d0556bb00.  lea rax, [0x0001795e]                   ; "dir"
0x0000be08      480f44e8       cmove rbp, rax
0x0000be0c      488d054fbb00.  lea rax, str.test_invocation            ; 0x17962 ; "test invocation"
0x0000be13      488d0d87bb00.  lea rcx, str.sha256sum                  ; 0x179a1 ; "sha256sum"
0x0000be1a      488d35a3bf00.  lea rsi, [0x00017dc4]                   ; "["
0x0000be21      48c744246000.  mov qword [rsp + 0x60], 0
0x0000be2a      48c744246800.  mov qword [rsp + 0x68], 0
0x0000be33      4889e3         mov rbx, rsp
0x0000be36      4889442408     mov qword [rsp + 8], rax
0x0000be3b      488d0598bb00.  lea rax, [0x000179da]                   ; "coreutils"
0x0000be42      48894c2430     mov qword [rsp + 0x30], rcx
0x0000be47      488d0d5dbb00.  lea rcx, str.sha384sum                  ; 0x179ab ; "sha384sum"
0x0000be4e      48893424       mov qword [rsp], rsi
0x0000be52      4889442410     mov qword [rsp + 0x10], rax
0x0000be57      488d0514bb00.  lea rax, str.Multi_call_invocation      ; 0x17972 ; "Multi-call invocation"
0x0000be5e      48894c2440     mov qword [rsp + 0x40], rcx
0x0000be63      488d0d4bbb00.  lea rcx, str.sha512sum                  ; 0x179b5 ; "sha512sum"
0x0000be6a      4889442418     mov qword [rsp + 0x18], rax
0x0000be6f      488d0512bb00.  lea rax, str.sha224sum                  ; 0x17988 ; "sha224sum"
0x0000be76      48894c2450     mov qword [rsp + 0x50], rcx
0x0000be7b      4889442420     mov qword [rsp + 0x20], rax
0x0000be80      488d050bbb00.  lea rax, str.sha2_utilities             ; 0x17992 ; "sha2 utilities"
0x0000be87      4889442428     mov qword [rsp + 0x28], rax
0x0000be8c      4889442438     mov qword [rsp + 0x38], rax
0x0000be91      4889442448     mov qword [rsp + 0x48], rax
0x0000be96      4889442458     mov qword [rsp + 0x58], rax
0x0000be9b      eb0f           jmp 0xbeac
0x0000be9d      0f1f00         nop dword [rax]
0x0000bea0      4883c310       add rbx, 0x10
0x0000bea4      488b33         mov rsi, qword [rbx]
0x0000bea7      4885f6         test rsi, rsi
0x0000beaa      740c           je 0xbeb8
0x0000beac      4889ef         mov rdi, rbp
0x0000beaf      e8dc76ffff     call sym.imp.strcmp
0x0000beb4      85c0           test eax, eax
0x0000beb6      75e8           jne 0xbea0
0x0000beb8      488b5b08       mov rbx, qword [rbx + 8]
0x0000bebc      31ff           xor edi, edi
0x0000bebe      ba05000000     mov edx, 5
0x0000bec3      488d35f5ba00.  lea rsi, str.s_online_help:___s         ; 0x179bf ; "\n%s online help: <%s>\n"
0x0000beca      4885db         test rbx, rbx
0x0000becd      0f84bd000000   je 0xbf90
0x0000bed3      e80875ffff     call sym.imp.dcgettext
0x0000bed8      488d0d89dd00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x19c68 ; "https://www.gnu.org/software/coreutils/"
0x0000bedf      488d15f0ba00.  lea rdx, str.GNU_coreutils              ; 0x179d6 ; "GNU coreutils"
0x0000bee6      4889c6         mov rsi, rax
0x0000bee9      bf01000000     mov edi, 1
0x0000beee      31c0           xor eax, eax
0x0000bef0      e81b78ffff     call sym.imp.__printf_chk
0x0000bef5      31f6           xor esi, esi
0x0000bef7      bf05000000     mov edi, 5
0x0000befc      e8ff77ffff     call sym.imp.setlocale
0x0000bf01      4885c0         test rax, rax
0x0000bf04      741c           je 0xbf22
0x0000bf06      488d35d7ba00.  lea rsi, [0x000179e4]                   ; "en_"
0x0000bf0d      ba03000000     mov edx, 3
0x0000bf12      4889c7         mov rdi, rax
0x0000bf15      e89673ffff     call sym.imp.strncmp
0x0000bf1a      85c0           test eax, eax
0x0000bf1c      0f85f7000000   jne 0xc019
0x0000bf22      488d35bfba00.  lea rsi, str.Full_documentation___s_s   ; 0x179e8 ; "Full documentation <%s%s>\n"
0x0000bf29      31ff           xor edi, edi
0x0000bf2b      ba05000000     mov edx, 5
0x0000bf30      e8ab74ffff     call sym.imp.dcgettext
0x0000bf35      488d152cdd00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x19c68 ; "https://www.gnu.org/software/coreutils/"
0x0000bf3c      4889e9         mov rcx, rbp
0x0000bf3f      4889c6         mov rsi, rax
0x0000bf42      bf01000000     mov edi, 1
0x0000bf47      31c0           xor eax, eax
0x0000bf49      e8c277ffff     call sym.imp.__printf_chk
0x0000bf4e      4839dd         cmp rbp, rbx
0x0000bf51      488d0d24ba00.  lea rcx, [0x0001797c]                   ; " invocation"
0x0000bf58      488d2d54b900.  lea rbp, [0x000178b3]
0x0000bf5f      480f44e9       cmove rbp, rcx
0x0000bf63      488d356edd00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x19cd8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000bf6a      31ff           xor edi, edi
0x0000bf6c      ba05000000     mov edx, 5
0x0000bf71      e86a74ffff     call sym.imp.dcgettext
0x0000bf76      4889e9         mov rcx, rbp
0x0000bf79      4889c6         mov rsi, rax
0x0000bf7c      4889da         mov rdx, rbx
0x0000bf7f      bf01000000     mov edi, 1
0x0000bf84      31c0           xor eax, eax
0x0000bf86      e88577ffff     call sym.imp.__printf_chk
0x0000bf8b      e9d7f9ffff     jmp 0xb967
0x0000bf90      e84b74ffff     call sym.imp.dcgettext
0x0000bf95      488d0dccdc00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x19c68 ; "https://www.gnu.org/software/coreutils/"
0x0000bf9c      488d1533ba00.  lea rdx, str.GNU_coreutils              ; 0x179d6 ; "GNU coreutils"
0x0000bfa3      4889c6         mov rsi, rax
0x0000bfa6      bf01000000     mov edi, 1
0x0000bfab      31c0           xor eax, eax
0x0000bfad      e85e77ffff     call sym.imp.__printf_chk
0x0000bfb2      31f6           xor esi, esi
0x0000bfb4      bf05000000     mov edi, 5
0x0000bfb9      e84277ffff     call sym.imp.setlocale
0x0000bfbe      4885c0         test rax, rax
0x0000bfc1      7418           je 0xbfdb
0x0000bfc3      488d351aba00.  lea rsi, [0x000179e4]                   ; "en_"
0x0000bfca      ba03000000     mov edx, 3
0x0000bfcf      4889c7         mov rdi, rax
0x0000bfd2      e8d972ffff     call sym.imp.strncmp
0x0000bfd7      85c0           test eax, eax
0x0000bfd9      753b           jne 0xc016
0x0000bfdb      488d3506ba00.  lea rsi, str.Full_documentation___s_s   ; 0x179e8 ; "Full documentation <%s%s>\n"
0x0000bfe2      ba05000000     mov edx, 5
0x0000bfe7      31ff           xor edi, edi
0x0000bfe9      4889eb         mov rbx, rbp
0x0000bfec      e8ef73ffff     call sym.imp.dcgettext
0x0000bff1      488d1570dc00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x19c68 ; "https://www.gnu.org/software/coreutils/"
0x0000bff8      4889e9         mov rcx, rbp
0x0000bffb      4889c6         mov rsi, rax
0x0000bffe      bf01000000     mov edi, 1
0x0000c003      31c0           xor eax, eax
0x0000c005      488d2d70b900.  lea rbp, [0x0001797c]                   ; " invocation"
0x0000c00c      e8ff76ffff     call sym.imp.__printf_chk
0x0000c011      e94dffffff     jmp 0xbf63
0x0000c016      4889eb         mov rbx, rbp
0x0000c019      4c8b2d684221.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000c020      488d3569dc00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x19c90 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000c027      31ff           xor edi, edi
0x0000c029      ba05000000     mov edx, 5
0x0000c02e      e8ad73ffff     call sym.imp.dcgettext
0x0000c033      4c89ee         mov rsi, r13
0x0000c036      4889c7         mov rdi, rax
0x0000c039      e83275ffff     call sym.imp.fputs_unlocked
0x0000c03e      e9dffeffff     jmp 0xbf22
0x0000c043      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c04d      0f1f00         nop dword [rax]
;-- areadlink_with_size:
0x0000c050      4157           push r15                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c052      4156           push r14
0x0000c054      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c059      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c05b      4154           push r12
0x0000c05d      4989fd         mov r13, rdi
0x0000c060      55             push rbp
0x0000c061      53             push rbx
0x0000c062      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c066      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x0000c070      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x0000c07a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c07e      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c085      480f43d8       cmovae rbx, rax
0x0000c089      0f1f80000000.  nop dword [rax]
0x0000c090      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000c093      e8f077ffff     call 0x3888
0x0000c098      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000c09b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000c09e      743b           je 0xc0db                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000c0a0      4889da         mov rdx, rbx
0x0000c0a3      4889c6         mov rsi, rax
0x0000c0a6      4c89ef         mov rdi, r13
0x0000c0a9      e8b272ffff     call sym.imp.readlink
0x0000c0ae      4885c0         test rax, rax
0x0000c0b1      4989c4         mov r12, rax                            ; unistd.h:-169
0x0000c0b4      7852           js 0xc108
0x0000c0b6      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x0000c0b9      7765           ja 0xc120
0x0000c0bb      4889ef         mov rdi, rbp
0x0000c0be      e8bd77ffff     call sym..plt.got                       ; unistd.h:-162
0x0000c0c3      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x0000c0c6      7728           ja 0xc0f0                               ; unistd.h:-186
0x0000c0c8      4801db         add rbx, rbx
0x0000c0cb      4889df         mov rdi, rbx
0x0000c0ce      e8b577ffff     call 0x3888                             ; unistd.h:-184
0x0000c0d3      4885c0         test rax, rax
0x0000c0d6      4889c5         mov rbp, rax                            ; unistd.h:-152
0x0000c0d9      75c5           jne 0xc0a0
0x0000c0db      4883c408       add rsp, 8
0x0000c0df      4889e8         mov rax, rbp
0x0000c0e2      5b             pop rbx
0x0000c0e3      5d             pop rbp
0x0000c0e4      415c           pop r12
0x0000c0e6      415d           pop r13
0x0000c0e8      415e           pop r14
0x0000c0ea      415f           pop r15
0x0000c0ec      c3             ret
0x0000c0ed      0f1f00         nop dword [rax]
0x0000c0f0      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x0000c0f3      773b           ja 0xc130
0x0000c0f5      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000c0ff      eb8f           jmp 0xc090
0x0000c101      0f1f80000000.  nop dword [rax]
0x0000c108      e89371ffff     call sym.imp.__errno_location
0x0000c10d      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x0000c110      74a4           je 0xc0b6                               ; unistd.h:-172
0x0000c112      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x0000c115      31ed           xor ebp, ebp
0x0000c117      e86477ffff     call sym..plt.got                       ; unistd.h:-172
0x0000c11c      ebbd           jmp 0xc0db
0x0000c11e      6690           nop
0x0000c120      42c644250000   mov byte [rbp + r12], 0
0x0000c126      ebb3           jmp 0xc0db
0x0000c128      0f1f84000000.  nop dword [rax + rax]
0x0000c130      e86b71ffff     call sym.imp.__errno_location           ; unistd.h:-155
0x0000c135      31ed           xor ebp, ebp
0x0000c137      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c13d      eb9c           jmp 0xc0db
0x0000c13f      90             nop
;-- __argmatch_die:
0x0000c140      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x0000c145      e9c6f7ffff     jmp sym.usage
0x0000c14a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x0000c150      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x0000c152      4156           push r14
0x0000c154      4989f7         mov r15, rsi
0x0000c157      4155           push r13
0x0000c159      4154           push r12
0x0000c15b      4989cd         mov r13, rcx
0x0000c15e      55             push rbp
0x0000c15f      53             push rbx
0x0000c160      4889d5         mov rbp, rdx
0x0000c163      4883ec28       sub rsp, 0x28
0x0000c167      48897c2408     mov qword [rsp + 8], rdi
0x0000c16c      4889542418     mov qword [rsp + 0x18], rdx
0x0000c171      e88a72ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x0000c176      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c179      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x0000c181      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c184      0f84b3000000   je 0xc23d
0x0000c18a      4989c4         mov r12, rax
0x0000c18d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x0000c192      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c194      eb51           jmp 0xc1e7
0x0000c196      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c1a0      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x0000c1a5      4885c0         test rax, rax
0x0000c1a8      0f84a2000000   je 0xc250
0x0000c1ae      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x0000c1b2      4c89ea         mov rdx, r13
0x0000c1b5      4889ee         mov rsi, rbp
0x0000c1b8      490faffd       imul rdi, r13
0x0000c1bc      4801c7         add rdi, rax
0x0000c1bf      e88c73ffff     call sym.imp.memcmp
0x0000c1c4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x0000c1c6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000c1cb      b901000000     mov ecx, 1
0x0000c1d0      0f45c1         cmovne eax, ecx
0x0000c1d3      88442417       mov byte [rsp + 0x17], al
0x0000c1d7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c1db      4c01ed         add rbp, r13
0x0000c1de      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000c1e2      4d85f6         test r14, r14
0x0000c1e5      7441           je 0xc228
0x0000c1e7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000c1ec      4c89e2         mov rdx, r12
0x0000c1ef      4c89f7         mov rdi, r14
0x0000c1f2      e8b970ffff     call sym.imp.strncmp
0x0000c1f7      85c0           test eax, eax
0x0000c1f9      75dc           jne 0xc1d7
0x0000c1fb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000c1fe      e8fd71ffff     call sym.imp.strlen
0x0000c203      4c39e0         cmp rax, r12
0x0000c206      7458           je 0xc260
0x0000c208      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000c20d      7591           jne 0xc1a0
0x0000c20f      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x0000c213      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c217      4c01ed         add rbp, r13
0x0000c21a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000c21e      4d85f6         test r14, r14
0x0000c221      75c4           jne 0xc1e7
0x0000c223      0f1f440000     nop dword [rax + rax]
0x0000c228      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000c22d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000c234      480f440424     cmove rax, qword [rsp]
0x0000c239      48890424       mov qword [rsp], rax
0x0000c23d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x0000c241      4883c428       add rsp, 0x28
0x0000c245      5b             pop rbx
0x0000c246      5d             pop rbp
0x0000c247      415c           pop r12
0x0000c249      415d           pop r13
0x0000c24b      415e           pop r14
0x0000c24d      415f           pop r15
0x0000c24f      c3             ret
0x0000c250      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x0000c255      eb80           jmp 0xc1d7
0x0000c257      660f1f840000.  nop word [rax + rax]
0x0000c260      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x0000c264      ebd7           jmp 0xc23d
0x0000c266      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x0000c270      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x0000c274      4154           push r12
0x0000c276      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000c27b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000c27c      4989f4         mov r12, rsi
0x0000c27f      53             push rbx
0x0000c280      4889fd         mov rbp, rdi
0x0000c283      744b           je 0xc2d0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x0000c285      488d35c4dc00.  lea rsi, str.ambiguous_argument__s_for__s ; 0x19f50 ; "ambiguous argument %s for %s"
0x0000c28c      31ff           xor edi, edi
0x0000c28e      e84d71ffff     call sym.imp.dcgettext
0x0000c293      4889c3         mov rbx, rax
0x0000c296      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000c299      bf01000000     mov edi, 1
0x0000c29e      e89d7a0000     call sym.quote_n
0x0000c2a3      4c89e2         mov rdx, r12
0x0000c2a6      4889c5         mov rbp, rax
0x0000c2a9      be08000000     mov esi, 8
0x0000c2ae      31ff           xor edi, edi
0x0000c2b0      e8bb760000     call sym.quotearg_n_style
0x0000c2b5      4989e8         mov r8, rbp
0x0000c2b8      4889da         mov rdx, rbx
0x0000c2bb      4889c1         mov rcx, rax
0x0000c2be      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000c2bf      5d             pop rbp
0x0000c2c0      415c           pop r12
0x0000c2c2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000c2c4      31ff           xor edi, edi
0x0000c2c6      31c0           xor eax, eax
0x0000c2c8      e99374ffff     jmp sym.imp.error
0x0000c2cd      0f1f00         nop dword [rax]
0x0000c2d0      488d355edc00.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x19f35 ; "invalid argument %s for %s"
0x0000c2d7      31ff           xor edi, edi
0x0000c2d9      e80271ffff     call sym.imp.dcgettext
0x0000c2de      4889c3         mov rbx, rax
0x0000c2e1      ebb3           jmp 0xc296
0x0000c2e3      0f1f00         nop dword [rax]
0x0000c2e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x0000c2f0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c2f2      4156           push r14
0x0000c2f4      4989fe         mov r14, rdi
0x0000c2f7      4155           push r13
0x0000c2f9      4154           push r12
0x0000c2fb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000c2fd      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c2fe      53             push rbx
0x0000c2ff      4889f5         mov rbp, rsi
0x0000c302      488d3564dc00.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x19f6d ; "Valid arguments are:"
0x0000c309      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c30c      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x0000c311      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c315      488b1da43f21.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000c31c      e8bf70ffff     call sym.imp.dcgettext
0x0000c321      4889c7         mov rdi, rax
0x0000c324      4889de         mov rsi, rbx
0x0000c327      e84472ffff     call sym.imp.fputs_unlocked
0x0000c32c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c32f      4d85ff         test r15, r15
0x0000c332      0f8490000000   je 0xc3c8
0x0000c338      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000c33b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c33d      eb39           jmp 0xc378
0x0000c33f      90             nop
0x0000c340      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x0000c343      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c347      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000c34a      e8117a0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000c34f      488b3d6a3f21.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000c356      488d1525dc00.  lea rdx, [0x00019f82]                   ; "\n  - %s"
0x0000c35d      4889c1         mov rcx, rax
0x0000c360      be01000000     mov esi, 1
0x0000c365      31c0           xor eax, eax
0x0000c367      4c01e5         add rbp, r12
0x0000c36a      e89174ffff     call sym.imp.__fprintf_chk
0x0000c36f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c373      4d85ff         test r15, r15
0x0000c376      7450           je 0xc3c8
0x0000c378      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000c37b      74c3           je 0xc340
0x0000c37d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x0000c380      4889ee         mov rsi, rbp
0x0000c383      4c89ef         mov rdi, r13
0x0000c386      e8c571ffff     call sym.imp.memcmp
0x0000c38b      85c0           test eax, eax
0x0000c38d      75b1           jne 0xc340
0x0000c38f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x0000c392      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c396      4c01e5         add rbp, r12
0x0000c399      e8c2790000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000c39e      488b3d1b3f21.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000c3a5      488d15dedb00.  lea rdx, str.s                          ; 0x19f8a ; ", %s"
0x0000c3ac      4889c1         mov rcx, rax
0x0000c3af      be01000000     mov esi, 1
0x0000c3b4      31c0           xor eax, eax
0x0000c3b6      e84574ffff     call sym.imp.__fprintf_chk
0x0000c3bb      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c3bf      4d85ff         test r15, r15
0x0000c3c2      75b4           jne 0xc378
0x0000c3c4      0f1f4000       nop dword [rax]
0x0000c3c8      488b3df13e21.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000c3cf      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x0000c3d3      483b4730       cmp rax, qword [rdi + 0x30]
0x0000c3d7      731f           jae 0xc3f8
0x0000c3d9      488d5001       lea rdx, [rax + 1]
0x0000c3dd      48895728       mov qword [rdi + 0x28], rdx
0x0000c3e1      c6000a         mov byte [rax], 0xa
0x0000c3e4      4883c408       add rsp, 8
0x0000c3e8      5b             pop rbx
0x0000c3e9      5d             pop rbp
0x0000c3ea      415c           pop r12
0x0000c3ec      415d           pop r13
0x0000c3ee      415e           pop r14
0x0000c3f0      415f           pop r15
0x0000c3f2      c3             ret
0x0000c3f3      0f1f440000     nop dword [rax + rax]
0x0000c3f8      4883c408       add rsp, 8
0x0000c3fc      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x0000c401      5b             pop rbx
0x0000c402      5d             pop rbp
0x0000c403      415c           pop r12
0x0000c405      415d           pop r13
0x0000c407      415e           pop r14
0x0000c409      415f           pop r15
0x0000c40b      e98070ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x0000c410      4157           push r15
0x0000c412      4156           push r14
0x0000c414      4989fe         mov r14, rdi
0x0000c417      4155           push r13
0x0000c419      4154           push r12
0x0000c41b      4989f4         mov r12, rsi
0x0000c41e      55             push rbp
0x0000c41f      53             push rbx
0x0000c420      4889cd         mov rbp, rcx
0x0000c423      4889d3         mov rbx, rdx
0x0000c426      4c89c1         mov rcx, r8
0x0000c429      4889ea         mov rdx, rbp
0x0000c42c      4883ec08       sub rsp, 8
0x0000c430      4889de         mov rsi, rbx
0x0000c433      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x0000c436      4d89c7         mov r15, r8
0x0000c439      4d89cd         mov r13, r9
0x0000c43c      e80ffdffff     call sym.argmatch
0x0000c441      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x0000c444      780f           js 0xc455                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x0000c446      4883c408       add rsp, 8
0x0000c44a      5b             pop rbx
0x0000c44b      5d             pop rbp
0x0000c44c      415c           pop r12
0x0000c44e      415d           pop r13
0x0000c450      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x0000c452      415f           pop r15
0x0000c454      c3             ret
0x0000c455      4889c2         mov rdx, rax
0x0000c458      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000c45b      4c89f7         mov rdi, r14
0x0000c45e      e80dfeffff     call sym.argmatch_invalid
0x0000c463      4c89fa         mov rdx, r15
0x0000c466      4889ee         mov rsi, rbp
0x0000c469      4889df         mov rdi, rbx
0x0000c46c      e87ffeffff     call sym.argmatch_valid
0x0000c471      41ffd5         call r13
0x0000c474      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000c47b      ebc9           jmp 0xc446
0x0000c47d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x0000c480      4156           push r14
0x0000c482      4155           push r13
0x0000c484      4154           push r12
0x0000c486      55             push rbp
0x0000c487      53             push rbx
0x0000c488      4c8b36         mov r14, qword [rsi]
0x0000c48b      4d85f6         test r14, r14
0x0000c48e      7431           je 0xc4c1
0x0000c490      4989cc         mov r12, rcx
0x0000c493      4989fd         mov r13, rdi
0x0000c496      4889d5         mov rbp, rdx
0x0000c499      488d5e08       lea rbx, [rsi + 8]
0x0000c49d      eb10           jmp 0xc4af                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000c49f      90             nop
0x0000c4a0      4c8b33         mov r14, qword [rbx]
0x0000c4a3      4c01e5         add rbp, r12
0x0000c4a6      4883c308       add rbx, 8
0x0000c4aa      4d85f6         test r14, r14
0x0000c4ad      7412           je 0xc4c1
0x0000c4af      4c89e2         mov rdx, r12
0x0000c4b2      4889ee         mov rsi, rbp
0x0000c4b5      4c89ef         mov rdi, r13
0x0000c4b8      e89370ffff     call sym.imp.memcmp
0x0000c4bd      85c0           test eax, eax
0x0000c4bf      75df           jne 0xc4a0
0x0000c4c1      5b             pop rbx
0x0000c4c2      4c89f0         mov rax, r14
0x0000c4c5      5d             pop rbp
0x0000c4c6      415c           pop r12
0x0000c4c8      415d           pop r13
0x0000c4ca      415e           pop r14
0x0000c4cc      c3             ret
0x0000c4cd      0f1f00         nop dword [rax]
;-- c_strncasecmp:
0x0000c4d0      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/c-strncasecmp.c:28
0x0000c4d3      745b           je 0xc530
0x0000c4d5      4885d2         test rdx, rdx
0x0000c4d8      7516           jne 0xc4f0
0x0000c4da      eb54           jmp 0xc530
0x0000c4dc      0f1f4000       nop dword [rax]
0x0000c4e0      84c0           test al, al                             ; ../coreutils-8.31/lib/c-strncasecmp.c:41
0x0000c4e2      743b           je 0xc51f
0x0000c4e4      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/c-strncasecmp.c:44
0x0000c4e8      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/c-strncasecmp.c:45
0x0000c4ec      38c8           cmp al, cl                              ; ../coreutils-8.31/lib/c-strncasecmp.c:47
0x0000c4ee      752f           jne 0xc51f
0x0000c4f0      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/c-strncasecmp.c:38
0x0000c4f3      89c1           mov ecx, eax
0x0000c4f5      448d4020       lea r8d, [rax + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000c4f9      83e941         sub ecx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x0000c4fc      80f91a         cmp cl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000c4ff      0fb60e         movzx ecx, byte [rsi]                   ; ../coreutils-8.31/lib/c-strncasecmp.c:39
0x0000c502      410f42c0       cmovb eax, r8d                          ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000c506      4189c8         mov r8d, ecx                            ; ../coreutils-8.31/lib/c-strncasecmp.c:39
0x0000c509      448d5120       lea r10d, [rcx + 0x20]                  ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000c50d      4183e841       sub r8d, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x0000c511      4180f81a       cmp r8b, 0x1a                           ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000c515      410f42ca       cmovb ecx, r10d
0x0000c519      4883ea01       sub rdx, 1                              ; ../coreutils-8.31/lib/c-strncasecmp.c:41
0x0000c51d      75c1           jne 0xc4e0
0x0000c51f      0fb6c9         movzx ecx, cl                           ; ../coreutils-8.31/lib/c-strncasecmp.c:50
0x0000c522      0fb6c0         movzx eax, al
0x0000c525      29c8           sub eax, ecx
0x0000c527      c3             ret
0x0000c528      0f1f84000000.  nop dword [rax + rax]
0x0000c530      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/c-strncasecmp.c:34
0x0000c532      c3             ret                                     ; ../coreutils-8.31/lib/c-strncasecmp.c:56
0x0000c533      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c53d      0f1f00         nop dword [rax]
;-- canonicalize_filename_mode:
0x0000c540      4157           push r15
0x0000c542      4156           push r14
0x0000c544      4155           push r13
0x0000c546      4154           push r12
0x0000c548      55             push rbp
0x0000c549      53             push rbx
0x0000c54a      4881ece80000.  sub rsp, 0xe8
0x0000c551      64488b042528.  mov rax, qword fs:[0x28]
0x0000c55a      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000c562      31c0           xor eax, eax
0x0000c564      89f0           mov eax, esi
0x0000c566      83e004         and eax, 4
0x0000c569      0f9544241b     setne byte [rsp + 0x1b]
0x0000c56e      83e603         and esi, 3
0x0000c571      8944241c       mov dword [rsp + 0x1c], eax
0x0000c575      8d46ff         lea eax, [rsi - 1]
0x0000c578      89742404       mov dword [rsp + 4], esi
0x0000c57c      85c6           test esi, eax
0x0000c57e      0f854c050000   jne 0xcad0
0x0000c584      4885ff         test rdi, rdi
0x0000c587      4989fe         mov r14, rdi
0x0000c58a      0f8440050000   je 0xcad0
0x0000c590      0fb607         movzx eax, byte [rdi]
0x0000c593      84c0           test al, al
0x0000c595      0f8475050000   je 0xcb10
0x0000c59b      3c2f           cmp al, 0x2f
0x0000c59d      0f84bd040000   je 0xca60
0x0000c5a3      e8a8830000     call sym.xgetcwd
0x0000c5a8      4885c0         test rax, rax
0x0000c5ab      4889c5         mov rbp, rax
0x0000c5ae      0f84ac010000   je 0xc760
0x0000c5b4      4889c7         mov rdi, rax
0x0000c5b7      e8446effff     call sym.imp.strlen
0x0000c5bc      483dff0f0000   cmp rax, 0xfff
0x0000c5c2      4989c7         mov r15, rax
0x0000c5c5      0f86b5040000   jbe 0xca80
0x0000c5cb      4901ef         add r15, rbp
0x0000c5ce      4c89fb         mov rbx, r15
0x0000c5d1      488d442440     lea rax, [rsp + 0x40]
0x0000c5d6      4c89742420     mov qword [rsp + 0x20], r14
0x0000c5db      48c744241000.  mov qword [rsp + 0x10], 0
0x0000c5e4      48c744243000.  mov qword [rsp + 0x30], 0
0x0000c5ed      48c744242800.  mov qword [rsp + 0x28], 0
0x0000c5f6      4889442408     mov qword [rsp + 8], rax
0x0000c5fb      410fb606       movzx eax, byte [r14]
0x0000c5ff      84c0           test al, al
0x0000c601      0f8408010000   je 0xc70f
0x0000c607      660f1f840000.  nop word [rax + rax]
0x0000c610      3c2f           cmp al, 0x2f
0x0000c612      7518           jne 0xc62c
0x0000c614      0f1f4000       nop dword [rax]
0x0000c618      4983c601       add r14, 1
0x0000c61c      410fb606       movzx eax, byte [r14]
0x0000c620      3c2f           cmp al, 0x2f
0x0000c622      74f4           je 0xc618
0x0000c624      84c0           test al, al
0x0000c626      0f84c4020000   je 0xc8f0
0x0000c62c      4d89f5         mov r13, r14
0x0000c62f      eb0c           jmp 0xc63d
0x0000c631      0f1f80000000.  nop dword [rax]
0x0000c638      80fa2f         cmp dl, 0x2f
0x0000c63b      740d           je 0xc64a
0x0000c63d      4983c501       add r13, 1
0x0000c641      410fb65500     movzx edx, byte [r13]
0x0000c646      84d2           test dl, dl
0x0000c648      75ee           jne 0xc638
0x0000c64a      4d39f5         cmp r13, r14
0x0000c64d      0f84bc000000   je 0xc70f
0x0000c653      4d89ec         mov r12, r13
0x0000c656      4d29f4         sub r12, r14
0x0000c659      4983fc01       cmp r12, 1
0x0000c65d      0f84cd010000   je 0xc830
0x0000c663      4983fc02       cmp r12, 2
0x0000c667      7508           jne 0xc671
0x0000c669      3c2e           cmp al, 0x2e
0x0000c66b      0f848f020000   je 0xc900
0x0000c671      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000c676      7408           je 0xc680
0x0000c678      41c6072f       mov byte [r15], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000c67c      4983c701       add r15, 1
0x0000c680      4b8d0427       lea rax, [r15 + r12]
0x0000c684      4839c3         cmp rbx, rax
0x0000c687      7731           ja 0xc6ba
0x0000c689      4829eb         sub rbx, rbp
0x0000c68c      4929ef         sub r15, rbp
0x0000c68f      4889ef         mov rdi, rbp
0x0000c692      498d441c01     lea rax, [r12 + rbx + 1]
0x0000c697      4881c3001000.  add rbx, 0x1000
0x0000c69e      4981fc001000.  cmp r12, 0x1000
0x0000c6a5      480f4dd8       cmovge rbx, rax
0x0000c6a9      4889de         mov rsi, rbx
0x0000c6ac      e83f7f0000     call sym.xrealloc
0x0000c6b1      4889c5         mov rbp, rax
0x0000c6b4      4801c3         add rbx, rax
0x0000c6b7      4901c7         add r15, rax
0x0000c6ba      4c89ff         mov rdi, r15
0x0000c6bd      4c89e2         mov rdx, r12
0x0000c6c0      4c89f6         mov rsi, r14
0x0000c6c3      e8286fffff     call sym.imp.memcpy
0x0000c6c8      837c240402     cmp dword [rsp + 4], 2
0x0000c6cd      4f8d3c27       lea r15, [r15 + r12]
0x0000c6d1      41c60700       mov byte [r15], 0
0x0000c6d5      0f85b5000000   jne 0xc790
0x0000c6db      807c241b00     cmp byte [rsp + 0x1b], 0
0x0000c6e0      0f84aa000000   je 0xc790
0x0000c6e6      c74424580000.  mov dword [rsp + 0x58], 0
0x0000c6ee      41807d0000     cmp byte [r13], 0
0x0000c6f3      740b           je 0xc700
0x0000c6f5      837c240402     cmp dword [rsp + 4], 2
0x0000c6fa      0f8557040000   jne 0xcb57
0x0000c700      4d89ee         mov r14, r13
0x0000c703      410fb606       movzx eax, byte [r14]
0x0000c707      84c0           test al, al
0x0000c709      0f8501ffffff   jne 0xc610
0x0000c70f      488d4501       lea rax, [rbp + 1]
0x0000c713      4939c7         cmp r15, rax
0x0000c716      760b           jbe 0xc723
0x0000c718      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000c71d      7504           jne 0xc723
0x0000c71f      4983ef01       sub r15, 1
0x0000c723      498d4701       lea rax, [r15 + 1]
0x0000c727      41c60700       mov byte [r15], 0
0x0000c72b      4839c3         cmp rbx, rax
0x0000c72e      7412           je 0xc742
0x0000c730      4929ef         sub r15, rbp
0x0000c733      4889ef         mov rdi, rbp
0x0000c736      498d7701       lea rsi, [r15 + 1]
0x0000c73a      e8b17e0000     call sym.xrealloc
0x0000c73f      4889c5         mov rbp, rax
0x0000c742      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c747      e83471ffff     call sym..plt.got
0x0000c74c      488b442410     mov rax, qword [rsp + 0x10]
0x0000c751      4885c0         test rax, rax
0x0000c754      740a           je 0xc760
0x0000c756      4889c7         mov rdi, rax
0x0000c759      e8a21a0000     call sym.hash_free
0x0000c75e      6690           nop
0x0000c760      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x0000c768      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000c771      4889e8         mov rax, rbp
0x0000c774      0f85f7030000   jne 0xcb71
0x0000c77a      4881c4e80000.  add rsp, 0xe8
0x0000c781      5b             pop rbx
0x0000c782      5d             pop rbp
0x0000c783      415c           pop r12
0x0000c785      415d           pop r13
0x0000c787      415e           pop r14
0x0000c789      415f           pop r15
0x0000c78b      c3             ret
0x0000c78c      0f1f4000       nop dword [rax]
0x0000c790      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000c794      488b542408     mov rdx, qword [rsp + 8]
0x0000c799      4889ee         mov rsi, rbp
0x0000c79c      bf01000000     mov edi, 1
0x0000c7a1      85c0           test eax, eax
0x0000c7a3      0f84b7000000   je 0xc860
0x0000c7a9      e8926effff     call sym.imp.__xstat
0x0000c7ae      85c0           test eax, eax
0x0000c7b0      0f95c0         setne al
0x0000c7b3      84c0           test al, al
0x0000c7b5      0f8485000000   je 0xc840
0x0000c7bb      e8e06affff     call sym.imp.__errno_location
0x0000c7c0      4989c6         mov r14, rax
0x0000c7c3      8b10           mov edx, dword [rax]
0x0000c7c5      8b442404       mov eax, dword [rsp + 4]
0x0000c7c9      85c0           test eax, eax
0x0000c7cb      7431           je 0xc7fe
0x0000c7cd      83f801         cmp eax, 1
0x0000c7d0      0f8510ffffff   jne 0xc6e6
0x0000c7d6      488d35f0b300.  lea rsi, [0x00017bcd]                   ; "/"
0x0000c7dd      4c89ef         mov rdi, r13
0x0000c7e0      89542438       mov dword [rsp + 0x38], edx
0x0000c7e4      e8476dffff     call sym.imp.strspn
0x0000c7e9      41807c050000   cmp byte [r13 + rax], 0
0x0000c7ef      8b542438       mov edx, dword [rsp + 0x38]
0x0000c7f3      7509           jne 0xc7fe
0x0000c7f5      83fa02         cmp edx, 2
0x0000c7f8      0f8402ffffff   je 0xc700
0x0000c7fe      4d89f4         mov r12, r14
0x0000c801      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c806      89542404       mov dword [rsp + 4], edx
0x0000c80a      e87170ffff     call sym..plt.got
0x0000c80f      4889ef         mov rdi, rbp
0x0000c812      e86970ffff     call sym..plt.got
0x0000c817      48837c241000   cmp qword [rsp + 0x10], 0
0x0000c81d      8b542404       mov edx, dword [rsp + 4]
0x0000c821      0f84b5000000   je 0xc8dc
0x0000c827      e99e000000     jmp 0xc8ca
0x0000c82c      0f1f4000       nop dword [rax]
0x0000c830      3c2e           cmp al, 0x2e
0x0000c832      0f8539feffff   jne 0xc671
0x0000c838      e9c3feffff     jmp 0xc700
0x0000c83d      0f1f00         nop dword [rax]
0x0000c840      8b442458       mov eax, dword [rsp + 0x58]
0x0000c844      2500f00000     and eax, 0xf000
0x0000c849      3d00a00000     cmp eax, 0xa000
0x0000c84e      7420           je 0xc870
0x0000c850      3d00400000     cmp eax, 0x4000
0x0000c855      0f84a5feffff   je 0xc700
0x0000c85b      e98efeffff     jmp 0xc6ee
0x0000c860      e8ab6bffff     call sym.imp.__lxstat
0x0000c865      85c0           test eax, eax
0x0000c867      0f95c0         setne al
0x0000c86a      e944ffffff     jmp 0xc7b3
0x0000c86f      90             nop
0x0000c870      48837c241000   cmp qword [rsp + 0x10], 0
0x0000c876      0f84aa010000   je 0xca26
0x0000c87c      488b542408     mov rdx, qword [rsp + 8]
0x0000c881      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c886      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c88b      e8d0050000     call sym.seen_file
0x0000c890      84c0           test al, al
0x0000c892      0f84b8000000   je 0xc950
0x0000c898      837c240402     cmp dword [rsp + 4], 2
0x0000c89d      0f845dfeffff   je 0xc700
0x0000c8a3      e8f869ffff     call sym.imp.__errno_location
0x0000c8a8      ba28000000     mov edx, 0x28                           ; '('
0x0000c8ad      4989c4         mov r12, rax
0x0000c8b0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c8b5      89542404       mov dword [rsp + 4], edx
0x0000c8b9      e8c26fffff     call sym..plt.got
0x0000c8be      4889ef         mov rdi, rbp
0x0000c8c1      e8ba6fffff     call sym..plt.got
0x0000c8c6      8b542404       mov edx, dword [rsp + 4]
0x0000c8ca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c8cf      89542404       mov dword [rsp + 4], edx
0x0000c8d3      e828190000     call sym.hash_free
0x0000c8d8      8b542404       mov edx, dword [rsp + 4]
0x0000c8dc      41891424       mov dword [r12], edx
0x0000c8e0      31ed           xor ebp, ebp
0x0000c8e2      e979feffff     jmp 0xc760
0x0000c8e7      660f1f840000.  nop word [rax + rax]
0x0000c8f0      4d89f5         mov r13, r14
0x0000c8f3      e952fdffff     jmp 0xc64a
0x0000c8f8      0f1f84000000.  nop dword [rax + rax]
0x0000c900      41807e012e     cmp byte [r14 + 1], 0x2e
0x0000c905      0f8566fdffff   jne 0xc671
0x0000c90b      488d4501       lea rax, [rbp + 1]
0x0000c90f      4d89ee         mov r14, r13
0x0000c912      4939c7         cmp r15, rax
0x0000c915      0f86e0fcffff   jbe 0xc5fb
0x0000c91b      498d47ff       lea rax, [r15 - 1]
0x0000c91f      4839c5         cmp rbp, rax
0x0000c922      0f8341020000   jae 0xcb69
0x0000c928      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x0000c92d      4989c7         mov r15, rax
0x0000c930      0f84c5fcffff   je 0xc5fb
0x0000c936      4983ef01       sub r15, 1
0x0000c93a      4c39fd         cmp rbp, r15
0x0000c93d      0f84bdfdffff   je 0xc700
0x0000c943      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000c948      0f84b2fdffff   je 0xc700
0x0000c94e      ebe6           jmp 0xc936
0x0000c950      488b542408     mov rdx, qword [rsp + 8]
0x0000c955      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c95a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c95f      e86c040000     call sym.record_file
0x0000c964      488b742470     mov rsi, qword [rsp + 0x70]
0x0000c969      4889ef         mov rdi, rbp
0x0000c96c      e8dff6ffff     call sym.areadlink_with_size
0x0000c971      4885c0         test rax, rax
0x0000c974      4989c6         mov r14, rax
0x0000c977      0f8465010000   je 0xcae2
0x0000c97d      4889c7         mov rdi, rax
0x0000c980      e87b6affff     call sym.imp.strlen
0x0000c985      4c89ef         mov rdi, r13
0x0000c988      4989c4         mov r12, rax
0x0000c98b      4889442420     mov qword [rsp + 0x20], rax
0x0000c990      e86b6affff     call sym.imp.strlen
0x0000c995      48837c243000   cmp qword [rsp + 0x30], 0
0x0000c99b      4889c2         mov rdx, rax
0x0000c99e      498d4c1401     lea rcx, [r12 + rdx + 1]
0x0000c9a3      0f84f6000000   je 0xca9f
0x0000c9a9      48394c2430     cmp qword [rsp + 0x30], rcx
0x0000c9ae      7321           jae 0xc9d1
0x0000c9b0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000c9b5      4889ce         mov rsi, rcx
0x0000c9b8      4889542438     mov qword [rsp + 0x38], rdx
0x0000c9bd      48894c2430     mov qword [rsp + 0x30], rcx
0x0000c9c2      e8297c0000     call sym.xrealloc
0x0000c9c7      488b542438     mov rdx, qword [rsp + 0x38]
0x0000c9cc      4889442428     mov qword [rsp + 0x28], rax
0x0000c9d1      4c8b642428     mov r12, qword [rsp + 0x28]
0x0000c9d6      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000c9db      4883c201       add rdx, 1
0x0000c9df      4c89ee         mov rsi, r13
0x0000c9e2      4c01e7         add rdi, r12
0x0000c9e5      4d89e5         mov r13, r12
0x0000c9e8      e8636dffff     call sym.imp.memmove
0x0000c9ed      488b542420     mov rdx, qword [rsp + 0x20]
0x0000c9f2      4c89f6         mov rsi, r14
0x0000c9f5      4c89e7         mov rdi, r12
0x0000c9f8      e8f36bffff     call sym.imp.memcpy
0x0000c9fd      41803e2f       cmp byte [r14], 0x2f
0x0000ca01      4c89642420     mov qword [rsp + 0x20], r12
0x0000ca06      488d4501       lea rax, [rbp + 1]
0x0000ca0a      0f84f4000000   je 0xcb04
0x0000ca10      4939c7         cmp r15, rax
0x0000ca13      0f8709010000   ja 0xcb22
0x0000ca19      4c89f7         mov rdi, r14
0x0000ca1c      e85f6effff     call sym..plt.got
0x0000ca21      e9dafcffff     jmp 0xc700
0x0000ca26      4c8d05a32000.  lea r8, sym.triple_free                 ; 0xead0 ; "SH\x89\xfbH\x8b?\xe8\xa4M\xff\xffH\x89\xdf[\xe9\x9bM\xff\xfff.\x0f\x1f\x84"
0x0000ca2d      488d0d5c2000.  lea rcx, sym.triple_compare_ino_str     ; 0xea90 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\xd7J\xff\xff\x85\xc0\x0f\x94\xc0H\x83\xc4\b\xc3\x0f\x1f"
0x0000ca34      31f6           xor esi, esi
0x0000ca36      488d15e31f00.  lea rdx, sym.triple_hash                ; 0xea20 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xecr"
0x0000ca3d      bf07000000     mov edi, 7
0x0000ca42      e869150000     call sym.hash_initialize
0x0000ca47      4885c0         test rax, rax
0x0000ca4a      4889442410     mov qword [rsp + 0x10], rax
0x0000ca4f      0f8527feffff   jne 0xc87c
0x0000ca55      e8867d0000     call sym.xalloc_die
0x0000ca5a      660f1f440000   nop word [rax + rax]
0x0000ca60      bf00100000     mov edi, 0x1000
0x0000ca65      e8267b0000     call sym.xmalloc
0x0000ca6a      4889c5         mov rbp, rax
0x0000ca6d      488d98001000.  lea rbx, [rax + 0x1000]
0x0000ca74      4c8d7801       lea r15, [rax + 1]
0x0000ca78      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000ca7b      e951fbffff     jmp 0xc5d1
0x0000ca80      4889ef         mov rdi, rbp
0x0000ca83      be00100000     mov esi, 0x1000
0x0000ca88      e8637b0000     call sym.xrealloc
0x0000ca8d      4889c5         mov rbp, rax
0x0000ca90      4901c7         add r15, rax
0x0000ca93      488d98001000.  lea rbx, [rax + 0x1000]
0x0000ca9a      e932fbffff     jmp 0xc5d1
0x0000ca9f      4881f9001000.  cmp rcx, 0x1000
0x0000caa6      b800100000     mov eax, 0x1000
0x0000caab      4889542438     mov qword [rsp + 0x38], rdx
0x0000cab0      480f43c1       cmovae rax, rcx
0x0000cab4      4889c7         mov rdi, rax
0x0000cab7      4889442430     mov qword [rsp + 0x30], rax
0x0000cabc      e8cf7a0000     call sym.xmalloc
0x0000cac1      488b542438     mov rdx, qword [rsp + 0x38]
0x0000cac6      4889442428     mov qword [rsp + 0x28], rax
0x0000cacb      e901ffffff     jmp 0xc9d1
0x0000cad0      e8cb67ffff     call sym.imp.__errno_location
0x0000cad5      31ed           xor ebp, ebp
0x0000cad7      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x52700000
0x0000cadd      e97efcffff     jmp 0xc760
0x0000cae2      e8b967ffff     call sym.imp.__errno_location
0x0000cae7      837c240402     cmp dword [rsp + 4], 2
0x0000caec      4989c6         mov r14, rax
0x0000caef      8b10           mov edx, dword [rax]
0x0000caf1      7509           jne 0xcafc
0x0000caf3      83fa0c         cmp edx, 0xc
0x0000caf6      0f8504fcffff   jne 0xc700
0x0000cafc      4d89f4         mov r12, r14
0x0000caff      e9acfdffff     jmp 0xc8b0
0x0000cb04      c645002f       mov byte [rbp], 0x2f                    ; '/'
0x0000cb08      4989c7         mov r15, rax
0x0000cb0b      e909ffffff     jmp 0xca19
0x0000cb10      e88b67ffff     call sym.imp.__errno_location
0x0000cb15      31ed           xor ebp, ebp
0x0000cb17      c70002000000   mov dword [rax], 2
0x0000cb1d      e93efcffff     jmp 0xc760
0x0000cb22      498d47ff       lea rax, [r15 - 1]
0x0000cb26      4839c5         cmp rbp, rax
0x0000cb29      7307           jae 0xcb32
0x0000cb2b      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x0000cb30      750b           jne 0xcb3d
0x0000cb32      4989c7         mov r15, rax
0x0000cb35      e9dffeffff     jmp 0xca19
0x0000cb3a      4c89f8         mov rax, r15
0x0000cb3d      4c8d78ff       lea r15, [rax - 1]
0x0000cb41      4c39fd         cmp rbp, r15
0x0000cb44      0f84cffeffff   je 0xca19
0x0000cb4a      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000cb4f      0f84c4feffff   je 0xca19
0x0000cb55      ebe3           jmp 0xcb3a
0x0000cb57      e84467ffff     call sym.imp.__errno_location
0x0000cb5c      ba14000000     mov edx, 0x14
0x0000cb61      4989c4         mov r12, rax
0x0000cb64      e998fcffff     jmp 0xc801
0x0000cb69      4989c7         mov r15, rax
0x0000cb6c      e98afaffff     jmp 0xc5fb
0x0000cb71      e8aa68ffff     call sym.imp.__stack_chk_fail
0x0000cb76      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x0000cb80      48893d514821.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2213d8:8]=0
0x0000cb87      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x0000cb88      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x0000cb90      40883d394821.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2213d0:1]=0
0x0000cb97      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x0000cb98      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x0000cba0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x0000cba1      53             push rbx
0x0000cba2      4883ec08       sub rsp, 8
0x0000cba6      488b3ddb3621.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x0000cbad      e8ce900000     call sym.close_stream
0x0000cbb2      85c0           test eax, eax
0x0000cbb4      7416           je 0xcbcc
0x0000cbb6      e8e566ffff     call sym.imp.__errno_location
0x0000cbbb      803d0e482100.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2213d0:1]=0
0x0000cbc2      4889c3         mov rbx, rax
0x0000cbc5      741c           je 0xcbe3
0x0000cbc7      833820         cmp dword [rax], 0x20
0x0000cbca      7517           jne 0xcbe3
0x0000cbcc      488b3ded3621.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x0000cbd3      e8a8900000     call sym.close_stream
0x0000cbd8      85c0           test eax, eax
0x0000cbda      7546           jne 0xcc22
0x0000cbdc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x0000cbe0      5b             pop rbx
0x0000cbe1      5d             pop rbp
0x0000cbe2      c3             ret
0x0000cbe3      488d35a5d300.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x19f8f ; "write error"
0x0000cbea      31ff           xor edi, edi
0x0000cbec      ba05000000     mov edx, 5
0x0000cbf1      e8ea67ffff     call sym.imp.dcgettext
0x0000cbf6      488b3ddb4721.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2213d8:8]=0
0x0000cbfd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x0000cc00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x0000cc03      7428           je 0xcc2d
0x0000cc05      e8566f0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000cc0a      8b33           mov esi, dword [rbx]
0x0000cc0c      488d1545ae00.  lea rdx, str.s:__s                      ; 0x17a58 ; "%s: %s"
0x0000cc13      4889c1         mov rcx, rax
0x0000cc16      4989e8         mov r8, rbp
0x0000cc19      31ff           xor edi, edi
0x0000cc1b      31c0           xor eax, eax
0x0000cc1d      e83e6bffff     call sym.imp.error
0x0000cc22      8b3dd0352100   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x2201f8:4]=1
0x0000cc28      e8a366ffff     call sym.imp._exit
0x0000cc2d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000cc2f      488d1556d300.  lea rdx, [0x00019f8c]                   ; "%s"
0x0000cc36      4889c1         mov rcx, rax
0x0000cc39      31ff           xor edi, edi
0x0000cc3b      31c0           xor eax, eax
0x0000cc3d      e81e6bffff     call sym.imp.error
0x0000cc42      ebde           jmp 0xcc22
0x0000cc44      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cc4e      6690           nop
;-- dir_len:
0x0000cc50      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000cc51      53             push rbx
0x0000cc52      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000cc54      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x0000cc57      4883ec08       sub rsp, 8
0x0000cc5b      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x0000cc5e      400f94c5       sete bpl
0x0000cc62      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000cc67      4889c1         mov rcx, rax
0x0000cc6a      4829d9         sub rcx, rbx
0x0000cc6d      4839e9         cmp rcx, rbp
0x0000cc70      762e           jbe 0xcca0
0x0000cc72      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000cc76      488d51ff       lea rdx, [rcx - 1]
0x0000cc7a      7412           je 0xcc8e
0x0000cc7c      eb22           jmp 0xcca0
0x0000cc7e      6690           nop
0x0000cc80      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000cc85      488d42ff       lea rax, [rdx - 1]
0x0000cc89      7508           jne 0xcc93
0x0000cc8b      4889c2         mov rdx, rax
0x0000cc8e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x0000cc91      75ed           jne 0xcc80
0x0000cc93      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000cc97      4889d0         mov rax, rdx
0x0000cc9a      5b             pop rbx
0x0000cc9b      5d             pop rbp
0x0000cc9c      c3             ret
0x0000cc9d      0f1f00         nop dword [rax]
0x0000cca0      4883c408       add rsp, 8
0x0000cca4      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x0000cca7      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000ccaa      5b             pop rbx
0x0000ccab      5d             pop rbp
0x0000ccac      c3             ret
0x0000ccad      0f1f00         nop dword [rax]
;-- mdir_name:
0x0000ccb0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x0000ccb1      53             push rbx
0x0000ccb2      4889fd         mov rbp, rdi
0x0000ccb5      4883ec08       sub rsp, 8
0x0000ccb9      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000ccbe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000ccc1      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000ccc4      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x0000ccc7      0fb6c0         movzx eax, al
0x0000ccca      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000cccf      e8b46bffff     call 0x3888
0x0000ccd4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000ccd7      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000ccda      741a           je 0xccf6                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000ccdc      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000ccdf      4889ee         mov rsi, rbp
0x0000cce2      4889c7         mov rdi, rax
0x0000cce5      e80669ffff     call sym.imp.memcpy
0x0000ccea      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000cced      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000ccf0      740e           je 0xcd00                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000ccf2      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x0000ccf6      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000ccfa      4889c8         mov rax, rcx
0x0000ccfd      5b             pop rbx
0x0000ccfe      5d             pop rbp
0x0000ccff      c3             ret
0x0000cd00      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x0000cd03      bb01000000     mov ebx, 1
0x0000cd08      ebe8           jmp 0xccf2
0x0000cd0a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x0000cd10      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x0000cd13      4889f8         mov rax, rdi
0x0000cd16      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000cd19      7511           jne 0xcd2c
0x0000cd1b      0f1f440000     nop dword [rax + rax]
0x0000cd20      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x0000cd24      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x0000cd27      80fa2f         cmp dl, 0x2f
0x0000cd2a      74f4           je 0xcd20
0x0000cd2c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000cd2e      743a           je 0xcd6a
0x0000cd30      4889c1         mov rcx, rax
0x0000cd33      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x0000cd35      eb1e           jmp 0xcd55
0x0000cd37      660f1f840000.  nop word [rax + rax]
0x0000cd40      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x0000cd43      7405           je 0xcd4a
0x0000cd45      4889c8         mov rax, rcx
0x0000cd48      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x0000cd4a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000cd4e      0fb611         movzx edx, byte [rcx]
0x0000cd51      84d2           test dl, dl
0x0000cd53      7415           je 0xcd6a
0x0000cd55      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x0000cd58      75e6           jne 0xcd40
0x0000cd5a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000cd5e      0fb611         movzx edx, byte [rcx]
0x0000cd61      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x0000cd66      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x0000cd68      75eb           jne 0xcd55
0x0000cd6a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x0000cd6c      0f1f4000       nop dword [rax]
;-- base_len:
0x0000cd70      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x0000cd71      4889fb         mov rbx, rdi
0x0000cd74      e88766ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000cd79      4883f801       cmp rax, 1
0x0000cd7d      760b           jbe 0xcd8a
0x0000cd7f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x0000cd84      488d50ff       lea rdx, [rax - 1]
0x0000cd88      740e           je 0xcd98
0x0000cd8a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000cd8b      c3             ret
0x0000cd8c      0f1f4000       nop dword [rax]
0x0000cd90      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x0000cd93      0f1f440000     nop dword [rax + rax]
0x0000cd98      4883fa01       cmp rdx, 1
0x0000cd9c      7412           je 0xcdb0
0x0000cd9e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x0000cda3      488d42ff       lea rax, [rdx - 1]
0x0000cda7      74e7           je 0xcd90
0x0000cda9      4889d0         mov rax, rdx
0x0000cdac      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000cdad      c3             ret
0x0000cdae      6690           nop
0x0000cdb0      b801000000     mov eax, 1
0x0000cdb5      5b             pop rbx
0x0000cdb6      c3             ret
0x0000cdb7      660f1f840000.  nop word [rax + rax]
;-- file_has_acl:
0x0000cdc0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/file-has-acl.c:46
0x0000cdc2      c3             ret
0x0000cdc3      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/file-has-acl.c:510
0x0000cdcd      0f1f00         nop dword [rax]
;-- record_file:
0x0000cdd0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x0000cdd3      747b           je 0xce50
0x0000cdd5      4155           push r13
0x0000cdd7      4154           push r12
0x0000cdd9      4989fd         mov r13, rdi
0x0000cddc      55             push rbp
0x0000cddd      53             push rbx
0x0000cdde      4989f4         mov r12, rsi
0x0000cde1      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x0000cde6      4889d5         mov rbp, rdx
0x0000cde9      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x0000cded      e89e770000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x0000cdf2      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x0000cdf5      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x0000cdf8      e8c3790000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x0000cdfd      488903         mov qword [rbx], rax
0x0000ce00      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x0000ce04      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x0000ce07      4c89ef         mov rdi, r13
0x0000ce0a      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x0000ce0e      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x0000ce12      48894310       mov qword [rbx + 0x10], rax
0x0000ce16      e895190000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x0000ce1b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x0000ce1e      7432           je 0xce52
0x0000ce20      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x0000ce23      741b           je 0xce40
0x0000ce25      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000ce29      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x0000ce2c      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x0000ce2d      5d             pop rbp
0x0000ce2e      415c           pop r12
0x0000ce30      415d           pop r13
0x0000ce32      e9991c0000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x0000ce37      660f1f840000.  nop word [rax + rax]
0x0000ce40      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x0000ce44      5b             pop rbx
0x0000ce45      5d             pop rbp
0x0000ce46      415c           pop r12
0x0000ce48      415d           pop r13
0x0000ce4a      c3             ret
0x0000ce4b      0f1f440000     nop dword [rax + rax]
0x0000ce50      f3c3           ret
0x0000ce52      e889790000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x0000ce57      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x0000ce60      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x0000ce64      64488b042528.  mov rax, qword fs:[0x28]
0x0000ce6d      4889442418     mov qword [rsp + 0x18], rax
0x0000ce72      31c0           xor eax, eax
0x0000ce74      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x0000ce77      7423           je 0xce9c
0x0000ce79      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000ce7d      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x0000ce81      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x0000ce84      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x0000ce89      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000ce8c      4889442410     mov qword [rsp + 0x10], rax
0x0000ce91      e8aa0e0000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x0000ce96      4885c0         test rax, rax
0x0000ce99      0f95c0         setne al
0x0000ce9c      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x0000cea1      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ceaa      7505           jne 0xceb1
0x0000ceac      4883c428       add rsp, 0x28
0x0000ceb0      c3             ret
0x0000ceb1      e86a65ffff     call sym.imp.__stack_chk_fail
0x0000ceb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- strmode:
0x0000cec0      89fa           mov edx, edi
0x0000cec2      b82d000000     mov eax, 0x2d                           ; '-'
0x0000cec7      81e200f00000   and edx, 0xf000
0x0000cecd      81fa00800000   cmp edx, 0x8000
0x0000ced3      745b           je 0xcf30
0x0000ced5      81fa00400000   cmp edx, 0x4000
0x0000cedb      b864000000     mov eax, 0x64                           ; 'd'
0x0000cee0      744e           je 0xcf30
0x0000cee2      81fa00600000   cmp edx, 0x6000                         ; "H\x8bu\bD\x89\xeaL\x89\xff\xe8\xc1\xf9\xff\xff\xeb\xc2\x0f\x1f\x80"
0x0000cee8      b862000000     mov eax, 0x62                           ; 'b'
0x0000ceed      7441           je 0xcf30
0x0000ceef      81fa00200000   cmp edx, 0x2000
0x0000cef5      b863000000     mov eax, 0x63                           ; 'c'
0x0000cefa      7434           je 0xcf30
0x0000cefc      81fa00a00000   cmp edx, 0xa000
0x0000cf02      b86c000000     mov eax, 0x6c                           ; 'l'
0x0000cf07      7427           je 0xcf30
0x0000cf09      81fa00100000   cmp edx, 0x1000
0x0000cf0f      b870000000     mov eax, 0x70                           ; 'p'
0x0000cf14      741a           je 0xcf30
0x0000cf16      81fa00c00000   cmp edx, 0xc000
0x0000cf1c      b873000000     mov eax, 0x73                           ; 's'
0x0000cf21      ba3f000000     mov edx, 0x3f                           ; '?'
0x0000cf26      0f45c2         cmovne eax, edx
0x0000cf29      0f1f80000000.  nop dword [rax]
0x0000cf30      8806           mov byte [rsi], al
0x0000cf32      89f8           mov eax, edi
0x0000cf34      2500010000     and eax, 0x100
0x0000cf39      83f801         cmp eax, 1
0x0000cf3c      19c0           sbb eax, eax
0x0000cf3e      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000cf41      83c072         add eax, 0x72
0x0000cf44      884601         mov byte [rsi + 1], al
0x0000cf47      89f8           mov eax, edi
0x0000cf49      2580000000     and eax, 0x80
0x0000cf4e      83f801         cmp eax, 1
0x0000cf51      19c0           sbb eax, eax
0x0000cf53      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000cf56      83c077         add eax, 0x77
0x0000cf59      884602         mov byte [rsi + 2], al
0x0000cf5c      89f8           mov eax, edi
0x0000cf5e      83e040         and eax, 0x40                           ; segment.PHDR
0x0000cf61      83f801         cmp eax, 1
0x0000cf64      19c0           sbb eax, eax
0x0000cf66      f7c700080000   test edi, 0x800
0x0000cf6c      0f849e000000   je 0xd010
0x0000cf72      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000cf75      83c073         add eax, 0x73
0x0000cf78      884603         mov byte [rsi + 3], al
0x0000cf7b      89f8           mov eax, edi
0x0000cf7d      83e020         and eax, 0x20                           ; "@"
0x0000cf80      83f801         cmp eax, 1
0x0000cf83      19c0           sbb eax, eax
0x0000cf85      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000cf88      83c072         add eax, 0x72
0x0000cf8b      884604         mov byte [rsi + 4], al
0x0000cf8e      89f8           mov eax, edi
0x0000cf90      83e010         and eax, 0x10
0x0000cf93      83f801         cmp eax, 1
0x0000cf96      19c0           sbb eax, eax
0x0000cf98      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000cf9b      83c077         add eax, 0x77
0x0000cf9e      884605         mov byte [rsi + 5], al
0x0000cfa1      89f8           mov eax, edi
0x0000cfa3      83e008         and eax, 8
0x0000cfa6      83f801         cmp eax, 1
0x0000cfa9      19c0           sbb eax, eax
0x0000cfab      f7c700040000   test edi, 0x400
0x0000cfb1      0f8481000000   je 0xd038
0x0000cfb7      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000cfba      83c073         add eax, 0x73
0x0000cfbd      884606         mov byte [rsi + 6], al
0x0000cfc0      89f8           mov eax, edi
0x0000cfc2      83e004         and eax, 4
0x0000cfc5      83f801         cmp eax, 1
0x0000cfc8      19c0           sbb eax, eax
0x0000cfca      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x0000cfcd      83c072         add eax, 0x72
0x0000cfd0      884607         mov byte [rsi + 7], al
0x0000cfd3      89f8           mov eax, edi
0x0000cfd5      83e002         and eax, 2
0x0000cfd8      83f801         cmp eax, 1
0x0000cfdb      19c0           sbb eax, eax
0x0000cfdd      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x0000cfe0      83c077         add eax, 0x77
0x0000cfe3      884608         mov byte [rsi + 8], al
0x0000cfe6      89f8           mov eax, edi
0x0000cfe8      83e001         and eax, 1
0x0000cfeb      83f801         cmp eax, 1
0x0000cfee      19c0           sbb eax, eax
0x0000cff0      81e700020000   and edi, 0x200
0x0000cff6      7428           je 0xd020
0x0000cff8      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x0000cffb      83c074         add eax, 0x74
0x0000cffe      884609         mov byte [rsi + 9], al
0x0000d001      b820000000     mov eax, 0x20                           ; "@"
0x0000d006      6689460a       mov word [rsi + 0xa], ax
0x0000d00a      c3             ret
0x0000d00b      0f1f440000     nop dword [rax + rax]
0x0000d010      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000d013      83c078         add eax, 0x78
0x0000d016      e95dffffff     jmp 0xcf78
0x0000d01b      0f1f440000     nop dword [rax + rax]
0x0000d020      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000d023      83c078         add eax, 0x78
0x0000d026      884609         mov byte [rsi + 9], al
0x0000d029      b820000000     mov eax, 0x20                           ; "@"
0x0000d02e      6689460a       mov word [rsi + 0xa], ax
0x0000d032      c3             ret
0x0000d033      0f1f440000     nop dword [rax + rax]
0x0000d038      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x0000d03b      83c078         add eax, 0x78
0x0000d03e      e97affffff     jmp 0xcfbd
0x0000d043      0f1f00         nop dword [rax]
0x0000d046      662e0f1f8400.  nop word cs:[rax + rax]
;-- filemodestring:
0x0000d050      8b7f18         mov edi, dword [rdi + 0x18]
0x0000d053      e968feffff     jmp sym.strmode
0x0000d058      0f1f84000000.  nop dword [rax + rax]
;-- file_name_concat:
0x0000d060      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x0000d064      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x0000d069      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000d06c      7405           je 0xd073
0x0000d06e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x0000d072      c3             ret
0x0000d073      e868770000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x0000d078      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x0000d080      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x0000d082      4156           push r14
0x0000d084      4989d7         mov r15, rdx
0x0000d087      4155           push r13
0x0000d089      4154           push r12
0x0000d08b      4989fc         mov r12, rdi
0x0000d08e      55             push rbp
0x0000d08f      53             push rbx
0x0000d090      4889f5         mov rbp, rsi
0x0000d093      4883ec18       sub rsp, 0x18
0x0000d097      e874fcffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000d09c      4889c3         mov rbx, rax
0x0000d09f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000d0a2      e8c9fcffff     call sym.base_len
0x0000d0a7      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000d0aa      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000d0ad      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000d0b0      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000d0b3      e84863ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000d0b8      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000d0bb      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000d0be      7430           je 0xd0f0                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000d0c0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x0000d0c6      0f84a4000000   je 0xd170
0x0000d0cc      31c0           xor eax, eax
0x0000d0ce      807d002f       cmp byte [rbp], 0x2f
0x0000d0d2      ba00000000     mov edx, 0
0x0000d0d7      0f95c0         setne al
0x0000d0da      48890424       mov qword [rsp], rax
0x0000d0de      b82f000000     mov eax, 0x2f                           ; '/'
0x0000d0e3      0f44c2         cmove eax, edx
0x0000d0e6      8844240f       mov byte [rsp + 0xf], al
0x0000d0ea      eb22           jmp 0xd10e
0x0000d0ec      0f1f4000       nop dword [rax]
0x0000d0f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x0000d0f2      807d002f       cmp byte [rbp], 0x2f
0x0000d0f6      ba00000000     mov edx, 0
0x0000d0fb      0f94c0         sete al
0x0000d0fe      48890424       mov qword [rsp], rax
0x0000d102      b82e000000     mov eax, 0x2e                           ; '.'
0x0000d107      0f45c2         cmovne eax, edx
0x0000d10a      8844240f       mov byte [rsp + 0xf], al
0x0000d10e      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000d113      48033c24       add rdi, qword [rsp]
0x0000d117      e86c67ffff     call 0x3888
0x0000d11c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000d11f      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x0000d122      7432           je 0xd156                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x0000d124      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d127      4889da         mov rdx, rbx
0x0000d12a      4c89e6         mov rsi, r12
0x0000d12d      e80e66ffff     call sym.imp.mempcpy
0x0000d132      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000d137      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000d13b      4801c7         add rdi, rax
0x0000d13e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000d141      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x0000d143      7403           je 0xd148                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x0000d145      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x0000d148      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d14b      4889ee         mov rsi, rbp
0x0000d14e      e8ed65ffff     call sym.imp.mempcpy
0x0000d153      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x0000d156      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000d15a      4c89e8         mov rax, r13
0x0000d15d      5b             pop rbx
0x0000d15e      5d             pop rbp
0x0000d15f      415c           pop r12
0x0000d161      415d           pop r13
0x0000d163      415e           pop r14
0x0000d165      415f           pop r15
0x0000d167      c3             ret
0x0000d168      0f1f84000000.  nop dword [rax + rax]
0x0000d170      48c704240000.  mov qword [rsp], 0
0x0000d178      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000d17d      eb8f           jmp 0xd10e
0x0000d17f      90             nop
;-- match_suffix:
0x0000d180      488b37         mov rsi, qword [rdi]                    ; ../coreutils-8.31/lib/filevercmp.c:35
0x0000d183      0fb616         movzx edx, byte [rsi]
0x0000d186      84d2           test dl, dl
0x0000d188      0f84b2000000   je 0xd240
0x0000d18e      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/filevercmp.c:37
0x0000d190      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filevercmp.c:36
0x0000d192      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/filevercmp.c:44
0x0000d195      41bb01000000   mov r11d, 1
0x0000d19b      49baffffff03.  movabs r10, 0x3ffffff03ffffff
0x0000d1a5      eb38           jmp 0xd1df
0x0000d1a7      660f1f840000.  nop word [rax + rax]
0x0000d1b0      0fbeca         movsx ecx, dl
0x0000d1b3      83e941         sub ecx, 0x41
0x0000d1b6      83f939         cmp ecx, 0x39
0x0000d1b9      770d           ja 0xd1c8
0x0000d1bb      4d89d9         mov r9, r11
0x0000d1be      49d3e1         shl r9, cl
0x0000d1c1      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/filevercmp.c:42
0x0000d1c3      4d85d1         test r9, r10
0x0000d1c6      7509           jne 0xd1d1
0x0000d1c8      31c9           xor ecx, ecx
0x0000d1ca      80fa7e         cmp dl, 0x7e
0x0000d1cd      490f45c0       cmovne rax, r8
0x0000d1d1      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/filevercmp.c:54
0x0000d1d5      488937         mov qword [rdi], rsi
0x0000d1d8      0fb616         movzx edx, byte [rsi]                   ; ../coreutils-8.31/lib/filevercmp.c:38
0x0000d1db      84d2           test dl, dl
0x0000d1dd      7432           je 0xd211
0x0000d1df      84c9           test cl, cl                             ; ../coreutils-8.31/lib/filevercmp.c:40
0x0000d1e1      75cd           jne 0xd1b0
0x0000d1e3      80fa2e         cmp dl, 0x2e                            ; ../coreutils-8.31/lib/filevercmp.c:46
0x0000d1e6      7430           je 0xd218
0x0000d1e8      80fa5a         cmp dl, 0x5a
0x0000d1eb      7f43           jg 0xd230
0x0000d1ed      80fa41         cmp dl, 0x41
0x0000d1f0      7ddf           jge 0xd1d1
0x0000d1f2      448d4ad0       lea r9d, [rdx - 0x30]
0x0000d1f6      4180f909       cmp r9b, 9
0x0000d1fa      76d5           jbe 0xd1d1
0x0000d1fc      80fa7e         cmp dl, 0x7e
0x0000d1ff      490f45c0       cmovne rax, r8
0x0000d203      4883c601       add rsi, 1
0x0000d207      488937         mov qword [rdi], rsi
0x0000d20a      0fb616         movzx edx, byte [rsi]
0x0000d20d      84d2           test dl, dl
0x0000d20f      75ce           jne 0xd1df
0x0000d211      f3c3           ret
0x0000d213      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/c-ctype.h:-79
0x0000d218      4885c0         test rax, rax
0x0000d21b      b901000000     mov ecx, 1
0x0000d220      480f44c6       cmove rax, rsi
0x0000d224      ebab           jmp 0xd1d1
0x0000d226      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d230      448d4a9f       lea r9d, [rdx - 0x61]
0x0000d234      4180f919       cmp r9b, 0x19
0x0000d238      77c2           ja 0xd1fc
0x0000d23a      eb95           jmp 0xd1d1
0x0000d23c      0f1f4000       nop dword [rax]
0x0000d240      31c0           xor eax, eax
0x0000d242      c3             ret                                     ; ../coreutils-8.31/lib/c-ctype.h:-249
0x0000d243      0f1f00         nop dword [rax]
0x0000d246      662e0f1f8400.  nop word cs:[rax + rax]
;-- filevercmp:
0x0000d250      4157           push r15
0x0000d252      4156           push r14
0x0000d254      4155           push r13
0x0000d256      4154           push r12
0x0000d258      55             push rbp                                ; ../coreutils-8.31/lib/c-ctype.h:-243
0x0000d259      53             push rbx
0x0000d25a      4889f5         mov rbp, rsi
0x0000d25d      4889fb         mov rbx, rdi
0x0000d260      4883ec38       sub rsp, 0x38
0x0000d264      64488b042528.  mov rax, qword fs:[0x28]
0x0000d26d      4889442428     mov qword [rsp + 0x28], rax
0x0000d272      31c0           xor eax, eax
0x0000d274      e81763ffff     call sym.imp.strcmp
0x0000d279      85c0           test eax, eax
0x0000d27b      4189c4         mov r12d, eax
0x0000d27e      0f8444020000   je 0xd4c8
0x0000d284      0fb603         movzx eax, byte [rbx]
0x0000d287      84c0           test al, al
0x0000d289      0f8479030000   je 0xd608
0x0000d28f      440fb64500     movzx r8d, byte [rbp]
0x0000d294      4584c0         test r8b, r8b
0x0000d297      0f8453020000   je 0xd4f0
0x0000d29d      4c8d0df8cc00.  lea r9, [0x00019f9c]                    ; u".C\u4f50\u4953X\u2023\u6e65\u7274\u6569\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u2023\u7562\u6b63\u7465\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u616d\u2078\u7562\u6b63\u7465\u6c20\u6e65\u7467\u3a68\u2520\u756c\n"
0x0000d2a4      b902000000     mov ecx, 2
0x0000d2a9      4889df         mov rdi, rbx
0x0000d2ac      4c89ce         mov rsi, r9
0x0000d2af      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d2b1      0f97c2         seta dl
0x0000d2b4      80da00         sbb dl, 0
0x0000d2b7      84d2           test dl, dl
0x0000d2b9      0f8449030000   je 0xd608
0x0000d2bf      b902000000     mov ecx, 2
0x0000d2c4      4c89ce         mov rsi, r9
0x0000d2c7      4889ef         mov rdi, rbp
0x0000d2ca      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d2cc      0f97c2         seta dl
0x0000d2cf      80da00         sbb dl, 0
0x0000d2d2      84d2           test dl, dl
0x0000d2d4      0f8416020000   je 0xd4f0
0x0000d2da      4c8d0dbacc00.  lea r9, [0x00019f9b]                    ; ".."
0x0000d2e1      b903000000     mov ecx, 3
0x0000d2e6      4889df         mov rdi, rbx
0x0000d2e9      4c89ce         mov rsi, r9
0x0000d2ec      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d2ee      0f97c2         seta dl
0x0000d2f1      80da00         sbb dl, 0
0x0000d2f4      84d2           test dl, dl
0x0000d2f6      0f840c030000   je 0xd608
0x0000d2fc      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/c-ctype.h:-219
0x0000d301      4c89ce         mov rsi, r9                             ; ../coreutils-8.31/lib/c-ctype.h:-218
0x0000d304      4889ef         mov rdi, rbp
0x0000d307      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d309      0f97c2         seta dl
0x0000d30c      80da00         sbb dl, 0
0x0000d30f      84d2           test dl, dl
0x0000d311      0f84d9010000   je 0xd4f0
0x0000d317      3c2e           cmp al, 0x2e
0x0000d319      0f84d1020000   je 0xd5f0
0x0000d31f      4180f82e       cmp r8b, 0x2e                           ; ../coreutils-8.31/lib/c-ctype.h:-215
0x0000d323      0f84c7010000   je 0xd4f0
0x0000d329      488d7c2418     lea rdi, [rsp + 0x18]
0x0000d32e      48895c2418     mov qword [rsp + 0x18], rbx             ; ../coreutils-8.31/lib/c-ctype.h:-212
0x0000d333      48896c2420     mov qword [rsp + 0x20], rbp
0x0000d338      e843feffff     call sym.match_suffix
0x0000d33d      488d7c2420     lea rdi, [rsp + 0x20]
0x0000d342      4989c5         mov r13, rax
0x0000d345      e836feffff     call sym.match_suffix
0x0000d34a      4d85ed         test r13, r13
0x0000d34d      0f840d020000   je 0xd560
0x0000d353      4929dd         sub r13, rbx
0x0000d356      4885c0         test rax, rax
0x0000d359      0f8414030000   je 0xd673
0x0000d35f      4829e8         sub rax, rbp
0x0000d362      4989c6         mov r14, rax
0x0000d365      4d39f5         cmp r13, r14
0x0000d368      0f84d2020000   je 0xd640
0x0000d36e      31f6           xor esi, esi
0x0000d370      31d2           xor edx, edx
0x0000d372      41ba01000000   mov r10d, 1
0x0000d378      49bfffffff03.  movabs r15, 0x3ffffff03ffffff
0x0000d382      4939d5         cmp r13, rdx
0x0000d385      7709           ja 0xd390
0x0000d387      4939f6         cmp r14, rsi
0x0000d38a      0f8638010000   jbe 0xd4c8
0x0000d390      4989f3         mov r11, rsi
0x0000d393      48892c24       mov qword [rsp], rbp
0x0000d397      4929d3         sub r11, rdx                            ; ../coreutils-8.31/lib/c-ctype.h:-149
0x0000d39a      4b8d441d00     lea rax, [r13 + r11]
0x0000d39f      4e8d4c1d00     lea r9, [rbp + r11]
0x0000d3a4      4889442408     mov qword [rsp + 8], rax
0x0000d3a9      0f1f80000000.  nop dword [rax]
0x0000d3b0      4939d5         cmp r13, rdx
0x0000d3b3      760b           jbe 0xd3c0
0x0000d3b5      0fb60413       movzx eax, byte [rbx + rdx]
0x0000d3b9      83e830         sub eax, 0x30
0x0000d3bc      3c09           cmp al, 9                               ; ../coreutils-8.31/lib/filevercmp.c:-290
0x0000d3be      771a           ja 0xd3da
0x0000d3c0      4939f6         cmp r14, rsi
0x0000d3c3      410fbe0411     movsx eax, byte [r9 + rdx]
0x0000d3c8      0f86c2010000   jbe 0xd590
0x0000d3ce      8d48d0         lea ecx, [rax - 0x30]
0x0000d3d1      80f909         cmp cl, 9
0x0000d3d4      0f86b6010000   jbe 0xd590                              ; ../coreutils-8.31/lib/filevercmp.c:-314
0x0000d3da      4939d5         cmp r13, rdx
0x0000d3dd      0f8430020000   je 0xd613
0x0000d3e3      0fb60413       movzx eax, byte [rbx + rdx]             ; ../coreutils-8.31/lib/filevercmp.c:-289
0x0000d3e7      8d48d0         lea ecx, [rax - 0x30]
0x0000d3ea      80f909         cmp cl, 9
0x0000d3ed      0f868d010000   jbe 0xd580                              ; ../coreutils-8.31/lib/c-ctype.h:-149
0x0000d3f3      440fb6c0       movzx r8d, al
0x0000d3f7      418d48bf       lea ecx, [r8 - 0x41]
0x0000d3fb      83f939         cmp ecx, 0x39                           ; ../coreutils-8.31/lib/filevercmp.c:-288
0x0000d3fe      770b           ja 0xd40b
0x0000d400      4c89d7         mov rdi, r10
0x0000d403      48d3e7         shl rdi, cl
0x0000d406      4c85ff         test rdi, r15
0x0000d409      750f           jne 0xd41a
0x0000d40b      4181c0000100.  add r8d, 0x100
0x0000d412      3c7e           cmp al, 0x7e
0x0000d414      0f84e6000000   je 0xd500
0x0000d41a      4939f6         cmp r14, rsi
0x0000d41d      7411           je 0xd430                               ; ../coreutils-8.31/lib/filevercmp.c:-281
0x0000d41f      410fb60411     movzx eax, byte [r9 + rdx]
0x0000d424      8d48d0         lea ecx, [rax - 0x30]
0x0000d427      80f909         cmp cl, 9
0x0000d42a      0f87f8000000   ja 0xd528
0x0000d430      31ff           xor edi, edi
0x0000d432      4439c7         cmp edi, r8d
0x0000d435      0f858d010000   jne 0xd5c8
0x0000d43b      4883c201       add rdx, 1
0x0000d43f      4883c601       add rsi, 1
0x0000d443      e968ffffff     jmp 0xd3b0
0x0000d448      0f1f84000000.  nop dword [rax + rax]
0x0000d450      4883c601       add rsi, 1
0x0000d454      0fbe443500     movsx eax, byte [rbp + rsi]
0x0000d459      3c30           cmp al, 0x30
0x0000d45b      74f3           je 0xd450
0x0000d45d      4829d6         sub rsi, rdx
0x0000d460      4531c0         xor r8d, r8d
0x0000d463      4989f1         mov r9, rsi
0x0000d466      4c8d5c3500     lea r11, [rbp + rsi]
0x0000d46b      eb29           jmp 0xd496
0x0000d46d      0f1f00         nop dword [rax]
0x0000d470      8d70d0         lea esi, [rax - 0x30]
0x0000d473      4080fe09       cmp sil, 9
0x0000d477      0f8763010000   ja 0xd5e0
0x0000d47d      4585c0         test r8d, r8d
0x0000d480      7507           jne 0xd489
0x0000d482      440fbec1       movsx r8d, cl
0x0000d486      4129c0         sub r8d, eax
0x0000d489      4883c201       add rdx, 1
0x0000d48d      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000d491      410fbe0413     movsx eax, byte [r11 + rdx]
0x0000d496      8d79d0         lea edi, [rcx - 0x30]
0x0000d499      4a8d340a       lea rsi, [rdx + r9]
0x0000d49d      4080ff09       cmp dil, 9
0x0000d4a1      76cd           jbe 0xd470
0x0000d4a3      83e830         sub eax, 0x30
0x0000d4a6      3c09           cmp al, 9
0x0000d4a8      0f86b5010000   jbe 0xd663
0x0000d4ae      4585c0         test r8d, r8d
0x0000d4b1      0f84cbfeffff   je 0xd382
0x0000d4b7      660f1f840000.  nop word [rax + rax]
0x0000d4c0      4589c4         mov r12d, r8d                           ; ../coreutils-8.31/lib/filevercmp.c:-572
0x0000d4c3      0f1f440000     nop dword [rax + rax]
0x0000d4c8      488b5c2428     mov rbx, qword [rsp + 0x28]
0x0000d4cd      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000d4d6      4489e0         mov eax, r12d
0x0000d4d9      0f858f010000   jne 0xd66e
0x0000d4df      4883c438       add rsp, 0x38
0x0000d4e3      5b             pop rbx
0x0000d4e4      5d             pop rbp                                 ; ../coreutils-8.31/lib/filevercmp.c:-570
0x0000d4e5      415c           pop r12
0x0000d4e7      415d           pop r13
0x0000d4e9      415e           pop r14
0x0000d4eb      415f           pop r15
0x0000d4ed      c3             ret
0x0000d4ee      6690           nop
0x0000d4f0      41bc01000000   mov r12d, 1
0x0000d4f6      ebd0           jmp 0xd4c8
0x0000d4f8      0f1f84000000.  nop dword [rax + rax]
0x0000d500      498d0413       lea rax, [r11 + rdx]
0x0000d504      4939c6         cmp r14, rax                            ; ../coreutils-8.31/lib/filevercmp.c:-704
0x0000d507      0f84b3000000   je 0xd5c0
0x0000d50d      410fb60411     movzx eax, byte [r9 + rdx]
0x0000d512      8d48d0         lea ecx, [rax - 0x30]
0x0000d515      80f909         cmp cl, 9
0x0000d518      0f86a2000000   jbe 0xd5c0
0x0000d51e      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000d524      0f1f4000       nop dword [rax]
0x0000d528      0fb6f8         movzx edi, al
0x0000d52b      8d4fbf         lea ecx, [rdi - 0x41]
0x0000d52e      83f939         cmp ecx, 0x39
0x0000d531      770f           ja 0xd542
0x0000d533      4c89d5         mov rbp, r10
0x0000d536      48d3e5         shl rbp, cl
0x0000d539      4c85fd         test rbp, r15
0x0000d53c      0f85f0feffff   jne 0xd432
0x0000d542      81c700010000   add edi, 0x100
0x0000d548      3c7e           cmp al, 0x7e
0x0000d54a      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000d54f      0f44f8         cmove edi, eax
0x0000d552      e9dbfeffff     jmp 0xd432
0x0000d557      660f1f840000.  nop word [rax + rax]
0x0000d560      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000d565      4929dd         sub r13, rbx
0x0000d568      4885c0         test rax, rax
0x0000d56b      0f85eefdffff   jne 0xd35f
0x0000d571      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000d576      4929ee         sub r14, rbp
0x0000d579      e9f0fdffff     jmp 0xd36e                              ; ../coreutils-8.31/lib/filevercmp.c:-734
0x0000d57e      6690           nop
0x0000d580      4531c0         xor r8d, r8d
0x0000d583      e992feffff     jmp 0xd41a
0x0000d588      0f1f84000000.  nop dword [rax + rax]
0x0000d590      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000d594      488b2c24       mov rbp, qword [rsp]
0x0000d598      80f930         cmp cl, 0x30
0x0000d59b      0f85b8feffff   jne 0xd459
0x0000d5a1      0f1f80000000.  nop dword [rax]
0x0000d5a8      4883c201       add rdx, 1
0x0000d5ac      0fb60c13       movzx ecx, byte [rbx + rdx]
0x0000d5b0      80f930         cmp cl, 0x30
0x0000d5b3      74f3           je 0xd5a8
0x0000d5b5      e99ffeffff     jmp 0xd459
0x0000d5ba      660f1f440000   nop word [rax + rax]
0x0000d5c0      31ff           xor edi, edi
0x0000d5c2      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000d5c8      4129f8         sub r8d, edi
0x0000d5cb      0f85effeffff   jne 0xd4c0
0x0000d5d1      e9f2feffff     jmp 0xd4c8
0x0000d5d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d5e0      41b801000000   mov r8d, 1
0x0000d5e6      e9d5feffff     jmp 0xd4c0
0x0000d5eb      0f1f440000     nop dword [rax + rax]
0x0000d5f0      4883c301       add rbx, 1
0x0000d5f4      4883c501       add rbp, 1
0x0000d5f8      4180f82e       cmp r8b, 0x2e
0x0000d5fc      0f8427fdffff   je 0xd329
0x0000d602      660f1f440000   nop word [rax + rax]
0x0000d608      41bcffffffff   mov r12d, 0xffffffff                    ; -1
0x0000d60e      e9b5feffff     jmp 0xd4c8
0x0000d613      4c3b742408     cmp r14, qword [rsp + 8]
0x0000d618      0f841dfeffff   je 0xd43b
0x0000d61e      430fb60429     movzx eax, byte [r9 + r13]
0x0000d623      8d48d0         lea ecx, [rax - 0x30]
0x0000d626      80f909         cmp cl, 9
0x0000d629      0f860cfeffff   jbe 0xd43b
0x0000d62f      4531c0         xor r8d, r8d
0x0000d632      e9f1feffff     jmp 0xd528
0x0000d637      660f1f840000.  nop word [rax + rax]
0x0000d640      4c89ea         mov rdx, r13
0x0000d643      4889ee         mov rsi, rbp
0x0000d646      4889df         mov rdi, rbx
0x0000d649      e8625cffff     call sym.imp.strncmp
0x0000d64e      85c0           test eax, eax
0x0000d650      0f8518fdffff   jne 0xd36e
0x0000d656      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000d65b      4929dd         sub r13, rbx
0x0000d65e      e90effffff     jmp 0xd571
0x0000d663      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x0000d669      e952feffff     jmp 0xd4c0
0x0000d66e      e8ad5dffff     call sym.imp.__stack_chk_fail
0x0000d673      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000d678      4929ee         sub r14, rbp
0x0000d67b      e9e5fcffff     jmp 0xd365
;-- gettime:
0x0000d680      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/gettime.c:30
0x0000d683      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x0000d685      e9e65cffff     jmp sym.imp.clock_gettime
0x0000d68a      660f1f440000   nop word [rax + rax]
;-- current_timespec:
0x0000d690      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/gettime.c:45
0x0000d694      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/gettime.c:32
0x0000d696      4889e6         mov rsi, rsp
0x0000d699      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/gettime.c:45
0x0000d6a2      4889442418     mov qword [rsp + 0x18], rax
0x0000d6a7      31c0           xor eax, eax
0x0000d6a9      e8c25cffff     call sym.imp.clock_gettime              ; ../coreutils-8.31/lib/gettime.c:32
0x0000d6ae      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/gettime.c:49
0x0000d6b3      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000d6bc      488b0424       mov rax, qword [rsp]
0x0000d6c0      488b542408     mov rdx, qword [rsp + 8]
0x0000d6c5      7505           jne 0xd6cc
0x0000d6c7      4883c428       add rsp, 0x28
0x0000d6cb      c3             ret
0x0000d6cc      e84f5dffff     call sym.imp.__stack_chk_fail
0x0000d6d1      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d6db      0f1f440000     nop dword [rax + rax]
;-- hard_locale:
0x0000d6e0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000d6e4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000d6e6      e81560ffff     call sym.imp.setlocale
0x0000d6eb      4889c2         mov rdx, rax
0x0000d6ee      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000d6f3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000d6f6      741d           je 0xd715
0x0000d6f8      488d3d9fc800.  lea rdi, [0x00019f9e]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000d6ff      b902000000     mov ecx, 2
0x0000d704      4889d6         mov rsi, rdx
0x0000d707      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d709      0f97c1         seta cl
0x0000d70c      80d900         sbb cl, 0
0x0000d70f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000d711      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000d713      750b           jne 0xd720
0x0000d715      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000d719      c3             ret
0x0000d71a      660f1f440000   nop word [rax + rax]
0x0000d720      488d3d79c800.  lea rdi, [0x00019fa0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "POSIX"
0x0000d727      b906000000     mov ecx, 6
0x0000d72c      4889d6         mov rsi, rdx
0x0000d72f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000d731      0f97c0         seta al
0x0000d734      1c00           sbb al, 0
0x0000d736      84c0           test al, al
0x0000d738      0f95c0         setne al
0x0000d73b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000d73f      c3             ret
;-- next_prime:
0x0000d740      4883ff0a       cmp rdi, 0xa
0x0000d744      b80a000000     mov eax, 0xa
0x0000d749      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x0000d753      480f42f8       cmovb rdi, rax
0x0000d757      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000d75b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000d75f      746e           je 0xd7cf
0x0000d761      0f1f80000000.  nop dword [rax]
0x0000d768      4889f8         mov rax, rdi
0x0000d76b      4889f9         mov rcx, rdi
0x0000d76e      49f7e1         mul r9
0x0000d771      4889d0         mov rax, rdx
0x0000d774      48d1e8         shr rax, 1
0x0000d777      488d0440       lea rax, [rax + rax*2]
0x0000d77b      4829c1         sub rcx, rax
0x0000d77e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x0000d782      4889c8         mov rax, rcx
0x0000d785      7639           jbe 0xd7c0
0x0000d787      4885c9         test rcx, rcx
0x0000d78a      7439           je 0xd7c5
0x0000d78c      41b810000000   mov r8d, 0x10
0x0000d792      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x0000d797      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000d79c      eb0b           jmp 0xd7a9
0x0000d79e      6690           nop
0x0000d7a0      4983c008       add r8, 8
0x0000d7a4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x0000d7a7      741c           je 0xd7c5
0x0000d7a9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000d7ad      31d2           xor edx, edx
0x0000d7af      4889f8         mov rax, rdi
0x0000d7b2      48f7f1         div rcx
0x0000d7b5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x0000d7b8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000d7bb      4889d0         mov rax, rdx
0x0000d7be      72e0           jb 0xd7a0
0x0000d7c0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x0000d7c3      750a           jne 0xd7cf
0x0000d7c5      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x0000d7c9      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000d7cd      7599           jne 0xd768
0x0000d7cf      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x0000d7d2      c3             ret
0x0000d7d3      0f1f00         nop dword [rax]
0x0000d7d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x0000d7e0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x0000d7e3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x0000d7e5      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x0000d7e9      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000d7ec      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000d7ef      c3             ret
;-- raw_comparator:
0x0000d7f0      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x0000d7f3      0f94c0         sete al
0x0000d7f6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x0000d7f7      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x0000d800      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x0000d801      4889fb         mov rbx, rdi
0x0000d804      4889f7         mov rdi, rsi
0x0000d807      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000d80b      ff5330         call qword [rbx + 0x30]
0x0000d80e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x0000d812      7609           jbe 0xd81d
0x0000d814      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x0000d818      480303         add rax, qword [rbx]
0x0000d81b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000d81c      c3             ret
0x0000d81d      e86e5affff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x0000d822      0f1f4000       nop dword [rax]
0x0000d826      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x0000d830      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x0000d832      4155           push r13
0x0000d834      4989d6         mov r14, rdx
0x0000d837      4154           push r12
0x0000d839      55             push rbp
0x0000d83a      4989fc         mov r12, rdi
0x0000d83d      53             push rbx
0x0000d83e      4889f5         mov rbp, rsi
0x0000d841      4189cd         mov r13d, ecx
0x0000d844      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x0000d849      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000d84c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000d84f      4885f6         test rsi, rsi
0x0000d852      0f84e8000000   je 0xd940
0x0000d858      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000d85b      4889c3         mov rbx, rax
0x0000d85e      0f848f000000   je 0xd8f3
0x0000d864      4889ef         mov rdi, rbp
0x0000d867      41ff542438     call qword [r12 + 0x38]
0x0000d86c      84c0           test al, al
0x0000d86e      0f857c000000   jne 0xd8f0
0x0000d874      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000d878      4885c0         test rax, rax
0x0000d87b      0f84bf000000   je 0xd940
0x0000d881      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000d884      4839f5         cmp rbp, rsi
0x0000d887      7520           jne 0xd8a9
0x0000d889      eb31           jmp 0xd8bc
0x0000d88b      0f1f440000     nop dword [rax + rax]
0x0000d890      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x0000d894      488b4308       mov rax, qword [rbx + 8]
0x0000d898      4885c0         test rax, rax
0x0000d89b      0f849f000000   je 0xd940
0x0000d8a1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x0000d8a4      4839ee         cmp rsi, rbp
0x0000d8a7      7413           je 0xd8bc
0x0000d8a9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000d8ac      41ff542438     call qword [r12 + 0x38]
0x0000d8b1      84c0           test al, al
0x0000d8b3      74db           je 0xd890
0x0000d8b5      488b4308       mov rax, qword [rbx + 8]
0x0000d8b9      488b30         mov rsi, qword [rax]
0x0000d8bc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000d8bf      741d           je 0xd8de
0x0000d8c1      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x0000d8c5      48895308       mov qword [rbx + 8], rdx
0x0000d8c9      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x0000d8d0      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x0000d8d5      48895008       mov qword [rax + 8], rdx
0x0000d8d9      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000d8de      5b             pop rbx
0x0000d8df      4889f0         mov rax, rsi
0x0000d8e2      5d             pop rbp
0x0000d8e3      415c           pop r12
0x0000d8e5      415d           pop r13
0x0000d8e7      415e           pop r14
0x0000d8e9      c3             ret
0x0000d8ea      660f1f440000   nop word [rax + rax]
0x0000d8f0      488b33         mov rsi, qword [rbx]
0x0000d8f3      4584ed         test r13b, r13b
0x0000d8f6      74e6           je 0xd8de
0x0000d8f8      488b4308       mov rax, qword [rbx + 8]
0x0000d8fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000d8ff      742f           je 0xd930
0x0000d901      f30f6f00       movdqu xmm0, xmmword [rax]
0x0000d905      0f1103         movups xmmword [rbx], xmm0
0x0000d908      48c700000000.  mov qword [rax], 0
0x0000d90f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x0000d914      48895008       mov qword [rax + 8], rdx
0x0000d918      4989442448     mov qword [r12 + 0x48], rax
0x0000d91d      4889f0         mov rax, rsi
0x0000d920      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x0000d921      5d             pop rbp
0x0000d922      415c           pop r12
0x0000d924      415d           pop r13
0x0000d926      415e           pop r14
0x0000d928      c3             ret
0x0000d929      0f1f80000000.  nop dword [rax]
0x0000d930      48c703000000.  mov qword [rbx], 0
0x0000d937      eba5           jmp 0xd8de
0x0000d939      0f1f80000000.  nop dword [rax]
0x0000d940      31f6           xor esi, esi
0x0000d942      5b             pop rbx
0x0000d943      4889f0         mov rax, rsi
0x0000d946      5d             pop rbp
0x0000d947      415c           pop r12
0x0000d949      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000d94b      415e           pop r14
0x0000d94d      c3             ret
0x0000d94e      6690           nop
;-- check_tuning.isra.0:
0x0000d950      488b17         mov rdx, qword [rdi]
0x0000d953      488d0dc6c600.  lea rcx, obj.default_tuning             ; 0x1a020
0x0000d95a      b801000000     mov eax, 1
0x0000d95f      4839ca         cmp rdx, rcx
0x0000d962      7461           je 0xd9c5
0x0000d964      f30f104208     movss xmm0, dword [rdx + 8]
0x0000d969      0f2e05c4c600.  ucomiss xmm0, dword [0x0001a034]
0x0000d970      764e           jbe 0xd9c0
0x0000d972      f30f100dbec6.  movss xmm1, dword [0x0001a038]          ; [0x1a038:4]=0x3f666666
0x0000d97a      0f2ec8         ucomiss xmm1, xmm0
0x0000d97d      7641           jbe 0xd9c0
0x0000d97f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x0000d984      0f2e0db1c600.  ucomiss xmm1, dword [0x0001a03c]
0x0000d98b      7633           jbe 0xd9c0
0x0000d98d      f30f100a       movss xmm1, dword [rdx]
0x0000d991      0f2e0da8c600.  ucomiss xmm1, dword [0x0001a040]
0x0000d998      7226           jb 0xd9c0
0x0000d99a      f30f580d92c6.  addss xmm1, dword [0x0001a034]          ; ../coreutils-8.31/lib/hash.c:737
0x0000d9a2      f30f105204     movss xmm2, dword [rdx + 4]
0x0000d9a7      0f2ed1         ucomiss xmm2, xmm1
0x0000d9aa      7614           jbe 0xd9c0
0x0000d9ac      f30f101d90c6.  movss xmm3, dword [0x0001a044]          ; [0x1a044:4]=0x3f800000
0x0000d9b4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x0000d9b7      7207           jb 0xd9c0
0x0000d9b9      0f2ec1         ucomiss xmm0, xmm1
0x0000d9bc      7707           ja 0xd9c5
0x0000d9be      6690           nop
0x0000d9c0      48890f         mov qword [rdi], rcx
0x0000d9c3      31c0           xor eax, eax
0x0000d9c5      f3c3           ret
0x0000d9c7      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x0000d9d0      4157           push r15
0x0000d9d2      4156           push r14
0x0000d9d4      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x0000d9d6      4154           push r12
0x0000d9d8      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x0000d9d9      53             push rbx
0x0000d9da      4883ec08       sub rsp, 8
0x0000d9de      4c8b26         mov r12, qword [rsi]
0x0000d9e1      4c3b6608       cmp r12, qword [rsi + 8]
0x0000d9e5      0f83dd000000   jae 0xdac8
0x0000d9eb      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000d9ee      4989f5         mov r13, rsi
0x0000d9f1      4189d6         mov r14d, edx
0x0000d9f4      0f1f4000       nop dword [rax]
0x0000d9f8      4d8b3c24       mov r15, qword [r12]
0x0000d9fc      4d85ff         test r15, r15
0x0000d9ff      0f84b5000000   je 0xdaba
0x0000da05      498b5c2408     mov rbx, qword [r12 + 8]
0x0000da0a      4885db         test rbx, rbx
0x0000da0d      751d           jne 0xda2c
0x0000da0f      eb5a           jmp 0xda6b
0x0000da11      0f1f80000000.  nop dword [rax]
0x0000da18      488b4808       mov rcx, qword [rax + 8]
0x0000da1c      4885d2         test rdx, rdx
0x0000da1f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x0000da23      48895808       mov qword [rax + 8], rbx
0x0000da27      4889d3         mov rbx, rdx
0x0000da2a      743b           je 0xda67
0x0000da2c      4c8b3b         mov r15, qword [rbx]
0x0000da2f      4889ef         mov rdi, rbp
0x0000da32      4c89fe         mov rsi, r15
0x0000da35      e8c6fdffff     call sym.safe_hasher
0x0000da3a      48833800       cmp qword [rax], 0
0x0000da3e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x0000da42      75d4           jne 0xda18
0x0000da44      4c8938         mov qword [rax], r15
0x0000da47      4883451801     add qword [rbp + 0x18], 1
0x0000da4c      4885d2         test rdx, rdx
0x0000da4f      48c703000000.  mov qword [rbx], 0
0x0000da56      488b4548       mov rax, qword [rbp + 0x48]
0x0000da5a      48894308       mov qword [rbx + 8], rax
0x0000da5e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x0000da62      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x0000da65      75c5           jne 0xda2c
0x0000da67      4d8b3c24       mov r15, qword [r12]
0x0000da6b      4584f6         test r14b, r14b
0x0000da6e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x0000da77      7541           jne 0xdaba
0x0000da79      4c89fe         mov rsi, r15
0x0000da7c      4889ef         mov rdi, rbp
0x0000da7f      e87cfdffff     call sym.safe_hasher
0x0000da84      48833800       cmp qword [rax], 0
0x0000da88      4889c3         mov rbx, rax
0x0000da8b      7453           je 0xdae0
0x0000da8d      488b4548       mov rax, qword [rbp + 0x48]
0x0000da91      4885c0         test rax, rax
0x0000da94      745a           je 0xdaf0
0x0000da96      488b5008       mov rdx, qword [rax + 8]
0x0000da9a      48895548       mov qword [rbp + 0x48], rdx
0x0000da9e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x0000daa2      4c8938         mov qword [rax], r15
0x0000daa5      48895008       mov qword [rax + 8], rdx
0x0000daa9      48894308       mov qword [rbx + 8], rax
0x0000daad      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000dab5      49836d1801     sub qword [r13 + 0x18], 1
0x0000daba      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000dabe      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x0000dac2      0f8730ffffff   ja 0xd9f8
0x0000dac8      4883c408       add rsp, 8
0x0000dacc      b801000000     mov eax, 1
0x0000dad1      5b             pop rbx
0x0000dad2      5d             pop rbp
0x0000dad3      415c           pop r12
0x0000dad5      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x0000dad7      415e           pop r14
0x0000dad9      415f           pop r15
0x0000dadb      c3             ret
0x0000dadc      0f1f4000       nop dword [rax]
0x0000dae0      4c8938         mov qword [rax], r15
0x0000dae3      4883451801     add qword [rbp + 0x18], 1
0x0000dae8      ebc3           jmp 0xdaad
0x0000daea      660f1f440000   nop word [rax + rax]
0x0000daf0      bf10000000     mov edi, 0x10
0x0000daf5      e88e5dffff     call 0x3888
0x0000dafa      4885c0         test rax, rax
0x0000dafd      759f           jne 0xda9e
0x0000daff      4883c408       add rsp, 8
0x0000db03      31c0           xor eax, eax
0x0000db05      5b             pop rbx
0x0000db06      5d             pop rbp
0x0000db07      415c           pop r12
0x0000db09      415d           pop r13
0x0000db0b      415e           pop r14
0x0000db0d      415f           pop r15
0x0000db0f      c3             ret
;-- hash_get_n_buckets:
0x0000db10      488b4710       mov rax, qword [rdi + 0x10]
0x0000db14      c3             ret
0x0000db15      90             nop
0x0000db16      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x0000db20      488b4718       mov rax, qword [rdi + 0x18]
0x0000db24      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x0000db25      90             nop
0x0000db26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x0000db30      488b4720       mov rax, qword [rdi + 0x20]
0x0000db34      c3             ret
0x0000db35      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x0000db36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x0000db40      488b37         mov rsi, qword [rdi]
0x0000db43      488b7f08       mov rdi, qword [rdi + 8]
0x0000db47      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x0000db49      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000db4c      7339           jae 0xdb87
0x0000db4e      6690           nop
0x0000db50      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x0000db54      7426           je 0xdb7c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x0000db56      488b5608       mov rdx, qword [rsi + 8]
0x0000db5a      b901000000     mov ecx, 1
0x0000db5f      4885d2         test rdx, rdx
0x0000db62      7411           je 0xdb75
0x0000db64      0f1f4000       nop dword [rax]
0x0000db68      488b5208       mov rdx, qword [rdx + 8]
0x0000db6c      4883c101       add rcx, 1
0x0000db70      4885d2         test rdx, rdx
0x0000db73      75f3           jne 0xdb68
0x0000db75      4839c8         cmp rax, rcx
0x0000db78      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000db7c      4883c610       add rsi, 0x10
0x0000db80      4839fe         cmp rsi, rdi
0x0000db83      72cb           jb 0xdb50
0x0000db85      f3c3           ret
0x0000db87      f3c3           ret
0x0000db89      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x0000db90      488b0f         mov rcx, qword [rdi]
0x0000db93      4c8b4708       mov r8, qword [rdi + 8]
0x0000db97      31d2           xor edx, edx
0x0000db99      31f6           xor esi, esi
0x0000db9b      4c39c1         cmp rcx, r8
0x0000db9e      7336           jae 0xdbd6
0x0000dba0      48833900       cmp qword [rcx], 0
0x0000dba4      7427           je 0xdbcd
0x0000dba6      488b4108       mov rax, qword [rcx + 8]
0x0000dbaa      4883c601       add rsi, 1
0x0000dbae      4883c201       add rdx, 1
0x0000dbb2      4885c0         test rax, rax
0x0000dbb5      7416           je 0xdbcd
0x0000dbb7      660f1f840000.  nop word [rax + rax]
0x0000dbc0      488b4008       mov rax, qword [rax + 8]
0x0000dbc4      4883c201       add rdx, 1
0x0000dbc8      4885c0         test rax, rax
0x0000dbcb      75f3           jne 0xdbc0
0x0000dbcd      4883c110       add rcx, 0x10
0x0000dbd1      4c39c1         cmp rcx, r8
0x0000dbd4      72ca           jb 0xdba0
0x0000dbd6      31c0           xor eax, eax
0x0000dbd8      48397718       cmp qword [rdi + 0x18], rsi
0x0000dbdc      7402           je 0xdbe0
0x0000dbde      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x0000dbe0      48395720       cmp qword [rdi + 0x20], rdx
0x0000dbe4      0f94c0         sete al
0x0000dbe7      c3             ret
0x0000dbe8      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x0000dbf0      4155           push r13
0x0000dbf2      4154           push r12
0x0000dbf4      4989f4         mov r12, rsi
0x0000dbf7      55             push rbp
0x0000dbf8      53             push rbx
0x0000dbf9      31db           xor ebx, ebx
0x0000dbfb      4883ec08       sub rsp, 8
0x0000dbff      488b37         mov rsi, qword [rdi]
0x0000dc02      488b4f20       mov rcx, qword [rdi + 0x20]
0x0000dc06      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000dc0a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000dc0e      488b7f08       mov rdi, qword [rdi + 8]
0x0000dc12      4839fe         cmp rsi, rdi
0x0000dc15      733e           jae 0xdc55
0x0000dc17      660f1f840000.  nop word [rax + rax]
0x0000dc20      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x0000dc24      7426           je 0xdc4c
0x0000dc26      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000dc2a      ba01000000     mov edx, 1
0x0000dc2f      4885c0         test rax, rax
0x0000dc32      7411           je 0xdc45
0x0000dc34      0f1f4000       nop dword [rax]
0x0000dc38      488b4008       mov rax, qword [rax + 8]
0x0000dc3c      4883c201       add rdx, 1
0x0000dc40      4885c0         test rax, rax
0x0000dc43      75f3           jne 0xdc38
0x0000dc45      4839d3         cmp rbx, rdx
0x0000dc48      480f42da       cmovb rbx, rdx
0x0000dc4c      4883c610       add rsi, 0x10
0x0000dc50      4839fe         cmp rsi, rdi
0x0000dc53      72cb           jb 0xdc20
0x0000dc55      488d154ac300.  lea rdx, str.entries:__________lu       ; 0x19fa6 ; "# entries:         %lu\n"
0x0000dc5c      be01000000     mov esi, 1
0x0000dc61      4c89e7         mov rdi, r12
0x0000dc64      31c0           xor eax, eax
0x0000dc66      e8955bffff     call sym.imp.__fprintf_chk
0x0000dc6b      488d154cc300.  lea rdx, str.buckets:__________lu       ; 0x19fbe ; "# buckets:         %lu\n"
0x0000dc72      31c0           xor eax, eax
0x0000dc74      4889e9         mov rcx, rbp
0x0000dc77      be01000000     mov esi, 1
0x0000dc7c      4c89e7         mov rdi, r12
0x0000dc7f      e87c5bffff     call sym.imp.__fprintf_chk
0x0000dc84      4d85ed         test r13, r13
0x0000dc87      7867           js 0xdcf0
0x0000dc89      660fefc0       pxor xmm0, xmm0
0x0000dc8d      4885ed         test rbp, rbp
0x0000dc90      f2490f2ac5     cvtsi2sd xmm0, r13
0x0000dc95      f20f5905bbc3.  mulsd xmm0, qword [0x0001a058]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000dc9d      787a           js 0xdd19                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000dc9f      660fefc9       pxor xmm1, xmm1
0x0000dca3      f2480f2acd     cvtsi2sd xmm1, rbp
0x0000dca8      f20f5ec1       divsd xmm0, xmm1
0x0000dcac      488d153dc300.  lea rdx, str.buckets_used:_____lu___.2f ; 0x19ff0 ; "# buckets used:    %lu (%.2f%%)\n"
0x0000dcb3      4c89e9         mov rcx, r13
0x0000dcb6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x0000dcb9      be01000000     mov esi, 1
0x0000dcbe      b801000000     mov eax, 1
0x0000dcc3      e8385bffff     call sym.imp.__fprintf_chk
0x0000dcc8      4883c408       add rsp, 8
0x0000dccc      4889d9         mov rcx, rbx
0x0000dccf      4c89e7         mov rdi, r12
0x0000dcd2      5b             pop rbx
0x0000dcd3      5d             pop rbp
0x0000dcd4      415c           pop r12
0x0000dcd6      415d           pop r13
0x0000dcd8      488d15f7c200.  lea rdx, str.max_bucket_length:__lu     ; 0x19fd6 ; "max bucket length: %lu\n"
0x0000dcdf      be01000000     mov esi, 1
0x0000dce4      31c0           xor eax, eax
0x0000dce6      e9155bffff     jmp sym.imp.__fprintf_chk
0x0000dceb      0f1f440000     nop dword [rax + rax]
0x0000dcf0      4c89e8         mov rax, r13
0x0000dcf3      4c89ea         mov rdx, r13
0x0000dcf6      660fefc0       pxor xmm0, xmm0
0x0000dcfa      48d1e8         shr rax, 1
0x0000dcfd      83e201         and edx, 1
0x0000dd00      4809d0         or rax, rdx
0x0000dd03      4885ed         test rbp, rbp
0x0000dd06      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000dd0b      f20f58c0       addsd xmm0, xmm0
0x0000dd0f      f20f590541c3.  mulsd xmm0, qword [0x0001a058]
0x0000dd17      7986           jns 0xdc9f                              ; ../coreutils-8.31/lib/hash.c:-138
0x0000dd19      4889e8         mov rax, rbp
0x0000dd1c      660fefc9       pxor xmm1, xmm1
0x0000dd20      48d1e8         shr rax, 1
0x0000dd23      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x0000dd26      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x0000dd29      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000dd2e      f20f58c9       addsd xmm1, xmm1
0x0000dd32      e971ffffff     jmp 0xdca8
0x0000dd37      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x0000dd40      4154           push r12
0x0000dd42      55             push rbp
0x0000dd43      4989fc         mov r12, rdi
0x0000dd46      53             push rbx
0x0000dd47      4889f5         mov rbp, rsi
0x0000dd4a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000dd4f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x0000dd52      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x0000dd55      7426           je 0xdd7d                               ; ../coreutils-8.31/lib/hash.c:-120
0x0000dd57      4889c3         mov rbx, rax
0x0000dd5a      eb07           jmp 0xdd63
0x0000dd5c      0f1f4000       nop dword [rax]
0x0000dd60      488b33         mov rsi, qword [rbx]
0x0000dd63      4839ee         cmp rsi, rbp
0x0000dd66      7417           je 0xdd7f                               ; ../coreutils-8.31/lib/hash.c:-116
0x0000dd68      4889ef         mov rdi, rbp
0x0000dd6b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x0000dd70      84c0           test al, al
0x0000dd72      751c           jne 0xdd90
0x0000dd74      488b5b08       mov rbx, qword [rbx + 8]
0x0000dd78      4885db         test rbx, rbx
0x0000dd7b      75e3           jne 0xdd60
0x0000dd7d      31f6           xor esi, esi
0x0000dd7f      5b             pop rbx
0x0000dd80      4889f0         mov rax, rsi
0x0000dd83      5d             pop rbp
0x0000dd84      415c           pop r12
0x0000dd86      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x0000dd87      660f1f840000.  nop word [rax + rax]
0x0000dd90      488b33         mov rsi, qword [rbx]
0x0000dd93      5b             pop rbx
0x0000dd94      5d             pop rbp
0x0000dd95      4889f0         mov rax, rsi
0x0000dd98      415c           pop r12
0x0000dd9a      c3             ret
0x0000dd9b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x0000dda0      48837f2000     cmp qword [rdi + 0x20], 0
0x0000dda5      742c           je 0xddd3
0x0000dda7      488b17         mov rdx, qword [rdi]
0x0000ddaa      488b4f08       mov rcx, qword [rdi + 8]
0x0000ddae      4839ca         cmp rdx, rcx
0x0000ddb1      7325           jae 0xddd8
0x0000ddb3      488b02         mov rax, qword [rdx]
0x0000ddb6      4885c0         test rax, rax
0x0000ddb9      751b           jne 0xddd6
0x0000ddbb      0f1f440000     nop dword [rax + rax]
0x0000ddc0      4883c210       add rdx, 0x10
0x0000ddc4      4839ca         cmp rdx, rcx
0x0000ddc7      730f           jae 0xddd8                              ; ../coreutils-8.31/lib/hash.c:-97
0x0000ddc9      488b02         mov rax, qword [rdx]
0x0000ddcc      4885c0         test rax, rax
0x0000ddcf      74ef           je 0xddc0
0x0000ddd1      f3c3           ret
0x0000ddd3      31c0           xor eax, eax
0x0000ddd5      c3             ret
0x0000ddd6      f3c3           ret
0x0000ddd8      4883ec08       sub rsp, 8
0x0000dddc      e8af54ffff     call sym.imp.abort
0x0000dde1      0f1f440000     nop dword [rax + rax]
0x0000dde6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x0000ddf0      55             push rbp
0x0000ddf1      53             push rbx
0x0000ddf2      4889fd         mov rbp, rdi
0x0000ddf5      4889f3         mov rbx, rsi
0x0000ddf8      4883ec08       sub rsp, 8
0x0000ddfc      e8fff9ffff     call sym.safe_hasher
0x0000de01      4889c2         mov rdx, rax
0x0000de04      4889c1         mov rcx, rax
0x0000de07      488b02         mov rax, qword [rdx]
0x0000de0a      488b5208       mov rdx, qword [rdx + 8]
0x0000de0e      4839d8         cmp rax, rbx
0x0000de11      7416           je 0xde29
0x0000de13      0f1f440000     nop dword [rax + rax]
0x0000de18      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000de1b      7411           je 0xde2e
0x0000de1d      488b02         mov rax, qword [rdx]
0x0000de20      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x0000de24      4839d8         cmp rax, rbx
0x0000de27      75ef           jne 0xde18
0x0000de29      4885d2         test rdx, rdx
0x0000de2c      752a           jne 0xde58
0x0000de2e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x0000de32      eb0c           jmp 0xde40
0x0000de34      0f1f4000       nop dword [rax]
0x0000de38      488b01         mov rax, qword [rcx]
0x0000de3b      4885c0         test rax, rax
0x0000de3e      750b           jne 0xde4b
0x0000de40      4883c110       add rcx, 0x10
0x0000de44      4839ca         cmp rdx, rcx
0x0000de47      77ef           ja 0xde38
0x0000de49      31c0           xor eax, eax
0x0000de4b      4883c408       add rsp, 8
0x0000de4f      5b             pop rbx
0x0000de50      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x0000de51      c3             ret
0x0000de52      660f1f440000   nop word [rax + rax]
0x0000de58      488b02         mov rax, qword [rdx]
0x0000de5b      4883c408       add rsp, 8
0x0000de5f      5b             pop rbx
0x0000de60      5d             pop rbp
0x0000de61      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x0000de62      0f1f4000       nop dword [rax]
0x0000de66      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x0000de70      4c8b0f         mov r9, qword [rdi]
0x0000de73      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x0000de77      7659           jbe 0xded2
0x0000de79      4531c0         xor r8d, r8d
0x0000de7c      498b09         mov rcx, qword [r9]
0x0000de7f      4885c9         test rcx, rcx
0x0000de82      7439           je 0xdebd                               ; ../coreutils-8.31/lib/hash.c:-47
0x0000de84      4c39c2         cmp rdx, r8
0x0000de87      763e           jbe 0xdec7
0x0000de89      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000de8d      498b4908       mov rcx, qword [r9 + 8]
0x0000de91      498d4001       lea rax, [r8 + 1]
0x0000de95      4885c9         test rcx, rcx
0x0000de98      7420           je 0xdeba
0x0000de9a      660f1f440000   nop word [rax + rax]
0x0000dea0      4839c2         cmp rdx, rax
0x0000dea3      742b           je 0xded0                               ; ../coreutils-8.31/lib/hash.c:-3
0x0000dea5      4c8b01         mov r8, qword [rcx]
0x0000dea8      4883c001       add rax, 1
0x0000deac      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x0000deb1      488b4908       mov rcx, qword [rcx + 8]
0x0000deb5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x0000deb8      75e6           jne 0xdea0
0x0000deba      4989c0         mov r8, rax
0x0000debd      4983c110       add r9, 0x10
0x0000dec1      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x0000dec5      77b5           ja 0xde7c
0x0000dec7      4c89c0         mov rax, r8
0x0000deca      c3             ret
0x0000decb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x0000ded0      f3c3           ret
0x0000ded2      31c0           xor eax, eax
0x0000ded4      c3             ret
0x0000ded5      90             nop
0x0000ded6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x0000dee0      4157           push r15
0x0000dee2      4156           push r14
0x0000dee4      4155           push r13
0x0000dee6      4154           push r12
0x0000dee8      55             push rbp
0x0000dee9      53             push rbx
0x0000deea      4883ec08       sub rsp, 8
0x0000deee      4c8b37         mov r14, qword [rdi]
0x0000def1      4c397708       cmp qword [rdi + 8], r14
0x0000def5      764f           jbe 0xdf46
0x0000def7      4989d5         mov r13, rdx
0x0000defa      4989f4         mov r12, rsi
0x0000defd      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x0000df00      31ed           xor ebp, ebp
0x0000df02      498b3e         mov rdi, qword [r14]
0x0000df05      4885ff         test rdi, rdi
0x0000df08      7420           je 0xdf2a
0x0000df0a      4c89f3         mov rbx, r14
0x0000df0d      eb04           jmp 0xdf13
0x0000df0f      90             nop
0x0000df10      488b3b         mov rdi, qword [rbx]
0x0000df13      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x0000df16      41ffd4         call r12
0x0000df19      84c0           test al, al
0x0000df1b      7417           je 0xdf34
0x0000df1d      488b5b08       mov rbx, qword [rbx + 8]
0x0000df21      4883c501       add rbp, 1
0x0000df25      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x0000df28      75e6           jne 0xdf10
0x0000df2a      4983c610       add r14, 0x10
0x0000df2e      4d397708       cmp qword [r15 + 8], r14
0x0000df32      77ce           ja 0xdf02
0x0000df34      4883c408       add rsp, 8
0x0000df38      4889e8         mov rax, rbp
0x0000df3b      5b             pop rbx
0x0000df3c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000df3d      415c           pop r12
0x0000df3f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x0000df41      415e           pop r14
0x0000df43      415f           pop r15
0x0000df45      c3             ret
0x0000df46      31ed           xor ebp, ebp
0x0000df48      ebea           jmp 0xdf34                              ; ../coreutils-8.31/lib/hash.c:41
0x0000df4a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x0000df50      0fb60f         movzx ecx, byte [rdi]
0x0000df53      31d2           xor edx, edx
0x0000df55      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x0000df57      7424           je 0xdf7d
0x0000df59      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x0000df60      4889d0         mov rax, rdx
0x0000df63      4883c701       add rdi, 1
0x0000df67      48c1e005       shl rax, 5
0x0000df6b      4829d0         sub rax, rdx
0x0000df6e      31d2           xor edx, edx
0x0000df70      4801c8         add rax, rcx
0x0000df73      0fb60f         movzx ecx, byte [rdi]
0x0000df76      48f7f6         div rsi
0x0000df79      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000df7b      75e3           jne 0xdf60
0x0000df7d      4889d0         mov rax, rdx
0x0000df80      c3             ret
0x0000df81      0f1f440000     nop dword [rax + rax]
0x0000df86      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x0000df90      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000df9a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000df9e      488907         mov qword [rdi], rax
0x0000dfa1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000dfab      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000dfaf      c3             ret
;-- hash_initialize:
0x0000dfb0      4157           push r15
0x0000dfb2      4156           push r14
0x0000dfb4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0xd7e0 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000dfbb      4155           push r13
0x0000dfbd      4154           push r12
0x0000dfbf      4989d4         mov r12, rdx
0x0000dfc2      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x0000dfc3      53             push rbx
0x0000dfc4      4989cd         mov r13, rcx
0x0000dfc7      4889fd         mov rbp, rdi
0x0000dfca      bf50000000     mov edi, 0x50                           ; 'P'
0x0000dfcf      4989f7         mov r15, rsi
0x0000dfd2      4883ec08       sub rsp, 8
0x0000dfd6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x0000dfd9      4d89c6         mov r14, r8
0x0000dfdc      4c0f44e0       cmove r12, rax
0x0000dfe0      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0xd7f0 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000dfe7      4885c9         test rcx, rcx
0x0000dfea      4c0f44e8       cmove r13, rax
0x0000dfee      e89558ffff     call 0x3888
0x0000dff3      4885c0         test rax, rax
0x0000dff6      4889c3         mov rbx, rax
0x0000dff9      0f84ab000000   je 0xe0aa
0x0000dfff      4d85ff         test r15, r15
0x0000e002      488d7828       lea rdi, [rax + 0x28]
0x0000e006      0f84b4000000   je 0xe0c0
0x0000e00c      4c897828       mov qword [rax + 0x28], r15
0x0000e010      e83bf9ffff     call sym.check_tuning.isra.0
0x0000e015      84c0           test al, al
0x0000e017      0f8483000000   je 0xe0a0
0x0000e01d      41807f1000     cmp byte [r15 + 0x10], 0
0x0000e022      0f84f8000000   je 0xe120
0x0000e028      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000e02b      e810f7ffff     call sym.next_prime
0x0000e030      ba08000000     mov edx, 8
0x0000e035      4889c5         mov rbp, rax
0x0000e038      31c9           xor ecx, ecx
0x0000e03a      4889d0         mov rax, rdx
0x0000e03d      48f7e5         mul rbp
0x0000e040      0f8014010000   jo 0xe15a
0x0000e046      4885c0         test rax, rax
0x0000e049      7855           js 0xe0a0
0x0000e04b      4885c9         test rcx, rcx
0x0000e04e      7550           jne 0xe0a0
0x0000e050      4885ed         test rbp, rbp
0x0000e053      48896b10       mov qword [rbx + 0x10], rbp
0x0000e057      7447           je 0xe0a0
0x0000e059      be10000000     mov esi, 0x10
0x0000e05e      4889ef         mov rdi, rbp
0x0000e061      e81a55ffff     call sym.imp.calloc
0x0000e066      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x0000e069      488903         mov qword [rbx], rax
0x0000e06c      7432           je 0xe0a0
0x0000e06e      48c1e504       shl rbp, 4
0x0000e072      48c743180000.  mov qword [rbx + 0x18], 0
0x0000e07a      48c743200000.  mov qword [rbx + 0x20], 0
0x0000e082      4801c5         add rbp, rax
0x0000e085      4c896330       mov qword [rbx + 0x30], r12
0x0000e089      4c896b38       mov qword [rbx + 0x38], r13
0x0000e08d      48896b08       mov qword [rbx + 8], rbp
0x0000e091      4c897340       mov qword [rbx + 0x40], r14
0x0000e095      48c743480000.  mov qword [rbx + 0x48], 0
0x0000e09d      eb0b           jmp 0xe0aa
0x0000e09f      90             nop
0x0000e0a0      4889df         mov rdi, rbx
0x0000e0a3      31db           xor ebx, ebx
0x0000e0a5      e8d657ffff     call sym..plt.got
0x0000e0aa      4883c408       add rsp, 8
0x0000e0ae      4889d8         mov rax, rbx
0x0000e0b1      5b             pop rbx
0x0000e0b2      5d             pop rbp
0x0000e0b3      415c           pop r12
0x0000e0b5      415d           pop r13
0x0000e0b7      415e           pop r14
0x0000e0b9      415f           pop r15
0x0000e0bb      c3             ret
0x0000e0bc      0f1f4000       nop dword [rax]
0x0000e0c0      488d0559bf00.  lea rax, obj.default_tuning             ; 0x1a020
0x0000e0c7      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x0000e0cb      e880f8ffff     call sym.check_tuning.isra.0
0x0000e0d0      84c0           test al, al
0x0000e0d2      f30f100d6ebf.  movss xmm1, dword [0x0001a048]          ; [0x1a048:4]=0x3f4ccccd
0x0000e0da      74c4           je 0xe0a0
0x0000e0dc      4885ed         test rbp, rbp
0x0000e0df      784a           js 0xe12b
0x0000e0e1      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x0000e0e5      f3480f2ac5     cvtsi2ss xmm0, rbp
0x0000e0ea      f30f5ec1       divss xmm0, xmm1
0x0000e0ee      0f2e0557bf00.  ucomiss xmm0, dword [0x0001a04c]
0x0000e0f5      73a9           jae 0xe0a0
0x0000e0f7      0f2e0552bf00.  ucomiss xmm0, dword [0x0001a050]
0x0000e0fe      7250           jb 0xe150
0x0000e100      f30f5c0548bf.  subss xmm0, dword [0x0001a050]
0x0000e108      48b800000000.  movabs rax, 0x8000000000000000
0x0000e112      f3480f2ce8     cvttss2si rbp, xmm0
0x0000e117      4831c5         xor rbp, rax
0x0000e11a      e909ffffff     jmp 0xe028
0x0000e11f      90             nop
0x0000e120      4885ed         test rbp, rbp
0x0000e123      f3410f104f08   movss xmm1, dword [r15 + 8]
0x0000e129      79b6           jns 0xe0e1                              ; ../coreutils-8.31/lib/hash.c:-146
0x0000e12b      4889e8         mov rax, rbp
0x0000e12e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x0000e132      48d1e8         shr rax, 1
0x0000e135      83e501         and ebp, 1
0x0000e138      4809e8         or rax, rbp
0x0000e13b      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e140      f30f58c0       addss xmm0, xmm0
0x0000e144      eba4           jmp 0xe0ea
0x0000e146      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e150      f3480f2ce8     cvttss2si rbp, xmm0
0x0000e155      e9cefeffff     jmp 0xe028
0x0000e15a      b901000000     mov ecx, 1
0x0000e15f      e9e2feffff     jmp 0xe046
0x0000e164      6690           nop
0x0000e166      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x0000e170      4154           push r12
0x0000e172      55             push rbp
0x0000e173      4889fd         mov rbp, rdi
0x0000e176      53             push rbx
0x0000e177      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x0000e17a      4c3b6708       cmp r12, qword [rdi + 8]
0x0000e17e      736b           jae 0xe1eb
0x0000e180      49833c2400     cmp qword [r12], 0
0x0000e185      745a           je 0xe1e1
0x0000e187      498b5c2408     mov rbx, qword [r12 + 8]
0x0000e18c      488b4540       mov rax, qword [rbp + 0x40]
0x0000e190      4885db         test rbx, rbx
0x0000e193      7430           je 0xe1c5
0x0000e195      0f1f00         nop dword [rax]
0x0000e198      4885c0         test rax, rax
0x0000e19b      7409           je 0xe1a6
0x0000e19d      488b3b         mov rdi, qword [rbx]
0x0000e1a0      ffd0           call rax
0x0000e1a2      488b4540       mov rax, qword [rbp + 0x40]
0x0000e1a6      488b5308       mov rdx, qword [rbx + 8]
0x0000e1aa      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000e1ae      48c703000000.  mov qword [rbx], 0
0x0000e1b5      4885d2         test rdx, rdx
0x0000e1b8      48894b08       mov qword [rbx + 8], rcx
0x0000e1bc      48895d48       mov qword [rbp + 0x48], rbx
0x0000e1c0      4889d3         mov rbx, rdx
0x0000e1c3      75d3           jne 0xe198
0x0000e1c5      4885c0         test rax, rax
0x0000e1c8      7406           je 0xe1d0
0x0000e1ca      498b3c24       mov rdi, qword [r12]
0x0000e1ce      ffd0           call rax
0x0000e1d0      49c704240000.  mov qword [r12], 0
0x0000e1d8      49c744240800.  mov qword [r12 + 8], 0
0x0000e1e1      4983c410       add r12, 0x10
0x0000e1e5      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x0000e1e9      7795           ja 0xe180
0x0000e1eb      48c745180000.  mov qword [rbp + 0x18], 0
0x0000e1f3      48c745200000.  mov qword [rbp + 0x20], 0
0x0000e1fb      5b             pop rbx
0x0000e1fc      5d             pop rbp
0x0000e1fd      415c           pop r12
0x0000e1ff      c3             ret
;-- hash_free:
0x0000e200      4154           push r12
0x0000e202      55             push rbp
0x0000e203      4989fc         mov r12, rdi
0x0000e206      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x0000e207      48837f4000     cmp qword [rdi + 0x40], 0
0x0000e20c      488b2f         mov rbp, qword [rdi]
0x0000e20f      488b4708       mov rax, qword [rdi + 8]
0x0000e213      744e           je 0xe263                               ; ../coreutils-8.31/lib/hash.c:-305
0x0000e215      48837f2000     cmp qword [rdi + 0x20], 0
0x0000e21a      7447           je 0xe263
0x0000e21c      4839c5         cmp rbp, rax
0x0000e21f      737b           jae 0xe29c
0x0000e221      0f1f80000000.  nop dword [rax]
0x0000e228      488b7d00       mov rdi, qword [rbp]
0x0000e22c      4885ff         test rdi, rdi
0x0000e22f      7425           je 0xe256
0x0000e231      4889eb         mov rbx, rbp
0x0000e234      eb0d           jmp 0xe243
0x0000e236      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e240      488b3b         mov rdi, qword [rbx]
0x0000e243      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x0000e248      488b5b08       mov rbx, qword [rbx + 8]
0x0000e24c      4885db         test rbx, rbx
0x0000e24f      75ef           jne 0xe240
0x0000e251      498b442408     mov rax, qword [r12 + 8]
0x0000e256      4883c510       add rbp, 0x10
0x0000e25a      4839e8         cmp rax, rbp
0x0000e25d      77c9           ja 0xe228
0x0000e25f      498b2c24       mov rbp, qword [r12]
0x0000e263      4839c5         cmp rbp, rax
0x0000e266      7334           jae 0xe29c
0x0000e268      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x0000e270      488b7d08       mov rdi, qword [rbp + 8]
0x0000e274      4885ff         test rdi, rdi
0x0000e277      7418           je 0xe291
0x0000e279      0f1f80000000.  nop dword [rax]
0x0000e280      488b5f08       mov rbx, qword [rdi + 8]
0x0000e284      e8f755ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x0000e289      4885db         test rbx, rbx
0x0000e28c      4889df         mov rdi, rbx
0x0000e28f      75ef           jne 0xe280
0x0000e291      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x0000e295      49396c2408     cmp qword [r12 + 8], rbp
0x0000e29a      77d4           ja 0xe270
0x0000e29c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x0000e2a1      4885ff         test rdi, rdi
0x0000e2a4      741b           je 0xe2c1
0x0000e2a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e2b0      488b5f08       mov rbx, qword [rdi + 8]
0x0000e2b4      e8c755ffff     call sym..plt.got
0x0000e2b9      4885db         test rbx, rbx
0x0000e2bc      4889df         mov rdi, rbx
0x0000e2bf      75ef           jne 0xe2b0
0x0000e2c1      498b3c24       mov rdi, qword [r12]
0x0000e2c5      e8b655ffff     call sym..plt.got
0x0000e2ca      5b             pop rbx
0x0000e2cb      4c89e7         mov rdi, r12
0x0000e2ce      5d             pop rbp
0x0000e2cf      415c           pop r12
0x0000e2d1      e9aa55ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x0000e2d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x0000e2e0      4154           push r12
0x0000e2e2      55             push rbp
0x0000e2e3      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x0000e2e6      53             push rbx
0x0000e2e7      4883ec60       sub rsp, 0x60
0x0000e2eb      4c8b6728       mov r12, qword [rdi + 0x28]
0x0000e2ef      64488b042528.  mov rax, qword fs:[0x28]
0x0000e2f8      4889442458     mov qword [rsp + 0x58], rax
0x0000e2fd      31c0           xor eax, eax
0x0000e2ff      41807c241000   cmp byte [r12 + 0x10], 0
0x0000e305      7551           jne 0xe358
0x0000e307      4885f6         test rsi, rsi
0x0000e30a      0f8878010000   js 0xe488
0x0000e310      660fefc0       pxor xmm0, xmm0
0x0000e314      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x0000e319      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x0000e320      0f2e0525bd00.  ucomiss xmm0, dword [0x0001a04c]
0x0000e327      0f8333010000   jae 0xe460
0x0000e32d      0f2e051cbd00.  ucomiss xmm0, dword [0x0001a050]
0x0000e334      0f8276010000   jb 0xe4b0
0x0000e33a      f30f5c050ebd.  subss xmm0, dword [0x0001a050]          ; ../coreutils-8.31/lib/hash.c:161
0x0000e342      48b800000000.  movabs rax, 0x8000000000000000
0x0000e34c      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e351      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x0000e354      0f1f4000       nop dword [rax]
0x0000e358      4889f7         mov rdi, rsi
0x0000e35b      e8e0f3ffff     call sym.next_prime
0x0000e360      ba08000000     mov edx, 8
0x0000e365      4889c3         mov rbx, rax
0x0000e368      31c9           xor ecx, ecx
0x0000e36a      4889d0         mov rax, rdx
0x0000e36d      48f7e3         mul rbx
0x0000e370      0f8099010000   jo 0xe50f
0x0000e376      4885c0         test rax, rax
0x0000e379      b801000000     mov eax, 1
0x0000e37e      480f48c8       cmovs rcx, rax
0x0000e382      4885db         test rbx, rbx
0x0000e385      0f84d5000000   je 0xe460
0x0000e38b      83e101         and ecx, 1
0x0000e38e      0f85cc000000   jne 0xe460
0x0000e394      48395d10       cmp qword [rbp + 0x10], rbx
0x0000e398      0f8422010000   je 0xe4c0
0x0000e39e      be10000000     mov esi, 0x10
0x0000e3a3      4889df         mov rdi, rbx
0x0000e3a6      e8d551ffff     call sym.imp.calloc
0x0000e3ab      4885c0         test rax, rax
0x0000e3ae      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x0000e3b2      0f84a8000000   je 0xe460
0x0000e3b8      48895c2410     mov qword [rsp + 0x10], rbx
0x0000e3bd      48c1e304       shl rbx, 4
0x0000e3c1      4c89642428     mov qword [rsp + 0x28], r12
0x0000e3c6      4801c3         add rbx, rax
0x0000e3c9      488b4530       mov rax, qword [rbp + 0x30]
0x0000e3cd      4989e4         mov r12, rsp
0x0000e3d0      31d2           xor edx, edx
0x0000e3d2      4889ee         mov rsi, rbp
0x0000e3d5      4c89e7         mov rdi, r12
0x0000e3d8      48895c2408     mov qword [rsp + 8], rbx
0x0000e3dd      48c744241800.  mov qword [rsp + 0x18], 0
0x0000e3e6      4889442430     mov qword [rsp + 0x30], rax
0x0000e3eb      488b4538       mov rax, qword [rbp + 0x38]
0x0000e3ef      48c744242000.  mov qword [rsp + 0x20], 0
0x0000e3f8      4889442438     mov qword [rsp + 0x38], rax
0x0000e3fd      488b4540       mov rax, qword [rbp + 0x40]
0x0000e401      4889442440     mov qword [rsp + 0x40], rax
0x0000e406      488b4548       mov rax, qword [rbp + 0x48]
0x0000e40a      4889442448     mov qword [rsp + 0x48], rax
0x0000e40f      e8bcf5ffff     call sym.transfer_entries
0x0000e414      84c0           test al, al
0x0000e416      89c3           mov ebx, eax
0x0000e418      0f85b2000000   jne 0xe4d0
0x0000e41e      488b442448     mov rax, qword [rsp + 0x48]
0x0000e423      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x0000e428      4c89e6         mov rsi, r12
0x0000e42b      4889ef         mov rdi, rbp
0x0000e42e      48894548       mov qword [rbp + 0x48], rax
0x0000e432      e899f5ffff     call sym.transfer_entries
0x0000e437      84c0           test al, al
0x0000e439      0f84da000000   je 0xe519
0x0000e43f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x0000e441      4c89e6         mov rsi, r12
0x0000e444      4889ef         mov rdi, rbp
0x0000e447      e884f5ffff     call sym.transfer_entries
0x0000e44c      84c0           test al, al
0x0000e44e      0f84c5000000   je 0xe519
0x0000e454      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x0000e458      e82354ffff     call sym..plt.got
0x0000e45d      eb03           jmp 0xe462
0x0000e45f      90             nop
0x0000e460      31db           xor ebx, ebx
0x0000e462      488b4c2458     mov rcx, qword [rsp + 0x58]
0x0000e467      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e470      89d8           mov eax, ebx
0x0000e472      0f8592000000   jne 0xe50a
0x0000e478      4883c460       add rsp, 0x60
0x0000e47c      5b             pop rbx
0x0000e47d      5d             pop rbp
0x0000e47e      415c           pop r12
0x0000e480      c3             ret
0x0000e481      0f1f80000000.  nop dword [rax]
0x0000e488      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x0000e48b      660fefc0       pxor xmm0, xmm0
0x0000e48f      48d1e8         shr rax, 1
0x0000e492      83e601         and esi, 1
0x0000e495      4809f0         or rax, rsi
0x0000e498      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e49d      f30f58c0       addss xmm0, xmm0
0x0000e4a1      e973feffff     jmp 0xe319
0x0000e4a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e4b0      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e4b5      e99efeffff     jmp 0xe358
0x0000e4ba      660f1f440000   nop word [rax + rax]
0x0000e4c0      bb01000000     mov ebx, 1
0x0000e4c5      eb9b           jmp 0xe462
0x0000e4c7      660f1f840000.  nop word [rax + rax]
0x0000e4d0      488b7d00       mov rdi, qword [rbp]
0x0000e4d4      e8a753ffff     call sym..plt.got
0x0000e4d9      488b0424       mov rax, qword [rsp]
0x0000e4dd      48894500       mov qword [rbp], rax
0x0000e4e1      488b442408     mov rax, qword [rsp + 8]
0x0000e4e6      48894508       mov qword [rbp + 8], rax
0x0000e4ea      488b442410     mov rax, qword [rsp + 0x10]
0x0000e4ef      48894510       mov qword [rbp + 0x10], rax
0x0000e4f3      488b442418     mov rax, qword [rsp + 0x18]
0x0000e4f8      48894518       mov qword [rbp + 0x18], rax
0x0000e4fc      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x0000e501      48894548       mov qword [rbp + 0x48], rax
0x0000e505      e958ffffff     jmp 0xe462
0x0000e50a      e8114fffff     call sym.imp.__stack_chk_fail
0x0000e50f      b901000000     mov ecx, 1
0x0000e514      e95dfeffff     jmp 0xe376
0x0000e519      e8724dffff     call sym.imp.abort
0x0000e51e      6690           nop
;-- hash_insert_if_absent:
0x0000e520      4155           push r13
0x0000e522      4154           push r12
0x0000e524      55             push rbp
0x0000e525      53             push rbx
0x0000e526      4883ec18       sub rsp, 0x18
0x0000e52a      64488b042528.  mov rax, qword fs:[0x28]
0x0000e533      4889442408     mov qword [rsp + 8], rax
0x0000e538      31c0           xor eax, eax
0x0000e53a      4885f6         test rsi, rsi
0x0000e53d      0f84ba010000   je 0xe6fd
0x0000e543      4989e4         mov r12, rsp
0x0000e546      31c9           xor ecx, ecx
0x0000e548      4989d5         mov r13, rdx
0x0000e54b      4c89e2         mov rdx, r12
0x0000e54e      4889fb         mov rbx, rdi
0x0000e551      4889f5         mov rbp, rsi
0x0000e554      e8d7f2ffff     call sym.hash_find_entry
0x0000e559      4885c0         test rax, rax
0x0000e55c      4889c2         mov rdx, rax
0x0000e55f      742f           je 0xe590
0x0000e561      31c0           xor eax, eax
0x0000e563      4d85ed         test r13, r13
0x0000e566      7404           je 0xe56c
0x0000e568      49895500       mov qword [r13], rdx
0x0000e56c      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e571      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e57a      0f851f020000   jne 0xe79f
0x0000e580      4883c418       add rsp, 0x18
0x0000e584      5b             pop rbx
0x0000e585      5d             pop rbp
0x0000e586      415c           pop r12
0x0000e588      415d           pop r13
0x0000e58a      c3             ret
0x0000e58b      0f1f440000     nop dword [rax + rax]
0x0000e590      488b4318       mov rax, qword [rbx + 0x18]
0x0000e594      4885c0         test rax, rax
0x0000e597      7877           js 0xe610
0x0000e599      660fefc9       pxor xmm1, xmm1
0x0000e59d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000e5a1      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000e5a6      488b4310       mov rax, qword [rbx + 0x10]
0x0000e5aa      4885c0         test rax, rax
0x0000e5ad      0f8887000000   js 0xe63a
0x0000e5b3      660fefc0       pxor xmm0, xmm0
0x0000e5b7      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e5bc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x0000e5c1      0f2ec8         ucomiss xmm1, xmm0
0x0000e5c4      0f8796000000   ja 0xe660
0x0000e5ca      4c8b2424       mov r12, qword [rsp]
0x0000e5ce      49833c2400     cmp qword [r12], 0
0x0000e5d3      0f842f010000   je 0xe708
0x0000e5d9      488b4348       mov rax, qword [rbx + 0x48]
0x0000e5dd      4885c0         test rax, rax
0x0000e5e0      0f843a010000   je 0xe720
0x0000e5e6      488b5008       mov rdx, qword [rax + 8]
0x0000e5ea      48895348       mov qword [rbx + 0x48], rdx
0x0000e5ee      498b542408     mov rdx, qword [r12 + 8]
0x0000e5f3      488928         mov qword [rax], rbp
0x0000e5f6      48895008       mov qword [rax + 8], rdx
0x0000e5fa      4989442408     mov qword [r12 + 8], rax
0x0000e5ff      b801000000     mov eax, 1
0x0000e604      4883432001     add qword [rbx + 0x20], 1
0x0000e609      e95effffff     jmp 0xe56c
0x0000e60e      6690           nop
0x0000e610      4889c2         mov rdx, rax
0x0000e613      660fefc9       pxor xmm1, xmm1
0x0000e617      83e001         and eax, 1
0x0000e61a      48d1ea         shr rdx, 1
0x0000e61d      4809c2         or rdx, rax
0x0000e620      488b4310       mov rax, qword [rbx + 0x10]
0x0000e624      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x0000e629      488b5328       mov rdx, qword [rbx + 0x28]
0x0000e62d      4885c0         test rax, rax
0x0000e630      f30f58c9       addss xmm1, xmm1
0x0000e634      0f8979ffffff   jns 0xe5b3
0x0000e63a      4889c1         mov rcx, rax
0x0000e63d      660fefc0       pxor xmm0, xmm0
0x0000e641      48d1e9         shr rcx, 1
0x0000e644      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x0000e647      4809c1         or rcx, rax
0x0000e64a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000e64f      f30f58c0       addss xmm0, xmm0
0x0000e653      e964ffffff     jmp 0xe5bc
0x0000e658      0f1f84000000.  nop dword [rax + rax]
0x0000e660      488d7b28       lea rdi, [rbx + 0x28]
0x0000e664      e8e7f2ffff     call sym.check_tuning.isra.0
0x0000e669      488b4310       mov rax, qword [rbx + 0x10]
0x0000e66d      488b5328       mov rdx, qword [rbx + 0x28]
0x0000e671      4885c0         test rax, rax
0x0000e674      f30f105208     movss xmm2, dword [rdx + 8]
0x0000e679      0f88c1000000   js 0xe740
0x0000e67f      660fefc0       pxor xmm0, xmm0
0x0000e683      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e688      488b4318       mov rax, qword [rbx + 0x18]
0x0000e68c      4885c0         test rax, rax
0x0000e68f      0f88cb000000   js 0xe760
0x0000e695      660fefc9       pxor xmm1, xmm1
0x0000e699      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000e69e      0f28da         movaps xmm3, xmm2
0x0000e6a1      f30f59d8       mulss xmm3, xmm0
0x0000e6a5      0f2ecb         ucomiss xmm1, xmm3
0x0000e6a8      0f861cffffff   jbe 0xe5ca
0x0000e6ae      807a1000       cmp byte [rdx + 0x10], 0
0x0000e6b2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x0000e6b7      7504           jne 0xe6bd
0x0000e6b9      f30f59c2       mulss xmm0, xmm2
0x0000e6bd      0f2e0588b900.  ucomiss xmm0, dword [0x0001a04c]
0x0000e6c4      736d           jae 0xe733
0x0000e6c6      0f2e0583b900.  ucomiss xmm0, dword [0x0001a050]
0x0000e6cd      0f83ad000000   jae 0xe780
0x0000e6d3      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e6d8      4889df         mov rdi, rbx
0x0000e6db      e800fcffff     call sym.hash_rehash
0x0000e6e0      84c0           test al, al
0x0000e6e2      744f           je 0xe733
0x0000e6e4      31c9           xor ecx, ecx
0x0000e6e6      4c89e2         mov rdx, r12
0x0000e6e9      4889ee         mov rsi, rbp
0x0000e6ec      4889df         mov rdi, rbx
0x0000e6ef      e83cf1ffff     call sym.hash_find_entry
0x0000e6f4      4885c0         test rax, rax
0x0000e6f7      0f84cdfeffff   je 0xe5ca
0x0000e6fd      e88e4bffff     call sym.imp.abort
0x0000e702      660f1f440000   nop word [rax + rax]
0x0000e708      49892c24       mov qword [r12], rbp
0x0000e70c      b801000000     mov eax, 1
0x0000e711      4883432001     add qword [rbx + 0x20], 1
0x0000e716      4883431801     add qword [rbx + 0x18], 1
0x0000e71b      e94cfeffff     jmp 0xe56c
0x0000e720      bf10000000     mov edi, 0x10
0x0000e725      e85e51ffff     call 0x3888
0x0000e72a      4885c0         test rax, rax
0x0000e72d      0f85bbfeffff   jne 0xe5ee
0x0000e733      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000e738      e92ffeffff     jmp 0xe56c
0x0000e73d      0f1f00         nop dword [rax]
0x0000e740      4889c1         mov rcx, rax
0x0000e743      660fefc0       pxor xmm0, xmm0
0x0000e747      48d1e9         shr rcx, 1
0x0000e74a      83e001         and eax, 1
0x0000e74d      4809c1         or rcx, rax
0x0000e750      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000e755      f30f58c0       addss xmm0, xmm0
0x0000e759      e92affffff     jmp 0xe688
0x0000e75e      6690           nop
0x0000e760      4889c1         mov rcx, rax
0x0000e763      660fefc9       pxor xmm1, xmm1
0x0000e767      48d1e9         shr rcx, 1
0x0000e76a      83e001         and eax, 1
0x0000e76d      4809c1         or rcx, rax
0x0000e770      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000e775      f30f58c9       addss xmm1, xmm1
0x0000e779      e920ffffff     jmp 0xe69e
0x0000e77e      6690           nop
0x0000e780      f30f5c05c8b8.  subss xmm0, dword [0x0001a050]
0x0000e788      48b800000000.  movabs rax, 0x8000000000000000
0x0000e792      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e797      4831c6         xor rsi, rax
0x0000e79a      e939ffffff     jmp 0xe6d8
0x0000e79f      e87c4cffff     call sym.imp.__stack_chk_fail
0x0000e7a4      6690           nop
0x0000e7a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000e7b0      53             push rbx
0x0000e7b1      4889f3         mov rbx, rsi
0x0000e7b4      4883ec10       sub rsp, 0x10
0x0000e7b8      4889e2         mov rdx, rsp
0x0000e7bb      64488b042528.  mov rax, qword fs:[0x28]
0x0000e7c4      4889442408     mov qword [rsp + 8], rax
0x0000e7c9      31c0           xor eax, eax
0x0000e7cb      e850fdffff     call sym.hash_insert_if_absent
0x0000e7d0      83f8ff         cmp eax, 0xffffffff
0x0000e7d3      742b           je 0xe800
0x0000e7d5      85c0           test eax, eax
0x0000e7d7      7504           jne 0xe7dd
0x0000e7d9      488b1c24       mov rbx, qword [rsp]
0x0000e7dd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e7e2      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e7eb      4889d8         mov rax, rbx
0x0000e7ee      7514           jne 0xe804
0x0000e7f0      4883c410       add rsp, 0x10
0x0000e7f4      5b             pop rbx
0x0000e7f5      c3             ret
0x0000e7f6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e800      31db           xor ebx, ebx
0x0000e802      ebd9           jmp 0xe7dd
0x0000e804      e8174cffff     call sym.imp.__stack_chk_fail
0x0000e809      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000e810      4154           push r12
0x0000e812      55             push rbp
0x0000e813      b901000000     mov ecx, 1
0x0000e818      53             push rbx
0x0000e819      4889fb         mov rbx, rdi
0x0000e81c      4883ec10       sub rsp, 0x10
0x0000e820      4889e2         mov rdx, rsp
0x0000e823      64488b042528.  mov rax, qword fs:[0x28]
0x0000e82c      4889442408     mov qword [rsp + 8], rax
0x0000e831      31c0           xor eax, eax
0x0000e833      e8f8efffff     call sym.hash_find_entry
0x0000e838      4885c0         test rax, rax
0x0000e83b      4889c5         mov rbp, rax
0x0000e83e      740f           je 0xe84f
0x0000e840      488b0424       mov rax, qword [rsp]
0x0000e844      48836b2001     sub qword [rbx + 0x20], 1
0x0000e849      48833800       cmp qword [rax], 0
0x0000e84d      7421           je 0xe870
0x0000e84f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000e854      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000e85d      4889e8         mov rax, rbp
0x0000e860      0f85a8010000   jne 0xea0e
0x0000e866      4883c410       add rsp, 0x10
0x0000e86a      5b             pop rbx
0x0000e86b      5d             pop rbp
0x0000e86c      415c           pop r12
0x0000e86e      c3             ret
0x0000e86f      90             nop
0x0000e870      488b4318       mov rax, qword [rbx + 0x18]
0x0000e874      4883e801       sub rax, 1
0x0000e878      4885c0         test rax, rax
0x0000e87b      48894318       mov qword [rbx + 0x18], rax
0x0000e87f      0f88fb000000   js 0xe980
0x0000e885      660fefc0       pxor xmm0, xmm0
0x0000e889      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e88e      488b4310       mov rax, qword [rbx + 0x10]
0x0000e892      488b5328       mov rdx, qword [rbx + 0x28]
0x0000e896      4885c0         test rax, rax
0x0000e899      0f88c1000000   js 0xe960
0x0000e89f      660fefc9       pxor xmm1, xmm1
0x0000e8a3      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000e8a8      f30f590a       mulss xmm1, dword [rdx]
0x0000e8ac      0f2ec8         ucomiss xmm1, xmm0
0x0000e8af      769e           jbe 0xe84f
0x0000e8b1      488d7b28       lea rdi, [rbx + 0x28]
0x0000e8b5      e896f0ffff     call sym.check_tuning.isra.0
0x0000e8ba      488b4310       mov rax, qword [rbx + 0x10]
0x0000e8be      488b5328       mov rdx, qword [rbx + 0x28]
0x0000e8c2      4885c0         test rax, rax
0x0000e8c5      0f8825010000   js 0xe9f0
0x0000e8cb      660fefc0       pxor xmm0, xmm0
0x0000e8cf      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000e8d4      488b4318       mov rax, qword [rbx + 0x18]
0x0000e8d8      4885c0         test rax, rax
0x0000e8db      0f88ef000000   js 0xe9d0
0x0000e8e1      660fefc9       pxor xmm1, xmm1
0x0000e8e5      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000e8ea      f30f1012       movss xmm2, dword [rdx]
0x0000e8ee      f30f59d0       mulss xmm2, xmm0
0x0000e8f2      0f2ed1         ucomiss xmm2, xmm1
0x0000e8f5      0f8654ffffff   jbe 0xe84f
0x0000e8fb      807a1000       cmp byte [rdx + 0x10], 0
0x0000e8ff      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000e904      0f84b6000000   je 0xe9c0
0x0000e90a      0f2e053fb700.  ucomiss xmm0, dword [0x0001a050]
0x0000e911      0f8389000000   jae 0xe9a0
0x0000e917      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e91c      4889df         mov rdi, rbx
0x0000e91f      e8bcf9ffff     call sym.hash_rehash
0x0000e924      84c0           test al, al
0x0000e926      0f8523ffffff   jne 0xe84f
0x0000e92c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000e930      4885ff         test rdi, rdi
0x0000e933      7414           je 0xe949
0x0000e935      0f1f00         nop dword [rax]
0x0000e938      4c8b6708       mov r12, qword [rdi + 8]
0x0000e93c      e83f4fffff     call sym..plt.got
0x0000e941      4d85e4         test r12, r12
0x0000e944      4c89e7         mov rdi, r12
0x0000e947      75ef           jne 0xe938
0x0000e949      48c743480000.  mov qword [rbx + 0x48], 0
0x0000e951      e9f9feffff     jmp 0xe84f
0x0000e956      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e960      4889c1         mov rcx, rax
0x0000e963      660fefc9       pxor xmm1, xmm1
0x0000e967      48d1e9         shr rcx, 1
0x0000e96a      83e001         and eax, 1
0x0000e96d      4809c1         or rcx, rax
0x0000e970      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000e975      f30f58c9       addss xmm1, xmm1
0x0000e979      e92affffff     jmp 0xe8a8
0x0000e97e      6690           nop
0x0000e980      4889c2         mov rdx, rax
0x0000e983      660fefc0       pxor xmm0, xmm0
0x0000e987      48d1ea         shr rdx, 1
0x0000e98a      83e001         and eax, 1
0x0000e98d      4809c2         or rdx, rax
0x0000e990      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000e995      f30f58c0       addss xmm0, xmm0
0x0000e999      e9f0feffff     jmp 0xe88e
0x0000e99e      6690           nop
0x0000e9a0      f30f5c05a8b6.  subss xmm0, dword [0x0001a050]
0x0000e9a8      48b800000000.  movabs rax, 0x8000000000000000
0x0000e9b2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000e9b7      4831c6         xor rsi, rax
0x0000e9ba      e95dffffff     jmp 0xe91c
0x0000e9bf      90             nop
0x0000e9c0      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000e9c5      e940ffffff     jmp 0xe90a
0x0000e9ca      660f1f440000   nop word [rax + rax]
0x0000e9d0      4889c1         mov rcx, rax
0x0000e9d3      660fefc9       pxor xmm1, xmm1
0x0000e9d7      48d1e9         shr rcx, 1
0x0000e9da      83e001         and eax, 1
0x0000e9dd      4809c1         or rcx, rax
0x0000e9e0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000e9e5      f30f58c9       addss xmm1, xmm1
0x0000e9e9      e9fcfeffff     jmp 0xe8ea
0x0000e9ee      6690           nop
0x0000e9f0      4889c1         mov rcx, rax
0x0000e9f3      660fefc0       pxor xmm0, xmm0
0x0000e9f7      48d1e9         shr rcx, 1
0x0000e9fa      83e001         and eax, 1
0x0000e9fd      4809c1         or rcx, rax
0x0000ea00      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000ea05      f30f58c0       addss xmm0, xmm0
0x0000ea09      e9c6feffff     jmp 0xe8d4
0x0000ea0e      e80d4affff     call sym.imp.__stack_chk_fail
0x0000ea13      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ea1d      0f1f00         nop dword [rax]
;-- triple_hash:
0x0000ea20      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x0000ea21      53             push rbx
0x0000ea22      4889fd         mov rbp, rdi
0x0000ea25      4889f3         mov rbx, rsi
0x0000ea28      4883ec08       sub rsp, 8
0x0000ea2c      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x0000ea2f      e8ec720000     call sym.hash_pjw
0x0000ea34      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ea38      31d2           xor edx, edx
0x0000ea3a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ea3e      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x0000ea41      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x0000ea42      5d             pop rbp
0x0000ea43      4889d0         mov rax, rdx
0x0000ea46      c3             ret
0x0000ea47      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x0000ea50      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x0000ea54      31d2           xor edx, edx
0x0000ea56      48f7f6         div rsi
0x0000ea59      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x0000ea5c      c3             ret
0x0000ea5d      0f1f00         nop dword [rax]
;-- triple_compare:
0x0000ea60      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ea62      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ea66      48395708       cmp qword [rdi + 8], rdx
0x0000ea6a      7404           je 0xea70
0x0000ea6c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000ea6e      6690           nop
0x0000ea70      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ea74      48394f10       cmp qword [rdi + 0x10], rcx
0x0000ea78      75f2           jne 0xea6c
0x0000ea7a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000ea7e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x0000ea81      488b3f         mov rdi, qword [rdi]
0x0000ea84      e8c7540000     call sym.same_name
0x0000ea89      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000ea8d      c3             ret
0x0000ea8e      6690           nop
;-- triple_compare_ino_str:
0x0000ea90      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000ea92      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000ea96      48395708       cmp qword [rdi + 8], rdx
0x0000ea9a      7404           je 0xeaa0
0x0000ea9c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000ea9e      6690           nop
0x0000eaa0      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000eaa4      48394f10       cmp qword [rdi + 0x10], rcx
0x0000eaa8      75f2           jne 0xea9c
0x0000eaaa      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000eaae      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x0000eab1      488b3f         mov rdi, qword [rdi]
0x0000eab4      e8d74affff     call sym.imp.strcmp
0x0000eab9      85c0           test eax, eax
0x0000eabb      0f94c0         sete al
0x0000eabe      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000eac2      c3             ret
0x0000eac3      0f1f00         nop dword [rax]
0x0000eac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x0000ead0      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x0000ead1      4889fb         mov rbx, rdi
0x0000ead4      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x0000ead7      e8a44dffff     call sym..plt.got
0x0000eadc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000eadf      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x0000eae0      e99b4dffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000eae5      662e0f1f8400.  nop word cs:[rax + rax]
0x0000eaef      90             nop
;-- adjust_value.part.0:
0x0000eaf0      d9055ab50000   fld dword [0x0001a050]                  ; ../coreutils-8.31/lib/human.c:54
0x0000eaf6      db6c2408       fld xword [rsp + 8]
0x0000eafa      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x0000eafc      7372           jae 0xeb70
0x0000eafe      ddd9           fstp st(1)
0x0000eb00      d97c24f6       fnstcw word [rsp - 0xa]
0x0000eb04      0fb74424f6     movzx eax, word [rsp - 0xa]
0x0000eb09      80cc0c         or ah, 0xc
0x0000eb0c      66894424f4     mov word [rsp - 0xc], ax
0x0000eb11      d9c0           fld st(0)
0x0000eb13      d96c24f4       fldcw word [rsp - 0xc]
0x0000eb17      df7c24e8       fistp qword [rsp - 0x18]
0x0000eb1b      d96c24f6       fldcw word [rsp - 0xa]
0x0000eb1f      488b4424e8     mov rax, qword [rsp - 0x18]
0x0000eb24      48894424e0     mov qword [rsp - 0x20], rax
0x0000eb29      4885c0         test rax, rax
0x0000eb2c      df6c24e0       fild qword [rsp - 0x20]
0x0000eb30      7906           jns 0xeb38
0x0000eb32      d80514b50000   fadd dword [0x0001a04c]
0x0000eb38      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x0000eb3a      752c           jne 0xeb68
0x0000eb3c      d9c9           fxch st(1)
0x0000eb3e      dfe9           fucomip st(1)
0x0000eb40      7a06           jp 0xeb48
0x0000eb42      7426           je 0xeb6a
0x0000eb44      ddd8           fstp st(0)
0x0000eb46      eb08           jmp 0xeb50
0x0000eb48      ddd8           fstp st(0)
0x0000eb4a      660f1f440000   nop word [rax + rax]
0x0000eb50      4883c001       add rax, 1
0x0000eb54      48894424e0     mov qword [rsp - 0x20], rax
0x0000eb59      4885c0         test rax, rax
0x0000eb5c      df6c24e0       fild qword [rsp - 0x20]
0x0000eb60      784e           js 0xebb0
0x0000eb62      eb06           jmp 0xeb6a
0x0000eb64      0f1f4000       nop dword [rax]
0x0000eb68      ddd9           fstp st(1)
0x0000eb6a      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x0000eb6c      0f1f4000       nop dword [rax]
0x0000eb70      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x0000eb74      0fb74424f6     movzx eax, word [rsp - 0xa]
0x0000eb79      dce1           fsubr st(1), st(0)
0x0000eb7b      d9c9           fxch st(1)
0x0000eb7d      48ba00000000.  movabs rdx, 0x8000000000000000
0x0000eb87      80cc0c         or ah, 0xc
0x0000eb8a      66894424f4     mov word [rsp - 0xc], ax
0x0000eb8f      d96c24f4       fldcw word [rsp - 0xc]
0x0000eb93      df7c24e8       fistp qword [rsp - 0x18]
0x0000eb97      d96c24f6       fldcw word [rsp - 0xa]
0x0000eb9b      488b4424e8     mov rax, qword [rsp - 0x18]
0x0000eba0      4831d0         xor rax, rdx
0x0000eba3      e97cffffff     jmp 0xeb24
0x0000eba8      0f1f84000000.  nop dword [rax + rax]
0x0000ebb0      d80596b40000   fadd dword [0x0001a04c]
0x0000ebb6      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x0000ebb7      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x0000ebc0      4157           push r15
0x0000ebc2      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x0000ebc4      89d0           mov eax, edx
0x0000ebc6      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x0000ebc8      4154           push r12
0x0000ebca      4189d7         mov r15d, edx
0x0000ebcd      55             push rbp
0x0000ebce      53             push rbx
0x0000ebcf      83e020         and eax, 0x20                           ; "@"
0x0000ebd2      4183e703       and r15d, 3
0x0000ebd6      4189d4         mov r12d, edx
0x0000ebd9      4889fb         mov rbx, rdi
0x0000ebdc      4881ec980000.  sub rsp, 0x98
0x0000ebe3      48894c2418     mov qword [rsp + 0x18], rcx
0x0000ebe8      89442430       mov dword [rsp + 0x30], eax
0x0000ebec      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000ebf5      48898c248800.  mov qword [rsp + 0x88], rcx
0x0000ebfd      31c9           xor ecx, ecx
0x0000ebff      83f801         cmp eax, 1
0x0000ec02      48893424       mov qword [rsp], rsi
0x0000ec06      4c89442410     mov qword [rsp + 0x10], r8
0x0000ec0b      19c0           sbb eax, eax
0x0000ec0d      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x0000ec10      0500040000     add eax, 0x400
0x0000ec15      89442434       mov dword [rsp + 0x34], eax
0x0000ec19      e82247ffff     call sym.imp.localeconv
0x0000ec1e      4c8b30         mov r14, qword [rax]
0x0000ec21      4989c5         mov r13, rax
0x0000ec24      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x0000ec27      e8d447ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x0000ec2c      498b4d10       mov rcx, qword [r13 + 0x10]
0x0000ec30      4d8b6d08       mov r13, qword [r13 + 8]
0x0000ec34      4889c5         mov rbp, rax
0x0000ec37      4883e801       sub rax, 1
0x0000ec3b      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x0000ec40      4883f810       cmp rax, 0x10
0x0000ec44      488d0551b300.  lea rax, [0x00019f9c]                   ; u".C\u4f50\u4953X\u2023\u6e65\u7274\u6569\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u2023\u7562\u6b63\u7465\u3a73\u2020\u2020\u2020\u2020\u2520\u756c\n\u616d\u2078\u7562\u6b63\u7465\u6c20\u6e65\u7467\u3a68\u2520\u756c\n"
0x0000ec4b      4c89ef         mov rdi, r13
0x0000ec4e      480f43ea       cmovae rbp, rdx
0x0000ec52      48894c2438     mov qword [rsp + 0x38], rcx
0x0000ec57      4c0f43f0       cmovae r14, rax
0x0000ec5b      e8a047ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x0000ec60      4883f811       cmp rax, 0x11
0x0000ec64      488d05488c00.  lea rax, [0x000178b3]
0x0000ec6b      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ec70      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000ec75      4c0f43e8       cmovae r13, rax
0x0000ec79      488b0424       mov rax, qword [rsp]
0x0000ec7d      480587020000   add rax, 0x287
0x0000ec83      4839cf         cmp rdi, rcx
0x0000ec86      4889442408     mov qword [rsp + 8], rax
0x0000ec8b      0f8747010000   ja 0xedd8
0x0000ec91      31d2           xor edx, edx
0x0000ec93      4889c8         mov rax, rcx
0x0000ec96      48f7f7         div rdi
0x0000ec99      4885d2         test rdx, rdx
0x0000ec9c      4889c7         mov rdi, rax
0x0000ec9f      0f845b030000   je 0xf000
0x0000eca5      48894c2418     mov qword [rsp + 0x18], rcx
0x0000ecaa      4885c9         test rcx, rcx
0x0000ecad      df6c2418       fild qword [rsp + 0x18]
0x0000ecb1      7906           jns 0xecb9
0x0000ecb3      d80593b30000   fadd dword [0x0001a04c]
0x0000ecb9      488b442410     mov rax, qword [rsp + 0x10]
0x0000ecbe      4889442418     mov qword [rsp + 0x18], rax
0x0000ecc3      4885c0         test rax, rax
0x0000ecc6      df6c2418       fild qword [rsp + 0x18]
0x0000ecca      7906           jns 0xecd2
0x0000eccc      d8057ab30000   fadd dword [0x0001a04c]
0x0000ecd2      def9           fdivp st(1)
0x0000ecd4      48895c2418     mov qword [rsp + 0x18], rbx
0x0000ecd9      4885db         test rbx, rbx
0x0000ecdc      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x0000ece0      7906           jns 0xece8
0x0000ece2      d80564b30000   fadd dword [0x0001a04c]
0x0000ece8      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x0000ecec      dec9           fmulp st(1)
0x0000ecee      0f84c4010000   je 0xeeb8
0x0000ecf4      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x0000ecf8      31db           xor ebx, ebx
0x0000ecfa      d9c0           fld st(0)
0x0000ecfc      eb06           jmp 0xed04
0x0000ecfe      6690           nop
0x0000ed00      ddd9           fstp st(1)
0x0000ed02      d9ca           fxch st(2)
0x0000ed04      d9c0           fld st(0)
0x0000ed06      83c301         add ebx, 1
0x0000ed09      d8ca           fmul st(2)
0x0000ed0b      d9cb           fxch st(3)
0x0000ed0d      dbeb           fucomi st(3)
0x0000ed0f      720f           jb 0xed20
0x0000ed11      83fb08         cmp ebx, 8
0x0000ed14      75ea           jne 0xed00
0x0000ed16      ddda           fstp st(2)
0x0000ed18      ddda           fstp st(2)
0x0000ed1a      eb08           jmp 0xed24
0x0000ed1c      0f1f4000       nop dword [rax]
0x0000ed20      ddda           fstp st(2)
0x0000ed22      ddda           fstp st(2)
0x0000ed24      8b4c2430       mov ecx, dword [rsp + 0x30]
0x0000ed28      4883c501       add rbp, 1
0x0000ed2c      31c0           xor eax, eax
0x0000ed2e      def1           fdivrp st(1)
0x0000ed30      85c9           test ecx, ecx
0x0000ed32      0f94c0         sete al
0x0000ed35      4183ff01       cmp r15d, 1
0x0000ed39      488d440501     lea rax, [rbp + rax + 1]
0x0000ed3e      4889442418     mov qword [rsp + 0x18], rax
0x0000ed43      0f8467050000   je 0xf2b0
0x0000ed49      db2d61b30000   fld xword [0x0001a0b0]
0x0000ed4f      dfe9           fucomip st(1)
0x0000ed51      0f87d1030000   ja 0xf128
0x0000ed57      d9c0           fld st(0)
0x0000ed59      db7c2420       fstp xword [rsp + 0x20]
0x0000ed5d      4883ec10       sub rsp, 0x10
0x0000ed61      488d0dfeb200.  lea rcx, str..1Lf                       ; 0x1a066 ; "%.1Lf"
0x0000ed68      be01000000     mov esi, 1
0x0000ed6d      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000ed74      31c0           xor eax, eax
0x0000ed76      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x0000ed7b      4c89f7         mov rdi, r14
0x0000ed7e      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x0000ed81      e8ea4affff     call sym.imp.__sprintf_chk
0x0000ed86      4c89f7         mov rdi, r14
0x0000ed89      e87246ffff     call sym.imp.strlen
0x0000ed8e      59             pop rcx
0x0000ed8f      5e             pop rsi
0x0000ed90      483b442418     cmp rax, qword [rsp + 0x18]
0x0000ed95      4989c6         mov r14, rax
0x0000ed98      db6c2420       fld xword [rsp + 0x20]
0x0000ed9c      0f87a6050000   ja 0xf348                               ; ../coreutils-8.31/lib/human.c:128
0x0000eda2      41f6c408       test r12b, 8
0x0000eda6      0f8464010000   je 0xef10
0x0000edac      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x0000edb0      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x0000edb6      0f855c010000   jne 0xef18
0x0000edbc      d905eab20000   fld dword [0x0001a0ac]
0x0000edc2      4183ff01       cmp r15d, 1
0x0000edc6      dcc9           fmul st(1), st(0)
0x0000edc8      0f8582050000   jne 0xf350                              ; ../coreutils-8.31/lib/human.c:81
0x0000edce      e930050000     jmp 0xf303
0x0000edd3      0f1f440000     nop dword [rax + rax]
0x0000edd8      4885c9         test rcx, rcx
0x0000eddb      0f84c4feffff   je 0xeca5
0x0000ede1      488b442410     mov rax, qword [rsp + 0x10]
0x0000ede6      31d2           xor edx, edx
0x0000ede8      48f7f1         div rcx
0x0000edeb      4885d2         test rdx, rdx
0x0000edee      4989c0         mov r8, rax
0x0000edf1      0f85aefeffff   jne 0xeca5
0x0000edf7      4889d8         mov rax, rbx
0x0000edfa      31d2           xor edx, edx
0x0000edfc      49f7f0         div r8
0x0000edff      4889c3         mov rbx, rax
0x0000ee02      488d0492       lea rax, [rdx + rdx*4]
0x0000ee06      31d2           xor edx, edx
0x0000ee08      4889de         mov rsi, rbx
0x0000ee0b      4801c0         add rax, rax
0x0000ee0e      49f7f0         div r8
0x0000ee11      4801d2         add rdx, rdx
0x0000ee14      4189c1         mov r9d, eax
0x0000ee17      4939d0         cmp r8, rdx
0x0000ee1a      0f8688050000   jbe 0xf3a8
0x0000ee20      31ff           xor edi, edi
0x0000ee22      4885d2         test rdx, rdx
0x0000ee25      400f95c7       setne dil
0x0000ee29      4489e1         mov ecx, r12d
0x0000ee2c      4c8b442408     mov r8, qword [rsp + 8]
0x0000ee31      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000ee36      83e110         and ecx, 0x10
0x0000ee39      0f84c1030000   je 0xf200
0x0000ee3f      448b442434     mov r8d, dword [rsp + 0x34]
0x0000ee44      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x0000ee47      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x0000ee4a      0f8770050000   ja 0xf3c0
0x0000ee50      31db           xor ebx, ebx
0x0000ee52      eb23           jmp 0xee77
0x0000ee54      0f1f4000       nop dword [rax]
0x0000ee58      85ff           test edi, edi
0x0000ee5a      400f95c7       setne dil
0x0000ee5e      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x0000ee62      83c301         add ebx, 1
0x0000ee65      4d39d0         cmp r8, r10
0x0000ee68      0f870f030000   ja 0xf17d                               ; ../coreutils-8.31/lib/human.c:26
0x0000ee6e      83fb08         cmp ebx, 8
0x0000ee71      0f84a1050000   je 0xf418
0x0000ee77      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x0000ee7a      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x0000ee7c      89fe           mov esi, edi
0x0000ee7e      49f7f0         div r8
0x0000ee81      d1fe           sar esi, 1
0x0000ee83      4989c2         mov r10, rax
0x0000ee86      8d0492         lea eax, [rdx + rdx*4]
0x0000ee89      31d2           xor edx, edx
0x0000ee8b      418d0441       lea eax, [r9 + rax*2]
0x0000ee8f      41f7f3         div r11d
0x0000ee92      8d1456         lea edx, [rsi + rdx*2]
0x0000ee95      4189c1         mov r9d, eax
0x0000ee98      4c89d6         mov rsi, r10
0x0000ee9b      01d7           add edi, edx
0x0000ee9d      4139d3         cmp r11d, edx
0x0000eea0      77b6           ja 0xee58
0x0000eea2      4139fb         cmp r11d, edi
0x0000eea5      400f92c7       setb dil
0x0000eea9      400fb6ff       movzx edi, dil
0x0000eead      83c702         add edi, 2
0x0000eeb0      ebb0           jmp 0xee62
0x0000eeb2      660f1f440000   nop word [rax + rax]
0x0000eeb8      4183ff01       cmp r15d, 1
0x0000eebc      740e           je 0xeecc
0x0000eebe      db2decb10000   fld xword [0x0001a0b0]
0x0000eec4      dfe9           fucomip st(1)
0x0000eec6      0f8784020000   ja 0xf150
0x0000eecc      4883ec10       sub rsp, 0x10
0x0000eed0      488d0d89b100.  lea rcx, [0x0001a060]                   ; "%.0Lf"
0x0000eed7      be01000000     mov esi, 1
0x0000eedc      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x0000eee1      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000eee8      31c0           xor eax, eax
0x0000eeea      db3c24         fstp xword [rsp]
0x0000eeed      31ed           xor ebp, ebp
0x0000eeef      4889df         mov rdi, rbx
0x0000eef2      e87949ffff     call sym.imp.__sprintf_chk
0x0000eef7      4889df         mov rdi, rbx
0x0000eefa      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000eeff      e8fc44ffff     call sym.imp.strlen
0x0000ef04      5e             pop rsi
0x0000ef05      5f             pop rdi
0x0000ef06      4989c6         mov r14, rax
0x0000ef09      eb15           jmp 0xef20
0x0000ef0b      0f1f440000     nop dword [rax + rax]
0x0000ef10      ddd8           fstp st(0)
0x0000ef12      eb0c           jmp 0xef20
0x0000ef14      0f1f4000       nop dword [rax]
0x0000ef18      ddd8           fstp st(0)
0x0000ef1a      660f1f440000   nop word [rax + rax]
0x0000ef20      4c8b7c2408     mov r15, qword [rsp + 8]
0x0000ef25      488b3424       mov rsi, qword [rsp]
0x0000ef29      4c89f2         mov rdx, r14
0x0000ef2c      4d29f7         sub r15, r14
0x0000ef2f      4929ee         sub r14, rbp
0x0000ef32      4c89ff         mov rdi, r15
0x0000ef35      e81648ffff     call sym.imp.memmove
0x0000ef3a      4d89f0         mov r8, r14
0x0000ef3d      4d01f8         add r8, r15
0x0000ef40      41f6c404       test r12b, 4
0x0000ef44      0f85de000000   jne 0xf028
0x0000ef4a      41f6c480       test r12b, 0x80
0x0000ef4e      7477           je 0xefc7
0x0000ef50      83fbff         cmp ebx, 0xffffffff
0x0000ef53      0f8417030000   je 0xf270
0x0000ef59      4489e0         mov eax, r12d
0x0000ef5c      2500010000     and eax, 0x100
0x0000ef61      89c1           mov ecx, eax
0x0000ef63      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x0000ef65      7460           je 0xefc7
0x0000ef67      4183e440       and r12d, 0x40                          ; segment.PHDR
0x0000ef6b      0f8597010000   jne 0xf108
0x0000ef71      85db           test ebx, ebx
0x0000ef73      0f842d060000   je 0xf5a6
0x0000ef79      83fb01         cmp ebx, 1
0x0000ef7c      750e           jne 0xef8c                              ; ../coreutils-8.31/lib/human.c:-122
0x0000ef7e      448b4c2430     mov r9d, dword [rsp + 0x30]
0x0000ef83      4585c9         test r9d, r9d
0x0000ef86      0f8444040000   je 0xf3d0
0x0000ef8c      488d0d0db100.  lea rcx, obj.power_letter               ; 0x1a0a0
0x0000ef93      4863db         movsxd rbx, ebx
0x0000ef96      488b7c2408     mov rdi, qword [rsp + 8]
0x0000ef9b      85c0           test eax, eax
0x0000ef9d      0fb60c19       movzx ecx, byte [rcx + rbx]
0x0000efa1      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x0000efa5      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x0000efa7      0f8437040000   je 0xf3e4
0x0000efad      448b442430     mov r8d, dword [rsp + 0x30]
0x0000efb2      4585c0         test r8d, r8d
0x0000efb5      0f85b5010000   jne 0xf170
0x0000efbb      488d4201       lea rax, [rdx + 1]
0x0000efbf      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x0000efc2      4889442408     mov qword [rsp + 8], rax
0x0000efc7      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x0000efcc      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x0000efd4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000efdd      c60000         mov byte [rax], 0
0x0000efe0      4c89f8         mov rax, r15
0x0000efe3      0f8592050000   jne 0xf57b
0x0000efe9      4881c4980000.  add rsp, 0x98
0x0000eff0      5b             pop rbx
0x0000eff1      5d             pop rbp
0x0000eff2      415c           pop r12
0x0000eff4      415d           pop r13
0x0000eff6      415e           pop r14
0x0000eff8      415f           pop r15
0x0000effa      c3             ret
0x0000effb      0f1f440000     nop dword [rax + rax]
0x0000f000      4889de         mov rsi, rbx
0x0000f003      31d2           xor edx, edx
0x0000f005      480faff0       imul rsi, rax
0x0000f009      4889f0         mov rax, rsi
0x0000f00c      48f7f7         div rdi
0x0000f00f      4839d8         cmp rax, rbx
0x0000f012      0f858dfcffff   jne 0xeca5
0x0000f018      31ff           xor edi, edi
0x0000f01a      4531c9         xor r9d, r9d
0x0000f01d      e907feffff     jmp 0xee29
0x0000f022      660f1f440000   nop word [rax + rax]
0x0000f028      4d89c6         mov r14, r8
0x0000f02b      4c89ef         mov rdi, r13
0x0000f02e      4c89442448     mov qword [rsp + 0x48], r8
0x0000f033      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x0000f036      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x0000f03d      e8be43ffff     call sym.imp.strlen
0x0000f042      488d7c2450     lea rdi, [rsp + 0x50]
0x0000f047      b929000000     mov ecx, 0x29                           ; ')'
0x0000f04c      4c89f2         mov rdx, r14
0x0000f04f      4c89fe         mov rsi, r15
0x0000f052      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x0000f057      48897c2418     mov qword [rsp + 0x18], rdi
0x0000f05c      e86f45ffff     call sym.imp.__memcpy_chk
0x0000f061      4489e1         mov ecx, r12d
0x0000f064      895c2420       mov dword [rsp + 0x20], ebx
0x0000f068      4d89f4         mov r12, r14
0x0000f06b      4c89eb         mov rbx, r13
0x0000f06e      4c8b442448     mov r8, qword [rsp + 0x48]
0x0000f073      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x0000f078      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x0000f07d      4189ce         mov r14d, ecx
0x0000f080      eb40           jmp 0xf0c2
0x0000f082      660f1f440000   nop word [rax + rax]
0x0000f088      488b442418     mov rax, qword [rsp + 0x18]
0x0000f08d      4929ec         sub r12, rbp
0x0000f090      4929e8         sub r8, rbp
0x0000f093      4c89c7         mov rdi, r8
0x0000f096      4889ea         mov rdx, rbp
0x0000f099      4a8d3420       lea rsi, [rax + r12]
0x0000f09d      e84e45ffff     call sym.imp.memcpy
0x0000f0a2      4d85e4         test r12, r12
0x0000f0a5      4989c0         mov r8, rax
0x0000f0a8      0f840a050000   je 0xf5b8
0x0000f0ae      4d29e8         sub r8, r13
0x0000f0b1      4c89ea         mov rdx, r13
0x0000f0b4      4889de         mov rsi, rbx
0x0000f0b7      4c89c7         mov rdi, r8
0x0000f0ba      e83145ffff     call sym.imp.memcpy
0x0000f0bf      4989c0         mov r8, rax
0x0000f0c2      410fb607       movzx eax, byte [r15]
0x0000f0c6      84c0           test al, al
0x0000f0c8      740d           je 0xf0d7
0x0000f0ca      3c7f           cmp al, 0x7f
0x0000f0cc      0fb6e8         movzx ebp, al
0x0000f0cf      490f43ec       cmovae rbp, r12
0x0000f0d3      4983c701       add r15, 1
0x0000f0d7      4c39e5         cmp rbp, r12
0x0000f0da      76ac           jbe 0xf088
0x0000f0dc      4489f0         mov eax, r14d
0x0000f0df      4d89c7         mov r15, r8
0x0000f0e2      4d89e6         mov r14, r12
0x0000f0e5      488b742418     mov rsi, qword [rsp + 0x18]
0x0000f0ea      4d29f7         sub r15, r14
0x0000f0ed      4c89f2         mov rdx, r14
0x0000f0f0      4c89ff         mov rdi, r15
0x0000f0f3      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x0000f0f7      4189c4         mov r12d, eax
0x0000f0fa      e8f144ffff     call sym.imp.memcpy
0x0000f0ff      e946feffff     jmp 0xef4a
0x0000f104      0f1f4000       nop dword [rax]
0x0000f108      488b0c24       mov rcx, qword [rsp]
0x0000f10c      488db9880200.  lea rdi, [rcx + 0x288]
0x0000f113      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x0000f11a      48897c2408     mov qword [rsp + 8], rdi
0x0000f11f      e94dfeffff     jmp 0xef71
0x0000f124      0f1f4000       nop dword [rax]
0x0000f128      4883ec10       sub rsp, 0x10
0x0000f12c      4489ff         mov edi, r15d
0x0000f12f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x0000f131      db3c24         fstp xword [rsp]
0x0000f134      db7c2430       fstp xword [rsp + 0x30]
0x0000f138      e8b3f9ffff     call sym.adjust_value.part.0
0x0000f13d      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x0000f13e      5a             pop rdx
0x0000f13f      db6c2420       fld xword [rsp + 0x20]
0x0000f143      e911fcffff     jmp 0xed59
0x0000f148      0f1f84000000.  nop dword [rax + rax]
0x0000f150      4883ec10       sub rsp, 0x10
0x0000f154      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x0000f157      db3c24         fstp xword [rsp]
0x0000f15a      e891f9ffff     call sym.adjust_value.part.0
0x0000f15f      4158           pop r8
0x0000f161      4159           pop r9
0x0000f163      e964fdffff     jmp 0xeecc
0x0000f168      0f1f84000000.  nop dword [rax + rax]
0x0000f170      488d5702       lea rdx, [rdi + 2]
0x0000f174      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x0000f178      e93efeffff     jmp 0xefbb
0x0000f17d      4983fa09       cmp r10, 9
0x0000f181      0f8791020000   ja 0xf418
0x0000f187      4183ff01       cmp r15d, 1
0x0000f18b      0f84b1020000   je 0xf442
0x0000f191      4585ff         test r15d, r15d
0x0000f194      0f94c2         sete dl
0x0000f197      85ff           test edi, edi
0x0000f199      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x0000f19d      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x0000f1a0      84d2           test dl, dl
0x0000f1a2      0f8481020000   je 0xf429
0x0000f1a8      448d4801       lea r9d, [rax + 1]
0x0000f1ac      4183f90a       cmp r9d, 0xa
0x0000f1b0      0f84fb020000   je 0xf4b1
0x0000f1b6      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x0000f1ba      488b0424       mov rax, qword [rsp]
0x0000f1be      4c8d80860200.  lea r8, [rax + 0x286]
0x0000f1c5      448888860200.  mov byte [rax + 0x286], r9b
0x0000f1cc      89e8           mov eax, ebp
0x0000f1ce      4929e8         sub r8, rbp
0x0000f1d1      83fd08         cmp ebp, 8
0x0000f1d4      0f8387020000   jae 0xf461
0x0000f1da      40f6c504       test bpl, 4
0x0000f1de      0f8582030000   jne 0xf566                              ; ../coreutils-8.31/lib/human.c:-674
0x0000f1e4      85c0           test eax, eax
0x0000f1e6      740f           je 0xf1f7
0x0000f1e8      410fb616       movzx edx, byte [r14]
0x0000f1ec      a802           test al, 2
0x0000f1ee      418810         mov byte [r8], dl
0x0000f1f1      0f8589030000   jne 0xf580
0x0000f1f7      31ff           xor edi, edi
0x0000f1f9      4531c9         xor r9d, r9d
0x0000f1fc      0f1f4000       nop dword [rax]
0x0000f200      4183ff01       cmp r15d, 1
0x0000f204      0f8476010000   je 0xf380
0x0000f20a      4585ff         test r15d, r15d
0x0000f20d      7521           jne 0xf230
0x0000f20f      4401cf         add edi, r9d
0x0000f212      85ff           test edi, edi
0x0000f214      7e1a           jle 0xf230
0x0000f216      4883c601       add rsi, 1
0x0000f21a      85c9           test ecx, ecx
0x0000f21c      7412           je 0xf230
0x0000f21e      8b442434       mov eax, dword [rsp + 0x34]
0x0000f222      4839f0         cmp rax, rsi
0x0000f225      0f84c5010000   je 0xf3f0
0x0000f22b      0f1f440000     nop dword [rax + rax]
0x0000f230      4d89c7         mov r15, r8
0x0000f233      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x0000f23d      0f1f00         nop dword [rax]
0x0000f240      4889f0         mov rax, rsi
0x0000f243      4983ef01       sub r15, 1
0x0000f247      48f7e1         mul rcx
0x0000f24a      48c1ea03       shr rdx, 3
0x0000f24e      488d0492       lea rax, [rdx + rdx*4]
0x0000f252      4801c0         add rax, rax
0x0000f255      4829c6         sub rsi, rax
0x0000f258      83c630         add esi, 0x30
0x0000f25b      4885d2         test rdx, rdx
0x0000f25e      418837         mov byte [r15], sil
0x0000f261      4889d6         mov rsi, rdx
0x0000f264      75da           jne 0xf240
0x0000f266      e9d5fcffff     jmp 0xef40
0x0000f26b      0f1f440000     nop dword [rax + rax]
0x0000f270      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000f275      4883f901       cmp rcx, 1
0x0000f279      0f86a3010000   jbe 0xf422
0x0000f27f      8b542434       mov edx, dword [rsp + 0x34]
0x0000f283      bb01000000     mov ebx, 1
0x0000f288      b801000000     mov eax, 1
0x0000f28d      480fafc2       imul rax, rdx
0x0000f291      4839c1         cmp rcx, rax
0x0000f294      0f86bffcffff   jbe 0xef59
0x0000f29a      83c301         add ebx, 1
0x0000f29d      83fb08         cmp ebx, 8
0x0000f2a0      75eb           jne 0xf28d
0x0000f2a2      e9b2fcffff     jmp 0xef59
0x0000f2a7      660f1f840000.  nop word [rax + rax]
0x0000f2b0      4883ec10       sub rsp, 0x10
0x0000f2b4      488d0dabad00.  lea rcx, str..1Lf                       ; 0x1a066 ; "%.1Lf"
0x0000f2bb      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f2c2      d9c0           fld st(0)
0x0000f2c4      db3c24         fstp xword [rsp]
0x0000f2c7      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000f2cc      be01000000     mov esi, 1
0x0000f2d1      31c0           xor eax, eax
0x0000f2d3      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x0000f2d6      db7c2430       fstp xword [rsp + 0x30]
0x0000f2da      e89145ffff     call sym.imp.__sprintf_chk
0x0000f2df      4c89f7         mov rdi, r14
0x0000f2e2      e81941ffff     call sym.imp.strlen
0x0000f2e7      4989c6         mov r14, rax
0x0000f2ea      58             pop rax
0x0000f2eb      5a             pop rdx
0x0000f2ec      4c3b742418     cmp r14, qword [rsp + 0x18]
0x0000f2f1      db6c2420       fld xword [rsp + 0x20]
0x0000f2f5      0f86a7faffff   jbe 0xeda2
0x0000f2fb      d905abad0000   fld dword [0x0001a0ac]
0x0000f301      dcc9           fmul st(1), st(0)
0x0000f303      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x0000f305      4883ec10       sub rsp, 0x10
0x0000f309      488d0d50ad00.  lea rcx, [0x0001a060]                   ; "%.0Lf"
0x0000f310      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000f315      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000f31c      be01000000     mov esi, 1
0x0000f321      31c0           xor eax, eax
0x0000f323      31ed           xor ebp, ebp
0x0000f325      4c89f7         mov rdi, r14
0x0000f328      db3c24         fstp xword [rsp]
0x0000f32b      e84045ffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x0000f330      4c89f7         mov rdi, r14
0x0000f333      e8c840ffff     call sym.imp.strlen
0x0000f338      415a           pop r10
0x0000f33a      4989c6         mov r14, rax
0x0000f33d      415b           pop r11
0x0000f33f      e9dcfbffff     jmp 0xef20
0x0000f344      0f1f4000       nop dword [rax]
0x0000f348      d9055ead0000   fld dword [0x0001a0ac]
0x0000f34e      dcc9           fmul st(1), st(0)
0x0000f350      db2d5aad0000   fld xword [0x0001a0b0]
0x0000f356      dfea           fucomip st(2)
0x0000f358      76a9           jbe 0xf303
0x0000f35a      d95c2418       fstp dword [rsp + 0x18]
0x0000f35e      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x0000f362      4489ff         mov edi, r15d
0x0000f365      db3c24         fstp xword [rsp]
0x0000f368      e883f7ffff     call sym.adjust_value.part.0
0x0000f36d      5d             pop rbp
0x0000f36e      415e           pop r14
0x0000f370      d9442418       fld dword [rsp + 0x18]
0x0000f374      eb8d           jmp 0xf303                              ; ../coreutils-8.31/lib/human.c:-902
0x0000f376      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f380      4889f0         mov rax, rsi
0x0000f383      4863ff         movsxd rdi, edi
0x0000f386      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x0000f389      4801f8         add rax, rdi
0x0000f38c      0f95c0         setne al
0x0000f38f      0fb6c0         movzx eax, al
0x0000f392      4101c1         add r9d, eax
0x0000f395      4183f905       cmp r9d, 5
0x0000f399      0f8f77feffff   jg 0xf216
0x0000f39f      e98cfeffff     jmp 0xf230                              ; ../coreutils-8.31/lib/human.c:-938
0x0000f3a4      0f1f4000       nop dword [rax]
0x0000f3a8      400f92c7       setb dil
0x0000f3ac      400fb6ff       movzx edi, dil
0x0000f3b0      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x0000f3b3      e971faffff     jmp 0xee29
0x0000f3b8      0f1f84000000.  nop dword [rax + rax]
0x0000f3c0      4c8b442408     mov r8, qword [rsp + 8]
0x0000f3c5      31db           xor ebx, ebx
0x0000f3c7      e934feffff     jmp 0xf200
0x0000f3cc      0f1f4000       nop dword [rax]
0x0000f3d0      488b5c2408     mov rbx, qword [rsp + 8]
0x0000f3d5      85c0           test eax, eax
0x0000f3d7      488d5301       lea rdx, [rbx + 1]
0x0000f3db      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x0000f3de      0f85d7fbffff   jne 0xefbb
0x0000f3e4      4889542408     mov qword [rsp + 8], rdx
0x0000f3e9      e9d9fbffff     jmp 0xefc7
0x0000f3ee      6690           nop
0x0000f3f0      83fb08         cmp ebx, 8
0x0000f3f3      0f8437feffff   je 0xf230
0x0000f3f9      83c301         add ebx, 1
0x0000f3fc      41f6c408       test r12b, 8
0x0000f400      0f84bc000000   je 0xf4c2
0x0000f406      4d8d78ff       lea r15, [r8 - 1]
0x0000f40a      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x0000f40f      e92cfbffff     jmp 0xef40
0x0000f414      0f1f4000       nop dword [rax]
0x0000f418      4c8b442408     mov r8, qword [rsp + 8]
0x0000f41d      e9defdffff     jmp 0xf200
0x0000f422      31db           xor ebx, ebx
0x0000f424      e930fbffff     jmp 0xef59
0x0000f429      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x0000f42b      0f8585fdffff   jne 0xf1b6
0x0000f431      41f6c408       test r12b, 8
0x0000f435      751d           jne 0xf454
0x0000f437      41b930000000   mov r9d, 0x30                           ; '0'
0x0000f43d      e978fdffff     jmp 0xf1ba
0x0000f442      89c2           mov edx, eax
0x0000f444      83e201         and edx, 1
0x0000f447      01fa           add edx, edi
0x0000f449      83fa02         cmp edx, 2
0x0000f44c      0f9fc2         setg dl
0x0000f44f      e94cfdffff     jmp 0xf1a0
0x0000f454      4c8b442408     mov r8, qword [rsp + 8]
0x0000f459      4531c9         xor r9d, r9d
0x0000f45c      e99ffdffff     jmp 0xf200
0x0000f461      498b06         mov rax, qword [r14]
0x0000f464      4d89f1         mov r9, r14
0x0000f467      498900         mov qword [r8], rax
0x0000f46a      89e8           mov eax, ebp
0x0000f46c      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x0000f471      49895400f8     mov qword [r8 + rax - 8], rdx
0x0000f476      498d5008       lea rdx, [r8 + 8]
0x0000f47a      4c89c0         mov rax, r8
0x0000f47d      4883e2f8       and rdx, 0xfffffffffffffff8
0x0000f481      4829d0         sub rax, rdx
0x0000f484      4929c1         sub r9, rax
0x0000f487      01e8           add eax, ebp
0x0000f489      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000f48c      83f808         cmp eax, 8
0x0000f48f      0f8262fdffff   jb 0xf1f7
0x0000f495      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000f498      31ff           xor edi, edi
0x0000f49a      4189fa         mov r10d, edi
0x0000f49d      83c708         add edi, 8
0x0000f4a0      4f8b1c11       mov r11, qword [r9 + r10]
0x0000f4a4      39c7           cmp edi, eax
0x0000f4a6      4e891c12       mov qword [rdx + r10], r11
0x0000f4aa      72ee           jb 0xf49a
0x0000f4ac      e946fdffff     jmp 0xf1f7
0x0000f4b1      498d7201       lea rsi, [r10 + 1]
0x0000f4b5      4883fe0a       cmp rsi, 0xa
0x0000f4b9      7455           je 0xf510
0x0000f4bb      31ff           xor edi, edi
0x0000f4bd      e96fffffff     jmp 0xf431
0x0000f4c2      4889e8         mov rax, rbp
0x0000f4c5      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x0000f4ca      48f7d0         not rax
0x0000f4cd      4901c0         add r8, rax
0x0000f4d0      83fd08         cmp ebp, 8
0x0000f4d3      89e8           mov eax, ebp
0x0000f4d5      7343           jae 0xf51a
0x0000f4d7      83e504         and ebp, 4
0x0000f4da      0f85b1000000   jne 0xf591
0x0000f4e0      85c0           test eax, eax
0x0000f4e2      0f841effffff   je 0xf406
0x0000f4e8      410fb616       movzx edx, byte [r14]
0x0000f4ec      a802           test al, 2
0x0000f4ee      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x0000f4f1      0f840fffffff   je 0xf406
0x0000f4f7      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x0000f4fd      6641895400fe   mov word [r8 + rax - 2], dx
0x0000f503      e9fefeffff     jmp 0xf406
0x0000f508      0f1f84000000.  nop dword [rax + rax]
0x0000f510      4c8b442408     mov r8, qword [rsp + 8]
0x0000f515      e9ddfcffff     jmp 0xf1f7
0x0000f51a      498b06         mov rax, qword [r14]
0x0000f51d      498d4808       lea rcx, [r8 + 8]
0x0000f521      4883e1f8       and rcx, 0xfffffffffffffff8
0x0000f525      498900         mov qword [r8], rax
0x0000f528      89e8           mov eax, ebp
0x0000f52a      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x0000f52f      49895400f8     mov qword [r8 + rax - 8], rdx
0x0000f534      4c89c0         mov rax, r8
0x0000f537      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x0000f53a      4929c6         sub r14, rax
0x0000f53d      01e8           add eax, ebp
0x0000f53f      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x0000f542      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x0000f545      0f82bbfeffff   jb 0xf406
0x0000f54b      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x0000f54e      31d2           xor edx, edx
0x0000f550      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x0000f552      83c208         add edx, 8
0x0000f555      498b3c36       mov rdi, qword [r14 + rsi]
0x0000f559      39c2           cmp edx, eax
0x0000f55b      48893c31       mov qword [rcx + rsi], rdi
0x0000f55f      72ef           jb 0xf550
0x0000f561      e9a0feffff     jmp 0xf406
0x0000f566      418b16         mov edx, dword [r14]
0x0000f569      418910         mov dword [r8], edx
0x0000f56c      418b5406fc     mov edx, dword [r14 + rax - 4]
0x0000f571      41895400fc     mov dword [r8 + rax - 4], edx
0x0000f576      e97cfcffff     jmp 0xf1f7
0x0000f57b      e8a03effff     call sym.imp.__stack_chk_fail
0x0000f580      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x0000f586      6641895400fe   mov word [r8 + rax - 2], dx
0x0000f58c      e966fcffff     jmp 0xf1f7
0x0000f591      418b16         mov edx, dword [r14]
0x0000f594      418910         mov dword [r8], edx
0x0000f597      418b5406fc     mov edx, dword [r14 + rax - 4]
0x0000f59c      41895400fc     mov dword [r8 + rax - 4], edx
0x0000f5a1      e960feffff     jmp 0xf406
0x0000f5a6      85c0           test eax, eax
0x0000f5a8      488b542408     mov rdx, qword [rsp + 8]
0x0000f5ad      0f8508faffff   jne 0xefbb
0x0000f5b3      e90ffaffff     jmp 0xefc7
0x0000f5b8      8b5c2420       mov ebx, dword [rsp + 0x20]
0x0000f5bc      4989c7         mov r15, rax
0x0000f5bf      4589f4         mov r12d, r14d
0x0000f5c2      e983f9ffff     jmp 0xef4a
0x0000f5c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x0000f5d0      4155           push r13
0x0000f5d2      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x0000f5d4      4989f5         mov r13, rsi
0x0000f5d7      55             push rbp
0x0000f5d8      53             push rbx
0x0000f5d9      4989d4         mov r12, rdx
0x0000f5dc      4889fb         mov rbx, rdi
0x0000f5df      4883ec18       sub rsp, 0x18
0x0000f5e3      64488b042528.  mov rax, qword fs:[0x28]
0x0000f5ec      4889442408     mov qword [rsp + 8], rax
0x0000f5f1      31c0           xor eax, eax
0x0000f5f3      4885ff         test rdi, rdi
0x0000f5f6      0f8414010000   je 0xf710
0x0000f5fc      31ed           xor ebp, ebp
0x0000f5fe      803b27         cmp byte [rbx], 0x27
0x0000f601      7509           jne 0xf60c
0x0000f603      4883c301       add rbx, 1
0x0000f607      bd04000000     mov ebp, 4
0x0000f60c      488d1585aa00.  lea rdx, obj.block_size_opts            ; 0x1a098
0x0000f613      488d35f60321.  lea rsi, obj.block_size_args            ; 0x21fa10
0x0000f61a      b904000000     mov ecx, 4
0x0000f61f      4889df         mov rdi, rbx
0x0000f622      e829cbffff     call sym.argmatch
0x0000f627      85c0           test eax, eax
0x0000f629      783d           js 0xf668
0x0000f62b      488d1566aa00.  lea rdx, obj.block_size_opts            ; 0x1a098
0x0000f632      4898           cdqe
0x0000f634      49c704240100.  mov qword [r12], 1
0x0000f63c      0b2c82         or ebp, dword [rdx + rax*4]
0x0000f63f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x0000f641      41896d00       mov dword [r13], ebp
0x0000f645      488b4c2408     mov rcx, qword [rsp + 8]
0x0000f64a      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000f653      0f8558010000   jne 0xf7b1
0x0000f659      4883c418       add rsp, 0x18
0x0000f65d      5b             pop rbx
0x0000f65e      5d             pop rbp
0x0000f65f      415c           pop r12
0x0000f661      415d           pop r13
0x0000f663      c3             ret
0x0000f664      0f1f4000       nop dword [rax]
0x0000f668      4c8d0517aa00.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0x1a086 ; "eEgGkKmMpPtTyYzZ0"
0x0000f66f      31d2           xor edx, edx
0x0000f671      4889e6         mov rsi, rsp
0x0000f674      4c89e1         mov rcx, r12
0x0000f677      4889df         mov rdi, rbx
0x0000f67a      e8b1580000     call sym.xstrtoumax
0x0000f67f      85c0           test eax, eax
0x0000f681      7545           jne 0xf6c8
0x0000f683      0fb633         movzx esi, byte [rbx]
0x0000f686      8d56d0         lea edx, [rsi - 0x30]
0x0000f689      80fa09         cmp dl, 9
0x0000f68c      762a           jbe 0xf6b8
0x0000f68e      488b0c24       mov rcx, qword [rsp]
0x0000f692      4839cb         cmp rbx, rcx
0x0000f695      7512           jne 0xf6a9                              ; ../coreutils-8.31/lib/human.c:-960
0x0000f697      e9d4000000     jmp 0xf770
0x0000f69c      0f1f4000       nop dword [rax]
0x0000f6a0      4839cb         cmp rbx, rcx
0x0000f6a3      0f84c7000000   je 0xf770
0x0000f6a9      4883c301       add rbx, 1
0x0000f6ad      0fb63b         movzx edi, byte [rbx]
0x0000f6b0      8d57d0         lea edx, [rdi - 0x30]
0x0000f6b3      80fa09         cmp dl, 9
0x0000f6b6      77e8           ja 0xf6a0
0x0000f6b8      498b1424       mov rdx, qword [r12]
0x0000f6bc      41896d00       mov dword [r13], ebp
0x0000f6c0      eb12           jmp 0xf6d4
0x0000f6c2      660f1f440000   nop word [rax + rax]
0x0000f6c8      498b1424       mov rdx, qword [r12]
0x0000f6cc      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x0000f6d4      4885d2         test rdx, rdx
0x0000f6d7      0f8568ffffff   jne 0xf645
0x0000f6dd      488d3d92a900.  lea rdi, str.POSIXLY_CORRECT            ; 0x1a076 ; "POSIXLY_CORRECT"
0x0000f6e4      e8673bffff     call sym.imp.getenv
0x0000f6e9      4883f801       cmp rax, 1
0x0000f6ed      4819c0         sbb rax, rax
0x0000f6f0      2500020000     and eax, 0x200
0x0000f6f5      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x0000f6fb      49890424       mov qword [r12], rax
0x0000f6ff      b804000000     mov eax, 4
0x0000f704      e93cffffff     jmp 0xf645
0x0000f709      0f1f80000000.  nop dword [rax]
0x0000f710      488d3dd18300.  lea rdi, [0x00017ae8]                   ; "BLOCK_SIZE"
0x0000f717      e8343bffff     call sym.imp.getenv
0x0000f71c      4885c0         test rax, rax
0x0000f71f      4889c3         mov rbx, rax
0x0000f722      0f85d4feffff   jne 0xf5fc
0x0000f728      488d3d3da900.  lea rdi, str.BLOCKSIZE                  ; 0x1a06c ; "BLOCKSIZE"
0x0000f72f      e81c3bffff     call sym.imp.getenv
0x0000f734      4885c0         test rax, rax
0x0000f737      4889c3         mov rbx, rax
0x0000f73a      0f85bcfeffff   jne 0xf5fc
0x0000f740      488d3d2fa900.  lea rdi, str.POSIXLY_CORRECT            ; 0x1a076 ; "POSIXLY_CORRECT"
0x0000f747      e8043bffff     call sym.imp.getenv
0x0000f74c      4885c0         test rax, rax
0x0000f74f      7449           je 0xf79a
0x0000f751      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x0000f759      31c0           xor eax, eax
0x0000f75b      41c745000000.  mov dword [r13], 0
0x0000f763      e9ddfeffff     jmp 0xf645
0x0000f768      0f1f84000000.  nop dword [rax + rax]
0x0000f770      8079ff42       cmp byte [rcx - 1], 0x42
0x0000f774      7412           je 0xf788
0x0000f776      4080cd80       or bpl, 0x80
0x0000f77a      83cd20         or ebp, 0x20                            ; "@"
0x0000f77d      e936ffffff     jmp 0xf6b8
0x0000f782      660f1f440000   nop word [rax + rax]
0x0000f788      81cd80010000   or ebp, 0x180
0x0000f78e      8079fe69       cmp byte [rcx - 2], 0x69
0x0000f792      0f8520ffffff   jne 0xf6b8
0x0000f798      ebe0           jmp 0xf77a
0x0000f79a      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0
0x0000f7a2      31c0           xor eax, eax
0x0000f7a4      41c745000000.  mov dword [r13], 0
0x0000f7ac      e994feffff     jmp 0xf645
0x0000f7b1      e86a3cffff     call sym.imp.__stack_chk_fail
0x0000f7b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- getuser:
0x0000f7c0      4154           push r12
0x0000f7c2      55             push rbp
0x0000f7c3      53             push rbx
0x0000f7c4      488b1d2d1c21.  mov rbx, qword [obj.user_alist]         ; [0x2213f8:8]=0
0x0000f7cb      4885db         test rbx, rbx
0x0000f7ce      741d           je 0xf7ed
0x0000f7d0      3b3b           cmp edi, dword [rbx]
0x0000f7d2      7510           jne 0xf7e4
0x0000f7d4      eb6a           jmp 0xf840
0x0000f7d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f7e0      393b           cmp dword [rbx], edi
0x0000f7e2      745c           je 0xf840
0x0000f7e4      488b5b08       mov rbx, qword [rbx + 8]
0x0000f7e8      4885db         test rbx, rbx
0x0000f7eb      75f3           jne 0xf7e0
0x0000f7ed      89fd           mov ebp, edi
0x0000f7ef      4c8d25bd8000.  lea r12, [0x000178b3]
0x0000f7f6      e8c53bffff     call sym.imp.getpwuid
0x0000f7fb      4885c0         test rax, rax
0x0000f7fe      bf18000000     mov edi, 0x18
0x0000f803      7413           je 0xf818
0x0000f805      4c8b20         mov r12, qword [rax]
0x0000f808      4c89e7         mov rdi, r12
0x0000f80b      e8f03bffff     call sym.imp.strlen
0x0000f810      488d7818       lea rdi, [rax + 0x18]
0x0000f814      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000f818      e8734d0000     call sym.xmalloc
0x0000f81d      488d7810       lea rdi, [rax + 0x10]
0x0000f821      8928           mov dword [rax], ebp
0x0000f823      4c89e6         mov rsi, r12
0x0000f826      4889c3         mov rbx, rax
0x0000f829      e8b23affff     call sym.imp.strcpy
0x0000f82e      488b05c31b21.  mov rax, qword [obj.user_alist]         ; [0x2213f8:8]=0
0x0000f835      48891dbc1b21.  mov qword [obj.user_alist], rbx         ; [0x2213f8:8]=0
0x0000f83c      48894308       mov qword [rbx + 8], rax
0x0000f840      807b1000       cmp byte [rbx + 0x10], 0
0x0000f844      740a           je 0xf850
0x0000f846      488d4310       lea rax, [rbx + 0x10]
0x0000f84a      5b             pop rbx
0x0000f84b      5d             pop rbp
0x0000f84c      415c           pop r12
0x0000f84e      c3             ret
0x0000f84f      90             nop
0x0000f850      31c0           xor eax, eax
0x0000f852      ebf6           jmp 0xf84a
0x0000f854      6690           nop
0x0000f856      662e0f1f8400.  nop word cs:[rax + rax]
;-- getuidbyname:
0x0000f860      4154           push r12
0x0000f862      55             push rbp
0x0000f863      4989fc         mov r12, rdi
0x0000f866      53             push rbx
0x0000f867      488b1d8a1b21.  mov rbx, qword [obj.user_alist]         ; [0x2213f8:8]=0
0x0000f86e      4885db         test rbx, rbx
0x0000f871      743d           je 0xf8b0
0x0000f873      0fb62f         movzx ebp, byte [rdi]
0x0000f876      eb11           jmp 0xf889
0x0000f878      0f1f84000000.  nop dword [rax + rax]
0x0000f880      488b5b08       mov rbx, qword [rbx + 8]
0x0000f884      4885db         test rbx, rbx
0x0000f887      7427           je 0xf8b0
0x0000f889      40386b10       cmp byte [rbx + 0x10], bpl
0x0000f88d      75f1           jne 0xf880
0x0000f88f      488d7b10       lea rdi, [rbx + 0x10]
0x0000f893      4c89e6         mov rsi, r12
0x0000f896      e8f53cffff     call sym.imp.strcmp
0x0000f89b      85c0           test eax, eax
0x0000f89d      75e1           jne 0xf880
0x0000f89f      4889d8         mov rax, rbx
0x0000f8a2      5b             pop rbx
0x0000f8a3      5d             pop rbp
0x0000f8a4      415c           pop r12
0x0000f8a6      c3             ret
0x0000f8a7      660f1f840000.  nop word [rax + rax]
0x0000f8b0      488b1d391b21.  mov rbx, qword [obj.nouser_alist]       ; [0x2213f0:8]=0
0x0000f8b7      4885db         test rbx, rbx
0x0000f8ba      7434           je 0xf8f0
0x0000f8bc      410fb62c24     movzx ebp, byte [r12]
0x0000f8c1      eb0e           jmp 0xf8d1
0x0000f8c3      0f1f440000     nop dword [rax + rax]
0x0000f8c8      488b5b08       mov rbx, qword [rbx + 8]
0x0000f8cc      4885db         test rbx, rbx
0x0000f8cf      741f           je 0xf8f0
0x0000f8d1      40386b10       cmp byte [rbx + 0x10], bpl
0x0000f8d5      75f1           jne 0xf8c8
0x0000f8d7      488d7b10       lea rdi, [rbx + 0x10]
0x0000f8db      4c89e6         mov rsi, r12
0x0000f8de      e8ad3cffff     call sym.imp.strcmp
0x0000f8e3      85c0           test eax, eax
0x0000f8e5      75e1           jne 0xf8c8
0x0000f8e7      5b             pop rbx
0x0000f8e8      31c0           xor eax, eax
0x0000f8ea      5d             pop rbp
0x0000f8eb      415c           pop r12
0x0000f8ed      c3             ret
0x0000f8ee      6690           nop
0x0000f8f0      4c89e7         mov rdi, r12
0x0000f8f3      e8c83cffff     call sym.imp.getpwnam
0x0000f8f8      4c89e7         mov rdi, r12
0x0000f8fb      4889c5         mov rbp, rax
0x0000f8fe      e8fd3affff     call sym.imp.strlen
0x0000f903      488d7818       lea rdi, [rax + 0x18]
0x0000f907      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000f90b      e8804c0000     call sym.xmalloc
0x0000f910      488d7810       lea rdi, [rax + 0x10]
0x0000f914      4c89e6         mov rsi, r12
0x0000f917      4889c3         mov rbx, rax
0x0000f91a      e8c139ffff     call sym.imp.strcpy
0x0000f91f      4885ed         test rbp, rbp
0x0000f922      741c           je 0xf940
0x0000f924      8b4510         mov eax, dword [rbp + 0x10]
0x0000f927      8903           mov dword [rbx], eax
0x0000f929      488b05c81a21.  mov rax, qword [obj.user_alist]         ; [0x2213f8:8]=0
0x0000f930      48891dc11a21.  mov qword [obj.user_alist], rbx         ; [0x2213f8:8]=0
0x0000f937      48894308       mov qword [rbx + 8], rax
0x0000f93b      e95fffffff     jmp 0xf89f
0x0000f940      488b05a91a21.  mov rax, qword [obj.nouser_alist]       ; [0x2213f0:8]=0
0x0000f947      48891da21a21.  mov qword [obj.nouser_alist], rbx       ; [0x2213f0:8]=0
0x0000f94e      48894308       mov qword [rbx + 8], rax
0x0000f952      31c0           xor eax, eax
0x0000f954      e949ffffff     jmp 0xf8a2
0x0000f959      0f1f80000000.  nop dword [rax]
;-- getgroup:
0x0000f960      4154           push r12
0x0000f962      55             push rbp
0x0000f963      53             push rbx
0x0000f964      488b1d7d1a21.  mov rbx, qword [obj.group_alist]        ; [0x2213e8:8]=0
0x0000f96b      4885db         test rbx, rbx
0x0000f96e      741d           je 0xf98d
0x0000f970      3b3b           cmp edi, dword [rbx]
0x0000f972      7510           jne 0xf984
0x0000f974      eb6a           jmp 0xf9e0
0x0000f976      662e0f1f8400.  nop word cs:[rax + rax]
0x0000f980      393b           cmp dword [rbx], edi
0x0000f982      745c           je 0xf9e0
0x0000f984      488b5b08       mov rbx, qword [rbx + 8]
0x0000f988      4885db         test rbx, rbx
0x0000f98b      75f3           jne 0xf980
0x0000f98d      89fd           mov ebp, edi
0x0000f98f      4c8d251d7f00.  lea r12, [0x000178b3]
0x0000f996      e8c53affff     call sym.imp.getgrgid
0x0000f99b      4885c0         test rax, rax
0x0000f99e      bf18000000     mov edi, 0x18
0x0000f9a3      7413           je 0xf9b8
0x0000f9a5      4c8b20         mov r12, qword [rax]
0x0000f9a8      4c89e7         mov rdi, r12
0x0000f9ab      e8503affff     call sym.imp.strlen
0x0000f9b0      488d7818       lea rdi, [rax + 0x18]
0x0000f9b4      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000f9b8      e8d34b0000     call sym.xmalloc
0x0000f9bd      488d7810       lea rdi, [rax + 0x10]
0x0000f9c1      8928           mov dword [rax], ebp
0x0000f9c3      4c89e6         mov rsi, r12
0x0000f9c6      4889c3         mov rbx, rax
0x0000f9c9      e81239ffff     call sym.imp.strcpy
0x0000f9ce      488b05131a21.  mov rax, qword [obj.group_alist]        ; [0x2213e8:8]=0
0x0000f9d5      48891d0c1a21.  mov qword [obj.group_alist], rbx        ; [0x2213e8:8]=0
0x0000f9dc      48894308       mov qword [rbx + 8], rax
0x0000f9e0      807b1000       cmp byte [rbx + 0x10], 0
0x0000f9e4      740a           je 0xf9f0
0x0000f9e6      488d4310       lea rax, [rbx + 0x10]
0x0000f9ea      5b             pop rbx
0x0000f9eb      5d             pop rbp
0x0000f9ec      415c           pop r12
0x0000f9ee      c3             ret
0x0000f9ef      90             nop
0x0000f9f0      31c0           xor eax, eax
0x0000f9f2      ebf6           jmp 0xf9ea
0x0000f9f4      6690           nop
0x0000f9f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- getgidbyname:
0x0000fa00      4154           push r12
0x0000fa02      55             push rbp
0x0000fa03      4989fc         mov r12, rdi
0x0000fa06      53             push rbx
0x0000fa07      488b1dda1921.  mov rbx, qword [obj.group_alist]        ; [0x2213e8:8]=0
0x0000fa0e      4885db         test rbx, rbx
0x0000fa11      743d           je 0xfa50
0x0000fa13      0fb62f         movzx ebp, byte [rdi]
0x0000fa16      eb11           jmp 0xfa29
0x0000fa18      0f1f84000000.  nop dword [rax + rax]
0x0000fa20      488b5b08       mov rbx, qword [rbx + 8]
0x0000fa24      4885db         test rbx, rbx
0x0000fa27      7427           je 0xfa50
0x0000fa29      40386b10       cmp byte [rbx + 0x10], bpl
0x0000fa2d      75f1           jne 0xfa20
0x0000fa2f      488d7b10       lea rdi, [rbx + 0x10]
0x0000fa33      4c89e6         mov rsi, r12
0x0000fa36      e8553bffff     call sym.imp.strcmp
0x0000fa3b      85c0           test eax, eax
0x0000fa3d      75e1           jne 0xfa20
0x0000fa3f      4889d8         mov rax, rbx
0x0000fa42      5b             pop rbx
0x0000fa43      5d             pop rbp
0x0000fa44      415c           pop r12
0x0000fa46      c3             ret
0x0000fa47      660f1f840000.  nop word [rax + rax]
0x0000fa50      488b1d891921.  mov rbx, qword [obj.nogroup_alist]      ; [0x2213e0:8]=0
0x0000fa57      4885db         test rbx, rbx
0x0000fa5a      7434           je 0xfa90
0x0000fa5c      410fb62c24     movzx ebp, byte [r12]
0x0000fa61      eb0e           jmp 0xfa71
0x0000fa63      0f1f440000     nop dword [rax + rax]
0x0000fa68      488b5b08       mov rbx, qword [rbx + 8]
0x0000fa6c      4885db         test rbx, rbx
0x0000fa6f      741f           je 0xfa90
0x0000fa71      40386b10       cmp byte [rbx + 0x10], bpl
0x0000fa75      75f1           jne 0xfa68
0x0000fa77      488d7b10       lea rdi, [rbx + 0x10]
0x0000fa7b      4c89e6         mov rsi, r12
0x0000fa7e      e80d3bffff     call sym.imp.strcmp
0x0000fa83      85c0           test eax, eax
0x0000fa85      75e1           jne 0xfa68
0x0000fa87      5b             pop rbx
0x0000fa88      31c0           xor eax, eax
0x0000fa8a      5d             pop rbp
0x0000fa8b      415c           pop r12
0x0000fa8d      c3             ret
0x0000fa8e      6690           nop
0x0000fa90      4c89e7         mov rdi, r12
0x0000fa93      e8683bffff     call sym.imp.getgrnam
0x0000fa98      4c89e7         mov rdi, r12
0x0000fa9b      4889c5         mov rbp, rax
0x0000fa9e      e85d39ffff     call sym.imp.strlen
0x0000faa3      488d7818       lea rdi, [rax + 0x18]
0x0000faa7      4883e7f8       and rdi, 0xfffffffffffffff8
0x0000faab      e8e04a0000     call sym.xmalloc
0x0000fab0      488d7810       lea rdi, [rax + 0x10]
0x0000fab4      4c89e6         mov rsi, r12
0x0000fab7      4889c3         mov rbx, rax
0x0000faba      e82138ffff     call sym.imp.strcpy
0x0000fabf      4885ed         test rbp, rbp
0x0000fac2      741c           je 0xfae0
0x0000fac4      8b4510         mov eax, dword [rbp + 0x10]
0x0000fac7      8903           mov dword [rbx], eax
0x0000fac9      488b05181921.  mov rax, qword [obj.group_alist]        ; [0x2213e8:8]=0
0x0000fad0      48891d111921.  mov qword [obj.group_alist], rbx        ; [0x2213e8:8]=0
0x0000fad7      48894308       mov qword [rbx + 8], rax
0x0000fadb      e95fffffff     jmp 0xfa3f
0x0000fae0      488b05f91821.  mov rax, qword [obj.nogroup_alist]      ; [0x2213e0:8]=0
0x0000fae7      48891df21821.  mov qword [obj.nogroup_alist], rbx      ; [0x2213e0:8]=0
0x0000faee      48894308       mov qword [rbx + 8], rax
0x0000faf2      31c0           xor eax, eax
0x0000faf4      e949ffffff     jmp 0xfa42
0x0000faf9      0f1f80000000.  nop dword [rax]
;-- imaxtostr:
0x0000fb00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/anytostr.c:37
0x0000fb03      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x0000fb07      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x0000fb0b      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x0000fb15      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x0000fb1f      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x0000fb25      783c           js 0xfb63                               ; ../coreutils-8.31/lib/anytostr.c:41
0x0000fb27      660f1f840000.  nop word [rax + rax]
0x0000fb30      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x0000fb33      4883e901       sub rcx, 1
0x0000fb37      48f7e6         mul rsi
0x0000fb3a      48c1ea03       shr rdx, 3
0x0000fb3e      488d0492       lea rax, [rdx + rdx*4]
0x0000fb42      4801c0         add rax, rax
0x0000fb45      4829c7         sub rdi, rax
0x0000fb48      83c730         add edi, 0x30
0x0000fb4b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000fb4e      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000fb51      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000fb54      75da           jne 0xfb30
0x0000fb56      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000fb59      c3             ret
0x0000fb5a      660f1f440000   nop word [rax + rax]
0x0000fb60      4889f1         mov rcx, rsi
0x0000fb63      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x0000fb66      488d71ff       lea rsi, [rcx - 1]
0x0000fb6a      49f7e9         imul r9
0x0000fb6d      4889f8         mov rax, rdi
0x0000fb70      48c1f83f       sar rax, 0x3f
0x0000fb74      48c1fa02       sar rdx, 2
0x0000fb78      4829c2         sub rdx, rax
0x0000fb7b      488d0492       lea rax, [rdx + rdx*4]
0x0000fb7f      418d0440       lea eax, [r8 + rax*2]
0x0000fb83      29f8           sub eax, edi
0x0000fb85      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x0000fb88      4889d7         mov rdi, rdx
0x0000fb8b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000fb8e      75d0           jne 0xfb60                              ; ../coreutils-8.31/lib/anytostr.c:45
0x0000fb90      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x0000fb94      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x0000fb98      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000fb9b      c3             ret
0x0000fb9c      0f1f4000       nop dword [rax]
;-- umaxtostr:
0x0000fba0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x0000fba4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x0000fba8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x0000fbb2      660f1f440000   nop word [rax + rax]
0x0000fbb8      4889f8         mov rax, rdi
0x0000fbbb      4883e901       sub rcx, 1
0x0000fbbf      48f7e6         mul rsi
0x0000fbc2      48c1ea03       shr rdx, 3
0x0000fbc6      488d0492       lea rax, [rdx + rdx*4]
0x0000fbca      4801c0         add rax, rax
0x0000fbcd      4829c7         sub rdi, rax
0x0000fbd0      83c730         add edi, 0x30
0x0000fbd3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000fbd6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x0000fbd9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000fbdc      75da           jne 0xfbb8
0x0000fbde      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000fbe1      c3             ret
0x0000fbe2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fbec      0f1f4000       nop dword [rax]
;-- mbsalign:
0x0000fbf0      4157           push r15
0x0000fbf2      4156           push r14
0x0000fbf4      4989fe         mov r14, rdi
0x0000fbf7      4155           push r13
0x0000fbf9      4154           push r12
0x0000fbfb      4989f5         mov r13, rsi
0x0000fbfe      55             push rbp
0x0000fbff      53             push rbx
0x0000fc00      4489cb         mov ebx, r9d
0x0000fc03      4989cc         mov r12, rcx
0x0000fc06      4883ec38       sub rsp, 0x38
0x0000fc0a      4889542410     mov qword [rsp + 0x10], rdx
0x0000fc0f      448944241c     mov dword [rsp + 0x1c], r8d
0x0000fc14      e8e737ffff     call sym.imp.strlen
0x0000fc19      f6c302         test bl, 2
0x0000fc1c      4989c7         mov r15, rax
0x0000fc1f      4889442408     mov qword [rsp + 8], rax
0x0000fc24      0f8466010000   je 0xfd90
0x0000fc2a      4c89fd         mov rbp, r15
0x0000fc2d      48c704240000.  mov qword [rsp], 0
0x0000fc35      48c744240800.  mov qword [rsp + 8], 0
0x0000fc3e      498b0424       mov rax, qword [r12]
0x0000fc42      4839e8         cmp rax, rbp
0x0000fc45      0f830e010000   jae 0xfd59
0x0000fc4b      4989c7         mov r15, rax
0x0000fc4e      31d2           xor edx, edx
0x0000fc50      49890424       mov qword [r12], rax
0x0000fc54      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000fc58      85c0           test eax, eax
0x0000fc5a      0f841b010000   je 0xfd7b
0x0000fc60      31ed           xor ebp, ebp
0x0000fc62      83f801         cmp eax, 1
0x0000fc65      740c           je 0xfc73
0x0000fc67      4889d5         mov rbp, rdx
0x0000fc6a      83e201         and edx, 1
0x0000fc6d      48d1ed         shr rbp, 1
0x0000fc70      4801ea         add rdx, rbp
0x0000fc73      f6c304         test bl, 4
0x0000fc76      4e8d243a       lea r12, [rdx + r15]
0x0000fc7a      7405           je 0xfc81
0x0000fc7c      4d89fc         mov r12, r15
0x0000fc7f      31d2           xor edx, edx
0x0000fc81      83e308         and ebx, 8
0x0000fc84      0f85fe000000   jne 0xfd88
0x0000fc8a      4901ec         add r12, rbp
0x0000fc8d      488b442410     mov rax, qword [rsp + 0x10]
0x0000fc92      4885c0         test rax, rax
0x0000fc95      0f8486000000   je 0xfd21
0x0000fc9b      498d5c05ff     lea rbx, [r13 + rax - 1]
0x0000fca0      488d42ff       lea rax, [rdx - 1]
0x0000fca4      4939dd         cmp r13, rbx
0x0000fca7      7326           jae 0xfccf
0x0000fca9      4885d2         test rdx, rdx
0x0000fcac      7421           je 0xfccf
0x0000fcae      6690           nop
0x0000fcb0      4983c501       add r13, 1
0x0000fcb4      41c645ff20     mov byte [r13 - 1], 0x20                ; [0x20:1]=64 ; "@"
0x0000fcb9      4c39eb         cmp rbx, r13
0x0000fcbc      400f97c6       seta sil
0x0000fcc0      4885c0         test rax, rax
0x0000fcc3      0f95c2         setne dl
0x0000fcc6      4883e801       sub rax, 1
0x0000fcca      4084d6         test sil, dl
0x0000fccd      75e1           jne 0xfcb0
0x0000fccf      4889da         mov rdx, rbx
0x0000fcd2      41c6450000     mov byte [r13], 0
0x0000fcd7      4c89f6         mov rsi, r14
0x0000fcda      4c29ea         sub rdx, r13
0x0000fcdd      4c89ef         mov rdi, r13
0x0000fce0      4c39fa         cmp rdx, r15
0x0000fce3      490f47d7       cmova rdx, r15
0x0000fce7      e8543affff     call sym.imp.mempcpy
0x0000fcec      4839c3         cmp rbx, rax
0x0000fcef      488d55ff       lea rdx, [rbp - 1]
0x0000fcf3      7629           jbe 0xfd1e
0x0000fcf5      4885ed         test rbp, rbp
0x0000fcf8      7424           je 0xfd1e
0x0000fcfa      660f1f440000   nop word [rax + rax]
0x0000fd00      4883c001       add rax, 1
0x0000fd04      4885d2         test rdx, rdx
0x0000fd07      c640ff20       mov byte [rax - 1], 0x20                ; [0x20:1]=64 ; "@"
0x0000fd0b      400f95c6       setne sil
0x0000fd0f      4839c3         cmp rbx, rax
0x0000fd12      0f97c1         seta cl
0x0000fd15      4883ea01       sub rdx, 1
0x0000fd19      4084ce         test sil, cl
0x0000fd1c      75e2           jne 0xfd00
0x0000fd1e      c60000         mov byte [rax], 0
0x0000fd21      488b3c24       mov rdi, qword [rsp]
0x0000fd25      e8563bffff     call sym..plt.got
0x0000fd2a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000fd2f      e84c3bffff     call sym..plt.got
0x0000fd34      4883c438       add rsp, 0x38
0x0000fd38      4c89e0         mov rax, r12
0x0000fd3b      5b             pop rbx
0x0000fd3c      5d             pop rbp
0x0000fd3d      415c           pop r12
0x0000fd3f      415d           pop r13
0x0000fd41      415e           pop r14
0x0000fd43      415f           pop r15
0x0000fd45      c3             ret
0x0000fd46      662e0f1f8400.  nop word cs:[rax + rax]
0x0000fd50      48c744240800.  mov qword [rsp + 8], 0
0x0000fd59      4839c5         cmp rbp, rax
0x0000fd5c      0f8348020000   jae 0xffaa
0x0000fd62      4829e8         sub rax, rbp
0x0000fd65      4889c2         mov rdx, rax
0x0000fd68      4889e8         mov rax, rbp
0x0000fd6b      49890424       mov qword [r12], rax
0x0000fd6f      8b44241c       mov eax, dword [rsp + 0x1c]
0x0000fd73      85c0           test eax, eax
0x0000fd75      0f85e5feffff   jne 0xfc60
0x0000fd7b      4889d5         mov rbp, rdx
0x0000fd7e      31d2           xor edx, edx
0x0000fd80      e9eefeffff     jmp 0xfc73
0x0000fd85      0f1f00         nop dword [rax]
0x0000fd88      31ed           xor ebp, ebp
0x0000fd8a      e9fefeffff     jmp 0xfc8d
0x0000fd8f      90             nop
0x0000fd90      e85b36ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000fd95      4883f801       cmp rax, 1
0x0000fd99      0f868bfeffff   jbe 0xfc2a
0x0000fd9f      31d2           xor edx, edx
0x0000fda1      31ff           xor edi, edi
0x0000fda3      4c89f6         mov rsi, r14
0x0000fda6      e8a535ffff     call sym.imp.mbstowcs
0x0000fdab      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000fdaf      752f           jne 0xfde0
0x0000fdb1      f6c301         test bl, 1
0x0000fdb4      0f8570feffff   jne 0xfc2a
0x0000fdba      48c704240000.  mov qword [rsp], 0
0x0000fdc2      48c744240800.  mov qword [rsp + 8], 0
0x0000fdcb      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x0000fdd2      e94affffff     jmp 0xfd21
0x0000fdd7      660f1f840000.  nop word [rax + rax]
0x0000fde0      488d6801       lea rbp, [rax + 1]
0x0000fde4      488d04ad0000.  lea rax, [rbp*4]
0x0000fdec      4889c7         mov rdi, rax
0x0000fdef      4889442420     mov qword [rsp + 0x20], rax
0x0000fdf4      e88f3affff     call 0x3888
0x0000fdf9      4885c0         test rax, rax
0x0000fdfc      48890424       mov qword [rsp], rax
0x0000fe00      0f847f010000   je 0xff85
0x0000fe06      488b3c24       mov rdi, qword [rsp]
0x0000fe0a      4889ea         mov rdx, rbp
0x0000fe0d      4c89f6         mov rsi, r14
0x0000fe10      e83b35ffff     call sym.imp.mbstowcs
0x0000fe15      4885c0         test rax, rax
0x0000fe18      0f8406010000   je 0xff24
0x0000fe1e      488b0424       mov rax, qword [rsp]
0x0000fe22      488b4c2420     mov rcx, qword [rsp + 0x20]
0x0000fe27      c74408fc0000.  mov dword [rax + rcx - 4], 0
0x0000fe2f      8b38           mov edi, dword [rax]
0x0000fe31      4889c2         mov rdx, rax
0x0000fe34      85ff           test edi, edi
0x0000fe36      0f84f9000000   je 0xff35
0x0000fe3c      c644242000     mov byte [rsp + 0x20], 0
0x0000fe41      0f1f80000000.  nop dword [rax]
0x0000fe48      4889542428     mov qword [rsp + 0x28], rdx
0x0000fe4d      e8de39ffff     call sym.imp.iswprint
0x0000fe52      85c0           test eax, eax
0x0000fe54      488b542428     mov rdx, qword [rsp + 0x28]
0x0000fe59      750b           jne 0xfe66
0x0000fe5b      c702fdff0000   mov dword [rdx], 0xfffd                 ; [0xfffd:4]=0x8b444174
0x0000fe61      c644242001     mov byte [rsp + 0x20], 1
0x0000fe66      4883c204       add rdx, 4
0x0000fe6a      8b3a           mov edi, dword [rdx]
0x0000fe6c      85ff           test edi, edi
0x0000fe6e      75d8           jne 0xfe48
0x0000fe70      488b3c24       mov rdi, qword [rsp]
0x0000fe74      4889ee         mov rsi, rbp
0x0000fe77      e8b434ffff     call sym.imp.wcswidth
0x0000fe7c      807c242000     cmp byte [rsp + 0x20], 0
0x0000fe81      4863e8         movsxd rbp, eax
0x0000fe84      0f84be000000   je 0xff48
0x0000fe8a      488b3424       mov rsi, qword [rsp]
0x0000fe8e      31d2           xor edx, edx
0x0000fe90      31ff           xor edi, edi
0x0000fe92      e81939ffff     call sym.imp.wcstombs
0x0000fe97      4883c001       add rax, 1
0x0000fe9b      4889442420     mov qword [rsp + 0x20], rax
0x0000fea0      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000fea5      e8de39ffff     call 0x3888
0x0000feaa      4885c0         test rax, rax
0x0000fead      4889442408     mov qword [rsp + 8], rax
0x0000feb2      0f84b8000000   je 0xff70
0x0000feb8      4c8b3c24       mov r15, qword [rsp]
0x0000febc      4d8b3424       mov r14, qword [r12]
0x0000fec0      418b3f         mov edi, dword [r15]
0x0000fec3      85ff           test edi, edi
0x0000fec5      0f84d4000000   je 0xff9f
0x0000fecb      31ed           xor ebp, ebp
0x0000fecd      eb0f           jmp 0xfede
0x0000fecf      90             nop
0x0000fed0      4983c704       add r15, 4
0x0000fed4      418b3f         mov edi, dword [r15]
0x0000fed7      4889d5         mov rbp, rdx
0x0000feda      85ff           test edi, edi
0x0000fedc      7421           je 0xfeff
0x0000fede      e87d37ffff     call sym.imp.wcwidth
0x0000fee3      83f8ff         cmp eax, 0xffffffff
0x0000fee6      4863d0         movsxd rdx, eax
0x0000fee9      750c           jne 0xfef7
0x0000feeb      41c707fdff00.  mov dword [r15], 0xfffd                 ; [0xfffd:4]=0x8b444174
0x0000fef2      ba01000000     mov edx, 1
0x0000fef7      4801ea         add rdx, rbp
0x0000fefa      4939d6         cmp r14, rdx
0x0000fefd      73d1           jae 0xfed0
0x0000feff      4c8b742408     mov r14, qword [rsp + 8]
0x0000ff04      488b542420     mov rdx, qword [rsp + 0x20]
0x0000ff09      488b3424       mov rsi, qword [rsp]
0x0000ff0d      41c707000000.  mov dword [r15], 0
0x0000ff14      4c89f7         mov rdi, r14
0x0000ff17      e89438ffff     call sym.imp.wcstombs
0x0000ff1c      4989c7         mov r15, rax
0x0000ff1f      e91afdffff     jmp 0xfc3e
0x0000ff24      4c89fd         mov rbp, r15
0x0000ff27      48c744240800.  mov qword [rsp + 8], 0
0x0000ff30      e909fdffff     jmp 0xfc3e
0x0000ff35      488b3c24       mov rdi, qword [rsp]
0x0000ff39      4889ee         mov rsi, rbp
0x0000ff3c      e8ef33ffff     call sym.imp.wcswidth
0x0000ff41      4863e8         movsxd rbp, eax
0x0000ff44      0f1f4000       nop dword [rax]
0x0000ff48      498b0424       mov rax, qword [r12]
0x0000ff4c      4839e8         cmp rax, rbp
0x0000ff4f      0f83fbfdffff   jae 0xfd50
0x0000ff55      488b442408     mov rax, qword [rsp + 8]
0x0000ff5a      4883c001       add rax, 1
0x0000ff5e      4889442420     mov qword [rsp + 0x20], rax
0x0000ff63      e938ffffff     jmp 0xfea0
0x0000ff68      0f1f84000000.  nop dword [rax + rax]
0x0000ff70      f6c301         test bl, 1
0x0000ff73      0f85c5fcffff   jne 0xfc3e
0x0000ff79      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x0000ff80      e99cfdffff     jmp 0xfd21
0x0000ff85      f6c301         test bl, 1
0x0000ff88      4c89fd         mov rbp, r15
0x0000ff8b      48c744240800.  mov qword [rsp + 8], 0
0x0000ff94      0f85a4fcffff   jne 0xfc3e
0x0000ff9a      e91bfeffff     jmp 0xfdba
0x0000ff9f      4c8b3c24       mov r15, qword [rsp]
0x0000ffa3      31ed           xor ebp, ebp
0x0000ffa5      e955ffffff     jmp 0xfeff
0x0000ffaa      4889e8         mov rax, rbp
0x0000ffad      31d2           xor edx, edx
0x0000ffaf      e99cfcffff     jmp 0xfc50
0x0000ffb4      6690           nop
0x0000ffb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- ambsalign:
0x0000ffc0      4157           push r15
0x0000ffc2      4156           push r14
0x0000ffc4      4989ff         mov r15, rdi
0x0000ffc7      4155           push r13
0x0000ffc9      4154           push r12
0x0000ffcb      4531e4         xor r12d, r12d
0x0000ffce      55             push rbp
0x0000ffcf      53             push rbx
0x0000ffd0      4889f5         mov rbp, rsi
0x0000ffd3      4883ec18       sub rsp, 0x18
0x0000ffd7      4c8b2e         mov r13, qword [rsi]
0x0000ffda      89542408       mov dword [rsp + 8], edx
0x0000ffde      894c240c       mov dword [rsp + 0xc], ecx
0x0000ffe2      4c89e8         mov rax, r13
0x0000ffe5      0f1f00         nop dword [rax]
0x0000ffe8      488d5801       lea rbx, [rax + 1]
0x0000ffec      4c89e7         mov rdi, r12
0x0000ffef      4889de         mov rsi, rbx
0x0000fff2      e8e936ffff     call sym.imp.realloc
0x0000fff7      4885c0         test rax, rax
0x0000fffa      4989c6         mov r14, rax
0x0000fffd      7441           je 0x10040
0x0000ffff      448b4c240c     mov r9d, dword [rsp + 0xc]
0x00010004      448b442408     mov r8d, dword [rsp + 8]
0x00010009      4889e9         mov rcx, rbp
0x0001000c      4c896d00       mov qword [rbp], r13
0x00010010      4889da         mov rdx, rbx
0x00010013      4889c6         mov rsi, rax
0x00010016      4c89ff         mov rdi, r15
0x00010019      e8d2fbffff     call sym.mbsalign
0x0001001e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00010022      742c           je 0x10050
0x00010024      4839c3         cmp rbx, rax
0x00010027      4d89f4         mov r12, r14
0x0001002a      76bc           jbe 0xffe8
0x0001002c      4883c418       add rsp, 0x18
0x00010030      4c89f0         mov rax, r14
0x00010033      5b             pop rbx
0x00010034      5d             pop rbp
0x00010035      415c           pop r12
0x00010037      415d           pop r13
0x00010039      415e           pop r14
0x0001003b      415f           pop r15
0x0001003d      c3             ret
0x0001003e      6690           nop
0x00010040      4c89e7         mov rdi, r12
0x00010043      e83838ffff     call sym..plt.got
0x00010048      ebe2           jmp 0x1002c
0x0001004a      660f1f440000   nop word [rax + rax]
0x00010050      4c89f7         mov rdi, r14
0x00010053      4531f6         xor r14d, r14d
0x00010056      e82538ffff     call sym..plt.got
0x0001005b      ebcf           jmp 0x1002c
0x0001005d      0f1f00         nop dword [rax]
;-- mbsnwidth:
0x00010060      4157           push r15                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x00010062      4156           push r14
0x00010064      4155           push r13
0x00010066      4154           push r12
0x00010068      4c8d2c37       lea r13, [rdi + rsi]                    ; ../coreutils-8.31/lib/mbswidth.c:60
0x0001006c      55             push rbp                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x0001006d      53             push rbx
0x0001006e      4889fb         mov rbx, rdi
0x00010071      4883ec38       sub rsp, 0x38
0x00010075      64488b042528.  mov rax, qword fs:[0x28]
0x0001007e      4889442428     mov qword [rsp + 0x28], rax
0x00010083      31c0           xor eax, eax
0x00010085      8954240c       mov dword [rsp + 0xc], edx
0x00010089      e86233ffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbswidth.c:64
0x0001008e      4883f801       cmp rax, 1
0x00010092      0f8630010000   jbe 0x101c8
0x00010098      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/mbswidth.c:63
0x0001009a      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x0001009d      0f83ea000000   jae 0x1018d
0x000100a3      4c8d642420     lea r12, [rsp + 0x20]                   ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000100a8      4c8d74241c     lea r14, [rsp + 0x1c]
0x000100ad      eb1c           jmp 0x100cb
0x000100af      90             nop
0x000100b0      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/mbswidth.c:67
0x000100b2      7d07           jge 0x100bb
0x000100b4      83e820         sub eax, 0x20                           ; "@"
0x000100b7      3c03           cmp al, 3
0x000100b9      7726           ja 0x100e1
0x000100bb      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/mbswidth.c:111
0x000100bf      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:112
0x000100c2      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x000100c5      0f83c2000000   jae 0x1018d
0x000100cb      0fb603         movzx eax, byte [rbx]                   ; ../coreutils-8.31/lib/mbswidth.c:67
0x000100ce      3c3f           cmp al, 0x3f
0x000100d0      7ede           jle 0x100b0
0x000100d2      3c41           cmp al, 0x41
0x000100d4      7c0b           jl 0x100e1
0x000100d6      3c5f           cmp al, 0x5f
0x000100d8      7ee1           jle 0x100bb
0x000100da      83e861         sub eax, 0x61
0x000100dd      3c1d           cmp al, 0x1d
0x000100df      76da           jbe 0x100bb
0x000100e1      49c704240000.  mov qword [r12], 0                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x000100e9      eb25           jmp 0x10110
0x000100eb      0f1f440000     nop dword [rax + rax]
0x000100f0      b9ffffff7f     mov ecx, 0x7fffffff
0x000100f5      29e9           sub ecx, ebp
0x000100f7      39c1           cmp ecx, eax
0x000100f9      0f8c11010000   jl 0x10210
0x000100ff      01c5           add ebp, eax
0x00010101      4c89e7         mov rdi, r12
0x00010104      4c01fb         add rbx, r15
0x00010107      e81437ffff     call sym.imp.mbsinit
0x0001010c      85c0           test eax, eax
0x0001010e      75b2           jne 0x100c2                             ; ../coreutils-8.31/lib/mbswidth.c:-26
0x00010110      4c89ea         mov rdx, r13
0x00010113      4c89e1         mov rcx, r12                            ; ../coreutils-8.31/lib/mbswidth.c:-11
0x00010116      4889de         mov rsi, rbx
0x00010119      4829da         sub rdx, rbx                            ; ../coreutils-8.31/lib/mbswidth.c:6
0x0001011c      4c89f7         mov rdi, r14
0x0001011f      e82c520000     call sym.rpl_mbrtowc
0x00010124      4883f8ff       cmp rax, 0xffffffffffffffff
0x00010128      4989c7         mov r15, rax
0x0001012b      744b           je 0x10178
0x0001012d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00010131      747d           je 0x101b0
0x00010133      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00010137      4885c0         test rax, rax
0x0001013a      b801000000     mov eax, 1
0x0001013f      4c0f44f8       cmove r15, rax
0x00010143      e81835ffff     call sym.imp.wcwidth
0x00010148      85c0           test eax, eax
0x0001014a      79a4           jns 0x100f0
0x0001014c      f644240c02     test byte [rsp + 0xc], 2
0x00010151      7535           jne 0x10188
0x00010153      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00010157      e8c431ffff     call sym.imp.iswcntrl
0x0001015c      85c0           test eax, eax
0x0001015e      75a1           jne 0x10101                             ; ../coreutils-8.31/lib/mbswidth.c:-21
0x00010160      81fdffffff7f   cmp ebp, 0x7fffffff
0x00010166      0f84a4000000   je 0x10210
0x0001016c      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:-67
0x0001016f      eb90           jmp 0x10101                             ; ../coreutils-8.31/lib/mbswidth.c:-175
0x00010171      0f1f80000000.  nop dword [rax]
0x00010178      f644240c01     test byte [rsp + 0xc], 1
0x0001017d      0f8438ffffff   je 0x100bb
0x00010183      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/mbswidth.c:-185
0x00010188      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x0001018d      488b742428     mov rsi, qword [rsp + 0x28]
0x00010192      644833342528.  xor rsi, qword fs:[0x28]
0x0001019b      89e8           mov eax, ebp
0x0001019d      757b           jne 0x1021a
0x0001019f      4883c438       add rsp, 0x38
0x000101a3      5b             pop rbx
0x000101a4      5d             pop rbp
0x000101a5      415c           pop r12
0x000101a7      415d           pop r13
0x000101a9      415e           pop r14
0x000101ab      415f           pop r15
0x000101ad      c3             ret
0x000101ae      6690           nop
0x000101b0      f644240c01     test byte [rsp + 0xc], 1
0x000101b5      75d1           jne 0x10188
0x000101b7      83c501         add ebp, 1
0x000101ba      4c89eb         mov rbx, r13
0x000101bd      e900ffffff     jmp 0x100c2
0x000101c2      660f1f440000   nop word [rax + rax]
0x000101c8      31ed           xor ebp, ebp
0x000101ca      4c39eb         cmp rbx, r13
0x000101cd      73be           jae 0x1018d
0x000101cf      e88c36ffff     call sym.imp.__ctype_b_loc
0x000101d4      8b54240c       mov edx, dword [rsp + 0xc]
0x000101d8      488b08         mov rcx, qword [rax]
0x000101db      31ed           xor ebp, ebp
0x000101dd      83e202         and edx, 2
0x000101e0      4883c301       add rbx, 1
0x000101e4      0fb643ff       movzx eax, byte [rbx - 1]
0x000101e8      0fb70441       movzx eax, word [rcx + rax*2]
0x000101ec      f6c440         test ah, 0x40                           ; segment.PHDR
0x000101ef      7508           jne 0x101f9
0x000101f1      85d2           test edx, edx
0x000101f3      7593           jne 0x10188
0x000101f5      a802           test al, 2
0x000101f7      750b           jne 0x10204
0x000101f9      81fdffffff7f   cmp ebp, 0x7fffffff
0x000101ff      748c           je 0x1018d
0x00010201      83c501         add ebp, 1
0x00010204      4939dd         cmp r13, rbx
0x00010207      75d7           jne 0x101e0
0x00010209      eb82           jmp 0x1018d
0x0001020b      0f1f440000     nop dword [rax + rax]
0x00010210      bdffffff7f     mov ebp, 0x7fffffff
0x00010215      e973ffffff     jmp 0x1018d
0x0001021a      e80132ffff     call sym.imp.__stack_chk_fail
0x0001021f      90             nop
;-- gnu_mbswidth:
0x00010220      55             push rbp
0x00010221      53             push rbx
0x00010222      89f5           mov ebp, esi
0x00010224      4889fb         mov rbx, rdi
0x00010227      4883ec08       sub rsp, 8
0x0001022b      e8d031ffff     call sym.imp.strlen
0x00010230      4883c408       add rsp, 8
0x00010234      89ea           mov edx, ebp
0x00010236      4889df         mov rdi, rbx
0x00010239      5b             pop rbx
0x0001023a      5d             pop rbp
0x0001023b      4889c6         mov rsi, rax
0x0001023e      e91dfeffff     jmp sym.mbsnwidth
0x00010243      662e0f1f8400.  nop word cs:[rax + rax]
0x0001024d      0f1f00         nop dword [rax]
;-- mpsort_with_tmp:
0x00010250      4157           push r15
0x00010252      4156           push r14
0x00010254      4155           push r13
0x00010256      4154           push r12
0x00010258      4989fd         mov r13, rdi
0x0001025b      55             push rbp
0x0001025c      53             push rbx
0x0001025d      4889cb         mov rbx, rcx
0x00010260      4883ec38       sub rsp, 0x38
0x00010264      4883fe02       cmp rsi, 2
0x00010268      48893424       mov qword [rsp], rsi
0x0001026c      4889542410     mov qword [rsp + 0x10], rdx
0x00010271      772d           ja 0x102a0
0x00010273      751b           jne 0x10290
0x00010275      4c8b6708       mov r12, qword [rdi + 8]
0x00010279      488b2f         mov rbp, qword [rdi]
0x0001027c      4c89e6         mov rsi, r12
0x0001027f      4889ef         mov rdi, rbp
0x00010282      ffd1           call rcx
0x00010284      85c0           test eax, eax
0x00010286      7e08           jle 0x10290
0x00010288      4d896500       mov qword [r13], r12
0x0001028c      49896d08       mov qword [r13 + 8], rbp
0x00010290      4883c438       add rsp, 0x38
0x00010294      5b             pop rbx
0x00010295      5d             pop rbp
0x00010296      415c           pop r12
0x00010298      415d           pop r13
0x0001029a      415e           pop r14
0x0001029c      415f           pop r15
0x0001029e      c3             ret
0x0001029f      90             nop
0x000102a0      488b0424       mov rax, qword [rsp]
0x000102a4      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x000102a9      4889c1         mov rcx, rax
0x000102ac      4889c6         mov rsi, rax
0x000102af      4c89fa         mov rdx, r15
0x000102b2      48d1e9         shr rcx, 1
0x000102b5      488d3ccf       lea rdi, [rdi + rcx*8]
0x000102b9      4829ce         sub rsi, rcx
0x000102bc      4989ce         mov r14, rcx
0x000102bf      48894c2418     mov qword [rsp + 0x18], rcx
0x000102c4      4889d9         mov rcx, rbx
0x000102c7      48897c2428     mov qword [rsp + 0x28], rdi
0x000102cc      e87fffffff     call sym.mpsort_with_tmp
0x000102d1      4983fe01       cmp r14, 1
0x000102d5      0f85c5000000   jne 0x103a0
0x000102db      4d8b7500       mov r14, qword [r13]
0x000102df      4d8937         mov qword [r15], r14
0x000102e2      488b442428     mov rax, qword [rsp + 0x28]
0x000102e7      4c8b7c2418     mov r15, qword [rsp + 0x18]
0x000102ec      4531e4         xor r12d, r12d
0x000102ef      48c744240800.  mov qword [rsp + 8], 0
0x000102f8      488b28         mov rbp, qword [rax]
0x000102fb      0f1f440000     nop dword [rax + rax]
0x00010300      4889ee         mov rsi, rbp
0x00010303      4c89f7         mov rdi, r14
0x00010306      4983c401       add r12, 1
0x0001030a      ffd3           call rbx
0x0001030c      85c0           test eax, eax
0x0001030e      7e24           jle 0x10334
0x00010310      4983c701       add r15, 1
0x00010314      4c393c24       cmp qword [rsp], r15
0x00010318      4b896ce5f8     mov qword [r13 + r12*8 - 8], rbp
0x0001031d      7441           je 0x10360
0x0001031f      4b8b6cfd00     mov rbp, qword [r13 + r15*8]
0x00010324      4c89f7         mov rdi, r14
0x00010327      4983c401       add r12, 1
0x0001032b      4889ee         mov rsi, rbp
0x0001032e      ffd3           call rbx
0x00010330      85c0           test eax, eax
0x00010332      7fdc           jg 0x10310
0x00010334      488344240801   add qword [rsp + 8], 1
0x0001033a      4f8974e5f8     mov qword [r13 + r12*8 - 8], r14
0x0001033f      488b442408     mov rax, qword [rsp + 8]
0x00010344      4839442418     cmp qword [rsp + 0x18], rax
0x00010349      0f8441ffffff   je 0x10290
0x0001034f      488b542410     mov rdx, qword [rsp + 0x10]
0x00010354      4c8b34c2       mov r14, qword [rdx + rax*8]
0x00010358      eba6           jmp 0x10300
0x0001035a      660f1f440000   nop word [rax + rax]
0x00010360      488b442408     mov rax, qword [rsp + 8]
0x00010365      4b8d7ce500     lea rdi, [r13 + r12*8]
0x0001036a      4c8b642418     mov r12, qword [rsp + 0x18]
0x0001036f      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00010374      4883c438       add rsp, 0x38
0x00010378      5b             pop rbx
0x00010379      4929c4         sub r12, rax
0x0001037c      5d             pop rbp
0x0001037d      4a8d14e50000.  lea rdx, [r12*8]
0x00010385      488d34c1       lea rsi, [rcx + rax*8]
0x00010389      415c           pop r12
0x0001038b      415d           pop r13
0x0001038d      415e           pop r14
0x0001038f      415f           pop r15
0x00010391      e95a32ffff     jmp sym.imp.memcpy
0x00010396      662e0f1f8400.  nop word cs:[rax + rax]
0x000103a0      4c8b3424       mov r14, qword [rsp]
0x000103a4      4c8b642410     mov r12, qword [rsp + 0x10]
0x000103a9      4889d9         mov rcx, rbx
0x000103ac      488b742418     mov rsi, qword [rsp + 0x18]
0x000103b1      49c1ee02       shr r14, 2
0x000103b5      4c89e2         mov rdx, r12
0x000103b8      4f8d7cf500     lea r15, [r13 + r14*8]
0x000103bd      4c29f6         sub rsi, r14
0x000103c0      4c89742420     mov qword [rsp + 0x20], r14
0x000103c5      4c89f5         mov rbp, r14
0x000103c8      4c89ff         mov rdi, r15
0x000103cb      e880feffff     call sym.mpsort_with_tmp
0x000103d0      4c89f6         mov rsi, r14
0x000103d3      4889d9         mov rcx, rbx
0x000103d6      4c89e2         mov rdx, r12
0x000103d9      4c89ef         mov rdi, r13
0x000103dc      e86ffeffff     call sym.mpsort_with_tmp
0x000103e1      4d8b7500       mov r14, qword [r13]
0x000103e5      4d8b3f         mov r15, qword [r15]
0x000103e8      48c744240800.  mov qword [rsp + 8], 0
0x000103f1      0f1f80000000.  nop dword [rax]
0x000103f8      4c89fe         mov rsi, r15
0x000103fb      4c89f7         mov rdi, r14
0x000103fe      4983c408       add r12, 8
0x00010402      ffd3           call rbx
0x00010404      85c0           test eax, eax
0x00010406      7e25           jle 0x1042d
0x00010408      4883c501       add rbp, 1
0x0001040c      48396c2418     cmp qword [rsp + 0x18], rbp
0x00010411      4d897c24f8     mov qword [r12 - 8], r15
0x00010416      7447           je 0x1045f
0x00010418      4d8b7ced00     mov r15, qword [r13 + rbp*8]
0x0001041d      4c89f7         mov rdi, r14
0x00010420      4983c408       add r12, 8
0x00010424      4c89fe         mov rsi, r15
0x00010427      ffd3           call rbx
0x00010429      85c0           test eax, eax
0x0001042b      7fdb           jg 0x10408
0x0001042d      488344240801   add qword [rsp + 8], 1
0x00010433      4d897424f8     mov qword [r12 - 8], r14
0x00010438      488b442408     mov rax, qword [rsp + 8]
0x0001043d      4839442420     cmp qword [rsp + 0x20], rax
0x00010442      740c           je 0x10450
0x00010444      4d8b74c500     mov r14, qword [r13 + rax*8]
0x00010449      ebad           jmp 0x103f8
0x0001044b      0f1f440000     nop dword [rax + rax]
0x00010450      488b442418     mov rax, qword [rsp + 0x18]
0x00010455      48896c2408     mov qword [rsp + 8], rbp
0x0001045a      4889442420     mov qword [rsp + 0x20], rax
0x0001045f      488b442408     mov rax, qword [rsp + 8]
0x00010464      488b542420     mov rdx, qword [rsp + 0x20]
0x00010469      4c89e7         mov rdi, r12
0x0001046c      4829c2         sub rdx, rax
0x0001046f      498d74c500     lea rsi, [r13 + rax*8]
0x00010474      48c1e203       shl rdx, 3
0x00010478      e87331ffff     call sym.imp.memcpy
0x0001047d      488b442410     mov rax, qword [rsp + 0x10]
0x00010482      4c8b30         mov r14, qword [rax]
0x00010485      e958feffff     jmp 0x102e2
0x0001048a      660f1f440000   nop word [rax + rax]
;-- mpsort:
0x00010490      488d04f7       lea rax, [rdi + rsi*8]
0x00010494      4889d1         mov rcx, rdx
0x00010497      4889c2         mov rdx, rax
0x0001049a      e9b1fdffff     jmp sym.mpsort_with_tmp
0x0001049f      90             nop
;-- memcpy_lowcase:
0x000104a0      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:321
0x000104a3      4154           push r12
0x000104a5      55             push rbp
0x000104a6      4889fd         mov rbp, rdi
0x000104a9      53             push rbx
0x000104aa      742d           je 0x104d9                              ; ../coreutils-8.31/lib/nstrftime.c:322
0x000104ac      4989f4         mov r12, rsi
0x000104af      488d5aff       lea rbx, [rdx - 1]
0x000104b3      e89833ffff     call sym.imp.__ctype_tolower_loc        ; ../coreutils-8.31/lib/nstrftime.c:323
0x000104b8      0f1f84000000.  nop dword [rax + rax]
0x000104c0      410fb60c1c     movzx ecx, byte [r12 + rbx]
0x000104c5      488b10         mov rdx, qword [rax]
0x000104c8      8b148a         mov edx, dword [rdx + rcx*4]
0x000104cb      88541d00       mov byte [rbp + rbx], dl
0x000104cf      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:322
0x000104d3      4883fbff       cmp rbx, 0xffffffffffffffff
0x000104d7      75e7           jne 0x104c0
0x000104d9      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:325
0x000104dc      5b             pop rbx
0x000104dd      5d             pop rbp
0x000104de      415c           pop r12
0x000104e0      c3             ret
0x000104e1      0f1f440000     nop dword [rax + rax]
0x000104e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcpy_uppcase:
0x000104f0      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/nstrftime.c:332
0x000104f3      4154           push r12
0x000104f5      55             push rbp
0x000104f6      4889fd         mov rbp, rdi
0x000104f9      53             push rbx
0x000104fa      742d           je 0x10529                              ; ../coreutils-8.31/lib/nstrftime.c:333
0x000104fc      4989f4         mov r12, rsi
0x000104ff      488d5aff       lea rbx, [rdx - 1]
0x00010503      e8382dffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/nstrftime.c:334
0x00010508      0f1f84000000.  nop dword [rax + rax]
0x00010510      410fb60c1c     movzx ecx, byte [r12 + rbx]
0x00010515      488b10         mov rdx, qword [rax]
0x00010518      8b148a         mov edx, dword [rdx + rcx*4]
0x0001051b      88541d00       mov byte [rbp + rbx], dl
0x0001051f      4883eb01       sub rbx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:333
0x00010523      4883fbff       cmp rbx, 0xffffffffffffffff
0x00010527      75e7           jne 0x10510
0x00010529      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:336
0x0001052c      5b             pop rbx
0x0001052d      5d             pop rbp                                 ; ../coreutils-8.31/lib/nstrftime.c:204
0x0001052e      415c           pop r12
0x00010530      c3             ret
0x00010531      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:196
0x00010536      662e0f1f8400.  nop word cs:[rax + rax]
;-- __strftime_internal:
0x00010540      4157           push r15
0x00010542      4156           push r14
0x00010544      4989d3         mov r11, rdx
0x00010547      4155           push r13
0x00010549      4154           push r12
0x0001054b      4989cd         mov r13, rcx
0x0001054e      55             push rbp                                ; ../coreutils-8.31/lib/nstrftime.c:173
0x0001054f      53             push rbx
0x00010550      4889fd         mov rbp, rdi
0x00010553      4881ecc80400.  sub rsp, 0x4c8
0x0001055a      488b7930       mov rdi, qword [rcx + 0x30]
0x0001055e      448b7908       mov r15d, dword [rcx + 8]
0x00010562      488b84240805.  mov rax, qword [rsp + 0x508]
0x0001056a      4889742408     mov qword [rsp + 8], rsi
0x0001056f      44894c242c     mov dword [rsp + 0x2c], r9d
0x00010574      4c6394240005.  movsxd r10, dword [rsp + 0x500]
0x0001057c      448844242b     mov byte [rsp + 0x2b], r8b
0x00010581      4889442418     mov qword [rsp + 0x18], rax
0x00010586      488b84241005.  mov rax, qword [rsp + 0x510]
0x0001058e      4889442410     mov qword [rsp + 0x10], rax
0x00010593      64488b042528.  mov rax, qword fs:[0x28]
0x0001059c      48898424b804.  mov qword [rsp + 0x4b8], rax
0x000105a4      31c0           xor eax, eax
0x000105a6      488d05067300.  lea rax, [0x000178b3]
0x000105ad      4885ff         test rdi, rdi
0x000105b0      480f45c7       cmovne rax, rdi
0x000105b4      4183ff0c       cmp r15d, 0xc
0x000105b8      4889442420     mov qword [rsp + 0x20], rax
0x000105bd      0f8eed000000   jle 0x106b0
0x000105c3      4183ef0c       sub r15d, 0xc
0x000105c7      410fb603       movzx eax, byte [r11]
0x000105cb      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/nstrftime.c:285
0x000105ce      84c0           test al, al
0x000105d0      0f84b6000000   je 0x1068c
0x000105d6      44897c2468     mov dword [rsp + 0x68], r15d
0x000105db      4c89db         mov rbx, r11
0x000105de      3c25           cmp al, 0x25
0x000105e0      0f84e2000000   je 0x106c8
0x000105e6      4585d2         test r10d, r10d
0x000105e9      41bc00000000   mov r12d, 0
0x000105ef      b801000000     mov eax, 1
0x000105f4      4d0f49e2       cmovns r12, r10
0x000105f8      4d85e4         test r12, r12
0x000105fb      4c0f44e0       cmove r12, rax
0x000105ff      488b442408     mov rax, qword [rsp + 8]
0x00010604      4c29f0         sub rax, r14
0x00010607      4c39e0         cmp rax, r12
0x0001060a      7734           ja 0x10640
0x0001060c      4531f6         xor r14d, r14d
0x0001060f      488b9c24b804.  mov rbx, qword [rsp + 0x4b8]
0x00010617      6448331c2528.  xor rbx, qword fs:[0x28]                ; ../coreutils-8.31/lib/nstrftime.c:1146
0x00010620      4c89f0         mov rax, r14
0x00010623      0f85ac190000   jne 0x11fd5
0x00010629      4881c4c80400.  add rsp, 0x4c8
0x00010630      5b             pop rbx
0x00010631      5d             pop rbp
0x00010632      415c           pop r12
0x00010634      415d           pop r13
0x00010636      415e           pop r14
0x00010638      415f           pop r15
0x0001063a      c3             ret
0x0001063b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:176
0x00010640      4885ed         test rbp, rbp
0x00010643      7427           je 0x1066c
0x00010645      4183fa01       cmp r10d, 1
0x00010649      7e17           jle 0x10662
0x0001064b      4d8d7aff       lea r15, [r10 - 1]
0x0001064f      4889ef         mov rdi, rbp
0x00010652      be20000000     mov esi, 0x20                           ; "@"
0x00010657      4c89fa         mov rdx, r15
0x0001065a      4c01fd         add rbp, r15
0x0001065d      e89e2effff     call sym.imp.memset
0x00010662      0fb603         movzx eax, byte [rbx]
0x00010665      4883c501       add rbp, 1
0x00010669      8845ff         mov byte [rbp - 1], al
0x0001066c      4d01e6         add r14, r12                            ; /usr/include/x86_64-linux-gnu/bits/string_fortified.h:166
0x0001066f      4989dc         mov r12, rbx
0x00010672      410fb6442401   movzx eax, byte [r12 + 1]
0x00010678      498d5c2401     lea rbx, [r12 + 1]
0x0001067d      49c7c2ffffff.  mov r10, 0xffffffffffffffff
0x00010684      84c0           test al, al
0x00010686      0f8552ffffff   jne 0x105de
0x0001068c      4885ed         test rbp, rbp
0x0001068f      0f847affffff   je 0x1060f
0x00010695      48837c240800   cmp qword [rsp + 8], 0
0x0001069b      0f846effffff   je 0x1060f
0x000106a1      c6450000       mov byte [rbp], 0
0x000106a5      e965ffffff     jmp 0x1060f
0x000106aa      660f1f440000   nop word [rax + rax]
0x000106b0      4585ff         test r15d, r15d                         ; ../coreutils-8.31/lib/nstrftime.c:166
0x000106b3      b80c000000     mov eax, 0xc                            ; string_fortified.h:-1286
0x000106b8      440f44f8       cmove r15d, eax                         ; ../coreutils-8.31/lib/nstrftime.c:166
0x000106bc      e906ffffff     jmp 0x105c7
0x000106c1      0f1f80000000.  nop dword [rax]
0x000106c8      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x000106cd      4531c0         xor r8d, r8d
0x000106d0      4531ff         xor r15d, r15d
0x000106d3      ba01000000     mov edx, 1
0x000106d8      88442430       mov byte [rsp + 0x30], al
0x000106dc      4883c301       add rbx, 1
0x000106e0      0fbe03         movsx eax, byte [rbx]
0x000106e3      8d48dd         lea ecx, [rax - 0x23]
0x000106e6      89c6           mov esi, eax
0x000106e8      4189c1         mov r9d, eax
0x000106eb      80f93c         cmp cl, 0x3c
0x000106ee      772c           ja 0x1071c
0x000106f0      4889d7         mov rdi, rdx
0x000106f3      49bb00250000.  movabs r11, 0x1000000000002500
0x000106fd      48d3e7         shl rdi, cl
0x00010700      4c85df         test rdi, r11
0x00010703      756b           jne 0x10770
0x00010705      84c9           test cl, cl
0x00010707      7477           je 0x10780
0x00010709      48b900000000.  movabs rcx, 0x800000000000000           ; 576460752303423488
0x00010713      4885cf         test rdi, rcx
0x00010716      0f8554010000   jne 0x10870
0x0001071c      8d50d0         lea edx, [rax - 0x30]
0x0001071f      83fa09         cmp edx, 9
0x00010722      0f8658010000   jbe 0x10880
0x00010728      4080fe45       cmp sil, 0x45
0x0001072c      742a           je 0x10758
0x0001072e      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/nstrftime.c:-649
0x00010731      4080fe4f       cmp sil, 0x4f
0x00010735      7421           je 0x10758
0x00010737      4080fe7a       cmp sil, 0x7a
0x0001073b      7753           ja 0x10790
0x0001073d      488d15989900.  lea rdx, [0x0001a0dc]
0x00010744      400fb6c6       movzx eax, sil
0x00010748      48630482       movsxd rax, dword [rdx + rax*4]
0x0001074c      4801d0         add rax, rdx
0x0001074f      ffe0           jmp rax
0x00010751      0f1f80000000.  nop dword [rax]
0x00010758      440fbe4b01     movsx r9d, byte [rbx + 1]               ; ../coreutils-8.31/lib/nstrftime.c:-639
0x0001075d      4189c3         mov r11d, eax
0x00010760      4883c301       add rbx, 1
0x00010764      4489ce         mov esi, r9d
0x00010767      ebce           jmp 0x10737
0x00010769      0f1f80000000.  nop dword [rax]
0x00010770      4189c7         mov r15d, eax
0x00010773      e964ffffff     jmp 0x106dc
0x00010778      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/nstrftime.c:-647
0x00010780      41b801000000   mov r8d, 1
0x00010786      e951ffffff     jmp 0x106dc
0x0001078b      4c89cb         mov rbx, r9
0x0001078e      6690           nop
0x00010790      488d43ff       lea rax, [rbx - 1]
0x00010794      41b801000000   mov r8d, 1                              ; ../coreutils-8.31/lib/nstrftime.c:-515
0x0001079a      4989c1         mov r9, rax
0x0001079d      488d40ff       lea rax, [rax - 1]
0x000107a1      4183c001       add r8d, 1
0x000107a5      80780125       cmp byte [rax + 1], 0x25
0x000107a9      75ef           jne 0x1079a
0x000107ab      488b542408     mov rdx, qword [rsp + 8]
0x000107b0      b800000000     mov eax, 0
0x000107b5      4d63c0         movsxd r8, r8d
0x000107b8      4c89c1         mov rcx, r8
0x000107bb      4989dc         mov r12, rbx
0x000107be      4c29f2         sub rdx, r14
0x000107c1      4585d2         test r10d, r10d
0x000107c4      410f49c2       cmovns eax, r10d                        ; ../coreutils-8.31/lib/nstrftime.c:-450
0x000107c8      4898           cdqe
0x000107ca      4c39c0         cmp rax, r8
0x000107cd      480f43c8       cmovae rcx, rax
0x000107d1      4839d1         cmp rcx, rdx
0x000107d4      0f8332feffff   jae 0x1060c
0x000107da      4885ed         test rbp, rbp
0x000107dd      0f8482000000   je 0x10865
0x000107e3      4c39c0         cmp rax, r8
0x000107e6      764d           jbe 0x10835
0x000107e8      4963d2         movsxd rdx, r10d
0x000107eb      4c89442448     mov qword [rsp + 0x48], r8
0x000107f0      48894c2440     mov qword [rsp + 0x40], rcx
0x000107f5      4c29c2         sub rdx, r8
0x000107f8      4183ff30       cmp r15d, 0x30                          ; ../coreutils-8.31/lib/nstrftime.c:-446
0x000107fc      4c894c2438     mov qword [rsp + 0x38], r9
0x00010801      488d5c1500     lea rbx, [rbp + rdx]
0x00010806      0f846a120000   je 0x11a76
0x0001080c      4183ff2b       cmp r15d, 0x2b
0x00010810      0f8460120000   je 0x11a76
0x00010816      4889ef         mov rdi, rbp
0x00010819      be20000000     mov esi, 0x20                           ; "@"
0x0001081e      4889dd         mov rbp, rbx
0x00010821      e8da2cffff     call sym.imp.memset
0x00010826      4c8b442448     mov r8, qword [rsp + 0x48]
0x0001082b      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00010830      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00010835      807c243000     cmp byte [rsp + 0x30], 0
0x0001083a      48894c2438     mov qword [rsp + 0x38], rcx
0x0001083f      4c89c2         mov rdx, r8
0x00010842      4c89442430     mov qword [rsp + 0x30], r8
0x00010847      4c89ce         mov rsi, r9
0x0001084a      4889ef         mov rdi, rbp
0x0001084d      0f84cd110000   je 0x11a20
0x00010853      e898fcffff     call sym.memcpy_uppcase
0x00010858      4c8b442430     mov r8, qword [rsp + 0x30]
0x0001085d      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00010862      4c01c5         add rbp, r8
0x00010865      4901ce         add r14, rcx
0x00010868      e905feffff     jmp 0x10672
0x0001086d      0f1f00         nop dword [rax]
0x00010870      c644243001     mov byte [rsp + 0x30], 1
0x00010875      e962feffff     jmp 0x106dc
0x0001087a      660f1f440000   nop word [rax + rax]
0x00010880      4531d2         xor r10d, r10d
0x00010883      0fbe4301       movsx eax, byte [rbx + 1]
0x00010887      4181facccccc.  cmp r10d, 0xccccccc
0x0001088e      488d4b01       lea rcx, [rbx + 1]
0x00010892      89c6           mov esi, eax
0x00010894      8d50d0         lea edx, [rax - 0x30]
0x00010897      7f2d           jg 0x108c6
0x00010899      0fbe3b         movsx edi, byte [rbx]
0x0001089c      7422           je 0x108c0
0x0001089e      478d0c92       lea r9d, [r10 + r10*4]
0x000108a2      4889cb         mov rbx, rcx
0x000108a5      468d544fd0     lea r10d, [rdi + r9*2 - 0x30]
0x000108aa      83fa09         cmp edx, 9
0x000108ad      76d4           jbe 0x10883
0x000108af      4189c1         mov r9d, eax
0x000108b2      e971feffff     jmp 0x10728
0x000108b7      660f1f840000.  nop word [rax + rax]
0x000108c0      4080ff37       cmp dil, 0x37
0x000108c4      7ed8           jle 0x1089e
0x000108c6      83fa09         cmp edx, 9
0x000108c9      7715           ja 0x108e0
0x000108cb      0fbe4302       movsx eax, byte [rbx + 2]
0x000108cf      41baffffff7f   mov r10d, 0x7fffffff
0x000108d5      4883c302       add rbx, 2
0x000108d9      89c6           mov esi, eax
0x000108db      8d50d0         lea edx, [rax - 0x30]
0x000108de      ebca           jmp 0x108aa
0x000108e0      4189c1         mov r9d, eax
0x000108e3      4889cb         mov rbx, rcx
0x000108e6      41baffffff7f   mov r10d, 0x7fffffff
0x000108ec      e937feffff     jmp 0x10728                             ; ../coreutils-8.31/lib/nstrftime.c:-584
0x000108f1      0f1f80000000.  nop dword [rax]
0x000108f8      4183fb4f       cmp r11d, 0x4f
0x000108fc      0f848efeffff   je 0x10790
0x00010902      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/nstrftime.c:-294
0x00010905      b820250000     mov eax, 0x2520                         ; ' %' ; u"@\""
0x0001090a      4585db         test r11d, r11d
0x0001090d      66898424ab00.  mov word [rsp + 0xab], ax
0x00010915      0f85d0160000   jne 0x11feb
0x0001091b      488d9424ab00.  lea rdx, [rsp + 0xab]
0x00010923      4989dc         mov r12, rbx
0x00010926      488d4202       lea rax, [rdx + 2]
0x0001092a      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00010932      408830         mov byte [rax], sil
0x00010935      c6400100       mov byte [rax + 1], 0
0x00010939      4c89e9         mov rcx, r13
0x0001093c      be00040000     mov esi, 0x400
0x00010941      4489542438     mov dword [rsp + 0x38], r10d
0x00010946      4c89cf         mov rdi, r9
0x00010949      4488442450     mov byte [rsp + 0x50], r8b
0x0001094e      44895c2448     mov dword [rsp + 0x48], r11d
0x00010953      4c894c2440     mov qword [rsp + 0x40], r9
0x00010958      e8d32dffff     call sym.imp.strftime                   ; ../coreutils-8.31/lib/nstrftime.c:-613
0x0001095d      4885c0         test rax, rax
0x00010960      0f840cfdffff   je 0x10672
0x00010966      4c63542438     movsxd r10, dword [rsp + 0x38]
0x0001096b      488d48ff       lea rcx, [rax - 1]
0x0001096f      488b542408     mov rdx, qword [rsp + 8]
0x00010974      b800000000     mov eax, 0
0x00010979      4585d2         test r10d, r10d
0x0001097c      490f49c2       cmovns rax, r10
0x00010980      4839c1         cmp rcx, rax
0x00010983      4889c3         mov rbx, rax
0x00010986      480f43d9       cmovae rbx, rcx
0x0001098a      4c29f2         sub rdx, r14
0x0001098d      4839da         cmp rdx, rbx
0x00010990      0f8676fcffff   jbe 0x1060c
0x00010996      4885ed         test rbp, rbp
0x00010999      0f849f000000   je 0x10a3e
0x0001099f      448b5c2448     mov r11d, dword [rsp + 0x48]
0x000109a4      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000109a9      440fb6442450   movzx r8d, byte [rsp + 0x50]
0x000109af      4585db         test r11d, r11d
0x000109b2      755a           jne 0x10a0e
0x000109b4      4839c1         cmp rcx, rax
0x000109b7      7355           jae 0x10a0e
0x000109b9      4963d2         movsxd rdx, r10d
0x000109bc      4c894c2450     mov qword [rsp + 0x50], r9
0x000109c1      48894c2448     mov qword [rsp + 0x48], rcx
0x000109c6      4829ca         sub rdx, rcx
0x000109c9      4183ff30       cmp r15d, 0x30
0x000109cd      4488442440     mov byte [rsp + 0x40], r8b
0x000109d2      488d441500     lea rax, [rbp + rdx]
0x000109d7      4889442438     mov qword [rsp + 0x38], rax
0x000109dc      0f846d100000   je 0x11a4f
0x000109e2      4183ff2b       cmp r15d, 0x2b
0x000109e6      0f8463100000   je 0x11a4f
0x000109ec      4889ef         mov rdi, rbp
0x000109ef      be20000000     mov esi, 0x20                           ; "@"
0x000109f4      e8072bffff     call sym.imp.memset                     ; ../coreutils-8.31/lib/nstrftime.c:-93
0x000109f9      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000109ff      488b6c2438     mov rbp, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/nstrftime.c:-332
0x00010a04      4c8b4c2450     mov r9, qword [rsp + 0x50]              ; ../coreutils-8.31/lib/nstrftime.c:-326
0x00010a09      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00010a0e      4584c0         test r8b, r8b
0x00010a11      498d7101       lea rsi, [r9 + 1]
0x00010a15      4889ca         mov rdx, rcx
0x00010a18      0f851a100000   jne 0x11a38
0x00010a1e      807c243000     cmp byte [rsp + 0x30], 0
0x00010a23      4889ef         mov rdi, rbp
0x00010a26      48894c2430     mov qword [rsp + 0x30], rcx
0x00010a2b      0f8470080000   je 0x112a1
0x00010a31      e8bafaffff     call sym.memcpy_uppcase
0x00010a36      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00010a3b      4801cd         add rbp, rcx
0x00010a3e      4901de         add r14, rbx
0x00010a41      e92cfcffff     jmp 0x10672
0x00010a46      4585db         test r11d, r11d
0x00010a49      0f8541fdffff   jne 0x10790
0x00010a4f      0fb6442430     movzx eax, byte [rsp + 0x30]
0x00010a54      4584c0         test r8b, r8b
0x00010a57      488d9424ab00.  lea rdx, [rsp + 0xab]
0x00010a5f      4989dc         mov r12, rbx
0x00010a62      410f45c0       cmovne eax, r8d
0x00010a66      4531c0         xor r8d, r8d
0x00010a69      4531db         xor r11d, r11d
0x00010a6c      88442430       mov byte [rsp + 0x30], al               ; ../coreutils-8.31/lib/nstrftime.c:-643
0x00010a70      b820250000     mov eax, 0x2520                         ; ' %' ; u"@\""
0x00010a75      66898424ab00.  mov word [rsp + 0xab], ax               ; ../coreutils-8.31/lib/nstrftime.c:-647
0x00010a7d      488d4202       lea rax, [rdx + 2]
0x00010a81      e9a4feffff     jmp 0x1092a
0x00010a86      4183fb45       cmp r11d, 0x45
0x00010a8a      0f8400fdffff   je 0x10790
0x00010a90      418b4d00       mov ecx, dword [r13]
0x00010a94      bf02000000     mov edi, 2
0x00010a99      0f1f80000000.  nop dword [rax]
0x00010aa0      89c8           mov eax, ecx
0x00010aa2      31f6           xor esi, esi
0x00010aa4      c644244000     mov byte [rsp + 0x40], 0                ; ../coreutils-8.31/lib/nstrftime.c:-643
0x00010aa9      c1e81f         shr eax, 0x1f
0x00010aac      89442438       mov dword [rsp + 0x38], eax
0x00010ab0      89c8           mov eax, ecx
0x00010ab2      f7d0           not eax
0x00010ab4      c1e81f         shr eax, 0x1f
0x00010ab7      4183fb4f       cmp r11d, 0x4f
0x00010abb      0f857f0e0000   jne 0x11940
0x00010ac1      84c0           test al, al
0x00010ac3      0f84770e0000   je 0x11940
0x00010ac9      4489ce         mov esi, r9d
0x00010acc      ba20250000     mov edx, 0x2520                         ; ' %' ; u"@\""
0x00010ad1      4531c0         xor r8d, r8d
0x00010ad4      66899424ab00.  mov word [rsp + 0xab], dx
0x00010adc      488d9424ab00.  lea rdx, [rsp + 0xab]
0x00010ae4      44889c24ad00.  mov byte [rsp + 0xad], r11b
0x00010aec      4989dc         mov r12, rbx
0x00010aef      4189fb         mov r11d, edi
0x00010af2      488d4203       lea rax, [rdx + 3]
0x00010af6      e92ffeffff     jmp 0x1092a
0x00010afb      4585d2         test r10d, r10d
0x00010afe      b900000000     mov ecx, 0
0x00010b03      b801000000     mov eax, 1
0x00010b08      410f49ca       cmovns ecx, r10d
0x00010b0c      4863c9         movsxd rcx, ecx
0x00010b0f      4885c9         test rcx, rcx
0x00010b12      480f44c8       cmove rcx, rax
0x00010b16      488b442408     mov rax, qword [rsp + 8]
0x00010b1b      4c29f0         sub rax, r14
0x00010b1e      4839c8         cmp rax, rcx
0x00010b21      0f86e5faffff   jbe 0x1060c
0x00010b27      4885ed         test rbp, rbp
0x00010b2a      744c           je 0x10b78
0x00010b2c      4183fa01       cmp r10d, 1
0x00010b30      7e3a           jle 0x10b6c
0x00010b32      4963d2         movsxd rdx, r10d
0x00010b35      48894c2430     mov qword [rsp + 0x30], rcx
0x00010b3a      4883ea01       sub rdx, 1
0x00010b3e      4183ff30       cmp r15d, 0x30
0x00010b42      4c8d641500     lea r12, [rbp + rdx]
0x00010b47      0f8417130000   je 0x11e64
0x00010b4d      4183ff2b       cmp r15d, 0x2b
0x00010b51      0f840d130000   je 0x11e64
0x00010b57      4889ef         mov rdi, rbp
0x00010b5a      be20000000     mov esi, 0x20                           ; "@"
0x00010b5f      4c89e5         mov rbp, r12
0x00010b62      e89929ffff     call sym.imp.memset
0x00010b67      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00010b6c      c6450009       mov byte [rbp], 9
0x00010b70      4883c501       add rbp, 1
0x00010b74      0f1f4000       nop dword [rax]
0x00010b78      4901ce         add r14, rcx
0x00010b7b      4989dc         mov r12, rbx
0x00010b7e      e9effaffff     jmp 0x10672
0x00010b83      b801000000     mov eax, 1
0x00010b88      4584c0         test r8b, r8b
0x00010b8b      0f852a0f0000   jne 0x11abb
0x00010b91      4189c0         mov r8d, eax
0x00010b94      be70000000     mov esi, 0x70                           ; 'p'
0x00010b99      e967fdffff     jmp 0x10905
0x00010b9e      488d05ce6f00.  lea rax, [0x00017b73]                   ; "%H:%M"
0x00010ba5      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00010bad      4889442440     mov qword [rsp + 0x40], rax             ; string_fortified.h:-1448
0x00010bb2      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00010bb8      8b8424180500.  mov eax, dword [rsp + 0x518]
0x00010bbf      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00010bc6      4489542448     mov dword [rsp + 0x48], r10d
0x00010bcb      31ff           xor edi, edi
0x00010bcd      4589f9         mov r9d, r15d
0x00010bd0      4c89e9         mov rcx, r13
0x00010bd3      4489442430     mov dword [rsp + 0x30], r8d
0x00010bd8      50             push rax
0x00010bd9      ff742418       push qword [rsp + 0x18]
0x00010bdd      ff742428       push qword [rsp + 0x28]
0x00010be1      8b442450       mov eax, dword [rsp + 0x50]
0x00010be5      50             push rax
0x00010be6      488b542460     mov rdx, qword [rsp + 0x60]
0x00010beb      e850f9ffff     call sym.__strftime_internal
0x00010bf0      4883c420       add rsp, 0x20
0x00010bf4      4c63542448     movsxd r10, dword [rsp + 0x48]
0x00010bf9      4989c3         mov r11, rax
0x00010bfc      488b742408     mov rsi, qword [rsp + 8]
0x00010c01      b800000000     mov eax, 0
0x00010c06      4585d2         test r10d, r10d
0x00010c09      490f49c2       cmovns rax, r10                         ; ../coreutils-8.31/lib/nstrftime.c:-269
0x00010c0d      4939c3         cmp r11, rax
0x00010c10      4989c4         mov r12, rax
0x00010c13      4d0f43e3       cmovae r12, r11                         ; ../coreutils-8.31/lib/nstrftime.c:-266
0x00010c17      4c29f6         sub rsi, r14
0x00010c1a      4c39e6         cmp rsi, r12
0x00010c1d      4889742448     mov qword [rsp + 0x48], rsi
0x00010c22      0f86e4f9ffff   jbe 0x1060c
0x00010c28      4885ed         test rbp, rbp
0x00010c2b      0f843bfaffff   je 0x1066c
0x00010c31      4939c3         cmp r11, rax
0x00010c34      7340           jae 0x10c76
0x00010c36      4963d2         movsxd rdx, r10d
0x00010c39      4c895c2458     mov qword [rsp + 0x58], r11
0x00010c3e      4c29da         sub rdx, r11
0x00010c41      4183ff30       cmp r15d, 0x30
0x00010c45      488d441500     lea rax, [rbp + rdx]
0x00010c4a      4889442450     mov qword [rsp + 0x50], rax
0x00010c4f      0f84f7100000   je 0x11d4c
0x00010c55      4183ff2b       cmp r15d, 0x2b
0x00010c59      0f84ed100000   je 0x11d4c
0x00010c5f      4889ef         mov rdi, rbp
0x00010c62      be20000000     mov esi, 0x20                           ; ../coreutils-8.31/lib/nstrftime.c:-235 ; "@"
0x00010c67      e89428ffff     call sym.imp.memset
0x00010c6c      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00010c71      4c8b5c2458     mov r11, qword [rsp + 0x58]
0x00010c76      8b8424180500.  mov eax, dword [rsp + 0x518]
0x00010c7d      4c895c2450     mov qword [rsp + 0x50], r11
0x00010c82      4889ef         mov rdi, rbp
0x00010c85      4589f9         mov r9d, r15d
0x00010c88      4c89e9         mov rcx, r13
0x00010c8b      50             push rax
0x00010c8c      ff742418       push qword [rsp + 0x18]
0x00010c90      ff742428       push qword [rsp + 0x28]
0x00010c94      8b442450       mov eax, dword [rsp + 0x50]
0x00010c98      50             push rax
0x00010c99      448b442450     mov r8d, dword [rsp + 0x50]
0x00010c9e      488b542460     mov rdx, qword [rsp + 0x60]
0x00010ca3      488b742468     mov rsi, qword [rsp + 0x68]
0x00010ca8      e893f8ffff     call sym.__strftime_internal
0x00010cad      4c8b5c2470     mov r11, qword [rsp + 0x70]
0x00010cb2      4883c420       add rsp, 0x20
0x00010cb6      4c01dd         add rbp, r11
0x00010cb9      e9aef9ffff     jmp 0x1066c                             ; ../coreutils-8.31/lib/nstrftime.c:-221
0x00010cbe      488b542408     mov rdx, qword [rsp + 8]
0x00010cc3      b800000000     mov eax, 0
0x00010cc8      b901000000     mov ecx, 1
0x00010ccd      4c29f2         sub rdx, r14
0x00010cd0      4585d2         test r10d, r10d
0x00010cd3      410f49c2       cmovns eax, r10d
0x00010cd7      4898           cdqe
0x00010cd9      4885c0         test rax, rax
0x00010cdc      480f45c8       cmovne rcx, rax
0x00010ce0      4585db         test r11d, r11d
0x00010ce3      0f852f100000   jne 0x11d18
0x00010ce9      4839d1         cmp rcx, rdx
0x00010cec      0f831af9ffff   jae 0x1060c
0x00010cf2      4885ed         test rbp, rbp                           ; string_fortified.h:-1576
0x00010cf5      0f847dfeffff   je 0x10b78
0x00010cfb      4183fa01       cmp r10d, 1
0x00010cff      7e3d           jle 0x10d3e                             ; ../coreutils-8.31/lib/nstrftime.c:-221
0x00010d01      4963d2         movsxd rdx, r10d
0x00010d04      48894c2430     mov qword [rsp + 0x30], rcx
0x00010d09      4883ea01       sub rdx, 1
0x00010d0d      4183ff30       cmp r15d, 0x30
0x00010d11      4c8d641500     lea r12, [rbp + rdx]
0x00010d16      0f8469120000   je 0x11f85
0x00010d1c      4183ff2b       cmp r15d, 0x2b
0x00010d20      be20000000     mov esi, 0x20                           ; "@"
0x00010d25      0f845a120000   je 0x11f85
0x00010d2b      4889ef         mov rdi, rbp
0x00010d2e      4c89e5         mov rbp, r12
0x00010d31      e8ca27ffff     call sym.imp.memset
0x00010d36      0fb633         movzx esi, byte [rbx]
0x00010d39      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00010d3e      40887500       mov byte [rbp], sil
0x00010d42      4883c501       add rbp, 1
0x00010d46      e92dfeffff     jmp 0x10b78
0x00010d4b      488d056e9300.  lea rax, str.H:_M:_S                    ; 0x1a0c0 ; "%H:%M:%S"
0x00010d52      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x00010d5a      4889442440     mov qword [rsp + 0x40], rax
0x00010d5f      e94efeffff     jmp 0x10bb2
0x00010d64      4183fb45       cmp r11d, 0x45
0x00010d68      0f8422faffff   je 0x10790                              ; ../coreutils-8.31/lib/nstrftime.c:-243
0x00010d6e      418b751c       mov esi, dword [r13 + 0x1c]
0x00010d72      412b7518       sub esi, dword [r13 + 0x18]
0x00010d76      ba93244992     mov edx, 0x92492493
0x00010d7b      83c607         add esi, 7
0x00010d7e      89f0           mov eax, esi
0x00010d80      f7ea           imul edx
0x00010d82      8d0c32         lea ecx, [rdx + rsi]
0x00010d85      c1fe1f         sar esi, 0x1f
0x00010d88      bf02000000     mov edi, 2
0x00010d8d      c1f902         sar ecx, 2
0x00010d90      29f1           sub ecx, esi
0x00010d92      e909fdffff     jmp 0x10aa0
0x00010d97      4183fb45       cmp r11d, 0x45
0x00010d9b      0f84290d0000   je 0x11aca
0x00010da1      4183fb4f       cmp r11d, 0x4f
0x00010da5      0f84e5f9ffff   je 0x10790
0x00010dab      418b4514       mov eax, dword [r13 + 0x14]
0x00010daf      3d94f8ffff     cmp eax, 0xfffff894                     ; ../coreutils-8.31/lib/nstrftime.c:-828 ; 4294965396
0x00010db4      8d886c070000   lea ecx, [rax + 0x76c]
0x00010dba      0f9c442438     setl byte [rsp + 0x38]
0x00010dbf      3d94f8ffff     cmp eax, 0xfffff894                     ; 4294965396
0x00010dc4      0f9dc0         setge al
0x00010dc7      4585ff         test r15d, r15d
0x00010dca      0f85790e0000   jne 0x11c49
0x00010dd0      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x00010dd5      4183ff2b       cmp r15d, 0x2b
0x00010dd9      0f84740e0000   je 0x11c53
0x00010ddf      c644244000     mov byte [rsp + 0x40], 0
0x00010de4      bf04000000     mov edi, 4
0x00010de9      31f6           xor esi, esi
0x00010deb      e9c7fcffff     jmp 0x10ab7
0x00010df0      0fb6742430     movzx esi, byte [rsp + 0x30]
0x00010df5      488b7c2420     mov rdi, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/nstrftime.c:-165
0x00010dfa      4584c0         test r8b, r8b
0x00010dfd      b800000000     mov eax, 0
0x00010e02      4489542438     mov dword [rsp + 0x38], r10d
0x00010e07      4488442440     mov byte [rsp + 0x40], r8b
0x00010e0c      0f45f0         cmovne esi, eax
0x00010e0f      4088742430     mov byte [rsp + 0x30], sil
0x00010e14      e8e725ffff     call sym.imp.strlen
0x00010e19      4c63542438     movsxd r10, dword [rsp + 0x38]
0x00010e1e      4989c4         mov r12, rax
0x00010e21      488b542408     mov rdx, qword [rsp + 8]
0x00010e26      b800000000     mov eax, 0                              ; ../coreutils-8.31/lib/nstrftime.c:-163
0x00010e2b      4585d2         test r10d, r10d
0x00010e2e      490f49c2       cmovns rax, r10
0x00010e32      4939c4         cmp r12, rax
0x00010e35      4889c1         mov rcx, rax
0x00010e38      490f43cc       cmovae rcx, r12
0x00010e3c      4c29f2         sub rdx, r14
0x00010e3f      4839ca         cmp rdx, rcx
0x00010e42      0f86c4f7ffff   jbe 0x1060c
0x00010e48      4885ed         test rbp, rbp
0x00010e4b      0f8427fdffff   je 0x10b78
0x00010e51      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-160
0x00010e54      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00010e5a      734b           jae 0x10ea7
0x00010e5c      4963d2         movsxd rdx, r10d
0x00010e5f      48894c2448     mov qword [rsp + 0x48], rcx
0x00010e64      4488442440     mov byte [rsp + 0x40], r8b
0x00010e69      4c29e2         sub rdx, r12
0x00010e6c      4183ff30       cmp r15d, 0x30
0x00010e70      488d441500     lea rax, [rbp + rdx]
0x00010e75      4889442438     mov qword [rsp + 0x38], rax
0x00010e7a      0f84bf100000   je 0x11f3f
0x00010e80      4183ff2b       cmp r15d, 0x2b
0x00010e84      0f84b5100000   je 0x11f3f
0x00010e8a      4889ef         mov rdi, rbp
0x00010e8d      be20000000     mov esi, 0x20                           ; "@"
0x00010e92      e86926ffff     call sym.imp.memset
0x00010e97      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00010e9d      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00010ea2      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00010ea7      4584c0         test r8b, r8b
0x00010eaa      0f85f70f0000   jne 0x11ea7
0x00010eb0      807c243000     cmp byte [rsp + 0x30], 0
0x00010eb5      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-636
0x00010eb8      48894c2430     mov qword [rsp + 0x30], rcx
0x00010ebd      488b742420     mov rsi, qword [rsp + 0x20]
0x00010ec2      4889ef         mov rdi, rbp
0x00010ec5      0f84cd0f0000   je 0x11e98
0x00010ecb      e820f6ffff     call sym.memcpy_uppcase
0x00010ed0      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00010ed5      4c01e5         add rbp, r12
0x00010ed8      e99bfcffff     jmp 0x10b78                             ; ../coreutils-8.31/lib/nstrftime.c:-644
0x00010edd      4183fb45       cmp r11d, 0x45
0x00010ee1      0f84e30b0000   je 0x11aca
0x00010ee7      418b7514       mov esi, dword [r13 + 0x14]
0x00010eeb      ba1f85eb51     mov edx, 0x51eb851f
0x00010ef0      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-607
0x00010ef2      f7ea           imul edx
0x00010ef4      89f0           mov eax, esi
0x00010ef6      c1f81f         sar eax, 0x1f
0x00010ef9      89d1           mov ecx, edx
0x00010efb      c1f905         sar ecx, 5
0x00010efe      29c1           sub ecx, eax                            ; ../coreutils-8.31/lib/nstrftime.c:-606
0x00010f00      89f0           mov eax, esi
0x00010f02      6bc964         imul ecx, ecx, 0x64
0x00010f05      29c8           sub eax, ecx
0x00010f07      89c1           mov ecx, eax
0x00010f09      790e           jns 0x10f19                             ; ../coreutils-8.31/lib/nstrftime.c:-604
0x00010f0b      f7d8           neg eax                                 ; ../coreutils-8.31/lib/nstrftime.c:-605
0x00010f0d      83c164         add ecx, 0x64                           ; ../coreutils-8.31/lib/nstrftime.c:-604
0x00010f10      81fe93f8ffff   cmp esi, 0xfffff893                     ; 4294965395
0x00010f16      0f4ec8         cmovle ecx, eax
0x00010f19      4585ff         test r15d, r15d
0x00010f1c      0f8428060000   je 0x1154a
0x00010f22      b801000000     mov eax, 1
0x00010f27      c644243800     mov byte [rsp + 0x38], 0
0x00010f2c      4183ff2b       cmp r15d, 0x2b
0x00010f30      0f846d070000   je 0x116a3
0x00010f36      c644244000     mov byte [rsp + 0x40], 0
0x00010f3b      bf02000000     mov edi, 2
0x00010f40      31f6           xor esi, esi
0x00010f42      e970fbffff     jmp 0x10ab7                             ; ../coreutils-8.31/lib/nstrftime.c:-595
0x00010f47      0fb6442430     movzx eax, byte [rsp + 0x30]
0x00010f4c      4584c0         test r8b, r8b
0x00010f4f      410f45c0       cmovne eax, r8d
0x00010f53      4183fb45       cmp r11d, 0x45
0x00010f57      0f84690f0000   je 0x11ec6
0x00010f5d      4489ce         mov esi, r9d
0x00010f60      88442430       mov byte [rsp + 0x30], al
0x00010f64      4531c0         xor r8d, r8d
0x00010f67      e999f9ffff     jmp 0x10905
0x00010f6c      4531c0         xor r8d, r8d
0x00010f6f      418b4d20       mov ecx, dword [r13 + 0x20]
0x00010f73      85c9           test ecx, ecx
0x00010f75      0f88a30c0000   js 0x11c1e
0x00010f7b      498b4d28       mov rcx, qword [r13 + 0x28]
0x00010f7f      c644243801     mov byte [rsp + 0x38], 1                ; ../coreutils-8.31/lib/nstrftime.c:-579
0x00010f84      85c9           test ecx, ecx
0x00010f86      7814           js 0x10f9c
0x00010f88      c644243800     mov byte [rsp + 0x38], 0
0x00010f8d      750d           jne 0x10f9c
0x00010f8f      488b442420     mov rax, qword [rsp + 0x20]
0x00010f94      80382d         cmp byte [rax], 0x2d
0x00010f97      0f94442438     sete byte [rsp + 0x38]
0x00010f9c      89c8           mov eax, ecx
0x00010f9e      bac5b3a291     mov edx, 0x91a2b3c5
0x00010fa3      be89888888     mov esi, 0x88888889
0x00010fa8      f7ea           imul edx
0x00010faa      89c8           mov eax, ecx
0x00010fac      c1f81f         sar eax, 0x1f
0x00010faf      89442440       mov dword [rsp + 0x40], eax
0x00010fb3      448d240a       lea r12d, [rdx + rcx]
0x00010fb7      41c1fc0b       sar r12d, 0xb
0x00010fbb      4129c4         sub r12d, eax
0x00010fbe      89c8           mov eax, ecx
0x00010fc0      f7ee           imul esi                                ; ../coreutils-8.31/lib/nstrftime.c:-561
0x00010fc2      8d3c0a         lea edi, [rdx + rcx]
0x00010fc5      c1ff05         sar edi, 5
0x00010fc8      2b7c2440       sub edi, dword [rsp + 0x40]
0x00010fcc      89f8           mov eax, edi
0x00010fce      f7ee           imul esi
0x00010fd0      89f8           mov eax, edi
0x00010fd2      c1f81f         sar eax, 0x1f
0x00010fd5      8d343a         lea esi, [rdx + rdi]
0x00010fd8      c1fe05         sar esi, 5
0x00010fdb      29c6           sub esi, eax
0x00010fdd      89f8           mov eax, edi
0x00010fdf      6bf63c         imul esi, esi, 0x3c
0x00010fe2      6bff3c         imul edi, edi, 0x3c
0x00010fe5      29f0           sub eax, esi
0x00010fe7      29f9           sub ecx, edi
0x00010fe9      4983f801       cmp r8, 1
0x00010fed      89c6           mov esi, eax
0x00010fef      0f844d0e0000   je 0x11e42
0x00010ff5      0f82250f0000   jb 0x11f20
0x00010ffb      4983f802       cmp r8, 2
0x00010fff      0f84f00d0000   je 0x11df5
0x00011005      4983f803       cmp r8, 3
0x00011009      0f85c00e0000   jne 0x11ecf
0x0001100f      85c9           test ecx, ecx
0x00011011      0f85de0d0000   jne 0x11df5
0x00011017      85c0           test eax, eax
0x00011019      0f85230e0000   jne 0x11e42
0x0001101f      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011024      4489e1         mov ecx, r12d
0x00011027      c644244001     mov byte [rsp + 0x40], 1
0x0001102c      bf03000000     mov edi, 3
0x00011031      83f001         xor eax, 1
0x00011034      e97efaffff     jmp 0x10ab7
0x00011039      0f1f80000000.  nop dword [rax]
0x00011040      4183fb4f       cmp r11d, 0x4f
0x00011044      418b4510       mov eax, dword [r13 + 0x10]
0x00011048      bf01000000     mov edi, 1
0x0001104d      0f8479faffff   je 0x10acc
0x00011053      8d1480         lea edx, [rax + rax*4]
0x00011056      c644244000     mov byte [rsp + 0x40], 0
0x0001105b      c644243800     mov byte [rsp + 0x38], 0
0x00011060      31f6           xor esi, esi
0x00011062      8d0c50         lea ecx, [rax + rdx*2]
0x00011065      c1f905         sar ecx, 5
0x00011068      83c101         add ecx, 1
0x0001106b      0f1f440000     nop dword [rax + rax]
0x00011070      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00011078      41bccdcccccc   mov r12d, 0xcccccccd
0x0001107e      4d8d5917       lea r11, [r9 + 0x17]
0x00011082      660f1f440000   nop word [rax + rax]
0x00011088      40f6c601       test sil, 1
0x0001108c      4d8d43ff       lea r8, [r11 - 1]
0x00011090      740f           je 0x110a1                              ; ../coreutils-8.31/lib/nstrftime.c:-546
0x00011092      498d43fe       lea rax, [r11 - 2]
0x00011096      41c643ff3a     mov byte [r11 - 1], 0x3a                ; ':'
                                                                       ; [0x3a:1]=64
0x0001109b      4d89c3         mov r11, r8
0x0001109e      4989c0         mov r8, rax
0x000110a1      89c8           mov eax, ecx
0x000110a3      d1fe           sar esi, 1
0x000110a5      41f7e4         mul r12d
0x000110a8      c1ea03         shr edx, 3
0x000110ab      8d0492         lea eax, [rdx + rdx*4]
0x000110ae      01c0           add eax, eax
0x000110b0      29c1           sub ecx, eax
0x000110b2      89f0           mov eax, esi
0x000110b4      83c130         add ecx, 0x30
0x000110b7      09d0           or eax, edx
0x000110b9      41884bff       mov byte [r11 - 1], cl
0x000110bd      89d1           mov ecx, edx
0x000110bf      4d89c3         mov r11, r8
0x000110c2      75c4           jne 0x11088
0x000110c4      4139fa         cmp r10d, edi
0x000110c7      410f4dfa       cmovge edi, r10d
0x000110cb      807c243800     cmp byte [rsp + 0x38], 0
0x000110d0      897c2448       mov dword [rsp + 0x48], edi
0x000110d4      0f857e080000   jne 0x11958                             ; string_fortified.h:-1576
0x000110da      807c244000     cmp byte [rsp + 0x40], 0
0x000110df      0f8494020000   je 0x11379
0x000110e5      4183ff2d       cmp r15d, 0x2d
0x000110e9      0f84240b0000   je 0x11c13
0x000110ef      c64424382b     mov byte [rsp + 0x38], 0x2b             ; '+'
                                                                       ; [0x2b:1]=0
0x000110f4      8b442448       mov eax, dword [rsp + 0x48]
0x000110f8      498d4917       lea rcx, [r9 + 0x17]
0x000110fc      488b542408     mov rdx, qword [rsp + 8]
0x00011101      4c29c1         sub rcx, r8
0x00011104      448d60ff       lea r12d, [rax - 1]
0x00011108      4c29f2         sub rdx, r14
0x0001110b      4129cc         sub r12d, ecx
0x0001110e      4585e4         test r12d, r12d
0x00011111      0f8e450a0000   jle 0x11b5c
0x00011117      4183ff5f       cmp r15d, 0x5f
0x0001111b      0f84b5090000   je 0x11ad6
0x00011121      4863442448     movsxd rax, dword [rsp + 0x48]
0x00011126      4839d0         cmp rax, rdx
0x00011129      4889c7         mov rdi, rax
0x0001112c      0f83daf4ffff   jae 0x1060c                             ; ../coreutils-8.31/lib/nstrftime.c:-412
0x00011132      4585d2         test r10d, r10d
0x00011135      b800000000     mov eax, 0
0x0001113a      be01000000     mov esi, 1
0x0001113f      410f49c2       cmovns eax, r10d
0x00011143      4898           cdqe
0x00011145      4885c0         test rax, rax
0x00011148      480f45f0       cmovne rsi, rax
0x0001114c      4839d6         cmp rsi, rdx
0x0001114f      0f83b7f4ffff   jae 0x1060c
0x00011155      4901f6         add r14, rsi
0x00011158      4885ed         test rbp, rbp
0x0001115b      4d63cc         movsxd r9, r12d
0x0001115e      4989dc         mov r12, rbx
0x00011161      0f849d000000   je 0x11204
0x00011167      85ff           test edi, edi                           ; ../coreutils-8.31/lib/nstrftime.c:-411
0x00011169      7554           jne 0x111bf
0x0001116b      4883f801       cmp rax, 1
0x0001116f      764e           jbe 0x111bf
0x00011171      4963d2         movsxd rdx, r10d
0x00011174      4c89442458     mov qword [rsp + 0x58], r8
0x00011179      4c894c2450     mov qword [rsp + 0x50], r9
0x0001117e      4883ea01       sub rdx, 1
0x00011182      4183ff30       cmp r15d, 0x30
0x00011186      48894c2440     mov qword [rsp + 0x40], rcx
0x0001118b      4c8d641500     lea r12, [rbp + rdx]
0x00011190      0f84cb0d0000   je 0x11f61
0x00011196      4183ff2b       cmp r15d, 0x2b
0x0001119a      0f84c10d0000   je 0x11f61
0x000111a0      4889ef         mov rdi, rbp
0x000111a3      be20000000     mov esi, 0x20                           ; "@"
0x000111a8      4c89e5         mov rbp, r12
0x000111ab      e85023ffff     call sym.imp.memset
0x000111b0      4c8b442458     mov r8, qword [rsp + 0x58]
0x000111b5      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x000111ba      488b4c2440     mov rcx, qword [rsp + 0x40]
0x000111bf      0fb6442438     movzx eax, byte [rsp + 0x38]
0x000111c4      4883c501       add rbp, 1
0x000111c8      4989dc         mov r12, rbx
0x000111cb      8845ff         mov byte [rbp - 1], al
0x000111ce      4885ed         test rbp, rbp
0x000111d1      7431           je 0x11204
0x000111d3      4c89ca         mov rdx, r9
0x000111d6      4889ef         mov rdi, rbp
0x000111d9      be30000000     mov esi, 0x30                           ; '0'
0x000111de      4c89442450     mov qword [rsp + 0x50], r8
0x000111e3      48894c2440     mov qword [rsp + 0x40], rcx
0x000111e8      4c894c2438     mov qword [rsp + 0x38], r9
0x000111ed      e80e23ffff     call sym.imp.memset
0x000111f2      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x000111f7      4c8b442450     mov r8, qword [rsp + 0x50]
0x000111fc      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011201      4c01cd         add rbp, r9
0x00011204      488b542408     mov rdx, qword [rsp + 8]
0x00011209      4d01ce         add r14, r9
0x0001120c      4531db         xor r11d, r11d
0x0001120f      4531d2         xor r10d, r10d
0x00011212      4c29f2         sub rdx, r14
0x00011215      4c39d9         cmp rcx, r11
0x00011218      4c89db         mov rbx, r11
0x0001121b      480f43d9       cmovae rbx, rcx
0x0001121f      4839d3         cmp rbx, rdx                            ; ../coreutils-8.31/lib/nstrftime.c:-214
0x00011222      0f83e4f3ffff   jae 0x1060c
0x00011228      4885ed         test rbp, rbp
0x0001122b      0f840df8ffff   je 0x10a3e
0x00011231      8b742448       mov esi, dword [rsp + 0x48]
0x00011235      85f6           test esi, esi                           ; ../coreutils-8.31/lib/nstrftime.c:-212
0x00011237      754f           jne 0x11288
0x00011239      4c39d9         cmp rcx, r11
0x0001123c      734a           jae 0x11288
0x0001123e      4963d2         movsxd rdx, r10d
0x00011241      4c89442448     mov qword [rsp + 0x48], r8
0x00011246      48894c2440     mov qword [rsp + 0x40], rcx
0x0001124b      4829ca         sub rdx, rcx
0x0001124e      4183ff30       cmp r15d, 0x30
0x00011252      488d441500     lea rax, [rbp + rdx]
0x00011257      4889442438     mov qword [rsp + 0x38], rax             ; ../coreutils-8.31/lib/nstrftime.c:-1261
0x0001125c      0f8438080000   je 0x11a9a                              ; ../coreutils-8.31/lib/nstrftime.c:-347
0x00011262      4183ff2b       cmp r15d, 0x2b
0x00011266      0f842e080000   je 0x11a9a
0x0001126c      4889ef         mov rdi, rbp
0x0001126f      be20000000     mov esi, 0x20                           ; "@"
0x00011274      e88722ffff     call sym.imp.memset                     ; ../coreutils-8.31/lib/nstrftime.c:-345
0x00011279      488b6c2438     mov rbp, qword [rsp + 0x38]
0x0001127e      4c8b442448     mov r8, qword [rsp + 0x48]
0x00011283      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011288      807c243000     cmp byte [rsp + 0x30], 0
0x0001128d      4889ca         mov rdx, rcx
0x00011290      48894c2430     mov qword [rsp + 0x30], rcx
0x00011295      4c89c6         mov rsi, r8
0x00011298      4889ef         mov rdi, rbp
0x0001129b      0f8590f7ffff   jne 0x10a31
0x000112a1      e84a23ffff     call sym.imp.memcpy
0x000112a6      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000112ab      e98bf7ffff     jmp 0x10a3b
0x000112b0      f3410f6f4500   movdqu xmm0, xmmword [r13]
0x000112b6      488d742470     lea rsi, [rsp + 0x70]
0x000112bb      498b4530       mov rax, qword [r13 + 0x30]
0x000112bf      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000112c4      0f29442470     movaps xmmword [rsp + 0x70], xmm0
0x000112c9      4489542438     mov dword [rsp + 0x38], r10d
0x000112ce      f3410f6f4510   movdqu xmm0, xmmword [r13 + 0x10]
0x000112d4      48898424a000.  mov qword [rsp + 0xa0], rax
0x000112dc      0f2984248000.  movaps xmmword [rsp + 0x80], xmm0
0x000112e4      f3410f6f4520   movdqu xmm0, xmmword [r13 + 0x20]
0x000112ea      0f2984249000.  movaps xmmword [rsp + 0x90], xmm0
0x000112f2      e839480000     call sym.mktime_z
0x000112f7      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x000112ff      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-334
0x00011302      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-1261
0x00011305      49bb67666666.  movabs r11, 0x6666666666666667          ; 'gfffffff'
0x0001130f      bf30000000     mov edi, 0x30                           ; '0'
0x00011314      448b542438     mov r10d, dword [rsp + 0x38]
0x00011319      4d8d4117       lea r8, [r9 + 0x17]
0x0001131d      0f1f00         nop dword [rax]
0x00011320      4889c8         mov rax, rcx
0x00011323      49f7eb         imul r11
0x00011326      4889c8         mov rax, rcx
0x00011329      48c1f83f       sar rax, 0x3f
0x0001132d      48c1fa02       sar rdx, 2
0x00011331      4829c2         sub rdx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-1260
0x00011334      4889d0         mov rax, rdx
0x00011337      488d1492       lea rdx, [rdx + rdx*4]
0x0001133b      4801d2         add rdx, rdx
0x0001133e      4829d1         sub rcx, rdx
0x00011341      4889ca         mov rdx, rcx
0x00011344      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/nstrftime.c:-346
0x00011347      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/nstrftime.c:-324
0x00011349      29d0           sub eax, edx
0x0001134b      83c230         add edx, 0x30
0x0001134e      4885f6         test rsi, rsi
0x00011351      0f48d0         cmovs edx, eax
0x00011354      4983e801       sub r8, 1
0x00011358      4885c9         test rcx, rcx
0x0001135b      418810         mov byte [r8], dl                       ; ../coreutils-8.31/lib/nstrftime.c:-320
0x0001135e      75c0           jne 0x11320
0x00011360      4585d2         test r10d, r10d
0x00011363      bf01000000     mov edi, 1
0x00011368      410f4ffa       cmovg edi, r10d
0x0001136c      4885f6         test rsi, rsi
0x0001136f      897c2448       mov dword [rsp + 0x48], edi
0x00011373      0f88df050000   js 0x11958
0x00011379      488b542408     mov rdx, qword [rsp + 8]
0x0001137e      498d4917       lea rcx, [r9 + 0x17]
0x00011382      4c29c1         sub rcx, r8
0x00011385      4c29f2         sub rdx, r14
0x00011388      4183ff2d       cmp r15d, 0x2d
0x0001138c      7411           je 0x1139f
0x0001138e      448b642448     mov r12d, dword [rsp + 0x48]
0x00011393      4129cc         sub r12d, ecx
0x00011396      4585e4         test r12d, r12d
0x00011399      0f8f8a090000   jg 0x11d29
0x0001139f      4585d2         test r10d, r10d
0x000113a2      41bb00000000   mov r11d, 0
0x000113a8      4989dc         mov r12, rbx
0x000113ab      450f49da       cmovns r11d, r10d
0x000113af      4d63db         movsxd r11, r11d
0x000113b2      e95efeffff     jmp 0x11215                             ; ../coreutils-8.31/lib/nstrftime.c:-661
0x000113b7      0fb64301       movzx eax, byte [rbx + 1]
0x000113bb      488d5301       lea rdx, [rbx + 1]
0x000113bf      3c3a           cmp al, 0x3a
0x000113c1      0f84130b0000   je 0x11eda
0x000113c7      41b801000000   mov r8d, 1
0x000113cd      3c7a           cmp al, 0x7a
0x000113cf      0f85bbf3ffff   jne 0x10790
0x000113d5      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/nstrftime.c:-644
0x000113d8      e992fbffff     jmp 0x10f6f
0x000113dd      4183fb45       cmp r11d, 0x45
0x000113e1      0f84a9f3ffff   je 0x10790
0x000113e7      418b7d14       mov edi, dword [r13 + 0x14]
0x000113eb      458b451c       mov r8d, dword [r13 + 0x1c]
0x000113ef      ba93244992     mov edx, 0x92492493
0x000113f4      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/nstrftime.c:-368
0x000113f6      4489c1         mov ecx, r8d
0x000113f9      c1f81f         sar eax, 0x1f
0x000113fc      2590010000     and eax, 0x190
0x00011401      448d64079c     lea r12d, [rdi + rax - 0x64]
0x00011406      418b4518       mov eax, dword [r13 + 0x18]
0x0001140a      29c1           sub ecx, eax
0x0001140c      89442438       mov dword [rsp + 0x38], eax             ; ../coreutils-8.31/lib/nstrftime.c:-428
0x00011410      81c17e010000   add ecx, 0x17e
0x00011416      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/nstrftime.c:-425
0x00011418      f7ea           imul edx
0x0001141a      8d040a         lea eax, [rdx + rcx]
0x0001141d      89ca           mov edx, ecx
0x0001141f      c1fa1f         sar edx, 0x1f
0x00011422      c1f802         sar eax, 2
0x00011425      29d0           sub eax, edx
0x00011427      8d14c5000000.  lea edx, [rax*8]
0x0001142e      29c2           sub edx, eax
0x00011430      89d0           mov eax, edx
0x00011432      4489c2         mov edx, r8d
0x00011435      29ca           sub edx, ecx
0x00011437      8d440203       lea eax, [rdx + rax + 3]
0x0001143b      85c0           test eax, eax
0x0001143d      89442440       mov dword [rsp + 0x40], eax
0x00011441      0f8821090000   js 0x11d68
0x00011447      41f6c403       test r12b, 3
0x0001144b      b86d010000     mov eax, 0x16d
0x00011450      7545           jne 0x11497
0x00011452      b91f85eb51     mov ecx, 0x51eb851f
0x00011457      4489e0         mov eax, r12d
0x0001145a      f7e9           imul ecx
0x0001145c      4489e0         mov eax, r12d
0x0001145f      c1f81f         sar eax, 0x1f
0x00011462      89442448       mov dword [rsp + 0x48], eax
0x00011466      89d1           mov ecx, edx
0x00011468      c1fa05         sar edx, 5
0x0001146b      29c2           sub edx, eax
0x0001146d      b86e010000     mov eax, 0x16e
0x00011472      6bd264         imul edx, edx, 0x64
0x00011475      4139d4         cmp r12d, edx
0x00011478      751d           jne 0x11497
0x0001147a      c1f907         sar ecx, 7
0x0001147d      89c8           mov eax, ecx
0x0001147f      2b442448       sub eax, dword [rsp + 0x48]
0x00011483      69c090010000   imul eax, eax, 0x190
0x00011489      4139c4         cmp r12d, eax                           ; ../coreutils-8.31/lib/nstrftime.c:-986
0x0001148c      0f94c0         sete al                                 ; ../coreutils-8.31/lib/nstrftime.c:-985
0x0001148f      0fb6c0         movzx eax, al
0x00011492      056d010000     add eax, 0x16d
0x00011497      4129c0         sub r8d, eax
0x0001149a      ba93244992     mov edx, 0x92492493
0x0001149f      4489c1         mov ecx, r8d
0x000114a2      2b4c2438       sub ecx, dword [rsp + 0x38]
0x000114a6      81c17e010000   add ecx, 0x17e
0x000114ac      89c8           mov eax, ecx
0x000114ae      4129c8         sub r8d, ecx
0x000114b1      f7ea           imul edx
0x000114b3      8d040a         lea eax, [rdx + rcx]                    ; ../coreutils-8.31/lib/nstrftime.c:-942
0x000114b6      89ca           mov edx, ecx
0x000114b8      c1fa1f         sar edx, 0x1f
0x000114bb      c1f802         sar eax, 2
0x000114be      29d0           sub eax, edx
0x000114c0      8d14c5000000.  lea edx, [rax*8]
0x000114c7      29c2           sub edx, eax
0x000114c9      418d4c1003     lea ecx, [r8 + rdx + 3]
0x000114ce      41b801000000   mov r8d, 1
0x000114d4      85c9           test ecx, ecx
0x000114d6      7907           jns 0x114df                             ; ../coreutils-8.31/lib/nstrftime.c:-938
0x000114d8      8b4c2440       mov ecx, dword [rsp + 0x40]
0x000114dc      4531c0         xor r8d, r8d
0x000114df      4080fe47       cmp sil, 0x47
0x000114e3      0f843d070000   je 0x11c26
0x000114e9      4080fe67       cmp sil, 0x67                           ; ../coreutils-8.31/lib/nstrftime.c:-937
0x000114ed      0f852c090000   jne 0x11e1f
0x000114f3      b91f85eb51     mov ecx, 0x51eb851f
0x000114f8      89f8           mov eax, edi
0x000114fa      89fe           mov esi, edi
0x000114fc      f7e9           imul ecx
0x000114fe      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-967
0x00011500      89fa           mov edx, edi
0x00011502      c1fa1f         sar edx, 0x1f
0x00011505      c1f805         sar eax, 5
0x00011508      29d0           sub eax, edx
0x0001150a      6bc064         imul eax, eax, 0x64
0x0001150d      29c6           sub esi, eax
0x0001150f      4401c6         add esi, r8d
0x00011512      89f0           mov eax, esi
0x00011514      f7e9           imul ecx
0x00011516      89f0           mov eax, esi
0x00011518      c1f81f         sar eax, 0x1f                           ; ../coreutils-8.31/lib/nstrftime.c:-1093
0x0001151b      89d1           mov ecx, edx
0x0001151d      c1f905         sar ecx, 5
0x00011520      29c1           sub ecx, eax
0x00011522      6bc964         imul ecx, ecx, 0x64
0x00011525      29ce           sub esi, ecx
0x00011527      89f1           mov ecx, esi
0x00011529      0f89eaf9ffff   jns 0x10f19
0x0001152f      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x00011534      4429c0         sub eax, r8d
0x00011537      39c7           cmp edi, eax
0x00011539      0f8d9b0a0000   jge 0x11fda
0x0001153f      f7d9           neg ecx
0x00011541      4585ff         test r15d, r15d
0x00011544      0f85d8f9ffff   jne 0x10f22
0x0001154a      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x0001154f      b801000000     mov eax, 1
0x00011554      4183ff2b       cmp r15d, 0x2b
0x00011558      0f845c0a0000   je 0x11fba
0x0001155e      c644244000     mov byte [rsp + 0x40], 0
0x00011563      c644243800     mov byte [rsp + 0x38], 0
0x00011568      bf02000000     mov edi, 2
0x0001156d      31f6           xor esi, esi
0x0001156f      e943f5ffff     jmp 0x10ab7
0x00011574      4183fb45       cmp r11d, 0x45
0x00011578      0f8412f2ffff   je 0x10790
0x0001157e      418b4d0c       mov ecx, dword [r13 + 0xc]
0x00011582      bf02000000     mov edi, 2
0x00011587      e914f5ffff     jmp 0x10aa0
0x0001158c      418b4518       mov eax, dword [r13 + 0x18]
0x00011590      ba93244992     mov edx, 0x92492493
0x00011595      bf01000000     mov edi, 1
0x0001159a      8d4806         lea ecx, [rax + 6]
0x0001159d      89c8           mov eax, ecx                            ; ../coreutils-8.31/lib/nstrftime.c:-1073
0x0001159f      f7ea           imul edx
0x000115a1      8d040a         lea eax, [rdx + rcx]
0x000115a4      89ca           mov edx, ecx
0x000115a6      c1fa1f         sar edx, 0x1f
0x000115a9      c1f802         sar eax, 2
0x000115ac      29d0           sub eax, edx
0x000115ae      8d14c5000000.  lea edx, [rax*8]
0x000115b5      29c2           sub edx, eax                            ; ../coreutils-8.31/lib/nstrftime.c:-1043
0x000115b7      29d1           sub ecx, edx
0x000115b9      83c101         add ecx, 1
0x000115bc      e9dff4ffff     jmp 0x10aa0
0x000115c1      4183fb45       cmp r11d, 0x45
0x000115c5      0f84c5f1ffff   je 0x10790
0x000115cb      418b4d18       mov ecx, dword [r13 + 0x18]
0x000115cf      bf01000000     mov edi, 1
0x000115d4      e9c7f4ffff     jmp 0x10aa0
0x000115d9      4183fb45       cmp r11d, 0x45
0x000115dd      0f84adf1ffff   je 0x10790
0x000115e3      418b4518       mov eax, dword [r13 + 0x18]
0x000115e7      b993244992     mov ecx, 0x92492493
0x000115ec      8d7006         lea esi, [rax + 6]
0x000115ef      89f0           mov eax, esi
0x000115f1      f7e9           imul ecx                                ; ../coreutils-8.31/lib/nstrftime.c:-1022
0x000115f3      8d0432         lea eax, [rdx + rsi]                    ; ../coreutils-8.31/lib/nstrftime.c:-1023
0x000115f6      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1022
0x000115f8      c1fa1f         sar edx, 0x1f
0x000115fb      c1f802         sar eax, 2
0x000115fe      29d0           sub eax, edx
0x00011600      8d14c5000000.  lea edx, [rax*8]                        ; ../coreutils-8.31/lib/nstrftime.c:-1023
0x00011607      29c2           sub edx, eax
0x00011609      89d0           mov eax, edx
0x0001160b      418b551c       mov edx, dword [r13 + 0x1c]
0x0001160f      29f0           sub eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1070
0x00011611      8d741007       lea esi, [rax + rdx + 7]
0x00011615      89f0           mov eax, esi
0x00011617      f7e9           imul ecx
0x00011619      e964f7ffff     jmp 0x10d82                             ; ../coreutils-8.31/lib/nstrftime.c:-1067
0x0001161e      4183fb45       cmp r11d, 0x45
0x00011622      0f8468f1ffff   je 0x10790
0x00011628      4584c0         test r8b, r8b
0x0001162b      0f84d4f2ffff   je 0x10905
0x00011631      4488442430     mov byte [rsp + 0x30], r8b              ; ../coreutils-8.31/lib/nstrftime.c:-1055
0x00011636      e9c7f2ffff     jmp 0x10902
0x0001163b      4183fb45       cmp r11d, 0x45
0x0001163f      0f8485040000   je 0x11aca
0x00011645      418b7514       mov esi, dword [r13 + 0x14]
0x00011649      ba1f85eb51     mov edx, 0x51eb851f
0x0001164e      89f0           mov eax, esi                            ; ../coreutils-8.31/lib/nstrftime.c:-1040
0x00011650      f7ea           imul edx
0x00011652      89d0           mov eax, edx
0x00011654      89f2           mov edx, esi
0x00011656      c1fa1f         sar edx, 0x1f
0x00011659      c1f805         sar eax, 5
0x0001165c      29d0           sub eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-1198
0x0001165e      89f2           mov edx, esi
0x00011660      8d4813         lea ecx, [rax + 0x13]
0x00011663      6bc064         imul eax, eax, 0x64
0x00011666      29c2           sub edx, eax
0x00011668      89d0           mov eax, edx
0x0001166a      c1e81f         shr eax, 0x1f
0x0001166d      85c9           test ecx, ecx
0x0001166f      0f9fc2         setg dl
0x00011672      21d0           and eax, edx
0x00011674      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x0001167a      0f9c442438     setl byte [rsp + 0x38]
0x0001167f      29c1           sub ecx, eax
0x00011681      81fe94f8ffff   cmp esi, 0xfffff894                     ; 4294965396
0x00011687      0f9dc0         setge al
0x0001168a      4585ff         test r15d, r15d
0x0001168d      0f8599f8ffff   jne 0x10f2c
0x00011693      837c242c2b     cmp dword [rsp + 0x2c], 0x2b
0x00011698      448b7c242c     mov r15d, dword [rsp + 0x2c]
0x0001169d      0f8593f8ffff   jne 0x10f36
0x000116a3      bf02000000     mov edi, 2
0x000116a8      ba63000000     mov edx, 0x63                           ; 'c'
0x000116ad      39ca           cmp edx, ecx
0x000116af      c644244001     mov byte [rsp + 0x40], 1
0x000116b4      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x000116ba      0f8229f7ffff   jb 0x10de9
0x000116c0      4139fa         cmp r10d, edi
0x000116c3      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x000116c9      0f9f442440     setg byte [rsp + 0x40]
0x000116ce      31f6           xor esi, esi
0x000116d0      e9e2f3ffff     jmp 0x10ab7
0x000116d5      4585db         test r11d, r11d
0x000116d8      0f85b2f0ffff   jne 0x10790
0x000116de      488d05ed8900.  lea rax, str.m__d__y                    ; string_fortified.h:-2127 ; 0x1a0d2 ; "%m/%d/%y"
0x000116e5      c7442438ffff.  mov dword [rsp + 0x38], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000116ed      4889442440     mov qword [rsp + 0x40], rax
0x000116f2      e9bbf4ffff     jmp 0x10bb2
0x000116f7      4585db         test r11d, r11d
0x000116fa      0f8590f0ffff   jne 0x10790
0x00011700      4585ff         test r15d, r15d                         ; ../coreutils-8.31/lib/nstrftime.c:-1618
0x00011703      0f85f4070000   jne 0x11efd
0x00011709      4585d2         test r10d, r10d
0x0001170c      0f89eb070000   jns 0x11efd
0x00011712      488d05b08900.  lea rax, str.Y__m__d                    ; 0x1a0c9 ; "%Y-%m-%d"
0x00011719      c74424380400.  mov dword [rsp + 0x38], 4
0x00011721      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x00011727      4889442440     mov qword [rsp + 0x40], rax
0x0001172c      e981f4ffff     jmp 0x10bb2
0x00011731      0fb64bff       movzx ecx, byte [rbx - 1]
0x00011735      4c8d4bff       lea r9, [rbx - 1]
0x00011739      488b542408     mov rdx, qword [rsp + 8]
0x0001173e      b800000000     mov eax, 0
0x00011743      4c29f2         sub rdx, r14
0x00011746      4585d2         test r10d, r10d
0x00011749      410f49c2       cmovns eax, r10d
0x0001174d      80f925         cmp cl, 0x25
0x00011750      4898           cdqe
0x00011752      0f8533f0ffff   jne 0x1078b
0x00011758      4885c0         test rax, rax
0x0001175b      b901000000     mov ecx, 1
0x00011760      4d89cc         mov r12, r9
0x00011763      480f45c8       cmovne rcx, rax
0x00011767      41b801000000   mov r8d, 1
0x0001176d      e95ff0ffff     jmp 0x107d1
0x00011772      4183fb45       cmp r11d, 0x45
0x00011776      0f8414f0ffff   je 0x10790
0x0001177c      418b4d08       mov ecx, dword [r13 + 8]
0x00011780      bf02000000     mov edi, 2
0x00011785      e916f3ffff     jmp 0x10aa0
0x0001178a      4183fb45       cmp r11d, 0x45
0x0001178e      0f84fcefffff   je 0x10790
0x00011794      418b4d04       mov ecx, dword [r13 + 4]
0x00011798      bf02000000     mov edi, 2
0x0001179d      e9fef2ffff     jmp 0x10aa0
0x000117a2      4183fb45       cmp r11d, 0x45
0x000117a6      0f84e4efffff   je 0x10790
0x000117ac      4183faff       cmp r10d, 0xffffffff
0x000117b0      0f844b050000   je 0x11d01
0x000117b6      4183fa08       cmp r10d, 8
0x000117ba      0f8f09080000   jg 0x11fc9
0x000117c0      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x000117c7      4489d6         mov esi, r10d                           ; ../coreutils-8.31/lib/nstrftime.c:-1287
0x000117ca      bf67666666     mov edi, 0x66666667                     ; 'gfff'
0x000117cf      90             nop
0x000117d0      89c8           mov eax, ecx
0x000117d2      83c601         add esi, 1
0x000117d5      c1f91f         sar ecx, 0x1f
0x000117d8      f7ef           imul edi
0x000117da      c1fa02         sar edx, 2
0x000117dd      29ca           sub edx, ecx
0x000117df      83fe09         cmp esi, 9                              ; string_fortified.h:-2275
0x000117e2      89d1           mov ecx, edx
0x000117e4      75ea           jne 0x117d0
0x000117e6      4489d7         mov edi, r10d
0x000117e9      e9b2f2ffff     jmp 0x10aa0
0x000117ee      4183fb45       cmp r11d, 0x45
0x000117f2      0f8498efffff   je 0x10790
0x000117f8      8b4c2468       mov ecx, dword [rsp + 0x68]
0x000117fc      bf02000000     mov edi, 2
0x00011801      e99af2ffff     jmp 0x10aa0
0x00011806      4183fb45       cmp r11d, 0x45
0x0001180a      0f8480efffff   je 0x10790
0x00011810      8b4c2468       mov ecx, dword [rsp + 0x68]
0x00011814      4585ff         test r15d, r15d
0x00011817      bf02000000     mov edi, 2
0x0001181c      0f857ef2ffff   jne 0x10aa0
0x00011822      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x00011828      e973f2ffff     jmp 0x10aa0
0x0001182d      4183fb45       cmp r11d, 0x45
0x00011831      0f8459efffff   je 0x10790
0x00011837      418b4510       mov eax, dword [r13 + 0x10]
0x0001183b      c644244000     mov byte [rsp + 0x40], 0
0x00011840      bf02000000     mov edi, 2
0x00011845      83f8ff         cmp eax, 0xffffffff
0x00011848      8d4801         lea ecx, [rax + 1]
0x0001184b      0f9c442438     setl byte [rsp + 0x38]
0x00011850      83f8ff         cmp eax, 0xffffffff
0x00011853      0f9dc0         setge al
0x00011856      31f6           xor esi, esi
0x00011858      e95af2ffff     jmp 0x10ab7
0x0001185d      4585d2         test r10d, r10d
0x00011860      b900000000     mov ecx, 0
0x00011865      b801000000     mov eax, 1
0x0001186a      410f49ca       cmovns ecx, r10d
0x0001186e      4863c9         movsxd rcx, ecx
0x00011871      4885c9         test rcx, rcx
0x00011874      480f44c8       cmove rcx, rax
0x00011878      488b442408     mov rax, qword [rsp + 8]
0x0001187d      4c29f0         sub rax, r14
0x00011880      4839c8         cmp rax, rcx
0x00011883      0f8683edffff   jbe 0x1060c
0x00011889      4885ed         test rbp, rbp
0x0001188c      0f84e6f2ffff   je 0x10b78
0x00011892      4183fa01       cmp r10d, 1                             ; ../coreutils-8.31/lib/nstrftime.c:-823
0x00011896      7e3a           jle 0x118d2
0x00011898      4963d2         movsxd rdx, r10d
0x0001189b      48894c2430     mov qword [rsp + 0x30], rcx
0x000118a0      4883ea01       sub rdx, 1
0x000118a4      4183ff30       cmp r15d, 0x30
0x000118a8      4c8d641500     lea r12, [rbp + rdx]
0x000118ad      0f84cb050000   je 0x11e7e
0x000118b3      4183ff2b       cmp r15d, 0x2b
0x000118b7      0f84c1050000   je 0x11e7e
0x000118bd      4889ef         mov rdi, rbp
0x000118c0      be20000000     mov esi, 0x20                           ; "@"
0x000118c5      4c89e5         mov rbp, r12                            ; ../coreutils-8.31/lib/nstrftime.c:-1908
0x000118c8      e8331cffff     call sym.imp.memset
0x000118cd      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000118d2      c645000a       mov byte [rbp], 0xa
0x000118d6      4883c501       add rbp, 1
0x000118da      e999f2ffff     jmp 0x10b78
0x000118df      31c0           xor eax, eax
0x000118e1      e9a2f2ffff     jmp 0x10b88
0x000118e6      4183fb45       cmp r11d, 0x45
0x000118ea      0f84a0eeffff   je 0x10790
0x000118f0      418b451c       mov eax, dword [r13 + 0x1c]
0x000118f4      c644244000     mov byte [rsp + 0x40], 0
0x000118f9      bf03000000     mov edi, 3
0x000118fe      83f8ff         cmp eax, 0xffffffff
0x00011901      8d4801         lea ecx, [rax + 1]
0x00011904      0f9c442438     setl byte [rsp + 0x38]                  ; ../coreutils-8.31/lib/nstrftime.c:-1400
0x00011909      83f8ff         cmp eax, 0xffffffff
0x0001190c      0f9dc0         setge al
0x0001190f      31f6           xor esi, esi
0x00011911      e9a1f1ffff     jmp 0x10ab7
0x00011916      4183fb45       cmp r11d, 0x45
0x0001191a      0f8470eeffff   je 0x10790
0x00011920      418b4d08       mov ecx, dword [r13 + 8]
0x00011924      e9ebfeffff     jmp 0x11814
0x00011929      4183fb45       cmp r11d, 0x45
0x0001192d      0f845deeffff   je 0x10790
0x00011933      418b4d0c       mov ecx, dword [r13 + 0xc]
0x00011937      e9d8feffff     jmp 0x11814
0x0001193c      0f1f4000       nop dword [rax]
0x00011940      89c8           mov eax, ecx
0x00011942      f7d8           neg eax
0x00011944      807c243800     cmp byte [rsp + 0x38], 0
0x00011949      0f45c8         cmovne ecx, eax
0x0001194c      e91ff7ffff     jmp 0x11070
0x00011951      0f1f80000000.  nop dword [rax]
0x00011958      4183ff2d       cmp r15d, 0x2d
0x0001195c      c64424382d     mov byte [rsp + 0x38], 0x2d             ; '-'
                                                                       ; [0x2d:1]=0
0x00011961      0f858df7ffff   jne 0x110f4
0x00011967      4585d2         test r10d, r10d
0x0001196a      41bb00000000   mov r11d, 0
0x00011970      488b442408     mov rax, qword [rsp + 8]
0x00011975      450f49da       cmovns r11d, r10d
0x00011979      41bc01000000   mov r12d, 1
0x0001197f      4d63db         movsxd r11, r11d
0x00011982      4d85db         test r11, r11                           ; ../coreutils-8.31/lib/nstrftime.c:-1377
0x00011985      4d0f45e3       cmovne r12, r11
0x00011989      4c29f0         sub rax, r14
0x0001198c      4c39e0         cmp rax, r12
0x0001198f      0f8677ecffff   jbe 0x1060c
0x00011995      4885ed         test rbp, rbp
0x00011998      7462           je 0x119fc
0x0001199a      8b442448       mov eax, dword [rsp + 0x48]
0x0001199e      85c0           test eax, eax
0x000119a0      7552           jne 0x119f4
0x000119a2      4983fb01       cmp r11, 1
0x000119a6      764c           jbe 0x119f4
0x000119a8      4963c2         movsxd rax, r10d
0x000119ab      4889ef         mov rdi, rbp
0x000119ae      be20000000     mov esi, 0x20                           ; "@"
0x000119b3      488d48ff       lea rcx, [rax - 1]
0x000119b7      4c894c2460     mov qword [rsp + 0x60], r9
0x000119bc      4c89442458     mov qword [rsp + 0x58], r8
0x000119c1      4c895c2450     mov qword [rsp + 0x50], r11
0x000119c6      4489542440     mov dword [rsp + 0x40], r10d
0x000119cb      4889ca         mov rdx, rcx
0x000119ce      48894c2438     mov qword [rsp + 0x38], rcx
0x000119d3      e8281bffff     call sym.imp.memset
0x000119d8      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000119dd      4c8b4c2460     mov r9, qword [rsp + 0x60]
0x000119e2      4c8b442458     mov r8, qword [rsp + 0x58]
0x000119e7      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x000119ec      448b542440     mov r10d, dword [rsp + 0x40]
0x000119f1      4801cd         add rbp, rcx
0x000119f4      44887d00       mov byte [rbp], r15b
0x000119f8      4883c501       add rbp, 1
0x000119fc      488b542408     mov rdx, qword [rsp + 8]
0x00011a01      498d4917       lea rcx, [r9 + 0x17]
0x00011a05      4d01e6         add r14, r12
0x00011a08      41bf2d000000   mov r15d, 0x2d                          ; '-'
0x00011a0e      4989dc         mov r12, rbx                            ; ../coreutils-8.31/lib/nstrftime.c:-1422
0x00011a11      4c29c1         sub rcx, r8
0x00011a14      4c29f2         sub rdx, r14
0x00011a17      e9f9f7ffff     jmp 0x11215
0x00011a1c      0f1f4000       nop dword [rax]
0x00011a20      e8cb1bffff     call sym.imp.memcpy
0x00011a25      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00011a2a      4c8b442430     mov r8, qword [rsp + 0x30]
0x00011a2f      e92eeeffff     jmp 0x10862
0x00011a34      0f1f4000       nop dword [rax]
0x00011a38      4889ef         mov rdi, rbp
0x00011a3b      48894c2430     mov qword [rsp + 0x30], rcx             ; ../coreutils-8.31/lib/nstrftime.c:-1492
0x00011a40      e85beaffff     call sym.memcpy_lowcase
0x00011a45      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011a4a      e9ecefffff     jmp 0x10a3b
0x00011a4f      4889ef         mov rdi, rbp
0x00011a52      be30000000     mov esi, 0x30                           ; '0'
0x00011a57      e8a41affff     call sym.imp.memset
0x00011a5c      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00011a61      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00011a67      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00011a6c      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00011a71      e998efffff     jmp 0x10a0e
0x00011a76      4889ef         mov rdi, rbp                            ; string_fortified.h:-2531
0x00011a79      be30000000     mov esi, 0x30                           ; '0'
0x00011a7e      4889dd         mov rbp, rbx
0x00011a81      e87a1affff     call sym.imp.memset
0x00011a86      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00011a8b      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011a90      4c8b442448     mov r8, qword [rsp + 0x48]
0x00011a95      e99bedffff     jmp 0x10835
0x00011a9a      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/nstrftime.c:-1524
0x00011a9d      be30000000     mov esi, 0x30                           ; '0'
0x00011aa2      e8591affff     call sym.imp.memset
0x00011aa7      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00011aac      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011ab1      4c8b442448     mov r8, qword [rsp + 0x48]
0x00011ab6      e9cdf7ffff     jmp 0x11288
0x00011abb      be70000000     mov esi, 0x70                           ; 'p'
0x00011ac0      c644243000     mov byte [rsp + 0x30], 0
0x00011ac5      e93beeffff     jmp 0x10905
0x00011aca      31ff           xor edi, edi
0x00011acc      e9fbefffff     jmp 0x10acc
0x00011ad1      c644243800     mov byte [rsp + 0x38], 0
0x00011ad6      4d63fc         movsxd r15, r12d
0x00011ad9      4939d7         cmp r15, rdx
0x00011adc      0f832aebffff   jae 0x1060c
0x00011ae2      4885ed         test rbp, rbp
0x00011ae5      7431           je 0x11b18
0x00011ae7      4889ef         mov rdi, rbp
0x00011aea      4c89fa         mov rdx, r15
0x00011aed      be20000000     mov esi, 0x20                           ; "@"
0x00011af2      4489542458     mov dword [rsp + 0x58], r10d
0x00011af7      4c894c2450     mov qword [rsp + 0x50], r9
0x00011afc      4c01fd         add rbp, r15
0x00011aff      4c89442440     mov qword [rsp + 0x40], r8
0x00011b04      e8f719ffff     call sym.imp.memset
0x00011b09      448b542458     mov r10d, dword [rsp + 0x58]
0x00011b0e      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00011b13      4c8b442440     mov r8, qword [rsp + 0x40]
0x00011b18      488b542408     mov rdx, qword [rsp + 8]
0x00011b1d      4489d0         mov eax, r10d
0x00011b20      4d01fe         add r14, r15
0x00011b23      4429e0         sub eax, r12d
0x00011b26      4539e2         cmp r10d, r12d
0x00011b29      41ba00000000   mov r10d, 0
0x00011b2f      440f4fd0       cmovg r10d, eax
0x00011b33      4c29f2         sub rdx, r14
0x00011b36      807c243800     cmp byte [rsp + 0x38], 0
0x00011b3b      0f8521010000   jne 0x11c62
0x00011b41      4983c117       add r9, 0x17
0x00011b45      4d63da         movsxd r11, r10d
0x00011b48      4989dc         mov r12, rbx
0x00011b4b      4c89c9         mov rcx, r9
0x00011b4e      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x00011b54      4c29c1         sub rcx, r8
0x00011b57      e9b9f6ffff     jmp 0x11215
0x00011b5c      4585d2         test r10d, r10d
0x00011b5f      41bb00000000   mov r11d, 0
0x00011b65      41bc01000000   mov r12d, 1
0x00011b6b      450f49da       cmovns r11d, r10d
0x00011b6f      4d63db         movsxd r11, r11d
0x00011b72      4d85db         test r11, r11
0x00011b75      4d0f45e3       cmovne r12, r11
0x00011b79      4939d4         cmp r12, rdx
0x00011b7c      0f838aeaffff   jae 0x1060c
0x00011b82      4885ed         test rbp, rbp
0x00011b85      7479           je 0x11c00
0x00011b87      8b7c2448       mov edi, dword [rsp + 0x48]
0x00011b8b      85ff           test edi, edi
0x00011b8d      7565           jne 0x11bf4
0x00011b8f      4983fb01       cmp r11, 1
0x00011b93      765f           jbe 0x11bf4
0x00011b95      4963d2         movsxd rdx, r10d
0x00011b98      448954246c     mov dword [rsp + 0x6c], r10d
0x00011b9d      4c89442460     mov qword [rsp + 0x60], r8
0x00011ba2      4883ea01       sub rdx, 1
0x00011ba6      4183ff30       cmp r15d, 0x30
0x00011baa      48894c2458     mov qword [rsp + 0x58], rcx             ; ../coreutils-8.31/lib/nstrftime.c:-2343
0x00011baf      488d441500     lea rax, [rbp + rdx]                    ; ../coreutils-8.31/lib/nstrftime.c:-1423
0x00011bb4      4c895c2450     mov qword [rsp + 0x50], r11
0x00011bb9      4889442440     mov qword [rsp + 0x40], rax
0x00011bbe      0f84cb030000   je 0x11f8f
0x00011bc4      4183ff2b       cmp r15d, 0x2b
0x00011bc8      0f84c1030000   je 0x11f8f
0x00011bce      4889ef         mov rdi, rbp
0x00011bd1      be20000000     mov esi, 0x20                           ; "@"
0x00011bd6      e82519ffff     call sym.imp.memset
0x00011bdb      488b6c2440     mov rbp, qword [rsp + 0x40]
0x00011be0      448b54246c     mov r10d, dword [rsp + 0x6c]
0x00011be5      4c8b442460     mov r8, qword [rsp + 0x60]
0x00011bea      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00011bef      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x00011bf4      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011bf9      4883c501       add rbp, 1
0x00011bfd      8845ff         mov byte [rbp - 1], al
0x00011c00      488b542408     mov rdx, qword [rsp + 8]
0x00011c05      4d01e6         add r14, r12
0x00011c08      4989dc         mov r12, rbx
0x00011c0b      4c29f2         sub rdx, r14
0x00011c0e      e902f6ffff     jmp 0x11215
0x00011c13      41bf2b000000   mov r15d, 0x2b                          ; '+'
0x00011c19      e949fdffff     jmp 0x11967
0x00011c1e      4989dc         mov r12, rbx
0x00011c21      e94ceaffff     jmp 0x10672
0x00011c26      b894f8ffff     mov eax, 0xfffff894                     ; 4294965396
0x00011c2b      428d8c076c07.  lea ecx, [rdi + r8 + 0x76c]
0x00011c33      4429c0         sub eax, r8d
0x00011c36      39c7           cmp edi, eax
0x00011c38      0f9c442438     setl byte [rsp + 0x38]
0x00011c3d      0f9dc0         setge al
0x00011c40      4585ff         test r15d, r15d
0x00011c43      0f8487f1ffff   je 0x10dd0
0x00011c49      4183ff2b       cmp r15d, 0x2b
0x00011c4d      0f858cf1ffff   jne 0x10ddf
0x00011c53      bf04000000     mov edi, 4
0x00011c58      ba0f270000     mov edx, 0x270f
0x00011c5d      e94bfaffff     jmp 0x116ad                             ; string_fortified.h:-2696
0x00011c62      4d63fa         movsxd r15, r10d
0x00011c65      41bc01000000   mov r12d, 1
0x00011c6b      4d85ff         test r15, r15
0x00011c6e      4d0f45e7       cmovne r12, r15
0x00011c72      4939d4         cmp r12, rdx
0x00011c75      0f8391e9ffff   jae 0x1060c
0x00011c7b      4885ed         test rbp, rbp
0x00011c7e      745b           je 0x11cdb
0x00011c80      448b5c2448     mov r11d, dword [rsp + 0x48]
0x00011c85      4585db         test r11d, r11d
0x00011c88      7545           jne 0x11ccf
0x00011c8a      4983ff01       cmp r15, 1
0x00011c8e      763f           jbe 0x11ccf
0x00011c90      498d4fff       lea rcx, [r15 - 1]
0x00011c94      4889ef         mov rdi, rbp
0x00011c97      be20000000     mov esi, 0x20                           ; "@"
0x00011c9c      4489542460     mov dword [rsp + 0x60], r10d
0x00011ca1      4c894c2458     mov qword [rsp + 0x58], r9
0x00011ca6      4889ca         mov rdx, rcx
0x00011ca9      4c89442450     mov qword [rsp + 0x50], r8
0x00011cae      48894c2440     mov qword [rsp + 0x40], rcx
0x00011cb3      e84818ffff     call sym.imp.memset
0x00011cb8      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011cbd      448b542460     mov r10d, dword [rsp + 0x60]
0x00011cc2      4c8b4c2458     mov r9, qword [rsp + 0x58]
0x00011cc7      4c8b442450     mov r8, qword [rsp + 0x50]
0x00011ccc      4801cd         add rbp, rcx                            ; ../coreutils-8.31/lib/nstrftime.c:-1880
0x00011ccf      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011cd4      4883c501       add rbp, 1
0x00011cd8      8845ff         mov byte [rbp - 1], al
0x00011cdb      488b542408     mov rdx, qword [rsp + 8]
0x00011ce0      4983c117       add r9, 0x17
0x00011ce4      4d01e6         add r14, r12
0x00011ce7      4c89c9         mov rcx, r9
0x00011cea      4d89fb         mov r11, r15
0x00011ced      4989dc         mov r12, rbx
0x00011cf0      4c29c1         sub rcx, r8
0x00011cf3      41bf5f000000   mov r15d, 0x5f                          ; '_'
0x00011cf9      4c29f2         sub rdx, r14
0x00011cfc      e914f5ffff     jmp 0x11215
0x00011d01      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x00011d08      bf09000000     mov edi, 9
0x00011d0d      41ba09000000   mov r10d, 9
0x00011d13      e988edffff     jmp 0x10aa0
0x00011d18      4989dc         mov r12, rbx
0x00011d1b      4989d9         mov r9, rbx
0x00011d1e      41b801000000   mov r8d, 1
0x00011d24      e9a8eaffff     jmp 0x107d1
0x00011d29      4183ff5f       cmp r15d, 0x5f
0x00011d2d      0f849efdffff   je 0x11ad1
0x00011d33      4863442448     movsxd rax, dword [rsp + 0x48]
0x00011d38      4839d0         cmp rax, rdx
0x00011d3b      0f83cbe8ffff   jae 0x1060c
0x00011d41      4d63cc         movsxd r9, r12d
0x00011d44      4989dc         mov r12, rbx
0x00011d47      e982f4ffff     jmp 0x111ce
0x00011d4c      4889ef         mov rdi, rbp
0x00011d4f      be30000000     mov esi, 0x30                           ; '0'
0x00011d54      e8a717ffff     call sym.imp.memset
0x00011d59      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00011d5e      4c8b5c2458     mov r11, qword [rsp + 0x58]
0x00011d63      e90eefffff     jmp 0x10c76
0x00011d68      4183ec01       sub r12d, 1
0x00011d6c      ba6d010000     mov edx, 0x16d
0x00011d71      41f6c403       test r12b, 3
0x00011d75      753c           jne 0x11db3
0x00011d77      4489e0         mov eax, r12d
0x00011d7a      ba1f85eb51     mov edx, 0x51eb851f
0x00011d7f      f7ea           imul edx
0x00011d81      89d0           mov eax, edx
0x00011d83      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/nstrftime.c:-1876
0x00011d86      c1fa1f         sar edx, 0x1f
0x00011d89      c1f805         sar eax, 5
0x00011d8c      29d0           sub eax, edx
0x00011d8e      ba6e010000     mov edx, 0x16e
0x00011d93      6bc064         imul eax, eax, 0x64
0x00011d96      4139c4         cmp r12d, eax
0x00011d99      7518           jne 0x11db3
0x00011d9b      4489e0         mov eax, r12d
0x00011d9e      b990010000     mov ecx, 0x190
0x00011da3      99             cdq
0x00011da4      f7f9           idiv ecx
0x00011da6      83fa01         cmp edx, 1                              ; ../coreutils-8.31/lib/nstrftime.c:-2424
0x00011da9      19d2           sbb edx, edx
0x00011dab      f7d2           not edx
0x00011dad      81c26e010000   add edx, 0x16e
0x00011db3      4101d0         add r8d, edx
0x00011db6      ba93244992     mov edx, 0x92492493
0x00011dbb      4489c1         mov ecx, r8d
0x00011dbe      2b4c2438       sub ecx, dword [rsp + 0x38]
0x00011dc2      81c17e010000   add ecx, 0x17e
0x00011dc8      89c8           mov eax, ecx
0x00011dca      4129c8         sub r8d, ecx
0x00011dcd      f7ea           imul edx
0x00011dcf      8d040a         lea eax, [rdx + rcx]
0x00011dd2      89ca           mov edx, ecx
0x00011dd4      c1fa1f         sar edx, 0x1f
0x00011dd7      c1f802         sar eax, 2
0x00011dda      29d0           sub eax, edx                            ; ../coreutils-8.31/lib/nstrftime.c:-2420
0x00011ddc      8d14c5000000.  lea edx, [rax*8]
0x00011de3      29c2           sub edx, eax
0x00011de5      418d4c1003     lea ecx, [r8 + rdx + 3]
0x00011dea      41b8ffffffff   mov r8d, 0xffffffff                     ; -1
0x00011df0      e9eaf6ffff     jmp 0x114df
0x00011df5      6bf664         imul esi, esi, 0x64
0x00011df8      c644244001     mov byte [rsp + 0x40], 1
0x00011dfd      bf09000000     mov edi, 9
0x00011e02      4169c4102700.  imul eax, r12d, 0x2710
0x00011e09      01f0           add eax, esi
0x00011e0b      be14000000     mov esi, 0x14
0x00011e10      01c1           add ecx, eax
0x00011e12      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011e17      83f001         xor eax, 1
0x00011e1a      e998ecffff     jmp 0x10ab7
0x00011e1f      89c8           mov eax, ecx
0x00011e21      ba93244992     mov edx, 0x92492493
0x00011e26      bf02000000     mov edi, 2
0x00011e2b      f7ea           imul edx
0x00011e2d      8d040a         lea eax, [rdx + rcx]
0x00011e30      c1f91f         sar ecx, 0x1f
0x00011e33      c1f802         sar eax, 2
0x00011e36      29c8           sub eax, ecx
0x00011e38      89c1           mov ecx, eax
0x00011e3a      83c101         add ecx, 1
0x00011e3d      e95eecffff     jmp 0x10aa0
0x00011e42      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011e47      c644244001     mov byte [rsp + 0x40], 1
0x00011e4c      bf06000000     mov edi, 6
0x00011e51      416bcc64       imul ecx, r12d, 0x64
0x00011e55      83f001         xor eax, 1
0x00011e58      01f1           add ecx, esi
0x00011e5a      be04000000     mov esi, 4
0x00011e5f      e953ecffff     jmp 0x10ab7
0x00011e64      4889ef         mov rdi, rbp
0x00011e67      be30000000     mov esi, 0x30                           ; '0'
0x00011e6c      4c89e5         mov rbp, r12
0x00011e6f      e88c16ffff     call sym.imp.memset
0x00011e74      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011e79      e9eeecffff     jmp 0x10b6c
0x00011e7e      4889ef         mov rdi, rbp
0x00011e81      be30000000     mov esi, 0x30                           ; '0'
0x00011e86      4c89e5         mov rbp, r12
0x00011e89      e87216ffff     call sym.imp.memset
0x00011e8e      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011e93      e93afaffff     jmp 0x118d2
0x00011e98      e85317ffff     call sym.imp.memcpy
0x00011e9d      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011ea2      e92ef0ffff     jmp 0x10ed5
0x00011ea7      488b742420     mov rsi, qword [rsp + 0x20]
0x00011eac      4c89e2         mov rdx, r12
0x00011eaf      4889ef         mov rdi, rbp
0x00011eb2      48894c2430     mov qword [rsp + 0x30], rcx
0x00011eb7      e8e4e5ffff     call sym.memcpy_lowcase
0x00011ebc      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00011ec1      e90ff0ffff     jmp 0x10ed5
0x00011ec6      88442430       mov byte [rsp + 0x30], al
0x00011eca      e9c1e8ffff     jmp 0x10790
0x00011ecf      0fb60b         movzx ecx, byte [rbx]
0x00011ed2      4989d9         mov r9, rbx
0x00011ed5      e95ff8ffff     jmp 0x11739
0x00011eda      488d4b02       lea rcx, [rbx + 2]
0x00011ede      41b801000000   mov r8d, 1
0x00011ee4      4889ca         mov rdx, rcx
0x00011ee7      4883c101       add rcx, 1
0x00011eeb      0fb641ff       movzx eax, byte [rcx - 1]
0x00011eef      4983c001       add r8, 1
0x00011ef3      3c3a           cmp al, 0x3a
0x00011ef5      0f85d2f4ffff   jne 0x113cd
0x00011efb      ebe7           jmp 0x11ee4
0x00011efd      4489d6         mov esi, r10d
0x00011f00      b800000000     mov eax, 0
0x00011f05      83ee06         sub esi, 6
0x00011f08      0f49c6         cmovns eax, esi
0x00011f0b      89442438       mov dword [rsp + 0x38], eax
0x00011f0f      488d05b38100.  lea rax, str.Y__m__d                    ; 0x1a0c9 ; "%Y-%m-%d"
0x00011f16      4889442440     mov qword [rsp + 0x40], rax
0x00011f1b      e992ecffff     jmp 0x10bb2
0x00011f20      416bcc64       imul ecx, r12d, 0x64
0x00011f24      31f6           xor esi, esi
0x00011f26      c644244001     mov byte [rsp + 0x40], 1
0x00011f2b      bf05000000     mov edi, 5
0x00011f30      01c1           add ecx, eax
0x00011f32      0fb6442438     movzx eax, byte [rsp + 0x38]
0x00011f37      83f001         xor eax, 1
0x00011f3a      e978ebffff     jmp 0x10ab7
0x00011f3f      4889ef         mov rdi, rbp
0x00011f42      be30000000     mov esi, 0x30                           ; '0'
0x00011f47      e8b415ffff     call sym.imp.memset
0x00011f4c      488b6c2438     mov rbp, qword [rsp + 0x38]
0x00011f51      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00011f57      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00011f5c      e946efffff     jmp 0x10ea7
0x00011f61      4889ef         mov rdi, rbp
0x00011f64      be30000000     mov esi, 0x30                           ; '0'
0x00011f69      4c89e5         mov rbp, r12
0x00011f6c      e88f15ffff     call sym.imp.memset
0x00011f71      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00011f76      4c8b4c2450     mov r9, qword [rsp + 0x50]
0x00011f7b      4c8b442458     mov r8, qword [rsp + 0x58]
0x00011f80      e93af2ffff     jmp 0x111bf
0x00011f85      be30000000     mov esi, 0x30                           ; '0'
0x00011f8a      e99cedffff     jmp 0x10d2b
0x00011f8f      4889ef         mov rdi, rbp
0x00011f92      be30000000     mov esi, 0x30                           ; '0'
0x00011f97      e86415ffff     call sym.imp.memset
0x00011f9c      488b6c2440     mov rbp, qword [rsp + 0x40]
0x00011fa1      4c8b5c2450     mov r11, qword [rsp + 0x50]
0x00011fa6      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00011fab      4c8b442460     mov r8, qword [rsp + 0x60]
0x00011fb0      448b54246c     mov r10d, dword [rsp + 0x6c]
0x00011fb5      e93afcffff     jmp 0x11bf4
0x00011fba      c644243800     mov byte [rsp + 0x38], 0
0x00011fbf      bf02000000     mov edi, 2
0x00011fc4      e9f7f6ffff     jmp 0x116c0
0x00011fc9      8b8c24180500.  mov ecx, dword [rsp + 0x518]
0x00011fd0      e911f8ffff     jmp 0x117e6
0x00011fd5      e84614ffff     call sym.imp.__stack_chk_fail
0x00011fda      83c164         add ecx, 0x64
0x00011fdd      4585ff         test r15d, r15d
0x00011fe0      0f8464f5ffff   je 0x1154a
0x00011fe6      e937efffff     jmp 0x10f22
0x00011feb      31ff           xor edi, edi
0x00011fed      e9eaeaffff     jmp 0x10adc
0x00011ff2      0f1f4000       nop dword [rax]
0x00011ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- nstrftime:
0x00012000      4883ec18       sub rsp, 0x18
0x00012004      64488b042528.  mov rax, qword fs:[0x28]
0x0001200d      4889442408     mov qword [rsp + 8], rax
0x00012012      31c0           xor eax, eax
0x00012014      c644240700     mov byte [rsp + 7], 0
0x00012019      4151           push r9
0x0001201b      4531c9         xor r9d, r9d
0x0001201e      4150           push r8
0x00012020      4531c0         xor r8d, r8d
0x00012023      488d442417     lea rax, [rsp + 0x17]
0x00012028      50             push rax
0x00012029      6aff           push 0xffffffffffffffff
0x0001202b      e810e5ffff     call sym.__strftime_internal
0x00012030      4883c420       add rsp, 0x20
0x00012034      488b542408     mov rdx, qword [rsp + 8]
0x00012039      644833142528.  xor rdx, qword fs:[0x28]
0x00012042      7505           jne 0x12049
0x00012044      4883c418       add rsp, 0x18
0x00012048      c3             ret
0x00012049      e8d213ffff     call sym.imp.__stack_chk_fail
0x0001204e      6690           nop
;-- set_program_name:
0x00012050      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00012053      53             push rbx
0x00012054      7477           je 0x120cd                              ; ../coreutils-8.31/lib/progname.c:51
0x00012056      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0001205b      4889fb         mov rbx, rdi
0x0001205e      e83d14ffff     call sym.imp.strrchr
0x00012063      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00012066      7455           je 0x120bd
0x00012068      4c8d4001       lea r8, [rax + 1]
0x0001206c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0001206f      4829da         sub rdx, rbx
0x00012072      4883fa06       cmp rdx, 6
0x00012076      7e45           jle 0x120bd
0x00012078      488d70fa       lea rsi, [rax - 6]
0x0001207c      488d3d7d8200.  lea rdi, str..libs                      ; 0x1a300 ; "/.libs/"
0x00012083      b907000000     mov ecx, 7
0x00012088      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0001208a      0f97c2         seta dl
0x0001208d      80da00         sbb dl, 0
0x00012090      84d2           test dl, dl
0x00012092      7529           jne 0x120bd
0x00012094      488d3d6d8200.  lea rdi, [0x0001a308]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0001209b      b903000000     mov ecx, 3
0x000120a0      4c89c6         mov rsi, r8
0x000120a3      4c89c3         mov rbx, r8
0x000120a6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000120a8      0f97c2         seta dl
0x000120ab      80da00         sbb dl, 0
0x000120ae      84d2           test dl, dl
0x000120b0      750b           jne 0x120bd
0x000120b2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000120b6      48891dc3e120.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x220280:8]=0
0x000120bd      48891d3cf320.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x221400:8]=0
0x000120c4      48891dd5e120.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2202a0:8]=0
0x000120cb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000120cc      c3             ret
0x000120cd      488b0dece120.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x000120d4      488d3ded8100.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x1a2c8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000120db      ba37000000     mov edx, 0x37                           ; '7'
0x000120e0      be01000000     mov esi, 1
0x000120e5      e80617ffff     call sym.imp.fwrite
0x000120ea      e8a111ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000120ef      90             nop
;-- gettext_quote.part.1:
0x000120f0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000120f1      53             push rbx
0x000120f2      4889fd         mov rbp, rdi
0x000120f5      89f3           mov ebx, esi
0x000120f7      4883ec08       sub rsp, 8
0x000120fb      e8603c0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00012100      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00012103      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012106      80fa55         cmp dl, 0x55
0x00012109      7475           je 0x12180
0x0001210b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0001210e      7420           je 0x12130
0x00012110      488d05048200.  lea rax, str.l                          ; 0x1a31b ; u"\"`\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00012117      488d15848b00.  lea rdx, [0x0001aca2]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x0001211e      83fb09         cmp ebx, 9
0x00012121      480f45c2       cmovne rax, rdx
0x00012125      4883c408       add rsp, 8
0x00012129      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0001212a      5d             pop rbp
0x0001212b      c3             ret
0x0001212c      0f1f4000       nop dword [rax]
0x00012130      0fb65001       movzx edx, byte [rax + 1]
0x00012134      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012137      80fa42         cmp dl, 0x42
0x0001213a      75d4           jne 0x12110
0x0001213c      80780231       cmp byte [rax + 2], 0x31
0x00012140      75ce           jne 0x12110
0x00012142      80780338       cmp byte [rax + 3], 0x38
0x00012146      75c8           jne 0x12110
0x00012148      80780430       cmp byte [rax + 4], 0x30
0x0001214c      75c2           jne 0x12110
0x0001214e      80780533       cmp byte [rax + 5], 0x33
0x00012152      75bc           jne 0x12110
0x00012154      80780630       cmp byte [rax + 6], 0x30
0x00012158      75b6           jne 0x12110
0x0001215a      80780700       cmp byte [rax + 7], 0
0x0001215e      75b0           jne 0x12110
0x00012160      807d0060       cmp byte [rbp], 0x60
0x00012164      488d05a98100.  lea rax, [0x0001a314]
0x0001216b      488d15a68100.  lea rdx, [0x0001a318]
0x00012172      480f45c2       cmovne rax, rdx
0x00012176      4883c408       add rsp, 8
0x0001217a      5b             pop rbx
0x0001217b      5d             pop rbp
0x0001217c      c3             ret
0x0001217d      0f1f00         nop dword [rax]
0x00012180      0fb65001       movzx edx, byte [rax + 1]
0x00012184      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012187      80fa54         cmp dl, 0x54
0x0001218a      7584           jne 0x12110
0x0001218c      0fb65002       movzx edx, byte [rax + 2]
0x00012190      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00012193      80fa46         cmp dl, 0x46
0x00012196      0f8574ffffff   jne 0x12110
0x0001219c      8078032d       cmp byte [rax + 3], 0x2d
0x000121a0      0f856affffff   jne 0x12110
0x000121a6      80780438       cmp byte [rax + 4], 0x38
0x000121aa      0f8560ffffff   jne 0x12110
0x000121b0      80780500       cmp byte [rax + 5], 0
0x000121b4      0f8556ffffff   jne 0x12110
0x000121ba      807d0060       cmp byte [rbp], 0x60
0x000121be      488d05478100.  lea rax, [0x0001a30c]                   ; "\u2018"
0x000121c5      488d15448100.  lea rdx, [0x0001a310]                   ; "\u2019"
0x000121cc      480f45c2       cmovne rax, rdx
0x000121d0      4883c408       add rsp, 8
0x000121d4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000121d5      5d             pop rbp
0x000121d6      c3             ret
0x000121d7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000121e0      4157           push r15
0x000121e2      4156           push r14
0x000121e4      4589c7         mov r15d, r8d
0x000121e7      4155           push r13
0x000121e9      4154           push r12
0x000121eb      4989fe         mov r14, rdi
0x000121ee      55             push rbp
0x000121ef      53             push rbx
0x000121f0      4489cb         mov ebx, r9d
0x000121f3      4989f5         mov r13, rsi
0x000121f6      4889cd         mov rbp, rcx
0x000121f9      83e302         and ebx, 2
0x000121fc      4881ecb80000.  sub rsp, 0xb8
0x00012203      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0001220b      4889542410     mov qword [rsp + 0x10], rdx
0x00012210      4489442408     mov dword [rsp + 8], r8d
0x00012215      44894c2478     mov dword [rsp + 0x78], r9d
0x0001221a      4889442420     mov qword [rsp + 0x20], rax
0x0001221f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00012227      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0001222c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00012234      4889442460     mov qword [rsp + 0x60], rax
0x00012239      64488b042528.  mov rax, qword fs:[0x28]
0x00012242      48898424a800.  mov qword [rsp + 0xa8], rax
0x0001224a      31c0           xor eax, eax
0x0001224c      e89f11ffff     call sym.imp.__ctype_get_mb_cur_max
0x00012251      4183ff0a       cmp r15d, 0xa
0x00012255      4889442458     mov qword [rsp + 0x58], rax
0x0001225a      0f87af110000   ja 0x1340f
0x00012260      488d0d198100.  lea rcx, [0x0001a380]
0x00012267      4489fa         mov edx, r15d
0x0001226a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0001226e      4801c8         add rax, rcx
0x00012271      ffe0           jmp rax
0x00012273      c644240e01     mov byte [rsp + 0xe], 1
0x00012278      c644247c00     mov byte [rsp + 0x7c], 0
0x0001227d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00012280      48c744245000.  mov qword [rsp + 0x50], 0
0x00012289      c644240f01     mov byte [rsp + 0xf], 1
0x0001228e      c644240d00     mov byte [rsp + 0xd], 0
0x00012293      488d05088a00.  lea rax, [0x0001aca2]                   ; "'"
0x0001229a      48c744241801.  mov qword [rsp + 0x18], 1
0x000122a3      4531ff         xor r15d, r15d
0x000122a6      c74424080200.  mov dword [rsp + 8], 2
0x000122ae      4889442448     mov qword [rsp + 0x48], rax
0x000122b3      4531db         xor r11d, r11d
0x000122b6      4889e8         mov rax, rbp
0x000122b9      4589e0         mov r8d, r12d
0x000122bc      4c89dd         mov rbp, r11
0x000122bf      4989c3         mov r11, rax
0x000122c2      660f1f440000   nop word [rax + rax]
0x000122c8      4939eb         cmp r11, rbp
0x000122cb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000122cf      4983fbff       cmp r11, 0xffffffffffffffff
0x000122d3      750d           jne 0x122e2
0x000122d5      488b442410     mov rax, qword [rsp + 0x10]
0x000122da      803c2800       cmp byte [rax + rbp], 0
0x000122de      410f95c4       setne r12b
0x000122e2      4584e4         test r12b, r12b
0x000122e5      0f8455060000   je 0x12940
0x000122eb      837c240802     cmp dword [rsp + 8], 2
0x000122f0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000122f5      4c8d0c2f       lea r9, [rdi + rbp]
0x000122f9      0f95c0         setne al
0x000122fc      2244240d       and al, byte [rsp + 0xd]
0x00012300      4189c2         mov r10d, eax
0x00012303      0f84a7000000   je 0x123b0
0x00012309      488b442418     mov rax, qword [rsp + 0x18]
0x0001230e      4885c0         test rax, rax
0x00012311      0f8429040000   je 0x12740
0x00012317      4983fbff       cmp r11, 0xffffffffffffffff
0x0001231b      488d5c0500     lea rbx, [rbp + rax]
0x00012320      752e           jne 0x12350
0x00012322      4883f801       cmp rax, 1
0x00012326      7628           jbe 0x12350
0x00012328      4488442438     mov byte [rsp + 0x38], r8b
0x0001232d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00012332      4c894c2428     mov qword [rsp + 0x28], r9
0x00012337      e8c410ffff     call sym.imp.strlen
0x0001233c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00012342      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00012348      4989c3         mov r11, rax
0x0001234b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00012350      4c39db         cmp rbx, r11
0x00012353      4488542428     mov byte [rsp + 0x28], r10b
0x00012358      0f87b2050000   ja 0x12910
0x0001235e      488b542418     mov rdx, qword [rsp + 0x18]
0x00012363      488b742448     mov rsi, qword [rsp + 0x48]
0x00012368      4c89cf         mov rdi, r9
0x0001236b      4c895c2440     mov qword [rsp + 0x40], r11
0x00012370      4488442438     mov byte [rsp + 0x38], r8b
0x00012375      4c894c2430     mov qword [rsp + 0x30], r9
0x0001237a      e8d111ffff     call sym.imp.memcmp
0x0001237f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00012381      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00012386      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0001238c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00012391      0f8579050000   jne 0x12910
0x00012397      807c240f00     cmp byte [rsp + 0xf], 0
0x0001239c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000123a2      0f857d0f0000   jne 0x13325
0x000123a8      0f1f84000000.  nop dword [rax + rax]
0x000123b0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000123b4      80fb7e         cmp bl, 0x7e
0x000123b7      0f871b030000   ja 0x126d8
0x000123bd      488d0de87f00.  lea rcx, [0x0001a3ac]
0x000123c4      0fb6d3         movzx edx, bl
0x000123c7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000123cb      4801c8         add rax, rcx
0x000123ce      ffe0           jmp rax
0x000123d0      4531d2         xor r10d, r10d
0x000123d3      4983fb01       cmp r11, 1
0x000123d7      0f95c0         setne al
0x000123da      4983fbff       cmp r11, 0xffffffffffffffff
0x000123de      750c           jne 0x123ec
0x000123e0      488b442410     mov rax, qword [rsp + 0x10]
0x000123e5      80780100       cmp byte [rax + 1], 0
0x000123e9      0f95c0         setne al
0x000123ec      837c240802     cmp dword [rsp + 8], 2
0x000123f1      0f94c2         sete dl
0x000123f4      84c0           test al, al
0x000123f6      0f844c020000   je 0x12648
0x000123fc      4531e4         xor r12d, r12d
0x000123ff      31c0           xor eax, eax
0x00012401      0f1f80000000.  nop dword [rax]
0x00012408      807c240d01     cmp byte [rsp + 0xd], 1
0x0001240d      0f850f010000   jne 0x12522
0x00012413      84d2           test dl, dl
0x00012415      0f8507010000   jne 0x12522
0x0001241b      488b742420     mov rsi, qword [rsp + 0x20]
0x00012420      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00012423      7414           je 0x12439
0x00012425      89da           mov edx, ebx
0x00012427      c0ea05         shr dl, 5
0x0001242a      0fb6d2         movzx edx, dl
0x0001242d      8b1496         mov edx, dword [rsi + rdx*4]
0x00012430      0fa3da         bt edx, ebx
0x00012433      0f824a010000   jb 0x12583
0x00012439      4584d2         test r10b, r10b
0x0001243c      0f8541010000   jne 0x12583
0x00012442      83f001         xor eax, 1
0x00012445      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00012449      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0001244c      84c0           test al, al
0x0001244e      7420           je 0x12470                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00012450      4d39fd         cmp r13, r15
0x00012453      7605           jbe 0x1245a
0x00012455      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0001245a      498d4701       lea rax, [r15 + 1]
0x0001245e      4939c5         cmp r13, rax
0x00012461      7606           jbe 0x12469
0x00012463      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00012469      4983c702       add r15, 2
0x0001246d      4531c0         xor r8d, r8d
0x00012470      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00012473      7304           jae 0x12479                             ; ../coreutils-8.31/lib/quotearg.c:68
0x00012475      43881c3e       mov byte [r14 + r15], bl
0x00012479      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0001247e      4983c701       add r15, 1
0x00012482      b800000000     mov eax, 0
0x00012487      4584e4         test r12b, r12b
0x0001248a      0f44f8         cmove edi, eax
0x0001248d      40887c240e     mov byte [rsp + 0xe], dil
0x00012492      e931feffff     jmp 0x122c8
0x00012497      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000124a0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000124a3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000124a7      83f802         cmp eax, 2
0x000124aa      0f84b8050000   je 0x12a68
0x000124b0      83f805         cmp eax, 5
0x000124b3      0f846f050000   je 0x12a28
0x000124b9      83f802         cmp eax, 2
0x000124bc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000124c1      0f94c2         sete dl
0x000124c4      4531e4         xor r12d, r12d
0x000124c7      31c0           xor eax, eax
0x000124c9      e93affffff     jmp 0x12408
0x000124ce      6690           nop
0x000124d0      4531d2         xor r10d, r10d
0x000124d3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000124d8      0f8402050000   je 0x129e0
0x000124de      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000124e3      31d2           xor edx, edx
0x000124e5      31c0           xor eax, eax
0x000124e7      bb27000000     mov ebx, 0x27                           ; '''
0x000124ec      e917ffffff     jmp 0x12408
0x000124f1      0f1f80000000.  nop dword [rax]
0x000124f8      ba09000000     mov edx, 9
0x000124fd      bb74000000     mov ebx, 0x74                           ; 't'
0x00012502      837c240802     cmp dword [rsp + 8], 2
0x00012507      0f94c0         sete al
0x0001250a      2244240f       and al, byte [rsp + 0xf]
0x0001250e      0f854a010000   jne 0x1265e
0x00012514      807c240d00     cmp byte [rsp + 0xd], 0
0x00012519      7565           jne 0x12580
0x0001251b      89d3           mov ebx, edx
0x0001251d      4531e4         xor r12d, r12d
0x00012520      31c0           xor eax, eax
0x00012522      807c240f00     cmp byte [rsp + 0xf], 0
0x00012527      0f85eefeffff   jne 0x1241b
0x0001252d      e907ffffff     jmp 0x12439                             ; ../coreutils-8.31/lib/quotearg.c:210
0x00012532      660f1f440000   nop word [rax + rax]
0x00012538      ba08000000     mov edx, 8
0x0001253d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00012542      ebd0           jmp 0x12514
0x00012544      0f1f4000       nop dword [rax]
0x00012548      837c240802     cmp dword [rsp + 8], 2
0x0001254d      0f84cd030000   je 0x12920
0x00012553      807c240d00     cmp byte [rsp + 0xd], 0
0x00012558      0f8412020000   je 0x12770
0x0001255e      807c240f00     cmp byte [rsp + 0xf], 0
0x00012563      0f8407020000   je 0x12770
0x00012569      48837c241800   cmp qword [rsp + 0x18], 0
0x0001256f      0f85b6030000   jne 0x1292b
0x00012575      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0001257a      660f1f440000   nop word [rax + rax]
0x00012580      4531e4         xor r12d, r12d
0x00012583      837c240802     cmp dword [rsp + 8], 2
0x00012588      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0001258b      807c240f00     cmp byte [rsp + 0xf], 0
0x00012590      89d0           mov eax, edx
0x00012592      0f8550080000   jne 0x12de8
0x00012598      4489c0         mov eax, r8d
0x0001259b      83f001         xor eax, 1
0x0001259e      20d0           and al, dl
0x000125a0      742f           je 0x125d1
0x000125a2      4d39fd         cmp r13, r15
0x000125a5      7605           jbe 0x125ac
0x000125a7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000125ac      498d5701       lea rdx, [r15 + 1]
0x000125b0      4939d5         cmp r13, rdx
0x000125b3      7606           jbe 0x125bb
0x000125b5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000125bb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000125bf      4939d5         cmp r13, rdx
0x000125c2      7606           jbe 0x125ca
0x000125c4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000125ca      4983c703       add r15, 3
0x000125ce      4189c0         mov r8d, eax
0x000125d1      4d39fd         cmp r13, r15
0x000125d4      7605           jbe 0x125db
0x000125d6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000125db      4983c701       add r15, 1
0x000125df      4883c501       add rbp, 1
0x000125e3      e988feffff     jmp 0x12470
0x000125e8      0f1f84000000.  nop dword [rax + rax]
0x000125f0      807c240d00     cmp byte [rsp + 0xd], 0
0x000125f5      0f85c8010000   jne 0x127c3
0x000125fb      31d2           xor edx, edx
0x000125fd      f644247801     test byte [rsp + 0x78], 1
0x00012602      0f8413ffffff   je 0x1251b
0x00012608      4883c501       add rbp, 1
0x0001260c      e9b7fcffff     jmp 0x122c8
0x00012611      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00012618      837c240802     cmp dword [rsp + 8], 2
0x0001261d      0f94c2         sete dl
0x00012620      31c0           xor eax, eax
0x00012622      e9e1fdffff     jmp 0x12408
0x00012627      660f1f840000.  nop word [rax + rax]
0x00012630      ba07000000     mov edx, 7
0x00012635      bb61000000     mov ebx, 0x61                           ; 'a'
0x0001263a      e9d5feffff     jmp 0x12514
0x0001263f      90             nop
0x00012640      837c240802     cmp dword [rsp + 8], 2
0x00012645      0f94c2         sete dl
0x00012648      4885ed         test rbp, rbp
0x0001264b      0f85abfdffff   jne 0x123fc
0x00012651      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00012656      20d0           and al, dl
0x00012658      0f84aafdffff   je 0x12408
0x0001265e      4c89dd         mov rbp, r11
0x00012661      c74424080200.  mov dword [rsp + 8], 2
0x00012669      e9fb060000     jmp 0x12d69
0x0001266e      6690           nop
0x00012670      837c240802     cmp dword [rsp + 8], 2
0x00012675      0f94c2         sete dl
0x00012678      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0001267b      ebd4           jmp 0x12651
0x0001267d      0f1f00         nop dword [rax]
0x00012680      837c240802     cmp dword [rsp + 8], 2
0x00012685      bb20000000     mov ebx, 0x20                           ; "@"
0x0001268a      0f94c2         sete dl
0x0001268d      ebc2           jmp 0x12651
0x0001268f      90             nop
0x00012690      ba0d000000     mov edx, 0xd
0x00012695      bb72000000     mov ebx, 0x72                           ; 'r'
0x0001269a      e963feffff     jmp 0x12502
0x0001269f      90             nop
0x000126a0      ba0c000000     mov edx, 0xc
0x000126a5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000126aa      e965feffff     jmp 0x12514
0x000126af      90             nop
0x000126b0      ba0b000000     mov edx, 0xb
0x000126b5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000126ba      e955feffff     jmp 0x12514
0x000126bf      90             nop
0x000126c0      ba0a000000     mov edx, 0xa
0x000126c5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000126ca      e933feffff     jmp 0x12502
0x000126cf      90             nop
0x000126d0      4531d2         xor r10d, r10d
0x000126d3      0f1f440000     nop dword [rax + rax]
0x000126d8      48837c245801   cmp qword [rsp + 0x58], 1
0x000126de      0f85a4030000   jne 0x12a88
0x000126e4      4c895c2438     mov qword [rsp + 0x38], r11
0x000126e9      4488442430     mov byte [rsp + 0x30], r8b
0x000126ee      4488542428     mov byte [rsp + 0x28], r10b
0x000126f3      e86811ffff     call sym.imp.__ctype_b_loc
0x000126f8      488b08         mov rcx, qword [rax]
0x000126fb      0fb6d3         movzx edx, bl
0x000126fe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00012704      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0001270a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0001270f      bf01000000     mov edi, 1
0x00012714      0fb70451       movzx eax, word [rcx + rdx*2]
0x00012718      66250040       and ax, 0x4000
0x0001271c      410f95c4       setne r12b
0x00012720      0f94c0         sete al
0x00012723      2244240d       and al, byte [rsp + 0xd]
0x00012727      84c0           test al, al
0x00012729      0f8592090000   jne 0x130c1
0x0001272f      837c240802     cmp dword [rsp + 8], 2
0x00012734      0f94c2         sete dl
0x00012737      e9ccfcffff     jmp 0x12408
0x0001273c      0f1f4000       nop dword [rax]
0x00012740      410fb619       movzx ebx, byte [r9]
0x00012744      80fb7e         cmp bl, 0x7e
0x00012747      7787           ja 0x126d0
0x00012749      488d0d587e00.  lea rcx, [0x0001a5a8]
0x00012750      0fb6d3         movzx edx, bl
0x00012753      48630491       movsxd rax, dword [rcx + rdx*4]
0x00012757      4801c8         add rax, rcx
0x0001275a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0001275c      0f1f4000       nop dword [rax]
0x00012760      4531d2         xor r10d, r10d
0x00012763      807c240d00     cmp byte [rsp + 0xd], 0
0x00012768      0f85f0fdffff   jne 0x1255e
0x0001276e      6690           nop
0x00012770      ba5c000000     mov edx, 0x5c                           ; '\'
0x00012775      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0001277a      e995fdffff     jmp 0x12514
0x0001277f      90             nop
0x00012780      ba0c000000     mov edx, 0xc
0x00012785      4531d2         xor r10d, r10d
0x00012788      bb66000000     mov ebx, 0x66                           ; 'f'
0x0001278d      e982fdffff     jmp 0x12514
0x00012792      660f1f440000   nop word [rax + rax]
0x00012798      ba0a000000     mov edx, 0xa
0x0001279d      4531d2         xor r10d, r10d
0x000127a0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000127a5      e958fdffff     jmp 0x12502
0x000127aa      660f1f440000   nop word [rax + rax]
0x000127b0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000127b5      e9c6fdffff     jmp 0x12580
0x000127ba      660f1f440000   nop word [rax + rax]
0x000127c0      4531d2         xor r10d, r10d
0x000127c3      837c240802     cmp dword [rsp + 8], 2
0x000127c8      0f94c2         sete dl
0x000127cb      807c240f00     cmp byte [rsp + 0xf], 0
0x000127d0      0f85940b0000   jne 0x1336a
0x000127d6      4489c0         mov eax, r8d
0x000127d9      4c89f9         mov rcx, r15
0x000127dc      83f001         xor eax, 1
0x000127df      20d0           and al, dl
0x000127e1      742d           je 0x12810
0x000127e3      4d39fd         cmp r13, r15
0x000127e6      7605           jbe 0x127ed
0x000127e8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000127ed      498d4f01       lea rcx, [r15 + 1]
0x000127f1      4939cd         cmp r13, rcx
0x000127f4      7606           jbe 0x127fc
0x000127f6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000127fc      498d4f02       lea rcx, [r15 + 2]
0x00012800      4939cd         cmp r13, rcx
0x00012803      0f8730060000   ja 0x12e39
0x00012809      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0001280d      4189c0         mov r8d, eax
0x00012810      4939cd         cmp r13, rcx
0x00012813      7605           jbe 0x1281a
0x00012815      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0001281a      837c240802     cmp dword [rsp + 8], 2
0x0001281f      4c8d7901       lea r15, [rcx + 1]
0x00012823      0f8400060000   je 0x12e29
0x00012829      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0001282d      4c39d8         cmp rax, r11
0x00012830      7319           jae 0x1284b                             ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00012832      488b442410     mov rax, qword [rsp + 0x10]
0x00012837      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0001283c      88442428       mov byte [rsp + 0x28], al
0x00012840      83e830         sub eax, 0x30
0x00012843      3c09           cmp al, 9
0x00012845      0f862e080000   jbe 0x13079
0x0001284b      4489e0         mov eax, r12d
0x0001284e      bb30000000     mov ebx, 0x30                           ; '0'
0x00012853      4531e4         xor r12d, r12d
0x00012856      e9adfbffff     jmp 0x12408                             ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0001285b      0f1f440000     nop dword [rax + rax]
0x00012860      837c240802     cmp dword [rsp + 8], 2
0x00012865      4589d4         mov r12d, r10d
0x00012868      0f94c2         sete dl
0x0001286b      4531d2         xor r10d, r10d
0x0001286e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00012870      e993fbffff     jmp 0x12408                             ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00012875      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00012878      837c240802     cmp dword [rsp + 8], 2
0x0001287d      0f94c2         sete dl
0x00012880      4531d2         xor r10d, r10d
0x00012883      e9c0fdffff     jmp 0x12648
0x00012888      0f1f84000000.  nop dword [rax + rax]
0x00012890      837c240802     cmp dword [rsp + 8], 2
0x00012895      0f94c2         sete dl
0x00012898      4531d2         xor r10d, r10d
0x0001289b      4531e4         xor r12d, r12d
0x0001289e      e9aefdffff     jmp 0x12651
0x000128a3      0f1f440000     nop dword [rax + rax]
0x000128a8      837c240802     cmp dword [rsp + 8], 2
0x000128ad      4589d4         mov r12d, r10d
0x000128b0      bb20000000     mov ebx, 0x20                           ; "@"
0x000128b5      0f94c2         sete dl
0x000128b8      4531d2         xor r10d, r10d
0x000128bb      e991fdffff     jmp 0x12651
0x000128c0      ba0d000000     mov edx, 0xd
0x000128c5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000128c8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000128cd      e930fcffff     jmp 0x12502
0x000128d2      660f1f440000   nop word [rax + rax]
0x000128d8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000128dd      e99efcffff     jmp 0x12580
0x000128e2      660f1f440000   nop word [rax + rax]
0x000128e8      ba09000000     mov edx, 9
0x000128ed      4531d2         xor r10d, r10d
0x000128f0      bb74000000     mov ebx, 0x74                           ; 't'
0x000128f5      e908fcffff     jmp 0x12502
0x000128fa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00012900      bb62000000     mov ebx, 0x62                           ; 'b'
0x00012905      e976fcffff     jmp 0x12580
0x0001290a      660f1f440000   nop word [rax + rax]
0x00012910      4531d2         xor r10d, r10d
0x00012913      e998faffff     jmp 0x123b0
0x00012918      0f1f84000000.  nop dword [rax + rax]
0x00012920      807c240f00     cmp byte [rsp + 0xf], 0
0x00012925      0f8565090000   jne 0x13290
0x0001292b      4883c501       add rbp, 1
0x0001292f      4489c0         mov eax, r8d
0x00012932      4531e4         xor r12d, r12d
0x00012935      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0001293a      e90dfbffff     jmp 0x1244c
0x0001293f      90             nop
0x00012940      837c240802     cmp dword [rsp + 8], 2
0x00012945      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0001294a      4589c4         mov r12d, r8d
0x0001294d      4c89dd         mov rbp, r11
0x00012950      0f94c2         sete dl
0x00012953      89d8           mov eax, ebx
0x00012955      4d85ff         test r15, r15
0x00012958      0f94c1         sete cl
0x0001295b      21d0           and eax, edx
0x0001295d      20c8           and al, cl
0x0001295f      0f85610a0000   jne 0x133c6                             ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00012965      89d8           mov eax, ebx
0x00012967      83f001         xor eax, 1
0x0001296a      20c2           and dl, al
0x0001296c      0f846a090000   je 0x132dc
0x00012972      807c247c00     cmp byte [rsp + 0x7c], 0
0x00012977      0f845d090000   je 0x132da
0x0001297d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00012982      0f85f5090000   jne 0x1337d
0x00012988      4d85ed         test r13, r13
0x0001298b      0f94c0         sete al
0x0001298e      48837c245000   cmp qword [rsp + 0x50], 0
0x00012994      0f95c2         setne dl
0x00012997      20d0           and al, dl
0x00012999      0f841d0a0000   je 0x133bc
0x0001299f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000129a4      488d1df78200.  lea rbx, [0x0001aca2]                   ; "'"
0x000129ab      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000129af      c74424080200.  mov dword [rsp + 8], 2
0x000129b7      41bf01000000   mov r15d, 1
0x000129bd      48c744241801.  mov qword [rsp + 0x18], 1
0x000129c6      c644240f00     mov byte [rsp + 0xf], 0
0x000129cb      48895c2448     mov qword [rsp + 0x48], rbx
0x000129d0      8844247c       mov byte [rsp + 0x7c], al
0x000129d4      e9daf8ffff     jmp 0x122b3
0x000129d9      0f1f80000000.  nop dword [rax]
0x000129e0      807c240f00     cmp byte [rsp + 0xf], 0
0x000129e5      0f85a5080000   jne 0x13290
0x000129eb      4d85ed         test r13, r13
0x000129ee      0f84fc030000   je 0x12df0                              ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000129f4      31d2           xor edx, edx
0x000129f6      48837c245000   cmp qword [rsp + 0x50], 0
0x000129fc      0f85ee030000   jne 0x12df0                             ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00012a02      4c896c2450     mov qword [rsp + 0x50], r13
0x00012a07      4983c703       add r15, 3
0x00012a0b      31c0           xor eax, eax
0x00012a0d      448864247c     mov byte [rsp + 0x7c], r12b
0x00012a12      4531c0         xor r8d, r8d
0x00012a15      4989d5         mov r13, rdx
0x00012a18      bb27000000     mov ebx, 0x27                           ; '''
0x00012a1d      e917faffff     jmp 0x12439
0x00012a22      660f1f440000   nop word [rax + rax]
0x00012a28      f644247804     test byte [rsp + 0x78], 4
0x00012a2d      7421           je 0x12a50
0x00012a2f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00012a33      4c39d9         cmp rcx, r11
0x00012a36      7318           jae 0x12a50
0x00012a38      488b442410     mov rax, qword [rsp + 0x10]
0x00012a3d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00012a42      0f848a070000   je 0x131d2
0x00012a48      0f1f84000000.  nop dword [rax + rax]
0x00012a50      31d2           xor edx, edx
0x00012a52      4531e4         xor r12d, r12d
0x00012a55      31c0           xor eax, eax
0x00012a57      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00012a5c      e9a7f9ffff     jmp 0x12408
0x00012a61      0f1f80000000.  nop dword [rax]
0x00012a68      807c240f00     cmp byte [rsp + 0xf], 0
0x00012a6d      0f851d080000   jne 0x13290
0x00012a73      4531e4         xor r12d, r12d
0x00012a76      31c0           xor eax, eax
0x00012a78      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00012a7d      e9b7f9ffff     jmp 0x12439                             ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00012a82      660f1f440000   nop word [rax + rax]
0x00012a88      488d8424a000.  lea rax, [rsp + 0xa0]
0x00012a90      4983fbff       cmp r11, 0xffffffffffffffff
0x00012a94      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00012aa0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00012aa5      752d           jne 0x12ad4
0x00012aa7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012aac      4488442440     mov byte [rsp + 0x40], r8b
0x00012ab1      4488542438     mov byte [rsp + 0x38], r10b
0x00012ab6      4c894c2430     mov qword [rsp + 0x30], r9
0x00012abb      e84009ffff     call sym.imp.strlen
0x00012ac0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00012ac6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00012acc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00012acf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00012ad4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00012adc      31c9           xor ecx, ecx
0x00012ade      885c247e       mov byte [rsp + 0x7e], bl
0x00012ae2      448844247d     mov byte [rsp + 0x7d], r8b
0x00012ae7      4889cb         mov rbx, rcx
0x00012aea      4c898c248800.  mov qword [rsp + 0x88], r9
0x00012af2      4889442438     mov qword [rsp + 0x38], rax
0x00012af7      448854247f     mov byte [rsp + 0x7f], r10b
0x00012afc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00012b04      4c89742440     mov qword [rsp + 0x40], r14
0x00012b09      4c896c2470     mov qword [rsp + 0x70], r13
0x00012b0e      4c895c2430     mov qword [rsp + 0x30], r11
0x00012b13      488b442410     mov rax, qword [rsp + 0x10]
0x00012b18      4c8d741d00     lea r14, [rbp + rbx]
0x00012b1d      488b542430     mov rdx, qword [rsp + 0x30]
0x00012b22      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00012b27      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00012b2c      4e8d2c30       lea r13, [rax + r14]
0x00012b30      4c29f2         sub rdx, r14
0x00012b33      4c89ee         mov rsi, r13
0x00012b36      e815280000     call sym.rpl_mbrtowc
0x00012b3b      4885c0         test rax, rax
0x00012b3e      4989c7         mov r15, rax
0x00012b41      744e           je 0x12b91
0x00012b43      4883f8ff       cmp rax, 0xffffffffffffffff
0x00012b47      0f8418060000   je 0x13165
0x00012b4d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00012b51      0f849a050000   je 0x130f1
0x00012b57      837c240802     cmp dword [rsp + 8], 2
0x00012b5c      0f94c0         sete al
0x00012b5f      2244240f       and al, byte [rsp + 0xf]
0x00012b63      0f8597010000   jne 0x12d00
0x00012b69      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00012b70      e8bb0cffff     call sym.imp.iswprint
0x00012b75      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00012b7a      85c0           test eax, eax
0x00012b7c      b800000000     mov eax, 0
0x00012b81      440f44e0       cmove r12d, eax
0x00012b85      4c01fb         add rbx, r15
0x00012b88      e8930cffff     call sym.imp.mbsinit
0x00012b8d      85c0           test eax, eax
0x00012b8f      7482           je 0x12b13
0x00012b91      4489e2         mov edx, r12d
0x00012b94      4889df         mov rdi, rbx
0x00012b97      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00012b9d      83f201         xor edx, 1
0x00012ba0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00012ba5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00012bab      2254240d       and dl, byte [rsp + 0xd]
0x00012baf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00012bb7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00012bbc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00012bc1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00012bc6      4883ff01       cmp rdi, 1
0x00012bca      0f86fb050000   jbe 0x131cb
0x00012bd0      4889f9         mov rcx, rdi
0x00012bd3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00012bd5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00012bdb      4801e9         add rcx, rbp
0x00012bde      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012be3      e9b6000000     jmp 0x12c9e
0x00012be8      0f1f84000000.  nop dword [rax + rax]
0x00012bf0      837c240802     cmp dword [rsp + 8], 2
0x00012bf5      0f94c0         sete al
0x00012bf8      4584c9         test r9b, r9b
0x00012bfb      0f85af040000   jne 0x130b0
0x00012c01      4489c6         mov esi, r8d
0x00012c04      83f601         xor esi, 1
0x00012c07      4020f0         and al, sil
0x00012c0a      742f           je 0x12c3b                              ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00012c0c      4d39fd         cmp r13, r15
0x00012c0f      7605           jbe 0x12c16
0x00012c11      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00012c16      498d7701       lea rsi, [r15 + 1]
0x00012c1a      4939f5         cmp r13, rsi
0x00012c1d      7606           jbe 0x12c25                             ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00012c1f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00012c25      498d7702       lea rsi, [r15 + 2]
0x00012c29      4939f5         cmp r13, rsi
0x00012c2c      7606           jbe 0x12c34
0x00012c2e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00012c34      4983c703       add r15, 3
0x00012c38      4189c0         mov r8d, eax
0x00012c3b      4d39fd         cmp r13, r15
0x00012c3e      7605           jbe 0x12c45
0x00012c40      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00012c45      498d4701       lea rax, [r15 + 1]
0x00012c49      4939c5         cmp r13, rax
0x00012c4c      760d           jbe 0x12c5b
0x00012c4e      89d8           mov eax, ebx
0x00012c50      c0e806         shr al, 6
0x00012c53      83c030         add eax, 0x30
0x00012c56      4388443e01     mov byte [r14 + r15 + 1], al
0x00012c5b      498d4702       lea rax, [r15 + 2]
0x00012c5f      4939c5         cmp r13, rax
0x00012c62      7610           jbe 0x12c74
0x00012c64      89d8           mov eax, ebx
0x00012c66      c0e803         shr al, 3
0x00012c69      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00012c6c      83c030         add eax, 0x30
0x00012c6f      4388443e02     mov byte [r14 + r15 + 2], al
0x00012c74      83e307         and ebx, 7
0x00012c77      4883c501       add rbp, 1
0x00012c7b      4983c703       add r15, 3
0x00012c7f      83c330         add ebx, 0x30
0x00012c82      4839cd         cmp rbp, rcx
0x00012c85      0f83e5f7ffff   jae 0x12470
0x00012c8b      89d6           mov esi, edx
0x00012c8d      4d39fd         cmp r13, r15
0x00012c90      7604           jbe 0x12c96
0x00012c92      43881c3e       mov byte [r14 + r15], bl
0x00012c96      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00012c9a      4983c701       add r15, 1
0x00012c9e      84d2           test dl, dl
0x00012ca0      0f854affffff   jne 0x12bf0
0x00012ca6      89f0           mov eax, esi
0x00012ca8      83f001         xor eax, 1
0x00012cab      4421c0         and eax, r8d
0x00012cae      4584d2         test r10b, r10b
0x00012cb1      740e           je 0x12cc1
0x00012cb3      4d39fd         cmp r13, r15
0x00012cb6      7605           jbe 0x12cbd
0x00012cb8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00012cbd      4983c701       add r15, 1
0x00012cc1      4883c501       add rbp, 1
0x00012cc5      4839cd         cmp rbp, rcx
0x00012cc8      0f837ef7ffff   jae 0x1244c
0x00012cce      84c0           test al, al
0x00012cd0      0f84f8030000   je 0x130ce
0x00012cd6      4d39fd         cmp r13, r15
0x00012cd9      7605           jbe 0x12ce0
0x00012cdb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00012ce0      498d4701       lea rax, [r15 + 1]
0x00012ce4      4939c5         cmp r13, rax
0x00012ce7      7606           jbe 0x12cef
0x00012ce9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00012cef      4983c702       add r15, 2
0x00012cf3      4531d2         xor r10d, r10d
0x00012cf6      4531c0         xor r8d, r8d
0x00012cf9      eb92           jmp 0x12c8d
0x00012cfb      0f1f440000     nop dword [rax + rax]
0x00012d00      4983ff01       cmp r15, 1
0x00012d04      0f845ffeffff   je 0x12b69
0x00012d0a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00012d0f      4a8d0c3f       lea rcx, [rdi + r15]
0x00012d13      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00012d18      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00012d1c      eb0f           jmp 0x12d2d
0x00012d1e      6690           nop
0x00012d20      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00012d24      4939d0         cmp r8, rdx
0x00012d27      0f843cfeffff   je 0x12b69
0x00012d2d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00012d30      83e95b         sub ecx, 0x5b
0x00012d33      80f921         cmp cl, 0x21
0x00012d36      77e8           ja 0x12d20                              ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00012d38      be01000000     mov esi, 1
0x00012d3d      48d3e6         shl rsi, cl
0x00012d40      4889f1         mov rcx, rsi
0x00012d43      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00012d4d      4885f1         test rcx, rsi
0x00012d50      74ce           je 0x12d20
0x00012d52      4c8b742440     mov r14, qword [rsp + 0x40]
0x00012d57      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00012d5c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00012d61      c74424080200.  mov dword [rsp + 8], 2
0x00012d69      807c240d00     cmp byte [rsp + 0xd], 0
0x00012d6e      7410           je 0x12d80
0x00012d70      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00012d72      b804000000     mov eax, 4
0x00012d77      0f44442408     cmove eax, dword [rsp + 8]
0x00012d7c      89442408       mov dword [rsp + 8], eax
0x00012d80      4883ec08       sub rsp, 8
0x00012d84      4889e9         mov rcx, rbp
0x00012d87      4c89ee         mov rsi, r13
0x00012d8a      ff742468       push qword [rsp + 0x68]
0x00012d8e      ff742478       push qword [rsp + 0x78]
0x00012d92      4c89f7         mov rdi, r14
0x00012d95      6a00           push 0
0x00012d97      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00012d9f      448b442428     mov r8d, dword [rsp + 0x28]
0x00012da4      488b542430     mov rdx, qword [rsp + 0x30]
0x00012da9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00012dad      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00012db2      4883c420       add rsp, 0x20
0x00012db6      4989c7         mov r15, rax
0x00012db9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00012dc1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00012dca      4c89f8         mov rax, r15
0x00012dcd      0f8500060000   jne 0x133d3
0x00012dd3      4881c4b80000.  add rsp, 0xb8
0x00012dda      5b             pop rbx
0x00012ddb      5d             pop rbp
0x00012ddc      415c           pop r12
0x00012dde      415d           pop r13
0x00012de0      415e           pop r14
0x00012de2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00012de4      c3             ret
0x00012de5      0f1f00         nop dword [rax]
0x00012de8      4c89dd         mov rbp, r11
0x00012deb      e979ffffff     jmp 0x12d69
0x00012df0      4d39fd         cmp r13, r15
0x00012df3      7605           jbe 0x12dfa
0x00012df5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00012dfa      498d4701       lea rax, [r15 + 1]
0x00012dfe      4939c5         cmp r13, rax
0x00012e01      7606           jbe 0x12e09
0x00012e03      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00012e09      498d4702       lea rax, [r15 + 2]
0x00012e0d      4939c5         cmp r13, rax
0x00012e10      0f86ec050000   jbe 0x13402
0x00012e16      4c89ea         mov rdx, r13
0x00012e19      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00012e1f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00012e24      e9d9fbffff     jmp 0x12a02
0x00012e29      4489e0         mov eax, r12d
0x00012e2c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00012e31      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00012e34      e900f6ffff     jmp 0x12439                             ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00012e39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00012e3f      e9c5f9ffff     jmp 0x12809
0x00012e44      85db           test ebx, ebx
0x00012e46      0f8527f4ffff   jne 0x12273
0x00012e4c      c644240d01     mov byte [rsp + 0xd], 1
0x00012e51      4d85ed         test r13, r13
0x00012e54      0f8590050000   jne 0x133ea
0x00012e5a      488d05417e00.  lea rax, [0x0001aca2]                   ; "'"
0x00012e61      48c744245000.  mov qword [rsp + 0x50], 0
0x00012e6a      c644240e01     mov byte [rsp + 0xe], 1
0x00012e6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00012e74      4531e4         xor r12d, r12d
0x00012e77      c644240f00     mov byte [rsp + 0xf], 0
0x00012e7c      48c744241801.  mov qword [rsp + 0x18], 1
0x00012e85      4889442448     mov qword [rsp + 0x48], rax
0x00012e8a      41bf01000000   mov r15d, 1
0x00012e90      c74424080200.  mov dword [rsp + 8], 2
0x00012e98      e916f4ffff     jmp 0x122b3                             ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00012e9d      0f1f00         nop dword [rax]
0x00012ea0      85db           test ebx, ebx
0x00012ea2      0f85f5030000   jne 0x1329d
0x00012ea8      4d85ed         test r13, r13
0x00012eab      0f8425020000   je 0x130d6
0x00012eb1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00012eb5      c644240e01     mov byte [rsp + 0xe], 1
0x00012eba      4531e4         xor r12d, r12d
0x00012ebd      c644247c00     mov byte [rsp + 0x7c], 0
0x00012ec2      48c744245000.  mov qword [rsp + 0x50], 0
0x00012ecb      488d05497400.  lea rax, str.l                          ; 0x1a31b ; u"\"`\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00012ed2      c644240f00     mov byte [rsp + 0xf], 0
0x00012ed7      c644240d01     mov byte [rsp + 0xd], 1
0x00012edc      48c744241801.  mov qword [rsp + 0x18], 1
0x00012ee5      41bf01000000   mov r15d, 1
0x00012eeb      4889442448     mov qword [rsp + 0x48], rax
0x00012ef0      e9bef3ffff     jmp 0x122b3
0x00012ef5      488d051f7400.  lea rax, str.l                          ; 0x1a31b ; u"\"`\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00012efc      c644240e01     mov byte [rsp + 0xe], 1
0x00012f01      c644247c00     mov byte [rsp + 0x7c], 0
0x00012f06      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00012f09      48c744245000.  mov qword [rsp + 0x50], 0
0x00012f12      c644240f01     mov byte [rsp + 0xf], 1
0x00012f17      c644240d01     mov byte [rsp + 0xd], 1
0x00012f1c      48c744241801.  mov qword [rsp + 0x18], 1
0x00012f25      4531ff         xor r15d, r15d
0x00012f28      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00012f2d      c74424080500.  mov dword [rsp + 8], 5
0x00012f35      e979f3ffff     jmp 0x122b3
0x00012f3a      c644240e01     mov byte [rsp + 0xe], 1
0x00012f3f      c644247c00     mov byte [rsp + 0x7c], 0
0x00012f44      4531e4         xor r12d, r12d
0x00012f47      48c744245000.  mov qword [rsp + 0x50], 0
0x00012f50      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00012f55      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00012f58      c644240d01     mov byte [rsp + 0xd], 1
0x00012f5d      48c744241800.  mov qword [rsp + 0x18], 0
0x00012f66      48c744244800.  mov qword [rsp + 0x48], 0
0x00012f6f      e93ff3ffff     jmp 0x122b3
0x00012f74      837c24080a     cmp dword [rsp + 8], 0xa
0x00012f79      7456           je 0x12fd1
0x00012f7b      488d359b7300.  lea rsi, [0x0001a31d]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00012f82      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00012f84      ba05000000     mov edx, 5
0x00012f89      e85204ffff     call sym.imp.dcgettext
0x00012f8e      4889c1         mov rcx, rax
0x00012f91      4889442468     mov qword [rsp + 0x68], rax
0x00012f96      488d05807300.  lea rax, [0x0001a31d]                   ; "`"
0x00012f9d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00012fa0      0f8498030000   je 0x1333e
0x00012fa6      488d35f57c00.  lea rsi, [0x0001aca2]                   ; "'"
0x00012fad      31ff           xor edi, edi
0x00012faf      ba05000000     mov edx, 5
0x00012fb4      e82704ffff     call sym.imp.dcgettext
0x00012fb9      4889c1         mov rcx, rax
0x00012fbc      4889442460     mov qword [rsp + 0x60], rax
0x00012fc1      488d05da7c00.  lea rax, [0x0001aca2]                   ; "'"
0x00012fc8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00012fcb      0f8483030000   je 0x13354
0x00012fd1      4531ff         xor r15d, r15d
0x00012fd4      85db           test ebx, ebx
0x00012fd6      0f84c1010000   je 0x1319d
0x00012fdc      85db           test ebx, ebx
0x00012fde      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00012fe3      0f9544240f     setne byte [rsp + 0xf]
0x00012fe8      4531e4         xor r12d, r12d
0x00012feb      4889df         mov rdi, rbx
0x00012fee      e80d04ffff     call sym.imp.strlen
0x00012ff3      48895c2448     mov qword [rsp + 0x48], rbx
0x00012ff8      4889442418     mov qword [rsp + 0x18], rax
0x00012ffd      c644240e01     mov byte [rsp + 0xe], 1
0x00013002      c644247c00     mov byte [rsp + 0x7c], 0
0x00013007      48c744245000.  mov qword [rsp + 0x50], 0
0x00013010      c644240d01     mov byte [rsp + 0xd], 1
0x00013015      e999f2ffff     jmp 0x122b3
0x0001301a      c644240e01     mov byte [rsp + 0xe], 1
0x0001301f      c644247c00     mov byte [rsp + 0x7c], 0
0x00013024      4531e4         xor r12d, r12d
0x00013027      48c744245000.  mov qword [rsp + 0x50], 0
0x00013030      c644240f00     mov byte [rsp + 0xf], 0
0x00013035      4531ff         xor r15d, r15d
0x00013038      c644240d00     mov byte [rsp + 0xd], 0
0x0001303d      48c744241800.  mov qword [rsp + 0x18], 0
0x00013046      48c744244800.  mov qword [rsp + 0x48], 0
0x0001304f      e95ff2ffff     jmp 0x122b3
0x00013054      c644240e01     mov byte [rsp + 0xe], 1
0x00013059      c644247c00     mov byte [rsp + 0x7c], 0
0x0001305e      4531e4         xor r12d, r12d
0x00013061      48c744245000.  mov qword [rsp + 0x50], 0
0x0001306a      c644240f01     mov byte [rsp + 0xf], 1
0x0001306f      c644240d01     mov byte [rsp + 0xd], 1
0x00013074      e91af2ffff     jmp 0x12293
0x00013079      4d39fd         cmp r13, r15
0x0001307c      7605           jbe 0x13083
0x0001307e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00013083      488d4102       lea rax, [rcx + 2]
0x00013087      4939c5         cmp r13, rax
0x0001308a      7606           jbe 0x13092
0x0001308c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00013092      4489e0         mov eax, r12d
0x00013095      4c8d7903       lea r15, [rcx + 3]
0x00013099      4531e4         xor r12d, r12d
0x0001309c      bb30000000     mov ebx, 0x30                           ; '0'
0x000130a1      e962f3ffff     jmp 0x12408
0x000130a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000130b0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000130b5      4c89dd         mov rbp, r11
0x000130b8      885c240d       mov byte [rsp + 0xd], bl
0x000130bc      e9a8fcffff     jmp 0x12d69
0x000130c1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000130c6      4531e4         xor r12d, r12d
0x000130c9      e902fbffff     jmp 0x12bd0
0x000130ce      4531d2         xor r10d, r10d
0x000130d1      e9b7fbffff     jmp 0x12c8d
0x000130d6      48c744245000.  mov qword [rsp + 0x50], 0
0x000130df      c644240e01     mov byte [rsp + 0xe], 1
0x000130e4      4531e4         xor r12d, r12d
0x000130e7      c644247c00     mov byte [rsp + 0x7c], 0
0x000130ec      e9dafdffff     jmp 0x12ecb
0x000130f1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000130f6      4c89f6         mov rsi, r14
0x000130f9      4c89e9         mov rcx, r13
0x000130fc      4889d8         mov rax, rbx
0x000130ff      4889df         mov rdi, rbx
0x00013102      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00013108      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0001310d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00013115      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00013118      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0001311e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00013126      4c8b742440     mov r14, qword [rsp + 0x40]
0x0001312b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00013130      7326           jae 0x13158
0x00013132      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00013135      7510           jne 0x13147
0x00013137      eb1f           jmp 0x13158
0x00013139      0f1f80000000.  nop dword [rax]
0x00013140      41803c0100     cmp byte [r9 + rax], 0
0x00013145      740e           je 0x13155
0x00013147      4883c001       add rax, 1
0x0001314b      488d540500     lea rdx, [rbp + rax]
0x00013150      4939d3         cmp r11, rdx
0x00013153      77eb           ja 0x13140
0x00013155      4889c7         mov rdi, rax
0x00013158      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0001315d      4531e4         xor r12d, r12d
0x00013160      e961faffff     jmp 0x12bc6
0x00013165      4889df         mov rdi, rbx
0x00013168      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0001316e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00013173      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00013179      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00013181      4531e4         xor r12d, r12d
0x00013184      4c8b742440     mov r14, qword [rsp + 0x40]
0x00013189      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0001318e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00013193      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00013198      e929faffff     jmp 0x12bc6
0x0001319d      488b542468     mov rdx, qword [rsp + 0x68]
0x000131a2      0fb602         movzx eax, byte [rdx]
0x000131a5      84c0           test al, al
0x000131a7      0f842ffeffff   je 0x12fdc
0x000131ad      0f1f00         nop dword [rax]
0x000131b0      4d39fd         cmp r13, r15
0x000131b3      7604           jbe 0x131b9
0x000131b5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000131b9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000131bd      420fb6043a     movzx eax, byte [rdx + r15]
0x000131c2      84c0           test al, al
0x000131c4      75ea           jne 0x131b0
0x000131c6      e911feffff     jmp 0x12fdc
0x000131cb      89d0           mov eax, edx
0x000131cd      e955f5ffff     jmp 0x12727
0x000131d2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000131d6      80fb3e         cmp bl, 0x3e
0x000131d9      0f8771f8ffff   ja 0x12a50
0x000131df      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000131e9      480fa3d8       bt rax, rbx
0x000131ed      0f835df8ffff   jae 0x12a50
0x000131f3      807c240f00     cmp byte [rsp + 0xf], 0
0x000131f8      0f85e4010000   jne 0x133e2                             ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000131fe      4d39fd         cmp r13, r15
0x00013201      7605           jbe 0x13208
0x00013203      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00013208      498d4701       lea rax, [r15 + 1]
0x0001320c      4939c5         cmp r13, rax
0x0001320f      7606           jbe 0x13217
0x00013211      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00013217      498d4702       lea rax, [r15 + 2]
0x0001321b      4939c5         cmp r13, rax
0x0001321e      7606           jbe 0x13226
0x00013220      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00013226      498d4703       lea rax, [r15 + 3]
0x0001322a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0001322d      7606           jbe 0x13235
0x0001322f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00013235      4983c704       add r15, 4
0x00013239      31d2           xor edx, edx
0x0001323b      4531e4         xor r12d, r12d
0x0001323e      31c0           xor eax, eax
0x00013240      4889cd         mov rbp, rcx
0x00013243      e9c0f1ffff     jmp 0x12408
0x00013248      85db           test ebx, ebx
0x0001324a      0f8488010000   je 0x133d8
0x00013250      488d054b7a00.  lea rax, [0x0001aca2]                   ; "'"
0x00013257      c644240e01     mov byte [rsp + 0xe], 1
0x0001325c      c644247c00     mov byte [rsp + 0x7c], 0
0x00013261      4531e4         xor r12d, r12d
0x00013264      48c744245000.  mov qword [rsp + 0x50], 0
0x0001326d      c644240f01     mov byte [rsp + 0xf], 1
0x00013272      c644240d00     mov byte [rsp + 0xd], 0
0x00013277      48c744241801.  mov qword [rsp + 0x18], 1
0x00013280      4531ff         xor r15d, r15d
0x00013283      4889442448     mov qword [rsp + 0x48], rax
0x00013288      e926f0ffff     jmp 0x122b3
0x0001328d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00013290      4c89dd         mov rbp, r11
0x00013293      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00013298      e9ccfaffff     jmp 0x12d69
0x0001329d      488d05777000.  lea rax, str.l                          ; 0x1a31b ; u"\"`\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000132a4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000132a9      c644247c00     mov byte [rsp + 0x7c], 0
0x000132ae      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000132b1      48c744245000.  mov qword [rsp + 0x50], 0
0x000132ba      c644240f01     mov byte [rsp + 0xf], 1
0x000132bf      c644240d01     mov byte [rsp + 0xd], 1
0x000132c4      48c744241801.  mov qword [rsp + 0x18], 1
0x000132cd      4531ff         xor r15d, r15d
0x000132d0      4889442448     mov qword [rsp + 0x48], rax
0x000132d5      e9d9efffff     jmp 0x122b3
0x000132da      89d0           mov eax, edx
0x000132dc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000132e1      4885db         test rbx, rbx
0x000132e4      742c           je 0x13312
0x000132e6      84c0           test al, al
0x000132e8      7428           je 0x13312
0x000132ea      0fb60b         movzx ecx, byte [rbx]
0x000132ed      4889d8         mov rax, rbx
0x000132f0      84c9           test cl, cl
0x000132f2      741e           je 0x13312
0x000132f4      4c89fa         mov rdx, r15
0x000132f7      4c29f8         sub rax, r15
0x000132fa      4939d5         cmp r13, rdx
0x000132fd      7604           jbe 0x13303
0x000132ff      41880c16       mov byte [r14 + rdx], cl
0x00013303      4883c201       add rdx, 1
0x00013307      0fb60c10       movzx ecx, byte [rax + rdx]
0x0001330b      84c9           test cl, cl
0x0001330d      75eb           jne 0x132fa
0x0001330f      4989d7         mov r15, rdx
0x00013312      4d39fd         cmp r13, r15
0x00013315      0f869efaffff   jbe 0x12db9
0x0001331b      43c6043e00     mov byte [r14 + r15], 0
0x00013320      e994faffff     jmp 0x12db9
0x00013325      837c240802     cmp dword [rsp + 8], 2
0x0001332a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0001332f      4c89dd         mov rbp, r11
0x00013332      0f94c0         sete al
0x00013335      885c240d       mov byte [rsp + 0xd], bl
0x00013339      e92bfaffff     jmp 0x12d69
0x0001333e      8b742408       mov esi, dword [rsp + 8]
0x00013342      4889cf         mov rdi, rcx
0x00013345      e8a6edffff     call sym.gettext_quote.part.1
0x0001334a      4889442468     mov qword [rsp + 0x68], rax
0x0001334f      e952fcffff     jmp 0x12fa6
0x00013354      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00013358      4889cf         mov rdi, rcx
0x0001335b      e890edffff     call sym.gettext_quote.part.1
0x00013360      4889442460     mov qword [rsp + 0x60], rax
0x00013365      e967fcffff     jmp 0x12fd1
0x0001336a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0001336f      4c89dd         mov rbp, r11
0x00013372      89d0           mov eax, edx
0x00013374      885c240d       mov byte [rsp + 0xd], bl
0x00013378      e9ecf9ffff     jmp 0x12d69
0x0001337d      4883ec08       sub rsp, 8
0x00013381      41b805000000   mov r8d, 5
0x00013387      4c89d9         mov rcx, r11
0x0001338a      ff742468       push qword [rsp + 0x68]
0x0001338e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00013392      4c89f7         mov rdi, r14
0x00013395      ff742438       push qword [rsp + 0x38]
0x00013399      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000133a1      488b542430     mov rdx, qword [rsp + 0x30]
0x000133a6      488b742470     mov rsi, qword [rsp + 0x70]
0x000133ab      e830eeffff     call sym.quotearg_buffer_restyled
0x000133b0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000133b4      4989c7         mov r15, rax
0x000133b7      e9fdf9ffff     jmp 0x12db9
0x000133bc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000133c1      e916ffffff     jmp 0x132dc
0x000133c6      c74424080200.  mov dword [rsp + 8], 2
0x000133ce      e996f9ffff     jmp 0x12d69
0x000133d3      e84800ffff     call sym.imp.__stack_chk_fail
0x000133d8      c644240d00     mov byte [rsp + 0xd], 0
0x000133dd      e96ffaffff     jmp 0x12e51
0x000133e2      4c89dd         mov rbp, r11
0x000133e5      e996f9ffff     jmp 0x12d80
0x000133ea      c644240e01     mov byte [rsp + 0xe], 1
0x000133ef      31c0           xor eax, eax
0x000133f1      4531e4         xor r12d, r12d
0x000133f4      48c744245000.  mov qword [rsp + 0x50], 0
0x000133fd      e9a2f5ffff     jmp 0x129a4
0x00013402      4c89ea         mov rdx, r13
0x00013405      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0001340a      e9f3f5ffff     jmp 0x12a02
0x0001340f      e87cfefeff     call sym.imp.abort
0x00013414      6690           nop
0x00013416      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00013420      4157           push r15
0x00013422      4156           push r14
0x00013424      4c63ff         movsxd r15, edi
0x00013427      4155           push r13
0x00013429      4154           push r12
0x0001342b      4989d6         mov r14, rdx
0x0001342e      55             push rbp
0x0001342f      53             push rbx
0x00013430      4889cd         mov rbp, rcx
0x00013433      4883ec28       sub rsp, 0x28
0x00013437      4889742408     mov qword [rsp + 8], rsi
0x0001343c      e85ffefeff     call sym.imp.__errno_location
0x00013441      4989c5         mov r13, rax
0x00013444      8b00           mov eax, dword [rax]
0x00013446      4585ff         test r15d, r15d
0x00013449      488b1df0cd20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x220240:8]=0x220250 obj.slotvec0 ; "P\x02\""
0x00013450      89442418       mov dword [rsp + 0x18], eax
0x00013454      0f8867010000   js 0x135c1
0x0001345a      44393dd7cd20.  cmp dword [obj.nslots], r15d            ; [0x220238:4]=1
0x00013461      7f62           jg 0x134c5
0x00013463      4181ffffffff.  cmp r15d, 0x7fffffff
0x0001346a      0f8456010000   je 0x135c6
0x00013470      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00013474      488d05d5cd20.  lea rax, obj.slotvec0                   ; 0x220250
0x0001347b      4963f4         movsxd rsi, r12d
0x0001347e      48c1e604       shl rsi, 4
0x00013482      4839c3         cmp rbx, rax
0x00013485      0f8415010000   je 0x135a0
0x0001348b      4889df         mov rdi, rbx
0x0001348e      e85d110000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00013493      4889c3         mov rbx, rax
0x00013496      488905a3cd20.  mov qword [obj.slotvec], rax            ; [0x220240:8]=0x220250 obj.slotvec0 ; "P\x02\""
0x0001349d      48633d94cd20.  movsxd rdi, dword [obj.nslots]          ; [0x220238:4]=1
0x000134a4      4489e2         mov edx, r12d
0x000134a7      31f6           xor esi, esi
0x000134a9      29fa           sub edx, edi
0x000134ab      48c1e704       shl rdi, 4
0x000134af      4863d2         movsxd rdx, edx
0x000134b2      4801df         add rdi, rbx
0x000134b5      48c1e204       shl rdx, 4
0x000134b9      e84200ffff     call sym.imp.memset
0x000134be      44892573cd20.  mov dword [obj.nslots], r12d            ; [0x220238:4]=1
0x000134c5      8b4504         mov eax, dword [rbp + 4]
0x000134c8      49c1e704       shl r15, 4
0x000134cc      4883ec08       sub rsp, 8
0x000134d0      4c01fb         add rbx, r15
0x000134d3      4c8d7d08       lea r15, [rbp + 8]
0x000134d7      448b4500       mov r8d, dword [rbp]
0x000134db      4c8b1b         mov r11, qword [rbx]
0x000134de      4c8b6308       mov r12, qword [rbx + 8]
0x000134e2      4c89f1         mov rcx, r14
0x000134e5      83c801         or eax, 1
0x000134e8      89442424       mov dword [rsp + 0x24], eax
0x000134ec      ff7530         push qword [rbp + 0x30]
0x000134ef      4189c1         mov r9d, eax
0x000134f2      ff7528         push qword [rbp + 0x28]
0x000134f5      4157           push r15
0x000134f7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000134fa      488b542428     mov rdx, qword [rsp + 0x28]
0x000134ff      4c89e7         mov rdi, r12
0x00013502      4c895c2430     mov qword [rsp + 0x30], r11
0x00013507      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0001350c      4883c420       add rsp, 0x20
0x00013510      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00013515      4939c3         cmp r11, rax
0x00013518      7767           ja 0x13581
0x0001351a      488d7001       lea rsi, [rax + 1]
0x0001351e      488d05fbde20.  lea rax, obj.slot0                      ; 0x221420
0x00013525      4939c4         cmp r12, rax
0x00013528      488933         mov qword [rbx], rsi
0x0001352b      7412           je 0x1353f
0x0001352d      4c89e7         mov rdi, r12
0x00013530      4889742410     mov qword [rsp + 0x10], rsi
0x00013535      e84603ffff     call sym..plt.got
0x0001353a      488b742410     mov rsi, qword [rsp + 0x10]
0x0001353f      4889f7         mov rdi, rsi
0x00013542      4889742410     mov qword [rsp + 0x10], rsi
0x00013547      e844100000     call sym.xmalloc
0x0001354c      4883ec08       sub rsp, 8
0x00013550      48894308       mov qword [rbx + 8], rax
0x00013554      448b4500       mov r8d, dword [rbp]
0x00013558      ff7530         push qword [rbp + 0x30]
0x0001355b      ff7528         push qword [rbp + 0x28]
0x0001355e      4c89f1         mov rcx, r14
0x00013561      4157           push r15
0x00013563      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00013568      4889c7         mov rdi, rax
0x0001356b      488b542428     mov rdx, qword [rsp + 0x28]
0x00013570      488b742430     mov rsi, qword [rsp + 0x30]
0x00013575      4989c4         mov r12, rax
0x00013578      e863ecffff     call sym.quotearg_buffer_restyled
0x0001357d      4883c420       add rsp, 0x20
0x00013581      8b442418       mov eax, dword [rsp + 0x18]
0x00013585      41894500       mov dword [r13], eax
0x00013589      4883c428       add rsp, 0x28
0x0001358d      4c89e0         mov rax, r12
0x00013590      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00013591      5d             pop rbp
0x00013592      415c           pop r12
0x00013594      415d           pop r13
0x00013596      415e           pop r14
0x00013598      415f           pop r15
0x0001359a      c3             ret
0x0001359b      0f1f440000     nop dword [rax + rax]
0x000135a0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000135a2      e849100000     call sym.xrealloc
0x000135a7      660f6f05a1cc.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000135af      4889c3         mov rbx, rax
0x000135b2      48890587cc20.  mov qword [obj.slotvec], rax            ; [0x220240:8]=0x220250 obj.slotvec0 ; "P\x02\""
0x000135b9      0f1100         movups xmmword [rax], xmm0
0x000135bc      e9dcfeffff     jmp 0x1349d
0x000135c1      e8cafcfeff     call sym.imp.abort
0x000135c6      e815120000     call sym.xalloc_die
0x000135cb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000135d0      4154           push r12
0x000135d2      55             push rbp
0x000135d3      53             push rbx
0x000135d4      4889fb         mov rbx, rdi
0x000135d7      e8c4fcfeff     call sym.imp.__errno_location
0x000135dc      448b20         mov r12d, dword [rax]
0x000135df      4889c5         mov rbp, rax
0x000135e2      488d0537df20.  lea rax, obj.default_quoting_options    ; 0x221520
0x000135e9      4885db         test rbx, rbx
0x000135ec      be38000000     mov esi, 0x38                           ; '8'
0x000135f1      480f44d8       cmove rbx, rax
0x000135f5      4889df         mov rdi, rbx
0x000135f8      e893110000     call sym.xmemdup
0x000135fd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00013601      5b             pop rbx
0x00013602      5d             pop rbp
0x00013603      415c           pop r12
0x00013605      c3             ret
0x00013606      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00013610      488d0509df20.  lea rax, obj.default_quoting_options    ; 0x221520
0x00013617      4885ff         test rdi, rdi
0x0001361a      480f44f8       cmove rdi, rax
0x0001361e      8b07           mov eax, dword [rdi]
0x00013620      c3             ret
0x00013621      0f1f440000     nop dword [rax + rax]
0x00013626      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00013630      488d05e9de20.  lea rax, obj.default_quoting_options    ; 0x221520
0x00013637      4885ff         test rdi, rdi
0x0001363a      480f44f8       cmove rdi, rax
0x0001363e      8937           mov dword [rdi], esi
0x00013640      c3             ret
0x00013641      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00013646      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00013650      488d05c9de20.  lea rax, obj.default_quoting_options    ; 0x221520
0x00013657      4885ff         test rdi, rdi
0x0001365a      89f1           mov ecx, esi
0x0001365c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00013660      89f0           mov eax, esi
0x00013662      83e11f         and ecx, 0x1f
0x00013665      c0e805         shr al, 5
0x00013668      0fb6c0         movzx eax, al
0x0001366b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00013670      8b37           mov esi, dword [rdi]
0x00013672      89f0           mov eax, esi
0x00013674      d3e8           shr eax, cl
0x00013676      31c2           xor edx, eax
0x00013678      83e001         and eax, 1
0x0001367b      83e201         and edx, 1
0x0001367e      d3e2           shl edx, cl
0x00013680      31f2           xor edx, esi
0x00013682      8917           mov dword [rdi], edx
0x00013684      c3             ret
0x00013685      90             nop
0x00013686      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00013690      488d0589de20.  lea rax, obj.default_quoting_options    ; 0x221520
0x00013697      4885ff         test rdi, rdi
0x0001369a      480f44f8       cmove rdi, rax
0x0001369e      8b4704         mov eax, dword [rdi + 4]
0x000136a1      897704         mov dword [rdi + 4], esi
0x000136a4      c3             ret
0x000136a5      90             nop
0x000136a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000136b0      488d0569de20.  lea rax, obj.default_quoting_options    ; 0x221520
0x000136b7      4885ff         test rdi, rdi
0x000136ba      480f44f8       cmove rdi, rax
0x000136be      4885f6         test rsi, rsi
0x000136c1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000136c7      740e           je 0x136d7
0x000136c9      4885d2         test rdx, rdx
0x000136cc      7409           je 0x136d7
0x000136ce      48897728       mov qword [rdi + 0x28], rsi
0x000136d2      48895730       mov qword [rdi + 0x30], rdx
0x000136d6      c3             ret
0x000136d7      4883ec08       sub rsp, 8
0x000136db      e8b0fbfeff     call sym.imp.abort
;-- quotearg_buffer:
0x000136e0      4157           push r15
0x000136e2      4156           push r14
0x000136e4      488d0535de20.  lea rax, obj.default_quoting_options    ; 0x221520
0x000136eb      4155           push r13
0x000136ed      4154           push r12
0x000136ef      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000136f2      55             push rbp
0x000136f3      53             push rbx
0x000136f4      4c89c3         mov rbx, r8
0x000136f7      4989f6         mov r14, rsi
0x000136fa      4989d7         mov r15, rdx
0x000136fd      4883ec18       sub rsp, 0x18
0x00013701      4d85c0         test r8, r8
0x00013704      480f44d8       cmove rbx, rax
0x00013708      48894c2408     mov qword [rsp + 8], rcx
0x0001370d      e88efbfeff     call sym.imp.__errno_location
0x00013712      448b20         mov r12d, dword [rax]
0x00013715      4889c5         mov rbp, rax
0x00013718      488d4308       lea rax, [rbx + 8]
0x0001371c      4883ec08       sub rsp, 8
0x00013720      448b4b04       mov r9d, dword [rbx + 4]
0x00013724      ff7330         push qword [rbx + 0x30]
0x00013727      448b03         mov r8d, dword [rbx]
0x0001372a      ff7328         push qword [rbx + 0x28]
0x0001372d      4c89fa         mov rdx, r15
0x00013730      50             push rax
0x00013731      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00013736      4c89f6         mov rsi, r14
0x00013739      4c89ef         mov rdi, r13
0x0001373c      e89feaffff     call sym.quotearg_buffer_restyled
0x00013741      44896500       mov dword [rbp], r12d
0x00013745      4883c438       add rsp, 0x38
0x00013749      5b             pop rbx
0x0001374a      5d             pop rbp
0x0001374b      415c           pop r12
0x0001374d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0001374f      415e           pop r14
0x00013751      415f           pop r15
0x00013753      c3             ret
0x00013754      6690           nop
0x00013756      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00013760      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00013762      4156           push r14
0x00013764      488d05b5dd20.  lea rax, obj.default_quoting_options    ; 0x221520
0x0001376b      4155           push r13
0x0001376d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0001376f      4989d4         mov r12, rdx
0x00013772      55             push rbp
0x00013773      53             push rbx
0x00013774      4889cb         mov rbx, rcx
0x00013777      4989fe         mov r14, rdi
0x0001377a      4989f7         mov r15, rsi
0x0001377d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00013781      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00013784      480f44d8       cmove rbx, rax
0x00013788      31ed           xor ebp, ebp
0x0001378a      e811fbfeff     call sym.imp.__errno_location
0x0001378f      4d85e4         test r12, r12
0x00013792      4989c5         mov r13, rax
0x00013795      8b00           mov eax, dword [rax]
0x00013797      400f94c5       sete bpl
0x0001379b      0b6b04         or ebp, dword [rbx + 4]
0x0001379e      4c8d5308       lea r10, [rbx + 8]
0x000137a2      4883ec08       sub rsp, 8
0x000137a6      448b03         mov r8d, dword [rbx]
0x000137a9      4c89f9         mov rcx, r15
0x000137ac      89442414       mov dword [rsp + 0x14], eax
0x000137b0      ff7330         push qword [rbx + 0x30]
0x000137b3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000137b6      ff7328         push qword [rbx + 0x28]
0x000137b9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000137bb      31f6           xor esi, esi
0x000137bd      4189e9         mov r9d, ebp
0x000137c0      31ff           xor edi, edi
0x000137c2      4c89542440     mov qword [rsp + 0x40], r10
0x000137c7      e814eaffff     call sym.quotearg_buffer_restyled
0x000137cc      488d7001       lea rsi, [rax + 1]
0x000137d0      4889442448     mov qword [rsp + 0x48], rax
0x000137d5      4883c420       add rsp, 0x20
0x000137d9      4889f7         mov rdi, rsi
0x000137dc      4889742418     mov qword [rsp + 0x18], rsi
0x000137e1      e8aa0d0000     call sym.xmalloc
0x000137e6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000137eb      4883ec08       sub rsp, 8
0x000137ef      ff7330         push qword [rbx + 0x30]
0x000137f2      ff7328         push qword [rbx + 0x28]
0x000137f5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000137fa      4189e9         mov r9d, ebp
0x000137fd      448b03         mov r8d, dword [rbx]
0x00013800      4c89f9         mov rcx, r15
0x00013803      4c89f2         mov rdx, r14
0x00013806      4889c7         mov rdi, rax
0x00013809      4152           push r10
0x0001380b      488b742438     mov rsi, qword [rsp + 0x38]
0x00013810      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00013815      8b44242c       mov eax, dword [rsp + 0x2c]
0x00013819      4883c420       add rsp, 0x20
0x0001381d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00013820      41894500       mov dword [r13], eax
0x00013824      7409           je 0x1382f
0x00013826      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0001382b      4d891c24       mov qword [r12], r11
0x0001382f      488b442410     mov rax, qword [rsp + 0x10]
0x00013834      4883c438       add rsp, 0x38
0x00013838      5b             pop rbx
0x00013839      5d             pop rbp
0x0001383a      415c           pop r12
0x0001383c      415d           pop r13
0x0001383e      415e           pop r14
0x00013840      415f           pop r15
0x00013842      c3             ret
0x00013843      0f1f00         nop dword [rax]
0x00013846      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00013850      4889d1         mov rcx, rdx
0x00013853      31d2           xor edx, edx
0x00013855      e906ffffff     jmp sym.quotearg_alloc_mem
0x0001385a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00013860      8b05d2c92000   mov eax, dword [obj.nslots]             ; [0x220238:4]=1
0x00013866      4154           push r12
0x00013868      4c8b25d1c920.  mov r12, qword [obj.slotvec]            ; [0x220240:8]=0x220250 obj.slotvec0 ; "P\x02\""
0x0001386f      55             push rbp
0x00013870      53             push rbx
0x00013871      83f801         cmp eax, 1
0x00013874      7e2b           jle 0x138a1                             ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00013876      83e802         sub eax, 2
0x00013879      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0001387e      48c1e004       shl rax, 4
0x00013882      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00013887      660f1f840000.  nop word [rax + rax]
0x00013890      488b3b         mov rdi, qword [rbx]
0x00013893      4883c310       add rbx, 0x10
0x00013897      e8e4fffeff     call sym..plt.got
0x0001389c      4839eb         cmp rbx, rbp
0x0001389f      75ef           jne 0x13890
0x000138a1      498b7c2408     mov rdi, qword [r12 + 8]
0x000138a6      488d1d73db20.  lea rbx, obj.slot0                      ; 0x221420
0x000138ad      4839df         cmp rdi, rbx
0x000138b0      7417           je 0x138c9
0x000138b2      e8c9fffeff     call sym..plt.got
0x000138b7      48c7058ec920.  mov qword [obj.slotvec0], 0x100         ; [0x220250:8]=256
0x000138c2      48891d8fc920.  mov qword [0x00220258], rbx             ; [0x220258:8]=0x221420 obj.slot0
0x000138c9      488d1d80c920.  lea rbx, obj.slotvec0                   ; 0x220250
0x000138d0      4939dc         cmp r12, rbx
0x000138d3      740f           je 0x138e4
0x000138d5      4c89e7         mov rdi, r12
0x000138d8      e8a3fffeff     call sym..plt.got
0x000138dd      48891d5cc920.  mov qword [obj.slotvec], rbx            ; [0x220240:8]=0x220250 obj.slotvec0 ; "P\x02\""
0x000138e4      5b             pop rbx
0x000138e5      c70549c92000.  mov dword [obj.nslots], 1               ; [0x220238:4]=1
0x000138ef      5d             pop rbp
0x000138f0      415c           pop r12
0x000138f2      c3             ret
0x000138f3      0f1f00         nop dword [rax]
0x000138f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00013900      488d0d19dc20.  lea rcx, obj.default_quoting_options    ; 0x221520
0x00013907      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0001390e      e90dfbffff     jmp sym.quotearg_n_options
0x00013913      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00013916      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00013920      488d0df9db20.  lea rcx, obj.default_quoting_options    ; 0x221520
0x00013927      e9f4faffff     jmp sym.quotearg_n_options
0x0001392c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00013930      488d0de9db20.  lea rcx, obj.default_quoting_options    ; 0x221520
0x00013937      4889fe         mov rsi, rdi
0x0001393a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013941      31ff           xor edi, edi
0x00013943      e9d8faffff     jmp sym.quotearg_n_options
0x00013948      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00013950      488d0dc9db20.  lea rcx, obj.default_quoting_options    ; 0x221520
0x00013957      4889f2         mov rdx, rsi
0x0001395a      4889fe         mov rsi, rdi
0x0001395d      31ff           xor edi, edi
0x0001395f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00013964      6690           nop
0x00013966      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00013970      4883ec48       sub rsp, 0x48
0x00013974      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00013977      64488b142528.  mov rdx, qword fs:[0x28]
0x00013980      4889542438     mov qword [rsp + 0x38], rdx
0x00013985      31d2           xor edx, edx
0x00013987      83fe0a         cmp esi, 0xa
0x0001398a      7468           je 0x139f4
0x0001398c      893424         mov dword [rsp], esi
0x0001398f      4889e1         mov rcx, rsp
0x00013992      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013999      4889c6         mov rsi, rax
0x0001399c      48c744240400.  mov qword [rsp + 4], 0
0x000139a5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000139ae      48c744241400.  mov qword [rsp + 0x14], 0
0x000139b7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000139c0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000139c9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000139d2      c74424340000.  mov dword [rsp + 0x34], 0
0x000139da      e841faffff     call sym.quotearg_n_options
0x000139df      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000139e4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000139ed      750a           jne 0x139f9                             ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000139ef      4883c448       add rsp, 0x48
0x000139f3      c3             ret
0x000139f4      e897f8feff     call sym.imp.abort
0x000139f9      e822fafeff     call sym.imp.__stack_chk_fail
0x000139fe      6690           nop
;-- quotearg_n_style_mem:
0x00013a00      4883ec48       sub rsp, 0x48
0x00013a04      4889d0         mov rax, rdx
0x00013a07      4889ca         mov rdx, rcx
0x00013a0a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00013a13      48894c2438     mov qword [rsp + 0x38], rcx
0x00013a18      31c9           xor ecx, ecx
0x00013a1a      83fe0a         cmp esi, 0xa
0x00013a1d      7461           je 0x13a80
0x00013a1f      893424         mov dword [rsp], esi
0x00013a22      4889e1         mov rcx, rsp
0x00013a25      4889c6         mov rsi, rax
0x00013a28      48c744240400.  mov qword [rsp + 4], 0
0x00013a31      48c744240c00.  mov qword [rsp + 0xc], 0
0x00013a3a      48c744241400.  mov qword [rsp + 0x14], 0
0x00013a43      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00013a4c      48c744242400.  mov qword [rsp + 0x24], 0
0x00013a55      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00013a5e      c74424340000.  mov dword [rsp + 0x34], 0
0x00013a66      e8b5f9ffff     call sym.quotearg_n_options
0x00013a6b      488b542438     mov rdx, qword [rsp + 0x38]
0x00013a70      644833142528.  xor rdx, qword fs:[0x28]
0x00013a79      750a           jne 0x13a85
0x00013a7b      4883c448       add rsp, 0x48
0x00013a7f      c3             ret
0x00013a80      e80bf8feff     call sym.imp.abort
0x00013a85      e896f9feff     call sym.imp.__stack_chk_fail
0x00013a8a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00013a90      4889f2         mov rdx, rsi
0x00013a93      89fe           mov esi, edi
0x00013a95      31ff           xor edi, edi
0x00013a97      e9d4feffff     jmp sym.quotearg_n_style
0x00013a9c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00013aa0      4889d1         mov rcx, rdx
0x00013aa3      4889f2         mov rdx, rsi
0x00013aa6      89fe           mov esi, edi
0x00013aa8      31ff           xor edi, edi
0x00013aaa      e951ffffff     jmp sym.quotearg_n_style_mem
0x00013aaf      90             nop
;-- quotearg_char_mem:
0x00013ab0      4883ec48       sub rsp, 0x48
0x00013ab4      89d1           mov ecx, edx
0x00013ab6      64488b042528.  mov rax, qword fs:[0x28]
0x00013abf      4889442438     mov qword [rsp + 0x38], rax
0x00013ac4      31c0           xor eax, eax
0x00013ac6      488b0583da20.  mov rax, qword [0x00221550]             ; [0x221550:8]=0
0x00013acd      4989e0         mov r8, rsp
0x00013ad0      83e11f         and ecx, 0x1f
0x00013ad3      660f6f0545da.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00013adb      4889442430     mov qword [rsp + 0x30], rax
0x00013ae0      89d0           mov eax, edx
0x00013ae2      0f290424       movaps xmmword [rsp], xmm0
0x00013ae6      c0e805         shr al, 5
0x00013ae9      0fb6c0         movzx eax, al
0x00013aec      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00013af1      660f6f0537da.  movdqa xmm0, xmmword [0x00221530]
0x00013af9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00013afe      660f6f053ada.  movdqa xmm0, xmmword [0x00221540]
0x00013b06      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00013b0b      418b11         mov edx, dword [r9]
0x00013b0e      89d0           mov eax, edx
0x00013b10      d3e8           shr eax, cl
0x00013b12      f7d0           not eax
0x00013b14      83e001         and eax, 1
0x00013b17      d3e0           shl eax, cl
0x00013b19      4c89c1         mov rcx, r8
0x00013b1c      31d0           xor eax, edx
0x00013b1e      4889f2         mov rdx, rsi
0x00013b21      4889fe         mov rsi, rdi
0x00013b24      418901         mov dword [r9], eax
0x00013b27      31ff           xor edi, edi
0x00013b29      e8f2f8ffff     call sym.quotearg_n_options
0x00013b2e      488b742438     mov rsi, qword [rsp + 0x38]
0x00013b33      644833342528.  xor rsi, qword fs:[0x28]
0x00013b3c      7505           jne 0x13b43
0x00013b3e      4883c448       add rsp, 0x48
0x00013b42      c3             ret
0x00013b43      e8d8f8feff     call sym.imp.__stack_chk_fail
0x00013b48      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00013b50      400fbed6       movsx edx, sil
0x00013b54      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00013b5b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00013b60      ba3a000000     mov edx, 0x3a                           ; ':'
0x00013b65      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00013b6c      e93fffffff     jmp sym.quotearg_char_mem
0x00013b71      0f1f440000     nop dword [rax + rax]
0x00013b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00013b80      ba3a000000     mov edx, 0x3a                           ; ':'
0x00013b85      e926ffffff     jmp sym.quotearg_char_mem
0x00013b8a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00013b90      4883ec48       sub rsp, 0x48
0x00013b94      4889d0         mov rax, rdx
0x00013b97      64488b142528.  mov rdx, qword fs:[0x28]
0x00013ba0      4889542438     mov qword [rsp + 0x38], rdx
0x00013ba5      31d2           xor edx, edx
0x00013ba7      83fe0a         cmp esi, 0xa
0x00013baa      7468           je 0x13c14
0x00013bac      893424         mov dword [rsp], esi
0x00013baf      4889e1         mov rcx, rsp
0x00013bb2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013bb9      4889c6         mov rsi, rax
0x00013bbc      48c744240400.  mov qword [rsp + 4], 0
0x00013bc5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00013bce      48c744241400.  mov qword [rsp + 0x14], 0
0x00013bd7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00013be0      48c744242400.  mov qword [rsp + 0x24], 0
0x00013be9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00013bf2      c74424340000.  mov dword [rsp + 0x34], 0
0x00013bfa      e821f8ffff     call sym.quotearg_n_options
0x00013bff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00013c04      6448330c2528.  xor rcx, qword fs:[0x28]
0x00013c0d      750a           jne 0x13c19
0x00013c0f      4883c448       add rsp, 0x48
0x00013c13      c3             ret
0x00013c14      e877f6feff     call sym.imp.abort
0x00013c19      e802f8feff     call sym.imp.__stack_chk_fail
0x00013c1e      6690           nop
;-- quotearg_n_custom_mem:
0x00013c20      4883ec48       sub rsp, 0x48
0x00013c24      4989c9         mov r9, rcx
0x00013c27      488b0d22d920.  mov rcx, qword [0x00221550]             ; [0x221550:8]=0
0x00013c2e      660f6f05ead8.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00013c36      64488b042528.  mov rax, qword fs:[0x28]
0x00013c3f      4889442438     mov qword [rsp + 0x38], rax
0x00013c44      31c0           xor eax, eax
0x00013c46      0f290424       movaps xmmword [rsp], xmm0
0x00013c4a      4885f6         test rsi, rsi
0x00013c4d      48894c2430     mov qword [rsp + 0x30], rcx
0x00013c52      c704240a0000.  mov dword [rsp], 0xa
0x00013c59      660f6f05cfd8.  movdqa xmm0, xmmword [0x00221530]
0x00013c61      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00013c66      660f6f05d2d8.  movdqa xmm0, xmmword [0x00221540]
0x00013c6e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00013c73      7432           je 0x13ca7
0x00013c75      4885d2         test rdx, rdx
0x00013c78      742d           je 0x13ca7
0x00013c7a      4889742428     mov qword [rsp + 0x28], rsi
0x00013c7f      4889542430     mov qword [rsp + 0x30], rdx
0x00013c84      4889e1         mov rcx, rsp
0x00013c87      4c89c2         mov rdx, r8
0x00013c8a      4c89ce         mov rsi, r9
0x00013c8d      e88ef7ffff     call sym.quotearg_n_options
0x00013c92      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00013c97      6448333c2528.  xor rdi, qword fs:[0x28]
0x00013ca0      750a           jne 0x13cac
0x00013ca2      4883c448       add rsp, 0x48
0x00013ca6      c3             ret
0x00013ca7      e8e4f5feff     call sym.imp.abort
0x00013cac      e86ff7feff     call sym.imp.__stack_chk_fail
0x00013cb1      0f1f440000     nop dword [rax + rax]
0x00013cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00013cc0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00013cc7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00013ccc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00013cd0      4889d1         mov rcx, rdx
0x00013cd3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00013cda      4889f2         mov rdx, rsi
0x00013cdd      4889fe         mov rsi, rdi
0x00013ce0      31ff           xor edi, edi
0x00013ce2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00013ce7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00013cf0      4989c8         mov r8, rcx
0x00013cf3      4889d1         mov rcx, rdx
0x00013cf6      4889f2         mov rdx, rsi
0x00013cf9      4889fe         mov rsi, rdi
0x00013cfc      31ff           xor edi, edi
0x00013cfe      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00013d03      0f1f00         nop dword [rax]
0x00013d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00013d10      488d0de9c420.  lea rcx, obj.quote_quoting_options      ; 0x220200
0x00013d17      e904f7ffff     jmp sym.quotearg_n_options
0x00013d1c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00013d20      488d0dd9c420.  lea rcx, obj.quote_quoting_options      ; 0x220200
0x00013d27      4889f2         mov rdx, rsi
0x00013d2a      4889fe         mov rsi, rdi
0x00013d2d      31ff           xor edi, edi
0x00013d2f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00013d34      6690           nop
0x00013d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00013d40      488d0db9c420.  lea rcx, obj.quote_quoting_options      ; 0x220200
0x00013d47      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013d4e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00013d53      0f1f00         nop dword [rax]
0x00013d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00013d60      488d0d99c420.  lea rcx, obj.quote_quoting_options      ; 0x220200
0x00013d67      4889fe         mov rsi, rdi
0x00013d6a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00013d71      31ff           xor edi, edi
0x00013d73      e9a8f6ffff     jmp sym.quotearg_n_options
0x00013d78      0f1f84000000.  nop dword [rax + rax]
;-- same_nameat.part.0:
0x00013d80      4155           push r13
0x00013d82      4154           push r12
0x00013d84      4189fd         mov r13d, edi
0x00013d87      55             push rbp
0x00013d88      53             push rbx
0x00013d89      4889f7         mov rdi, rsi
0x00013d8c      89d5           mov ebp, edx
0x00013d8e      4989cc         mov r12, rcx
0x00013d91      4881ec380100.  sub rsp, 0x138
0x00013d98      64488b042528.  mov rax, qword fs:[0x28]
0x00013da1      488984242801.  mov qword [rsp + 0x128], rax
0x00013da9      31c0           xor eax, eax
0x00013dab      e8501f0000     call sym.dir_name
0x00013db0      4889e1         mov rcx, rsp
0x00013db3      41b800010000   mov r8d, 0x100
0x00013db9      4889c2         mov rdx, rax
0x00013dbc      4489ee         mov esi, r13d
0x00013dbf      bf01000000     mov edi, 1
0x00013dc4      4889c3         mov rbx, rax
0x00013dc7      e8a4f6feff     call sym.imp.__fxstatat
0x00013dcc      85c0           test eax, eax
0x00013dce      0f85ac000000   jne 0x13e80
0x00013dd4      4889df         mov rdi, rbx
0x00013dd7      e8a4fafeff     call sym..plt.got
0x00013ddc      4c89e7         mov rdi, r12
0x00013ddf      e81c1f0000     call sym.dir_name
0x00013de4      488d8c249000.  lea rcx, [rsp + 0x90]
0x00013dec      41b800010000   mov r8d, 0x100
0x00013df2      4889c2         mov rdx, rax
0x00013df5      89ee           mov esi, ebp
0x00013df7      bf01000000     mov edi, 1
0x00013dfc      4889c3         mov rbx, rax
0x00013dff      e86cf6feff     call sym.imp.__fxstatat
0x00013e04      85c0           test eax, eax
0x00013e06      7550           jne 0x13e58
0x00013e08      31ed           xor ebp, ebp
0x00013e0a      488b84249800.  mov rax, qword [rsp + 0x98]
0x00013e12      4839442408     cmp qword [rsp + 8], rax
0x00013e17      7510           jne 0x13e29
0x00013e19      488b84249000.  mov rax, qword [rsp + 0x90]
0x00013e21      48390424       cmp qword [rsp], rax
0x00013e25      400f94c5       sete bpl
0x00013e29      4889df         mov rdi, rbx
0x00013e2c      e84ffafeff     call sym..plt.got
0x00013e31      488b94242801.  mov rdx, qword [rsp + 0x128]
0x00013e39      644833142528.  xor rdx, qword fs:[0x28]
0x00013e42      89e8           mov eax, ebp
0x00013e44      755c           jne 0x13ea2
0x00013e46      4881c4380100.  add rsp, 0x138
0x00013e4d      5b             pop rbx
0x00013e4e      5d             pop rbp
0x00013e4f      415c           pop r12
0x00013e51      415d           pop r13
0x00013e53      c3             ret
0x00013e54      0f1f4000       nop dword [rax]
0x00013e58      e843f4feff     call sym.imp.__errno_location
0x00013e5d      8b30           mov esi, dword [rax]
0x00013e5f      488d15266100.  lea rdx, [0x00019f8c]                   ; "%s"
0x00013e66      4889d9         mov rcx, rbx
0x00013e69      bf01000000     mov edi, 1
0x00013e6e      31c0           xor eax, eax
0x00013e70      e8ebf8feff     call sym.imp.error
0x00013e75      eb91           jmp 0x13e08
0x00013e77      660f1f840000.  nop word [rax + rax]
0x00013e80      e81bf4feff     call sym.imp.__errno_location
0x00013e85      8b30           mov esi, dword [rax]
0x00013e87      488d15fe6000.  lea rdx, [0x00019f8c]                   ; "%s"
0x00013e8e      4889d9         mov rcx, rbx
0x00013e91      bf01000000     mov edi, 1
0x00013e96      31c0           xor eax, eax
0x00013e98      e8c3f8feff     call sym.imp.error
0x00013e9d      e932ffffff     jmp 0x13dd4
0x00013ea2      e879f5feff     call sym.imp.__stack_chk_fail
0x00013ea7      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x00013eb0      4157           push r15
0x00013eb2      4156           push r14
0x00013eb4      4189d7         mov r15d, edx
0x00013eb7      4155           push r13
0x00013eb9      4154           push r12
0x00013ebb      55             push rbp
0x00013ebc      53             push rbx
0x00013ebd      4889cd         mov rbp, rcx
0x00013ec0      4889f3         mov rbx, rsi
0x00013ec3      4883ec18       sub rsp, 0x18
0x00013ec7      897c240c       mov dword [rsp + 0xc], edi
0x00013ecb      4889f7         mov rdi, rsi
0x00013ece      e83d8effff     call sym.last_component
0x00013ed3      4889ef         mov rdi, rbp
0x00013ed6      4989c4         mov r12, rax
0x00013ed9      e8328effff     call sym.last_component
0x00013ede      4c89e7         mov rdi, r12
0x00013ee1      4989c5         mov r13, rax
0x00013ee4      e8878effff     call sym.base_len
0x00013ee9      4c89ef         mov rdi, r13
0x00013eec      4989c6         mov r14, rax
0x00013eef      e87c8effff     call sym.base_len
0x00013ef4      4939c6         cmp r14, rax
0x00013ef7      7417           je 0x13f10
0x00013ef9      4883c418       add rsp, 0x18
0x00013efd      31c0           xor eax, eax
0x00013eff      5b             pop rbx
0x00013f00      5d             pop rbp
0x00013f01      415c           pop r12
0x00013f03      415d           pop r13
0x00013f05      415e           pop r14
0x00013f07      415f           pop r15
0x00013f09      c3             ret
0x00013f0a      660f1f440000   nop word [rax + rax]
0x00013f10      4c89f2         mov rdx, r14
0x00013f13      4c89ee         mov rsi, r13
0x00013f16      4c89e7         mov rdi, r12
0x00013f19      e832f6feff     call sym.imp.memcmp
0x00013f1e      85c0           test eax, eax
0x00013f20      75d7           jne 0x13ef9
0x00013f22      8b7c240c       mov edi, dword [rsp + 0xc]
0x00013f26      4883c418       add rsp, 0x18
0x00013f2a      4889e9         mov rcx, rbp
0x00013f2d      4489fa         mov edx, r15d
0x00013f30      4889de         mov rsi, rbx
0x00013f33      5b             pop rbx
0x00013f34      5d             pop rbp
0x00013f35      415c           pop r12
0x00013f37      415d           pop r13
0x00013f39      415e           pop r14
0x00013f3b      415f           pop r15
0x00013f3d      e93efeffff     jmp sym.same_nameat.part.0
0x00013f42      0f1f4000       nop dword [rax]
0x00013f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x00013f50      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x00013f55      4889f1         mov rcx, rsi
0x00013f58      4889fe         mov rsi, rdi
0x00013f5b      89d7           mov edi, edx
0x00013f5d      e94effffff     jmp sym.same_nameat
0x00013f62      662e0f1f8400.  nop word cs:[rax + rax]
0x00013f6c      0f1f4000       nop dword [rax]
;-- version_etc_arn:
0x00013f70      4157           push r15
0x00013f72      4156           push r14
0x00013f74      4155           push r13
0x00013f76      4154           push r12
0x00013f78      4d89cc         mov r12, r9
0x00013f7b      55             push rbp
0x00013f7c      53             push rbx
0x00013f7d      4889fd         mov rbp, rdi
0x00013f80      4c89c3         mov rbx, r8
0x00013f83      4883ec28       sub rsp, 0x28
0x00013f87      4885f6         test rsi, rsi
0x00013f8a      0f8418010000   je 0x140a8
0x00013f90      4989d0         mov r8, rdx
0x00013f93      488d154e6800.  lea rdx, [0x0001a7e8]                   ; "%s (%s) %s\n"
0x00013f9a      4989c9         mov r9, rcx
0x00013f9d      31c0           xor eax, eax
0x00013f9f      4889f1         mov rcx, rsi
0x00013fa2      be01000000     mov esi, 1
0x00013fa7      e854f8feff     call sym.imp.__fprintf_chk
0x00013fac      488d35486800.  lea rsi, [0x0001a7fb]                   ; "(C)"
0x00013fb3      31ff           xor edi, edi
0x00013fb5      ba05000000     mov edx, 5
0x00013fba      e821f4feff     call sym.imp.dcgettext
0x00013fbf      488d155a6b00.  lea rdx, obj.version_etc_copyright      ; 0x1ab20 ; "Copyright %s %d Free Software Foundation, Inc."
0x00013fc6      4889c1         mov rcx, rax
0x00013fc9      41b8e3070000   mov r8d, 0x7e3
0x00013fcf      be01000000     mov esi, 1
0x00013fd4      4889ef         mov rdi, rbp
0x00013fd7      31c0           xor eax, eax
0x00013fd9      e822f8feff     call sym.imp.__fprintf_chk
0x00013fde      488d35a36800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x1a888 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00013fe5      31ff           xor edi, edi
0x00013fe7      ba05000000     mov edx, 5
0x00013fec      e8eff3feff     call sym.imp.dcgettext
0x00013ff1      4889ee         mov rsi, rbp
0x00013ff4      4889c7         mov rdi, rax
0x00013ff7      e874f5feff     call sym.imp.fputs_unlocked
0x00013ffc      4983fc09       cmp r12, 9
0x00014000      0f873a030000   ja 0x14340
0x00014006      488d15d76a00.  lea rdx, [0x0001aae4]
0x0001400d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00014011      4801d0         add rax, rdx
0x00014014      ffe0           jmp rax
0x00014016      662e0f1f8400.  nop word cs:[rax + rax]
0x00014020      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00014024      488b4310       mov rax, qword [rbx + 0x10]
0x00014028      488d35c96900.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x1a9f8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0001402f      4c8b4308       mov r8, qword [rbx + 8]
0x00014033      ba05000000     mov edx, 5
0x00014038      31ff           xor edi, edi
0x0001403a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0001403e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00014042      4c894c2410     mov qword [rsp + 0x10], r9
0x00014047      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001404b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001404f      48890424       mov qword [rsp], rax
0x00014053      4c89442408     mov qword [rsp + 8], r8
0x00014058      488b1b         mov rbx, qword [rbx]
0x0001405b      e880f3feff     call sym.imp.dcgettext
0x00014060      4883ec08       sub rsp, 8
0x00014064      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00014069      4889c2         mov rdx, rax
0x0001406c      4889d9         mov rcx, rbx
0x0001406f      be01000000     mov esi, 1
0x00014074      4889ef         mov rdi, rbp
0x00014077      31c0           xor eax, eax
0x00014079      4151           push r9
0x0001407b      4155           push r13
0x0001407d      4154           push r12
0x0001407f      4157           push r15
0x00014081      4156           push r14
0x00014083      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00014088      4c8b442438     mov r8, qword [rsp + 0x38]
0x0001408d      e86ef7feff     call sym.imp.__fprintf_chk
0x00014092      4883c430       add rsp, 0x30
0x00014096      4883c428       add rsp, 0x28
0x0001409a      5b             pop rbx
0x0001409b      5d             pop rbp
0x0001409c      415c           pop r12
0x0001409e      415d           pop r13
0x000140a0      415e           pop r14
0x000140a2      415f           pop r15
0x000140a4      c3             ret
0x000140a5      0f1f00         nop dword [rax]
0x000140a8      4989c8         mov r8, rcx
0x000140ab      4889d1         mov rcx, rdx
0x000140ae      488d153f6700.  lea rdx, str.s__s                       ; 0x1a7f4 ; "%s %s\n"
0x000140b5      be01000000     mov esi, 1
0x000140ba      31c0           xor eax, eax
0x000140bc      e83ff7feff     call sym.imp.__fprintf_chk
0x000140c1      e9e6feffff     jmp 0x13fac
0x000140c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000140d0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000140d4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000140d8      488d35496900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x1aa28 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000140df      488b4310       mov rax, qword [rbx + 0x10]
0x000140e3      4c8b4308       mov r8, qword [rbx + 8]
0x000140e7      ba05000000     mov edx, 5
0x000140ec      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000140f0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000140f4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000140f8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000140fc      488b1b         mov rbx, qword [rbx]
0x000140ff      4c89542418     mov qword [rsp + 0x18], r10
0x00014104      4c894c2410     mov qword [rsp + 0x10], r9
0x00014109      48890424       mov qword [rsp], rax
0x0001410d      4c89442408     mov qword [rsp + 8], r8
0x00014112      31ff           xor edi, edi
0x00014114      e8c7f2feff     call sym.imp.dcgettext
0x00014119      4c8b542418     mov r10, qword [rsp + 0x18]
0x0001411e      4152           push r10
0x00014120      e93fffffff     jmp 0x14064
0x00014125      0f1f00         nop dword [rax]
0x00014128      488b1b         mov rbx, qword [rbx]
0x0001412b      488d35cd6600.  lea rsi, str.Written_by__s.             ; 0x1a7ff ; "Written by %s.\n"
0x00014132      ba05000000     mov edx, 5
0x00014137      31ff           xor edi, edi
0x00014139      e8a2f2feff     call sym.imp.dcgettext
0x0001413e      4883c428       add rsp, 0x28
0x00014142      4889d9         mov rcx, rbx
0x00014145      4889ef         mov rdi, rbp
0x00014148      5b             pop rbx
0x00014149      5d             pop rbp
0x0001414a      415c           pop r12
0x0001414c      415d           pop r13
0x0001414e      415e           pop r14
0x00014150      415f           pop r15
0x00014152      4889c2         mov rdx, rax
0x00014155      be01000000     mov esi, 1
0x0001415a      31c0           xor eax, eax
0x0001415c      e99ff6feff     jmp sym.imp.__fprintf_chk
0x00014161      0f1f80000000.  nop dword [rax]
0x00014168      4c8b6308       mov r12, qword [rbx + 8]
0x0001416c      488d359c6600.  lea rsi, str.Written_by__s_and__s.      ; 0x1a80f ; "Written by %s and %s.\n"
0x00014173      488b1b         mov rbx, qword [rbx]
0x00014176      ba05000000     mov edx, 5
0x0001417b      31ff           xor edi, edi
0x0001417d      e85ef2feff     call sym.imp.dcgettext
0x00014182      4883c428       add rsp, 0x28
0x00014186      4d89e0         mov r8, r12
0x00014189      4889d9         mov rcx, rbx
0x0001418c      4889ef         mov rdi, rbp
0x0001418f      4889c2         mov rdx, rax
0x00014192      be01000000     mov esi, 1
0x00014197      5b             pop rbx
0x00014198      5d             pop rbp
0x00014199      415c           pop r12
0x0001419b      415d           pop r13
0x0001419d      415e           pop r14
0x0001419f      415f           pop r15
0x000141a1      31c0           xor eax, eax
0x000141a3      e958f6feff     jmp sym.imp.__fprintf_chk
0x000141a8      0f1f84000000.  nop dword [rax + rax]
0x000141b0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000141b4      4c8b6308       mov r12, qword [rbx + 8]
0x000141b8      488d35676600.  lea rsi, str.Written_by__s___s__and__s. ; 0x1a826 ; "Written by %s, %s, and %s.\n"
0x000141bf      488b1b         mov rbx, qword [rbx]
0x000141c2      ba05000000     mov edx, 5
0x000141c7      31ff           xor edi, edi
0x000141c9      e812f2feff     call sym.imp.dcgettext
0x000141ce      4883c428       add rsp, 0x28
0x000141d2      4d89e9         mov r9, r13
0x000141d5      4d89e0         mov r8, r12
0x000141d8      4889d9         mov rcx, rbx
0x000141db      4889ef         mov rdi, rbp
0x000141de      4889c2         mov rdx, rax
0x000141e1      5b             pop rbx
0x000141e2      5d             pop rbp
0x000141e3      415c           pop r12
0x000141e5      415d           pop r13
0x000141e7      415e           pop r14
0x000141e9      415f           pop r15
0x000141eb      be01000000     mov esi, 1
0x000141f0      31c0           xor eax, eax
0x000141f2      e909f6feff     jmp sym.imp.__fprintf_chk
0x000141f7      660f1f840000.  nop word [rax + rax]
0x00014200      488d35516700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x1a958 ; "Written by %s, %s, %s,\nand %s.\n"
0x00014207      ba05000000     mov edx, 5
0x0001420c      31ff           xor edi, edi
0x0001420e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00014212      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00014216      4c8b6308       mov r12, qword [rbx + 8]
0x0001421a      488b1b         mov rbx, qword [rbx]
0x0001421d      e8bef1feff     call sym.imp.dcgettext
0x00014222      4883ec08       sub rsp, 8
0x00014226      4156           push r14
0x00014228      4889c2         mov rdx, rax
0x0001422b      4d89e9         mov r9, r13
0x0001422e      4d89e0         mov r8, r12
0x00014231      4889d9         mov rcx, rbx
0x00014234      4889ef         mov rdi, rbp
0x00014237      be01000000     mov esi, 1
0x0001423c      31c0           xor eax, eax
0x0001423e      e8bdf5feff     call sym.imp.__fprintf_chk
0x00014243      58             pop rax
0x00014244      5a             pop rdx
0x00014245      4883c428       add rsp, 0x28
0x00014249      5b             pop rbx
0x0001424a      5d             pop rbp
0x0001424b      415c           pop r12
0x0001424d      415d           pop r13
0x0001424f      415e           pop r14
0x00014251      415f           pop r15
0x00014253      c3             ret
0x00014254      0f1f4000       nop dword [rax]
0x00014258      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001425c      488d35156700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x1a978 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00014263      ba05000000     mov edx, 5
0x00014268      31ff           xor edi, edi
0x0001426a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001426e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00014272      4c8b6308       mov r12, qword [rbx + 8]
0x00014276      488b1b         mov rbx, qword [rbx]
0x00014279      e862f1feff     call sym.imp.dcgettext
0x0001427e      4157           push r15
0x00014280      eba4           jmp 0x14226
0x00014282      660f1f440000   nop word [rax + rax]
0x00014288      4c8b4308       mov r8, qword [rbx + 8]
0x0001428c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00014290      488d35096700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x1a9a0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00014297      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0001429b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001429f      ba05000000     mov edx, 5
0x000142a4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000142a8      31ff           xor edi, edi
0x000142aa      488b1b         mov rbx, qword [rbx]
0x000142ad      4c890424       mov qword [rsp], r8
0x000142b1      e82af1feff     call sym.imp.dcgettext
0x000142b6      4883ec08       sub rsp, 8
0x000142ba      4d89e9         mov r9, r13
0x000142bd      4154           push r12
0x000142bf      4157           push r15
0x000142c1      4156           push r14
0x000142c3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000142c8      4889d9         mov rcx, rbx
0x000142cb      4889c2         mov rdx, rax
0x000142ce      4889ef         mov rdi, rbp
0x000142d1      be01000000     mov esi, 1
0x000142d6      31c0           xor eax, eax
0x000142d8      e823f5feff     call sym.imp.__fprintf_chk
0x000142dd      4883c420       add rsp, 0x20
0x000142e1      4883c428       add rsp, 0x28
0x000142e5      5b             pop rbx
0x000142e6      5d             pop rbp
0x000142e7      415c           pop r12
0x000142e9      415d           pop r13
0x000142eb      415e           pop r14
0x000142ed      415f           pop r15
0x000142ef      c3             ret
0x000142f0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000142f4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000142f8      488d35c96600.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x1a9c8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000142ff      4c8b6328       mov r12, qword [rbx + 0x28]
0x00014303      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00014307      ba05000000     mov edx, 5
0x0001430c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00014310      4c8b4308       mov r8, qword [rbx + 8]
0x00014314      31ff           xor edi, edi
0x00014316      4c894c2408     mov qword [rsp + 8], r9
0x0001431b      488b1b         mov rbx, qword [rbx]
0x0001431e      4c890424       mov qword [rsp], r8
0x00014322      e8b9f0feff     call sym.imp.dcgettext
0x00014327      4155           push r13
0x00014329      4154           push r12
0x0001432b      4157           push r15
0x0001432d      4156           push r14
0x0001432f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00014334      eb8d           jmp 0x142c3
0x00014336      662e0f1f8400.  nop word cs:[rax + rax]
0x00014340      4c8b5340       mov r10, qword [rbx + 0x40]
0x00014344      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00014348      ba05000000     mov edx, 5
0x0001434d      488b4310       mov rax, qword [rbx + 0x10]
0x00014351      4c8b4308       mov r8, qword [rbx + 8]
0x00014355      488d35046700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x1aa60 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0001435c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00014360      4c8b6328       mov r12, qword [rbx + 0x28]
0x00014364      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00014368      4c8b7318       mov r14, qword [rbx + 0x18]
0x0001436c      4c89542418     mov qword [rsp + 0x18], r10
0x00014371      4c894c2410     mov qword [rsp + 0x10], r9
0x00014376      48890424       mov qword [rsp], rax
0x0001437a      4c89442408     mov qword [rsp + 8], r8
0x0001437f      488b1b         mov rbx, qword [rbx]
0x00014382      e98bfdffff     jmp 0x14112
0x00014387      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00014390      4531c9         xor r9d, r9d
0x00014393      49833800       cmp qword [r8], 0
0x00014397      7412           je 0x143ab
0x00014399      0f1f80000000.  nop dword [rax]
0x000143a0      4983c101       add r9, 1
0x000143a4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000143a9      75f5           jne 0x143a0
0x000143ab      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000143b0      4883ec68       sub rsp, 0x68
0x000143b4      4d89c2         mov r10, r8
0x000143b7      4531c9         xor r9d, r9d
0x000143ba      64488b042528.  mov rax, qword fs:[0x28]
0x000143c3      4889442458     mov qword [rsp + 0x58], rax
0x000143c8      31c0           xor eax, eax
0x000143ca      4989e0         mov r8, rsp
0x000143cd      0f1f00         nop dword [rax]
0x000143d0      418b02         mov eax, dword [r10]
0x000143d3      83f82f         cmp eax, 0x2f
0x000143d6      7742           ja 0x1441a
0x000143d8      4189c3         mov r11d, eax
0x000143db      4d035a10       add r11, qword [r10 + 0x10]
0x000143df      83c008         add eax, 8
0x000143e2      418902         mov dword [r10], eax
0x000143e5      498b03         mov rax, qword [r11]
0x000143e8      4885c0         test rax, rax
0x000143eb      4b8904c8       mov qword [r8 + r9*8], rax
0x000143ef      740a           je 0x143fb
0x000143f1      4983c101       add r9, 1
0x000143f5      4983f90a       cmp r9, 0xa
0x000143f9      75d5           jne 0x143d0
0x000143fb      e870fbffff     call sym.version_etc_arn
0x00014400      488b442458     mov rax, qword [rsp + 0x58]
0x00014405      644833042528.  xor rax, qword fs:[0x28]
0x0001440e      7505           jne 0x14415
0x00014410      4883c468       add rsp, 0x68
0x00014414      c3             ret
0x00014415      e806f0feff     call sym.imp.__stack_chk_fail
0x0001441a      4d8b5a08       mov r11, qword [r10 + 8]
0x0001441e      498d4308       lea rax, [r11 + 8]
0x00014422      49894208       mov qword [r10 + 8], rax
0x00014426      ebbd           jmp 0x143e5
0x00014428      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00014430      55             push rbp
0x00014431      53             push rbx
0x00014432      41ba20000000   mov r10d, 0x20                          ; "@"
0x00014438      4531db         xor r11d, r11d
0x0001443b      4881ecb80000.  sub rsp, 0xb8
0x00014442      64488b042528.  mov rax, qword fs:[0x28]
0x0001444b      4889442478     mov qword [rsp + 0x78], rax
0x00014450      31c0           xor eax, eax
0x00014452      488d8424d000.  lea rax, [rsp + 0xd0]
0x0001445a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00014462      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0001446a      4c8d442420     lea r8, [rsp + 0x20]
0x0001446f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00014477      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0001447f      4889442410     mov qword [rsp + 0x10], rax
0x00014484      488d84248000.  lea rax, [rsp + 0x80]
0x0001448c      4531c9         xor r9d, r9d
0x0001448f      4889442418     mov qword [rsp + 0x18], rax
0x00014494      4889c5         mov rbp, rax
0x00014497      660f1f840000.  nop word [rax + rax]
0x000144a0      4183fa2f       cmp r10d, 0x2f
0x000144a4      7756           ja 0x144fc
0x000144a6      4489d0         mov eax, r10d
0x000144a9      41bb01000000   mov r11d, 1
0x000144af      4183c208       add r10d, 8
0x000144b3      4801e8         add rax, rbp
0x000144b6      488b00         mov rax, qword [rax]
0x000144b9      4885c0         test rax, rax
0x000144bc      4b8904c8       mov qword [r8 + r9*8], rax
0x000144c0      740a           je 0x144cc
0x000144c2      4983c101       add r9, 1
0x000144c6      4983f90a       cmp r9, 0xa
0x000144ca      75d4           jne 0x144a0
0x000144cc      4584db         test r11b, r11b
0x000144cf      7524           jne 0x144f5
0x000144d1      e89afaffff     call sym.version_etc_arn
0x000144d6      488b442478     mov rax, qword [rsp + 0x78]
0x000144db      644833042528.  xor rax, qword fs:[0x28]
0x000144e4      750a           jne 0x144f0
0x000144e6      4881c4b80000.  add rsp, 0xb8
0x000144ed      5b             pop rbx
0x000144ee      5d             pop rbp
0x000144ef      c3             ret
0x000144f0      e82beffeff     call sym.imp.__stack_chk_fail
0x000144f5      4489542408     mov dword [rsp + 8], r10d
0x000144fa      ebd5           jmp 0x144d1
0x000144fc      4889d8         mov rax, rbx
0x000144ff      4883c308       add rbx, 8
0x00014503      ebb1           jmp 0x144b6
0x00014505      90             nop
0x00014506      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00014510      53             push rbx
0x00014511      488d352a6300.  lea rsi, str.Report_bugs_to:__s         ; 0x1a842 ; "\nReport bugs to: %s\n"
0x00014518      ba05000000     mov edx, 5
0x0001451d      31ff           xor edi, edi
0x0001451f      e8bceefeff     call sym.imp.dcgettext
0x00014524      488d152c6300.  lea rdx, str.bug_coreutils_gnu.org      ; 0x1a857 ; "bug-coreutils@gnu.org"
0x0001452b      4889c6         mov rsi, rax
0x0001452e      bf01000000     mov edi, 1
0x00014533      31c0           xor eax, eax
0x00014535      e8d6f1feff     call sym.imp.__printf_chk
0x0001453a      488d352c6300.  lea rsi, str.s_home_page:___s           ; 0x1a86d ; "%s home page: <%s>\n"
0x00014541      ba05000000     mov edx, 5
0x00014546      31ff           xor edi, edi
0x00014548      e893eefeff     call sym.imp.dcgettext
0x0001454d      488d0d145700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x19c68 ; "https://www.gnu.org/software/coreutils/"
0x00014554      488d157b3400.  lea rdx, str.GNU_coreutils              ; 0x179d6 ; "GNU coreutils"
0x0001455b      4889c6         mov rsi, rax
0x0001455e      bf01000000     mov edi, 1
0x00014563      31c0           xor eax, eax
0x00014565      e8a6f1feff     call sym.imp.__printf_chk
0x0001456a      488b1d17bd20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x220288:8]=0
0x00014571      488d35286500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x1aaa0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00014578      31ff           xor edi, edi
0x0001457a      ba05000000     mov edx, 5
0x0001457f      e85ceefeff     call sym.imp.dcgettext
0x00014584      4889de         mov rsi, rbx
0x00014587      4889c7         mov rdi, rax
0x0001458a      5b             pop rbx
0x0001458b      e9e0effeff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00014590      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00014591      4889fb         mov rbx, rdi
0x00014594      e8eff2feff     call 0x3888                             ; ../coreutils-8.31/lib/xmalloc.c:41
0x00014599      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0001459c      7505           jne 0x145a3
0x0001459e      4885db         test rbx, rbx
0x000145a1      7502           jne 0x145a5
0x000145a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000145a4      c3             ret
0x000145a5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000145aa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000145b0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000145b3      48f7e6         mul rsi
0x000145b6      4889c7         mov rdi, rax
0x000145b9      0f90c0         seto al
0x000145bc      4885ff         test rdi, rdi
0x000145bf      780a           js 0x145cb
0x000145c1      0fb6c0         movzx eax, al
0x000145c4      4885c0         test rax, rax
0x000145c7      7502           jne 0x145cb
0x000145c9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000145cb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000145cf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000145d4      6690           nop
0x000145d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000145e0      ebae           jmp sym.xmalloc
0x000145e2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000145e6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000145f0      4885f6         test rsi, rsi
0x000145f3      53             push rbx
0x000145f4      4889f3         mov rbx, rsi
0x000145f7      7505           jne 0x145fe
0x000145f9      4885ff         test rdi, rdi
0x000145fc      751a           jne 0x14618
0x000145fe      4889de         mov rsi, rbx
0x00014601      e8daf0feff     call sym.imp.realloc
0x00014606      4885c0         test rax, rax
0x00014609      7505           jne 0x14610
0x0001460b      4885db         test rbx, rbx
0x0001460e      7511           jne 0x14621                             ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00014610      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00014611      c3             ret
0x00014612      660f1f440000   nop word [rax + rax]
0x00014618      e863f2feff     call sym..plt.got
0x0001461d      31c0           xor eax, eax
0x0001461f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00014620      c3             ret
0x00014621      e8ba010000     call sym.xalloc_die
0x00014626      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00014630      4889f0         mov rax, rsi
0x00014633      48f7e2         mul rdx
0x00014636      4889c6         mov rsi, rax
0x00014639      0f90c0         seto al
0x0001463c      4885f6         test rsi, rsi
0x0001463f      780a           js 0x1464b
0x00014641      0fb6c0         movzx eax, al
0x00014644      4885c0         test rax, rax
0x00014647      7502           jne 0x1464b
0x00014649      eba5           jmp sym.xrealloc
0x0001464b      4883ec08       sub rsp, 8
0x0001464f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00014654      6690           nop
0x00014656      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00014660      4885ff         test rdi, rdi
0x00014663      4989d1         mov r9, rdx
0x00014666      488b0e         mov rcx, qword [rsi]
0x00014669      7435           je 0x146a0
0x0001466b      31d2           xor edx, edx
0x0001466d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00014677      49f7f1         div r9
0x0001467a      4839c8         cmp rax, rcx
0x0001467d      763c           jbe 0x146bb
0x0001467f      4889c8         mov rax, rcx
0x00014682      48d1e8         shr rax, 1
0x00014685      488d4c0801     lea rcx, [rax + rcx + 1]
0x0001468a      48890e         mov qword [rsi], rcx
0x0001468d      490fafc9       imul rcx, r9
0x00014691      4889ce         mov rsi, rcx
0x00014694      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00014699      0f1f80000000.  nop dword [rax]
0x000146a0      4885c9         test rcx, rcx
0x000146a3      7423           je 0x146c8
0x000146a5      4889c8         mov rax, rcx
0x000146a8      49f7e1         mul r9
0x000146ab      0f90c2         seto dl
0x000146ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000146b1      0fb6d2         movzx edx, dl
0x000146b4      7805           js 0x146bb
0x000146b6      4885d2         test rdx, rdx
0x000146b9      74cf           je 0x1468a
0x000146bb      4883ec08       sub rsp, 8
0x000146bf      e81c010000     call sym.xalloc_die
0x000146c4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000146c8      31d2           xor edx, edx
0x000146ca      b880000000     mov eax, 0x80
0x000146cf      4531c0         xor r8d, r8d
0x000146d2      49f7f1         div r9
0x000146d5      4885c0         test rax, rax
0x000146d8      410f94c0       sete r8b
0x000146dc      498d0c00       lea rcx, [r8 + rax]
0x000146e0      ebc3           jmp 0x146a5
0x000146e2      0f1f4000       nop dword [rax]
0x000146e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000146f0      4885ff         test rdi, rdi
0x000146f3      488b06         mov rax, qword [rsi]
0x000146f6      7428           je 0x14720
0x000146f8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00014702      4839d0         cmp rax, rdx
0x00014705      772a           ja 0x14731
0x00014707      4889c2         mov rdx, rax
0x0001470a      48d1ea         shr rdx, 1
0x0001470d      488d440201     lea rax, [rdx + rax + 1]
0x00014712      488906         mov qword [rsi], rax
0x00014715      4889c6         mov rsi, rax
0x00014718      e9d3feffff     jmp sym.xrealloc
0x0001471d      0f1f00         nop dword [rax]
0x00014720      4885c0         test rax, rax
0x00014723      ba80000000     mov edx, 0x80
0x00014728      480f44c2       cmove rax, rdx
0x0001472c      4885c0         test rax, rax
0x0001472f      79e1           jns 0x14712
0x00014731      4883ec08       sub rsp, 8
0x00014735      e8a6000000     call sym.xalloc_die
0x0001473a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00014740      53             push rbx
0x00014741      4889fb         mov rbx, rdi
0x00014744      e847feffff     call sym.xmalloc
0x00014749      4889da         mov rdx, rbx
0x0001474c      31f6           xor esi, esi
0x0001474e      4889c7         mov rdi, rax
0x00014751      5b             pop rbx
0x00014752      e9a9edfeff     jmp sym.imp.memset
0x00014757      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00014760      4889f8         mov rax, rdi
0x00014763      4883ec08       sub rsp, 8
0x00014767      48f7e6         mul rsi
0x0001476a      0f90c2         seto dl
0x0001476d      4885c0         test rax, rax
0x00014770      7817           js 0x14789
0x00014772      0fb6d2         movzx edx, dl
0x00014775      4885d2         test rdx, rdx
0x00014778      750f           jne 0x14789
0x0001477a      e801eefeff     call sym.imp.calloc
0x0001477f      4885c0         test rax, rax
0x00014782      7405           je 0x14789
0x00014784      4883c408       add rsp, 8
0x00014788      c3             ret
0x00014789      e852000000     call sym.xalloc_die
0x0001478e      6690           nop
;-- xmemdup:
0x00014790      55             push rbp
0x00014791      53             push rbx
0x00014792      4889fd         mov rbp, rdi
0x00014795      4889f7         mov rdi, rsi
0x00014798      4889f3         mov rbx, rsi
0x0001479b      4883ec08       sub rsp, 8
0x0001479f      e8ecfdffff     call sym.xmalloc
0x000147a4      4883c408       add rsp, 8
0x000147a8      4889da         mov rdx, rbx
0x000147ab      4889ee         mov rsi, rbp
0x000147ae      5b             pop rbx
0x000147af      5d             pop rbp
0x000147b0      4889c7         mov rdi, rax
0x000147b3      e938eefeff     jmp sym.imp.memcpy
0x000147b8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000147c0      53             push rbx
0x000147c1      4889fb         mov rbx, rdi
0x000147c4      e837ecfeff     call sym.imp.strlen
0x000147c9      4889df         mov rdi, rbx
0x000147cc      488d7001       lea rsi, [rax + 1]
0x000147d0      5b             pop rbx
0x000147d1      ebbd           jmp sym.xmemdup
0x000147d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000147dd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000147e0      488d35686300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1ab4f ; "memory exhausted"
0x000147e7      4883ec08       sub rsp, 8
0x000147eb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000147f0      31ff           xor edi, edi
0x000147f2      e8e9ebfeff     call sym.imp.dcgettext
0x000147f7      8b3dfbb92000   mov edi, dword [obj.exit_failure]       ; [0x2201f8:4]=1
0x000147fd      488d15885700.  lea rdx, [0x00019f8c]                   ; "%s"
0x00014804      4889c1         mov rcx, rax
0x00014807      31f6           xor esi, esi
0x00014809      31c0           xor eax, eax
0x0001480b      e850effeff     call sym.imp.error
0x00014810      e87beafeff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00014815      662e0f1f8400.  nop word cs:[rax + rax]
0x0001481f      90             nop
;-- xnumtoumax:
0x00014820      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00014822      4156           push r14
0x00014824      4989cf         mov r15, rcx
0x00014827      4155           push r13
0x00014829      4154           push r12
0x0001482b      4989d6         mov r14, rdx
0x0001482e      55             push rbp
0x0001482f      53             push rbx
0x00014830      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00014832      31f6           xor esi, esi
0x00014834      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00014837      4d89cd         mov r13, r9
0x0001483a      4883ec18       sub rsp, 0x18
0x0001483e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00014841      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00014845      64488b042528.  mov rax, qword fs:[0x28]
0x0001484e      4889442408     mov qword [rsp + 8], rax
0x00014853      31c0           xor eax, eax
0x00014855      e8d6060000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x0001485a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x0001485c      0f858e000000   jne 0x148f0
0x00014862      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00014866      4c39f5         cmp rbp, r14
0x00014869      7205           jb 0x14870
0x0001486b      4c39fd         cmp rbp, r15
0x0001486e      7654           jbe 0x148c4
0x00014870      e82beafeff     call sym.imp.__errno_location
0x00014875      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x0001487c      4989c6         mov r14, rax
0x0001487f      19c0           sbb eax, eax
0x00014881      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00014884      83c04b         add eax, 0x4b
0x00014887      418906         mov dword [r14], eax
0x0001488a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x0001488d      e8cef4ffff     call sym.quote
0x00014892      418b36         mov esi, dword [r14]
0x00014895      4989c0         mov r8, rax
0x00014898      b800000000     mov eax, 0
0x0001489d      488d15b43100.  lea rdx, str.s:__s                      ; 0x17a58 ; "%s: %s"
0x000148a4      4c89e9         mov rcx, r13
0x000148a7      83fe16         cmp esi, 0x16
0x000148aa      0f44f0         cmove esi, eax
0x000148ad      85db           test ebx, ebx
0x000148af      b801000000     mov eax, 1
0x000148b4      0f44d8         cmove ebx, eax
0x000148b7      31c0           xor eax, eax
0x000148b9      89df           mov edi, ebx
0x000148bb      e8a0eefeff     call sym.imp.error
0x000148c0      488b2c24       mov rbp, qword [rsp]
0x000148c4      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x000148c9      644833142528.  xor rdx, qword fs:[0x28]
0x000148d2      4889e8         mov rax, rbp
0x000148d5      7544           jne 0x1491b
0x000148d7      4883c418       add rsp, 0x18
0x000148db      5b             pop rbx
0x000148dc      5d             pop rbp
0x000148dd      415c           pop r12
0x000148df      415d           pop r13
0x000148e1      415e           pop r14
0x000148e3      415f           pop r15
0x000148e5      c3             ret
0x000148e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000148f0      89c5           mov ebp, eax
0x000148f2      e8a9e9feff     call sym.imp.__errno_location
0x000148f7      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x000148fa      4989c6         mov r14, rax
0x000148fd      7411           je 0x14910
0x000148ff      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00014902      7586           jne 0x1488a
0x00014904      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0001490a      e97bffffff     jmp 0x1488a
0x0001490f      90             nop
0x00014910      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00014916      e96fffffff     jmp 0x1488a
0x0001491b      e800ebfeff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00014920      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00014924      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00014926      4d89c1         mov r9, r8
0x00014929      4989c8         mov r8, rcx
0x0001492c      4889d1         mov rcx, rdx
0x0001492f      4889f2         mov rdx, rsi
0x00014932      be0a000000     mov esi, 0xa
0x00014937      e8e4feffff     call sym.xnumtoumax
0x0001493c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00014940      c3             ret
0x00014941      662e0f1f8400.  nop word cs:[rax + rax]
0x0001494b      0f1f440000     nop dword [rax + rax]
;-- xgetcwd:
0x00014950      53             push rbx                                ; ../coreutils-8.31/lib/xgetcwd.c:36
0x00014951      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x00014953      31ff           xor edi, edi
0x00014955      e8c6ebfeff     call sym.imp.getcwd
0x0001495a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x0001495d      4889c3         mov rbx, rax                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x00014960      740e           je 0x14970                              ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00014962      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xgetcwd.c:41
0x00014965      5b             pop rbx
0x00014966      c3             ret
0x00014967      660f1f840000.  nop word [rax + rax]
0x00014970      e82be9feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x00014975      83380c         cmp dword [rax], 0xc
0x00014978      75e8           jne 0x14962
0x0001497a      e861feffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetcwd.c:39
0x0001497f      90             nop
;-- xgethostname:
0x00014980      4156           push r14                                ; ../coreutils-8.31/lib/xgethostname.c:41
0x00014982      4155           push r13
0x00014984      49bd01104000.  movabs r13, 0x1000401001                ; ../coreutils-8.31/lib/xgethostname.c:62
0x0001498e      4154           push r12                                ; ../coreutils-8.31/lib/xgethostname.c:41
0x00014990      55             push rbp
0x00014991      53             push rbx
0x00014992      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/xgethostname.c:42
0x00014994      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xgethostname.c:41
0x00014998      64488b042528.  mov rax, qword fs:[0x28]
0x000149a1      4889442408     mov qword [rsp + 8], rax
0x000149a6      31c0           xor eax, eax
0x000149a8      48c704242200.  mov qword [rsp], 0x22                   ; ../coreutils-8.31/lib/xgethostname.c:43 ; '"'
                                                                       ; [0x22:8]=0x8158000000000000
0x000149b0      4989e4         mov r12, rsp
0x000149b3      e8e8e8feff     call sym.imp.__errno_location
0x000149b8      4889c5         mov rbp, rax
0x000149bb      0f1f440000     nop dword [rax + rax]
0x000149c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/xgethostname.c:52
0x000149c3      4c89e6         mov rsi, r12
0x000149c6      e825fdffff     call sym.x2realloc
0x000149cb      488b3424       mov rsi, qword [rsp]                    ; ../coreutils-8.31/lib/xgethostname.c:53
0x000149cf      4889c7         mov rdi, rax                            ; unistd.h:354   return __gethostname_alias (__buf, __buflen);
0x000149d2      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xgethostname.c:52
0x000149d5      4c8d7430fe     lea r14, [rax + rsi - 2]                ; ../coreutils-8.31/lib/xgethostname.c:54
0x000149da      4883ee01       sub rsi, 1                              ; ../coreutils-8.31/lib/xgethostname.c:53
0x000149de      41c60600       mov byte [r14], 0                       ; ../coreutils-8.31/lib/xgethostname.c:54
0x000149e2      c74500000000.  mov dword [rbp], 0                      ; ../coreutils-8.31/lib/xgethostname.c:55
0x000149e9      e8d2edfeff     call sym.imp.gethostname                ; unistd.h:354   return __gethostname_alias (__buf, __buflen);
0x000149ee      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xgethostname.c:57
0x000149f0      752e           jne 0x14a20
0x000149f2      41803e00       cmp byte [r14], 0                       ; ../coreutils-8.31/lib/xgethostname.c:59
0x000149f6      75c8           jne 0x149c0
0x000149f8      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xgethostname.c:74
0x000149fd      644833142528.  xor rdx, qword fs:[0x28]
0x00014a06      4889d8         mov rax, rbx
0x00014a09      7541           jne 0x14a4c
0x00014a0b      4883c410       add rsp, 0x10
0x00014a0f      5b             pop rbx
0x00014a10      5d             pop rbp
0x00014a11      415c           pop r12
0x00014a13      415d           pop r13
0x00014a15      415e           pop r14
0x00014a17      c3             ret
0x00014a18      0f1f84000000.  nop dword [rax + rax]
0x00014a20      448b7500       mov r14d, dword [rbp]                   ; ../coreutils-8.31/lib/xgethostname.c:62
0x00014a24      4183fe24       cmp r14d, 0x24
0x00014a28      7616           jbe 0x14a40
0x00014a2a      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/xgethostname.c:67
0x00014a2d      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/xgethostname.c:69
0x00014a2f      e84ceefeff     call sym..plt.got                       ; ../coreutils-8.31/lib/xgethostname.c:67
0x00014a34      44897500       mov dword [rbp], r14d                   ; ../coreutils-8.31/lib/xgethostname.c:68
0x00014a38      ebbe           jmp 0x149f8                             ; ../coreutils-8.31/lib/xgethostname.c:69
0x00014a3a      660f1f440000   nop word [rax + rax]
0x00014a40      4d0fa3f5       bt r13, r14                             ; ../coreutils-8.31/lib/xgethostname.c:64
0x00014a44      0f8276ffffff   jb 0x149c0
0x00014a4a      ebde           jmp 0x14a2a
0x00014a4c      e8cfe9feff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xgethostname.c:74
0x00014a51      662e0f1f8400.  nop word cs:[rax + rax]
0x00014a5b      0f1f440000     nop dword [rax + rax]
;-- xstrtoul:
0x00014a60      4157           push r15
0x00014a62      4156           push r14
0x00014a64      4155           push r13
0x00014a66      4154           push r12
0x00014a68      55             push rbp
0x00014a69      53             push rbx
0x00014a6a      4883ec28       sub rsp, 0x28
0x00014a6e      64488b042528.  mov rax, qword fs:[0x28]
0x00014a77      4889442418     mov qword [rsp + 0x18], rax
0x00014a7c      31c0           xor eax, eax
0x00014a7e      83fa24         cmp edx, 0x24
0x00014a81      0f875e030000   ja 0x14de5
0x00014a87      488d442410     lea rax, [rsp + 0x10]
0x00014a8c      4989f7         mov r15, rsi
0x00014a8f      4885f6         test rsi, rsi
0x00014a92      4889fd         mov rbp, rdi
0x00014a95      89542408       mov dword [rsp + 8], edx
0x00014a99      4989ce         mov r14, rcx
0x00014a9c      4d89c5         mov r13, r8
0x00014a9f      4c0f44f8       cmove r15, rax
0x00014aa3      e8f8e7feff     call sym.imp.__errno_location
0x00014aa8      c70000000000   mov dword [rax], 0
0x00014aae      4989c4         mov r12, rax
0x00014ab1      0fb65d00       movzx ebx, byte [rbp]
0x00014ab5      e8a6edfeff     call sym.imp.__ctype_b_loc
0x00014aba      8b542408       mov edx, dword [rsp + 8]
0x00014abe      488b30         mov rsi, qword [rax]
0x00014ac1      4889e8         mov rax, rbp
0x00014ac4      eb11           jmp 0x14ad7
0x00014ac6      662e0f1f8400.  nop word cs:[rax + rax]
0x00014ad0      4883c001       add rax, 1
0x00014ad4      0fb618         movzx ebx, byte [rax]
0x00014ad7      0fb6cb         movzx ecx, bl
0x00014ada      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00014adf      75ef           jne 0x14ad0
0x00014ae1      80fb2d         cmp bl, 0x2d
0x00014ae4      7452           je 0x14b38
0x00014ae6      4c89fe         mov rsi, r15
0x00014ae9      4889ef         mov rdi, rbp
0x00014aec      e89fecfeff     call sym.imp.strtoul
0x00014af1      498b0f         mov rcx, qword [r15]
0x00014af4      4889c3         mov rbx, rax
0x00014af7      4839e9         cmp rcx, rbp
0x00014afa      742c           je 0x14b28
0x00014afc      418b0424       mov eax, dword [r12]
0x00014b00      85c0           test eax, eax
0x00014b02      7464           je 0x14b68
0x00014b04      83f822         cmp eax, 0x22
0x00014b07      bd01000000     mov ebp, 1
0x00014b0c      752a           jne 0x14b38
0x00014b0e      4d85ed         test r13, r13
0x00014b11      7409           je 0x14b1c
0x00014b13      440fb621       movzx r12d, byte [rcx]
0x00014b17      4584e4         test r12b, r12b
0x00014b1a      757b           jne 0x14b97
0x00014b1c      49891e         mov qword [r14], rbx
0x00014b1f      eb1c           jmp 0x14b3d
0x00014b21      0f1f80000000.  nop dword [rax]
0x00014b28      4d85ed         test r13, r13
0x00014b2b      48894c2408     mov qword [rsp + 8], rcx
0x00014b30      753e           jne 0x14b70
0x00014b32      660f1f440000   nop word [rax + rax]
0x00014b38      bd04000000     mov ebp, 4
0x00014b3d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00014b42      6448333c2528.  xor rdi, qword fs:[0x28]
0x00014b4b      89e8           mov eax, ebp
0x00014b4d      0f858d020000   jne 0x14de0
0x00014b53      4883c428       add rsp, 0x28
0x00014b57      5b             pop rbx
0x00014b58      5d             pop rbp
0x00014b59      415c           pop r12
0x00014b5b      415d           pop r13
0x00014b5d      415e           pop r14
0x00014b5f      415f           pop r15
0x00014b61      c3             ret
0x00014b62      660f1f440000   nop word [rax + rax]
0x00014b68      31ed           xor ebp, ebp
0x00014b6a      eba2           jmp 0x14b0e
0x00014b6c      0f1f4000       nop dword [rax]
0x00014b70      440fb66500     movzx r12d, byte [rbp]
0x00014b75      4584e4         test r12b, r12b
0x00014b78      74be           je 0x14b38
0x00014b7a      410fbef4       movsx esi, r12b
0x00014b7e      4c89ef         mov rdi, r13
0x00014b81      31ed           xor ebp, ebp
0x00014b83      e8c8e8feff     call sym.imp.strchr
0x00014b88      4885c0         test rax, rax
0x00014b8b      bb01000000     mov ebx, 1
0x00014b90      488b4c2408     mov rcx, qword [rsp + 8]
0x00014b95      74a1           je 0x14b38
0x00014b97      410fbef4       movsx esi, r12b
0x00014b9b      4c89ef         mov rdi, r13
0x00014b9e      48894c2408     mov qword [rsp + 8], rcx
0x00014ba3      e8a8e8feff     call sym.imp.strchr
0x00014ba8      4885c0         test rax, rax
0x00014bab      488b4c2408     mov rcx, qword [rsp + 8]
0x00014bb0      0f84c6000000   je 0x14c7c
0x00014bb6      418d4424bb     lea eax, [r12 - 0x45]
0x00014bbb      3c2f           cmp al, 0x2f
0x00014bbd      7751           ja 0x14c10
0x00014bbf      48ba45893000.  movabs rdx, 0x814400308945
0x00014bc9      480fa3c2       bt rdx, rax
0x00014bcd      7341           jae 0x14c10
0x00014bcf      be30000000     mov esi, 0x30                           ; '0'
0x00014bd4      4c89ef         mov rdi, r13
0x00014bd7      48894c2408     mov qword [rsp + 8], rcx
0x00014bdc      e86fe8feff     call sym.imp.strchr
0x00014be1      4885c0         test rax, rax
0x00014be4      488b4c2408     mov rcx, qword [rsp + 8]
0x00014be9      7425           je 0x14c10
0x00014beb      0fb64101       movzx eax, byte [rcx + 1]
0x00014bef      3c44           cmp al, 0x44
0x00014bf1      740c           je 0x14bff
0x00014bf3      3c69           cmp al, 0x69
0x00014bf5      0f84cd010000   je 0x14dc8
0x00014bfb      3c42           cmp al, 0x42
0x00014bfd      7511           jne 0x14c10
0x00014bff      bf02000000     mov edi, 2
0x00014c04      bee8030000     mov esi, 0x3e8
0x00014c09      eb0f           jmp 0x14c1a
0x00014c0b      0f1f440000     nop dword [rax + rax]
0x00014c10      bf01000000     mov edi, 1
0x00014c15      be00040000     mov esi, 0x400
0x00014c1a      4183ec42       sub r12d, 0x42
0x00014c1e      4180fc35       cmp r12b, 0x35
0x00014c22      7758           ja 0x14c7c
0x00014c24      488d157d5f00.  lea rdx, [0x0001aba8]
0x00014c2b      450fb6e4       movzx r12d, r12b
0x00014c2f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00014c33      4801d0         add rax, rdx
0x00014c36      ffe0           jmp rax
0x00014c38      4889d8         mov rax, rbx
0x00014c3b      48f7e6         mul rsi
0x00014c3e      0f80ed010000   jo 0x14e31
0x00014c44      4531c0         xor r8d, r8d
0x00014c47      48f7e6         mul rsi
0x00014c4a      0f80d2010000   jo 0x14e22
0x00014c50      4889c3         mov rbx, rax
0x00014c53      4409c5         or ebp, r8d
0x00014c56      662e0f1f8400.  nop word cs:[rax + rax]
0x00014c60      4863ff         movsxd rdi, edi
0x00014c63      89e8           mov eax, ebp
0x00014c65      4801f9         add rcx, rdi
0x00014c68      83c802         or eax, 2
0x00014c6b      49890f         mov qword [r15], rcx
0x00014c6e      803900         cmp byte [rcx], 0
0x00014c71      49891e         mov qword [r14], rbx
0x00014c74      0f45e8         cmovne ebp, eax
0x00014c77      e9c1feffff     jmp 0x14b3d
0x00014c7c      49891e         mov qword [r14], rbx
0x00014c7f      83cd02         or ebp, 2
0x00014c82      e9b6feffff     jmp 0x14b3d
0x00014c87      ba02000000     mov edx, 2
0x00014c8c      4889d0         mov rax, rdx
0x00014c8f      48f7e3         mul rbx
0x00014c92      0f8096000000   jo 0x14d2e
0x00014c98      4801db         add rbx, rbx
0x00014c9b      ebc3           jmp 0x14c60
0x00014c9d      ba00020000     mov edx, 0x200
0x00014ca2      4889d0         mov rax, rdx
0x00014ca5      48f7e3         mul rbx
0x00014ca8      0f8080000000   jo 0x14d2e
0x00014cae      48c1e309       shl rbx, 9
0x00014cb2      ebac           jmp 0x14c60
0x00014cb4      41b807000000   mov r8d, 7
0x00014cba      4531c9         xor r9d, r9d
0x00014cbd      0f1f00         nop dword [rax]
0x00014cc0      4889d8         mov rax, rbx
0x00014cc3      48f7e6         mul rsi
0x00014cc6      4889c3         mov rbx, rax
0x00014cc9      0f808f010000   jo 0x14e5e
0x00014ccf      4183e801       sub r8d, 1
0x00014cd3      75eb           jne 0x14cc0
0x00014cd5      4409cd         or ebp, r9d
0x00014cd8      eb86           jmp 0x14c60
0x00014cda      41b808000000   mov r8d, 8
0x00014ce0      4531c9         xor r9d, r9d
0x00014ce3      0f1f440000     nop dword [rax + rax]
0x00014ce8      4889d8         mov rax, rbx
0x00014ceb      48f7e6         mul rsi
0x00014cee      4889c3         mov rbx, rax
0x00014cf1      0f8049010000   jo 0x14e40
0x00014cf7      4183e801       sub r8d, 1
0x00014cfb      75eb           jne 0x14ce8
0x00014cfd      ebd6           jmp 0x14cd5
0x00014cff      41b804000000   mov r8d, 4
0x00014d05      4531c9         xor r9d, r9d
0x00014d08      4889d8         mov rax, rbx
0x00014d0b      48f7e6         mul rsi
0x00014d0e      4889c3         mov rbx, rax
0x00014d11      0f80fc000000   jo 0x14e13
0x00014d17      4183e801       sub r8d, 1
0x00014d1b      75eb           jne 0x14d08
0x00014d1d      ebb6           jmp 0x14cd5
0x00014d1f      4889d8         mov rax, rbx
0x00014d22      48f7e6         mul rsi
0x00014d25      4889c3         mov rbx, rax
0x00014d28      0f8132ffffff   jno 0x14c60
0x00014d2e      bd01000000     mov ebp, 1
0x00014d33      4883cbff       or rbx, 0xffffffffffffffff
0x00014d37      e924ffffff     jmp 0x14c60
0x00014d3c      0f1f4000       nop dword [rax]
0x00014d40      41b805000000   mov r8d, 5
0x00014d46      4531c9         xor r9d, r9d
0x00014d49      4889d8         mov rax, rbx
0x00014d4c      48f7e6         mul rsi
0x00014d4f      4889c3         mov rbx, rax
0x00014d52      0f80f7000000   jo 0x14e4f
0x00014d58      4183e801       sub r8d, 1
0x00014d5c      75eb           jne 0x14d49
0x00014d5e      e972ffffff     jmp 0x14cd5
0x00014d63      41b806000000   mov r8d, 6
0x00014d69      4531c9         xor r9d, r9d
0x00014d6c      4889d8         mov rax, rbx
0x00014d6f      48f7e6         mul rsi
0x00014d72      4889c3         mov rbx, rax
0x00014d75      0f8089000000   jo 0x14e04
0x00014d7b      4183e801       sub r8d, 1
0x00014d7f      75eb           jne 0x14d6c
0x00014d81      e94fffffff     jmp 0x14cd5
0x00014d86      ba00040000     mov edx, 0x400
0x00014d8b      4889d0         mov rax, rdx
0x00014d8e      48f7e3         mul rbx
0x00014d91      709b           jo 0x14d2e
0x00014d93      48c1e30a       shl rbx, 0xa
0x00014d97      e9c4feffff     jmp 0x14c60
0x00014d9c      4889d8         mov rax, rbx
0x00014d9f      48f7e6         mul rsi
0x00014da2      0f80c5000000   jo 0x14e6d
0x00014da8      4531c0         xor r8d, r8d
0x00014dab      48f7e6         mul rsi
0x00014dae      0f8193feffff   jno 0x14c47
0x00014db4      41b801000000   mov r8d, 1
0x00014dba      4883c8ff       or rax, 0xffffffffffffffff
0x00014dbe      e984feffff     jmp 0x14c47
0x00014dc3      0f1f440000     nop dword [rax + rax]
0x00014dc8      31ff           xor edi, edi
0x00014dca      80790242       cmp byte [rcx + 2], 0x42
0x00014dce      be00040000     mov esi, 0x400
0x00014dd3      400f94c7       sete dil
0x00014dd7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00014ddb      e93afeffff     jmp 0x14c1a
0x00014de0      e83be6feff     call sym.imp.__stack_chk_fail
0x00014de5      488d0d945e00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x1ac80 ; "xstrtoul"
0x00014dec      488d356d5d00.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x1ab60 ; "../coreutils-8.31/lib/xstrtol.c"
0x00014df3      488d3d865d00.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x1ab80 ; "0 <= strtol_base && strtol_base <= 36"
0x00014dfa      ba54000000     mov edx, 0x54                           ; 'T'
0x00014dff      e8cce6feff     call sym.imp.__assert_fail
0x00014e04      41b901000000   mov r9d, 1
0x00014e0a      4883cbff       or rbx, 0xffffffffffffffff
0x00014e0e      e968ffffff     jmp 0x14d7b
0x00014e13      41b901000000   mov r9d, 1
0x00014e19      4883cbff       or rbx, 0xffffffffffffffff
0x00014e1d      e9f5feffff     jmp 0x14d17
0x00014e22      41b801000000   mov r8d, 1
0x00014e28      4883cbff       or rbx, 0xffffffffffffffff
0x00014e2c      e922feffff     jmp 0x14c53
0x00014e31      4883c8ff       or rax, 0xffffffffffffffff
0x00014e35      41b801000000   mov r8d, 1
0x00014e3b      e907feffff     jmp 0x14c47
0x00014e40      41b901000000   mov r9d, 1
0x00014e46      4883cbff       or rbx, 0xffffffffffffffff
0x00014e4a      e9a8feffff     jmp 0x14cf7
0x00014e4f      41b901000000   mov r9d, 1
0x00014e55      4883cbff       or rbx, 0xffffffffffffffff
0x00014e59      e9fafeffff     jmp 0x14d58
0x00014e5e      41b901000000   mov r9d, 1
0x00014e64      4883cbff       or rbx, 0xffffffffffffffff
0x00014e68      e962feffff     jmp 0x14ccf
0x00014e6d      41b801000000   mov r8d, 1
0x00014e73      4883c8ff       or rax, 0xffffffffffffffff
0x00014e77      e92fffffff     jmp 0x14dab
0x00014e7c      0f1f4000       nop dword [rax]
;-- xstrtol_fatal:
0x00014e80      4155           push r13
0x00014e82      4154           push r12
0x00014e84      4189f2         mov r10d, esi
0x00014e87      55             push rbp
0x00014e88      53             push rbx
0x00014e89      4d89c4         mov r12, r8
0x00014e8c      4883ec18       sub rsp, 0x18
0x00014e90      64488b042528.  mov rax, qword fs:[0x28]
0x00014e99      4889442408     mov qword [rsp + 8], rax
0x00014e9e      31c0           xor eax, eax
0x00014ea0      83ff03         cmp edi, 3
0x00014ea3      8b2d4fb32000   mov ebp, dword [obj.exit_failure]       ; [0x2201f8:4]=1
0x00014ea9      7759           ja 0x14f04
0x00014eab      83ff02         cmp edi, 2
0x00014eae      734b           jae 0x14efb
0x00014eb0      83ef01         sub edi, 1
0x00014eb3      488d35ea5d00.  lea rsi, str.s_s_argument___s__too_large ; 0x1aca4 ; "%s%s argument '%s' too large"
0x00014eba      753a           jne 0x14ef6
0x00014ebc      4585d2         test r10d, r10d
0x00014ebf      4963c2         movsxd rax, r10d
0x00014ec2      784e           js 0x14f12
0x00014ec4      48c1e005       shl rax, 5
0x00014ec8      488d1df25d00.  lea rbx, [0x0001acc1]                   ; "--"
0x00014ecf      4c8b2c01       mov r13, qword [rcx + rax]
0x00014ed3      ba05000000     mov edx, 5
0x00014ed8      31ff           xor edi, edi
0x00014eda      e801e5feff     call sym.imp.dcgettext
0x00014edf      4d89e1         mov r9, r12
0x00014ee2      4889c2         mov rdx, rax
0x00014ee5      4d89e8         mov r8, r13
0x00014ee8      4889d9         mov rcx, rbx
0x00014eeb      31f6           xor esi, esi
0x00014eed      89ef           mov edi, ebp
0x00014eef      31c0           xor eax, eax
0x00014ef1      e86ae8feff     call sym.imp.error
0x00014ef6      e895e3feff     call sym.imp.abort
0x00014efb      488d35c65d00.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0x1acc8 ; "invalid suffix in %s%s argument '%s'"
0x00014f02      ebb8           jmp 0x14ebc
0x00014f04      83ff04         cmp edi, 4
0x00014f07      488d357b5d00.  lea rsi, str.invalid__s_s_argument___s  ; 0x1ac89 ; "invalid %s%s argument '%s'"
0x00014f0e      74ac           je 0x14ebc
0x00014f10      ebe4           jmp 0x14ef6
0x00014f12      488d1da85d00.  lea rbx, [0x0001acc1]                   ; "--"
0x00014f19      88542406       mov byte [rsp + 6], dl
0x00014f1d      c644240700     mov byte [rsp + 7], 0
0x00014f22      4c8d6c2406     lea r13, [rsp + 6]
0x00014f27      4829c3         sub rbx, rax
0x00014f2a      eba7           jmp 0x14ed3
0x00014f2c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x00014f30      4157           push r15
0x00014f32      4156           push r14
0x00014f34      4155           push r13
0x00014f36      4154           push r12
0x00014f38      55             push rbp
0x00014f39      53             push rbx
0x00014f3a      4883ec28       sub rsp, 0x28
0x00014f3e      64488b042528.  mov rax, qword fs:[0x28]
0x00014f47      4889442418     mov qword [rsp + 0x18], rax
0x00014f4c      31c0           xor eax, eax
0x00014f4e      83fa24         cmp edx, 0x24
0x00014f51      0f875e030000   ja 0x152b5
0x00014f57      488d442410     lea rax, [rsp + 0x10]
0x00014f5c      4989f7         mov r15, rsi
0x00014f5f      4885f6         test rsi, rsi
0x00014f62      4889fd         mov rbp, rdi
0x00014f65      89542408       mov dword [rsp + 8], edx
0x00014f69      4989ce         mov r14, rcx
0x00014f6c      4d89c5         mov r13, r8
0x00014f6f      4c0f44f8       cmove r15, rax
0x00014f73      e828e3feff     call sym.imp.__errno_location
0x00014f78      c70000000000   mov dword [rax], 0
0x00014f7e      4989c4         mov r12, rax
0x00014f81      0fb65d00       movzx ebx, byte [rbp]
0x00014f85      e8d6e8feff     call sym.imp.__ctype_b_loc
0x00014f8a      8b542408       mov edx, dword [rsp + 8]
0x00014f8e      488b30         mov rsi, qword [rax]
0x00014f91      4889e8         mov rax, rbp
0x00014f94      eb11           jmp 0x14fa7
0x00014f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00014fa0      4883c001       add rax, 1
0x00014fa4      0fb618         movzx ebx, byte [rax]
0x00014fa7      0fb6cb         movzx ecx, bl
0x00014faa      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00014faf      75ef           jne 0x14fa0
0x00014fb1      80fb2d         cmp bl, 0x2d
0x00014fb4      7452           je 0x15008
0x00014fb6      31c9           xor ecx, ecx
0x00014fb8      4c89fe         mov rsi, r15
0x00014fbb      4889ef         mov rdi, rbp
0x00014fbe      e81de5feff     call sym.imp.__strtoul_internal
0x00014fc3      498b0f         mov rcx, qword [r15]
0x00014fc6      4889c3         mov rbx, rax
0x00014fc9      4839e9         cmp rcx, rbp
0x00014fcc      742a           je 0x14ff8
0x00014fce      418b0424       mov eax, dword [r12]
0x00014fd2      85c0           test eax, eax
0x00014fd4      7462           je 0x15038
0x00014fd6      83f822         cmp eax, 0x22
0x00014fd9      bd01000000     mov ebp, 1
0x00014fde      7528           jne 0x15008
0x00014fe0      4d85ed         test r13, r13
0x00014fe3      7409           je 0x14fee
0x00014fe5      440fb621       movzx r12d, byte [rcx]
0x00014fe9      4584e4         test r12b, r12b
0x00014fec      7579           jne 0x15067
0x00014fee      49891e         mov qword [r14], rbx
0x00014ff1      eb1a           jmp 0x1500d
0x00014ff3      0f1f440000     nop dword [rax + rax]
0x00014ff8      4d85ed         test r13, r13
0x00014ffb      48894c2408     mov qword [rsp + 8], rcx
0x00015000      753e           jne 0x15040
0x00015002      660f1f440000   nop word [rax + rax]
0x00015008      bd04000000     mov ebp, 4
0x0001500d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00015012      6448333c2528.  xor rdi, qword fs:[0x28]
0x0001501b      89e8           mov eax, ebp
0x0001501d      0f858d020000   jne 0x152b0
0x00015023      4883c428       add rsp, 0x28
0x00015027      5b             pop rbx
0x00015028      5d             pop rbp
0x00015029      415c           pop r12
0x0001502b      415d           pop r13
0x0001502d      415e           pop r14
0x0001502f      415f           pop r15
0x00015031      c3             ret
0x00015032      660f1f440000   nop word [rax + rax]
0x00015038      31ed           xor ebp, ebp
0x0001503a      eba4           jmp 0x14fe0
0x0001503c      0f1f4000       nop dword [rax]
0x00015040      440fb66500     movzx r12d, byte [rbp]
0x00015045      4584e4         test r12b, r12b
0x00015048      74be           je 0x15008
0x0001504a      410fbef4       movsx esi, r12b
0x0001504e      4c89ef         mov rdi, r13
0x00015051      31ed           xor ebp, ebp
0x00015053      e8f8e3feff     call sym.imp.strchr
0x00015058      4885c0         test rax, rax
0x0001505b      bb01000000     mov ebx, 1
0x00015060      488b4c2408     mov rcx, qword [rsp + 8]
0x00015065      74a1           je 0x15008
0x00015067      410fbef4       movsx esi, r12b
0x0001506b      4c89ef         mov rdi, r13
0x0001506e      48894c2408     mov qword [rsp + 8], rcx
0x00015073      e8d8e3feff     call sym.imp.strchr
0x00015078      4885c0         test rax, rax
0x0001507b      488b4c2408     mov rcx, qword [rsp + 8]
0x00015080      0f84c6000000   je 0x1514c
0x00015086      418d4424bb     lea eax, [r12 - 0x45]
0x0001508b      3c2f           cmp al, 0x2f
0x0001508d      7751           ja 0x150e0
0x0001508f      48ba45893000.  movabs rdx, 0x814400308945
0x00015099      480fa3c2       bt rdx, rax
0x0001509d      7341           jae 0x150e0
0x0001509f      be30000000     mov esi, 0x30                           ; '0'
0x000150a4      4c89ef         mov rdi, r13
0x000150a7      48894c2408     mov qword [rsp + 8], rcx
0x000150ac      e89fe3feff     call sym.imp.strchr
0x000150b1      4885c0         test rax, rax
0x000150b4      488b4c2408     mov rcx, qword [rsp + 8]
0x000150b9      7425           je 0x150e0
0x000150bb      0fb64101       movzx eax, byte [rcx + 1]
0x000150bf      3c44           cmp al, 0x44
0x000150c1      740c           je 0x150cf
0x000150c3      3c69           cmp al, 0x69
0x000150c5      0f84cd010000   je 0x15298
0x000150cb      3c42           cmp al, 0x42
0x000150cd      7511           jne 0x150e0
0x000150cf      bf02000000     mov edi, 2
0x000150d4      bee8030000     mov esi, 0x3e8
0x000150d9      eb0f           jmp 0x150ea
0x000150db      0f1f440000     nop dword [rax + rax]
0x000150e0      bf01000000     mov edi, 1
0x000150e5      be00040000     mov esi, 0x400
0x000150ea      4183ec42       sub r12d, 0x42
0x000150ee      4180fc35       cmp r12b, 0x35
0x000150f2      7758           ja 0x1514c
0x000150f4      488d15f55b00.  lea rdx, [0x0001acf0]
0x000150fb      450fb6e4       movzx r12d, r12b
0x000150ff      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00015103      4801d0         add rax, rdx
0x00015106      ffe0           jmp rax
0x00015108      4889d8         mov rax, rbx
0x0001510b      48f7e6         mul rsi
0x0001510e      0f80ed010000   jo 0x15301
0x00015114      4531c0         xor r8d, r8d
0x00015117      48f7e6         mul rsi
0x0001511a      0f80d2010000   jo 0x152f2
0x00015120      4889c3         mov rbx, rax
0x00015123      4409c5         or ebp, r8d
0x00015126      662e0f1f8400.  nop word cs:[rax + rax]
0x00015130      4863ff         movsxd rdi, edi
0x00015133      89e8           mov eax, ebp
0x00015135      4801f9         add rcx, rdi
0x00015138      83c802         or eax, 2
0x0001513b      49890f         mov qword [r15], rcx
0x0001513e      803900         cmp byte [rcx], 0
0x00015141      49891e         mov qword [r14], rbx
0x00015144      0f45e8         cmovne ebp, eax
0x00015147      e9c1feffff     jmp 0x1500d
0x0001514c      49891e         mov qword [r14], rbx
0x0001514f      83cd02         or ebp, 2
0x00015152      e9b6feffff     jmp 0x1500d
0x00015157      ba02000000     mov edx, 2
0x0001515c      4889d0         mov rax, rdx
0x0001515f      48f7e3         mul rbx
0x00015162      0f8096000000   jo 0x151fe
0x00015168      4801db         add rbx, rbx
0x0001516b      ebc3           jmp 0x15130
0x0001516d      ba00020000     mov edx, 0x200
0x00015172      4889d0         mov rax, rdx
0x00015175      48f7e3         mul rbx
0x00015178      0f8080000000   jo 0x151fe
0x0001517e      48c1e309       shl rbx, 9
0x00015182      ebac           jmp 0x15130
0x00015184      41b807000000   mov r8d, 7
0x0001518a      4531c9         xor r9d, r9d
0x0001518d      0f1f00         nop dword [rax]
0x00015190      4889d8         mov rax, rbx
0x00015193      48f7e6         mul rsi
0x00015196      4889c3         mov rbx, rax
0x00015199      0f808f010000   jo 0x1532e
0x0001519f      4183e801       sub r8d, 1
0x000151a3      75eb           jne 0x15190
0x000151a5      4409cd         or ebp, r9d
0x000151a8      eb86           jmp 0x15130
0x000151aa      41b808000000   mov r8d, 8
0x000151b0      4531c9         xor r9d, r9d
0x000151b3      0f1f440000     nop dword [rax + rax]
0x000151b8      4889d8         mov rax, rbx
0x000151bb      48f7e6         mul rsi
0x000151be      4889c3         mov rbx, rax
0x000151c1      0f8049010000   jo 0x15310
0x000151c7      4183e801       sub r8d, 1
0x000151cb      75eb           jne 0x151b8
0x000151cd      ebd6           jmp 0x151a5
0x000151cf      41b804000000   mov r8d, 4
0x000151d5      4531c9         xor r9d, r9d
0x000151d8      4889d8         mov rax, rbx
0x000151db      48f7e6         mul rsi
0x000151de      4889c3         mov rbx, rax
0x000151e1      0f80fc000000   jo 0x152e3
0x000151e7      4183e801       sub r8d, 1
0x000151eb      75eb           jne 0x151d8
0x000151ed      ebb6           jmp 0x151a5
0x000151ef      4889d8         mov rax, rbx
0x000151f2      48f7e6         mul rsi
0x000151f5      4889c3         mov rbx, rax
0x000151f8      0f8132ffffff   jno 0x15130
0x000151fe      bd01000000     mov ebp, 1
0x00015203      4883cbff       or rbx, 0xffffffffffffffff
0x00015207      e924ffffff     jmp 0x15130
0x0001520c      0f1f4000       nop dword [rax]
0x00015210      41b805000000   mov r8d, 5
0x00015216      4531c9         xor r9d, r9d
0x00015219      4889d8         mov rax, rbx
0x0001521c      48f7e6         mul rsi
0x0001521f      4889c3         mov rbx, rax
0x00015222      0f80f7000000   jo 0x1531f
0x00015228      4183e801       sub r8d, 1
0x0001522c      75eb           jne 0x15219
0x0001522e      e972ffffff     jmp 0x151a5
0x00015233      41b806000000   mov r8d, 6
0x00015239      4531c9         xor r9d, r9d
0x0001523c      4889d8         mov rax, rbx
0x0001523f      48f7e6         mul rsi
0x00015242      4889c3         mov rbx, rax
0x00015245      0f8089000000   jo 0x152d4
0x0001524b      4183e801       sub r8d, 1
0x0001524f      75eb           jne 0x1523c
0x00015251      e94fffffff     jmp 0x151a5
0x00015256      ba00040000     mov edx, 0x400
0x0001525b      4889d0         mov rax, rdx
0x0001525e      48f7e3         mul rbx
0x00015261      709b           jo 0x151fe
0x00015263      48c1e30a       shl rbx, 0xa
0x00015267      e9c4feffff     jmp 0x15130
0x0001526c      4889d8         mov rax, rbx
0x0001526f      48f7e6         mul rsi
0x00015272      0f80c5000000   jo 0x1533d
0x00015278      4531c0         xor r8d, r8d
0x0001527b      48f7e6         mul rsi
0x0001527e      0f8193feffff   jno 0x15117
0x00015284      41b801000000   mov r8d, 1
0x0001528a      4883c8ff       or rax, 0xffffffffffffffff
0x0001528e      e984feffff     jmp 0x15117
0x00015293      0f1f440000     nop dword [rax + rax]
0x00015298      31ff           xor edi, edi
0x0001529a      80790242       cmp byte [rcx + 2], 0x42
0x0001529e      be00040000     mov esi, 0x400
0x000152a3      400f94c7       sete dil
0x000152a7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000152ab      e93afeffff     jmp 0x150ea
0x000152b0      e86be1feff     call sym.imp.__stack_chk_fail
0x000152b5      488d0d0c5b00.  lea rcx, obj.__PRETTY_FUNCTION__.4162_1 ; 0x1adc8 ; "xstrtoumax"
0x000152bc      488d359d5800.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x1ab60 ; "../coreutils-8.31/lib/xstrtol.c"
0x000152c3      488d3db65800.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x1ab80 ; "0 <= strtol_base && strtol_base <= 36"
0x000152ca      ba54000000     mov edx, 0x54                           ; 'T'
0x000152cf      e8fce1feff     call sym.imp.__assert_fail
0x000152d4      41b901000000   mov r9d, 1
0x000152da      4883cbff       or rbx, 0xffffffffffffffff
0x000152de      e968ffffff     jmp 0x1524b
0x000152e3      41b901000000   mov r9d, 1
0x000152e9      4883cbff       or rbx, 0xffffffffffffffff
0x000152ed      e9f5feffff     jmp 0x151e7
0x000152f2      41b801000000   mov r8d, 1
0x000152f8      4883cbff       or rbx, 0xffffffffffffffff
0x000152fc      e922feffff     jmp 0x15123
0x00015301      4883c8ff       or rax, 0xffffffffffffffff
0x00015305      41b801000000   mov r8d, 1
0x0001530b      e907feffff     jmp 0x15117
0x00015310      41b901000000   mov r9d, 1
0x00015316      4883cbff       or rbx, 0xffffffffffffffff
0x0001531a      e9a8feffff     jmp 0x151c7
0x0001531f      41b901000000   mov r9d, 1
0x00015325      4883cbff       or rbx, 0xffffffffffffffff
0x00015329      e9fafeffff     jmp 0x15228
0x0001532e      41b901000000   mov r9d, 1
0x00015334      4883cbff       or rbx, 0xffffffffffffffff
0x00015338      e962feffff     jmp 0x1519f
0x0001533d      41b801000000   mov r8d, 1
0x00015343      4883c8ff       or rax, 0xffffffffffffffff
0x00015347      e92fffffff     jmp 0x1527b
0x0001534c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00015350      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00015352      4154           push r12
0x00015354      4989f5         mov r13, rsi
0x00015357      55             push rbp
0x00015358      53             push rbx
0x00015359      4889fb         mov rbx, rdi
0x0001535c      4989d4         mov r12, rdx
0x0001535f      4883ec18       sub rsp, 0x18
0x00015363      64488b042528.  mov rax, qword fs:[0x28]
0x0001536c      4889442408     mov qword [rsp + 8], rax
0x00015371      31c0           xor eax, eax
0x00015373      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00015378      4885ff         test rdi, rdi
0x0001537b      480f44d8       cmove rbx, rax
0x0001537f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00015382      e8b9e0feff     call sym.imp.mbrtowc
0x00015387      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0001538b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0001538e      7620           jbe 0x153b0                             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00015390      4d85e4         test r12, r12
0x00015393      741b           je 0x153b0
0x00015395      31ff           xor edi, edi
0x00015397      e84483ffff     call sym.hard_locale
0x0001539c      84c0           test al, al
0x0001539e      7510           jne 0x153b0
0x000153a0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000153a5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000153aa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000153ac      0f1f4000       nop dword [rax]
0x000153b0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000153b5      644833142528.  xor rdx, qword fs:[0x28]
0x000153be      4889e8         mov rax, rbp
0x000153c1      750b           jne 0x153ce
0x000153c3      4883c418       add rsp, 0x18
0x000153c7      5b             pop rbx
0x000153c8      5d             pop rbp
0x000153c9      415c           pop r12
0x000153cb      415d           pop r13
0x000153cd      c3             ret
0x000153ce      e84de0feff     call sym.imp.__stack_chk_fail
0x000153d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000153dd      0f1f00         nop dword [rax]
;-- print_and_abort:
0x000153e0      488d35685700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/obstack.c:331 ; 0x1ab4f ; "memory exhausted"
0x000153e7      4883ec08       sub rsp, 8
0x000153eb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/obstack.c:340
0x000153f0      31ff           xor edi, edi
0x000153f2      e8e9dffeff     call sym.imp.dcgettext
0x000153f7      488b3dc2ae20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2202c0:8]=0
0x000153fe      488d15eb5300.  lea rdx, [0x0001a7f0]                   ; "%s\n"
0x00015405      4889c1         mov rcx, rax
0x00015408      be01000000     mov esi, 1
0x0001540d      31c0           xor eax, eax
0x0001540f      e8ece3feff     call sym.imp.__fprintf_chk
0x00015414      8b3ddead2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/obstack.c:342 ; [0x2201f8:4]=1
0x0001541a      e8c1e3feff     call sym.imp.exit
0x0001541f      90             nop
;-- call_chunkfun:
0x00015420      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:85
0x00015424      488b4738       mov rax, qword [rdi + 0x38]
0x00015428      7506           jne 0x15430
0x0001542a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:89
0x0001542d      ffe0           jmp rax
0x0001542f      90             nop
0x00015430      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:87
0x00015434      ffe0           jmp rax
0x00015436      662e0f1f8400.  nop word cs:[rax + rax]
;-- call_freefun:
0x00015440      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:94
0x00015444      488b4740       mov rax, qword [rdi + 0x40]
0x00015448      7506           jne 0x15450
0x0001544a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:98
0x0001544d      ffe0           jmp rax
0x0001544f      90             nop
0x00015450      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:96
0x00015454      ffe0           jmp rax
0x00015456      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_worker:
0x00015460      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:111
0x00015463      4154           push r12
0x00015465      55             push rbp
0x00015466      53             push rbx
0x00015467      4889fb         mov rbx, rdi
0x0001546a      7464           je 0x154d0                              ; ../coreutils-8.31/lib/obstack.c:114
0x0001546c      4c8d62ff       lea r12, [rdx - 1]
0x00015470      4889d5         mov rbp, rdx
0x00015473      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:130
0x00015476      b8e00f0000     mov eax, 0xfe0
0x0001547b      4c896330       mov qword [rbx + 0x30], r12             ; ../coreutils-8.31/lib/obstack.c:134
0x0001547f      480f44f0       cmove rsi, rax                          ; ../coreutils-8.31/lib/obstack.c:130
0x00015483      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:136
0x00015486      488933         mov qword [rbx], rsi                    ; ../coreutils-8.31/lib/obstack.c:133
0x00015489      e892ffffff     call sym.call_chunkfun                  ; ../coreutils-8.31/lib/obstack.c:136
0x0001548e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:137
0x00015491      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/obstack.c:136
0x00015495      7446           je 0x154dd                              ; ../coreutils-8.31/lib/obstack.c:137
0x00015497      4a8d542010     lea rdx, [rax + r12 + 0x10]             ; ../coreutils-8.31/lib/obstack.c:139
0x0001549c      48f7dd         neg rbp
0x0001549f      4821d5         and rbp, rdx
0x000154a2      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/obstack.c:141
0x000154a5      48896b10       mov qword [rbx + 0x10], rbp             ; ../coreutils-8.31/lib/obstack.c:139
0x000154a9      48896b18       mov qword [rbx + 0x18], rbp
0x000154ad      4801c2         add rdx, rax                            ; ../coreutils-8.31/lib/obstack.c:141
0x000154b0      488910         mov qword [rax], rdx
0x000154b3      48895320       mov qword [rbx + 0x20], rdx
0x000154b7      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/obstack.c:142
0x000154bf      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/obstack.c:147
0x000154c4      806350f9       and byte [rbx + 0x50], 0xf9             ; ../coreutils-8.31/lib/obstack.c:145 ; [0xf9:1]=240
0x000154c8      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:147
0x000154c9      5d             pop rbp
0x000154ca      415c           pop r12
0x000154cc      c3             ret
0x000154cd      0f1f00         nop dword [rax]
0x000154d0      41bc0f000000   mov r12d, 0xf
0x000154d6      bd10000000     mov ebp, 0x10                           ; ../coreutils-8.31/lib/obstack.c:115
0x000154db      eb96           jmp 0x15473
0x000154dd      ff157dad2000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:138 ; [0x220260:8]=0x153e0 sym.print_and_abort
0x000154e3      0f1f00         nop dword [rax]
0x000154e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin:
0x000154f0      806750fe       and byte [rdi + 0x50], 0xfe             ; ../coreutils-8.31/lib/obstack.c:154 ; [0xfe:1]=0
0x000154f4      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:155
0x000154f8      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:156
0x000154fc      e95fffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:158
0x00015501      0f1f440000     nop dword [rax + rax]
0x00015506      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_1:
0x00015510      804f5001       or byte [rdi + 0x50], 1                 ; ../coreutils-8.31/lib/obstack.c:167
0x00015514      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:168
0x00015518      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:169
0x0001551c      4c894f48       mov qword [rdi + 0x48], r9              ; ../coreutils-8.31/lib/obstack.c:170
0x00015520      e93bffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:172
0x00015525      90             nop
0x00015526      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_newchunk:
0x00015530      4156           push r14                                ; ../coreutils-8.31/lib/obstack.c:183
0x00015532      4155           push r13
0x00015534      31d2           xor edx, edx
0x00015536      4154           push r12
0x00015538      55             push rbp
0x00015539      53             push rbx
0x0001553a      488b5f18       mov rbx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/obstack.c:186
0x0001553e      482b5f10       sub rbx, qword [rdi + 0x10]
0x00015542      488b6f08       mov rbp, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:184
0x00015546      4801de         add rsi, rbx
0x00015549      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/obstack.c:192
0x0001554c      0f92c2         setb dl
0x0001554f      48037730       add rsi, qword [rdi + 0x30]
0x00015553      0f92c0         setb al
0x00015556      48c1e903       shr rcx, 3
0x0001555a      483937         cmp qword [rdi], rsi
0x0001555d      4c8d640e64     lea r12, [rsi + rcx + 0x64]
0x00015562      480f4337       cmovae rsi, qword [rdi]
0x00015566      4c39e6         cmp rsi, r12
0x00015569      4c0f43e6       cmovae r12, rsi
0x0001556d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:199
0x00015570      0f859f000000   jne 0x15615
0x00015576      0fb6c0         movzx eax, al
0x00015579      4885c0         test rax, rax
0x0001557c      0f8593000000   jne 0x15615
0x00015582      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/obstack.c:200
0x00015585      4989fd         mov r13, rdi
0x00015588      e893feffff     call sym.call_chunkfun
0x0001558d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:201
0x00015590      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/obstack.c:200
0x00015593      0f847c000000   je 0x15615                              ; ../coreutils-8.31/lib/obstack.c:201
0x00015599      4a8d3420       lea rsi, [rax + r12]                    ; ../coreutils-8.31/lib/obstack.c:205
0x0001559d      49894508       mov qword [r13 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:203
0x000155a1      48896808       mov qword [rax + 8], rbp                ; ../coreutils-8.31/lib/obstack.c:204
0x000155a5      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000155a8      49897520       mov qword [r13 + 0x20], rsi             ; ../coreutils-8.31/lib/obstack.c:205
0x000155ac      488930         mov qword [rax], rsi
0x000155af      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:209
0x000155b3      498b7510       mov rsi, qword [r13 + 0x10]             ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000155b7      4d8d640610     lea r12, [r14 + rax + 0x10]             ; ../coreutils-8.31/lib/obstack.c:209
0x000155bc      48f7d0         not rax
0x000155bf      4921c4         and r12, rax
0x000155c2      4c89e7         mov rdi, r12                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000155c5      e826e0feff     call sym.imp.memcpy
0x000155ca      41f6455002     test byte [r13 + 0x50], 2               ; ../coreutils-8.31/lib/obstack.c:217
0x000155cf      7515           jne 0x155e6
0x000155d1      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:219
0x000155d5      488d540510     lea rdx, [rbp + rax + 0x10]
0x000155da      48f7d0         not rax
0x000155dd      4821d0         and rax, rdx
0x000155e0      49394510       cmp qword [r13 + 0x10], rax             ; ../coreutils-8.31/lib/obstack.c:218
0x000155e4      741a           je 0x15600
0x000155e6      41806550fd     and byte [r13 + 0x50], 0xfd             ; ../coreutils-8.31/lib/obstack.c:229 ; [0xfd:1]=0
0x000155eb      4c01e3         add rbx, r12                            ; ../coreutils-8.31/lib/obstack.c:227
0x000155ee      4d896510       mov qword [r13 + 0x10], r12             ; ../coreutils-8.31/lib/obstack.c:226
0x000155f2      49895d18       mov qword [r13 + 0x18], rbx             ; ../coreutils-8.31/lib/obstack.c:227
0x000155f6      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:230
0x000155f7      5d             pop rbp
0x000155f8      415c           pop r12
0x000155fa      415d           pop r13
0x000155fc      415e           pop r14
0x000155fe      c3             ret
0x000155ff      90             nop
0x00015600      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/obstack.c:222
0x00015604      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/obstack.c:223
0x00015607      4c89ef         mov rdi, r13
0x0001560a      49894608       mov qword [r14 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:222
0x0001560e      e82dfeffff     call sym.call_freefun                   ; ../coreutils-8.31/lib/obstack.c:223
0x00015613      ebd1           jmp 0x155e6
0x00015615      ff1545ac2000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:202 ; [0x220260:8]=0x153e0 sym.print_and_abort
0x0001561b      0f1f440000     nop dword [rax + rax]
;-- _obstack_allocated_p:
0x00015620      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:242
0x00015624      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00015627      742d           je 0x15656
0x00015629      0f1f80000000.  nop dword [rax]
0x00015630      4839c6         cmp rsi, rax
0x00015633      7605           jbe 0x1563a
0x00015635      483930         cmp qword [rax], rsi
0x00015638      7316           jae 0x15650
0x0001563a      488b4008       mov rax, qword [rax + 8]                ; ../coreutils-8.31/lib/obstack.c:252
0x0001563e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00015641      75ed           jne 0x15630
0x00015643      31c0           xor eax, eax
0x00015645      c3             ret                                     ; ../coreutils-8.31/lib/obstack.c:256
0x00015646      662e0f1f8400.  nop word cs:[rax + rax]
0x00015650      b801000000     mov eax, 1
0x00015655      c3             ret
0x00015656      f3c3           ret
0x00015658      0f1f84000000.  nop dword [rax + rax]
;-- _obstack_free:
0x00015660      4154           push r12                                ; ../coreutils-8.31/lib/obstack.c:263
0x00015662      55             push rbp
0x00015663      4889f5         mov rbp, rsi
0x00015666      53             push rbx
0x00015667      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:267
0x0001566b      4889fb         mov rbx, rdi
0x0001566e      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:271
0x00015671      742a           je 0x1569d
0x00015673      0f1f440000     nop dword [rax + rax]
0x00015678      4839ee         cmp rsi, rbp
0x0001567b      7308           jae 0x15685
0x0001567d      488b06         mov rax, qword [rsi]
0x00015680      4839e8         cmp rax, rbp
0x00015683      732b           jae 0x156b0
0x00015685      4c8b6608       mov r12, qword [rsi + 8]                ; ../coreutils-8.31/lib/obstack.c:273
0x00015689      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:274
0x0001568c      e8affdffff     call sym.call_freefun
0x00015691      804b5002       or byte [rbx + 0x50], 2                 ; ../coreutils-8.31/lib/obstack.c:278
0x00015695      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/obstack.c:271
0x00015698      4c89e6         mov rsi, r12
0x0001569b      75db           jne 0x15678
0x0001569d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/obstack.c:286
0x000156a0      7523           jne 0x156c5
0x000156a2      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x000156a3      5d             pop rbp
0x000156a4      415c           pop r12
0x000156a6      c3             ret
0x000156a7      660f1f840000.  nop word [rax + rax]
0x000156b0      48896b18       mov qword [rbx + 0x18], rbp             ; ../coreutils-8.31/lib/obstack.c:282
0x000156b4      48896b10       mov qword [rbx + 0x10], rbp
0x000156b8      48894320       mov qword [rbx + 0x20], rax             ; ../coreutils-8.31/lib/obstack.c:283
0x000156bc      48897308       mov qword [rbx + 8], rsi                ; ../coreutils-8.31/lib/obstack.c:284
0x000156c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x000156c1      5d             pop rbp
0x000156c2      415c           pop r12
0x000156c4      c3             ret
0x000156c5      e8c6dbfeff     call sym.imp.abort                      ; ../coreutils-8.31/lib/obstack.c:288
0x000156ca      660f1f440000   nop word [rax + rax]
;-- _obstack_memory_used:
0x000156d0      488b5708       mov rdx, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:293
0x000156d4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/obstack.c:295
0x000156d6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x000156d9      741d           je 0x156f8
0x000156db      0f1f440000     nop dword [rax + rax]
0x000156e0      488b0a         mov rcx, qword [rdx]                    ; ../coreutils-8.31/lib/obstack.c:299
0x000156e3      4829d1         sub rcx, rdx
0x000156e6      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/obstack.c:297
0x000156ea      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/obstack.c:299
0x000156ed      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x000156f0      75ee           jne 0x156e0
0x000156f2      f3c3           ret
0x000156f4      0f1f4000       nop dword [rax]
0x000156f8      f3c3           ret                                     ; ../coreutils-8.31/lib/obstack.c:302
0x000156fa      660f1f440000   nop word [rax + rax]
;-- setenv_TZ:
0x00015700      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/time_rz.c:221
0x00015703      741b           je 0x15720
0x00015705      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/time_rz.c:222
0x00015708      488d3dad2400.  lea rdi, [0x00017bbc]                   ; "TZ"
0x0001570f      ba01000000     mov edx, 1
0x00015714      e967dcfeff     jmp sym.imp.setenv
0x00015719      0f1f80000000.  nop dword [rax]
0x00015720      488d3d952400.  lea rdi, [0x00017bbc]                   ; "TZ"
0x00015727      e954e0feff     jmp sym.imp.unsetenv
0x0001572c      0f1f4000       nop dword [rax]
;-- tzfree.part.0:
0x00015730      4885ff         test rdi, rdi                           ; ./lib/time.h:767
0x00015733      7423           je 0x15758
0x00015735      53             push rbx
0x00015736      662e0f1f8400.  nop word cs:[rax + rax]
0x00015740      488b1f         mov rbx, qword [rdi]                    ; ../coreutils-8.31/lib/time_rz.c:201
0x00015743      e838e1feff     call sym..plt.got                       ; ../coreutils-8.31/lib/time_rz.c:202
0x00015748      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/time_rz.c:199
0x0001574b      4889df         mov rdi, rbx
0x0001574e      75f0           jne 0x15740
0x00015750      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:205
0x00015751      c3             ret
0x00015752      660f1f440000   nop word [rax + rax]
0x00015758      f3c3           ret
0x0001575a      660f1f440000   nop word [rax + rax]
;-- revert_tz.part.1:
0x00015760      4155           push r13
0x00015762      4154           push r12
0x00015764      55             push rbp
0x00015765      53             push rbx
0x00015766      4889fd         mov rbp, rdi
0x00015769      4883ec08       sub rsp, 8
0x0001576d      e82edbfeff     call sym.imp.__errno_location
0x00015772      807d0800       cmp byte [rbp + 8], 0
0x00015776      4889c3         mov rbx, rax
0x00015779      448b20         mov r12d, dword [rax]
0x0001577c      488d7d09       lea rdi, [rbp + 9]
0x00015780      7502           jne 0x15784
0x00015782      31ff           xor edi, edi
0x00015784      e877ffffff     call sym.setenv_TZ
0x00015789      85c0           test eax, eax
0x0001578b      7423           je 0x157b0
0x0001578d      448b23         mov r12d, dword [rbx]
0x00015790      4531ed         xor r13d, r13d
0x00015793      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:143
0x00015796      e895ffffff     call sym.tzfree.part.0
0x0001579b      448923         mov dword [rbx], r12d
0x0001579e      4883c408       add rsp, 8
0x000157a2      4489e8         mov eax, r13d
0x000157a5      5b             pop rbx
0x000157a6      5d             pop rbp                                 ; ../coreutils-8.31/lib/time_rz.c:6
0x000157a7      415c           pop r12
0x000157a9      415d           pop r13
0x000157ab      c3             ret
0x000157ac      0f1f4000       nop dword [rax]
0x000157b0      e85bdefeff     call sym.imp.tzset
0x000157b5      41bd01000000   mov r13d, 1
0x000157bb      ebd6           jmp 0x15793
0x000157bd      0f1f00         nop dword [rax]
;-- tzalloc:
0x000157c0      4885ff         test rdi, rdi
0x000157c3      4154           push r12
0x000157c5      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:9
0x000157c6      53             push rbx
0x000157c7      745f           je 0x15828
0x000157c9      4989fc         mov r12, rdi
0x000157cc      e82fdcfeff     call sym.imp.strlen
0x000157d1      488d6801       lea rbp, [rax + 1]
0x000157d5      bf76000000     mov edi, 0x76                           ; 'v'
0x000157da      4883fd76       cmp rbp, 0x76                           ; ../coreutils-8.31/lib/time_rz.c:12
0x000157de      480f43fd       cmovae rdi, rbp
0x000157e2      4883c711       add rdi, 0x11
0x000157e6      4883e7f8       and rdi, 0xfffffffffffffff8
0x000157ea      e899e0feff     call 0x3888
0x000157ef      4885c0         test rax, rax
0x000157f2      4889c3         mov rbx, rax
0x000157f5      7424           je 0x1581b
0x000157f7      48c700000000.  mov qword [rax], 0
0x000157fe      488d7b09       lea rdi, [rbx + 9]                      ; ../coreutils-8.31/lib/time_rz.c:22
0x00015802      b801000000     mov eax, 1
0x00015807      66894308       mov word [rbx + 8], ax
0x0001580b      4889ea         mov rdx, rbp                            ; ../coreutils-8.31/lib/time_rz.c:9
0x0001580e      4c89e6         mov rsi, r12
0x00015811      e8daddfeff     call sym.imp.memcpy
0x00015816      c6442b0900     mov byte [rbx + rbp + 9], 0
0x0001581b      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/time_rz.c:10
0x0001581e      5b             pop rbx
0x0001581f      5d             pop rbp
0x00015820      415c           pop r12
0x00015822      c3             ret
0x00015823      0f1f440000     nop dword [rax + rax]
0x00015828      bf80000000     mov edi, 0x80
0x0001582d      e856e0feff     call 0x3888                             ; ../coreutils-8.31/lib/time_rz.c:22
0x00015832      4885c0         test rax, rax
0x00015835      4889c3         mov rbx, rax
0x00015838      74e1           je 0x1581b
0x0001583a      31d2           xor edx, edx
0x0001583c      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/time_rz.c:30
0x00015843      4889d8         mov rax, rbx
0x00015846      66895308       mov word [rbx + 8], dx                  ; ../coreutils-8.31/lib/time_rz.c:40
0x0001584a      5b             pop rbx                                 ; ../coreutils-8.31/lib/time_rz.c:52
0x0001584b      5d             pop rbp
0x0001584c      415c           pop r12
0x0001584e      c3             ret
0x0001584f      90             nop
;-- save_abbr:
0x00015850      4157           push r15
0x00015852      4156           push r14
0x00015854      b801000000     mov eax, 1
0x00015859      4155           push r13
0x0001585b      4154           push r12
0x0001585d      55             push rbp
0x0001585e      53             push rbx
0x0001585f      4883ec08       sub rsp, 8
0x00015863      488b6e30       mov rbp, qword [rsi + 0x30]
0x00015867      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/time_rz.c:55
0x0001586a      0f8490000000   je 0x15900
0x00015870      4839ee         cmp rsi, rbp
0x00015873      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/time_rz.c:59
0x00015876      4989f5         mov r13, rsi
0x00015879      7709           ja 0x15884
0x0001587b      488d5638       lea rdx, [rsi + 0x38]
0x0001587f      4839d5         cmp rbp, rdx
0x00015882      727c           jb 0x15900                              ; ../coreutils-8.31/lib/time_rz.c:61
0x00015884      807d0000       cmp byte [rbp], 0
0x00015888      498d5c2409     lea rbx, [r12 + 9]
0x0001588d      7461           je 0x158f0
0x0001588f      90             nop
0x00015890      4889ee         mov rsi, rbp
0x00015893      4889df         mov rdi, rbx
0x00015896      e8f5dcfeff     call sym.imp.strcmp
0x0001589b      85c0           test eax, eax
0x0001589d      7458           je 0x158f7
0x0001589f      803b00         cmp byte [rbx], 0
0x000158a2      7512           jne 0x158b6
0x000158a4      4d8d742409     lea r14, [r12 + 9]
0x000158a9      4939de         cmp r14, rbx
0x000158ac      7562           jne 0x15910
0x000158ae      41807c240800   cmp byte [r12 + 8], 0
0x000158b4      745a           je 0x15910                              ; ../coreutils-8.31/lib/time_rz.c:87
0x000158b6      4889df         mov rdi, rbx
0x000158b9      e842dbfeff     call sym.imp.strlen
0x000158be      488d5c0301     lea rbx, [rbx + rax + 1]                ; ../coreutils-8.31/lib/time_rz.c:59
0x000158c3      803b00         cmp byte [rbx], 0
0x000158c6      75c8           jne 0x15890
0x000158c8      498b0424       mov rax, qword [r12]
0x000158cc      4885c0         test rax, rax
0x000158cf      74bf           je 0x15890
0x000158d1      488d5809       lea rbx, [rax + 9]
0x000158d5      4889ee         mov rsi, rbp
0x000158d8      4989c4         mov r12, rax
0x000158db      4889df         mov rdi, rbx
0x000158de      e8addcfeff     call sym.imp.strcmp                     ; ../coreutils-8.31/lib/time_rz.c:101
0x000158e3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/time_rz.c:102
0x000158e5      75b8           jne 0x1589f
0x000158e7      eb0e           jmp 0x158f7
0x000158e9      0f1f80000000.  nop dword [rax]
0x000158f0      488d1dbc1f00.  lea rbx, [0x000178b3]
0x000158f7      49895d30       mov qword [r13 + 0x30], rbx
0x000158fb      b801000000     mov eax, 1
0x00015900      4883c408       add rsp, 8
0x00015904      5b             pop rbx
0x00015905      5d             pop rbp
0x00015906      415c           pop r12
0x00015908      415d           pop r13                                 ; ../coreutils-8.31/lib/time_rz.c:65
0x0001590a      415e           pop r14
0x0001590c      415f           pop r15
0x0001590e      c3             ret
0x0001590f      90             nop
0x00015910      4889ef         mov rdi, rbp
0x00015913      e8e8dafeff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/time_rz.c:70
0x00015918      488d5001       lea rdx, [rax + 1]
0x0001591c      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/time_rz.c:74
0x0001591f      4889d8         mov rax, rbx
0x00015922      4c29f0         sub rax, r14
0x00015925      4889c1         mov rcx, rax
0x00015928      48f7d1         not rcx
0x0001592b      4839d1         cmp rcx, rdx                            ; ../coreutils-8.31/lib/time_rz.c:76
0x0001592e      7230           jb 0x15960
0x00015930      4801d0         add rax, rdx
0x00015933      4883f876       cmp rax, 0x76
0x00015937      7637           jbe 0x15970
0x00015939      4889ef         mov rdi, rbp
0x0001593c      e87ffeffff     call sym.tzalloc
0x00015941      4889c3         mov rbx, rax
0x00015944      49890424       mov qword [r12], rax
0x00015948      31c0           xor eax, eax
0x0001594a      4885db         test rbx, rbx
0x0001594d      74b1           je 0x15900
0x0001594f      c6430800       mov byte [rbx + 8], 0
0x00015953      4883c309       add rbx, 9                              ; string_fortified.h:-56
0x00015957      eb9e           jmp 0x158f7
0x00015959      0f1f80000000.  nop dword [rax]
0x00015960      e83bd9feff     call sym.imp.__errno_location
0x00015965      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0001596b      31c0           xor eax, eax
0x0001596d      eb91           jmp 0x15900
0x0001596f      90             nop
0x00015970      4889ee         mov rsi, rbp
0x00015973      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/time_rz.c:153
0x00015976      e875dcfeff     call sym.imp.memcpy
0x0001597b      42c6443b0100   mov byte [rbx + r15 + 1], 0
0x00015981      e971ffffff     jmp 0x158f7
0x00015986      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_tz:
0x00015990      4154           push r12                                ; ../coreutils-8.31/lib/time_rz.c:155
0x00015992      55             push rbp
0x00015993      4889fd         mov rbp, rdi
0x00015996      53             push rbx                                ; ../coreutils-8.31/lib/time_rz.c:156
0x00015997      488d3d1e2200.  lea rdi, [0x00017bbc]                   ; "TZ"
0x0001599e      4883ec10       sub rsp, 0x10
0x000159a2      e8a9d8feff     call sym.imp.getenv
0x000159a7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:161
0x000159aa      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/time_rz.c:162
0x000159ad      0f8495000000   je 0x15a48
0x000159b3      807d0800       cmp byte [rbp + 8], 0
0x000159b7      7567           jne 0x15a20
0x000159b9      4889df         mov rdi, rbx
0x000159bc      e8fffdffff     call sym.tzalloc
0x000159c1      4885c0         test rax, rax
0x000159c4      4989c4         mov r12, rax
0x000159c7      7444           je 0x15a0d
0x000159c9      31ff           xor edi, edi
0x000159cb      807d0800       cmp byte [rbp + 8], 0
0x000159cf      7404           je 0x159d5
0x000159d1      488d7d09       lea rdi, [rbp + 9]
0x000159d5      e826fdffff     call sym.setenv_TZ
0x000159da      85c0           test eax, eax
0x000159dc      0f8486000000   je 0x15a68
0x000159e2      e8b9d8feff     call sym.imp.__errno_location
0x000159e7      4983fc01       cmp r12, 1
0x000159eb      8b18           mov ebx, dword [rax]                    ; ../coreutils-8.31/lib/time_rz.c:168
0x000159ed      7419           je 0x15a08                              ; ../coreutils-8.31/lib/time_rz.c:169
0x000159ef      4c89e7         mov rdi, r12
0x000159f2      4889442408     mov qword [rsp + 8], rax
0x000159f7      e834fdffff     call sym.tzfree.part.0
0x000159fc      488b442408     mov rax, qword [rsp + 8]
0x00015a01      0f1f80000000.  nop dword [rax]
0x00015a08      8918           mov dword [rax], ebx
0x00015a0a      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/time_rz.c:158
0x00015a0d      4883c410       add rsp, 0x10
0x00015a11      4c89e0         mov rax, r12
0x00015a14      5b             pop rbx
0x00015a15      5d             pop rbp
0x00015a16      415c           pop r12
0x00015a18      c3             ret
0x00015a19      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/time_rz.c:173
0x00015a20      488d7d09       lea rdi, [rbp + 9]
0x00015a24      4889c6         mov rsi, rax
0x00015a27      41bc01000000   mov r12d, 1
0x00015a2d      e85edbfeff     call sym.imp.strcmp
0x00015a32      85c0           test eax, eax
0x00015a34      7583           jne 0x159b9
0x00015a36      4883c410       add rsp, 0x10
0x00015a3a      4c89e0         mov rax, r12
0x00015a3d      5b             pop rbx
0x00015a3e      5d             pop rbp
0x00015a3f      415c           pop r12
0x00015a41      c3             ret
0x00015a42      660f1f440000   nop word [rax + rax]
0x00015a48      807d0800       cmp byte [rbp + 8], 0
0x00015a4c      41bc01000000   mov r12d, 1
0x00015a52      0f8561ffffff   jne 0x159b9
0x00015a58      4883c410       add rsp, 0x10
0x00015a5c      4c89e0         mov rax, r12
0x00015a5f      5b             pop rbx
0x00015a60      5d             pop rbp
0x00015a61      415c           pop r12
0x00015a63      c3             ret
0x00015a64      0f1f4000       nop dword [rax]
0x00015a68      e8a3dbfeff     call sym.imp.tzset
0x00015a6d      eb9e           jmp 0x15a0d
0x00015a6f      90             nop
;-- tzfree:
0x00015a70      4883ff01       cmp rdi, 1
0x00015a74      7405           je 0x15a7b
0x00015a76      e9b5fcffff     jmp sym.tzfree.part.0
0x00015a7b      c3             ret
0x00015a7c      0f1f4000       nop dword [rax]
;-- localtime_rz:
0x00015a80      4155           push r13
0x00015a82      4154           push r12
0x00015a84      55             push rbp
0x00015a85      53             push rbx
0x00015a86      4889f5         mov rbp, rsi
0x00015a89      4883ec08       sub rsp, 8
0x00015a8d      4885ff         test rdi, rdi
0x00015a90      746e           je 0x15b00
0x00015a92      4989d5         mov r13, rdx
0x00015a95      4889fb         mov rbx, rdi
0x00015a98      e8f3feffff     call sym.set_tz
0x00015a9d      4885c0         test rax, rax
0x00015aa0      4989c4         mov r12, rax
0x00015aa3      7449           je 0x15aee
0x00015aa5      4c89ee         mov rsi, r13
0x00015aa8      4889ef         mov rdi, rbp
0x00015aab      e810d8feff     call sym.imp.localtime_r                ; ../coreutils-8.31/lib/time_rz.c:74
0x00015ab0      4885c0         test rax, rax
0x00015ab3      742b           je 0x15ae0
0x00015ab5      4c89ee         mov rsi, r13
0x00015ab8      4889df         mov rdi, rbx
0x00015abb      e890fdffff     call sym.save_abbr
0x00015ac0      84c0           test al, al
0x00015ac2      741c           je 0x15ae0
0x00015ac4      4983fc01       cmp r12, 1
0x00015ac8      754b           jne 0x15b15
0x00015aca      4883c408       add rsp, 8
0x00015ace      4c89e8         mov rax, r13
0x00015ad1      5b             pop rbx
0x00015ad2      5d             pop rbp
0x00015ad3      415c           pop r12
0x00015ad5      415d           pop r13
0x00015ad7      c3             ret
0x00015ad8      0f1f84000000.  nop dword [rax + rax]
0x00015ae0      4983fc01       cmp r12, 1
0x00015ae4      7408           je 0x15aee
0x00015ae6      4c89e7         mov rdi, r12
0x00015ae9      e872fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:81
0x00015aee      4883c408       add rsp, 8
0x00015af2      31c0           xor eax, eax
0x00015af4      5b             pop rbx
0x00015af5      5d             pop rbp
0x00015af6      415c           pop r12
0x00015af8      415d           pop r13
0x00015afa      c3             ret
0x00015afb      0f1f440000     nop dword [rax + rax]
0x00015b00      4883c408       add rsp, 8
0x00015b04      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/time_rz.c:82
0x00015b07      4889d6         mov rsi, rdx
0x00015b0a      5b             pop rbx
0x00015b0b      5d             pop rbp
0x00015b0c      415c           pop r12
0x00015b0e      415d           pop r13
0x00015b10      e99bd9feff     jmp sym.imp.gmtime_r                    ; ../coreutils-8.31/lib/time_rz.c:86
0x00015b15      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/time_rz.c:87
0x00015b18      e843fcffff     call sym.revert_tz.part.1               ; ../coreutils-8.31/lib/time_rz.c:86
0x00015b1d      84c0           test al, al
0x00015b1f      75a9           jne 0x15aca
0x00015b21      ebcb           jmp 0x15aee                             ; ../coreutils-8.31/lib/time_rz.c:89
0x00015b23      0f1f00         nop dword [rax]
0x00015b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- mktime_z:
0x00015b30      4154           push r12
0x00015b32      55             push rbp                                ; ../coreutils-8.31/lib/time_rz.c:93
0x00015b33      53             push rbx
0x00015b34      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/time_rz.c:95
0x00015b37      4883ec50       sub rsp, 0x50
0x00015b3b      64488b042528.  mov rax, qword fs:[0x28]
0x00015b44      4889442448     mov qword [rsp + 0x48], rax
0x00015b49      31c0           xor eax, eax
0x00015b4b      4885ff         test rdi, rdi
0x00015b4e      0f84fc000000   je 0x15c50
0x00015b54      4889fd         mov rbp, rdi
0x00015b57      e834feffff     call sym.set_tz
0x00015b5c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/time_rz.c:-24
0x00015b5f      4989c4         mov r12, rax
0x00015b62      0f84f8000000   je 0x15c60
0x00015b68      4889df         mov rdi, rbx
0x00015b6b      e840dbfeff     call sym.imp.mktime
0x00015b70      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015b74      4889442408     mov qword [rsp + 8], rax
0x00015b79      7455           je 0x15bd0
0x00015b7b      4889de         mov rsi, rbx
0x00015b7e      4889ef         mov rdi, rbp
0x00015b81      e8cafcffff     call sym.save_abbr
0x00015b86      84c0           test al, al
0x00015b88      7509           jne 0x15b93
0x00015b8a      48c7442408ff.  mov qword [rsp + 8], 0xffffffffffffffff
0x00015b93      4983fc01       cmp r12, 1
0x00015b97      7410           je 0x15ba9
0x00015b99      4c89e7         mov rdi, r12
0x00015b9c      e8bffbffff     call sym.revert_tz.part.1
0x00015ba1      84c0           test al, al
0x00015ba3      0f84b7000000   je 0x15c60
0x00015ba9      488b442408     mov rax, qword [rsp + 8]
0x00015bae      488b4c2448     mov rcx, qword [rsp + 0x48]
0x00015bb3      6448330c2528.  xor rcx, qword fs:[0x28]
0x00015bbc      0f85aa000000   jne 0x15c6c
0x00015bc2      4883c450       add rsp, 0x50
0x00015bc6      5b             pop rbx
0x00015bc7      5d             pop rbp
0x00015bc8      415c           pop r12
0x00015bca      c3             ret
0x00015bcb      0f1f440000     nop dword [rax + rax]
0x00015bd0      488d742410     lea rsi, [rsp + 0x10]
0x00015bd5      488d7c2408     lea rdi, [rsp + 8]
0x00015bda      e8e1d6feff     call sym.imp.localtime_r
0x00015bdf      4885c0         test rax, rax
0x00015be2      74af           je 0x15b93
0x00015be4      8b03           mov eax, dword [rbx]
0x00015be6      8b5304         mov edx, dword [rbx + 4]
0x00015be9      33442410       xor eax, dword [rsp + 0x10]
0x00015bed      33542414       xor edx, dword [rsp + 0x14]
0x00015bf1      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00015bf5      09d0           or eax, edx
0x00015bf7      8b5308         mov edx, dword [rbx + 8]
0x00015bfa      33542418       xor edx, dword [rsp + 0x18]
0x00015bfe      09d0           or eax, edx
0x00015c00      8b530c         mov edx, dword [rbx + 0xc]
0x00015c03      3354241c       xor edx, dword [rsp + 0x1c]
0x00015c07      09d0           or eax, edx
0x00015c09      8b5310         mov edx, dword [rbx + 0x10]
0x00015c0c      33542420       xor edx, dword [rsp + 0x20]
0x00015c10      09d0           or eax, edx
0x00015c12      8b5314         mov edx, dword [rbx + 0x14]
0x00015c15      33542424       xor edx, dword [rsp + 0x24]
0x00015c19      09d0           or eax, edx
0x00015c1b      8b5320         mov edx, dword [rbx + 0x20]
0x00015c1e      85d2           test edx, edx
0x00015c20      400f94c7       sete dil
0x00015c24      85c9           test ecx, ecx
0x00015c26      400f94c6       sete sil
0x00015c2a      4038f7         cmp dil, sil
0x00015c2d      740c           je 0x15c3b
0x00015c2f      85d2           test edx, edx
0x00015c31      7808           js 0x15c3b
0x00015c33      85c9           test ecx, ecx
0x00015c35      0f8958ffffff   jns 0x15b93
0x00015c3b      85c0           test eax, eax
0x00015c3d      0f8438ffffff   je 0x15b7b
0x00015c43      e94bffffff     jmp 0x15b93
0x00015c48      0f1f84000000.  nop dword [rax + rax]
0x00015c50      4889f7         mov rdi, rsi
0x00015c53      e8c8dafeff     call sym.imp.timegm
0x00015c58      e951ffffff     jmp 0x15bae
0x00015c5d      0f1f00         nop dword [rax]
0x00015c60      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00015c67      e942ffffff     jmp 0x15bae
0x00015c6c      e8afd7feff     call sym.imp.__stack_chk_fail
0x00015c71      662e0f1f8400.  nop word cs:[rax + rax]
0x00015c7b      0f1f440000     nop dword [rax + rax]
;-- close_stream:
0x00015c80      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00015c82      55             push rbp
0x00015c83      4889fd         mov rbp, rdi
0x00015c86      53             push rbx
0x00015c87      e864d6feff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00015c8c      8b5d00         mov ebx, dword [rbp]
0x00015c8f      4889ef         mov rdi, rbp
0x00015c92      4989c4         mov r12, rax
0x00015c95      e806010000     call sym.rpl_fclose
0x00015c9a      83e320         and ebx, 0x20                           ; "@"
0x00015c9d      85db           test ebx, ebx
0x00015c9f      7517           jne 0x15cb8
0x00015ca1      85c0           test eax, eax
0x00015ca3      740a           je 0x15caf                              ; stdio.h:-186
0x00015ca5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00015ca8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015cad      7439           je 0x15ce8
0x00015caf      5b             pop rbx
0x00015cb0      5d             pop rbp
0x00015cb1      415c           pop r12
0x00015cb3      c3             ret
0x00015cb4      0f1f4000       nop dword [rax]
0x00015cb8      85c0           test eax, eax
0x00015cba      751c           jne 0x15cd8
0x00015cbc      e8dfd5feff     call sym.imp.__errno_location
0x00015cc1      c70000000000   mov dword [rax], 0
0x00015cc7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015ccc      5b             pop rbx
0x00015ccd      5d             pop rbp
0x00015cce      415c           pop r12
0x00015cd0      c3             ret
0x00015cd1      0f1f80000000.  nop dword [rax]
0x00015cd8      5b             pop rbx
0x00015cd9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00015cde      5d             pop rbp                                 ; stdio.h:-186
0x00015cdf      415c           pop r12
0x00015ce1      c3             ret
0x00015ce2      660f1f440000   nop word [rax + rax]
0x00015ce8      e8b3d5feff     call sym.imp.__errno_location
0x00015ced      833809         cmp dword [rax], 9
0x00015cf0      5b             pop rbx
0x00015cf1      5d             pop rbp
0x00015cf2      415c           pop r12                                 ; stdio.h:-178
0x00015cf4      0f95c0         setne al
0x00015cf7      0fb6c0         movzx eax, al
0x00015cfa      f7d8           neg eax
0x00015cfc      c3             ret
0x00015cfd      0f1f00         nop dword [rax]
;-- dir_name:
0x00015d00      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x00015d04      e8a76fffff     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x00015d09      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x00015d0c      7405           je 0x15d13
0x00015d0e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x00015d12      c3             ret
0x00015d13      e8c8eaffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x00015d18      0f1f84000000.  nop dword [rax + rax]
;-- hash_pjw:
0x00015d20      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:32
0x00015d24      84c9           test cl, cl
0x00015d26      7428           je 0x15d50
0x00015d28      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x00015d2a      660f1f440000   nop word [rax + rax]
0x00015d30      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00015d34      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00015d38      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x00015d3b      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00015d3f      84c9           test cl, cl
0x00015d41      75ed           jne 0x15d30
0x00015d43      31d2           xor edx, edx
0x00015d45      48f7f6         div rsi
0x00015d48      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00015d4b      c3             ret
0x00015d4c      0f1f4000       nop dword [rax]
0x00015d50      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x00015d52      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x00015d55      c3             ret
0x00015d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x00015d60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00015d64      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00015d69      e812d9feff     call sym.imp.nl_langinfo
0x00015d6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00015d71      741d           je 0x15d90
0x00015d73      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00015d76      488d15565000.  lea rdx, str.ASCII                      ; 0x1add3 ; "ASCII"
0x00015d7d      480f44c2       cmove rax, rdx
0x00015d81      4883c408       add rsp, 8
0x00015d85      c3             ret
0x00015d86      662e0f1f8400.  nop word cs:[rax + rax]
0x00015d90      488d053c5000.  lea rax, str.ASCII                      ; 0x1add3 ; "ASCII"
0x00015d97      4883c408       add rsp, 8
0x00015d9b      c3             ret
0x00015d9c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00015da0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00015da2      55             push rbp
0x00015da3      53             push rbx
0x00015da4      4889fb         mov rbx, rdi
0x00015da7      e874d8feff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00015dac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00015dae      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00015db1      7854           js 0x15e07                              ; ../coreutils-8.31/lib/fclose.c:66
0x00015db3      e808d9feff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00015db8      85c0           test eax, eax
0x00015dba      752c           jne 0x15de8
0x00015dbc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00015dbf      e85c000000     call sym.rpl_fflush
0x00015dc4      85c0           test eax, eax
0x00015dc6      743c           je 0x15e04
0x00015dc8      e8d3d4feff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00015dcd      448b20         mov r12d, dword [rax]
0x00015dd0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00015dd3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00015dd6      e8c5d5feff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00015ddb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00015dde      7530           jne 0x15e10
0x00015de0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00015de1      5d             pop rbp
0x00015de2      415c           pop r12
0x00015de4      c3             ret
0x00015de5      0f1f00         nop dword [rax]
0x00015de8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00015deb      e830d8feff     call sym.imp.fileno
0x00015df0      31f6           xor esi, esi
0x00015df2      ba01000000     mov edx, 1
0x00015df7      89c7           mov edi, eax
0x00015df9      e8c2d6feff     call sym.imp.lseek
0x00015dfe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015e02      75b8           jne 0x15dbc
0x00015e04      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00015e07      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00015e08      5d             pop rbp
0x00015e09      415c           pop r12
0x00015e0b      e990d5feff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00015e10      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00015e14      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00015e19      ebc5           jmp 0x15de0
0x00015e1b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00015e20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00015e23      53             push rbx
0x00015e24      4889fb         mov rbx, rdi
0x00015e27      7411           je 0x15e3a                              ; ../coreutils-8.31/lib/fflush.c:150
0x00015e29      e892d8feff     call sym.imp.__freading
0x00015e2e      85c0           test eax, eax
0x00015e30      7408           je 0x15e3a
0x00015e32      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00015e38      750e           jne 0x15e48
0x00015e3a      4889df         mov rdi, rbx
0x00015e3d      5b             pop rbx
0x00015e3e      e92dd8feff     jmp sym.imp.fflush
0x00015e43      0f1f440000     nop dword [rax + rax]
0x00015e48      4889df         mov rdi, rbx
0x00015e4b      ba01000000     mov edx, 1
0x00015e50      31f6           xor esi, esi
0x00015e52      e809000000     call sym.rpl_fseeko
0x00015e57      4889df         mov rdi, rbx
0x00015e5a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00015e5b      e910d8feff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00015e60      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00015e64      48394710       cmp qword [rdi + 0x10], rax
0x00015e68      7406           je 0x15e70                              ; ../coreutils-8.31/lib/fseeko.c:32
0x00015e6a      e901d9feff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x00015e6f      90             nop
0x00015e70      488b4720       mov rax, qword [rdi + 0x20]
0x00015e74      48394728       cmp qword [rdi + 0x28], rax
0x00015e78      75f0           jne 0x15e6a                             ; ../coreutils-8.31/lib/fseeko.c:33
0x00015e7a      48837f4800     cmp qword [rdi + 0x48], 0
0x00015e7f      75e9           jne 0x15e6a                             ; ../coreutils-8.31/lib/fseeko.c:21
0x00015e81      4154           push r12
0x00015e83      55             push rbp
0x00015e84      4189d4         mov r12d, edx
0x00015e87      53             push rbx
0x00015e88      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00015e8b      4889fb         mov rbx, rdi
0x00015e8e      e88dd7feff     call sym.imp.fileno
0x00015e93      4489e2         mov edx, r12d
0x00015e96      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00015e99      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x00015e9b      e820d6feff     call sym.imp.lseek
0x00015ea0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00015ea4      740c           je 0x15eb2
0x00015ea6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00015ea9      488983900000.  mov qword [rbx + 0x90], rax
0x00015eb0      31c0           xor eax, eax
0x00015eb2      5b             pop rbx                                 ; /sys_errlist.h:19
0x00015eb3      5d             pop rbp
0x00015eb4      415c           pop r12
0x00015eb6      c3             ret
0x00015eb7      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00015ec0      4157           push r15
0x00015ec2      4156           push r14
0x00015ec4      4989d7         mov r15, rdx
0x00015ec7      4155           push r13
0x00015ec9      4154           push r12
0x00015ecb      4c8d257e9120.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x21f050 ; "pS"
0x00015ed2      55             push rbp
0x00015ed3      488d2d7e9120.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x21f058 ; "0S"
0x00015eda      53             push rbx
0x00015edb      4189fd         mov r13d, edi
0x00015ede      4989f6         mov r14, rsi
0x00015ee1      4c29e5         sub rbp, r12
0x00015ee4      4883ec08       sub rsp, 8
0x00015ee8      48c1fd03       sar rbp, 3
0x00015eec      e81fd3feff     call sym._init
0x00015ef1      4885ed         test rbp, rbp
0x00015ef4      7420           je 0x15f16
0x00015ef6      31db           xor ebx, ebx
0x00015ef8      0f1f84000000.  nop dword [rax + rax]
0x00015f00      4c89fa         mov rdx, r15
0x00015f03      4c89f6         mov rsi, r14
0x00015f06      4489ef         mov edi, r13d
0x00015f09      41ff14dc       call qword [r12 + rbx*8]
0x00015f0d      4883c301       add rbx, 1
0x00015f11      4839dd         cmp rbp, rbx
0x00015f14      75ea           jne 0x15f00
0x00015f16      4883c408       add rsp, 8
0x00015f1a      5b             pop rbx
0x00015f1b      5d             pop rbp
0x00015f1c      415c           pop r12
0x00015f1e      415d           pop r13
0x00015f20      415e           pop r14
0x00015f22      415f           pop r15
0x00015f24      c3             ret
0x00015f25      90             nop
0x00015f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00015f30      f3c3           ret
0x00015f32      662e0f1f8400.  nop word cs:[rax + rax]
0x00015f3c      0f1f4000       nop dword [rax]
;-- atexit:
0x00015f40      488b15c1a020.  mov rdx, qword [obj.__dso_handle]       ; [0x220008:8]=0x220008 obj.__dso_handle
0x00015f47      31f6           xor esi, esi
0x00015f49      e952d8feff     jmp sym.imp.__cxa_atexit
0x00015f4e      0000           add byte [rax], al
