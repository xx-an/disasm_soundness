;-- section..plt:
;-- .plt:
0x00002040      ff35ca1c2100   push qword [0x00213d10]                 ; [12] -r-x section size 1392 named .plt
0x00002046      ff25cc1c2100   jmp qword [0x00213d18]                  ; [0x213d18:8]=0
0x0000204c      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x00002050      ff25ca1c2100   jmp qword [reloc.getenv]                ; [0x213d20:8]=0x2056 ; "V "
0x00002056      6800000000     push 0
0x0000205b      e9e0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00002060      ff25c21c2100   jmp qword [reloc.__snprintf_chk]        ; [0x213d28:8]=0x2066 ; "f "
0x00002066      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x0000206b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00002070      ff25ba1c2100   jmp qword [reloc.free]                  ; [0x213d30:8]=0x2076 ; "v "
0x00002076      6802000000     push 2
0x0000207b      e9c0ffffff     jmp sym..plt
;-- imp.endmntent:
0x00002080      ff25b21c2100   jmp qword [reloc.endmntent]             ; [0x213d38:8]=0x2086
0x00002086      6803000000     push 3
0x0000208b      e9b0ffffff     jmp sym..plt
;-- imp.strverscmp:
0x00002090      ff25aa1c2100   jmp qword [reloc.strverscmp]            ; [0x213d40:8]=0x2096
0x00002096      6804000000     push 4
0x0000209b      e9a0ffffff     jmp sym..plt
;-- imp.abort:
0x000020a0      ff25a21c2100   jmp qword [reloc.abort]                 ; [0x213d48:8]=0x20a6
0x000020a6      6805000000     push 5
0x000020ab      e990ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000020b0      ff259a1c2100   jmp qword [reloc.__errno_location]      ; [0x213d50:8]=0x20b6
0x000020b6      6806000000     push 6
0x000020bb      e980ffffff     jmp sym..plt
;-- imp.strncmp:
0x000020c0      ff25921c2100   jmp qword [reloc.strncmp]               ; [0x213d58:8]=0x20c6
0x000020c6      6807000000     push 7
0x000020cb      e970ffffff     jmp sym..plt
;-- imp._exit:
0x000020d0      ff258a1c2100   jmp qword [reloc._exit]                 ; [0x213d60:8]=0x20d6
0x000020d6      6808000000     push 8
0x000020db      e960ffffff     jmp sym..plt
;-- imp.__fpending:
0x000020e0      ff25821c2100   jmp qword [reloc.__fpending]            ; [0x213d68:8]=0x20e6
0x000020e6      6809000000     push 9
0x000020eb      e950ffffff     jmp sym..plt
;-- imp.isatty:
0x000020f0      ff257a1c2100   jmp qword [reloc.isatty]                ; [0x213d70:8]=0x20f6
0x000020f6      680a000000     push 0xa
0x000020fb      e940ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00002100      ff25721c2100   jmp qword [reloc.iswcntrl]              ; [0x213d78:8]=0x2106
0x00002106      680b000000     push 0xb
0x0000210b      e930ffffff     jmp sym..plt
;-- imp.wcswidth:
0x00002110      ff256a1c2100   jmp qword [reloc.wcswidth]              ; [0x213d80:8]=0x2116
0x00002116      680c000000     push 0xc
0x0000211b      e920ffffff     jmp sym..plt
;-- imp.localeconv:
0x00002120      ff25621c2100   jmp qword [reloc.localeconv]            ; [0x213d88:8]=0x2126 ; "&!"
0x00002126      680d000000     push 0xd
0x0000212b      e910ffffff     jmp sym..plt
;-- imp.mbstowcs:
0x00002130      ff255a1c2100   jmp qword [reloc.mbstowcs]              ; [0x213d90:8]=0x2136 ; "6!"
0x00002136      680e000000     push 0xe
0x0000213b      e900ffffff     jmp sym..plt
;-- imp.readlink:
0x00002140      ff25521c2100   jmp qword [reloc.readlink]              ; [0x213d98:8]=0x2146 ; "F!"
0x00002146      680f000000     push 0xf
0x0000214b      e9f0feffff     jmp sym..plt
;-- imp.fcntl:
0x00002150      ff254a1c2100   jmp qword [reloc.fcntl]                 ; [0x213da0:8]=0x2156 ; "V!"
0x00002156      6810000000     push 0x10
0x0000215b      e9e0feffff     jmp sym..plt
;-- imp.textdomain:
0x00002160      ff25421c2100   jmp qword [reloc.textdomain]            ; [0x213da8:8]=0x2166 ; "f!"
0x00002166      6811000000     push 0x11
0x0000216b      e9d0feffff     jmp sym..plt
;-- imp.fclose:
0x00002170      ff253a1c2100   jmp qword [reloc.fclose]                ; [0x213db0:8]=0x2176 ; "v!"
0x00002176      6812000000     push 0x12
0x0000217b      e9c0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00002180      ff25321c2100   jmp qword [reloc.bindtextdomain]        ; [0x213db8:8]=0x2186
0x00002186      6813000000     push 0x13
0x0000218b      e9b0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00002190      ff252a1c2100   jmp qword [reloc.dcgettext]             ; [0x213dc0:8]=0x2196
0x00002196      6814000000     push 0x14
0x0000219b      e9a0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000021a0      ff25221c2100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x213dc8:8]=0x21a6
0x000021a6      6815000000     push 0x15
0x000021ab      e990feffff     jmp sym..plt
;-- imp.strlen:
0x000021b0      ff251a1c2100   jmp qword [reloc.strlen]                ; [0x213dd0:8]=0x21b6
0x000021b6      6816000000     push 0x16
0x000021bb      e980feffff     jmp sym..plt
;-- imp.__lxstat:
0x000021c0      ff25121c2100   jmp qword [reloc.__lxstat]              ; [0x213dd8:8]=0x21c6
0x000021c6      6817000000     push 0x17
0x000021cb      e970feffff     jmp sym..plt
;-- imp.openat:
0x000021d0      ff250a1c2100   jmp qword [reloc.openat]                ; [0x213de0:8]=0x21d6
0x000021d6      6818000000     push 0x18
0x000021db      e960feffff     jmp sym..plt
;-- imp.chdir:
0x000021e0      ff25021c2100   jmp qword [reloc.chdir]                 ; [0x213de8:8]=0x21e6
0x000021e6      6819000000     push 0x19                               ; ";"
0x000021eb      e950feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000021f0      ff25fa1b2100   jmp qword [reloc.__stack_chk_fail]      ; [0x213df0:8]=0x21f6
0x000021f6      681a000000     push 0x1a
0x000021fb      e940feffff     jmp sym..plt
;-- imp.getopt_long:
0x00002200      ff25f21b2100   jmp qword [reloc.getopt_long]           ; [0x213df8:8]=0x2206
0x00002206      681b000000     push 0x1b
0x0000220b      e930feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00002210      ff25ea1b2100   jmp qword [reloc.mbrtowc]               ; [0x213e00:8]=0x2216
0x00002216      681c000000     push 0x1c
0x0000221b      e920feffff     jmp sym..plt
;-- imp.strchr:
0x00002220      ff25e21b2100   jmp qword [reloc.strchr]                ; [0x213e08:8]=0x2226 ; "&\""
0x00002226      681d000000     push 0x1d
0x0000222b      e910feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00002230      ff25da1b2100   jmp qword [reloc.__fxstatat]            ; [0x213e10:8]=0x2236 ; "6\""
0x00002236      681e000000     push 0x1e
0x0000223b      e900feffff     jmp sym..plt
;-- imp.__overflow:
0x00002240      ff25d21b2100   jmp qword [reloc.__overflow]            ; [0x213e18:8]=0x2246 ; "F\""
0x00002246      681f000000     push 0x1f
0x0000224b      e9f0fdffff     jmp sym..plt
;-- imp.strrchr:
0x00002250      ff25ca1b2100   jmp qword [reloc.strrchr]               ; [0x213e20:8]=0x2256 ; "V\""
0x00002256      6820000000     push 0x20                               ; "@"
0x0000225b      e9e0fdffff     jmp sym..plt
;-- imp.uname:
0x00002260      ff25c21b2100   jmp qword [reloc.uname]                 ; [0x213e28:8]=0x2266 ; "f\""
0x00002266      6821000000     push 0x21                               ; '!'
0x0000226b      e9d0fdffff     jmp sym..plt
;-- imp.lseek:
0x00002270      ff25ba1b2100   jmp qword [reloc.lseek]                 ; [0x213e30:8]=0x2276 ; "v\""
0x00002276      6822000000     push 0x22                               ; '"'
0x0000227b      e9c0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00002280      ff25b21b2100   jmp qword [reloc.__assert_fail]         ; [0x213e38:8]=0x2286
0x00002286      6823000000     push 0x23                               ; '#'
0x0000228b      e9b0fdffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00002290      ff25aa1b2100   jmp qword [reloc.__strtoul_internal]    ; [0x213e40:8]=0x2296
0x00002296      6824000000     push 0x24                               ; '$'
0x0000229b      e9a0fdffff     jmp sym..plt
;-- imp.memset:
0x000022a0      ff25a21b2100   jmp qword [reloc.memset]                ; [0x213e48:8]=0x22a6
0x000022a6      6825000000     push 0x25                               ; '%'
0x000022ab      e990fdffff     jmp sym..plt
;-- imp.getcwd:
0x000022b0      ff259a1b2100   jmp qword [reloc.getcwd]                ; [0x213e50:8]=0x22b6
0x000022b6      6826000000     push 0x26                               ; '&'
0x000022bb      e980fdffff     jmp sym..plt
;-- imp.canonicalize_file_name:
0x000022c0      ff25921b2100   jmp qword [reloc.canonicalize_file_name] ; [0x213e58:8]=0x22c6
0x000022c6      6827000000     push 0x27                               ; '''
0x000022cb      e970fdffff     jmp sym..plt
;-- imp.close:
0x000022d0      ff258a1b2100   jmp qword [reloc.close]                 ; [0x213e60:8]=0x22d6
0x000022d6      6828000000     push 0x28                               ; '('
0x000022db      e960fdffff     jmp sym..plt
;-- imp.strspn:
0x000022e0      ff25821b2100   jmp qword [reloc.strspn]                ; [0x213e68:8]=0x22e6
0x000022e6      6829000000     push 0x29                               ; ')' ; "n\x06"
0x000022eb      e950fdffff     jmp sym..plt
;-- imp.memchr:
0x000022f0      ff257a1b2100   jmp qword [reloc.memchr]                ; [0x213e70:8]=0x22f6
0x000022f6      682a000000     push 0x2a                               ; '*'
0x000022fb      e940fdffff     jmp sym..plt
;-- imp.memcmp:
0x00002300      ff25721b2100   jmp qword [reloc.memcmp]                ; [0x213e78:8]=0x2306
0x00002306      682b000000     push 0x2b                               ; '+'
0x0000230b      e930fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002310      ff256a1b2100   jmp qword [reloc.fputs_unlocked]        ; [0x213e80:8]=0x2316
0x00002316      682c000000     push 0x2c                               ; ','
0x0000231b      e920fdffff     jmp sym..plt
;-- imp.calloc:
0x00002320      ff25621b2100   jmp qword [reloc.calloc]                ; [0x213e88:8]=0x2326 ; "&#"
0x00002326      682d000000     push 0x2d                               ; '-'
0x0000232b      e910fdffff     jmp sym..plt
;-- imp.__getdelim:
0x00002330      ff255a1b2100   jmp qword [reloc.__getdelim]            ; [0x213e90:8]=0x2336 ; "6#"
0x00002336      682e000000     push 0x2e                               ; '.'
0x0000233b      e900fdffff     jmp sym..plt
;-- imp.strcmp:
0x00002340      ff25521b2100   jmp qword [reloc.strcmp]                ; [0x213e98:8]=0x2346 ; "F#"
0x00002346      682f000000     push 0x2f                               ; '/'
0x0000234b      e9f0fcffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x00002350      ff254a1b2100   jmp qword [reloc.__memcpy_chk]          ; [0x213ea0:8]=0x2356 ; "V#"
0x00002356      6830000000     push 0x30                               ; '0'
0x0000235b      e9e0fcffff     jmp sym..plt
;-- imp.memcpy:
0x00002360      ff25421b2100   jmp qword [reloc.memcpy]                ; [0x213ea8:8]=0x2366 ; "f#"
0x00002366      6831000000     push 0x31                               ; '1'
0x0000236b      e9d0fcffff     jmp sym..plt
;-- imp.fileno:
0x00002370      ff253a1b2100   jmp qword [reloc.fileno]                ; [0x213eb0:8]=0x2376 ; "v#"
0x00002376      6832000000     push 0x32                               ; '2'
0x0000237b      e9c0fcffff     jmp sym..plt
;-- imp.statfs:
0x00002380      ff25321b2100   jmp qword [reloc.statfs]                ; [0x213eb8:8]=0x2386
0x00002386      6833000000     push 0x33                               ; '3'
0x0000238b      e9b0fcffff     jmp sym..plt
;-- imp.__xstat:
0x00002390      ff252a1b2100   jmp qword [reloc.__xstat]               ; [0x213ec0:8]=0x2396
0x00002396      6834000000     push 0x34                               ; '4' ; u"@8\t@%$\x06"
0x0000239b      e9a0fcffff     jmp sym..plt
;-- imp.sync:
0x000023a0      ff25221b2100   jmp qword [reloc.sync]                  ; [0x213ec8:8]=0x23a6
0x000023a6      6835000000     push 0x35                               ; '5'
0x000023ab      e990fcffff     jmp sym..plt
;-- imp.wcwidth:
0x000023b0      ff251a1b2100   jmp qword [reloc.wcwidth]               ; [0x213ed0:8]=0x23b6
0x000023b6      6836000000     push 0x36                               ; '6'
0x000023bb      e980fcffff     jmp sym..plt
;-- imp.malloc:
0x000023c0      ff25121b2100   jmp qword [reloc.malloc]                ; [0x213ed8:8]=0x23c6
0x000023c6      6837000000     push 0x37                               ; '7'
0x000023cb      e970fcffff     jmp sym..plt
;-- imp.fflush:
0x000023d0      ff250a1b2100   jmp qword [reloc.fflush]                ; [0x213ee0:8]=0x23d6
0x000023d6      6838000000     push 0x38                               ; '8' ; u"\t@%$\x06"
0x000023db      e960fcffff     jmp sym..plt
;-- imp.getmntent:
0x000023e0      ff25021b2100   jmp qword [reloc.getmntent]             ; [0x213ee8:8]=0x23e6
0x000023e6      6839000000     push 0x39                               ; '9'
0x000023eb      e950fcffff     jmp sym..plt
;-- imp.setmntent:
0x000023f0      ff25fa1a2100   jmp qword [reloc.setmntent]             ; [0x213ef0:8]=0x23f6
0x000023f6      683a000000     push 0x3a                               ; ':' ; u"@%$\x06"
0x000023fb      e940fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002400      ff25f21a2100   jmp qword [reloc.nl_langinfo]           ; [0x213ef8:8]=0x2406
0x00002406      683b000000     push 0x3b                               ; ';'
0x0000240b      e930fcffff     jmp sym..plt
;-- imp.sscanf:
0x00002410      ff25ea1a2100   jmp qword [reloc.sscanf]                ; [0x213f00:8]=0x2416
0x00002416      683c000000     push 0x3c                               ; '<' ; u"%$\x06"
0x0000241b      e920fcffff     jmp sym..plt
;-- imp.__freading:
0x00002420      ff25e21a2100   jmp qword [reloc.__freading]            ; [0x213f08:8]=0x2426 ; "&$"
0x00002426      683d000000     push 0x3d                               ; '='
0x0000242b      e910fcffff     jmp sym..plt
;-- imp.statvfs:
0x00002430      ff25da1a2100   jmp qword [reloc.statvfs]               ; [0x213f10:8]=0x2436 ; "6$"
0x00002436      683e000000     push 0x3e                               ; '>' ; u"$\x06"
0x0000243b      e900fcffff     jmp sym..plt
;-- imp.fchdir:
0x00002440      ff25d21a2100   jmp qword [reloc.fchdir]                ; [0x213f18:8]=0x2446 ; "F$"
0x00002446      683f000000     push 0x3f                               ; '?'
0x0000244b      e9f0fbffff     jmp sym..plt
;-- imp.realloc:
0x00002450      ff25ca1a2100   jmp qword [reloc.realloc]               ; [0x213f20:8]=0x2456 ; "V$"
0x00002456      6840000000     push 0x40                               ; segment.PHDR
0x0000245b      e9e0fbffff     jmp sym..plt
;-- imp.setlocale:
0x00002460      ff25c21a2100   jmp qword [reloc.setlocale]             ; [0x213f28:8]=0x2466 ; "f$"
0x00002466      6841000000     push 0x41                               ; 'A'
0x0000246b      e9d0fbffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002470      ff25ba1a2100   jmp qword [reloc.__printf_chk]          ; [0x213f30:8]=0x2476 ; "v$"
0x00002476      6842000000     push 0x42                               ; 'B'
0x0000247b      e9c0fbffff     jmp sym..plt
;-- imp.mempcpy:
0x00002480      ff25b21a2100   jmp qword [reloc.mempcpy]               ; [0x213f38:8]=0x2486
0x00002486      6843000000     push 0x43                               ; 'C'
0x0000248b      e9b0fbffff     jmp sym..plt
;-- imp.memmove:
0x00002490      ff25aa1a2100   jmp qword [reloc.memmove]               ; [0x213f40:8]=0x2496
0x00002496      6844000000     push 0x44                               ; 'D'
0x0000249b      e9a0fbffff     jmp sym..plt
;-- imp.error:
0x000024a0      ff25a21a2100   jmp qword [reloc.error]                 ; [0x213f48:8]=0x24a6
0x000024a6      6845000000     push 0x45                               ; 'E'
0x000024ab      e990fbffff     jmp sym..plt
;-- imp.memrchr:
0x000024b0      ff259a1a2100   jmp qword [reloc.memrchr]               ; [0x213f50:8]=0x24b6
0x000024b6      6846000000     push 0x46                               ; 'F'
0x000024bb      e980fbffff     jmp sym..plt
;-- imp.open:
0x000024c0      ff25921a2100   jmp qword [reloc.open]                  ; [0x213f58:8]=0x24c6
0x000024c6      6847000000     push 0x47                               ; 'G'
0x000024cb      e970fbffff     jmp sym..plt
;-- imp.fseeko:
0x000024d0      ff258a1a2100   jmp qword [reloc.fseeko]                ; [0x213f60:8]=0x24d6
0x000024d6      6848000000     push 0x48                               ; 'H' ; "@"
0x000024db      e960fbffff     jmp sym..plt
;-- imp.fopen:
0x000024e0      ff25821a2100   jmp qword [reloc.fopen]                 ; [0x213f68:8]=0x24e6
0x000024e6      6849000000     push 0x49                               ; 'I'
0x000024eb      e950fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000024f0      ff257a1a2100   jmp qword [reloc.__cxa_atexit]          ; [0x213f70:8]=0x24f6
0x000024f6      684a000000     push 0x4a                               ; 'J'
0x000024fb      e940fbffff     jmp sym..plt
;-- imp.wcstombs:
0x00002500      ff25721a2100   jmp qword [reloc.wcstombs]              ; [0x213f78:8]=0x2506
0x00002506      684b000000     push 0x4b                               ; 'K'
0x0000250b      e930fbffff     jmp sym..plt
;-- imp.exit:
0x00002510      ff256a1a2100   jmp qword [reloc.exit]                  ; [0x213f80:8]=0x2516
0x00002516      684c000000     push 0x4c                               ; 'L'
0x0000251b      e920fbffff     jmp sym..plt
;-- imp.fwrite:
0x00002520      ff25621a2100   jmp qword [reloc.fwrite]                ; [0x213f88:8]=0x2526 ; "&%"
0x00002526      684d000000     push 0x4d                               ; 'M'
0x0000252b      e910fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002530      ff255a1a2100   jmp qword [reloc.__fprintf_chk]         ; [0x213f90:8]=0x2536 ; "6%"
0x00002536      684e000000     push 0x4e                               ; 'N'
0x0000253b      e900fbffff     jmp sym..plt
;-- imp.strdup:
0x00002540      ff25521a2100   jmp qword [reloc.strdup]                ; [0x213f98:8]=0x2546 ; "F%"
0x00002546      684f000000     push 0x4f                               ; 'O'
0x0000254b      e9f0faffff     jmp sym..plt
;-- imp.mbsinit:
0x00002550      ff254a1a2100   jmp qword [reloc.mbsinit]               ; [0x213fa0:8]=0x2556 ; "V%"
0x00002556      6850000000     push 0x50                               ; 'P' ; "@"
0x0000255b      e9e0faffff     jmp sym..plt
;-- imp.iswprint:
0x00002560      ff25421a2100   jmp qword [reloc.iswprint]              ; [0x213fa8:8]=0x2566 ; "f%"
0x00002566      6851000000     push 0x51                               ; 'Q'
0x0000256b      e9d0faffff     jmp sym..plt
;-- imp.hasmntopt:
0x00002570      ff253a1a2100   jmp qword [reloc.hasmntopt]             ; [0x213fb0:8]=0x2576 ; "v%"
0x00002576      6852000000     push 0x52                               ; 'R'
0x0000257b      e9c0faffff     jmp sym..plt
;-- imp.strstr:
0x00002580      ff25321a2100   jmp qword [reloc.strstr]                ; [0x213fb8:8]=0x2586
0x00002586      6853000000     push 0x53                               ; 'S'
0x0000258b      e9b0faffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00002590      ff252a1a2100   jmp qword [reloc.__ctype_b_loc]         ; [0x213fc0:8]=0x2596
0x00002596      6854000000     push 0x54                               ; 'T'
0x0000259b      e9a0faffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000025a0      ff25221a2100   jmp qword [reloc.__sprintf_chk]         ; [0x213fc8:8]=0x25a6
0x000025a6      6855000000     push 0x55                               ; 'U'
0x000025ab      e990faffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000025b0      .qword 0x906600211a3a25ff                              ; [13] -r-x section size 8 named .plt.got
0x000025b8      0000           add byte [rax], al
0x000025ba      0000           add byte [rax], al
0x000025bc      0000           add byte [rax], al
0x000025be      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000025c0      4157           push r15                                ; [14] -r-x section size 51726 named .text
0x000025c2      4156           push r14
0x000025c4      4989f6         mov r14, rsi
0x000025c7      4155           push r13
0x000025c9      4154           push r12
0x000025cb      55             push rbp
0x000025cc      53             push rbx
0x000025cd      488d1dac1221.  lea rbx, obj.long_options               ; 0x213880
0x000025d4      31ed           xor ebp, ebp
0x000025d6      4881ec480100.  sub rsp, 0x148
0x000025dd      897c2408       mov dword [rsp + 8], edi
0x000025e1      488b3e         mov rdi, qword [rsi]
0x000025e4      4c8dbc248000.  lea r15, [rsp + 0x80]
0x000025ec      64488b042528.  mov rax, qword fs:[0x28]
0x000025f5      488984243801.  mov qword [rsp + 0x138], rax
0x000025fd      31c0           xor eax, eax
0x000025ff      e8fc610000     call sym.set_program_name
0x00002604      488d35f6df00.  lea rsi, [0x00010601]
0x0000260b      bf06000000     mov edi, 6
0x00002610      e84bfeffff     call sym.imp.setlocale
0x00002615      488d3515cb00.  lea rsi, str.usr_local_share_locale     ; 0xf131 ; "/usr/local/share/locale"
0x0000261c      488d3dc9ca00.  lea rdi, [0x0000f0ec]                   ; "coreutils"
0x00002623      e858fbffff     call sym.imp.bindtextdomain
0x00002628      488d3dbdca00.  lea rdi, [0x0000f0ec]                   ; "coreutils"
0x0000262f      e82cfbffff     call sym.imp.textdomain
0x00002634      488d3d653700.  lea rdi, sym.close_stdout               ; 0x5da0 ; "USH\x83\xec\bH\x8b=[\xe5 "
0x0000263b      e880c90000     call sym.atexit
0x00002640      488d3551d700.  lea rsi, str.options__s_and__s_are_mutually_exclusive ; 0xfd98 ; "options %s and %s are mutually exclusive"
0x00002647      ba05000000     mov edx, 5
0x0000264c      31ff           xor edi, edi
0x0000264e      48c705971d21.  mov qword [obj.fs_select_list], 0       ; [0x2143f0:8]=0
0x00002659      48c705841d21.  mov qword [obj.fs_exclude_list], 0      ; [0x2143e8:8]=0
0x00002664      c605a31d2100.  mov byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x0000266b      c6059a1d2100.  mov byte [obj.show_listed_fs], 0        ; [0x21440c:1]=0
0x00002672      c7058c1d2100.  mov dword [obj.human_output_opts], 0xffffffff ; [0x214408:4]=0
0x0000267c      c605561d2100.  mov byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x00002683      c605731d2100.  mov byte [obj.file_systems_processed], 0 ; [0x2143fd:1]=0
0x0000268a      c705641d2100.  mov dword [obj.exit_status], 0          ; [0x2143f8:4]=0
0x00002694      c6053d1d2100.  mov byte [obj.print_grand_total], 0     ; [0x2143d8:1]=0
0x0000269b      48c705fa1c21.  mov qword [obj.grand_fsu], 1            ; [0x2143a0:8]=0
0x000026a6      e8e5faffff     call sym.imp.dcgettext
0x000026ab      4989c4         mov r12, rax
0x000026ae      6690           nop
0x000026b0      8b7c2408       mov edi, dword [rsp + 8]
0x000026b4      488d158eca00.  lea rdx, str.aB:iF:hHklmPTt:vx:         ; 0xf149 ; "aB:iF:hHklmPTt:vx:"
0x000026bb      4d89f8         mov r8, r15
0x000026be      4889d9         mov rcx, rbx
0x000026c1      4c89f6         mov rsi, r14
0x000026c4      c78424800000.  mov dword [rsp + 0x80], 0xffffffff      ; [0xffffffff:4]=-1 ; -1
0x000026cf      e82cfbffff     call sym.imp.getopt_long
0x000026d4      83f8ff         cmp eax, 0xffffffff
0x000026d7      0f8433030000   je 0x2a10
0x000026dd      83f869         cmp eax, 0x69
0x000026e0      0f849a010000   je 0x2880
0x000026e6      7e38           jle 0x2720
0x000026e8      83f876         cmp eax, 0x76
0x000026eb      74c3           je 0x26b0
0x000026ed      0f8e7d000000   jle 0x2770
0x000026f3      3d81000000     cmp eax, 0x81
0x000026f8      0f843a020000   je 0x2938
0x000026fe      0f8f04010000   jg 0x2808
0x00002704      83f878         cmp eax, 0x78
0x00002707      0f844b020000   je 0x2958
0x0000270d      83c080         add eax, 0xffffff80
0x00002710      0f85f0020000   jne 0x2a06
0x00002716      c605df1c2100.  mov byte [obj.require_sync], 0          ; [0x2143fc:1]=0
0x0000271d      eb91           jmp 0x26b0
0x0000271f      90             nop
0x00002720      83f848         cmp eax, 0x48
0x00002723      0f8477010000   je 0x28a0
0x00002729      7e7d           jle 0x27a8
0x0000272b      83f854         cmp eax, 0x54
0x0000272e      0f84ac010000   je 0x28e0
0x00002734      0f8e86010000   jle 0x28c0
0x0000273a      83f861         cmp eax, 0x61
0x0000273d      0f8405020000   je 0x2948
0x00002743      83f868         cmp eax, 0x68
0x00002746      0f85ba020000   jne 0x2a06
0x0000274c      c705b21c2100.  mov dword [obj.human_output_opts], 0xb0 ; [0x214408:4]=0
0x00002756      48c7059f1c21.  mov qword [obj.output_block_size], 1    ; [0x214400:8]=0
0x00002761      e94affffff     jmp 0x26b0
0x00002766      662e0f1f8400.  nop word cs:[rax + rax]
0x00002770      83f86c         cmp eax, 0x6c
0x00002773      0f84af010000   je 0x2928
0x00002779      0f8e81010000   jle 0x2900
0x0000277f      83f86d         cmp eax, 0x6d
0x00002782      0f8579020000   jne 0x2a01
0x00002788      c705761c2100.  mov dword [obj.human_output_opts], 0    ; [0x214408:4]=0
0x00002792      48c705631c21.  mov qword [obj.output_block_size], 0x100000 ; [0x214400:8]=0
0x0000279d      e90effffff     jmp 0x26b0
0x000027a2      660f1f440000   nop word [rax + rax]
0x000027a8      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000027ad      0f840a130000   je 0x3abd
0x000027b3      0f8ecf010000   jle 0x2988
0x000027b9      83f842         cmp eax, 0x42
0x000027bc      0f850f020000   jne 0x29d1
0x000027c2      488b3d4f1b21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x214318:8]=0
0x000027c9      488d15301c21.  lea rdx, obj.output_block_size          ; 0x214400
0x000027d0      488d35311c21.  lea rsi, obj.human_output_opts          ; 0x214408
0x000027d7      e884570000     call sym.human_options
0x000027dc      85c0           test eax, eax
0x000027de      0f84ccfeffff   je 0x26b0
0x000027e4      4c8b052d1b21.  mov r8, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x214318:8]=0
0x000027eb      8bb424800000.  mov esi, dword [rsp + 0x80]
0x000027f2      488d0d871021.  lea rcx, obj.long_options               ; 0x213880
0x000027f9      ba42000000     mov edx, 0x42                           ; 'B'
0x000027fe      89c7           mov edi, eax
0x00002800      e88b880000     call sym.xstrtol_fatal
0x00002805      0f1f00         nop dword [rax]
0x00002808      3d82000000     cmp eax, 0x82
0x0000280d      7461           je 0x2870
0x0000280f      3d83000000     cmp eax, 0x83
0x00002814      0f85ec010000   jne 0x2a06
0x0000281a      8b05601b2100   mov eax, dword [obj.header_mode]        ; [0x214380:4]=0
0x00002820      83f801         cmp eax, 1
0x00002823      0f8455130000   je 0x3b7e
0x00002829      85c0           test eax, eax
0x0000282b      7509           jne 0x2836
0x0000282d      4084ed         test bpl, bpl
0x00002830      0f85b9120000   jne 0x3aef
0x00002836      803d9c1b2100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x0000283d      0f852b130000   jne 0x3b6e
0x00002843      488b3dce1a21.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x214318:8]=0
0x0000284a      c7052c1b2100.  mov dword [obj.header_mode], 4          ; [0x214380:4]=0
0x00002854      4885ff         test rdi, rdi
0x00002857      0f8453feffff   je 0x26b0
0x0000285d      e8ae290000     call sym.decode_output_arg
0x00002862      e949feffff     jmp 0x26b0
0x00002867      660f1f840000.  nop word [rax + rax]
0x00002870      c605611b2100.  mov byte [obj.print_grand_total], 1     ; [0x2143d8:1]=0
0x00002877      e934feffff     jmp 0x26b0
0x0000287c      0f1f4000       nop dword [rax]
0x00002880      833df91a2100.  cmp dword [obj.header_mode], 4          ; [0x214380:4]=0
0x00002887      0f84f1120000   je 0x3b7e
0x0000288d      c705e91a2100.  mov dword [obj.header_mode], 1          ; [0x214380:4]=0
0x00002897      e914feffff     jmp 0x26b0
0x0000289c      0f1f4000       nop dword [rax]
0x000028a0      c7055e1b2100.  mov dword [obj.human_output_opts], 0x90 ; [0x214408:4]=0
0x000028aa      48c7054b1b21.  mov qword [obj.output_block_size], 1    ; [0x214400:8]=0
0x000028b5      e9f6fdffff     jmp 0x26b0
0x000028ba      660f1f440000   nop word [rax + rax]
0x000028c0      83f850         cmp eax, 0x50
0x000028c3      0f853d010000   jne 0x2a06
0x000028c9      833db01a2100.  cmp dword [obj.header_mode], 4          ; [0x214380:4]=0
0x000028d0      0f8477120000   je 0x3b4d
0x000028d6      bd01000000     mov ebp, 1
0x000028db      e9d0fdffff     jmp 0x26b0
0x000028e0      833d991a2100.  cmp dword [obj.header_mode], 4          ; [0x214380:4]=0
0x000028e7      0f8481120000   je 0x3b6e
0x000028ed      c605e51a2100.  mov byte [obj.print_type], 1            ; [0x2143d9:1]=0
0x000028f4      e9b7fdffff     jmp 0x26b0
0x000028f9      0f1f80000000.  nop dword [rax]
0x00002900      83f86b         cmp eax, 0x6b
0x00002903      0f85fd000000   jne 0x2a06
0x00002909      c705f51a2100.  mov dword [obj.human_output_opts], 0    ; [0x214408:4]=0
0x00002913      48c705e21a21.  mov qword [obj.output_block_size], 0x400 ; [0x214400:8]=0
0x0000291e      e98dfdffff     jmp 0x26b0
0x00002923      0f1f440000     nop dword [rax + rax]
0x00002928      c605de1a2100.  mov byte [obj.show_local_fs], 1         ; [0x21440d:1]=0
0x0000292f      e97cfdffff     jmp 0x26b0
0x00002934      0f1f4000       nop dword [rax]
0x00002938      c605bd1a2100.  mov byte [obj.require_sync], 1          ; [0x2143fc:1]=0
0x0000293f      e96cfdffff     jmp 0x26b0
0x00002944      0f1f4000       nop dword [rax]
0x00002948      c605bf1a2100.  mov byte [obj.show_all_fs], 1           ; [0x21440e:1]=0
0x0000294f      e95cfdffff     jmp 0x26b0
0x00002954      0f1f4000       nop dword [rax]
0x00002958      bf10000000     mov edi, 0x10
0x0000295d      4c8b2db41921.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x214318:8]=0
0x00002964      e867840000     call sym.xmalloc
0x00002969      488b15781a21.  mov rdx, qword [obj.fs_exclude_list]    ; [0x2143e8:8]=0
0x00002970      488905711a21.  mov qword [obj.fs_exclude_list], rax    ; [0x2143e8:8]=0
0x00002977      4c8928         mov qword [rax], r13
0x0000297a      48895008       mov qword [rax + 8], rdx
0x0000297e      e92dfdffff     jmp 0x26b0
0x00002983      0f1f440000     nop dword [rax + rax]
0x00002988      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000298d      7577           jne 0x2a06
0x0000298f      488d05fac700.  lea rax, str.Paul_Eggert                ; 0xf190 ; "Paul Eggert"
0x00002996      488b3d6b1921.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x0000299d      488b0dbc1821.  mov rcx, qword [obj.Version]            ; [0x214260:8]=0xff76 str.8.31 ; "v\xff"
0x000029a4      6a00           push 0
0x000029a6      4c8d0dc1c700.  lea r9, str.David_MacKenzie             ; 0xf16e ; "David MacKenzie"
0x000029ad      4c8d05cac700.  lea r8, str.Torbjorn_Granlund           ; 0xf17e ; "Torbjorn Granlund"
0x000029b4      50             push rax
0x000029b5      488d152cc700.  lea rdx, str.GNU_coreutils              ; 0xf0e8 ; "GNU coreutils"
0x000029bc      488d35a9c600.  lea rsi, [0x0000f06c]                   ; "df"
0x000029c3      31c0           xor eax, eax
0x000029c5      e8a6820000     call sym.version_etc
0x000029ca      31ff           xor edi, edi
0x000029cc      e83ffbffff     call sym.imp.exit
0x000029d1      83f846         cmp eax, 0x46
0x000029d4      7530           jne 0x2a06
0x000029d6      bf10000000     mov edi, 0x10
0x000029db      4c8b2d361921.  mov r13, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x214318:8]=0
0x000029e2      e8e9830000     call sym.xmalloc
0x000029e7      488b15021a21.  mov rdx, qword [obj.fs_select_list]     ; [0x2143f0:8]=0
0x000029ee      488905fb1921.  mov qword [obj.fs_select_list], rax     ; [0x2143f0:8]=0
0x000029f5      4c8928         mov qword [rax], r13
0x000029f8      48895008       mov qword [rax + 8], rdx
0x000029fc      e9affcffff     jmp 0x26b0
0x00002a01      83f874         cmp eax, 0x74
0x00002a04      74d0           je 0x29d6
0x00002a06      bf01000000     mov edi, 1
0x00002a0b      e860230000     call sym.usage
0x00002a10      833df1192100.  cmp dword [obj.human_output_opts], 0xffffffff ; [0x214408:4]=0
0x00002a17      0f8407020000   je 0x2c24
0x00002a1d      8b055d192100   mov eax, dword [obj.header_mode]        ; [0x214380:4]=0
0x00002a23      83f801         cmp eax, 1
0x00002a26      741c           je 0x2a44
0x00002a28      83f804         cmp eax, 4
0x00002a2b      7417           je 0x2a44
0x00002a2d      f605d4192100.  test byte [obj.human_output_opts], 0x10 ; [0x214408:1]=0
0x00002a34      0f8488020000   je 0x2cc2
0x00002a3a      c7053c192100.  mov dword [obj.header_mode], 2          ; [0x214380:4]=0
0x00002a44      488b2da51921.  mov rbp, qword [obj.fs_select_list]     ; [0x2143f0:8]=0
0x00002a4b      4531e4         xor r12d, r12d
0x00002a4e      4885ed         test rbp, rbp
0x00002a51      0f84aa000000   je 0x2b01
0x00002a57      660f1f840000.  nop word [rax + rax]
0x00002a60      488b1d811921.  mov rbx, qword [obj.fs_exclude_list]    ; [0x2143e8:8]=0
0x00002a67      4885db         test rbx, rbx
0x00002a6a      7459           je 0x2ac5
0x00002a6c      4c8b6d00       mov r13, qword [rbp]
0x00002a70      eb0f           jmp 0x2a81
0x00002a72      660f1f440000   nop word [rax + rax]
0x00002a78      488b5b08       mov rbx, qword [rbx + 8]
0x00002a7c      4885db         test rbx, rbx
0x00002a7f      7444           je 0x2ac5
0x00002a81      488b33         mov rsi, qword [rbx]
0x00002a84      4c89ef         mov rdi, r13
0x00002a87      e8b4f8ffff     call sym.imp.strcmp
0x00002a8c      85c0           test eax, eax
0x00002a8e      75e8           jne 0x2a78
0x00002a90      4c89ef         mov rdi, r13
0x00002a93      41bc01000000   mov r12d, 1
0x00002a99      e8727a0000     call sym.quote
0x00002a9e      488d3523d300.  lea rsi, str.file_system_type__s_both_selected_and_excluded ; 0xfdc8 ; "file system type %s both selected and excluded"
0x00002aa5      4889c3         mov rbx, rax
0x00002aa8      ba05000000     mov edx, 5
0x00002aad      31ff           xor edi, edi
0x00002aaf      e8dcf6ffff     call sym.imp.dcgettext
0x00002ab4      4889d9         mov rcx, rbx
0x00002ab7      4889c2         mov rdx, rax
0x00002aba      31f6           xor esi, esi
0x00002abc      31ff           xor edi, edi
0x00002abe      31c0           xor eax, eax
0x00002ac0      e8dbf9ffff     call sym.imp.error
0x00002ac5      488b6d08       mov rbp, qword [rbp + 8]
0x00002ac9      4885ed         test rbp, rbp
0x00002acc      7592           jne 0x2a60
0x00002ace      4584e4         test r12b, r12b
0x00002ad1      b801000000     mov eax, 1
0x00002ad6      7429           je 0x2b01
0x00002ad8      488b8c243801.  mov rcx, qword [rsp + 0x138]
0x00002ae0      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002ae9      0f859f100000   jne 0x3b8e
0x00002aef      4881c4480100.  add rsp, 0x148
0x00002af6      5b             pop rbx
0x00002af7      5d             pop rbp
0x00002af8      415c           pop r12
0x00002afa      415d           pop r13
0x00002afc      415e           pop r14
0x00002afe      415f           pop r15
0x00002b00      c3             ret
0x00002b01      8b0509182100   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002b07      3b442408       cmp eax, dword [rsp + 8]
0x00002b0b      0f8d58010000   jge 0x2c69
0x00002b11      8b4c2408       mov ecx, dword [rsp + 8]
0x00002b15      ba90000000     mov edx, 0x90
0x00002b1a      31f6           xor esi, esi
0x00002b1c      29c1           sub ecx, eax
0x00002b1e      4889d0         mov rax, rdx
0x00002b21      4863c9         movsxd rcx, ecx
0x00002b24      48f7e1         mul rcx
0x00002b27      0f8016100000   jo 0x3b43
0x00002b2d      4885c0         test rax, rax
0x00002b30      0f88dd0f0000   js 0x3b13
0x00002b36      4885f6         test rsi, rsi
0x00002b39      0f85d40f0000   jne 0x3b13
0x00002b3f      4869f9900000.  imul rdi, rcx, 0x90
0x00002b46      488d2d2ae100.  lea rbp, [0x00010c77]                   ; "%s"
0x00002b4d      e87e820000     call sym.xmalloc
0x00002b52      4c6325b71721.  movsxd r12, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002b59      4c897c2410     mov qword [rsp + 0x10], r15
0x00002b5e      4989c5         mov r13, rax
0x00002b61      4d89f7         mov r15, r14
0x00002b64      4889442460     mov qword [rsp + 0x60], rax
0x00002b69      4d89e6         mov r14, r12
0x00002b6c      448b642408     mov r12d, dword [rsp + 8]
0x00002b71      eb40           jmp 0x2bb3
0x00002b73      2b1d97172100   sub ebx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002b79      4863c3         movsxd rax, ebx
0x00002b7c      4869c0900000.  imul rax, rax, 0x90
0x00002b83      418b440518     mov eax, dword [r13 + rax + 0x18]
0x00002b88      2500f00000     and eax, 0xf000
0x00002b8d      3d00100000     cmp eax, 0x1000
0x00002b92      741b           je 0x2baf
0x00002b94      4b8b3cf7       mov rdi, qword [r15 + r14*8]
0x00002b98      31c0           xor eax, eax
0x00002b9a      be00010000     mov esi, 0x100
0x00002b9f      e81cf9ffff     call sym.imp.open
0x00002ba4      85c0           test eax, eax
0x00002ba6      7807           js 0x2baf
0x00002ba8      89c7           mov edi, eax
0x00002baa      e821f7ffff     call sym.imp.close
0x00002baf      4983c601       add r14, 1
0x00002bb3      4539e6         cmp r14d, r12d
0x00002bb6      4489f3         mov ebx, r14d
0x00002bb9      0f8da2000000   jge 0x2c61
0x00002bbf      4489f2         mov edx, r14d
0x00002bc2      2b1548172100   sub edx, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002bc8      4b8b34f7       mov rsi, qword [r15 + r14*8]
0x00002bcc      bf01000000     mov edi, 1
0x00002bd1      4863d2         movsxd rdx, edx
0x00002bd4      4869d2900000.  imul rdx, rdx, 0x90
0x00002bdb      4c01ea         add rdx, r13
0x00002bde      e8adf7ffff     call sym.imp.__xstat
0x00002be3      85c0           test eax, eax
0x00002be5      748c           je 0x2b73
0x00002be7      4b8b14f7       mov rdx, qword [r15 + r14*8]
0x00002beb      be03000000     mov esi, 3
0x00002bf0      31ff           xor edi, edi
0x00002bf2      e849770000     call sym.quotearg_n_style_colon
0x00002bf7      4889c3         mov rbx, rax
0x00002bfa      e8b1f4ffff     call sym.imp.__errno_location
0x00002bff      8b30           mov esi, dword [rax]
0x00002c01      4889d9         mov rcx, rbx
0x00002c04      4889ea         mov rdx, rbp
0x00002c07      31ff           xor edi, edi
0x00002c09      31c0           xor eax, eax
0x00002c0b      e890f8ffff     call sym.imp.error
0x00002c10      c705de172100.  mov dword [obj.exit_status], 1          ; [0x2143f8:4]=0
0x00002c1a      4bc704f70000.  mov qword [r15 + r14*8], 0
0x00002c22      eb8b           jmp 0x2baf
0x00002c24      4084ed         test bpl, bpl
0x00002c27      0f84ad000000   je 0x2cda
0x00002c2d      488d3d68c500.  lea rdi, str.POSIXLY_CORRECT            ; 0xf19c ; "POSIXLY_CORRECT"
0x00002c34      c705ca172100.  mov dword [obj.human_output_opts], 0    ; [0x214408:4]=0
0x00002c3e      e80df4ffff     call sym.imp.getenv
0x00002c43      4883f801       cmp rax, 1
0x00002c47      4819c0         sbb rax, rax
0x00002c4a      2500020000     and eax, 0x200
0x00002c4f      480500020000   add rax, 0x200
0x00002c55      488905a41721.  mov qword [obj.output_block_size], rax  ; [0x214400:8]=0
0x00002c5c      e9bcfdffff     jmp 0x2a1d
0x00002c61      4d89fe         mov r14, r15
0x00002c64      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00002c69      48833d7f1721.  cmp qword [obj.fs_select_list], 0       ; [0x2143f0:8]=0
0x00002c71      bf01000000     mov edi, 1
0x00002c76      0f84e60c0000   je 0x3962
0x00002c7c      e89f8f0000     call sym.read_file_system_list
0x00002c81      4885c0         test rax, rax
0x00002c84      488905551721.  mov qword [obj.mount_list], rax         ; [0x2143e0:8]=0
0x00002c8b      0f84550c0000   je 0x38e6
0x00002c91      803d64172100.  cmp byte [obj.require_sync], 0          ; [0x2143fc:1]=0
0x00002c98      7405           je 0x2c9f
0x00002c9a      e801f7ffff     call sym.imp.sync
0x00002c9f      833dda162100.  cmp dword [obj.header_mode], 4          ; [0x214380:4]=0
0x00002ca6      0f87780e0000   ja 0x3b24
0x00002cac      8b05ce162100   mov eax, dword [obj.header_mode]        ; [0x214380:4]=0
0x00002cb2      488d1567c600.  lea rdx, [0x0000f320]
0x00002cb9      48630482       movsxd rax, dword [rdx + rax*4]
0x00002cbd      4801d0         add rax, rdx
0x00002cc0      ffe0           jmp rax
0x00002cc2      4084ed         test bpl, bpl
0x00002cc5      0f8479fdffff   je 0x2a44
0x00002ccb      c705ab162100.  mov dword [obj.header_mode], 3          ; [0x214380:4]=0
0x00002cd5      e96afdffff     jmp 0x2a44
0x00002cda      488d3dcbc400.  lea rdi, str.DF_BLOCK_SIZE              ; 0xf1ac ; "DF_BLOCK_SIZE"
0x00002ce1      e86af3ffff     call sym.imp.getenv
0x00002ce6      488d15131721.  lea rdx, obj.output_block_size          ; 0x214400
0x00002ced      488d35141721.  lea rsi, obj.human_output_opts          ; 0x214408
0x00002cf4      4889c7         mov rdi, rax
0x00002cf7      e864520000     call sym.human_options
0x00002cfc      e91cfdffff     jmp 0x2a1d
0x00002d01      31f6           xor esi, esi
0x00002d03      31ff           xor edi, edi
0x00002d05      e896140000     call sym.alloc_field
0x00002d0a      803dc8162100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x00002d11      740c           je 0x2d1f
0x00002d13      31f6           xor esi, esi
0x00002d15      bf01000000     mov edi, 1
0x00002d1a      e881140000     call sym.alloc_field
0x00002d1f      31f6           xor esi, esi
0x00002d21      bf02000000     mov edi, 2
0x00002d26      e875140000     call sym.alloc_field
0x00002d2b      31f6           xor esi, esi
0x00002d2d      bf03000000     mov edi, 3
0x00002d32      e869140000     call sym.alloc_field
0x00002d37      31f6           xor esi, esi
0x00002d39      bf04000000     mov edi, 4
0x00002d3e      e85d140000     call sym.alloc_field
0x00002d43      488d357fc400.  lea rsi, str.Capacity                   ; 0xf1c9 ; "Capacity"
0x00002d4a      bf05000000     mov edi, 5
0x00002d4f      e84c140000     call sym.alloc_field
0x00002d54      31f6           xor esi, esi
0x00002d56      bf0a000000     mov edi, 0xa
0x00002d5b      e840140000     call sym.alloc_field
0x00002d60      e8ab110000     call sym.get_header
0x00002d65      486305a41521.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002d6c      3b442408       cmp eax, dword [rsp + 8]
0x00002d70      0f8d42080000   jge 0x35b8
0x00002d76      4889442410     mov qword [rsp + 0x10], rax
0x00002d7b      488d8424a000.  lea rax, [rsp + 0xa0]
0x00002d83      c60582162100.  mov byte [obj.show_listed_fs], 1        ; [0x21440c:1]=0
0x00002d8a      4c89742440     mov qword [rsp + 0x40], r14
0x00002d8f      4c897c2478     mov qword [rsp + 0x78], r15
0x00002d94      4889442448     mov qword [rsp + 0x48], rax
0x00002d99      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00002d9e      488b442410     mov rax, qword [rsp + 0x10]
0x00002da3      488b0cc1       mov rcx, qword [rcx + rax*8]
0x00002da7      4885c9         test rcx, rcx
0x00002daa      4889cb         mov rbx, rcx
0x00002dad      48894c2430     mov qword [rsp + 0x30], rcx
0x00002db2      0f84ca030000   je 0x3182
0x00002db8      2b0552152100   sub eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x00002dbe      4898           cdqe
0x00002dc0      4869c0900000.  imul rax, rax, 0x90
0x00002dc7      4803442460     add rax, qword [rsp + 0x60]
0x00002dcc      4889442450     mov qword [rsp + 0x50], rax
0x00002dd1      8b4018         mov eax, dword [rax + 0x18]
0x00002dd4      89442418       mov dword [rsp + 0x18], eax
0x00002dd8      2500b00000     and eax, sym.xstrdup                    ; 0xb000 ; "SH\x89\xfb\xe8\xa7q\xff\xffH\x89\xdfH\x8dp\x01[\xeb\xbdf.\x0f\x1f\x84"
0x00002ddd      3d00200000     cmp eax, 0x2000
0x00002de2      0f857e010000   jne 0x2f66
0x00002de8      4889cf         mov rdi, rcx
0x00002deb      e8d0f4ffff     call sym.imp.canonicalize_file_name
0x00002df0      4885c0         test rax, rax
0x00002df3      4889442468     mov qword [rsp + 0x68], rax
0x00002df8      0f84d90a0000   je 0x38d7
0x00002dfe      80382f         cmp byte [rax], 0x2f
0x00002e01      480f44d8       cmove rbx, rax
0x00002e05      48895c2418     mov qword [rsp + 0x18], rbx
0x00002e0a      488b1dcf1521.  mov rbx, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x00002e11      4885db         test rbx, rbx
0x00002e14      0f845e0c0000   je 0x3a78
0x00002e1a      4531f6         xor r14d, r14d
0x00002e1d      48c744245800.  mov qword [rsp + 0x58], 0
0x00002e26      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00002e2f      c644242000     mov byte [rsp + 0x20], 0
0x00002e34      0f1f4000       nop dword [rax]
0x00002e38      488b2b         mov rbp, qword [rbx]
0x00002e3b      4889ef         mov rdi, rbp
0x00002e3e      e87df4ffff     call sym.imp.canonicalize_file_name
0x00002e43      4885c0         test rax, rax
0x00002e46      4989c4         mov r12, rax
0x00002e49      7407           je 0x2e52
0x00002e4b      80382f         cmp byte [rax], 0x2f
0x00002e4e      480f44e8       cmove rbp, rax
0x00002e52      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002e57      4889ee         mov rsi, rbp
0x00002e5a      e8e1f4ffff     call sym.imp.strcmp
0x00002e5f      85c0           test eax, eax
0x00002e61      0f85cb000000   jne 0x2f32
0x00002e67      4c8b35721521.  mov r14, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x00002e6e      4531ff         xor r15d, r15d
0x00002e71      4c8b6b08       mov r13, qword [rbx + 8]
0x00002e75      4d85f6         test r14, r14
0x00002e78      0f8498040000   je 0x3316
0x00002e7e      6690           nop
0x00002e80      498b7e08       mov rdi, qword [r14 + 8]
0x00002e84      4c89ee         mov rsi, r13
0x00002e87      e8b4f4ffff     call sym.imp.strcmp
0x00002e8c      85c0           test eax, eax
0x00002e8e      4d0f44fe       cmove r15, r14
0x00002e92      4d8b7630       mov r14, qword [r14 + 0x30]
0x00002e96      4d85f6         test r14, r14
0x00002e99      75e5           jne 0x2e80
0x00002e9b      4d85ff         test r15, r15
0x00002e9e      0f8472040000   je 0x3316
0x00002ea4      498b3f         mov rdi, qword [r15]
0x00002ea7      e814f4ffff     call sym.imp.canonicalize_file_name
0x00002eac      4885c0         test rax, rax
0x00002eaf      4989c0         mov r8, rax
0x00002eb2      7405           je 0x2eb9
0x00002eb4      80382f         cmp byte [rax], 0x2f
0x00002eb7      741c           je 0x2ed5
0x00002eb9      4c89c7         mov rdi, r8
0x00002ebc      e8aff1ffff     call sym.imp.free
0x00002ec1      498b3f         mov rdi, qword [r15]
0x00002ec4      e837810000     call sym.xstrdup
0x00002ec9      4885c0         test rax, rax
0x00002ecc      4989c0         mov r8, rax
0x00002ecf      0f843d040000   je 0x3312
0x00002ed5      4c89c7         mov rdi, r8
0x00002ed8      4889ee         mov rsi, rbp
0x00002edb      4c89442428     mov qword [rsp + 0x28], r8
0x00002ee0      e85bf4ffff     call sym.imp.strcmp
0x00002ee5      85c0           test eax, eax
0x00002ee7      4c8b442428     mov r8, qword [rsp + 0x28]
0x00002eec      0f852c040000   jne 0x331e
0x00002ef2      4c8b6b08       mov r13, qword [rbx + 8]
0x00002ef6      4883c9ff       or rcx, 0xffffffffffffffff
0x00002efa      31c0           xor eax, eax
0x00002efc      4c89ef         mov rdi, r13
0x00002eff      f2ae           repne scasb al, byte [rdi]
0x00002f01      48f7d1         not rcx
0x00002f04      488d69ff       lea rbp, [rcx - 1]
0x00002f08      0fb64c2420     movzx ecx, byte [rsp + 0x20]
0x00002f0d      83f101         xor ecx, 1
0x00002f10      483b6c2438     cmp rbp, qword [rsp + 0x38]
0x00002f15      4189ce         mov r14d, ecx
0x00002f18      410f92c1       setb r9b
0x00002f1c      4508ce         or r14b, r9b
0x00002f1f      0f8504040000   jne 0x3329
0x00002f25      c644242001     mov byte [rsp + 0x20], 1
0x00002f2a      4c89c7         mov rdi, r8
0x00002f2d      e83ef1ffff     call sym.imp.free
0x00002f32      4c89e7         mov rdi, r12
0x00002f35      e836f1ffff     call sym.imp.free
0x00002f3a      488b5b30       mov rbx, qword [rbx + 0x30]
0x00002f3e      4885db         test rbx, rbx
0x00002f41      0f85f1feffff   jne 0x2e38
0x00002f47      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00002f4c      e81ff1ffff     call sym.imp.free
0x00002f51      48837c245800   cmp qword [rsp + 0x58], 0
0x00002f57      0f852f050000   jne 0x348c
0x00002f5d      4584f6         test r14b, r14b
0x00002f60      0f85500a0000   jne 0x39b6
0x00002f66      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00002f6b      e850f3ffff     call sym.imp.canonicalize_file_name
0x00002f70      4885c0         test rax, rax
0x00002f73      4989c7         mov r15, rax
0x00002f76      4c8b25631421.  mov r12, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x00002f7d      7409           je 0x2f88
0x00002f7f      80382f         cmp byte [rax], 0x2f
0x00002f82      0f8446050000   je 0x34ce
0x00002f88      4c89ff         mov rdi, r15
0x00002f8b      e8e0f0ffff     call sym.imp.free
0x00002f90      4d85e4         test r12, r12
0x00002f93      0f84a4010000   je 0x313d
0x00002f99      31db           xor ebx, ebx
0x00002f9b      48c7c5feffff.  mov rbp, 0xfffffffffffffffe
0x00002fa2      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00002fa7      eb15           jmp 0x2fbe
0x00002fa9      0f1f80000000.  nop dword [rax]
0x00002fb0      4d8b642430     mov r12, qword [r12 + 0x30]
0x00002fb5      4d85e4         test r12, r12
0x00002fb8      0f8409040000   je 0x33c7
0x00002fbe      49837c2420ff   cmp qword [r12 + 0x20], 0xffffffffffffffff
0x00002fc4      0f84c8030000   je 0x3392
0x00002fca      498b442420     mov rax, qword [r12 + 0x20]
0x00002fcf      49394500       cmp qword [r13], rax
0x00002fd3      75db           jne 0x2fb0
0x00002fd5      498b7c2418     mov rdi, qword [r12 + 0x18]
0x00002fda      488d3508c200.  lea rsi, str.lofs                       ; 0xf1e9 ; "lofs"
0x00002fe1      e85af3ffff     call sym.imp.strcmp
0x00002fe6      85c0           test eax, eax
0x00002fe8      74c6           je 0x2fb0
0x00002fea      4885db         test rbx, rbx
0x00002fed      740e           je 0x2ffd
0x00002fef      f6432801       test byte [rbx + 0x28], 1
0x00002ff3      7508           jne 0x2ffd
0x00002ff5      41f644242801   test byte [r12 + 0x28], 1
0x00002ffb      75b3           jne 0x2fb0
0x00002ffd      498b742408     mov rsi, qword [r12 + 8]
0x00003002      488b542448     mov rdx, qword [rsp + 0x48]
0x00003007      bf01000000     mov edi, 1
0x0000300c      e87ff3ffff     call sym.imp.__xstat
0x00003011      85c0           test eax, eax
0x00003013      7513           jne 0x3028
0x00003015      498b442420     mov rax, qword [r12 + 0x20]
0x0000301a      48398424a000.  cmp qword [rsp + 0xa0], rax
0x00003022      0f84120a0000   je 0x3a3a
0x00003028      49896c2420     mov qword [r12 + 0x20], rbp
0x0000302d      eb81           jmp 0x2fb0
0x0000302f      31f6           xor esi, esi
0x00003031      31ff           xor edi, edi
0x00003033      e868110000     call sym.alloc_field
0x00003038      803d9a132100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x0000303f      740c           je 0x304d
0x00003041      31f6           xor esi, esi
0x00003043      bf01000000     mov edi, 1
0x00003048      e853110000     call sym.alloc_field
0x0000304d      488d35c1c000.  lea rsi, str.Size                       ; 0xf115 ; "Size"
0x00003054      bf02000000     mov edi, 2
0x00003059      e842110000     call sym.alloc_field
0x0000305e      31f6           xor esi, esi
0x00003060      bf03000000     mov edi, 3
0x00003065      e836110000     call sym.alloc_field
0x0000306a      488d35a9c000.  lea rsi, str.Avail                      ; 0xf11a ; "Avail"
0x00003071      bf04000000     mov edi, 4
0x00003076      e825110000     call sym.alloc_field
0x0000307b      31f6           xor esi, esi
0x0000307d      e9c8fcffff     jmp 0x2d4a
0x00003082      31f6           xor esi, esi
0x00003084      31ff           xor edi, edi
0x00003086      e815110000     call sym.alloc_field
0x0000308b      803d47132100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x00003092      740c           je 0x30a0
0x00003094      31f6           xor esi, esi
0x00003096      bf01000000     mov edi, 1
0x0000309b      e800110000     call sym.alloc_field
0x000030a0      31f6           xor esi, esi
0x000030a2      bf06000000     mov edi, 6
0x000030a7      e8f4100000     call sym.alloc_field
0x000030ac      31f6           xor esi, esi
0x000030ae      bf07000000     mov edi, 7
0x000030b3      e8e8100000     call sym.alloc_field
0x000030b8      31f6           xor esi, esi
0x000030ba      bf08000000     mov edi, 8
0x000030bf      e8dc100000     call sym.alloc_field
0x000030c4      31f6           xor esi, esi
0x000030c6      bf09000000     mov edi, 9
0x000030cb      e8d0100000     call sym.alloc_field
0x000030d0      31f6           xor esi, esi
0x000030d2      bf0a000000     mov edi, 0xa
0x000030d7      e8c4100000     call sym.alloc_field
0x000030dc      e97ffcffff     jmp 0x2d60
0x000030e1      31f6           xor esi, esi
0x000030e3      31ff           xor edi, edi
0x000030e5      e8b6100000     call sym.alloc_field
0x000030ea      803de8122100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x000030f1      740c           je 0x30ff
0x000030f3      31f6           xor esi, esi
0x000030f5      bf01000000     mov edi, 1
0x000030fa      e8a1100000     call sym.alloc_field
0x000030ff      31f6           xor esi, esi
0x00003101      bf02000000     mov edi, 2
0x00003106      e895100000     call sym.alloc_field
0x0000310b      31f6           xor esi, esi
0x0000310d      bf03000000     mov edi, 3
0x00003112      e889100000     call sym.alloc_field
0x00003117      31f6           xor esi, esi
0x00003119      e953ffffff     jmp 0x3071
0x0000311e      48833d4a1221.  cmp qword [obj.ncolumns], 0             ; [0x214370:8]=0
0x00003126      0f8534fcffff   jne 0x2d60
0x0000312c      488d3df5cc00.  lea rdi, str.source_fstype_itotal_iused_iavail_ipcent_size_used_avail_pcent_file_target ; 0xfe28 ; "source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,file,target"
0x00003133      e8d8200000     call sym.decode_output_arg
0x00003138      e923fcffff     jmp 0x2d60
0x0000313d      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00003142      488b742450     mov rsi, qword [rsp + 0x50]
0x00003147      4c89ff         mov rdi, r15
0x0000314a      e831220000     call sym.find_mount_point
0x0000314f      4885c0         test rax, rax
0x00003152      4889c3         mov rbx, rax
0x00003155      742b           je 0x3182
0x00003157      4883ec08       sub rsp, 8
0x0000315b      31ff           xor edi, edi
0x0000315d      4531c9         xor r9d, r9d
0x00003160      6a00           push 0
0x00003162      6a00           push 0
0x00003164      4531c0         xor r8d, r8d
0x00003167      6a00           push 0
0x00003169      31c9           xor ecx, ecx
0x0000316b      4c89fa         mov rdx, r15
0x0000316e      4889c6         mov rsi, rax
0x00003171      e8da110000     call sym.get_dev
0x00003176      4883c420       add rsp, 0x20
0x0000317a      4889df         mov rdi, rbx
0x0000317d      e8eeeeffff     call sym.imp.free
0x00003182      488344241001   add qword [rsp + 0x10], 1
0x00003188      488b442410     mov rax, qword [rsp + 0x10]
0x0000318d      39442408       cmp dword [rsp + 8], eax
0x00003191      0f8f02fcffff   jg 0x2d99
0x00003197      4c8b7c2478     mov r15, qword [rsp + 0x78]
0x0000319c      803d5a122100.  cmp byte [obj.file_systems_processed], 0 ; [0x2143fd:1]=0
0x000031a3      0f8493020000   je 0x343c
0x000031a9      803d28122100.  cmp byte [obj.print_grand_total], 0     ; [0x2143d8:1]=0
0x000031b0      743c           je 0x31ee
0x000031b2      803d930e2100.  cmp byte [0x0021404c], 0                ; [0x21404c:1]=0
0x000031b9      488d3dd8c000.  lea rdi, [0x0000f298]                   ; "total"
0x000031c0      488d3592d700.  lea rsi, [0x00010959]                   ; "-"
0x000031c7      488d05d21121.  lea rax, obj.grand_fsu                  ; 0x2143a0
0x000031ce      480f44f7       cmove rsi, rdi
0x000031d2      4883ec08       sub rsp, 8
0x000031d6      4531c9         xor r9d, r9d
0x000031d9      6a00           push 0
0x000031db      50             push rax
0x000031dc      4531c0         xor r8d, r8d
0x000031df      6a00           push 0
0x000031e1      31c9           xor ecx, ecx
0x000031e3      31d2           xor edx, edx
0x000031e5      e866110000     call sym.get_dev
0x000031ea      4883c420       add rsp, 0x20
0x000031ee      4531ed         xor r13d, r13d
0x000031f1      4c3b2d681121.  cmp r13, qword [obj.nrows]              ; [0x214360:8]=0
0x000031f8      0f83be010000   jae 0x33bc
0x000031fe      488b056b1121.  mov rax, qword [obj.ncolumns]           ; [0x214370:8]=0
0x00003205      4885c0         test rax, rax
0x00003208      0f84db000000   je 0x32e9
0x0000320e      488b15531121.  mov rdx, qword [obj.table]              ; [0x214368:8]=0
0x00003215      4e8d24ed0000.  lea r12, [r13*8]
0x0000321d      31db           xor ebx, ebx
0x0000321f      4a8b14ea       mov rdx, qword [rdx + r13*8]
0x00003223      4c8b32         mov r14, qword [rdx]
0x00003226      662e0f1f8400.  nop word cs:[rax + rax]
0x00003230      4883e801       sub rax, 1
0x00003234      31c9           xor ecx, ecx
0x00003236      4c89f7         mov rdi, r14
0x00003239      4839d8         cmp rax, rbx
0x0000323c      488b05351121.  mov rax, qword [obj.columns]            ; [0x214378:8]=0
0x00003243      4c89fe         mov rsi, r15
0x00003246      0f94c1         sete cl
0x00003249      488d2cdd0000.  lea rbp, [rbx*8]
0x00003251      c1e103         shl ecx, 3
0x00003254      488b04d8       mov rax, qword [rax + rbx*8]
0x00003258      488b5020       mov rdx, qword [rax + 0x20]
0x0000325c      488994248000.  mov qword [rsp + 0x80], rdx
0x00003264      8b5028         mov edx, dword [rax + 0x28]
0x00003267      e804530000     call sym.ambsalign
0x0000326c      4885c0         test rax, rax
0x0000326f      4989c6         mov r14, rax
0x00003272      488b358f1021.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00003279      4889c7         mov rdi, rax
0x0000327c      745a           je 0x32d8
0x0000327e      e88df0ffff     call sym.imp.fputs_unlocked
0x00003283      4c89f7         mov rdi, r14
0x00003286      4883c301       add rbx, 1
0x0000328a      e8e1edffff     call sym.imp.free
0x0000328f      488b05da1021.  mov rax, qword [obj.ncolumns]           ; [0x214370:8]=0
0x00003296      4839c3         cmp rbx, rax
0x00003299      734e           jae 0x32e9
0x0000329b      488b15c61021.  mov rdx, qword [obj.table]              ; [0x214368:8]=0
0x000032a2      4885db         test rbx, rbx
0x000032a5      4a8b1422       mov rdx, qword [rdx + r12]
0x000032a9      4c8b742a08     mov r14, qword [rdx + rbp + 8]
0x000032ae      7480           je 0x3230
0x000032b0      488b3d511021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x000032b7      488b5728       mov rdx, qword [rdi + 0x28]
0x000032bb      483b5730       cmp rdx, qword [rdi + 0x30]
0x000032bf      0f8346010000   jae 0x340b
0x000032c5      488d4a01       lea rcx, [rdx + 1]
0x000032c9      48894f28       mov qword [rdi + 0x28], rcx
0x000032cd      c60220         mov byte [rdx], 0x20                    ; [0x20:1]=64 ; "@"
0x000032d0      e95bffffff     jmp 0x3230
0x000032d5      0f1f00         nop dword [rax]
0x000032d8      488b05891021.  mov rax, qword [obj.table]              ; [0x214368:8]=0
0x000032df      4a8b0420       mov rax, qword [rax + r12]
0x000032e3      488b3cd8       mov rdi, qword [rax + rbx*8]
0x000032e7      eb95           jmp 0x327e
0x000032e9      488b3d181021.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x000032f0      488b4728       mov rax, qword [rdi + 0x28]
0x000032f4      483b4730       cmp rax, qword [rdi + 0x30]
0x000032f8      0f8398060000   jae 0x3996
0x000032fe      488d5001       lea rdx, [rax + 1]
0x00003302      48895728       mov qword [rdi + 0x28], rdx
0x00003306      c6000a         mov byte [rax], 0xa
0x00003309      4983c501       add r13, 1
0x0000330d      e9dffeffff     jmp 0x31f1
0x00003312      4c8b6b08       mov r13, qword [rbx + 8]
0x00003316      4531c0         xor r8d, r8d
0x00003319      e9d8fbffff     jmp 0x2ef6
0x0000331e      41be01000000   mov r14d, 1
0x00003324      e901fcffff     jmp 0x2f2a
0x00003329      488b542448     mov rdx, qword [rsp + 0x48]
0x0000332e      4c89ee         mov rsi, r13
0x00003331      bf01000000     mov edi, 1
0x00003336      4c89442428     mov qword [rsp + 0x28], r8
0x0000333b      44884c2477     mov byte [rsp + 0x77], r9b
0x00003340      884c2476       mov byte [rsp + 0x76], cl
0x00003344      e847f0ffff     call sym.imp.__xstat
0x00003349      85c0           test eax, eax
0x0000334b      4c8b442428     mov r8, qword [rsp + 0x28]
0x00003350      741f           je 0x3371
0x00003352      0fb64c2476     movzx ecx, byte [rsp + 0x76]
0x00003357      84c9           test cl, cl
0x00003359      0f846d050000   je 0x38cc
0x0000335f      440fb64c2477   movzx r9d, byte [rsp + 0x77]
0x00003365      4584c9         test r9b, r9b
0x00003368      0f845e050000   je 0x38cc
0x0000336e      4531f6         xor r14d, r14d
0x00003371      4883fd01       cmp rbp, 1
0x00003375      0f84f2000000   je 0x346d
0x0000337b      48896c2438     mov qword [rsp + 0x38], rbp
0x00003380      48895c2458     mov qword [rsp + 0x58], rbx
0x00003385      4488742420     mov byte [rsp + 0x20], r14b
0x0000338a      4531f6         xor r14d, r14d
0x0000338d      e998fbffff     jmp 0x2f2a
0x00003392      498b742408     mov rsi, qword [r12 + 8]
0x00003397      488b542448     mov rdx, qword [rsp + 0x48]
0x0000339c      bf01000000     mov edi, 1
0x000033a1      e8eaefffff     call sym.imp.__xstat
0x000033a6      85c0           test eax, eax
0x000033a8      7577           jne 0x3421
0x000033aa      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x000033b2      4989442420     mov qword [r12 + 0x20], rax
0x000033b7      e90efcffff     jmp 0x2fca
0x000033bc      8b0536102100   mov eax, dword [obj.exit_status]        ; [0x2143f8:4]=0
0x000033c2      e911f7ffff     jmp 0x2ad8
0x000033c7      4885db         test rbx, rbx
0x000033ca      0f846dfdffff   je 0x313d
0x000033d0      440fb64b28     movzx r9d, byte [rbx + 0x28]
0x000033d5      4883ec08       sub rsp, 8
0x000033d9      488b7308       mov rsi, qword [rbx + 8]
0x000033dd      6a00           push 0
0x000033df      6a00           push 0
0x000033e1      4c8b4318       mov r8, qword [rbx + 0x18]
0x000033e5      488b3b         mov rdi, qword [rbx]
0x000033e8      4489c8         mov eax, r9d
0x000033eb      4183e101       and r9d, 1
0x000033ef      d0e8           shr al, 1
0x000033f1      83e001         and eax, 1
0x000033f4      50             push rax
0x000033f5      488b542450     mov rdx, qword [rsp + 0x50]
0x000033fa      4889d1         mov rcx, rdx
0x000033fd      e84e0f0000     call sym.get_dev
0x00003402      4883c420       add rsp, 0x20
0x00003406      e977fdffff     jmp 0x3182
0x0000340b      be20000000     mov esi, 0x20                           ; "@"
0x00003410      e82beeffff     call sym.imp.__overflow
0x00003415      488b05540f21.  mov rax, qword [obj.ncolumns]           ; [0x214370:8]=0
0x0000341c      e90ffeffff     jmp 0x3230
0x00003421      e88aecffff     call sym.imp.__errno_location
0x00003426      833805         cmp dword [rax], 5
0x00003429      4989c6         mov r14, rax
0x0000342c      0f8410060000   je 0x3a42
0x00003432      49896c2420     mov qword [r12 + 0x20], rbp
0x00003437      e98efbffff     jmp 0x2fca
0x0000343c      833db50f2100.  cmp dword [obj.exit_status], 0          ; [0x2143f8:4]=0
0x00003443      0f8573ffffff   jne 0x33bc
0x00003449      488d359ebd00.  lea rsi, str.no_file_systems_processed  ; 0xf1ee ; "no file systems processed"
0x00003450      ba05000000     mov edx, 5
0x00003455      31ff           xor edi, edi
0x00003457      e834edffff     call sym.imp.dcgettext
0x0000345c      31f6           xor esi, esi
0x0000345e      4889c2         mov rdx, rax
0x00003461      bf01000000     mov edi, 1
0x00003466      31c0           xor eax, eax
0x00003468      e833f0ffff     call sym.imp.error
0x0000346d      4c89c7         mov rdi, r8
0x00003470      e8fbebffff     call sym.imp.free
0x00003475      4c89e7         mov rdi, r12
0x00003478      e8f3ebffff     call sym.imp.free
0x0000347d      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00003482      e8e9ebffff     call sym.imp.free
0x00003487      48895c2458     mov qword [rsp + 0x58], rbx
0x0000348c      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00003491      4883ec08       sub rsp, 8
0x00003495      440fb64928     movzx r9d, byte [rcx + 0x28]
0x0000349a      488b7108       mov rsi, qword [rcx + 8]
0x0000349e      6a00           push 0
0x000034a0      6a00           push 0
0x000034a2      4c8b4118       mov r8, qword [rcx + 0x18]
0x000034a6      4489c8         mov eax, r9d
0x000034a9      4183e101       and r9d, 1
0x000034ad      d0e8           shr al, 1
0x000034af      83e001         and eax, 1
0x000034b2      50             push rax
0x000034b3      4889c8         mov rax, rcx
0x000034b6      488b542450     mov rdx, qword [rsp + 0x50]
0x000034bb      488b38         mov rdi, qword [rax]
0x000034be      31c9           xor ecx, ecx
0x000034c0      e88b0e0000     call sym.get_dev
0x000034c5      4883c420       add rsp, 0x20
0x000034c9      e9b4fcffff     jmp 0x3182
0x000034ce      4983cdff       or r13, 0xffffffffffffffff
0x000034d2      31c0           xor eax, eax
0x000034d4      4c89ff         mov rdi, r15
0x000034d7      4c89e9         mov rcx, r13
0x000034da      4c89e5         mov rbp, r12
0x000034dd      31db           xor ebx, ebx
0x000034df      f2ae           repne scasb al, byte [rdi]
0x000034e1      4531f6         xor r14d, r14d
0x000034e4      48c744241800.  mov qword [rsp + 0x18], 0
0x000034ed      4889c8         mov rax, rcx
0x000034f0      48f7d0         not rax
0x000034f3      4c01e8         add rax, r13
0x000034f6      4889442420     mov qword [rsp + 0x20], rax
0x000034fb      eb6f           jmp 0x356c
0x000034fd      488b7d18       mov rdi, qword [rbp + 0x18]
0x00003501      488d35e1bc00.  lea rsi, str.lofs                       ; 0xf1e9 ; "lofs"
0x00003508      e833eeffff     call sym.imp.strcmp
0x0000350d      85c0           test eax, eax
0x0000350f      7457           je 0x3568
0x00003511      4885db         test rbx, rbx
0x00003514      740c           je 0x3522
0x00003516      f6432801       test byte [rbx + 0x28], 1
0x0000351a      7506           jne 0x3522
0x0000351c      f6452801       test byte [rbp + 0x28], 1
0x00003520      7546           jne 0x3568
0x00003522      4c8b4d08       mov r9, qword [rbp + 8]
0x00003526      4c89e9         mov rcx, r13
0x00003529      4489f0         mov eax, r14d
0x0000352c      4c89cf         mov rdi, r9
0x0000352f      f2ae           repne scasb al, byte [rdi]
0x00003531      48f7d1         not rcx
0x00003534      4c8d51ff       lea r10, [rcx - 1]
0x00003538      4c3b542418     cmp r10, qword [rsp + 0x18]
0x0000353d      7229           jb 0x3568
0x0000353f      488b442420     mov rax, qword [rsp + 0x20]
0x00003544      4c39d0         cmp rax, r10
0x00003547      721f           jb 0x3568
0x00003549      4983fa01       cmp r10, 1
0x0000354d      0f84d6040000   je 0x3a29
0x00003553      4c39d0         cmp rax, r10
0x00003556      0f849f040000   je 0x39fb
0x0000355c      41807c0fff2f   cmp byte [r15 + rcx - 1], 0x2f
0x00003562      0f8493040000   je 0x39fb
0x00003568      488b6d30       mov rbp, qword [rbp + 0x30]
0x0000356c      4885ed         test rbp, rbp
0x0000356f      758c           jne 0x34fd
0x00003571      4c89ff         mov rdi, r15
0x00003574      e8f7eaffff     call sym.imp.free
0x00003579      4885db         test rbx, rbx
0x0000357c      0f840efaffff   je 0x2f90
0x00003582      488b7308       mov rsi, qword [rbx + 8]
0x00003586      488b542448     mov rdx, qword [rsp + 0x48]
0x0000358b      bf01000000     mov edi, 1
0x00003590      e8fbedffff     call sym.imp.__xstat
0x00003595      85c0           test eax, eax
0x00003597      0f85f3f9ffff   jne 0x2f90
0x0000359d      488b442450     mov rax, qword [rsp + 0x50]
0x000035a2      488b00         mov rax, qword [rax]
0x000035a5      48398424a000.  cmp qword [rsp + 0xa0], rax
0x000035ad      0f85ddf9ffff   jne 0x2f90
0x000035b3      e918feffff     jmp 0x33d0
0x000035b8      0fb62d4f0e21.  movzx ebp, byte [obj.show_all_fs]       ; [0x21440e:1]=0
0x000035bf      488b051a0e21.  mov rax, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x000035c6      31d2           xor edx, edx
0x000035c8      eb07           jmp 0x35d1
0x000035ca      488b4030       mov rax, qword [rax + 0x30]
0x000035ce      83c201         add edx, 1
0x000035d1      4885c0         test rax, rax
0x000035d4      75f4           jne 0x35ca
0x000035d6      4863fa         movsxd rdi, edx
0x000035d9      4c8d05d00700.  lea r8, sym.devlist_free                ; 0x3db0
0x000035e0      488d0d090700.  lea rcx, sym.devlist_compare            ; 0x3cf0 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000035e7      488d15f20600.  lea rdx, sym.devlist_hash               ; 0x3ce0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x000035ee      31f6           xor esi, esi
0x000035f0      e84b330000     call sym.hash_initialize
0x000035f5      4885c0         test rax, rax
0x000035f8      488905110e21.  mov qword [obj.devlist_table], rax      ; [0x214410:8]=0
0x000035ff      0f840e050000   je 0x3b13
0x00003605      488d8424a000.  lea rax, [rsp + 0xa0]
0x0000360d      4c8b2dcc0d21.  mov r13, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x00003614      31db           xor ebx, ebx
0x00003616      4889442408     mov qword [rsp + 8], rax
0x0000361b      eb4d           jmp 0x366a
0x0000361d      498b4520       mov rax, qword [r13 + 0x20]
0x00003621      48898424a000.  mov qword [rsp + 0xa0], rax
0x00003629      bf18000000     mov edi, 0x18
0x0000362e      e89d770000     call sym.xmalloc
0x00003633      4989c4         mov r12, rax
0x00003636      4c896808       mov qword [rax + 8], r13
0x0000363a      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x00003642      488b3dc70d21.  mov rdi, qword [obj.devlist_table]      ; [0x214410:8]=0
0x00003649      49895c2410     mov qword [r12 + 0x10], rbx
0x0000364e      4c89e6         mov rsi, r12
0x00003651      49890424       mov qword [r12], rax
0x00003655      e8e63a0000     call sym.hash_insert
0x0000365a      4885c0         test rax, rax
0x0000365d      0f84b0040000   je 0x3b13
0x00003663      4d8b6d30       mov r13, qword [r13 + 0x30]
0x00003667      4c89e3         mov rbx, r12
0x0000366a      4d85ed         test r13, r13
0x0000366d      0f84c5010000   je 0x3838
0x00003673      410fb64528     movzx eax, byte [r13 + 0x28]
0x00003678      a802           test al, 2
0x0000367a      7409           je 0x3685
0x0000367c      803d8a0d2100.  cmp byte [obj.show_local_fs], 0         ; [0x21440d:1]=0
0x00003683      7598           jne 0x361d
0x00003685      a801           test al, 1
0x00003687      7412           je 0x369b
0x00003689      803d7e0d2100.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x00003690      7509           jne 0x369b
0x00003692      803d730d2100.  cmp byte [obj.show_listed_fs], 0        ; [0x21440c:1]=0
0x00003699      7482           je 0x361d
0x0000369b      4d8b6518       mov r12, qword [r13 + 0x18]
0x0000369f      4c89e7         mov rdi, r12
0x000036a2      e859060000     call sym.selected_fstype
0x000036a7      84c0           test al, al
0x000036a9      0f846effffff   je 0x361d
0x000036af      4c89e7         mov rdi, r12
0x000036b2      e899060000     call sym.excluded_fstype
0x000036b7      84c0           test al, al
0x000036b9      4189c6         mov r14d, eax
0x000036bc      0f855bffffff   jne 0x361d
0x000036c2      498b7508       mov rsi, qword [r13 + 8]
0x000036c6      488b542408     mov rdx, qword [rsp + 8]
0x000036cb      bf01000000     mov edi, 1
0x000036d0      e8bbecffff     call sym.imp.__xstat
0x000036d5      83c001         add eax, 1
0x000036d8      0f843fffffff   je 0x361d
0x000036de      488b3d2b0d21.  mov rdi, qword [obj.devlist_table]      ; [0x214410:8]=0
0x000036e5      4885ff         test rdi, rdi
0x000036e8      0f843bffffff   je 0x3629
0x000036ee      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x000036f6      4c89fe         mov rsi, r15
0x000036f9      488984248000.  mov qword [rsp + 0x80], rax
0x00003701      e8ca2f0000     call sym.hash_lookup
0x00003706      4885c0         test rax, rax
0x00003709      4889442410     mov qword [rsp + 0x10], rax
0x0000370e      0f8415ffffff   je 0x3629
0x00003714      4c8b6008       mov r12, qword [rax + 8]
0x00003718      4883c9ff       or rcx, 0xffffffffffffffff
0x0000371c      4489f0         mov eax, r14d
0x0000371f      498b7c2408     mov rdi, qword [r12 + 8]
0x00003724      48897c2418     mov qword [rsp + 0x18], rdi
0x00003729      f2ae           repne scasb al, byte [rdi]
0x0000372b      498b7d08       mov rdi, qword [r13 + 8]
0x0000372f      48f7d1         not rcx
0x00003732      4889ca         mov rdx, rcx
0x00003735      4883c9ff       or rcx, 0xffffffffffffffff
0x00003739      48897c2420     mov qword [rsp + 0x20], rdi
0x0000373e      4883ea01       sub rdx, 1
0x00003742      f2ae           repne scasb al, byte [rdi]
0x00003744      498b7c2410     mov rdi, qword [r12 + 0x10]
0x00003749      4889c8         mov rax, rcx
0x0000374c      48f7d0         not rax
0x0000374f      4883e801       sub rax, 1
0x00003753      4839c2         cmp rdx, rax
0x00003756      0f97442428     seta byte [rsp + 0x28]
0x0000375b      4885ff         test rdi, rdi
0x0000375e      0f8423030000   je 0x3a87
0x00003764      498b7510       mov rsi, qword [r13 + 0x10]
0x00003768      4885f6         test rsi, rsi
0x0000376b      0f8416030000   je 0x3a87
0x00003771      4489f0         mov eax, r14d
0x00003774      4883c9ff       or rcx, 0xffffffffffffffff
0x00003778      f2ae           repne scasb al, byte [rdi]
0x0000377a      4889f7         mov rdi, rsi
0x0000377d      48f7d1         not rcx
0x00003780      4889ca         mov rdx, rcx
0x00003783      4883c9ff       or rcx, 0xffffffffffffffff
0x00003787      f2ae           repne scasb al, byte [rdi]
0x00003789      4883ea01       sub rdx, 1
0x0000378d      4889c8         mov rax, rcx
0x00003790      48f7d0         not rax
0x00003793      4883e801       sub rax, 1
0x00003797      4839c2         cmp rdx, rax
0x0000379a      0f92c0         setb al
0x0000379d      0fb6c0         movzx eax, al
0x000037a0      83e001         and eax, 1
0x000037a3      803d2e0c2100.  cmp byte [obj.print_grand_total], 0     ; [0x2143d8:1]=0
0x000037aa      88442430       mov byte [rsp + 0x30], al
0x000037ae      498b4500       mov rax, qword [r13]
0x000037b2      4989c6         mov r14, rax
0x000037b5      7523           jne 0x37da
0x000037b7      41f6452802     test byte [r13 + 0x28], 2
0x000037bc      741c           je 0x37da
0x000037be      41f644242802   test byte [r12 + 0x28], 2
0x000037c4      7414           je 0x37da
0x000037c6      498b3c24       mov rdi, qword [r12]
0x000037ca      4889c6         mov rsi, rax
0x000037cd      e86eebffff     call sym.imp.strcmp
0x000037d2      85c0           test eax, eax
0x000037d4      0f854ffeffff   jne 0x3629
0x000037da      be2f000000     mov esi, 0x2f                           ; '/'
0x000037df      4c89f7         mov rdi, r14
0x000037e2      e839eaffff     call sym.imp.strchr
0x000037e7      4885c0         test rax, rax
0x000037ea      7413           je 0x37ff
0x000037ec      498b3c24       mov rdi, qword [r12]
0x000037f0      be2f000000     mov esi, 0x2f                           ; '/'
0x000037f5      e826eaffff     call sym.imp.strchr
0x000037fa      4885c0         test rax, rax
0x000037fd      7416           je 0x3815
0x000037ff      807c243000     cmp byte [rsp + 0x30], 0
0x00003804      0f8584020000   jne 0x3a8e
0x0000380a      807c242800     cmp byte [rsp + 0x28], 0
0x0000380f      0f8479020000   je 0x3a8e
0x00003815      488b442410     mov rax, qword [rsp + 0x10]
0x0000381a      4c896808       mov qword [rax + 8], r13
0x0000381e      4084ed         test bpl, bpl
0x00003821      4d8b6d30       mov r13, qword [r13 + 0x30]
0x00003825      0f853ffeffff   jne 0x366a
0x0000382b      4c89e7         mov rdi, r12
0x0000382e      e8ad830000     call sym.free_mount_entry
0x00003833      e932feffff     jmp 0x366a
0x00003838      4084ed         test bpl, bpl
0x0000383b      7546           jne 0x3883
0x0000383d      48c705980b21.  mov qword [obj.mount_list], 0           ; [0x2143e0:8]=0
0x00003848      eb14           jmp 0x385e
0x0000384a      488b4308       mov rax, qword [rbx + 8]
0x0000384e      488b5b10       mov rbx, qword [rbx + 0x10]
0x00003852      bd01000000     mov ebp, 1
0x00003857      4c896830       mov qword [rax + 0x30], r13
0x0000385b      4989c5         mov r13, rax
0x0000385e      4885db         test rbx, rbx
0x00003861      75e7           jne 0x384a
0x00003863      4084ed         test bpl, bpl
0x00003866      0f85ac020000   jne 0x3b18
0x0000386c      488b3d9d0b21.  mov rdi, qword [obj.devlist_table]      ; [0x214410:8]=0
0x00003873      e818330000     call sym.hash_free
0x00003878      48c7058d0b21.  mov qword [obj.devlist_table], 0        ; [0x214410:8]=0
0x00003883      488b1d560b21.  mov rbx, qword [obj.mount_list]         ; [0x2143e0:8]=0
0x0000388a      eb36           jmp 0x38c2
0x0000388c      440fb64b28     movzx r9d, byte [rbx + 0x28]
0x00003891      488b7308       mov rsi, qword [rbx + 8]
0x00003895      4883ec08       sub rsp, 8
0x00003899      4c8b4318       mov r8, qword [rbx + 0x18]
0x0000389d      488b3b         mov rdi, qword [rbx]
0x000038a0      31c9           xor ecx, ecx
0x000038a2      6a01           push 1
0x000038a4      6a00           push 0
0x000038a6      31d2           xor edx, edx
0x000038a8      4489c8         mov eax, r9d
0x000038ab      4183e101       and r9d, 1
0x000038af      d0e8           shr al, 1
0x000038b1      83e001         and eax, 1
0x000038b4      50             push rax
0x000038b5      e8960a0000     call sym.get_dev
0x000038ba      488b5b30       mov rbx, qword [rbx + 0x30]
0x000038be      4883c420       add rsp, 0x20
0x000038c2      4885db         test rbx, rbx
0x000038c5      75c5           jne 0x388c
0x000038c7      e9d0f8ffff     jmp 0x319c
0x000038cc      440fb6742420   movzx r14d, byte [rsp + 0x20]
0x000038d2      e9aefaffff     jmp 0x3385
0x000038d7      488b442430     mov rax, qword [rsp + 0x30]
0x000038dc      4889442418     mov qword [rsp + 0x18], rax
0x000038e1      e924f5ffff     jmp 0x2e0a
0x000038e6      8b442408       mov eax, dword [rsp + 8]
0x000038ea      3905200a2100   cmp dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x214310:4]=0
0x000038f0      0f8daf000000   jge 0x39a5
0x000038f6      803d110b2100.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x000038fd      0f85a2000000   jne 0x39a5
0x00003903      803d030b2100.  cmp byte [obj.show_local_fs], 0         ; [0x21440d:1]=0
0x0000390a      0f8595000000   jne 0x39a5
0x00003910      48833dd80a21.  cmp qword [obj.fs_select_list], 0       ; [0x2143f0:8]=0
0x00003918      bb01000000     mov ebx, 1
0x0000391d      488d2dddcc00.  lea rbp, [0x00010601]
0x00003924      0f849a010000   je 0x3ac4
0x0000392a      488d35c7c400.  lea rsi, str.cannot_read_table_of_mounted_file_systems ; 0xfdf8 ; "cannot read table of mounted file systems"
0x00003931      31ff           xor edi, edi
0x00003933      ba05000000     mov edx, 5
0x00003938      e853e8ffff     call sym.imp.dcgettext
0x0000393d      4989c4         mov r12, rax
0x00003940      e86be7ffff     call sym.imp.__errno_location
0x00003945      8b30           mov esi, dword [rax]
0x00003947      488d1576b800.  lea rdx, str.s_s                        ; 0xf1c4 ; "%s%s"
0x0000394e      4d89e0         mov r8, r12
0x00003951      4889e9         mov rcx, rbp
0x00003954      89df           mov edi, ebx
0x00003956      31c0           xor eax, eax
0x00003958      e843ebffff     call sym.imp.error
0x0000395d      e92ff3ffff     jmp 0x2c91
0x00003962      48833d7e0a21.  cmp qword [obj.fs_exclude_list], 0      ; [0x2143e8:8]=0
0x0000396a      0f850cf3ffff   jne 0x2c7c
0x00003970      803d620a2100.  cmp byte [obj.print_type], 0            ; [0x2143d9:1]=0
0x00003977      0f85fff2ffff   jne 0x2c7c
0x0000397d      803df8062100.  cmp byte [0x0021407c], 0                ; [0x21407c:1]=0
0x00003984      0f85f2f2ffff   jne 0x2c7c
0x0000398a      0fb63d7c0a21.  movzx edi, byte [obj.show_local_fs]     ; [0x21440d:1]=0
0x00003991      e9e6f2ffff     jmp 0x2c7c
0x00003996      be0a000000     mov esi, 0xa
0x0000399b      e8a0e8ffff     call sym.imp.__overflow
0x000039a0      e964f9ffff     jmp 0x3309
0x000039a5      bb01000000     mov ebx, 1
0x000039aa      488d2d50cc00.  lea rbp, [0x00010601]
0x000039b1      e974ffffff     jmp 0x392a
0x000039b6      488b742430     mov rsi, qword [rsp + 0x30]
0x000039bb      bf04000000     mov edi, 4
0x000039c0      e87b680000     call sym.quotearg_style
0x000039c5      488d35acc400.  lea rsi, str.cannot_access__s:_over_mounted_by_another_device ; 0xfe78 ; "cannot access %s: over-mounted by another device"
0x000039cc      4889c3         mov rbx, rax
0x000039cf      ba05000000     mov edx, 5
0x000039d4      31ff           xor edi, edi
0x000039d6      e8b5e7ffff     call sym.imp.dcgettext
0x000039db      4889d9         mov rcx, rbx
0x000039de      4889c2         mov rdx, rax
0x000039e1      31f6           xor esi, esi
0x000039e3      31ff           xor edi, edi
0x000039e5      31c0           xor eax, eax
0x000039e7      e8b4eaffff     call sym.imp.error
0x000039ec      c705020a2100.  mov dword [obj.exit_status], 1          ; [0x2143f8:4]=0
0x000039f6      e987f7ffff     jmp 0x3182
0x000039fb      4c89d2         mov rdx, r10
0x000039fe      4c89fe         mov rsi, r15
0x00003a01      4c89cf         mov rdi, r9
0x00003a04      4c89542428     mov qword [rsp + 0x28], r10
0x00003a09      e8b2e6ffff     call sym.imp.strncmp
0x00003a0e      4c8b542428     mov r10, qword [rsp + 0x28]
0x00003a13      85c0           test eax, eax
0x00003a15      4c0f45542418   cmovne r10, qword [rsp + 0x18]
0x00003a1b      480f44dd       cmove rbx, rbp
0x00003a1f      4c89542418     mov qword [rsp + 0x18], r10
0x00003a24      e93ffbffff     jmp 0x3568
0x00003a29      48c744241801.  mov qword [rsp + 0x18], 1
0x00003a32      4889eb         mov rbx, rbp
0x00003a35      e92efbffff     jmp 0x3568
0x00003a3a      4c89e3         mov rbx, r12
0x00003a3d      e96ef5ffff     jmp 0x2fb0
0x00003a42      498b542408     mov rdx, qword [r12 + 8]
0x00003a47      be03000000     mov esi, 3
0x00003a4c      31ff           xor edi, edi
0x00003a4e      e8ed680000     call sym.quotearg_n_style_colon
0x00003a53      418b36         mov esi, dword [r14]
0x00003a56      488d151ad200.  lea rdx, [0x00010c77]                   ; "%s"
0x00003a5d      4889c1         mov rcx, rax
0x00003a60      31ff           xor edi, edi
0x00003a62      31c0           xor eax, eax
0x00003a64      e837eaffff     call sym.imp.error
0x00003a69      c70585092100.  mov dword [obj.exit_status], 1          ; [0x2143f8:4]=0
0x00003a73      e9baf9ffff     jmp 0x3432
0x00003a78      488b7c2468     mov rdi, qword [rsp + 0x68]
0x00003a7d      e8eee5ffff     call sym.imp.free
0x00003a82      e9dff4ffff     jmp 0x2f66
0x00003a87      31c0           xor eax, eax
0x00003a89      e912fdffff     jmp 0x37a0
0x00003a8e      498b3c24       mov rdi, qword [r12]
0x00003a92      4c89f6         mov rsi, r14
0x00003a95      e8a6e8ffff     call sym.imp.strcmp
0x00003a9a      85c0           test eax, eax
0x00003a9c      7417           je 0x3ab5
0x00003a9e      488b742418     mov rsi, qword [rsp + 0x18]
0x00003aa3      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00003aa8      e893e8ffff     call sym.imp.strcmp
0x00003aad      85c0           test eax, eax
0x00003aaf      0f8460fdffff   je 0x3815
0x00003ab5      4d89ec         mov r12, r13
0x00003ab8      e961fdffff     jmp 0x381e
0x00003abd      31ff           xor edi, edi
0x00003abf      e8ac120000     call sym.usage
0x00003ac4      48833d1c0921.  cmp qword [obj.fs_exclude_list], 0      ; [0x2143e8:8]=0
0x00003acc      0f8558feffff   jne 0x392a
0x00003ad2      488d35e1b600.  lea rsi, str.Warning:                   ; 0xf1ba ; "Warning: "
0x00003ad9      ba05000000     mov edx, 5
0x00003ade      31ff           xor edi, edi
0x00003ae0      31db           xor ebx, ebx
0x00003ae2      e8a9e6ffff     call sym.imp.dcgettext
0x00003ae7      4889c5         mov rbp, rax
0x00003aea      e93bfeffff     jmp 0x392a
0x00003aef      4c8d0566b600.  lea r8, str.output                      ; 0xf15c ; "--output"
0x00003af6      488d0d6eb600.  lea rcx, [0x0000f16b]                   ; "-P"
0x00003afd      31ff           xor edi, edi
0x00003aff      4c89e2         mov rdx, r12
0x00003b02      31f6           xor esi, esi
0x00003b04      e897e9ffff     call sym.imp.error
0x00003b09      bf01000000     mov edi, 1
0x00003b0e      e85d120000     call sym.usage
0x00003b13      e808750000     call sym.xalloc_die
0x00003b18      4c892dc10821.  mov qword [obj.mount_list], r13         ; [0x2143e0:8]=0
0x00003b1f      e948fdffff     jmp 0x386c
0x00003b24      488d0d15b800.  lea rcx, obj.__PRETTY_FUNCTION__.8870   ; 0xf340 ; "get_field_list"
0x00003b2b      488d35bfb400.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x00003b32      488d3d99b600.  lea rdi, str.invalid_header_mode        ; 0xf1d2 ; "!\"invalid header_mode\""
0x00003b39      ba22020000     mov edx, 0x222
0x00003b3e      e83de7ffff     call sym.imp.__assert_fail
0x00003b43      be01000000     mov esi, 1
0x00003b48      e9e0efffff     jmp 0x2b2d
0x00003b4d      4c8d0508b600.  lea r8, str.output                      ; 0xf15c ; "--output"
0x00003b54      488d0d10b600.  lea rcx, [0x0000f16b]                   ; "-P"
0x00003b5b      4c89e2         mov rdx, r12
0x00003b5e      31f6           xor esi, esi
0x00003b60      31ff           xor edi, edi
0x00003b62      31c0           xor eax, eax
0x00003b64      e837e9ffff     call sym.imp.error
0x00003b69      e998eeffff     jmp 0x2a06
0x00003b6e      4c8d05e7b500.  lea r8, str.output                      ; 0xf15c ; "--output"
0x00003b75      488d0decb500.  lea rcx, [0x0000f168]                   ; "-T"
0x00003b7c      ebdd           jmp 0x3b5b
0x00003b7e      4c8d05d7b500.  lea r8, str.output                      ; 0xf15c ; "--output"
0x00003b85      488d0dd9b500.  lea rcx, [0x0000f165]                   ; "-i"
0x00003b8c      ebcd           jmp 0x3b5b
0x00003b8e      e85de6ffff     call sym.imp.__stack_chk_fail
0x00003b93      662e0f1f8400.  nop word cs:[rax + rax]
0x00003b9d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00003ba0      31ed           xor ebp, ebp
0x00003ba2      4989d1         mov r9, rdx
0x00003ba5      5e             pop rsi
0x00003ba6      4889e2         mov rdx, rsp
0x00003ba9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00003bad      50             push rax
0x00003bae      54             push rsp
0x00003baf      4c8d05fab300.  lea r8, sym.__libc_csu_fini             ; 0xefb0
0x00003bb6      488d0d83b300.  lea rcx, sym.__libc_csu_init            ; 0xef40 ; "AWAVI\x89\xd7AUATL\x8d%\x1eI "
0x00003bbd      488d3dfce9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x25c0 ; "AWAVI\x89\xf6AUATUSH\x8d\x1d\xac\x12!"
0x00003bc4      ff150e042100   call qword [reloc.__libc_start_main]    ; [0x213fd8:8]=0
0x00003bca      f4             hlt
0x00003bcb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00003bd0      488d3d190721.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2142f0
0x00003bd7      55             push rbp
0x00003bd8      488d05110721.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2142f0
0x00003bdf      4839f8         cmp rax, rdi
0x00003be2      4889e5         mov rbp, rsp
0x00003be5      7419           je 0x3c00
0x00003be7      488b05e20321.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x213fd0:8]=0
0x00003bee      4885c0         test rax, rax
0x00003bf1      740d           je 0x3c00
0x00003bf3      5d             pop rbp
0x00003bf4      ffe0           jmp rax
0x00003bf6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c00      5d             pop rbp
0x00003c01      c3             ret
0x00003c02      0f1f4000       nop dword [rax]
0x00003c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00003c10      488d3dd90621.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2142f0
0x00003c17      488d35d20621.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x2142f0
0x00003c1e      55             push rbp
0x00003c1f      4829fe         sub rsi, rdi
0x00003c22      4889e5         mov rbp, rsp
0x00003c25      48c1fe03       sar rsi, 3
0x00003c29      4889f0         mov rax, rsi
0x00003c2c      48c1e83f       shr rax, 0x3f
0x00003c30      4801c6         add rsi, rax
0x00003c33      48d1fe         sar rsi, 1
0x00003c36      7418           je 0x3c50
0x00003c38      488b05a90321.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x213fe8:8]=0
0x00003c3f      4885c0         test rax, rax
0x00003c42      740c           je 0x3c50
0x00003c44      5d             pop rbp
0x00003c45      ffe0           jmp rax
0x00003c47      660f1f840000.  nop word [rax + rax]
0x00003c50      5d             pop rbp
0x00003c51      c3             ret
0x00003c52      0f1f4000       nop dword [rax]
0x00003c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00003c60      803de1062100.  cmp byte [obj.completed.7697], 0        ; [0x214348:1]=0
0x00003c67      752f           jne 0x3c98
0x00003c69      48833d7f0321.  cmp qword [reloc.__cxa_finalize], 0     ; [0x213ff0:8]=0
0x00003c71      55             push rbp
0x00003c72      4889e5         mov rbp, rsp
0x00003c75      740c           je 0x3c83
0x00003c77      488b3d8a0321.  mov rdi, qword [obj.__dso_handle]       ; [0x214008:8]=0x214008 obj.__dso_handle
0x00003c7e      e82de9ffff     call sym..plt.got
0x00003c83      e848ffffff     call sym.deregister_tm_clones
0x00003c88      c605b9062100.  mov byte [obj.completed.7697], 1        ; [0x214348:1]=0
0x00003c8f      5d             pop rbp
0x00003c90      c3             ret
0x00003c91      0f1f80000000.  nop dword [rax]
0x00003c98      f3c3           ret
0x00003c9a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00003ca0      55             push rbp
0x00003ca1      4889e5         mov rbp, rsp
0x00003ca4      5d             pop rbp
0x00003ca5      e966ffffff     jmp sym.register_tm_clones
0x00003caa      660f1f440000   nop word [rax + rax]
;-- replace_control_chars:
0x00003cb0      eb19           jmp 0x3ccb                              ; /src:283
0x00003cb2      660f1f440000   nop word [rax + rax]
0x00003cb8      3c01           cmp al, 1                               ; .//ib:223
0x00003cba      7c0b           jl 0x3cc7
0x00003cbc      3c1f           cmp al, 0x1f
0x00003cbe      7e04           jle 0x3cc4
0x00003cc0      3c7f           cmp al, 0x7f
0x00003cc2      7503           jne 0x3cc7
0x00003cc4      c6073f         mov byte [rdi], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x00003cc7      4883c701       add rdi, 1
0x00003ccb      0fb607         movzx eax, byte [rdi]
0x00003cce      84c0           test al, al
0x00003cd0      75e6           jne 0x3cb8
0x00003cd2      f3c3           ret
0x00003cd4      6690           nop
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- devlist_hash:
0x00003ce0      488b07         mov rax, qword [rdi]
0x00003ce3      31d2           xor edx, edx
0x00003ce5      48f7f6         div rsi
0x00003ce8      4889d0         mov rax, rdx
0x00003ceb      c3             ret
0x00003cec      0f1f4000       nop dword [rax]
;-- devlist_compare:
0x00003cf0      488b06         mov rax, qword [rsi]
0x00003cf3      483907         cmp qword [rdi], rax
0x00003cf6      0f94c0         sete al
0x00003cf9      c3             ret
0x00003cfa      660f1f440000   nop word [rax + rax]
;-- selected_fstype:
0x00003d00      4154           push r12
0x00003d02      55             push rbp
0x00003d03      53             push rbx
0x00003d04      488b1de50621.  mov rbx, qword [obj.fs_select_list]     ; [0x2143f0:8]=0
0x00003d0b      4885db         test rbx, rbx
0x00003d0e      0f94c0         sete al
0x00003d11      4885ff         test rdi, rdi
0x00003d14      410f94c4       sete r12b
0x00003d18      4108c4         or r12b, al
0x00003d1b      751b           jne 0x3d38
0x00003d1d      4889fd         mov rbp, rdi
0x00003d20      488b33         mov rsi, qword [rbx]
0x00003d23      4889ef         mov rdi, rbp
0x00003d26      e815e6ffff     call sym.imp.strcmp
0x00003d2b      85c0           test eax, eax
0x00003d2d      7411           je 0x3d40                               ; /src:514
0x00003d2f      488b5b08       mov rbx, qword [rbx + 8]
0x00003d33      4885db         test rbx, rbx                           ; /src:519
0x00003d36      75e8           jne 0x3d20
0x00003d38      4489e0         mov eax, r12d
0x00003d3b      5b             pop rbx
0x00003d3c      5d             pop rbp
0x00003d3d      415c           pop r12                                 ; /src:525
0x00003d3f      c3             ret
0x00003d40      41bc01000000   mov r12d, 1
0x00003d46      4489e0         mov eax, r12d
0x00003d49      5b             pop rbx
0x00003d4a      5d             pop rbp
0x00003d4b      415c           pop r12
0x00003d4d      c3             ret
0x00003d4e      6690           nop
;-- excluded_fstype:
0x00003d50      4154           push r12
0x00003d52      55             push rbp
0x00003d53      53             push rbx
0x00003d54      488b1d8d0621.  mov rbx, qword [obj.fs_exclude_list]    ; [0x2143e8:8]=0
0x00003d5b      4885db         test rbx, rbx
0x00003d5e      0f94c0         sete al
0x00003d61      4885ff         test rdi, rdi
0x00003d64      400f94c5       sete bpl
0x00003d68      4008c5         or bpl, al
0x00003d6b      7523           jne 0x3d90
0x00003d6d      4989fc         mov r12, rdi
0x00003d70      488b33         mov rsi, qword [rbx]
0x00003d73      4c89e7         mov rdi, r12
0x00003d76      e8c5e5ffff     call sym.imp.strcmp
0x00003d7b      85c0           test eax, eax
0x00003d7d      7421           je 0x3da0                               ; /src:529
0x00003d7f      488b5b08       mov rbx, qword [rbx + 8]                ; /src:534
0x00003d83      4885db         test rbx, rbx
0x00003d86      75e8           jne 0x3d70
0x00003d88      89e8           mov eax, ebp
0x00003d8a      5b             pop rbx
0x00003d8b      5d             pop rbp
0x00003d8c      415c           pop r12
0x00003d8e      c3             ret
0x00003d8f      90             nop
0x00003d90      31ed           xor ebp, ebp
0x00003d92      89e8           mov eax, ebp
0x00003d94      5b             pop rbx
0x00003d95      5d             pop rbp
0x00003d96      415c           pop r12
0x00003d98      c3             ret
0x00003d99      0f1f80000000.  nop dword [rax]
0x00003da0      bd01000000     mov ebp, 1
0x00003da5      89e8           mov eax, ebp
0x00003da7      5b             pop rbx
0x00003da8      5d             pop rbp
0x00003da9      415c           pop r12
0x00003dab      c3             ret
0x00003dac      0f1f4000       nop dword [rax]
;-- devlist_free:
0x00003db0      e9bbe2ffff     jmp sym.imp.free
0x00003db5      90             nop
0x00003db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- alloc_table_row:
0x00003dc0      488b05990521.  mov rax, qword [obj.nrows]              ; [0x214360:8]=0
0x00003dc7      ba08000000     mov edx, 8
0x00003dcc      53             push rbx
0x00003dcd      488b3d940521.  mov rdi, qword [obj.table]              ; [0x214368:8]=0
0x00003dd4      488d7001       lea rsi, [rax + 1]
0x00003dd8      4889d0         mov rax, rdx
0x00003ddb      48f7e6         mul rsi
0x00003dde      4889357b0521.  mov qword [obj.nrows], rsi              ; [0x214360:8]=0
0x00003de5      705b           jo 0x3e42
0x00003de7      31c9           xor ecx, ecx
0x00003de9      4885c0         test rax, rax                           ; /src:224
0x00003dec      784f           js 0x3e3d
0x00003dee      4885c9         test rcx, rcx
0x00003df1      754a           jne 0x3e3d
0x00003df3      48c1e603       shl rsi, 3
0x00003df7      e834700000     call sym.xrealloc                       ; ../coreutils-8.31/src/.c:-24
0x00003dfc      488b155d0521.  mov rdx, qword [obj.nrows]              ; [0x214360:8]=0
0x00003e03      488b3d660521.  mov rdi, qword [obj.ncolumns]           ; [0x214370:8]=0
0x00003e0a      31c9           xor ecx, ecx
0x00003e0c      488905550521.  mov qword [obj.table], rax              ; [0x214368:8]=0
0x00003e13      488d5cd0f8     lea rbx, [rax + rdx*8 - 8]
0x00003e18      ba08000000     mov edx, 8
0x00003e1d      4889d0         mov rax, rdx
0x00003e20      48f7e7         mul rdi
0x00003e23      7024           jo 0x3e49
0x00003e25      4885c0         test rax, rax                           ; /src:224
0x00003e28      7813           js 0x3e3d                               ; /src:225
0x00003e2a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/src/.c:-10
0x00003e2d      750e           jne 0x3e3d
0x00003e2f      48c1e703       shl rdi, 3                              ; ../coreutils-8.31/src/.c:-11
0x00003e33      e8986f0000     call sym.xmalloc
0x00003e38      488903         mov qword [rbx], rax
0x00003e3b      5b             pop rbx
0x00003e3c      c3             ret
0x00003e3d      e8de710000     call sym.xalloc_die                     ; /src:734
0x00003e42      b901000000     mov ecx, 1
0x00003e47      eba0           jmp 0x3de9
0x00003e49      b901000000     mov ecx, 1                              ; /src:735
0x00003e4e      ebd5           jmp 0x3e25                              ; /src:739
;-- df_readable:
0x00003e50      4889f0         mov rax, rsi
0x00003e53      4889d6         mov rsi, rdx
0x00003e56      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00003e5a      7634           jbe 0x3e90
0x00003e5c      4084ff         test dil, dil
0x00003e5f      744f           je 0x3eb0
0x00003e61      8b15a1052100   mov edx, dword [obj.human_output_opts]  ; [0x214408:4]=0
0x00003e67      4883c601       add rsi, 1                              ; /src:742
0x00003e6b      4889c7         mov rdi, rax
0x00003e6e      4883ec08       sub rsp, 8
0x00003e72      48f7df         neg rdi
0x00003e75      e8d6360000     call sym.human_readable
0x00003e7a      488d50ff       lea rdx, [rax - 1]
0x00003e7e      c640ff2d       mov byte [rax - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00003e82      4883c408       add rsp, 8
0x00003e86      4889d0         mov rax, rdx
0x00003e89      c3             ret
0x00003e8a      660f1f440000   nop word [rax + rax]
0x00003e90      440fb6cf       movzx r9d, dil
0x00003e94      8b156e052100   mov edx, dword [obj.human_output_opts]  ; [0x214408:4]=0
0x00003e9a      4c01ce         add rsi, r9
0x00003e9d      4084ff         test dil, dil                           ; /src:736
0x00003ea0      75c9           jne 0x3e6b
0x00003ea2      4889c7         mov rdi, rax
0x00003ea5      e9a6360000     jmp sym.human_readable
0x00003eaa      660f1f440000   nop word [rax + rax]
0x00003eb0      488d15a2ca00.  lea rdx, [0x00010959]                   ; "-"
0x00003eb7      4889d0         mov rax, rdx                            ; /src:209
0x00003eba      c3             ret
0x00003ebb      0f1f440000     nop dword [rax + rax]                   ; /src:212
;-- replace_problematic_chars:
0x00003ec0      8b054a012100   mov eax, dword [obj.tty_out.8809]       ; [0x214010:4]=-1
0x00003ec6      53             push rbx
0x00003ec7      4889fb         mov rbx, rdi
0x00003eca      85c0           test eax, eax
0x00003ecc      7822           js 0x3ef0
0x00003ece      85c0           test eax, eax                           ; /src:213
0x00003ed0      488d15990300.  lea rdx, sym.replace_invalid_chars      ; 0x4270 ; "AWAVAUATI\x89\xfcUSH\x83\xec8dH\x8b\x04%("
0x00003ed7      488d05d2fdff.  lea rax, sym.replace_control_chars      ; 0x3cb0
0x00003ede      4889df         mov rdi, rbx
0x00003ee1      5b             pop rbx
0x00003ee2      480f45c2       cmovne rax, rdx
0x00003ee6      ffe0           jmp rax
0x00003ee8      0f1f84000000.  nop dword [rax + rax]
0x00003ef0      bf01000000     mov edi, 1
0x00003ef5      e8f6e1ffff     call sym.imp.isatty
0x00003efa      890510012100   mov dword [obj.tty_out.8809], eax       ; [0x214010:4]=-1
0x00003f00      ebcc           jmp 0x3ece
0x00003f02      0f1f4000       nop dword [rax]
0x00003f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_header:
0x00003f10      4157           push r15
0x00003f12      4156           push r14
0x00003f14      4155           push r13
0x00003f16      4154           push r12
0x00003f18      55             push rbp
0x00003f19      53             push rbx
0x00003f1a      4881ecc80200.  sub rsp, 0x2c8
0x00003f21      64488b042528.  mov rax, qword fs:[0x28]                ; /src:432
0x00003f2a      48898424b802.  mov qword [rsp + 0x2b8], rax
0x00003f32      31c0           xor eax, eax
0x00003f34      e887feffff     call sym.alloc_table_row
0x00003f39      48833d2f0421.  cmp qword [obj.ncolumns], 0             ; [0x214370:8]=0
0x00003f41      0f8401020000   je 0x4148
0x00003f47      488b152a0421.  mov rdx, qword [obj.columns]            ; /src:473 ; [0x214378:8]=0
0x00003f4e      31db           xor ebx, ebx
0x00003f50      49bccff753e3.  movabs r12, 0x20c49ba5e353f7cf
0x00003f5a      4c8d742420     lea r14, [rsp + 0x20]
0x00003f5f      4c8d6c2418     lea r13, [rsp + 0x18]
0x00003f64      eb7b           jmp 0x3fe1
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f70      4889cf         mov rdi, rcx
0x00003f73      e8c8e5ffff     call sym.imp.strdup
0x00003f78      4889c7         mov rdi, rax
0x00003f7b      4889442418     mov qword [rsp + 0x18], rax             ; /src:499
0x00003f80      4885ff         test rdi, rdi
0x00003f83      0f84fa010000   je 0x4183
0x00003f89      e832ffffff     call sym.replace_problematic_chars      ; /src:501
0x00003f8e      488b15cb0321.  mov rdx, qword [obj.nrows]              ; [0x214360:8]=0
0x00003f95      488b05cc0321.  mov rax, qword [obj.table]              ; [0x214368:8]=0
0x00003f9c      31f6           xor esi, esi
0x00003f9e      488b44d0f8     mov rax, qword [rax + rdx*8 - 8]
0x00003fa3      488b542418     mov rdx, qword [rsp + 0x18]             ; /src:502
0x00003fa8      48891428       mov qword [rax + rbp], rdx
0x00003fac      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003fb1      e81a480000     call sym.gnu_mbswidth
0x00003fb6      488b15bb0321.  mov rdx, qword [obj.columns]            ; [0x214378:8]=0
0x00003fbd      4898           cdqe
0x00003fbf      488b0c2a       mov rcx, qword [rdx + rbp]
0x00003fc3      48394120       cmp qword [rcx + 0x20], rax
0x00003fc7      480f434120     cmovae rax, qword [rcx + 0x20]
0x00003fcc      4883c301       add rbx, 1                              ; /src:376
0x00003fd0      48391d990321.  cmp qword [obj.ncolumns], rbx           ; [0x214370:8]=0
0x00003fd7      48894120       mov qword [rcx + 0x20], rax
0x00003fdb      0f8667010000   jbe 0x4148
0x00003fe1      488d2cdd0000.  lea rbp, [rbx*8]
0x00003fe9      31ff           xor edi, edi
0x00003feb      48c744241800.  mov qword [rsp + 0x18], 0
0x00003ff4      4c8d3c2a       lea r15, [rdx + rbp]
0x00003ff8      ba05000000     mov edx, 5
0x00003ffd      498b07         mov rax, qword [r15]
0x00004000      488b7018       mov rsi, qword [rax + 0x18]
0x00004004      e887e1ffff     call sym.imp.dcgettext
0x00004009      4889c1         mov rcx, rax                            ; /src:378
0x0000400c      498b07         mov rax, qword [r15]
0x0000400f      833802         cmp dword [rax], 2
0x00004012      0f8558ffffff   jne 0x3f70
0x00004018      8b0562032100   mov eax, dword [obj.header_mode]        ; [0x214380:4]=0
0x0000401e      448b15e30321.  mov r10d, dword [obj.human_output_opts] ; [0x214408:4]=0
0x00004025      85c0           test eax, eax
0x00004027      747f           je 0x40a8
0x00004029      83f804         cmp eax, 4
0x0000402c      7462           je 0x4090
0x0000402e      83f803         cmp eax, 3
0x00004031      0f8539ffffff   jne 0x3f70
0x00004037      488b3dc20321.  mov rdi, qword [obj.output_block_size]  ; [0x214400:8]=0
0x0000403e      4c89f6         mov rsi, r14
0x00004041      48894c2408     mov qword [rsp + 8], rcx
0x00004046      e805410000     call sym.umaxtostr
0x0000404b      4989c7         mov r15, rax                            ; /src:427
0x0000404e      488d3596af00.  lea rsi, [0x0000efeb]                   ; "%s-%s"
0x00004055      31ff           xor edi, edi
0x00004057      ba05000000     mov edx, 5
0x0000405c      e82fe1ffff     call sym.imp.dcgettext
0x00004061      488b4c2408     mov rcx, qword [rsp + 8]
0x00004066      4889c6         mov rsi, rax
0x00004069      4c89fa         mov rdx, r15
0x0000406c      31c0           xor eax, eax
0x0000406e      4c89ef         mov rdi, r13
0x00004071      e8ea740000     call sym.rpl_asprintf
0x00004076      83f8ff         cmp eax, 0xffffffff
0x00004079      7509           jne 0x4084
0x0000407b      48c744241800.  mov qword [rsp + 0x18], 0
0x00004084      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004089      e9f2feffff     jmp 0x3f80
0x0000408e      6690           nop
0x00004090      448b15710321.  mov r10d, dword [obj.human_output_opts] ; [0x214408:4]=0
0x00004097      41f6c210       test r10b, 0x10
0x0000409b      0f85cffeffff   jne 0x3f70
0x000040a1      0f1f80000000.  nop dword [rax]
0x000040a8      488b3d510321.  mov rdi, qword [obj.output_block_size]  ; [0x214400:8]=0
0x000040af      4589d1         mov r9d, r10d
0x000040b2      4181e1240100.  and r9d, 0x124
0x000040b9      4989f8         mov r8, rdi                             ; /src:393
0x000040bc      4889fe         mov rsi, rdi
0x000040bf      90             nop
0x000040c0      4889f2         mov rdx, rsi
0x000040c3      48c1ea03       shr rdx, 3
0x000040c7      4889d0         mov rax, rdx
0x000040ca      49f7e4         mul r12                                 ; /src:401
0x000040cd      4c89c0         mov rax, r8
0x000040d0      49c1e80a       shr r8, 0xa
0x000040d4      25ff030000     and eax, 0x3ff
0x000040d9      4889d1         mov rcx, rdx
0x000040dc      48c1e904       shr rcx, 4
0x000040e0      4869c9e80300.  imul rcx, rcx, 0x3e8
0x000040e7      4829ce         sub rsi, rcx
0x000040ea      4889f1         mov rcx, rsi
0x000040ed      4889d6         mov rsi, rdx                            ; /src:403
0x000040f0      4889ca         mov rdx, rcx                            ; /src:400
0x000040f3      48c1ee04       shr rsi, 4
0x000040f7      4809c2         or rdx, rax
0x000040fa      74c4           je 0x40c0
0x000040fc      4885c9         test rcx, rcx
0x000040ff      0f94c2         sete dl                                 ; /src:401
0x00004102      4885c0         test rax, rax
0x00004105      0f94c0         sete al                                 ; /src:405
0x00004108      38c2           cmp dl, al
0x0000410a      7364           jae 0x4170
0x0000410c      4489ca         mov edx, r9d
0x0000410f      80cab8         or dl, 0xb8                             ; /src:412
0x00004112      41b801000000   mov r8d, 1
0x00004118      b901000000     mov ecx, 1
0x0000411d      4c89f6         mov rsi, r14
0x00004120      e82b340000     call sym.human_readable
0x00004125      488d35b8ae00.  lea rsi, str.blocks                     ; 0xefe4 ; "blocks"
0x0000412c      ba05000000     mov edx, 5
0x00004131      31ff           xor edi, edi
0x00004133      4989c7         mov r15, rax                            ; /src:415
0x00004136      e855e0ffff     call sym.imp.dcgettext
0x0000413b      4889442408     mov qword [rsp + 8], rax
0x00004140      e909ffffff     jmp 0x404e
0x00004145      0f1f00         nop dword [rax]                         ; /src:443
0x00004148      488b8424b802.  mov rax, qword [rsp + 0x2b8]
0x00004150      644833042528.  xor rax, qword fs:[0x28]
0x00004159      753f           jne 0x419a
0x0000415b      4881c4c80200.  add rsp, 0x2c8
0x00004162      5b             pop rbx
0x00004163      5d             pop rbp
0x00004164      415c           pop r12
0x00004166      415d           pop r13
0x00004168      415e           pop r14
0x0000416a      415f           pop r15
0x0000416c      c3             ret
0x0000416d      0f1f00         nop dword [rax]                         ; /src:407
0x00004170      7616           jbe 0x4188
0x00004172      4489d2         mov edx, r10d
0x00004175      81e204010000   and edx, 0x104
0x0000417b      80ca98         or dl, 0x98                             ; /src:410
0x0000417e      80ce01         or dh, 1
0x00004181      eb8f           jmp 0x4112
0x00004183      e8986e0000     call sym.xalloc_die
0x00004188      4489ca         mov edx, r9d
0x0000418b      80ca98         or dl, 0x98                             ; /src:409
0x0000418e      4180e220       and r10b, 0x20                          ; "@"
0x00004192      0f857affffff   jne 0x4112
0x00004198      ebe4           jmp 0x417e
0x0000419a      e851e0ffff     call sym.imp.__stack_chk_fail
0x0000419f      90             nop                                     ; ../coreutils-8.31/src/.c:-72
;-- alloc_field:
0x000041a0      55             push rbp
0x000041a1      53             push rbx
0x000041a2      ba08000000     mov edx, 8
0x000041a7      4889f5         mov rbp, rsi
0x000041aa      89fb           mov ebx, edi
0x000041ac      4883ec08       sub rsp, 8
0x000041b0      488b05b90121.  mov rax, qword [obj.ncolumns]           ; [0x214370:8]=0
0x000041b7      488b3dba0121.  mov rdi, qword [obj.columns]            ; [0x214378:8]=0
0x000041be      488d7001       lea rsi, [rax + 1]
0x000041c2      4889d0         mov rax, rdx
0x000041c5      48f7e6         mul rsi                                 ; /src:213
0x000041c8      488935a10121.  mov qword [obj.ncolumns], rsi           ; [0x214370:8]=0
0x000041cf      7066           jo 0x4237
0x000041d1      31c9           xor ecx, ecx
0x000041d3      4885c0         test rax, rax
0x000041d6      0f8881000000   js 0x425d
0x000041dc      4885c9         test rcx, rcx
0x000041df      757c           jne 0x425d
0x000041e1      48c1e603       shl rsi, 3
0x000041e5      e8466c0000     call sym.xrealloc
0x000041ea      4863fb         movsxd rdi, ebx
0x000041ed      488d0d2cfe20.  lea rcx, obj.field_data                 ; 0x214020
0x000041f4      488b35750121.  mov rsi, qword [obj.ncolumns]           ; [0x214370:8]=0
0x000041fb      488d147f       lea rdx, [rdi + rdi*2]
0x000041ff      488905720121.  mov qword [obj.columns], rax            ; [0x214378:8]=0
0x00004206      48c1e204       shl rdx, 4
0x0000420a      4801ca         add rdx, rcx                            ; /src:216
0x0000420d      4885ed         test rbp, rbp                           ; /src:215
0x00004210      488954f0f8     mov qword [rax + rsi*8 - 8], rdx
0x00004215      7404           je 0x421b
0x00004217      48896a18       mov qword [rdx + 0x18], rbp
0x0000421b      488d047f       lea rax, [rdi + rdi*2]
0x0000421f      48c1e004       shl rax, 4
0x00004223      4801c8         add rax, rcx
0x00004226      80782c00       cmp byte [rax + 0x2c], 0
0x0000422a      7512           jne 0x423e
0x0000422c      c6402c01       mov byte [rax + 0x2c], 1
0x00004230      4883c408       add rsp, 8
0x00004234      5b             pop rbx                                 ; ../coreutils-8.31/src/.c:-72
0x00004235      5d             pop rbp
0x00004236      c3             ret
0x00004237      b901000000     mov ecx, 1
0x0000423c      eb95           jmp 0x41d3
0x0000423e      488d0d0bb100.  lea rcx, obj.__PRETTY_FUNCTION__.8831   ; 0xf350 ; "alloc_field"
0x00004245      488d35a5ad00.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x0000424c      488d3db9ad00.  lea rdi, str.field_used                 ; 0xf00c ; "!\"field used\""
0x00004253      ba96010000     mov edx, 0x196
0x00004258      e823e0ffff     call sym.imp.__assert_fail
0x0000425d      e8be6d0000     call sym.xalloc_die
0x00004262      0f1f4000       nop dword [rax]
0x00004266      662e0f1f8400.  nop word cs:[rax + rax]
;-- replace_invalid_chars:
0x00004270      4157           push r15
0x00004272      4156           push r14
0x00004274      4155           push r13
0x00004276      4154           push r12
0x00004278      4989fc         mov r12, rdi
0x0000427b      55             push rbp
0x0000427c      53             push rbx
0x0000427d      4883ec38       sub rsp, 0x38
0x00004281      64488b042528.  mov rax, qword fs:[0x28]
0x0000428a      4889442428     mov qword [rsp + 0x28], rax
0x0000428f      31c0           xor eax, eax
0x00004291      e81adfffff     call sym.imp.strlen
0x00004296      4d8d2c04       lea r13, [r12 + rax]
0x0000429a      48c744242000.  mov qword [rsp + 0x20], 0
0x000042a3      4d39ec         cmp r12, r13
0x000042a6      747c           je 0x4324
0x000042a8      488d44241c     lea rax, [rsp + 0x1c]
0x000042ad      4c89e3         mov rbx, r12
0x000042b0      4c8d742420     lea r14, [rsp + 0x20]
0x000042b5      4889442408     mov qword [rsp + 8], rax
0x000042ba      eb2a           jmp 0x42e6
0x000042bc      0f1f4000       nop dword [rax]
0x000042c0      8b7c241c       mov edi, dword [rsp + 0x1c]
0x000042c4      e837deffff     call sym.imp.iswcntrl
0x000042c9      85c0           test eax, eax
0x000042cb      753f           jne 0x430c
0x000042cd      4889de         mov rsi, rbx
0x000042d0      4c89e7         mov rdi, r12
0x000042d3      4889ea         mov rdx, rbp                            ; /src:117
0x000042d6      4801eb         add rbx, rbp                            ; /src:132
0x000042d9      4901ec         add r12, rbp                            ; ../coreutils-8.31/lib/c-ctype.h:-146
0x000042dc      e8afe1ffff     call sym.imp.memmove
0x000042e1      4939dd         cmp r13, rbx
0x000042e4      743e           je 0x4324
0x000042e6      4d89ef         mov r15, r13                            ; /src:121
0x000042e9      488b7c2408     mov rdi, qword [rsp + 8]
0x000042ee      4c89f1         mov rcx, r14                            ; /src:120
0x000042f1      4929df         sub r15, rbx                            ; /src:121
0x000042f4      4889de         mov rsi, rbx
0x000042f7      4c89fa         mov rdx, r15
0x000042fa      e8c1770000     call sym.rpl_mbrtowc
0x000042ff      4939c7         cmp r15, rax
0x00004302      4889c5         mov rbp, rax                            ; /src:124
0x00004305      73b9           jae 0x42c0
0x00004307      bd01000000     mov ebp, 1
0x0000430c      4801eb         add rbx, rbp                            ; /src:136
0x0000430f      41c604243f     mov byte [r12], 0x3f                    ; '?'
                                                                       ; [0x3f:1]=0
0x00004314      4983c401       add r12, 1
0x00004318      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/c-ctype.h:-115
0x0000431b      49c706000000.  mov qword [r14], 0
0x00004322      75c2           jne 0x42e6
0x00004324      488b442428     mov rax, qword [rsp + 0x28]
0x00004329      644833042528.  xor rax, qword fs:[0x28]
0x00004332      41c6042400     mov byte [r12], 0
0x00004337      750f           jne 0x4348
0x00004339      4883c438       add rsp, 0x38
0x0000433d      5b             pop rbx
0x0000433e      5d             pop rbp
0x0000433f      415c           pop r12
0x00004341      415d           pop r13
0x00004343      415e           pop r14
0x00004345      415f           pop r15
0x00004347      c3             ret
0x00004348      e8a3deffff     call sym.imp.__stack_chk_fail
0x0000434d      0f1f00         nop dword [rax]                         ; /src:812
;-- get_dev:
0x00004350      4157           push r15
0x00004352      4156           push r14
0x00004354      4989fe         mov r14, rdi
0x00004357      4155           push r13
0x00004359      4154           push r12
0x0000435b      4989d5         mov r13, rdx
0x0000435e      55             push rbp
0x0000435f      53             push rbx
0x00004360      4989f4         mov r12, rsi
0x00004363      4c89c3         mov rbx, r8
0x00004366      4881ec180400.  sub rsp, 0x418
0x0000436d      8b8424600400.  mov eax, dword [rsp + 0x460]
0x00004374      8bac24500400.  mov ebp, dword [rsp + 0x450]
0x0000437b      48890c24       mov qword [rsp], rcx
0x0000437f      4c8bbc245804.  mov r15, qword [rsp + 0x458]
0x00004387      89442408       mov dword [rsp + 8], eax
0x0000438b      64488b042528.  mov rax, qword fs:[0x28]
0x00004394      488984240804.  mov qword [rsp + 0x408], rax
0x0000439c      31c0           xor eax, eax
0x0000439e      4084ed         test bpl, bpl
0x000043a1      7435           je 0x43d8
0x000043a3      803d63002100.  cmp byte [obj.show_local_fs], 0         ; [0x21440d:1]=0
0x000043aa      742c           je 0x43d8
0x000043ac      488b84240804.  mov rax, qword [rsp + 0x408]
0x000043b4      644833042528.  xor rax, qword fs:[0x28]
0x000043bd      0f85a3090000   jne 0x4d66
0x000043c3      4881c4180400.  add rsp, 0x418
0x000043ca      5b             pop rbx
0x000043cb      5d             pop rbp
0x000043cc      415c           pop r12
0x000043ce      415d           pop r13
0x000043d0      415e           pop r14
0x000043d2      415f           pop r15
0x000043d4      c3             ret
0x000043d5      0f1f00         nop dword [rax]                         ; /src:816
0x000043d8      4584c9         test r9b, r9b
0x000043db      7413           je 0x43f0
0x000043dd      803d2a002100.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x000043e4      750a           jne 0x43f0
0x000043e6      803d1f002100.  cmp byte [obj.show_listed_fs], 0        ; [0x21440c:1]=0
0x000043ed      74bd           je 0x43ac                               ; /src:819
0x000043ef      90             nop
0x000043f0      4889df         mov rdi, rbx
0x000043f3      e808f9ffff     call sym.selected_fstype
0x000043f8      84c0           test al, al
0x000043fa      74b0           je 0x43ac
0x000043fc      4889df         mov rdi, rbx
0x000043ff      e84cf9ffff     call sym.excluded_fstype
0x00004404      84c0           test al, al
0x00004406      75a4           jne 0x43ac
0x00004408      4d85ff         test r15, r15
0x0000440b      0f9444240f     sete byte [rsp + 0xf]
0x00004410      4d85e4         test r12, r12
0x00004413      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004418      0f8492000000   je 0x44b0
0x0000441e      84c0           test al, al
0x00004420      0f848a000000   je 0x44b0
0x00004426      41803c242f     cmp byte [r12], 0x2f
0x0000442b      0f857bffffff   jne 0x43ac
0x00004431      488b0424       mov rax, qword [rsp]
0x00004435      4885c0         test rax, rax
0x00004438      490f44c4       cmove rax, r12
0x0000443c      48890424       mov qword [rsp], rax
0x00004440      488b3c24       mov rdi, qword [rsp]
0x00004444      488d542420     lea rdx, [rsp + 0x20]
0x00004449      4c89f6         mov rsi, r14
0x0000444c      e83f750000     call sym.get_fs_usage
0x00004451      85c0           test eax, eax
0x00004453      0f84c5060000   je 0x4b1e
0x00004459      e852dcffff     call sym.imp.__errno_location
0x0000445e      807c240800     cmp byte [rsp + 8], 0
0x00004463      4889c3         mov rbx, rax
0x00004466      7414           je 0x447c
0x00004468      8b00           mov eax, dword [rax]
0x0000446a      83f80d         cmp eax, 0xd
0x0000446d      0f8432070000   je 0x4ba5
0x00004473      83f802         cmp eax, 2
0x00004476      0f8429070000   je 0x4ba5
0x0000447c      488b1424       mov rdx, qword [rsp]
0x00004480      be03000000     mov esi, 3
0x00004485      31ff           xor edi, edi
0x00004487      e8b45e0000     call sym.quotearg_n_style_colon
0x0000448c      8b33           mov esi, dword [rbx]
0x0000448e      488d15e2c700.  lea rdx, [0x00010c77]                   ; "%s"
0x00004495      4889c1         mov rcx, rax
0x00004498      31ff           xor edi, edi
0x0000449a      31c0           xor eax, eax
0x0000449c      e8ffdfffff     call sym.imp.error
0x000044a1      c7054dff2000.  mov dword [obj.exit_status], 1          ; [0x2143f8:4]=0
0x000044ab      e9fcfeffff     jmp 0x43ac
0x000044b0      48833c2400     cmp qword [rsp], 0
0x000044b5      0f84d8050000   je 0x4a93
0x000044bb      4d85ff         test r15, r15
0x000044be      0f847cffffff   je 0x4440
0x000044c4      66410f6f07     movdqa xmm0, xmmword [r15]
0x000044c9      498b4730       mov rax, qword [r15 + 0x30]
0x000044cd      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000044d2      48837c242800   cmp qword [rsp + 0x28], 0
0x000044d8      66410f6f4710   movdqa xmm0, xmmword [r15 + 0x10]
0x000044de      4889442450     mov qword [rsp + 0x50], rax
0x000044e3      0f29442430     movaps xmmword [rsp + 0x30], xmm0
0x000044e8      66410f6f4720   movdqa xmm0, xmmword [r15 + 0x20]
0x000044ee      0f29442440     movaps xmmword [rsp + 0x40], xmm0
0x000044f3      0f84f7040000   je 0x49f0
0x000044f9      e8c2f8ffff     call sym.alloc_table_row
0x000044fe      488d0554c400.  lea rax, [0x00010959]                   ; "-"
0x00004505      4d85f6         test r14, r14
0x00004508      4c0f44f0       cmove r14, rax
0x0000450c      4d85ed         test r13, r13                           ; /src:894
0x0000450f      4c89f7         mov rdi, r14                            ; /src:892
0x00004512      4c0f44e8       cmove r13, rax
0x00004516      e8e56a0000     call sym.xstrdup
0x0000451b      807c240800     cmp byte [rsp + 8], 0
0x00004520      4989c7         mov r15, rax
0x00004523      48890424       mov qword [rsp], rax
0x00004527      7447           je 0x4570
0x00004529      4889c7         mov rdi, rax
0x0000452c      e87fdcffff     call sym.imp.strlen
0x00004531      4883f824       cmp rax, 0x24
0x00004535      7639           jbe 0x4570
0x00004537      498d7c07dc     lea rdi, [r15 + rax - 0x24]
0x0000453c      488d35d7aa00.  lea rsi, str.0123456789abcdefABCDEF     ; 0xf01a ; "-0123456789abcdefABCDEF"
0x00004543      e898ddffff     call sym.imp.strspn
0x00004548      4883f824       cmp rax, 0x24
0x0000454c      7522           jne 0x4570
0x0000454e      488b3c24       mov rdi, qword [rsp]
0x00004552      31f6           xor esi, esi
0x00004554      e8e7110000     call sym.canonicalize_filename_mode
0x00004559      4885c0         test rax, rax
0x0000455c      4989c6         mov r14, rax
0x0000455f      740f           je 0x4570
0x00004561      488b3c24       mov rdi, qword [rsp]
0x00004565      e806dbffff     call sym.imp.free
0x0000456a      4c893424       mov qword [rsp], r14
0x0000456e      6690           nop
0x00004570      488d05e2c300.  lea rax, [0x00010959]                   ; "-"
0x00004577      4885db         test rbx, rbx                           ; /src:741
0x0000457a      488b742448     mov rsi, qword [rsp + 0x48]
0x0000457f      48c78424a800.  mov qword [rsp + 0xa8], 1
0x0000458b      48c78424a000.  mov qword [rsp + 0xa0], 1
0x00004597      480f44d8       cmove rbx, rax
0x0000459b      488b442450     mov rax, qword [rsp + 0x50]
0x000045a0      c68424c00000.  mov byte [rsp + 0xc0], 0
0x000045a8      4883fefd       cmp rsi, 0xfffffffffffffffd
0x000045ac      4889b424b000.  mov qword [rsp + 0xb0], rsi
0x000045b4      48c78424d000.  mov qword [rsp + 0xd0], 0xffffffffffffffff
0x000045c0      c68424d80000.  mov byte [rsp + 0xd8], 0
0x000045c8      48898424c800.  mov qword [rsp + 0xc8], rax
0x000045d0      48898424b800.  mov qword [rsp + 0xb8], rax
0x000045d8      770a           ja 0x45e4
0x000045da      4883f8fd       cmp rax, 0xfffffffffffffffd
0x000045de      0f866c040000   jbe 0x4a50
0x000045e4      4c8b442438     mov r8, qword [rsp + 0x38]
0x000045e9      488b1510fe20.  mov rdx, qword [obj.output_block_size]  ; [0x214400:8]=0
0x000045f0      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000045f5      4c8b4c2420     mov r9, qword [rsp + 0x20]
0x000045fa      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000045ff      48c784249000.  mov qword [rsp + 0x90], 0xffffffffffffffff
0x0000460b      4983f8fd       cmp r8, 0xfffffffffffffffd
0x0000460f      4889542468     mov qword [rsp + 0x68], rdx
0x00004614      4c89442478     mov qword [rsp + 0x78], r8
0x00004619      0f96c2         setbe dl
0x0000461c      22542440       and dl, byte [rsp + 0x40]
0x00004620      4883f9fd       cmp rcx, 0xfffffffffffffffd
0x00004624      4c894c2460     mov qword [rsp + 0x60], r9
0x00004629      48897c2470     mov qword [rsp + 0x70], rdi
0x0000462e      48898c248800.  mov qword [rsp + 0x88], rcx
0x00004636      c68424980000.  mov byte [rsp + 0x98], 0
0x0000463e      889424800000.  mov byte [rsp + 0x80], dl
0x00004645      770a           ja 0x4651
0x00004647      4883fffd       cmp rdi, 0xfffffffffffffffd
0x0000464b      0f86e1030000   jbe 0x4a32
0x00004651      803d80fd2000.  cmp byte [obj.print_grand_total], 0     ; [0x2143d8:1]=0
0x00004658      7476           je 0x46d0
0x0000465a      807c240f00     cmp byte [rsp + 0xf], 0
0x0000465f      746f           je 0x46d0
0x00004661      4883fefd       cmp rsi, 0xfffffffffffffffd
0x00004665      7707           ja 0x466e
0x00004667      4801355afd20.  add qword [0x002143c8], rsi             ; [0x2143c8:8]=0
0x0000466e      4883f8fd       cmp rax, 0xfffffffffffffffd
0x00004672      7707           ja 0x467b
0x00004674      48010555fd20.  add qword [0x002143d0], rax             ; [0x2143d0:8]=0
0x0000467b      4883fffd       cmp rdi, 0xfffffffffffffffd
0x0000467f      770b           ja 0x468c
0x00004681      490faff9       imul rdi, r9
0x00004685      48013d1cfd20.  add qword [0x002143a8], rdi             ; [0x2143a8:8]=0
0x0000468c      4883f9fd       cmp rcx, 0xfffffffffffffffd
0x00004690      770b           ja 0x469d
0x00004692      490fafc9       imul rcx, r9
0x00004696      48010d13fd20.  add qword [0x002143b0], rcx             ; [0x2143b0:8]=0
0x0000469d      4983f8fd       cmp r8, 0xfffffffffffffffd
0x000046a1      772d           ja 0x46d0
0x000046a3      0fb63d16fd20.  movzx edi, byte [0x002143c0]            ; [0x2143c0:1]=0
0x000046aa      4c89c8         mov rax, r9                             ; /src:881
0x000046ad      490fafc0       imul rax, r8
0x000046b1      488b0d00fd20.  mov rcx, qword [0x002143b8]             ; [0x2143b8:8]=0
0x000046b8      89fe           mov esi, edi
0x000046ba      83f601         xor esi, 1
0x000046bd      4038d6         cmp sil, dl
0x000046c0      0f841a060000   je 0x4ce0
0x000046c6      4801c8         add rax, rcx
0x000046c9      488905e8fc20.  mov qword [0x002143b8], rax             ; [0x2143b8:8]=0
0x000046d0      31ed           xor ebp, ebp
0x000046d2      48833d96fc20.  cmp qword [obj.ncolumns], 0             ; [0x214370:8]=0
0x000046da      488b0d97fc20.  mov rcx, qword [obj.columns]            ; [0x214378:8]=0
0x000046e1      0f84ba000000   je 0x47a1
0x000046e7      4c8d3d02ac00.  lea r15, [0x0000f2f0]
0x000046ee      6690           nop
0x000046f0      488b04e9       mov rax, qword [rcx + rbp*8]
0x000046f4      4c8d34ed0000.  lea r14, [rbp*8]
0x000046fc      8b5010         mov edx, dword [rax + 0x10]
0x000046ff      83fa01         cmp edx, 1
0x00004702      0f84b8010000   je 0x48c0
0x00004708      0f82a2010000   jb 0x48b0
0x0000470e      83fa02         cmp edx, 2
0x00004711      0f8518060000   jne 0x4d2f
0x00004717      31c9           xor ecx, ecx
0x00004719      83380b         cmp dword [rax], 0xb
0x0000471c      0f87ee050000   ja 0x4d10
0x00004722      8b00           mov eax, dword [rax]
0x00004724      49630487       movsxd rax, dword [r15 + rax*4]
0x00004728      4c01f8         add rax, r15
0x0000472b      ffe0           jmp rax
0x0000472d      0f1f00         nop dword [rax]
0x00004730      4c89e7         mov rdi, r12
0x00004733      e8c8680000     call sym.xstrdup                        ; /src:753
0x00004738      4889c7         mov rdi, rax
0x0000473b      4889442418     mov qword [rsp + 0x18], rax
0x00004740      4885ff         test rdi, rdi
0x00004743      0f8478050000   je 0x4cc1
0x00004749      e872f7ffff     call sym.replace_problematic_chars
0x0000474e      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004753      31f6           xor esi, esi
0x00004755      e876400000     call sym.gnu_mbswidth
0x0000475a      488b0d17fc20.  mov rcx, qword [obj.columns]            ; [0x214378:8]=0
0x00004761      4898           cdqe
0x00004763      4a8b1431       mov rdx, qword [rcx + r14]
0x00004767      48394220       cmp qword [rdx + 0x20], rax
0x0000476b      480f434220     cmovae rax, qword [rdx + 0x20]
0x00004770      4883c501       add rbp, 1
0x00004774      48392df5fb20.  cmp qword [obj.ncolumns], rbp           ; [0x214370:8]=0
0x0000477b      48894220       mov qword [rdx + 0x20], rax
0x0000477f      488b15dafb20.  mov rdx, qword [obj.nrows]              ; [0x214360:8]=0
0x00004786      488b05dbfb20.  mov rax, qword [obj.table]              ; [0x214368:8]=0
0x0000478d      488b44d0f8     mov rax, qword [rax + rdx*8 - 8]
0x00004792      488b542418     mov rdx, qword [rsp + 0x18]
0x00004797      4a891430       mov qword [rax + r14], rdx
0x0000479b      0f874fffffff   ja 0x46f0
0x000047a1      488b3c24       mov rdi, qword [rsp]
0x000047a5      e8c6d8ffff     call sym.imp.free
0x000047aa      e9fdfbffff     jmp 0x43ac
0x000047af      90             nop
0x000047b0      488b4130       mov rax, qword [rcx + 0x30]
0x000047b4      4883f8fd       cmp rax, 0xfffffffffffffffd
0x000047b8      0f8612010000   jbe 0x48d0
0x000047be      488d3d94c100.  lea rdi, [0x00010959]                   ; "-"
0x000047c5      e876ddffff     call sym.imp.strdup
0x000047ca      4889c7         mov rdi, rax
0x000047cd      4889442418     mov qword [rsp + 0x18], rax
0x000047d2      4885ff         test rdi, rdi
0x000047d5      0f856effffff   jne 0x4749
0x000047db      e999020000     jmp 0x4a79                              ; /src:793
0x000047e0      0fb67920       movzx edi, byte [rcx + 0x20]
0x000047e4      488b7118       mov rsi, qword [rcx + 0x18]
0x000047e8      488d94247001.  lea rdx, [rsp + 0x170]
0x000047f0      4c8b4108       mov r8, qword [rcx + 8]
0x000047f4      488b09         mov rcx, qword [rcx]
0x000047f7      e854f6ffff     call sym.df_readable                    ; /src:505
0x000047fc      4889c7         mov rdi, rax
0x000047ff      e8fc670000     call sym.xstrdup
0x00004804      4889c7         mov rdi, rax                            ; /src:508
0x00004807      4889442418     mov qword [rsp + 0x18], rax
0x0000480c      e92fffffff     jmp 0x4740
0x00004811      0f1f80000000.  nop dword [rax]
0x00004818      488d94247001.  lea rdx, [rsp + 0x170]
0x00004820      488b7130       mov rsi, qword [rcx + 0x30]
0x00004824      0fb67938       movzx edi, byte [rcx + 0x38]
0x00004828      ebc6           jmp 0x47f0
0x0000482a      660f1f440000   nop word [rax + rax]
0x00004830      488b4110       mov rax, qword [rcx + 0x10]
0x00004834      488d3d1ec100.  lea rdi, [0x00010959]                   ; "-"
0x0000483b      4883f8fd       cmp rax, 0xfffffffffffffffd             ; /src:783
0x0000483f      77be           ja 0x47ff
0x00004841      4c8b4108       mov r8, qword [rcx + 8]
0x00004845      8b15bdfb2000   mov edx, dword [obj.human_output_opts]  ; [0x214408:4]=0
0x0000484b      488db4247001.  lea rsi, [rsp + 0x170]
0x00004853      488b09         mov rcx, qword [rcx]
0x00004856      4889c7         mov rdi, rax
0x00004859      e8f22c0000     call sym.human_readable
0x0000485e      4889c7         mov rdi, rax
0x00004861      eb9c           jmp 0x47ff
0x00004863      0f1f440000     nop dword [rax + rax]
0x00004868      4889df         mov rdi, rbx
0x0000486b      e890670000     call sym.xstrdup
0x00004870      4889c7         mov rdi, rax
0x00004873      4889442418     mov qword [rsp + 0x18], rax
0x00004878      e9c3feffff     jmp 0x4740
0x0000487d      0f1f00         nop dword [rax]
0x00004880      488b3c24       mov rdi, qword [rsp]
0x00004884      e877670000     call sym.xstrdup
0x00004889      4889c7         mov rdi, rax
0x0000488c      4889442418     mov qword [rsp + 0x18], rax             ; /src:771
0x00004891      e9aafeffff     jmp 0x4740
0x00004896      662e0f1f8400.  nop word cs:[rax + rax]
0x000048a0      4c89ef         mov rdi, r13
0x000048a3      e957ffffff     jmp 0x47ff
0x000048a8      0f1f84000000.  nop dword [rax + rax]                   ; /src:774
0x000048b0      488d4c2460     lea rcx, [rsp + 0x60]
0x000048b5      e95ffeffff     jmp 0x4719
0x000048ba      660f1f440000   nop word [rax + rax]
0x000048c0      488d8c24a000.  lea rcx, [rsp + 0xa0]
0x000048c8      e94cfeffff     jmp 0x4719
0x000048cd      0f1f00         nop dword [rax]
0x000048d0      488b7118       mov rsi, qword [rcx + 0x18]
0x000048d4      4883fefd       cmp rsi, 0xfffffffffffffffd             ; /src:790
0x000048d8      0f87e0feffff   ja 0x47be
0x000048de      80793800       cmp byte [rcx + 0x38], 0
0x000048e2      0fb67920       movzx edi, byte [rcx + 0x20]
0x000048e6      0f8524010000   jne 0x4a10                              ; /src:792
0x000048ec      48ba5c8fc2f5.  movabs rdx, 0x28f5c28f5c28f5c
0x000048f6      4839d0         cmp rax, rdx
0x000048f9      771d           ja 0x4918
0x000048fb      4889c1         mov rcx, rax
0x000048fe      31d2           xor edx, edx
0x00004900      4801f1         add rcx, rsi
0x00004903      0f92c2         setb dl
0x00004906      4885c9         test rcx, rcx
0x00004909      740d           je 0x4918
0x0000490b      4038d7         cmp dil, dl
0x0000490e      0f845c020000   je 0x4b70
0x00004914      0f1f4000       nop dword [rax]
0x00004918      4885c0         test rax, rax
0x0000491b      0f88c1010000   js 0x4ae2
0x00004921      660fefc0       pxor xmm0, xmm0
0x00004925      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000492a      4084ff         test dil, dil
0x0000492d      0f844d010000   je 0x4a80
0x00004933      48f7de         neg rsi
0x00004936      4885f6         test rsi, rsi
0x00004939      0f8885010000   js 0x4ac4
0x0000493f      660fefc9       pxor xmm1, xmm1
0x00004943      f2480f2ace     cvtsi2sd xmm1, rsi
0x00004948      660f570d60b5.  xorpd xmm1, xmmword [0x0000feb0]
0x00004950      f20f58c8       addsd xmm1, xmm0
0x00004954      660fefed       pxor xmm5, xmm5                         ; /src:801
0x00004958      660fefdb       pxor xmm3, xmm3
0x0000495c      660f2ecd       ucomisd xmm1, xmm5
0x00004960      7a06           jp 0x4968
0x00004962      0f8456feffff   je 0x47be
0x00004968      f20f590550b5.  mulsd xmm0, qword [0x0000fec0]
0x00004970      f20f101550b5.  movsd xmm2, qword [0x0000fec8]          ; [0xfec8:8]=0x3ff0000000000000
0x00004978      f20f5ec1       divsd xmm0, xmm1
0x0000497c      660fefc9       pxor xmm1, xmm1
0x00004980      f2480f2cc0     cvttsd2si rax, xmm0
0x00004985      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000498a      660f28e1       movapd xmm4, xmm1
0x0000498e      f20f5ce2       subsd xmm4, xmm2
0x00004992      660f2ec4       ucomisd xmm0, xmm4
0x00004996      7620           jbe 0x49b8
0x00004998      f20f58d1       addsd xmm2, xmm1
0x0000499c      660f2ed0       ucomisd xmm2, xmm0
0x000049a0      7216           jb 0x49b8
0x000049a2      660f2ec1       ucomisd xmm0, xmm1
0x000049a6      0f87b0010000   ja 0x4b5c
0x000049ac      660fefc0       pxor xmm0, xmm0                         ; /src:674
0x000049b0      f20f58c1       addsd xmm0, xmm1
0x000049b4      0f1f4000       nop dword [rax]
0x000049b8      660f2ec3       ucomisd xmm0, xmm3
0x000049bc      0f82fcfdffff   jb 0x47be
0x000049c2      488d7c2418     lea rdi, [rsp + 0x18]
0x000049c7      488d3576a600.  lea rsi, str..0f                        ; 0xf044 ; "%.0f%%"
0x000049ce      b801000000     mov eax, 1
0x000049d3      e8886b0000     call sym.rpl_asprintf
0x000049d8      83f8ff         cmp eax, 0xffffffff
0x000049db      0f848f000000   je 0x4a70                               ; /src:432
0x000049e1      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:433
0x000049e6      e9e7fdffff     jmp 0x47d2
0x000049eb      0f1f440000     nop dword [rax + rax]
0x000049f0      803d17fa2000.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x000049f7      0f85fcfaffff   jne 0x44f9
0x000049fd      803d08fa2000.  cmp byte [obj.show_listed_fs], 0        ; [0x21440c:1]=0
0x00004a04      0f85effaffff   jne 0x44f9
0x00004a0a      e99df9ffff     jmp 0x43ac                              ; /src:416
0x00004a0f      90             nop
0x00004a10      48f7d8         neg rax
0x00004a13      4885c0         test rax, rax
0x00004a16      0f888a000000   js 0x4aa6
0x00004a1c      660fefc0       pxor xmm0, xmm0
0x00004a20      f2480f2ac0     cvtsi2sd xmm0, rax
0x00004a25      660f570583b4.  xorpd xmm0, xmmword [0x0000feb0]
0x00004a2d      e9f8feffff     jmp 0x492a
0x00004a32      4989fa         mov r10, rdi
0x00004a35      4929ca         sub r10, rcx
0x00004a38      4839cf         cmp rdi, rcx
0x00004a3b      4c8994249000.  mov qword [rsp + 0x90], r10
0x00004a43      0f9284249800.  setb byte [rsp + 0x98]
0x00004a4b      e901fcffff     jmp 0x4651
0x00004a50      4889f2         mov rdx, rsi
0x00004a53      4829c2         sub rdx, rax
0x00004a56      4839c6         cmp rsi, rax
0x00004a59      48899424d000.  mov qword [rsp + 0xd0], rdx
0x00004a61      0f928424d800.  setb byte [rsp + 0xd8]
0x00004a69      e976fbffff     jmp 0x45e4
0x00004a6e      6690           nop
0x00004a70      48c744241800.  mov qword [rsp + 0x18], 0
0x00004a79      e8a2650000     call sym.xalloc_die
0x00004a7e      6690           nop
0x00004a80      4885f6         test rsi, rsi
0x00004a83      787b           js 0x4b00
0x00004a85      660fefc9       pxor xmm1, xmm1
0x00004a89      f2480f2ace     cvtsi2sd xmm1, rsi
0x00004a8e      e9bdfeffff     jmp 0x4950
0x00004a93      4d85e4         test r12, r12
0x00004a96      4c89e0         mov rax, r12
0x00004a99      490f44c6       cmove rax, r14
0x00004a9d      48890424       mov qword [rsp], rax
0x00004aa1      e915faffff     jmp 0x44bb
0x00004aa6      4889c2         mov rdx, rax
0x00004aa9      660fefc0       pxor xmm0, xmm0                         ; /src:664
0x00004aad      48d1ea         shr rdx, 1
0x00004ab0      83e001         and eax, 1
0x00004ab3      4809c2         or rdx, rax
0x00004ab6      f2480f2ac2     cvtsi2sd xmm0, rdx
0x00004abb      f20f58c0       addsd xmm0, xmm0
0x00004abf      e961ffffff     jmp 0x4a25
0x00004ac4      4889f0         mov rax, rsi
0x00004ac7      660fefc9       pxor xmm1, xmm1                         ; /src:525
0x00004acb      48d1e8         shr rax, 1
0x00004ace      83e601         and esi, 1
0x00004ad1      4809f0         or rax, rsi
0x00004ad4      f2480f2ac8     cvtsi2sd xmm1, rax
0x00004ad9      f20f58c9       addsd xmm1, xmm1
0x00004add      e966feffff     jmp 0x4948
0x00004ae2      4889c2         mov rdx, rax
0x00004ae5      660fefc0       pxor xmm0, xmm0
0x00004ae9      48d1ea         shr rdx, 1
0x00004aec      83e001         and eax, 1
0x00004aef      4809c2         or rdx, rax
0x00004af2      f2480f2ac2     cvtsi2sd xmm0, rdx
0x00004af7      f20f58c0       addsd xmm0, xmm0
0x00004afb      e92afeffff     jmp 0x492a
0x00004b00      4889f0         mov rax, rsi
0x00004b03      660fefc9       pxor xmm1, xmm1
0x00004b07      48d1e8         shr rax, 1
0x00004b0a      83e601         and esi, 1
0x00004b0d      4809f0         or rax, rsi
0x00004b10      f2480f2ac8     cvtsi2sd xmm1, rax
0x00004b15      f20f58c9       addsd xmm1, xmm1
0x00004b19      e932feffff     jmp 0x4950
0x00004b1e      807c240800     cmp byte [rsp + 8], 0
0x00004b23      7440           je 0x4b65
0x00004b25      803de2f82000.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x00004b2c      0f85b6000000   jne 0x4be8
0x00004b32      48837c242800   cmp qword [rsp + 0x28], 0               ; /src:380
0x00004b38      7516           jne 0x4b50
0x00004b3a      803dcdf82000.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x00004b41      750d           jne 0x4b50
0x00004b43      803dc2f82000.  cmp byte [obj.show_listed_fs], 0        ; [0x21440c:1]=0
0x00004b4a      0f845cf8ffff   je 0x43ac
0x00004b50      c605a6f82000.  mov byte [obj.file_systems_processed], 1 ; [0x2143fd:1]=0
0x00004b57      e99df9ffff     jmp 0x44f9
0x00004b5c      660f28c2       movapd xmm0, xmm2
0x00004b60      e953feffff     jmp 0x49b8
0x00004b65      48837c242800   cmp qword [rsp + 0x28], 0
0x00004b6b      75e3           jne 0x4b50
0x00004b6d      ebcb           jmp 0x4b3a
0x00004b6f      90             nop
0x00004b70      488d0480       lea rax, [rax + rax*4]
0x00004b74      31d2           xor edx, edx
0x00004b76      488d0480       lea rax, [rax + rax*4]
0x00004b7a      48c1e002       shl rax, 2
0x00004b7e      48f7f1         div rcx
0x00004b81      4885d2         test rdx, rdx
0x00004b84      0f95c2         setne dl
0x00004b87      0fb6d2         movzx edx, dl
0x00004b8a      4801c2         add rdx, rax
0x00004b8d      0f880c010000   js 0x4c9f
0x00004b93      660fefc0       pxor xmm0, xmm0                         ; /src:29
0x00004b97      660fefdb       pxor xmm3, xmm3
0x00004b9b      f2480f2ac2     cvtsi2sd xmm0, rdx
0x00004ba0      e913feffff     jmp 0x49b8
0x00004ba5      803d62f82000.  cmp byte [obj.show_all_fs], 0           ; [0x21440e:1]=0
0x00004bac      0f84faf7ffff   je 0x43ac
0x00004bb2      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00004bb9      c644244000     mov byte [rsp + 0x40], 0
0x00004bbe      488d1d94bd00.  lea rbx, [0x00010959]                   ; "-"
0x00004bc5      4889442450     mov qword [rsp + 0x50], rax
0x00004bca      4889442448     mov qword [rsp + 0x48], rax
0x00004bcf      4889442438     mov qword [rsp + 0x38], rax
0x00004bd4      4889442430     mov qword [rsp + 0x30], rax
0x00004bd9      4889442428     mov qword [rsp + 0x28], rax
0x00004bde      4889442420     mov qword [rsp + 0x20], rax
0x00004be3      e968ffffff     jmp 0x4b50
0x00004be8      488b3424       mov rsi, qword [rsp]
0x00004bec      488d9424e000.  lea rdx, [rsp + 0xe0]
0x00004bf4      bf01000000     mov edi, 1
0x00004bf9      e892d7ffff     call sym.imp.__xstat                    ; /src:411
0x00004bfe      85c0           test eax, eax
0x00004c00      0f852cffffff   jne 0x4b32
0x00004c06      488b3d03f820.  mov rdi, qword [obj.devlist_table]      ; [0x214410:8]=0
0x00004c0d      4885ff         test rdi, rdi
0x00004c10      0f841cffffff   je 0x4b32
0x00004c16      488b8424e000.  mov rax, qword [rsp + 0xe0]
0x00004c1e      488db424a000.  lea rsi, [rsp + 0xa0]
0x00004c26      48898424a000.  mov qword [rsp + 0xa0], rax
0x00004c2e      e89d1a0000     call sym.hash_lookup
0x00004c33      4885c0         test rax, rax
0x00004c36      0f84f6feffff   je 0x4b32
0x00004c3c      4c8b7808       mov r15, qword [rax + 8]
0x00004c40      4d85ff         test r15, r15
0x00004c43      0f84e9feffff   je 0x4b32
0x00004c49      498b3f         mov rdi, qword [r15]
0x00004c4c      4c89f6         mov rsi, r14
0x00004c4f      e8ecd6ffff     call sym.imp.strcmp
0x00004c54      85c0           test eax, eax
0x00004c56      0f84d6feffff   je 0x4b32
0x00004c5c      41f6472802     test byte [r15 + 0x28], 2
0x00004c61      7409           je 0x4c6c
0x00004c63      4084ed         test bpl, bpl
0x00004c66      0f85c6feffff   jne 0x4b32
0x00004c6c      4883c8ff       or rax, 0xffffffffffffffff
0x00004c70      c644244000     mov byte [rsp + 0x40], 0
0x00004c75      488d1dddbc00.  lea rbx, [0x00010959]                   ; "-"
0x00004c7c      4889442450     mov qword [rsp + 0x50], rax
0x00004c81      4889442448     mov qword [rsp + 0x48], rax
0x00004c86      4889442438     mov qword [rsp + 0x38], rax
0x00004c8b      4889442430     mov qword [rsp + 0x30], rax
0x00004c90      4889442428     mov qword [rsp + 0x28], rax
0x00004c95      4889442420     mov qword [rsp + 0x20], rax
0x00004c9a      e993feffff     jmp 0x4b32
0x00004c9f      4889d0         mov rax, rdx
0x00004ca2      660fefc0       pxor xmm0, xmm0
0x00004ca6      48d1e8         shr rax, 1
0x00004ca9      83e201         and edx, 1
0x00004cac      4809d0         or rax, rdx
0x00004caf      660fefdb       pxor xmm3, xmm3
0x00004cb3      f2480f2ac0     cvtsi2sd xmm0, rax
0x00004cb8      f20f58c0       addsd xmm0, xmm0
0x00004cbc      e9f7fcffff     jmp 0x49b8                              ; /src:929
0x00004cc1      488d0d70a600.  lea rcx, obj.__PRETTY_FUNCTION__.9006   ; 0xf338 ; "get_dev"
0x00004cc8      488d3522a300.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x00004ccf      488d3d88a300.  lea rdi, str.empty_cell                 ; 0xf05e ; "!\"empty cell\""
0x00004cd6      bad2040000     mov edx, 0x4d2
0x00004cdb      e8a0d5ffff     call sym.imp.__assert_fail
0x00004ce0      4084ff         test dil, dil
0x00004ce3      747c           je 0x4d61
0x00004ce5      48f7d9         neg rcx
0x00004ce8      4839c1         cmp rcx, rax
0x00004ceb      7661           jbe 0x4d4e
0x00004ced      4829c1         sub rcx, rax
0x00004cf0      48890dc1f620.  mov qword [0x002143b8], rcx             ; [0x2143b8:8]=0
0x00004cf7      803dc2f62000.  cmp byte [0x002143c0], 0                ; /src:986 ; [0x2143c0:1]=0
0x00004cfe      0f84ccf9ffff   je 0x46d0                               ; /src:934
0x00004d04      48f71dadf620.  neg qword [0x002143b8]
0x00004d0b      e9c0f9ffff     jmp 0x46d0
0x00004d10      488d0d21a600.  lea rcx, obj.__PRETTY_FUNCTION__.9006   ; 0xf338 ; "get_dev"
0x00004d17      488d35d3a200.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x00004d1e      488d3d26a300.  lea rdi, str.unhandled_field            ; /src:935 ; 0xf04b ; "!\"unhandled field\""
0x00004d25      bace040000     mov edx, 0x4ce
0x00004d2a      e851d5ffff     call sym.imp.__assert_fail
0x00004d2f      488d0d02a600.  lea rcx, obj.__PRETTY_FUNCTION__.9006   ; 0xf338 ; "get_dev"
0x00004d36      488d35b4a200.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x00004d3d      488d3deea200.  lea rdi, str.bad_field_type             ; 0xf032 ; "!\"bad field_type\""
0x00004d44      ba68040000     mov edx, 0x468
0x00004d49      e832d5ffff     call sym.imp.__assert_fail
0x00004d4e      4829c8         sub rax, rcx
0x00004d51      40883568f620.  mov byte [0x002143c0], sil              ; [0x2143c0:1]=0
0x00004d58      48890559f620.  mov qword [0x002143b8], rax             ; [0x2143b8:8]=0
0x00004d5f      eb96           jmp 0x4cf7
0x00004d61      48f7d8         neg rax
0x00004d64      eb82           jmp 0x4ce8
0x00004d66      e885d4ffff     call sym.imp.__stack_chk_fail
0x00004d6b      0f1f440000     nop dword [rax + rax]
;-- usage:
0x00004d70      4155           push r13
0x00004d72      4154           push r12
0x00004d74      ba05000000     mov edx, 5
0x00004d79      55             push rbp
0x00004d7a      53             push rbx
0x00004d7b      89fd           mov ebp, edi
0x00004d7d      4881ec880000.  sub rsp, 0x88
0x00004d84      488b1d9df620.  mov rbx, qword [obj.program_name]       ; [0x214428:8]=0
0x00004d8b      64488b042528.  mov rax, qword fs:[0x28]
0x00004d94      4889442478     mov qword [rsp + 0x78], rax
0x00004d99      31c0           xor eax, eax
0x00004d9b      85ff           test edi, edi
0x00004d9d      742e           je 0x4dcd
0x00004d9f      488d35d2a500.  lea rsi, str.Try___s___help__for_more_information. ; 0xf378 ; "Try '%s --help' for more information.\n"
0x00004da6      31ff           xor edi, edi
0x00004da8      e8e3d3ffff     call sym.imp.dcgettext
0x00004dad      488b3d8cf520.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x00004db4      4889c2         mov rdx, rax
0x00004db7      4889d9         mov rcx, rbx
0x00004dba      be01000000     mov esi, 1
0x00004dbf      31c0           xor eax, eax
0x00004dc1      e86ad7ffff     call sym.imp.__fprintf_chk
0x00004dc6      89ef           mov edi, ebp
0x00004dc8      e843d7ffff     call sym.imp.exit
0x00004dcd      488d35cca500.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0xf3a0 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00004dd4      31ff           xor edi, edi
0x00004dd6      e8b5d3ffff     call sym.imp.dcgettext
0x00004ddb      4889da         mov rdx, rbx
0x00004dde      4889c6         mov rsi, rax
0x00004de1      bf01000000     mov edi, 1
0x00004de6      31c0           xor eax, eax
0x00004de8      e883d6ffff     call sym.imp.__printf_chk
0x00004ded      488b1d14f520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004df4      488d35cda500.  lea rsi, str.Show_information_about_the_file_system_on_which_each_FILE_resides___or_all_file_systems_by_default. ; 0xf3c8 ; "Show information about the file system on which each FILE resides,\nor all file systems by default.\n"
0x00004dfb      ba05000000     mov edx, 5
0x00004e00      31ff           xor edi, edi
0x00004e02      e889d3ffff     call sym.imp.dcgettext
0x00004e07      4889de         mov rsi, rbx
0x00004e0a      4889c7         mov rdi, rax
0x00004e0d      e8fed4ffff     call sym.imp.fputs_unlocked
0x00004e12      488b1deff420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004e19      488d3510a600.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0xf430 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00004e20      ba05000000     mov edx, 5
0x00004e25      31ff           xor edi, edi
0x00004e27      e864d3ffff     call sym.imp.dcgettext
0x00004e2c      4889de         mov rsi, rbx
0x00004e2f      4889c7         mov rdi, rax
0x00004e32      e8d9d4ffff     call sym.imp.fputs_unlocked
0x00004e37      488b1dcaf420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004e3e      488d353ba600.  lea rsi, str.a____all_____________include_pseudo__duplicate__inaccessible_file_systems_____B____block_size_SIZE__scale_sizes_by_SIZE_before_printing_them__e.g.________________________________BM__prints_sizes_in_units_of_1_048_576_bytes______________________________see_SIZE_format_below_____h____human_readable__print_sizes_in_powers_of_1024__e.g.__1023M______H____si______________print_sizes_in_powers_of_1000__e.g.__1.1G ; 0xf480 ; "  -a, --all             include pseudo, duplicate, inaccessible file systems\n  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\n                           '-BM' prints sizes in units of 1,048,576 bytes;\n                           see SIZE format below\n  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)\n  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)\n"
0x00004e45      ba05000000     mov edx, 5
0x00004e4a      31ff           xor edi, edi
0x00004e4c      e83fd3ffff     call sym.imp.dcgettext
0x00004e51      4889de         mov rsi, rbx
0x00004e54      4889c7         mov rdi, rax
0x00004e57      e8b4d4ffff     call sym.imp.fputs_unlocked
0x00004e5c      488b1da5f420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004e63      488d35b6a700.  lea rsi, str.i____inodes__________list_inode_information_instead_of_block_usage_____k____________________like___block_size_1K_____l____local___________limit_listing_to_local_file_systems__________no_sync_________do_not_invoke_sync_before_getting_usage_info__default ; 0xf620 ; "  -i, --inodes          list inode information instead of block usage\n  -k                    like --block-size=1K\n  -l, --local           limit listing to local file systems\n      --no-sync         do not invoke sync before getting usage info (default)\n"
0x00004e6a      ba05000000     mov edx, 5
0x00004e6f      31ff           xor edi, edi
0x00004e71      e81ad3ffff     call sym.imp.dcgettext
0x00004e76      4889de         mov rsi, rbx
0x00004e79      4889c7         mov rdi, rax
0x00004e7c      e88fd4ffff     call sym.imp.fputs_unlocked
0x00004e81      488b1d80f420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004e88      488d3591a800.  lea rsi, str.output__FIELD_LIST___use_the_output_format_defined_by_FIELD_LIST__________________________________or_print_all_fields_if_FIELD_LIST_is_omitted._____P____portability_____use_the_POSIX_output_format__________sync____________invoke_sync_before_getting_usage_info ; 0xf720 ; "      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\n                               or print all fields if FIELD_LIST is omitted.\n  -P, --portability     use the POSIX output format\n      --sync            invoke sync before getting usage info\n"
0x00004e8f      ba05000000     mov edx, 5
0x00004e94      31ff           xor edi, edi                            ; stat.h:19  * POSIX Standard: 5.6 File Characteristics <sys/stat.h>
0x00004e96      e8f5d2ffff     call sym.imp.dcgettext
0x00004e9b      4889de         mov rsi, rbx
0x00004e9e      4889c7         mov rdi, rax
0x00004ea1      e86ad4ffff     call sym.imp.fputs_unlocked
0x00004ea6      488b1d5bf420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004ead      488d357ca900.  lea rsi, str.total___________elide_all_entries_insignificant_to_available_space_____________________________and_produce_a_grand_total ; 0xf830 ; "      --total           elide all entries insignificant to available space,\n                          and produce a grand total\n"
0x00004eb4      ba05000000     mov edx, 5
0x00004eb9      31ff           xor edi, edi                            ; /src:979
0x00004ebb      e8d0d2ffff     call sym.imp.dcgettext
0x00004ec0      4889de         mov rsi, rbx
0x00004ec3      4889c7         mov rdi, rax
0x00004ec6      e845d4ffff     call sym.imp.fputs_unlocked
0x00004ecb      488b1d36f420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004ed2      488d35dfa900.  lea rsi, str.t____type_TYPE_______limit_listing_to_file_systems_of_type_TYPE_____T____print_type______print_file_system_type_____x____exclude_type_TYPE___limit_listing_to_file_systems_not_of_type_TYPE_____v_____________________ignored ; 0xf8b8 ; "  -t, --type=TYPE       limit listing to file systems of type TYPE\n  -T, --print-type      print file system type\n  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE\n  -v                    (ignored)\n"
0x00004ed9      ba05000000     mov edx, 5
0x00004ede      31ff           xor edi, edi
0x00004ee0      e8abd2ffff     call sym.imp.dcgettext
0x00004ee5      4889de         mov rsi, rbx                            ; stat.h:57
0x00004ee8      4889c7         mov rdi, rax
0x00004eeb      e820d4ffff     call sym.imp.fputs_unlocked
0x00004ef0      488b1d11f420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004ef7      488d359aaa00.  lea rsi, str.help_____display_this_help_and_exit ; 0xf998 ; "      --help     display this help and exit\n"
0x00004efe      ba05000000     mov edx, 5
0x00004f03      31ff           xor edi, edi
0x00004f05      e886d2ffff     call sym.imp.dcgettext                  ; stat.h:68 # ifndef __off_t_defined
0x00004f0a      4889de         mov rsi, rbx
0x00004f0d      4889c7         mov rdi, rax
0x00004f10      e8fbd3ffff     call sym.imp.fputs_unlocked
0x00004f15      488b1decf320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004f1c      488d35a5aa00.  lea rsi, str.version__output_version_information_and_exit ; 0xf9c8 ; "      --version  output version information and exit\n"
0x00004f23      ba05000000     mov edx, 5
0x00004f28      31ff           xor edi, edi
0x00004f2a      e861d2ffff     call sym.imp.dcgettext
0x00004f2f      4889de         mov rsi, rbx
0x00004f32      4889c7         mov rdi, rax
0x00004f35      e8d6d3ffff     call sym.imp.fputs_unlocked
0x00004f3a      488d35bfaa00.  lea rsi, str.Display_values_are_in_units_of_the_first_available_SIZE_from___block_size___and_the__s_BLOCK_SIZE__BLOCK_SIZE_and_BLOCKSIZE_environment_variables.__Otherwise__units_default_to_1024_bytes__or_512_if_POSIXLY_CORRECT_is_set_. ; 0xfa00 ; "\nDisplay values are in units of the first available SIZE from --block-size,\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\n"
0x00004f41      ba05000000     mov edx, 5
0x00004f46      31ff           xor edi, edi
0x00004f48      e843d2ffff     call sym.imp.dcgettext
0x00004f4d      488d151ba100.  lea rdx, [0x0000f06f]                   ; "DF"
0x00004f54      4889c6         mov rsi, rax
0x00004f57      bf01000000     mov edi, 1
0x00004f5c      31c0           xor eax, eax
0x00004f5e      e80dd5ffff     call sym.imp.__printf_chk
0x00004f63      488b1d9ef320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004f6a      488d356fab00.  lea rsi, str.The_SIZE_argument_is_an_integer_and_optional_unit__example:_10K_is_10_1024_.__Units_are_K_M_G_T_P_E_Z_Y__powers_of_1024__or_KB_MB_...__powers_of_1000_.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0xfae0 ; "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x00004f71      ba05000000     mov edx, 5
0x00004f76      31ff           xor edi, edi
0x00004f78      e813d2ffff     call sym.imp.dcgettext
0x00004f7d      4889de         mov rsi, rbx                            ; stat.h:70 typedef __off_t off_t;
0x00004f80      4889c7         mov rdi, rax
0x00004f83      e888d3ffff     call sym.imp.fputs_unlocked
0x00004f88      488b1d79f320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00004f8f      488d3522ac00.  lea rsi, str.FIELD_LIST_is_a_comma_separated_list_of_columns_to_be_included.__Valid__field_names_are:__source____fstype____itotal____iused____iavail____ipcent_____size____used____avail____pcent____file__and__target___see_info_page_. ; 0xfbb8 ; "\nFIELD_LIST is a comma-separated list of columns to be included.  Valid\nfield names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',\n'size', 'used', 'avail', 'pcent', 'file' and 'target' (see info page).\n"
0x00004f96      ba05000000     mov edx, 5
0x00004f9b      31ff           xor edi, edi
0x00004f9d      e8eed1ffff     call sym.imp.dcgettext
0x00004fa2      4889de         mov rsi, rbx
0x00004fa5      4889c7         mov rdi, rax
0x00004fa8      488d1dbda000.  lea rbx, [0x0000f06c]                   ; "df"
0x00004faf      e85cd3ffff     call sym.imp.fputs_unlocked
0x00004fb4      488d05b7a000.  lea rax, [0x0000f072]                   ; "["
0x00004fbb      488d0df1a000.  lea rcx, str.sha256sum                  ; 0xf0b3 ; "sha256sum"
0x00004fc2      48c744246000.  mov qword [rsp + 0x60], 0
0x00004fcb      48c744246800.  mov qword [rsp + 0x68], 0
0x00004fd4      4889e2         mov rdx, rsp
0x00004fd7      48890424       mov qword [rsp], rax
0x00004fdb      488d0592a000.  lea rax, [0x0000f074]                   ; "test invocation"
0x00004fe2      48894c2430     mov qword [rsp + 0x30], rcx
0x00004fe7      488d0dcfa000.  lea rcx, str.sha384sum                  ; 0xf0bd ; "sha384sum"
0x00004fee      4889442408     mov qword [rsp + 8], rax
0x00004ff3      488d05f2a000.  lea rax, [0x0000f0ec]                   ; "coreutils"
0x00004ffa      48894c2440     mov qword [rsp + 0x40], rcx
0x00004fff      488d0dc1a000.  lea rcx, str.sha512sum                  ; 0xf0c7 ; "sha512sum"
0x00005006      4889442410     mov qword [rsp + 0x10], rax
0x0000500b      488d0572a000.  lea rax, [0x0000f084]                   ; "Multi-call invocation"
0x00005012      48894c2450     mov qword [rsp + 0x50], rcx
0x00005017      4889442418     mov qword [rsp + 0x18], rax
0x0000501c      488d0577a000.  lea rax, str.sha224sum                  ; 0xf09a ; "sha224sum"
0x00005023      4889442420     mov qword [rsp + 0x20], rax
0x00005028      488d0575a000.  lea rax, str.sha2_utilities             ; 0xf0a4 ; "sha2 utilities"
0x0000502f      4889442428     mov qword [rsp + 0x28], rax
0x00005034      4889442438     mov qword [rsp + 0x38], rax
0x00005039      4889442448     mov qword [rsp + 0x48], rax
0x0000503e      4889442458     mov qword [rsp + 0x58], rax
0x00005043      0f1f440000     nop dword [rax + rax]
0x00005048      4883c210       add rdx, 0x10
0x0000504c      488b3a         mov rdi, qword [rdx]
0x0000504f      4885ff         test rdi, rdi
0x00005052      7413           je 0x5067
0x00005054      b903000000     mov ecx, 3
0x00005059      4889de         mov rsi, rbx
0x0000505c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000505e      0f97c0         seta al
0x00005061      1c00           sbb al, 0
0x00005063      84c0           test al, al
0x00005065      75e1           jne 0x5048
0x00005067      4c8b6208       mov r12, qword [rdx + 8]
0x0000506b      31ff           xor edi, edi
0x0000506d      ba05000000     mov edx, 5
0x00005072      488d3558a000.  lea rsi, str.s_online_help:___s         ; 0xf0d1 ; "\n%s online help: <%s>\n"
0x00005079      4d85e4         test r12, r12                           ; string_fortified.h:-472
0x0000507c      0f84c1000000   je 0x5143
0x00005082      e809d1ffff     call sym.imp.dcgettext
0x00005087      488d0d0aac00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xfc98 ; "https://www.gnu.org/software/coreutils/"
0x0000508e      488d1553a000.  lea rdx, str.GNU_coreutils              ; 0xf0e8 ; "GNU coreutils"
0x00005095      4889c6         mov rsi, rax
0x00005098      bf01000000     mov edi, 1
0x0000509d      31c0           xor eax, eax
0x0000509f      e8ccd3ffff     call sym.imp.__printf_chk
0x000050a4      31f6           xor esi, esi
0x000050a6      bf05000000     mov edi, 5
0x000050ab      e8b0d3ffff     call sym.imp.setlocale
0x000050b0      4885c0         test rax, rax
0x000050b3      741c           je 0x50d1
0x000050b5      488d353aa000.  lea rsi, [0x0000f0f6]                   ; "en_"
0x000050bc      ba03000000     mov edx, 3
0x000050c1      4889c7         mov rdi, rax
0x000050c4      e8f7cfffff     call sym.imp.strncmp
0x000050c9      85c0           test eax, eax
0x000050cb      0f8507010000   jne 0x51d8
0x000050d1      488d3522a000.  lea rsi, str.Full_documentation___s_s   ; 0xf0fa ; "Full documentation <%s%s>\n"
0x000050d8      31ff           xor edi, edi
0x000050da      ba05000000     mov edx, 5
0x000050df      e8acd0ffff     call sym.imp.dcgettext
0x000050e4      488d0d819f00.  lea rcx, [0x0000f06c]                   ; "df"
0x000050eb      488d15a6ab00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xfc98 ; "https://www.gnu.org/software/coreutils/"
0x000050f2      4889c6         mov rsi, rax
0x000050f5      bf01000000     mov edi, 1
0x000050fa      31c0           xor eax, eax
0x000050fc      e86fd3ffff     call sym.imp.__printf_chk
0x00005101      4939dc         cmp r12, rbx
0x00005104      488d0d839f00.  lea rcx, [0x0000f08e]                   ; " invocation"
0x0000510b      488d1defb400.  lea rbx, [0x00010601]
0x00005112      480f44d9       cmove rbx, rcx
0x00005116      488d35ebab00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xfd08 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000511d      31ff           xor edi, edi
0x0000511f      ba05000000     mov edx, 5
0x00005124      e867d0ffff     call sym.imp.dcgettext
0x00005129      4889d9         mov rcx, rbx
0x0000512c      4889c6         mov rsi, rax
0x0000512f      4c89e2         mov rdx, r12
0x00005132      bf01000000     mov edi, 1
0x00005137      31c0           xor eax, eax
0x00005139      e832d3ffff     call sym.imp.__printf_chk
0x0000513e      e983fcffff     jmp 0x4dc6
0x00005143      e848d0ffff     call sym.imp.dcgettext
0x00005148      488d0d49ab00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xfc98 ; "https://www.gnu.org/software/coreutils/"
0x0000514f      488d15929f00.  lea rdx, str.GNU_coreutils              ; 0xf0e8 ; "GNU coreutils"
0x00005156      4889c6         mov rsi, rax                            ; /src:-158
0x00005159      bf01000000     mov edi, 1
0x0000515e      31c0           xor eax, eax
0x00005160      e80bd3ffff     call sym.imp.__printf_chk               ; /src:-157
0x00005165      31f6           xor esi, esi
0x00005167      bf05000000     mov edi, 5
0x0000516c      e8efd2ffff     call sym.imp.setlocale
0x00005171      4885c0         test rax, rax
0x00005174      7418           je 0x518e
0x00005176      488d35799f00.  lea rsi, [0x0000f0f6]                   ; "en_"
0x0000517d      ba03000000     mov edx, 3
0x00005182      4889c7         mov rdi, rax
0x00005185      e836cfffff     call sym.imp.strncmp
0x0000518a      85c0           test eax, eax
0x0000518c      7543           jne 0x51d1                              ; /src:-145
0x0000518e      488d35659f00.  lea rsi, str.Full_documentation___s_s   ; 0xf0fa ; "Full documentation <%s%s>\n"
0x00005195      ba05000000     mov edx, 5
0x0000519a      31ff           xor edi, edi
0x0000519c      4c8d25c99e00.  lea r12, [0x0000f06c]                   ; "df"
0x000051a3      488d1de49e00.  lea rbx, [0x0000f08e]                   ; " invocation"
0x000051aa      e8e1cfffff     call sym.imp.dcgettext
0x000051af      488d0db69e00.  lea rcx, [0x0000f06c]                   ; /src:-135 ; "df"
0x000051b6      488d15dbaa00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xfc98 ; "https://www.gnu.org/software/coreutils/"
0x000051bd      4889c6         mov rsi, rax
0x000051c0      bf01000000     mov edi, 1
0x000051c5      31c0           xor eax, eax
0x000051c7      e8a4d2ffff     call sym.imp.__printf_chk
0x000051cc      e945ffffff     jmp 0x5116
0x000051d1      4c8d25949e00.  lea r12, [0x0000f06c]                   ; "df"
0x000051d8      4c8b2d29f120.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x000051df      488d35daaa00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xfcc0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000051e6      31ff           xor edi, edi
0x000051e8      ba05000000     mov edx, 5
0x000051ed      e89ecfffff     call sym.imp.dcgettext
0x000051f2      4c89ee         mov rsi, r13
0x000051f5      4889c7         mov rdi, rax
0x000051f8      e813d1ffff     call sym.imp.fputs_unlocked
0x000051fd      e9cffeffff     jmp 0x50d1
0x00005202      0f1f4000       nop dword [rax]
0x00005206      662e0f1f8400.  nop word cs:[rax + rax]
;-- decode_output_arg:
0x00005210      4157           push r15
0x00005212      4156           push r14
0x00005214      4c8d3505ee20.  lea r14, obj.field_data                 ; 0x214020
0x0000521b      4155           push r13
0x0000521d      4154           push r12
0x0000521f      55             push rbp
0x00005220      53             push rbx
0x00005221      4883ec18       sub rsp, 0x18
0x00005225      e8d65d0000     call sym.xstrdup
0x0000522a      4889442408     mov qword [rsp + 8], rax                ; /src:-95
0x0000522f      4989c4         mov r12, rax
0x00005232      660f1f440000   nop word [rax + rax]
0x00005238      be2c000000     mov esi, 0x2c                           ; ','
0x0000523d      4c89e7         mov rdi, r12
0x00005240      4531ed         xor r13d, r13d
0x00005243      e8d8cfffff     call sym.imp.strchr
0x00005248      4885c0         test rax, rax
0x0000524b      7407           je 0x5254
0x0000524d      4c8d6801       lea r13, [rax + 1]
0x00005251      c60000         mov byte [rax], 0                       ; /src:-111
0x00005254      4c8d3dcded20.  lea r15, [0x00214028]                   ; "o\xf2"
0x0000525b      31db           xor ebx, ebx
0x0000525d      0f1f00         nop dword [rax]
0x00005260      498b2f         mov rbp, qword [r15]
0x00005263      4c89e6         mov rsi, r12
0x00005266      4889ef         mov rdi, rbp
0x00005269      e8d2d0ffff     call sym.imp.strcmp
0x0000526e      85c0           test eax, eax
0x00005270      744e           je 0x52c0
0x00005272      83c301         add ebx, 1
0x00005275      4983c730       add r15, 0x30
0x00005279      83fb0c         cmp ebx, 0xc
0x0000527c      75e2           jne 0x5260
0x0000527e      4c89e7         mov rdi, r12
0x00005281      e88a520000     call sym.quote
0x00005286      488d35e3aa00.  lea rsi, str.option___output:_field__s_unknown ; 0xfd70 ; "option --output: field %s unknown"
0x0000528d      4889c3         mov rbx, rax                            ; /src:-99
0x00005290      ba05000000     mov edx, 5
0x00005295      31ff           xor edi, edi
0x00005297      e8f4ceffff     call sym.imp.dcgettext
0x0000529c      31ff           xor edi, edi
0x0000529e      4889c2         mov rdx, rax
0x000052a1      4889d9         mov rcx, rbx
0x000052a4      31f6           xor esi, esi
0x000052a6      31c0           xor eax, eax
0x000052a8      e8f3d1ffff     call sym.imp.error
0x000052ad      bf01000000     mov edi, 1
0x000052b2      e8b9faffff     call sym.usage
0x000052b7      660f1f840000.  nop word [rax + rax]
0x000052c0      89d8           mov eax, ebx
0x000052c2      488d0440       lea rax, [rax + rax*2]
0x000052c6      48c1e004       shl rax, 4
0x000052ca      41807c062c00   cmp byte [r14 + rax + 0x2c], 0
0x000052d0      756e           jne 0x5340
0x000052d2      b801000000     mov eax, 1
0x000052d7      89d9           mov ecx, ebx
0x000052d9      48d3e0         shl rax, cl
0x000052dc      a9eb0f0000     test eax, 0xfeb
0x000052e1      753d           jne 0x5320
0x000052e3      a810           test al, 0x10
0x000052e5      7549           jne 0x5330
0x000052e7      a804           test al, 4
0x000052e9      7471           je 0x535c
0x000052eb      488d35239e00.  lea rsi, str.Size                       ; 0xf115 ; "Size"
0x000052f2      89df           mov edi, ebx
0x000052f4      e8a7eeffff     call sym.alloc_field
0x000052f9      4d85ed         test r13, r13
0x000052fc      4d89ec         mov r12, r13
0x000052ff      0f8533ffffff   jne 0x5238
0x00005305      488b7c2408     mov rdi, qword [rsp + 8]
0x0000530a      4883c418       add rsp, 0x18
0x0000530e      5b             pop rbx
0x0000530f      5d             pop rbp
0x00005310      415c           pop r12
0x00005312      415d           pop r13
0x00005314      415e           pop r14
0x00005316      415f           pop r15
0x00005318      e953cdffff     jmp sym.imp.free
0x0000531d      0f1f00         nop dword [rax]
0x00005320      31f6           xor esi, esi
0x00005322      89df           mov edi, ebx
0x00005324      e877eeffff     call sym.alloc_field
0x00005329      ebce           jmp 0x52f9
0x0000532b      0f1f440000     nop dword [rax + rax]
0x00005330      488d35e39d00.  lea rsi, str.Avail                      ; 0xf11a ; "Avail"
0x00005337      89df           mov edi, ebx
0x00005339      e862eeffff     call sym.alloc_field
0x0000533e      ebb9           jmp 0x52f9
0x00005340      4889ef         mov rdi, rbp
0x00005343      e8c8510000     call sym.quote
0x00005348      ba05000000     mov edx, 5
0x0000534d      4889c3         mov rbx, rax
0x00005350      488d35e9a900.  lea rsi, str.option___output:_field__s_used_more_than_once ; 0xfd40 ; "option --output: field %s used more than once"
0x00005357      e939ffffff     jmp 0x5295
0x0000535c      488d0dfd9f00.  lea rcx, obj.__PRETTY_FUNCTION__.8857   ; 0xf360 ; "decode_output_arg"
0x00005363      488d35879c00.  lea rsi, str..._coreutils_8.31_src_df.c ; 0xeff1 ; "../coreutils-8.31/src/df.c"
0x0000536a      488d3daf9d00.  lea rdi, str.invalid_field              ; 0xf120 ; "!\"invalid field\""
0x00005371      badd010000     mov edx, 0x1dd
0x00005376      e805cfffff     call sym.imp.__assert_fail
0x0000537b      0f1f440000     nop dword [rax + rax]
;-- find_mount_point:
0x00005380      55             push rbp                                ; /src:33
0x00005381      4889e5         mov rbp, rsp
0x00005384      4157           push r15
0x00005386      4156           push r14
0x00005388      4155           push r13
0x0000538a      4c8dad90feff.  lea r13, [rbp - 0x170]                  ; /src:38
0x00005391      4154           push r12                                ; /src:33
0x00005393      53             push rbx
0x00005394      4989fc         mov r12, rdi
0x00005397      4889f3         mov rbx, rsi
0x0000539a      4c89ef         mov rdi, r13                            ; /src:38
0x0000539d      4881ec480100.  sub rsp, 0x148                          ; /src:33
0x000053a4      64488b042528.  mov rax, qword fs:[0x28]
0x000053ad      488945c8       mov qword [rbp - 0x38], rax
0x000053b1      31c0           xor eax, eax
0x000053b3      e868530000     call sym.save_cwd                       ; /src:38
0x000053b8      4189c7         mov r15d, eax
0x000053bb      e8f0ccffff     call sym.imp.__errno_location
0x000053c0      4585ff         test r15d, r15d
0x000053c3      4989c6         mov r14, rax
0x000053c6      0f8519030000   jne 0x56e5
0x000053cc      8b4318         mov eax, dword [rbx + 0x18]             ; /src:44
0x000053cf      2500f00000     and eax, 0xf000
0x000053d4      3d00400000     cmp eax, 0x4000                         ; "H\x8bp\x18\xe8\x87\xe1\xff\xffH\x89\xc1I\x8b\a\x838\x02\x0f\x85X\xff\xff\xff\x8b\x05b\x03!"
0x000053d9      0f84e1010000   je 0x55c0
0x000053df      4c89e7         mov rdi, r12                            ; /src:57
0x000053e2      e8690a0000     call sym.dir_name
0x000053e7      4889c7         mov rdi, rax                            ; /src:59
0x000053ea      4889c3         mov rbx, rax                            ; /src:57
0x000053ed      e8becdffff     call sym.imp.strlen                     ; /src:59
0x000053f2      488d5001       lea rdx, [rax + 1]
0x000053f6      4883c01f       add rax, 0x1f
0x000053fa      4889de         mov rsi, rbx                            ; .//coreutils-8.31/lib:34
0x000053fd      4883e0f0       and rax, 0xfffffffffffffff0             ; /src:59
0x00005401      4829c4         sub rsp, rax
0x00005404      488d7c240f     lea rdi, [rsp + 0xf]
0x00005409      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000540d      e84ecfffff     call sym.imp.memcpy                     ; .//coreutils-8.31/lib:34
0x00005412      4889df         mov rdi, rbx                            ; /src:60
0x00005415      4989c4         mov r12, rax                            ; .//coreutils-8.31/lib:34
0x00005418      e853ccffff     call sym.imp.free                       ; /src:60
0x0000541d      4c89e7         mov rdi, r12                            ; /src:62
0x00005420      e8bbcdffff     call sym.imp.chdir
0x00005425      85c0           test eax, eax
0x00005427      0f8811020000   js 0x563e
0x0000542d      488d95a0feff.  lea rdx, [rbp - 0x160]                  ; ../coreutils-8.31/src/nd-mount-point.c:451
0x00005434      488d35d1aa00.  lea rsi, [0x0000ff0c]                   ; "."
0x0000543b      bf01000000     mov edi, 1
0x00005440      e84bcfffff     call sym.imp.__xstat
0x00005445      85c0           test eax, eax                           ; /src:68
0x00005447      0f8833020000   js 0x5680
0x0000544d      4c8da530ffff.  lea r12, [rbp - 0xd0]
0x00005454      488d1db0aa00.  lea rbx, [0x0000ff0b]                   ; ../coreutils-8.31/src/nd-mount-point.c:451 ; ".."
0x0000545b      e9b3000000     jmp 0x5513
0x00005460      488b85a0feff.  mov rax, qword [rbp - 0x160]            ; /src:87
0x00005467      48398530ffff.  cmp qword [rbp - 0xd0], rax
0x0000546e      0f853c010000   jne 0x55b0
0x00005474      488b85a8feff.  mov rax, qword [rbp - 0x158]
0x0000547b      48398538ffff.  cmp qword [rbp - 0xc8], rax
0x00005482      0f8428010000   je 0x55b0
0x00005488      4889df         mov rdi, rbx                            ; /src:90
0x0000548b      e850cdffff     call sym.imp.chdir
0x00005490      85c0           test eax, eax
0x00005492      0f8828020000   js 0x56c0
0x00005498      660f6f8530ff.  movdqa xmm0, xmmword [rbp - 0xd0]       ; /src:95
0x000054a0      0f2985a0feff.  movaps xmmword [rbp - 0x160], xmm0
0x000054a7      660f6f8540ff.  movdqa xmm0, xmmword [rbp - 0xc0]
0x000054af      0f2985b0feff.  movaps xmmword [rbp - 0x150], xmm0
0x000054b6      660f6f8550ff.  movdqa xmm0, xmmword [rbp - 0xb0]
0x000054be      0f2985c0feff.  movaps xmmword [rbp - 0x140], xmm0
0x000054c5      660f6f8560ff.  movdqa xmm0, xmmword [rbp - 0xa0]
0x000054cd      0f2985d0feff.  movaps xmmword [rbp - 0x130], xmm0
0x000054d4      660f6f8570ff.  movdqa xmm0, xmmword [rbp - 0x90]
0x000054dc      0f2985e0feff.  movaps xmmword [rbp - 0x120], xmm0
0x000054e3      660f6f4580     movdqa xmm0, xmmword [rbp - 0x80]
0x000054e8      0f2985f0feff.  movaps xmmword [rbp - 0x110], xmm0
0x000054ef      660f6f4590     movdqa xmm0, xmmword [rbp - 0x70]
0x000054f4      0f298500ffff.  movaps xmmword [rbp - 0x100], xmm0
0x000054fb      660f6f45a0     movdqa xmm0, xmmword [rbp - 0x60]
0x00005500      0f298510ffff.  movaps xmmword [rbp - 0xf0], xmm0
0x00005507      660f6f45b0     movdqa xmm0, xmmword [rbp - 0x50]
0x0000550c      0f298520ffff.  movaps xmmword [rbp - 0xe0], xmm0
0x00005513      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/src/nd-mount-point.c:451
0x00005516      4889de         mov rsi, rbx
0x00005519      bf01000000     mov edi, 1
0x0000551e      e86dceffff     call sym.imp.__xstat
0x00005523      85c0           test eax, eax                           ; /src:82
0x00005525      0f8935ffffff   jns 0x5460
0x0000552b      488d35d9a900.  lea rsi, [0x0000ff0b]                   ; /src:84 ; ".."
0x00005532      bf04000000     mov edi, 4
0x00005537      e8044d0000     call sym.quotearg_style
0x0000553c      488d35cba900.  lea rsi, str.cannot_stat__s             ; 0xff0e ; "cannot stat %s"
0x00005543      4889c3         mov rbx, rax
0x00005546      ba05000000     mov edx, 5
0x0000554b      31ff           xor edi, edi                            ; /src:92
0x0000554d      e83eccffff     call sym.imp.dcgettext
0x00005552      418b36         mov esi, dword [r14]
0x00005555      4889d9         mov rcx, rbx
0x00005558      4889c2         mov rdx, rax
0x0000555b      31ff           xor edi, edi
0x0000555d      31c0           xor eax, eax
0x0000555f      31db           xor ebx, ebx                            ; /src:36
0x00005561      e83acfffff     call sym.imp.error                      ; /src:92
0x00005566      4c89ef         mov rdi, r13                            ; /src:105
0x00005569      458b26         mov r12d, dword [r14]                   ; /src:104
0x0000556c      e8ff510000     call sym.restore_cwd                    ; /src:105
0x00005571      85c0           test eax, eax
0x00005573      0f8595010000   jne 0x570e
0x00005579      4c89ef         mov rdi, r13                            ; /src:108
0x0000557c      e80f520000     call sym.free_cwd
0x00005581      458926         mov dword [r14], r12d                   ; /src:109
0x00005584      488b4dc8       mov rcx, qword [rbp - 0x38]             ; /src:113
0x00005588      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005591      4889d8         mov rax, rbx
0x00005594      0f8599010000   jne 0x5733
0x0000559a      488d65d8       lea rsp, [rbp - 0x28]
0x0000559e      5b             pop rbx
0x0000559f      415c           pop r12
0x000055a1      415d           pop r13
0x000055a3      415e           pop r14
0x000055a5      415f           pop r15
0x000055a7      5d             pop rbp
0x000055a8      c3             ret
0x000055a9      0f1f80000000.  nop dword [rax]
0x000055b0      e8ab5a0000     call sym.xgetcwd                        ; /src:99
0x000055b5      4889c3         mov rbx, rax
0x000055b8      ebac           jmp 0x5566
0x000055ba      660f1f440000   nop word [rax + rax]
0x000055c0      f30f6f03       movdqu xmm0, xmmword [rbx]              ; /src:47
0x000055c4      4c89e7         mov rdi, r12                            ; /src:48
0x000055c7      0f2985a0feff.  movaps xmmword [rbp - 0x160], xmm0      ; /src:47
0x000055ce      f30f6f4310     movdqu xmm0, xmmword [rbx + 0x10]
0x000055d3      0f2985b0feff.  movaps xmmword [rbp - 0x150], xmm0
0x000055da      f30f6f4320     movdqu xmm0, xmmword [rbx + 0x20]
0x000055df      0f2985c0feff.  movaps xmmword [rbp - 0x140], xmm0
0x000055e6      f30f6f4330     movdqu xmm0, xmmword [rbx + 0x30]
0x000055eb      0f2985d0feff.  movaps xmmword [rbp - 0x130], xmm0
0x000055f2      f30f6f4340     movdqu xmm0, xmmword [rbx + 0x40]
0x000055f7      0f2985e0feff.  movaps xmmword [rbp - 0x120], xmm0
0x000055fe      f30f6f4350     movdqu xmm0, xmmword [rbx + 0x50]
0x00005603      0f2985f0feff.  movaps xmmword [rbp - 0x110], xmm0
0x0000560a      f30f6f4360     movdqu xmm0, xmmword [rbx + 0x60]
0x0000560f      0f298500ffff.  movaps xmmword [rbp - 0x100], xmm0
0x00005616      f30f6f4370     movdqu xmm0, xmmword [rbx + 0x70]
0x0000561b      0f298510ffff.  movaps xmmword [rbp - 0xf0], xmm0
0x00005622      f30f6f838000.  movdqu xmm0, xmmword [rbx + 0x80]
0x0000562a      0f298520ffff.  movaps xmmword [rbp - 0xe0], xmm0
0x00005631      e8aacbffff     call sym.imp.chdir                      ; /src:48
0x00005636      85c0           test eax, eax
0x00005638      0f890ffeffff   jns 0x544d
0x0000563e      4c89e6         mov rsi, r12                            ; /src:64
0x00005641      bf04000000     mov edi, 4
0x00005646      e8f54b0000     call sym.quotearg_style
0x0000564b      488d359ba800.  lea rsi, str.cannot_change_to_directory__s ; 0xfeed ; "cannot change to directory %s"
0x00005652      ba05000000     mov edx, 5
0x00005657      31ff           xor edi, edi
0x00005659      4889c3         mov rbx, rax
0x0000565c      e82fcbffff     call sym.imp.dcgettext
0x00005661      418b36         mov esi, dword [r14]
0x00005664      4889d9         mov rcx, rbx
0x00005667      4889c2         mov rdx, rax
0x0000566a      31ff           xor edi, edi
0x0000566c      31c0           xor eax, eax
0x0000566e      31db           xor ebx, ebx                            ; /src:65
0x00005670      e82bceffff     call sym.imp.error                      ; /src:64
0x00005675      e90affffff     jmp 0x5584                              ; /src:65
0x0000567a      660f1f440000   nop word [rax + rax]
0x00005680      4c89e6         mov rsi, r12                            ; /src:70
0x00005683      bf04000000     mov edi, 4
0x00005688      e8b34b0000     call sym.quotearg_style
0x0000568d      488d358ca800.  lea rsi, str.cannot_stat_current_directory__now__s ; 0xff20 ; "cannot stat current directory (now %s)"
0x00005694      ba05000000     mov edx, 5
0x00005699      31ff           xor edi, edi
0x0000569b      4889c3         mov rbx, rax
0x0000569e      e8edcaffff     call sym.imp.dcgettext
0x000056a3      418b36         mov esi, dword [r14]
0x000056a6      4889d9         mov rcx, rbx
0x000056a9      4889c2         mov rdx, rax
0x000056ac      31ff           xor edi, edi
0x000056ae      31c0           xor eax, eax
0x000056b0      31db           xor ebx, ebx                            ; /src:36
0x000056b2      e8e9cdffff     call sym.imp.error                      ; /src:70
0x000056b7      e9aafeffff     jmp 0x5566                              ; /src:72
0x000056bc      0f1f4000       nop dword [rax]
0x000056c0      488d3544a800.  lea rsi, [0x0000ff0b]                   ; /src:92 ; ".."
0x000056c7      bf04000000     mov edi, 4
0x000056cc      e86f4b0000     call sym.quotearg_style
0x000056d1      ba05000000     mov edx, 5
0x000056d6      4889c3         mov rbx, rax
0x000056d9      488d350da800.  lea rsi, str.cannot_change_to_directory__s ; 0xfeed ; "cannot change to directory %s"
0x000056e0      e966feffff     jmp 0x554b
0x000056e5      488d35e4a700.  lea rsi, [0x0000fed0]                   ; /src:40 ; "cannot get current directory"
0x000056ec      ba05000000     mov edx, 5
0x000056f1      31ff           xor edi, edi
0x000056f3      31db           xor ebx, ebx                            ; /src:41
0x000056f5      e896caffff     call sym.imp.dcgettext                  ; /src:40
0x000056fa      418b36         mov esi, dword [r14]
0x000056fd      4889c2         mov rdx, rax
0x00005700      31ff           xor edi, edi
0x00005702      31c0           xor eax, eax
0x00005704      e897cdffff     call sym.imp.error
0x00005709      e976feffff     jmp 0x5584                              ; /src:41
0x0000570e      488d3533a800.  lea rsi, str.failed_to_return_to_initial_working_directory ; 0xff48 ; "failed to return to initial working directory"
0x00005715      ba05000000     mov edx, 5
0x0000571a      31ff           xor edi, edi
0x0000571c      e86fcaffff     call sym.imp.dcgettext
0x00005721      418b36         mov esi, dword [r14]
0x00005724      4889c2         mov rdx, rax
0x00005727      bf01000000     mov edi, 1
0x0000572c      31c0           xor eax, eax
0x0000572e      e86dcdffff     call sym.imp.error
0x00005733      e8b8caffff     call sym.imp.__stack_chk_fail
0x00005738      0f1f84000000.  nop dword [rax + rax]
;-- canonicalize_filename_mode:
0x00005740      4157           push r15
0x00005742      4156           push r14
0x00005744      4155           push r13
0x00005746      4154           push r12
0x00005748      55             push rbp
0x00005749      53             push rbx
0x0000574a      4881ece80000.  sub rsp, 0xe8
0x00005751      64488b042528.  mov rax, qword fs:[0x28]
0x0000575a      48898424d800.  mov qword [rsp + 0xd8], rax
0x00005762      31c0           xor eax, eax
0x00005764      89f0           mov eax, esi
0x00005766      83e004         and eax, 4
0x00005769      0f9544241b     setne byte [rsp + 0x1b]
0x0000576e      83e603         and esi, 3
0x00005771      8944241c       mov dword [rsp + 0x1c], eax
0x00005775      8d46ff         lea eax, [rsi - 1]
0x00005778      89742404       mov dword [rsp + 4], esi
0x0000577c      85c6           test esi, eax
0x0000577e      0f854c050000   jne 0x5cd0
0x00005784      4885ff         test rdi, rdi
0x00005787      4989fe         mov r14, rdi
0x0000578a      0f8440050000   je 0x5cd0
0x00005790      0fb607         movzx eax, byte [rdi]
0x00005793      84c0           test al, al
0x00005795      0f8475050000   je 0x5d10
0x0000579b      3c2f           cmp al, 0x2f
0x0000579d      0f84bd040000   je 0x5c60
0x000057a3      e8b8580000     call sym.xgetcwd
0x000057a8      4885c0         test rax, rax
0x000057ab      4889c5         mov rbp, rax
0x000057ae      0f84ac010000   je 0x5960
0x000057b4      4889c7         mov rdi, rax
0x000057b7      e8f4c9ffff     call sym.imp.strlen
0x000057bc      483dff0f0000   cmp rax, 0xfff
0x000057c2      4989c7         mov r15, rax
0x000057c5      0f86b5040000   jbe 0x5c80
0x000057cb      4901ef         add r15, rbp
0x000057ce      4c89fb         mov rbx, r15
0x000057d1      488d442440     lea rax, [rsp + 0x40]
0x000057d6      4c89742420     mov qword [rsp + 0x20], r14
0x000057db      48c744241000.  mov qword [rsp + 0x10], 0
0x000057e4      48c744243000.  mov qword [rsp + 0x30], 0
0x000057ed      48c744242800.  mov qword [rsp + 0x28], 0
0x000057f6      4889442408     mov qword [rsp + 8], rax
0x000057fb      410fb606       movzx eax, byte [r14]
0x000057ff      84c0           test al, al
0x00005801      0f8408010000   je 0x590f
0x00005807      660f1f840000.  nop word [rax + rax]
0x00005810      3c2f           cmp al, 0x2f
0x00005812      7518           jne 0x582c
0x00005814      0f1f4000       nop dword [rax]
0x00005818      4983c601       add r14, 1
0x0000581c      410fb606       movzx eax, byte [r14]
0x00005820      3c2f           cmp al, 0x2f
0x00005822      74f4           je 0x5818
0x00005824      84c0           test al, al
0x00005826      0f84c4020000   je 0x5af0
0x0000582c      4d89f5         mov r13, r14
0x0000582f      eb0c           jmp 0x583d
0x00005831      0f1f80000000.  nop dword [rax]
0x00005838      80fa2f         cmp dl, 0x2f
0x0000583b      740d           je 0x584a
0x0000583d      4983c501       add r13, 1
0x00005841      410fb65500     movzx edx, byte [r13]
0x00005846      84d2           test dl, dl
0x00005848      75ee           jne 0x5838
0x0000584a      4d39f5         cmp r13, r14
0x0000584d      0f84bc000000   je 0x590f
0x00005853      4d89ec         mov r12, r13
0x00005856      4d29f4         sub r12, r14
0x00005859      4983fc01       cmp r12, 1
0x0000585d      0f84cd010000   je 0x5a30
0x00005863      4983fc02       cmp r12, 2
0x00005867      7508           jne 0x5871
0x00005869      3c2e           cmp al, 0x2e
0x0000586b      0f848f020000   je 0x5b00
0x00005871      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00005876      7408           je 0x5880
0x00005878      41c6072f       mov byte [r15], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000587c      4983c701       add r15, 1
0x00005880      4b8d0427       lea rax, [r15 + r12]
0x00005884      4839c3         cmp rbx, rax
0x00005887      7731           ja 0x58ba
0x00005889      4829eb         sub rbx, rbp
0x0000588c      4929ef         sub r15, rbp
0x0000588f      4889ef         mov rdi, rbp
0x00005892      498d441c01     lea rax, [r12 + rbx + 1]
0x00005897      4881c3001000.  add rbx, 0x1000
0x0000589e      4981fc001000.  cmp r12, 0x1000
0x000058a5      480f4dd8       cmovge rbx, rax
0x000058a9      4889de         mov rsi, rbx
0x000058ac      e87f550000     call sym.xrealloc
0x000058b1      4889c5         mov rbp, rax
0x000058b4      4801c3         add rbx, rax
0x000058b7      4901c7         add r15, rax
0x000058ba      4c89ff         mov rdi, r15
0x000058bd      4c89e2         mov rdx, r12
0x000058c0      4c89f6         mov rsi, r14
0x000058c3      e898caffff     call sym.imp.memcpy
0x000058c8      837c240402     cmp dword [rsp + 4], 2
0x000058cd      4f8d3c27       lea r15, [r15 + r12]
0x000058d1      41c60700       mov byte [r15], 0
0x000058d5      0f85b5000000   jne 0x5990
0x000058db      807c241b00     cmp byte [rsp + 0x1b], 0
0x000058e0      0f84aa000000   je 0x5990
0x000058e6      c74424580000.  mov dword [rsp + 0x58], 0
0x000058ee      41807d0000     cmp byte [r13], 0
0x000058f3      740b           je 0x5900
0x000058f5      837c240402     cmp dword [rsp + 4], 2
0x000058fa      0f8557040000   jne 0x5d57
0x00005900      4d89ee         mov r14, r13
0x00005903      410fb606       movzx eax, byte [r14]
0x00005907      84c0           test al, al
0x00005909      0f8501ffffff   jne 0x5810
0x0000590f      488d4501       lea rax, [rbp + 1]
0x00005913      4939c7         cmp r15, rax
0x00005916      760b           jbe 0x5923
0x00005918      41807fff2f     cmp byte [r15 - 1], 0x2f
0x0000591d      7504           jne 0x5923
0x0000591f      4983ef01       sub r15, 1
0x00005923      498d4701       lea rax, [r15 + 1]
0x00005927      41c60700       mov byte [r15], 0
0x0000592b      4839c3         cmp rbx, rax
0x0000592e      7412           je 0x5942
0x00005930      4929ef         sub r15, rbp
0x00005933      4889ef         mov rdi, rbp
0x00005936      498d7701       lea rsi, [r15 + 1]
0x0000593a      e8f1540000     call sym.xrealloc
0x0000593f      4889c5         mov rbp, rax
0x00005942      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005947      e824c7ffff     call sym.imp.free
0x0000594c      488b442410     mov rax, qword [rsp + 0x10]
0x00005951      4885c0         test rax, rax
0x00005954      740a           je 0x5960
0x00005956      4889c7         mov rdi, rax
0x00005959      e832120000     call sym.hash_free
0x0000595e      6690           nop
0x00005960      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x00005968      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005971      4889e8         mov rax, rbp
0x00005974      0f85f7030000   jne 0x5d71
0x0000597a      4881c4e80000.  add rsp, 0xe8
0x00005981      5b             pop rbx
0x00005982      5d             pop rbp
0x00005983      415c           pop r12
0x00005985      415d           pop r13
0x00005987      415e           pop r14
0x00005989      415f           pop r15
0x0000598b      c3             ret
0x0000598c      0f1f4000       nop dword [rax]
0x00005990      8b44241c       mov eax, dword [rsp + 0x1c]
0x00005994      488b542408     mov rdx, qword [rsp + 8]
0x00005999      4889ee         mov rsi, rbp
0x0000599c      bf01000000     mov edi, 1
0x000059a1      85c0           test eax, eax
0x000059a3      0f84b7000000   je 0x5a60
0x000059a9      e8e2c9ffff     call sym.imp.__xstat
0x000059ae      85c0           test eax, eax
0x000059b0      0f95c0         setne al
0x000059b3      84c0           test al, al
0x000059b5      0f8485000000   je 0x5a40
0x000059bb      e8f0c6ffff     call sym.imp.__errno_location
0x000059c0      4989c6         mov r14, rax
0x000059c3      8b10           mov edx, dword [rax]
0x000059c5      8b442404       mov eax, dword [rsp + 4]
0x000059c9      85c0           test eax, eax
0x000059cb      7431           je 0x59fe
0x000059cd      83f801         cmp eax, 1
0x000059d0      0f8510ffffff   jne 0x58e6
0x000059d6      488d35f1a600.  lea rsi, [0x000100ce]                   ; "/"
0x000059dd      4c89ef         mov rdi, r13
0x000059e0      89542438       mov dword [rsp + 0x38], edx
0x000059e4      e8f7c8ffff     call sym.imp.strspn
0x000059e9      41807c050000   cmp byte [r13 + rax], 0
0x000059ef      8b542438       mov edx, dword [rsp + 0x38]
0x000059f3      7509           jne 0x59fe
0x000059f5      83fa02         cmp edx, 2
0x000059f8      0f8402ffffff   je 0x5900
0x000059fe      4d89f4         mov r12, r14
0x00005a01      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005a06      89542404       mov dword [rsp + 4], edx
0x00005a0a      e861c6ffff     call sym.imp.free
0x00005a0f      4889ef         mov rdi, rbp
0x00005a12      e859c6ffff     call sym.imp.free
0x00005a17      48837c241000   cmp qword [rsp + 0x10], 0
0x00005a1d      8b542404       mov edx, dword [rsp + 4]
0x00005a21      0f84b5000000   je 0x5adc
0x00005a27      e99e000000     jmp 0x5aca
0x00005a2c      0f1f4000       nop dword [rax]
0x00005a30      3c2e           cmp al, 0x2e
0x00005a32      0f8539feffff   jne 0x5871
0x00005a38      e9c3feffff     jmp 0x5900
0x00005a3d      0f1f00         nop dword [rax]
0x00005a40      8b442458       mov eax, dword [rsp + 0x58]
0x00005a44      2500f00000     and eax, 0xf000
0x00005a49      3d00a00000     cmp eax, sym.quotearg_alloc             ; 0xa000 ; "H\x89\xd11\xd2\xe9\x06\xff\xff\xfff\x0f\x1fD"
0x00005a4e      7420           je 0x5a70
0x00005a50      3d00400000     cmp eax, 0x4000                         ; "H\x8bp\x18\xe8\x87\xe1\xff\xffH\x89\xc1I\x8b\a\x838\x02\x0f\x85X\xff\xff\xff\x8b\x05b\x03!"
0x00005a55      0f84a5feffff   je 0x5900
0x00005a5b      e98efeffff     jmp 0x58ee
0x00005a60      e85bc7ffff     call sym.imp.__lxstat
0x00005a65      85c0           test eax, eax
0x00005a67      0f95c0         setne al
0x00005a6a      e944ffffff     jmp 0x59b3
0x00005a6f      90             nop
0x00005a70      48837c241000   cmp qword [rsp + 0x10], 0
0x00005a76      0f84aa010000   je 0x5c26
0x00005a7c      488b542408     mov rdx, qword [rsp + 8]
0x00005a81      488b742420     mov rsi, qword [rsp + 0x20]
0x00005a86      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005a8b      e8e0050000     call sym.seen_file
0x00005a90      84c0           test al, al
0x00005a92      0f84b8000000   je 0x5b50
0x00005a98      837c240402     cmp dword [rsp + 4], 2
0x00005a9d      0f845dfeffff   je 0x5900
0x00005aa3      e808c6ffff     call sym.imp.__errno_location
0x00005aa8      ba28000000     mov edx, 0x28                           ; '('
0x00005aad      4989c4         mov r12, rax
0x00005ab0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005ab5      89542404       mov dword [rsp + 4], edx
0x00005ab9      e8b2c5ffff     call sym.imp.free
0x00005abe      4889ef         mov rdi, rbp
0x00005ac1      e8aac5ffff     call sym.imp.free
0x00005ac6      8b542404       mov edx, dword [rsp + 4]
0x00005aca      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005acf      89542404       mov dword [rsp + 4], edx
0x00005ad3      e8b8100000     call sym.hash_free
0x00005ad8      8b542404       mov edx, dword [rsp + 4]
0x00005adc      41891424       mov dword [r12], edx
0x00005ae0      31ed           xor ebp, ebp
0x00005ae2      e979feffff     jmp 0x5960
0x00005ae7      660f1f840000.  nop word [rax + rax]
0x00005af0      4d89f5         mov r13, r14
0x00005af3      e952fdffff     jmp 0x584a
0x00005af8      0f1f84000000.  nop dword [rax + rax]
0x00005b00      41807e012e     cmp byte [r14 + 1], 0x2e
0x00005b05      0f8566fdffff   jne 0x5871
0x00005b0b      488d4501       lea rax, [rbp + 1]
0x00005b0f      4d89ee         mov r14, r13
0x00005b12      4939c7         cmp r15, rax
0x00005b15      0f86e0fcffff   jbe 0x57fb
0x00005b1b      498d47ff       lea rax, [r15 - 1]
0x00005b1f      4839c5         cmp rbp, rax
0x00005b22      0f8341020000   jae 0x5d69
0x00005b28      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x00005b2d      4989c7         mov r15, rax
0x00005b30      0f84c5fcffff   je 0x57fb
0x00005b36      4983ef01       sub r15, 1
0x00005b3a      4c39fd         cmp rbp, r15
0x00005b3d      0f84bdfdffff   je 0x5900
0x00005b43      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00005b48      0f84b2fdffff   je 0x5900
0x00005b4e      ebe6           jmp 0x5b36
0x00005b50      488b542408     mov rdx, qword [rsp + 8]
0x00005b55      488b742420     mov rsi, qword [rsp + 0x20]
0x00005b5a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00005b5f      e87c040000     call sym.record_file
0x00005b64      488b742470     mov rsi, qword [rsp + 0x70]
0x00005b69      4889ef         mov rdi, rbp
0x00005b6c      e87f690000     call sym.areadlink_with_size
0x00005b71      4885c0         test rax, rax
0x00005b74      4989c6         mov r14, rax
0x00005b77      0f8465010000   je 0x5ce2
0x00005b7d      4889c7         mov rdi, rax
0x00005b80      e82bc6ffff     call sym.imp.strlen
0x00005b85      4c89ef         mov rdi, r13
0x00005b88      4989c4         mov r12, rax
0x00005b8b      4889442420     mov qword [rsp + 0x20], rax
0x00005b90      e81bc6ffff     call sym.imp.strlen
0x00005b95      48837c243000   cmp qword [rsp + 0x30], 0
0x00005b9b      4889c2         mov rdx, rax
0x00005b9e      498d4c1401     lea rcx, [r12 + rdx + 1]
0x00005ba3      0f84f6000000   je 0x5c9f
0x00005ba9      48394c2430     cmp qword [rsp + 0x30], rcx
0x00005bae      7321           jae 0x5bd1
0x00005bb0      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005bb5      4889ce         mov rsi, rcx
0x00005bb8      4889542438     mov qword [rsp + 0x38], rdx
0x00005bbd      48894c2430     mov qword [rsp + 0x30], rcx
0x00005bc2      e869520000     call sym.xrealloc
0x00005bc7      488b542438     mov rdx, qword [rsp + 0x38]
0x00005bcc      4889442428     mov qword [rsp + 0x28], rax
0x00005bd1      4c8b642428     mov r12, qword [rsp + 0x28]
0x00005bd6      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00005bdb      4883c201       add rdx, 1
0x00005bdf      4c89ee         mov rsi, r13
0x00005be2      4c01e7         add rdi, r12
0x00005be5      4d89e5         mov r13, r12
0x00005be8      e8a3c8ffff     call sym.imp.memmove
0x00005bed      488b542420     mov rdx, qword [rsp + 0x20]
0x00005bf2      4c89f6         mov rsi, r14
0x00005bf5      4c89e7         mov rdi, r12
0x00005bf8      e863c7ffff     call sym.imp.memcpy
0x00005bfd      41803e2f       cmp byte [r14], 0x2f
0x00005c01      4c89642420     mov qword [rsp + 0x20], r12
0x00005c06      488d4501       lea rax, [rbp + 1]
0x00005c0a      0f84f4000000   je 0x5d04
0x00005c10      4939c7         cmp r15, rax
0x00005c13      0f8709010000   ja 0x5d22
0x00005c19      4c89f7         mov rdi, r14
0x00005c1c      e84fc4ffff     call sym.imp.free
0x00005c21      e9dafcffff     jmp 0x5900
0x00005c26      4c8d05331800.  lea r8, sym.triple_free                 ; 0x7460 ; "SH\x89\xfbH\x8b?\xe8\x04\xac\xff\xffH\x89\xdf[\xe9\xfb\xab\xff\xfff.\x0f\x1f\x84"
0x00005c2d      488d0dec1700.  lea rcx, sym.triple_compare_ino_str     ; 0x7420 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8bN\x10H9O\x10u\xf2H\x83\xec\bH\x8b6H\x8b?\xe8\xf7\xae\xff\xff\x85\xc0\x0f\x94\xc0H\x83\xc4\b\xc3\x0f\x1f"
0x00005c34      31f6           xor esi, esi
0x00005c36      488d15731700.  lea rdx, sym.triple_hash                ; 0x73b0 ; "USH\x89\xfdH\x89\xf3H\x83\xec\bH\x8b?\xe8\xfcV"
0x00005c3d      bf07000000     mov edi, 7
0x00005c42      e8f90c0000     call sym.hash_initialize
0x00005c47      4885c0         test rax, rax
0x00005c4a      4889442410     mov qword [rsp + 0x10], rax
0x00005c4f      0f8527feffff   jne 0x5a7c
0x00005c55      e8c6530000     call sym.xalloc_die
0x00005c5a      660f1f440000   nop word [rax + rax]
0x00005c60      bf00100000     mov edi, 0x1000
0x00005c65      e866510000     call sym.xmalloc
0x00005c6a      4889c5         mov rbp, rax
0x00005c6d      488d98001000.  lea rbx, [rax + 0x1000]
0x00005c74      4c8d7801       lea r15, [rax + 1]
0x00005c78      c6002f         mov byte [rax], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00005c7b      e951fbffff     jmp 0x57d1
0x00005c80      4889ef         mov rdi, rbp
0x00005c83      be00100000     mov esi, 0x1000
0x00005c88      e8a3510000     call sym.xrealloc
0x00005c8d      4889c5         mov rbp, rax
0x00005c90      4901c7         add r15, rax
0x00005c93      488d98001000.  lea rbx, [rax + 0x1000]
0x00005c9a      e932fbffff     jmp 0x57d1
0x00005c9f      4881f9001000.  cmp rcx, 0x1000
0x00005ca6      b800100000     mov eax, 0x1000
0x00005cab      4889542438     mov qword [rsp + 0x38], rdx
0x00005cb0      480f43c1       cmovae rax, rcx
0x00005cb4      4889c7         mov rdi, rax
0x00005cb7      4889442430     mov qword [rsp + 0x30], rax
0x00005cbc      e80f510000     call sym.xmalloc
0x00005cc1      488b542438     mov rdx, qword [rsp + 0x38]
0x00005cc6      4889442428     mov qword [rsp + 0x28], rax
0x00005ccb      e901ffffff     jmp 0x5bd1
0x00005cd0      e8dbc3ffff     call sym.imp.__errno_location
0x00005cd5      31ed           xor ebp, ebp
0x00005cd7      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3ba00000
0x00005cdd      e97efcffff     jmp 0x5960
0x00005ce2      e8c9c3ffff     call sym.imp.__errno_location
0x00005ce7      837c240402     cmp dword [rsp + 4], 2
0x00005cec      4989c6         mov r14, rax
0x00005cef      8b10           mov edx, dword [rax]
0x00005cf1      7509           jne 0x5cfc
0x00005cf3      83fa0c         cmp edx, 0xc
0x00005cf6      0f8504fcffff   jne 0x5900
0x00005cfc      4d89f4         mov r12, r14
0x00005cff      e9acfdffff     jmp 0x5ab0
0x00005d04      c645002f       mov byte [rbp], 0x2f                    ; '/'
0x00005d08      4989c7         mov r15, rax
0x00005d0b      e909ffffff     jmp 0x5c19
0x00005d10      e89bc3ffff     call sym.imp.__errno_location
0x00005d15      31ed           xor ebp, ebp
0x00005d17      c70002000000   mov dword [rax], 2
0x00005d1d      e93efcffff     jmp 0x5960
0x00005d22      498d47ff       lea rax, [r15 - 1]
0x00005d26      4839c5         cmp rbp, rax
0x00005d29      7307           jae 0x5d32
0x00005d2b      41807ffe2f     cmp byte [r15 - 2], 0x2f
0x00005d30      750b           jne 0x5d3d
0x00005d32      4989c7         mov r15, rax
0x00005d35      e9dffeffff     jmp 0x5c19
0x00005d3a      4c89f8         mov rax, r15
0x00005d3d      4c8d78ff       lea r15, [rax - 1]
0x00005d41      4c39fd         cmp rbp, r15
0x00005d44      0f84cffeffff   je 0x5c19
0x00005d4a      41807fff2f     cmp byte [r15 - 1], 0x2f
0x00005d4f      0f84c4feffff   je 0x5c19
0x00005d55      ebe3           jmp 0x5d3a
0x00005d57      e854c3ffff     call sym.imp.__errno_location
0x00005d5c      ba14000000     mov edx, 0x14
0x00005d61      4989c4         mov r12, rax
0x00005d64      e998fcffff     jmp 0x5a01
0x00005d69      4989c7         mov r15, rax
0x00005d6c      e98afaffff     jmp 0x57fb
0x00005d71      e87ac4ffff     call sym.imp.__stack_chk_fail
0x00005d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x00005d80      48893d99e620.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x214420:8]=0
0x00005d87      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00005d88      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00005d90      40883d81e620.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x214418:1]=0
0x00005d97      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00005d98      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00005da0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00005da1      53             push rbx
0x00005da2      4883ec08       sub rsp, 8
0x00005da6      488b3d5be520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x00005dad      e8be6b0000     call sym.close_stream
0x00005db2      85c0           test eax, eax
0x00005db4      7416           je 0x5dcc
0x00005db6      e8f5c2ffff     call sym.imp.__errno_location
0x00005dbb      803d56e62000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x214418:1]=0
0x00005dc2      4889c3         mov rbx, rax
0x00005dc5      741c           je 0x5de3
0x00005dc7      833820         cmp dword [rax], 0x20
0x00005dca      7517           jne 0x5de3
0x00005dcc      488b3d6de520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x00005dd3      e8986b0000     call sym.close_stream
0x00005dd8      85c0           test eax, eax
0x00005dda      7546           jne 0x5e22
0x00005ddc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00005de0      5b             pop rbx
0x00005de1      5d             pop rbp
0x00005de2      c3             ret
0x00005de3      488d3591a100.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xff7b ; "write error"
0x00005dea      31ff           xor edi, edi
0x00005dec      ba05000000     mov edx, 5
0x00005df1      e89ac3ffff     call sym.imp.dcgettext
0x00005df6      488b3d23e620.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x214420:8]=0
0x00005dfd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00005e00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00005e03      7428           je 0x5e2d
0x00005e05      e806450000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00005e0a      8b33           mov esi, dword [rbx]
0x00005e0c      488d1574a100.  lea rdx, str.s:__s                      ; 0xff87 ; "%s: %s"
0x00005e13      4889c1         mov rcx, rax
0x00005e16      4989e8         mov r8, rbp
0x00005e19      31ff           xor edi, edi
0x00005e1b      31c0           xor eax, eax
0x00005e1d      e87ec6ffff     call sym.imp.error
0x00005e22      8b3d40e42000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x214268:4]=1
0x00005e28      e8a3c2ffff     call sym.imp._exit
0x00005e2d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00005e2f      488d1541ae00.  lea rdx, [0x00010c77]                   ; "%s"
0x00005e36      4889c1         mov rcx, rax
0x00005e39      31ff           xor edi, edi
0x00005e3b      31c0           xor eax, eax
0x00005e3d      e85ec6ffff     call sym.imp.error
0x00005e42      ebde           jmp 0x5e22
0x00005e44      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e4e      6690           nop
;-- dir_name:
0x00005e50      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x00005e54      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x00005e59      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x00005e5c      7405           je 0x5e63
0x00005e5e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x00005e62      c3             ret
0x00005e63      e8b8510000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x00005e68      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x00005e70      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00005e71      53             push rbx
0x00005e72      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00005e74      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x00005e77      4883ec08       sub rsp, 8
0x00005e7b      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x00005e7e      400f94c5       sete bpl
0x00005e82      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00005e87      4889c1         mov rcx, rax
0x00005e8a      4829d9         sub rcx, rbx
0x00005e8d      4839e9         cmp rcx, rbp
0x00005e90      762e           jbe 0x5ec0
0x00005e92      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00005e96      488d51ff       lea rdx, [rcx - 1]
0x00005e9a      7412           je 0x5eae
0x00005e9c      eb22           jmp 0x5ec0
0x00005e9e      6690           nop
0x00005ea0      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00005ea5      488d42ff       lea rax, [rdx - 1]
0x00005ea9      7508           jne 0x5eb3
0x00005eab      4889c2         mov rdx, rax
0x00005eae      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00005eb1      75ed           jne 0x5ea0
0x00005eb3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00005eb7      4889d0         mov rax, rdx
0x00005eba      5b             pop rbx
0x00005ebb      5d             pop rbp
0x00005ebc      c3             ret
0x00005ebd      0f1f00         nop dword [rax]
0x00005ec0      4883c408       add rsp, 8
0x00005ec4      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00005ec7      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00005eca      5b             pop rbx
0x00005ecb      5d             pop rbp
0x00005ecc      c3             ret
0x00005ecd      0f1f00         nop dword [rax]
;-- mdir_name:
0x00005ed0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x00005ed1      53             push rbx
0x00005ed2      4889fd         mov rbp, rdi
0x00005ed5      4883ec08       sub rsp, 8
0x00005ed9      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00005ede      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00005ee1      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00005ee4      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00005ee7      0fb6c0         movzx eax, al
0x00005eea      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00005eef      e8ccc4ffff     call sym.imp.malloc
0x00005ef4      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00005ef7      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x00005efa      741a           je 0x5f16                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00005efc      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005eff      4889ee         mov rsi, rbp
0x00005f02      4889c7         mov rdi, rax
0x00005f05      e856c4ffff     call sym.imp.memcpy
0x00005f0a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00005f0d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005f10      740e           je 0x5f20                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00005f12      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00005f16      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x00005f1a      4889c8         mov rax, rcx
0x00005f1d      5b             pop rbx
0x00005f1e      5d             pop rbp
0x00005f1f      c3             ret
0x00005f20      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00005f23      bb01000000     mov ebx, 1
0x00005f28      ebe8           jmp 0x5f12
0x00005f2a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x00005f30      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00005f33      4889f8         mov rax, rdi
0x00005f36      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00005f39      7511           jne 0x5f4c
0x00005f3b      0f1f440000     nop dword [rax + rax]
0x00005f40      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00005f44      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00005f47      80fa2f         cmp dl, 0x2f
0x00005f4a      74f4           je 0x5f40
0x00005f4c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00005f4e      743a           je 0x5f8a
0x00005f50      4889c1         mov rcx, rax
0x00005f53      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00005f55      eb1e           jmp 0x5f75
0x00005f57      660f1f840000.  nop word [rax + rax]
0x00005f60      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00005f63      7405           je 0x5f6a
0x00005f65      4889c8         mov rax, rcx
0x00005f68      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00005f6a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00005f6e      0fb611         movzx edx, byte [rcx]
0x00005f71      84d2           test dl, dl
0x00005f73      7415           je 0x5f8a
0x00005f75      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00005f78      75e6           jne 0x5f60
0x00005f7a      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00005f7e      0fb611         movzx edx, byte [rcx]
0x00005f81      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00005f86      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00005f88      75eb           jne 0x5f75
0x00005f8a      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00005f8c      0f1f4000       nop dword [rax]
;-- base_len:
0x00005f90      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00005f91      4889fb         mov rbx, rdi
0x00005f94      e817c2ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005f99      4883f801       cmp rax, 1
0x00005f9d      760b           jbe 0x5faa
0x00005f9f      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00005fa4      488d50ff       lea rdx, [rax - 1]
0x00005fa8      740e           je 0x5fb8
0x00005faa      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00005fab      c3             ret
0x00005fac      0f1f4000       nop dword [rax]
0x00005fb0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00005fb3      0f1f440000     nop dword [rax + rax]
0x00005fb8      4883fa01       cmp rdx, 1
0x00005fbc      7412           je 0x5fd0
0x00005fbe      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00005fc3      488d42ff       lea rax, [rdx - 1]
0x00005fc7      74e7           je 0x5fb0
0x00005fc9      4889d0         mov rax, rdx
0x00005fcc      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00005fcd      c3             ret
0x00005fce      6690           nop
0x00005fd0      b801000000     mov eax, 1
0x00005fd5      5b             pop rbx
0x00005fd6      c3             ret
0x00005fd7      660f1f840000.  nop word [rax + rax]
;-- record_file:
0x00005fe0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:30
0x00005fe3      747b           je 0x6060
0x00005fe5      4155           push r13
0x00005fe7      4154           push r12
0x00005fe9      4989fd         mov r13, rdi
0x00005fec      55             push rbp
0x00005fed      53             push rbx
0x00005fee      4989f4         mov r12, rsi
0x00005ff1      bf18000000     mov edi, 0x18                           ; ../coreutils-8.31/lib/file-set.c:36
0x00005ff6      4889d5         mov rbp, rdx
0x00005ff9      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:30
0x00005ffd      e8ce4d0000     call sym.xmalloc                        ; ../coreutils-8.31/lib/file-set.c:36
0x00006002      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/file-set.c:37
0x00006005      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:36
0x00006008      e8f34f0000     call sym.xstrdup                        ; ../coreutils-8.31/lib/file-set.c:37
0x0000600d      488903         mov qword [rbx], rax
0x00006010      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/file-set.c:38
0x00006014      4889de         mov rsi, rbx                            ; ../coreutils-8.31/lib/file-set.c:42
0x00006017      4c89ef         mov rdi, r13
0x0000601a      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/file-set.c:38
0x0000601e      488b4500       mov rax, qword [rbp]                    ; ../coreutils-8.31/lib/file-set.c:39
0x00006022      48894310       mov qword [rbx + 0x10], rax
0x00006026      e815110000     call sym.hash_insert                    ; ../coreutils-8.31/lib/file-set.c:42
0x0000602b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/file-set.c:43
0x0000602e      7432           je 0x6062
0x00006030      4839c3         cmp rbx, rax                            ; ../coreutils-8.31/lib/file-set.c:49
0x00006033      741b           je 0x6050
0x00006035      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x00006039      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/file-set.c:53
0x0000603c      5b             pop rbx                                 ; ../coreutils-8.31/lib/file-set.c:56
0x0000603d      5d             pop rbp
0x0000603e      415c           pop r12
0x00006040      415d           pop r13
0x00006042      e919140000     jmp sym.triple_free                     ; ../coreutils-8.31/lib/file-set.c:53
0x00006047      660f1f840000.  nop word [rax + rax]
0x00006050      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/file-set.c:56
0x00006054      5b             pop rbx
0x00006055      5d             pop rbp
0x00006056      415c           pop r12
0x00006058      415d           pop r13
0x0000605a      c3             ret
0x0000605b      0f1f440000     nop dword [rax + rax]
0x00006060      f3c3           ret
0x00006062      e8b94f0000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/file-set.c:46
0x00006067      660f1f840000.  nop word [rax + rax]
;-- seen_file:
0x00006070      4883ec28       sub rsp, 0x28                           ; ../coreutils-8.31/lib/file-set.c:63
0x00006074      64488b042528.  mov rax, qword fs:[0x28]
0x0000607d      4889442418     mov qword [rsp + 0x18], rax
0x00006082      31c0           xor eax, eax
0x00006084      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/file-set.c:66
0x00006087      7423           je 0x60ac
0x00006089      488b4208       mov rax, qword [rdx + 8]                ; ../coreutils-8.31/lib/file-set.c:70
0x0000608d      48893424       mov qword [rsp], rsi                    ; ../coreutils-8.31/lib/file-set.c:69
0x00006091      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/file-set.c:73
0x00006094      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/file-set.c:70
0x00006099      488b02         mov rax, qword [rdx]                    ; ../coreutils-8.31/lib/file-set.c:71
0x0000609c      4889442410     mov qword [rsp + 0x10], rax
0x000060a1      e82a060000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/file-set.c:73
0x000060a6      4885c0         test rax, rax
0x000060a9      0f95c0         setne al
0x000060ac      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/file-set.c:74
0x000060b1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000060ba      7505           jne 0x60c1
0x000060bc      4883c428       add rsp, 0x28
0x000060c0      c3             ret
0x000060c1      e82ac1ffff     call sym.imp.__stack_chk_fail
0x000060c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- next_prime:
0x000060d0      4883ff0a       cmp rdi, 0xa                            ; ../coreutils-8.31/lib/hash.c:464
0x000060d4      b80a000000     mov eax, 0xa
0x000060d9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x000060e3      480f42f8       cmovb rdi, rax
0x000060e7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x000060eb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x000060ef      746e           je 0x615f
0x000060f1      0f1f80000000.  nop dword [rax]
0x000060f8      4889f8         mov rax, rdi
0x000060fb      4889f9         mov rcx, rdi
0x000060fe      49f7e1         mul r9
0x00006101      4889d0         mov rax, rdx
0x00006104      48d1e8         shr rax, 1
0x00006107      488d0440       lea rax, [rax + rax*2]
0x0000610b      4829c1         sub rcx, rax
0x0000610e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x00006112      4889c8         mov rax, rcx
0x00006115      7639           jbe 0x6150
0x00006117      4885c9         test rcx, rcx
0x0000611a      7439           je 0x6155
0x0000611c      41b810000000   mov r8d, 0x10
0x00006122      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x00006127      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x0000612c      eb0b           jmp 0x6139
0x0000612e      6690           nop
0x00006130      4983c008       add r8, 8
0x00006134      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00006137      741c           je 0x6155
0x00006139      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000613d      31d2           xor edx, edx
0x0000613f      4889f8         mov rax, rdi
0x00006142      48f7f1         div rcx
0x00006145      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00006148      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000614b      4889d0         mov rax, rdx
0x0000614e      72e0           jb 0x6130
0x00006150      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00006153      750a           jne 0x615f
0x00006155      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00006159      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000615d      7599           jne 0x60f8
0x0000615f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00006162      c3             ret
0x00006163      0f1f00         nop dword [rax]
0x00006166      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00006170      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00006173      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00006175      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00006179      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000617c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000617f      c3             ret
;-- raw_comparator:
0x00006180      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00006183      0f94c0         sete al
0x00006186      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00006187      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00006190      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00006191      4889fb         mov rbx, rdi
0x00006194      4889f7         mov rdi, rsi
0x00006197      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000619b      ff5330         call qword [rbx + 0x30]
0x0000619e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x000061a2      7609           jbe 0x61ad
0x000061a4      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x000061a8      480303         add rax, qword [rbx]
0x000061ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x000061ac      c3             ret
0x000061ad      e8eebeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x000061b2      0f1f4000       nop dword [rax]
0x000061b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x000061c0      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x000061c2      4155           push r13
0x000061c4      4989d6         mov r14, rdx
0x000061c7      4154           push r12
0x000061c9      55             push rbp
0x000061ca      4989fc         mov r12, rdi
0x000061cd      53             push rbx
0x000061ce      4889f5         mov rbp, rsi
0x000061d1      4189cd         mov r13d, ecx
0x000061d4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x000061d9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x000061dc      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x000061df      4885f6         test rsi, rsi
0x000061e2      0f84e8000000   je 0x62d0
0x000061e8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x000061eb      4889c3         mov rbx, rax
0x000061ee      0f848f000000   je 0x6283
0x000061f4      4889ef         mov rdi, rbp
0x000061f7      41ff542438     call qword [r12 + 0x38]
0x000061fc      84c0           test al, al
0x000061fe      0f857c000000   jne 0x6280
0x00006204      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00006208      4885c0         test rax, rax
0x0000620b      0f84bf000000   je 0x62d0
0x00006211      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00006214      4839f5         cmp rbp, rsi
0x00006217      7520           jne 0x6239
0x00006219      eb31           jmp 0x624c
0x0000621b      0f1f440000     nop dword [rax + rax]
0x00006220      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00006224      488b4308       mov rax, qword [rbx + 8]
0x00006228      4885c0         test rax, rax
0x0000622b      0f849f000000   je 0x62d0
0x00006231      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00006234      4839ee         cmp rsi, rbp
0x00006237      7413           je 0x624c
0x00006239      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000623c      41ff542438     call qword [r12 + 0x38]
0x00006241      84c0           test al, al
0x00006243      74db           je 0x6220
0x00006245      488b4308       mov rax, qword [rbx + 8]
0x00006249      488b30         mov rsi, qword [rax]
0x0000624c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000624f      741d           je 0x626e
0x00006251      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00006255      48895308       mov qword [rbx + 8], rdx
0x00006259      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00006260      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00006265      48895008       mov qword [rax + 8], rdx
0x00006269      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000626e      5b             pop rbx
0x0000626f      4889f0         mov rax, rsi
0x00006272      5d             pop rbp
0x00006273      415c           pop r12
0x00006275      415d           pop r13
0x00006277      415e           pop r14
0x00006279      c3             ret
0x0000627a      660f1f440000   nop word [rax + rax]
0x00006280      488b33         mov rsi, qword [rbx]
0x00006283      4584ed         test r13b, r13b
0x00006286      74e6           je 0x626e
0x00006288      488b4308       mov rax, qword [rbx + 8]
0x0000628c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000628f      742f           je 0x62c0
0x00006291      f30f6f00       movdqu xmm0, xmmword [rax]
0x00006295      0f1103         movups xmmword [rbx], xmm0
0x00006298      48c700000000.  mov qword [rax], 0
0x0000629f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x000062a4      48895008       mov qword [rax + 8], rdx
0x000062a8      4989442448     mov qword [r12 + 0x48], rax
0x000062ad      4889f0         mov rax, rsi
0x000062b0      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x000062b1      5d             pop rbp
0x000062b2      415c           pop r12
0x000062b4      415d           pop r13
0x000062b6      415e           pop r14
0x000062b8      c3             ret
0x000062b9      0f1f80000000.  nop dword [rax]
0x000062c0      48c703000000.  mov qword [rbx], 0
0x000062c7      eba5           jmp 0x626e
0x000062c9      0f1f80000000.  nop dword [rax]
0x000062d0      31f6           xor esi, esi
0x000062d2      5b             pop rbx
0x000062d3      4889f0         mov rax, rsi
0x000062d6      5d             pop rbp
0x000062d7      415c           pop r12
0x000062d9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x000062db      415e           pop r14
0x000062dd      c3             ret
0x000062de      6690           nop
;-- check_tuning.isra.0:
0x000062e0      488b17         mov rdx, qword [rdi]
0x000062e3      488d0d169d00.  lea rcx, obj.default_tuning             ; 0x10000
0x000062ea      b801000000     mov eax, 1
0x000062ef      4839ca         cmp rdx, rcx
0x000062f2      7461           je 0x6355
0x000062f4      f30f104208     movss xmm0, dword [rdx + 8]
0x000062f9      0f2e05149d00.  ucomiss xmm0, dword [0x00010014]
0x00006300      764e           jbe 0x6350
0x00006302      f30f100d0e9d.  movss xmm1, dword [0x00010018]          ; [0x10018:4]=0x3f666666
0x0000630a      0f2ec8         ucomiss xmm1, xmm0
0x0000630d      7641           jbe 0x6350
0x0000630f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x00006314      0f2e0d019d00.  ucomiss xmm1, dword [0x0001001c]
0x0000631b      7633           jbe 0x6350
0x0000631d      f30f100a       movss xmm1, dword [rdx]
0x00006321      0f2e0df89c00.  ucomiss xmm1, dword [0x00010020]
0x00006328      7226           jb 0x6350
0x0000632a      f30f580de29c.  addss xmm1, dword [0x00010014]          ; ../coreutils-8.31/lib/hash.c:737
0x00006332      f30f105204     movss xmm2, dword [rdx + 4]
0x00006337      0f2ed1         ucomiss xmm2, xmm1
0x0000633a      7614           jbe 0x6350
0x0000633c      f30f101de09c.  movss xmm3, dword [0x00010024]          ; [0x10024:4]=0x3f800000
0x00006344      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00006347      7207           jb 0x6350
0x00006349      0f2ec1         ucomiss xmm0, xmm1
0x0000634c      7707           ja 0x6355
0x0000634e      6690           nop
0x00006350      48890f         mov qword [rdi], rcx
0x00006353      31c0           xor eax, eax
0x00006355      f3c3           ret
0x00006357      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00006360      4157           push r15
0x00006362      4156           push r14
0x00006364      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00006366      4154           push r12
0x00006368      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00006369      53             push rbx
0x0000636a      4883ec08       sub rsp, 8
0x0000636e      4c8b26         mov r12, qword [rsi]
0x00006371      4c3b6608       cmp r12, qword [rsi + 8]
0x00006375      0f83dd000000   jae 0x6458
0x0000637b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000637e      4989f5         mov r13, rsi
0x00006381      4189d6         mov r14d, edx
0x00006384      0f1f4000       nop dword [rax]
0x00006388      4d8b3c24       mov r15, qword [r12]
0x0000638c      4d85ff         test r15, r15
0x0000638f      0f84b5000000   je 0x644a
0x00006395      498b5c2408     mov rbx, qword [r12 + 8]
0x0000639a      4885db         test rbx, rbx
0x0000639d      751d           jne 0x63bc
0x0000639f      eb5a           jmp 0x63fb
0x000063a1      0f1f80000000.  nop dword [rax]
0x000063a8      488b4808       mov rcx, qword [rax + 8]
0x000063ac      4885d2         test rdx, rdx
0x000063af      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x000063b3      48895808       mov qword [rax + 8], rbx
0x000063b7      4889d3         mov rbx, rdx
0x000063ba      743b           je 0x63f7
0x000063bc      4c8b3b         mov r15, qword [rbx]
0x000063bf      4889ef         mov rdi, rbp
0x000063c2      4c89fe         mov rsi, r15
0x000063c5      e8c6fdffff     call sym.safe_hasher
0x000063ca      48833800       cmp qword [rax], 0
0x000063ce      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x000063d2      75d4           jne 0x63a8
0x000063d4      4c8938         mov qword [rax], r15
0x000063d7      4883451801     add qword [rbp + 0x18], 1
0x000063dc      4885d2         test rdx, rdx
0x000063df      48c703000000.  mov qword [rbx], 0
0x000063e6      488b4548       mov rax, qword [rbp + 0x48]
0x000063ea      48894308       mov qword [rbx + 8], rax
0x000063ee      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x000063f2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x000063f5      75c5           jne 0x63bc
0x000063f7      4d8b3c24       mov r15, qword [r12]
0x000063fb      4584f6         test r14b, r14b
0x000063fe      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00006407      7541           jne 0x644a
0x00006409      4c89fe         mov rsi, r15
0x0000640c      4889ef         mov rdi, rbp
0x0000640f      e87cfdffff     call sym.safe_hasher
0x00006414      48833800       cmp qword [rax], 0
0x00006418      4889c3         mov rbx, rax
0x0000641b      7453           je 0x6470
0x0000641d      488b4548       mov rax, qword [rbp + 0x48]
0x00006421      4885c0         test rax, rax
0x00006424      745a           je 0x6480
0x00006426      488b5008       mov rdx, qword [rax + 8]
0x0000642a      48895548       mov qword [rbp + 0x48], rdx
0x0000642e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00006432      4c8938         mov qword [rax], r15
0x00006435      48895008       mov qword [rax + 8], rdx
0x00006439      48894308       mov qword [rbx + 8], rax
0x0000643d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00006445      49836d1801     sub qword [r13 + 0x18], 1
0x0000644a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000644e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00006452      0f8730ffffff   ja 0x6388
0x00006458      4883c408       add rsp, 8
0x0000645c      b801000000     mov eax, 1
0x00006461      5b             pop rbx
0x00006462      5d             pop rbp
0x00006463      415c           pop r12
0x00006465      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00006467      415e           pop r14
0x00006469      415f           pop r15
0x0000646b      c3             ret
0x0000646c      0f1f4000       nop dword [rax]
0x00006470      4c8938         mov qword [rax], r15
0x00006473      4883451801     add qword [rbp + 0x18], 1
0x00006478      ebc3           jmp 0x643d
0x0000647a      660f1f440000   nop word [rax + rax]
0x00006480      bf10000000     mov edi, 0x10
0x00006485      e836bfffff     call sym.imp.malloc
0x0000648a      4885c0         test rax, rax
0x0000648d      759f           jne 0x642e
0x0000648f      4883c408       add rsp, 8
0x00006493      31c0           xor eax, eax
0x00006495      5b             pop rbx
0x00006496      5d             pop rbp
0x00006497      415c           pop r12
0x00006499      415d           pop r13
0x0000649b      415e           pop r14
0x0000649d      415f           pop r15
0x0000649f      c3             ret
;-- hash_get_n_buckets:
0x000064a0      488b4710       mov rax, qword [rdi + 0x10]
0x000064a4      c3             ret
0x000064a5      90             nop
0x000064a6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x000064b0      488b4718       mov rax, qword [rdi + 0x18]
0x000064b4      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x000064b5      90             nop
0x000064b6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x000064c0      488b4720       mov rax, qword [rdi + 0x20]
0x000064c4      c3             ret
0x000064c5      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x000064c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000064d0      488b37         mov rsi, qword [rdi]
0x000064d3      488b7f08       mov rdi, qword [rdi + 8]
0x000064d7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000064d9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000064dc      7339           jae 0x6517
0x000064de      6690           nop
0x000064e0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x000064e4      7426           je 0x650c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x000064e6      488b5608       mov rdx, qword [rsi + 8]
0x000064ea      b901000000     mov ecx, 1
0x000064ef      4885d2         test rdx, rdx
0x000064f2      7411           je 0x6505
0x000064f4      0f1f4000       nop dword [rax]
0x000064f8      488b5208       mov rdx, qword [rdx + 8]
0x000064fc      4883c101       add rcx, 1
0x00006500      4885d2         test rdx, rdx
0x00006503      75f3           jne 0x64f8
0x00006505      4839c8         cmp rax, rcx
0x00006508      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000650c      4883c610       add rsi, 0x10
0x00006510      4839fe         cmp rsi, rdi
0x00006513      72cb           jb 0x64e0
0x00006515      f3c3           ret
0x00006517      f3c3           ret
0x00006519      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x00006520      488b0f         mov rcx, qword [rdi]
0x00006523      4c8b4708       mov r8, qword [rdi + 8]
0x00006527      31d2           xor edx, edx
0x00006529      31f6           xor esi, esi
0x0000652b      4c39c1         cmp rcx, r8
0x0000652e      7336           jae 0x6566
0x00006530      48833900       cmp qword [rcx], 0
0x00006534      7427           je 0x655d
0x00006536      488b4108       mov rax, qword [rcx + 8]
0x0000653a      4883c601       add rsi, 1
0x0000653e      4883c201       add rdx, 1
0x00006542      4885c0         test rax, rax
0x00006545      7416           je 0x655d
0x00006547      660f1f840000.  nop word [rax + rax]
0x00006550      488b4008       mov rax, qword [rax + 8]
0x00006554      4883c201       add rdx, 1
0x00006558      4885c0         test rax, rax
0x0000655b      75f3           jne 0x6550
0x0000655d      4883c110       add rcx, 0x10
0x00006561      4c39c1         cmp rcx, r8
0x00006564      72ca           jb 0x6530
0x00006566      31c0           xor eax, eax
0x00006568      48397718       cmp qword [rdi + 0x18], rsi
0x0000656c      7402           je 0x6570
0x0000656e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00006570      48395720       cmp qword [rdi + 0x20], rdx
0x00006574      0f94c0         sete al
0x00006577      c3             ret
0x00006578      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00006580      4155           push r13
0x00006582      4154           push r12
0x00006584      4989f4         mov r12, rsi
0x00006587      55             push rbp
0x00006588      53             push rbx
0x00006589      31db           xor ebx, ebx
0x0000658b      4883ec08       sub rsp, 8
0x0000658f      488b37         mov rsi, qword [rdi]
0x00006592      488b4f20       mov rcx, qword [rdi + 0x20]
0x00006596      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000659a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000659e      488b7f08       mov rdi, qword [rdi + 8]
0x000065a2      4839fe         cmp rsi, rdi
0x000065a5      733e           jae 0x65e5
0x000065a7      660f1f840000.  nop word [rax + rax]
0x000065b0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x000065b4      7426           je 0x65dc
0x000065b6      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x000065ba      ba01000000     mov edx, 1
0x000065bf      4885c0         test rax, rax
0x000065c2      7411           je 0x65d5
0x000065c4      0f1f4000       nop dword [rax]
0x000065c8      488b4008       mov rax, qword [rax + 8]
0x000065cc      4883c201       add rdx, 1
0x000065d0      4885c0         test rax, rax
0x000065d3      75f3           jne 0x65c8
0x000065d5      4839d3         cmp rbx, rdx
0x000065d8      480f42da       cmovb rbx, rdx
0x000065dc      4883c610       add rsi, 0x10
0x000065e0      4839fe         cmp rsi, rdi
0x000065e3      72cb           jb 0x65b0
0x000065e5      488d15a29900.  lea rdx, str.entries:__________lu       ; 0xff8e ; "# entries:         %lu\n"
0x000065ec      be01000000     mov esi, 1
0x000065f1      4c89e7         mov rdi, r12
0x000065f4      31c0           xor eax, eax
0x000065f6      e835bfffff     call sym.imp.__fprintf_chk
0x000065fb      488d15a49900.  lea rdx, str.buckets:__________lu       ; 0xffa6 ; "# buckets:         %lu\n"
0x00006602      31c0           xor eax, eax
0x00006604      4889e9         mov rcx, rbp
0x00006607      be01000000     mov esi, 1
0x0000660c      4c89e7         mov rdi, r12
0x0000660f      e81cbfffff     call sym.imp.__fprintf_chk
0x00006614      4d85ed         test r13, r13
0x00006617      7867           js 0x6680
0x00006619      660fefc0       pxor xmm0, xmm0
0x0000661d      4885ed         test rbp, rbp
0x00006620      f2490f2ac5     cvtsi2sd xmm0, r13
0x00006625      f20f59059398.  mulsd xmm0, qword [0x0000fec0]          ; ../coreutils-8.31/lib/hash.c:-174
0x0000662d      787a           js 0x66a9                               ; ../coreutils-8.31/lib/hash.c:-170
0x0000662f      660fefc9       pxor xmm1, xmm1
0x00006633      f2480f2acd     cvtsi2sd xmm1, rbp
0x00006638      f20f5ec1       divsd xmm0, xmm1
0x0000663c      488d15959900.  lea rdx, str.buckets_used:_____lu___.2f ; 0xffd8 ; "# buckets used:    %lu (%.2f%%)\n"
0x00006643      4c89e9         mov rcx, r13
0x00006646      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00006649      be01000000     mov esi, 1
0x0000664e      b801000000     mov eax, 1
0x00006653      e8d8beffff     call sym.imp.__fprintf_chk
0x00006658      4883c408       add rsp, 8
0x0000665c      4889d9         mov rcx, rbx
0x0000665f      4c89e7         mov rdi, r12
0x00006662      5b             pop rbx
0x00006663      5d             pop rbp
0x00006664      415c           pop r12
0x00006666      415d           pop r13
0x00006668      488d154f9900.  lea rdx, str.max_bucket_length:__lu     ; 0xffbe ; "max bucket length: %lu\n"
0x0000666f      be01000000     mov esi, 1
0x00006674      31c0           xor eax, eax
0x00006676      e9b5beffff     jmp sym.imp.__fprintf_chk
0x0000667b      0f1f440000     nop dword [rax + rax]
0x00006680      4c89e8         mov rax, r13
0x00006683      4c89ea         mov rdx, r13
0x00006686      660fefc0       pxor xmm0, xmm0
0x0000668a      48d1e8         shr rax, 1
0x0000668d      83e201         and edx, 1
0x00006690      4809d0         or rax, rdx
0x00006693      4885ed         test rbp, rbp
0x00006696      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000669b      f20f58c0       addsd xmm0, xmm0
0x0000669f      f20f59051998.  mulsd xmm0, qword [0x0000fec0]
0x000066a7      7986           jns 0x662f                              ; ../coreutils-8.31/lib/hash.c:-138
0x000066a9      4889e8         mov rax, rbp
0x000066ac      660fefc9       pxor xmm1, xmm1
0x000066b0      48d1e8         shr rax, 1
0x000066b3      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x000066b6      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x000066b9      f2480f2ac8     cvtsi2sd xmm1, rax
0x000066be      f20f58c9       addsd xmm1, xmm1
0x000066c2      e971ffffff     jmp 0x6638
0x000066c7      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000066d0      4154           push r12
0x000066d2      55             push rbp
0x000066d3      4989fc         mov r12, rdi
0x000066d6      53             push rbx
0x000066d7      4889f5         mov rbp, rsi
0x000066da      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000066df      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000066e2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000066e5      7426           je 0x670d                               ; ../coreutils-8.31/lib/hash.c:-120
0x000066e7      4889c3         mov rbx, rax
0x000066ea      eb07           jmp 0x66f3
0x000066ec      0f1f4000       nop dword [rax]
0x000066f0      488b33         mov rsi, qword [rbx]
0x000066f3      4839ee         cmp rsi, rbp
0x000066f6      7417           je 0x670f                               ; ../coreutils-8.31/lib/hash.c:-116
0x000066f8      4889ef         mov rdi, rbp
0x000066fb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00006700      84c0           test al, al
0x00006702      751c           jne 0x6720
0x00006704      488b5b08       mov rbx, qword [rbx + 8]
0x00006708      4885db         test rbx, rbx
0x0000670b      75e3           jne 0x66f0
0x0000670d      31f6           xor esi, esi
0x0000670f      5b             pop rbx
0x00006710      4889f0         mov rax, rsi
0x00006713      5d             pop rbp
0x00006714      415c           pop r12
0x00006716      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x00006717      660f1f840000.  nop word [rax + rax]
0x00006720      488b33         mov rsi, qword [rbx]
0x00006723      5b             pop rbx
0x00006724      5d             pop rbp
0x00006725      4889f0         mov rax, rsi
0x00006728      415c           pop r12
0x0000672a      c3             ret
0x0000672b      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00006730      48837f2000     cmp qword [rdi + 0x20], 0
0x00006735      742c           je 0x6763
0x00006737      488b17         mov rdx, qword [rdi]
0x0000673a      488b4f08       mov rcx, qword [rdi + 8]
0x0000673e      4839ca         cmp rdx, rcx
0x00006741      7325           jae 0x6768
0x00006743      488b02         mov rax, qword [rdx]
0x00006746      4885c0         test rax, rax
0x00006749      751b           jne 0x6766
0x0000674b      0f1f440000     nop dword [rax + rax]
0x00006750      4883c210       add rdx, 0x10
0x00006754      4839ca         cmp rdx, rcx
0x00006757      730f           jae 0x6768                              ; ../coreutils-8.31/lib/hash.c:-97
0x00006759      488b02         mov rax, qword [rdx]
0x0000675c      4885c0         test rax, rax
0x0000675f      74ef           je 0x6750
0x00006761      f3c3           ret
0x00006763      31c0           xor eax, eax
0x00006765      c3             ret
0x00006766      f3c3           ret
0x00006768      4883ec08       sub rsp, 8
0x0000676c      e82fb9ffff     call sym.imp.abort
0x00006771      0f1f440000     nop dword [rax + rax]
0x00006776      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00006780      55             push rbp
0x00006781      53             push rbx
0x00006782      4889fd         mov rbp, rdi
0x00006785      4889f3         mov rbx, rsi
0x00006788      4883ec08       sub rsp, 8
0x0000678c      e8fff9ffff     call sym.safe_hasher
0x00006791      4889c2         mov rdx, rax
0x00006794      4889c1         mov rcx, rax
0x00006797      488b02         mov rax, qword [rdx]
0x0000679a      488b5208       mov rdx, qword [rdx + 8]
0x0000679e      4839d8         cmp rax, rbx
0x000067a1      7416           je 0x67b9
0x000067a3      0f1f440000     nop dword [rax + rax]
0x000067a8      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x000067ab      7411           je 0x67be
0x000067ad      488b02         mov rax, qword [rdx]
0x000067b0      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x000067b4      4839d8         cmp rax, rbx
0x000067b7      75ef           jne 0x67a8
0x000067b9      4885d2         test rdx, rdx
0x000067bc      752a           jne 0x67e8
0x000067be      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x000067c2      eb0c           jmp 0x67d0
0x000067c4      0f1f4000       nop dword [rax]
0x000067c8      488b01         mov rax, qword [rcx]
0x000067cb      4885c0         test rax, rax
0x000067ce      750b           jne 0x67db
0x000067d0      4883c110       add rcx, 0x10
0x000067d4      4839ca         cmp rdx, rcx
0x000067d7      77ef           ja 0x67c8
0x000067d9      31c0           xor eax, eax
0x000067db      4883c408       add rsp, 8
0x000067df      5b             pop rbx
0x000067e0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000067e1      c3             ret
0x000067e2      660f1f440000   nop word [rax + rax]
0x000067e8      488b02         mov rax, qword [rdx]
0x000067eb      4883c408       add rsp, 8
0x000067ef      5b             pop rbx
0x000067f0      5d             pop rbp
0x000067f1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000067f2      0f1f4000       nop dword [rax]
0x000067f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00006800      4c8b0f         mov r9, qword [rdi]
0x00006803      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00006807      7659           jbe 0x6862
0x00006809      4531c0         xor r8d, r8d
0x0000680c      498b09         mov rcx, qword [r9]
0x0000680f      4885c9         test rcx, rcx
0x00006812      7439           je 0x684d                               ; ../coreutils-8.31/lib/hash.c:-47
0x00006814      4c39c2         cmp rdx, r8
0x00006817      763e           jbe 0x6857
0x00006819      4a890cc6       mov qword [rsi + r8*8], rcx
0x0000681d      498b4908       mov rcx, qword [r9 + 8]
0x00006821      498d4001       lea rax, [r8 + 1]
0x00006825      4885c9         test rcx, rcx
0x00006828      7420           je 0x684a
0x0000682a      660f1f440000   nop word [rax + rax]
0x00006830      4839c2         cmp rdx, rax
0x00006833      742b           je 0x6860                               ; ../coreutils-8.31/lib/hash.c:-3
0x00006835      4c8b01         mov r8, qword [rcx]
0x00006838      4883c001       add rax, 1
0x0000683c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00006841      488b4908       mov rcx, qword [rcx + 8]
0x00006845      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00006848      75e6           jne 0x6830
0x0000684a      4989c0         mov r8, rax
0x0000684d      4983c110       add r9, 0x10
0x00006851      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00006855      77b5           ja 0x680c
0x00006857      4c89c0         mov rax, r8
0x0000685a      c3             ret
0x0000685b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00006860      f3c3           ret
0x00006862      31c0           xor eax, eax
0x00006864      c3             ret
0x00006865      90             nop
0x00006866      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00006870      4157           push r15
0x00006872      4156           push r14
0x00006874      4155           push r13
0x00006876      4154           push r12
0x00006878      55             push rbp
0x00006879      53             push rbx
0x0000687a      4883ec08       sub rsp, 8
0x0000687e      4c8b37         mov r14, qword [rdi]
0x00006881      4c397708       cmp qword [rdi + 8], r14
0x00006885      764f           jbe 0x68d6
0x00006887      4989d5         mov r13, rdx
0x0000688a      4989f4         mov r12, rsi
0x0000688d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00006890      31ed           xor ebp, ebp
0x00006892      498b3e         mov rdi, qword [r14]
0x00006895      4885ff         test rdi, rdi
0x00006898      7420           je 0x68ba
0x0000689a      4c89f3         mov rbx, r14
0x0000689d      eb04           jmp 0x68a3
0x0000689f      90             nop
0x000068a0      488b3b         mov rdi, qword [rbx]
0x000068a3      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x000068a6      41ffd4         call r12
0x000068a9      84c0           test al, al
0x000068ab      7417           je 0x68c4
0x000068ad      488b5b08       mov rbx, qword [rbx + 8]
0x000068b1      4883c501       add rbp, 1
0x000068b5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x000068b8      75e6           jne 0x68a0
0x000068ba      4983c610       add r14, 0x10
0x000068be      4d397708       cmp qword [r15 + 8], r14
0x000068c2      77ce           ja 0x6892
0x000068c4      4883c408       add rsp, 8
0x000068c8      4889e8         mov rax, rbp
0x000068cb      5b             pop rbx
0x000068cc      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x000068cd      415c           pop r12
0x000068cf      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x000068d1      415e           pop r14
0x000068d3      415f           pop r15
0x000068d5      c3             ret
0x000068d6      31ed           xor ebp, ebp
0x000068d8      ebea           jmp 0x68c4                              ; ../coreutils-8.31/lib/hash.c:41
0x000068da      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x000068e0      0fb60f         movzx ecx, byte [rdi]
0x000068e3      31d2           xor edx, edx
0x000068e5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x000068e7      7424           je 0x690d
0x000068e9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x000068f0      4889d0         mov rax, rdx
0x000068f3      4883c701       add rdi, 1
0x000068f7      48c1e005       shl rax, 5
0x000068fb      4829d0         sub rax, rdx
0x000068fe      31d2           xor edx, edx
0x00006900      4801c8         add rax, rcx
0x00006903      0fb60f         movzx ecx, byte [rdi]
0x00006906      48f7f6         div rsi
0x00006909      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000690b      75e3           jne 0x68f0
0x0000690d      4889d0         mov rax, rdx
0x00006910      c3             ret
0x00006911      0f1f440000     nop dword [rax + rax]
0x00006916      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00006920      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x0000692a      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x0000692e      488907         mov qword [rdi], rax
0x00006931      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x0000693b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x0000693f      c3             ret
;-- hash_initialize:
0x00006940      4157           push r15
0x00006942      4156           push r14
0x00006944      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x6170 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x0000694b      4155           push r13
0x0000694d      4154           push r12
0x0000694f      4989d4         mov r12, rdx
0x00006952      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00006953      53             push rbx
0x00006954      4989cd         mov r13, rcx
0x00006957      4889fd         mov rbp, rdi
0x0000695a      bf50000000     mov edi, 0x50                           ; 'P'
0x0000695f      4989f7         mov r15, rsi
0x00006962      4883ec08       sub rsp, 8
0x00006966      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00006969      4d89c6         mov r14, r8
0x0000696c      4c0f44e0       cmove r12, rax
0x00006970      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x6180 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00006977      4885c9         test rcx, rcx
0x0000697a      4c0f44e8       cmove r13, rax
0x0000697e      e83dbaffff     call sym.imp.malloc
0x00006983      4885c0         test rax, rax
0x00006986      4889c3         mov rbx, rax
0x00006989      0f84ab000000   je 0x6a3a
0x0000698f      4d85ff         test r15, r15
0x00006992      488d7828       lea rdi, [rax + 0x28]
0x00006996      0f84b4000000   je 0x6a50
0x0000699c      4c897828       mov qword [rax + 0x28], r15
0x000069a0      e83bf9ffff     call sym.check_tuning.isra.0
0x000069a5      84c0           test al, al
0x000069a7      0f8483000000   je 0x6a30
0x000069ad      41807f1000     cmp byte [r15 + 0x10], 0
0x000069b2      0f84f8000000   je 0x6ab0
0x000069b8      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x000069bb      e810f7ffff     call sym.next_prime
0x000069c0      ba08000000     mov edx, 8
0x000069c5      4889c5         mov rbp, rax
0x000069c8      31c9           xor ecx, ecx
0x000069ca      4889d0         mov rax, rdx
0x000069cd      48f7e5         mul rbp
0x000069d0      0f8014010000   jo 0x6aea
0x000069d6      4885c0         test rax, rax
0x000069d9      7855           js 0x6a30
0x000069db      4885c9         test rcx, rcx
0x000069de      7550           jne 0x6a30
0x000069e0      4885ed         test rbp, rbp
0x000069e3      48896b10       mov qword [rbx + 0x10], rbp
0x000069e7      7447           je 0x6a30
0x000069e9      be10000000     mov esi, 0x10
0x000069ee      4889ef         mov rdi, rbp
0x000069f1      e82ab9ffff     call sym.imp.calloc
0x000069f6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x000069f9      488903         mov qword [rbx], rax
0x000069fc      7432           je 0x6a30
0x000069fe      48c1e504       shl rbp, 4
0x00006a02      48c743180000.  mov qword [rbx + 0x18], 0
0x00006a0a      48c743200000.  mov qword [rbx + 0x20], 0
0x00006a12      4801c5         add rbp, rax
0x00006a15      4c896330       mov qword [rbx + 0x30], r12
0x00006a19      4c896b38       mov qword [rbx + 0x38], r13
0x00006a1d      48896b08       mov qword [rbx + 8], rbp
0x00006a21      4c897340       mov qword [rbx + 0x40], r14
0x00006a25      48c743480000.  mov qword [rbx + 0x48], 0
0x00006a2d      eb0b           jmp 0x6a3a
0x00006a2f      90             nop
0x00006a30      4889df         mov rdi, rbx
0x00006a33      31db           xor ebx, ebx
0x00006a35      e836b6ffff     call sym.imp.free
0x00006a3a      4883c408       add rsp, 8
0x00006a3e      4889d8         mov rax, rbx
0x00006a41      5b             pop rbx
0x00006a42      5d             pop rbp
0x00006a43      415c           pop r12
0x00006a45      415d           pop r13
0x00006a47      415e           pop r14
0x00006a49      415f           pop r15
0x00006a4b      c3             ret
0x00006a4c      0f1f4000       nop dword [rax]
0x00006a50      488d05a99500.  lea rax, obj.default_tuning             ; 0x10000
0x00006a57      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x00006a5b      e880f8ffff     call sym.check_tuning.isra.0
0x00006a60      84c0           test al, al
0x00006a62      f30f100dbe95.  movss xmm1, dword [0x00010028]          ; [0x10028:4]=0x3f4ccccd
0x00006a6a      74c4           je 0x6a30
0x00006a6c      4885ed         test rbp, rbp
0x00006a6f      784a           js 0x6abb
0x00006a71      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00006a75      f3480f2ac5     cvtsi2ss xmm0, rbp
0x00006a7a      f30f5ec1       divss xmm0, xmm1
0x00006a7e      0f2e05a79500.  ucomiss xmm0, dword [0x0001002c]
0x00006a85      73a9           jae 0x6a30
0x00006a87      0f2e05a29500.  ucomiss xmm0, dword [0x00010030]
0x00006a8e      7250           jb 0x6ae0
0x00006a90      f30f5c059895.  subss xmm0, dword [0x00010030]
0x00006a98      48b800000000.  movabs rax, 0x8000000000000000
0x00006aa2      f3480f2ce8     cvttss2si rbp, xmm0
0x00006aa7      4831c5         xor rbp, rax
0x00006aaa      e909ffffff     jmp 0x69b8
0x00006aaf      90             nop
0x00006ab0      4885ed         test rbp, rbp
0x00006ab3      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00006ab9      79b6           jns 0x6a71                              ; ../coreutils-8.31/lib/hash.c:-146
0x00006abb      4889e8         mov rax, rbp
0x00006abe      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00006ac2      48d1e8         shr rax, 1
0x00006ac5      83e501         and ebp, 1
0x00006ac8      4809e8         or rax, rbp
0x00006acb      f3480f2ac0     cvtsi2ss xmm0, rax
0x00006ad0      f30f58c0       addss xmm0, xmm0
0x00006ad4      eba4           jmp 0x6a7a
0x00006ad6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ae0      f3480f2ce8     cvttss2si rbp, xmm0
0x00006ae5      e9cefeffff     jmp 0x69b8
0x00006aea      b901000000     mov ecx, 1
0x00006aef      e9e2feffff     jmp 0x69d6
0x00006af4      6690           nop
0x00006af6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00006b00      4154           push r12
0x00006b02      55             push rbp
0x00006b03      4889fd         mov rbp, rdi
0x00006b06      53             push rbx
0x00006b07      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x00006b0a      4c3b6708       cmp r12, qword [rdi + 8]
0x00006b0e      736b           jae 0x6b7b
0x00006b10      49833c2400     cmp qword [r12], 0
0x00006b15      745a           je 0x6b71
0x00006b17      498b5c2408     mov rbx, qword [r12 + 8]
0x00006b1c      488b4540       mov rax, qword [rbp + 0x40]
0x00006b20      4885db         test rbx, rbx
0x00006b23      7430           je 0x6b55
0x00006b25      0f1f00         nop dword [rax]
0x00006b28      4885c0         test rax, rax
0x00006b2b      7409           je 0x6b36
0x00006b2d      488b3b         mov rdi, qword [rbx]
0x00006b30      ffd0           call rax
0x00006b32      488b4540       mov rax, qword [rbp + 0x40]
0x00006b36      488b5308       mov rdx, qword [rbx + 8]
0x00006b3a      488b4d48       mov rcx, qword [rbp + 0x48]
0x00006b3e      48c703000000.  mov qword [rbx], 0
0x00006b45      4885d2         test rdx, rdx
0x00006b48      48894b08       mov qword [rbx + 8], rcx
0x00006b4c      48895d48       mov qword [rbp + 0x48], rbx
0x00006b50      4889d3         mov rbx, rdx
0x00006b53      75d3           jne 0x6b28
0x00006b55      4885c0         test rax, rax
0x00006b58      7406           je 0x6b60
0x00006b5a      498b3c24       mov rdi, qword [r12]
0x00006b5e      ffd0           call rax
0x00006b60      49c704240000.  mov qword [r12], 0
0x00006b68      49c744240800.  mov qword [r12 + 8], 0
0x00006b71      4983c410       add r12, 0x10
0x00006b75      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00006b79      7795           ja 0x6b10
0x00006b7b      48c745180000.  mov qword [rbp + 0x18], 0
0x00006b83      48c745200000.  mov qword [rbp + 0x20], 0
0x00006b8b      5b             pop rbx
0x00006b8c      5d             pop rbp
0x00006b8d      415c           pop r12
0x00006b8f      c3             ret
;-- hash_free:
0x00006b90      4154           push r12
0x00006b92      55             push rbp
0x00006b93      4989fc         mov r12, rdi
0x00006b96      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00006b97      48837f4000     cmp qword [rdi + 0x40], 0
0x00006b9c      488b2f         mov rbp, qword [rdi]
0x00006b9f      488b4708       mov rax, qword [rdi + 8]
0x00006ba3      744e           je 0x6bf3                               ; ../coreutils-8.31/lib/hash.c:-305
0x00006ba5      48837f2000     cmp qword [rdi + 0x20], 0
0x00006baa      7447           je 0x6bf3
0x00006bac      4839c5         cmp rbp, rax
0x00006baf      737b           jae 0x6c2c
0x00006bb1      0f1f80000000.  nop dword [rax]
0x00006bb8      488b7d00       mov rdi, qword [rbp]
0x00006bbc      4885ff         test rdi, rdi
0x00006bbf      7425           je 0x6be6
0x00006bc1      4889eb         mov rbx, rbp
0x00006bc4      eb0d           jmp 0x6bd3
0x00006bc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006bd0      488b3b         mov rdi, qword [rbx]
0x00006bd3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00006bd8      488b5b08       mov rbx, qword [rbx + 8]
0x00006bdc      4885db         test rbx, rbx
0x00006bdf      75ef           jne 0x6bd0
0x00006be1      498b442408     mov rax, qword [r12 + 8]
0x00006be6      4883c510       add rbp, 0x10
0x00006bea      4839e8         cmp rax, rbp
0x00006bed      77c9           ja 0x6bb8
0x00006bef      498b2c24       mov rbp, qword [r12]
0x00006bf3      4839c5         cmp rbp, rax
0x00006bf6      7334           jae 0x6c2c
0x00006bf8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00006c00      488b7d08       mov rdi, qword [rbp + 8]
0x00006c04      4885ff         test rdi, rdi
0x00006c07      7418           je 0x6c21
0x00006c09      0f1f80000000.  nop dword [rax]
0x00006c10      488b5f08       mov rbx, qword [rdi + 8]
0x00006c14      e857b4ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/hash.c:98
0x00006c19      4885db         test rbx, rbx
0x00006c1c      4889df         mov rdi, rbx
0x00006c1f      75ef           jne 0x6c10
0x00006c21      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00006c25      49396c2408     cmp qword [r12 + 8], rbp
0x00006c2a      77d4           ja 0x6c00
0x00006c2c      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00006c31      4885ff         test rdi, rdi
0x00006c34      741b           je 0x6c51
0x00006c36      662e0f1f8400.  nop word cs:[rax + rax]
0x00006c40      488b5f08       mov rbx, qword [rdi + 8]
0x00006c44      e827b4ffff     call sym.imp.free
0x00006c49      4885db         test rbx, rbx
0x00006c4c      4889df         mov rdi, rbx
0x00006c4f      75ef           jne 0x6c40
0x00006c51      498b3c24       mov rdi, qword [r12]
0x00006c55      e816b4ffff     call sym.imp.free
0x00006c5a      5b             pop rbx
0x00006c5b      4c89e7         mov rdi, r12
0x00006c5e      5d             pop rbp
0x00006c5f      415c           pop r12
0x00006c61      e90ab4ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash.c:107
0x00006c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00006c70      4154           push r12
0x00006c72      55             push rbp
0x00006c73      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00006c76      53             push rbx
0x00006c77      4883ec60       sub rsp, 0x60
0x00006c7b      4c8b6728       mov r12, qword [rdi + 0x28]
0x00006c7f      64488b042528.  mov rax, qword fs:[0x28]
0x00006c88      4889442458     mov qword [rsp + 0x58], rax
0x00006c8d      31c0           xor eax, eax
0x00006c8f      41807c241000   cmp byte [r12 + 0x10], 0
0x00006c95      7551           jne 0x6ce8
0x00006c97      4885f6         test rsi, rsi
0x00006c9a      0f8878010000   js 0x6e18
0x00006ca0      660fefc0       pxor xmm0, xmm0
0x00006ca4      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00006ca9      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00006cb0      0f2e05759300.  ucomiss xmm0, dword [0x0001002c]
0x00006cb7      0f8333010000   jae 0x6df0
0x00006cbd      0f2e056c9300.  ucomiss xmm0, dword [0x00010030]
0x00006cc4      0f8276010000   jb 0x6e40
0x00006cca      f30f5c055e93.  subss xmm0, dword [0x00010030]          ; ../coreutils-8.31/lib/hash.c:161
0x00006cd2      48b800000000.  movabs rax, 0x8000000000000000
0x00006cdc      f3480f2cf0     cvttss2si rsi, xmm0
0x00006ce1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00006ce4      0f1f4000       nop dword [rax]
0x00006ce8      4889f7         mov rdi, rsi
0x00006ceb      e8e0f3ffff     call sym.next_prime
0x00006cf0      ba08000000     mov edx, 8
0x00006cf5      4889c3         mov rbx, rax
0x00006cf8      31c9           xor ecx, ecx
0x00006cfa      4889d0         mov rax, rdx
0x00006cfd      48f7e3         mul rbx
0x00006d00      0f8099010000   jo 0x6e9f
0x00006d06      4885c0         test rax, rax
0x00006d09      b801000000     mov eax, 1
0x00006d0e      480f48c8       cmovs rcx, rax
0x00006d12      4885db         test rbx, rbx
0x00006d15      0f84d5000000   je 0x6df0
0x00006d1b      83e101         and ecx, 1
0x00006d1e      0f85cc000000   jne 0x6df0
0x00006d24      48395d10       cmp qword [rbp + 0x10], rbx
0x00006d28      0f8422010000   je 0x6e50
0x00006d2e      be10000000     mov esi, 0x10
0x00006d33      4889df         mov rdi, rbx
0x00006d36      e8e5b5ffff     call sym.imp.calloc
0x00006d3b      4885c0         test rax, rax
0x00006d3e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00006d42      0f84a8000000   je 0x6df0
0x00006d48      48895c2410     mov qword [rsp + 0x10], rbx
0x00006d4d      48c1e304       shl rbx, 4
0x00006d51      4c89642428     mov qword [rsp + 0x28], r12
0x00006d56      4801c3         add rbx, rax
0x00006d59      488b4530       mov rax, qword [rbp + 0x30]
0x00006d5d      4989e4         mov r12, rsp
0x00006d60      31d2           xor edx, edx
0x00006d62      4889ee         mov rsi, rbp
0x00006d65      4c89e7         mov rdi, r12
0x00006d68      48895c2408     mov qword [rsp + 8], rbx
0x00006d6d      48c744241800.  mov qword [rsp + 0x18], 0
0x00006d76      4889442430     mov qword [rsp + 0x30], rax
0x00006d7b      488b4538       mov rax, qword [rbp + 0x38]
0x00006d7f      48c744242000.  mov qword [rsp + 0x20], 0
0x00006d88      4889442438     mov qword [rsp + 0x38], rax
0x00006d8d      488b4540       mov rax, qword [rbp + 0x40]
0x00006d91      4889442440     mov qword [rsp + 0x40], rax
0x00006d96      488b4548       mov rax, qword [rbp + 0x48]
0x00006d9a      4889442448     mov qword [rsp + 0x48], rax
0x00006d9f      e8bcf5ffff     call sym.transfer_entries
0x00006da4      84c0           test al, al
0x00006da6      89c3           mov ebx, eax
0x00006da8      0f85b2000000   jne 0x6e60
0x00006dae      488b442448     mov rax, qword [rsp + 0x48]
0x00006db3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00006db8      4c89e6         mov rsi, r12
0x00006dbb      4889ef         mov rdi, rbp
0x00006dbe      48894548       mov qword [rbp + 0x48], rax
0x00006dc2      e899f5ffff     call sym.transfer_entries
0x00006dc7      84c0           test al, al
0x00006dc9      0f84da000000   je 0x6ea9
0x00006dcf      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x00006dd1      4c89e6         mov rsi, r12
0x00006dd4      4889ef         mov rdi, rbp
0x00006dd7      e884f5ffff     call sym.transfer_entries
0x00006ddc      84c0           test al, al
0x00006dde      0f84c5000000   je 0x6ea9
0x00006de4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00006de8      e883b2ffff     call sym.imp.free
0x00006ded      eb03           jmp 0x6df2
0x00006def      90             nop
0x00006df0      31db           xor ebx, ebx
0x00006df2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00006df7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006e00      89d8           mov eax, ebx
0x00006e02      0f8592000000   jne 0x6e9a
0x00006e08      4883c460       add rsp, 0x60
0x00006e0c      5b             pop rbx
0x00006e0d      5d             pop rbp
0x00006e0e      415c           pop r12
0x00006e10      c3             ret
0x00006e11      0f1f80000000.  nop dword [rax]
0x00006e18      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00006e1b      660fefc0       pxor xmm0, xmm0
0x00006e1f      48d1e8         shr rax, 1
0x00006e22      83e601         and esi, 1
0x00006e25      4809f0         or rax, rsi
0x00006e28      f3480f2ac0     cvtsi2ss xmm0, rax
0x00006e2d      f30f58c0       addss xmm0, xmm0
0x00006e31      e973feffff     jmp 0x6ca9
0x00006e36      662e0f1f8400.  nop word cs:[rax + rax]
0x00006e40      f3480f2cf0     cvttss2si rsi, xmm0
0x00006e45      e99efeffff     jmp 0x6ce8
0x00006e4a      660f1f440000   nop word [rax + rax]
0x00006e50      bb01000000     mov ebx, 1
0x00006e55      eb9b           jmp 0x6df2
0x00006e57      660f1f840000.  nop word [rax + rax]
0x00006e60      488b7d00       mov rdi, qword [rbp]
0x00006e64      e807b2ffff     call sym.imp.free
0x00006e69      488b0424       mov rax, qword [rsp]
0x00006e6d      48894500       mov qword [rbp], rax
0x00006e71      488b442408     mov rax, qword [rsp + 8]
0x00006e76      48894508       mov qword [rbp + 8], rax
0x00006e7a      488b442410     mov rax, qword [rsp + 0x10]
0x00006e7f      48894510       mov qword [rbp + 0x10], rax
0x00006e83      488b442418     mov rax, qword [rsp + 0x18]
0x00006e88      48894518       mov qword [rbp + 0x18], rax
0x00006e8c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00006e91      48894548       mov qword [rbp + 0x48], rax
0x00006e95      e958ffffff     jmp 0x6df2
0x00006e9a      e851b3ffff     call sym.imp.__stack_chk_fail
0x00006e9f      b901000000     mov ecx, 1
0x00006ea4      e95dfeffff     jmp 0x6d06
0x00006ea9      e8f2b1ffff     call sym.imp.abort
0x00006eae      6690           nop
;-- hash_insert_if_absent:
0x00006eb0      4155           push r13
0x00006eb2      4154           push r12
0x00006eb4      55             push rbp
0x00006eb5      53             push rbx
0x00006eb6      4883ec18       sub rsp, 0x18
0x00006eba      64488b042528.  mov rax, qword fs:[0x28]
0x00006ec3      4889442408     mov qword [rsp + 8], rax
0x00006ec8      31c0           xor eax, eax
0x00006eca      4885f6         test rsi, rsi
0x00006ecd      0f84ba010000   je 0x708d
0x00006ed3      4989e4         mov r12, rsp
0x00006ed6      31c9           xor ecx, ecx
0x00006ed8      4989d5         mov r13, rdx
0x00006edb      4c89e2         mov rdx, r12
0x00006ede      4889fb         mov rbx, rdi
0x00006ee1      4889f5         mov rbp, rsi
0x00006ee4      e8d7f2ffff     call sym.hash_find_entry
0x00006ee9      4885c0         test rax, rax
0x00006eec      4889c2         mov rdx, rax
0x00006eef      742f           je 0x6f20
0x00006ef1      31c0           xor eax, eax
0x00006ef3      4d85ed         test r13, r13
0x00006ef6      7404           je 0x6efc
0x00006ef8      49895500       mov qword [r13], rdx
0x00006efc      488b4c2408     mov rcx, qword [rsp + 8]
0x00006f01      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006f0a      0f851f020000   jne 0x712f
0x00006f10      4883c418       add rsp, 0x18
0x00006f14      5b             pop rbx
0x00006f15      5d             pop rbp
0x00006f16      415c           pop r12
0x00006f18      415d           pop r13
0x00006f1a      c3             ret
0x00006f1b      0f1f440000     nop dword [rax + rax]
0x00006f20      488b4318       mov rax, qword [rbx + 0x18]
0x00006f24      4885c0         test rax, rax
0x00006f27      7877           js 0x6fa0
0x00006f29      660fefc9       pxor xmm1, xmm1
0x00006f2d      488b5328       mov rdx, qword [rbx + 0x28]
0x00006f31      f3480f2ac8     cvtsi2ss xmm1, rax
0x00006f36      488b4310       mov rax, qword [rbx + 0x10]
0x00006f3a      4885c0         test rax, rax
0x00006f3d      0f8887000000   js 0x6fca
0x00006f43      660fefc0       pxor xmm0, xmm0
0x00006f47      f3480f2ac0     cvtsi2ss xmm0, rax
0x00006f4c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00006f51      0f2ec8         ucomiss xmm1, xmm0
0x00006f54      0f8796000000   ja 0x6ff0
0x00006f5a      4c8b2424       mov r12, qword [rsp]
0x00006f5e      49833c2400     cmp qword [r12], 0
0x00006f63      0f842f010000   je 0x7098
0x00006f69      488b4348       mov rax, qword [rbx + 0x48]
0x00006f6d      4885c0         test rax, rax
0x00006f70      0f843a010000   je 0x70b0
0x00006f76      488b5008       mov rdx, qword [rax + 8]
0x00006f7a      48895348       mov qword [rbx + 0x48], rdx
0x00006f7e      498b542408     mov rdx, qword [r12 + 8]
0x00006f83      488928         mov qword [rax], rbp
0x00006f86      48895008       mov qword [rax + 8], rdx
0x00006f8a      4989442408     mov qword [r12 + 8], rax
0x00006f8f      b801000000     mov eax, 1
0x00006f94      4883432001     add qword [rbx + 0x20], 1
0x00006f99      e95effffff     jmp 0x6efc
0x00006f9e      6690           nop
0x00006fa0      4889c2         mov rdx, rax
0x00006fa3      660fefc9       pxor xmm1, xmm1
0x00006fa7      83e001         and eax, 1
0x00006faa      48d1ea         shr rdx, 1
0x00006fad      4809c2         or rdx, rax
0x00006fb0      488b4310       mov rax, qword [rbx + 0x10]
0x00006fb4      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00006fb9      488b5328       mov rdx, qword [rbx + 0x28]
0x00006fbd      4885c0         test rax, rax
0x00006fc0      f30f58c9       addss xmm1, xmm1
0x00006fc4      0f8979ffffff   jns 0x6f43
0x00006fca      4889c1         mov rcx, rax
0x00006fcd      660fefc0       pxor xmm0, xmm0
0x00006fd1      48d1e9         shr rcx, 1
0x00006fd4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00006fd7      4809c1         or rcx, rax
0x00006fda      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00006fdf      f30f58c0       addss xmm0, xmm0
0x00006fe3      e964ffffff     jmp 0x6f4c
0x00006fe8      0f1f84000000.  nop dword [rax + rax]
0x00006ff0      488d7b28       lea rdi, [rbx + 0x28]
0x00006ff4      e8e7f2ffff     call sym.check_tuning.isra.0
0x00006ff9      488b4310       mov rax, qword [rbx + 0x10]
0x00006ffd      488b5328       mov rdx, qword [rbx + 0x28]
0x00007001      4885c0         test rax, rax
0x00007004      f30f105208     movss xmm2, dword [rdx + 8]
0x00007009      0f88c1000000   js 0x70d0
0x0000700f      660fefc0       pxor xmm0, xmm0
0x00007013      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007018      488b4318       mov rax, qword [rbx + 0x18]
0x0000701c      4885c0         test rax, rax
0x0000701f      0f88cb000000   js 0x70f0
0x00007025      660fefc9       pxor xmm1, xmm1
0x00007029      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000702e      0f28da         movaps xmm3, xmm2
0x00007031      f30f59d8       mulss xmm3, xmm0
0x00007035      0f2ecb         ucomiss xmm1, xmm3
0x00007038      0f861cffffff   jbe 0x6f5a
0x0000703e      807a1000       cmp byte [rdx + 0x10], 0
0x00007042      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00007047      7504           jne 0x704d
0x00007049      f30f59c2       mulss xmm0, xmm2
0x0000704d      0f2e05d88f00.  ucomiss xmm0, dword [0x0001002c]
0x00007054      736d           jae 0x70c3
0x00007056      0f2e05d38f00.  ucomiss xmm0, dword [0x00010030]
0x0000705d      0f83ad000000   jae 0x7110
0x00007063      f3480f2cf0     cvttss2si rsi, xmm0
0x00007068      4889df         mov rdi, rbx
0x0000706b      e800fcffff     call sym.hash_rehash
0x00007070      84c0           test al, al
0x00007072      744f           je 0x70c3
0x00007074      31c9           xor ecx, ecx
0x00007076      4c89e2         mov rdx, r12
0x00007079      4889ee         mov rsi, rbp
0x0000707c      4889df         mov rdi, rbx
0x0000707f      e83cf1ffff     call sym.hash_find_entry
0x00007084      4885c0         test rax, rax
0x00007087      0f84cdfeffff   je 0x6f5a
0x0000708d      e80eb0ffff     call sym.imp.abort
0x00007092      660f1f440000   nop word [rax + rax]
0x00007098      49892c24       mov qword [r12], rbp
0x0000709c      b801000000     mov eax, 1
0x000070a1      4883432001     add qword [rbx + 0x20], 1
0x000070a6      4883431801     add qword [rbx + 0x18], 1
0x000070ab      e94cfeffff     jmp 0x6efc
0x000070b0      bf10000000     mov edi, 0x10
0x000070b5      e806b3ffff     call sym.imp.malloc
0x000070ba      4885c0         test rax, rax
0x000070bd      0f85bbfeffff   jne 0x6f7e
0x000070c3      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000070c8      e92ffeffff     jmp 0x6efc
0x000070cd      0f1f00         nop dword [rax]
0x000070d0      4889c1         mov rcx, rax
0x000070d3      660fefc0       pxor xmm0, xmm0
0x000070d7      48d1e9         shr rcx, 1
0x000070da      83e001         and eax, 1
0x000070dd      4809c1         or rcx, rax
0x000070e0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000070e5      f30f58c0       addss xmm0, xmm0
0x000070e9      e92affffff     jmp 0x7018
0x000070ee      6690           nop
0x000070f0      4889c1         mov rcx, rax
0x000070f3      660fefc9       pxor xmm1, xmm1
0x000070f7      48d1e9         shr rcx, 1
0x000070fa      83e001         and eax, 1
0x000070fd      4809c1         or rcx, rax
0x00007100      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007105      f30f58c9       addss xmm1, xmm1
0x00007109      e920ffffff     jmp 0x702e
0x0000710e      6690           nop
0x00007110      f30f5c05188f.  subss xmm0, dword [0x00010030]
0x00007118      48b800000000.  movabs rax, 0x8000000000000000
0x00007122      f3480f2cf0     cvttss2si rsi, xmm0
0x00007127      4831c6         xor rsi, rax
0x0000712a      e939ffffff     jmp 0x7068
0x0000712f      e8bcb0ffff     call sym.imp.__stack_chk_fail
0x00007134      6690           nop
0x00007136      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00007140      53             push rbx
0x00007141      4889f3         mov rbx, rsi
0x00007144      4883ec10       sub rsp, 0x10
0x00007148      4889e2         mov rdx, rsp
0x0000714b      64488b042528.  mov rax, qword fs:[0x28]
0x00007154      4889442408     mov qword [rsp + 8], rax
0x00007159      31c0           xor eax, eax
0x0000715b      e850fdffff     call sym.hash_insert_if_absent
0x00007160      83f8ff         cmp eax, 0xffffffff
0x00007163      742b           je 0x7190
0x00007165      85c0           test eax, eax
0x00007167      7504           jne 0x716d
0x00007169      488b1c24       mov rbx, qword [rsp]
0x0000716d      488b4c2408     mov rcx, qword [rsp + 8]
0x00007172      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000717b      4889d8         mov rax, rbx
0x0000717e      7514           jne 0x7194
0x00007180      4883c410       add rsp, 0x10
0x00007184      5b             pop rbx
0x00007185      c3             ret
0x00007186      662e0f1f8400.  nop word cs:[rax + rax]
0x00007190      31db           xor ebx, ebx
0x00007192      ebd9           jmp 0x716d
0x00007194      e857b0ffff     call sym.imp.__stack_chk_fail
0x00007199      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x000071a0      4154           push r12
0x000071a2      55             push rbp
0x000071a3      b901000000     mov ecx, 1
0x000071a8      53             push rbx
0x000071a9      4889fb         mov rbx, rdi
0x000071ac      4883ec10       sub rsp, 0x10
0x000071b0      4889e2         mov rdx, rsp
0x000071b3      64488b042528.  mov rax, qword fs:[0x28]
0x000071bc      4889442408     mov qword [rsp + 8], rax
0x000071c1      31c0           xor eax, eax
0x000071c3      e8f8efffff     call sym.hash_find_entry
0x000071c8      4885c0         test rax, rax
0x000071cb      4889c5         mov rbp, rax
0x000071ce      740f           je 0x71df
0x000071d0      488b0424       mov rax, qword [rsp]
0x000071d4      48836b2001     sub qword [rbx + 0x20], 1
0x000071d9      48833800       cmp qword [rax], 0
0x000071dd      7421           je 0x7200
0x000071df      488b4c2408     mov rcx, qword [rsp + 8]
0x000071e4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000071ed      4889e8         mov rax, rbp
0x000071f0      0f85a8010000   jne 0x739e
0x000071f6      4883c410       add rsp, 0x10
0x000071fa      5b             pop rbx
0x000071fb      5d             pop rbp
0x000071fc      415c           pop r12
0x000071fe      c3             ret
0x000071ff      90             nop
0x00007200      488b4318       mov rax, qword [rbx + 0x18]
0x00007204      4883e801       sub rax, 1
0x00007208      4885c0         test rax, rax
0x0000720b      48894318       mov qword [rbx + 0x18], rax
0x0000720f      0f88fb000000   js 0x7310
0x00007215      660fefc0       pxor xmm0, xmm0
0x00007219      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000721e      488b4310       mov rax, qword [rbx + 0x10]
0x00007222      488b5328       mov rdx, qword [rbx + 0x28]
0x00007226      4885c0         test rax, rax
0x00007229      0f88c1000000   js 0x72f0
0x0000722f      660fefc9       pxor xmm1, xmm1
0x00007233      f3480f2ac8     cvtsi2ss xmm1, rax
0x00007238      f30f590a       mulss xmm1, dword [rdx]
0x0000723c      0f2ec8         ucomiss xmm1, xmm0
0x0000723f      769e           jbe 0x71df
0x00007241      488d7b28       lea rdi, [rbx + 0x28]
0x00007245      e896f0ffff     call sym.check_tuning.isra.0
0x0000724a      488b4310       mov rax, qword [rbx + 0x10]
0x0000724e      488b5328       mov rdx, qword [rbx + 0x28]
0x00007252      4885c0         test rax, rax
0x00007255      0f8825010000   js 0x7380
0x0000725b      660fefc0       pxor xmm0, xmm0
0x0000725f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00007264      488b4318       mov rax, qword [rbx + 0x18]
0x00007268      4885c0         test rax, rax
0x0000726b      0f88ef000000   js 0x7360
0x00007271      660fefc9       pxor xmm1, xmm1
0x00007275      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000727a      f30f1012       movss xmm2, dword [rdx]
0x0000727e      f30f59d0       mulss xmm2, xmm0
0x00007282      0f2ed1         ucomiss xmm2, xmm1
0x00007285      0f8654ffffff   jbe 0x71df
0x0000728b      807a1000       cmp byte [rdx + 0x10], 0
0x0000728f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00007294      0f84b6000000   je 0x7350
0x0000729a      0f2e058f8d00.  ucomiss xmm0, dword [0x00010030]
0x000072a1      0f8389000000   jae 0x7330
0x000072a7      f3480f2cf0     cvttss2si rsi, xmm0
0x000072ac      4889df         mov rdi, rbx
0x000072af      e8bcf9ffff     call sym.hash_rehash
0x000072b4      84c0           test al, al
0x000072b6      0f8523ffffff   jne 0x71df
0x000072bc      488b7b48       mov rdi, qword [rbx + 0x48]
0x000072c0      4885ff         test rdi, rdi
0x000072c3      7414           je 0x72d9
0x000072c5      0f1f00         nop dword [rax]
0x000072c8      4c8b6708       mov r12, qword [rdi + 8]
0x000072cc      e89fadffff     call sym.imp.free
0x000072d1      4d85e4         test r12, r12
0x000072d4      4c89e7         mov rdi, r12
0x000072d7      75ef           jne 0x72c8
0x000072d9      48c743480000.  mov qword [rbx + 0x48], 0
0x000072e1      e9f9feffff     jmp 0x71df
0x000072e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000072f0      4889c1         mov rcx, rax
0x000072f3      660fefc9       pxor xmm1, xmm1
0x000072f7      48d1e9         shr rcx, 1
0x000072fa      83e001         and eax, 1
0x000072fd      4809c1         or rcx, rax
0x00007300      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007305      f30f58c9       addss xmm1, xmm1
0x00007309      e92affffff     jmp 0x7238
0x0000730e      6690           nop
0x00007310      4889c2         mov rdx, rax
0x00007313      660fefc0       pxor xmm0, xmm0
0x00007317      48d1ea         shr rdx, 1
0x0000731a      83e001         and eax, 1
0x0000731d      4809c2         or rdx, rax
0x00007320      f3480f2ac2     cvtsi2ss xmm0, rdx
0x00007325      f30f58c0       addss xmm0, xmm0
0x00007329      e9f0feffff     jmp 0x721e
0x0000732e      6690           nop
0x00007330      f30f5c05f88c.  subss xmm0, dword [0x00010030]
0x00007338      48b800000000.  movabs rax, 0x8000000000000000
0x00007342      f3480f2cf0     cvttss2si rsi, xmm0
0x00007347      4831c6         xor rsi, rax
0x0000734a      e95dffffff     jmp 0x72ac
0x0000734f      90             nop
0x00007350      f30f594208     mulss xmm0, dword [rdx + 8]
0x00007355      e940ffffff     jmp 0x729a
0x0000735a      660f1f440000   nop word [rax + rax]
0x00007360      4889c1         mov rcx, rax
0x00007363      660fefc9       pxor xmm1, xmm1
0x00007367      48d1e9         shr rcx, 1
0x0000736a      83e001         and eax, 1
0x0000736d      4809c1         or rcx, rax
0x00007370      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00007375      f30f58c9       addss xmm1, xmm1
0x00007379      e9fcfeffff     jmp 0x727a
0x0000737e      6690           nop
0x00007380      4889c1         mov rcx, rax
0x00007383      660fefc0       pxor xmm0, xmm0
0x00007387      48d1e9         shr rcx, 1
0x0000738a      83e001         and eax, 1
0x0000738d      4809c1         or rcx, rax
0x00007390      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00007395      f30f58c0       addss xmm0, xmm0
0x00007399      e9c6feffff     jmp 0x7264
0x0000739e      e84daeffff     call sym.imp.__stack_chk_fail
0x000073a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000073ad      0f1f00         nop dword [rax]
;-- triple_hash:
0x000073b0      55             push rbp                                ; ../coreutils-8.31/lib/hash-triple.c:35
0x000073b1      53             push rbx
0x000073b2      4889fd         mov rbp, rdi
0x000073b5      4889f3         mov rbx, rsi
0x000073b8      4883ec08       sub rsp, 8
0x000073bc      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:37
0x000073bf      e8fc560000     call sym.hash_pjw
0x000073c4      48334508       xor rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash-triple.c:40
0x000073c8      31d2           xor edx, edx
0x000073ca      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:41
0x000073ce      48f7f3         div rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:40
0x000073d1      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:41
0x000073d2      5d             pop rbp
0x000073d3      4889d0         mov rax, rdx
0x000073d6      c3             ret
0x000073d7      660f1f840000.  nop word [rax + rax]
;-- triple_hash_no_name:
0x000073e0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:46
0x000073e4      31d2           xor edx, edx
0x000073e6      48f7f6         div rsi
0x000073e9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-triple.c:51
0x000073ec      c3             ret
0x000073ed      0f1f00         nop dword [rax]
;-- triple_compare:
0x000073f0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:56
0x000073f2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:59
0x000073f6      48395708       cmp qword [rdi + 8], rdx
0x000073fa      7404           je 0x7400
0x000073fc      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:60
0x000073fe      6690           nop
0x00007400      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:59
0x00007404      48394f10       cmp qword [rdi + 0x10], rcx
0x00007408      75f2           jne 0x73fc
0x0000740a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:56
0x0000740e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:59
0x00007411      488b3f         mov rdi, qword [rdi]
0x00007414      e8e7320000     call sym.same_name
0x00007419      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:60
0x0000741d      c3             ret
0x0000741e      6690           nop
;-- triple_compare_ino_str:
0x00007420      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-triple.c:64
0x00007422      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/hash-triple.c:67
0x00007426      48395708       cmp qword [rdi + 8], rdx
0x0000742a      7404           je 0x7430
0x0000742c      f3c3           ret                                     ; ../coreutils-8.31/lib/hash-triple.c:68
0x0000742e      6690           nop
0x00007430      488b4e10       mov rcx, qword [rsi + 0x10]             ; ../coreutils-8.31/lib/hash-triple.c:67
0x00007434      48394f10       cmp qword [rdi + 0x10], rcx
0x00007438      75f2           jne 0x742c
0x0000743a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:64
0x0000743e      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/hash-triple.c:67
0x00007441      488b3f         mov rdi, qword [rdi]
0x00007444      e8f7aeffff     call sym.imp.strcmp
0x00007449      85c0           test eax, eax
0x0000744b      0f94c0         sete al
0x0000744e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hash-triple.c:68
0x00007452      c3             ret
0x00007453      0f1f00         nop dword [rax]
0x00007456      662e0f1f8400.  nop word cs:[rax + rax]
;-- triple_free:
0x00007460      53             push rbx                                ; ../coreutils-8.31/lib/hash-triple.c:73
0x00007461      4889fb         mov rbx, rdi
0x00007464      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/hash-triple.c:75
0x00007467      e804acffff     call sym.imp.free
0x0000746c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/hash-triple.c:76
0x0000746f      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash-triple.c:77
0x00007470      e9fbabffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/hash-triple.c:76
0x00007475      662e0f1f8400.  nop word cs:[rax + rax]
0x0000747f      90             nop
;-- adjust_value.part.0:
0x00007480      d905aa8b0000   fld dword [0x00010030]                  ; ../coreutils-8.31/lib/human.c:54
0x00007486      db6c2408       fld xword [rsp + 8]
0x0000748a      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x0000748c      7372           jae 0x7500
0x0000748e      ddd9           fstp st(1)
0x00007490      d97c24f6       fnstcw word [rsp - 0xa]
0x00007494      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00007499      80cc0c         or ah, 0xc
0x0000749c      66894424f4     mov word [rsp - 0xc], ax
0x000074a1      d9c0           fld st(0)
0x000074a3      d96c24f4       fldcw word [rsp - 0xc]
0x000074a7      df7c24e8       fistp qword [rsp - 0x18]
0x000074ab      d96c24f6       fldcw word [rsp - 0xa]
0x000074af      488b4424e8     mov rax, qword [rsp - 0x18]
0x000074b4      48894424e0     mov qword [rsp - 0x20], rax
0x000074b9      4885c0         test rax, rax
0x000074bc      df6c24e0       fild qword [rsp - 0x20]
0x000074c0      7906           jns 0x74c8
0x000074c2      d805648b0000   fadd dword [0x0001002c]
0x000074c8      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x000074ca      752c           jne 0x74f8
0x000074cc      d9c9           fxch st(1)
0x000074ce      dfe9           fucomip st(1)
0x000074d0      7a06           jp 0x74d8
0x000074d2      7426           je 0x74fa
0x000074d4      ddd8           fstp st(0)
0x000074d6      eb08           jmp 0x74e0
0x000074d8      ddd8           fstp st(0)
0x000074da      660f1f440000   nop word [rax + rax]
0x000074e0      4883c001       add rax, 1
0x000074e4      48894424e0     mov qword [rsp - 0x20], rax
0x000074e9      4885c0         test rax, rax
0x000074ec      df6c24e0       fild qword [rsp - 0x20]
0x000074f0      784e           js 0x7540
0x000074f2      eb06           jmp 0x74fa
0x000074f4      0f1f4000       nop dword [rax]
0x000074f8      ddd9           fstp st(1)
0x000074fa      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x000074fc      0f1f4000       nop dword [rax]
0x00007500      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x00007504      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00007509      dce1           fsubr st(1), st(0)
0x0000750b      d9c9           fxch st(1)
0x0000750d      48ba00000000.  movabs rdx, 0x8000000000000000
0x00007517      80cc0c         or ah, 0xc
0x0000751a      66894424f4     mov word [rsp - 0xc], ax
0x0000751f      d96c24f4       fldcw word [rsp - 0xc]
0x00007523      df7c24e8       fistp qword [rsp - 0x18]
0x00007527      d96c24f6       fldcw word [rsp - 0xa]
0x0000752b      488b4424e8     mov rax, qword [rsp - 0x18]
0x00007530      4831d0         xor rax, rdx
0x00007533      e97cffffff     jmp 0x74b4
0x00007538      0f1f84000000.  nop dword [rax + rax]
0x00007540      d805e68a0000   fadd dword [0x0001002c]
0x00007546      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x00007547      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x00007550      4157           push r15
0x00007552      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x00007554      89d0           mov eax, edx
0x00007556      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x00007558      4154           push r12
0x0000755a      4189d7         mov r15d, edx
0x0000755d      55             push rbp
0x0000755e      53             push rbx
0x0000755f      83e020         and eax, 0x20                           ; "@"
0x00007562      4183e703       and r15d, 3
0x00007566      4189d4         mov r12d, edx
0x00007569      4889fb         mov rbx, rdi
0x0000756c      4881ec980000.  sub rsp, 0x98
0x00007573      48894c2418     mov qword [rsp + 0x18], rcx
0x00007578      89442430       mov dword [rsp + 0x30], eax
0x0000757c      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00007585      48898c248800.  mov qword [rsp + 0x88], rcx
0x0000758d      31c9           xor ecx, ecx
0x0000758f      83f801         cmp eax, 1
0x00007592      48893424       mov qword [rsp], rsi
0x00007596      4c89442410     mov qword [rsp + 0x10], r8
0x0000759b      19c0           sbb eax, eax
0x0000759d      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x000075a0      0500040000     add eax, 0x400
0x000075a5      89442434       mov dword [rsp + 0x34], eax
0x000075a9      e872abffff     call sym.imp.localeconv
0x000075ae      4c8b30         mov r14, qword [rax]
0x000075b1      4989c5         mov r13, rax
0x000075b4      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x000075b7      e8f4abffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x000075bc      498b4d10       mov rcx, qword [r13 + 0x10]
0x000075c0      4d8b6d08       mov r13, qword [r13 + 8]
0x000075c4      4889c5         mov rbp, rax
0x000075c7      4883e801       sub rax, 1
0x000075cb      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x000075d0      4883f810       cmp rax, 0x10
0x000075d4      488d05318900.  lea rax, [0x0000ff0c]                   ; "."
0x000075db      4c89ef         mov rdi, r13
0x000075de      480f43ea       cmovae rbp, rdx
0x000075e2      48894c2438     mov qword [rsp + 0x38], rcx
0x000075e7      4c0f43f0       cmovae r14, rax
0x000075eb      e8c0abffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x000075f0      4883f811       cmp rax, 0x11
0x000075f4      488d05069000.  lea rax, [0x00010601]
0x000075fb      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007600      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00007605      4c0f43e8       cmovae r13, rax
0x00007609      488b0424       mov rax, qword [rsp]
0x0000760d      480587020000   add rax, 0x287
0x00007613      4839cf         cmp rdi, rcx
0x00007616      4889442408     mov qword [rsp + 8], rax
0x0000761b      0f8747010000   ja 0x7768
0x00007621      31d2           xor edx, edx
0x00007623      4889c8         mov rax, rcx
0x00007626      48f7f7         div rdi
0x00007629      4885d2         test rdx, rdx
0x0000762c      4889c7         mov rdi, rax
0x0000762f      0f845b030000   je 0x7990
0x00007635      48894c2418     mov qword [rsp + 0x18], rcx
0x0000763a      4885c9         test rcx, rcx
0x0000763d      df6c2418       fild qword [rsp + 0x18]
0x00007641      7906           jns 0x7649
0x00007643      d805e3890000   fadd dword [0x0001002c]
0x00007649      488b442410     mov rax, qword [rsp + 0x10]
0x0000764e      4889442418     mov qword [rsp + 0x18], rax
0x00007653      4885c0         test rax, rax
0x00007656      df6c2418       fild qword [rsp + 0x18]
0x0000765a      7906           jns 0x7662
0x0000765c      d805ca890000   fadd dword [0x0001002c]
0x00007662      def9           fdivp st(1)
0x00007664      48895c2418     mov qword [rsp + 0x18], rbx
0x00007669      4885db         test rbx, rbx
0x0000766c      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x00007670      7906           jns 0x7678
0x00007672      d805b4890000   fadd dword [0x0001002c]
0x00007678      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x0000767c      dec9           fmulp st(1)
0x0000767e      0f84c4010000   je 0x7848
0x00007684      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x00007688      31db           xor ebx, ebx
0x0000768a      d9c0           fld st(0)
0x0000768c      eb06           jmp 0x7694
0x0000768e      6690           nop
0x00007690      ddd9           fstp st(1)
0x00007692      d9ca           fxch st(2)
0x00007694      d9c0           fld st(0)
0x00007696      83c301         add ebx, 1
0x00007699      d8ca           fmul st(2)
0x0000769b      d9cb           fxch st(3)
0x0000769d      dbeb           fucomi st(3)
0x0000769f      720f           jb 0x76b0
0x000076a1      83fb08         cmp ebx, 8
0x000076a4      75ea           jne 0x7690
0x000076a6      ddda           fstp st(2)
0x000076a8      ddda           fstp st(2)
0x000076aa      eb08           jmp 0x76b4
0x000076ac      0f1f4000       nop dword [rax]
0x000076b0      ddda           fstp st(2)
0x000076b2      ddda           fstp st(2)
0x000076b4      8b4c2430       mov ecx, dword [rsp + 0x30]
0x000076b8      4883c501       add rbp, 1
0x000076bc      31c0           xor eax, eax
0x000076be      def1           fdivrp st(1)
0x000076c0      85c9           test ecx, ecx
0x000076c2      0f94c0         sete al
0x000076c5      4183ff01       cmp r15d, 1
0x000076c9      488d440501     lea rax, [rbp + rax + 1]
0x000076ce      4889442418     mov qword [rsp + 0x18], rax
0x000076d3      0f8467050000   je 0x7c40
0x000076d9      db2da1890000   fld xword [0x00010080]
0x000076df      dfe9           fucomip st(1)
0x000076e1      0f87d1030000   ja 0x7ab8
0x000076e7      d9c0           fld st(0)
0x000076e9      db7c2420       fstp xword [rsp + 0x20]
0x000076ed      4883ec10       sub rsp, 0x10
0x000076f1      488d0d428900.  lea rcx, str..1Lf                       ; 0x1003a ; "%.1Lf"
0x000076f8      be01000000     mov esi, 1
0x000076fd      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007704      31c0           xor eax, eax
0x00007706      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x0000770b      4c89f7         mov rdi, r14
0x0000770e      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x00007711      e88aaeffff     call sym.imp.__sprintf_chk
0x00007716      4c89f7         mov rdi, r14
0x00007719      e892aaffff     call sym.imp.strlen
0x0000771e      59             pop rcx
0x0000771f      5e             pop rsi
0x00007720      483b442418     cmp rax, qword [rsp + 0x18]
0x00007725      4989c6         mov r14, rax
0x00007728      db6c2420       fld xword [rsp + 0x20]
0x0000772c      0f87a6050000   ja 0x7cd8                               ; ../coreutils-8.31/lib/human.c:128
0x00007732      41f6c408       test r12b, 8
0x00007736      0f8464010000   je 0x78a0
0x0000773c      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x00007740      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x00007746      0f855c010000   jne 0x78a8
0x0000774c      d90522890000   fld dword [0x00010074]
0x00007752      4183ff01       cmp r15d, 1
0x00007756      dcc9           fmul st(1), st(0)
0x00007758      0f8582050000   jne 0x7ce0                              ; ../coreutils-8.31/lib/human.c:81
0x0000775e      e930050000     jmp 0x7c93
0x00007763      0f1f440000     nop dword [rax + rax]
0x00007768      4885c9         test rcx, rcx
0x0000776b      0f84c4feffff   je 0x7635
0x00007771      488b442410     mov rax, qword [rsp + 0x10]
0x00007776      31d2           xor edx, edx
0x00007778      48f7f1         div rcx
0x0000777b      4885d2         test rdx, rdx
0x0000777e      4989c0         mov r8, rax
0x00007781      0f85aefeffff   jne 0x7635
0x00007787      4889d8         mov rax, rbx
0x0000778a      31d2           xor edx, edx
0x0000778c      49f7f0         div r8
0x0000778f      4889c3         mov rbx, rax
0x00007792      488d0492       lea rax, [rdx + rdx*4]
0x00007796      31d2           xor edx, edx
0x00007798      4889de         mov rsi, rbx
0x0000779b      4801c0         add rax, rax
0x0000779e      49f7f0         div r8
0x000077a1      4801d2         add rdx, rdx
0x000077a4      4189c1         mov r9d, eax
0x000077a7      4939d0         cmp r8, rdx
0x000077aa      0f8688050000   jbe 0x7d38
0x000077b0      31ff           xor edi, edi
0x000077b2      4885d2         test rdx, rdx
0x000077b5      400f95c7       setne dil
0x000077b9      4489e1         mov ecx, r12d
0x000077bc      4c8b442408     mov r8, qword [rsp + 8]
0x000077c1      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000077c6      83e110         and ecx, 0x10
0x000077c9      0f84c1030000   je 0x7b90
0x000077cf      448b442434     mov r8d, dword [rsp + 0x34]
0x000077d4      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x000077d7      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x000077da      0f8770050000   ja 0x7d50
0x000077e0      31db           xor ebx, ebx
0x000077e2      eb23           jmp 0x7807
0x000077e4      0f1f4000       nop dword [rax]
0x000077e8      85ff           test edi, edi
0x000077ea      400f95c7       setne dil
0x000077ee      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x000077f2      83c301         add ebx, 1
0x000077f5      4d39d0         cmp r8, r10
0x000077f8      0f870f030000   ja 0x7b0d                               ; ../coreutils-8.31/lib/human.c:26
0x000077fe      83fb08         cmp ebx, 8
0x00007801      0f84a1050000   je 0x7da8
0x00007807      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x0000780a      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x0000780c      89fe           mov esi, edi
0x0000780e      49f7f0         div r8
0x00007811      d1fe           sar esi, 1
0x00007813      4989c2         mov r10, rax
0x00007816      8d0492         lea eax, [rdx + rdx*4]
0x00007819      31d2           xor edx, edx
0x0000781b      418d0441       lea eax, [r9 + rax*2]
0x0000781f      41f7f3         div r11d
0x00007822      8d1456         lea edx, [rsi + rdx*2]
0x00007825      4189c1         mov r9d, eax
0x00007828      4c89d6         mov rsi, r10
0x0000782b      01d7           add edi, edx
0x0000782d      4139d3         cmp r11d, edx
0x00007830      77b6           ja 0x77e8
0x00007832      4139fb         cmp r11d, edi
0x00007835      400f92c7       setb dil
0x00007839      400fb6ff       movzx edi, dil
0x0000783d      83c702         add edi, 2
0x00007840      ebb0           jmp 0x77f2
0x00007842      660f1f440000   nop word [rax + rax]
0x00007848      4183ff01       cmp r15d, 1
0x0000784c      740e           je 0x785c
0x0000784e      db2d2c880000   fld xword [0x00010080]
0x00007854      dfe9           fucomip st(1)
0x00007856      0f8784020000   ja 0x7ae0
0x0000785c      4883ec10       sub rsp, 0x10
0x00007860      488d0dcd8700.  lea rcx, [0x00010034]                   ; "%.0Lf"
0x00007867      be01000000     mov esi, 1
0x0000786c      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x00007871      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007878      31c0           xor eax, eax
0x0000787a      db3c24         fstp xword [rsp]
0x0000787d      31ed           xor ebp, ebp
0x0000787f      4889df         mov rdi, rbx
0x00007882      e819adffff     call sym.imp.__sprintf_chk
0x00007887      4889df         mov rdi, rbx
0x0000788a      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000788f      e81ca9ffff     call sym.imp.strlen
0x00007894      5e             pop rsi
0x00007895      5f             pop rdi
0x00007896      4989c6         mov r14, rax
0x00007899      eb15           jmp 0x78b0
0x0000789b      0f1f440000     nop dword [rax + rax]
0x000078a0      ddd8           fstp st(0)
0x000078a2      eb0c           jmp 0x78b0
0x000078a4      0f1f4000       nop dword [rax]
0x000078a8      ddd8           fstp st(0)
0x000078aa      660f1f440000   nop word [rax + rax]
0x000078b0      4c8b7c2408     mov r15, qword [rsp + 8]
0x000078b5      488b3424       mov rsi, qword [rsp]
0x000078b9      4c89f2         mov rdx, r14
0x000078bc      4d29f7         sub r15, r14
0x000078bf      4929ee         sub r14, rbp
0x000078c2      4c89ff         mov rdi, r15
0x000078c5      e8c6abffff     call sym.imp.memmove
0x000078ca      4d89f0         mov r8, r14
0x000078cd      4d01f8         add r8, r15
0x000078d0      41f6c404       test r12b, 4
0x000078d4      0f85de000000   jne 0x79b8
0x000078da      41f6c480       test r12b, 0x80
0x000078de      7477           je 0x7957
0x000078e0      83fbff         cmp ebx, 0xffffffff
0x000078e3      0f8417030000   je 0x7c00
0x000078e9      4489e0         mov eax, r12d
0x000078ec      2500010000     and eax, 0x100
0x000078f1      89c1           mov ecx, eax
0x000078f3      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x000078f5      7460           je 0x7957
0x000078f7      4183e440       and r12d, 0x40                          ; segment.PHDR
0x000078fb      0f8597010000   jne 0x7a98
0x00007901      85db           test ebx, ebx
0x00007903      0f842d060000   je 0x7f36
0x00007909      83fb01         cmp ebx, 1
0x0000790c      750e           jne 0x791c                              ; ../coreutils-8.31/lib/human.c:-122
0x0000790e      448b4c2430     mov r9d, dword [rsp + 0x30]
0x00007913      4585c9         test r9d, r9d
0x00007916      0f8444040000   je 0x7d60
0x0000791c      488d0d458700.  lea rcx, obj.power_letter               ; 0x10068
0x00007923      4863db         movsxd rbx, ebx
0x00007926      488b7c2408     mov rdi, qword [rsp + 8]
0x0000792b      85c0           test eax, eax
0x0000792d      0fb60c19       movzx ecx, byte [rcx + rbx]
0x00007931      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x00007935      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x00007937      0f8437040000   je 0x7d74
0x0000793d      448b442430     mov r8d, dword [rsp + 0x30]
0x00007942      4585c0         test r8d, r8d
0x00007945      0f85b5010000   jne 0x7b00
0x0000794b      488d4201       lea rax, [rdx + 1]
0x0000794f      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x00007952      4889442408     mov qword [rsp + 8], rax
0x00007957      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x0000795c      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00007964      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000796d      c60000         mov byte [rax], 0
0x00007970      4c89f8         mov rax, r15
0x00007973      0f8592050000   jne 0x7f0b
0x00007979      4881c4980000.  add rsp, 0x98
0x00007980      5b             pop rbx
0x00007981      5d             pop rbp
0x00007982      415c           pop r12
0x00007984      415d           pop r13
0x00007986      415e           pop r14
0x00007988      415f           pop r15
0x0000798a      c3             ret
0x0000798b      0f1f440000     nop dword [rax + rax]
0x00007990      4889de         mov rsi, rbx
0x00007993      31d2           xor edx, edx
0x00007995      480faff0       imul rsi, rax
0x00007999      4889f0         mov rax, rsi
0x0000799c      48f7f7         div rdi
0x0000799f      4839d8         cmp rax, rbx
0x000079a2      0f858dfcffff   jne 0x7635
0x000079a8      31ff           xor edi, edi
0x000079aa      4531c9         xor r9d, r9d
0x000079ad      e907feffff     jmp 0x77b9
0x000079b2      660f1f440000   nop word [rax + rax]
0x000079b8      4d89c6         mov r14, r8
0x000079bb      4c89ef         mov rdi, r13
0x000079be      4c89442448     mov qword [rsp + 0x48], r8
0x000079c3      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x000079c6      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x000079cd      e8dea7ffff     call sym.imp.strlen
0x000079d2      488d7c2450     lea rdi, [rsp + 0x50]
0x000079d7      b929000000     mov ecx, 0x29                           ; ')'
0x000079dc      4c89f2         mov rdx, r14
0x000079df      4c89fe         mov rsi, r15
0x000079e2      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x000079e7      48897c2418     mov qword [rsp + 0x18], rdi
0x000079ec      e85fa9ffff     call sym.imp.__memcpy_chk
0x000079f1      4489e1         mov ecx, r12d
0x000079f4      895c2420       mov dword [rsp + 0x20], ebx
0x000079f8      4d89f4         mov r12, r14
0x000079fb      4c89eb         mov rbx, r13
0x000079fe      4c8b442448     mov r8, qword [rsp + 0x48]
0x00007a03      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00007a08      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00007a0d      4189ce         mov r14d, ecx
0x00007a10      eb40           jmp 0x7a52
0x00007a12      660f1f440000   nop word [rax + rax]
0x00007a18      488b442418     mov rax, qword [rsp + 0x18]
0x00007a1d      4929ec         sub r12, rbp
0x00007a20      4929e8         sub r8, rbp
0x00007a23      4c89c7         mov rdi, r8
0x00007a26      4889ea         mov rdx, rbp
0x00007a29      4a8d3420       lea rsi, [rax + r12]
0x00007a2d      e82ea9ffff     call sym.imp.memcpy
0x00007a32      4d85e4         test r12, r12
0x00007a35      4989c0         mov r8, rax
0x00007a38      0f840a050000   je 0x7f48
0x00007a3e      4d29e8         sub r8, r13
0x00007a41      4c89ea         mov rdx, r13
0x00007a44      4889de         mov rsi, rbx
0x00007a47      4c89c7         mov rdi, r8
0x00007a4a      e811a9ffff     call sym.imp.memcpy
0x00007a4f      4989c0         mov r8, rax
0x00007a52      410fb607       movzx eax, byte [r15]
0x00007a56      84c0           test al, al
0x00007a58      740d           je 0x7a67
0x00007a5a      3c7f           cmp al, 0x7f
0x00007a5c      0fb6e8         movzx ebp, al
0x00007a5f      490f43ec       cmovae rbp, r12
0x00007a63      4983c701       add r15, 1
0x00007a67      4c39e5         cmp rbp, r12
0x00007a6a      76ac           jbe 0x7a18
0x00007a6c      4489f0         mov eax, r14d
0x00007a6f      4d89c7         mov r15, r8
0x00007a72      4d89e6         mov r14, r12
0x00007a75      488b742418     mov rsi, qword [rsp + 0x18]
0x00007a7a      4d29f7         sub r15, r14
0x00007a7d      4c89f2         mov rdx, r14
0x00007a80      4c89ff         mov rdi, r15
0x00007a83      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x00007a87      4189c4         mov r12d, eax
0x00007a8a      e8d1a8ffff     call sym.imp.memcpy
0x00007a8f      e946feffff     jmp 0x78da
0x00007a94      0f1f4000       nop dword [rax]
0x00007a98      488b0c24       mov rcx, qword [rsp]
0x00007a9c      488db9880200.  lea rdi, [rcx + 0x288]
0x00007aa3      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x00007aaa      48897c2408     mov qword [rsp + 8], rdi
0x00007aaf      e94dfeffff     jmp 0x7901
0x00007ab4      0f1f4000       nop dword [rax]
0x00007ab8      4883ec10       sub rsp, 0x10
0x00007abc      4489ff         mov edi, r15d
0x00007abf      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x00007ac1      db3c24         fstp xword [rsp]
0x00007ac4      db7c2430       fstp xword [rsp + 0x30]
0x00007ac8      e8b3f9ffff     call sym.adjust_value.part.0
0x00007acd      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x00007ace      5a             pop rdx
0x00007acf      db6c2420       fld xword [rsp + 0x20]
0x00007ad3      e911fcffff     jmp 0x76e9
0x00007ad8      0f1f84000000.  nop dword [rax + rax]
0x00007ae0      4883ec10       sub rsp, 0x10
0x00007ae4      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x00007ae7      db3c24         fstp xword [rsp]
0x00007aea      e891f9ffff     call sym.adjust_value.part.0
0x00007aef      4158           pop r8
0x00007af1      4159           pop r9
0x00007af3      e964fdffff     jmp 0x785c
0x00007af8      0f1f84000000.  nop dword [rax + rax]
0x00007b00      488d5702       lea rdx, [rdi + 2]
0x00007b04      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x00007b08      e93efeffff     jmp 0x794b
0x00007b0d      4983fa09       cmp r10, 9
0x00007b11      0f8791020000   ja 0x7da8
0x00007b17      4183ff01       cmp r15d, 1
0x00007b1b      0f84b1020000   je 0x7dd2
0x00007b21      4585ff         test r15d, r15d
0x00007b24      0f94c2         sete dl
0x00007b27      85ff           test edi, edi
0x00007b29      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x00007b2d      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x00007b30      84d2           test dl, dl
0x00007b32      0f8481020000   je 0x7db9
0x00007b38      448d4801       lea r9d, [rax + 1]
0x00007b3c      4183f90a       cmp r9d, 0xa
0x00007b40      0f84fb020000   je 0x7e41
0x00007b46      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x00007b4a      488b0424       mov rax, qword [rsp]
0x00007b4e      4c8d80860200.  lea r8, [rax + 0x286]
0x00007b55      448888860200.  mov byte [rax + 0x286], r9b
0x00007b5c      89e8           mov eax, ebp
0x00007b5e      4929e8         sub r8, rbp
0x00007b61      83fd08         cmp ebp, 8
0x00007b64      0f8387020000   jae 0x7df1
0x00007b6a      40f6c504       test bpl, 4
0x00007b6e      0f8582030000   jne 0x7ef6                              ; ../coreutils-8.31/lib/human.c:-674
0x00007b74      85c0           test eax, eax
0x00007b76      740f           je 0x7b87
0x00007b78      410fb616       movzx edx, byte [r14]
0x00007b7c      a802           test al, 2
0x00007b7e      418810         mov byte [r8], dl
0x00007b81      0f8589030000   jne 0x7f10
0x00007b87      31ff           xor edi, edi
0x00007b89      4531c9         xor r9d, r9d
0x00007b8c      0f1f4000       nop dword [rax]
0x00007b90      4183ff01       cmp r15d, 1
0x00007b94      0f8476010000   je 0x7d10
0x00007b9a      4585ff         test r15d, r15d
0x00007b9d      7521           jne 0x7bc0
0x00007b9f      4401cf         add edi, r9d
0x00007ba2      85ff           test edi, edi
0x00007ba4      7e1a           jle 0x7bc0
0x00007ba6      4883c601       add rsi, 1
0x00007baa      85c9           test ecx, ecx
0x00007bac      7412           je 0x7bc0
0x00007bae      8b442434       mov eax, dword [rsp + 0x34]
0x00007bb2      4839f0         cmp rax, rsi
0x00007bb5      0f84c5010000   je 0x7d80
0x00007bbb      0f1f440000     nop dword [rax + rax]
0x00007bc0      4d89c7         mov r15, r8
0x00007bc3      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x00007bcd      0f1f00         nop dword [rax]
0x00007bd0      4889f0         mov rax, rsi
0x00007bd3      4983ef01       sub r15, 1
0x00007bd7      48f7e1         mul rcx
0x00007bda      48c1ea03       shr rdx, 3
0x00007bde      488d0492       lea rax, [rdx + rdx*4]
0x00007be2      4801c0         add rax, rax
0x00007be5      4829c6         sub rsi, rax
0x00007be8      83c630         add esi, 0x30
0x00007beb      4885d2         test rdx, rdx
0x00007bee      418837         mov byte [r15], sil
0x00007bf1      4889d6         mov rsi, rdx
0x00007bf4      75da           jne 0x7bd0
0x00007bf6      e9d5fcffff     jmp 0x78d0
0x00007bfb      0f1f440000     nop dword [rax + rax]
0x00007c00      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00007c05      4883f901       cmp rcx, 1
0x00007c09      0f86a3010000   jbe 0x7db2
0x00007c0f      8b542434       mov edx, dword [rsp + 0x34]
0x00007c13      bb01000000     mov ebx, 1
0x00007c18      b801000000     mov eax, 1
0x00007c1d      480fafc2       imul rax, rdx
0x00007c21      4839c1         cmp rcx, rax
0x00007c24      0f86bffcffff   jbe 0x78e9
0x00007c2a      83c301         add ebx, 1
0x00007c2d      83fb08         cmp ebx, 8
0x00007c30      75eb           jne 0x7c1d
0x00007c32      e9b2fcffff     jmp 0x78e9
0x00007c37      660f1f840000.  nop word [rax + rax]
0x00007c40      4883ec10       sub rsp, 0x10
0x00007c44      488d0def8300.  lea rcx, str..1Lf                       ; 0x1003a ; "%.1Lf"
0x00007c4b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007c52      d9c0           fld st(0)
0x00007c54      db3c24         fstp xword [rsp]
0x00007c57      4c8b742410     mov r14, qword [rsp + 0x10]
0x00007c5c      be01000000     mov esi, 1
0x00007c61      31c0           xor eax, eax
0x00007c63      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x00007c66      db7c2430       fstp xword [rsp + 0x30]
0x00007c6a      e831a9ffff     call sym.imp.__sprintf_chk
0x00007c6f      4c89f7         mov rdi, r14
0x00007c72      e839a5ffff     call sym.imp.strlen
0x00007c77      4989c6         mov r14, rax
0x00007c7a      58             pop rax
0x00007c7b      5a             pop rdx
0x00007c7c      4c3b742418     cmp r14, qword [rsp + 0x18]
0x00007c81      db6c2420       fld xword [rsp + 0x20]
0x00007c85      0f86a7faffff   jbe 0x7732
0x00007c8b      d905e3830000   fld dword [0x00010074]
0x00007c91      dcc9           fmul st(1), st(0)
0x00007c93      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x00007c95      4883ec10       sub rsp, 0x10
0x00007c99      488d0d948300.  lea rcx, [0x00010034]                   ; "%.0Lf"
0x00007ca0      4c8b742410     mov r14, qword [rsp + 0x10]
0x00007ca5      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00007cac      be01000000     mov esi, 1
0x00007cb1      31c0           xor eax, eax
0x00007cb3      31ed           xor ebp, ebp
0x00007cb5      4c89f7         mov rdi, r14
0x00007cb8      db3c24         fstp xword [rsp]
0x00007cbb      e8e0a8ffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x00007cc0      4c89f7         mov rdi, r14
0x00007cc3      e8e8a4ffff     call sym.imp.strlen
0x00007cc8      415a           pop r10
0x00007cca      4989c6         mov r14, rax
0x00007ccd      415b           pop r11
0x00007ccf      e9dcfbffff     jmp 0x78b0
0x00007cd4      0f1f4000       nop dword [rax]
0x00007cd8      d90596830000   fld dword [0x00010074]
0x00007cde      dcc9           fmul st(1), st(0)
0x00007ce0      db2d9a830000   fld xword [0x00010080]
0x00007ce6      dfea           fucomip st(2)
0x00007ce8      76a9           jbe 0x7c93
0x00007cea      d95c2418       fstp dword [rsp + 0x18]
0x00007cee      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x00007cf2      4489ff         mov edi, r15d
0x00007cf5      db3c24         fstp xword [rsp]
0x00007cf8      e883f7ffff     call sym.adjust_value.part.0
0x00007cfd      5d             pop rbp
0x00007cfe      415e           pop r14
0x00007d00      d9442418       fld dword [rsp + 0x18]
0x00007d04      eb8d           jmp 0x7c93                              ; ../coreutils-8.31/lib/human.c:-902
0x00007d06      662e0f1f8400.  nop word cs:[rax + rax]
0x00007d10      4889f0         mov rax, rsi
0x00007d13      4863ff         movsxd rdi, edi
0x00007d16      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x00007d19      4801f8         add rax, rdi
0x00007d1c      0f95c0         setne al
0x00007d1f      0fb6c0         movzx eax, al
0x00007d22      4101c1         add r9d, eax
0x00007d25      4183f905       cmp r9d, 5
0x00007d29      0f8f77feffff   jg 0x7ba6
0x00007d2f      e98cfeffff     jmp 0x7bc0                              ; ../coreutils-8.31/lib/human.c:-938
0x00007d34      0f1f4000       nop dword [rax]
0x00007d38      400f92c7       setb dil
0x00007d3c      400fb6ff       movzx edi, dil
0x00007d40      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x00007d43      e971faffff     jmp 0x77b9
0x00007d48      0f1f84000000.  nop dword [rax + rax]
0x00007d50      4c8b442408     mov r8, qword [rsp + 8]
0x00007d55      31db           xor ebx, ebx
0x00007d57      e934feffff     jmp 0x7b90
0x00007d5c      0f1f4000       nop dword [rax]
0x00007d60      488b5c2408     mov rbx, qword [rsp + 8]
0x00007d65      85c0           test eax, eax
0x00007d67      488d5301       lea rdx, [rbx + 1]
0x00007d6b      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x00007d6e      0f85d7fbffff   jne 0x794b
0x00007d74      4889542408     mov qword [rsp + 8], rdx
0x00007d79      e9d9fbffff     jmp 0x7957
0x00007d7e      6690           nop
0x00007d80      83fb08         cmp ebx, 8
0x00007d83      0f8437feffff   je 0x7bc0
0x00007d89      83c301         add ebx, 1
0x00007d8c      41f6c408       test r12b, 8
0x00007d90      0f84bc000000   je 0x7e52
0x00007d96      4d8d78ff       lea r15, [r8 - 1]
0x00007d9a      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x00007d9f      e92cfbffff     jmp 0x78d0
0x00007da4      0f1f4000       nop dword [rax]
0x00007da8      4c8b442408     mov r8, qword [rsp + 8]
0x00007dad      e9defdffff     jmp 0x7b90
0x00007db2      31db           xor ebx, ebx
0x00007db4      e930fbffff     jmp 0x78e9
0x00007db9      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x00007dbb      0f8585fdffff   jne 0x7b46
0x00007dc1      41f6c408       test r12b, 8
0x00007dc5      751d           jne 0x7de4
0x00007dc7      41b930000000   mov r9d, 0x30                           ; '0'
0x00007dcd      e978fdffff     jmp 0x7b4a
0x00007dd2      89c2           mov edx, eax
0x00007dd4      83e201         and edx, 1
0x00007dd7      01fa           add edx, edi
0x00007dd9      83fa02         cmp edx, 2
0x00007ddc      0f9fc2         setg dl
0x00007ddf      e94cfdffff     jmp 0x7b30
0x00007de4      4c8b442408     mov r8, qword [rsp + 8]
0x00007de9      4531c9         xor r9d, r9d
0x00007dec      e99ffdffff     jmp 0x7b90
0x00007df1      498b06         mov rax, qword [r14]
0x00007df4      4d89f1         mov r9, r14
0x00007df7      498900         mov qword [r8], rax
0x00007dfa      89e8           mov eax, ebp
0x00007dfc      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00007e01      49895400f8     mov qword [r8 + rax - 8], rdx
0x00007e06      498d5008       lea rdx, [r8 + 8]
0x00007e0a      4c89c0         mov rax, r8
0x00007e0d      4883e2f8       and rdx, 0xfffffffffffffff8
0x00007e11      4829d0         sub rax, rdx
0x00007e14      4929c1         sub r9, rax
0x00007e17      01e8           add eax, ebp
0x00007e19      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00007e1c      83f808         cmp eax, 8
0x00007e1f      0f8262fdffff   jb 0x7b87
0x00007e25      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00007e28      31ff           xor edi, edi
0x00007e2a      4189fa         mov r10d, edi
0x00007e2d      83c708         add edi, 8
0x00007e30      4f8b1c11       mov r11, qword [r9 + r10]
0x00007e34      39c7           cmp edi, eax
0x00007e36      4e891c12       mov qword [rdx + r10], r11
0x00007e3a      72ee           jb 0x7e2a
0x00007e3c      e946fdffff     jmp 0x7b87
0x00007e41      498d7201       lea rsi, [r10 + 1]
0x00007e45      4883fe0a       cmp rsi, 0xa
0x00007e49      7455           je 0x7ea0
0x00007e4b      31ff           xor edi, edi
0x00007e4d      e96fffffff     jmp 0x7dc1
0x00007e52      4889e8         mov rax, rbp
0x00007e55      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x00007e5a      48f7d0         not rax
0x00007e5d      4901c0         add r8, rax
0x00007e60      83fd08         cmp ebp, 8
0x00007e63      89e8           mov eax, ebp
0x00007e65      7343           jae 0x7eaa
0x00007e67      83e504         and ebp, 4
0x00007e6a      0f85b1000000   jne 0x7f21
0x00007e70      85c0           test eax, eax
0x00007e72      0f841effffff   je 0x7d96
0x00007e78      410fb616       movzx edx, byte [r14]
0x00007e7c      a802           test al, 2
0x00007e7e      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x00007e81      0f840fffffff   je 0x7d96
0x00007e87      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x00007e8d      6641895400fe   mov word [r8 + rax - 2], dx
0x00007e93      e9fefeffff     jmp 0x7d96
0x00007e98      0f1f84000000.  nop dword [rax + rax]
0x00007ea0      4c8b442408     mov r8, qword [rsp + 8]
0x00007ea5      e9ddfcffff     jmp 0x7b87
0x00007eaa      498b06         mov rax, qword [r14]
0x00007ead      498d4808       lea rcx, [r8 + 8]
0x00007eb1      4883e1f8       and rcx, 0xfffffffffffffff8
0x00007eb5      498900         mov qword [r8], rax
0x00007eb8      89e8           mov eax, ebp
0x00007eba      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00007ebf      49895400f8     mov qword [r8 + rax - 8], rdx
0x00007ec4      4c89c0         mov rax, r8
0x00007ec7      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x00007eca      4929c6         sub r14, rax
0x00007ecd      01e8           add eax, ebp
0x00007ecf      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00007ed2      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x00007ed5      0f82bbfeffff   jb 0x7d96
0x00007edb      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x00007ede      31d2           xor edx, edx
0x00007ee0      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x00007ee2      83c208         add edx, 8
0x00007ee5      498b3c36       mov rdi, qword [r14 + rsi]
0x00007ee9      39c2           cmp edx, eax
0x00007eeb      48893c31       mov qword [rcx + rsi], rdi
0x00007eef      72ef           jb 0x7ee0
0x00007ef1      e9a0feffff     jmp 0x7d96
0x00007ef6      418b16         mov edx, dword [r14]
0x00007ef9      418910         mov dword [r8], edx
0x00007efc      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00007f01      41895400fc     mov dword [r8 + rax - 4], edx
0x00007f06      e97cfcffff     jmp 0x7b87
0x00007f0b      e8e0a2ffff     call sym.imp.__stack_chk_fail
0x00007f10      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x00007f16      6641895400fe   mov word [r8 + rax - 2], dx
0x00007f1c      e966fcffff     jmp 0x7b87
0x00007f21      418b16         mov edx, dword [r14]
0x00007f24      418910         mov dword [r8], edx
0x00007f27      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00007f2c      41895400fc     mov dword [r8 + rax - 4], edx
0x00007f31      e960feffff     jmp 0x7d96
0x00007f36      85c0           test eax, eax
0x00007f38      488b542408     mov rdx, qword [rsp + 8]
0x00007f3d      0f8508faffff   jne 0x794b
0x00007f43      e90ffaffff     jmp 0x7957
0x00007f48      8b5c2420       mov ebx, dword [rsp + 0x20]
0x00007f4c      4989c7         mov r15, rax
0x00007f4f      4589f4         mov r12d, r14d
0x00007f52      e983f9ffff     jmp 0x78da
0x00007f57      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x00007f60      4155           push r13
0x00007f62      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x00007f64      4989f5         mov r13, rsi
0x00007f67      55             push rbp
0x00007f68      53             push rbx
0x00007f69      4989d4         mov r12, rdx
0x00007f6c      4889fb         mov rbx, rdi
0x00007f6f      4883ec18       sub rsp, 0x18
0x00007f73      64488b042528.  mov rax, qword fs:[0x28]
0x00007f7c      4889442408     mov qword [rsp + 8], rax
0x00007f81      31c0           xor eax, eax
0x00007f83      4885ff         test rdi, rdi
0x00007f86      0f8414010000   je 0x80a0
0x00007f8c      31ed           xor ebp, ebp
0x00007f8e      803b27         cmp byte [rbx], 0x27
0x00007f91      7509           jne 0x7f9c
0x00007f93      4883c301       add rbx, 1
0x00007f97      bd04000000     mov ebp, 4
0x00007f9c      488d15bd8000.  lea rdx, obj.block_size_opts            ; 0x10060
0x00007fa3      488d35f6ba20.  lea rsi, obj.block_size_args            ; 0x213aa0
0x00007faa      b904000000     mov ecx, 4
0x00007faf      4889df         mov rdi, rbx
0x00007fb2      e839460000     call sym.argmatch
0x00007fb7      85c0           test eax, eax
0x00007fb9      783d           js 0x7ff8
0x00007fbb      488d159e8000.  lea rdx, obj.block_size_opts            ; 0x10060
0x00007fc2      4898           cdqe
0x00007fc4      49c704240100.  mov qword [r12], 1
0x00007fcc      0b2c82         or ebp, dword [rdx + rax*4]
0x00007fcf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x00007fd1      41896d00       mov dword [r13], ebp
0x00007fd5      488b4c2408     mov rcx, qword [rsp + 8]
0x00007fda      6448330c2528.  xor rcx, qword fs:[0x28]
0x00007fe3      0f8558010000   jne 0x8141
0x00007fe9      4883c418       add rsp, 0x18
0x00007fed      5b             pop rbx
0x00007fee      5d             pop rbp
0x00007fef      415c           pop r12
0x00007ff1      415d           pop r13
0x00007ff3      c3             ret
0x00007ff4      0f1f4000       nop dword [rax]
0x00007ff8      4c8d054b8000.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0x1004a ; "eEgGkKmMpPtTyYzZ0"
0x00007fff      31d2           xor edx, edx
0x00008001      4889e6         mov rsi, rsp
0x00008004      4c89e1         mov rcx, r12
0x00008007      4889df         mov rdi, rbx
0x0000800a      e831310000     call sym.xstrtoumax
0x0000800f      85c0           test eax, eax
0x00008011      7545           jne 0x8058
0x00008013      0fb633         movzx esi, byte [rbx]
0x00008016      8d56d0         lea edx, [rsi - 0x30]
0x00008019      80fa09         cmp dl, 9
0x0000801c      762a           jbe 0x8048
0x0000801e      488b0c24       mov rcx, qword [rsp]
0x00008022      4839cb         cmp rbx, rcx
0x00008025      7512           jne 0x8039                              ; ../coreutils-8.31/lib/human.c:-960
0x00008027      e9d4000000     jmp 0x8100
0x0000802c      0f1f4000       nop dword [rax]
0x00008030      4839cb         cmp rbx, rcx
0x00008033      0f84c7000000   je 0x8100
0x00008039      4883c301       add rbx, 1
0x0000803d      0fb63b         movzx edi, byte [rbx]
0x00008040      8d57d0         lea edx, [rdi - 0x30]
0x00008043      80fa09         cmp dl, 9
0x00008046      77e8           ja 0x8030
0x00008048      498b1424       mov rdx, qword [r12]
0x0000804c      41896d00       mov dword [r13], ebp
0x00008050      eb12           jmp 0x8064
0x00008052      660f1f440000   nop word [rax + rax]
0x00008058      498b1424       mov rdx, qword [r12]
0x0000805c      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x00008064      4885d2         test rdx, rdx
0x00008067      0f8568ffffff   jne 0x7fd5
0x0000806d      488d3d287100.  lea rdi, str.POSIXLY_CORRECT            ; 0xf19c ; "POSIXLY_CORRECT"
0x00008074      e8d79fffff     call sym.imp.getenv
0x00008079      4883f801       cmp rax, 1
0x0000807d      4819c0         sbb rax, rax
0x00008080      2500020000     and eax, 0x200
0x00008085      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x0000808b      49890424       mov qword [r12], rax
0x0000808f      b804000000     mov eax, 4
0x00008094      e93cffffff     jmp 0x7fd5
0x00008099      0f1f80000000.  nop dword [rax]
0x000080a0      488d3d087100.  lea rdi, [0x0000f1af]                   ; "BLOCK_SIZE"
0x000080a7      e8a49fffff     call sym.imp.getenv
0x000080ac      4885c0         test rax, rax
0x000080af      4889c3         mov rbx, rax
0x000080b2      0f85d4feffff   jne 0x7f8c
0x000080b8      488d3d817f00.  lea rdi, str.BLOCKSIZE                  ; 0x10040 ; "BLOCKSIZE"
0x000080bf      e88c9fffff     call sym.imp.getenv
0x000080c4      4885c0         test rax, rax
0x000080c7      4889c3         mov rbx, rax
0x000080ca      0f85bcfeffff   jne 0x7f8c
0x000080d0      488d3dc57000.  lea rdi, str.POSIXLY_CORRECT            ; 0xf19c ; "POSIXLY_CORRECT"
0x000080d7      e8749fffff     call sym.imp.getenv
0x000080dc      4885c0         test rax, rax
0x000080df      7449           je 0x812a
0x000080e1      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x000080e9      31c0           xor eax, eax
0x000080eb      41c745000000.  mov dword [r13], 0
0x000080f3      e9ddfeffff     jmp 0x7fd5
0x000080f8      0f1f84000000.  nop dword [rax + rax]
0x00008100      8079ff42       cmp byte [rcx - 1], 0x42
0x00008104      7412           je 0x8118
0x00008106      4080cd80       or bpl, 0x80
0x0000810a      83cd20         or ebp, 0x20                            ; "@"
0x0000810d      e936ffffff     jmp 0x8048
0x00008112      660f1f440000   nop word [rax + rax]
0x00008118      81cd80010000   or ebp, 0x180
0x0000811e      8079fe69       cmp byte [rcx - 2], 0x69
0x00008122      0f8520ffffff   jne 0x8048
0x00008128      ebe0           jmp 0x810a
0x0000812a      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0x1200000107
0x00008132      31c0           xor eax, eax
0x00008134      41c745000000.  mov dword [r13], 0
0x0000813c      e994feffff     jmp 0x7fd5
0x00008141      e8aaa0ffff     call sym.imp.__stack_chk_fail
0x00008146      662e0f1f8400.  nop word cs:[rax + rax]
;-- umaxtostr:
0x00008150      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00008154      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00008158      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00008162      660f1f440000   nop word [rax + rax]
0x00008168      4889f8         mov rax, rdi
0x0000816b      4883e901       sub rcx, 1
0x0000816f      48f7e6         mul rsi
0x00008172      48c1ea03       shr rdx, 3
0x00008176      488d0492       lea rax, [rdx + rdx*4]
0x0000817a      4801c0         add rax, rax
0x0000817d      4829c7         sub rdi, rax
0x00008180      83c730         add edi, 0x30
0x00008183      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00008186      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00008189      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000818c      75da           jne 0x8168
0x0000818e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00008191      c3             ret
0x00008192      662e0f1f8400.  nop word cs:[rax + rax]
0x0000819c      0f1f4000       nop dword [rax]
;-- mbsalign:
0x000081a0      4157           push r15
0x000081a2      4156           push r14
0x000081a4      4989fe         mov r14, rdi
0x000081a7      4155           push r13
0x000081a9      4154           push r12
0x000081ab      4989f5         mov r13, rsi
0x000081ae      55             push rbp
0x000081af      53             push rbx
0x000081b0      4489cb         mov ebx, r9d
0x000081b3      4989cc         mov r12, rcx
0x000081b6      4883ec38       sub rsp, 0x38
0x000081ba      4889542410     mov qword [rsp + 0x10], rdx
0x000081bf      448944241c     mov dword [rsp + 0x1c], r8d
0x000081c4      e8e79fffff     call sym.imp.strlen
0x000081c9      f6c302         test bl, 2
0x000081cc      4989c7         mov r15, rax
0x000081cf      4889442408     mov qword [rsp + 8], rax
0x000081d4      0f8466010000   je 0x8340
0x000081da      4c89fd         mov rbp, r15
0x000081dd      48c704240000.  mov qword [rsp], 0
0x000081e5      48c744240800.  mov qword [rsp + 8], 0
0x000081ee      498b0424       mov rax, qword [r12]
0x000081f2      4839e8         cmp rax, rbp
0x000081f5      0f830e010000   jae 0x8309
0x000081fb      4989c7         mov r15, rax
0x000081fe      31d2           xor edx, edx
0x00008200      49890424       mov qword [r12], rax
0x00008204      8b44241c       mov eax, dword [rsp + 0x1c]
0x00008208      85c0           test eax, eax
0x0000820a      0f841b010000   je 0x832b
0x00008210      31ed           xor ebp, ebp
0x00008212      83f801         cmp eax, 1
0x00008215      740c           je 0x8223
0x00008217      4889d5         mov rbp, rdx
0x0000821a      83e201         and edx, 1
0x0000821d      48d1ed         shr rbp, 1
0x00008220      4801ea         add rdx, rbp
0x00008223      f6c304         test bl, 4
0x00008226      4e8d243a       lea r12, [rdx + r15]
0x0000822a      7405           je 0x8231
0x0000822c      4d89fc         mov r12, r15
0x0000822f      31d2           xor edx, edx
0x00008231      83e308         and ebx, 8
0x00008234      0f85fe000000   jne 0x8338
0x0000823a      4901ec         add r12, rbp
0x0000823d      488b442410     mov rax, qword [rsp + 0x10]
0x00008242      4885c0         test rax, rax
0x00008245      0f8486000000   je 0x82d1
0x0000824b      498d5c05ff     lea rbx, [r13 + rax - 1]
0x00008250      488d42ff       lea rax, [rdx - 1]
0x00008254      4939dd         cmp r13, rbx
0x00008257      7326           jae 0x827f
0x00008259      4885d2         test rdx, rdx
0x0000825c      7421           je 0x827f
0x0000825e      6690           nop
0x00008260      4983c501       add r13, 1
0x00008264      41c645ff20     mov byte [r13 - 1], 0x20                ; [0x20:1]=64 ; "@"
0x00008269      4c39eb         cmp rbx, r13
0x0000826c      400f97c6       seta sil
0x00008270      4885c0         test rax, rax
0x00008273      0f95c2         setne dl
0x00008276      4883e801       sub rax, 1
0x0000827a      4084d6         test sil, dl
0x0000827d      75e1           jne 0x8260
0x0000827f      4889da         mov rdx, rbx
0x00008282      41c6450000     mov byte [r13], 0
0x00008287      4c89f6         mov rsi, r14
0x0000828a      4c29ea         sub rdx, r13
0x0000828d      4c89ef         mov rdi, r13
0x00008290      4c39fa         cmp rdx, r15
0x00008293      490f47d7       cmova rdx, r15
0x00008297      e8e4a1ffff     call sym.imp.mempcpy
0x0000829c      4839c3         cmp rbx, rax
0x0000829f      488d55ff       lea rdx, [rbp - 1]
0x000082a3      7629           jbe 0x82ce
0x000082a5      4885ed         test rbp, rbp
0x000082a8      7424           je 0x82ce
0x000082aa      660f1f440000   nop word [rax + rax]
0x000082b0      4883c001       add rax, 1
0x000082b4      4885d2         test rdx, rdx
0x000082b7      c640ff20       mov byte [rax - 1], 0x20                ; [0x20:1]=64 ; "@"
0x000082bb      400f95c6       setne sil
0x000082bf      4839c3         cmp rbx, rax
0x000082c2      0f97c1         seta cl
0x000082c5      4883ea01       sub rdx, 1
0x000082c9      4084ce         test sil, cl
0x000082cc      75e2           jne 0x82b0
0x000082ce      c60000         mov byte [rax], 0
0x000082d1      488b3c24       mov rdi, qword [rsp]
0x000082d5      e8969dffff     call sym.imp.free
0x000082da      488b7c2408     mov rdi, qword [rsp + 8]
0x000082df      e88c9dffff     call sym.imp.free
0x000082e4      4883c438       add rsp, 0x38
0x000082e8      4c89e0         mov rax, r12
0x000082eb      5b             pop rbx
0x000082ec      5d             pop rbp
0x000082ed      415c           pop r12
0x000082ef      415d           pop r13
0x000082f1      415e           pop r14
0x000082f3      415f           pop r15
0x000082f5      c3             ret
0x000082f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008300      48c744240800.  mov qword [rsp + 8], 0
0x00008309      4839c5         cmp rbp, rax
0x0000830c      0f8348020000   jae 0x855a
0x00008312      4829e8         sub rax, rbp
0x00008315      4889c2         mov rdx, rax
0x00008318      4889e8         mov rax, rbp
0x0000831b      49890424       mov qword [r12], rax
0x0000831f      8b44241c       mov eax, dword [rsp + 0x1c]
0x00008323      85c0           test eax, eax
0x00008325      0f85e5feffff   jne 0x8210
0x0000832b      4889d5         mov rbp, rdx
0x0000832e      31d2           xor edx, edx
0x00008330      e9eefeffff     jmp 0x8223
0x00008335      0f1f00         nop dword [rax]
0x00008338      31ed           xor ebp, ebp
0x0000833a      e9fefeffff     jmp 0x823d
0x0000833f      90             nop
0x00008340      e85b9effff     call sym.imp.__ctype_get_mb_cur_max
0x00008345      4883f801       cmp rax, 1
0x00008349      0f868bfeffff   jbe 0x81da
0x0000834f      31d2           xor edx, edx
0x00008351      31ff           xor edi, edi
0x00008353      4c89f6         mov rsi, r14
0x00008356      e8d59dffff     call sym.imp.mbstowcs
0x0000835b      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000835f      752f           jne 0x8390
0x00008361      f6c301         test bl, 1
0x00008364      0f8570feffff   jne 0x81da
0x0000836a      48c704240000.  mov qword [rsp], 0
0x00008372      48c744240800.  mov qword [rsp + 8], 0
0x0000837b      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00008382      e94affffff     jmp 0x82d1
0x00008387      660f1f840000.  nop word [rax + rax]
0x00008390      488d6801       lea rbp, [rax + 1]
0x00008394      488d04ad0000.  lea rax, [rbp*4]
0x0000839c      4889c7         mov rdi, rax
0x0000839f      4889442420     mov qword [rsp + 0x20], rax
0x000083a4      e817a0ffff     call sym.imp.malloc
0x000083a9      4885c0         test rax, rax
0x000083ac      48890424       mov qword [rsp], rax
0x000083b0      0f847f010000   je 0x8535
0x000083b6      488b3c24       mov rdi, qword [rsp]
0x000083ba      4889ea         mov rdx, rbp
0x000083bd      4c89f6         mov rsi, r14
0x000083c0      e86b9dffff     call sym.imp.mbstowcs
0x000083c5      4885c0         test rax, rax
0x000083c8      0f8406010000   je 0x84d4
0x000083ce      488b0424       mov rax, qword [rsp]
0x000083d2      488b4c2420     mov rcx, qword [rsp + 0x20]
0x000083d7      c74408fc0000.  mov dword [rax + rcx - 4], 0
0x000083df      8b38           mov edi, dword [rax]
0x000083e1      4889c2         mov rdx, rax
0x000083e4      85ff           test edi, edi
0x000083e6      0f84f9000000   je 0x84e5
0x000083ec      c644242000     mov byte [rsp + 0x20], 0
0x000083f1      0f1f80000000.  nop dword [rax]
0x000083f8      4889542428     mov qword [rsp + 0x28], rdx
0x000083fd      e85ea1ffff     call sym.imp.iswprint
0x00008402      85c0           test eax, eax
0x00008404      488b542428     mov rdx, qword [rsp + 0x28]
0x00008409      750b           jne 0x8416
0x0000840b      c702fdff0000   mov dword [rdx], 0xfffd                 ; [0xfffd:4]=0
0x00008411      c644242001     mov byte [rsp + 0x20], 1
0x00008416      4883c204       add rdx, 4
0x0000841a      8b3a           mov edi, dword [rdx]
0x0000841c      85ff           test edi, edi
0x0000841e      75d8           jne 0x83f8
0x00008420      488b3c24       mov rdi, qword [rsp]
0x00008424      4889ee         mov rsi, rbp
0x00008427      e8e49cffff     call sym.imp.wcswidth
0x0000842c      807c242000     cmp byte [rsp + 0x20], 0
0x00008431      4863e8         movsxd rbp, eax
0x00008434      0f84be000000   je 0x84f8
0x0000843a      488b3424       mov rsi, qword [rsp]
0x0000843e      31d2           xor edx, edx
0x00008440      31ff           xor edi, edi
0x00008442      e8b9a0ffff     call sym.imp.wcstombs
0x00008447      4883c001       add rax, 1
0x0000844b      4889442420     mov qword [rsp + 0x20], rax
0x00008450      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00008455      e8669fffff     call sym.imp.malloc
0x0000845a      4885c0         test rax, rax
0x0000845d      4889442408     mov qword [rsp + 8], rax
0x00008462      0f84b8000000   je 0x8520
0x00008468      4c8b3c24       mov r15, qword [rsp]
0x0000846c      4d8b3424       mov r14, qword [r12]
0x00008470      418b3f         mov edi, dword [r15]
0x00008473      85ff           test edi, edi
0x00008475      0f84d4000000   je 0x854f
0x0000847b      31ed           xor ebp, ebp
0x0000847d      eb0f           jmp 0x848e
0x0000847f      90             nop
0x00008480      4983c704       add r15, 4
0x00008484      418b3f         mov edi, dword [r15]
0x00008487      4889d5         mov rbp, rdx
0x0000848a      85ff           test edi, edi
0x0000848c      7421           je 0x84af
0x0000848e      e81d9fffff     call sym.imp.wcwidth
0x00008493      83f8ff         cmp eax, 0xffffffff
0x00008496      4863d0         movsxd rdx, eax
0x00008499      750c           jne 0x84a7
0x0000849b      41c707fdff00.  mov dword [r15], 0xfffd                 ; [0xfffd:4]=0
0x000084a2      ba01000000     mov edx, 1
0x000084a7      4801ea         add rdx, rbp
0x000084aa      4939d6         cmp r14, rdx
0x000084ad      73d1           jae 0x8480
0x000084af      4c8b742408     mov r14, qword [rsp + 8]
0x000084b4      488b542420     mov rdx, qword [rsp + 0x20]
0x000084b9      488b3424       mov rsi, qword [rsp]
0x000084bd      41c707000000.  mov dword [r15], 0
0x000084c4      4c89f7         mov rdi, r14
0x000084c7      e834a0ffff     call sym.imp.wcstombs
0x000084cc      4989c7         mov r15, rax
0x000084cf      e91afdffff     jmp 0x81ee
0x000084d4      4c89fd         mov rbp, r15
0x000084d7      48c744240800.  mov qword [rsp + 8], 0
0x000084e0      e909fdffff     jmp 0x81ee
0x000084e5      488b3c24       mov rdi, qword [rsp]
0x000084e9      4889ee         mov rsi, rbp
0x000084ec      e81f9cffff     call sym.imp.wcswidth
0x000084f1      4863e8         movsxd rbp, eax
0x000084f4      0f1f4000       nop dword [rax]
0x000084f8      498b0424       mov rax, qword [r12]
0x000084fc      4839e8         cmp rax, rbp
0x000084ff      0f83fbfdffff   jae 0x8300
0x00008505      488b442408     mov rax, qword [rsp + 8]
0x0000850a      4883c001       add rax, 1
0x0000850e      4889442420     mov qword [rsp + 0x20], rax
0x00008513      e938ffffff     jmp 0x8450
0x00008518      0f1f84000000.  nop dword [rax + rax]
0x00008520      f6c301         test bl, 1
0x00008523      0f85c5fcffff   jne 0x81ee
0x00008529      49c7c4ffffff.  mov r12, 0xffffffffffffffff
0x00008530      e99cfdffff     jmp 0x82d1
0x00008535      f6c301         test bl, 1
0x00008538      4c89fd         mov rbp, r15
0x0000853b      48c744240800.  mov qword [rsp + 8], 0
0x00008544      0f85a4fcffff   jne 0x81ee
0x0000854a      e91bfeffff     jmp 0x836a
0x0000854f      4c8b3c24       mov r15, qword [rsp]
0x00008553      31ed           xor ebp, ebp
0x00008555      e955ffffff     jmp 0x84af
0x0000855a      4889e8         mov rax, rbp
0x0000855d      31d2           xor edx, edx
0x0000855f      e99cfcffff     jmp 0x8200
0x00008564      6690           nop
0x00008566      662e0f1f8400.  nop word cs:[rax + rax]
;-- ambsalign:
0x00008570      4157           push r15
0x00008572      4156           push r14
0x00008574      4989ff         mov r15, rdi
0x00008577      4155           push r13
0x00008579      4154           push r12
0x0000857b      4531e4         xor r12d, r12d
0x0000857e      55             push rbp
0x0000857f      53             push rbx
0x00008580      4889f5         mov rbp, rsi
0x00008583      4883ec18       sub rsp, 0x18
0x00008587      4c8b2e         mov r13, qword [rsi]
0x0000858a      89542408       mov dword [rsp + 8], edx
0x0000858e      894c240c       mov dword [rsp + 0xc], ecx
0x00008592      4c89e8         mov rax, r13
0x00008595      0f1f00         nop dword [rax]
0x00008598      488d5801       lea rbx, [rax + 1]
0x0000859c      4c89e7         mov rdi, r12
0x0000859f      4889de         mov rsi, rbx
0x000085a2      e8a99effff     call sym.imp.realloc
0x000085a7      4885c0         test rax, rax
0x000085aa      4989c6         mov r14, rax
0x000085ad      7441           je 0x85f0
0x000085af      448b4c240c     mov r9d, dword [rsp + 0xc]
0x000085b4      448b442408     mov r8d, dword [rsp + 8]
0x000085b9      4889e9         mov rcx, rbp
0x000085bc      4c896d00       mov qword [rbp], r13
0x000085c0      4889da         mov rdx, rbx
0x000085c3      4889c6         mov rsi, rax
0x000085c6      4c89ff         mov rdi, r15
0x000085c9      e8d2fbffff     call sym.mbsalign
0x000085ce      4883f8ff       cmp rax, 0xffffffffffffffff
0x000085d2      742c           je 0x8600
0x000085d4      4839c3         cmp rbx, rax
0x000085d7      4d89f4         mov r12, r14
0x000085da      76bc           jbe 0x8598
0x000085dc      4883c418       add rsp, 0x18
0x000085e0      4c89f0         mov rax, r14
0x000085e3      5b             pop rbx
0x000085e4      5d             pop rbp
0x000085e5      415c           pop r12
0x000085e7      415d           pop r13
0x000085e9      415e           pop r14
0x000085eb      415f           pop r15
0x000085ed      c3             ret
0x000085ee      6690           nop
0x000085f0      4c89e7         mov rdi, r12
0x000085f3      e8789affff     call sym.imp.free
0x000085f8      ebe2           jmp 0x85dc
0x000085fa      660f1f440000   nop word [rax + rax]
0x00008600      4c89f7         mov rdi, r14
0x00008603      4531f6         xor r14d, r14d
0x00008606      e8659affff     call sym.imp.free
0x0000860b      ebcf           jmp 0x85dc
0x0000860d      0f1f00         nop dword [rax]
;-- mbsnwidth:
0x00008610      4157           push r15                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x00008612      4156           push r14
0x00008614      4155           push r13
0x00008616      4154           push r12
0x00008618      4c8d2c37       lea r13, [rdi + rsi]                    ; ../coreutils-8.31/lib/mbswidth.c:60
0x0000861c      55             push rbp                                ; ../coreutils-8.31/lib/mbswidth.c:58
0x0000861d      53             push rbx
0x0000861e      4889fb         mov rbx, rdi
0x00008621      4883ec38       sub rsp, 0x38
0x00008625      64488b042528.  mov rax, qword fs:[0x28]
0x0000862e      4889442428     mov qword [rsp + 0x28], rax
0x00008633      31c0           xor eax, eax
0x00008635      8954240c       mov dword [rsp + 0xc], edx
0x00008639      e8629bffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbswidth.c:64
0x0000863e      4883f801       cmp rax, 1
0x00008642      0f8630010000   jbe 0x8778
0x00008648      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/mbswidth.c:63
0x0000864a      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x0000864d      0f83ea000000   jae 0x873d
0x00008653      4c8d642420     lea r12, [rsp + 0x20]                   ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00008658      4c8d74241c     lea r14, [rsp + 0x1c]
0x0000865d      eb1c           jmp 0x867b
0x0000865f      90             nop
0x00008660      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/mbswidth.c:67
0x00008662      7d07           jge 0x866b
0x00008664      83e820         sub eax, 0x20                           ; "@"
0x00008667      3c03           cmp al, 3
0x00008669      7726           ja 0x8691
0x0000866b      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/mbswidth.c:111
0x0000866f      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:112
0x00008672      4c39eb         cmp rbx, r13                            ; ../coreutils-8.31/lib/mbswidth.c:66
0x00008675      0f83c2000000   jae 0x873d
0x0000867b      0fb603         movzx eax, byte [rbx]                   ; ../coreutils-8.31/lib/mbswidth.c:67
0x0000867e      3c3f           cmp al, 0x3f
0x00008680      7ede           jle 0x8660
0x00008682      3c41           cmp al, 0x41
0x00008684      7c0b           jl 0x8691
0x00008686      3c5f           cmp al, 0x5f
0x00008688      7ee1           jle 0x866b
0x0000868a      83e861         sub eax, 0x61
0x0000868d      3c1d           cmp al, 0x1d
0x0000868f      76da           jbe 0x866b
0x00008691      49c704240000.  mov qword [r12], 0                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00008699      eb25           jmp 0x86c0
0x0000869b      0f1f440000     nop dword [rax + rax]
0x000086a0      b9ffffff7f     mov ecx, 0x7fffffff
0x000086a5      29e9           sub ecx, ebp
0x000086a7      39c1           cmp ecx, eax
0x000086a9      0f8c11010000   jl 0x87c0
0x000086af      01c5           add ebp, eax
0x000086b1      4c89e7         mov rdi, r12
0x000086b4      4c01fb         add rbx, r15
0x000086b7      e8949effff     call sym.imp.mbsinit
0x000086bc      85c0           test eax, eax
0x000086be      75b2           jne 0x8672                              ; ../coreutils-8.31/lib/mbswidth.c:-26
0x000086c0      4c89ea         mov rdx, r13
0x000086c3      4c89e1         mov rcx, r12                            ; ../coreutils-8.31/lib/mbswidth.c:-11
0x000086c6      4889de         mov rsi, rbx
0x000086c9      4829da         sub rdx, rbx                            ; ../coreutils-8.31/lib/mbswidth.c:6
0x000086cc      4c89f7         mov rdi, r14
0x000086cf      e8ec330000     call sym.rpl_mbrtowc
0x000086d4      4883f8ff       cmp rax, 0xffffffffffffffff
0x000086d8      4989c7         mov r15, rax
0x000086db      744b           je 0x8728
0x000086dd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000086e1      747d           je 0x8760
0x000086e3      8b7c241c       mov edi, dword [rsp + 0x1c]
0x000086e7      4885c0         test rax, rax
0x000086ea      b801000000     mov eax, 1
0x000086ef      4c0f44f8       cmove r15, rax
0x000086f3      e8b89cffff     call sym.imp.wcwidth
0x000086f8      85c0           test eax, eax
0x000086fa      79a4           jns 0x86a0
0x000086fc      f644240c02     test byte [rsp + 0xc], 2
0x00008701      7535           jne 0x8738
0x00008703      8b7c241c       mov edi, dword [rsp + 0x1c]
0x00008707      e8f499ffff     call sym.imp.iswcntrl
0x0000870c      85c0           test eax, eax
0x0000870e      75a1           jne 0x86b1                              ; ../coreutils-8.31/lib/mbswidth.c:-21
0x00008710      81fdffffff7f   cmp ebp, 0x7fffffff
0x00008716      0f84a4000000   je 0x87c0
0x0000871c      83c501         add ebp, 1                              ; ../coreutils-8.31/lib/mbswidth.c:-67
0x0000871f      eb90           jmp 0x86b1                              ; ../coreutils-8.31/lib/mbswidth.c:-175
0x00008721      0f1f80000000.  nop dword [rax]
0x00008728      f644240c01     test byte [rsp + 0xc], 1
0x0000872d      0f8438ffffff   je 0x866b
0x00008733      0f1f440000     nop dword [rax + rax]
0x00008738      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x0000873d      488b742428     mov rsi, qword [rsp + 0x28]
0x00008742      644833342528.  xor rsi, qword fs:[0x28]
0x0000874b      89e8           mov eax, ebp
0x0000874d      757b           jne 0x87ca
0x0000874f      4883c438       add rsp, 0x38
0x00008753      5b             pop rbx
0x00008754      5d             pop rbp
0x00008755      415c           pop r12
0x00008757      415d           pop r13
0x00008759      415e           pop r14
0x0000875b      415f           pop r15
0x0000875d      c3             ret
0x0000875e      6690           nop
0x00008760      f644240c01     test byte [rsp + 0xc], 1
0x00008765      75d1           jne 0x8738
0x00008767      83c501         add ebp, 1
0x0000876a      4c89eb         mov rbx, r13
0x0000876d      e900ffffff     jmp 0x8672
0x00008772      660f1f440000   nop word [rax + rax]
0x00008778      31ed           xor ebp, ebp
0x0000877a      4c39eb         cmp rbx, r13
0x0000877d      73be           jae 0x873d
0x0000877f      e80c9effff     call sym.imp.__ctype_b_loc
0x00008784      8b54240c       mov edx, dword [rsp + 0xc]
0x00008788      488b08         mov rcx, qword [rax]
0x0000878b      31ed           xor ebp, ebp
0x0000878d      83e202         and edx, 2
0x00008790      4883c301       add rbx, 1
0x00008794      0fb643ff       movzx eax, byte [rbx - 1]
0x00008798      0fb70441       movzx eax, word [rcx + rax*2]
0x0000879c      f6c440         test ah, 0x40                           ; segment.PHDR
0x0000879f      7508           jne 0x87a9
0x000087a1      85d2           test edx, edx
0x000087a3      7593           jne 0x8738
0x000087a5      a802           test al, 2
0x000087a7      750b           jne 0x87b4
0x000087a9      81fdffffff7f   cmp ebp, 0x7fffffff
0x000087af      748c           je 0x873d
0x000087b1      83c501         add ebp, 1
0x000087b4      4939dd         cmp r13, rbx
0x000087b7      75d7           jne 0x8790
0x000087b9      eb82           jmp 0x873d
0x000087bb      0f1f440000     nop dword [rax + rax]
0x000087c0      bdffffff7f     mov ebp, 0x7fffffff
0x000087c5      e973ffffff     jmp 0x873d
0x000087ca      e8219affff     call sym.imp.__stack_chk_fail
0x000087cf      90             nop
;-- gnu_mbswidth:
0x000087d0      55             push rbp
0x000087d1      53             push rbx
0x000087d2      89f5           mov ebp, esi
0x000087d4      4889fb         mov rbx, rdi
0x000087d7      4883ec08       sub rsp, 8
0x000087db      e8d099ffff     call sym.imp.strlen
0x000087e0      4883c408       add rsp, 8
0x000087e4      89ea           mov edx, ebp
0x000087e6      4889df         mov rdi, rbx
0x000087e9      5b             pop rbx
0x000087ea      5d             pop rbp
0x000087eb      4889c6         mov rsi, rax
0x000087ee      e91dfeffff     jmp sym.mbsnwidth
0x000087f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000087fd      0f1f00         nop dword [rax]
;-- set_program_name:
0x00008800      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00008803      53             push rbx
0x00008804      7477           je 0x887d                               ; ../coreutils-8.31/lib/progname.c:51
0x00008806      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000880b      4889fb         mov rbx, rdi
0x0000880e      e83d9affff     call sym.imp.strrchr
0x00008813      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00008816      7455           je 0x886d
0x00008818      4c8d4001       lea r8, [rax + 1]
0x0000881c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000881f      4829da         sub rdx, rbx
0x00008822      4883fa06       cmp rdx, 6
0x00008826      7e45           jle 0x886d
0x00008828      488d70fa       lea rsi, [rax - 6]
0x0000882c      488d3d957800.  lea rdi, str..libs                      ; 0x100c8 ; "/.libs/"
0x00008833      b907000000     mov ecx, 7
0x00008838      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000883a      0f97c2         seta dl
0x0000883d      80da00         sbb dl, 0
0x00008840      84d2           test dl, dl
0x00008842      7529           jne 0x886d
0x00008844      488d3d857800.  lea rdi, [0x000100d0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000884b      b903000000     mov ecx, 3
0x00008850      4c89c6         mov rsi, r8
0x00008853      4c89c3         mov rbx, r8
0x00008856      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008858      0f97c2         seta dl
0x0000885b      80da00         sbb dl, 0
0x0000885e      84d2           test dl, dl
0x00008860      750b           jne 0x886d
0x00008862      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00008866      48891d93ba20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x214300:8]=0
0x0000886d      48891db4bb20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x214428:8]=0
0x00008874      48891da5ba20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x214320:8]=0
0x0000887b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000887c      c3             ret
0x0000887d      488b0dbcba20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x00008884      488d3d057800.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x10090 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000888b      ba37000000     mov edx, 0x37                           ; '7'
0x00008890      be01000000     mov esi, 1
0x00008895      e8869cffff     call sym.imp.fwrite
0x0000889a      e80198ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000889f      90             nop
;-- gettext_quote.part.1:
0x000088a0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000088a1      53             push rbx
0x000088a2      4889fd         mov rbp, rdi
0x000088a5      89f3           mov ebx, esi
0x000088a7      4883ec08       sub rsp, 8
0x000088ab      e850420000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000088b0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000088b3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000088b6      80fa55         cmp dl, 0x55
0x000088b9      7475           je 0x8930
0x000088bb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000088be      7420           je 0x88e0
0x000088c0      488d05516700.  lea rax, [0x0000f018]                   ; "\""
0x000088c7      488d15388200.  lea rdx, [0x00010b06]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x000088ce      83fb09         cmp ebx, 9
0x000088d1      480f45c2       cmovne rax, rdx
0x000088d5      4883c408       add rsp, 8
0x000088d9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000088da      5d             pop rbp
0x000088db      c3             ret
0x000088dc      0f1f4000       nop dword [rax]
0x000088e0      0fb65001       movzx edx, byte [rax + 1]
0x000088e4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000088e7      80fa42         cmp dl, 0x42
0x000088ea      75d4           jne 0x88c0
0x000088ec      80780231       cmp byte [rax + 2], 0x31
0x000088f0      75ce           jne 0x88c0
0x000088f2      80780338       cmp byte [rax + 3], 0x38
0x000088f6      75c8           jne 0x88c0
0x000088f8      80780430       cmp byte [rax + 4], 0x30
0x000088fc      75c2           jne 0x88c0
0x000088fe      80780533       cmp byte [rax + 5], 0x33
0x00008902      75bc           jne 0x88c0
0x00008904      80780630       cmp byte [rax + 6], 0x30
0x00008908      75b6           jne 0x88c0
0x0000890a      80780700       cmp byte [rax + 7], 0
0x0000890e      75b0           jne 0x88c0
0x00008910      807d0060       cmp byte [rbp], 0x60
0x00008914      488d05c17700.  lea rax, [0x000100dc]
0x0000891b      488d15be7700.  lea rdx, [0x000100e0]
0x00008922      480f45c2       cmovne rax, rdx
0x00008926      4883c408       add rsp, 8
0x0000892a      5b             pop rbx
0x0000892b      5d             pop rbp
0x0000892c      c3             ret
0x0000892d      0f1f00         nop dword [rax]
0x00008930      0fb65001       movzx edx, byte [rax + 1]
0x00008934      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008937      80fa54         cmp dl, 0x54
0x0000893a      7584           jne 0x88c0
0x0000893c      0fb65002       movzx edx, byte [rax + 2]
0x00008940      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00008943      80fa46         cmp dl, 0x46
0x00008946      0f8574ffffff   jne 0x88c0
0x0000894c      8078032d       cmp byte [rax + 3], 0x2d
0x00008950      0f856affffff   jne 0x88c0
0x00008956      80780438       cmp byte [rax + 4], 0x38
0x0000895a      0f8560ffffff   jne 0x88c0
0x00008960      80780500       cmp byte [rax + 5], 0
0x00008964      0f8556ffffff   jne 0x88c0
0x0000896a      807d0060       cmp byte [rbp], 0x60
0x0000896e      488d055f7700.  lea rax, [0x000100d4]                   ; "\u2018"
0x00008975      488d155c7700.  lea rdx, [0x000100d8]                   ; "\u2019"
0x0000897c      480f45c2       cmovne rax, rdx
0x00008980      4883c408       add rsp, 8
0x00008984      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00008985      5d             pop rbp
0x00008986      c3             ret
0x00008987      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00008990      4157           push r15
0x00008992      4156           push r14
0x00008994      4589c7         mov r15d, r8d
0x00008997      4155           push r13
0x00008999      4154           push r12
0x0000899b      4989fe         mov r14, rdi
0x0000899e      55             push rbp
0x0000899f      53             push rbx
0x000089a0      4489cb         mov ebx, r9d
0x000089a3      4989f5         mov r13, rsi
0x000089a6      4889cd         mov rbp, rcx
0x000089a9      83e302         and ebx, 2
0x000089ac      4881ecb80000.  sub rsp, 0xb8
0x000089b3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000089bb      4889542410     mov qword [rsp + 0x10], rdx
0x000089c0      4489442408     mov dword [rsp + 8], r8d
0x000089c5      44894c2478     mov dword [rsp + 0x78], r9d
0x000089ca      4889442420     mov qword [rsp + 0x20], rax
0x000089cf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000089d7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000089dc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000089e4      4889442460     mov qword [rsp + 0x60], rax
0x000089e9      64488b042528.  mov rax, qword fs:[0x28]
0x000089f2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000089fa      31c0           xor eax, eax
0x000089fc      e89f97ffff     call sym.imp.__ctype_get_mb_cur_max
0x00008a01      4183ff0a       cmp r15d, 0xa
0x00008a05      4889442458     mov qword [rsp + 0x58], rax
0x00008a0a      0f87af110000   ja 0x9bbf
0x00008a10      488d0d297700.  lea rcx, [0x00010140]
0x00008a17      4489fa         mov edx, r15d
0x00008a1a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00008a1e      4801c8         add rax, rcx
0x00008a21      ffe0           jmp rax
0x00008a23      c644240e01     mov byte [rsp + 0xe], 1
0x00008a28      c644247c00     mov byte [rsp + 0x7c], 0
0x00008a2d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00008a30      48c744245000.  mov qword [rsp + 0x50], 0
0x00008a39      c644240f01     mov byte [rsp + 0xf], 1
0x00008a3e      c644240d00     mov byte [rsp + 0xd], 0
0x00008a43      488d05bc8000.  lea rax, [0x00010b06]                   ; "'"
0x00008a4a      48c744241801.  mov qword [rsp + 0x18], 1
0x00008a53      4531ff         xor r15d, r15d
0x00008a56      c74424080200.  mov dword [rsp + 8], 2
0x00008a5e      4889442448     mov qword [rsp + 0x48], rax
0x00008a63      4531db         xor r11d, r11d
0x00008a66      4889e8         mov rax, rbp
0x00008a69      4589e0         mov r8d, r12d
0x00008a6c      4c89dd         mov rbp, r11
0x00008a6f      4989c3         mov r11, rax
0x00008a72      660f1f440000   nop word [rax + rax]
0x00008a78      4939eb         cmp r11, rbp
0x00008a7b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00008a7f      4983fbff       cmp r11, 0xffffffffffffffff
0x00008a83      750d           jne 0x8a92
0x00008a85      488b442410     mov rax, qword [rsp + 0x10]
0x00008a8a      803c2800       cmp byte [rax + rbp], 0
0x00008a8e      410f95c4       setne r12b
0x00008a92      4584e4         test r12b, r12b
0x00008a95      0f8455060000   je 0x90f0
0x00008a9b      837c240802     cmp dword [rsp + 8], 2
0x00008aa0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00008aa5      4c8d0c2f       lea r9, [rdi + rbp]
0x00008aa9      0f95c0         setne al
0x00008aac      2244240d       and al, byte [rsp + 0xd]
0x00008ab0      4189c2         mov r10d, eax
0x00008ab3      0f84a7000000   je 0x8b60
0x00008ab9      488b442418     mov rax, qword [rsp + 0x18]
0x00008abe      4885c0         test rax, rax
0x00008ac1      0f8429040000   je 0x8ef0
0x00008ac7      4983fbff       cmp r11, 0xffffffffffffffff
0x00008acb      488d5c0500     lea rbx, [rbp + rax]
0x00008ad0      752e           jne 0x8b00
0x00008ad2      4883f801       cmp rax, 1
0x00008ad6      7628           jbe 0x8b00
0x00008ad8      4488442438     mov byte [rsp + 0x38], r8b
0x00008add      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00008ae2      4c894c2428     mov qword [rsp + 0x28], r9
0x00008ae7      e8c496ffff     call sym.imp.strlen
0x00008aec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00008af2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00008af8      4989c3         mov r11, rax
0x00008afb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00008b00      4c39db         cmp rbx, r11
0x00008b03      4488542428     mov byte [rsp + 0x28], r10b
0x00008b08      0f87b2050000   ja 0x90c0
0x00008b0e      488b542418     mov rdx, qword [rsp + 0x18]
0x00008b13      488b742448     mov rsi, qword [rsp + 0x48]
0x00008b18      4c89cf         mov rdi, r9
0x00008b1b      4c895c2440     mov qword [rsp + 0x40], r11
0x00008b20      4488442438     mov byte [rsp + 0x38], r8b
0x00008b25      4c894c2430     mov qword [rsp + 0x30], r9
0x00008b2a      e8d197ffff     call sym.imp.memcmp
0x00008b2f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00008b31      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00008b36      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00008b3c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00008b41      0f8579050000   jne 0x90c0
0x00008b47      807c240f00     cmp byte [rsp + 0xf], 0
0x00008b4c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008b52      0f857d0f0000   jne 0x9ad5
0x00008b58      0f1f84000000.  nop dword [rax + rax]
0x00008b60      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00008b64      80fb7e         cmp bl, 0x7e
0x00008b67      0f871b030000   ja 0x8e88
0x00008b6d      488d0df87500.  lea rcx, [0x0001016c]
0x00008b74      0fb6d3         movzx edx, bl
0x00008b77      48630491       movsxd rax, dword [rcx + rdx*4]
0x00008b7b      4801c8         add rax, rcx
0x00008b7e      ffe0           jmp rax
0x00008b80      4531d2         xor r10d, r10d
0x00008b83      4983fb01       cmp r11, 1
0x00008b87      0f95c0         setne al
0x00008b8a      4983fbff       cmp r11, 0xffffffffffffffff
0x00008b8e      750c           jne 0x8b9c
0x00008b90      488b442410     mov rax, qword [rsp + 0x10]
0x00008b95      80780100       cmp byte [rax + 1], 0
0x00008b99      0f95c0         setne al
0x00008b9c      837c240802     cmp dword [rsp + 8], 2
0x00008ba1      0f94c2         sete dl
0x00008ba4      84c0           test al, al
0x00008ba6      0f844c020000   je 0x8df8
0x00008bac      4531e4         xor r12d, r12d
0x00008baf      31c0           xor eax, eax
0x00008bb1      0f1f80000000.  nop dword [rax]
0x00008bb8      807c240d01     cmp byte [rsp + 0xd], 1
0x00008bbd      0f850f010000   jne 0x8cd2
0x00008bc3      84d2           test dl, dl
0x00008bc5      0f8507010000   jne 0x8cd2
0x00008bcb      488b742420     mov rsi, qword [rsp + 0x20]
0x00008bd0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00008bd3      7414           je 0x8be9
0x00008bd5      89da           mov edx, ebx
0x00008bd7      c0ea05         shr dl, 5
0x00008bda      0fb6d2         movzx edx, dl
0x00008bdd      8b1496         mov edx, dword [rsi + rdx*4]
0x00008be0      0fa3da         bt edx, ebx
0x00008be3      0f824a010000   jb 0x8d33
0x00008be9      4584d2         test r10b, r10b
0x00008bec      0f8541010000   jne 0x8d33
0x00008bf2      83f001         xor eax, 1
0x00008bf5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00008bf9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00008bfc      84c0           test al, al
0x00008bfe      7420           je 0x8c20                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00008c00      4d39fd         cmp r13, r15
0x00008c03      7605           jbe 0x8c0a
0x00008c05      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008c0a      498d4701       lea rax, [r15 + 1]
0x00008c0e      4939c5         cmp r13, rax
0x00008c11      7606           jbe 0x8c19
0x00008c13      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008c19      4983c702       add r15, 2
0x00008c1d      4531c0         xor r8d, r8d
0x00008c20      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00008c23      7304           jae 0x8c29                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00008c25      43881c3e       mov byte [r14 + r15], bl
0x00008c29      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00008c2e      4983c701       add r15, 1
0x00008c32      b800000000     mov eax, 0
0x00008c37      4584e4         test r12b, r12b
0x00008c3a      0f44f8         cmove edi, eax
0x00008c3d      40887c240e     mov byte [rsp + 0xe], dil
0x00008c42      e931feffff     jmp 0x8a78
0x00008c47      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00008c50      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00008c53      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00008c57      83f802         cmp eax, 2
0x00008c5a      0f84b8050000   je 0x9218
0x00008c60      83f805         cmp eax, 5
0x00008c63      0f846f050000   je 0x91d8
0x00008c69      83f802         cmp eax, 2
0x00008c6c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00008c71      0f94c2         sete dl
0x00008c74      4531e4         xor r12d, r12d
0x00008c77      31c0           xor eax, eax
0x00008c79      e93affffff     jmp 0x8bb8
0x00008c7e      6690           nop
0x00008c80      4531d2         xor r10d, r10d
0x00008c83      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00008c88      0f8402050000   je 0x9190
0x00008c8e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00008c93      31d2           xor edx, edx
0x00008c95      31c0           xor eax, eax
0x00008c97      bb27000000     mov ebx, 0x27                           ; '''
0x00008c9c      e917ffffff     jmp 0x8bb8
0x00008ca1      0f1f80000000.  nop dword [rax]
0x00008ca8      ba09000000     mov edx, 9
0x00008cad      bb74000000     mov ebx, 0x74                           ; 't'
0x00008cb2      837c240802     cmp dword [rsp + 8], 2
0x00008cb7      0f94c0         sete al
0x00008cba      2244240f       and al, byte [rsp + 0xf]
0x00008cbe      0f854a010000   jne 0x8e0e
0x00008cc4      807c240d00     cmp byte [rsp + 0xd], 0
0x00008cc9      7565           jne 0x8d30
0x00008ccb      89d3           mov ebx, edx
0x00008ccd      4531e4         xor r12d, r12d
0x00008cd0      31c0           xor eax, eax
0x00008cd2      807c240f00     cmp byte [rsp + 0xf], 0
0x00008cd7      0f85eefeffff   jne 0x8bcb
0x00008cdd      e907ffffff     jmp 0x8be9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00008ce2      660f1f440000   nop word [rax + rax]
0x00008ce8      ba08000000     mov edx, 8
0x00008ced      bb62000000     mov ebx, 0x62                           ; 'b'
0x00008cf2      ebd0           jmp 0x8cc4
0x00008cf4      0f1f4000       nop dword [rax]
0x00008cf8      837c240802     cmp dword [rsp + 8], 2
0x00008cfd      0f84cd030000   je 0x90d0
0x00008d03      807c240d00     cmp byte [rsp + 0xd], 0
0x00008d08      0f8412020000   je 0x8f20
0x00008d0e      807c240f00     cmp byte [rsp + 0xf], 0
0x00008d13      0f8407020000   je 0x8f20
0x00008d19      48837c241800   cmp qword [rsp + 0x18], 0
0x00008d1f      0f85b6030000   jne 0x90db
0x00008d25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00008d2a      660f1f440000   nop word [rax + rax]
0x00008d30      4531e4         xor r12d, r12d
0x00008d33      837c240802     cmp dword [rsp + 8], 2
0x00008d38      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00008d3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008d40      89d0           mov eax, edx
0x00008d42      0f8550080000   jne 0x9598
0x00008d48      4489c0         mov eax, r8d
0x00008d4b      83f001         xor eax, 1
0x00008d4e      20d0           and al, dl
0x00008d50      742f           je 0x8d81
0x00008d52      4d39fd         cmp r13, r15
0x00008d55      7605           jbe 0x8d5c
0x00008d57      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008d5c      498d5701       lea rdx, [r15 + 1]
0x00008d60      4939d5         cmp r13, rdx
0x00008d63      7606           jbe 0x8d6b
0x00008d65      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00008d6b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00008d6f      4939d5         cmp r13, rdx
0x00008d72      7606           jbe 0x8d7a
0x00008d74      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00008d7a      4983c703       add r15, 3
0x00008d7e      4189c0         mov r8d, eax
0x00008d81      4d39fd         cmp r13, r15
0x00008d84      7605           jbe 0x8d8b
0x00008d86      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00008d8b      4983c701       add r15, 1
0x00008d8f      4883c501       add rbp, 1
0x00008d93      e988feffff     jmp 0x8c20
0x00008d98      0f1f84000000.  nop dword [rax + rax]
0x00008da0      807c240d00     cmp byte [rsp + 0xd], 0
0x00008da5      0f85c8010000   jne 0x8f73
0x00008dab      31d2           xor edx, edx
0x00008dad      f644247801     test byte [rsp + 0x78], 1
0x00008db2      0f8413ffffff   je 0x8ccb
0x00008db8      4883c501       add rbp, 1
0x00008dbc      e9b7fcffff     jmp 0x8a78
0x00008dc1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00008dc8      837c240802     cmp dword [rsp + 8], 2
0x00008dcd      0f94c2         sete dl
0x00008dd0      31c0           xor eax, eax
0x00008dd2      e9e1fdffff     jmp 0x8bb8
0x00008dd7      660f1f840000.  nop word [rax + rax]
0x00008de0      ba07000000     mov edx, 7
0x00008de5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00008dea      e9d5feffff     jmp 0x8cc4
0x00008def      90             nop
0x00008df0      837c240802     cmp dword [rsp + 8], 2
0x00008df5      0f94c2         sete dl
0x00008df8      4885ed         test rbp, rbp
0x00008dfb      0f85abfdffff   jne 0x8bac
0x00008e01      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00008e06      20d0           and al, dl
0x00008e08      0f84aafdffff   je 0x8bb8
0x00008e0e      4c89dd         mov rbp, r11
0x00008e11      c74424080200.  mov dword [rsp + 8], 2
0x00008e19      e9fb060000     jmp 0x9519
0x00008e1e      6690           nop
0x00008e20      837c240802     cmp dword [rsp + 8], 2
0x00008e25      0f94c2         sete dl
0x00008e28      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00008e2b      ebd4           jmp 0x8e01
0x00008e2d      0f1f00         nop dword [rax]
0x00008e30      837c240802     cmp dword [rsp + 8], 2
0x00008e35      bb20000000     mov ebx, 0x20                           ; "@"
0x00008e3a      0f94c2         sete dl
0x00008e3d      ebc2           jmp 0x8e01
0x00008e3f      90             nop
0x00008e40      ba0d000000     mov edx, 0xd
0x00008e45      bb72000000     mov ebx, 0x72                           ; 'r'
0x00008e4a      e963feffff     jmp 0x8cb2
0x00008e4f      90             nop
0x00008e50      ba0c000000     mov edx, 0xc
0x00008e55      bb66000000     mov ebx, 0x66                           ; 'f'
0x00008e5a      e965feffff     jmp 0x8cc4
0x00008e5f      90             nop
0x00008e60      ba0b000000     mov edx, 0xb
0x00008e65      bb76000000     mov ebx, 0x76                           ; 'v'
0x00008e6a      e955feffff     jmp 0x8cc4
0x00008e6f      90             nop
0x00008e70      ba0a000000     mov edx, 0xa
0x00008e75      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00008e7a      e933feffff     jmp 0x8cb2
0x00008e7f      90             nop
0x00008e80      4531d2         xor r10d, r10d
0x00008e83      0f1f440000     nop dword [rax + rax]
0x00008e88      48837c245801   cmp qword [rsp + 0x58], 1
0x00008e8e      0f85a4030000   jne 0x9238
0x00008e94      4c895c2438     mov qword [rsp + 0x38], r11
0x00008e99      4488442430     mov byte [rsp + 0x30], r8b
0x00008e9e      4488542428     mov byte [rsp + 0x28], r10b
0x00008ea3      e8e896ffff     call sym.imp.__ctype_b_loc
0x00008ea8      488b08         mov rcx, qword [rax]
0x00008eab      0fb6d3         movzx edx, bl
0x00008eae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00008eb4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00008eba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00008ebf      bf01000000     mov edi, 1
0x00008ec4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00008ec8      66250040       and ax, 0x4000                          ; "H\x8bp\x18\xe8\x87\xe1\xff\xffH\x89\xc1I\x8b\a\x838\x02\x0f\x85X\xff\xff\xff\x8b\x05b\x03!"
0x00008ecc      410f95c4       setne r12b
0x00008ed0      0f94c0         sete al
0x00008ed3      2244240d       and al, byte [rsp + 0xd]
0x00008ed7      84c0           test al, al
0x00008ed9      0f8592090000   jne 0x9871
0x00008edf      837c240802     cmp dword [rsp + 8], 2
0x00008ee4      0f94c2         sete dl
0x00008ee7      e9ccfcffff     jmp 0x8bb8
0x00008eec      0f1f4000       nop dword [rax]
0x00008ef0      410fb619       movzx ebx, byte [r9]
0x00008ef4      80fb7e         cmp bl, 0x7e
0x00008ef7      7787           ja 0x8e80
0x00008ef9      488d0d687400.  lea rcx, [0x00010368]
0x00008f00      0fb6d3         movzx edx, bl
0x00008f03      48630491       movsxd rax, dword [rcx + rdx*4]
0x00008f07      4801c8         add rax, rcx
0x00008f0a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00008f0c      0f1f4000       nop dword [rax]
0x00008f10      4531d2         xor r10d, r10d
0x00008f13      807c240d00     cmp byte [rsp + 0xd], 0
0x00008f18      0f85f0fdffff   jne 0x8d0e
0x00008f1e      6690           nop
0x00008f20      ba5c000000     mov edx, 0x5c                           ; '\'
0x00008f25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00008f2a      e995fdffff     jmp 0x8cc4
0x00008f2f      90             nop
0x00008f30      ba0c000000     mov edx, 0xc
0x00008f35      4531d2         xor r10d, r10d
0x00008f38      bb66000000     mov ebx, 0x66                           ; 'f'
0x00008f3d      e982fdffff     jmp 0x8cc4
0x00008f42      660f1f440000   nop word [rax + rax]
0x00008f48      ba0a000000     mov edx, 0xa
0x00008f4d      4531d2         xor r10d, r10d
0x00008f50      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00008f55      e958fdffff     jmp 0x8cb2
0x00008f5a      660f1f440000   nop word [rax + rax]
0x00008f60      bb61000000     mov ebx, 0x61                           ; 'a'
0x00008f65      e9c6fdffff     jmp 0x8d30
0x00008f6a      660f1f440000   nop word [rax + rax]
0x00008f70      4531d2         xor r10d, r10d
0x00008f73      837c240802     cmp dword [rsp + 8], 2
0x00008f78      0f94c2         sete dl
0x00008f7b      807c240f00     cmp byte [rsp + 0xf], 0
0x00008f80      0f85940b0000   jne 0x9b1a
0x00008f86      4489c0         mov eax, r8d
0x00008f89      4c89f9         mov rcx, r15
0x00008f8c      83f001         xor eax, 1
0x00008f8f      20d0           and al, dl
0x00008f91      742d           je 0x8fc0
0x00008f93      4d39fd         cmp r13, r15
0x00008f96      7605           jbe 0x8f9d
0x00008f98      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00008f9d      498d4f01       lea rcx, [r15 + 1]
0x00008fa1      4939cd         cmp r13, rcx
0x00008fa4      7606           jbe 0x8fac
0x00008fa6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00008fac      498d4f02       lea rcx, [r15 + 2]
0x00008fb0      4939cd         cmp r13, rcx
0x00008fb3      0f8730060000   ja 0x95e9
0x00008fb9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00008fbd      4189c0         mov r8d, eax
0x00008fc0      4939cd         cmp r13, rcx
0x00008fc3      7605           jbe 0x8fca
0x00008fc5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00008fca      837c240802     cmp dword [rsp + 8], 2
0x00008fcf      4c8d7901       lea r15, [rcx + 1]
0x00008fd3      0f8400060000   je 0x95d9
0x00008fd9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00008fdd      4c39d8         cmp rax, r11
0x00008fe0      7319           jae 0x8ffb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00008fe2      488b442410     mov rax, qword [rsp + 0x10]
0x00008fe7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00008fec      88442428       mov byte [rsp + 0x28], al
0x00008ff0      83e830         sub eax, 0x30
0x00008ff3      3c09           cmp al, 9
0x00008ff5      0f862e080000   jbe 0x9829
0x00008ffb      4489e0         mov eax, r12d
0x00008ffe      bb30000000     mov ebx, 0x30                           ; '0'
0x00009003      4531e4         xor r12d, r12d
0x00009006      e9adfbffff     jmp 0x8bb8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000900b      0f1f440000     nop dword [rax + rax]
0x00009010      837c240802     cmp dword [rsp + 8], 2
0x00009015      4589d4         mov r12d, r10d
0x00009018      0f94c2         sete dl
0x0000901b      4531d2         xor r10d, r10d
0x0000901e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00009020      e993fbffff     jmp 0x8bb8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00009025      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00009028      837c240802     cmp dword [rsp + 8], 2
0x0000902d      0f94c2         sete dl
0x00009030      4531d2         xor r10d, r10d
0x00009033      e9c0fdffff     jmp 0x8df8
0x00009038      0f1f84000000.  nop dword [rax + rax]
0x00009040      837c240802     cmp dword [rsp + 8], 2
0x00009045      0f94c2         sete dl
0x00009048      4531d2         xor r10d, r10d
0x0000904b      4531e4         xor r12d, r12d
0x0000904e      e9aefdffff     jmp 0x8e01
0x00009053      0f1f440000     nop dword [rax + rax]
0x00009058      837c240802     cmp dword [rsp + 8], 2
0x0000905d      4589d4         mov r12d, r10d
0x00009060      bb20000000     mov ebx, 0x20                           ; "@"
0x00009065      0f94c2         sete dl
0x00009068      4531d2         xor r10d, r10d
0x0000906b      e991fdffff     jmp 0x8e01
0x00009070      ba0d000000     mov edx, 0xd
0x00009075      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00009078      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000907d      e930fcffff     jmp 0x8cb2
0x00009082      660f1f440000   nop word [rax + rax]
0x00009088      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000908d      e99efcffff     jmp 0x8d30
0x00009092      660f1f440000   nop word [rax + rax]
0x00009098      ba09000000     mov edx, 9
0x0000909d      4531d2         xor r10d, r10d
0x000090a0      bb74000000     mov ebx, 0x74                           ; 't'
0x000090a5      e908fcffff     jmp 0x8cb2
0x000090aa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000090b0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000090b5      e976fcffff     jmp 0x8d30
0x000090ba      660f1f440000   nop word [rax + rax]
0x000090c0      4531d2         xor r10d, r10d
0x000090c3      e998faffff     jmp 0x8b60
0x000090c8      0f1f84000000.  nop dword [rax + rax]
0x000090d0      807c240f00     cmp byte [rsp + 0xf], 0
0x000090d5      0f8565090000   jne 0x9a40
0x000090db      4883c501       add rbp, 1
0x000090df      4489c0         mov eax, r8d
0x000090e2      4531e4         xor r12d, r12d
0x000090e5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000090ea      e90dfbffff     jmp 0x8bfc
0x000090ef      90             nop
0x000090f0      837c240802     cmp dword [rsp + 8], 2
0x000090f5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000090fa      4589c4         mov r12d, r8d
0x000090fd      4c89dd         mov rbp, r11
0x00009100      0f94c2         sete dl
0x00009103      89d8           mov eax, ebx
0x00009105      4d85ff         test r15, r15
0x00009108      0f94c1         sete cl
0x0000910b      21d0           and eax, edx
0x0000910d      20c8           and al, cl
0x0000910f      0f85610a0000   jne 0x9b76                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00009115      89d8           mov eax, ebx
0x00009117      83f001         xor eax, 1
0x0000911a      20c2           and dl, al
0x0000911c      0f846a090000   je 0x9a8c
0x00009122      807c247c00     cmp byte [rsp + 0x7c], 0
0x00009127      0f845d090000   je 0x9a8a
0x0000912d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00009132      0f85f5090000   jne 0x9b2d
0x00009138      4d85ed         test r13, r13
0x0000913b      0f94c0         sete al
0x0000913e      48837c245000   cmp qword [rsp + 0x50], 0
0x00009144      0f95c2         setne dl
0x00009147      20d0           and al, dl
0x00009149      0f841d0a0000   je 0x9b6c
0x0000914f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00009154      488d1dab7900.  lea rbx, [0x00010b06]                   ; "'"
0x0000915b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000915f      c74424080200.  mov dword [rsp + 8], 2
0x00009167      41bf01000000   mov r15d, 1
0x0000916d      48c744241801.  mov qword [rsp + 0x18], 1
0x00009176      c644240f00     mov byte [rsp + 0xf], 0
0x0000917b      48895c2448     mov qword [rsp + 0x48], rbx
0x00009180      8844247c       mov byte [rsp + 0x7c], al
0x00009184      e9daf8ffff     jmp 0x8a63
0x00009189      0f1f80000000.  nop dword [rax]
0x00009190      807c240f00     cmp byte [rsp + 0xf], 0
0x00009195      0f85a5080000   jne 0x9a40
0x0000919b      4d85ed         test r13, r13
0x0000919e      0f84fc030000   je 0x95a0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000091a4      31d2           xor edx, edx
0x000091a6      48837c245000   cmp qword [rsp + 0x50], 0
0x000091ac      0f85ee030000   jne 0x95a0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000091b2      4c896c2450     mov qword [rsp + 0x50], r13
0x000091b7      4983c703       add r15, 3
0x000091bb      31c0           xor eax, eax
0x000091bd      448864247c     mov byte [rsp + 0x7c], r12b
0x000091c2      4531c0         xor r8d, r8d
0x000091c5      4989d5         mov r13, rdx
0x000091c8      bb27000000     mov ebx, 0x27                           ; '''
0x000091cd      e917faffff     jmp 0x8be9
0x000091d2      660f1f440000   nop word [rax + rax]
0x000091d8      f644247804     test byte [rsp + 0x78], 4
0x000091dd      7421           je 0x9200
0x000091df      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000091e3      4c39d9         cmp rcx, r11
0x000091e6      7318           jae 0x9200
0x000091e8      488b442410     mov rax, qword [rsp + 0x10]
0x000091ed      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000091f2      0f848a070000   je 0x9982
0x000091f8      0f1f84000000.  nop dword [rax + rax]
0x00009200      31d2           xor edx, edx
0x00009202      4531e4         xor r12d, r12d
0x00009205      31c0           xor eax, eax
0x00009207      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000920c      e9a7f9ffff     jmp 0x8bb8
0x00009211      0f1f80000000.  nop dword [rax]
0x00009218      807c240f00     cmp byte [rsp + 0xf], 0
0x0000921d      0f851d080000   jne 0x9a40
0x00009223      4531e4         xor r12d, r12d
0x00009226      31c0           xor eax, eax
0x00009228      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000922d      e9b7f9ffff     jmp 0x8be9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00009232      660f1f440000   nop word [rax + rax]
0x00009238      488d8424a000.  lea rax, [rsp + 0xa0]
0x00009240      4983fbff       cmp r11, 0xffffffffffffffff
0x00009244      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00009250      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00009255      752d           jne 0x9284
0x00009257      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000925c      4488442440     mov byte [rsp + 0x40], r8b
0x00009261      4488542438     mov byte [rsp + 0x38], r10b
0x00009266      4c894c2430     mov qword [rsp + 0x30], r9
0x0000926b      e8408fffff     call sym.imp.strlen
0x00009270      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00009276      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000927c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000927f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00009284      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000928c      31c9           xor ecx, ecx
0x0000928e      885c247e       mov byte [rsp + 0x7e], bl
0x00009292      448844247d     mov byte [rsp + 0x7d], r8b
0x00009297      4889cb         mov rbx, rcx
0x0000929a      4c898c248800.  mov qword [rsp + 0x88], r9
0x000092a2      4889442438     mov qword [rsp + 0x38], rax
0x000092a7      448854247f     mov byte [rsp + 0x7f], r10b
0x000092ac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000092b4      4c89742440     mov qword [rsp + 0x40], r14
0x000092b9      4c896c2470     mov qword [rsp + 0x70], r13
0x000092be      4c895c2430     mov qword [rsp + 0x30], r11
0x000092c3      488b442410     mov rax, qword [rsp + 0x10]
0x000092c8      4c8d741d00     lea r14, [rbp + rbx]
0x000092cd      488b542430     mov rdx, qword [rsp + 0x30]
0x000092d2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000092d7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000092dc      4e8d2c30       lea r13, [rax + r14]
0x000092e0      4c29f2         sub rdx, r14
0x000092e3      4c89ee         mov rsi, r13
0x000092e6      e8d5270000     call sym.rpl_mbrtowc
0x000092eb      4885c0         test rax, rax
0x000092ee      4989c7         mov r15, rax
0x000092f1      744e           je 0x9341
0x000092f3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000092f7      0f8418060000   je 0x9915
0x000092fd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00009301      0f849a050000   je 0x98a1
0x00009307      837c240802     cmp dword [rsp + 8], 2
0x0000930c      0f94c0         sete al
0x0000930f      2244240f       and al, byte [rsp + 0xf]
0x00009313      0f8597010000   jne 0x94b0
0x00009319      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00009320      e83b92ffff     call sym.imp.iswprint
0x00009325      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000932a      85c0           test eax, eax
0x0000932c      b800000000     mov eax, 0
0x00009331      440f44e0       cmove r12d, eax
0x00009335      4c01fb         add rbx, r15
0x00009338      e81392ffff     call sym.imp.mbsinit
0x0000933d      85c0           test eax, eax
0x0000933f      7482           je 0x92c3
0x00009341      4489e2         mov edx, r12d
0x00009344      4889df         mov rdi, rbx
0x00009347      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000934d      83f201         xor edx, 1
0x00009350      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00009355      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000935b      2254240d       and dl, byte [rsp + 0xd]
0x0000935f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00009367      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000936c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00009371      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00009376      4883ff01       cmp rdi, 1
0x0000937a      0f86fb050000   jbe 0x997b
0x00009380      4889f9         mov rcx, rdi
0x00009383      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00009385      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000938b      4801e9         add rcx, rbp
0x0000938e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00009393      e9b6000000     jmp 0x944e
0x00009398      0f1f84000000.  nop dword [rax + rax]
0x000093a0      837c240802     cmp dword [rsp + 8], 2
0x000093a5      0f94c0         sete al
0x000093a8      4584c9         test r9b, r9b
0x000093ab      0f85af040000   jne 0x9860
0x000093b1      4489c6         mov esi, r8d
0x000093b4      83f601         xor esi, 1
0x000093b7      4020f0         and al, sil
0x000093ba      742f           je 0x93eb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000093bc      4d39fd         cmp r13, r15
0x000093bf      7605           jbe 0x93c6
0x000093c1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000093c6      498d7701       lea rsi, [r15 + 1]
0x000093ca      4939f5         cmp r13, rsi
0x000093cd      7606           jbe 0x93d5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000093cf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000093d5      498d7702       lea rsi, [r15 + 2]
0x000093d9      4939f5         cmp r13, rsi
0x000093dc      7606           jbe 0x93e4
0x000093de      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000093e4      4983c703       add r15, 3
0x000093e8      4189c0         mov r8d, eax
0x000093eb      4d39fd         cmp r13, r15
0x000093ee      7605           jbe 0x93f5
0x000093f0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000093f5      498d4701       lea rax, [r15 + 1]
0x000093f9      4939c5         cmp r13, rax
0x000093fc      760d           jbe 0x940b
0x000093fe      89d8           mov eax, ebx
0x00009400      c0e806         shr al, 6
0x00009403      83c030         add eax, 0x30
0x00009406      4388443e01     mov byte [r14 + r15 + 1], al
0x0000940b      498d4702       lea rax, [r15 + 2]
0x0000940f      4939c5         cmp r13, rax
0x00009412      7610           jbe 0x9424
0x00009414      89d8           mov eax, ebx
0x00009416      c0e803         shr al, 3
0x00009419      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000941c      83c030         add eax, 0x30
0x0000941f      4388443e02     mov byte [r14 + r15 + 2], al
0x00009424      83e307         and ebx, 7
0x00009427      4883c501       add rbp, 1
0x0000942b      4983c703       add r15, 3
0x0000942f      83c330         add ebx, 0x30
0x00009432      4839cd         cmp rbp, rcx
0x00009435      0f83e5f7ffff   jae 0x8c20
0x0000943b      89d6           mov esi, edx
0x0000943d      4d39fd         cmp r13, r15
0x00009440      7604           jbe 0x9446
0x00009442      43881c3e       mov byte [r14 + r15], bl
0x00009446      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000944a      4983c701       add r15, 1
0x0000944e      84d2           test dl, dl
0x00009450      0f854affffff   jne 0x93a0
0x00009456      89f0           mov eax, esi
0x00009458      83f001         xor eax, 1
0x0000945b      4421c0         and eax, r8d
0x0000945e      4584d2         test r10b, r10b
0x00009461      740e           je 0x9471
0x00009463      4d39fd         cmp r13, r15
0x00009466      7605           jbe 0x946d
0x00009468      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000946d      4983c701       add r15, 1
0x00009471      4883c501       add rbp, 1
0x00009475      4839cd         cmp rbp, rcx
0x00009478      0f837ef7ffff   jae 0x8bfc
0x0000947e      84c0           test al, al
0x00009480      0f84f8030000   je 0x987e
0x00009486      4d39fd         cmp r13, r15
0x00009489      7605           jbe 0x9490
0x0000948b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00009490      498d4701       lea rax, [r15 + 1]
0x00009494      4939c5         cmp r13, rax
0x00009497      7606           jbe 0x949f
0x00009499      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000949f      4983c702       add r15, 2
0x000094a3      4531d2         xor r10d, r10d
0x000094a6      4531c0         xor r8d, r8d
0x000094a9      eb92           jmp 0x943d
0x000094ab      0f1f440000     nop dword [rax + rax]
0x000094b0      4983ff01       cmp r15, 1
0x000094b4      0f845ffeffff   je 0x9319
0x000094ba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000094bf      4a8d0c3f       lea rcx, [rdi + r15]
0x000094c3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000094c8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000094cc      eb0f           jmp 0x94dd
0x000094ce      6690           nop
0x000094d0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000094d4      4939d0         cmp r8, rdx
0x000094d7      0f843cfeffff   je 0x9319
0x000094dd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000094e0      83e95b         sub ecx, 0x5b
0x000094e3      80f921         cmp cl, 0x21
0x000094e6      77e8           ja 0x94d0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000094e8      be01000000     mov esi, 1
0x000094ed      48d3e6         shl rsi, cl
0x000094f0      4889f1         mov rcx, rsi
0x000094f3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000094fd      4885f1         test rcx, rsi
0x00009500      74ce           je 0x94d0
0x00009502      4c8b742440     mov r14, qword [rsp + 0x40]
0x00009507      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000950c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00009511      c74424080200.  mov dword [rsp + 8], 2
0x00009519      807c240d00     cmp byte [rsp + 0xd], 0
0x0000951e      7410           je 0x9530
0x00009520      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00009522      b804000000     mov eax, 4
0x00009527      0f44442408     cmove eax, dword [rsp + 8]
0x0000952c      89442408       mov dword [rsp + 8], eax
0x00009530      4883ec08       sub rsp, 8
0x00009534      4889e9         mov rcx, rbp
0x00009537      4c89ee         mov rsi, r13
0x0000953a      ff742468       push qword [rsp + 0x68]
0x0000953e      ff742478       push qword [rsp + 0x78]
0x00009542      4c89f7         mov rdi, r14
0x00009545      6a00           push 0
0x00009547      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000954f      448b442428     mov r8d, dword [rsp + 0x28]
0x00009554      488b542430     mov rdx, qword [rsp + 0x30]
0x00009559      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000955d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00009562      4883c420       add rsp, 0x20
0x00009566      4989c7         mov r15, rax
0x00009569      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00009571      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000957a      4c89f8         mov rax, r15
0x0000957d      0f8500060000   jne 0x9b83
0x00009583      4881c4b80000.  add rsp, 0xb8
0x0000958a      5b             pop rbx
0x0000958b      5d             pop rbp
0x0000958c      415c           pop r12
0x0000958e      415d           pop r13
0x00009590      415e           pop r14
0x00009592      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00009594      c3             ret
0x00009595      0f1f00         nop dword [rax]
0x00009598      4c89dd         mov rbp, r11
0x0000959b      e979ffffff     jmp 0x9519
0x000095a0      4d39fd         cmp r13, r15
0x000095a3      7605           jbe 0x95aa
0x000095a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000095aa      498d4701       lea rax, [r15 + 1]
0x000095ae      4939c5         cmp r13, rax
0x000095b1      7606           jbe 0x95b9
0x000095b3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000095b9      498d4702       lea rax, [r15 + 2]
0x000095bd      4939c5         cmp r13, rax
0x000095c0      0f86ec050000   jbe 0x9bb2
0x000095c6      4c89ea         mov rdx, r13
0x000095c9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000095cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000095d4      e9d9fbffff     jmp 0x91b2
0x000095d9      4489e0         mov eax, r12d
0x000095dc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000095e1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000095e4      e900f6ffff     jmp 0x8be9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000095e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000095ef      e9c5f9ffff     jmp 0x8fb9
0x000095f4      85db           test ebx, ebx
0x000095f6      0f8527f4ffff   jne 0x8a23
0x000095fc      c644240d01     mov byte [rsp + 0xd], 1
0x00009601      4d85ed         test r13, r13
0x00009604      0f8590050000   jne 0x9b9a
0x0000960a      488d05f57400.  lea rax, [0x00010b06]                   ; "'"
0x00009611      48c744245000.  mov qword [rsp + 0x50], 0
0x0000961a      c644240e01     mov byte [rsp + 0xe], 1
0x0000961f      c644247c00     mov byte [rsp + 0x7c], 0
0x00009624      4531e4         xor r12d, r12d
0x00009627      c644240f00     mov byte [rsp + 0xf], 0
0x0000962c      48c744241801.  mov qword [rsp + 0x18], 1
0x00009635      4889442448     mov qword [rsp + 0x48], rax
0x0000963a      41bf01000000   mov r15d, 1
0x00009640      c74424080200.  mov dword [rsp + 8], 2
0x00009648      e916f4ffff     jmp 0x8a63                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000964d      0f1f00         nop dword [rax]
0x00009650      85db           test ebx, ebx
0x00009652      0f85f5030000   jne 0x9a4d
0x00009658      4d85ed         test r13, r13
0x0000965b      0f8425020000   je 0x9886
0x00009661      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00009665      c644240e01     mov byte [rsp + 0xe], 1
0x0000966a      4531e4         xor r12d, r12d
0x0000966d      c644247c00     mov byte [rsp + 0x7c], 0
0x00009672      48c744245000.  mov qword [rsp + 0x50], 0
0x0000967b      488d05965900.  lea rax, [0x0000f018]                   ; "\""
0x00009682      c644240f00     mov byte [rsp + 0xf], 0
0x00009687      c644240d01     mov byte [rsp + 0xd], 1
0x0000968c      48c744241801.  mov qword [rsp + 0x18], 1
0x00009695      41bf01000000   mov r15d, 1
0x0000969b      4889442448     mov qword [rsp + 0x48], rax
0x000096a0      e9bef3ffff     jmp 0x8a63
0x000096a5      488d056c5900.  lea rax, [0x0000f018]                   ; "\""
0x000096ac      c644240e01     mov byte [rsp + 0xe], 1
0x000096b1      c644247c00     mov byte [rsp + 0x7c], 0
0x000096b6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000096b9      48c744245000.  mov qword [rsp + 0x50], 0
0x000096c2      c644240f01     mov byte [rsp + 0xf], 1
0x000096c7      c644240d01     mov byte [rsp + 0xd], 1
0x000096cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000096d5      4531ff         xor r15d, r15d
0x000096d8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000096dd      c74424080500.  mov dword [rsp + 8], 5
0x000096e5      e979f3ffff     jmp 0x8a63
0x000096ea      c644240e01     mov byte [rsp + 0xe], 1
0x000096ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000096f4      4531e4         xor r12d, r12d
0x000096f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00009700      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00009705      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00009708      c644240d01     mov byte [rsp + 0xd], 1
0x0000970d      48c744241800.  mov qword [rsp + 0x18], 0
0x00009716      48c744244800.  mov qword [rsp + 0x48], 0
0x0000971f      e93ff3ffff     jmp 0x8a63
0x00009724      837c24080a     cmp dword [rsp + 8], 0xa
0x00009729      7456           je 0x9781
0x0000972b      488d35b16900.  lea rsi, [0x000100e3]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00009732      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00009734      ba05000000     mov edx, 5
0x00009739      e8528affff     call sym.imp.dcgettext
0x0000973e      4889c1         mov rcx, rax
0x00009741      4889442468     mov qword [rsp + 0x68], rax
0x00009746      488d05966900.  lea rax, [0x000100e3]                   ; "`"
0x0000974d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00009750      0f8498030000   je 0x9aee
0x00009756      488d35a97300.  lea rsi, [0x00010b06]                   ; "'"
0x0000975d      31ff           xor edi, edi
0x0000975f      ba05000000     mov edx, 5
0x00009764      e8278affff     call sym.imp.dcgettext
0x00009769      4889c1         mov rcx, rax
0x0000976c      4889442460     mov qword [rsp + 0x60], rax
0x00009771      488d058e7300.  lea rax, [0x00010b06]                   ; "'"
0x00009778      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000977b      0f8483030000   je 0x9b04
0x00009781      4531ff         xor r15d, r15d
0x00009784      85db           test ebx, ebx
0x00009786      0f84c1010000   je 0x994d
0x0000978c      85db           test ebx, ebx
0x0000978e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00009793      0f9544240f     setne byte [rsp + 0xf]
0x00009798      4531e4         xor r12d, r12d
0x0000979b      4889df         mov rdi, rbx
0x0000979e      e80d8affff     call sym.imp.strlen
0x000097a3      48895c2448     mov qword [rsp + 0x48], rbx
0x000097a8      4889442418     mov qword [rsp + 0x18], rax
0x000097ad      c644240e01     mov byte [rsp + 0xe], 1
0x000097b2      c644247c00     mov byte [rsp + 0x7c], 0
0x000097b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000097c0      c644240d01     mov byte [rsp + 0xd], 1
0x000097c5      e999f2ffff     jmp 0x8a63
0x000097ca      c644240e01     mov byte [rsp + 0xe], 1
0x000097cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000097d4      4531e4         xor r12d, r12d
0x000097d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000097e0      c644240f00     mov byte [rsp + 0xf], 0
0x000097e5      4531ff         xor r15d, r15d
0x000097e8      c644240d00     mov byte [rsp + 0xd], 0
0x000097ed      48c744241800.  mov qword [rsp + 0x18], 0
0x000097f6      48c744244800.  mov qword [rsp + 0x48], 0
0x000097ff      e95ff2ffff     jmp 0x8a63
0x00009804      c644240e01     mov byte [rsp + 0xe], 1
0x00009809      c644247c00     mov byte [rsp + 0x7c], 0
0x0000980e      4531e4         xor r12d, r12d
0x00009811      48c744245000.  mov qword [rsp + 0x50], 0
0x0000981a      c644240f01     mov byte [rsp + 0xf], 1
0x0000981f      c644240d01     mov byte [rsp + 0xd], 1
0x00009824      e91af2ffff     jmp 0x8a43
0x00009829      4d39fd         cmp r13, r15
0x0000982c      7605           jbe 0x9833
0x0000982e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00009833      488d4102       lea rax, [rcx + 2]
0x00009837      4939c5         cmp r13, rax
0x0000983a      7606           jbe 0x9842
0x0000983c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00009842      4489e0         mov eax, r12d
0x00009845      4c8d7903       lea r15, [rcx + 3]
0x00009849      4531e4         xor r12d, r12d
0x0000984c      bb30000000     mov ebx, 0x30                           ; '0'
0x00009851      e962f3ffff     jmp 0x8bb8
0x00009856      662e0f1f8400.  nop word cs:[rax + rax]
0x00009860      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00009865      4c89dd         mov rbp, r11
0x00009868      885c240d       mov byte [rsp + 0xd], bl
0x0000986c      e9a8fcffff     jmp 0x9519
0x00009871      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00009876      4531e4         xor r12d, r12d
0x00009879      e902fbffff     jmp 0x9380
0x0000987e      4531d2         xor r10d, r10d
0x00009881      e9b7fbffff     jmp 0x943d
0x00009886      48c744245000.  mov qword [rsp + 0x50], 0
0x0000988f      c644240e01     mov byte [rsp + 0xe], 1
0x00009894      4531e4         xor r12d, r12d
0x00009897      c644247c00     mov byte [rsp + 0x7c], 0
0x0000989c      e9dafdffff     jmp 0x967b
0x000098a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000098a6      4c89f6         mov rsi, r14
0x000098a9      4c89e9         mov rcx, r13
0x000098ac      4889d8         mov rax, rbx
0x000098af      4889df         mov rdi, rbx
0x000098b2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000098b8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000098bd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000098c5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000098c8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000098ce      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000098d6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000098db      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000098e0      7326           jae 0x9908
0x000098e2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000098e5      7510           jne 0x98f7
0x000098e7      eb1f           jmp 0x9908
0x000098e9      0f1f80000000.  nop dword [rax]
0x000098f0      41803c0100     cmp byte [r9 + rax], 0
0x000098f5      740e           je 0x9905
0x000098f7      4883c001       add rax, 1
0x000098fb      488d540500     lea rdx, [rbp + rax]
0x00009900      4939d3         cmp r11, rdx
0x00009903      77eb           ja 0x98f0
0x00009905      4889c7         mov rdi, rax
0x00009908      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000990d      4531e4         xor r12d, r12d
0x00009910      e961faffff     jmp 0x9376
0x00009915      4889df         mov rdi, rbx
0x00009918      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000991e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00009923      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00009929      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00009931      4531e4         xor r12d, r12d
0x00009934      4c8b742440     mov r14, qword [rsp + 0x40]
0x00009939      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000993e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00009943      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00009948      e929faffff     jmp 0x9376
0x0000994d      488b542468     mov rdx, qword [rsp + 0x68]
0x00009952      0fb602         movzx eax, byte [rdx]
0x00009955      84c0           test al, al
0x00009957      0f842ffeffff   je 0x978c
0x0000995d      0f1f00         nop dword [rax]
0x00009960      4d39fd         cmp r13, r15
0x00009963      7604           jbe 0x9969
0x00009965      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00009969      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000996d      420fb6043a     movzx eax, byte [rdx + r15]
0x00009972      84c0           test al, al
0x00009974      75ea           jne 0x9960
0x00009976      e911feffff     jmp 0x978c
0x0000997b      89d0           mov eax, edx
0x0000997d      e955f5ffff     jmp 0x8ed7
0x00009982      0fb61c08       movzx ebx, byte [rax + rcx]
0x00009986      80fb3e         cmp bl, 0x3e
0x00009989      0f8771f8ffff   ja 0x9200
0x0000998f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00009999      480fa3d8       bt rax, rbx
0x0000999d      0f835df8ffff   jae 0x9200
0x000099a3      807c240f00     cmp byte [rsp + 0xf], 0
0x000099a8      0f85e4010000   jne 0x9b92                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000099ae      4d39fd         cmp r13, r15
0x000099b1      7605           jbe 0x99b8
0x000099b3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000099b8      498d4701       lea rax, [r15 + 1]
0x000099bc      4939c5         cmp r13, rax
0x000099bf      7606           jbe 0x99c7
0x000099c1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000099c7      498d4702       lea rax, [r15 + 2]
0x000099cb      4939c5         cmp r13, rax
0x000099ce      7606           jbe 0x99d6
0x000099d0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000099d6      498d4703       lea rax, [r15 + 3]
0x000099da      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000099dd      7606           jbe 0x99e5
0x000099df      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000099e5      4983c704       add r15, 4
0x000099e9      31d2           xor edx, edx
0x000099eb      4531e4         xor r12d, r12d
0x000099ee      31c0           xor eax, eax
0x000099f0      4889cd         mov rbp, rcx
0x000099f3      e9c0f1ffff     jmp 0x8bb8
0x000099f8      85db           test ebx, ebx
0x000099fa      0f8488010000   je 0x9b88
0x00009a00      488d05ff7000.  lea rax, [0x00010b06]                   ; "'"
0x00009a07      c644240e01     mov byte [rsp + 0xe], 1
0x00009a0c      c644247c00     mov byte [rsp + 0x7c], 0
0x00009a11      4531e4         xor r12d, r12d
0x00009a14      48c744245000.  mov qword [rsp + 0x50], 0
0x00009a1d      c644240f01     mov byte [rsp + 0xf], 1
0x00009a22      c644240d00     mov byte [rsp + 0xd], 0
0x00009a27      48c744241801.  mov qword [rsp + 0x18], 1
0x00009a30      4531ff         xor r15d, r15d
0x00009a33      4889442448     mov qword [rsp + 0x48], rax
0x00009a38      e926f0ffff     jmp 0x8a63
0x00009a3d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00009a40      4c89dd         mov rbp, r11
0x00009a43      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00009a48      e9ccfaffff     jmp 0x9519
0x00009a4d      488d05c45500.  lea rax, [0x0000f018]                   ; "\""
0x00009a54      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00009a59      c644247c00     mov byte [rsp + 0x7c], 0
0x00009a5e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00009a61      48c744245000.  mov qword [rsp + 0x50], 0
0x00009a6a      c644240f01     mov byte [rsp + 0xf], 1
0x00009a6f      c644240d01     mov byte [rsp + 0xd], 1
0x00009a74      48c744241801.  mov qword [rsp + 0x18], 1
0x00009a7d      4531ff         xor r15d, r15d
0x00009a80      4889442448     mov qword [rsp + 0x48], rax
0x00009a85      e9d9efffff     jmp 0x8a63
0x00009a8a      89d0           mov eax, edx
0x00009a8c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00009a91      4885db         test rbx, rbx
0x00009a94      742c           je 0x9ac2
0x00009a96      84c0           test al, al
0x00009a98      7428           je 0x9ac2
0x00009a9a      0fb60b         movzx ecx, byte [rbx]
0x00009a9d      4889d8         mov rax, rbx
0x00009aa0      84c9           test cl, cl
0x00009aa2      741e           je 0x9ac2
0x00009aa4      4c89fa         mov rdx, r15
0x00009aa7      4c29f8         sub rax, r15
0x00009aaa      4939d5         cmp r13, rdx
0x00009aad      7604           jbe 0x9ab3
0x00009aaf      41880c16       mov byte [r14 + rdx], cl
0x00009ab3      4883c201       add rdx, 1
0x00009ab7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00009abb      84c9           test cl, cl
0x00009abd      75eb           jne 0x9aaa
0x00009abf      4989d7         mov r15, rdx
0x00009ac2      4d39fd         cmp r13, r15
0x00009ac5      0f869efaffff   jbe 0x9569
0x00009acb      43c6043e00     mov byte [r14 + r15], 0
0x00009ad0      e994faffff     jmp 0x9569
0x00009ad5      837c240802     cmp dword [rsp + 8], 2
0x00009ada      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00009adf      4c89dd         mov rbp, r11
0x00009ae2      0f94c0         sete al
0x00009ae5      885c240d       mov byte [rsp + 0xd], bl
0x00009ae9      e92bfaffff     jmp 0x9519
0x00009aee      8b742408       mov esi, dword [rsp + 8]
0x00009af2      4889cf         mov rdi, rcx
0x00009af5      e8a6edffff     call sym.gettext_quote.part.1
0x00009afa      4889442468     mov qword [rsp + 0x68], rax
0x00009aff      e952fcffff     jmp 0x9756
0x00009b04      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00009b08      4889cf         mov rdi, rcx
0x00009b0b      e890edffff     call sym.gettext_quote.part.1
0x00009b10      4889442460     mov qword [rsp + 0x60], rax
0x00009b15      e967fcffff     jmp 0x9781
0x00009b1a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00009b1f      4c89dd         mov rbp, r11
0x00009b22      89d0           mov eax, edx
0x00009b24      885c240d       mov byte [rsp + 0xd], bl
0x00009b28      e9ecf9ffff     jmp 0x9519
0x00009b2d      4883ec08       sub rsp, 8
0x00009b31      41b805000000   mov r8d, 5
0x00009b37      4c89d9         mov rcx, r11
0x00009b3a      ff742468       push qword [rsp + 0x68]
0x00009b3e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00009b42      4c89f7         mov rdi, r14
0x00009b45      ff742438       push qword [rsp + 0x38]
0x00009b49      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00009b51      488b542430     mov rdx, qword [rsp + 0x30]
0x00009b56      488b742470     mov rsi, qword [rsp + 0x70]
0x00009b5b      e830eeffff     call sym.quotearg_buffer_restyled
0x00009b60      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00009b64      4989c7         mov r15, rax
0x00009b67      e9fdf9ffff     jmp 0x9569
0x00009b6c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00009b71      e916ffffff     jmp 0x9a8c
0x00009b76      c74424080200.  mov dword [rsp + 8], 2
0x00009b7e      e996f9ffff     jmp 0x9519
0x00009b83      e86886ffff     call sym.imp.__stack_chk_fail
0x00009b88      c644240d00     mov byte [rsp + 0xd], 0
0x00009b8d      e96ffaffff     jmp 0x9601
0x00009b92      4c89dd         mov rbp, r11
0x00009b95      e996f9ffff     jmp 0x9530
0x00009b9a      c644240e01     mov byte [rsp + 0xe], 1
0x00009b9f      31c0           xor eax, eax
0x00009ba1      4531e4         xor r12d, r12d
0x00009ba4      48c744245000.  mov qword [rsp + 0x50], 0
0x00009bad      e9a2f5ffff     jmp 0x9154
0x00009bb2      4c89ea         mov rdx, r13
0x00009bb5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00009bba      e9f3f5ffff     jmp 0x91b2
0x00009bbf      e8dc84ffff     call sym.imp.abort
0x00009bc4      6690           nop
0x00009bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00009bd0      4157           push r15
0x00009bd2      4156           push r14
0x00009bd4      4c63ff         movsxd r15, edi
0x00009bd7      4155           push r13
0x00009bd9      4154           push r12
0x00009bdb      4989d6         mov r14, rdx
0x00009bde      55             push rbp
0x00009bdf      53             push rbx
0x00009be0      4889cd         mov rbp, rcx
0x00009be3      4883ec28       sub rsp, 0x28
0x00009be7      4889742408     mov qword [rsp + 8], rsi
0x00009bec      e8bf84ffff     call sym.imp.__errno_location
0x00009bf1      4989c5         mov r13, rax
0x00009bf4      8b00           mov eax, dword [rax]
0x00009bf6      4585ff         test r15d, r15d
0x00009bf9      488b1dc0a620.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x2142c0:8]=0x2142d0 obj.slotvec0
0x00009c00      89442418       mov dword [rsp + 0x18], eax
0x00009c04      0f8867010000   js 0x9d71
0x00009c0a      44393da7a620.  cmp dword [obj.nslots], r15d            ; [0x2142b8:4]=1
0x00009c11      7f62           jg 0x9c75
0x00009c13      4181ffffffff.  cmp r15d, 0x7fffffff
0x00009c1a      0f8456010000   je 0x9d76
0x00009c20      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00009c24      488d05a5a620.  lea rax, obj.slotvec0                   ; 0x2142d0
0x00009c2b      4963f4         movsxd rsi, r12d
0x00009c2e      48c1e604       shl rsi, 4
0x00009c32      4839c3         cmp rbx, rax
0x00009c35      0f8415010000   je 0x9d50
0x00009c3b      4889df         mov rdi, rbx
0x00009c3e      e8ed110000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00009c43      4889c3         mov rbx, rax
0x00009c46      48890573a620.  mov qword [obj.slotvec], rax            ; [0x2142c0:8]=0x2142d0 obj.slotvec0
0x00009c4d      48633d64a620.  movsxd rdi, dword [obj.nslots]          ; [0x2142b8:4]=1
0x00009c54      4489e2         mov edx, r12d
0x00009c57      31f6           xor esi, esi
0x00009c59      29fa           sub edx, edi
0x00009c5b      48c1e704       shl rdi, 4
0x00009c5f      4863d2         movsxd rdx, edx
0x00009c62      4801df         add rdi, rbx
0x00009c65      48c1e204       shl rdx, 4
0x00009c69      e83286ffff     call sym.imp.memset
0x00009c6e      44892543a620.  mov dword [obj.nslots], r12d            ; [0x2142b8:4]=1
0x00009c75      8b4504         mov eax, dword [rbp + 4]
0x00009c78      49c1e704       shl r15, 4
0x00009c7c      4883ec08       sub rsp, 8
0x00009c80      4c01fb         add rbx, r15
0x00009c83      4c8d7d08       lea r15, [rbp + 8]
0x00009c87      448b4500       mov r8d, dword [rbp]
0x00009c8b      4c8b1b         mov r11, qword [rbx]
0x00009c8e      4c8b6308       mov r12, qword [rbx + 8]
0x00009c92      4c89f1         mov rcx, r14
0x00009c95      83c801         or eax, 1
0x00009c98      89442424       mov dword [rsp + 0x24], eax
0x00009c9c      ff7530         push qword [rbp + 0x30]
0x00009c9f      4189c1         mov r9d, eax
0x00009ca2      ff7528         push qword [rbp + 0x28]
0x00009ca5      4157           push r15
0x00009ca7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00009caa      488b542428     mov rdx, qword [rsp + 0x28]
0x00009caf      4c89e7         mov rdi, r12
0x00009cb2      4c895c2430     mov qword [rsp + 0x30], r11
0x00009cb7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00009cbc      4883c420       add rsp, 0x20
0x00009cc0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00009cc5      4939c3         cmp r11, rax
0x00009cc8      7767           ja 0x9d31
0x00009cca      488d7001       lea rsi, [rax + 1]
0x00009cce      488d056ba720.  lea rax, obj.slot0                      ; 0x214440
0x00009cd5      4939c4         cmp r12, rax
0x00009cd8      488933         mov qword [rbx], rsi
0x00009cdb      7412           je 0x9cef
0x00009cdd      4c89e7         mov rdi, r12
0x00009ce0      4889742410     mov qword [rsp + 0x10], rsi
0x00009ce5      e88683ffff     call sym.imp.free
0x00009cea      488b742410     mov rsi, qword [rsp + 0x10]
0x00009cef      4889f7         mov rdi, rsi
0x00009cf2      4889742410     mov qword [rsp + 0x10], rsi
0x00009cf7      e8d4100000     call sym.xmalloc
0x00009cfc      4883ec08       sub rsp, 8
0x00009d00      48894308       mov qword [rbx + 8], rax
0x00009d04      448b4500       mov r8d, dword [rbp]
0x00009d08      ff7530         push qword [rbp + 0x30]
0x00009d0b      ff7528         push qword [rbp + 0x28]
0x00009d0e      4c89f1         mov rcx, r14
0x00009d11      4157           push r15
0x00009d13      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00009d18      4889c7         mov rdi, rax
0x00009d1b      488b542428     mov rdx, qword [rsp + 0x28]
0x00009d20      488b742430     mov rsi, qword [rsp + 0x30]
0x00009d25      4989c4         mov r12, rax
0x00009d28      e863ecffff     call sym.quotearg_buffer_restyled
0x00009d2d      4883c420       add rsp, 0x20
0x00009d31      8b442418       mov eax, dword [rsp + 0x18]
0x00009d35      41894500       mov dword [r13], eax
0x00009d39      4883c428       add rsp, 0x28
0x00009d3d      4c89e0         mov rax, r12
0x00009d40      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00009d41      5d             pop rbp
0x00009d42      415c           pop r12
0x00009d44      415d           pop r13
0x00009d46      415e           pop r14
0x00009d48      415f           pop r15
0x00009d4a      c3             ret
0x00009d4b      0f1f440000     nop dword [rax + rax]
0x00009d50      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00009d52      e8d9100000     call sym.xrealloc
0x00009d57      660f6f0571a5.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00009d5f      4889c3         mov rbx, rax
0x00009d62      48890557a520.  mov qword [obj.slotvec], rax            ; [0x2142c0:8]=0x2142d0 obj.slotvec0
0x00009d69      0f1100         movups xmmword [rax], xmm0
0x00009d6c      e9dcfeffff     jmp 0x9c4d
0x00009d71      e82a83ffff     call sym.imp.abort
0x00009d76      e8a5120000     call sym.xalloc_die
0x00009d7b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00009d80      4154           push r12
0x00009d82      55             push rbp
0x00009d83      53             push rbx
0x00009d84      4889fb         mov rbx, rdi
0x00009d87      e82483ffff     call sym.imp.__errno_location
0x00009d8c      448b20         mov r12d, dword [rax]
0x00009d8f      4889c5         mov rbp, rax
0x00009d92      488d05a7a720.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009d99      4885db         test rbx, rbx
0x00009d9c      be38000000     mov esi, 0x38                           ; '8'
0x00009da1      480f44d8       cmove rbx, rax
0x00009da5      4889df         mov rdi, rbx
0x00009da8      e823120000     call sym.xmemdup
0x00009dad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00009db1      5b             pop rbx
0x00009db2      5d             pop rbp
0x00009db3      415c           pop r12
0x00009db5      c3             ret
0x00009db6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00009dc0      488d0579a720.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009dc7      4885ff         test rdi, rdi
0x00009dca      480f44f8       cmove rdi, rax
0x00009dce      8b07           mov eax, dword [rdi]
0x00009dd0      c3             ret
0x00009dd1      0f1f440000     nop dword [rax + rax]
0x00009dd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00009de0      488d0559a720.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009de7      4885ff         test rdi, rdi
0x00009dea      480f44f8       cmove rdi, rax
0x00009dee      8937           mov dword [rdi], esi
0x00009df0      c3             ret
0x00009df1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00009df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00009e00      488d0539a720.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009e07      4885ff         test rdi, rdi
0x00009e0a      89f1           mov ecx, esi
0x00009e0c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00009e10      89f0           mov eax, esi
0x00009e12      83e11f         and ecx, 0x1f
0x00009e15      c0e805         shr al, 5
0x00009e18      0fb6c0         movzx eax, al
0x00009e1b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00009e20      8b37           mov esi, dword [rdi]
0x00009e22      89f0           mov eax, esi
0x00009e24      d3e8           shr eax, cl
0x00009e26      31c2           xor edx, eax
0x00009e28      83e001         and eax, 1
0x00009e2b      83e201         and edx, 1
0x00009e2e      d3e2           shl edx, cl
0x00009e30      31f2           xor edx, esi
0x00009e32      8917           mov dword [rdi], edx
0x00009e34      c3             ret
0x00009e35      90             nop
0x00009e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00009e40      488d05f9a620.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009e47      4885ff         test rdi, rdi
0x00009e4a      480f44f8       cmove rdi, rax
0x00009e4e      8b4704         mov eax, dword [rdi + 4]
0x00009e51      897704         mov dword [rdi + 4], esi
0x00009e54      c3             ret
0x00009e55      90             nop
0x00009e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00009e60      488d05d9a620.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009e67      4885ff         test rdi, rdi
0x00009e6a      480f44f8       cmove rdi, rax
0x00009e6e      4885f6         test rsi, rsi
0x00009e71      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00009e77      740e           je 0x9e87
0x00009e79      4885d2         test rdx, rdx
0x00009e7c      7409           je 0x9e87
0x00009e7e      48897728       mov qword [rdi + 0x28], rsi
0x00009e82      48895730       mov qword [rdi + 0x30], rdx
0x00009e86      c3             ret
0x00009e87      4883ec08       sub rsp, 8
0x00009e8b      e81082ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00009e90      4157           push r15
0x00009e92      4156           push r14
0x00009e94      488d05a5a620.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009e9b      4155           push r13
0x00009e9d      4154           push r12
0x00009e9f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00009ea2      55             push rbp
0x00009ea3      53             push rbx
0x00009ea4      4c89c3         mov rbx, r8
0x00009ea7      4989f6         mov r14, rsi
0x00009eaa      4989d7         mov r15, rdx
0x00009ead      4883ec18       sub rsp, 0x18
0x00009eb1      4d85c0         test r8, r8
0x00009eb4      480f44d8       cmove rbx, rax
0x00009eb8      48894c2408     mov qword [rsp + 8], rcx
0x00009ebd      e8ee81ffff     call sym.imp.__errno_location
0x00009ec2      448b20         mov r12d, dword [rax]
0x00009ec5      4889c5         mov rbp, rax
0x00009ec8      488d4308       lea rax, [rbx + 8]
0x00009ecc      4883ec08       sub rsp, 8
0x00009ed0      448b4b04       mov r9d, dword [rbx + 4]
0x00009ed4      ff7330         push qword [rbx + 0x30]
0x00009ed7      448b03         mov r8d, dword [rbx]
0x00009eda      ff7328         push qword [rbx + 0x28]
0x00009edd      4c89fa         mov rdx, r15
0x00009ee0      50             push rax
0x00009ee1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00009ee6      4c89f6         mov rsi, r14
0x00009ee9      4c89ef         mov rdi, r13
0x00009eec      e89feaffff     call sym.quotearg_buffer_restyled
0x00009ef1      44896500       mov dword [rbp], r12d
0x00009ef5      4883c438       add rsp, 0x38
0x00009ef9      5b             pop rbx
0x00009efa      5d             pop rbp
0x00009efb      415c           pop r12
0x00009efd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00009eff      415e           pop r14
0x00009f01      415f           pop r15
0x00009f03      c3             ret
0x00009f04      6690           nop
0x00009f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00009f10      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00009f12      4156           push r14
0x00009f14      488d0525a620.  lea rax, obj.default_quoting_options    ; 0x214540
0x00009f1b      4155           push r13
0x00009f1d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00009f1f      4989d4         mov r12, rdx
0x00009f22      55             push rbp
0x00009f23      53             push rbx
0x00009f24      4889cb         mov rbx, rcx
0x00009f27      4989fe         mov r14, rdi
0x00009f2a      4989f7         mov r15, rsi
0x00009f2d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00009f31      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00009f34      480f44d8       cmove rbx, rax
0x00009f38      31ed           xor ebp, ebp
0x00009f3a      e87181ffff     call sym.imp.__errno_location
0x00009f3f      4d85e4         test r12, r12
0x00009f42      4989c5         mov r13, rax
0x00009f45      8b00           mov eax, dword [rax]
0x00009f47      400f94c5       sete bpl
0x00009f4b      0b6b04         or ebp, dword [rbx + 4]
0x00009f4e      4c8d5308       lea r10, [rbx + 8]
0x00009f52      4883ec08       sub rsp, 8
0x00009f56      448b03         mov r8d, dword [rbx]
0x00009f59      4c89f9         mov rcx, r15
0x00009f5c      89442414       mov dword [rsp + 0x14], eax
0x00009f60      ff7330         push qword [rbx + 0x30]
0x00009f63      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00009f66      ff7328         push qword [rbx + 0x28]
0x00009f69      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00009f6b      31f6           xor esi, esi
0x00009f6d      4189e9         mov r9d, ebp
0x00009f70      31ff           xor edi, edi
0x00009f72      4c89542440     mov qword [rsp + 0x40], r10
0x00009f77      e814eaffff     call sym.quotearg_buffer_restyled
0x00009f7c      488d7001       lea rsi, [rax + 1]
0x00009f80      4889442448     mov qword [rsp + 0x48], rax
0x00009f85      4883c420       add rsp, 0x20
0x00009f89      4889f7         mov rdi, rsi
0x00009f8c      4889742418     mov qword [rsp + 0x18], rsi
0x00009f91      e83a0e0000     call sym.xmalloc
0x00009f96      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00009f9b      4883ec08       sub rsp, 8
0x00009f9f      ff7330         push qword [rbx + 0x30]
0x00009fa2      ff7328         push qword [rbx + 0x28]
0x00009fa5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00009faa      4189e9         mov r9d, ebp
0x00009fad      448b03         mov r8d, dword [rbx]
0x00009fb0      4c89f9         mov rcx, r15
0x00009fb3      4c89f2         mov rdx, r14
0x00009fb6      4889c7         mov rdi, rax
0x00009fb9      4152           push r10
0x00009fbb      488b742438     mov rsi, qword [rsp + 0x38]
0x00009fc0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00009fc5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00009fc9      4883c420       add rsp, 0x20
0x00009fcd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00009fd0      41894500       mov dword [r13], eax
0x00009fd4      7409           je 0x9fdf
0x00009fd6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00009fdb      4d891c24       mov qword [r12], r11
0x00009fdf      488b442410     mov rax, qword [rsp + 0x10]
0x00009fe4      4883c438       add rsp, 0x38
0x00009fe8      5b             pop rbx
0x00009fe9      5d             pop rbp
0x00009fea      415c           pop r12
0x00009fec      415d           pop r13
0x00009fee      415e           pop r14
0x00009ff0      415f           pop r15
0x00009ff2      c3             ret
0x00009ff3      0f1f00         nop dword [rax]
0x00009ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x0000a000      4889d1         mov rcx, rdx
0x0000a003      31d2           xor edx, edx
0x0000a005      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000a00a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x0000a010      8b05a2a22000   mov eax, dword [obj.nslots]             ; [0x2142b8:4]=1
0x0000a016      4154           push r12
0x0000a018      4c8b25a1a220.  mov r12, qword [obj.slotvec]            ; [0x2142c0:8]=0x2142d0 obj.slotvec0
0x0000a01f      55             push rbp
0x0000a020      53             push rbx
0x0000a021      83f801         cmp eax, 1
0x0000a024      7e2b           jle 0xa051                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x0000a026      83e802         sub eax, 2
0x0000a029      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000a02e      48c1e004       shl rax, 4
0x0000a032      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x0000a037      660f1f840000.  nop word [rax + rax]
0x0000a040      488b3b         mov rdi, qword [rbx]
0x0000a043      4883c310       add rbx, 0x10
0x0000a047      e82480ffff     call sym.imp.free
0x0000a04c      4839eb         cmp rbx, rbp
0x0000a04f      75ef           jne 0xa040
0x0000a051      498b7c2408     mov rdi, qword [r12 + 8]
0x0000a056      488d1de3a320.  lea rbx, obj.slot0                      ; 0x214440
0x0000a05d      4839df         cmp rdi, rbx
0x0000a060      7417           je 0xa079
0x0000a062      e80980ffff     call sym.imp.free
0x0000a067      48c7055ea220.  mov qword [obj.slotvec0], 0x100         ; [0x2142d0:8]=256
0x0000a072      48891d5fa220.  mov qword [0x002142d8], rbx             ; [0x2142d8:8]=0x214440 obj.slot0
0x0000a079      488d1d50a220.  lea rbx, obj.slotvec0                   ; 0x2142d0
0x0000a080      4939dc         cmp r12, rbx
0x0000a083      740f           je 0xa094
0x0000a085      4c89e7         mov rdi, r12
0x0000a088      e8e37fffff     call sym.imp.free
0x0000a08d      48891d2ca220.  mov qword [obj.slotvec], rbx            ; [0x2142c0:8]=0x2142d0 obj.slotvec0
0x0000a094      5b             pop rbx
0x0000a095      c70519a22000.  mov dword [obj.nslots], 1               ; [0x2142b8:4]=1
0x0000a09f      5d             pop rbp
0x0000a0a0      415c           pop r12
0x0000a0a2      c3             ret
0x0000a0a3      0f1f00         nop dword [rax]
0x0000a0a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x0000a0b0      488d0d89a420.  lea rcx, obj.default_quoting_options    ; 0x214540
0x0000a0b7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a0be      e90dfbffff     jmp sym.quotearg_n_options
0x0000a0c3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x0000a0c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x0000a0d0      488d0d69a420.  lea rcx, obj.default_quoting_options    ; 0x214540
0x0000a0d7      e9f4faffff     jmp sym.quotearg_n_options
0x0000a0dc      0f1f4000       nop dword [rax]
;-- quotearg:
0x0000a0e0      488d0d59a420.  lea rcx, obj.default_quoting_options    ; 0x214540
0x0000a0e7      4889fe         mov rsi, rdi
0x0000a0ea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a0f1      31ff           xor edi, edi
0x0000a0f3      e9d8faffff     jmp sym.quotearg_n_options
0x0000a0f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x0000a100      488d0d39a420.  lea rcx, obj.default_quoting_options    ; 0x214540
0x0000a107      4889f2         mov rdx, rsi
0x0000a10a      4889fe         mov rsi, rdi
0x0000a10d      31ff           xor edi, edi
0x0000a10f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x0000a114      6690           nop
0x0000a116      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x0000a120      4883ec48       sub rsp, 0x48
0x0000a124      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x0000a127      64488b142528.  mov rdx, qword fs:[0x28]
0x0000a130      4889542438     mov qword [rsp + 0x38], rdx
0x0000a135      31d2           xor edx, edx
0x0000a137      83fe0a         cmp esi, 0xa
0x0000a13a      7468           je 0xa1a4
0x0000a13c      893424         mov dword [rsp], esi
0x0000a13f      4889e1         mov rcx, rsp
0x0000a142      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a149      4889c6         mov rsi, rax
0x0000a14c      48c744240400.  mov qword [rsp + 4], 0
0x0000a155      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000a15e      48c744241400.  mov qword [rsp + 0x14], 0
0x0000a167      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000a170      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x0000a179      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000a182      c74424340000.  mov dword [rsp + 0x34], 0
0x0000a18a      e841faffff     call sym.quotearg_n_options
0x0000a18f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000a194      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a19d      750a           jne 0xa1a9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000a19f      4883c448       add rsp, 0x48
0x0000a1a3      c3             ret
0x0000a1a4      e8f77effff     call sym.imp.abort
0x0000a1a9      e84280ffff     call sym.imp.__stack_chk_fail
0x0000a1ae      6690           nop
;-- quotearg_n_style_mem:
0x0000a1b0      4883ec48       sub rsp, 0x48
0x0000a1b4      4889d0         mov rax, rdx
0x0000a1b7      4889ca         mov rdx, rcx
0x0000a1ba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000a1c3      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a1c8      31c9           xor ecx, ecx
0x0000a1ca      83fe0a         cmp esi, 0xa
0x0000a1cd      7461           je 0xa230
0x0000a1cf      893424         mov dword [rsp], esi
0x0000a1d2      4889e1         mov rcx, rsp
0x0000a1d5      4889c6         mov rsi, rax
0x0000a1d8      48c744240400.  mov qword [rsp + 4], 0
0x0000a1e1      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000a1ea      48c744241400.  mov qword [rsp + 0x14], 0
0x0000a1f3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000a1fc      48c744242400.  mov qword [rsp + 0x24], 0
0x0000a205      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000a20e      c74424340000.  mov dword [rsp + 0x34], 0
0x0000a216      e8b5f9ffff     call sym.quotearg_n_options
0x0000a21b      488b542438     mov rdx, qword [rsp + 0x38]
0x0000a220      644833142528.  xor rdx, qword fs:[0x28]
0x0000a229      750a           jne 0xa235
0x0000a22b      4883c448       add rsp, 0x48
0x0000a22f      c3             ret
0x0000a230      e86b7effff     call sym.imp.abort
0x0000a235      e8b67fffff     call sym.imp.__stack_chk_fail
0x0000a23a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x0000a240      4889f2         mov rdx, rsi
0x0000a243      89fe           mov esi, edi
0x0000a245      31ff           xor edi, edi
0x0000a247      e9d4feffff     jmp sym.quotearg_n_style
0x0000a24c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x0000a250      4889d1         mov rcx, rdx
0x0000a253      4889f2         mov rdx, rsi
0x0000a256      89fe           mov esi, edi
0x0000a258      31ff           xor edi, edi
0x0000a25a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000a25f      90             nop
;-- quotearg_char_mem:
0x0000a260      4883ec48       sub rsp, 0x48
0x0000a264      89d1           mov ecx, edx
0x0000a266      64488b042528.  mov rax, qword fs:[0x28]
0x0000a26f      4889442438     mov qword [rsp + 0x38], rax
0x0000a274      31c0           xor eax, eax
0x0000a276      488b05f3a220.  mov rax, qword [0x00214570]             ; [0x214570:8]=0
0x0000a27d      4989e0         mov r8, rsp
0x0000a280      83e11f         and ecx, 0x1f
0x0000a283      660f6f05b5a2.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000a28b      4889442430     mov qword [rsp + 0x30], rax
0x0000a290      89d0           mov eax, edx
0x0000a292      0f290424       movaps xmmword [rsp], xmm0
0x0000a296      c0e805         shr al, 5
0x0000a299      0fb6c0         movzx eax, al
0x0000a29c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x0000a2a1      660f6f05a7a2.  movdqa xmm0, xmmword [0x00214550]
0x0000a2a9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000a2ae      660f6f05aaa2.  movdqa xmm0, xmmword [0x00214560]
0x0000a2b6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000a2bb      418b11         mov edx, dword [r9]
0x0000a2be      89d0           mov eax, edx
0x0000a2c0      d3e8           shr eax, cl
0x0000a2c2      f7d0           not eax
0x0000a2c4      83e001         and eax, 1
0x0000a2c7      d3e0           shl eax, cl
0x0000a2c9      4c89c1         mov rcx, r8
0x0000a2cc      31d0           xor eax, edx
0x0000a2ce      4889f2         mov rdx, rsi
0x0000a2d1      4889fe         mov rsi, rdi
0x0000a2d4      418901         mov dword [r9], eax
0x0000a2d7      31ff           xor edi, edi
0x0000a2d9      e8f2f8ffff     call sym.quotearg_n_options
0x0000a2de      488b742438     mov rsi, qword [rsp + 0x38]
0x0000a2e3      644833342528.  xor rsi, qword fs:[0x28]
0x0000a2ec      7505           jne 0xa2f3
0x0000a2ee      4883c448       add rsp, 0x48
0x0000a2f2      c3             ret
0x0000a2f3      e8f87effff     call sym.imp.__stack_chk_fail
0x0000a2f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x0000a300      400fbed6       movsx edx, sil
0x0000a304      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000a30b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x0000a310      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000a315      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000a31c      e93fffffff     jmp sym.quotearg_char_mem
0x0000a321      0f1f440000     nop dword [rax + rax]
0x0000a326      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x0000a330      ba3a000000     mov edx, 0x3a                           ; ':'
0x0000a335      e926ffffff     jmp sym.quotearg_char_mem
0x0000a33a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x0000a340      4883ec48       sub rsp, 0x48
0x0000a344      4889d0         mov rax, rdx
0x0000a347      64488b142528.  mov rdx, qword fs:[0x28]
0x0000a350      4889542438     mov qword [rsp + 0x38], rdx
0x0000a355      31d2           xor edx, edx
0x0000a357      83fe0a         cmp esi, 0xa
0x0000a35a      7468           je 0xa3c4
0x0000a35c      893424         mov dword [rsp], esi
0x0000a35f      4889e1         mov rcx, rsp
0x0000a362      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a369      4889c6         mov rsi, rax
0x0000a36c      48c744240400.  mov qword [rsp + 4], 0
0x0000a375      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000a37e      48c744241400.  mov qword [rsp + 0x14], 0
0x0000a387      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000a390      48c744242400.  mov qword [rsp + 0x24], 0
0x0000a399      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000a3a2      c74424340000.  mov dword [rsp + 0x34], 0
0x0000a3aa      e821f8ffff     call sym.quotearg_n_options
0x0000a3af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x0000a3b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a3bd      750a           jne 0xa3c9
0x0000a3bf      4883c448       add rsp, 0x48
0x0000a3c3      c3             ret
0x0000a3c4      e8d77cffff     call sym.imp.abort
0x0000a3c9      e8227effff     call sym.imp.__stack_chk_fail
0x0000a3ce      6690           nop
;-- quotearg_n_custom_mem:
0x0000a3d0      4883ec48       sub rsp, 0x48
0x0000a3d4      4989c9         mov r9, rcx
0x0000a3d7      488b0d92a120.  mov rcx, qword [0x00214570]             ; [0x214570:8]=0
0x0000a3de      660f6f055aa1.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000a3e6      64488b042528.  mov rax, qword fs:[0x28]
0x0000a3ef      4889442438     mov qword [rsp + 0x38], rax
0x0000a3f4      31c0           xor eax, eax
0x0000a3f6      0f290424       movaps xmmword [rsp], xmm0
0x0000a3fa      4885f6         test rsi, rsi
0x0000a3fd      48894c2430     mov qword [rsp + 0x30], rcx
0x0000a402      c704240a0000.  mov dword [rsp], 0xa
0x0000a409      660f6f053fa1.  movdqa xmm0, xmmword [0x00214550]
0x0000a411      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000a416      660f6f0542a1.  movdqa xmm0, xmmword [0x00214560]
0x0000a41e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000a423      7432           je 0xa457
0x0000a425      4885d2         test rdx, rdx
0x0000a428      742d           je 0xa457
0x0000a42a      4889742428     mov qword [rsp + 0x28], rsi
0x0000a42f      4889542430     mov qword [rsp + 0x30], rdx
0x0000a434      4889e1         mov rcx, rsp
0x0000a437      4c89c2         mov rdx, r8
0x0000a43a      4c89ce         mov rsi, r9
0x0000a43d      e88ef7ffff     call sym.quotearg_n_options
0x0000a442      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000a447      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000a450      750a           jne 0xa45c
0x0000a452      4883c448       add rsp, 0x48
0x0000a456      c3             ret
0x0000a457      e8447cffff     call sym.imp.abort
0x0000a45c      e88f7dffff     call sym.imp.__stack_chk_fail
0x0000a461      0f1f440000     nop dword [rax + rax]
0x0000a466      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x0000a470      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000a477      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000a47c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x0000a480      4889d1         mov rcx, rdx
0x0000a483      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000a48a      4889f2         mov rdx, rsi
0x0000a48d      4889fe         mov rsi, rdi
0x0000a490      31ff           xor edi, edi
0x0000a492      e939ffffff     jmp sym.quotearg_n_custom_mem
0x0000a497      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x0000a4a0      4989c8         mov r8, rcx
0x0000a4a3      4889d1         mov rcx, rdx
0x0000a4a6      4889f2         mov rdx, rsi
0x0000a4a9      4889fe         mov rsi, rdi
0x0000a4ac      31ff           xor edi, edi
0x0000a4ae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x0000a4b3      0f1f00         nop dword [rax]
0x0000a4b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x0000a4c0      488d0db99d20.  lea rcx, obj.quote_quoting_options      ; 0x214280
0x0000a4c7      e904f7ffff     jmp sym.quotearg_n_options
0x0000a4cc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x0000a4d0      488d0da99d20.  lea rcx, obj.quote_quoting_options      ; 0x214280
0x0000a4d7      4889f2         mov rdx, rsi
0x0000a4da      4889fe         mov rsi, rdi
0x0000a4dd      31ff           xor edi, edi
0x0000a4df      e9ecf6ffff     jmp sym.quotearg_n_options
0x0000a4e4      6690           nop
0x0000a4e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x0000a4f0      488d0d899d20.  lea rcx, obj.quote_quoting_options      ; 0x214280
0x0000a4f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a4fe      e9cdf6ffff     jmp sym.quotearg_n_options
0x0000a503      0f1f00         nop dword [rax]
0x0000a506      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x0000a510      488d0d699d20.  lea rcx, obj.quote_quoting_options      ; 0x214280
0x0000a517      4889fe         mov rsi, rdi
0x0000a51a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000a521      31ff           xor edi, edi
0x0000a523      e9a8f6ffff     jmp sym.quotearg_n_options
0x0000a528      0f1f84000000.  nop dword [rax + rax]
;-- same_nameat.part.0:
0x0000a530      4155           push r13
0x0000a532      4154           push r12
0x0000a534      4189fd         mov r13d, edi
0x0000a537      55             push rbp
0x0000a538      53             push rbx
0x0000a539      4889f7         mov rdi, rsi
0x0000a53c      89d5           mov ebp, edx
0x0000a53e      4989cc         mov r12, rcx
0x0000a541      4881ec380100.  sub rsp, 0x138
0x0000a548      64488b042528.  mov rax, qword fs:[0x28]
0x0000a551      488984242801.  mov qword [rsp + 0x128], rax
0x0000a559      31c0           xor eax, eax
0x0000a55b      e8f0b8ffff     call sym.dir_name
0x0000a560      4889e1         mov rcx, rsp
0x0000a563      41b800010000   mov r8d, 0x100
0x0000a569      4889c2         mov rdx, rax
0x0000a56c      4489ee         mov esi, r13d
0x0000a56f      bf01000000     mov edi, 1
0x0000a574      4889c3         mov rbx, rax
0x0000a577      e8b47cffff     call sym.imp.__fxstatat
0x0000a57c      85c0           test eax, eax
0x0000a57e      0f85ac000000   jne 0xa630
0x0000a584      4889df         mov rdi, rbx
0x0000a587      e8e47affff     call sym.imp.free
0x0000a58c      4c89e7         mov rdi, r12
0x0000a58f      e8bcb8ffff     call sym.dir_name
0x0000a594      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000a59c      41b800010000   mov r8d, 0x100
0x0000a5a2      4889c2         mov rdx, rax
0x0000a5a5      89ee           mov esi, ebp
0x0000a5a7      bf01000000     mov edi, 1
0x0000a5ac      4889c3         mov rbx, rax
0x0000a5af      e87c7cffff     call sym.imp.__fxstatat
0x0000a5b4      85c0           test eax, eax
0x0000a5b6      7550           jne 0xa608
0x0000a5b8      31ed           xor ebp, ebp
0x0000a5ba      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000a5c2      4839442408     cmp qword [rsp + 8], rax
0x0000a5c7      7510           jne 0xa5d9
0x0000a5c9      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000a5d1      48390424       cmp qword [rsp], rax
0x0000a5d5      400f94c5       sete bpl
0x0000a5d9      4889df         mov rdi, rbx
0x0000a5dc      e88f7affff     call sym.imp.free
0x0000a5e1      488b94242801.  mov rdx, qword [rsp + 0x128]
0x0000a5e9      644833142528.  xor rdx, qword fs:[0x28]
0x0000a5f2      89e8           mov eax, ebp
0x0000a5f4      755c           jne 0xa652
0x0000a5f6      4881c4380100.  add rsp, 0x138
0x0000a5fd      5b             pop rbx
0x0000a5fe      5d             pop rbp
0x0000a5ff      415c           pop r12
0x0000a601      415d           pop r13
0x0000a603      c3             ret
0x0000a604      0f1f4000       nop dword [rax]
0x0000a608      e8a37affff     call sym.imp.__errno_location
0x0000a60d      8b30           mov esi, dword [rax]
0x0000a60f      488d15616600.  lea rdx, [0x00010c77]                   ; "%s"
0x0000a616      4889d9         mov rcx, rbx
0x0000a619      bf01000000     mov edi, 1
0x0000a61e      31c0           xor eax, eax
0x0000a620      e87b7effff     call sym.imp.error
0x0000a625      eb91           jmp 0xa5b8
0x0000a627      660f1f840000.  nop word [rax + rax]
0x0000a630      e87b7affff     call sym.imp.__errno_location
0x0000a635      8b30           mov esi, dword [rax]
0x0000a637      488d15396600.  lea rdx, [0x00010c77]                   ; "%s"
0x0000a63e      4889d9         mov rcx, rbx
0x0000a641      bf01000000     mov edi, 1
0x0000a646      31c0           xor eax, eax
0x0000a648      e8537effff     call sym.imp.error
0x0000a64d      e932ffffff     jmp 0xa584
0x0000a652      e8997bffff     call sym.imp.__stack_chk_fail
0x0000a657      660f1f840000.  nop word [rax + rax]
;-- same_nameat:
0x0000a660      4157           push r15
0x0000a662      4156           push r14
0x0000a664      4189d7         mov r15d, edx
0x0000a667      4155           push r13
0x0000a669      4154           push r12
0x0000a66b      55             push rbp
0x0000a66c      53             push rbx
0x0000a66d      4889cd         mov rbp, rcx
0x0000a670      4889f3         mov rbx, rsi
0x0000a673      4883ec18       sub rsp, 0x18
0x0000a677      897c240c       mov dword [rsp + 0xc], edi
0x0000a67b      4889f7         mov rdi, rsi
0x0000a67e      e8adb8ffff     call sym.last_component
0x0000a683      4889ef         mov rdi, rbp
0x0000a686      4989c4         mov r12, rax
0x0000a689      e8a2b8ffff     call sym.last_component
0x0000a68e      4c89e7         mov rdi, r12
0x0000a691      4989c5         mov r13, rax
0x0000a694      e8f7b8ffff     call sym.base_len
0x0000a699      4c89ef         mov rdi, r13
0x0000a69c      4989c6         mov r14, rax
0x0000a69f      e8ecb8ffff     call sym.base_len
0x0000a6a4      4939c6         cmp r14, rax
0x0000a6a7      7417           je 0xa6c0
0x0000a6a9      4883c418       add rsp, 0x18
0x0000a6ad      31c0           xor eax, eax
0x0000a6af      5b             pop rbx
0x0000a6b0      5d             pop rbp
0x0000a6b1      415c           pop r12
0x0000a6b3      415d           pop r13
0x0000a6b5      415e           pop r14
0x0000a6b7      415f           pop r15
0x0000a6b9      c3             ret
0x0000a6ba      660f1f440000   nop word [rax + rax]
0x0000a6c0      4c89f2         mov rdx, r14
0x0000a6c3      4c89ee         mov rsi, r13
0x0000a6c6      4c89e7         mov rdi, r12
0x0000a6c9      e8327cffff     call sym.imp.memcmp
0x0000a6ce      85c0           test eax, eax
0x0000a6d0      75d7           jne 0xa6a9
0x0000a6d2      8b7c240c       mov edi, dword [rsp + 0xc]
0x0000a6d6      4883c418       add rsp, 0x18
0x0000a6da      4889e9         mov rcx, rbp
0x0000a6dd      4489fa         mov edx, r15d
0x0000a6e0      4889de         mov rsi, rbx
0x0000a6e3      5b             pop rbx
0x0000a6e4      5d             pop rbp
0x0000a6e5      415c           pop r12
0x0000a6e7      415d           pop r13
0x0000a6e9      415e           pop r14
0x0000a6eb      415f           pop r15
0x0000a6ed      e93efeffff     jmp sym.same_nameat.part.0
0x0000a6f2      0f1f4000       nop dword [rax]
0x0000a6f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- same_name:
0x0000a700      ba9cffffff     mov edx, 0xffffff9c                     ; 4294967196
0x0000a705      4889f1         mov rcx, rsi
0x0000a708      4889fe         mov rsi, rdi
0x0000a70b      89d7           mov edi, edx
0x0000a70d      e94effffff     jmp sym.same_nameat
0x0000a712      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a71c      0f1f4000       nop dword [rax]
;-- save_cwd:
0x0000a720      53             push rbx                                ; ../coreutils-8.31/lib/save-cwd.c:63
0x0000a721      4889fb         mov rbx, rdi
0x0000a724      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/save-cwd.c:64
0x0000a72c      488d3dd95700.  lea rdi, [0x0000ff0c]                   ; ../coreutils-8.31/lib/save-cwd.c:66 ; "."
0x0000a733      31c0           xor eax, eax
0x0000a735      be00000800     mov esi, 0x80000
0x0000a73a      e8b1220000     call sym.open_safer
0x0000a73f      89c2           mov edx, eax
0x0000a741      8903           mov dword [rbx], eax
0x0000a743      31c0           xor eax, eax
0x0000a745      85d2           test edx, edx                           ; ../coreutils-8.31/lib/save-cwd.c:69
0x0000a747      7807           js 0xa750
0x0000a749      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:76
0x0000a74a      c3             ret
0x0000a74b      0f1f440000     nop dword [rax + rax]
0x0000a750      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x0000a752      31ff           xor edi, edi
0x0000a754      e8577bffff     call sym.imp.getcwd
0x0000a759      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/save-cwd.c:72
0x0000a75c      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/save-cwd.c:71
0x0000a760      0f94c0         sete al                                 ; ../coreutils-8.31/lib/save-cwd.c:72
0x0000a763      0fb6c0         movzx eax, al
0x0000a766      f7d8           neg eax
0x0000a768      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:76
0x0000a769      c3             ret
0x0000a76a      660f1f440000   nop word [rax + rax]
;-- restore_cwd:
0x0000a770      8b07           mov eax, dword [rdi]                    ; ../coreutils-8.31/lib/save-cwd.c:84
0x0000a772      85c0           test eax, eax
0x0000a774      780a           js 0xa780
0x0000a776      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/save-cwd.c:86
0x0000a778      e9c37cffff     jmp sym.imp.fchdir
0x0000a77d      0f1f00         nop dword [rax]
0x0000a780      488b7f08       mov rdi, qword [rdi + 8]                ; ../coreutils-8.31/lib/save-cwd.c:88
0x0000a784      e9270f0000     jmp sym.chdir_long
0x0000a789      0f1f80000000.  nop dword [rax]
;-- free_cwd:
0x0000a790      53             push rbx                                ; ../coreutils-8.31/lib/save-cwd.c:93
0x0000a791      4889fb         mov rbx, rdi
0x0000a794      8b3f           mov edi, dword [rdi]                    ; ../coreutils-8.31/lib/save-cwd.c:94
0x0000a796      85ff           test edi, edi
0x0000a798      7805           js 0xa79f
0x0000a79a      e8317bffff     call sym.imp.close                      ; ../coreutils-8.31/lib/save-cwd.c:95
0x0000a79f      488b7b08       mov rdi, qword [rbx + 8]                ; ../coreutils-8.31/lib/save-cwd.c:96
0x0000a7a3      5b             pop rbx                                 ; ../coreutils-8.31/lib/save-cwd.c:97
0x0000a7a4      e9c778ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/save-cwd.c:96
0x0000a7a9      0f1f80000000.  nop dword [rax]
;-- version_etc_arn:
0x0000a7b0      4157           push r15
0x0000a7b2      4156           push r14
0x0000a7b4      4155           push r13
0x0000a7b6      4154           push r12
0x0000a7b8      4d89cc         mov r12, r9
0x0000a7bb      55             push rbp
0x0000a7bc      53             push rbx
0x0000a7bd      4889fd         mov rbp, rdi
0x0000a7c0      4c89c3         mov rbx, r8
0x0000a7c3      4883ec28       sub rsp, 0x28
0x0000a7c7      4885f6         test rsi, rsi
0x0000a7ca      0f8418010000   je 0xa8e8
0x0000a7d0      4989d0         mov r8, rdx
0x0000a7d3      488d15ce5d00.  lea rdx, [0x000105a8]                   ; "%s (%s) %s\n"
0x0000a7da      4989c9         mov r9, rcx
0x0000a7dd      31c0           xor eax, eax
0x0000a7df      4889f1         mov rcx, rsi
0x0000a7e2      be01000000     mov esi, 1
0x0000a7e7      e8447dffff     call sym.imp.__fprintf_chk
0x0000a7ec      488d35c85d00.  lea rsi, [0x000105bb]                   ; "(C)"
0x0000a7f3      31ff           xor edi, edi
0x0000a7f5      ba05000000     mov edx, 5
0x0000a7fa      e89179ffff     call sym.imp.dcgettext
0x0000a7ff      488d15da6000.  lea rdx, obj.version_etc_copyright      ; 0x108e0 ; "Copyright %s %d Free Software Foundation, Inc."
0x0000a806      4889c1         mov rcx, rax
0x0000a809      41b8e3070000   mov r8d, 0x7e3
0x0000a80f      be01000000     mov esi, 1
0x0000a814      4889ef         mov rdi, rbp
0x0000a817      31c0           xor eax, eax
0x0000a819      e8127dffff     call sym.imp.__fprintf_chk
0x0000a81e      488d35235e00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x10648 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x0000a825      31ff           xor edi, edi
0x0000a827      ba05000000     mov edx, 5
0x0000a82c      e85f79ffff     call sym.imp.dcgettext
0x0000a831      4889ee         mov rsi, rbp
0x0000a834      4889c7         mov rdi, rax
0x0000a837      e8d47affff     call sym.imp.fputs_unlocked
0x0000a83c      4983fc09       cmp r12, 9
0x0000a840      0f873a030000   ja 0xab80
0x0000a846      488d15576000.  lea rdx, [0x000108a4]
0x0000a84d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000a851      4801d0         add rax, rdx
0x0000a854      ffe0           jmp rax
0x0000a856      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a860      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000a864      488b4310       mov rax, qword [rbx + 0x10]
0x0000a868      488d35495f00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x107b8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000a86f      4c8b4308       mov r8, qword [rbx + 8]
0x0000a873      ba05000000     mov edx, 5
0x0000a878      31ff           xor edi, edi
0x0000a87a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000a87e      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a882      4c894c2410     mov qword [rsp + 0x10], r9
0x0000a887      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a88b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a88f      48890424       mov qword [rsp], rax
0x0000a893      4c89442408     mov qword [rsp + 8], r8
0x0000a898      488b1b         mov rbx, qword [rbx]
0x0000a89b      e8f078ffff     call sym.imp.dcgettext
0x0000a8a0      4883ec08       sub rsp, 8
0x0000a8a4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x0000a8a9      4889c2         mov rdx, rax
0x0000a8ac      4889d9         mov rcx, rbx
0x0000a8af      be01000000     mov esi, 1
0x0000a8b4      4889ef         mov rdi, rbp
0x0000a8b7      31c0           xor eax, eax
0x0000a8b9      4151           push r9
0x0000a8bb      4155           push r13
0x0000a8bd      4154           push r12
0x0000a8bf      4157           push r15
0x0000a8c1      4156           push r14
0x0000a8c3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x0000a8c8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000a8cd      e85e7cffff     call sym.imp.__fprintf_chk
0x0000a8d2      4883c430       add rsp, 0x30
0x0000a8d6      4883c428       add rsp, 0x28
0x0000a8da      5b             pop rbx
0x0000a8db      5d             pop rbp
0x0000a8dc      415c           pop r12
0x0000a8de      415d           pop r13
0x0000a8e0      415e           pop r14
0x0000a8e2      415f           pop r15
0x0000a8e4      c3             ret
0x0000a8e5      0f1f00         nop dword [rax]
0x0000a8e8      4989c8         mov r8, rcx
0x0000a8eb      4889d1         mov rcx, rdx
0x0000a8ee      488d15bf5c00.  lea rdx, str.s__s                       ; 0x105b4 ; "%s %s\n"
0x0000a8f5      be01000000     mov esi, 1
0x0000a8fa      31c0           xor eax, eax
0x0000a8fc      e82f7cffff     call sym.imp.__fprintf_chk
0x0000a901      e9e6feffff     jmp 0xa7ec
0x0000a906      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a910      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000a914      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000a918      488d35c95e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x107e8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000a91f      488b4310       mov rax, qword [rbx + 0x10]
0x0000a923      4c8b4308       mov r8, qword [rbx + 8]
0x0000a927      ba05000000     mov edx, 5
0x0000a92c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000a930      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000a934      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000a938      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000a93c      488b1b         mov rbx, qword [rbx]
0x0000a93f      4c89542418     mov qword [rsp + 0x18], r10
0x0000a944      4c894c2410     mov qword [rsp + 0x10], r9
0x0000a949      48890424       mov qword [rsp], rax
0x0000a94d      4c89442408     mov qword [rsp + 8], r8
0x0000a952      31ff           xor edi, edi
0x0000a954      e83778ffff     call sym.imp.dcgettext
0x0000a959      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000a95e      4152           push r10
0x0000a960      e93fffffff     jmp 0xa8a4
0x0000a965      0f1f00         nop dword [rax]
0x0000a968      488b1b         mov rbx, qword [rbx]
0x0000a96b      488d354d5c00.  lea rsi, str.Written_by__s.             ; 0x105bf ; "Written by %s.\n"
0x0000a972      ba05000000     mov edx, 5
0x0000a977      31ff           xor edi, edi
0x0000a979      e81278ffff     call sym.imp.dcgettext
0x0000a97e      4883c428       add rsp, 0x28
0x0000a982      4889d9         mov rcx, rbx
0x0000a985      4889ef         mov rdi, rbp
0x0000a988      5b             pop rbx
0x0000a989      5d             pop rbp
0x0000a98a      415c           pop r12
0x0000a98c      415d           pop r13
0x0000a98e      415e           pop r14
0x0000a990      415f           pop r15
0x0000a992      4889c2         mov rdx, rax
0x0000a995      be01000000     mov esi, 1
0x0000a99a      31c0           xor eax, eax
0x0000a99c      e98f7bffff     jmp sym.imp.__fprintf_chk
0x0000a9a1      0f1f80000000.  nop dword [rax]
0x0000a9a8      4c8b6308       mov r12, qword [rbx + 8]
0x0000a9ac      488d351c5c00.  lea rsi, str.Written_by__s_and__s.      ; 0x105cf ; "Written by %s and %s.\n"
0x0000a9b3      488b1b         mov rbx, qword [rbx]
0x0000a9b6      ba05000000     mov edx, 5
0x0000a9bb      31ff           xor edi, edi
0x0000a9bd      e8ce77ffff     call sym.imp.dcgettext
0x0000a9c2      4883c428       add rsp, 0x28
0x0000a9c6      4d89e0         mov r8, r12
0x0000a9c9      4889d9         mov rcx, rbx
0x0000a9cc      4889ef         mov rdi, rbp
0x0000a9cf      4889c2         mov rdx, rax
0x0000a9d2      be01000000     mov esi, 1
0x0000a9d7      5b             pop rbx
0x0000a9d8      5d             pop rbp
0x0000a9d9      415c           pop r12
0x0000a9db      415d           pop r13
0x0000a9dd      415e           pop r14
0x0000a9df      415f           pop r15
0x0000a9e1      31c0           xor eax, eax
0x0000a9e3      e9487bffff     jmp sym.imp.__fprintf_chk
0x0000a9e8      0f1f84000000.  nop dword [rax + rax]
0x0000a9f0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000a9f4      4c8b6308       mov r12, qword [rbx + 8]
0x0000a9f8      488d35e75b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x105e6 ; "Written by %s, %s, and %s.\n"
0x0000a9ff      488b1b         mov rbx, qword [rbx]
0x0000aa02      ba05000000     mov edx, 5
0x0000aa07      31ff           xor edi, edi
0x0000aa09      e88277ffff     call sym.imp.dcgettext
0x0000aa0e      4883c428       add rsp, 0x28
0x0000aa12      4d89e9         mov r9, r13
0x0000aa15      4d89e0         mov r8, r12
0x0000aa18      4889d9         mov rcx, rbx
0x0000aa1b      4889ef         mov rdi, rbp
0x0000aa1e      4889c2         mov rdx, rax
0x0000aa21      5b             pop rbx
0x0000aa22      5d             pop rbp
0x0000aa23      415c           pop r12
0x0000aa25      415d           pop r13
0x0000aa27      415e           pop r14
0x0000aa29      415f           pop r15
0x0000aa2b      be01000000     mov esi, 1
0x0000aa30      31c0           xor eax, eax
0x0000aa32      e9f97affff     jmp sym.imp.__fprintf_chk
0x0000aa37      660f1f840000.  nop word [rax + rax]
0x0000aa40      488d35d15c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x10718 ; "Written by %s, %s, %s,\nand %s.\n"
0x0000aa47      ba05000000     mov edx, 5
0x0000aa4c      31ff           xor edi, edi
0x0000aa4e      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000aa52      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000aa56      4c8b6308       mov r12, qword [rbx + 8]
0x0000aa5a      488b1b         mov rbx, qword [rbx]
0x0000aa5d      e82e77ffff     call sym.imp.dcgettext
0x0000aa62      4883ec08       sub rsp, 8
0x0000aa66      4156           push r14
0x0000aa68      4889c2         mov rdx, rax
0x0000aa6b      4d89e9         mov r9, r13
0x0000aa6e      4d89e0         mov r8, r12
0x0000aa71      4889d9         mov rcx, rbx
0x0000aa74      4889ef         mov rdi, rbp
0x0000aa77      be01000000     mov esi, 1
0x0000aa7c      31c0           xor eax, eax
0x0000aa7e      e8ad7affff     call sym.imp.__fprintf_chk
0x0000aa83      58             pop rax
0x0000aa84      5a             pop rdx
0x0000aa85      4883c428       add rsp, 0x28
0x0000aa89      5b             pop rbx
0x0000aa8a      5d             pop rbp
0x0000aa8b      415c           pop r12
0x0000aa8d      415d           pop r13
0x0000aa8f      415e           pop r14
0x0000aa91      415f           pop r15
0x0000aa93      c3             ret
0x0000aa94      0f1f4000       nop dword [rax]
0x0000aa98      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000aa9c      488d35955c00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x10738 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x0000aaa3      ba05000000     mov edx, 5
0x0000aaa8      31ff           xor edi, edi
0x0000aaaa      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000aaae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000aab2      4c8b6308       mov r12, qword [rbx + 8]
0x0000aab6      488b1b         mov rbx, qword [rbx]
0x0000aab9      e8d276ffff     call sym.imp.dcgettext
0x0000aabe      4157           push r15
0x0000aac0      eba4           jmp 0xaa66
0x0000aac2      660f1f440000   nop word [rax + rax]
0x0000aac8      4c8b4308       mov r8, qword [rbx + 8]
0x0000aacc      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000aad0      488d35895c00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x10760 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x0000aad7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000aadb      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000aadf      ba05000000     mov edx, 5
0x0000aae4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x0000aae8      31ff           xor edi, edi
0x0000aaea      488b1b         mov rbx, qword [rbx]
0x0000aaed      4c890424       mov qword [rsp], r8
0x0000aaf1      e89a76ffff     call sym.imp.dcgettext
0x0000aaf6      4883ec08       sub rsp, 8
0x0000aafa      4d89e9         mov r9, r13
0x0000aafd      4154           push r12
0x0000aaff      4157           push r15
0x0000ab01      4156           push r14
0x0000ab03      4c8b442420     mov r8, qword [rsp + 0x20]
0x0000ab08      4889d9         mov rcx, rbx
0x0000ab0b      4889c2         mov rdx, rax
0x0000ab0e      4889ef         mov rdi, rbp
0x0000ab11      be01000000     mov esi, 1
0x0000ab16      31c0           xor eax, eax
0x0000ab18      e8137affff     call sym.imp.__fprintf_chk
0x0000ab1d      4883c420       add rsp, 0x20
0x0000ab21      4883c428       add rsp, 0x28
0x0000ab25      5b             pop rbx
0x0000ab26      5d             pop rbp
0x0000ab27      415c           pop r12
0x0000ab29      415d           pop r13
0x0000ab2b      415e           pop r14
0x0000ab2d      415f           pop r15
0x0000ab2f      c3             ret
0x0000ab30      4c8b4b10       mov r9, qword [rbx + 0x10]
0x0000ab34      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000ab38      488d35495c00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x10788 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000ab3f      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000ab43      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000ab47      ba05000000     mov edx, 5
0x0000ab4c      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000ab50      4c8b4308       mov r8, qword [rbx + 8]
0x0000ab54      31ff           xor edi, edi
0x0000ab56      4c894c2408     mov qword [rsp + 8], r9
0x0000ab5b      488b1b         mov rbx, qword [rbx]
0x0000ab5e      4c890424       mov qword [rsp], r8
0x0000ab62      e82976ffff     call sym.imp.dcgettext
0x0000ab67      4155           push r13
0x0000ab69      4154           push r12
0x0000ab6b      4157           push r15
0x0000ab6d      4156           push r14
0x0000ab6f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x0000ab74      eb8d           jmp 0xab03
0x0000ab76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ab80      4c8b5340       mov r10, qword [rbx + 0x40]
0x0000ab84      4c8b4b38       mov r9, qword [rbx + 0x38]
0x0000ab88      ba05000000     mov edx, 5
0x0000ab8d      488b4310       mov rax, qword [rbx + 0x10]
0x0000ab91      4c8b4308       mov r8, qword [rbx + 8]
0x0000ab95      488d35845c00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x10820 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000ab9c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000aba0      4c8b6328       mov r12, qword [rbx + 0x28]
0x0000aba4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000aba8      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000abac      4c89542418     mov qword [rsp + 0x18], r10
0x0000abb1      4c894c2410     mov qword [rsp + 0x10], r9
0x0000abb6      48890424       mov qword [rsp], rax
0x0000abba      4c89442408     mov qword [rsp + 8], r8
0x0000abbf      488b1b         mov rbx, qword [rbx]
0x0000abc2      e98bfdffff     jmp 0xa952
0x0000abc7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x0000abd0      4531c9         xor r9d, r9d
0x0000abd3      49833800       cmp qword [r8], 0
0x0000abd7      7412           je 0xabeb
0x0000abd9      0f1f80000000.  nop dword [rax]
0x0000abe0      4983c101       add r9, 1
0x0000abe4      4b833cc800     cmp qword [r8 + r9*8], 0
0x0000abe9      75f5           jne 0xabe0
0x0000abeb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x0000abf0      4883ec68       sub rsp, 0x68
0x0000abf4      4d89c2         mov r10, r8
0x0000abf7      4531c9         xor r9d, r9d
0x0000abfa      64488b042528.  mov rax, qword fs:[0x28]
0x0000ac03      4889442458     mov qword [rsp + 0x58], rax
0x0000ac08      31c0           xor eax, eax
0x0000ac0a      4989e0         mov r8, rsp
0x0000ac0d      0f1f00         nop dword [rax]
0x0000ac10      418b02         mov eax, dword [r10]
0x0000ac13      83f82f         cmp eax, 0x2f
0x0000ac16      7742           ja 0xac5a
0x0000ac18      4189c3         mov r11d, eax
0x0000ac1b      4d035a10       add r11, qword [r10 + 0x10]
0x0000ac1f      83c008         add eax, 8
0x0000ac22      418902         mov dword [r10], eax
0x0000ac25      498b03         mov rax, qword [r11]
0x0000ac28      4885c0         test rax, rax
0x0000ac2b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000ac2f      740a           je 0xac3b
0x0000ac31      4983c101       add r9, 1
0x0000ac35      4983f90a       cmp r9, 0xa
0x0000ac39      75d5           jne 0xac10
0x0000ac3b      e870fbffff     call sym.version_etc_arn
0x0000ac40      488b442458     mov rax, qword [rsp + 0x58]
0x0000ac45      644833042528.  xor rax, qword fs:[0x28]
0x0000ac4e      7505           jne 0xac55
0x0000ac50      4883c468       add rsp, 0x68
0x0000ac54      c3             ret
0x0000ac55      e89675ffff     call sym.imp.__stack_chk_fail
0x0000ac5a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000ac5e      498d4308       lea rax, [r11 + 8]
0x0000ac62      49894208       mov qword [r10 + 8], rax
0x0000ac66      ebbd           jmp 0xac25
0x0000ac68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x0000ac70      55             push rbp
0x0000ac71      53             push rbx
0x0000ac72      41ba20000000   mov r10d, 0x20                          ; "@"
0x0000ac78      4531db         xor r11d, r11d
0x0000ac7b      4881ecb80000.  sub rsp, 0xb8
0x0000ac82      64488b042528.  mov rax, qword fs:[0x28]
0x0000ac8b      4889442478     mov qword [rsp + 0x78], rax
0x0000ac90      31c0           xor eax, eax
0x0000ac92      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000ac9a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x0000aca2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000acaa      4c8d442420     lea r8, [rsp + 0x20]
0x0000acaf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x0000acb7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000acbf      4889442410     mov qword [rsp + 0x10], rax
0x0000acc4      488d84248000.  lea rax, [rsp + 0x80]
0x0000accc      4531c9         xor r9d, r9d
0x0000accf      4889442418     mov qword [rsp + 0x18], rax
0x0000acd4      4889c5         mov rbp, rax
0x0000acd7      660f1f840000.  nop word [rax + rax]
0x0000ace0      4183fa2f       cmp r10d, 0x2f
0x0000ace4      7756           ja 0xad3c
0x0000ace6      4489d0         mov eax, r10d
0x0000ace9      41bb01000000   mov r11d, 1
0x0000acef      4183c208       add r10d, 8
0x0000acf3      4801e8         add rax, rbp
0x0000acf6      488b00         mov rax, qword [rax]
0x0000acf9      4885c0         test rax, rax
0x0000acfc      4b8904c8       mov qword [r8 + r9*8], rax
0x0000ad00      740a           je 0xad0c
0x0000ad02      4983c101       add r9, 1
0x0000ad06      4983f90a       cmp r9, 0xa
0x0000ad0a      75d4           jne 0xace0
0x0000ad0c      4584db         test r11b, r11b
0x0000ad0f      7524           jne 0xad35
0x0000ad11      e89afaffff     call sym.version_etc_arn
0x0000ad16      488b442478     mov rax, qword [rsp + 0x78]
0x0000ad1b      644833042528.  xor rax, qword fs:[0x28]
0x0000ad24      750a           jne 0xad30
0x0000ad26      4881c4b80000.  add rsp, 0xb8
0x0000ad2d      5b             pop rbx
0x0000ad2e      5d             pop rbp
0x0000ad2f      c3             ret
0x0000ad30      e8bb74ffff     call sym.imp.__stack_chk_fail
0x0000ad35      4489542408     mov dword [rsp + 8], r10d
0x0000ad3a      ebd5           jmp 0xad11
0x0000ad3c      4889d8         mov rax, rbx
0x0000ad3f      4883c308       add rbx, 8
0x0000ad43      ebb1           jmp 0xacf6
0x0000ad45      90             nop
0x0000ad46      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x0000ad50      53             push rbx
0x0000ad51      488d35aa5800.  lea rsi, str.Report_bugs_to:__s         ; 0x10602 ; "\nReport bugs to: %s\n"
0x0000ad58      ba05000000     mov edx, 5
0x0000ad5d      31ff           xor edi, edi
0x0000ad5f      e82c74ffff     call sym.imp.dcgettext
0x0000ad64      488d15ac5800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x10617 ; "bug-coreutils@gnu.org"
0x0000ad6b      4889c6         mov rsi, rax
0x0000ad6e      bf01000000     mov edi, 1
0x0000ad73      31c0           xor eax, eax
0x0000ad75      e8f676ffff     call sym.imp.__printf_chk
0x0000ad7a      488d35ac5800.  lea rsi, str.s_home_page:___s           ; 0x1062d ; "%s home page: <%s>\n"
0x0000ad81      ba05000000     mov edx, 5
0x0000ad86      31ff           xor edi, edi
0x0000ad88      e80374ffff     call sym.imp.dcgettext
0x0000ad8d      488d0d044f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xfc98 ; "https://www.gnu.org/software/coreutils/"
0x0000ad94      488d154d4300.  lea rdx, str.GNU_coreutils              ; 0xf0e8 ; "GNU coreutils"
0x0000ad9b      4889c6         mov rsi, rax
0x0000ad9e      bf01000000     mov edi, 1
0x0000ada3      31c0           xor eax, eax
0x0000ada5      e8c676ffff     call sym.imp.__printf_chk
0x0000adaa      488b1d579520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x214308:8]=0
0x0000adb1      488d35a85a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x10860 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x0000adb8      31ff           xor edi, edi
0x0000adba      ba05000000     mov edx, 5
0x0000adbf      e8cc73ffff     call sym.imp.dcgettext
0x0000adc4      4889de         mov rsi, rbx
0x0000adc7      4889c7         mov rdi, rax
0x0000adca      5b             pop rbx
0x0000adcb      e94075ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x0000add0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x0000add1      4889fb         mov rbx, rdi
0x0000add4      e8e775ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x0000add9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000addc      7505           jne 0xade3
0x0000adde      4885db         test rbx, rbx
0x0000ade1      7502           jne 0xade5
0x0000ade3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x0000ade4      c3             ret
0x0000ade5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000adea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x0000adf0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x0000adf3      48f7e6         mul rsi
0x0000adf6      4889c7         mov rdi, rax
0x0000adf9      0f90c0         seto al
0x0000adfc      4885ff         test rdi, rdi
0x0000adff      780a           js 0xae0b
0x0000ae01      0fb6c0         movzx eax, al
0x0000ae04      4885c0         test rax, rax
0x0000ae07      7502           jne 0xae0b
0x0000ae09      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000ae0b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000ae0f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x0000ae14      6690           nop
0x0000ae16      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x0000ae20      ebae           jmp sym.xmalloc
0x0000ae22      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x0000ae26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x0000ae30      4885f6         test rsi, rsi
0x0000ae33      53             push rbx
0x0000ae34      4889f3         mov rbx, rsi
0x0000ae37      7505           jne 0xae3e
0x0000ae39      4885ff         test rdi, rdi
0x0000ae3c      751a           jne 0xae58
0x0000ae3e      4889de         mov rsi, rbx
0x0000ae41      e80a76ffff     call sym.imp.realloc
0x0000ae46      4885c0         test rax, rax
0x0000ae49      7505           jne 0xae50
0x0000ae4b      4885db         test rbx, rbx
0x0000ae4e      7511           jne 0xae61                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x0000ae50      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x0000ae51      c3             ret
0x0000ae52      660f1f440000   nop word [rax + rax]
0x0000ae58      e81372ffff     call sym.imp.free
0x0000ae5d      31c0           xor eax, eax
0x0000ae5f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x0000ae60      c3             ret
0x0000ae61      e8ba010000     call sym.xalloc_die
0x0000ae66      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x0000ae70      4889f0         mov rax, rsi
0x0000ae73      48f7e2         mul rdx
0x0000ae76      4889c6         mov rsi, rax
0x0000ae79      0f90c0         seto al
0x0000ae7c      4885f6         test rsi, rsi
0x0000ae7f      780a           js 0xae8b
0x0000ae81      0fb6c0         movzx eax, al
0x0000ae84      4885c0         test rax, rax
0x0000ae87      7502           jne 0xae8b
0x0000ae89      eba5           jmp sym.xrealloc
0x0000ae8b      4883ec08       sub rsp, 8
0x0000ae8f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x0000ae94      6690           nop
0x0000ae96      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x0000aea0      4885ff         test rdi, rdi
0x0000aea3      4989d1         mov r9, rdx
0x0000aea6      488b0e         mov rcx, qword [rsi]
0x0000aea9      7435           je 0xaee0
0x0000aeab      31d2           xor edx, edx
0x0000aead      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x0000aeb7      49f7f1         div r9
0x0000aeba      4839c8         cmp rax, rcx
0x0000aebd      763c           jbe 0xaefb
0x0000aebf      4889c8         mov rax, rcx
0x0000aec2      48d1e8         shr rax, 1
0x0000aec5      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000aeca      48890e         mov qword [rsi], rcx
0x0000aecd      490fafc9       imul rcx, r9
0x0000aed1      4889ce         mov rsi, rcx
0x0000aed4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x0000aed9      0f1f80000000.  nop dword [rax]
0x0000aee0      4885c9         test rcx, rcx
0x0000aee3      7423           je 0xaf08
0x0000aee5      4889c8         mov rax, rcx
0x0000aee8      49f7e1         mul r9
0x0000aeeb      0f90c2         seto dl
0x0000aeee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x0000aef1      0fb6d2         movzx edx, dl
0x0000aef4      7805           js 0xaefb
0x0000aef6      4885d2         test rdx, rdx
0x0000aef9      74cf           je 0xaeca
0x0000aefb      4883ec08       sub rsp, 8
0x0000aeff      e81c010000     call sym.xalloc_die
0x0000af04      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x0000af08      31d2           xor edx, edx
0x0000af0a      b880000000     mov eax, 0x80
0x0000af0f      4531c0         xor r8d, r8d
0x0000af12      49f7f1         div r9
0x0000af15      4885c0         test rax, rax
0x0000af18      410f94c0       sete r8b
0x0000af1c      498d0c00       lea rcx, [r8 + rax]
0x0000af20      ebc3           jmp 0xaee5
0x0000af22      0f1f4000       nop dword [rax]
0x0000af26      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x0000af30      4885ff         test rdi, rdi
0x0000af33      488b06         mov rax, qword [rsi]
0x0000af36      7428           je 0xaf60
0x0000af38      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x0000af42      4839d0         cmp rax, rdx
0x0000af45      772a           ja 0xaf71
0x0000af47      4889c2         mov rdx, rax
0x0000af4a      48d1ea         shr rdx, 1
0x0000af4d      488d440201     lea rax, [rdx + rax + 1]
0x0000af52      488906         mov qword [rsi], rax
0x0000af55      4889c6         mov rsi, rax
0x0000af58      e9d3feffff     jmp sym.xrealloc
0x0000af5d      0f1f00         nop dword [rax]
0x0000af60      4885c0         test rax, rax
0x0000af63      ba80000000     mov edx, 0x80
0x0000af68      480f44c2       cmove rax, rdx
0x0000af6c      4885c0         test rax, rax
0x0000af6f      79e1           jns 0xaf52
0x0000af71      4883ec08       sub rsp, 8
0x0000af75      e8a6000000     call sym.xalloc_die
0x0000af7a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x0000af80      53             push rbx
0x0000af81      4889fb         mov rbx, rdi
0x0000af84      e847feffff     call sym.xmalloc
0x0000af89      4889da         mov rdx, rbx
0x0000af8c      31f6           xor esi, esi
0x0000af8e      4889c7         mov rdi, rax
0x0000af91      5b             pop rbx
0x0000af92      e90973ffff     jmp sym.imp.memset
0x0000af97      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x0000afa0      4889f8         mov rax, rdi
0x0000afa3      4883ec08       sub rsp, 8
0x0000afa7      48f7e6         mul rsi
0x0000afaa      0f90c2         seto dl
0x0000afad      4885c0         test rax, rax
0x0000afb0      7817           js 0xafc9
0x0000afb2      0fb6d2         movzx edx, dl
0x0000afb5      4885d2         test rdx, rdx
0x0000afb8      750f           jne 0xafc9
0x0000afba      e86173ffff     call sym.imp.calloc
0x0000afbf      4885c0         test rax, rax
0x0000afc2      7405           je 0xafc9
0x0000afc4      4883c408       add rsp, 8
0x0000afc8      c3             ret
0x0000afc9      e852000000     call sym.xalloc_die
0x0000afce      6690           nop
;-- xmemdup:
0x0000afd0      55             push rbp
0x0000afd1      53             push rbx
0x0000afd2      4889fd         mov rbp, rdi
0x0000afd5      4889f7         mov rdi, rsi
0x0000afd8      4889f3         mov rbx, rsi
0x0000afdb      4883ec08       sub rsp, 8
0x0000afdf      e8ecfdffff     call sym.xmalloc
0x0000afe4      4883c408       add rsp, 8
0x0000afe8      4889da         mov rdx, rbx
0x0000afeb      4889ee         mov rsi, rbp
0x0000afee      5b             pop rbx
0x0000afef      5d             pop rbp
0x0000aff0      4889c7         mov rdi, rax
0x0000aff3      e96873ffff     jmp sym.imp.memcpy
0x0000aff8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x0000b000      53             push rbx
0x0000b001      4889fb         mov rbx, rdi
0x0000b004      e8a771ffff     call sym.imp.strlen
0x0000b009      4889df         mov rdi, rbx
0x0000b00c      488d7001       lea rsi, [rax + 1]
0x0000b010      5b             pop rbx
0x0000b011      ebbd           jmp sym.xmemdup
0x0000b013      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b01d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x0000b020      488d35e85800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1090f ; "memory exhausted"
0x0000b027      4883ec08       sub rsp, 8
0x0000b02b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x0000b030      31ff           xor edi, edi
0x0000b032      e85971ffff     call sym.imp.dcgettext
0x0000b037      8b3d2b922000   mov edi, dword [obj.exit_failure]       ; [0x214268:4]=1
0x0000b03d      488d15335c00.  lea rdx, [0x00010c77]                   ; "%s"
0x0000b044      4889c1         mov rcx, rax
0x0000b047      31f6           xor esi, esi
0x0000b049      31c0           xor eax, eax
0x0000b04b      e85074ffff     call sym.imp.error
0x0000b050      e84b70ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x0000b055      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b05f      90             nop
;-- xgetcwd:
0x0000b060      53             push rbx                                ; ../coreutils-8.31/lib/xgetcwd.c:36
0x0000b061      31f6           xor esi, esi                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x0000b063      31ff           xor edi, edi
0x0000b065      e84672ffff     call sym.imp.getcwd
0x0000b06a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x0000b06d      4889c3         mov rbx, rax                            ; unistd.h:210   return __getcwd_alias (__buf, __size);
0x0000b070      740e           je 0xb080                               ; ../coreutils-8.31/lib/xgetcwd.c:38
0x0000b072      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xgetcwd.c:41
0x0000b075      5b             pop rbx
0x0000b076      c3             ret
0x0000b077      660f1f840000.  nop word [rax + rax]
0x0000b080      e82b70ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetcwd.c:38
0x0000b085      83380c         cmp dword [rax], 0xc
0x0000b088      75e8           jne 0xb072
0x0000b08a      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetcwd.c:39
0x0000b08f      90             nop
;-- xstrtol_fatal:
0x0000b090      4155           push r13
0x0000b092      4154           push r12
0x0000b094      4189f2         mov r10d, esi
0x0000b097      55             push rbp
0x0000b098      53             push rbx
0x0000b099      4d89c4         mov r12, r8
0x0000b09c      4883ec18       sub rsp, 0x18
0x0000b0a0      64488b042528.  mov rax, qword fs:[0x28]
0x0000b0a9      4889442408     mov qword [rsp + 8], rax
0x0000b0ae      31c0           xor eax, eax
0x0000b0b0      83ff03         cmp edi, 3
0x0000b0b3      8b2daf912000   mov ebp, dword [obj.exit_failure]       ; [0x214268:4]=1
0x0000b0b9      7759           ja 0xb114
0x0000b0bb      83ff02         cmp edi, 2
0x0000b0be      734b           jae 0xb10b
0x0000b0c0      83ef01         sub edi, 1
0x0000b0c3      488d35715800.  lea rsi, str.s_s_argument___s__too_large ; 0x1093b ; "%s%s argument '%s' too large"
0x0000b0ca      753a           jne 0xb106
0x0000b0cc      4585d2         test r10d, r10d
0x0000b0cf      4963c2         movsxd rax, r10d
0x0000b0d2      784e           js 0xb122
0x0000b0d4      48c1e005       shl rax, 5
0x0000b0d8      488d1d795800.  lea rbx, [0x00010958]                   ; "--"
0x0000b0df      4c8b2c01       mov r13, qword [rcx + rax]
0x0000b0e3      ba05000000     mov edx, 5
0x0000b0e8      31ff           xor edi, edi
0x0000b0ea      e8a170ffff     call sym.imp.dcgettext
0x0000b0ef      4d89e1         mov r9, r12
0x0000b0f2      4889c2         mov rdx, rax
0x0000b0f5      4d89e8         mov r8, r13
0x0000b0f8      4889d9         mov rcx, rbx
0x0000b0fb      31f6           xor esi, esi
0x0000b0fd      89ef           mov edi, ebp
0x0000b0ff      31c0           xor eax, eax
0x0000b101      e89a73ffff     call sym.imp.error
0x0000b106      e8956fffff     call sym.imp.abort
0x0000b10b      488d354e5800.  lea rsi, str.invalid_suffix_in__s_s_argument___s ; 0x10960 ; "invalid suffix in %s%s argument '%s'"
0x0000b112      ebb8           jmp 0xb0cc
0x0000b114      83ff04         cmp edi, 4
0x0000b117      488d35025800.  lea rsi, str.invalid__s_s_argument___s  ; 0x10920 ; "invalid %s%s argument '%s'"
0x0000b11e      74ac           je 0xb0cc
0x0000b120      ebe4           jmp 0xb106
0x0000b122      488d1d2f5800.  lea rbx, [0x00010958]                   ; "--"
0x0000b129      88542406       mov byte [rsp + 6], dl
0x0000b12d      c644240700     mov byte [rsp + 7], 0
0x0000b132      4c8d6c2406     lea r13, [rsp + 6]
0x0000b137      4829c3         sub rbx, rax
0x0000b13a      eba7           jmp 0xb0e3
0x0000b13c      0f1f4000       nop dword [rax]
;-- xstrtoumax:
0x0000b140      4157           push r15
0x0000b142      4156           push r14
0x0000b144      4155           push r13
0x0000b146      4154           push r12
0x0000b148      55             push rbp
0x0000b149      53             push rbx
0x0000b14a      4883ec28       sub rsp, 0x28
0x0000b14e      64488b042528.  mov rax, qword fs:[0x28]
0x0000b157      4889442418     mov qword [rsp + 0x18], rax
0x0000b15c      31c0           xor eax, eax
0x0000b15e      83fa24         cmp edx, 0x24
0x0000b161      0f875e030000   ja 0xb4c5
0x0000b167      488d442410     lea rax, [rsp + 0x10]
0x0000b16c      4989f7         mov r15, rsi
0x0000b16f      4885f6         test rsi, rsi
0x0000b172      4889fd         mov rbp, rdi
0x0000b175      89542408       mov dword [rsp + 8], edx
0x0000b179      4989ce         mov r14, rcx
0x0000b17c      4d89c5         mov r13, r8
0x0000b17f      4c0f44f8       cmove r15, rax
0x0000b183      e8286fffff     call sym.imp.__errno_location
0x0000b188      c70000000000   mov dword [rax], 0
0x0000b18e      4989c4         mov r12, rax
0x0000b191      0fb65d00       movzx ebx, byte [rbp]
0x0000b195      e8f673ffff     call sym.imp.__ctype_b_loc
0x0000b19a      8b542408       mov edx, dword [rsp + 8]
0x0000b19e      488b30         mov rsi, qword [rax]
0x0000b1a1      4889e8         mov rax, rbp
0x0000b1a4      eb11           jmp 0xb1b7
0x0000b1a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b1b0      4883c001       add rax, 1
0x0000b1b4      0fb618         movzx ebx, byte [rax]
0x0000b1b7      0fb6cb         movzx ecx, bl
0x0000b1ba      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000b1bf      75ef           jne 0xb1b0
0x0000b1c1      80fb2d         cmp bl, 0x2d
0x0000b1c4      7452           je 0xb218
0x0000b1c6      31c9           xor ecx, ecx
0x0000b1c8      4c89fe         mov rsi, r15
0x0000b1cb      4889ef         mov rdi, rbp
0x0000b1ce      e8bd70ffff     call sym.imp.__strtoul_internal
0x0000b1d3      498b0f         mov rcx, qword [r15]
0x0000b1d6      4889c3         mov rbx, rax
0x0000b1d9      4839e9         cmp rcx, rbp
0x0000b1dc      742a           je 0xb208
0x0000b1de      418b0424       mov eax, dword [r12]
0x0000b1e2      85c0           test eax, eax
0x0000b1e4      7462           je 0xb248
0x0000b1e6      83f822         cmp eax, 0x22
0x0000b1e9      bd01000000     mov ebp, 1
0x0000b1ee      7528           jne 0xb218
0x0000b1f0      4d85ed         test r13, r13
0x0000b1f3      7409           je 0xb1fe
0x0000b1f5      440fb621       movzx r12d, byte [rcx]
0x0000b1f9      4584e4         test r12b, r12b
0x0000b1fc      7579           jne 0xb277
0x0000b1fe      49891e         mov qword [r14], rbx
0x0000b201      eb1a           jmp 0xb21d
0x0000b203      0f1f440000     nop dword [rax + rax]
0x0000b208      4d85ed         test r13, r13
0x0000b20b      48894c2408     mov qword [rsp + 8], rcx
0x0000b210      753e           jne 0xb250
0x0000b212      660f1f440000   nop word [rax + rax]
0x0000b218      bd04000000     mov ebp, 4
0x0000b21d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x0000b222      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000b22b      89e8           mov eax, ebp
0x0000b22d      0f858d020000   jne 0xb4c0
0x0000b233      4883c428       add rsp, 0x28
0x0000b237      5b             pop rbx
0x0000b238      5d             pop rbp
0x0000b239      415c           pop r12
0x0000b23b      415d           pop r13
0x0000b23d      415e           pop r14
0x0000b23f      415f           pop r15
0x0000b241      c3             ret
0x0000b242      660f1f440000   nop word [rax + rax]
0x0000b248      31ed           xor ebp, ebp
0x0000b24a      eba4           jmp 0xb1f0
0x0000b24c      0f1f4000       nop dword [rax]
0x0000b250      440fb66500     movzx r12d, byte [rbp]
0x0000b255      4584e4         test r12b, r12b
0x0000b258      74be           je 0xb218
0x0000b25a      410fbef4       movsx esi, r12b
0x0000b25e      4c89ef         mov rdi, r13
0x0000b261      31ed           xor ebp, ebp
0x0000b263      e8b86fffff     call sym.imp.strchr
0x0000b268      4885c0         test rax, rax
0x0000b26b      bb01000000     mov ebx, 1
0x0000b270      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b275      74a1           je 0xb218
0x0000b277      410fbef4       movsx esi, r12b
0x0000b27b      4c89ef         mov rdi, r13
0x0000b27e      48894c2408     mov qword [rsp + 8], rcx
0x0000b283      e8986fffff     call sym.imp.strchr
0x0000b288      4885c0         test rax, rax
0x0000b28b      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b290      0f84c6000000   je 0xb35c
0x0000b296      418d4424bb     lea eax, [r12 - 0x45]
0x0000b29b      3c2f           cmp al, 0x2f
0x0000b29d      7751           ja 0xb2f0
0x0000b29f      48ba45893000.  movabs rdx, 0x814400308945
0x0000b2a9      480fa3c2       bt rdx, rax
0x0000b2ad      7341           jae 0xb2f0
0x0000b2af      be30000000     mov esi, 0x30                           ; '0'
0x0000b2b4      4c89ef         mov rdi, r13
0x0000b2b7      48894c2408     mov qword [rsp + 8], rcx
0x0000b2bc      e85f6fffff     call sym.imp.strchr
0x0000b2c1      4885c0         test rax, rax
0x0000b2c4      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b2c9      7425           je 0xb2f0
0x0000b2cb      0fb64101       movzx eax, byte [rcx + 1]
0x0000b2cf      3c44           cmp al, 0x44
0x0000b2d1      740c           je 0xb2df
0x0000b2d3      3c69           cmp al, 0x69
0x0000b2d5      0f84cd010000   je 0xb4a8
0x0000b2db      3c42           cmp al, 0x42
0x0000b2dd      7511           jne 0xb2f0
0x0000b2df      bf02000000     mov edi, 2
0x0000b2e4      bee8030000     mov esi, 0x3e8
0x0000b2e9      eb0f           jmp 0xb2fa
0x0000b2eb      0f1f440000     nop dword [rax + rax]
0x0000b2f0      bf01000000     mov edi, 1
0x0000b2f5      be00040000     mov esi, 0x400
0x0000b2fa      4183ec42       sub r12d, 0x42
0x0000b2fe      4180fc35       cmp r12b, 0x35
0x0000b302      7758           ja 0xb35c
0x0000b304      488d15c55600.  lea rdx, [0x000109d0]
0x0000b30b      450fb6e4       movzx r12d, r12b
0x0000b30f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x0000b313      4801d0         add rax, rdx
0x0000b316      ffe0           jmp rax
0x0000b318      4889d8         mov rax, rbx
0x0000b31b      48f7e6         mul rsi
0x0000b31e      0f80ed010000   jo 0xb511
0x0000b324      4531c0         xor r8d, r8d
0x0000b327      48f7e6         mul rsi
0x0000b32a      0f80d2010000   jo 0xb502
0x0000b330      4889c3         mov rbx, rax
0x0000b333      4409c5         or ebp, r8d
0x0000b336      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b340      4863ff         movsxd rdi, edi
0x0000b343      89e8           mov eax, ebp
0x0000b345      4801f9         add rcx, rdi
0x0000b348      83c802         or eax, 2
0x0000b34b      49890f         mov qword [r15], rcx
0x0000b34e      803900         cmp byte [rcx], 0
0x0000b351      49891e         mov qword [r14], rbx
0x0000b354      0f45e8         cmovne ebp, eax
0x0000b357      e9c1feffff     jmp 0xb21d
0x0000b35c      49891e         mov qword [r14], rbx
0x0000b35f      83cd02         or ebp, 2
0x0000b362      e9b6feffff     jmp 0xb21d
0x0000b367      ba02000000     mov edx, 2
0x0000b36c      4889d0         mov rax, rdx
0x0000b36f      48f7e3         mul rbx
0x0000b372      0f8096000000   jo 0xb40e
0x0000b378      4801db         add rbx, rbx
0x0000b37b      ebc3           jmp 0xb340
0x0000b37d      ba00020000     mov edx, 0x200
0x0000b382      4889d0         mov rax, rdx
0x0000b385      48f7e3         mul rbx
0x0000b388      0f8080000000   jo 0xb40e
0x0000b38e      48c1e309       shl rbx, 9
0x0000b392      ebac           jmp 0xb340
0x0000b394      41b807000000   mov r8d, 7
0x0000b39a      4531c9         xor r9d, r9d
0x0000b39d      0f1f00         nop dword [rax]
0x0000b3a0      4889d8         mov rax, rbx
0x0000b3a3      48f7e6         mul rsi
0x0000b3a6      4889c3         mov rbx, rax
0x0000b3a9      0f808f010000   jo 0xb53e
0x0000b3af      4183e801       sub r8d, 1
0x0000b3b3      75eb           jne 0xb3a0
0x0000b3b5      4409cd         or ebp, r9d
0x0000b3b8      eb86           jmp 0xb340
0x0000b3ba      41b808000000   mov r8d, 8
0x0000b3c0      4531c9         xor r9d, r9d
0x0000b3c3      0f1f440000     nop dword [rax + rax]
0x0000b3c8      4889d8         mov rax, rbx
0x0000b3cb      48f7e6         mul rsi
0x0000b3ce      4889c3         mov rbx, rax
0x0000b3d1      0f8049010000   jo 0xb520
0x0000b3d7      4183e801       sub r8d, 1
0x0000b3db      75eb           jne 0xb3c8
0x0000b3dd      ebd6           jmp 0xb3b5
0x0000b3df      41b804000000   mov r8d, 4
0x0000b3e5      4531c9         xor r9d, r9d
0x0000b3e8      4889d8         mov rax, rbx
0x0000b3eb      48f7e6         mul rsi
0x0000b3ee      4889c3         mov rbx, rax
0x0000b3f1      0f80fc000000   jo 0xb4f3
0x0000b3f7      4183e801       sub r8d, 1
0x0000b3fb      75eb           jne 0xb3e8
0x0000b3fd      ebb6           jmp 0xb3b5
0x0000b3ff      4889d8         mov rax, rbx
0x0000b402      48f7e6         mul rsi
0x0000b405      4889c3         mov rbx, rax
0x0000b408      0f8132ffffff   jno 0xb340
0x0000b40e      bd01000000     mov ebp, 1
0x0000b413      4883cbff       or rbx, 0xffffffffffffffff
0x0000b417      e924ffffff     jmp 0xb340
0x0000b41c      0f1f4000       nop dword [rax]
0x0000b420      41b805000000   mov r8d, 5
0x0000b426      4531c9         xor r9d, r9d
0x0000b429      4889d8         mov rax, rbx
0x0000b42c      48f7e6         mul rsi
0x0000b42f      4889c3         mov rbx, rax
0x0000b432      0f80f7000000   jo 0xb52f
0x0000b438      4183e801       sub r8d, 1
0x0000b43c      75eb           jne 0xb429
0x0000b43e      e972ffffff     jmp 0xb3b5
0x0000b443      41b806000000   mov r8d, 6
0x0000b449      4531c9         xor r9d, r9d
0x0000b44c      4889d8         mov rax, rbx
0x0000b44f      48f7e6         mul rsi
0x0000b452      4889c3         mov rbx, rax
0x0000b455      0f8089000000   jo 0xb4e4
0x0000b45b      4183e801       sub r8d, 1
0x0000b45f      75eb           jne 0xb44c
0x0000b461      e94fffffff     jmp 0xb3b5
0x0000b466      ba00040000     mov edx, 0x400
0x0000b46b      4889d0         mov rax, rdx
0x0000b46e      48f7e3         mul rbx
0x0000b471      709b           jo 0xb40e
0x0000b473      48c1e30a       shl rbx, 0xa
0x0000b477      e9c4feffff     jmp 0xb340
0x0000b47c      4889d8         mov rax, rbx
0x0000b47f      48f7e6         mul rsi
0x0000b482      0f80c5000000   jo 0xb54d
0x0000b488      4531c0         xor r8d, r8d
0x0000b48b      48f7e6         mul rsi
0x0000b48e      0f8193feffff   jno 0xb327
0x0000b494      41b801000000   mov r8d, 1
0x0000b49a      4883c8ff       or rax, 0xffffffffffffffff
0x0000b49e      e984feffff     jmp 0xb327
0x0000b4a3      0f1f440000     nop dword [rax + rax]
0x0000b4a8      31ff           xor edi, edi
0x0000b4aa      80790242       cmp byte [rcx + 2], 0x42
0x0000b4ae      be00040000     mov esi, 0x400
0x0000b4b3      400f94c7       sete dil
0x0000b4b7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x0000b4bb      e93afeffff     jmp 0xb2fa
0x0000b4c0      e82b6dffff     call sym.imp.__stack_chk_fail
0x0000b4c5      488d0ddc5500.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x10aa8 ; "xstrtoumax"
0x0000b4cc      488d35b55400.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x10988 ; "../coreutils-8.31/lib/xstrtol.c"
0x0000b4d3      488d3dce5400.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x109a8 ; "0 <= strtol_base && strtol_base <= 36"
0x0000b4da      ba54000000     mov edx, 0x54                           ; 'T'
0x0000b4df      e89c6dffff     call sym.imp.__assert_fail
0x0000b4e4      41b901000000   mov r9d, 1
0x0000b4ea      4883cbff       or rbx, 0xffffffffffffffff
0x0000b4ee      e968ffffff     jmp 0xb45b
0x0000b4f3      41b901000000   mov r9d, 1
0x0000b4f9      4883cbff       or rbx, 0xffffffffffffffff
0x0000b4fd      e9f5feffff     jmp 0xb3f7
0x0000b502      41b801000000   mov r8d, 1
0x0000b508      4883cbff       or rbx, 0xffffffffffffffff
0x0000b50c      e922feffff     jmp 0xb333
0x0000b511      4883c8ff       or rax, 0xffffffffffffffff
0x0000b515      41b801000000   mov r8d, 1
0x0000b51b      e907feffff     jmp 0xb327
0x0000b520      41b901000000   mov r9d, 1
0x0000b526      4883cbff       or rbx, 0xffffffffffffffff
0x0000b52a      e9a8feffff     jmp 0xb3d7
0x0000b52f      41b901000000   mov r9d, 1
0x0000b535      4883cbff       or rbx, 0xffffffffffffffff
0x0000b539      e9fafeffff     jmp 0xb438
0x0000b53e      41b901000000   mov r9d, 1
0x0000b544      4883cbff       or rbx, 0xffffffffffffffff
0x0000b548      e962feffff     jmp 0xb3af
0x0000b54d      41b801000000   mov r8d, 1
0x0000b553      4883c8ff       or rax, 0xffffffffffffffff
0x0000b557      e92fffffff     jmp 0xb48b
0x0000b55c      0f1f4000       nop dword [rax]
;-- rpl_asprintf:
0x0000b560      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/asprintf.c:31
0x0000b567      84c0           test al, al
0x0000b569      4889542430     mov qword [rsp + 0x30], rdx
0x0000b56e      48894c2438     mov qword [rsp + 0x38], rcx
0x0000b573      4c89442440     mov qword [rsp + 0x40], r8
0x0000b578      4c894c2448     mov qword [rsp + 0x48], r9
0x0000b57d      7437           je 0xb5b6
0x0000b57f      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x0000b584      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x0000b589      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x0000b58e      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x0000b596      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x0000b59e      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x0000b5a6      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x0000b5ae      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x0000b5b6      64488b042528.  mov rax, qword fs:[0x28]
0x0000b5bf      4889442418     mov qword [rsp + 0x18], rax
0x0000b5c4      31c0           xor eax, eax
0x0000b5c6      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/asprintf.c:35
0x0000b5ce      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/asprintf.c:36
0x0000b5d1      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/asprintf.c:35
0x0000b5d6      488d442420     lea rax, [rsp + 0x20]
0x0000b5db      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0000b5e2      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x0000b5ea      4889442410     mov qword [rsp + 0x10], rax
0x0000b5ef      e87c0e0000     call sym.rpl_vasprintf                  ; ../coreutils-8.31/lib/asprintf.c:36
0x0000b5f4      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/asprintf.c:39
0x0000b5f9      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b602      7508           jne 0xb60c
0x0000b604      4881c4d80000.  add rsp, 0xd8
0x0000b60b      c3             ret
0x0000b60c      e8df6bffff     call sym.imp.__stack_chk_fail
0x0000b611      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b61b      0f1f440000     nop dword [rax + rax]
;-- cdb_free:
0x0000b620      8b3f           mov edi, dword [rdi]                    ; ../coreutils-8.31/lib/chdir-long.c:60
0x0000b622      85ff           test edi, edi
0x0000b624      781a           js 0xb640
0x0000b626      4883ec08       sub rsp, 8
0x0000b62a      e8a16cffff     call sym.imp.close                      ; ../coreutils-8.31/lib/chdir-long.c:63
0x0000b62f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:64
0x0000b631      750f           jne 0xb642
0x0000b633      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:66
0x0000b637      c3             ret
0x0000b638      0f1f84000000.  nop dword [rax + rax]
0x0000b640      f3c3           ret
0x0000b642      488d0de75400.  lea rcx, obj.__PRETTY_FUNCTION__.5081   ; ../coreutils-8.31/lib/chdir-long.c:64 ; 0x10b30 ; "cdb_free"
0x0000b649      488d35685400.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b650      488d3d845400.  lea rdi, str.close_fail                 ; 0x10adb ; "! close_fail"
0x0000b657      ba40000000     mov edx, 0x40                           ; segment.PHDR
0x0000b65c      e81f6cffff     call sym.imp.__assert_fail
0x0000b661      0f1f440000     nop dword [rax + rax]
0x0000b666      662e0f1f8400.  nop word cs:[rax + rax]
;-- cdb_advance_fd:
0x0000b670      55             push rbp                                ; ../coreutils-8.31/lib/chdir-long.c:74
0x0000b671      53             push rbx
0x0000b672      4889fb         mov rbx, rdi
0x0000b675      31c0           xor eax, eax                            ; fcntl2.h:129       return __openat_alias (__fd, __path, __oflag, __va_arg_pack ());
0x0000b677      ba00090100     mov edx, 0x10900
0x0000b67c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:74
0x0000b680      8b3f           mov edi, dword [rdi]                    ; fcntl2.h:129       return __openat_alias (__fd, __path, __oflag, __va_arg_pack ());
0x0000b682      e8496bffff     call sym.imp.openat
0x0000b687      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:77
0x0000b689      7815           js 0xb6a0
0x0000b68b      89c5           mov ebp, eax
0x0000b68d      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/chdir-long.c:80
0x0000b690      e88bffffff     call sym.cdb_free
0x0000b695      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/chdir-long.c:81
0x0000b697      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/chdir-long.c:83
0x0000b699      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/chdir-long.c:84
0x0000b69d      5b             pop rbx
0x0000b69e      5d             pop rbp
0x0000b69f      c3             ret
0x0000b6a0      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/chdir-long.c:78 ; -1
0x0000b6a5      ebf2           jmp 0xb699
0x0000b6a7      660f1f840000.  nop word [rax + rax]
;-- chdir_long:
0x0000b6b0      4157           push r15                                ; ../coreutils-8.31/lib/chdir-long.c:111
0x0000b6b2      4156           push r14
0x0000b6b4      4155           push r13
0x0000b6b6      4154           push r12
0x0000b6b8      55             push rbp
0x0000b6b9      53             push rbx
0x0000b6ba      4889fd         mov rbp, rdi
0x0000b6bd      4883ec18       sub rsp, 0x18
0x0000b6c1      64488b042528.  mov rax, qword fs:[0x28]
0x0000b6ca      4889442408     mov qword [rsp + 8], rax
0x0000b6cf      31c0           xor eax, eax
0x0000b6d1      e80a6bffff     call sym.imp.chdir                      ; ../coreutils-8.31/lib/chdir-long.c:112
0x0000b6d6      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:113
0x0000b6d8      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/chdir-long.c:112
0x0000b6da      740d           je 0xb6e9                               ; ../coreutils-8.31/lib/chdir-long.c:113
0x0000b6dc      e8cf69ffff     call sym.imp.__errno_location
0x0000b6e1      833824         cmp dword [rax], 0x24
0x0000b6e4      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/chdir-long.c:77
0x0000b6e7      7427           je 0xb710
0x0000b6e9      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b6ee      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000b6f7      89d8           mov eax, ebx
0x0000b6f9      0f8502020000   jne 0xb901
0x0000b6ff      4883c418       add rsp, 0x18
0x0000b703      5b             pop rbx
0x0000b704      5d             pop rbp
0x0000b705      415c           pop r12
0x0000b707      415d           pop r13
0x0000b709      415e           pop r14
0x0000b70b      415f           pop r15
0x0000b70d      c3             ret
0x0000b70e      6690           nop
0x0000b710      4889ef         mov rdi, rbp
0x0000b713      e8986affff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/chdir-long.c:86
0x0000b718      4885c0         test rax, rax
0x0000b71b      4989c4         mov r12, rax
0x0000b71e      c74424049cff.  mov dword [rsp + 4], 0xffffff9c         ; [0xffffff9c:4]=-1 ; 4294967196
0x0000b726      0f84da010000   je 0xb906
0x0000b72c      483dff0f0000   cmp rax, 0xfff                          ; ../coreutils-8.31/lib/chdir-long.c:-42
0x0000b732      0f86ed010000   jbe 0xb925
0x0000b738      488d358f4900.  lea rsi, [0x000100ce]                   ; "/"
0x0000b73f      4889ef         mov rdi, rbp
0x0000b742      e8996bffff     call sym.imp.strspn
0x0000b747      4883f802       cmp rax, 2
0x0000b74b      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/chdir-long.c:-54
0x0000b74e      0f84cc000000   je 0xb820                               ; ../coreutils-8.31/lib/chdir-long.c:-9
0x0000b754      4885c0         test rax, rax
0x0000b757      4989ef         mov r15, rbp                            ; ../coreutils-8.31/lib/chdir-long.c:-7
0x0000b75a      0f8560010000   jne 0xb8c0                              ; ../coreutils-8.31/lib/chdir-long.c:8
0x0000b760      41803f2f       cmp byte [r15], 0x2f
0x0000b764      0f84f9010000   je 0xb963
0x0000b76a      4c01e5         add rbp, r12
0x0000b76d      4939ef         cmp r15, rbp
0x0000b770      0f87ce010000   ja 0xb944
0x0000b776      4889e8         mov rax, rbp
0x0000b779      4c8d642404     lea r12, [rsp + 4]                      ; ../coreutils-8.31/lib/chdir-long.c:6
0x0000b77e      4c29f8         sub rax, r15
0x0000b781      483dff0f0000   cmp rax, 0xfff
0x0000b787      4d89e5         mov r13, r12
0x0000b78a      7f60           jg 0xb7ec
0x0000b78c      e9ff000000     jmp 0xb890
0x0000b791      0f1f80000000.  nop dword [rax]
0x0000b798      c60000         mov byte [rax], 0
0x0000b79b      4c29f8         sub rax, r15                            ; ../coreutils-8.31/lib/chdir-long.c:9
0x0000b79e      483dff0f0000   cmp rax, 0xfff                          ; ../coreutils-8.31/lib/chdir-long.c:10
0x0000b7a4      0f8f38010000   jg 0xb8e2                               ; ../coreutils-8.31/lib/chdir-long.c:13
0x0000b7aa      4c89fe         mov rsi, r15
0x0000b7ad      4c89e7         mov rdi, r12
0x0000b7b0      4d89e5         mov r13, r12
0x0000b7b3      e8b8feffff     call sym.cdb_advance_fd
0x0000b7b8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/chdir-long.c:-129
0x0000b7ba      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000b7bd      0f85b5000000   jne 0xb878
0x0000b7c3      4883c301       add rbx, 1
0x0000b7c7      488d35004900.  lea rsi, [0x000100ce]                   ; "/"
0x0000b7ce      4889df         mov rdi, rbx
0x0000b7d1      e80a6bffff     call sym.imp.strspn
0x0000b7d6      4c8d3c03       lea r15, [rbx + rax]
0x0000b7da      4889e8         mov rax, rbp
0x0000b7dd      4c29f8         sub rax, r15
0x0000b7e0      483dff0f0000   cmp rax, 0xfff
0x0000b7e6      0f8ea4000000   jle 0xb890
0x0000b7ec      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/chdir-long.c:-158
0x0000b7f1      be2f000000     mov esi, 0x2f                           ; '/'
0x0000b7f6      4c89ff         mov rdi, r15
0x0000b7f9      e8b26cffff     call sym.imp.memrchr
0x0000b7fe      4885c0         test rax, rax
0x0000b801      4889c3         mov rbx, rax
0x0000b804      7592           jne 0xb798
0x0000b806      41c706240000.  mov dword [r14], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000b80d      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000b812      e9d2feffff     jmp 0xb6e9
0x0000b817      660f1f840000.  nop word [rax + rax]
0x0000b820      498d5424fd     lea rdx, [r12 - 3]
0x0000b825      488d7d03       lea rdi, [rbp + 3]                      ; ../coreutils-8.31/lib/chdir-long.c:-210
0x0000b829      be2f000000     mov esi, 0x2f                           ; '/'
0x0000b82e      e8bd6affff     call sym.imp.memchr
0x0000b833      4885c0         test rax, rax
0x0000b836      4889c3         mov rbx, rax
0x0000b839      744b           je 0xb886
0x0000b83b      4c8d6c2404     lea r13, [rsp + 4]
0x0000b840      c60000         mov byte [rax], 0
0x0000b843      4889ee         mov rsi, rbp
0x0000b846      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/chdir-long.c:-240
0x0000b849      e822feffff     call sym.cdb_advance_fd
0x0000b84e      85c0           test eax, eax
0x0000b850      c6032f         mov byte [rbx], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x0000b853      7523           jne 0xb878
0x0000b855      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/chdir-long.c:-375
0x0000b859      488d356e4800.  lea rsi, [0x000100ce]                   ; "/"
0x0000b860      4889df         mov rdi, rbx
0x0000b863      e8786affff     call sym.imp.strspn
0x0000b868      4c8d3c03       lea r15, [rbx + rax]
0x0000b86c      e9effeffff     jmp 0xb760                              ; ../coreutils-8.31/lib/chdir-long.c:-232
0x0000b871      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/chdir-long.c:-273
0x0000b878      418b1e         mov ebx, dword [r14]
0x0000b87b      4c89ef         mov rdi, r13
0x0000b87e      e89dfdffff     call sym.cdb_free
0x0000b883      41891e         mov dword [r14], ebx
0x0000b886      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000b88b      e959feffff     jmp 0xb6e9
0x0000b890      4c39fd         cmp rbp, r15
0x0000b893      760f           jbe 0xb8a4                              ; ../coreutils-8.31/lib/chdir-long.c:-251
0x0000b895      4c89fe         mov rsi, r15
0x0000b898      4c89ef         mov rdi, r13
0x0000b89b      e8d0fdffff     call sym.cdb_advance_fd
0x0000b8a0      85c0           test eax, eax
0x0000b8a2      75d4           jne 0xb878
0x0000b8a4      8b7c2404       mov edi, dword [rsp + 4]
0x0000b8a8      e8936bffff     call sym.imp.fchdir
0x0000b8ad      85c0           test eax, eax
0x0000b8af      89c3           mov ebx, eax
0x0000b8b1      75c5           jne 0xb878
0x0000b8b3      4c89ef         mov rdi, r13
0x0000b8b6      e865fdffff     call sym.cdb_free
0x0000b8bb      e929feffff     jmp 0xb6e9
0x0000b8c0      4c8d6c2404     lea r13, [rsp + 4]
0x0000b8c5      488d35024800.  lea rsi, [0x000100ce]                   ; "/"
0x0000b8cc      4c89ef         mov rdi, r13
0x0000b8cf      e89cfdffff     call sym.cdb_advance_fd
0x0000b8d4      85c0           test eax, eax
0x0000b8d6      75a0           jne 0xb878                              ; ../coreutils-8.31/lib/chdir-long.c:-303
0x0000b8d8      4c8d7c1d00     lea r15, [rbp + rbx]
0x0000b8dd      e97efeffff     jmp 0xb760
0x0000b8e2      488d0d575200.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0x10b40 ; "chdir_long"
0x0000b8e9      488d35c85100.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b8f0      488d3d205200.  lea rdi, str.slash___dir___4096         ; 0x10b17 ; "slash - dir < 4096"
0x0000b8f7      bab3000000     mov edx, 0xb3
0x0000b8fc      e87f69ffff     call sym.imp.__assert_fail
0x0000b901      e8ea68ffff     call sym.imp.__stack_chk_fail
0x0000b906      488d0d335200.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0x10b40 ; "chdir_long"
0x0000b90d      488d35a45100.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b914      488d3dcd5100.  lea rdi, str.0___len                    ; ../coreutils-8.31/lib/chdir-long.c:-268 ; 0x10ae8 ; "0 < len"
0x0000b91b      ba7e000000     mov edx, 0x7e                           ; '~'
0x0000b920      e85b69ffff     call sym.imp.__assert_fail
0x0000b925      488d0d145200.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0x10b40 ; "chdir_long"
0x0000b92c      488d35855100.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b933      488d3db65100.  lea rdi, str.4096____len                ; 0x10af0 ; "4096 <= len"
0x0000b93a      ba7f000000     mov edx, 0x7f
0x0000b93f      e83c69ffff     call sym.imp.__assert_fail
0x0000b944      488d0df55100.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0x10b40 ; "chdir_long"
0x0000b94b      488d35665100.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b952      488d3daf5100.  lea rdi, str.dir____dir_end             ; 0x10b08 ; "dir <= dir_end"
0x0000b959      baa3000000     mov edx, 0xa3
0x0000b95e      e81d69ffff     call sym.imp.__assert_fail
0x0000b963      488d0dd65100.  lea rcx, obj.__PRETTY_FUNCTION__.5099   ; 0x10b40 ; "chdir_long"
0x0000b96a      488d35475100.  lea rsi, str..._coreutils_8.31_lib_chdir_long.c ; 0x10ab8 ; "../coreutils-8.31/lib/chdir-long.c"
0x0000b971      488d3d845100.  lea rdi, str.dir                        ; 0x10afc ; "*dir != '/'"
0x0000b978      baa2000000     mov edx, 0xa2
0x0000b97d      e8fe68ffff     call sym.imp.__assert_fail
0x0000b982      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b98c      0f1f4000       nop dword [rax]
;-- get_fs_usage:
0x0000b990      4154           push r12
0x0000b992      55             push rbp
0x0000b993      4989fc         mov r12, rdi
0x0000b996      53             push rbx
0x0000b997      4889d3         mov rbx, rdx
0x0000b99a      4881ec900100.  sub rsp, 0x190
0x0000b9a1      64488b042528.  mov rax, qword fs:[0x28]
0x0000b9aa      488984248801.  mov qword [rsp + 0x188], rax
0x0000b9b2      31c0           xor eax, eax
0x0000b9b4      8b0526892000   mov eax, dword [obj.statvfs_works_cache.2531] ; [0x2142e0:4]=-1
0x0000b9ba      4889e5         mov rbp, rsp
0x0000b9bd      85c0           test eax, eax
0x0000b9bf      782f           js 0xb9f0
0x0000b9c1      7447           je 0xba0a
0x0000b9c3      4889ee         mov rsi, rbp
0x0000b9c6      4c89e7         mov rdi, r12
0x0000b9c9      e8626affff     call sym.imp.statvfs
0x0000b9ce      89c2           mov edx, eax
0x0000b9d0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000b9d5      85d2           test edx, edx
0x0000b9d7      0f887e000000   js 0xba5b
0x0000b9dd      488b442408     mov rax, qword [rsp + 8]
0x0000b9e2      4885c0         test rax, rax
0x0000b9e5      753b           jne 0xba22
0x0000b9e7      488b0424       mov rax, qword [rsp]
0x0000b9eb      eb35           jmp 0xba22
0x0000b9ed      0f1f00         nop dword [rax]
0x0000b9f0      4889ef         mov rdi, rbp
0x0000b9f3      e86868ffff     call sym.imp.uname
0x0000b9f8      85c0           test eax, eax
0x0000b9fa      0f8480000000   je 0xba80
0x0000ba00      c705d6882000.  mov dword [obj.statvfs_works_cache.2531], 0 ; [0x2142e0:4]=-1
0x0000ba0a      4889ee         mov rsi, rbp
0x0000ba0d      4c89e7         mov rdi, r12
0x0000ba10      e86b69ffff     call sym.imp.statfs
0x0000ba15      85c0           test eax, eax
0x0000ba17      0f888d000000   js 0xbaaa
0x0000ba1d      488b442448     mov rax, qword [rsp + 0x48]
0x0000ba22      488903         mov qword [rbx], rax
0x0000ba25      488b442410     mov rax, qword [rsp + 0x10]
0x0000ba2a      48894308       mov qword [rbx + 8], rax
0x0000ba2e      488b442418     mov rax, qword [rsp + 0x18]
0x0000ba33      48894310       mov qword [rbx + 0x10], rax
0x0000ba37      488b442420     mov rax, qword [rsp + 0x20]
0x0000ba3c      48894318       mov qword [rbx + 0x18], rax
0x0000ba40      48c1e83f       shr rax, 0x3f
0x0000ba44      884320         mov byte [rbx + 0x20], al
0x0000ba47      488b442428     mov rax, qword [rsp + 0x28]
0x0000ba4c      48894328       mov qword [rbx + 0x28], rax
0x0000ba50      488b442430     mov rax, qword [rsp + 0x30]
0x0000ba55      48894330       mov qword [rbx + 0x30], rax
0x0000ba59      31c0           xor eax, eax
0x0000ba5b      488b8c248801.  mov rcx, qword [rsp + 0x188]
0x0000ba63      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ba6c      7543           jne 0xbab1
0x0000ba6e      4881c4900100.  add rsp, 0x190
0x0000ba75      5b             pop rbx
0x0000ba76      5d             pop rbp
0x0000ba77      415c           pop r12
0x0000ba79      c3             ret
0x0000ba7a      660f1f440000   nop word [rax + rax]
0x0000ba80      488dbd820000.  lea rdi, [rbp + 0x82]
0x0000ba87      488d35bd5000.  lea rsi, str.2.6.36                     ; 0x10b4b ; "2.6.36"
0x0000ba8e      e8fd65ffff     call sym.imp.strverscmp
0x0000ba93      85c0           test eax, eax
0x0000ba95      0f8865ffffff   js 0xba00
0x0000ba9b      c7053b882000.  mov dword [obj.statvfs_works_cache.2531], 1 ; [0x2142e0:4]=-1
0x0000baa5      e919ffffff     jmp 0xb9c3
0x0000baaa      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000baaf      ebaa           jmp 0xba5b
0x0000bab1      e83a67ffff     call sym.imp.__stack_chk_fail
0x0000bab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_mbrtowc:
0x0000bac0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x0000bac2      4154           push r12
0x0000bac4      4989f5         mov r13, rsi
0x0000bac7      55             push rbp
0x0000bac8      53             push rbx
0x0000bac9      4889fb         mov rbx, rdi
0x0000bacc      4989d4         mov r12, rdx
0x0000bacf      4883ec18       sub rsp, 0x18
0x0000bad3      64488b042528.  mov rax, qword fs:[0x28]
0x0000badc      4889442408     mov qword [rsp + 8], rax
0x0000bae1      31c0           xor eax, eax
0x0000bae3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000bae8      4885ff         test rdi, rdi
0x0000baeb      480f44d8       cmove rbx, rax
0x0000baef      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000baf2      e81967ffff     call sym.imp.mbrtowc
0x0000baf7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000bafb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000bafe      7620           jbe 0xbb20                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000bb00      4d85e4         test r12, r12
0x0000bb03      741b           je 0xbb20
0x0000bb05      31ff           xor edi, edi
0x0000bb07      e8540f0000     call sym.hard_locale
0x0000bb0c      84c0           test al, al
0x0000bb0e      7510           jne 0xbb20
0x0000bb10      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000bb15      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000bb1a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000bb1c      0f1f4000       nop dword [rax]
0x0000bb20      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000bb25      644833142528.  xor rdx, qword fs:[0x28]
0x0000bb2e      4889e8         mov rax, rbp
0x0000bb31      750b           jne 0xbb3e
0x0000bb33      4883c418       add rsp, 0x18
0x0000bb37      5b             pop rbx
0x0000bb38      5d             pop rbp
0x0000bb39      415c           pop r12
0x0000bb3b      415d           pop r13
0x0000bb3d      c3             ret
0x0000bb3e      e8ad66ffff     call sym.imp.__stack_chk_fail
0x0000bb43      662e0f1f8400.  nop word cs:[rax + rax]
0x0000bb4d      0f1f00         nop dword [rax]
;-- unescape_tab:
0x0000bb50      53             push rbx                                ; ../coreutils-8.31/lib/mountlist.c:402
0x0000bb51      4889fb         mov rbx, rdi
0x0000bb54      e85766ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/mountlist.c:404
0x0000bb59      4889d9         mov rcx, rbx
0x0000bb5c      4883c001       add rax, 1
0x0000bb60      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/mountlist.c:405
0x0000bb62      eb13           jmp 0xbb77
0x0000bb64      0f1f4000       nop dword [rax]
0x0000bb68      408831         mov byte [rcx], sil                     ; ../coreutils-8.31/lib/mountlist.c:418
0x0000bb6b      4889fa         mov rdx, rdi
0x0000bb6e      4883c101       add rcx, 1
0x0000bb72      4839d0         cmp rax, rdx                            ; ../coreutils-8.31/lib/mountlist.c:405
0x0000bb75      7659           jbe 0xbbd0
0x0000bb77      0fb63413       movzx esi, byte [rbx + rdx]             ; ../coreutils-8.31/lib/mountlist.c:407
0x0000bb7b      488d7a01       lea rdi, [rdx + 1]
0x0000bb7f      4080fe5c       cmp sil, 0x5c
0x0000bb83      75e3           jne 0xbb68
0x0000bb85      4c8d4204       lea r8, [rdx + 4]
0x0000bb89      4939c0         cmp r8, rax
0x0000bb8c      73da           jae 0xbb68
0x0000bb8e      440fb60c3b     movzx r9d, byte [rbx + rdi]             ; ../coreutils-8.31/lib/mountlist.c:408
0x0000bb93      458d51d0       lea r10d, [r9 - 0x30]
0x0000bb97      4180fa03       cmp r10b, 3
0x0000bb9b      77cb           ja 0xbb68
0x0000bb9d      440fb6541302   movzx r10d, byte [rbx + rdx + 2]        ; ../coreutils-8.31/lib/mountlist.c:409
0x0000bba3      458d5ad0       lea r11d, [r10 - 0x30]
0x0000bba7      4180fb07       cmp r11b, 7
0x0000bbab      77bb           ja 0xbb68
0x0000bbad      0fb6541303     movzx edx, byte [rbx + rdx + 3]         ; ../coreutils-8.31/lib/mountlist.c:410
0x0000bbb2      448d5ad0       lea r11d, [rdx - 0x30]
0x0000bbb6      4180fb07       cmp r11b, 7
0x0000bbba      77ac           ja 0xbb68
0x0000bbbc      438d14ca       lea edx, [r10 + r9*8]                   ; ../coreutils-8.31/lib/mountlist.c:412
0x0000bbc0      418d54d380     lea edx, [r11 + rdx*8 - 0x80]           ; ../coreutils-8.31/lib/mountlist.c:413
0x0000bbc5      8811           mov byte [rcx], dl
0x0000bbc7      4c89c2         mov rdx, r8
0x0000bbca      eba2           jmp 0xbb6e                              ; ../coreutils-8.31/lib/mountlist.c:415
0x0000bbcc      0f1f4000       nop dword [rax]
0x0000bbd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/mountlist.c:420
0x0000bbd1      c3             ret
0x0000bbd2      0f1f4000       nop dword [rax]
0x0000bbd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- free_mount_entry:
0x0000bbe0      53             push rbx                                ; ../coreutils-8.31/lib/mountlist.c:1085
0x0000bbe1      4889fb         mov rbx, rdi
0x0000bbe4      488b3f         mov rdi, qword [rdi]                    ; ../coreutils-8.31/lib/mountlist.c:1086
0x0000bbe7      e88464ffff     call sym.imp.free
0x0000bbec      488b7b08       mov rdi, qword [rbx + 8]                ; ../coreutils-8.31/lib/mountlist.c:1087
0x0000bbf0      e87b64ffff     call sym.imp.free
0x0000bbf5      488b7b10       mov rdi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/mountlist.c:1088
0x0000bbf9      e87264ffff     call sym.imp.free
0x0000bbfe      f6432804       test byte [rbx + 0x28], 4               ; ../coreutils-8.31/lib/mountlist.c:1089
0x0000bc02      7409           je 0xbc0d
0x0000bc04      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/mountlist.c:1090
0x0000bc08      e86364ffff     call sym.imp.free
0x0000bc0d      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mountlist.c:1091
0x0000bc10      5b             pop rbx                                 ; ../coreutils-8.31/lib/mountlist.c:1092
0x0000bc11      e95a64ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/mountlist.c:1091
0x0000bc16      662e0f1f8400.  nop word cs:[rax + rax]
;-- read_file_system_list:
0x0000bc20      4157           push r15                                ; ../coreutils-8.31/lib/mountlist.c:430
0x0000bc22      4156           push r14
0x0000bc24      488d355a4300.  lea rsi, [0x0000ff85]                   ; ../coreutils-8.31/lib/mountlist.c:447 ; "r"
0x0000bc2b      4155           push r13                                ; ../coreutils-8.31/lib/mountlist.c:430
0x0000bc2d      4154           push r12
0x0000bc2f      488d3d1c4f00.  lea rdi, str.proc_self_mountinfo        ; ../coreutils-8.31/lib/mountlist.c:447 ; 0x10b52 ; "/proc/self/mountinfo"
0x0000bc36      55             push rbp                                ; ../coreutils-8.31/lib/mountlist.c:430
0x0000bc37      53             push rbx
0x0000bc38      4883ec68       sub rsp, 0x68
0x0000bc3c      64488b042528.  mov rax, qword fs:[0x28]
0x0000bc45      4889442458     mov qword [rsp + 0x58], rax
0x0000bc4a      31c0           xor eax, eax
0x0000bc4c      e88f68ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/mountlist.c:447
0x0000bc51      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:448
0x0000bc54      0f8446040000   je 0xc0a0
0x0000bc5a      4c8d742440     lea r14, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mountlist.c:433
0x0000bc5f      4c8d6c2450     lea r13, [rsp + 0x50]
0x0000bc64      4c8d642448     lea r12, [rsp + 0x48]
0x0000bc69      4889c5         mov rbp, rax
0x0000bc6c      48c744244800.  mov qword [rsp + 0x48], 0               ; ../coreutils-8.31/lib/mountlist.c:450
0x0000bc75      48c744245000.  mov qword [rsp + 0x50], 0               ; ../coreutils-8.31/lib/mountlist.c:451
0x0000bc7e      6690           nop
0x0000bc80      4889e9         mov rcx, rbp                            ; stdio.h:117   return __getdelim (__lineptr, __n, '\n', __stream);
0x0000bc83      ba0a000000     mov edx, 0xa
0x0000bc88      4c89ee         mov rsi, r13
0x0000bc8b      4c89e7         mov rdi, r12
0x0000bc8e      e89d66ffff     call sym.imp.__getdelim
0x0000bc93      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/mountlist.c:453
0x0000bc97      0f8433020000   je 0xbed0
0x0000bc9d      488d4c241c     lea rcx, [rsp + 0x1c]                   ; ../coreutils-8.31/lib/mountlist.c:462
0x0000bca2      488d542418     lea rdx, [rsp + 0x18]
0x0000bca7      4883ec08       sub rsp, 8
0x0000bcab      488d5c241f     lea rbx, [rsp + 0x1f]
0x0000bcb0      488d35494f00.  lea rsi, str.u___u__u:_u__n__s_n__n__s_n_c ; 0x10c00 ; "%*u %*u %u:%u %n%*s%n %n%*s%n%c"
0x0000bcb7      53             push rbx
0x0000bcb8      488d442434     lea rax, [rsp + 0x34]
0x0000bcbd      50             push rax
0x0000bcbe      488d442438     lea rax, [rsp + 0x38]
0x0000bcc3      50             push rax
0x0000bcc4      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000bcc9      31c0           xor eax, eax
0x0000bccb      4c8d4c245c     lea r9, [rsp + 0x5c]
0x0000bcd0      4c8d442458     lea r8, [rsp + 0x58]
0x0000bcd5      e83667ffff     call sym.imp.sscanf
0x0000bcda      83e0fb         and eax, 0xfffffffb                     ; ../coreutils-8.31/lib/mountlist.c:473 ; 4294967291
0x0000bcdd      4883c420       add rsp, 0x20
0x0000bce1      83f803         cmp eax, 3
0x0000bce4      759a           jne 0xbc80
0x0000bce6      48637c2424     movsxd rdi, dword [rsp + 0x24]          ; ../coreutils-8.31/lib/mountlist.c:477
0x0000bceb      488d35754e00.  lea rsi, [0x00010b67]                   ; " - "
0x0000bcf2      48037c2448     add rdi, qword [rsp + 0x48]
0x0000bcf7      e88468ffff     call sym.imp.strstr
0x0000bcfc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:478
0x0000bcff      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/mountlist.c:477
0x0000bd02      0f8478ffffff   je 0xbc80                               ; ../coreutils-8.31/lib/mountlist.c:478
0x0000bd08      488d4c242c     lea rcx, [rsp + 0x2c]                   ; ../coreutils-8.31/lib/mountlist.c:481
0x0000bd0d      488d542428     lea rdx, [rsp + 0x28]
0x0000bd12      4883ec08       sub rsp, 8
0x0000bd16      53             push rbx
0x0000bd17      488d354d4e00.  lea rsi, str.n__s_n__n__s_n__c          ; 0x10b6b ; " - %n%*s%n %n%*s%n %c"
0x0000bd1e      4889c7         mov rdi, rax
0x0000bd21      31c0           xor eax, eax
0x0000bd23      4c8d4c2444     lea r9, [rsp + 0x44]
0x0000bd28      4c8d442440     lea r8, [rsp + 0x40]
0x0000bd2d      e8de66ffff     call sym.imp.sscanf
0x0000bd32      83e0fb         and eax, 0xfffffffb                     ; ../coreutils-8.31/lib/mountlist.c:488 ; 4294967291
0x0000bd35      83f801         cmp eax, 1
0x0000bd38      5a             pop rdx
0x0000bd39      59             pop rcx
0x0000bd3a      0f8540ffffff   jne 0xbc80
0x0000bd40      486344243c     movsxd rax, dword [rsp + 0x3c]          ; ../coreutils-8.31/lib/mountlist.c:492
0x0000bd45      488b542448     mov rdx, qword [rsp + 0x48]
0x0000bd4a      c6040200       mov byte [rdx + rax], 0
0x0000bd4e      4863442424     movsxd rax, dword [rsp + 0x24]          ; ../coreutils-8.31/lib/mountlist.c:493
0x0000bd53      488b542448     mov rdx, qword [rsp + 0x48]
0x0000bd58      c6040200       mov byte [rdx + rax], 0
0x0000bd5c      486344242c     movsxd rax, dword [rsp + 0x2c]          ; ../coreutils-8.31/lib/mountlist.c:494
0x0000bd61      41c6040700     mov byte [r15 + rax], 0
0x0000bd66      4863442434     movsxd rax, dword [rsp + 0x34]          ; ../coreutils-8.31/lib/mountlist.c:495
0x0000bd6b      41c6040700     mov byte [r15 + rax], 0
0x0000bd70      48637c2430     movsxd rdi, dword [rsp + 0x30]          ; ../coreutils-8.31/lib/mountlist.c:496
0x0000bd75      4c01ff         add rdi, r15
0x0000bd78      e8d3fdffff     call sym.unescape_tab
0x0000bd7d      48637c2420     movsxd rdi, dword [rsp + 0x20]          ; ../coreutils-8.31/lib/mountlist.c:497
0x0000bd82      48037c2448     add rdi, qword [rsp + 0x48]
0x0000bd87      e8c4fdffff     call sym.unescape_tab
0x0000bd8c      48637c2438     movsxd rdi, dword [rsp + 0x38]          ; ../coreutils-8.31/lib/mountlist.c:498
0x0000bd91      48037c2448     add rdi, qword [rsp + 0x48]
0x0000bd96      e8b5fdffff     call sym.unescape_tab
0x0000bd9b      bf38000000     mov edi, 0x38                           ; ../coreutils-8.31/lib/mountlist.c:500 ; '8'
0x0000bda0      e82bf0ffff     call sym.xmalloc
0x0000bda5      48637c2430     movsxd rdi, dword [rsp + 0x30]          ; ../coreutils-8.31/lib/mountlist.c:502
0x0000bdaa      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mountlist.c:500
0x0000bdad      4c01ff         add rdi, r15                            ; ../coreutils-8.31/lib/mountlist.c:502
0x0000bdb0      e84bf2ffff     call sym.xstrdup
0x0000bdb5      48637c2420     movsxd rdi, dword [rsp + 0x20]          ; ../coreutils-8.31/lib/mountlist.c:503
0x0000bdba      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/mountlist.c:502
0x0000bdbd      48037c2448     add rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:503
0x0000bdc2      e839f2ffff     call sym.xstrdup
0x0000bdc7      48637c2438     movsxd rdi, dword [rsp + 0x38]          ; ../coreutils-8.31/lib/mountlist.c:504
0x0000bdcc      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/mountlist.c:503
0x0000bdd0      48037c2448     add rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:504
0x0000bdd5      e826f2ffff     call sym.xstrdup
0x0000bdda      48637c2428     movsxd rdi, dword [rsp + 0x28]          ; ../coreutils-8.31/lib/mountlist.c:505
0x0000bddf      48894310       mov qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/mountlist.c:504
0x0000bde3      4c01ff         add rdi, r15                            ; ../coreutils-8.31/lib/mountlist.c:505
0x0000bde6      e815f2ffff     call sym.xstrdup
0x0000bdeb      8b542418       mov edx, dword [rsp + 0x18]             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0000bdef      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/mountlist.c:505
0x0000bdf2      48894318       mov qword [rbx + 0x18], rax
0x0000bdf6      8b44241c       mov eax, dword [rsp + 0x1c]             ; ../coreutils-8.31/lib/mountlist.c:507
0x0000bdfa      48be00000000.  movabs rsi, 0xfffff00000000000          ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0000be04      488d3d764d00.  lea rdi, str.autofs                     ; ../coreutils-8.31/lib/mountlist.c:512 ; 0x10b81 ; "autofs"
0x0000be0b      804b2804       or byte [rbx + 0x28], 4                 ; ../coreutils-8.31/lib/mountlist.c:506
0x0000be0f      4889d1         mov rcx, rdx                            ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0000be12      48c1e220       shl rdx, 0x20
0x0000be16      48c1e108       shl rcx, 8
0x0000be1a      4821f2         and rdx, rsi
0x0000be1d      48be0000f0ff.  movabs rsi, 0xffffff00000
0x0000be27      81e100ff0f00   and ecx, 0xfff00
0x0000be2d      4809ca         or rdx, rcx
0x0000be30      0fb6c8         movzx ecx, al
0x0000be33      48c1e00c       shl rax, 0xc
0x0000be37      4809ca         or rdx, rcx
0x0000be3a      4821f0         and rax, rsi
0x0000be3d      b907000000     mov ecx, 7                              ; ../coreutils-8.31/lib/mountlist.c:512
0x0000be42      4c89fe         mov rsi, r15
0x0000be45      4809d0         or rax, rdx                             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0000be48      ba01000000     mov edx, 1
0x0000be4d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; ../coreutils-8.31/lib/mountlist.c:512
0x0000be4f      48894320       mov qword [rbx + 0x20], rax             ; sysmacros.h:81 __SYSMACROS_DEFINE_MAKEDEV (__SYSMACROS_IMPL_TEMPL)
0x0000be53      0f97c0         seta al                                 ; ../coreutils-8.31/lib/mountlist.c:512
0x0000be56      1c00           sbb al, 0
0x0000be58      84c0           test al, al
0x0000be5a      741e           je 0xbe7a
0x0000be5c      488d3d254d00.  lea rdi, str.proc                       ; 0x10b88 ; "proc"
0x0000be63      b905000000     mov ecx, 5
0x0000be68      4c89fe         mov rsi, r15
0x0000be6b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000be6d      0f97c0         seta al
0x0000be70      1c00           sbb al, 0
0x0000be72      84c0           test al, al
0x0000be74      0f85ae000000   jne 0xbf28
0x0000be7a      0fb64328       movzx eax, byte [rbx + 0x28]
0x0000be7e      4c8b03         mov r8, qword [rbx]                     ; ../coreutils-8.31/lib/mountlist.c:513
0x0000be81      be3a000000     mov esi, 0x3a                           ; ':'
0x0000be86      4c89c7         mov rdi, r8
0x0000be89      4c89442408     mov qword [rsp + 8], r8
0x0000be8e      83e0fe         and eax, 0xfffffffe                     ; ../coreutils-8.31/lib/mountlist.c:512 ; 4294967294
0x0000be91      09d0           or eax, edx
0x0000be93      884328         mov byte [rbx + 0x28], al
0x0000be96      e88563ffff     call sym.imp.strchr                     ; ../coreutils-8.31/lib/mountlist.c:513
0x0000be9b      4885c0         test rax, rax
0x0000be9e      ba01000000     mov edx, 1
0x0000bea3      4c8b442408     mov r8, qword [rsp + 8]
0x0000bea8      0f84c2010000   je 0xc070
0x0000beae      0fb64328       movzx eax, byte [rbx + 0x28]
0x0000beb2      01d2           add edx, edx
0x0000beb4      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x0000beb7      09d0           or eax, edx
0x0000beb9      884328         mov byte [rbx + 0x28], al
0x0000bebc      49891e         mov qword [r14], rbx                    ; ../coreutils-8.31/lib/mountlist.c:516
0x0000bebf      4c8d7330       lea r14, [rbx + 0x30]                   ; ../coreutils-8.31/lib/mountlist.c:517
0x0000bec3      e9b8fdffff     jmp 0xbc80
0x0000bec8      0f1f84000000.  nop dword [rax + rax]
0x0000bed0      488b7c2448     mov rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mountlist.c:520
0x0000bed5      e89661ffff     call sym.imp.free
0x0000beda      f6450020       test byte [rbp], 0x20                   ; ../coreutils-8.31/lib/mountlist.c:522
0x0000bede      0f855c050000   jne 0xc440
0x0000bee4      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/mountlist.c:530
0x0000bee7      e8940c0000     call sym.rpl_fclose
0x0000beec      83f8ff         cmp eax, 0xffffffff
0x0000beef      0f8439040000   je 0xc32e
0x0000bef5      49c706000000.  mov qword [r14], 0                      ; ../coreutils-8.31/lib/mountlist.c:1061
0x0000befc      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/mountlist.c:1062
0x0000bf01      488b5c2458     mov rbx, qword [rsp + 0x58]             ; ../coreutils-8.31/lib/mountlist.c:1080
0x0000bf06      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000bf0f      0f854e050000   jne 0xc463
0x0000bf15      4883c468       add rsp, 0x68
0x0000bf19      5b             pop rbx
0x0000bf1a      5d             pop rbp
0x0000bf1b      415c           pop r12
0x0000bf1d      415d           pop r13
0x0000bf1f      415e           pop r14
0x0000bf21      415f           pop r15
0x0000bf23      c3             ret
0x0000bf24      0f1f4000       nop dword [rax]
0x0000bf28      488d3d5e4c00.  lea rdi, str.subfs                      ; ../coreutils-8.31/lib/mountlist.c:512 ; 0x10b8d ; "subfs"
0x0000bf2f      b906000000     mov ecx, 6
0x0000bf34      4c89fe         mov rsi, r15
0x0000bf37      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bf39      0f97c0         seta al
0x0000bf3c      1c00           sbb al, 0
0x0000bf3e      84c0           test al, al
0x0000bf40      0f8434ffffff   je 0xbe7a
0x0000bf46      488d3d464c00.  lea rdi, str.debugfs                    ; 0x10b93 ; "debugfs"
0x0000bf4d      b908000000     mov ecx, 8
0x0000bf52      4c89fe         mov rsi, r15
0x0000bf55      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bf57      0f97c0         seta al
0x0000bf5a      1c00           sbb al, 0
0x0000bf5c      84c0           test al, al
0x0000bf5e      0f8416ffffff   je 0xbe7a
0x0000bf64      488d3d304c00.  lea rdi, str.devpts                     ; 0x10b9b ; "devpts"
0x0000bf6b      b907000000     mov ecx, 7
0x0000bf70      4c89fe         mov rsi, r15
0x0000bf73      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bf75      0f97c0         seta al
0x0000bf78      1c00           sbb al, 0
0x0000bf7a      84c0           test al, al
0x0000bf7c      0f84f8feffff   je 0xbe7a
0x0000bf82      488d3d194c00.  lea rdi, str.fusectl                    ; 0x10ba2 ; "fusectl"
0x0000bf89      b908000000     mov ecx, 8
0x0000bf8e      4c89fe         mov rsi, r15
0x0000bf91      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bf93      0f97c0         seta al
0x0000bf96      1c00           sbb al, 0
0x0000bf98      84c0           test al, al
0x0000bf9a      0f84dafeffff   je 0xbe7a
0x0000bfa0      488d3d034c00.  lea rdi, str.mqueue                     ; 0x10baa ; "mqueue"
0x0000bfa7      b907000000     mov ecx, 7
0x0000bfac      4c89fe         mov rsi, r15
0x0000bfaf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bfb1      0f97c0         seta al
0x0000bfb4      1c00           sbb al, 0
0x0000bfb6      84c0           test al, al
0x0000bfb8      0f84bcfeffff   je 0xbe7a
0x0000bfbe      488d3dec4b00.  lea rdi, str.rpc_pipefs                 ; 0x10bb1 ; "rpc_pipefs"
0x0000bfc5      b90b000000     mov ecx, 0xb
0x0000bfca      4c89fe         mov rsi, r15
0x0000bfcd      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bfcf      0f97c0         seta al
0x0000bfd2      1c00           sbb al, 0
0x0000bfd4      84c0           test al, al
0x0000bfd6      0f849efeffff   je 0xbe7a
0x0000bfdc      488d3dd94b00.  lea rdi, str.sysfs                      ; 0x10bbc ; "sysfs"
0x0000bfe3      b906000000     mov ecx, 6
0x0000bfe8      4c89fe         mov rsi, r15
0x0000bfeb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000bfed      0f97c0         seta al
0x0000bff0      1c00           sbb al, 0
0x0000bff2      84c0           test al, al
0x0000bff4      0f8480feffff   je 0xbe7a
0x0000bffa      488d3dc14b00.  lea rdi, str.devfs                      ; 0x10bc2 ; "devfs"
0x0000c001      b906000000     mov ecx, 6
0x0000c006      4c89fe         mov rsi, r15
0x0000c009      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c00b      0f97c0         seta al
0x0000c00e      1c00           sbb al, 0
0x0000c010      84c0           test al, al
0x0000c012      0f8462feffff   je 0xbe7a
0x0000c018      488d3da94b00.  lea rdi, str.kernfs                     ; 0x10bc8 ; "kernfs"
0x0000c01f      b907000000     mov ecx, 7
0x0000c024      4c89fe         mov rsi, r15
0x0000c027      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c029      0f97c0         seta al
0x0000c02c      1c00           sbb al, 0
0x0000c02e      84c0           test al, al
0x0000c030      0f8444feffff   je 0xbe7a
0x0000c036      488d35924b00.  lea rsi, str.ignore                     ; 0x10bcf ; "ignore"
0x0000c03d      4c89ff         mov rdi, r15
0x0000c040      88542408       mov byte [rsp + 8], dl
0x0000c044      e8f762ffff     call sym.imp.strcmp
0x0000c049      85c0           test eax, eax
0x0000c04b      0fb6542408     movzx edx, byte [rsp + 8]
0x0000c050      0f8424feffff   je 0xbe7a
0x0000c056      488d35794b00.  lea rsi, str.none                       ; 0x10bd6 ; "none"
0x0000c05d      4c89ff         mov rdi, r15
0x0000c060      e8db62ffff     call sym.imp.strcmp
0x0000c065      85c0           test eax, eax
0x0000c067      0f94c2         sete dl
0x0000c06a      e90bfeffff     jmp 0xbe7a
0x0000c06f      90             nop
0x0000c070      4180382f       cmp byte [r8], 0x2f                     ; ../coreutils-8.31/lib/mountlist.c:513
0x0000c074      0f8426030000   je 0xc3a0
0x0000c07a      488d35654b00.  lea rsi, str.hosts                      ; 0x10be6 ; "-hosts"
0x0000c081      b907000000     mov ecx, 7
0x0000c086      4c89c7         mov rdi, r8
0x0000c089      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c08b      0f97c0         seta al
0x0000c08e      1c00           sbb al, 0
0x0000c090      84c0           test al, al
0x0000c092      0f94c2         sete dl
0x0000c095      e914feffff     jmp 0xbeae
0x0000c09a      660f1f440000   nop word [rax + rax]
0x0000c0a0      488d35de3e00.  lea rsi, [0x0000ff85]                   ; ../coreutils-8.31/lib/mountlist.c:539 ; "r"
0x0000c0a7      488d3d3f4b00.  lea rdi, str.etc_mtab                   ; 0x10bed ; "/etc/mtab"
0x0000c0ae      e83d63ffff     call sym.imp.setmntent
0x0000c0b3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mountlist.c:540
0x0000c0b6      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mountlist.c:539
0x0000c0b9      0f849d030000   je 0xc45c                               ; ../coreutils-8.31/lib/mountlist.c:540
0x0000c0bf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mountlist.c:543
0x0000c0c2      4c8d742440     lea r14, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mountlist.c:433
0x0000c0c7      488d2db34a00.  lea rbp, str.autofs                     ; 0x10b81 ; "autofs"
0x0000c0ce      e80d63ffff     call sym.imp.getmntent
0x0000c0d3      4885c0         test rax, rax
0x0000c0d6      4989c5         mov r13, rax                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:425
0x0000c0d9      0f843f020000   je 0xc31e
0x0000c0df      90             nop
0x0000c0e0      488d35104b00.  lea rsi, str.bind                       ; 0x10bf7 ; "bind"
0x0000c0e7      4c89ef         mov rdi, r13
0x0000c0ea      e88164ffff     call sym.imp.hasmntopt
0x0000c0ef      bf38000000     mov edi, 0x38                           ; '8'
0x0000c0f4      4989c7         mov r15, rax
0x0000c0f7      e8d4ecffff     call sym.xmalloc
0x0000c0fc      498b7d00       mov rdi, qword [r13]
0x0000c100      4989c4         mov r12, rax
0x0000c103      e8f8eeffff     call sym.xstrdup
0x0000c108      498b7d08       mov rdi, qword [r13 + 8]
0x0000c10c      49890424       mov qword [r12], rax
0x0000c110      e8ebeeffff     call sym.xstrdup
0x0000c115      498b7d10       mov rdi, qword [r13 + 0x10]
0x0000c119      4989442408     mov qword [r12 + 8], rax
0x0000c11e      49c744241000.  mov qword [r12 + 0x10], 0
0x0000c127      e8d4eeffff     call sym.xstrdup
0x0000c12c      b907000000     mov ecx, 7
0x0000c131      4889c6         mov rsi, rax
0x0000c134      4889ef         mov rdi, rbp
0x0000c137      41804c242804   or byte [r12 + 0x28], 4
0x0000c13d      4989c5         mov r13, rax
0x0000c140      4989442418     mov qword [r12 + 0x18], rax
0x0000c145      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c147      ba01000000     mov edx, 1
0x0000c14c      0f97c0         seta al
0x0000c14f      1c00           sbb al, 0
0x0000c151      84c0           test al, al
0x0000c153      0f845f010000   je 0xc2b8
0x0000c159      488d3d284a00.  lea rdi, str.proc                       ; 0x10b88 ; "proc"
0x0000c160      b905000000     mov ecx, 5
0x0000c165      4c89ee         mov rsi, r13
0x0000c168      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c16a      0f97c0         seta al
0x0000c16d      1c00           sbb al, 0
0x0000c16f      84c0           test al, al
0x0000c171      0f8441010000   je 0xc2b8
0x0000c177      488d3d0f4a00.  lea rdi, str.subfs                      ; 0x10b8d ; "subfs"
0x0000c17e      b906000000     mov ecx, 6
0x0000c183      4c89ee         mov rsi, r13
0x0000c186      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c188      0f97c0         seta al
0x0000c18b      1c00           sbb al, 0
0x0000c18d      84c0           test al, al
0x0000c18f      0f8423010000   je 0xc2b8
0x0000c195      488d3df74900.  lea rdi, str.debugfs                    ; 0x10b93 ; "debugfs"
0x0000c19c      b908000000     mov ecx, 8
0x0000c1a1      4c89ee         mov rsi, r13
0x0000c1a4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c1a6      0f97c0         seta al
0x0000c1a9      1c00           sbb al, 0
0x0000c1ab      84c0           test al, al
0x0000c1ad      0f8405010000   je 0xc2b8
0x0000c1b3      488d3de14900.  lea rdi, str.devpts                     ; 0x10b9b ; "devpts"
0x0000c1ba      b907000000     mov ecx, 7
0x0000c1bf      4c89ee         mov rsi, r13
0x0000c1c2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c1c4      0f97c0         seta al
0x0000c1c7      1c00           sbb al, 0
0x0000c1c9      84c0           test al, al
0x0000c1cb      0f84e7000000   je 0xc2b8
0x0000c1d1      488d3dca4900.  lea rdi, str.fusectl                    ; 0x10ba2 ; "fusectl"
0x0000c1d8      b908000000     mov ecx, 8
0x0000c1dd      4c89ee         mov rsi, r13
0x0000c1e0      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c1e2      0f97c0         seta al
0x0000c1e5      1c00           sbb al, 0
0x0000c1e7      84c0           test al, al
0x0000c1e9      0f84c9000000   je 0xc2b8
0x0000c1ef      488d3db44900.  lea rdi, str.mqueue                     ; 0x10baa ; "mqueue"
0x0000c1f6      b907000000     mov ecx, 7
0x0000c1fb      4c89ee         mov rsi, r13
0x0000c1fe      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c200      0f97c0         seta al
0x0000c203      1c00           sbb al, 0
0x0000c205      84c0           test al, al
0x0000c207      0f84ab000000   je 0xc2b8
0x0000c20d      488d3d9d4900.  lea rdi, str.rpc_pipefs                 ; 0x10bb1 ; "rpc_pipefs"
0x0000c214      b90b000000     mov ecx, 0xb
0x0000c219      4c89ee         mov rsi, r13
0x0000c21c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c21e      0f97c0         seta al
0x0000c221      1c00           sbb al, 0
0x0000c223      84c0           test al, al
0x0000c225      0f848d000000   je 0xc2b8
0x0000c22b      488d3d8a4900.  lea rdi, str.sysfs                      ; 0x10bbc ; "sysfs"
0x0000c232      b906000000     mov ecx, 6
0x0000c237      4c89ee         mov rsi, r13
0x0000c23a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c23c      0f97c0         seta al
0x0000c23f      1c00           sbb al, 0
0x0000c241      84c0           test al, al
0x0000c243      7473           je 0xc2b8
0x0000c245      488d3d764900.  lea rdi, str.devfs                      ; 0x10bc2 ; "devfs"
0x0000c24c      b906000000     mov ecx, 6
0x0000c251      4c89ee         mov rsi, r13                            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426
0x0000c254      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c256      0f97c0         seta al
0x0000c259      1c00           sbb al, 0
0x0000c25b      84c0           test al, al
0x0000c25d      7459           je 0xc2b8
0x0000c25f      488d3d624900.  lea rdi, str.kernfs                     ; 0x10bc8 ; "kernfs"
0x0000c266      b907000000     mov ecx, 7
0x0000c26b      4c89ee         mov rsi, r13
0x0000c26e      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c270      0f97c0         seta al
0x0000c273      1c00           sbb al, 0
0x0000c275      84c0           test al, al                             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:415
0x0000c277      743f           je 0xc2b8
0x0000c279      488d354f4900.  lea rsi, str.ignore                     ; 0x10bcf ; "ignore"
0x0000c280      4c89ef         mov rdi, r13
0x0000c283      88542408       mov byte [rsp + 8], dl
0x0000c287      e8b460ffff     call sym.imp.strcmp
0x0000c28c      85c0           test eax, eax
0x0000c28e      0fb6542408     movzx edx, byte [rsp + 8]
0x0000c293      7423           je 0xc2b8
0x0000c295      488d353a4900.  lea rsi, str.none                       ; 0x10bd6 ; "none"
0x0000c29c      4c89ef         mov rdi, r13
0x0000c29f      e89c60ffff     call sym.imp.strcmp
0x0000c2a4      4d85ff         test r15, r15
0x0000c2a7      0f94c2         sete dl
0x0000c2aa      85c0           test eax, eax
0x0000c2ac      0f94c0         sete al
0x0000c2af      21c2           and edx, eax
0x0000c2b1      0f1f80000000.  nop dword [rax]
0x0000c2b8      410fb6442428   movzx eax, byte [r12 + 0x28]
0x0000c2be      4d8b3c24       mov r15, qword [r12]
0x0000c2c2      be3a000000     mov esi, 0x3a                           ; ':'
0x0000c2c7      4c89ff         mov rdi, r15
0x0000c2ca      83e0fe         and eax, 0xfffffffe                     ; 4294967294
0x0000c2cd      09d0           or eax, edx                             ; /usr/include/x86_64-linux-gnu/bits/stdio.h:944
0x0000c2cf      4188442428     mov byte [r12 + 0x28], al
0x0000c2d4      e8475fffff     call sym.imp.strchr
0x0000c2d9      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio.h:946
0x0000c2dc      ba01000000     mov edx, 1
0x0000c2e1      0f8491000000   je 0xc378                               ; /usr/include/x86_64-linux-gnu/bits/stdio.h:942
0x0000c2e7      410fb6442428   movzx eax, byte [r12 + 0x28]            ; /usr/include/x86_64-linux-gnu/bits/stdio.h:950
0x0000c2ed      01d2           add edx, edx
0x0000c2ef      49c7442420ff.  mov qword [r12 + 0x20], 0xffffffffffffffff
0x0000c2f8      4889df         mov rdi, rbx
0x0000c2fb      83e0fd         and eax, 0xfffffffd                     ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426 ; 4294967293
0x0000c2fe      09d0           or eax, edx
0x0000c300      4188442428     mov byte [r12 + 0x28], al
0x0000c305      4d8926         mov qword [r14], r12
0x0000c308      4d8d742430     lea r14, [r12 + 0x30]
0x0000c30d      e8ce60ffff     call sym.imp.getmntent
0x0000c312      4885c0         test rax, rax
0x0000c315      4989c5         mov r13, rax
0x0000c318      0f85c2fdffff   jne 0xc0e0
0x0000c31e      4889df         mov rdi, rbx
0x0000c321      e85a5dffff     call sym.imp.endmntent
0x0000c326      85c0           test eax, eax
0x0000c328      0f85c7fbffff   jne 0xbef5                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:385
0x0000c32e      e87d5dffff     call sym.imp.__errno_location
0x0000c333      448b28         mov r13d, dword [rax]
0x0000c336      4989c4         mov r12, rax
0x0000c339      49c706000000.  mov qword [r14], 0
0x0000c340      488b7c2440     mov rdi, qword [rsp + 0x40]
0x0000c345      4885ff         test rdi, rdi
0x0000c348      741c           je 0xc366
0x0000c34a      660f1f440000   nop word [rax + rax]
0x0000c350      488b5f30       mov rbx, qword [rdi + 0x30]
0x0000c354      e887f8ffff     call sym.free_mount_entry
0x0000c359      4885db         test rbx, rbx
0x0000c35c      48895c2440     mov qword [rsp + 0x40], rbx
0x0000c361      4889df         mov rdi, rbx
0x0000c364      75ea           jne 0xc350
0x0000c366      45892c24       mov dword [r12], r13d
0x0000c36a      31c0           xor eax, eax
0x0000c36c      e990fbffff     jmp 0xbf01
0x0000c371      0f1f80000000.  nop dword [rax]
0x0000c378      41803f2f       cmp byte [r15], 0x2f
0x0000c37c      7472           je 0xc3f0
0x0000c37e      488d35614800.  lea rsi, str.hosts                      ; 0x10be6 ; "-hosts"
0x0000c385      b907000000     mov ecx, 7
0x0000c38a      4c89ff         mov rdi, r15
0x0000c38d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c38f      0f97c0         seta al
0x0000c392      1c00           sbb al, 0                               ; /usr/include/x86_64-linux-gnu/bits/stdio.h:426
0x0000c394      84c0           test al, al
0x0000c396      0f94c2         sete dl
0x0000c399      e949ffffff     jmp 0xc2e7
0x0000c39e      6690           nop
0x0000c3a0      418078012f     cmp byte [r8 + 1], 0x2f
0x0000c3a5      0f85cffcffff   jne 0xc07a
0x0000c3ab      488d3d294800.  lea rdi, str.smbfs                      ; 0x10bdb ; "smbfs"
0x0000c3b2      b906000000     mov ecx, 6
0x0000c3b7      4c89fe         mov rsi, r15
0x0000c3ba      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c3bc      0f97c0         seta al
0x0000c3bf      1c00           sbb al, 0
0x0000c3c1      84c0           test al, al
0x0000c3c3      0f84e5faffff   je 0xbeae
0x0000c3c9      488d3d114800.  lea rdi, str.cifs                       ; 0x10be1 ; "cifs"
0x0000c3d0      b905000000     mov ecx, 5                              ; /usr/include/x86_64-linux-gnu/bits/stdio.h:398
0x0000c3d5      4c89fe         mov rsi, r15
0x0000c3d8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c3da      0f97c0         seta al
0x0000c3dd      1c00           sbb al, 0
0x0000c3df      84c0           test al, al
0x0000c3e1      0f84c7faffff   je 0xbeae
0x0000c3e7      e98efcffff     jmp 0xc07a
0x0000c3ec      0f1f4000       nop dword [rax]
0x0000c3f0      41807f012f     cmp byte [r15 + 1], 0x2f
0x0000c3f5      7587           jne 0xc37e
0x0000c3f7      488d3ddd4700.  lea rdi, str.smbfs                      ; 0x10bdb ; "smbfs"
0x0000c3fe      b906000000     mov ecx, 6
0x0000c403      4c89ee         mov rsi, r13
0x0000c406      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c408      0f97c0         seta al
0x0000c40b      1c00           sbb al, 0
0x0000c40d      84c0           test al, al
0x0000c40f      0f84d2feffff   je 0xc2e7
0x0000c415      488d3dc54700.  lea rdi, str.cifs                       ; 0x10be1 ; "cifs"
0x0000c41c      b905000000     mov ecx, 5
0x0000c421      4c89ee         mov rsi, r13
0x0000c424      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000c426      0f97c0         seta al
0x0000c429      1c00           sbb al, 0
0x0000c42b      84c0           test al, al
0x0000c42d      0f84b4feffff   je 0xc2e7
0x0000c433      e946ffffff     jmp 0xc37e
0x0000c438      0f1f84000000.  nop dword [rax + rax]
0x0000c440      e86b5cffff     call sym.imp.__errno_location
0x0000c445      448b28         mov r13d, dword [rax]
0x0000c448      4989c4         mov r12, rax
0x0000c44b      4889ef         mov rdi, rbp
0x0000c44e      e82d070000     call sym.rpl_fclose
0x0000c453      45892c24       mov dword [r12], r13d
0x0000c457      e9ddfeffff     jmp 0xc339
0x0000c45c      31c0           xor eax, eax
0x0000c45e      e99efaffff     jmp 0xbf01
0x0000c463      e8885dffff     call sym.imp.__stack_chk_fail
0x0000c468      0f1f84000000.  nop dword [rax + rax]
;-- rpl_vasprintf:
0x0000c470      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x0000c471      4889f0         mov rax, rsi
0x0000c474      4889fb         mov rbx, rdi
0x0000c477      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x0000c479      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x0000c47d      64488b0c2528.  mov rcx, qword fs:[0x28]
0x0000c486      48894c2408     mov qword [rsp + 8], rcx
0x0000c48b      31c9           xor ecx, ecx
0x0000c48d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x0000c490      4889d1         mov rcx, rdx
0x0000c493      4889c2         mov rdx, rax
0x0000c496      e805080000     call sym.vasnprintf
0x0000c49b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x0000c49e      7442           je 0xc4e2
0x0000c4a0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x0000c4a4      4881faffffff.  cmp rdx, 0x7fffffff
0x0000c4ab      771b           ja 0xc4c8
0x0000c4ad      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x0000c4b0      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x0000c4b2      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000c4b7      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000c4c0      7527           jne 0xc4e9
0x0000c4c2      4883c410       add rsp, 0x10
0x0000c4c6      5b             pop rbx
0x0000c4c7      c3             ret
0x0000c4c8      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x0000c4cb      e8a05bffff     call sym.imp.free
0x0000c4d0      e8db5bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x0000c4d5      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000c4db      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x0000c4e0      ebd0           jmp 0xc4b2
0x0000c4e2      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x0000c4e7      ebc9           jmp 0xc4b2
0x0000c4e9      e8025dffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000c4ee      6690           nop
;-- areadlink_with_size:
0x0000c4f0      4157           push r15                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c4f2      4156           push r14
0x0000c4f4      b801040000     mov eax, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c4f9      4155           push r13                                ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c4fb      4154           push r12
0x0000c4fd      4989fd         mov r13, rdi
0x0000c500      55             push rbp
0x0000c501      53             push rbx
0x0000c502      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c506      49beffffffff.  movabs r14, 0x3fffffffffffffff          ; ../coreutils-8.31/lib/areadlink-with-size.c:94 ; 4611686018427387903
0x0000c510      49bffeffffff.  movabs r15, 0x7ffffffffffffffe          ; ../coreutils-8.31/lib/areadlink-with-size.c:96 ; 9223372036854775806
0x0000c51a      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/areadlink-with-size.c:53
0x0000c51e      4881fe010400.  cmp rsi, 0x401                          ; ../coreutils-8.31/lib/areadlink-with-size.c:64
0x0000c525      480f43d8       cmovae rbx, rax
0x0000c529      0f1f80000000.  nop dword [rax]
0x0000c530      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000c533      e8885effff     call sym.imp.malloc
0x0000c538      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000c53b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/areadlink-with-size.c:70
0x0000c53e      743b           je 0xc57b                               ; ../coreutils-8.31/lib/areadlink-with-size.c:72
0x0000c540      4889da         mov rdx, rbx
0x0000c543      4889c6         mov rsi, rax
0x0000c546      4c89ef         mov rdi, r13
0x0000c549      e8f25bffff     call sym.imp.readlink
0x0000c54e      4885c0         test rax, rax
0x0000c551      4989c4         mov r12, rax                            ; unistd.h:-169
0x0000c554      7852           js 0xc5a8
0x0000c556      4c39e3         cmp rbx, r12                            ; unistd.h:-163
0x0000c559      7765           ja 0xc5c0
0x0000c55b      4889ef         mov rdi, rbp
0x0000c55e      e80d5bffff     call sym.imp.free                       ; unistd.h:-162
0x0000c563      4c39f3         cmp rbx, r14                            ; unistd.h:-161
0x0000c566      7728           ja 0xc590                               ; unistd.h:-186
0x0000c568      4801db         add rbx, rbx
0x0000c56b      4889df         mov rdi, rbx
0x0000c56e      e84d5effff     call sym.imp.malloc                     ; unistd.h:-184
0x0000c573      4885c0         test rax, rax
0x0000c576      4889c5         mov rbp, rax                            ; unistd.h:-152
0x0000c579      75c5           jne 0xc540
0x0000c57b      4883c408       add rsp, 8
0x0000c57f      4889e8         mov rax, rbp
0x0000c582      5b             pop rbx
0x0000c583      5d             pop rbp
0x0000c584      415c           pop r12
0x0000c586      415d           pop r13
0x0000c588      415e           pop r14
0x0000c58a      415f           pop r15
0x0000c58c      c3             ret
0x0000c58d      0f1f00         nop dword [rax]
0x0000c590      4c39fb         cmp rbx, r15                            ; unistd.h:-159
0x0000c593      773b           ja 0xc5d0
0x0000c595      48bbffffffff.  movabs rbx, 0x7fffffffffffffff          ; 9223372036854775807
0x0000c59f      eb8f           jmp 0xc530
0x0000c5a1      0f1f80000000.  nop dword [rax]
0x0000c5a8      e8035bffff     call sym.imp.__errno_location
0x0000c5ad      833822         cmp dword [rax], 0x22                   ; unistd.h:-174
0x0000c5b0      74a4           je 0xc556                               ; unistd.h:-172
0x0000c5b2      4889ef         mov rdi, rbp                            ; unistd.h:-174
0x0000c5b5      31ed           xor ebp, ebp
0x0000c5b7      e8b45affff     call sym.imp.free                       ; unistd.h:-172
0x0000c5bc      ebbd           jmp 0xc57b
0x0000c5be      6690           nop
0x0000c5c0      42c644250000   mov byte [rbp + r12], 0
0x0000c5c6      ebb3           jmp 0xc57b
0x0000c5c8      0f1f84000000.  nop dword [rax + rax]
0x0000c5d0      e8db5affff     call sym.imp.__errno_location           ; unistd.h:-155
0x0000c5d5      31ed           xor ebp, ebp
0x0000c5d7      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c5dd      eb9c           jmp 0xc57b
0x0000c5df      90             nop
;-- __argmatch_die:
0x0000c5e0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x0000c5e5      e98687ffff     jmp sym.usage
0x0000c5ea      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x0000c5f0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x0000c5f2      4156           push r14
0x0000c5f4      4989f7         mov r15, rsi
0x0000c5f7      4155           push r13
0x0000c5f9      4154           push r12
0x0000c5fb      4989cd         mov r13, rcx
0x0000c5fe      55             push rbp
0x0000c5ff      53             push rbx
0x0000c600      4889d5         mov rbp, rdx
0x0000c603      4883ec28       sub rsp, 0x28
0x0000c607      48897c2408     mov qword [rsp + 8], rdi
0x0000c60c      4889542418     mov qword [rsp + 0x18], rdx
0x0000c611      e89a5bffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x0000c616      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c619      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x0000c621      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c624      0f84b3000000   je 0xc6dd
0x0000c62a      4989c4         mov r12, rax
0x0000c62d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x0000c632      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c634      eb51           jmp 0xc687
0x0000c636      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c640      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x0000c645      4885c0         test rax, rax
0x0000c648      0f84a2000000   je 0xc6f0
0x0000c64e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x0000c652      4c89ea         mov rdx, r13
0x0000c655      4889ee         mov rsi, rbp
0x0000c658      490faffd       imul rdi, r13
0x0000c65c      4801c7         add rdi, rax
0x0000c65f      e89c5cffff     call sym.imp.memcmp
0x0000c664      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x0000c666      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000c66b      b901000000     mov ecx, 1
0x0000c670      0f45c1         cmovne eax, ecx
0x0000c673      88442417       mov byte [rsp + 0x17], al
0x0000c677      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c67b      4c01ed         add rbp, r13
0x0000c67e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000c682      4d85f6         test r14, r14
0x0000c685      7441           je 0xc6c8
0x0000c687      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000c68c      4c89e2         mov rdx, r12
0x0000c68f      4c89f7         mov rdi, r14
0x0000c692      e8295affff     call sym.imp.strncmp
0x0000c697      85c0           test eax, eax
0x0000c699      75dc           jne 0xc677
0x0000c69b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x0000c69e      e80d5bffff     call sym.imp.strlen
0x0000c6a3      4c39e0         cmp rax, r12
0x0000c6a6      7458           je 0xc700
0x0000c6a8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x0000c6ad      7591           jne 0xc640
0x0000c6af      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x0000c6b3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000c6b7      4c01ed         add rbp, r13
0x0000c6ba      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000c6be      4d85f6         test r14, r14
0x0000c6c1      75c4           jne 0xc687
0x0000c6c3      0f1f440000     nop dword [rax + rax]
0x0000c6c8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000c6cd      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x0000c6d4      480f440424     cmove rax, qword [rsp]
0x0000c6d9      48890424       mov qword [rsp], rax
0x0000c6dd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x0000c6e1      4883c428       add rsp, 0x28
0x0000c6e5      5b             pop rbx
0x0000c6e6      5d             pop rbp
0x0000c6e7      415c           pop r12
0x0000c6e9      415d           pop r13
0x0000c6eb      415e           pop r14
0x0000c6ed      415f           pop r15
0x0000c6ef      c3             ret
0x0000c6f0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x0000c6f5      eb80           jmp 0xc677
0x0000c6f7      660f1f840000.  nop word [rax + rax]
0x0000c700      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x0000c704      ebd7           jmp 0xc6dd
0x0000c706      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x0000c710      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x0000c714      4154           push r12
0x0000c716      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000c71b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000c71c      4989f4         mov r12, rsi
0x0000c71f      53             push rbx
0x0000c720      4889fd         mov rbp, rdi
0x0000c723      744b           je 0xc770                               ; ../coreutils-8.31/lib/argmatch.c:133
0x0000c725      488d350f4500.  lea rsi, str.ambiguous_argument__s_for__s ; 0x10c3b ; "ambiguous argument %s for %s"
0x0000c72c      31ff           xor edi, edi
0x0000c72e      e85d5affff     call sym.imp.dcgettext
0x0000c733      4889c3         mov rbx, rax
0x0000c736      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000c739      bf01000000     mov edi, 1
0x0000c73e      e8adddffff     call sym.quote_n
0x0000c743      4c89e2         mov rdx, r12
0x0000c746      4889c5         mov rbp, rax
0x0000c749      be08000000     mov esi, 8
0x0000c74e      31ff           xor edi, edi
0x0000c750      e8cbd9ffff     call sym.quotearg_n_style
0x0000c755      4989e8         mov r8, rbp
0x0000c758      4889da         mov rdx, rbx
0x0000c75b      4889c1         mov rcx, rax
0x0000c75e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x0000c75f      5d             pop rbp
0x0000c760      415c           pop r12
0x0000c762      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x0000c764      31ff           xor edi, edi
0x0000c766      31c0           xor eax, eax
0x0000c768      e9335dffff     jmp sym.imp.error
0x0000c76d      0f1f00         nop dword [rax]
0x0000c770      488d35a94400.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x10c20 ; "invalid argument %s for %s"
0x0000c777      31ff           xor edi, edi
0x0000c779      e8125affff     call sym.imp.dcgettext
0x0000c77e      4889c3         mov rbx, rax
0x0000c781      ebb3           jmp 0xc736
0x0000c783      0f1f00         nop dword [rax]
0x0000c786      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x0000c790      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c792      4156           push r14
0x0000c794      4989fe         mov r14, rdi
0x0000c797      4155           push r13
0x0000c799      4154           push r12
0x0000c79b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x0000c79d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c79e      53             push rbx
0x0000c79f      4889f5         mov rbp, rsi
0x0000c7a2      488d35af4400.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x10c58 ; "Valid arguments are:"
0x0000c7a9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c7ac      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x0000c7b1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x0000c7b5      488b1d847b20.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x0000c7bc      e8cf59ffff     call sym.imp.dcgettext
0x0000c7c1      4889c7         mov rdi, rax
0x0000c7c4      4889de         mov rsi, rbx
0x0000c7c7      e8445bffff     call sym.imp.fputs_unlocked
0x0000c7cc      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c7cf      4d85ff         test r15, r15
0x0000c7d2      0f8490000000   je 0xc868
0x0000c7d8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000c7db      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c7dd      eb39           jmp 0xc818
0x0000c7df      90             nop
0x0000c7e0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x0000c7e3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c7e7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000c7ea      e821ddffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000c7ef      488b3d4a7b20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x0000c7f6      488d15704400.  lea rdx, [0x00010c6d]                   ; "\n  - %s"
0x0000c7fd      4889c1         mov rcx, rax
0x0000c800      be01000000     mov esi, 1
0x0000c805      31c0           xor eax, eax
0x0000c807      4c01e5         add rbp, r12
0x0000c80a      e8215dffff     call sym.imp.__fprintf_chk
0x0000c80f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c813      4d85ff         test r15, r15
0x0000c816      7450           je 0xc868
0x0000c818      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000c81b      74c3           je 0xc7e0
0x0000c81d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x0000c820      4889ee         mov rsi, rbp
0x0000c823      4c89ef         mov rdi, r13
0x0000c826      e8d55affff     call sym.imp.memcmp
0x0000c82b      85c0           test eax, eax
0x0000c82d      75b1           jne 0xc7e0
0x0000c82f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x0000c832      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c836      4c01e5         add rbp, r12
0x0000c839      e8d2dcffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000c83e      488b3dfb7a20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x0000c845      488d15294400.  lea rdx, str.s                          ; 0x10c75 ; ", %s"
0x0000c84c      4889c1         mov rcx, rax
0x0000c84f      be01000000     mov esi, 1
0x0000c854      31c0           xor eax, eax
0x0000c856      e8d55cffff     call sym.imp.__fprintf_chk
0x0000c85b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000c85f      4d85ff         test r15, r15
0x0000c862      75b4           jne 0xc818
0x0000c864      0f1f4000       nop dword [rax]
0x0000c868      488b3dd17a20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x214340:8]=0
0x0000c86f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x0000c873      483b4730       cmp rax, qword [rdi + 0x30]
0x0000c877      731f           jae 0xc898
0x0000c879      488d5001       lea rdx, [rax + 1]
0x0000c87d      48895728       mov qword [rdi + 0x28], rdx
0x0000c881      c6000a         mov byte [rax], 0xa
0x0000c884      4883c408       add rsp, 8
0x0000c888      5b             pop rbx
0x0000c889      5d             pop rbp
0x0000c88a      415c           pop r12
0x0000c88c      415d           pop r13
0x0000c88e      415e           pop r14
0x0000c890      415f           pop r15
0x0000c892      c3             ret
0x0000c893      0f1f440000     nop dword [rax + rax]
0x0000c898      4883c408       add rsp, 8
0x0000c89c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x0000c8a1      5b             pop rbx
0x0000c8a2      5d             pop rbp
0x0000c8a3      415c           pop r12
0x0000c8a5      415d           pop r13
0x0000c8a7      415e           pop r14
0x0000c8a9      415f           pop r15
0x0000c8ab      e99059ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x0000c8b0      4157           push r15
0x0000c8b2      4156           push r14
0x0000c8b4      4989fe         mov r14, rdi
0x0000c8b7      4155           push r13
0x0000c8b9      4154           push r12
0x0000c8bb      4989f4         mov r12, rsi
0x0000c8be      55             push rbp
0x0000c8bf      53             push rbx
0x0000c8c0      4889cd         mov rbp, rcx
0x0000c8c3      4889d3         mov rbx, rdx
0x0000c8c6      4c89c1         mov rcx, r8
0x0000c8c9      4889ea         mov rdx, rbp
0x0000c8cc      4883ec08       sub rsp, 8
0x0000c8d0      4889de         mov rsi, rbx
0x0000c8d3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x0000c8d6      4d89c7         mov r15, r8
0x0000c8d9      4d89cd         mov r13, r9
0x0000c8dc      e80ffdffff     call sym.argmatch
0x0000c8e1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x0000c8e4      780f           js 0xc8f5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x0000c8e6      4883c408       add rsp, 8
0x0000c8ea      5b             pop rbx
0x0000c8eb      5d             pop rbp
0x0000c8ec      415c           pop r12
0x0000c8ee      415d           pop r13
0x0000c8f0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x0000c8f2      415f           pop r15
0x0000c8f4      c3             ret
0x0000c8f5      4889c2         mov rdx, rax
0x0000c8f8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000c8fb      4c89f7         mov rdi, r14
0x0000c8fe      e80dfeffff     call sym.argmatch_invalid
0x0000c903      4c89fa         mov rdx, r15
0x0000c906      4889ee         mov rsi, rbp
0x0000c909      4889df         mov rdi, rbx
0x0000c90c      e87ffeffff     call sym.argmatch_valid
0x0000c911      41ffd5         call r13
0x0000c914      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000c91b      ebc9           jmp 0xc8e6
0x0000c91d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x0000c920      4156           push r14
0x0000c922      4155           push r13
0x0000c924      4154           push r12
0x0000c926      55             push rbp
0x0000c927      53             push rbx
0x0000c928      4c8b36         mov r14, qword [rsi]
0x0000c92b      4d85f6         test r14, r14
0x0000c92e      7431           je 0xc961
0x0000c930      4989cc         mov r12, rcx
0x0000c933      4989fd         mov r13, rdi
0x0000c936      4889d5         mov rbp, rdx
0x0000c939      488d5e08       lea rbx, [rsi + 8]
0x0000c93d      eb10           jmp 0xc94f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000c93f      90             nop
0x0000c940      4c8b33         mov r14, qword [rbx]
0x0000c943      4c01e5         add rbp, r12
0x0000c946      4883c308       add rbx, 8
0x0000c94a      4d85f6         test r14, r14
0x0000c94d      7412           je 0xc961
0x0000c94f      4c89e2         mov rdx, r12
0x0000c952      4889ee         mov rsi, rbp
0x0000c955      4c89ef         mov rdi, r13
0x0000c958      e8a359ffff     call sym.imp.memcmp
0x0000c95d      85c0           test eax, eax
0x0000c95f      75df           jne 0xc940
0x0000c961      5b             pop rbx
0x0000c962      4c89f0         mov rax, r14
0x0000c965      5d             pop rbp
0x0000c966      415c           pop r12
0x0000c968      415d           pop r13
0x0000c96a      415e           pop r14
0x0000c96c      c3             ret
0x0000c96d      0f1f00         nop dword [rax]
;-- close_stream:
0x0000c970      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0000c972      55             push rbp
0x0000c973      4889fd         mov rbp, rdi
0x0000c976      53             push rbx
0x0000c977      e86457ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000c97c      8b5d00         mov ebx, dword [rbp]
0x0000c97f      4889ef         mov rdi, rbp
0x0000c982      4989c4         mov r12, rax
0x0000c985      e8f6010000     call sym.rpl_fclose
0x0000c98a      83e320         and ebx, 0x20                           ; "@"
0x0000c98d      85db           test ebx, ebx
0x0000c98f      7517           jne 0xc9a8
0x0000c991      85c0           test eax, eax
0x0000c993      740a           je 0xc99f                               ; stdio.h:-186
0x0000c995      4d85e4         test r12, r12                           ; stdio.h:-178
0x0000c998      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c99d      7439           je 0xc9d8
0x0000c99f      5b             pop rbx
0x0000c9a0      5d             pop rbp
0x0000c9a1      415c           pop r12
0x0000c9a3      c3             ret
0x0000c9a4      0f1f4000       nop dword [rax]
0x0000c9a8      85c0           test eax, eax
0x0000c9aa      751c           jne 0xc9c8
0x0000c9ac      e8ff56ffff     call sym.imp.__errno_location
0x0000c9b1      c70000000000   mov dword [rax], 0
0x0000c9b7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c9bc      5b             pop rbx
0x0000c9bd      5d             pop rbp
0x0000c9be      415c           pop r12
0x0000c9c0      c3             ret
0x0000c9c1      0f1f80000000.  nop dword [rax]
0x0000c9c8      5b             pop rbx
0x0000c9c9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000c9ce      5d             pop rbp                                 ; stdio.h:-186
0x0000c9cf      415c           pop r12
0x0000c9d1      c3             ret
0x0000c9d2      660f1f440000   nop word [rax + rax]
0x0000c9d8      e8d356ffff     call sym.imp.__errno_location
0x0000c9dd      833809         cmp dword [rax], 9
0x0000c9e0      5b             pop rbx
0x0000c9e1      5d             pop rbp
0x0000c9e2      415c           pop r12                                 ; stdio.h:-178
0x0000c9e4      0f95c0         setne al
0x0000c9e7      0fb6c0         movzx eax, al
0x0000c9ea      f7d8           neg eax
0x0000c9ec      c3             ret
0x0000c9ed      0f1f00         nop dword [rax]
;-- open_safer:
0x0000c9f0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x0000c9f4      4889542430     mov qword [rsp + 0x30], rdx
0x0000c9f9      31d2           xor edx, edx
0x0000c9fb      64488b042528.  mov rax, qword fs:[0x28]
0x0000ca04      4889442418     mov qword [rsp + 0x18], rax
0x0000ca09      31c0           xor eax, eax
0x0000ca0b      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x0000ca0f      7527           jne 0xca38
0x0000ca11      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000ca13      e8a85affff     call sym.imp.open
0x0000ca18      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x0000ca1a      e821010000     call sym.fd_safer
0x0000ca1f      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x0000ca24      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000ca2d      752a           jne 0xca59
0x0000ca2f      4883c458       add rsp, 0x58
0x0000ca33      c3             ret
0x0000ca34      0f1f4000       nop dword [rax]
0x0000ca38      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000ca3d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x0000ca44      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x0000ca48      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000ca4d      488d442420     lea rax, [rsp + 0x20]
0x0000ca52      4889442410     mov qword [rsp + 0x10], rax
0x0000ca57      ebb8           jmp 0xca11
0x0000ca59      e89257ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000ca5e      6690           nop
;-- hard_locale:
0x0000ca60      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000ca64      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000ca66      e8f559ffff     call sym.imp.setlocale
0x0000ca6b      4889c2         mov rdx, rax
0x0000ca6e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000ca73      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000ca76      741d           je 0xca95
0x0000ca78      488d3dfb4100.  lea rdi, [0x00010c7a]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000ca7f      b902000000     mov ecx, 2
0x0000ca84      4889d6         mov rsi, rdx
0x0000ca87      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000ca89      0f97c1         seta cl
0x0000ca8c      80d900         sbb cl, 0
0x0000ca8f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000ca91      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000ca93      750b           jne 0xcaa0
0x0000ca95      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000ca99      c3             ret
0x0000ca9a      660f1f440000   nop word [rax + rax]
0x0000caa0      488d3dd54100.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x10c7c ; "POSIX"
0x0000caa7      b906000000     mov ecx, 6
0x0000caac      4889d6         mov rsi, rdx
0x0000caaf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000cab1      0f97c0         seta al
0x0000cab4      1c00           sbb al, 0
0x0000cab6      84c0           test al, al
0x0000cab8      0f95c0         setne al
0x0000cabb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000cabf      c3             ret
;-- hash_pjw:
0x0000cac0      480fbe0f       movsx rcx, byte [rdi]
0x0000cac4      84c9           test cl, cl
0x0000cac6      7428           je 0xcaf0
0x0000cac8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hash-pjw.c:34
0x0000caca      660f1f440000   nop word [rax + rax]
0x0000cad0      48c1c009       rol rax, 9                              ; ../coreutils-8.31/lib/hash-pjw.c:37
0x0000cad4      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/hash-pjw.c:36
0x0000cad8      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/hash-pjw.c:37
0x0000cadb      480fbe0f       movsx rcx, byte [rdi]                   ; ../coreutils-8.31/lib/hash-pjw.c:36
0x0000cadf      84c9           test cl, cl
0x0000cae1      75ed           jne 0xcad0
0x0000cae3      31d2           xor edx, edx
0x0000cae5      48f7f6         div rsi
0x0000cae8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x0000caeb      c3             ret
0x0000caec      0f1f4000       nop dword [rax]
0x0000caf0      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash-pjw.c:36
0x0000caf2      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash-pjw.c:40
0x0000caf5      c3             ret
0x0000caf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- locale_charset:
0x0000cb00      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x0000cb04      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000cb09      e8f258ffff     call sym.imp.nl_langinfo
0x0000cb0e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000cb11      741d           je 0xcb30
0x0000cb13      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000cb16      488d15654100.  lea rdx, str.ASCII                      ; 0x10c82 ; "ASCII"
0x0000cb1d      480f44c2       cmove rax, rdx
0x0000cb21      4883c408       add rsp, 8
0x0000cb25      c3             ret
0x0000cb26      662e0f1f8400.  nop word cs:[rax + rax]
0x0000cb30      488d054b4100.  lea rax, str.ASCII                      ; 0x10c82 ; "ASCII"
0x0000cb37      4883c408       add rsp, 8
0x0000cb3b      c3             ret
0x0000cb3c      0f1f4000       nop dword [rax]
;-- fd_safer:
0x0000cb40      4155           push r13                                ; ../coreutils-8.31/lib/fd-safer.c:38
0x0000cb42      4154           push r12
0x0000cb44      55             push rbp
0x0000cb45      53             push rbx
0x0000cb46      89fb           mov ebx, edi
0x0000cb48      4883ec08       sub rsp, 8
0x0000cb4c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000cb4f      7721           ja 0xcb72
0x0000cb51      e86a120000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0000cb56      4189c4         mov r12d, eax
0x0000cb59      e85255ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000cb5e      448b28         mov r13d, dword [rax]
0x0000cb61      4889c5         mov rbp, rax
0x0000cb64      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0000cb66      e86557ffff     call sym.imp.close
0x0000cb6b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000cb6e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0000cb72      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0000cb76      89d8           mov eax, ebx
0x0000cb78      5b             pop rbx
0x0000cb79      5d             pop rbp
0x0000cb7a      415c           pop r12
0x0000cb7c      415d           pop r13
0x0000cb7e      c3             ret
0x0000cb7f      90             nop
;-- rpl_fclose:
0x0000cb80      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000cb82      55             push rbp
0x0000cb83      53             push rbx
0x0000cb84      4889fb         mov rbx, rdi
0x0000cb87      e8e457ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000cb8c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000cb8e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000cb91      7854           js 0xcbe7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000cb93      e88858ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000cb98      85c0           test eax, eax
0x0000cb9a      752c           jne 0xcbc8
0x0000cb9c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000cb9f      e85c000000     call sym.rpl_fflush
0x0000cba4      85c0           test eax, eax
0x0000cba6      743c           je 0xcbe4
0x0000cba8      e80355ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000cbad      448b20         mov r12d, dword [rax]
0x0000cbb0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000cbb3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000cbb6      e8b555ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000cbbb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000cbbe      7530           jne 0xcbf0
0x0000cbc0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000cbc1      5d             pop rbp
0x0000cbc2      415c           pop r12
0x0000cbc4      c3             ret
0x0000cbc5      0f1f00         nop dword [rax]
0x0000cbc8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000cbcb      e8a057ffff     call sym.imp.fileno
0x0000cbd0      31f6           xor esi, esi
0x0000cbd2      ba01000000     mov edx, 1
0x0000cbd7      89c7           mov edi, eax
0x0000cbd9      e89256ffff     call sym.imp.lseek
0x0000cbde      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000cbe2      75b8           jne 0xcb9c
0x0000cbe4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000cbe7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000cbe8      5d             pop rbp
0x0000cbe9      415c           pop r12
0x0000cbeb      e98055ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000cbf0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000cbf4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000cbf9      ebc5           jmp 0xcbc0
0x0000cbfb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x0000cc00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000cc03      53             push rbx
0x0000cc04      4889fb         mov rbx, rdi
0x0000cc07      7411           je 0xcc1a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000cc09      e81258ffff     call sym.imp.__freading
0x0000cc0e      85c0           test eax, eax
0x0000cc10      7408           je 0xcc1a
0x0000cc12      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000cc18      750e           jne 0xcc28
0x0000cc1a      4889df         mov rdi, rbx
0x0000cc1d      5b             pop rbx
0x0000cc1e      e9ad57ffff     jmp sym.imp.fflush
0x0000cc23      0f1f440000     nop dword [rax + rax]
0x0000cc28      4889df         mov rdi, rbx
0x0000cc2b      ba01000000     mov edx, 1
0x0000cc30      31f6           xor esi, esi
0x0000cc32      e809000000     call sym.rpl_fseeko
0x0000cc37      4889df         mov rdi, rbx
0x0000cc3a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000cc3b      e99057ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000cc40      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000cc44      48394710       cmp qword [rdi + 0x10], rax
0x0000cc48      7406           je 0xcc50                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000cc4a      e98158ffff     jmp sym.imp.fseeko
0x0000cc4f      90             nop
0x0000cc50      488b4720       mov rax, qword [rdi + 0x20]
0x0000cc54      48394728       cmp qword [rdi + 0x28], rax
0x0000cc58      75f0           jne 0xcc4a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000cc5a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000cc5f      75e9           jne 0xcc4a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000cc61      4154           push r12
0x0000cc63      55             push rbp
0x0000cc64      4189d4         mov r12d, edx
0x0000cc67      53             push rbx
0x0000cc68      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000cc6b      4889fb         mov rbx, rdi
0x0000cc6e      e8fd56ffff     call sym.imp.fileno
0x0000cc73      4489e2         mov edx, r12d
0x0000cc76      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000cc79      89c7           mov edi, eax
0x0000cc7b      e8f055ffff     call sym.imp.lseek
0x0000cc80      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000cc84      740c           je 0xcc92
0x0000cc86      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000cc89      488983900000.  mov qword [rbx + 0x90], rax
0x0000cc90      31c0           xor eax, eax
0x0000cc92      5b             pop rbx
0x0000cc93      5d             pop rbp
0x0000cc94      415c           pop r12
0x0000cc96      c3             ret
0x0000cc97      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x0000cca0      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000cca1      4889e5         mov rbp, rsp
0x0000cca4      4157           push r15
0x0000cca6      4156           push r14
0x0000cca8      4155           push r13
0x0000ccaa      4154           push r12
0x0000ccac      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000ccb3      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000ccb4      4889d3         mov rbx, rdx
0x0000ccb7      4989cc         mov r12, rcx
0x0000ccba      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000ccbd      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000ccc4      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000cccb      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000ccd2      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000ccd9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000ccdc      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x0000cce3      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000ccec      488945c8       mov qword [rbp - 0x38], rax
0x0000ccf0      31c0           xor eax, eax
0x0000ccf2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000ccf9      e852150000     call sym.printf_parse
0x0000ccfe      85c0           test eax, eax
0x0000cd00      0f88620e0000   js 0xdb68
0x0000cd06      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x0000cd09      4c89e7         mov rdi, r12
0x0000cd0c      e83f130000     call sym.printf_fetchargs
0x0000cd11      85c0           test eax, eax
0x0000cd13      0f88b70e0000   js 0xdbd0
0x0000cd19      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x0000cd20      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x0000cd27      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x0000cd2b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000cd2f      480f46c2       cmovbe rax, rdx
0x0000cd33      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x0000cd3a      0f82280a0000   jb 0xd768
0x0000cd40      4889c7         mov rdi, rax
0x0000cd43      4531c0         xor r8d, r8d
0x0000cd46      4883c706       add rdi, 6
0x0000cd4a      410f92c0       setb r8b
0x0000cd4e      0f82140a0000   jb 0xd768
0x0000cd54      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x0000cd5b      0f8647010000   jbe 0xcea8
0x0000cd61      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x0000cd65      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x0000cd6c      0f84f6090000   je 0xd768
0x0000cd72      e84956ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x0000cd77      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000cd7a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x0000cd81      0f84e1090000   je 0xd768                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000cd87      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0000cd8e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x0000cd95      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x0000cd98      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x0000cda0      740a           je 0xcdac
0x0000cda2      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x0000cda9      4c8b20         mov r12, qword [rax]
0x0000cdac      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x0000cdb3      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000cdba      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x0000cdc1      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0000cdcc      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000cdd3      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x0000cdd6      4c89c3         mov rbx, r8
0x0000cdd9      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000cddd      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x0000cde0      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000cde3      0f8468090000   je 0xd751
0x0000cde9      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000cdec      4889d8         mov rax, rbx
0x0000cdef      4801c8         add rax, rcx
0x0000cdf2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x0000cdf5      0f83dd000000   jae 0xced8                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000cdfb      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000cdff      0f84cb0a0000   je 0xd8d0
0x0000ce05      e8a652ffff     call sym.imp.__errno_location
0x0000ce0a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000ce11      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x0000ce18      7409           je 0xce23
0x0000ce1a      4d85ff         test r15, r15
0x0000ce1d      0f85dd0a0000   jne 0xd900
0x0000ce23      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x0000ce2a      4885c0         test rax, rax
0x0000ce2d      7408           je 0xce37
0x0000ce2f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x0000ce32      e83952ffff     call sym.imp.free
0x0000ce37      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x0000ce3e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000ce45      4883c020       add rax, 0x20                           ; "@"
0x0000ce49      4839c7         cmp rdi, rax
0x0000ce4c      7405           je 0xce53
0x0000ce4e      e81d52ffff     call sym.imp.free
0x0000ce53      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000ce5a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000ce61      4883c010       add rax, 0x10
0x0000ce65      4839c7         cmp rdi, rax
0x0000ce68      7405           je 0xce6f
0x0000ce6a      e80152ffff     call sym.imp.free
0x0000ce6f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x0000ce76      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x0000ce79      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0000ce7f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x0000ce83      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000ce8c      4c89f8         mov rax, r15
0x0000ce8f      0f85020f0000   jne 0xdd97
0x0000ce95      488d65d8       lea rsp, [rbp - 0x28]
0x0000ce99      5b             pop rbx
0x0000ce9a      415c           pop r12
0x0000ce9c      415d           pop r13
0x0000ce9e      415e           pop r14
0x0000cea0      415f           pop r15
0x0000cea2      5d             pop rbp
0x0000cea3      c3             ret
0x0000cea4      0f1f4000       nop dword [rax]
0x0000cea8      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000ceac      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x0000ceb7      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000cebb      4829c4         sub rsp, rax
0x0000cebe      488d44240f     lea rax, [rsp + 0xf]
0x0000cec3      4883e0f0       and rax, 0xfffffffffffffff0
0x0000cec7      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0000cece      e9c2feffff     jmp 0xcd95
0x0000ced3      0f1f440000     nop dword [rax + rax]
0x0000ced8      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000cedb      7367           jae 0xcf44
0x0000cedd      4d85e4         test r12, r12
0x0000cee0      0f852a090000   jne 0xd810
0x0000cee6      4883f80c       cmp rax, 0xc
0x0000ceea      0f8732090000   ja 0xd822
0x0000cef0      41bc0c000000   mov r12d, 0xc
0x0000cef6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000cefd      0f94c2         sete dl
0x0000cf00      4d85ff         test r15, r15
0x0000cf03      0f843f090000   je 0xd848
0x0000cf09      84d2           test dl, dl
0x0000cf0b      0f8537090000   jne 0xd848
0x0000cf11      4c89e6         mov rsi, r12
0x0000cf14      4c89ff         mov rdi, r15
0x0000cf17      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000cf1e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000cf25      e82655ffff     call sym.imp.realloc
0x0000cf2a      4885c0         test rax, rax
0x0000cf2d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000cf34      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000cf3b      0f84aa090000   je 0xd8eb
0x0000cf41      4989c7         mov r15, rax
0x0000cf44      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x0000cf48      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000cf4b      4c89c6         mov rsi, r8
0x0000cf4e      e80d54ffff     call sym.imp.memcpy
0x0000cf53      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0000cf5a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x0000cf61      0f84b40c0000   je 0xdc1b
0x0000cf67      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0000cf6c      498b4550       mov rax, qword [r13 + 0x50]
0x0000cf70      80fa25         cmp dl, 0x25
0x0000cf73      0f848f070000   je 0xd708
0x0000cf79      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0000cf7d      0f84430c0000   je 0xdbc6
0x0000cf83      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0000cf8a      48c1e005       shl rax, 5
0x0000cf8e      4c01c0         add rax, r8
0x0000cf91      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x0000cf94      8b38           mov edi, dword [rax]
0x0000cf96      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0000cf9c      0f84de070000   je 0xd780
0x0000cfa2      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x0000cfa6      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0000cfad      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000cfaf      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x0000cfb2      488d5f01       lea rbx, [rdi + 1]
0x0000cfb6      740f           je 0xcfc7                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000cfb8      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0000cfbf      488d5f02       lea rbx, [rdi + 2]
0x0000cfc3      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x0000cfc7      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x0000cfc9      7407           je 0xcfd2
0x0000cfcb      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0000cfce      4883c301       add rbx, 1
0x0000cfd2      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x0000cfd4      7407           je 0xcfdd
0x0000cfd6      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x0000cfd9      4883c301       add rbx, 1
0x0000cfdd      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000cfdf      7407           je 0xcfe8
0x0000cfe1      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x0000cfe4      4883c301       add rbx, 1
0x0000cfe8      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000cfea      7407           je 0xcff3
0x0000cfec      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000cfef      4883c301       add rbx, 1
0x0000cff3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x0000cff5      7407           je 0xcffe
0x0000cff7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x0000cffa      4883c301       add rbx, 1
0x0000cffe      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x0000d000      7407           je 0xd009
0x0000d002      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x0000d005      4883c301       add rbx, 1
0x0000d009      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x0000d00d      498b5520       mov rdx, qword [r13 + 0x20]
0x0000d011      4839d6         cmp rsi, rdx
0x0000d014      7430           je 0xd046
0x0000d016      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x0000d019      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d01c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000d023      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x0000d026      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d029      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000d030      e82b53ffff     call sym.imp.memcpy
0x0000d035      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x0000d03c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000d043      4801cb         add rbx, rcx
0x0000d046      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x0000d04a      498b5538       mov rdx, qword [r13 + 0x38]
0x0000d04e      4839d6         cmp rsi, rdx
0x0000d051      7430           je 0xd083
0x0000d053      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x0000d056      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d059      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000d060      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x0000d063      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000d066      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000d06d      e8ee52ffff     call sym.imp.memcpy
0x0000d072      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x0000d079      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000d080      4801cb         add rbx, rcx
0x0000d083      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x0000d089      83ff10         cmp edi, 0x10
0x0000d08c      772d           ja 0xd0bb
0x0000d08e      b801000000     mov eax, 1
0x0000d093      89f9           mov ecx, edi
0x0000d095      48d3e0         shl rax, cl
0x0000d098      a980410100     test eax, 0x14180
0x0000d09d      7515           jne 0xd0b4
0x0000d09f      f6c410         test ah, 0x10
0x0000d0a2      0f8558090000   jne 0xda00
0x0000d0a8      f6c406         test ah, 6
0x0000d0ab      740e           je 0xd0bb
0x0000d0ad      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x0000d0b0      4883c301       add rbx, 1
0x0000d0b4      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x0000d0b7      4883c301       add rbx, 1
0x0000d0bb      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x0000d0c0      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x0000d0c4      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x0000d0c6      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000d0ca      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d0ce      0f842c070000   je 0xd800
0x0000d0d4      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x0000d0d8      4c01c0         add rax, r8
0x0000d0db      833805         cmp dword [rax], 5
0x0000d0de      0f85e20a0000   jne 0xdbc6
0x0000d0e4      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x0000d0e7      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x0000d0f1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x0000d0f7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x0000d0fb      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d0ff      742b           je 0xd12c
0x0000d101      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x0000d105      4901c0         add r8, rax
0x0000d108      41833805       cmp dword [r8], 5
0x0000d10c      0f85b40a0000   jne 0xdbc6
0x0000d112      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x0000d118      418b5010       mov edx, dword [r8 + 0x10]
0x0000d11c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x0000d123      8d4001         lea eax, [rax + 1]
0x0000d126      898520fcffff   mov dword [rbp - 0x3e0], eax
0x0000d12c      4c89f0         mov rax, r14
0x0000d12f      31d2           xor edx, edx
0x0000d131      4883c002       add rax, 2
0x0000d135      0f82610c0000   jb 0xdd9c
0x0000d13b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x0000d13e      734b           jae 0xd18b
0x0000d140      4d85e4         test r12, r12
0x0000d143      0f851f080000   jne 0xd968
0x0000d149      4883f80c       cmp rax, 0xc
0x0000d14d      0f872d080000   ja 0xd980
0x0000d153      41bc0c000000   mov r12d, 0xc
0x0000d159      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d160      0f94c2         sete dl
0x0000d163      4d85ff         test r15, r15
0x0000d166      0f8444080000   je 0xd9b0
0x0000d16c      84d2           test dl, dl
0x0000d16e      0f853c080000   jne 0xd9b0
0x0000d174      4c89e6         mov rsi, r12
0x0000d177      4c89ff         mov rdi, r15
0x0000d17a      e8d152ffff     call sym.imp.realloc
0x0000d17f      4885c0         test rax, rax
0x0000d182      0f847dfcffff   je 0xce05
0x0000d188      4989c7         mov r15, rax
0x0000d18b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x0000d190      e81b4fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x0000d195      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000d19c      8b00           mov eax, dword [rax]
0x0000d19e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x0000d1a5      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000d1ab      0f1f440000     nop dword [rax + rax]
0x0000d1b0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000d1b7      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000d1ba      41baffffff7f   mov r10d, 0x7fffffff
0x0000d1c0      4c29f3         sub rbx, r14
0x0000d1c3      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000d1cd      4881fbffffff.  cmp rbx, 0x7fffffff
0x0000d1d4      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000d1da      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x0000d1e0      4c0f46d3       cmovbe r10, rbx
0x0000d1e4      83f811         cmp eax, 0x11
0x0000d1e7      0f87d9090000   ja 0xdbc6
0x0000d1ed      488d35943a00.  lea rsi, [0x00010c88]
0x0000d1f4      48630486       movsxd rax, dword [rsi + rax*4]
0x0000d1f8      4801f0         add rax, rsi
0x0000d1fb      ffe0           jmp rax
0x0000d1fd      0f1f00         nop dword [rax]
0x0000d200      498b4550       mov rax, qword [r13 + 0x50]
0x0000d204      4b8d3c37       lea rdi, [r15 + r14]
0x0000d208      48c1e005       shl rax, 5
0x0000d20c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d213      4c8b4810       mov r9, qword [rax + 0x10]
0x0000d217      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d21d      83f801         cmp eax, 1
0x0000d220      0f84c2040000   je 0xd6e8
0x0000d226      83f802         cmp eax, 2
0x0000d229      0f84a1040000   je 0xd6d0
0x0000d22f      4883ec08       sub rsp, 8
0x0000d233      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d239      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d240      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x0000d243      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d24a      ba01000000     mov edx, 1
0x0000d24f      31c0           xor eax, eax
0x0000d251      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000d258      e8034effff     call sym.imp.__snprintf_chk
0x0000d25d      5e             pop rsi
0x0000d25e      5f             pop rdi
0x0000d25f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000d266      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000d26c      85c9           test ecx, ecx
0x0000d26e      0f8838010000   js 0xd3ac
0x0000d274      4863d1         movsxd rdx, ecx
0x0000d277      4c39d2         cmp rdx, r10
0x0000d27a      730e           jae 0xd28a
0x0000d27c      4c01fa         add rdx, r15
0x0000d27f      42803c3200     cmp byte [rdx + r14], 0
0x0000d284      0f853c090000   jne 0xdbc6
0x0000d28a      39c1           cmp ecx, eax
0x0000d28c      7d08           jge 0xd296
0x0000d28e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x0000d294      89c1           mov ecx, eax
0x0000d296      8d4101         lea eax, [rcx + 1]
0x0000d299      4c39d0         cmp rax, r10
0x0000d29c      0f822e080000   jb 0xdad0
0x0000d2a2      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x0000d2a9      0f8741080000   ja 0xdaf0
0x0000d2af      4b8d3424       lea rsi, [r12 + r12]
0x0000d2b3      8d5102         lea edx, [rcx + 2]
0x0000d2b6      4d85e4         test r12, r12
0x0000d2b9      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000d2c0      480f49c6       cmovns rax, rsi
0x0000d2c4      4c01f2         add rdx, r14
0x0000d2c7      0f82bb0a0000   jb 0xdd88
0x0000d2cd      4839d0         cmp rax, rdx
0x0000d2d0      480f42c2       cmovb rax, rdx
0x0000d2d4      4939c4         cmp r12, rax
0x0000d2d7      0f83d3feffff   jae 0xd1b0
0x0000d2dd      4d85e4         test r12, r12
0x0000d2e0      0f882bfbffff   js 0xce11
0x0000d2e6      4839c6         cmp rsi, rax
0x0000d2e9      4989f4         mov r12, rsi
0x0000d2ec      730d           jae 0xd2fb
0x0000d2ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d2f2      0f8419fbffff   je 0xce11
0x0000d2f8      4989c4         mov r12, rax
0x0000d2fb      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d302      0f94c3         sete bl
0x0000d305      4d85ff         test r15, r15
0x0000d308      0f8482030000   je 0xd690
0x0000d30e      84db           test bl, bl
0x0000d310      0f857a030000   jne 0xd690
0x0000d316      4c89e6         mov rsi, r12
0x0000d319      4c89ff         mov rdi, r15
0x0000d31c      e82f51ffff     call sym.imp.realloc
0x0000d321      4885c0         test rax, rax
0x0000d324      0f84e7faffff   je 0xce11
0x0000d32a      4989c7         mov r15, rax
0x0000d32d      e97efeffff     jmp 0xd1b0                              ; stdio2.h:-211
0x0000d332      660f1f440000   nop word [rax + rax]
0x0000d338      498b4550       mov rax, qword [r13 + 0x50]
0x0000d33c      4b8d3c37       lea rdi, [r15 + r14]
0x0000d340      48c1e005       shl rax, 5
0x0000d344      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d34b      448b4810       mov r9d, dword [rax + 0x10]
0x0000d34f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d355      83f801         cmp eax, 1
0x0000d358      0f8432020000   je 0xd590
0x0000d35e      83f802         cmp eax, 2
0x0000d361      0f8471020000   je 0xd5d8
0x0000d367      4883ec08       sub rsp, 8
0x0000d36b      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d371      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d378      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d37f      ba01000000     mov edx, 1
0x0000d384      4c89d6         mov rsi, r10
0x0000d387      31c0           xor eax, eax
0x0000d389      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000d390      e8cb4cffff     call sym.imp.__snprintf_chk
0x0000d395      5a             pop rdx
0x0000d396      59             pop rcx
0x0000d397      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000d39d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x0000d3a4      85c9           test ecx, ecx
0x0000d3a6      0f89c8feffff   jns 0xd274
0x0000d3ac      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x0000d3b3      807f0100       cmp byte [rdi + 1], 0
0x0000d3b7      0f853b030000   jne 0xd6f8
0x0000d3bd      85c0           test eax, eax
0x0000d3bf      0f89c9feffff   jns 0xd28e
0x0000d3c5      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000d3cc      8b18           mov ebx, dword [rax]
0x0000d3ce      85db           test ebx, ebx
0x0000d3d0      751e           jne 0xd3f0
0x0000d3d2      410fb64548     movzx eax, byte [r13 + 0x48]
0x0000d3d7      bb16000000     mov ebx, 0x16
0x0000d3dc      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000d3df      3c63           cmp al, 0x63
0x0000d3e1      b854000000     mov eax, 0x54                           ; 'T'
0x0000d3e6      0f44d8         cmove ebx, eax
0x0000d3e9      0f1f80000000.  nop dword [rax]
0x0000d3f0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d3f7      7409           je 0xd402
0x0000d3f9      4d85ff         test r15, r15
0x0000d3fc      0f85aa070000   jne 0xdbac
0x0000d402      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000d409      4885c0         test rax, rax
0x0000d40c      7408           je 0xd416
0x0000d40e      4889c7         mov rdi, rax
0x0000d411      e85a4cffff     call sym.imp.free
0x0000d416      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000d41d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000d424      4883c020       add rax, 0x20                           ; "@"
0x0000d428      4839c7         cmp rdi, rax
0x0000d42b      7405           je 0xd432
0x0000d42d      e83e4cffff     call sym.imp.free
0x0000d432      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000d439      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000d440      4883c010       add rax, 0x10
0x0000d444      4839c7         cmp rdi, rax
0x0000d447      7405           je 0xd44e
0x0000d449      e8224cffff     call sym.imp.free
0x0000d44e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000d455      4531ff         xor r15d, r15d
0x0000d458      8918           mov dword [rax], ebx
0x0000d45a      e920faffff     jmp 0xce7f
0x0000d45f      90             nop
0x0000d460      498b4550       mov rax, qword [r13 + 0x50]
0x0000d464      4b8d3c37       lea rdi, [r15 + r14]
0x0000d468      48c1e005       shl rax, 5
0x0000d46c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d473      db6810         fld xword [rax + 0x10]
0x0000d476      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d47c      83f801         cmp eax, 1
0x0000d47f      0f842b060000   je 0xdab0
0x0000d485      83f802         cmp eax, 2
0x0000d488      0f85c2040000   jne 0xd950
0x0000d48e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000d494      4883ec08       sub rsp, 8
0x0000d498      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x0000d49e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000d4a5      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d4ac      4c89d6         mov rsi, r10
0x0000d4af      4883ec18       sub rsp, 0x18
0x0000d4b3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d4ba      ba01000000     mov edx, 1
0x0000d4bf      db7c2408       fstp xword [rsp + 8]
0x0000d4c3      50             push rax
0x0000d4c4      31c0           xor eax, eax
0x0000d4c6      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x0000d4cd      e88e4bffff     call sym.imp.__snprintf_chk
0x0000d4d2      4883c430       add rsp, 0x30
0x0000d4d6      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000d4dd      e984fdffff     jmp 0xd266
0x0000d4e2      660f1f440000   nop word [rax + rax]
0x0000d4e8      498b4550       mov rax, qword [r13 + 0x50]
0x0000d4ec      4b8d3c37       lea rdi, [r15 + r14]
0x0000d4f0      48c1e005       shl rax, 5
0x0000d4f4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d4fb      f20f104010     movsd xmm0, qword [rax + 0x10]
0x0000d500      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d506      83f801         cmp eax, 1
0x0000d509      0f8491050000   je 0xdaa0
0x0000d50f      83f802         cmp eax, 2
0x0000d512      0f85f8030000   jne 0xd910
0x0000d518      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000d51e      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d524      50             push rax
0x0000d525      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000d52c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d533      4c89d6         mov rsi, r10
0x0000d536      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d53d      ba01000000     mov edx, 1
0x0000d542      b801000000     mov eax, 1
0x0000d547      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000d54e      e80d4bffff     call sym.imp.__snprintf_chk
0x0000d553      4158           pop r8
0x0000d555      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000d55c      4159           pop r9
0x0000d55e      e903fdffff     jmp 0xd266
0x0000d563      0f1f440000     nop dword [rax + rax]
0x0000d568      498b4550       mov rax, qword [r13 + 0x50]
0x0000d56c      4b8d3c37       lea rdi, [r15 + r14]
0x0000d570      48c1e005       shl rax, 5
0x0000d574      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d57b      440fb74810     movzx r9d, word [rax + 0x10]
0x0000d580      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d586      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x0000d589      0f85cffdffff   jne 0xd35e
0x0000d58f      90             nop
0x0000d590      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d596      4151           push r9
0x0000d598      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000d59f      e9cdfdffff     jmp 0xd371
0x0000d5a4      0f1f4000       nop dword [rax]
0x0000d5a8      498b4550       mov rax, qword [r13 + 0x50]
0x0000d5ac      4b8d3c37       lea rdi, [r15 + r14]
0x0000d5b0      48c1e005       shl rax, 5
0x0000d5b4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d5bb      440fbf4810     movsx r9d, word [rax + 0x10]
0x0000d5c0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d5c6      83f801         cmp eax, 1
0x0000d5c9      74c5           je 0xd590
0x0000d5cb      83f802         cmp eax, 2
0x0000d5ce      0f8593fdffff   jne 0xd367
0x0000d5d4      0f1f4000       nop dword [rax]
0x0000d5d8      4883ec08       sub rsp, 8
0x0000d5dc      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d5e2      4151           push r9
0x0000d5e4      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000d5ea      50             push rax
0x0000d5eb      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x0000d5f2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d5f9      4c89d6         mov rsi, r10
0x0000d5fc      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d603      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x0000d608      31c0           xor eax, eax
0x0000d60a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000d611      e84a4affff     call sym.imp.__snprintf_chk
0x0000d616      4883c420       add rsp, 0x20
0x0000d61a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000d621      e940fcffff     jmp 0xd266
0x0000d626      662e0f1f8400.  nop word cs:[rax + rax]
0x0000d630      498b4550       mov rax, qword [r13 + 0x50]
0x0000d634      4b8d3c37       lea rdi, [r15 + r14]
0x0000d638      48c1e005       shl rax, 5
0x0000d63c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d643      440fb64810     movzx r9d, byte [rax + 0x10]
0x0000d648      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d64e      83f801         cmp eax, 1
0x0000d651      0f8507fdffff   jne 0xd35e
0x0000d657      e934ffffff     jmp 0xd590
0x0000d65c      0f1f4000       nop dword [rax]
0x0000d660      498b4550       mov rax, qword [r13 + 0x50]
0x0000d664      4b8d3c37       lea rdi, [r15 + r14]
0x0000d668      48c1e005       shl rax, 5
0x0000d66c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000d673      440fbe4810     movsx r9d, byte [rax + 0x10]
0x0000d678      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000d67e      83f801         cmp eax, 1
0x0000d681      0f85d7fcffff   jne 0xd35e
0x0000d687      e904ffffff     jmp 0xd590
0x0000d68c      0f1f4000       nop dword [rax]
0x0000d690      4c89e7         mov rdi, r12
0x0000d693      e8284dffff     call sym.imp.malloc
0x0000d698      4885c0         test rax, rax
0x0000d69b      4889c1         mov rcx, rax
0x0000d69e      0f846df7ffff   je 0xce11
0x0000d6a4      4d85f6         test r14, r14
0x0000d6a7      0f84b3000000   je 0xd760
0x0000d6ad      84db           test bl, bl
0x0000d6af      0f84ab000000   je 0xd760
0x0000d6b5      4c89fe         mov rsi, r15
0x0000d6b8      4c89f2         mov rdx, r14
0x0000d6bb      4889c7         mov rdi, rax
0x0000d6be      e89d4cffff     call sym.imp.memcpy
0x0000d6c3      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x0000d6c6      e9e5faffff     jmp 0xd1b0
0x0000d6cb      0f1f440000     nop dword [rax + rax]
0x0000d6d0      4883ec08       sub rsp, 8
0x0000d6d4      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x0000d6da      4151           push r9
0x0000d6dc      e903ffffff     jmp 0xd5e4
0x0000d6e1      0f1f80000000.  nop dword [rax]
0x0000d6e8      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000d6ee      4151           push r9
0x0000d6f0      e9a3feffff     jmp 0xd598
0x0000d6f5      0f1f00         nop dword [rax]
0x0000d6f8      c6470100       mov byte [rdi + 1], 0
0x0000d6fc      e9affaffff     jmp 0xd1b0
0x0000d701      0f1f80000000.  nop dword [rax]
0x0000d708      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d70c      0f85b4040000   jne 0xdbc6
0x0000d712      4c89f0         mov rax, r14
0x0000d715      4883c001       add rax, 1
0x0000d719      4889c3         mov rbx, rax
0x0000d71c      0f8386000000   jae 0xd7a8
0x0000d722      4983fcff       cmp r12, 0xffffffffffffffff
0x0000d726      0f85d9f6ffff   jne 0xce05
0x0000d72c      4c89e3         mov rbx, r12
0x0000d72f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x0000d734      4d8b4508       mov r8, qword [r13 + 8]
0x0000d738      4983c558       add r13, 0x58
0x0000d73c      498b4d00       mov rcx, qword [r13]
0x0000d740      48838500fcff.  add qword [rbp - 0x400], 1
0x0000d748      4c39c1         cmp rcx, r8
0x0000d74b      0f8598f6ffff   jne 0xcde9
0x0000d751      4989de         mov r14, rbx
0x0000d754      e9faf7ffff     jmp 0xcf53                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x0000d759      0f1f80000000.  nop dword [rax]
0x0000d760      4989cf         mov r15, rcx
0x0000d763      e948faffff     jmp 0xd1b0                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x0000d768      e84349ffff     call sym.imp.__errno_location
0x0000d76d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000d774      e9bef6ffff     jmp 0xce37
0x0000d779      0f1f80000000.  nop dword [rax]
0x0000d780      89fa           mov edx, edi
0x0000d782      83ea12         sub edx, 0x12
0x0000d785      83fa04         cmp edx, 4
0x0000d788      0f8738040000   ja 0xdbc6
0x0000d78e      488d3d3b3500.  lea rdi, [0x00010cd0]
0x0000d795      488b4010       mov rax, qword [rax + 0x10]
0x0000d799      48631497       movsxd rdx, dword [rdi + rdx*4]
0x0000d79d      4801fa         add rdx, rdi
0x0000d7a0      ffe2           jmp rdx
0x0000d7a2      660f1f440000   nop word [rax + rax]
0x0000d7a8      4939c4         cmp r12, rax
0x0000d7ab      7382           jae 0xd72f
0x0000d7ad      4d85e4         test r12, r12
0x0000d7b0      0f85ca030000   jne 0xdb80
0x0000d7b6      4883f80c       cmp rax, 0xc
0x0000d7ba      0f87d2030000   ja 0xdb92
0x0000d7c0      41bc0c000000   mov r12d, 0xc
0x0000d7c6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d7cd      0f94c2         sete dl
0x0000d7d0      4d85ff         test r15, r15
0x0000d7d3      0f8467020000   je 0xda40
0x0000d7d9      84d2           test dl, dl
0x0000d7db      0f855f020000   jne 0xda40
0x0000d7e1      4c89e6         mov rsi, r12
0x0000d7e4      4c89ff         mov rdi, r15
0x0000d7e7      e8644cffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x0000d7ec      4885c0         test rax, rax
0x0000d7ef      0f84f6000000   je 0xd8eb
0x0000d7f5      4989c7         mov r15, rax
0x0000d7f8      e932ffffff     jmp 0xd72f
0x0000d7fd      0f1f00         nop dword [rax]
0x0000d800      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x0000d80a      e9e8f8ffff     jmp 0xd0f7
0x0000d80f      90             nop
0x0000d810      0f88eff5ffff   js 0xce05
0x0000d816      4d01e4         add r12, r12
0x0000d819      4939c4         cmp r12, rax
0x0000d81c      0f83d4f6ffff   jae 0xcef6
0x0000d822      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d826      0f84d9f5ffff   je 0xce05
0x0000d82c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d833      4989c4         mov r12, rax
0x0000d836      0f94c2         sete dl
0x0000d839      4d85ff         test r15, r15
0x0000d83c      0f85c7f6ffff   jne 0xcf09
0x0000d842      660f1f440000   nop word [rax + rax]
0x0000d848      4c89e7         mov rdi, r12
0x0000d84b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x0000d852      889530fcffff   mov byte [rbp - 0x3d0], dl
0x0000d858      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000d85f      e85c4bffff     call sym.imp.malloc
0x0000d864      4885c0         test rax, rax
0x0000d867      4989c1         mov r9, rax
0x0000d86a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000d871      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x0000d878      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x0000d87f      0f8480f5ffff   je 0xce05
0x0000d885      4885db         test rbx, rbx
0x0000d888      0f8402020000   je 0xda90
0x0000d88e      84d2           test dl, dl
0x0000d890      0f84fa010000   je 0xda90
0x0000d896      4c89fe         mov rsi, r15
0x0000d899      4889da         mov rdx, rbx
0x0000d89c      4889c7         mov rdi, rax
0x0000d89f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x0000d8a6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000d8ad      e8ae4affff     call sym.imp.memcpy
0x0000d8b2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x0000d8b9      4989c7         mov r15, rax
0x0000d8bc      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x0000d8c3      e97cf6ffff     jmp 0xcf44
0x0000d8c8      0f1f84000000.  nop dword [rax + rax]
0x0000d8d0      4d89e6         mov r14, r12
0x0000d8d3      e96cf6ffff     jmp 0xcf44
0x0000d8d8      0f1f84000000.  nop dword [rax + rax]
0x0000d8e0      4c8930         mov qword [rax], r14
0x0000d8e3      4c89f3         mov rbx, r14
0x0000d8e6      e949feffff     jmp 0xd734
0x0000d8eb      e8c047ffff     call sym.imp.__errno_location
0x0000d8f0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000d8f7      660f1f840000.  nop word [rax + rax]
0x0000d900      4c89ff         mov rdi, r15
0x0000d903      e86847ffff     call sym.imp.free
0x0000d908      e916f5ffff     jmp 0xce23
0x0000d90d      0f1f00         nop dword [rax]
0x0000d910      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000d917      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000d91e      4c89d6         mov rsi, r10
0x0000d921      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000d928      ba01000000     mov edx, 1
0x0000d92d      b801000000     mov eax, 1
0x0000d932      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000d939      e82247ffff     call sym.imp.__snprintf_chk
0x0000d93e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000d945      e91cf9ffff     jmp 0xd266
0x0000d94a      660f1f440000   nop word [rax + rax]
0x0000d950      4883ec10       sub rsp, 0x10
0x0000d954      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x0000d95b      db3c24         fstp xword [rsp]
0x0000d95e      e9d6f8ffff     jmp 0xd239
0x0000d963      0f1f440000     nop dword [rax + rax]
0x0000d968      0f8897f4ffff   js 0xce05
0x0000d96e      4d01e4         add r12, r12
0x0000d971      4939c4         cmp r12, rax
0x0000d974      0f83dff7ffff   jae 0xd159
0x0000d97a      660f1f440000   nop word [rax + rax]
0x0000d980      4885d2         test rdx, rdx
0x0000d983      0f857cf4ffff   jne 0xce05
0x0000d989      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000d98d      0f8472f4ffff   je 0xce05
0x0000d993      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000d99a      4989c4         mov r12, rax
0x0000d99d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x0000d9a0      4d85ff         test r15, r15
0x0000d9a3      0f85c3f7ffff   jne 0xd16c
0x0000d9a9      0f1f80000000.  nop dword [rax]
0x0000d9b0      4c89e7         mov rdi, r12
0x0000d9b3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x0000d9b9      e8024affff     call sym.imp.malloc
0x0000d9be      4885c0         test rax, rax
0x0000d9c1      4889c1         mov rcx, rax
0x0000d9c4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000d9cb      0f8434f4ffff   je 0xce05                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x0000d9d1      4d85f6         test r14, r14
0x0000d9d4      0f8496010000   je 0xdb70
0x0000d9da      84d2           test dl, dl
0x0000d9dc      0f848e010000   je 0xdb70
0x0000d9e2      4c89fe         mov rsi, r15
0x0000d9e5      4c89f2         mov rdx, r14
0x0000d9e8      4889c7         mov rdi, rax
0x0000d9eb      e87049ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x0000d9f0      4989c7         mov r15, rax
0x0000d9f3      e993f7ffff     jmp 0xd18b
0x0000d9f8      0f1f84000000.  nop dword [rax + rax]
0x0000da00      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x0000da03      4883c301       add rbx, 1
0x0000da07      e9aff6ffff     jmp 0xd0bb
0x0000da0c      0f1f4000       nop dword [rax]
0x0000da10      448830         mov byte [rax], r14b
0x0000da13      4c89f3         mov rbx, r14
0x0000da16      e919fdffff     jmp 0xd734
0x0000da1b      0f1f440000     nop dword [rax + rax]
0x0000da20      448930         mov dword [rax], r14d
0x0000da23      4c89f3         mov rbx, r14
0x0000da26      e909fdffff     jmp 0xd734
0x0000da2b      0f1f440000     nop dword [rax + rax]
0x0000da30      66448930       mov word [rax], r14w
0x0000da34      4c89f3         mov rbx, r14
0x0000da37      e9f8fcffff     jmp 0xd734
0x0000da3c      0f1f4000       nop dword [rax]
0x0000da40      4c89e7         mov rdi, r12
0x0000da43      889538fcffff   mov byte [rbp - 0x3c8], dl
0x0000da49      e87249ffff     call sym.imp.malloc
0x0000da4e      4885c0         test rax, rax
0x0000da51      4889c1         mov rcx, rax
0x0000da54      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000da5b      0f84a4f3ffff   je 0xce05                               ; stdio2.h:-339
0x0000da61      4d85f6         test r14, r14
0x0000da64      0f843a010000   je 0xdba4
0x0000da6a      84d2           test dl, dl
0x0000da6c      0f8432010000   je 0xdba4
0x0000da72      4c89fe         mov rsi, r15
0x0000da75      4c89f2         mov rdx, r14
0x0000da78      4889c7         mov rdi, rax
0x0000da7b      e8e048ffff     call sym.imp.memcpy
0x0000da80      4989c7         mov r15, rax
0x0000da83      e9a7fcffff     jmp 0xd72f
0x0000da88      0f1f84000000.  nop dword [rax + rax]
0x0000da90      4d89cf         mov r15, r9
0x0000da93      e9acf4ffff     jmp 0xcf44
0x0000da98      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x0000daa0      4883ec08       sub rsp, 8
0x0000daa4      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000daaa      e976faffff     jmp 0xd525
0x0000daaf      90             nop
0x0000dab0      4883ec08       sub rsp, 8
0x0000dab4      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000daba      4883ec10       sub rsp, 0x10
0x0000dabe      db3c24         fstp xword [rsp]
0x0000dac1      e925fbffff     jmp 0xd5eb
0x0000dac6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dad0      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000dad7      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000dadd      4863d9         movsxd rbx, ecx
0x0000dae0      4c01f3         add rbx, r14
0x0000dae3      8938           mov dword [rax], edi
0x0000dae5      e94afcffff     jmp 0xd734
0x0000daea      660f1f440000   nop word [rax + rax]
0x0000daf0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000daf7      7409           je 0xdb02
0x0000daf9      4d85ff         test r15, r15
0x0000dafc      0f85b7000000   jne 0xdbb9
0x0000db02      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000db09      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000db0c      7408           je 0xdb16
0x0000db0e      4889c7         mov rdi, rax
0x0000db11      e85a45ffff     call sym.imp.free
0x0000db16      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000db1d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000db24      4883c020       add rax, 0x20                           ; "@"
0x0000db28      4839c7         cmp rdi, rax
0x0000db2b      7405           je 0xdb32
0x0000db2d      e83e45ffff     call sym.imp.free
0x0000db32      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000db39      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000db40      4883c010       add rax, 0x10
0x0000db44      4839c7         cmp rdi, rax
0x0000db47      7405           je 0xdb4e
0x0000db49      e82245ffff     call sym.imp.free
0x0000db4e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000db55      4531ff         xor r15d, r15d
0x0000db58      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000db5e      e91cf3ffff     jmp 0xce7f
0x0000db63      0f1f440000     nop dword [rax + rax]
0x0000db68      4531ff         xor r15d, r15d
0x0000db6b      e90ff3ffff     jmp 0xce7f
0x0000db70      4989cf         mov r15, rcx
0x0000db73      e913f6ffff     jmp 0xd18b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x0000db78      0f1f84000000.  nop dword [rax + rax]
0x0000db80      0f887ff2ffff   js 0xce05
0x0000db86      4d01e4         add r12, r12
0x0000db89      4939c4         cmp r12, rax
0x0000db8c      0f8334fcffff   jae 0xd7c6
0x0000db92      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000db96      0f8469f2ffff   je 0xce05
0x0000db9c      4989c4         mov r12, rax
0x0000db9f      e922fcffff     jmp 0xd7c6
0x0000dba4      4989cf         mov r15, rcx
0x0000dba7      e983fbffff     jmp 0xd72f
0x0000dbac      4c89ff         mov rdi, r15
0x0000dbaf      e8bc44ffff     call sym.imp.free
0x0000dbb4      e949f8ffff     jmp 0xd402
0x0000dbb9      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000dbbc      e8af44ffff     call sym.imp.free
0x0000dbc1      e93cffffff     jmp 0xdb02
0x0000dbc6      e8d544ffff     call sym.imp.abort
0x0000dbcb      0f1f440000     nop dword [rax + rax]
0x0000dbd0      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000dbd7      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000dbde      4883c020       add rax, 0x20                           ; "@"
0x0000dbe2      4839c7         cmp rdi, rax
0x0000dbe5      7405           je 0xdbec
0x0000dbe7      e88444ffff     call sym.imp.free
0x0000dbec      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000dbf3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000dbfa      4883c010       add rax, 0x10
0x0000dbfe      4839c7         cmp rdi, rax
0x0000dc01      7405           je 0xdc08
0x0000dc03      e86844ffff     call sym.imp.free
0x0000dc08      e8a344ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000dc0d      4531ff         xor r15d, r15d
0x0000dc10      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3ba00000
0x0000dc16      e964f2ffff     jmp 0xce7f
0x0000dc1b      4c89f3         mov rbx, r14
0x0000dc1e      31c0           xor eax, eax
0x0000dc20      4883c301       add rbx, 1
0x0000dc24      0f8206010000   jb 0xdd30
0x0000dc2a      4939dc         cmp r12, rbx
0x0000dc2d      734d           jae 0xdc7c
0x0000dc2f      4d85e4         test r12, r12
0x0000dc32      0f8531010000   jne 0xdd69                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x0000dc38      4883fb0c       cmp rbx, 0xc
0x0000dc3c      0f870c010000   ja 0xdd4e
0x0000dc42      41bc0c000000   mov r12d, 0xc
0x0000dc48      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000dc4f      410f94c5       sete r13b
0x0000dc53      4d85ff         test r15, r15
0x0000dc56      0f84a0000000   je 0xdcfc
0x0000dc5c      4584ed         test r13b, r13b
0x0000dc5f      0f8597000000   jne 0xdcfc
0x0000dc65      4c89e6         mov rsi, r12
0x0000dc68      4c89ff         mov rdi, r15
0x0000dc6b      e8e047ffff     call sym.imp.realloc
0x0000dc70      4885c0         test rax, rax
0x0000dc73      0f8472fcffff   je 0xd8eb
0x0000dc79      4989c7         mov r15, rax
0x0000dc7c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000dc83      43c6043700     mov byte [r15 + r14], 0
0x0000dc88      7417           je 0xdca1
0x0000dc8a      4939dc         cmp r12, rbx
0x0000dc8d      7612           jbe 0xdca1
0x0000dc8f      4c89ff         mov rdi, r15
0x0000dc92      4889de         mov rsi, rbx
0x0000dc95      e8b647ffff     call sym.imp.realloc
0x0000dc9a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0000dc9d      4c0f45f8       cmovne r15, rax
0x0000dca1      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x0000dca8      4885c0         test rax, rax
0x0000dcab      7408           je 0xdcb5
0x0000dcad      4889c7         mov rdi, rax
0x0000dcb0      e8bb43ffff     call sym.imp.free
0x0000dcb5      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000dcbc      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000dcc3      4883c020       add rax, 0x20                           ; "@"
0x0000dcc7      4839c7         cmp rdi, rax
0x0000dcca      7405           je 0xdcd1
0x0000dccc      e89f43ffff     call sym.imp.free
0x0000dcd1      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000dcd8      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000dcdf      4883c010       add rax, 0x10
0x0000dce3      4839c7         cmp rdi, rax
0x0000dce6      7405           je 0xdced
0x0000dce8      e88343ffff     call sym.imp.free
0x0000dced      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x0000dcf4      4c8930         mov qword [rax], r14
0x0000dcf7      e983f1ffff     jmp 0xce7f
0x0000dcfc      4c89e7         mov rdi, r12
0x0000dcff      e8bc46ffff     call sym.imp.malloc
0x0000dd04      4885c0         test rax, rax
0x0000dd07      4889c1         mov rcx, rax
0x0000dd0a      0f84f5f0ffff   je 0xce05
0x0000dd10      4d85f6         test r14, r14
0x0000dd13      746b           je 0xdd80
0x0000dd15      4584ed         test r13b, r13b
0x0000dd18      7466           je 0xdd80
0x0000dd1a      4c89fe         mov rsi, r15
0x0000dd1d      4c89f2         mov rdx, r14
0x0000dd20      4889c7         mov rdi, rax
0x0000dd23      e83846ffff     call sym.imp.memcpy
0x0000dd28      4989c7         mov r15, rax
0x0000dd2b      e94cffffff     jmp 0xdc7c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x0000dd30      4983fcff       cmp r12, 0xffffffffffffffff
0x0000dd34      b801000000     mov eax, 1
0x0000dd39      0f843dffffff   je 0xdc7c
0x0000dd3f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x0000dd42      0f84bdf0ffff   je 0xce05
0x0000dd48      0f88b7f0ffff   js 0xce05
0x0000dd4e      4885c0         test rax, rax
0x0000dd51      0f85aef0ffff   jne 0xce05
0x0000dd57      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000dd5b      0f84a4f0ffff   je 0xce05
0x0000dd61      4989dc         mov r12, rbx
0x0000dd64      e9dffeffff     jmp 0xdc48
0x0000dd69      0f8896f0ffff   js 0xce05
0x0000dd6f      4d01e4         add r12, r12
0x0000dd72      4939dc         cmp r12, rbx
0x0000dd75      0f83cdfeffff   jae 0xdc48
0x0000dd7b      ebd1           jmp 0xdd4e
0x0000dd7d      0f1f00         nop dword [rax]
0x0000dd80      4989cf         mov r15, rcx
0x0000dd83      e9f4feffff     jmp 0xdc7c
0x0000dd88      4983fcff       cmp r12, 0xffffffffffffffff
0x0000dd8c      0f841ef4ffff   je 0xd1b0
0x0000dd92      e97af0ffff     jmp 0xce11
0x0000dd97      e85444ffff     call sym.imp.__stack_chk_fail
0x0000dd9c      4983fcff       cmp r12, 0xffffffffffffffff
0x0000dda0      ba01000000     mov edx, 1
0x0000dda5      0f84e0f3ffff   je 0xd18b
0x0000ddab      4d85e4         test r12, r12
0x0000ddae      0f8451f0ffff   je 0xce05
0x0000ddb4      0f89c6fbffff   jns 0xd980
0x0000ddba      e946f0ffff     jmp 0xce05
0x0000ddbf      90             nop
;-- dup_safer:
0x0000ddc0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x0000ddc5      31f6           xor esi, esi
0x0000ddc7      31c0           xor eax, eax
0x0000ddc9      e902000000     jmp sym.rpl_fcntl
0x0000ddce      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- rpl_fcntl:
0x0000ddd0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ddd2      55             push rbp
0x0000ddd3      89fd           mov ebp, edi
0x0000ddd5      53             push rbx
0x0000ddd6      4883ec50       sub rsp, 0x50
0x0000ddda      64488b042528.  mov rax, qword fs:[0x28]
0x0000dde3      4889442418     mov qword [rsp + 0x18], rax
0x0000dde8      31c0           xor eax, eax
0x0000ddea      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000ddef      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000ddf1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000ddf6      48894c2438     mov qword [rsp + 0x38], rcx
0x0000ddfb      4c89442440     mov qword [rsp + 0x40], r8
0x0000de00      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000de05      488d442420     lea rax, [rsp + 0x20]
0x0000de0a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000de0f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000de16      4889442410     mov qword [rsp + 0x10], rax
0x0000de1b      0f8401020000   je 0xe022                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000de21      81fe06040000   cmp esi, 0x406
0x0000de27      7547           jne 0xde70
0x0000de29      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000de2e      833d43672000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x214578:4]=0
0x0000de35      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x3ba0 rip
0x0000de3c      448b6010       mov r12d, dword [rax + 0x10]
0x0000de40      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000de43      0f882a010000   js 0xdf73                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000de49      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000de4b      be06040000     mov esi, 0x406
0x0000de50      e8fb42ffff     call sym.imp.fcntl
0x0000de55      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000de57      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000de59      0f8889010000   js 0xdfe8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000de5f      c7050f672000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x214578:4]=0
0x0000de69      eb45           jmp 0xdeb0
0x0000de6b      0f1f440000     nop dword [rax + rax]
0x0000de70      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000de73      742b           je 0xdea0
0x0000de75      7f59           jg 0xded0
0x0000de77      83fe04         cmp esi, 4
0x0000de7a      0f84d0000000   je 0xdf50
0x0000de80      0f8fba000000   jg 0xdf40
0x0000de86      83fe02         cmp esi, 2
0x0000de89      0f84c1000000   je 0xdf50
0x0000de8f      7f0f           jg 0xdea0
0x0000de91      83fe01         cmp esi, 1
0x0000de94      7562           jne 0xdef8
0x0000de96      662e0f1f8400.  nop word cs:[rax + rax]
0x0000dea0      89ef           mov edi, ebp
0x0000dea2      31c0           xor eax, eax
0x0000dea4      e8a742ffff     call sym.imp.fcntl
0x0000dea9      89c3           mov ebx, eax
0x0000deab      0f1f440000     nop dword [rax + rax]
0x0000deb0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000deb5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000debe      89d8           mov eax, ebx
0x0000dec0      0f8557010000   jne 0xe01d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000dec6      4883c450       add rsp, 0x50
0x0000deca      5b             pop rbx
0x0000decb      5d             pop rbp
0x0000decc      415c           pop r12
0x0000dece      c3             ret
0x0000decf      90             nop
0x0000ded0      81fe07040000   cmp esi, 0x407
0x0000ded6      7f48           jg 0xdf20
0x0000ded8      81fe06040000   cmp esi, 0x406
0x0000dede      7d70           jge 0xdf50
0x0000dee0      81fe01040000   cmp esi, 0x401
0x0000dee6      74b8           je 0xdea0
0x0000dee8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000deee      7460           je 0xdf50
0x0000def0      81fe00040000   cmp esi, 0x400
0x0000def6      7458           je 0xdf50
0x0000def8      8b0424         mov eax, dword [rsp]
0x0000defb      83f82f         cmp eax, 0x2f
0x0000defe      0f8736010000   ja 0xe03a
0x0000df04      4803442410     add rax, qword [rsp + 0x10]
0x0000df09      488b10         mov rdx, qword [rax]
0x0000df0c      89ef           mov edi, ebp
0x0000df0e      31c0           xor eax, eax
0x0000df10      e83b42ffff     call sym.imp.fcntl
0x0000df15      89c3           mov ebx, eax
0x0000df17      eb97           jmp 0xdeb0
0x0000df19      0f1f80000000.  nop dword [rax]
0x0000df20      81fe09040000   cmp esi, 0x409
0x0000df26      7428           je 0xdf50
0x0000df28      0f8c72ffffff   jl 0xdea0
0x0000df2e      81fe0a040000   cmp esi, 0x40a
0x0000df34      75c2           jne 0xdef8
0x0000df36      e965ffffff     jmp 0xdea0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000df3b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000df40      83fe09         cmp esi, 9
0x0000df43      0f8457ffffff   je 0xdea0
0x0000df49      7f05           jg 0xdf50
0x0000df4b      83fe08         cmp esi, 8
0x0000df4e      75a8           jne 0xdef8
0x0000df50      8b0424         mov eax, dword [rsp]
0x0000df53      83f82f         cmp eax, 0x2f
0x0000df56      0f87e8000000   ja 0xe044
0x0000df5c      4803442410     add rax, qword [rsp + 0x10]
0x0000df61      8b10           mov edx, dword [rax]
0x0000df63      89ef           mov edi, ebp
0x0000df65      31c0           xor eax, eax
0x0000df67      e8e441ffff     call sym.imp.fcntl
0x0000df6c      89c3           mov ebx, eax
0x0000df6e      e93dffffff     jmp 0xdeb0
0x0000df73      31f6           xor esi, esi
0x0000df75      31c0           xor eax, eax
0x0000df77      e8d441ffff     call sym.imp.fcntl
0x0000df7c      85c0           test eax, eax
0x0000df7e      89c3           mov ebx, eax
0x0000df80      0f882affffff   js 0xdeb0
0x0000df86      833deb652000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x214578:4]=0
0x0000df8d      0f851dffffff   jne 0xdeb0
0x0000df93      31c0           xor eax, eax
0x0000df95      be01000000     mov esi, 1
0x0000df9a      89df           mov edi, ebx
0x0000df9c      e8af41ffff     call sym.imp.fcntl
0x0000dfa1      85c0           test eax, eax
0x0000dfa3      781c           js 0xdfc1
0x0000dfa5      83c801         or eax, 1
0x0000dfa8      be02000000     mov esi, 2
0x0000dfad      89df           mov edi, ebx
0x0000dfaf      89c2           mov edx, eax
0x0000dfb1      31c0           xor eax, eax
0x0000dfb3      e89841ffff     call sym.imp.fcntl
0x0000dfb8      83f8ff         cmp eax, 0xffffffff
0x0000dfbb      0f85effeffff   jne 0xdeb0
0x0000dfc1      e8ea40ffff     call sym.imp.__errno_location
0x0000dfc6      448b20         mov r12d, dword [rax]
0x0000dfc9      4889c5         mov rbp, rax
0x0000dfcc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000dfce      e8fd42ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000dfd3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000dfd8      44896500       mov dword [rbp], r12d
0x0000dfdc      e9cffeffff     jmp 0xdeb0
0x0000dfe1      0f1f80000000.  nop dword [rax]
0x0000dfe8      e8c340ffff     call sym.imp.__errno_location
0x0000dfed      833816         cmp dword [rax], 0x16
0x0000dff0      0f8569feffff   jne 0xde5f
0x0000dff6      31f6           xor esi, esi
0x0000dff8      31c0           xor eax, eax
0x0000dffa      4489e2         mov edx, r12d
0x0000dffd      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000dfff      e84c41ffff     call sym.imp.fcntl
0x0000e004      85c0           test eax, eax
0x0000e006      89c3           mov ebx, eax
0x0000e008      0f88a2feffff   js 0xdeb0
0x0000e00e      c70560652000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x214578:4]=0
0x0000e018      e976ffffff     jmp 0xdf93
0x0000e01d      e8ce41ffff     call sym.imp.__stack_chk_fail
0x0000e022      488b442410     mov rax, qword [rsp + 0x10]
0x0000e027      31f6           xor esi, esi
0x0000e029      8b5010         mov edx, dword [rax + 0x10]
0x0000e02c      31c0           xor eax, eax
0x0000e02e      e81d41ffff     call sym.imp.fcntl
0x0000e033      89c3           mov ebx, eax
0x0000e035      e976feffff     jmp 0xdeb0
0x0000e03a      488b442408     mov rax, qword [rsp + 8]
0x0000e03f      e9c5feffff     jmp 0xdf09
0x0000e044      488b442408     mov rax, qword [rsp + 8]
0x0000e049      e913ffffff     jmp 0xdf61
0x0000e04e      6690           nop
;-- printf_fetchargs:
0x0000e050      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x0000e054      488b4608       mov rax, qword [rsi + 8]
0x0000e058      7463           je 0xe0bd
0x0000e05a      4c8d058f2c00.  lea r8, [0x00010cf0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x0000e061      4c8d15e82c00.  lea r10, obj.wide_null_string.2696      ; 0x10d50 ; U"(NULL)"
0x0000e068      4c8d0d752c00.  lea r9, [0x00010ce4]                    ; "(NULL)"
0x0000e06f      31c9           xor ecx, ecx
0x0000e071      0f1f80000000.  nop dword [rax]
0x0000e078      833816         cmp dword [rax], 0x16
0x0000e07b      7743           ja 0xe0c0
0x0000e07d      8b10           mov edx, dword [rax]
0x0000e07f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x0000e083      4c01c2         add rdx, r8
0x0000e086      ffe2           jmp rdx
0x0000e088      0f1f84000000.  nop dword [rax + rax]
0x0000e090      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x0000e094      4883c20f       add rdx, 0xf
0x0000e098      4883e2f0       and rdx, 0xfffffffffffffff0
0x0000e09c      4c8d5a10       lea r11, [rdx + 0x10]
0x0000e0a0      4c895f08       mov qword [rdi + 8], r11
0x0000e0a4      db2a           fld xword [rdx]
0x0000e0a6      db7810         fstp xword [rax + 0x10]
0x0000e0a9      0f1f80000000.  nop dword [rax]
0x0000e0b0      4883c101       add rcx, 1
0x0000e0b4      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x0000e0b8      48390e         cmp qword [rsi], rcx
0x0000e0bb      77bb           ja 0xe078
0x0000e0bd      31c0           xor eax, eax
0x0000e0bf      c3             ret
0x0000e0c0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000e0c5      c3             ret
0x0000e0c6      448b1f         mov r11d, dword [rdi]
0x0000e0c9      4183fb2f       cmp r11d, 0x2f
0x0000e0cd      0f8737010000   ja 0xe20a
0x0000e0d3      4489da         mov edx, r11d
0x0000e0d6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x0000e0da      4183c308       add r11d, 8
0x0000e0de      44891f         mov dword [rdi], r11d
0x0000e0e1      488b12         mov rdx, qword [rdx]
0x0000e0e4      48895010       mov qword [rax + 0x10], rdx
0x0000e0e8      ebc6           jmp 0xe0b0
0x0000e0ea      448b1f         mov r11d, dword [rdi]
0x0000e0ed      4183fb2f       cmp r11d, 0x2f
0x0000e0f1      0f8735010000   ja 0xe22c
0x0000e0f7      4489da         mov edx, r11d
0x0000e0fa      48035710       add rdx, qword [rdi + 0x10]
0x0000e0fe      4183c308       add r11d, 8
0x0000e102      44891f         mov dword [rdi], r11d
0x0000e105      8b12           mov edx, dword [rdx]
0x0000e107      895010         mov dword [rax + 0x10], edx
0x0000e10a      eba4           jmp 0xe0b0
0x0000e10c      448b1f         mov r11d, dword [rdi]
0x0000e10f      4183fb2f       cmp r11d, 0x2f
0x0000e113      0f8702010000   ja 0xe21b
0x0000e119      4489da         mov edx, r11d                           ; stddef.h:-47
0x0000e11c      48035710       add rdx, qword [rdi + 0x10]
0x0000e120      4183c308       add r11d, 8
0x0000e124      44891f         mov dword [rdi], r11d
0x0000e127      8b12           mov edx, dword [rdx]
0x0000e129      885010         mov byte [rax + 0x10], dl
0x0000e12c      eb82           jmp 0xe0b0
0x0000e12e      448b1f         mov r11d, dword [rdi]
0x0000e131      4183fb2f       cmp r11d, 0x2f
0x0000e135      0f879f000000   ja 0xe1da
0x0000e13b      4489da         mov edx, r11d
0x0000e13e      48035710       add rdx, qword [rdi + 0x10]
0x0000e142      4183c308       add r11d, 8
0x0000e146      44891f         mov dword [rdi], r11d
0x0000e149      8b12           mov edx, dword [rdx]
0x0000e14b      66895010       mov word [rax + 0x10], dx
0x0000e14f      e95cffffff     jmp 0xe0b0
0x0000e154      448b1f         mov r11d, dword [rdi]
0x0000e157      4183fb2f       cmp r11d, 0x2f
0x0000e15b      0f878a000000   ja 0xe1eb
0x0000e161      4489da         mov edx, r11d
0x0000e164      48035710       add rdx, qword [rdi + 0x10]
0x0000e168      4183c308       add r11d, 8
0x0000e16c      44891f         mov dword [rdi], r11d
0x0000e16f      488b12         mov rdx, qword [rdx]
0x0000e172      4885d2         test rdx, rdx
0x0000e175      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x0000e179      48895010       mov qword [rax + 0x10], rdx
0x0000e17d      e92effffff     jmp 0xe0b0
0x0000e182      448b5f04       mov r11d, dword [rdi + 4]
0x0000e186      4181fbaf0000.  cmp r11d, 0xaf
0x0000e18d      0f87aa000000   ja 0xe23d
0x0000e193      4489da         mov edx, r11d
0x0000e196      48035710       add rdx, qword [rdi + 0x10]
0x0000e19a      4183c310       add r11d, 0x10
0x0000e19e      44895f04       mov dword [rdi + 4], r11d
0x0000e1a2      f20f1002       movsd xmm0, qword [rdx]
0x0000e1a6      f20f114010     movsd qword [rax + 0x10], xmm0
0x0000e1ab      e900ffffff     jmp 0xe0b0
0x0000e1b0      448b1f         mov r11d, dword [rdi]
0x0000e1b3      4183fb2f       cmp r11d, 0x2f
0x0000e1b7      7743           ja 0xe1fc
0x0000e1b9      4489da         mov edx, r11d
0x0000e1bc      48035710       add rdx, qword [rdi + 0x10]
0x0000e1c0      4183c308       add r11d, 8
0x0000e1c4      44891f         mov dword [rdi], r11d
0x0000e1c7      488b12         mov rdx, qword [rdx]
0x0000e1ca      4885d2         test rdx, rdx
0x0000e1cd      490f44d2       cmove rdx, r10
0x0000e1d1      48895010       mov qword [rax + 0x10], rdx
0x0000e1d5      e9d6feffff     jmp 0xe0b0
0x0000e1da      488b5708       mov rdx, qword [rdi + 8]
0x0000e1de      4c8d5a08       lea r11, [rdx + 8]
0x0000e1e2      4c895f08       mov qword [rdi + 8], r11
0x0000e1e6      e95effffff     jmp 0xe149
0x0000e1eb      488b5708       mov rdx, qword [rdi + 8]
0x0000e1ef      4c8d5a08       lea r11, [rdx + 8]
0x0000e1f3      4c895f08       mov qword [rdi + 8], r11
0x0000e1f7      e973ffffff     jmp 0xe16f
0x0000e1fc      488b5708       mov rdx, qword [rdi + 8]
0x0000e200      4c8d5a08       lea r11, [rdx + 8]
0x0000e204      4c895f08       mov qword [rdi + 8], r11
0x0000e208      ebbd           jmp 0xe1c7
0x0000e20a      488b5708       mov rdx, qword [rdi + 8]
0x0000e20e      4c8d5a08       lea r11, [rdx + 8]
0x0000e212      4c895f08       mov qword [rdi + 8], r11
0x0000e216      e9c6feffff     jmp 0xe0e1
0x0000e21b      488b5708       mov rdx, qword [rdi + 8]
0x0000e21f      4c8d5a08       lea r11, [rdx + 8]
0x0000e223      4c895f08       mov qword [rdi + 8], r11
0x0000e227      e9fbfeffff     jmp 0xe127
0x0000e22c      488b5708       mov rdx, qword [rdi + 8]
0x0000e230      4c8d5a08       lea r11, [rdx + 8]
0x0000e234      4c895f08       mov qword [rdi + 8], r11
0x0000e238      e9c8feffff     jmp 0xe105
0x0000e23d      488b5708       mov rdx, qword [rdi + 8]
0x0000e241      4c8d5a08       lea r11, [rdx + 8]
0x0000e245      4c895f08       mov qword [rdi + 8], r11
0x0000e249      e954ffffff     jmp 0xe1a2
0x0000e24e      6690           nop
;-- printf_parse:
0x0000e250      4157           push r15
0x0000e252      4156           push r14
0x0000e254      488d4e20       lea rcx, [rsi + 0x20]
0x0000e258      4155           push r13
0x0000e25a      4154           push r12
0x0000e25c      488d4210       lea rax, [rdx + 0x10]
0x0000e260      55             push rbp
0x0000e261      53             push rbx
0x0000e262      4989f6         mov r14, rsi
0x0000e265      4989d7         mov r15, rdx
0x0000e268      31db           xor ebx, ebx
0x0000e26a      41b907000000   mov r9d, 7
0x0000e270      4883ec58       sub rsp, 0x58
0x0000e274      41ba07000000   mov r10d, 7
0x0000e27a      48c706000000.  mov qword [rsi], 0
0x0000e281      48894e08       mov qword [rsi + 8], rcx
0x0000e285      48894c2428     mov qword [rsp + 0x28], rcx
0x0000e28a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000e291      48c702000000.  mov qword [rdx], 0
0x0000e298      4889442408     mov qword [rsp + 8], rax
0x0000e29d      48894208       mov qword [rdx + 8], rax
0x0000e2a1      48c744241800.  mov qword [rsp + 0x18], 0
0x0000e2aa      48c744241000.  mov qword [rsp + 0x10], 0
0x0000e2b3      48c744242000.  mov qword [rsp + 0x20], 0
0x0000e2bc      eb0d           jmp 0xe2cb
0x0000e2be      6690           nop
0x0000e2c0      3c25           cmp al, 0x25
0x0000e2c2      488d6f01       lea rbp, [rdi + 1]
0x0000e2c6      7440           je 0xe308
0x0000e2c8      4889ef         mov rdi, rbp
0x0000e2cb      0fb607         movzx eax, byte [rdi]
0x0000e2ce      84c0           test al, al
0x0000e2d0      75ee           jne 0xe2c0
0x0000e2d2      488d049b       lea rax, [rbx + rbx*4]
0x0000e2d6      488d0443       lea rax, [rbx + rax*2]
0x0000e2da      48893cc1       mov qword [rcx + rax*8], rdi
0x0000e2de      488b442410     mov rax, qword [rsp + 0x10]
0x0000e2e3      49894610       mov qword [r14 + 0x10], rax
0x0000e2e7      488b442418     mov rax, qword [rsp + 0x18]
0x0000e2ec      49894618       mov qword [r14 + 0x18], rax
0x0000e2f0      31c0           xor eax, eax
0x0000e2f2      4883c458       add rsp, 0x58
0x0000e2f6      5b             pop rbx
0x0000e2f7      5d             pop rbp
0x0000e2f8      415c           pop r12
0x0000e2fa      415d           pop r13
0x0000e2fc      415e           pop r14
0x0000e2fe      415f           pop r15
0x0000e300      c3             ret
0x0000e301      0f1f80000000.  nop dword [rax]
0x0000e308      488d049b       lea rax, [rbx + rbx*4]
0x0000e30c      4d89c5         mov r13, r8
0x0000e30f      488d0443       lea rax, [rbx + rax*2]
0x0000e313      4c8d24c1       lea r12, [rcx + rax*8]
0x0000e317      49893c24       mov qword [r12], rdi
0x0000e31b      41c744241000.  mov dword [r12 + 0x10], 0
0x0000e324      49c744241800.  mov qword [r12 + 0x18], 0
0x0000e32d      49c744242000.  mov qword [r12 + 0x20], 0
0x0000e336      4d89442428     mov qword [r12 + 0x28], r8
0x0000e33b      49c744243000.  mov qword [r12 + 0x30], 0
0x0000e344      49c744243800.  mov qword [r12 + 0x38], 0
0x0000e34d      4d89442440     mov qword [r12 + 0x40], r8
0x0000e352      4d89442450     mov qword [r12 + 0x50], r8
0x0000e357      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000e35b      8d43d0         lea eax, [rbx - 0x30]
0x0000e35e      3c09           cmp al, 9
0x0000e360      773c           ja 0xe39e
0x0000e362      e933040000     jmp 0xe79a
0x0000e367      660f1f840000.  nop word [rax + rax]
0x0000e370      80fb2d         cmp bl, 0x2d
0x0000e373      7443           je 0xe3b8
0x0000e375      80fb2b         cmp bl, 0x2b
0x0000e378      7446           je 0xe3c0
0x0000e37a      80fb20         cmp bl, 0x20                            ; "@"
0x0000e37d      7451           je 0xe3d0
0x0000e37f      80fb23         cmp bl, 0x23
0x0000e382      745c           je 0xe3e0
0x0000e384      80fb30         cmp bl, 0x30
0x0000e387      7467           je 0xe3f0
0x0000e389      80fb49         cmp bl, 0x49
0x0000e38c      7572           jne 0xe400
0x0000e38e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x0000e394      0f1f4000       nop dword [rax]
0x0000e398      0fb618         movzx ebx, byte [rax]
0x0000e39b      4889c5         mov rbp, rax
0x0000e39e      488d4501       lea rax, [rbp + 1]
0x0000e3a2      80fb27         cmp bl, 0x27
0x0000e3a5      4889c2         mov rdx, rax
0x0000e3a8      75c6           jne 0xe370
0x0000e3aa      41834c241001   or dword [r12 + 0x10], 1
0x0000e3b0      ebe6           jmp 0xe398
0x0000e3b2      660f1f440000   nop word [rax + rax]
0x0000e3b8      41834c241002   or dword [r12 + 0x10], 2
0x0000e3be      ebd8           jmp 0xe398
0x0000e3c0      41834c241004   or dword [r12 + 0x10], 4
0x0000e3c6      ebd0           jmp 0xe398
0x0000e3c8      0f1f84000000.  nop dword [rax + rax]
0x0000e3d0      41834c241008   or dword [r12 + 0x10], 8
0x0000e3d6      ebc0           jmp 0xe398
0x0000e3d8      0f1f84000000.  nop dword [rax + rax]
0x0000e3e0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x0000e3e6      ebb0           jmp 0xe398
0x0000e3e8      0f1f84000000.  nop dword [rax + rax]
0x0000e3f0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x0000e3f6      eba0           jmp 0xe398
0x0000e3f8      0f1f84000000.  nop dword [rax + rax]
0x0000e400      80fb2a         cmp bl, 0x2a
0x0000e403      0f84b0010000   je 0xe5b9
0x0000e409      8d4bd0         lea ecx, [rbx - 0x30]
0x0000e40c      80f909         cmp cl, 9
0x0000e40f      0f8612040000   jbe 0xe827
0x0000e415      80fb2e         cmp bl, 0x2e
0x0000e418      0f84d1020000   je 0xe6ef
0x0000e41e      31c0           xor eax, eax
0x0000e420      be01000000     mov esi, 1
0x0000e425      eb30           jmp 0xe457
0x0000e427      660f1f840000.  nop word [rax + rax]
0x0000e430      80fb4c         cmp bl, 0x4c
0x0000e433      743b           je 0xe470
0x0000e435      80fb6c         cmp bl, 0x6c
0x0000e438      7416           je 0xe450
0x0000e43a      80fb6a         cmp bl, 0x6a
0x0000e43d      7411           je 0xe450
0x0000e43f      89da           mov edx, ebx
0x0000e441      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x0000e444      80fa5a         cmp dl, 0x5a
0x0000e447      7407           je 0xe450
0x0000e449      80fb74         cmp bl, 0x74
0x0000e44c      752a           jne 0xe478
0x0000e44e      6690           nop
0x0000e450      83c008         add eax, 8
0x0000e453      0fb65d00       movzx ebx, byte [rbp]
0x0000e457      4883c501       add rbp, 1
0x0000e45b      80fb68         cmp bl, 0x68
0x0000e45e      75d0           jne 0xe430
0x0000e460      89c1           mov ecx, eax
0x0000e462      89f2           mov edx, esi
0x0000e464      83e101         and ecx, 1
0x0000e467      d3e2           shl edx, cl
0x0000e469      09d0           or eax, edx
0x0000e46b      ebe6           jmp 0xe453
0x0000e46d      0f1f00         nop dword [rax]
0x0000e470      83c804         or eax, 4
0x0000e473      ebde           jmp 0xe453
0x0000e475      0f1f00         nop dword [rax]
0x0000e478      8d53db         lea edx, [rbx - 0x25]
0x0000e47b      80fa53         cmp dl, 0x53
0x0000e47e      0f8717060000   ja 0xea9b
0x0000e484      488d0de12800.  lea rcx, [0x00010d6c]
0x0000e48b      0fb6d2         movzx edx, dl
0x0000e48e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x0000e492      4801ca         add rdx, rcx
0x0000e495      ffe2           jmp rdx
0x0000e497      41bb10000000   mov r11d, 0x10
0x0000e49d      bb73000000     mov ebx, 0x73                           ; 's'
0x0000e4a2      660f1f440000   nop word [rax + rax]
0x0000e4a8      4983fdff       cmp r13, 0xffffffffffffffff
0x0000e4ac      0f84b5060000   je 0xeb67
0x0000e4b2      4d896c2450     mov qword [r12 + 0x50], r13
0x0000e4b7      4d39e9         cmp r9, r13
0x0000e4ba      498b4f08       mov rcx, qword [r15 + 8]
0x0000e4be      0f861c060000   jbe 0xeae0
0x0000e4c4      498b07         mov rax, qword [r15]
0x0000e4c7      4889c2         mov rdx, rax
0x0000e4ca      48c1e205       shl rdx, 5
0x0000e4ce      4801ca         add rdx, rcx
0x0000e4d1      4c39e8         cmp rax, r13
0x0000e4d4      7720           ja 0xe4f6
0x0000e4d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e4e0      4883c001       add rax, 1
0x0000e4e4      c70200000000   mov dword [rdx], 0
0x0000e4ea      4883c220       add rdx, 0x20                           ; "@"
0x0000e4ee      4c39e8         cmp rax, r13
0x0000e4f1      76ed           jbe 0xe4e0
0x0000e4f3      498907         mov qword [r15], rax
0x0000e4f6      49c1e505       shl r13, 5
0x0000e4fa      4a8d0429       lea rax, [rcx + r13]
0x0000e4fe      8b10           mov edx, dword [rax]
0x0000e500      85d2           test edx, edx
0x0000e502      0f85cb050000   jne 0xead3
0x0000e508      448918         mov dword [rax], r11d
0x0000e50b      41885c2448     mov byte [r12 + 0x48], bl
0x0000e510      498b06         mov rax, qword [r14]
0x0000e513      49896c2408     mov qword [r12 + 8], rbp
0x0000e518      488d5801       lea rbx, [rax + 1]
0x0000e51c      4939da         cmp r10, rbx
0x0000e51f      49891e         mov qword [r14], rbx
0x0000e522      0f8788000000   ja 0xe5b0
0x0000e528      4d85d2         test r10, r10
0x0000e52b      0f88a6090000   js 0xeed7
0x0000e531      4d01d2         add r10, r10
0x0000e534      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000e53e      4939c2         cmp r10, rax
0x0000e541      0f8790090000   ja 0xeed7
0x0000e547      4b8d0492       lea rax, [r10 + r10*4]
0x0000e54b      498b7e08       mov rdi, qword [r14 + 8]
0x0000e54f      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000e554      4c894c2440     mov qword [rsp + 0x40], r9
0x0000e559      4c89542438     mov qword [rsp + 0x38], r10
0x0000e55e      498d0442       lea rax, [r10 + rax*2]
0x0000e562      4c89442430     mov qword [rsp + 0x30], r8
0x0000e567      488d34c50000.  lea rsi, [rax*8]
0x0000e56f      0f84b8060000   je 0xec2d
0x0000e575      e8d63effff     call sym.imp.realloc
0x0000e57a      4885c0         test rax, rax
0x0000e57d      4889c1         mov rcx, rax
0x0000e580      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000e585      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000e58a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000e58f      0f8442090000   je 0xeed7
0x0000e595      488b442428     mov rax, qword [rsp + 0x28]
0x0000e59a      493b4608       cmp rax, qword [r14 + 8]
0x0000e59e      498b1e         mov rbx, qword [r14]
0x0000e5a1      0f84a9060000   je 0xec50
0x0000e5a7      49894e08       mov qword [r14 + 8], rcx
0x0000e5ab      e918fdffff     jmp 0xe2c8
0x0000e5b0      498b4e08       mov rcx, qword [r14 + 8]
0x0000e5b4      e90ffdffff     jmp 0xe2c8
0x0000e5b9      488b742410     mov rsi, qword [rsp + 0x10]
0x0000e5be      b901000000     mov ecx, 1
0x0000e5c3      49896c2418     mov qword [r12 + 0x18], rbp
0x0000e5c8      4989442420     mov qword [r12 + 0x20], rax
0x0000e5cd      4885f6         test rsi, rsi
0x0000e5d0      480f45ce       cmovne rcx, rsi
0x0000e5d4      48894c2410     mov qword [rsp + 0x10], rcx
0x0000e5d9      0fb64d01       movzx ecx, byte [rbp + 1]
0x0000e5dd      8d71d0         lea esi, [rcx - 0x30]
0x0000e5e0      4080fe09       cmp sil, 9
0x0000e5e4      0f86db020000   jbe 0xe8c5
0x0000e5ea      488b742420     mov rsi, qword [rsp + 0x20]
0x0000e5ef      4883feff       cmp rsi, 0xffffffffffffffff
0x0000e5f3      488d5601       lea rdx, [rsi + 1]
0x0000e5f7      4989742428     mov qword [r12 + 0x28], rsi
0x0000e5fc      0f8499040000   je 0xea9b
0x0000e602      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000e607      4889c5         mov rbp, rax
0x0000e60a      4889542420     mov qword [rsp + 0x20], rdx
0x0000e60f      4939d9         cmp r9, rbx
0x0000e612      498b4f08       mov rcx, qword [r15 + 8]
0x0000e616      0f8776060000   ja 0xec92
0x0000e61c      4d01c9         add r9, r9
0x0000e61f      488d4301       lea rax, [rbx + 1]
0x0000e623      4939d9         cmp r9, rbx
0x0000e626      4c0f46c8       cmovbe r9, rax
0x0000e62a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000e634      4939c1         cmp r9, rax
0x0000e637      0f879e080000   ja 0xeedb
0x0000e63d      4c89ce         mov rsi, r9
0x0000e640      4c894c2440     mov qword [rsp + 0x40], r9
0x0000e645      4c89542438     mov qword [rsp + 0x38], r10
0x0000e64a      48c1e605       shl rsi, 5
0x0000e64e      48394c2408     cmp qword [rsp + 8], rcx
0x0000e653      4c89442430     mov qword [rsp + 0x30], r8
0x0000e658      0f8413070000   je 0xed71
0x0000e65e      4889cf         mov rdi, rcx
0x0000e661      e8ea3dffff     call sym.imp.realloc
0x0000e666      498b5708       mov rdx, qword [r15 + 8]
0x0000e66a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000e66f      4889c1         mov rcx, rax
0x0000e672      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000e677      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000e67c      4885c9         test rcx, rcx
0x0000e67f      0f84b2080000   je 0xef37
0x0000e685      4839542408     cmp qword [rsp + 8], rdx
0x0000e68a      498b07         mov rax, qword [r15]
0x0000e68d      0f84b8070000   je 0xee4b
0x0000e693      49894f08       mov qword [r15 + 8], rcx
0x0000e697      4889c2         mov rdx, rax
0x0000e69a      48c1e205       shl rdx, 5
0x0000e69e      4801ca         add rdx, rcx
0x0000e6a1      4839d8         cmp rax, rbx
0x0000e6a4      7720           ja 0xe6c6
0x0000e6a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000e6b0      4883c001       add rax, 1
0x0000e6b4      c70200000000   mov dword [rdx], 0
0x0000e6ba      4883c220       add rdx, 0x20                           ; "@"
0x0000e6be      4839d8         cmp rax, rbx
0x0000e6c1      76ed           jbe 0xe6b0
0x0000e6c3      498907         mov qword [r15], rax
0x0000e6c6      48c1e305       shl rbx, 5
0x0000e6ca      488d0419       lea rax, [rcx + rbx]
0x0000e6ce      8b10           mov edx, dword [rax]
0x0000e6d0      85d2           test edx, edx
0x0000e6d2      0f85d3040000   jne 0xebab
0x0000e6d8      c70005000000   mov dword [rax], 5
0x0000e6de      0fb65d00       movzx ebx, byte [rbp]
0x0000e6e2      488d5501       lea rdx, [rbp + 1]
0x0000e6e6      80fb2e         cmp bl, 0x2e
0x0000e6e9      0f852ffdffff   jne 0xe41e
0x0000e6ef      807d012a       cmp byte [rbp + 1], 0x2a
0x0000e6f3      49896c2430     mov qword [r12 + 0x30], rbp
0x0000e6f8      0f8580010000   jne 0xe87e
0x0000e6fe      488b742418     mov rsi, qword [rsp + 0x18]
0x0000e703      4c8d5d02       lea r11, [rbp + 2]
0x0000e707      b802000000     mov eax, 2
0x0000e70c      4d895c2438     mov qword [r12 + 0x38], r11
0x0000e711      4883fe02       cmp rsi, 2
0x0000e715      480f43c6       cmovae rax, rsi
0x0000e719      4889442418     mov qword [rsp + 0x18], rax
0x0000e71e      0fbe4502       movsx eax, byte [rbp + 2]
0x0000e722      8d50d0         lea edx, [rax - 0x30]
0x0000e725      80fa09         cmp dl, 9
0x0000e728      0f868e060000   jbe 0xedbc
0x0000e72e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x0000e733      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000e737      0f8458060000   je 0xed95
0x0000e73d      4939d9         cmp r9, rbx
0x0000e740      498b4f08       mov rcx, qword [r15 + 8]
0x0000e744      0f8665050000   jbe 0xecaf
0x0000e74a      498b07         mov rax, qword [r15]
0x0000e74d      4889c2         mov rdx, rax
0x0000e750      48c1e205       shl rdx, 5
0x0000e754      4801ca         add rdx, rcx
0x0000e757      4839d8         cmp rax, rbx
0x0000e75a      771a           ja 0xe776
0x0000e75c      0f1f4000       nop dword [rax]
0x0000e760      4883c001       add rax, 1
0x0000e764      c70200000000   mov dword [rdx], 0
0x0000e76a      4883c220       add rdx, 0x20                           ; "@"
0x0000e76e      4839d8         cmp rax, rbx
0x0000e771      76ed           jbe 0xe760
0x0000e773      498907         mov qword [r15], rax
0x0000e776      48c1e305       shl rbx, 5
0x0000e77a      488d0419       lea rax, [rcx + rbx]
0x0000e77e      8b10           mov edx, dword [rax]
0x0000e780      85d2           test edx, edx
0x0000e782      0f8512050000   jne 0xec9a
0x0000e788      c70005000000   mov dword [rax], 5
0x0000e78e      4c89dd         mov rbp, r11
0x0000e791      410fb61b       movzx ebx, byte [r11]
0x0000e795      e984fcffff     jmp 0xe41e
0x0000e79a      4889e8         mov rax, rbp
0x0000e79d      0f1f00         nop dword [rax]
0x0000e7a0      4883c001       add rax, 1
0x0000e7a4      0fb610         movzx edx, byte [rax]
0x0000e7a7      8d4ad0         lea ecx, [rdx - 0x30]
0x0000e7aa      80f909         cmp cl, 9
0x0000e7ad      76f1           jbe 0xe7a0
0x0000e7af      80fa24         cmp dl, 0x24
0x0000e7b2      4d89c5         mov r13, r8
0x0000e7b5      0f85e3fbffff   jne 0xe39e
0x0000e7bb      31d2           xor edx, edx
0x0000e7bd      0fbec3         movsx eax, bl
0x0000e7c0      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000e7ca      4c89c6         mov rsi, r8
0x0000e7cd      83e830         sub eax, 0x30
0x0000e7d0      4839fa         cmp rdx, rdi
0x0000e7d3      4898           cdqe
0x0000e7d5      7707           ja 0xe7de
0x0000e7d7      488d3492       lea rsi, [rdx + rdx*4]
0x0000e7db      4801f6         add rsi, rsi
0x0000e7de      4889e9         mov rcx, rbp
0x0000e7e1      4801f0         add rax, rsi
0x0000e7e4      0fb65d01       movzx ebx, byte [rbp + 1]
0x0000e7e8      400f92c6       setb sil
0x0000e7ec      4883c501       add rbp, 1
0x0000e7f0      4889c2         mov rdx, rax
0x0000e7f3      400fb6f6       movzx esi, sil
0x0000e7f7      4885f6         test rsi, rsi
0x0000e7fa      8d7bd0         lea edi, [rbx - 0x30]
0x0000e7fd      0f858b030000   jne 0xeb8e
0x0000e803      4080ff09       cmp dil, 9
0x0000e807      76b4           jbe 0xe7bd
0x0000e809      4989c5         mov r13, rax
0x0000e80c      4983ed01       sub r13, 1
0x0000e810      4983fdfd       cmp r13, 0xfffffffffffffffd
0x0000e814      0f8781020000   ja 0xea9b
0x0000e81a      488d6902       lea rbp, [rcx + 2]
0x0000e81e      0fb65902       movzx ebx, byte [rcx + 2]
0x0000e822      e977fbffff     jmp 0xe39e
0x0000e827      49896c2418     mov qword [r12 + 0x18], rbp
0x0000e82c      0fb67d00       movzx edi, byte [rbp]
0x0000e830      4889ee         mov rsi, rbp
0x0000e833      8d4fd0         lea ecx, [rdi - 0x30]
0x0000e836      80f909         cmp cl, 9
0x0000e839      760c           jbe 0xe847
0x0000e83b      eb33           jmp 0xe870
0x0000e83d      0f1f00         nop dword [rax]
0x0000e840      4889c5         mov rbp, rax
0x0000e843      4883c001       add rax, 1
0x0000e847      0fb638         movzx edi, byte [rax]
0x0000e84a      8d57d0         lea edx, [rdi - 0x30]
0x0000e84d      80fa09         cmp dl, 9
0x0000e850      76ee           jbe 0xe840
0x0000e852      4889c1         mov rcx, rax
0x0000e855      488d5502       lea rdx, [rbp + 2]
0x0000e859      4889c5         mov rbp, rax
0x0000e85c      4829f1         sub rcx, rsi
0x0000e85f      488b742410     mov rsi, qword [rsp + 0x10]
0x0000e864      4839ce         cmp rsi, rcx
0x0000e867      480f43ce       cmovae rcx, rsi
0x0000e86b      48894c2410     mov qword [rsp + 0x10], rcx
0x0000e870      49896c2420     mov qword [r12 + 0x20], rbp
0x0000e875      0fb65d00       movzx ebx, byte [rbp]
0x0000e879      e997fbffff     jmp 0xe415
0x0000e87e      0fb64501       movzx eax, byte [rbp + 1]
0x0000e882      83e830         sub eax, 0x30
0x0000e885      3c09           cmp al, 9
0x0000e887      7715           ja 0xe89e
0x0000e889      0f1f80000000.  nop dword [rax]
0x0000e890      4883c201       add rdx, 1
0x0000e894      0fb602         movzx eax, byte [rdx]
0x0000e897      83e830         sub eax, 0x30
0x0000e89a      3c09           cmp al, 9
0x0000e89c      76f2           jbe 0xe890
0x0000e89e      488b742418     mov rsi, qword [rsp + 0x18]
0x0000e8a3      4889d0         mov rax, rdx
0x0000e8a6      4989542438     mov qword [r12 + 0x38], rdx
0x0000e8ab      4829e8         sub rax, rbp
0x0000e8ae      0fb61a         movzx ebx, byte [rdx]
0x0000e8b1      4889d5         mov rbp, rdx
0x0000e8b4      4839c6         cmp rsi, rax
0x0000e8b7      480f43c6       cmovae rax, rsi
0x0000e8bb      4889442418     mov qword [rsp + 0x18], rax
0x0000e8c0      e959fbffff     jmp 0xe41e
0x0000e8c5      4889c6         mov rsi, rax
0x0000e8c8      4883c601       add rsi, 1
0x0000e8cc      0fb63e         movzx edi, byte [rsi]
0x0000e8cf      448d5fd0       lea r11d, [rdi - 0x30]
0x0000e8d3      4180fb09       cmp r11b, 9
0x0000e8d7      76ef           jbe 0xe8c8
0x0000e8d9      4080ff24       cmp dil, 0x24
0x0000e8dd      0f8507fdffff   jne 0xe5ea
0x0000e8e3      31f6           xor esi, esi
0x0000e8e5      0fbec1         movsx eax, cl
0x0000e8e8      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000e8f2      4c89c1         mov rcx, r8
0x0000e8f5      83e830         sub eax, 0x30
0x0000e8f8      4839fe         cmp rsi, rdi
0x0000e8fb      4898           cdqe
0x0000e8fd      7707           ja 0xe906
0x0000e8ff      488d0cb6       lea rcx, [rsi + rsi*4]
0x0000e903      4801c9         add rcx, rcx
0x0000e906      4889d5         mov rbp, rdx
0x0000e909      4531db         xor r11d, r11d
0x0000e90c      4801c8         add rax, rcx
0x0000e90f      0fb64a01       movzx ecx, byte [rdx + 1]
0x0000e913      410f92c3       setb r11b
0x0000e917      4883c201       add rdx, 1
0x0000e91b      4889c6         mov rsi, rax
0x0000e91e      4d85db         test r11, r11
0x0000e921      8d79d0         lea edi, [rcx - 0x30]
0x0000e924      0f8504050000   jne 0xee2e
0x0000e92a      4080ff09       cmp dil, 9
0x0000e92e      76b5           jbe 0xe8e5
0x0000e930      488d58ff       lea rbx, [rax - 1]
0x0000e934      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000e938      0f875d010000   ja 0xea9b
0x0000e93e      49895c2428     mov qword [r12 + 0x28], rbx
0x0000e943      4883c502       add rbp, 2
0x0000e947      e9c3fcffff     jmp 0xe60f
0x0000e94c      83f80f         cmp eax, 0xf
0x0000e94f      41bb16000000   mov r11d, 0x16
0x0000e955      0f8f4dfbffff   jg 0xe4a8
0x0000e95b      a804           test al, 4
0x0000e95d      0f8545fbffff   jne 0xe4a8
0x0000e963      83f807         cmp eax, 7
0x0000e966      41bb15000000   mov r11d, 0x15
0x0000e96c      0f8f36fbffff   jg 0xe4a8
0x0000e972      a802           test al, 2
0x0000e974      41bb12000000   mov r11d, 0x12
0x0000e97a      0f8528fbffff   jne 0xe4a8
0x0000e980      4531db         xor r11d, r11d
0x0000e983      a801           test al, 1
0x0000e985      410f94c3       sete r11b
0x0000e989      4183c313       add r11d, 0x13
0x0000e98d      e916fbffff     jmp 0xe4a8
0x0000e992      660f1f440000   nop word [rax + rax]
0x0000e998      4531db         xor r11d, r11d
0x0000e99b      83f807         cmp eax, 7
0x0000e99e      410f9fc3       setg r11b
0x0000e9a2      4183c30d       add r11d, 0xd
0x0000e9a6      e9fdfaffff     jmp 0xe4a8
0x0000e9ab      83f80f         cmp eax, 0xf
0x0000e9ae      41bb09000000   mov r11d, 9
0x0000e9b4      0f8feefaffff   jg 0xe4a8
0x0000e9ba      a804           test al, 4
0x0000e9bc      0f85e6faffff   jne 0xe4a8
0x0000e9c2      83f807         cmp eax, 7
0x0000e9c5      41bb07000000   mov r11d, 7
0x0000e9cb      0f8fd7faffff   jg 0xe4a8
0x0000e9d1      a802           test al, 2
0x0000e9d3      41bb01000000   mov r11d, 1
0x0000e9d9      0f85c9faffff   jne 0xe4a8
0x0000e9df      83e001         and eax, 1
0x0000e9e2      83f801         cmp eax, 1
0x0000e9e5      4519db         sbb r11d, r11d
0x0000e9e8      4183e302       and r11d, 2
0x0000e9ec      4183c303       add r11d, 3
0x0000e9f0      e9b3faffff     jmp 0xe4a8
0x0000e9f5      0f1f00         nop dword [rax]
0x0000e9f8      4531db         xor r11d, r11d
0x0000e9fb      83f807         cmp eax, 7
0x0000e9fe      410f9fc3       setg r11b
0x0000ea02      4183c30f       add r11d, 0xf
0x0000ea06      e99dfaffff     jmp 0xe4a8
0x0000ea0b      83f80f         cmp eax, 0xf
0x0000ea0e      41bb0c000000   mov r11d, 0xc
0x0000ea14      0f8f8efaffff   jg 0xe4a8
0x0000ea1a      4531db         xor r11d, r11d
0x0000ea1d      a804           test al, 4
0x0000ea1f      410f95c3       setne r11b
0x0000ea23      4183c30b       add r11d, 0xb
0x0000ea27      e97cfaffff     jmp 0xe4a8
0x0000ea2c      41bb0e000000   mov r11d, 0xe
0x0000ea32      bb63000000     mov ebx, 0x63                           ; 'c'
0x0000ea37      e96cfaffff     jmp 0xe4a8
0x0000ea3c      83f80f         cmp eax, 0xf
0x0000ea3f      41bb0a000000   mov r11d, 0xa
0x0000ea45      0f8f5dfaffff   jg 0xe4a8
0x0000ea4b      a804           test al, 4
0x0000ea4d      0f8555faffff   jne 0xe4a8
0x0000ea53      83f807         cmp eax, 7
0x0000ea56      41bb08000000   mov r11d, 8
0x0000ea5c      0f8f46faffff   jg 0xe4a8
0x0000ea62      a802           test al, 2
0x0000ea64      41bb02000000   mov r11d, 2
0x0000ea6a      0f8538faffff   jne 0xe4a8
0x0000ea70      83e001         and eax, 1
0x0000ea73      83f801         cmp eax, 1
0x0000ea76      4519db         sbb r11d, r11d
0x0000ea79      4183e302       and r11d, 2
0x0000ea7d      4183c304       add r11d, 4
0x0000ea81      e922faffff     jmp 0xe4a8
0x0000ea86      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ea90      41bb11000000   mov r11d, 0x11
0x0000ea96      e90dfaffff     jmp 0xe4a8
0x0000ea9b      498b4f08       mov rcx, qword [r15 + 8]
0x0000ea9f      48394c2408     cmp qword [rsp + 8], rcx
0x0000eaa4      7408           je 0xeaae
0x0000eaa6      4889cf         mov rdi, rcx
0x0000eaa9      e8c235ffff     call sym.imp.free
0x0000eaae      498b7e08       mov rdi, qword [r14 + 8]
0x0000eab2      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000eab7      7405           je 0xeabe
0x0000eab9      e8b235ffff     call sym.imp.free
0x0000eabe      e8ed35ffff     call sym.imp.__errno_location
0x0000eac3      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x3ba00000
0x0000eac9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000eace      e91ff8ffff     jmp 0xe2f2
0x0000ead3      4439da         cmp edx, r11d
0x0000ead6      0f842ffaffff   je 0xe50b
0x0000eadc      ebc1           jmp 0xea9f
0x0000eade      6690           nop
0x0000eae0      4d01c9         add r9, r9
0x0000eae3      498d4501       lea rax, [r13 + 1]
0x0000eae7      4d39e9         cmp r9, r13
0x0000eaea      4c0f46c8       cmovbe r9, rax
0x0000eaee      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000eaf8      4939c1         cmp r9, rax
0x0000eafb      0f87da030000   ja 0xeedb
0x0000eb01      4c89ce         mov rsi, r9
0x0000eb04      4c894c2448     mov qword [rsp + 0x48], r9
0x0000eb09      4c89542440     mov qword [rsp + 0x40], r10
0x0000eb0e      48c1e605       shl rsi, 5
0x0000eb12      48394c2408     cmp qword [rsp + 8], rcx
0x0000eb17      4c89442438     mov qword [rsp + 0x38], r8
0x0000eb1c      44895c2430     mov dword [rsp + 0x30], r11d
0x0000eb21      0f849a000000   je 0xebc1
0x0000eb27      4889cf         mov rdi, rcx
0x0000eb2a      e82139ffff     call sym.imp.realloc
0x0000eb2f      4885c0         test rax, rax
0x0000eb32      4889c1         mov rcx, rax
0x0000eb35      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000eb3a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000eb3f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000eb44      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000eb49      0f8488030000   je 0xeed7
0x0000eb4f      488b442408     mov rax, qword [rsp + 8]
0x0000eb54      493b4708       cmp rax, qword [r15 + 8]
0x0000eb58      0f848b000000   je 0xebe9
0x0000eb5e      49894f08       mov qword [r15 + 8], rcx
0x0000eb62      e95df9ffff     jmp 0xe4c4
0x0000eb67      488b742420     mov rsi, qword [rsp + 0x20]
0x0000eb6c      4883feff       cmp rsi, 0xffffffffffffffff
0x0000eb70      488d4601       lea rax, [rsi + 1]
0x0000eb74      4989742450     mov qword [r12 + 0x50], rsi
0x0000eb79      0f841cffffff   je 0xea9b
0x0000eb7f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000eb84      4889442420     mov qword [rsp + 0x20], rax
0x0000eb89      e929f9ffff     jmp 0xe4b7
0x0000eb8e      4080ff09       cmp dil, 9
0x0000eb92      0f8703ffffff   ja 0xea9b
0x0000eb98      0fbec3         movsx eax, bl
0x0000eb9b      4c89c6         mov rsi, r8
0x0000eb9e      4889e9         mov rcx, rbp
0x0000eba1      83e830         sub eax, 0x30
0x0000eba4      4898           cdqe
0x0000eba6      e936fcffff     jmp 0xe7e1
0x0000ebab      83fa05         cmp edx, 5
0x0000ebae      0f85ebfeffff   jne 0xea9f
0x0000ebb4      0fb65d00       movzx ebx, byte [rbp]
0x0000ebb8      488d5501       lea rdx, [rbp + 1]
0x0000ebbc      e954f8ffff     jmp 0xe415
0x0000ebc1      4889f7         mov rdi, rsi
0x0000ebc4      e8f737ffff     call sym.imp.malloc
0x0000ebc9      4885c0         test rax, rax
0x0000ebcc      4889c1         mov rcx, rax
0x0000ebcf      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000ebd4      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ebd9      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ebde      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ebe3      0f8463010000   je 0xed4c
0x0000ebe9      498b17         mov rdx, qword [r15]
0x0000ebec      488b742408     mov rsi, qword [rsp + 8]
0x0000ebf1      4889cf         mov rdi, rcx
0x0000ebf4      4c894c2448     mov qword [rsp + 0x48], r9
0x0000ebf9      4c89542440     mov qword [rsp + 0x40], r10
0x0000ebfe      4c89442438     mov qword [rsp + 0x38], r8
0x0000ec03      44895c2430     mov dword [rsp + 0x30], r11d
0x0000ec08      48c1e205       shl rdx, 5
0x0000ec0c      e84f37ffff     call sym.imp.memcpy
0x0000ec11      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ec16      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ec1b      4889c1         mov rcx, rax
0x0000ec1e      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ec23      448b5c2430     mov r11d, dword [rsp + 0x30]
0x0000ec28      e931ffffff     jmp 0xeb5e
0x0000ec2d      4889f7         mov rdi, rsi
0x0000ec30      e88b37ffff     call sym.imp.malloc
0x0000ec35      4885c0         test rax, rax
0x0000ec38      4889c1         mov rcx, rax
0x0000ec3b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ec40      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000ec45      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000ec4a      0f84e9000000   je 0xed39
0x0000ec50      488d049b       lea rax, [rbx + rbx*4]
0x0000ec54      488b742428     mov rsi, qword [rsp + 0x28]
0x0000ec59      4889cf         mov rdi, rcx
0x0000ec5c      4c894c2440     mov qword [rsp + 0x40], r9
0x0000ec61      4c89542438     mov qword [rsp + 0x38], r10
0x0000ec66      488d1443       lea rdx, [rbx + rax*2]
0x0000ec6a      4c89442430     mov qword [rsp + 0x30], r8
0x0000ec6f      48c1e203       shl rdx, 3
0x0000ec73      e8e836ffff     call sym.imp.memcpy
0x0000ec78      498b1e         mov rbx, qword [r14]
0x0000ec7b      4889c1         mov rcx, rax
0x0000ec7e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000ec83      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000ec88      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ec8d      e915f9ffff     jmp 0xe5a7
0x0000ec92      498b07         mov rax, qword [r15]
0x0000ec95      e9fdf9ffff     jmp 0xe697
0x0000ec9a      83fa05         cmp edx, 5
0x0000ec9d      0f85fcfdffff   jne 0xea9f
0x0000eca3      410fb61b       movzx ebx, byte [r11]
0x0000eca7      4c89dd         mov rbp, r11
0x0000ecaa      e96ff7ffff     jmp 0xe41e
0x0000ecaf      4d01c9         add r9, r9
0x0000ecb2      488d4301       lea rax, [rbx + 1]
0x0000ecb6      4939d9         cmp r9, rbx
0x0000ecb9      4c0f46c8       cmovbe r9, rax
0x0000ecbd      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x0000ecc7      4939c1         cmp r9, rax
0x0000ecca      0f870b020000   ja 0xeedb
0x0000ecd0      4c89ce         mov rsi, r9
0x0000ecd3      4c894c2448     mov qword [rsp + 0x48], r9
0x0000ecd8      4c89542440     mov qword [rsp + 0x40], r10
0x0000ecdd      48c1e605       shl rsi, 5
0x0000ece1      48394c2408     cmp qword [rsp + 8], rcx
0x0000ece6      4c89442438     mov qword [rsp + 0x38], r8
0x0000eceb      4c895c2430     mov qword [rsp + 0x30], r11
0x0000ecf0      0f84b8010000   je 0xeeae
0x0000ecf6      4889cf         mov rdi, rcx
0x0000ecf9      e85237ffff     call sym.imp.realloc
0x0000ecfe      498b5708       mov rdx, qword [r15 + 8]
0x0000ed02      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ed07      4889c1         mov rcx, rax
0x0000ed0a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ed0f      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ed14      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ed19      4885c9         test rcx, rcx
0x0000ed1c      0f8415020000   je 0xef37
0x0000ed22      4839542408     cmp qword [rsp + 8], rdx
0x0000ed27      498b07         mov rax, qword [r15]
0x0000ed2a      0f84c0010000   je 0xeef0
0x0000ed30      49894f08       mov qword [r15 + 8], rcx
0x0000ed34      e914faffff     jmp 0xe74d
0x0000ed39      498b4f08       mov rcx, qword [r15 + 8]
0x0000ed3d      48394c2408     cmp qword [rsp + 8], rcx
0x0000ed42      7418           je 0xed5c
0x0000ed44      4889cf         mov rdi, rcx
0x0000ed47      e82433ffff     call sym.imp.free
0x0000ed4c      498b7e08       mov rdi, qword [r14 + 8]
0x0000ed50      48397c2428     cmp qword [rsp + 0x28], rdi
0x0000ed55      7405           je 0xed5c
0x0000ed57      e81433ffff     call sym.imp.free
0x0000ed5c      e84f33ffff     call sym.imp.__errno_location
0x0000ed61      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000ed67      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000ed6c      e981f5ffff     jmp 0xe2f2
0x0000ed71      4889f7         mov rdi, rsi
0x0000ed74      e84736ffff     call sym.imp.malloc
0x0000ed79      488b542408     mov rdx, qword [rsp + 8]
0x0000ed7e      4889c1         mov rcx, rax
0x0000ed81      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000ed86      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000ed8b      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ed90      e9e7f8ffff     jmp 0xe67c
0x0000ed95      488b742420     mov rsi, qword [rsp + 0x20]
0x0000ed9a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000ed9e      488d4601       lea rax, [rsi + 1]
0x0000eda2      4989742440     mov qword [r12 + 0x40], rsi
0x0000eda7      0f84eefcffff   je 0xea9b
0x0000edad      488b5c2420     mov rbx, qword [rsp + 0x20]
0x0000edb2      4889442420     mov qword [rsp + 0x20], rax
0x0000edb7      e981f9ffff     jmp 0xe73d
0x0000edbc      4c89da         mov rdx, r11
0x0000edbf      4883c201       add rdx, 1
0x0000edc3      0fb60a         movzx ecx, byte [rdx]
0x0000edc6      8d71d0         lea esi, [rcx - 0x30]
0x0000edc9      4080fe09       cmp sil, 9
0x0000edcd      76f0           jbe 0xedbf
0x0000edcf      80f924         cmp cl, 0x24
0x0000edd2      0f8556f9ffff   jne 0xe72e
0x0000edd8      31c9           xor ecx, ecx
0x0000edda      48be99999999.  movabs rsi, 0x1999999999999999
0x0000ede4      83e830         sub eax, 0x30
0x0000ede7      4c89c2         mov rdx, r8
0x0000edea      4839f1         cmp rcx, rsi
0x0000eded      4898           cdqe
0x0000edef      7707           ja 0xedf8
0x0000edf1      488d1489       lea rdx, [rcx + rcx*4]
0x0000edf5      4801d2         add rdx, rdx
0x0000edf8      4c89de         mov rsi, r11
0x0000edfb      31db           xor ebx, ebx
0x0000edfd      4801c2         add rdx, rax
0x0000ee00      410fbe4301     movsx eax, byte [r11 + 1]
0x0000ee05      0f92c3         setb bl
0x0000ee08      4983c301       add r11, 1
0x0000ee0c      4889d1         mov rcx, rdx
0x0000ee0f      4885db         test rbx, rbx
0x0000ee12      8d78d0         lea edi, [rax - 0x30]
0x0000ee15      7471           je 0xee88
0x0000ee17      4080ff09       cmp dil, 9
0x0000ee1b      0f877afcffff   ja 0xea9b
0x0000ee21      83e830         sub eax, 0x30
0x0000ee24      4c89c2         mov rdx, r8
0x0000ee27      4c89de         mov rsi, r11
0x0000ee2a      4898           cdqe
0x0000ee2c      ebcd           jmp 0xedfb
0x0000ee2e      4080ff09       cmp dil, 9
0x0000ee32      0f8763fcffff   ja 0xea9b
0x0000ee38      0fbec1         movsx eax, cl
0x0000ee3b      4889d5         mov rbp, rdx
0x0000ee3e      4c89c1         mov rcx, r8
0x0000ee41      83e830         sub eax, 0x30
0x0000ee44      4898           cdqe
0x0000ee46      e9befaffff     jmp 0xe909
0x0000ee4b      488b742408     mov rsi, qword [rsp + 8]
0x0000ee50      48c1e005       shl rax, 5
0x0000ee54      4889cf         mov rdi, rcx
0x0000ee57      4889c2         mov rdx, rax
0x0000ee5a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000ee5f      4c89542438     mov qword [rsp + 0x38], r10
0x0000ee64      4c89442430     mov qword [rsp + 0x30], r8
0x0000ee69      e8f234ffff     call sym.imp.memcpy
0x0000ee6e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000ee73      4889c1         mov rcx, rax
0x0000ee76      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000ee7b      498b07         mov rax, qword [r15]
0x0000ee7e      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000ee83      e90bf8ffff     jmp 0xe693
0x0000ee88      4080ff09       cmp dil, 9
0x0000ee8c      0f8648ffffff   jbe 0xedda
0x0000ee92      488d5aff       lea rbx, [rdx - 1]
0x0000ee96      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000ee9a      0f87fbfbffff   ja 0xea9b
0x0000eea0      49895c2440     mov qword [r12 + 0x40], rbx
0x0000eea5      4c8d5e02       lea r11, [rsi + 2]
0x0000eea9      e98ff8ffff     jmp 0xe73d
0x0000eeae      4889f7         mov rdi, rsi
0x0000eeb1      e80a35ffff     call sym.imp.malloc
0x0000eeb6      488b542408     mov rdx, qword [rsp + 8]
0x0000eebb      4889c1         mov rcx, rax
0x0000eebe      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000eec3      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000eec8      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000eecd      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000eed2      e942feffff     jmp 0xed19
0x0000eed7      498b4f08       mov rcx, qword [r15 + 8]
0x0000eedb      48394c2408     cmp qword [rsp + 8], rcx
0x0000eee0      0f855efeffff   jne 0xed44
0x0000eee6      e961feffff     jmp 0xed4c
0x0000eeeb      0f1f440000     nop dword [rax + rax]
0x0000eef0      488b742408     mov rsi, qword [rsp + 8]
0x0000eef5      48c1e005       shl rax, 5
0x0000eef9      4889cf         mov rdi, rcx
0x0000eefc      4889c2         mov rdx, rax
0x0000eeff      4c894c2448     mov qword [rsp + 0x48], r9
0x0000ef04      4c89542440     mov qword [rsp + 0x40], r10
0x0000ef09      4c89442438     mov qword [rsp + 0x38], r8
0x0000ef0e      4c895c2430     mov qword [rsp + 0x30], r11
0x0000ef13      e84834ffff     call sym.imp.memcpy
0x0000ef18      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000ef1d      4889c1         mov rcx, rax
0x0000ef20      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000ef25      498b07         mov rax, qword [r15]
0x0000ef28      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000ef2d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x0000ef32      e9f9fdffff     jmp 0xed30
0x0000ef37      4889d1         mov rcx, rdx
0x0000ef3a      eb9f           jmp 0xeedb
0x0000ef3c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000ef40      4157           push r15
0x0000ef42      4156           push r14
0x0000ef44      4989d7         mov r15, rdx
0x0000ef47      4155           push r13
0x0000ef49      4154           push r12
0x0000ef4b      4c8d251e4920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x213870
0x0000ef52      55             push rbp
0x0000ef53      488d2d1e4920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x213878 ; "`<"
0x0000ef5a      53             push rbx
0x0000ef5b      4189fd         mov r13d, edi
0x0000ef5e      4989f6         mov r14, rsi
0x0000ef61      4c29e5         sub rbp, r12
0x0000ef64      4883ec08       sub rsp, 8
0x0000ef68      48c1fd03       sar rbp, 3
0x0000ef6c      e8af30ffff     call sym._init
0x0000ef71      4885ed         test rbp, rbp
0x0000ef74      7420           je 0xef96
0x0000ef76      31db           xor ebx, ebx
0x0000ef78      0f1f84000000.  nop dword [rax + rax]
0x0000ef80      4c89fa         mov rdx, r15
0x0000ef83      4c89f6         mov rsi, r14
0x0000ef86      4489ef         mov edi, r13d
0x0000ef89      41ff14dc       call qword [r12 + rbx*8]
0x0000ef8d      4883c301       add rbx, 1
0x0000ef91      4839dd         cmp rbp, rbx
0x0000ef94      75ea           jne 0xef80
0x0000ef96      4883c408       add rsp, 8
0x0000ef9a      5b             pop rbx
0x0000ef9b      5d             pop rbp
0x0000ef9c      415c           pop r12
0x0000ef9e      415d           pop r13
0x0000efa0      415e           pop r14
0x0000efa2      415f           pop r15
0x0000efa4      c3             ret
0x0000efa5      90             nop
0x0000efa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000efb0      f3c3           ret
0x0000efb2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000efbc      0f1f4000       nop dword [rax]
;-- atexit:
0x0000efc0      488b15415020.  mov rdx, qword [obj.__dso_handle]       ; [0x214008:8]=0x214008 obj.__dso_handle
0x0000efc7      31f6           xor esi, esi
0x0000efc9      e92235ffff     jmp sym.imp.__cxa_atexit
0x0000efce      0000           add byte [rax], al
