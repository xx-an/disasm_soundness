;-- section..plt:
;-- .plt:
0x000019c0      ff35ea832000   push qword [0x00209db0]                 ; [12] -r-x section size 1024 named .plt
0x000019c6      ff25ec832000   jmp qword [0x00209db8]                  ; [0x209db8:8]=0
0x000019cc      0f1f4000       nop dword [rax]
;-- imp.getenv:
0x000019d0      ff25ea832000   jmp qword [reloc.getenv]                ; [0x209dc0:8]=0x19d6
0x000019d6      6800000000     push 0
0x000019db      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000019e0      ff25e2832000   jmp qword [reloc.abort]                 ; [0x209dc8:8]=0x19e6
0x000019e6      6801000000     push 1
0x000019eb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019f0      ff25da832000   jmp qword [reloc.__errno_location]      ; [0x209dd0:8]=0x19f6
0x000019f6      6802000000     push 2
0x000019fb      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001a00      ff25d2832000   jmp qword [reloc.strncmp]               ; [0x209dd8:8]=0x1a06
0x00001a06      6803000000     push 3
0x00001a0b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001a10      ff25ca832000   jmp qword [reloc._exit]                 ; [0x209de0:8]=0x1a16
0x00001a16      6804000000     push 4
0x00001a1b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001a20      ff25c2832000   jmp qword [reloc.__fpending]            ; [0x209de8:8]=0x1a26 ; "&\x1a"
0x00001a26      6805000000     push 5
0x00001a2b      e990ffffff     jmp sym..plt
;-- imp.ferror:
0x00001a30      ff25ba832000   jmp qword [reloc.ferror]                ; [0x209df0:8]=0x1a36 ; "6\x1a"
0x00001a36      6806000000     push 6
0x00001a3b      e980ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00001a40      ff25b2832000   jmp qword [reloc.iswcntrl]              ; [0x209df8:8]=0x1a46 ; "F\x1a"
0x00001a46      6807000000     push 7
0x00001a4b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a50      ff25aa832000   jmp qword [reloc.textdomain]            ; [0x209e00:8]=0x1a56 ; "V\x1a"
0x00001a56      6808000000     push 8
0x00001a5b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a60      ff25a2832000   jmp qword [reloc.fclose]                ; [0x209e08:8]=0x1a66 ; "f\x1a"
0x00001a66      6809000000     push 9
0x00001a6b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a70      ff259a832000   jmp qword [reloc.bindtextdomain]        ; [0x209e10:8]=0x1a76 ; "v\x1a"
0x00001a76      680a000000     push 0xa
0x00001a7b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a80      ff2592832000   jmp qword [reloc.dcgettext]             ; [0x209e18:8]=0x1a86
0x00001a86      680b000000     push 0xb
0x00001a8b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a90      ff258a832000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e20:8]=0x1a96
0x00001a96      680c000000     push 0xc
0x00001a9b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001aa0      ff2582832000   jmp qword [reloc.strlen]                ; [0x209e28:8]=0x1aa6
0x00001aa6      680d000000     push 0xd
0x00001aab      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ab0      ff257a832000   jmp qword [reloc.__stack_chk_fail]      ; [0x209e30:8]=0x1ab6
0x00001ab6      680e000000     push 0xe
0x00001abb      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ac0      ff2572832000   jmp qword [reloc.getopt_long]           ; [0x209e38:8]=0x1ac6
0x00001ac6      680f000000     push 0xf
0x00001acb      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001ad0      ff256a832000   jmp qword [reloc.mbrtowc]               ; [0x209e40:8]=0x1ad6
0x00001ad6      6810000000     push 0x10
0x00001adb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x00001ae0      ff2562832000   jmp qword [reloc.strchr]                ; [0x209e48:8]=0x1ae6
0x00001ae6      6811000000     push 0x11
0x00001aeb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001af0      ff255a832000   jmp qword [reloc.__overflow]            ; [0x209e50:8]=0x1af6
0x00001af6      6812000000     push 0x12
0x00001afb      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b00      ff2552832000   jmp qword [reloc.strrchr]               ; [0x209e58:8]=0x1b06
0x00001b06      6813000000     push 0x13
0x00001b0b      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x00001b10      ff254a832000   jmp qword [reloc.lseek]                 ; [0x209e60:8]=0x1b16
0x00001b16      6814000000     push 0x14
0x00001b1b      e9a0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b20      ff2542832000   jmp qword [reloc.__assert_fail]         ; [0x209e68:8]=0x1b26 ; "&\x1b"
0x00001b26      6815000000     push 0x15
0x00001b2b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001b30      ff253a832000   jmp qword [reloc.memset]                ; [0x209e70:8]=0x1b36 ; "6\x1b"
0x00001b36      6816000000     push 0x16
0x00001b3b      e980feffff     jmp sym..plt
;-- imp.fgetc:
0x00001b40      ff2532832000   jmp qword [reloc.fgetc]                 ; [0x209e78:8]=0x1b46 ; "F\x1b"
0x00001b46      6817000000     push 0x17
0x00001b4b      e970feffff     jmp sym..plt
;-- imp.close:
0x00001b50      ff252a832000   jmp qword [reloc.close]                 ; [0x209e80:8]=0x1b56 ; "V\x1b"
0x00001b56      6818000000     push 0x18
0x00001b5b      e960feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001b60      ff2522832000   jmp qword [reloc.posix_fadvise]         ; [0x209e88:8]=0x1b66 ; "f\x1b"
0x00001b66      6819000000     push 0x19
0x00001b6b      e950feffff     jmp sym..plt
;-- imp.memchr:
0x00001b70      ff251a832000   jmp qword [reloc.memchr]                ; [0x209e90:8]=0x1b76 ; "v\x1b"
0x00001b76      681a000000     push 0x1a
0x00001b7b      e940feffff     jmp sym..plt
;-- imp.read:
0x00001b80      ff2512832000   jmp qword [reloc.read]                  ; [0x209e98:8]=0x1b86
0x00001b86      681b000000     push 0x1b
0x00001b8b      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001b90      ff250a832000   jmp qword [reloc.memcmp]                ; [0x209ea0:8]=0x1b96
0x00001b96      681c000000     push 0x1c
0x00001b9b      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001ba0      ff2502832000   jmp qword [reloc.fputs_unlocked]        ; [0x209ea8:8]=0x1ba6
0x00001ba6      681d000000     push 0x1d
0x00001bab      e910feffff     jmp sym..plt
;-- imp.calloc:
0x00001bb0      ff25fa822000   jmp qword [reloc.calloc]                ; [0x209eb0:8]=0x1bb6
0x00001bb6      681e000000     push 0x1e
0x00001bbb      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x00001bc0      ff25f2822000   jmp qword [reloc.strcmp]                ; [0x209eb8:8]=0x1bc6
0x00001bc6      681f000000     push 0x1f
0x00001bcb      e9f0fdffff     jmp sym..plt
;-- imp.__memmove_chk:
0x00001bd0      ff25ea822000   jmp qword [reloc.__memmove_chk]         ; [0x209ec0:8]=0x1bd6
0x00001bd6      6820000000     push 0x20                               ; "@"
0x00001bdb      e9e0fdffff     jmp sym..plt
;-- imp.feof:
0x00001be0      ff25e2822000   jmp qword [reloc.feof]                  ; [0x209ec8:8]=0x1be6
0x00001be6      6821000000     push 0x21                               ; '!'
0x00001beb      e9d0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001bf0      ff25da822000   jmp qword [reloc.memcpy]                ; [0x209ed0:8]=0x1bf6
0x00001bf6      6822000000     push 0x22                               ; '"'
0x00001bfb      e9c0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001c00      ff25d2822000   jmp qword [reloc.fileno]                ; [0x209ed8:8]=0x1c06
0x00001c06      6823000000     push 0x23                               ; '#'
0x00001c0b      e9b0fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001c10      ff25ca822000   jmp qword [reloc.__xstat]               ; [0x209ee0:8]=0x1c16
0x00001c16      6824000000     push 0x24                               ; '$'
0x00001c1b      e9a0fdffff     jmp sym..plt
;-- imp.wcwidth:
0x00001c20      ff25c2822000   jmp qword [reloc.wcwidth]               ; [0x209ee8:8]=0x1c26 ; "&\x1c"
0x00001c26      6825000000     push 0x25                               ; '%'
0x00001c2b      e990fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c30      ff25ba822000   jmp qword [reloc.fflush]                ; [0x209ef0:8]=0x1c36 ; "6\x1c"
0x00001c36      6826000000     push 0x26                               ; '&'
0x00001c3b      e980fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c40      ff25b2822000   jmp qword [reloc.nl_langinfo]           ; [0x209ef8:8]=0x1c46 ; "F\x1c"
0x00001c46      6827000000     push 0x27                               ; '''
0x00001c4b      e970fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001c50      ff25aa822000   jmp qword [reloc.__fxstat]              ; [0x209f00:8]=0x1c56 ; "V\x1c"
0x00001c56      6828000000     push 0x28                               ; '('
0x00001c5b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c60      ff25a2822000   jmp qword [reloc.__freading]            ; [0x209f08:8]=0x1c66 ; "f\x1c"
0x00001c66      6829000000     push 0x29                               ; ')'
0x00001c6b      e950fdffff     jmp sym..plt
;-- imp.realloc:
0x00001c70      ff259a822000   jmp qword [reloc.realloc]               ; [0x209f10:8]=0x1c76 ; "v\x1c"
0x00001c76      682a000000     push 0x2a                               ; '*'
0x00001c7b      e940fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001c80      ff2592822000   jmp qword [reloc.setlocale]             ; [0x209f18:8]=0x1c86
0x00001c86      682b000000     push 0x2b                               ; '+'
0x00001c8b      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001c90      ff258a822000   jmp qword [reloc.__printf_chk]          ; [0x209f20:8]=0x1c96
0x00001c96      682c000000     push 0x2c                               ; ','
0x00001c9b      e920fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001ca0      ff2582822000   jmp qword [reloc.setvbuf]               ; [0x209f28:8]=0x1ca6
0x00001ca6      682d000000     push 0x2d                               ; '-'
0x00001cab      e910fdffff     jmp sym..plt
;-- imp.iswspace:
0x00001cb0      ff257a822000   jmp qword [reloc.iswspace]              ; [0x209f30:8]=0x1cb6
0x00001cb6      682e000000     push 0x2e                               ; '.'
0x00001cbb      e900fdffff     jmp sym..plt
;-- imp.btowc:
0x00001cc0      ff2572822000   jmp qword [reloc.btowc]                 ; [0x209f38:8]=0x1cc6
0x00001cc6      682f000000     push 0x2f                               ; '/'
0x00001ccb      e9f0fcffff     jmp sym..plt
;-- imp.error:
0x00001cd0      ff256a822000   jmp qword [reloc.error]                 ; [0x209f40:8]=0x1cd6
0x00001cd6      6830000000     push 0x30                               ; '0'
0x00001cdb      e9e0fcffff     jmp sym..plt
;-- imp.open:
0x00001ce0      ff2562822000   jmp qword [reloc.open]                  ; [0x209f48:8]=0x1ce6
0x00001ce6      6831000000     push 0x31                               ; '1'
0x00001ceb      e9d0fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001cf0      ff255a822000   jmp qword [reloc.fseeko]                ; [0x209f50:8]=0x1cf6
0x00001cf6      6832000000     push 0x32                               ; '2'
0x00001cfb      e9c0fcffff     jmp sym..plt
;-- imp.fopen:
0x00001d00      ff2552822000   jmp qword [reloc.fopen]                 ; [0x209f58:8]=0x1d06
0x00001d06      6833000000     push 0x33                               ; '3'
0x00001d0b      e9b0fcffff     jmp sym..plt
;-- imp.sysconf:
0x00001d10      ff254a822000   jmp qword [reloc.sysconf]               ; [0x209f60:8]=0x1d16
0x00001d16      6834000000     push 0x34                               ; '4'
0x00001d1b      e9a0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001d20      ff2542822000   jmp qword [reloc.__cxa_atexit]          ; [0x209f68:8]=0x1d26 ; "&\x1d"
0x00001d26      6835000000     push 0x35                               ; '5'
0x00001d2b      e990fcffff     jmp sym..plt
;-- imp.sysinfo:
0x00001d30      ff253a822000   jmp qword [reloc.sysinfo]               ; [0x209f70:8]=0x1d36 ; "6\x1d"
0x00001d36      6836000000     push 0x36                               ; '6'
0x00001d3b      e980fcffff     jmp sym..plt
;-- imp.getpagesize:
0x00001d40      ff2532822000   jmp qword [reloc.getpagesize]           ; [0x209f78:8]=0x1d46 ; "F\x1d"
0x00001d46      6837000000     push 0x37                               ; '7'
0x00001d4b      e970fcffff     jmp sym..plt
;-- imp.exit:
0x00001d50      ff252a822000   jmp qword [reloc.exit]                  ; [0x209f80:8]=0x1d56 ; "V\x1d"
0x00001d56      6838000000     push 0x38                               ; '8'
0x00001d5b      e960fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001d60      ff2522822000   jmp qword [reloc.fwrite]                ; [0x209f88:8]=0x1d66 ; "f\x1d"
0x00001d66      6839000000     push 0x39                               ; '9'
0x00001d6b      e950fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001d70      ff251a822000   jmp qword [reloc.__fprintf_chk]         ; [0x209f90:8]=0x1d76 ; "v\x1d"
0x00001d76      683a000000     push 0x3a                               ; ':'
0x00001d7b      e940fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001d80      ff2512822000   jmp qword [reloc.mbsinit]               ; [0x209f98:8]=0x1d86
0x00001d86      683b000000     push 0x3b                               ; ';'
0x00001d8b      e930fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001d90      ff250a822000   jmp qword [reloc.iswprint]              ; [0x209fa0:8]=0x1d96
0x00001d96      683c000000     push 0x3c                               ; '<'
0x00001d9b      e920fcffff     jmp sym..plt
;-- imp.getdelim:
0x00001da0      ff2502822000   jmp qword [reloc.getdelim]              ; [0x209fa8:8]=0x1da6
0x00001da6      683d000000     push 0x3d                               ; '='
0x00001dab      e910fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001db0      ff25fa812000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fb0:8]=0x1db6
0x00001db6      683e000000     push 0x3e                               ; '>'
0x00001dbb      e900fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001dc0      .qword 0x9066002081f225ff                              ; [13] -r-x section size 24 named .plt.got
0x00001dc8      .qword 0x90660020820a25ff
0x00001dd0      .qword 0x90660020821225ff
0x00001dd8      0000           add byte [rax], al
0x00001dda      0000           add byte [rax], al
0x00001ddc      0000           add byte [rax], al
0x00001dde      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001de0      4157           push r15                                ; [14] -r-x section size 20958 named .text
0x00001de2      4156           push r14
0x00001de4      4155           push r13
0x00001de6      4154           push r12
0x00001de8      4989f4         mov r12, rsi
0x00001deb      55             push rbp
0x00001dec      53             push rbx
0x00001ded      89fb           mov ebx, edi
0x00001def      4c8d2d4a7c20.  lea r13, obj.longopts                   ; 0x209a40 ; "gq"
0x00001df6      4881ecf80100.  sub rsp, 0x1f8
0x00001dfd      488b3e         mov rdi, qword [rsi]
0x00001e00      64488b042528.  mov rax, qword fs:[0x28]
0x00001e09      48898424e801.  mov qword [rsp + 0x1e8], rax
0x00001e11      31c0           xor eax, eax
0x00001e13      e848210000     call sym.set_program_name
0x00001e18      488d35226000.  lea rsi, [0x00007e41]
0x00001e1f      bf06000000     mov edi, 6
0x00001e24      e857feffff     call sym.imp.setlocale
0x00001e29      488d35695200.  lea rsi, str.usr_local_share_locale     ; 0x7099 ; "/usr/local/share/locale"
0x00001e30      488d3d395200.  lea rdi, [0x00007070]                   ; "coreutils"
0x00001e37      e834fcffff     call sym.imp.bindtextdomain
0x00001e3c      488d3d2d5200.  lea rdi, [0x00007070]                   ; "coreutils"
0x00001e43      e808fcffff     call sym.imp.textdomain
0x00001e48      488d3d211d00.  lea rdi, sym.close_stdout               ; 0x3b70 ; "USH\x83\xec\bH\x8b=+e "
0x00001e4f      e85c510000     call sym.atexit
0x00001e54      e8e7feffff     call sym.imp.getpagesize
0x00001e59      488b3d488220.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001e60      31c9           xor ecx, ecx
0x00001e62      31f6           xor esi, esi
0x00001e64      4898           cdqe
0x00001e66      ba01000000     mov edx, 1
0x00001e6b      4889058e8220.  mov qword [obj.page_size], rax          ; [0x20a100:8]=0
0x00001e72      e829feffff     call sym.imp.setvbuf
0x00001e77      488d3d335200.  lea rdi, str.POSIXLY_CORRECT            ; 0x70b1 ; "POSIXLY_CORRECT"
0x00001e7e      e84dfbffff     call sym.imp.getenv
0x00001e83      4885c0         test rax, rax
0x00001e86      c60584822000.  mov byte [obj.print_bytes], 0           ; [0x20a111:1]=0
0x00001e8d      c6057e822000.  mov byte [obj.print_chars], 0           ; [0x20a112:1]=0
0x00001e94      0f95055d8220.  setne byte [obj.posixly_correct]
0x00001e9b      c60571822000.  mov byte [obj.print_words], 0           ; [0x20a113:1]=0
0x00001ea2      31ed           xor ebp, ebp
0x00001ea4      c60569822000.  mov byte [obj.print_lines], 0           ; [0x20a114:1]=0
0x00001eab      c6055e822000.  mov byte [obj.print_linelength], 0      ; [0x20a110:1]=0
0x00001eb2      48c7055b8220.  mov qword [obj.max_line_length], 0      ; [0x20a118:8]=0
0x00001ebd      48c705588220.  mov qword [obj.total_bytes], 0          ; [0x20a120:8]=0
0x00001ec8      48c705558220.  mov qword [obj.total_chars], 0          ; [0x20a128:8]=0
0x00001ed3      48c705528220.  mov qword [obj.total_words], 0          ; [0x20a130:8]=0
0x00001ede      48c7054f8220.  mov qword [obj.total_lines], 0          ; [0x20a138:8]=0
0x00001ee9      0f1f80000000.  nop dword [rax]
0x00001ef0      488d15e55100.  lea rdx, str.clLmw                      ; 0x70dc ; "clLmw"
0x00001ef7      4531c0         xor r8d, r8d
0x00001efa      4c89e9         mov rcx, r13
0x00001efd      4c89e6         mov rsi, r12
0x00001f00      89df           mov edi, ebx
0x00001f02      e8b9fbffff     call sym.imp.getopt_long
0x00001f07      83f8ff         cmp eax, 0xffffffff
0x00001f0a      0f84f4000000   je 0x2004
0x00001f10      83f863         cmp eax, 0x63
0x00001f13      0f84a7000000   je 0x1fc0
0x00001f19      7e2d           jle 0x1f48
0x00001f1b      83f86d         cmp eax, 0x6d
0x00001f1e      0f84d4000000   je 0x1ff8
0x00001f24      0f8eb6000000   jle 0x1fe0
0x00001f2a      83f877         cmp eax, 0x77
0x00001f2d      0f849d000000   je 0x1fd0
0x00001f33      83c080         add eax, 0xffffff80
0x00001f36      7527           jne 0x1f5f
0x00001f38      488b2d818120.  mov rbp, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001f3f      ebaf           jmp 0x1ef0
0x00001f41      0f1f80000000.  nop dword [rax]
0x00001f48      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001f4d      0f842a080000   je 0x277d
0x00001f53      83f84c         cmp eax, 0x4c
0x00001f56      7458           je 0x1fb0
0x00001f58      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001f5d      7411           je 0x1f70
0x00001f5f      bf01000000     mov edi, 1
0x00001f64      e8e7160000     call sym.usage
0x00001f69      0f1f80000000.  nop dword [rax]
0x00001f70      4883ec08       sub rsp, 8
0x00001f74      488b3d2d8120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001f7b      488b0d8e8020.  mov rcx, qword [obj.Version]            ; [0x20a010:8]=0x7878 ; "xx"
0x00001f82      6a00           push 0
0x00001f84      4c8d0d365100.  lea r9, str.David_MacKenzie             ; 0x70c1 ; "David MacKenzie"
0x00001f8b      4c8d053f5100.  lea r8, str.Paul_Rubin                  ; 0x70d1 ; "Paul Rubin"
0x00001f92      488d15d35000.  lea rdx, str.GNU_coreutils              ; 0x706c ; "GNU coreutils"
0x00001f99      488d35535000.  lea rsi, [0x00006ff3]                   ; "wc"
0x00001fa0      31c0           xor eax, eax
0x00001fa2      e8a9450000     call sym.version_etc
0x00001fa7      31ff           xor edi, edi
0x00001fa9      e8a2fdffff     call sym.imp.exit
0x00001fae      6690           nop
0x00001fb0      c60559812000.  mov byte [obj.print_linelength], 1      ; [0x20a110:1]=0
0x00001fb7      e934ffffff     jmp 0x1ef0
0x00001fbc      0f1f4000       nop dword [rax]
0x00001fc0      c6054a812000.  mov byte [obj.print_bytes], 1           ; [0x20a111:1]=0
0x00001fc7      e924ffffff     jmp 0x1ef0
0x00001fcc      0f1f4000       nop dword [rax]
0x00001fd0      c6053c812000.  mov byte [obj.print_words], 1           ; [0x20a113:1]=0
0x00001fd7      e914ffffff     jmp 0x1ef0
0x00001fdc      0f1f4000       nop dword [rax]
0x00001fe0      83f86c         cmp eax, 0x6c
0x00001fe3      0f8576ffffff   jne 0x1f5f
0x00001fe9      c60524812000.  mov byte [obj.print_lines], 1           ; [0x20a114:1]=0
0x00001ff0      e9fbfeffff     jmp 0x1ef0
0x00001ff5      0f1f00         nop dword [rax]
0x00001ff8      c60513812000.  mov byte [obj.print_chars], 1           ; [0x20a112:1]=0
0x00001fff      e9ecfeffff     jmp 0x1ef0
0x00002004      803d09812000.  cmp byte [obj.print_lines], 0           ; [0x20a114:1]=0
0x0000200b      7539           jne 0x2046
0x0000200d      803dff802000.  cmp byte [obj.print_words], 0           ; [0x20a113:1]=0
0x00002014      7530           jne 0x2046
0x00002016      803df5802000.  cmp byte [obj.print_chars], 0           ; [0x20a112:1]=0
0x0000201d      7527           jne 0x2046
0x0000201f      803deb802000.  cmp byte [obj.print_bytes], 0           ; [0x20a111:1]=0
0x00002026      751e           jne 0x2046
0x00002028      803de1802000.  cmp byte [obj.print_linelength], 0      ; [0x20a110:1]=0
0x0000202f      7515           jne 0x2046
0x00002031      c605d9802000.  mov byte [obj.print_bytes], 1           ; [0x20a111:1]=0
0x00002038      c605d4802000.  mov byte [obj.print_words], 1           ; [0x20a113:1]=0
0x0000203f      c605ce802000.  mov byte [obj.print_lines], 1           ; [0x20a114:1]=0
0x00002046      4885ed         test rbp, rbp
0x00002049      486305688020.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b8:4]=0
0x00002050      0f8435010000   je 0x218b
0x00002056      39c3           cmp ebx, eax
0x00002058      0f8f3a070000   jg 0x2798
0x0000205e      488d35ad5800.  lea rsi, [0x00007912]                   ; "-"
0x00002065      4889ef         mov rdi, rbp
0x00002068      e853fbffff     call sym.imp.strcmp
0x0000206d      85c0           test eax, eax
0x0000206f      0f858b050000   jne 0x2600
0x00002075      488b1d348020.  mov rbx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x0000207c      4889df         mov rdi, rbx
0x0000207f      e87cfbffff     call sym.imp.fileno
0x00002084      488d94245001.  lea rdx, [rsp + 0x150]
0x0000208c      89c6           mov esi, eax
0x0000208e      bf01000000     mov edi, 1
0x00002093      e8b8fbffff     call sym.imp.__fxstat
0x00002098      85c0           test eax, eax
0x0000209a      7517           jne 0x20b3
0x0000209c      8b8424680100.  mov eax, dword [rsp + 0x168]
0x000020a3      2500f00000     and eax, 0xf000
0x000020a8      3d00800000     cmp eax, 0x8000
0x000020ad      0f8426060000   je 0x26d9
0x000020b3      4889df         mov rdi, rbx
0x000020b6      4531e4         xor r12d, r12d
0x000020b9      31db           xor ebx, ebx
0x000020bb      e880190000     call sym.argv_iter_init_stream
0x000020c0      c644241b00     mov byte [rsp + 0x1b], 0
0x000020c5      4989c5         mov r13, rax
0x000020c8      4d85ed         test r13, r13
0x000020cb      0f84c2060000   je 0x2793
0x000020d1      4885db         test rbx, rbx
0x000020d4      0f84da000000   je 0x21b4
0x000020da      ba98000000     mov edx, 0x98
0x000020df      31c9           xor ecx, ecx
0x000020e1      4889d0         mov rax, rdx
0x000020e4      48f7e3         mul rbx
0x000020e7      0f809c060000   jo 0x2789
0x000020ed      4885c0         test rax, rax
0x000020f0      0f889d060000   js 0x2793
0x000020f6      4885c9         test rcx, rcx
0x000020f9      0f8594060000   jne 0x2793
0x000020ff      4869c3980000.  imul rax, rbx, 0x98
0x00002106      4889c7         mov rdi, rax
0x00002109      4889442410     mov qword [rsp + 0x10], rax
0x0000210e      e89d450000     call sym.xmalloc
0x00002113      4883fb01       cmp rbx, 1
0x00002117      4889442408     mov qword [rsp + 8], rax
0x0000211c      0f8452050000   je 0x2674
0x00002122      488b442408     mov rax, qword [rsp + 8]
0x00002127      4c8d7008       lea r14, [rax + 8]
0x0000212b      498d04dc       lea rax, [r12 + rbx*8]
0x0000212f      48890424       mov qword [rsp], rax
0x00002133      eb28           jmp 0x215d
0x00002135      4c89f2         mov rdx, r14
0x00002138      31f6           xor esi, esi
0x0000213a      bf01000000     mov edi, 1
0x0000213f      e80cfbffff     call sym.imp.__fxstat
0x00002144      418946f8       mov dword [r14 - 8], eax
0x00002148      4983c408       add r12, 8
0x0000214c      4981c6980000.  add r14, 0x98
0x00002153      4c392424       cmp qword [rsp], r12
0x00002157      0f84f5030000   je 0x2552
0x0000215d      4d8b3c24       mov r15, qword [r12]
0x00002161      4d85ff         test r15, r15
0x00002164      74cf           je 0x2135
0x00002166      488d35a55700.  lea rsi, [0x00007912]                   ; "-"
0x0000216d      4c89ff         mov rdi, r15
0x00002170      e84bfaffff     call sym.imp.strcmp
0x00002175      85c0           test eax, eax
0x00002177      74bc           je 0x2135
0x00002179      4c89f2         mov rdx, r14
0x0000217c      4c89fe         mov rsi, r15
0x0000217f      bf01000000     mov edi, 1
0x00002184      e887faffff     call sym.imp.__xstat
0x00002189      ebb9           jmp 0x2144
0x0000218b      39c3           cmp ebx, eax
0x0000218d      0f8fc7040000   jg 0x265a
0x00002193      4c8d25567f20.  lea r12, obj.stdin_only.8119            ; 0x20a0f0
0x0000219a      bb01000000     mov ebx, 1
0x0000219f      4c89e7         mov rdi, r12
0x000021a2      e869180000     call sym.argv_iter_init_argv
0x000021a7      c644241b00     mov byte [rsp + 0x1b], 0
0x000021ac      4989c5         mov r13, rax
0x000021af      e914ffffff     jmp 0x20c8
0x000021b4      bf98000000     mov edi, 0x98
0x000021b9      e8f2440000     call sym.xmalloc
0x000021be      b901000000     mov ecx, 1
0x000021c3      4889442408     mov qword [rsp + 8], rax
0x000021c8      c70001000000   mov dword [rax], 1
0x000021ce      488d44242c     lea rax, [rsp + 0x2c]
0x000021d3      890d337f2000   mov dword [obj.number_width], ecx       ; [0x20a10c:4]=0
0x000021d9      4531f6         xor r14d, r14d
0x000021dc      41bc01000000   mov r12d, 1
0x000021e2      48890424       mov qword [rsp], rax
0x000021e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000021f0      488b3424       mov rsi, qword [rsp]
0x000021f4      4c89ef         mov rdi, r13
0x000021f7      e884180000     call sym.argv_iter
0x000021fc      4885c0         test rax, rax
0x000021ff      4989c7         mov r15, rax
0x00002202      0f8402020000   je 0x240a
0x00002208      4885ed         test rbp, rbp
0x0000220b      0f84c4010000   je 0x23d5
0x00002211      488d15fa5600.  lea rdx, [0x00007912]                   ; "-"
0x00002218      b902000000     mov ecx, 2
0x0000221d      4889ee         mov rsi, rbp
0x00002220      4889d7         mov rdi, rdx
0x00002223      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002225      0f97c0         seta al
0x00002228      1c00           sbb al, 0
0x0000222a      84c0           test al, al
0x0000222c      0f854d010000   jne 0x237f
0x00002232      4889d6         mov rsi, rdx
0x00002235      4c89ff         mov rdi, r15
0x00002238      e883f9ffff     call sym.imp.strcmp
0x0000223d      85c0           test eax, eax
0x0000223f      0f84a9000000   je 0x22ee
0x00002245      41803f00       cmp byte [r15], 0
0x00002249      0f84dd000000   je 0x232c
0x0000224f      4885db         test rbx, rbx
0x00002252      0f8534010000   jne 0x238c
0x00002258      488b542408     mov rdx, qword [rsp + 8]
0x0000225d      31f6           xor esi, esi
0x0000225f      31c0           xor eax, eax
0x00002261      4c89ff         mov rdi, r15
0x00002264      4889542410     mov qword [rsp + 0x10], rdx
0x00002269      e872faffff     call sym.imp.open
0x0000226e      83f8ff         cmp eax, 0xffffffff
0x00002271      488b542410     mov rdx, qword [rsp + 0x10]
0x00002276      7446           je 0x22be
0x00002278      31c9           xor ecx, ecx
0x0000227a      4c89fe         mov rsi, r15
0x0000227d      89c7           mov edi, eax
0x0000227f      8944241c       mov dword [rsp + 0x1c], eax
0x00002283      e8d8080000     call sym.wc
0x00002288      448b4c241c     mov r9d, dword [rsp + 0x1c]
0x0000228d      88442410       mov byte [rsp + 0x10], al
0x00002291      4489cf         mov edi, r9d
0x00002294      e8b7f8ffff     call sym.imp.close
0x00002299      85c0           test eax, eax
0x0000229b      0fb6542410     movzx edx, byte [rsp + 0x10]
0x000022a0      751c           jne 0x22be
0x000022a2      4121d4         and r12d, edx
0x000022a5      4885db         test rbx, rbx
0x000022a8      750b           jne 0x22b5
0x000022aa      488b442408     mov rax, qword [rsp + 8]
0x000022af      c70001000000   mov dword [rax], 1
0x000022b5      4983c601       add r14, 1
0x000022b9      e932ffffff     jmp 0x21f0
0x000022be      4c89fa         mov rdx, r15
0x000022c1      be03000000     mov esi, 3
0x000022c6      31ff           xor edi, edi
0x000022c8      e8d3370000     call sym.quotearg_n_style_colon
0x000022cd      4989c7         mov r15, rax
0x000022d0      e81bf7ffff     call sym.imp.__errno_location
0x000022d5      8b30           mov esi, dword [rax]
0x000022d7      488d15af5500.  lea rdx, [0x0000788d]                   ; "%s"
0x000022de      4c89f9         mov rcx, r15
0x000022e1      31ff           xor edi, edi
0x000022e3      31c0           xor eax, eax
0x000022e5      e8e6f9ffff     call sym.imp.error
0x000022ea      31d2           xor edx, edx
0x000022ec      ebb4           jmp 0x22a2
0x000022ee      4c89fe         mov rsi, r15
0x000022f1      bf04000000     mov edi, 4
0x000022f6      e8a5360000     call sym.quotearg_style
0x000022fb      488d35265500.  lea rsi, str.when_reading_file_names_from_stdin__no_file_name_of__s_allowed ; 0x7828 ; "when reading file names from stdin, no file name of %s allowed"
0x00002302      31ff           xor edi, edi
0x00002304      4989c4         mov r12, rax
0x00002307      ba05000000     mov edx, 5
0x0000230c      e86ff7ffff     call sym.imp.dcgettext
0x00002311      31f6           xor esi, esi
0x00002313      4889c2         mov rdx, rax
0x00002316      31ff           xor edi, edi
0x00002318      31c0           xor eax, eax
0x0000231a      4c89e1         mov rcx, r12
0x0000231d      e8aef9ffff     call sym.imp.error
0x00002322      41803f00       cmp byte [r15], 0
0x00002326      0f85d6000000   jne 0x2402
0x0000232c      4c89ef         mov rdi, r13
0x0000232f      e8dc170000     call sym.argv_iter_n_args
0x00002334      488d35034e00.  lea rsi, str.invalid_zero_length_file_name ; 0x713e ; "invalid zero-length file name"
0x0000233b      ba05000000     mov edx, 5
0x00002340      31ff           xor edi, edi
0x00002342      4989c7         mov r15, rax
0x00002345      e836f7ffff     call sym.imp.dcgettext
0x0000234a      4889ea         mov rdx, rbp
0x0000234d      be03000000     mov esi, 3
0x00002352      31ff           xor edi, edi
0x00002354      4989c4         mov r12, rax
0x00002357      e844370000     call sym.quotearg_n_style_colon
0x0000235c      488d15f94d00.  lea rdx, str.s:_lu:__s                  ; 0x715c ; "%s:%lu: %s"
0x00002363      4d89e1         mov r9, r12
0x00002366      4889c1         mov rcx, rax
0x00002369      4d89f8         mov r8, r15
0x0000236c      31f6           xor esi, esi
0x0000236e      31ff           xor edi, edi
0x00002370      31c0           xor eax, eax
0x00002372      4531e4         xor r12d, r12d
0x00002375      e856f9ffff     call sym.imp.error
0x0000237a      e926ffffff     jmp 0x22a5
0x0000237f      41803f00       cmp byte [r15], 0
0x00002383      74a7           je 0x232c
0x00002385      31d2           xor edx, edx
0x00002387      4885db         test rbx, rbx
0x0000238a      7407           je 0x2393
0x0000238c      4969d6980000.  imul rdx, r14, 0x98
0x00002393      4803542408     add rdx, qword [rsp + 8]
0x00002398      488d35735500.  lea rsi, [0x00007912]                   ; "-"
0x0000239f      4c89ff         mov rdi, r15
0x000023a2      4889542410     mov qword [rsp + 0x10], rdx
0x000023a7      e814f8ffff     call sym.imp.strcmp
0x000023ac      85c0           test eax, eax
0x000023ae      488b542410     mov rdx, qword [rsp + 0x10]
0x000023b3      0f85a4feffff   jne 0x225d
0x000023b9      4883c9ff       or rcx, 0xffffffffffffffff
0x000023bd      4c89fe         mov rsi, r15
0x000023c0      31ff           xor edi, edi
0x000023c2      c6053f7d2000.  mov byte [obj.have_read_stdin], 1       ; [0x20a108:1]=0
0x000023c9      e892070000     call sym.wc
0x000023ce      89c2           mov edx, eax
0x000023d0      e9cdfeffff     jmp 0x22a2
0x000023d5      803800         cmp byte [rax], 0
0x000023d8      75ab           jne 0x2385
0x000023da      488d355d4d00.  lea rsi, str.invalid_zero_length_file_name ; 0x713e ; "invalid zero-length file name"
0x000023e1      ba05000000     mov edx, 5
0x000023e6      31ff           xor edi, edi
0x000023e8      e893f6ffff     call sym.imp.dcgettext
0x000023ed      488d15995400.  lea rdx, [0x0000788d]                   ; "%s"
0x000023f4      4889c1         mov rcx, rax
0x000023f7      31f6           xor esi, esi
0x000023f9      31ff           xor edi, edi
0x000023fb      31c0           xor eax, eax
0x000023fd      e8cef8ffff     call sym.imp.error
0x00002402      4531e4         xor r12d, r12d
0x00002405      e99bfeffff     jmp 0x22a5
0x0000240a      8b44242c       mov eax, dword [rsp + 0x2c]
0x0000240e      83f803         cmp eax, 3
0x00002411      0f847c030000   je 0x2793
0x00002417      83f804         cmp eax, 4
0x0000241a      0f84ec000000   je 0x250c
0x00002420      83f802         cmp eax, 2
0x00002423      741f           je 0x2444
0x00002425      488d0da14e00.  lea rcx, obj.__PRETTY_FUNCTION__.8129   ; 0x72cd ; "main"
0x0000242c      488d35ea4c00.  lea rsi, str..._coreutils_8.31_src_wc.c ; 0x711d ; "../coreutils-8.31/src/wc.c"
0x00002433      488d3dc65300.  lea rdi, str.unexpected_error_code_from_argv_iter ; 0x7800 ; "!\"unexpected error code from argv_iter\""
0x0000243a      ba3f030000     mov edx, 0x33f
0x0000243f      e8dcf6ffff     call sym.imp.__assert_fail
0x00002444      4885ed         test rbp, rbp
0x00002447      0f94c0         sete al
0x0000244a      4420e0         and al, r12b
0x0000244d      89c3           mov ebx, eax
0x0000244f      7414           je 0x2465
0x00002451      4c89ef         mov rdi, r13
0x00002454      4189dc         mov r12d, ebx
0x00002457      e8b4160000     call sym.argv_iter_n_args
0x0000245c      4885c0         test rax, rax
0x0000245f      0f8453020000   je 0x26b8
0x00002465      807c241b00     cmp byte [rsp + 0x1b], 0
0x0000246a      0f8581010000   jne 0x25f1
0x00002470      4c89ef         mov rdi, r13
0x00002473      e898160000     call sym.argv_iter_n_args
0x00002478      4883f801       cmp rax, 1
0x0000247c      763e           jbe 0x24bc
0x0000247e      488d35b34c00.  lea rsi, str.total                      ; 0x7138 ; "total"
0x00002485      ba05000000     mov edx, 5
0x0000248a      31ff           xor edi, edi
0x0000248c      e8eff5ffff     call sym.imp.dcgettext
0x00002491      4c8b05807c20.  mov r8, qword [obj.max_line_length]     ; [0x20a118:8]=0
0x00002498      488b0d817c20.  mov rcx, qword [obj.total_bytes]        ; [0x20a120:8]=0
0x0000249f      4989c1         mov r9, rax
0x000024a2      488b157f7c20.  mov rdx, qword [obj.total_chars]        ; [0x20a128:8]=0
0x000024a9      488b35807c20.  mov rsi, qword [obj.total_words]        ; [0x20a130:8]=0
0x000024b0      488b3d817c20.  mov rdi, qword [obj.total_lines]        ; [0x20a138:8]=0
0x000024b7      e894040000     call sym.write_counts
0x000024bc      4c89ef         mov rdi, r13
0x000024bf      e86c160000     call sym.argv_iter_free
0x000024c4      488b7c2408     mov rdi, qword [rsp + 8]
0x000024c9      e8f2f8ffff     call sym..plt.got
0x000024ce      803d337c2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20a108:1]=0
0x000024d5      0f85ed000000   jne 0x25c8
0x000024db      4183f401       xor r12d, 1
0x000024df      488b9c24e801.  mov rbx, qword [rsp + 0x1e8]
0x000024e7      6448331c2528.  xor rbx, qword fs:[0x28]
0x000024f0      410fb6c4       movzx eax, r12b
0x000024f4      0f858a020000   jne 0x2784
0x000024fa      4881c4f80100.  add rsp, 0x1f8
0x00002501      5b             pop rbx
0x00002502      5d             pop rbp
0x00002503      415c           pop r12
0x00002505      415d           pop r13
0x00002507      415e           pop r14
0x00002509      415f           pop r15
0x0000250b      c3             ret
0x0000250c      4889ea         mov rdx, rbp
0x0000250f      be03000000     mov esi, 3
0x00002514      31ff           xor edi, edi
0x00002516      e885350000     call sym.quotearg_n_style_colon
0x0000251b      488d35ec4b00.  lea rsi, str.s:_read_error              ; 0x710e ; "%s: read error"
0x00002522      ba05000000     mov edx, 5
0x00002527      31ff           xor edi, edi
0x00002529      4889c5         mov rbp, rax
0x0000252c      4531e4         xor r12d, r12d
0x0000252f      e84cf5ffff     call sym.imp.dcgettext
0x00002534      4889c3         mov rbx, rax
0x00002537      e8b4f4ffff     call sym.imp.__errno_location
0x0000253c      8b30           mov esi, dword [rax]
0x0000253e      4889e9         mov rcx, rbp
0x00002541      4889da         mov rdx, rbx
0x00002544      31ff           xor edi, edi
0x00002546      31c0           xor eax, eax
0x00002548      e883f7ffff     call sym.imp.error
0x0000254d      e913ffffff     jmp 0x2465
0x00002552      488b442408     mov rax, qword [rsp + 8]
0x00002557      b901000000     mov ecx, 1
0x0000255c      833800         cmp dword [rax], 0
0x0000255f      0f8f69fcffff   jg 0x21ce
0x00002565      488b742410     mov rsi, qword [rsp + 0x10]
0x0000256a      4889c2         mov rdx, rax
0x0000256d      bf01000000     mov edi, 1
0x00002572      4801c6         add rsi, rax
0x00002575      31c0           xor eax, eax
0x00002577      eb26           jmp 0x259f
0x00002579      833a00         cmp dword [rdx], 0
0x0000257c      751a           jne 0x2598
0x0000257e      8b4a20         mov ecx, dword [rdx + 0x20]
0x00002581      81e100f00000   and ecx, 0xf000
0x00002587      81f900800000   cmp ecx, 0x8000
0x0000258d      0f84d8000000   je 0x266b
0x00002593      bf07000000     mov edi, 7
0x00002598      4881c2980000.  add rdx, 0x98
0x0000259f      4839d6         cmp rsi, rdx
0x000025a2      75d5           jne 0x2579
0x000025a4      b901000000     mov ecx, 1
0x000025a9      be0a000000     mov esi, 0xa
0x000025ae      eb08           jmp 0x25b8
0x000025b0      31d2           xor edx, edx
0x000025b2      83c101         add ecx, 1
0x000025b5      48f7f6         div rsi
0x000025b8      4883f809       cmp rax, 9
0x000025bc      77f2           ja 0x25b0
0x000025be      39f9           cmp ecx, edi
0x000025c0      0f4ccf         cmovl ecx, edi
0x000025c3      e906fcffff     jmp 0x21ce
0x000025c8      31ff           xor edi, edi
0x000025ca      e881f5ffff     call sym.imp.close
0x000025cf      85c0           test eax, eax
0x000025d1      0f8404ffffff   je 0x24db
0x000025d7      e814f4ffff     call sym.imp.__errno_location
0x000025dc      8b30           mov esi, dword [rax]
0x000025de      488d152d5300.  lea rdx, [0x00007912]                   ; "-"
0x000025e5      bf01000000     mov edi, 1
0x000025ea      31c0           xor eax, eax
0x000025ec      e8dff6ffff     call sym.imp.error
0x000025f1      488d7c2430     lea rdi, [rsp + 0x30]
0x000025f6      e8f5370000     call sym.readtokens0_free
0x000025fb      e970feffff     jmp 0x2470
0x00002600      488d35144b00.  lea rsi, [0x0000711b]                   ; "r"
0x00002607      4889ef         mov rdi, rbp
0x0000260a      e8f1f6ffff     call sym.imp.fopen
0x0000260f      4885c0         test rax, rax
0x00002612      4889c3         mov rbx, rax
0x00002615      0f8561faffff   jne 0x207c
0x0000261b      4889ee         mov rsi, rbp
0x0000261e      bf04000000     mov edi, 4
0x00002623      e878330000     call sym.quotearg_style
0x00002628      488d35c44a00.  lea rsi, str.cannot_open__s_for_reading ; 0x70f3 ; "cannot open %s for reading"
0x0000262f      ba05000000     mov edx, 5
0x00002634      31ff           xor edi, edi
0x00002636      4889c5         mov rbp, rax
0x00002639      e842f4ffff     call sym.imp.dcgettext
0x0000263e      4889c3         mov rbx, rax
0x00002641      e8aaf3ffff     call sym.imp.__errno_location
0x00002646      8b30           mov esi, dword [rax]
0x00002648      4889e9         mov rcx, rbp
0x0000264b      4889da         mov rdx, rbx
0x0000264e      bf01000000     mov edi, 1
0x00002653      31c0           xor eax, eax
0x00002655      e876f6ffff     call sym.imp.error
0x0000265a      4863d0         movsxd rdx, eax
0x0000265d      29c3           sub ebx, eax
0x0000265f      4d8d24d4       lea r12, [r12 + rdx*8]
0x00002663      4863db         movsxd rbx, ebx
0x00002666      e934fbffff     jmp 0x219f
0x0000266b      48034238       add rax, qword [rdx + 0x38]
0x0000266f      e924ffffff     jmp 0x2598
0x00002674      0fb605987a20.  movzx eax, byte [obj.print_words]       ; [0x20a113:1]=0
0x0000267b      0fb60d927a20.  movzx ecx, byte [obj.print_lines]       ; [0x20a114:1]=0
0x00002682      01c1           add ecx, eax
0x00002684      0fb605877a20.  movzx eax, byte [obj.print_chars]       ; [0x20a112:1]=0
0x0000268b      01c1           add ecx, eax
0x0000268d      0fb6057d7a20.  movzx eax, byte [obj.print_bytes]       ; [0x20a111:1]=0
0x00002694      01c1           add ecx, eax
0x00002696      0fb605737a20.  movzx eax, byte [obj.print_linelength]  ; [0x20a110:1]=0
0x0000269d      01c1           add ecx, eax
0x0000269f      83f901         cmp ecx, 1
0x000026a2      0f857afaffff   jne 0x2122
0x000026a8      488b442408     mov rax, qword [rsp + 8]
0x000026ad      c70001000000   mov dword [rax], 1
0x000026b3      e916fbffff     jmp 0x21ce
0x000026b8      488b542408     mov rdx, qword [rsp + 8]
0x000026bd      4883c9ff       or rcx, 0xffffffffffffffff
0x000026c1      31f6           xor esi, esi
0x000026c3      31ff           xor edi, edi
0x000026c5      c6053c7a2000.  mov byte [obj.have_read_stdin], 1       ; [0x20a108:1]=0
0x000026cc      e88f040000     call sym.wc
0x000026d1      4189c4         mov r12d, eax
0x000026d4      e98cfdffff     jmp 0x2465
0x000026d9      660fefdb       pxor xmm3, xmm3
0x000026dd      f2480f2a9c24.  cvtsi2sd xmm3, qword [rsp + 0x180]
0x000026e7      f20f111c24     movsd qword [rsp], xmm3
0x000026ec      e84f170000     call sym.physmem_available
0x000026f1      f20f10157751.  movsd xmm2, qword [0x00007870]          ; [0x7870:8]=0x3fe0000000000000
0x000026f9      f20f100d6751.  movsd xmm1, qword [0x00007868]          ; [0x7868:8]=0x4164000000000000
0x00002701      f20f59c2       mulsd xmm0, xmm2
0x00002705      660f2ec1       ucomisd xmm0, xmm1
0x00002709      7719           ja 0x2724
0x0000270b      f20f11542408   movsd qword [rsp + 8], xmm2
0x00002711      e82a170000     call sym.physmem_available
0x00002716      f20f10542408   movsd xmm2, qword [rsp + 8]
0x0000271c      660f28c8       movapd xmm1, xmm0
0x00002720      f20f59ca       mulsd xmm1, xmm2
0x00002724      660f2e0c24     ucomisd xmm1, qword [rsp]
0x00002729      0f8284f9ffff   jb 0x20b3
0x0000272f      4c8d642430     lea r12, [rsp + 0x30]
0x00002734      4c89e7         mov rdi, r12
0x00002737      e844360000     call sym.readtokens0_init
0x0000273c      4c89e6         mov rsi, r12
0x0000273f      4889df         mov rdi, rbx
0x00002742      e8d9360000     call sym.readtokens0
0x00002747      84c0           test al, al
0x00002749      8844241b       mov byte [rsp + 0x1b], al
0x0000274d      0f84af000000   je 0x2802
0x00002753      4889df         mov rdi, rbx
0x00002756      e8e5410000     call sym.rpl_fclose
0x0000275b      85c0           test eax, eax
0x0000275d      0f859f000000   jne 0x2802
0x00002763      4c8b642438     mov r12, qword [rsp + 0x38]
0x00002768      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000276d      4c89e7         mov rdi, r12
0x00002770      e89b120000     call sym.argv_iter_init_argv
0x00002775      4989c5         mov r13, rax
0x00002778      e94bf9ffff     jmp 0x20c8
0x0000277d      31ff           xor edi, edi
0x0000277f      e8cc0e0000     call sym.usage
0x00002784      e827f3ffff     call sym.imp.__stack_chk_fail
0x00002789      b901000000     mov ecx, 1
0x0000278e      e95af9ffff     jmp 0x20ed
0x00002793      e868410000     call sym.xalloc_die
0x00002798      498b34c4       mov rsi, qword [r12 + rax*8]
0x0000279c      bf04000000     mov edi, 4
0x000027a1      e8fa310000     call sym.quotearg_style
0x000027a6      488d35354900.  lea rsi, str.extra_operand__s           ; 0x70e2 ; "extra operand %s"
0x000027ad      4889c3         mov rbx, rax
0x000027b0      31ff           xor edi, edi
0x000027b2      ba05000000     mov edx, 5
0x000027b7      e8c4f2ffff     call sym.imp.dcgettext
0x000027bc      4889d9         mov rcx, rbx
0x000027bf      4889c2         mov rdx, rax
0x000027c2      31f6           xor esi, esi
0x000027c4      31ff           xor edi, edi
0x000027c6      31c0           xor eax, eax
0x000027c8      e803f5ffff     call sym.imp.error
0x000027cd      488d35d44f00.  lea rsi, str.file_operands_cannot_be_combined_with___files0_from ; 0x77a8 ; "file operands cannot be combined with --files0-from"
0x000027d4      31ff           xor edi, edi
0x000027d6      ba05000000     mov edx, 5
0x000027db      e8a0f2ffff     call sym.imp.dcgettext
0x000027e0      488b3df97820.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x000027e7      488d15025600.  lea rdx, [0x00007df0]                   ; "%s\n"
0x000027ee      4889c1         mov rcx, rax
0x000027f1      be01000000     mov esi, 1
0x000027f6      31c0           xor eax, eax
0x000027f8      e873f5ffff     call sym.imp.__fprintf_chk
0x000027fd      e95df7ffff     jmp 0x1f5f
0x00002802      4889ee         mov rsi, rbp
0x00002805      bf04000000     mov edi, 4
0x0000280a      e891310000     call sym.quotearg_style
0x0000280f      488d35ca4f00.  lea rsi, str.cannot_read_file_names_from__s ; 0x77e0 ; "cannot read file names from %s"
0x00002816      4889c3         mov rbx, rax
0x00002819      ba05000000     mov edx, 5
0x0000281e      31ff           xor edi, edi
0x00002820      e85bf2ffff     call sym.imp.dcgettext
0x00002825      4889d9         mov rcx, rbx
0x00002828      4889c2         mov rdx, rax
0x0000282b      31f6           xor esi, esi
0x0000282d      bf01000000     mov edi, 1
0x00002832      31c0           xor eax, eax
0x00002834      e897f4ffff     call sym.imp.error
0x00002839      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002840      31ed           xor ebp, ebp
0x00002842      4989d1         mov r9, rdx
0x00002845      5e             pop rsi
0x00002846      4889e2         mov rdx, rsp
0x00002849      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000284d      50             push rax
0x0000284e      54             push rsp
0x0000284f      4c8d054a4700.  lea r8, sym.__libc_csu_fini             ; 0x6fa0
0x00002856      488d0dd34600.  lea rcx, sym.__libc_csu_init            ; 0x6f30 ; "AWAVI\x89\xd7AUATL\x8d%\xee* "
0x0000285d      488d3d7cf5ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1de0 ; "AWAVAUATI\x89\xf4US\x89\xfbL\x8d-J| "
0x00002864      ff155e772000   call qword [reloc.__libc_start_main]    ; [0x209fc8:8]=0
0x0000286a      f4             hlt
0x0000286b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002870      488d3d117820.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x00002877      55             push rbp
0x00002878      488d05097820.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x0000287f      4839f8         cmp rax, rdi
0x00002882      4889e5         mov rbp, rsp
0x00002885      7419           je 0x28a0
0x00002887      488b05327720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fc0:8]=0
0x0000288e      4885c0         test rax, rax
0x00002891      740d           je 0x28a0
0x00002893      5d             pop rbp
0x00002894      ffe0           jmp rax
0x00002896      662e0f1f8400.  nop word cs:[rax + rax]
0x000028a0      5d             pop rbp
0x000028a1      c3             ret
0x000028a2      0f1f4000       nop dword [rax]
0x000028a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000028b0      488d3dd17720.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x000028b7      488d35ca7720.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x20a088
0x000028be      55             push rbp
0x000028bf      4829fe         sub rsi, rdi
0x000028c2      4889e5         mov rbp, rsp
0x000028c5      48c1fe03       sar rsi, 3
0x000028c9      4889f0         mov rax, rsi
0x000028cc      48c1e83f       shr rax, 0x3f
0x000028d0      4801c6         add rsi, rax
0x000028d3      48d1fe         sar rsi, 1
0x000028d6      7418           je 0x28f0
0x000028d8      488b05017720.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fe0:8]=0
0x000028df      4885c0         test rax, rax
0x000028e2      740c           je 0x28f0
0x000028e4      5d             pop rbp
0x000028e5      ffe0           jmp rax
0x000028e7      660f1f840000.  nop word [rax + rax]
0x000028f0      5d             pop rbp
0x000028f1      c3             ret
0x000028f2      0f1f4000       nop dword [rax]
0x000028f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002900      803de1772000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00002907      752f           jne 0x2938
0x00002909      48833dd77620.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209fe8:8]=0
0x00002911      55             push rbp
0x00002912      4889e5         mov rbp, rsp
0x00002915      740c           je 0x2923
0x00002917      488b3dea7620.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x0000291e      e8adf4ffff     call 0x1dd0
0x00002923      e848ffffff     call sym.deregister_tm_clones
0x00002928      c605b9772000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x0000292f      5d             pop rbp
0x00002930      c3             ret
0x00002931      0f1f80000000.  nop dword [rax]
0x00002938      f3c3           ret
0x0000293a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002940      55             push rbp
0x00002941      4889e5         mov rbp, rsp
0x00002944      5d             pop rbp
0x00002945      e966ffffff     jmp sym.register_tm_clones
0x0000294a      660f1f440000   nop word [rax + rax]
;-- write_counts:
0x00002950      4157           push r15                                ; /src:177
0x00002952      4156           push r14
0x00002954      4989f7         mov r15, rsi
0x00002957      4155           push r13
0x00002959      4154           push r12
0x0000295b      4989d6         mov r14, rdx
0x0000295e      55             push rbp
0x0000295f      53             push rbx
0x00002960      4989cd         mov r13, rcx
0x00002963      4d89c4         mov r12, r8
0x00002966      4c89cb         mov rbx, r9
0x00002969      488d2d594900.  lea rbp, [0x000072c9]                   ; /src:179 ; "%*s"
0x00002970      4883ec28       sub rsp, 0x28                           ; /src:177
0x00002974      64488b042528.  mov rax, qword fs:[0x28]
0x0000297d      4889442418     mov qword [rsp + 0x18], rax
0x00002982      31c0           xor eax, eax
0x00002984      803d89772000.  cmp byte [obj.print_lines], 0           ; /src:182 ; [0x20a114:1]=0
0x0000298b      0f857f010000   jne 0x2b10
0x00002991      803d7b772000.  cmp byte [obj.print_words], 0           ; /src:187 ; [0x20a113:1]=0
0x00002998      0f8542010000   jne 0x2ae0
0x0000299e      803d6d772000.  cmp byte [obj.print_chars], 0           ; /src:192 ; [0x20a112:1]=0
0x000029a5      0f8505010000   jne 0x2ab0
0x000029ab      803d5f772000.  cmp byte [obj.print_bytes], 0           ; /src:197 ; [0x20a111:1]=0
0x000029b2      0f85c8000000   jne 0x2a80
0x000029b8      803d51772000.  cmp byte [obj.print_linelength], 0      ; /src:202 ; [0x20a110:1]=0
0x000029bf      0f858b000000   jne 0x2a50
0x000029c5      4885db         test rbx, rbx                           ; /src:206
0x000029c8      743a           je 0x2a04
0x000029ca      be0a000000     mov esi, 0xa                            ; /src:207
0x000029cf      4889df         mov rdi, rbx
0x000029d2      e809f1ffff     call sym.imp.strchr
0x000029d7      4885c0         test rax, rax
0x000029da      7412           je 0x29ee
0x000029dc      4889da         mov rdx, rbx
0x000029df      be03000000     mov esi, 3
0x000029e4      31ff           xor edi, edi
0x000029e6      e8b5300000     call sym.quotearg_n_style_colon
0x000029eb      4889c3         mov rbx, rax
0x000029ee      488d35974e00.  lea rsi, [0x0000788c]                   ; .//ib:104 ; " %s"
0x000029f5      4889da         mov rdx, rbx
0x000029f8      bf01000000     mov edi, 1
0x000029fd      31c0           xor eax, eax
0x000029ff      e88cf2ffff     call sym.imp.__printf_chk
0x00002a04      488b3d9d7620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/src/.c:107 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002a0b      488b4728       mov rax, qword [rdi + 0x28]
0x00002a0f      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a13      0f8327010000   jae 0x2b40
0x00002a19      488d5001       lea rdx, [rax + 1]
0x00002a1d      48895728       mov qword [rdi + 0x28], rdx
0x00002a21      c6000a         mov byte [rax], 0xa
0x00002a24      488b442418     mov rax, qword [rsp + 0x18]
0x00002a29      644833042528.  xor rax, qword fs:[0x28]
0x00002a32      0f8517010000   jne 0x2b4f
0x00002a38      4883c428       add rsp, 0x28
0x00002a3c      5b             pop rbx
0x00002a3d      5d             pop rbp
0x00002a3e      415c           pop r12
0x00002a40      415d           pop r13
0x00002a42      415e           pop r14
0x00002a44      415f           pop r15
0x00002a46      c3             ret                                     ; .//ib:-152
0x00002a47      660f1f840000.  nop word [rax + rax]
0x00002a50      4889e6         mov rsi, rsp
0x00002a53      4c89e7         mov rdi, r12
0x00002a56      e805120000     call sym.umaxtostr
0x00002a5b      8b15ab762000   mov edx, dword [obj.number_width]       ; [0x20a10c:4]=0
0x00002a61      4889c1         mov rcx, rax
0x00002a64      4889ee         mov rsi, rbp
0x00002a67      bf01000000     mov edi, 1
0x00002a6c      31c0           xor eax, eax
0x00002a6e      e81df2ffff     call sym.imp.__printf_chk
0x00002a73      e94dffffff     jmp 0x29c5
0x00002a78      0f1f84000000.  nop dword [rax + rax]
0x00002a80      4889e6         mov rsi, rsp
0x00002a83      4c89ef         mov rdi, r13
0x00002a86      e8d5110000     call sym.umaxtostr
0x00002a8b      8b157b762000   mov edx, dword [obj.number_width]       ; [0x20a10c:4]=0
0x00002a91      4889c1         mov rcx, rax
0x00002a94      4889ee         mov rsi, rbp
0x00002a97      bf01000000     mov edi, 1
0x00002a9c      31c0           xor eax, eax
0x00002a9e      488d2d234800.  lea rbp, obj.format_sp_int.7975         ; 0x72c8 ; " %*s"
0x00002aa5      e8e6f1ffff     call sym.imp.__printf_chk
0x00002aaa      e909ffffff     jmp 0x29b8
0x00002aaf      90             nop
0x00002ab0      4889e6         mov rsi, rsp
0x00002ab3      4c89f7         mov rdi, r14
0x00002ab6      e8a5110000     call sym.umaxtostr
0x00002abb      8b154b762000   mov edx, dword [obj.number_width]       ; [0x20a10c:4]=0
0x00002ac1      4889c1         mov rcx, rax
0x00002ac4      4889ee         mov rsi, rbp
0x00002ac7      bf01000000     mov edi, 1
0x00002acc      31c0           xor eax, eax
0x00002ace      488d2df34700.  lea rbp, obj.format_sp_int.7975         ; 0x72c8 ; " %*s"
0x00002ad5      e8b6f1ffff     call sym.imp.__printf_chk
0x00002ada      e9ccfeffff     jmp 0x29ab
0x00002adf      90             nop
0x00002ae0      4889e6         mov rsi, rsp
0x00002ae3      4c89ff         mov rdi, r15
0x00002ae6      e875110000     call sym.umaxtostr
0x00002aeb      8b151b762000   mov edx, dword [obj.number_width]       ; [0x20a10c:4]=0
0x00002af1      4889c1         mov rcx, rax
0x00002af4      4889ee         mov rsi, rbp
0x00002af7      bf01000000     mov edi, 1
0x00002afc      31c0           xor eax, eax
0x00002afe      488d2dc34700.  lea rbp, obj.format_sp_int.7975         ; 0x72c8 ; " %*s"
0x00002b05      e886f1ffff     call sym.imp.__printf_chk
0x00002b0a      e98ffeffff     jmp 0x299e
0x00002b0f      90             nop
0x00002b10      4889e6         mov rsi, rsp
0x00002b13      e848110000     call sym.umaxtostr
0x00002b18      8b15ee752000   mov edx, dword [obj.number_width]       ; [0x20a10c:4]=0
0x00002b1e      4889c1         mov rcx, rax
0x00002b21      4889ee         mov rsi, rbp
0x00002b24      bf01000000     mov edi, 1
0x00002b29      31c0           xor eax, eax
0x00002b2b      4883ed01       sub rbp, 1
0x00002b2f      e85cf1ffff     call sym.imp.__printf_chk
0x00002b34      e958feffff     jmp 0x2991
0x00002b39      0f1f80000000.  nop dword [rax]
0x00002b40      be0a000000     mov esi, 0xa
0x00002b45      e8a6efffff     call sym.imp.__overflow
0x00002b4a      e9d5feffff     jmp 0x2a24
0x00002b4f      e85cefffff     call sym.imp.__stack_chk_fail
0x00002b54      6690           nop
0x00002b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- wc:
0x00002b60      4157           push r15
0x00002b62      4156           push r14
0x00002b64      4155           push r13
0x00002b66      4154           push r12
0x00002b68      55             push rbp
0x00002b69      53             push rbx
0x00002b6a      4889cd         mov rbp, rcx
0x00002b6d      4889d3         mov rbx, rdx
0x00002b70      4881ec784000.  sub rsp, 0x4078
0x00002b77      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00002b80      48898c246840.  mov qword [rsp + 0x4068], rcx
0x00002b88      31c9           xor ecx, ecx
0x00002b8a      4885f6         test rsi, rsi
0x00002b8d      897c2448       mov dword [rsp + 0x48], edi
0x00002b91      4889742438     mov qword [rsp + 0x38], rsi
0x00002b96      4889742440     mov qword [rsp + 0x40], rsi
0x00002b9b      0f84e7080000   je 0x3488
0x00002ba1      e8eaeeffff     call sym.imp.__ctype_get_mb_cur_max
0x00002ba6      4883f801       cmp rax, 1
0x00002baa      0fb615607520.  movzx edx, byte [obj.print_bytes]       ; [0x20a111:1]=0
0x00002bb1      0f8679030000   jbe 0x2f30
0x00002bb7      0fb605547520.  movzx eax, byte [obj.print_chars]       ; [0x20a112:1]=0
0x00002bbe      4189c4         mov r12d, eax
0x00002bc1      8844244e       mov byte [rsp + 0x4e], al
0x00002bc5      4183f401       xor r12d, 1
0x00002bc9      4121d4         and r12d, edx
0x00002bcc      803d40752000.  cmp byte [obj.print_words], 0           ; [0x20a113:1]=0
0x00002bd3      0f8507010000   jne 0x2ce0
0x00002bd9      440fb63d2f75.  movzx r15d, byte [obj.print_linelength] ; [0x20a110:1]=0
0x00002be1      4584ff         test r15b, r15b
0x00002be4      0f85f6000000   jne 0x2ce0
0x00002bea      80fa01         cmp dl, 1
0x00002bed      0f8506020000   jne 0x2df9
0x00002bf3      807c244e00     cmp byte [rsp + 0x4e], 0
0x00002bf8      0f85fb010000   jne 0x2df9
0x00002bfe      803d0f752000.  cmp byte [obj.print_lines], 0           ; [0x20a114:1]=0
0x00002c05      0f85ee010000   jne 0x2df9
0x00002c0b      4584e4         test r12b, r12b
0x00002c0e      0f8414020000   je 0x2e28
0x00002c14      8b03           mov eax, dword [rbx]
0x00002c16      85c0           test eax, eax
0x00002c18      0f8f4b060000   jg 0x3269
0x00002c1e      85c0           test eax, eax
0x00002c20      0f855c060000   jne 0x3282
0x00002c26      8b4320         mov eax, dword [rbx + 0x20]
0x00002c29      2500d00000     and eax, 0xd000
0x00002c2e      3d00800000     cmp eax, 0x8000
0x00002c33      0f8549060000   jne 0x3282
0x00002c39      4c8b6338       mov r12, qword [rbx + 0x38]
0x00002c3d      4d85e4         test r12, r12
0x00002c40      0f883c060000   js 0x3282
0x00002c46      4883fdff       cmp rbp, 0xffffffffffffffff
0x00002c4a      4c89642418     mov qword [rsp + 0x18], r12
0x00002c4f      4c8b2daa7420.  mov r13, qword [obj.page_size]          ; [0x20a100:8]=0
0x00002c56      0f847f090000   je 0x35db
0x00002c5c      31d2           xor edx, edx
0x00002c5e      4c89e0         mov rax, r12
0x00002c61      49f7f5         div r13
0x00002c64      4885d2         test rdx, rdx
0x00002c67      0f8569060000   jne 0x32d6
0x00002c6d      be01000000     mov esi, 1
0x00002c72      31ed           xor ebp, ebp
0x00002c74      488b4340       mov rax, qword [rbx + 0x40]
0x00002c78      48baffffffff.  movabs rdx, 0x1fffffffffffffff          ; 2305843009213693951
0x00002c82      488d48ff       lea rcx, [rax - 1]
0x00002c86      4883c001       add rax, 1
0x00002c8a      4839d1         cmp rcx, rdx
0x00002c8d      b901020000     mov ecx, 0x201
0x00002c92      480f46c8       cmovbe rcx, rax
0x00002c96      4c89e0         mov rax, r12
0x00002c99      31d2           xor edx, edx
0x00002c9b      48f7f1         div rcx
0x00002c9e      4929d4         sub r12, rdx
0x00002ca1      4939ec         cmp r12, rbp
0x00002ca4      0f8ed8050000   jle 0x3282
0x00002caa      4084f6         test sil, sil
0x00002cad      0f84cf050000   je 0x3282
0x00002cb3      8b7c2448       mov edi, dword [rsp + 0x48]
0x00002cb7      ba01000000     mov edx, 1
0x00002cbc      4c89e6         mov rsi, r12
0x00002cbf      e84ceeffff     call sym.imp.lseek
0x00002cc4      4885c0         test rax, rax
0x00002cc7      0f88b5050000   js 0x3282
0x00002ccd      4929ec         sub r12, rbp
0x00002cd0      4c89642418     mov qword [rsp + 0x18], r12
0x00002cd5      e9b1050000     jmp 0x328b
0x00002cda      660f1f440000   nop word [rax + rax]
0x00002ce0      8b7c2448       mov edi, dword [rsp + 0x48]
0x00002ce4      b902000000     mov ecx, 2
0x00002ce9      31d2           xor edx, edx
0x00002ceb      31f6           xor esi, esi
0x00002ced      e82e0f0000     call sym.fdadvise
0x00002cf2      e899edffff     call sym.imp.__ctype_get_mb_cur_max
0x00002cf7      4883f801       cmp rax, 1
0x00002cfb      0f860e040000   jbe 0x310f
0x00002d01      488d442460     lea rax, [rsp + 0x60]
0x00002d06      4531e4         xor r12d, r12d
0x00002d09      48c744245800.  mov qword [rsp + 0x58], 0
0x00002d12      31c9           xor ecx, ecx
0x00002d14      4531f6         xor r14d, r14d
0x00002d17      31db           xor ebx, ebx
0x00002d19      48c744242800.  mov qword [rsp + 0x28], 0
0x00002d22      48c744241800.  mov qword [rsp + 0x18], 0
0x00002d2b      31ed           xor ebp, ebp
0x00002d2d      48c744242000.  mov qword [rsp + 0x20], 0
0x00002d36      48c704240000.  mov qword [rsp], 0
0x00002d3e      4d89e5         mov r13, r12
0x00002d41      4889442430     mov qword [rsp + 0x30], rax
0x00002d46      662e0f1f8400.  nop word cs:[rax + rax]
0x00002d50      488b442430     mov rax, qword [rsp + 0x30]
0x00002d55      8b7c2448       mov edi, dword [rsp + 0x48]
0x00002d59      ba00400000     mov edx, sym.gettext_quote.part.1       ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x00002d5e      4c29ea         sub rdx, r13
0x00002d61      884c2408       mov byte [rsp + 8], cl
0x00002d65      4a8d3428       lea rsi, [rax + r13]
0x00002d69      e8c2320000     call sym.safe_read
0x00002d6e      4885c0         test rax, rax
0x00002d71      0fb64c2408     movzx ecx, byte [rsp + 8]
0x00002d76      0f844c070000   je 0x34c8
0x00002d7c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002d80      0f8462070000   je 0x34e8
0x00002d86      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00002d8b      4901c5         add r13, rax
0x00002d8e      4801442418     add qword [rsp + 0x18], rax
0x00002d93      488d442458     lea rax, [rsp + 0x58]
0x00002d98      4d89fc         mov r12, r15
0x00002d9b      4889442408     mov qword [rsp + 8], rax
0x00002da0      4d89ef         mov r15, r13
0x00002da3      0f1f440000     nop dword [rax + rax]
0x00002da8      84c9           test cl, cl
0x00002daa      0f8548050000   jne 0x32f8
0x00002db0      450fb62c24     movzx r13d, byte [r12]
0x00002db5      488d35e44a00.  lea rsi, obj.is_basic_table             ; 0x78a0
0x00002dbc      4489e8         mov eax, r13d
0x00002dbf      c0e805         shr al, 5
0x00002dc2      83e007         and eax, 7
0x00002dc5      8b0486         mov eax, dword [rsi + rax*4]
0x00002dc8      440fa3e8       bt eax, r13d
0x00002dcc      0f8326050000   jae 0x32f8
0x00002dd2      410fbec5       movsx eax, r13b
0x00002dd6      89442454       mov dword [rsp + 0x54], eax
0x00002dda      418d45f7       lea eax, [r13 - 9]
0x00002dde      3c17           cmp al, 0x17
0x00002de0      0f87ea020000   ja 0x30d0
0x00002de6      488d35bb4300.  lea rsi, [0x000071a8]
0x00002ded      0fb6c0         movzx eax, al
0x00002df0      48630486       movsxd rax, dword [rsi + rax*4]
0x00002df4      4801f0         add rax, rsi
0x00002df7      ffe0           jmp rax
0x00002df9      8b7c2448       mov edi, dword [rsp + 0x48]
0x00002dfd      31d2           xor edx, edx
0x00002dff      31f6           xor esi, esi
0x00002e01      b902000000     mov ecx, 2
0x00002e06      e8150e0000     call sym.fdadvise
0x00002e0b      4584e4         test r12b, r12b
0x00002e0e      740d           je 0x2e1d
0x00002e10      803dfd722000.  cmp byte [obj.print_lines], 0           ; [0x20a114:1]=0
0x00002e17      0f84f7fdffff   je 0x2c14
0x00002e1d      807c244e00     cmp byte [rsp + 0x4e], 0
0x00002e22      0f85cafeffff   jne 0x2cf2
0x00002e28      488d442460     lea rax, [rsp + 0x60]
0x00002e2d      4531ed         xor r13d, r13d
0x00002e30      44887c2408     mov byte [rsp + 8], r15b
0x00002e35      48c744241800.  mov qword [rsp + 0x18], 0
0x00002e3e      4589ef         mov r15d, r13d
0x00002e41      48c704240000.  mov qword [rsp], 0
0x00002e49      49be89888888.  movabs r14, 0x8888888888888889
0x00002e53      4989c5         mov r13, rax
0x00002e56      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e60      8b7c2448       mov edi, dword [rsp + 0x48]
0x00002e64      ba00400000     mov edx, sym.gettext_quote.part.1       ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x00002e69      4c89ee         mov rsi, r13
0x00002e6c      e8bf310000     call sym.safe_read
0x00002e71      4885c0         test rax, rax
0x00002e74      0f84d6000000   je 0x2f50
0x00002e7a      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002e7e      0f846c010000   je 0x2ff0
0x00002e84      4801442418     add qword [rsp + 0x18], rax
0x00002e89      498d6c0500     lea rbp, [r13 + rax]
0x00002e8e      49f7e6         mul r14
0x00002e91      4889d3         mov rbx, rdx
0x00002e94      48c1eb03       shr rbx, 3
0x00002e98      4584ff         test r15b, r15b
0x00002e9b      744b           je 0x2ee8
0x00002e9d      4c8b2424       mov r12, qword [rsp]
0x00002ea1      4c89ef         mov rdi, r13
0x00002ea4      eb12           jmp 0x2eb8
0x00002ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002eb0      488d7801       lea rdi, [rax + 1]
0x00002eb4      4983c401       add r12, 1
0x00002eb8      4889ea         mov rdx, rbp
0x00002ebb      be0a000000     mov esi, 0xa
0x00002ec0      4829fa         sub rdx, rdi
0x00002ec3      e8a8ecffff     call sym.imp.memchr
0x00002ec8      4885c0         test rax, rax
0x00002ecb      75e3           jne 0x2eb0
0x00002ecd      4c89e0         mov rax, r12
0x00002ed0      482b0424       sub rax, qword [rsp]
0x00002ed4      4c892424       mov qword [rsp], r12
0x00002ed8      4839d8         cmp rax, rbx
0x00002edb      410f96c7       setbe r15b
0x00002edf      e97cffffff     jmp 0x2e60
0x00002ee4      0f1f4000       nop dword [rax]
0x00002ee8      4c39ed         cmp rbp, r13
0x00002eeb      0f8447010000   je 0x3038
0x00002ef1      488b1424       mov rdx, qword [rsp]
0x00002ef5      4c89e8         mov rax, r13
0x00002ef8      0f1f84000000.  nop dword [rax + rax]
0x00002f00      4883c001       add rax, 1
0x00002f04      31c9           xor ecx, ecx
0x00002f06      8078ff0a       cmp byte [rax - 1], 0xa
0x00002f0a      0f94c1         sete cl
0x00002f0d      4801ca         add rdx, rcx
0x00002f10      4839c5         cmp rbp, rax
0x00002f13      75eb           jne 0x2f00
0x00002f15      4889d0         mov rax, rdx
0x00002f18      482b0424       sub rax, qword [rsp]
0x00002f1c      48891424       mov qword [rsp], rdx
0x00002f20      4839d8         cmp rax, rbx
0x00002f23      410f96c7       setbe r15b
0x00002f27      e934ffffff     jmp 0x2e60
0x00002f2c      0f1f4000       nop dword [rax]
0x00002f30      0fb605db7120.  movzx eax, byte [obj.print_chars]       ; [0x20a112:1]=0
0x00002f37      84d2           test dl, dl
0x00002f39      c644244e00     mov byte [rsp + 0x4e], 0
0x00002f3e      0f44d0         cmove edx, eax
0x00002f41      4189d4         mov r12d, edx
0x00002f44      e983fcffff     jmp 0x2bcc
0x00002f49      0f1f80000000.  nop dword [rax]
0x00002f50      4531f6         xor r14d, r14d
0x00002f53      31ed           xor ebp, ebp
0x00002f55      4531e4         xor r12d, r12d
0x00002f58      41bf01000000   mov r15d, 1
0x00002f5e      0fb644244e     movzx eax, byte [rsp + 0x4e]
0x00002f63      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002f68      4d89f0         mov r8, r14
0x00002f6b      3805a1712000   cmp byte [obj.print_chars], al          ; [0x20a112:1]=0
0x00002f71      4c8b2c24       mov r13, qword [rsp]
0x00002f75      4c89e6         mov rsi, r12
0x00002f78      4c8b4c2438     mov r9, qword [rsp + 0x38]
0x00002f7d      4889d9         mov rcx, rbx
0x00002f80      4c89ef         mov rdi, r13
0x00002f83      480f47eb       cmova rbp, rbx
0x00002f87      4889ea         mov rdx, rbp
0x00002f8a      e8c1f9ffff     call sym.write_counts
0x00002f8f      4c012da27120.  add qword [obj.total_lines], r13        ; [0x20a138:8]=0
0x00002f96      4c0125937120.  add qword [obj.total_words], r12        ; [0x20a130:8]=0
0x00002f9d      48012d847120.  add qword [obj.total_chars], rbp        ; [0x20a128:8]=0
0x00002fa4      48011d757120.  add qword [obj.total_bytes], rbx        ; [0x20a120:8]=0
0x00002fab      4c3935667120.  cmp qword [obj.max_line_length], r14    ; [0x20a118:8]=0
0x00002fb2      7307           jae 0x2fbb
0x00002fb4      4c89355d7120.  mov qword [obj.max_line_length], r14    ; [0x20a118:8]=0
0x00002fbb      488b8c246840.  mov rcx, qword [rsp + 0x4068]
0x00002fc3      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002fcc      4489f8         mov eax, r15d
0x00002fcf      0f8551060000   jne 0x3626
0x00002fd5      4881c4784000.  add rsp, 0x4078
0x00002fdc      5b             pop rbx
0x00002fdd      5d             pop rbp
0x00002fde      415c           pop r12
0x00002fe0      415d           pop r13
0x00002fe2      415e           pop r14
0x00002fe4      415f           pop r15
0x00002fe6      c3             ret
0x00002fe7      660f1f840000.  nop word [rax + rax]
0x00002ff0      488b542440     mov rdx, qword [rsp + 0x40]
0x00002ff5      be03000000     mov esi, 3
0x00002ffa      31ff           xor edi, edi
0x00002ffc      440fb67c2408   movzx r15d, byte [rsp + 8]
0x00003002      4531f6         xor r14d, r14d
0x00003005      31ed           xor ebp, ebp
0x00003007      4531e4         xor r12d, r12d
0x0000300a      e8912a0000     call sym.quotearg_n_style_colon
0x0000300f      4889c3         mov rbx, rax
0x00003012      e8d9e9ffff     call sym.imp.__errno_location
0x00003017      8b30           mov esi, dword [rax]
0x00003019      488d156d4800.  lea rdx, [0x0000788d]                   ; "%s"
0x00003020      4889d9         mov rcx, rbx
0x00003023      31ff           xor edi, edi
0x00003025      31c0           xor eax, eax
0x00003027      e8a4ecffff     call sym.imp.error
0x0000302c      e92dffffff     jmp 0x2f5e
0x00003031      0f1f80000000.  nop dword [rax]
0x00003038      41bf01000000   mov r15d, 1
0x0000303e      e91dfeffff     jmp 0x2e60
0x00003043      0f1f440000     nop dword [rax + rax]
0x00003048      ba01000000     mov edx, 1
0x0000304d      4983c601       add r14, 1
0x00003051      0f1f80000000.  nop dword [rax]
0x00003058      48015c2420     add qword [rsp + 0x20], rbx
0x0000305d      31db           xor ebx, ebx
0x0000305f      4901d4         add r12, rdx
0x00003062      4929d7         sub r15, rdx
0x00003065      4883c501       add rbp, 1
0x00003069      4d85ff         test r15, r15
0x0000306c      0f8536fdffff   jne 0x2da8
0x00003072      4d89fd         mov r13, r15
0x00003075      e9d6fcffff     jmp 0x2d50
0x0000307a      660f1f440000   nop word [rax + rax]
0x00003080      ba01000000     mov edx, 1
0x00003085      488b442428     mov rax, qword [rsp + 0x28]
0x0000308a      4c39f0         cmp rax, r14
0x0000308d      4c0f43f0       cmovae r14, rax
0x00003091      4c89742428     mov qword [rsp + 0x28], r14
0x00003096      4531f6         xor r14d, r14d
0x00003099      ebbd           jmp 0x3058
0x0000309b      0f1f440000     nop dword [rax + rax]
0x000030a0      ba01000000     mov edx, 1
0x000030a5      ebb1           jmp 0x3058
0x000030a7      660f1f840000.  nop word [rax + rax]
0x000030b0      ba01000000     mov edx, 1
0x000030b5      4883042401     add qword [rsp], 1
0x000030ba      ebc9           jmp 0x3085
0x000030bc      0f1f4000       nop dword [rax]
0x000030c0      ba01000000     mov edx, 1
0x000030c5      4983e6f8       and r14, 0xfffffffffffffff8
0x000030c9      4983c608       add r14, 8
0x000030cd      eb89           jmp 0x3058
0x000030cf      90             nop
0x000030d0      884c2410       mov byte [rsp + 0x10], cl
0x000030d4      450fb6ed       movzx r13d, r13b
0x000030d8      e8d3ecffff     call sym.imp.__ctype_b_loc
0x000030dd      488b00         mov rax, qword [rax]
0x000030e0      ba01000000     mov edx, 1
0x000030e5      0fb64c2410     movzx ecx, byte [rsp + 0x10]
0x000030ea      420fb70468     movzx eax, word [rax + r13*2]
0x000030ef      f6c440         test ah, 0x40                           ; segment.PHDR
0x000030f2      0f8467ffffff   je 0x305f
0x000030f8      4983c601       add r14, 1
0x000030fc      f6c420         test ah, 0x20                           ; "@"
0x000030ff      0f8553ffffff   jne 0x3058
0x00003105      bb01000000     mov ebx, 1
0x0000310a      e950ffffff     jmp 0x305f
0x0000310f      488d442460     lea rax, [rsp + 0x60]
0x00003114      31db           xor ebx, ebx
0x00003116      31ed           xor ebp, ebp
0x00003118      4c8d3de94000.  lea r15, [0x00007208]
0x0000311f      440fb6eb       movzx r13d, bl
0x00003123      48c744241800.  mov qword [rsp + 0x18], 0
0x0000312c      4531e4         xor r12d, r12d
0x0000312f      48c704240000.  mov qword [rsp], 0
0x00003137      4889442430     mov qword [rsp + 0x30], rax
0x0000313c      4889eb         mov rbx, rbp
0x0000313f      90             nop
0x00003140      488b742430     mov rsi, qword [rsp + 0x30]
0x00003145      8b7c2448       mov edi, dword [rsp + 0x48]
0x00003149      ba00400000     mov edx, sym.gettext_quote.part.1       ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x0000314e      e8dd2e0000     call sym.safe_read
0x00003153      4885c0         test rax, rax
0x00003156      0f84d0030000   je 0x352c
0x0000315c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003160      0f84ed030000   je 0x3553
0x00003166      4c8b742430     mov r14, qword [rsp + 0x30]
0x0000316b      4801442418     add qword [rsp + 0x18], rax
0x00003170      4889ea         mov rdx, rbp
0x00003173      4889dd         mov rbp, rbx
0x00003176      4d8d1406       lea r10, [r14 + rax]
0x0000317a      660f1f440000   nop word [rax + rax]
0x00003180      4983c601       add r14, 1
0x00003184      410fb65eff     movzx ebx, byte [r14 - 1]
0x00003189      8d43f7         lea eax, [rbx - 9]
0x0000318c      3c17           cmp al, 0x17
0x0000318e      7750           ja 0x31e0
0x00003190      0fb6c0         movzx eax, al
0x00003193      49630487       movsxd rax, dword [r15 + rax*4]
0x00003197      4c01f8         add rax, r15
0x0000319a      ffe0           jmp rax
0x0000319c      0f1f4000       nop dword [rax]
0x000031a0      4883042401     add qword [rsp], 1
0x000031a5      4839ea         cmp rdx, rbp
0x000031a8      480f42d5       cmovb rdx, rbp
0x000031ac      31ed           xor ebp, ebp
0x000031ae      4d01ec         add r12, r13
0x000031b1      4531ed         xor r13d, r13d
0x000031b4      4d39f2         cmp r10, r14
0x000031b7      75c7           jne 0x3180
0x000031b9      4889eb         mov rbx, rbp
0x000031bc      4889d5         mov rbp, rdx
0x000031bf      e97cffffff     jmp 0x3140
0x000031c4      0f1f4000       nop dword [rax]
0x000031c8      4883e5f8       and rbp, 0xfffffffffffffff8
0x000031cc      4883c508       add rbp, 8
0x000031d0      ebdc           jmp 0x31ae
0x000031d2      660f1f440000   nop word [rax + rax]
0x000031d8      4883c501       add rbp, 1
0x000031dc      ebd0           jmp 0x31ae
0x000031de      6690           nop
0x000031e0      4889542410     mov qword [rsp + 0x10], rdx
0x000031e5      4c89542408     mov qword [rsp + 8], r10
0x000031ea      e8c1ebffff     call sym.imp.__ctype_b_loc
0x000031ef      488b30         mov rsi, qword [rax]
0x000031f2      0fb6cb         movzx ecx, bl
0x000031f5      4c8b542408     mov r10, qword [rsp + 8]
0x000031fa      488b542410     mov rdx, qword [rsp + 0x10]
0x000031ff      0fb7044e       movzx eax, word [rsi + rcx*2]
0x00003203      f6c440         test ah, 0x40                           ; segment.PHDR
0x00003206      74ac           je 0x31b4
0x00003208      4883c501       add rbp, 1
0x0000320c      f6c420         test ah, 0x20                           ; "@"
0x0000320f      759d           jne 0x31ae
0x00003211      0fb6fb         movzx edi, bl
0x00003214      e8a7eaffff     call sym.imp.btowc
0x00003219      0fb60dd86e20.  movzx ecx, byte [obj.posixly_correct]   ; [0x20a0f8:1]=0
0x00003220      4c8b542408     mov r10, qword [rsp + 8]
0x00003225      488b542410     mov rdx, qword [rsp + 0x10]
0x0000322a      84c9           test cl, cl
0x0000322c      0f85f1020000   jne 0x3523
0x00003232      3da0000000     cmp eax, 0xa0
0x00003237      0f8471ffffff   je 0x31ae
0x0000323d      3d07200000     cmp eax, 0x2007
0x00003242      0f8466ffffff   je 0x31ae
0x00003248      3d2f200000     cmp eax, 0x202f                         ; "u\x15\xc6\x05\u0640 "
0x0000324d      0f845bffffff   je 0x31ae
0x00003253      3d60200000     cmp eax, 0x2060                         ; "5\xadX"
0x00003258      0f8450ffffff   je 0x31ae
0x0000325e      41bd01000000   mov r13d, 1
0x00003264      e94bffffff     jmp 0x31b4
0x00003269      8b742448       mov esi, dword [rsp + 0x48]
0x0000326d      488d5308       lea rdx, [rbx + 8]
0x00003271      bf01000000     mov edi, 1
0x00003276      e8d5e9ffff     call sym.imp.__fxstat
0x0000327b      8903           mov dword [rbx], eax
0x0000327d      e99cf9ffff     jmp 0x2c1e
0x00003282      48c744241800.  mov qword [rsp + 0x18], 0
0x0000328b      8b6c2448       mov ebp, dword [rsp + 0x48]
0x0000328f      b902000000     mov ecx, 2
0x00003294      31d2           xor edx, edx
0x00003296      31f6           xor esi, esi
0x00003298      4c8d642460     lea r12, [rsp + 0x60]
0x0000329d      89ef           mov edi, ebp
0x0000329f      e87c090000     call sym.fdadvise
0x000032a4      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000032a9      eb12           jmp 0x32bd
0x000032ab      0f1f440000     nop dword [rax + rax]
0x000032b0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000032b4      0f84d9020000   je 0x3593
0x000032ba      4801c3         add rbx, rax
0x000032bd      ba00400000     mov edx, sym.gettext_quote.part.1       ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x000032c2      4c89e6         mov rsi, r12
0x000032c5      89ef           mov edi, ebp
0x000032c7      e8642d0000     call sym.safe_read
0x000032cc      4885c0         test rax, rax
0x000032cf      75df           jne 0x32b0
0x000032d1      48895c2418     mov qword [rsp + 0x18], rbx
0x000032d6      4531f6         xor r14d, r14d
0x000032d9      31ed           xor ebp, ebp
0x000032db      4531e4         xor r12d, r12d
0x000032de      48c704240000.  mov qword [rsp], 0
0x000032e6      41bf01000000   mov r15d, 1
0x000032ec      e96dfcffff     jmp 0x2f5e
0x000032f1      0f1f80000000.  nop dword [rax]
0x000032f8      488b4c2408     mov rcx, qword [rsp + 8]
0x000032fd      488d7c2454     lea rdi, [rsp + 0x54]
0x00003302      4c89fa         mov rdx, r15
0x00003305      4c89e6         mov rsi, r12
0x00003308      4c8b6c2458     mov r13, qword [rsp + 0x58]
0x0000330d      e84e370000     call sym.rpl_mbrtowc
0x00003312      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003316      0f8424010000   je 0x3440
0x0000331c      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003320      0f8402010000   je 0x3428
0x00003326      488b7c2408     mov rdi, qword [rsp + 8]
0x0000332b      4889442410     mov qword [rsp + 0x10], rax
0x00003330      e84beaffff     call sym.imp.mbsinit
0x00003335      488b542410     mov rdx, qword [rsp + 0x10]
0x0000333a      85c0           test eax, eax
0x0000333c      0f94c1         sete cl
0x0000333f      4885d2         test rdx, rdx
0x00003342      0f85b8000000   jne 0x3400
0x00003348      c74424540000.  mov dword [rsp + 0x54], 0
0x00003350      31ff           xor edi, edi
0x00003352      4531ed         xor r13d, r13d
0x00003355      ba01000000     mov edx, 1
0x0000335a      884c244f       mov byte [rsp + 0x4f], cl
0x0000335e      4889542410     mov qword [rsp + 0x10], rdx
0x00003363      e828eaffff     call sym.imp.iswprint
0x00003368      85c0           test eax, eax
0x0000336a      488b542410     mov rdx, qword [rsp + 0x10]
0x0000336f      0fb64c244f     movzx ecx, byte [rsp + 0x4f]
0x00003374      0f84e5fcffff   je 0x305f
0x0000337a      803d8f6d2000.  cmp byte [obj.print_linelength], 0      ; [0x20a110:1]=0
0x00003381      0f851e010000   jne 0x34a5
0x00003387      448b6c2454     mov r13d, dword [rsp + 0x54]
0x0000338c      884c244f       mov byte [rsp + 0x4f], cl
0x00003390      4889542410     mov qword [rsp + 0x10], rdx
0x00003395      4489ef         mov edi, r13d
0x00003398      e813e9ffff     call sym.imp.iswspace
0x0000339d      85c0           test eax, eax
0x0000339f      488b542410     mov rdx, qword [rsp + 0x10]
0x000033a4      0fb64c244f     movzx ecx, byte [rsp + 0x4f]
0x000033a9      0f85a9fcffff   jne 0x3058
0x000033af      0fb605426d20.  movzx eax, byte [obj.posixly_correct]   ; [0x20a0f8:1]=0
0x000033b6      84c0           test al, al
0x000033b8      0f855d010000   jne 0x351b
0x000033be      4181fda00000.  cmp r13d, 0xa0
0x000033c5      0f848dfcffff   je 0x3058
0x000033cb      4181fd072000.  cmp r13d, 0x2007
0x000033d2      0f8480fcffff   je 0x3058
0x000033d8      4181fd2f2000.  cmp r13d, 0x202f                        ; "u\x15\xc6\x05\u0640 "
0x000033df      0f8473fcffff   je 0x3058
0x000033e5      4181fd602000.  cmp r13d, 0x2060                        ; "5\xadX"
0x000033ec      0f8513fdffff   jne 0x3105
0x000033f2      e961fcffff     jmp 0x3058
0x000033f7      660f1f840000.  nop word [rax + rax]
0x00003400      448b6c2454     mov r13d, dword [rsp + 0x54]
0x00003405      418d45f7       lea eax, [r13 - 9]
0x00003409      83f817         cmp eax, 0x17
0x0000340c      0f8732020000   ja 0x3644
0x00003412      488d354f3e00.  lea rsi, [0x00007268]                   ; "]\xbe\xff\xffM\xbe\xff\xff\xf0\xbd\xff\xff\x1d\xbe\xff\xff\x1d\xbe\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xdc\xc3\xff\xff\xe5\xbd\xff\xff %*s"
0x00003419      48630486       movsxd rax, dword [rsi + rax*4]
0x0000341d      4801f0         add rax, rsi
0x00003420      ffe0           jmp rax
0x00003422      660f1f440000   nop word [rax + rax]
0x00003428      4983c401       add r12, 1
0x0000342c      4983ef01       sub r15, 1
0x00003430      b901000000     mov ecx, 1
0x00003435      e92ffcffff     jmp 0x3069
0x0000343a      660f1f440000   nop word [rax + rax]
0x00003440      4c89e8         mov rax, r13
0x00003443      4d89fd         mov r13, r15
0x00003446      4d89e7         mov r15, r12
0x00003449      4d85ed         test r13, r13
0x0000344c      4889442458     mov qword [rsp + 0x58], rax
0x00003451      7428           je 0x347b
0x00003453      4981fd004000.  cmp r13, sym.gettext_quote.part.1       ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x0000345a      750a           jne 0x3466
0x0000345c      4983c701       add r15, 1
0x00003460      41bdff3f0000   mov r13d, 0x3fff
0x00003466      488b7c2430     mov rdi, qword [rsp + 0x30]
0x0000346b      b901400000     mov ecx, 0x4001
0x00003470      4c89ea         mov rdx, r13
0x00003473      4c89fe         mov rsi, r15
0x00003476      e855e7ffff     call sym.imp.__memmove_chk
0x0000347b      b901000000     mov ecx, 1
0x00003480      e9cbf8ffff     jmp 0x2d50
0x00003485      0f1f00         nop dword [rax]
0x00003488      488d35553b00.  lea rsi, str.standard_input             ; 0x6fe4 ; "standard input"
0x0000348f      ba05000000     mov edx, 5
0x00003494      31ff           xor edi, edi
0x00003496      e8e5e5ffff     call sym.imp.dcgettext
0x0000349b      4889442440     mov qword [rsp + 0x40], rax
0x000034a0      e9fcf6ffff     jmp 0x2ba1
0x000034a5      4489ef         mov edi, r13d
0x000034a8      e873e7ffff     call sym.imp.wcwidth
0x000034ad      4863f0         movsxd rsi, eax
0x000034b0      0fb64c244f     movzx ecx, byte [rsp + 0x4f]
0x000034b5      488b542410     mov rdx, qword [rsp + 0x10]
0x000034ba      4c01f6         add rsi, r14
0x000034bd      85c0           test eax, eax
0x000034bf      4c0f4ff6       cmovg r14, rsi
0x000034c3      e9bffeffff     jmp 0x3387
0x000034c8      41bf01000000   mov r15d, 1
0x000034ce      488b442428     mov rax, qword [rsp + 0x28]
0x000034d3      440fb6e3       movzx r12d, bl
0x000034d7      4c39f0         cmp rax, r14
0x000034da      4c0f43f0       cmovae r14, rax
0x000034de      4c03642420     add r12, qword [rsp + 0x20]
0x000034e3      e976faffff     jmp 0x2f5e
0x000034e8      488b542440     mov rdx, qword [rsp + 0x40]
0x000034ed      be03000000     mov esi, 3
0x000034f2      31ff           xor edi, edi
0x000034f4      4531ff         xor r15d, r15d
0x000034f7      e8a4250000     call sym.quotearg_n_style_colon
0x000034fc      4989c4         mov r12, rax
0x000034ff      e8ece4ffff     call sym.imp.__errno_location
0x00003504      8b30           mov esi, dword [rax]
0x00003506      488d15804300.  lea rdx, [0x0000788d]                   ; "%s"
0x0000350d      4c89e1         mov rcx, r12
0x00003510      31ff           xor edi, edi
0x00003512      31c0           xor eax, eax
0x00003514      e8b7e7ffff     call sym.imp.error
0x00003519      ebb3           jmp 0x34ce
0x0000351b      0fb6d8         movzx ebx, al
0x0000351e      e93cfbffff     jmp 0x305f
0x00003523      440fb6e9       movzx r13d, cl
0x00003527      e988fcffff     jmp 0x31b4
0x0000352c      4889d8         mov rax, rbx
0x0000352f      41bf01000000   mov r15d, 1
0x00003535      410fb6dd       movzx ebx, r13b
0x00003539      4989ed         mov r13, rbp
0x0000353c      4889c5         mov rbp, rax
0x0000353f      4939ed         cmp r13, rbp
0x00003542      4989ee         mov r14, rbp
0x00003545      4d0f43f5       cmovae r14, r13
0x00003549      4901dc         add r12, rbx
0x0000354c      31ed           xor ebp, ebp
0x0000354e      e90bfaffff     jmp 0x2f5e
0x00003553      488b542440     mov rdx, qword [rsp + 0x40]
0x00003558      4889d8         mov rax, rbx
0x0000355b      be03000000     mov esi, 3
0x00003560      31ff           xor edi, edi
0x00003562      410fb6dd       movzx ebx, r13b
0x00003566      4989ed         mov r13, rbp
0x00003569      4889c5         mov rbp, rax
0x0000356c      4531ff         xor r15d, r15d
0x0000356f      e82c250000     call sym.quotearg_n_style_colon
0x00003574      4989c6         mov r14, rax
0x00003577      e874e4ffff     call sym.imp.__errno_location
0x0000357c      8b30           mov esi, dword [rax]
0x0000357e      488d15084300.  lea rdx, [0x0000788d]                   ; "%s"
0x00003585      4c89f1         mov rcx, r14
0x00003588      31ff           xor edi, edi
0x0000358a      31c0           xor eax, eax
0x0000358c      e83fe7ffff     call sym.imp.error
0x00003591      ebac           jmp 0x353f
0x00003593      488b542440     mov rdx, qword [rsp + 0x40]
0x00003598      be03000000     mov esi, 3
0x0000359d      31ff           xor edi, edi
0x0000359f      48895c2418     mov qword [rsp + 0x18], rbx
0x000035a4      4531f6         xor r14d, r14d
0x000035a7      31ed           xor ebp, ebp
0x000035a9      4531e4         xor r12d, r12d
0x000035ac      e8ef240000     call sym.quotearg_n_style_colon
0x000035b1      4889c3         mov rbx, rax
0x000035b4      e837e4ffff     call sym.imp.__errno_location
0x000035b9      8b30           mov esi, dword [rax]
0x000035bb      488d15cb4200.  lea rdx, [0x0000788d]                   ; "%s"
0x000035c2      4889d9         mov rcx, rbx
0x000035c5      31ff           xor edi, edi
0x000035c7      31c0           xor eax, eax
0x000035c9      e802e7ffff     call sym.imp.error
0x000035ce      48c704240000.  mov qword [rsp], 0
0x000035d6      e983f9ffff     jmp 0x2f5e
0x000035db      8b7c2448       mov edi, dword [rsp + 0x48]
0x000035df      ba01000000     mov edx, 1
0x000035e4      31f6           xor esi, esi
0x000035e6      e825e5ffff     call sym.imp.lseek
0x000035eb      31d2           xor edx, edx
0x000035ed      4889c5         mov rbp, rax
0x000035f0      4c89e0         mov rax, r12
0x000035f3      49f7f5         div r13
0x000035f6      4885d2         test rdx, rdx
0x000035f9      743a           je 0x3635
0x000035fb      483b6c2418     cmp rbp, qword [rsp + 0x18]
0x00003600      7629           jbe 0x362b
0x00003602      4531f6         xor r14d, r14d
0x00003605      48c744241800.  mov qword [rsp + 0x18], 0
0x0000360e      31ed           xor ebp, ebp
0x00003610      4531e4         xor r12d, r12d
0x00003613      48c704240000.  mov qword [rsp], 0
0x0000361b      41bf01000000   mov r15d, 1
0x00003621      e938f9ffff     jmp 0x2f5e
0x00003626      e885e4ffff     call sym.imp.__stack_chk_fail
0x0000362b      48296c2418     sub qword [rsp + 0x18], rbp
0x00003630      e9a1fcffff     jmp 0x32d6
0x00003635      4889ee         mov rsi, rbp
0x00003638      48f7d6         not rsi
0x0000363b      48c1ee3f       shr rsi, 0x3f
0x0000363f      e930f6ffff     jmp 0x2c74
0x00003644      4489ef         mov edi, r13d
0x00003647      e90efdffff     jmp 0x335a
0x0000364c      0f1f4000       nop dword [rax]
;-- usage:
0x00003650      4155           push r13
0x00003652      4154           push r12
0x00003654      ba05000000     mov edx, 5
0x00003659      55             push rbp
0x0000365a      53             push rbx
0x0000365b      89fd           mov ebp, edi
0x0000365d      4881ec880000.  sub rsp, 0x88
0x00003664      488b1de56a20.  mov rbx, qword [obj.program_name]       ; [0x20a150:8]=0
0x0000366b      64488b042528.  mov rax, qword fs:[0x28]
0x00003674      4889442478     mov qword [rsp + 0x78], rax
0x00003679      31c0           xor eax, eax
0x0000367b      85ff           test edi, edi
0x0000367d      742e           je 0x36ad
0x0000367f      488d35523c00.  lea rsi, str.Try___s___help__for_more_information. ; 0x72d8 ; "Try '%s --help' for more information.\n"
0x00003686      31ff           xor edi, edi
0x00003688      e8f3e3ffff     call sym.imp.dcgettext
0x0000368d      488b3d4c6a20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003694      4889c2         mov rdx, rax
0x00003697      4889d9         mov rcx, rbx
0x0000369a      be01000000     mov esi, 1
0x0000369f      31c0           xor eax, eax
0x000036a1      e8cae6ffff     call sym.imp.__fprintf_chk
0x000036a6      89ef           mov edi, ebp
0x000036a8      e8a3e6ffff     call sym.imp.exit
0x000036ad      488d354c3c00.  lea rsi, str.Usage:__s__OPTION_...__FILE_...____or:___s__OPTION_...___files0_from_F ; 0x7300 ; "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n"
0x000036b4      31ff           xor edi, edi
0x000036b6      e8c5e3ffff     call sym.imp.dcgettext
0x000036bb      4889d9         mov rcx, rbx
0x000036be      4889da         mov rdx, rbx
0x000036c1      4889c6         mov rsi, rax
0x000036c4      bf01000000     mov edi, 1
0x000036c9      31c0           xor eax, eax
0x000036cb      e8c0e5ffff     call sym.imp.__printf_chk
0x000036d0      488b1dd16920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000036d7      488d356a3c00.  lea rsi, str.Print_newline__word__and_byte_counts_for_each_FILE__and_a_total_line_if__more_than_one_FILE_is_specified.__A_word_is_a_non_zero_length_sequence_of__characters_delimited_by_white_space. ; 0x7348 ; "Print newline, word, and byte counts for each FILE, and a total line if\nmore than one FILE is specified.  A word is a non-zero-length sequence of\ncharacters delimited by white space.\n"
0x000036de      ba05000000     mov edx, 5
0x000036e3      31ff           xor edi, edi
0x000036e5      e896e3ffff     call sym.imp.dcgettext
0x000036ea      4889de         mov rsi, rbx
0x000036ed      4889c7         mov rdi, rax
0x000036f0      e8abe4ffff     call sym.imp.fputs_unlocked
0x000036f5      488b1dac6920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000036fc      488d35fd3c00.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x7400 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00003703      ba05000000     mov edx, 5
0x00003708      31ff           xor edi, edi
0x0000370a      e871e3ffff     call sym.imp.dcgettext
0x0000370f      4889de         mov rsi, rbx
0x00003712      4889c7         mov rdi, rax
0x00003715      e886e4ffff     call sym.imp.fputs_unlocked
0x0000371a      488b1d876920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003721      488d35103d00.  lea rsi, str.The_options_below_may_be_used_to_select_which_counts_are_printed__always_in__the_following_order:_newline__word__character__byte__maximum_line_length._____c____bytes____________print_the_byte_counts_____m____chars____________print_the_character_counts_____l____lines____________print_the_newline_counts ; 0x7438 ; "\nThe options below may be used to select which counts are printed, always in\nthe following order: newline, word, character, byte, maximum line length.\n  -c, --bytes            print the byte counts\n  -m, --chars            print the character counts\n  -l, --lines            print the newline counts\n"
0x00003728      ba05000000     mov edx, 5
0x0000372d      31ff           xor edi, edi
0x0000372f      e84ce3ffff     call sym.imp.dcgettext
0x00003734      4889de         mov rsi, rbx
0x00003737      4889c7         mov rdi, rax
0x0000373a      e861e4ffff     call sym.imp.fputs_unlocked
0x0000373f      488b1d626920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003746      488d351b3e00.  lea rsi, str.files0_from_F____read_input_from_the_files_specified_by_____________________________NUL_terminated_names_in_file_F______________________________If_F_is___then_read_names_from_standard_input_____L____max_line_length__print_the_maximum_display_width_____w____words____________print_the_word_counts ; 0x7568 ; "      --files0-from=F    read input from the files specified by\n                           NUL-terminated names in file F;\n                           If F is - then read names from standard input\n  -L, --max-line-length  print the maximum display width\n  -w, --words            print the word counts\n"
0x0000374d      ba05000000     mov edx, 5
0x00003752      31ff           xor edi, edi
0x00003754      e827e3ffff     call sym.imp.dcgettext
0x00003759      4889de         mov rsi, rbx
0x0000375c      4889c7         mov rdi, rax
0x0000375f      e83ce4ffff     call sym.imp.fputs_unlocked
0x00003764      488b1d3d6920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000376b      488d35263f00.  lea rsi, str.help_____display_this_help_and_exit ; 0x7698 ; "      --help     display this help and exit\n"
0x00003772      ba05000000     mov edx, 5
0x00003777      31ff           xor edi, edi
0x00003779      e802e3ffff     call sym.imp.dcgettext
0x0000377e      4889de         mov rsi, rbx
0x00003781      4889c7         mov rdi, rax
0x00003784      e817e4ffff     call sym.imp.fputs_unlocked
0x00003789      488b1d186920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003790      488d35313f00.  lea rsi, str.version__output_version_information_and_exit ; 0x76c8 ; "      --version  output version information and exit\n"
0x00003797      ba05000000     mov edx, 5
0x0000379c      31ff           xor edi, edi
0x0000379e      e8dde2ffff     call sym.imp.dcgettext
0x000037a3      4889de         mov rsi, rbx
0x000037a6      4889c7         mov rdi, rax
0x000037a9      488d1d433800.  lea rbx, [0x00006ff3]                   ; "wc"
0x000037b0      e8ebe3ffff     call sym.imp.fputs_unlocked
0x000037b5      488d053a3800.  lea rax, [0x00006ff6]                   ; "["
0x000037bc      488d0d743800.  lea rcx, str.sha256sum                  ; 0x7037 ; "sha256sum"
0x000037c3      48c744246000.  mov qword [rsp + 0x60], 0
0x000037cc      48c744246800.  mov qword [rsp + 0x68], 0
0x000037d5      4889e2         mov rdx, rsp
0x000037d8      48890424       mov qword [rsp], rax
0x000037dc      488d05153800.  lea rax, [0x00006ff8]                   ; "test invocation"
0x000037e3      48894c2430     mov qword [rsp + 0x30], rcx
0x000037e8      488d0d523800.  lea rcx, str.sha384sum                  ; 0x7041 ; "sha384sum"
0x000037ef      4889442408     mov qword [rsp + 8], rax
0x000037f4      488d05753800.  lea rax, [0x00007070]                   ; "coreutils"
0x000037fb      48894c2440     mov qword [rsp + 0x40], rcx
0x00003800      488d0d443800.  lea rcx, str.sha512sum                  ; 0x704b ; "sha512sum"
0x00003807      4889442410     mov qword [rsp + 0x10], rax
0x0000380c      488d05f53700.  lea rax, [0x00007008]                   ; "Multi-call invocation"
0x00003813      48894c2450     mov qword [rsp + 0x50], rcx
0x00003818      4889442418     mov qword [rsp + 0x18], rax
0x0000381d      488d05fa3700.  lea rax, str.sha224sum                  ; 0x701e ; "sha224sum"
0x00003824      4889442420     mov qword [rsp + 0x20], rax
0x00003829      488d05f83700.  lea rax, str.sha2_utilities             ; 0x7028 ; "sha2 utilities"
0x00003830      4889442428     mov qword [rsp + 0x28], rax
0x00003835      4889442438     mov qword [rsp + 0x38], rax
0x0000383a      4889442448     mov qword [rsp + 0x48], rax
0x0000383f      4889442458     mov qword [rsp + 0x58], rax
0x00003844      0f1f4000       nop dword [rax]
0x00003848      4883c210       add rdx, 0x10
0x0000384c      488b3a         mov rdi, qword [rdx]
0x0000384f      4885ff         test rdi, rdi
0x00003852      7413           je 0x3867
0x00003854      b903000000     mov ecx, 3
0x00003859      4889de         mov rsi, rbx
0x0000385c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000385e      0f97c0         seta al
0x00003861      1c00           sbb al, 0
0x00003863      84c0           test al, al
0x00003865      75e1           jne 0x3848
0x00003867      4c8b6208       mov r12, qword [rdx + 8]
0x0000386b      31ff           xor edi, edi
0x0000386d      ba05000000     mov edx, 5
0x00003872      488d35dc3700.  lea rsi, str.s_online_help:___s         ; 0x7055 ; "\n%s online help: <%s>\n"
0x00003879      4d85e4         test r12, r12
0x0000387c      0f84c1000000   je 0x3943
0x00003882      e8f9e1ffff     call sym.imp.dcgettext
0x00003887      488d0d723e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7700 ; "https://www.gnu.org/software/coreutils/"
0x0000388e      488d15d73700.  lea rdx, str.GNU_coreutils              ; 0x706c ; "GNU coreutils"
0x00003895      4889c6         mov rsi, rax
0x00003898      bf01000000     mov edi, 1
0x0000389d      31c0           xor eax, eax
0x0000389f      e8ece3ffff     call sym.imp.__printf_chk
0x000038a4      31f6           xor esi, esi
0x000038a6      bf05000000     mov edi, 5
0x000038ab      e8d0e3ffff     call sym.imp.setlocale
0x000038b0      4885c0         test rax, rax
0x000038b3      741c           je 0x38d1
0x000038b5      488d35be3700.  lea rsi, [0x0000707a]                   ; "en_"
0x000038bc      ba03000000     mov edx, 3
0x000038c1      4889c7         mov rdi, rax
0x000038c4      e837e1ffff     call sym.imp.strncmp
0x000038c9      85c0           test eax, eax
0x000038cb      0f8507010000   jne 0x39d8
0x000038d1      488d35a63700.  lea rsi, str.Full_documentation___s_s   ; 0x707e ; "Full documentation <%s%s>\n"
0x000038d8      31ff           xor edi, edi
0x000038da      ba05000000     mov edx, 5
0x000038df      e89ce1ffff     call sym.imp.dcgettext
0x000038e4      488d0d083700.  lea rcx, [0x00006ff3]                   ; "wc"
0x000038eb      488d150e3e00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7700 ; "https://www.gnu.org/software/coreutils/"
0x000038f2      4889c6         mov rsi, rax
0x000038f5      bf01000000     mov edi, 1
0x000038fa      31c0           xor eax, eax
0x000038fc      e88fe3ffff     call sym.imp.__printf_chk
0x00003901      4939dc         cmp r12, rbx
0x00003904      488d0d073700.  lea rcx, [0x00007012]                   ; " invocation"
0x0000390b      488d1d2f4500.  lea rbx, [0x00007e41]
0x00003912      480f44d9       cmove rbx, rcx
0x00003916      488d35533e00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7770 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000391d      31ff           xor edi, edi
0x0000391f      ba05000000     mov edx, 5
0x00003924      e857e1ffff     call sym.imp.dcgettext
0x00003929      4889d9         mov rcx, rbx
0x0000392c      4889c6         mov rsi, rax
0x0000392f      4c89e2         mov rdx, r12
0x00003932      bf01000000     mov edi, 1
0x00003937      31c0           xor eax, eax
0x00003939      e852e3ffff     call sym.imp.__printf_chk
0x0000393e      e963fdffff     jmp 0x36a6
0x00003943      e838e1ffff     call sym.imp.dcgettext
0x00003948      488d0db13d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7700 ; "https://www.gnu.org/software/coreutils/"
0x0000394f      488d15163700.  lea rdx, str.GNU_coreutils              ; 0x706c ; "GNU coreutils"
0x00003956      4889c6         mov rsi, rax
0x00003959      bf01000000     mov edi, 1
0x0000395e      31c0           xor eax, eax
0x00003960      e82be3ffff     call sym.imp.__printf_chk
0x00003965      31f6           xor esi, esi
0x00003967      bf05000000     mov edi, 5
0x0000396c      e80fe3ffff     call sym.imp.setlocale
0x00003971      4885c0         test rax, rax
0x00003974      7418           je 0x398e
0x00003976      488d35fd3600.  lea rsi, [0x0000707a]                   ; "en_"
0x0000397d      ba03000000     mov edx, 3
0x00003982      4889c7         mov rdi, rax
0x00003985      e876e0ffff     call sym.imp.strncmp
0x0000398a      85c0           test eax, eax
0x0000398c      7543           jne 0x39d1
0x0000398e      488d35e93600.  lea rsi, str.Full_documentation___s_s   ; 0x707e ; "Full documentation <%s%s>\n"
0x00003995      ba05000000     mov edx, 5
0x0000399a      31ff           xor edi, edi
0x0000399c      4c8d25503600.  lea r12, [0x00006ff3]                   ; "wc"
0x000039a3      488d1d683600.  lea rbx, [0x00007012]                   ; " invocation"
0x000039aa      e8d1e0ffff     call sym.imp.dcgettext
0x000039af      488d0d3d3600.  lea rcx, [0x00006ff3]                   ; "wc"
0x000039b6      488d15433d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7700 ; "https://www.gnu.org/software/coreutils/"
0x000039bd      4889c6         mov rsi, rax
0x000039c0      bf01000000     mov edi, 1
0x000039c5      31c0           xor eax, eax
0x000039c7      e8c4e2ffff     call sym.imp.__printf_chk
0x000039cc      e945ffffff     jmp 0x3916
0x000039d1      4c8d251b3600.  lea r12, [0x00006ff3]                   ; "wc"
0x000039d8      4c8b2dc96620.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000039df      488d35423d00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7728 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000039e6      31ff           xor edi, edi
0x000039e8      ba05000000     mov edx, 5
0x000039ed      e88ee0ffff     call sym.imp.dcgettext
0x000039f2      4c89ee         mov rsi, r13
0x000039f5      4889c7         mov rdi, rax
0x000039f8      e8a3e1ffff     call sym.imp.fputs_unlocked
0x000039fd      e9cffeffff     jmp 0x38d1
0x00003a02      662e0f1f8400.  nop word cs:[rax + rax]
0x00003a0c      0f1f4000       nop dword [rax]
;-- argv_iter_init_argv:
0x00003a10      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:41
0x00003a11      4889fb         mov rbx, rdi
0x00003a14      bf30000000     mov edi, 0x30                           ; ../coreutils-8.31/lib/argv-iter.c:42 ; '0'
0x00003a19      e8aae3ffff     call 0x1dc8
0x00003a1e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:43
0x00003a21      740f           je 0x3a32
0x00003a23      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/argv-iter.c:45
0x00003a2a      48895820       mov qword [rax + 0x20], rbx             ; ../coreutils-8.31/lib/argv-iter.c:46
0x00003a2e      48895828       mov qword [rax + 0x28], rbx             ; ../coreutils-8.31/lib/argv-iter.c:47
0x00003a32      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:49
0x00003a33      c3             ret
0x00003a34      6690           nop
0x00003a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- argv_iter_init_stream:
0x00003a40      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:55
0x00003a41      4889fb         mov rbx, rdi
0x00003a44      bf30000000     mov edi, 0x30                           ; ../coreutils-8.31/lib/argv-iter.c:56 ; '0'
0x00003a49      e87ae3ffff     call 0x1dc8
0x00003a4e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:57
0x00003a51      7423           je 0x3a76
0x00003a53      488918         mov qword [rax], rbx                    ; ../coreutils-8.31/lib/argv-iter.c:59
0x00003a56      48c740100000.  mov qword [rax + 0x10], 0               ; ../coreutils-8.31/lib/argv-iter.c:60
0x00003a5e      48c740180000.  mov qword [rax + 0x18], 0               ; ../coreutils-8.31/lib/argv-iter.c:61
0x00003a66      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/argv-iter.c:63
0x00003a6e      48c740200000.  mov qword [rax + 0x20], 0               ; ../coreutils-8.31/lib/argv-iter.c:64
0x00003a76      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:66
0x00003a77      c3             ret
0x00003a78      0f1f84000000.  nop dword [rax + rax]
;-- argv_iter:
0x00003a80      488b0f         mov rcx, qword [rdi]                    ; ../coreutils-8.31/lib/argv-iter.c:70
0x00003a83      4885c9         test rcx, rcx
0x00003a86      7438           je 0x3ac0
0x00003a88      55             push rbp
0x00003a89      53             push rbx
0x00003a8a      4889f5         mov rbp, rsi
0x00003a8d      4889fb         mov rbx, rdi
0x00003a90      488d7718       lea rsi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/argv-iter.c:73
0x00003a94      488d7f10       lea rdi, [rdi + 0x10]
0x00003a98      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argv-iter.c:70
0x00003a9c      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/argv-iter.c:73
0x00003a9e      e8fde2ffff     call sym.imp.getdelim
0x00003aa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argv-iter.c:74
0x00003aa6      7848           js 0x3af0
0x00003aa8      c74500010000.  mov dword [rbp], 1                      ; ../coreutils-8.31/lib/argv-iter.c:80
0x00003aaf      4883430801     add qword [rbx + 8], 1                  ; ../coreutils-8.31/lib/argv-iter.c:81
0x00003ab4      488b4310       mov rax, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/argv-iter.c:82
0x00003ab8      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/argv-iter.c:97
0x00003abc      5b             pop rbx
0x00003abd      5d             pop rbp
0x00003abe      c3             ret
0x00003abf      90             nop
0x00003ac0      488b5728       mov rdx, qword [rdi + 0x28]             ; ../coreutils-8.31/lib/argv-iter.c:86
0x00003ac4      488b02         mov rax, qword [rdx]
0x00003ac7      4885c0         test rax, rax
0x00003aca      7414           je 0x3ae0
0x00003acc      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/argv-iter.c:94
0x00003ad0      c70601000000   mov dword [rsi], 1                      ; ../coreutils-8.31/lib/argv-iter.c:93
0x00003ad6      48895728       mov qword [rdi + 0x28], rdx             ; ../coreutils-8.31/lib/argv-iter.c:94
0x00003ada      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:97
0x00003adb      0f1f440000     nop dword [rax + rax]
0x00003ae0      c70602000000   mov dword [rsi], 2                      ; ../coreutils-8.31/lib/argv-iter.c:88
0x00003ae6      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:89
0x00003ae7      660f1f840000.  nop word [rax + rax]
0x00003af0      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/argv-iter.c:76
0x00003af3      e8e8e0ffff     call sym.imp.feof
0x00003af8      83f801         cmp eax, 1
0x00003afb      19c0           sbb eax, eax
0x00003afd      83e002         and eax, 2
0x00003b00      83c002         add eax, 2
0x00003b03      894500         mov dword [rbp], eax
0x00003b06      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/argv-iter.c:77
0x00003b08      ebae           jmp 0x3ab8
0x00003b0a      660f1f440000   nop word [rax + rax]
;-- argv_iter_n_args:
0x00003b10      48833f00       cmp qword [rdi], 0                      ; ../coreutils-8.31/lib/argv-iter.c:101
0x00003b14      740a           je 0x3b20
0x00003b16      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/argv-iter.c:102
0x00003b1a      c3             ret
0x00003b1b      0f1f440000     nop dword [rax + rax]
0x00003b20      488b4728       mov rax, qword [rdi + 0x28]
0x00003b24      482b4720       sub rax, qword [rdi + 0x20]
0x00003b28      48c1f803       sar rax, 3
0x00003b2c      c3             ret                                     ; ../coreutils-8.31/lib/argv-iter.c:103
0x00003b2d      0f1f00         nop dword [rax]
;-- argv_iter_free:
0x00003b30      53             push rbx                                ; ../coreutils-8.31/lib/argv-iter.c:107
0x00003b31      48833f00       cmp qword [rdi], 0                      ; ../coreutils-8.31/lib/argv-iter.c:108
0x00003b35      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/argv-iter.c:107
0x00003b38      7409           je 0x3b43                               ; ../coreutils-8.31/lib/argv-iter.c:108
0x00003b3a      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/argv-iter.c:109
0x00003b3e      e87de2ffff     call sym..plt.got
0x00003b43      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/argv-iter.c:110
0x00003b46      5b             pop rbx                                 ; ../coreutils-8.31/lib/argv-iter.c:111
0x00003b47      e974e2ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/argv-iter.c:110
0x00003b4c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00003b50      48893df16520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a148:8]=0
0x00003b57      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003b58      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003b60      40883dd96520.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a140:1]=0
0x00003b67      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003b68      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003b70      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003b71      53             push rbx
0x00003b72      4883ec08       sub rsp, 8
0x00003b76      488b3d2b6520.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003b7d      e88e320000     call sym.close_stream
0x00003b82      85c0           test eax, eax
0x00003b84      7416           je 0x3b9c
0x00003b86      e865deffff     call sym.imp.__errno_location
0x00003b8b      803dae652000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a140:1]=0
0x00003b92      4889c3         mov rbx, rax
0x00003b95      741c           je 0x3bb3
0x00003b97      833820         cmp dword [rax], 0x20
0x00003b9a      7517           jne 0x3bb3
0x00003b9c      488b3d3d6520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003ba3      e868320000     call sym.close_stream
0x00003ba8      85c0           test eax, eax
0x00003baa      7546           jne 0x3bf2
0x00003bac      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003bb0      5b             pop rbx
0x00003bb1      5d             pop rbp
0x00003bb2      c3             ret
0x00003bb3      488d35c33c00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x787d ; "write error"
0x00003bba      31ff           xor edi, edi
0x00003bbc      ba05000000     mov edx, 5
0x00003bc1      e8badeffff     call sym.imp.dcgettext
0x00003bc6      488b3d7b6520.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a148:8]=0
0x00003bcd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003bd0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003bd3      7428           je 0x3bfd
0x00003bd5      e8961e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003bda      8b33           mov esi, dword [rbx]
0x00003bdc      488d15a63c00.  lea rdx, str.s:__s                      ; 0x7889 ; "%s: %s"
0x00003be3      4889c1         mov rcx, rax
0x00003be6      4989e8         mov r8, rbp
0x00003be9      31ff           xor edi, edi
0x00003beb      31c0           xor eax, eax
0x00003bed      e8dee0ffff     call sym.imp.error
0x00003bf2      8b3d20642000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a018:4]=1
0x00003bf8      e813deffff     call sym.imp._exit
0x00003bfd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003bff      488d15873c00.  lea rdx, [0x0000788d]                   ; "%s"
0x00003c06      4889c1         mov rcx, rax
0x00003c09      31ff           xor edi, edi
0x00003c0b      31c0           xor eax, eax
0x00003c0d      e8bee0ffff     call sym.imp.error
0x00003c12      ebde           jmp 0x3bf2
0x00003c14      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c1e      6690           nop
;-- fdadvise:
0x00003c20      e93bdfffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00003c25      90             nop
0x00003c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00003c30      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00003c33      741b           je 0x3c50
0x00003c35      53             push rbx
0x00003c36      89f3           mov ebx, esi
0x00003c38      e8c3dfffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00003c3d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003c3f      31d2           xor edx, edx
0x00003c41      31f6           xor esi, esi
0x00003c43      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00003c44      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003c46      e915dfffff     jmp sym.imp.posix_fadvise
0x00003c4b      0f1f440000     nop dword [rax + rax]
0x00003c50      f3c3           ret
0x00003c52      662e0f1f8400.  nop word cs:[rax + rax]
0x00003c5c      0f1f4000       nop dword [rax]
;-- umaxtostr:
0x00003c60      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00003c64      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00003c68      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00003c72      660f1f440000   nop word [rax + rax]
0x00003c78      4889f8         mov rax, rdi
0x00003c7b      4883e901       sub rcx, 1
0x00003c7f      48f7e6         mul rsi
0x00003c82      48c1ea03       shr rdx, 3
0x00003c86      488d0492       lea rax, [rdx + rdx*4]
0x00003c8a      4801c0         add rax, rax
0x00003c8d      4829c7         sub rdi, rax
0x00003c90      83c730         add edi, 0x30
0x00003c93      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00003c96      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003c99      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00003c9c      75da           jne 0x3c78
0x00003c9e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003ca1      c3             ret
0x00003ca2      662e0f1f8400.  nop word cs:[rax + rax]
0x00003cac      0f1f4000       nop dword [rax]
;-- mb_width_aux:
0x00003cb0      53             push rbx                                ; ../coreutils-8.31/lib/mbchar.h:248
0x00003cb1      89fb           mov ebx, edi
0x00003cb3      e868dfffff     call sym.imp.wcwidth                    ; ../coreutils-8.31/lib/mbchar.h:249
0x00003cb8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbchar.h:252
0x00003cba      7804           js 0x3cc0
0x00003cbc      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x00003cbd      c3             ret
0x00003cbe      6690           nop
0x00003cc0      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/mbchar.h:252
0x00003cc2      e879ddffff     call sym.imp.iswcntrl
0x00003cc7      85c0           test eax, eax
0x00003cc9      0f94c0         sete al
0x00003ccc      0fb6c0         movzx eax, al
0x00003ccf      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x00003cd0      c3             ret
0x00003cd1      0f1f440000     nop dword [rax + rax]
0x00003cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mb_copy:
0x00003ce0      55             push rbp                                ; ../coreutils-8.31/lib/mbchar.h:269
0x00003ce1      53             push rbx
0x00003ce2      4889f3         mov rbx, rsi
0x00003ce5      488d4318       lea rax, [rbx + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:270
0x00003ce9      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/mbchar.h:269
0x00003cec      4883ec08       sub rsp, 8
0x00003cf0      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/mbchar.h:270
0x00003cf3      488b5308       mov rdx, qword [rbx + 8]
0x00003cf7      4839c6         cmp rsi, rax
0x00003cfa      7424           je 0x3d20
0x00003cfc      488937         mov qword [rdi], rsi                    ; ../coreutils-8.31/lib/mbchar.h:276
0x00003cff      0fb64310       movzx eax, byte [rbx + 0x10]            ; ../coreutils-8.31/lib/mbchar.h:278
0x00003d03      48895508       mov qword [rbp + 8], rdx                ; ../coreutils-8.31/lib/mbchar.h:277
0x00003d07      84c0           test al, al                             ; ../coreutils-8.31/lib/mbchar.h:278
0x00003d09      884510         mov byte [rbp + 0x10], al
0x00003d0c      7406           je 0x3d14
0x00003d0e      8b4314         mov eax, dword [rbx + 0x14]             ; ../coreutils-8.31/lib/mbchar.h:279
0x00003d11      894514         mov dword [rbp + 0x14], eax
0x00003d14      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mbchar.h:280
0x00003d18      5b             pop rbx
0x00003d19      5d             pop rbp
0x00003d1a      c3             ret
0x00003d1b      0f1f440000     nop dword [rax + rax]
0x00003d20      488d4f18       lea rcx, [rdi + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:272
0x00003d24      4889cf         mov rdi, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00003d27      e8c4deffff     call sym.imp.memcpy
0x00003d2c      488b5308       mov rdx, qword [rbx + 8]
0x00003d30      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/mbchar.h:273
0x00003d34      ebc9           jmp 0x3cff
0x00003d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- is_basic:
0x00003d40      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/mbchar.h:317
0x00003d42      488d15573b00.  lea rdx, obj.is_basic_table             ; 0x78a0
0x00003d49      89f9           mov ecx, edi
0x00003d4b      c0e805         shr al, 5
0x00003d4e      83e11f         and ecx, 0x1f
0x00003d51      83e007         and eax, 7
0x00003d54      8b0482         mov eax, dword [rdx + rax*4]
0x00003d57      d3e8           shr eax, cl
0x00003d59      83e001         and eax, 1                              ; ../coreutils-8.31/lib/mbchar.h:319
0x00003d5c      c3             ret                                     ; ../coreutils-8.31/lib/mbchar.h:320
0x00003d5d      0f1f00         nop dword [rax]
;-- physmem_total:
0x00003d60      4881ec980000.  sub rsp, 0x98
0x00003d67      bf55000000     mov edi, 0x55                           ; 'U'
0x00003d6c      64488b042528.  mov rax, qword fs:[0x28]
0x00003d75      488984248800.  mov qword [rsp + 0x88], rax
0x00003d7d      31c0           xor eax, eax
0x00003d7f      e88cdfffff     call sym.imp.sysconf
0x00003d84      660fefc0       pxor xmm0, xmm0
0x00003d88      bf1e000000     mov edi, 0x1e
0x00003d8d      f2480f2ac0     cvtsi2sd xmm0, rax
0x00003d92      f20f11442408   movsd qword [rsp + 8], xmm0
0x00003d98      e873dfffff     call sym.imp.sysconf
0x00003d9d      660fefd2       pxor xmm2, xmm2
0x00003da1      f20f10442408   movsd xmm0, qword [rsp + 8]
0x00003da7      660f2ec2       ucomisd xmm0, xmm2
0x00003dab      7233           jb 0x3de0
0x00003dad      660fefc9       pxor xmm1, xmm1
0x00003db1      f2480f2ac8     cvtsi2sd xmm1, rax
0x00003db6      660f2eca       ucomisd xmm1, xmm2
0x00003dba      7224           jb 0x3de0
0x00003dbc      f20f59c1       mulsd xmm0, xmm1
0x00003dc0      488b84248800.  mov rax, qword [rsp + 0x88]
0x00003dc8      644833042528.  xor rax, qword fs:[0x28]
0x00003dd1      7568           jne 0x3e3b
0x00003dd3      4881c4980000.  add rsp, 0x98
0x00003dda      c3             ret
0x00003ddb      0f1f440000     nop dword [rax + rax]
0x00003de0      488d7c2410     lea rdi, [rsp + 0x10]
0x00003de5      e846dfffff     call sym.imp.sysinfo
0x00003dea      85c0           test eax, eax
0x00003dec      f20f1005cc3a.  movsd xmm0, qword [0x000078c0]          ; [0x78c0:8]=0x4190000000000000
0x00003df4      75ca           jne 0x3dc0
0x00003df6      488b442430     mov rax, qword [rsp + 0x30]
0x00003dfb      4885c0         test rax, rax
0x00003dfe      7820           js 0x3e20
0x00003e00      660fefc0       pxor xmm0, xmm0
0x00003e04      f2480f2ac0     cvtsi2sd xmm0, rax
0x00003e09      8b442478       mov eax, dword [rsp + 0x78]
0x00003e0d      660fefc9       pxor xmm1, xmm1
0x00003e11      f2480f2ac8     cvtsi2sd xmm1, rax
0x00003e16      eba4           jmp 0x3dbc
0x00003e18      0f1f84000000.  nop dword [rax + rax]
0x00003e20      4889c2         mov rdx, rax
0x00003e23      660fefc0       pxor xmm0, xmm0
0x00003e27      48d1ea         shr rdx, 1
0x00003e2a      83e001         and eax, 1
0x00003e2d      4809c2         or rdx, rax
0x00003e30      f2480f2ac2     cvtsi2sd xmm0, rdx
0x00003e35      f20f58c0       addsd xmm0, xmm0
0x00003e39      ebce           jmp 0x3e09
0x00003e3b      e870dcffff     call sym.imp.__stack_chk_fail
;-- physmem_available:
0x00003e40      4881ec980000.  sub rsp, 0x98
0x00003e47      bf56000000     mov edi, 0x56                           ; 'V'
0x00003e4c      64488b042528.  mov rax, qword fs:[0x28]
0x00003e55      488984248800.  mov qword [rsp + 0x88], rax
0x00003e5d      31c0           xor eax, eax
0x00003e5f      e8acdeffff     call sym.imp.sysconf
0x00003e64      660fefc0       pxor xmm0, xmm0
0x00003e68      bf1e000000     mov edi, 0x1e
0x00003e6d      f2480f2ac0     cvtsi2sd xmm0, rax
0x00003e72      f20f11442408   movsd qword [rsp + 8], xmm0
0x00003e78      e893deffff     call sym.imp.sysconf
0x00003e7d      660fefd2       pxor xmm2, xmm2
0x00003e81      f20f10442408   movsd xmm0, qword [rsp + 8]
0x00003e87      660f2ec2       ucomisd xmm0, xmm2
0x00003e8b      7233           jb 0x3ec0
0x00003e8d      660fefc9       pxor xmm1, xmm1
0x00003e91      f2480f2ac8     cvtsi2sd xmm1, rax
0x00003e96      660f2eca       ucomisd xmm1, xmm2
0x00003e9a      7224           jb 0x3ec0
0x00003e9c      f20f59c1       mulsd xmm0, xmm1
0x00003ea0      488b84248800.  mov rax, qword [rsp + 0x88]
0x00003ea8      644833042528.  xor rax, qword fs:[0x28]
0x00003eb1      0f85a4000000   jne 0x3f5b
0x00003eb7      4881c4980000.  add rsp, 0x98
0x00003ebe      c3             ret
0x00003ebf      90             nop
0x00003ec0      488d7c2410     lea rdi, [rsp + 0x10]
0x00003ec5      e866deffff     call sym.imp.sysinfo
0x00003eca      85c0           test eax, eax
0x00003ecc      7542           jne 0x3f10
0x00003ece      488b442438     mov rax, qword [rsp + 0x38]
0x00003ed3      4885c0         test rax, rax
0x00003ed6      7868           js 0x3f40
0x00003ed8      660fefc0       pxor xmm0, xmm0
0x00003edc      f2480f2ac0     cvtsi2sd xmm0, rax
0x00003ee1      488b442448     mov rax, qword [rsp + 0x48]
0x00003ee6      4885c0         test rax, rax
0x00003ee9      7835           js 0x3f20
0x00003eeb      660fefc9       pxor xmm1, xmm1
0x00003eef      f2480f2ac8     cvtsi2sd xmm1, rax
0x00003ef4      8b442478       mov eax, dword [rsp + 0x78]
0x00003ef8      f20f58c1       addsd xmm0, xmm1
0x00003efc      660fefc9       pxor xmm1, xmm1
0x00003f00      f2480f2ac8     cvtsi2sd xmm1, rax
0x00003f05      eb95           jmp 0x3e9c
0x00003f07      660f1f840000.  nop word [rax + rax]
0x00003f10      e84bfeffff     call sym.physmem_total
0x00003f15      f20f5905ab39.  mulsd xmm0, qword [0x000078c8]
0x00003f1d      eb81           jmp 0x3ea0
0x00003f1f      90             nop
0x00003f20      4889c2         mov rdx, rax
0x00003f23      660fefc9       pxor xmm1, xmm1
0x00003f27      48d1ea         shr rdx, 1
0x00003f2a      83e001         and eax, 1
0x00003f2d      4809c2         or rdx, rax
0x00003f30      f2480f2aca     cvtsi2sd xmm1, rdx
0x00003f35      f20f58c9       addsd xmm1, xmm1
0x00003f39      ebb9           jmp 0x3ef4
0x00003f3b      0f1f440000     nop dword [rax + rax]
0x00003f40      4889c2         mov rdx, rax
0x00003f43      660fefc0       pxor xmm0, xmm0
0x00003f47      48d1ea         shr rdx, 1
0x00003f4a      83e001         and eax, 1
0x00003f4d      4809c2         or rdx, rax
0x00003f50      f2480f2ac2     cvtsi2sd xmm0, rdx
0x00003f55      f20f58c0       addsd xmm0, xmm0
0x00003f59      eb86           jmp 0x3ee1
0x00003f5b      e850dbffff     call sym.imp.__stack_chk_fail
;-- set_program_name:
0x00003f60      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003f63      53             push rbx
0x00003f64      7477           je 0x3fdd                               ; ../coreutils-8.31/lib/progname.c:51
0x00003f66      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00003f6b      4889fb         mov rbx, rdi
0x00003f6e      e88ddbffff     call sym.imp.strrchr
0x00003f73      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003f76      7455           je 0x3fcd
0x00003f78      4c8d4001       lea r8, [rax + 1]
0x00003f7c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00003f7f      4829da         sub rdx, rbx
0x00003f82      4883fa06       cmp rdx, 6
0x00003f86      7e45           jle 0x3fcd
0x00003f88      488d70fa       lea rsi, [rax - 6]
0x00003f8c      488d3d753900.  lea rdi, str..libs                      ; 0x7908 ; "/.libs/"
0x00003f93      b907000000     mov ecx, 7
0x00003f98      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003f9a      0f97c2         seta dl
0x00003f9d      80da00         sbb dl, 0
0x00003fa0      84d2           test dl, dl
0x00003fa2      7529           jne 0x3fcd
0x00003fa4      488d3d653900.  lea rdi, [0x00007910]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00003fab      b903000000     mov ecx, 3
0x00003fb0      4c89c6         mov rsi, r8
0x00003fb3      4c89c3         mov rbx, r8
0x00003fb6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003fb8      0f97c2         seta dl
0x00003fbb      80da00         sbb dl, 0
0x00003fbe      84d2           test dl, dl
0x00003fc0      750b           jne 0x3fcd
0x00003fc2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003fc6      48891dd36020.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x00003fcd      48891d7c6120.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a150:8]=0
0x00003fd4      48891ded6020.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c8:8]=0
0x00003fdb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00003fdc      c3             ret
0x00003fdd      488b0dfc6020.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003fe4      488d3de53800.  lea rdi, [0x000078d0]                   ; "A NULL argv[0] was passed through an exec system call.\n"
0x00003feb      ba37000000     mov edx, 0x37                           ; '7'
0x00003ff0      be01000000     mov esi, 1
0x00003ff5      e866ddffff     call sym.imp.fwrite
0x00003ffa      e8e1d9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00003fff      90             nop
;-- gettext_quote.part.1:
0x00004000      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00004001      53             push rbx
0x00004002      4889fd         mov rbp, rdi
0x00004005      89f3           mov ebx, esi
0x00004007      4883ec08       sub rsp, 8
0x0000400b      e8e02e0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00004010      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00004013      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004016      80fa55         cmp dl, 0x55
0x00004019      7475           je 0x4090
0x0000401b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000401e      7420           je 0x4040
0x00004020      488d05fc3800.  lea rax, str.l______l                   ; 0x7923 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004027      488d15f73800.  lea rdx, [0x00007925]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000402e      83fb09         cmp ebx, 9
0x00004031      480f45c2       cmovne rax, rdx
0x00004035      4883c408       add rsp, 8
0x00004039      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000403a      5d             pop rbp
0x0000403b      c3             ret
0x0000403c      0f1f4000       nop dword [rax]
0x00004040      0fb65001       movzx edx, byte [rax + 1]
0x00004044      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004047      80fa42         cmp dl, 0x42
0x0000404a      75d4           jne 0x4020
0x0000404c      80780231       cmp byte [rax + 2], 0x31
0x00004050      75ce           jne 0x4020
0x00004052      80780338       cmp byte [rax + 3], 0x38
0x00004056      75c8           jne 0x4020
0x00004058      80780430       cmp byte [rax + 4], 0x30
0x0000405c      75c2           jne 0x4020
0x0000405e      80780533       cmp byte [rax + 5], 0x33
0x00004062      75bc           jne 0x4020
0x00004064      80780630       cmp byte [rax + 6], 0x30
0x00004068      75b6           jne 0x4020
0x0000406a      80780700       cmp byte [rax + 7], 0
0x0000406e      75b0           jne 0x4020
0x00004070      807d0060       cmp byte [rbp], 0x60
0x00004074      488d05a13800.  lea rax, [0x0000791c]
0x0000407b      488d159e3800.  lea rdx, [0x00007920]
0x00004082      480f45c2       cmovne rax, rdx
0x00004086      4883c408       add rsp, 8
0x0000408a      5b             pop rbx
0x0000408b      5d             pop rbp
0x0000408c      c3             ret
0x0000408d      0f1f00         nop dword [rax]
0x00004090      0fb65001       movzx edx, byte [rax + 1]
0x00004094      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004097      80fa54         cmp dl, 0x54
0x0000409a      7584           jne 0x4020
0x0000409c      0fb65002       movzx edx, byte [rax + 2]
0x000040a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000040a3      80fa46         cmp dl, 0x46
0x000040a6      0f8574ffffff   jne 0x4020
0x000040ac      8078032d       cmp byte [rax + 3], 0x2d
0x000040b0      0f856affffff   jne 0x4020
0x000040b6      80780438       cmp byte [rax + 4], 0x38
0x000040ba      0f8560ffffff   jne 0x4020
0x000040c0      80780500       cmp byte [rax + 5], 0
0x000040c4      0f8556ffffff   jne 0x4020
0x000040ca      807d0060       cmp byte [rbp], 0x60
0x000040ce      488d053f3800.  lea rax, [0x00007914]                   ; "\u2018"
0x000040d5      488d153c3800.  lea rdx, [0x00007918]                   ; "\u2019"
0x000040dc      480f45c2       cmovne rax, rdx
0x000040e0      4883c408       add rsp, 8
0x000040e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000040e5      5d             pop rbp
0x000040e6      c3             ret
0x000040e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000040f0      4157           push r15
0x000040f2      4156           push r14
0x000040f4      4589c7         mov r15d, r8d
0x000040f7      4155           push r13
0x000040f9      4154           push r12
0x000040fb      4989fe         mov r14, rdi
0x000040fe      55             push rbp
0x000040ff      53             push rbx
0x00004100      4489cb         mov ebx, r9d
0x00004103      4989f5         mov r13, rsi
0x00004106      4889cd         mov rbp, rcx
0x00004109      83e302         and ebx, 2
0x0000410c      4881ecb80000.  sub rsp, 0xb8
0x00004113      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000411b      4889542410     mov qword [rsp + 0x10], rdx
0x00004120      4489442408     mov dword [rsp + 8], r8d
0x00004125      44894c2478     mov dword [rsp + 0x78], r9d
0x0000412a      4889442420     mov qword [rsp + 0x20], rax
0x0000412f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004137      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000413c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004144      4889442460     mov qword [rsp + 0x60], rax
0x00004149      64488b042528.  mov rax, qword fs:[0x28]
0x00004152      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000415a      31c0           xor eax, eax
0x0000415c      e82fd9ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004161      4183ff0a       cmp r15d, 0xa
0x00004165      4889442458     mov qword [rsp + 0x58], rax
0x0000416a      0f87af110000   ja 0x531f
0x00004170      488d0d093800.  lea rcx, [0x00007980]
0x00004177      4489fa         mov edx, r15d
0x0000417a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000417e      4801c8         add rax, rcx
0x00004181      ffe0           jmp rax
0x00004183      c644240e01     mov byte [rsp + 0xe], 1
0x00004188      c644247c00     mov byte [rsp + 0x7c], 0
0x0000418d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004190      48c744245000.  mov qword [rsp + 0x50], 0
0x00004199      c644240f01     mov byte [rsp + 0xf], 1
0x0000419e      c644240d00     mov byte [rsp + 0xd], 0
0x000041a3      488d057b3700.  lea rax, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041aa      48c744241801.  mov qword [rsp + 0x18], 1
0x000041b3      4531ff         xor r15d, r15d
0x000041b6      c74424080200.  mov dword [rsp + 8], 2
0x000041be      4889442448     mov qword [rsp + 0x48], rax
0x000041c3      4531db         xor r11d, r11d
0x000041c6      4889e8         mov rax, rbp
0x000041c9      4589e0         mov r8d, r12d
0x000041cc      4c89dd         mov rbp, r11
0x000041cf      4989c3         mov r11, rax
0x000041d2      660f1f440000   nop word [rax + rax]
0x000041d8      4939eb         cmp r11, rbp
0x000041db      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000041df      4983fbff       cmp r11, 0xffffffffffffffff
0x000041e3      750d           jne 0x41f2
0x000041e5      488b442410     mov rax, qword [rsp + 0x10]
0x000041ea      803c2800       cmp byte [rax + rbp], 0
0x000041ee      410f95c4       setne r12b
0x000041f2      4584e4         test r12b, r12b
0x000041f5      0f8455060000   je 0x4850
0x000041fb      837c240802     cmp dword [rsp + 8], 2
0x00004200      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004205      4c8d0c2f       lea r9, [rdi + rbp]
0x00004209      0f95c0         setne al
0x0000420c      2244240d       and al, byte [rsp + 0xd]
0x00004210      4189c2         mov r10d, eax
0x00004213      0f84a7000000   je 0x42c0
0x00004219      488b442418     mov rax, qword [rsp + 0x18]
0x0000421e      4885c0         test rax, rax
0x00004221      0f8429040000   je 0x4650
0x00004227      4983fbff       cmp r11, 0xffffffffffffffff
0x0000422b      488d5c0500     lea rbx, [rbp + rax]
0x00004230      752e           jne 0x4260
0x00004232      4883f801       cmp rax, 1
0x00004236      7628           jbe 0x4260
0x00004238      4488442438     mov byte [rsp + 0x38], r8b
0x0000423d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004242      4c894c2428     mov qword [rsp + 0x28], r9
0x00004247      e854d8ffff     call sym.imp.strlen
0x0000424c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004252      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004258      4989c3         mov r11, rax
0x0000425b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004260      4c39db         cmp rbx, r11
0x00004263      4488542428     mov byte [rsp + 0x28], r10b
0x00004268      0f87b2050000   ja 0x4820
0x0000426e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004273      488b742448     mov rsi, qword [rsp + 0x48]
0x00004278      4c89cf         mov rdi, r9
0x0000427b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004280      4488442438     mov byte [rsp + 0x38], r8b
0x00004285      4c894c2430     mov qword [rsp + 0x30], r9
0x0000428a      e801d9ffff     call sym.imp.memcmp
0x0000428f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004291      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004296      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000429c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000042a1      0f8579050000   jne 0x4820
0x000042a7      807c240f00     cmp byte [rsp + 0xf], 0
0x000042ac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000042b2      0f857d0f0000   jne 0x5235
0x000042b8      0f1f84000000.  nop dword [rax + rax]
0x000042c0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000042c4      80fb7e         cmp bl, 0x7e
0x000042c7      0f871b030000   ja 0x45e8
0x000042cd      488d0dd83600.  lea rcx, [0x000079ac]
0x000042d4      0fb6d3         movzx edx, bl
0x000042d7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000042db      4801c8         add rax, rcx
0x000042de      ffe0           jmp rax
0x000042e0      4531d2         xor r10d, r10d
0x000042e3      4983fb01       cmp r11, 1
0x000042e7      0f95c0         setne al
0x000042ea      4983fbff       cmp r11, 0xffffffffffffffff
0x000042ee      750c           jne 0x42fc
0x000042f0      488b442410     mov rax, qword [rsp + 0x10]
0x000042f5      80780100       cmp byte [rax + 1], 0
0x000042f9      0f95c0         setne al
0x000042fc      837c240802     cmp dword [rsp + 8], 2
0x00004301      0f94c2         sete dl
0x00004304      84c0           test al, al
0x00004306      0f844c020000   je 0x4558
0x0000430c      4531e4         xor r12d, r12d
0x0000430f      31c0           xor eax, eax
0x00004311      0f1f80000000.  nop dword [rax]
0x00004318      807c240d01     cmp byte [rsp + 0xd], 1
0x0000431d      0f850f010000   jne 0x4432
0x00004323      84d2           test dl, dl
0x00004325      0f8507010000   jne 0x4432
0x0000432b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004330      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004333      7414           je 0x4349
0x00004335      89da           mov edx, ebx
0x00004337      c0ea05         shr dl, 5
0x0000433a      0fb6d2         movzx edx, dl
0x0000433d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004340      0fa3da         bt edx, ebx
0x00004343      0f824a010000   jb 0x4493
0x00004349      4584d2         test r10b, r10b
0x0000434c      0f8541010000   jne 0x4493
0x00004352      83f001         xor eax, 1
0x00004355      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004359      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000435c      84c0           test al, al
0x0000435e      7420           je 0x4380                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004360      4d39fd         cmp r13, r15
0x00004363      7605           jbe 0x436a
0x00004365      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000436a      498d4701       lea rax, [r15 + 1]
0x0000436e      4939c5         cmp r13, rax
0x00004371      7606           jbe 0x4379
0x00004373      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004379      4983c702       add r15, 2
0x0000437d      4531c0         xor r8d, r8d
0x00004380      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004383      7304           jae 0x4389                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004385      43881c3e       mov byte [r14 + r15], bl
0x00004389      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000438e      4983c701       add r15, 1
0x00004392      b800000000     mov eax, 0
0x00004397      4584e4         test r12b, r12b
0x0000439a      0f44f8         cmove edi, eax
0x0000439d      40887c240e     mov byte [rsp + 0xe], dil
0x000043a2      e931feffff     jmp 0x41d8
0x000043a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000043b0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000043b3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000043b7      83f802         cmp eax, 2
0x000043ba      0f84b8050000   je 0x4978
0x000043c0      83f805         cmp eax, 5
0x000043c3      0f846f050000   je 0x4938
0x000043c9      83f802         cmp eax, 2
0x000043cc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000043d1      0f94c2         sete dl
0x000043d4      4531e4         xor r12d, r12d
0x000043d7      31c0           xor eax, eax
0x000043d9      e93affffff     jmp 0x4318
0x000043de      6690           nop
0x000043e0      4531d2         xor r10d, r10d
0x000043e3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000043e8      0f8402050000   je 0x48f0
0x000043ee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000043f3      31d2           xor edx, edx
0x000043f5      31c0           xor eax, eax
0x000043f7      bb27000000     mov ebx, 0x27                           ; '''
0x000043fc      e917ffffff     jmp 0x4318
0x00004401      0f1f80000000.  nop dword [rax]
0x00004408      ba09000000     mov edx, 9
0x0000440d      bb74000000     mov ebx, 0x74                           ; 't'
0x00004412      837c240802     cmp dword [rsp + 8], 2
0x00004417      0f94c0         sete al
0x0000441a      2244240f       and al, byte [rsp + 0xf]
0x0000441e      0f854a010000   jne 0x456e
0x00004424      807c240d00     cmp byte [rsp + 0xd], 0
0x00004429      7565           jne 0x4490
0x0000442b      89d3           mov ebx, edx
0x0000442d      4531e4         xor r12d, r12d
0x00004430      31c0           xor eax, eax
0x00004432      807c240f00     cmp byte [rsp + 0xf], 0
0x00004437      0f85eefeffff   jne 0x432b
0x0000443d      e907ffffff     jmp 0x4349                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004442      660f1f440000   nop word [rax + rax]
0x00004448      ba08000000     mov edx, 8
0x0000444d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004452      ebd0           jmp 0x4424
0x00004454      0f1f4000       nop dword [rax]
0x00004458      837c240802     cmp dword [rsp + 8], 2
0x0000445d      0f84cd030000   je 0x4830
0x00004463      807c240d00     cmp byte [rsp + 0xd], 0
0x00004468      0f8412020000   je 0x4680
0x0000446e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004473      0f8407020000   je 0x4680
0x00004479      48837c241800   cmp qword [rsp + 0x18], 0
0x0000447f      0f85b6030000   jne 0x483b
0x00004485      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000448a      660f1f440000   nop word [rax + rax]
0x00004490      4531e4         xor r12d, r12d
0x00004493      837c240802     cmp dword [rsp + 8], 2
0x00004498      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000449b      807c240f00     cmp byte [rsp + 0xf], 0
0x000044a0      89d0           mov eax, edx
0x000044a2      0f8550080000   jne 0x4cf8
0x000044a8      4489c0         mov eax, r8d
0x000044ab      83f001         xor eax, 1
0x000044ae      20d0           and al, dl
0x000044b0      742f           je 0x44e1
0x000044b2      4d39fd         cmp r13, r15
0x000044b5      7605           jbe 0x44bc
0x000044b7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044bc      498d5701       lea rdx, [r15 + 1]
0x000044c0      4939d5         cmp r13, rdx
0x000044c3      7606           jbe 0x44cb
0x000044c5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000044cb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000044cf      4939d5         cmp r13, rdx
0x000044d2      7606           jbe 0x44da
0x000044d4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044da      4983c703       add r15, 3
0x000044de      4189c0         mov r8d, eax
0x000044e1      4d39fd         cmp r13, r15
0x000044e4      7605           jbe 0x44eb
0x000044e6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000044eb      4983c701       add r15, 1
0x000044ef      4883c501       add rbp, 1
0x000044f3      e988feffff     jmp 0x4380
0x000044f8      0f1f84000000.  nop dword [rax + rax]
0x00004500      807c240d00     cmp byte [rsp + 0xd], 0
0x00004505      0f85c8010000   jne 0x46d3
0x0000450b      31d2           xor edx, edx
0x0000450d      f644247801     test byte [rsp + 0x78], 1
0x00004512      0f8413ffffff   je 0x442b
0x00004518      4883c501       add rbp, 1
0x0000451c      e9b7fcffff     jmp 0x41d8
0x00004521      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004528      837c240802     cmp dword [rsp + 8], 2
0x0000452d      0f94c2         sete dl
0x00004530      31c0           xor eax, eax
0x00004532      e9e1fdffff     jmp 0x4318
0x00004537      660f1f840000.  nop word [rax + rax]
0x00004540      ba07000000     mov edx, 7
0x00004545      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000454a      e9d5feffff     jmp 0x4424
0x0000454f      90             nop
0x00004550      837c240802     cmp dword [rsp + 8], 2
0x00004555      0f94c2         sete dl
0x00004558      4885ed         test rbp, rbp
0x0000455b      0f85abfdffff   jne 0x430c
0x00004561      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004566      20d0           and al, dl
0x00004568      0f84aafdffff   je 0x4318
0x0000456e      4c89dd         mov rbp, r11
0x00004571      c74424080200.  mov dword [rsp + 8], 2
0x00004579      e9fb060000     jmp 0x4c79
0x0000457e      6690           nop
0x00004580      837c240802     cmp dword [rsp + 8], 2
0x00004585      0f94c2         sete dl
0x00004588      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000458b      ebd4           jmp 0x4561
0x0000458d      0f1f00         nop dword [rax]
0x00004590      837c240802     cmp dword [rsp + 8], 2
0x00004595      bb20000000     mov ebx, 0x20                           ; "@"
0x0000459a      0f94c2         sete dl
0x0000459d      ebc2           jmp 0x4561
0x0000459f      90             nop
0x000045a0      ba0d000000     mov edx, 0xd
0x000045a5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000045aa      e963feffff     jmp 0x4412
0x000045af      90             nop
0x000045b0      ba0c000000     mov edx, 0xc
0x000045b5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000045ba      e965feffff     jmp 0x4424
0x000045bf      90             nop
0x000045c0      ba0b000000     mov edx, 0xb
0x000045c5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000045ca      e955feffff     jmp 0x4424
0x000045cf      90             nop
0x000045d0      ba0a000000     mov edx, 0xa
0x000045d5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000045da      e933feffff     jmp 0x4412
0x000045df      90             nop
0x000045e0      4531d2         xor r10d, r10d
0x000045e3      0f1f440000     nop dword [rax + rax]
0x000045e8      48837c245801   cmp qword [rsp + 0x58], 1
0x000045ee      0f85a4030000   jne 0x4998
0x000045f4      4c895c2438     mov qword [rsp + 0x38], r11
0x000045f9      4488442430     mov byte [rsp + 0x30], r8b
0x000045fe      4488542428     mov byte [rsp + 0x28], r10b
0x00004603      e8a8d7ffff     call sym.imp.__ctype_b_loc
0x00004608      488b08         mov rcx, qword [rax]
0x0000460b      0fb6d3         movzx edx, bl
0x0000460e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004614      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000461a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000461f      bf01000000     mov edi, 1
0x00004624      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004628      66250040       and ax, sym.gettext_quote.part.1        ; 0x4000 ; "USH\x89\xfd\x89\xf3H\x83\xec\b\xe8\xe0."
0x0000462c      410f95c4       setne r12b
0x00004630      0f94c0         sete al
0x00004633      2244240d       and al, byte [rsp + 0xd]
0x00004637      84c0           test al, al
0x00004639      0f8592090000   jne 0x4fd1
0x0000463f      837c240802     cmp dword [rsp + 8], 2
0x00004644      0f94c2         sete dl
0x00004647      e9ccfcffff     jmp 0x4318
0x0000464c      0f1f4000       nop dword [rax]
0x00004650      410fb619       movzx ebx, byte [r9]
0x00004654      80fb7e         cmp bl, 0x7e
0x00004657      7787           ja 0x45e0
0x00004659      488d0d483500.  lea rcx, [0x00007ba8]
0x00004660      0fb6d3         movzx edx, bl
0x00004663      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004667      4801c8         add rax, rcx
0x0000466a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000466c      0f1f4000       nop dword [rax]
0x00004670      4531d2         xor r10d, r10d
0x00004673      807c240d00     cmp byte [rsp + 0xd], 0
0x00004678      0f85f0fdffff   jne 0x446e
0x0000467e      6690           nop
0x00004680      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004685      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000468a      e995fdffff     jmp 0x4424
0x0000468f      90             nop
0x00004690      ba0c000000     mov edx, 0xc
0x00004695      4531d2         xor r10d, r10d
0x00004698      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000469d      e982fdffff     jmp 0x4424
0x000046a2      660f1f440000   nop word [rax + rax]
0x000046a8      ba0a000000     mov edx, 0xa
0x000046ad      4531d2         xor r10d, r10d
0x000046b0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000046b5      e958fdffff     jmp 0x4412
0x000046ba      660f1f440000   nop word [rax + rax]
0x000046c0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000046c5      e9c6fdffff     jmp 0x4490
0x000046ca      660f1f440000   nop word [rax + rax]
0x000046d0      4531d2         xor r10d, r10d
0x000046d3      837c240802     cmp dword [rsp + 8], 2
0x000046d8      0f94c2         sete dl
0x000046db      807c240f00     cmp byte [rsp + 0xf], 0
0x000046e0      0f85940b0000   jne 0x527a
0x000046e6      4489c0         mov eax, r8d
0x000046e9      4c89f9         mov rcx, r15
0x000046ec      83f001         xor eax, 1
0x000046ef      20d0           and al, dl
0x000046f1      742d           je 0x4720
0x000046f3      4d39fd         cmp r13, r15
0x000046f6      7605           jbe 0x46fd
0x000046f8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000046fd      498d4f01       lea rcx, [r15 + 1]
0x00004701      4939cd         cmp r13, rcx
0x00004704      7606           jbe 0x470c
0x00004706      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000470c      498d4f02       lea rcx, [r15 + 2]
0x00004710      4939cd         cmp r13, rcx
0x00004713      0f8730060000   ja 0x4d49
0x00004719      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000471d      4189c0         mov r8d, eax
0x00004720      4939cd         cmp r13, rcx
0x00004723      7605           jbe 0x472a
0x00004725      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000472a      837c240802     cmp dword [rsp + 8], 2
0x0000472f      4c8d7901       lea r15, [rcx + 1]
0x00004733      0f8400060000   je 0x4d39
0x00004739      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000473d      4c39d8         cmp rax, r11
0x00004740      7319           jae 0x475b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004742      488b442410     mov rax, qword [rsp + 0x10]
0x00004747      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000474c      88442428       mov byte [rsp + 0x28], al
0x00004750      83e830         sub eax, 0x30
0x00004753      3c09           cmp al, 9
0x00004755      0f862e080000   jbe 0x4f89
0x0000475b      4489e0         mov eax, r12d
0x0000475e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004763      4531e4         xor r12d, r12d
0x00004766      e9adfbffff     jmp 0x4318                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000476b      0f1f440000     nop dword [rax + rax]
0x00004770      837c240802     cmp dword [rsp + 8], 2
0x00004775      4589d4         mov r12d, r10d
0x00004778      0f94c2         sete dl
0x0000477b      4531d2         xor r10d, r10d
0x0000477e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004780      e993fbffff     jmp 0x4318                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004785      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004788      837c240802     cmp dword [rsp + 8], 2
0x0000478d      0f94c2         sete dl
0x00004790      4531d2         xor r10d, r10d
0x00004793      e9c0fdffff     jmp 0x4558
0x00004798      0f1f84000000.  nop dword [rax + rax]
0x000047a0      837c240802     cmp dword [rsp + 8], 2
0x000047a5      0f94c2         sete dl
0x000047a8      4531d2         xor r10d, r10d
0x000047ab      4531e4         xor r12d, r12d
0x000047ae      e9aefdffff     jmp 0x4561
0x000047b3      0f1f440000     nop dword [rax + rax]
0x000047b8      837c240802     cmp dword [rsp + 8], 2
0x000047bd      4589d4         mov r12d, r10d
0x000047c0      bb20000000     mov ebx, 0x20                           ; "@"
0x000047c5      0f94c2         sete dl
0x000047c8      4531d2         xor r10d, r10d
0x000047cb      e991fdffff     jmp 0x4561
0x000047d0      ba0d000000     mov edx, 0xd
0x000047d5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000047d8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000047dd      e930fcffff     jmp 0x4412
0x000047e2      660f1f440000   nop word [rax + rax]
0x000047e8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000047ed      e99efcffff     jmp 0x4490
0x000047f2      660f1f440000   nop word [rax + rax]
0x000047f8      ba09000000     mov edx, 9
0x000047fd      4531d2         xor r10d, r10d
0x00004800      bb74000000     mov ebx, 0x74                           ; 't'
0x00004805      e908fcffff     jmp 0x4412
0x0000480a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004810      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004815      e976fcffff     jmp 0x4490
0x0000481a      660f1f440000   nop word [rax + rax]
0x00004820      4531d2         xor r10d, r10d
0x00004823      e998faffff     jmp 0x42c0
0x00004828      0f1f84000000.  nop dword [rax + rax]
0x00004830      807c240f00     cmp byte [rsp + 0xf], 0
0x00004835      0f8565090000   jne 0x51a0
0x0000483b      4883c501       add rbp, 1
0x0000483f      4489c0         mov eax, r8d
0x00004842      4531e4         xor r12d, r12d
0x00004845      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000484a      e90dfbffff     jmp 0x435c
0x0000484f      90             nop
0x00004850      837c240802     cmp dword [rsp + 8], 2
0x00004855      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000485a      4589c4         mov r12d, r8d
0x0000485d      4c89dd         mov rbp, r11
0x00004860      0f94c2         sete dl
0x00004863      89d8           mov eax, ebx
0x00004865      4d85ff         test r15, r15
0x00004868      0f94c1         sete cl
0x0000486b      21d0           and eax, edx
0x0000486d      20c8           and al, cl
0x0000486f      0f85610a0000   jne 0x52d6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004875      89d8           mov eax, ebx
0x00004877      83f001         xor eax, 1
0x0000487a      20c2           and dl, al
0x0000487c      0f846a090000   je 0x51ec
0x00004882      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004887      0f845d090000   je 0x51ea
0x0000488d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004892      0f85f5090000   jne 0x528d
0x00004898      4d85ed         test r13, r13
0x0000489b      0f94c0         sete al
0x0000489e      48837c245000   cmp qword [rsp + 0x50], 0
0x000048a4      0f95c2         setne dl
0x000048a7      20d0           and al, dl
0x000048a9      0f841d0a0000   je 0x52cc
0x000048af      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000048b4      488d1d6a3000.  lea rbx, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000048bb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000048bf      c74424080200.  mov dword [rsp + 8], 2
0x000048c7      41bf01000000   mov r15d, 1
0x000048cd      48c744241801.  mov qword [rsp + 0x18], 1
0x000048d6      c644240f00     mov byte [rsp + 0xf], 0
0x000048db      48895c2448     mov qword [rsp + 0x48], rbx
0x000048e0      8844247c       mov byte [rsp + 0x7c], al
0x000048e4      e9daf8ffff     jmp 0x41c3
0x000048e9      0f1f80000000.  nop dword [rax]
0x000048f0      807c240f00     cmp byte [rsp + 0xf], 0
0x000048f5      0f85a5080000   jne 0x51a0
0x000048fb      4d85ed         test r13, r13
0x000048fe      0f84fc030000   je 0x4d00                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004904      31d2           xor edx, edx
0x00004906      48837c245000   cmp qword [rsp + 0x50], 0
0x0000490c      0f85ee030000   jne 0x4d00                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004912      4c896c2450     mov qword [rsp + 0x50], r13
0x00004917      4983c703       add r15, 3
0x0000491b      31c0           xor eax, eax
0x0000491d      448864247c     mov byte [rsp + 0x7c], r12b
0x00004922      4531c0         xor r8d, r8d
0x00004925      4989d5         mov r13, rdx
0x00004928      bb27000000     mov ebx, 0x27                           ; '''
0x0000492d      e917faffff     jmp 0x4349
0x00004932      660f1f440000   nop word [rax + rax]
0x00004938      f644247804     test byte [rsp + 0x78], 4
0x0000493d      7421           je 0x4960
0x0000493f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004943      4c39d9         cmp rcx, r11
0x00004946      7318           jae 0x4960
0x00004948      488b442410     mov rax, qword [rsp + 0x10]
0x0000494d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004952      0f848a070000   je 0x50e2
0x00004958      0f1f84000000.  nop dword [rax + rax]
0x00004960      31d2           xor edx, edx
0x00004962      4531e4         xor r12d, r12d
0x00004965      31c0           xor eax, eax
0x00004967      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000496c      e9a7f9ffff     jmp 0x4318
0x00004971      0f1f80000000.  nop dword [rax]
0x00004978      807c240f00     cmp byte [rsp + 0xf], 0
0x0000497d      0f851d080000   jne 0x51a0
0x00004983      4531e4         xor r12d, r12d
0x00004986      31c0           xor eax, eax
0x00004988      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000498d      e9b7f9ffff     jmp 0x4349                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004992      660f1f440000   nop word [rax + rax]
0x00004998      488d8424a000.  lea rax, [rsp + 0xa0]
0x000049a0      4983fbff       cmp r11, 0xffffffffffffffff
0x000049a4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000049b0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000049b5      752d           jne 0x49e4
0x000049b7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000049bc      4488442440     mov byte [rsp + 0x40], r8b
0x000049c1      4488542438     mov byte [rsp + 0x38], r10b
0x000049c6      4c894c2430     mov qword [rsp + 0x30], r9
0x000049cb      e8d0d0ffff     call sym.imp.strlen
0x000049d0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000049d6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000049dc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000049df      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000049e4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000049ec      31c9           xor ecx, ecx
0x000049ee      885c247e       mov byte [rsp + 0x7e], bl
0x000049f2      448844247d     mov byte [rsp + 0x7d], r8b
0x000049f7      4889cb         mov rbx, rcx
0x000049fa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004a02      4889442438     mov qword [rsp + 0x38], rax
0x00004a07      448854247f     mov byte [rsp + 0x7f], r10b
0x00004a0c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004a14      4c89742440     mov qword [rsp + 0x40], r14
0x00004a19      4c896c2470     mov qword [rsp + 0x70], r13
0x00004a1e      4c895c2430     mov qword [rsp + 0x30], r11
0x00004a23      488b442410     mov rax, qword [rsp + 0x10]
0x00004a28      4c8d741d00     lea r14, [rbp + rbx]
0x00004a2d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004a32      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004a37      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004a3c      4e8d2c30       lea r13, [rax + r14]
0x00004a40      4c29f2         sub rdx, r14
0x00004a43      4c89ee         mov rsi, r13
0x00004a46      e815200000     call sym.rpl_mbrtowc
0x00004a4b      4885c0         test rax, rax
0x00004a4e      4989c7         mov r15, rax
0x00004a51      744e           je 0x4aa1
0x00004a53      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004a57      0f8418060000   je 0x5075
0x00004a5d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004a61      0f849a050000   je 0x5001
0x00004a67      837c240802     cmp dword [rsp + 8], 2
0x00004a6c      0f94c0         sete al
0x00004a6f      2244240f       and al, byte [rsp + 0xf]
0x00004a73      0f8597010000   jne 0x4c10
0x00004a79      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004a80      e80bd3ffff     call sym.imp.iswprint
0x00004a85      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004a8a      85c0           test eax, eax
0x00004a8c      b800000000     mov eax, 0
0x00004a91      440f44e0       cmove r12d, eax
0x00004a95      4c01fb         add rbx, r15
0x00004a98      e8e3d2ffff     call sym.imp.mbsinit
0x00004a9d      85c0           test eax, eax
0x00004a9f      7482           je 0x4a23
0x00004aa1      4489e2         mov edx, r12d
0x00004aa4      4889df         mov rdi, rbx
0x00004aa7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004aad      83f201         xor edx, 1
0x00004ab0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004ab5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004abb      2254240d       and dl, byte [rsp + 0xd]
0x00004abf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004ac7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004acc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004ad1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004ad6      4883ff01       cmp rdi, 1
0x00004ada      0f86fb050000   jbe 0x50db
0x00004ae0      4889f9         mov rcx, rdi
0x00004ae3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004ae5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004aeb      4801e9         add rcx, rbp
0x00004aee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004af3      e9b6000000     jmp 0x4bae
0x00004af8      0f1f84000000.  nop dword [rax + rax]
0x00004b00      837c240802     cmp dword [rsp + 8], 2
0x00004b05      0f94c0         sete al
0x00004b08      4584c9         test r9b, r9b
0x00004b0b      0f85af040000   jne 0x4fc0
0x00004b11      4489c6         mov esi, r8d
0x00004b14      83f601         xor esi, 1
0x00004b17      4020f0         and al, sil
0x00004b1a      742f           je 0x4b4b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004b1c      4d39fd         cmp r13, r15
0x00004b1f      7605           jbe 0x4b26
0x00004b21      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004b26      498d7701       lea rsi, [r15 + 1]
0x00004b2a      4939f5         cmp r13, rsi
0x00004b2d      7606           jbe 0x4b35                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004b2f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004b35      498d7702       lea rsi, [r15 + 2]
0x00004b39      4939f5         cmp r13, rsi
0x00004b3c      7606           jbe 0x4b44
0x00004b3e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004b44      4983c703       add r15, 3
0x00004b48      4189c0         mov r8d, eax
0x00004b4b      4d39fd         cmp r13, r15
0x00004b4e      7605           jbe 0x4b55
0x00004b50      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004b55      498d4701       lea rax, [r15 + 1]
0x00004b59      4939c5         cmp r13, rax
0x00004b5c      760d           jbe 0x4b6b
0x00004b5e      89d8           mov eax, ebx
0x00004b60      c0e806         shr al, 6
0x00004b63      83c030         add eax, 0x30
0x00004b66      4388443e01     mov byte [r14 + r15 + 1], al
0x00004b6b      498d4702       lea rax, [r15 + 2]
0x00004b6f      4939c5         cmp r13, rax
0x00004b72      7610           jbe 0x4b84
0x00004b74      89d8           mov eax, ebx
0x00004b76      c0e803         shr al, 3
0x00004b79      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004b7c      83c030         add eax, 0x30
0x00004b7f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004b84      83e307         and ebx, 7
0x00004b87      4883c501       add rbp, 1
0x00004b8b      4983c703       add r15, 3
0x00004b8f      83c330         add ebx, 0x30
0x00004b92      4839cd         cmp rbp, rcx
0x00004b95      0f83e5f7ffff   jae 0x4380
0x00004b9b      89d6           mov esi, edx
0x00004b9d      4d39fd         cmp r13, r15
0x00004ba0      7604           jbe 0x4ba6
0x00004ba2      43881c3e       mov byte [r14 + r15], bl
0x00004ba6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004baa      4983c701       add r15, 1
0x00004bae      84d2           test dl, dl
0x00004bb0      0f854affffff   jne 0x4b00
0x00004bb6      89f0           mov eax, esi
0x00004bb8      83f001         xor eax, 1
0x00004bbb      4421c0         and eax, r8d
0x00004bbe      4584d2         test r10b, r10b
0x00004bc1      740e           je 0x4bd1
0x00004bc3      4d39fd         cmp r13, r15
0x00004bc6      7605           jbe 0x4bcd
0x00004bc8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004bcd      4983c701       add r15, 1
0x00004bd1      4883c501       add rbp, 1
0x00004bd5      4839cd         cmp rbp, rcx
0x00004bd8      0f837ef7ffff   jae 0x435c
0x00004bde      84c0           test al, al
0x00004be0      0f84f8030000   je 0x4fde
0x00004be6      4d39fd         cmp r13, r15
0x00004be9      7605           jbe 0x4bf0
0x00004beb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004bf0      498d4701       lea rax, [r15 + 1]
0x00004bf4      4939c5         cmp r13, rax
0x00004bf7      7606           jbe 0x4bff
0x00004bf9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004bff      4983c702       add r15, 2
0x00004c03      4531d2         xor r10d, r10d
0x00004c06      4531c0         xor r8d, r8d
0x00004c09      eb92           jmp 0x4b9d
0x00004c0b      0f1f440000     nop dword [rax + rax]
0x00004c10      4983ff01       cmp r15, 1
0x00004c14      0f845ffeffff   je 0x4a79
0x00004c1a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004c1f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004c23      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004c28      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004c2c      eb0f           jmp 0x4c3d
0x00004c2e      6690           nop
0x00004c30      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004c34      4939d0         cmp r8, rdx
0x00004c37      0f843cfeffff   je 0x4a79
0x00004c3d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004c40      83e95b         sub ecx, 0x5b
0x00004c43      80f921         cmp cl, 0x21
0x00004c46      77e8           ja 0x4c30                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004c48      be01000000     mov esi, 1
0x00004c4d      48d3e6         shl rsi, cl
0x00004c50      4889f1         mov rcx, rsi
0x00004c53      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004c5d      4885f1         test rcx, rsi
0x00004c60      74ce           je 0x4c30
0x00004c62      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004c67      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004c6c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004c71      c74424080200.  mov dword [rsp + 8], 2
0x00004c79      807c240d00     cmp byte [rsp + 0xd], 0
0x00004c7e      7410           je 0x4c90
0x00004c80      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004c82      b804000000     mov eax, 4
0x00004c87      0f44442408     cmove eax, dword [rsp + 8]
0x00004c8c      89442408       mov dword [rsp + 8], eax
0x00004c90      4883ec08       sub rsp, 8
0x00004c94      4889e9         mov rcx, rbp
0x00004c97      4c89ee         mov rsi, r13
0x00004c9a      ff742468       push qword [rsp + 0x68]
0x00004c9e      ff742478       push qword [rsp + 0x78]
0x00004ca2      4c89f7         mov rdi, r14
0x00004ca5      6a00           push 0
0x00004ca7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004caf      448b442428     mov r8d, dword [rsp + 0x28]
0x00004cb4      488b542430     mov rdx, qword [rsp + 0x30]
0x00004cb9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004cbd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004cc2      4883c420       add rsp, 0x20
0x00004cc6      4989c7         mov r15, rax
0x00004cc9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004cd1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004cda      4c89f8         mov rax, r15
0x00004cdd      0f8500060000   jne 0x52e3
0x00004ce3      4881c4b80000.  add rsp, 0xb8
0x00004cea      5b             pop rbx
0x00004ceb      5d             pop rbp
0x00004cec      415c           pop r12
0x00004cee      415d           pop r13
0x00004cf0      415e           pop r14
0x00004cf2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004cf4      c3             ret
0x00004cf5      0f1f00         nop dword [rax]
0x00004cf8      4c89dd         mov rbp, r11
0x00004cfb      e979ffffff     jmp 0x4c79
0x00004d00      4d39fd         cmp r13, r15
0x00004d03      7605           jbe 0x4d0a
0x00004d05      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004d0a      498d4701       lea rax, [r15 + 1]
0x00004d0e      4939c5         cmp r13, rax
0x00004d11      7606           jbe 0x4d19
0x00004d13      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004d19      498d4702       lea rax, [r15 + 2]
0x00004d1d      4939c5         cmp r13, rax
0x00004d20      0f86ec050000   jbe 0x5312
0x00004d26      4c89ea         mov rdx, r13
0x00004d29      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004d2f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004d34      e9d9fbffff     jmp 0x4912
0x00004d39      4489e0         mov eax, r12d
0x00004d3c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004d41      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004d44      e900f6ffff     jmp 0x4349                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004d49      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004d4f      e9c5f9ffff     jmp 0x4719
0x00004d54      85db           test ebx, ebx
0x00004d56      0f8527f4ffff   jne 0x4183
0x00004d5c      c644240d01     mov byte [rsp + 0xd], 1
0x00004d61      4d85ed         test r13, r13
0x00004d64      0f8590050000   jne 0x52fa
0x00004d6a      488d05b42b00.  lea rax, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004d71      48c744245000.  mov qword [rsp + 0x50], 0
0x00004d7a      c644240e01     mov byte [rsp + 0xe], 1
0x00004d7f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004d84      4531e4         xor r12d, r12d
0x00004d87      c644240f00     mov byte [rsp + 0xf], 0
0x00004d8c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004d95      4889442448     mov qword [rsp + 0x48], rax
0x00004d9a      41bf01000000   mov r15d, 1
0x00004da0      c74424080200.  mov dword [rsp + 8], 2
0x00004da8      e916f4ffff     jmp 0x41c3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00004dad      0f1f00         nop dword [rax]
0x00004db0      85db           test ebx, ebx
0x00004db2      0f85f5030000   jne 0x51ad
0x00004db8      4d85ed         test r13, r13
0x00004dbb      0f8425020000   je 0x4fe6
0x00004dc1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004dc5      c644240e01     mov byte [rsp + 0xe], 1
0x00004dca      4531e4         xor r12d, r12d
0x00004dcd      c644247c00     mov byte [rsp + 0x7c], 0
0x00004dd2      48c744245000.  mov qword [rsp + 0x50], 0
0x00004ddb      488d05412b00.  lea rax, str.l______l                   ; 0x7923 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004de2      c644240f00     mov byte [rsp + 0xf], 0
0x00004de7      c644240d01     mov byte [rsp + 0xd], 1
0x00004dec      48c744241801.  mov qword [rsp + 0x18], 1
0x00004df5      41bf01000000   mov r15d, 1
0x00004dfb      4889442448     mov qword [rsp + 0x48], rax
0x00004e00      e9bef3ffff     jmp 0x41c3
0x00004e05      488d05172b00.  lea rax, str.l______l                   ; 0x7923 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004e0c      c644240e01     mov byte [rsp + 0xe], 1
0x00004e11      c644247c00     mov byte [rsp + 0x7c], 0
0x00004e16      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004e19      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e22      c644240f01     mov byte [rsp + 0xf], 1
0x00004e27      c644240d01     mov byte [rsp + 0xd], 1
0x00004e2c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004e35      4531ff         xor r15d, r15d
0x00004e38      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00004e3d      c74424080500.  mov dword [rsp + 8], 5
0x00004e45      e979f3ffff     jmp 0x41c3
0x00004e4a      c644240e01     mov byte [rsp + 0xe], 1
0x00004e4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004e54      4531e4         xor r12d, r12d
0x00004e57      48c744245000.  mov qword [rsp + 0x50], 0
0x00004e60      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004e65      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004e68      c644240d01     mov byte [rsp + 0xd], 1
0x00004e6d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004e76      48c744244800.  mov qword [rsp + 0x48], 0
0x00004e7f      e93ff3ffff     jmp 0x41c3
0x00004e84      837c24080a     cmp dword [rsp + 8], 0xa
0x00004e89      7456           je 0x4ee1
0x00004e8b      488d35952a00.  lea rsi, [0x00007927]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004e92      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004e94      ba05000000     mov edx, 5
0x00004e99      e8e2cbffff     call sym.imp.dcgettext
0x00004e9e      4889c1         mov rcx, rax
0x00004ea1      4889442468     mov qword [rsp + 0x68], rax
0x00004ea6      488d057a2a00.  lea rax, [0x00007927]                   ; "`"
0x00004ead      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004eb0      0f8498030000   je 0x524e
0x00004eb6      488d35682a00.  lea rsi, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004ebd      31ff           xor edi, edi
0x00004ebf      ba05000000     mov edx, 5
0x00004ec4      e8b7cbffff     call sym.imp.dcgettext
0x00004ec9      4889c1         mov rcx, rax
0x00004ecc      4889442460     mov qword [rsp + 0x60], rax
0x00004ed1      488d054d2a00.  lea rax, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004ed8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00004edb      0f8483030000   je 0x5264
0x00004ee1      4531ff         xor r15d, r15d
0x00004ee4      85db           test ebx, ebx
0x00004ee6      0f84c1010000   je 0x50ad
0x00004eec      85db           test ebx, ebx
0x00004eee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004ef3      0f9544240f     setne byte [rsp + 0xf]
0x00004ef8      4531e4         xor r12d, r12d
0x00004efb      4889df         mov rdi, rbx
0x00004efe      e89dcbffff     call sym.imp.strlen
0x00004f03      48895c2448     mov qword [rsp + 0x48], rbx
0x00004f08      4889442418     mov qword [rsp + 0x18], rax
0x00004f0d      c644240e01     mov byte [rsp + 0xe], 1
0x00004f12      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f17      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f20      c644240d01     mov byte [rsp + 0xd], 1
0x00004f25      e999f2ffff     jmp 0x41c3
0x00004f2a      c644240e01     mov byte [rsp + 0xe], 1
0x00004f2f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f34      4531e4         xor r12d, r12d
0x00004f37      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f40      c644240f00     mov byte [rsp + 0xf], 0
0x00004f45      4531ff         xor r15d, r15d
0x00004f48      c644240d00     mov byte [rsp + 0xd], 0
0x00004f4d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004f56      48c744244800.  mov qword [rsp + 0x48], 0
0x00004f5f      e95ff2ffff     jmp 0x41c3
0x00004f64      c644240e01     mov byte [rsp + 0xe], 1
0x00004f69      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f6e      4531e4         xor r12d, r12d
0x00004f71      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f7a      c644240f01     mov byte [rsp + 0xf], 1
0x00004f7f      c644240d01     mov byte [rsp + 0xd], 1
0x00004f84      e91af2ffff     jmp 0x41a3
0x00004f89      4d39fd         cmp r13, r15
0x00004f8c      7605           jbe 0x4f93
0x00004f8e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004f93      488d4102       lea rax, [rcx + 2]
0x00004f97      4939c5         cmp r13, rax
0x00004f9a      7606           jbe 0x4fa2
0x00004f9c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004fa2      4489e0         mov eax, r12d
0x00004fa5      4c8d7903       lea r15, [rcx + 3]
0x00004fa9      4531e4         xor r12d, r12d
0x00004fac      bb30000000     mov ebx, 0x30                           ; '0'
0x00004fb1      e962f3ffff     jmp 0x4318
0x00004fb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004fc0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004fc5      4c89dd         mov rbp, r11
0x00004fc8      885c240d       mov byte [rsp + 0xd], bl
0x00004fcc      e9a8fcffff     jmp 0x4c79
0x00004fd1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004fd6      4531e4         xor r12d, r12d
0x00004fd9      e902fbffff     jmp 0x4ae0
0x00004fde      4531d2         xor r10d, r10d
0x00004fe1      e9b7fbffff     jmp 0x4b9d
0x00004fe6      48c744245000.  mov qword [rsp + 0x50], 0
0x00004fef      c644240e01     mov byte [rsp + 0xe], 1
0x00004ff4      4531e4         xor r12d, r12d
0x00004ff7      c644247c00     mov byte [rsp + 0x7c], 0
0x00004ffc      e9dafdffff     jmp 0x4ddb
0x00005001      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005006      4c89f6         mov rsi, r14
0x00005009      4c89e9         mov rcx, r13
0x0000500c      4889d8         mov rax, rbx
0x0000500f      4889df         mov rdi, rbx
0x00005012      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00005018      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000501d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005025      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005028      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000502e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005036      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000503b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005040      7326           jae 0x5068
0x00005042      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005045      7510           jne 0x5057
0x00005047      eb1f           jmp 0x5068
0x00005049      0f1f80000000.  nop dword [rax]
0x00005050      41803c0100     cmp byte [r9 + rax], 0
0x00005055      740e           je 0x5065
0x00005057      4883c001       add rax, 1
0x0000505b      488d540500     lea rdx, [rbp + rax]
0x00005060      4939d3         cmp r11, rdx
0x00005063      77eb           ja 0x5050
0x00005065      4889c7         mov rdi, rax
0x00005068      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000506d      4531e4         xor r12d, r12d
0x00005070      e961faffff     jmp 0x4ad6
0x00005075      4889df         mov rdi, rbx
0x00005078      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000507e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005083      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005089      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005091      4531e4         xor r12d, r12d
0x00005094      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005099      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000509e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000050a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000050a8      e929faffff     jmp 0x4ad6
0x000050ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000050b2      0fb602         movzx eax, byte [rdx]
0x000050b5      84c0           test al, al
0x000050b7      0f842ffeffff   je 0x4eec
0x000050bd      0f1f00         nop dword [rax]
0x000050c0      4d39fd         cmp r13, r15
0x000050c3      7604           jbe 0x50c9
0x000050c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000050c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000050cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000050d2      84c0           test al, al
0x000050d4      75ea           jne 0x50c0
0x000050d6      e911feffff     jmp 0x4eec
0x000050db      89d0           mov eax, edx
0x000050dd      e955f5ffff     jmp 0x4637
0x000050e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000050e6      80fb3e         cmp bl, 0x3e
0x000050e9      0f8771f8ffff   ja 0x4960
0x000050ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000050f9      480fa3d8       bt rax, rbx
0x000050fd      0f835df8ffff   jae 0x4960
0x00005103      807c240f00     cmp byte [rsp + 0xf], 0
0x00005108      0f85e4010000   jne 0x52f2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000510e      4d39fd         cmp r13, r15
0x00005111      7605           jbe 0x5118
0x00005113      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00005118      498d4701       lea rax, [r15 + 1]
0x0000511c      4939c5         cmp r13, rax
0x0000511f      7606           jbe 0x5127
0x00005121      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005127      498d4702       lea rax, [r15 + 2]
0x0000512b      4939c5         cmp r13, rax
0x0000512e      7606           jbe 0x5136
0x00005130      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005136      498d4703       lea rax, [r15 + 3]
0x0000513a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000513d      7606           jbe 0x5145
0x0000513f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005145      4983c704       add r15, 4
0x00005149      31d2           xor edx, edx
0x0000514b      4531e4         xor r12d, r12d
0x0000514e      31c0           xor eax, eax
0x00005150      4889cd         mov rbp, rcx
0x00005153      e9c0f1ffff     jmp 0x4318
0x00005158      85db           test ebx, ebx
0x0000515a      0f8488010000   je 0x52e8
0x00005160      488d05be2700.  lea rax, [0x00007925]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005167      c644240e01     mov byte [rsp + 0xe], 1
0x0000516c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005171      4531e4         xor r12d, r12d
0x00005174      48c744245000.  mov qword [rsp + 0x50], 0
0x0000517d      c644240f01     mov byte [rsp + 0xf], 1
0x00005182      c644240d00     mov byte [rsp + 0xd], 0
0x00005187      48c744241801.  mov qword [rsp + 0x18], 1
0x00005190      4531ff         xor r15d, r15d
0x00005193      4889442448     mov qword [rsp + 0x48], rax
0x00005198      e926f0ffff     jmp 0x41c3
0x0000519d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000051a0      4c89dd         mov rbp, r11
0x000051a3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000051a8      e9ccfaffff     jmp 0x4c79
0x000051ad      488d056f2700.  lea rax, str.l______l                   ; 0x7923 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000051b4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000051b9      c644247c00     mov byte [rsp + 0x7c], 0
0x000051be      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000051c1      48c744245000.  mov qword [rsp + 0x50], 0
0x000051ca      c644240f01     mov byte [rsp + 0xf], 1
0x000051cf      c644240d01     mov byte [rsp + 0xd], 1
0x000051d4      48c744241801.  mov qword [rsp + 0x18], 1
0x000051dd      4531ff         xor r15d, r15d
0x000051e0      4889442448     mov qword [rsp + 0x48], rax
0x000051e5      e9d9efffff     jmp 0x41c3
0x000051ea      89d0           mov eax, edx
0x000051ec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000051f1      4885db         test rbx, rbx
0x000051f4      742c           je 0x5222
0x000051f6      84c0           test al, al
0x000051f8      7428           je 0x5222
0x000051fa      0fb60b         movzx ecx, byte [rbx]
0x000051fd      4889d8         mov rax, rbx
0x00005200      84c9           test cl, cl
0x00005202      741e           je 0x5222
0x00005204      4c89fa         mov rdx, r15
0x00005207      4c29f8         sub rax, r15
0x0000520a      4939d5         cmp r13, rdx
0x0000520d      7604           jbe 0x5213
0x0000520f      41880c16       mov byte [r14 + rdx], cl
0x00005213      4883c201       add rdx, 1
0x00005217      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000521b      84c9           test cl, cl
0x0000521d      75eb           jne 0x520a
0x0000521f      4989d7         mov r15, rdx
0x00005222      4d39fd         cmp r13, r15
0x00005225      0f869efaffff   jbe 0x4cc9
0x0000522b      43c6043e00     mov byte [r14 + r15], 0
0x00005230      e994faffff     jmp 0x4cc9
0x00005235      837c240802     cmp dword [rsp + 8], 2
0x0000523a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000523f      4c89dd         mov rbp, r11
0x00005242      0f94c0         sete al
0x00005245      885c240d       mov byte [rsp + 0xd], bl
0x00005249      e92bfaffff     jmp 0x4c79
0x0000524e      8b742408       mov esi, dword [rsp + 8]
0x00005252      4889cf         mov rdi, rcx
0x00005255      e8a6edffff     call sym.gettext_quote.part.1
0x0000525a      4889442468     mov qword [rsp + 0x68], rax
0x0000525f      e952fcffff     jmp 0x4eb6
0x00005264      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005268      4889cf         mov rdi, rcx
0x0000526b      e890edffff     call sym.gettext_quote.part.1
0x00005270      4889442460     mov qword [rsp + 0x60], rax
0x00005275      e967fcffff     jmp 0x4ee1
0x0000527a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000527f      4c89dd         mov rbp, r11
0x00005282      89d0           mov eax, edx
0x00005284      885c240d       mov byte [rsp + 0xd], bl
0x00005288      e9ecf9ffff     jmp 0x4c79
0x0000528d      4883ec08       sub rsp, 8
0x00005291      41b805000000   mov r8d, 5
0x00005297      4c89d9         mov rcx, r11
0x0000529a      ff742468       push qword [rsp + 0x68]
0x0000529e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000052a2      4c89f7         mov rdi, r14
0x000052a5      ff742438       push qword [rsp + 0x38]
0x000052a9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000052b1      488b542430     mov rdx, qword [rsp + 0x30]
0x000052b6      488b742470     mov rsi, qword [rsp + 0x70]
0x000052bb      e830eeffff     call sym.quotearg_buffer_restyled
0x000052c0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000052c4      4989c7         mov r15, rax
0x000052c7      e9fdf9ffff     jmp 0x4cc9
0x000052cc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000052d1      e916ffffff     jmp 0x51ec
0x000052d6      c74424080200.  mov dword [rsp + 8], 2
0x000052de      e996f9ffff     jmp 0x4c79
0x000052e3      e8c8c7ffff     call sym.imp.__stack_chk_fail
0x000052e8      c644240d00     mov byte [rsp + 0xd], 0
0x000052ed      e96ffaffff     jmp 0x4d61
0x000052f2      4c89dd         mov rbp, r11
0x000052f5      e996f9ffff     jmp 0x4c90
0x000052fa      c644240e01     mov byte [rsp + 0xe], 1
0x000052ff      31c0           xor eax, eax
0x00005301      4531e4         xor r12d, r12d
0x00005304      48c744245000.  mov qword [rsp + 0x50], 0
0x0000530d      e9a2f5ffff     jmp 0x48b4
0x00005312      4c89ea         mov rdx, r13
0x00005315      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000531a      e9f3f5ffff     jmp 0x4912
0x0000531f      e8bcc6ffff     call sym.imp.abort
0x00005324      6690           nop
0x00005326      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005330      4157           push r15
0x00005332      4156           push r14
0x00005334      4c63ff         movsxd r15, edi
0x00005337      4155           push r13
0x00005339      4154           push r12
0x0000533b      4989d6         mov r14, rdx
0x0000533e      55             push rbp
0x0000533f      53             push rbx
0x00005340      4889cd         mov rbp, rcx
0x00005343      4883ec28       sub rsp, 0x28
0x00005347      4889742408     mov qword [rsp + 8], rsi
0x0000534c      e89fc6ffff     call sym.imp.__errno_location
0x00005351      4989c5         mov r13, rax
0x00005354      8b00           mov eax, dword [rax]
0x00005356      4585ff         test r15d, r15d
0x00005359      488b1d004d20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x00005360      89442418       mov dword [rsp + 0x18], eax
0x00005364      0f8867010000   js 0x54d1
0x0000536a      44393de74c20.  cmp dword [obj.nslots], r15d            ; [0x20a058:4]=1
0x00005371      7f62           jg 0x53d5
0x00005373      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000537a      0f8456010000   je 0x54d6
0x00005380      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005384      488d05e54c20.  lea rax, obj.slotvec0                   ; 0x20a070
0x0000538b      4963f4         movsxd rsi, r12d
0x0000538e      48c1e604       shl rsi, 4
0x00005392      4839c3         cmp rbx, rax
0x00005395      0f8415010000   je 0x54b0
0x0000539b      4889df         mov rdi, rbx
0x0000539e      e86d130000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000053a3      4889c3         mov rbx, rax
0x000053a6      488905b34c20.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000053ad      48633da44c20.  movsxd rdi, dword [obj.nslots]          ; [0x20a058:4]=1
0x000053b4      4489e2         mov edx, r12d
0x000053b7      31f6           xor esi, esi
0x000053b9      29fa           sub edx, edi
0x000053bb      48c1e704       shl rdi, 4
0x000053bf      4863d2         movsxd rdx, edx
0x000053c2      4801df         add rdi, rbx
0x000053c5      48c1e204       shl rdx, 4
0x000053c9      e862c7ffff     call sym.imp.memset
0x000053ce      448925834c20.  mov dword [obj.nslots], r12d            ; [0x20a058:4]=1
0x000053d5      8b4504         mov eax, dword [rbp + 4]
0x000053d8      49c1e704       shl r15, 4
0x000053dc      4883ec08       sub rsp, 8
0x000053e0      4c01fb         add rbx, r15
0x000053e3      4c8d7d08       lea r15, [rbp + 8]
0x000053e7      448b4500       mov r8d, dword [rbp]
0x000053eb      4c8b1b         mov r11, qword [rbx]
0x000053ee      4c8b6308       mov r12, qword [rbx + 8]
0x000053f2      4c89f1         mov rcx, r14
0x000053f5      83c801         or eax, 1
0x000053f8      89442424       mov dword [rsp + 0x24], eax
0x000053fc      ff7530         push qword [rbp + 0x30]
0x000053ff      4189c1         mov r9d, eax
0x00005402      ff7528         push qword [rbp + 0x28]
0x00005405      4157           push r15
0x00005407      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000540a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000540f      4c89e7         mov rdi, r12
0x00005412      4c895c2430     mov qword [rsp + 0x30], r11
0x00005417      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000541c      4883c420       add rsp, 0x20
0x00005420      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005425      4939c3         cmp r11, rax
0x00005428      7767           ja 0x5491
0x0000542a      488d7001       lea rsi, [rax + 1]
0x0000542e      488d052b4d20.  lea rax, obj.slot0                      ; 0x20a160
0x00005435      4939c4         cmp r12, rax
0x00005438      488933         mov qword [rbx], rsi
0x0000543b      7412           je 0x544f
0x0000543d      4c89e7         mov rdi, r12
0x00005440      4889742410     mov qword [rsp + 0x10], rsi
0x00005445      e876c9ffff     call sym..plt.got
0x0000544a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000544f      4889f7         mov rdi, rsi
0x00005452      4889742410     mov qword [rsp + 0x10], rsi
0x00005457      e854120000     call sym.xmalloc
0x0000545c      4883ec08       sub rsp, 8
0x00005460      48894308       mov qword [rbx + 8], rax
0x00005464      448b4500       mov r8d, dword [rbp]
0x00005468      ff7530         push qword [rbp + 0x30]
0x0000546b      ff7528         push qword [rbp + 0x28]
0x0000546e      4c89f1         mov rcx, r14
0x00005471      4157           push r15
0x00005473      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005478      4889c7         mov rdi, rax
0x0000547b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005480      488b742430     mov rsi, qword [rsp + 0x30]
0x00005485      4989c4         mov r12, rax
0x00005488      e863ecffff     call sym.quotearg_buffer_restyled
0x0000548d      4883c420       add rsp, 0x20
0x00005491      8b442418       mov eax, dword [rsp + 0x18]
0x00005495      41894500       mov dword [r13], eax
0x00005499      4883c428       add rsp, 0x28
0x0000549d      4c89e0         mov rax, r12
0x000054a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000054a1      5d             pop rbp
0x000054a2      415c           pop r12
0x000054a4      415d           pop r13
0x000054a6      415e           pop r14
0x000054a8      415f           pop r15
0x000054aa      c3             ret
0x000054ab      0f1f440000     nop dword [rax + rax]
0x000054b0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000054b2      e859120000     call sym.xrealloc
0x000054b7      660f6f05b14b.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000054bf      4889c3         mov rbx, rax
0x000054c2      488905974b20.  mov qword [obj.slotvec], rax            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000054c9      0f1100         movups xmmword [rax], xmm0
0x000054cc      e9dcfeffff     jmp 0x53ad
0x000054d1      e80ac5ffff     call sym.imp.abort
0x000054d6      e825140000     call sym.xalloc_die
0x000054db      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000054e0      4154           push r12
0x000054e2      55             push rbp
0x000054e3      53             push rbx
0x000054e4      4889fb         mov rbx, rdi
0x000054e7      e804c5ffff     call sym.imp.__errno_location
0x000054ec      448b20         mov r12d, dword [rax]
0x000054ef      4889c5         mov rbp, rax
0x000054f2      488d05674d20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x000054f9      4885db         test rbx, rbx
0x000054fc      be38000000     mov esi, 0x38                           ; '8'
0x00005501      480f44d8       cmove rbx, rax
0x00005505      4889df         mov rdi, rbx
0x00005508      e8a3130000     call sym.xmemdup
0x0000550d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005511      5b             pop rbx
0x00005512      5d             pop rbp
0x00005513      415c           pop r12
0x00005515      c3             ret
0x00005516      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005520      488d05394d20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x00005527      4885ff         test rdi, rdi
0x0000552a      480f44f8       cmove rdi, rax
0x0000552e      8b07           mov eax, dword [rdi]
0x00005530      c3             ret
0x00005531      0f1f440000     nop dword [rax + rax]
0x00005536      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005540      488d05194d20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x00005547      4885ff         test rdi, rdi
0x0000554a      480f44f8       cmove rdi, rax
0x0000554e      8937           mov dword [rdi], esi
0x00005550      c3             ret
0x00005551      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005560      488d05f94c20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x00005567      4885ff         test rdi, rdi
0x0000556a      89f1           mov ecx, esi
0x0000556c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005570      89f0           mov eax, esi
0x00005572      83e11f         and ecx, 0x1f
0x00005575      c0e805         shr al, 5
0x00005578      0fb6c0         movzx eax, al
0x0000557b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005580      8b37           mov esi, dword [rdi]
0x00005582      89f0           mov eax, esi
0x00005584      d3e8           shr eax, cl
0x00005586      31c2           xor edx, eax
0x00005588      83e001         and eax, 1
0x0000558b      83e201         and edx, 1
0x0000558e      d3e2           shl edx, cl
0x00005590      31f2           xor edx, esi
0x00005592      8917           mov dword [rdi], edx
0x00005594      c3             ret
0x00005595      90             nop
0x00005596      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000055a0      488d05b94c20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x000055a7      4885ff         test rdi, rdi
0x000055aa      480f44f8       cmove rdi, rax
0x000055ae      8b4704         mov eax, dword [rdi + 4]
0x000055b1      897704         mov dword [rdi + 4], esi
0x000055b4      c3             ret
0x000055b5      90             nop
0x000055b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000055c0      488d05994c20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x000055c7      4885ff         test rdi, rdi
0x000055ca      480f44f8       cmove rdi, rax
0x000055ce      4885f6         test rsi, rsi
0x000055d1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000055d7      740e           je 0x55e7
0x000055d9      4885d2         test rdx, rdx
0x000055dc      7409           je 0x55e7
0x000055de      48897728       mov qword [rdi + 0x28], rsi
0x000055e2      48895730       mov qword [rdi + 0x30], rdx
0x000055e6      c3             ret
0x000055e7      4883ec08       sub rsp, 8
0x000055eb      e8f0c3ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000055f0      4157           push r15
0x000055f2      4156           push r14
0x000055f4      488d05654c20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x000055fb      4155           push r13
0x000055fd      4154           push r12
0x000055ff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00005602      55             push rbp
0x00005603      53             push rbx
0x00005604      4c89c3         mov rbx, r8
0x00005607      4989f6         mov r14, rsi
0x0000560a      4989d7         mov r15, rdx
0x0000560d      4883ec18       sub rsp, 0x18
0x00005611      4d85c0         test r8, r8
0x00005614      480f44d8       cmove rbx, rax
0x00005618      48894c2408     mov qword [rsp + 8], rcx
0x0000561d      e8cec3ffff     call sym.imp.__errno_location
0x00005622      448b20         mov r12d, dword [rax]
0x00005625      4889c5         mov rbp, rax
0x00005628      488d4308       lea rax, [rbx + 8]
0x0000562c      4883ec08       sub rsp, 8
0x00005630      448b4b04       mov r9d, dword [rbx + 4]
0x00005634      ff7330         push qword [rbx + 0x30]
0x00005637      448b03         mov r8d, dword [rbx]
0x0000563a      ff7328         push qword [rbx + 0x28]
0x0000563d      4c89fa         mov rdx, r15
0x00005640      50             push rax
0x00005641      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005646      4c89f6         mov rsi, r14
0x00005649      4c89ef         mov rdi, r13
0x0000564c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005651      44896500       mov dword [rbp], r12d
0x00005655      4883c438       add rsp, 0x38
0x00005659      5b             pop rbx
0x0000565a      5d             pop rbp
0x0000565b      415c           pop r12
0x0000565d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000565f      415e           pop r14
0x00005661      415f           pop r15
0x00005663      c3             ret
0x00005664      6690           nop
0x00005666      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005670      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005672      4156           push r14
0x00005674      488d05e54b20.  lea rax, obj.default_quoting_options    ; 0x20a260
0x0000567b      4155           push r13
0x0000567d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000567f      4989d4         mov r12, rdx
0x00005682      55             push rbp
0x00005683      53             push rbx
0x00005684      4889cb         mov rbx, rcx
0x00005687      4989fe         mov r14, rdi
0x0000568a      4989f7         mov r15, rsi
0x0000568d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005691      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005694      480f44d8       cmove rbx, rax
0x00005698      31ed           xor ebp, ebp
0x0000569a      e851c3ffff     call sym.imp.__errno_location
0x0000569f      4d85e4         test r12, r12
0x000056a2      4989c5         mov r13, rax
0x000056a5      8b00           mov eax, dword [rax]
0x000056a7      400f94c5       sete bpl
0x000056ab      0b6b04         or ebp, dword [rbx + 4]
0x000056ae      4c8d5308       lea r10, [rbx + 8]
0x000056b2      4883ec08       sub rsp, 8
0x000056b6      448b03         mov r8d, dword [rbx]
0x000056b9      4c89f9         mov rcx, r15
0x000056bc      89442414       mov dword [rsp + 0x14], eax
0x000056c0      ff7330         push qword [rbx + 0x30]
0x000056c3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000056c6      ff7328         push qword [rbx + 0x28]
0x000056c9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000056cb      31f6           xor esi, esi
0x000056cd      4189e9         mov r9d, ebp
0x000056d0      31ff           xor edi, edi
0x000056d2      4c89542440     mov qword [rsp + 0x40], r10
0x000056d7      e814eaffff     call sym.quotearg_buffer_restyled
0x000056dc      488d7001       lea rsi, [rax + 1]
0x000056e0      4889442448     mov qword [rsp + 0x48], rax
0x000056e5      4883c420       add rsp, 0x20
0x000056e9      4889f7         mov rdi, rsi
0x000056ec      4889742418     mov qword [rsp + 0x18], rsi
0x000056f1      e8ba0f0000     call sym.xmalloc
0x000056f6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000056fb      4883ec08       sub rsp, 8
0x000056ff      ff7330         push qword [rbx + 0x30]
0x00005702      ff7328         push qword [rbx + 0x28]
0x00005705      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000570a      4189e9         mov r9d, ebp
0x0000570d      448b03         mov r8d, dword [rbx]
0x00005710      4c89f9         mov rcx, r15
0x00005713      4c89f2         mov rdx, r14
0x00005716      4889c7         mov rdi, rax
0x00005719      4152           push r10
0x0000571b      488b742438     mov rsi, qword [rsp + 0x38]
0x00005720      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005725      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005729      4883c420       add rsp, 0x20
0x0000572d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005730      41894500       mov dword [r13], eax
0x00005734      7409           je 0x573f
0x00005736      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000573b      4d891c24       mov qword [r12], r11
0x0000573f      488b442410     mov rax, qword [rsp + 0x10]
0x00005744      4883c438       add rsp, 0x38
0x00005748      5b             pop rbx
0x00005749      5d             pop rbp
0x0000574a      415c           pop r12
0x0000574c      415d           pop r13
0x0000574e      415e           pop r14
0x00005750      415f           pop r15
0x00005752      c3             ret
0x00005753      0f1f00         nop dword [rax]
0x00005756      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005760      4889d1         mov rcx, rdx
0x00005763      31d2           xor edx, edx
0x00005765      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000576a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005770      8b05e2482000   mov eax, dword [obj.nslots]             ; [0x20a058:4]=1
0x00005776      4154           push r12
0x00005778      4c8b25e14820.  mov r12, qword [obj.slotvec]            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x0000577f      55             push rbp
0x00005780      53             push rbx
0x00005781      83f801         cmp eax, 1
0x00005784      7e2b           jle 0x57b1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005786      83e802         sub eax, 2
0x00005789      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000578e      48c1e004       shl rax, 4
0x00005792      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005797      660f1f840000.  nop word [rax + rax]
0x000057a0      488b3b         mov rdi, qword [rbx]
0x000057a3      4883c310       add rbx, 0x10
0x000057a7      e814c6ffff     call sym..plt.got
0x000057ac      4839eb         cmp rbx, rbp
0x000057af      75ef           jne 0x57a0
0x000057b1      498b7c2408     mov rdi, qword [r12 + 8]
0x000057b6      488d1da34920.  lea rbx, obj.slot0                      ; 0x20a160
0x000057bd      4839df         cmp rdi, rbx
0x000057c0      7417           je 0x57d9
0x000057c2      e8f9c5ffff     call sym..plt.got
0x000057c7      48c7059e4820.  mov qword [obj.slotvec0], 0x100         ; [0x20a070:8]=256
0x000057d2      48891d9f4820.  mov qword [0x0020a078], rbx             ; [0x20a078:8]=0x20a160 obj.slot0
0x000057d9      488d1d904820.  lea rbx, obj.slotvec0                   ; 0x20a070
0x000057e0      4939dc         cmp r12, rbx
0x000057e3      740f           je 0x57f4
0x000057e5      4c89e7         mov rdi, r12
0x000057e8      e8d3c5ffff     call sym..plt.got
0x000057ed      48891d6c4820.  mov qword [obj.slotvec], rbx            ; [0x20a060:8]=0x20a070 obj.slotvec0 ; "p\xa0 "
0x000057f4      5b             pop rbx
0x000057f5      c70559482000.  mov dword [obj.nslots], 1               ; [0x20a058:4]=1
0x000057ff      5d             pop rbp
0x00005800      415c           pop r12
0x00005802      c3             ret
0x00005803      0f1f00         nop dword [rax]
0x00005806      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005810      488d0d494a20.  lea rcx, obj.default_quoting_options    ; 0x20a260
0x00005817      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000581e      e90dfbffff     jmp sym.quotearg_n_options
0x00005823      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005826      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005830      488d0d294a20.  lea rcx, obj.default_quoting_options    ; 0x20a260
0x00005837      e9f4faffff     jmp sym.quotearg_n_options
0x0000583c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005840      488d0d194a20.  lea rcx, obj.default_quoting_options    ; 0x20a260
0x00005847      4889fe         mov rsi, rdi
0x0000584a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005851      31ff           xor edi, edi
0x00005853      e9d8faffff     jmp sym.quotearg_n_options
0x00005858      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005860      488d0df94920.  lea rcx, obj.default_quoting_options    ; 0x20a260
0x00005867      4889f2         mov rdx, rsi
0x0000586a      4889fe         mov rsi, rdi
0x0000586d      31ff           xor edi, edi
0x0000586f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005874      6690           nop
0x00005876      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005880      4883ec48       sub rsp, 0x48
0x00005884      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005887      64488b142528.  mov rdx, qword fs:[0x28]
0x00005890      4889542438     mov qword [rsp + 0x38], rdx
0x00005895      31d2           xor edx, edx
0x00005897      83fe0a         cmp esi, 0xa
0x0000589a      7468           je 0x5904
0x0000589c      893424         mov dword [rsp], esi
0x0000589f      4889e1         mov rcx, rsp
0x000058a2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000058a9      4889c6         mov rsi, rax
0x000058ac      48c744240400.  mov qword [rsp + 4], 0
0x000058b5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000058be      48c744241400.  mov qword [rsp + 0x14], 0
0x000058c7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000058d0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000058d9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000058e2      c74424340000.  mov dword [rsp + 0x34], 0
0x000058ea      e841faffff     call sym.quotearg_n_options
0x000058ef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000058f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000058fd      750a           jne 0x5909                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000058ff      4883c448       add rsp, 0x48
0x00005903      c3             ret
0x00005904      e8d7c0ffff     call sym.imp.abort
0x00005909      e8a2c1ffff     call sym.imp.__stack_chk_fail
0x0000590e      6690           nop
;-- quotearg_n_style_mem:
0x00005910      4883ec48       sub rsp, 0x48
0x00005914      4889d0         mov rax, rdx
0x00005917      4889ca         mov rdx, rcx
0x0000591a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005923      48894c2438     mov qword [rsp + 0x38], rcx
0x00005928      31c9           xor ecx, ecx
0x0000592a      83fe0a         cmp esi, 0xa
0x0000592d      7461           je 0x5990
0x0000592f      893424         mov dword [rsp], esi
0x00005932      4889e1         mov rcx, rsp
0x00005935      4889c6         mov rsi, rax
0x00005938      48c744240400.  mov qword [rsp + 4], 0
0x00005941      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000594a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005953      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000595c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005965      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000596e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005976      e8b5f9ffff     call sym.quotearg_n_options
0x0000597b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005980      644833142528.  xor rdx, qword fs:[0x28]
0x00005989      750a           jne 0x5995
0x0000598b      4883c448       add rsp, 0x48
0x0000598f      c3             ret
0x00005990      e84bc0ffff     call sym.imp.abort
0x00005995      e816c1ffff     call sym.imp.__stack_chk_fail
0x0000599a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000059a0      4889f2         mov rdx, rsi
0x000059a3      89fe           mov esi, edi
0x000059a5      31ff           xor edi, edi
0x000059a7      e9d4feffff     jmp sym.quotearg_n_style
0x000059ac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000059b0      4889d1         mov rcx, rdx
0x000059b3      4889f2         mov rdx, rsi
0x000059b6      89fe           mov esi, edi
0x000059b8      31ff           xor edi, edi
0x000059ba      e951ffffff     jmp sym.quotearg_n_style_mem
0x000059bf      90             nop
;-- quotearg_char_mem:
0x000059c0      4883ec48       sub rsp, 0x48
0x000059c4      89d1           mov ecx, edx
0x000059c6      64488b042528.  mov rax, qword fs:[0x28]
0x000059cf      4889442438     mov qword [rsp + 0x38], rax
0x000059d4      31c0           xor eax, eax
0x000059d6      488b05b34820.  mov rax, qword [0x0020a290]             ; [0x20a290:8]=0
0x000059dd      4989e0         mov r8, rsp
0x000059e0      83e11f         and ecx, 0x1f
0x000059e3      660f6f057548.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000059eb      4889442430     mov qword [rsp + 0x30], rax
0x000059f0      89d0           mov eax, edx
0x000059f2      0f290424       movaps xmmword [rsp], xmm0
0x000059f6      c0e805         shr al, 5
0x000059f9      0fb6c0         movzx eax, al
0x000059fc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005a01      660f6f056748.  movdqa xmm0, xmmword [0x0020a270]
0x00005a09      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005a0e      660f6f056a48.  movdqa xmm0, xmmword [0x0020a280]
0x00005a16      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005a1b      418b11         mov edx, dword [r9]
0x00005a1e      89d0           mov eax, edx
0x00005a20      d3e8           shr eax, cl
0x00005a22      f7d0           not eax
0x00005a24      83e001         and eax, 1
0x00005a27      d3e0           shl eax, cl
0x00005a29      4c89c1         mov rcx, r8
0x00005a2c      31d0           xor eax, edx
0x00005a2e      4889f2         mov rdx, rsi
0x00005a31      4889fe         mov rsi, rdi
0x00005a34      418901         mov dword [r9], eax
0x00005a37      31ff           xor edi, edi
0x00005a39      e8f2f8ffff     call sym.quotearg_n_options
0x00005a3e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005a43      644833342528.  xor rsi, qword fs:[0x28]
0x00005a4c      7505           jne 0x5a53
0x00005a4e      4883c448       add rsp, 0x48
0x00005a52      c3             ret
0x00005a53      e858c0ffff     call sym.imp.__stack_chk_fail
0x00005a58      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005a60      400fbed6       movsx edx, sil
0x00005a64      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005a6b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005a70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005a75      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005a7c      e93fffffff     jmp sym.quotearg_char_mem
0x00005a81      0f1f440000     nop dword [rax + rax]
0x00005a86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005a90      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005a95      e926ffffff     jmp sym.quotearg_char_mem
0x00005a9a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005aa0      4883ec48       sub rsp, 0x48
0x00005aa4      4889d0         mov rax, rdx
0x00005aa7      64488b142528.  mov rdx, qword fs:[0x28]
0x00005ab0      4889542438     mov qword [rsp + 0x38], rdx
0x00005ab5      31d2           xor edx, edx
0x00005ab7      83fe0a         cmp esi, 0xa
0x00005aba      7468           je 0x5b24
0x00005abc      893424         mov dword [rsp], esi
0x00005abf      4889e1         mov rcx, rsp
0x00005ac2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005ac9      4889c6         mov rsi, rax
0x00005acc      48c744240400.  mov qword [rsp + 4], 0
0x00005ad5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005ade      48c744241400.  mov qword [rsp + 0x14], 0
0x00005ae7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005af0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005af9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005b02      c74424340000.  mov dword [rsp + 0x34], 0
0x00005b0a      e821f8ffff     call sym.quotearg_n_options
0x00005b0f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005b14      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005b1d      750a           jne 0x5b29
0x00005b1f      4883c448       add rsp, 0x48
0x00005b23      c3             ret
0x00005b24      e8b7beffff     call sym.imp.abort
0x00005b29      e882bfffff     call sym.imp.__stack_chk_fail
0x00005b2e      6690           nop
;-- quotearg_n_custom_mem:
0x00005b30      4883ec48       sub rsp, 0x48
0x00005b34      4989c9         mov r9, rcx
0x00005b37      488b0d524720.  mov rcx, qword [0x0020a290]             ; [0x20a290:8]=0
0x00005b3e      660f6f051a47.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005b46      64488b042528.  mov rax, qword fs:[0x28]
0x00005b4f      4889442438     mov qword [rsp + 0x38], rax
0x00005b54      31c0           xor eax, eax
0x00005b56      0f290424       movaps xmmword [rsp], xmm0
0x00005b5a      4885f6         test rsi, rsi
0x00005b5d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005b62      c704240a0000.  mov dword [rsp], 0xa
0x00005b69      660f6f05ff46.  movdqa xmm0, xmmword [0x0020a270]
0x00005b71      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005b76      660f6f050247.  movdqa xmm0, xmmword [0x0020a280]
0x00005b7e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005b83      7432           je 0x5bb7
0x00005b85      4885d2         test rdx, rdx
0x00005b88      742d           je 0x5bb7
0x00005b8a      4889742428     mov qword [rsp + 0x28], rsi
0x00005b8f      4889542430     mov qword [rsp + 0x30], rdx
0x00005b94      4889e1         mov rcx, rsp
0x00005b97      4c89c2         mov rdx, r8
0x00005b9a      4c89ce         mov rsi, r9
0x00005b9d      e88ef7ffff     call sym.quotearg_n_options
0x00005ba2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005ba7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005bb0      750a           jne 0x5bbc
0x00005bb2      4883c448       add rsp, 0x48
0x00005bb6      c3             ret
0x00005bb7      e824beffff     call sym.imp.abort
0x00005bbc      e8efbeffff     call sym.imp.__stack_chk_fail
0x00005bc1      0f1f440000     nop dword [rax + rax]
0x00005bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005bd0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005bd7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005bdc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005be0      4889d1         mov rcx, rdx
0x00005be3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005bea      4889f2         mov rdx, rsi
0x00005bed      4889fe         mov rsi, rdi
0x00005bf0      31ff           xor edi, edi
0x00005bf2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005bf7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005c00      4989c8         mov r8, rcx
0x00005c03      4889d1         mov rcx, rdx
0x00005c06      4889f2         mov rdx, rsi
0x00005c09      4889fe         mov rsi, rdi
0x00005c0c      31ff           xor edi, edi
0x00005c0e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005c13      0f1f00         nop dword [rax]
0x00005c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005c20      488d0df94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c27      e904f7ffff     jmp sym.quotearg_n_options
0x00005c2c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005c30      488d0de94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c37      4889f2         mov rdx, rsi
0x00005c3a      4889fe         mov rsi, rdi
0x00005c3d      31ff           xor edi, edi
0x00005c3f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005c44      6690           nop
0x00005c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005c50      488d0dc94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c57      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c5e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005c63      0f1f00         nop dword [rax]
0x00005c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005c70      488d0da94320.  lea rcx, obj.quote_quoting_options      ; 0x20a020
0x00005c77      4889fe         mov rsi, rdi
0x00005c7a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c81      31ff           xor edi, edi
0x00005c83      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005c88      0f1f84000000.  nop dword [rax + rax]
;-- save_token:
0x00005c90      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:52
0x00005c92      55             push rbp
0x00005c93      53             push rbx
0x00005c94      488b5730       mov rdx, qword [rdi + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:54
0x00005c98      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/readtokens0.c:52
0x00005c9b      4c8b6728       mov r12, qword [rdi + 0x28]             ; ../coreutils-8.31/lib/readtokens0.c:54
0x00005c9f      4889d5         mov rbp, rdx
0x00005ca2      4c29e5         sub rbp, r12
0x00005ca5      4883ed01       sub rbp, 1
0x00005ca9      4c39e2         cmp rdx, r12                            ; ../coreutils-8.31/lib/readtokens0.c:55
0x00005cac      0f84be000000   je 0x5d70
0x00005cb2      488b4b48       mov rcx, qword [rbx + 0x48]
0x00005cb6      488d040a       lea rax, [rdx + rcx]
0x00005cba      48f7d1         not rcx
0x00005cbd      488b5338       mov rdx, qword [rbx + 0x38]
0x00005cc1      4821c8         and rax, rcx
0x00005cc4      488b4b20       mov rcx, qword [rbx + 0x20]
0x00005cc8      4889c6         mov rsi, rax
0x00005ccb      4889d7         mov rdi, rdx
0x00005cce      48894330       mov qword [rbx + 0x30], rax
0x00005cd2      4829ce         sub rsi, rcx
0x00005cd5      4829cf         sub rdi, rcx
0x00005cd8      4839fe         cmp rsi, rdi
0x00005cdb      7607           jbe 0x5ce4
0x00005cdd      48895330       mov qword [rbx + 0x30], rdx
0x00005ce1      4889d0         mov rax, rdx
0x00005ce4      48894328       mov qword [rbx + 0x28], rax
0x00005ce8      488b93880000.  mov rdx, qword [rbx + 0x88]             ; ../coreutils-8.31/lib/readtokens0.c:56
0x00005cef      488b83900000.  mov rax, qword [rbx + 0x90]
0x00005cf6      4829d0         sub rax, rdx
0x00005cf9      4883f807       cmp rax, 7
0x00005cfd      7651           jbe 0x5d50
0x00005cff      4c8922         mov qword [rdx], r12
0x00005d02      488b93e00000.  mov rdx, qword [rbx + 0xe0]             ; ../coreutils-8.31/lib/readtokens0.c:57
0x00005d09      488b83e80000.  mov rax, qword [rbx + 0xe8]
0x00005d10      488383880000.  add qword [rbx + 0x88], 8               ; ../coreutils-8.31/lib/readtokens0.c:56
0x00005d18      4829d0         sub rax, rdx                            ; ../coreutils-8.31/lib/readtokens0.c:57
0x00005d1b      4883f807       cmp rax, 7
0x00005d1f      7718           ja 0x5d39
0x00005d21      488dbbc80000.  lea rdi, [rbx + 0xc8]
0x00005d28      be08000000     mov esi, 8
0x00005d2d      e80e0f0000     call sym._obstack_newchunk
0x00005d32      488b93e00000.  mov rdx, qword [rbx + 0xe0]
0x00005d39      48892a         mov qword [rdx], rbp                    ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005d3c      488383e00000.  add qword [rbx + 0xe0], 8               ; ../coreutils-8.31/lib/readtokens0.c:57
0x00005d44      48830301       add qword [rbx], 1                      ; ../coreutils-8.31/lib/readtokens0.c:58
0x00005d48      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:59
0x00005d49      5d             pop rbp
0x00005d4a      415c           pop r12
0x00005d4c      c3             ret
0x00005d4d      0f1f00         nop dword [rax]
0x00005d50      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:56
0x00005d54      be08000000     mov esi, 8
0x00005d59      e8e20e0000     call sym._obstack_newchunk
0x00005d5e      488b93880000.  mov rdx, qword [rbx + 0x88]
0x00005d65      eb98           jmp 0x5cff
0x00005d67      660f1f840000.  nop word [rax + rax]
0x00005d70      804f6802       or byte [rdi + 0x68], 2                 ; ../coreutils-8.31/lib/readtokens0.c:55
0x00005d74      e939ffffff     jmp 0x5cb2
0x00005d79      0f1f80000000.  nop dword [rax]
;-- readtokens0_init:
0x00005d80      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00005d82      4c8b252f4220.  mov r12, qword [reloc.free]             ; ../coreutils-8.31/lib/readtokens0.c:35 ; [0x209fb8:8]=0
0x00005d89      31d2           xor edx, edx
0x00005d8b      55             push rbp                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00005d8c      488b2d454220.  mov rbp, qword [reloc.malloc]           ; ../coreutils-8.31/lib/readtokens0.c:35 ; [0x209fd8:8]=0
0x00005d93      31f6           xor esi, esi
0x00005d95      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:31
0x00005d96      4889fb         mov rbx, rdi
0x00005d99      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/readtokens0.c:32
0x00005da0      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/readtokens0.c:33
0x00005da8      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/readtokens0.c:34
0x00005db0      488d7f18       lea rdi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:35
0x00005db4      4d89e0         mov r8, r12
0x00005db7      4889e9         mov rcx, rbp
0x00005dba      e8410e0000     call sym._obstack_begin
0x00005dbf      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:36
0x00005dc3      4d89e0         mov r8, r12
0x00005dc6      4889e9         mov rcx, rbp
0x00005dc9      31d2           xor edx, edx
0x00005dcb      31f6           xor esi, esi
0x00005dcd      e82e0e0000     call sym._obstack_begin
0x00005dd2      488dbbc80000.  lea rdi, [rbx + 0xc8]                   ; ../coreutils-8.31/lib/readtokens0.c:37
0x00005dd9      4d89e0         mov r8, r12
0x00005ddc      4889e9         mov rcx, rbp
0x00005ddf      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:38
0x00005de0      5d             pop rbp
0x00005de1      415c           pop r12
0x00005de3      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/readtokens0.c:37
0x00005de5      31f6           xor esi, esi
0x00005de7      e9140e0000     jmp sym._obstack_begin
0x00005dec      0f1f4000       nop dword [rax]
;-- readtokens0_free:
0x00005df0      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:42
0x00005df1      4889fb         mov rbx, rdi
0x00005df4      488d7f18       lea rdi, [rdi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:43
0x00005df8      31f6           xor esi, esi
0x00005dfa      e8710f0000     call sym._obstack_free
0x00005dff      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:44
0x00005e03      31f6           xor esi, esi
0x00005e05      e8660f0000     call sym._obstack_free
0x00005e0a      488dbbc80000.  lea rdi, [rbx + 0xc8]                   ; ../coreutils-8.31/lib/readtokens0.c:45
0x00005e11      31f6           xor esi, esi
0x00005e13      5b             pop rbx                                 ; ../coreutils-8.31/lib/readtokens0.c:46
0x00005e14      e9570f0000     jmp sym._obstack_free                   ; ../coreutils-8.31/lib/readtokens0.c:45
0x00005e19      0f1f80000000.  nop dword [rax]
;-- readtokens0:
0x00005e20      4154           push r12                                ; ../coreutils-8.31/lib/readtokens0.c:67
0x00005e22      55             push rbp
0x00005e23      4c8d6618       lea r12, [rsi + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:87
0x00005e27      53             push rbx                                ; ../coreutils-8.31/lib/readtokens0.c:67
0x00005e28      4889fd         mov rbp, rdi
0x00005e2b      4889f3         mov rbx, rsi
0x00005e2e      4883ec10       sub rsp, 0x10
0x00005e32      eb12           jmp 0x5e46
0x00005e34      0f1f4000       nop dword [rax]
0x00005e38      488d4a01       lea rcx, [rdx + 1]                      ; ../coreutils-8.31/lib/readtokens0.c:87
0x00005e3c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens0.c:88
0x00005e3e      48894b30       mov qword [rbx + 0x30], rcx             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00005e42      8802           mov byte [rdx], al
0x00005e44      743e           je 0x5e84                               ; ../coreutils-8.31/lib/readtokens0.c:88
0x00005e46      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:71
0x00005e49      e8f2bcffff     call sym.imp.fgetc
0x00005e4e      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/readtokens0.c:72
0x00005e51      744d           je 0x5ea0
0x00005e53      488b5330       mov rdx, qword [rbx + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00005e57      48395338       cmp qword [rbx + 0x38], rdx
0x00005e5b      75db           jne 0x5e38
0x00005e5d      be01000000     mov esi, 1
0x00005e62      4c89e7         mov rdi, r12
0x00005e65      8944240c       mov dword [rsp + 0xc], eax
0x00005e69      e8d20d0000     call sym._obstack_newchunk
0x00005e6e      488b5330       mov rdx, qword [rbx + 0x30]
0x00005e72      8b44240c       mov eax, dword [rsp + 0xc]
0x00005e76      488d4a01       lea rcx, [rdx + 1]
0x00005e7a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens0.c:88
0x00005e7c      48894b30       mov qword [rbx + 0x30], rcx             ; ../coreutils-8.31/lib/readtokens0.c:87
0x00005e80      8802           mov byte [rdx], al
0x00005e82      75c2           jne 0x5e46                              ; ../coreutils-8.31/lib/readtokens0.c:88
0x00005e84      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readtokens0.c:89
0x00005e87      e804feffff     call sym.save_token
0x00005e8c      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:71
0x00005e8f      e8acbcffff     call sym.imp.fgetc
0x00005e94      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/readtokens0.c:72
0x00005e97      75ba           jne 0x5e53
0x00005e99      0f1f80000000.  nop dword [rax]
0x00005ea0      488b4330       mov rax, qword [rbx + 0x30]             ; ../coreutils-8.31/lib/readtokens0.c:74
0x00005ea4      48394328       cmp qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/readtokens0.c:78
0x00005ea8      741d           je 0x5ec7
0x00005eaa      48394338       cmp qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/readtokens0.c:80
0x00005eae      0f845c010000   je 0x6010
0x00005eb4      488d5001       lea rdx, [rax + 1]
0x00005eb8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/readtokens0.c:81
0x00005ebb      48895330       mov qword [rbx + 0x30], rdx             ; ../coreutils-8.31/lib/readtokens0.c:80
0x00005ebf      c60000         mov byte [rax], 0
0x00005ec2      e8c9fdffff     call sym.save_token                     ; ../coreutils-8.31/lib/readtokens0.c:81
0x00005ec7      488b93880000.  mov rdx, qword [rbx + 0x88]             ; ../coreutils-8.31/lib/readtokens0.c:94
0x00005ece      488b83900000.  mov rax, qword [rbx + 0x90]
0x00005ed5      4829d0         sub rax, rdx
0x00005ed8      4883f807       cmp rax, 7
0x00005edc      0f86ee000000   jbe 0x5fd0
0x00005ee2      48c702000000.  mov qword [rdx], 0
0x00005ee9      488b83880000.  mov rax, qword [rbx + 0x88]
0x00005ef0      488bb3800000.  mov rsi, qword [rbx + 0x80]             ; ../coreutils-8.31/lib/readtokens0.c:96
0x00005ef7      488d5008       lea rdx, [rax + 8]                      ; ../coreutils-8.31/lib/readtokens0.c:94
0x00005efb      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens0.c:96
0x00005efe      488993880000.  mov qword [rbx + 0x88], rdx             ; ../coreutils-8.31/lib/readtokens0.c:94
0x00005f05      0f84f5000000   je 0x6000                               ; ../coreutils-8.31/lib/readtokens0.c:96
0x00005f0b      488b8ba00000.  mov rcx, qword [rbx + 0xa0]
0x00005f12      488d040a       lea rax, [rdx + rcx]
0x00005f16      48f7d1         not rcx
0x00005f19      488b5378       mov rdx, qword [rbx + 0x78]
0x00005f1d      4821c8         and rax, rcx
0x00005f20      488b8b900000.  mov rcx, qword [rbx + 0x90]
0x00005f27      4889c7         mov rdi, rax
0x00005f2a      488983880000.  mov qword [rbx + 0x88], rax
0x00005f31      4829d7         sub rdi, rdx
0x00005f34      4989c8         mov r8, rcx
0x00005f37      4929d0         sub r8, rdx
0x00005f3a      4c39c7         cmp rdi, r8
0x00005f3d      760a           jbe 0x5f49
0x00005f3f      48898b880000.  mov qword [rbx + 0x88], rcx
0x00005f46      4889c8         mov rax, rcx
0x00005f49      48897308       mov qword [rbx + 8], rsi
0x00005f4d      488b93e00000.  mov rdx, qword [rbx + 0xe0]             ; ../coreutils-8.31/lib/readtokens0.c:97
0x00005f54      488bb3d80000.  mov rsi, qword [rbx + 0xd8]
0x00005f5b      488983800000.  mov qword [rbx + 0x80], rax             ; ../coreutils-8.31/lib/readtokens0.c:96
0x00005f62      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens0.c:97
0x00005f65      0f8485000000   je 0x5ff0
0x00005f6b      488b8bf80000.  mov rcx, qword [rbx + 0xf8]
0x00005f72      488d040a       lea rax, [rdx + rcx]
0x00005f76      48f7d1         not rcx
0x00005f79      488b93e80000.  mov rdx, qword [rbx + 0xe8]
0x00005f80      4821c8         and rax, rcx
0x00005f83      488b8bd00000.  mov rcx, qword [rbx + 0xd0]
0x00005f8a      4889c7         mov rdi, rax
0x00005f8d      4989d1         mov r9, rdx
0x00005f90      488983e00000.  mov qword [rbx + 0xe0], rax
0x00005f97      4829cf         sub rdi, rcx
0x00005f9a      4929c9         sub r9, rcx
0x00005f9d      4c39cf         cmp rdi, r9
0x00005fa0      760a           jbe 0x5fac
0x00005fa2      488993e00000.  mov qword [rbx + 0xe0], rdx
0x00005fa9      4889d0         mov rax, rdx
0x00005fac      488983d80000.  mov qword [rbx + 0xd8], rax
0x00005fb3      48897310       mov qword [rbx + 0x10], rsi
0x00005fb7      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/readtokens0.c:98
0x00005fba      e871baffff     call sym.imp.ferror
0x00005fbf      85c0           test eax, eax
0x00005fc1      0f94c0         sete al
0x00005fc4      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/readtokens0.c:99
0x00005fc8      5b             pop rbx
0x00005fc9      5d             pop rbp
0x00005fca      415c           pop r12
0x00005fcc      c3             ret
0x00005fcd      0f1f00         nop dword [rax]
0x00005fd0      488d7b70       lea rdi, [rbx + 0x70]                   ; ../coreutils-8.31/lib/readtokens0.c:94
0x00005fd4      be08000000     mov esi, 8
0x00005fd9      e8620c0000     call sym._obstack_newchunk
0x00005fde      488b93880000.  mov rdx, qword [rbx + 0x88]
0x00005fe5      e9f8feffff     jmp 0x5ee2
0x00005fea      660f1f440000   nop word [rax + rax]
0x00005ff0      808b18010000.  or byte [rbx + 0x118], 2                ; ../coreutils-8.31/lib/readtokens0.c:97
0x00005ff7      e96fffffff     jmp 0x5f6b
0x00005ffc      0f1f4000       nop dword [rax]
0x00006000      808bc0000000.  or byte [rbx + 0xc0], 2                 ; ../coreutils-8.31/lib/readtokens0.c:96
0x00006007      e9fffeffff     jmp 0x5f0b
0x0000600c      0f1f4000       nop dword [rax]
0x00006010      488d7b18       lea rdi, [rbx + 0x18]                   ; ../coreutils-8.31/lib/readtokens0.c:80
0x00006014      be01000000     mov esi, 1
0x00006019      e8220c0000     call sym._obstack_newchunk
0x0000601e      488b4330       mov rax, qword [rbx + 0x30]
0x00006022      e98dfeffff     jmp 0x5eb4
0x00006027      660f1f840000.  nop word [rax + rax]
;-- safe_read:
0x00006030      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00006032      4154           push r12
0x00006034      4189fd         mov r13d, edi
0x00006037      55             push rbp
0x00006038      53             push rbx
0x00006039      4989f4         mov r12, rsi
0x0000603c      4889d3         mov rbx, rdx
0x0000603f      4883ec08       sub rsp, 8
0x00006043      0f1f440000     nop dword [rax + rax]
0x00006048      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000604b      4c89e6         mov rsi, r12
0x0000604e      4489ef         mov edi, r13d
0x00006051      e82abbffff     call sym.imp.read
0x00006056      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00006059      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000605c      7922           jns 0x6080                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000605e      e88db9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00006063      8b00           mov eax, dword [rax]
0x00006065      83f804         cmp eax, 4
0x00006068      74de           je 0x6048
0x0000606a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00006071      760d           jbe 0x6080
0x00006073      83f816         cmp eax, 0x16
0x00006076      7508           jne 0x6080
0x00006078      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000607d      ebc9           jmp 0x6048
0x0000607f      90             nop
0x00006080      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00006084      4889e8         mov rax, rbp
0x00006087      5b             pop rbx
0x00006088      5d             pop rbp
0x00006089      415c           pop r12
0x0000608b      415d           pop r13
0x0000608d      c3             ret
0x0000608e      6690           nop
;-- version_etc_arn:
0x00006090      4157           push r15
0x00006092      4156           push r14
0x00006094      4155           push r13
0x00006096      4154           push r12
0x00006098      4d89cc         mov r12, r9
0x0000609b      55             push rbp
0x0000609c      53             push rbx
0x0000609d      4889fd         mov rbp, rdi
0x000060a0      4c89c3         mov rbx, r8
0x000060a3      4883ec28       sub rsp, 0x28
0x000060a7      4885f6         test rsi, rsi
0x000060aa      0f8418010000   je 0x61c8
0x000060b0      4989d0         mov r8, rdx
0x000060b3      488d152e1d00.  lea rdx, [0x00007de8]                   ; "%s (%s) %s\n"
0x000060ba      4989c9         mov r9, rcx
0x000060bd      31c0           xor eax, eax
0x000060bf      4889f1         mov rcx, rsi
0x000060c2      be01000000     mov esi, 1
0x000060c7      e8a4bcffff     call sym.imp.__fprintf_chk
0x000060cc      488d35281d00.  lea rsi, [0x00007dfb]                   ; "(C)"
0x000060d3      31ff           xor edi, edi
0x000060d5      ba05000000     mov edx, 5
0x000060da      e8a1b9ffff     call sym.imp.dcgettext
0x000060df      488d153a2000.  lea rdx, obj.version_etc_copyright      ; 0x8120 ; "Copyright %s %d Free Software Foundation, Inc."
0x000060e6      4889c1         mov rcx, rax
0x000060e9      41b8e3070000   mov r8d, 0x7e3
0x000060ef      be01000000     mov esi, 1
0x000060f4      4889ef         mov rdi, rbp
0x000060f7      31c0           xor eax, eax
0x000060f9      e872bcffff     call sym.imp.__fprintf_chk
0x000060fe      488d35831d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7e88 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00006105      31ff           xor edi, edi
0x00006107      ba05000000     mov edx, 5
0x0000610c      e86fb9ffff     call sym.imp.dcgettext
0x00006111      4889ee         mov rsi, rbp
0x00006114      4889c7         mov rdi, rax
0x00006117      e884baffff     call sym.imp.fputs_unlocked
0x0000611c      4983fc09       cmp r12, 9
0x00006120      0f873a030000   ja 0x6460
0x00006126      488d15bb1f00.  lea rdx, [0x000080e8]
0x0000612d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006131      4801d0         add rax, rdx
0x00006134      ffe0           jmp rax
0x00006136      662e0f1f8400.  nop word cs:[rax + rax]
0x00006140      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006144      488b4310       mov rax, qword [rbx + 0x10]
0x00006148      488d35a91e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7ff8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000614f      4c8b4308       mov r8, qword [rbx + 8]
0x00006153      ba05000000     mov edx, 5
0x00006158      31ff           xor edi, edi
0x0000615a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000615e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006162      4c894c2410     mov qword [rsp + 0x10], r9
0x00006167      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000616b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000616f      48890424       mov qword [rsp], rax
0x00006173      4c89442408     mov qword [rsp + 8], r8
0x00006178      488b1b         mov rbx, qword [rbx]
0x0000617b      e800b9ffff     call sym.imp.dcgettext
0x00006180      4883ec08       sub rsp, 8
0x00006184      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006189      4889c2         mov rdx, rax
0x0000618c      4889d9         mov rcx, rbx
0x0000618f      be01000000     mov esi, 1
0x00006194      4889ef         mov rdi, rbp
0x00006197      31c0           xor eax, eax
0x00006199      4151           push r9
0x0000619b      4155           push r13
0x0000619d      4154           push r12
0x0000619f      4157           push r15
0x000061a1      4156           push r14
0x000061a3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000061a8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000061ad      e8bebbffff     call sym.imp.__fprintf_chk
0x000061b2      4883c430       add rsp, 0x30
0x000061b6      4883c428       add rsp, 0x28
0x000061ba      5b             pop rbx
0x000061bb      5d             pop rbp
0x000061bc      415c           pop r12
0x000061be      415d           pop r13
0x000061c0      415e           pop r14
0x000061c2      415f           pop r15
0x000061c4      c3             ret
0x000061c5      0f1f00         nop dword [rax]
0x000061c8      4989c8         mov r8, rcx
0x000061cb      4889d1         mov rcx, rdx
0x000061ce      488d151f1c00.  lea rdx, str.s__s                       ; 0x7df4 ; "%s %s\n"
0x000061d5      be01000000     mov esi, 1
0x000061da      31c0           xor eax, eax
0x000061dc      e88fbbffff     call sym.imp.__fprintf_chk
0x000061e1      e9e6feffff     jmp 0x60cc
0x000061e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000061f0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000061f4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000061f8      488d35291e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x8028 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000061ff      488b4310       mov rax, qword [rbx + 0x10]
0x00006203      4c8b4308       mov r8, qword [rbx + 8]
0x00006207      ba05000000     mov edx, 5
0x0000620c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006210      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006214      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006218      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000621c      488b1b         mov rbx, qword [rbx]
0x0000621f      4c89542418     mov qword [rsp + 0x18], r10
0x00006224      4c894c2410     mov qword [rsp + 0x10], r9
0x00006229      48890424       mov qword [rsp], rax
0x0000622d      4c89442408     mov qword [rsp + 8], r8
0x00006232      31ff           xor edi, edi
0x00006234      e847b8ffff     call sym.imp.dcgettext
0x00006239      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000623e      4152           push r10
0x00006240      e93fffffff     jmp 0x6184
0x00006245      0f1f00         nop dword [rax]
0x00006248      488b1b         mov rbx, qword [rbx]
0x0000624b      488d35ad1b00.  lea rsi, str.Written_by__s.             ; 0x7dff ; "Written by %s.\n"
0x00006252      ba05000000     mov edx, 5
0x00006257      31ff           xor edi, edi
0x00006259      e822b8ffff     call sym.imp.dcgettext
0x0000625e      4883c428       add rsp, 0x28
0x00006262      4889d9         mov rcx, rbx
0x00006265      4889ef         mov rdi, rbp
0x00006268      5b             pop rbx
0x00006269      5d             pop rbp
0x0000626a      415c           pop r12
0x0000626c      415d           pop r13
0x0000626e      415e           pop r14
0x00006270      415f           pop r15
0x00006272      4889c2         mov rdx, rax
0x00006275      be01000000     mov esi, 1
0x0000627a      31c0           xor eax, eax
0x0000627c      e9efbaffff     jmp sym.imp.__fprintf_chk
0x00006281      0f1f80000000.  nop dword [rax]
0x00006288      4c8b6308       mov r12, qword [rbx + 8]
0x0000628c      488d357c1b00.  lea rsi, str.Written_by__s_and__s.      ; 0x7e0f ; "Written by %s and %s.\n"
0x00006293      488b1b         mov rbx, qword [rbx]
0x00006296      ba05000000     mov edx, 5
0x0000629b      31ff           xor edi, edi
0x0000629d      e8deb7ffff     call sym.imp.dcgettext
0x000062a2      4883c428       add rsp, 0x28
0x000062a6      4d89e0         mov r8, r12
0x000062a9      4889d9         mov rcx, rbx
0x000062ac      4889ef         mov rdi, rbp
0x000062af      4889c2         mov rdx, rax
0x000062b2      be01000000     mov esi, 1
0x000062b7      5b             pop rbx
0x000062b8      5d             pop rbp
0x000062b9      415c           pop r12
0x000062bb      415d           pop r13
0x000062bd      415e           pop r14
0x000062bf      415f           pop r15
0x000062c1      31c0           xor eax, eax
0x000062c3      e9a8baffff     jmp sym.imp.__fprintf_chk
0x000062c8      0f1f84000000.  nop dword [rax + rax]
0x000062d0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000062d4      4c8b6308       mov r12, qword [rbx + 8]
0x000062d8      488d35471b00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7e26 ; "Written by %s, %s, and %s.\n"
0x000062df      488b1b         mov rbx, qword [rbx]
0x000062e2      ba05000000     mov edx, 5
0x000062e7      31ff           xor edi, edi
0x000062e9      e892b7ffff     call sym.imp.dcgettext
0x000062ee      4883c428       add rsp, 0x28
0x000062f2      4d89e9         mov r9, r13
0x000062f5      4d89e0         mov r8, r12
0x000062f8      4889d9         mov rcx, rbx
0x000062fb      4889ef         mov rdi, rbp
0x000062fe      4889c2         mov rdx, rax
0x00006301      5b             pop rbx
0x00006302      5d             pop rbp
0x00006303      415c           pop r12
0x00006305      415d           pop r13
0x00006307      415e           pop r14
0x00006309      415f           pop r15
0x0000630b      be01000000     mov esi, 1
0x00006310      31c0           xor eax, eax
0x00006312      e959baffff     jmp sym.imp.__fprintf_chk
0x00006317      660f1f840000.  nop word [rax + rax]
0x00006320      488d35311c00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7f58 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006327      ba05000000     mov edx, 5
0x0000632c      31ff           xor edi, edi
0x0000632e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006332      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006336      4c8b6308       mov r12, qword [rbx + 8]
0x0000633a      488b1b         mov rbx, qword [rbx]
0x0000633d      e83eb7ffff     call sym.imp.dcgettext
0x00006342      4883ec08       sub rsp, 8
0x00006346      4156           push r14
0x00006348      4889c2         mov rdx, rax
0x0000634b      4d89e9         mov r9, r13
0x0000634e      4d89e0         mov r8, r12
0x00006351      4889d9         mov rcx, rbx
0x00006354      4889ef         mov rdi, rbp
0x00006357      be01000000     mov esi, 1
0x0000635c      31c0           xor eax, eax
0x0000635e      e80dbaffff     call sym.imp.__fprintf_chk
0x00006363      58             pop rax
0x00006364      5a             pop rdx
0x00006365      4883c428       add rsp, 0x28
0x00006369      5b             pop rbx
0x0000636a      5d             pop rbp
0x0000636b      415c           pop r12
0x0000636d      415d           pop r13
0x0000636f      415e           pop r14
0x00006371      415f           pop r15
0x00006373      c3             ret
0x00006374      0f1f4000       nop dword [rax]
0x00006378      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000637c      488d35f51b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7f78 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006383      ba05000000     mov edx, 5
0x00006388      31ff           xor edi, edi
0x0000638a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000638e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006392      4c8b6308       mov r12, qword [rbx + 8]
0x00006396      488b1b         mov rbx, qword [rbx]
0x00006399      e8e2b6ffff     call sym.imp.dcgettext
0x0000639e      4157           push r15
0x000063a0      eba4           jmp 0x6346
0x000063a2      660f1f440000   nop word [rax + rax]
0x000063a8      4c8b4308       mov r8, qword [rbx + 8]
0x000063ac      4c8b6328       mov r12, qword [rbx + 0x28]
0x000063b0      488d35e91b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7fa0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000063b7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000063bb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000063bf      ba05000000     mov edx, 5
0x000063c4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000063c8      31ff           xor edi, edi
0x000063ca      488b1b         mov rbx, qword [rbx]
0x000063cd      4c890424       mov qword [rsp], r8
0x000063d1      e8aab6ffff     call sym.imp.dcgettext
0x000063d6      4883ec08       sub rsp, 8
0x000063da      4d89e9         mov r9, r13
0x000063dd      4154           push r12
0x000063df      4157           push r15
0x000063e1      4156           push r14
0x000063e3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000063e8      4889d9         mov rcx, rbx
0x000063eb      4889c2         mov rdx, rax
0x000063ee      4889ef         mov rdi, rbp
0x000063f1      be01000000     mov esi, 1
0x000063f6      31c0           xor eax, eax
0x000063f8      e873b9ffff     call sym.imp.__fprintf_chk
0x000063fd      4883c420       add rsp, 0x20
0x00006401      4883c428       add rsp, 0x28
0x00006405      5b             pop rbx
0x00006406      5d             pop rbp
0x00006407      415c           pop r12
0x00006409      415d           pop r13
0x0000640b      415e           pop r14
0x0000640d      415f           pop r15
0x0000640f      c3             ret
0x00006410      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006414      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006418      488d35a91b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x7fc8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000641f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006423      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006427      ba05000000     mov edx, 5
0x0000642c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006430      4c8b4308       mov r8, qword [rbx + 8]
0x00006434      31ff           xor edi, edi
0x00006436      4c894c2408     mov qword [rsp + 8], r9
0x0000643b      488b1b         mov rbx, qword [rbx]
0x0000643e      4c890424       mov qword [rsp], r8
0x00006442      e839b6ffff     call sym.imp.dcgettext
0x00006447      4155           push r13
0x00006449      4154           push r12
0x0000644b      4157           push r15
0x0000644d      4156           push r14
0x0000644f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006454      eb8d           jmp 0x63e3
0x00006456      662e0f1f8400.  nop word cs:[rax + rax]
0x00006460      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006464      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006468      ba05000000     mov edx, 5
0x0000646d      488b4310       mov rax, qword [rbx + 0x10]
0x00006471      4c8b4308       mov r8, qword [rbx + 8]
0x00006475      488d35e41b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8060 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000647c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006480      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006484      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006488      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000648c      4c89542418     mov qword [rsp + 0x18], r10
0x00006491      4c894c2410     mov qword [rsp + 0x10], r9
0x00006496      48890424       mov qword [rsp], rax
0x0000649a      4c89442408     mov qword [rsp + 8], r8
0x0000649f      488b1b         mov rbx, qword [rbx]
0x000064a2      e98bfdffff     jmp 0x6232
0x000064a7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000064b0      4531c9         xor r9d, r9d
0x000064b3      49833800       cmp qword [r8], 0
0x000064b7      7412           je 0x64cb
0x000064b9      0f1f80000000.  nop dword [rax]
0x000064c0      4983c101       add r9, 1
0x000064c4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000064c9      75f5           jne 0x64c0
0x000064cb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000064d0      4883ec68       sub rsp, 0x68
0x000064d4      4d89c2         mov r10, r8
0x000064d7      4531c9         xor r9d, r9d
0x000064da      64488b042528.  mov rax, qword fs:[0x28]
0x000064e3      4889442458     mov qword [rsp + 0x58], rax
0x000064e8      31c0           xor eax, eax
0x000064ea      4989e0         mov r8, rsp
0x000064ed      0f1f00         nop dword [rax]
0x000064f0      418b02         mov eax, dword [r10]
0x000064f3      83f82f         cmp eax, 0x2f
0x000064f6      7742           ja 0x653a
0x000064f8      4189c3         mov r11d, eax
0x000064fb      4d035a10       add r11, qword [r10 + 0x10]
0x000064ff      83c008         add eax, 8
0x00006502      418902         mov dword [r10], eax
0x00006505      498b03         mov rax, qword [r11]
0x00006508      4885c0         test rax, rax
0x0000650b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000650f      740a           je 0x651b
0x00006511      4983c101       add r9, 1
0x00006515      4983f90a       cmp r9, 0xa
0x00006519      75d5           jne 0x64f0
0x0000651b      e870fbffff     call sym.version_etc_arn
0x00006520      488b442458     mov rax, qword [rsp + 0x58]
0x00006525      644833042528.  xor rax, qword fs:[0x28]
0x0000652e      7505           jne 0x6535
0x00006530      4883c468       add rsp, 0x68
0x00006534      c3             ret
0x00006535      e876b5ffff     call sym.imp.__stack_chk_fail
0x0000653a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000653e      498d4308       lea rax, [r11 + 8]
0x00006542      49894208       mov qword [r10 + 8], rax
0x00006546      ebbd           jmp 0x6505
0x00006548      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006550      55             push rbp
0x00006551      53             push rbx
0x00006552      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006558      4531db         xor r11d, r11d
0x0000655b      4881ecb80000.  sub rsp, 0xb8
0x00006562      64488b042528.  mov rax, qword fs:[0x28]
0x0000656b      4889442478     mov qword [rsp + 0x78], rax
0x00006570      31c0           xor eax, eax
0x00006572      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000657a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006582      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000658a      4c8d442420     lea r8, [rsp + 0x20]
0x0000658f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006597      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000659f      4889442410     mov qword [rsp + 0x10], rax
0x000065a4      488d84248000.  lea rax, [rsp + 0x80]
0x000065ac      4531c9         xor r9d, r9d
0x000065af      4889442418     mov qword [rsp + 0x18], rax
0x000065b4      4889c5         mov rbp, rax
0x000065b7      660f1f840000.  nop word [rax + rax]
0x000065c0      4183fa2f       cmp r10d, 0x2f
0x000065c4      7756           ja 0x661c
0x000065c6      4489d0         mov eax, r10d
0x000065c9      41bb01000000   mov r11d, 1
0x000065cf      4183c208       add r10d, 8
0x000065d3      4801e8         add rax, rbp
0x000065d6      488b00         mov rax, qword [rax]
0x000065d9      4885c0         test rax, rax
0x000065dc      4b8904c8       mov qword [r8 + r9*8], rax
0x000065e0      740a           je 0x65ec
0x000065e2      4983c101       add r9, 1
0x000065e6      4983f90a       cmp r9, 0xa
0x000065ea      75d4           jne 0x65c0
0x000065ec      4584db         test r11b, r11b
0x000065ef      7524           jne 0x6615
0x000065f1      e89afaffff     call sym.version_etc_arn
0x000065f6      488b442478     mov rax, qword [rsp + 0x78]
0x000065fb      644833042528.  xor rax, qword fs:[0x28]
0x00006604      750a           jne 0x6610
0x00006606      4881c4b80000.  add rsp, 0xb8
0x0000660d      5b             pop rbx
0x0000660e      5d             pop rbp
0x0000660f      c3             ret
0x00006610      e89bb4ffff     call sym.imp.__stack_chk_fail
0x00006615      4489542408     mov dword [rsp + 8], r10d
0x0000661a      ebd5           jmp 0x65f1
0x0000661c      4889d8         mov rax, rbx
0x0000661f      4883c308       add rbx, 8
0x00006623      ebb1           jmp 0x65d6
0x00006625      90             nop
0x00006626      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006630      53             push rbx
0x00006631      488d350a1800.  lea rsi, str.Report_bugs_to:__s         ; 0x7e42 ; "\nReport bugs to: %s\n"
0x00006638      ba05000000     mov edx, 5
0x0000663d      31ff           xor edi, edi
0x0000663f      e83cb4ffff     call sym.imp.dcgettext
0x00006644      488d150c1800.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7e57 ; "bug-coreutils@gnu.org"
0x0000664b      4889c6         mov rsi, rax
0x0000664e      bf01000000     mov edi, 1
0x00006653      31c0           xor eax, eax
0x00006655      e836b6ffff     call sym.imp.__printf_chk
0x0000665a      488d350c1800.  lea rsi, str.s_home_page:___s           ; 0x7e6d ; "%s home page: <%s>\n"
0x00006661      ba05000000     mov edx, 5
0x00006666      31ff           xor edi, edi
0x00006668      e813b4ffff     call sym.imp.dcgettext
0x0000666d      488d0d8c1000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7700 ; "https://www.gnu.org/software/coreutils/"
0x00006674      488d15f10900.  lea rdx, str.GNU_coreutils              ; 0x706c ; "GNU coreutils"
0x0000667b      4889c6         mov rsi, rax
0x0000667e      bf01000000     mov edi, 1
0x00006683      31c0           xor eax, eax
0x00006685      e806b6ffff     call sym.imp.__printf_chk
0x0000668a      488b1d173a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00006691      488d35081a00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x80a0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006698      31ff           xor edi, edi
0x0000669a      ba05000000     mov edx, 5
0x0000669f      e8dcb3ffff     call sym.imp.dcgettext
0x000066a4      4889de         mov rsi, rbx
0x000066a7      4889c7         mov rdi, rax
0x000066aa      5b             pop rbx
0x000066ab      e9f0b4ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000066b0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000066b1      4889fb         mov rbx, rdi
0x000066b4      e80fb7ffff     call 0x1dc8                             ; ../coreutils-8.31/lib/xmalloc.c:41
0x000066b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000066bc      7505           jne 0x66c3
0x000066be      4885db         test rbx, rbx
0x000066c1      7502           jne 0x66c5
0x000066c3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000066c4      c3             ret
0x000066c5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000066ca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000066d0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000066d3      48f7e6         mul rsi
0x000066d6      4889c7         mov rdi, rax
0x000066d9      0f90c0         seto al
0x000066dc      4885ff         test rdi, rdi
0x000066df      780a           js 0x66eb
0x000066e1      0fb6c0         movzx eax, al
0x000066e4      4885c0         test rax, rax
0x000066e7      7502           jne 0x66eb
0x000066e9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000066eb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000066ef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000066f4      6690           nop
0x000066f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006700      ebae           jmp sym.xmalloc
0x00006702      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006706      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006710      4885f6         test rsi, rsi
0x00006713      53             push rbx
0x00006714      4889f3         mov rbx, rsi
0x00006717      7505           jne 0x671e
0x00006719      4885ff         test rdi, rdi
0x0000671c      751a           jne 0x6738
0x0000671e      4889de         mov rsi, rbx
0x00006721      e84ab5ffff     call sym.imp.realloc
0x00006726      4885c0         test rax, rax
0x00006729      7505           jne 0x6730
0x0000672b      4885db         test rbx, rbx
0x0000672e      7511           jne 0x6741                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006730      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006731      c3             ret
0x00006732      660f1f440000   nop word [rax + rax]
0x00006738      e883b6ffff     call sym..plt.got
0x0000673d      31c0           xor eax, eax
0x0000673f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006740      c3             ret
0x00006741      e8ba010000     call sym.xalloc_die
0x00006746      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006750      4889f0         mov rax, rsi
0x00006753      48f7e2         mul rdx
0x00006756      4889c6         mov rsi, rax
0x00006759      0f90c0         seto al
0x0000675c      4885f6         test rsi, rsi
0x0000675f      780a           js 0x676b
0x00006761      0fb6c0         movzx eax, al
0x00006764      4885c0         test rax, rax
0x00006767      7502           jne 0x676b
0x00006769      eba5           jmp sym.xrealloc
0x0000676b      4883ec08       sub rsp, 8
0x0000676f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006774      6690           nop
0x00006776      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006780      4885ff         test rdi, rdi
0x00006783      4989d1         mov r9, rdx
0x00006786      488b0e         mov rcx, qword [rsi]
0x00006789      7435           je 0x67c0
0x0000678b      31d2           xor edx, edx
0x0000678d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006797      49f7f1         div r9
0x0000679a      4839c8         cmp rax, rcx
0x0000679d      763c           jbe 0x67db
0x0000679f      4889c8         mov rax, rcx
0x000067a2      48d1e8         shr rax, 1
0x000067a5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000067aa      48890e         mov qword [rsi], rcx
0x000067ad      490fafc9       imul rcx, r9
0x000067b1      4889ce         mov rsi, rcx
0x000067b4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000067b9      0f1f80000000.  nop dword [rax]
0x000067c0      4885c9         test rcx, rcx
0x000067c3      7423           je 0x67e8
0x000067c5      4889c8         mov rax, rcx
0x000067c8      49f7e1         mul r9
0x000067cb      0f90c2         seto dl
0x000067ce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000067d1      0fb6d2         movzx edx, dl
0x000067d4      7805           js 0x67db
0x000067d6      4885d2         test rdx, rdx
0x000067d9      74cf           je 0x67aa
0x000067db      4883ec08       sub rsp, 8
0x000067df      e81c010000     call sym.xalloc_die
0x000067e4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000067e8      31d2           xor edx, edx
0x000067ea      b880000000     mov eax, 0x80
0x000067ef      4531c0         xor r8d, r8d
0x000067f2      49f7f1         div r9
0x000067f5      4885c0         test rax, rax
0x000067f8      410f94c0       sete r8b
0x000067fc      498d0c00       lea rcx, [r8 + rax]
0x00006800      ebc3           jmp 0x67c5
0x00006802      0f1f4000       nop dword [rax]
0x00006806      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006810      4885ff         test rdi, rdi
0x00006813      488b06         mov rax, qword [rsi]
0x00006816      7428           je 0x6840
0x00006818      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006822      4839d0         cmp rax, rdx
0x00006825      772a           ja 0x6851
0x00006827      4889c2         mov rdx, rax
0x0000682a      48d1ea         shr rdx, 1
0x0000682d      488d440201     lea rax, [rdx + rax + 1]
0x00006832      488906         mov qword [rsi], rax
0x00006835      4889c6         mov rsi, rax
0x00006838      e9d3feffff     jmp sym.xrealloc
0x0000683d      0f1f00         nop dword [rax]
0x00006840      4885c0         test rax, rax
0x00006843      ba80000000     mov edx, 0x80
0x00006848      480f44c2       cmove rax, rdx
0x0000684c      4885c0         test rax, rax
0x0000684f      79e1           jns 0x6832
0x00006851      4883ec08       sub rsp, 8
0x00006855      e8a6000000     call sym.xalloc_die
0x0000685a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006860      53             push rbx
0x00006861      4889fb         mov rbx, rdi
0x00006864      e847feffff     call sym.xmalloc
0x00006869      4889da         mov rdx, rbx
0x0000686c      31f6           xor esi, esi
0x0000686e      4889c7         mov rdi, rax
0x00006871      5b             pop rbx
0x00006872      e9b9b2ffff     jmp sym.imp.memset
0x00006877      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006880      4889f8         mov rax, rdi
0x00006883      4883ec08       sub rsp, 8
0x00006887      48f7e6         mul rsi
0x0000688a      0f90c2         seto dl
0x0000688d      4885c0         test rax, rax
0x00006890      7817           js 0x68a9
0x00006892      0fb6d2         movzx edx, dl
0x00006895      4885d2         test rdx, rdx
0x00006898      750f           jne 0x68a9
0x0000689a      e811b3ffff     call sym.imp.calloc
0x0000689f      4885c0         test rax, rax
0x000068a2      7405           je 0x68a9
0x000068a4      4883c408       add rsp, 8
0x000068a8      c3             ret
0x000068a9      e852000000     call sym.xalloc_die
0x000068ae      6690           nop
;-- xmemdup:
0x000068b0      55             push rbp
0x000068b1      53             push rbx
0x000068b2      4889fd         mov rbp, rdi
0x000068b5      4889f7         mov rdi, rsi
0x000068b8      4889f3         mov rbx, rsi
0x000068bb      4883ec08       sub rsp, 8
0x000068bf      e8ecfdffff     call sym.xmalloc
0x000068c4      4883c408       add rsp, 8
0x000068c8      4889da         mov rdx, rbx
0x000068cb      4889ee         mov rsi, rbp
0x000068ce      5b             pop rbx
0x000068cf      5d             pop rbp
0x000068d0      4889c7         mov rdi, rax
0x000068d3      e918b3ffff     jmp sym.imp.memcpy
0x000068d8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000068e0      53             push rbx
0x000068e1      4889fb         mov rbx, rdi
0x000068e4      e8b7b1ffff     call sym.imp.strlen
0x000068e9      4889df         mov rdi, rbx
0x000068ec      488d7001       lea rsi, [rax + 1]
0x000068f0      5b             pop rbx
0x000068f1      ebbd           jmp sym.xmemdup
0x000068f3      662e0f1f8400.  nop word cs:[rax + rax]
0x000068fd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006900      488d35481800.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x814f ; "memory exhausted"
0x00006907      4883ec08       sub rsp, 8
0x0000690b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006910      31ff           xor edi, edi
0x00006912      e869b1ffff     call sym.imp.dcgettext
0x00006917      8b3dfb362000   mov edi, dword [obj.exit_failure]       ; [0x20a018:4]=1
0x0000691d      488d15690f00.  lea rdx, [0x0000788d]                   ; "%s"
0x00006924      4889c1         mov rcx, rax
0x00006927      31f6           xor esi, esi
0x00006929      31c0           xor eax, eax
0x0000692b      e8a0b3ffff     call sym.imp.error
0x00006930      e8abb0ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006935      662e0f1f8400.  nop word cs:[rax + rax]
0x0000693f      90             nop
;-- rpl_fclose:
0x00006940      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006942      55             push rbp
0x00006943      53             push rbx
0x00006944      4889fb         mov rbx, rdi
0x00006947      e8b4b2ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000694c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000694e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006951      7854           js 0x69a7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006953      e808b3ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006958      85c0           test eax, eax
0x0000695a      752c           jne 0x6988
0x0000695c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000695f      e85c000000     call sym.rpl_fflush
0x00006964      85c0           test eax, eax
0x00006966      743c           je 0x69a4
0x00006968      e883b0ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000696d      448b20         mov r12d, dword [rax]
0x00006970      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006973      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006976      e8e5b0ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000697b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000697e      7530           jne 0x69b0
0x00006980      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006981      5d             pop rbp
0x00006982      415c           pop r12
0x00006984      c3             ret
0x00006985      0f1f00         nop dword [rax]
0x00006988      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000698b      e870b2ffff     call sym.imp.fileno
0x00006990      31f6           xor esi, esi
0x00006992      ba01000000     mov edx, 1
0x00006997      89c7           mov edi, eax
0x00006999      e872b1ffff     call sym.imp.lseek
0x0000699e      4883f8ff       cmp rax, 0xffffffffffffffff
0x000069a2      75b8           jne 0x695c
0x000069a4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000069a7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000069a8      5d             pop rbp
0x000069a9      415c           pop r12
0x000069ab      e9b0b0ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000069b0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000069b4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000069b9      ebc5           jmp 0x6980
0x000069bb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000069c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000069c3      53             push rbx
0x000069c4      4889fb         mov rbx, rdi
0x000069c7      7411           je 0x69da                               ; ../coreutils-8.31/lib/fflush.c:150
0x000069c9      e892b2ffff     call sym.imp.__freading
0x000069ce      85c0           test eax, eax
0x000069d0      7408           je 0x69da
0x000069d2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000069d8      750e           jne 0x69e8
0x000069da      4889df         mov rdi, rbx
0x000069dd      5b             pop rbx
0x000069de      e94db2ffff     jmp sym.imp.fflush
0x000069e3      0f1f440000     nop dword [rax + rax]
0x000069e8      4889df         mov rdi, rbx
0x000069eb      ba01000000     mov edx, 1
0x000069f0      31f6           xor esi, esi
0x000069f2      e809000000     call sym.rpl_fseeko
0x000069f7      4889df         mov rdi, rbx
0x000069fa      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000069fb      e930b2ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006a00      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006a04      48394710       cmp qword [rdi + 0x10], rax
0x00006a08      7406           je 0x6a10                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006a0a      e9e1b2ffff     jmp sym.imp.fseeko
0x00006a0f      90             nop
0x00006a10      488b4720       mov rax, qword [rdi + 0x20]
0x00006a14      48394728       cmp qword [rdi + 0x28], rax
0x00006a18      75f0           jne 0x6a0a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006a1a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006a1f      75e9           jne 0x6a0a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006a21      4154           push r12
0x00006a23      55             push rbp
0x00006a24      4189d4         mov r12d, edx
0x00006a27      53             push rbx
0x00006a28      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006a2b      4889fb         mov rbx, rdi
0x00006a2e      e8cdb1ffff     call sym.imp.fileno
0x00006a33      4489e2         mov edx, r12d
0x00006a36      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006a39      89c7           mov edi, eax
0x00006a3b      e8d0b0ffff     call sym.imp.lseek
0x00006a40      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006a44      740c           je 0x6a52
0x00006a46      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006a49      488983900000.  mov qword [rbx + 0x90], rax
0x00006a50      31c0           xor eax, eax
0x00006a52      5b             pop rbx
0x00006a53      5d             pop rbp
0x00006a54      415c           pop r12
0x00006a56      c3             ret
0x00006a57      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00006a60      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006a62      4154           push r12
0x00006a64      4989f5         mov r13, rsi
0x00006a67      55             push rbp
0x00006a68      53             push rbx
0x00006a69      4889fb         mov rbx, rdi
0x00006a6c      4989d4         mov r12, rdx
0x00006a6f      4883ec18       sub rsp, 0x18
0x00006a73      64488b042528.  mov rax, qword fs:[0x28]
0x00006a7c      4889442408     mov qword [rsp + 8], rax
0x00006a81      31c0           xor eax, eax
0x00006a83      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006a88      4885ff         test rdi, rdi
0x00006a8b      480f44d8       cmove rbx, rax
0x00006a8f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006a92      e839b0ffff     call sym.imp.mbrtowc
0x00006a97      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006a9b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006a9e      7620           jbe 0x6ac0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006aa0      4d85e4         test r12, r12
0x00006aa3      741b           je 0x6ac0
0x00006aa5      31ff           xor edi, edi
0x00006aa7      e8e4030000     call sym.hard_locale
0x00006aac      84c0           test al, al
0x00006aae      7510           jne 0x6ac0
0x00006ab0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006ab5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00006aba      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006abc      0f1f4000       nop dword [rax]
0x00006ac0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00006ac5      644833142528.  xor rdx, qword fs:[0x28]
0x00006ace      4889e8         mov rax, rbp
0x00006ad1      750b           jne 0x6ade
0x00006ad3      4883c418       add rsp, 0x18
0x00006ad7      5b             pop rbx
0x00006ad8      5d             pop rbp
0x00006ad9      415c           pop r12
0x00006adb      415d           pop r13
0x00006add      c3             ret
0x00006ade      e8cdafffff     call sym.imp.__stack_chk_fail
0x00006ae3      662e0f1f8400.  nop word cs:[rax + rax]
0x00006aed      0f1f00         nop dword [rax]
;-- print_and_abort:
0x00006af0      488d35581600.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/obstack.c:331 ; 0x814f ; "memory exhausted"
0x00006af7      4883ec08       sub rsp, 8
0x00006afb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/obstack.c:340
0x00006b00      31ff           xor edi, edi
0x00006b02      e879afffff     call sym.imp.dcgettext
0x00006b07      488b3dd23520.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00006b0e      488d15db1200.  lea rdx, [0x00007df0]                   ; "%s\n"
0x00006b15      4889c1         mov rcx, rax
0x00006b18      be01000000     mov esi, 1
0x00006b1d      31c0           xor eax, eax
0x00006b1f      e84cb2ffff     call sym.imp.__fprintf_chk
0x00006b24      8b3dee342000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/obstack.c:342 ; [0x20a018:4]=1
0x00006b2a      e821b2ffff     call sym.imp.exit
0x00006b2f      90             nop
;-- call_chunkfun:
0x00006b30      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:85
0x00006b34      488b4738       mov rax, qword [rdi + 0x38]
0x00006b38      7506           jne 0x6b40
0x00006b3a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:89
0x00006b3d      ffe0           jmp rax
0x00006b3f      90             nop
0x00006b40      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:87
0x00006b44      ffe0           jmp rax
0x00006b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- call_freefun:
0x00006b50      f6475001       test byte [rdi + 0x50], 1               ; ../coreutils-8.31/lib/obstack.c:94
0x00006b54      488b4740       mov rax, qword [rdi + 0x40]
0x00006b58      7506           jne 0x6b60
0x00006b5a      4889f7         mov rdi, rsi                            ; ../coreutils-8.31/lib/obstack.c:98
0x00006b5d      ffe0           jmp rax
0x00006b5f      90             nop
0x00006b60      488b7f48       mov rdi, qword [rdi + 0x48]             ; ../coreutils-8.31/lib/obstack.c:96
0x00006b64      ffe0           jmp rax
0x00006b66      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_worker:
0x00006b70      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:111
0x00006b73      4154           push r12
0x00006b75      55             push rbp
0x00006b76      53             push rbx
0x00006b77      4889fb         mov rbx, rdi
0x00006b7a      7464           je 0x6be0                               ; ../coreutils-8.31/lib/obstack.c:114
0x00006b7c      4c8d62ff       lea r12, [rdx - 1]
0x00006b80      4889d5         mov rbp, rdx
0x00006b83      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:130
0x00006b86      b8e00f0000     mov eax, 0xfe0
0x00006b8b      4c896330       mov qword [rbx + 0x30], r12             ; ../coreutils-8.31/lib/obstack.c:134
0x00006b8f      480f44f0       cmove rsi, rax                          ; ../coreutils-8.31/lib/obstack.c:130
0x00006b93      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:136
0x00006b96      488933         mov qword [rbx], rsi                    ; ../coreutils-8.31/lib/obstack.c:133
0x00006b99      e892ffffff     call sym.call_chunkfun                  ; ../coreutils-8.31/lib/obstack.c:136
0x00006b9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:137
0x00006ba1      48894308       mov qword [rbx + 8], rax                ; ../coreutils-8.31/lib/obstack.c:136
0x00006ba5      7446           je 0x6bed                               ; ../coreutils-8.31/lib/obstack.c:137
0x00006ba7      4a8d542010     lea rdx, [rax + r12 + 0x10]             ; ../coreutils-8.31/lib/obstack.c:139
0x00006bac      48f7dd         neg rbp
0x00006baf      4821d5         and rbp, rdx
0x00006bb2      488b13         mov rdx, qword [rbx]                    ; ../coreutils-8.31/lib/obstack.c:141
0x00006bb5      48896b10       mov qword [rbx + 0x10], rbp             ; ../coreutils-8.31/lib/obstack.c:139
0x00006bb9      48896b18       mov qword [rbx + 0x18], rbp
0x00006bbd      4801c2         add rdx, rax                            ; ../coreutils-8.31/lib/obstack.c:141
0x00006bc0      488910         mov qword [rax], rdx
0x00006bc3      48895320       mov qword [rbx + 0x20], rdx
0x00006bc7      48c740080000.  mov qword [rax + 8], 0                  ; ../coreutils-8.31/lib/obstack.c:142
0x00006bcf      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/obstack.c:147
0x00006bd4      806350f9       and byte [rbx + 0x50], 0xf9             ; ../coreutils-8.31/lib/obstack.c:145 ; [0xf9:1]=154
0x00006bd8      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:147
0x00006bd9      5d             pop rbp
0x00006bda      415c           pop r12
0x00006bdc      c3             ret
0x00006bdd      0f1f00         nop dword [rax]
0x00006be0      41bc0f000000   mov r12d, 0xf
0x00006be6      bd10000000     mov ebp, 0x10                           ; ../coreutils-8.31/lib/obstack.c:115
0x00006beb      eb96           jmp 0x6b83
0x00006bed      ff158d342000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:138 ; [0x20a080:8]=0x6af0 sym.print_and_abort
0x00006bf3      0f1f00         nop dword [rax]
0x00006bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin:
0x00006c00      806750fe       and byte [rdi + 0x50], 0xfe             ; ../coreutils-8.31/lib/obstack.c:154 ; [0xfe:1]=0
0x00006c04      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:155
0x00006c08      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:156
0x00006c0c      e95fffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:158
0x00006c11      0f1f440000     nop dword [rax + rax]
0x00006c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_begin_1:
0x00006c20      804f5001       or byte [rdi + 0x50], 1                 ; ../coreutils-8.31/lib/obstack.c:167
0x00006c24      48894f38       mov qword [rdi + 0x38], rcx             ; ../coreutils-8.31/lib/obstack.c:168
0x00006c28      4c894740       mov qword [rdi + 0x40], r8              ; ../coreutils-8.31/lib/obstack.c:169
0x00006c2c      4c894f48       mov qword [rdi + 0x48], r9              ; ../coreutils-8.31/lib/obstack.c:170
0x00006c30      e93bffffff     jmp sym._obstack_begin_worker           ; ../coreutils-8.31/lib/obstack.c:172
0x00006c35      90             nop
0x00006c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- _obstack_newchunk:
0x00006c40      4156           push r14                                ; ../coreutils-8.31/lib/obstack.c:183
0x00006c42      4155           push r13
0x00006c44      31d2           xor edx, edx
0x00006c46      4154           push r12
0x00006c48      55             push rbp
0x00006c49      53             push rbx
0x00006c4a      488b5f18       mov rbx, qword [rdi + 0x18]             ; ../coreutils-8.31/lib/obstack.c:186
0x00006c4e      482b5f10       sub rbx, qword [rdi + 0x10]
0x00006c52      488b6f08       mov rbp, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:184
0x00006c56      4801de         add rsi, rbx
0x00006c59      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/lib/obstack.c:192
0x00006c5c      0f92c2         setb dl
0x00006c5f      48037730       add rsi, qword [rdi + 0x30]
0x00006c63      0f92c0         setb al
0x00006c66      48c1e903       shr rcx, 3
0x00006c6a      483937         cmp qword [rdi], rsi
0x00006c6d      4c8d640e64     lea r12, [rsi + rcx + 0x64]
0x00006c72      480f4337       cmovae rsi, qword [rdi]
0x00006c76      4c39e6         cmp rsi, r12
0x00006c79      4c0f43e6       cmovae r12, rsi
0x00006c7d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:199
0x00006c80      0f859f000000   jne 0x6d25
0x00006c86      0fb6c0         movzx eax, al
0x00006c89      4885c0         test rax, rax
0x00006c8c      0f8593000000   jne 0x6d25
0x00006c92      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/obstack.c:200
0x00006c95      4989fd         mov r13, rdi
0x00006c98      e893feffff     call sym.call_chunkfun
0x00006c9d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:201
0x00006ca0      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/obstack.c:200
0x00006ca3      0f847c000000   je 0x6d25                               ; ../coreutils-8.31/lib/obstack.c:201
0x00006ca9      4a8d3420       lea rsi, [rax + r12]                    ; ../coreutils-8.31/lib/obstack.c:205
0x00006cad      49894508       mov qword [r13 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:203
0x00006cb1      48896808       mov qword [rax + 8], rbp                ; ../coreutils-8.31/lib/obstack.c:204
0x00006cb5      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006cb8      49897520       mov qword [r13 + 0x20], rsi             ; ../coreutils-8.31/lib/obstack.c:205
0x00006cbc      488930         mov qword [rax], rsi
0x00006cbf      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:209
0x00006cc3      498b7510       mov rsi, qword [r13 + 0x10]             ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006cc7      4d8d640610     lea r12, [r14 + rax + 0x10]             ; ../coreutils-8.31/lib/obstack.c:209
0x00006ccc      48f7d0         not rax
0x00006ccf      4921c4         and r12, rax
0x00006cd2      4c89e7         mov rdi, r12                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006cd5      e816afffff     call sym.imp.memcpy
0x00006cda      41f6455002     test byte [r13 + 0x50], 2               ; ../coreutils-8.31/lib/obstack.c:217
0x00006cdf      7515           jne 0x6cf6
0x00006ce1      498b4530       mov rax, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/obstack.c:219
0x00006ce5      488d540510     lea rdx, [rbp + rax + 0x10]
0x00006cea      48f7d0         not rax
0x00006ced      4821d0         and rax, rdx
0x00006cf0      49394510       cmp qword [r13 + 0x10], rax             ; ../coreutils-8.31/lib/obstack.c:218
0x00006cf4      741a           je 0x6d10
0x00006cf6      41806550fd     and byte [r13 + 0x50], 0xfd             ; ../coreutils-8.31/lib/obstack.c:229 ; [0xfd:1]=0
0x00006cfb      4c01e3         add rbx, r12                            ; ../coreutils-8.31/lib/obstack.c:227
0x00006cfe      4d896510       mov qword [r13 + 0x10], r12             ; ../coreutils-8.31/lib/obstack.c:226
0x00006d02      49895d18       mov qword [r13 + 0x18], rbx             ; ../coreutils-8.31/lib/obstack.c:227
0x00006d06      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:230
0x00006d07      5d             pop rbp
0x00006d08      415c           pop r12
0x00006d0a      415d           pop r13
0x00006d0c      415e           pop r14
0x00006d0e      c3             ret
0x00006d0f      90             nop
0x00006d10      488b4508       mov rax, qword [rbp + 8]                ; ../coreutils-8.31/lib/obstack.c:222
0x00006d14      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/obstack.c:223
0x00006d17      4c89ef         mov rdi, r13
0x00006d1a      49894608       mov qword [r14 + 8], rax                ; ../coreutils-8.31/lib/obstack.c:222
0x00006d1e      e82dfeffff     call sym.call_freefun                   ; ../coreutils-8.31/lib/obstack.c:223
0x00006d23      ebd1           jmp 0x6cf6
0x00006d25      ff1555332000   call qword [obj.obstack_alloc_failed_handler] ; ../coreutils-8.31/lib/obstack.c:202 ; [0x20a080:8]=0x6af0 sym.print_and_abort
0x00006d2b      0f1f440000     nop dword [rax + rax]
;-- _obstack_allocated_p:
0x00006d30      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:242
0x00006d34      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00006d37      742d           je 0x6d66
0x00006d39      0f1f80000000.  nop dword [rax]
0x00006d40      4839c6         cmp rsi, rax
0x00006d43      7605           jbe 0x6d4a
0x00006d45      483930         cmp qword [rax], rsi
0x00006d48      7316           jae 0x6d60
0x00006d4a      488b4008       mov rax, qword [rax + 8]                ; ../coreutils-8.31/lib/obstack.c:252
0x00006d4e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/obstack.c:250
0x00006d51      75ed           jne 0x6d40
0x00006d53      31c0           xor eax, eax
0x00006d55      c3             ret                                     ; ../coreutils-8.31/lib/obstack.c:256
0x00006d56      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d60      b801000000     mov eax, 1
0x00006d65      c3             ret
0x00006d66      f3c3           ret
0x00006d68      0f1f84000000.  nop dword [rax + rax]
;-- _obstack_free:
0x00006d70      4154           push r12                                ; ../coreutils-8.31/lib/obstack.c:263
0x00006d72      55             push rbp
0x00006d73      4889f5         mov rbp, rsi
0x00006d76      53             push rbx
0x00006d77      488b7708       mov rsi, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:267
0x00006d7b      4889fb         mov rbx, rdi
0x00006d7e      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/obstack.c:271
0x00006d81      742a           je 0x6dad
0x00006d83      0f1f440000     nop dword [rax + rax]
0x00006d88      4839ee         cmp rsi, rbp
0x00006d8b      7308           jae 0x6d95
0x00006d8d      488b06         mov rax, qword [rsi]
0x00006d90      4839e8         cmp rax, rbp
0x00006d93      732b           jae 0x6dc0
0x00006d95      4c8b6608       mov r12, qword [rsi + 8]                ; ../coreutils-8.31/lib/obstack.c:273
0x00006d99      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/obstack.c:274
0x00006d9c      e8affdffff     call sym.call_freefun
0x00006da1      804b5002       or byte [rbx + 0x50], 2                 ; ../coreutils-8.31/lib/obstack.c:278
0x00006da5      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/obstack.c:271
0x00006da8      4c89e6         mov rsi, r12
0x00006dab      75db           jne 0x6d88
0x00006dad      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/obstack.c:286
0x00006db0      7523           jne 0x6dd5
0x00006db2      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00006db3      5d             pop rbp
0x00006db4      415c           pop r12
0x00006db6      c3             ret
0x00006db7      660f1f840000.  nop word [rax + rax]
0x00006dc0      48896b18       mov qword [rbx + 0x18], rbp             ; ../coreutils-8.31/lib/obstack.c:282
0x00006dc4      48896b10       mov qword [rbx + 0x10], rbp
0x00006dc8      48894320       mov qword [rbx + 0x20], rax             ; ../coreutils-8.31/lib/obstack.c:283
0x00006dcc      48897308       mov qword [rbx + 8], rsi                ; ../coreutils-8.31/lib/obstack.c:284
0x00006dd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/obstack.c:289
0x00006dd1      5d             pop rbp
0x00006dd2      415c           pop r12
0x00006dd4      c3             ret
0x00006dd5      e806acffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/obstack.c:288
0x00006dda      660f1f440000   nop word [rax + rax]
;-- _obstack_memory_used:
0x00006de0      488b5708       mov rdx, qword [rdi + 8]                ; ../coreutils-8.31/lib/obstack.c:293
0x00006de4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/obstack.c:295
0x00006de6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00006de9      741d           je 0x6e08
0x00006deb      0f1f440000     nop dword [rax + rax]
0x00006df0      488b0a         mov rcx, qword [rdx]                    ; ../coreutils-8.31/lib/obstack.c:299
0x00006df3      4829d1         sub rcx, rdx
0x00006df6      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/obstack.c:297
0x00006dfa      4801c8         add rax, rcx                            ; ../coreutils-8.31/lib/obstack.c:299
0x00006dfd      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/obstack.c:297
0x00006e00      75ee           jne 0x6df0
0x00006e02      f3c3           ret
0x00006e04      0f1f4000       nop dword [rax]
0x00006e08      f3c3           ret                                     ; ../coreutils-8.31/lib/obstack.c:302
0x00006e0a      660f1f440000   nop word [rax + rax]
;-- close_stream:
0x00006e10      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006e12      55             push rbp
0x00006e13      4889fd         mov rbp, rdi
0x00006e16      53             push rbx
0x00006e17      e804acffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00006e1c      8b5d00         mov ebx, dword [rbp]
0x00006e1f      4889ef         mov rdi, rbp
0x00006e22      4989c4         mov r12, rax
0x00006e25      e816fbffff     call sym.rpl_fclose
0x00006e2a      83e320         and ebx, 0x20                           ; "@"
0x00006e2d      85db           test ebx, ebx
0x00006e2f      7517           jne 0x6e48
0x00006e31      85c0           test eax, eax
0x00006e33      740a           je 0x6e3f                               ; stdio.h:-186
0x00006e35      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006e38      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006e3d      7439           je 0x6e78
0x00006e3f      5b             pop rbx
0x00006e40      5d             pop rbp
0x00006e41      415c           pop r12
0x00006e43      c3             ret
0x00006e44      0f1f4000       nop dword [rax]
0x00006e48      85c0           test eax, eax
0x00006e4a      751c           jne 0x6e68
0x00006e4c      e89fabffff     call sym.imp.__errno_location
0x00006e51      c70000000000   mov dword [rax], 0
0x00006e57      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006e5c      5b             pop rbx
0x00006e5d      5d             pop rbp
0x00006e5e      415c           pop r12
0x00006e60      c3             ret
0x00006e61      0f1f80000000.  nop dword [rax]
0x00006e68      5b             pop rbx
0x00006e69      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006e6e      5d             pop rbp                                 ; stdio.h:-186
0x00006e6f      415c           pop r12
0x00006e71      c3             ret
0x00006e72      660f1f440000   nop word [rax + rax]
0x00006e78      e873abffff     call sym.imp.__errno_location
0x00006e7d      833809         cmp dword [rax], 9
0x00006e80      5b             pop rbx
0x00006e81      5d             pop rbp
0x00006e82      415c           pop r12                                 ; stdio.h:-178
0x00006e84      0f95c0         setne al
0x00006e87      0fb6c0         movzx eax, al
0x00006e8a      f7d8           neg eax
0x00006e8c      c3             ret
0x00006e8d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006e90      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006e94      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006e96      e8e5adffff     call sym.imp.setlocale
0x00006e9b      4889c2         mov rdx, rax
0x00006e9e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006ea3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006ea6      741d           je 0x6ec5
0x00006ea8      488d3db11200.  lea rdi, [0x00008160]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00006eaf      b902000000     mov ecx, 2
0x00006eb4      4889d6         mov rsi, rdx
0x00006eb7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006eb9      0f97c1         seta cl
0x00006ebc      80d900         sbb cl, 0
0x00006ebf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006ec1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006ec3      750b           jne 0x6ed0
0x00006ec5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006ec9      c3             ret
0x00006eca      660f1f440000   nop word [rax + rax]
0x00006ed0      488d3d8b1200.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8162 ; "POSIX"
0x00006ed7      b906000000     mov ecx, 6
0x00006edc      4889d6         mov rsi, rdx
0x00006edf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006ee1      0f97c0         seta al
0x00006ee4      1c00           sbb al, 0
0x00006ee6      84c0           test al, al
0x00006ee8      0f95c0         setne al
0x00006eeb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006eef      c3             ret
;-- locale_charset:
0x00006ef0      4883ec08       sub rsp, 8
0x00006ef4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006ef9      e842adffff     call sym.imp.nl_langinfo
0x00006efe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006f01      741d           je 0x6f20
0x00006f03      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006f06      488d155b1200.  lea rdx, str.ASCII                      ; 0x8168 ; "ASCII"
0x00006f0d      480f44c2       cmove rax, rdx
0x00006f11      4883c408       add rsp, 8
0x00006f15      c3             ret
0x00006f16      662e0f1f8400.  nop word cs:[rax + rax]
0x00006f20      488d05411200.  lea rax, str.ASCII                      ; 0x8168 ; "ASCII"
0x00006f27      4883c408       add rsp, 8
0x00006f2b      c3             ret
0x00006f2c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00006f30      4157           push r15
0x00006f32      4156           push r14
0x00006f34      4989d7         mov r15, rdx
0x00006f37      4155           push r13
0x00006f39      4154           push r12
0x00006f3b      4c8d25ee2a20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209a30 ; "@)"
0x00006f42      55             push rbp
0x00006f43      488d2dee2a20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209a38
0x00006f4a      53             push rbx
0x00006f4b      4189fd         mov r13d, edi
0x00006f4e      4989f6         mov r14, rsi
0x00006f51      4c29e5         sub rbp, r12
0x00006f54      4883ec08       sub rsp, 8
0x00006f58      48c1fd03       sar rbp, 3
0x00006f5c      e83faaffff     call sym._init
0x00006f61      4885ed         test rbp, rbp
0x00006f64      7420           je 0x6f86
0x00006f66      31db           xor ebx, ebx
0x00006f68      0f1f84000000.  nop dword [rax + rax]
0x00006f70      4c89fa         mov rdx, r15
0x00006f73      4c89f6         mov rsi, r14
0x00006f76      4489ef         mov edi, r13d
0x00006f79      41ff14dc       call qword [r12 + rbx*8]
0x00006f7d      4883c301       add rbx, 1
0x00006f81      4839dd         cmp rbp, rbx
0x00006f84      75ea           jne 0x6f70
0x00006f86      4883c408       add rsp, 8
0x00006f8a      5b             pop rbx
0x00006f8b      5d             pop rbp
0x00006f8c      415c           pop r12
0x00006f8e      415d           pop r13
0x00006f90      415e           pop r14
0x00006f92      415f           pop r15
0x00006f94      c3             ret
0x00006f95      90             nop
0x00006f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006fa0      f3c3           ret
0x00006fa2      662e0f1f8400.  nop word cs:[rax + rax]
0x00006fac      0f1f4000       nop dword [rax]
;-- atexit:
0x00006fb0      488b15513020.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006fb7      31f6           xor esi, esi
0x00006fb9      e962adffff     jmp sym.imp.__cxa_atexit
0x00006fbe      0000           add byte [rax], al
