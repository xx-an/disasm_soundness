;-- section..plt:
;-- .plt:
0x000016e0      ff350ac72000   push qword [0x0020ddf0]                 ; [12] -r-x section size 944 named .plt
0x000016e6      ff250cc72000   jmp qword [0x0020ddf8]                  ; [0x20ddf8:8]=0
0x000016ec      0f1f4000       nop dword [rax]
;-- imp.abort:
0x000016f0      ff250ac72000   jmp qword [reloc.abort]                 ; [0x20de00:8]=0x16f6
0x000016f6      6800000000     push 0
0x000016fb      e9e0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001700      ff2502c72000   jmp qword [reloc.__errno_location]      ; [0x20de08:8]=0x1706
0x00001706      6801000000     push 1
0x0000170b      e9d0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001710      ff25fac62000   jmp qword [reloc.strncmp]               ; [0x20de10:8]=0x1716
0x00001716      6802000000     push 2
0x0000171b      e9c0ffffff     jmp sym..plt
;-- imp._exit:
0x00001720      ff25f2c62000   jmp qword [reloc._exit]                 ; [0x20de18:8]=0x1726 ; "&\x17"
0x00001726      6803000000     push 3
0x0000172b      e9b0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001730      ff25eac62000   jmp qword [reloc.__fpending]            ; [0x20de20:8]=0x1736 ; "6\x17"
0x00001736      6804000000     push 4
0x0000173b      e9a0ffffff     jmp sym..plt
;-- imp.qsort:
0x00001740      ff25e2c62000   jmp qword [reloc.qsort]                 ; [0x20de28:8]=0x1746 ; "F\x17"
0x00001746      6805000000     push 5
0x0000174b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001750      ff25dac62000   jmp qword [reloc.fcntl]                 ; [0x20de30:8]=0x1756 ; "V\x17"
0x00001756      6806000000     push 6
0x0000175b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001760      ff25d2c62000   jmp qword [reloc.textdomain]            ; [0x20de38:8]=0x1766 ; "f\x17"
0x00001766      6807000000     push 7
0x0000176b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001770      ff25cac62000   jmp qword [reloc.fclose]                ; [0x20de40:8]=0x1776 ; "v\x17"
0x00001776      6808000000     push 8
0x0000177b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001780      ff25c2c62000   jmp qword [reloc.bindtextdomain]        ; [0x20de48:8]=0x1786
0x00001786      6809000000     push 9
0x0000178b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001790      ff25bac62000   jmp qword [reloc.dcgettext]             ; [0x20de50:8]=0x1796
0x00001796      680a000000     push 0xa
0x0000179b      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000017a0      ff25b2c62000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20de58:8]=0x17a6
0x000017a6      680b000000     push 0xb
0x000017ab      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x000017b0      ff25aac62000   jmp qword [reloc.strlen]                ; [0x20de60:8]=0x17b6
0x000017b6      680c000000     push 0xc
0x000017bb      e920ffffff     jmp sym..plt
;-- imp.__lxstat:
0x000017c0      ff25a2c62000   jmp qword [reloc.__lxstat]              ; [0x20de68:8]=0x17c6
0x000017c6      680d000000     push 0xd
0x000017cb      e910ffffff     jmp sym..plt
;-- imp.openat:
0x000017d0      ff259ac62000   jmp qword [reloc.openat]                ; [0x20de70:8]=0x17d6
0x000017d6      680e000000     push 0xe
0x000017db      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000017e0      ff2592c62000   jmp qword [reloc.__stack_chk_fail]      ; [0x20de78:8]=0x17e6
0x000017e6      680f000000     push 0xf
0x000017eb      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000017f0      ff258ac62000   jmp qword [reloc.getopt_long]           ; [0x20de80:8]=0x17f6
0x000017f6      6810000000     push 0x10
0x000017fb      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001800      ff2582c62000   jmp qword [reloc.mbrtowc]               ; [0x20de88:8]=0x1806
0x00001806      6811000000     push 0x11
0x0000180b      e9d0feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001810      ff257ac62000   jmp qword [reloc.__fxstatat]            ; [0x20de90:8]=0x1816
0x00001816      6812000000     push 0x12
0x0000181b      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001820      ff2572c62000   jmp qword [reloc.strrchr]               ; [0x20de98:8]=0x1826 ; "&\x18"
0x00001826      6813000000     push 0x13
0x0000182b      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x00001830      ff256ac62000   jmp qword [reloc.lseek]                 ; [0x20dea0:8]=0x1836 ; "6\x18"
0x00001836      6814000000     push 0x14
0x0000183b      e9a0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001840      ff2562c62000   jmp qword [reloc.__assert_fail]         ; [0x20dea8:8]=0x1846 ; "F\x18"
0x00001846      6815000000     push 0x15
0x0000184b      e990feffff     jmp sym..plt
;-- imp.memset:
0x00001850      ff255ac62000   jmp qword [reloc.memset]                ; [0x20deb0:8]=0x1856 ; "V\x18"
0x00001856      6816000000     push 0x16
0x0000185b      e980feffff     jmp sym..plt
;-- imp.close:
0x00001860      ff2552c62000   jmp qword [reloc.close]                 ; [0x20deb8:8]=0x1866 ; "f\x18"
0x00001866      6817000000     push 0x17
0x0000186b      e970feffff     jmp sym..plt
;-- imp.closedir:
0x00001870      ff254ac62000   jmp qword [reloc.closedir]              ; [0x20dec0:8]=0x1876 ; "v\x18"
0x00001876      6818000000     push 0x18
0x0000187b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001880      ff2542c62000   jmp qword [reloc.memcmp]                ; [0x20dec8:8]=0x1886
0x00001886      6819000000     push 0x19
0x0000188b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001890      ff253ac62000   jmp qword [reloc.fputs_unlocked]        ; [0x20ded0:8]=0x1896
0x00001896      681a000000     push 0x1a
0x0000189b      e940feffff     jmp sym..plt
;-- imp.calloc:
0x000018a0      ff2532c62000   jmp qword [reloc.calloc]                ; [0x20ded8:8]=0x18a6
0x000018a6      681b000000     push 0x1b
0x000018ab      e930feffff     jmp sym..plt
;-- imp.strcmp:
0x000018b0      ff252ac62000   jmp qword [reloc.strcmp]                ; [0x20dee0:8]=0x18b6
0x000018b6      681c000000     push 0x1c
0x000018bb      e920feffff     jmp sym..plt
;-- imp.dirfd:
0x000018c0      ff2522c62000   jmp qword [reloc.dirfd]                 ; [0x20dee8:8]=0x18c6
0x000018c6      681d000000     push 0x1d
0x000018cb      e910feffff     jmp sym..plt
;-- imp.umask:
0x000018d0      ff251ac62000   jmp qword [reloc.umask]                 ; [0x20def0:8]=0x18d6
0x000018d6      681e000000     push 0x1e
0x000018db      e900feffff     jmp sym..plt
;-- imp.memcpy:
0x000018e0      ff2512c62000   jmp qword [reloc.memcpy]                ; [0x20def8:8]=0x18e6
0x000018e6      681f000000     push 0x1f
0x000018eb      e9f0fdffff     jmp sym..plt
;-- imp.fileno:
0x000018f0      ff250ac62000   jmp qword [reloc.fileno]                ; [0x20df00:8]=0x18f6
0x000018f6      6820000000     push 0x20                               ; "@"
0x000018fb      e9e0fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001900      ff2502c62000   jmp qword [reloc.__xstat]               ; [0x20df08:8]=0x1906
0x00001906      6821000000     push 0x21                               ; '!'
0x0000190b      e9d0fdffff     jmp sym..plt
;-- imp.readdir:
0x00001910      ff25fac52000   jmp qword [reloc.readdir]               ; [0x20df10:8]=0x1916
0x00001916      6822000000     push 0x22                               ; '"'
0x0000191b      e9c0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001920      ff25f2c52000   jmp qword [reloc.malloc]                ; [0x20df18:8]=0x1926 ; "&\x19"
0x00001926      6823000000     push 0x23                               ; '#'
0x0000192b      e9b0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001930      ff25eac52000   jmp qword [reloc.fflush]                ; [0x20df20:8]=0x1936 ; "6\x19"
0x00001936      6824000000     push 0x24                               ; '$'
0x0000193b      e9a0fdffff     jmp sym..plt
;-- imp.fchmodat:
0x00001940      ff25e2c52000   jmp qword [reloc.fchmodat]              ; [0x20df28:8]=0x1946 ; "F\x19"
0x00001946      6825000000     push 0x25                               ; '%'
0x0000194b      e990fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001950      ff25dac52000   jmp qword [reloc.nl_langinfo]           ; [0x20df30:8]=0x1956 ; "V\x19"
0x00001956      6826000000     push 0x26                               ; '&'
0x0000195b      e980fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001960      ff25d2c52000   jmp qword [reloc.__fxstat]              ; [0x20df38:8]=0x1966 ; "f\x19"
0x00001966      6827000000     push 0x27                               ; '''
0x0000196b      e970fdffff     jmp sym..plt
;-- imp.__freading:
0x00001970      ff25cac52000   jmp qword [reloc.__freading]            ; [0x20df40:8]=0x1976 ; "v\x19"
0x00001976      6828000000     push 0x28                               ; '('
0x0000197b      e960fdffff     jmp sym..plt
;-- imp.fchdir:
0x00001980      ff25c2c52000   jmp qword [reloc.fchdir]                ; [0x20df48:8]=0x1986
0x00001986      6829000000     push 0x29                               ; ')'
0x0000198b      e950fdffff     jmp sym..plt
;-- imp.realloc:
0x00001990      ff25bac52000   jmp qword [reloc.realloc]               ; [0x20df50:8]=0x1996
0x00001996      682a000000     push 0x2a                               ; '*'
0x0000199b      e940fdffff     jmp sym..plt
;-- imp.setlocale:
0x000019a0      ff25b2c52000   jmp qword [reloc.setlocale]             ; [0x20df58:8]=0x19a6
0x000019a6      682b000000     push 0x2b                               ; '+'
0x000019ab      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000019b0      ff25aac52000   jmp qword [reloc.__printf_chk]          ; [0x20df60:8]=0x19b6
0x000019b6      682c000000     push 0x2c                               ; ','
0x000019bb      e920fdffff     jmp sym..plt
;-- imp.memmove:
0x000019c0      ff25a2c52000   jmp qword [reloc.memmove]               ; [0x20df68:8]=0x19c6
0x000019c6      682d000000     push 0x2d                               ; '-'
0x000019cb      e910fdffff     jmp sym..plt
;-- imp.error:
0x000019d0      ff259ac52000   jmp qword [reloc.error]                 ; [0x20df70:8]=0x19d6
0x000019d6      682e000000     push 0x2e                               ; '.'
0x000019db      e900fdffff     jmp sym..plt
;-- imp.open:
0x000019e0      ff2592c52000   jmp qword [reloc.open]                  ; [0x20df78:8]=0x19e6
0x000019e6      682f000000     push 0x2f                               ; '/'
0x000019eb      e9f0fcffff     jmp sym..plt
;-- imp.fseeko:
0x000019f0      ff258ac52000   jmp qword [reloc.fseeko]                ; [0x20df80:8]=0x19f6
0x000019f6      6830000000     push 0x30                               ; '0'
0x000019fb      e9e0fcffff     jmp sym..plt
;-- imp.fdopendir:
0x00001a00      ff2582c52000   jmp qword [reloc.fdopendir]             ; [0x20df88:8]=0x1a06
0x00001a06      6831000000     push 0x31                               ; '1'
0x00001a0b      e9d0fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001a10      ff257ac52000   jmp qword [reloc.fstatfs]               ; [0x20df90:8]=0x1a16
0x00001a16      6832000000     push 0x32                               ; '2'
0x00001a1b      e9c0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001a20      ff2572c52000   jmp qword [reloc.__cxa_atexit]          ; [0x20df98:8]=0x1a26 ; "&\x1a"
0x00001a26      6833000000     push 0x33                               ; '3'
0x00001a2b      e9b0fcffff     jmp sym..plt
;-- imp.exit:
0x00001a30      ff256ac52000   jmp qword [reloc.exit]                  ; [0x20dfa0:8]=0x1a36 ; "6\x1a"
0x00001a36      6834000000     push 0x34                               ; '4'
0x00001a3b      e9a0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001a40      ff2562c52000   jmp qword [reloc.fwrite]                ; [0x20dfa8:8]=0x1a46 ; "F\x1a"
0x00001a46      6835000000     push 0x35                               ; '5'
0x00001a4b      e990fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001a50      ff255ac52000   jmp qword [reloc.__fprintf_chk]         ; [0x20dfb0:8]=0x1a56 ; "V\x1a"
0x00001a56      6836000000     push 0x36                               ; '6'
0x00001a5b      e980fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001a60      ff2552c52000   jmp qword [reloc.mbsinit]               ; [0x20dfb8:8]=0x1a66 ; "f\x1a"
0x00001a66      6837000000     push 0x37                               ; '7'
0x00001a6b      e970fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001a70      ff254ac52000   jmp qword [reloc.iswprint]              ; [0x20dfc0:8]=0x1a76 ; "v\x1a"
0x00001a76      6838000000     push 0x38                               ; '8'
0x00001a7b      e960fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001a80      ff2542c52000   jmp qword [reloc.__ctype_b_loc]         ; [0x20dfc8:8]=0x1a86
0x00001a86      6839000000     push 0x39                               ; '9'
0x00001a8b      e950fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001a90      .qword 0x90660020c53a25ff                              ; [13] -r-x section size 16 named .plt.got
0x00001a98      .qword 0x90660020c55a25ff
;-- main:
;-- section..text:
;-- .text:
0x00001aa0      4157           push r15                                ; [14] -r-x section size 33086 named .text
0x00001aa2      4156           push r14
0x00001aa4      4531ff         xor r15d, r15d
0x00001aa7      4155           push r13
0x00001aa9      4154           push r12
0x00001aab      4531f6         xor r14d, r14d
0x00001aae      55             push rbp
0x00001aaf      53             push rbx
0x00001ab0      4863ef         movsxd rbp, edi
0x00001ab3      4889f3         mov rbx, rsi
0x00001ab6      4531e4         xor r12d, r12d
0x00001ab9      4531ed         xor r13d, r13d
0x00001abc      4881ecf80000.  sub rsp, 0xf8
0x00001ac3      488b3e         mov rdi, qword [rsi]
0x00001ac6      64488b042528.  mov rax, qword fs:[0x28]
0x00001acf      48898424e800.  mov qword [rsp + 0xe8], rax
0x00001ad7      31c0           xor eax, eax
0x00001ad9      48c744243800.  mov qword [rsp + 0x38], 0
0x00001ae2      e8391a0000     call sym.set_program_name
0x00001ae7      488d35d39000.  lea rsi, [0x0000abc1]
0x00001aee      bf06000000     mov edi, 6
0x00001af3      e8a8feffff     call sym.imp.setlocale
0x00001af8      488d35ae8100.  lea rsi, str.usr_local_share_locale     ; 0x9cad ; "/usr/local/share/locale"
0x00001aff      488d3d7e8100.  lea rdi, [0x00009c84]                   ; "coreutils"
0x00001b06      e875fcffff     call sym.imp.bindtextdomain
0x00001b0b      488d3d728100.  lea rdi, [0x00009c84]                   ; "coreutils"
0x00001b12      e849fcffff     call sym.imp.textdomain
0x00001b17      488d3d021200.  lea rdi, sym.close_stdout               ; 0x2d20 ; "USH\x83\xec\bH\x8b={\xb3 "
0x00001b1e      e8ad800000     call sym.atexit
0x00001b23      488d442438     lea rax, [rsp + 0x38]
0x00001b28      c605d9c52000.  mov byte [obj.diagnose_surprises], 0    ; [0x20e108:1]=0
0x00001b2f      c605d3c52000.  mov byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x00001b36      c605cdc52000.  mov byte [obj.recurse], 0               ; [0x20e10a:1]=0
0x00001b3d      4889442418     mov qword [rsp + 0x18], rax
0x00001b42      660f1f440000   nop word [rax + rax]
0x00001b48      488d0df1be20.  lea rcx, obj.long_options               ; 0x20da40
0x00001b4f      488d15fa8600.  lea rdx, str.Rcfvr::w::x::X::s::t::u::g::o::a::_::_::_::0::1::2::3::4::5::6::7:: ; 0xa250 ; "Rcfvr::w::x::X::s::t::u::g::o::a::,::+::=::0::1::2::3::4::5::6::7::"
0x00001b56      4531c0         xor r8d, r8d
0x00001b59      4889de         mov rsi, rbx
0x00001b5c      89ef           mov edi, ebp
0x00001b5e      e88dfcffff     call sym.imp.getopt_long
0x00001b63      83f8ff         cmp eax, 0xffffffff
0x00001b66      0f84e8010000   je 0x1d54
0x00001b6c      83f863         cmp eax, 0x63
0x00001b6f      0f846b010000   je 0x1ce0
0x00001b75      7e49           jle 0x1bc0
0x00001b77      83f876         cmp eax, 0x76
0x00001b7a      0f8470010000   je 0x1cf0
0x00001b80      0f8eaa000000   jle 0x1c30
0x00001b86      3d80000000     cmp eax, 0x80
0x00001b8b      0f847f010000   je 0x1d10
0x00001b91      0f8e9b090000   jle 0x2532
0x00001b97      3d81000000     cmp eax, 0x81
0x00001b9c      0f845e010000   je 0x1d00
0x00001ba2      3d82000000     cmp eax, 0x82
0x00001ba7      0f85fc0a0000   jne 0x26a9
0x00001bad      4c8b3d04c520.  mov r15, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20e0b8:8]=0
0x00001bb4      eb92           jmp 0x1b48
0x00001bb6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001bc0      83f837         cmp eax, 0x37
0x00001bc3      0f8f87000000   jg 0x1c50
0x00001bc9      83f830         cmp eax, 0x30
0x00001bcc      0f8da6000000   jge 0x1c78
0x00001bd2      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001bd7      0f842d0b0000   je 0x270a
0x00001bdd      0f8f96080000   jg 0x2479
0x00001be3      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001be8      0f85bb0a0000   jne 0x26a9
0x00001bee      4883ec08       sub rsp, 8
0x00001bf2      488b3dafc420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00001bf9      488b0d18c420.  mov rcx, qword [obj.Version]            ; [0x20e018:8]=0xa5ac str.8.31
0x00001c00      6a00           push 0
0x00001c02      4c8d0dbc8000.  lea r9, str.Jim_Meyering                ; 0x9cc5 ; "Jim Meyering"
0x00001c09      4c8d05c28000.  lea r8, str.David_MacKenzie             ; 0x9cd2 ; "David MacKenzie"
0x00001c10      488d15698000.  lea rdx, str.GNU_coreutils              ; 0x9c80 ; "GNU coreutils"
0x00001c17      488d35e67f00.  lea rsi, str.chmod                      ; 0x9c04 ; "chmod"
0x00001c1e      31c0           xor eax, eax
0x00001c20      e86b3b0000     call sym.version_etc
0x00001c25      31ff           xor edi, edi
0x00001c27      e804feffff     call sym.imp.exit
0x00001c2c      0f1f4000       nop dword [rax]
0x00001c30      83f86f         cmp eax, 0x6f
0x00001c33      7443           je 0x1c78
0x00001c35      0f8f05090000   jg 0x2540
0x00001c3b      83f866         cmp eax, 0x66
0x00001c3e      0f85e0080000   jne 0x2524
0x00001c44      c605bec42000.  mov byte [obj.force_silent], 1          ; [0x20e109:1]=0
0x00001c4b      e9f8feffff     jmp 0x1b48
0x00001c50      83f852         cmp eax, 0x52
0x00001c53      750c           jne 0x1c61
0x00001c55      c605aec42000.  mov byte [obj.recurse], 1               ; [0x20e10a:1]=0
0x00001c5c      e9e7feffff     jmp 0x1b48
0x00001c61      0f8e78040000   jle 0x20df
0x00001c67      83f858         cmp eax, 0x58
0x00001c6a      740c           je 0x1c78
0x00001c6c      83f861         cmp eax, 0x61
0x00001c6f      0f85340a0000   jne 0x26a9
0x00001c75      0f1f00         nop dword [rax]
0x00001c78      48630531c420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x00001c7f      488b44c3f8     mov rax, qword [rbx + rax*8 - 8]
0x00001c84      4889c7         mov rdi, rax
0x00001c87      4889442408     mov qword [rsp + 8], rax
0x00001c8c      e81ffbffff     call sym.imp.strlen
0x00001c91      31c9           xor ecx, ecx
0x00001c93      4d85e4         test r12, r12
0x00001c96      4889c2         mov rdx, rax
0x00001c99      0f95c1         setne cl
0x00001c9c      4c01e1         add rcx, r12
0x00001c9f      4c8d0408       lea r8, [rax + rcx]
0x00001ca3      4c39442438     cmp qword [rsp + 0x38], r8
0x00001ca8      766e           jbe 0x1d18
0x00001caa      488b742408     mov rsi, qword [rsp + 8]
0x00001caf      498d7c0d00     lea rdi, [r13 + rcx]
0x00001cb4      43c64425002c   mov byte [r13 + r12], 0x2c              ; ','
                                                                       ; [0x2c:1]=0
0x00001cba      4883c201       add rdx, 1
0x00001cbe      4c89442410     mov qword [rsp + 0x10], r8
0x00001cc3      e818fcffff     call sym.imp.memcpy
0x00001cc8      4c8b442410     mov r8, qword [rsp + 0x10]
0x00001ccd      c60534c42000.  mov byte [obj.diagnose_surprises], 1    ; [0x20e108:1]=0
0x00001cd4      4d89c4         mov r12, r8
0x00001cd7      e96cfeffff     jmp 0x1b48
0x00001cdc      0f1f4000       nop dword [rax]
0x00001ce0      c70526c32000.  mov dword [obj.verbosity], 1            ; [0x20e010:4]=2
0x00001cea      e959feffff     jmp 0x1b48
0x00001cef      90             nop
0x00001cf0      c70516c32000.  mov dword [obj.verbosity], 0            ; [0x20e010:4]=2
0x00001cfa      e949feffff     jmp 0x1b48
0x00001cff      90             nop
0x00001d00      41be01000000   mov r14d, 1
0x00001d06      e93dfeffff     jmp 0x1b48
0x00001d0b      0f1f440000     nop dword [rax + rax]
0x00001d10      4531f6         xor r14d, r14d
0x00001d13      e930feffff     jmp 0x1b48
0x00001d18      488b742418     mov rsi, qword [rsp + 0x18]
0x00001d1d      4889442428     mov qword [rsp + 0x28], rax
0x00001d22      498d4001       lea rax, [r8 + 1]
0x00001d26      4c89ef         mov rdi, r13
0x00001d29      48894c2420     mov qword [rsp + 0x20], rcx
0x00001d2e      4c89442410     mov qword [rsp + 0x10], r8
0x00001d33      4889442438     mov qword [rsp + 0x38], rax
0x00001d38      e8133d0000     call sym.x2realloc
0x00001d3d      488b542428     mov rdx, qword [rsp + 0x28]
0x00001d42      4989c5         mov r13, rax
0x00001d45      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00001d4a      4c8b442410     mov r8, qword [rsp + 0x10]
0x00001d4f      e956ffffff     jmp 0x1caa
0x00001d54      4d85ff         test r15, r15
0x00001d57      0f8490030000   je 0x20ed
0x00001d5d      4d85ed         test r13, r13
0x00001d60      0f855f0a0000   jne 0x27c5
0x00001d66      3b2d44c32000   cmp ebp, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x00001d6c      0f8e16090000   jle 0x2688
0x00001d72      4c89ff         mov rdi, r15
0x00001d75      e8a6150000     call sym.mode_create_from_ref
0x00001d7a      4889c5         mov rbp, rax
0x00001d7d      4889058cc320.  mov qword [obj.change], rax             ; [0x20e110:8]=0
0x00001d84      e877f9ffff     call sym.imp.__errno_location
0x00001d89      4885ed         test rbp, rbp
0x00001d8c      4989c4         mov r12, rax
0x00001d8f      0f8481090000   je 0x2716
0x00001d95      4422356ec320.  and r14b, byte [obj.recurse]            ; [0x20e10a:1]=0
0x00001d9c      e85ff9ffff     call sym.imp.__errno_location
0x00001da1      4889442420     mov qword [rsp + 0x20], rax
0x00001da6      4584f6         test r14b, r14b
0x00001da9      0f8532080000   jne 0x25e1
0x00001daf      48c70546c320.  mov qword [obj.root_dev_ino], 0         ; [0x20e100:8]=0
0x00001dba      486305efc220.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x00001dc1      31d2           xor edx, edx
0x00001dc3      be11040000     mov esi, 0x411
0x00001dc8      4c8d25a58700.  lea r12, [0x0000a574]
0x00001dcf      488d3cc3       lea rdi, [rbx + rax*8]
0x00001dd3      bb01000000     mov ebx, 1
0x00001dd8      e8a33d0000     call sym.xfts_open
0x00001ddd      4889c5         mov rbp, rax
0x00001de0      488d8424d000.  lea rax, [rsp + 0xd0]
0x00001de8      4889ef         mov rdi, rbp
0x00001deb      4889442408     mov qword [rsp + 8], rax
0x00001df0      488d8424dc00.  lea rax, [rsp + 0xdc]
0x00001df8      4889442410     mov qword [rsp + 0x10], rax
0x00001dfd      488d8424dd00.  lea rax, [rsp + 0xdd]
0x00001e05      4889442418     mov qword [rsp + 0x18], rax
0x00001e0a      e811590000     call sym.rpl_fts_read
0x00001e0f      4885c0         test rax, rax
0x00001e12      4989c6         mov r14, rax
0x00001e15      7444           je 0x1e5b
0x00001e17      660f1f840000.  nop word [rax + rax]
0x00001e20      668378700d     cmp word [rax + 0x70], 0xd
0x00001e25      4c8b6838       mov r13, qword [rax + 0x38]
0x00001e29      0f87e0010000   ja 0x200f
0x00001e2f      0fb74070       movzx eax, word [rax + 0x70]
0x00001e33      49630484       movsxd rax, dword [r12 + rax*4]
0x00001e37      4c01e0         add rax, r12
0x00001e3a      ffe0           jmp rax
0x00001e3c      41bf01000000   mov r15d, 1
0x00001e42      660f1f440000   nop word [rax + rax]
0x00001e48      4889ef         mov rdi, rbp
0x00001e4b      4421fb         and ebx, r15d
0x00001e4e      e8cd580000     call sym.rpl_fts_read
0x00001e53      4885c0         test rax, rax
0x00001e56      4989c6         mov r14, rax
0x00001e59      75c5           jne 0x1e20
0x00001e5b      488b442420     mov rax, qword [rsp + 0x20]
0x00001e60      833800         cmp dword [rax], 0
0x00001e63      7411           je 0x1e76
0x00001e65      0fb61d9dc220.  movzx ebx, byte [obj.force_silent]      ; [0x20e109:1]=0
0x00001e6c      84db           test bl, bl
0x00001e6e      0f8442070000   je 0x25b6
0x00001e74      31db           xor ebx, ebx
0x00001e76      4889ef         mov rdi, rbp
0x00001e79      e812570000     call sym.rpl_fts_close
0x00001e7e      85c0           test eax, eax
0x00001e80      7428           je 0x1eaa
0x00001e82      488d35057f00.  lea rsi, str.fts_close_failed           ; 0x9d8e ; "fts_close failed"
0x00001e89      ba05000000     mov edx, 5
0x00001e8e      31ff           xor edi, edi
0x00001e90      31db           xor ebx, ebx
0x00001e92      e8f9f8ffff     call sym.imp.dcgettext
0x00001e97      4889c2         mov rdx, rax
0x00001e9a      488b442420     mov rax, qword [rsp + 0x20]
0x00001e9f      31ff           xor edi, edi
0x00001ea1      8b30           mov esi, dword [rax]
0x00001ea3      31c0           xor eax, eax
0x00001ea5      e826fbffff     call sym.imp.error
0x00001eaa      83f301         xor ebx, 1
0x00001ead      0fb6c3         movzx eax, bl
0x00001eb0      488b9c24e800.  mov rbx, qword [rsp + 0xe8]
0x00001eb8      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001ec1      0f854a080000   jne 0x2711
0x00001ec7      4881c4f80000.  add rsp, 0xf8
0x00001ece      5b             pop rbx
0x00001ecf      5d             pop rbp
0x00001ed0      415c           pop r12
0x00001ed2      415d           pop r13
0x00001ed4      415e           pop r14
0x00001ed6      415f           pop r15
0x00001ed8      c3             ret
0x00001ed9      803d29c22000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x00001ee0      0f8468060000   je 0x254e
0x00001ee6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ef0      833d19c12000.  cmp dword [obj.verbosity], 2            ; [0x20e010:4]=2
0x00001ef7      740d           je 0x1f06
0x00001ef9      833d10c12000.  cmp dword [obj.verbosity], 0            ; [0x20e010:4]=2
0x00001f00      0f8429020000   je 0x212f
0x00001f06      4531ff         xor r15d, r15d
0x00001f09      803dfac12000.  cmp byte [obj.recurse], 0               ; [0x20e10a:1]=0
0x00001f10      0f8532ffffff   jne 0x1e48
0x00001f16      ba04000000     mov edx, 4
0x00001f1b      4c89f6         mov rsi, r14
0x00001f1e      4889ef         mov rdi, rbp
0x00001f21      e87a5f0000     call sym.rpl_fts_set
0x00001f26      e91dffffff     jmp 0x1e48
0x00001f2b      803dd7c12000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x00001f32      75bc           jne 0x1ef0
0x00001f34      4c89ee         mov rsi, r13
0x00001f37      bf04000000     mov edi, 4
0x00001f3c      e81f300000     call sym.quotearg_style
0x00001f41      488d35a08300.  lea rsi, str.cannot_operate_on_dangling_symlink__s ; 0xa2e8 ; "cannot operate on dangling symlink %s"
0x00001f48      4989c7         mov r15, rax
0x00001f4b      31ff           xor edi, edi
0x00001f4d      ba05000000     mov edx, 5
0x00001f52      e839f8ffff     call sym.imp.dcgettext
0x00001f57      4c89f9         mov rcx, r15
0x00001f5a      4889c2         mov rdx, rax
0x00001f5d      31f6           xor esi, esi
0x00001f5f      31ff           xor edi, edi
0x00001f61      31c0           xor eax, eax
0x00001f63      e868faffff     call sym.imp.error
0x00001f68      eb86           jmp 0x1ef0
0x00001f6a      49837e5800     cmp qword [r14 + 0x58], 0
0x00001f6f      750b           jne 0x1f7c
0x00001f71      49837e2000     cmp qword [r14 + 0x20], 0
0x00001f76      0f84c1060000   je 0x263d
0x00001f7c      803d86c12000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x00001f83      0f8567ffffff   jne 0x1ef0
0x00001f89      4c89ee         mov rsi, r13
0x00001f8c      bf04000000     mov edi, 4
0x00001f91      e8ca2f0000     call sym.quotearg_style
0x00001f96      488d358f7d00.  lea rsi, str.cannot_access__s           ; 0x9d2c ; "cannot access %s"
0x00001f9d      4989c7         mov r15, rax
0x00001fa0      ba05000000     mov edx, 5
0x00001fa5      31ff           xor edi, edi
0x00001fa7      e8e4f7ffff     call sym.imp.dcgettext
0x00001fac      418b7640       mov esi, dword [r14 + 0x40]
0x00001fb0      4889c2         mov rdx, rax
0x00001fb3      4c89f9         mov rcx, r15
0x00001fb6      31ff           xor edi, edi
0x00001fb8      31c0           xor eax, eax
0x00001fba      e811faffff     call sym.imp.error
0x00001fbf      e92cffffff     jmp 0x1ef0
0x00001fc4      803d3ec12000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x00001fcb      0f851fffffff   jne 0x1ef0
0x00001fd1      4c89ea         mov rdx, r13
0x00001fd4      31ff           xor edi, edi
0x00001fd6      be03000000     mov esi, 3
0x00001fdb      e880300000     call sym.quotearg_n_style_colon
0x00001fe0      418b7640       mov esi, dword [r14 + 0x40]
0x00001fe4      488d152e7d00.  lea rdx, [0x00009d19]                   ; "%s"
0x00001feb      4889c1         mov rcx, rax
0x00001fee      31ff           xor edi, edi
0x00001ff0      31c0           xor eax, eax
0x00001ff2      e8d9f9ffff     call sym.imp.error
0x00001ff7      e9f4feffff     jmp 0x1ef0
0x00001ffc      4c89f6         mov rsi, r14
0x00001fff      4889ef         mov rdi, rbp
0x00002002      e8c93b0000     call sym.cycle_warning_required
0x00002007      84c0           test al, al
0x00002009      0f8560050000   jne 0x256f
0x0000200f      488b05eac020.  mov rax, qword [obj.root_dev_ino]       ; [0x20e100:8]=0
0x00002016      4885c0         test rax, rax
0x00002019      7410           je 0x202b
0x0000201b      488b08         mov rcx, qword [rax]
0x0000201e      49398e800000.  cmp qword [r14 + 0x80], rcx
0x00002025      0f845f040000   je 0x248a
0x0000202b      418bbe900000.  mov edi, dword [r14 + 0x90]
0x00002032      498b4630       mov rax, qword [r14 + 0x30]
0x00002036      31f6           xor esi, esi
0x00002038      8b15cec02000   mov edx, dword [obj.umask_value]        ; [0x20e10c:4]=0
0x0000203e      488b0dcbc020.  mov rcx, qword [obj.change]             ; [0x20e110:8]=0
0x00002045      4189ff         mov r15d, edi
0x00002048      4889442428     mov qword [rsp + 0x28], rax
0x0000204d      897c2404       mov dword [rsp + 4], edi
0x00002051      4181e700f000.  and r15d, 0xf000
0x00002058      4181ff004000.  cmp r15d, 0x4000                        ; "L)\xf2L\x89\xee\xe8\x15@"
0x0000205f      400f94c6       sete sil
0x00002063      4531c0         xor r8d, r8d
0x00002066      e845130000     call sym.mode_adjust
0x0000206b      4181ff00a000.  cmp r15d, 0xa000
0x00002072      89c2           mov edx, eax
0x00002074      890424         mov dword [rsp], eax
0x00002077      0f8445010000   je 0x21c2
0x0000207d      8b7d2c         mov edi, dword [rbp + 0x2c]
0x00002080      488b742428     mov rsi, qword [rsp + 0x28]
0x00002085      31c9           xor ecx, ecx
0x00002087      e8b4f8ffff     call sym.imp.fchmodat
0x0000208c      85c0           test eax, eax
0x0000208e      0f8488010000   je 0x221c
0x00002094      803d6ec02000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x0000209b      0f854ffeffff   jne 0x1ef0
0x000020a1      4c89ee         mov rsi, r13
0x000020a4      bf04000000     mov edi, 4
0x000020a9      e8b22e0000     call sym.quotearg_style
0x000020ae      488d35a17c00.  lea rsi, str.changing_permissions_of__s ; 0x9d56 ; "changing permissions of %s"
0x000020b5      31ff           xor edi, edi
0x000020b7      ba05000000     mov edx, 5
0x000020bc      4989c7         mov r15, rax
0x000020bf      e8ccf6ffff     call sym.imp.dcgettext
0x000020c4      4889c2         mov rdx, rax
0x000020c7      488b442420     mov rax, qword [rsp + 0x20]
0x000020cc      4c89f9         mov rcx, r15
0x000020cf      31ff           xor edi, edi
0x000020d1      8b30           mov esi, dword [rax]
0x000020d3      31c0           xor eax, eax
0x000020d5      e8f6f8ffff     call sym.imp.error
0x000020da      e911feffff     jmp 0x1ef0
0x000020df      83f83d         cmp eax, 0x3d
0x000020e2      0f8490fbffff   je 0x1c78
0x000020e8      e9bc050000     jmp 0x26a9
0x000020ed      4d85ed         test r13, r13
0x000020f0      486305b9bf20.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x000020f7      0f8463050000   je 0x2660
0x000020fd      39c5           cmp ebp, eax
0x000020ff      0f8eb9060000   jle 0x27be
0x00002105      4c89ef         mov rdi, r13
0x00002108      e8630e0000     call sym.mode_compile
0x0000210d      4885c0         test rax, rax
0x00002110      488905f9bf20.  mov qword [obj.change], rax             ; [0x20e110:8]=0
0x00002117      0f8432060000   je 0x274f
0x0000211d      31ff           xor edi, edi
0x0000211f      e8acf7ffff     call sym.imp.umask
0x00002124      8905e2bf2000   mov dword [obj.umask_value], eax        ; [0x20e10c:4]=0
0x0000212a      e966fcffff     jmp 0x1d95
0x0000212f      488b742408     mov rsi, qword [rsp + 8]
0x00002134      8b3c24         mov edi, dword [rsp]
0x00002137      e8940c0000     call sym.strmode
0x0000213c      488b742410     mov rsi, qword [rsp + 0x10]
0x00002141      8b7c2404       mov edi, dword [rsp + 4]
0x00002145      c68424da0000.  mov byte [rsp + 0xda], 0
0x0000214d      e87e0c0000     call sym.strmode
0x00002152      488d35b78300.  lea rsi, str.failed_to_change_mode_of__s_from__04lo___s__to__04lo___s ; 0xa510 ; "failed to change mode of %s from %04lo (%s) to %04lo (%s)\n"
0x00002159      ba05000000     mov edx, 5
0x0000215e      31ff           xor edi, edi
0x00002160      c68424e60000.  mov byte [rsp + 0xe6], 0
0x00002168      e823f6ffff     call sym.imp.dcgettext
0x0000216d      4c89ee         mov rsi, r13
0x00002170      bf04000000     mov edi, 4
0x00002175      4989c7         mov r15, rax
0x00002178      e8e32d0000     call sym.quotearg_style
0x0000217d      8b4c2404       mov ecx, dword [rsp + 4]
0x00002181      4883ec08       sub rsp, 8
0x00002185      4c89fe         mov rsi, r15
0x00002188      488b542410     mov rdx, qword [rsp + 0x10]
0x0000218d      bf01000000     mov edi, 1
0x00002192      4531ff         xor r15d, r15d
0x00002195      81e1ff0f0000   and ecx, 0xfff
0x0000219b      4883c201       add rdx, 1
0x0000219f      52             push rdx
0x000021a0      448b4c2410     mov r9d, dword [rsp + 0x10]
0x000021a5      4889c2         mov rdx, rax
0x000021a8      4c8b442428     mov r8, qword [rsp + 0x28]
0x000021ad      31c0           xor eax, eax
0x000021af      4181e1ff0f00.  and r9d, 0xfff
0x000021b6      e8f5f7ffff     call sym.imp.__printf_chk
0x000021bb      58             pop rax
0x000021bc      5a             pop rdx
0x000021bd      e947fdffff     jmp 0x1f09
0x000021c2      8b0548be2000   mov eax, dword [obj.verbosity]          ; [0x20e010:4]=2
0x000021c8      83f802         cmp eax, 2
0x000021cb      7444           je 0x2211
0x000021cd      85c0           test eax, eax
0x000021cf      7540           jne 0x2211
0x000021d1      4c89ee         mov rsi, r13
0x000021d4      bf04000000     mov edi, 4
0x000021d9      41bf01000000   mov r15d, 1
0x000021df      e87c2d0000     call sym.quotearg_style
0x000021e4      488d35ed8200.  lea rsi, str.neither_symbolic_link__s_nor_referent_has_been_changed ; 0xa4d8 ; "neither symbolic link %s nor referent has been changed\n"
0x000021eb      4989c5         mov r13, rax
0x000021ee      ba05000000     mov edx, 5
0x000021f3      31ff           xor edi, edi
0x000021f5      e896f5ffff     call sym.imp.dcgettext
0x000021fa      4c89ea         mov rdx, r13
0x000021fd      4889c6         mov rsi, rax
0x00002200      bf01000000     mov edi, 1
0x00002205      31c0           xor eax, eax
0x00002207      e8a4f7ffff     call sym.imp.__printf_chk
0x0000220c      e9f8fcffff     jmp 0x1f09
0x00002211      41bf01000000   mov r15d, 1
0x00002217      e9edfcffff     jmp 0x1f09
0x0000221c      833dedbd2000.  cmp dword [obj.verbosity], 2            ; [0x20e010:4]=2
0x00002223      0f84a8000000   je 0x22d1
0x00002229      8b0c24         mov ecx, dword [rsp]
0x0000222c      89c8           mov eax, ecx
0x0000222e      80e50e         and ch, 0xe
0x00002231      0f855a010000   jne 0x2391
0x00002237      33442404       xor eax, dword [rsp + 4]
0x0000223b      a9ff0f0000     test eax, 0xfff
0x00002240      0f84af010000   je 0x23f5
0x00002246      488b742408     mov rsi, qword [rsp + 8]
0x0000224b      8b3c24         mov edi, dword [rsp]
0x0000224e      e87d0b0000     call sym.strmode
0x00002253      488b742410     mov rsi, qword [rsp + 0x10]
0x00002258      8b7c2404       mov edi, dword [rsp + 4]
0x0000225c      c68424da0000.  mov byte [rsp + 0xda], 0
0x00002264      e8670b0000     call sym.strmode
0x00002269      488d35308200.  lea rsi, str.mode_of__s_changed_from__04lo___s__to__04lo___s ; 0xa4a0 ; "mode of %s changed from %04lo (%s) to %04lo (%s)\n"
0x00002270      ba05000000     mov edx, 5
0x00002275      31ff           xor edi, edi
0x00002277      c68424e60000.  mov byte [rsp + 0xe6], 0
0x0000227f      e80cf5ffff     call sym.imp.dcgettext
0x00002284      4c89ee         mov rsi, r13
0x00002287      bf04000000     mov edi, 4
0x0000228c      4989c7         mov r15, rax
0x0000228f      e8cc2c0000     call sym.quotearg_style
0x00002294      8b4c2404       mov ecx, dword [rsp + 4]
0x00002298      4883ec08       sub rsp, 8
0x0000229c      bf01000000     mov edi, 1
0x000022a1      488b742410     mov rsi, qword [rsp + 0x10]
0x000022a6      81e1ff0f0000   and ecx, 0xfff
0x000022ac      488d5601       lea rdx, [rsi + 1]
0x000022b0      4c89fe         mov rsi, r15
0x000022b3      52             push rdx
0x000022b4      448b4c2410     mov r9d, dword [rsp + 0x10]
0x000022b9      4889c2         mov rdx, rax
0x000022bc      4c8b442428     mov r8, qword [rsp + 0x28]
0x000022c1      31c0           xor eax, eax
0x000022c3      4181e1ff0f00.  and r9d, 0xfff
0x000022ca      e8e1f6ffff     call sym.imp.__printf_chk
0x000022cf      59             pop rcx
0x000022d0      5e             pop rsi
0x000022d1      440fb63d2fbe.  movzx r15d, byte [obj.diagnose_surprises] ; [0x20e108:1]=0
0x000022d9      4584ff         test r15b, r15b
0x000022dc      0f842fffffff   je 0x2211
0x000022e2      8b7c2404       mov edi, dword [rsp + 4]
0x000022e6      488b0d23be20.  mov rcx, qword [obj.change]             ; [0x20e110:8]=0
0x000022ed      31f6           xor esi, esi
0x000022ef      89f8           mov eax, edi
0x000022f1      2500f00000     and eax, 0xf000
0x000022f6      3d00400000     cmp eax, 0x4000                         ; "L)\xf2L\x89\xee\xe8\x15@"
0x000022fb      400f94c6       sete sil
0x000022ff      31d2           xor edx, edx
0x00002301      4531c0         xor r8d, r8d
0x00002304      e8a7100000     call sym.mode_adjust
0x00002309      89c2           mov edx, eax
0x0000230b      f7d2           not edx
0x0000230d      851424         test dword [rsp], edx
0x00002310      0f84f3fbffff   je 0x1f09
0x00002316      4c8b7c2408     mov r15, qword [rsp + 8]
0x0000231b      8b3c24         mov edi, dword [rsp]
0x0000231e      89442428       mov dword [rsp + 0x28], eax
0x00002322      4c89fe         mov rsi, r15
0x00002325      e8a60a0000     call sym.strmode
0x0000232a      8b442428       mov eax, dword [rsp + 0x28]
0x0000232e      488b742410     mov rsi, qword [rsp + 0x10]
0x00002333      89c7           mov edi, eax
0x00002335      e8960a0000     call sym.strmode
0x0000233a      4c89ea         mov rdx, r13
0x0000233d      be03000000     mov esi, 3
0x00002342      31ff           xor edi, edi
0x00002344      c68424e60000.  mov byte [rsp + 0xe6], 0
0x0000234c      c68424da0000.  mov byte [rsp + 0xda], 0
0x00002354      e8072d0000     call sym.quotearg_n_style_colon
0x00002359      488d35188100.  lea rsi, str.s:_new_permissions_are__s__not__s ; 0xa478 ; "%s: new permissions are %s, not %s"
0x00002360      ba05000000     mov edx, 5
0x00002365      31ff           xor edi, edi
0x00002367      4989c5         mov r13, rax
0x0000236a      e821f4ffff     call sym.imp.dcgettext
0x0000236f      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00002374      4d8d4701       lea r8, [r15 + 1]
0x00002378      4889c2         mov rdx, rax
0x0000237b      4c89e9         mov rcx, r13
0x0000237e      31f6           xor esi, esi
0x00002380      31ff           xor edi, edi
0x00002382      31c0           xor eax, eax
0x00002384      4531ff         xor r15d, r15d
0x00002387      e844f6ffff     call sym.imp.error
0x0000238c      e978fbffff     jmp 0x1f09
0x00002391      8b752c         mov esi, dword [rbp + 0x2c]
0x00002394      488b542428     mov rdx, qword [rsp + 0x28]
0x00002399      488d4c2440     lea rcx, [rsp + 0x40]
0x0000239e      4531c0         xor r8d, r8d
0x000023a1      bf01000000     mov edi, 1
0x000023a6      e865f4ffff     call sym.imp.__fxstatat
0x000023ab      85c0           test eax, eax
0x000023ad      0f84fa010000   je 0x25ad
0x000023b3      803d4fbd2000.  cmp byte [obj.force_silent], 0          ; [0x20e109:1]=0
0x000023ba      7539           jne 0x23f5
0x000023bc      4c89ee         mov rsi, r13
0x000023bf      bf04000000     mov edi, 4
0x000023c4      e8972b0000     call sym.quotearg_style
0x000023c9      488d35a17900.  lea rsi, str.getting_new_attributes_of__s ; 0x9d71 ; "getting new attributes of %s"
0x000023d0      ba05000000     mov edx, 5
0x000023d5      31ff           xor edi, edi
0x000023d7      4989c7         mov r15, rax
0x000023da      e8b1f3ffff     call sym.imp.dcgettext
0x000023df      4889c2         mov rdx, rax
0x000023e2      488b442420     mov rax, qword [rsp + 0x20]
0x000023e7      4c89f9         mov rcx, r15
0x000023ea      31ff           xor edi, edi
0x000023ec      8b30           mov esi, dword [rax]
0x000023ee      31c0           xor eax, eax
0x000023f0      e8dbf5ffff     call sym.imp.error
0x000023f5      833d14bc2000.  cmp dword [obj.verbosity], 0            ; [0x20e010:4]=2
0x000023fc      0f85cffeffff   jne 0x22d1
0x00002402      488b742408     mov rsi, qword [rsp + 8]
0x00002407      8b3c24         mov edi, dword [rsp]
0x0000240a      e8c1090000     call sym.strmode
0x0000240f      488b742410     mov rsi, qword [rsp + 0x10]
0x00002414      8b7c2404       mov edi, dword [rsp + 4]
0x00002418      c68424da0000.  mov byte [rsp + 0xda], 0
0x00002420      e8ab090000     call sym.strmode
0x00002425      488d35248100.  lea rsi, str.mode_of__s_retained_as__04lo___s ; 0xa550 ; "mode of %s retained as %04lo (%s)\n"
0x0000242c      ba05000000     mov edx, 5
0x00002431      31ff           xor edi, edi
0x00002433      c68424e60000.  mov byte [rsp + 0xe6], 0
0x0000243b      e850f3ffff     call sym.imp.dcgettext
0x00002440      4c89ee         mov rsi, r13
0x00002443      bf04000000     mov edi, 4
0x00002448      4989c7         mov r15, rax
0x0000244b      e8102b0000     call sym.quotearg_style
0x00002450      488b542408     mov rdx, qword [rsp + 8]
0x00002455      8b0c24         mov ecx, dword [rsp]
0x00002458      4c89fe         mov rsi, r15
0x0000245b      bf01000000     mov edi, 1
0x00002460      4c8d4201       lea r8, [rdx + 1]
0x00002464      81e1ff0f0000   and ecx, 0xfff
0x0000246a      4889c2         mov rdx, rax
0x0000246d      31c0           xor eax, eax
0x0000246f      e83cf5ffff     call sym.imp.__printf_chk
0x00002474      e958feffff     jmp 0x22d1
0x00002479      83e82b         sub eax, 0x2b
0x0000247c      83f801         cmp eax, 1
0x0000247f      0f86f3f7ffff   jbe 0x1c78
0x00002485      e91f020000     jmp 0x26a9
0x0000248a      488b4008       mov rax, qword [rax + 8]
0x0000248e      49394678       cmp qword [r14 + 0x78], rax
0x00002492      0f8593fbffff   jne 0x202b
0x00002498      488d35e78100.  lea rsi, [0x0000a686]                   ; "/"
0x0000249f      4c89ef         mov rdi, r13
0x000024a2      e809f4ffff     call sym.imp.strcmp
0x000024a7      85c0           test eax, eax
0x000024a9      0f8504020000   jne 0x26b3
0x000024af      4c89ee         mov rsi, r13
0x000024b2      bf04000000     mov edi, 4
0x000024b7      e8a42a0000     call sym.quotearg_style
0x000024bc      488d350d7f00.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xa3d0 ; "it is dangerous to operate recursively on %s"
0x000024c3      4989c5         mov r13, rax
0x000024c6      ba05000000     mov edx, 5
0x000024cb      31ff           xor edi, edi
0x000024cd      e8bef2ffff     call sym.imp.dcgettext
0x000024d2      4c89e9         mov rcx, r13
0x000024d5      4889c2         mov rdx, rax
0x000024d8      31f6           xor esi, esi
0x000024da      31ff           xor edi, edi
0x000024dc      31c0           xor eax, eax
0x000024de      e8edf4ffff     call sym.imp.error
0x000024e3      488d35567f00.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xa440 ; "use --no-preserve-root to override this failsafe"
0x000024ea      ba05000000     mov edx, 5
0x000024ef      31ff           xor edi, edi
0x000024f1      4531ff         xor r15d, r15d
0x000024f4      e897f2ffff     call sym.imp.dcgettext
0x000024f9      31f6           xor esi, esi
0x000024fb      4889c2         mov rdx, rax
0x000024fe      31ff           xor edi, edi
0x00002500      31c0           xor eax, eax
0x00002502      e8c9f4ffff     call sym.imp.error
0x00002507      ba04000000     mov edx, 4
0x0000250c      4c89f6         mov rsi, r14
0x0000250f      4889ef         mov rdi, rbp
0x00002512      e889590000     call sym.rpl_fts_set
0x00002517      4889ef         mov rdi, rbp
0x0000251a      e801520000     call sym.rpl_fts_read
0x0000251f      e924f9ffff     jmp 0x1e48
0x00002524      83f867         cmp eax, 0x67
0x00002527      0f844bf7ffff   je 0x1c78
0x0000252d      e977010000     jmp 0x26a9
0x00002532      83f878         cmp eax, 0x78
0x00002535      0f8e3df7ffff   jle 0x1c78
0x0000253b      e969010000     jmp 0x26a9
0x00002540      83f872         cmp eax, 0x72
0x00002543      0f8d2ff7ffff   jge 0x1c78
0x00002549      e95b010000     jmp 0x26a9
0x0000254e      4c89ee         mov rsi, r13
0x00002551      bf04000000     mov edi, 4
0x00002556      e8052a0000     call sym.quotearg_style
0x0000255b      ba05000000     mov edx, 5
0x00002560      4989c7         mov r15, rax
0x00002563      488d35d37700.  lea rsi, str.cannot_read_directory__s   ; 0x9d3d ; "cannot read directory %s"
0x0000256a      e936faffff     jmp 0x1fa5
0x0000256f      4c89ea         mov rdx, r13
0x00002572      be03000000     mov esi, 3
0x00002577      31ff           xor edi, edi
0x00002579      e8e22a0000     call sym.quotearg_n_style_colon
0x0000257e      488d358b7d00.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; 0xa310 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x00002585      4989c5         mov r13, rax
0x00002588      ba05000000     mov edx, 5
0x0000258d      31ff           xor edi, edi
0x0000258f      4531ff         xor r15d, r15d
0x00002592      e8f9f1ffff     call sym.imp.dcgettext
0x00002597      4c89e9         mov rcx, r13
0x0000259a      4889c2         mov rdx, rax
0x0000259d      31f6           xor esi, esi
0x0000259f      31ff           xor edi, edi
0x000025a1      31c0           xor eax, eax
0x000025a3      e828f4ffff     call sym.imp.error
0x000025a8      e99bf8ffff     jmp 0x1e48
0x000025ad      8b442458       mov eax, dword [rsp + 0x58]
0x000025b1      e981fcffff     jmp 0x2237
0x000025b6      488d355f7700.  lea rsi, str.fts_read_failed            ; 0x9d1c ; "fts_read failed"
0x000025bd      31ff           xor edi, edi
0x000025bf      ba05000000     mov edx, 5
0x000025c4      e8c7f1ffff     call sym.imp.dcgettext
0x000025c9      4889c2         mov rdx, rax
0x000025cc      488b442420     mov rax, qword [rsp + 0x20]
0x000025d1      31ff           xor edi, edi
0x000025d3      8b30           mov esi, dword [rax]
0x000025d5      31c0           xor eax, eax
0x000025d7      e8f4f3ffff     call sym.imp.error
0x000025dc      e995f8ffff     jmp 0x1e76
0x000025e1      488d3d08bb20.  lea rdi, obj.dev_ino_buf.7087           ; 0x20e0f0
0x000025e8      e8632c0000     call sym.get_root_dev_ino
0x000025ed      4885c0         test rax, rax
0x000025f0      48890509bb20.  mov qword [obj.root_dev_ino], rax       ; [0x20e100:8]=0
0x000025f7      0f85bdf7ffff   jne 0x1dba
0x000025fd      488d35828000.  lea rsi, [0x0000a686]                   ; "/"
0x00002604      bf04000000     mov edi, 4
0x00002609      e852290000     call sym.quotearg_style
0x0000260e      488d35b37c00.  lea rsi, str.failed_to_get_attributes_of__s ; 0xa2c8 ; "failed to get attributes of %s"
0x00002615      ba05000000     mov edx, 5
0x0000261a      31ff           xor edi, edi
0x0000261c      4889c3         mov rbx, rax
0x0000261f      e86cf1ffff     call sym.imp.dcgettext
0x00002624      4889c2         mov rdx, rax
0x00002627      488b442420     mov rax, qword [rsp + 0x20]
0x0000262c      4889d9         mov rcx, rbx
0x0000262f      bf01000000     mov edi, 1
0x00002634      8b30           mov esi, dword [rax]
0x00002636      31c0           xor eax, eax
0x00002638      e893f3ffff     call sym.imp.error
0x0000263d      49c746200100.  mov qword [r14 + 0x20], 1
0x00002645      ba01000000     mov edx, 1
0x0000264a      4c89f6         mov rsi, r14
0x0000264d      4889ef         mov rdi, rbp
0x00002650      41bf01000000   mov r15d, 1
0x00002656      e845580000     call sym.rpl_fts_set
0x0000265b      e9e8f7ffff     jmp 0x1e48
0x00002660      8d5001         lea edx, [rax + 1]
0x00002663      4c8b2cc3       mov r13, qword [rbx + rax*8]
0x00002667      39ea           cmp edx, ebp
0x00002669      891541ba2000   mov dword [obj.optind], edx             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20e0b0:4]=0
0x0000266f      0f8c90faffff   jl 0x2105
0x00002675      4d85ed         test r13, r13
0x00002678      740e           je 0x2688
0x0000267a      4863d2         movsxd rdx, edx
0x0000267d      4c396cd3f8     cmp qword [rbx + rdx*8 - 8], r13
0x00002682      0f8400010000   je 0x2788
0x00002688      488d35537600.  lea rsi, str.missing_operand            ; 0x9ce2 ; "missing operand"
0x0000268f      ba05000000     mov edx, 5
0x00002694      31ff           xor edi, edi
0x00002696      e8f5f0ffff     call sym.imp.dcgettext
0x0000269b      31f6           xor esi, esi
0x0000269d      4889c2         mov rdx, rax
0x000026a0      31ff           xor edi, edi
0x000026a2      31c0           xor eax, eax
0x000026a4      e827f3ffff     call sym.imp.error
0x000026a9      bf01000000     mov edi, 1
0x000026ae      e83d020000     call sym.usage
0x000026b3      488d15cc7f00.  lea rdx, [0x0000a686]                   ; "/"
0x000026ba      be04000000     mov esi, 4
0x000026bf      bf01000000     mov edi, 1
0x000026c4      e877270000     call sym.quotearg_n_style
0x000026c9      4c89ea         mov rdx, r13
0x000026cc      31ff           xor edi, edi
0x000026ce      be04000000     mov esi, 4
0x000026d3      4989c7         mov r15, rax
0x000026d6      e865270000     call sym.quotearg_n_style
0x000026db      488d351e7d00.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xa400 ; "it is dangerous to operate recursively on %s (same as %s)"
0x000026e2      4989c5         mov r13, rax
0x000026e5      31ff           xor edi, edi
0x000026e7      ba05000000     mov edx, 5
0x000026ec      e89ff0ffff     call sym.imp.dcgettext
0x000026f1      4d89f8         mov r8, r15
0x000026f4      4889c2         mov rdx, rax
0x000026f7      4c89e9         mov rcx, r13
0x000026fa      31f6           xor esi, esi
0x000026fc      31ff           xor edi, edi
0x000026fe      31c0           xor eax, eax
0x00002700      e8cbf2ffff     call sym.imp.error
0x00002705      e9d9fdffff     jmp 0x24e3
0x0000270a      31ff           xor edi, edi
0x0000270c      e8df010000     call sym.usage
0x00002711      e8caf0ffff     call sym.imp.__stack_chk_fail
0x00002716      4c89fe         mov rsi, r15
0x00002719      bf04000000     mov edi, 4
0x0000271e      e83d280000     call sym.quotearg_style
0x00002723      488d359e7b00.  lea rsi, str.failed_to_get_attributes_of__s ; 0xa2c8 ; "failed to get attributes of %s"
0x0000272a      ba05000000     mov edx, 5
0x0000272f      31ff           xor edi, edi
0x00002731      4889c3         mov rbx, rax
0x00002734      e857f0ffff     call sym.imp.dcgettext
0x00002739      418b3424       mov esi, dword [r12]
0x0000273d      4889c2         mov rdx, rax
0x00002740      4889d9         mov rcx, rbx
0x00002743      bf01000000     mov edi, 1
0x00002748      31c0           xor eax, eax
0x0000274a      e881f2ffff     call sym.imp.error
0x0000274f      4c89ef         mov rdi, r13
0x00002752      e8d92a0000     call sym.quote
0x00002757      488d35ad7500.  lea rsi, str.invalid_mode:__s           ; 0x9d0b ; "invalid mode: %s"
0x0000275e      4889c3         mov rbx, rax
0x00002761      ba05000000     mov edx, 5
0x00002766      31ff           xor edi, edi
0x00002768      e823f0ffff     call sym.imp.dcgettext
0x0000276d      31ff           xor edi, edi
0x0000276f      4889c2         mov rdx, rax
0x00002772      4889d9         mov rcx, rbx
0x00002775      31f6           xor esi, esi
0x00002777      31c0           xor eax, eax
0x00002779      e852f2ffff     call sym.imp.error
0x0000277e      bf01000000     mov edi, 1
0x00002783      e868010000     call sym.usage
0x00002788      488b7cebf8     mov rdi, qword [rbx + rbp*8 - 8]
0x0000278d      e89e2a0000     call sym.quote
0x00002792      488d35597500.  lea rsi, str.missing_operand_after__s   ; 0x9cf2 ; "missing operand after %s"
0x00002799      4889c3         mov rbx, rax
0x0000279c      31ff           xor edi, edi
0x0000279e      ba05000000     mov edx, 5
0x000027a3      e8e8efffff     call sym.imp.dcgettext
0x000027a8      4889d9         mov rcx, rbx
0x000027ab      4889c2         mov rdx, rax
0x000027ae      31f6           xor esi, esi
0x000027b0      31ff           xor edi, edi
0x000027b2      31c0           xor eax, eax
0x000027b4      e817f2ffff     call sym.imp.error
0x000027b9      e9ebfeffff     jmp 0x26a9
0x000027be      89c2           mov edx, eax
0x000027c0      e9b5feffff     jmp 0x267a
0x000027c5      ba05000000     mov edx, 5
0x000027ca      488d35c77a00.  lea rsi, str.cannot_combine_mode_and___reference_options ; 0xa298 ; "cannot combine mode and --reference options"
0x000027d1      e9befeffff     jmp 0x2694
0x000027d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000027e0      31ed           xor ebp, ebp
0x000027e2      4989d1         mov r9, rdx
0x000027e5      5e             pop rsi
0x000027e6      4889e2         mov rdx, rsp
0x000027e9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000027ed      50             push rax
0x000027ee      54             push rsp
0x000027ef      4c8d05ca7300.  lea r8, sym.__libc_csu_fini             ; 0x9bc0
0x000027f6      488d0d537300.  lea rcx, sym.__libc_csu_init            ; 0x9b50 ; "AWAVI\x89\xd7AUATL\x8d%\xce> "
0x000027fd      488d3d9cf2ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1aa0 ; "AWAVE1\xffAUATE1\xf6USHc\xefH\x89\xf3E1\xe4E1\xedH\x81\xec\xf8"
0x00002804      ff15d6b72000   call qword [reloc.__libc_start_main]    ; [0x20dfe0:8]=0
0x0000280a      f4             hlt
0x0000280b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002810      488d3d89b820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002817      55             push rbp
0x00002818      488d0581b820.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x0000281f      4839f8         cmp rax, rdi
0x00002822      4889e5         mov rbp, rsp
0x00002825      7419           je 0x2840
0x00002827      488b05aab720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20dfd8:8]=0
0x0000282e      4885c0         test rax, rax
0x00002831      740d           je 0x2840
0x00002833      5d             pop rbp
0x00002834      ffe0           jmp rax
0x00002836      662e0f1f8400.  nop word cs:[rax + rax]
0x00002840      5d             pop rbp
0x00002841      c3             ret
0x00002842      0f1f4000       nop dword [rax]
0x00002846      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002850      488d3d49b820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x00002857      488d3542b820.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20e0a0
0x0000285e      55             push rbp
0x0000285f      4829fe         sub rsi, rdi
0x00002862      4889e5         mov rbp, rsp
0x00002865      48c1fe03       sar rsi, 3
0x00002869      4889f0         mov rax, rsi
0x0000286c      48c1e83f       shr rax, 0x3f
0x00002870      4801c6         add rsi, rax
0x00002873      48d1fe         sar rsi, 1
0x00002876      7418           je 0x2890
0x00002878      488b0571b720.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20dff0:8]=0
0x0000287f      4885c0         test rax, rax
0x00002882      740c           je 0x2890
0x00002884      5d             pop rbp
0x00002885      ffe0           jmp rax
0x00002887      660f1f840000.  nop word [rax + rax]
0x00002890      5d             pop rbp
0x00002891      c3             ret
0x00002892      0f1f4000       nop dword [rax]
0x00002896      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000028a0      803d41b82000.  cmp byte [obj.completed.7697], 0        ; [0x20e0e8:1]=0
0x000028a7      752f           jne 0x28d8
0x000028a9      48833d47b720.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20dff8:8]=0
0x000028b1      55             push rbp
0x000028b2      4889e5         mov rbp, rsp
0x000028b5      740c           je 0x28c3
0x000028b7      488b3d4ab720.  mov rdi, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x000028be      e8d5f1ffff     call 0x1a98
0x000028c3      e848ffffff     call sym.deregister_tm_clones
0x000028c8      c60519b82000.  mov byte [obj.completed.7697], 1        ; [0x20e0e8:1]=0
0x000028cf      5d             pop rbp
0x000028d0      c3             ret
0x000028d1      0f1f80000000.  nop dword [rax]
0x000028d8      f3c3           ret
0x000028da      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000028e0      55             push rbp
0x000028e1      4889e5         mov rbp, rsp
0x000028e4      5d             pop rbp
0x000028e5      e966ffffff     jmp sym.register_tm_clones
0x000028ea      660f1f440000   nop word [rax + rax]
;-- usage:
0x000028f0      4155           push r13                                ; .//src:369
0x000028f2      4154           push r12
0x000028f4      ba05000000     mov edx, 5                              ; .//src:371
0x000028f9      55             push rbp                                ; .//src:369
0x000028fa      53             push rbx
0x000028fb      89fd           mov ebp, edi
0x000028fd      4881ec880000.  sub rsp, 0x88
0x00002904      488b1d1db820.  mov rbx, qword [obj.program_name]       ; [0x20e128:8]=0
0x0000290b      64488b042528.  mov rax, qword fs:[0x28]
0x00002914      4889442478     mov qword [rsp + 0x78], rax
0x00002919      31c0           xor eax, eax
0x0000291b      85ff           test edi, edi                           ; .//src:370
0x0000291d      742e           je 0x294d
0x0000291f      488d35ca7400.  lea rsi, str.Try___s___help__for_more_information. ; .//src:371 ; 0x9df0 ; "Try '%s --help' for more information.\n"
0x00002926      31ff           xor edi, edi
0x00002928      e863eeffff     call sym.imp.dcgettext
0x0000292d      488b3dacb720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/src/mod.c:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002934      4889c2         mov rdx, rax
0x00002937      4889d9         mov rcx, rbx
0x0000293a      be01000000     mov esi, 1
0x0000293f      31c0           xor eax, eax
0x00002941      e80af1ffff     call sym.imp.__fprintf_chk
0x00002946      89ef           mov edi, ebp                            ; .//src:408
0x00002948      e8e3f0ffff     call sym.imp.exit
0x0000294d      488d35c47400.  lea rsi, str.Usage:__s__OPTION_..._MODE__MODE_..._FILE...____or:___s__OPTION_..._OCTAL_MODE_FILE...____or:___s__OPTION_...___reference_RFILE_FILE... ; .//src:374 ; 0x9e18 ; "Usage: %s [OPTION]... MODE[,MODE]... FILE...\n  or:  %s [OPTION]... OCTAL-MODE FILE...\n  or:  %s [OPTION]... --reference=RFILE FILE...\n"
0x00002954      31ff           xor edi, edi
0x00002956      e835eeffff     call sym.imp.dcgettext
0x0000295b      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/mod.c:104
0x0000295e      4989d8         mov r8, rbx
0x00002961      4889da         mov rdx, rbx
0x00002964      4889c6         mov rsi, rax
0x00002967      bf01000000     mov edi, 1
0x0000296c      31c0           xor eax, eax
0x0000296e      e83df0ffff     call sym.imp.__printf_chk
0x00002973      488b1d2eb720.  mov rbx, qword [obj.stdout]             ; .//src:380 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000297a      488d351f7500.  lea rsi, str.Change_the_mode_of_each_FILE_to_MODE.__With___reference__change_the_mode_of_each_FILE_to_that_of_RFILE. ; 0x9ea0 ; "Change the mode of each FILE to MODE.\nWith --reference, change the mode of each FILE to that of RFILE.\n\n"
0x00002981      ba05000000     mov edx, 5
0x00002986      31ff           xor edi, edi
0x00002988      e803eeffff     call sym.imp.dcgettext
0x0000298d      4889de         mov rsi, rbx
0x00002990      4889c7         mov rdi, rax
0x00002993      e8f8eeffff     call sym.imp.fputs_unlocked
0x00002998      488b1d09b720.  mov rbx, qword [obj.stdout]             ; .//src:385 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x0000299f      488d356a7500.  lea rsi, str.c____changes__________like_verbose_but_report_only_when_a_change_is_made_____f____silent____quiet__suppress_most_error_messages_____v____verbose__________output_a_diagnostic_for_every_file_processed ; 0x9f10 ; "  -c, --changes          like verbose but report only when a change is made\n  -f, --silent, --quiet  suppress most error messages\n  -v, --verbose          output a diagnostic for every file processed\n"
0x000029a6      ba05000000     mov edx, 5
0x000029ab      31ff           xor edi, edi
0x000029ad      e8deedffff     call sym.imp.dcgettext
0x000029b2      4889de         mov rsi, rbx
0x000029b5      4889c7         mov rdi, rax
0x000029b8      e8d3eeffff     call sym.imp.fputs_unlocked
0x000029bd      488b1de4b620.  mov rbx, qword [obj.stdout]             ; .//src:390 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000029c4      488d35157600.  lea rsi, str.no_preserve_root__do_not_treat_____specially__the_default___________preserve_root____fail_to_operate_recursively_on ; 0x9fe0 ; "      --no-preserve-root  do not treat '/' specially (the default)\n      --preserve-root    fail to operate recursively on '/'\n"
0x000029cb      ba05000000     mov edx, 5
0x000029d0      31ff           xor edi, edi
0x000029d2      e8b9edffff     call sym.imp.dcgettext
0x000029d7      4889de         mov rsi, rbx
0x000029da      4889c7         mov rdi, rax
0x000029dd      e8aeeeffff     call sym.imp.fputs_unlocked
0x000029e2      488b1dbfb620.  mov rbx, qword [obj.stdout]             ; .//src:394 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000029e9      488d35707600.  lea rsi, str.reference_RFILE__use_RFILE_s_mode_instead_of_MODE_values ; 0xa060 ; "      --reference=RFILE  use RFILE's mode instead of MODE values\n"
0x000029f0      ba05000000     mov edx, 5
0x000029f5      31ff           xor edi, edi
0x000029f7      e894edffff     call sym.imp.dcgettext
0x000029fc      4889de         mov rsi, rbx
0x000029ff      4889c7         mov rdi, rax
0x00002a02      e889eeffff     call sym.imp.fputs_unlocked
0x00002a07      488b1d9ab620.  mov rbx, qword [obj.stdout]             ; .//src:397 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002a0e      488d35937600.  lea rsi, str.R____recursive________change_files_and_directories_recursively ; 0xa0a8 ; "  -R, --recursive        change files and directories recursively\n"
0x00002a15      ba05000000     mov edx, 5
0x00002a1a      31ff           xor edi, edi
0x00002a1c      e86fedffff     call sym.imp.dcgettext
0x00002a21      4889de         mov rsi, rbx
0x00002a24      4889c7         mov rdi, rax
0x00002a27      e864eeffff     call sym.imp.fputs_unlocked
0x00002a2c      488b1d75b620.  mov rbx, qword [obj.stdout]             ; .//src:400 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002a33      488d35b67600.  lea rsi, str.help_____display_this_help_and_exit ; 0xa0f0 ; "      --help     display this help and exit\n"
0x00002a3a      ba05000000     mov edx, 5
0x00002a3f      31ff           xor edi, edi
0x00002a41      e84aedffff     call sym.imp.dcgettext
0x00002a46      4889de         mov rsi, rbx
0x00002a49      4889c7         mov rdi, rax
0x00002a4c      e83feeffff     call sym.imp.fputs_unlocked
0x00002a51      488b1d50b620.  mov rbx, qword [obj.stdout]             ; .//src:401 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002a58      488d35c17600.  lea rsi, str.version__output_version_information_and_exit ; 0xa120 ; "      --version  output version information and exit\n"
0x00002a5f      ba05000000     mov edx, 5
0x00002a64      31ff           xor edi, edi
0x00002a66      e825edffff     call sym.imp.dcgettext
0x00002a6b      4889de         mov rsi, rbx
0x00002a6e      4889c7         mov rdi, rax
0x00002a71      e81aeeffff     call sym.imp.fputs_unlocked
0x00002a76      488b1d2bb620.  mov rbx, qword [obj.stdout]             ; .//src:402 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002a7d      488d35d47600.  lea rsi, str.Each_MODE_is_of_the_form___ugoa__________rwxXst____ugo___________0_7___. ; 0xa158 ; "\nEach MODE is of the form '[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+'.\n"
0x00002a84      ba05000000     mov edx, 5
0x00002a89      31ff           xor edi, edi
0x00002a8b      e800edffff     call sym.imp.dcgettext
0x00002a90      4889de         mov rsi, rbx
0x00002a93      4889c7         mov rdi, rax
0x00002a96      488d1d677100.  lea rbx, str.chmod                      ; 0x9c04 ; "chmod"
0x00002a9d      e8eeedffff     call sym.imp.fputs_unlocked
0x00002aa2      488d05617100.  lea rax, [0x00009c0a]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633 ; "["
0x00002aa9      488d0d9b7100.  lea rcx, str.sha256sum                  ; 0x9c4b ; "sha256sum"
0x00002ab0      48c744246000.  mov qword [rsp + 0x60], 0
0x00002ab9      48c744246800.  mov qword [rsp + 0x68], 0
0x00002ac2      4889e2         mov rdx, rsp                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:644
0x00002ac5      48890424       mov qword [rsp], rax                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:633
0x00002ac9      488d053c7100.  lea rax, str.test_invocation            ; 0x9c0c ; "test invocation"
0x00002ad0      48894c2430     mov qword [rsp + 0x30], rcx
0x00002ad5      488d0d797100.  lea rcx, str.sha384sum                  ; 0x9c55 ; "sha384sum"
0x00002adc      4889442408     mov qword [rsp + 8], rax
0x00002ae1      488d059c7100.  lea rax, [0x00009c84]                   ; "coreutils"
0x00002ae8      48894c2440     mov qword [rsp + 0x40], rcx
0x00002aed      488d0d6b7100.  lea rcx, str.sha512sum                  ; 0x9c5f ; "sha512sum"
0x00002af4      4889442410     mov qword [rsp + 0x10], rax
0x00002af9      488d051c7100.  lea rax, str.Multi_call_invocation      ; 0x9c1c ; "Multi-call invocation"
0x00002b00      48894c2450     mov qword [rsp + 0x50], rcx
0x00002b05      4889442418     mov qword [rsp + 0x18], rax
0x00002b0a      488d05217100.  lea rax, str.sha224sum                  ; 0x9c32 ; "sha224sum"
0x00002b11      4889442420     mov qword [rsp + 0x20], rax
0x00002b16      488d051f7100.  lea rax, str.sha2_utilities             ; 0x9c3c ; "sha2 utilities"
0x00002b1d      4889442428     mov qword [rsp + 0x28], rax
0x00002b22      4889442438     mov qword [rsp + 0x38], rax
0x00002b27      4889442448     mov qword [rsp + 0x48], rax
0x00002b2c      4889442458     mov qword [rsp + 0x58], rax
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      4883c210       add rdx, 0x10                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:647
0x00002b3c      488b3a         mov rdi, qword [rdx]                    ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:646
0x00002b3f      4885ff         test rdi, rdi
0x00002b42      7413           je 0x2b57
0x00002b44      b906000000     mov ecx, 6
0x00002b49      4889de         mov rsi, rbx
0x00002b4c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b4e      0f97c0         seta al
0x00002b51      1c00           sbb al, 0
0x00002b53      84c0           test al, al
0x00002b55      75e1           jne 0x2b38
0x00002b57      4c8b6208       mov r12, qword [rdx + 8]                ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00002b5b      31ff           xor edi, edi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00002b5d      ba05000000     mov edx, 5
0x00002b62      488d35007100.  lea rsi, str.s_online_help:___s         ; 0x9c69 ; "\n%s online help: <%s>\n"
0x00002b69      4d85e4         test r12, r12                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:649
0x00002b6c      0f84c1000000   je 0x2c33
0x00002b72      e819ecffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00002b77      488d0d2a7600.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/mod.c:104 ; 0xa1a8 ; "https://www.gnu.org/software/coreutils/"
0x00002b7e      488d15fb7000.  lea rdx, str.GNU_coreutils              ; 0x9c80 ; "GNU coreutils"
0x00002b85      4889c6         mov rsi, rax
0x00002b88      bf01000000     mov edi, 1
0x00002b8d      31c0           xor eax, eax
0x00002b8f      e81ceeffff     call sym.imp.__printf_chk
0x00002b94      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x00002b96      bf05000000     mov edi, 5
0x00002b9b      e800eeffff     call sym.imp.setlocale
0x00002ba0      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x00002ba3      741c           je 0x2bc1
0x00002ba5      488d35e27000.  lea rsi, [0x00009c8e]                   ; "en_"
0x00002bac      ba03000000     mov edx, 3
0x00002bb1      4889c7         mov rdi, rax
0x00002bb4      e857ebffff     call sym.imp.strncmp
0x00002bb9      85c0           test eax, eax
0x00002bbb      0f8507010000   jne 0x2cc8
0x00002bc1      488d35ca7000.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x9c92 ; "Full documentation <%s%s>\n"
0x00002bc8      31ff           xor edi, edi
0x00002bca      ba05000000     mov edx, 5
0x00002bcf      e8bcebffff     call sym.imp.dcgettext
0x00002bd4      488d0d297000.  lea rcx, str.chmod                      ; ../coreutils-8.31/src/mod.c:104 ; 0x9c04 ; "chmod"
0x00002bdb      488d15c67500.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa1a8 ; "https://www.gnu.org/software/coreutils/"
0x00002be2      4889c6         mov rsi, rax
0x00002be5      bf01000000     mov edi, 1
0x00002bea      31c0           xor eax, eax
0x00002bec      e8bfedffff     call sym.imp.__printf_chk
0x00002bf1      4939dc         cmp r12, rbx                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668
0x00002bf4      488d0d2b7000.  lea rcx, [0x00009c26]                   ; " invocation"
0x00002bfb      488d1dbf7f00.  lea rbx, [0x0000abc1]
0x00002c02      480f44d9       cmove rbx, rcx
0x00002c06      488d350b7600.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xa218 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002c0d      31ff           xor edi, edi
0x00002c0f      ba05000000     mov edx, 5
0x00002c14      e877ebffff     call sym.imp.dcgettext
0x00002c19      4889d9         mov rcx, rbx                            ; ../coreutils-8.31/src/mod.c:104
0x00002c1c      4889c6         mov rsi, rax
0x00002c1f      4c89e2         mov rdx, r12
0x00002c22      bf01000000     mov edi, 1
0x00002c27      31c0           xor eax, eax
0x00002c29      e882edffff     call sym.imp.__printf_chk
0x00002c2e      e913fdffff     jmp 0x2946
0x00002c33      e858ebffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:652
0x00002c38      488d0d697500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; ../coreutils-8.31/src/mod.c:104 ; 0xa1a8 ; "https://www.gnu.org/software/coreutils/"
0x00002c3f      488d153a7000.  lea rdx, str.GNU_coreutils              ; 0x9c80 ; "GNU coreutils"
0x00002c46      4889c6         mov rsi, rax
0x00002c49      bf01000000     mov edi, 1
0x00002c4e      31c0           xor eax, eax
0x00002c50      e85bedffff     call sym.imp.__printf_chk
0x00002c55      31f6           xor esi, esi                            ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:656
0x00002c57      bf05000000     mov edi, 5
0x00002c5c      e83fedffff     call sym.imp.setlocale
0x00002c61      4885c0         test rax, rax                           ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:657
0x00002c64      7418           je 0x2c7e
0x00002c66      488d35217000.  lea rsi, [0x00009c8e]                   ; "en_"
0x00002c6d      ba03000000     mov edx, 3
0x00002c72      4889c7         mov rdi, rax
0x00002c75      e896eaffff     call sym.imp.strncmp
0x00002c7a      85c0           test eax, eax
0x00002c7c      7543           jne 0x2cc1
0x00002c7e      488d350d7000.  lea rsi, str.Full_documentation___s_s   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666 ; 0x9c92 ; "Full documentation <%s%s>\n"
0x00002c85      ba05000000     mov edx, 5
0x00002c8a      31ff           xor edi, edi
0x00002c8c      4c8d25716f00.  lea r12, str.chmod                      ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x9c04 ; "chmod"
0x00002c93      488d1d8c6f00.  lea rbx, [0x00009c26]                   ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:668 ; " invocation"
0x00002c9a      e8f1eaffff     call sym.imp.dcgettext                  ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:666
0x00002c9f      488d0d5e6f00.  lea rcx, str.chmod                      ; ../coreutils-8.31/src/mod.c:104 ; 0x9c04 ; "chmod"
0x00002ca6      488d15fb7400.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xa1a8 ; "https://www.gnu.org/software/coreutils/"
0x00002cad      4889c6         mov rsi, rax
0x00002cb0      bf01000000     mov edi, 1
0x00002cb5      31c0           xor eax, eax
0x00002cb7      e8f4ecffff     call sym.imp.__printf_chk
0x00002cbc      e945ffffff     jmp 0x2c06
0x00002cc1      4c8d253c6f00.  lea r12, str.chmod                      ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:643 ; 0x9c04 ; "chmod"
0x00002cc8      4c8b2dd9b320.  mov r13, qword [obj.stdout]             ; /usr/include/x86_64-linux-gnu/bits/stdio2.h:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002ccf      488d35fa7400.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xa1d0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002cd6      31ff           xor edi, edi
0x00002cd8      ba05000000     mov edx, 5
0x00002cdd      e8aeeaffff     call sym.imp.dcgettext
0x00002ce2      4c89ee         mov rsi, r13
0x00002ce5      4889c7         mov rdi, rax
0x00002ce8      e8a3ebffff     call sym.imp.fputs_unlocked
0x00002ced      e9cffeffff     jmp 0x2bc1
0x00002cf2      662e0f1f8400.  nop word cs:[rax + rax]
0x00002cfc      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002d00      48893d19b420.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20e120:8]=0
0x00002d07      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002d08      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002d10      40883d01b420.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20e118:1]=0
0x00002d17      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002d18      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002d20      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002d21      53             push rbx
0x00002d22      4883ec08       sub rsp, 8
0x00002d26      488b3d7bb320.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x00002d2d      e87e530000     call sym.close_stream
0x00002d32      85c0           test eax, eax
0x00002d34      7416           je 0x2d4c
0x00002d36      e8c5e9ffff     call sym.imp.__errno_location
0x00002d3b      803dd6b32000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20e118:1]=0
0x00002d42      4889c3         mov rbx, rax
0x00002d45      741c           je 0x2d63
0x00002d47      833820         cmp dword [rax], 0x20
0x00002d4a      7517           jne 0x2d63
0x00002d4c      488b3d8db320.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x00002d53      e858530000     call sym.close_stream
0x00002d58      85c0           test eax, eax
0x00002d5a      7546           jne 0x2da2
0x00002d5c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002d60      5b             pop rbx
0x00002d61      5d             pop rbp
0x00002d62      c3             ret
0x00002d63      488d35477800.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xa5b1 ; "write error"
0x00002d6a      31ff           xor edi, edi
0x00002d6c      ba05000000     mov edx, 5
0x00002d71      e81aeaffff     call sym.imp.dcgettext
0x00002d76      488b3da3b320.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20e120:8]=0
0x00002d7d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002d80      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002d83      7428           je 0x2dad
0x00002d85      e8a6220000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002d8a      8b33           mov esi, dword [rbx]
0x00002d8c      488d152a7800.  lea rdx, str.s:__s                      ; 0xa5bd ; "%s: %s"
0x00002d93      4889c1         mov rcx, rax
0x00002d96      4989e8         mov r8, rbp
0x00002d99      31ff           xor edi, edi
0x00002d9b      31c0           xor eax, eax
0x00002d9d      e82eecffff     call sym.imp.error
0x00002da2      8b3d78b22000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20e020:4]=1
0x00002da8      e873e9ffff     call sym.imp._exit
0x00002dad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002daf      488d15636f00.  lea rdx, [0x00009d19]                   ; "%s"
0x00002db6      4889c1         mov rcx, rax
0x00002db9      31ff           xor edi, edi
0x00002dbb      31c0           xor eax, eax
0x00002dbd      e80eecffff     call sym.imp.error
0x00002dc2      ebde           jmp 0x2da2
0x00002dc4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002dce      6690           nop
;-- strmode:
0x00002dd0      89fa           mov edx, edi
0x00002dd2      b82d000000     mov eax, 0x2d                           ; '-'
0x00002dd7      81e200f00000   and edx, 0xf000
0x00002ddd      81fa00800000   cmp edx, 0x8000
0x00002de3      745b           je 0x2e40
0x00002de5      81fa00400000   cmp edx, 0x4000                         ; "L)\xf2L\x89\xee\xe8\x15@"
0x00002deb      b864000000     mov eax, 0x64                           ; 'd'
0x00002df0      744e           je 0x2e40
0x00002df2      81fa00600000   cmp edx, 0x6000                         ; "H\x8b{\x18H\x8bk\x10H\x85\xfft\x05\xe8^\xb8\xff\xffH\x89\xdfH\x89\xeb\xe8s\xba\xff\xffH\x85\xedu\xdeH\x83\xc4\b[]\xc3\x0f\x1f\x80"
0x00002df8      b862000000     mov eax, 0x62                           ; 'b'
0x00002dfd      7441           je 0x2e40
0x00002dff      81fa00200000   cmp edx, 0x2000
0x00002e05      b863000000     mov eax, 0x63                           ; 'c'
0x00002e0a      7434           je 0x2e40
0x00002e0c      81fa00a00000   cmp edx, 0xa000
0x00002e12      b86c000000     mov eax, 0x6c                           ; 'l'
0x00002e17      7427           je 0x2e40
0x00002e19      81fa00100000   cmp edx, 0x1000
0x00002e1f      b870000000     mov eax, 0x70                           ; 'p'
0x00002e24      741a           je 0x2e40
0x00002e26      81fa00c00000   cmp edx, 0xc000
0x00002e2c      b873000000     mov eax, 0x73                           ; 's'
0x00002e31      ba3f000000     mov edx, 0x3f                           ; '?'
0x00002e36      0f45c2         cmovne eax, edx
0x00002e39      0f1f80000000.  nop dword [rax]
0x00002e40      8806           mov byte [rsi], al
0x00002e42      89f8           mov eax, edi
0x00002e44      2500010000     and eax, 0x100
0x00002e49      83f801         cmp eax, 1
0x00002e4c      19c0           sbb eax, eax
0x00002e4e      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x00002e51      83c072         add eax, 0x72
0x00002e54      884601         mov byte [rsi + 1], al
0x00002e57      89f8           mov eax, edi
0x00002e59      2580000000     and eax, 0x80
0x00002e5e      83f801         cmp eax, 1
0x00002e61      19c0           sbb eax, eax
0x00002e63      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x00002e66      83c077         add eax, 0x77
0x00002e69      884602         mov byte [rsi + 2], al
0x00002e6c      89f8           mov eax, edi
0x00002e6e      83e040         and eax, 0x40                           ; segment.PHDR
0x00002e71      83f801         cmp eax, 1
0x00002e74      19c0           sbb eax, eax
0x00002e76      f7c700080000   test edi, 0x800
0x00002e7c      0f849e000000   je 0x2f20
0x00002e82      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x00002e85      83c073         add eax, 0x73
0x00002e88      884603         mov byte [rsi + 3], al
0x00002e8b      89f8           mov eax, edi
0x00002e8d      83e020         and eax, 0x20                           ; "@"
0x00002e90      83f801         cmp eax, 1
0x00002e93      19c0           sbb eax, eax
0x00002e95      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x00002e98      83c072         add eax, 0x72
0x00002e9b      884604         mov byte [rsi + 4], al
0x00002e9e      89f8           mov eax, edi
0x00002ea0      83e010         and eax, 0x10
0x00002ea3      83f801         cmp eax, 1
0x00002ea6      19c0           sbb eax, eax
0x00002ea8      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x00002eab      83c077         add eax, 0x77
0x00002eae      884605         mov byte [rsi + 5], al
0x00002eb1      89f8           mov eax, edi
0x00002eb3      83e008         and eax, 8
0x00002eb6      83f801         cmp eax, 1
0x00002eb9      19c0           sbb eax, eax
0x00002ebb      f7c700040000   test edi, 0x400
0x00002ec1      0f8481000000   je 0x2f48
0x00002ec7      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x00002eca      83c073         add eax, 0x73
0x00002ecd      884606         mov byte [rsi + 6], al
0x00002ed0      89f8           mov eax, edi
0x00002ed2      83e004         and eax, 4
0x00002ed5      83f801         cmp eax, 1
0x00002ed8      19c0           sbb eax, eax
0x00002eda      83e0bb         and eax, 0xffffffbb                     ; 4294967227
0x00002edd      83c072         add eax, 0x72
0x00002ee0      884607         mov byte [rsi + 7], al
0x00002ee3      89f8           mov eax, edi
0x00002ee5      83e002         and eax, 2
0x00002ee8      83f801         cmp eax, 1
0x00002eeb      19c0           sbb eax, eax
0x00002eed      83e0b6         and eax, 0xffffffb6                     ; 4294967222
0x00002ef0      83c077         add eax, 0x77
0x00002ef3      884608         mov byte [rsi + 8], al
0x00002ef6      89f8           mov eax, edi
0x00002ef8      83e001         and eax, 1
0x00002efb      83f801         cmp eax, 1
0x00002efe      19c0           sbb eax, eax
0x00002f00      81e700020000   and edi, 0x200
0x00002f06      7428           je 0x2f30
0x00002f08      83e0e0         and eax, 0xffffffe0                     ; 4294967264
0x00002f0b      83c074         add eax, 0x74
0x00002f0e      884609         mov byte [rsi + 9], al
0x00002f11      b820000000     mov eax, 0x20                           ; "@"
0x00002f16      6689460a       mov word [rsi + 0xa], ax
0x00002f1a      c3             ret
0x00002f1b      0f1f440000     nop dword [rax + rax]
0x00002f20      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x00002f23      83c078         add eax, 0x78
0x00002f26      e95dffffff     jmp 0x2e88
0x00002f2b      0f1f440000     nop dword [rax + rax]
0x00002f30      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x00002f33      83c078         add eax, 0x78
0x00002f36      884609         mov byte [rsi + 9], al
0x00002f39      b820000000     mov eax, 0x20                           ; "@"
0x00002f3e      6689460a       mov word [rsi + 0xa], ax
0x00002f42      c3             ret
0x00002f43      0f1f440000     nop dword [rax + rax]
0x00002f48      83e0b5         and eax, 0xffffffb5                     ; 4294967221
0x00002f4b      83c078         add eax, 0x78
0x00002f4e      e97affffff     jmp 0x2ecd
0x00002f53      0f1f00         nop dword [rax]
0x00002f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- filemodestring:
0x00002f60      8b7f18         mov edi, dword [rdi + 0x18]
0x00002f63      e968feffff     jmp sym.strmode
0x00002f68      0f1f84000000.  nop dword [rax + rax]
;-- mode_compile:
0x00002f70      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:135
0x00002f71      53             push rbx
0x00002f72      4889fb         mov rbx, rdi
0x00002f75      4883ec08       sub rsp, 8
0x00002f79      0fbe07         movsx eax, byte [rdi]                   ; ../coreutils-8.31/lib/modechange.c:141
0x00002f7c      8d50d0         lea edx, [rax - 0x30]
0x00002f7f      80fa07         cmp dl, 7
0x00002f82      0f86b0000000   jbe 0x3038
0x00002f88      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:169
0x00002f8a      4889f9         mov rcx, rdi
0x00002f8d      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:168
0x00002f92      7427           je 0x2fbb                               ; ../coreutils-8.31/lib/modechange.c:169
0x00002f94      0f1f4000       nop dword [rax]
0x00002f98      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/modechange.c:170
0x00002f9a      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x00002f9d      80fa2d         cmp dl, 0x2d
0x00002fa0      0f94c2         sete dl
0x00002fa3      3c2b           cmp al, 0x2b
0x00002fa5      0f94c0         sete al
0x00002fa8      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:169
0x00002fac      09d0           or eax, edx                             ; ../coreutils-8.31/lib/modechange.c:170
0x00002fae      0fb6c0         movzx eax, al
0x00002fb1      4801c7         add rdi, rax
0x00002fb4      0fb601         movzx eax, byte [rcx]                   ; ../coreutils-8.31/lib/modechange.c:169
0x00002fb7      84c0           test al, al
0x00002fb9      75dd           jne 0x2f98
0x00002fbb      ba10000000     mov edx, 0x10                           ; ../coreutils-8.31/lib/xalloc.h:101
0x00002fc0      31c9           xor ecx, ecx
0x00002fc2      4889d0         mov rax, rdx
0x00002fc5      48f7e7         mul rdi
0x00002fc8      0f8011030000   jo 0x32df
0x00002fce      4885c0         test rax, rax
0x00002fd1      0f8812030000   js 0x32e9
0x00002fd7      4885c9         test rcx, rcx
0x00002fda      0f8509030000   jne 0x32e9
0x00002fe0      48c1e704       shl rdi, 4                              ; ../coreutils-8.31/lib/xalloc.h:103
0x00002fe4      488d2dd97500.  lea rbp, [0x0000a5c4]                   ; ../coreutils-8.31/lib/modechange.c:259
0x00002feb      e800290000     call sym.xmalloc                        ; ../coreutils-8.31/lib/xalloc.h:103
0x00002ff0      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/modechange.c:138
0x00002ff2      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:179
0x00002ff5      440fb60b       movzx r9d, byte [rbx]                   ; ../coreutils-8.31/lib/modechange.c:183
0x00002ff9      4180f961       cmp r9b, 0x61
0x00002ffd      0f844d020000   je 0x3250                               ; ../coreutils-8.31/lib/modechange.c:181
0x00003003      7e6b           jle 0x3070
0x00003005      4180f96f       cmp r9b, 0x6f
0x00003009      0f8471020000   je 0x3280
0x0000300f      4180f975       cmp r9b, 0x75
0x00003013      0f8457020000   je 0x3270
0x00003019      4180f967       cmp r9b, 0x67
0x0000301d      0f843d020000   je 0x3260
0x00003023      4889c7         mov rdi, rax
0x00003026      e865eaffff     call sym..plt.got
0x0000302b      31c0           xor eax, eax
0x0000302d      4883c408       add rsp, 8
0x00003031      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:182
0x00003032      5d             pop rbp
0x00003033      c3             ret
0x00003034      0f1f4000       nop dword [rax]
0x00003038      4889fa         mov rdx, rdi
0x0000303b      31ed           xor ebp, ebp
0x0000303d      eb10           jmp 0x304f
0x0000303f      90             nop
0x00003040      0fbe02         movsx eax, byte [rdx]
0x00003043      8d48d0         lea ecx, [rax - 0x30]
0x00003046      80f907         cmp cl, 7
0x00003049      0f8741020000   ja 0x3290
0x0000304f      8d6ce8d0       lea ebp, [rax + rbp*8 - 0x30]
0x00003053      4883c201       add rdx, 1
0x00003057      81fdff0f0000   cmp ebp, 0xfff
0x0000305d      76e1           jbe 0x3040
0x0000305f      4883c408       add rsp, 8
0x00003063      31c0           xor eax, eax
0x00003065      5b             pop rbx                                 ; ../coreutils-8.31/lib/modechange.c:123
0x00003066      5d             pop rbp
0x00003067      c3             ret
0x00003068      0f1f84000000.  nop dword [rax + rax]
0x00003070      4180f92d       cmp r9b, 0x2d
0x00003074      740c           je 0x3082
0x00003076      4180f93d       cmp r9b, 0x3d
0x0000307a      7406           je 0x3082
0x0000307c      4180f92b       cmp r9b, 0x2b
0x00003080      75a1           jne 0x3023
0x00003082      488d7e01       lea rdi, [rsi + 1]
0x00003086      48c1e604       shl rsi, 4
0x0000308a      4801c6         add rsi, rax
0x0000308d      eb65           jmp 0x30f4
0x0000308f      90             nop
0x00003090      80fa6f         cmp dl, 0x6f
0x00003093      4c8d4302       lea r8, [rbx + 2]
0x00003097      0f8493010000   je 0x3230
0x0000309d      80fa75         cmp dl, 0x75
0x000030a0      41bac0010000   mov r10d, 0x1c0
0x000030a6      0f85d4000000   jne 0x3180
0x000030ac      44880e         mov byte [rsi], r9b
0x000030af      c6460103       mov byte [rsi + 1], 3
0x000030b3      440fb64b02     movzx r9d, byte [rbx + 2]
0x000030b8      44895e04       mov dword [rsi + 4], r11d
0x000030bc      4c89c3         mov rbx, r8
0x000030bf      44895608       mov dword [rsi + 8], r10d
0x000030c3      4489d2         mov edx, r10d
0x000030c6      4421da         and edx, r11d
0x000030c9      4585db         test r11d, r11d
0x000030cc      440f45d2       cmovne r10d, edx
0x000030d0      4489ca         mov edx, r9d
0x000030d3      4489560c       mov dword [rsi + 0xc], r10d
0x000030d7      4883c610       add rsi, 0x10
0x000030db      83e2ef         and edx, 0xffffffef                     ; 4294967279
0x000030de      488d4f01       lea rcx, [rdi + 1]
0x000030e2      80fa2d         cmp dl, 0x2d
0x000030e5      740a           je 0x30f1
0x000030e7      4180f92b       cmp r9b, 0x2b
0x000030eb      0f85ff010000   jne 0x32f0
0x000030f1      4889cf         mov rdi, rcx
0x000030f4      0fbe5301       movsx edx, byte [rbx + 1]
0x000030f8      488d4b01       lea rcx, [rbx + 1]
0x000030fc      80fa67         cmp dl, 0x67
0x000030ff      0f843b010000   je 0x3240
0x00003105      7f89           jg 0x3090
0x00003107      448d42d0       lea r8d, [rdx - 0x30]
0x0000310b      4180f807       cmp r8b, 7
0x0000310f      776f           ja 0x3180
0x00003111      4531c0         xor r8d, r8d
0x00003114      0f1f4000       nop dword [rax]
0x00003118      468d44c2d0     lea r8d, [rdx + r8*8 - 0x30]
0x0000311d      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/modechange.c:32
0x00003121      4181f8ff0f00.  cmp r8d, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-32
0x00003128      0f87f5feffff   ja 0x3023                               ; ../coreutils-8.31/lib/modechange.c:-157
0x0000312e      0fbe11         movsx edx, byte [rcx]
0x00003131      448d52d0       lea r10d, [rdx - 0x30]
0x00003135      4180fa07       cmp r10b, 7
0x00003139      76dd           jbe 0x3118
0x0000313b      4585db         test r11d, r11d
0x0000313e      0f85dffeffff   jne 0x3023
0x00003144      84d2           test dl, dl
0x00003146      7409           je 0x3151                               ; ../coreutils-8.31/lib/modechange.c:-130
0x00003148      80fa2c         cmp dl, 0x2c
0x0000314b      0f85d2feffff   jne 0x3023                              ; ../coreutils-8.31/lib/modechange.c:-127
0x00003151      44880e         mov byte [rsi], r9b
0x00003154      c6460101       mov byte [rsi + 1], 1
0x00003158      4189d1         mov r9d, edx
0x0000315b      c74604ff0f00.  mov dword [rsi + 4], 0xfff              ; [0xfff:4]=0xa5ac00
0x00003162      44894608       mov dword [rsi + 8], r8d
0x00003166      4889cb         mov rbx, rcx
0x00003169      41bbff0f0000   mov r11d, 0xfff
0x0000316f      41baff0f0000   mov r10d, 0xfff                         ; ../coreutils-8.31/lib/modechange.c:-115
0x00003175      e956ffffff     jmp 0x30d0
0x0000317a      660f1f440000   nop word [rax + rax]
0x00003180      448d42a8       lea r8d, [rdx - 0x58]
0x00003184      4531d2         xor r10d, r10d
0x00003187      bb01000000     mov ebx, 1
0x0000318c      4180f820       cmp r8b, 0x20                           ; "@"
0x00003190      7737           ja 0x31c9
0x00003192      660f1f440000   nop word [rax + rax]
0x00003198      450fb6c0       movzx r8d, r8b
0x0000319c      4e63448500     movsxd r8, dword [rbp + r8*4]
0x000031a1      4901e8         add r8, rbp
0x000031a4      41ffe0         jmp r8
0x000031a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/modechange.c:-118
0x000031b0      bb02000000     mov ebx, 2
0x000031b5      0f1f00         nop dword [rax]
0x000031b8      4883c101       add rcx, 1
0x000031bc      0fb611         movzx edx, byte [rcx]
0x000031bf      448d42a8       lea r8d, [rdx - 0x58]                   ; ../coreutils-8.31/lib/modechange.c:-107
0x000031c3      4180f820       cmp r8b, 0x20                           ; "@"
0x000031c7      76cf           jbe 0x3198
0x000031c9      44880e         mov byte [rsi], r9b
0x000031cc      885e01         mov byte [rsi + 1], bl
0x000031cf      4189d1         mov r9d, edx                            ; ../coreutils-8.31/lib/modechange.c:-111
0x000031d2      44895e04       mov dword [rsi + 4], r11d
0x000031d6      44895608       mov dword [rsi + 8], r10d               ; ../coreutils-8.31/lib/modechange.c:-110
0x000031da      4889cb         mov rbx, rcx
0x000031dd      e9e1feffff     jmp 0x30c3
0x000031e2      660f1f440000   nop word [rax + rax]
0x000031e8      4183ca49       or r10d, 0x49
0x000031ec      ebca           jmp 0x31b8
0x000031ee      6690           nop
0x000031f0      4180ca92       or r10b, 0x92
0x000031f4      ebc2           jmp 0x31b8
0x000031f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003200      4181ca000200.  or r10d, 0x200
0x00003207      ebaf           jmp 0x31b8
0x00003209      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-140
0x00003210      4181ca000c00.  or r10d, 0xc00
0x00003217      eb9f           jmp 0x31b8
0x00003219      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/modechange.c:-203
0x00003220      4181ca240100.  or r10d, 0x124
0x00003227      eb8f           jmp 0x31b8
0x00003229      0f1f80000000.  nop dword [rax]
0x00003230      41ba07000000   mov r10d, 7
0x00003236      e971feffff     jmp 0x30ac                              ; ../coreutils-8.31/lib/modechange.c:-197
0x0000323b      0f1f440000     nop dword [rax + rax]
0x00003240      4c8d4302       lea r8, [rbx + 2]
0x00003244      41ba38000000   mov r10d, 0x38                          ; '8'
0x0000324a      e95dfeffff     jmp 0x30ac
0x0000324f      90             nop                                     ; ../coreutils-8.31/lib/modechange.c:-230
0x00003250      41bbff0f0000   mov r11d, 0xfff
0x00003256      4883c301       add rbx, 1
0x0000325a      e996fdffff     jmp 0x2ff5                              ; ../coreutils-8.31/lib/modechange.c:-224
0x0000325f      90             nop
0x00003260      4181cb380400.  or r11d, 0x438
0x00003267      ebed           jmp 0x3256                              ; ../coreutils-8.31/lib/modechange.c:-272
0x00003269      0f1f80000000.  nop dword [rax]
0x00003270      4181cbc00900.  or r11d, 0x9c0
0x00003277      ebdd           jmp 0x3256
0x00003279      0f1f80000000.  nop dword [rax]
0x00003280      4181cb070200.  or r11d, 0x207
0x00003287      ebcd           jmp 0x3256
0x00003289      0f1f80000000.  nop dword [rax]
0x00003290      84c0           test al, al                             ; ../coreutils-8.31/lib/modechange.c:-267
0x00003292      0f85c7fdffff   jne 0x305f
0x00003298      4829da         sub rdx, rbx
0x0000329b      89eb           mov ebx, ebp
0x0000329d      b8ff0f0000     mov eax, 0xfff
0x000032a2      81e3000c0000   and ebx, 0xc00
0x000032a8      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/xalloc.h:-284 ; "@"
0x000032ad      81cbff030000   or ebx, 0x3ff
0x000032b3      4883fa05       cmp rdx, 5
0x000032b7      0f4dd8         cmovge ebx, eax
0x000032ba      e831260000     call sym.xmalloc
0x000032bf      ba3d010000     mov edx, 0x13d
0x000032c4      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0xa5ac00
0x000032cb      896808         mov dword [rax + 8], ebp
0x000032ce      668910         mov word [rax], dx
0x000032d1      89580c         mov dword [rax + 0xc], ebx              ; ../coreutils-8.31/lib/modechange.c:-199
0x000032d4      c6401100       mov byte [rax + 0x11], 0
0x000032d8      4883c408       add rsp, 8
0x000032dc      5b             pop rbx
0x000032dd      5d             pop rbp
0x000032de      c3             ret
0x000032df      b901000000     mov ecx, 1
0x000032e4      e9e5fcffff     jmp 0x2fce
0x000032e9      e852280000     call sym.xalloc_die
0x000032ee      6690           nop
0x000032f0      4180f92c       cmp r9b, 0x2c
0x000032f4      750c           jne 0x3302
0x000032f6      4883c301       add rbx, 1
0x000032fa      4889fe         mov rsi, rdi
0x000032fd      e9f0fcffff     jmp 0x2ff2
0x00003302      4584c9         test r9b, r9b
0x00003305      0f8518fdffff   jne 0x3023
0x0000330b      48c1e704       shl rdi, 4
0x0000330f      c644380100     mov byte [rax + rdi + 1], 0
0x00003314      e914fdffff     jmp 0x302d
0x00003319      0f1f80000000.  nop dword [rax]
;-- mode_create_from_ref:
0x00003320      53             push rbx
0x00003321      4889fe         mov rsi, rdi                            ; ../coreutils-8.31/lib/modechange.c:-401
0x00003324      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/modechange.c:-398
0x00003329      4881eca00000.  sub rsp, 0xa0
0x00003330      4889e2         mov rdx, rsp
0x00003333      64488b042528.  mov rax, qword fs:[0x28]
0x0000333c      488984249800.  mov qword [rsp + 0x98], rax
0x00003344      31c0           xor eax, eax
0x00003346      e8b5e5ffff     call sym.imp.__xstat
0x0000334b      85c0           test eax, eax
0x0000334d      7551           jne 0x33a0
0x0000334f      8b5c2418       mov ebx, dword [rsp + 0x18]
0x00003353      bf20000000     mov edi, 0x20                           ; "@"
0x00003358      e893250000     call sym.xmalloc
0x0000335d      ba3d010000     mov edx, 0x13d
0x00003362      c74004ff0f00.  mov dword [rax + 4], 0xfff              ; [0xfff:4]=0xa5ac00
0x00003369      c7400cff0f00.  mov dword [rax + 0xc], 0xfff            ; [0xfff:4]=0xa5ac00
0x00003370      668910         mov word [rax], dx
0x00003373      895808         mov dword [rax + 8], ebx
0x00003376      c6401100       mov byte [rax + 0x11], 0
0x0000337a      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/modechange.c:-175
0x00003382      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000338b      7517           jne 0x33a4
0x0000338d      4881c4a00000.  add rsp, 0xa0
0x00003394      5b             pop rbx
0x00003395      c3             ret
0x00003396      662e0f1f8400.  nop word cs:[rax + rax]
0x000033a0      31c0           xor eax, eax
0x000033a2      ebd6           jmp 0x337a
0x000033a4      e837e4ffff     call sym.imp.__stack_chk_fail
0x000033a9      0f1f80000000.  nop dword [rax]
;-- mode_adjust:
0x000033b0      440fb65101     movzx r10d, byte [rcx + 1]
0x000033b5      89f8           mov eax, edi
0x000033b7      25ff0f0000     and eax, 0xfff                          ; ../coreutils-8.31/lib/modechange.c:-115
0x000033bc      4584d2         test r10b, r10b
0x000033bf      0f844b010000   je 0x3510
0x000033c5      4080fe01       cmp sil, 1
0x000033c9      4154           push r12
0x000033cb      55             push rbp                                ; ../coreutils-8.31/lib/modechange.c:-164
0x000033cc      53             push rbx
0x000033cd      19db           sbb ebx, ebx
0x000033cf      400fb6ee       movzx ebp, sil                          ; ../coreutils-8.31/lib/modechange.c:-166
0x000033d3      f7d3           not ebx
0x000033d5      4531db         xor r11d, r11d                          ; ../coreutils-8.31/lib/modechange.c:-164
0x000033d8      81e3000c0000   and ebx, 0xc00                          ; ../coreutils-8.31/lib/modechange.c:-165
0x000033de      eb3a           jmp 0x341a
0x000033e0      4489cf         mov edi, r9d
0x000033e3      09d7           or edi, edx
0x000033e5      f7d7           not edi
0x000033e7      21fe           and esi, edi
0x000033e9      4180fc2d       cmp r12b, 0x2d
0x000033ed      0f840d010000   je 0x3500                               ; ../coreutils-8.31/lib/modechange.c:-151
0x000033f3      4180fc3d       cmp r12b, 0x3d
0x000033f7      0f84ae000000   je 0x34ab                               ; ../coreutils-8.31/lib/modechange.c:-150
0x000033fd      4180fc2b       cmp r12b, 0x2b
0x00003401      7505           jne 0x3408
0x00003403      4109f3         or r11d, esi
0x00003406      09f0           or eax, esi
0x00003408      4883c110       add rcx, 0x10
0x0000340c      440fb65101     movzx r10d, byte [rcx + 1]
0x00003411      4584d2         test r10b, r10b
0x00003414      0f84b2000000   je 0x34cc
0x0000341a      448b490c       mov r9d, dword [rcx + 0xc]
0x0000341e      8b7904         mov edi, dword [rcx + 4]
0x00003421      8b7108         mov esi, dword [rcx + 8]
0x00003424      41f7d1         not r9d
0x00003427      4121d9         and r9d, ebx
0x0000342a      4180fa02       cmp r10b, 2
0x0000342e      0f84ac000000   je 0x34e0
0x00003434      4180fa03       cmp r10b, 3
0x00003438      753e           jne 0x3478
0x0000343a      21c6           and esi, eax
0x0000343c      4189f2         mov r10d, esi
0x0000343f      4181e2240100.  and r10d, 0x124
0x00003446      4183fa01       cmp r10d, 1
0x0000344a      4519d2         sbb r10d, r10d
0x0000344d      41f7d2         not r10d
0x00003450      4181e2240100.  and r10d, 0x124
0x00003457      4589d4         mov r12d, r10d
0x0000345a      4180cc92       or r12b, 0x92
0x0000345e      40f6c692       test sil, 0x92
0x00003462      450f45d4       cmovne r10d, r12d
0x00003466      4589d4         mov r12d, r10d
0x00003469      4183cc49       or r12d, 0x49
0x0000346d      40f6c649       test sil, 0x49                          ; ../coreutils-8.31/lib/modechange.c:-168
0x00003471      450f45d4       cmovne r10d, r12d
0x00003475      4409d6         or esi, r10d
0x00003478      4589ca         mov r10d, r9d
0x0000347b      85ff           test edi, edi
0x0000347d      440fb621       movzx r12d, byte [rcx]                  ; ../coreutils-8.31/lib/modechange.c:-105
0x00003481      41f7d2         not r10d
0x00003484      0f8456ffffff   je 0x33e0
0x0000348a      4121fa         and r10d, edi
0x0000348d      4421d6         and esi, r10d
0x00003490      4180fc2d       cmp r12b, 0x2d
0x00003494      746a           je 0x3500                               ; ../coreutils-8.31/lib/modechange.c:-139
0x00003496      4180fc3d       cmp r12b, 0x3d
0x0000349a      0f855dffffff   jne 0x33fd
0x000034a0      f7d7           not edi
0x000034a2      4109f9         or r9d, edi
0x000034a5      4589ca         mov r10d, r9d
0x000034a8      41f7d2         not r10d
0x000034ab      4181e2ff0f00.  and r10d, 0xfff
0x000034b2      4883c110       add rcx, 0x10
0x000034b6      4421c8         and eax, r9d
0x000034b9      4509d3         or r11d, r10d
0x000034bc      440fb65101     movzx r10d, byte [rcx + 1]
0x000034c1      09f0           or eax, esi                             ; ../coreutils-8.31/lib/modechange.c:-170
0x000034c3      4584d2         test r10b, r10b
0x000034c6      0f854effffff   jne 0x341a                              ; ../coreutils-8.31/lib/modechange.c:-231
0x000034cc      4d85c0         test r8, r8
0x000034cf      7403           je 0x34d4
0x000034d1      458918         mov dword [r8], r11d
0x000034d4      5b             pop rbx
0x000034d5      5d             pop rbp
0x000034d6      415c           pop r12
0x000034d8      c3             ret
0x000034d9      0f1f80000000.  nop dword [rax]
0x000034e0      4189c4         mov r12d, eax
0x000034e3      4189f2         mov r10d, esi
0x000034e6      4183e449       and r12d, 0x49
0x000034ea      4183ca49       or r10d, 0x49
0x000034ee      4109ec         or r12d, ebp
0x000034f1      410f45f2       cmovne esi, r10d
0x000034f5      eb81           jmp 0x3478
0x000034f7      660f1f840000.  nop word [rax + rax]
0x00003500      4109f3         or r11d, esi
0x00003503      f7d6           not esi
0x00003505      21f0           and eax, esi
0x00003507      e9fcfeffff     jmp 0x3408
0x0000350c      0f1f4000       nop dword [rax]
0x00003510      4531db         xor r11d, r11d
0x00003513      4d85c0         test r8, r8
0x00003516      7403           je 0x351b
0x00003518      458918         mov dword [r8], r11d
0x0000351b      f3c3           ret
0x0000351d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00003520      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003523      53             push rbx
0x00003524      7477           je 0x359d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003526      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000352b      4889fb         mov rbx, rdi
0x0000352e      e8ede2ffff     call sym.imp.strrchr
0x00003533      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003536      7455           je 0x358d
0x00003538      4c8d4001       lea r8, [rax + 1]
0x0000353c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000353f      4829da         sub rdx, rbx
0x00003542      4883fa06       cmp rdx, 6
0x00003546      7e45           jle 0x358d
0x00003548      488d70fa       lea rsi, [rax - 6]
0x0000354c      488d3d2d7100.  lea rdi, str..libs                      ; 0xa680 ; "/.libs/"
0x00003553      b907000000     mov ecx, 7
0x00003558      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000355a      0f97c2         seta dl
0x0000355d      80da00         sbb dl, 0
0x00003560      84d2           test dl, dl
0x00003562      7529           jne 0x358d
0x00003564      488d3d1d7100.  lea rdi, [0x0000a688]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000356b      b903000000     mov ecx, 3
0x00003570      4c89c6         mov rsi, r8
0x00003573      4c89c3         mov rbx, r8
0x00003576      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003578      0f97c2         seta dl
0x0000357b      80da00         sbb dl, 0
0x0000357e      84d2           test dl, dl
0x00003580      750b           jne 0x358d
0x00003582      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003586      48891d13ab20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20e0a0:8]=0
0x0000358d      48891d94ab20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20e128:8]=0
0x00003594      48891d25ab20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20e0c0:8]=0
0x0000359b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000359c      c3             ret
0x0000359d      488b0d3cab20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20e0e0:8]=0
0x000035a4      488d3d9d7000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xa648 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000035ab      ba37000000     mov edx, 0x37                           ; '7'
0x000035b0      be01000000     mov esi, 1
0x000035b5      e886e4ffff     call sym.imp.fwrite
0x000035ba      e831e1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000035bf      90             nop
;-- gettext_quote.part.1:
0x000035c0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000035c1      53             push rbx
0x000035c2      4889fd         mov rbp, rdi
0x000035c5      89f3           mov ebx, esi
0x000035c7      4883ec08       sub rsp, 8
0x000035cb      e860600000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000035d0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000035d3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000035d6      80fa55         cmp dl, 0x55
0x000035d9      7475           je 0x3650
0x000035db      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000035de      7420           je 0x3600
0x000035e0      488d05b47000.  lea rax, str.l______l                   ; 0xa69b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035e7      488d15af7000.  lea rdx, [0x0000a69d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035ee      83fb09         cmp ebx, 9
0x000035f1      480f45c2       cmovne rax, rdx
0x000035f5      4883c408       add rsp, 8
0x000035f9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000035fa      5d             pop rbp
0x000035fb      c3             ret
0x000035fc      0f1f4000       nop dword [rax]
0x00003600      0fb65001       movzx edx, byte [rax + 1]
0x00003604      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003607      80fa42         cmp dl, 0x42
0x0000360a      75d4           jne 0x35e0
0x0000360c      80780231       cmp byte [rax + 2], 0x31
0x00003610      75ce           jne 0x35e0
0x00003612      80780338       cmp byte [rax + 3], 0x38
0x00003616      75c8           jne 0x35e0
0x00003618      80780430       cmp byte [rax + 4], 0x30
0x0000361c      75c2           jne 0x35e0
0x0000361e      80780533       cmp byte [rax + 5], 0x33
0x00003622      75bc           jne 0x35e0
0x00003624      80780630       cmp byte [rax + 6], 0x30
0x00003628      75b6           jne 0x35e0
0x0000362a      80780700       cmp byte [rax + 7], 0
0x0000362e      75b0           jne 0x35e0
0x00003630      807d0060       cmp byte [rbp], 0x60
0x00003634      488d05597000.  lea rax, [0x0000a694]
0x0000363b      488d15567000.  lea rdx, [0x0000a698]
0x00003642      480f45c2       cmovne rax, rdx
0x00003646      4883c408       add rsp, 8
0x0000364a      5b             pop rbx
0x0000364b      5d             pop rbp
0x0000364c      c3             ret
0x0000364d      0f1f00         nop dword [rax]
0x00003650      0fb65001       movzx edx, byte [rax + 1]
0x00003654      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003657      80fa54         cmp dl, 0x54
0x0000365a      7584           jne 0x35e0
0x0000365c      0fb65002       movzx edx, byte [rax + 2]
0x00003660      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003663      80fa46         cmp dl, 0x46
0x00003666      0f8574ffffff   jne 0x35e0
0x0000366c      8078032d       cmp byte [rax + 3], 0x2d
0x00003670      0f856affffff   jne 0x35e0
0x00003676      80780438       cmp byte [rax + 4], 0x38
0x0000367a      0f8560ffffff   jne 0x35e0
0x00003680      80780500       cmp byte [rax + 5], 0
0x00003684      0f8556ffffff   jne 0x35e0
0x0000368a      807d0060       cmp byte [rbp], 0x60
0x0000368e      488d05f76f00.  lea rax, [0x0000a68c]                   ; "\u2018"
0x00003695      488d15f46f00.  lea rdx, [0x0000a690]                   ; "\u2019"
0x0000369c      480f45c2       cmovne rax, rdx
0x000036a0      4883c408       add rsp, 8
0x000036a4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000036a5      5d             pop rbp
0x000036a6      c3             ret
0x000036a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000036b0      4157           push r15
0x000036b2      4156           push r14
0x000036b4      4589c7         mov r15d, r8d
0x000036b7      4155           push r13
0x000036b9      4154           push r12
0x000036bb      4989fe         mov r14, rdi
0x000036be      55             push rbp
0x000036bf      53             push rbx
0x000036c0      4489cb         mov ebx, r9d
0x000036c3      4989f5         mov r13, rsi
0x000036c6      4889cd         mov rbp, rcx
0x000036c9      83e302         and ebx, 2
0x000036cc      4881ecb80000.  sub rsp, 0xb8
0x000036d3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000036db      4889542410     mov qword [rsp + 0x10], rdx
0x000036e0      4489442408     mov dword [rsp + 8], r8d
0x000036e5      44894c2478     mov dword [rsp + 0x78], r9d
0x000036ea      4889442420     mov qword [rsp + 0x20], rax
0x000036ef      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000036f7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000036fc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003704      4889442460     mov qword [rsp + 0x60], rax
0x00003709      64488b042528.  mov rax, qword fs:[0x28]
0x00003712      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000371a      31c0           xor eax, eax
0x0000371c      e87fe0ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003721      4183ff0a       cmp r15d, 0xa
0x00003725      4889442458     mov qword [rsp + 0x58], rax
0x0000372a      0f87af110000   ja 0x48df
0x00003730      488d0dc96f00.  lea rcx, [0x0000a700]
0x00003737      4489fa         mov edx, r15d
0x0000373a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000373e      4801c8         add rax, rcx
0x00003741      ffe0           jmp rax
0x00003743      c644240e01     mov byte [rsp + 0xe], 1
0x00003748      c644247c00     mov byte [rsp + 0x7c], 0
0x0000374d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003750      48c744245000.  mov qword [rsp + 0x50], 0
0x00003759      c644240f01     mov byte [rsp + 0xf], 1
0x0000375e      c644240d00     mov byte [rsp + 0xd], 0
0x00003763      488d05336f00.  lea rax, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000376a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003773      4531ff         xor r15d, r15d
0x00003776      c74424080200.  mov dword [rsp + 8], 2
0x0000377e      4889442448     mov qword [rsp + 0x48], rax
0x00003783      4531db         xor r11d, r11d
0x00003786      4889e8         mov rax, rbp
0x00003789      4589e0         mov r8d, r12d
0x0000378c      4c89dd         mov rbp, r11
0x0000378f      4989c3         mov r11, rax
0x00003792      660f1f440000   nop word [rax + rax]
0x00003798      4939eb         cmp r11, rbp
0x0000379b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000379f      4983fbff       cmp r11, 0xffffffffffffffff
0x000037a3      750d           jne 0x37b2
0x000037a5      488b442410     mov rax, qword [rsp + 0x10]
0x000037aa      803c2800       cmp byte [rax + rbp], 0
0x000037ae      410f95c4       setne r12b
0x000037b2      4584e4         test r12b, r12b
0x000037b5      0f8455060000   je 0x3e10
0x000037bb      837c240802     cmp dword [rsp + 8], 2
0x000037c0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000037c5      4c8d0c2f       lea r9, [rdi + rbp]
0x000037c9      0f95c0         setne al
0x000037cc      2244240d       and al, byte [rsp + 0xd]
0x000037d0      4189c2         mov r10d, eax
0x000037d3      0f84a7000000   je 0x3880
0x000037d9      488b442418     mov rax, qword [rsp + 0x18]
0x000037de      4885c0         test rax, rax
0x000037e1      0f8429040000   je 0x3c10
0x000037e7      4983fbff       cmp r11, 0xffffffffffffffff
0x000037eb      488d5c0500     lea rbx, [rbp + rax]
0x000037f0      752e           jne 0x3820
0x000037f2      4883f801       cmp rax, 1
0x000037f6      7628           jbe 0x3820
0x000037f8      4488442438     mov byte [rsp + 0x38], r8b
0x000037fd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003802      4c894c2428     mov qword [rsp + 0x28], r9
0x00003807      e8a4dfffff     call sym.imp.strlen
0x0000380c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003812      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003818      4989c3         mov r11, rax
0x0000381b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003820      4c39db         cmp rbx, r11
0x00003823      4488542428     mov byte [rsp + 0x28], r10b
0x00003828      0f87b2050000   ja 0x3de0
0x0000382e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003833      488b742448     mov rsi, qword [rsp + 0x48]
0x00003838      4c89cf         mov rdi, r9
0x0000383b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003840      4488442438     mov byte [rsp + 0x38], r8b
0x00003845      4c894c2430     mov qword [rsp + 0x30], r9
0x0000384a      e831e0ffff     call sym.imp.memcmp
0x0000384f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003851      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003856      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000385c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003861      0f8579050000   jne 0x3de0
0x00003867      807c240f00     cmp byte [rsp + 0xf], 0
0x0000386c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003872      0f857d0f0000   jne 0x47f5
0x00003878      0f1f84000000.  nop dword [rax + rax]
0x00003880      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003884      80fb7e         cmp bl, 0x7e
0x00003887      0f871b030000   ja 0x3ba8
0x0000388d      488d0d986e00.  lea rcx, [0x0000a72c]
0x00003894      0fb6d3         movzx edx, bl
0x00003897      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000389b      4801c8         add rax, rcx
0x0000389e      ffe0           jmp rax
0x000038a0      4531d2         xor r10d, r10d
0x000038a3      4983fb01       cmp r11, 1
0x000038a7      0f95c0         setne al
0x000038aa      4983fbff       cmp r11, 0xffffffffffffffff
0x000038ae      750c           jne 0x38bc
0x000038b0      488b442410     mov rax, qword [rsp + 0x10]
0x000038b5      80780100       cmp byte [rax + 1], 0
0x000038b9      0f95c0         setne al
0x000038bc      837c240802     cmp dword [rsp + 8], 2
0x000038c1      0f94c2         sete dl
0x000038c4      84c0           test al, al
0x000038c6      0f844c020000   je 0x3b18
0x000038cc      4531e4         xor r12d, r12d
0x000038cf      31c0           xor eax, eax
0x000038d1      0f1f80000000.  nop dword [rax]
0x000038d8      807c240d01     cmp byte [rsp + 0xd], 1
0x000038dd      0f850f010000   jne 0x39f2
0x000038e3      84d2           test dl, dl
0x000038e5      0f8507010000   jne 0x39f2
0x000038eb      488b742420     mov rsi, qword [rsp + 0x20]
0x000038f0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000038f3      7414           je 0x3909
0x000038f5      89da           mov edx, ebx
0x000038f7      c0ea05         shr dl, 5
0x000038fa      0fb6d2         movzx edx, dl
0x000038fd      8b1496         mov edx, dword [rsi + rdx*4]
0x00003900      0fa3da         bt edx, ebx
0x00003903      0f824a010000   jb 0x3a53
0x00003909      4584d2         test r10b, r10b
0x0000390c      0f8541010000   jne 0x3a53
0x00003912      83f001         xor eax, 1
0x00003915      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003919      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000391c      84c0           test al, al
0x0000391e      7420           je 0x3940                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003920      4d39fd         cmp r13, r15
0x00003923      7605           jbe 0x392a
0x00003925      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000392a      498d4701       lea rax, [r15 + 1]
0x0000392e      4939c5         cmp r13, rax
0x00003931      7606           jbe 0x3939
0x00003933      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003939      4983c702       add r15, 2
0x0000393d      4531c0         xor r8d, r8d
0x00003940      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003943      7304           jae 0x3949                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003945      43881c3e       mov byte [r14 + r15], bl
0x00003949      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000394e      4983c701       add r15, 1
0x00003952      b800000000     mov eax, 0
0x00003957      4584e4         test r12b, r12b
0x0000395a      0f44f8         cmove edi, eax
0x0000395d      40887c240e     mov byte [rsp + 0xe], dil
0x00003962      e931feffff     jmp 0x3798
0x00003967      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003970      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003973      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003977      83f802         cmp eax, 2
0x0000397a      0f84b8050000   je 0x3f38
0x00003980      83f805         cmp eax, 5
0x00003983      0f846f050000   je 0x3ef8
0x00003989      83f802         cmp eax, 2
0x0000398c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003991      0f94c2         sete dl
0x00003994      4531e4         xor r12d, r12d
0x00003997      31c0           xor eax, eax
0x00003999      e93affffff     jmp 0x38d8
0x0000399e      6690           nop
0x000039a0      4531d2         xor r10d, r10d
0x000039a3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000039a8      0f8402050000   je 0x3eb0
0x000039ae      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000039b3      31d2           xor edx, edx
0x000039b5      31c0           xor eax, eax
0x000039b7      bb27000000     mov ebx, 0x27                           ; '''
0x000039bc      e917ffffff     jmp 0x38d8
0x000039c1      0f1f80000000.  nop dword [rax]
0x000039c8      ba09000000     mov edx, 9
0x000039cd      bb74000000     mov ebx, 0x74                           ; 't'
0x000039d2      837c240802     cmp dword [rsp + 8], 2
0x000039d7      0f94c0         sete al
0x000039da      2244240f       and al, byte [rsp + 0xf]
0x000039de      0f854a010000   jne 0x3b2e
0x000039e4      807c240d00     cmp byte [rsp + 0xd], 0
0x000039e9      7565           jne 0x3a50
0x000039eb      89d3           mov ebx, edx
0x000039ed      4531e4         xor r12d, r12d
0x000039f0      31c0           xor eax, eax
0x000039f2      807c240f00     cmp byte [rsp + 0xf], 0
0x000039f7      0f85eefeffff   jne 0x38eb
0x000039fd      e907ffffff     jmp 0x3909                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003a02      660f1f440000   nop word [rax + rax]
0x00003a08      ba08000000     mov edx, 8
0x00003a0d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003a12      ebd0           jmp 0x39e4
0x00003a14      0f1f4000       nop dword [rax]
0x00003a18      837c240802     cmp dword [rsp + 8], 2
0x00003a1d      0f84cd030000   je 0x3df0
0x00003a23      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a28      0f8412020000   je 0x3c40
0x00003a2e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a33      0f8407020000   je 0x3c40
0x00003a39      48837c241800   cmp qword [rsp + 0x18], 0
0x00003a3f      0f85b6030000   jne 0x3dfb
0x00003a45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003a4a      660f1f440000   nop word [rax + rax]
0x00003a50      4531e4         xor r12d, r12d
0x00003a53      837c240802     cmp dword [rsp + 8], 2
0x00003a58      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003a5b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a60      89d0           mov eax, edx
0x00003a62      0f8550080000   jne 0x42b8
0x00003a68      4489c0         mov eax, r8d
0x00003a6b      83f001         xor eax, 1
0x00003a6e      20d0           and al, dl
0x00003a70      742f           je 0x3aa1
0x00003a72      4d39fd         cmp r13, r15
0x00003a75      7605           jbe 0x3a7c
0x00003a77      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003a7c      498d5701       lea rdx, [r15 + 1]
0x00003a80      4939d5         cmp r13, rdx
0x00003a83      7606           jbe 0x3a8b
0x00003a85      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003a8b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003a8f      4939d5         cmp r13, rdx
0x00003a92      7606           jbe 0x3a9a
0x00003a94      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003a9a      4983c703       add r15, 3
0x00003a9e      4189c0         mov r8d, eax
0x00003aa1      4d39fd         cmp r13, r15
0x00003aa4      7605           jbe 0x3aab
0x00003aa6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003aab      4983c701       add r15, 1
0x00003aaf      4883c501       add rbp, 1
0x00003ab3      e988feffff     jmp 0x3940
0x00003ab8      0f1f84000000.  nop dword [rax + rax]
0x00003ac0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ac5      0f85c8010000   jne 0x3c93
0x00003acb      31d2           xor edx, edx
0x00003acd      f644247801     test byte [rsp + 0x78], 1
0x00003ad2      0f8413ffffff   je 0x39eb
0x00003ad8      4883c501       add rbp, 1
0x00003adc      e9b7fcffff     jmp 0x3798
0x00003ae1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003ae8      837c240802     cmp dword [rsp + 8], 2
0x00003aed      0f94c2         sete dl
0x00003af0      31c0           xor eax, eax
0x00003af2      e9e1fdffff     jmp 0x38d8
0x00003af7      660f1f840000.  nop word [rax + rax]
0x00003b00      ba07000000     mov edx, 7
0x00003b05      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003b0a      e9d5feffff     jmp 0x39e4
0x00003b0f      90             nop
0x00003b10      837c240802     cmp dword [rsp + 8], 2
0x00003b15      0f94c2         sete dl
0x00003b18      4885ed         test rbp, rbp
0x00003b1b      0f85abfdffff   jne 0x38cc
0x00003b21      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003b26      20d0           and al, dl
0x00003b28      0f84aafdffff   je 0x38d8
0x00003b2e      4c89dd         mov rbp, r11
0x00003b31      c74424080200.  mov dword [rsp + 8], 2
0x00003b39      e9fb060000     jmp 0x4239
0x00003b3e      6690           nop
0x00003b40      837c240802     cmp dword [rsp + 8], 2
0x00003b45      0f94c2         sete dl
0x00003b48      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003b4b      ebd4           jmp 0x3b21
0x00003b4d      0f1f00         nop dword [rax]
0x00003b50      837c240802     cmp dword [rsp + 8], 2
0x00003b55      bb20000000     mov ebx, 0x20                           ; "@"
0x00003b5a      0f94c2         sete dl
0x00003b5d      ebc2           jmp 0x3b21
0x00003b5f      90             nop
0x00003b60      ba0d000000     mov edx, 0xd
0x00003b65      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003b6a      e963feffff     jmp 0x39d2
0x00003b6f      90             nop
0x00003b70      ba0c000000     mov edx, 0xc
0x00003b75      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003b7a      e965feffff     jmp 0x39e4
0x00003b7f      90             nop
0x00003b80      ba0b000000     mov edx, 0xb
0x00003b85      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003b8a      e955feffff     jmp 0x39e4
0x00003b8f      90             nop
0x00003b90      ba0a000000     mov edx, 0xa
0x00003b95      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003b9a      e933feffff     jmp 0x39d2
0x00003b9f      90             nop
0x00003ba0      4531d2         xor r10d, r10d
0x00003ba3      0f1f440000     nop dword [rax + rax]
0x00003ba8      48837c245801   cmp qword [rsp + 0x58], 1
0x00003bae      0f85a4030000   jne 0x3f58
0x00003bb4      4c895c2438     mov qword [rsp + 0x38], r11
0x00003bb9      4488442430     mov byte [rsp + 0x30], r8b
0x00003bbe      4488542428     mov byte [rsp + 0x28], r10b
0x00003bc3      e8b8deffff     call sym.imp.__ctype_b_loc
0x00003bc8      488b08         mov rcx, qword [rax]
0x00003bcb      0fb6d3         movzx edx, bl
0x00003bce      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003bd4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003bda      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003bdf      bf01000000     mov edi, 1
0x00003be4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003be8      66250040       and ax, 0x4000                          ; "L)\xf2L\x89\xee\xe8\x15@"
0x00003bec      410f95c4       setne r12b
0x00003bf0      0f94c0         sete al
0x00003bf3      2244240d       and al, byte [rsp + 0xd]
0x00003bf7      84c0           test al, al
0x00003bf9      0f8592090000   jne 0x4591
0x00003bff      837c240802     cmp dword [rsp + 8], 2
0x00003c04      0f94c2         sete dl
0x00003c07      e9ccfcffff     jmp 0x38d8
0x00003c0c      0f1f4000       nop dword [rax]
0x00003c10      410fb619       movzx ebx, byte [r9]
0x00003c14      80fb7e         cmp bl, 0x7e
0x00003c17      7787           ja 0x3ba0
0x00003c19      488d0d086d00.  lea rcx, [0x0000a928]
0x00003c20      0fb6d3         movzx edx, bl
0x00003c23      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003c27      4801c8         add rax, rcx
0x00003c2a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003c2c      0f1f4000       nop dword [rax]
0x00003c30      4531d2         xor r10d, r10d
0x00003c33      807c240d00     cmp byte [rsp + 0xd], 0
0x00003c38      0f85f0fdffff   jne 0x3a2e
0x00003c3e      6690           nop
0x00003c40      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003c45      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003c4a      e995fdffff     jmp 0x39e4
0x00003c4f      90             nop
0x00003c50      ba0c000000     mov edx, 0xc
0x00003c55      4531d2         xor r10d, r10d
0x00003c58      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003c5d      e982fdffff     jmp 0x39e4
0x00003c62      660f1f440000   nop word [rax + rax]
0x00003c68      ba0a000000     mov edx, 0xa
0x00003c6d      4531d2         xor r10d, r10d
0x00003c70      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003c75      e958fdffff     jmp 0x39d2
0x00003c7a      660f1f440000   nop word [rax + rax]
0x00003c80      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003c85      e9c6fdffff     jmp 0x3a50
0x00003c8a      660f1f440000   nop word [rax + rax]
0x00003c90      4531d2         xor r10d, r10d
0x00003c93      837c240802     cmp dword [rsp + 8], 2
0x00003c98      0f94c2         sete dl
0x00003c9b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ca0      0f85940b0000   jne 0x483a
0x00003ca6      4489c0         mov eax, r8d
0x00003ca9      4c89f9         mov rcx, r15
0x00003cac      83f001         xor eax, 1
0x00003caf      20d0           and al, dl
0x00003cb1      742d           je 0x3ce0
0x00003cb3      4d39fd         cmp r13, r15
0x00003cb6      7605           jbe 0x3cbd
0x00003cb8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003cbd      498d4f01       lea rcx, [r15 + 1]
0x00003cc1      4939cd         cmp r13, rcx
0x00003cc4      7606           jbe 0x3ccc
0x00003cc6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003ccc      498d4f02       lea rcx, [r15 + 2]
0x00003cd0      4939cd         cmp r13, rcx
0x00003cd3      0f8730060000   ja 0x4309
0x00003cd9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003cdd      4189c0         mov r8d, eax
0x00003ce0      4939cd         cmp r13, rcx
0x00003ce3      7605           jbe 0x3cea
0x00003ce5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003cea      837c240802     cmp dword [rsp + 8], 2
0x00003cef      4c8d7901       lea r15, [rcx + 1]
0x00003cf3      0f8400060000   je 0x42f9
0x00003cf9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003cfd      4c39d8         cmp rax, r11
0x00003d00      7319           jae 0x3d1b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003d02      488b442410     mov rax, qword [rsp + 0x10]
0x00003d07      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003d0c      88442428       mov byte [rsp + 0x28], al
0x00003d10      83e830         sub eax, 0x30
0x00003d13      3c09           cmp al, 9
0x00003d15      0f862e080000   jbe 0x4549
0x00003d1b      4489e0         mov eax, r12d
0x00003d1e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003d23      4531e4         xor r12d, r12d
0x00003d26      e9adfbffff     jmp 0x38d8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003d2b      0f1f440000     nop dword [rax + rax]
0x00003d30      837c240802     cmp dword [rsp + 8], 2
0x00003d35      4589d4         mov r12d, r10d
0x00003d38      0f94c2         sete dl
0x00003d3b      4531d2         xor r10d, r10d
0x00003d3e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003d40      e993fbffff     jmp 0x38d8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003d45      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003d48      837c240802     cmp dword [rsp + 8], 2
0x00003d4d      0f94c2         sete dl
0x00003d50      4531d2         xor r10d, r10d
0x00003d53      e9c0fdffff     jmp 0x3b18
0x00003d58      0f1f84000000.  nop dword [rax + rax]
0x00003d60      837c240802     cmp dword [rsp + 8], 2
0x00003d65      0f94c2         sete dl
0x00003d68      4531d2         xor r10d, r10d
0x00003d6b      4531e4         xor r12d, r12d
0x00003d6e      e9aefdffff     jmp 0x3b21
0x00003d73      0f1f440000     nop dword [rax + rax]
0x00003d78      837c240802     cmp dword [rsp + 8], 2
0x00003d7d      4589d4         mov r12d, r10d
0x00003d80      bb20000000     mov ebx, 0x20                           ; "@"
0x00003d85      0f94c2         sete dl
0x00003d88      4531d2         xor r10d, r10d
0x00003d8b      e991fdffff     jmp 0x3b21
0x00003d90      ba0d000000     mov edx, 0xd
0x00003d95      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003d98      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003d9d      e930fcffff     jmp 0x39d2
0x00003da2      660f1f440000   nop word [rax + rax]
0x00003da8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003dad      e99efcffff     jmp 0x3a50
0x00003db2      660f1f440000   nop word [rax + rax]
0x00003db8      ba09000000     mov edx, 9
0x00003dbd      4531d2         xor r10d, r10d
0x00003dc0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003dc5      e908fcffff     jmp 0x39d2
0x00003dca      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003dd0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003dd5      e976fcffff     jmp 0x3a50
0x00003dda      660f1f440000   nop word [rax + rax]
0x00003de0      4531d2         xor r10d, r10d
0x00003de3      e998faffff     jmp 0x3880
0x00003de8      0f1f84000000.  nop dword [rax + rax]
0x00003df0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003df5      0f8565090000   jne 0x4760
0x00003dfb      4883c501       add rbp, 1
0x00003dff      4489c0         mov eax, r8d
0x00003e02      4531e4         xor r12d, r12d
0x00003e05      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e0a      e90dfbffff     jmp 0x391c
0x00003e0f      90             nop
0x00003e10      837c240802     cmp dword [rsp + 8], 2
0x00003e15      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003e1a      4589c4         mov r12d, r8d
0x00003e1d      4c89dd         mov rbp, r11
0x00003e20      0f94c2         sete dl
0x00003e23      89d8           mov eax, ebx
0x00003e25      4d85ff         test r15, r15
0x00003e28      0f94c1         sete cl
0x00003e2b      21d0           and eax, edx
0x00003e2d      20c8           and al, cl
0x00003e2f      0f85610a0000   jne 0x4896                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003e35      89d8           mov eax, ebx
0x00003e37      83f001         xor eax, 1
0x00003e3a      20c2           and dl, al
0x00003e3c      0f846a090000   je 0x47ac
0x00003e42      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003e47      0f845d090000   je 0x47aa
0x00003e4d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003e52      0f85f5090000   jne 0x484d
0x00003e58      4d85ed         test r13, r13
0x00003e5b      0f94c0         sete al
0x00003e5e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003e64      0f95c2         setne dl
0x00003e67      20d0           and al, dl
0x00003e69      0f841d0a0000   je 0x488c
0x00003e6f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e74      488d1d226800.  lea rbx, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003e7b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003e7f      c74424080200.  mov dword [rsp + 8], 2
0x00003e87      41bf01000000   mov r15d, 1
0x00003e8d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003e96      c644240f00     mov byte [rsp + 0xf], 0
0x00003e9b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003ea0      8844247c       mov byte [rsp + 0x7c], al
0x00003ea4      e9daf8ffff     jmp 0x3783
0x00003ea9      0f1f80000000.  nop dword [rax]
0x00003eb0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003eb5      0f85a5080000   jne 0x4760
0x00003ebb      4d85ed         test r13, r13
0x00003ebe      0f84fc030000   je 0x42c0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003ec4      31d2           xor edx, edx
0x00003ec6      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ecc      0f85ee030000   jne 0x42c0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003ed2      4c896c2450     mov qword [rsp + 0x50], r13
0x00003ed7      4983c703       add r15, 3
0x00003edb      31c0           xor eax, eax
0x00003edd      448864247c     mov byte [rsp + 0x7c], r12b
0x00003ee2      4531c0         xor r8d, r8d
0x00003ee5      4989d5         mov r13, rdx
0x00003ee8      bb27000000     mov ebx, 0x27                           ; '''
0x00003eed      e917faffff     jmp 0x3909
0x00003ef2      660f1f440000   nop word [rax + rax]
0x00003ef8      f644247804     test byte [rsp + 0x78], 4
0x00003efd      7421           je 0x3f20
0x00003eff      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003f03      4c39d9         cmp rcx, r11
0x00003f06      7318           jae 0x3f20
0x00003f08      488b442410     mov rax, qword [rsp + 0x10]
0x00003f0d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003f12      0f848a070000   je 0x46a2
0x00003f18      0f1f84000000.  nop dword [rax + rax]
0x00003f20      31d2           xor edx, edx
0x00003f22      4531e4         xor r12d, r12d
0x00003f25      31c0           xor eax, eax
0x00003f27      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f2c      e9a7f9ffff     jmp 0x38d8
0x00003f31      0f1f80000000.  nop dword [rax]
0x00003f38      807c240f00     cmp byte [rsp + 0xf], 0
0x00003f3d      0f851d080000   jne 0x4760
0x00003f43      4531e4         xor r12d, r12d
0x00003f46      31c0           xor eax, eax
0x00003f48      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003f4d      e9b7f9ffff     jmp 0x3909                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003f52      660f1f440000   nop word [rax + rax]
0x00003f58      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003f60      4983fbff       cmp r11, 0xffffffffffffffff
0x00003f64      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003f70      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003f75      752d           jne 0x3fa4
0x00003f77      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003f7c      4488442440     mov byte [rsp + 0x40], r8b
0x00003f81      4488542438     mov byte [rsp + 0x38], r10b
0x00003f86      4c894c2430     mov qword [rsp + 0x30], r9
0x00003f8b      e820d8ffff     call sym.imp.strlen
0x00003f90      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003f96      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003f9c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003f9f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003fa4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003fac      31c9           xor ecx, ecx
0x00003fae      885c247e       mov byte [rsp + 0x7e], bl
0x00003fb2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003fb7      4889cb         mov rbx, rcx
0x00003fba      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003fc2      4889442438     mov qword [rsp + 0x38], rax
0x00003fc7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003fcc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003fd4      4c89742440     mov qword [rsp + 0x40], r14
0x00003fd9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003fde      4c895c2430     mov qword [rsp + 0x30], r11
0x00003fe3      488b442410     mov rax, qword [rsp + 0x10]
0x00003fe8      4c8d741d00     lea r14, [rbp + rbx]
0x00003fed      488b542430     mov rdx, qword [rsp + 0x30]
0x00003ff2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003ff7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003ffc      4e8d2c30       lea r13, [rax + r14]
0x00004000      4c29f2         sub rdx, r14
0x00004003      4c89ee         mov rsi, r13
0x00004006      e815400000     call sym.rpl_mbrtowc
0x0000400b      4885c0         test rax, rax
0x0000400e      4989c7         mov r15, rax
0x00004011      744e           je 0x4061
0x00004013      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004017      0f8418060000   je 0x4635
0x0000401d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004021      0f849a050000   je 0x45c1
0x00004027      837c240802     cmp dword [rsp + 8], 2
0x0000402c      0f94c0         sete al
0x0000402f      2244240f       and al, byte [rsp + 0xf]
0x00004033      0f8597010000   jne 0x41d0
0x00004039      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004040      e82bdaffff     call sym.imp.iswprint
0x00004045      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000404a      85c0           test eax, eax
0x0000404c      b800000000     mov eax, 0
0x00004051      440f44e0       cmove r12d, eax
0x00004055      4c01fb         add rbx, r15
0x00004058      e803daffff     call sym.imp.mbsinit
0x0000405d      85c0           test eax, eax
0x0000405f      7482           je 0x3fe3
0x00004061      4489e2         mov edx, r12d
0x00004064      4889df         mov rdi, rbx
0x00004067      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000406d      83f201         xor edx, 1
0x00004070      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004075      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000407b      2254240d       and dl, byte [rsp + 0xd]
0x0000407f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004087      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000408c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004091      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004096      4883ff01       cmp rdi, 1
0x0000409a      0f86fb050000   jbe 0x469b
0x000040a0      4889f9         mov rcx, rdi
0x000040a3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000040a5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000040ab      4801e9         add rcx, rbp
0x000040ae      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000040b3      e9b6000000     jmp 0x416e
0x000040b8      0f1f84000000.  nop dword [rax + rax]
0x000040c0      837c240802     cmp dword [rsp + 8], 2
0x000040c5      0f94c0         sete al
0x000040c8      4584c9         test r9b, r9b
0x000040cb      0f85af040000   jne 0x4580
0x000040d1      4489c6         mov esi, r8d
0x000040d4      83f601         xor esi, 1
0x000040d7      4020f0         and al, sil
0x000040da      742f           je 0x410b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000040dc      4d39fd         cmp r13, r15
0x000040df      7605           jbe 0x40e6
0x000040e1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000040e6      498d7701       lea rsi, [r15 + 1]
0x000040ea      4939f5         cmp r13, rsi
0x000040ed      7606           jbe 0x40f5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000040ef      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000040f5      498d7702       lea rsi, [r15 + 2]
0x000040f9      4939f5         cmp r13, rsi
0x000040fc      7606           jbe 0x4104
0x000040fe      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004104      4983c703       add r15, 3
0x00004108      4189c0         mov r8d, eax
0x0000410b      4d39fd         cmp r13, r15
0x0000410e      7605           jbe 0x4115
0x00004110      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004115      498d4701       lea rax, [r15 + 1]
0x00004119      4939c5         cmp r13, rax
0x0000411c      760d           jbe 0x412b
0x0000411e      89d8           mov eax, ebx
0x00004120      c0e806         shr al, 6
0x00004123      83c030         add eax, 0x30
0x00004126      4388443e01     mov byte [r14 + r15 + 1], al
0x0000412b      498d4702       lea rax, [r15 + 2]
0x0000412f      4939c5         cmp r13, rax
0x00004132      7610           jbe 0x4144
0x00004134      89d8           mov eax, ebx
0x00004136      c0e803         shr al, 3
0x00004139      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000413c      83c030         add eax, 0x30
0x0000413f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004144      83e307         and ebx, 7
0x00004147      4883c501       add rbp, 1
0x0000414b      4983c703       add r15, 3
0x0000414f      83c330         add ebx, 0x30
0x00004152      4839cd         cmp rbp, rcx
0x00004155      0f83e5f7ffff   jae 0x3940
0x0000415b      89d6           mov esi, edx
0x0000415d      4d39fd         cmp r13, r15
0x00004160      7604           jbe 0x4166
0x00004162      43881c3e       mov byte [r14 + r15], bl
0x00004166      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000416a      4983c701       add r15, 1
0x0000416e      84d2           test dl, dl
0x00004170      0f854affffff   jne 0x40c0
0x00004176      89f0           mov eax, esi
0x00004178      83f001         xor eax, 1
0x0000417b      4421c0         and eax, r8d
0x0000417e      4584d2         test r10b, r10b
0x00004181      740e           je 0x4191
0x00004183      4d39fd         cmp r13, r15
0x00004186      7605           jbe 0x418d
0x00004188      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000418d      4983c701       add r15, 1
0x00004191      4883c501       add rbp, 1
0x00004195      4839cd         cmp rbp, rcx
0x00004198      0f837ef7ffff   jae 0x391c
0x0000419e      84c0           test al, al
0x000041a0      0f84f8030000   je 0x459e
0x000041a6      4d39fd         cmp r13, r15
0x000041a9      7605           jbe 0x41b0
0x000041ab      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000041b0      498d4701       lea rax, [r15 + 1]
0x000041b4      4939c5         cmp r13, rax
0x000041b7      7606           jbe 0x41bf
0x000041b9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000041bf      4983c702       add r15, 2
0x000041c3      4531d2         xor r10d, r10d
0x000041c6      4531c0         xor r8d, r8d
0x000041c9      eb92           jmp 0x415d
0x000041cb      0f1f440000     nop dword [rax + rax]
0x000041d0      4983ff01       cmp r15, 1
0x000041d4      0f845ffeffff   je 0x4039
0x000041da      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000041df      4a8d0c3f       lea rcx, [rdi + r15]
0x000041e3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000041e8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000041ec      eb0f           jmp 0x41fd
0x000041ee      6690           nop
0x000041f0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000041f4      4939d0         cmp r8, rdx
0x000041f7      0f843cfeffff   je 0x4039
0x000041fd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004200      83e95b         sub ecx, 0x5b
0x00004203      80f921         cmp cl, 0x21
0x00004206      77e8           ja 0x41f0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004208      be01000000     mov esi, 1
0x0000420d      48d3e6         shl rsi, cl
0x00004210      4889f1         mov rcx, rsi
0x00004213      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000421d      4885f1         test rcx, rsi
0x00004220      74ce           je 0x41f0
0x00004222      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004227      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000422c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004231      c74424080200.  mov dword [rsp + 8], 2
0x00004239      807c240d00     cmp byte [rsp + 0xd], 0
0x0000423e      7410           je 0x4250
0x00004240      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004242      b804000000     mov eax, 4
0x00004247      0f44442408     cmove eax, dword [rsp + 8]
0x0000424c      89442408       mov dword [rsp + 8], eax
0x00004250      4883ec08       sub rsp, 8
0x00004254      4889e9         mov rcx, rbp
0x00004257      4c89ee         mov rsi, r13
0x0000425a      ff742468       push qword [rsp + 0x68]
0x0000425e      ff742478       push qword [rsp + 0x78]
0x00004262      4c89f7         mov rdi, r14
0x00004265      6a00           push 0
0x00004267      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000426f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004274      488b542430     mov rdx, qword [rsp + 0x30]
0x00004279      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000427d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004282      4883c420       add rsp, 0x20
0x00004286      4989c7         mov r15, rax
0x00004289      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004291      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000429a      4c89f8         mov rax, r15
0x0000429d      0f8500060000   jne 0x48a3
0x000042a3      4881c4b80000.  add rsp, 0xb8
0x000042aa      5b             pop rbx
0x000042ab      5d             pop rbp
0x000042ac      415c           pop r12
0x000042ae      415d           pop r13
0x000042b0      415e           pop r14
0x000042b2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000042b4      c3             ret
0x000042b5      0f1f00         nop dword [rax]
0x000042b8      4c89dd         mov rbp, r11
0x000042bb      e979ffffff     jmp 0x4239
0x000042c0      4d39fd         cmp r13, r15
0x000042c3      7605           jbe 0x42ca
0x000042c5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000042ca      498d4701       lea rax, [r15 + 1]
0x000042ce      4939c5         cmp r13, rax
0x000042d1      7606           jbe 0x42d9
0x000042d3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000042d9      498d4702       lea rax, [r15 + 2]
0x000042dd      4939c5         cmp r13, rax
0x000042e0      0f86ec050000   jbe 0x48d2
0x000042e6      4c89ea         mov rdx, r13
0x000042e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000042ef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000042f4      e9d9fbffff     jmp 0x3ed2
0x000042f9      4489e0         mov eax, r12d
0x000042fc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004301      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004304      e900f6ffff     jmp 0x3909                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004309      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000430f      e9c5f9ffff     jmp 0x3cd9
0x00004314      85db           test ebx, ebx
0x00004316      0f8527f4ffff   jne 0x3743
0x0000431c      c644240d01     mov byte [rsp + 0xd], 1
0x00004321      4d85ed         test r13, r13
0x00004324      0f8590050000   jne 0x48ba
0x0000432a      488d056c6300.  lea rax, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004331      48c744245000.  mov qword [rsp + 0x50], 0
0x0000433a      c644240e01     mov byte [rsp + 0xe], 1
0x0000433f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004344      4531e4         xor r12d, r12d
0x00004347      c644240f00     mov byte [rsp + 0xf], 0
0x0000434c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004355      4889442448     mov qword [rsp + 0x48], rax
0x0000435a      41bf01000000   mov r15d, 1
0x00004360      c74424080200.  mov dword [rsp + 8], 2
0x00004368      e916f4ffff     jmp 0x3783                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000436d      0f1f00         nop dword [rax]
0x00004370      85db           test ebx, ebx
0x00004372      0f85f5030000   jne 0x476d
0x00004378      4d85ed         test r13, r13
0x0000437b      0f8425020000   je 0x45a6
0x00004381      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004385      c644240e01     mov byte [rsp + 0xe], 1
0x0000438a      4531e4         xor r12d, r12d
0x0000438d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004392      48c744245000.  mov qword [rsp + 0x50], 0
0x0000439b      488d05f96200.  lea rax, str.l______l                   ; 0xa69b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000043a2      c644240f00     mov byte [rsp + 0xf], 0
0x000043a7      c644240d01     mov byte [rsp + 0xd], 1
0x000043ac      48c744241801.  mov qword [rsp + 0x18], 1
0x000043b5      41bf01000000   mov r15d, 1
0x000043bb      4889442448     mov qword [rsp + 0x48], rax
0x000043c0      e9bef3ffff     jmp 0x3783
0x000043c5      488d05cf6200.  lea rax, str.l______l                   ; 0xa69b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000043cc      c644240e01     mov byte [rsp + 0xe], 1
0x000043d1      c644247c00     mov byte [rsp + 0x7c], 0
0x000043d6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000043d9      48c744245000.  mov qword [rsp + 0x50], 0
0x000043e2      c644240f01     mov byte [rsp + 0xf], 1
0x000043e7      c644240d01     mov byte [rsp + 0xd], 1
0x000043ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000043f5      4531ff         xor r15d, r15d
0x000043f8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000043fd      c74424080500.  mov dword [rsp + 8], 5
0x00004405      e979f3ffff     jmp 0x3783
0x0000440a      c644240e01     mov byte [rsp + 0xe], 1
0x0000440f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004414      4531e4         xor r12d, r12d
0x00004417      48c744245000.  mov qword [rsp + 0x50], 0
0x00004420      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004425      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004428      c644240d01     mov byte [rsp + 0xd], 1
0x0000442d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004436      48c744244800.  mov qword [rsp + 0x48], 0
0x0000443f      e93ff3ffff     jmp 0x3783
0x00004444      837c24080a     cmp dword [rsp + 8], 0xa
0x00004449      7456           je 0x44a1
0x0000444b      488d354d6200.  lea rsi, [0x0000a69f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004452      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004454      ba05000000     mov edx, 5
0x00004459      e832d3ffff     call sym.imp.dcgettext
0x0000445e      4889c1         mov rcx, rax
0x00004461      4889442468     mov qword [rsp + 0x68], rax
0x00004466      488d05326200.  lea rax, [0x0000a69f]                   ; "`"
0x0000446d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004470      0f8498030000   je 0x480e
0x00004476      488d35206200.  lea rsi, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000447d      31ff           xor edi, edi
0x0000447f      ba05000000     mov edx, 5
0x00004484      e807d3ffff     call sym.imp.dcgettext
0x00004489      4889c1         mov rcx, rax
0x0000448c      4889442460     mov qword [rsp + 0x60], rax
0x00004491      488d05056200.  lea rax, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004498      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000449b      0f8483030000   je 0x4824
0x000044a1      4531ff         xor r15d, r15d
0x000044a4      85db           test ebx, ebx
0x000044a6      0f84c1010000   je 0x466d
0x000044ac      85db           test ebx, ebx
0x000044ae      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000044b3      0f9544240f     setne byte [rsp + 0xf]
0x000044b8      4531e4         xor r12d, r12d
0x000044bb      4889df         mov rdi, rbx
0x000044be      e8edd2ffff     call sym.imp.strlen
0x000044c3      48895c2448     mov qword [rsp + 0x48], rbx
0x000044c8      4889442418     mov qword [rsp + 0x18], rax
0x000044cd      c644240e01     mov byte [rsp + 0xe], 1
0x000044d2      c644247c00     mov byte [rsp + 0x7c], 0
0x000044d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000044e0      c644240d01     mov byte [rsp + 0xd], 1
0x000044e5      e999f2ffff     jmp 0x3783
0x000044ea      c644240e01     mov byte [rsp + 0xe], 1
0x000044ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000044f4      4531e4         xor r12d, r12d
0x000044f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00004500      c644240f00     mov byte [rsp + 0xf], 0
0x00004505      4531ff         xor r15d, r15d
0x00004508      c644240d00     mov byte [rsp + 0xd], 0
0x0000450d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004516      48c744244800.  mov qword [rsp + 0x48], 0
0x0000451f      e95ff2ffff     jmp 0x3783
0x00004524      c644240e01     mov byte [rsp + 0xe], 1
0x00004529      c644247c00     mov byte [rsp + 0x7c], 0
0x0000452e      4531e4         xor r12d, r12d
0x00004531      48c744245000.  mov qword [rsp + 0x50], 0
0x0000453a      c644240f01     mov byte [rsp + 0xf], 1
0x0000453f      c644240d01     mov byte [rsp + 0xd], 1
0x00004544      e91af2ffff     jmp 0x3763
0x00004549      4d39fd         cmp r13, r15
0x0000454c      7605           jbe 0x4553
0x0000454e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004553      488d4102       lea rax, [rcx + 2]
0x00004557      4939c5         cmp r13, rax
0x0000455a      7606           jbe 0x4562
0x0000455c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004562      4489e0         mov eax, r12d
0x00004565      4c8d7903       lea r15, [rcx + 3]
0x00004569      4531e4         xor r12d, r12d
0x0000456c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004571      e962f3ffff     jmp 0x38d8
0x00004576      662e0f1f8400.  nop word cs:[rax + rax]
0x00004580      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004585      4c89dd         mov rbp, r11
0x00004588      885c240d       mov byte [rsp + 0xd], bl
0x0000458c      e9a8fcffff     jmp 0x4239
0x00004591      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004596      4531e4         xor r12d, r12d
0x00004599      e902fbffff     jmp 0x40a0
0x0000459e      4531d2         xor r10d, r10d
0x000045a1      e9b7fbffff     jmp 0x415d
0x000045a6      48c744245000.  mov qword [rsp + 0x50], 0
0x000045af      c644240e01     mov byte [rsp + 0xe], 1
0x000045b4      4531e4         xor r12d, r12d
0x000045b7      c644247c00     mov byte [rsp + 0x7c], 0
0x000045bc      e9dafdffff     jmp 0x439b
0x000045c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000045c6      4c89f6         mov rsi, r14
0x000045c9      4c89e9         mov rcx, r13
0x000045cc      4889d8         mov rax, rbx
0x000045cf      4889df         mov rdi, rbx
0x000045d2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000045d8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000045dd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000045e5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000045e8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000045ee      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000045f6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000045fb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004600      7326           jae 0x4628
0x00004602      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004605      7510           jne 0x4617
0x00004607      eb1f           jmp 0x4628
0x00004609      0f1f80000000.  nop dword [rax]
0x00004610      41803c0100     cmp byte [r9 + rax], 0
0x00004615      740e           je 0x4625
0x00004617      4883c001       add rax, 1
0x0000461b      488d540500     lea rdx, [rbp + rax]
0x00004620      4939d3         cmp r11, rdx
0x00004623      77eb           ja 0x4610
0x00004625      4889c7         mov rdi, rax
0x00004628      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000462d      4531e4         xor r12d, r12d
0x00004630      e961faffff     jmp 0x4096
0x00004635      4889df         mov rdi, rbx
0x00004638      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000463e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004643      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004649      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004651      4531e4         xor r12d, r12d
0x00004654      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004659      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000465e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004663      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004668      e929faffff     jmp 0x4096
0x0000466d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004672      0fb602         movzx eax, byte [rdx]
0x00004675      84c0           test al, al
0x00004677      0f842ffeffff   je 0x44ac
0x0000467d      0f1f00         nop dword [rax]
0x00004680      4d39fd         cmp r13, r15
0x00004683      7604           jbe 0x4689
0x00004685      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004689      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000468d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004692      84c0           test al, al
0x00004694      75ea           jne 0x4680
0x00004696      e911feffff     jmp 0x44ac
0x0000469b      89d0           mov eax, edx
0x0000469d      e955f5ffff     jmp 0x3bf7
0x000046a2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000046a6      80fb3e         cmp bl, 0x3e
0x000046a9      0f8771f8ffff   ja 0x3f20
0x000046af      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000046b9      480fa3d8       bt rax, rbx
0x000046bd      0f835df8ffff   jae 0x3f20
0x000046c3      807c240f00     cmp byte [rsp + 0xf], 0
0x000046c8      0f85e4010000   jne 0x48b2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000046ce      4d39fd         cmp r13, r15
0x000046d1      7605           jbe 0x46d8
0x000046d3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000046d8      498d4701       lea rax, [r15 + 1]
0x000046dc      4939c5         cmp r13, rax
0x000046df      7606           jbe 0x46e7
0x000046e1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000046e7      498d4702       lea rax, [r15 + 2]
0x000046eb      4939c5         cmp r13, rax
0x000046ee      7606           jbe 0x46f6
0x000046f0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000046f6      498d4703       lea rax, [r15 + 3]
0x000046fa      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000046fd      7606           jbe 0x4705
0x000046ff      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004705      4983c704       add r15, 4
0x00004709      31d2           xor edx, edx
0x0000470b      4531e4         xor r12d, r12d
0x0000470e      31c0           xor eax, eax
0x00004710      4889cd         mov rbp, rcx
0x00004713      e9c0f1ffff     jmp 0x38d8
0x00004718      85db           test ebx, ebx
0x0000471a      0f8488010000   je 0x48a8
0x00004720      488d05765f00.  lea rax, [0x0000a69d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004727      c644240e01     mov byte [rsp + 0xe], 1
0x0000472c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004731      4531e4         xor r12d, r12d
0x00004734      48c744245000.  mov qword [rsp + 0x50], 0
0x0000473d      c644240f01     mov byte [rsp + 0xf], 1
0x00004742      c644240d00     mov byte [rsp + 0xd], 0
0x00004747      48c744241801.  mov qword [rsp + 0x18], 1
0x00004750      4531ff         xor r15d, r15d
0x00004753      4889442448     mov qword [rsp + 0x48], rax
0x00004758      e926f0ffff     jmp 0x3783
0x0000475d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004760      4c89dd         mov rbp, r11
0x00004763      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004768      e9ccfaffff     jmp 0x4239
0x0000476d      488d05275f00.  lea rax, str.l______l                   ; 0xa69b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004774      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004779      c644247c00     mov byte [rsp + 0x7c], 0
0x0000477e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004781      48c744245000.  mov qword [rsp + 0x50], 0
0x0000478a      c644240f01     mov byte [rsp + 0xf], 1
0x0000478f      c644240d01     mov byte [rsp + 0xd], 1
0x00004794      48c744241801.  mov qword [rsp + 0x18], 1
0x0000479d      4531ff         xor r15d, r15d
0x000047a0      4889442448     mov qword [rsp + 0x48], rax
0x000047a5      e9d9efffff     jmp 0x3783
0x000047aa      89d0           mov eax, edx
0x000047ac      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000047b1      4885db         test rbx, rbx
0x000047b4      742c           je 0x47e2
0x000047b6      84c0           test al, al
0x000047b8      7428           je 0x47e2
0x000047ba      0fb60b         movzx ecx, byte [rbx]
0x000047bd      4889d8         mov rax, rbx
0x000047c0      84c9           test cl, cl
0x000047c2      741e           je 0x47e2
0x000047c4      4c89fa         mov rdx, r15
0x000047c7      4c29f8         sub rax, r15
0x000047ca      4939d5         cmp r13, rdx
0x000047cd      7604           jbe 0x47d3
0x000047cf      41880c16       mov byte [r14 + rdx], cl
0x000047d3      4883c201       add rdx, 1
0x000047d7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000047db      84c9           test cl, cl
0x000047dd      75eb           jne 0x47ca
0x000047df      4989d7         mov r15, rdx
0x000047e2      4d39fd         cmp r13, r15
0x000047e5      0f869efaffff   jbe 0x4289
0x000047eb      43c6043e00     mov byte [r14 + r15], 0
0x000047f0      e994faffff     jmp 0x4289
0x000047f5      837c240802     cmp dword [rsp + 8], 2
0x000047fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000047ff      4c89dd         mov rbp, r11
0x00004802      0f94c0         sete al
0x00004805      885c240d       mov byte [rsp + 0xd], bl
0x00004809      e92bfaffff     jmp 0x4239
0x0000480e      8b742408       mov esi, dword [rsp + 8]
0x00004812      4889cf         mov rdi, rcx
0x00004815      e8a6edffff     call sym.gettext_quote.part.1
0x0000481a      4889442468     mov qword [rsp + 0x68], rax
0x0000481f      e952fcffff     jmp 0x4476
0x00004824      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004828      4889cf         mov rdi, rcx
0x0000482b      e890edffff     call sym.gettext_quote.part.1
0x00004830      4889442460     mov qword [rsp + 0x60], rax
0x00004835      e967fcffff     jmp 0x44a1
0x0000483a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000483f      4c89dd         mov rbp, r11
0x00004842      89d0           mov eax, edx
0x00004844      885c240d       mov byte [rsp + 0xd], bl
0x00004848      e9ecf9ffff     jmp 0x4239
0x0000484d      4883ec08       sub rsp, 8
0x00004851      41b805000000   mov r8d, 5
0x00004857      4c89d9         mov rcx, r11
0x0000485a      ff742468       push qword [rsp + 0x68]
0x0000485e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004862      4c89f7         mov rdi, r14
0x00004865      ff742438       push qword [rsp + 0x38]
0x00004869      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004871      488b542430     mov rdx, qword [rsp + 0x30]
0x00004876      488b742470     mov rsi, qword [rsp + 0x70]
0x0000487b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004880      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004884      4989c7         mov r15, rax
0x00004887      e9fdf9ffff     jmp 0x4289
0x0000488c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004891      e916ffffff     jmp 0x47ac
0x00004896      c74424080200.  mov dword [rsp + 8], 2
0x0000489e      e996f9ffff     jmp 0x4239
0x000048a3      e838cfffff     call sym.imp.__stack_chk_fail
0x000048a8      c644240d00     mov byte [rsp + 0xd], 0
0x000048ad      e96ffaffff     jmp 0x4321
0x000048b2      4c89dd         mov rbp, r11
0x000048b5      e996f9ffff     jmp 0x4250
0x000048ba      c644240e01     mov byte [rsp + 0xe], 1
0x000048bf      31c0           xor eax, eax
0x000048c1      4531e4         xor r12d, r12d
0x000048c4      48c744245000.  mov qword [rsp + 0x50], 0
0x000048cd      e9a2f5ffff     jmp 0x3e74
0x000048d2      4c89ea         mov rdx, r13
0x000048d5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000048da      e9f3f5ffff     jmp 0x3ed2
0x000048df      e80cceffff     call sym.imp.abort
0x000048e4      6690           nop
0x000048e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000048f0      4157           push r15
0x000048f2      4156           push r14
0x000048f4      4c63ff         movsxd r15, edi
0x000048f7      4155           push r13
0x000048f9      4154           push r12
0x000048fb      4989d6         mov r14, rdx
0x000048fe      55             push rbp
0x000048ff      53             push rbx
0x00004900      4889cd         mov rbp, rcx
0x00004903      4883ec28       sub rsp, 0x28
0x00004907      4889742408     mov qword [rsp + 8], rsi
0x0000490c      e8efcdffff     call sym.imp.__errno_location
0x00004911      4989c5         mov r13, rax
0x00004914      8b00           mov eax, dword [rax]
0x00004916      4585ff         test r15d, r15d
0x00004919      488b1d609720.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00004920      89442418       mov dword [rsp + 0x18], eax
0x00004924      0f8867010000   js 0x4a91
0x0000492a      44393d479720.  cmp dword [obj.nslots], r15d            ; [0x20e078:4]=1
0x00004931      7f62           jg 0x4995
0x00004933      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000493a      0f8456010000   je 0x4a96
0x00004940      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004944      488d05459720.  lea rax, obj.slotvec0                   ; 0x20e090
0x0000494b      4963f4         movsxd rsi, r12d
0x0000494e      48c1e604       shl rsi, 4
0x00004952      4839c3         cmp rbx, rax
0x00004955      0f8415010000   je 0x4a70
0x0000495b      4889df         mov rdi, rbx
0x0000495e      e8ed0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004963      4889c3         mov rbx, rax
0x00004966      488905139720.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x0000496d      48633d049720.  movsxd rdi, dword [obj.nslots]          ; [0x20e078:4]=1
0x00004974      4489e2         mov edx, r12d
0x00004977      31f6           xor esi, esi
0x00004979      29fa           sub edx, edi
0x0000497b      48c1e704       shl rdi, 4
0x0000497f      4863d2         movsxd rdx, edx
0x00004982      4801df         add rdi, rbx
0x00004985      48c1e204       shl rdx, 4
0x00004989      e8c2ceffff     call sym.imp.memset
0x0000498e      448925e39620.  mov dword [obj.nslots], r12d            ; [0x20e078:4]=1
0x00004995      8b4504         mov eax, dword [rbp + 4]
0x00004998      49c1e704       shl r15, 4
0x0000499c      4883ec08       sub rsp, 8
0x000049a0      4c01fb         add rbx, r15
0x000049a3      4c8d7d08       lea r15, [rbp + 8]
0x000049a7      448b4500       mov r8d, dword [rbp]
0x000049ab      4c8b1b         mov r11, qword [rbx]
0x000049ae      4c8b6308       mov r12, qword [rbx + 8]
0x000049b2      4c89f1         mov rcx, r14
0x000049b5      83c801         or eax, 1
0x000049b8      89442424       mov dword [rsp + 0x24], eax
0x000049bc      ff7530         push qword [rbp + 0x30]
0x000049bf      4189c1         mov r9d, eax
0x000049c2      ff7528         push qword [rbp + 0x28]
0x000049c5      4157           push r15
0x000049c7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000049ca      488b542428     mov rdx, qword [rsp + 0x28]
0x000049cf      4c89e7         mov rdi, r12
0x000049d2      4c895c2430     mov qword [rsp + 0x30], r11
0x000049d7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000049dc      4883c420       add rsp, 0x20
0x000049e0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000049e5      4939c3         cmp r11, rax
0x000049e8      7767           ja 0x4a51
0x000049ea      488d7001       lea rsi, [rax + 1]
0x000049ee      488d054b9720.  lea rax, obj.slot0                      ; 0x20e140
0x000049f5      4939c4         cmp r12, rax
0x000049f8      488933         mov qword [rbx], rsi
0x000049fb      7412           je 0x4a0f
0x000049fd      4c89e7         mov rdi, r12
0x00004a00      4889742410     mov qword [rsp + 0x10], rsi
0x00004a05      e886d0ffff     call sym..plt.got
0x00004a0a      488b742410     mov rsi, qword [rsp + 0x10]
0x00004a0f      4889f7         mov rdi, rsi
0x00004a12      4889742410     mov qword [rsp + 0x10], rsi
0x00004a17      e8d40e0000     call sym.xmalloc
0x00004a1c      4883ec08       sub rsp, 8
0x00004a20      48894308       mov qword [rbx + 8], rax
0x00004a24      448b4500       mov r8d, dword [rbp]
0x00004a28      ff7530         push qword [rbp + 0x30]
0x00004a2b      ff7528         push qword [rbp + 0x28]
0x00004a2e      4c89f1         mov rcx, r14
0x00004a31      4157           push r15
0x00004a33      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004a38      4889c7         mov rdi, rax
0x00004a3b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004a40      488b742430     mov rsi, qword [rsp + 0x30]
0x00004a45      4989c4         mov r12, rax
0x00004a48      e863ecffff     call sym.quotearg_buffer_restyled
0x00004a4d      4883c420       add rsp, 0x20
0x00004a51      8b442418       mov eax, dword [rsp + 0x18]
0x00004a55      41894500       mov dword [r13], eax
0x00004a59      4883c428       add rsp, 0x28
0x00004a5d      4c89e0         mov rax, r12
0x00004a60      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004a61      5d             pop rbp
0x00004a62      415c           pop r12
0x00004a64      415d           pop r13
0x00004a66      415e           pop r14
0x00004a68      415f           pop r15
0x00004a6a      c3             ret
0x00004a6b      0f1f440000     nop dword [rax + rax]
0x00004a70      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004a72      e8d90e0000     call sym.xrealloc
0x00004a77      660f6f051196.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004a7f      4889c3         mov rbx, rax
0x00004a82      488905f79520.  mov qword [obj.slotvec], rax            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00004a89      0f1100         movups xmmword [rax], xmm0
0x00004a8c      e9dcfeffff     jmp 0x496d
0x00004a91      e85accffff     call sym.imp.abort
0x00004a96      e8a5100000     call sym.xalloc_die
0x00004a9b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004aa0      4154           push r12
0x00004aa2      55             push rbp
0x00004aa3      53             push rbx
0x00004aa4      4889fb         mov rbx, rdi
0x00004aa7      e854ccffff     call sym.imp.__errno_location
0x00004aac      448b20         mov r12d, dword [rax]
0x00004aaf      4889c5         mov rbp, rax
0x00004ab2      488d05879720.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004ab9      4885db         test rbx, rbx
0x00004abc      be38000000     mov esi, 0x38                           ; '8'
0x00004ac1      480f44d8       cmove rbx, rax
0x00004ac5      4889df         mov rdi, rbx
0x00004ac8      e823100000     call sym.xmemdup
0x00004acd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ad1      5b             pop rbx
0x00004ad2      5d             pop rbp
0x00004ad3      415c           pop r12
0x00004ad5      c3             ret
0x00004ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004ae0      488d05599720.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004ae7      4885ff         test rdi, rdi
0x00004aea      480f44f8       cmove rdi, rax
0x00004aee      8b07           mov eax, dword [rdi]
0x00004af0      c3             ret
0x00004af1      0f1f440000     nop dword [rax + rax]
0x00004af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004b00      488d05399720.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004b07      4885ff         test rdi, rdi
0x00004b0a      480f44f8       cmove rdi, rax
0x00004b0e      8937           mov dword [rdi], esi
0x00004b10      c3             ret
0x00004b11      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004b20      488d05199720.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004b27      4885ff         test rdi, rdi
0x00004b2a      89f1           mov ecx, esi
0x00004b2c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004b30      89f0           mov eax, esi
0x00004b32      83e11f         and ecx, 0x1f
0x00004b35      c0e805         shr al, 5
0x00004b38      0fb6c0         movzx eax, al
0x00004b3b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004b40      8b37           mov esi, dword [rdi]
0x00004b42      89f0           mov eax, esi
0x00004b44      d3e8           shr eax, cl
0x00004b46      31c2           xor edx, eax
0x00004b48      83e001         and eax, 1
0x00004b4b      83e201         and edx, 1
0x00004b4e      d3e2           shl edx, cl
0x00004b50      31f2           xor edx, esi
0x00004b52      8917           mov dword [rdi], edx
0x00004b54      c3             ret
0x00004b55      90             nop
0x00004b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004b60      488d05d99620.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004b67      4885ff         test rdi, rdi
0x00004b6a      480f44f8       cmove rdi, rax
0x00004b6e      8b4704         mov eax, dword [rdi + 4]
0x00004b71      897704         mov dword [rdi + 4], esi
0x00004b74      c3             ret
0x00004b75      90             nop
0x00004b76      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004b80      488d05b99620.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004b87      4885ff         test rdi, rdi
0x00004b8a      480f44f8       cmove rdi, rax
0x00004b8e      4885f6         test rsi, rsi
0x00004b91      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004b97      740e           je 0x4ba7
0x00004b99      4885d2         test rdx, rdx
0x00004b9c      7409           je 0x4ba7
0x00004b9e      48897728       mov qword [rdi + 0x28], rsi
0x00004ba2      48895730       mov qword [rdi + 0x30], rdx
0x00004ba6      c3             ret
0x00004ba7      4883ec08       sub rsp, 8
0x00004bab      e840cbffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004bb0      4157           push r15
0x00004bb2      4156           push r14
0x00004bb4      488d05859620.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004bbb      4155           push r13
0x00004bbd      4154           push r12
0x00004bbf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004bc2      55             push rbp
0x00004bc3      53             push rbx
0x00004bc4      4c89c3         mov rbx, r8
0x00004bc7      4989f6         mov r14, rsi
0x00004bca      4989d7         mov r15, rdx
0x00004bcd      4883ec18       sub rsp, 0x18
0x00004bd1      4d85c0         test r8, r8
0x00004bd4      480f44d8       cmove rbx, rax
0x00004bd8      48894c2408     mov qword [rsp + 8], rcx
0x00004bdd      e81ecbffff     call sym.imp.__errno_location
0x00004be2      448b20         mov r12d, dword [rax]
0x00004be5      4889c5         mov rbp, rax
0x00004be8      488d4308       lea rax, [rbx + 8]
0x00004bec      4883ec08       sub rsp, 8
0x00004bf0      448b4b04       mov r9d, dword [rbx + 4]
0x00004bf4      ff7330         push qword [rbx + 0x30]
0x00004bf7      448b03         mov r8d, dword [rbx]
0x00004bfa      ff7328         push qword [rbx + 0x28]
0x00004bfd      4c89fa         mov rdx, r15
0x00004c00      50             push rax
0x00004c01      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004c06      4c89f6         mov rsi, r14
0x00004c09      4c89ef         mov rdi, r13
0x00004c0c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004c11      44896500       mov dword [rbp], r12d
0x00004c15      4883c438       add rsp, 0x38
0x00004c19      5b             pop rbx
0x00004c1a      5d             pop rbp
0x00004c1b      415c           pop r12
0x00004c1d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004c1f      415e           pop r14
0x00004c21      415f           pop r15
0x00004c23      c3             ret
0x00004c24      6690           nop
0x00004c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004c30      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004c32      4156           push r14
0x00004c34      488d05059620.  lea rax, obj.default_quoting_options    ; 0x20e240
0x00004c3b      4155           push r13
0x00004c3d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004c3f      4989d4         mov r12, rdx
0x00004c42      55             push rbp
0x00004c43      53             push rbx
0x00004c44      4889cb         mov rbx, rcx
0x00004c47      4989fe         mov r14, rdi
0x00004c4a      4989f7         mov r15, rsi
0x00004c4d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004c51      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004c54      480f44d8       cmove rbx, rax
0x00004c58      31ed           xor ebp, ebp
0x00004c5a      e8a1caffff     call sym.imp.__errno_location
0x00004c5f      4d85e4         test r12, r12
0x00004c62      4989c5         mov r13, rax
0x00004c65      8b00           mov eax, dword [rax]
0x00004c67      400f94c5       sete bpl
0x00004c6b      0b6b04         or ebp, dword [rbx + 4]
0x00004c6e      4c8d5308       lea r10, [rbx + 8]
0x00004c72      4883ec08       sub rsp, 8
0x00004c76      448b03         mov r8d, dword [rbx]
0x00004c79      4c89f9         mov rcx, r15
0x00004c7c      89442414       mov dword [rsp + 0x14], eax
0x00004c80      ff7330         push qword [rbx + 0x30]
0x00004c83      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004c86      ff7328         push qword [rbx + 0x28]
0x00004c89      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004c8b      31f6           xor esi, esi
0x00004c8d      4189e9         mov r9d, ebp
0x00004c90      31ff           xor edi, edi
0x00004c92      4c89542440     mov qword [rsp + 0x40], r10
0x00004c97      e814eaffff     call sym.quotearg_buffer_restyled
0x00004c9c      488d7001       lea rsi, [rax + 1]
0x00004ca0      4889442448     mov qword [rsp + 0x48], rax
0x00004ca5      4883c420       add rsp, 0x20
0x00004ca9      4889f7         mov rdi, rsi
0x00004cac      4889742418     mov qword [rsp + 0x18], rsi
0x00004cb1      e83a0c0000     call sym.xmalloc
0x00004cb6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004cbb      4883ec08       sub rsp, 8
0x00004cbf      ff7330         push qword [rbx + 0x30]
0x00004cc2      ff7328         push qword [rbx + 0x28]
0x00004cc5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004cca      4189e9         mov r9d, ebp
0x00004ccd      448b03         mov r8d, dword [rbx]
0x00004cd0      4c89f9         mov rcx, r15
0x00004cd3      4c89f2         mov rdx, r14
0x00004cd6      4889c7         mov rdi, rax
0x00004cd9      4152           push r10
0x00004cdb      488b742438     mov rsi, qword [rsp + 0x38]
0x00004ce0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004ce5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004ce9      4883c420       add rsp, 0x20
0x00004ced      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004cf0      41894500       mov dword [r13], eax
0x00004cf4      7409           je 0x4cff
0x00004cf6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004cfb      4d891c24       mov qword [r12], r11
0x00004cff      488b442410     mov rax, qword [rsp + 0x10]
0x00004d04      4883c438       add rsp, 0x38
0x00004d08      5b             pop rbx
0x00004d09      5d             pop rbp
0x00004d0a      415c           pop r12
0x00004d0c      415d           pop r13
0x00004d0e      415e           pop r14
0x00004d10      415f           pop r15
0x00004d12      c3             ret
0x00004d13      0f1f00         nop dword [rax]
0x00004d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004d20      4889d1         mov rcx, rdx
0x00004d23      31d2           xor edx, edx
0x00004d25      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004d2a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004d30      8b0542932000   mov eax, dword [obj.nslots]             ; [0x20e078:4]=1
0x00004d36      4154           push r12
0x00004d38      4c8b25419320.  mov r12, qword [obj.slotvec]            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00004d3f      55             push rbp
0x00004d40      53             push rbx
0x00004d41      83f801         cmp eax, 1
0x00004d44      7e2b           jle 0x4d71                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004d46      83e802         sub eax, 2
0x00004d49      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004d4e      48c1e004       shl rax, 4
0x00004d52      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004d57      660f1f840000.  nop word [rax + rax]
0x00004d60      488b3b         mov rdi, qword [rbx]
0x00004d63      4883c310       add rbx, 0x10
0x00004d67      e824cdffff     call sym..plt.got
0x00004d6c      4839eb         cmp rbx, rbp
0x00004d6f      75ef           jne 0x4d60
0x00004d71      498b7c2408     mov rdi, qword [r12 + 8]
0x00004d76      488d1dc39320.  lea rbx, obj.slot0                      ; 0x20e140
0x00004d7d      4839df         cmp rdi, rbx
0x00004d80      7417           je 0x4d99
0x00004d82      e809cdffff     call sym..plt.got
0x00004d87      48c705fe9220.  mov qword [obj.slotvec0], 0x100         ; [0x20e090:8]=256
0x00004d92      48891dff9220.  mov qword [0x0020e098], rbx             ; [0x20e098:8]=0x20e140 obj.slot0
0x00004d99      488d1df09220.  lea rbx, obj.slotvec0                   ; 0x20e090
0x00004da0      4939dc         cmp r12, rbx
0x00004da3      740f           je 0x4db4
0x00004da5      4c89e7         mov rdi, r12
0x00004da8      e8e3ccffff     call sym..plt.got
0x00004dad      48891dcc9220.  mov qword [obj.slotvec], rbx            ; [0x20e080:8]=0x20e090 obj.slotvec0
0x00004db4      5b             pop rbx
0x00004db5      c705b9922000.  mov dword [obj.nslots], 1               ; [0x20e078:4]=1
0x00004dbf      5d             pop rbp
0x00004dc0      415c           pop r12
0x00004dc2      c3             ret
0x00004dc3      0f1f00         nop dword [rax]
0x00004dc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004dd0      488d0d699420.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00004dd7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004dde      e90dfbffff     jmp sym.quotearg_n_options
0x00004de3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004df0      488d0d499420.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00004df7      e9f4faffff     jmp sym.quotearg_n_options
0x00004dfc      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004e00      488d0d399420.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00004e07      4889fe         mov rsi, rdi
0x00004e0a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e11      31ff           xor edi, edi
0x00004e13      e9d8faffff     jmp sym.quotearg_n_options
0x00004e18      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004e20      488d0d199420.  lea rcx, obj.default_quoting_options    ; 0x20e240
0x00004e27      4889f2         mov rdx, rsi
0x00004e2a      4889fe         mov rsi, rdi
0x00004e2d      31ff           xor edi, edi
0x00004e2f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004e34      6690           nop
0x00004e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004e40      4883ec48       sub rsp, 0x48
0x00004e44      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004e47      64488b142528.  mov rdx, qword fs:[0x28]
0x00004e50      4889542438     mov qword [rsp + 0x38], rdx
0x00004e55      31d2           xor edx, edx
0x00004e57      83fe0a         cmp esi, 0xa
0x00004e5a      7468           je 0x4ec4
0x00004e5c      893424         mov dword [rsp], esi
0x00004e5f      4889e1         mov rcx, rsp
0x00004e62      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004e69      4889c6         mov rsi, rax
0x00004e6c      48c744240400.  mov qword [rsp + 4], 0
0x00004e75      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004e7e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004e87      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004e90      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004e99      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004ea2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004eaa      e841faffff     call sym.quotearg_n_options
0x00004eaf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004eb4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004ebd      750a           jne 0x4ec9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004ebf      4883c448       add rsp, 0x48
0x00004ec3      c3             ret
0x00004ec4      e827c8ffff     call sym.imp.abort
0x00004ec9      e812c9ffff     call sym.imp.__stack_chk_fail
0x00004ece      6690           nop
;-- quotearg_n_style_mem:
0x00004ed0      4883ec48       sub rsp, 0x48
0x00004ed4      4889d0         mov rax, rdx
0x00004ed7      4889ca         mov rdx, rcx
0x00004eda      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004ee3      48894c2438     mov qword [rsp + 0x38], rcx
0x00004ee8      31c9           xor ecx, ecx
0x00004eea      83fe0a         cmp esi, 0xa
0x00004eed      7461           je 0x4f50
0x00004eef      893424         mov dword [rsp], esi
0x00004ef2      4889e1         mov rcx, rsp
0x00004ef5      4889c6         mov rsi, rax
0x00004ef8      48c744240400.  mov qword [rsp + 4], 0
0x00004f01      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004f0a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004f13      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004f1c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004f25      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f2e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f36      e8b5f9ffff     call sym.quotearg_n_options
0x00004f3b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004f40      644833142528.  xor rdx, qword fs:[0x28]
0x00004f49      750a           jne 0x4f55
0x00004f4b      4883c448       add rsp, 0x48
0x00004f4f      c3             ret
0x00004f50      e89bc7ffff     call sym.imp.abort
0x00004f55      e886c8ffff     call sym.imp.__stack_chk_fail
0x00004f5a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004f60      4889f2         mov rdx, rsi
0x00004f63      89fe           mov esi, edi
0x00004f65      31ff           xor edi, edi
0x00004f67      e9d4feffff     jmp sym.quotearg_n_style
0x00004f6c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004f70      4889d1         mov rcx, rdx
0x00004f73      4889f2         mov rdx, rsi
0x00004f76      89fe           mov esi, edi
0x00004f78      31ff           xor edi, edi
0x00004f7a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004f7f      90             nop
;-- quotearg_char_mem:
0x00004f80      4883ec48       sub rsp, 0x48
0x00004f84      89d1           mov ecx, edx
0x00004f86      64488b042528.  mov rax, qword fs:[0x28]
0x00004f8f      4889442438     mov qword [rsp + 0x38], rax
0x00004f94      31c0           xor eax, eax
0x00004f96      488b05d39220.  mov rax, qword [0x0020e270]             ; [0x20e270:8]=0
0x00004f9d      4989e0         mov r8, rsp
0x00004fa0      83e11f         and ecx, 0x1f
0x00004fa3      660f6f059592.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004fab      4889442430     mov qword [rsp + 0x30], rax
0x00004fb0      89d0           mov eax, edx
0x00004fb2      0f290424       movaps xmmword [rsp], xmm0
0x00004fb6      c0e805         shr al, 5
0x00004fb9      0fb6c0         movzx eax, al
0x00004fbc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004fc1      660f6f058792.  movdqa xmm0, xmmword [0x0020e250]
0x00004fc9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004fce      660f6f058a92.  movdqa xmm0, xmmword [0x0020e260]
0x00004fd6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004fdb      418b11         mov edx, dword [r9]
0x00004fde      89d0           mov eax, edx
0x00004fe0      d3e8           shr eax, cl
0x00004fe2      f7d0           not eax
0x00004fe4      83e001         and eax, 1
0x00004fe7      d3e0           shl eax, cl
0x00004fe9      4c89c1         mov rcx, r8
0x00004fec      31d0           xor eax, edx
0x00004fee      4889f2         mov rdx, rsi
0x00004ff1      4889fe         mov rsi, rdi
0x00004ff4      418901         mov dword [r9], eax
0x00004ff7      31ff           xor edi, edi
0x00004ff9      e8f2f8ffff     call sym.quotearg_n_options
0x00004ffe      488b742438     mov rsi, qword [rsp + 0x38]
0x00005003      644833342528.  xor rsi, qword fs:[0x28]
0x0000500c      7505           jne 0x5013
0x0000500e      4883c448       add rsp, 0x48
0x00005012      c3             ret
0x00005013      e8c8c7ffff     call sym.imp.__stack_chk_fail
0x00005018      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005020      400fbed6       movsx edx, sil
0x00005024      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000502b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005030      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005035      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000503c      e93fffffff     jmp sym.quotearg_char_mem
0x00005041      0f1f440000     nop dword [rax + rax]
0x00005046      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005050      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005055      e926ffffff     jmp sym.quotearg_char_mem
0x0000505a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005060      4883ec48       sub rsp, 0x48
0x00005064      4889d0         mov rax, rdx
0x00005067      64488b142528.  mov rdx, qword fs:[0x28]
0x00005070      4889542438     mov qword [rsp + 0x38], rdx
0x00005075      31d2           xor edx, edx
0x00005077      83fe0a         cmp esi, 0xa
0x0000507a      7468           je 0x50e4
0x0000507c      893424         mov dword [rsp], esi
0x0000507f      4889e1         mov rcx, rsp
0x00005082      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005089      4889c6         mov rsi, rax
0x0000508c      48c744240400.  mov qword [rsp + 4], 0
0x00005095      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000509e      48c744241400.  mov qword [rsp + 0x14], 0
0x000050a7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000050b0      48c744242400.  mov qword [rsp + 0x24], 0
0x000050b9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000050c2      c74424340000.  mov dword [rsp + 0x34], 0
0x000050ca      e821f8ffff     call sym.quotearg_n_options
0x000050cf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000050d4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000050dd      750a           jne 0x50e9
0x000050df      4883c448       add rsp, 0x48
0x000050e3      c3             ret
0x000050e4      e807c6ffff     call sym.imp.abort
0x000050e9      e8f2c6ffff     call sym.imp.__stack_chk_fail
0x000050ee      6690           nop
;-- quotearg_n_custom_mem:
0x000050f0      4883ec48       sub rsp, 0x48
0x000050f4      4989c9         mov r9, rcx
0x000050f7      488b0d729120.  mov rcx, qword [0x0020e270]             ; [0x20e270:8]=0
0x000050fe      660f6f053a91.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005106      64488b042528.  mov rax, qword fs:[0x28]
0x0000510f      4889442438     mov qword [rsp + 0x38], rax
0x00005114      31c0           xor eax, eax
0x00005116      0f290424       movaps xmmword [rsp], xmm0
0x0000511a      4885f6         test rsi, rsi
0x0000511d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005122      c704240a0000.  mov dword [rsp], 0xa
0x00005129      660f6f051f91.  movdqa xmm0, xmmword [0x0020e250]
0x00005131      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005136      660f6f052291.  movdqa xmm0, xmmword [0x0020e260]
0x0000513e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005143      7432           je 0x5177
0x00005145      4885d2         test rdx, rdx
0x00005148      742d           je 0x5177
0x0000514a      4889742428     mov qword [rsp + 0x28], rsi
0x0000514f      4889542430     mov qword [rsp + 0x30], rdx
0x00005154      4889e1         mov rcx, rsp
0x00005157      4c89c2         mov rdx, r8
0x0000515a      4c89ce         mov rsi, r9
0x0000515d      e88ef7ffff     call sym.quotearg_n_options
0x00005162      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005167      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005170      750a           jne 0x517c
0x00005172      4883c448       add rsp, 0x48
0x00005176      c3             ret
0x00005177      e874c5ffff     call sym.imp.abort
0x0000517c      e85fc6ffff     call sym.imp.__stack_chk_fail
0x00005181      0f1f440000     nop dword [rax + rax]
0x00005186      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005190      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005197      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000519c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000051a0      4889d1         mov rcx, rdx
0x000051a3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000051aa      4889f2         mov rdx, rsi
0x000051ad      4889fe         mov rsi, rdi
0x000051b0      31ff           xor edi, edi
0x000051b2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000051b7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000051c0      4989c8         mov r8, rcx
0x000051c3      4889d1         mov rcx, rdx
0x000051c6      4889f2         mov rdx, rsi
0x000051c9      4889fe         mov rsi, rdi
0x000051cc      31ff           xor edi, edi
0x000051ce      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000051d3      0f1f00         nop dword [rax]
0x000051d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000051e0      488d0d598e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x000051e7      e904f7ffff     jmp sym.quotearg_n_options
0x000051ec      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000051f0      488d0d498e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x000051f7      4889f2         mov rdx, rsi
0x000051fa      4889fe         mov rsi, rdi
0x000051fd      31ff           xor edi, edi
0x000051ff      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005204      6690           nop
0x00005206      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005210      488d0d298e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00005217      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000521e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005223      0f1f00         nop dword [rax]
0x00005226      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005230      488d0d098e20.  lea rcx, obj.quote_quoting_options      ; 0x20e040
0x00005237      4889fe         mov rsi, rdi
0x0000523a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005241      31ff           xor edi, edi
0x00005243      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005248      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x00005250      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005251      488d352e5400.  lea rsi, [0x0000a686]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x00005258      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x0000525b      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005260      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005267      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x0000526a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005273      488984249800.  mov qword [rsp + 0x98], rax
0x0000527b      31c0           xor eax, eax
0x0000527d      e83ec5ffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005282      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00005284      7532           jne 0x52b8
0x00005286      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x0000528b      488903         mov qword [rbx], rax
0x0000528e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x00005292      48894308       mov qword [rbx + 8], rax
0x00005296      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x00005299      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x000052a1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052aa      7510           jne 0x52bc
0x000052ac      4881c4a00000.  add rsp, 0xa0
0x000052b3      5b             pop rbx
0x000052b4      c3             ret
0x000052b5      0f1f00         nop dword [rax]
0x000052b8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x000052ba      ebdd           jmp 0x5299
0x000052bc      e81fc5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x000052c1      662e0f1f8400.  nop word cs:[rax + rax]
0x000052cb      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x000052d0      4157           push r15
0x000052d2      4156           push r14
0x000052d4      4155           push r13
0x000052d6      4154           push r12
0x000052d8      4d89cc         mov r12, r9
0x000052db      55             push rbp
0x000052dc      53             push rbx
0x000052dd      4889fd         mov rbp, rdi
0x000052e0      4c89c3         mov rbx, r8
0x000052e3      4883ec28       sub rsp, 0x28
0x000052e7      4885f6         test rsi, rsi
0x000052ea      0f8418010000   je 0x5408
0x000052f0      4989d0         mov r8, rdx
0x000052f3      488d156e5800.  lea rdx, [0x0000ab68]                   ; "%s (%s) %s\n"
0x000052fa      4989c9         mov r9, rcx
0x000052fd      31c0           xor eax, eax
0x000052ff      4889f1         mov rcx, rsi
0x00005302      be01000000     mov esi, 1
0x00005307      e844c7ffff     call sym.imp.__fprintf_chk
0x0000530c      488d35685800.  lea rsi, [0x0000ab7b]                   ; "(C)"
0x00005313      31ff           xor edi, edi
0x00005315      ba05000000     mov edx, 5
0x0000531a      e871c4ffff     call sym.imp.dcgettext
0x0000531f      488d157a5b00.  lea rdx, obj.version_etc_copyright      ; 0xaea0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005326      4889c1         mov rcx, rax
0x00005329      41b8e3070000   mov r8d, 0x7e3
0x0000532f      be01000000     mov esi, 1
0x00005334      4889ef         mov rdi, rbp
0x00005337      31c0           xor eax, eax
0x00005339      e812c7ffff     call sym.imp.__fprintf_chk
0x0000533e      488d35c35800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xac08 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005345      31ff           xor edi, edi
0x00005347      ba05000000     mov edx, 5
0x0000534c      e83fc4ffff     call sym.imp.dcgettext
0x00005351      4889ee         mov rsi, rbp
0x00005354      4889c7         mov rdi, rax
0x00005357      e834c5ffff     call sym.imp.fputs_unlocked
0x0000535c      4983fc09       cmp r12, 9
0x00005360      0f873a030000   ja 0x56a0
0x00005366      488d15f75a00.  lea rdx, [0x0000ae64]
0x0000536d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005371      4801d0         add rax, rdx
0x00005374      ffe0           jmp rax
0x00005376      662e0f1f8400.  nop word cs:[rax + rax]
0x00005380      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005384      488b4310       mov rax, qword [rbx + 0x10]
0x00005388      488d35e95900.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xad78 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000538f      4c8b4308       mov r8, qword [rbx + 8]
0x00005393      ba05000000     mov edx, 5
0x00005398      31ff           xor edi, edi
0x0000539a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000539e      4c8b6328       mov r12, qword [rbx + 0x28]
0x000053a2      4c894c2410     mov qword [rsp + 0x10], r9
0x000053a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000053ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000053af      48890424       mov qword [rsp], rax
0x000053b3      4c89442408     mov qword [rsp + 8], r8
0x000053b8      488b1b         mov rbx, qword [rbx]
0x000053bb      e8d0c3ffff     call sym.imp.dcgettext
0x000053c0      4883ec08       sub rsp, 8
0x000053c4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000053c9      4889c2         mov rdx, rax
0x000053cc      4889d9         mov rcx, rbx
0x000053cf      be01000000     mov esi, 1
0x000053d4      4889ef         mov rdi, rbp
0x000053d7      31c0           xor eax, eax
0x000053d9      4151           push r9
0x000053db      4155           push r13
0x000053dd      4154           push r12
0x000053df      4157           push r15
0x000053e1      4156           push r14
0x000053e3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000053e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000053ed      e85ec6ffff     call sym.imp.__fprintf_chk
0x000053f2      4883c430       add rsp, 0x30
0x000053f6      4883c428       add rsp, 0x28
0x000053fa      5b             pop rbx
0x000053fb      5d             pop rbp
0x000053fc      415c           pop r12
0x000053fe      415d           pop r13
0x00005400      415e           pop r14
0x00005402      415f           pop r15
0x00005404      c3             ret
0x00005405      0f1f00         nop dword [rax]
0x00005408      4989c8         mov r8, rcx
0x0000540b      4889d1         mov rcx, rdx
0x0000540e      488d155f5700.  lea rdx, str.s__s                       ; 0xab74 ; "%s %s\n"
0x00005415      be01000000     mov esi, 1
0x0000541a      31c0           xor eax, eax
0x0000541c      e82fc6ffff     call sym.imp.__fprintf_chk
0x00005421      e9e6feffff     jmp 0x530c
0x00005426      662e0f1f8400.  nop word cs:[rax + rax]
0x00005430      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005434      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005438      488d35695900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xada8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000543f      488b4310       mov rax, qword [rbx + 0x10]
0x00005443      4c8b4308       mov r8, qword [rbx + 8]
0x00005447      ba05000000     mov edx, 5
0x0000544c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005450      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005454      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005458      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000545c      488b1b         mov rbx, qword [rbx]
0x0000545f      4c89542418     mov qword [rsp + 0x18], r10
0x00005464      4c894c2410     mov qword [rsp + 0x10], r9
0x00005469      48890424       mov qword [rsp], rax
0x0000546d      4c89442408     mov qword [rsp + 8], r8
0x00005472      31ff           xor edi, edi
0x00005474      e817c3ffff     call sym.imp.dcgettext
0x00005479      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000547e      4152           push r10
0x00005480      e93fffffff     jmp 0x53c4
0x00005485      0f1f00         nop dword [rax]
0x00005488      488b1b         mov rbx, qword [rbx]
0x0000548b      488d35ed5600.  lea rsi, str.Written_by__s.             ; 0xab7f ; "Written by %s.\n"
0x00005492      ba05000000     mov edx, 5
0x00005497      31ff           xor edi, edi
0x00005499      e8f2c2ffff     call sym.imp.dcgettext
0x0000549e      4883c428       add rsp, 0x28
0x000054a2      4889d9         mov rcx, rbx
0x000054a5      4889ef         mov rdi, rbp
0x000054a8      5b             pop rbx
0x000054a9      5d             pop rbp
0x000054aa      415c           pop r12
0x000054ac      415d           pop r13
0x000054ae      415e           pop r14
0x000054b0      415f           pop r15
0x000054b2      4889c2         mov rdx, rax
0x000054b5      be01000000     mov esi, 1
0x000054ba      31c0           xor eax, eax
0x000054bc      e98fc5ffff     jmp sym.imp.__fprintf_chk
0x000054c1      0f1f80000000.  nop dword [rax]
0x000054c8      4c8b6308       mov r12, qword [rbx + 8]
0x000054cc      488d35bc5600.  lea rsi, str.Written_by__s_and__s.      ; 0xab8f ; "Written by %s and %s.\n"
0x000054d3      488b1b         mov rbx, qword [rbx]
0x000054d6      ba05000000     mov edx, 5
0x000054db      31ff           xor edi, edi
0x000054dd      e8aec2ffff     call sym.imp.dcgettext
0x000054e2      4883c428       add rsp, 0x28
0x000054e6      4d89e0         mov r8, r12
0x000054e9      4889d9         mov rcx, rbx
0x000054ec      4889ef         mov rdi, rbp
0x000054ef      4889c2         mov rdx, rax
0x000054f2      be01000000     mov esi, 1
0x000054f7      5b             pop rbx
0x000054f8      5d             pop rbp
0x000054f9      415c           pop r12
0x000054fb      415d           pop r13
0x000054fd      415e           pop r14
0x000054ff      415f           pop r15
0x00005501      31c0           xor eax, eax
0x00005503      e948c5ffff     jmp sym.imp.__fprintf_chk
0x00005508      0f1f84000000.  nop dword [rax + rax]
0x00005510      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005514      4c8b6308       mov r12, qword [rbx + 8]
0x00005518      488d35875600.  lea rsi, str.Written_by__s___s__and__s. ; 0xaba6 ; "Written by %s, %s, and %s.\n"
0x0000551f      488b1b         mov rbx, qword [rbx]
0x00005522      ba05000000     mov edx, 5
0x00005527      31ff           xor edi, edi
0x00005529      e862c2ffff     call sym.imp.dcgettext
0x0000552e      4883c428       add rsp, 0x28
0x00005532      4d89e9         mov r9, r13
0x00005535      4d89e0         mov r8, r12
0x00005538      4889d9         mov rcx, rbx
0x0000553b      4889ef         mov rdi, rbp
0x0000553e      4889c2         mov rdx, rax
0x00005541      5b             pop rbx
0x00005542      5d             pop rbp
0x00005543      415c           pop r12
0x00005545      415d           pop r13
0x00005547      415e           pop r14
0x00005549      415f           pop r15
0x0000554b      be01000000     mov esi, 1
0x00005550      31c0           xor eax, eax
0x00005552      e9f9c4ffff     jmp sym.imp.__fprintf_chk
0x00005557      660f1f840000.  nop word [rax + rax]
0x00005560      488d35715700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xacd8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005567      ba05000000     mov edx, 5
0x0000556c      31ff           xor edi, edi
0x0000556e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005572      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005576      4c8b6308       mov r12, qword [rbx + 8]
0x0000557a      488b1b         mov rbx, qword [rbx]
0x0000557d      e80ec2ffff     call sym.imp.dcgettext
0x00005582      4883ec08       sub rsp, 8
0x00005586      4156           push r14
0x00005588      4889c2         mov rdx, rax
0x0000558b      4d89e9         mov r9, r13
0x0000558e      4d89e0         mov r8, r12
0x00005591      4889d9         mov rcx, rbx
0x00005594      4889ef         mov rdi, rbp
0x00005597      be01000000     mov esi, 1
0x0000559c      31c0           xor eax, eax
0x0000559e      e8adc4ffff     call sym.imp.__fprintf_chk
0x000055a3      58             pop rax
0x000055a4      5a             pop rdx
0x000055a5      4883c428       add rsp, 0x28
0x000055a9      5b             pop rbx
0x000055aa      5d             pop rbp
0x000055ab      415c           pop r12
0x000055ad      415d           pop r13
0x000055af      415e           pop r14
0x000055b1      415f           pop r15
0x000055b3      c3             ret
0x000055b4      0f1f4000       nop dword [rax]
0x000055b8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000055bc      488d35355700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xacf8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000055c3      ba05000000     mov edx, 5
0x000055c8      31ff           xor edi, edi
0x000055ca      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055ce      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000055d2      4c8b6308       mov r12, qword [rbx + 8]
0x000055d6      488b1b         mov rbx, qword [rbx]
0x000055d9      e8b2c1ffff     call sym.imp.dcgettext
0x000055de      4157           push r15
0x000055e0      eba4           jmp 0x5586
0x000055e2      660f1f440000   nop word [rax + rax]
0x000055e8      4c8b4308       mov r8, qword [rbx + 8]
0x000055ec      4c8b6328       mov r12, qword [rbx + 0x28]
0x000055f0      488d35295700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xad20 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000055f7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000055fb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055ff      ba05000000     mov edx, 5
0x00005604      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005608      31ff           xor edi, edi
0x0000560a      488b1b         mov rbx, qword [rbx]
0x0000560d      4c890424       mov qword [rsp], r8
0x00005611      e87ac1ffff     call sym.imp.dcgettext
0x00005616      4883ec08       sub rsp, 8
0x0000561a      4d89e9         mov r9, r13
0x0000561d      4154           push r12
0x0000561f      4157           push r15
0x00005621      4156           push r14
0x00005623      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005628      4889d9         mov rcx, rbx
0x0000562b      4889c2         mov rdx, rax
0x0000562e      4889ef         mov rdi, rbp
0x00005631      be01000000     mov esi, 1
0x00005636      31c0           xor eax, eax
0x00005638      e813c4ffff     call sym.imp.__fprintf_chk
0x0000563d      4883c420       add rsp, 0x20
0x00005641      4883c428       add rsp, 0x28
0x00005645      5b             pop rbx
0x00005646      5d             pop rbp
0x00005647      415c           pop r12
0x00005649      415d           pop r13
0x0000564b      415e           pop r14
0x0000564d      415f           pop r15
0x0000564f      c3             ret
0x00005650      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005654      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005658      488d35e95600.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xad48 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000565f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005663      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005667      ba05000000     mov edx, 5
0x0000566c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005670      4c8b4308       mov r8, qword [rbx + 8]
0x00005674      31ff           xor edi, edi
0x00005676      4c894c2408     mov qword [rsp + 8], r9
0x0000567b      488b1b         mov rbx, qword [rbx]
0x0000567e      4c890424       mov qword [rsp], r8
0x00005682      e809c1ffff     call sym.imp.dcgettext
0x00005687      4155           push r13
0x00005689      4154           push r12
0x0000568b      4157           push r15
0x0000568d      4156           push r14
0x0000568f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005694      eb8d           jmp 0x5623
0x00005696      662e0f1f8400.  nop word cs:[rax + rax]
0x000056a0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000056a4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000056a8      ba05000000     mov edx, 5
0x000056ad      488b4310       mov rax, qword [rbx + 0x10]
0x000056b1      4c8b4308       mov r8, qword [rbx + 8]
0x000056b5      488d35245700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xade0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000056bc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000056c0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000056c4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000056c8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000056cc      4c89542418     mov qword [rsp + 0x18], r10
0x000056d1      4c894c2410     mov qword [rsp + 0x10], r9
0x000056d6      48890424       mov qword [rsp], rax
0x000056da      4c89442408     mov qword [rsp + 8], r8
0x000056df      488b1b         mov rbx, qword [rbx]
0x000056e2      e98bfdffff     jmp 0x5472
0x000056e7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000056f0      4531c9         xor r9d, r9d
0x000056f3      49833800       cmp qword [r8], 0
0x000056f7      7412           je 0x570b
0x000056f9      0f1f80000000.  nop dword [rax]
0x00005700      4983c101       add r9, 1
0x00005704      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005709      75f5           jne 0x5700
0x0000570b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005710      4883ec68       sub rsp, 0x68
0x00005714      4d89c2         mov r10, r8
0x00005717      4531c9         xor r9d, r9d
0x0000571a      64488b042528.  mov rax, qword fs:[0x28]
0x00005723      4889442458     mov qword [rsp + 0x58], rax
0x00005728      31c0           xor eax, eax
0x0000572a      4989e0         mov r8, rsp
0x0000572d      0f1f00         nop dword [rax]
0x00005730      418b02         mov eax, dword [r10]
0x00005733      83f82f         cmp eax, 0x2f
0x00005736      7742           ja 0x577a
0x00005738      4189c3         mov r11d, eax
0x0000573b      4d035a10       add r11, qword [r10 + 0x10]
0x0000573f      83c008         add eax, 8
0x00005742      418902         mov dword [r10], eax
0x00005745      498b03         mov rax, qword [r11]
0x00005748      4885c0         test rax, rax
0x0000574b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000574f      740a           je 0x575b
0x00005751      4983c101       add r9, 1
0x00005755      4983f90a       cmp r9, 0xa
0x00005759      75d5           jne 0x5730
0x0000575b      e870fbffff     call sym.version_etc_arn
0x00005760      488b442458     mov rax, qword [rsp + 0x58]
0x00005765      644833042528.  xor rax, qword fs:[0x28]
0x0000576e      7505           jne 0x5775
0x00005770      4883c468       add rsp, 0x68
0x00005774      c3             ret
0x00005775      e866c0ffff     call sym.imp.__stack_chk_fail
0x0000577a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000577e      498d4308       lea rax, [r11 + 8]
0x00005782      49894208       mov qword [r10 + 8], rax
0x00005786      ebbd           jmp 0x5745
0x00005788      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005790      55             push rbp
0x00005791      53             push rbx
0x00005792      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005798      4531db         xor r11d, r11d
0x0000579b      4881ecb80000.  sub rsp, 0xb8
0x000057a2      64488b042528.  mov rax, qword fs:[0x28]
0x000057ab      4889442478     mov qword [rsp + 0x78], rax
0x000057b0      31c0           xor eax, eax
0x000057b2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000057ba      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000057c2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000057ca      4c8d442420     lea r8, [rsp + 0x20]
0x000057cf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000057d7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000057df      4889442410     mov qword [rsp + 0x10], rax
0x000057e4      488d84248000.  lea rax, [rsp + 0x80]
0x000057ec      4531c9         xor r9d, r9d
0x000057ef      4889442418     mov qword [rsp + 0x18], rax
0x000057f4      4889c5         mov rbp, rax
0x000057f7      660f1f840000.  nop word [rax + rax]
0x00005800      4183fa2f       cmp r10d, 0x2f
0x00005804      7756           ja 0x585c
0x00005806      4489d0         mov eax, r10d
0x00005809      41bb01000000   mov r11d, 1
0x0000580f      4183c208       add r10d, 8
0x00005813      4801e8         add rax, rbp
0x00005816      488b00         mov rax, qword [rax]
0x00005819      4885c0         test rax, rax
0x0000581c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005820      740a           je 0x582c
0x00005822      4983c101       add r9, 1
0x00005826      4983f90a       cmp r9, 0xa
0x0000582a      75d4           jne 0x5800
0x0000582c      4584db         test r11b, r11b
0x0000582f      7524           jne 0x5855
0x00005831      e89afaffff     call sym.version_etc_arn
0x00005836      488b442478     mov rax, qword [rsp + 0x78]
0x0000583b      644833042528.  xor rax, qword fs:[0x28]
0x00005844      750a           jne 0x5850
0x00005846      4881c4b80000.  add rsp, 0xb8
0x0000584d      5b             pop rbx
0x0000584e      5d             pop rbp
0x0000584f      c3             ret
0x00005850      e88bbfffff     call sym.imp.__stack_chk_fail
0x00005855      4489542408     mov dword [rsp + 8], r10d
0x0000585a      ebd5           jmp 0x5831
0x0000585c      4889d8         mov rax, rbx
0x0000585f      4883c308       add rbx, 8
0x00005863      ebb1           jmp 0x5816
0x00005865      90             nop
0x00005866      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005870      53             push rbx
0x00005871      488d354a5300.  lea rsi, str.Report_bugs_to:__s         ; 0xabc2 ; "\nReport bugs to: %s\n"
0x00005878      ba05000000     mov edx, 5
0x0000587d      31ff           xor edi, edi
0x0000587f      e80cbfffff     call sym.imp.dcgettext
0x00005884      488d154c5300.  lea rdx, str.bug_coreutils_gnu.org      ; 0xabd7 ; "bug-coreutils@gnu.org"
0x0000588b      4889c6         mov rsi, rax
0x0000588e      bf01000000     mov edi, 1
0x00005893      31c0           xor eax, eax
0x00005895      e816c1ffff     call sym.imp.__printf_chk
0x0000589a      488d354c5300.  lea rsi, str.s_home_page:___s           ; 0xabed ; "%s home page: <%s>\n"
0x000058a1      ba05000000     mov edx, 5
0x000058a6      31ff           xor edi, edi
0x000058a8      e8e3beffff     call sym.imp.dcgettext
0x000058ad      488d0df44800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xa1a8 ; "https://www.gnu.org/software/coreutils/"
0x000058b4      488d15c54300.  lea rdx, str.GNU_coreutils              ; 0x9c80 ; "GNU coreutils"
0x000058bb      4889c6         mov rsi, rax
0x000058be      bf01000000     mov edi, 1
0x000058c3      31c0           xor eax, eax
0x000058c5      e8e6c0ffff     call sym.imp.__printf_chk
0x000058ca      488b1dd78720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20e0a8:8]=0
0x000058d1      488d35485500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xae20 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000058d8      31ff           xor edi, edi
0x000058da      ba05000000     mov edx, 5
0x000058df      e8acbeffff     call sym.imp.dcgettext
0x000058e4      4889de         mov rsi, rbx
0x000058e7      4889c7         mov rdi, rax
0x000058ea      5b             pop rbx
0x000058eb      e9a0bfffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000058f0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000058f1      4889fb         mov rbx, rdi
0x000058f4      e827c0ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000058f9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000058fc      7505           jne 0x5903
0x000058fe      4885db         test rbx, rbx
0x00005901      7502           jne 0x5905
0x00005903      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005904      c3             ret
0x00005905      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000590a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005910      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005913      48f7e6         mul rsi
0x00005916      4889c7         mov rdi, rax
0x00005919      0f90c0         seto al
0x0000591c      4885ff         test rdi, rdi
0x0000591f      780a           js 0x592b
0x00005921      0fb6c0         movzx eax, al
0x00005924      4885c0         test rax, rax
0x00005927      7502           jne 0x592b
0x00005929      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000592b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000592f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005934      6690           nop
0x00005936      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005940      ebae           jmp sym.xmalloc
0x00005942      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005946      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005950      4885f6         test rsi, rsi
0x00005953      53             push rbx
0x00005954      4889f3         mov rbx, rsi
0x00005957      7505           jne 0x595e
0x00005959      4885ff         test rdi, rdi
0x0000595c      751a           jne 0x5978
0x0000595e      4889de         mov rsi, rbx
0x00005961      e82ac0ffff     call sym.imp.realloc
0x00005966      4885c0         test rax, rax
0x00005969      7505           jne 0x5970
0x0000596b      4885db         test rbx, rbx
0x0000596e      7511           jne 0x5981                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005970      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005971      c3             ret
0x00005972      660f1f440000   nop word [rax + rax]
0x00005978      e813c1ffff     call sym..plt.got
0x0000597d      31c0           xor eax, eax
0x0000597f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005980      c3             ret
0x00005981      e8ba010000     call sym.xalloc_die
0x00005986      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005990      4889f0         mov rax, rsi
0x00005993      48f7e2         mul rdx
0x00005996      4889c6         mov rsi, rax
0x00005999      0f90c0         seto al
0x0000599c      4885f6         test rsi, rsi
0x0000599f      780a           js 0x59ab
0x000059a1      0fb6c0         movzx eax, al
0x000059a4      4885c0         test rax, rax
0x000059a7      7502           jne 0x59ab
0x000059a9      eba5           jmp sym.xrealloc
0x000059ab      4883ec08       sub rsp, 8
0x000059af      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x000059b4      6690           nop
0x000059b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000059c0      4885ff         test rdi, rdi
0x000059c3      4989d1         mov r9, rdx
0x000059c6      488b0e         mov rcx, qword [rsi]
0x000059c9      7435           je 0x5a00
0x000059cb      31d2           xor edx, edx
0x000059cd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000059d7      49f7f1         div r9
0x000059da      4839c8         cmp rax, rcx
0x000059dd      763c           jbe 0x5a1b
0x000059df      4889c8         mov rax, rcx
0x000059e2      48d1e8         shr rax, 1
0x000059e5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000059ea      48890e         mov qword [rsi], rcx
0x000059ed      490fafc9       imul rcx, r9
0x000059f1      4889ce         mov rsi, rcx
0x000059f4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000059f9      0f1f80000000.  nop dword [rax]
0x00005a00      4885c9         test rcx, rcx
0x00005a03      7423           je 0x5a28
0x00005a05      4889c8         mov rax, rcx
0x00005a08      49f7e1         mul r9
0x00005a0b      0f90c2         seto dl
0x00005a0e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005a11      0fb6d2         movzx edx, dl
0x00005a14      7805           js 0x5a1b
0x00005a16      4885d2         test rdx, rdx
0x00005a19      74cf           je 0x59ea
0x00005a1b      4883ec08       sub rsp, 8
0x00005a1f      e81c010000     call sym.xalloc_die
0x00005a24      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005a28      31d2           xor edx, edx
0x00005a2a      b880000000     mov eax, 0x80
0x00005a2f      4531c0         xor r8d, r8d
0x00005a32      49f7f1         div r9
0x00005a35      4885c0         test rax, rax
0x00005a38      410f94c0       sete r8b
0x00005a3c      498d0c00       lea rcx, [r8 + rax]
0x00005a40      ebc3           jmp 0x5a05
0x00005a42      0f1f4000       nop dword [rax]
0x00005a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005a50      4885ff         test rdi, rdi
0x00005a53      488b06         mov rax, qword [rsi]
0x00005a56      7428           je 0x5a80
0x00005a58      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005a62      4839d0         cmp rax, rdx
0x00005a65      772a           ja 0x5a91
0x00005a67      4889c2         mov rdx, rax
0x00005a6a      48d1ea         shr rdx, 1
0x00005a6d      488d440201     lea rax, [rdx + rax + 1]
0x00005a72      488906         mov qword [rsi], rax
0x00005a75      4889c6         mov rsi, rax
0x00005a78      e9d3feffff     jmp sym.xrealloc
0x00005a7d      0f1f00         nop dword [rax]
0x00005a80      4885c0         test rax, rax
0x00005a83      ba80000000     mov edx, 0x80
0x00005a88      480f44c2       cmove rax, rdx
0x00005a8c      4885c0         test rax, rax
0x00005a8f      79e1           jns 0x5a72
0x00005a91      4883ec08       sub rsp, 8
0x00005a95      e8a6000000     call sym.xalloc_die
0x00005a9a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005aa0      53             push rbx
0x00005aa1      4889fb         mov rbx, rdi
0x00005aa4      e847feffff     call sym.xmalloc
0x00005aa9      4889da         mov rdx, rbx
0x00005aac      31f6           xor esi, esi
0x00005aae      4889c7         mov rdi, rax
0x00005ab1      5b             pop rbx
0x00005ab2      e999bdffff     jmp sym.imp.memset
0x00005ab7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005ac0      4889f8         mov rax, rdi
0x00005ac3      4883ec08       sub rsp, 8
0x00005ac7      48f7e6         mul rsi
0x00005aca      0f90c2         seto dl
0x00005acd      4885c0         test rax, rax
0x00005ad0      7817           js 0x5ae9
0x00005ad2      0fb6d2         movzx edx, dl
0x00005ad5      4885d2         test rdx, rdx
0x00005ad8      750f           jne 0x5ae9
0x00005ada      e8c1bdffff     call sym.imp.calloc
0x00005adf      4885c0         test rax, rax
0x00005ae2      7405           je 0x5ae9
0x00005ae4      4883c408       add rsp, 8
0x00005ae8      c3             ret
0x00005ae9      e852000000     call sym.xalloc_die
0x00005aee      6690           nop
;-- xmemdup:
0x00005af0      55             push rbp
0x00005af1      53             push rbx
0x00005af2      4889fd         mov rbp, rdi
0x00005af5      4889f7         mov rdi, rsi
0x00005af8      4889f3         mov rbx, rsi
0x00005afb      4883ec08       sub rsp, 8
0x00005aff      e8ecfdffff     call sym.xmalloc
0x00005b04      4883c408       add rsp, 8
0x00005b08      4889da         mov rdx, rbx
0x00005b0b      4889ee         mov rsi, rbp
0x00005b0e      5b             pop rbx
0x00005b0f      5d             pop rbp
0x00005b10      4889c7         mov rdi, rax
0x00005b13      e9c8bdffff     jmp sym.imp.memcpy
0x00005b18      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005b20      53             push rbx
0x00005b21      4889fb         mov rbx, rdi
0x00005b24      e887bcffff     call sym.imp.strlen
0x00005b29      4889df         mov rdi, rbx
0x00005b2c      488d7001       lea rsi, [rax + 1]
0x00005b30      5b             pop rbx
0x00005b31      ebbd           jmp sym.xmemdup
0x00005b33      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b3d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005b40      488d35885300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xaecf ; "memory exhausted"
0x00005b47      4883ec08       sub rsp, 8
0x00005b4b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005b50      31ff           xor edi, edi
0x00005b52      e839bcffff     call sym.imp.dcgettext
0x00005b57      8b3dc3842000   mov edi, dword [obj.exit_failure]       ; [0x20e020:4]=1
0x00005b5d      488d15b54100.  lea rdx, [0x00009d19]                   ; "%s"
0x00005b64      4889c1         mov rcx, rax
0x00005b67      31f6           xor esi, esi
0x00005b69      31c0           xor eax, eax
0x00005b6b      e860beffff     call sym.imp.error
0x00005b70      e87bbbffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005b75      662e0f1f8400.  nop word cs:[rax + rax]
0x00005b7f      90             nop
;-- xfts_open:
0x00005b80      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x00005b84      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x00005b8a      e851160000     call sym.rpl_fts_open
0x00005b8f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x00005b92      740c           je 0x5ba0
0x00005b94      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x00005b98      c3             ret
0x00005b99      0f1f80000000.  nop dword [rax]
0x00005ba0      e85bbbffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x00005ba5      833816         cmp dword [rax], 0x16
0x00005ba8      7406           je 0x5bb0
0x00005baa      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x00005baf      90             nop
0x00005bb0      488d0d595300.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0xaf10 ; "xfts_open"
0x00005bb7      488d35225300.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0xaee0 ; "../coreutils-8.31/lib/xfts.c"
0x00005bbe      488d3d385300.  lea rdi, str.errno____EINVAL            ; 0xaefd ; "errno != EINVAL"
0x00005bc5      ba29000000     mov edx, 0x29                           ; ')'
0x00005bca      e871bcffff     call sym.imp.__assert_fail
0x00005bcf      90             nop
;-- cycle_warning_required:
0x00005bd0      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00005bd3      b801000000     mov eax, 1
0x00005bd8      83e211         and edx, 0x11
0x00005bdb      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x00005bde      7407           je 0x5be7
0x00005be0      31c0           xor eax, eax
0x00005be2      83fa11         cmp edx, 0x11
0x00005be5      7409           je 0x5bf0
0x00005be7      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00005be9      0f1f80000000.  nop dword [rax]
0x00005bf0      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x00005bf5      0f95c0         setne al
0x00005bf8      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00005bf9      0f1f80000000.  nop dword [rax]
;-- AD_compare:
0x00005c00      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x00005c02      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00005c06      48395708       cmp qword [rdi + 8], rdx
0x00005c0a      7404           je 0x5c10
0x00005c0c      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00005c0e      6690           nop
0x00005c10      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x00005c13      483907         cmp qword [rdi], rax
0x00005c16      0f94c0         sete al
0x00005c19      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x00005c1a      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x00005c20      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x00005c24      31d2           xor edx, edx
0x00005c26      48f7f6         div rsi
0x00005c29      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x00005c2c      c3             ret
0x00005c2d      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x00005c30      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x00005c33      31d2           xor edx, edx
0x00005c35      48f7f6         div rsi
0x00005c38      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x00005c3b      c3             ret
0x00005c3c      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00005c40      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00005c43      483907         cmp qword [rdi], rax
0x00005c46      0f94c0         sete al
0x00005c49      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x00005c4a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00005c50      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00005c53      488b06         mov rax, qword [rsi]
0x00005c56      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x00005c5d      483982800000.  cmp qword [rdx + 0x80], rax
0x00005c64      720a           jb 0x5c70
0x00005c66      0f97c0         seta al
0x00005c69      0fb6c0         movzx eax, al
0x00005c6c      c3             ret
0x00005c6d      0f1f00         nop dword [rax]
0x00005c70      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005c75      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x00005c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x00005c80      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x00005c82      55             push rbp
0x00005c83      4889f5         mov rbp, rsi
0x00005c86      53             push rbx
0x00005c87      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x00005c8c      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x00005c90      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x00005c93      8b4748         mov eax, dword [rdi + 0x48]
0x00005c96      488b7630       mov rsi, qword [rsi + 0x30]
0x00005c9a      7564           jne 0x5d00                              ; ../coreutils-8.31/lib/fts.c:1803
0x00005c9c      a801           test al, 1
0x00005c9e      7460           je 0x5d00
0x00005ca0      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x00005ca3      bf01000000     mov edi, 1
0x00005ca8      e853bcffff     call sym.imp.__xstat
0x00005cad      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x00005caf      747a           je 0x5d2b
0x00005cb1      e84abaffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x00005cb6      4989c4         mov r12, rax
0x00005cb9      8b00           mov eax, dword [rax]
0x00005cbb      83f802         cmp eax, 2
0x00005cbe      0f840c010000   je 0x5dd0
0x00005cc4      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005cc8      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x00005ccb      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00005cd3      48c783880000.  mov qword [rbx + 0x88], 0
0x00005cde      31c0           xor eax, eax
0x00005ce0      4883e7f8       and rdi, 0xfffffffffffffff8
0x00005ce4      4829fb         sub rbx, rdi
0x00005ce7      8d8b90000000   lea ecx, [rbx + 0x90]
0x00005ced      c1e903         shr ecx, 3
0x00005cf0      f348ab         rep stosq qword [rdi], rax
0x00005cf3      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x00005cf8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00005cf9      5d             pop rbp
0x00005cfa      415c           pop r12
0x00005cfc      c3             ret
0x00005cfd      0f1f00         nop dword [rax]
0x00005d00      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x00005d02      759c           jne 0x5ca0
0x00005d04      84d2           test dl, dl
0x00005d06      7598           jne 0x5ca0
0x00005d08      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x00005d0b      418b74242c     mov esi, dword [r12 + 0x2c]
0x00005d10      41b800010000   mov r8d, 0x100
0x00005d16      4889d9         mov rcx, rbx
0x00005d19      bf01000000     mov edi, 1
0x00005d1e      e8edbaffff     call sym.imp.__fxstatat
0x00005d23      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x00005d25      0f8595000000   jne 0x5dc0
0x00005d2b      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x00005d31      2500f00000     and eax, 0xf000
0x00005d36      3d00400000     cmp eax, 0x4000                         ; "L)\xf2L\x89\xee\xe8\x15@"
0x00005d3b      7423           je 0x5d60
0x00005d3d      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00005d42      0f84d0000000   je 0x5e18
0x00005d48      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x00005d4d      0f94c0         sete al
0x00005d50      0fb6c0         movzx eax, al
0x00005d53      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00005d54      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00005d58      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00005d59      415c           pop r12
0x00005d5b      c3             ret
0x00005d5c      0f1f4000       nop dword [rax]
0x00005d60      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x00005d67      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x00005d6b      0f867f000000   jbe 0x5df0
0x00005d71      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x00005d76      7e78           jle 0x5df0
0x00005d78      41f644244820   test byte [r12 + 0x48], 0x20
0x00005d7e      488d50fe       lea rdx, [rax - 2]
0x00005d82      480f44c2       cmove rax, rdx
0x00005d86      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x00005d8d      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x00005d91      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x00005d96      0f855cffffff   jne 0x5cf8                              ; ../coreutils-8.31/lib/fts.c:1834
0x00005d9c      80bd09010000.  cmp byte [rbp + 0x109], 0
0x00005da3      0f857f000000   jne 0x5e28
0x00005da9      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x00005dae      19c0           sbb eax, eax
0x00005db0      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x00005db3      83c005         add eax, 5
0x00005db6      e93dffffff     jmp 0x5cf8
0x00005dbb      0f1f440000     nop dword [rax + rax]
0x00005dc0      e83bb9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x00005dc5      8b00           mov eax, dword [rax]
0x00005dc7      e9f8feffff     jmp 0x5cc4
0x00005dcc      0f1f4000       nop dword [rax]
0x00005dd0      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005dd4      4889da         mov rdx, rbx
0x00005dd7      bf01000000     mov edi, 1
0x00005ddc      e8dfb9ffff     call sym.imp.__lxstat
0x00005de1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x00005de3      741b           je 0x5e00
0x00005de5      418b0424       mov eax, dword [r12]
0x00005de9      e9d6feffff     jmp 0x5cc4
0x00005dee      6690           nop
0x00005df0      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x00005df7      eb8d           jmp 0x5d86
0x00005df9      0f1f80000000.  nop dword [rax]
0x00005e00      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x00005e08      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x00005e0d      e9e6feffff     jmp 0x5cf8
0x00005e12      660f1f440000   nop word [rax + rax]
0x00005e18      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x00005e1d      e9d6feffff     jmp 0x5cf8
0x00005e22      660f1f440000   nop word [rax + rax]
0x00005e28      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x00005e2e      81e200ffff00   and edx, 0xffff00
0x00005e34      81fa002e0000   cmp edx, 0x2e00
0x00005e3a      0f85b8feffff   jne 0x5cf8
0x00005e40      e964ffffff     jmp 0x5da9
0x00005e45      90             nop
0x00005e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00005e50      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00005e52      4154           push r12
0x00005e54      4989d4         mov r12, rdx
0x00005e57      55             push rbp
0x00005e58      53             push rbx
0x00005e59      4889fd         mov rbp, rdi
0x00005e5c      4889f3         mov rbx, rsi
0x00005e5f      4883ec08       sub rsp, 8
0x00005e63      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x00005e67      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x00005e6b      488b7f10       mov rdi, qword [rdi + 0x10]
0x00005e6f      7334           jae 0x5ea5                              ; ../coreutils-8.31/lib/fts.c:1888
0x00005e71      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x00005e75      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x00005e7f      4839c6         cmp rsi, rax
0x00005e82      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x00005e86      0f8798000000   ja 0x5f24                               ; ../coreutils-8.31/lib/fts.c:1892
0x00005e8c      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x00005e90      e8fbbaffff     call sym.imp.realloc
0x00005e95      4885c0         test rax, rax
0x00005e98      4889c7         mov rdi, rax
0x00005e9b      0f847f000000   je 0x5f20
0x00005ea1      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x00005ea5      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x00005ea8      7417           je 0x5ec1
0x00005eaa      4889fa         mov rdx, rdi
0x00005ead      0f1f00         nop dword [rax]
0x00005eb0      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x00005eb4      48895af8       mov qword [rdx - 8], rbx
0x00005eb8      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x00005ebc      4885db         test rbx, rbx
0x00005ebf      75ef           jne 0x5eb0
0x00005ec1      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x00005ec4      ba08000000     mov edx, 8
0x00005ec9      4c89e6         mov rsi, r12
0x00005ecc      e86fb8ffff     call sym.imp.qsort
0x00005ed1      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00005ed5      4c89e1         mov rcx, r12
0x00005ed8      4883e901       sub rcx, 1
0x00005edc      498b00         mov rax, qword [r8]
0x00005edf      746f           je 0x5f50
0x00005ee1      4889c7         mov rdi, rax
0x00005ee4      4c89c2         mov rdx, r8
0x00005ee7      eb0a           jmp 0x5ef3
0x00005ee9      0f1f80000000.  nop dword [rax]
0x00005ef0      488b3a         mov rdi, qword [rdx]
0x00005ef3      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x00005ef7      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x00005efb      4883e901       sub rcx, 1
0x00005eff      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x00005f03      75eb           jne 0x5ef0                              ; ../coreutils-8.31/lib/fts.c:1905
0x00005f05      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x00005f0a      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x00005f12      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00005f16      5b             pop rbx
0x00005f17      5d             pop rbp
0x00005f18      415c           pop r12
0x00005f1a      415d           pop r13
0x00005f1c      c3             ret
0x00005f1d      0f1f00         nop dword [rax]
0x00005f20      488b7d10       mov rdi, qword [rbp + 0x10]
0x00005f24      e867bbffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x00005f29      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x00005f31      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x00005f39      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00005f3d      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00005f40      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00005f41      5d             pop rbp
0x00005f42      415c           pop r12
0x00005f44      415d           pop r13
0x00005f46      c3             ret
0x00005f47      660f1f840000.  nop word [rax + rax]
0x00005f50      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00005f53      ebb5           jmp 0x5f0a
0x00005f55      90             nop
0x00005f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x00005f60      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x00005f62      4154           push r12
0x00005f64      4989fc         mov r12, rdi
0x00005f67      55             push rbp
0x00005f68      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x00005f6f      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x00005f70      4989f5         mov r13, rsi
0x00005f73      4889d5         mov rbp, rdx
0x00005f76      4883ec08       sub rsp, 8
0x00005f7a      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x00005f7e      e89db9ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x00005f83      4885c0         test rax, rax
0x00005f86      4889c3         mov rbx, rax
0x00005f89      7451           je 0x5fdc
0x00005f8b      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005f92      4889ea         mov rdx, rbp
0x00005f95      4c89ee         mov rsi, r13
0x00005f98      e843b9ffff     call sym.imp.memcpy
0x00005f9d      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x00005fa2      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x00005faa      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x00005fae      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x00005fb2      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x00005fb9      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x00005fc1      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x00005fc5      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x00005fcc      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00005fd4      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x00005fdc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x00005fe0      4889d8         mov rax, rbx
0x00005fe3      5b             pop rbx
0x00005fe4      5d             pop rbp
0x00005fe5      415c           pop r12
0x00005fe7      415d           pop r13
0x00005fe9      c3             ret
0x00005fea      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x00005ff0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x00005ff3      743b           je 0x6030
0x00005ff5      55             push rbp
0x00005ff6      53             push rbx
0x00005ff7      4889fb         mov rbx, rdi
0x00005ffa      4883ec08       sub rsp, 8
0x00005ffe      6690           nop
0x00006000      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x00006004      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x00006008      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x0000600b      7405           je 0x6012
0x0000600d      e85eb8ffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x00006012      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x00006015      4889eb         mov rbx, rbp
0x00006018      e873baffff     call sym..plt.got
0x0000601d      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x00006020      75de           jne 0x6000
0x00006022      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x00006026      5b             pop rbx
0x00006027      5d             pop rbp
0x00006028      c3             ret
0x00006029      0f1f80000000.  nop dword [rax]
0x00006030      f3c3           ret
0x00006032      0f1f4000       nop dword [rax]
0x00006036      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00006040      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00006041      4889fb         mov rbx, rdi
0x00006044      eb16           jmp 0x605c                              ; ../coreutils-8.31/lib/fts.c:278
0x00006046      662e0f1f8400.  nop word cs:[rax + rax]
0x00006050      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00006053      e898350000     call sym.i_ring_pop
0x00006058      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x0000605a      7914           jns 0x6070
0x0000605c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x0000605f      e83c350000     call sym.i_ring_empty
0x00006064      84c0           test al, al
0x00006066      74e8           je 0x6050
0x00006068      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x00006069      c3             ret
0x0000606a      660f1f440000   nop word [rax + rax]
0x00006070      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x00006072      e8e9b7ffff     call sym.imp.close
0x00006077      ebe3           jmp 0x605c
0x00006079      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x00006080      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x00006082      4154           push r12
0x00006084      55             push rbp
0x00006085      53             push rbx
0x00006086      4881ec980000.  sub rsp, 0x98
0x0000608d      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x00006091      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x0000609a      488984248800.  mov qword [rsp + 0x88], rax
0x000060a2      31c0           xor eax, eax
0x000060a4      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x000060a8      7468           je 0x6112
0x000060aa      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x000060ae      4889fd         mov rbp, rdi
0x000060b1      4189f5         mov r13d, esi
0x000060b4      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x000060b7      7427           je 0x60e0
0x000060b9      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x000060bd      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x000060c0      4c89e7         mov rdi, r12
0x000060c3      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x000060c7      e8d4270000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x000060cc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x000060cf      743c           je 0x610d
0x000060d1      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x000060d5      eb3d           jmp 0x6114
0x000060d7      660f1f840000.  nop word [rax + rax]
0x000060e0      4c8b05e97e20.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x20dfd0:8]=0
0x000060e7      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x5c40 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x000060ee      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x5c30 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x000060f5      31f6           xor esi, esi
0x000060f7      bf0d000000     mov edi, 0xd
0x000060fc      e80f2a0000     call sym.hash_initialize
0x00006101      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x00006104      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x00006107      48894350       mov qword [rbx + 0x50], rax
0x0000610b      75ac           jne 0x60b9                              ; ../coreutils-8.31/lib/fts.c:725
0x0000610d      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x00006110      792e           jns 0x6140
0x00006112      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x00006114      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x0000611c      644833142528.  xor rdx, qword fs:[0x28]
0x00006125      4889d8         mov rax, rbx
0x00006128      7578           jne 0x61a2
0x0000612a      4881c4980000.  add rsp, 0x98
0x00006131      5b             pop rbx
0x00006132      5d             pop rbp
0x00006133      415c           pop r12
0x00006135      415d           pop r13
0x00006137      c3             ret
0x00006138      0f1f84000000.  nop dword [rax + rax]
0x00006140      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00006145      4489ef         mov edi, r13d
0x00006148      e8c3b8ffff     call sym.imp.fstatfs
0x0000614d      85c0           test eax, eax
0x0000614f      75c1           jne 0x6112
0x00006151      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00006154      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006159      74b9           je 0x6114
0x0000615b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x00006160      e8bbb7ffff     call sym.imp.malloc
0x00006165      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x00006168      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x0000616b      74a7           je 0x6114                               ; ../coreutils-8.31/lib/fts.c:741
0x0000616d      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x00006171      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x00006175      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x00006178      4c89e7         mov rdi, r12
0x0000617b      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x0000617f      e88c310000     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x00006184      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x00006187      740f           je 0x6198
0x00006189      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x0000618c      7519           jne 0x61a7
0x0000618e      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006193      e97cffffff     jmp 0x6114                              ; ../coreutils-8.31/lib/fts.c:754
0x00006198      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x0000619b      e8f0b8ffff     call sym..plt.got
0x000061a0      ebec           jmp 0x618e
0x000061a2      e839b6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x000061a7      e844b5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x000061ac      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x000061b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x000061b4      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x000061b9      483d73496552   cmp rax, 0x52654973
0x000061bf      744f           je 0x6210
0x000061c1      7e2d           jle 0x61f0
0x000061c3      483d42534658   cmp rax, 0x58465342
0x000061c9      7445           je 0x6210
0x000061cb      ba424d53ff     mov edx, 0xff534d42
0x000061d0      4839d0         cmp rax, rdx
0x000061d3      7430           je 0x6205
0x000061d5      483d4f414653   cmp rax, 0x5346414f
0x000061db      7428           je 0x6205
0x000061dd      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x000061e2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x000061e6      c3             ret
0x000061e7      660f1f840000.  nop word [rax + rax]
0x000061f0      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794 ; "fA\x89Mp\x0f\x87d\x02"
0x000061f6      740d           je 0x6205
0x000061f8      483da09f0000   cmp rax, 0x9fa0
0x000061fe      7405           je 0x6205
0x00006200      4885c0         test rax, rax
0x00006203      75d8           jne 0x61dd
0x00006205      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00006207      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x0000620b      c3             ret
0x0000620c      0f1f4000       nop dword [rax]
0x00006210      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00006215      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006219      c3             ret
0x0000621a      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00006220      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00006221      53             push rbx
0x00006222      89f5           mov ebp, esi
0x00006224      4889fb         mov rbx, rdi
0x00006227      4883ec08       sub rsp, 8
0x0000622b      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x0000622e      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00006230      7505           jne 0x6237
0x00006232      83fe9c         cmp esi, 0xffffff9c
0x00006235      754a           jne 0x6281
0x00006237      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00006239      7515           jne 0x6250
0x0000623b      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x0000623f      7504           jne 0x6245
0x00006241      85f6           test esi, esi
0x00006243      792b           jns 0x6270
0x00006245      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00006248      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000624c      5b             pop rbx
0x0000624d      5d             pop rbp
0x0000624e      c3             ret
0x0000624f      90             nop
0x00006250      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x00006254      e857330000     call sym.i_ring_push
0x00006259      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x0000625b      78e8           js 0x6245
0x0000625d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x0000625f      e8fcb5ffff     call sym.imp.close
0x00006264      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00006267      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000626b      5b             pop rbx
0x0000626c      5d             pop rbp
0x0000626d      c3             ret
0x0000626e      6690           nop
0x00006270      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x00006272      e8e9b5ffff     call sym.imp.close
0x00006277      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x0000627a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000627e      5b             pop rbx
0x0000627f      5d             pop rbp
0x00006280      c3             ret
0x00006281      e86ab4ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x00006286      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x00006290      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x00006291      53             push rbx
0x00006292      4889fb         mov rbx, rdi
0x00006295      4883ec08       sub rsp, 8
0x00006299      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x0000629c      89d5           mov ebp, edx
0x0000629e      83e504         and ebp, 4
0x000062a1      7545           jne 0x62e8
0x000062a3      80e602         and dh, 2
0x000062a6      7528           jne 0x62d0
0x000062a8      8b7f28         mov edi, dword [rdi + 0x28]
0x000062ab      31ed           xor ebp, ebp
0x000062ad      e8ceb6ffff     call sym.imp.fchdir
0x000062b2      85c0           test eax, eax
0x000062b4      400f95c5       setne bpl
0x000062b8      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x000062bc      e87ffdffff     call sym.fd_ring_clear
0x000062c1      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x000062c5      89e8           mov eax, ebp
0x000062c7      5b             pop rbx
0x000062c8      5d             pop rbp
0x000062c9      c3             ret
0x000062ca      660f1f440000   nop word [rax + rax]
0x000062d0      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x000062d5      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x000062da      e841ffffff     call sym.cwd_advance_fd
0x000062df      ebd7           jmp 0x62b8
0x000062e1      0f1f80000000.  nop dword [rax]
0x000062e8      31ed           xor ebp, ebp
0x000062ea      ebcc           jmp 0x62b8
0x000062ec      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x000062f0      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x000062f1      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x000062f4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x000062f7      488b3f         mov rdi, qword [rdi]
0x000062fa      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x00006302      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x00006305      7721           ja 0x6328
0x00006307      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x0000630a      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x0000630d      e87eb6ffff     call sym.imp.realloc
0x00006312      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x00006315      7431           je 0x6348
0x00006317      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x0000631a      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x0000631f      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00006320      c3             ret
0x00006321      0f1f80000000.  nop dword [rax]
0x00006328      e863b7ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x0000632d      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x00006334      e8c7b3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x00006339      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x0000633f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x00006341      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00006342      c3             ret
0x00006343      0f1f440000     nop dword [rax + rax]
0x00006348      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x0000634b      e840b7ffff     call sym..plt.got
0x00006350      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x00006357      31c0           xor eax, eax
0x00006359      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0000635a      c3             ret
0x0000635b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x00006360      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00006366      53             push rbx
0x00006367      4889f3         mov rbx, rsi
0x0000636a      7434           je 0x63a0                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x0000636c      4c8b055d7c20.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x20dfd0:8]=0
0x00006373      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x5c00 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000637a      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x5c20 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00006381      31f6           xor esi, esi
0x00006383      bf1f000000     mov edi, 0x1f
0x00006388      e883270000     call sym.hash_initialize
0x0000638d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00006390      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x00006393      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00006396      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00006397      c3             ret
0x00006398      0f1f84000000.  nop dword [rax + rax]
0x000063a0      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x000063a5      e876b5ffff     call sym.imp.malloc
0x000063aa      4889c7         mov rdi, rax
0x000063ad      488903         mov qword [rbx], rax
0x000063b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x000063b2      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x000063b5      74df           je 0x6396
0x000063b7      e8741d0000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x000063bc      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x000063c1      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x000063c2      c3             ret
0x000063c3      0f1f00         nop dword [rax]
0x000063c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x000063d0      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x000063d3      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x000063d5      c1e20d         shl edx, 0xd
0x000063d8      81e200000200   and edx, 0x20000
0x000063de      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x000063e4      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x000063ea      7514           jne 0x6400
0x000063ec      4889c7         mov rdi, rax
0x000063ef      89d6           mov esi, edx
0x000063f1      31c0           xor eax, eax
0x000063f3      e9d81d0000     jmp sym.open_safer
0x000063f8      0f1f84000000.  nop dword [rax + rax]
0x00006400      4889c6         mov rsi, rax
0x00006403      31c0           xor eax, eax
0x00006405      e966320000     jmp sym.openat_safer
0x0000640a      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x00006410      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x00006412      4156           push r14
0x00006414      4989f6         mov r14, rsi
0x00006417      4155           push r13
0x00006419      4154           push r12
0x0000641b      4989fd         mov r13, rdi
0x0000641e      55             push rbp
0x0000641f      53             push rbx
0x00006420      4189d4         mov r12d, edx
0x00006423      4889cd         mov rbp, rcx
0x00006426      4881ecb80000.  sub rsp, 0xb8
0x0000642d      8b5f48         mov ebx, dword [rdi + 0x48]
0x00006430      64488b042528.  mov rax, qword fs:[0x28]
0x00006439      48898424a800.  mov qword [rsp + 0xa8], rax
0x00006441      31c0           xor eax, eax
0x00006443      4189d9         mov r9d, ebx
0x00006446      4183e104       and r9d, 4
0x0000644a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x0000644d      0f84ad000000   je 0x6500
0x00006453      488d15c04a00.  lea rdx, [0x0000af1a]                   ; ".."
0x0000645a      b903000000     mov ecx, 3
0x0000645f      4889ee         mov rsi, rbp
0x00006462      4889d7         mov rdi, rdx
0x00006465      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006467      0f97c0         seta al
0x0000646a      1c00           sbb al, 0
0x0000646c      84c0           test al, al
0x0000646e      0f858c000000   jne 0x6500
0x00006474      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00006477      0f8588000000   jne 0x6505
0x0000647d      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x00006480      0f89e4010000   jns 0x666a
0x00006486      f6c702         test bh, 2
0x00006489      0f8541010000   jne 0x65d0
0x0000648f      c644240f01     mov byte [rsp + 0xf], 1
0x00006494      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x00006498      4889ea         mov rdx, rbp
0x0000649b      89de           mov esi, ebx
0x0000649d      e82effffff     call sym.diropen.isra.6
0x000064a2      85c0           test eax, eax
0x000064a4      4189c7         mov r15d, eax
0x000064a7      0f88ae010000   js 0x665b
0x000064ad      418b5d48       mov ebx, dword [r13 + 0x48]
0x000064b1      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x000064b4      0f84a0000000   je 0x655a
0x000064ba      660f1f440000   nop word [rax + rax]
0x000064c0      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x000064c5      4489fe         mov esi, r15d
0x000064c8      bf01000000     mov edi, 1
0x000064cd      e88eb4ffff     call sym.imp.__fxstat
0x000064d2      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x000064d4      0f84c6000000   je 0x65a0
0x000064da      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x000064df      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x000064e2      7931           jns 0x6515
0x000064e4      e817b2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x000064e9      448b20         mov r12d, dword [rax]
0x000064ec      4889c5         mov rbp, rax
0x000064ef      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x000064f2      e869b3ffff     call sym.imp.close
0x000064f7      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x000064fb      eb18           jmp 0x6515
0x000064fd      0f1f00         nop dword [rax]
0x00006500      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00006503      743b           je 0x6540
0x00006505      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x00006508      7409           je 0x6513
0x0000650a      4585e4         test r12d, r12d
0x0000650d      0f89ad000000   jns 0x65c0
0x00006513      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x00006515      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x0000651d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00006526      89d8           mov eax, ebx
0x00006528      0f8537010000   jne 0x6665
0x0000652e      4881c4b80000.  add rsp, 0xb8
0x00006535      5b             pop rbx
0x00006536      5d             pop rbp
0x00006537      415c           pop r12
0x00006539      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x0000653b      415e           pop r14
0x0000653d      415f           pop r15
0x0000653f      c3             ret
0x00006540      4585e4         test r12d, r12d
0x00006543      0f8837010000   js 0x6680
0x00006549      f6c302         test bl, 2
0x0000654c      4589e7         mov r15d, r12d
0x0000654f      c644240f00     mov byte [rsp + 0xf], 0
0x00006554      0f8566ffffff   jne 0x64c0
0x0000655a      4885ed         test rbp, rbp
0x0000655d      7421           je 0x6580
0x0000655f      488d15b44900.  lea rdx, [0x0000af1a]                   ; ".."
0x00006566      b903000000     mov ecx, 3
0x0000656b      4889ee         mov rsi, rbp
0x0000656e      4889d7         mov rdi, rdx
0x00006571      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006573      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x00006576      1c00           sbb al, 0
0x00006578      84c0           test al, al
0x0000657a      0f8440ffffff   je 0x64c0
0x00006580      80e702         and bh, 2
0x00006583      0f858f000000   jne 0x6618
0x00006589      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x0000658c      e8efb3ffff     call sym.imp.fchdir
0x00006591      89c3           mov ebx, eax
0x00006593      e947ffffff     jmp 0x64df
0x00006598      0f1f84000000.  nop dword [rax + rax]
0x000065a0      488b442410     mov rax, qword [rsp + 0x10]
0x000065a5      49394678       cmp qword [r14 + 0x78], rax
0x000065a9      0f8491000000   je 0x6640                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x000065af      e84cb1ffff     call sym.imp.__errno_location
0x000065b4      c70002000000   mov dword [rax], 2
0x000065ba      e91bffffff     jmp 0x64da
0x000065bf      90             nop
0x000065c0      4489e7         mov edi, r12d
0x000065c3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x000065c5      e896b2ffff     call sym.imp.close
0x000065ca      e946ffffff     jmp 0x6515
0x000065cf      90             nop
0x000065d0      4d8d7d60       lea r15, [r13 + 0x60]
0x000065d4      4c89ff         mov rdi, r15
0x000065d7      e8c42f0000     call sym.i_ring_empty
0x000065dc      84c0           test al, al
0x000065de      8844240f       mov byte [rsp + 0xf], al
0x000065e2      0f85acfeffff   jne 0x6494
0x000065e8      4c89ff         mov rdi, r15
0x000065eb      e800300000     call sym.i_ring_pop
0x000065f0      85c0           test eax, eax
0x000065f2      4189c7         mov r15d, eax
0x000065f5      418b5d48       mov ebx, dword [r13 + 0x48]
0x000065f9      0f8890feffff   js 0x648f                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x000065ff      f6c302         test bl, 2
0x00006602      4189c4         mov r12d, eax
0x00006605      c644240f01     mov byte [rsp + 0xf], 1
0x0000660a      0f8470ffffff   je 0x6580
0x00006610      e9abfeffff     jmp 0x64c0
0x00006615      0f1f00         nop dword [rax]
0x00006618      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x0000661e      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x00006621      4c89ef         mov rdi, r13
0x00006624      31db           xor ebx, ebx
0x00006626      4183f601       xor r14d, 1
0x0000662a      410fb6d6       movzx edx, r14b
0x0000662e      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00006633      e9ddfeffff     jmp 0x6515
0x00006638      0f1f84000000.  nop dword [rax + rax]
0x00006640      488b442418     mov rax, qword [rsp + 0x18]
0x00006645      493986800000.  cmp qword [r14 + 0x80], rax
0x0000664c      0f855dffffff   jne 0x65af
0x00006652      418b5d48       mov ebx, dword [r13 + 0x48]
0x00006656      e925ffffff     jmp 0x6580                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x0000665b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x00006660      e9b0feffff     jmp 0x6515
0x00006665      e876b1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x0000666a      f6c302         test bl, 2
0x0000666d      4589e7         mov r15d, r12d
0x00006670      c644240f01     mov byte [rsp + 0xf], 1
0x00006675      0f84ebfeffff   je 0x6566                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x0000667b      e940feffff     jmp 0x64c0
0x00006680      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x00006685      e90afeffff     jmp 0x6494
0x0000668a      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x00006690      81e702010000   and edi, 0x102
0x00006696      4154           push r12
0x00006698      4989f4         mov r12, rsi
0x0000669b      55             push rbp
0x0000669c      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x0000669d      4889d3         mov rbx, rdx
0x000066a0      746e           je 0x6710
0x000066a2      bf18000000     mov edi, 0x18
0x000066a7      e874b2ffff     call sym.imp.malloc
0x000066ac      4885c0         test rax, rax
0x000066af      4889c5         mov rbp, rax
0x000066b2      0f8480000000   je 0x6738
0x000066b8      488b4378       mov rax, qword [rbx + 0x78]
0x000066bc      498b3c24       mov rdi, qword [r12]
0x000066c0      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x000066c3      48895d10       mov qword [rbp + 0x10], rbx
0x000066c7      48894500       mov qword [rbp], rax
0x000066cb      488b83800000.  mov rax, qword [rbx + 0x80]
0x000066d2      48894508       mov qword [rbp + 8], rax
0x000066d6      e8352c0000     call sym.hash_insert
0x000066db      4839c5         cmp rbp, rax
0x000066de      4989c4         mov r12, rax
0x000066e1      741e           je 0x6701
0x000066e3      4889ef         mov rdi, rbp
0x000066e6      e8a5b3ffff     call sym..plt.got
0x000066eb      4d85e4         test r12, r12
0x000066ee      7448           je 0x6738
0x000066f0      498b442410     mov rax, qword [r12 + 0x10]
0x000066f5      b902000000     mov ecx, 2
0x000066fa      66894b70       mov word [rbx + 0x70], cx
0x000066fe      488903         mov qword [rbx], rax
0x00006701      5b             pop rbx
0x00006702      b801000000     mov eax, 1
0x00006707      5d             pop rbp
0x00006708      415c           pop r12
0x0000670a      c3             ret
0x0000670b      0f1f440000     nop dword [rax + rax]
0x00006710      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x00006714      488d7278       lea rsi, [rdx + 0x78]
0x00006718      e8231a0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x0000671d      84c0           test al, al
0x0000671f      74e0           je 0x6701
0x00006721      ba02000000     mov edx, 2
0x00006726      48891b         mov qword [rbx], rbx
0x00006729      66895370       mov word [rbx + 0x70], dx
0x0000672d      5b             pop rbx
0x0000672e      5d             pop rbp
0x0000672f      415c           pop r12
0x00006731      c3             ret
0x00006732      660f1f440000   nop word [rax + rax]
0x00006738      5b             pop rbx
0x00006739      31c0           xor eax, eax
0x0000673b      5d             pop rbp
0x0000673c      415c           pop r12
0x0000673e      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000673f      90             nop
;-- leave_dir.isra.12:
0x00006740      4883ec28       sub rsp, 0x28
0x00006744      4889f1         mov rcx, rsi
0x00006747      64488b042528.  mov rax, qword fs:[0x28]
0x00006750      4889442418     mov qword [rsp + 0x18], rax
0x00006755      31c0           xor eax, eax
0x00006757      81e702010000   and edi, 0x102
0x0000675d      7541           jne 0x67a0                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000675f      488b4208       mov rax, qword [rdx + 8]
0x00006763      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x00006766      741d           je 0x6785
0x00006768      4883785800     cmp qword [rax + 0x58], 0
0x0000676d      7816           js 0x6785
0x0000676f      488b0e         mov rcx, qword [rsi]
0x00006772      4883791000     cmp qword [rcx + 0x10], 0
0x00006777      747a           je 0x67f3
0x00006779      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x00006780      483931         cmp qword [rcx], rsi
0x00006783      744b           je 0x67d0
0x00006785      488b442418     mov rax, qword [rsp + 0x18]
0x0000678a      644833042528.  xor rax, qword fs:[0x28]
0x00006793      7559           jne 0x67ee
0x00006795      4883c428       add rsp, 0x28
0x00006799      c3             ret
0x0000679a      660f1f440000   nop word [rax + rax]
0x000067a0      488b4278       mov rax, qword [rdx + 0x78]
0x000067a4      488b39         mov rdi, qword [rcx]
0x000067a7      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x000067aa      48890424       mov qword [rsp], rax
0x000067ae      488b82800000.  mov rax, qword [rdx + 0x80]
0x000067b5      4889442408     mov qword [rsp + 8], rax
0x000067ba      e8b12b0000     call sym.hash_delete
0x000067bf      4885c0         test rax, rax
0x000067c2      742f           je 0x67f3
0x000067c4      4889c7         mov rdi, rax
0x000067c7      e8c4b2ffff     call sym..plt.got
0x000067cc      ebb7           jmp 0x6785
0x000067ce      6690           nop
0x000067d0      488b7278       mov rsi, qword [rdx + 0x78]
0x000067d4      48397108       cmp qword [rcx + 8], rsi
0x000067d8      75ab           jne 0x6785
0x000067da      488b5078       mov rdx, qword [rax + 0x78]
0x000067de      488b80800000.  mov rax, qword [rax + 0x80]
0x000067e5      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x000067e9      488901         mov qword [rcx], rax
0x000067ec      eb97           jmp 0x6785
0x000067ee      e8edafffff     call sym.imp.__stack_chk_fail
0x000067f3      e8f8aeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x000067f8      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x00006800      4157           push r15
0x00006802      4156           push r14
0x00006804      4989ff         mov r15, rdi
0x00006807      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x00006809      4154           push r12
0x0000680b      55             push rbp
0x0000680c      53             push rbx
0x0000680d      4883ec78       sub rsp, 0x78
0x00006811      488b2f         mov rbp, qword [rdi]
0x00006814      64488b042528.  mov rax, qword fs:[0x28]
0x0000681d      4889442468     mov qword [rsp + 0x68], rax
0x00006822      31c0           xor eax, eax
0x00006824      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x00006828      488b4518       mov rax, qword [rbp + 0x18]
0x0000682c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x0000682f      4889442450     mov qword [rsp + 0x50], rax
0x00006834      0f8436040000   je 0x6c70
0x0000683a      4889c7         mov rdi, rax
0x0000683d      e87eb0ffff     call sym.imp.dirfd
0x00006842      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x00006844      89442464       mov dword [rsp + 0x64], eax
0x00006848      0f8852050000   js 0x6da0
0x0000684e      49837f4000     cmp qword [r15 + 0x40], 0
0x00006853      0f84cf070000   je 0x7028
0x00006859      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00006862      418b7f48       mov edi, dword [r15 + 0x48]
0x00006866      c644245f01     mov byte [rsp + 0x5f], 1
0x0000686b      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000686f      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x00006873      48c744244000.  mov qword [rsp + 0x40], 0
0x0000687c      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x00006881      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x00006885      480f45c1       cmovne rax, rcx
0x00006889      83e704         and edi, 4
0x0000688c      4889442448     mov qword [rsp + 0x48], rax
0x00006891      7410           je 0x68a3
0x00006893      49034720       add rax, qword [r15 + 0x20]
0x00006897      488d5801       lea rbx, [rax + 1]
0x0000689b      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x0000689e      48895c2440     mov qword [rsp + 0x40], rbx
0x000068a3      488b442448     mov rax, qword [rsp + 0x48]
0x000068a8      498b5f30       mov rbx, qword [r15 + 0x30]
0x000068ac      c644245e00     mov byte [rsp + 0x5e], 0
0x000068b1      c644245d00     mov byte [rsp + 0x5d], 0
0x000068b6      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x000068bf      48c744241000.  mov qword [rsp + 0x10], 0
0x000068c8      4883c001       add rax, 1
0x000068cc      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x000068d1      4829c3         sub rbx, rax
0x000068d4      4889442418     mov qword [rsp + 0x18], rax
0x000068d9      488b4558       mov rax, qword [rbp + 0x58]
0x000068dd      48895c2428     mov qword [rsp + 0x28], rbx
0x000068e2      31db           xor ebx, ebx
0x000068e4      4883c001       add rax, 1
0x000068e8      4889442430     mov qword [rsp + 0x30], rax
0x000068ed      e9dd000000     jmp 0x69cf
0x000068f2      660f1f440000   nop word [rax + rax]
0x000068f8      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x000068fb      4c034c2418     add r9, qword [rsp + 0x18]
0x00006900      0f825a080000   jb 0x7160
0x00006906      488b442430     mov rax, qword [rsp + 0x30]
0x0000690b      498db5080100.  lea rsi, [r13 + 0x108]
0x00006912      49894558       mov qword [r13 + 0x58], rax
0x00006916      498b07         mov rax, qword [r15]
0x00006919      4d894d48       mov qword [r13 + 0x48], r9
0x0000691d      49894508       mov qword [r13 + 8], rax
0x00006921      488b4500       mov rax, qword [rbp]
0x00006925      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x0000692c      418b4748       mov eax, dword [r15 + 0x48]
0x00006930      a804           test al, 4
0x00006932      0f8568020000   jne 0x6ba0
0x00006938      49897530       mov qword [r13 + 0x30], rsi
0x0000693c      49837f4000     cmp qword [r15 + 0x40], 0
0x00006941      7409           je 0x694c
0x00006943      f6c404         test ah, 4
0x00006946      0f84fc020000   je 0x6c48
0x0000694c      0fb65512       movzx edx, byte [rbp + 0x12]
0x00006950      83e018         and eax, 0x18
0x00006953      89d6           mov esi, edx
0x00006955      83ea01         sub edx, 1
0x00006958      83f818         cmp eax, 0x18
0x0000695b      0f84af020000   je 0x6c10                               ; ../coreutils-8.31/lib/fts.c:1359
0x00006961      b90b000000     mov ecx, 0xb
0x00006966      83fa0b         cmp edx, 0xb
0x00006969      6641894d70     mov word [r13 + 0x70], cx
0x0000696e      0f8764020000   ja 0x6bd8
0x00006974      488d05a54500.  lea rax, obj.CSWTCH.53                  ; 0xaf20
0x0000697b      8b0490         mov eax, dword [rax + rdx*4]
0x0000697e      418985900000.  mov dword [r13 + 0x90], eax
0x00006985      b802000000     mov eax, 2
0x0000698a      498985a80000.  mov qword [r13 + 0xa8], rax
0x00006991      48837c241000   cmp qword [rsp + 0x10], 0
0x00006997      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x0000699f      0f8423020000   je 0x6bc8
0x000069a5      488b442408     mov rax, qword [rsp + 8]
0x000069aa      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x000069ae      4881fb102700.  cmp rbx, 0x2710
0x000069b5      0f84f5000000   je 0x6ab0
0x000069bb      4883c301       add rbx, 1
0x000069bf      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x000069c4      0f833e010000   jae 0x6b08
0x000069ca      4c896c2408     mov qword [rsp + 8], r13
0x000069cf      488b442420     mov rax, qword [rsp + 0x20]
0x000069d4      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x000069d8      4d85ed         test r13, r13
0x000069db      0f84c7040000   je 0x6ea8
0x000069e1      e81aadffff     call sym.imp.__errno_location
0x000069e6      4c89ef         mov rdi, r13
0x000069e9      c70000000000   mov dword [rax], 0
0x000069ef      4989c4         mov r12, rax
0x000069f2      e819afffff     call sym.imp.readdir
0x000069f7      4885c0         test rax, rax
0x000069fa      4889c5         mov rbp, rax
0x000069fd      0f847d050000   je 0x6f80
0x00006a03      41f6474820     test byte [r15 + 0x48], 0x20
0x00006a08      750a           jne 0x6a14
0x00006a0a      8078132e       cmp byte [rax + 0x13], 0x2e
0x00006a0e      0f84dc010000   je 0x6bf0
0x00006a14      4c8d6d13       lea r13, [rbp + 0x13]
0x00006a18      4c89ef         mov rdi, r13
0x00006a1b      e890adffff     call sym.imp.strlen
0x00006a20      4c89ee         mov rsi, r13
0x00006a23      4889c2         mov rdx, rax
0x00006a26      4c89ff         mov rdi, r15
0x00006a29      4989c6         mov r14, rax
0x00006a2c      e82ff5ffff     call sym.fts_alloc
0x00006a31      4885c0         test rax, rax
0x00006a34      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x00006a37      0f8413040000   je 0x6e50
0x00006a3d      4c39742428     cmp qword [rsp + 0x28], r14
0x00006a42      0f87b0feffff   ja 0x68f8
0x00006a48      498b4720       mov rax, qword [r15 + 0x20]
0x00006a4c      498d7730       lea rsi, [r15 + 0x30]
0x00006a50      498d7f20       lea rdi, [r15 + 0x20]
0x00006a54      4889442428     mov qword [rsp + 0x28], rax
0x00006a59      488b442448     mov rax, qword [rsp + 0x48]
0x00006a5e      4a8d543002     lea rdx, [rax + r14 + 2]
0x00006a63      e888f8ffff     call sym.fts_palloc.isra.2
0x00006a68      84c0           test al, al
0x00006a6a      0f84e0030000   je 0x6e50
0x00006a70      498b5720       mov rdx, qword [r15 + 0x20]
0x00006a74      483b542428     cmp rdx, qword [rsp + 0x28]
0x00006a79      0f84e1010000   je 0x6c60
0x00006a7f      4803542418     add rdx, qword [rsp + 0x18]
0x00006a84      41f6474804     test byte [r15 + 0x48], 4
0x00006a89      480f44542440   cmove rdx, qword [rsp + 0x40]
0x00006a8f      4889542440     mov qword [rsp + 0x40], rdx
0x00006a94      498b4f30       mov rcx, qword [r15 + 0x30]
0x00006a98      482b4c2418     sub rcx, qword [rsp + 0x18]
0x00006a9d      8844245d       mov byte [rsp + 0x5d], al
0x00006aa1      48894c2428     mov qword [rsp + 0x28], rcx
0x00006aa6      e94dfeffff     jmp 0x68f8
0x00006aab      0f1f440000     nop dword [rax + rax]
0x00006ab0      49837f4000     cmp qword [r15 + 0x40], 0
0x00006ab5      0f8500ffffff   jne 0x69bb
0x00006abb      8b742464       mov esi, dword [rsp + 0x64]
0x00006abf      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00006ac4      e8b7f5ffff     call sym.filesystem_type
0x00006ac9      483d94190201   cmp rax, 0x1021994
0x00006acf      0f846b030000   je 0x6e40
0x00006ad5      b9424d53ff     mov ecx, 0xff534d42
0x00006ada      4839c8         cmp rax, rcx
0x00006add      0f845d030000   je 0x6e40
0x00006ae3      483d69690000   cmp rax, 0x6969                         ; "fA\x89Mp\x0f\x87d\x02"
0x00006ae9      0f8451030000   je 0x6e40
0x00006aef      4883c301       add rbx, 1
0x00006af3      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00006af8      c644245e01     mov byte [rsp + 0x5e], 1
0x00006afd      0f82c7feffff   jb 0x69ca
0x00006b03      0f1f440000     nop dword [rax + rax]
0x00006b08      807c245d00     cmp byte [rsp + 0x5d], 0
0x00006b0d      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x00006b12      0f849e030000   je 0x6eb6
0x00006b18      498b4708       mov rax, qword [r15 + 8]
0x00006b1c      498b4f20       mov rcx, qword [r15 + 0x20]
0x00006b20      4885c0         test rax, rax
0x00006b23      742b           je 0x6b50
0x00006b25      0f1f00         nop dword [rax]
0x00006b28      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x00006b2c      488db0080100.  lea rsi, [rax + 0x108]
0x00006b33      4839f2         cmp rdx, rsi
0x00006b36      740b           je 0x6b43
0x00006b38      482b5038       sub rdx, qword [rax + 0x38]
0x00006b3c      4801ca         add rdx, rcx
0x00006b3f      48895030       mov qword [rax + 0x30], rdx
0x00006b43      48894838       mov qword [rax + 0x38], rcx
0x00006b47      488b4010       mov rax, qword [rax + 0x10]
0x00006b4b      4885c0         test rax, rax
0x00006b4e      75d8           jne 0x6b28
0x00006b50      488b442410     mov rax, qword [rsp + 0x10]
0x00006b55      eb0c           jmp 0x6b63
0x00006b57      660f1f840000.  nop word [rax + rax]
0x00006b60      4889d0         mov rax, rdx
0x00006b63      4883785800     cmp qword [rax + 0x58], 0
0x00006b68      0f8848030000   js 0x6eb6
0x00006b6e      488b5030       mov rdx, qword [rax + 0x30]
0x00006b72      488db0080100.  lea rsi, [rax + 0x108]
0x00006b79      4839f2         cmp rdx, rsi
0x00006b7c      740b           je 0x6b89
0x00006b7e      482b5038       sub rdx, qword [rax + 0x38]
0x00006b82      4801ca         add rdx, rcx
0x00006b85      48895030       mov qword [rax + 0x30], rdx
0x00006b89      488b5010       mov rdx, qword [rax + 0x10]
0x00006b8d      48894838       mov qword [rax + 0x38], rcx
0x00006b91      4885d2         test rdx, rdx
0x00006b94      75ca           jne 0x6b60
0x00006b96      488b5008       mov rdx, qword [rax + 8]
0x00006b9a      ebc4           jmp 0x6b60
0x00006b9c      0f1f4000       nop dword [rax]
0x00006ba0      498b4538       mov rax, qword [r13 + 0x38]
0x00006ba4      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x00006ba9      49894530       mov qword [r13 + 0x30], rax
0x00006bad      498b4560       mov rax, qword [r13 + 0x60]
0x00006bb1      488d5001       lea rdx, [rax + 1]
0x00006bb5      e806aeffff     call sym.imp.memmove
0x00006bba      418b4748       mov eax, dword [r15 + 0x48]
0x00006bbe      e979fdffff     jmp 0x693c
0x00006bc3      0f1f440000     nop dword [rax + rax]
0x00006bc8      4c896c2410     mov qword [rsp + 0x10], r13
0x00006bcd      e9dcfdffff     jmp 0x69ae
0x00006bd2      660f1f440000   nop word [rax + rax]
0x00006bd8      41c785900000.  mov dword [r13 + 0x90], 0
0x00006be3      b802000000     mov eax, 2
0x00006be8      e99dfdffff     jmp 0x698a
0x00006bed      0f1f00         nop dword [rax]
0x00006bf0      80781400       cmp byte [rax + 0x14], 0
0x00006bf4      740b           je 0x6c01
0x00006bf6      668378142e     cmp word [rax + 0x14], 0x2e
0x00006bfb      0f8513feffff   jne 0x6a14
0x00006c01      4c8b6c2408     mov r13, qword [rsp + 8]
0x00006c06      e9bffdffff     jmp 0x69ca                              ; ../coreutils-8.31/lib/fts.c:860
0x00006c0b      0f1f440000     nop dword [rax + rax]
0x00006c10      81e6fb000000   and esi, 0xfb
0x00006c16      0f8445fdffff   je 0x6961
0x00006c1c      b80b000000     mov eax, 0xb
0x00006c21      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x00006c24      6641894570     mov word [r13 + 0x70], ax
0x00006c29      0f8687050000   jbe 0x71b6
0x00006c2f      41c785900000.  mov dword [r13 + 0x90], 0
0x00006c3a      b801000000     mov eax, 1
0x00006c3f      e946fdffff     jmp 0x698a
0x00006c44      0f1f4000       nop dword [rax]
0x00006c48      31d2           xor edx, edx
0x00006c4a      4c89ee         mov rsi, r13
0x00006c4d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00006c50      e82bf0ffff     call sym.fts_stat
0x00006c55      6641894570     mov word [r13 + 0x70], ax
0x00006c5a      e932fdffff     jmp 0x6991
0x00006c5f      90             nop
0x00006c60      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x00006c65      e92afeffff     jmp 0x6a94
0x00006c6a      660f1f440000   nop word [rax + rax]
0x00006c70      8b4748         mov eax, dword [rdi + 0x48]
0x00006c73      89c2           mov edx, eax
0x00006c75      83e210         and edx, 0x10
0x00006c78      740d           je 0x6c87
0x00006c7a      a801           test al, 1
0x00006c7c      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x00006c81      0f8501010000   jne 0x6d88
0x00006c87      2504020000     and eax, 0x204
0x00006c8c      488b7530       mov rsi, qword [rbp + 0x30]
0x00006c90      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00006c95      3d00020000     cmp eax, 0x200
0x00006c9a      7504           jne 0x6ca0
0x00006c9c      418b7f2c       mov edi, dword [r15 + 0x2c]
0x00006ca0      488d4c2464     lea rcx, [rsp + 0x64]
0x00006ca5      e8362a0000     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x00006caa      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x00006cad      48894518       mov qword [rbp + 0x18], rax
0x00006cb1      0f8419030000   je 0x6fd0
0x00006cb7      66837d700b     cmp word [rbp + 0x70], 0xb
0x00006cbc      0f848e030000   je 0x7050
0x00006cc2      418b7f48       mov edi, dword [r15 + 0x48]
0x00006cc6      f7c700010000   test edi, 0x100
0x00006ccc      0f851e010000   jne 0x6df0
0x00006cd2      49837f4001     cmp qword [r15 + 0x40], 1
0x00006cd7      4819c0         sbb rax, rax
0x00006cda      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x00006cdf      4883e801       sub rax, 1
0x00006ce3      837c245802     cmp dword [rsp + 0x58], 2
0x00006ce8      4889442438     mov qword [rsp + 0x38], rax
0x00006ced      0f844d030000   je 0x7040
0x00006cf3      418b5748       mov edx, dword [r15 + 0x48]
0x00006cf7      8b442464       mov eax, dword [rsp + 0x64]
0x00006cfb      83e238         and edx, 0x38
0x00006cfe      83fa18         cmp edx, 0x18
0x00006d01      0f849d030000   je 0x70a4
0x00006d07      837c245803     cmp dword [rsp + 0x58], 3
0x00006d0c      41bc01000000   mov r12d, 1
0x00006d12      0f94c3         sete bl
0x00006d15      41f6474902     test byte [r15 + 0x49], 2
0x00006d1a      0f85dc030000   jne 0x70fc
0x00006d20      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x00006d22      0f8960030000   jns 0x7088
0x00006d28      84db           test bl, bl
0x00006d2a      740f           je 0x6d3b
0x00006d2c      4584e4         test r12b, r12b
0x00006d2f      740a           je 0x6d3b                               ; ../coreutils-8.31/lib/fts.c:1170
0x00006d31      e8caa9ffff     call sym.imp.__errno_location
0x00006d36      8b00           mov eax, dword [rax]
0x00006d38      894540         mov dword [rbp + 0x40], eax
0x00006d3b      66834d7201     or word [rbp + 0x72], 1
0x00006d40      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006d44      e827abffff     call sym.imp.closedir
0x00006d49      418b7f48       mov edi, dword [r15 + 0x48]
0x00006d4d      48c745180000.  mov qword [rbp + 0x18], 0
0x00006d55      f7c700020000   test edi, 0x200
0x00006d5b      7413           je 0x6d70
0x00006d5d      8b442464       mov eax, dword [rsp + 0x64]
0x00006d61      85c0           test eax, eax
0x00006d63      780b           js 0x6d70
0x00006d65      89c7           mov edi, eax
0x00006d67      e8f4aaffff     call sym.imp.close
0x00006d6c      418b7f48       mov edi, dword [r15 + 0x48]
0x00006d70      48c745180000.  mov qword [rbp + 0x18], 0
0x00006d78      c644245f00     mov byte [rsp + 0x5f], 0
0x00006d7d      e9e9faffff     jmp 0x686b
0x00006d82      660f1f440000   nop word [rax + rax]
0x00006d88      31d2           xor edx, edx
0x00006d8a      48837d5800     cmp qword [rbp + 0x58], 0
0x00006d8f      0f95c2         setne dl
0x00006d92      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x00006d95      e9edfeffff     jmp 0x6c87
0x00006d9a      660f1f440000   nop word [rax + rax]
0x00006da0      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006da4      e8c7aaffff     call sym.imp.closedir
0x00006da9      837c245803     cmp dword [rsp + 0x58], 3
0x00006dae      48c745180000.  mov qword [rbp + 0x18], 0
0x00006db6      0f841f020000   je 0x6fdb
0x00006dbc      48c744241000.  mov qword [rsp + 0x10], 0
0x00006dc5      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00006dca      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006dd3      488b442410     mov rax, qword [rsp + 0x10]
0x00006dd8      0f85d3030000   jne 0x71b1
0x00006dde      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x00006de2      5b             pop rbx
0x00006de3      5d             pop rbp
0x00006de4      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x00006de6      415d           pop r13
0x00006de8      415e           pop r14
0x00006dea      415f           pop r15
0x00006dec      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x00006ded      0f1f00         nop dword [rax]
0x00006df0      498d5f58       lea rbx, [r15 + 0x58]
0x00006df4      4889ea         mov rdx, rbp
0x00006df7      4889de         mov rsi, rbx
0x00006dfa      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x00006dff      31d2           xor edx, edx
0x00006e01      4889ee         mov rsi, rbp
0x00006e04      4c89ff         mov rdi, r15
0x00006e07      e874eeffff     call sym.fts_stat
0x00006e0c      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x00006e10      4889ea         mov rdx, rbp
0x00006e13      4889de         mov rsi, rbx
0x00006e16      e875f8ffff     call sym.enter_dir.isra.10
0x00006e1b      84c0           test al, al
0x00006e1d      0f85affeffff   jne 0x6cd2
0x00006e23      e8d8a8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x00006e28      48c744241000.  mov qword [rsp + 0x10], 0
0x00006e31      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00006e37      eb8c           jmp 0x6dc5
0x00006e39      0f1f80000000.  nop dword [rax]
0x00006e40      c644245e00     mov byte [rsp + 0x5e], 0
0x00006e45      e971fbffff     jmp 0x69bb
0x00006e4a      660f1f440000   nop word [rax + rax]
0x00006e50      4c89ef         mov rdi, r13
0x00006e53      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00006e58      418b1c24       mov ebx, dword [r12]
0x00006e5c      e82facffff     call sym..plt.got
0x00006e61      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006e66      e885f1ffff     call sym.fts_lfree
0x00006e6b      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006e6f      e8fca9ffff     call sym.imp.closedir
0x00006e74      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x00006e7a      48c745180000.  mov qword [rbp + 0x18], 0
0x00006e82      48c744241000.  mov qword [rsp + 0x10], 0
0x00006e8b      6644894d70     mov word [rbp + 0x70], r9w
0x00006e90      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xc9e8ef89
0x00006e98      41891c24       mov dword [r12], ebx
0x00006e9c      e924ffffff     jmp 0x6dc5
0x00006ea1      0f1f80000000.  nop dword [rax]
0x00006ea8      4889c5         mov rbp, rax
0x00006eab      807c245d00     cmp byte [rsp + 0x5d], 0
0x00006eb0      0f8562fcffff   jne 0x6b18
0x00006eb6      41f6474804     test byte [r15 + 0x48], 4
0x00006ebb      741e           je 0x6edb
0x00006ebd      488b442418     mov rax, qword [rsp + 0x18]
0x00006ec2      49394730       cmp qword [r15 + 0x30], rax
0x00006ec6      7405           je 0x6ecd                               ; ../coreutils-8.31/lib/fts.c:849
0x00006ec8      4885db         test rbx, rbx
0x00006ecb      7506           jne 0x6ed3
0x00006ecd      48836c244001   sub qword [rsp + 0x40], 1
0x00006ed3      488b442440     mov rax, qword [rsp + 0x40]
0x00006ed8      c60000         mov byte [rax], 0
0x00006edb      48837c245000   cmp qword [rsp + 0x50], 0
0x00006ee1      756d           jne 0x6f50
0x00006ee3      807c245f00     cmp byte [rsp + 0x5f], 0
0x00006ee8      7466           je 0x6f50
0x00006eea      837c245801     cmp dword [rsp + 0x58], 1
0x00006eef      743f           je 0x6f30
0x00006ef1      4885db         test rbx, rbx
0x00006ef4      743a           je 0x6f30
0x00006ef6      807c245e00     cmp byte [rsp + 0x5e], 0
0x00006efb      0f85f7000000   jne 0x6ff8
0x00006f01      49837f4000     cmp qword [r15 + 0x40], 0
0x00006f06      0f84b9feffff   je 0x6dc5
0x00006f0c      4883fb01       cmp rbx, 1
0x00006f10      0f84affeffff   je 0x6dc5
0x00006f16      488b742410     mov rsi, qword [rsp + 0x10]
0x00006f1b      4889da         mov rdx, rbx
0x00006f1e      4c89ff         mov rdi, r15
0x00006f21      e82aefffff     call sym.fts_sort
0x00006f26      4889442410     mov qword [rsp + 0x10], rax
0x00006f2b      e995feffff     jmp 0x6dc5
0x00006f30      48837d5800     cmp qword [rbp + 0x58], 0
0x00006f35      0f852b010000   jne 0x7066
0x00006f3b      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x00006f3e      e84df3ffff     call sym.restore_initial_cwd
0x00006f43      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00006f45      0f95c0         setne al
0x00006f48      84c0           test al, al
0x00006f4a      0f8583010000   jne 0x70d3
0x00006f50      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00006f53      75a1           jne 0x6ef6
0x00006f55      837c245803     cmp dword [rsp + 0x58], 3
0x00006f5a      0f84b8010000   je 0x7118
0x00006f60      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00006f65      e886f0ffff     call sym.fts_lfree
0x00006f6a      48c744241000.  mov qword [rsp + 0x10], 0
0x00006f73      e94dfeffff     jmp 0x6dc5
0x00006f78      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x00006f80      418b0424       mov eax, dword [r12]
0x00006f84      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00006f89      85c0           test eax, eax
0x00006f8b      7421           je 0x6fae
0x00006f8d      4885db         test rbx, rbx
0x00006f90      894540         mov dword [rbp + 0x40], eax
0x00006f93      0f8530010000   jne 0x70c9
0x00006f99      48837c245000   cmp qword [rsp + 0x50], 0
0x00006f9f      b804000000     mov eax, 4
0x00006fa4      0f851f010000   jne 0x70c9
0x00006faa      66894570       mov word [rbp + 0x70], ax
0x00006fae      488b7d18       mov rdi, qword [rbp + 0x18]
0x00006fb2      4885ff         test rdi, rdi
0x00006fb5      0f84f0feffff   je 0x6eab
0x00006fbb      e8b0a8ffff     call sym.imp.closedir
0x00006fc0      48c745180000.  mov qword [rbp + 0x18], 0
0x00006fc8      e9defeffff     jmp 0x6eab
0x00006fcd      0f1f00         nop dword [rax]
0x00006fd0      837c245803     cmp dword [rsp + 0x58], 3
0x00006fd5      0f85e1fdffff   jne 0x6dbc
0x00006fdb      41ba04000000   mov r10d, 4
0x00006fe1      6644895570     mov word [rbp + 0x70], r10w
0x00006fe6      e815a7ffff     call sym.imp.__errno_location
0x00006feb      8b00           mov eax, dword [rax]
0x00006fed      894540         mov dword [rbp + 0x40], eax
0x00006ff0      e9c7fdffff     jmp 0x6dbc
0x00006ff5      0f1f00         nop dword [rax]
0x00006ff8      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x5c50 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x00006fff      488b742410     mov rsi, qword [rsp + 0x10]
0x00007004      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x00007007      4c89ff         mov rdi, r15
0x0000700a      49894740       mov qword [r15 + 0x40], rax
0x0000700e      e83deeffff     call sym.fts_sort
0x00007013      49c747400000.  mov qword [r15 + 0x40], 0
0x0000701b      4889442410     mov qword [rsp + 0x10], rax
0x00007020      e9a0fdffff     jmp 0x6dc5
0x00007025      0f1f00         nop dword [rax]
0x00007028      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=-1
0x00007031      c644245f01     mov byte [rsp + 0x5f], 1
0x00007036      418b7f48       mov edi, dword [r15 + 0x48]
0x0000703a      e92cf8ffff     jmp 0x686b
0x0000703f      90             nop
0x00007040      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00007045      418b7f48       mov edi, dword [r15 + 0x48]
0x00007049      e91df8ffff     jmp 0x686b
0x0000704e      6690           nop
0x00007050      31d2           xor edx, edx
0x00007052      4889ee         mov rsi, rbp
0x00007055      4c89ff         mov rdi, r15
0x00007058      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x0000705d      66894570       mov word [rbp + 0x70], ax
0x00007061      e96cfcffff     jmp 0x6cd2
0x00007066      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x0000706a      488d0da93e00.  lea rcx, [0x0000af1a]                   ; ".."
0x00007071      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007076      4c89ff         mov rdi, r15
0x00007079      e892f3ffff     call sym.fts_safe_changedir
0x0000707e      85c0           test eax, eax
0x00007080      0f95c0         setne al
0x00007083      e9c0feffff     jmp 0x6f48
0x00007088      31c9           xor ecx, ecx
0x0000708a      89c2           mov edx, eax
0x0000708c      4889ee         mov rsi, rbp
0x0000708f      4c89ff         mov rdi, r15
0x00007092      e879f3ffff     call sym.fts_safe_changedir
0x00007097      85c0           test eax, eax
0x00007099      0f8589fcffff   jne 0x6d28
0x0000709f      e9bef7ffff     jmp 0x6862
0x000070a4      4883bd880000.  cmp qword [rbp + 0x88], 2
0x000070ac      0f8555fcffff   jne 0x6d07
0x000070b2      89c6           mov esi, eax
0x000070b4      4889ef         mov rdi, rbp
0x000070b7      e8f4f0ffff     call sym.leaf_optimization
0x000070bc      85c0           test eax, eax
0x000070be      757e           jne 0x713e
0x000070c0      8b442464       mov eax, dword [rsp + 0x64]
0x000070c4      e93efcffff     jmp 0x6d07
0x000070c9      b807000000     mov eax, 7
0x000070ce      e9d7feffff     jmp 0x6faa
0x000070d3      bf07000000     mov edi, 7
0x000070d8      66897d70       mov word [rbp + 0x70], di
0x000070dc      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xc9e8ef89
0x000070e4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000070e9      e802efffff     call sym.fts_lfree
0x000070ee      48c744241000.  mov qword [rsp + 0x10], 0
0x000070f7      e9c9fcffff     jmp 0x6dc5
0x000070fc      89c7           mov edi, eax
0x000070fe      ba03000000     mov edx, 3
0x00007103      be06040000     mov esi, 0x406
0x00007108      31c0           xor eax, eax
0x0000710a      e811270000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x0000710f      89442464       mov dword [rsp + 0x64], eax
0x00007113      e908fcffff     jmp 0x6d20
0x00007118      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x0000711c      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x00007120      0f843afeffff   je 0x6f60
0x00007126      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x0000712a      0f8430feffff   je 0x6f60
0x00007130      be06000000     mov esi, 6
0x00007135      66897570       mov word [rbp + 0x70], si
0x00007139      e922feffff     jmp 0x6f60                              ; ../coreutils-8.31/lib/fts.c:1019
0x0000713e      837c245803     cmp dword [rsp + 0x58], 3
0x00007143      0f85f7feffff   jne 0x7040
0x00007149      8b442464       mov eax, dword [rsp + 0x64]
0x0000714d      4531e4         xor r12d, r12d
0x00007150      bb01000000     mov ebx, 1
0x00007155      e9bbfbffff     jmp 0x6d15
0x0000715a      660f1f440000   nop word [rax + rax]
0x00007160      4c89ef         mov rdi, r13
0x00007163      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007168      e823a9ffff     call sym..plt.got
0x0000716d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007172      e879eeffff     call sym.fts_lfree
0x00007177      488b7d18       mov rdi, qword [rbp + 0x18]
0x0000717b      e8f0a6ffff     call sym.imp.closedir
0x00007180      41b807000000   mov r8d, 7
0x00007186      48c745180000.  mov qword [rbp + 0x18], 0
0x0000718e      48c744241000.  mov qword [rsp + 0x10], 0
0x00007197      6644894570     mov word [rbp + 0x70], r8w
0x0000719c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0xc9e8ef89
0x000071a4      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x000071ac      e914fcffff     jmp 0x6dc5
0x000071b1      e82aa6ffff     call sym.imp.__stack_chk_fail
0x000071b6      488d05633d00.  lea rax, obj.CSWTCH.53                  ; 0xaf20
0x000071bd      8b0490         mov eax, dword [rax + rdx*4]
0x000071c0      418985900000.  mov dword [r13 + 0x90], eax
0x000071c7      b801000000     mov eax, 1
0x000071cc      e9b9f7ffff     jmp 0x698a
0x000071d1      0f1f440000     nop dword [rax + rax]
0x000071d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x000071e0      4157           push r15
0x000071e2      4156           push r14
0x000071e4      4155           push r13
0x000071e6      4154           push r12
0x000071e8      55             push rbp
0x000071e9      53             push rbx
0x000071ea      4883ec28       sub rsp, 0x28
0x000071ee      f7c600f0ffff   test esi, 0xfffff000
0x000071f4      0f857e030000   jne 0x7578
0x000071fa      89f0           mov eax, esi
0x000071fc      89f5           mov ebp, esi
0x000071fe      2504020000     and eax, 0x204
0x00007203      3d04020000     cmp eax, 0x204
0x00007208      0f846a030000   je 0x7578
0x0000720e      40f6c612       test sil, 0x12
0x00007212      0f8460030000   je 0x7578
0x00007218      4989fd         mov r13, rdi
0x0000721b      be01000000     mov esi, 1
0x00007220      bf80000000     mov edi, 0x80
0x00007225      4989d6         mov r14, rdx
0x00007228      e873a6ffff     call sym.imp.calloc
0x0000722d      4885c0         test rax, rax
0x00007230      4889c3         mov rbx, rax
0x00007233      0f8455020000   je 0x748e
0x00007239      40f6c502       test bpl, 2
0x0000723d      4c897040       mov qword [rax + 0x40], r14
0x00007241      0f8559020000   jne 0x74a0
0x00007247      498b7d00       mov rdi, qword [r13]
0x0000724b      896848         mov dword [rax + 0x48], ebp
0x0000724e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00007255      4885ff         test rdi, rdi
0x00007258      0f8461020000   je 0x74bf
0x0000725e      4d89ef         mov r15, r13
0x00007261      4531e4         xor r12d, r12d
0x00007264      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x00007268      e843a5ffff     call sym.imp.strlen
0x0000726d      4939c4         cmp r12, rax
0x00007270      4c0f42e0       cmovb r12, rax
0x00007274      4983c708       add r15, 8
0x00007278      498b3f         mov rdi, qword [r15]
0x0000727b      4885ff         test rdi, rdi
0x0000727e      75e8           jne 0x7268
0x00007280      498d542401     lea rdx, [r12 + 1]
0x00007285      b800100000     mov eax, 0x1000
0x0000728a      4881fa001000.  cmp rdx, 0x1000
0x00007291      480f42d0       cmovb rdx, rax
0x00007295      488d7330       lea rsi, [rbx + 0x30]
0x00007299      488d7b20       lea rdi, [rbx + 0x20]
0x0000729d      e84ef0ffff     call sym.fts_palloc.isra.2
0x000072a2      84c0           test al, al
0x000072a4      88442416       mov byte [rsp + 0x16], al
0x000072a8      0f849b020000   je 0x7549
0x000072ae      498b7500       mov rsi, qword [r13]
0x000072b2      4885f6         test rsi, rsi
0x000072b5      0f84a5020000   je 0x7560
0x000072bb      488d35ff3800.  lea rsi, [0x0000abc1]
0x000072c2      31d2           xor edx, edx
0x000072c4      4889df         mov rdi, rbx
0x000072c7      e894ecffff     call sym.fts_alloc
0x000072cc      4885c0         test rax, rax
0x000072cf      4989c7         mov r15, rax
0x000072d2      0f8468020000   je 0x7540
0x000072d8      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x000072df      4d85f6         test r14, r14
0x000072e2      498b7500       mov rsi, qword [r13]
0x000072e6      49894758       mov qword [r15 + 0x58], rax
0x000072ea      49894768       mov qword [r15 + 0x68], rax
0x000072ee      740d           je 0x72fd
0x000072f0      8b4348         mov eax, dword [rbx + 0x48]
0x000072f3      c1e80a         shr eax, 0xa
0x000072f6      83e001         and eax, 1
0x000072f9      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x000072fd      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x00007300      0f8466020000   je 0x756c
0x00007306      c1ed0b         shr ebp, 0xb
0x00007309      48c744241800.  mov qword [rsp + 0x18], 0
0x00007312      4531e4         xor r12d, r12d
0x00007315      83f501         xor ebp, 1
0x00007318      89e8           mov eax, ebp
0x0000731a      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x0000731c      83e001         and eax, 1
0x0000731f      88442417       mov byte [rsp + 0x17], al
0x00007323      eb77           jmp 0x739c
0x00007325      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x00007328      4889c2         mov rdx, rax
0x0000732b      4889df         mov rdi, rbx
0x0000732e      e82decffff     call sym.fts_alloc
0x00007333      4885c0         test rax, rax
0x00007336      4889c1         mov rcx, rax
0x00007339      0f84f1010000   je 0x7530
0x0000733f      48c740580000.  mov qword [rax + 0x58], 0
0x00007347      4c897808       mov qword [rax + 8], r15
0x0000734b      488d80080100.  lea rax, [rax + 0x108]
0x00007352      4d85e4         test r12, r12
0x00007355      48894130       mov qword [rcx + 0x30], rax
0x00007359      0f8471010000   je 0x74d0
0x0000735f      807c241600     cmp byte [rsp + 0x16], 0
0x00007364      0f8466010000   je 0x74d0
0x0000736a      be0b000000     mov esi, 0xb
0x0000736f      4d85f6         test r14, r14
0x00007372      48c781a80000.  mov qword [rcx + 0xa8], 2
0x0000737d      66897170       mov word [rcx + 0x70], si
0x00007381      0f8489010000   je 0x7510                               ; ../coreutils-8.31/lib/fts.c:876
0x00007387      4c896110       mov qword [rcx + 0x10], r12
0x0000738b      4989cc         mov r12, rcx
0x0000738e      4883c501       add rbp, 1
0x00007392      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x00007397      4885f6         test rsi, rsi
0x0000739a      7454           je 0x73f0
0x0000739c      4889f7         mov rdi, rsi
0x0000739f      4889742408     mov qword [rsp + 8], rsi
0x000073a4      e807a4ffff     call sym.imp.strlen
0x000073a9      4883f802       cmp rax, 2
0x000073ad      488b742408     mov rsi, qword [rsp + 8]
0x000073b2      0f8670ffffff   jbe 0x7328                              ; ../coreutils-8.31/lib/fts.c:-659
0x000073b8      807c241700     cmp byte [rsp + 0x17], 0
0x000073bd      0f8465ffffff   je 0x7328
0x000073c3      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x000073c8      0f855affffff   jne 0x7328
0x000073ce      6690           nop
0x000073d0      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x000073d5      0f854dffffff   jne 0x7328
0x000073db      4883e801       sub rax, 1
0x000073df      4883f801       cmp rax, 1
0x000073e3      75eb           jne 0x73d0
0x000073e5      e93effffff     jmp 0x7328
0x000073ea      660f1f440000   nop word [rax + rax]
0x000073f0      4d85f6         test r14, r14
0x000073f3      7417           je 0x740c
0x000073f5      4883fd01       cmp rbp, 1
0x000073f9      7611           jbe 0x740c
0x000073fb      4c89e6         mov rsi, r12
0x000073fe      4889ea         mov rdx, rbp
0x00007401      4889df         mov rdi, rbx
0x00007404      e847eaffff     call sym.fts_sort
0x00007409      4989c4         mov r12, rax
0x0000740c      488d35ae3700.  lea rsi, [0x0000abc1]
0x00007413      31d2           xor edx, edx
0x00007415      4889df         mov rdi, rbx
0x00007418      e843ebffff     call sym.fts_alloc
0x0000741d      4885c0         test rax, rax
0x00007420      488903         mov qword [rbx], rax
0x00007423      0f8407010000   je 0x7530
0x00007429      8b7b48         mov edi, dword [rbx + 0x48]
0x0000742c      ba09000000     mov edx, 9
0x00007431      488d7358       lea rsi, [rbx + 0x58]
0x00007435      4c896010       mov qword [rax + 0x10], r12
0x00007439      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x0000743d      48c740580100.  mov qword [rax + 0x58], 1
0x00007445      e816efffff     call sym.setup_dir.isra.4
0x0000744a      84c0           test al, al
0x0000744c      0f84de000000   je 0x7530                               ; ../coreutils-8.31/lib/fts.c:-707
0x00007452      8b7348         mov esi, dword [rbx + 0x48]
0x00007455      f7c604020000   test esi, 0x204
0x0000745b      7523           jne 0x7480                              ; ../coreutils-8.31/lib/fts.c:-697
0x0000745d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00007460      488d15b43a00.  lea rdx, [0x0000af1b]                   ; "."
0x00007467      e864efffff     call sym.diropen.isra.6
0x0000746c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x0000746e      894328         mov dword [rbx + 0x28], eax
0x00007471      790d           jns 0x7480                              ; ../coreutils-8.31/lib/fts.c:-697
0x00007473      834b4804       or dword [rbx + 0x48], 4
0x00007477      660f1f840000.  nop word [rax + rax]
0x00007480      488d7b60       lea rdi, [rbx + 0x60]
0x00007484      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x00007489      e8f2200000     call sym.i_ring_init
0x0000748e      4883c428       add rsp, 0x28
0x00007492      4889d8         mov rax, rbx
0x00007495      5b             pop rbx
0x00007496      5d             pop rbp
0x00007497      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x00007499      415d           pop r13
0x0000749b      415e           pop r14
0x0000749d      415f           pop r15
0x0000749f      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x000074a0      498b7d00       mov rdi, qword [r13]
0x000074a4      89e8           mov eax, ebp
0x000074a6      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x000074ad      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x000074b0      83c804         or eax, 4
0x000074b3      4885ff         test rdi, rdi
0x000074b6      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x000074b9      0f859ffdffff   jne 0x725e
0x000074bf      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x000074c4      e9ccfdffff     jmp 0x7295
0x000074c9      0f1f80000000.  nop dword [rax]
0x000074d0      31d2           xor edx, edx
0x000074d2      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x000074d5      4889df         mov rdi, rbx
0x000074d8      48894c2408     mov qword [rsp + 8], rcx
0x000074dd      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x000074e2      488b4c2408     mov rcx, qword [rsp + 8]
0x000074e7      4d85f6         test r14, r14
0x000074ea      66894170       mov word [rcx + 0x70], ax
0x000074ee      0f8593feffff   jne 0x7387
0x000074f4      4d85e4         test r12, r12
0x000074f7      48c741100000.  mov qword [rcx + 0x10], 0
0x000074ff      7517           jne 0x7518
0x00007501      48894c2418     mov qword [rsp + 0x18], rcx
0x00007506      4989cc         mov r12, rcx
0x00007509      e980feffff     jmp 0x738e
0x0000750e      6690           nop
0x00007510      48c741100000.  mov qword [rcx + 0x10], 0
0x00007518      488b442418     mov rax, qword [rsp + 0x18]
0x0000751d      48894c2418     mov qword [rsp + 0x18], rcx
0x00007522      48894810       mov qword [rax + 0x10], rcx
0x00007526      e963feffff     jmp 0x738e
0x0000752b      0f1f440000     nop dword [rax + rax]
0x00007530      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x00007533      e8b8eaffff     call sym.fts_lfree
0x00007538      4c89ff         mov rdi, r15
0x0000753b      e850a5ffff     call sym..plt.got
0x00007540      488b7b20       mov rdi, qword [rbx + 0x20]
0x00007544      e847a5ffff     call sym..plt.got
0x00007549      4889df         mov rdi, rbx
0x0000754c      31db           xor ebx, ebx
0x0000754e      e83da5ffff     call sym..plt.got
0x00007553      e936ffffff     jmp 0x748e
0x00007558      0f1f84000000.  nop dword [rax + rax]
0x00007560      4531ff         xor r15d, r15d
0x00007563      4d85f6         test r14, r14
0x00007566      0f8584fdffff   jne 0x72f0
0x0000756c      4531e4         xor r12d, r12d
0x0000756f      e998feffff     jmp 0x740c
0x00007574      0f1f4000       nop dword [rax]
0x00007578      e883a1ffff     call sym.imp.__errno_location
0x0000757d      31db           xor ebx, ebx
0x0000757f      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x27e00000
0x00007585      e904ffffff     jmp 0x748e
0x0000758a      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x00007590      4154           push r12
0x00007592      55             push rbp
0x00007593      4889fd         mov rbp, rdi
0x00007596      53             push rbx
0x00007597      488b3f         mov rdi, qword [rdi]
0x0000759a      4885ff         test rdi, rdi
0x0000759d      7444           je 0x75e3
0x0000759f      48837f5800     cmp qword [rdi + 0x58], 0
0x000075a4      7919           jns 0x75bf
0x000075a6      e915010000     jmp 0x76c0
0x000075ab      0f1f440000     nop dword [rax + rax]
0x000075b0      e8dba4ffff     call sym..plt.got
0x000075b5      48837b5800     cmp qword [rbx + 0x58], 0
0x000075ba      4889df         mov rdi, rbx
0x000075bd      781c           js 0x75db                               ; ../coreutils-8.31/lib/fts.c:-652
0x000075bf      488b5f10       mov rbx, qword [rdi + 0x10]
0x000075c3      4885db         test rbx, rbx
0x000075c6      75e8           jne 0x75b0
0x000075c8      488b5f08       mov rbx, qword [rdi + 8]
0x000075cc      e8bfa4ffff     call sym..plt.got
0x000075d1      48837b5800     cmp qword [rbx + 0x58], 0
0x000075d6      4889df         mov rdi, rbx
0x000075d9      79e4           jns 0x75bf
0x000075db      4889df         mov rdi, rbx
0x000075de      e8ada4ffff     call sym..plt.got
0x000075e3      488b7d08       mov rdi, qword [rbp + 8]
0x000075e7      4885ff         test rdi, rdi
0x000075ea      7405           je 0x75f1
0x000075ec      e8ffe9ffff     call sym.fts_lfree
0x000075f1      488b7d10       mov rdi, qword [rbp + 0x10]
0x000075f5      e896a4ffff     call sym..plt.got
0x000075fa      488b7d20       mov rdi, qword [rbp + 0x20]
0x000075fe      e88da4ffff     call sym..plt.got
0x00007603      8b4548         mov eax, dword [rbp + 0x48]
0x00007606      f6c402         test ah, 2
0x00007609      7465           je 0x7670
0x0000760b      8b7d2c         mov edi, dword [rbp + 0x2c]
0x0000760e      85ff           test edi, edi
0x00007610      0f898a000000   jns 0x76a0
0x00007616      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x00007618      488d7d60       lea rdi, [rbp + 0x60]
0x0000761c      e81feaffff     call sym.fd_ring_clear
0x00007621      488b7d50       mov rdi, qword [rbp + 0x50]
0x00007625      4885ff         test rdi, rdi
0x00007628      7405           je 0x762f
0x0000762a      e831170000     call sym.hash_free
0x0000762f      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x00007636      488b7d58       mov rdi, qword [rbp + 0x58]
0x0000763a      7424           je 0x7660
0x0000763c      4885ff         test rdi, rdi
0x0000763f      7405           je 0x7646
0x00007641      e81a170000     call sym.hash_free
0x00007646      4889ef         mov rdi, rbp
0x00007649      e842a4ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x0000764e      85db           test ebx, ebx
0x00007650      0f85ab000000   jne 0x7701
0x00007656      89d8           mov eax, ebx
0x00007658      5b             pop rbx
0x00007659      5d             pop rbp
0x0000765a      415c           pop r12
0x0000765c      c3             ret
0x0000765d      0f1f00         nop dword [rax]
0x00007660      e82ba4ffff     call sym..plt.got
0x00007665      ebdf           jmp 0x7646
0x00007667      660f1f840000.  nop word [rax + rax]
0x00007670      a804           test al, 4
0x00007672      75a2           jne 0x7616
0x00007674      8b7d28         mov edi, dword [rbp + 0x28]
0x00007677      e804a3ffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x0000767c      85c0           test eax, eax
0x0000767e      7550           jne 0x76d0
0x00007680      8b7d28         mov edi, dword [rbp + 0x28]
0x00007683      e8d8a1ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x00007688      85c0           test eax, eax
0x0000768a      748a           je 0x7616
0x0000768c      e86fa0ffff     call sym.imp.__errno_location
0x00007691      4989c4         mov r12, rax
0x00007694      eb62           jmp 0x76f8
0x00007696      662e0f1f8400.  nop word cs:[rax + rax]
0x000076a0      e8bba1ffff     call sym.imp.close
0x000076a5      85c0           test eax, eax
0x000076a7      0f8469ffffff   je 0x7616
0x000076ad      e84ea0ffff     call sym.imp.__errno_location
0x000076b2      8b18           mov ebx, dword [rax]
0x000076b4      e95fffffff     jmp 0x7618
0x000076b9      0f1f80000000.  nop dword [rax]
0x000076c0      4889fb         mov rbx, rdi
0x000076c3      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x000076c6      e8c5a3ffff     call sym..plt.got
0x000076cb      e913ffffff     jmp 0x75e3
0x000076d0      e82ba0ffff     call sym.imp.__errno_location
0x000076d5      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x000076d8      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x000076db      8b18           mov ebx, dword [rax]
0x000076dd      e87ea1ffff     call sym.imp.close
0x000076e2      85c0           test eax, eax
0x000076e4      0f842effffff   je 0x7618
0x000076ea      85db           test ebx, ebx
0x000076ec      0f8526ffffff   jne 0x7618
0x000076f2      660f1f440000   nop word [rax + rax]
0x000076f8      418b1c24       mov ebx, dword [r12]
0x000076fc      e917ffffff     jmp 0x7618
0x00007701      e8fa9fffff     call sym.imp.__errno_location
0x00007706      8918           mov dword [rax], ebx
0x00007708      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000770d      e944ffffff     jmp 0x7656
0x00007712      0f1f4000       nop dword [rax]
0x00007716      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x00007720      4156           push r14
0x00007722      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x00007724      4154           push r12
0x00007726      55             push rbp
0x00007727      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x00007728      488b2f         mov rbp, qword [rdi]
0x0000772b      4885ed         test rbp, rbp
0x0000772e      0f840a010000   je 0x783e
0x00007734      8b5748         mov edx, dword [rdi + 0x48]
0x00007737      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x0000773a      0f85fe000000   jne 0x783e
0x00007740      0fb74574       movzx eax, word [rbp + 0x74]
0x00007744      bb03000000     mov ebx, 3
0x00007749      4989fc         mov r12, rdi
0x0000774c      66895d74       mov word [rbp + 0x74], bx
0x00007750      6683f801       cmp ax, 1
0x00007754      0f8446020000   je 0x79a0
0x0000775a      6683f802       cmp ax, 2
0x0000775e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x00007762      0f84e8000000   je 0x7850                               ; ../coreutils-8.31/lib/fts.c:-662
0x00007768      6683f901       cmp cx, 1
0x0000776c      7532           jne 0x77a0
0x0000776e      e91d020000     jmp 0x7990
0x00007773      0f1f440000     nop dword [rax + rax]
0x00007778      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x0000777c      4889ef         mov rdi, rbp
0x0000777f      e80ca3ffff     call sym..plt.got
0x00007784      48837b5800     cmp qword [rbx + 0x58], 0
0x00007789      0f8431020000   je 0x79c0
0x0000778f      0fb74374       movzx eax, word [rbx + 0x74]
0x00007793      4889dd         mov rbp, rbx
0x00007796      6683f804       cmp ax, 4
0x0000779a      0f8528030000   jne 0x7ac8
0x000077a0      488b5d10       mov rbx, qword [rbp + 0x10]
0x000077a4      4885db         test rbx, rbx
0x000077a7      75cf           jne 0x7778
0x000077a9      488b5d08       mov rbx, qword [rbp + 8]
0x000077ad      48837b1800     cmp qword [rbx + 0x18], 0
0x000077b2      0f8568050000   jne 0x7d20
0x000077b8      49891c24       mov qword [r12], rbx
0x000077bc      4889ef         mov rdi, rbp
0x000077bf      e8cca2ffff     call sym..plt.got
0x000077c4      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x000077c9      0f84b3040000   je 0x7c82
0x000077cf      66837b700b     cmp word [rbx + 0x70], 0xb
0x000077d4      0f8435010000   je 0x790f
0x000077da      498b542420     mov rdx, qword [r12 + 0x20]
0x000077df      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x000077e3      c6040200       mov byte [rdx + rax], 0
0x000077e7      48837b5800     cmp qword [rbx + 0x58], 0
0x000077ec      0f84be030000   je 0x7bb0
0x000077f2      0fb74372       movzx eax, word [rbx + 0x72]
0x000077f6      a802           test al, 2
0x000077f8      0f846a030000   je 0x7b68
0x000077fe      418b442448     mov eax, dword [r12 + 0x48]
0x00007803      8b7b44         mov edi, dword [rbx + 0x44]
0x00007806      a804           test al, 4
0x00007808      0f84fe030000   je 0x7c0c
0x0000780e      e84da0ffff     call sym.imp.close
0x00007813      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007818      66837b7002     cmp word [rbx + 0x70], 2
0x0000781d      7414           je 0x7833
0x0000781f      8b4b40         mov ecx, dword [rbx + 0x40]
0x00007822      85c9           test ecx, ecx
0x00007824      0f849e030000   je 0x7bc8
0x0000782a      ba07000000     mov edx, 7
0x0000782f      66895370       mov word [rbx + 0x70], dx
0x00007833      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x00007839      4889dd         mov rbp, rbx
0x0000783c      747c           je 0x78ba
0x0000783e      31ed           xor ebp, ebp
0x00007840      5b             pop rbx
0x00007841      4889e8         mov rax, rbp
0x00007844      5d             pop rbp
0x00007845      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x00007847      415d           pop r13
0x00007849      415e           pop r14
0x0000784b      c3             ret
0x0000784c      0f1f4000       nop dword [rax]
0x00007850      8d41f4         lea eax, [rcx - 0xc]
0x00007853      6683f801       cmp ax, 1
0x00007857      7677           jbe 0x78d0
0x00007859      6683f901       cmp cx, 1
0x0000785d      0f853dffffff   jne 0x77a0
0x00007863      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x00007866      0f84ac000000   je 0x7918
0x0000786c      498b442418     mov rax, qword [r12 + 0x18]
0x00007871      48394578       cmp qword [rbp + 0x78], rax
0x00007875      0f849d000000   je 0x7918
0x0000787b      f6457202       test byte [rbp + 0x72], 2
0x0000787f      0f85db040000   jne 0x7d60
0x00007885      498b7c2408     mov rdi, qword [r12 + 8]
0x0000788a      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x0000788d      740e           je 0x789d
0x0000788f      e85ce7ffff     call sym.fts_lfree
0x00007894      49c744240800.  mov qword [r12 + 8], 0
0x0000789d      418b7c2448     mov edi, dword [r12 + 0x48]
0x000078a2      41ba06000000   mov r10d, 6
0x000078a8      498d742458     lea rsi, [r12 + 0x58]
0x000078ad      6644895570     mov word [rbp + 0x70], r10w
0x000078b2      4889ea         mov rdx, rbp
0x000078b5      e886eeffff     call sym.leave_dir.isra.12
0x000078ba      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x000078bb      4889e8         mov rax, rbp
0x000078be      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x000078bf      415c           pop r12
0x000078c1      415d           pop r13                                 ; string_fortified.h:-1508
0x000078c3      415e           pop r14
0x000078c5      c3             ret
0x000078c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000078d0      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x000078d5      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x000078d8      e8a3e3ffff     call sym.fts_stat
0x000078dd      6683f801       cmp ax, 1
0x000078e1      66894570       mov word [rbp + 0x70], ax
0x000078e5      0f8441030000   je 0x7c2c
0x000078eb      6683f80b       cmp ax, 0xb
0x000078ef      49892c24       mov qword [r12], rbp
0x000078f3      75c5           jne 0x78ba                              ; ../coreutils-8.31/lib/fts.c:-525
0x000078f5      0f1f00         nop dword [rax]
0x000078f8      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x000078ff      4883f802       cmp rax, 2
0x00007903      0f849f030000   je 0x7ca8
0x00007909      4883f801       cmp rax, 1
0x0000790d      74ab           je 0x78ba
0x0000790f      e8dc9dffff     call sym.imp.abort
0x00007914      0f1f4000       nop dword [rax]
0x00007918      498b7c2408     mov rdi, qword [r12 + 8]
0x0000791d      4885ff         test rdi, rdi
0x00007920      0f8412020000   je 0x7b38
0x00007926      f6c610         test dh, 0x10
0x00007929      0f85f3010000   jne 0x7b22
0x0000792f      488b4d30       mov rcx, qword [rbp + 0x30]
0x00007933      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007938      4889ee         mov rsi, rbp
0x0000793b      4c89e7         mov rdi, r12
0x0000793e      e8cdeaffff     call sym.fts_safe_changedir
0x00007943      85c0           test eax, eax
0x00007945      0f84b7020000   je 0x7c02
0x0000794b      e8b09dffff     call sym.imp.__errno_location
0x00007950      8b00           mov eax, dword [rax]
0x00007952      66834d7201     or word [rbp + 0x72], 1
0x00007957      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x0000795a      498b6c2408     mov rbp, qword [r12 + 8]
0x0000795f      4885ed         test rbp, rbp
0x00007962      0f84ee010000   je 0x7b56
0x00007968      4889e8         mov rax, rbp
0x0000796b      0f1f440000     nop dword [rax + rax]
0x00007970      488b5008       mov rdx, qword [rax + 8]
0x00007974      488b5230       mov rdx, qword [rdx + 0x30]
0x00007978      48895030       mov qword [rax + 0x30], rdx
0x0000797c      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x00007980      4885c0         test rax, rax
0x00007983      75eb           jne 0x7970
0x00007985      e9cc010000     jmp 0x7b56
0x0000798a      660f1f440000   nop word [rax + rax]
0x00007990      6683f804       cmp ax, 4
0x00007994      0f85c9feffff   jne 0x7863
0x0000799a      e9dcfeffff     jmp 0x787b
0x0000799f      90             nop
0x000079a0      4889ee         mov rsi, rbp
0x000079a3      31d2           xor edx, edx
0x000079a5      e8d6e2ffff     call sym.fts_stat
0x000079aa      66894570       mov word [rbp + 0x70], ax
0x000079ae      4889e8         mov rax, rbp
0x000079b1      5b             pop rbx
0x000079b2      5d             pop rbp
0x000079b3      415c           pop r12
0x000079b5      415d           pop r13
0x000079b7      415e           pop r14
0x000079b9      c3             ret
0x000079ba      660f1f440000   nop word [rax + rax]
0x000079c0      4c89e7         mov rdi, r12
0x000079c3      e8c8e8ffff     call sym.restore_initial_cwd
0x000079c8      85c0           test eax, eax
0x000079ca      0f8501040000   jne 0x7dd1
0x000079d0      41f744244802.  test dword [r12 + 0x48], 0x102
0x000079d9      498b7c2458     mov rdi, qword [r12 + 0x58]
0x000079de      0f8434010000   je 0x7b18
0x000079e4      4885ff         test rdi, rdi
0x000079e7      7405           je 0x79ee
0x000079e9      e872130000     call sym.hash_free
0x000079ee      488b5360       mov rdx, qword [rbx + 0x60]
0x000079f2      488dab080100.  lea rbp, [rbx + 0x108]
0x000079f9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x000079fe      4889ee         mov rsi, rbp
0x00007a01      48895348       mov qword [rbx + 0x48], rdx
0x00007a05      4883c201       add rdx, 1
0x00007a09      e8b29fffff     call sym.imp.memmove
0x00007a0e      be2f000000     mov esi, 0x2f                           ; '/'
0x00007a13      4889ef         mov rdi, rbp
0x00007a16      e8059effff     call sym.imp.strrchr
0x00007a1b      4885c0         test rax, rax
0x00007a1e      742b           je 0x7a4b
0x00007a20      4839c5         cmp rbp, rax
0x00007a23      0f84c7010000   je 0x7bf0                               ; ../coreutils-8.31/lib/fts.c:-581
0x00007a29      4c8d6801       lea r13, [rax + 1]
0x00007a2d      4c89ef         mov rdi, r13
0x00007a30      e87b9dffff     call sym.imp.strlen
0x00007a35      488d5001       lea rdx, [rax + 1]
0x00007a39      4989c6         mov r14, rax
0x00007a3c      4c89ee         mov rsi, r13
0x00007a3f      4889ef         mov rdi, rbp
0x00007a42      e8799fffff     call sym.imp.memmove
0x00007a47      4c897360       mov qword [rbx + 0x60], r14
0x00007a4b      498b442420     mov rax, qword [r12 + 0x20]
0x00007a50      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007a55      498d742458     lea rsi, [r12 + 0x58]
0x00007a5a      4889dd         mov rbp, rbx
0x00007a5d      48894338       mov qword [rbx + 0x38], rax
0x00007a61      48894330       mov qword [rbx + 0x30], rax
0x00007a65      e8f6e8ffff     call sym.setup_dir.isra.4
0x00007a6a      0fb74370       movzx eax, word [rbx + 0x70]
0x00007a6e      6683f80b       cmp ax, 0xb
0x00007a72      49892c24       mov qword [r12], rbp
0x00007a76      0f847cfeffff   je 0x78f8
0x00007a7c      6683f801       cmp ax, 1
0x00007a80      0f8534feffff   jne 0x78ba
0x00007a86      48837d5800     cmp qword [rbp + 0x58], 0
0x00007a8b      7509           jne 0x7a96
0x00007a8d      488b4578       mov rax, qword [rbp + 0x78]
0x00007a91      4989442418     mov qword [r12 + 0x18], rax
0x00007a96      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007a9b      498d742458     lea rsi, [r12 + 0x58]
0x00007aa0      4889ea         mov rdx, rbp
0x00007aa3      e8e8ebffff     call sym.enter_dir.isra.10
0x00007aa8      84c0           test al, al
0x00007aaa      0f850afeffff   jne 0x78ba
0x00007ab0      e84b9cffff     call sym.imp.__errno_location
0x00007ab5      31ed           xor ebp, ebp
0x00007ab7      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x00007abd      e9f8fdffff     jmp 0x78ba
0x00007ac2      660f1f440000   nop word [rax + rax]
0x00007ac8      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x00007acc      0f849b020000   je 0x7d6d
0x00007ad2      488b4508       mov rax, qword [rbp + 8]
0x00007ad6      488db5080100.  lea rsi, [rbp + 0x108]
0x00007add      488b7848       mov rdi, qword [rax + 0x48]
0x00007ae1      488b4038       mov rax, qword [rax + 0x38]
0x00007ae5      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x00007aea      488d57ff       lea rdx, [rdi - 1]
0x00007aee      480f44fa       cmove rdi, rdx
0x00007af2      49037c2420     add rdi, qword [r12 + 0x20]
0x00007af7      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x00007afa      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x00007afe      4883c701       add rdi, 1
0x00007b02      488d5001       lea rdx, [rax + 1]
0x00007b06      e8b59effff     call sym.imp.memmove
0x00007b0b      0fb74570       movzx eax, word [rbp + 0x70]
0x00007b0f      e95affffff     jmp 0x7a6e
0x00007b14      0f1f4000       nop dword [rax]
0x00007b18      e8739fffff     call sym..plt.got
0x00007b1d      e9ccfeffff     jmp 0x79ee
0x00007b22      80e6ef         and dh, 0xef
0x00007b25      4189542448     mov dword [r12 + 0x48], edx
0x00007b2a      e8c1e4ffff     call sym.fts_lfree
0x00007b2f      49c744240800.  mov qword [r12 + 8], 0
0x00007b38      be03000000     mov esi, 3
0x00007b3d      4c89e7         mov rdi, r12
0x00007b40      e8bbecffff     call sym.fts_build
0x00007b45      4885c0         test rax, rax
0x00007b48      4989442408     mov qword [r12 + 8], rax
0x00007b4d      0f84f1000000   je 0x7c44
0x00007b53      4889c5         mov rbp, rax
0x00007b56      49c744240800.  mov qword [r12 + 8], 0
0x00007b5f      e96effffff     jmp 0x7ad2
0x00007b64      0f1f4000       nop dword [rax]
0x00007b68      a801           test al, 1
0x00007b6a      0f85a3fcffff   jne 0x7813
0x00007b70      488b7308       mov rsi, qword [rbx + 8]
0x00007b74      488d0d9f3300.  lea rcx, [0x0000af1a]                   ; ".."
0x00007b7b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007b80      4c89e7         mov rdi, r12
0x00007b83      e888e8ffff     call sym.fts_safe_changedir
0x00007b88      85c0           test eax, eax
0x00007b8a      0f8483fcffff   je 0x7813
0x00007b90      e86b9bffff     call sym.imp.__errno_location
0x00007b95      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007b9a      8b00           mov eax, dword [rax]
0x00007b9c      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x00007ba2      894340         mov dword [rbx + 0x40], eax
0x00007ba5      41897c2448     mov dword [r12 + 0x48], edi
0x00007baa      e969fcffff     jmp 0x7818
0x00007baf      90             nop
0x00007bb0      4c89e7         mov rdi, r12
0x00007bb3      e8d8e6ffff     call sym.restore_initial_cwd
0x00007bb8      85c0           test eax, eax
0x00007bba      75d4           jne 0x7b90
0x00007bbc      e952fcffff     jmp 0x7813                              ; ../coreutils-8.31/lib/fts.c:-700
0x00007bc1      0f1f80000000.  nop dword [rax]
0x00007bc8      b806000000     mov eax, 6
0x00007bcd      498d742458     lea rsi, [r12 + 0x58]
0x00007bd2      4889da         mov rdx, rbx
0x00007bd5      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00007bd9      e862ebffff     call sym.leave_dir.isra.12
0x00007bde      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007be3      e94bfcffff     jmp 0x7833
0x00007be8      0f1f84000000.  nop dword [rax + rax]
0x00007bf0      80bb09010000.  cmp byte [rbx + 0x109], 0
0x00007bf7      0f852cfeffff   jne 0x7a29
0x00007bfd      e949feffff     jmp 0x7a4b
0x00007c02      498b6c2408     mov rbp, qword [r12 + 8]
0x00007c07      e94affffff     jmp 0x7b56
0x00007c0c      f6c402         test ah, 2
0x00007c0f      0f8498010000   je 0x7dad
0x00007c15      89fe           mov esi, edi
0x00007c17      ba01000000     mov edx, 1
0x00007c1c      4c89e7         mov rdi, r12
0x00007c1f      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x00007c24      8b7b44         mov edi, dword [rbx + 0x44]
0x00007c27      e9e2fbffff     jmp 0x780e
0x00007c2c      418b742448     mov esi, dword [r12 + 0x48]
0x00007c31      40f6c604       test sil, 4
0x00007c35      0f8401020000   je 0x7e3c
0x00007c3b      49892c24       mov qword [r12], rbp
0x00007c3f      e942feffff     jmp 0x7a86
0x00007c44      418b7c2448     mov edi, dword [r12 + 0x48]
0x00007c49      f7c700200000   test edi, 0x2000
0x00007c4f      0f85e9fbffff   jne 0x783e
0x00007c55      448b4d40       mov r9d, dword [rbp + 0x40]
0x00007c59      4585c9         test r9d, r9d
0x00007c5c      7412           je 0x7c70                               ; ../coreutils-8.31/lib/fts.c:-755
0x00007c5e      66837d7004     cmp word [rbp + 0x70], 4
0x00007c63      740b           je 0x7c70
0x00007c65      41b807000000   mov r8d, 7
0x00007c6b      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x00007c70      498d742458     lea rsi, [r12 + 0x58]
0x00007c75      4889ea         mov rdx, rbp
0x00007c78      e8c3eaffff     call sym.leave_dir.isra.12
0x00007c7d      e938fcffff     jmp 0x78ba
0x00007c82      4889df         mov rdi, rbx
0x00007c85      31ed           xor ebp, ebp
0x00007c87      e8049effff     call sym..plt.got
0x00007c8c      e86f9affff     call sym.imp.__errno_location
0x00007c91      c70000000000   mov dword [rax], 0
0x00007c97      49c704240000.  mov qword [r12], 0
0x00007c9f      e916fcffff     jmp 0x78ba
0x00007ca4      0f1f4000       nop dword [rax]
0x00007ca8      488b5d08       mov rbx, qword [rbp + 8]
0x00007cac      48837b6800     cmp qword [rbx + 0x68], 0
0x00007cb1      7511           jne 0x7cc4
0x00007cb3      418b442448     mov eax, dword [r12 + 0x48]
0x00007cb8      83e018         and eax, 0x18
0x00007cbb      83f818         cmp eax, 0x18
0x00007cbe      0f8459010000   je 0x7e1d
0x00007cc4      31d2           xor edx, edx
0x00007cc6      4889ee         mov rsi, rbp
0x00007cc9      4c89e7         mov rdi, r12
0x00007ccc      e8afdfffff     call sym.fts_stat
0x00007cd1      8b9590000000   mov edx, dword [rbp + 0x90]
0x00007cd7      66894570       mov word [rbp + 0x70], ax
0x00007cdb      81e200f00000   and edx, 0xf000
0x00007ce1      81fa00400000   cmp edx, 0x4000                         ; "L)\xf2L\x89\xee\xe8\x15@"
0x00007ce7      0f858ffdffff   jne 0x7a7c
0x00007ced      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x00007cf2      0f8416010000   je 0x7e0e
0x00007cf8      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x00007cfc      488d51ff       lea rdx, [rcx - 1]
0x00007d00      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00007d04      7704           ja 0x7d0a
0x00007d06      48895368       mov qword [rbx + 0x68], rdx
0x00007d0a      6683f801       cmp ax, 1
0x00007d0e      0f85a6fbffff   jne 0x78ba
0x00007d14      e97dfdffff     jmp 0x7a96                              ; ../coreutils-8.31/lib/fts.c:-796
0x00007d19      0f1f80000000.  nop dword [rax]
0x00007d20      488b4348       mov rax, qword [rbx + 0x48]
0x00007d24      498b542420     mov rdx, qword [r12 + 0x20]
0x00007d29      be03000000     mov esi, 3
0x00007d2e      49891c24       mov qword [r12], rbx
0x00007d32      4c89e7         mov rdi, r12
0x00007d35      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x00007d39      e8c2eaffff     call sym.fts_build
0x00007d3e      4885c0         test rax, rax
0x00007d41      4889c3         mov rbx, rax
0x00007d44      7452           je 0x7d98
0x00007d46      4889ef         mov rdi, rbp
0x00007d49      4889dd         mov rbp, rbx
0x00007d4c      e83f9dffff     call sym..plt.got
0x00007d51      e97cfdffff     jmp 0x7ad2
0x00007d56      662e0f1f8400.  nop word cs:[rax + rax]
0x00007d60      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x00007d63      e8f89affff     call sym.imp.close
0x00007d68      e918fbffff     jmp 0x7885                              ; ../coreutils-8.31/lib/fts.c:-757
0x00007d6d      ba01000000     mov edx, 1
0x00007d72      4889de         mov rsi, rbx
0x00007d75      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x00007d78      e803dfffff     call sym.fts_stat
0x00007d7d      6683f801       cmp ax, 1
0x00007d81      66894370       mov word [rbx + 0x70], ax
0x00007d85      745a           je 0x7de1                               ; ../coreutils-8.31/lib/fts.c:-744
0x00007d87      be03000000     mov esi, 3
0x00007d8c      4889dd         mov rbp, rbx
0x00007d8f      66897374       mov word [rbx + 0x74], si
0x00007d93      e93afdffff     jmp 0x7ad2
0x00007d98      41f644244920   test byte [r12 + 0x49], 0x20
0x00007d9e      0f859afaffff   jne 0x783e
0x00007da4      488b5d08       mov rbx, qword [rbp + 8]
0x00007da8      e90bfaffff     jmp 0x77b8
0x00007dad      e8ce9bffff     call sym.imp.fchdir
0x00007db2      85c0           test eax, eax
0x00007db4      7413           je 0x7dc9
0x00007db6      e84599ffff     call sym.imp.__errno_location
0x00007dbb      8b00           mov eax, dword [rax]
0x00007dbd      894340         mov dword [rbx + 0x40], eax
0x00007dc0      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0xc9e8ef89
0x00007dc9      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x00007dcc      e93dfaffff     jmp 0x780e
0x00007dd1      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0xc9e8ef89
0x00007dda      31ed           xor ebp, ebp
0x00007ddc      e9d9faffff     jmp 0x78ba
0x00007de1      418b742448     mov esi, dword [r12 + 0x48]
0x00007de6      40f6c604       test sil, 4
0x00007dea      759b           jne 0x7d87
0x00007dec      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00007df1      488d15233100.  lea rdx, [0x0000af1b]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x00007df8      e8d3e5ffff     call sym.diropen.isra.6
0x00007dfd      85c0           test eax, eax
0x00007dff      894344         mov dword [rbx + 0x44], eax
0x00007e02      787c           js 0x7e80
0x00007e04      66834b7202     or word [rbx + 0x72], 2
0x00007e09      e979ffffff     jmp 0x7d87
0x00007e0e      6683f801       cmp ax, 1
0x00007e12      0f85a2faffff   jne 0x78ba
0x00007e18      e970fcffff     jmp 0x7a8d
0x00007e1d      418b74242c     mov esi, dword [r12 + 0x2c]
0x00007e22      4889df         mov rdi, rbx
0x00007e25      e886e3ffff     call sym.leaf_optimization
0x00007e2a      83f802         cmp eax, 2
0x00007e2d      0f8591feffff   jne 0x7cc4
0x00007e33      0fb74570       movzx eax, word [rbp + 0x70]
0x00007e37      e940fcffff     jmp 0x7a7c
0x00007e3c      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00007e41      488d15d33000.  lea rdx, [0x0000af1b]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00007e48      e883e5ffff     call sym.diropen.isra.6
0x00007e4d      85c0           test eax, eax
0x00007e4f      894544         mov dword [rbp + 0x44], eax
0x00007e52      780e           js 0x7e62                               ; ../coreutils-8.31/lib/fts.c:-727
0x00007e54      66834d7202     or word [rbp + 0x72], 2
0x00007e59      0fb74570       movzx eax, word [rbp + 0x70]
0x00007e5d      e90cfcffff     jmp 0x7a6e
0x00007e62      e89998ffff     call sym.imp.__errno_location
0x00007e67      8b00           mov eax, dword [rax]
0x00007e69      41bb07000000   mov r11d, 7
0x00007e6f      6644895d70     mov word [rbp + 0x70], r11w
0x00007e74      894540         mov dword [rbp + 0x40], eax
0x00007e77      49892c24       mov qword [r12], rbp
0x00007e7b      e93afaffff     jmp 0x78ba
0x00007e80      e87b98ffff     call sym.imp.__errno_location
0x00007e85      8b00           mov eax, dword [rax]
0x00007e87      bf07000000     mov edi, 7
0x00007e8c      66897b70       mov word [rbx + 0x70], di
0x00007e90      894340         mov dword [rbx + 0x40], eax
0x00007e93      e9effeffff     jmp 0x7d87
0x00007e98      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x00007ea0      83fa04         cmp edx, 4
0x00007ea3      770b           ja 0x7eb0
0x00007ea5      66895674       mov word [rsi + 0x74], dx
0x00007ea9      31c0           xor eax, eax
0x00007eab      c3             ret
0x00007eac      0f1f4000       nop dword [rax]
0x00007eb0      4883ec08       sub rsp, 8
0x00007eb4      e84798ffff     call sym.imp.__errno_location
0x00007eb9      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x27e00000
0x00007ebf      b801000000     mov eax, 1
0x00007ec4      4883c408       add rsp, 8
0x00007ec8      c3             ret
0x00007ec9      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00007ed0      4156           push r14
0x00007ed2      4155           push r13
0x00007ed4      4154           push r12
0x00007ed6      55             push rbp
0x00007ed7      4189f4         mov r12d, esi
0x00007eda      53             push rbx
0x00007edb      4889fb         mov rbx, rdi
0x00007ede      e81d98ffff     call sym.imp.__errno_location
0x00007ee3      41f7c4ffefff.  test r12d, 0xffffefff
0x00007eea      4989c5         mov r13, rax
0x00007eed      0f85e5000000   jne 0x7fd8
0x00007ef3      488b2b         mov rbp, qword [rbx]
0x00007ef6      c70000000000   mov dword [rax], 0
0x00007efc      f6434920       test byte [rbx + 0x49], 0x20
0x00007f00      757e           jne 0x7f80
0x00007f02      0fb74570       movzx eax, word [rbp + 0x70]
0x00007f06      6683f809       cmp ax, 9
0x00007f0a      7464           je 0x7f70
0x00007f0c      6683f801       cmp ax, 1
0x00007f10      756e           jne 0x7f80
0x00007f12      488b7b08       mov rdi, qword [rbx + 8]
0x00007f16      4885ff         test rdi, rdi
0x00007f19      7405           je 0x7f20
0x00007f1b      e8d0e0ffff     call sym.fts_lfree
0x00007f20      4181fc001000.  cmp r12d, 0x1000
0x00007f27      41be01000000   mov r14d, 1
0x00007f2d      750d           jne 0x7f3c
0x00007f2f      814b48001000.  or dword [rbx + 0x48], str.8.31         ; [0x1000:4]=0xa5ac str.8.31
0x00007f36      41be02000000   mov r14d, 2
0x00007f3c      48837d5800     cmp qword [rbp + 0x58], 0
0x00007f41      7512           jne 0x7f55
0x00007f43      488b4530       mov rax, qword [rbp + 0x30]
0x00007f47      80382f         cmp byte [rax], 0x2f
0x00007f4a      7409           je 0x7f55
0x00007f4c      8b7348         mov esi, dword [rbx + 0x48]
0x00007f4f      40f6c604       test sil, 4
0x00007f53      743b           je 0x7f90
0x00007f55      4489f6         mov esi, r14d
0x00007f58      4889df         mov rdi, rbx
0x00007f5b      e8a0e8ffff     call sym.fts_build
0x00007f60      48894308       mov qword [rbx + 8], rax
0x00007f64      5b             pop rbx
0x00007f65      5d             pop rbp
0x00007f66      415c           pop r12
0x00007f68      415d           pop r13
0x00007f6a      415e           pop r14
0x00007f6c      c3             ret
0x00007f6d      0f1f00         nop dword [rax]
0x00007f70      5b             pop rbx
0x00007f71      488b4510       mov rax, qword [rbp + 0x10]
0x00007f75      5d             pop rbp
0x00007f76      415c           pop r12
0x00007f78      415d           pop r13
0x00007f7a      415e           pop r14
0x00007f7c      c3             ret
0x00007f7d      0f1f00         nop dword [rax]
0x00007f80      5b             pop rbx
0x00007f81      31c0           xor eax, eax
0x00007f83      5d             pop rbp
0x00007f84      415c           pop r12
0x00007f86      415d           pop r13
0x00007f88      415e           pop r14
0x00007f8a      c3             ret
0x00007f8b      0f1f440000     nop dword [rax + rax]
0x00007f90      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00007f93      488d15812f00.  lea rdx, [0x0000af1b]                   ; "."
0x00007f9a      e831e4ffff     call sym.diropen.isra.6
0x00007f9f      85c0           test eax, eax
0x00007fa1      89c5           mov ebp, eax
0x00007fa3      7854           js 0x7ff9
0x00007fa5      4489f6         mov esi, r14d
0x00007fa8      4889df         mov rdi, rbx
0x00007fab      e850e8ffff     call sym.fts_build
0x00007fb0      f6434902       test byte [rbx + 0x49], 2
0x00007fb4      48894308       mov qword [rbx + 8], rax
0x00007fb8      752e           jne 0x7fe8
0x00007fba      89ef           mov edi, ebp
0x00007fbc      e8bf99ffff     call sym.imp.fchdir
0x00007fc1      85c0           test eax, eax
0x00007fc3      7543           jne 0x8008
0x00007fc5      89ef           mov edi, ebp
0x00007fc7      e89498ffff     call sym.imp.close
0x00007fcc      488b4308       mov rax, qword [rbx + 8]
0x00007fd0      eb92           jmp 0x7f64
0x00007fd2      660f1f440000   nop word [rax + rax]
0x00007fd8      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x27e00000
0x00007fde      31c0           xor eax, eax
0x00007fe0      e97fffffff     jmp 0x7f64
0x00007fe5      0f1f00         nop dword [rax]
0x00007fe8      ba01000000     mov edx, 1
0x00007fed      89ee           mov esi, ebp
0x00007fef      4889df         mov rdi, rbx
0x00007ff2      e829e2ffff     call sym.cwd_advance_fd
0x00007ff7      ebd3           jmp 0x7fcc
0x00007ff9      48c743080000.  mov qword [rbx + 8], 0
0x00008001      31c0           xor eax, eax
0x00008003      e95cffffff     jmp 0x7f64
0x00008008      418b5d00       mov ebx, dword [r13]
0x0000800c      89ef           mov edi, ebp
0x0000800e      e84d98ffff     call sym.imp.close
0x00008013      31c0           xor eax, eax
0x00008015      41895d00       mov dword [r13], ebx
0x00008019      e946ffffff     jmp 0x7f64
0x0000801e      6690           nop
;-- rpl_mbrtowc:
0x00008020      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008022      4154           push r12
0x00008024      4989f5         mov r13, rsi
0x00008027      55             push rbp
0x00008028      53             push rbx
0x00008029      4889fb         mov rbx, rdi
0x0000802c      4989d4         mov r12, rdx
0x0000802f      4883ec18       sub rsp, 0x18
0x00008033      64488b042528.  mov rax, qword fs:[0x28]
0x0000803c      4889442408     mov qword [rsp + 8], rax
0x00008041      31c0           xor eax, eax
0x00008043      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008048      4885ff         test rdi, rdi
0x0000804b      480f44d8       cmove rbx, rax
0x0000804f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008052      e8a997ffff     call sym.imp.mbrtowc
0x00008057      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000805b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000805e      7620           jbe 0x8080                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008060      4d85e4         test r12, r12
0x00008063      741b           je 0x8080
0x00008065      31ff           xor edi, edi
0x00008067      e8d4010000     call sym.hard_locale
0x0000806c      84c0           test al, al
0x0000806e      7510           jne 0x8080
0x00008070      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008075      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000807a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000807c      0f1f4000       nop dword [rax]
0x00008080      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008085      644833142528.  xor rdx, qword fs:[0x28]
0x0000808e      4889e8         mov rax, rbp
0x00008091      750b           jne 0x809e
0x00008093      4883c418       add rsp, 0x18
0x00008097      5b             pop rbx
0x00008098      5d             pop rbp
0x00008099      415c           pop r12
0x0000809b      415d           pop r13
0x0000809d      c3             ret
0x0000809e      e83d97ffff     call sym.imp.__stack_chk_fail
0x000080a3      662e0f1f8400.  nop word cs:[rax + rax]
0x000080ad      0f1f00         nop dword [rax]
;-- close_stream:
0x000080b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000080b2      55             push rbp
0x000080b3      4889fd         mov rbp, rdi
0x000080b6      53             push rbx
0x000080b7      e87496ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000080bc      8b5d00         mov ebx, dword [rbp]
0x000080bf      4889ef         mov rdi, rbp
0x000080c2      4989c4         mov r12, rax
0x000080c5      e8d6160000     call sym.rpl_fclose
0x000080ca      83e320         and ebx, 0x20                           ; "@"
0x000080cd      85db           test ebx, ebx
0x000080cf      7517           jne 0x80e8
0x000080d1      85c0           test eax, eax
0x000080d3      740a           je 0x80df                               ; stdio.h:-186
0x000080d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000080d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000080dd      7439           je 0x8118
0x000080df      5b             pop rbx
0x000080e0      5d             pop rbp
0x000080e1      415c           pop r12
0x000080e3      c3             ret
0x000080e4      0f1f4000       nop dword [rax]
0x000080e8      85c0           test eax, eax
0x000080ea      751c           jne 0x8108
0x000080ec      e80f96ffff     call sym.imp.__errno_location
0x000080f1      c70000000000   mov dword [rax], 0
0x000080f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000080fc      5b             pop rbx
0x000080fd      5d             pop rbp
0x000080fe      415c           pop r12
0x00008100      c3             ret
0x00008101      0f1f80000000.  nop dword [rax]
0x00008108      5b             pop rbx
0x00008109      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000810e      5d             pop rbp                                 ; stdio.h:-186
0x0000810f      415c           pop r12
0x00008111      c3             ret
0x00008112      660f1f440000   nop word [rax + rax]
0x00008118      e8e395ffff     call sym.imp.__errno_location
0x0000811d      833809         cmp dword [rax], 9
0x00008120      5b             pop rbx
0x00008121      5d             pop rbp
0x00008122      415c           pop r12                                 ; stdio.h:-178
0x00008124      0f95c0         setne al
0x00008127      0fb6c0         movzx eax, al
0x0000812a      f7d8           neg eax
0x0000812c      c3             ret
0x0000812d      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00008130      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00008138      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x0000813f      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00008140      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00008147      755e           jne 0x81a7
0x00008149      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x0000814d      488b4e08       mov rcx, qword [rsi + 8]
0x00008151      4885d2         test rdx, rdx
0x00008154      741a           je 0x8170
0x00008156      48390f         cmp qword [rdi], rcx
0x00008159      742d           je 0x8188
0x0000815b      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x0000815f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008161      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008164      4c894710       mov qword [rdi + 0x10], r8
0x00008168      7436           je 0x81a0
0x0000816a      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x0000816c      0f1f4000       nop dword [rax]
0x00008170      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008178      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x0000817b      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x0000817e      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x00008182      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008184      c3             ret
0x00008185      0f1f00         nop dword [rax]
0x00008188      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x0000818c      483906         cmp qword [rsi], rax
0x0000818f      75ca           jne 0x815b
0x00008191      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x00008196      c3             ret
0x00008197      660f1f840000.  nop word [rax + rax]
0x000081a0      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x000081a3      74ec           je 0x8191
0x000081a5      ebd1           jmp 0x8178
0x000081a7      488d0de22d00.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0xaf90 ; "cycle_check"
0x000081ae      488d359b2d00.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0xaf50 ; "../coreutils-8.31/lib/cycle-check.c"
0x000081b5      488d3db82d00.  lea rdi, str.state__magic____9827862    ; 0xaf74 ; "state->magic == 9827862"
0x000081bc      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x000081c0      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x000081c5      e87696ffff     call sym.imp.__assert_fail
0x000081ca      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x000081d0      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x000081d4      4889542430     mov qword [rsp + 0x30], rdx
0x000081d9      31d2           xor edx, edx
0x000081db      64488b042528.  mov rax, qword fs:[0x28]
0x000081e4      4889442418     mov qword [rsp + 0x18], rax
0x000081e9      31c0           xor eax, eax
0x000081eb      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x000081ef      7527           jne 0x8218
0x000081f1      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x000081f3      e8e897ffff     call sym.imp.open
0x000081f8      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x000081fa      e861150000     call sym.fd_safer
0x000081ff      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00008204      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000820d      752a           jne 0x8239
0x0000820f      4883c458       add rsp, 0x58
0x00008213      c3             ret
0x00008214      0f1f4000       nop dword [rax]
0x00008218      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x0000821d      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00008224      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00008228      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x0000822d      488d442420     lea rax, [rsp + 0x20]
0x00008232      4889442410     mov qword [rsp + 0x10], rax
0x00008237      ebb8           jmp 0x81f1
0x00008239      e8a295ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x0000823e      6690           nop
;-- hard_locale:
0x00008240      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00008244      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00008246      e85597ffff     call sym.imp.setlocale
0x0000824b      4889c2         mov rdx, rax
0x0000824e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00008253      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00008256      741d           je 0x8275
0x00008258      488d3d3d2d00.  lea rdi, [0x0000af9c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000825f      b902000000     mov ecx, 2
0x00008264      4889d6         mov rsi, rdx
0x00008267      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008269      0f97c1         seta cl
0x0000826c      80d900         sbb cl, 0
0x0000826f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00008271      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00008273      750b           jne 0x8280
0x00008275      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00008279      c3             ret
0x0000827a      660f1f440000   nop word [rax + rax]
0x00008280      488d3d172d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xaf9e ; "POSIX"
0x00008287      b906000000     mov ecx, 6
0x0000828c      4889d6         mov rsi, rdx
0x0000828f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00008291      0f97c0         seta al
0x00008294      1c00           sbb al, 0
0x00008296      84c0           test al, al
0x00008298      0f95c0         setne al
0x0000829b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000829f      c3             ret
;-- next_prime:
0x000082a0      4883ff0a       cmp rdi, 0xa
0x000082a4      b80a000000     mov eax, 0xa
0x000082a9      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x000082b3      480f42f8       cmovb rdi, rax
0x000082b7      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x000082bb      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x000082bf      746e           je 0x832f
0x000082c1      0f1f80000000.  nop dword [rax]
0x000082c8      4889f8         mov rax, rdi
0x000082cb      4889f9         mov rcx, rdi
0x000082ce      49f7e1         mul r9
0x000082d1      4889d0         mov rax, rdx
0x000082d4      48d1e8         shr rax, 1
0x000082d7      488d0440       lea rax, [rax + rax*2]
0x000082db      4829c1         sub rcx, rax
0x000082de      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x000082e2      4889c8         mov rax, rcx
0x000082e5      7639           jbe 0x8320
0x000082e7      4885c9         test rcx, rcx
0x000082ea      7439           je 0x8325
0x000082ec      41b810000000   mov r8d, 0x10
0x000082f2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x000082f7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x000082fc      eb0b           jmp 0x8309
0x000082fe      6690           nop
0x00008300      4983c008       add r8, 8
0x00008304      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x00008307      741c           je 0x8325
0x00008309      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x0000830d      31d2           xor edx, edx
0x0000830f      4889f8         mov rax, rdi
0x00008312      48f7f1         div rcx
0x00008315      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x00008318      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x0000831b      4889d0         mov rax, rdx
0x0000831e      72e0           jb 0x8300
0x00008320      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x00008323      750a           jne 0x832f
0x00008325      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x00008329      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000832d      7599           jne 0x82c8
0x0000832f      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x00008332      c3             ret
0x00008333      0f1f00         nop dword [rax]
0x00008336      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00008340      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00008343      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00008345      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00008349      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000834c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000834f      c3             ret
;-- raw_comparator:
0x00008350      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00008353      0f94c0         sete al
0x00008356      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00008357      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00008360      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00008361      4889fb         mov rbx, rdi
0x00008364      4889f7         mov rdi, rsi
0x00008367      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000836b      ff5330         call qword [rbx + 0x30]
0x0000836e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00008372      7609           jbe 0x837d
0x00008374      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00008378      480303         add rax, qword [rbx]
0x0000837b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000837c      c3             ret
0x0000837d      e86e93ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00008382      0f1f4000       nop dword [rax]
0x00008386      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00008390      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00008392      4155           push r13
0x00008394      4989d6         mov r14, rdx
0x00008397      4154           push r12
0x00008399      55             push rbp
0x0000839a      4989fc         mov r12, rdi
0x0000839d      53             push rbx
0x0000839e      4889f5         mov rbp, rsi
0x000083a1      4189cd         mov r13d, ecx
0x000083a4      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x000083a9      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x000083ac      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x000083af      4885f6         test rsi, rsi
0x000083b2      0f84e8000000   je 0x84a0
0x000083b8      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x000083bb      4889c3         mov rbx, rax
0x000083be      0f848f000000   je 0x8453
0x000083c4      4889ef         mov rdi, rbp
0x000083c7      41ff542438     call qword [r12 + 0x38]
0x000083cc      84c0           test al, al
0x000083ce      0f857c000000   jne 0x8450
0x000083d4      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x000083d8      4885c0         test rax, rax
0x000083db      0f84bf000000   je 0x84a0
0x000083e1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x000083e4      4839f5         cmp rbp, rsi
0x000083e7      7520           jne 0x8409
0x000083e9      eb31           jmp 0x841c
0x000083eb      0f1f440000     nop dword [rax + rax]
0x000083f0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x000083f4      488b4308       mov rax, qword [rbx + 8]
0x000083f8      4885c0         test rax, rax
0x000083fb      0f849f000000   je 0x84a0
0x00008401      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x00008404      4839ee         cmp rsi, rbp
0x00008407      7413           je 0x841c
0x00008409      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x0000840c      41ff542438     call qword [r12 + 0x38]
0x00008411      84c0           test al, al
0x00008413      74db           je 0x83f0
0x00008415      488b4308       mov rax, qword [rbx + 8]
0x00008419      488b30         mov rsi, qword [rax]
0x0000841c      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x0000841f      741d           je 0x843e
0x00008421      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x00008425      48895308       mov qword [rbx + 8], rdx
0x00008429      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x00008430      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x00008435      48895008       mov qword [rax + 8], rdx
0x00008439      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x0000843e      5b             pop rbx
0x0000843f      4889f0         mov rax, rsi
0x00008442      5d             pop rbp
0x00008443      415c           pop r12
0x00008445      415d           pop r13
0x00008447      415e           pop r14
0x00008449      c3             ret
0x0000844a      660f1f440000   nop word [rax + rax]
0x00008450      488b33         mov rsi, qword [rbx]
0x00008453      4584ed         test r13b, r13b
0x00008456      74e6           je 0x843e
0x00008458      488b4308       mov rax, qword [rbx + 8]
0x0000845c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000845f      742f           je 0x8490
0x00008461      f30f6f00       movdqu xmm0, xmmword [rax]
0x00008465      0f1103         movups xmmword [rbx], xmm0
0x00008468      48c700000000.  mov qword [rax], 0
0x0000846f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00008474      48895008       mov qword [rax + 8], rdx
0x00008478      4989442448     mov qword [r12 + 0x48], rax
0x0000847d      4889f0         mov rax, rsi
0x00008480      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00008481      5d             pop rbp
0x00008482      415c           pop r12
0x00008484      415d           pop r13
0x00008486      415e           pop r14
0x00008488      c3             ret
0x00008489      0f1f80000000.  nop dword [rax]
0x00008490      48c703000000.  mov qword [rbx], 0
0x00008497      eba5           jmp 0x843e
0x00008499      0f1f80000000.  nop dword [rax]
0x000084a0      31f6           xor esi, esi
0x000084a2      5b             pop rbx
0x000084a3      4889f0         mov rax, rsi
0x000084a6      5d             pop rbp
0x000084a7      415c           pop r12
0x000084a9      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x000084ab      415e           pop r14
0x000084ad      c3             ret
0x000084ae      6690           nop
;-- check_tuning.isra.0:
0x000084b0      488b17         mov rdx, qword [rdi]
0x000084b3      488d0d662b00.  lea rcx, obj.default_tuning             ; 0xb020
0x000084ba      b801000000     mov eax, 1
0x000084bf      4839ca         cmp rdx, rcx
0x000084c2      7461           je 0x8525
0x000084c4      f30f104208     movss xmm0, dword [rdx + 8]
0x000084c9      0f2e05642b00.  ucomiss xmm0, dword [0x0000b034]
0x000084d0      764e           jbe 0x8520
0x000084d2      f30f100d5e2b.  movss xmm1, dword [0x0000b038]          ; [0xb038:4]=0x3f666666
0x000084da      0f2ec8         ucomiss xmm1, xmm0
0x000084dd      7641           jbe 0x8520
0x000084df      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x000084e4      0f2e0d512b00.  ucomiss xmm1, dword [0x0000b03c]
0x000084eb      7633           jbe 0x8520
0x000084ed      f30f100a       movss xmm1, dword [rdx]
0x000084f1      0f2e0d482b00.  ucomiss xmm1, dword [0x0000b040]
0x000084f8      7226           jb 0x8520
0x000084fa      f30f580d322b.  addss xmm1, dword [0x0000b034]          ; ../coreutils-8.31/lib/hash.c:737
0x00008502      f30f105204     movss xmm2, dword [rdx + 4]
0x00008507      0f2ed1         ucomiss xmm2, xmm1
0x0000850a      7614           jbe 0x8520
0x0000850c      f30f101d302b.  movss xmm3, dword [0x0000b044]          ; [0xb044:4]=0x3f800000
0x00008514      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x00008517      7207           jb 0x8520
0x00008519      0f2ec1         ucomiss xmm0, xmm1
0x0000851c      7707           ja 0x8525
0x0000851e      6690           nop
0x00008520      48890f         mov qword [rdi], rcx
0x00008523      31c0           xor eax, eax
0x00008525      f3c3           ret
0x00008527      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x00008530      4157           push r15
0x00008532      4156           push r14
0x00008534      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x00008536      4154           push r12
0x00008538      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x00008539      53             push rbx
0x0000853a      4883ec08       sub rsp, 8
0x0000853e      4c8b26         mov r12, qword [rsi]
0x00008541      4c3b6608       cmp r12, qword [rsi + 8]
0x00008545      0f83dd000000   jae 0x8628
0x0000854b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000854e      4989f5         mov r13, rsi
0x00008551      4189d6         mov r14d, edx
0x00008554      0f1f4000       nop dword [rax]
0x00008558      4d8b3c24       mov r15, qword [r12]
0x0000855c      4d85ff         test r15, r15
0x0000855f      0f84b5000000   je 0x861a
0x00008565      498b5c2408     mov rbx, qword [r12 + 8]
0x0000856a      4885db         test rbx, rbx
0x0000856d      751d           jne 0x858c
0x0000856f      eb5a           jmp 0x85cb
0x00008571      0f1f80000000.  nop dword [rax]
0x00008578      488b4808       mov rcx, qword [rax + 8]
0x0000857c      4885d2         test rdx, rdx
0x0000857f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00008583      48895808       mov qword [rax + 8], rbx
0x00008587      4889d3         mov rbx, rdx
0x0000858a      743b           je 0x85c7
0x0000858c      4c8b3b         mov r15, qword [rbx]
0x0000858f      4889ef         mov rdi, rbp
0x00008592      4c89fe         mov rsi, r15
0x00008595      e8c6fdffff     call sym.safe_hasher
0x0000859a      48833800       cmp qword [rax], 0
0x0000859e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x000085a2      75d4           jne 0x8578
0x000085a4      4c8938         mov qword [rax], r15
0x000085a7      4883451801     add qword [rbp + 0x18], 1
0x000085ac      4885d2         test rdx, rdx
0x000085af      48c703000000.  mov qword [rbx], 0
0x000085b6      488b4548       mov rax, qword [rbp + 0x48]
0x000085ba      48894308       mov qword [rbx + 8], rax
0x000085be      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x000085c2      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x000085c5      75c5           jne 0x858c
0x000085c7      4d8b3c24       mov r15, qword [r12]
0x000085cb      4584f6         test r14b, r14b
0x000085ce      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x000085d7      7541           jne 0x861a
0x000085d9      4c89fe         mov rsi, r15
0x000085dc      4889ef         mov rdi, rbp
0x000085df      e87cfdffff     call sym.safe_hasher
0x000085e4      48833800       cmp qword [rax], 0
0x000085e8      4889c3         mov rbx, rax
0x000085eb      7453           je 0x8640
0x000085ed      488b4548       mov rax, qword [rbp + 0x48]
0x000085f1      4885c0         test rax, rax
0x000085f4      745a           je 0x8650
0x000085f6      488b5008       mov rdx, qword [rax + 8]
0x000085fa      48895548       mov qword [rbp + 0x48], rdx
0x000085fe      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x00008602      4c8938         mov qword [rax], r15
0x00008605      48895008       mov qword [rax + 8], rdx
0x00008609      48894308       mov qword [rbx + 8], rax
0x0000860d      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008615      49836d1801     sub qword [r13 + 0x18], 1
0x0000861a      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x0000861e      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x00008622      0f8730ffffff   ja 0x8558
0x00008628      4883c408       add rsp, 8
0x0000862c      b801000000     mov eax, 1
0x00008631      5b             pop rbx
0x00008632      5d             pop rbp
0x00008633      415c           pop r12
0x00008635      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x00008637      415e           pop r14
0x00008639      415f           pop r15
0x0000863b      c3             ret
0x0000863c      0f1f4000       nop dword [rax]
0x00008640      4c8938         mov qword [rax], r15
0x00008643      4883451801     add qword [rbp + 0x18], 1
0x00008648      ebc3           jmp 0x860d
0x0000864a      660f1f440000   nop word [rax + rax]
0x00008650      bf10000000     mov edi, 0x10
0x00008655      e8c692ffff     call sym.imp.malloc
0x0000865a      4885c0         test rax, rax
0x0000865d      759f           jne 0x85fe
0x0000865f      4883c408       add rsp, 8
0x00008663      31c0           xor eax, eax
0x00008665      5b             pop rbx
0x00008666      5d             pop rbp
0x00008667      415c           pop r12
0x00008669      415d           pop r13
0x0000866b      415e           pop r14
0x0000866d      415f           pop r15
0x0000866f      c3             ret
;-- hash_get_n_buckets:
0x00008670      488b4710       mov rax, qword [rdi + 0x10]
0x00008674      c3             ret
0x00008675      90             nop
0x00008676      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00008680      488b4718       mov rax, qword [rdi + 0x18]
0x00008684      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00008685      90             nop
0x00008686      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00008690      488b4720       mov rax, qword [rdi + 0x20]
0x00008694      c3             ret
0x00008695      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00008696      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x000086a0      488b37         mov rsi, qword [rdi]
0x000086a3      488b7f08       mov rdi, qword [rdi + 8]
0x000086a7      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x000086a9      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x000086ac      7339           jae 0x86e7
0x000086ae      6690           nop
0x000086b0      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x000086b4      7426           je 0x86dc                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x000086b6      488b5608       mov rdx, qword [rsi + 8]
0x000086ba      b901000000     mov ecx, 1
0x000086bf      4885d2         test rdx, rdx
0x000086c2      7411           je 0x86d5
0x000086c4      0f1f4000       nop dword [rax]
0x000086c8      488b5208       mov rdx, qword [rdx + 8]
0x000086cc      4883c101       add rcx, 1
0x000086d0      4885d2         test rdx, rdx
0x000086d3      75f3           jne 0x86c8
0x000086d5      4839c8         cmp rax, rcx
0x000086d8      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x000086dc      4883c610       add rsi, 0x10
0x000086e0      4839fe         cmp rsi, rdi
0x000086e3      72cb           jb 0x86b0
0x000086e5      f3c3           ret
0x000086e7      f3c3           ret
0x000086e9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x000086f0      488b0f         mov rcx, qword [rdi]
0x000086f3      4c8b4708       mov r8, qword [rdi + 8]
0x000086f7      31d2           xor edx, edx
0x000086f9      31f6           xor esi, esi
0x000086fb      4c39c1         cmp rcx, r8
0x000086fe      7336           jae 0x8736
0x00008700      48833900       cmp qword [rcx], 0
0x00008704      7427           je 0x872d
0x00008706      488b4108       mov rax, qword [rcx + 8]
0x0000870a      4883c601       add rsi, 1
0x0000870e      4883c201       add rdx, 1
0x00008712      4885c0         test rax, rax
0x00008715      7416           je 0x872d
0x00008717      660f1f840000.  nop word [rax + rax]
0x00008720      488b4008       mov rax, qword [rax + 8]
0x00008724      4883c201       add rdx, 1
0x00008728      4885c0         test rax, rax
0x0000872b      75f3           jne 0x8720
0x0000872d      4883c110       add rcx, 0x10
0x00008731      4c39c1         cmp rcx, r8
0x00008734      72ca           jb 0x8700
0x00008736      31c0           xor eax, eax
0x00008738      48397718       cmp qword [rdi + 0x18], rsi
0x0000873c      7402           je 0x8740
0x0000873e      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00008740      48395720       cmp qword [rdi + 0x20], rdx
0x00008744      0f94c0         sete al
0x00008747      c3             ret
0x00008748      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00008750      4155           push r13
0x00008752      4154           push r12
0x00008754      4989f4         mov r12, rsi
0x00008757      55             push rbp
0x00008758      53             push rbx
0x00008759      31db           xor ebx, ebx
0x0000875b      4883ec08       sub rsp, 8
0x0000875f      488b37         mov rsi, qword [rdi]
0x00008762      488b4f20       mov rcx, qword [rdi + 0x20]
0x00008766      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000876a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000876e      488b7f08       mov rdi, qword [rdi + 8]
0x00008772      4839fe         cmp rsi, rdi
0x00008775      733e           jae 0x87b5
0x00008777      660f1f840000.  nop word [rax + rax]
0x00008780      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00008784      7426           je 0x87ac
0x00008786      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000878a      ba01000000     mov edx, 1
0x0000878f      4885c0         test rax, rax
0x00008792      7411           je 0x87a5
0x00008794      0f1f4000       nop dword [rax]
0x00008798      488b4008       mov rax, qword [rax + 8]
0x0000879c      4883c201       add rdx, 1
0x000087a0      4885c0         test rax, rax
0x000087a3      75f3           jne 0x8798
0x000087a5      4839d3         cmp rbx, rdx
0x000087a8      480f42da       cmovb rbx, rdx
0x000087ac      4883c610       add rsi, 0x10
0x000087b0      4839fe         cmp rsi, rdi
0x000087b3      72cb           jb 0x8780
0x000087b5      488d15e82700.  lea rdx, str.entries:__________lu       ; 0xafa4 ; "# entries:         %lu\n"
0x000087bc      be01000000     mov esi, 1
0x000087c1      4c89e7         mov rdi, r12
0x000087c4      31c0           xor eax, eax
0x000087c6      e88592ffff     call sym.imp.__fprintf_chk
0x000087cb      488d15ea2700.  lea rdx, str.buckets:__________lu       ; 0xafbc ; "# buckets:         %lu\n"
0x000087d2      31c0           xor eax, eax
0x000087d4      4889e9         mov rcx, rbp
0x000087d7      be01000000     mov esi, 1
0x000087dc      4c89e7         mov rdi, r12
0x000087df      e86c92ffff     call sym.imp.__fprintf_chk
0x000087e4      4d85ed         test r13, r13
0x000087e7      7867           js 0x8850
0x000087e9      660fefc0       pxor xmm0, xmm0
0x000087ed      4885ed         test rbp, rbp
0x000087f0      f2490f2ac5     cvtsi2sd xmm0, r13
0x000087f5      f20f59055b28.  mulsd xmm0, qword [0x0000b058]          ; ../coreutils-8.31/lib/hash.c:-174
0x000087fd      787a           js 0x8879                               ; ../coreutils-8.31/lib/hash.c:-170
0x000087ff      660fefc9       pxor xmm1, xmm1
0x00008803      f2480f2acd     cvtsi2sd xmm1, rbp
0x00008808      f20f5ec1       divsd xmm0, xmm1
0x0000880c      488d15dd2700.  lea rdx, str.buckets_used:_____lu___.2f ; 0xaff0 ; "# buckets used:    %lu (%.2f%%)\n"
0x00008813      4c89e9         mov rcx, r13
0x00008816      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x00008819      be01000000     mov esi, 1
0x0000881e      b801000000     mov eax, 1
0x00008823      e82892ffff     call sym.imp.__fprintf_chk
0x00008828      4883c408       add rsp, 8
0x0000882c      4889d9         mov rcx, rbx
0x0000882f      4c89e7         mov rdi, r12
0x00008832      5b             pop rbx
0x00008833      5d             pop rbp
0x00008834      415c           pop r12
0x00008836      415d           pop r13
0x00008838      488d15952700.  lea rdx, str.max_bucket_length:__lu     ; 0xafd4 ; "max bucket length: %lu\n"
0x0000883f      be01000000     mov esi, 1
0x00008844      31c0           xor eax, eax
0x00008846      e90592ffff     jmp sym.imp.__fprintf_chk
0x0000884b      0f1f440000     nop dword [rax + rax]
0x00008850      4c89e8         mov rax, r13
0x00008853      4c89ea         mov rdx, r13
0x00008856      660fefc0       pxor xmm0, xmm0
0x0000885a      48d1e8         shr rax, 1
0x0000885d      83e201         and edx, 1
0x00008860      4809d0         or rax, rdx
0x00008863      4885ed         test rbp, rbp
0x00008866      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000886b      f20f58c0       addsd xmm0, xmm0
0x0000886f      f20f5905e127.  mulsd xmm0, qword [0x0000b058]
0x00008877      7986           jns 0x87ff                              ; ../coreutils-8.31/lib/hash.c:-138
0x00008879      4889e8         mov rax, rbp
0x0000887c      660fefc9       pxor xmm1, xmm1
0x00008880      48d1e8         shr rax, 1
0x00008883      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00008886      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00008889      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000888e      f20f58c9       addsd xmm1, xmm1
0x00008892      e971ffffff     jmp 0x8808
0x00008897      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x000088a0      4154           push r12
0x000088a2      55             push rbp
0x000088a3      4989fc         mov r12, rdi
0x000088a6      53             push rbx
0x000088a7      4889f5         mov rbp, rsi
0x000088aa      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x000088af      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x000088b2      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x000088b5      7426           je 0x88dd                               ; ../coreutils-8.31/lib/hash.c:-120
0x000088b7      4889c3         mov rbx, rax
0x000088ba      eb07           jmp 0x88c3
0x000088bc      0f1f4000       nop dword [rax]
0x000088c0      488b33         mov rsi, qword [rbx]
0x000088c3      4839ee         cmp rsi, rbp
0x000088c6      7417           je 0x88df                               ; ../coreutils-8.31/lib/hash.c:-116
0x000088c8      4889ef         mov rdi, rbp
0x000088cb      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x000088d0      84c0           test al, al
0x000088d2      751c           jne 0x88f0
0x000088d4      488b5b08       mov rbx, qword [rbx + 8]
0x000088d8      4885db         test rbx, rbx
0x000088db      75e3           jne 0x88c0
0x000088dd      31f6           xor esi, esi
0x000088df      5b             pop rbx
0x000088e0      4889f0         mov rax, rsi
0x000088e3      5d             pop rbp
0x000088e4      415c           pop r12
0x000088e6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x000088e7      660f1f840000.  nop word [rax + rax]
0x000088f0      488b33         mov rsi, qword [rbx]
0x000088f3      5b             pop rbx
0x000088f4      5d             pop rbp
0x000088f5      4889f0         mov rax, rsi
0x000088f8      415c           pop r12
0x000088fa      c3             ret
0x000088fb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x00008900      48837f2000     cmp qword [rdi + 0x20], 0
0x00008905      742c           je 0x8933
0x00008907      488b17         mov rdx, qword [rdi]
0x0000890a      488b4f08       mov rcx, qword [rdi + 8]
0x0000890e      4839ca         cmp rdx, rcx
0x00008911      7325           jae 0x8938
0x00008913      488b02         mov rax, qword [rdx]
0x00008916      4885c0         test rax, rax
0x00008919      751b           jne 0x8936
0x0000891b      0f1f440000     nop dword [rax + rax]
0x00008920      4883c210       add rdx, 0x10
0x00008924      4839ca         cmp rdx, rcx
0x00008927      730f           jae 0x8938                              ; ../coreutils-8.31/lib/hash.c:-97
0x00008929      488b02         mov rax, qword [rdx]
0x0000892c      4885c0         test rax, rax
0x0000892f      74ef           je 0x8920
0x00008931      f3c3           ret
0x00008933      31c0           xor eax, eax
0x00008935      c3             ret
0x00008936      f3c3           ret
0x00008938      4883ec08       sub rsp, 8
0x0000893c      e8af8dffff     call sym.imp.abort
0x00008941      0f1f440000     nop dword [rax + rax]
0x00008946      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00008950      55             push rbp
0x00008951      53             push rbx
0x00008952      4889fd         mov rbp, rdi
0x00008955      4889f3         mov rbx, rsi
0x00008958      4883ec08       sub rsp, 8
0x0000895c      e8fff9ffff     call sym.safe_hasher
0x00008961      4889c2         mov rdx, rax
0x00008964      4889c1         mov rcx, rax
0x00008967      488b02         mov rax, qword [rdx]
0x0000896a      488b5208       mov rdx, qword [rdx + 8]
0x0000896e      4839d8         cmp rax, rbx
0x00008971      7416           je 0x8989
0x00008973      0f1f440000     nop dword [rax + rax]
0x00008978      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000897b      7411           je 0x898e
0x0000897d      488b02         mov rax, qword [rdx]
0x00008980      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00008984      4839d8         cmp rax, rbx
0x00008987      75ef           jne 0x8978
0x00008989      4885d2         test rdx, rdx
0x0000898c      752a           jne 0x89b8
0x0000898e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x00008992      eb0c           jmp 0x89a0
0x00008994      0f1f4000       nop dword [rax]
0x00008998      488b01         mov rax, qword [rcx]
0x0000899b      4885c0         test rax, rax
0x0000899e      750b           jne 0x89ab
0x000089a0      4883c110       add rcx, 0x10
0x000089a4      4839ca         cmp rdx, rcx
0x000089a7      77ef           ja 0x8998
0x000089a9      31c0           xor eax, eax
0x000089ab      4883c408       add rsp, 8
0x000089af      5b             pop rbx
0x000089b0      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x000089b1      c3             ret
0x000089b2      660f1f440000   nop word [rax + rax]
0x000089b8      488b02         mov rax, qword [rdx]
0x000089bb      4883c408       add rsp, 8
0x000089bf      5b             pop rbx
0x000089c0      5d             pop rbp
0x000089c1      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x000089c2      0f1f4000       nop dword [rax]
0x000089c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x000089d0      4c8b0f         mov r9, qword [rdi]
0x000089d3      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x000089d7      7659           jbe 0x8a32
0x000089d9      4531c0         xor r8d, r8d
0x000089dc      498b09         mov rcx, qword [r9]
0x000089df      4885c9         test rcx, rcx
0x000089e2      7439           je 0x8a1d                               ; ../coreutils-8.31/lib/hash.c:-47
0x000089e4      4c39c2         cmp rdx, r8
0x000089e7      763e           jbe 0x8a27
0x000089e9      4a890cc6       mov qword [rsi + r8*8], rcx
0x000089ed      498b4908       mov rcx, qword [r9 + 8]
0x000089f1      498d4001       lea rax, [r8 + 1]
0x000089f5      4885c9         test rcx, rcx
0x000089f8      7420           je 0x8a1a
0x000089fa      660f1f440000   nop word [rax + rax]
0x00008a00      4839c2         cmp rdx, rax
0x00008a03      742b           je 0x8a30                               ; ../coreutils-8.31/lib/hash.c:-3
0x00008a05      4c8b01         mov r8, qword [rcx]
0x00008a08      4883c001       add rax, 1
0x00008a0c      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x00008a11      488b4908       mov rcx, qword [rcx + 8]
0x00008a15      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x00008a18      75e6           jne 0x8a00
0x00008a1a      4989c0         mov r8, rax
0x00008a1d      4983c110       add r9, 0x10
0x00008a21      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x00008a25      77b5           ja 0x89dc
0x00008a27      4c89c0         mov rax, r8
0x00008a2a      c3             ret
0x00008a2b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x00008a30      f3c3           ret
0x00008a32      31c0           xor eax, eax
0x00008a34      c3             ret
0x00008a35      90             nop
0x00008a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00008a40      4157           push r15
0x00008a42      4156           push r14
0x00008a44      4155           push r13
0x00008a46      4154           push r12
0x00008a48      55             push rbp
0x00008a49      53             push rbx
0x00008a4a      4883ec08       sub rsp, 8
0x00008a4e      4c8b37         mov r14, qword [rdi]
0x00008a51      4c397708       cmp qword [rdi + 8], r14
0x00008a55      764f           jbe 0x8aa6
0x00008a57      4989d5         mov r13, rdx
0x00008a5a      4989f4         mov r12, rsi
0x00008a5d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00008a60      31ed           xor ebp, ebp
0x00008a62      498b3e         mov rdi, qword [r14]
0x00008a65      4885ff         test rdi, rdi
0x00008a68      7420           je 0x8a8a
0x00008a6a      4c89f3         mov rbx, r14
0x00008a6d      eb04           jmp 0x8a73
0x00008a6f      90             nop
0x00008a70      488b3b         mov rdi, qword [rbx]
0x00008a73      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00008a76      41ffd4         call r12
0x00008a79      84c0           test al, al
0x00008a7b      7417           je 0x8a94
0x00008a7d      488b5b08       mov rbx, qword [rbx + 8]
0x00008a81      4883c501       add rbp, 1
0x00008a85      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00008a88      75e6           jne 0x8a70
0x00008a8a      4983c610       add r14, 0x10
0x00008a8e      4d397708       cmp qword [r15 + 8], r14
0x00008a92      77ce           ja 0x8a62
0x00008a94      4883c408       add rsp, 8
0x00008a98      4889e8         mov rax, rbp
0x00008a9b      5b             pop rbx
0x00008a9c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x00008a9d      415c           pop r12
0x00008a9f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x00008aa1      415e           pop r14
0x00008aa3      415f           pop r15
0x00008aa5      c3             ret
0x00008aa6      31ed           xor ebp, ebp
0x00008aa8      ebea           jmp 0x8a94                              ; ../coreutils-8.31/lib/hash.c:41
0x00008aaa      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00008ab0      0fb60f         movzx ecx, byte [rdi]
0x00008ab3      31d2           xor edx, edx
0x00008ab5      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00008ab7      7424           je 0x8add
0x00008ab9      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00008ac0      4889d0         mov rax, rdx
0x00008ac3      4883c701       add rdi, 1
0x00008ac7      48c1e005       shl rax, 5
0x00008acb      4829d0         sub rax, rdx
0x00008ace      31d2           xor edx, edx
0x00008ad0      4801c8         add rax, rcx
0x00008ad3      0fb60f         movzx ecx, byte [rdi]
0x00008ad6      48f7f6         div rsi
0x00008ad9      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x00008adb      75e3           jne 0x8ac0
0x00008add      4889d0         mov rax, rdx
0x00008ae0      c3             ret
0x00008ae1      0f1f440000     nop dword [rax + rax]
0x00008ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x00008af0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x00008afa      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x00008afe      488907         mov qword [rdi], rax
0x00008b01      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x00008b0b      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x00008b0f      c3             ret
;-- hash_initialize:
0x00008b10      4157           push r15
0x00008b12      4156           push r14
0x00008b14      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x8340 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00008b1b      4155           push r13
0x00008b1d      4154           push r12
0x00008b1f      4989d4         mov r12, rdx
0x00008b22      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x00008b23      53             push rbx
0x00008b24      4989cd         mov r13, rcx
0x00008b27      4889fd         mov rbp, rdi
0x00008b2a      bf50000000     mov edi, 0x50                           ; 'P'
0x00008b2f      4989f7         mov r15, rsi
0x00008b32      4883ec08       sub rsp, 8
0x00008b36      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x00008b39      4d89c6         mov r14, r8
0x00008b3c      4c0f44e0       cmove r12, rax
0x00008b40      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x8350 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00008b47      4885c9         test rcx, rcx
0x00008b4a      4c0f44e8       cmove r13, rax
0x00008b4e      e8cd8dffff     call sym.imp.malloc
0x00008b53      4885c0         test rax, rax
0x00008b56      4889c3         mov rbx, rax
0x00008b59      0f84ab000000   je 0x8c0a
0x00008b5f      4d85ff         test r15, r15
0x00008b62      488d7828       lea rdi, [rax + 0x28]
0x00008b66      0f84b4000000   je 0x8c20
0x00008b6c      4c897828       mov qword [rax + 0x28], r15
0x00008b70      e83bf9ffff     call sym.check_tuning.isra.0
0x00008b75      84c0           test al, al
0x00008b77      0f8483000000   je 0x8c00
0x00008b7d      41807f1000     cmp byte [r15 + 0x10], 0
0x00008b82      0f84f8000000   je 0x8c80
0x00008b88      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x00008b8b      e810f7ffff     call sym.next_prime
0x00008b90      ba08000000     mov edx, 8
0x00008b95      4889c5         mov rbp, rax
0x00008b98      31c9           xor ecx, ecx
0x00008b9a      4889d0         mov rax, rdx
0x00008b9d      48f7e5         mul rbp
0x00008ba0      0f8014010000   jo 0x8cba
0x00008ba6      4885c0         test rax, rax
0x00008ba9      7855           js 0x8c00
0x00008bab      4885c9         test rcx, rcx
0x00008bae      7550           jne 0x8c00
0x00008bb0      4885ed         test rbp, rbp
0x00008bb3      48896b10       mov qword [rbx + 0x10], rbp
0x00008bb7      7447           je 0x8c00
0x00008bb9      be10000000     mov esi, 0x10
0x00008bbe      4889ef         mov rdi, rbp
0x00008bc1      e8da8cffff     call sym.imp.calloc
0x00008bc6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00008bc9      488903         mov qword [rbx], rax
0x00008bcc      7432           je 0x8c00
0x00008bce      48c1e504       shl rbp, 4
0x00008bd2      48c743180000.  mov qword [rbx + 0x18], 0
0x00008bda      48c743200000.  mov qword [rbx + 0x20], 0
0x00008be2      4801c5         add rbp, rax
0x00008be5      4c896330       mov qword [rbx + 0x30], r12
0x00008be9      4c896b38       mov qword [rbx + 0x38], r13
0x00008bed      48896b08       mov qword [rbx + 8], rbp
0x00008bf1      4c897340       mov qword [rbx + 0x40], r14
0x00008bf5      48c743480000.  mov qword [rbx + 0x48], 0
0x00008bfd      eb0b           jmp 0x8c0a
0x00008bff      90             nop
0x00008c00      4889df         mov rdi, rbx
0x00008c03      31db           xor ebx, ebx
0x00008c05      e8868effff     call sym..plt.got
0x00008c0a      4883c408       add rsp, 8
0x00008c0e      4889d8         mov rax, rbx
0x00008c11      5b             pop rbx
0x00008c12      5d             pop rbp
0x00008c13      415c           pop r12
0x00008c15      415d           pop r13
0x00008c17      415e           pop r14
0x00008c19      415f           pop r15
0x00008c1b      c3             ret
0x00008c1c      0f1f4000       nop dword [rax]
0x00008c20      488d05f92300.  lea rax, obj.default_tuning             ; 0xb020
0x00008c27      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x00008c2b      e880f8ffff     call sym.check_tuning.isra.0
0x00008c30      84c0           test al, al
0x00008c32      f30f100d0e24.  movss xmm1, dword [0x0000b048]          ; [0xb048:4]=0x3f4ccccd
0x00008c3a      74c4           je 0x8c00
0x00008c3c      4885ed         test rbp, rbp
0x00008c3f      784a           js 0x8c8b
0x00008c41      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00008c45      f3480f2ac5     cvtsi2ss xmm0, rbp
0x00008c4a      f30f5ec1       divss xmm0, xmm1
0x00008c4e      0f2e05f72300.  ucomiss xmm0, dword [0x0000b04c]
0x00008c55      73a9           jae 0x8c00
0x00008c57      0f2e05f22300.  ucomiss xmm0, dword [0x0000b050]
0x00008c5e      7250           jb 0x8cb0
0x00008c60      f30f5c05e823.  subss xmm0, dword [0x0000b050]
0x00008c68      48b800000000.  movabs rax, 0x8000000000000000
0x00008c72      f3480f2ce8     cvttss2si rbp, xmm0
0x00008c77      4831c5         xor rbp, rax
0x00008c7a      e909ffffff     jmp 0x8b88
0x00008c7f      90             nop
0x00008c80      4885ed         test rbp, rbp
0x00008c83      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00008c89      79b6           jns 0x8c41                              ; ../coreutils-8.31/lib/hash.c:-146
0x00008c8b      4889e8         mov rax, rbp
0x00008c8e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00008c92      48d1e8         shr rax, 1
0x00008c95      83e501         and ebp, 1
0x00008c98      4809e8         or rax, rbp
0x00008c9b      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008ca0      f30f58c0       addss xmm0, xmm0
0x00008ca4      eba4           jmp 0x8c4a
0x00008ca6      662e0f1f8400.  nop word cs:[rax + rax]
0x00008cb0      f3480f2ce8     cvttss2si rbp, xmm0
0x00008cb5      e9cefeffff     jmp 0x8b88
0x00008cba      b901000000     mov ecx, 1
0x00008cbf      e9e2feffff     jmp 0x8ba6
0x00008cc4      6690           nop
0x00008cc6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00008cd0      4154           push r12
0x00008cd2      55             push rbp
0x00008cd3      4889fd         mov rbp, rdi
0x00008cd6      53             push rbx
0x00008cd7      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x00008cda      4c3b6708       cmp r12, qword [rdi + 8]
0x00008cde      736b           jae 0x8d4b
0x00008ce0      49833c2400     cmp qword [r12], 0
0x00008ce5      745a           je 0x8d41
0x00008ce7      498b5c2408     mov rbx, qword [r12 + 8]
0x00008cec      488b4540       mov rax, qword [rbp + 0x40]
0x00008cf0      4885db         test rbx, rbx
0x00008cf3      7430           je 0x8d25
0x00008cf5      0f1f00         nop dword [rax]
0x00008cf8      4885c0         test rax, rax
0x00008cfb      7409           je 0x8d06
0x00008cfd      488b3b         mov rdi, qword [rbx]
0x00008d00      ffd0           call rax
0x00008d02      488b4540       mov rax, qword [rbp + 0x40]
0x00008d06      488b5308       mov rdx, qword [rbx + 8]
0x00008d0a      488b4d48       mov rcx, qword [rbp + 0x48]
0x00008d0e      48c703000000.  mov qword [rbx], 0
0x00008d15      4885d2         test rdx, rdx
0x00008d18      48894b08       mov qword [rbx + 8], rcx
0x00008d1c      48895d48       mov qword [rbp + 0x48], rbx
0x00008d20      4889d3         mov rbx, rdx
0x00008d23      75d3           jne 0x8cf8
0x00008d25      4885c0         test rax, rax
0x00008d28      7406           je 0x8d30
0x00008d2a      498b3c24       mov rdi, qword [r12]
0x00008d2e      ffd0           call rax
0x00008d30      49c704240000.  mov qword [r12], 0
0x00008d38      49c744240800.  mov qword [r12 + 8], 0
0x00008d41      4983c410       add r12, 0x10
0x00008d45      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00008d49      7795           ja 0x8ce0
0x00008d4b      48c745180000.  mov qword [rbp + 0x18], 0
0x00008d53      48c745200000.  mov qword [rbp + 0x20], 0
0x00008d5b      5b             pop rbx
0x00008d5c      5d             pop rbp
0x00008d5d      415c           pop r12
0x00008d5f      c3             ret
;-- hash_free:
0x00008d60      4154           push r12
0x00008d62      55             push rbp
0x00008d63      4989fc         mov r12, rdi
0x00008d66      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00008d67      48837f4000     cmp qword [rdi + 0x40], 0
0x00008d6c      488b2f         mov rbp, qword [rdi]
0x00008d6f      488b4708       mov rax, qword [rdi + 8]
0x00008d73      744e           je 0x8dc3                               ; ../coreutils-8.31/lib/hash.c:-305
0x00008d75      48837f2000     cmp qword [rdi + 0x20], 0
0x00008d7a      7447           je 0x8dc3
0x00008d7c      4839c5         cmp rbp, rax
0x00008d7f      737b           jae 0x8dfc
0x00008d81      0f1f80000000.  nop dword [rax]
0x00008d88      488b7d00       mov rdi, qword [rbp]
0x00008d8c      4885ff         test rdi, rdi
0x00008d8f      7425           je 0x8db6
0x00008d91      4889eb         mov rbx, rbp
0x00008d94      eb0d           jmp 0x8da3
0x00008d96      662e0f1f8400.  nop word cs:[rax + rax]
0x00008da0      488b3b         mov rdi, qword [rbx]
0x00008da3      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00008da8      488b5b08       mov rbx, qword [rbx + 8]
0x00008dac      4885db         test rbx, rbx
0x00008daf      75ef           jne 0x8da0
0x00008db1      498b442408     mov rax, qword [r12 + 8]
0x00008db6      4883c510       add rbp, 0x10
0x00008dba      4839e8         cmp rax, rbp
0x00008dbd      77c9           ja 0x8d88
0x00008dbf      498b2c24       mov rbp, qword [r12]
0x00008dc3      4839c5         cmp rbp, rax
0x00008dc6      7334           jae 0x8dfc
0x00008dc8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00008dd0      488b7d08       mov rdi, qword [rbp + 8]
0x00008dd4      4885ff         test rdi, rdi
0x00008dd7      7418           je 0x8df1
0x00008dd9      0f1f80000000.  nop dword [rax]
0x00008de0      488b5f08       mov rbx, qword [rdi + 8]
0x00008de4      e8a78cffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x00008de9      4885db         test rbx, rbx
0x00008dec      4889df         mov rdi, rbx
0x00008def      75ef           jne 0x8de0
0x00008df1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00008df5      49396c2408     cmp qword [r12 + 8], rbp
0x00008dfa      77d4           ja 0x8dd0
0x00008dfc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00008e01      4885ff         test rdi, rdi
0x00008e04      741b           je 0x8e21
0x00008e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00008e10      488b5f08       mov rbx, qword [rdi + 8]
0x00008e14      e8778cffff     call sym..plt.got
0x00008e19      4885db         test rbx, rbx
0x00008e1c      4889df         mov rdi, rbx
0x00008e1f      75ef           jne 0x8e10
0x00008e21      498b3c24       mov rdi, qword [r12]
0x00008e25      e8668cffff     call sym..plt.got
0x00008e2a      5b             pop rbx
0x00008e2b      4c89e7         mov rdi, r12
0x00008e2e      5d             pop rbp
0x00008e2f      415c           pop r12
0x00008e31      e95a8cffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00008e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00008e40      4154           push r12
0x00008e42      55             push rbp
0x00008e43      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00008e46      53             push rbx
0x00008e47      4883ec60       sub rsp, 0x60
0x00008e4b      4c8b6728       mov r12, qword [rdi + 0x28]
0x00008e4f      64488b042528.  mov rax, qword fs:[0x28]
0x00008e58      4889442458     mov qword [rsp + 0x58], rax
0x00008e5d      31c0           xor eax, eax
0x00008e5f      41807c241000   cmp byte [r12 + 0x10], 0
0x00008e65      7551           jne 0x8eb8
0x00008e67      4885f6         test rsi, rsi
0x00008e6a      0f8878010000   js 0x8fe8
0x00008e70      660fefc0       pxor xmm0, xmm0
0x00008e74      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00008e79      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00008e80      0f2e05c52100.  ucomiss xmm0, dword [0x0000b04c]
0x00008e87      0f8333010000   jae 0x8fc0
0x00008e8d      0f2e05bc2100.  ucomiss xmm0, dword [0x0000b050]
0x00008e94      0f8276010000   jb 0x9010
0x00008e9a      f30f5c05ae21.  subss xmm0, dword [0x0000b050]          ; ../coreutils-8.31/lib/hash.c:161
0x00008ea2      48b800000000.  movabs rax, 0x8000000000000000
0x00008eac      f3480f2cf0     cvttss2si rsi, xmm0
0x00008eb1      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00008eb4      0f1f4000       nop dword [rax]
0x00008eb8      4889f7         mov rdi, rsi
0x00008ebb      e8e0f3ffff     call sym.next_prime
0x00008ec0      ba08000000     mov edx, 8
0x00008ec5      4889c3         mov rbx, rax
0x00008ec8      31c9           xor ecx, ecx
0x00008eca      4889d0         mov rax, rdx
0x00008ecd      48f7e3         mul rbx
0x00008ed0      0f8099010000   jo 0x906f
0x00008ed6      4885c0         test rax, rax
0x00008ed9      b801000000     mov eax, 1
0x00008ede      480f48c8       cmovs rcx, rax
0x00008ee2      4885db         test rbx, rbx
0x00008ee5      0f84d5000000   je 0x8fc0
0x00008eeb      83e101         and ecx, 1
0x00008eee      0f85cc000000   jne 0x8fc0
0x00008ef4      48395d10       cmp qword [rbp + 0x10], rbx
0x00008ef8      0f8422010000   je 0x9020
0x00008efe      be10000000     mov esi, 0x10
0x00008f03      4889df         mov rdi, rbx
0x00008f06      e89589ffff     call sym.imp.calloc
0x00008f0b      4885c0         test rax, rax
0x00008f0e      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00008f12      0f84a8000000   je 0x8fc0
0x00008f18      48895c2410     mov qword [rsp + 0x10], rbx
0x00008f1d      48c1e304       shl rbx, 4
0x00008f21      4c89642428     mov qword [rsp + 0x28], r12
0x00008f26      4801c3         add rbx, rax
0x00008f29      488b4530       mov rax, qword [rbp + 0x30]
0x00008f2d      4989e4         mov r12, rsp
0x00008f30      31d2           xor edx, edx
0x00008f32      4889ee         mov rsi, rbp
0x00008f35      4c89e7         mov rdi, r12
0x00008f38      48895c2408     mov qword [rsp + 8], rbx
0x00008f3d      48c744241800.  mov qword [rsp + 0x18], 0
0x00008f46      4889442430     mov qword [rsp + 0x30], rax
0x00008f4b      488b4538       mov rax, qword [rbp + 0x38]
0x00008f4f      48c744242000.  mov qword [rsp + 0x20], 0
0x00008f58      4889442438     mov qword [rsp + 0x38], rax
0x00008f5d      488b4540       mov rax, qword [rbp + 0x40]
0x00008f61      4889442440     mov qword [rsp + 0x40], rax
0x00008f66      488b4548       mov rax, qword [rbp + 0x48]
0x00008f6a      4889442448     mov qword [rsp + 0x48], rax
0x00008f6f      e8bcf5ffff     call sym.transfer_entries
0x00008f74      84c0           test al, al
0x00008f76      89c3           mov ebx, eax
0x00008f78      0f85b2000000   jne 0x9030
0x00008f7e      488b442448     mov rax, qword [rsp + 0x48]
0x00008f83      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00008f88      4c89e6         mov rsi, r12
0x00008f8b      4889ef         mov rdi, rbp
0x00008f8e      48894548       mov qword [rbp + 0x48], rax
0x00008f92      e899f5ffff     call sym.transfer_entries
0x00008f97      84c0           test al, al
0x00008f99      0f84da000000   je 0x9079
0x00008f9f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x00008fa1      4c89e6         mov rsi, r12
0x00008fa4      4889ef         mov rdi, rbp
0x00008fa7      e884f5ffff     call sym.transfer_entries
0x00008fac      84c0           test al, al
0x00008fae      0f84c5000000   je 0x9079
0x00008fb4      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00008fb8      e8d38affff     call sym..plt.got
0x00008fbd      eb03           jmp 0x8fc2
0x00008fbf      90             nop
0x00008fc0      31db           xor ebx, ebx
0x00008fc2      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00008fc7      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008fd0      89d8           mov eax, ebx
0x00008fd2      0f8592000000   jne 0x906a
0x00008fd8      4883c460       add rsp, 0x60
0x00008fdc      5b             pop rbx
0x00008fdd      5d             pop rbp
0x00008fde      415c           pop r12
0x00008fe0      c3             ret
0x00008fe1      0f1f80000000.  nop dword [rax]
0x00008fe8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00008feb      660fefc0       pxor xmm0, xmm0
0x00008fef      48d1e8         shr rax, 1
0x00008ff2      83e601         and esi, 1
0x00008ff5      4809f0         or rax, rsi
0x00008ff8      f3480f2ac0     cvtsi2ss xmm0, rax
0x00008ffd      f30f58c0       addss xmm0, xmm0
0x00009001      e973feffff     jmp 0x8e79
0x00009006      662e0f1f8400.  nop word cs:[rax + rax]
0x00009010      f3480f2cf0     cvttss2si rsi, xmm0
0x00009015      e99efeffff     jmp 0x8eb8
0x0000901a      660f1f440000   nop word [rax + rax]
0x00009020      bb01000000     mov ebx, 1
0x00009025      eb9b           jmp 0x8fc2
0x00009027      660f1f840000.  nop word [rax + rax]
0x00009030      488b7d00       mov rdi, qword [rbp]
0x00009034      e8578affff     call sym..plt.got
0x00009039      488b0424       mov rax, qword [rsp]
0x0000903d      48894500       mov qword [rbp], rax
0x00009041      488b442408     mov rax, qword [rsp + 8]
0x00009046      48894508       mov qword [rbp + 8], rax
0x0000904a      488b442410     mov rax, qword [rsp + 0x10]
0x0000904f      48894510       mov qword [rbp + 0x10], rax
0x00009053      488b442418     mov rax, qword [rsp + 0x18]
0x00009058      48894518       mov qword [rbp + 0x18], rax
0x0000905c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00009061      48894548       mov qword [rbp + 0x48], rax
0x00009065      e958ffffff     jmp 0x8fc2
0x0000906a      e87187ffff     call sym.imp.__stack_chk_fail
0x0000906f      b901000000     mov ecx, 1
0x00009074      e95dfeffff     jmp 0x8ed6
0x00009079      e87286ffff     call sym.imp.abort
0x0000907e      6690           nop
;-- hash_insert_if_absent:
0x00009080      4155           push r13
0x00009082      4154           push r12
0x00009084      55             push rbp
0x00009085      53             push rbx
0x00009086      4883ec18       sub rsp, 0x18
0x0000908a      64488b042528.  mov rax, qword fs:[0x28]
0x00009093      4889442408     mov qword [rsp + 8], rax
0x00009098      31c0           xor eax, eax
0x0000909a      4885f6         test rsi, rsi
0x0000909d      0f84ba010000   je 0x925d
0x000090a3      4989e4         mov r12, rsp
0x000090a6      31c9           xor ecx, ecx
0x000090a8      4989d5         mov r13, rdx
0x000090ab      4c89e2         mov rdx, r12
0x000090ae      4889fb         mov rbx, rdi
0x000090b1      4889f5         mov rbp, rsi
0x000090b4      e8d7f2ffff     call sym.hash_find_entry
0x000090b9      4885c0         test rax, rax
0x000090bc      4889c2         mov rdx, rax
0x000090bf      742f           je 0x90f0
0x000090c1      31c0           xor eax, eax
0x000090c3      4d85ed         test r13, r13
0x000090c6      7404           je 0x90cc
0x000090c8      49895500       mov qword [r13], rdx
0x000090cc      488b4c2408     mov rcx, qword [rsp + 8]
0x000090d1      6448330c2528.  xor rcx, qword fs:[0x28]
0x000090da      0f851f020000   jne 0x92ff
0x000090e0      4883c418       add rsp, 0x18
0x000090e4      5b             pop rbx
0x000090e5      5d             pop rbp
0x000090e6      415c           pop r12
0x000090e8      415d           pop r13
0x000090ea      c3             ret
0x000090eb      0f1f440000     nop dword [rax + rax]
0x000090f0      488b4318       mov rax, qword [rbx + 0x18]
0x000090f4      4885c0         test rax, rax
0x000090f7      7877           js 0x9170
0x000090f9      660fefc9       pxor xmm1, xmm1
0x000090fd      488b5328       mov rdx, qword [rbx + 0x28]
0x00009101      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009106      488b4310       mov rax, qword [rbx + 0x10]
0x0000910a      4885c0         test rax, rax
0x0000910d      0f8887000000   js 0x919a
0x00009113      660fefc0       pxor xmm0, xmm0
0x00009117      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000911c      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00009121      0f2ec8         ucomiss xmm1, xmm0
0x00009124      0f8796000000   ja 0x91c0
0x0000912a      4c8b2424       mov r12, qword [rsp]
0x0000912e      49833c2400     cmp qword [r12], 0
0x00009133      0f842f010000   je 0x9268
0x00009139      488b4348       mov rax, qword [rbx + 0x48]
0x0000913d      4885c0         test rax, rax
0x00009140      0f843a010000   je 0x9280
0x00009146      488b5008       mov rdx, qword [rax + 8]
0x0000914a      48895348       mov qword [rbx + 0x48], rdx
0x0000914e      498b542408     mov rdx, qword [r12 + 8]
0x00009153      488928         mov qword [rax], rbp
0x00009156      48895008       mov qword [rax + 8], rdx
0x0000915a      4989442408     mov qword [r12 + 8], rax
0x0000915f      b801000000     mov eax, 1
0x00009164      4883432001     add qword [rbx + 0x20], 1
0x00009169      e95effffff     jmp 0x90cc
0x0000916e      6690           nop
0x00009170      4889c2         mov rdx, rax
0x00009173      660fefc9       pxor xmm1, xmm1
0x00009177      83e001         and eax, 1
0x0000917a      48d1ea         shr rdx, 1
0x0000917d      4809c2         or rdx, rax
0x00009180      488b4310       mov rax, qword [rbx + 0x10]
0x00009184      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00009189      488b5328       mov rdx, qword [rbx + 0x28]
0x0000918d      4885c0         test rax, rax
0x00009190      f30f58c9       addss xmm1, xmm1
0x00009194      0f8979ffffff   jns 0x9113
0x0000919a      4889c1         mov rcx, rax
0x0000919d      660fefc0       pxor xmm0, xmm0
0x000091a1      48d1e9         shr rcx, 1
0x000091a4      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x000091a7      4809c1         or rcx, rax
0x000091aa      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000091af      f30f58c0       addss xmm0, xmm0
0x000091b3      e964ffffff     jmp 0x911c
0x000091b8      0f1f84000000.  nop dword [rax + rax]
0x000091c0      488d7b28       lea rdi, [rbx + 0x28]
0x000091c4      e8e7f2ffff     call sym.check_tuning.isra.0
0x000091c9      488b4310       mov rax, qword [rbx + 0x10]
0x000091cd      488b5328       mov rdx, qword [rbx + 0x28]
0x000091d1      4885c0         test rax, rax
0x000091d4      f30f105208     movss xmm2, dword [rdx + 8]
0x000091d9      0f88c1000000   js 0x92a0
0x000091df      660fefc0       pxor xmm0, xmm0
0x000091e3      f3480f2ac0     cvtsi2ss xmm0, rax
0x000091e8      488b4318       mov rax, qword [rbx + 0x18]
0x000091ec      4885c0         test rax, rax
0x000091ef      0f88cb000000   js 0x92c0
0x000091f5      660fefc9       pxor xmm1, xmm1
0x000091f9      f3480f2ac8     cvtsi2ss xmm1, rax
0x000091fe      0f28da         movaps xmm3, xmm2
0x00009201      f30f59d8       mulss xmm3, xmm0
0x00009205      0f2ecb         ucomiss xmm1, xmm3
0x00009208      0f861cffffff   jbe 0x912a
0x0000920e      807a1000       cmp byte [rdx + 0x10], 0
0x00009212      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00009217      7504           jne 0x921d
0x00009219      f30f59c2       mulss xmm0, xmm2
0x0000921d      0f2e05281e00.  ucomiss xmm0, dword [0x0000b04c]
0x00009224      736d           jae 0x9293
0x00009226      0f2e05231e00.  ucomiss xmm0, dword [0x0000b050]
0x0000922d      0f83ad000000   jae 0x92e0
0x00009233      f3480f2cf0     cvttss2si rsi, xmm0
0x00009238      4889df         mov rdi, rbx
0x0000923b      e800fcffff     call sym.hash_rehash
0x00009240      84c0           test al, al
0x00009242      744f           je 0x9293
0x00009244      31c9           xor ecx, ecx
0x00009246      4c89e2         mov rdx, r12
0x00009249      4889ee         mov rsi, rbp
0x0000924c      4889df         mov rdi, rbx
0x0000924f      e83cf1ffff     call sym.hash_find_entry
0x00009254      4885c0         test rax, rax
0x00009257      0f84cdfeffff   je 0x912a
0x0000925d      e88e84ffff     call sym.imp.abort
0x00009262      660f1f440000   nop word [rax + rax]
0x00009268      49892c24       mov qword [r12], rbp
0x0000926c      b801000000     mov eax, 1
0x00009271      4883432001     add qword [rbx + 0x20], 1
0x00009276      4883431801     add qword [rbx + 0x18], 1
0x0000927b      e94cfeffff     jmp 0x90cc
0x00009280      bf10000000     mov edi, 0x10
0x00009285      e89686ffff     call sym.imp.malloc
0x0000928a      4885c0         test rax, rax
0x0000928d      0f85bbfeffff   jne 0x914e
0x00009293      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00009298      e92ffeffff     jmp 0x90cc
0x0000929d      0f1f00         nop dword [rax]
0x000092a0      4889c1         mov rcx, rax
0x000092a3      660fefc0       pxor xmm0, xmm0
0x000092a7      48d1e9         shr rcx, 1
0x000092aa      83e001         and eax, 1
0x000092ad      4809c1         or rcx, rax
0x000092b0      f3480f2ac1     cvtsi2ss xmm0, rcx
0x000092b5      f30f58c0       addss xmm0, xmm0
0x000092b9      e92affffff     jmp 0x91e8
0x000092be      6690           nop
0x000092c0      4889c1         mov rcx, rax
0x000092c3      660fefc9       pxor xmm1, xmm1
0x000092c7      48d1e9         shr rcx, 1
0x000092ca      83e001         and eax, 1
0x000092cd      4809c1         or rcx, rax
0x000092d0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x000092d5      f30f58c9       addss xmm1, xmm1
0x000092d9      e920ffffff     jmp 0x91fe
0x000092de      6690           nop
0x000092e0      f30f5c05681d.  subss xmm0, dword [0x0000b050]
0x000092e8      48b800000000.  movabs rax, 0x8000000000000000
0x000092f2      f3480f2cf0     cvttss2si rsi, xmm0
0x000092f7      4831c6         xor rsi, rax
0x000092fa      e939ffffff     jmp 0x9238
0x000092ff      e8dc84ffff     call sym.imp.__stack_chk_fail
0x00009304      6690           nop
0x00009306      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x00009310      53             push rbx
0x00009311      4889f3         mov rbx, rsi
0x00009314      4883ec10       sub rsp, 0x10
0x00009318      4889e2         mov rdx, rsp
0x0000931b      64488b042528.  mov rax, qword fs:[0x28]
0x00009324      4889442408     mov qword [rsp + 8], rax
0x00009329      31c0           xor eax, eax
0x0000932b      e850fdffff     call sym.hash_insert_if_absent
0x00009330      83f8ff         cmp eax, 0xffffffff
0x00009333      742b           je 0x9360
0x00009335      85c0           test eax, eax
0x00009337      7504           jne 0x933d
0x00009339      488b1c24       mov rbx, qword [rsp]
0x0000933d      488b4c2408     mov rcx, qword [rsp + 8]
0x00009342      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000934b      4889d8         mov rax, rbx
0x0000934e      7514           jne 0x9364
0x00009350      4883c410       add rsp, 0x10
0x00009354      5b             pop rbx
0x00009355      c3             ret
0x00009356      662e0f1f8400.  nop word cs:[rax + rax]
0x00009360      31db           xor ebx, ebx
0x00009362      ebd9           jmp 0x933d
0x00009364      e87784ffff     call sym.imp.__stack_chk_fail
0x00009369      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x00009370      4154           push r12
0x00009372      55             push rbp
0x00009373      b901000000     mov ecx, 1
0x00009378      53             push rbx
0x00009379      4889fb         mov rbx, rdi
0x0000937c      4883ec10       sub rsp, 0x10
0x00009380      4889e2         mov rdx, rsp
0x00009383      64488b042528.  mov rax, qword fs:[0x28]
0x0000938c      4889442408     mov qword [rsp + 8], rax
0x00009391      31c0           xor eax, eax
0x00009393      e8f8efffff     call sym.hash_find_entry
0x00009398      4885c0         test rax, rax
0x0000939b      4889c5         mov rbp, rax
0x0000939e      740f           je 0x93af
0x000093a0      488b0424       mov rax, qword [rsp]
0x000093a4      48836b2001     sub qword [rbx + 0x20], 1
0x000093a9      48833800       cmp qword [rax], 0
0x000093ad      7421           je 0x93d0
0x000093af      488b4c2408     mov rcx, qword [rsp + 8]
0x000093b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000093bd      4889e8         mov rax, rbp
0x000093c0      0f85a8010000   jne 0x956e
0x000093c6      4883c410       add rsp, 0x10
0x000093ca      5b             pop rbx
0x000093cb      5d             pop rbp
0x000093cc      415c           pop r12
0x000093ce      c3             ret
0x000093cf      90             nop
0x000093d0      488b4318       mov rax, qword [rbx + 0x18]
0x000093d4      4883e801       sub rax, 1
0x000093d8      4885c0         test rax, rax
0x000093db      48894318       mov qword [rbx + 0x18], rax
0x000093df      0f88fb000000   js 0x94e0
0x000093e5      660fefc0       pxor xmm0, xmm0
0x000093e9      f3480f2ac0     cvtsi2ss xmm0, rax
0x000093ee      488b4310       mov rax, qword [rbx + 0x10]
0x000093f2      488b5328       mov rdx, qword [rbx + 0x28]
0x000093f6      4885c0         test rax, rax
0x000093f9      0f88c1000000   js 0x94c0
0x000093ff      660fefc9       pxor xmm1, xmm1
0x00009403      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009408      f30f590a       mulss xmm1, dword [rdx]
0x0000940c      0f2ec8         ucomiss xmm1, xmm0
0x0000940f      769e           jbe 0x93af
0x00009411      488d7b28       lea rdi, [rbx + 0x28]
0x00009415      e896f0ffff     call sym.check_tuning.isra.0
0x0000941a      488b4310       mov rax, qword [rbx + 0x10]
0x0000941e      488b5328       mov rdx, qword [rbx + 0x28]
0x00009422      4885c0         test rax, rax
0x00009425      0f8825010000   js 0x9550
0x0000942b      660fefc0       pxor xmm0, xmm0
0x0000942f      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009434      488b4318       mov rax, qword [rbx + 0x18]
0x00009438      4885c0         test rax, rax
0x0000943b      0f88ef000000   js 0x9530
0x00009441      660fefc9       pxor xmm1, xmm1
0x00009445      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000944a      f30f1012       movss xmm2, dword [rdx]
0x0000944e      f30f59d0       mulss xmm2, xmm0
0x00009452      0f2ed1         ucomiss xmm2, xmm1
0x00009455      0f8654ffffff   jbe 0x93af
0x0000945b      807a1000       cmp byte [rdx + 0x10], 0
0x0000945f      f30f594204     mulss xmm0, dword [rdx + 4]
0x00009464      0f84b6000000   je 0x9520
0x0000946a      0f2e05df1b00.  ucomiss xmm0, dword [0x0000b050]
0x00009471      0f8389000000   jae 0x9500
0x00009477      f3480f2cf0     cvttss2si rsi, xmm0
0x0000947c      4889df         mov rdi, rbx
0x0000947f      e8bcf9ffff     call sym.hash_rehash
0x00009484      84c0           test al, al
0x00009486      0f8523ffffff   jne 0x93af
0x0000948c      488b7b48       mov rdi, qword [rbx + 0x48]
0x00009490      4885ff         test rdi, rdi
0x00009493      7414           je 0x94a9
0x00009495      0f1f00         nop dword [rax]
0x00009498      4c8b6708       mov r12, qword [rdi + 8]
0x0000949c      e8ef85ffff     call sym..plt.got
0x000094a1      4d85e4         test r12, r12
0x000094a4      4c89e7         mov rdi, r12
0x000094a7      75ef           jne 0x9498
0x000094a9      48c743480000.  mov qword [rbx + 0x48], 0
0x000094b1      e9f9feffff     jmp 0x93af
0x000094b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000094c0      4889c1         mov rcx, rax
0x000094c3      660fefc9       pxor xmm1, xmm1
0x000094c7      48d1e9         shr rcx, 1
0x000094ca      83e001         and eax, 1
0x000094cd      4809c1         or rcx, rax
0x000094d0      f3480f2ac9     cvtsi2ss xmm1, rcx
0x000094d5      f30f58c9       addss xmm1, xmm1
0x000094d9      e92affffff     jmp 0x9408
0x000094de      6690           nop
0x000094e0      4889c2         mov rdx, rax
0x000094e3      660fefc0       pxor xmm0, xmm0
0x000094e7      48d1ea         shr rdx, 1
0x000094ea      83e001         and eax, 1
0x000094ed      4809c2         or rdx, rax
0x000094f0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x000094f5      f30f58c0       addss xmm0, xmm0
0x000094f9      e9f0feffff     jmp 0x93ee
0x000094fe      6690           nop
0x00009500      f30f5c05481b.  subss xmm0, dword [0x0000b050]
0x00009508      48b800000000.  movabs rax, 0x8000000000000000
0x00009512      f3480f2cf0     cvttss2si rsi, xmm0
0x00009517      4831c6         xor rsi, rax
0x0000951a      e95dffffff     jmp 0x947c
0x0000951f      90             nop
0x00009520      f30f594208     mulss xmm0, dword [rdx + 8]
0x00009525      e940ffffff     jmp 0x946a
0x0000952a      660f1f440000   nop word [rax + rax]
0x00009530      4889c1         mov rcx, rax
0x00009533      660fefc9       pxor xmm1, xmm1
0x00009537      48d1e9         shr rcx, 1
0x0000953a      83e001         and eax, 1
0x0000953d      4809c1         or rcx, rax
0x00009540      f3480f2ac9     cvtsi2ss xmm1, rcx
0x00009545      f30f58c9       addss xmm1, xmm1
0x00009549      e9fcfeffff     jmp 0x944a
0x0000954e      6690           nop
0x00009550      4889c1         mov rcx, rax
0x00009553      660fefc0       pxor xmm0, xmm0
0x00009557      48d1e9         shr rcx, 1
0x0000955a      83e001         and eax, 1
0x0000955d      4809c1         or rcx, rax
0x00009560      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00009565      f30f58c0       addss xmm0, xmm0
0x00009569      e9c6feffff     jmp 0x9434
0x0000956e      e86d82ffff     call sym.imp.__stack_chk_fail
0x00009573      662e0f1f8400.  nop word cs:[rax + rax]
0x0000957d      0f1f00         nop dword [rax]
;-- i_ring_init:
0x00009580      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x00009584      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x0000958c      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x0000958e      897704         mov dword [rdi + 4], esi
0x00009591      897708         mov dword [rdi + 8], esi
0x00009594      89770c         mov dword [rdi + 0xc], esi
0x00009597      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x0000959a      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x0000959b      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x000095a0      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x000095a4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x000095a5      90             nop
0x000095a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x000095b0      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x000095b4      8b4f14         mov ecx, dword [rdi + 0x14]
0x000095b7      83f201         xor edx, 1
0x000095ba      0fb6d2         movzx edx, dl
0x000095bd      01d1           add ecx, edx
0x000095bf      83e103         and ecx, 3
0x000095c2      89c8           mov eax, ecx
0x000095c4      4c8d0487       lea r8, [rdi + rax*4]
0x000095c8      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x000095cb      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x000095ce      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x000095d1      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x000095d4      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x000095d6      7508           jne 0x95e0
0x000095d8      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x000095da      83e203         and edx, 3
0x000095dd      895718         mov dword [rdi + 0x18], edx
0x000095e0      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x000095e4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x000095e5      90             nop
0x000095e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x000095f0      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x000095f4      752f           jne 0x9625
0x000095f6      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x000095f9      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x000095fc      488d0c87       lea rcx, [rdi + rax*4]
0x00009600      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x00009603      8b01           mov eax, dword [rcx]
0x00009605      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x00009607      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x0000960a      7414           je 0x9620
0x0000960c      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x0000960f      83e203         and edx, 3
0x00009612      895714         mov dword [rdi + 0x14], edx
0x00009615      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x00009616      662e0f1f8400.  nop word cs:[rax + rax]
0x00009620      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x00009624      c3             ret
0x00009625      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x00009629      e8c280ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x0000962e      6690           nop
;-- locale_charset:
0x00009630      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00009634      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00009639      e81283ffff     call sym.imp.nl_langinfo
0x0000963e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00009641      741d           je 0x9660
0x00009643      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00009646      488d15131a00.  lea rdx, [0x0000b060]                   ; "ASCII"
0x0000964d      480f44c2       cmove rax, rdx
0x00009651      4883c408       add rsp, 8
0x00009655      c3             ret
0x00009656      662e0f1f8400.  nop word cs:[rax + rax]
0x00009660      488d05f91900.  lea rax, [0x0000b060]                   ; "ASCII"
0x00009667      4883c408       add rsp, 8
0x0000966b      c3             ret
0x0000966c      0f1f4000       nop dword [rax]
;-- openat_safer:
0x00009670      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x00009674      48894c2438     mov qword [rsp + 0x38], rcx
0x00009679      31c9           xor ecx, ecx
0x0000967b      64488b042528.  mov rax, qword fs:[0x28]
0x00009684      4889442418     mov qword [rsp + 0x18], rax
0x00009689      31c0           xor eax, eax
0x0000968b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0000968e      7528           jne 0x96b8
0x00009690      31c0           xor eax, eax
0x00009692      e83981ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x00009697      89c7           mov edi, eax
0x00009699      e8c2000000     call sym.fd_safer                       ; fcntl2.h:-82
0x0000969e      488b742418     mov rsi, qword [rsp + 0x18]
0x000096a3      644833342528.  xor rsi, qword fs:[0x28]
0x000096ac      752b           jne 0x96d9
0x000096ae      4883c458       add rsp, 0x58
0x000096b2      c3             ret
0x000096b3      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x000096b8      488d442460     lea rax, [rsp + 0x60]
0x000096bd      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x27e0 rip
0x000096c4      8b4c2438       mov ecx, dword [rsp + 0x38]
0x000096c8      4889442408     mov qword [rsp + 8], rax
0x000096cd      488d442420     lea rax, [rsp + 0x20]
0x000096d2      4889442410     mov qword [rsp + 0x10], rax
0x000096d7      ebb7           jmp 0x9690
0x000096d9      e80281ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x000096de      6690           nop
;-- opendirat:
0x000096e0      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x000096e2      4154           push r12
0x000096e4      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x000096ea      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x000096eb      53             push rbx
0x000096ec      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x000096ee      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x000096f1      4883ec08       sub rsp, 8
0x000096f5      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x000096fa      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x000096fc      7852           js 0x9750
0x000096fe      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x00009700      89c3           mov ebx, eax
0x00009702      e8f982ffff     call sym.imp.fdopendir
0x00009707      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000970a      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000970d      7419           je 0x9728                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000970f      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x00009713      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00009717      4889e8         mov rax, rbp
0x0000971a      5b             pop rbx
0x0000971b      5d             pop rbp
0x0000971c      415c           pop r12
0x0000971e      415d           pop r13
0x00009720      c3             ret
0x00009721      0f1f80000000.  nop dword [rax]
0x00009728      e8d37fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000972d      448b28         mov r13d, dword [rax]
0x00009730      4989c4         mov r12, rax
0x00009733      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x00009735      e82681ffff     call sym.imp.close
0x0000973a      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000973d      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x00009741      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x00009745      5b             pop rbx
0x00009746      5d             pop rbp
0x00009747      415c           pop r12
0x00009749      415d           pop r13
0x0000974b      c3             ret
0x0000974c      0f1f4000       nop dword [rax]
0x00009750      4883c408       add rsp, 8
0x00009754      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x00009756      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x00009757      4889e8         mov rax, rbp
0x0000975a      5d             pop rbp
0x0000975b      415c           pop r12
0x0000975d      415d           pop r13
0x0000975f      c3             ret
;-- fd_safer:
0x00009760      4155           push r13
0x00009762      4154           push r12
0x00009764      55             push rbp
0x00009765      53             push rbx
0x00009766      89fb           mov ebx, edi
0x00009768      4883ec08       sub rsp, 8
0x0000976c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000976f      7721           ja 0x9792
0x00009771      e8ca030000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x00009776      4189c4         mov r12d, eax
0x00009779      e8827fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000977e      448b28         mov r13d, dword [rax]
0x00009781      4889c5         mov rbp, rax
0x00009784      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x00009786      e8d580ffff     call sym.imp.close
0x0000978b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000978e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x00009792      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x00009796      89d8           mov eax, ebx
0x00009798      5b             pop rbx
0x00009799      5d             pop rbp
0x0000979a      415c           pop r12
0x0000979c      415d           pop r13
0x0000979e      c3             ret
0x0000979f      90             nop
;-- rpl_fclose:
0x000097a0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000097a2      55             push rbp
0x000097a3      53             push rbx
0x000097a4      4889fb         mov rbx, rdi
0x000097a7      e84481ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000097ac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000097ae      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000097b1      7854           js 0x9807                               ; ../coreutils-8.31/lib/fclose.c:66
0x000097b3      e8b881ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000097b8      85c0           test eax, eax
0x000097ba      752c           jne 0x97e8
0x000097bc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000097bf      e8dc020000     call sym.rpl_fflush
0x000097c4      85c0           test eax, eax
0x000097c6      743c           je 0x9804
0x000097c8      e8337fffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000097cd      448b20         mov r12d, dword [rax]
0x000097d0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000097d3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000097d6      e8957fffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000097db      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000097de      7530           jne 0x9810
0x000097e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000097e1      5d             pop rbp
0x000097e2      415c           pop r12
0x000097e4      c3             ret
0x000097e5      0f1f00         nop dword [rax]
0x000097e8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000097eb      e80081ffff     call sym.imp.fileno
0x000097f0      31f6           xor esi, esi
0x000097f2      ba01000000     mov edx, 1
0x000097f7      89c7           mov edi, eax
0x000097f9      e83280ffff     call sym.imp.lseek
0x000097fe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009802      75b8           jne 0x97bc
0x00009804      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00009807      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00009808      5d             pop rbp
0x00009809      415c           pop r12
0x0000980b      e9607fffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00009810      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00009814      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00009819      ebc5           jmp 0x97e0
0x0000981b      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00009820      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00009822      55             push rbp
0x00009823      89fd           mov ebp, edi
0x00009825      53             push rbx
0x00009826      4883ec50       sub rsp, 0x50
0x0000982a      64488b042528.  mov rax, qword fs:[0x28]
0x00009833      4889442418     mov qword [rsp + 0x18], rax
0x00009838      31c0           xor eax, eax
0x0000983a      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000983f      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00009841      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00009846      48894c2438     mov qword [rsp + 0x38], rcx
0x0000984b      4c89442440     mov qword [rsp + 0x40], r8
0x00009850      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00009855      488d442420     lea rax, [rsp + 0x20]
0x0000985a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000985f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00009866      4889442410     mov qword [rsp + 0x10], rax
0x0000986b      0f8401020000   je 0x9a72                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00009871      81fe06040000   cmp esi, 0x406
0x00009877      7547           jne 0x98c0
0x00009879      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000987e      833df3492000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20e278:4]=0
0x00009885      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x27e0 rip
0x0000988c      448b6010       mov r12d, dword [rax + 0x10]
0x00009890      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00009893      0f882a010000   js 0x99c3                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00009899      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000989b      be06040000     mov esi, 0x406
0x000098a0      e8ab7effff     call sym.imp.fcntl
0x000098a5      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x000098a7      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x000098a9      0f8889010000   js 0x9a38                               ; ../coreutils-8.31/lib/fcntl.c:510
0x000098af      c705bf492000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20e278:4]=0
0x000098b9      eb45           jmp 0x9900
0x000098bb      0f1f440000     nop dword [rax + rax]
0x000098c0      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x000098c3      742b           je 0x98f0
0x000098c5      7f59           jg 0x9920
0x000098c7      83fe04         cmp esi, 4
0x000098ca      0f84d0000000   je 0x99a0
0x000098d0      0f8fba000000   jg 0x9990
0x000098d6      83fe02         cmp esi, 2
0x000098d9      0f84c1000000   je 0x99a0
0x000098df      7f0f           jg 0x98f0
0x000098e1      83fe01         cmp esi, 1
0x000098e4      7562           jne 0x9948
0x000098e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000098f0      89ef           mov edi, ebp
0x000098f2      31c0           xor eax, eax
0x000098f4      e8577effff     call sym.imp.fcntl
0x000098f9      89c3           mov ebx, eax
0x000098fb      0f1f440000     nop dword [rax + rax]
0x00009900      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00009905      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000990e      89d8           mov eax, ebx
0x00009910      0f8557010000   jne 0x9a6d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00009916      4883c450       add rsp, 0x50
0x0000991a      5b             pop rbx
0x0000991b      5d             pop rbp
0x0000991c      415c           pop r12
0x0000991e      c3             ret
0x0000991f      90             nop
0x00009920      81fe07040000   cmp esi, 0x407
0x00009926      7f48           jg 0x9970
0x00009928      81fe06040000   cmp esi, 0x406
0x0000992e      7d70           jge 0x99a0
0x00009930      81fe01040000   cmp esi, 0x401
0x00009936      74b8           je 0x98f0
0x00009938      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000993e      7460           je 0x99a0
0x00009940      81fe00040000   cmp esi, 0x400
0x00009946      7458           je 0x99a0
0x00009948      8b0424         mov eax, dword [rsp]
0x0000994b      83f82f         cmp eax, 0x2f
0x0000994e      0f8736010000   ja 0x9a8a
0x00009954      4803442410     add rax, qword [rsp + 0x10]
0x00009959      488b10         mov rdx, qword [rax]
0x0000995c      89ef           mov edi, ebp
0x0000995e      31c0           xor eax, eax
0x00009960      e8eb7dffff     call sym.imp.fcntl
0x00009965      89c3           mov ebx, eax
0x00009967      eb97           jmp 0x9900
0x00009969      0f1f80000000.  nop dword [rax]
0x00009970      81fe09040000   cmp esi, 0x409
0x00009976      7428           je 0x99a0
0x00009978      0f8c72ffffff   jl 0x98f0
0x0000997e      81fe0a040000   cmp esi, 0x40a
0x00009984      75c2           jne 0x9948
0x00009986      e965ffffff     jmp 0x98f0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000998b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00009990      83fe09         cmp esi, 9
0x00009993      0f8457ffffff   je 0x98f0
0x00009999      7f05           jg 0x99a0
0x0000999b      83fe08         cmp esi, 8
0x0000999e      75a8           jne 0x9948
0x000099a0      8b0424         mov eax, dword [rsp]
0x000099a3      83f82f         cmp eax, 0x2f
0x000099a6      0f87e8000000   ja 0x9a94
0x000099ac      4803442410     add rax, qword [rsp + 0x10]
0x000099b1      8b10           mov edx, dword [rax]
0x000099b3      89ef           mov edi, ebp
0x000099b5      31c0           xor eax, eax
0x000099b7      e8947dffff     call sym.imp.fcntl
0x000099bc      89c3           mov ebx, eax
0x000099be      e93dffffff     jmp 0x9900
0x000099c3      31f6           xor esi, esi
0x000099c5      31c0           xor eax, eax
0x000099c7      e8847dffff     call sym.imp.fcntl
0x000099cc      85c0           test eax, eax
0x000099ce      89c3           mov ebx, eax
0x000099d0      0f882affffff   js 0x9900
0x000099d6      833d9b482000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e278:4]=0
0x000099dd      0f851dffffff   jne 0x9900
0x000099e3      31c0           xor eax, eax
0x000099e5      be01000000     mov esi, 1
0x000099ea      89df           mov edi, ebx
0x000099ec      e85f7dffff     call sym.imp.fcntl
0x000099f1      85c0           test eax, eax
0x000099f3      781c           js 0x9a11
0x000099f5      83c801         or eax, 1
0x000099f8      be02000000     mov esi, 2
0x000099fd      89df           mov edi, ebx
0x000099ff      89c2           mov edx, eax
0x00009a01      31c0           xor eax, eax
0x00009a03      e8487dffff     call sym.imp.fcntl
0x00009a08      83f8ff         cmp eax, 0xffffffff
0x00009a0b      0f85effeffff   jne 0x9900
0x00009a11      e8ea7cffff     call sym.imp.__errno_location
0x00009a16      448b20         mov r12d, dword [rax]
0x00009a19      4889c5         mov rbp, rax
0x00009a1c      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00009a1e      e83d7effff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00009a23      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00009a28      44896500       mov dword [rbp], r12d
0x00009a2c      e9cffeffff     jmp 0x9900
0x00009a31      0f1f80000000.  nop dword [rax]
0x00009a38      e8c37cffff     call sym.imp.__errno_location
0x00009a3d      833816         cmp dword [rax], 0x16
0x00009a40      0f8569feffff   jne 0x98af
0x00009a46      31f6           xor esi, esi
0x00009a48      31c0           xor eax, eax
0x00009a4a      4489e2         mov edx, r12d
0x00009a4d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00009a4f      e8fc7cffff     call sym.imp.fcntl
0x00009a54      85c0           test eax, eax
0x00009a56      89c3           mov ebx, eax
0x00009a58      0f88a2feffff   js 0x9900
0x00009a5e      c70510482000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20e278:4]=0
0x00009a68      e976ffffff     jmp 0x99e3
0x00009a6d      e86e7dffff     call sym.imp.__stack_chk_fail
0x00009a72      488b442410     mov rax, qword [rsp + 0x10]
0x00009a77      31f6           xor esi, esi
0x00009a79      8b5010         mov edx, dword [rax + 0x10]
0x00009a7c      31c0           xor eax, eax
0x00009a7e      e8cd7cffff     call sym.imp.fcntl
0x00009a83      89c3           mov ebx, eax
0x00009a85      e976feffff     jmp 0x9900
0x00009a8a      488b442408     mov rax, qword [rsp + 8]
0x00009a8f      e9c5feffff     jmp 0x9959
0x00009a94      488b442408     mov rax, qword [rsp + 8]
0x00009a99      e913ffffff     jmp 0x99b1
0x00009a9e      6690           nop
;-- rpl_fflush:
0x00009aa0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00009aa3      53             push rbx
0x00009aa4      4889fb         mov rbx, rdi
0x00009aa7      7411           je 0x9aba                               ; ../coreutils-8.31/lib/fflush.c:150
0x00009aa9      e8c27effff     call sym.imp.__freading
0x00009aae      85c0           test eax, eax
0x00009ab0      7408           je 0x9aba
0x00009ab2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00009ab8      750e           jne 0x9ac8
0x00009aba      4889df         mov rdi, rbx
0x00009abd      5b             pop rbx
0x00009abe      e96d7effff     jmp sym.imp.fflush
0x00009ac3      0f1f440000     nop dword [rax + rax]
0x00009ac8      4889df         mov rdi, rbx
0x00009acb      ba01000000     mov edx, 1
0x00009ad0      31f6           xor esi, esi
0x00009ad2      e809000000     call sym.rpl_fseeko
0x00009ad7      4889df         mov rdi, rbx
0x00009ada      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00009adb      e9507effff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00009ae0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00009ae4      48394710       cmp qword [rdi + 0x10], rax
0x00009ae8      7406           je 0x9af0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00009aea      e9017fffff     jmp sym.imp.fseeko
0x00009aef      90             nop
0x00009af0      488b4720       mov rax, qword [rdi + 0x20]
0x00009af4      48394728       cmp qword [rdi + 0x28], rax
0x00009af8      75f0           jne 0x9aea                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00009afa      48837f4800     cmp qword [rdi + 0x48], 0
0x00009aff      75e9           jne 0x9aea                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00009b01      4154           push r12
0x00009b03      55             push rbp
0x00009b04      4189d4         mov r12d, edx
0x00009b07      53             push rbx
0x00009b08      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00009b0b      4889fb         mov rbx, rdi
0x00009b0e      e8dd7dffff     call sym.imp.fileno
0x00009b13      4489e2         mov edx, r12d
0x00009b16      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00009b19      89c7           mov edi, eax
0x00009b1b      e8107dffff     call sym.imp.lseek
0x00009b20      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009b24      740c           je 0x9b32
0x00009b26      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00009b29      488983900000.  mov qword [rbx + 0x90], rax
0x00009b30      31c0           xor eax, eax
0x00009b32      5b             pop rbx
0x00009b33      5d             pop rbp
0x00009b34      415c           pop r12
0x00009b36      c3             ret
0x00009b37      660f1f840000.  nop word [rax + rax]
;-- dup_safer:
0x00009b40      ba03000000     mov edx, 3                              ; /istd.h:32
0x00009b45      31f6           xor esi, esi
0x00009b47      31c0           xor eax, eax
0x00009b49      e9d2fcffff     jmp sym.rpl_fcntl
0x00009b4e      6690           nop
;-- __libc_csu_init:
0x00009b50      4157           push r15
0x00009b52      4156           push r14
0x00009b54      4989d7         mov r15, rdx
0x00009b57      4155           push r13
0x00009b59      4154           push r12
0x00009b5b      4c8d25ce3e20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20da30
0x00009b62      55             push rbp
0x00009b63      488d2dce3e20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20da38
0x00009b6a      53             push rbx
0x00009b6b      4189fd         mov r13d, edi
0x00009b6e      4989f6         mov r14, rsi
0x00009b71      4c29e5         sub rbp, r12
0x00009b74      4883ec08       sub rsp, 8
0x00009b78      48c1fd03       sar rbp, 3
0x00009b7c      e8477bffff     call sym._init
0x00009b81      4885ed         test rbp, rbp
0x00009b84      7420           je 0x9ba6
0x00009b86      31db           xor ebx, ebx
0x00009b88      0f1f84000000.  nop dword [rax + rax]
0x00009b90      4c89fa         mov rdx, r15
0x00009b93      4c89f6         mov rsi, r14
0x00009b96      4489ef         mov edi, r13d
0x00009b99      41ff14dc       call qword [r12 + rbx*8]
0x00009b9d      4883c301       add rbx, 1
0x00009ba1      4839dd         cmp rbp, rbx
0x00009ba4      75ea           jne 0x9b90
0x00009ba6      4883c408       add rsp, 8
0x00009baa      5b             pop rbx
0x00009bab      5d             pop rbp
0x00009bac      415c           pop r12
0x00009bae      415d           pop r13
0x00009bb0      415e           pop r14
0x00009bb2      415f           pop r15
0x00009bb4      c3             ret
0x00009bb5      90             nop
0x00009bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00009bc0      f3c3           ret
0x00009bc2      662e0f1f8400.  nop word cs:[rax + rax]
0x00009bcc      0f1f4000       nop dword [rax]
;-- atexit:
0x00009bd0      488b15314420.  mov rdx, qword [obj.__dso_handle]       ; [0x20e008:8]=0x20e008 obj.__dso_handle
0x00009bd7      31f6           xor esi, esi
0x00009bd9      e9427effff     jmp sym.imp.__cxa_atexit
0x00009bde      0000           add byte [rax], al
