;-- section..plt:
;-- .plt:
0x000015f0      ff35fa772000   push qword [0x00208df0]                 ; [12] -r-x section size 912 named .plt
0x000015f6      ff25fc772000   jmp qword [0x00208df8]                  ; [0x208df8:8]=0
0x000015fc      0f1f4000       nop dword [rax]
;-- imp.endgrent:
0x00001600      ff25fa772000   jmp qword [reloc.endgrent]              ; [0x208e00:8]=0x1606
0x00001606      6800000000     push 0
0x0000160b      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001610      ff25f2772000   jmp qword [reloc.getenv]                ; [0x208e08:8]=0x1616
0x00001616      6801000000     push 1
0x0000161b      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001620      ff25ea772000   jmp qword [reloc.free]                  ; [0x208e10:8]=0x1626 ; "&\x16"
0x00001626      6802000000     push 2
0x0000162b      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001630      ff25e2772000   jmp qword [reloc.abort]                 ; [0x208e18:8]=0x1636 ; "6\x16"
0x00001636      6803000000     push 3
0x0000163b      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001640      ff25da772000   jmp qword [reloc.__errno_location]      ; [0x208e20:8]=0x1646 ; "F\x16"
0x00001646      6804000000     push 4
0x0000164b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001650      ff25d2772000   jmp qword [reloc.strncmp]               ; [0x208e28:8]=0x1656 ; "V\x16"
0x00001656      6805000000     push 5
0x0000165b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001660      ff25ca772000   jmp qword [reloc._exit]                 ; [0x208e30:8]=0x1666 ; "f\x16"
0x00001666      6806000000     push 6
0x0000166b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001670      ff25c2772000   jmp qword [reloc.__fpending]            ; [0x208e38:8]=0x1676 ; "v\x16"
0x00001676      6807000000     push 7
0x0000167b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001680      ff25ba772000   jmp qword [reloc.textdomain]            ; [0x208e40:8]=0x1686
0x00001686      6808000000     push 8
0x0000168b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001690      ff25b2772000   jmp qword [reloc.fclose]                ; [0x208e48:8]=0x1696
0x00001696      6809000000     push 9
0x0000169b      e950ffffff     jmp sym..plt
;-- imp.getpwuid:
0x000016a0      ff25aa772000   jmp qword [reloc.getpwuid]              ; [0x208e50:8]=0x16a6
0x000016a6      680a000000     push 0xa
0x000016ab      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000016b0      ff25a2772000   jmp qword [reloc.bindtextdomain]        ; [0x208e58:8]=0x16b6
0x000016b6      680b000000     push 0xb
0x000016bb      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000016c0      ff259a772000   jmp qword [reloc.dcgettext]             ; [0x208e60:8]=0x16c6
0x000016c6      680c000000     push 0xc
0x000016cb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000016d0      ff2592772000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e68:8]=0x16d6
0x000016d6      680d000000     push 0xd
0x000016db      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x000016e0      ff258a772000   jmp qword [reloc.strlen]                ; [0x208e70:8]=0x16e6
0x000016e6      680e000000     push 0xe
0x000016eb      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000016f0      ff2582772000   jmp qword [reloc.__stack_chk_fail]      ; [0x208e78:8]=0x16f6
0x000016f6      680f000000     push 0xf
0x000016fb      e9f0feffff     jmp sym..plt
;-- imp.getuid:
0x00001700      ff257a772000   jmp qword [reloc.getuid]                ; [0x208e80:8]=0x1706
0x00001706      6810000000     push 0x10
0x0000170b      e9e0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001710      ff2572772000   jmp qword [reloc.getopt_long]           ; [0x208e88:8]=0x1716
0x00001716      6811000000     push 0x11
0x0000171b      e9d0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001720      ff256a772000   jmp qword [reloc.mbrtowc]               ; [0x208e90:8]=0x1726 ; "&\x17"
0x00001726      6812000000     push 0x12
0x0000172b      e9c0feffff     jmp sym..plt
;-- imp.strchr:
0x00001730      ff2562772000   jmp qword [reloc.strchr]                ; [0x208e98:8]=0x1736 ; "6\x17"
0x00001736      6813000000     push 0x13
0x0000173b      e9b0feffff     jmp sym..plt
;-- imp.getgrgid:
0x00001740      ff255a772000   jmp qword [reloc.getgrgid]              ; [0x208ea0:8]=0x1746 ; "F\x17"
0x00001746      6814000000     push 0x14
0x0000174b      e9a0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001750      ff2552772000   jmp qword [reloc.__overflow]            ; [0x208ea8:8]=0x1756 ; "V\x17"
0x00001756      6815000000     push 0x15
0x0000175b      e990feffff     jmp sym..plt
;-- imp.strrchr:
0x00001760      ff254a772000   jmp qword [reloc.strrchr]               ; [0x208eb0:8]=0x1766 ; "f\x17"
0x00001766      6816000000     push 0x16
0x0000176b      e980feffff     jmp sym..plt
;-- imp.lseek:
0x00001770      ff2542772000   jmp qword [reloc.lseek]                 ; [0x208eb8:8]=0x1776 ; "v\x17"
0x00001776      6817000000     push 0x17
0x0000177b      e970feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001780      ff253a772000   jmp qword [reloc.__assert_fail]         ; [0x208ec0:8]=0x1786
0x00001786      6818000000     push 0x18
0x0000178b      e960feffff     jmp sym..plt
;-- imp.memset:
0x00001790      ff2532772000   jmp qword [reloc.memset]                ; [0x208ec8:8]=0x1796
0x00001796      6819000000     push 0x19
0x0000179b      e950feffff     jmp sym..plt
;-- imp.geteuid:
0x000017a0      ff252a772000   jmp qword [reloc.geteuid]               ; [0x208ed0:8]=0x17a6
0x000017a6      681a000000     push 0x1a
0x000017ab      e940feffff     jmp sym..plt
;-- imp.memcmp:
0x000017b0      ff2522772000   jmp qword [reloc.memcmp]                ; [0x208ed8:8]=0x17b6
0x000017b6      681b000000     push 0x1b
0x000017bb      e930feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000017c0      ff251a772000   jmp qword [reloc.fputs_unlocked]        ; [0x208ee0:8]=0x17c6
0x000017c6      681c000000     push 0x1c
0x000017cb      e920feffff     jmp sym..plt
;-- imp.calloc:
0x000017d0      ff2512772000   jmp qword [reloc.calloc]                ; [0x208ee8:8]=0x17d6
0x000017d6      681d000000     push 0x1d
0x000017db      e910feffff     jmp sym..plt
;-- imp.getpwnam:
0x000017e0      ff250a772000   jmp qword [reloc.getpwnam]              ; [0x208ef0:8]=0x17e6
0x000017e6      681e000000     push 0x1e
0x000017eb      e900feffff     jmp sym..plt
;-- imp.memcpy:
0x000017f0      ff2502772000   jmp qword [reloc.memcpy]                ; [0x208ef8:8]=0x17f6
0x000017f6      681f000000     push 0x1f
0x000017fb      e9f0fdffff     jmp sym..plt
;-- imp.getgrnam:
0x00001800      ff25fa762000   jmp qword [reloc.getgrnam]              ; [0x208f00:8]=0x1806
0x00001806      6820000000     push 0x20                               ; "@"
0x0000180b      e9e0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001810      ff25f2762000   jmp qword [reloc.fileno]                ; [0x208f08:8]=0x1816
0x00001816      6821000000     push 0x21                               ; '!'
0x0000181b      e9d0fdffff     jmp sym..plt
;-- imp.getgid:
0x00001820      ff25ea762000   jmp qword [reloc.getgid]                ; [0x208f10:8]=0x1826 ; "&\x18"
0x00001826      6822000000     push 0x22                               ; '"'
0x0000182b      e9c0fdffff     jmp sym..plt
;-- imp.getgroups:
0x00001830      ff25e2762000   jmp qword [reloc.getgroups]             ; [0x208f18:8]=0x1836 ; "6\x18"
0x00001836      6823000000     push 0x23                               ; '#'
0x0000183b      e9b0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001840      ff25da762000   jmp qword [reloc.malloc]                ; [0x208f20:8]=0x1846 ; "F\x18"
0x00001846      6824000000     push 0x24                               ; '$'
0x0000184b      e9a0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001850      ff25d2762000   jmp qword [reloc.fflush]                ; [0x208f28:8]=0x1856 ; "V\x18"
0x00001856      6825000000     push 0x25                               ; '%'
0x0000185b      e990fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001860      ff25ca762000   jmp qword [reloc.nl_langinfo]           ; [0x208f30:8]=0x1866 ; "f\x18"
0x00001866      6826000000     push 0x26                               ; '&'
0x0000186b      e980fdffff     jmp sym..plt
;-- imp.endpwent:
0x00001870      ff25c2762000   jmp qword [reloc.endpwent]              ; [0x208f38:8]=0x1876 ; "v\x18"
0x00001876      6827000000     push 0x27                               ; '''
0x0000187b      e970fdffff     jmp sym..plt
;-- imp.getegid:
0x00001880      ff25ba762000   jmp qword [reloc.getegid]               ; [0x208f40:8]=0x1886
0x00001886      6828000000     push 0x28                               ; '('
0x0000188b      e960fdffff     jmp sym..plt
;-- imp.__freading:
0x00001890      ff25b2762000   jmp qword [reloc.__freading]            ; [0x208f48:8]=0x1896
0x00001896      6829000000     push 0x29                               ; ')'
0x0000189b      e950fdffff     jmp sym..plt
;-- imp.realloc:
0x000018a0      ff25aa762000   jmp qword [reloc.realloc]               ; [0x208f50:8]=0x18a6
0x000018a6      682a000000     push 0x2a                               ; '*'
0x000018ab      e940fdffff     jmp sym..plt
;-- imp.setlocale:
0x000018b0      ff25a2762000   jmp qword [reloc.setlocale]             ; [0x208f58:8]=0x18b6
0x000018b6      682b000000     push 0x2b                               ; '+'
0x000018bb      e930fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000018c0      ff259a762000   jmp qword [reloc.__printf_chk]          ; [0x208f60:8]=0x18c6
0x000018c6      682c000000     push 0x2c                               ; ','
0x000018cb      e920fdffff     jmp sym..plt
;-- imp.error:
0x000018d0      ff2592762000   jmp qword [reloc.error]                 ; [0x208f68:8]=0x18d6
0x000018d6      682d000000     push 0x2d                               ; '-'
0x000018db      e910fdffff     jmp sym..plt
;-- imp.getgrouplist:
0x000018e0      ff258a762000   jmp qword [reloc.getgrouplist]          ; [0x208f70:8]=0x18e6
0x000018e6      682e000000     push 0x2e                               ; '.'
0x000018eb      e900fdffff     jmp sym..plt
;-- imp.fseeko:
0x000018f0      ff2582762000   jmp qword [reloc.fseeko]                ; [0x208f78:8]=0x18f6
0x000018f6      682f000000     push 0x2f                               ; '/'
0x000018fb      e9f0fcffff     jmp sym..plt
;-- imp.strtoul:
0x00001900      ff257a762000   jmp qword [reloc.strtoul]               ; [0x208f80:8]=0x1906
0x00001906      6830000000     push 0x30                               ; '0'
0x0000190b      e9e0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001910      ff2572762000   jmp qword [reloc.__cxa_atexit]          ; [0x208f88:8]=0x1916
0x00001916      6831000000     push 0x31                               ; '1'
0x0000191b      e9d0fcffff     jmp sym..plt
;-- imp.exit:
0x00001920      ff256a762000   jmp qword [reloc.exit]                  ; [0x208f90:8]=0x1926 ; "&\x19"
0x00001926      6832000000     push 0x32                               ; '2'
0x0000192b      e9c0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001930      ff2562762000   jmp qword [reloc.fwrite]                ; [0x208f98:8]=0x1936 ; "6\x19"
0x00001936      6833000000     push 0x33                               ; '3'
0x0000193b      e9b0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001940      ff255a762000   jmp qword [reloc.__fprintf_chk]         ; [0x208fa0:8]=0x1946 ; "F\x19"
0x00001946      6834000000     push 0x34                               ; '4'
0x0000194b      e9a0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001950      ff2552762000   jmp qword [reloc.mbsinit]               ; [0x208fa8:8]=0x1956 ; "V\x19"
0x00001956      6835000000     push 0x35                               ; '5'
0x0000195b      e990fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001960      ff254a762000   jmp qword [reloc.iswprint]              ; [0x208fb0:8]=0x1966 ; "f\x19"
0x00001966      6836000000     push 0x36                               ; '6'
0x0000196b      e980fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001970      ff2542762000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fb8:8]=0x1976 ; "v\x19"
0x00001976      6837000000     push 0x37                               ; '7'
0x0000197b      e970fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001980      .qword 0x90660020765a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001988      0000           add byte [rax], al
0x0000198a      0000           add byte [rax], al
0x0000198c      0000           add byte [rax], al
0x0000198e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001990      4156           push r14                                ; [14] -r-x section size 18558 named .text
0x00001992      4155           push r13
0x00001994      4154           push r12
0x00001996      55             push rbp
0x00001997      89fd           mov ebp, edi
0x00001999      53             push rbx
0x0000199a      488b3e         mov rdi, qword [rsi]
0x0000199d      4889f3         mov rbx, rsi
0x000019a0      4c8d25b97020.  lea r12, obj.longopts                   ; 0x208a60
0x000019a7      e8a4130000     call sym.set_program_name
0x000019ac      488d35765500.  lea rsi, [0x00006f29]
0x000019b3      bf06000000     mov edi, 6
0x000019b8      e8f3feffff     call sym.imp.setlocale
0x000019bd      488d35a04e00.  lea rsi, str.usr_local_share_locale     ; 0x6864 ; "/usr/local/share/locale"
0x000019c4      488d3d704e00.  lea rdi, [0x0000683b]                   ; "coreutils"
0x000019cb      e8e0fcffff     call sym.imp.bindtextdomain
0x000019d0      488d3d644e00.  lea rdi, [0x0000683b]                   ; "coreutils"
0x000019d7      e8a4fcffff     call sym.imp.textdomain
0x000019dc      488d3d6d1200.  lea rdi, sym.close_stdout               ; 0x2c50 ; "USH\x83\xec\bH\x8b=Kd "
0x000019e3      e818480000     call sym.atexit
0x000019e8      0f1f84000000.  nop dword [rax + rax]
0x000019f0      488d15a44e00.  lea rdx, str.agnruzGZ                   ; 0x689b ; "agnruzGZ"
0x000019f7      4531c0         xor r8d, r8d
0x000019fa      4c89e1         mov rcx, r12
0x000019fd      4889de         mov rsi, rbx
0x00001a00      89ef           mov edi, ebp
0x00001a02      e809fdffff     call sym.imp.getopt_long
0x00001a07      83f8ff         cmp eax, 0xffffffff
0x00001a0a      0f84f4000000   je 0x1b04
0x00001a10      83f861         cmp eax, 0x61
0x00001a13      74db           je 0x19f0
0x00001a15      7e29           jle 0x1a40
0x00001a17      83f872         cmp eax, 0x72
0x00001a1a      0f84c8000000   je 0x1ae8
0x00001a20      7f7e           jg 0x1aa0
0x00001a22      83f867         cmp eax, 0x67
0x00001a25      0f84ad000000   je 0x1ad8
0x00001a2b      83f86e         cmp eax, 0x6e
0x00001a2e      0f850c040000   jne 0x1e40
0x00001a34      c605dd762000.  mov byte [obj.use_name], 1              ; [0x209118:1]=0
0x00001a3b      ebb3           jmp 0x19f0
0x00001a3d      0f1f00         nop dword [rax]
0x00001a40      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001a45      0f84ff030000   je 0x1e4a
0x00001a4b      7f73           jg 0x1ac0
0x00001a4d      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a52      0f85e8030000   jne 0x1e40
0x00001a58      4883ec08       sub rsp, 8
0x00001a5c      488b3d457620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001a63      488b0dae7520.  mov rcx, qword [obj.Version]            ; [0x209018:8]=0x6972 str.8.31 ; "ri"
0x00001a6a      6a00           push 0
0x00001a6c      4c8d0d094e00.  lea r9, str.David_MacKenzie             ; 0x687c ; "David MacKenzie"
0x00001a73      4c8d05124e00.  lea r8, str.Arnold_Robbins              ; 0x688c ; "Arnold Robbins"
0x00001a7a      488d15b64d00.  lea rdx, str.GNU_coreutils              ; 0x6837 ; "GNU coreutils"
0x00001a81      488d35364d00.  lea rsi, [0x000067be]                   ; "id"
0x00001a88      31c0           xor eax, eax
0x00001a8a      e851390000     call sym.version_etc
0x00001a8f      31ff           xor edi, edi
0x00001a91      e88afeffff     call sym.imp.exit
0x00001a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001aa0      83f875         cmp eax, 0x75
0x00001aa3      7453           je 0x1af8
0x00001aa5      83f87a         cmp eax, 0x7a
0x00001aa8      0f8592030000   jne 0x1e40
0x00001aae      c60569762000.  mov byte [obj.opt_zero], 1              ; [0x20911e:1]=0
0x00001ab5      e936ffffff     jmp 0x19f0
0x00001aba      660f1f440000   nop word [rax + rax]
0x00001ac0      83f847         cmp eax, 0x47
0x00001ac3      0f854e030000   jne 0x1e17
0x00001ac9      c6054d762000.  mov byte [obj.just_group_list], 1       ; [0x20911d:1]=0
0x00001ad0      e91bffffff     jmp 0x19f0
0x00001ad5      0f1f00         nop dword [rax]
0x00001ad8      c6053d762000.  mov byte [obj.just_group], 1            ; [0x20911c:1]=0
0x00001adf      e90cffffff     jmp 0x19f0
0x00001ae4      0f1f4000       nop dword [rax]
0x00001ae8      c6052c762000.  mov byte [obj.use_real], 1              ; [0x20911b:1]=0
0x00001aef      e9fcfeffff     jmp 0x19f0
0x00001af4      0f1f4000       nop dword [rax]
0x00001af8      c6051b762000.  mov byte [obj.just_user], 1             ; [0x20911a:1]=0
0x00001aff      e9ecfeffff     jmp 0x19f0
0x00001b04      0fb60d117620.  movzx ecx, byte [obj.just_group]        ; [0x20911c:1]=0
0x00001b0b      0fb615087620.  movzx edx, byte [obj.just_user]         ; [0x20911a:1]=0
0x00001b12      440fb6350376.  movzx r14d, byte [obj.just_group_list]  ; [0x20911d:1]=0
0x00001b1a      4863058f7520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b0:4]=0
0x00001b21      4189d4         mov r12d, edx
0x00001b24      4189cd         mov r13d, ecx
0x00001b27      01ca           add edx, ecx
0x00001b29      410fb6ce       movzx ecx, r14b
0x00001b2d      29c5           sub ebp, eax
0x00001b2f      01ca           add edx, ecx
0x00001b31      4863ed         movsxd rbp, ebp
0x00001b34      83ea01         sub edx, 1
0x00001b37      0f8f48030000   jg 0x1e85
0x00001b3d      4489e1         mov ecx, r12d
0x00001b40      4408e9         or cl, r13b
0x00001b43      7509           jne 0x1b4e
0x00001b45      4584f6         test r14b, r14b
0x00001b48      0f8483010000   je 0x1cd1
0x00001b4e      4885ed         test rbp, rbp
0x00001b51      0f84ee000000   je 0x1c45
0x00001b57      4883fd01       cmp rbp, 1
0x00001b5b      4863d0         movsxd rdx, eax
0x00001b5e      4c8d25ab7520.  lea r12, obj.euid                       ; 0x209110
0x00001b65      0f9705ad7520.  seta byte [obj.multiple_users]
0x00001b6c      4801d5         add rbp, rdx
0x00001b6f      eb54           jmp 0x1bc5
0x00001b71      486305387520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b0:4]=0
0x00001b78      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001b7c      e8df2e0000     call sym.quote
0x00001b81      488d352c4d00.  lea rsi, str.s:_no_such_user            ; 0x68b4 ; "%s: no such user"
0x00001b88      ba05000000     mov edx, 5
0x00001b8d      31ff           xor edi, edi
0x00001b8f      4989c6         mov r14, rax
0x00001b92      e829fbffff     call sym.imp.dcgettext
0x00001b97      4989c5         mov r13, rax
0x00001b9a      e8a1faffff     call sym.imp.__errno_location
0x00001b9f      8b30           mov esi, dword [rax]
0x00001ba1      4c89f1         mov rcx, r14
0x00001ba4      4c89ea         mov rdx, r13
0x00001ba7      31ff           xor edi, edi
0x00001ba9      31c0           xor eax, eax
0x00001bab      e820fdffff     call sym.imp.error
0x00001bb0      c60559742000.  mov byte [obj.ok], 0                    ; [0x209010:1]=1
0x00001bb7      8305f2742000.  add dword [obj.optind], 1               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b0:4]=0
0x00001bbe      486305eb7420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b0:4]=0
0x00001bc5      4863d0         movsxd rdx, eax
0x00001bc8      4839ea         cmp rdx, rbp
0x00001bcb      0f83ea000000   jae 0x1cbb
0x00001bd1      488b3cd3       mov rdi, qword [rbx + rdx*8]
0x00001bd5      803f00         cmp byte [rdi], 0
0x00001bd8      749e           je 0x1b78
0x00001bda      4531c0         xor r8d, r8d
0x00001bdd      31c9           xor ecx, ecx
0x00001bdf      31d2           xor edx, edx
0x00001be1      4c89e6         mov rsi, r12
0x00001be4      e867320000     call sym.parse_user_spec
0x00001be9      4885c0         test rax, rax
0x00001bec      7583           jne 0x1b71
0x00001bee      8b3d1c752000   mov edi, dword [obj.euid]               ; [0x209110:4]=0
0x00001bf4      e8a7faffff     call sym.imp.getpwuid
0x00001bf9      4885c0         test rax, rax
0x00001bfc      4989c5         mov r13, rax
0x00001bff      0f846cffffff   je 0x1b71
0x00001c05      488b38         mov rdi, qword [rax]
0x00001c08      e8633b0000     call sym.xstrdup
0x00001c0d      4989c6         mov r14, rax
0x00001c10      418b4510       mov eax, dword [r13 + 0x10]
0x00001c14      4c89f7         mov rdi, r14
0x00001c17      8905f3742000   mov dword [obj.euid], eax               ; [0x209110:4]=0
0x00001c1d      8905f1742000   mov dword [obj.ruid], eax               ; [0x209114:4]=0
0x00001c23      418b4514       mov eax, dword [r13 + 0x14]
0x00001c27      8905db742000   mov dword [obj.egid], eax               ; [0x209108:4]=0
0x00001c2d      8905d9742000   mov dword [obj.rgid], eax               ; [0x20910c:4]=0
0x00001c33      e818040000     call sym.print_stuff
0x00001c38      4c89f7         mov rdi, r14
0x00001c3b      e8e0f9ffff     call sym.imp.free
0x00001c40      e972ffffff     jmp 0x1bb7
0x00001c45      4584e4         test r12b, r12b
0x00001c48      0f8513010000   jne 0x1d61
0x00001c4e      4509ee         or r14d, r13d
0x00001c51      e8eaf9ffff     call sym.imp.__errno_location
0x00001c56      4584f6         test r14b, r14b
0x00001c59      4889c3         mov rbx, rax
0x00001c5c      0f846e010000   je 0x1dd0
0x00001c62      e8d9f9ffff     call sym.imp.__errno_location
0x00001c67      4584ed         test r13b, r13b
0x00001c6a      4889c3         mov rbx, rax
0x00001c6d      0f8485010000   je 0x1df8
0x00001c73      e8c8f9ffff     call sym.imp.__errno_location
0x00001c78      c70000000000   mov dword [rax], 0
0x00001c7e      4889c3         mov rbx, rax
0x00001c81      e8fafbffff     call sym.imp.getegid
0x00001c86      89057c742000   mov dword [obj.egid], eax               ; [0x209108:4]=0
0x00001c8c      83c001         add eax, 1
0x00001c8f      7509           jne 0x1c9a
0x00001c91      833b00         cmp dword [rbx], 0
0x00001c94      0f857b020000   jne 0x1f15
0x00001c9a      c70300000000   mov dword [rbx], 0
0x00001ca0      e87bfbffff     call sym.imp.getgid
0x00001ca5      890561742000   mov dword [obj.rgid], eax               ; [0x20910c:4]=0
0x00001cab      83c001         add eax, 1
0x00001cae      0f84ef000000   je 0x1da3
0x00001cb4      31ff           xor edi, edi
0x00001cb6      e895030000     call sym.print_stuff
0x00001cbb      0fb6054e7320.  movzx eax, byte [obj.ok]                ; [0x209010:1]=1
0x00001cc2      5b             pop rbx
0x00001cc3      5d             pop rbp
0x00001cc4      415c           pop r12
0x00001cc6      83f001         xor eax, 1
0x00001cc9      0fb6c0         movzx eax, al
0x00001ccc      415d           pop r13
0x00001cce      415e           pop r14
0x00001cd0      c3             ret
0x00001cd1      803d43742000.  cmp byte [obj.use_real], 0              ; [0x20911b:1]=0
0x00001cd8      0f85ef010000   jne 0x1ecd
0x00001cde      803d33742000.  cmp byte [obj.use_name], 0              ; [0x209118:1]=0
0x00001ce5      0f85e2010000   jne 0x1ecd
0x00001ceb      803d2c742000.  cmp byte [obj.opt_zero], 0              ; [0x20911e:1]=0
0x00001cf2      0f85b1010000   jne 0x1ea9
0x00001cf8      4885ed         test rbp, rbp
0x00001cfb      0f8556feffff   jne 0x1b57
0x00001d01      488d3d9c4b00.  lea rdi, str.POSIXLY_CORRECT            ; 0x68a4 ; "POSIXLY_CORRECT"
0x00001d08      e803f9ffff     call sym.imp.getenv
0x00001d0d      4584e4         test r12b, r12b
0x00001d10      0f8438ffffff   je 0x1c4e
0x00001d16      e825f9ffff     call sym.imp.__errno_location
0x00001d1b      c70000000000   mov dword [rax], 0
0x00001d21      4889c3         mov rbx, rax
0x00001d24      e877faffff     call sym.imp.geteuid
0x00001d29      8905e1732000   mov dword [obj.euid], eax               ; [0x209110:4]=0
0x00001d2f      83c001         add eax, 1
0x00001d32      7580           jne 0x1cb4
0x00001d34      833b00         cmp dword [rbx], 0
0x00001d37      0f8414010000   je 0x1e51
0x00001d3d      488d35814b00.  lea rsi, str.cannot_get_effective_UID   ; 0x68c5 ; "cannot get effective UID"
0x00001d44      ba05000000     mov edx, 5
0x00001d49      31ff           xor edi, edi
0x00001d4b      e870f9ffff     call sym.imp.dcgettext
0x00001d50      8b33           mov esi, dword [rbx]
0x00001d52      4889c2         mov rdx, rax
0x00001d55      bf01000000     mov edi, 1
0x00001d5a      31c0           xor eax, eax
0x00001d5c      e86ffbffff     call sym.imp.error
0x00001d61      803db3732000.  cmp byte [obj.use_real], 0              ; [0x20911b:1]=0
0x00001d68      74ac           je 0x1d16
0x00001d6a      e8d1f8ffff     call sym.imp.__errno_location
0x00001d6f      c70000000000   mov dword [rax], 0
0x00001d75      4889c3         mov rbx, rax
0x00001d78      e883f9ffff     call sym.imp.getuid
0x00001d7d      890591732000   mov dword [obj.ruid], eax               ; [0x209114:4]=0
0x00001d83      83c001         add eax, 1
0x00001d86      0f8528ffffff   jne 0x1cb4
0x00001d8c      833b00         cmp dword [rbx], 0
0x00001d8f      0f855c010000   jne 0x1ef1
0x00001d95      4584e4         test r12b, r12b
0x00001d98      0f84d5feffff   je 0x1c73
0x00001d9e      e911ffffff     jmp 0x1cb4
0x00001da3      833b00         cmp dword [rbx], 0
0x00001da6      0f8408ffffff   je 0x1cb4
0x00001dac      488d35584b00.  lea rsi, str.cannot_get_real_GID        ; 0x690b ; "cannot get real GID"
0x00001db3      ba05000000     mov edx, 5
0x00001db8      31ff           xor edi, edi
0x00001dba      e801f9ffff     call sym.imp.dcgettext
0x00001dbf      8b33           mov esi, dword [rbx]
0x00001dc1      4889c2         mov rdx, rax
0x00001dc4      bf01000000     mov edi, 1
0x00001dc9      31c0           xor eax, eax
0x00001dcb      e800fbffff     call sym.imp.error
0x00001dd0      c70000000000   mov dword [rax], 0
0x00001dd6      e8c5f9ffff     call sym.imp.geteuid
0x00001ddb      89052f732000   mov dword [obj.euid], eax               ; [0x209110:4]=0
0x00001de1      83c001         add eax, 1
0x00001de4      0f8578feffff   jne 0x1c62
0x00001dea      833b00         cmp dword [rbx], 0
0x00001ded      0f846ffeffff   je 0x1c62
0x00001df3      e945ffffff     jmp 0x1d3d
0x00001df8      c70000000000   mov dword [rax], 0
0x00001dfe      e8fdf8ffff     call sym.imp.getuid
0x00001e03      89050b732000   mov dword [obj.ruid], eax               ; [0x209114:4]=0
0x00001e09      83c001         add eax, 1
0x00001e0c      0f8561feffff   jne 0x1c73
0x00001e12      e975ffffff     jmp 0x1d8c
0x00001e17      83f85a         cmp eax, 0x5a
0x00001e1a      7524           jne 0x1e40
0x00001e1c      488d35a54800.  lea rsi, str.context___Z__works_only_on_an_SELinux_enabled_kernel ; 0x66c8 ; "--context (-Z) works only on an SELinux-enabled kernel"
0x00001e23      ba05000000     mov edx, 5
0x00001e28      31ff           xor edi, edi
0x00001e2a      e891f8ffff     call sym.imp.dcgettext
0x00001e2f      31f6           xor esi, esi
0x00001e31      4889c2         mov rdx, rax
0x00001e34      bf01000000     mov edi, 1
0x00001e39      31c0           xor eax, eax
0x00001e3b      e890faffff     call sym.imp.error
0x00001e40      bf01000000     mov edi, 1
0x00001e45      e8a6070000     call sym.usage
0x00001e4a      31ff           xor edi, edi
0x00001e4c      e89f070000     call sym.usage
0x00001e51      803dc3722000.  cmp byte [obj.use_real], 0              ; [0x20911b:1]=0
0x00001e58      0f8456feffff   je 0x1cb4
0x00001e5e      e8ddf7ffff     call sym.imp.__errno_location
0x00001e63      c70000000000   mov dword [rax], 0
0x00001e69      4889c3         mov rbx, rax
0x00001e6c      e88ff8ffff     call sym.imp.getuid
0x00001e71      89059d722000   mov dword [obj.ruid], eax               ; [0x209114:4]=0
0x00001e77      83c001         add eax, 1
0x00001e7a      0f8515ffffff   jne 0x1d95
0x00001e80      e907ffffff     jmp 0x1d8c
0x00001e85      488d35744800.  lea rsi, str.cannot_print__only__of_more_than_one_choice ; 0x6700 ; "cannot print \"only\" of more than one choice"
0x00001e8c      ba05000000     mov edx, 5
0x00001e91      31ff           xor edi, edi
0x00001e93      e828f8ffff     call sym.imp.dcgettext
0x00001e98      31f6           xor esi, esi
0x00001e9a      4889c2         mov rdx, rax
0x00001e9d      bf01000000     mov edi, 1
0x00001ea2      31c0           xor eax, eax
0x00001ea4      e827faffff     call sym.imp.error
0x00001ea9      488d35b84800.  lea rsi, str.option___zero_not_permitted_in_default_format ; 0x6768 ; "option --zero not permitted in default format"
0x00001eb0      ba05000000     mov edx, 5
0x00001eb5      31ff           xor edi, edi
0x00001eb7      e804f8ffff     call sym.imp.dcgettext
0x00001ebc      31f6           xor esi, esi
0x00001ebe      4889c2         mov rdx, rax
0x00001ec1      bf01000000     mov edi, 1
0x00001ec6      31c0           xor eax, eax
0x00001ec8      e803faffff     call sym.imp.error
0x00001ecd      488d355c4800.  lea rsi, str.cannot_print_only_names_or_real_IDs_in_default_format ; 0x6730 ; "cannot print only names or real IDs in default format"
0x00001ed4      ba05000000     mov edx, 5
0x00001ed9      31ff           xor edi, edi
0x00001edb      e8e0f7ffff     call sym.imp.dcgettext
0x00001ee0      31f6           xor esi, esi
0x00001ee2      4889c2         mov rdx, rax
0x00001ee5      bf01000000     mov edi, 1
0x00001eea      31c0           xor eax, eax
0x00001eec      e8dff9ffff     call sym.imp.error
0x00001ef1      488d35e64900.  lea rsi, str.cannot_get_real_UID        ; 0x68de ; "cannot get real UID"
0x00001ef8      ba05000000     mov edx, 5
0x00001efd      31ff           xor edi, edi
0x00001eff      e8bcf7ffff     call sym.imp.dcgettext
0x00001f04      8b33           mov esi, dword [rbx]
0x00001f06      4889c2         mov rdx, rax
0x00001f09      bf01000000     mov edi, 1
0x00001f0e      31c0           xor eax, eax
0x00001f10      e8bbf9ffff     call sym.imp.error
0x00001f15      488d35d64900.  lea rsi, str.cannot_get_effective_GID   ; 0x68f2 ; "cannot get effective GID"
0x00001f1c      ba05000000     mov edx, 5
0x00001f21      31ff           xor edi, edi
0x00001f23      e898f7ffff     call sym.imp.dcgettext
0x00001f28      8b33           mov esi, dword [rbx]
0x00001f2a      4889c2         mov rdx, rax
0x00001f2d      bf01000000     mov edi, 1
0x00001f32      31c0           xor eax, eax
0x00001f34      e897f9ffff     call sym.imp.error
0x00001f39      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001f40      31ed           xor ebp, ebp
0x00001f42      4989d1         mov r9, rdx
0x00001f45      5e             pop rsi
0x00001f46      4889e2         mov rdx, rsp
0x00001f49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001f4d      50             push rax
0x00001f4e      54             push rsp
0x00001f4f      4c8d059a4200.  lea r8, sym.__libc_csu_fini             ; 0x61f0
0x00001f56      488d0d234200.  lea rcx, sym.__libc_csu_init            ; 0x6180 ; "AWAVI\x89\xd7AUATL\x8d%\xbe( "
0x00001f5d      488d3d2cfaff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1990 ; "AVAUATU\x89\xfdSH\x8b>H\x89\xf3L\x8d%\xb9p "
0x00001f64      ff155e702000   call qword [reloc.__libc_start_main]    ; [0x208fc8:8]=0
0x00001f6a      f4             hlt
0x00001f6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001f70      488d3d297120.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001f77      55             push rbp
0x00001f78      488d05217120.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001f7f      4839f8         cmp rax, rdi
0x00001f82      4889e5         mov rbp, rsp
0x00001f85      7419           je 0x1fa0
0x00001f87      488b05327020.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fc0:8]=0
0x00001f8e      4885c0         test rax, rax
0x00001f91      740d           je 0x1fa0
0x00001f93      5d             pop rbp
0x00001f94      ffe0           jmp rax
0x00001f96      662e0f1f8400.  nop word cs:[rax + rax]
0x00001fa0      5d             pop rbp
0x00001fa1      c3             ret
0x00001fa2      0f1f4000       nop dword [rax]
0x00001fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001fb0      488d3de97020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001fb7      488d35e27020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2090a0
0x00001fbe      55             push rbp
0x00001fbf      4829fe         sub rsi, rdi
0x00001fc2      4889e5         mov rbp, rsp
0x00001fc5      48c1fe03       sar rsi, 3
0x00001fc9      4889f0         mov rax, rsi
0x00001fcc      48c1e83f       shr rax, 0x3f
0x00001fd0      4801c6         add rsi, rax
0x00001fd3      48d1fe         sar rsi, 1
0x00001fd6      7418           je 0x1ff0
0x00001fd8      488b05f96f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208fd8:8]=0
0x00001fdf      4885c0         test rax, rax
0x00001fe2      740c           je 0x1ff0
0x00001fe4      5d             pop rbp
0x00001fe5      ffe0           jmp rax
0x00001fe7      660f1f840000.  nop word [rax + rax]
0x00001ff0      5d             pop rbp
0x00001ff1      c3             ret
0x00001ff2      0f1f4000       nop dword [rax]
0x00001ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002000      803dc1702000.  cmp byte [obj.completed.7697], 0        ; [0x2090c8:1]=0
0x00002007      752f           jne 0x2038
0x00002009      48833dcf6f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208fe0:8]=0
0x00002011      55             push rbp
0x00002012      4889e5         mov rbp, rsp
0x00002015      740c           je 0x2023
0x00002017      488b3dea6f20.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x0000201e      e85df9ffff     call sym..plt.got
0x00002023      e848ffffff     call sym.deregister_tm_clones
0x00002028      c60599702000.  mov byte [obj.completed.7697], 1        ; [0x2090c8:1]=0
0x0000202f      5d             pop rbp
0x00002030      c3             ret
0x00002031      0f1f80000000.  nop dword [rax]
0x00002038      f3c3           ret
0x0000203a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002040      55             push rbp
0x00002041      4889e5         mov rbp, rsp
0x00002044      5d             pop rbp
0x00002045      e966ffffff     jmp sym.register_tm_clones
0x0000204a      660f1f440000   nop word [rax + rax]
;-- print_stuff:
0x00002050      4156           push r14                                ; /src:433
0x00002052      4155           push r13
0x00002054      4154           push r12
0x00002056      55             push rbp
0x00002057      53             push rbx
0x00002058      4883ec10       sub rsp, 0x10
0x0000205c      64488b042528.  mov rax, qword fs:[0x28]
0x00002065      4889442408     mov qword [rsp + 8], rax
0x0000206a      31c0           xor eax, eax
0x0000206c      803da7702000.  cmp byte [obj.just_user], 0             ; /src:434 ; [0x20911a:1]=0
0x00002073      0f84af000000   je 0x2128
0x00002079      803d9b702000.  cmp byte [obj.use_real], 0              ; /src:435 ; [0x20911b:1]=0
0x00002080      8b1d8a702000   mov ebx, dword [obj.euid]               ; [0x209110:4]=0
0x00002086      7406           je 0x208e
0x00002088      8b1d86702000   mov ebx, dword [obj.ruid]               ; [0x209114:4]=0
0x0000208e      803d83702000.  cmp byte [obj.use_name], 0              ; /src:339 ; [0x209118:1]=0
0x00002095      0f85c5000000   jne 0x2160
0x0000209b      488d354e7020.  lea rsi, obj.buf.7126                   ; /src:328 ; 0x2090f0
0x000020a2      4889df         mov rdi, rbx
0x000020a5      e8560c0000     call sym.umaxtostr
0x000020aa      4889c7         mov rdi, rax
0x000020ad      488b35f46f20.  mov rsi, qword [obj.stdout]             ; /src:351 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000020b4      e807f7ffff     call sym.imp.fputs_unlocked
0x000020b9      803d5e702000.  cmp byte [obj.opt_zero], 0              ; [0x20911e:1]=0
0x000020c0      488b3de16f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000020c7      488b4728       mov rax, qword [rdi + 0x28]
0x000020cb      488b5730       mov rdx, qword [rdi + 0x30]
0x000020cf      0f84fb000000   je 0x21d0
0x000020d5      803d41702000.  cmp byte [obj.just_group_list], 0       ; [0x20911d:1]=0
0x000020dc      740d           je 0x20eb
0x000020de      803d34702000.  cmp byte [obj.multiple_users], 0        ; [0x209119:1]=0
0x000020e5      0f85f5000000   jne 0x21e0                              ; .//coreutils-8.31/lib:-21
0x000020eb      31f6           xor esi, esi
0x000020ed      4839d0         cmp rax, rdx
0x000020f0      0f8352020000   jae 0x2348
0x000020f6      488d5001       lea rdx, [rax + 1]
0x000020fa      48895728       mov qword [rdi + 0x28], rdx
0x000020fe      408830         mov byte [rax], sil
0x00002101      488b442408     mov rax, qword [rsp + 8]
0x00002106      644833042528.  xor rax, qword fs:[0x28]
0x0000210f      0f85c7040000   jne 0x25dc
0x00002115      4883c410       add rsp, 0x10
0x00002119      5b             pop rbx
0x0000211a      5d             pop rbp
0x0000211b      415c           pop r12
0x0000211d      415d           pop r13
0x0000211f      415e           pop r14
0x00002121      c3             ret
0x00002122      660f1f440000   nop word [rax + rax]
0x00002128      803ded6f2000.  cmp byte [obj.just_group], 0            ; [0x20911c:1]=0
0x0000212f      744f           je 0x2180
0x00002131      803de36f2000.  cmp byte [obj.use_real], 0              ; [0x20911b:1]=0
0x00002138      0fb635d96f20.  movzx esi, byte [obj.use_name]          ; [0x209118:1]=0
0x0000213f      8b3dc36f2000   mov edi, dword [obj.egid]               ; /src:315 ; [0x209108:4]=0
0x00002145      7406           je 0x214d
0x00002147      8b3dbf6f2000   mov edi, dword [obj.rgid]               ; [0x20910c:4]=0
0x0000214d      e82e080000     call sym.print_group
0x00002152      2005b86e2000   and byte [obj.ok], al                   ; [0x209010:1]=1
0x00002158      e95cffffff     jmp 0x20b9                              ; /src:213
0x0000215d      0f1f00         nop dword [rax]
0x00002160      89df           mov edi, ebx
0x00002162      e839f5ffff     call sym.imp.getpwuid
0x00002167      4885c0         test rax, rax
0x0000216a      0f8410030000   je 0x2480
0x00002170      488b38         mov rdi, qword [rax]
0x00002173      e935ffffff     jmp 0x20ad
0x00002178      0f1f84000000.  nop dword [rax + rax]
0x00002180      803d966f2000.  cmp byte [obj.just_group_list], 0       ; [0x20911d:1]=0
0x00002187      4889fb         mov rbx, rdi
0x0000218a      8b35846f2000   mov esi, dword [obj.ruid]               ; [0x209114:4]=0
0x00002190      0f848a000000   je 0x2220
0x00002196      4531c9         xor r9d, r9d
0x00002199      803d7e6f2000.  cmp byte [obj.opt_zero], 0              ; [0x20911e:1]=0
0x000021a0      440fb605706f.  movzx r8d, byte [obj.use_name]          ; [0x209118:1]=0
0x000021a8      8b0d5a6f2000   mov ecx, dword [obj.egid]               ; [0x209108:4]=0
0x000021ae      8b15586f2000   mov edx, dword [obj.rgid]               ; [0x20910c:4]=0
0x000021b4      410f94c1       sete r9b
0x000021b8      41c1e105       shl r9d, 5
0x000021bc      e83f080000     call sym.print_group_list
0x000021c1      2005496e2000   and byte [obj.ok], al                   ; [0x209010:1]=1
0x000021c7      e9edfeffff     jmp 0x20b9
0x000021cc      0f1f4000       nop dword [rax]
0x000021d0      be0a000000     mov esi, 0xa
0x000021d5      e913ffffff     jmp 0x20ed
0x000021da      660f1f440000   nop word [rax + rax]
0x000021e0      4839d0         cmp rax, rdx
0x000021e3      0f83e7030000   jae 0x25d0
0x000021e9      488d5001       lea rdx, [rax + 1]
0x000021ed      48895728       mov qword [rdi + 0x28], rdx
0x000021f1      c60000         mov byte [rax], 0
0x000021f4      488b3dad6e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000021fb      488b4728       mov rax, qword [rdi + 0x28]
0x000021ff      483b4730       cmp rax, qword [rdi + 0x30]
0x00002203      0f83b7030000   jae 0x25c0
0x00002209      488d5001       lea rdx, [rax + 1]
0x0000220d      48895728       mov qword [rdi + 0x28], rdx
0x00002211      c60000         mov byte [rax], 0
0x00002214      e9e8feffff     jmp 0x2101
0x00002219      0f1f80000000.  nop dword [rax]
0x00002220      89f7           mov edi, esi
0x00002222      488d35c76e20.  lea rsi, obj.buf.7126                   ; 0x2090f0
0x00002229      e8d20a0000     call sym.umaxtostr
0x0000222e      488d35704500.  lea rsi, [0x000067a5]                   ; "uid=%s"
0x00002235      4889c5         mov rbp, rax
0x00002238      31ff           xor edi, edi
0x0000223a      ba05000000     mov edx, 5
0x0000223f      e87cf4ffff     call sym.imp.dcgettext
0x00002244      4889ea         mov rdx, rbp
0x00002247      4889c6         mov rsi, rax
0x0000224a      bf01000000     mov edi, 1
0x0000224f      31c0           xor eax, eax
0x00002251      e86af6ffff     call sym.imp.__printf_chk               ; /src:60
0x00002256      8b3db86e2000   mov edi, dword [obj.ruid]               ; [0x209114:4]=0
0x0000225c      e83ff4ffff     call sym.imp.getpwuid
0x00002261      4885c0         test rax, rax
0x00002264      4889c5         mov rbp, rax
0x00002267      7416           je 0x227f
0x00002269      488b10         mov rdx, qword [rax]
0x0000226c      488d35234500.  lea rsi, str.s                          ; 0x6796 ; "(%s)"
0x00002273      bf01000000     mov edi, 1
0x00002278      31c0           xor eax, eax
0x0000227a      e841f6ffff     call sym.imp.__printf_chk
0x0000227f      8b3d876e2000   mov edi, dword [obj.rgid]               ; [0x20910c:4]=0
0x00002285      488d35446e20.  lea rsi, obj.buf.7122                   ; 0x2090d0
0x0000228c      e86f0a0000     call sym.umaxtostr
0x00002291      488d35034500.  lea rsi, str.gid__s                     ; 0x679b ; " gid=%s"
0x00002298      31ff           xor edi, edi
0x0000229a      4989c4         mov r12, rax
0x0000229d      ba05000000     mov edx, 5
0x000022a2      e819f4ffff     call sym.imp.dcgettext
0x000022a7      4c89e2         mov rdx, r12
0x000022aa      4889c6         mov rsi, rax
0x000022ad      bf01000000     mov edi, 1
0x000022b2      31c0           xor eax, eax
0x000022b4      e807f6ffff     call sym.imp.__printf_chk
0x000022b9      8b3d4d6e2000   mov edi, dword [obj.rgid]               ; [0x20910c:4]=0
0x000022bf      e87cf4ffff     call sym.imp.getgrgid
0x000022c4      4885c0         test rax, rax
0x000022c7      7416           je 0x22df
0x000022c9      488b10         mov rdx, qword [rax]
0x000022cc      488d35c34400.  lea rsi, str.s                          ; 0x6796 ; "(%s)"
0x000022d3      bf01000000     mov edi, 1
0x000022d8      31c0           xor eax, eax
0x000022da      e8e1f5ffff     call sym.imp.__printf_chk
0x000022df      8b3d2b6e2000   mov edi, dword [obj.euid]               ; [0x209110:4]=0
0x000022e5      3b3d296e2000   cmp edi, dword [obj.ruid]               ; /src:136 ; [0x209114:4]=0
0x000022eb      0f85cf000000   jne 0x23c0
0x000022f1      8b3d116e2000   mov edi, dword [obj.egid]               ; [0x209108:4]=0
0x000022f7      3b3d0f6e2000   cmp edi, dword [obj.rgid]               ; /src:141 ; [0x20910c:4]=0
0x000022fd      7559           jne 0x2358                              ; /src:152
0x000022ff      4885db         test rbx, rbx
0x00002302      4889e2         mov rdx, rsp
0x00002305      0f8425010000   je 0x2430
0x0000230b      4885ed         test rbp, rbp
0x0000230e      beffffffff     mov esi, 0xffffffff                     ; -1
0x00002313      7403           je 0x2318
0x00002315      8b7514         mov esi, dword [rbp + 0x14]
0x00002318      4889df         mov rdi, rbx
0x0000231b      e8b0340000     call sym.xgetgroups
0x00002320      85c0           test eax, eax
0x00002322      4189c4         mov r12d, eax
0x00002325      0f8855020000   js 0x2580
0x0000232b      4585e4         test r12d, r12d
0x0000232e      0f8594010000   jne 0x24c8
0x00002334      488b3c24       mov rdi, qword [rsp]
0x00002338      e8e3f2ffff     call sym.imp.free
0x0000233d      e977fdffff     jmp 0x20b9
0x00002342      660f1f440000   nop word [rax + rax]
0x00002348      e803f4ffff     call sym.imp.__overflow
0x0000234d      e9affdffff     jmp 0x2101
0x00002352      660f1f440000   nop word [rax + rax]
0x00002358      488d35716d20.  lea rsi, obj.buf.7122                   ; 0x2090d0
0x0000235f      e89c090000     call sym.umaxtostr
0x00002364      488d35414400.  lea rsi, str.egid__s                    ; 0x67ac ; " egid=%s"
0x0000236b      31ff           xor edi, edi                            ; ../coreutils-8.31/src/.c:-347
0x0000236d      4989c4         mov r12, rax
0x00002370      ba05000000     mov edx, 5
0x00002375      e846f3ffff     call sym.imp.dcgettext
0x0000237a      4c89e2         mov rdx, r12
0x0000237d      4889c6         mov rsi, rax
0x00002380      bf01000000     mov edi, 1
0x00002385      31c0           xor eax, eax
0x00002387      e834f5ffff     call sym.imp.__printf_chk
0x0000238c      8b3d766d2000   mov edi, dword [obj.egid]               ; [0x209108:4]=0
0x00002392      e8a9f3ffff     call sym.imp.getgrgid
0x00002397      4885c0         test rax, rax                           ; /src:-77
0x0000239a      0f845fffffff   je 0x22ff
0x000023a0      488b10         mov rdx, qword [rax]
0x000023a3      488d35ec4300.  lea rsi, str.s                          ; 0x6796 ; "(%s)"
0x000023aa      bf01000000     mov edi, 1
0x000023af      31c0           xor eax, eax
0x000023b1      e80af5ffff     call sym.imp.__printf_chk
0x000023b6      e944ffffff     jmp 0x22ff
0x000023bb      0f1f440000     nop dword [rax + rax]
0x000023c0      488d35296d20.  lea rsi, obj.buf.7126                   ; 0x2090f0
0x000023c7      e834090000     call sym.umaxtostr
0x000023cc      488d35d04300.  lea rsi, str.euid__s                    ; 0x67a3 ; " euid=%s"
0x000023d3      4889c5         mov rbp, rax
0x000023d6      31ff           xor edi, edi                            ; ../coreutils-8.31/src/.c:-347
0x000023d8      ba05000000     mov edx, 5
0x000023dd      e8def2ffff     call sym.imp.dcgettext
0x000023e2      4889ea         mov rdx, rbp
0x000023e5      4889c6         mov rsi, rax
0x000023e8      bf01000000     mov edi, 1
0x000023ed      31c0           xor eax, eax
0x000023ef      e8ccf4ffff     call sym.imp.__printf_chk
0x000023f4      8b3d166d2000   mov edi, dword [obj.euid]               ; [0x209110:4]=0
0x000023fa      e8a1f2ffff     call sym.imp.getpwuid
0x000023ff      4885c0         test rax, rax
0x00002402      4889c5         mov rbp, rax
0x00002405      0f84e6feffff   je 0x22f1
0x0000240b      488b10         mov rdx, qword [rax]
0x0000240e      488d35814300.  lea rsi, str.s                          ; 0x6796 ; "(%s)"
0x00002415      bf01000000     mov edi, 1
0x0000241a      31c0           xor eax, eax
0x0000241c      e89ff4ffff     call sym.imp.__printf_chk
0x00002421      e9cbfeffff     jmp 0x22f1
0x00002426      662e0f1f8400.  nop word cs:[rax + rax]
0x00002430      8b35d26c2000   mov esi, dword [obj.egid]               ; [0x209108:4]=0
0x00002436      31ff           xor edi, edi
0x00002438      e893330000     call sym.xgetgroups
0x0000243d      85c0           test eax, eax
0x0000243f      4189c4         mov r12d, eax
0x00002442      0f89e3feffff   jns 0x232b
0x00002448      488d35213e00.  lea rsi, str.failed_to_get_groups_for_the_current_process ; 0x6270 ; "failed to get groups for the current process"
0x0000244f      ba05000000     mov edx, 5
0x00002454      31ff           xor edi, edi
0x00002456      e865f2ffff     call sym.imp.dcgettext
0x0000245b      4889c3         mov rbx, rax
0x0000245e      e8ddf1ffff     call sym.imp.__errno_location
0x00002463      8b30           mov esi, dword [rax]
0x00002465      4889da         mov rdx, rbx
0x00002468      31ff           xor edi, edi
0x0000246a      31c0           xor eax, eax
0x0000246c      e85ff4ffff     call sym.imp.error
0x00002471      c605986b2000.  mov byte [obj.ok], 0                    ; [0x209010:1]=1
0x00002478      e93cfcffff     jmp 0x20b9
0x0000247d      0f1f00         nop dword [rax]
0x00002480      488d35696c20.  lea rsi, obj.buf.7126                   ; 0x2090f0
0x00002487      4889df         mov rdi, rbx
0x0000248a      e871080000     call sym.umaxtostr
0x0000248f      488d35923d00.  lea rsi, str.cannot_find_name_for_user_ID__s ; 0x6228 ; "cannot find name for user ID %s"
0x00002496      4889c5         mov rbp, rax
0x00002499      ba05000000     mov edx, 5
0x0000249e      31ff           xor edi, edi
0x000024a0      e81bf2ffff     call sym.imp.dcgettext
0x000024a5      4889e9         mov rcx, rbp
0x000024a8      4889c2         mov rdx, rax
0x000024ab      31f6           xor esi, esi
0x000024ad      31ff           xor edi, edi
0x000024af      31c0           xor eax, eax
0x000024b1      e81af4ffff     call sym.imp.error
0x000024b6      c605536b2000.  mov byte [obj.ok], 0                    ; [0x209010:1]=1
0x000024bd      e9d9fbffff     jmp 0x209b
0x000024c2      660f1f440000   nop word [rax + rax]
0x000024c8      488b1dd96b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000024cf      488d35df4200.  lea rsi, [0x000067b5]                   ; " groups="
0x000024d6      ba05000000     mov edx, 5
0x000024db      31ff           xor edi, edi
0x000024dd      31ed           xor ebp, ebp
0x000024df      4c8d2dea6b20.  lea r13, obj.buf.7122                   ; 0x2090d0
0x000024e6      e8d5f1ffff     call sym.imp.dcgettext
0x000024eb      4889de         mov rsi, rbx
0x000024ee      4889c7         mov rdi, rax
0x000024f1      31db           xor ebx, ebx
0x000024f3      e8c8f2ffff     call sym.imp.fputs_unlocked
0x000024f8      eb15           jmp 0x250f
0x000024fa      660f1f440000   nop word [rax + rax]
0x00002500      488d5001       lea rdx, [rax + 1]
0x00002504      48895728       mov qword [rdi + 0x28], rdx
0x00002508      c6002c         mov byte [rax], 0x2c                    ; ','
                                                                       ; [0x2c:1]=0
0x0000250b      4883c304       add rbx, 4
0x0000250f      488b0424       mov rax, qword [rsp]
0x00002513      4c8b358e6b20.  mov r14, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000251a      4c89ee         mov rsi, r13
0x0000251d      8b3c18         mov edi, dword [rax + rbx]
0x00002520      e8db070000     call sym.umaxtostr
0x00002525      4c89f6         mov rsi, r14
0x00002528      4889c7         mov rdi, rax
0x0000252b      e890f2ffff     call sym.imp.fputs_unlocked
0x00002530      488b0424       mov rax, qword [rsp]
0x00002534      8b3c18         mov edi, dword [rax + rbx]
0x00002537      e804f2ffff     call sym.imp.getgrgid
0x0000253c      4885c0         test rax, rax
0x0000253f      7416           je 0x2557
0x00002541      488b10         mov rdx, qword [rax]
0x00002544      488d354b4200.  lea rsi, str.s                          ; 0x6796 ; "(%s)"
0x0000254b      bf01000000     mov edi, 1
0x00002550      31c0           xor eax, eax
0x00002552      e869f3ffff     call sym.imp.__printf_chk
0x00002557      83c501         add ebp, 1
0x0000255a      4439e5         cmp ebp, r12d
0x0000255d      0f84d1fdffff   je 0x2334
0x00002563      488b3d3e6b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000256a      488b4728       mov rax, qword [rdi + 0x28]
0x0000256e      483b4730       cmp rax, qword [rdi + 0x30]
0x00002572      728c           jb 0x2500
0x00002574      be2c000000     mov esi, 0x2c                           ; ','
0x00002579      e8d2f1ffff     call sym.imp.__overflow
0x0000257e      eb8b           jmp 0x250b
0x00002580      4889df         mov rdi, rbx
0x00002583      e8d8240000     call sym.quote
0x00002588      488d35b93c00.  lea rsi, str.failed_to_get_groups_for_user__s ; 0x6248 ; "failed to get groups for user %s"
0x0000258f      31ff           xor edi, edi
0x00002591      ba05000000     mov edx, 5
0x00002596      4889c5         mov rbp, rax
0x00002599      e822f1ffff     call sym.imp.dcgettext
0x0000259e      4889c3         mov rbx, rax
0x000025a1      e89af0ffff     call sym.imp.__errno_location
0x000025a6      8b30           mov esi, dword [rax]
0x000025a8      4889e9         mov rcx, rbp
0x000025ab      4889da         mov rdx, rbx
0x000025ae      31ff           xor edi, edi
0x000025b0      31c0           xor eax, eax
0x000025b2      e819f3ffff     call sym.imp.error
0x000025b7      e9b5feffff     jmp 0x2471
0x000025bc      0f1f4000       nop dword [rax]
0x000025c0      31f6           xor esi, esi
0x000025c2      e889f1ffff     call sym.imp.__overflow
0x000025c7      e935fbffff     jmp 0x2101
0x000025cc      0f1f4000       nop dword [rax]
0x000025d0      31f6           xor esi, esi
0x000025d2      e879f1ffff     call sym.imp.__overflow
0x000025d7      e918fcffff     jmp 0x21f4
0x000025dc      e80ff1ffff     call sym.imp.__stack_chk_fail
0x000025e1      0f1f440000     nop dword [rax + rax]
0x000025e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x000025f0      4155           push r13
0x000025f2      4154           push r12
0x000025f4      ba05000000     mov edx, 5
0x000025f9      55             push rbp
0x000025fa      53             push rbx
0x000025fb      89fd           mov ebp, edi
0x000025fd      4881ec880000.  sub rsp, 0x88
0x00002604      488b1d3d6b20.  mov rbx, qword [obj.program_name]       ; [0x209148:8]=0
0x0000260b      64488b042528.  mov rax, qword fs:[0x28]
0x00002614      4889442478     mov qword [rsp + 0x78], rax
0x00002619      31c0           xor eax, eax
0x0000261b      85ff           test edi, edi
0x0000261d      742e           je 0x264d
0x0000261f      488d357a3c00.  lea rsi, str.Try___s___help__for_more_information. ; 0x62a0 ; "Try '%s --help' for more information.\n"
0x00002626      31ff           xor edi, edi
0x00002628      e893f0ffff     call sym.imp.dcgettext
0x0000262d      488b3d8c6a20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002634      4889c2         mov rdx, rax
0x00002637      4889d9         mov rcx, rbx
0x0000263a      be01000000     mov esi, 1
0x0000263f      31c0           xor eax, eax
0x00002641      e8faf2ffff     call sym.imp.__fprintf_chk
0x00002646      89ef           mov edi, ebp
0x00002648      e8d3f2ffff     call sym.imp.exit
0x0000264d      488d35743c00.  lea rsi, str.Usage:__s__OPTION_...__USER_... ; 0x62c8 ; "Usage: %s [OPTION]... [USER]...\n"
0x00002654      31ff           xor edi, edi
0x00002656      e865f0ffff     call sym.imp.dcgettext
0x0000265b      4889da         mov rdx, rbx
0x0000265e      4889c6         mov rsi, rax
0x00002661      bf01000000     mov edi, 1
0x00002666      31c0           xor eax, eax
0x00002668      e853f2ffff     call sym.imp.__printf_chk
0x0000266d      488b1d346a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002674      488d35753c00.  lea rsi, str.Print_user_and_group_information_for_each_specified_USER___or__when_USER_omitted__for_the_current_user. ; 0x62f0 ; "Print user and group information for each specified USER,\nor (when USER omitted) for the current user.\n\n"
0x0000267b      ba05000000     mov edx, 5
0x00002680      31ff           xor edi, edi
0x00002682      e839f0ffff     call sym.imp.dcgettext
0x00002687      4889de         mov rsi, rbx
0x0000268a      4889c7         mov rdi, rax
0x0000268d      e82ef1ffff     call sym.imp.fputs_unlocked
0x00002692      488b1d0f6a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002699      488d35c03c00.  lea rsi, str.a_____________ignore__for_compatibility_with_other_versions_____Z____context__print_only_the_security_context_of_the_process_____g____group____print_only_the_effective_group_ID_____G____groups___print_all_group_IDs_____n____name_____print_a_name_instead_of_a_number__for__ugG_____r____real_____print_the_real_ID_instead_of_the_effective_ID__with__ugG_____u____user_____print_only_the_effective_user_ID_____z____zero_____delimit_entries_with_NUL_characters__not_whitespace______________________not_permitted_in_default_format ; 0x6360 ; "  -a             ignore, for compatibility with other versions\n  -Z, --context  print only the security context of the process\n  -g, --group    print only the effective group ID\n  -G, --groups   print all group IDs\n  -n, --name     print a name instead of a number, for -ugG\n  -r, --real     print the real ID instead of the effective ID, with -ugG\n  -u, --user     print only the effective user ID\n  -z, --zero     delimit entries with NUL characters, not whitespace;\n                   not permitted in default format\n"
0x000026a0      ba05000000     mov edx, 5
0x000026a5      31ff           xor edi, edi
0x000026a7      e814f0ffff     call sym.imp.dcgettext
0x000026ac      4889de         mov rsi, rbx
0x000026af      4889c7         mov rdi, rax
0x000026b2      e809f1ffff     call sym.imp.fputs_unlocked
0x000026b7      488b1dea6920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000026be      488d35ab3e00.  lea rsi, str.help_____display_this_help_and_exit ; 0x6570 ; "      --help     display this help and exit\n"
0x000026c5      ba05000000     mov edx, 5
0x000026ca      31ff           xor edi, edi
0x000026cc      e8efefffff     call sym.imp.dcgettext
0x000026d1      4889de         mov rsi, rbx
0x000026d4      4889c7         mov rdi, rax
0x000026d7      e8e4f0ffff     call sym.imp.fputs_unlocked
0x000026dc      488b1dc56920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000026e3      488d35b63e00.  lea rsi, str.version__output_version_information_and_exit ; 0x65a0 ; "      --version  output version information and exit\n"
0x000026ea      ba05000000     mov edx, 5
0x000026ef      31ff           xor edi, edi
0x000026f1      e8caefffff     call sym.imp.dcgettext
0x000026f6      4889de         mov rsi, rbx
0x000026f9      4889c7         mov rdi, rax
0x000026fc      e8bff0ffff     call sym.imp.fputs_unlocked
0x00002701      488b1da06920.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002708      488d35c93e00.  lea rsi, str.Without_any_OPTION__print_some_useful_set_of_identified_information. ; 0x65d8 ; "\nWithout any OPTION, print some useful set of identified information.\n"
0x0000270f      ba05000000     mov edx, 5
0x00002714      31ff           xor edi, edi
0x00002716      e8a5efffff     call sym.imp.dcgettext
0x0000271b      4889de         mov rsi, rbx
0x0000271e      4889c7         mov rdi, rax
0x00002721      488d1d964000.  lea rbx, [0x000067be]                   ; "id"
0x00002728      e893f0ffff     call sym.imp.fputs_unlocked
0x0000272d      488d058d4000.  lea rax, [0x000067c1]                   ; "["
0x00002734      488d0dc74000.  lea rcx, str.sha256sum                  ; 0x6802 ; "sha256sum"
0x0000273b      48c744246000.  mov qword [rsp + 0x60], 0
0x00002744      48c744246800.  mov qword [rsp + 0x68], 0
0x0000274d      4889e2         mov rdx, rsp
0x00002750      48890424       mov qword [rsp], rax
0x00002754      488d05684000.  lea rax, [0x000067c3]                   ; "test invocation"
0x0000275b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002760      488d0da54000.  lea rcx, str.sha384sum                  ; 0x680c ; "sha384sum"
0x00002767      4889442408     mov qword [rsp + 8], rax
0x0000276c      488d05c84000.  lea rax, [0x0000683b]                   ; "coreutils"
0x00002773      48894c2440     mov qword [rsp + 0x40], rcx
0x00002778      488d0d974000.  lea rcx, str.sha512sum                  ; 0x6816 ; "sha512sum"
0x0000277f      4889442410     mov qword [rsp + 0x10], rax
0x00002784      488d05484000.  lea rax, [0x000067d3]                   ; "Multi-call invocation"
0x0000278b      48894c2450     mov qword [rsp + 0x50], rcx
0x00002790      4889442418     mov qword [rsp + 0x18], rax
0x00002795      488d054d4000.  lea rax, str.sha224sum                  ; 0x67e9 ; "sha224sum"
0x0000279c      4889442420     mov qword [rsp + 0x20], rax
0x000027a1      488d054b4000.  lea rax, str.sha2_utilities             ; 0x67f3 ; "sha2 utilities"
0x000027a8      4889442428     mov qword [rsp + 0x28], rax
0x000027ad      4889442438     mov qword [rsp + 0x38], rax
0x000027b2      4889442448     mov qword [rsp + 0x48], rax
0x000027b7      4889442458     mov qword [rsp + 0x58], rax
0x000027bc      0f1f4000       nop dword [rax]
0x000027c0      4883c210       add rdx, 0x10
0x000027c4      488b3a         mov rdi, qword [rdx]
0x000027c7      4885ff         test rdi, rdi
0x000027ca      7413           je 0x27df
0x000027cc      b903000000     mov ecx, 3
0x000027d1      4889de         mov rsi, rbx
0x000027d4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000027d6      0f97c0         seta al
0x000027d9      1c00           sbb al, 0
0x000027db      84c0           test al, al
0x000027dd      75e1           jne 0x27c0
0x000027df      4c8b6208       mov r12, qword [rdx + 8]
0x000027e3      31ff           xor edi, edi
0x000027e5      ba05000000     mov edx, 5
0x000027ea      488d352f4000.  lea rsi, str.s_online_help:___s         ; 0x6820 ; "\n%s online help: <%s>\n"
0x000027f1      4d85e4         test r12, r12
0x000027f4      0f84c1000000   je 0x28bb
0x000027fa      e8c1eeffff     call sym.imp.dcgettext
0x000027ff      488d0d1a3e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6620 ; "https://www.gnu.org/software/coreutils/"
0x00002806      488d152a4000.  lea rdx, str.GNU_coreutils              ; 0x6837 ; "GNU coreutils"
0x0000280d      4889c6         mov rsi, rax
0x00002810      bf01000000     mov edi, 1
0x00002815      31c0           xor eax, eax
0x00002817      e8a4f0ffff     call sym.imp.__printf_chk
0x0000281c      31f6           xor esi, esi
0x0000281e      bf05000000     mov edi, 5
0x00002823      e888f0ffff     call sym.imp.setlocale
0x00002828      4885c0         test rax, rax
0x0000282b      741c           je 0x2849
0x0000282d      488d35114000.  lea rsi, [0x00006845]                   ; "en_"
0x00002834      ba03000000     mov edx, 3
0x00002839      4889c7         mov rdi, rax
0x0000283c      e80feeffff     call sym.imp.strncmp
0x00002841      85c0           test eax, eax
0x00002843      0f8507010000   jne 0x2950
0x00002849      488d35f93f00.  lea rsi, str.Full_documentation___s_s   ; 0x6849 ; "Full documentation <%s%s>\n"
0x00002850      31ff           xor edi, edi
0x00002852      ba05000000     mov edx, 5
0x00002857      e864eeffff     call sym.imp.dcgettext
0x0000285c      488d0d5b3f00.  lea rcx, [0x000067be]                   ; "id"
0x00002863      488d15b63d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6620 ; "https://www.gnu.org/software/coreutils/"
0x0000286a      4889c6         mov rsi, rax
0x0000286d      bf01000000     mov edi, 1
0x00002872      31c0           xor eax, eax
0x00002874      e847f0ffff     call sym.imp.__printf_chk
0x00002879      4939dc         cmp r12, rbx
0x0000287c      488d0d5a3f00.  lea rcx, [0x000067dd]                   ; " invocation"
0x00002883      488d1d9f4600.  lea rbx, [0x00006f29]
0x0000288a      480f44d9       cmove rbx, rcx
0x0000288e      488d35fb3d00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6690 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002895      31ff           xor edi, edi
0x00002897      ba05000000     mov edx, 5
0x0000289c      e81feeffff     call sym.imp.dcgettext
0x000028a1      4889d9         mov rcx, rbx
0x000028a4      4889c6         mov rsi, rax
0x000028a7      4c89e2         mov rdx, r12
0x000028aa      bf01000000     mov edi, 1
0x000028af      31c0           xor eax, eax
0x000028b1      e80af0ffff     call sym.imp.__printf_chk
0x000028b6      e98bfdffff     jmp 0x2646
0x000028bb      e800eeffff     call sym.imp.dcgettext
0x000028c0      488d0d593d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6620 ; "https://www.gnu.org/software/coreutils/"
0x000028c7      488d15693f00.  lea rdx, str.GNU_coreutils              ; 0x6837 ; "GNU coreutils"
0x000028ce      4889c6         mov rsi, rax
0x000028d1      bf01000000     mov edi, 1
0x000028d6      31c0           xor eax, eax
0x000028d8      e8e3efffff     call sym.imp.__printf_chk
0x000028dd      31f6           xor esi, esi
0x000028df      bf05000000     mov edi, 5
0x000028e4      e8c7efffff     call sym.imp.setlocale
0x000028e9      4885c0         test rax, rax
0x000028ec      7418           je 0x2906
0x000028ee      488d35503f00.  lea rsi, [0x00006845]                   ; "en_"
0x000028f5      ba03000000     mov edx, 3
0x000028fa      4889c7         mov rdi, rax
0x000028fd      e84eedffff     call sym.imp.strncmp
0x00002902      85c0           test eax, eax
0x00002904      7543           jne 0x2949
0x00002906      488d353c3f00.  lea rsi, str.Full_documentation___s_s   ; 0x6849 ; "Full documentation <%s%s>\n"
0x0000290d      ba05000000     mov edx, 5
0x00002912      31ff           xor edi, edi
0x00002914      4c8d25a33e00.  lea r12, [0x000067be]                   ; "id"
0x0000291b      488d1dbb3e00.  lea rbx, [0x000067dd]                   ; " invocation"
0x00002922      e899edffff     call sym.imp.dcgettext
0x00002927      488d0d903e00.  lea rcx, [0x000067be]                   ; "id"
0x0000292e      488d15eb3c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6620 ; "https://www.gnu.org/software/coreutils/"
0x00002935      4889c6         mov rsi, rax
0x00002938      bf01000000     mov edi, 1
0x0000293d      31c0           xor eax, eax
0x0000293f      e87cefffff     call sym.imp.__printf_chk
0x00002944      e945ffffff     jmp 0x288e
0x00002949      4c8d256e3e00.  lea r12, [0x000067be]                   ; "id"
0x00002950      4c8b2d516720.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002957      488d35ea3c00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6648 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000295e      31ff           xor edi, edi
0x00002960      ba05000000     mov edx, 5
0x00002965      e856edffff     call sym.imp.dcgettext
0x0000296a      4c89ee         mov rsi, r13
0x0000296d      4889c7         mov rdi, rax
0x00002970      e84beeffff     call sym.imp.fputs_unlocked
0x00002975      e9cffeffff     jmp 0x2849
0x0000297a      660f1f440000   nop word [rax + rax]
;-- print_group:
0x00002980      55             push rbp
0x00002981      53             push rbx
0x00002982      89fd           mov ebp, edi
0x00002984      bb01000000     mov ebx, 1
0x00002989      4883ec08       sub rsp, 8
0x0000298d      4084f6         test sil, sil
0x00002990      743e           je 0x29d0
0x00002992      89ef           mov edi, ebp
0x00002994      89f3           mov ebx, esi
0x00002996      e8a5edffff     call sym.imp.getgrgid
0x0000299b      4885c0         test rax, rax
0x0000299e      7408           je 0x29a8
0x000029a0      488b38         mov rdi, qword [rax]
0x000029a3      eb3d           jmp 0x29e2
0x000029a5      0f1f00         nop dword [rax]
0x000029a8      488d35a13f00.  lea rsi, str.cannot_find_name_for_group_ID__lu ; 0x6950 ; "cannot find name for group ID %lu"
0x000029af      ba05000000     mov edx, 5
0x000029b4      31ff           xor edi, edi
0x000029b6      31db           xor ebx, ebx
0x000029b8      e803edffff     call sym.imp.dcgettext
0x000029bd      4889e9         mov rcx, rbp
0x000029c0      4889c2         mov rdx, rax
0x000029c3      31f6           xor esi, esi
0x000029c5      31ff           xor edi, edi
0x000029c7      31c0           xor eax, eax
0x000029c9      e802efffff     call sym.imp.error
0x000029ce      6690           nop
0x000029d0      488d35496720.  lea rsi, obj.buf.6964                   ; 0x209120
0x000029d7      4889ef         mov rdi, rbp
0x000029da      e821030000     call sym.umaxtostr
0x000029df      4889c7         mov rdi, rax
0x000029e2      488b35bf6620.  mov rsi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000029e9      e8d2edffff     call sym.imp.fputs_unlocked
0x000029ee      4883c408       add rsp, 8
0x000029f2      89d8           mov eax, ebx
0x000029f4      5b             pop rbx
0x000029f5      5d             pop rbp
0x000029f6      c3             ret
0x000029f7      660f1f840000.  nop word [rax + rax]
;-- print_group_list:
0x00002a00      4157           push r15
0x00002a02      4156           push r14
0x00002a04      4989fe         mov r14, rdi
0x00002a07      4155           push r13
0x00002a09      4154           push r12
0x00002a0b      4589c5         mov r13d, r8d
0x00002a0e      55             push rbp
0x00002a0f      53             push rbx
0x00002a10      89d5           mov ebp, edx
0x00002a12      4189cc         mov r12d, ecx
0x00002a15      4883ec28       sub rsp, 0x28
0x00002a19      64488b042528.  mov rax, qword fs:[0x28]
0x00002a22      4889442418     mov qword [rsp + 0x18], rax
0x00002a27      31c0           xor eax, eax
0x00002a29      4885ff         test rdi, rdi
0x00002a2c      44884c2407     mov byte [rsp + 7], r9b
0x00002a31      0f8449010000   je 0x2b80
0x00002a37      89f7           mov edi, esi
0x00002a39      44894c240c     mov dword [rsp + 0xc], r9d
0x00002a3e      e85decffff     call sym.imp.getpwuid
0x00002a43      448b4c240c     mov r9d, dword [rsp + 0xc]
0x00002a48      4885c0         test rax, rax
0x00002a4b      4989c7         mov r15, rax
0x00002a4e      0f95442408     setne byte [rsp + 8]
0x00002a53      450fb6ed       movzx r13d, r13b
0x00002a57      89ef           mov edi, ebp
0x00002a59      44894c240c     mov dword [rsp + 0xc], r9d
0x00002a5e      4489ee         mov esi, r13d
0x00002a61      e81affffff     call sym.print_group
0x00002a66      89c3           mov ebx, eax
0x00002a68      84c0           test al, al
0x00002a6a      0fb6442408     movzx eax, byte [rsp + 8]
0x00002a6f      0f44c3         cmove eax, ebx
0x00002a72      4439e5         cmp ebp, r12d
0x00002a75      89c3           mov ebx, eax
0x00002a77      743a           je 0x2ab3
0x00002a79      488b3d286620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002a80      448b4c240c     mov r9d, dword [rsp + 0xc]
0x00002a85      488b4728       mov rax, qword [rdi + 0x28]
0x00002a89      483b4730       cmp rax, qword [rdi + 0x30]
0x00002a8d      0f837d010000   jae 0x2c10
0x00002a93      488d5001       lea rdx, [rax + 1]
0x00002a97      48895728       mov qword [rdi + 0x28], rdx
0x00002a9b      448808         mov byte [rax], r9b
0x00002a9e      4489ee         mov esi, r13d
0x00002aa1      4489e7         mov edi, r12d
0x00002aa4      e8d7feffff     call sym.print_group
0x00002aa9      84c0           test al, al
0x00002aab      b800000000     mov eax, 0
0x00002ab0      0f44d8         cmove ebx, eax
0x00002ab3      4d85ff         test r15, r15
0x00002ab6      4489e6         mov esi, r12d
0x00002ab9      7404           je 0x2abf
0x00002abb      418b7714       mov esi, dword [r15 + 0x14]
0x00002abf      488d542410     lea rdx, [rsp + 0x10]
0x00002ac4      4c89f7         mov rdi, r14
0x00002ac7      e8042d0000     call sym.xgetgroups
0x00002acc      85c0           test eax, eax
0x00002ace      0f88bc000000   js 0x2b90
0x00002ad4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002ad9      7473           je 0x2b4e
0x00002adb      83e801         sub eax, 1
0x00002ade      4531ff         xor r15d, r15d
0x00002ae1      4c8d34850400.  lea r14, [rax*4 + 4]
0x00002ae9      0fb6442407     movzx eax, byte [rsp + 7]
0x00002aee      89442408       mov dword [rsp + 8], eax
0x00002af2      660f1f440000   nop word [rax + rax]
0x00002af8      428b043f       mov eax, dword [rdi + r15]
0x00002afc      39e8           cmp eax, ebp
0x00002afe      7445           je 0x2b45
0x00002b00      4439e0         cmp eax, r12d
0x00002b03      7440           je 0x2b45
0x00002b05      488b3d9c6520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002b0c      488b4728       mov rax, qword [rdi + 0x28]
0x00002b10      483b4730       cmp rax, qword [rdi + 0x30]
0x00002b14      0f83b6000000   jae 0x2bd0
0x00002b1a      488d4801       lea rcx, [rax + 1]
0x00002b1e      48894f28       mov qword [rdi + 0x28], rcx
0x00002b22      0fb64c2407     movzx ecx, byte [rsp + 7]
0x00002b27      8808           mov byte [rax], cl
0x00002b29      488b442410     mov rax, qword [rsp + 0x10]
0x00002b2e      4489ee         mov esi, r13d
0x00002b31      428b3c38       mov edi, dword [rax + r15]
0x00002b35      e846feffff     call sym.print_group
0x00002b3a      84c0           test al, al
0x00002b3c      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b41      7502           jne 0x2b45
0x00002b43      31db           xor ebx, ebx
0x00002b45      4983c704       add r15, 4
0x00002b49      4d39fe         cmp r14, r15
0x00002b4c      75aa           jne 0x2af8
0x00002b4e      e8cdeaffff     call sym.imp.free
0x00002b53      488b542418     mov rdx, qword [rsp + 0x18]
0x00002b58      644833142528.  xor rdx, qword fs:[0x28]
0x00002b61      89d8           mov eax, ebx
0x00002b63      0f85b5000000   jne 0x2c1e
0x00002b69      4883c428       add rsp, 0x28
0x00002b6d      5b             pop rbx
0x00002b6e      5d             pop rbp
0x00002b6f      415c           pop r12
0x00002b71      415d           pop r13
0x00002b73      415e           pop r14
0x00002b75      415f           pop r15
0x00002b77      c3             ret
0x00002b78      0f1f84000000.  nop dword [rax + rax]
0x00002b80      4531ff         xor r15d, r15d
0x00002b83      c644240801     mov byte [rsp + 8], 1
0x00002b88      e9c6feffff     jmp 0x2a53
0x00002b8d      0f1f00         nop dword [rax]
0x00002b90      e8abeaffff     call sym.imp.__errno_location
0x00002b95      4d85f6         test r14, r14
0x00002b98      4889c3         mov rbx, rax
0x00002b9b      7443           je 0x2be0
0x00002b9d      4c89f7         mov rdi, r14
0x00002ba0      e8bb1e0000     call sym.quote
0x00002ba5      488d359c3600.  lea rsi, str.failed_to_get_groups_for_user__s ; 0x6248 ; "failed to get groups for user %s"
0x00002bac      ba05000000     mov edx, 5
0x00002bb1      31ff           xor edi, edi
0x00002bb3      4889c5         mov rbp, rax
0x00002bb6      e805ebffff     call sym.imp.dcgettext
0x00002bbb      8b33           mov esi, dword [rbx]
0x00002bbd      4889c2         mov rdx, rax
0x00002bc0      4889e9         mov rcx, rbp
0x00002bc3      31ff           xor edi, edi
0x00002bc5      31c0           xor eax, eax
0x00002bc7      31db           xor ebx, ebx
0x00002bc9      e802edffff     call sym.imp.error
0x00002bce      eb83           jmp 0x2b53
0x00002bd0      8b742408       mov esi, dword [rsp + 8]
0x00002bd4      e877ebffff     call sym.imp.__overflow
0x00002bd9      e94bffffff     jmp 0x2b29
0x00002bde      6690           nop
0x00002be0      488d35893600.  lea rsi, str.failed_to_get_groups_for_the_current_process ; 0x6270 ; "failed to get groups for the current process"
0x00002be7      ba05000000     mov edx, 5
0x00002bec      31ff           xor edi, edi
0x00002bee      e8cdeaffff     call sym.imp.dcgettext
0x00002bf3      8b33           mov esi, dword [rbx]
0x00002bf5      4889c2         mov rdx, rax
0x00002bf8      31ff           xor edi, edi
0x00002bfa      31c0           xor eax, eax
0x00002bfc      31db           xor ebx, ebx
0x00002bfe      e8cdecffff     call sym.imp.error
0x00002c03      e94bffffff     jmp 0x2b53
0x00002c08      0f1f84000000.  nop dword [rax + rax]
0x00002c10      410fb6f1       movzx esi, r9b
0x00002c14      e837ebffff     call sym.imp.__overflow
0x00002c19      e980feffff     jmp 0x2a9e
0x00002c1e      e8cdeaffff     call sym.imp.__stack_chk_fail
0x00002c23      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c2d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00002c30      48893d096520.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x209140:8]=0
0x00002c37      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002c38      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002c40      40883df16420.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x209138:1]=0
0x00002c47      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002c48      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002c50      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002c51      53             push rbx
0x00002c52      4883ec08       sub rsp, 8
0x00002c56      488b3d4b6420.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002c5d      e84e300000     call sym.close_stream
0x00002c62      85c0           test eax, eax
0x00002c64      7416           je 0x2c7c
0x00002c66      e8d5e9ffff     call sym.imp.__errno_location
0x00002c6b      803dc6642000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x209138:1]=0
0x00002c72      4889c3         mov rbx, rax
0x00002c75      741c           je 0x2c93
0x00002c77      833820         cmp dword [rax], 0x20
0x00002c7a      7517           jne 0x2c93
0x00002c7c      488b3d3d6420.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002c83      e828300000     call sym.close_stream
0x00002c88      85c0           test eax, eax
0x00002c8a      7546           jne 0x2cd2
0x00002c8c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002c90      5b             pop rbx
0x00002c91      5d             pop rbp
0x00002c92      c3             ret
0x00002c93      488d35dd3c00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x6977 ; "write error"
0x00002c9a      31ff           xor edi, edi
0x00002c9c      ba05000000     mov edx, 5
0x00002ca1      e81aeaffff     call sym.imp.dcgettext
0x00002ca6      488b3d936420.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x209140:8]=0
0x00002cad      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002cb0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002cb3      7428           je 0x2cdd
0x00002cb5      e8a61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002cba      8b33           mov esi, dword [rbx]
0x00002cbc      488d15c03c00.  lea rdx, str.s:__s                      ; 0x6983 ; "%s: %s"
0x00002cc3      4889c1         mov rcx, rax
0x00002cc6      4989e8         mov r8, rbp
0x00002cc9      31ff           xor edi, edi
0x00002ccb      31c0           xor eax, eax
0x00002ccd      e8feebffff     call sym.imp.error
0x00002cd2      8b3d48632000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209020:4]=1
0x00002cd8      e883e9ffff     call sym.imp._exit
0x00002cdd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002cdf      488d15a13c00.  lea rdx, [0x00006987]                   ; "%s"
0x00002ce6      4889c1         mov rcx, rax
0x00002ce9      31ff           xor edi, edi
0x00002ceb      31c0           xor eax, eax
0x00002ced      e8deebffff     call sym.imp.error
0x00002cf2      ebde           jmp 0x2cd2
0x00002cf4      662e0f1f8400.  nop word cs:[rax + rax]
0x00002cfe      6690           nop
;-- umaxtostr:
0x00002d00      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00002d04      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00002d08      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00002d12      660f1f440000   nop word [rax + rax]
0x00002d18      4889f8         mov rax, rdi
0x00002d1b      4883e901       sub rcx, 1
0x00002d1f      48f7e6         mul rsi
0x00002d22      48c1ea03       shr rdx, 3
0x00002d26      488d0492       lea rax, [rdx + rdx*4]
0x00002d2a      4801c0         add rax, rax
0x00002d2d      4829c7         sub rdi, rax
0x00002d30      83c730         add edi, 0x30
0x00002d33      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00002d36      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00002d39      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00002d3c      75da           jne 0x2d18
0x00002d3e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00002d41      c3             ret
0x00002d42      662e0f1f8400.  nop word cs:[rax + rax]
0x00002d4c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002d50      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002d53      53             push rbx
0x00002d54      7477           je 0x2dcd                               ; ../coreutils-8.31/lib/progname.c:51
0x00002d56      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002d5b      4889fb         mov rbx, rdi
0x00002d5e      e8fde9ffff     call sym.imp.strrchr
0x00002d63      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002d66      7455           je 0x2dbd
0x00002d68      4c8d4001       lea r8, [rax + 1]
0x00002d6c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002d6f      4829da         sub rdx, rbx
0x00002d72      4883fa06       cmp rdx, 6
0x00002d76      7e45           jle 0x2dbd
0x00002d78      488d70fa       lea rsi, [rax - 6]
0x00002d7c      488d3d453c00.  lea rdi, str..libs                      ; 0x69c8 ; "/.libs/"
0x00002d83      b907000000     mov ecx, 7
0x00002d88      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d8a      0f97c2         seta dl
0x00002d8d      80da00         sbb dl, 0
0x00002d90      84d2           test dl, dl
0x00002d92      7529           jne 0x2dbd
0x00002d94      488d3d353c00.  lea rdi, [0x000069d0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002d9b      b903000000     mov ecx, 3
0x00002da0      4c89c6         mov rsi, r8
0x00002da3      4c89c3         mov rbx, r8
0x00002da6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002da8      0f97c2         seta dl
0x00002dab      80da00         sbb dl, 0
0x00002dae      84d2           test dl, dl
0x00002db0      750b           jne 0x2dbd
0x00002db2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002db6      48891de36220.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x00002dbd      48891d846320.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x209148:8]=0
0x00002dc4      48891ded6220.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090b8:8]=0
0x00002dcb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002dcc      c3             ret
0x00002dcd      488b0dec6220.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x00002dd4      488d3db53b00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6990 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002ddb      ba37000000     mov edx, 0x37                           ; '7'
0x00002de0      be01000000     mov esi, 1
0x00002de5      e846ebffff     call sym.imp.fwrite
0x00002dea      e841e8ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002def      90             nop
;-- gettext_quote.part.1:
0x00002df0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002df1      53             push rbx
0x00002df2      4889fd         mov rbp, rdi
0x00002df5      89f3           mov ebx, esi
0x00002df7      4883ec08       sub rsp, 8
0x00002dfb      e8902f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002e00      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002e03      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e06      80fa55         cmp dl, 0x55
0x00002e09      7475           je 0x2e80
0x00002e0b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002e0e      7420           je 0x2e30
0x00002e10      488d05cc3b00.  lea rax, str.l______l                   ; 0x69e3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002e17      488d15c73b00.  lea rdx, [0x000069e5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002e1e      83fb09         cmp ebx, 9
0x00002e21      480f45c2       cmovne rax, rdx
0x00002e25      4883c408       add rsp, 8
0x00002e29      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002e2a      5d             pop rbp
0x00002e2b      c3             ret
0x00002e2c      0f1f4000       nop dword [rax]
0x00002e30      0fb65001       movzx edx, byte [rax + 1]
0x00002e34      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e37      80fa42         cmp dl, 0x42
0x00002e3a      75d4           jne 0x2e10
0x00002e3c      80780231       cmp byte [rax + 2], 0x31
0x00002e40      75ce           jne 0x2e10
0x00002e42      80780338       cmp byte [rax + 3], 0x38
0x00002e46      75c8           jne 0x2e10
0x00002e48      80780430       cmp byte [rax + 4], 0x30
0x00002e4c      75c2           jne 0x2e10
0x00002e4e      80780533       cmp byte [rax + 5], 0x33
0x00002e52      75bc           jne 0x2e10
0x00002e54      80780630       cmp byte [rax + 6], 0x30
0x00002e58      75b6           jne 0x2e10
0x00002e5a      80780700       cmp byte [rax + 7], 0
0x00002e5e      75b0           jne 0x2e10
0x00002e60      807d0060       cmp byte [rbp], 0x60
0x00002e64      488d05713b00.  lea rax, [0x000069dc]
0x00002e6b      488d156e3b00.  lea rdx, [0x000069e0]
0x00002e72      480f45c2       cmovne rax, rdx
0x00002e76      4883c408       add rsp, 8
0x00002e7a      5b             pop rbx
0x00002e7b      5d             pop rbp
0x00002e7c      c3             ret
0x00002e7d      0f1f00         nop dword [rax]
0x00002e80      0fb65001       movzx edx, byte [rax + 1]
0x00002e84      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e87      80fa54         cmp dl, 0x54
0x00002e8a      7584           jne 0x2e10
0x00002e8c      0fb65002       movzx edx, byte [rax + 2]
0x00002e90      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002e93      80fa46         cmp dl, 0x46
0x00002e96      0f8574ffffff   jne 0x2e10
0x00002e9c      8078032d       cmp byte [rax + 3], 0x2d
0x00002ea0      0f856affffff   jne 0x2e10
0x00002ea6      80780438       cmp byte [rax + 4], 0x38
0x00002eaa      0f8560ffffff   jne 0x2e10
0x00002eb0      80780500       cmp byte [rax + 5], 0
0x00002eb4      0f8556ffffff   jne 0x2e10
0x00002eba      807d0060       cmp byte [rbp], 0x60
0x00002ebe      488d050f3b00.  lea rax, [0x000069d4]                   ; "\u2018"
0x00002ec5      488d150c3b00.  lea rdx, [0x000069d8]                   ; "\u2019"
0x00002ecc      480f45c2       cmovne rax, rdx
0x00002ed0      4883c408       add rsp, 8
0x00002ed4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002ed5      5d             pop rbp
0x00002ed6      c3             ret
0x00002ed7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002ee0      4157           push r15
0x00002ee2      4156           push r14
0x00002ee4      4589c7         mov r15d, r8d
0x00002ee7      4155           push r13
0x00002ee9      4154           push r12
0x00002eeb      4989fe         mov r14, rdi
0x00002eee      55             push rbp
0x00002eef      53             push rbx
0x00002ef0      4489cb         mov ebx, r9d
0x00002ef3      4989f5         mov r13, rsi
0x00002ef6      4889cd         mov rbp, rcx
0x00002ef9      83e302         and ebx, 2
0x00002efc      4881ecb80000.  sub rsp, 0xb8
0x00002f03      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002f0b      4889542410     mov qword [rsp + 0x10], rdx
0x00002f10      4489442408     mov dword [rsp + 8], r8d
0x00002f15      44894c2478     mov dword [rsp + 0x78], r9d
0x00002f1a      4889442420     mov qword [rsp + 0x20], rax
0x00002f1f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002f27      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002f2c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002f34      4889442460     mov qword [rsp + 0x60], rax
0x00002f39      64488b042528.  mov rax, qword fs:[0x28]
0x00002f42      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002f4a      31c0           xor eax, eax
0x00002f4c      e87fe7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002f51      4183ff0a       cmp r15d, 0xa
0x00002f55      4889442458     mov qword [rsp + 0x58], rax
0x00002f5a      0f87af110000   ja 0x410f
0x00002f60      488d0dd93a00.  lea rcx, [0x00006a40]
0x00002f67      4489fa         mov edx, r15d
0x00002f6a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f6e      4801c8         add rax, rcx
0x00002f71      ffe0           jmp rax
0x00002f73      c644240e01     mov byte [rsp + 0xe], 1
0x00002f78      c644247c00     mov byte [rsp + 0x7c], 0
0x00002f7d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002f80      48c744245000.  mov qword [rsp + 0x50], 0
0x00002f89      c644240f01     mov byte [rsp + 0xf], 1
0x00002f8e      c644240d00     mov byte [rsp + 0xd], 0
0x00002f93      488d054b3a00.  lea rax, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002f9a      48c744241801.  mov qword [rsp + 0x18], 1
0x00002fa3      4531ff         xor r15d, r15d
0x00002fa6      c74424080200.  mov dword [rsp + 8], 2
0x00002fae      4889442448     mov qword [rsp + 0x48], rax
0x00002fb3      4531db         xor r11d, r11d
0x00002fb6      4889e8         mov rax, rbp
0x00002fb9      4589e0         mov r8d, r12d
0x00002fbc      4c89dd         mov rbp, r11
0x00002fbf      4989c3         mov r11, rax
0x00002fc2      660f1f440000   nop word [rax + rax]
0x00002fc8      4939eb         cmp r11, rbp
0x00002fcb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002fcf      4983fbff       cmp r11, 0xffffffffffffffff
0x00002fd3      750d           jne 0x2fe2
0x00002fd5      488b442410     mov rax, qword [rsp + 0x10]
0x00002fda      803c2800       cmp byte [rax + rbp], 0
0x00002fde      410f95c4       setne r12b
0x00002fe2      4584e4         test r12b, r12b
0x00002fe5      0f8455060000   je 0x3640
0x00002feb      837c240802     cmp dword [rsp + 8], 2
0x00002ff0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002ff5      4c8d0c2f       lea r9, [rdi + rbp]
0x00002ff9      0f95c0         setne al
0x00002ffc      2244240d       and al, byte [rsp + 0xd]
0x00003000      4189c2         mov r10d, eax
0x00003003      0f84a7000000   je 0x30b0
0x00003009      488b442418     mov rax, qword [rsp + 0x18]
0x0000300e      4885c0         test rax, rax
0x00003011      0f8429040000   je 0x3440
0x00003017      4983fbff       cmp r11, 0xffffffffffffffff
0x0000301b      488d5c0500     lea rbx, [rbp + rax]
0x00003020      752e           jne 0x3050
0x00003022      4883f801       cmp rax, 1
0x00003026      7628           jbe 0x3050
0x00003028      4488442438     mov byte [rsp + 0x38], r8b
0x0000302d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003032      4c894c2428     mov qword [rsp + 0x28], r9
0x00003037      e8a4e6ffff     call sym.imp.strlen
0x0000303c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003042      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003048      4989c3         mov r11, rax
0x0000304b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003050      4c39db         cmp rbx, r11
0x00003053      4488542428     mov byte [rsp + 0x28], r10b
0x00003058      0f87b2050000   ja 0x3610
0x0000305e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003063      488b742448     mov rsi, qword [rsp + 0x48]
0x00003068      4c89cf         mov rdi, r9
0x0000306b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003070      4488442438     mov byte [rsp + 0x38], r8b
0x00003075      4c894c2430     mov qword [rsp + 0x30], r9
0x0000307a      e831e7ffff     call sym.imp.memcmp
0x0000307f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003081      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003086      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000308c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003091      0f8579050000   jne 0x3610
0x00003097      807c240f00     cmp byte [rsp + 0xf], 0
0x0000309c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000030a2      0f857d0f0000   jne 0x4025
0x000030a8      0f1f84000000.  nop dword [rax + rax]
0x000030b0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000030b4      80fb7e         cmp bl, 0x7e
0x000030b7      0f871b030000   ja 0x33d8
0x000030bd      488d0da83900.  lea rcx, [0x00006a6c]
0x000030c4      0fb6d3         movzx edx, bl
0x000030c7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000030cb      4801c8         add rax, rcx
0x000030ce      ffe0           jmp rax
0x000030d0      4531d2         xor r10d, r10d
0x000030d3      4983fb01       cmp r11, 1
0x000030d7      0f95c0         setne al
0x000030da      4983fbff       cmp r11, 0xffffffffffffffff
0x000030de      750c           jne 0x30ec
0x000030e0      488b442410     mov rax, qword [rsp + 0x10]
0x000030e5      80780100       cmp byte [rax + 1], 0
0x000030e9      0f95c0         setne al
0x000030ec      837c240802     cmp dword [rsp + 8], 2
0x000030f1      0f94c2         sete dl
0x000030f4      84c0           test al, al
0x000030f6      0f844c020000   je 0x3348
0x000030fc      4531e4         xor r12d, r12d
0x000030ff      31c0           xor eax, eax
0x00003101      0f1f80000000.  nop dword [rax]
0x00003108      807c240d01     cmp byte [rsp + 0xd], 1
0x0000310d      0f850f010000   jne 0x3222
0x00003113      84d2           test dl, dl
0x00003115      0f8507010000   jne 0x3222
0x0000311b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003120      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003123      7414           je 0x3139
0x00003125      89da           mov edx, ebx
0x00003127      c0ea05         shr dl, 5
0x0000312a      0fb6d2         movzx edx, dl
0x0000312d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003130      0fa3da         bt edx, ebx
0x00003133      0f824a010000   jb 0x3283
0x00003139      4584d2         test r10b, r10b
0x0000313c      0f8541010000   jne 0x3283
0x00003142      83f001         xor eax, 1
0x00003145      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003149      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000314c      84c0           test al, al
0x0000314e      7420           je 0x3170                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003150      4d39fd         cmp r13, r15
0x00003153      7605           jbe 0x315a
0x00003155      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000315a      498d4701       lea rax, [r15 + 1]
0x0000315e      4939c5         cmp r13, rax
0x00003161      7606           jbe 0x3169
0x00003163      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003169      4983c702       add r15, 2
0x0000316d      4531c0         xor r8d, r8d
0x00003170      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003173      7304           jae 0x3179                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003175      43881c3e       mov byte [r14 + r15], bl
0x00003179      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000317e      4983c701       add r15, 1
0x00003182      b800000000     mov eax, 0
0x00003187      4584e4         test r12b, r12b
0x0000318a      0f44f8         cmove edi, eax
0x0000318d      40887c240e     mov byte [rsp + 0xe], dil
0x00003192      e931feffff     jmp 0x2fc8
0x00003197      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000031a0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000031a3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000031a7      83f802         cmp eax, 2
0x000031aa      0f84b8050000   je 0x3768
0x000031b0      83f805         cmp eax, 5
0x000031b3      0f846f050000   je 0x3728
0x000031b9      83f802         cmp eax, 2
0x000031bc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000031c1      0f94c2         sete dl
0x000031c4      4531e4         xor r12d, r12d
0x000031c7      31c0           xor eax, eax
0x000031c9      e93affffff     jmp 0x3108
0x000031ce      6690           nop
0x000031d0      4531d2         xor r10d, r10d
0x000031d3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000031d8      0f8402050000   je 0x36e0
0x000031de      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000031e3      31d2           xor edx, edx
0x000031e5      31c0           xor eax, eax
0x000031e7      bb27000000     mov ebx, 0x27                           ; '''
0x000031ec      e917ffffff     jmp 0x3108
0x000031f1      0f1f80000000.  nop dword [rax]
0x000031f8      ba09000000     mov edx, 9
0x000031fd      bb74000000     mov ebx, 0x74                           ; 't'
0x00003202      837c240802     cmp dword [rsp + 8], 2
0x00003207      0f94c0         sete al
0x0000320a      2244240f       and al, byte [rsp + 0xf]
0x0000320e      0f854a010000   jne 0x335e
0x00003214      807c240d00     cmp byte [rsp + 0xd], 0
0x00003219      7565           jne 0x3280
0x0000321b      89d3           mov ebx, edx
0x0000321d      4531e4         xor r12d, r12d
0x00003220      31c0           xor eax, eax
0x00003222      807c240f00     cmp byte [rsp + 0xf], 0
0x00003227      0f85eefeffff   jne 0x311b
0x0000322d      e907ffffff     jmp 0x3139                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003232      660f1f440000   nop word [rax + rax]
0x00003238      ba08000000     mov edx, 8
0x0000323d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003242      ebd0           jmp 0x3214
0x00003244      0f1f4000       nop dword [rax]
0x00003248      837c240802     cmp dword [rsp + 8], 2
0x0000324d      0f84cd030000   je 0x3620
0x00003253      807c240d00     cmp byte [rsp + 0xd], 0
0x00003258      0f8412020000   je 0x3470
0x0000325e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003263      0f8407020000   je 0x3470
0x00003269      48837c241800   cmp qword [rsp + 0x18], 0
0x0000326f      0f85b6030000   jne 0x362b
0x00003275      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000327a      660f1f440000   nop word [rax + rax]
0x00003280      4531e4         xor r12d, r12d
0x00003283      837c240802     cmp dword [rsp + 8], 2
0x00003288      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000328b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003290      89d0           mov eax, edx
0x00003292      0f8550080000   jne 0x3ae8
0x00003298      4489c0         mov eax, r8d
0x0000329b      83f001         xor eax, 1
0x0000329e      20d0           and al, dl
0x000032a0      742f           je 0x32d1
0x000032a2      4d39fd         cmp r13, r15
0x000032a5      7605           jbe 0x32ac
0x000032a7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000032ac      498d5701       lea rdx, [r15 + 1]
0x000032b0      4939d5         cmp r13, rdx
0x000032b3      7606           jbe 0x32bb
0x000032b5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000032bb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000032bf      4939d5         cmp r13, rdx
0x000032c2      7606           jbe 0x32ca
0x000032c4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000032ca      4983c703       add r15, 3
0x000032ce      4189c0         mov r8d, eax
0x000032d1      4d39fd         cmp r13, r15
0x000032d4      7605           jbe 0x32db
0x000032d6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000032db      4983c701       add r15, 1
0x000032df      4883c501       add rbp, 1
0x000032e3      e988feffff     jmp 0x3170
0x000032e8      0f1f84000000.  nop dword [rax + rax]
0x000032f0      807c240d00     cmp byte [rsp + 0xd], 0
0x000032f5      0f85c8010000   jne 0x34c3
0x000032fb      31d2           xor edx, edx
0x000032fd      f644247801     test byte [rsp + 0x78], 1
0x00003302      0f8413ffffff   je 0x321b
0x00003308      4883c501       add rbp, 1
0x0000330c      e9b7fcffff     jmp 0x2fc8
0x00003311      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003318      837c240802     cmp dword [rsp + 8], 2
0x0000331d      0f94c2         sete dl
0x00003320      31c0           xor eax, eax
0x00003322      e9e1fdffff     jmp 0x3108
0x00003327      660f1f840000.  nop word [rax + rax]
0x00003330      ba07000000     mov edx, 7
0x00003335      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000333a      e9d5feffff     jmp 0x3214
0x0000333f      90             nop
0x00003340      837c240802     cmp dword [rsp + 8], 2
0x00003345      0f94c2         sete dl
0x00003348      4885ed         test rbp, rbp
0x0000334b      0f85abfdffff   jne 0x30fc
0x00003351      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003356      20d0           and al, dl
0x00003358      0f84aafdffff   je 0x3108
0x0000335e      4c89dd         mov rbp, r11
0x00003361      c74424080200.  mov dword [rsp + 8], 2
0x00003369      e9fb060000     jmp 0x3a69
0x0000336e      6690           nop
0x00003370      837c240802     cmp dword [rsp + 8], 2
0x00003375      0f94c2         sete dl
0x00003378      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000337b      ebd4           jmp 0x3351
0x0000337d      0f1f00         nop dword [rax]
0x00003380      837c240802     cmp dword [rsp + 8], 2
0x00003385      bb20000000     mov ebx, 0x20                           ; "@"
0x0000338a      0f94c2         sete dl
0x0000338d      ebc2           jmp 0x3351
0x0000338f      90             nop
0x00003390      ba0d000000     mov edx, 0xd
0x00003395      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000339a      e963feffff     jmp 0x3202
0x0000339f      90             nop
0x000033a0      ba0c000000     mov edx, 0xc
0x000033a5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000033aa      e965feffff     jmp 0x3214
0x000033af      90             nop
0x000033b0      ba0b000000     mov edx, 0xb
0x000033b5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000033ba      e955feffff     jmp 0x3214
0x000033bf      90             nop
0x000033c0      ba0a000000     mov edx, 0xa
0x000033c5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000033ca      e933feffff     jmp 0x3202
0x000033cf      90             nop
0x000033d0      4531d2         xor r10d, r10d
0x000033d3      0f1f440000     nop dword [rax + rax]
0x000033d8      48837c245801   cmp qword [rsp + 0x58], 1
0x000033de      0f85a4030000   jne 0x3788
0x000033e4      4c895c2438     mov qword [rsp + 0x38], r11
0x000033e9      4488442430     mov byte [rsp + 0x30], r8b
0x000033ee      4488542428     mov byte [rsp + 0x28], r10b
0x000033f3      e878e5ffff     call sym.imp.__ctype_b_loc
0x000033f8      488b08         mov rcx, qword [rax]
0x000033fb      0fb6d3         movzx edx, bl
0x000033fe      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003404      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000340a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000340f      bf01000000     mov edi, 1
0x00003414      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003418      66250040       and ax, 0x4000
0x0000341c      410f95c4       setne r12b
0x00003420      0f94c0         sete al
0x00003423      2244240d       and al, byte [rsp + 0xd]
0x00003427      84c0           test al, al
0x00003429      0f8592090000   jne 0x3dc1
0x0000342f      837c240802     cmp dword [rsp + 8], 2
0x00003434      0f94c2         sete dl
0x00003437      e9ccfcffff     jmp 0x3108
0x0000343c      0f1f4000       nop dword [rax]
0x00003440      410fb619       movzx ebx, byte [r9]
0x00003444      80fb7e         cmp bl, 0x7e
0x00003447      7787           ja 0x33d0
0x00003449      488d0d183800.  lea rcx, [0x00006c68]                   ; "X\xc8\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffH\xc8\xff\xff\x98\xc9\xff\xff\x80\xc9\xff\xff0\xc8\xff\xffp\xc9\xff\xff\x18\xc8\xff\xffX\xc9\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xffh\xc7\xff\xff@\xc9\xff\xff(\xc9\xff\xff(\xc9\xff\xff\x10\xc9\xff\xff(\xc9\xff\xff\xf8\xc8\xff\xff(\xc9\xff\xffh\xc5\xff\xff(\xc9\xff\xff(\xc9\xff\xff(\xc9\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff(\xc9\xff\xff(\xc9\xff\xff(\xc9\xff\xff(\xc9\xff\xff8\xc5\xff\xffh\xc7\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff(\xc9\xff\xff\xf8\xc7\xff\xff\xf8\xc8\xff\xff(\xc9\xff\xff\xf8\xc8\xff\xff(\xc9\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xff\xf8\xc8\xff\xffh\xc4\xff\xff(\xc9\xff\xffh\xc4\xff\xff\x10\xc9\xff\xff"
0x00003450      0fb6d3         movzx edx, bl
0x00003453      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003457      4801c8         add rax, rcx
0x0000345a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000345c      0f1f4000       nop dword [rax]
0x00003460      4531d2         xor r10d, r10d
0x00003463      807c240d00     cmp byte [rsp + 0xd], 0
0x00003468      0f85f0fdffff   jne 0x325e
0x0000346e      6690           nop
0x00003470      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003475      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000347a      e995fdffff     jmp 0x3214
0x0000347f      90             nop
0x00003480      ba0c000000     mov edx, 0xc
0x00003485      4531d2         xor r10d, r10d
0x00003488      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000348d      e982fdffff     jmp 0x3214
0x00003492      660f1f440000   nop word [rax + rax]
0x00003498      ba0a000000     mov edx, 0xa
0x0000349d      4531d2         xor r10d, r10d
0x000034a0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000034a5      e958fdffff     jmp 0x3202
0x000034aa      660f1f440000   nop word [rax + rax]
0x000034b0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000034b5      e9c6fdffff     jmp 0x3280
0x000034ba      660f1f440000   nop word [rax + rax]
0x000034c0      4531d2         xor r10d, r10d
0x000034c3      837c240802     cmp dword [rsp + 8], 2
0x000034c8      0f94c2         sete dl
0x000034cb      807c240f00     cmp byte [rsp + 0xf], 0
0x000034d0      0f85940b0000   jne 0x406a
0x000034d6      4489c0         mov eax, r8d
0x000034d9      4c89f9         mov rcx, r15
0x000034dc      83f001         xor eax, 1
0x000034df      20d0           and al, dl
0x000034e1      742d           je 0x3510
0x000034e3      4d39fd         cmp r13, r15
0x000034e6      7605           jbe 0x34ed
0x000034e8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000034ed      498d4f01       lea rcx, [r15 + 1]
0x000034f1      4939cd         cmp r13, rcx
0x000034f4      7606           jbe 0x34fc
0x000034f6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000034fc      498d4f02       lea rcx, [r15 + 2]
0x00003500      4939cd         cmp r13, rcx
0x00003503      0f8730060000   ja 0x3b39
0x00003509      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000350d      4189c0         mov r8d, eax
0x00003510      4939cd         cmp r13, rcx
0x00003513      7605           jbe 0x351a
0x00003515      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000351a      837c240802     cmp dword [rsp + 8], 2
0x0000351f      4c8d7901       lea r15, [rcx + 1]
0x00003523      0f8400060000   je 0x3b29
0x00003529      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000352d      4c39d8         cmp rax, r11
0x00003530      7319           jae 0x354b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003532      488b442410     mov rax, qword [rsp + 0x10]
0x00003537      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000353c      88442428       mov byte [rsp + 0x28], al
0x00003540      83e830         sub eax, 0x30
0x00003543      3c09           cmp al, 9
0x00003545      0f862e080000   jbe 0x3d79
0x0000354b      4489e0         mov eax, r12d
0x0000354e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003553      4531e4         xor r12d, r12d
0x00003556      e9adfbffff     jmp 0x3108                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000355b      0f1f440000     nop dword [rax + rax]
0x00003560      837c240802     cmp dword [rsp + 8], 2
0x00003565      4589d4         mov r12d, r10d
0x00003568      0f94c2         sete dl
0x0000356b      4531d2         xor r10d, r10d
0x0000356e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003570      e993fbffff     jmp 0x3108                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003575      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003578      837c240802     cmp dword [rsp + 8], 2
0x0000357d      0f94c2         sete dl
0x00003580      4531d2         xor r10d, r10d
0x00003583      e9c0fdffff     jmp 0x3348
0x00003588      0f1f84000000.  nop dword [rax + rax]
0x00003590      837c240802     cmp dword [rsp + 8], 2
0x00003595      0f94c2         sete dl
0x00003598      4531d2         xor r10d, r10d
0x0000359b      4531e4         xor r12d, r12d
0x0000359e      e9aefdffff     jmp 0x3351
0x000035a3      0f1f440000     nop dword [rax + rax]
0x000035a8      837c240802     cmp dword [rsp + 8], 2
0x000035ad      4589d4         mov r12d, r10d
0x000035b0      bb20000000     mov ebx, 0x20                           ; "@"
0x000035b5      0f94c2         sete dl
0x000035b8      4531d2         xor r10d, r10d
0x000035bb      e991fdffff     jmp 0x3351
0x000035c0      ba0d000000     mov edx, 0xd
0x000035c5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000035c8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000035cd      e930fcffff     jmp 0x3202
0x000035d2      660f1f440000   nop word [rax + rax]
0x000035d8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000035dd      e99efcffff     jmp 0x3280
0x000035e2      660f1f440000   nop word [rax + rax]
0x000035e8      ba09000000     mov edx, 9
0x000035ed      4531d2         xor r10d, r10d
0x000035f0      bb74000000     mov ebx, 0x74                           ; 't'
0x000035f5      e908fcffff     jmp 0x3202
0x000035fa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003600      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003605      e976fcffff     jmp 0x3280
0x0000360a      660f1f440000   nop word [rax + rax]
0x00003610      4531d2         xor r10d, r10d
0x00003613      e998faffff     jmp 0x30b0
0x00003618      0f1f84000000.  nop dword [rax + rax]
0x00003620      807c240f00     cmp byte [rsp + 0xf], 0
0x00003625      0f8565090000   jne 0x3f90
0x0000362b      4883c501       add rbp, 1
0x0000362f      4489c0         mov eax, r8d
0x00003632      4531e4         xor r12d, r12d
0x00003635      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000363a      e90dfbffff     jmp 0x314c
0x0000363f      90             nop
0x00003640      837c240802     cmp dword [rsp + 8], 2
0x00003645      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000364a      4589c4         mov r12d, r8d
0x0000364d      4c89dd         mov rbp, r11
0x00003650      0f94c2         sete dl
0x00003653      89d8           mov eax, ebx
0x00003655      4d85ff         test r15, r15
0x00003658      0f94c1         sete cl
0x0000365b      21d0           and eax, edx
0x0000365d      20c8           and al, cl
0x0000365f      0f85610a0000   jne 0x40c6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003665      89d8           mov eax, ebx
0x00003667      83f001         xor eax, 1
0x0000366a      20c2           and dl, al
0x0000366c      0f846a090000   je 0x3fdc
0x00003672      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003677      0f845d090000   je 0x3fda
0x0000367d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003682      0f85f5090000   jne 0x407d
0x00003688      4d85ed         test r13, r13
0x0000368b      0f94c0         sete al
0x0000368e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003694      0f95c2         setne dl
0x00003697      20d0           and al, dl
0x00003699      0f841d0a0000   je 0x40bc
0x0000369f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000036a4      488d1d3a3300.  lea rbx, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000036ab      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000036af      c74424080200.  mov dword [rsp + 8], 2
0x000036b7      41bf01000000   mov r15d, 1
0x000036bd      48c744241801.  mov qword [rsp + 0x18], 1
0x000036c6      c644240f00     mov byte [rsp + 0xf], 0
0x000036cb      48895c2448     mov qword [rsp + 0x48], rbx
0x000036d0      8844247c       mov byte [rsp + 0x7c], al
0x000036d4      e9daf8ffff     jmp 0x2fb3
0x000036d9      0f1f80000000.  nop dword [rax]
0x000036e0      807c240f00     cmp byte [rsp + 0xf], 0
0x000036e5      0f85a5080000   jne 0x3f90
0x000036eb      4d85ed         test r13, r13
0x000036ee      0f84fc030000   je 0x3af0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000036f4      31d2           xor edx, edx
0x000036f6      48837c245000   cmp qword [rsp + 0x50], 0
0x000036fc      0f85ee030000   jne 0x3af0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003702      4c896c2450     mov qword [rsp + 0x50], r13
0x00003707      4983c703       add r15, 3
0x0000370b      31c0           xor eax, eax
0x0000370d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003712      4531c0         xor r8d, r8d
0x00003715      4989d5         mov r13, rdx
0x00003718      bb27000000     mov ebx, 0x27                           ; '''
0x0000371d      e917faffff     jmp 0x3139
0x00003722      660f1f440000   nop word [rax + rax]
0x00003728      f644247804     test byte [rsp + 0x78], 4
0x0000372d      7421           je 0x3750
0x0000372f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003733      4c39d9         cmp rcx, r11
0x00003736      7318           jae 0x3750
0x00003738      488b442410     mov rax, qword [rsp + 0x10]
0x0000373d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003742      0f848a070000   je 0x3ed2
0x00003748      0f1f84000000.  nop dword [rax + rax]
0x00003750      31d2           xor edx, edx
0x00003752      4531e4         xor r12d, r12d
0x00003755      31c0           xor eax, eax
0x00003757      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000375c      e9a7f9ffff     jmp 0x3108
0x00003761      0f1f80000000.  nop dword [rax]
0x00003768      807c240f00     cmp byte [rsp + 0xf], 0
0x0000376d      0f851d080000   jne 0x3f90
0x00003773      4531e4         xor r12d, r12d
0x00003776      31c0           xor eax, eax
0x00003778      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000377d      e9b7f9ffff     jmp 0x3139                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003782      660f1f440000   nop word [rax + rax]
0x00003788      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003790      4983fbff       cmp r11, 0xffffffffffffffff
0x00003794      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000037a0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000037a5      752d           jne 0x37d4
0x000037a7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000037ac      4488442440     mov byte [rsp + 0x40], r8b
0x000037b1      4488542438     mov byte [rsp + 0x38], r10b
0x000037b6      4c894c2430     mov qword [rsp + 0x30], r9
0x000037bb      e820dfffff     call sym.imp.strlen
0x000037c0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000037c6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000037cc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000037cf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000037d4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000037dc      31c9           xor ecx, ecx
0x000037de      885c247e       mov byte [rsp + 0x7e], bl
0x000037e2      448844247d     mov byte [rsp + 0x7d], r8b
0x000037e7      4889cb         mov rbx, rcx
0x000037ea      4c898c248800.  mov qword [rsp + 0x88], r9
0x000037f2      4889442438     mov qword [rsp + 0x38], rax
0x000037f7      448854247f     mov byte [rsp + 0x7f], r10b
0x000037fc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003804      4c89742440     mov qword [rsp + 0x40], r14
0x00003809      4c896c2470     mov qword [rsp + 0x70], r13
0x0000380e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003813      488b442410     mov rax, qword [rsp + 0x10]
0x00003818      4c8d741d00     lea r14, [rbp + rbx]
0x0000381d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003822      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003827      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000382c      4e8d2c30       lea r13, [rax + r14]
0x00003830      4c29f2         sub rdx, r14
0x00003833      4c89ee         mov rsi, r13
0x00003836      e8e5230000     call sym.rpl_mbrtowc
0x0000383b      4885c0         test rax, rax
0x0000383e      4989c7         mov r15, rax
0x00003841      744e           je 0x3891
0x00003843      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003847      0f8418060000   je 0x3e65
0x0000384d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003851      0f849a050000   je 0x3df1
0x00003857      837c240802     cmp dword [rsp + 8], 2
0x0000385c      0f94c0         sete al
0x0000385f      2244240f       and al, byte [rsp + 0xf]
0x00003863      0f8597010000   jne 0x3a00
0x00003869      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003870      e8ebe0ffff     call sym.imp.iswprint
0x00003875      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000387a      85c0           test eax, eax
0x0000387c      b800000000     mov eax, 0
0x00003881      440f44e0       cmove r12d, eax
0x00003885      4c01fb         add rbx, r15
0x00003888      e8c3e0ffff     call sym.imp.mbsinit
0x0000388d      85c0           test eax, eax
0x0000388f      7482           je 0x3813
0x00003891      4489e2         mov edx, r12d
0x00003894      4889df         mov rdi, rbx
0x00003897      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000389d      83f201         xor edx, 1
0x000038a0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000038a5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000038ab      2254240d       and dl, byte [rsp + 0xd]
0x000038af      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000038b7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000038bc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000038c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000038c6      4883ff01       cmp rdi, 1
0x000038ca      0f86fb050000   jbe 0x3ecb
0x000038d0      4889f9         mov rcx, rdi
0x000038d3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000038d5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000038db      4801e9         add rcx, rbp
0x000038de      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000038e3      e9b6000000     jmp 0x399e
0x000038e8      0f1f84000000.  nop dword [rax + rax]
0x000038f0      837c240802     cmp dword [rsp + 8], 2
0x000038f5      0f94c0         sete al
0x000038f8      4584c9         test r9b, r9b
0x000038fb      0f85af040000   jne 0x3db0
0x00003901      4489c6         mov esi, r8d
0x00003904      83f601         xor esi, 1
0x00003907      4020f0         and al, sil
0x0000390a      742f           je 0x393b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000390c      4d39fd         cmp r13, r15
0x0000390f      7605           jbe 0x3916
0x00003911      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003916      498d7701       lea rsi, [r15 + 1]
0x0000391a      4939f5         cmp r13, rsi
0x0000391d      7606           jbe 0x3925                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000391f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003925      498d7702       lea rsi, [r15 + 2]
0x00003929      4939f5         cmp r13, rsi
0x0000392c      7606           jbe 0x3934
0x0000392e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003934      4983c703       add r15, 3
0x00003938      4189c0         mov r8d, eax
0x0000393b      4d39fd         cmp r13, r15
0x0000393e      7605           jbe 0x3945
0x00003940      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003945      498d4701       lea rax, [r15 + 1]
0x00003949      4939c5         cmp r13, rax
0x0000394c      760d           jbe 0x395b
0x0000394e      89d8           mov eax, ebx
0x00003950      c0e806         shr al, 6
0x00003953      83c030         add eax, 0x30
0x00003956      4388443e01     mov byte [r14 + r15 + 1], al
0x0000395b      498d4702       lea rax, [r15 + 2]
0x0000395f      4939c5         cmp r13, rax
0x00003962      7610           jbe 0x3974
0x00003964      89d8           mov eax, ebx
0x00003966      c0e803         shr al, 3
0x00003969      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000396c      83c030         add eax, 0x30
0x0000396f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003974      83e307         and ebx, 7
0x00003977      4883c501       add rbp, 1
0x0000397b      4983c703       add r15, 3
0x0000397f      83c330         add ebx, 0x30
0x00003982      4839cd         cmp rbp, rcx
0x00003985      0f83e5f7ffff   jae 0x3170
0x0000398b      89d6           mov esi, edx
0x0000398d      4d39fd         cmp r13, r15
0x00003990      7604           jbe 0x3996
0x00003992      43881c3e       mov byte [r14 + r15], bl
0x00003996      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000399a      4983c701       add r15, 1
0x0000399e      84d2           test dl, dl
0x000039a0      0f854affffff   jne 0x38f0
0x000039a6      89f0           mov eax, esi
0x000039a8      83f001         xor eax, 1
0x000039ab      4421c0         and eax, r8d
0x000039ae      4584d2         test r10b, r10b
0x000039b1      740e           je 0x39c1
0x000039b3      4d39fd         cmp r13, r15
0x000039b6      7605           jbe 0x39bd
0x000039b8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039bd      4983c701       add r15, 1
0x000039c1      4883c501       add rbp, 1
0x000039c5      4839cd         cmp rbp, rcx
0x000039c8      0f837ef7ffff   jae 0x314c
0x000039ce      84c0           test al, al
0x000039d0      0f84f8030000   je 0x3dce
0x000039d6      4d39fd         cmp r13, r15
0x000039d9      7605           jbe 0x39e0
0x000039db      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039e0      498d4701       lea rax, [r15 + 1]
0x000039e4      4939c5         cmp r13, rax
0x000039e7      7606           jbe 0x39ef
0x000039e9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000039ef      4983c702       add r15, 2
0x000039f3      4531d2         xor r10d, r10d
0x000039f6      4531c0         xor r8d, r8d
0x000039f9      eb92           jmp 0x398d
0x000039fb      0f1f440000     nop dword [rax + rax]
0x00003a00      4983ff01       cmp r15, 1
0x00003a04      0f845ffeffff   je 0x3869
0x00003a0a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003a0f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003a13      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003a18      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003a1c      eb0f           jmp 0x3a2d
0x00003a1e      6690           nop
0x00003a20      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003a24      4939d0         cmp r8, rdx
0x00003a27      0f843cfeffff   je 0x3869
0x00003a2d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003a30      83e95b         sub ecx, 0x5b
0x00003a33      80f921         cmp cl, 0x21
0x00003a36      77e8           ja 0x3a20                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003a38      be01000000     mov esi, 1
0x00003a3d      48d3e6         shl rsi, cl
0x00003a40      4889f1         mov rcx, rsi
0x00003a43      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003a4d      4885f1         test rcx, rsi
0x00003a50      74ce           je 0x3a20
0x00003a52      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003a57      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003a5c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003a61      c74424080200.  mov dword [rsp + 8], 2
0x00003a69      807c240d00     cmp byte [rsp + 0xd], 0
0x00003a6e      7410           je 0x3a80
0x00003a70      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003a72      b804000000     mov eax, 4
0x00003a77      0f44442408     cmove eax, dword [rsp + 8]
0x00003a7c      89442408       mov dword [rsp + 8], eax
0x00003a80      4883ec08       sub rsp, 8
0x00003a84      4889e9         mov rcx, rbp
0x00003a87      4c89ee         mov rsi, r13
0x00003a8a      ff742468       push qword [rsp + 0x68]
0x00003a8e      ff742478       push qword [rsp + 0x78]
0x00003a92      4c89f7         mov rdi, r14
0x00003a95      6a00           push 0
0x00003a97      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003a9f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003aa4      488b542430     mov rdx, qword [rsp + 0x30]
0x00003aa9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003aad      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003ab2      4883c420       add rsp, 0x20
0x00003ab6      4989c7         mov r15, rax
0x00003ab9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003ac1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003aca      4c89f8         mov rax, r15
0x00003acd      0f8500060000   jne 0x40d3
0x00003ad3      4881c4b80000.  add rsp, 0xb8
0x00003ada      5b             pop rbx
0x00003adb      5d             pop rbp
0x00003adc      415c           pop r12
0x00003ade      415d           pop r13
0x00003ae0      415e           pop r14
0x00003ae2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003ae4      c3             ret
0x00003ae5      0f1f00         nop dword [rax]
0x00003ae8      4c89dd         mov rbp, r11
0x00003aeb      e979ffffff     jmp 0x3a69
0x00003af0      4d39fd         cmp r13, r15
0x00003af3      7605           jbe 0x3afa
0x00003af5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003afa      498d4701       lea rax, [r15 + 1]
0x00003afe      4939c5         cmp r13, rax
0x00003b01      7606           jbe 0x3b09
0x00003b03      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003b09      498d4702       lea rax, [r15 + 2]
0x00003b0d      4939c5         cmp r13, rax
0x00003b10      0f86ec050000   jbe 0x4102
0x00003b16      4c89ea         mov rdx, r13
0x00003b19      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003b1f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003b24      e9d9fbffff     jmp 0x3702
0x00003b29      4489e0         mov eax, r12d
0x00003b2c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003b31      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003b34      e900f6ffff     jmp 0x3139                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003b39      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003b3f      e9c5f9ffff     jmp 0x3509
0x00003b44      85db           test ebx, ebx
0x00003b46      0f8527f4ffff   jne 0x2f73
0x00003b4c      c644240d01     mov byte [rsp + 0xd], 1
0x00003b51      4d85ed         test r13, r13
0x00003b54      0f8590050000   jne 0x40ea
0x00003b5a      488d05842e00.  lea rax, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b61      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b6a      c644240e01     mov byte [rsp + 0xe], 1
0x00003b6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b74      4531e4         xor r12d, r12d
0x00003b77      c644240f00     mov byte [rsp + 0xf], 0
0x00003b7c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b85      4889442448     mov qword [rsp + 0x48], rax
0x00003b8a      41bf01000000   mov r15d, 1
0x00003b90      c74424080200.  mov dword [rsp + 8], 2
0x00003b98      e916f4ffff     jmp 0x2fb3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00003b9d      0f1f00         nop dword [rax]
0x00003ba0      85db           test ebx, ebx
0x00003ba2      0f85f5030000   jne 0x3f9d
0x00003ba8      4d85ed         test r13, r13
0x00003bab      0f8425020000   je 0x3dd6
0x00003bb1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00003bb5      c644240e01     mov byte [rsp + 0xe], 1
0x00003bba      4531e4         xor r12d, r12d
0x00003bbd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003bc2      48c744245000.  mov qword [rsp + 0x50], 0
0x00003bcb      488d05112e00.  lea rax, str.l______l                   ; 0x69e3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bd2      c644240f00     mov byte [rsp + 0xf], 0
0x00003bd7      c644240d01     mov byte [rsp + 0xd], 1
0x00003bdc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003be5      41bf01000000   mov r15d, 1
0x00003beb      4889442448     mov qword [rsp + 0x48], rax
0x00003bf0      e9bef3ffff     jmp 0x2fb3
0x00003bf5      488d05e72d00.  lea rax, str.l______l                   ; 0x69e3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003bfc      c644240e01     mov byte [rsp + 0xe], 1
0x00003c01      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c06      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003c09      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c12      c644240f01     mov byte [rsp + 0xf], 1
0x00003c17      c644240d01     mov byte [rsp + 0xd], 1
0x00003c1c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003c25      4531ff         xor r15d, r15d
0x00003c28      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00003c2d      c74424080500.  mov dword [rsp + 8], 5
0x00003c35      e979f3ffff     jmp 0x2fb3
0x00003c3a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c3f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003c44      4531e4         xor r12d, r12d
0x00003c47      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c50      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003c55      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003c58      c644240d01     mov byte [rsp + 0xd], 1
0x00003c5d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003c66      48c744244800.  mov qword [rsp + 0x48], 0
0x00003c6f      e93ff3ffff     jmp 0x2fb3
0x00003c74      837c24080a     cmp dword [rsp + 8], 0xa
0x00003c79      7456           je 0x3cd1
0x00003c7b      488d35652d00.  lea rsi, [0x000069e7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003c82      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003c84      ba05000000     mov edx, 5
0x00003c89      e832daffff     call sym.imp.dcgettext
0x00003c8e      4889c1         mov rcx, rax
0x00003c91      4889442468     mov qword [rsp + 0x68], rax
0x00003c96      488d054a2d00.  lea rax, [0x000069e7]                   ; "`"
0x00003c9d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00003ca0      0f8498030000   je 0x403e
0x00003ca6      488d35382d00.  lea rsi, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cad      31ff           xor edi, edi
0x00003caf      ba05000000     mov edx, 5
0x00003cb4      e807daffff     call sym.imp.dcgettext
0x00003cb9      4889c1         mov rcx, rax
0x00003cbc      4889442460     mov qword [rsp + 0x60], rax
0x00003cc1      488d051d2d00.  lea rax, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cc8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003ccb      0f8483030000   je 0x4054
0x00003cd1      4531ff         xor r15d, r15d
0x00003cd4      85db           test ebx, ebx
0x00003cd6      0f84c1010000   je 0x3e9d
0x00003cdc      85db           test ebx, ebx
0x00003cde      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003ce3      0f9544240f     setne byte [rsp + 0xf]
0x00003ce8      4531e4         xor r12d, r12d
0x00003ceb      4889df         mov rdi, rbx
0x00003cee      e8edd9ffff     call sym.imp.strlen
0x00003cf3      48895c2448     mov qword [rsp + 0x48], rbx
0x00003cf8      4889442418     mov qword [rsp + 0x18], rax
0x00003cfd      c644240e01     mov byte [rsp + 0xe], 1
0x00003d02      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d07      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d10      c644240d01     mov byte [rsp + 0xd], 1
0x00003d15      e999f2ffff     jmp 0x2fb3
0x00003d1a      c644240e01     mov byte [rsp + 0xe], 1
0x00003d1f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d24      4531e4         xor r12d, r12d
0x00003d27      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d30      c644240f00     mov byte [rsp + 0xf], 0
0x00003d35      4531ff         xor r15d, r15d
0x00003d38      c644240d00     mov byte [rsp + 0xd], 0
0x00003d3d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003d46      48c744244800.  mov qword [rsp + 0x48], 0
0x00003d4f      e95ff2ffff     jmp 0x2fb3
0x00003d54      c644240e01     mov byte [rsp + 0xe], 1
0x00003d59      c644247c00     mov byte [rsp + 0x7c], 0
0x00003d5e      4531e4         xor r12d, r12d
0x00003d61      48c744245000.  mov qword [rsp + 0x50], 0
0x00003d6a      c644240f01     mov byte [rsp + 0xf], 1
0x00003d6f      c644240d01     mov byte [rsp + 0xd], 1
0x00003d74      e91af2ffff     jmp 0x2f93
0x00003d79      4d39fd         cmp r13, r15
0x00003d7c      7605           jbe 0x3d83
0x00003d7e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003d83      488d4102       lea rax, [rcx + 2]
0x00003d87      4939c5         cmp r13, rax
0x00003d8a      7606           jbe 0x3d92
0x00003d8c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003d92      4489e0         mov eax, r12d
0x00003d95      4c8d7903       lea r15, [rcx + 3]
0x00003d99      4531e4         xor r12d, r12d
0x00003d9c      bb30000000     mov ebx, 0x30                           ; '0'
0x00003da1      e962f3ffff     jmp 0x3108
0x00003da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003db0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003db5      4c89dd         mov rbp, r11
0x00003db8      885c240d       mov byte [rsp + 0xd], bl
0x00003dbc      e9a8fcffff     jmp 0x3a69
0x00003dc1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003dc6      4531e4         xor r12d, r12d
0x00003dc9      e902fbffff     jmp 0x38d0
0x00003dce      4531d2         xor r10d, r10d
0x00003dd1      e9b7fbffff     jmp 0x398d
0x00003dd6      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ddf      c644240e01     mov byte [rsp + 0xe], 1
0x00003de4      4531e4         xor r12d, r12d
0x00003de7      c644247c00     mov byte [rsp + 0x7c], 0
0x00003dec      e9dafdffff     jmp 0x3bcb
0x00003df1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003df6      4c89f6         mov rsi, r14
0x00003df9      4c89e9         mov rcx, r13
0x00003dfc      4889d8         mov rax, rbx
0x00003dff      4889df         mov rdi, rbx
0x00003e02      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e08      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e0d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003e15      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003e18      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003e1e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003e26      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e2b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e30      7326           jae 0x3e58
0x00003e32      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003e35      7510           jne 0x3e47
0x00003e37      eb1f           jmp 0x3e58
0x00003e39      0f1f80000000.  nop dword [rax]
0x00003e40      41803c0100     cmp byte [r9 + rax], 0
0x00003e45      740e           je 0x3e55
0x00003e47      4883c001       add rax, 1
0x00003e4b      488d540500     lea rdx, [rbp + rax]
0x00003e50      4939d3         cmp r11, rdx
0x00003e53      77eb           ja 0x3e40
0x00003e55      4889c7         mov rdi, rax
0x00003e58      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e5d      4531e4         xor r12d, r12d
0x00003e60      e961faffff     jmp 0x38c6
0x00003e65      4889df         mov rdi, rbx
0x00003e68      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003e6e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003e73      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003e79      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003e81      4531e4         xor r12d, r12d
0x00003e84      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003e89      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003e8e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003e93      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003e98      e929faffff     jmp 0x38c6
0x00003e9d      488b542468     mov rdx, qword [rsp + 0x68]
0x00003ea2      0fb602         movzx eax, byte [rdx]
0x00003ea5      84c0           test al, al
0x00003ea7      0f842ffeffff   je 0x3cdc
0x00003ead      0f1f00         nop dword [rax]
0x00003eb0      4d39fd         cmp r13, r15
0x00003eb3      7604           jbe 0x3eb9
0x00003eb5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003eb9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003ebd      420fb6043a     movzx eax, byte [rdx + r15]
0x00003ec2      84c0           test al, al
0x00003ec4      75ea           jne 0x3eb0
0x00003ec6      e911feffff     jmp 0x3cdc
0x00003ecb      89d0           mov eax, edx
0x00003ecd      e955f5ffff     jmp 0x3427
0x00003ed2      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003ed6      80fb3e         cmp bl, 0x3e
0x00003ed9      0f8771f8ffff   ja 0x3750
0x00003edf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003ee9      480fa3d8       bt rax, rbx
0x00003eed      0f835df8ffff   jae 0x3750
0x00003ef3      807c240f00     cmp byte [rsp + 0xf], 0
0x00003ef8      0f85e4010000   jne 0x40e2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003efe      4d39fd         cmp r13, r15
0x00003f01      7605           jbe 0x3f08
0x00003f03      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003f08      498d4701       lea rax, [r15 + 1]
0x00003f0c      4939c5         cmp r13, rax
0x00003f0f      7606           jbe 0x3f17
0x00003f11      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003f17      498d4702       lea rax, [r15 + 2]
0x00003f1b      4939c5         cmp r13, rax
0x00003f1e      7606           jbe 0x3f26
0x00003f20      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003f26      498d4703       lea rax, [r15 + 3]
0x00003f2a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003f2d      7606           jbe 0x3f35
0x00003f2f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003f35      4983c704       add r15, 4
0x00003f39      31d2           xor edx, edx
0x00003f3b      4531e4         xor r12d, r12d
0x00003f3e      31c0           xor eax, eax
0x00003f40      4889cd         mov rbp, rcx
0x00003f43      e9c0f1ffff     jmp 0x3108
0x00003f48      85db           test ebx, ebx
0x00003f4a      0f8488010000   je 0x40d8
0x00003f50      488d058e2a00.  lea rax, [0x000069e5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003f57      c644240e01     mov byte [rsp + 0xe], 1
0x00003f5c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003f61      4531e4         xor r12d, r12d
0x00003f64      48c744245000.  mov qword [rsp + 0x50], 0
0x00003f6d      c644240f01     mov byte [rsp + 0xf], 1
0x00003f72      c644240d00     mov byte [rsp + 0xd], 0
0x00003f77      48c744241801.  mov qword [rsp + 0x18], 1
0x00003f80      4531ff         xor r15d, r15d
0x00003f83      4889442448     mov qword [rsp + 0x48], rax
0x00003f88      e926f0ffff     jmp 0x2fb3
0x00003f8d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003f90      4c89dd         mov rbp, r11
0x00003f93      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003f98      e9ccfaffff     jmp 0x3a69
0x00003f9d      488d053f2a00.  lea rax, str.l______l                   ; 0x69e3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003fa4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003fa9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003fae      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003fb1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003fba      c644240f01     mov byte [rsp + 0xf], 1
0x00003fbf      c644240d01     mov byte [rsp + 0xd], 1
0x00003fc4      48c744241801.  mov qword [rsp + 0x18], 1
0x00003fcd      4531ff         xor r15d, r15d
0x00003fd0      4889442448     mov qword [rsp + 0x48], rax
0x00003fd5      e9d9efffff     jmp 0x2fb3
0x00003fda      89d0           mov eax, edx
0x00003fdc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003fe1      4885db         test rbx, rbx
0x00003fe4      742c           je 0x4012
0x00003fe6      84c0           test al, al
0x00003fe8      7428           je 0x4012
0x00003fea      0fb60b         movzx ecx, byte [rbx]
0x00003fed      4889d8         mov rax, rbx
0x00003ff0      84c9           test cl, cl
0x00003ff2      741e           je 0x4012
0x00003ff4      4c89fa         mov rdx, r15
0x00003ff7      4c29f8         sub rax, r15
0x00003ffa      4939d5         cmp r13, rdx
0x00003ffd      7604           jbe 0x4003
0x00003fff      41880c16       mov byte [r14 + rdx], cl
0x00004003      4883c201       add rdx, 1
0x00004007      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000400b      84c9           test cl, cl
0x0000400d      75eb           jne 0x3ffa
0x0000400f      4989d7         mov r15, rdx
0x00004012      4d39fd         cmp r13, r15
0x00004015      0f869efaffff   jbe 0x3ab9
0x0000401b      43c6043e00     mov byte [r14 + r15], 0
0x00004020      e994faffff     jmp 0x3ab9
0x00004025      837c240802     cmp dword [rsp + 8], 2
0x0000402a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000402f      4c89dd         mov rbp, r11
0x00004032      0f94c0         sete al
0x00004035      885c240d       mov byte [rsp + 0xd], bl
0x00004039      e92bfaffff     jmp 0x3a69
0x0000403e      8b742408       mov esi, dword [rsp + 8]
0x00004042      4889cf         mov rdi, rcx
0x00004045      e8a6edffff     call sym.gettext_quote.part.1
0x0000404a      4889442468     mov qword [rsp + 0x68], rax
0x0000404f      e952fcffff     jmp 0x3ca6
0x00004054      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004058      4889cf         mov rdi, rcx
0x0000405b      e890edffff     call sym.gettext_quote.part.1
0x00004060      4889442460     mov qword [rsp + 0x60], rax
0x00004065      e967fcffff     jmp 0x3cd1
0x0000406a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000406f      4c89dd         mov rbp, r11
0x00004072      89d0           mov eax, edx
0x00004074      885c240d       mov byte [rsp + 0xd], bl
0x00004078      e9ecf9ffff     jmp 0x3a69
0x0000407d      4883ec08       sub rsp, 8
0x00004081      41b805000000   mov r8d, 5
0x00004087      4c89d9         mov rcx, r11
0x0000408a      ff742468       push qword [rsp + 0x68]
0x0000408e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004092      4c89f7         mov rdi, r14
0x00004095      ff742438       push qword [rsp + 0x38]
0x00004099      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000040a1      488b542430     mov rdx, qword [rsp + 0x30]
0x000040a6      488b742470     mov rsi, qword [rsp + 0x70]
0x000040ab      e830eeffff     call sym.quotearg_buffer_restyled
0x000040b0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000040b4      4989c7         mov r15, rax
0x000040b7      e9fdf9ffff     jmp 0x3ab9
0x000040bc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000040c1      e916ffffff     jmp 0x3fdc
0x000040c6      c74424080200.  mov dword [rsp + 8], 2
0x000040ce      e996f9ffff     jmp 0x3a69
0x000040d3      e818d6ffff     call sym.imp.__stack_chk_fail
0x000040d8      c644240d00     mov byte [rsp + 0xd], 0
0x000040dd      e96ffaffff     jmp 0x3b51
0x000040e2      4c89dd         mov rbp, r11
0x000040e5      e996f9ffff     jmp 0x3a80
0x000040ea      c644240e01     mov byte [rsp + 0xe], 1
0x000040ef      31c0           xor eax, eax
0x000040f1      4531e4         xor r12d, r12d
0x000040f4      48c744245000.  mov qword [rsp + 0x50], 0
0x000040fd      e9a2f5ffff     jmp 0x36a4
0x00004102      4c89ea         mov rdx, r13
0x00004105      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000410a      e9f3f5ffff     jmp 0x3702
0x0000410f      e81cd5ffff     call sym.imp.abort
0x00004114      6690           nop
0x00004116      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004120      4157           push r15
0x00004122      4156           push r14
0x00004124      4c63ff         movsxd r15, edi
0x00004127      4155           push r13
0x00004129      4154           push r12
0x0000412b      4989d6         mov r14, rdx
0x0000412e      55             push rbp
0x0000412f      53             push rbx
0x00004130      4889cd         mov rbp, rcx
0x00004133      4883ec28       sub rsp, 0x28
0x00004137      4889742408     mov qword [rsp + 8], rsi
0x0000413c      e8ffd4ffff     call sym.imp.__errno_location
0x00004141      4989c5         mov r13, rax
0x00004144      8b00           mov eax, dword [rax]
0x00004146      4585ff         test r15d, r15d
0x00004149      488b1d304f20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209080:8]=0x209090 obj.slotvec0
0x00004150      89442418       mov dword [rsp + 0x18], eax
0x00004154      0f8867010000   js 0x42c1
0x0000415a      44393d174f20.  cmp dword [obj.nslots], r15d            ; [0x209078:4]=1
0x00004161      7f62           jg 0x41c5
0x00004163      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000416a      0f8456010000   je 0x42c6
0x00004170      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004174      488d05154f20.  lea rax, obj.slotvec0                   ; 0x209090
0x0000417b      4963f4         movsxd rsi, r12d
0x0000417e      48c1e604       shl rsi, 4
0x00004182      4839c3         cmp rbx, rax
0x00004185      0f8415010000   je 0x42a0
0x0000418b      4889df         mov rdi, rbx
0x0000418e      e80d140000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004193      4889c3         mov rbx, rax
0x00004196      488905e34e20.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x0000419d      48633dd44e20.  movsxd rdi, dword [obj.nslots]          ; [0x209078:4]=1
0x000041a4      4489e2         mov edx, r12d
0x000041a7      31f6           xor esi, esi
0x000041a9      29fa           sub edx, edi
0x000041ab      48c1e704       shl rdi, 4
0x000041af      4863d2         movsxd rdx, edx
0x000041b2      4801df         add rdi, rbx
0x000041b5      48c1e204       shl rdx, 4
0x000041b9      e8d2d5ffff     call sym.imp.memset
0x000041be      448925b34e20.  mov dword [obj.nslots], r12d            ; [0x209078:4]=1
0x000041c5      8b4504         mov eax, dword [rbp + 4]
0x000041c8      49c1e704       shl r15, 4
0x000041cc      4883ec08       sub rsp, 8
0x000041d0      4c01fb         add rbx, r15
0x000041d3      4c8d7d08       lea r15, [rbp + 8]
0x000041d7      448b4500       mov r8d, dword [rbp]
0x000041db      4c8b1b         mov r11, qword [rbx]
0x000041de      4c8b6308       mov r12, qword [rbx + 8]
0x000041e2      4c89f1         mov rcx, r14
0x000041e5      83c801         or eax, 1
0x000041e8      89442424       mov dword [rsp + 0x24], eax
0x000041ec      ff7530         push qword [rbp + 0x30]
0x000041ef      4189c1         mov r9d, eax
0x000041f2      ff7528         push qword [rbp + 0x28]
0x000041f5      4157           push r15
0x000041f7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000041fa      488b542428     mov rdx, qword [rsp + 0x28]
0x000041ff      4c89e7         mov rdi, r12
0x00004202      4c895c2430     mov qword [rsp + 0x30], r11
0x00004207      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000420c      4883c420       add rsp, 0x20
0x00004210      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004215      4939c3         cmp r11, rax
0x00004218      7767           ja 0x4281
0x0000421a      488d7001       lea rsi, [rax + 1]
0x0000421e      488d053b4f20.  lea rax, obj.slot0                      ; 0x209160
0x00004225      4939c4         cmp r12, rax
0x00004228      488933         mov qword [rbx], rsi
0x0000422b      7412           je 0x423f
0x0000422d      4c89e7         mov rdi, r12
0x00004230      4889742410     mov qword [rsp + 0x10], rsi
0x00004235      e8e6d3ffff     call sym.imp.free
0x0000423a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000423f      4889f7         mov rdi, rsi
0x00004242      4889742410     mov qword [rsp + 0x10], rsi
0x00004247      e8f4120000     call sym.xmalloc
0x0000424c      4883ec08       sub rsp, 8
0x00004250      48894308       mov qword [rbx + 8], rax
0x00004254      448b4500       mov r8d, dword [rbp]
0x00004258      ff7530         push qword [rbp + 0x30]
0x0000425b      ff7528         push qword [rbp + 0x28]
0x0000425e      4c89f1         mov rcx, r14
0x00004261      4157           push r15
0x00004263      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004268      4889c7         mov rdi, rax
0x0000426b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004270      488b742430     mov rsi, qword [rsp + 0x30]
0x00004275      4989c4         mov r12, rax
0x00004278      e863ecffff     call sym.quotearg_buffer_restyled
0x0000427d      4883c420       add rsp, 0x20
0x00004281      8b442418       mov eax, dword [rsp + 0x18]
0x00004285      41894500       mov dword [r13], eax
0x00004289      4883c428       add rsp, 0x28
0x0000428d      4c89e0         mov rax, r12
0x00004290      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004291      5d             pop rbp
0x00004292      415c           pop r12
0x00004294      415d           pop r13
0x00004296      415e           pop r14
0x00004298      415f           pop r15
0x0000429a      c3             ret
0x0000429b      0f1f440000     nop dword [rax + rax]
0x000042a0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000042a2      e8f9120000     call sym.xrealloc
0x000042a7      660f6f05e14d.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000042af      4889c3         mov rbx, rax
0x000042b2      488905c74d20.  mov qword [obj.slotvec], rax            ; [0x209080:8]=0x209090 obj.slotvec0
0x000042b9      0f1100         movups xmmword [rax], xmm0
0x000042bc      e9dcfeffff     jmp 0x419d
0x000042c1      e86ad3ffff     call sym.imp.abort
0x000042c6      e8c5140000     call sym.xalloc_die
0x000042cb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000042d0      4154           push r12
0x000042d2      55             push rbp
0x000042d3      53             push rbx
0x000042d4      4889fb         mov rbx, rdi
0x000042d7      e864d3ffff     call sym.imp.__errno_location
0x000042dc      448b20         mov r12d, dword [rax]
0x000042df      4889c5         mov rbp, rax
0x000042e2      488d05774f20.  lea rax, obj.default_quoting_options    ; 0x209260
0x000042e9      4885db         test rbx, rbx
0x000042ec      be38000000     mov esi, 0x38                           ; '8'
0x000042f1      480f44d8       cmove rbx, rax
0x000042f5      4889df         mov rdi, rbx
0x000042f8      e843140000     call sym.xmemdup
0x000042fd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004301      5b             pop rbx
0x00004302      5d             pop rbp
0x00004303      415c           pop r12
0x00004305      c3             ret
0x00004306      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004310      488d05494f20.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004317      4885ff         test rdi, rdi
0x0000431a      480f44f8       cmove rdi, rax
0x0000431e      8b07           mov eax, dword [rdi]
0x00004320      c3             ret
0x00004321      0f1f440000     nop dword [rax + rax]
0x00004326      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004330      488d05294f20.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004337      4885ff         test rdi, rdi
0x0000433a      480f44f8       cmove rdi, rax
0x0000433e      8937           mov dword [rdi], esi
0x00004340      c3             ret
0x00004341      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004346      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004350      488d05094f20.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004357      4885ff         test rdi, rdi
0x0000435a      89f1           mov ecx, esi
0x0000435c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004360      89f0           mov eax, esi
0x00004362      83e11f         and ecx, 0x1f
0x00004365      c0e805         shr al, 5
0x00004368      0fb6c0         movzx eax, al
0x0000436b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004370      8b37           mov esi, dword [rdi]
0x00004372      89f0           mov eax, esi
0x00004374      d3e8           shr eax, cl
0x00004376      31c2           xor edx, eax
0x00004378      83e001         and eax, 1
0x0000437b      83e201         and edx, 1
0x0000437e      d3e2           shl edx, cl
0x00004380      31f2           xor edx, esi
0x00004382      8917           mov dword [rdi], edx
0x00004384      c3             ret
0x00004385      90             nop
0x00004386      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004390      488d05c94e20.  lea rax, obj.default_quoting_options    ; 0x209260
0x00004397      4885ff         test rdi, rdi
0x0000439a      480f44f8       cmove rdi, rax
0x0000439e      8b4704         mov eax, dword [rdi + 4]
0x000043a1      897704         mov dword [rdi + 4], esi
0x000043a4      c3             ret
0x000043a5      90             nop
0x000043a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000043b0      488d05a94e20.  lea rax, obj.default_quoting_options    ; 0x209260
0x000043b7      4885ff         test rdi, rdi
0x000043ba      480f44f8       cmove rdi, rax
0x000043be      4885f6         test rsi, rsi
0x000043c1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000043c7      740e           je 0x43d7
0x000043c9      4885d2         test rdx, rdx
0x000043cc      7409           je 0x43d7
0x000043ce      48897728       mov qword [rdi + 0x28], rsi
0x000043d2      48895730       mov qword [rdi + 0x30], rdx
0x000043d6      c3             ret
0x000043d7      4883ec08       sub rsp, 8
0x000043db      e850d2ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000043e0      4157           push r15
0x000043e2      4156           push r14
0x000043e4      488d05754e20.  lea rax, obj.default_quoting_options    ; 0x209260
0x000043eb      4155           push r13
0x000043ed      4154           push r12
0x000043ef      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000043f2      55             push rbp
0x000043f3      53             push rbx
0x000043f4      4c89c3         mov rbx, r8
0x000043f7      4989f6         mov r14, rsi
0x000043fa      4989d7         mov r15, rdx
0x000043fd      4883ec18       sub rsp, 0x18
0x00004401      4d85c0         test r8, r8
0x00004404      480f44d8       cmove rbx, rax
0x00004408      48894c2408     mov qword [rsp + 8], rcx
0x0000440d      e82ed2ffff     call sym.imp.__errno_location
0x00004412      448b20         mov r12d, dword [rax]
0x00004415      4889c5         mov rbp, rax
0x00004418      488d4308       lea rax, [rbx + 8]
0x0000441c      4883ec08       sub rsp, 8
0x00004420      448b4b04       mov r9d, dword [rbx + 4]
0x00004424      ff7330         push qword [rbx + 0x30]
0x00004427      448b03         mov r8d, dword [rbx]
0x0000442a      ff7328         push qword [rbx + 0x28]
0x0000442d      4c89fa         mov rdx, r15
0x00004430      50             push rax
0x00004431      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004436      4c89f6         mov rsi, r14
0x00004439      4c89ef         mov rdi, r13
0x0000443c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004441      44896500       mov dword [rbp], r12d
0x00004445      4883c438       add rsp, 0x38
0x00004449      5b             pop rbx
0x0000444a      5d             pop rbp
0x0000444b      415c           pop r12
0x0000444d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000444f      415e           pop r14
0x00004451      415f           pop r15
0x00004453      c3             ret
0x00004454      6690           nop
0x00004456      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004460      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004462      4156           push r14
0x00004464      488d05f54d20.  lea rax, obj.default_quoting_options    ; 0x209260
0x0000446b      4155           push r13
0x0000446d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000446f      4989d4         mov r12, rdx
0x00004472      55             push rbp
0x00004473      53             push rbx
0x00004474      4889cb         mov rbx, rcx
0x00004477      4989fe         mov r14, rdi
0x0000447a      4989f7         mov r15, rsi
0x0000447d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004481      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004484      480f44d8       cmove rbx, rax
0x00004488      31ed           xor ebp, ebp
0x0000448a      e8b1d1ffff     call sym.imp.__errno_location
0x0000448f      4d85e4         test r12, r12
0x00004492      4989c5         mov r13, rax
0x00004495      8b00           mov eax, dword [rax]
0x00004497      400f94c5       sete bpl
0x0000449b      0b6b04         or ebp, dword [rbx + 4]
0x0000449e      4c8d5308       lea r10, [rbx + 8]
0x000044a2      4883ec08       sub rsp, 8
0x000044a6      448b03         mov r8d, dword [rbx]
0x000044a9      4c89f9         mov rcx, r15
0x000044ac      89442414       mov dword [rsp + 0x14], eax
0x000044b0      ff7330         push qword [rbx + 0x30]
0x000044b3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000044b6      ff7328         push qword [rbx + 0x28]
0x000044b9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000044bb      31f6           xor esi, esi
0x000044bd      4189e9         mov r9d, ebp
0x000044c0      31ff           xor edi, edi
0x000044c2      4c89542440     mov qword [rsp + 0x40], r10
0x000044c7      e814eaffff     call sym.quotearg_buffer_restyled
0x000044cc      488d7001       lea rsi, [rax + 1]
0x000044d0      4889442448     mov qword [rsp + 0x48], rax
0x000044d5      4883c420       add rsp, 0x20
0x000044d9      4889f7         mov rdi, rsi
0x000044dc      4889742418     mov qword [rsp + 0x18], rsi
0x000044e1      e85a100000     call sym.xmalloc
0x000044e6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000044eb      4883ec08       sub rsp, 8
0x000044ef      ff7330         push qword [rbx + 0x30]
0x000044f2      ff7328         push qword [rbx + 0x28]
0x000044f5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000044fa      4189e9         mov r9d, ebp
0x000044fd      448b03         mov r8d, dword [rbx]
0x00004500      4c89f9         mov rcx, r15
0x00004503      4c89f2         mov rdx, r14
0x00004506      4889c7         mov rdi, rax
0x00004509      4152           push r10
0x0000450b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004510      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004515      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004519      4883c420       add rsp, 0x20
0x0000451d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004520      41894500       mov dword [r13], eax
0x00004524      7409           je 0x452f
0x00004526      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000452b      4d891c24       mov qword [r12], r11
0x0000452f      488b442410     mov rax, qword [rsp + 0x10]
0x00004534      4883c438       add rsp, 0x38
0x00004538      5b             pop rbx
0x00004539      5d             pop rbp
0x0000453a      415c           pop r12
0x0000453c      415d           pop r13
0x0000453e      415e           pop r14
0x00004540      415f           pop r15
0x00004542      c3             ret
0x00004543      0f1f00         nop dword [rax]
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004550      4889d1         mov rcx, rdx
0x00004553      31d2           xor edx, edx
0x00004555      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000455a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004560      8b05124b2000   mov eax, dword [obj.nslots]             ; [0x209078:4]=1
0x00004566      4154           push r12
0x00004568      4c8b25114b20.  mov r12, qword [obj.slotvec]            ; [0x209080:8]=0x209090 obj.slotvec0
0x0000456f      55             push rbp
0x00004570      53             push rbx
0x00004571      83f801         cmp eax, 1
0x00004574      7e2b           jle 0x45a1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004576      83e802         sub eax, 2
0x00004579      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000457e      48c1e004       shl rax, 4
0x00004582      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004587      660f1f840000.  nop word [rax + rax]
0x00004590      488b3b         mov rdi, qword [rbx]
0x00004593      4883c310       add rbx, 0x10
0x00004597      e884d0ffff     call sym.imp.free
0x0000459c      4839eb         cmp rbx, rbp
0x0000459f      75ef           jne 0x4590
0x000045a1      498b7c2408     mov rdi, qword [r12 + 8]
0x000045a6      488d1db34b20.  lea rbx, obj.slot0                      ; 0x209160
0x000045ad      4839df         cmp rdi, rbx
0x000045b0      7417           je 0x45c9
0x000045b2      e869d0ffff     call sym.imp.free
0x000045b7      48c705ce4a20.  mov qword [obj.slotvec0], 0x100         ; [0x209090:8]=256
0x000045c2      48891dcf4a20.  mov qword [0x00209098], rbx             ; [0x209098:8]=0x209160 obj.slot0
0x000045c9      488d1dc04a20.  lea rbx, obj.slotvec0                   ; 0x209090
0x000045d0      4939dc         cmp r12, rbx
0x000045d3      740f           je 0x45e4
0x000045d5      4c89e7         mov rdi, r12
0x000045d8      e843d0ffff     call sym.imp.free
0x000045dd      48891d9c4a20.  mov qword [obj.slotvec], rbx            ; [0x209080:8]=0x209090 obj.slotvec0
0x000045e4      5b             pop rbx
0x000045e5      c705894a2000.  mov dword [obj.nslots], 1               ; [0x209078:4]=1
0x000045ef      5d             pop rbp
0x000045f0      415c           pop r12
0x000045f2      c3             ret
0x000045f3      0f1f00         nop dword [rax]
0x000045f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004600      488d0d594c20.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00004607      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000460e      e90dfbffff     jmp sym.quotearg_n_options
0x00004613      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004616      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004620      488d0d394c20.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00004627      e9f4faffff     jmp sym.quotearg_n_options
0x0000462c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004630      488d0d294c20.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00004637      4889fe         mov rsi, rdi
0x0000463a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004641      31ff           xor edi, edi
0x00004643      e9d8faffff     jmp sym.quotearg_n_options
0x00004648      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004650      488d0d094c20.  lea rcx, obj.default_quoting_options    ; 0x209260
0x00004657      4889f2         mov rdx, rsi
0x0000465a      4889fe         mov rsi, rdi
0x0000465d      31ff           xor edi, edi
0x0000465f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004664      6690           nop
0x00004666      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004670      4883ec48       sub rsp, 0x48
0x00004674      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004677      64488b142528.  mov rdx, qword fs:[0x28]
0x00004680      4889542438     mov qword [rsp + 0x38], rdx
0x00004685      31d2           xor edx, edx
0x00004687      83fe0a         cmp esi, 0xa
0x0000468a      7468           je 0x46f4
0x0000468c      893424         mov dword [rsp], esi
0x0000468f      4889e1         mov rcx, rsp
0x00004692      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004699      4889c6         mov rsi, rax
0x0000469c      48c744240400.  mov qword [rsp + 4], 0
0x000046a5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000046ae      48c744241400.  mov qword [rsp + 0x14], 0
0x000046b7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000046c0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000046c9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000046d2      c74424340000.  mov dword [rsp + 0x34], 0
0x000046da      e841faffff     call sym.quotearg_n_options
0x000046df      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000046e4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000046ed      750a           jne 0x46f9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000046ef      4883c448       add rsp, 0x48
0x000046f3      c3             ret
0x000046f4      e837cfffff     call sym.imp.abort
0x000046f9      e8f2cfffff     call sym.imp.__stack_chk_fail
0x000046fe      6690           nop
;-- quotearg_n_style_mem:
0x00004700      4883ec48       sub rsp, 0x48
0x00004704      4889d0         mov rax, rdx
0x00004707      4889ca         mov rdx, rcx
0x0000470a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004713      48894c2438     mov qword [rsp + 0x38], rcx
0x00004718      31c9           xor ecx, ecx
0x0000471a      83fe0a         cmp esi, 0xa
0x0000471d      7461           je 0x4780
0x0000471f      893424         mov dword [rsp], esi
0x00004722      4889e1         mov rcx, rsp
0x00004725      4889c6         mov rsi, rax
0x00004728      48c744240400.  mov qword [rsp + 4], 0
0x00004731      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000473a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004743      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000474c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004755      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000475e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004766      e8b5f9ffff     call sym.quotearg_n_options
0x0000476b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004770      644833142528.  xor rdx, qword fs:[0x28]
0x00004779      750a           jne 0x4785
0x0000477b      4883c448       add rsp, 0x48
0x0000477f      c3             ret
0x00004780      e8abceffff     call sym.imp.abort
0x00004785      e866cfffff     call sym.imp.__stack_chk_fail
0x0000478a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004790      4889f2         mov rdx, rsi
0x00004793      89fe           mov esi, edi
0x00004795      31ff           xor edi, edi
0x00004797      e9d4feffff     jmp sym.quotearg_n_style
0x0000479c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000047a0      4889d1         mov rcx, rdx
0x000047a3      4889f2         mov rdx, rsi
0x000047a6      89fe           mov esi, edi
0x000047a8      31ff           xor edi, edi
0x000047aa      e951ffffff     jmp sym.quotearg_n_style_mem
0x000047af      90             nop
;-- quotearg_char_mem:
0x000047b0      4883ec48       sub rsp, 0x48
0x000047b4      89d1           mov ecx, edx
0x000047b6      64488b042528.  mov rax, qword fs:[0x28]
0x000047bf      4889442438     mov qword [rsp + 0x38], rax
0x000047c4      31c0           xor eax, eax
0x000047c6      488b05c34a20.  mov rax, qword [0x00209290]             ; [0x209290:8]=0
0x000047cd      4989e0         mov r8, rsp
0x000047d0      83e11f         and ecx, 0x1f
0x000047d3      660f6f05854a.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000047db      4889442430     mov qword [rsp + 0x30], rax
0x000047e0      89d0           mov eax, edx
0x000047e2      0f290424       movaps xmmword [rsp], xmm0
0x000047e6      c0e805         shr al, 5
0x000047e9      0fb6c0         movzx eax, al
0x000047ec      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000047f1      660f6f05774a.  movdqa xmm0, xmmword [0x00209270]
0x000047f9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000047fe      660f6f057a4a.  movdqa xmm0, xmmword [0x00209280]
0x00004806      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000480b      418b11         mov edx, dword [r9]
0x0000480e      89d0           mov eax, edx
0x00004810      d3e8           shr eax, cl
0x00004812      f7d0           not eax
0x00004814      83e001         and eax, 1
0x00004817      d3e0           shl eax, cl
0x00004819      4c89c1         mov rcx, r8
0x0000481c      31d0           xor eax, edx
0x0000481e      4889f2         mov rdx, rsi
0x00004821      4889fe         mov rsi, rdi
0x00004824      418901         mov dword [r9], eax
0x00004827      31ff           xor edi, edi
0x00004829      e8f2f8ffff     call sym.quotearg_n_options
0x0000482e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004833      644833342528.  xor rsi, qword fs:[0x28]
0x0000483c      7505           jne 0x4843
0x0000483e      4883c448       add rsp, 0x48
0x00004842      c3             ret
0x00004843      e8a8ceffff     call sym.imp.__stack_chk_fail
0x00004848      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004850      400fbed6       movsx edx, sil
0x00004854      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000485b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004860      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004865      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000486c      e93fffffff     jmp sym.quotearg_char_mem
0x00004871      0f1f440000     nop dword [rax + rax]
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004880      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004885      e926ffffff     jmp sym.quotearg_char_mem
0x0000488a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004890      4883ec48       sub rsp, 0x48
0x00004894      4889d0         mov rax, rdx
0x00004897      64488b142528.  mov rdx, qword fs:[0x28]
0x000048a0      4889542438     mov qword [rsp + 0x38], rdx
0x000048a5      31d2           xor edx, edx
0x000048a7      83fe0a         cmp esi, 0xa
0x000048aa      7468           je 0x4914
0x000048ac      893424         mov dword [rsp], esi
0x000048af      4889e1         mov rcx, rsp
0x000048b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000048b9      4889c6         mov rsi, rax
0x000048bc      48c744240400.  mov qword [rsp + 4], 0
0x000048c5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000048ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000048d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000048e0      48c744242400.  mov qword [rsp + 0x24], 0
0x000048e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000048f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000048fa      e821f8ffff     call sym.quotearg_n_options
0x000048ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004904      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000490d      750a           jne 0x4919
0x0000490f      4883c448       add rsp, 0x48
0x00004913      c3             ret
0x00004914      e817cdffff     call sym.imp.abort
0x00004919      e8d2cdffff     call sym.imp.__stack_chk_fail
0x0000491e      6690           nop
;-- quotearg_n_custom_mem:
0x00004920      4883ec48       sub rsp, 0x48
0x00004924      4989c9         mov r9, rcx
0x00004927      488b0d624920.  mov rcx, qword [0x00209290]             ; [0x209290:8]=0
0x0000492e      660f6f052a49.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004936      64488b042528.  mov rax, qword fs:[0x28]
0x0000493f      4889442438     mov qword [rsp + 0x38], rax
0x00004944      31c0           xor eax, eax
0x00004946      0f290424       movaps xmmword [rsp], xmm0
0x0000494a      4885f6         test rsi, rsi
0x0000494d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004952      c704240a0000.  mov dword [rsp], 0xa
0x00004959      660f6f050f49.  movdqa xmm0, xmmword [0x00209270]
0x00004961      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004966      660f6f051249.  movdqa xmm0, xmmword [0x00209280]
0x0000496e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004973      7432           je 0x49a7
0x00004975      4885d2         test rdx, rdx
0x00004978      742d           je 0x49a7
0x0000497a      4889742428     mov qword [rsp + 0x28], rsi
0x0000497f      4889542430     mov qword [rsp + 0x30], rdx
0x00004984      4889e1         mov rcx, rsp
0x00004987      4c89c2         mov rdx, r8
0x0000498a      4c89ce         mov rsi, r9
0x0000498d      e88ef7ffff     call sym.quotearg_n_options
0x00004992      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004997      6448333c2528.  xor rdi, qword fs:[0x28]
0x000049a0      750a           jne 0x49ac
0x000049a2      4883c448       add rsp, 0x48
0x000049a6      c3             ret
0x000049a7      e884ccffff     call sym.imp.abort
0x000049ac      e83fcdffff     call sym.imp.__stack_chk_fail
0x000049b1      0f1f440000     nop dword [rax + rax]
0x000049b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000049c0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000049c7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000049cc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000049d0      4889d1         mov rcx, rdx
0x000049d3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000049da      4889f2         mov rdx, rsi
0x000049dd      4889fe         mov rsi, rdi
0x000049e0      31ff           xor edi, edi
0x000049e2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000049e7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000049f0      4989c8         mov r8, rcx
0x000049f3      4889d1         mov rcx, rdx
0x000049f6      4889f2         mov rdx, rsi
0x000049f9      4889fe         mov rsi, rdi
0x000049fc      31ff           xor edi, edi
0x000049fe      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004a03      0f1f00         nop dword [rax]
0x00004a06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004a10      488d0d294620.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004a17      e904f7ffff     jmp sym.quotearg_n_options
0x00004a1c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004a20      488d0d194620.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004a27      4889f2         mov rdx, rsi
0x00004a2a      4889fe         mov rsi, rdi
0x00004a2d      31ff           xor edi, edi
0x00004a2f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004a34      6690           nop
0x00004a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004a40      488d0df94520.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004a47      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a4e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004a53      0f1f00         nop dword [rax]
0x00004a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004a60      488d0dd94520.  lea rcx, obj.quote_quoting_options      ; 0x209040
0x00004a67      4889fe         mov rsi, rdi
0x00004a6a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004a71      31ff           xor edi, edi
0x00004a73      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004a78      0f1f84000000.  nop dword [rax + rax]
;-- parse_with_separator:
0x00004a80      4157           push r15
0x00004a82      4156           push r14
0x00004a84      4989f2         mov r10, rsi
0x00004a87      4155           push r13
0x00004a89      4154           push r12
0x00004a8b      4989cc         mov r12, rcx
0x00004a8e      55             push rbp
0x00004a8f      53             push rbx
0x00004a90      4d89c5         mov r13, r8
0x00004a93      4d89ce         mov r14, r9
0x00004a96      41bfffffffff   mov r15d, 0xffffffff                    ; -1
0x00004a9c      4883ec58       sub rsp, 0x58
0x00004aa0      8b02           mov eax, dword [rdx]
0x00004aa2      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004aab      48894c2448     mov qword [rsp + 0x48], rcx
0x00004ab0      31c9           xor ecx, ecx
0x00004ab2      4d85e4         test r12, r12
0x00004ab5      4889542410     mov qword [rsp + 0x10], rdx
0x00004aba      89442418       mov dword [rsp + 0x18], eax
0x00004abe      7404           je 0x4ac4
0x00004ac0      458b3c24       mov r15d, dword [r12]
0x00004ac4      4d85ed         test r13, r13
0x00004ac7      7408           je 0x4ad1
0x00004ac9      49c745000000.  mov qword [r13], 0
0x00004ad1      4d85f6         test r14, r14
0x00004ad4      7407           je 0x4add
0x00004ad6      49c706000000.  mov qword [r14], 0
0x00004add      4d85d2         test r10, r10
0x00004ae0      0f8492010000   je 0x4c78
0x00004ae6      4c89d3         mov rbx, r10
0x00004ae9      4829fb         sub rbx, rdi
0x00004aec      0f85ce000000   jne 0x4bc0
0x00004af2      41807a0100     cmp byte [r10 + 1], 0
0x00004af7      0f840b020000   je 0x4d08
0x00004afd      4983c201       add r10, 1
0x00004b01      48c704240000.  mov qword [rsp], 0
0x00004b09      0f9544241e     setne byte [rsp + 0x1e]
0x00004b0e      4c89542408     mov qword [rsp + 8], r10
0x00004b13      31ed           xor ebp, ebp
0x00004b15      31db           xor ebx, ebx
0x00004b17      807c241e00     cmp byte [rsp + 0x1e], 0
0x00004b1c      0f84ee020000   je 0x4e10
0x00004b22      488b442408     mov rax, qword [rsp + 8]
0x00004b27      80382b         cmp byte [rax], 0x2b
0x00004b2a      0f8470010000   je 0x4ca0
0x00004b30      488b7c2408     mov rdi, qword [rsp + 8]
0x00004b35      e8c6ccffff     call sym.imp.getgrnam
0x00004b3a      4885c0         test rax, rax
0x00004b3d      0f845d010000   je 0x4ca0
0x00004b43      448b7810       mov r15d, dword [rax + 0x10]
0x00004b47      e8b4caffff     call sym.imp.endgrent
0x00004b4c      488b7c2408     mov rdi, qword [rsp + 8]
0x00004b51      e81a0c0000     call sym.xstrdup
0x00004b56      4889c3         mov rbx, rax
0x00004b59      4989ea         mov r10, rbp
0x00004b5c      488b442410     mov rax, qword [rsp + 0x10]
0x00004b61      8b742418       mov esi, dword [rsp + 0x18]
0x00004b65      4d85e4         test r12, r12
0x00004b68      8930           mov dword [rax], esi
0x00004b6a      7404           je 0x4b70
0x00004b6c      45893c24       mov dword [r12], r15d
0x00004b70      4d85ed         test r13, r13
0x00004b73      7407           je 0x4b7c
0x00004b75      4d895500       mov qword [r13], r10
0x00004b79      4531d2         xor r10d, r10d
0x00004b7c      4d85f6         test r14, r14
0x00004b7f      7405           je 0x4b86
0x00004b81      49891e         mov qword [r14], rbx
0x00004b84      31db           xor ebx, ebx
0x00004b86      4c89d7         mov rdi, r10
0x00004b89      e892caffff     call sym.imp.free
0x00004b8e      4889df         mov rdi, rbx
0x00004b91      e88acaffff     call sym.imp.free
0x00004b96      31c0           xor eax, eax
0x00004b98      488b542448     mov rdx, qword [rsp + 0x48]
0x00004b9d      644833142528.  xor rdx, qword fs:[0x28]
0x00004ba6      0f8589020000   jne 0x4e35
0x00004bac      4883c458       add rsp, 0x58
0x00004bb0      5b             pop rbx
0x00004bb1      5d             pop rbp
0x00004bb2      415c           pop r12
0x00004bb4      415d           pop r13
0x00004bb6      415e           pop r14
0x00004bb8      415f           pop r15
0x00004bba      c3             ret
0x00004bbb      0f1f440000     nop dword [rax + rax]
0x00004bc0      488d7301       lea rsi, [rbx + 1]
0x00004bc4      4c891424       mov qword [rsp], r10
0x00004bc8      e8730b0000     call sym.xmemdup
0x00004bcd      4c8b1424       mov r10, qword [rsp]
0x00004bd1      c6041800       mov byte [rax + rbx], 0
0x00004bd5      4889c5         mov rbp, rax
0x00004bd8      41807a0100     cmp byte [r10 + 1], 0
0x00004bdd      0f854d010000   jne 0x4d30
0x00004be3      4885ed         test rbp, rbp
0x00004be6      0f841c010000   je 0x4d08
0x00004bec      c644241e00     mov byte [rsp + 0x1e], 0
0x00004bf1      b801000000     mov eax, 1
0x00004bf6      48c744240800.  mov qword [rsp + 8], 0
0x00004bff      4d85d2         test r10, r10
0x00004c02      410f95c1       setne r9b
0x00004c06      4121c1         and r9d, eax
0x00004c09      807d002b       cmp byte [rbp], 0x2b
0x00004c0d      7441           je 0x4c50
0x00004c0f      4889ef         mov rdi, rbp
0x00004c12      44880c24       mov byte [rsp], r9b
0x00004c16      e8c5cbffff     call sym.imp.getpwnam
0x00004c1b      4885c0         test rax, rax
0x00004c1e      440fb60c24     movzx r9d, byte [rsp]
0x00004c23      742b           je 0x4c50
0x00004c25      8b4810         mov ecx, dword [rax + 0x10]
0x00004c28      31db           xor ebx, ebx
0x00004c2a      4584c9         test r9b, r9b
0x00004c2d      48c704240000.  mov qword [rsp], 0
0x00004c35      894c2418       mov dword [rsp + 0x18], ecx
0x00004c39      0f8519010000   jne 0x4d58
0x00004c3f      e82cccffff     call sym.imp.endpwent
0x00004c44      e9cefeffff     jmp 0x4b17
0x00004c49      0f1f80000000.  nop dword [rax]
0x00004c50      4584c9         test r9b, r9b
0x00004c53      0f8437010000   je 0x4d90
0x00004c59      488d05552200.  lea rax, str.invalid_spec               ; 0x6eb5 ; "invalid spec"
0x00004c60      c644241e00     mov byte [rsp + 0x1e], 0
0x00004c65      31db           xor ebx, ebx
0x00004c67      48890424       mov qword [rsp], rax
0x00004c6b      e800ccffff     call sym.imp.endpwent
0x00004c70      e9a2feffff     jmp 0x4b17
0x00004c75      0f1f00         nop dword [rax]
0x00004c78      31db           xor ebx, ebx
0x00004c7a      803f00         cmp byte [rdi], 0
0x00004c7d      0f84d9feffff   je 0x4b5c
0x00004c83      4c891424       mov qword [rsp], r10
0x00004c87      e8e40a0000     call sym.xstrdup
0x00004c8c      4c8b1424       mov r10, qword [rsp]
0x00004c90      4889c5         mov rbp, rax
0x00004c93      e94bffffff     jmp 0x4be3
0x00004c98      0f1f84000000.  nop dword [rax + rax]
0x00004ca0      488b7c2408     mov rdi, qword [rsp + 8]
0x00004ca5      488d4c2428     lea rcx, [rsp + 0x28]
0x00004caa      4c8d05782200.  lea r8, [0x00006f29]
0x00004cb1      31f6           xor esi, esi
0x00004cb3      ba0a000000     mov edx, 0xa
0x00004cb8      e8430b0000     call sym.xstrtoul
0x00004cbd      85c0           test eax, eax
0x00004cbf      7457           je 0x4d18
0x00004cc1      e83ac9ffff     call sym.imp.endgrent
0x00004cc6      488b7c2408     mov rdi, qword [rsp + 8]
0x00004ccb      e8a00a0000     call sym.xstrdup
0x00004cd0      4889c3         mov rbx, rax
0x00004cd3      488d05e82100.  lea rax, str.invalid_group              ; 0x6ec2 ; "invalid group"
0x00004cda      48890424       mov qword [rsp], rax
0x00004cde      4889ef         mov rdi, rbp
0x00004ce1      e83ac9ffff     call sym.imp.free
0x00004ce6      4889df         mov rdi, rbx
0x00004ce9      e832c9ffff     call sym.imp.free
0x00004cee      488b3424       mov rsi, qword [rsp]
0x00004cf2      ba05000000     mov edx, 5
0x00004cf7      31ff           xor edi, edi
0x00004cf9      e8c2c9ffff     call sym.imp.dcgettext
0x00004cfe      e995feffff     jmp 0x4b98
0x00004d03      0f1f440000     nop dword [rax + rax]
0x00004d08      4531d2         xor r10d, r10d
0x00004d0b      31db           xor ebx, ebx
0x00004d0d      e94afeffff     jmp 0x4b5c
0x00004d12      660f1f440000   nop word [rax + rax]
0x00004d18      488b442428     mov rax, qword [rsp + 0x28]
0x00004d1d      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00004d22      4839d0         cmp rax, rdx
0x00004d25      4189c7         mov r15d, eax
0x00004d28      0f8619feffff   jbe 0x4b47
0x00004d2e      eb91           jmp 0x4cc1
0x00004d30      4c89d0         mov rax, r10
0x00004d33      4883c001       add rax, 1
0x00004d37      0f9544241e     setne byte [rsp + 0x1e]
0x00004d3c      4885ed         test rbp, rbp
0x00004d3f      4889442408     mov qword [rsp + 8], rax
0x00004d44      0f84f0000000   je 0x4e3a
0x00004d4a      4885c0         test rax, rax
0x00004d4d      0f94c0         sete al
0x00004d50      e9aafeffff     jmp 0x4bff
0x00004d55      0f1f00         nop dword [rax]
0x00004d58      448b7814       mov r15d, dword [rax + 0x14]
0x00004d5c      4489ff         mov edi, r15d
0x00004d5f      e8dcc9ffff     call sym.imp.getgrgid
0x00004d64      4885c0         test rax, rax
0x00004d67      0f84b3000000   je 0x4e20
0x00004d6d      488b38         mov rdi, qword [rax]
0x00004d70      e8fb090000     call sym.xstrdup
0x00004d75      4889c3         mov rbx, rax
0x00004d78      e883c8ffff     call sym.imp.endgrent
0x00004d7d      48c704240000.  mov qword [rsp], 0
0x00004d85      e9b5feffff     jmp 0x4c3f
0x00004d8a      660f1f440000   nop word [rax + rax]
0x00004d90      488d4c2428     lea rcx, [rsp + 0x28]
0x00004d95      4c8d058d2100.  lea r8, [0x00006f29]
0x00004d9c      31f6           xor esi, esi
0x00004d9e      ba0a000000     mov edx, 0xa
0x00004da3      4889ef         mov rdi, rbp
0x00004da6      44884c241f     mov byte [rsp + 0x1f], r9b
0x00004dab      e8500a0000     call sym.xstrtoul
0x00004db0      488d35f12000.  lea rsi, [0x00006ea8]                   ; "invalid user"
0x00004db7      85c0           test eax, eax
0x00004db9      440fb64c241f   movzx r9d, byte [rsp + 0x1f]
0x00004dbf      48893424       mov qword [rsp], rsi
0x00004dc3      7531           jne 0x4df6
0x00004dc5      488b442428     mov rax, qword [rsp + 0x28]
0x00004dca      0fb64c241e     movzx ecx, byte [rsp + 0x1e]
0x00004dcf      bafeffffff     mov edx, 0xfffffffe                     ; 4294967294
0x00004dd4      4839d0         cmp rax, rdx
0x00004dd7      410f47c9       cmova ecx, r9d
0x00004ddb      4189c9         mov r9d, ecx
0x00004dde      8b4c2418       mov ecx, dword [rsp + 0x18]
0x00004de2      0f46c8         cmovbe ecx, eax
0x00004de5      b800000000     mov eax, 0
0x00004dea      480f47c6       cmova rax, rsi
0x00004dee      894c2418       mov dword [rsp + 0x18], ecx
0x00004df2      48890424       mov qword [rsp], rax
0x00004df6      44884c241e     mov byte [rsp + 0x1e], r9b
0x00004dfb      31db           xor ebx, ebx
0x00004dfd      e86ecaffff     call sym.imp.endpwent
0x00004e02      e910fdffff     jmp 0x4b17
0x00004e07      660f1f840000.  nop word [rax + rax]
0x00004e10      48833c2400     cmp qword [rsp], 0
0x00004e15      0f85c3feffff   jne 0x4cde
0x00004e1b      e939fdffff     jmp 0x4b59
0x00004e20      488d742430     lea rsi, [rsp + 0x30]
0x00004e25      4489ff         mov edi, r15d
0x00004e28      e8d3deffff     call sym.umaxtostr
0x00004e2d      4889c7         mov rdi, rax
0x00004e30      e93bffffff     jmp 0x4d70
0x00004e35      e8b6c8ffff     call sym.imp.__stack_chk_fail
0x00004e3a      31db           xor ebx, ebx
0x00004e3c      48c704240000.  mov qword [rsp], 0
0x00004e44      e9cefcffff     jmp 0x4b17
0x00004e49      0f1f80000000.  nop dword [rax]
;-- parse_user_spec:
0x00004e50      4885d2         test rdx, rdx
0x00004e53      0f84a7000000   je 0x4f00
0x00004e59      4157           push r15
0x00004e5b      4156           push r14
0x00004e5d      4989f6         mov r14, rsi
0x00004e60      4155           push r13
0x00004e62      4154           push r12
0x00004e64      4d89c5         mov r13, r8
0x00004e67      55             push rbp
0x00004e68      53             push rbx
0x00004e69      4989cc         mov r12, rcx
0x00004e6c      4889d5         mov rbp, rdx
0x00004e6f      4889fb         mov rbx, rdi
0x00004e72      be3a000000     mov esi, 0x3a                           ; ':'
0x00004e77      4883ec18       sub rsp, 0x18
0x00004e7b      e8b0c8ffff     call sym.imp.strchr
0x00004e80      4d89e9         mov r9, r13
0x00004e83      4989c7         mov r15, rax
0x00004e86      4d89e0         mov r8, r12
0x00004e89      4889e9         mov rcx, rbp
0x00004e8c      4c89f2         mov rdx, r14
0x00004e8f      4889c6         mov rsi, rax
0x00004e92      4889df         mov rdi, rbx
0x00004e95      e8e6fbffff     call sym.parse_with_separator
0x00004e9a      4d85ff         test r15, r15
0x00004e9d      4989c2         mov r10, rax
0x00004ea0      7542           jne 0x4ee4
0x00004ea2      4885c0         test rax, rax
0x00004ea5      4889442408     mov qword [rsp + 8], rax
0x00004eaa      746c           je 0x4f18
0x00004eac      be2e000000     mov esi, 0x2e                           ; '.'
0x00004eb1      4889df         mov rdi, rbx
0x00004eb4      e877c8ffff     call sym.imp.strchr
0x00004eb9      4885c0         test rax, rax
0x00004ebc      4c8b542408     mov r10, qword [rsp + 8]
0x00004ec1      7421           je 0x4ee4
0x00004ec3      4d89e9         mov r9, r13
0x00004ec6      4d89e0         mov r8, r12
0x00004ec9      4889e9         mov rcx, rbp
0x00004ecc      4c89f2         mov rdx, r14
0x00004ecf      4889c6         mov rsi, rax
0x00004ed2      4889df         mov rdi, rbx
0x00004ed5      e8a6fbffff     call sym.parse_with_separator
0x00004eda      4885c0         test rax, rax
0x00004edd      4c8b542408     mov r10, qword [rsp + 8]
0x00004ee2      7434           je 0x4f18
0x00004ee4      4883c418       add rsp, 0x18
0x00004ee8      4c89d0         mov rax, r10
0x00004eeb      5b             pop rbx
0x00004eec      5d             pop rbp
0x00004eed      415c           pop r12
0x00004eef      415d           pop r13
0x00004ef1      415e           pop r14
0x00004ef3      415f           pop r15
0x00004ef5      c3             ret
0x00004ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004f00      4d89c1         mov r9, r8
0x00004f03      4889f2         mov rdx, rsi
0x00004f06      4989c8         mov r8, rcx
0x00004f09      31f6           xor esi, esi
0x00004f0b      31c9           xor ecx, ecx
0x00004f0d      e96efbffff     jmp sym.parse_with_separator
0x00004f12      660f1f440000   nop word [rax + rax]
0x00004f18      4531d2         xor r10d, r10d
0x00004f1b      ebc7           jmp 0x4ee4
0x00004f1d      0f1f00         nop dword [rax]
;-- version_etc_arn:
0x00004f20      4157           push r15
0x00004f22      4156           push r14
0x00004f24      4155           push r13
0x00004f26      4154           push r12
0x00004f28      4d89cc         mov r12, r9
0x00004f2b      55             push rbp
0x00004f2c      53             push rbx
0x00004f2d      4889fd         mov rbp, rdi
0x00004f30      4c89c3         mov rbx, r8
0x00004f33      4883ec28       sub rsp, 0x28
0x00004f37      4885f6         test rsi, rsi
0x00004f3a      0f8418010000   je 0x5058
0x00004f40      4989d0         mov r8, rdx
0x00004f43      488d15861f00.  lea rdx, str.s___s___s                  ; 0x6ed0 ; "%s (%s) %s\n"
0x00004f4a      4989c9         mov r9, rcx
0x00004f4d      31c0           xor eax, eax
0x00004f4f      4889f1         mov rcx, rsi
0x00004f52      be01000000     mov esi, 1
0x00004f57      e8e4c9ffff     call sym.imp.__fprintf_chk
0x00004f5c      488d35801f00.  lea rsi, [0x00006ee3]                   ; "(C)"
0x00004f63      31ff           xor edi, edi
0x00004f65      ba05000000     mov edx, 5
0x00004f6a      e851c7ffff     call sym.imp.dcgettext
0x00004f6f      488d158a2200.  lea rdx, obj.version_etc_copyright      ; 0x7200 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004f76      4889c1         mov rcx, rax
0x00004f79      41b8e3070000   mov r8d, 0x7e3
0x00004f7f      be01000000     mov esi, 1
0x00004f84      4889ef         mov rdi, rbp
0x00004f87      31c0           xor eax, eax
0x00004f89      e8b2c9ffff     call sym.imp.__fprintf_chk
0x00004f8e      488d35db1f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6f70 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004f95      31ff           xor edi, edi
0x00004f97      ba05000000     mov edx, 5
0x00004f9c      e81fc7ffff     call sym.imp.dcgettext
0x00004fa1      4889ee         mov rsi, rbp
0x00004fa4      4889c7         mov rdi, rax
0x00004fa7      e814c8ffff     call sym.imp.fputs_unlocked
0x00004fac      4983fc09       cmp r12, 9
0x00004fb0      0f873a030000   ja 0x52f0
0x00004fb6      488d150f2200.  lea rdx, [0x000071cc]
0x00004fbd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004fc1      4801d0         add rax, rdx
0x00004fc4      ffe0           jmp rax
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004fd0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004fd4      488b4310       mov rax, qword [rbx + 0x10]
0x00004fd8      488d35012100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x70e0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00004fdf      4c8b4308       mov r8, qword [rbx + 8]
0x00004fe3      ba05000000     mov edx, 5
0x00004fe8      31ff           xor edi, edi
0x00004fea      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004fee      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004ff2      4c894c2410     mov qword [rsp + 0x10], r9
0x00004ff7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004ffb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004fff      48890424       mov qword [rsp], rax
0x00005003      4c89442408     mov qword [rsp + 8], r8
0x00005008      488b1b         mov rbx, qword [rbx]
0x0000500b      e8b0c6ffff     call sym.imp.dcgettext
0x00005010      4883ec08       sub rsp, 8
0x00005014      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005019      4889c2         mov rdx, rax
0x0000501c      4889d9         mov rcx, rbx
0x0000501f      be01000000     mov esi, 1
0x00005024      4889ef         mov rdi, rbp
0x00005027      31c0           xor eax, eax
0x00005029      4151           push r9
0x0000502b      4155           push r13
0x0000502d      4154           push r12
0x0000502f      4157           push r15
0x00005031      4156           push r14
0x00005033      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005038      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000503d      e8fec8ffff     call sym.imp.__fprintf_chk
0x00005042      4883c430       add rsp, 0x30
0x00005046      4883c428       add rsp, 0x28
0x0000504a      5b             pop rbx
0x0000504b      5d             pop rbp
0x0000504c      415c           pop r12
0x0000504e      415d           pop r13
0x00005050      415e           pop r14
0x00005052      415f           pop r15
0x00005054      c3             ret
0x00005055      0f1f00         nop dword [rax]
0x00005058      4989c8         mov r8, rcx
0x0000505b      4889d1         mov rcx, rdx
0x0000505e      488d15771e00.  lea rdx, str.s__s                       ; 0x6edc ; "%s %s\n"
0x00005065      be01000000     mov esi, 1
0x0000506a      31c0           xor eax, eax
0x0000506c      e8cfc8ffff     call sym.imp.__fprintf_chk
0x00005071      e9e6feffff     jmp 0x4f5c
0x00005076      662e0f1f8400.  nop word cs:[rax + rax]
0x00005080      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005084      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005088      488d35812000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7110 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000508f      488b4310       mov rax, qword [rbx + 0x10]
0x00005093      4c8b4308       mov r8, qword [rbx + 8]
0x00005097      ba05000000     mov edx, 5
0x0000509c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000050a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000050a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000050a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000050ac      488b1b         mov rbx, qword [rbx]
0x000050af      4c89542418     mov qword [rsp + 0x18], r10
0x000050b4      4c894c2410     mov qword [rsp + 0x10], r9
0x000050b9      48890424       mov qword [rsp], rax
0x000050bd      4c89442408     mov qword [rsp + 8], r8
0x000050c2      31ff           xor edi, edi
0x000050c4      e8f7c5ffff     call sym.imp.dcgettext
0x000050c9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000050ce      4152           push r10
0x000050d0      e93fffffff     jmp 0x5014
0x000050d5      0f1f00         nop dword [rax]
0x000050d8      488b1b         mov rbx, qword [rbx]
0x000050db      488d35051e00.  lea rsi, str.Written_by__s.             ; 0x6ee7 ; "Written by %s.\n"
0x000050e2      ba05000000     mov edx, 5
0x000050e7      31ff           xor edi, edi
0x000050e9      e8d2c5ffff     call sym.imp.dcgettext
0x000050ee      4883c428       add rsp, 0x28
0x000050f2      4889d9         mov rcx, rbx
0x000050f5      4889ef         mov rdi, rbp
0x000050f8      5b             pop rbx
0x000050f9      5d             pop rbp
0x000050fa      415c           pop r12
0x000050fc      415d           pop r13
0x000050fe      415e           pop r14
0x00005100      415f           pop r15
0x00005102      4889c2         mov rdx, rax
0x00005105      be01000000     mov esi, 1
0x0000510a      31c0           xor eax, eax
0x0000510c      e92fc8ffff     jmp sym.imp.__fprintf_chk
0x00005111      0f1f80000000.  nop dword [rax]
0x00005118      4c8b6308       mov r12, qword [rbx + 8]
0x0000511c      488d35d41d00.  lea rsi, str.Written_by__s_and__s.      ; 0x6ef7 ; "Written by %s and %s.\n"
0x00005123      488b1b         mov rbx, qword [rbx]
0x00005126      ba05000000     mov edx, 5
0x0000512b      31ff           xor edi, edi
0x0000512d      e88ec5ffff     call sym.imp.dcgettext
0x00005132      4883c428       add rsp, 0x28
0x00005136      4d89e0         mov r8, r12
0x00005139      4889d9         mov rcx, rbx
0x0000513c      4889ef         mov rdi, rbp
0x0000513f      4889c2         mov rdx, rax
0x00005142      be01000000     mov esi, 1
0x00005147      5b             pop rbx
0x00005148      5d             pop rbp
0x00005149      415c           pop r12
0x0000514b      415d           pop r13
0x0000514d      415e           pop r14
0x0000514f      415f           pop r15
0x00005151      31c0           xor eax, eax
0x00005153      e9e8c7ffff     jmp sym.imp.__fprintf_chk
0x00005158      0f1f84000000.  nop dword [rax + rax]
0x00005160      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005164      4c8b6308       mov r12, qword [rbx + 8]
0x00005168      488d359f1d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6f0e ; "Written by %s, %s, and %s.\n"
0x0000516f      488b1b         mov rbx, qword [rbx]
0x00005172      ba05000000     mov edx, 5
0x00005177      31ff           xor edi, edi
0x00005179      e842c5ffff     call sym.imp.dcgettext
0x0000517e      4883c428       add rsp, 0x28
0x00005182      4d89e9         mov r9, r13
0x00005185      4d89e0         mov r8, r12
0x00005188      4889d9         mov rcx, rbx
0x0000518b      4889ef         mov rdi, rbp
0x0000518e      4889c2         mov rdx, rax
0x00005191      5b             pop rbx
0x00005192      5d             pop rbp
0x00005193      415c           pop r12
0x00005195      415d           pop r13
0x00005197      415e           pop r14
0x00005199      415f           pop r15
0x0000519b      be01000000     mov esi, 1
0x000051a0      31c0           xor eax, eax
0x000051a2      e999c7ffff     jmp sym.imp.__fprintf_chk
0x000051a7      660f1f840000.  nop word [rax + rax]
0x000051b0      488d35891e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7040 ; "Written by %s, %s, %s,\nand %s.\n"
0x000051b7      ba05000000     mov edx, 5
0x000051bc      31ff           xor edi, edi
0x000051be      4c8b7318       mov r14, qword [rbx + 0x18]
0x000051c2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051c6      4c8b6308       mov r12, qword [rbx + 8]
0x000051ca      488b1b         mov rbx, qword [rbx]
0x000051cd      e8eec4ffff     call sym.imp.dcgettext
0x000051d2      4883ec08       sub rsp, 8
0x000051d6      4156           push r14
0x000051d8      4889c2         mov rdx, rax
0x000051db      4d89e9         mov r9, r13
0x000051de      4d89e0         mov r8, r12
0x000051e1      4889d9         mov rcx, rbx
0x000051e4      4889ef         mov rdi, rbp
0x000051e7      be01000000     mov esi, 1
0x000051ec      31c0           xor eax, eax
0x000051ee      e84dc7ffff     call sym.imp.__fprintf_chk
0x000051f3      58             pop rax
0x000051f4      5a             pop rdx
0x000051f5      4883c428       add rsp, 0x28
0x000051f9      5b             pop rbx
0x000051fa      5d             pop rbp
0x000051fb      415c           pop r12
0x000051fd      415d           pop r13
0x000051ff      415e           pop r14
0x00005201      415f           pop r15
0x00005203      c3             ret
0x00005204      0f1f4000       nop dword [rax]
0x00005208      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000520c      488d354d1e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7060 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005213      ba05000000     mov edx, 5
0x00005218      31ff           xor edi, edi
0x0000521a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000521e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005222      4c8b6308       mov r12, qword [rbx + 8]
0x00005226      488b1b         mov rbx, qword [rbx]
0x00005229      e892c4ffff     call sym.imp.dcgettext
0x0000522e      4157           push r15
0x00005230      eba4           jmp 0x51d6
0x00005232      660f1f440000   nop word [rax + rax]
0x00005238      4c8b4308       mov r8, qword [rbx + 8]
0x0000523c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005240      488d35411e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7088 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005247      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000524b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000524f      ba05000000     mov edx, 5
0x00005254      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005258      31ff           xor edi, edi
0x0000525a      488b1b         mov rbx, qword [rbx]
0x0000525d      4c890424       mov qword [rsp], r8
0x00005261      e85ac4ffff     call sym.imp.dcgettext
0x00005266      4883ec08       sub rsp, 8
0x0000526a      4d89e9         mov r9, r13
0x0000526d      4154           push r12
0x0000526f      4157           push r15
0x00005271      4156           push r14
0x00005273      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005278      4889d9         mov rcx, rbx
0x0000527b      4889c2         mov rdx, rax
0x0000527e      4889ef         mov rdi, rbp
0x00005281      be01000000     mov esi, 1
0x00005286      31c0           xor eax, eax
0x00005288      e8b3c6ffff     call sym.imp.__fprintf_chk
0x0000528d      4883c420       add rsp, 0x20
0x00005291      4883c428       add rsp, 0x28
0x00005295      5b             pop rbx
0x00005296      5d             pop rbp
0x00005297      415c           pop r12
0x00005299      415d           pop r13
0x0000529b      415e           pop r14
0x0000529d      415f           pop r15
0x0000529f      c3             ret
0x000052a0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000052a4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000052a8      488d35011e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x70b0 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000052af      4c8b6328       mov r12, qword [rbx + 0x28]
0x000052b3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000052b7      ba05000000     mov edx, 5
0x000052bc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000052c0      4c8b4308       mov r8, qword [rbx + 8]
0x000052c4      31ff           xor edi, edi
0x000052c6      4c894c2408     mov qword [rsp + 8], r9
0x000052cb      488b1b         mov rbx, qword [rbx]
0x000052ce      4c890424       mov qword [rsp], r8
0x000052d2      e8e9c3ffff     call sym.imp.dcgettext
0x000052d7      4155           push r13
0x000052d9      4154           push r12
0x000052db      4157           push r15
0x000052dd      4156           push r14
0x000052df      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000052e4      eb8d           jmp 0x5273
0x000052e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000052f0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000052f4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000052f8      ba05000000     mov edx, 5
0x000052fd      488b4310       mov rax, qword [rbx + 0x10]
0x00005301      4c8b4308       mov r8, qword [rbx + 8]
0x00005305      488d353c1e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7148 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000530c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005310      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005314      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005318      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000531c      4c89542418     mov qword [rsp + 0x18], r10
0x00005321      4c894c2410     mov qword [rsp + 0x10], r9
0x00005326      48890424       mov qword [rsp], rax
0x0000532a      4c89442408     mov qword [rsp + 8], r8
0x0000532f      488b1b         mov rbx, qword [rbx]
0x00005332      e98bfdffff     jmp 0x50c2
0x00005337      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005340      4531c9         xor r9d, r9d
0x00005343      49833800       cmp qword [r8], 0
0x00005347      7412           je 0x535b
0x00005349      0f1f80000000.  nop dword [rax]
0x00005350      4983c101       add r9, 1
0x00005354      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005359      75f5           jne 0x5350
0x0000535b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005360      4883ec68       sub rsp, 0x68
0x00005364      4d89c2         mov r10, r8
0x00005367      4531c9         xor r9d, r9d
0x0000536a      64488b042528.  mov rax, qword fs:[0x28]
0x00005373      4889442458     mov qword [rsp + 0x58], rax
0x00005378      31c0           xor eax, eax
0x0000537a      4989e0         mov r8, rsp
0x0000537d      0f1f00         nop dword [rax]
0x00005380      418b02         mov eax, dword [r10]
0x00005383      83f82f         cmp eax, 0x2f
0x00005386      7742           ja 0x53ca
0x00005388      4189c3         mov r11d, eax
0x0000538b      4d035a10       add r11, qword [r10 + 0x10]
0x0000538f      83c008         add eax, 8
0x00005392      418902         mov dword [r10], eax
0x00005395      498b03         mov rax, qword [r11]
0x00005398      4885c0         test rax, rax
0x0000539b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000539f      740a           je 0x53ab
0x000053a1      4983c101       add r9, 1
0x000053a5      4983f90a       cmp r9, 0xa
0x000053a9      75d5           jne 0x5380
0x000053ab      e870fbffff     call sym.version_etc_arn
0x000053b0      488b442458     mov rax, qword [rsp + 0x58]
0x000053b5      644833042528.  xor rax, qword fs:[0x28]
0x000053be      7505           jne 0x53c5
0x000053c0      4883c468       add rsp, 0x68
0x000053c4      c3             ret
0x000053c5      e826c3ffff     call sym.imp.__stack_chk_fail
0x000053ca      4d8b5a08       mov r11, qword [r10 + 8]
0x000053ce      498d4308       lea rax, [r11 + 8]
0x000053d2      49894208       mov qword [r10 + 8], rax
0x000053d6      ebbd           jmp 0x5395
0x000053d8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000053e0      55             push rbp
0x000053e1      53             push rbx
0x000053e2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000053e8      4531db         xor r11d, r11d
0x000053eb      4881ecb80000.  sub rsp, 0xb8
0x000053f2      64488b042528.  mov rax, qword fs:[0x28]
0x000053fb      4889442478     mov qword [rsp + 0x78], rax
0x00005400      31c0           xor eax, eax
0x00005402      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000540a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005412      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000541a      4c8d442420     lea r8, [rsp + 0x20]
0x0000541f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005427      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000542f      4889442410     mov qword [rsp + 0x10], rax
0x00005434      488d84248000.  lea rax, [rsp + 0x80]
0x0000543c      4531c9         xor r9d, r9d
0x0000543f      4889442418     mov qword [rsp + 0x18], rax
0x00005444      4889c5         mov rbp, rax
0x00005447      660f1f840000.  nop word [rax + rax]
0x00005450      4183fa2f       cmp r10d, 0x2f
0x00005454      7756           ja 0x54ac
0x00005456      4489d0         mov eax, r10d
0x00005459      41bb01000000   mov r11d, 1
0x0000545f      4183c208       add r10d, 8
0x00005463      4801e8         add rax, rbp
0x00005466      488b00         mov rax, qword [rax]
0x00005469      4885c0         test rax, rax
0x0000546c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005470      740a           je 0x547c
0x00005472      4983c101       add r9, 1
0x00005476      4983f90a       cmp r9, 0xa
0x0000547a      75d4           jne 0x5450
0x0000547c      4584db         test r11b, r11b
0x0000547f      7524           jne 0x54a5
0x00005481      e89afaffff     call sym.version_etc_arn
0x00005486      488b442478     mov rax, qword [rsp + 0x78]
0x0000548b      644833042528.  xor rax, qword fs:[0x28]
0x00005494      750a           jne 0x54a0
0x00005496      4881c4b80000.  add rsp, 0xb8
0x0000549d      5b             pop rbx
0x0000549e      5d             pop rbp
0x0000549f      c3             ret
0x000054a0      e84bc2ffff     call sym.imp.__stack_chk_fail
0x000054a5      4489542408     mov dword [rsp + 8], r10d
0x000054aa      ebd5           jmp 0x5481
0x000054ac      4889d8         mov rax, rbx
0x000054af      4883c308       add rbx, 8
0x000054b3      ebb1           jmp 0x5466
0x000054b5      90             nop
0x000054b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000054c0      53             push rbx
0x000054c1      488d35621a00.  lea rsi, str.Report_bugs_to:__s         ; 0x6f2a ; "\nReport bugs to: %s\n"
0x000054c8      ba05000000     mov edx, 5
0x000054cd      31ff           xor edi, edi
0x000054cf      e8ecc1ffff     call sym.imp.dcgettext
0x000054d4      488d15641a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6f3f ; "bug-coreutils@gnu.org"
0x000054db      4889c6         mov rsi, rax
0x000054de      bf01000000     mov edi, 1
0x000054e3      31c0           xor eax, eax
0x000054e5      e8d6c3ffff     call sym.imp.__printf_chk
0x000054ea      488d35641a00.  lea rsi, str.s_home_page:___s           ; 0x6f55 ; "%s home page: <%s>\n"
0x000054f1      ba05000000     mov edx, 5
0x000054f6      31ff           xor edi, edi
0x000054f8      e8c3c1ffff     call sym.imp.dcgettext
0x000054fd      488d0d1c1100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6620 ; "https://www.gnu.org/software/coreutils/"
0x00005504      488d152c1300.  lea rdx, str.GNU_coreutils              ; 0x6837 ; "GNU coreutils"
0x0000550b      4889c6         mov rsi, rax
0x0000550e      bf01000000     mov edi, 1
0x00005513      31c0           xor eax, eax
0x00005515      e8a6c3ffff     call sym.imp.__printf_chk
0x0000551a      488b1d873b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00005521      488d35601c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7188 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005528      31ff           xor edi, edi
0x0000552a      ba05000000     mov edx, 5
0x0000552f      e88cc1ffff     call sym.imp.dcgettext
0x00005534      4889de         mov rsi, rbx
0x00005537      4889c7         mov rdi, rax
0x0000553a      5b             pop rbx
0x0000553b      e980c2ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005540      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005541      4889fb         mov rbx, rdi
0x00005544      e8f7c2ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005549      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000554c      7505           jne 0x5553
0x0000554e      4885db         test rbx, rbx
0x00005551      7502           jne 0x5555
0x00005553      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005554      c3             ret
0x00005555      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000555a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005560      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005563      48f7e6         mul rsi
0x00005566      4889c7         mov rdi, rax
0x00005569      0f90c0         seto al
0x0000556c      4885ff         test rdi, rdi
0x0000556f      780a           js 0x557b
0x00005571      0fb6c0         movzx eax, al
0x00005574      4885c0         test rax, rax
0x00005577      7502           jne 0x557b
0x00005579      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000557b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000557f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005584      6690           nop
0x00005586      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005590      ebae           jmp sym.xmalloc
0x00005592      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005596      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000055a0      4885f6         test rsi, rsi
0x000055a3      53             push rbx
0x000055a4      4889f3         mov rbx, rsi
0x000055a7      7505           jne 0x55ae
0x000055a9      4885ff         test rdi, rdi
0x000055ac      751a           jne 0x55c8
0x000055ae      4889de         mov rsi, rbx
0x000055b1      e8eac2ffff     call sym.imp.realloc
0x000055b6      4885c0         test rax, rax
0x000055b9      7505           jne 0x55c0
0x000055bb      4885db         test rbx, rbx
0x000055be      7511           jne 0x55d1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000055c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000055c1      c3             ret
0x000055c2      660f1f440000   nop word [rax + rax]
0x000055c8      e853c0ffff     call sym.imp.free
0x000055cd      31c0           xor eax, eax
0x000055cf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000055d0      c3             ret
0x000055d1      e8ba010000     call sym.xalloc_die
0x000055d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000055e0      4889f0         mov rax, rsi
0x000055e3      48f7e2         mul rdx
0x000055e6      4889c6         mov rsi, rax
0x000055e9      0f90c0         seto al
0x000055ec      4885f6         test rsi, rsi
0x000055ef      780a           js 0x55fb
0x000055f1      0fb6c0         movzx eax, al
0x000055f4      4885c0         test rax, rax
0x000055f7      7502           jne 0x55fb
0x000055f9      eba5           jmp sym.xrealloc
0x000055fb      4883ec08       sub rsp, 8
0x000055ff      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005604      6690           nop
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005610      4885ff         test rdi, rdi
0x00005613      4989d1         mov r9, rdx
0x00005616      488b0e         mov rcx, qword [rsi]
0x00005619      7435           je 0x5650
0x0000561b      31d2           xor edx, edx
0x0000561d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005627      49f7f1         div r9
0x0000562a      4839c8         cmp rax, rcx
0x0000562d      763c           jbe 0x566b
0x0000562f      4889c8         mov rax, rcx
0x00005632      48d1e8         shr rax, 1
0x00005635      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000563a      48890e         mov qword [rsi], rcx
0x0000563d      490fafc9       imul rcx, r9
0x00005641      4889ce         mov rsi, rcx
0x00005644      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005649      0f1f80000000.  nop dword [rax]
0x00005650      4885c9         test rcx, rcx
0x00005653      7423           je 0x5678
0x00005655      4889c8         mov rax, rcx
0x00005658      49f7e1         mul r9
0x0000565b      0f90c2         seto dl
0x0000565e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005661      0fb6d2         movzx edx, dl
0x00005664      7805           js 0x566b
0x00005666      4885d2         test rdx, rdx
0x00005669      74cf           je 0x563a
0x0000566b      4883ec08       sub rsp, 8
0x0000566f      e81c010000     call sym.xalloc_die
0x00005674      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005678      31d2           xor edx, edx
0x0000567a      b880000000     mov eax, 0x80
0x0000567f      4531c0         xor r8d, r8d
0x00005682      49f7f1         div r9
0x00005685      4885c0         test rax, rax
0x00005688      410f94c0       sete r8b
0x0000568c      498d0c00       lea rcx, [r8 + rax]
0x00005690      ebc3           jmp 0x5655
0x00005692      0f1f4000       nop dword [rax]
0x00005696      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000056a0      4885ff         test rdi, rdi
0x000056a3      488b06         mov rax, qword [rsi]
0x000056a6      7428           je 0x56d0
0x000056a8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000056b2      4839d0         cmp rax, rdx
0x000056b5      772a           ja 0x56e1
0x000056b7      4889c2         mov rdx, rax
0x000056ba      48d1ea         shr rdx, 1
0x000056bd      488d440201     lea rax, [rdx + rax + 1]
0x000056c2      488906         mov qword [rsi], rax
0x000056c5      4889c6         mov rsi, rax
0x000056c8      e9d3feffff     jmp sym.xrealloc
0x000056cd      0f1f00         nop dword [rax]
0x000056d0      4885c0         test rax, rax
0x000056d3      ba80000000     mov edx, 0x80
0x000056d8      480f44c2       cmove rax, rdx
0x000056dc      4885c0         test rax, rax
0x000056df      79e1           jns 0x56c2
0x000056e1      4883ec08       sub rsp, 8
0x000056e5      e8a6000000     call sym.xalloc_die
0x000056ea      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000056f0      53             push rbx
0x000056f1      4889fb         mov rbx, rdi
0x000056f4      e847feffff     call sym.xmalloc
0x000056f9      4889da         mov rdx, rbx
0x000056fc      31f6           xor esi, esi
0x000056fe      4889c7         mov rdi, rax
0x00005701      5b             pop rbx
0x00005702      e989c0ffff     jmp sym.imp.memset
0x00005707      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005710      4889f8         mov rax, rdi
0x00005713      4883ec08       sub rsp, 8
0x00005717      48f7e6         mul rsi
0x0000571a      0f90c2         seto dl
0x0000571d      4885c0         test rax, rax
0x00005720      7817           js 0x5739
0x00005722      0fb6d2         movzx edx, dl
0x00005725      4885d2         test rdx, rdx
0x00005728      750f           jne 0x5739
0x0000572a      e8a1c0ffff     call sym.imp.calloc
0x0000572f      4885c0         test rax, rax
0x00005732      7405           je 0x5739
0x00005734      4883c408       add rsp, 8
0x00005738      c3             ret
0x00005739      e852000000     call sym.xalloc_die
0x0000573e      6690           nop
;-- xmemdup:
0x00005740      55             push rbp
0x00005741      53             push rbx
0x00005742      4889fd         mov rbp, rdi
0x00005745      4889f7         mov rdi, rsi
0x00005748      4889f3         mov rbx, rsi
0x0000574b      4883ec08       sub rsp, 8
0x0000574f      e8ecfdffff     call sym.xmalloc
0x00005754      4883c408       add rsp, 8
0x00005758      4889da         mov rdx, rbx
0x0000575b      4889ee         mov rsi, rbp
0x0000575e      5b             pop rbx
0x0000575f      5d             pop rbp
0x00005760      4889c7         mov rdi, rax
0x00005763      e988c0ffff     jmp sym.imp.memcpy
0x00005768      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005770      53             push rbx
0x00005771      4889fb         mov rbx, rdi
0x00005774      e867bfffff     call sym.imp.strlen
0x00005779      4889df         mov rdi, rbx
0x0000577c      488d7001       lea rsi, [rax + 1]
0x00005780      5b             pop rbx
0x00005781      ebbd           jmp sym.xmemdup
0x00005783      662e0f1f8400.  nop word cs:[rax + rax]
0x0000578d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005790      488d35981a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x722f ; "memory exhausted"
0x00005797      4883ec08       sub rsp, 8
0x0000579b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000057a0      31ff           xor edi, edi
0x000057a2      e819bfffff     call sym.imp.dcgettext
0x000057a7      8b3d73382000   mov edi, dword [obj.exit_failure]       ; [0x209020:4]=1
0x000057ad      488d15d31100.  lea rdx, [0x00006987]                   ; "%s"
0x000057b4      4889c1         mov rcx, rax
0x000057b7      31f6           xor esi, esi
0x000057b9      31c0           xor eax, eax
0x000057bb      e810c1ffff     call sym.imp.error
0x000057c0      e86bbeffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000057c5      662e0f1f8400.  nop word cs:[rax + rax]
0x000057cf      90             nop
;-- xgetgroups:
0x000057d0      53             push rbx                                ; ../coreutils-8.31/lib/xgetgroups.c:32
0x000057d1      e84a060000     call sym.mgetgroups                     ; ../coreutils-8.31/lib/xgetgroups.c:33
0x000057d6      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000057d9      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xgetgroups.c:33
0x000057db      740b           je 0x57e8                               ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000057dd      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/xgetgroups.c:37
0x000057df      5b             pop rbx
0x000057e0      c3             ret
0x000057e1      0f1f80000000.  nop dword [rax]
0x000057e8      e853beffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xgetgroups.c:34
0x000057ed      83380c         cmp dword [rax], 0xc
0x000057f0      75eb           jne 0x57dd
0x000057f2      e899ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xgetgroups.c:35
0x000057f7      660f1f840000.  nop word [rax + rax]
;-- xstrtoul:
0x00005800      4157           push r15
0x00005802      4156           push r14
0x00005804      4155           push r13
0x00005806      4154           push r12
0x00005808      55             push rbp
0x00005809      53             push rbx
0x0000580a      4883ec28       sub rsp, 0x28
0x0000580e      64488b042528.  mov rax, qword fs:[0x28]
0x00005817      4889442418     mov qword [rsp + 0x18], rax
0x0000581c      31c0           xor eax, eax
0x0000581e      83fa24         cmp edx, 0x24
0x00005821      0f875e030000   ja 0x5b85
0x00005827      488d442410     lea rax, [rsp + 0x10]
0x0000582c      4989f7         mov r15, rsi
0x0000582f      4885f6         test rsi, rsi
0x00005832      4889fd         mov rbp, rdi
0x00005835      89542408       mov dword [rsp + 8], edx
0x00005839      4989ce         mov r14, rcx
0x0000583c      4d89c5         mov r13, r8
0x0000583f      4c0f44f8       cmove r15, rax
0x00005843      e8f8bdffff     call sym.imp.__errno_location
0x00005848      c70000000000   mov dword [rax], 0
0x0000584e      4989c4         mov r12, rax
0x00005851      0fb65d00       movzx ebx, byte [rbp]
0x00005855      e816c1ffff     call sym.imp.__ctype_b_loc
0x0000585a      8b542408       mov edx, dword [rsp + 8]
0x0000585e      488b30         mov rsi, qword [rax]
0x00005861      4889e8         mov rax, rbp
0x00005864      eb11           jmp 0x5877
0x00005866      662e0f1f8400.  nop word cs:[rax + rax]
0x00005870      4883c001       add rax, 1
0x00005874      0fb618         movzx ebx, byte [rax]
0x00005877      0fb6cb         movzx ecx, bl
0x0000587a      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x0000587f      75ef           jne 0x5870
0x00005881      80fb2d         cmp bl, 0x2d
0x00005884      7452           je 0x58d8
0x00005886      4c89fe         mov rsi, r15
0x00005889      4889ef         mov rdi, rbp
0x0000588c      e86fc0ffff     call sym.imp.strtoul
0x00005891      498b0f         mov rcx, qword [r15]
0x00005894      4889c3         mov rbx, rax
0x00005897      4839e9         cmp rcx, rbp
0x0000589a      742c           je 0x58c8
0x0000589c      418b0424       mov eax, dword [r12]
0x000058a0      85c0           test eax, eax
0x000058a2      7464           je 0x5908
0x000058a4      83f822         cmp eax, 0x22
0x000058a7      bd01000000     mov ebp, 1
0x000058ac      752a           jne 0x58d8
0x000058ae      4d85ed         test r13, r13
0x000058b1      7409           je 0x58bc
0x000058b3      440fb621       movzx r12d, byte [rcx]
0x000058b7      4584e4         test r12b, r12b
0x000058ba      757b           jne 0x5937
0x000058bc      49891e         mov qword [r14], rbx
0x000058bf      eb1c           jmp 0x58dd
0x000058c1      0f1f80000000.  nop dword [rax]
0x000058c8      4d85ed         test r13, r13
0x000058cb      48894c2408     mov qword [rsp + 8], rcx
0x000058d0      753e           jne 0x5910
0x000058d2      660f1f440000   nop word [rax + rax]
0x000058d8      bd04000000     mov ebp, 4
0x000058dd      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000058e2      6448333c2528.  xor rdi, qword fs:[0x28]
0x000058eb      89e8           mov eax, ebp
0x000058ed      0f858d020000   jne 0x5b80
0x000058f3      4883c428       add rsp, 0x28
0x000058f7      5b             pop rbx
0x000058f8      5d             pop rbp
0x000058f9      415c           pop r12
0x000058fb      415d           pop r13
0x000058fd      415e           pop r14
0x000058ff      415f           pop r15
0x00005901      c3             ret
0x00005902      660f1f440000   nop word [rax + rax]
0x00005908      31ed           xor ebp, ebp
0x0000590a      eba2           jmp 0x58ae
0x0000590c      0f1f4000       nop dword [rax]
0x00005910      440fb66500     movzx r12d, byte [rbp]
0x00005915      4584e4         test r12b, r12b
0x00005918      74be           je 0x58d8
0x0000591a      410fbef4       movsx esi, r12b
0x0000591e      4c89ef         mov rdi, r13
0x00005921      31ed           xor ebp, ebp
0x00005923      e808beffff     call sym.imp.strchr
0x00005928      4885c0         test rax, rax
0x0000592b      bb01000000     mov ebx, 1
0x00005930      488b4c2408     mov rcx, qword [rsp + 8]
0x00005935      74a1           je 0x58d8
0x00005937      410fbef4       movsx esi, r12b
0x0000593b      4c89ef         mov rdi, r13
0x0000593e      48894c2408     mov qword [rsp + 8], rcx
0x00005943      e8e8bdffff     call sym.imp.strchr
0x00005948      4885c0         test rax, rax
0x0000594b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005950      0f84c6000000   je 0x5a1c
0x00005956      418d4424bb     lea eax, [r12 - 0x45]
0x0000595b      3c2f           cmp al, 0x2f
0x0000595d      7751           ja 0x59b0
0x0000595f      48ba45893000.  movabs rdx, 0x814400308945
0x00005969      480fa3c2       bt rdx, rax
0x0000596d      7341           jae 0x59b0
0x0000596f      be30000000     mov esi, 0x30                           ; '0'
0x00005974      4c89ef         mov rdi, r13
0x00005977      48894c2408     mov qword [rsp + 8], rcx
0x0000597c      e8afbdffff     call sym.imp.strchr
0x00005981      4885c0         test rax, rax
0x00005984      488b4c2408     mov rcx, qword [rsp + 8]
0x00005989      7425           je 0x59b0
0x0000598b      0fb64101       movzx eax, byte [rcx + 1]
0x0000598f      3c44           cmp al, 0x44
0x00005991      740c           je 0x599f
0x00005993      3c69           cmp al, 0x69
0x00005995      0f84cd010000   je 0x5b68
0x0000599b      3c42           cmp al, 0x42
0x0000599d      7511           jne 0x59b0
0x0000599f      bf02000000     mov edi, 2
0x000059a4      bee8030000     mov esi, 0x3e8
0x000059a9      eb0f           jmp 0x59ba
0x000059ab      0f1f440000     nop dword [rax + rax]
0x000059b0      bf01000000     mov edi, 1
0x000059b5      be00040000     mov esi, 0x400
0x000059ba      4183ec42       sub r12d, 0x42
0x000059be      4180fc35       cmp r12b, 0x35
0x000059c2      7758           ja 0x5a1c
0x000059c4      488d15bd1800.  lea rdx, [0x00007288]
0x000059cb      450fb6e4       movzx r12d, r12b
0x000059cf      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000059d3      4801d0         add rax, rdx
0x000059d6      ffe0           jmp rax
0x000059d8      4889d8         mov rax, rbx
0x000059db      48f7e6         mul rsi
0x000059de      0f80ed010000   jo 0x5bd1
0x000059e4      4531c0         xor r8d, r8d
0x000059e7      48f7e6         mul rsi
0x000059ea      0f80d2010000   jo 0x5bc2
0x000059f0      4889c3         mov rbx, rax
0x000059f3      4409c5         or ebp, r8d
0x000059f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a00      4863ff         movsxd rdi, edi
0x00005a03      89e8           mov eax, ebp
0x00005a05      4801f9         add rcx, rdi
0x00005a08      83c802         or eax, 2
0x00005a0b      49890f         mov qword [r15], rcx
0x00005a0e      803900         cmp byte [rcx], 0
0x00005a11      49891e         mov qword [r14], rbx
0x00005a14      0f45e8         cmovne ebp, eax
0x00005a17      e9c1feffff     jmp 0x58dd
0x00005a1c      49891e         mov qword [r14], rbx
0x00005a1f      83cd02         or ebp, 2
0x00005a22      e9b6feffff     jmp 0x58dd
0x00005a27      ba02000000     mov edx, 2
0x00005a2c      4889d0         mov rax, rdx
0x00005a2f      48f7e3         mul rbx
0x00005a32      0f8096000000   jo 0x5ace
0x00005a38      4801db         add rbx, rbx
0x00005a3b      ebc3           jmp 0x5a00
0x00005a3d      ba00020000     mov edx, 0x200
0x00005a42      4889d0         mov rax, rdx
0x00005a45      48f7e3         mul rbx
0x00005a48      0f8080000000   jo 0x5ace
0x00005a4e      48c1e309       shl rbx, 9
0x00005a52      ebac           jmp 0x5a00
0x00005a54      41b807000000   mov r8d, 7
0x00005a5a      4531c9         xor r9d, r9d
0x00005a5d      0f1f00         nop dword [rax]
0x00005a60      4889d8         mov rax, rbx
0x00005a63      48f7e6         mul rsi
0x00005a66      4889c3         mov rbx, rax
0x00005a69      0f808f010000   jo 0x5bfe
0x00005a6f      4183e801       sub r8d, 1
0x00005a73      75eb           jne 0x5a60
0x00005a75      4409cd         or ebp, r9d
0x00005a78      eb86           jmp 0x5a00
0x00005a7a      41b808000000   mov r8d, 8
0x00005a80      4531c9         xor r9d, r9d
0x00005a83      0f1f440000     nop dword [rax + rax]
0x00005a88      4889d8         mov rax, rbx
0x00005a8b      48f7e6         mul rsi
0x00005a8e      4889c3         mov rbx, rax
0x00005a91      0f8049010000   jo 0x5be0
0x00005a97      4183e801       sub r8d, 1
0x00005a9b      75eb           jne 0x5a88
0x00005a9d      ebd6           jmp 0x5a75
0x00005a9f      41b804000000   mov r8d, 4
0x00005aa5      4531c9         xor r9d, r9d
0x00005aa8      4889d8         mov rax, rbx
0x00005aab      48f7e6         mul rsi
0x00005aae      4889c3         mov rbx, rax
0x00005ab1      0f80fc000000   jo 0x5bb3
0x00005ab7      4183e801       sub r8d, 1
0x00005abb      75eb           jne 0x5aa8
0x00005abd      ebb6           jmp 0x5a75
0x00005abf      4889d8         mov rax, rbx
0x00005ac2      48f7e6         mul rsi
0x00005ac5      4889c3         mov rbx, rax
0x00005ac8      0f8132ffffff   jno 0x5a00
0x00005ace      bd01000000     mov ebp, 1
0x00005ad3      4883cbff       or rbx, 0xffffffffffffffff
0x00005ad7      e924ffffff     jmp 0x5a00
0x00005adc      0f1f4000       nop dword [rax]
0x00005ae0      41b805000000   mov r8d, 5
0x00005ae6      4531c9         xor r9d, r9d
0x00005ae9      4889d8         mov rax, rbx
0x00005aec      48f7e6         mul rsi
0x00005aef      4889c3         mov rbx, rax
0x00005af2      0f80f7000000   jo 0x5bef
0x00005af8      4183e801       sub r8d, 1
0x00005afc      75eb           jne 0x5ae9
0x00005afe      e972ffffff     jmp 0x5a75
0x00005b03      41b806000000   mov r8d, 6
0x00005b09      4531c9         xor r9d, r9d
0x00005b0c      4889d8         mov rax, rbx
0x00005b0f      48f7e6         mul rsi
0x00005b12      4889c3         mov rbx, rax
0x00005b15      0f8089000000   jo 0x5ba4
0x00005b1b      4183e801       sub r8d, 1
0x00005b1f      75eb           jne 0x5b0c
0x00005b21      e94fffffff     jmp 0x5a75
0x00005b26      ba00040000     mov edx, 0x400
0x00005b2b      4889d0         mov rax, rdx
0x00005b2e      48f7e3         mul rbx
0x00005b31      709b           jo 0x5ace
0x00005b33      48c1e30a       shl rbx, 0xa
0x00005b37      e9c4feffff     jmp 0x5a00
0x00005b3c      4889d8         mov rax, rbx
0x00005b3f      48f7e6         mul rsi
0x00005b42      0f80c5000000   jo 0x5c0d
0x00005b48      4531c0         xor r8d, r8d
0x00005b4b      48f7e6         mul rsi
0x00005b4e      0f8193feffff   jno 0x59e7
0x00005b54      41b801000000   mov r8d, 1
0x00005b5a      4883c8ff       or rax, 0xffffffffffffffff
0x00005b5e      e984feffff     jmp 0x59e7
0x00005b63      0f1f440000     nop dword [rax + rax]
0x00005b68      31ff           xor edi, edi
0x00005b6a      80790242       cmp byte [rcx + 2], 0x42
0x00005b6e      be00040000     mov esi, 0x400
0x00005b73      400f94c7       sete dil
0x00005b77      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00005b7b      e93afeffff     jmp 0x59ba
0x00005b80      e86bbbffff     call sym.imp.__stack_chk_fail
0x00005b85      488d0dd41700.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x7360 ; "xstrtoul"
0x00005b8c      488d35ad1600.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x7240 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005b93      488d3dc61600.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x7260 ; "0 <= strtol_base && strtol_base <= 36"
0x00005b9a      ba54000000     mov edx, 0x54                           ; 'T'
0x00005b9f      e8dcbbffff     call sym.imp.__assert_fail
0x00005ba4      41b901000000   mov r9d, 1
0x00005baa      4883cbff       or rbx, 0xffffffffffffffff
0x00005bae      e968ffffff     jmp 0x5b1b
0x00005bb3      41b901000000   mov r9d, 1
0x00005bb9      4883cbff       or rbx, 0xffffffffffffffff
0x00005bbd      e9f5feffff     jmp 0x5ab7
0x00005bc2      41b801000000   mov r8d, 1
0x00005bc8      4883cbff       or rbx, 0xffffffffffffffff
0x00005bcc      e922feffff     jmp 0x59f3
0x00005bd1      4883c8ff       or rax, 0xffffffffffffffff
0x00005bd5      41b801000000   mov r8d, 1
0x00005bdb      e907feffff     jmp 0x59e7
0x00005be0      41b901000000   mov r9d, 1
0x00005be6      4883cbff       or rbx, 0xffffffffffffffff
0x00005bea      e9a8feffff     jmp 0x5a97
0x00005bef      41b901000000   mov r9d, 1
0x00005bf5      4883cbff       or rbx, 0xffffffffffffffff
0x00005bf9      e9fafeffff     jmp 0x5af8
0x00005bfe      41b901000000   mov r9d, 1
0x00005c04      4883cbff       or rbx, 0xffffffffffffffff
0x00005c08      e962feffff     jmp 0x5a6f
0x00005c0d      41b801000000   mov r8d, 1
0x00005c13      4883c8ff       or rax, 0xffffffffffffffff
0x00005c17      e92fffffff     jmp 0x5b4b
0x00005c1c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00005c20      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005c22      4154           push r12
0x00005c24      4989f5         mov r13, rsi
0x00005c27      55             push rbp
0x00005c28      53             push rbx
0x00005c29      4889fb         mov rbx, rdi
0x00005c2c      4989d4         mov r12, rdx
0x00005c2f      4883ec18       sub rsp, 0x18
0x00005c33      64488b042528.  mov rax, qword fs:[0x28]
0x00005c3c      4889442408     mov qword [rsp + 8], rax
0x00005c41      31c0           xor eax, eax
0x00005c43      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005c48      4885ff         test rdi, rdi
0x00005c4b      480f44d8       cmove rbx, rax
0x00005c4f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005c52      e8c9baffff     call sym.imp.mbrtowc
0x00005c57      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005c5b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005c5e      7620           jbe 0x5c80                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005c60      4d85e4         test r12, r12
0x00005c63      741b           je 0x5c80
0x00005c65      31ff           xor edi, edi
0x00005c67      e8c4000000     call sym.hard_locale
0x00005c6c      84c0           test al, al
0x00005c6e      7510           jne 0x5c80
0x00005c70      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005c75      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005c7a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005c7c      0f1f4000       nop dword [rax]
0x00005c80      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005c85      644833142528.  xor rdx, qword fs:[0x28]
0x00005c8e      4889e8         mov rax, rbp
0x00005c91      750b           jne 0x5c9e
0x00005c93      4883c418       add rsp, 0x18
0x00005c97      5b             pop rbx
0x00005c98      5d             pop rbp
0x00005c99      415c           pop r12
0x00005c9b      415d           pop r13
0x00005c9d      c3             ret
0x00005c9e      e84dbaffff     call sym.imp.__stack_chk_fail
0x00005ca3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cad      0f1f00         nop dword [rax]
;-- close_stream:
0x00005cb0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005cb2      55             push rbp
0x00005cb3      4889fd         mov rbp, rdi
0x00005cb6      53             push rbx
0x00005cb7      e8b4b9ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00005cbc      8b5d00         mov ebx, dword [rbp]
0x00005cbf      4889ef         mov rdi, rbp
0x00005cc2      4989c4         mov r12, rax
0x00005cc5      e896030000     call sym.rpl_fclose
0x00005cca      83e320         and ebx, 0x20                           ; "@"
0x00005ccd      85db           test ebx, ebx
0x00005ccf      7517           jne 0x5ce8
0x00005cd1      85c0           test eax, eax
0x00005cd3      740a           je 0x5cdf                               ; stdio.h:-186
0x00005cd5      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005cd8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005cdd      7439           je 0x5d18
0x00005cdf      5b             pop rbx
0x00005ce0      5d             pop rbp
0x00005ce1      415c           pop r12
0x00005ce3      c3             ret
0x00005ce4      0f1f4000       nop dword [rax]
0x00005ce8      85c0           test eax, eax
0x00005cea      751c           jne 0x5d08
0x00005cec      e84fb9ffff     call sym.imp.__errno_location
0x00005cf1      c70000000000   mov dword [rax], 0
0x00005cf7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005cfc      5b             pop rbx
0x00005cfd      5d             pop rbp
0x00005cfe      415c           pop r12
0x00005d00      c3             ret
0x00005d01      0f1f80000000.  nop dword [rax]
0x00005d08      5b             pop rbx
0x00005d09      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005d0e      5d             pop rbp                                 ; stdio.h:-186
0x00005d0f      415c           pop r12
0x00005d11      c3             ret
0x00005d12      660f1f440000   nop word [rax + rax]
0x00005d18      e823b9ffff     call sym.imp.__errno_location
0x00005d1d      833809         cmp dword [rax], 9
0x00005d20      5b             pop rbx
0x00005d21      5d             pop rbp
0x00005d22      415c           pop r12                                 ; stdio.h:-178
0x00005d24      0f95c0         setne al
0x00005d27      0fb6c0         movzx eax, al
0x00005d2a      f7d8           neg eax
0x00005d2c      c3             ret
0x00005d2d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005d30      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005d34      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005d36      e875bbffff     call sym.imp.setlocale
0x00005d3b      4889c2         mov rdx, rax
0x00005d3e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005d43      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005d46      741d           je 0x5d65
0x00005d48      488d3d1a1600.  lea rdi, [0x00007369]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00005d4f      b902000000     mov ecx, 2
0x00005d54      4889d6         mov rsi, rdx
0x00005d57      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005d59      0f97c1         seta cl
0x00005d5c      80d900         sbb cl, 0
0x00005d5f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005d61      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005d63      750b           jne 0x5d70
0x00005d65      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005d69      c3             ret
0x00005d6a      660f1f440000   nop word [rax + rax]
0x00005d70      488d3df41500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x736b ; "POSIX"
0x00005d77      b906000000     mov ecx, 6
0x00005d7c      4889d6         mov rsi, rdx
0x00005d7f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005d81      0f97c0         seta al
0x00005d84      1c00           sbb al, 0
0x00005d86      84c0           test al, al
0x00005d88      0f95c0         setne al
0x00005d8b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005d8f      c3             ret
;-- locale_charset:
0x00005d90      4883ec08       sub rsp, 8
0x00005d94      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005d99      e8c2baffff     call sym.imp.nl_langinfo
0x00005d9e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005da1      741d           je 0x5dc0
0x00005da3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005da6      488d15c41500.  lea rdx, str.ASCII                      ; 0x7371 ; "ASCII"
0x00005dad      480f44c2       cmove rax, rdx
0x00005db1      4883c408       add rsp, 8
0x00005db5      c3             ret
0x00005db6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005dc0      488d05aa1500.  lea rax, str.ASCII                      ; 0x7371 ; "ASCII"
0x00005dc7      4883c408       add rsp, 8
0x00005dcb      c3             ret
0x00005dcc      0f1f4000       nop dword [rax]
;-- realloc_groupbuf:
0x00005dd0      ba04000000     mov edx, 4                              ; ../coreutils-8.31/lib/mgetgroups.c:44
0x00005dd5      4889d0         mov rax, rdx
0x00005dd8      48f7e6         mul rsi
0x00005ddb      7031           jo 0x5e0e
0x00005ddd      31c9           xor ecx, ecx
0x00005ddf      4885c0         test rax, rax
0x00005de2      7814           js 0x5df8
0x00005de4      4885c9         test rcx, rcx
0x00005de7      750f           jne 0x5df8
0x00005de9      48c1e602       shl rsi, 2                              ; ../coreutils-8.31/lib/mgetgroups.c:51
0x00005ded      e9aebaffff     jmp sym.imp.realloc
0x00005df2      660f1f440000   nop word [rax + rax]
0x00005df8      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/mgetgroups.c:44
0x00005dfc      e83fb8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/mgetgroups.c:47
0x00005e01      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00005e07      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/mgetgroups.c:52
0x00005e09      4883c408       add rsp, 8
0x00005e0d      c3             ret
0x00005e0e      b901000000     mov ecx, 1                              ; ../coreutils-8.31/lib/mgetgroups.c:45
0x00005e13      ebca           jmp 0x5ddf
0x00005e15      90             nop
0x00005e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- mgetgroups:
0x00005e20      4157           push r15                                ; ../coreutils-8.31/lib/mgetgroups.c:67
0x00005e22      4156           push r14
0x00005e24      4989d7         mov r15, rdx
0x00005e27      4155           push r13
0x00005e29      4154           push r12
0x00005e2b      4189f5         mov r13d, esi
0x00005e2e      55             push rbp
0x00005e2f      53             push rbx
0x00005e30      4883ec18       sub rsp, 0x18
0x00005e34      64488b042528.  mov rax, qword fs:[0x28]
0x00005e3d      4889442408     mov qword [rsp + 8], rax
0x00005e42      31c0           xor eax, eax
0x00005e44      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/mgetgroups.c:81
0x00005e47      0f84cb000000   je 0x5f18
0x00005e4d      4889fd         mov rbp, rdi
0x00005e50      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005e55      31ff           xor edi, edi
0x00005e57      c74424040a00.  mov dword [rsp + 4], 0xa                ; ../coreutils-8.31/lib/mgetgroups.c:84
0x00005e5f      e86cffffff     call sym.realloc_groupbuf               ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005e64      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mgetgroups.c:87
0x00005e67      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mgetgroups.c:86
0x00005e6a      0f84c8010000   je 0x6038                               ; ../coreutils-8.31/lib/mgetgroups.c:87
0x00005e70      4c8d742404     lea r14, [rsp + 4]
0x00005e75      4489ee         mov esi, r13d                           ; ../coreutils-8.31/lib/mgetgroups.c:96
0x00005e78      4c89f1         mov rcx, r14
0x00005e7b      4889da         mov rdx, rbx
0x00005e7e      4889ef         mov rdi, rbp
0x00005e81      448b642404     mov r12d, dword [rsp + 4]               ; ../coreutils-8.31/lib/mgetgroups.c:93
0x00005e86      e855baffff     call sym.imp.getgrouplist               ; ../coreutils-8.31/lib/mgetgroups.c:96
0x00005e8b      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mgetgroups.c:100
0x00005e8d      4863742404     movsxd rsi, dword [rsp + 4]
0x00005e92      784c           js 0x5ee0
0x00005e94      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mgetgroups.c:103
0x00005e97      e834ffffff     call sym.realloc_groupbuf
0x00005e9c      4885c0         test rax, rax
0x00005e9f      7567           jne 0x5f08
0x00005ea1      e89ab7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/mgetgroups.c:156
0x00005ea6      448b20         mov r12d, dword [rax]
0x00005ea9      4889c5         mov rbp, rax
0x00005eac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mgetgroups.c:157
0x00005eaf      e86cb7ffff     call sym.imp.free
0x00005eb4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/mgetgroups.c:159 ; -1
0x00005eb9      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/mgetgroups.c:158
0x00005ebd      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mgetgroups.c:201
0x00005ec2      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005ecb      0f8586010000   jne 0x6057
0x00005ed1      4883c418       add rsp, 0x18
0x00005ed5      5b             pop rbx
0x00005ed6      5d             pop rbp
0x00005ed7      415c           pop r12
0x00005ed9      415d           pop r13
0x00005edb      415e           pop r14
0x00005edd      415f           pop r15
0x00005edf      c3             ret
0x00005ee0      4439e6         cmp esi, r12d                           ; ../coreutils-8.31/lib/mgetgroups.c:100
0x00005ee3      7509           jne 0x5eee
0x00005ee5      01f6           add esi, esi                            ; ../coreutils-8.31/lib/mgetgroups.c:101
0x00005ee7      89742404       mov dword [rsp + 4], esi
0x00005eeb      4863f6         movsxd rsi, esi                         ; ../coreutils-8.31/lib/mgetgroups.c:103
0x00005eee      4889df         mov rdi, rbx
0x00005ef1      e8dafeffff     call sym.realloc_groupbuf
0x00005ef6      4885c0         test rax, rax
0x00005ef9      74a6           je 0x5ea1
0x00005efb      4889c3         mov rbx, rax
0x00005efe      e972ffffff     jmp 0x5e75
0x00005f03      0f1f440000     nop dword [rax + rax]
0x00005f08      498907         mov qword [r15], rax                    ; ../coreutils-8.31/lib/mgetgroups.c:114
0x00005f0b      8b442404       mov eax, dword [rsp + 4]                ; ../coreutils-8.31/lib/mgetgroups.c:117
0x00005f0f      ebac           jmp 0x5ebd
0x00005f11      0f1f80000000.  nop dword [rax]
0x00005f18      31f6           xor esi, esi                            ; unistd.h:275   return __getgroups_alias (__size, __list);
0x00005f1a      31ff           xor edi, edi
0x00005f1c      e80fb9ffff     call sym.imp.getgroups
0x00005f21      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mgetgroups.c:131
0x00005f23      89442404       mov dword [rsp + 4], eax                ; ../coreutils-8.31/lib/mgetgroups.c:124
0x00005f27      0f88ab000000   js 0x5fd8                               ; ../coreutils-8.31/lib/mgetgroups.c:131
0x00005f2d      4183fdff       cmp r13d, 0xffffffff                    ; ../coreutils-8.31/lib/mgetgroups.c:142
0x00005f31      400f95c5       setne bpl
0x00005f35      85c0           test eax, eax
0x00005f37      7409           je 0x5f42
0x00005f39      4084ed         test bpl, bpl
0x00005f3c      0f84c5000000   je 0x6007
0x00005f42      83c001         add eax, 1                              ; ../coreutils-8.31/lib/mgetgroups.c:143
0x00005f45      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005f47      4863f0         movsxd rsi, eax
0x00005f4a      89442404       mov dword [rsp + 4], eax                ; ../coreutils-8.31/lib/mgetgroups.c:143
0x00005f4e      e87dfeffff     call sym.realloc_groupbuf               ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005f53      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mgetgroups.c:145
0x00005f56      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/mgetgroups.c:144
0x00005f59      0f84d9000000   je 0x6038                               ; ../coreutils-8.31/lib/mgetgroups.c:145
0x00005f5f      8b7c2404       mov edi, dword [rsp + 4]
0x00005f63      400fb6ed       movzx ebp, bpl
0x00005f67      29ef           sub edi, ebp
0x00005f69      4183fdff       cmp r13d, 0xffffffff                    ; ../coreutils-8.31/lib/mgetgroups.c:151
0x00005f6d      0f84cf000000   je 0x6042
0x00005f73      488d7004       lea rsi, [rax + 4]
0x00005f77      e8b4b8ffff     call sym.imp.getgroups
0x00005f7c      85c0           test eax, eax                           ; unistd.h:57        __off64_t __offset), pread64) __wur;
0x00005f7e      0f881dffffff   js 0x5ea1
0x00005f84      44892b         mov dword [rbx], r13d
0x00005f87      83c001         add eax, 1
0x00005f8a      83f801         cmp eax, 1
0x00005f8d      49891f         mov qword [r15], rbx                    ; unistd.h:61      __wur __warnattr ("pread called with bigger length than size of "
0x00005f90      0f8e27ffffff   jle 0x5ebd
0x00005f96      4863d0         movsxd rdx, eax
0x00005f99      8b3b           mov edi, dword [rbx]
0x00005f9b      488d3493       lea rsi, [rbx + rdx*4]
0x00005f9f      488d5304       lea rdx, [rbx + 4]
0x00005fa3      4839d6         cmp rsi, rdx
0x00005fa6      7720           ja 0x5fc8                               ; unistd.h:68          "the destination buffer");
0x00005fa8      e910ffffff     jmp 0x5ebd
0x00005fad      0f1f00         nop dword [rax]                         ; unistd.h:63 extern ssize_t __REDIRECT (__pread64_chk_warn,
0x00005fb0      3b0b           cmp ecx, dword [rbx]
0x00005fb2      741a           je 0x5fce
0x00005fb4      894b04         mov dword [rbx + 4], ecx
0x00005fb7      4883c304       add rbx, 4
0x00005fbb      4883c204       add rdx, 4
0x00005fbf      4839d6         cmp rsi, rdx
0x00005fc2      0f86f5feffff   jbe 0x5ebd
0x00005fc8      8b0a           mov ecx, dword [rdx]
0x00005fca      39f9           cmp ecx, edi                            ; unistd.h:5    The GNU C Library is free software; you can redistribute it and/or
0x00005fcc      75e2           jne 0x5fb0
0x00005fce      83e801         sub eax, 1
0x00005fd1      ebe8           jmp 0x5fbb
0x00005fd3      0f1f440000     nop dword [rax + rax]
0x00005fd8      e863b6ffff     call sym.imp.__errno_location
0x00005fdd      833826         cmp dword [rax], 0x26
0x00005fe0      7556           jne 0x6038
0x00005fe2      31ff           xor edi, edi
0x00005fe4      be04000000     mov esi, 4
0x00005fe9      e8b2b8ffff     call sym.imp.realloc
0x00005fee      4885c0         test rax, rax
0x00005ff1      7445           je 0x6038
0x00005ff3      498907         mov qword [r15], rax
0x00005ff6      448928         mov dword [rax], r13d
0x00005ff9      31c0           xor eax, eax
0x00005ffb      4183fdff       cmp r13d, 0xffffffff
0x00005fff      0f95c0         setne al
0x00006002      e9b6feffff     jmp 0x5ebd
0x00006007      31ff           xor edi, edi
0x00006009      4863f0         movsxd rsi, eax
0x0000600c      e8bffdffff     call sym.realloc_groupbuf
0x00006011      4885c0         test rax, rax
0x00006014      4889c3         mov rbx, rax
0x00006017      741f           je 0x6038
0x00006019      8b7c2404       mov edi, dword [rsp + 4]
0x0000601d      4889de         mov rsi, rbx
0x00006020      e80bb8ffff     call sym.imp.getgroups                  ; unistd.h:16    License along with the GNU C Library; if not, see
0x00006025      85c0           test eax, eax
0x00006027      0f895dffffff   jns 0x5f8a
0x0000602d      e96ffeffff     jmp 0x5ea1
0x00006032      660f1f440000   nop word [rax + rax]
0x00006038      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000603d      e97bfeffff     jmp 0x5ebd
0x00006042      4889c6         mov rsi, rax
0x00006045      e8e6b7ffff     call sym.imp.getgroups
0x0000604a      85c0           test eax, eax
0x0000604c      0f8938ffffff   jns 0x5f8a
0x00006052      e94afeffff     jmp 0x5ea1
0x00006057      e894b6ffff     call sym.imp.__stack_chk_fail
0x0000605c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006060      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006062      55             push rbp
0x00006063      53             push rbx
0x00006064      4889fb         mov rbx, rdi
0x00006067      e8a4b7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000606c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000606e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006071      7854           js 0x60c7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006073      e818b8ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006078      85c0           test eax, eax
0x0000607a      752c           jne 0x60a8
0x0000607c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000607f      e85c000000     call sym.rpl_fflush
0x00006084      85c0           test eax, eax
0x00006086      743c           je 0x60c4
0x00006088      e8b3b5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000608d      448b20         mov r12d, dword [rax]
0x00006090      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006093      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006096      e8f5b5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000609b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000609e      7530           jne 0x60d0
0x000060a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000060a1      5d             pop rbp
0x000060a2      415c           pop r12
0x000060a4      c3             ret
0x000060a5      0f1f00         nop dword [rax]
0x000060a8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000060ab      e860b7ffff     call sym.imp.fileno
0x000060b0      31f6           xor esi, esi
0x000060b2      ba01000000     mov edx, 1
0x000060b7      89c7           mov edi, eax
0x000060b9      e8b2b6ffff     call sym.imp.lseek
0x000060be      4883f8ff       cmp rax, 0xffffffffffffffff
0x000060c2      75b8           jne 0x607c
0x000060c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000060c7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000060c8      5d             pop rbp
0x000060c9      415c           pop r12
0x000060cb      e9c0b5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000060d0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000060d4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000060d9      ebc5           jmp 0x60a0
0x000060db      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000060e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000060e3      53             push rbx
0x000060e4      4889fb         mov rbx, rdi
0x000060e7      7411           je 0x60fa                               ; ../coreutils-8.31/lib/fflush.c:150
0x000060e9      e8a2b7ffff     call sym.imp.__freading
0x000060ee      85c0           test eax, eax
0x000060f0      7408           je 0x60fa
0x000060f2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000060f8      750e           jne 0x6108
0x000060fa      4889df         mov rdi, rbx
0x000060fd      5b             pop rbx
0x000060fe      e94db7ffff     jmp sym.imp.fflush
0x00006103      0f1f440000     nop dword [rax + rax]
0x00006108      4889df         mov rdi, rbx
0x0000610b      ba01000000     mov edx, 1
0x00006110      31f6           xor esi, esi
0x00006112      e809000000     call sym.rpl_fseeko
0x00006117      4889df         mov rdi, rbx
0x0000611a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000611b      e930b7ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006120      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006124      48394710       cmp qword [rdi + 0x10], rax
0x00006128      7406           je 0x6130                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000612a      e9c1b7ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x0000612f      90             nop
0x00006130      488b4720       mov rax, qword [rdi + 0x20]
0x00006134      48394728       cmp qword [rdi + 0x28], rax
0x00006138      75f0           jne 0x612a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000613a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000613f      75e9           jne 0x612a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006141      4154           push r12
0x00006143      55             push rbp
0x00006144      4189d4         mov r12d, edx
0x00006147      53             push rbx
0x00006148      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000614b      4889fb         mov rbx, rdi
0x0000614e      e8bdb6ffff     call sym.imp.fileno
0x00006153      4489e2         mov edx, r12d
0x00006156      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006159      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000615b      e810b6ffff     call sym.imp.lseek
0x00006160      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006164      740c           je 0x6172
0x00006166      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006169      488983900000.  mov qword [rbx + 0x90], rax
0x00006170      31c0           xor eax, eax
0x00006172      5b             pop rbx                                 ; /sys_errlist.h:19
0x00006173      5d             pop rbp
0x00006174      415c           pop r12
0x00006176      c3             ret
0x00006177      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00006180      4157           push r15
0x00006182      4156           push r14
0x00006184      4989d7         mov r15, rdx
0x00006187      4155           push r13
0x00006189      4154           push r12
0x0000618b      4c8d25be2820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208a50 ; "@ "
0x00006192      55             push rbp
0x00006193      488d2dbe2820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208a58
0x0000619a      53             push rbx
0x0000619b      4189fd         mov r13d, edi
0x0000619e      4989f6         mov r14, rsi
0x000061a1      4c29e5         sub rbp, r12
0x000061a4      4883ec08       sub rsp, 8
0x000061a8      48c1fd03       sar rbp, 3
0x000061ac      e827b4ffff     call sym._init
0x000061b1      4885ed         test rbp, rbp
0x000061b4      7420           je 0x61d6
0x000061b6      31db           xor ebx, ebx
0x000061b8      0f1f84000000.  nop dword [rax + rax]
0x000061c0      4c89fa         mov rdx, r15
0x000061c3      4c89f6         mov rsi, r14
0x000061c6      4489ef         mov edi, r13d
0x000061c9      41ff14dc       call qword [r12 + rbx*8]
0x000061cd      4883c301       add rbx, 1
0x000061d1      4839dd         cmp rbp, rbx
0x000061d4      75ea           jne 0x61c0
0x000061d6      4883c408       add rsp, 8
0x000061da      5b             pop rbx
0x000061db      5d             pop rbp
0x000061dc      415c           pop r12
0x000061de      415d           pop r13
0x000061e0      415e           pop r14
0x000061e2      415f           pop r15
0x000061e4      c3             ret
0x000061e5      90             nop
0x000061e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000061f0      f3c3           ret
0x000061f2      662e0f1f8400.  nop word cs:[rax + rax]
0x000061fc      0f1f4000       nop dword [rax]
;-- atexit:
0x00006200      488b15012e20.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00006207      31f6           xor esi, esi
0x00006209      e902b7ffff     jmp sym.imp.__cxa_atexit
0x0000620e      0000           add byte [rax], al
