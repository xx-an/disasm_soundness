;-- section..plt:
;-- .plt:
0x00001540      ff35d2982000   push qword [0x0020ae18]                 ; [12] -r-x section size 848 named .plt
0x00001546      ff25d4982000   jmp qword [0x0020ae20]                  ; [0x20ae20:8]=0
0x0000154c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001550      ff25d2982000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x20ae28:8]=0x1556 ; "V\x15"
0x00001556      6800000000     push 0
0x0000155b      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001560      ff25ca982000   jmp qword [reloc.getenv]                ; [0x20ae30:8]=0x1566 ; "f\x15"
0x00001566      6801000000     push 1
0x0000156b      e9d0ffffff     jmp sym..plt
;-- imp.__snprintf_chk:
0x00001570      ff25c2982000   jmp qword [reloc.__snprintf_chk]        ; [0x20ae38:8]=0x1576 ; "v\x15"
0x00001576      6802000000     push 2
0x0000157b      e9c0ffffff     jmp sym..plt
;-- imp.free:
0x00001580      ff25ba982000   jmp qword [reloc.free]                  ; [0x20ae40:8]=0x1586
0x00001586      6803000000     push 3
0x0000158b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001590      ff25b2982000   jmp qword [reloc.abort]                 ; [0x20ae48:8]=0x1596
0x00001596      6804000000     push 4
0x0000159b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015a0      ff25aa982000   jmp qword [reloc.__errno_location]      ; [0x20ae50:8]=0x15a6
0x000015a6      6805000000     push 5
0x000015ab      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015b0      ff25a2982000   jmp qword [reloc.strncmp]               ; [0x20ae58:8]=0x15b6
0x000015b6      6806000000     push 6
0x000015bb      e980ffffff     jmp sym..plt
;-- imp._exit:
0x000015c0      ff259a982000   jmp qword [reloc._exit]                 ; [0x20ae60:8]=0x15c6
0x000015c6      6807000000     push 7
0x000015cb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x000015d0      ff2592982000   jmp qword [reloc.__fpending]            ; [0x20ae68:8]=0x15d6
0x000015d6      6808000000     push 8
0x000015db      e960ffffff     jmp sym..plt
;-- imp.readlink:
0x000015e0      ff258a982000   jmp qword [reloc.readlink]              ; [0x20ae70:8]=0x15e6
0x000015e6      6809000000     push 9
0x000015eb      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x000015f0      ff2582982000   jmp qword [reloc.textdomain]            ; [0x20ae78:8]=0x15f6
0x000015f6      680a000000     push 0xa
0x000015fb      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001600      ff257a982000   jmp qword [reloc.fclose]                ; [0x20ae80:8]=0x1606
0x00001606      680b000000     push 0xb
0x0000160b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001610      ff2572982000   jmp qword [reloc.bindtextdomain]        ; [0x20ae88:8]=0x1616
0x00001616      680c000000     push 0xc
0x0000161b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001620      ff256a982000   jmp qword [reloc.dcgettext]             ; [0x20ae90:8]=0x1626 ; "&\x16"
0x00001626      680d000000     push 0xd
0x0000162b      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001630      ff2562982000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ae98:8]=0x1636 ; "6\x16"
0x00001636      680e000000     push 0xe
0x0000163b      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x00001640      ff255a982000   jmp qword [reloc.strlen]                ; [0x20aea0:8]=0x1646 ; "F\x16"
0x00001646      680f000000     push 0xf
0x0000164b      e9f0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001650      ff2552982000   jmp qword [reloc.__stack_chk_fail]      ; [0x20aea8:8]=0x1656 ; "V\x16"
0x00001656      6810000000     push 0x10
0x0000165b      e9e0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001660      ff254a982000   jmp qword [reloc.getopt_long]           ; [0x20aeb0:8]=0x1666 ; "f\x16"
0x00001666      6811000000     push 0x11
0x0000166b      e9d0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001670      ff2542982000   jmp qword [reloc.mbrtowc]               ; [0x20aeb8:8]=0x1676 ; "v\x16"
0x00001676      6812000000     push 0x12
0x0000167b      e9c0feffff     jmp sym..plt
;-- imp.strchr:
0x00001680      ff253a982000   jmp qword [reloc.strchr]                ; [0x20aec0:8]=0x1686
0x00001686      6813000000     push 0x13
0x0000168b      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001690      ff2532982000   jmp qword [reloc.strrchr]               ; [0x20aec8:8]=0x1696
0x00001696      6814000000     push 0x14
0x0000169b      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x000016a0      ff252a982000   jmp qword [reloc.lseek]                 ; [0x20aed0:8]=0x16a6
0x000016a6      6815000000     push 0x15
0x000016ab      e990feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000016b0      ff2522982000   jmp qword [reloc.__assert_fail]         ; [0x20aed8:8]=0x16b6
0x000016b6      6816000000     push 0x16
0x000016bb      e980feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x000016c0      ff251a982000   jmp qword [reloc.__strtoul_internal]    ; [0x20aee0:8]=0x16c6
0x000016c6      6817000000     push 0x17
0x000016cb      e970feffff     jmp sym..plt
;-- imp.memset:
0x000016d0      ff2512982000   jmp qword [reloc.memset]                ; [0x20aee8:8]=0x16d6
0x000016d6      6818000000     push 0x18
0x000016db      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x000016e0      ff250a982000   jmp qword [reloc.memcmp]                ; [0x20aef0:8]=0x16e6
0x000016e6      6819000000     push 0x19
0x000016eb      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000016f0      ff2502982000   jmp qword [reloc.fputs_unlocked]        ; [0x20aef8:8]=0x16f6
0x000016f6      681a000000     push 0x1a
0x000016fb      e940feffff     jmp sym..plt
;-- imp.calloc:
0x00001700      ff25fa972000   jmp qword [reloc.calloc]                ; [0x20af00:8]=0x1706
0x00001706      681b000000     push 0x1b
0x0000170b      e930feffff     jmp sym..plt
;-- imp.putenv:
0x00001710      ff25f2972000   jmp qword [reloc.putenv]                ; [0x20af08:8]=0x1716
0x00001716      681c000000     push 0x1c
0x0000171b      e920feffff     jmp sym..plt
;-- imp.memcpy:
0x00001720      ff25ea972000   jmp qword [reloc.memcpy]                ; [0x20af10:8]=0x1726 ; "&\x17"
0x00001726      681d000000     push 0x1d
0x0000172b      e910feffff     jmp sym..plt
;-- imp.fileno:
0x00001730      ff25e2972000   jmp qword [reloc.fileno]                ; [0x20af18:8]=0x1736 ; "6\x17"
0x00001736      681e000000     push 0x1e
0x0000173b      e900feffff     jmp sym..plt
;-- imp.__xstat:
0x00001740      ff25da972000   jmp qword [reloc.__xstat]               ; [0x20af20:8]=0x1746 ; "F\x17"
0x00001746      681f000000     push 0x1f
0x0000174b      e9f0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001750      ff25d2972000   jmp qword [reloc.malloc]                ; [0x20af28:8]=0x1756 ; "V\x17"
0x00001756      6820000000     push 0x20                               ; "@"
0x0000175b      e9e0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001760      ff25ca972000   jmp qword [reloc.fflush]                ; [0x20af30:8]=0x1766 ; "f\x17"
0x00001766      6821000000     push 0x21                               ; '!'
0x0000176b      e9d0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001770      ff25c2972000   jmp qword [reloc.nl_langinfo]           ; [0x20af38:8]=0x1776 ; "v\x17"
0x00001776      6822000000     push 0x22                               ; '"'
0x0000177b      e9c0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001780      ff25ba972000   jmp qword [reloc.__freading]            ; [0x20af40:8]=0x1786
0x00001786      6823000000     push 0x23                               ; '#'
0x0000178b      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001790      ff25b2972000   jmp qword [reloc.realloc]               ; [0x20af48:8]=0x1796
0x00001796      6824000000     push 0x24                               ; '$'
0x0000179b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x000017a0      ff25aa972000   jmp qword [reloc.setlocale]             ; [0x20af50:8]=0x17a6
0x000017a6      6825000000     push 0x25                               ; '%'
0x000017ab      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000017b0      ff25a2972000   jmp qword [reloc.__printf_chk]          ; [0x20af58:8]=0x17b6
0x000017b6      6826000000     push 0x26                               ; '&'
0x000017bb      e980fdffff     jmp sym..plt
;-- imp.mempcpy:
0x000017c0      ff259a972000   jmp qword [reloc.mempcpy]               ; [0x20af60:8]=0x17c6
0x000017c6      6827000000     push 0x27                               ; '''
0x000017cb      e970fdffff     jmp sym..plt
;-- imp.error:
0x000017d0      ff2592972000   jmp qword [reloc.error]                 ; [0x20af68:8]=0x17d6
0x000017d6      6828000000     push 0x28                               ; '('
0x000017db      e960fdffff     jmp sym..plt
;-- imp.access:
0x000017e0      ff258a972000   jmp qword [reloc.access]                ; [0x20af70:8]=0x17e6
0x000017e6      6829000000     push 0x29                               ; ')'
0x000017eb      e950fdffff     jmp sym..plt
;-- imp.fseeko:
0x000017f0      ff2582972000   jmp qword [reloc.fseeko]                ; [0x20af78:8]=0x17f6
0x000017f6      682a000000     push 0x2a                               ; '*'
0x000017fb      e940fdffff     jmp sym..plt
;-- imp.strtok:
0x00001800      ff257a972000   jmp qword [reloc.strtok]                ; [0x20af80:8]=0x1806
0x00001806      682b000000     push 0x2b                               ; '+'
0x0000180b      e930fdffff     jmp sym..plt
;-- imp.execvp:
0x00001810      ff2572972000   jmp qword [reloc.execvp]                ; [0x20af88:8]=0x1816
0x00001816      682c000000     push 0x2c                               ; ','
0x0000181b      e920fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001820      ff256a972000   jmp qword [reloc.__cxa_atexit]          ; [0x20af90:8]=0x1826 ; "&\x18"
0x00001826      682d000000     push 0x2d                               ; '-'
0x0000182b      e910fdffff     jmp sym..plt
;-- imp.exit:
0x00001830      ff2562972000   jmp qword [reloc.exit]                  ; [0x20af98:8]=0x1836 ; "6\x18"
0x00001836      682e000000     push 0x2e                               ; '.'
0x0000183b      e900fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001840      ff255a972000   jmp qword [reloc.fwrite]                ; [0x20afa0:8]=0x1846 ; "F\x18"
0x00001846      682f000000     push 0x2f                               ; '/'
0x0000184b      e9f0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001850      ff2552972000   jmp qword [reloc.__fprintf_chk]         ; [0x20afa8:8]=0x1856 ; "V\x18"
0x00001856      6830000000     push 0x30                               ; '0'
0x0000185b      e9e0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001860      ff254a972000   jmp qword [reloc.mbsinit]               ; [0x20afb0:8]=0x1866 ; "f\x18"
0x00001866      6831000000     push 0x31                               ; '1'
0x0000186b      e9d0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001870      ff2542972000   jmp qword [reloc.iswprint]              ; [0x20afb8:8]=0x1876 ; "v\x18"
0x00001876      6832000000     push 0x32                               ; '2'
0x0000187b      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001880      ff253a972000   jmp qword [reloc.__ctype_b_loc]         ; [0x20afc0:8]=0x1886
0x00001886      6833000000     push 0x33                               ; '3'
0x0000188b      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001890      .qword 0x90660020975225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001898      0000           add byte [rax], al
0x0000189a      0000           add byte [rax], al
0x0000189c      0000           add byte [rax], al
0x0000189e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x000018a0      4157           push r15                                ; [14] -r-x section size 24814 named .text
0x000018a2      4156           push r14
0x000018a4      49bf003e0000.  movabs r15, 0x100003e00
0x000018ae      4155           push r13
0x000018b0      4154           push r12
0x000018b2      4c8d2d676900.  lea r13, obj.CSWTCH.55                  ; 0x8220
0x000018b9      55             push rbp
0x000018ba      53             push rbx
0x000018bb      89fd           mov ebp, edi
0x000018bd      4889f3         mov rbx, rsi
0x000018c0      4881ecf80000.  sub rsp, 0xf8
0x000018c7      488b3e         mov rdi, qword [rsi]
0x000018ca      64488b042528.  mov rax, qword fs:[0x28]
0x000018d3      48898424e800.  mov qword [rsp + 0xe8], rax
0x000018db      31c0           xor eax, eax
0x000018dd      e87e0f0000     call sym.set_program_name
0x000018e2      488d35f86e00.  lea rsi, [0x000087e1]
0x000018e9      bf06000000     mov edi, 6
0x000018ee      e8adfeffff     call sym.imp.setlocale
0x000018f3      488d35716100.  lea rsi, str.usr_local_share_locale     ; 0x7a6b ; "/usr/local/share/locale"
0x000018fa      488d3d416100.  lea rdi, [0x00007a42]                   ; "coreutils"
0x00001901      e80afdffff     call sym.imp.bindtextdomain
0x00001906      488d3d356100.  lea rdi, [0x00007a42]                   ; "coreutils"
0x0000190d      e8defcffff     call sym.imp.textdomain
0x00001912      488d3de70b00.  lea rdi, sym.close_stdout               ; 0x2500 ; "USH\x83\xec\bH\x8b={\x8b "
0x00001919      c705f5962000.  mov dword [obj.exit_failure], 0x7d      ; '}'
                                                                       ; [0x20b018:4]=1
0x00001923      e858600000     call sym.atexit
0x00001928      4c8d25b19720.  lea r12, obj.stdbuf                     ; 0x20b0e0
0x0000192f      488d0daa9120.  lea rcx, obj.longopts                   ; 0x20aae0
0x00001936      488d156f6100.  lea rdx, str.i:o:e:                     ; 0x7aac ; "+i:o:e:"
0x0000193d      4531c0         xor r8d, r8d
0x00001940      4889de         mov rsi, rbx
0x00001943      89ef           mov edi, ebp
0x00001945      e816fdffff     call sym.imp.getopt_long
0x0000194a      83f8ff         cmp eax, 0xffffffff
0x0000194d      0f845c010000   je 0x1aaf
0x00001953      83f865         cmp eax, 0x65
0x00001956      744f           je 0x19a7
0x00001958      7f3f           jg 0x1999
0x0000195a      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000195f      0f85e8040000   jne 0x1e4d
0x00001965      488b3d1c9720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000196c      488b0d9d9620.  mov rcx, qword [obj.Version]            ; [0x20b010:8]=0x8251 str.8.31 ; "Q\x82"
0x00001973      4c8d05246100.  lea r8, str.Padraig_Brady               ; 0x7a9e ; "Padraig Brady"
0x0000197a      488d15bd6000.  lea rdx, str.GNU_coreutils              ; 0x7a3e ; "GNU coreutils"
0x00001981      488d351c6000.  lea rsi, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x00001988      4531c9         xor r9d, r9d
0x0000198b      31c0           xor eax, eax
0x0000198d      e8be300000     call sym.version_etc
0x00001992      31ff           xor edi, edi
0x00001994      e897feffff     call sym.imp.exit
0x00001999      83f869         cmp eax, 0x69
0x0000199c      7409           je 0x19a7
0x0000199e      83f86f         cmp eax, 0x6f
0x000019a1      0f85fe000000   jne 0x1aa5
0x000019a7      8d509b         lea edx, [rax - 0x65]
0x000019aa      4d63749500     movsxd r14, dword [r13 + rdx*4]
0x000019af      4183fe02       cmp r14d, 2
0x000019b3      0f87ab040000   ja 0x1e64
0x000019b9      4c8b0dd89620.  mov r9, qword [obj.optarg]              ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b098:8]=0
0x000019c0      4b8d1476       lea rdx, [r14 + r14*2]
0x000019c4      418944d408     mov dword [r12 + rdx*8 + 8], eax
0x000019c9      410fbe11       movsx edx, byte [r9]
0x000019cd      83fa20         cmp edx, 0x20                           ; "@"
0x000019d0      7737           ja 0x1a09
0x000019d2      490fa3d7       bt r15, rdx
0x000019d6      7331           jae 0x1a09
0x000019d8      498d5101       lea rdx, [r9 + 1]
0x000019dc      be01000000     mov esi, 1
0x000019e1      eb14           jmp 0x19f7
0x000019e3      0f1f440000     nop dword [rax + rax]
0x000019e8      4889f7         mov rdi, rsi
0x000019eb      4883c201       add rdx, 1
0x000019ef      48d3e7         shl rdi, cl
0x000019f2      4c85ff         test rdi, r15
0x000019f5      7412           je 0x1a09
0x000019f7      4889159a9620.  mov qword [obj.optarg], rdx             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b098:8]=0
0x000019fe      0fbe0a         movsx ecx, byte [rdx]
0x00001a01      4989d1         mov r9, rdx
0x00001a04      83f920         cmp ecx, 0x20                           ; "@"
0x00001a07      76df           jbe 0x19e8
0x00001a09      4b8d1476       lea rdx, [r14 + r14*2]
0x00001a0d      83f869         cmp eax, 0x69
0x00001a10      4d894cd410     mov qword [r12 + rdx*8 + 0x10], r9
0x00001a15      7467           je 0x1a7e
0x00001a17      488d3db46000.  lea rdi, [0x00007ad2]                   ; "L"
0x00001a1e      b902000000     mov ecx, 2
0x00001a23      4c89ce         mov rsi, r9
0x00001a26      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001a28      0f97c0         seta al
0x00001a2b      1c00           sbb al, 0
0x00001a2d      84c0           test al, al
0x00001a2f      0f84fafeffff   je 0x192f
0x00001a35      4c8d05476000.  lea r8, str.EGkKMPTYZ0                  ; 0x7a83 ; "EGkKMPTYZ0"
0x00001a3c      488d4c2428     lea rcx, [rsp + 0x28]
0x00001a41      ba0a000000     mov edx, 0xa
0x00001a46      31f6           xor esi, esi
0x00001a48      4c89cf         mov rdi, r9
0x00001a4b      e820340000     call sym.xstrtoumax
0x00001a50      890424         mov dword [rsp], eax
0x00001a53      e848fbffff     call sym.imp.__errno_location
0x00001a58      8b1424         mov edx, dword [rsp]
0x00001a5b      4989c0         mov r8, rax
0x00001a5e      85d2           test edx, edx
0x00001a60      0f851d040000   jne 0x1e83
0x00001a66      4d6bf618       imul r14, r14, 0x18
0x00001a6a      c70000000000   mov dword [rax], 0
0x00001a70      488b442428     mov rax, qword [rsp + 0x28]
0x00001a75      4b890434       mov qword [r12 + r14], rax
0x00001a79      e9aafeffff     jmp 0x1928
0x00001a7e      4180394c       cmp byte [r9], 0x4c
0x00001a82      7593           jne 0x1a17
0x00001a84      488d35fd6600.  lea rsi, str.line_buffering_stdin_is_meaningless ; 0x8188 ; "line buffering stdin is meaningless"
0x00001a8b      ba05000000     mov edx, 5
0x00001a90      31ff           xor edi, edi
0x00001a92      e889fbffff     call sym.imp.dcgettext
0x00001a97      31f6           xor esi, esi
0x00001a99      4889c2         mov rdx, rax
0x00001a9c      31ff           xor edi, edi
0x00001a9e      31c0           xor eax, eax
0x00001aa0      e82bfdffff     call sym.imp.error
0x00001aa5      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001aaa      e811060000     call sym.usage
0x00001aaf      486315da9520.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20b090:4]=0
0x00001ab6      29d5           sub ebp, edx
0x00001ab8      4c8d3cd3       lea r15, [rbx + rdx*8]
0x00001abc      85ed           test ebp, ebp
0x00001abe      0f8e0f040000   jle 0x1ed3
0x00001ac4      488d1d159620.  lea rbx, obj.stdbuf                     ; 0x20b0e0
0x00001acb      4c8d642418     lea r12, [rsp + 0x18]
0x00001ad0      31d2           xor edx, edx
0x00001ad2      488d6b48       lea rbp, [rbx + 0x48]
0x00001ad6      488b4310       mov rax, qword [rbx + 0x10]
0x00001ada      4885c0         test rax, rax
0x00001add      7470           je 0x1b4f
0x00001adf      80384c         cmp byte [rax], 0x4c
0x00001ae2      8b4b08         mov ecx, dword [rbx + 8]
0x00001ae5      8d9180000000   lea edx, [rcx + 0x80]
0x00001aeb      0f8434020000   je 0x1d25
0x00001af1      81fa7f010000   cmp edx, 0x17f
0x00001af7      4c8b03         mov r8, qword [rbx]
0x00001afa      771c           ja 0x1b18
0x00001afc      4c89442408     mov qword [rsp + 8], r8
0x00001b01      890c24         mov dword [rsp], ecx
0x00001b04      e847faffff     call sym.imp.__ctype_toupper_loc
0x00001b09      48630c24       movsxd rcx, dword [rsp]
0x00001b0d      488b00         mov rax, qword [rax]
0x00001b10      4c8b442408     mov r8, qword [rsp + 8]
0x00001b15      8b0c88         mov ecx, dword [rax + rcx*4]
0x00001b18      488d15a55f00.  lea rdx, str.STDBUF                     ; 0x7ac4 ; "_STDBUF_"
0x00001b1f      488d35ae5f00.  lea rsi, str.s_c__lu                    ; 0x7ad4 ; "%s%c=%lu"
0x00001b26      4c89e7         mov rdi, r12
0x00001b29      31c0           xor eax, eax
0x00001b2b      e860370000     call sym.rpl_asprintf
0x00001b30      85c0           test eax, eax
0x00001b32      0f8864040000   js 0x1f9c
0x00001b38      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00001b3d      e8cefbffff     call sym.imp.putenv
0x00001b42      85c0           test eax, eax
0x00001b44      0f8516040000   jne 0x1f60
0x00001b4a      ba01000000     mov edx, 1
0x00001b4f      4883c318       add rbx, 0x18
0x00001b53      4839dd         cmp rbp, rbx
0x00001b56      0f857affffff   jne 0x1ad6
0x00001b5c      84d2           test dl, dl
0x00001b5e      0f84b5030000   je 0x1f19
0x00001b64      488b1dd59520.  mov rbx, qword [obj.program_name]       ; [0x20b140:8]=0
0x00001b6b      be2f000000     mov esi, 0x2f                           ; '/'
0x00001b70      4889df         mov rdi, rbx
0x00001b73      e808fbffff     call sym.imp.strchr
0x00001b78      4885c0         test rax, rax
0x00001b7b      0f84db010000   je 0x1d5c
0x00001b81      4889df         mov rdi, rbx
0x00001b84      e8270a0000     call sym.dir_name
0x00001b89      488905989520.  mov qword [obj.program_path], rax       ; [0x20b128:8]=0
0x00001b90      48833d909520.  cmp qword [obj.program_path], 0         ; [0x20b128:8]=0
0x00001b98      0f840b020000   je 0x1da9
0x00001b9e      488d3d655f00.  lea rdi, str.LD_PRELOAD                 ; 0x7b0a ; "LD_PRELOAD"
0x00001ba5      488d5c2430     lea rbx, [rsp + 0x30]
0x00001baa      4c8d742428     lea r14, [rsp + 0x28]
0x00001baf      4c8d2d7c5f00.  lea r13, str.libstdbuf.so               ; 0x7b32 ; "libstdbuf.so"
0x00001bb6      4c8d25825f00.  lea r12, [0x00007b3f]                   ; "%s/%s"
0x00001bbd      488d6c2450     lea rbp, [rsp + 0x50]
0x00001bc2      e899f9ffff     call sym.imp.getenv
0x00001bc7      48890424       mov qword [rsp], rax
0x00001bcb      488b05569520.  mov rax, qword [obj.program_path]       ; [0x20b128:8]=0
0x00001bd2      48c744244000.  mov qword [rsp + 0x40], 0
0x00001bdb      4889442430     mov qword [rsp + 0x30], rax
0x00001be0      488d052e5f00.  lea rax, str.usr_local_libexec_coreutils ; 0x7b15 ; "/usr/local/libexec/coreutils"
0x00001be7      4889442438     mov qword [rsp + 0x38], rax
0x00001bec      eb46           jmp 0x1c34
0x00001bee      31c0           xor eax, eax
0x00001bf0      4c89e9         mov rcx, r13
0x00001bf3      4c89e6         mov rsi, r12
0x00001bf6      4c89f7         mov rdi, r14
0x00001bf9      e892360000     call sym.rpl_asprintf
0x00001bfe      85c0           test eax, eax
0x00001c00      0f8896030000   js 0x1f9c
0x00001c06      488b742428     mov rsi, qword [rsp + 0x28]
0x00001c0b      4889ea         mov rdx, rbp
0x00001c0e      bf01000000     mov edi, 1
0x00001c13      e828fbffff     call sym.imp.__xstat
0x00001c18      85c0           test eax, eax
0x00001c1a      7431           je 0x1c4d
0x00001c1c      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00001c21      4883c308       add rbx, 8
0x00001c25      e856f9ffff     call sym.imp.free
0x00001c2a      48833b00       cmp qword [rbx], 0
0x00001c2e      0f84f6020000   je 0x1f2a
0x00001c34      488b13         mov rdx, qword [rbx]
0x00001c37      803a00         cmp byte [rdx], 0
0x00001c3a      75b2           jne 0x1bee
0x00001c3c      488d3def5e00.  lea rdi, str.libstdbuf.so               ; 0x7b32 ; "libstdbuf.so"
0x00001c43      e898310000     call sym.xstrdup
0x00001c48      4889442428     mov qword [rsp + 0x28], rax
0x00001c4d      488b0c24       mov rcx, qword [rsp]
0x00001c51      4c8b442428     mov r8, qword [rsp + 0x28]
0x00001c56      488d7c2420     lea rdi, [rsp + 0x20]
0x00001c5b      4885c9         test rcx, rcx
0x00001c5e      0f8428010000   je 0x1d8c
0x00001c64      488d159f5e00.  lea rdx, str.LD_PRELOAD                 ; 0x7b0a ; "LD_PRELOAD"
0x00001c6b      488d35e55e00.  lea rsi, str.s__s:_s                    ; 0x7b57 ; "%s=%s:%s"
0x00001c72      31c0           xor eax, eax
0x00001c74      e817360000     call sym.rpl_asprintf
0x00001c79      85c0           test eax, eax
0x00001c7b      0f881b030000   js 0x1f9c
0x00001c81      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00001c86      e8f5f8ffff     call sym.imp.free
0x00001c8b      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001c90      e87bfaffff     call sym.imp.putenv
0x00001c95      89c3           mov ebx, eax
0x00001c97      e804f9ffff     call sym.imp.__errno_location
0x00001c9c      85db           test ebx, ebx
0x00001c9e      4889c5         mov rbp, rax
0x00001ca1      0f853d020000   jne 0x1ee4
0x00001ca7      488b3d7a9420.  mov rdi, qword [obj.program_path]       ; [0x20b128:8]=0
0x00001cae      31db           xor ebx, ebx
0x00001cb0      e8cbf8ffff     call sym.imp.free
0x00001cb5      498b3f         mov rdi, qword [r15]
0x00001cb8      4c89fe         mov rsi, r15
0x00001cbb      e850fbffff     call sym.imp.execvp
0x00001cc0      837d0002       cmp dword [rbp], 2
0x00001cc4      498b3f         mov rdi, qword [r15]
0x00001cc7      0f94c3         sete bl
0x00001cca      e8a1280000     call sym.quote
0x00001ccf      488d35905e00.  lea rsi, str.failed_to_run_command__s   ; 0x7b66 ; "failed to run command %s"
0x00001cd6      31ff           xor edi, edi
0x00001cd8      ba05000000     mov edx, 5
0x00001cdd      4989c4         mov r12, rax
0x00001ce0      83c37e         add ebx, 0x7e
0x00001ce3      e838f9ffff     call sym.imp.dcgettext
0x00001ce8      8b7500         mov esi, dword [rbp]
0x00001ceb      4889c2         mov rdx, rax
0x00001cee      31ff           xor edi, edi
0x00001cf0      31c0           xor eax, eax
0x00001cf2      4c89e1         mov rcx, r12
0x00001cf5      e8d6faffff     call sym.imp.error
0x00001cfa      89d8           mov eax, ebx
0x00001cfc      488b9c24e800.  mov rbx, qword [rsp + 0xe8]
0x00001d04      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001d0d      0f854c010000   jne 0x1e5f
0x00001d13      4881c4f80000.  add rsp, 0xf8
0x00001d1a      5b             pop rbx
0x00001d1b      5d             pop rbp
0x00001d1c      415c           pop r12
0x00001d1e      415d           pop r13
0x00001d20      415e           pop r14
0x00001d22      415f           pop r15
0x00001d24      c3             ret
0x00001d25      81fa7f010000   cmp edx, 0x17f
0x00001d2b      7712           ja 0x1d3f
0x00001d2d      890c24         mov dword [rsp], ecx
0x00001d30      e81bf8ffff     call sym.imp.__ctype_toupper_loc
0x00001d35      48630c24       movsxd rcx, dword [rsp]
0x00001d39      488b00         mov rax, qword [rax]
0x00001d3c      8b0c88         mov ecx, dword [rax + rcx*4]
0x00001d3f      488d157e5d00.  lea rdx, str.STDBUF                     ; 0x7ac4 ; "_STDBUF_"
0x00001d46      488d35805d00.  lea rsi, str.s_c_L                      ; 0x7acd ; "%s%c=L"
0x00001d4d      4c89e7         mov rdi, r12
0x00001d50      31c0           xor eax, eax
0x00001d52      e839350000     call sym.rpl_asprintf
0x00001d57      e9d4fdffff     jmp 0x1b30
0x00001d5c      488d3d7a5d00.  lea rdi, str.proc_self_exe              ; 0x7add ; "/proc/self/exe"
0x00001d63      e8d8300000     call sym.xreadlink
0x00001d68      4885c0         test rax, rax
0x00001d6b      4889c5         mov rbp, rax
0x00001d6e      7451           je 0x1dc1
0x00001d70      4889c7         mov rdi, rax
0x00001d73      e838080000     call sym.dir_name
0x00001d78      488905a99320.  mov qword [obj.program_path], rax       ; [0x20b128:8]=0
0x00001d7f      4889ef         mov rdi, rbp
0x00001d82      e8f9f7ffff     call sym.imp.free
0x00001d87      e904feffff     jmp 0x1b90
0x00001d8c      488d15775d00.  lea rdx, str.LD_PRELOAD                 ; 0x7b0a ; "LD_PRELOAD"
0x00001d93      488d35c65d00.  lea rsi, [0x00007b60]                   ; "%s=%s"
0x00001d9a      4c89c1         mov rcx, r8
0x00001d9d      31c0           xor eax, eax
0x00001d9f      e8ec340000     call sym.rpl_asprintf
0x00001da4      e9d0feffff     jmp 0x1c79
0x00001da9      488d3d415d00.  lea rdi, str.usr_local_lib_coreutils    ; 0x7af1 ; "/usr/local/lib/coreutils"
0x00001db0      e82b300000     call sym.xstrdup
0x00001db5      4889056c9320.  mov qword [obj.program_path], rax       ; [0x20b128:8]=0
0x00001dbc      e9ddfdffff     jmp 0x1b9e
0x00001dc1      488d3d245d00.  lea rdi, str.PATH                       ; 0x7aec ; "PATH"
0x00001dc8      e893f7ffff     call sym.imp.getenv
0x00001dcd      4885c0         test rax, rax
0x00001dd0      4889c5         mov rbp, rax
0x00001dd3      74aa           je 0x1d7f
0x00001dd5      4889c7         mov rdi, rax
0x00001dd8      4c8d2dd35c00.  lea r13, [0x00007ab2]                   ; ":"
0x00001ddf      e8fc2f0000     call sym.xstrdup
0x00001de4      488d35c75c00.  lea rsi, [0x00007ab2]                   ; ":"
0x00001deb      4889c7         mov rdi, rax
0x00001dee      4889c5         mov rbp, rax
0x00001df1      e80afaffff     call sym.imp.strtok
0x00001df6      eb0f           jmp 0x1e07
0x00001df8      e883f7ffff     call sym.imp.free
0x00001dfd      4c89ee         mov rsi, r13
0x00001e00      31ff           xor edi, edi
0x00001e02      e8f9f9ffff     call sym.imp.strtok
0x00001e07      4885c0         test rax, rax
0x00001e0a      0f846fffffff   je 0x1d7f
0x00001e10      31d2           xor edx, edx
0x00001e12      4889de         mov rsi, rbx
0x00001e15      4889c7         mov rdi, rax
0x00001e18      e823090000     call sym.file_name_concat
0x00001e1d      be01000000     mov esi, 1
0x00001e22      4889c7         mov rdi, rax
0x00001e25      4989c4         mov r12, rax
0x00001e28      e8b3f9ffff     call sym.imp.access
0x00001e2d      85c0           test eax, eax
0x00001e2f      4c89e7         mov rdi, r12
0x00001e32      75c4           jne 0x1df8
0x00001e34      e877070000     call sym.dir_name
0x00001e39      4c89e7         mov rdi, r12
0x00001e3c      488905e59220.  mov qword [obj.program_path], rax       ; [0x20b128:8]=0
0x00001e43      e838f7ffff     call sym.imp.free
0x00001e48      e932ffffff     jmp 0x1d7f
0x00001e4d      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001e52      0f854dfcffff   jne 0x1aa5
0x00001e58      31ff           xor edi, edi
0x00001e5a      e861020000     call sym.usage
0x00001e5f      e8ecf7ffff     call sym.imp.__stack_chk_fail
0x00001e64      488d0de16300.  lea rcx, obj.__PRETTY_FUNCTION__.7688   ; 0x824c ; "main"
0x00001e6b      488d35b66200.  lea rsi, str..._coreutils_8.31_src_stdbuf.c ; 0x8128 ; "../coreutils-8.31/src/stdbuf.c"
0x00001e72      488d3dcf6200.  lea rdi, str.0____opt_fileno____opt_fileno___ARRAY_CARDINALITY__stdbuf ; 0x8148 ; "0 <= opt_fileno && opt_fileno < ARRAY_CARDINALITY (stdbuf)"
0x00001e79      ba50010000     mov edx, 0x150
0x00001e7e      e82df8ffff     call sym.imp.__assert_fail
0x00001e83      83ea01         sub edx, 1
0x00001e86      7444           je 0x1ecc
0x00001e88      8b00           mov eax, dword [rax]
0x00001e8a      488b3d079220.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20b098:8]=0
0x00001e91      418900         mov dword [r8], eax
0x00001e94      4c890424       mov qword [rsp], r8
0x00001e98      e8d3260000     call sym.quote
0x00001e9d      488d35ea5b00.  lea rsi, str.invalid_mode__s            ; 0x7a8e ; "invalid mode %s"
0x00001ea4      ba05000000     mov edx, 5
0x00001ea9      31ff           xor edi, edi
0x00001eab      4889c3         mov rbx, rax
0x00001eae      e86df7ffff     call sym.imp.dcgettext
0x00001eb3      4c8b0424       mov r8, qword [rsp]
0x00001eb7      4889c2         mov rdx, rax
0x00001eba      4889d9         mov rcx, rbx
0x00001ebd      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001ec2      31c0           xor eax, eax
0x00001ec4      418b30         mov esi, dword [r8]
0x00001ec7      e804f9ffff     call sym.imp.error
0x00001ecc      b84b000000     mov eax, 0x4b                           ; 'K'
0x00001ed1      ebb7           jmp 0x1e8a
0x00001ed3      ba05000000     mov edx, 5
0x00001ed8      488d35d55b00.  lea rsi, str.missing_operand            ; 0x7ab4 ; "missing operand"
0x00001edf      e9acfbffff     jmp 0x1a90
0x00001ee4      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001ee9      e882260000     call sym.quote
0x00001eee      488d35bb6200.  lea rsi, str.failed_to_update_the_environment_with__s ; 0x81b0 ; "failed to update the environment with %s"
0x00001ef5      ba05000000     mov edx, 5
0x00001efa      31ff           xor edi, edi
0x00001efc      4889c3         mov rbx, rax
0x00001eff      e81cf7ffff     call sym.imp.dcgettext
0x00001f04      8b7500         mov esi, dword [rbp]
0x00001f07      4889c2         mov rdx, rax
0x00001f0a      4889d9         mov rcx, rbx
0x00001f0d      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001f12      31c0           xor eax, eax
0x00001f14      e8b7f8ffff     call sym.imp.error
0x00001f19      ba05000000     mov edx, 5
0x00001f1e      488d35bb6200.  lea rsi, str.you_must_specify_a_buffering_mode_option ; 0x81e0 ; "you must specify a buffering mode option"
0x00001f25      e966fbffff     jmp 0x1a90
0x00001f2a      488d3d015c00.  lea rdi, str.libstdbuf.so               ; 0x7b32 ; "libstdbuf.so"
0x00001f31      e83a260000     call sym.quote
0x00001f36      488d35085c00.  lea rsi, str.failed_to_find__s          ; 0x7b45 ; "failed to find %s"
0x00001f3d      4889c3         mov rbx, rax
0x00001f40      ba05000000     mov edx, 5
0x00001f45      31ff           xor edi, edi
0x00001f47      e8d4f6ffff     call sym.imp.dcgettext
0x00001f4c      4889d9         mov rcx, rbx
0x00001f4f      4889c2         mov rdx, rax
0x00001f52      31f6           xor esi, esi
0x00001f54      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001f59      31c0           xor eax, eax
0x00001f5b      e870f8ffff     call sym.imp.error
0x00001f60      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00001f65      e806260000     call sym.quote
0x00001f6a      488d353f6200.  lea rsi, str.failed_to_update_the_environment_with__s ; 0x81b0 ; "failed to update the environment with %s"
0x00001f71      ba05000000     mov edx, 5
0x00001f76      31ff           xor edi, edi
0x00001f78      4889c5         mov rbp, rax
0x00001f7b      e8a0f6ffff     call sym.imp.dcgettext
0x00001f80      4889c3         mov rbx, rax
0x00001f83      e818f6ffff     call sym.imp.__errno_location
0x00001f88      8b30           mov esi, dword [rax]
0x00001f8a      4889e9         mov rcx, rbp
0x00001f8d      4889da         mov rdx, rbx
0x00001f90      bf7d000000     mov edi, 0x7d                           ; '}'
0x00001f95      31c0           xor eax, eax
0x00001f97      e834f8ffff     call sym.imp.error
0x00001f9c      e85f2e0000     call sym.xalloc_die
0x00001fa1      662e0f1f8400.  nop word cs:[rax + rax]
0x00001fab      0f1f440000     nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001fb0      31ed           xor ebp, ebp
0x00001fb2      4989d1         mov r9, rdx
0x00001fb5      5e             pop rsi
0x00001fb6      4889e2         mov rdx, rsp
0x00001fb9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001fbd      50             push rax
0x00001fbe      54             push rsp
0x00001fbf      4c8d05aa5900.  lea r8, sym.__libc_csu_fini             ; 0x7970
0x00001fc6      488d0d335900.  lea rcx, sym.__libc_csu_init            ; 0x7900 ; "AWAVI\x89\xd7AUATL\x8d%\xbe1 "
0x00001fcd      488d3dccf8ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x18a0 ; "AWAVI\xbf"
0x00001fd4      ff15f68f2000   call qword [reloc.__libc_start_main]    ; [0x20afd0:8]=0
0x00001fda      f4             hlt
0x00001fdb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001fe0      488d3d999020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00001fe7      55             push rbp
0x00001fe8      488d05919020.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00001fef      4839f8         cmp rax, rdi
0x00001ff2      4889e5         mov rbp, rsp
0x00001ff5      7419           je 0x2010
0x00001ff7      488b05ca8f20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20afc8:8]=0
0x00001ffe      4885c0         test rax, rax
0x00002001      740d           je 0x2010
0x00002003      5d             pop rbp
0x00002004      ffe0           jmp rax
0x00002006      662e0f1f8400.  nop word cs:[rax + rax]
0x00002010      5d             pop rbp
0x00002011      c3             ret
0x00002012      0f1f4000       nop dword [rax]
0x00002016      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002020      488d3d599020.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x00002027      488d35529020.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20b080
0x0000202e      55             push rbp
0x0000202f      4829fe         sub rsi, rdi
0x00002032      4889e5         mov rbp, rsp
0x00002035      48c1fe03       sar rsi, 3
0x00002039      4889f0         mov rax, rsi
0x0000203c      48c1e83f       shr rax, 0x3f
0x00002040      4801c6         add rsi, rax
0x00002043      48d1fe         sar rsi, 1
0x00002046      7418           je 0x2060
0x00002048      488b05918f20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20afe0:8]=0
0x0000204f      4885c0         test rax, rax
0x00002052      740c           je 0x2060
0x00002054      5d             pop rbp
0x00002055      ffe0           jmp rax
0x00002057      660f1f840000.  nop word [rax + rax]
0x00002060      5d             pop rbp
0x00002061      c3             ret
0x00002062      0f1f4000       nop dword [rax]
0x00002066      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002070      803d51902000.  cmp byte [obj.completed.7697], 0        ; [0x20b0c8:1]=0
0x00002077      752f           jne 0x20a8
0x00002079      48833d678f20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20afe8:8]=0
0x00002081      55             push rbp
0x00002082      4889e5         mov rbp, rsp
0x00002085      740c           je 0x2093
0x00002087      488b3d7a8f20.  mov rdi, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x0000208e      e8fdf7ffff     call sym..plt.got
0x00002093      e848ffffff     call sym.deregister_tm_clones
0x00002098      c60529902000.  mov byte [obj.completed.7697], 1        ; [0x20b0c8:1]=0
0x0000209f      5d             pop rbp
0x000020a0      c3             ret
0x000020a1      0f1f80000000.  nop dword [rax]
0x000020a8      f3c3           ret
0x000020aa      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000020b0      55             push rbp
0x000020b1      4889e5         mov rbp, rsp
0x000020b4      5d             pop rbp
0x000020b5      e966ffffff     jmp sym.register_tm_clones
0x000020ba      660f1f440000   nop word [rax + rax]
;-- usage:
0x000020c0      4155           push r13
0x000020c2      4154           push r12
0x000020c4      ba05000000     mov edx, 5
0x000020c9      55             push rbp
0x000020ca      53             push rbx
0x000020cb      89fd           mov ebp, edi
0x000020cd      4881ec880000.  sub rsp, 0x88
0x000020d4      488b1d659020.  mov rbx, qword [obj.program_name]       ; [0x20b140:8]=0
0x000020db      64488b042528.  mov rax, qword fs:[0x28]
0x000020e4      4889442478     mov qword [rsp + 0x78], rax
0x000020e9      31c0           xor eax, eax
0x000020eb      85ff           test edi, edi
0x000020ed      742e           je 0x211d
0x000020ef      488d35aa5a00.  lea rsi, str.Try___s___help__for_more_information. ; 0x7ba0 ; "Try '%s --help' for more information.\n"
0x000020f6      31ff           xor edi, edi
0x000020f8      e823f5ffff     call sym.imp.dcgettext
0x000020fd      488b3dbc8f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00002104      4889c2         mov rdx, rax
0x00002107      4889d9         mov rcx, rbx
0x0000210a      be01000000     mov esi, 1
0x0000210f      31c0           xor eax, eax
0x00002111      e83af7ffff     call sym.imp.__fprintf_chk
0x00002116      89ef           mov edi, ebp
0x00002118      e813f7ffff     call sym.imp.exit
0x0000211d      488d35875800.  lea rsi, str.Usage:__s_OPTION..._COMMAND ; 0x79ab ; "Usage: %s OPTION... COMMAND\n"
0x00002124      31ff           xor edi, edi
0x00002126      e8f5f4ffff     call sym.imp.dcgettext
0x0000212b      4889da         mov rdx, rbx
0x0000212e      4889c6         mov rsi, rax
0x00002131      bf01000000     mov edi, 1
0x00002136      31c0           xor eax, eax
0x00002138      e873f6ffff     call sym.imp.__printf_chk
0x0000213d      488b1d448f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002144      488d357d5a00.  lea rsi, str.Run_COMMAND__with_modified_buffering_operations_for_its_standard_streams. ; 0x7bc8 ; "Run COMMAND, with modified buffering operations for its standard streams.\n"
0x0000214b      ba05000000     mov edx, 5
0x00002150      31ff           xor edi, edi
0x00002152      e8c9f4ffff     call sym.imp.dcgettext
0x00002157      4889de         mov rsi, rbx
0x0000215a      4889c7         mov rdi, rax
0x0000215d      e88ef5ffff     call sym.imp.fputs_unlocked
0x00002162      488b1d1f8f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002169      488d35a85a00.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x7c18 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00002170      ba05000000     mov edx, 5
0x00002175      31ff           xor edi, edi
0x00002177      e8a4f4ffff     call sym.imp.dcgettext
0x0000217c      4889de         mov rsi, rbx
0x0000217f      4889c7         mov rdi, rax
0x00002182      e869f5ffff     call sym.imp.fputs_unlocked
0x00002187      488b1dfa8e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000218e      488d35d35a00.  lea rsi, str.i____input_MODE___adjust_standard_input_stream_buffering_____o____output_MODE__adjust_standard_output_stream_buffering_____e____error_MODE___adjust_standard_error_stream_buffering ; 0x7c68 ; "  -i, --input=MODE   adjust standard input stream buffering\n  -o, --output=MODE  adjust standard output stream buffering\n  -e, --error=MODE   adjust standard error stream buffering\n"
0x00002195      ba05000000     mov edx, 5
0x0000219a      31ff           xor edi, edi
0x0000219c      e87ff4ffff     call sym.imp.dcgettext
0x000021a1      4889de         mov rsi, rbx
0x000021a4      4889c7         mov rdi, rax
0x000021a7      e844f5ffff     call sym.imp.fputs_unlocked
0x000021ac      488b1dd58e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000021b3      488d35665b00.  lea rsi, str.help_____display_this_help_and_exit ; 0x7d20 ; "      --help     display this help and exit\n"
0x000021ba      ba05000000     mov edx, 5
0x000021bf      31ff           xor edi, edi
0x000021c1      e85af4ffff     call sym.imp.dcgettext
0x000021c6      4889de         mov rsi, rbx
0x000021c9      4889c7         mov rdi, rax
0x000021cc      e81ff5ffff     call sym.imp.fputs_unlocked
0x000021d1      488b1db08e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000021d8      488d35715b00.  lea rsi, str.version__output_version_information_and_exit ; 0x7d50 ; "      --version  output version information and exit\n"
0x000021df      ba05000000     mov edx, 5
0x000021e4      31ff           xor edi, edi
0x000021e6      e835f4ffff     call sym.imp.dcgettext
0x000021eb      4889de         mov rsi, rbx
0x000021ee      4889c7         mov rdi, rax
0x000021f1      e8faf4ffff     call sym.imp.fputs_unlocked
0x000021f6      488b1d8b8e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000021fd      488d35845b00.  lea rsi, str.If_MODE_is__L__the_corresponding_stream_will_be_line_buffered.__This_option_is_invalid_with_standard_input. ; 0x7d88 ; "\nIf MODE is 'L' the corresponding stream will be line buffered.\nThis option is invalid with standard input.\n"
0x00002204      ba05000000     mov edx, 5
0x00002209      31ff           xor edi, edi
0x0000220b      e810f4ffff     call sym.imp.dcgettext
0x00002210      4889de         mov rsi, rbx
0x00002213      4889c7         mov rdi, rax
0x00002216      e8d5f4ffff     call sym.imp.fputs_unlocked
0x0000221b      488b1d668e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002222      488d35cf5b00.  lea rsi, str.If_MODE_is__0__the_corresponding_stream_will_be_unbuffered. ; 0x7df8 ; "\nIf MODE is '0' the corresponding stream will be unbuffered.\n"
0x00002229      ba05000000     mov edx, 5
0x0000222e      31ff           xor edi, edi
0x00002230      e8ebf3ffff     call sym.imp.dcgettext
0x00002235      4889de         mov rsi, rbx
0x00002238      4889c7         mov rdi, rax
0x0000223b      e8b0f4ffff     call sym.imp.fputs_unlocked
0x00002240      488b1d418e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00002247      488d35ea5b00.  lea rsi, str.Otherwise_MODE_is_a_number_which_may_be_followed_by_one_of_the_following:__KB_1000__K_1024__MB_1000_1000__M_1024_1024__and_so_on_for_G__T__P__E__Z__Y.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on.__In_this_case_the_corresponding_stream_will_be_fully_buffered_with_the_buffer__size_set_to_MODE_bytes. ; 0x7e38 ; "\nOtherwise MODE is a number which may be followed by one of the following:\nKB 1000, K 1024, MB 1000*1000, M 1024*1024, and so on for G, T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\nIn this case the corresponding stream will be fully buffered with the buffer\nsize set to MODE bytes.\n"
0x0000224e      ba05000000     mov edx, 5
0x00002253      31ff           xor edi, edi
0x00002255      e8c6f3ffff     call sym.imp.dcgettext
0x0000225a      4889de         mov rsi, rbx
0x0000225d      4889c7         mov rdi, rax
0x00002260      e88bf4ffff     call sym.imp.fputs_unlocked
0x00002265      488b1d1c8e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000226c      488d35fd5c00.  lea rsi, str.NOTE:_If_COMMAND_adjusts_the_buffering_of_its_standard_streams___tee__does__for_example__then_that_will_override_corresponding_changes_by__stdbuf_.__Also_some_filters__like__dd__and__cat__etc.__don_t_use_streams_for_I_O___and_are_thus_unaffected_by__stdbuf__settings. ; 0x7f70 ; "\nNOTE: If COMMAND adjusts the buffering of its standard streams ('tee' does\nfor example) then that will override corresponding changes by 'stdbuf'.\nAlso some filters (like 'dd' and 'cat' etc.) don't use streams for I/O,\nand are thus unaffected by 'stdbuf' settings.\n"
0x00002273      ba05000000     mov edx, 5
0x00002278      31ff           xor edi, edi
0x0000227a      e8a1f3ffff     call sym.imp.dcgettext
0x0000227f      4889de         mov rsi, rbx
0x00002282      4889c7         mov rdi, rax
0x00002285      488d1d185700.  lea rbx, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x0000228c      e85ff4ffff     call sym.imp.fputs_unlocked
0x00002291      488d05305700.  lea rax, [0x000079c8]                   ; "["
0x00002298      488d0d6a5700.  lea rcx, str.sha256sum                  ; 0x7a09 ; "sha256sum"
0x0000229f      48c744246000.  mov qword [rsp + 0x60], 0
0x000022a8      48c744246800.  mov qword [rsp + 0x68], 0
0x000022b1      4889e2         mov rdx, rsp
0x000022b4      48890424       mov qword [rsp], rax
0x000022b8      488d050b5700.  lea rax, str.test_invocation            ; 0x79ca ; "test invocation"
0x000022bf      48894c2430     mov qword [rsp + 0x30], rcx
0x000022c4      488d0d485700.  lea rcx, str.sha384sum                  ; 0x7a13 ; "sha384sum"
0x000022cb      4889442408     mov qword [rsp + 8], rax
0x000022d0      488d056b5700.  lea rax, [0x00007a42]                   ; "coreutils"
0x000022d7      48894c2440     mov qword [rsp + 0x40], rcx
0x000022dc      488d0d3a5700.  lea rcx, str.sha512sum                  ; 0x7a1d ; "sha512sum"
0x000022e3      4889442410     mov qword [rsp + 0x10], rax
0x000022e8      488d05eb5600.  lea rax, str.Multi_call_invocation      ; 0x79da ; "Multi-call invocation"
0x000022ef      48894c2450     mov qword [rsp + 0x50], rcx
0x000022f4      4889442418     mov qword [rsp + 0x18], rax
0x000022f9      488d05f05600.  lea rax, str.sha224sum                  ; 0x79f0 ; "sha224sum"
0x00002300      4889442420     mov qword [rsp + 0x20], rax
0x00002305      488d05ee5600.  lea rax, str.sha2_utilities             ; 0x79fa ; "sha2 utilities"
0x0000230c      4889442428     mov qword [rsp + 0x28], rax
0x00002311      4889442438     mov qword [rsp + 0x38], rax
0x00002316      4889442448     mov qword [rsp + 0x48], rax
0x0000231b      4889442458     mov qword [rsp + 0x58], rax
0x00002320      4883c210       add rdx, 0x10
0x00002324      488b3a         mov rdi, qword [rdx]
0x00002327      4885ff         test rdi, rdi
0x0000232a      7413           je 0x233f
0x0000232c      b907000000     mov ecx, 7
0x00002331      4889de         mov rsi, rbx
0x00002334      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002336      0f97c0         seta al
0x00002339      1c00           sbb al, 0
0x0000233b      84c0           test al, al
0x0000233d      75e1           jne 0x2320
0x0000233f      4c8b6208       mov r12, qword [rdx + 8]
0x00002343      31ff           xor edi, edi
0x00002345      ba05000000     mov edx, 5
0x0000234a      488d35d65600.  lea rsi, str.s_online_help:___s         ; 0x7a27 ; "\n%s online help: <%s>\n"
0x00002351      4d85e4         test r12, r12
0x00002354      0f84c1000000   je 0x241b
0x0000235a      e8c1f2ffff     call sym.imp.dcgettext
0x0000235f      488d0d1a5d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8080 ; "https://www.gnu.org/software/coreutils/"
0x00002366      488d15d15600.  lea rdx, str.GNU_coreutils              ; 0x7a3e ; "GNU coreutils"
0x0000236d      4889c6         mov rsi, rax
0x00002370      bf01000000     mov edi, 1
0x00002375      31c0           xor eax, eax
0x00002377      e834f4ffff     call sym.imp.__printf_chk
0x0000237c      31f6           xor esi, esi
0x0000237e      bf05000000     mov edi, 5
0x00002383      e818f4ffff     call sym.imp.setlocale
0x00002388      4885c0         test rax, rax
0x0000238b      741c           je 0x23a9
0x0000238d      488d35b85600.  lea rsi, [0x00007a4c]                   ; "en_"
0x00002394      ba03000000     mov edx, 3
0x00002399      4889c7         mov rdi, rax
0x0000239c      e80ff2ffff     call sym.imp.strncmp
0x000023a1      85c0           test eax, eax
0x000023a3      0f8507010000   jne 0x24b0
0x000023a9      488d35a05600.  lea rsi, str.Full_documentation___s_s   ; 0x7a50 ; "Full documentation <%s%s>\n"
0x000023b0      31ff           xor edi, edi
0x000023b2      ba05000000     mov edx, 5
0x000023b7      e864f2ffff     call sym.imp.dcgettext
0x000023bc      488d0de15500.  lea rcx, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x000023c3      488d15b65c00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8080 ; "https://www.gnu.org/software/coreutils/"
0x000023ca      4889c6         mov rsi, rax
0x000023cd      bf01000000     mov edi, 1
0x000023d2      31c0           xor eax, eax
0x000023d4      e8d7f3ffff     call sym.imp.__printf_chk
0x000023d9      4939dc         cmp r12, rbx
0x000023dc      488d0d015600.  lea rcx, [0x000079e4]                   ; " invocation"
0x000023e3      488d1df76300.  lea rbx, [0x000087e1]
0x000023ea      480f44d9       cmove rbx, rcx
0x000023ee      488d35fb5c00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x80f0 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000023f5      31ff           xor edi, edi
0x000023f7      ba05000000     mov edx, 5
0x000023fc      e81ff2ffff     call sym.imp.dcgettext
0x00002401      4889d9         mov rcx, rbx
0x00002404      4889c6         mov rsi, rax
0x00002407      4c89e2         mov rdx, r12
0x0000240a      bf01000000     mov edi, 1
0x0000240f      31c0           xor eax, eax
0x00002411      e89af3ffff     call sym.imp.__printf_chk
0x00002416      e9fbfcffff     jmp 0x2116
0x0000241b      e800f2ffff     call sym.imp.dcgettext
0x00002420      488d0d595c00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8080 ; "https://www.gnu.org/software/coreutils/"
0x00002427      488d15105600.  lea rdx, str.GNU_coreutils              ; 0x7a3e ; "GNU coreutils"
0x0000242e      4889c6         mov rsi, rax
0x00002431      bf01000000     mov edi, 1
0x00002436      31c0           xor eax, eax
0x00002438      e873f3ffff     call sym.imp.__printf_chk
0x0000243d      31f6           xor esi, esi
0x0000243f      bf05000000     mov edi, 5
0x00002444      e857f3ffff     call sym.imp.setlocale
0x00002449      4885c0         test rax, rax
0x0000244c      7418           je 0x2466
0x0000244e      488d35f75500.  lea rsi, [0x00007a4c]                   ; "en_"
0x00002455      ba03000000     mov edx, 3
0x0000245a      4889c7         mov rdi, rax
0x0000245d      e84ef1ffff     call sym.imp.strncmp
0x00002462      85c0           test eax, eax
0x00002464      7543           jne 0x24a9
0x00002466      488d35e35500.  lea rsi, str.Full_documentation___s_s   ; 0x7a50 ; "Full documentation <%s%s>\n"
0x0000246d      ba05000000     mov edx, 5
0x00002472      31ff           xor edi, edi
0x00002474      4c8d25295500.  lea r12, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x0000247b      488d1d625500.  lea rbx, [0x000079e4]                   ; " invocation"
0x00002482      e899f1ffff     call sym.imp.dcgettext
0x00002487      488d0d165500.  lea rcx, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x0000248e      488d15eb5b00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x8080 ; "https://www.gnu.org/software/coreutils/"
0x00002495      4889c6         mov rsi, rax
0x00002498      bf01000000     mov edi, 1
0x0000249d      31c0           xor eax, eax
0x0000249f      e80cf3ffff     call sym.imp.__printf_chk
0x000024a4      e945ffffff     jmp 0x23ee
0x000024a9      4c8d25f45400.  lea r12, str.stdbuf                     ; 0x79a4 ; "stdbuf"
0x000024b0      4c8b2dd18b20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x000024b7      488d35ea5b00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x80a8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000024be      31ff           xor edi, edi
0x000024c0      ba05000000     mov edx, 5
0x000024c5      e856f1ffff     call sym.imp.dcgettext
0x000024ca      4c89ee         mov rsi, r13
0x000024cd      4889c7         mov rdi, rax
0x000024d0      e81bf2ffff     call sym.imp.fputs_unlocked
0x000024d5      e9cffeffff     jmp 0x23a9
0x000024da      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x000024e0      48893d518c20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20b138:8]=0
0x000024e7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000024e8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000024f0      40883d398c20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20b130:1]=0
0x000024f7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000024f8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002500      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002501      53             push rbx
0x00002502      4883ec08       sub rsp, 8
0x00002506      488b3d7b8b20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x0000250d      e89e310000     call sym.close_stream
0x00002512      85c0           test eax, eax
0x00002514      7416           je 0x252c
0x00002516      e885f0ffff     call sym.imp.__errno_location
0x0000251b      803d0e8c2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20b130:1]=0
0x00002522      4889c3         mov rbx, rax
0x00002525      741c           je 0x2543
0x00002527      833820         cmp dword [rax], 0x20
0x0000252a      7517           jne 0x2543
0x0000252c      488b3d8d8b20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x00002533      e878310000     call sym.close_stream
0x00002538      85c0           test eax, eax
0x0000253a      7546           jne 0x2582
0x0000253c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002540      5b             pop rbx
0x00002541      5d             pop rbp
0x00002542      c3             ret
0x00002543      488d350c5d00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x8256 ; "write error"
0x0000254a      31ff           xor edi, edi
0x0000254c      ba05000000     mov edx, 5
0x00002551      e8caf0ffff     call sym.imp.dcgettext
0x00002556      488b3ddb8b20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20b138:8]=0
0x0000255d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002560      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002563      7428           je 0x258d
0x00002565      e8061e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000256a      8b33           mov esi, dword [rbx]
0x0000256c      488d15ef5c00.  lea rdx, str.s:__s                      ; 0x8262 ; "%s: %s"
0x00002573      4889c1         mov rcx, rax
0x00002576      4989e8         mov r8, rbp
0x00002579      31ff           xor edi, edi
0x0000257b      31c0           xor eax, eax
0x0000257d      e84ef2ffff     call sym.imp.error
0x00002582      8b3d908a2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20b018:4]=1
0x00002588      e833f0ffff     call sym.imp._exit
0x0000258d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000258f      488d15d05c00.  lea rdx, [0x00008266]                   ; "%s"
0x00002596      4889c1         mov rcx, rax
0x00002599      31ff           xor edi, edi
0x0000259b      31c0           xor eax, eax
0x0000259d      e82ef2ffff     call sym.imp.error
0x000025a2      ebde           jmp 0x2582
0x000025a4      662e0f1f8400.  nop word cs:[rax + rax]
0x000025ae      6690           nop
;-- dir_name:
0x000025b0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:33
0x000025b4      e877000000     call sym.mdir_name                      ; ../coreutils-8.31/lib/dirname.c:34
0x000025b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname.c:35
0x000025bc      7405           je 0x25c3
0x000025be      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname.c:38
0x000025c2      c3             ret
0x000025c3      e838280000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/dirname.c:36
0x000025c8      0f1f84000000.  nop dword [rax + rax]
;-- dir_len:
0x000025d0      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x000025d1      53             push rbx
0x000025d2      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x000025d4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/dirname-lgpl.c:33
0x000025d7      4883ec08       sub rsp, 8
0x000025db      803f2f         cmp byte [rdi], 0x2f                    ; ../coreutils-8.31/lib/dirname-lgpl.c:41
0x000025de      400f94c5       sete bpl
0x000025e2      e8a9000000     call sym.last_component                 ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x000025e7      4889c1         mov rcx, rax
0x000025ea      4829d9         sub rcx, rbx
0x000025ed      4839e9         cmp rcx, rbp
0x000025f0      762e           jbe 0x2620
0x000025f2      8078ff2f       cmp byte [rax - 1], 0x2f                ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x000025f6      488d51ff       lea rdx, [rcx - 1]
0x000025fa      7412           je 0x260e
0x000025fc      eb22           jmp 0x2620
0x000025fe      6690           nop
0x00002600      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00002605      488d42ff       lea rax, [rdx - 1]
0x00002609      7508           jne 0x2613
0x0000260b      4889c2         mov rdx, rax
0x0000260e      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:48
0x00002611      75ed           jne 0x2600
0x00002613      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x00002617      4889d0         mov rax, rdx
0x0000261a      5b             pop rbx
0x0000261b      5d             pop rbp
0x0000261c      c3             ret
0x0000261d      0f1f00         nop dword [rax]
0x00002620      4883c408       add rsp, 8
0x00002624      4889ca         mov rdx, rcx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:50
0x00002627      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/dirname-lgpl.c:53
0x0000262a      5b             pop rbx
0x0000262b      5d             pop rbp
0x0000262c      c3             ret
0x0000262d      0f1f00         nop dword [rax]
;-- mdir_name:
0x00002630      55             push rbp                                ; ../coreutils-8.31/lib/dirname-lgpl.c:72
0x00002631      53             push rbx
0x00002632      4889fd         mov rbp, rdi
0x00002635      4883ec08       sub rsp, 8
0x00002639      e892ffffff     call sym.dir_len                        ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x0000263e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00002641      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:73
0x00002644      0f94c0         sete al                                 ; ../coreutils-8.31/lib/dirname-lgpl.c:74
0x00002647      0fb6c0         movzx eax, al
0x0000264a      488d7c0301     lea rdi, [rbx + rax + 1]                ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000264f      e8fcf0ffff     call sym.imp.malloc
0x00002654      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x00002657      4889c1         mov rcx, rax                            ; ../coreutils-8.31/lib/dirname-lgpl.c:78
0x0000265a      741a           je 0x2676                               ; ../coreutils-8.31/lib/dirname-lgpl.c:79
0x0000265c      4889da         mov rdx, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000265f      4889ee         mov rsi, rbp
0x00002662      4889c7         mov rdi, rax
0x00002665      e8b6f0ffff     call sym.imp.memcpy
0x0000266a      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x0000266d      4889c1         mov rcx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00002670      740e           je 0x2680                               ; ../coreutils-8.31/lib/dirname-lgpl.c:82
0x00002672      c6041900       mov byte [rcx + rbx], 0                 ; ../coreutils-8.31/lib/dirname-lgpl.c:84
0x00002676      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/dirname-lgpl.c:86
0x0000267a      4889c8         mov rax, rcx
0x0000267d      5b             pop rbx
0x0000267e      5d             pop rbp
0x0000267f      c3             ret
0x00002680      c6002e         mov byte [rax], 0x2e                    ; ../coreutils-8.31/lib/dirname-lgpl.c:83 ; '.'
                                                                       ; [0x2e:1]=0
0x00002683      bb01000000     mov ebx, 1
0x00002688      ebe8           jmp 0x2672
0x0000268a      660f1f440000   nop word [rax + rax]
;-- last_component:
0x00002690      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00002693      4889f8         mov rax, rdi
0x00002696      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00002699      7511           jne 0x26ac
0x0000269b      0f1f440000     nop dword [rax + rax]
0x000026a0      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x000026a4      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x000026a7      80fa2f         cmp dl, 0x2f
0x000026aa      74f4           je 0x26a0
0x000026ac      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000026ae      743a           je 0x26ea
0x000026b0      4889c1         mov rcx, rax
0x000026b3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x000026b5      eb1e           jmp 0x26d5
0x000026b7      660f1f840000.  nop word [rax + rax]
0x000026c0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x000026c3      7405           je 0x26ca
0x000026c5      4889c8         mov rax, rcx
0x000026c8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x000026ca      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000026ce      0fb611         movzx edx, byte [rcx]
0x000026d1      84d2           test dl, dl
0x000026d3      7415           je 0x26ea
0x000026d5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x000026d8      75e6           jne 0x26c0
0x000026da      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000026de      0fb611         movzx edx, byte [rcx]
0x000026e1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x000026e6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x000026e8      75eb           jne 0x26d5
0x000026ea      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x000026ec      0f1f4000       nop dword [rax]
;-- base_len:
0x000026f0      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x000026f1      4889fb         mov rbx, rdi
0x000026f4      e847efffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x000026f9      4883f801       cmp rax, 1
0x000026fd      760b           jbe 0x270a
0x000026ff      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00002704      488d50ff       lea rdx, [rax - 1]
0x00002708      740e           je 0x2718
0x0000270a      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000270b      c3             ret
0x0000270c      0f1f4000       nop dword [rax]
0x00002710      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00002713      0f1f440000     nop dword [rax + rax]
0x00002718      4883fa01       cmp rdx, 1
0x0000271c      7412           je 0x2730
0x0000271e      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00002723      488d42ff       lea rax, [rdx - 1]
0x00002727      74e7           je 0x2710
0x00002729      4889d0         mov rax, rdx
0x0000272c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x0000272d      c3             ret
0x0000272e      6690           nop
0x00002730      b801000000     mov eax, 1
0x00002735      5b             pop rbx
0x00002736      c3             ret
0x00002737      660f1f840000.  nop word [rax + rax]
;-- file_name_concat:
0x00002740      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x00002744      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x00002749      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000274c      7405           je 0x2753
0x0000274e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x00002752      c3             ret
0x00002753      e8a8260000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x00002758      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x00002760      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x00002762      4156           push r14
0x00002764      4989d7         mov r15, rdx
0x00002767      4155           push r13
0x00002769      4154           push r12
0x0000276b      4989fc         mov r12, rdi
0x0000276e      55             push rbp
0x0000276f      53             push rbx
0x00002770      4889f5         mov rbp, rsi
0x00002773      4883ec18       sub rsp, 0x18
0x00002777      e814ffffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000277c      4889c3         mov rbx, rax
0x0000277f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x00002782      e869ffffff     call sym.base_len
0x00002787      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000278a      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000278d      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00002790      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x00002793      e8a8eeffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00002798      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000279b      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000279e      7430           je 0x27d0                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x000027a0      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x000027a6      0f84a4000000   je 0x2850
0x000027ac      31c0           xor eax, eax
0x000027ae      807d002f       cmp byte [rbp], 0x2f
0x000027b2      ba00000000     mov edx, 0
0x000027b7      0f95c0         setne al
0x000027ba      48890424       mov qword [rsp], rax
0x000027be      b82f000000     mov eax, 0x2f                           ; '/'
0x000027c3      0f44c2         cmove eax, edx
0x000027c6      8844240f       mov byte [rsp + 0xf], al
0x000027ca      eb22           jmp 0x27ee
0x000027cc      0f1f4000       nop dword [rax]
0x000027d0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x000027d2      807d002f       cmp byte [rbp], 0x2f
0x000027d6      ba00000000     mov edx, 0
0x000027db      0f94c0         sete al
0x000027de      48890424       mov qword [rsp], rax
0x000027e2      b82e000000     mov eax, 0x2e                           ; '.'
0x000027e7      0f45c2         cmovne eax, edx
0x000027ea      8844240f       mov byte [rsp + 0xf], al
0x000027ee      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x000027f3      48033c24       add rdi, qword [rsp]
0x000027f7      e854efffff     call sym.imp.malloc
0x000027fc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x000027ff      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x00002802      7432           je 0x2836                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x00002804      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00002807      4889da         mov rdx, rbx
0x0000280a      4c89e6         mov rsi, r12
0x0000280d      e8aeefffff     call sym.imp.mempcpy
0x00002812      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00002817      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x0000281b      4801c7         add rdi, rax
0x0000281e      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00002821      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x00002823      7403           je 0x2828                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x00002825      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x00002828      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000282b      4889ee         mov rsi, rbp
0x0000282e      e88defffff     call sym.imp.mempcpy
0x00002833      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x00002836      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000283a      4c89e8         mov rax, r13
0x0000283d      5b             pop rbx
0x0000283e      5d             pop rbp
0x0000283f      415c           pop r12
0x00002841      415d           pop r13
0x00002843      415e           pop r14
0x00002845      415f           pop r15
0x00002847      c3             ret
0x00002848      0f1f84000000.  nop dword [rax + rax]
0x00002850      48c704240000.  mov qword [rsp], 0
0x00002858      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000285d      eb8f           jmp 0x27ee
0x0000285f      90             nop
;-- set_program_name:
0x00002860      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002863      53             push rbx
0x00002864      7477           je 0x28dd                               ; ../coreutils-8.31/lib/progname.c:51
0x00002866      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000286b      4889fb         mov rbx, rdi
0x0000286e      e81deeffff     call sym.imp.strrchr
0x00002873      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002876      7455           je 0x28cd
0x00002878      4c8d4001       lea r8, [rax + 1]
0x0000287c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000287f      4829da         sub rdx, rbx
0x00002882      4883fa06       cmp rdx, 6
0x00002886      7e45           jle 0x28cd
0x00002888      488d70fa       lea rsi, [rax - 6]
0x0000288c      488d3d155a00.  lea rdi, str..libs                      ; 0x82a8 ; "/.libs/"
0x00002893      b907000000     mov ecx, 7
0x00002898      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000289a      0f97c2         seta dl
0x0000289d      80da00         sbb dl, 0
0x000028a0      84d2           test dl, dl
0x000028a2      7529           jne 0x28cd
0x000028a4      488d3d055a00.  lea rdi, [0x000082b0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000028ab      b903000000     mov ecx, 3
0x000028b0      4c89c6         mov rsi, r8
0x000028b3      4c89c3         mov rbx, r8
0x000028b6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028b8      0f97c2         seta dl
0x000028bb      80da00         sbb dl, 0
0x000028be      84d2           test dl, dl
0x000028c0      750b           jne 0x28cd
0x000028c2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000028c6      48891db38720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20b080:8]=0
0x000028cd      48891d6c8820.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20b140:8]=0
0x000028d4      48891dc58720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20b0a0:8]=0
0x000028db      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000028dc      c3             ret
0x000028dd      488b0ddc8720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20b0c0:8]=0
0x000028e4      488d3d855900.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x8270 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000028eb      ba37000000     mov edx, 0x37                           ; '7'
0x000028f0      be01000000     mov esi, 1
0x000028f5      e846efffff     call sym.imp.fwrite
0x000028fa      e891ecffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000028ff      90             nop
;-- gettext_quote.part.1:
0x00002900      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002901      53             push rbx
0x00002902      4889fd         mov rbp, rdi
0x00002905      89f3           mov ebx, esi
0x00002907      4883ec08       sub rsp, 8
0x0000290b      e8802e0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002910      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002913      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002916      80fa55         cmp dl, 0x55
0x00002919      7475           je 0x2990
0x0000291b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000291e      7420           je 0x2940
0x00002920      488d059c5900.  lea rax, str.l______l                   ; 0x82c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002927      488d15975900.  lea rdx, [0x000082c5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000292e      83fb09         cmp ebx, 9
0x00002931      480f45c2       cmovne rax, rdx
0x00002935      4883c408       add rsp, 8
0x00002939      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000293a      5d             pop rbp
0x0000293b      c3             ret
0x0000293c      0f1f4000       nop dword [rax]
0x00002940      0fb65001       movzx edx, byte [rax + 1]
0x00002944      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002947      80fa42         cmp dl, 0x42
0x0000294a      75d4           jne 0x2920
0x0000294c      80780231       cmp byte [rax + 2], 0x31
0x00002950      75ce           jne 0x2920
0x00002952      80780338       cmp byte [rax + 3], 0x38
0x00002956      75c8           jne 0x2920
0x00002958      80780430       cmp byte [rax + 4], 0x30
0x0000295c      75c2           jne 0x2920
0x0000295e      80780533       cmp byte [rax + 5], 0x33
0x00002962      75bc           jne 0x2920
0x00002964      80780630       cmp byte [rax + 6], 0x30
0x00002968      75b6           jne 0x2920
0x0000296a      80780700       cmp byte [rax + 7], 0
0x0000296e      75b0           jne 0x2920
0x00002970      807d0060       cmp byte [rbp], 0x60
0x00002974      488d05415900.  lea rax, [0x000082bc]
0x0000297b      488d153e5900.  lea rdx, [0x000082c0]
0x00002982      480f45c2       cmovne rax, rdx
0x00002986      4883c408       add rsp, 8
0x0000298a      5b             pop rbx
0x0000298b      5d             pop rbp
0x0000298c      c3             ret
0x0000298d      0f1f00         nop dword [rax]
0x00002990      0fb65001       movzx edx, byte [rax + 1]
0x00002994      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002997      80fa54         cmp dl, 0x54
0x0000299a      7584           jne 0x2920
0x0000299c      0fb65002       movzx edx, byte [rax + 2]
0x000029a0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029a3      80fa46         cmp dl, 0x46
0x000029a6      0f8574ffffff   jne 0x2920
0x000029ac      8078032d       cmp byte [rax + 3], 0x2d
0x000029b0      0f856affffff   jne 0x2920
0x000029b6      80780438       cmp byte [rax + 4], 0x38
0x000029ba      0f8560ffffff   jne 0x2920
0x000029c0      80780500       cmp byte [rax + 5], 0
0x000029c4      0f8556ffffff   jne 0x2920
0x000029ca      807d0060       cmp byte [rbp], 0x60
0x000029ce      488d05df5800.  lea rax, [0x000082b4]                   ; "\u2018"
0x000029d5      488d15dc5800.  lea rdx, [0x000082b8]                   ; "\u2019"
0x000029dc      480f45c2       cmovne rax, rdx
0x000029e0      4883c408       add rsp, 8
0x000029e4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000029e5      5d             pop rbp
0x000029e6      c3             ret
0x000029e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000029f0      4157           push r15
0x000029f2      4156           push r14
0x000029f4      4589c7         mov r15d, r8d
0x000029f7      4155           push r13
0x000029f9      4154           push r12
0x000029fb      4989fe         mov r14, rdi
0x000029fe      55             push rbp
0x000029ff      53             push rbx
0x00002a00      4489cb         mov ebx, r9d
0x00002a03      4989f5         mov r13, rsi
0x00002a06      4889cd         mov rbp, rcx
0x00002a09      83e302         and ebx, 2
0x00002a0c      4881ecb80000.  sub rsp, 0xb8
0x00002a13      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002a1b      4889542410     mov qword [rsp + 0x10], rdx
0x00002a20      4489442408     mov dword [rsp + 8], r8d
0x00002a25      44894c2478     mov dword [rsp + 0x78], r9d
0x00002a2a      4889442420     mov qword [rsp + 0x20], rax
0x00002a2f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002a37      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002a3c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002a44      4889442460     mov qword [rsp + 0x60], rax
0x00002a49      64488b042528.  mov rax, qword fs:[0x28]
0x00002a52      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002a5a      31c0           xor eax, eax
0x00002a5c      e8cfebffff     call sym.imp.__ctype_get_mb_cur_max
0x00002a61      4183ff0a       cmp r15d, 0xa
0x00002a65      4889442458     mov qword [rsp + 0x58], rax
0x00002a6a      0f87af110000   ja 0x3c1f
0x00002a70      488d0da95800.  lea rcx, [0x00008320]
0x00002a77      4489fa         mov edx, r15d
0x00002a7a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002a7e      4801c8         add rax, rcx
0x00002a81      ffe0           jmp rax
0x00002a83      c644240e01     mov byte [rsp + 0xe], 1
0x00002a88      c644247c00     mov byte [rsp + 0x7c], 0
0x00002a8d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002a90      48c744245000.  mov qword [rsp + 0x50], 0
0x00002a99      c644240f01     mov byte [rsp + 0xf], 1
0x00002a9e      c644240d00     mov byte [rsp + 0xd], 0
0x00002aa3      488d051b5800.  lea rax, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00002aaa      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ab3      4531ff         xor r15d, r15d
0x00002ab6      c74424080200.  mov dword [rsp + 8], 2
0x00002abe      4889442448     mov qword [rsp + 0x48], rax
0x00002ac3      4531db         xor r11d, r11d
0x00002ac6      4889e8         mov rax, rbp
0x00002ac9      4589e0         mov r8d, r12d
0x00002acc      4c89dd         mov rbp, r11
0x00002acf      4989c3         mov r11, rax
0x00002ad2      660f1f440000   nop word [rax + rax]
0x00002ad8      4939eb         cmp r11, rbp
0x00002adb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002adf      4983fbff       cmp r11, 0xffffffffffffffff
0x00002ae3      750d           jne 0x2af2
0x00002ae5      488b442410     mov rax, qword [rsp + 0x10]
0x00002aea      803c2800       cmp byte [rax + rbp], 0
0x00002aee      410f95c4       setne r12b
0x00002af2      4584e4         test r12b, r12b
0x00002af5      0f8455060000   je 0x3150
0x00002afb      837c240802     cmp dword [rsp + 8], 2
0x00002b00      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b05      4c8d0c2f       lea r9, [rdi + rbp]
0x00002b09      0f95c0         setne al
0x00002b0c      2244240d       and al, byte [rsp + 0xd]
0x00002b10      4189c2         mov r10d, eax
0x00002b13      0f84a7000000   je 0x2bc0
0x00002b19      488b442418     mov rax, qword [rsp + 0x18]
0x00002b1e      4885c0         test rax, rax
0x00002b21      0f8429040000   je 0x2f50
0x00002b27      4983fbff       cmp r11, 0xffffffffffffffff
0x00002b2b      488d5c0500     lea rbx, [rbp + rax]
0x00002b30      752e           jne 0x2b60
0x00002b32      4883f801       cmp rax, 1
0x00002b36      7628           jbe 0x2b60
0x00002b38      4488442438     mov byte [rsp + 0x38], r8b
0x00002b3d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002b42      4c894c2428     mov qword [rsp + 0x28], r9
0x00002b47      e8f4eaffff     call sym.imp.strlen
0x00002b4c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002b52      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002b58      4989c3         mov r11, rax
0x00002b5b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002b60      4c39db         cmp rbx, r11
0x00002b63      4488542428     mov byte [rsp + 0x28], r10b
0x00002b68      0f87b2050000   ja 0x3120
0x00002b6e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002b73      488b742448     mov rsi, qword [rsp + 0x48]
0x00002b78      4c89cf         mov rdi, r9
0x00002b7b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002b80      4488442438     mov byte [rsp + 0x38], r8b
0x00002b85      4c894c2430     mov qword [rsp + 0x30], r9
0x00002b8a      e851ebffff     call sym.imp.memcmp
0x00002b8f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002b91      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002b96      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002b9c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002ba1      0f8579050000   jne 0x3120
0x00002ba7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bac      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002bb2      0f857d0f0000   jne 0x3b35
0x00002bb8      0f1f84000000.  nop dword [rax + rax]
0x00002bc0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002bc4      80fb7e         cmp bl, 0x7e
0x00002bc7      0f871b030000   ja 0x2ee8
0x00002bcd      488d0d785700.  lea rcx, [0x0000834c]
0x00002bd4      0fb6d3         movzx edx, bl
0x00002bd7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002bdb      4801c8         add rax, rcx
0x00002bde      ffe0           jmp rax
0x00002be0      4531d2         xor r10d, r10d
0x00002be3      4983fb01       cmp r11, 1
0x00002be7      0f95c0         setne al
0x00002bea      4983fbff       cmp r11, 0xffffffffffffffff
0x00002bee      750c           jne 0x2bfc
0x00002bf0      488b442410     mov rax, qword [rsp + 0x10]
0x00002bf5      80780100       cmp byte [rax + 1], 0
0x00002bf9      0f95c0         setne al
0x00002bfc      837c240802     cmp dword [rsp + 8], 2
0x00002c01      0f94c2         sete dl
0x00002c04      84c0           test al, al
0x00002c06      0f844c020000   je 0x2e58
0x00002c0c      4531e4         xor r12d, r12d
0x00002c0f      31c0           xor eax, eax
0x00002c11      0f1f80000000.  nop dword [rax]
0x00002c18      807c240d01     cmp byte [rsp + 0xd], 1
0x00002c1d      0f850f010000   jne 0x2d32
0x00002c23      84d2           test dl, dl
0x00002c25      0f8507010000   jne 0x2d32
0x00002c2b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002c30      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002c33      7414           je 0x2c49
0x00002c35      89da           mov edx, ebx
0x00002c37      c0ea05         shr dl, 5
0x00002c3a      0fb6d2         movzx edx, dl
0x00002c3d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002c40      0fa3da         bt edx, ebx
0x00002c43      0f824a010000   jb 0x2d93
0x00002c49      4584d2         test r10b, r10b
0x00002c4c      0f8541010000   jne 0x2d93
0x00002c52      83f001         xor eax, 1
0x00002c55      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c59      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002c5c      84c0           test al, al
0x00002c5e      7420           je 0x2c80                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c60      4d39fd         cmp r13, r15
0x00002c63      7605           jbe 0x2c6a
0x00002c65      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c6a      498d4701       lea rax, [r15 + 1]
0x00002c6e      4939c5         cmp r13, rax
0x00002c71      7606           jbe 0x2c79
0x00002c73      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c79      4983c702       add r15, 2
0x00002c7d      4531c0         xor r8d, r8d
0x00002c80      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002c83      7304           jae 0x2c89                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002c85      43881c3e       mov byte [r14 + r15], bl
0x00002c89      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002c8e      4983c701       add r15, 1
0x00002c92      b800000000     mov eax, 0
0x00002c97      4584e4         test r12b, r12b
0x00002c9a      0f44f8         cmove edi, eax
0x00002c9d      40887c240e     mov byte [rsp + 0xe], dil
0x00002ca2      e931feffff     jmp 0x2ad8
0x00002ca7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002cb0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002cb3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002cb7      83f802         cmp eax, 2
0x00002cba      0f84b8050000   je 0x3278
0x00002cc0      83f805         cmp eax, 5
0x00002cc3      0f846f050000   je 0x3238
0x00002cc9      83f802         cmp eax, 2
0x00002ccc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002cd1      0f94c2         sete dl
0x00002cd4      4531e4         xor r12d, r12d
0x00002cd7      31c0           xor eax, eax
0x00002cd9      e93affffff     jmp 0x2c18
0x00002cde      6690           nop
0x00002ce0      4531d2         xor r10d, r10d
0x00002ce3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002ce8      0f8402050000   je 0x31f0
0x00002cee      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002cf3      31d2           xor edx, edx
0x00002cf5      31c0           xor eax, eax
0x00002cf7      bb27000000     mov ebx, 0x27                           ; '''
0x00002cfc      e917ffffff     jmp 0x2c18
0x00002d01      0f1f80000000.  nop dword [rax]
0x00002d08      ba09000000     mov edx, 9
0x00002d0d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002d12      837c240802     cmp dword [rsp + 8], 2
0x00002d17      0f94c0         sete al
0x00002d1a      2244240f       and al, byte [rsp + 0xf]
0x00002d1e      0f854a010000   jne 0x2e6e
0x00002d24      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d29      7565           jne 0x2d90
0x00002d2b      89d3           mov ebx, edx
0x00002d2d      4531e4         xor r12d, r12d
0x00002d30      31c0           xor eax, eax
0x00002d32      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d37      0f85eefeffff   jne 0x2c2b
0x00002d3d      e907ffffff     jmp 0x2c49                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002d42      660f1f440000   nop word [rax + rax]
0x00002d48      ba08000000     mov edx, 8
0x00002d4d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002d52      ebd0           jmp 0x2d24
0x00002d54      0f1f4000       nop dword [rax]
0x00002d58      837c240802     cmp dword [rsp + 8], 2
0x00002d5d      0f84cd030000   je 0x3130
0x00002d63      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d68      0f8412020000   je 0x2f80
0x00002d6e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d73      0f8407020000   je 0x2f80
0x00002d79      48837c241800   cmp qword [rsp + 0x18], 0
0x00002d7f      0f85b6030000   jne 0x313b
0x00002d85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002d8a      660f1f440000   nop word [rax + rax]
0x00002d90      4531e4         xor r12d, r12d
0x00002d93      837c240802     cmp dword [rsp + 8], 2
0x00002d98      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002d9b      807c240f00     cmp byte [rsp + 0xf], 0
0x00002da0      89d0           mov eax, edx
0x00002da2      0f8550080000   jne 0x35f8
0x00002da8      4489c0         mov eax, r8d
0x00002dab      83f001         xor eax, 1
0x00002dae      20d0           and al, dl
0x00002db0      742f           je 0x2de1
0x00002db2      4d39fd         cmp r13, r15
0x00002db5      7605           jbe 0x2dbc
0x00002db7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002dbc      498d5701       lea rdx, [r15 + 1]
0x00002dc0      4939d5         cmp r13, rdx
0x00002dc3      7606           jbe 0x2dcb
0x00002dc5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002dcb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002dcf      4939d5         cmp r13, rdx
0x00002dd2      7606           jbe 0x2dda
0x00002dd4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002dda      4983c703       add r15, 3
0x00002dde      4189c0         mov r8d, eax
0x00002de1      4d39fd         cmp r13, r15
0x00002de4      7605           jbe 0x2deb
0x00002de6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002deb      4983c701       add r15, 1
0x00002def      4883c501       add rbp, 1
0x00002df3      e988feffff     jmp 0x2c80
0x00002df8      0f1f84000000.  nop dword [rax + rax]
0x00002e00      807c240d00     cmp byte [rsp + 0xd], 0
0x00002e05      0f85c8010000   jne 0x2fd3
0x00002e0b      31d2           xor edx, edx
0x00002e0d      f644247801     test byte [rsp + 0x78], 1
0x00002e12      0f8413ffffff   je 0x2d2b
0x00002e18      4883c501       add rbp, 1
0x00002e1c      e9b7fcffff     jmp 0x2ad8
0x00002e21      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002e28      837c240802     cmp dword [rsp + 8], 2
0x00002e2d      0f94c2         sete dl
0x00002e30      31c0           xor eax, eax
0x00002e32      e9e1fdffff     jmp 0x2c18
0x00002e37      660f1f840000.  nop word [rax + rax]
0x00002e40      ba07000000     mov edx, 7
0x00002e45      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002e4a      e9d5feffff     jmp 0x2d24
0x00002e4f      90             nop
0x00002e50      837c240802     cmp dword [rsp + 8], 2
0x00002e55      0f94c2         sete dl
0x00002e58      4885ed         test rbp, rbp
0x00002e5b      0f85abfdffff   jne 0x2c0c
0x00002e61      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002e66      20d0           and al, dl
0x00002e68      0f84aafdffff   je 0x2c18
0x00002e6e      4c89dd         mov rbp, r11
0x00002e71      c74424080200.  mov dword [rsp + 8], 2
0x00002e79      e9fb060000     jmp 0x3579
0x00002e7e      6690           nop
0x00002e80      837c240802     cmp dword [rsp + 8], 2
0x00002e85      0f94c2         sete dl
0x00002e88      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002e8b      ebd4           jmp 0x2e61
0x00002e8d      0f1f00         nop dword [rax]
0x00002e90      837c240802     cmp dword [rsp + 8], 2
0x00002e95      bb20000000     mov ebx, 0x20                           ; "@"
0x00002e9a      0f94c2         sete dl
0x00002e9d      ebc2           jmp 0x2e61
0x00002e9f      90             nop
0x00002ea0      ba0d000000     mov edx, 0xd
0x00002ea5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002eaa      e963feffff     jmp 0x2d12
0x00002eaf      90             nop
0x00002eb0      ba0c000000     mov edx, 0xc
0x00002eb5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002eba      e965feffff     jmp 0x2d24
0x00002ebf      90             nop
0x00002ec0      ba0b000000     mov edx, 0xb
0x00002ec5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002eca      e955feffff     jmp 0x2d24
0x00002ecf      90             nop
0x00002ed0      ba0a000000     mov edx, 0xa
0x00002ed5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002eda      e933feffff     jmp 0x2d12
0x00002edf      90             nop
0x00002ee0      4531d2         xor r10d, r10d
0x00002ee3      0f1f440000     nop dword [rax + rax]
0x00002ee8      48837c245801   cmp qword [rsp + 0x58], 1
0x00002eee      0f85a4030000   jne 0x3298
0x00002ef4      4c895c2438     mov qword [rsp + 0x38], r11
0x00002ef9      4488442430     mov byte [rsp + 0x30], r8b
0x00002efe      4488542428     mov byte [rsp + 0x28], r10b
0x00002f03      e878e9ffff     call sym.imp.__ctype_b_loc
0x00002f08      488b08         mov rcx, qword [rax]
0x00002f0b      0fb6d3         movzx edx, bl
0x00002f0e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002f14      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002f1a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002f1f      bf01000000     mov edi, 1
0x00002f24      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002f28      66250040       and ax, 0x4000                          ; "s0\xffs(L\x8bT$8A\x89\xe9D\x8b\x03L\x89\xf9L\x89\xf2H\x89\xc7ARH\x8bt$8\xe8\xcb\xe9\xff\xff\x8bD$,H\x83\xc4 M\x85\xe4A\x89E"
0x00002f2c      410f95c4       setne r12b
0x00002f30      0f94c0         sete al
0x00002f33      2244240d       and al, byte [rsp + 0xd]
0x00002f37      84c0           test al, al
0x00002f39      0f8592090000   jne 0x38d1
0x00002f3f      837c240802     cmp dword [rsp + 8], 2
0x00002f44      0f94c2         sete dl
0x00002f47      e9ccfcffff     jmp 0x2c18
0x00002f4c      0f1f4000       nop dword [rax]
0x00002f50      410fb619       movzx ebx, byte [r9]
0x00002f54      80fb7e         cmp bl, 0x7e
0x00002f57      7787           ja 0x2ee0
0x00002f59      488d0de85500.  lea rcx, [0x00008548]
0x00002f60      0fb6d3         movzx edx, bl
0x00002f63      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f67      4801c8         add rax, rcx
0x00002f6a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002f6c      0f1f4000       nop dword [rax]
0x00002f70      4531d2         xor r10d, r10d
0x00002f73      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f78      0f85f0fdffff   jne 0x2d6e
0x00002f7e      6690           nop
0x00002f80      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002f85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002f8a      e995fdffff     jmp 0x2d24
0x00002f8f      90             nop
0x00002f90      ba0c000000     mov edx, 0xc
0x00002f95      4531d2         xor r10d, r10d
0x00002f98      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002f9d      e982fdffff     jmp 0x2d24
0x00002fa2      660f1f440000   nop word [rax + rax]
0x00002fa8      ba0a000000     mov edx, 0xa
0x00002fad      4531d2         xor r10d, r10d
0x00002fb0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002fb5      e958fdffff     jmp 0x2d12
0x00002fba      660f1f440000   nop word [rax + rax]
0x00002fc0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002fc5      e9c6fdffff     jmp 0x2d90
0x00002fca      660f1f440000   nop word [rax + rax]
0x00002fd0      4531d2         xor r10d, r10d
0x00002fd3      837c240802     cmp dword [rsp + 8], 2
0x00002fd8      0f94c2         sete dl
0x00002fdb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fe0      0f85940b0000   jne 0x3b7a
0x00002fe6      4489c0         mov eax, r8d
0x00002fe9      4c89f9         mov rcx, r15
0x00002fec      83f001         xor eax, 1
0x00002fef      20d0           and al, dl
0x00002ff1      742d           je 0x3020
0x00002ff3      4d39fd         cmp r13, r15
0x00002ff6      7605           jbe 0x2ffd
0x00002ff8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002ffd      498d4f01       lea rcx, [r15 + 1]
0x00003001      4939cd         cmp r13, rcx
0x00003004      7606           jbe 0x300c
0x00003006      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000300c      498d4f02       lea rcx, [r15 + 2]
0x00003010      4939cd         cmp r13, rcx
0x00003013      0f8730060000   ja 0x3649
0x00003019      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000301d      4189c0         mov r8d, eax
0x00003020      4939cd         cmp r13, rcx
0x00003023      7605           jbe 0x302a
0x00003025      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000302a      837c240802     cmp dword [rsp + 8], 2
0x0000302f      4c8d7901       lea r15, [rcx + 1]
0x00003033      0f8400060000   je 0x3639
0x00003039      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000303d      4c39d8         cmp rax, r11
0x00003040      7319           jae 0x305b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003042      488b442410     mov rax, qword [rsp + 0x10]
0x00003047      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000304c      88442428       mov byte [rsp + 0x28], al
0x00003050      83e830         sub eax, 0x30
0x00003053      3c09           cmp al, 9
0x00003055      0f862e080000   jbe 0x3889
0x0000305b      4489e0         mov eax, r12d
0x0000305e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003063      4531e4         xor r12d, r12d
0x00003066      e9adfbffff     jmp 0x2c18                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000306b      0f1f440000     nop dword [rax + rax]
0x00003070      837c240802     cmp dword [rsp + 8], 2
0x00003075      4589d4         mov r12d, r10d
0x00003078      0f94c2         sete dl
0x0000307b      4531d2         xor r10d, r10d
0x0000307e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003080      e993fbffff     jmp 0x2c18                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003085      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003088      837c240802     cmp dword [rsp + 8], 2
0x0000308d      0f94c2         sete dl
0x00003090      4531d2         xor r10d, r10d
0x00003093      e9c0fdffff     jmp 0x2e58
0x00003098      0f1f84000000.  nop dword [rax + rax]
0x000030a0      837c240802     cmp dword [rsp + 8], 2
0x000030a5      0f94c2         sete dl
0x000030a8      4531d2         xor r10d, r10d
0x000030ab      4531e4         xor r12d, r12d
0x000030ae      e9aefdffff     jmp 0x2e61
0x000030b3      0f1f440000     nop dword [rax + rax]
0x000030b8      837c240802     cmp dword [rsp + 8], 2
0x000030bd      4589d4         mov r12d, r10d
0x000030c0      bb20000000     mov ebx, 0x20                           ; "@"
0x000030c5      0f94c2         sete dl
0x000030c8      4531d2         xor r10d, r10d
0x000030cb      e991fdffff     jmp 0x2e61
0x000030d0      ba0d000000     mov edx, 0xd
0x000030d5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000030d8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000030dd      e930fcffff     jmp 0x2d12
0x000030e2      660f1f440000   nop word [rax + rax]
0x000030e8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000030ed      e99efcffff     jmp 0x2d90
0x000030f2      660f1f440000   nop word [rax + rax]
0x000030f8      ba09000000     mov edx, 9
0x000030fd      4531d2         xor r10d, r10d
0x00003100      bb74000000     mov ebx, 0x74                           ; 't'
0x00003105      e908fcffff     jmp 0x2d12
0x0000310a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003110      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003115      e976fcffff     jmp 0x2d90
0x0000311a      660f1f440000   nop word [rax + rax]
0x00003120      4531d2         xor r10d, r10d
0x00003123      e998faffff     jmp 0x2bc0
0x00003128      0f1f84000000.  nop dword [rax + rax]
0x00003130      807c240f00     cmp byte [rsp + 0xf], 0
0x00003135      0f8565090000   jne 0x3aa0
0x0000313b      4883c501       add rbp, 1
0x0000313f      4489c0         mov eax, r8d
0x00003142      4531e4         xor r12d, r12d
0x00003145      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000314a      e90dfbffff     jmp 0x2c5c
0x0000314f      90             nop
0x00003150      837c240802     cmp dword [rsp + 8], 2
0x00003155      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000315a      4589c4         mov r12d, r8d
0x0000315d      4c89dd         mov rbp, r11
0x00003160      0f94c2         sete dl
0x00003163      89d8           mov eax, ebx
0x00003165      4d85ff         test r15, r15
0x00003168      0f94c1         sete cl
0x0000316b      21d0           and eax, edx
0x0000316d      20c8           and al, cl
0x0000316f      0f85610a0000   jne 0x3bd6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003175      89d8           mov eax, ebx
0x00003177      83f001         xor eax, 1
0x0000317a      20c2           and dl, al
0x0000317c      0f846a090000   je 0x3aec
0x00003182      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003187      0f845d090000   je 0x3aea
0x0000318d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003192      0f85f5090000   jne 0x3b8d
0x00003198      4d85ed         test r13, r13
0x0000319b      0f94c0         sete al
0x0000319e      48837c245000   cmp qword [rsp + 0x50], 0
0x000031a4      0f95c2         setne dl
0x000031a7      20d0           and al, dl
0x000031a9      0f841d0a0000   je 0x3bcc
0x000031af      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000031b4      488d1d0a5100.  lea rbx, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000031bb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000031bf      c74424080200.  mov dword [rsp + 8], 2
0x000031c7      41bf01000000   mov r15d, 1
0x000031cd      48c744241801.  mov qword [rsp + 0x18], 1
0x000031d6      c644240f00     mov byte [rsp + 0xf], 0
0x000031db      48895c2448     mov qword [rsp + 0x48], rbx
0x000031e0      8844247c       mov byte [rsp + 0x7c], al
0x000031e4      e9daf8ffff     jmp 0x2ac3
0x000031e9      0f1f80000000.  nop dword [rax]
0x000031f0      807c240f00     cmp byte [rsp + 0xf], 0
0x000031f5      0f85a5080000   jne 0x3aa0
0x000031fb      4d85ed         test r13, r13
0x000031fe      0f84fc030000   je 0x3600                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003204      31d2           xor edx, edx
0x00003206      48837c245000   cmp qword [rsp + 0x50], 0
0x0000320c      0f85ee030000   jne 0x3600                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003212      4c896c2450     mov qword [rsp + 0x50], r13
0x00003217      4983c703       add r15, 3
0x0000321b      31c0           xor eax, eax
0x0000321d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003222      4531c0         xor r8d, r8d
0x00003225      4989d5         mov r13, rdx
0x00003228      bb27000000     mov ebx, 0x27                           ; '''
0x0000322d      e917faffff     jmp 0x2c49
0x00003232      660f1f440000   nop word [rax + rax]
0x00003238      f644247804     test byte [rsp + 0x78], 4
0x0000323d      7421           je 0x3260
0x0000323f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003243      4c39d9         cmp rcx, r11
0x00003246      7318           jae 0x3260
0x00003248      488b442410     mov rax, qword [rsp + 0x10]
0x0000324d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003252      0f848a070000   je 0x39e2
0x00003258      0f1f84000000.  nop dword [rax + rax]
0x00003260      31d2           xor edx, edx
0x00003262      4531e4         xor r12d, r12d
0x00003265      31c0           xor eax, eax
0x00003267      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000326c      e9a7f9ffff     jmp 0x2c18
0x00003271      0f1f80000000.  nop dword [rax]
0x00003278      807c240f00     cmp byte [rsp + 0xf], 0
0x0000327d      0f851d080000   jne 0x3aa0
0x00003283      4531e4         xor r12d, r12d
0x00003286      31c0           xor eax, eax
0x00003288      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000328d      e9b7f9ffff     jmp 0x2c49                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003292      660f1f440000   nop word [rax + rax]
0x00003298      488d8424a000.  lea rax, [rsp + 0xa0]
0x000032a0      4983fbff       cmp r11, 0xffffffffffffffff
0x000032a4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000032b0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000032b5      752d           jne 0x32e4
0x000032b7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000032bc      4488442440     mov byte [rsp + 0x40], r8b
0x000032c1      4488542438     mov byte [rsp + 0x38], r10b
0x000032c6      4c894c2430     mov qword [rsp + 0x30], r9
0x000032cb      e870e3ffff     call sym.imp.strlen
0x000032d0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000032d6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000032dc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000032df      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000032e4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000032ec      31c9           xor ecx, ecx
0x000032ee      885c247e       mov byte [rsp + 0x7e], bl
0x000032f2      448844247d     mov byte [rsp + 0x7d], r8b
0x000032f7      4889cb         mov rbx, rcx
0x000032fa      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003302      4889442438     mov qword [rsp + 0x38], rax
0x00003307      448854247f     mov byte [rsp + 0x7f], r10b
0x0000330c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003314      4c89742440     mov qword [rsp + 0x40], r14
0x00003319      4c896c2470     mov qword [rsp + 0x70], r13
0x0000331e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003323      488b442410     mov rax, qword [rsp + 0x10]
0x00003328      4c8d741d00     lea r14, [rbp + rbx]
0x0000332d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003332      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003337      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000333c      4e8d2c30       lea r13, [rax + r14]
0x00003340      4c29f2         sub rdx, r14
0x00003343      4c89ee         mov rsi, r13
0x00003346      e805200000     call sym.rpl_mbrtowc
0x0000334b      4885c0         test rax, rax
0x0000334e      4989c7         mov r15, rax
0x00003351      744e           je 0x33a1
0x00003353      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003357      0f8418060000   je 0x3975
0x0000335d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003361      0f849a050000   je 0x3901
0x00003367      837c240802     cmp dword [rsp + 8], 2
0x0000336c      0f94c0         sete al
0x0000336f      2244240f       and al, byte [rsp + 0xf]
0x00003373      0f8597010000   jne 0x3510
0x00003379      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003380      e8ebe4ffff     call sym.imp.iswprint
0x00003385      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000338a      85c0           test eax, eax
0x0000338c      b800000000     mov eax, 0
0x00003391      440f44e0       cmove r12d, eax
0x00003395      4c01fb         add rbx, r15
0x00003398      e8c3e4ffff     call sym.imp.mbsinit
0x0000339d      85c0           test eax, eax
0x0000339f      7482           je 0x3323
0x000033a1      4489e2         mov edx, r12d
0x000033a4      4889df         mov rdi, rbx
0x000033a7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000033ad      83f201         xor edx, 1
0x000033b0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000033b5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000033bb      2254240d       and dl, byte [rsp + 0xd]
0x000033bf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000033c7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000033cc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000033d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000033d6      4883ff01       cmp rdi, 1
0x000033da      0f86fb050000   jbe 0x39db
0x000033e0      4889f9         mov rcx, rdi
0x000033e3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000033e5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000033eb      4801e9         add rcx, rbp
0x000033ee      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000033f3      e9b6000000     jmp 0x34ae
0x000033f8      0f1f84000000.  nop dword [rax + rax]
0x00003400      837c240802     cmp dword [rsp + 8], 2
0x00003405      0f94c0         sete al
0x00003408      4584c9         test r9b, r9b
0x0000340b      0f85af040000   jne 0x38c0
0x00003411      4489c6         mov esi, r8d
0x00003414      83f601         xor esi, 1
0x00003417      4020f0         and al, sil
0x0000341a      742f           je 0x344b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000341c      4d39fd         cmp r13, r15
0x0000341f      7605           jbe 0x3426
0x00003421      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003426      498d7701       lea rsi, [r15 + 1]
0x0000342a      4939f5         cmp r13, rsi
0x0000342d      7606           jbe 0x3435                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000342f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003435      498d7702       lea rsi, [r15 + 2]
0x00003439      4939f5         cmp r13, rsi
0x0000343c      7606           jbe 0x3444
0x0000343e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003444      4983c703       add r15, 3
0x00003448      4189c0         mov r8d, eax
0x0000344b      4d39fd         cmp r13, r15
0x0000344e      7605           jbe 0x3455
0x00003450      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003455      498d4701       lea rax, [r15 + 1]
0x00003459      4939c5         cmp r13, rax
0x0000345c      760d           jbe 0x346b
0x0000345e      89d8           mov eax, ebx
0x00003460      c0e806         shr al, 6
0x00003463      83c030         add eax, 0x30
0x00003466      4388443e01     mov byte [r14 + r15 + 1], al
0x0000346b      498d4702       lea rax, [r15 + 2]
0x0000346f      4939c5         cmp r13, rax
0x00003472      7610           jbe 0x3484
0x00003474      89d8           mov eax, ebx
0x00003476      c0e803         shr al, 3
0x00003479      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000347c      83c030         add eax, 0x30
0x0000347f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003484      83e307         and ebx, 7
0x00003487      4883c501       add rbp, 1
0x0000348b      4983c703       add r15, 3
0x0000348f      83c330         add ebx, 0x30
0x00003492      4839cd         cmp rbp, rcx
0x00003495      0f83e5f7ffff   jae 0x2c80
0x0000349b      89d6           mov esi, edx
0x0000349d      4d39fd         cmp r13, r15
0x000034a0      7604           jbe 0x34a6
0x000034a2      43881c3e       mov byte [r14 + r15], bl
0x000034a6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000034aa      4983c701       add r15, 1
0x000034ae      84d2           test dl, dl
0x000034b0      0f854affffff   jne 0x3400
0x000034b6      89f0           mov eax, esi
0x000034b8      83f001         xor eax, 1
0x000034bb      4421c0         and eax, r8d
0x000034be      4584d2         test r10b, r10b
0x000034c1      740e           je 0x34d1
0x000034c3      4d39fd         cmp r13, r15
0x000034c6      7605           jbe 0x34cd
0x000034c8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000034cd      4983c701       add r15, 1
0x000034d1      4883c501       add rbp, 1
0x000034d5      4839cd         cmp rbp, rcx
0x000034d8      0f837ef7ffff   jae 0x2c5c
0x000034de      84c0           test al, al
0x000034e0      0f84f8030000   je 0x38de
0x000034e6      4d39fd         cmp r13, r15
0x000034e9      7605           jbe 0x34f0
0x000034eb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000034f0      498d4701       lea rax, [r15 + 1]
0x000034f4      4939c5         cmp r13, rax
0x000034f7      7606           jbe 0x34ff
0x000034f9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000034ff      4983c702       add r15, 2
0x00003503      4531d2         xor r10d, r10d
0x00003506      4531c0         xor r8d, r8d
0x00003509      eb92           jmp 0x349d
0x0000350b      0f1f440000     nop dword [rax + rax]
0x00003510      4983ff01       cmp r15, 1
0x00003514      0f845ffeffff   je 0x3379
0x0000351a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000351f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003523      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003528      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000352c      eb0f           jmp 0x353d
0x0000352e      6690           nop
0x00003530      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003534      4939d0         cmp r8, rdx
0x00003537      0f843cfeffff   je 0x3379
0x0000353d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003540      83e95b         sub ecx, 0x5b
0x00003543      80f921         cmp cl, 0x21
0x00003546      77e8           ja 0x3530                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003548      be01000000     mov esi, 1
0x0000354d      48d3e6         shl rsi, cl
0x00003550      4889f1         mov rcx, rsi
0x00003553      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000355d      4885f1         test rcx, rsi
0x00003560      74ce           je 0x3530
0x00003562      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003567      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000356c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003571      c74424080200.  mov dword [rsp + 8], 2
0x00003579      807c240d00     cmp byte [rsp + 0xd], 0
0x0000357e      7410           je 0x3590
0x00003580      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003582      b804000000     mov eax, 4
0x00003587      0f44442408     cmove eax, dword [rsp + 8]
0x0000358c      89442408       mov dword [rsp + 8], eax
0x00003590      4883ec08       sub rsp, 8
0x00003594      4889e9         mov rcx, rbp
0x00003597      4c89ee         mov rsi, r13
0x0000359a      ff742468       push qword [rsp + 0x68]
0x0000359e      ff742478       push qword [rsp + 0x78]
0x000035a2      4c89f7         mov rdi, r14
0x000035a5      6a00           push 0
0x000035a7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000035af      448b442428     mov r8d, dword [rsp + 0x28]
0x000035b4      488b542430     mov rdx, qword [rsp + 0x30]
0x000035b9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000035bd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000035c2      4883c420       add rsp, 0x20
0x000035c6      4989c7         mov r15, rax
0x000035c9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000035d1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000035da      4c89f8         mov rax, r15
0x000035dd      0f8500060000   jne 0x3be3
0x000035e3      4881c4b80000.  add rsp, 0xb8
0x000035ea      5b             pop rbx
0x000035eb      5d             pop rbp
0x000035ec      415c           pop r12
0x000035ee      415d           pop r13
0x000035f0      415e           pop r14
0x000035f2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x000035f4      c3             ret
0x000035f5      0f1f00         nop dword [rax]
0x000035f8      4c89dd         mov rbp, r11
0x000035fb      e979ffffff     jmp 0x3579
0x00003600      4d39fd         cmp r13, r15
0x00003603      7605           jbe 0x360a
0x00003605      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000360a      498d4701       lea rax, [r15 + 1]
0x0000360e      4939c5         cmp r13, rax
0x00003611      7606           jbe 0x3619
0x00003613      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003619      498d4702       lea rax, [r15 + 2]
0x0000361d      4939c5         cmp r13, rax
0x00003620      0f86ec050000   jbe 0x3c12
0x00003626      4c89ea         mov rdx, r13
0x00003629      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000362f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003634      e9d9fbffff     jmp 0x3212
0x00003639      4489e0         mov eax, r12d
0x0000363c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003641      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003644      e900f6ffff     jmp 0x2c49                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003649      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000364f      e9c5f9ffff     jmp 0x3019
0x00003654      85db           test ebx, ebx
0x00003656      0f8527f4ffff   jne 0x2a83
0x0000365c      c644240d01     mov byte [rsp + 0xd], 1
0x00003661      4d85ed         test r13, r13
0x00003664      0f8590050000   jne 0x3bfa
0x0000366a      488d05544c00.  lea rax, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003671      48c744245000.  mov qword [rsp + 0x50], 0
0x0000367a      c644240e01     mov byte [rsp + 0xe], 1
0x0000367f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003684      4531e4         xor r12d, r12d
0x00003687      c644240f00     mov byte [rsp + 0xf], 0
0x0000368c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003695      4889442448     mov qword [rsp + 0x48], rax
0x0000369a      41bf01000000   mov r15d, 1
0x000036a0      c74424080200.  mov dword [rsp + 8], 2
0x000036a8      e916f4ffff     jmp 0x2ac3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000036ad      0f1f00         nop dword [rax]
0x000036b0      85db           test ebx, ebx
0x000036b2      0f85f5030000   jne 0x3aad
0x000036b8      4d85ed         test r13, r13
0x000036bb      0f8425020000   je 0x38e6
0x000036c1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000036c5      c644240e01     mov byte [rsp + 0xe], 1
0x000036ca      4531e4         xor r12d, r12d
0x000036cd      c644247c00     mov byte [rsp + 0x7c], 0
0x000036d2      48c744245000.  mov qword [rsp + 0x50], 0
0x000036db      488d05e14b00.  lea rax, str.l______l                   ; 0x82c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000036e2      c644240f00     mov byte [rsp + 0xf], 0
0x000036e7      c644240d01     mov byte [rsp + 0xd], 1
0x000036ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000036f5      41bf01000000   mov r15d, 1
0x000036fb      4889442448     mov qword [rsp + 0x48], rax
0x00003700      e9bef3ffff     jmp 0x2ac3
0x00003705      488d05b74b00.  lea rax, str.l______l                   ; 0x82c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000370c      c644240e01     mov byte [rsp + 0xe], 1
0x00003711      c644247c00     mov byte [rsp + 0x7c], 0
0x00003716      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003719      48c744245000.  mov qword [rsp + 0x50], 0
0x00003722      c644240f01     mov byte [rsp + 0xf], 1
0x00003727      c644240d01     mov byte [rsp + 0xd], 1
0x0000372c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003735      4531ff         xor r15d, r15d
0x00003738      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000373d      c74424080500.  mov dword [rsp + 8], 5
0x00003745      e979f3ffff     jmp 0x2ac3
0x0000374a      c644240e01     mov byte [rsp + 0xe], 1
0x0000374f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003754      4531e4         xor r12d, r12d
0x00003757      48c744245000.  mov qword [rsp + 0x50], 0
0x00003760      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003765      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003768      c644240d01     mov byte [rsp + 0xd], 1
0x0000376d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003776      48c744244800.  mov qword [rsp + 0x48], 0
0x0000377f      e93ff3ffff     jmp 0x2ac3
0x00003784      837c24080a     cmp dword [rsp + 8], 0xa
0x00003789      7456           je 0x37e1
0x0000378b      488d35354b00.  lea rsi, [0x000082c7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00003792      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00003794      ba05000000     mov edx, 5
0x00003799      e882deffff     call sym.imp.dcgettext
0x0000379e      4889c1         mov rcx, rax
0x000037a1      4889442468     mov qword [rsp + 0x68], rax
0x000037a6      488d051a4b00.  lea rax, [0x000082c7]                   ; "`"
0x000037ad      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000037b0      0f8498030000   je 0x3b4e
0x000037b6      488d35084b00.  lea rsi, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037bd      31ff           xor edi, edi
0x000037bf      ba05000000     mov edx, 5
0x000037c4      e857deffff     call sym.imp.dcgettext
0x000037c9      4889c1         mov rcx, rax
0x000037cc      4889442460     mov qword [rsp + 0x60], rax
0x000037d1      488d05ed4a00.  lea rax, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037d8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000037db      0f8483030000   je 0x3b64
0x000037e1      4531ff         xor r15d, r15d
0x000037e4      85db           test ebx, ebx
0x000037e6      0f84c1010000   je 0x39ad
0x000037ec      85db           test ebx, ebx
0x000037ee      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000037f3      0f9544240f     setne byte [rsp + 0xf]
0x000037f8      4531e4         xor r12d, r12d
0x000037fb      4889df         mov rdi, rbx
0x000037fe      e83ddeffff     call sym.imp.strlen
0x00003803      48895c2448     mov qword [rsp + 0x48], rbx
0x00003808      4889442418     mov qword [rsp + 0x18], rax
0x0000380d      c644240e01     mov byte [rsp + 0xe], 1
0x00003812      c644247c00     mov byte [rsp + 0x7c], 0
0x00003817      48c744245000.  mov qword [rsp + 0x50], 0
0x00003820      c644240d01     mov byte [rsp + 0xd], 1
0x00003825      e999f2ffff     jmp 0x2ac3
0x0000382a      c644240e01     mov byte [rsp + 0xe], 1
0x0000382f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003834      4531e4         xor r12d, r12d
0x00003837      48c744245000.  mov qword [rsp + 0x50], 0
0x00003840      c644240f00     mov byte [rsp + 0xf], 0
0x00003845      4531ff         xor r15d, r15d
0x00003848      c644240d00     mov byte [rsp + 0xd], 0
0x0000384d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003856      48c744244800.  mov qword [rsp + 0x48], 0
0x0000385f      e95ff2ffff     jmp 0x2ac3
0x00003864      c644240e01     mov byte [rsp + 0xe], 1
0x00003869      c644247c00     mov byte [rsp + 0x7c], 0
0x0000386e      4531e4         xor r12d, r12d
0x00003871      48c744245000.  mov qword [rsp + 0x50], 0
0x0000387a      c644240f01     mov byte [rsp + 0xf], 1
0x0000387f      c644240d01     mov byte [rsp + 0xd], 1
0x00003884      e91af2ffff     jmp 0x2aa3
0x00003889      4d39fd         cmp r13, r15
0x0000388c      7605           jbe 0x3893
0x0000388e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003893      488d4102       lea rax, [rcx + 2]
0x00003897      4939c5         cmp r13, rax
0x0000389a      7606           jbe 0x38a2
0x0000389c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000038a2      4489e0         mov eax, r12d
0x000038a5      4c8d7903       lea r15, [rcx + 3]
0x000038a9      4531e4         xor r12d, r12d
0x000038ac      bb30000000     mov ebx, 0x30                           ; '0'
0x000038b1      e962f3ffff     jmp 0x2c18
0x000038b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000038c0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000038c5      4c89dd         mov rbp, r11
0x000038c8      885c240d       mov byte [rsp + 0xd], bl
0x000038cc      e9a8fcffff     jmp 0x3579
0x000038d1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000038d6      4531e4         xor r12d, r12d
0x000038d9      e902fbffff     jmp 0x33e0
0x000038de      4531d2         xor r10d, r10d
0x000038e1      e9b7fbffff     jmp 0x349d
0x000038e6      48c744245000.  mov qword [rsp + 0x50], 0
0x000038ef      c644240e01     mov byte [rsp + 0xe], 1
0x000038f4      4531e4         xor r12d, r12d
0x000038f7      c644247c00     mov byte [rsp + 0x7c], 0
0x000038fc      e9dafdffff     jmp 0x36db
0x00003901      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003906      4c89f6         mov rsi, r14
0x00003909      4c89e9         mov rcx, r13
0x0000390c      4889d8         mov rax, rbx
0x0000390f      4889df         mov rdi, rbx
0x00003912      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003918      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000391d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003925      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003928      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000392e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003936      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000393b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003940      7326           jae 0x3968
0x00003942      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003945      7510           jne 0x3957
0x00003947      eb1f           jmp 0x3968
0x00003949      0f1f80000000.  nop dword [rax]
0x00003950      41803c0100     cmp byte [r9 + rax], 0
0x00003955      740e           je 0x3965
0x00003957      4883c001       add rax, 1
0x0000395b      488d540500     lea rdx, [rbp + rax]
0x00003960      4939d3         cmp r11, rdx
0x00003963      77eb           ja 0x3950
0x00003965      4889c7         mov rdi, rax
0x00003968      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000396d      4531e4         xor r12d, r12d
0x00003970      e961faffff     jmp 0x33d6
0x00003975      4889df         mov rdi, rbx
0x00003978      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000397e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003983      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003989      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003991      4531e4         xor r12d, r12d
0x00003994      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003999      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000399e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000039a3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000039a8      e929faffff     jmp 0x33d6
0x000039ad      488b542468     mov rdx, qword [rsp + 0x68]
0x000039b2      0fb602         movzx eax, byte [rdx]
0x000039b5      84c0           test al, al
0x000039b7      0f842ffeffff   je 0x37ec
0x000039bd      0f1f00         nop dword [rax]
0x000039c0      4d39fd         cmp r13, r15
0x000039c3      7604           jbe 0x39c9
0x000039c5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000039c9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000039cd      420fb6043a     movzx eax, byte [rdx + r15]
0x000039d2      84c0           test al, al
0x000039d4      75ea           jne 0x39c0
0x000039d6      e911feffff     jmp 0x37ec
0x000039db      89d0           mov eax, edx
0x000039dd      e955f5ffff     jmp 0x2f37
0x000039e2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000039e6      80fb3e         cmp bl, 0x3e
0x000039e9      0f8771f8ffff   ja 0x3260
0x000039ef      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000039f9      480fa3d8       bt rax, rbx
0x000039fd      0f835df8ffff   jae 0x3260
0x00003a03      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a08      0f85e4010000   jne 0x3bf2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003a0e      4d39fd         cmp r13, r15
0x00003a11      7605           jbe 0x3a18
0x00003a13      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003a18      498d4701       lea rax, [r15 + 1]
0x00003a1c      4939c5         cmp r13, rax
0x00003a1f      7606           jbe 0x3a27
0x00003a21      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a27      498d4702       lea rax, [r15 + 2]
0x00003a2b      4939c5         cmp r13, rax
0x00003a2e      7606           jbe 0x3a36
0x00003a30      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a36      498d4703       lea rax, [r15 + 3]
0x00003a3a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003a3d      7606           jbe 0x3a45
0x00003a3f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003a45      4983c704       add r15, 4
0x00003a49      31d2           xor edx, edx
0x00003a4b      4531e4         xor r12d, r12d
0x00003a4e      31c0           xor eax, eax
0x00003a50      4889cd         mov rbp, rcx
0x00003a53      e9c0f1ffff     jmp 0x2c18
0x00003a58      85db           test ebx, ebx
0x00003a5a      0f8488010000   je 0x3be8
0x00003a60      488d055e4800.  lea rax, [0x000082c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003a67      c644240e01     mov byte [rsp + 0xe], 1
0x00003a6c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a71      4531e4         xor r12d, r12d
0x00003a74      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a7d      c644240f01     mov byte [rsp + 0xf], 1
0x00003a82      c644240d00     mov byte [rsp + 0xd], 0
0x00003a87      48c744241801.  mov qword [rsp + 0x18], 1
0x00003a90      4531ff         xor r15d, r15d
0x00003a93      4889442448     mov qword [rsp + 0x48], rax
0x00003a98      e926f0ffff     jmp 0x2ac3
0x00003a9d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003aa0      4c89dd         mov rbp, r11
0x00003aa3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003aa8      e9ccfaffff     jmp 0x3579
0x00003aad      488d050f4800.  lea rax, str.l______l                   ; 0x82c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003ab4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003ab9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003abe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003ac1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aca      c644240f01     mov byte [rsp + 0xf], 1
0x00003acf      c644240d01     mov byte [rsp + 0xd], 1
0x00003ad4      48c744241801.  mov qword [rsp + 0x18], 1
0x00003add      4531ff         xor r15d, r15d
0x00003ae0      4889442448     mov qword [rsp + 0x48], rax
0x00003ae5      e9d9efffff     jmp 0x2ac3
0x00003aea      89d0           mov eax, edx
0x00003aec      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003af1      4885db         test rbx, rbx
0x00003af4      742c           je 0x3b22
0x00003af6      84c0           test al, al
0x00003af8      7428           je 0x3b22
0x00003afa      0fb60b         movzx ecx, byte [rbx]
0x00003afd      4889d8         mov rax, rbx
0x00003b00      84c9           test cl, cl
0x00003b02      741e           je 0x3b22
0x00003b04      4c89fa         mov rdx, r15
0x00003b07      4c29f8         sub rax, r15
0x00003b0a      4939d5         cmp r13, rdx
0x00003b0d      7604           jbe 0x3b13
0x00003b0f      41880c16       mov byte [r14 + rdx], cl
0x00003b13      4883c201       add rdx, 1
0x00003b17      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003b1b      84c9           test cl, cl
0x00003b1d      75eb           jne 0x3b0a
0x00003b1f      4989d7         mov r15, rdx
0x00003b22      4d39fd         cmp r13, r15
0x00003b25      0f869efaffff   jbe 0x35c9
0x00003b2b      43c6043e00     mov byte [r14 + r15], 0
0x00003b30      e994faffff     jmp 0x35c9
0x00003b35      837c240802     cmp dword [rsp + 8], 2
0x00003b3a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b3f      4c89dd         mov rbp, r11
0x00003b42      0f94c0         sete al
0x00003b45      885c240d       mov byte [rsp + 0xd], bl
0x00003b49      e92bfaffff     jmp 0x3579
0x00003b4e      8b742408       mov esi, dword [rsp + 8]
0x00003b52      4889cf         mov rdi, rcx
0x00003b55      e8a6edffff     call sym.gettext_quote.part.1
0x00003b5a      4889442468     mov qword [rsp + 0x68], rax
0x00003b5f      e952fcffff     jmp 0x37b6
0x00003b64      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003b68      4889cf         mov rdi, rcx
0x00003b6b      e890edffff     call sym.gettext_quote.part.1
0x00003b70      4889442460     mov qword [rsp + 0x60], rax
0x00003b75      e967fcffff     jmp 0x37e1
0x00003b7a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b7f      4c89dd         mov rbp, r11
0x00003b82      89d0           mov eax, edx
0x00003b84      885c240d       mov byte [rsp + 0xd], bl
0x00003b88      e9ecf9ffff     jmp 0x3579
0x00003b8d      4883ec08       sub rsp, 8
0x00003b91      41b805000000   mov r8d, 5
0x00003b97      4c89d9         mov rcx, r11
0x00003b9a      ff742468       push qword [rsp + 0x68]
0x00003b9e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003ba2      4c89f7         mov rdi, r14
0x00003ba5      ff742438       push qword [rsp + 0x38]
0x00003ba9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003bb1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003bb6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003bbb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003bc0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003bc4      4989c7         mov r15, rax
0x00003bc7      e9fdf9ffff     jmp 0x35c9
0x00003bcc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003bd1      e916ffffff     jmp 0x3aec
0x00003bd6      c74424080200.  mov dword [rsp + 8], 2
0x00003bde      e996f9ffff     jmp 0x3579
0x00003be3      e868daffff     call sym.imp.__stack_chk_fail
0x00003be8      c644240d00     mov byte [rsp + 0xd], 0
0x00003bed      e96ffaffff     jmp 0x3661
0x00003bf2      4c89dd         mov rbp, r11
0x00003bf5      e996f9ffff     jmp 0x3590
0x00003bfa      c644240e01     mov byte [rsp + 0xe], 1
0x00003bff      31c0           xor eax, eax
0x00003c01      4531e4         xor r12d, r12d
0x00003c04      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c0d      e9a2f5ffff     jmp 0x31b4
0x00003c12      4c89ea         mov rdx, r13
0x00003c15      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003c1a      e9f3f5ffff     jmp 0x3212
0x00003c1f      e86cd9ffff     call sym.imp.abort
0x00003c24      6690           nop
0x00003c26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003c30      4157           push r15
0x00003c32      4156           push r14
0x00003c34      4c63ff         movsxd r15, edi
0x00003c37      4155           push r13
0x00003c39      4154           push r12
0x00003c3b      4989d6         mov r14, rdx
0x00003c3e      55             push rbp
0x00003c3f      53             push rbx
0x00003c40      4889cd         mov rbp, rcx
0x00003c43      4883ec28       sub rsp, 0x28
0x00003c47      4889742408     mov qword [rsp + 8], rsi
0x00003c4c      e84fd9ffff     call sym.imp.__errno_location
0x00003c51      4989c5         mov r13, rax
0x00003c54      8b00           mov eax, dword [rax]
0x00003c56      4585ff         test r15d, r15d
0x00003c59      488b1d007420.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00003c60      89442418       mov dword [rsp + 0x18], eax
0x00003c64      0f8867010000   js 0x3dd1
0x00003c6a      44393de77320.  cmp dword [obj.nslots], r15d            ; [0x20b058:4]=1
0x00003c71      7f62           jg 0x3cd5
0x00003c73      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003c7a      0f8456010000   je 0x3dd6
0x00003c80      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003c84      488d05e57320.  lea rax, obj.slotvec0                   ; 0x20b070
0x00003c8b      4963f4         movsxd rsi, r12d
0x00003c8e      48c1e604       shl rsi, 4
0x00003c92      4839c3         cmp rbx, rax
0x00003c95      0f8415010000   je 0x3db0
0x00003c9b      4889df         mov rdi, rbx
0x00003c9e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003ca3      4889c3         mov rbx, rax
0x00003ca6      488905b37320.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00003cad      48633da47320.  movsxd rdi, dword [obj.nslots]          ; [0x20b058:4]=1
0x00003cb4      4489e2         mov edx, r12d
0x00003cb7      31f6           xor esi, esi
0x00003cb9      29fa           sub edx, edi
0x00003cbb      48c1e704       shl rdi, 4
0x00003cbf      4863d2         movsxd rdx, edx
0x00003cc2      4801df         add rdi, rbx
0x00003cc5      48c1e204       shl rdx, 4
0x00003cc9      e802daffff     call sym.imp.memset
0x00003cce      448925837320.  mov dword [obj.nslots], r12d            ; [0x20b058:4]=1
0x00003cd5      8b4504         mov eax, dword [rbp + 4]
0x00003cd8      49c1e704       shl r15, 4
0x00003cdc      4883ec08       sub rsp, 8
0x00003ce0      4c01fb         add rbx, r15
0x00003ce3      4c8d7d08       lea r15, [rbp + 8]
0x00003ce7      448b4500       mov r8d, dword [rbp]
0x00003ceb      4c8b1b         mov r11, qword [rbx]
0x00003cee      4c8b6308       mov r12, qword [rbx + 8]
0x00003cf2      4c89f1         mov rcx, r14
0x00003cf5      83c801         or eax, 1
0x00003cf8      89442424       mov dword [rsp + 0x24], eax
0x00003cfc      ff7530         push qword [rbp + 0x30]
0x00003cff      4189c1         mov r9d, eax
0x00003d02      ff7528         push qword [rbp + 0x28]
0x00003d05      4157           push r15
0x00003d07      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003d0a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003d0f      4c89e7         mov rdi, r12
0x00003d12      4c895c2430     mov qword [rsp + 0x30], r11
0x00003d17      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003d1c      4883c420       add rsp, 0x20
0x00003d20      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003d25      4939c3         cmp r11, rax
0x00003d28      7767           ja 0x3d91
0x00003d2a      488d7001       lea rsi, [rax + 1]
0x00003d2e      488d052b7420.  lea rax, obj.slot0                      ; 0x20b160
0x00003d35      4939c4         cmp r12, rax
0x00003d38      488933         mov qword [rbx], rsi
0x00003d3b      7412           je 0x3d4f
0x00003d3d      4c89e7         mov rdi, r12
0x00003d40      4889742410     mov qword [rsp + 0x10], rsi
0x00003d45      e836d8ffff     call sym.imp.free
0x00003d4a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003d4f      4889f7         mov rdi, rsi
0x00003d52      4889742410     mov qword [rsp + 0x10], rsi
0x00003d57      e8540e0000     call sym.xmalloc
0x00003d5c      4883ec08       sub rsp, 8
0x00003d60      48894308       mov qword [rbx + 8], rax
0x00003d64      448b4500       mov r8d, dword [rbp]
0x00003d68      ff7530         push qword [rbp + 0x30]
0x00003d6b      ff7528         push qword [rbp + 0x28]
0x00003d6e      4c89f1         mov rcx, r14
0x00003d71      4157           push r15
0x00003d73      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003d78      4889c7         mov rdi, rax
0x00003d7b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003d80      488b742430     mov rsi, qword [rsp + 0x30]
0x00003d85      4989c4         mov r12, rax
0x00003d88      e863ecffff     call sym.quotearg_buffer_restyled
0x00003d8d      4883c420       add rsp, 0x20
0x00003d91      8b442418       mov eax, dword [rsp + 0x18]
0x00003d95      41894500       mov dword [r13], eax
0x00003d99      4883c428       add rsp, 0x28
0x00003d9d      4c89e0         mov rax, r12
0x00003da0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003da1      5d             pop rbp
0x00003da2      415c           pop r12
0x00003da4      415d           pop r13
0x00003da6      415e           pop r14
0x00003da8      415f           pop r15
0x00003daa      c3             ret
0x00003dab      0f1f440000     nop dword [rax + rax]
0x00003db0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003db2      e8590e0000     call sym.xrealloc
0x00003db7      660f6f05b172.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003dbf      4889c3         mov rbx, rax
0x00003dc2      488905977220.  mov qword [obj.slotvec], rax            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x00003dc9      0f1100         movups xmmword [rax], xmm0
0x00003dcc      e9dcfeffff     jmp 0x3cad
0x00003dd1      e8bad7ffff     call sym.imp.abort
0x00003dd6      e825100000     call sym.xalloc_die
0x00003ddb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003de0      4154           push r12
0x00003de2      55             push rbp
0x00003de3      53             push rbx
0x00003de4      4889fb         mov rbx, rdi
0x00003de7      e8b4d7ffff     call sym.imp.__errno_location
0x00003dec      448b20         mov r12d, dword [rax]
0x00003def      4889c5         mov rbp, rax
0x00003df2      488d05677420.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003df9      4885db         test rbx, rbx
0x00003dfc      be38000000     mov esi, 0x38                           ; '8'
0x00003e01      480f44d8       cmove rbx, rax
0x00003e05      4889df         mov rdi, rbx
0x00003e08      e8a30f0000     call sym.xmemdup
0x00003e0d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003e11      5b             pop rbx
0x00003e12      5d             pop rbp
0x00003e13      415c           pop r12
0x00003e15      c3             ret
0x00003e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003e20      488d05397420.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003e27      4885ff         test rdi, rdi
0x00003e2a      480f44f8       cmove rdi, rax
0x00003e2e      8b07           mov eax, dword [rdi]
0x00003e30      c3             ret
0x00003e31      0f1f440000     nop dword [rax + rax]
0x00003e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003e40      488d05197420.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003e47      4885ff         test rdi, rdi
0x00003e4a      480f44f8       cmove rdi, rax
0x00003e4e      8937           mov dword [rdi], esi
0x00003e50      c3             ret
0x00003e51      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003e60      488d05f97320.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003e67      4885ff         test rdi, rdi
0x00003e6a      89f1           mov ecx, esi
0x00003e6c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003e70      89f0           mov eax, esi
0x00003e72      83e11f         and ecx, 0x1f
0x00003e75      c0e805         shr al, 5
0x00003e78      0fb6c0         movzx eax, al
0x00003e7b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003e80      8b37           mov esi, dword [rdi]
0x00003e82      89f0           mov eax, esi
0x00003e84      d3e8           shr eax, cl
0x00003e86      31c2           xor edx, eax
0x00003e88      83e001         and eax, 1
0x00003e8b      83e201         and edx, 1
0x00003e8e      d3e2           shl edx, cl
0x00003e90      31f2           xor edx, esi
0x00003e92      8917           mov dword [rdi], edx
0x00003e94      c3             ret
0x00003e95      90             nop
0x00003e96      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003ea0      488d05b97320.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003ea7      4885ff         test rdi, rdi
0x00003eaa      480f44f8       cmove rdi, rax
0x00003eae      8b4704         mov eax, dword [rdi + 4]
0x00003eb1      897704         mov dword [rdi + 4], esi
0x00003eb4      c3             ret
0x00003eb5      90             nop
0x00003eb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003ec0      488d05997320.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003ec7      4885ff         test rdi, rdi
0x00003eca      480f44f8       cmove rdi, rax
0x00003ece      4885f6         test rsi, rsi
0x00003ed1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003ed7      740e           je 0x3ee7
0x00003ed9      4885d2         test rdx, rdx
0x00003edc      7409           je 0x3ee7
0x00003ede      48897728       mov qword [rdi + 0x28], rsi
0x00003ee2      48895730       mov qword [rdi + 0x30], rdx
0x00003ee6      c3             ret
0x00003ee7      4883ec08       sub rsp, 8
0x00003eeb      e8a0d6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003ef0      4157           push r15
0x00003ef2      4156           push r14
0x00003ef4      488d05657320.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003efb      4155           push r13
0x00003efd      4154           push r12
0x00003eff      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003f02      55             push rbp
0x00003f03      53             push rbx
0x00003f04      4c89c3         mov rbx, r8
0x00003f07      4989f6         mov r14, rsi
0x00003f0a      4989d7         mov r15, rdx
0x00003f0d      4883ec18       sub rsp, 0x18
0x00003f11      4d85c0         test r8, r8
0x00003f14      480f44d8       cmove rbx, rax
0x00003f18      48894c2408     mov qword [rsp + 8], rcx
0x00003f1d      e87ed6ffff     call sym.imp.__errno_location
0x00003f22      448b20         mov r12d, dword [rax]
0x00003f25      4889c5         mov rbp, rax
0x00003f28      488d4308       lea rax, [rbx + 8]
0x00003f2c      4883ec08       sub rsp, 8
0x00003f30      448b4b04       mov r9d, dword [rbx + 4]
0x00003f34      ff7330         push qword [rbx + 0x30]
0x00003f37      448b03         mov r8d, dword [rbx]
0x00003f3a      ff7328         push qword [rbx + 0x28]
0x00003f3d      4c89fa         mov rdx, r15
0x00003f40      50             push rax
0x00003f41      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003f46      4c89f6         mov rsi, r14
0x00003f49      4c89ef         mov rdi, r13
0x00003f4c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003f51      44896500       mov dword [rbp], r12d
0x00003f55      4883c438       add rsp, 0x38
0x00003f59      5b             pop rbx
0x00003f5a      5d             pop rbp
0x00003f5b      415c           pop r12
0x00003f5d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003f5f      415e           pop r14
0x00003f61      415f           pop r15
0x00003f63      c3             ret
0x00003f64      6690           nop
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003f70      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003f72      4156           push r14
0x00003f74      488d05e57220.  lea rax, obj.default_quoting_options    ; 0x20b260
0x00003f7b      4155           push r13
0x00003f7d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003f7f      4989d4         mov r12, rdx
0x00003f82      55             push rbp
0x00003f83      53             push rbx
0x00003f84      4889cb         mov rbx, rcx
0x00003f87      4989fe         mov r14, rdi
0x00003f8a      4989f7         mov r15, rsi
0x00003f8d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003f91      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003f94      480f44d8       cmove rbx, rax
0x00003f98      31ed           xor ebp, ebp
0x00003f9a      e801d6ffff     call sym.imp.__errno_location
0x00003f9f      4d85e4         test r12, r12
0x00003fa2      4989c5         mov r13, rax
0x00003fa5      8b00           mov eax, dword [rax]
0x00003fa7      400f94c5       sete bpl
0x00003fab      0b6b04         or ebp, dword [rbx + 4]
0x00003fae      4c8d5308       lea r10, [rbx + 8]
0x00003fb2      4883ec08       sub rsp, 8
0x00003fb6      448b03         mov r8d, dword [rbx]
0x00003fb9      4c89f9         mov rcx, r15
0x00003fbc      89442414       mov dword [rsp + 0x14], eax
0x00003fc0      ff7330         push qword [rbx + 0x30]
0x00003fc3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003fc6      ff7328         push qword [rbx + 0x28]
0x00003fc9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003fcb      31f6           xor esi, esi
0x00003fcd      4189e9         mov r9d, ebp
0x00003fd0      31ff           xor edi, edi
0x00003fd2      4c89542440     mov qword [rsp + 0x40], r10
0x00003fd7      e814eaffff     call sym.quotearg_buffer_restyled
0x00003fdc      488d7001       lea rsi, [rax + 1]
0x00003fe0      4889442448     mov qword [rsp + 0x48], rax
0x00003fe5      4883c420       add rsp, 0x20
0x00003fe9      4889f7         mov rdi, rsi
0x00003fec      4889742418     mov qword [rsp + 0x18], rsi
0x00003ff1      e8ba0b0000     call sym.xmalloc
0x00003ff6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00003ffb      4883ec08       sub rsp, 8
0x00003fff      ff7330         push qword [rbx + 0x30]
0x00004002      ff7328         push qword [rbx + 0x28]
0x00004005      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000400a      4189e9         mov r9d, ebp
0x0000400d      448b03         mov r8d, dword [rbx]
0x00004010      4c89f9         mov rcx, r15
0x00004013      4c89f2         mov rdx, r14
0x00004016      4889c7         mov rdi, rax
0x00004019      4152           push r10
0x0000401b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004020      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004025      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004029      4883c420       add rsp, 0x20
0x0000402d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004030      41894500       mov dword [r13], eax
0x00004034      7409           je 0x403f
0x00004036      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000403b      4d891c24       mov qword [r12], r11
0x0000403f      488b442410     mov rax, qword [rsp + 0x10]
0x00004044      4883c438       add rsp, 0x38
0x00004048      5b             pop rbx
0x00004049      5d             pop rbp
0x0000404a      415c           pop r12
0x0000404c      415d           pop r13
0x0000404e      415e           pop r14
0x00004050      415f           pop r15
0x00004052      c3             ret
0x00004053      0f1f00         nop dword [rax]
0x00004056      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004060      4889d1         mov rcx, rdx
0x00004063      31d2           xor edx, edx
0x00004065      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000406a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004070      8b05e26f2000   mov eax, dword [obj.nslots]             ; [0x20b058:4]=1
0x00004076      4154           push r12
0x00004078      4c8b25e16f20.  mov r12, qword [obj.slotvec]            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x0000407f      55             push rbp
0x00004080      53             push rbx
0x00004081      83f801         cmp eax, 1
0x00004084      7e2b           jle 0x40b1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004086      83e802         sub eax, 2
0x00004089      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000408e      48c1e004       shl rax, 4
0x00004092      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004097      660f1f840000.  nop word [rax + rax]
0x000040a0      488b3b         mov rdi, qword [rbx]
0x000040a3      4883c310       add rbx, 0x10
0x000040a7      e8d4d4ffff     call sym.imp.free
0x000040ac      4839eb         cmp rbx, rbp
0x000040af      75ef           jne 0x40a0
0x000040b1      498b7c2408     mov rdi, qword [r12 + 8]
0x000040b6      488d1da37020.  lea rbx, obj.slot0                      ; 0x20b160
0x000040bd      4839df         cmp rdi, rbx
0x000040c0      7417           je 0x40d9
0x000040c2      e8b9d4ffff     call sym.imp.free
0x000040c7      48c7059e6f20.  mov qword [obj.slotvec0], 0x100         ; [0x20b070:8]=256
0x000040d2      48891d9f6f20.  mov qword [0x0020b078], rbx             ; [0x20b078:8]=0x20b160 obj.slot0
0x000040d9      488d1d906f20.  lea rbx, obj.slotvec0                   ; 0x20b070
0x000040e0      4939dc         cmp r12, rbx
0x000040e3      740f           je 0x40f4
0x000040e5      4c89e7         mov rdi, r12
0x000040e8      e893d4ffff     call sym.imp.free
0x000040ed      48891d6c6f20.  mov qword [obj.slotvec], rbx            ; [0x20b060:8]=0x20b070 obj.slotvec0 ; "p\xb0 "
0x000040f4      5b             pop rbx
0x000040f5      c705596f2000.  mov dword [obj.nslots], 1               ; [0x20b058:4]=1
0x000040ff      5d             pop rbp
0x00004100      415c           pop r12
0x00004102      c3             ret
0x00004103      0f1f00         nop dword [rax]
0x00004106      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004110      488d0d497120.  lea rcx, obj.default_quoting_options    ; 0x20b260
0x00004117      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000411e      e90dfbffff     jmp sym.quotearg_n_options
0x00004123      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004126      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004130      488d0d297120.  lea rcx, obj.default_quoting_options    ; 0x20b260
0x00004137      e9f4faffff     jmp sym.quotearg_n_options
0x0000413c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004140      488d0d197120.  lea rcx, obj.default_quoting_options    ; 0x20b260
0x00004147      4889fe         mov rsi, rdi
0x0000414a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004151      31ff           xor edi, edi
0x00004153      e9d8faffff     jmp sym.quotearg_n_options
0x00004158      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004160      488d0df97020.  lea rcx, obj.default_quoting_options    ; 0x20b260
0x00004167      4889f2         mov rdx, rsi
0x0000416a      4889fe         mov rsi, rdi
0x0000416d      31ff           xor edi, edi
0x0000416f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004174      6690           nop
0x00004176      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004180      4883ec48       sub rsp, 0x48
0x00004184      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004187      64488b142528.  mov rdx, qword fs:[0x28]
0x00004190      4889542438     mov qword [rsp + 0x38], rdx
0x00004195      31d2           xor edx, edx
0x00004197      83fe0a         cmp esi, 0xa
0x0000419a      7468           je 0x4204
0x0000419c      893424         mov dword [rsp], esi
0x0000419f      4889e1         mov rcx, rsp
0x000041a2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000041a9      4889c6         mov rsi, rax
0x000041ac      48c744240400.  mov qword [rsp + 4], 0
0x000041b5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000041be      48c744241400.  mov qword [rsp + 0x14], 0
0x000041c7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000041d0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000041d9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000041e2      c74424340000.  mov dword [rsp + 0x34], 0
0x000041ea      e841faffff     call sym.quotearg_n_options
0x000041ef      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000041f4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000041fd      750a           jne 0x4209                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x000041ff      4883c448       add rsp, 0x48
0x00004203      c3             ret
0x00004204      e887d3ffff     call sym.imp.abort
0x00004209      e842d4ffff     call sym.imp.__stack_chk_fail
0x0000420e      6690           nop
;-- quotearg_n_style_mem:
0x00004210      4883ec48       sub rsp, 0x48
0x00004214      4889d0         mov rax, rdx
0x00004217      4889ca         mov rdx, rcx
0x0000421a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004223      48894c2438     mov qword [rsp + 0x38], rcx
0x00004228      31c9           xor ecx, ecx
0x0000422a      83fe0a         cmp esi, 0xa
0x0000422d      7461           je 0x4290
0x0000422f      893424         mov dword [rsp], esi
0x00004232      4889e1         mov rcx, rsp
0x00004235      4889c6         mov rsi, rax
0x00004238      48c744240400.  mov qword [rsp + 4], 0
0x00004241      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000424a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004253      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000425c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004265      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000426e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004276      e8b5f9ffff     call sym.quotearg_n_options
0x0000427b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004280      644833142528.  xor rdx, qword fs:[0x28]
0x00004289      750a           jne 0x4295
0x0000428b      4883c448       add rsp, 0x48
0x0000428f      c3             ret
0x00004290      e8fbd2ffff     call sym.imp.abort
0x00004295      e8b6d3ffff     call sym.imp.__stack_chk_fail
0x0000429a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000042a0      4889f2         mov rdx, rsi
0x000042a3      89fe           mov esi, edi
0x000042a5      31ff           xor edi, edi
0x000042a7      e9d4feffff     jmp sym.quotearg_n_style
0x000042ac      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000042b0      4889d1         mov rcx, rdx
0x000042b3      4889f2         mov rdx, rsi
0x000042b6      89fe           mov esi, edi
0x000042b8      31ff           xor edi, edi
0x000042ba      e951ffffff     jmp sym.quotearg_n_style_mem
0x000042bf      90             nop
;-- quotearg_char_mem:
0x000042c0      4883ec48       sub rsp, 0x48
0x000042c4      89d1           mov ecx, edx
0x000042c6      64488b042528.  mov rax, qword fs:[0x28]
0x000042cf      4889442438     mov qword [rsp + 0x38], rax
0x000042d4      31c0           xor eax, eax
0x000042d6      488b05b36f20.  mov rax, qword [0x0020b290]             ; [0x20b290:8]=0
0x000042dd      4989e0         mov r8, rsp
0x000042e0      83e11f         and ecx, 0x1f
0x000042e3      660f6f05756f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000042eb      4889442430     mov qword [rsp + 0x30], rax
0x000042f0      89d0           mov eax, edx
0x000042f2      0f290424       movaps xmmword [rsp], xmm0
0x000042f6      c0e805         shr al, 5
0x000042f9      0fb6c0         movzx eax, al
0x000042fc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004301      660f6f05676f.  movdqa xmm0, xmmword [0x0020b270]
0x00004309      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000430e      660f6f056a6f.  movdqa xmm0, xmmword [0x0020b280]
0x00004316      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000431b      418b11         mov edx, dword [r9]
0x0000431e      89d0           mov eax, edx
0x00004320      d3e8           shr eax, cl
0x00004322      f7d0           not eax
0x00004324      83e001         and eax, 1
0x00004327      d3e0           shl eax, cl
0x00004329      4c89c1         mov rcx, r8
0x0000432c      31d0           xor eax, edx
0x0000432e      4889f2         mov rdx, rsi
0x00004331      4889fe         mov rsi, rdi
0x00004334      418901         mov dword [r9], eax
0x00004337      31ff           xor edi, edi
0x00004339      e8f2f8ffff     call sym.quotearg_n_options
0x0000433e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004343      644833342528.  xor rsi, qword fs:[0x28]
0x0000434c      7505           jne 0x4353
0x0000434e      4883c448       add rsp, 0x48
0x00004352      c3             ret
0x00004353      e8f8d2ffff     call sym.imp.__stack_chk_fail
0x00004358      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004360      400fbed6       movsx edx, sil
0x00004364      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000436b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004370      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004375      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000437c      e93fffffff     jmp sym.quotearg_char_mem
0x00004381      0f1f440000     nop dword [rax + rax]
0x00004386      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004390      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004395      e926ffffff     jmp sym.quotearg_char_mem
0x0000439a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000043a0      4883ec48       sub rsp, 0x48
0x000043a4      4889d0         mov rax, rdx
0x000043a7      64488b142528.  mov rdx, qword fs:[0x28]
0x000043b0      4889542438     mov qword [rsp + 0x38], rdx
0x000043b5      31d2           xor edx, edx
0x000043b7      83fe0a         cmp esi, 0xa
0x000043ba      7468           je 0x4424
0x000043bc      893424         mov dword [rsp], esi
0x000043bf      4889e1         mov rcx, rsp
0x000043c2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043c9      4889c6         mov rsi, rax
0x000043cc      48c744240400.  mov qword [rsp + 4], 0
0x000043d5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000043de      48c744241400.  mov qword [rsp + 0x14], 0
0x000043e7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000043f0      48c744242400.  mov qword [rsp + 0x24], 0
0x000043f9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004402      c74424340000.  mov dword [rsp + 0x34], 0
0x0000440a      e821f8ffff     call sym.quotearg_n_options
0x0000440f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004414      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000441d      750a           jne 0x4429
0x0000441f      4883c448       add rsp, 0x48
0x00004423      c3             ret
0x00004424      e867d1ffff     call sym.imp.abort
0x00004429      e822d2ffff     call sym.imp.__stack_chk_fail
0x0000442e      6690           nop
;-- quotearg_n_custom_mem:
0x00004430      4883ec48       sub rsp, 0x48
0x00004434      4989c9         mov r9, rcx
0x00004437      488b0d526e20.  mov rcx, qword [0x0020b290]             ; [0x20b290:8]=0
0x0000443e      660f6f051a6e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004446      64488b042528.  mov rax, qword fs:[0x28]
0x0000444f      4889442438     mov qword [rsp + 0x38], rax
0x00004454      31c0           xor eax, eax
0x00004456      0f290424       movaps xmmword [rsp], xmm0
0x0000445a      4885f6         test rsi, rsi
0x0000445d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004462      c704240a0000.  mov dword [rsp], 0xa
0x00004469      660f6f05ff6d.  movdqa xmm0, xmmword [0x0020b270]
0x00004471      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004476      660f6f05026e.  movdqa xmm0, xmmword [0x0020b280]
0x0000447e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004483      7432           je 0x44b7
0x00004485      4885d2         test rdx, rdx
0x00004488      742d           je 0x44b7
0x0000448a      4889742428     mov qword [rsp + 0x28], rsi
0x0000448f      4889542430     mov qword [rsp + 0x30], rdx
0x00004494      4889e1         mov rcx, rsp
0x00004497      4c89c2         mov rdx, r8
0x0000449a      4c89ce         mov rsi, r9
0x0000449d      e88ef7ffff     call sym.quotearg_n_options
0x000044a2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000044a7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000044b0      750a           jne 0x44bc
0x000044b2      4883c448       add rsp, 0x48
0x000044b6      c3             ret
0x000044b7      e8d4d0ffff     call sym.imp.abort
0x000044bc      e88fd1ffff     call sym.imp.__stack_chk_fail
0x000044c1      0f1f440000     nop dword [rax + rax]
0x000044c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000044d0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000044d7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000044dc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000044e0      4889d1         mov rcx, rdx
0x000044e3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000044ea      4889f2         mov rdx, rsi
0x000044ed      4889fe         mov rsi, rdi
0x000044f0      31ff           xor edi, edi
0x000044f2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x000044f7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004500      4989c8         mov r8, rcx
0x00004503      4889d1         mov rcx, rdx
0x00004506      4889f2         mov rdx, rsi
0x00004509      4889fe         mov rsi, rdi
0x0000450c      31ff           xor edi, edi
0x0000450e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004513      0f1f00         nop dword [rax]
0x00004516      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004520      488d0df96a20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00004527      e904f7ffff     jmp sym.quotearg_n_options
0x0000452c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004530      488d0de96a20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00004537      4889f2         mov rdx, rsi
0x0000453a      4889fe         mov rsi, rdi
0x0000453d      31ff           xor edi, edi
0x0000453f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004544      6690           nop
0x00004546      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004550      488d0dc96a20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00004557      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000455e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004563      0f1f00         nop dword [rax]
0x00004566      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004570      488d0da96a20.  lea rcx, obj.quote_quoting_options      ; 0x20b020
0x00004577      4889fe         mov rsi, rdi
0x0000457a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004581      31ff           xor edi, edi
0x00004583      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004588      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00004590      4157           push r15
0x00004592      4156           push r14
0x00004594      4155           push r13
0x00004596      4154           push r12
0x00004598      4d89cc         mov r12, r9
0x0000459b      55             push rbp
0x0000459c      53             push rbx
0x0000459d      4889fd         mov rbp, rdi
0x000045a0      4c89c3         mov rbx, r8
0x000045a3      4883ec28       sub rsp, 0x28
0x000045a7      4885f6         test rsi, rsi
0x000045aa      0f8418010000   je 0x46c8
0x000045b0      4989d0         mov r8, rdx
0x000045b3      488d15ce4100.  lea rdx, [0x00008788]                   ; "%s (%s) %s\n"
0x000045ba      4989c9         mov r9, rcx
0x000045bd      31c0           xor eax, eax
0x000045bf      4889f1         mov rcx, rsi
0x000045c2      be01000000     mov esi, 1
0x000045c7      e884d2ffff     call sym.imp.__fprintf_chk
0x000045cc      488d35c84100.  lea rsi, [0x0000879b]                   ; "(C)"
0x000045d3      31ff           xor edi, edi
0x000045d5      ba05000000     mov edx, 5
0x000045da      e841d0ffff     call sym.imp.dcgettext
0x000045df      488d15da4400.  lea rdx, obj.version_etc_copyright      ; 0x8ac0 ; "Copyright %s %d Free Software Foundation, Inc."
0x000045e6      4889c1         mov rcx, rax
0x000045e9      41b8e3070000   mov r8d, 0x7e3
0x000045ef      be01000000     mov esi, 1
0x000045f4      4889ef         mov rdi, rbp
0x000045f7      31c0           xor eax, eax
0x000045f9      e852d2ffff     call sym.imp.__fprintf_chk
0x000045fe      488d35234200.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8828 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004605      31ff           xor edi, edi
0x00004607      ba05000000     mov edx, 5
0x0000460c      e80fd0ffff     call sym.imp.dcgettext
0x00004611      4889ee         mov rsi, rbp
0x00004614      4889c7         mov rdi, rax
0x00004617      e8d4d0ffff     call sym.imp.fputs_unlocked
0x0000461c      4983fc09       cmp r12, 9
0x00004620      0f873a030000   ja 0x4960
0x00004626      488d15574400.  lea rdx, [0x00008a84]
0x0000462d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004631      4801d0         add rax, rdx
0x00004634      ffe0           jmp rax
0x00004636      662e0f1f8400.  nop word cs:[rax + rax]
0x00004640      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004644      488b4310       mov rax, qword [rbx + 0x10]
0x00004648      488d35494300.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8998 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000464f      4c8b4308       mov r8, qword [rbx + 8]
0x00004653      ba05000000     mov edx, 5
0x00004658      31ff           xor edi, edi
0x0000465a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000465e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004662      4c894c2410     mov qword [rsp + 0x10], r9
0x00004667      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000466b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000466f      48890424       mov qword [rsp], rax
0x00004673      4c89442408     mov qword [rsp + 8], r8
0x00004678      488b1b         mov rbx, qword [rbx]
0x0000467b      e8a0cfffff     call sym.imp.dcgettext
0x00004680      4883ec08       sub rsp, 8
0x00004684      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00004689      4889c2         mov rdx, rax
0x0000468c      4889d9         mov rcx, rbx
0x0000468f      be01000000     mov esi, 1
0x00004694      4889ef         mov rdi, rbp
0x00004697      31c0           xor eax, eax
0x00004699      4151           push r9
0x0000469b      4155           push r13
0x0000469d      4154           push r12
0x0000469f      4157           push r15
0x000046a1      4156           push r14
0x000046a3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000046a8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000046ad      e89ed1ffff     call sym.imp.__fprintf_chk
0x000046b2      4883c430       add rsp, 0x30
0x000046b6      4883c428       add rsp, 0x28
0x000046ba      5b             pop rbx
0x000046bb      5d             pop rbp
0x000046bc      415c           pop r12
0x000046be      415d           pop r13
0x000046c0      415e           pop r14
0x000046c2      415f           pop r15
0x000046c4      c3             ret
0x000046c5      0f1f00         nop dword [rax]
0x000046c8      4989c8         mov r8, rcx
0x000046cb      4889d1         mov rcx, rdx
0x000046ce      488d15bf4000.  lea rdx, str.s__s                       ; 0x8794 ; "%s %s\n"
0x000046d5      be01000000     mov esi, 1
0x000046da      31c0           xor eax, eax
0x000046dc      e86fd1ffff     call sym.imp.__fprintf_chk
0x000046e1      e9e6feffff     jmp 0x45cc
0x000046e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000046f0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000046f4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000046f8      488d35c94200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x89c8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000046ff      488b4310       mov rax, qword [rbx + 0x10]
0x00004703      4c8b4308       mov r8, qword [rbx + 8]
0x00004707      ba05000000     mov edx, 5
0x0000470c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004710      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004714      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004718      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000471c      488b1b         mov rbx, qword [rbx]
0x0000471f      4c89542418     mov qword [rsp + 0x18], r10
0x00004724      4c894c2410     mov qword [rsp + 0x10], r9
0x00004729      48890424       mov qword [rsp], rax
0x0000472d      4c89442408     mov qword [rsp + 8], r8
0x00004732      31ff           xor edi, edi
0x00004734      e8e7ceffff     call sym.imp.dcgettext
0x00004739      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000473e      4152           push r10
0x00004740      e93fffffff     jmp 0x4684
0x00004745      0f1f00         nop dword [rax]
0x00004748      488b1b         mov rbx, qword [rbx]
0x0000474b      488d354d4000.  lea rsi, str.Written_by__s.             ; 0x879f ; "Written by %s.\n"
0x00004752      ba05000000     mov edx, 5
0x00004757      31ff           xor edi, edi
0x00004759      e8c2ceffff     call sym.imp.dcgettext
0x0000475e      4883c428       add rsp, 0x28
0x00004762      4889d9         mov rcx, rbx
0x00004765      4889ef         mov rdi, rbp
0x00004768      5b             pop rbx
0x00004769      5d             pop rbp
0x0000476a      415c           pop r12
0x0000476c      415d           pop r13
0x0000476e      415e           pop r14
0x00004770      415f           pop r15
0x00004772      4889c2         mov rdx, rax
0x00004775      be01000000     mov esi, 1
0x0000477a      31c0           xor eax, eax
0x0000477c      e9cfd0ffff     jmp sym.imp.__fprintf_chk
0x00004781      0f1f80000000.  nop dword [rax]
0x00004788      4c8b6308       mov r12, qword [rbx + 8]
0x0000478c      488d351c4000.  lea rsi, str.Written_by__s_and__s.      ; 0x87af ; "Written by %s and %s.\n"
0x00004793      488b1b         mov rbx, qword [rbx]
0x00004796      ba05000000     mov edx, 5
0x0000479b      31ff           xor edi, edi
0x0000479d      e87eceffff     call sym.imp.dcgettext
0x000047a2      4883c428       add rsp, 0x28
0x000047a6      4d89e0         mov r8, r12
0x000047a9      4889d9         mov rcx, rbx
0x000047ac      4889ef         mov rdi, rbp
0x000047af      4889c2         mov rdx, rax
0x000047b2      be01000000     mov esi, 1
0x000047b7      5b             pop rbx
0x000047b8      5d             pop rbp
0x000047b9      415c           pop r12
0x000047bb      415d           pop r13
0x000047bd      415e           pop r14
0x000047bf      415f           pop r15
0x000047c1      31c0           xor eax, eax
0x000047c3      e988d0ffff     jmp sym.imp.__fprintf_chk
0x000047c8      0f1f84000000.  nop dword [rax + rax]
0x000047d0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000047d4      4c8b6308       mov r12, qword [rbx + 8]
0x000047d8      488d35e73f00.  lea rsi, str.Written_by__s___s__and__s. ; 0x87c6 ; "Written by %s, %s, and %s.\n"
0x000047df      488b1b         mov rbx, qword [rbx]
0x000047e2      ba05000000     mov edx, 5
0x000047e7      31ff           xor edi, edi
0x000047e9      e832ceffff     call sym.imp.dcgettext
0x000047ee      4883c428       add rsp, 0x28
0x000047f2      4d89e9         mov r9, r13
0x000047f5      4d89e0         mov r8, r12
0x000047f8      4889d9         mov rcx, rbx
0x000047fb      4889ef         mov rdi, rbp
0x000047fe      4889c2         mov rdx, rax
0x00004801      5b             pop rbx
0x00004802      5d             pop rbp
0x00004803      415c           pop r12
0x00004805      415d           pop r13
0x00004807      415e           pop r14
0x00004809      415f           pop r15
0x0000480b      be01000000     mov esi, 1
0x00004810      31c0           xor eax, eax
0x00004812      e939d0ffff     jmp sym.imp.__fprintf_chk
0x00004817      660f1f840000.  nop word [rax + rax]
0x00004820      488d35d14000.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x88f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004827      ba05000000     mov edx, 5
0x0000482c      31ff           xor edi, edi
0x0000482e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004832      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004836      4c8b6308       mov r12, qword [rbx + 8]
0x0000483a      488b1b         mov rbx, qword [rbx]
0x0000483d      e8decdffff     call sym.imp.dcgettext
0x00004842      4883ec08       sub rsp, 8
0x00004846      4156           push r14
0x00004848      4889c2         mov rdx, rax
0x0000484b      4d89e9         mov r9, r13
0x0000484e      4d89e0         mov r8, r12
0x00004851      4889d9         mov rcx, rbx
0x00004854      4889ef         mov rdi, rbp
0x00004857      be01000000     mov esi, 1
0x0000485c      31c0           xor eax, eax
0x0000485e      e8edcfffff     call sym.imp.__fprintf_chk
0x00004863      58             pop rax
0x00004864      5a             pop rdx
0x00004865      4883c428       add rsp, 0x28
0x00004869      5b             pop rbx
0x0000486a      5d             pop rbp
0x0000486b      415c           pop r12
0x0000486d      415d           pop r13
0x0000486f      415e           pop r14
0x00004871      415f           pop r15
0x00004873      c3             ret
0x00004874      0f1f4000       nop dword [rax]
0x00004878      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000487c      488d35954000.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x8918 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004883      ba05000000     mov edx, 5
0x00004888      31ff           xor edi, edi
0x0000488a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000488e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004892      4c8b6308       mov r12, qword [rbx + 8]
0x00004896      488b1b         mov rbx, qword [rbx]
0x00004899      e882cdffff     call sym.imp.dcgettext
0x0000489e      4157           push r15
0x000048a0      eba4           jmp 0x4846
0x000048a2      660f1f440000   nop word [rax + rax]
0x000048a8      4c8b4308       mov r8, qword [rbx + 8]
0x000048ac      4c8b6328       mov r12, qword [rbx + 0x28]
0x000048b0      488d35894000.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8940 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000048b7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000048bb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048bf      ba05000000     mov edx, 5
0x000048c4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048c8      31ff           xor edi, edi
0x000048ca      488b1b         mov rbx, qword [rbx]
0x000048cd      4c890424       mov qword [rsp], r8
0x000048d1      e84acdffff     call sym.imp.dcgettext
0x000048d6      4883ec08       sub rsp, 8
0x000048da      4d89e9         mov r9, r13
0x000048dd      4154           push r12
0x000048df      4157           push r15
0x000048e1      4156           push r14
0x000048e3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000048e8      4889d9         mov rcx, rbx
0x000048eb      4889c2         mov rdx, rax
0x000048ee      4889ef         mov rdi, rbp
0x000048f1      be01000000     mov esi, 1
0x000048f6      31c0           xor eax, eax
0x000048f8      e853cfffff     call sym.imp.__fprintf_chk
0x000048fd      4883c420       add rsp, 0x20
0x00004901      4883c428       add rsp, 0x28
0x00004905      5b             pop rbx
0x00004906      5d             pop rbp
0x00004907      415c           pop r12
0x00004909      415d           pop r13
0x0000490b      415e           pop r14
0x0000490d      415f           pop r15
0x0000490f      c3             ret
0x00004910      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004914      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004918      488d35494000.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8968 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000491f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004923      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004927      ba05000000     mov edx, 5
0x0000492c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004930      4c8b4308       mov r8, qword [rbx + 8]
0x00004934      31ff           xor edi, edi
0x00004936      4c894c2408     mov qword [rsp + 8], r9
0x0000493b      488b1b         mov rbx, qword [rbx]
0x0000493e      4c890424       mov qword [rsp], r8
0x00004942      e8d9ccffff     call sym.imp.dcgettext
0x00004947      4155           push r13
0x00004949      4154           push r12
0x0000494b      4157           push r15
0x0000494d      4156           push r14
0x0000494f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004954      eb8d           jmp 0x48e3
0x00004956      662e0f1f8400.  nop word cs:[rax + rax]
0x00004960      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004964      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004968      ba05000000     mov edx, 5
0x0000496d      488b4310       mov rax, qword [rbx + 0x10]
0x00004971      4c8b4308       mov r8, qword [rbx + 8]
0x00004975      488d35844000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x8a00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000497c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004980      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004984      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004988      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000498c      4c89542418     mov qword [rsp + 0x18], r10
0x00004991      4c894c2410     mov qword [rsp + 0x10], r9
0x00004996      48890424       mov qword [rsp], rax
0x0000499a      4c89442408     mov qword [rsp + 8], r8
0x0000499f      488b1b         mov rbx, qword [rbx]
0x000049a2      e98bfdffff     jmp 0x4732
0x000049a7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000049b0      4531c9         xor r9d, r9d
0x000049b3      49833800       cmp qword [r8], 0
0x000049b7      7412           je 0x49cb
0x000049b9      0f1f80000000.  nop dword [rax]
0x000049c0      4983c101       add r9, 1
0x000049c4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000049c9      75f5           jne 0x49c0
0x000049cb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000049d0      4883ec68       sub rsp, 0x68
0x000049d4      4d89c2         mov r10, r8
0x000049d7      4531c9         xor r9d, r9d
0x000049da      64488b042528.  mov rax, qword fs:[0x28]
0x000049e3      4889442458     mov qword [rsp + 0x58], rax
0x000049e8      31c0           xor eax, eax
0x000049ea      4989e0         mov r8, rsp
0x000049ed      0f1f00         nop dword [rax]
0x000049f0      418b02         mov eax, dword [r10]
0x000049f3      83f82f         cmp eax, 0x2f
0x000049f6      7742           ja 0x4a3a
0x000049f8      4189c3         mov r11d, eax
0x000049fb      4d035a10       add r11, qword [r10 + 0x10]
0x000049ff      83c008         add eax, 8
0x00004a02      418902         mov dword [r10], eax
0x00004a05      498b03         mov rax, qword [r11]
0x00004a08      4885c0         test rax, rax
0x00004a0b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004a0f      740a           je 0x4a1b
0x00004a11      4983c101       add r9, 1
0x00004a15      4983f90a       cmp r9, 0xa
0x00004a19      75d5           jne 0x49f0
0x00004a1b      e870fbffff     call sym.version_etc_arn
0x00004a20      488b442458     mov rax, qword [rsp + 0x58]
0x00004a25      644833042528.  xor rax, qword fs:[0x28]
0x00004a2e      7505           jne 0x4a35
0x00004a30      4883c468       add rsp, 0x68
0x00004a34      c3             ret
0x00004a35      e816ccffff     call sym.imp.__stack_chk_fail
0x00004a3a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004a3e      498d4308       lea rax, [r11 + 8]
0x00004a42      49894208       mov qword [r10 + 8], rax
0x00004a46      ebbd           jmp 0x4a05
0x00004a48      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004a50      55             push rbp
0x00004a51      53             push rbx
0x00004a52      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004a58      4531db         xor r11d, r11d
0x00004a5b      4881ecb80000.  sub rsp, 0xb8
0x00004a62      64488b042528.  mov rax, qword fs:[0x28]
0x00004a6b      4889442478     mov qword [rsp + 0x78], rax
0x00004a70      31c0           xor eax, eax
0x00004a72      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004a7a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004a82      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004a8a      4c8d442420     lea r8, [rsp + 0x20]
0x00004a8f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004a97      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004a9f      4889442410     mov qword [rsp + 0x10], rax
0x00004aa4      488d84248000.  lea rax, [rsp + 0x80]
0x00004aac      4531c9         xor r9d, r9d
0x00004aaf      4889442418     mov qword [rsp + 0x18], rax
0x00004ab4      4889c5         mov rbp, rax
0x00004ab7      660f1f840000.  nop word [rax + rax]
0x00004ac0      4183fa2f       cmp r10d, 0x2f
0x00004ac4      7756           ja 0x4b1c
0x00004ac6      4489d0         mov eax, r10d
0x00004ac9      41bb01000000   mov r11d, 1
0x00004acf      4183c208       add r10d, 8
0x00004ad3      4801e8         add rax, rbp
0x00004ad6      488b00         mov rax, qword [rax]
0x00004ad9      4885c0         test rax, rax
0x00004adc      4b8904c8       mov qword [r8 + r9*8], rax
0x00004ae0      740a           je 0x4aec
0x00004ae2      4983c101       add r9, 1
0x00004ae6      4983f90a       cmp r9, 0xa
0x00004aea      75d4           jne 0x4ac0
0x00004aec      4584db         test r11b, r11b
0x00004aef      7524           jne 0x4b15
0x00004af1      e89afaffff     call sym.version_etc_arn
0x00004af6      488b442478     mov rax, qword [rsp + 0x78]
0x00004afb      644833042528.  xor rax, qword fs:[0x28]
0x00004b04      750a           jne 0x4b10
0x00004b06      4881c4b80000.  add rsp, 0xb8
0x00004b0d      5b             pop rbx
0x00004b0e      5d             pop rbp
0x00004b0f      c3             ret
0x00004b10      e83bcbffff     call sym.imp.__stack_chk_fail
0x00004b15      4489542408     mov dword [rsp + 8], r10d
0x00004b1a      ebd5           jmp 0x4af1
0x00004b1c      4889d8         mov rax, rbx
0x00004b1f      4883c308       add rbx, 8
0x00004b23      ebb1           jmp 0x4ad6
0x00004b25      90             nop
0x00004b26      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004b30      53             push rbx
0x00004b31      488d35aa3c00.  lea rsi, str.Report_bugs_to:__s         ; 0x87e2 ; "\nReport bugs to: %s\n"
0x00004b38      ba05000000     mov edx, 5
0x00004b3d      31ff           xor edi, edi
0x00004b3f      e8dccaffff     call sym.imp.dcgettext
0x00004b44      488d15ac3c00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x87f7 ; "bug-coreutils@gnu.org"
0x00004b4b      4889c6         mov rsi, rax
0x00004b4e      bf01000000     mov edi, 1
0x00004b53      31c0           xor eax, eax
0x00004b55      e856ccffff     call sym.imp.__printf_chk
0x00004b5a      488d35ac3c00.  lea rsi, str.s_home_page:___s           ; 0x880d ; "%s home page: <%s>\n"
0x00004b61      ba05000000     mov edx, 5
0x00004b66      31ff           xor edi, edi
0x00004b68      e8b3caffff     call sym.imp.dcgettext
0x00004b6d      488d0d0c3500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x8080 ; "https://www.gnu.org/software/coreutils/"
0x00004b74      488d15c32e00.  lea rdx, str.GNU_coreutils              ; 0x7a3e ; "GNU coreutils"
0x00004b7b      4889c6         mov rsi, rax
0x00004b7e      bf01000000     mov edi, 1
0x00004b83      31c0           xor eax, eax
0x00004b85      e826ccffff     call sym.imp.__printf_chk
0x00004b8a      488b1df76420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20b088:8]=0
0x00004b91      488d35a83e00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8a40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004b98      31ff           xor edi, edi
0x00004b9a      ba05000000     mov edx, 5
0x00004b9f      e87ccaffff     call sym.imp.dcgettext
0x00004ba4      4889de         mov rsi, rbx
0x00004ba7      4889c7         mov rdi, rax
0x00004baa      5b             pop rbx
0x00004bab      e940cbffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004bb0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004bb1      4889fb         mov rbx, rdi
0x00004bb4      e897cbffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004bb9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004bbc      7505           jne 0x4bc3
0x00004bbe      4885db         test rbx, rbx
0x00004bc1      7502           jne 0x4bc5
0x00004bc3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004bc4      c3             ret
0x00004bc5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004bca      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004bd0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004bd3      48f7e6         mul rsi
0x00004bd6      4889c7         mov rdi, rax
0x00004bd9      0f90c0         seto al
0x00004bdc      4885ff         test rdi, rdi
0x00004bdf      780a           js 0x4beb
0x00004be1      0fb6c0         movzx eax, al
0x00004be4      4885c0         test rax, rax
0x00004be7      7502           jne 0x4beb
0x00004be9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004beb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004bef      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004bf4      6690           nop
0x00004bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004c00      ebae           jmp sym.xmalloc
0x00004c02      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004c06      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004c10      4885f6         test rsi, rsi
0x00004c13      53             push rbx
0x00004c14      4889f3         mov rbx, rsi
0x00004c17      7505           jne 0x4c1e
0x00004c19      4885ff         test rdi, rdi
0x00004c1c      751a           jne 0x4c38
0x00004c1e      4889de         mov rsi, rbx
0x00004c21      e86acbffff     call sym.imp.realloc
0x00004c26      4885c0         test rax, rax
0x00004c29      7505           jne 0x4c30
0x00004c2b      4885db         test rbx, rbx
0x00004c2e      7511           jne 0x4c41                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004c30      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004c31      c3             ret
0x00004c32      660f1f440000   nop word [rax + rax]
0x00004c38      e843c9ffff     call sym.imp.free
0x00004c3d      31c0           xor eax, eax
0x00004c3f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004c40      c3             ret
0x00004c41      e8ba010000     call sym.xalloc_die
0x00004c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004c50      4889f0         mov rax, rsi
0x00004c53      48f7e2         mul rdx
0x00004c56      4889c6         mov rsi, rax
0x00004c59      0f90c0         seto al
0x00004c5c      4885f6         test rsi, rsi
0x00004c5f      780a           js 0x4c6b
0x00004c61      0fb6c0         movzx eax, al
0x00004c64      4885c0         test rax, rax
0x00004c67      7502           jne 0x4c6b
0x00004c69      eba5           jmp sym.xrealloc
0x00004c6b      4883ec08       sub rsp, 8
0x00004c6f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004c74      6690           nop
0x00004c76      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004c80      4885ff         test rdi, rdi
0x00004c83      4989d1         mov r9, rdx
0x00004c86      488b0e         mov rcx, qword [rsi]
0x00004c89      7435           je 0x4cc0
0x00004c8b      31d2           xor edx, edx
0x00004c8d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004c97      49f7f1         div r9
0x00004c9a      4839c8         cmp rax, rcx
0x00004c9d      763c           jbe 0x4cdb
0x00004c9f      4889c8         mov rax, rcx
0x00004ca2      48d1e8         shr rax, 1
0x00004ca5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004caa      48890e         mov qword [rsi], rcx
0x00004cad      490fafc9       imul rcx, r9
0x00004cb1      4889ce         mov rsi, rcx
0x00004cb4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004cb9      0f1f80000000.  nop dword [rax]
0x00004cc0      4885c9         test rcx, rcx
0x00004cc3      7423           je 0x4ce8
0x00004cc5      4889c8         mov rax, rcx
0x00004cc8      49f7e1         mul r9
0x00004ccb      0f90c2         seto dl
0x00004cce      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004cd1      0fb6d2         movzx edx, dl
0x00004cd4      7805           js 0x4cdb
0x00004cd6      4885d2         test rdx, rdx
0x00004cd9      74cf           je 0x4caa
0x00004cdb      4883ec08       sub rsp, 8
0x00004cdf      e81c010000     call sym.xalloc_die
0x00004ce4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004ce8      31d2           xor edx, edx
0x00004cea      b880000000     mov eax, 0x80
0x00004cef      4531c0         xor r8d, r8d
0x00004cf2      49f7f1         div r9
0x00004cf5      4885c0         test rax, rax
0x00004cf8      410f94c0       sete r8b
0x00004cfc      498d0c00       lea rcx, [r8 + rax]
0x00004d00      ebc3           jmp 0x4cc5
0x00004d02      0f1f4000       nop dword [rax]
0x00004d06      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004d10      4885ff         test rdi, rdi
0x00004d13      488b06         mov rax, qword [rsi]
0x00004d16      7428           je 0x4d40
0x00004d18      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004d22      4839d0         cmp rax, rdx
0x00004d25      772a           ja 0x4d51
0x00004d27      4889c2         mov rdx, rax
0x00004d2a      48d1ea         shr rdx, 1
0x00004d2d      488d440201     lea rax, [rdx + rax + 1]
0x00004d32      488906         mov qword [rsi], rax
0x00004d35      4889c6         mov rsi, rax
0x00004d38      e9d3feffff     jmp sym.xrealloc
0x00004d3d      0f1f00         nop dword [rax]
0x00004d40      4885c0         test rax, rax
0x00004d43      ba80000000     mov edx, 0x80
0x00004d48      480f44c2       cmove rax, rdx
0x00004d4c      4885c0         test rax, rax
0x00004d4f      79e1           jns 0x4d32
0x00004d51      4883ec08       sub rsp, 8
0x00004d55      e8a6000000     call sym.xalloc_die
0x00004d5a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004d60      53             push rbx
0x00004d61      4889fb         mov rbx, rdi
0x00004d64      e847feffff     call sym.xmalloc
0x00004d69      4889da         mov rdx, rbx
0x00004d6c      31f6           xor esi, esi
0x00004d6e      4889c7         mov rdi, rax
0x00004d71      5b             pop rbx
0x00004d72      e959c9ffff     jmp sym.imp.memset
0x00004d77      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004d80      4889f8         mov rax, rdi
0x00004d83      4883ec08       sub rsp, 8
0x00004d87      48f7e6         mul rsi
0x00004d8a      0f90c2         seto dl
0x00004d8d      4885c0         test rax, rax
0x00004d90      7817           js 0x4da9
0x00004d92      0fb6d2         movzx edx, dl
0x00004d95      4885d2         test rdx, rdx
0x00004d98      750f           jne 0x4da9
0x00004d9a      e861c9ffff     call sym.imp.calloc
0x00004d9f      4885c0         test rax, rax
0x00004da2      7405           je 0x4da9
0x00004da4      4883c408       add rsp, 8
0x00004da8      c3             ret
0x00004da9      e852000000     call sym.xalloc_die
0x00004dae      6690           nop
;-- xmemdup:
0x00004db0      55             push rbp
0x00004db1      53             push rbx
0x00004db2      4889fd         mov rbp, rdi
0x00004db5      4889f7         mov rdi, rsi
0x00004db8      4889f3         mov rbx, rsi
0x00004dbb      4883ec08       sub rsp, 8
0x00004dbf      e8ecfdffff     call sym.xmalloc
0x00004dc4      4883c408       add rsp, 8
0x00004dc8      4889da         mov rdx, rbx
0x00004dcb      4889ee         mov rsi, rbp
0x00004dce      5b             pop rbx
0x00004dcf      5d             pop rbp
0x00004dd0      4889c7         mov rdi, rax
0x00004dd3      e948c9ffff     jmp sym.imp.memcpy
0x00004dd8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004de0      53             push rbx
0x00004de1      4889fb         mov rbx, rdi
0x00004de4      e857c8ffff     call sym.imp.strlen
0x00004de9      4889df         mov rdi, rbx
0x00004dec      488d7001       lea rsi, [rax + 1]
0x00004df0      5b             pop rbx
0x00004df1      ebbd           jmp sym.xmemdup
0x00004df3      662e0f1f8400.  nop word cs:[rax + rax]
0x00004dfd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004e00      488d35e83c00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x8aef ; "memory exhausted"
0x00004e07      4883ec08       sub rsp, 8
0x00004e0b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004e10      31ff           xor edi, edi
0x00004e12      e809c8ffff     call sym.imp.dcgettext
0x00004e17      8b3dfb612000   mov edi, dword [obj.exit_failure]       ; [0x20b018:4]=1
0x00004e1d      488d15423400.  lea rdx, [0x00008266]                   ; "%s"
0x00004e24      4889c1         mov rcx, rax
0x00004e27      31f6           xor esi, esi
0x00004e29      31c0           xor eax, eax
0x00004e2b      e8a0c9ffff     call sym.imp.error
0x00004e30      e85bc7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004e35      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e3f      90             nop
;-- xreadlink:
0x00004e40      53             push rbx                                ; ../coreutils-8.31/lib/xreadlink.c:39
0x00004e41      e83a060000     call sym.areadlink                      ; ../coreutils-8.31/lib/xreadlink.c:40
0x00004e46      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xreadlink.c:41
0x00004e49      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xreadlink.c:40
0x00004e4c      740a           je 0x4e58                               ; ../coreutils-8.31/lib/xreadlink.c:41
0x00004e4e      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xreadlink.c:44
0x00004e51      5b             pop rbx
0x00004e52      c3             ret
0x00004e53      0f1f440000     nop dword [rax + rax]
0x00004e58      e843c7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xreadlink.c:41
0x00004e5d      83380c         cmp dword [rax], 0xc
0x00004e60      75ec           jne 0x4e4e
0x00004e62      e899ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xreadlink.c:42
0x00004e67      660f1f840000.  nop word [rax + rax]
;-- xstrtoumax:
0x00004e70      4157           push r15
0x00004e72      4156           push r14
0x00004e74      4155           push r13
0x00004e76      4154           push r12
0x00004e78      55             push rbp
0x00004e79      53             push rbx
0x00004e7a      4883ec28       sub rsp, 0x28
0x00004e7e      64488b042528.  mov rax, qword fs:[0x28]
0x00004e87      4889442418     mov qword [rsp + 0x18], rax
0x00004e8c      31c0           xor eax, eax
0x00004e8e      83fa24         cmp edx, 0x24
0x00004e91      0f875e030000   ja 0x51f5
0x00004e97      488d442410     lea rax, [rsp + 0x10]
0x00004e9c      4989f7         mov r15, rsi
0x00004e9f      4885f6         test rsi, rsi
0x00004ea2      4889fd         mov rbp, rdi
0x00004ea5      89542408       mov dword [rsp + 8], edx
0x00004ea9      4989ce         mov r14, rcx
0x00004eac      4d89c5         mov r13, r8
0x00004eaf      4c0f44f8       cmove r15, rax
0x00004eb3      e8e8c6ffff     call sym.imp.__errno_location
0x00004eb8      c70000000000   mov dword [rax], 0
0x00004ebe      4989c4         mov r12, rax
0x00004ec1      0fb65d00       movzx ebx, byte [rbp]
0x00004ec5      e8b6c9ffff     call sym.imp.__ctype_b_loc
0x00004eca      8b542408       mov edx, dword [rsp + 8]
0x00004ece      488b30         mov rsi, qword [rax]
0x00004ed1      4889e8         mov rax, rbp
0x00004ed4      eb11           jmp 0x4ee7
0x00004ed6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004ee0      4883c001       add rax, 1
0x00004ee4      0fb618         movzx ebx, byte [rax]
0x00004ee7      0fb6cb         movzx ecx, bl
0x00004eea      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00004eef      75ef           jne 0x4ee0
0x00004ef1      80fb2d         cmp bl, 0x2d
0x00004ef4      7452           je 0x4f48
0x00004ef6      31c9           xor ecx, ecx
0x00004ef8      4c89fe         mov rsi, r15
0x00004efb      4889ef         mov rdi, rbp
0x00004efe      e8bdc7ffff     call sym.imp.__strtoul_internal
0x00004f03      498b0f         mov rcx, qword [r15]
0x00004f06      4889c3         mov rbx, rax
0x00004f09      4839e9         cmp rcx, rbp
0x00004f0c      742a           je 0x4f38
0x00004f0e      418b0424       mov eax, dword [r12]
0x00004f12      85c0           test eax, eax
0x00004f14      7462           je 0x4f78
0x00004f16      83f822         cmp eax, 0x22
0x00004f19      bd01000000     mov ebp, 1
0x00004f1e      7528           jne 0x4f48
0x00004f20      4d85ed         test r13, r13
0x00004f23      7409           je 0x4f2e
0x00004f25      440fb621       movzx r12d, byte [rcx]
0x00004f29      4584e4         test r12b, r12b
0x00004f2c      7579           jne 0x4fa7
0x00004f2e      49891e         mov qword [r14], rbx
0x00004f31      eb1a           jmp 0x4f4d
0x00004f33      0f1f440000     nop dword [rax + rax]
0x00004f38      4d85ed         test r13, r13
0x00004f3b      48894c2408     mov qword [rsp + 8], rcx
0x00004f40      753e           jne 0x4f80
0x00004f42      660f1f440000   nop word [rax + rax]
0x00004f48      bd04000000     mov ebp, 4
0x00004f4d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00004f52      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004f5b      89e8           mov eax, ebp
0x00004f5d      0f858d020000   jne 0x51f0
0x00004f63      4883c428       add rsp, 0x28
0x00004f67      5b             pop rbx
0x00004f68      5d             pop rbp
0x00004f69      415c           pop r12
0x00004f6b      415d           pop r13
0x00004f6d      415e           pop r14
0x00004f6f      415f           pop r15
0x00004f71      c3             ret
0x00004f72      660f1f440000   nop word [rax + rax]
0x00004f78      31ed           xor ebp, ebp
0x00004f7a      eba4           jmp 0x4f20
0x00004f7c      0f1f4000       nop dword [rax]
0x00004f80      440fb66500     movzx r12d, byte [rbp]
0x00004f85      4584e4         test r12b, r12b
0x00004f88      74be           je 0x4f48
0x00004f8a      410fbef4       movsx esi, r12b
0x00004f8e      4c89ef         mov rdi, r13
0x00004f91      31ed           xor ebp, ebp
0x00004f93      e8e8c6ffff     call sym.imp.strchr
0x00004f98      4885c0         test rax, rax
0x00004f9b      bb01000000     mov ebx, 1
0x00004fa0      488b4c2408     mov rcx, qword [rsp + 8]
0x00004fa5      74a1           je 0x4f48
0x00004fa7      410fbef4       movsx esi, r12b
0x00004fab      4c89ef         mov rdi, r13
0x00004fae      48894c2408     mov qword [rsp + 8], rcx
0x00004fb3      e8c8c6ffff     call sym.imp.strchr
0x00004fb8      4885c0         test rax, rax
0x00004fbb      488b4c2408     mov rcx, qword [rsp + 8]
0x00004fc0      0f84c6000000   je 0x508c
0x00004fc6      418d4424bb     lea eax, [r12 - 0x45]
0x00004fcb      3c2f           cmp al, 0x2f
0x00004fcd      7751           ja 0x5020
0x00004fcf      48ba45893000.  movabs rdx, 0x814400308945
0x00004fd9      480fa3c2       bt rdx, rax
0x00004fdd      7341           jae 0x5020
0x00004fdf      be30000000     mov esi, 0x30                           ; '0'
0x00004fe4      4c89ef         mov rdi, r13
0x00004fe7      48894c2408     mov qword [rsp + 8], rcx
0x00004fec      e88fc6ffff     call sym.imp.strchr
0x00004ff1      4885c0         test rax, rax
0x00004ff4      488b4c2408     mov rcx, qword [rsp + 8]
0x00004ff9      7425           je 0x5020
0x00004ffb      0fb64101       movzx eax, byte [rcx + 1]
0x00004fff      3c44           cmp al, 0x44
0x00005001      740c           je 0x500f
0x00005003      3c69           cmp al, 0x69
0x00005005      0f84cd010000   je 0x51d8
0x0000500b      3c42           cmp al, 0x42
0x0000500d      7511           jne 0x5020
0x0000500f      bf02000000     mov edi, 2
0x00005014      bee8030000     mov esi, 0x3e8
0x00005019      eb0f           jmp 0x502a
0x0000501b      0f1f440000     nop dword [rax + rax]
0x00005020      bf01000000     mov edi, 1
0x00005025      be00040000     mov esi, 0x400
0x0000502a      4183ec42       sub r12d, 0x42
0x0000502e      4180fc35       cmp r12b, 0x35
0x00005032      7758           ja 0x508c
0x00005034      488d150d3b00.  lea rdx, [0x00008b48]
0x0000503b      450fb6e4       movzx r12d, r12b
0x0000503f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005043      4801d0         add rax, rdx
0x00005046      ffe0           jmp rax
0x00005048      4889d8         mov rax, rbx
0x0000504b      48f7e6         mul rsi
0x0000504e      0f80ed010000   jo 0x5241
0x00005054      4531c0         xor r8d, r8d
0x00005057      48f7e6         mul rsi
0x0000505a      0f80d2010000   jo 0x5232
0x00005060      4889c3         mov rbx, rax
0x00005063      4409c5         or ebp, r8d
0x00005066      662e0f1f8400.  nop word cs:[rax + rax]
0x00005070      4863ff         movsxd rdi, edi
0x00005073      89e8           mov eax, ebp
0x00005075      4801f9         add rcx, rdi
0x00005078      83c802         or eax, 2
0x0000507b      49890f         mov qword [r15], rcx
0x0000507e      803900         cmp byte [rcx], 0
0x00005081      49891e         mov qword [r14], rbx
0x00005084      0f45e8         cmovne ebp, eax
0x00005087      e9c1feffff     jmp 0x4f4d
0x0000508c      49891e         mov qword [r14], rbx
0x0000508f      83cd02         or ebp, 2
0x00005092      e9b6feffff     jmp 0x4f4d
0x00005097      ba02000000     mov edx, 2
0x0000509c      4889d0         mov rax, rdx
0x0000509f      48f7e3         mul rbx
0x000050a2      0f8096000000   jo 0x513e
0x000050a8      4801db         add rbx, rbx
0x000050ab      ebc3           jmp 0x5070
0x000050ad      ba00020000     mov edx, 0x200
0x000050b2      4889d0         mov rax, rdx
0x000050b5      48f7e3         mul rbx
0x000050b8      0f8080000000   jo 0x513e
0x000050be      48c1e309       shl rbx, 9
0x000050c2      ebac           jmp 0x5070
0x000050c4      41b807000000   mov r8d, 7
0x000050ca      4531c9         xor r9d, r9d
0x000050cd      0f1f00         nop dword [rax]
0x000050d0      4889d8         mov rax, rbx
0x000050d3      48f7e6         mul rsi
0x000050d6      4889c3         mov rbx, rax
0x000050d9      0f808f010000   jo 0x526e
0x000050df      4183e801       sub r8d, 1
0x000050e3      75eb           jne 0x50d0
0x000050e5      4409cd         or ebp, r9d
0x000050e8      eb86           jmp 0x5070
0x000050ea      41b808000000   mov r8d, 8
0x000050f0      4531c9         xor r9d, r9d
0x000050f3      0f1f440000     nop dword [rax + rax]
0x000050f8      4889d8         mov rax, rbx
0x000050fb      48f7e6         mul rsi
0x000050fe      4889c3         mov rbx, rax
0x00005101      0f8049010000   jo 0x5250
0x00005107      4183e801       sub r8d, 1
0x0000510b      75eb           jne 0x50f8
0x0000510d      ebd6           jmp 0x50e5
0x0000510f      41b804000000   mov r8d, 4
0x00005115      4531c9         xor r9d, r9d
0x00005118      4889d8         mov rax, rbx
0x0000511b      48f7e6         mul rsi
0x0000511e      4889c3         mov rbx, rax
0x00005121      0f80fc000000   jo 0x5223
0x00005127      4183e801       sub r8d, 1
0x0000512b      75eb           jne 0x5118
0x0000512d      ebb6           jmp 0x50e5
0x0000512f      4889d8         mov rax, rbx
0x00005132      48f7e6         mul rsi
0x00005135      4889c3         mov rbx, rax
0x00005138      0f8132ffffff   jno 0x5070
0x0000513e      bd01000000     mov ebp, 1
0x00005143      4883cbff       or rbx, 0xffffffffffffffff
0x00005147      e924ffffff     jmp 0x5070
0x0000514c      0f1f4000       nop dword [rax]
0x00005150      41b805000000   mov r8d, 5
0x00005156      4531c9         xor r9d, r9d
0x00005159      4889d8         mov rax, rbx
0x0000515c      48f7e6         mul rsi
0x0000515f      4889c3         mov rbx, rax
0x00005162      0f80f7000000   jo 0x525f
0x00005168      4183e801       sub r8d, 1
0x0000516c      75eb           jne 0x5159
0x0000516e      e972ffffff     jmp 0x50e5
0x00005173      41b806000000   mov r8d, 6
0x00005179      4531c9         xor r9d, r9d
0x0000517c      4889d8         mov rax, rbx
0x0000517f      48f7e6         mul rsi
0x00005182      4889c3         mov rbx, rax
0x00005185      0f8089000000   jo 0x5214
0x0000518b      4183e801       sub r8d, 1
0x0000518f      75eb           jne 0x517c
0x00005191      e94fffffff     jmp 0x50e5
0x00005196      ba00040000     mov edx, 0x400
0x0000519b      4889d0         mov rax, rdx
0x0000519e      48f7e3         mul rbx
0x000051a1      709b           jo 0x513e
0x000051a3      48c1e30a       shl rbx, 0xa
0x000051a7      e9c4feffff     jmp 0x5070
0x000051ac      4889d8         mov rax, rbx
0x000051af      48f7e6         mul rsi
0x000051b2      0f80c5000000   jo 0x527d
0x000051b8      4531c0         xor r8d, r8d
0x000051bb      48f7e6         mul rsi
0x000051be      0f8193feffff   jno 0x5057
0x000051c4      41b801000000   mov r8d, 1
0x000051ca      4883c8ff       or rax, 0xffffffffffffffff
0x000051ce      e984feffff     jmp 0x5057
0x000051d3      0f1f440000     nop dword [rax + rax]
0x000051d8      31ff           xor edi, edi
0x000051da      80790242       cmp byte [rcx + 2], 0x42
0x000051de      be00040000     mov esi, 0x400
0x000051e3      400f94c7       sete dil
0x000051e7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000051eb      e93afeffff     jmp 0x502a
0x000051f0      e85bc4ffff     call sym.imp.__stack_chk_fail
0x000051f5      488d0d243a00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x8c20 ; "xstrtoumax"
0x000051fc      488d35fd3800.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x8b00 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005203      488d3d163900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x8b20 ; "0 <= strtol_base && strtol_base <= 36"
0x0000520a      ba54000000     mov edx, 0x54                           ; 'T'
0x0000520f      e89cc4ffff     call sym.imp.__assert_fail
0x00005214      41b901000000   mov r9d, 1
0x0000521a      4883cbff       or rbx, 0xffffffffffffffff
0x0000521e      e968ffffff     jmp 0x518b
0x00005223      41b901000000   mov r9d, 1
0x00005229      4883cbff       or rbx, 0xffffffffffffffff
0x0000522d      e9f5feffff     jmp 0x5127
0x00005232      41b801000000   mov r8d, 1
0x00005238      4883cbff       or rbx, 0xffffffffffffffff
0x0000523c      e922feffff     jmp 0x5063
0x00005241      4883c8ff       or rax, 0xffffffffffffffff
0x00005245      41b801000000   mov r8d, 1
0x0000524b      e907feffff     jmp 0x5057
0x00005250      41b901000000   mov r9d, 1
0x00005256      4883cbff       or rbx, 0xffffffffffffffff
0x0000525a      e9a8feffff     jmp 0x5107
0x0000525f      41b901000000   mov r9d, 1
0x00005265      4883cbff       or rbx, 0xffffffffffffffff
0x00005269      e9fafeffff     jmp 0x5168
0x0000526e      41b901000000   mov r9d, 1
0x00005274      4883cbff       or rbx, 0xffffffffffffffff
0x00005278      e962feffff     jmp 0x50df
0x0000527d      41b801000000   mov r8d, 1
0x00005283      4883c8ff       or rax, 0xffffffffffffffff
0x00005287      e92fffffff     jmp 0x51bb
0x0000528c      0f1f4000       nop dword [rax]
;-- rpl_asprintf:
0x00005290      4881ecd80000.  sub rsp, 0xd8                           ; ../coreutils-8.31/lib/asprintf.c:31
0x00005297      84c0           test al, al
0x00005299      4889542430     mov qword [rsp + 0x30], rdx
0x0000529e      48894c2438     mov qword [rsp + 0x38], rcx
0x000052a3      4c89442440     mov qword [rsp + 0x40], r8
0x000052a8      4c894c2448     mov qword [rsp + 0x48], r9
0x000052ad      7437           je 0x52e6
0x000052af      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x000052b4      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x000052b9      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x000052be      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x000052c6      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x000052ce      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x000052d6      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x000052de      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x000052e6      64488b042528.  mov rax, qword fs:[0x28]
0x000052ef      4889442418     mov qword [rsp + 0x18], rax
0x000052f4      31c0           xor eax, eax
0x000052f6      488d8424e000.  lea rax, [rsp + 0xe0]                   ; ../coreutils-8.31/lib/asprintf.c:35
0x000052fe      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/lib/asprintf.c:36
0x00005301      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/asprintf.c:35
0x00005306      488d442420     lea rax, [rsp + 0x20]
0x0000530b      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00005312      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x0000531a      4889442410     mov qword [rsp + 0x10], rax
0x0000531f      e8bc000000     call sym.rpl_vasprintf                  ; ../coreutils-8.31/lib/asprintf.c:36
0x00005324      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/asprintf.c:39
0x00005329      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005332      7508           jne 0x533c
0x00005334      4881c4d80000.  add rsp, 0xd8
0x0000533b      c3             ret
0x0000533c      e80fc3ffff     call sym.imp.__stack_chk_fail
0x00005341      662e0f1f8400.  nop word cs:[rax + rax]
0x0000534b      0f1f440000     nop dword [rax + rax]
;-- rpl_mbrtowc:
0x00005350      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005352      4154           push r12
0x00005354      4989f5         mov r13, rsi
0x00005357      55             push rbp
0x00005358      53             push rbx
0x00005359      4889fb         mov rbx, rdi
0x0000535c      4989d4         mov r12, rdx
0x0000535f      4883ec18       sub rsp, 0x18
0x00005363      64488b042528.  mov rax, qword fs:[0x28]
0x0000536c      4889442408     mov qword [rsp + 8], rax
0x00005371      31c0           xor eax, eax
0x00005373      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005378      4885ff         test rdi, rdi
0x0000537b      480f44d8       cmove rbx, rax
0x0000537f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005382      e8e9c2ffff     call sym.imp.mbrtowc
0x00005387      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000538b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000538e      7620           jbe 0x53b0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005390      4d85e4         test r12, r12
0x00005393      741b           je 0x53b0
0x00005395      31ff           xor edi, edi
0x00005397      e894030000     call sym.hard_locale
0x0000539c      84c0           test al, al
0x0000539e      7510           jne 0x53b0
0x000053a0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000053a5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000053aa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000053ac      0f1f4000       nop dword [rax]
0x000053b0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000053b5      644833142528.  xor rdx, qword fs:[0x28]
0x000053be      4889e8         mov rax, rbp
0x000053c1      750b           jne 0x53ce
0x000053c3      4883c418       add rsp, 0x18
0x000053c7      5b             pop rbx
0x000053c8      5d             pop rbp
0x000053c9      415c           pop r12
0x000053cb      415d           pop r13
0x000053cd      c3             ret
0x000053ce      e87dc2ffff     call sym.imp.__stack_chk_fail
0x000053d3      662e0f1f8400.  nop word cs:[rax + rax]
0x000053dd      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x000053e0      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x000053e1      4889f0         mov rax, rsi
0x000053e4      4889fb         mov rbx, rdi
0x000053e7      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x000053e9      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x000053ed      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000053f6      48894c2408     mov qword [rsp + 8], rcx
0x000053fb      31c9           xor ecx, ecx
0x000053fd      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00005400      4889d1         mov rcx, rdx
0x00005403      4889c2         mov rdx, rax
0x00005406      e8e5040000     call sym.vasnprintf
0x0000540b      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x0000540e      7442           je 0x5452
0x00005410      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00005414      4881faffffff.  cmp rdx, 0x7fffffff
0x0000541b      771b           ja 0x5438
0x0000541d      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00005420      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00005422      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005427      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005430      7527           jne 0x5459
0x00005432      4883c410       add rsp, 0x10
0x00005436      5b             pop rbx
0x00005437      c3             ret
0x00005438      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x0000543b      e840c1ffff     call sym.imp.free
0x00005440      e85bc1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x00005445      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000544b      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x00005450      ebd0           jmp 0x5422
0x00005452      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x00005457      ebc9           jmp 0x5422
0x00005459      e8f2c1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000545e      6690           nop
;-- careadlinkatcwd:
0x00005460      83ff9c         cmp edi, 0xffffff9c                     ; ../coreutils-8.31/lib/areadlink.c:38
0x00005463      7511           jne 0x5476
0x00005465      4889f0         mov rax, rsi
0x00005468      4889d6         mov rsi, rdx
0x0000546b      4889ca         mov rdx, rcx                            ; unistd.h:-90
0x0000546e      4889c7         mov rdi, rax
0x00005471      e96ac1ffff     jmp sym.imp.readlink
0x00005476      4883ec08       sub rsp, 8
0x0000547a      e811c1ffff     call sym.imp.abort
0x0000547f      90             nop                                     ; unistd.h:-73
;-- areadlink:
0x00005480      4c8d0dd9ffff.  lea r9, sym.careadlinkatcwd             ; 0x5460
0x00005487      4889fe         mov rsi, rdi
0x0000548a      4531c0         xor r8d, r8d
0x0000548d      31c9           xor ecx, ecx
0x0000548f      31d2           xor edx, edx
0x00005491      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00005496      e905000000     jmp sym.careadlinkat
0x0000549b      0f1f440000     nop dword [rax + rax]
;-- careadlinkat:
0x000054a0      4157           push r15
0x000054a2      4156           push r14
0x000054a4      4d89cf         mov r15, r9
0x000054a7      4155           push r13
0x000054a9      4154           push r12
0x000054ab      4189fd         mov r13d, edi
0x000054ae      55             push rbp
0x000054af      53             push rbx
0x000054b0      4c89c5         mov rbp, r8
0x000054b3      4881ec280400.  sub rsp, 0x428
0x000054ba      64488b042528.  mov rax, qword fs:[0x28]
0x000054c3      488984241804.  mov qword [rsp + 0x418], rax
0x000054cb      31c0           xor eax, eax
0x000054cd      488d052c5720.  lea rax, obj.stdlib_allocator           ; 0x20ac00
0x000054d4      4d85c0         test r8, r8
0x000054d7      48893424       mov qword [rsp], rsi
0x000054db      480f44e8       cmove rbp, rax
0x000054df      4885c9         test rcx, rcx
0x000054e2      0f8518010000   jne 0x5600
0x000054e8      4c8d642410     lea r12, [rsp + 0x10]
0x000054ed      bb00040000     mov ebx, 0x400
0x000054f2      4d89e6         mov r14, r12
0x000054f5      eb1a           jmp 0x5511
0x000054f7      660f1f840000.  nop word [rax + rax]
0x00005500      4801db         add rbx, rbx
0x00005503      4889df         mov rdi, rbx
0x00005506      ff5500         call qword [rbp]
0x00005509      4885c0         test rax, rax
0x0000550c      4989c6         mov r14, rax
0x0000550f      7460           je 0x5571
0x00005511      4889d9         mov rcx, rbx
0x00005514      4c89f2         mov rdx, r14
0x00005517      488b3424       mov rsi, qword [rsp]
0x0000551b      4489ef         mov edi, r13d
0x0000551e      41ffd7         call r15
0x00005521      4885c0         test rax, rax
0x00005524      4889c1         mov rcx, rax
0x00005527      0f8893000000   js 0x55c0
0x0000552d      4839cb         cmp rbx, rcx
0x00005530      0f87da000000   ja 0x5610
0x00005536      4d39f4         cmp r12, r14
0x00005539      7406           je 0x5541
0x0000553b      4c89f7         mov rdi, r14
0x0000553e      ff5510         call qword [rbp + 0x10]
0x00005541      48b800000000.  movabs rax, 0x4000000000000000          ; 4611686018427387904
0x0000554b      4839c3         cmp rbx, rax
0x0000554e      76b0           jbe 0x5500
0x00005550      4885db         test rbx, rbx
0x00005553      0f88ef000000   js 0x5648
0x00005559      48bb00000000.  movabs rbx, 0x8000000000000000
0x00005563      4889df         mov rdi, rbx
0x00005566      ff5500         call qword [rbp]
0x00005569      4885c0         test rax, rax
0x0000556c      4989c6         mov r14, rax
0x0000556f      75a0           jne 0x5511
0x00005571      488b4518       mov rax, qword [rbp + 0x18]
0x00005575      4885c0         test rax, rax
0x00005578      7405           je 0x557f
0x0000557a      4889df         mov rdi, rbx
0x0000557d      ffd0           call rax
0x0000557f      e81cc0ffff     call sym.imp.__errno_location
0x00005584      4531f6         xor r14d, r14d
0x00005587      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000558d      488bb4241804.  mov rsi, qword [rsp + 0x418]
0x00005595      644833342528.  xor rsi, qword fs:[0x28]
0x0000559e      4c89f0         mov rax, r14
0x000055a1      0f85fc000000   jne 0x56a3
0x000055a7      4881c4280400.  add rsp, 0x428
0x000055ae      5b             pop rbx
0x000055af      5d             pop rbp
0x000055b0      415c           pop r12
0x000055b2      415d           pop r13
0x000055b4      415e           pop r14
0x000055b6      415f           pop r15
0x000055b8      c3             ret
0x000055b9      0f1f80000000.  nop dword [rax]
0x000055c0      4889442408     mov qword [rsp + 8], rax
0x000055c5      e8d6bfffff     call sym.imp.__errno_location
0x000055ca      8b10           mov edx, dword [rax]
0x000055cc      488b4c2408     mov rcx, qword [rsp + 8]
0x000055d1      83fa22         cmp edx, 0x22
0x000055d4      0f8453ffffff   je 0x552d
0x000055da      4d39f4         cmp r12, r14
0x000055dd      89542408       mov dword [rsp + 8], edx
0x000055e1      48890424       mov qword [rsp], rax
0x000055e5      0f84b0000000   je 0x569b
0x000055eb      4c89f7         mov rdi, r14
0x000055ee      4531f6         xor r14d, r14d
0x000055f1      ff5510         call qword [rbp + 0x10]
0x000055f4      488b0424       mov rax, qword [rsp]
0x000055f8      8b542408       mov edx, dword [rsp + 8]
0x000055fc      8910           mov dword [rax], edx
0x000055fe      eb8d           jmp 0x558d
0x00005600      4989d4         mov r12, rdx
0x00005603      4889cb         mov rbx, rcx
0x00005606      e9e7feffff     jmp 0x54f2
0x0000560b      0f1f440000     nop dword [rax + rax]
0x00005610      4c8d7c2410     lea r15, [rsp + 0x10]
0x00005615      4c8d6901       lea r13, [rcx + 1]
0x00005619      41c6040e00     mov byte [r14 + rcx], 0
0x0000561e      4d39fe         cmp r14, r15
0x00005621      753d           jne 0x5660
0x00005623      4c89ef         mov rdi, r13
0x00005626      ff5500         call qword [rbp]
0x00005629      4885c0         test rax, rax
0x0000562c      4989c6         mov r14, rax
0x0000562f      7462           je 0x5693
0x00005631      4c89ea         mov rdx, r13
0x00005634      4c89fe         mov rsi, r15
0x00005637      4889c7         mov rdi, rax
0x0000563a      e8e1c0ffff     call sym.imp.memcpy
0x0000563f      e949ffffff     jmp 0x558d
0x00005644      0f1f4000       nop dword [rax]
0x00005648      e853bfffff     call sym.imp.__errno_location
0x0000564d      4531f6         xor r14d, r14d
0x00005650      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x00005656      e932ffffff     jmp 0x558d
0x0000565b      0f1f440000     nop dword [rax + rax]
0x00005660      4c39eb         cmp rbx, r13
0x00005663      0f8624ffffff   jbe 0x558d
0x00005669      4d39f4         cmp r12, r14
0x0000566c      0f841bffffff   je 0x558d
0x00005672      488b4508       mov rax, qword [rbp + 8]
0x00005676      4885c0         test rax, rax
0x00005679      0f840effffff   je 0x558d
0x0000567f      4c89f7         mov rdi, r14
0x00005682      4c89ee         mov rsi, r13
0x00005685      ffd0           call rax
0x00005687      4885c0         test rax, rax
0x0000568a      4c0f45f0       cmovne r14, rax
0x0000568e      e9fafeffff     jmp 0x558d
0x00005693      4c89eb         mov rbx, r13
0x00005696      e9d6feffff     jmp 0x5571
0x0000569b      4531f6         xor r14d, r14d
0x0000569e      e9eafeffff     jmp 0x558d
0x000056a3      e8a8bfffff     call sym.imp.__stack_chk_fail
0x000056a8      0f1f84000000.  nop dword [rax + rax]
;-- close_stream:
0x000056b0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000056b2      55             push rbp
0x000056b3      4889fd         mov rbp, rdi
0x000056b6      53             push rbx
0x000056b7      e814bfffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000056bc      8b5d00         mov ebx, dword [rbp]
0x000056bf      4889ef         mov rdi, rbp
0x000056c2      4989c4         mov r12, rax
0x000056c5      e806010000     call sym.rpl_fclose
0x000056ca      83e320         and ebx, 0x20                           ; "@"
0x000056cd      85db           test ebx, ebx
0x000056cf      7517           jne 0x56e8
0x000056d1      85c0           test eax, eax
0x000056d3      740a           je 0x56df                               ; stdio.h:-186
0x000056d5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000056d8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000056dd      7439           je 0x5718
0x000056df      5b             pop rbx
0x000056e0      5d             pop rbp
0x000056e1      415c           pop r12
0x000056e3      c3             ret
0x000056e4      0f1f4000       nop dword [rax]
0x000056e8      85c0           test eax, eax
0x000056ea      751c           jne 0x5708
0x000056ec      e8afbeffff     call sym.imp.__errno_location
0x000056f1      c70000000000   mov dword [rax], 0
0x000056f7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000056fc      5b             pop rbx
0x000056fd      5d             pop rbp
0x000056fe      415c           pop r12
0x00005700      c3             ret
0x00005701      0f1f80000000.  nop dword [rax]
0x00005708      5b             pop rbx
0x00005709      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000570e      5d             pop rbp                                 ; stdio.h:-186
0x0000570f      415c           pop r12
0x00005711      c3             ret
0x00005712      660f1f440000   nop word [rax + rax]
0x00005718      e883beffff     call sym.imp.__errno_location
0x0000571d      833809         cmp dword [rax], 9
0x00005720      5b             pop rbx
0x00005721      5d             pop rbp
0x00005722      415c           pop r12                                 ; stdio.h:-178
0x00005724      0f95c0         setne al
0x00005727      0fb6c0         movzx eax, al
0x0000572a      f7d8           neg eax
0x0000572c      c3             ret
0x0000572d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005730      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005734      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005736      e865c0ffff     call sym.imp.setlocale
0x0000573b      4889c2         mov rdx, rax
0x0000573e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005743      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005746      741d           je 0x5765
0x00005748      488d3ddc3400.  lea rdi, [0x00008c2b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000574f      b902000000     mov ecx, 2
0x00005754      4889d6         mov rsi, rdx
0x00005757      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005759      0f97c1         seta cl
0x0000575c      80d900         sbb cl, 0
0x0000575f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005761      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005763      750b           jne 0x5770
0x00005765      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005769      c3             ret
0x0000576a      660f1f440000   nop word [rax + rax]
0x00005770      488d3db63400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x8c2d ; "POSIX"
0x00005777      b906000000     mov ecx, 6
0x0000577c      4889d6         mov rsi, rdx
0x0000577f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005781      0f97c0         seta al
0x00005784      1c00           sbb al, 0
0x00005786      84c0           test al, al
0x00005788      0f95c0         setne al
0x0000578b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000578f      c3             ret
;-- locale_charset:
0x00005790      4883ec08       sub rsp, 8
0x00005794      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005799      e8d2bfffff     call sym.imp.nl_langinfo
0x0000579e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000057a1      741d           je 0x57c0
0x000057a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000057a6      488d15863400.  lea rdx, str.ASCII                      ; 0x8c33 ; "ASCII"
0x000057ad      480f44c2       cmove rax, rdx
0x000057b1      4883c408       add rsp, 8
0x000057b5      c3             ret
0x000057b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057c0      488d056c3400.  lea rax, str.ASCII                      ; 0x8c33 ; "ASCII"
0x000057c7      4883c408       add rsp, 8
0x000057cb      c3             ret
0x000057cc      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x000057d0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x000057d2      55             push rbp
0x000057d3      53             push rbx
0x000057d4      4889fb         mov rbx, rdi
0x000057d7      e854bfffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x000057dc      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x000057de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000057e1      7854           js 0x5837                               ; ../coreutils-8.31/lib/fclose.c:66
0x000057e3      e898bfffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000057e8      85c0           test eax, eax
0x000057ea      752c           jne 0x5818
0x000057ec      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000057ef      e85c000000     call sym.rpl_fflush
0x000057f4      85c0           test eax, eax
0x000057f6      743c           je 0x5834
0x000057f8      e8a3bdffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000057fd      448b20         mov r12d, dword [rax]
0x00005800      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005803      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005806      e8f5bdffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000580b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000580e      7530           jne 0x5840
0x00005810      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005811      5d             pop rbp
0x00005812      415c           pop r12
0x00005814      c3             ret
0x00005815      0f1f00         nop dword [rax]
0x00005818      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000581b      e810bfffff     call sym.imp.fileno
0x00005820      31f6           xor esi, esi
0x00005822      ba01000000     mov edx, 1
0x00005827      89c7           mov edi, eax
0x00005829      e872beffff     call sym.imp.lseek
0x0000582e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005832      75b8           jne 0x57ec
0x00005834      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005837      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005838      5d             pop rbp
0x00005839      415c           pop r12
0x0000583b      e9c0bdffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005840      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005844      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005849      ebc5           jmp 0x5810
0x0000584b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005850      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005853      53             push rbx
0x00005854      4889fb         mov rbx, rdi
0x00005857      7411           je 0x586a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005859      e822bfffff     call sym.imp.__freading
0x0000585e      85c0           test eax, eax
0x00005860      7408           je 0x586a
0x00005862      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005868      750e           jne 0x5878
0x0000586a      4889df         mov rdi, rbx
0x0000586d      5b             pop rbx
0x0000586e      e9edbeffff     jmp sym.imp.fflush
0x00005873      0f1f440000     nop dword [rax + rax]
0x00005878      4889df         mov rdi, rbx
0x0000587b      ba01000000     mov edx, 1
0x00005880      31f6           xor esi, esi
0x00005882      e809000000     call sym.rpl_fseeko
0x00005887      4889df         mov rdi, rbx
0x0000588a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000588b      e9d0beffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005890      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005894      48394710       cmp qword [rdi + 0x10], rax
0x00005898      7406           je 0x58a0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000589a      e951bfffff     jmp sym.imp.fseeko
0x0000589f      90             nop
0x000058a0      488b4720       mov rax, qword [rdi + 0x20]
0x000058a4      48394728       cmp qword [rdi + 0x28], rax
0x000058a8      75f0           jne 0x589a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000058aa      48837f4800     cmp qword [rdi + 0x48], 0
0x000058af      75e9           jne 0x589a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000058b1      4154           push r12
0x000058b3      55             push rbp
0x000058b4      4189d4         mov r12d, edx
0x000058b7      53             push rbx
0x000058b8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000058bb      4889fb         mov rbx, rdi
0x000058be      e86dbeffff     call sym.imp.fileno
0x000058c3      4489e2         mov edx, r12d
0x000058c6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000058c9      89c7           mov edi, eax
0x000058cb      e8d0bdffff     call sym.imp.lseek
0x000058d0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000058d4      740c           je 0x58e2
0x000058d6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000058d9      488983900000.  mov qword [rbx + 0x90], rax
0x000058e0      31c0           xor eax, eax
0x000058e2      5b             pop rbx
0x000058e3      5d             pop rbp
0x000058e4      415c           pop r12
0x000058e6      c3             ret
0x000058e7      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x000058f0      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x000058f1      4889e5         mov rbp, rsp
0x000058f4      4157           push r15
0x000058f6      4156           push r14
0x000058f8      4155           push r13
0x000058fa      4154           push r12
0x000058fc      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005903      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005904      4889d3         mov rbx, rdx
0x00005907      4989cc         mov r12, rcx
0x0000590a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000590d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005914      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000591b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005922      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00005929      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000592c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00005933      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000593c      488945c8       mov qword [rbp - 0x38], rax
0x00005940      31c0           xor eax, eax
0x00005942      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00005949      e8c2120000     call sym.printf_parse
0x0000594e      85c0           test eax, eax
0x00005950      0f88620e0000   js 0x67b8
0x00005956      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x00005959      4c89e7         mov rdi, r12
0x0000595c      e8af100000     call sym.printf_fetchargs
0x00005961      85c0           test eax, eax
0x00005963      0f88b70e0000   js 0x6820
0x00005969      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x00005970      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00005977      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x0000597b      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x0000597f      480f46c2       cmovbe rax, rdx
0x00005983      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x0000598a      0f82280a0000   jb 0x63b8
0x00005990      4889c7         mov rdi, rax
0x00005993      4531c0         xor r8d, r8d
0x00005996      4883c706       add rdi, 6
0x0000599a      410f92c0       setb r8b
0x0000599e      0f82140a0000   jb 0x63b8
0x000059a4      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x000059ab      0f8647010000   jbe 0x5af8
0x000059b1      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x000059b5      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x000059bc      0f84f6090000   je 0x63b8
0x000059c2      e889bdffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x000059c7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x000059ca      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x000059d1      0f84e1090000   je 0x63b8                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x000059d7      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x000059de      488985e0fbff.  mov qword [rbp - 0x420], rax
0x000059e5      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x000059e8      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x000059f0      740a           je 0x59fc
0x000059f2      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x000059f9      4c8b20         mov r12, qword [rax]
0x000059fc      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005a03      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00005a0a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00005a11      48c78500fcff.  mov qword [rbp - 0x400], 0
0x00005a1c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00005a23      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00005a26      4c89c3         mov rbx, r8
0x00005a29      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00005a2d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00005a30      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00005a33      0f8468090000   je 0x63a1
0x00005a39      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x00005a3c      4889d8         mov rax, rbx
0x00005a3f      4801c8         add rax, rcx
0x00005a42      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x00005a45      0f83dd000000   jae 0x5b28                              ; ../coreutils-8.31/lib/xsize.h:66
0x00005a4b      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00005a4f      0f84cb0a0000   je 0x6520
0x00005a55      e846bbffff     call sym.imp.__errno_location
0x00005a5a      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00005a61      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x00005a68      7409           je 0x5a73
0x00005a6a      4d85ff         test r15, r15
0x00005a6d      0f85dd0a0000   jne 0x6550
0x00005a73      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x00005a7a      4885c0         test rax, rax
0x00005a7d      7408           je 0x5a87
0x00005a7f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x00005a82      e8f9baffff     call sym.imp.free
0x00005a87      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x00005a8e      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00005a95      4883c020       add rax, 0x20                           ; "@"
0x00005a99      4839c7         cmp rdi, rax
0x00005a9c      7405           je 0x5aa3
0x00005a9e      e8ddbaffff     call sym.imp.free
0x00005aa3      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00005aaa      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00005ab1      4883c010       add rax, 0x10
0x00005ab5      4839c7         cmp rdi, rax
0x00005ab8      7405           je 0x5abf
0x00005aba      e8c1baffff     call sym.imp.free
0x00005abf      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00005ac6      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00005ac9      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x00005acf      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00005ad3      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005adc      4c89f8         mov rax, r15
0x00005adf      0f85020f0000   jne 0x69e7
0x00005ae5      488d65d8       lea rsp, [rbp - 0x28]
0x00005ae9      5b             pop rbx
0x00005aea      415c           pop r12
0x00005aec      415d           pop r13
0x00005aee      415e           pop r14
0x00005af0      415f           pop r15
0x00005af2      5d             pop rbp
0x00005af3      c3             ret
0x00005af4      0f1f4000       nop dword [rax]
0x00005af8      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00005afc      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00005b07      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x00005b0b      4829c4         sub rsp, rax
0x00005b0e      488d44240f     lea rax, [rsp + 0xf]
0x00005b13      4883e0f0       and rax, 0xfffffffffffffff0
0x00005b17      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x00005b1e      e9c2feffff     jmp 0x59e5
0x00005b23      0f1f440000     nop dword [rax + rax]
0x00005b28      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x00005b2b      7367           jae 0x5b94
0x00005b2d      4d85e4         test r12, r12
0x00005b30      0f852a090000   jne 0x6460
0x00005b36      4883f80c       cmp rax, 0xc
0x00005b3a      0f8732090000   ja 0x6472
0x00005b40      41bc0c000000   mov r12d, 0xc
0x00005b46      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00005b4d      0f94c2         sete dl
0x00005b50      4d85ff         test r15, r15
0x00005b53      0f843f090000   je 0x6498
0x00005b59      84d2           test dl, dl
0x00005b5b      0f8537090000   jne 0x6498
0x00005b61      4c89e6         mov rsi, r12
0x00005b64      4c89ff         mov rdi, r15
0x00005b67      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00005b6e      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00005b75      e816bcffff     call sym.imp.realloc
0x00005b7a      4885c0         test rax, rax
0x00005b7d      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00005b84      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00005b8b      0f84aa090000   je 0x653b
0x00005b91      4989c7         mov r15, rax
0x00005b94      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x00005b98      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005b9b      4c89c6         mov rsi, r8
0x00005b9e      e87dbbffff     call sym.imp.memcpy
0x00005ba3      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x00005baa      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00005bb1      0f84b40c0000   je 0x686b
0x00005bb7      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x00005bbc      498b4550       mov rax, qword [r13 + 0x50]
0x00005bc0      80fa25         cmp dl, 0x25
0x00005bc3      0f848f070000   je 0x6358
0x00005bc9      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x00005bcd      0f84430c0000   je 0x6816
0x00005bd3      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x00005bda      48c1e005       shl rax, 5
0x00005bde      4c01c0         add rax, r8
0x00005be1      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00005be4      8b38           mov edi, dword [rax]
0x00005be6      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x00005bec      0f84de070000   je 0x63d0
0x00005bf2      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00005bf6      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x00005bfd      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00005bff      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00005c02      488d5f01       lea rbx, [rdi + 1]
0x00005c06      740f           je 0x5c17                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00005c08      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x00005c0f      488d5f02       lea rbx, [rdi + 2]
0x00005c13      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00005c17      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00005c19      7407           je 0x5c22
0x00005c1b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x00005c1e      4883c301       add rbx, 1
0x00005c22      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00005c24      7407           je 0x5c2d
0x00005c26      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00005c29      4883c301       add rbx, 1
0x00005c2d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x00005c2f      7407           je 0x5c38
0x00005c31      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00005c34      4883c301       add rbx, 1
0x00005c38      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x00005c3a      7407           je 0x5c43
0x00005c3c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x00005c3f      4883c301       add rbx, 1
0x00005c43      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x00005c45      7407           je 0x5c4e
0x00005c47      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x00005c4a      4883c301       add rbx, 1
0x00005c4e      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x00005c50      7407           je 0x5c59
0x00005c52      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x00005c55      4883c301       add rbx, 1
0x00005c59      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x00005c5d      498b5520       mov rdx, qword [r13 + 0x20]
0x00005c61      4839d6         cmp rsi, rdx
0x00005c64      7430           je 0x5c96
0x00005c66      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00005c69      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005c6c      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00005c73      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x00005c76      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005c79      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00005c80      e89bbaffff     call sym.imp.memcpy
0x00005c85      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x00005c8c      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00005c93      4801cb         add rbx, rcx
0x00005c96      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x00005c9a      498b5538       mov rdx, qword [r13 + 0x38]
0x00005c9e      4839d6         cmp rsi, rdx
0x00005ca1      7430           je 0x5cd3
0x00005ca3      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00005ca6      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005ca9      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00005cb0      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00005cb3      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005cb6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00005cbd      e85ebaffff     call sym.imp.memcpy
0x00005cc2      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00005cc9      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00005cd0      4801cb         add rbx, rcx
0x00005cd3      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00005cd9      83ff10         cmp edi, 0x10
0x00005cdc      772d           ja 0x5d0b
0x00005cde      b801000000     mov eax, 1
0x00005ce3      89f9           mov ecx, edi
0x00005ce5      48d3e0         shl rax, cl
0x00005ce8      a980410100     test eax, 0x14180
0x00005ced      7515           jne 0x5d04
0x00005cef      f6c410         test ah, 0x10
0x00005cf2      0f8558090000   jne 0x6650
0x00005cf8      f6c406         test ah, 6
0x00005cfb      740e           je 0x5d0b
0x00005cfd      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00005d00      4883c301       add rbx, 1
0x00005d04      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00005d07      4883c301       add rbx, 1
0x00005d0b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00005d10      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00005d14      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00005d16      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x00005d1a      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005d1e      0f842c070000   je 0x6450
0x00005d24      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00005d28      4c01c0         add rax, r8
0x00005d2b      833805         cmp dword [rax], 5
0x00005d2e      0f85e20a0000   jne 0x6816
0x00005d34      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00005d37      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x00005d41      898548fcffff   mov dword [rbp - 0x3b8], eax
0x00005d47      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x00005d4b      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005d4f      742b           je 0x5d7c
0x00005d51      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x00005d55      4901c0         add r8, rax
0x00005d58      41833805       cmp dword [r8], 5
0x00005d5c      0f85b40a0000   jne 0x6816
0x00005d62      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x00005d68      418b5010       mov edx, dword [r8 + 0x10]
0x00005d6c      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x00005d73      8d4001         lea eax, [rax + 1]
0x00005d76      898520fcffff   mov dword [rbp - 0x3e0], eax
0x00005d7c      4c89f0         mov rax, r14
0x00005d7f      31d2           xor edx, edx
0x00005d81      4883c002       add rax, 2
0x00005d85      0f82610c0000   jb 0x69ec
0x00005d8b      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x00005d8e      734b           jae 0x5ddb
0x00005d90      4d85e4         test r12, r12
0x00005d93      0f851f080000   jne 0x65b8
0x00005d99      4883f80c       cmp rax, 0xc
0x00005d9d      0f872d080000   ja 0x65d0
0x00005da3      41bc0c000000   mov r12d, 0xc
0x00005da9      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00005db0      0f94c2         sete dl
0x00005db3      4d85ff         test r15, r15
0x00005db6      0f8444080000   je 0x6600
0x00005dbc      84d2           test dl, dl
0x00005dbe      0f853c080000   jne 0x6600
0x00005dc4      4c89e6         mov rsi, r12
0x00005dc7      4c89ff         mov rdi, r15
0x00005dca      e8c1b9ffff     call sym.imp.realloc
0x00005dcf      4885c0         test rax, rax
0x00005dd2      0f847dfcffff   je 0x5a55
0x00005dd8      4989c7         mov r15, rax
0x00005ddb      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00005de0      e8bbb7ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00005de5      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00005dec      8b00           mov eax, dword [rax]
0x00005dee      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00005df5      8985dcfbffff   mov dword [rbp - 0x424], eax
0x00005dfb      0f1f440000     nop dword [rax + rax]
0x00005e00      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00005e07      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x00005e0a      41baffffff7f   mov r10d, 0x7fffffff
0x00005e10      4c29f3         sub rbx, r14
0x00005e13      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x00005e1d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00005e24      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00005e2a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00005e30      4c0f46d3       cmovbe r10, rbx
0x00005e34      83f811         cmp eax, 0x11
0x00005e37      0f87d9090000   ja 0x6816
0x00005e3d      488d35f82d00.  lea rsi, [0x00008c3c]
0x00005e44      48630486       movsxd rax, dword [rsi + rax*4]
0x00005e48      4801f0         add rax, rsi
0x00005e4b      ffe0           jmp rax
0x00005e4d      0f1f00         nop dword [rax]
0x00005e50      498b4550       mov rax, qword [r13 + 0x50]
0x00005e54      4b8d3c37       lea rdi, [r15 + r14]
0x00005e58      48c1e005       shl rax, 5
0x00005e5c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00005e63      4c8b4810       mov r9, qword [rax + 0x10]
0x00005e67      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00005e6d      83f801         cmp eax, 1
0x00005e70      0f84c2040000   je 0x6338
0x00005e76      83f802         cmp eax, 2
0x00005e79      0f84a1040000   je 0x6320
0x00005e7f      4883ec08       sub rsp, 8
0x00005e83      ffb510fcffff   push qword [rbp - 0x3f0]
0x00005e89      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00005e90      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x00005e93      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00005e9a      ba01000000     mov edx, 1
0x00005e9f      31c0           xor eax, eax
0x00005ea1      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00005ea8      e8c3b6ffff     call sym.imp.__snprintf_chk
0x00005ead      5e             pop rsi
0x00005eae      5f             pop rdi
0x00005eaf      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00005eb6      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x00005ebc      85c9           test ecx, ecx
0x00005ebe      0f8838010000   js 0x5ffc
0x00005ec4      4863d1         movsxd rdx, ecx
0x00005ec7      4c39d2         cmp rdx, r10
0x00005eca      730e           jae 0x5eda
0x00005ecc      4c01fa         add rdx, r15
0x00005ecf      42803c3200     cmp byte [rdx + r14], 0
0x00005ed4      0f853c090000   jne 0x6816
0x00005eda      39c1           cmp ecx, eax
0x00005edc      7d08           jge 0x5ee6
0x00005ede      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00005ee4      89c1           mov ecx, eax
0x00005ee6      8d4101         lea eax, [rcx + 1]
0x00005ee9      4c39d0         cmp rax, r10
0x00005eec      0f822e080000   jb 0x6720
0x00005ef2      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00005ef9      0f8741080000   ja 0x6740
0x00005eff      4b8d3424       lea rsi, [r12 + r12]
0x00005f03      8d5102         lea edx, [rcx + 2]
0x00005f06      4d85e4         test r12, r12
0x00005f09      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00005f10      480f49c6       cmovns rax, rsi
0x00005f14      4c01f2         add rdx, r14
0x00005f17      0f82bb0a0000   jb 0x69d8
0x00005f1d      4839d0         cmp rax, rdx
0x00005f20      480f42c2       cmovb rax, rdx
0x00005f24      4939c4         cmp r12, rax
0x00005f27      0f83d3feffff   jae 0x5e00
0x00005f2d      4d85e4         test r12, r12
0x00005f30      0f882bfbffff   js 0x5a61
0x00005f36      4839c6         cmp rsi, rax
0x00005f39      4989f4         mov r12, rsi
0x00005f3c      730d           jae 0x5f4b
0x00005f3e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005f42      0f8419fbffff   je 0x5a61
0x00005f48      4989c4         mov r12, rax
0x00005f4b      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00005f52      0f94c3         sete bl
0x00005f55      4d85ff         test r15, r15
0x00005f58      0f8482030000   je 0x62e0
0x00005f5e      84db           test bl, bl
0x00005f60      0f857a030000   jne 0x62e0
0x00005f66      4c89e6         mov rsi, r12
0x00005f69      4c89ff         mov rdi, r15
0x00005f6c      e81fb8ffff     call sym.imp.realloc
0x00005f71      4885c0         test rax, rax
0x00005f74      0f84e7faffff   je 0x5a61
0x00005f7a      4989c7         mov r15, rax
0x00005f7d      e97efeffff     jmp 0x5e00                              ; stdio2.h:-211
0x00005f82      660f1f440000   nop word [rax + rax]
0x00005f88      498b4550       mov rax, qword [r13 + 0x50]
0x00005f8c      4b8d3c37       lea rdi, [r15 + r14]
0x00005f90      48c1e005       shl rax, 5
0x00005f94      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00005f9b      448b4810       mov r9d, dword [rax + 0x10]
0x00005f9f      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00005fa5      83f801         cmp eax, 1
0x00005fa8      0f8432020000   je 0x61e0
0x00005fae      83f802         cmp eax, 2
0x00005fb1      0f8471020000   je 0x6228
0x00005fb7      4883ec08       sub rsp, 8
0x00005fbb      ffb510fcffff   push qword [rbp - 0x3f0]
0x00005fc1      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00005fc8      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00005fcf      ba01000000     mov edx, 1
0x00005fd4      4c89d6         mov rsi, r10
0x00005fd7      31c0           xor eax, eax
0x00005fd9      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00005fe0      e88bb5ffff     call sym.imp.__snprintf_chk
0x00005fe5      5a             pop rdx
0x00005fe6      59             pop rcx
0x00005fe7      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x00005fed      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00005ff4      85c9           test ecx, ecx
0x00005ff6      0f89c8feffff   jns 0x5ec4
0x00005ffc      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00006003      807f0100       cmp byte [rdi + 1], 0
0x00006007      0f853b030000   jne 0x6348
0x0000600d      85c0           test eax, eax
0x0000600f      0f89c9feffff   jns 0x5ede
0x00006015      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000601c      8b18           mov ebx, dword [rax]
0x0000601e      85db           test ebx, ebx
0x00006020      751e           jne 0x6040
0x00006022      410fb64548     movzx eax, byte [r13 + 0x48]
0x00006027      bb16000000     mov ebx, 0x16
0x0000602c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000602f      3c63           cmp al, 0x63
0x00006031      b854000000     mov eax, 0x54                           ; 'T'
0x00006036      0f44d8         cmove ebx, eax
0x00006039      0f1f80000000.  nop dword [rax]
0x00006040      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006047      7409           je 0x6052
0x00006049      4d85ff         test r15, r15
0x0000604c      0f85aa070000   jne 0x67fc
0x00006052      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006059      4885c0         test rax, rax
0x0000605c      7408           je 0x6066
0x0000605e      4889c7         mov rdi, rax
0x00006061      e81ab5ffff     call sym.imp.free
0x00006066      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000606d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006074      4883c020       add rax, 0x20                           ; "@"
0x00006078      4839c7         cmp rdi, rax
0x0000607b      7405           je 0x6082
0x0000607d      e8feb4ffff     call sym.imp.free
0x00006082      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006089      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006090      4883c010       add rax, 0x10
0x00006094      4839c7         cmp rdi, rax
0x00006097      7405           je 0x609e
0x00006099      e8e2b4ffff     call sym.imp.free
0x0000609e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000060a5      4531ff         xor r15d, r15d
0x000060a8      8918           mov dword [rax], ebx
0x000060aa      e920faffff     jmp 0x5acf
0x000060af      90             nop
0x000060b0      498b4550       mov rax, qword [r13 + 0x50]
0x000060b4      4b8d3c37       lea rdi, [r15 + r14]
0x000060b8      48c1e005       shl rax, 5
0x000060bc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000060c3      db6810         fld xword [rax + 0x10]
0x000060c6      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000060cc      83f801         cmp eax, 1
0x000060cf      0f842b060000   je 0x6700
0x000060d5      83f802         cmp eax, 2
0x000060d8      0f85c2040000   jne 0x65a0
0x000060de      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x000060e4      4883ec08       sub rsp, 8
0x000060e8      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x000060ee      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x000060f5      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000060fc      4c89d6         mov rsi, r10
0x000060ff      4883ec18       sub rsp, 0x18
0x00006103      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000610a      ba01000000     mov edx, 1
0x0000610f      db7c2408       fstp xword [rsp + 8]
0x00006113      50             push rax
0x00006114      31c0           xor eax, eax
0x00006116      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x0000611d      e84eb4ffff     call sym.imp.__snprintf_chk
0x00006122      4883c430       add rsp, 0x30
0x00006126      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x0000612d      e984fdffff     jmp 0x5eb6
0x00006132      660f1f440000   nop word [rax + rax]
0x00006138      498b4550       mov rax, qword [r13 + 0x50]
0x0000613c      4b8d3c37       lea rdi, [r15 + r14]
0x00006140      48c1e005       shl rax, 5
0x00006144      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000614b      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00006150      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006156      83f801         cmp eax, 1
0x00006159      0f8491050000   je 0x66f0
0x0000615f      83f802         cmp eax, 2
0x00006162      0f85f8030000   jne 0x6560
0x00006168      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000616e      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006174      50             push rax
0x00006175      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x0000617c      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006183      4c89d6         mov rsi, r10
0x00006186      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000618d      ba01000000     mov edx, 1
0x00006192      b801000000     mov eax, 1
0x00006197      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x0000619e      e8cdb3ffff     call sym.imp.__snprintf_chk
0x000061a3      4158           pop r8
0x000061a5      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x000061ac      4159           pop r9
0x000061ae      e903fdffff     jmp 0x5eb6
0x000061b3      0f1f440000     nop dword [rax + rax]
0x000061b8      498b4550       mov rax, qword [r13 + 0x50]
0x000061bc      4b8d3c37       lea rdi, [r15 + r14]
0x000061c0      48c1e005       shl rax, 5
0x000061c4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000061cb      440fb74810     movzx r9d, word [rax + 0x10]
0x000061d0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000061d6      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x000061d9      0f85cffdffff   jne 0x5fae
0x000061df      90             nop
0x000061e0      ffb510fcffff   push qword [rbp - 0x3f0]
0x000061e6      4151           push r9
0x000061e8      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x000061ef      e9cdfdffff     jmp 0x5fc1
0x000061f4      0f1f4000       nop dword [rax]
0x000061f8      498b4550       mov rax, qword [r13 + 0x50]
0x000061fc      4b8d3c37       lea rdi, [r15 + r14]
0x00006200      48c1e005       shl rax, 5
0x00006204      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x0000620b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00006210      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006216      83f801         cmp eax, 1
0x00006219      74c5           je 0x61e0
0x0000621b      83f802         cmp eax, 2
0x0000621e      0f8593fdffff   jne 0x5fb7
0x00006224      0f1f4000       nop dword [rax]
0x00006228      4883ec08       sub rsp, 8
0x0000622c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006232      4151           push r9
0x00006234      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x0000623a      50             push rax
0x0000623b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00006242      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006249      4c89d6         mov rsi, r10
0x0000624c      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006253      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00006258      31c0           xor eax, eax
0x0000625a      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006261      e80ab3ffff     call sym.imp.__snprintf_chk
0x00006266      4883c420       add rsp, 0x20
0x0000626a      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006271      e940fcffff     jmp 0x5eb6
0x00006276      662e0f1f8400.  nop word cs:[rax + rax]
0x00006280      498b4550       mov rax, qword [r13 + 0x50]
0x00006284      4b8d3c37       lea rdi, [r15 + r14]
0x00006288      48c1e005       shl rax, 5
0x0000628c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006293      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006298      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x0000629e      83f801         cmp eax, 1
0x000062a1      0f8507fdffff   jne 0x5fae
0x000062a7      e934ffffff     jmp 0x61e0
0x000062ac      0f1f4000       nop dword [rax]
0x000062b0      498b4550       mov rax, qword [r13 + 0x50]
0x000062b4      4b8d3c37       lea rdi, [r15 + r14]
0x000062b8      48c1e005       shl rax, 5
0x000062bc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000062c3      440fbe4810     movsx r9d, byte [rax + 0x10]
0x000062c8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000062ce      83f801         cmp eax, 1
0x000062d1      0f85d7fcffff   jne 0x5fae
0x000062d7      e904ffffff     jmp 0x61e0
0x000062dc      0f1f4000       nop dword [rax]
0x000062e0      4c89e7         mov rdi, r12
0x000062e3      e868b4ffff     call sym.imp.malloc
0x000062e8      4885c0         test rax, rax
0x000062eb      4889c1         mov rcx, rax
0x000062ee      0f846df7ffff   je 0x5a61
0x000062f4      4d85f6         test r14, r14
0x000062f7      0f84b3000000   je 0x63b0
0x000062fd      84db           test bl, bl
0x000062ff      0f84ab000000   je 0x63b0
0x00006305      4c89fe         mov rsi, r15
0x00006308      4c89f2         mov rdx, r14
0x0000630b      4889c7         mov rdi, rax
0x0000630e      e80db4ffff     call sym.imp.memcpy
0x00006313      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00006316      e9e5faffff     jmp 0x5e00
0x0000631b      0f1f440000     nop dword [rax + rax]
0x00006320      4883ec08       sub rsp, 8
0x00006324      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x0000632a      4151           push r9
0x0000632c      e903ffffff     jmp 0x6234
0x00006331      0f1f80000000.  nop dword [rax]
0x00006338      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000633e      4151           push r9
0x00006340      e9a3feffff     jmp 0x61e8
0x00006345      0f1f00         nop dword [rax]
0x00006348      c6470100       mov byte [rdi + 1], 0
0x0000634c      e9affaffff     jmp 0x5e00
0x00006351      0f1f80000000.  nop dword [rax]
0x00006358      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000635c      0f85b4040000   jne 0x6816
0x00006362      4c89f0         mov rax, r14
0x00006365      4883c001       add rax, 1
0x00006369      4889c3         mov rbx, rax
0x0000636c      0f8386000000   jae 0x63f8
0x00006372      4983fcff       cmp r12, 0xffffffffffffffff
0x00006376      0f85d9f6ffff   jne 0x5a55
0x0000637c      4c89e3         mov rbx, r12
0x0000637f      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006384      4d8b4508       mov r8, qword [r13 + 8]
0x00006388      4983c558       add r13, 0x58
0x0000638c      498b4d00       mov rcx, qword [r13]
0x00006390      48838500fcff.  add qword [rbp - 0x400], 1
0x00006398      4c39c1         cmp rcx, r8
0x0000639b      0f8598f6ffff   jne 0x5a39
0x000063a1      4989de         mov r14, rbx
0x000063a4      e9faf7ffff     jmp 0x5ba3                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x000063a9      0f1f80000000.  nop dword [rax]
0x000063b0      4989cf         mov r15, rcx
0x000063b3      e948faffff     jmp 0x5e00                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x000063b8      e8e3b1ffff     call sym.imp.__errno_location
0x000063bd      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000063c4      e9bef6ffff     jmp 0x5a87
0x000063c9      0f1f80000000.  nop dword [rax]
0x000063d0      89fa           mov edx, edi
0x000063d2      83ea12         sub edx, 0x12
0x000063d5      83fa04         cmp edx, 4
0x000063d8      0f8738040000   ja 0x6816
0x000063de      488d3d9f2800.  lea rdi, [0x00008c84]
0x000063e5      488b4010       mov rax, qword [rax + 0x10]
0x000063e9      48631497       movsxd rdx, dword [rdi + rdx*4]
0x000063ed      4801fa         add rdx, rdi
0x000063f0      ffe2           jmp rdx
0x000063f2      660f1f440000   nop word [rax + rax]
0x000063f8      4939c4         cmp r12, rax
0x000063fb      7382           jae 0x637f
0x000063fd      4d85e4         test r12, r12
0x00006400      0f85ca030000   jne 0x67d0
0x00006406      4883f80c       cmp rax, 0xc
0x0000640a      0f87d2030000   ja 0x67e2
0x00006410      41bc0c000000   mov r12d, 0xc
0x00006416      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000641d      0f94c2         sete dl
0x00006420      4d85ff         test r15, r15
0x00006423      0f8467020000   je 0x6690
0x00006429      84d2           test dl, dl
0x0000642b      0f855f020000   jne 0x6690
0x00006431      4c89e6         mov rsi, r12
0x00006434      4c89ff         mov rdi, r15
0x00006437      e854b3ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x0000643c      4885c0         test rax, rax
0x0000643f      0f84f6000000   je 0x653b
0x00006445      4989c7         mov r15, rax
0x00006448      e932ffffff     jmp 0x637f
0x0000644d      0f1f00         nop dword [rax]
0x00006450      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x0000645a      e9e8f8ffff     jmp 0x5d47
0x0000645f      90             nop
0x00006460      0f88eff5ffff   js 0x5a55
0x00006466      4d01e4         add r12, r12
0x00006469      4939c4         cmp r12, rax
0x0000646c      0f83d4f6ffff   jae 0x5b46
0x00006472      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006476      0f84d9f5ffff   je 0x5a55
0x0000647c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006483      4989c4         mov r12, rax
0x00006486      0f94c2         sete dl
0x00006489      4d85ff         test r15, r15
0x0000648c      0f85c7f6ffff   jne 0x5b59
0x00006492      660f1f440000   nop word [rax + rax]
0x00006498      4c89e7         mov rdi, r12
0x0000649b      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000064a2      889530fcffff   mov byte [rbp - 0x3d0], dl
0x000064a8      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000064af      e89cb2ffff     call sym.imp.malloc
0x000064b4      4885c0         test rax, rax
0x000064b7      4989c1         mov r9, rax
0x000064ba      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000064c1      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x000064c8      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000064cf      0f8480f5ffff   je 0x5a55
0x000064d5      4885db         test rbx, rbx
0x000064d8      0f8402020000   je 0x66e0
0x000064de      84d2           test dl, dl
0x000064e0      0f84fa010000   je 0x66e0
0x000064e6      4c89fe         mov rsi, r15
0x000064e9      4889da         mov rdx, rbx
0x000064ec      4889c7         mov rdi, rax
0x000064ef      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x000064f6      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000064fd      e81eb2ffff     call sym.imp.memcpy
0x00006502      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006509      4989c7         mov r15, rax
0x0000650c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00006513      e97cf6ffff     jmp 0x5b94
0x00006518      0f1f84000000.  nop dword [rax + rax]
0x00006520      4d89e6         mov r14, r12
0x00006523      e96cf6ffff     jmp 0x5b94
0x00006528      0f1f84000000.  nop dword [rax + rax]
0x00006530      4c8930         mov qword [rax], r14
0x00006533      4c89f3         mov rbx, r14
0x00006536      e949feffff     jmp 0x6384
0x0000653b      e860b0ffff     call sym.imp.__errno_location
0x00006540      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006547      660f1f840000.  nop word [rax + rax]
0x00006550      4c89ff         mov rdi, r15
0x00006553      e828b0ffff     call sym.imp.free
0x00006558      e916f5ffff     jmp 0x5a73
0x0000655d      0f1f00         nop dword [rax]
0x00006560      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006567      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x0000656e      4c89d6         mov rsi, r10
0x00006571      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006578      ba01000000     mov edx, 1
0x0000657d      b801000000     mov eax, 1
0x00006582      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006589      e8e2afffff     call sym.imp.__snprintf_chk
0x0000658e      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006595      e91cf9ffff     jmp 0x5eb6
0x0000659a      660f1f440000   nop word [rax + rax]
0x000065a0      4883ec10       sub rsp, 0x10
0x000065a4      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x000065ab      db3c24         fstp xword [rsp]
0x000065ae      e9d6f8ffff     jmp 0x5e89
0x000065b3      0f1f440000     nop dword [rax + rax]
0x000065b8      0f8897f4ffff   js 0x5a55
0x000065be      4d01e4         add r12, r12
0x000065c1      4939c4         cmp r12, rax
0x000065c4      0f83dff7ffff   jae 0x5da9
0x000065ca      660f1f440000   nop word [rax + rax]
0x000065d0      4885d2         test rdx, rdx
0x000065d3      0f857cf4ffff   jne 0x5a55
0x000065d9      4883f8ff       cmp rax, 0xffffffffffffffff
0x000065dd      0f8472f4ffff   je 0x5a55
0x000065e3      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000065ea      4989c4         mov r12, rax
0x000065ed      0f94c2         sete dl                                 ; string_fortified.h:-369
0x000065f0      4d85ff         test r15, r15
0x000065f3      0f85c3f7ffff   jne 0x5dbc
0x000065f9      0f1f80000000.  nop dword [rax]
0x00006600      4c89e7         mov rdi, r12
0x00006603      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006609      e842b1ffff     call sym.imp.malloc
0x0000660e      4885c0         test rax, rax
0x00006611      4889c1         mov rcx, rax
0x00006614      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000661b      0f8434f4ffff   je 0x5a55                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00006621      4d85f6         test r14, r14
0x00006624      0f8496010000   je 0x67c0
0x0000662a      84d2           test dl, dl
0x0000662c      0f848e010000   je 0x67c0
0x00006632      4c89fe         mov rsi, r15
0x00006635      4c89f2         mov rdx, r14
0x00006638      4889c7         mov rdi, rax
0x0000663b      e8e0b0ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00006640      4989c7         mov r15, rax
0x00006643      e993f7ffff     jmp 0x5ddb
0x00006648      0f1f84000000.  nop dword [rax + rax]
0x00006650      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00006653      4883c301       add rbx, 1
0x00006657      e9aff6ffff     jmp 0x5d0b
0x0000665c      0f1f4000       nop dword [rax]
0x00006660      448830         mov byte [rax], r14b
0x00006663      4c89f3         mov rbx, r14
0x00006666      e919fdffff     jmp 0x6384
0x0000666b      0f1f440000     nop dword [rax + rax]
0x00006670      448930         mov dword [rax], r14d
0x00006673      4c89f3         mov rbx, r14
0x00006676      e909fdffff     jmp 0x6384
0x0000667b      0f1f440000     nop dword [rax + rax]
0x00006680      66448930       mov word [rax], r14w
0x00006684      4c89f3         mov rbx, r14
0x00006687      e9f8fcffff     jmp 0x6384
0x0000668c      0f1f4000       nop dword [rax]
0x00006690      4c89e7         mov rdi, r12
0x00006693      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006699      e8b2b0ffff     call sym.imp.malloc
0x0000669e      4885c0         test rax, rax
0x000066a1      4889c1         mov rcx, rax
0x000066a4      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x000066ab      0f84a4f3ffff   je 0x5a55                               ; stdio2.h:-339
0x000066b1      4d85f6         test r14, r14
0x000066b4      0f843a010000   je 0x67f4
0x000066ba      84d2           test dl, dl
0x000066bc      0f8432010000   je 0x67f4
0x000066c2      4c89fe         mov rsi, r15
0x000066c5      4c89f2         mov rdx, r14
0x000066c8      4889c7         mov rdi, rax
0x000066cb      e850b0ffff     call sym.imp.memcpy
0x000066d0      4989c7         mov r15, rax
0x000066d3      e9a7fcffff     jmp 0x637f
0x000066d8      0f1f84000000.  nop dword [rax + rax]
0x000066e0      4d89cf         mov r15, r9
0x000066e3      e9acf4ffff     jmp 0x5b94
0x000066e8      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x000066f0      4883ec08       sub rsp, 8
0x000066f4      ffb510fcffff   push qword [rbp - 0x3f0]
0x000066fa      e976faffff     jmp 0x6175
0x000066ff      90             nop
0x00006700      4883ec08       sub rsp, 8
0x00006704      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000670a      4883ec10       sub rsp, 0x10
0x0000670e      db3c24         fstp xword [rsp]
0x00006711      e925fbffff     jmp 0x623b
0x00006716      662e0f1f8400.  nop word cs:[rax + rax]
0x00006720      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006727      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000672d      4863d9         movsxd rbx, ecx
0x00006730      4c01f3         add rbx, r14
0x00006733      8938           mov dword [rax], edi
0x00006735      e94afcffff     jmp 0x6384
0x0000673a      660f1f440000   nop word [rax + rax]
0x00006740      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006747      7409           je 0x6752
0x00006749      4d85ff         test r15, r15
0x0000674c      0f85b7000000   jne 0x6809
0x00006752      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00006759      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x0000675c      7408           je 0x6766
0x0000675e      4889c7         mov rdi, rax
0x00006761      e81aaeffff     call sym.imp.free
0x00006766      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000676d      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006774      4883c020       add rax, 0x20                           ; "@"
0x00006778      4839c7         cmp rdi, rax
0x0000677b      7405           je 0x6782
0x0000677d      e8feadffff     call sym.imp.free
0x00006782      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006789      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006790      4883c010       add rax, 0x10
0x00006794      4839c7         cmp rdi, rax
0x00006797      7405           je 0x679e
0x00006799      e8e2adffff     call sym.imp.free
0x0000679e      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x000067a5      4531ff         xor r15d, r15d
0x000067a8      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x000067ae      e91cf3ffff     jmp 0x5acf
0x000067b3      0f1f440000     nop dword [rax + rax]
0x000067b8      4531ff         xor r15d, r15d
0x000067bb      e90ff3ffff     jmp 0x5acf
0x000067c0      4989cf         mov r15, rcx
0x000067c3      e913f6ffff     jmp 0x5ddb                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x000067c8      0f1f84000000.  nop dword [rax + rax]
0x000067d0      0f887ff2ffff   js 0x5a55
0x000067d6      4d01e4         add r12, r12
0x000067d9      4939c4         cmp r12, rax
0x000067dc      0f8334fcffff   jae 0x6416
0x000067e2      4883f8ff       cmp rax, 0xffffffffffffffff
0x000067e6      0f8469f2ffff   je 0x5a55
0x000067ec      4989c4         mov r12, rax
0x000067ef      e922fcffff     jmp 0x6416
0x000067f4      4989cf         mov r15, rcx
0x000067f7      e983fbffff     jmp 0x637f
0x000067fc      4c89ff         mov rdi, r15
0x000067ff      e87cadffff     call sym.imp.free
0x00006804      e949f8ffff     jmp 0x6052
0x00006809      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000680c      e86fadffff     call sym.imp.free
0x00006811      e93cffffff     jmp 0x6752
0x00006816      e875adffff     call sym.imp.abort
0x0000681b      0f1f440000     nop dword [rax + rax]
0x00006820      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00006827      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000682e      4883c020       add rax, 0x20                           ; "@"
0x00006832      4839c7         cmp rdi, rax
0x00006835      7405           je 0x683c
0x00006837      e844adffff     call sym.imp.free
0x0000683c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006843      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000684a      4883c010       add rax, 0x10
0x0000684e      4839c7         cmp rdi, rax
0x00006851      7405           je 0x6858
0x00006853      e828adffff     call sym.imp.free
0x00006858      e843adffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x0000685d      4531ff         xor r15d, r15d
0x00006860      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x1fb00000
0x00006866      e964f2ffff     jmp 0x5acf
0x0000686b      4c89f3         mov rbx, r14
0x0000686e      31c0           xor eax, eax
0x00006870      4883c301       add rbx, 1
0x00006874      0f8206010000   jb 0x6980
0x0000687a      4939dc         cmp r12, rbx
0x0000687d      734d           jae 0x68cc
0x0000687f      4d85e4         test r12, r12
0x00006882      0f8531010000   jne 0x69b9                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x00006888      4883fb0c       cmp rbx, 0xc
0x0000688c      0f870c010000   ja 0x699e
0x00006892      41bc0c000000   mov r12d, 0xc
0x00006898      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x0000689f      410f94c5       sete r13b
0x000068a3      4d85ff         test r15, r15
0x000068a6      0f84a0000000   je 0x694c
0x000068ac      4584ed         test r13b, r13b
0x000068af      0f8597000000   jne 0x694c
0x000068b5      4c89e6         mov rsi, r12
0x000068b8      4c89ff         mov rdi, r15
0x000068bb      e8d0aeffff     call sym.imp.realloc
0x000068c0      4885c0         test rax, rax
0x000068c3      0f8472fcffff   je 0x653b
0x000068c9      4989c7         mov r15, rax
0x000068cc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000068d3      43c6043700     mov byte [r15 + r14], 0
0x000068d8      7417           je 0x68f1
0x000068da      4939dc         cmp r12, rbx
0x000068dd      7612           jbe 0x68f1
0x000068df      4c89ff         mov rdi, r15
0x000068e2      4889de         mov rsi, rbx
0x000068e5      e8a6aeffff     call sym.imp.realloc
0x000068ea      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x000068ed      4c0f45f8       cmovne r15, rax
0x000068f1      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000068f8      4885c0         test rax, rax
0x000068fb      7408           je 0x6905
0x000068fd      4889c7         mov rdi, rax
0x00006900      e87bacffff     call sym.imp.free
0x00006905      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000690c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00006913      4883c020       add rax, 0x20                           ; "@"
0x00006917      4839c7         cmp rdi, rax
0x0000691a      7405           je 0x6921
0x0000691c      e85facffff     call sym.imp.free
0x00006921      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00006928      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000692f      4883c010       add rax, 0x10
0x00006933      4839c7         cmp rdi, rax
0x00006936      7405           je 0x693d
0x00006938      e843acffff     call sym.imp.free
0x0000693d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x00006944      4c8930         mov qword [rax], r14
0x00006947      e983f1ffff     jmp 0x5acf
0x0000694c      4c89e7         mov rdi, r12
0x0000694f      e8fcadffff     call sym.imp.malloc
0x00006954      4885c0         test rax, rax
0x00006957      4889c1         mov rcx, rax
0x0000695a      0f84f5f0ffff   je 0x5a55
0x00006960      4d85f6         test r14, r14
0x00006963      746b           je 0x69d0
0x00006965      4584ed         test r13b, r13b
0x00006968      7466           je 0x69d0
0x0000696a      4c89fe         mov rsi, r15
0x0000696d      4c89f2         mov rdx, r14
0x00006970      4889c7         mov rdi, rax
0x00006973      e8a8adffff     call sym.imp.memcpy
0x00006978      4989c7         mov r15, rax
0x0000697b      e94cffffff     jmp 0x68cc                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x00006980      4983fcff       cmp r12, 0xffffffffffffffff
0x00006984      b801000000     mov eax, 1
0x00006989      0f843dffffff   je 0x68cc
0x0000698f      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x00006992      0f84bdf0ffff   je 0x5a55
0x00006998      0f88b7f0ffff   js 0x5a55
0x0000699e      4885c0         test rax, rax
0x000069a1      0f85aef0ffff   jne 0x5a55
0x000069a7      4883fbff       cmp rbx, 0xffffffffffffffff
0x000069ab      0f84a4f0ffff   je 0x5a55
0x000069b1      4989dc         mov r12, rbx
0x000069b4      e9dffeffff     jmp 0x6898
0x000069b9      0f8896f0ffff   js 0x5a55
0x000069bf      4d01e4         add r12, r12
0x000069c2      4939dc         cmp r12, rbx
0x000069c5      0f83cdfeffff   jae 0x6898
0x000069cb      ebd1           jmp 0x699e
0x000069cd      0f1f00         nop dword [rax]
0x000069d0      4989cf         mov r15, rcx
0x000069d3      e9f4feffff     jmp 0x68cc
0x000069d8      4983fcff       cmp r12, 0xffffffffffffffff
0x000069dc      0f841ef4ffff   je 0x5e00
0x000069e2      e97af0ffff     jmp 0x5a61
0x000069e7      e864acffff     call sym.imp.__stack_chk_fail
0x000069ec      4983fcff       cmp r12, 0xffffffffffffffff
0x000069f0      ba01000000     mov edx, 1
0x000069f5      0f84e0f3ffff   je 0x5ddb
0x000069fb      4d85e4         test r12, r12
0x000069fe      0f8451f0ffff   je 0x5a55
0x00006a04      0f89c6fbffff   jns 0x65d0
0x00006a0a      e946f0ffff     jmp 0x5a55
0x00006a0f      90             nop
;-- printf_fetchargs:
0x00006a10      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00006a14      488b4608       mov rax, qword [rsi + 8]
0x00006a18      7463           je 0x6a7d
0x00006a1a      4c8d057f2200.  lea r8, [0x00008ca0]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00006a21      4c8d15d82200.  lea r10, obj.wide_null_string.2696      ; 0x8d00 ; U"(NULL)"
0x00006a28      4c8d0d692200.  lea r9, [0x00008c98]                    ; "(NULL)"
0x00006a2f      31c9           xor ecx, ecx
0x00006a31      0f1f80000000.  nop dword [rax]
0x00006a38      833816         cmp dword [rax], 0x16
0x00006a3b      7743           ja 0x6a80
0x00006a3d      8b10           mov edx, dword [rax]
0x00006a3f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x00006a43      4c01c2         add rdx, r8
0x00006a46      ffe2           jmp rdx
0x00006a48      0f1f84000000.  nop dword [rax + rax]
0x00006a50      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x00006a54      4883c20f       add rdx, 0xf
0x00006a58      4883e2f0       and rdx, 0xfffffffffffffff0
0x00006a5c      4c8d5a10       lea r11, [rdx + 0x10]
0x00006a60      4c895f08       mov qword [rdi + 8], r11
0x00006a64      db2a           fld xword [rdx]
0x00006a66      db7810         fstp xword [rax + 0x10]
0x00006a69      0f1f80000000.  nop dword [rax]
0x00006a70      4883c101       add rcx, 1
0x00006a74      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x00006a78      48390e         cmp qword [rsi], rcx
0x00006a7b      77bb           ja 0x6a38
0x00006a7d      31c0           xor eax, eax
0x00006a7f      c3             ret
0x00006a80      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006a85      c3             ret
0x00006a86      448b1f         mov r11d, dword [rdi]
0x00006a89      4183fb2f       cmp r11d, 0x2f
0x00006a8d      0f8737010000   ja 0x6bca
0x00006a93      4489da         mov edx, r11d
0x00006a96      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x00006a9a      4183c308       add r11d, 8
0x00006a9e      44891f         mov dword [rdi], r11d
0x00006aa1      488b12         mov rdx, qword [rdx]
0x00006aa4      48895010       mov qword [rax + 0x10], rdx
0x00006aa8      ebc6           jmp 0x6a70
0x00006aaa      448b1f         mov r11d, dword [rdi]
0x00006aad      4183fb2f       cmp r11d, 0x2f
0x00006ab1      0f8735010000   ja 0x6bec
0x00006ab7      4489da         mov edx, r11d
0x00006aba      48035710       add rdx, qword [rdi + 0x10]
0x00006abe      4183c308       add r11d, 8
0x00006ac2      44891f         mov dword [rdi], r11d
0x00006ac5      8b12           mov edx, dword [rdx]
0x00006ac7      895010         mov dword [rax + 0x10], edx
0x00006aca      eba4           jmp 0x6a70
0x00006acc      448b1f         mov r11d, dword [rdi]
0x00006acf      4183fb2f       cmp r11d, 0x2f
0x00006ad3      0f8702010000   ja 0x6bdb
0x00006ad9      4489da         mov edx, r11d                           ; stddef.h:-47
0x00006adc      48035710       add rdx, qword [rdi + 0x10]
0x00006ae0      4183c308       add r11d, 8
0x00006ae4      44891f         mov dword [rdi], r11d
0x00006ae7      8b12           mov edx, dword [rdx]
0x00006ae9      885010         mov byte [rax + 0x10], dl
0x00006aec      eb82           jmp 0x6a70
0x00006aee      448b1f         mov r11d, dword [rdi]
0x00006af1      4183fb2f       cmp r11d, 0x2f
0x00006af5      0f879f000000   ja 0x6b9a
0x00006afb      4489da         mov edx, r11d
0x00006afe      48035710       add rdx, qword [rdi + 0x10]
0x00006b02      4183c308       add r11d, 8
0x00006b06      44891f         mov dword [rdi], r11d
0x00006b09      8b12           mov edx, dword [rdx]
0x00006b0b      66895010       mov word [rax + 0x10], dx
0x00006b0f      e95cffffff     jmp 0x6a70
0x00006b14      448b1f         mov r11d, dword [rdi]
0x00006b17      4183fb2f       cmp r11d, 0x2f
0x00006b1b      0f878a000000   ja 0x6bab
0x00006b21      4489da         mov edx, r11d
0x00006b24      48035710       add rdx, qword [rdi + 0x10]
0x00006b28      4183c308       add r11d, 8
0x00006b2c      44891f         mov dword [rdi], r11d
0x00006b2f      488b12         mov rdx, qword [rdx]
0x00006b32      4885d2         test rdx, rdx
0x00006b35      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00006b39      48895010       mov qword [rax + 0x10], rdx
0x00006b3d      e92effffff     jmp 0x6a70
0x00006b42      448b5f04       mov r11d, dword [rdi + 4]
0x00006b46      4181fbaf0000.  cmp r11d, 0xaf
0x00006b4d      0f87aa000000   ja 0x6bfd
0x00006b53      4489da         mov edx, r11d
0x00006b56      48035710       add rdx, qword [rdi + 0x10]
0x00006b5a      4183c310       add r11d, 0x10
0x00006b5e      44895f04       mov dword [rdi + 4], r11d
0x00006b62      f20f1002       movsd xmm0, qword [rdx]
0x00006b66      f20f114010     movsd qword [rax + 0x10], xmm0
0x00006b6b      e900ffffff     jmp 0x6a70
0x00006b70      448b1f         mov r11d, dword [rdi]
0x00006b73      4183fb2f       cmp r11d, 0x2f
0x00006b77      7743           ja 0x6bbc
0x00006b79      4489da         mov edx, r11d
0x00006b7c      48035710       add rdx, qword [rdi + 0x10]
0x00006b80      4183c308       add r11d, 8
0x00006b84      44891f         mov dword [rdi], r11d
0x00006b87      488b12         mov rdx, qword [rdx]
0x00006b8a      4885d2         test rdx, rdx
0x00006b8d      490f44d2       cmove rdx, r10
0x00006b91      48895010       mov qword [rax + 0x10], rdx
0x00006b95      e9d6feffff     jmp 0x6a70
0x00006b9a      488b5708       mov rdx, qword [rdi + 8]
0x00006b9e      4c8d5a08       lea r11, [rdx + 8]
0x00006ba2      4c895f08       mov qword [rdi + 8], r11
0x00006ba6      e95effffff     jmp 0x6b09
0x00006bab      488b5708       mov rdx, qword [rdi + 8]
0x00006baf      4c8d5a08       lea r11, [rdx + 8]
0x00006bb3      4c895f08       mov qword [rdi + 8], r11
0x00006bb7      e973ffffff     jmp 0x6b2f
0x00006bbc      488b5708       mov rdx, qword [rdi + 8]
0x00006bc0      4c8d5a08       lea r11, [rdx + 8]
0x00006bc4      4c895f08       mov qword [rdi + 8], r11
0x00006bc8      ebbd           jmp 0x6b87
0x00006bca      488b5708       mov rdx, qword [rdi + 8]
0x00006bce      4c8d5a08       lea r11, [rdx + 8]
0x00006bd2      4c895f08       mov qword [rdi + 8], r11
0x00006bd6      e9c6feffff     jmp 0x6aa1
0x00006bdb      488b5708       mov rdx, qword [rdi + 8]
0x00006bdf      4c8d5a08       lea r11, [rdx + 8]
0x00006be3      4c895f08       mov qword [rdi + 8], r11
0x00006be7      e9fbfeffff     jmp 0x6ae7
0x00006bec      488b5708       mov rdx, qword [rdi + 8]
0x00006bf0      4c8d5a08       lea r11, [rdx + 8]
0x00006bf4      4c895f08       mov qword [rdi + 8], r11
0x00006bf8      e9c8feffff     jmp 0x6ac5
0x00006bfd      488b5708       mov rdx, qword [rdi + 8]
0x00006c01      4c8d5a08       lea r11, [rdx + 8]
0x00006c05      4c895f08       mov qword [rdi + 8], r11
0x00006c09      e954ffffff     jmp 0x6b62
0x00006c0e      6690           nop
;-- printf_parse:
0x00006c10      4157           push r15
0x00006c12      4156           push r14
0x00006c14      488d4e20       lea rcx, [rsi + 0x20]
0x00006c18      4155           push r13
0x00006c1a      4154           push r12
0x00006c1c      488d4210       lea rax, [rdx + 0x10]
0x00006c20      55             push rbp
0x00006c21      53             push rbx
0x00006c22      4989f6         mov r14, rsi
0x00006c25      4989d7         mov r15, rdx
0x00006c28      31db           xor ebx, ebx
0x00006c2a      41b907000000   mov r9d, 7
0x00006c30      4883ec58       sub rsp, 0x58
0x00006c34      41ba07000000   mov r10d, 7
0x00006c3a      48c706000000.  mov qword [rsi], 0
0x00006c41      48894e08       mov qword [rsi + 8], rcx
0x00006c45      48894c2428     mov qword [rsp + 0x28], rcx
0x00006c4a      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00006c51      48c702000000.  mov qword [rdx], 0
0x00006c58      4889442408     mov qword [rsp + 8], rax
0x00006c5d      48894208       mov qword [rdx + 8], rax
0x00006c61      48c744241800.  mov qword [rsp + 0x18], 0
0x00006c6a      48c744241000.  mov qword [rsp + 0x10], 0
0x00006c73      48c744242000.  mov qword [rsp + 0x20], 0
0x00006c7c      eb0d           jmp 0x6c8b
0x00006c7e      6690           nop
0x00006c80      3c25           cmp al, 0x25
0x00006c82      488d6f01       lea rbp, [rdi + 1]
0x00006c86      7440           je 0x6cc8
0x00006c88      4889ef         mov rdi, rbp
0x00006c8b      0fb607         movzx eax, byte [rdi]
0x00006c8e      84c0           test al, al
0x00006c90      75ee           jne 0x6c80
0x00006c92      488d049b       lea rax, [rbx + rbx*4]
0x00006c96      488d0443       lea rax, [rbx + rax*2]
0x00006c9a      48893cc1       mov qword [rcx + rax*8], rdi
0x00006c9e      488b442410     mov rax, qword [rsp + 0x10]
0x00006ca3      49894610       mov qword [r14 + 0x10], rax
0x00006ca7      488b442418     mov rax, qword [rsp + 0x18]
0x00006cac      49894618       mov qword [r14 + 0x18], rax
0x00006cb0      31c0           xor eax, eax
0x00006cb2      4883c458       add rsp, 0x58
0x00006cb6      5b             pop rbx
0x00006cb7      5d             pop rbp
0x00006cb8      415c           pop r12
0x00006cba      415d           pop r13
0x00006cbc      415e           pop r14
0x00006cbe      415f           pop r15
0x00006cc0      c3             ret
0x00006cc1      0f1f80000000.  nop dword [rax]
0x00006cc8      488d049b       lea rax, [rbx + rbx*4]
0x00006ccc      4d89c5         mov r13, r8
0x00006ccf      488d0443       lea rax, [rbx + rax*2]
0x00006cd3      4c8d24c1       lea r12, [rcx + rax*8]
0x00006cd7      49893c24       mov qword [r12], rdi
0x00006cdb      41c744241000.  mov dword [r12 + 0x10], 0
0x00006ce4      49c744241800.  mov qword [r12 + 0x18], 0
0x00006ced      49c744242000.  mov qword [r12 + 0x20], 0
0x00006cf6      4d89442428     mov qword [r12 + 0x28], r8
0x00006cfb      49c744243000.  mov qword [r12 + 0x30], 0
0x00006d04      49c744243800.  mov qword [r12 + 0x38], 0
0x00006d0d      4d89442440     mov qword [r12 + 0x40], r8
0x00006d12      4d89442450     mov qword [r12 + 0x50], r8
0x00006d17      0fb65f01       movzx ebx, byte [rdi + 1]
0x00006d1b      8d43d0         lea eax, [rbx - 0x30]
0x00006d1e      3c09           cmp al, 9
0x00006d20      773c           ja 0x6d5e
0x00006d22      e933040000     jmp 0x715a
0x00006d27      660f1f840000.  nop word [rax + rax]
0x00006d30      80fb2d         cmp bl, 0x2d
0x00006d33      7443           je 0x6d78
0x00006d35      80fb2b         cmp bl, 0x2b
0x00006d38      7446           je 0x6d80
0x00006d3a      80fb20         cmp bl, 0x20                            ; "@"
0x00006d3d      7451           je 0x6d90
0x00006d3f      80fb23         cmp bl, 0x23
0x00006d42      745c           je 0x6da0
0x00006d44      80fb30         cmp bl, 0x30
0x00006d47      7467           je 0x6db0
0x00006d49      80fb49         cmp bl, 0x49
0x00006d4c      7572           jne 0x6dc0
0x00006d4e      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x00006d54      0f1f4000       nop dword [rax]
0x00006d58      0fb618         movzx ebx, byte [rax]
0x00006d5b      4889c5         mov rbp, rax
0x00006d5e      488d4501       lea rax, [rbp + 1]
0x00006d62      80fb27         cmp bl, 0x27
0x00006d65      4889c2         mov rdx, rax
0x00006d68      75c6           jne 0x6d30
0x00006d6a      41834c241001   or dword [r12 + 0x10], 1
0x00006d70      ebe6           jmp 0x6d58
0x00006d72      660f1f440000   nop word [rax + rax]
0x00006d78      41834c241002   or dword [r12 + 0x10], 2
0x00006d7e      ebd8           jmp 0x6d58
0x00006d80      41834c241004   or dword [r12 + 0x10], 4
0x00006d86      ebd0           jmp 0x6d58
0x00006d88      0f1f84000000.  nop dword [rax + rax]
0x00006d90      41834c241008   or dword [r12 + 0x10], 8
0x00006d96      ebc0           jmp 0x6d58
0x00006d98      0f1f84000000.  nop dword [rax + rax]
0x00006da0      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x00006da6      ebb0           jmp 0x6d58
0x00006da8      0f1f84000000.  nop dword [rax + rax]
0x00006db0      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x00006db6      eba0           jmp 0x6d58
0x00006db8      0f1f84000000.  nop dword [rax + rax]
0x00006dc0      80fb2a         cmp bl, 0x2a
0x00006dc3      0f84b0010000   je 0x6f79
0x00006dc9      8d4bd0         lea ecx, [rbx - 0x30]
0x00006dcc      80f909         cmp cl, 9
0x00006dcf      0f8612040000   jbe 0x71e7
0x00006dd5      80fb2e         cmp bl, 0x2e
0x00006dd8      0f84d1020000   je 0x70af
0x00006dde      31c0           xor eax, eax
0x00006de0      be01000000     mov esi, 1
0x00006de5      eb30           jmp 0x6e17
0x00006de7      660f1f840000.  nop word [rax + rax]
0x00006df0      80fb4c         cmp bl, 0x4c
0x00006df3      743b           je 0x6e30
0x00006df5      80fb6c         cmp bl, 0x6c
0x00006df8      7416           je 0x6e10
0x00006dfa      80fb6a         cmp bl, 0x6a
0x00006dfd      7411           je 0x6e10
0x00006dff      89da           mov edx, ebx
0x00006e01      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006e04      80fa5a         cmp dl, 0x5a
0x00006e07      7407           je 0x6e10
0x00006e09      80fb74         cmp bl, 0x74
0x00006e0c      752a           jne 0x6e38
0x00006e0e      6690           nop
0x00006e10      83c008         add eax, 8
0x00006e13      0fb65d00       movzx ebx, byte [rbp]
0x00006e17      4883c501       add rbp, 1
0x00006e1b      80fb68         cmp bl, 0x68
0x00006e1e      75d0           jne 0x6df0
0x00006e20      89c1           mov ecx, eax
0x00006e22      89f2           mov edx, esi
0x00006e24      83e101         and ecx, 1
0x00006e27      d3e2           shl edx, cl
0x00006e29      09d0           or eax, edx
0x00006e2b      ebe6           jmp 0x6e13
0x00006e2d      0f1f00         nop dword [rax]
0x00006e30      83c804         or eax, 4
0x00006e33      ebde           jmp 0x6e13
0x00006e35      0f1f00         nop dword [rax]
0x00006e38      8d53db         lea edx, [rbx - 0x25]
0x00006e3b      80fa53         cmp dl, 0x53
0x00006e3e      0f8717060000   ja 0x745b
0x00006e44      488d0dd11e00.  lea rcx, [0x00008d1c]
0x00006e4b      0fb6d2         movzx edx, dl
0x00006e4e      48631491       movsxd rdx, dword [rcx + rdx*4]
0x00006e52      4801ca         add rdx, rcx
0x00006e55      ffe2           jmp rdx
0x00006e57      41bb10000000   mov r11d, 0x10
0x00006e5d      bb73000000     mov ebx, 0x73                           ; 's'
0x00006e62      660f1f440000   nop word [rax + rax]
0x00006e68      4983fdff       cmp r13, 0xffffffffffffffff
0x00006e6c      0f84b5060000   je 0x7527
0x00006e72      4d896c2450     mov qword [r12 + 0x50], r13
0x00006e77      4d39e9         cmp r9, r13
0x00006e7a      498b4f08       mov rcx, qword [r15 + 8]
0x00006e7e      0f861c060000   jbe 0x74a0
0x00006e84      498b07         mov rax, qword [r15]
0x00006e87      4889c2         mov rdx, rax
0x00006e8a      48c1e205       shl rdx, 5
0x00006e8e      4801ca         add rdx, rcx
0x00006e91      4c39e8         cmp rax, r13
0x00006e94      7720           ja 0x6eb6
0x00006e96      662e0f1f8400.  nop word cs:[rax + rax]
0x00006ea0      4883c001       add rax, 1
0x00006ea4      c70200000000   mov dword [rdx], 0
0x00006eaa      4883c220       add rdx, 0x20                           ; "@"
0x00006eae      4c39e8         cmp rax, r13
0x00006eb1      76ed           jbe 0x6ea0
0x00006eb3      498907         mov qword [r15], rax
0x00006eb6      49c1e505       shl r13, 5
0x00006eba      4a8d0429       lea rax, [rcx + r13]
0x00006ebe      8b10           mov edx, dword [rax]
0x00006ec0      85d2           test edx, edx
0x00006ec2      0f85cb050000   jne 0x7493
0x00006ec8      448918         mov dword [rax], r11d
0x00006ecb      41885c2448     mov byte [r12 + 0x48], bl
0x00006ed0      498b06         mov rax, qword [r14]
0x00006ed3      49896c2408     mov qword [r12 + 8], rbp
0x00006ed8      488d5801       lea rbx, [rax + 1]
0x00006edc      4939da         cmp r10, rbx
0x00006edf      49891e         mov qword [r14], rbx
0x00006ee2      0f8788000000   ja 0x6f70
0x00006ee8      4d85d2         test r10, r10
0x00006eeb      0f88a6090000   js 0x7897
0x00006ef1      4d01d2         add r10, r10
0x00006ef4      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x00006efe      4939c2         cmp r10, rax
0x00006f01      0f8790090000   ja 0x7897
0x00006f07      4b8d0492       lea rax, [r10 + r10*4]
0x00006f0b      498b7e08       mov rdi, qword [r14 + 8]
0x00006f0f      48397c2428     cmp qword [rsp + 0x28], rdi
0x00006f14      4c894c2440     mov qword [rsp + 0x40], r9
0x00006f19      4c89542438     mov qword [rsp + 0x38], r10
0x00006f1e      498d0442       lea rax, [r10 + rax*2]
0x00006f22      4c89442430     mov qword [rsp + 0x30], r8
0x00006f27      488d34c50000.  lea rsi, [rax*8]
0x00006f2f      0f84b8060000   je 0x75ed
0x00006f35      e856a8ffff     call sym.imp.realloc
0x00006f3a      4885c0         test rax, rax
0x00006f3d      4889c1         mov rcx, rax
0x00006f40      4c8b442430     mov r8, qword [rsp + 0x30]
0x00006f45      4c8b542438     mov r10, qword [rsp + 0x38]
0x00006f4a      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00006f4f      0f8442090000   je 0x7897
0x00006f55      488b442428     mov rax, qword [rsp + 0x28]
0x00006f5a      493b4608       cmp rax, qword [r14 + 8]
0x00006f5e      498b1e         mov rbx, qword [r14]
0x00006f61      0f84a9060000   je 0x7610
0x00006f67      49894e08       mov qword [r14 + 8], rcx
0x00006f6b      e918fdffff     jmp 0x6c88
0x00006f70      498b4e08       mov rcx, qword [r14 + 8]
0x00006f74      e90ffdffff     jmp 0x6c88
0x00006f79      488b742410     mov rsi, qword [rsp + 0x10]
0x00006f7e      b901000000     mov ecx, 1
0x00006f83      49896c2418     mov qword [r12 + 0x18], rbp
0x00006f88      4989442420     mov qword [r12 + 0x20], rax
0x00006f8d      4885f6         test rsi, rsi
0x00006f90      480f45ce       cmovne rcx, rsi
0x00006f94      48894c2410     mov qword [rsp + 0x10], rcx
0x00006f99      0fb64d01       movzx ecx, byte [rbp + 1]
0x00006f9d      8d71d0         lea esi, [rcx - 0x30]
0x00006fa0      4080fe09       cmp sil, 9
0x00006fa4      0f86db020000   jbe 0x7285
0x00006faa      488b742420     mov rsi, qword [rsp + 0x20]
0x00006faf      4883feff       cmp rsi, 0xffffffffffffffff
0x00006fb3      488d5601       lea rdx, [rsi + 1]
0x00006fb7      4989742428     mov qword [r12 + 0x28], rsi
0x00006fbc      0f8499040000   je 0x745b
0x00006fc2      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00006fc7      4889c5         mov rbp, rax
0x00006fca      4889542420     mov qword [rsp + 0x20], rdx
0x00006fcf      4939d9         cmp r9, rbx
0x00006fd2      498b4f08       mov rcx, qword [r15 + 8]
0x00006fd6      0f8776060000   ja 0x7652
0x00006fdc      4d01c9         add r9, r9
0x00006fdf      488d4301       lea rax, [rbx + 1]
0x00006fe3      4939d9         cmp r9, rbx
0x00006fe6      4c0f46c8       cmovbe r9, rax
0x00006fea      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00006ff4      4939c1         cmp r9, rax
0x00006ff7      0f879e080000   ja 0x789b
0x00006ffd      4c89ce         mov rsi, r9
0x00007000      4c894c2440     mov qword [rsp + 0x40], r9
0x00007005      4c89542438     mov qword [rsp + 0x38], r10
0x0000700a      48c1e605       shl rsi, 5
0x0000700e      48394c2408     cmp qword [rsp + 8], rcx
0x00007013      4c89442430     mov qword [rsp + 0x30], r8
0x00007018      0f8413070000   je 0x7731
0x0000701e      4889cf         mov rdi, rcx
0x00007021      e86aa7ffff     call sym.imp.realloc
0x00007026      498b5708       mov rdx, qword [r15 + 8]
0x0000702a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000702f      4889c1         mov rcx, rax
0x00007032      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007037      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000703c      4885c9         test rcx, rcx
0x0000703f      0f84b2080000   je 0x78f7
0x00007045      4839542408     cmp qword [rsp + 8], rdx
0x0000704a      498b07         mov rax, qword [r15]
0x0000704d      0f84b8070000   je 0x780b
0x00007053      49894f08       mov qword [r15 + 8], rcx
0x00007057      4889c2         mov rdx, rax
0x0000705a      48c1e205       shl rdx, 5
0x0000705e      4801ca         add rdx, rcx
0x00007061      4839d8         cmp rax, rbx
0x00007064      7720           ja 0x7086
0x00007066      662e0f1f8400.  nop word cs:[rax + rax]
0x00007070      4883c001       add rax, 1
0x00007074      c70200000000   mov dword [rdx], 0
0x0000707a      4883c220       add rdx, 0x20                           ; "@"
0x0000707e      4839d8         cmp rax, rbx
0x00007081      76ed           jbe 0x7070
0x00007083      498907         mov qword [r15], rax
0x00007086      48c1e305       shl rbx, 5
0x0000708a      488d0419       lea rax, [rcx + rbx]
0x0000708e      8b10           mov edx, dword [rax]
0x00007090      85d2           test edx, edx
0x00007092      0f85d3040000   jne 0x756b
0x00007098      c70005000000   mov dword [rax], 5
0x0000709e      0fb65d00       movzx ebx, byte [rbp]
0x000070a2      488d5501       lea rdx, [rbp + 1]
0x000070a6      80fb2e         cmp bl, 0x2e
0x000070a9      0f852ffdffff   jne 0x6dde
0x000070af      807d012a       cmp byte [rbp + 1], 0x2a
0x000070b3      49896c2430     mov qword [r12 + 0x30], rbp
0x000070b8      0f8580010000   jne 0x723e
0x000070be      488b742418     mov rsi, qword [rsp + 0x18]
0x000070c3      4c8d5d02       lea r11, [rbp + 2]
0x000070c7      b802000000     mov eax, 2
0x000070cc      4d895c2438     mov qword [r12 + 0x38], r11
0x000070d1      4883fe02       cmp rsi, 2
0x000070d5      480f43c6       cmovae rax, rsi
0x000070d9      4889442418     mov qword [rsp + 0x18], rax
0x000070de      0fbe4502       movsx eax, byte [rbp + 2]
0x000070e2      8d50d0         lea edx, [rax - 0x30]
0x000070e5      80fa09         cmp dl, 9
0x000070e8      0f868e060000   jbe 0x777c
0x000070ee      498b5c2440     mov rbx, qword [r12 + 0x40]
0x000070f3      4883fbff       cmp rbx, 0xffffffffffffffff
0x000070f7      0f8458060000   je 0x7755
0x000070fd      4939d9         cmp r9, rbx
0x00007100      498b4f08       mov rcx, qword [r15 + 8]
0x00007104      0f8665050000   jbe 0x766f
0x0000710a      498b07         mov rax, qword [r15]
0x0000710d      4889c2         mov rdx, rax
0x00007110      48c1e205       shl rdx, 5
0x00007114      4801ca         add rdx, rcx
0x00007117      4839d8         cmp rax, rbx
0x0000711a      771a           ja 0x7136
0x0000711c      0f1f4000       nop dword [rax]
0x00007120      4883c001       add rax, 1
0x00007124      c70200000000   mov dword [rdx], 0
0x0000712a      4883c220       add rdx, 0x20                           ; "@"
0x0000712e      4839d8         cmp rax, rbx
0x00007131      76ed           jbe 0x7120
0x00007133      498907         mov qword [r15], rax
0x00007136      48c1e305       shl rbx, 5
0x0000713a      488d0419       lea rax, [rcx + rbx]
0x0000713e      8b10           mov edx, dword [rax]
0x00007140      85d2           test edx, edx
0x00007142      0f8512050000   jne 0x765a
0x00007148      c70005000000   mov dword [rax], 5
0x0000714e      4c89dd         mov rbp, r11
0x00007151      410fb61b       movzx ebx, byte [r11]
0x00007155      e984fcffff     jmp 0x6dde
0x0000715a      4889e8         mov rax, rbp
0x0000715d      0f1f00         nop dword [rax]
0x00007160      4883c001       add rax, 1
0x00007164      0fb610         movzx edx, byte [rax]
0x00007167      8d4ad0         lea ecx, [rdx - 0x30]
0x0000716a      80f909         cmp cl, 9
0x0000716d      76f1           jbe 0x7160
0x0000716f      80fa24         cmp dl, 0x24
0x00007172      4d89c5         mov r13, r8
0x00007175      0f85e3fbffff   jne 0x6d5e
0x0000717b      31d2           xor edx, edx
0x0000717d      0fbec3         movsx eax, bl
0x00007180      48bf99999999.  movabs rdi, 0x1999999999999999
0x0000718a      4c89c6         mov rsi, r8
0x0000718d      83e830         sub eax, 0x30
0x00007190      4839fa         cmp rdx, rdi
0x00007193      4898           cdqe
0x00007195      7707           ja 0x719e
0x00007197      488d3492       lea rsi, [rdx + rdx*4]
0x0000719b      4801f6         add rsi, rsi
0x0000719e      4889e9         mov rcx, rbp
0x000071a1      4801f0         add rax, rsi
0x000071a4      0fb65d01       movzx ebx, byte [rbp + 1]
0x000071a8      400f92c6       setb sil
0x000071ac      4883c501       add rbp, 1
0x000071b0      4889c2         mov rdx, rax
0x000071b3      400fb6f6       movzx esi, sil
0x000071b7      4885f6         test rsi, rsi
0x000071ba      8d7bd0         lea edi, [rbx - 0x30]
0x000071bd      0f858b030000   jne 0x754e
0x000071c3      4080ff09       cmp dil, 9
0x000071c7      76b4           jbe 0x717d
0x000071c9      4989c5         mov r13, rax
0x000071cc      4983ed01       sub r13, 1
0x000071d0      4983fdfd       cmp r13, 0xfffffffffffffffd
0x000071d4      0f8781020000   ja 0x745b
0x000071da      488d6902       lea rbp, [rcx + 2]
0x000071de      0fb65902       movzx ebx, byte [rcx + 2]
0x000071e2      e977fbffff     jmp 0x6d5e
0x000071e7      49896c2418     mov qword [r12 + 0x18], rbp
0x000071ec      0fb67d00       movzx edi, byte [rbp]
0x000071f0      4889ee         mov rsi, rbp
0x000071f3      8d4fd0         lea ecx, [rdi - 0x30]
0x000071f6      80f909         cmp cl, 9
0x000071f9      760c           jbe 0x7207
0x000071fb      eb33           jmp 0x7230
0x000071fd      0f1f00         nop dword [rax]
0x00007200      4889c5         mov rbp, rax
0x00007203      4883c001       add rax, 1
0x00007207      0fb638         movzx edi, byte [rax]
0x0000720a      8d57d0         lea edx, [rdi - 0x30]
0x0000720d      80fa09         cmp dl, 9
0x00007210      76ee           jbe 0x7200
0x00007212      4889c1         mov rcx, rax
0x00007215      488d5502       lea rdx, [rbp + 2]
0x00007219      4889c5         mov rbp, rax
0x0000721c      4829f1         sub rcx, rsi
0x0000721f      488b742410     mov rsi, qword [rsp + 0x10]
0x00007224      4839ce         cmp rsi, rcx
0x00007227      480f43ce       cmovae rcx, rsi
0x0000722b      48894c2410     mov qword [rsp + 0x10], rcx
0x00007230      49896c2420     mov qword [r12 + 0x20], rbp
0x00007235      0fb65d00       movzx ebx, byte [rbp]
0x00007239      e997fbffff     jmp 0x6dd5
0x0000723e      0fb64501       movzx eax, byte [rbp + 1]
0x00007242      83e830         sub eax, 0x30
0x00007245      3c09           cmp al, 9
0x00007247      7715           ja 0x725e
0x00007249      0f1f80000000.  nop dword [rax]
0x00007250      4883c201       add rdx, 1
0x00007254      0fb602         movzx eax, byte [rdx]
0x00007257      83e830         sub eax, 0x30
0x0000725a      3c09           cmp al, 9
0x0000725c      76f2           jbe 0x7250
0x0000725e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007263      4889d0         mov rax, rdx
0x00007266      4989542438     mov qword [r12 + 0x38], rdx
0x0000726b      4829e8         sub rax, rbp
0x0000726e      0fb61a         movzx ebx, byte [rdx]
0x00007271      4889d5         mov rbp, rdx
0x00007274      4839c6         cmp rsi, rax
0x00007277      480f43c6       cmovae rax, rsi
0x0000727b      4889442418     mov qword [rsp + 0x18], rax
0x00007280      e959fbffff     jmp 0x6dde
0x00007285      4889c6         mov rsi, rax
0x00007288      4883c601       add rsi, 1
0x0000728c      0fb63e         movzx edi, byte [rsi]
0x0000728f      448d5fd0       lea r11d, [rdi - 0x30]
0x00007293      4180fb09       cmp r11b, 9
0x00007297      76ef           jbe 0x7288
0x00007299      4080ff24       cmp dil, 0x24
0x0000729d      0f8507fdffff   jne 0x6faa
0x000072a3      31f6           xor esi, esi
0x000072a5      0fbec1         movsx eax, cl
0x000072a8      48bf99999999.  movabs rdi, 0x1999999999999999
0x000072b2      4c89c1         mov rcx, r8
0x000072b5      83e830         sub eax, 0x30
0x000072b8      4839fe         cmp rsi, rdi
0x000072bb      4898           cdqe
0x000072bd      7707           ja 0x72c6
0x000072bf      488d0cb6       lea rcx, [rsi + rsi*4]
0x000072c3      4801c9         add rcx, rcx
0x000072c6      4889d5         mov rbp, rdx
0x000072c9      4531db         xor r11d, r11d
0x000072cc      4801c8         add rax, rcx
0x000072cf      0fb64a01       movzx ecx, byte [rdx + 1]
0x000072d3      410f92c3       setb r11b
0x000072d7      4883c201       add rdx, 1
0x000072db      4889c6         mov rsi, rax
0x000072de      4d85db         test r11, r11
0x000072e1      8d79d0         lea edi, [rcx - 0x30]
0x000072e4      0f8504050000   jne 0x77ee
0x000072ea      4080ff09       cmp dil, 9
0x000072ee      76b5           jbe 0x72a5
0x000072f0      488d58ff       lea rbx, [rax - 1]
0x000072f4      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x000072f8      0f875d010000   ja 0x745b
0x000072fe      49895c2428     mov qword [r12 + 0x28], rbx
0x00007303      4883c502       add rbp, 2
0x00007307      e9c3fcffff     jmp 0x6fcf
0x0000730c      83f80f         cmp eax, 0xf
0x0000730f      41bb16000000   mov r11d, 0x16
0x00007315      0f8f4dfbffff   jg 0x6e68
0x0000731b      a804           test al, 4
0x0000731d      0f8545fbffff   jne 0x6e68
0x00007323      83f807         cmp eax, 7
0x00007326      41bb15000000   mov r11d, 0x15
0x0000732c      0f8f36fbffff   jg 0x6e68
0x00007332      a802           test al, 2
0x00007334      41bb12000000   mov r11d, 0x12
0x0000733a      0f8528fbffff   jne 0x6e68
0x00007340      4531db         xor r11d, r11d
0x00007343      a801           test al, 1
0x00007345      410f94c3       sete r11b
0x00007349      4183c313       add r11d, 0x13
0x0000734d      e916fbffff     jmp 0x6e68
0x00007352      660f1f440000   nop word [rax + rax]
0x00007358      4531db         xor r11d, r11d
0x0000735b      83f807         cmp eax, 7
0x0000735e      410f9fc3       setg r11b
0x00007362      4183c30d       add r11d, 0xd
0x00007366      e9fdfaffff     jmp 0x6e68
0x0000736b      83f80f         cmp eax, 0xf
0x0000736e      41bb09000000   mov r11d, 9
0x00007374      0f8feefaffff   jg 0x6e68
0x0000737a      a804           test al, 4
0x0000737c      0f85e6faffff   jne 0x6e68
0x00007382      83f807         cmp eax, 7
0x00007385      41bb07000000   mov r11d, 7
0x0000738b      0f8fd7faffff   jg 0x6e68
0x00007391      a802           test al, 2
0x00007393      41bb01000000   mov r11d, 1
0x00007399      0f85c9faffff   jne 0x6e68
0x0000739f      83e001         and eax, 1
0x000073a2      83f801         cmp eax, 1
0x000073a5      4519db         sbb r11d, r11d
0x000073a8      4183e302       and r11d, 2
0x000073ac      4183c303       add r11d, 3
0x000073b0      e9b3faffff     jmp 0x6e68
0x000073b5      0f1f00         nop dword [rax]
0x000073b8      4531db         xor r11d, r11d
0x000073bb      83f807         cmp eax, 7
0x000073be      410f9fc3       setg r11b
0x000073c2      4183c30f       add r11d, 0xf
0x000073c6      e99dfaffff     jmp 0x6e68
0x000073cb      83f80f         cmp eax, 0xf
0x000073ce      41bb0c000000   mov r11d, 0xc
0x000073d4      0f8f8efaffff   jg 0x6e68
0x000073da      4531db         xor r11d, r11d
0x000073dd      a804           test al, 4
0x000073df      410f95c3       setne r11b
0x000073e3      4183c30b       add r11d, 0xb
0x000073e7      e97cfaffff     jmp 0x6e68
0x000073ec      41bb0e000000   mov r11d, 0xe
0x000073f2      bb63000000     mov ebx, 0x63                           ; 'c'
0x000073f7      e96cfaffff     jmp 0x6e68
0x000073fc      83f80f         cmp eax, 0xf
0x000073ff      41bb0a000000   mov r11d, 0xa
0x00007405      0f8f5dfaffff   jg 0x6e68
0x0000740b      a804           test al, 4
0x0000740d      0f8555faffff   jne 0x6e68
0x00007413      83f807         cmp eax, 7
0x00007416      41bb08000000   mov r11d, 8
0x0000741c      0f8f46faffff   jg 0x6e68
0x00007422      a802           test al, 2
0x00007424      41bb02000000   mov r11d, 2
0x0000742a      0f8538faffff   jne 0x6e68
0x00007430      83e001         and eax, 1
0x00007433      83f801         cmp eax, 1
0x00007436      4519db         sbb r11d, r11d
0x00007439      4183e302       and r11d, 2
0x0000743d      4183c304       add r11d, 4
0x00007441      e922faffff     jmp 0x6e68
0x00007446      662e0f1f8400.  nop word cs:[rax + rax]
0x00007450      41bb11000000   mov r11d, 0x11
0x00007456      e90dfaffff     jmp 0x6e68
0x0000745b      498b4f08       mov rcx, qword [r15 + 8]
0x0000745f      48394c2408     cmp qword [rsp + 8], rcx
0x00007464      7408           je 0x746e
0x00007466      4889cf         mov rdi, rcx
0x00007469      e812a1ffff     call sym.imp.free
0x0000746e      498b7e08       mov rdi, qword [r14 + 8]
0x00007472      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007477      7405           je 0x747e
0x00007479      e802a1ffff     call sym.imp.free
0x0000747e      e81da1ffff     call sym.imp.__errno_location
0x00007483      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x1fb00000
0x00007489      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000748e      e91ff8ffff     jmp 0x6cb2
0x00007493      4439da         cmp edx, r11d
0x00007496      0f842ffaffff   je 0x6ecb
0x0000749c      ebc1           jmp 0x745f
0x0000749e      6690           nop
0x000074a0      4d01c9         add r9, r9
0x000074a3      498d4501       lea rax, [r13 + 1]
0x000074a7      4d39e9         cmp r9, r13
0x000074aa      4c0f46c8       cmovbe r9, rax
0x000074ae      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x000074b8      4939c1         cmp r9, rax
0x000074bb      0f87da030000   ja 0x789b
0x000074c1      4c89ce         mov rsi, r9
0x000074c4      4c894c2448     mov qword [rsp + 0x48], r9
0x000074c9      4c89542440     mov qword [rsp + 0x40], r10
0x000074ce      48c1e605       shl rsi, 5
0x000074d2      48394c2408     cmp qword [rsp + 8], rcx
0x000074d7      4c89442438     mov qword [rsp + 0x38], r8
0x000074dc      44895c2430     mov dword [rsp + 0x30], r11d
0x000074e1      0f849a000000   je 0x7581
0x000074e7      4889cf         mov rdi, rcx
0x000074ea      e8a1a2ffff     call sym.imp.realloc
0x000074ef      4885c0         test rax, rax
0x000074f2      4889c1         mov rcx, rax
0x000074f5      448b5c2430     mov r11d, dword [rsp + 0x30]
0x000074fa      4c8b442438     mov r8, qword [rsp + 0x38]
0x000074ff      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007504      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007509      0f8488030000   je 0x7897
0x0000750f      488b442408     mov rax, qword [rsp + 8]
0x00007514      493b4708       cmp rax, qword [r15 + 8]
0x00007518      0f848b000000   je 0x75a9
0x0000751e      49894f08       mov qword [r15 + 8], rcx
0x00007522      e95df9ffff     jmp 0x6e84
0x00007527      488b742420     mov rsi, qword [rsp + 0x20]
0x0000752c      4883feff       cmp rsi, 0xffffffffffffffff
0x00007530      488d4601       lea rax, [rsi + 1]
0x00007534      4989742450     mov qword [r12 + 0x50], rsi
0x00007539      0f841cffffff   je 0x745b
0x0000753f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00007544      4889442420     mov qword [rsp + 0x20], rax
0x00007549      e929f9ffff     jmp 0x6e77
0x0000754e      4080ff09       cmp dil, 9
0x00007552      0f8703ffffff   ja 0x745b
0x00007558      0fbec3         movsx eax, bl
0x0000755b      4c89c6         mov rsi, r8
0x0000755e      4889e9         mov rcx, rbp
0x00007561      83e830         sub eax, 0x30
0x00007564      4898           cdqe
0x00007566      e936fcffff     jmp 0x71a1
0x0000756b      83fa05         cmp edx, 5
0x0000756e      0f85ebfeffff   jne 0x745f
0x00007574      0fb65d00       movzx ebx, byte [rbp]
0x00007578      488d5501       lea rdx, [rbp + 1]
0x0000757c      e954f8ffff     jmp 0x6dd5
0x00007581      4889f7         mov rdi, rsi
0x00007584      e8c7a1ffff     call sym.imp.malloc
0x00007589      4885c0         test rax, rax
0x0000758c      4889c1         mov rcx, rax
0x0000758f      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007594      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007599      4c8b542440     mov r10, qword [rsp + 0x40]
0x0000759e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000075a3      0f8463010000   je 0x770c
0x000075a9      498b17         mov rdx, qword [r15]
0x000075ac      488b742408     mov rsi, qword [rsp + 8]
0x000075b1      4889cf         mov rdi, rcx
0x000075b4      4c894c2448     mov qword [rsp + 0x48], r9
0x000075b9      4c89542440     mov qword [rsp + 0x40], r10
0x000075be      4c89442438     mov qword [rsp + 0x38], r8
0x000075c3      44895c2430     mov dword [rsp + 0x30], r11d
0x000075c8      48c1e205       shl rdx, 5
0x000075cc      e84fa1ffff     call sym.imp.memcpy
0x000075d1      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000075d6      4c8b542440     mov r10, qword [rsp + 0x40]
0x000075db      4889c1         mov rcx, rax
0x000075de      4c8b442438     mov r8, qword [rsp + 0x38]
0x000075e3      448b5c2430     mov r11d, dword [rsp + 0x30]
0x000075e8      e931ffffff     jmp 0x751e
0x000075ed      4889f7         mov rdi, rsi
0x000075f0      e85ba1ffff     call sym.imp.malloc
0x000075f5      4885c0         test rax, rax
0x000075f8      4889c1         mov rcx, rax
0x000075fb      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007600      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007605      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000760a      0f84e9000000   je 0x76f9
0x00007610      488d049b       lea rax, [rbx + rbx*4]
0x00007614      488b742428     mov rsi, qword [rsp + 0x28]
0x00007619      4889cf         mov rdi, rcx
0x0000761c      4c894c2440     mov qword [rsp + 0x40], r9
0x00007621      4c89542438     mov qword [rsp + 0x38], r10
0x00007626      488d1443       lea rdx, [rbx + rax*2]
0x0000762a      4c89442430     mov qword [rsp + 0x30], r8
0x0000762f      48c1e203       shl rdx, 3
0x00007633      e8e8a0ffff     call sym.imp.memcpy
0x00007638      498b1e         mov rbx, qword [r14]
0x0000763b      4889c1         mov rcx, rax
0x0000763e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007643      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007648      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000764d      e915f9ffff     jmp 0x6f67
0x00007652      498b07         mov rax, qword [r15]
0x00007655      e9fdf9ffff     jmp 0x7057
0x0000765a      83fa05         cmp edx, 5
0x0000765d      0f85fcfdffff   jne 0x745f
0x00007663      410fb61b       movzx ebx, byte [r11]
0x00007667      4c89dd         mov rbp, r11
0x0000766a      e96ff7ffff     jmp 0x6dde
0x0000766f      4d01c9         add r9, r9
0x00007672      488d4301       lea rax, [rbx + 1]
0x00007676      4939d9         cmp r9, rbx
0x00007679      4c0f46c8       cmovbe r9, rax
0x0000767d      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007687      4939c1         cmp r9, rax
0x0000768a      0f870b020000   ja 0x789b
0x00007690      4c89ce         mov rsi, r9
0x00007693      4c894c2448     mov qword [rsp + 0x48], r9
0x00007698      4c89542440     mov qword [rsp + 0x40], r10
0x0000769d      48c1e605       shl rsi, 5
0x000076a1      48394c2408     cmp qword [rsp + 8], rcx
0x000076a6      4c89442438     mov qword [rsp + 0x38], r8
0x000076ab      4c895c2430     mov qword [rsp + 0x30], r11
0x000076b0      0f84b8010000   je 0x786e
0x000076b6      4889cf         mov rdi, rcx
0x000076b9      e8d2a0ffff     call sym.imp.realloc
0x000076be      498b5708       mov rdx, qword [r15 + 8]
0x000076c2      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000076c7      4889c1         mov rcx, rax
0x000076ca      4c8b442438     mov r8, qword [rsp + 0x38]
0x000076cf      4c8b542440     mov r10, qword [rsp + 0x40]
0x000076d4      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000076d9      4885c9         test rcx, rcx
0x000076dc      0f8415020000   je 0x78f7
0x000076e2      4839542408     cmp qword [rsp + 8], rdx
0x000076e7      498b07         mov rax, qword [r15]
0x000076ea      0f84c0010000   je 0x78b0
0x000076f0      49894f08       mov qword [r15 + 8], rcx
0x000076f4      e914faffff     jmp 0x710d
0x000076f9      498b4f08       mov rcx, qword [r15 + 8]
0x000076fd      48394c2408     cmp qword [rsp + 8], rcx
0x00007702      7418           je 0x771c
0x00007704      4889cf         mov rdi, rcx
0x00007707      e8749effff     call sym.imp.free
0x0000770c      498b7e08       mov rdi, qword [r14 + 8]
0x00007710      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007715      7405           je 0x771c
0x00007717      e8649effff     call sym.imp.free
0x0000771c      e87f9effff     call sym.imp.__errno_location
0x00007721      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007727      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000772c      e981f5ffff     jmp 0x6cb2
0x00007731      4889f7         mov rdi, rsi
0x00007734      e817a0ffff     call sym.imp.malloc
0x00007739      488b542408     mov rdx, qword [rsp + 8]
0x0000773e      4889c1         mov rcx, rax
0x00007741      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007746      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000774b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007750      e9e7f8ffff     jmp 0x703c
0x00007755      488b742420     mov rsi, qword [rsp + 0x20]
0x0000775a      4883feff       cmp rsi, 0xffffffffffffffff
0x0000775e      488d4601       lea rax, [rsi + 1]
0x00007762      4989742440     mov qword [r12 + 0x40], rsi
0x00007767      0f84eefcffff   je 0x745b
0x0000776d      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007772      4889442420     mov qword [rsp + 0x20], rax
0x00007777      e981f9ffff     jmp 0x70fd
0x0000777c      4c89da         mov rdx, r11
0x0000777f      4883c201       add rdx, 1
0x00007783      0fb60a         movzx ecx, byte [rdx]
0x00007786      8d71d0         lea esi, [rcx - 0x30]
0x00007789      4080fe09       cmp sil, 9
0x0000778d      76f0           jbe 0x777f
0x0000778f      80f924         cmp cl, 0x24
0x00007792      0f8556f9ffff   jne 0x70ee
0x00007798      31c9           xor ecx, ecx
0x0000779a      48be99999999.  movabs rsi, 0x1999999999999999
0x000077a4      83e830         sub eax, 0x30
0x000077a7      4c89c2         mov rdx, r8
0x000077aa      4839f1         cmp rcx, rsi
0x000077ad      4898           cdqe
0x000077af      7707           ja 0x77b8
0x000077b1      488d1489       lea rdx, [rcx + rcx*4]
0x000077b5      4801d2         add rdx, rdx
0x000077b8      4c89de         mov rsi, r11
0x000077bb      31db           xor ebx, ebx
0x000077bd      4801c2         add rdx, rax
0x000077c0      410fbe4301     movsx eax, byte [r11 + 1]
0x000077c5      0f92c3         setb bl
0x000077c8      4983c301       add r11, 1
0x000077cc      4889d1         mov rcx, rdx
0x000077cf      4885db         test rbx, rbx
0x000077d2      8d78d0         lea edi, [rax - 0x30]
0x000077d5      7471           je 0x7848
0x000077d7      4080ff09       cmp dil, 9
0x000077db      0f877afcffff   ja 0x745b
0x000077e1      83e830         sub eax, 0x30
0x000077e4      4c89c2         mov rdx, r8
0x000077e7      4c89de         mov rsi, r11
0x000077ea      4898           cdqe
0x000077ec      ebcd           jmp 0x77bb
0x000077ee      4080ff09       cmp dil, 9
0x000077f2      0f8763fcffff   ja 0x745b
0x000077f8      0fbec1         movsx eax, cl
0x000077fb      4889d5         mov rbp, rdx
0x000077fe      4c89c1         mov rcx, r8
0x00007801      83e830         sub eax, 0x30
0x00007804      4898           cdqe
0x00007806      e9befaffff     jmp 0x72c9
0x0000780b      488b742408     mov rsi, qword [rsp + 8]
0x00007810      48c1e005       shl rax, 5
0x00007814      4889cf         mov rdi, rcx
0x00007817      4889c2         mov rdx, rax
0x0000781a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000781f      4c89542438     mov qword [rsp + 0x38], r10
0x00007824      4c89442430     mov qword [rsp + 0x30], r8
0x00007829      e8f29effff     call sym.imp.memcpy
0x0000782e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007833      4889c1         mov rcx, rax
0x00007836      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000783b      498b07         mov rax, qword [r15]
0x0000783e      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007843      e90bf8ffff     jmp 0x7053
0x00007848      4080ff09       cmp dil, 9
0x0000784c      0f8648ffffff   jbe 0x779a
0x00007852      488d5aff       lea rbx, [rdx - 1]
0x00007856      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x0000785a      0f87fbfbffff   ja 0x745b
0x00007860      49895c2440     mov qword [r12 + 0x40], rbx
0x00007865      4c8d5e02       lea r11, [rsi + 2]
0x00007869      e98ff8ffff     jmp 0x70fd
0x0000786e      4889f7         mov rdi, rsi
0x00007871      e8da9effff     call sym.imp.malloc
0x00007876      488b542408     mov rdx, qword [rsp + 8]
0x0000787b      4889c1         mov rcx, rax
0x0000787e      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007883      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007888      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000788d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007892      e942feffff     jmp 0x76d9
0x00007897      498b4f08       mov rcx, qword [r15 + 8]
0x0000789b      48394c2408     cmp qword [rsp + 8], rcx
0x000078a0      0f855efeffff   jne 0x7704
0x000078a6      e961feffff     jmp 0x770c
0x000078ab      0f1f440000     nop dword [rax + rax]
0x000078b0      488b742408     mov rsi, qword [rsp + 8]
0x000078b5      48c1e005       shl rax, 5
0x000078b9      4889cf         mov rdi, rcx
0x000078bc      4889c2         mov rdx, rax
0x000078bf      4c894c2448     mov qword [rsp + 0x48], r9
0x000078c4      4c89542440     mov qword [rsp + 0x40], r10
0x000078c9      4c89442438     mov qword [rsp + 0x38], r8
0x000078ce      4c895c2430     mov qword [rsp + 0x30], r11
0x000078d3      e8489effff     call sym.imp.memcpy
0x000078d8      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000078dd      4889c1         mov rcx, rax
0x000078e0      4c8b542440     mov r10, qword [rsp + 0x40]
0x000078e5      498b07         mov rax, qword [r15]
0x000078e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000078ed      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000078f2      e9f9fdffff     jmp 0x76f0
0x000078f7      4889d1         mov rcx, rdx
0x000078fa      eb9f           jmp 0x789b
0x000078fc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00007900      4157           push r15
0x00007902      4156           push r14
0x00007904      4989d7         mov r15, rdx
0x00007907      4155           push r13
0x00007909      4154           push r12
0x0000790b      4c8d25be3120.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20aad0
0x00007912      55             push rbp
0x00007913      488d2dbe3120.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20aad8 ; "p "
0x0000791a      53             push rbx
0x0000791b      4189fd         mov r13d, edi
0x0000791e      4989f6         mov r14, rsi
0x00007921      4c29e5         sub rbp, r12
0x00007924      4883ec08       sub rsp, 8
0x00007928      48c1fd03       sar rbp, 3
0x0000792c      e8f79bffff     call sym._init
0x00007931      4885ed         test rbp, rbp
0x00007934      7420           je 0x7956
0x00007936      31db           xor ebx, ebx
0x00007938      0f1f84000000.  nop dword [rax + rax]
0x00007940      4c89fa         mov rdx, r15
0x00007943      4c89f6         mov rsi, r14
0x00007946      4489ef         mov edi, r13d
0x00007949      41ff14dc       call qword [r12 + rbx*8]
0x0000794d      4883c301       add rbx, 1
0x00007951      4839dd         cmp rbp, rbx
0x00007954      75ea           jne 0x7940
0x00007956      4883c408       add rsp, 8
0x0000795a      5b             pop rbx
0x0000795b      5d             pop rbp
0x0000795c      415c           pop r12
0x0000795e      415d           pop r13
0x00007960      415e           pop r14
0x00007962      415f           pop r15
0x00007964      c3             ret
0x00007965      90             nop
0x00007966      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00007970      f3c3           ret
0x00007972      662e0f1f8400.  nop word cs:[rax + rax]
0x0000797c      0f1f4000       nop dword [rax]
;-- atexit:
0x00007980      488b15813620.  mov rdx, qword [obj.__dso_handle]       ; [0x20b008:8]=0x20b008 obj.__dso_handle
0x00007987      31f6           xor esi, esi
0x00007989      e9929effff     jmp sym.imp.__cxa_atexit
0x0000798e      0000           add byte [rax], al
