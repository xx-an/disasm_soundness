;-- section..plt:
;-- .plt:
0x00001730      ff35da862000   push qword [0x00209e10]                 ; [12] -r-x section size 896 named .plt
0x00001736      ff25dc862000   jmp qword [0x00209e18]                  ; [0x209e18:8]=0
0x0000173c      0f1f4000       nop dword [rax]
;-- imp.__ctype_toupper_loc:
0x00001740      ff25da862000   jmp qword [reloc.__ctype_toupper_loc]   ; [0x209e20:8]=0x1746 ; "F\x17"
0x00001746      6800000000     push 0
0x0000174b      e9e0ffffff     jmp sym..plt
;-- imp.__uflow:
0x00001750      ff25d2862000   jmp qword [reloc.__uflow]               ; [0x209e28:8]=0x1756 ; "V\x17"
0x00001756      6801000000     push 1
0x0000175b      e9d0ffffff     jmp sym..plt
;-- imp.getenv:
0x00001760      ff25ca862000   jmp qword [reloc.getenv]                ; [0x209e30:8]=0x1766 ; "f\x17"
0x00001766      6802000000     push 2
0x0000176b      e9c0ffffff     jmp sym..plt
;-- imp.free:
0x00001770      ff25c2862000   jmp qword [reloc.free]                  ; [0x209e38:8]=0x1776 ; "v\x17"
0x00001776      6803000000     push 3
0x0000177b      e9b0ffffff     jmp sym..plt
;-- imp.abort:
0x00001780      ff25ba862000   jmp qword [reloc.abort]                 ; [0x209e40:8]=0x1786
0x00001786      6804000000     push 4
0x0000178b      e9a0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001790      ff25b2862000   jmp qword [reloc.__errno_location]      ; [0x209e48:8]=0x1796
0x00001796      6805000000     push 5
0x0000179b      e990ffffff     jmp sym..plt
;-- imp.strncmp:
0x000017a0      ff25aa862000   jmp qword [reloc.strncmp]               ; [0x209e50:8]=0x17a6
0x000017a6      6806000000     push 6
0x000017ab      e980ffffff     jmp sym..plt
;-- imp._exit:
0x000017b0      ff25a2862000   jmp qword [reloc._exit]                 ; [0x209e58:8]=0x17b6
0x000017b6      6807000000     push 7
0x000017bb      e970ffffff     jmp sym..plt
;-- imp.__fpending:
0x000017c0      ff259a862000   jmp qword [reloc.__fpending]            ; [0x209e60:8]=0x17c6
0x000017c6      6808000000     push 8
0x000017cb      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x000017d0      ff2592862000   jmp qword [reloc.textdomain]            ; [0x209e68:8]=0x17d6
0x000017d6      6809000000     push 9
0x000017db      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000017e0      ff258a862000   jmp qword [reloc.fclose]                ; [0x209e70:8]=0x17e6
0x000017e6      680a000000     push 0xa
0x000017eb      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000017f0      ff2582862000   jmp qword [reloc.bindtextdomain]        ; [0x209e78:8]=0x17f6
0x000017f6      680b000000     push 0xb
0x000017fb      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001800      ff257a862000   jmp qword [reloc.dcgettext]             ; [0x209e80:8]=0x1806
0x00001806      680c000000     push 0xc
0x0000180b      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001810      ff2572862000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e88:8]=0x1816
0x00001816      680d000000     push 0xd
0x0000181b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001820      ff256a862000   jmp qword [reloc.strlen]                ; [0x209e90:8]=0x1826 ; "&\x18"
0x00001826      680e000000     push 0xe
0x0000182b      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001830      ff2562862000   jmp qword [reloc.__stack_chk_fail]      ; [0x209e98:8]=0x1836 ; "6\x18"
0x00001836      680f000000     push 0xf
0x0000183b      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001840      ff255a862000   jmp qword [reloc.getopt_long]           ; [0x209ea0:8]=0x1846 ; "F\x18"
0x00001846      6810000000     push 0x10
0x0000184b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001850      ff2552862000   jmp qword [reloc.mbrtowc]               ; [0x209ea8:8]=0x1856 ; "V\x18"
0x00001856      6811000000     push 0x11
0x0000185b      e9d0feffff     jmp sym..plt
;-- imp.dup2:
0x00001860      ff254a862000   jmp qword [reloc.dup2]                  ; [0x209eb0:8]=0x1866 ; "f\x18"
0x00001866      6812000000     push 0x12
0x0000186b      e9c0feffff     jmp sym..plt
;-- imp.strchr:
0x00001870      ff2542862000   jmp qword [reloc.strchr]                ; [0x209eb8:8]=0x1876 ; "v\x18"
0x00001876      6813000000     push 0x13
0x0000187b      e9b0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001880      ff253a862000   jmp qword [reloc.__overflow]            ; [0x209ec0:8]=0x1886
0x00001886      6814000000     push 0x14
0x0000188b      e9a0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001890      ff2532862000   jmp qword [reloc.strrchr]               ; [0x209ec8:8]=0x1896
0x00001896      6815000000     push 0x15
0x0000189b      e990feffff     jmp sym..plt
;-- imp.lseek:
0x000018a0      ff252a862000   jmp qword [reloc.lseek]                 ; [0x209ed0:8]=0x18a6
0x000018a6      6816000000     push 0x16
0x000018ab      e980feffff     jmp sym..plt
;-- imp.__assert_fail:
0x000018b0      ff2522862000   jmp qword [reloc.__assert_fail]         ; [0x209ed8:8]=0x18b6
0x000018b6      6817000000     push 0x17
0x000018bb      e970feffff     jmp sym..plt
;-- imp.memset:
0x000018c0      ff251a862000   jmp qword [reloc.memset]                ; [0x209ee0:8]=0x18c6
0x000018c6      6818000000     push 0x18
0x000018cb      e960feffff     jmp sym..plt
;-- imp.freopen:
0x000018d0      ff2512862000   jmp qword [reloc.freopen]               ; [0x209ee8:8]=0x18d6
0x000018d6      6819000000     push 0x19
0x000018db      e950feffff     jmp sym..plt
;-- imp.close:
0x000018e0      ff250a862000   jmp qword [reloc.close]                 ; [0x209ef0:8]=0x18e6
0x000018e6      681a000000     push 0x1a
0x000018eb      e940feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x000018f0      ff2502862000   jmp qword [reloc.posix_fadvise]         ; [0x209ef8:8]=0x18f6
0x000018f6      681b000000     push 0x1b
0x000018fb      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001900      ff25fa852000   jmp qword [reloc.memcmp]                ; [0x209f00:8]=0x1906
0x00001906      681c000000     push 0x1c
0x0000190b      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001910      ff25f2852000   jmp qword [reloc.fputs_unlocked]        ; [0x209f08:8]=0x1916
0x00001916      681d000000     push 0x1d
0x0000191b      e910feffff     jmp sym..plt
;-- imp.calloc:
0x00001920      ff25ea852000   jmp qword [reloc.calloc]                ; [0x209f10:8]=0x1926 ; "&\x19"
0x00001926      681e000000     push 0x1e
0x0000192b      e900feffff     jmp sym..plt
;-- imp.strcmp:
0x00001930      ff25e2852000   jmp qword [reloc.strcmp]                ; [0x209f18:8]=0x1936 ; "6\x19"
0x00001936      681f000000     push 0x1f
0x0000193b      e9f0fdffff     jmp sym..plt
;-- imp.strtol:
0x00001940      ff25da852000   jmp qword [reloc.strtol]                ; [0x209f20:8]=0x1946 ; "F\x19"
0x00001946      6820000000     push 0x20                               ; "@"
0x0000194b      e9e0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001950      ff25d2852000   jmp qword [reloc.memcpy]                ; [0x209f28:8]=0x1956 ; "V\x19"
0x00001956      6821000000     push 0x21                               ; '!'
0x0000195b      e9d0fdffff     jmp sym..plt
;-- imp.fileno:
0x00001960      ff25ca852000   jmp qword [reloc.fileno]                ; [0x209f30:8]=0x1966 ; "f\x19"
0x00001966      6822000000     push 0x22                               ; '"'
0x0000196b      e9c0fdffff     jmp sym..plt
;-- imp.malloc:
0x00001970      ff25c2852000   jmp qword [reloc.malloc]                ; [0x209f38:8]=0x1976 ; "v\x19"
0x00001976      6823000000     push 0x23                               ; '#'
0x0000197b      e9b0fdffff     jmp sym..plt
;-- imp.fflush:
0x00001980      ff25ba852000   jmp qword [reloc.fflush]                ; [0x209f40:8]=0x1986
0x00001986      6824000000     push 0x24                               ; '$'
0x0000198b      e9a0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001990      ff25b2852000   jmp qword [reloc.nl_langinfo]           ; [0x209f48:8]=0x1996
0x00001996      6825000000     push 0x25                               ; '%'
0x0000199b      e990fdffff     jmp sym..plt
;-- imp.strcoll:
0x000019a0      ff25aa852000   jmp qword [reloc.strcoll]               ; [0x209f50:8]=0x19a6
0x000019a6      6826000000     push 0x26                               ; '&'
0x000019ab      e980fdffff     jmp sym..plt
;-- imp.__freading:
0x000019b0      ff25a2852000   jmp qword [reloc.__freading]            ; [0x209f58:8]=0x19b6
0x000019b6      6827000000     push 0x27                               ; '''
0x000019bb      e970fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000019c0      ff259a852000   jmp qword [reloc.fwrite_unlocked]       ; [0x209f60:8]=0x19c6
0x000019c6      6828000000     push 0x28                               ; '('
0x000019cb      e960fdffff     jmp sym..plt
;-- imp.realloc:
0x000019d0      ff2592852000   jmp qword [reloc.realloc]               ; [0x209f68:8]=0x19d6
0x000019d6      6829000000     push 0x29                               ; ')'
0x000019db      e950fdffff     jmp sym..plt
;-- imp.setlocale:
0x000019e0      ff258a852000   jmp qword [reloc.setlocale]             ; [0x209f70:8]=0x19e6
0x000019e6      682a000000     push 0x2a                               ; '*'
0x000019eb      e940fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x000019f0      ff2582852000   jmp qword [reloc.__printf_chk]          ; [0x209f78:8]=0x19f6
0x000019f6      682b000000     push 0x2b                               ; '+'
0x000019fb      e930fdffff     jmp sym..plt
;-- imp.error:
0x00001a00      ff257a852000   jmp qword [reloc.error]                 ; [0x209f80:8]=0x1a06
0x00001a06      682c000000     push 0x2c                               ; ','
0x00001a0b      e920fdffff     jmp sym..plt
;-- imp.open:
0x00001a10      ff2572852000   jmp qword [reloc.open]                  ; [0x209f88:8]=0x1a16
0x00001a16      682d000000     push 0x2d                               ; '-'
0x00001a1b      e910fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001a20      ff256a852000   jmp qword [reloc.fseeko]                ; [0x209f90:8]=0x1a26 ; "&\x1a"
0x00001a26      682e000000     push 0x2e                               ; '.'
0x00001a2b      e900fdffff     jmp sym..plt
;-- imp.strtoul:
0x00001a30      ff2562852000   jmp qword [reloc.strtoul]               ; [0x209f98:8]=0x1a36 ; "6\x1a"
0x00001a36      682f000000     push 0x2f                               ; '/'
0x00001a3b      e9f0fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001a40      ff255a852000   jmp qword [reloc.__cxa_atexit]          ; [0x209fa0:8]=0x1a46 ; "F\x1a"
0x00001a46      6830000000     push 0x30                               ; '0'
0x00001a4b      e9e0fcffff     jmp sym..plt
;-- imp.exit:
0x00001a50      ff2552852000   jmp qword [reloc.exit]                  ; [0x209fa8:8]=0x1a56 ; "V\x1a"
0x00001a56      6831000000     push 0x31                               ; '1'
0x00001a5b      e9d0fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001a60      ff254a852000   jmp qword [reloc.fwrite]                ; [0x209fb0:8]=0x1a66 ; "f\x1a"
0x00001a66      6832000000     push 0x32                               ; '2'
0x00001a6b      e9c0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001a70      ff2542852000   jmp qword [reloc.__fprintf_chk]         ; [0x209fb8:8]=0x1a76 ; "v\x1a"
0x00001a76      6833000000     push 0x33                               ; '3'
0x00001a7b      e9b0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001a80      ff253a852000   jmp qword [reloc.mbsinit]               ; [0x209fc0:8]=0x1a86
0x00001a86      6834000000     push 0x34                               ; '4'
0x00001a8b      e9a0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001a90      ff2532852000   jmp qword [reloc.iswprint]              ; [0x209fc8:8]=0x1a96
0x00001a96      6835000000     push 0x35                               ; '5'
0x00001a9b      e990fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001aa0      ff252a852000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fd0:8]=0x1aa6
0x00001aa6      6836000000     push 0x36                               ; '6'
0x00001aab      e980fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001ab0      .qword 0x90660020854225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001ab8      0000           add byte [rax], al
0x00001aba      0000           add byte [rax], al
0x00001abc      0000           add byte [rax], al
0x00001abe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001ac0      4157           push r15                                ; [14] -r-x section size 19566 named .text
0x00001ac2      4156           push r14
0x00001ac4      4189fe         mov r14d, edi
0x00001ac7      4155           push r13
0x00001ac9      4154           push r12
0x00001acb      488d3d274d00.  lea rdi, str.POSIXLY_CORRECT            ; 0x67f9 ; "POSIXLY_CORRECT"
0x00001ad2      55             push rbp
0x00001ad3      53             push rbx
0x00001ad4      4989f7         mov r15, rsi
0x00001ad7      4881eca80000.  sub rsp, 0xa8
0x00001ade      64488b042528.  mov rax, qword fs:[0x28]
0x00001ae7      488984249800.  mov qword [rsp + 0x98], rax
0x00001aef      31c0           xor eax, eax
0x00001af1      e86afcffff     call sym.imp.getenv
0x00001af6      498b3f         mov rdi, qword [r15]
0x00001af9      4885c0         test rax, rax
0x00001afc      488d056f5700.  lea rax, [0x00007272]                   ; "-"
0x00001b03      410f95c4       setne r12b
0x00001b07      4531ed         xor r13d, r13d
0x00001b0a      31db           xor ebx, ebx
0x00001b0c      488984248800.  mov qword [rsp + 0x88], rax
0x00001b14      488984248000.  mov qword [rsp + 0x80], rax
0x00001b1c      31ed           xor ebp, ebp
0x00001b1e      e8dd1b0000     call sym.set_program_name
0x00001b23      488d35775c00.  lea rsi, [0x000077a1]
0x00001b2a      bf06000000     mov edi, 6
0x00001b2f      e8acfeffff     call sym.imp.setlocale
0x00001b34      488d35ce4c00.  lea rsi, str.usr_local_share_locale     ; 0x6809 ; "/usr/local/share/locale"
0x00001b3b      488d3d8e4c00.  lea rdi, [0x000067d0]                   ; "coreutils"
0x00001b42      e8a9fcffff     call sym.imp.bindtextdomain
0x00001b47      488d3d824c00.  lea rdi, [0x000067d0]                   ; "coreutils"
0x00001b4e      e87dfcffff     call sym.imp.textdomain
0x00001b53      bf03000000     mov edi, 3
0x00001b58      e823190000     call sym.hard_locale
0x00001b5d      488d3d2c1600.  lea rdi, sym.close_stdout               ; 0x3190 ; "USH\x83\xec\bH\x8b=\vo "
0x00001b64      8805ae852000   mov byte [obj.hard_LC_COLLATE], al      ; [0x20a118:1]=0
0x00001b6a      e8b14b0000     call sym.atexit
0x00001b6f      488d4c2460     lea rcx, [rsp + 0x60]
0x00001b74      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00001b7b      48c705828520.  mov qword [obj.skip_chars], 0           ; [0x20a108:8]=0
0x00001b86      48c7057f8520.  mov qword [obj.skip_fields], 0          ; [0x20a110:8]=0
0x00001b91      488905688520.  mov qword [obj.check_chars], rax        ; [0x20a100:8]=0
0x00001b98      c6055b852000.  mov byte [obj.output_first_repeated], 1 ; [0x20a0fa:1]=0
0x00001b9f      c60555852000.  mov byte [obj.output_unique], 1         ; [0x20a0fb:1]=0
0x00001ba6      c6054c852000.  mov byte [obj.output_later_repeated], 0 ; [0x20a0f9:1]=0
0x00001bad      c70545852000.  mov dword [obj.countmode], 1            ; [0x20a0fc:4]=0
0x00001bb7      c70533852000.  mov dword [obj.delimit_groups], 0       ; [0x20a0f4:4]=0
0x00001bc1      c64424270a     mov byte [rsp + 0x27], 0xa
0x00001bc6      c74424080000.  mov dword [rsp + 8], 0
0x00001bce      48894c2418     mov qword [rsp + 0x18], rcx
0x00001bd3      4889442410     mov qword [rsp + 0x10], rax
0x00001bd8      eb40           jmp 0x1c1a
0x00001bda      660f1f440000   nop word [rax + rax]
0x00001be0      4584e4         test r12b, r12b
0x00001be3      743e           je 0x1c23
0x00001be5      8b05cd842000   mov eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b8:4]=0
0x00001beb      4439f0         cmp eax, r14d
0x00001bee      0f8d4f010000   jge 0x1d43
0x00001bf4      4863d0         movsxd rdx, eax
0x00001bf7      83fb02         cmp ebx, 2
0x00001bfa      498b3cd7       mov rdi, qword [r15 + rdx*8]
0x00001bfe      0f84d8080000   je 0x24dc
0x00001c04      83c001         add eax, 1
0x00001c07      8905ab842000   mov dword [obj.optind], eax             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b8:4]=0
0x00001c0d      89d8           mov eax, ebx
0x00001c0f      83c301         add ebx, 1
0x00001c12      4889bcc48000.  mov qword [rsp + rax*8 + 0x80], rdi
0x00001c1a      83fdff         cmp ebp, 0xffffffff
0x00001c1d      74c6           je 0x1be5
0x00001c1f      85db           test ebx, ebx
0x00001c21      75bd           jne 0x1be0
0x00001c23      488d0d967d20.  lea rcx, obj.longopts                   ; 0x2099c0
0x00001c2a      488d15f04b00.  lea rdx, str.0123456789Dcdf:is:uw:z     ; 0x6821 ; "-0123456789Dcdf:is:uw:z"
0x00001c31      4531c0         xor r8d, r8d
0x00001c34      4c89fe         mov rsi, r15
0x00001c37      4489f7         mov edi, r14d
0x00001c3a      e801fcffff     call sym.imp.getopt_long
0x00001c3f      83f8ff         cmp eax, 0xffffffff
0x00001c42      89c5           mov ebp, eax
0x00001c44      749f           je 0x1be5
0x00001c46      83f864         cmp eax, 0x64
0x00001c49      0f843a050000   je 0x2189
0x00001c4f      7e4f           jle 0x1ca0
0x00001c51      83f875         cmp eax, 0x75
0x00001c54      0f841d050000   je 0x2177
0x00001c5a      0f8f80000000   jg 0x1ce0
0x00001c60      83f869         cmp eax, 0x69
0x00001c63      0f8432050000   je 0x219b
0x00001c69      83f873         cmp eax, 0x73
0x00001c6c      0f8463030000   je 0x1fd5
0x00001c72      83f866         cmp eax, 0x66
0x00001c75      7556           jne 0x1ccd
0x00001c77      488b3d428420.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001c7e      488d35db5300.  lea rsi, str.invalid_number_of_fields_to_skip ; 0x7060 ; "invalid number of fields to skip"
0x00001c85      e8a60a0000     call sym.size_opt
0x00001c8a      c74424080200.  mov dword [rsp + 8], 2
0x00001c92      488905778420.  mov qword [obj.skip_fields], rax        ; [0x20a110:8]=0
0x00001c99      eb84           jmp 0x1c1f
0x00001c9b      0f1f440000     nop dword [rax + rax]
0x00001ca0      83f839         cmp eax, 0x39
0x00001ca3      7f7b           jg 0x1d20
0x00001ca5      83f830         cmp eax, 0x30
0x00001ca8      0f8df9040000   jge 0x21a7
0x00001cae      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001cb3      0f8475080000   je 0x252e
0x00001cb9      83f801         cmp eax, 1
0x00001cbc      0f84e8020000   je 0x1faa
0x00001cc2      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001cc7      0f8418050000   je 0x21e5
0x00001ccd      bf01000000     mov edi, 1
0x00001cd2      e8490c0000     call sym.usage
0x00001cd7      660f1f840000.  nop word [rax + rax]
0x00001ce0      83f87a         cmp eax, 0x7a
0x00001ce3      0f843a050000   je 0x2223
0x00001ce9      3d80000000     cmp eax, 0x80
0x00001cee      0f8460030000   je 0x2054
0x00001cf4      83f877         cmp eax, 0x77
0x00001cf7      75d4           jne 0x1ccd
0x00001cf9      488b3dc08320.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001d00      488d35a15300.  lea rsi, str.invalid_number_of_bytes_to_compare ; 0x70a8 ; "invalid number of bytes to compare"
0x00001d07      e8240a0000     call sym.size_opt
0x00001d0c      488905ed8320.  mov qword [obj.check_chars], rax        ; [0x20a100:8]=0
0x00001d13      e907ffffff     jmp 0x1c1f
0x00001d18      0f1f84000000.  nop dword [rax + rax]
0x00001d20      83f844         cmp eax, 0x44
0x00001d23      0f84cb020000   je 0x1ff4
0x00001d29      83f863         cmp eax, 0x63
0x00001d2c      759f           jne 0x1ccd
0x00001d2e      c705c4832000.  mov dword [obj.countmode], 0            ; [0x20a0fc:4]=0
0x00001d38      41bd01000000   mov r13d, 1
0x00001d3e      e9dcfeffff     jmp 0x1c1f
0x00001d43      833da6832000.  cmp dword [obj.grouping], 0             ; [0x20a0f0:4]=0
0x00001d4a      0f8450030000   je 0x20a0
0x00001d50      4584ed         test r13b, r13b
0x00001d53      0f85dc070000   jne 0x2535
0x00001d59      833d9c832000.  cmp dword [obj.countmode], 1            ; [0x20a0fc:4]=0
0x00001d60      ba05000000     mov edx, 5
0x00001d65      488d35945300.  lea rsi, str.grouping_and_printing_repeat_counts_is_meaningless ; 0x7100 ; "grouping and printing repeat counts is meaningless"
0x00001d6c      0f85cf070000   jne 0x2541
0x00001d72      0fbe442427     movsx eax, byte [rsp + 0x27]
0x00001d77      488d35f45400.  lea rsi, [0x00007272]                   ; "-"
0x00001d7e      488b9c248800.  mov rbx, qword [rsp + 0x88]
0x00001d86      89442418       mov dword [rsp + 0x18], eax
0x00001d8a      488b84248000.  mov rax, qword [rsp + 0x80]
0x00001d92      4889c7         mov rdi, rax
0x00001d95      4889442430     mov qword [rsp + 0x30], rax
0x00001d9a      e891fbffff     call sym.imp.strcmp
0x00001d9f      85c0           test eax, eax
0x00001da1      0f8586040000   jne 0x222d
0x00001da7      488d35c45400.  lea rsi, [0x00007272]                   ; "-"
0x00001dae      4889df         mov rdi, rbx
0x00001db1      e87afbffff     call sym.imp.strcmp
0x00001db6      85c0           test eax, eax
0x00001db8      741f           je 0x1dd9
0x00001dba      488b15e78220.  mov rdx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001dc1      488d35bd4a00.  lea rsi, [0x00006885]                   ; "w"
0x00001dc8      4889df         mov rdi, rbx
0x00001dcb      e800150000     call sym.freopen_safer
0x00001dd0      4885c0         test rax, rax
0x00001dd3      0f8487070000   je 0x2560
0x00001dd9      488b3dd08220.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001de0      488d6c2440     lea rbp, [rsp + 0x40]
0x00001de5      be02000000     mov esi, 2
0x00001dea      4c8d6c2460     lea r13, [rsp + 0x60]
0x00001def      e85c140000     call sym.fadvise
0x00001df4      4889ef         mov rdi, rbp
0x00001df7      e8e4160000     call sym.initbuffer
0x00001dfc      4c89ef         mov rdi, r13
0x00001dff      e8dc160000     call sym.initbuffer
0x00001e04      803df0822000.  cmp byte [obj.output_unique], 0         ; [0x20a0fb:1]=0
0x00001e0b      7418           je 0x1e25
0x00001e0d      0fb61de68220.  movzx ebx, byte [obj.output_first_repeated] ; [0x20a0fa:1]=0
0x00001e14      84db           test bl, bl
0x00001e16      740d           je 0x1e25
0x00001e18      833ddd822000.  cmp dword [obj.countmode], 1            ; [0x20a0fc:4]=0
0x00001e1f      0f847e040000   je 0x22a3
0x00001e25      8b542418       mov edx, dword [rsp + 0x18]
0x00001e29      488b35808220.  mov rsi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001e30      4c89ef         mov rdi, r13
0x00001e33      e8b8160000     call sym.readlinebuffer_delim
0x00001e38      4885c0         test rax, rax
0x00001e3b      0f840d010000   je 0x1f4e
0x00001e41      4c8b642470     mov r12, qword [rsp + 0x70]
0x00001e46      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00001e4b      4c89e6         mov rsi, r12
0x00001e4e      4889df         mov rdi, rbx
0x00001e51      4883eb01       sub rbx, 1
0x00001e55      e8e6090000     call sym.find_field.isra.2
0x00001e5a      4889442410     mov qword [rsp + 0x10], rax
0x00001e5f      4c29e0         sub rax, r12
0x00001e62      c644242801     mov byte [rsp + 0x28], 1
0x00001e67      4829c3         sub rbx, rax
0x00001e6a      4531e4         xor r12d, r12d
0x00001e6d      48895c2408     mov qword [rsp + 8], rbx
0x00001e72      488b35378220.  mov rsi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001e79      f60610         test byte [rsi], 0x10
0x00001e7c      0f85bf000000   jne 0x1f41
0x00001e82      8b542418       mov edx, dword [rsp + 0x18]
0x00001e86      4889ef         mov rdi, rbp
0x00001e89      e862160000     call sym.readlinebuffer_delim
0x00001e8e      4885c0         test rax, rax
0x00001e91      0f84dd040000   je 0x2374
0x00001e97      488b5d08       mov rbx, qword [rbp + 8]
0x00001e9b      4c8b7d10       mov r15, qword [rbp + 0x10]
0x00001e9f      4889df         mov rdi, rbx
0x00001ea2      4c89fe         mov rsi, r15
0x00001ea5      4883eb01       sub rbx, 1
0x00001ea9      e892090000     call sym.find_field.isra.2
0x00001eae      488b4c2408     mov rcx, qword [rsp + 8]
0x00001eb3      4989c6         mov r14, rax
0x00001eb6      488b742410     mov rsi, qword [rsp + 0x10]
0x00001ebb      4c29f8         sub rax, r15
0x00001ebe      4c89f7         mov rdi, r14
0x00001ec1      4829c3         sub rbx, rax
0x00001ec4      4889da         mov rdx, rbx
0x00001ec7      e8d4070000     call sym.different
0x00001ecc      89c2           mov edx, eax
0x00001ece      83f201         xor edx, 1
0x00001ed1      0fb6ca         movzx ecx, dl
0x00001ed4      0fb6d2         movzx edx, dl
0x00001ed7      4901d4         add r12, rdx
0x00001eda      4983fcff       cmp r12, 0xffffffffffffffff
0x00001ede      0f842c020000   je 0x2110
0x00001ee4      8b150a822000   mov edx, dword [obj.delimit_groups]     ; [0x20a0f4:4]=0
0x00001eea      85d2           test edx, edx
0x00001eec      0f84e0010000   je 0x20d2
0x00001ef2      84c0           test al, al
0x00001ef4      0f843c020000   je 0x2136
0x00001efa      0fb6442428     movzx eax, byte [rsp + 0x28]
0x00001eff      4d85e4         test r12, r12
0x00001f02      be00000000     mov esi, 0
0x00001f07      0f45c6         cmovne eax, esi
0x00001f0a      88442428       mov byte [rsp + 0x28], al
0x00001f0e      4c89e2         mov rdx, r12
0x00001f11      89ce           mov esi, ecx
0x00001f13      4c89ef         mov rdi, r13
0x00001f16      e8a5080000     call sym.writeline
0x00001f1b      488b358e8120.  mov rsi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001f22      4531e4         xor r12d, r12d
0x00001f25      4889e8         mov rax, rbp
0x00001f28      48895c2408     mov qword [rsp + 8], rbx
0x00001f2d      4c89ed         mov rbp, r13
0x00001f30      4c89742410     mov qword [rsp + 0x10], r14
0x00001f35      4989c5         mov r13, rax
0x00001f38      f60610         test byte [rsi], 0x10
0x00001f3b      0f8441ffffff   je 0x1e82
0x00001f41      4c89e2         mov rdx, r12
0x00001f44      31f6           xor esi, esi
0x00001f46      4c89ef         mov rdi, r13
0x00001f49      e872080000     call sym.writeline
0x00001f4e      488b3d5b8120.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001f55      f60720         test byte [rdi], 0x20
0x00001f58      0f8526040000   jne 0x2384
0x00001f5e      e8fd420000     call sym.rpl_fclose
0x00001f63      85c0           test eax, eax
0x00001f65      0f8519040000   jne 0x2384
0x00001f6b      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00001f70      e8fbf7ffff     call sym.imp.free
0x00001f75      488b7c2470     mov rdi, qword [rsp + 0x70]
0x00001f7a      e8f1f7ffff     call sym.imp.free
0x00001f7f      31c0           xor eax, eax
0x00001f81      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00001f89      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001f92      0f85c3050000   jne 0x255b
0x00001f98      4881c4a80000.  add rsp, 0xa8
0x00001f9f      5b             pop rbx
0x00001fa0      5d             pop rbp
0x00001fa1      415c           pop r12
0x00001fa3      415d           pop r13
0x00001fa5      415e           pop r14
0x00001fa7      415f           pop r15
0x00001fa9      c3             ret
0x00001faa      488b3d0f8120.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001fb1      803f2b         cmp byte [rdi], 0x2b
0x00001fb4      0f8492040000   je 0x244c
0x00001fba      83fb02         cmp ebx, 2
0x00001fbd      0f8419050000   je 0x24dc
0x00001fc3      89d8           mov eax, ebx
0x00001fc5      83c301         add ebx, 1
0x00001fc8      4889bcc48000.  mov qword [rsp + rax*8 + 0x80], rdi
0x00001fd0      e94afcffff     jmp 0x1c1f
0x00001fd5      488b3de48020.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001fdc      488d35a55000.  lea rsi, str.invalid_number_of_bytes_to_skip ; 0x7088 ; "invalid number of bytes to skip"
0x00001fe3      e848070000     call sym.size_opt
0x00001fe8      488905198120.  mov qword [obj.skip_chars], rax         ; [0x20a108:8]=0
0x00001fef      e92bfcffff     jmp 0x1c1f
0x00001ff4      488b35c58020.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00001ffb      c605f9802000.  mov byte [obj.output_unique], 0         ; [0x20a0fb:1]=0
0x00002002      c605f0802000.  mov byte [obj.output_later_repeated], 1 ; [0x20a0f9:1]=0
0x00002009      4885f6         test rsi, rsi
0x0000200c      0f846d020000   je 0x227f
0x00002012      4c8b0dff7f20.  mov r9, qword [obj.argmatch_die]        ; [0x20a018:8]=0x2de0 sym.__argmatch_die
0x00002019      488d15807b20.  lea rdx, obj.delimit_method_string      ; 0x209ba0
0x00002020      488d0d695100.  lea rcx, obj.delimit_method_map         ; 0x7190
0x00002027      488d3d1c4800.  lea rdi, str.all_repeated               ; 0x684a ; "--all-repeated"
0x0000202e      41b804000000   mov r8d, 4
0x00002034      41bd01000000   mov r13d, 1
0x0000203a      e871100000     call sym.__xargmatch_internal
0x0000203f      488d154a5100.  lea rdx, obj.delimit_method_map         ; 0x7190
0x00002046      8b0482         mov eax, dword [rdx + rax*4]
0x00002049      8905a5802000   mov dword [obj.delimit_groups], eax     ; [0x20a0f4:4]=0
0x0000204f      e9cbfbffff     jmp 0x1c1f
0x00002054      488b35658020.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x0000205b      4885f6         test rsi, rsi
0x0000205e      0f8430020000   je 0x2294
0x00002064      4c8b0dad7f20.  mov r9, qword [obj.argmatch_die]        ; [0x20a018:8]=0x2de0 sym.__argmatch_die
0x0000206b      488d15ee7a20.  lea rdx, obj.grouping_method_string     ; 0x209b60
0x00002072      488d0d075100.  lea rcx, obj.grouping_method_map        ; 0x7180
0x00002079      488d3dd94700.  lea rdi, str.group                      ; 0x6859 ; "--group"
0x00002080      41b804000000   mov r8d, 4
0x00002086      e825100000     call sym.__xargmatch_internal
0x0000208b      488d15ee5000.  lea rdx, obj.grouping_method_map        ; 0x7180
0x00002092      8b0482         mov eax, dword [rdx + rax*4]
0x00002095      890555802000   mov dword [obj.grouping], eax           ; [0x20a0f0:4]=0
0x0000209b      e97ffbffff     jmp 0x1c1f
0x000020a0      833d55802000.  cmp dword [obj.countmode], 0            ; [0x20a0fc:4]=0
0x000020a7      0f85c5fcffff   jne 0x1d72
0x000020ad      803d45802000.  cmp byte [obj.output_later_repeated], 0 ; [0x20a0f9:1]=0
0x000020b4      ba05000000     mov edx, 5
0x000020b9      488d35785000.  lea rsi, str.printing_all_duplicated_lines_and_repeat_counts_is_meaningless ; 0x7138 ; "printing all duplicated lines and repeat counts is meaningless"
0x000020c0      0f84acfcffff   je 0x1d72
0x000020c6      e976040000     jmp 0x2541
0x000020cb      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x000020d2      84c0           test al, al
0x000020d4      0f8534feffff   jne 0x1f0e
0x000020da      803d18802000.  cmp byte [obj.output_later_repeated], 0 ; [0x20a0f9:1]=0
0x000020e1      0f848bfdffff   je 0x1e72
0x000020e7      4c89ef         mov rdi, r13
0x000020ea      4c89e2         mov rdx, r12
0x000020ed      89ce           mov esi, ecx
0x000020ef      e8cc060000     call sym.writeline
0x000020f4      4889e8         mov rax, rbp
0x000020f7      48895c2408     mov qword [rsp + 8], rbx
0x000020fc      4c89ed         mov rbp, r13
0x000020ff      4c89742410     mov qword [rsp + 0x10], r14
0x00002104      4989c5         mov r13, rax
0x00002107      e966fdffff     jmp 0x1e72
0x0000210c      0f1f4000       nop dword [rax]
0x00002110      8b15de7f2000   mov edx, dword [obj.delimit_groups]     ; [0x20a0f4:4]=0
0x00002116      85d2           test edx, edx
0x00002118      74b1           je 0x20cb
0x0000211a      84c0           test al, al
0x0000211c      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00002123      74b5           je 0x20da
0x00002125      c644242800     mov byte [rsp + 0x28], 0
0x0000212a      49c7c4feffff.  mov r12, 0xfffffffffffffffe
0x00002131      e9d8fdffff     jmp 0x1f0e
0x00002136      4983fc01       cmp r12, 1
0x0000213a      759e           jne 0x20da
0x0000213c      83fa01         cmp edx, 1
0x0000213f      740c           je 0x214d
0x00002141      83fa02         cmp edx, 2
0x00002144      7594           jne 0x20da
0x00002146      807c242800     cmp byte [rsp + 0x28], 0
0x0000214b      758d           jne 0x20da
0x0000214d      488b3d547f20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002154      488b4728       mov rax, qword [rdi + 0x28]
0x00002158      483b4730       cmp rax, qword [rdi + 0x30]
0x0000215c      0f8364030000   jae 0x24c6
0x00002162      0fb6742427     movzx esi, byte [rsp + 0x27]
0x00002167      488d5001       lea rdx, [rax + 1]
0x0000216b      48895728       mov qword [rdi + 0x28], rdx
0x0000216f      408830         mov byte [rax], sil
0x00002172      e963ffffff     jmp 0x20da
0x00002177      c6057c7f2000.  mov byte [obj.output_first_repeated], 0 ; [0x20a0fa:1]=0
0x0000217e      41bd01000000   mov r13d, 1
0x00002184      e996faffff     jmp 0x1c1f
0x00002189      c6056b7f2000.  mov byte [obj.output_unique], 0         ; [0x20a0fb:1]=0
0x00002190      41bd01000000   mov r13d, 1
0x00002196      e984faffff     jmp 0x1c1f
0x0000219b      c605567f2000.  mov byte [obj.ignore_case], 1           ; [0x20a0f8:1]=0
0x000021a2      e978faffff     jmp 0x1c1f
0x000021a7      837c240802     cmp dword [rsp + 8], 2
0x000021ac      0f843a020000   je 0x23ec
0x000021b2      488b05577f20.  mov rax, qword [obj.skip_fields]        ; [0x20a110:8]=0
0x000021b9      48b999999999.  movabs rcx, 0x1999999999999999
0x000021c3      4839c8         cmp rax, rcx
0x000021c6      0f8690010000   jbe 0x235c
0x000021cc      488b442410     mov rax, qword [rsp + 0x10]
0x000021d1      c74424080100.  mov dword [rsp + 8], 1
0x000021d9      488905307f20.  mov qword [obj.skip_fields], rax        ; [0x20a110:8]=0
0x000021e0      e935faffff     jmp 0x1c1a
0x000021e5      4883ec08       sub rsp, 8
0x000021e9      488b3db87e20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000021f0      488b0d197e20.  mov rcx, qword [obj.Version]            ; [0x20a010:8]=0x719c str.8.31
0x000021f7      6a00           push 0
0x000021f9      4c8d0d614600.  lea r9, str.David_MacKenzie             ; 0x6861 ; "David MacKenzie"
0x00002200      4c8d056a4600.  lea r8, str.Richard_M._Stallman         ; 0x6871 ; "Richard M. Stallman"
0x00002207      488d15be4500.  lea rdx, str.GNU_coreutils              ; 0x67cc ; "GNU coreutils"
0x0000220e      488d353c4500.  lea rsi, str.uniq                       ; 0x6751 ; "uniq"
0x00002215      31c0           xor eax, eax
0x00002217      e8d4360000     call sym.version_etc
0x0000221c      31ff           xor edi, edi
0x0000221e      e82df8ffff     call sym.imp.exit
0x00002223      c644242700     mov byte [rsp + 0x27], 0
0x00002228      e9f2f9ffff     jmp 0x1c1f
0x0000222d      488b157c7e20.  mov rdx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002234      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00002239      488d35c54f00.  lea rsi, [0x00007205]                   ; "r"
0x00002240      e88b100000     call sym.freopen_safer
0x00002245      4885c0         test rax, rax
0x00002248      0f8559fbffff   jne 0x1da7
0x0000224e      488b542430     mov rdx, qword [rsp + 0x30]
0x00002253      be03000000     mov esi, 3
0x00002258      31ff           xor edi, edi
0x0000225a      e8e12f0000     call sym.quotearg_n_style_colon
0x0000225f      4889c3         mov rbx, rax
0x00002262      e829f5ffff     call sym.imp.__errno_location
0x00002267      8b30           mov esi, dword [rax]
0x00002269      488d15884f00.  lea rdx, [0x000071f8]                   ; "%s"
0x00002270      4889d9         mov rcx, rbx
0x00002273      bf01000000     mov edi, 1
0x00002278      31c0           xor eax, eax
0x0000227a      e881f7ffff     call sym.imp.error
0x0000227f      c7056b7e2000.  mov dword [obj.delimit_groups], 0       ; [0x20a0f4:4]=0
0x00002289      41bd01000000   mov r13d, 1
0x0000228f      e98bf9ffff     jmp 0x1c1f
0x00002294      c705527e2000.  mov dword [obj.grouping], 3             ; [0x20a0f0:4]=0
0x0000229e      e97cf9ffff     jmp 0x1c1f
0x000022a3      c644240800     mov byte [rsp + 8], 0
0x000022a8      488b35017e20.  mov rsi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x000022af      f60610         test byte [rsi], 0x10
0x000022b2      0f854e010000   jne 0x2406
0x000022b8      8b542418       mov edx, dword [rsp + 0x18]
0x000022bc      4889ef         mov rdi, rbp
0x000022bf      e82c120000     call sym.readlinebuffer_delim
0x000022c4      4885c0         test rax, rax
0x000022c7      0f8439010000   je 0x2406
0x000022cd      4c8b6508       mov r12, qword [rbp + 8]
0x000022d1      4c8b7d10       mov r15, qword [rbp + 0x10]
0x000022d5      4c89e7         mov rdi, r12
0x000022d8      4c89fe         mov rsi, r15
0x000022db      4983ec01       sub r12, 1
0x000022df      e85c050000     call sym.find_field.isra.2
0x000022e4      4989c6         mov r14, rax
0x000022e7      4c29f8         sub rax, r15
0x000022ea      4929c4         sub r12, rax
0x000022ed      49837d0800     cmp qword [r13 + 8], 0
0x000022f2      0f85c5000000   jne 0x23bd
0x000022f8      8b05f27d2000   mov eax, dword [obj.grouping]           ; [0x20a0f0:4]=0
0x000022fe      85c0           test eax, eax
0x00002300      7425           je 0x2327
0x00002302      83f801         cmp eax, 1
0x00002305      0f845e010000   je 0x2469
0x0000230b      83f804         cmp eax, 4
0x0000230e      0f8455010000   je 0x2469
0x00002314      807c240800     cmp byte [rsp + 8], 0
0x00002319      740c           je 0x2327
0x0000231b      83e802         sub eax, 2
0x0000231e      83f801         cmp eax, 1
0x00002321      0f8642010000   jbe 0x2469
0x00002327      488b5508       mov rdx, qword [rbp + 8]
0x0000232b      488b7d10       mov rdi, qword [rbp + 0x10]
0x0000232f      be01000000     mov esi, 1
0x00002334      488b0d6d7d20.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000233b      e880f6ffff     call sym.imp.fwrite_unlocked
0x00002340      4889e8         mov rax, rbp
0x00002343      885c2408       mov byte [rsp + 8], bl
0x00002347      4c89ed         mov rbp, r13
0x0000234a      4c89642438     mov qword [rsp + 0x38], r12
0x0000234f      4c89742428     mov qword [rsp + 0x28], r14
0x00002354      4989c5         mov r13, rax
0x00002357      e94cffffff     jmp 0x22a8
0x0000235c      486bd00a       imul rdx, rax, 0xa
0x00002360      8d4dd0         lea ecx, [rbp - 0x30]
0x00002363      4863c9         movsxd rcx, ecx
0x00002366      4801ca         add rdx, rcx
0x00002369      4839d0         cmp rax, rdx
0x0000236c      0f875afeffff   ja 0x21cc
0x00002372      eb7e           jmp 0x23f2
0x00002374      488b05357d20.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x0000237b      f60020         test byte [rax], 0x20
0x0000237e      0f84bdfbffff   je 0x1f41
0x00002384      488b742430     mov rsi, qword [rsp + 0x30]
0x00002389      bf04000000     mov edi, 4
0x0000238e      e8ad2d0000     call sym.quotearg_style
0x00002393      488d35ed4400.  lea rsi, str.error_reading__s           ; 0x6887 ; "error reading %s"
0x0000239a      4889c3         mov rbx, rax
0x0000239d      ba05000000     mov edx, 5
0x000023a2      31ff           xor edi, edi
0x000023a4      e857f4ffff     call sym.imp.dcgettext
0x000023a9      4889d9         mov rcx, rbx
0x000023ac      4889c2         mov rdx, rax
0x000023af      31f6           xor esi, esi
0x000023b1      bf01000000     mov edi, 1
0x000023b6      31c0           xor eax, eax
0x000023b8      e843f6ffff     call sym.imp.error
0x000023bd      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000023c2      488b742428     mov rsi, qword [rsp + 0x28]
0x000023c7      4c89e2         mov rdx, r12
0x000023ca      4c89f7         mov rdi, r14
0x000023cd      e8ce020000     call sym.different
0x000023d2      84c0           test al, al
0x000023d4      0f851effffff   jne 0x22f8
0x000023da      833d0f7d2000.  cmp dword [obj.grouping], 0             ; [0x20a0f0:4]=0
0x000023e1      0f84c1feffff   je 0x22a8
0x000023e7      e93bffffff     jmp 0x2327
0x000023ec      8d50d0         lea edx, [rax - 0x30]
0x000023ef      4863d2         movsxd rdx, edx
0x000023f2      488915177d20.  mov qword [obj.skip_fields], rdx        ; [0x20a110:8]=0
0x000023f9      c74424080100.  mov dword [rsp + 8], 1
0x00002401      e914f8ffff     jmp 0x1c1a
0x00002406      8b05e47c2000   mov eax, dword [obj.grouping]           ; [0x20a0f0:4]=0
0x0000240c      83e802         sub eax, 2
0x0000240f      83e0fd         and eax, 0xfffffffd                     ; 4294967293
0x00002412      0f8536fbffff   jne 0x1f4e
0x00002418      807c240800     cmp byte [rsp + 8], 0
0x0000241d      0f842bfbffff   je 0x1f4e
0x00002423      488b3d7e7c20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000242a      488b4728       mov rax, qword [rdi + 0x28]
0x0000242e      483b4730       cmp rax, qword [rdi + 0x30]
0x00002432      0f83e8000000   jae 0x2520
0x00002438      0fb64c2427     movzx ecx, byte [rsp + 0x27]
0x0000243d      488d5001       lea rdx, [rax + 1]
0x00002441      48895728       mov qword [rdi + 0x28], rdx
0x00002445      8808           mov byte [rax], cl
0x00002447      e902fbffff     jmp 0x1f4e
0x0000244c      e81f120000     call sym.posix2_version
0x00002451      2db00d0300     sub eax, 0x30db0
0x00002456      3db8020000     cmp eax, 0x2b8
0x0000245b      7735           ja 0x2492
0x0000245d      488b3d5c7c20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x00002464      e951fbffff     jmp 0x1fba
0x00002469      488b3d387c20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002470      488b4728       mov rax, qword [rdi + 0x28]
0x00002474      483b4730       cmp rax, qword [rdi + 0x30]
0x00002478      0f8394000000   jae 0x2512
0x0000247e      0fb64c2427     movzx ecx, byte [rsp + 0x27]
0x00002483      488d5001       lea rdx, [rax + 1]
0x00002487      48895728       mov qword [rdi + 0x28], rdx
0x0000248b      8808           mov byte [rax], cl
0x0000248d      e995feffff     jmp 0x2327
0x00002492      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00002497      488b3d227c20.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x0000249e      4c8d05fc5200.  lea r8, [0x000077a1]
0x000024a5      31f6           xor esi, esi
0x000024a7      ba0a000000     mov edx, 0xa
0x000024ac      e88f390000     call sym.xstrtoul
0x000024b1      85c0           test eax, eax
0x000024b3      75a8           jne 0x245d
0x000024b5      488b442460     mov rax, qword [rsp + 0x60]
0x000024ba      488905477c20.  mov qword [obj.skip_chars], rax         ; [0x20a108:8]=0
0x000024c1      e959f7ffff     jmp 0x1c1f
0x000024c6      8b742418       mov esi, dword [rsp + 0x18]
0x000024ca      894c2438       mov dword [rsp + 0x38], ecx
0x000024ce      e8adf3ffff     call sym.imp.__overflow
0x000024d3      8b4c2438       mov ecx, dword [rsp + 0x38]
0x000024d7      e9fefbffff     jmp 0x20da
0x000024dc      e82f2f0000     call sym.quote
0x000024e1      488d35514300.  lea rsi, str.extra_operand__s           ; 0x6839 ; "extra operand %s"
0x000024e8      4889c3         mov rbx, rax
0x000024eb      ba05000000     mov edx, 5
0x000024f0      31ff           xor edi, edi
0x000024f2      e809f3ffff     call sym.imp.dcgettext
0x000024f7      31ff           xor edi, edi
0x000024f9      4889c2         mov rdx, rax
0x000024fc      4889d9         mov rcx, rbx
0x000024ff      31f6           xor esi, esi
0x00002501      31c0           xor eax, eax
0x00002503      e8f8f4ffff     call sym.imp.error
0x00002508      bf01000000     mov edi, 1
0x0000250d      e80e040000     call sym.usage
0x00002512      8b742418       mov esi, dword [rsp + 0x18]
0x00002516      e865f3ffff     call sym.imp.__overflow
0x0000251b      e907feffff     jmp 0x2327
0x00002520      8b742418       mov esi, dword [rsp + 0x18]
0x00002524      e857f3ffff     call sym.imp.__overflow
0x00002529      e920faffff     jmp 0x1f4e
0x0000252e      31ff           xor edi, edi
0x00002530      e8eb030000     call sym.usage
0x00002535      488d35944b00.  lea rsi, str.group_is_mutually_exclusive_with__c__d__D__u ; 0x70d0 ; "--group is mutually exclusive with -c/-d/-D/-u"
0x0000253c      ba05000000     mov edx, 5
0x00002541      31ff           xor edi, edi
0x00002543      e8b8f2ffff     call sym.imp.dcgettext
0x00002548      31f6           xor esi, esi
0x0000254a      4889c2         mov rdx, rax
0x0000254d      31ff           xor edi, edi
0x0000254f      31c0           xor eax, eax
0x00002551      e8aaf4ffff     call sym.imp.error
0x00002556      e972f7ffff     jmp 0x1ccd
0x0000255b      e8d0f2ffff     call sym.imp.__stack_chk_fail
0x00002560      4889da         mov rdx, rbx
0x00002563      be03000000     mov esi, 3
0x00002568      31ff           xor edi, edi
0x0000256a      e8d12c0000     call sym.quotearg_n_style_colon
0x0000256f      4889c3         mov rbx, rax
0x00002572      e819f2ffff     call sym.imp.__errno_location
0x00002577      8b30           mov esi, dword [rax]
0x00002579      488d15784c00.  lea rdx, [0x000071f8]                   ; "%s"
0x00002580      4889d9         mov rcx, rbx
0x00002583      bf01000000     mov edi, 1
0x00002588      31c0           xor eax, eax
0x0000258a      e871f4ffff     call sym.imp.error
0x0000258f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00002590      31ed           xor ebp, ebp
0x00002592      4989d1         mov r9, rdx
0x00002595      5e             pop rsi
0x00002596      4889e2         mov rdx, rsp
0x00002599      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000259d      50             push rax
0x0000259e      54             push rsp
0x0000259f      4c8d056a4100.  lea r8, sym.__libc_csu_fini             ; 0x6710
0x000025a6      488d0df34000.  lea rcx, sym.__libc_csu_init            ; 0x66a0 ; "AWAVI\x89\xd7AUATL\x8d%\xfe2 "
0x000025ad      488d3d0cf5ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1ac0 ; "AWAVA\x89\xfeAUATH\x8d='M"
0x000025b4      ff15267a2000   call qword [reloc.__libc_start_main]    ; [0x209fe0:8]=0
0x000025ba      f4             hlt
0x000025bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000025c0      488d3dd97a20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x000025c7      55             push rbp
0x000025c8      488d05d17a20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x000025cf      4839f8         cmp rax, rdi
0x000025d2      4889e5         mov rbp, rsp
0x000025d5      7419           je 0x25f0
0x000025d7      488b05fa7920.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fd8:8]=0
0x000025de      4885c0         test rax, rax
0x000025e1      740d           je 0x25f0
0x000025e3      5d             pop rbp
0x000025e4      ffe0           jmp rax
0x000025e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000025f0      5d             pop rbp
0x000025f1      c3             ret
0x000025f2      0f1f4000       nop dword [rax]
0x000025f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002600      488d3d997a20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002607      488d35927a20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x0000260e      55             push rbp
0x0000260f      4829fe         sub rsi, rdi
0x00002612      4889e5         mov rbp, rsp
0x00002615      48c1fe03       sar rsi, 3
0x00002619      4889f0         mov rax, rsi
0x0000261c      48c1e83f       shr rax, 0x3f
0x00002620      4801c6         add rsi, rax
0x00002623      48d1fe         sar rsi, 1
0x00002626      7418           je 0x2640
0x00002628      488b05c17920.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209ff0:8]=0
0x0000262f      4885c0         test rax, rax
0x00002632      740c           je 0x2640
0x00002634      5d             pop rbp
0x00002635      ffe0           jmp rax
0x00002637      660f1f840000.  nop word [rax + rax]
0x00002640      5d             pop rbp
0x00002641      c3             ret
0x00002642      0f1f4000       nop dword [rax]
0x00002646      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002650      803d917a2000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00002657      752f           jne 0x2688
0x00002659      48833d977920.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209ff8:8]=0
0x00002661      55             push rbp
0x00002662      4889e5         mov rbp, rsp
0x00002665      740c           je 0x2673
0x00002667      488b3d9a7920.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x0000266e      e83df4ffff     call sym..plt.got
0x00002673      e848ffffff     call sym.deregister_tm_clones
0x00002678      c605697a2000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x0000267f      5d             pop rbp
0x00002680      c3             ret
0x00002681      0f1f80000000.  nop dword [rax]
0x00002688      f3c3           ret
0x0000268a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002690      55             push rbp
0x00002691      4889e5         mov rbp, rsp
0x00002694      5d             pop rbp
0x00002695      e966ffffff     jmp sym.register_tm_clones
0x0000269a      660f1f440000   nop word [rax + rax]
;-- different:
0x000026a0      4883ec08       sub rsp, 8                              ; /src:290
0x000026a4      488b05557a20.  mov rax, qword [obj.check_chars]        ; /src:291 ; [0x20a100:8]=0
0x000026ab      4839d0         cmp rax, rdx
0x000026ae      480f46d0       cmovbe rdx, rax
0x000026b2      4839c8         cmp rax, rcx
0x000026b5      480f46c8       cmovbe rcx, rax
0x000026b9      0fb605387a20.  movzx eax, byte [obj.ignore_case]       ; /src:296 ; [0x20a0f8:1]=0
0x000026c0      4989d0         mov r8, rdx
0x000026c3      84c0           test al, al
0x000026c5      7411           je 0x26d8
0x000026c7      4839ca         cmp rdx, rcx                            ; /src:299
0x000026ca      7434           je 0x2700
0x000026cc      4883c408       add rsp, 8                              ; /src:305
0x000026d0      c3             ret
0x000026d1      0f1f80000000.  nop dword [rax]
0x000026d8      803d397a2000.  cmp byte [obj.hard_LC_COLLATE], 0       ; /src:301 ; [0x20a118:1]=0
0x000026df      752f           jne 0x2710
0x000026e1      4839ca         cmp rdx, rcx                            ; /src:304
0x000026e4      b801000000     mov eax, 1
0x000026e9      75e1           jne 0x26cc
0x000026eb      e810f2ffff     call sym.imp.memcmp
0x000026f0      85c0           test eax, eax
0x000026f2      0f95c0         setne al
0x000026f5      4883c408       add rsp, 8                              ; /src:305
0x000026f9      c3             ret
0x000026fa      660f1f440000   nop word [rax + rax]
0x00002700      e81b0f0000     call sym.memcasecmp                     ; /src:299
0x00002705      85c0           test eax, eax
0x00002707      0f95c0         setne al
0x0000270a      4883c408       add rsp, 8                              ; /src:305
0x0000270e      c3             ret
0x0000270f      90             nop
0x00002710      4889f2         mov rdx, rsi                            ; /src:302
0x00002713      4c89c6         mov rsi, r8
0x00002716      e885360000     call sym.xmemcoll
0x0000271b      85c0           test eax, eax
0x0000271d      0f95c0         setne al
0x00002720      4883c408       add rsp, 8                              ; /src:305
0x00002724      c3             ret
0x00002725      90             nop
0x00002726      662e0f1f8400.  nop word cs:[rax + rax]
;-- size_opt:
0x00002730      55             push rbp                                ; /src:242
0x00002731      53             push rbx
0x00002732      4c8d05685000.  lea r8, [0x000077a1]                    ; /src:246
0x00002739      4889f5         mov rbp, rsi                            ; /src:242
0x0000273c      ba0a000000     mov edx, 0xa                            ; /src:246
0x00002741      31f6           xor esi, esi
0x00002743      4883ec18       sub rsp, 0x18                           ; /src:242
0x00002747      4889fb         mov rbx, rdi
0x0000274a      4889e1         mov rcx, rsp                            ; /src:246
0x0000274d      64488b042528.  mov rax, qword fs:[0x28]                ; /src:242
0x00002756      4889442408     mov qword [rsp + 8], rax
0x0000275b      31c0           xor eax, eax
0x0000275d      e8de360000     call sym.xstrtoul                       ; /src:246
0x00002762      83f801         cmp eax, 1
0x00002765      771b           ja 0x2782
0x00002767      488b542408     mov rdx, qword [rsp + 8]                ; /src:257
0x0000276c      644833142528.  xor rdx, qword fs:[0x28]
0x00002775      488b0424       mov rax, qword [rsp]
0x00002779      7531           jne 0x27ac
0x0000277b      4883c418       add rsp, 0x18
0x0000277f      5b             pop rbx
0x00002780      5d             pop rbp
0x00002781      c3             ret
0x00002782      ba05000000     mov edx, 5                              ; /src:253
0x00002787      4889ee         mov rsi, rbp
0x0000278a      31ff           xor edi, edi
0x0000278c      e86ff0ffff     call sym.imp.dcgettext
0x00002791      488d15ac3f00.  lea rdx, str.s:__s                      ; 0x6744 ; "%s: %s"
0x00002798      4989c0         mov r8, rax
0x0000279b      4889d9         mov rcx, rbx
0x0000279e      31f6           xor esi, esi
0x000027a0      bf01000000     mov edi, 1
0x000027a5      31c0           xor eax, eax
0x000027a7      e854f2ffff     call sym.imp.error
0x000027ac      e87ff0ffff     call sym.imp.__stack_chk_fail           ; /src:257
0x000027b1      0f1f440000     nop dword [rax + rax]
0x000027b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- writeline:
0x000027c0      4885d2         test rdx, rdx                           ; /src:316
0x000027c3      753b           jne 0x2800
0x000027c5      0fb6052f7920.  movzx eax, byte [obj.output_unique]     ; /src:317 ; [0x20a0fb:1]=0
0x000027cc      83f001         xor eax, 1
0x000027cf      84c0           test al, al
0x000027d1      7540           jne 0x2813
0x000027d3      8b0d23792000   mov ecx, dword [obj.countmode]          ; /src:322 ; [0x20a0fc:4]=0
0x000027d9      53             push rbx                                ; /src:316
0x000027da      4889fb         mov rbx, rdi
0x000027dd      85c9           test ecx, ecx                           ; /src:322
0x000027df      7447           je 0x2828
0x000027e1      488b5308       mov rdx, qword [rbx + 8]                ; /src:325
0x000027e5      488b7b10       mov rdi, qword [rbx + 0x10]
0x000027e9      be01000000     mov esi, 1
0x000027ee      5b             pop rbx                                 ; /src:326
0x000027ef      488b0db27820.  mov rcx, qword [obj.stdout]             ; /src:325 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000027f6      e9c5f1ffff     jmp sym.imp.fwrite_unlocked
0x000027fb      0f1f440000     nop dword [rax + rax]
0x00002800      4084f6         test sil, sil                           ; /src:317
0x00002803      7513           jne 0x2818
0x00002805      0fb605ee7820.  movzx eax, byte [obj.output_first_repeated] ; [0x20a0fa:1]=0
0x0000280c      83f001         xor eax, 1
0x0000280f      84c0           test al, al
0x00002811      74c0           je 0x27d3
0x00002813      f3c3           ret
0x00002815      0f1f00         nop dword [rax]
0x00002818      0fb605da7820.  movzx eax, byte [obj.output_later_repeated] ; [0x20a0f9:1]=0
0x0000281f      83f001         xor eax, 1
0x00002822      ebab           jmp 0x27cf
0x00002824      0f1f4000       nop dword [rax]
0x00002828      488d351c3f00.  lea rsi, str.7lu                        ; /coreutils-8.31/lib:104 ; 0x674b ; "%7lu "
0x0000282f      4883c201       add rdx, 1                              ; /src:323
0x00002833      bf01000000     mov edi, 1                              ; /coreutils-8.31/lib:104
0x00002838      e8b3f1ffff     call sym.imp.__printf_chk
0x0000283d      eba2           jmp 0x27e1
0x0000283f      90             nop
;-- find_field.isra.2:
0x00002840      4156           push r14                                ; /src:263
0x00002842      4155           push r13
0x00002844      4989f6         mov r14, rsi
0x00002847      4c8b2dc27820.  mov r13, qword [obj.skip_fields]        ; /src:270 ; [0x20a110:8]=0
0x0000284e      4154           push r12                                ; /src:263
0x00002850      55             push rbp
0x00002851      488d6fff       lea rbp, [rdi - 1]                      ; /src:267
0x00002855      53             push rbx                                ; /src:263
0x00002856      4d85ed         test r13, r13                           ; /src:270
0x00002859      0f84b0000000   je 0x290f
0x0000285f      4885ed         test rbp, rbp
0x00002862      0f84a7000000   je 0x290f
0x00002868      4531e4         xor r12d, r12d
0x0000286b      31db           xor ebx, ebx                            ; /src:268
0x0000286d      0f1f00         nop dword [rax]
0x00002870      e82bf2ffff     call sym.imp.__ctype_b_loc              ; .//ib:162
0x00002875      488b38         mov rdi, qword [rax]
0x00002878      0f1f84000000.  nop dword [rax + rax]
0x00002880      410fb60c1e     movzx ecx, byte [r14 + rbx]
0x00002885      4889ca         mov rdx, rcx
0x00002888      0fb70c4f       movzx ecx, word [rdi + rcx*2]
0x0000288c      80fa0a         cmp dl, 0xa
0x0000288f      746f           je 0x2900
0x00002891      f6c101         test cl, 1
0x00002894      756a           jne 0x2900
0x00002896      4839dd         cmp rbp, rbx
0x00002899      771f           ja 0x28ba
0x0000289b      eb3b           jmp 0x28d8
0x0000289d      0f1f00         nop dword [rax]
0x000028a0      83e101         and ecx, 1
0x000028a3      751a           jne 0x28bf
0x000028a5      4883c301       add rbx, 1
0x000028a9      4839dd         cmp rbp, rbx
0x000028ac      762a           jbe 0x28d8
0x000028ae      410fb6041e     movzx eax, byte [r14 + rbx]
0x000028b3      0fb70c47       movzx ecx, word [rdi + rax*2]
0x000028b7      4889c2         mov rdx, rax
0x000028ba      80fa0a         cmp dl, 0xa
0x000028bd      75e1           jne 0x28a0
0x000028bf      4983c401       add r12, 1
0x000028c3      4d39ec         cmp r12, r13
0x000028c6      7310           jae 0x28d8
0x000028c8      4839dd         cmp rbp, rbx
0x000028cb      760b           jbe 0x28d8
0x000028cd      4839dd         cmp rbp, rbx
0x000028d0      779e           ja 0x2870
0x000028d2      660f1f440000   nop word [rax + rax]
0x000028d8      4829dd         sub rbp, rbx
0x000028db      48392d267820.  cmp qword [obj.skip_chars], rbp         ; [0x20a108:8]=0
0x000028e2      480f462d1e78.  cmovbe rbp, qword [obj.skip_chars]
0x000028ea      4801eb         add rbx, rbp
0x000028ed      498d041e       lea rax, [r14 + rbx]
0x000028f1      5b             pop rbx
0x000028f2      5d             pop rbp
0x000028f3      415c           pop r12                                 ; /src:-107
0x000028f5      415d           pop r13
0x000028f7      415e           pop r14
0x000028f9      c3             ret
0x000028fa      660f1f440000   nop word [rax + rax]
0x00002900      4883c301       add rbx, 1
0x00002904      4839dd         cmp rbp, rbx
0x00002907      0f8773ffffff   ja 0x2880
0x0000290d      ebc9           jmp 0x28d8
0x0000290f      31db           xor ebx, ebx
0x00002911      ebc8           jmp 0x28db
0x00002913      0f1f00         nop dword [rax]
0x00002916      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00002920      4155           push r13
0x00002922      4154           push r12
0x00002924      ba05000000     mov edx, 5
0x00002929      55             push rbp
0x0000292a      53             push rbx
0x0000292b      89fd           mov ebp, edi
0x0000292d      4881ec880000.  sub rsp, 0x88
0x00002934      488b1df57720.  mov rbx, qword [obj.program_name]       ; [0x20a130:8]=0
0x0000293b      64488b042528.  mov rax, qword fs:[0x28]
0x00002944      4889442478     mov qword [rsp + 0x78], rax
0x00002949      31c0           xor eax, eax
0x0000294b      85ff           test edi, edi
0x0000294d      742e           je 0x297d
0x0000294f      488d35c23f00.  lea rsi, str.Try___s___help__for_more_information. ; 0x6918 ; "Try '%s --help' for more information.\n"
0x00002956      31ff           xor edi, edi
0x00002958      e8a3eeffff     call sym.imp.dcgettext
0x0000295d      488b3d7c7720.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002964      4889c2         mov rdx, rax
0x00002967      4889d9         mov rcx, rbx
0x0000296a      be01000000     mov esi, 1
0x0000296f      31c0           xor eax, eax
0x00002971      e8faf0ffff     call sym.imp.__fprintf_chk
0x00002976      89ef           mov edi, ebp
0x00002978      e8d3f0ffff     call sym.imp.exit
0x0000297d      488d35bc3f00.  lea rsi, str.Usage:__s__OPTION_...__INPUT__OUTPUT ; 0x6940 ; "Usage: %s [OPTION]... [INPUT [OUTPUT]]\n"
0x00002984      31ff           xor edi, edi
0x00002986      e875eeffff     call sym.imp.dcgettext
0x0000298b      4889da         mov rdx, rbx
0x0000298e      4889c6         mov rsi, rax
0x00002991      bf01000000     mov edi, 1
0x00002996      31c0           xor eax, eax
0x00002998      e853f0ffff     call sym.imp.__printf_chk
0x0000299d      488b1d047720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000029a4      488d35bd3f00.  lea rsi, str.Filter_adjacent_matching_lines_from_INPUT__or_standard_input____writing_to_OUTPUT__or_standard_output_.____With_no_options__matching_lines_are_merged_to_the_first_occurrence. ; /src:-219 ; 0x6968 ; "Filter adjacent matching lines from INPUT (or standard input),\nwriting to OUTPUT (or standard output).\n\nWith no options, matching lines are merged to the first occurrence.\n"
0x000029ab      ba05000000     mov edx, 5
0x000029b0      31ff           xor edi, edi
0x000029b2      e849eeffff     call sym.imp.dcgettext
0x000029b7      4889de         mov rsi, rbx
0x000029ba      4889c7         mov rdi, rax
0x000029bd      e84eefffff     call sym.imp.fputs_unlocked
0x000029c2      488b1ddf7620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000029c9      488d35484000.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; /src:-215 ; 0x6a18 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x000029d0      ba05000000     mov edx, 5
0x000029d5      31ff           xor edi, edi
0x000029d7      e824eeffff     call sym.imp.dcgettext
0x000029dc      4889de         mov rsi, rbx
0x000029df      4889c7         mov rdi, rax
0x000029e2      e829efffff     call sym.imp.fputs_unlocked
0x000029e7      488b1dba7620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000029ee      488d35734000.  lea rsi, str.c____count___________prefix_lines_by_the_number_of_occurrences_____d____repeated________only_print_duplicate_lines__one_for_each_group ; /src:-209 ; 0x6a68 ; "  -c, --count           prefix lines by the number of occurrences\n  -d, --repeated        only print duplicate lines, one for each group\n"
0x000029f5      ba05000000     mov edx, 5
0x000029fa      31ff           xor edi, edi
0x000029fc      e8ffedffff     call sym.imp.dcgettext
0x00002a01      4889de         mov rsi, rbx
0x00002a04      4889c7         mov rdi, rax
0x00002a07      e804efffff     call sym.imp.fputs_unlocked
0x00002a0c      488b1d957620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002a13      488d35de4000.  lea rsi, str.D____________________print_all_duplicate_lines__________all_repeated__METHOD___like__D__but_allow_separating_groups___________________________________with_an_empty_line____________________________________METHOD__none_default__prepend_separate ; /src:-206 ; 0x6af8 ; "  -D                    print all duplicate lines\n      --all-repeated[=METHOD]  like -D, but allow separating groups\n                                 with an empty line;\n                                 METHOD={none(default),prepend,separate}\n"
0x00002a1a      ba05000000     mov edx, 5
0x00002a1f      31ff           xor edi, edi
0x00002a21      e8daedffff     call sym.imp.dcgettext
0x00002a26      4889de         mov rsi, rbx
0x00002a29      4889c7         mov rdi, rax
0x00002a2c      e8dfeeffff     call sym.imp.fputs_unlocked
0x00002a31      488b1d707620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002a38      488d35b14100.  lea rsi, str.f____skip_fields_N___avoid_comparing_the_first_N_fields ; /src:-202 ; 0x6bf0 ; "  -f, --skip-fields=N   avoid comparing the first N fields\n"
0x00002a3f      ba05000000     mov edx, 5
0x00002a44      31ff           xor edi, edi
0x00002a46      e8b5edffff     call sym.imp.dcgettext
0x00002a4b      4889de         mov rsi, rbx
0x00002a4e      4889c7         mov rdi, rax
0x00002a51      e8baeeffff     call sym.imp.fputs_unlocked
0x00002a56      488b1d4b7620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002a5d      488d35cc4100.  lea rsi, str.group__METHOD___show_all_items__separating_groups_with_an_empty_line_____________________________METHOD__separate_default__prepend_append_both ; /src:-197 ; 0x6c30 ; "      --group[=METHOD]  show all items, separating groups with an empty line;\n                          METHOD={separate(default),prepend,append,both}\n"
0x00002a64      ba05000000     mov edx, 5
0x00002a69      31ff           xor edi, edi
0x00002a6b      e890edffff     call sym.imp.dcgettext
0x00002a70      4889de         mov rsi, rbx
0x00002a73      4889c7         mov rdi, rax
0x00002a76      e895eeffff     call sym.imp.fputs_unlocked
0x00002a7b      488b1d267620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002a82      488d353f4200.  lea rsi, str.i____ignore_case_____ignore_differences_in_case_when_comparing_____s____skip_chars_N____avoid_comparing_the_first_N_characters_____u____unique__________only_print_unique_lines ; /src:-194 ; 0x6cc8 ; "  -i, --ignore-case     ignore differences in case when comparing\n  -s, --skip-chars=N    avoid comparing the first N characters\n  -u, --unique          only print unique lines\n"
0x00002a89      ba05000000     mov edx, 5
0x00002a8e      31ff           xor edi, edi
0x00002a90      e86bedffff     call sym.imp.dcgettext
0x00002a95      4889de         mov rsi, rbx
0x00002a98      4889c7         mov rdi, rax
0x00002a9b      e870eeffff     call sym.imp.fputs_unlocked
0x00002aa0      488b1d017620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002aa7      488d35d24200.  lea rsi, str.z____zero_terminated_____line_delimiter_is_NUL__not_newline ; /src:-191 ; 0x6d80 ; "  -z, --zero-terminated     line delimiter is NUL, not newline\n"
0x00002aae      ba05000000     mov edx, 5
0x00002ab3      31ff           xor edi, edi
0x00002ab5      e846edffff     call sym.imp.dcgettext
0x00002aba      4889de         mov rsi, rbx
0x00002abd      4889c7         mov rdi, rax
0x00002ac0      e84beeffff     call sym.imp.fputs_unlocked
0x00002ac5      488b1ddc7520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002acc      488d35ed4200.  lea rsi, str.w____check_chars_N___compare_no_more_than_N_characters_in_lines ; /src:-190 ; 0x6dc0 ; "  -w, --check-chars=N   compare no more than N characters in lines\n"
0x00002ad3      ba05000000     mov edx, 5
0x00002ad8      31ff           xor edi, edi
0x00002ada      e821edffff     call sym.imp.dcgettext
0x00002adf      4889de         mov rsi, rbx
0x00002ae2      4889c7         mov rdi, rax
0x00002ae5      e826eeffff     call sym.imp.fputs_unlocked
0x00002aea      488b1db77520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002af1      488d35104300.  lea rsi, str.help_____display_this_help_and_exit ; /src:-189 ; 0x6e08 ; "      --help     display this help and exit\n"
0x00002af8      ba05000000     mov edx, 5
0x00002afd      31ff           xor edi, edi
0x00002aff      e8fcecffff     call sym.imp.dcgettext
0x00002b04      4889de         mov rsi, rbx
0x00002b07      4889c7         mov rdi, rax
0x00002b0a      e801eeffff     call sym.imp.fputs_unlocked
0x00002b0f      488b1d927520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002b16      488d351b4300.  lea rsi, str.version__output_version_information_and_exit ; /src:-184 ; 0x6e38 ; "      --version  output version information and exit\n"
0x00002b1d      ba05000000     mov edx, 5
0x00002b22      31ff           xor edi, edi
0x00002b24      e8d7ecffff     call sym.imp.dcgettext
0x00002b29      4889de         mov rsi, rbx
0x00002b2c      4889c7         mov rdi, rax
0x00002b2f      e8dcedffff     call sym.imp.fputs_unlocked
0x00002b34      488b1d6d7520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002b3b      488d352e4300.  lea rsi, str.A_field_is_a_run_of_blanks__usually_spaces_and_or_TABs___then_non_blank__characters.__Fields_are_skipped_before_chars. ; 0x6e70 ; "\nA field is a run of blanks (usually spaces and/or TABs), then non-blank\ncharacters.  Fields are skipped before chars.\n"
0x00002b42      ba05000000     mov edx, 5                              ; .//ib:230
0x00002b47      31ff           xor edi, edi
0x00002b49      e8b2ecffff     call sym.imp.dcgettext
0x00002b4e      4889de         mov rsi, rbx
0x00002b51      4889c7         mov rdi, rax
0x00002b54      e8b7edffff     call sym.imp.fputs_unlocked
0x00002b59      488b1d487520.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002b60      488d35814300.  lea rsi, str.Note:__uniq__does_not_detect_repeated_lines_unless_they_are_adjacent.__You_may_want_to_sort_the_input_first__or_use__sort__u__without__uniq_.__Also__comparisons_honor_the_rules_specified_by__LC_COLLATE_. ; 0x6ee8 ; "\nNote: 'uniq' does not detect repeated lines unless they are adjacent.\nYou may want to sort the input first, or use 'sort -u' without 'uniq'.\nAlso, comparisons honor the rules specified by 'LC_COLLATE'.\n"
0x00002b67      ba05000000     mov edx, 5
0x00002b6c      31ff           xor edi, edi
0x00002b6e      e88decffff     call sym.imp.dcgettext
0x00002b73      4889de         mov rsi, rbx
0x00002b76      4889c7         mov rdi, rax
0x00002b79      488d1dd13b00.  lea rbx, str.uniq                       ; 0x6751 ; "uniq"
0x00002b80      e88bedffff     call sym.imp.fputs_unlocked
0x00002b85      488d05ca3b00.  lea rax, [0x00006756]                   ; "["
0x00002b8c      488d0d043c00.  lea rcx, str.sha256sum                  ; 0x6797 ; "sha256sum"
0x00002b93      48c744246000.  mov qword [rsp + 0x60], 0
0x00002b9c      48c744246800.  mov qword [rsp + 0x68], 0
0x00002ba5      4889e2         mov rdx, rsp
0x00002ba8      48890424       mov qword [rsp], rax
0x00002bac      488d05a53b00.  lea rax, str.test_invocation            ; 0x6758 ; "test invocation"
0x00002bb3      48894c2430     mov qword [rsp + 0x30], rcx
0x00002bb8      488d0de23b00.  lea rcx, str.sha384sum                  ; 0x67a1 ; "sha384sum"
0x00002bbf      4889442408     mov qword [rsp + 8], rax
0x00002bc4      488d05053c00.  lea rax, [0x000067d0]                   ; "coreutils"
0x00002bcb      48894c2440     mov qword [rsp + 0x40], rcx
0x00002bd0      488d0dd43b00.  lea rcx, str.sha512sum                  ; 0x67ab ; "sha512sum"
0x00002bd7      4889442410     mov qword [rsp + 0x10], rax
0x00002bdc      488d05853b00.  lea rax, str.Multi_call_invocation      ; 0x6768 ; "Multi-call invocation"
0x00002be3      48894c2450     mov qword [rsp + 0x50], rcx
0x00002be8      4889442418     mov qword [rsp + 0x18], rax
0x00002bed      488d058a3b00.  lea rax, str.sha224sum                  ; 0x677e ; "sha224sum"
0x00002bf4      4889442420     mov qword [rsp + 0x20], rax             ; .//ib:246
0x00002bf9      488d05883b00.  lea rax, str.sha2_utilities             ; 0x6788 ; "sha2 utilities"
0x00002c00      4889442428     mov qword [rsp + 0x28], rax
0x00002c05      4889442438     mov qword [rsp + 0x38], rax
0x00002c0a      4889442448     mov qword [rsp + 0x48], rax
0x00002c0f      4889442458     mov qword [rsp + 0x58], rax             ; .//ib:249
0x00002c14      0f1f4000       nop dword [rax]                         ; /coreutils-8.31/lib:-299
0x00002c18      4883c210       add rdx, 0x10
0x00002c1c      488b3a         mov rdi, qword [rdx]
0x00002c1f      4885ff         test rdi, rdi
0x00002c22      7413           je 0x2c37
0x00002c24      b905000000     mov ecx, 5
0x00002c29      4889de         mov rsi, rbx
0x00002c2c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002c2e      0f97c0         seta al
0x00002c31      1c00           sbb al, 0                               ; .//ib:253
0x00002c33      84c0           test al, al
0x00002c35      75e1           jne 0x2c18
0x00002c37      4c8b6208       mov r12, qword [rdx + 8]
0x00002c3b      31ff           xor edi, edi
0x00002c3d      ba05000000     mov edx, 5                              ; .//ib:254
0x00002c42      488d356c3b00.  lea rsi, str.s_online_help:___s         ; 0x67b5 ; "\n%s online help: <%s>\n"
0x00002c49      4d85e4         test r12, r12
0x00002c4c      0f84c1000000   je 0x2d13
0x00002c52      e8a9ebffff     call sym.imp.dcgettext
0x00002c57      488d0d5a4300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6fb8 ; "https://www.gnu.org/software/coreutils/"
0x00002c5e      488d15673b00.  lea rdx, str.GNU_coreutils              ; .//ib:263 ; 0x67cc ; "GNU coreutils"
0x00002c65      4889c6         mov rsi, rax
0x00002c68      bf01000000     mov edi, 1
0x00002c6d      31c0           xor eax, eax
0x00002c6f      e87cedffff     call sym.imp.__printf_chk
0x00002c74      31f6           xor esi, esi
0x00002c76      bf05000000     mov edi, 5
0x00002c7b      e860edffff     call sym.imp.setlocale
0x00002c80      4885c0         test rax, rax
0x00002c83      741c           je 0x2ca1
0x00002c85      488d354e3b00.  lea rsi, [0x000067da]                   ; "en_"
0x00002c8c      ba03000000     mov edx, 3
0x00002c91      4889c7         mov rdi, rax
0x00002c94      e807ebffff     call sym.imp.strncmp
0x00002c99      85c0           test eax, eax
0x00002c9b      0f8507010000   jne 0x2da8
0x00002ca1      488d35363b00.  lea rsi, str.Full_documentation___s_s   ; 0x67de ; "Full documentation <%s%s>\n"
0x00002ca8      31ff           xor edi, edi
0x00002caa      ba05000000     mov edx, 5
0x00002caf      e84cebffff     call sym.imp.dcgettext
0x00002cb4      488d0d963a00.  lea rcx, str.uniq                       ; 0x6751 ; "uniq"
0x00002cbb      488d15f64200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6fb8 ; "https://www.gnu.org/software/coreutils/"
0x00002cc2      4889c6         mov rsi, rax
0x00002cc5      bf01000000     mov edi, 1
0x00002cca      31c0           xor eax, eax
0x00002ccc      e81fedffff     call sym.imp.__printf_chk
0x00002cd1      4939dc         cmp r12, rbx
0x00002cd4      488d0d973a00.  lea rcx, [0x00006772]                   ; " invocation"
0x00002cdb      488d1dbf4a00.  lea rbx, [0x000077a1]
0x00002ce2      480f44d9       cmove rbx, rcx
0x00002ce6      488d353b4300.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x7028 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002ced      31ff           xor edi, edi
0x00002cef      ba05000000     mov edx, 5
0x00002cf4      e807ebffff     call sym.imp.dcgettext
0x00002cf9      4889d9         mov rcx, rbx
0x00002cfc      4889c6         mov rsi, rax
0x00002cff      4c89e2         mov rdx, r12
0x00002d02      bf01000000     mov edi, 1
0x00002d07      31c0           xor eax, eax
0x00002d09      e8e2ecffff     call sym.imp.__printf_chk
0x00002d0e      e963fcffff     jmp 0x2976
0x00002d13      e8e8eaffff     call sym.imp.dcgettext
0x00002d18      488d0d994200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6fb8 ; "https://www.gnu.org/software/coreutils/"
0x00002d1f      488d15a63a00.  lea rdx, str.GNU_coreutils              ; 0x67cc ; "GNU coreutils"
0x00002d26      4889c6         mov rsi, rax
0x00002d29      bf01000000     mov edi, 1                              ; .//ib:240
0x00002d2e      31c0           xor eax, eax
0x00002d30      e8bbecffff     call sym.imp.__printf_chk               ; .//ib:265
0x00002d35      31f6           xor esi, esi
0x00002d37      bf05000000     mov edi, 5                              ; .//ib:263
0x00002d3c      e89fecffff     call sym.imp.setlocale                  ; /coreutils-8.31/lib:-299
0x00002d41      4885c0         test rax, rax
0x00002d44      7418           je 0x2d5e
0x00002d46      488d358d3a00.  lea rsi, [0x000067da]                   ; "en_"
0x00002d4d      ba03000000     mov edx, 3
0x00002d52      4889c7         mov rdi, rax
0x00002d55      e846eaffff     call sym.imp.strncmp
0x00002d5a      85c0           test eax, eax
0x00002d5c      7543           jne 0x2da1
0x00002d5e      488d35793a00.  lea rsi, str.Full_documentation___s_s   ; .//ib:240 ; 0x67de ; "Full documentation <%s%s>\n"
0x00002d65      ba05000000     mov edx, 5                              ; .//ib:260
0x00002d6a      31ff           xor edi, edi
0x00002d6c      4c8d25de3900.  lea r12, str.uniq                       ; 0x6751 ; "uniq"
0x00002d73      488d1df83900.  lea rbx, [0x00006772]                   ; " invocation"
0x00002d7a      e881eaffff     call sym.imp.dcgettext
0x00002d7f      488d0dcb3900.  lea rcx, str.uniq                       ; 0x6751 ; "uniq"
0x00002d86      488d152b4200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6fb8 ; "https://www.gnu.org/software/coreutils/"
0x00002d8d      4889c6         mov rsi, rax
0x00002d90      bf01000000     mov edi, 1
0x00002d95      31c0           xor eax, eax
0x00002d97      e854ecffff     call sym.imp.__printf_chk
0x00002d9c      e945ffffff     jmp 0x2ce6
0x00002da1      4c8d25a93900.  lea r12, str.uniq                       ; 0x6751 ; "uniq"
0x00002da8      4c8b2df97220.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002daf      488d352a4200.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6fe0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00002db6      31ff           xor edi, edi
0x00002db8      ba05000000     mov edx, 5
0x00002dbd      e83eeaffff     call sym.imp.dcgettext
0x00002dc2      4c89ee         mov rsi, r13
0x00002dc5      4889c7         mov rdi, rax
0x00002dc8      e843ebffff     call sym.imp.fputs_unlocked
0x00002dcd      e9cffeffff     jmp 0x2ca1
0x00002dd2      662e0f1f8400.  nop word cs:[rax + rax]
0x00002ddc      0f1f4000       nop dword [rax]
;-- __argmatch_die:
0x00002de0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00002de5      e936fbffff     jmp sym.usage
0x00002dea      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00002df0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00002df2      4156           push r14
0x00002df4      4989f7         mov r15, rsi
0x00002df7      4155           push r13
0x00002df9      4154           push r12
0x00002dfb      4989cd         mov r13, rcx
0x00002dfe      55             push rbp
0x00002dff      53             push rbx
0x00002e00      4889d5         mov rbp, rdx
0x00002e03      4883ec28       sub rsp, 0x28
0x00002e07      48897c2408     mov qword [rsp + 8], rdi
0x00002e0c      4889542418     mov qword [rsp + 0x18], rdx
0x00002e11      e80aeaffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00002e16      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00002e19      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00002e21      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00002e24      0f84b3000000   je 0x2edd
0x00002e2a      4989c4         mov r12, rax
0x00002e2d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00002e32      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00002e34      eb51           jmp 0x2e87
0x00002e36      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e40      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00002e45      4885c0         test rax, rax
0x00002e48      0f84a2000000   je 0x2ef0
0x00002e4e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00002e52      4c89ea         mov rdx, r13
0x00002e55      4889ee         mov rsi, rbp
0x00002e58      490faffd       imul rdi, r13
0x00002e5c      4801c7         add rdi, rax
0x00002e5f      e89ceaffff     call sym.imp.memcmp
0x00002e64      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00002e66      0fb6442417     movzx eax, byte [rsp + 0x17]
0x00002e6b      b901000000     mov ecx, 1
0x00002e70      0f45c1         cmovne eax, ecx
0x00002e73      88442417       mov byte [rsp + 0x17], al
0x00002e77      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00002e7b      4c01ed         add rbp, r13
0x00002e7e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00002e82      4d85f6         test r14, r14
0x00002e85      7441           je 0x2ec8
0x00002e87      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x00002e8c      4c89e2         mov rdx, r12
0x00002e8f      4c89f7         mov rdi, r14
0x00002e92      e809e9ffff     call sym.imp.strncmp
0x00002e97      85c0           test eax, eax
0x00002e99      75dc           jne 0x2e77
0x00002e9b      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x00002e9e      e87de9ffff     call sym.imp.strlen
0x00002ea3      4c39e0         cmp rax, r12
0x00002ea6      7458           je 0x2f00
0x00002ea8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x00002ead      7591           jne 0x2e40
0x00002eaf      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00002eb3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00002eb7      4c01ed         add rbp, r13
0x00002eba      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00002ebe      4d85f6         test r14, r14
0x00002ec1      75c4           jne 0x2e87
0x00002ec3      0f1f440000     nop dword [rax + rax]
0x00002ec8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x00002ecd      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00002ed4      480f440424     cmove rax, qword [rsp]
0x00002ed9      48890424       mov qword [rsp], rax
0x00002edd      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00002ee1      4883c428       add rsp, 0x28
0x00002ee5      5b             pop rbx
0x00002ee6      5d             pop rbp
0x00002ee7      415c           pop r12
0x00002ee9      415d           pop r13
0x00002eeb      415e           pop r14
0x00002eed      415f           pop r15
0x00002eef      c3             ret
0x00002ef0      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00002ef5      eb80           jmp 0x2e77
0x00002ef7      660f1f840000.  nop word [rax + rax]
0x00002f00      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00002f04      ebd7           jmp 0x2edd
0x00002f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00002f10      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00002f14      4154           push r12
0x00002f16      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00002f1b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00002f1c      4989f4         mov r12, rsi
0x00002f1f      53             push rbx
0x00002f20      4889fd         mov rbp, rdi
0x00002f23      744b           je 0x2f70                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00002f25      488d35904200.  lea rsi, str.ambiguous_argument__s_for__s ; 0x71bc ; "ambiguous argument %s for %s"
0x00002f2c      31ff           xor edi, edi
0x00002f2e      e8cde8ffff     call sym.imp.dcgettext
0x00002f33      4889c3         mov rbx, rax
0x00002f36      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00002f39      bf01000000     mov edi, 1
0x00002f3e      e8ad240000     call sym.quote_n
0x00002f43      4c89e2         mov rdx, r12
0x00002f46      4889c5         mov rbp, rax
0x00002f49      be08000000     mov esi, 8
0x00002f4e      31ff           xor edi, edi
0x00002f50      e8cb200000     call sym.quotearg_n_style
0x00002f55      4989e8         mov r8, rbp
0x00002f58      4889da         mov rdx, rbx
0x00002f5b      4889c1         mov rcx, rax
0x00002f5e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00002f5f      5d             pop rbp
0x00002f60      415c           pop r12
0x00002f62      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00002f64      31ff           xor edi, edi
0x00002f66      31c0           xor eax, eax
0x00002f68      e993eaffff     jmp sym.imp.error
0x00002f6d      0f1f00         nop dword [rax]
0x00002f70      488d352a4200.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x71a1 ; "invalid argument %s for %s"
0x00002f77      31ff           xor edi, edi
0x00002f79      e882e8ffff     call sym.imp.dcgettext
0x00002f7e      4889c3         mov rbx, rax
0x00002f81      ebb3           jmp 0x2f36
0x00002f83      0f1f00         nop dword [rax]
0x00002f86      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00002f90      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00002f92      4156           push r14
0x00002f94      4989fe         mov r14, rdi
0x00002f97      4155           push r13
0x00002f99      4154           push r12
0x00002f9b      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00002f9d      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00002f9e      53             push rbx
0x00002f9f      4889f5         mov rbp, rsi
0x00002fa2      488d35304200.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x71d9 ; "Valid arguments are:"
0x00002fa9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00002fac      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00002fb1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00002fb5      488b1d247120.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002fbc      e83fe8ffff     call sym.imp.dcgettext
0x00002fc1      4889c7         mov rdi, rax
0x00002fc4      4889de         mov rsi, rbx
0x00002fc7      e844e9ffff     call sym.imp.fputs_unlocked
0x00002fcc      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x00002fcf      4d85ff         test r15, r15
0x00002fd2      0f8490000000   je 0x3068
0x00002fd8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x00002fdb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x00002fdd      eb39           jmp 0x3018
0x00002fdf      90             nop
0x00002fe0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00002fe3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00002fe7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x00002fea      e821240000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x00002fef      488b3dea7020.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002ff6      488d15f14100.  lea rdx, [0x000071ee]                   ; "\n  - %s"
0x00002ffd      4889c1         mov rcx, rax
0x00003000      be01000000     mov esi, 1
0x00003005      31c0           xor eax, eax
0x00003007      4c01e5         add rbp, r12
0x0000300a      e861eaffff     call sym.imp.__fprintf_chk
0x0000300f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00003013      4d85ff         test r15, r15
0x00003016      7450           je 0x3068
0x00003018      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000301b      74c3           je 0x2fe0
0x0000301d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00003020      4889ee         mov rsi, rbp
0x00003023      4c89ef         mov rdi, r13
0x00003026      e8d5e8ffff     call sym.imp.memcmp
0x0000302b      85c0           test eax, eax
0x0000302d      75b1           jne 0x2fe0
0x0000302f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00003032      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00003036      4c01e5         add rbp, r12
0x00003039      e8d2230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000303e      488b3d9b7020.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003045      488d15aa4100.  lea rdx, str.s                          ; 0x71f6 ; ", %s"
0x0000304c      4889c1         mov rcx, rax
0x0000304f      be01000000     mov esi, 1
0x00003054      31c0           xor eax, eax
0x00003056      e815eaffff     call sym.imp.__fprintf_chk
0x0000305b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000305f      4d85ff         test r15, r15
0x00003062      75b4           jne 0x3018
0x00003064      0f1f4000       nop dword [rax]
0x00003068      488b3d717020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x0000306f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00003073      483b4730       cmp rax, qword [rdi + 0x30]
0x00003077      731f           jae 0x3098
0x00003079      488d5001       lea rdx, [rax + 1]
0x0000307d      48895728       mov qword [rdi + 0x28], rdx
0x00003081      c6000a         mov byte [rax], 0xa
0x00003084      4883c408       add rsp, 8
0x00003088      5b             pop rbx
0x00003089      5d             pop rbp
0x0000308a      415c           pop r12
0x0000308c      415d           pop r13
0x0000308e      415e           pop r14
0x00003090      415f           pop r15
0x00003092      c3             ret
0x00003093      0f1f440000     nop dword [rax + rax]
0x00003098      4883c408       add rsp, 8
0x0000309c      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x000030a1      5b             pop rbx
0x000030a2      5d             pop rbp
0x000030a3      415c           pop r12
0x000030a5      415d           pop r13
0x000030a7      415e           pop r14
0x000030a9      415f           pop r15
0x000030ab      e9d0e7ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x000030b0      4157           push r15
0x000030b2      4156           push r14
0x000030b4      4989fe         mov r14, rdi
0x000030b7      4155           push r13
0x000030b9      4154           push r12
0x000030bb      4989f4         mov r12, rsi
0x000030be      55             push rbp
0x000030bf      53             push rbx
0x000030c0      4889cd         mov rbp, rcx
0x000030c3      4889d3         mov rbx, rdx
0x000030c6      4c89c1         mov rcx, r8
0x000030c9      4889ea         mov rdx, rbp
0x000030cc      4883ec08       sub rsp, 8
0x000030d0      4889de         mov rsi, rbx
0x000030d3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x000030d6      4d89c7         mov r15, r8
0x000030d9      4d89cd         mov r13, r9
0x000030dc      e80ffdffff     call sym.argmatch
0x000030e1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x000030e4      780f           js 0x30f5                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x000030e6      4883c408       add rsp, 8
0x000030ea      5b             pop rbx
0x000030eb      5d             pop rbp
0x000030ec      415c           pop r12
0x000030ee      415d           pop r13
0x000030f0      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x000030f2      415f           pop r15
0x000030f4      c3             ret
0x000030f5      4889c2         mov rdx, rax
0x000030f8      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x000030fb      4c89f7         mov rdi, r14
0x000030fe      e80dfeffff     call sym.argmatch_invalid
0x00003103      4c89fa         mov rdx, r15
0x00003106      4889ee         mov rsi, rbp
0x00003109      4889df         mov rdi, rbx
0x0000310c      e87ffeffff     call sym.argmatch_valid
0x00003111      41ffd5         call r13
0x00003114      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000311b      ebc9           jmp 0x30e6
0x0000311d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00003120      4156           push r14
0x00003122      4155           push r13
0x00003124      4154           push r12
0x00003126      55             push rbp
0x00003127      53             push rbx
0x00003128      4c8b36         mov r14, qword [rsi]
0x0000312b      4d85f6         test r14, r14
0x0000312e      7431           je 0x3161
0x00003130      4989cc         mov r12, rcx
0x00003133      4989fd         mov r13, rdi
0x00003136      4889d5         mov rbp, rdx
0x00003139      488d5e08       lea rbx, [rsi + 8]
0x0000313d      eb10           jmp 0x314f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000313f      90             nop
0x00003140      4c8b33         mov r14, qword [rbx]
0x00003143      4c01e5         add rbp, r12
0x00003146      4883c308       add rbx, 8
0x0000314a      4d85f6         test r14, r14
0x0000314d      7412           je 0x3161
0x0000314f      4c89e2         mov rdx, r12
0x00003152      4889ee         mov rsi, rbp
0x00003155      4c89ef         mov rdi, r13
0x00003158      e8a3e7ffff     call sym.imp.memcmp
0x0000315d      85c0           test eax, eax
0x0000315f      75df           jne 0x3140
0x00003161      5b             pop rbx
0x00003162      4c89f0         mov rax, r14
0x00003165      5d             pop rbp
0x00003166      415c           pop r12
0x00003168      415d           pop r13
0x0000316a      415e           pop r14
0x0000316c      c3             ret
0x0000316d      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x00003170      48893db16f20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a128:8]=0
0x00003177      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003178      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003180      40883d996f20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a120:1]=0
0x00003187      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003188      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003190      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003191      53             push rbx
0x00003192      4883ec08       sub rsp, 8
0x00003196      488b3d0b6f20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000319d      e86e320000     call sym.close_stream
0x000031a2      85c0           test eax, eax
0x000031a4      7416           je 0x31bc
0x000031a6      e8e5e5ffff     call sym.imp.__errno_location
0x000031ab      803d6e6f2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a120:1]=0
0x000031b2      4889c3         mov rbx, rax
0x000031b5      741c           je 0x31d3
0x000031b7      833820         cmp dword [rax], 0x20
0x000031ba      7517           jne 0x31d3
0x000031bc      488b3d1d6f20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x000031c3      e848320000     call sym.close_stream
0x000031c8      85c0           test eax, eax
0x000031ca      7546           jne 0x3212
0x000031cc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000031d0      5b             pop rbx
0x000031d1      5d             pop rbp
0x000031d2      c3             ret
0x000031d3      488d35214000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x71fb ; "write error"
0x000031da      31ff           xor edi, edi
0x000031dc      ba05000000     mov edx, 5
0x000031e1      e81ae6ffff     call sym.imp.dcgettext
0x000031e6      488b3d3b6f20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a128:8]=0
0x000031ed      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000031f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000031f3      7428           je 0x321d
0x000031f5      e816200000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000031fa      8b33           mov esi, dword [rbx]
0x000031fc      488d15413500.  lea rdx, str.s:__s                      ; 0x6744 ; "%s: %s"
0x00003203      4889c1         mov rcx, rax
0x00003206      4989e8         mov r8, rbp
0x00003209      31ff           xor edi, edi
0x0000320b      31c0           xor eax, eax
0x0000320d      e8eee7ffff     call sym.imp.error
0x00003212      8b3d086e2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a020:4]=1
0x00003218      e893e5ffff     call sym.imp._exit
0x0000321d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000321f      488d15d23f00.  lea rdx, [0x000071f8]                   ; "%s"
0x00003226      4889c1         mov rcx, rax
0x00003229      31ff           xor edi, edi
0x0000322b      31c0           xor eax, eax
0x0000322d      e8cee7ffff     call sym.imp.error
0x00003232      ebde           jmp 0x3212
0x00003234      662e0f1f8400.  nop word cs:[rax + rax]
0x0000323e      6690           nop
;-- fdadvise:
0x00003240      e9abe6ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00003245      90             nop
0x00003246      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00003250      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00003253      741b           je 0x3270
0x00003255      53             push rbx
0x00003256      89f3           mov ebx, esi
0x00003258      e803e7ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000325d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000325f      31d2           xor edx, edx
0x00003261      31f6           xor esi, esi
0x00003263      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00003264      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00003266      e985e6ffff     jmp sym.imp.posix_fadvise
0x0000326b      0f1f440000     nop dword [rax + rax]
0x00003270      f3c3           ret
0x00003272      662e0f1f8400.  nop word cs:[rax + rax]
0x0000327c      0f1f4000       nop dword [rax]
;-- protect_fd:
0x00003280      55             push rbp                                ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003281      53             push rbx
0x00003282      89fd           mov ebp, edi
0x00003284      488d3d7c3f00.  lea rdi, str.dev_null                   ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ()); ; 0x7207 ; "/dev/null"
0x0000328b      31f6           xor esi, esi
0x0000328d      31c0           xor eax, eax
0x0000328f      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:41
0x00003293      bb01000000     mov ebx, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:52
0x00003298      e873e7ffff     call sym.imp.open                       ; fcntl2.h:53       return __open_alias (__path, __oflag, __va_arg_pack ());
0x0000329d      39c5           cmp ebp, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:43
0x0000329f      7418           je 0x32b9
0x000032a1      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:50
0x000032a3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/freopen-safer.c:45
0x000032a5      7812           js 0x32b9
0x000032a7      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/freopen-safer.c:47
0x000032a9      e832e6ffff     call sym.imp.close
0x000032ae      e8dde4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/freopen-safer.c:48
0x000032b3      c70009000000   mov dword [rax], 9
0x000032b9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/freopen-safer.c:53
0x000032bd      89d8           mov eax, ebx
0x000032bf      5b             pop rbx
0x000032c0      5d             pop rbp
0x000032c1      c3             ret
0x000032c2      0f1f4000       nop dword [rax]
0x000032c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- freopen_safer:
0x000032d0      4157           push r15                                ; ../coreutils-8.31/lib/freopen-safer.c:63
0x000032d2      4156           push r14
0x000032d4      4989f7         mov r15, rsi
0x000032d7      4155           push r13
0x000032d9      4154           push r12
0x000032db      4989d4         mov r12, rdx
0x000032de      55             push rbp
0x000032df      53             push rbx
0x000032e0      4883ec18       sub rsp, 0x18
0x000032e4      48897c2408     mov qword [rsp + 8], rdi
0x000032e9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/freopen-safer.c:75
0x000032ec      e86fe6ffff     call sym.imp.fileno
0x000032f1      89c3           mov ebx, eax
0x000032f3      e898e4ffff     call sym.imp.__errno_location
0x000032f8      83fb01         cmp ebx, 1
0x000032fb      4989c6         mov r14, rax
0x000032fe      0f845c010000   je 0x3460
0x00003304      83fb02         cmp ebx, 2
0x00003307      0f8443010000   je 0x3450
0x0000330d      85db           test ebx, ebx
0x0000330f      0f84b3000000   je 0x33c8
0x00003315      be02000000     mov esi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:78
0x0000331a      bf02000000     mov edi, 2
0x0000331f      e83ce5ffff     call sym.imp.dup2
0x00003324      83f802         cmp eax, 2
0x00003327      0f95c3         setne bl
0x0000332a      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:82
0x0000332f      bf01000000     mov edi, 1
0x00003334      e827e5ffff     call sym.imp.dup2
0x00003339      83f801         cmp eax, 1
0x0000333c      400f95c5       setne bpl
0x00003340      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/freopen-safer.c:86
0x00003342      31ff           xor edi, edi
0x00003344      e817e5ffff     call sym.imp.dup2
0x00003349      85c0           test eax, eax
0x0000334b      0f8487000000   je 0x33d8
0x00003351      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:93
0x00003353      e828ffffff     call sym.protect_fd
0x00003358      84c0           test al, al
0x0000335a      4189c5         mov r13d, eax
0x0000335d      0f840d010000   je 0x3470
0x00003363      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x00003366      7578           jne 0x33e0
0x00003368      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:97
0x0000336a      7414           je 0x3380
0x0000336c      bf02000000     mov edi, 2
0x00003371      e80affffff     call sym.protect_fd
0x00003376      84c0           test al, al
0x00003378      89c3           mov ebx, eax
0x0000337a      0f84b0000000   je 0x3430
0x00003380      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/freopen-safer.c:100
0x00003385      4c89e2         mov rdx, r12
0x00003388      4c89fe         mov rsi, r15
0x0000338b      e840e5ffff     call sym.imp.freopen
0x00003390      4989c4         mov r12, rax
0x00003393      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x00003395      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00003398      0f85a2000000   jne 0x3440                              ; ../coreutils-8.31/lib/freopen-safer.c:102
0x0000339e      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:104
0x000033a1      756d           jne 0x3410
0x000033a3      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x000033a6      7577           jne 0x341f
0x000033a8      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/freopen-safer.c:108
0x000033ab      7503           jne 0x33b0
0x000033ad      45893e         mov dword [r14], r15d                   ; ../coreutils-8.31/lib/freopen-safer.c:109
0x000033b0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/freopen-safer.c:111
0x000033b4      4c89e0         mov rax, r12
0x000033b7      5b             pop rbx
0x000033b8      5d             pop rbp
0x000033b9      415c           pop r12
0x000033bb      415d           pop r13
0x000033bd      415e           pop r14
0x000033bf      415f           pop r15
0x000033c1      c3             ret
0x000033c2      660f1f440000   nop word [rax + rax]
0x000033c8      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x000033ca      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x000033cc      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/freopen-safer.c:70
0x000033cf      ebaf           jmp 0x3380
0x000033d1      0f1f80000000.  nop dword [rax]
0x000033d8      4531ed         xor r13d, r13d
0x000033db      4084ed         test bpl, bpl                           ; ../coreutils-8.31/lib/freopen-safer.c:95
0x000033de      7488           je 0x3368
0x000033e0      bf01000000     mov edi, 1
0x000033e5      e896feffff     call sym.protect_fd
0x000033ea      84c0           test al, al
0x000033ec      89c5           mov ebp, eax
0x000033ee      0f8574ffffff   jne 0x3368
0x000033f4      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:96
0x000033f7      84db           test bl, bl                             ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000033f9      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x000033fc      7412           je 0x3410                               ; ../coreutils-8.31/lib/freopen-safer.c:102
0x000033fe      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00003403      e8d8e4ffff     call sym.imp.close
0x00003408      0f1f84000000.  nop dword [rax + rax]
0x00003410      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/freopen-safer.c:105
0x00003415      e8c6e4ffff     call sym.imp.close
0x0000341a      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/freopen-safer.c:106
0x0000341d      7489           je 0x33a8
0x0000341f      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/freopen-safer.c:107
0x00003421      e8bae4ffff     call sym.imp.close
0x00003426      eb80           jmp 0x33a8
0x00003428      0f1f84000000.  nop dword [rax + rax]
0x00003430      458b3e         mov r15d, dword [r14]                   ; ../coreutils-8.31/lib/freopen-safer.c:101
0x00003433      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:98
0x00003436      662e0f1f8400.  nop word cs:[rax + rax]
0x00003440      bf02000000     mov edi, 2                              ; ../coreutils-8.31/lib/freopen-safer.c:103
0x00003445      e896e4ffff     call sym.imp.close
0x0000344a      e94fffffff     jmp 0x339e
0x0000344f      90             nop
0x00003450      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/freopen-safer.c:72
0x00003452      e9d3feffff     jmp 0x332a
0x00003457      660f1f840000.  nop word [rax + rax]
0x00003460      31db           xor ebx, ebx
0x00003462      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/freopen-safer.c:71
0x00003464      e9d7feffff     jmp 0x3340
0x00003469      0f1f80000000.  nop dword [rax]
0x00003470      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/lib/freopen-safer.c:87
0x00003476      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/freopen-safer.c:94
0x00003479      e915ffffff     jmp 0x3393
0x0000347e      6690           nop
;-- hard_locale:
0x00003480      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00003484      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00003486      e855e5ffff     call sym.imp.setlocale
0x0000348b      4889c2         mov rdx, rax
0x0000348e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00003493      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00003496      741d           je 0x34b5
0x00003498      488d3d723d00.  lea rdi, [0x00007211]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000349f      b902000000     mov ecx, 2
0x000034a4      4889d6         mov rsi, rdx
0x000034a7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000034a9      0f97c1         seta cl
0x000034ac      80d900         sbb cl, 0
0x000034af      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000034b1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000034b3      750b           jne 0x34c0
0x000034b5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000034b9      c3             ret
0x000034ba      660f1f440000   nop word [rax + rax]
0x000034c0      488d3d4c3d00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7213 ; "POSIX"
0x000034c7      b906000000     mov ecx, 6
0x000034cc      4889d6         mov rsi, rdx
0x000034cf      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000034d1      0f97c0         seta al
0x000034d4      1c00           sbb al, 0
0x000034d6      84c0           test al, al
0x000034d8      0f95c0         setne al
0x000034db      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000034df      c3             ret
;-- initbuffer:
0x000034e0      660fefc0       pxor xmm0, xmm0
0x000034e4      48c747100000.  mov qword [rdi + 0x10], 0
0x000034ec      0f1107         movups xmmword [rdi], xmm0
0x000034ef      c3             ret                                     ; ../coreutils-8.31/lib/linebuffer.c:40
;-- readlinebuffer_delim:
0x000034f0      4157           push r15                                ; ../coreutils-8.31/lib/linebuffer.c:61
0x000034f2      4156           push r14
0x000034f4      4155           push r13
0x000034f6      4154           push r12
0x000034f8      55             push rbp
0x000034f9      53             push rbx
0x000034fa      4883ec18       sub rsp, 0x18
0x000034fe      4c8b6f10       mov r13, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:63
0x00003502      4c8b07         mov r8, qword [rdi]                     ; ../coreutils-8.31/lib/linebuffer.c:65
0x00003505      4d01e8         add r8, r13
0x00003508      f60610         test byte [rsi], 0x10                   ; ../coreutils-8.31/lib/linebuffer.c:67
0x0000350b      0f85cf000000   jne 0x35e0
0x00003511      4989fe         mov r14, rdi
0x00003514      4889f5         mov rbp, rsi
0x00003517      4c89eb         mov rbx, r13
0x0000351a      440fbefa       movsx r15d, dl
0x0000351e      eb0b           jmp 0x352b
0x00003520      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003523      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003527      880e           mov byte [rsi], cl
0x00003529      745b           je 0x3586                               ; ../coreutils-8.31/lib/linebuffer.c:91
0x0000352b      488b4d08       mov rcx, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x0000352f      483b4d10       cmp rcx, qword [rbp + 0x10]
0x00003533      736b           jae 0x35a0
0x00003535      488d4101       lea rax, [rcx + 1]
0x00003539      48894508       mov qword [rbp + 8], rax
0x0000353d      440fb621       movzx r12d, byte [rcx]
0x00003541      4489e1         mov ecx, r12d
0x00003544      4c39c3         cmp rbx, r8                             ; ../coreutils-8.31/lib/linebuffer.c:81
0x00003547      4889de         mov rsi, rbx
0x0000354a      75d4           jne 0x3520
0x0000354c      498b1e         mov rbx, qword [r14]                    ; ../coreutils-8.31/lib/linebuffer.c:83
0x0000354f      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00003552      4c89ef         mov rdi, r13
0x00003555      8854240f       mov byte [rsp + 0xf], dl
0x00003559      880c24         mov byte [rsp], cl
0x0000355c      e84f260000     call sym.x2realloc
0x00003561      4d8b06         mov r8, qword [r14]                     ; ../coreutils-8.31/lib/linebuffer.c:87
0x00003564      0fb60c24       movzx ecx, byte [rsp]
0x00003568      488d3418       lea rsi, [rax + rbx]                    ; ../coreutils-8.31/lib/linebuffer.c:85
0x0000356c      49894610       mov qword [r14 + 0x10], rax             ; ../coreutils-8.31/lib/linebuffer.c:86
0x00003570      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/linebuffer.c:84
0x00003573      0fb654240f     movzx edx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/linebuffer.c:87
0x00003578      488d5e01       lea rbx, [rsi + 1]                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x0000357c      4901c0         add r8, rax                             ; ../coreutils-8.31/lib/linebuffer.c:87
0x0000357f      4539fc         cmp r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003582      880e           mov byte [rsi], cl                      ; ../coreutils-8.31/lib/linebuffer.c:89
0x00003584      75a5           jne 0x352b                              ; ../coreutils-8.31/lib/linebuffer.c:91
0x00003586      4c29eb         sub rbx, r13                            ; ../coreutils-8.31/lib/linebuffer.c:93
0x00003589      4c89f0         mov rax, r14                            ; ../coreutils-8.31/lib/linebuffer.c:94
0x0000358c      49895e08       mov qword [r14 + 8], rbx                ; ../coreutils-8.31/lib/linebuffer.c:93
0x00003590      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x00003594      5b             pop rbx
0x00003595      5d             pop rbp
0x00003596      415c           pop r12
0x00003598      415d           pop r13
0x0000359a      415e           pop r14
0x0000359c      415f           pop r15
0x0000359e      c3             ret
0x0000359f      90             nop
0x000035a0      4889ef         mov rdi, rbp                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x000035a3      8854240f       mov byte [rsp + 0xf], dl
0x000035a7      4c890424       mov qword [rsp], r8
0x000035ab      e8a0e1ffff     call sym.imp.__uflow
0x000035b0      83f8ff         cmp eax, 0xffffffff                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x000035b3      4189c4         mov r12d, eax                           ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x000035b6      4c8b0424       mov r8, qword [rsp]                     ; ../coreutils-8.31/lib/linebuffer.c:73
0x000035ba      0fb654240f     movzx edx, byte [rsp + 0xf]
0x000035bf      7530           jne 0x35f1
0x000035c1      4939dd         cmp r13, rbx                            ; ../coreutils-8.31/lib/linebuffer.c:75
0x000035c4      741a           je 0x35e0
0x000035c6      f6450020       test byte [rbp], 0x20
0x000035ca      7514           jne 0x35e0
0x000035cc      3853ff         cmp byte [rbx - 1], dl                  ; ../coreutils-8.31/lib/linebuffer.c:77
0x000035cf      74b5           je 0x3586
0x000035d1      4589fc         mov r12d, r15d                          ; ../coreutils-8.31/lib/linebuffer.c:79
0x000035d4      89d1           mov ecx, edx
0x000035d6      e969ffffff     jmp 0x3544
0x000035db      0f1f440000     nop dword [rax + rax]
0x000035e0      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/linebuffer.c:95
0x000035e4      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/linebuffer.c:68
0x000035e6      5b             pop rbx                                 ; ../coreutils-8.31/lib/linebuffer.c:95
0x000035e7      5d             pop rbp
0x000035e8      415c           pop r12
0x000035ea      415d           pop r13
0x000035ec      415e           pop r14
0x000035ee      415f           pop r15
0x000035f0      c3             ret
0x000035f1      89c1           mov ecx, eax
0x000035f3      e94cffffff     jmp 0x3544
0x000035f8      0f1f84000000.  nop dword [rax + rax]
;-- readlinebuffer:
0x00003600      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/linebuffer.c:44
0x00003605      e9e6feffff     jmp sym.readlinebuffer_delim
0x0000360a      660f1f440000   nop word [rax + rax]
;-- freebuffer:
0x00003610      488b7f10       mov rdi, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/linebuffer.c:101
0x00003614      e957e1ffff     jmp sym.imp.free
0x00003619      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/linebuffer.c:102
;-- memcasecmp:
0x00003620      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/memcasecmp.c:33
0x00003623      7443           je 0x3668
0x00003625      4154           push r12
0x00003627      55             push rbp
0x00003628      4989f4         mov r12, rsi
0x0000362b      53             push rbx
0x0000362c      4889fd         mov rbp, rdi
0x0000362f      4889d3         mov rbx, rdx
0x00003632      e809e1ffff     call sym.imp.__ctype_toupper_loc        ; ../coreutils-8.31/lib/memcasecmp.c:41
0x00003637      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/memcasecmp.c:37
0x00003639      4c8b00         mov r8, qword [rax]                     ; ../coreutils-8.31/lib/memcasecmp.c:41
0x0000363c      eb0b           jmp 0x3649
0x0000363e      6690           nop
0x00003640      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/memcasecmp.c:37
0x00003644      4839d9         cmp rcx, rbx
0x00003647      7414           je 0x365d
0x00003649      0fb6440d00     movzx eax, byte [rbp + rcx]             ; ../coreutils-8.31/lib/memcasecmp.c:41
0x0000364e      450fb60c0c     movzx r9d, byte [r12 + rcx]             ; ../coreutils-8.31/lib/memcasecmp.c:42
0x00003653      418b0480       mov eax, dword [r8 + rax*4]             ; ../coreutils-8.31/lib/memcasecmp.c:43
0x00003657      432b0488       sub eax, dword [r8 + r9*4]              ; ../coreutils-8.31/lib/memcasecmp.c:45
0x0000365b      74e3           je 0x3640
0x0000365d      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcasecmp.c:49
0x0000365e      5d             pop rbp
0x0000365f      415c           pop r12
0x00003661      c3             ret
0x00003662      660f1f440000   nop word [rax + rax]
0x00003668      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcasecmp.c:48
0x0000366a      c3             ret                                     ; ../coreutils-8.31/lib/memcasecmp.c:49
0x0000366b      0f1f440000     nop dword [rax + rax]
;-- posix2_version:
0x00003670      53             push rbx                                ; ../coreutils-8.31/lib/posixver.c:41
0x00003671      488d3da13b00.  lea rdi, str.POSIX2_VERSION             ; ../coreutils-8.31/lib/posixver.c:43 ; 0x7219 ; "_POSIX2_VERSION"
0x00003678      bb69100300     mov ebx, 0x31069
0x0000367d      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/posixver.c:41
0x00003681      64488b042528.  mov rax, qword fs:[0x28]
0x0000368a      4889442408     mov qword [rsp + 8], rax
0x0000368f      31c0           xor eax, eax
0x00003691      e8cae0ffff     call sym.imp.getenv                     ; ../coreutils-8.31/lib/posixver.c:43
0x00003696      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/posixver.c:45
0x00003699      7405           je 0x36a0
0x0000369b      803800         cmp byte [rax], 0
0x0000369e      7520           jne 0x36c0
0x000036a0      488b4c2408     mov rcx, qword [rsp + 8]                ; ../coreutils-8.31/lib/posixver.c:54
0x000036a5      6448330c2528.  xor rcx, qword fs:[0x28]
0x000036ae      89d8           mov eax, ebx
0x000036b0      7547           jne 0x36f9
0x000036b2      4883c410       add rsp, 0x10
0x000036b6      5b             pop rbx
0x000036b7      c3             ret
0x000036b8      0f1f84000000.  nop dword [rax + rax]
0x000036c0      ba0a000000     mov edx, 0xa                            ; ../coreutils-8.31/lib/posixver.c:48
0x000036c5      4889e6         mov rsi, rsp
0x000036c8      4889c7         mov rdi, rax
0x000036cb      e870e2ffff     call sym.imp.strtol
0x000036d0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/posixver.c:49
0x000036d4      803a00         cmp byte [rdx], 0
0x000036d7      75c7           jne 0x36a0
0x000036d9      483d00000080   cmp rax, 0xffffffff80000000             ; ../coreutils-8.31/lib/posixver.c:53
0x000036df      7c11           jl 0x36f2
0x000036e1      483dffffff7f   cmp rax, 0x7fffffff
0x000036e7      bbffffff7f     mov ebx, 0x7fffffff
0x000036ec      480f4ed8       cmovle rbx, rax
0x000036f0      ebae           jmp 0x36a0
0x000036f2      bb00000080     mov ebx, 0x80000000
0x000036f7      eba7           jmp 0x36a0
0x000036f9      e832e1ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/posixver.c:54
0x000036fe      6690           nop
;-- set_program_name:
0x00003700      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003703      53             push rbx
0x00003704      7477           je 0x377d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003706      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000370b      4889fb         mov rbx, rdi
0x0000370e      e87de1ffff     call sym.imp.strrchr
0x00003713      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003716      7455           je 0x376d
0x00003718      4c8d4001       lea r8, [rax + 1]
0x0000371c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000371f      4829da         sub rdx, rbx
0x00003722      4883fa06       cmp rdx, 6
0x00003726      7e45           jle 0x376d
0x00003728      488d70fa       lea rsi, [rax - 6]
0x0000372c      488d3d353b00.  lea rdi, str..libs                      ; 0x7268 ; "/.libs/"
0x00003733      b907000000     mov ecx, 7
0x00003738      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000373a      0f97c2         seta dl
0x0000373d      80da00         sbb dl, 0
0x00003740      84d2           test dl, dl
0x00003742      7529           jne 0x376d
0x00003744      488d3d253b00.  lea rdi, [0x00007270]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000374b      b903000000     mov ecx, 3
0x00003750      4c89c6         mov rsi, r8
0x00003753      4c89c3         mov rbx, r8
0x00003756      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003758      0f97c2         seta dl
0x0000375b      80da00         sbb dl, 0
0x0000375e      84d2           test dl, dl
0x00003760      750b           jne 0x376d
0x00003762      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003766      48891d336920.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x0000376d      48891dbc6920.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a130:8]=0
0x00003774      48891d4d6920.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c8:8]=0
0x0000377b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000377c      c3             ret
0x0000377d      488b0d5c6920.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003784      488d3da53a00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x7230 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000378b      ba37000000     mov edx, 0x37                           ; '7'
0x00003790      be01000000     mov esi, 1
0x00003795      e8c6e2ffff     call sym.imp.fwrite
0x0000379a      e8e1dfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000379f      90             nop
;-- gettext_quote.part.1:
0x000037a0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000037a1      53             push rbx
0x000037a2      4889fd         mov rbp, rdi
0x000037a5      89f3           mov ebx, esi
0x000037a7      4883ec08       sub rsp, 8
0x000037ab      e8e02c0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000037b0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000037b3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000037b6      80fa55         cmp dl, 0x55
0x000037b9      7475           je 0x3830
0x000037bb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000037be      7420           je 0x37e0
0x000037c0      488d05bc3a00.  lea rax, str.l______l                   ; 0x7283 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037c7      488d15b73a00.  lea rdx, [0x00007285]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000037ce      83fb09         cmp ebx, 9
0x000037d1      480f45c2       cmovne rax, rdx
0x000037d5      4883c408       add rsp, 8
0x000037d9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000037da      5d             pop rbp
0x000037db      c3             ret
0x000037dc      0f1f4000       nop dword [rax]
0x000037e0      0fb65001       movzx edx, byte [rax + 1]
0x000037e4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000037e7      80fa42         cmp dl, 0x42
0x000037ea      75d4           jne 0x37c0
0x000037ec      80780231       cmp byte [rax + 2], 0x31
0x000037f0      75ce           jne 0x37c0
0x000037f2      80780338       cmp byte [rax + 3], 0x38
0x000037f6      75c8           jne 0x37c0
0x000037f8      80780430       cmp byte [rax + 4], 0x30
0x000037fc      75c2           jne 0x37c0
0x000037fe      80780533       cmp byte [rax + 5], 0x33
0x00003802      75bc           jne 0x37c0
0x00003804      80780630       cmp byte [rax + 6], 0x30
0x00003808      75b6           jne 0x37c0
0x0000380a      80780700       cmp byte [rax + 7], 0
0x0000380e      75b0           jne 0x37c0
0x00003810      807d0060       cmp byte [rbp], 0x60
0x00003814      488d05613a00.  lea rax, [0x0000727c]
0x0000381b      488d155e3a00.  lea rdx, [0x00007280]
0x00003822      480f45c2       cmovne rax, rdx
0x00003826      4883c408       add rsp, 8
0x0000382a      5b             pop rbx
0x0000382b      5d             pop rbp
0x0000382c      c3             ret
0x0000382d      0f1f00         nop dword [rax]
0x00003830      0fb65001       movzx edx, byte [rax + 1]
0x00003834      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003837      80fa54         cmp dl, 0x54
0x0000383a      7584           jne 0x37c0
0x0000383c      0fb65002       movzx edx, byte [rax + 2]
0x00003840      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003843      80fa46         cmp dl, 0x46
0x00003846      0f8574ffffff   jne 0x37c0
0x0000384c      8078032d       cmp byte [rax + 3], 0x2d
0x00003850      0f856affffff   jne 0x37c0
0x00003856      80780438       cmp byte [rax + 4], 0x38
0x0000385a      0f8560ffffff   jne 0x37c0
0x00003860      80780500       cmp byte [rax + 5], 0
0x00003864      0f8556ffffff   jne 0x37c0
0x0000386a      807d0060       cmp byte [rbp], 0x60
0x0000386e      488d05ff3900.  lea rax, [0x00007274]                   ; "\u2018"
0x00003875      488d15fc3900.  lea rdx, [0x00007278]                   ; "\u2019"
0x0000387c      480f45c2       cmovne rax, rdx
0x00003880      4883c408       add rsp, 8
0x00003884      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003885      5d             pop rbp
0x00003886      c3             ret
0x00003887      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003890      4157           push r15
0x00003892      4156           push r14
0x00003894      4589c7         mov r15d, r8d
0x00003897      4155           push r13
0x00003899      4154           push r12
0x0000389b      4989fe         mov r14, rdi
0x0000389e      55             push rbp
0x0000389f      53             push rbx
0x000038a0      4489cb         mov ebx, r9d
0x000038a3      4989f5         mov r13, rsi
0x000038a6      4889cd         mov rbp, rcx
0x000038a9      83e302         and ebx, 2
0x000038ac      4881ecb80000.  sub rsp, 0xb8
0x000038b3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000038bb      4889542410     mov qword [rsp + 0x10], rdx
0x000038c0      4489442408     mov dword [rsp + 8], r8d
0x000038c5      44894c2478     mov dword [rsp + 0x78], r9d
0x000038ca      4889442420     mov qword [rsp + 0x20], rax
0x000038cf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000038d7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000038dc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x000038e4      4889442460     mov qword [rsp + 0x60], rax
0x000038e9      64488b042528.  mov rax, qword fs:[0x28]
0x000038f2      48898424a800.  mov qword [rsp + 0xa8], rax
0x000038fa      31c0           xor eax, eax
0x000038fc      e80fdfffff     call sym.imp.__ctype_get_mb_cur_max
0x00003901      4183ff0a       cmp r15d, 0xa
0x00003905      4889442458     mov qword [rsp + 0x58], rax
0x0000390a      0f87af110000   ja 0x4abf
0x00003910      488d0dc93900.  lea rcx, [0x000072e0]
0x00003917      4489fa         mov edx, r15d
0x0000391a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000391e      4801c8         add rax, rcx
0x00003921      ffe0           jmp rax
0x00003923      c644240e01     mov byte [rsp + 0xe], 1
0x00003928      c644247c00     mov byte [rsp + 0x7c], 0
0x0000392d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003930      48c744245000.  mov qword [rsp + 0x50], 0
0x00003939      c644240f01     mov byte [rsp + 0xf], 1
0x0000393e      c644240d00     mov byte [rsp + 0xd], 0
0x00003943      488d053b3900.  lea rax, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000394a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003953      4531ff         xor r15d, r15d
0x00003956      c74424080200.  mov dword [rsp + 8], 2
0x0000395e      4889442448     mov qword [rsp + 0x48], rax
0x00003963      4531db         xor r11d, r11d
0x00003966      4889e8         mov rax, rbp
0x00003969      4589e0         mov r8d, r12d
0x0000396c      4c89dd         mov rbp, r11
0x0000396f      4989c3         mov r11, rax
0x00003972      660f1f440000   nop word [rax + rax]
0x00003978      4939eb         cmp r11, rbp
0x0000397b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000397f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003983      750d           jne 0x3992
0x00003985      488b442410     mov rax, qword [rsp + 0x10]
0x0000398a      803c2800       cmp byte [rax + rbp], 0
0x0000398e      410f95c4       setne r12b
0x00003992      4584e4         test r12b, r12b
0x00003995      0f8455060000   je 0x3ff0
0x0000399b      837c240802     cmp dword [rsp + 8], 2
0x000039a0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000039a5      4c8d0c2f       lea r9, [rdi + rbp]
0x000039a9      0f95c0         setne al
0x000039ac      2244240d       and al, byte [rsp + 0xd]
0x000039b0      4189c2         mov r10d, eax
0x000039b3      0f84a7000000   je 0x3a60
0x000039b9      488b442418     mov rax, qword [rsp + 0x18]
0x000039be      4885c0         test rax, rax
0x000039c1      0f8429040000   je 0x3df0
0x000039c7      4983fbff       cmp r11, 0xffffffffffffffff
0x000039cb      488d5c0500     lea rbx, [rbp + rax]
0x000039d0      752e           jne 0x3a00
0x000039d2      4883f801       cmp rax, 1
0x000039d6      7628           jbe 0x3a00
0x000039d8      4488442438     mov byte [rsp + 0x38], r8b
0x000039dd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x000039e2      4c894c2428     mov qword [rsp + 0x28], r9
0x000039e7      e834deffff     call sym.imp.strlen
0x000039ec      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000039f2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x000039f8      4989c3         mov r11, rax
0x000039fb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003a00      4c39db         cmp rbx, r11
0x00003a03      4488542428     mov byte [rsp + 0x28], r10b
0x00003a08      0f87b2050000   ja 0x3fc0
0x00003a0e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003a13      488b742448     mov rsi, qword [rsp + 0x48]
0x00003a18      4c89cf         mov rdi, r9
0x00003a1b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003a20      4488442438     mov byte [rsp + 0x38], r8b
0x00003a25      4c894c2430     mov qword [rsp + 0x30], r9
0x00003a2a      e8d1deffff     call sym.imp.memcmp
0x00003a2f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003a31      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003a36      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003a3c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003a41      0f8579050000   jne 0x3fc0
0x00003a47      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a4c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003a52      0f857d0f0000   jne 0x49d5
0x00003a58      0f1f84000000.  nop dword [rax + rax]
0x00003a60      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003a64      80fb7e         cmp bl, 0x7e
0x00003a67      0f871b030000   ja 0x3d88
0x00003a6d      488d0d983800.  lea rcx, [0x0000730c]
0x00003a74      0fb6d3         movzx edx, bl
0x00003a77      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003a7b      4801c8         add rax, rcx
0x00003a7e      ffe0           jmp rax
0x00003a80      4531d2         xor r10d, r10d
0x00003a83      4983fb01       cmp r11, 1
0x00003a87      0f95c0         setne al
0x00003a8a      4983fbff       cmp r11, 0xffffffffffffffff
0x00003a8e      750c           jne 0x3a9c
0x00003a90      488b442410     mov rax, qword [rsp + 0x10]
0x00003a95      80780100       cmp byte [rax + 1], 0
0x00003a99      0f95c0         setne al
0x00003a9c      837c240802     cmp dword [rsp + 8], 2
0x00003aa1      0f94c2         sete dl
0x00003aa4      84c0           test al, al
0x00003aa6      0f844c020000   je 0x3cf8
0x00003aac      4531e4         xor r12d, r12d
0x00003aaf      31c0           xor eax, eax
0x00003ab1      0f1f80000000.  nop dword [rax]
0x00003ab8      807c240d01     cmp byte [rsp + 0xd], 1
0x00003abd      0f850f010000   jne 0x3bd2
0x00003ac3      84d2           test dl, dl
0x00003ac5      0f8507010000   jne 0x3bd2
0x00003acb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003ad0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003ad3      7414           je 0x3ae9
0x00003ad5      89da           mov edx, ebx
0x00003ad7      c0ea05         shr dl, 5
0x00003ada      0fb6d2         movzx edx, dl
0x00003add      8b1496         mov edx, dword [rsi + rdx*4]
0x00003ae0      0fa3da         bt edx, ebx
0x00003ae3      0f824a010000   jb 0x3c33
0x00003ae9      4584d2         test r10b, r10b
0x00003aec      0f8541010000   jne 0x3c33
0x00003af2      83f001         xor eax, 1
0x00003af5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003af9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003afc      84c0           test al, al
0x00003afe      7420           je 0x3b20                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003b00      4d39fd         cmp r13, r15
0x00003b03      7605           jbe 0x3b0a
0x00003b05      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003b0a      498d4701       lea rax, [r15 + 1]
0x00003b0e      4939c5         cmp r13, rax
0x00003b11      7606           jbe 0x3b19
0x00003b13      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003b19      4983c702       add r15, 2
0x00003b1d      4531c0         xor r8d, r8d
0x00003b20      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003b23      7304           jae 0x3b29                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003b25      43881c3e       mov byte [r14 + r15], bl
0x00003b29      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003b2e      4983c701       add r15, 1
0x00003b32      b800000000     mov eax, 0
0x00003b37      4584e4         test r12b, r12b
0x00003b3a      0f44f8         cmove edi, eax
0x00003b3d      40887c240e     mov byte [rsp + 0xe], dil
0x00003b42      e931feffff     jmp 0x3978
0x00003b47      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003b50      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003b53      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003b57      83f802         cmp eax, 2
0x00003b5a      0f84b8050000   je 0x4118
0x00003b60      83f805         cmp eax, 5
0x00003b63      0f846f050000   je 0x40d8
0x00003b69      83f802         cmp eax, 2
0x00003b6c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003b71      0f94c2         sete dl
0x00003b74      4531e4         xor r12d, r12d
0x00003b77      31c0           xor eax, eax
0x00003b79      e93affffff     jmp 0x3ab8
0x00003b7e      6690           nop
0x00003b80      4531d2         xor r10d, r10d
0x00003b83      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003b88      0f8402050000   je 0x4090
0x00003b8e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003b93      31d2           xor edx, edx
0x00003b95      31c0           xor eax, eax
0x00003b97      bb27000000     mov ebx, 0x27                           ; '''
0x00003b9c      e917ffffff     jmp 0x3ab8
0x00003ba1      0f1f80000000.  nop dword [rax]
0x00003ba8      ba09000000     mov edx, 9
0x00003bad      bb74000000     mov ebx, 0x74                           ; 't'
0x00003bb2      837c240802     cmp dword [rsp + 8], 2
0x00003bb7      0f94c0         sete al
0x00003bba      2244240f       and al, byte [rsp + 0xf]
0x00003bbe      0f854a010000   jne 0x3d0e
0x00003bc4      807c240d00     cmp byte [rsp + 0xd], 0
0x00003bc9      7565           jne 0x3c30
0x00003bcb      89d3           mov ebx, edx
0x00003bcd      4531e4         xor r12d, r12d
0x00003bd0      31c0           xor eax, eax
0x00003bd2      807c240f00     cmp byte [rsp + 0xf], 0
0x00003bd7      0f85eefeffff   jne 0x3acb
0x00003bdd      e907ffffff     jmp 0x3ae9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003be2      660f1f440000   nop word [rax + rax]
0x00003be8      ba08000000     mov edx, 8
0x00003bed      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003bf2      ebd0           jmp 0x3bc4
0x00003bf4      0f1f4000       nop dword [rax]
0x00003bf8      837c240802     cmp dword [rsp + 8], 2
0x00003bfd      0f84cd030000   je 0x3fd0
0x00003c03      807c240d00     cmp byte [rsp + 0xd], 0
0x00003c08      0f8412020000   je 0x3e20
0x00003c0e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c13      0f8407020000   je 0x3e20
0x00003c19      48837c241800   cmp qword [rsp + 0x18], 0
0x00003c1f      0f85b6030000   jne 0x3fdb
0x00003c25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003c2a      660f1f440000   nop word [rax + rax]
0x00003c30      4531e4         xor r12d, r12d
0x00003c33      837c240802     cmp dword [rsp + 8], 2
0x00003c38      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003c3b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c40      89d0           mov eax, edx
0x00003c42      0f8550080000   jne 0x4498
0x00003c48      4489c0         mov eax, r8d
0x00003c4b      83f001         xor eax, 1
0x00003c4e      20d0           and al, dl
0x00003c50      742f           je 0x3c81
0x00003c52      4d39fd         cmp r13, r15
0x00003c55      7605           jbe 0x3c5c
0x00003c57      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003c5c      498d5701       lea rdx, [r15 + 1]
0x00003c60      4939d5         cmp r13, rdx
0x00003c63      7606           jbe 0x3c6b
0x00003c65      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003c6b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003c6f      4939d5         cmp r13, rdx
0x00003c72      7606           jbe 0x3c7a
0x00003c74      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003c7a      4983c703       add r15, 3
0x00003c7e      4189c0         mov r8d, eax
0x00003c81      4d39fd         cmp r13, r15
0x00003c84      7605           jbe 0x3c8b
0x00003c86      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003c8b      4983c701       add r15, 1
0x00003c8f      4883c501       add rbp, 1
0x00003c93      e988feffff     jmp 0x3b20
0x00003c98      0f1f84000000.  nop dword [rax + rax]
0x00003ca0      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ca5      0f85c8010000   jne 0x3e73
0x00003cab      31d2           xor edx, edx
0x00003cad      f644247801     test byte [rsp + 0x78], 1
0x00003cb2      0f8413ffffff   je 0x3bcb
0x00003cb8      4883c501       add rbp, 1
0x00003cbc      e9b7fcffff     jmp 0x3978
0x00003cc1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003cc8      837c240802     cmp dword [rsp + 8], 2
0x00003ccd      0f94c2         sete dl
0x00003cd0      31c0           xor eax, eax
0x00003cd2      e9e1fdffff     jmp 0x3ab8
0x00003cd7      660f1f840000.  nop word [rax + rax]
0x00003ce0      ba07000000     mov edx, 7
0x00003ce5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003cea      e9d5feffff     jmp 0x3bc4
0x00003cef      90             nop
0x00003cf0      837c240802     cmp dword [rsp + 8], 2
0x00003cf5      0f94c2         sete dl
0x00003cf8      4885ed         test rbp, rbp
0x00003cfb      0f85abfdffff   jne 0x3aac
0x00003d01      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003d06      20d0           and al, dl
0x00003d08      0f84aafdffff   je 0x3ab8
0x00003d0e      4c89dd         mov rbp, r11
0x00003d11      c74424080200.  mov dword [rsp + 8], 2
0x00003d19      e9fb060000     jmp 0x4419
0x00003d1e      6690           nop
0x00003d20      837c240802     cmp dword [rsp + 8], 2
0x00003d25      0f94c2         sete dl
0x00003d28      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003d2b      ebd4           jmp 0x3d01
0x00003d2d      0f1f00         nop dword [rax]
0x00003d30      837c240802     cmp dword [rsp + 8], 2
0x00003d35      bb20000000     mov ebx, 0x20                           ; "@"
0x00003d3a      0f94c2         sete dl
0x00003d3d      ebc2           jmp 0x3d01
0x00003d3f      90             nop
0x00003d40      ba0d000000     mov edx, 0xd
0x00003d45      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003d4a      e963feffff     jmp 0x3bb2
0x00003d4f      90             nop
0x00003d50      ba0c000000     mov edx, 0xc
0x00003d55      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003d5a      e965feffff     jmp 0x3bc4
0x00003d5f      90             nop
0x00003d60      ba0b000000     mov edx, 0xb
0x00003d65      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003d6a      e955feffff     jmp 0x3bc4
0x00003d6f      90             nop
0x00003d70      ba0a000000     mov edx, 0xa
0x00003d75      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003d7a      e933feffff     jmp 0x3bb2
0x00003d7f      90             nop
0x00003d80      4531d2         xor r10d, r10d
0x00003d83      0f1f440000     nop dword [rax + rax]
0x00003d88      48837c245801   cmp qword [rsp + 0x58], 1
0x00003d8e      0f85a4030000   jne 0x4138
0x00003d94      4c895c2438     mov qword [rsp + 0x38], r11
0x00003d99      4488442430     mov byte [rsp + 0x30], r8b
0x00003d9e      4488542428     mov byte [rsp + 0x28], r10b
0x00003da3      e8f8dcffff     call sym.imp.__ctype_b_loc
0x00003da8      488b08         mov rcx, qword [rax]
0x00003dab      0fb6d3         movzx edx, bl
0x00003dae      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003db4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003dba      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003dbf      bf01000000     mov edi, 1
0x00003dc4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003dc8      66250040       and ax, 0x4000
0x00003dcc      410f95c4       setne r12b
0x00003dd0      0f94c0         sete al
0x00003dd3      2244240d       and al, byte [rsp + 0xd]
0x00003dd7      84c0           test al, al
0x00003dd9      0f8592090000   jne 0x4771
0x00003ddf      837c240802     cmp dword [rsp + 8], 2
0x00003de4      0f94c2         sete dl
0x00003de7      e9ccfcffff     jmp 0x3ab8
0x00003dec      0f1f4000       nop dword [rax]
0x00003df0      410fb619       movzx ebx, byte [r9]
0x00003df4      80fb7e         cmp bl, 0x7e
0x00003df7      7787           ja 0x3d80
0x00003df9      488d0d083700.  lea rcx, [0x00007508]
0x00003e00      0fb6d3         movzx edx, bl
0x00003e03      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003e07      4801c8         add rax, rcx
0x00003e0a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003e0c      0f1f4000       nop dword [rax]
0x00003e10      4531d2         xor r10d, r10d
0x00003e13      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e18      0f85f0fdffff   jne 0x3c0e
0x00003e1e      6690           nop
0x00003e20      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003e25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e2a      e995fdffff     jmp 0x3bc4
0x00003e2f      90             nop
0x00003e30      ba0c000000     mov edx, 0xc
0x00003e35      4531d2         xor r10d, r10d
0x00003e38      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003e3d      e982fdffff     jmp 0x3bc4
0x00003e42      660f1f440000   nop word [rax + rax]
0x00003e48      ba0a000000     mov edx, 0xa
0x00003e4d      4531d2         xor r10d, r10d
0x00003e50      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003e55      e958fdffff     jmp 0x3bb2
0x00003e5a      660f1f440000   nop word [rax + rax]
0x00003e60      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003e65      e9c6fdffff     jmp 0x3c30
0x00003e6a      660f1f440000   nop word [rax + rax]
0x00003e70      4531d2         xor r10d, r10d
0x00003e73      837c240802     cmp dword [rsp + 8], 2
0x00003e78      0f94c2         sete dl
0x00003e7b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e80      0f85940b0000   jne 0x4a1a
0x00003e86      4489c0         mov eax, r8d
0x00003e89      4c89f9         mov rcx, r15
0x00003e8c      83f001         xor eax, 1
0x00003e8f      20d0           and al, dl
0x00003e91      742d           je 0x3ec0
0x00003e93      4d39fd         cmp r13, r15
0x00003e96      7605           jbe 0x3e9d
0x00003e98      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e9d      498d4f01       lea rcx, [r15 + 1]
0x00003ea1      4939cd         cmp r13, rcx
0x00003ea4      7606           jbe 0x3eac
0x00003ea6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003eac      498d4f02       lea rcx, [r15 + 2]
0x00003eb0      4939cd         cmp r13, rcx
0x00003eb3      0f8730060000   ja 0x44e9
0x00003eb9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003ebd      4189c0         mov r8d, eax
0x00003ec0      4939cd         cmp r13, rcx
0x00003ec3      7605           jbe 0x3eca
0x00003ec5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003eca      837c240802     cmp dword [rsp + 8], 2
0x00003ecf      4c8d7901       lea r15, [rcx + 1]
0x00003ed3      0f8400060000   je 0x44d9
0x00003ed9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003edd      4c39d8         cmp rax, r11
0x00003ee0      7319           jae 0x3efb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003ee2      488b442410     mov rax, qword [rsp + 0x10]
0x00003ee7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003eec      88442428       mov byte [rsp + 0x28], al
0x00003ef0      83e830         sub eax, 0x30
0x00003ef3      3c09           cmp al, 9
0x00003ef5      0f862e080000   jbe 0x4729
0x00003efb      4489e0         mov eax, r12d
0x00003efe      bb30000000     mov ebx, 0x30                           ; '0'
0x00003f03      4531e4         xor r12d, r12d
0x00003f06      e9adfbffff     jmp 0x3ab8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003f0b      0f1f440000     nop dword [rax + rax]
0x00003f10      837c240802     cmp dword [rsp + 8], 2
0x00003f15      4589d4         mov r12d, r10d
0x00003f18      0f94c2         sete dl
0x00003f1b      4531d2         xor r10d, r10d
0x00003f1e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003f20      e993fbffff     jmp 0x3ab8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003f25      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003f28      837c240802     cmp dword [rsp + 8], 2
0x00003f2d      0f94c2         sete dl
0x00003f30      4531d2         xor r10d, r10d
0x00003f33      e9c0fdffff     jmp 0x3cf8
0x00003f38      0f1f84000000.  nop dword [rax + rax]
0x00003f40      837c240802     cmp dword [rsp + 8], 2
0x00003f45      0f94c2         sete dl
0x00003f48      4531d2         xor r10d, r10d
0x00003f4b      4531e4         xor r12d, r12d
0x00003f4e      e9aefdffff     jmp 0x3d01
0x00003f53      0f1f440000     nop dword [rax + rax]
0x00003f58      837c240802     cmp dword [rsp + 8], 2
0x00003f5d      4589d4         mov r12d, r10d
0x00003f60      bb20000000     mov ebx, 0x20                           ; "@"
0x00003f65      0f94c2         sete dl
0x00003f68      4531d2         xor r10d, r10d
0x00003f6b      e991fdffff     jmp 0x3d01
0x00003f70      ba0d000000     mov edx, 0xd
0x00003f75      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003f78      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003f7d      e930fcffff     jmp 0x3bb2
0x00003f82      660f1f440000   nop word [rax + rax]
0x00003f88      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003f8d      e99efcffff     jmp 0x3c30
0x00003f92      660f1f440000   nop word [rax + rax]
0x00003f98      ba09000000     mov edx, 9
0x00003f9d      4531d2         xor r10d, r10d
0x00003fa0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003fa5      e908fcffff     jmp 0x3bb2
0x00003faa      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003fb0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003fb5      e976fcffff     jmp 0x3c30
0x00003fba      660f1f440000   nop word [rax + rax]
0x00003fc0      4531d2         xor r10d, r10d
0x00003fc3      e998faffff     jmp 0x3a60
0x00003fc8      0f1f84000000.  nop dword [rax + rax]
0x00003fd0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003fd5      0f8565090000   jne 0x4940
0x00003fdb      4883c501       add rbp, 1
0x00003fdf      4489c0         mov eax, r8d
0x00003fe2      4531e4         xor r12d, r12d
0x00003fe5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003fea      e90dfbffff     jmp 0x3afc
0x00003fef      90             nop
0x00003ff0      837c240802     cmp dword [rsp + 8], 2
0x00003ff5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003ffa      4589c4         mov r12d, r8d
0x00003ffd      4c89dd         mov rbp, r11
0x00004000      0f94c2         sete dl
0x00004003      89d8           mov eax, ebx
0x00004005      4d85ff         test r15, r15
0x00004008      0f94c1         sete cl
0x0000400b      21d0           and eax, edx
0x0000400d      20c8           and al, cl
0x0000400f      0f85610a0000   jne 0x4a76                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004015      89d8           mov eax, ebx
0x00004017      83f001         xor eax, 1
0x0000401a      20c2           and dl, al
0x0000401c      0f846a090000   je 0x498c
0x00004022      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004027      0f845d090000   je 0x498a
0x0000402d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004032      0f85f5090000   jne 0x4a2d
0x00004038      4d85ed         test r13, r13
0x0000403b      0f94c0         sete al
0x0000403e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004044      0f95c2         setne dl
0x00004047      20d0           and al, dl
0x00004049      0f841d0a0000   je 0x4a6c
0x0000404f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004054      488d1d2a3200.  lea rbx, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000405b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000405f      c74424080200.  mov dword [rsp + 8], 2
0x00004067      41bf01000000   mov r15d, 1
0x0000406d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004076      c644240f00     mov byte [rsp + 0xf], 0
0x0000407b      48895c2448     mov qword [rsp + 0x48], rbx
0x00004080      8844247c       mov byte [rsp + 0x7c], al
0x00004084      e9daf8ffff     jmp 0x3963
0x00004089      0f1f80000000.  nop dword [rax]
0x00004090      807c240f00     cmp byte [rsp + 0xf], 0
0x00004095      0f85a5080000   jne 0x4940
0x0000409b      4d85ed         test r13, r13
0x0000409e      0f84fc030000   je 0x44a0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x000040a4      31d2           xor edx, edx
0x000040a6      48837c245000   cmp qword [rsp + 0x50], 0
0x000040ac      0f85ee030000   jne 0x44a0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000040b2      4c896c2450     mov qword [rsp + 0x50], r13
0x000040b7      4983c703       add r15, 3
0x000040bb      31c0           xor eax, eax
0x000040bd      448864247c     mov byte [rsp + 0x7c], r12b
0x000040c2      4531c0         xor r8d, r8d
0x000040c5      4989d5         mov r13, rdx
0x000040c8      bb27000000     mov ebx, 0x27                           ; '''
0x000040cd      e917faffff     jmp 0x3ae9
0x000040d2      660f1f440000   nop word [rax + rax]
0x000040d8      f644247804     test byte [rsp + 0x78], 4
0x000040dd      7421           je 0x4100
0x000040df      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000040e3      4c39d9         cmp rcx, r11
0x000040e6      7318           jae 0x4100
0x000040e8      488b442410     mov rax, qword [rsp + 0x10]
0x000040ed      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000040f2      0f848a070000   je 0x4882
0x000040f8      0f1f84000000.  nop dword [rax + rax]
0x00004100      31d2           xor edx, edx
0x00004102      4531e4         xor r12d, r12d
0x00004105      31c0           xor eax, eax
0x00004107      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000410c      e9a7f9ffff     jmp 0x3ab8
0x00004111      0f1f80000000.  nop dword [rax]
0x00004118      807c240f00     cmp byte [rsp + 0xf], 0
0x0000411d      0f851d080000   jne 0x4940
0x00004123      4531e4         xor r12d, r12d
0x00004126      31c0           xor eax, eax
0x00004128      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000412d      e9b7f9ffff     jmp 0x3ae9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004132      660f1f440000   nop word [rax + rax]
0x00004138      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004140      4983fbff       cmp r11, 0xffffffffffffffff
0x00004144      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004150      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004155      752d           jne 0x4184
0x00004157      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000415c      4488442440     mov byte [rsp + 0x40], r8b
0x00004161      4488542438     mov byte [rsp + 0x38], r10b
0x00004166      4c894c2430     mov qword [rsp + 0x30], r9
0x0000416b      e8b0d6ffff     call sym.imp.strlen
0x00004170      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004176      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000417c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000417f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004184      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000418c      31c9           xor ecx, ecx
0x0000418e      885c247e       mov byte [rsp + 0x7e], bl
0x00004192      448844247d     mov byte [rsp + 0x7d], r8b
0x00004197      4889cb         mov rbx, rcx
0x0000419a      4c898c248800.  mov qword [rsp + 0x88], r9
0x000041a2      4889442438     mov qword [rsp + 0x38], rax
0x000041a7      448854247f     mov byte [rsp + 0x7f], r10b
0x000041ac      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000041b4      4c89742440     mov qword [rsp + 0x40], r14
0x000041b9      4c896c2470     mov qword [rsp + 0x70], r13
0x000041be      4c895c2430     mov qword [rsp + 0x30], r11
0x000041c3      488b442410     mov rax, qword [rsp + 0x10]
0x000041c8      4c8d741d00     lea r14, [rbp + rbx]
0x000041cd      488b542430     mov rdx, qword [rsp + 0x30]
0x000041d2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000041d7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000041dc      4e8d2c30       lea r13, [rax + r14]
0x000041e0      4c29f2         sub rdx, r14
0x000041e3      4c89ee         mov rsi, r13
0x000041e6      e895210000     call sym.rpl_mbrtowc
0x000041eb      4885c0         test rax, rax
0x000041ee      4989c7         mov r15, rax
0x000041f1      744e           je 0x4241
0x000041f3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000041f7      0f8418060000   je 0x4815
0x000041fd      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004201      0f849a050000   je 0x47a1
0x00004207      837c240802     cmp dword [rsp + 8], 2
0x0000420c      0f94c0         sete al
0x0000420f      2244240f       and al, byte [rsp + 0xf]
0x00004213      0f8597010000   jne 0x43b0
0x00004219      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004220      e86bd8ffff     call sym.imp.iswprint
0x00004225      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000422a      85c0           test eax, eax
0x0000422c      b800000000     mov eax, 0
0x00004231      440f44e0       cmove r12d, eax
0x00004235      4c01fb         add rbx, r15
0x00004238      e843d8ffff     call sym.imp.mbsinit
0x0000423d      85c0           test eax, eax
0x0000423f      7482           je 0x41c3
0x00004241      4489e2         mov edx, r12d
0x00004244      4889df         mov rdi, rbx
0x00004247      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000424d      83f201         xor edx, 1
0x00004250      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004255      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000425b      2254240d       and dl, byte [rsp + 0xd]
0x0000425f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004267      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000426c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004271      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004276      4883ff01       cmp rdi, 1
0x0000427a      0f86fb050000   jbe 0x487b
0x00004280      4889f9         mov rcx, rdi
0x00004283      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004285      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000428b      4801e9         add rcx, rbp
0x0000428e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004293      e9b6000000     jmp 0x434e
0x00004298      0f1f84000000.  nop dword [rax + rax]
0x000042a0      837c240802     cmp dword [rsp + 8], 2
0x000042a5      0f94c0         sete al
0x000042a8      4584c9         test r9b, r9b
0x000042ab      0f85af040000   jne 0x4760
0x000042b1      4489c6         mov esi, r8d
0x000042b4      83f601         xor esi, 1
0x000042b7      4020f0         and al, sil
0x000042ba      742f           je 0x42eb                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000042bc      4d39fd         cmp r13, r15
0x000042bf      7605           jbe 0x42c6
0x000042c1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000042c6      498d7701       lea rsi, [r15 + 1]
0x000042ca      4939f5         cmp r13, rsi
0x000042cd      7606           jbe 0x42d5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000042cf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000042d5      498d7702       lea rsi, [r15 + 2]
0x000042d9      4939f5         cmp r13, rsi
0x000042dc      7606           jbe 0x42e4
0x000042de      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000042e4      4983c703       add r15, 3
0x000042e8      4189c0         mov r8d, eax
0x000042eb      4d39fd         cmp r13, r15
0x000042ee      7605           jbe 0x42f5
0x000042f0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000042f5      498d4701       lea rax, [r15 + 1]
0x000042f9      4939c5         cmp r13, rax
0x000042fc      760d           jbe 0x430b
0x000042fe      89d8           mov eax, ebx
0x00004300      c0e806         shr al, 6
0x00004303      83c030         add eax, 0x30
0x00004306      4388443e01     mov byte [r14 + r15 + 1], al
0x0000430b      498d4702       lea rax, [r15 + 2]
0x0000430f      4939c5         cmp r13, rax
0x00004312      7610           jbe 0x4324
0x00004314      89d8           mov eax, ebx
0x00004316      c0e803         shr al, 3
0x00004319      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000431c      83c030         add eax, 0x30
0x0000431f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004324      83e307         and ebx, 7
0x00004327      4883c501       add rbp, 1
0x0000432b      4983c703       add r15, 3
0x0000432f      83c330         add ebx, 0x30
0x00004332      4839cd         cmp rbp, rcx
0x00004335      0f83e5f7ffff   jae 0x3b20
0x0000433b      89d6           mov esi, edx
0x0000433d      4d39fd         cmp r13, r15
0x00004340      7604           jbe 0x4346
0x00004342      43881c3e       mov byte [r14 + r15], bl
0x00004346      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000434a      4983c701       add r15, 1
0x0000434e      84d2           test dl, dl
0x00004350      0f854affffff   jne 0x42a0
0x00004356      89f0           mov eax, esi
0x00004358      83f001         xor eax, 1
0x0000435b      4421c0         and eax, r8d
0x0000435e      4584d2         test r10b, r10b
0x00004361      740e           je 0x4371
0x00004363      4d39fd         cmp r13, r15
0x00004366      7605           jbe 0x436d
0x00004368      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000436d      4983c701       add r15, 1
0x00004371      4883c501       add rbp, 1
0x00004375      4839cd         cmp rbp, rcx
0x00004378      0f837ef7ffff   jae 0x3afc
0x0000437e      84c0           test al, al
0x00004380      0f84f8030000   je 0x477e
0x00004386      4d39fd         cmp r13, r15
0x00004389      7605           jbe 0x4390
0x0000438b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004390      498d4701       lea rax, [r15 + 1]
0x00004394      4939c5         cmp r13, rax
0x00004397      7606           jbe 0x439f
0x00004399      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000439f      4983c702       add r15, 2
0x000043a3      4531d2         xor r10d, r10d
0x000043a6      4531c0         xor r8d, r8d
0x000043a9      eb92           jmp 0x433d
0x000043ab      0f1f440000     nop dword [rax + rax]
0x000043b0      4983ff01       cmp r15, 1
0x000043b4      0f845ffeffff   je 0x4219
0x000043ba      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000043bf      4a8d0c3f       lea rcx, [rdi + r15]
0x000043c3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000043c8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000043cc      eb0f           jmp 0x43dd
0x000043ce      6690           nop
0x000043d0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000043d4      4939d0         cmp r8, rdx
0x000043d7      0f843cfeffff   je 0x4219
0x000043dd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000043e0      83e95b         sub ecx, 0x5b
0x000043e3      80f921         cmp cl, 0x21
0x000043e6      77e8           ja 0x43d0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000043e8      be01000000     mov esi, 1
0x000043ed      48d3e6         shl rsi, cl
0x000043f0      4889f1         mov rcx, rsi
0x000043f3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000043fd      4885f1         test rcx, rsi
0x00004400      74ce           je 0x43d0
0x00004402      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004407      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000440c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004411      c74424080200.  mov dword [rsp + 8], 2
0x00004419      807c240d00     cmp byte [rsp + 0xd], 0
0x0000441e      7410           je 0x4430
0x00004420      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004422      b804000000     mov eax, 4
0x00004427      0f44442408     cmove eax, dword [rsp + 8]
0x0000442c      89442408       mov dword [rsp + 8], eax
0x00004430      4883ec08       sub rsp, 8
0x00004434      4889e9         mov rcx, rbp
0x00004437      4c89ee         mov rsi, r13
0x0000443a      ff742468       push qword [rsp + 0x68]
0x0000443e      ff742478       push qword [rsp + 0x78]
0x00004442      4c89f7         mov rdi, r14
0x00004445      6a00           push 0
0x00004447      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000444f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004454      488b542430     mov rdx, qword [rsp + 0x30]
0x00004459      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000445d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004462      4883c420       add rsp, 0x20
0x00004466      4989c7         mov r15, rax
0x00004469      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004471      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000447a      4c89f8         mov rax, r15
0x0000447d      0f8500060000   jne 0x4a83
0x00004483      4881c4b80000.  add rsp, 0xb8
0x0000448a      5b             pop rbx
0x0000448b      5d             pop rbp
0x0000448c      415c           pop r12
0x0000448e      415d           pop r13
0x00004490      415e           pop r14
0x00004492      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004494      c3             ret
0x00004495      0f1f00         nop dword [rax]
0x00004498      4c89dd         mov rbp, r11
0x0000449b      e979ffffff     jmp 0x4419
0x000044a0      4d39fd         cmp r13, r15
0x000044a3      7605           jbe 0x44aa
0x000044a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044aa      498d4701       lea rax, [r15 + 1]
0x000044ae      4939c5         cmp r13, rax
0x000044b1      7606           jbe 0x44b9
0x000044b3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000044b9      498d4702       lea rax, [r15 + 2]
0x000044bd      4939c5         cmp r13, rax
0x000044c0      0f86ec050000   jbe 0x4ab2
0x000044c6      4c89ea         mov rdx, r13
0x000044c9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044cf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000044d4      e9d9fbffff     jmp 0x40b2
0x000044d9      4489e0         mov eax, r12d
0x000044dc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000044e1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000044e4      e900f6ffff     jmp 0x3ae9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000044e9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044ef      e9c5f9ffff     jmp 0x3eb9
0x000044f4      85db           test ebx, ebx
0x000044f6      0f8527f4ffff   jne 0x3923
0x000044fc      c644240d01     mov byte [rsp + 0xd], 1
0x00004501      4d85ed         test r13, r13
0x00004504      0f8590050000   jne 0x4a9a
0x0000450a      488d05742d00.  lea rax, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004511      48c744245000.  mov qword [rsp + 0x50], 0
0x0000451a      c644240e01     mov byte [rsp + 0xe], 1
0x0000451f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004524      4531e4         xor r12d, r12d
0x00004527      c644240f00     mov byte [rsp + 0xf], 0
0x0000452c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004535      4889442448     mov qword [rsp + 0x48], rax
0x0000453a      41bf01000000   mov r15d, 1
0x00004540      c74424080200.  mov dword [rsp + 8], 2
0x00004548      e916f4ffff     jmp 0x3963                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000454d      0f1f00         nop dword [rax]
0x00004550      85db           test ebx, ebx
0x00004552      0f85f5030000   jne 0x494d
0x00004558      4d85ed         test r13, r13
0x0000455b      0f8425020000   je 0x4786
0x00004561      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004565      c644240e01     mov byte [rsp + 0xe], 1
0x0000456a      4531e4         xor r12d, r12d
0x0000456d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004572      48c744245000.  mov qword [rsp + 0x50], 0
0x0000457b      488d05012d00.  lea rax, str.l______l                   ; 0x7283 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004582      c644240f00     mov byte [rsp + 0xf], 0
0x00004587      c644240d01     mov byte [rsp + 0xd], 1
0x0000458c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004595      41bf01000000   mov r15d, 1
0x0000459b      4889442448     mov qword [rsp + 0x48], rax
0x000045a0      e9bef3ffff     jmp 0x3963
0x000045a5      488d05d72c00.  lea rax, str.l______l                   ; 0x7283 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000045ac      c644240e01     mov byte [rsp + 0xe], 1
0x000045b1      c644247c00     mov byte [rsp + 0x7c], 0
0x000045b6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000045b9      48c744245000.  mov qword [rsp + 0x50], 0
0x000045c2      c644240f01     mov byte [rsp + 0xf], 1
0x000045c7      c644240d01     mov byte [rsp + 0xd], 1
0x000045cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000045d5      4531ff         xor r15d, r15d
0x000045d8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000045dd      c74424080500.  mov dword [rsp + 8], 5
0x000045e5      e979f3ffff     jmp 0x3963
0x000045ea      c644240e01     mov byte [rsp + 0xe], 1
0x000045ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000045f4      4531e4         xor r12d, r12d
0x000045f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00004600      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004605      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004608      c644240d01     mov byte [rsp + 0xd], 1
0x0000460d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004616      48c744244800.  mov qword [rsp + 0x48], 0
0x0000461f      e93ff3ffff     jmp 0x3963
0x00004624      837c24080a     cmp dword [rsp + 8], 0xa
0x00004629      7456           je 0x4681
0x0000462b      488d35552c00.  lea rsi, [0x00007287]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004632      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004634      ba05000000     mov edx, 5
0x00004639      e8c2d1ffff     call sym.imp.dcgettext
0x0000463e      4889c1         mov rcx, rax
0x00004641      4889442468     mov qword [rsp + 0x68], rax
0x00004646      488d053a2c00.  lea rax, [0x00007287]                   ; "`"
0x0000464d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004650      0f8498030000   je 0x49ee
0x00004656      488d35282c00.  lea rsi, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000465d      31ff           xor edi, edi
0x0000465f      ba05000000     mov edx, 5
0x00004664      e897d1ffff     call sym.imp.dcgettext
0x00004669      4889c1         mov rcx, rax
0x0000466c      4889442460     mov qword [rsp + 0x60], rax
0x00004671      488d050d2c00.  lea rax, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004678      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000467b      0f8483030000   je 0x4a04
0x00004681      4531ff         xor r15d, r15d
0x00004684      85db           test ebx, ebx
0x00004686      0f84c1010000   je 0x484d
0x0000468c      85db           test ebx, ebx
0x0000468e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004693      0f9544240f     setne byte [rsp + 0xf]
0x00004698      4531e4         xor r12d, r12d
0x0000469b      4889df         mov rdi, rbx
0x0000469e      e87dd1ffff     call sym.imp.strlen
0x000046a3      48895c2448     mov qword [rsp + 0x48], rbx
0x000046a8      4889442418     mov qword [rsp + 0x18], rax
0x000046ad      c644240e01     mov byte [rsp + 0xe], 1
0x000046b2      c644247c00     mov byte [rsp + 0x7c], 0
0x000046b7      48c744245000.  mov qword [rsp + 0x50], 0
0x000046c0      c644240d01     mov byte [rsp + 0xd], 1
0x000046c5      e999f2ffff     jmp 0x3963
0x000046ca      c644240e01     mov byte [rsp + 0xe], 1
0x000046cf      c644247c00     mov byte [rsp + 0x7c], 0
0x000046d4      4531e4         xor r12d, r12d
0x000046d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000046e0      c644240f00     mov byte [rsp + 0xf], 0
0x000046e5      4531ff         xor r15d, r15d
0x000046e8      c644240d00     mov byte [rsp + 0xd], 0
0x000046ed      48c744241800.  mov qword [rsp + 0x18], 0
0x000046f6      48c744244800.  mov qword [rsp + 0x48], 0
0x000046ff      e95ff2ffff     jmp 0x3963
0x00004704      c644240e01     mov byte [rsp + 0xe], 1
0x00004709      c644247c00     mov byte [rsp + 0x7c], 0
0x0000470e      4531e4         xor r12d, r12d
0x00004711      48c744245000.  mov qword [rsp + 0x50], 0
0x0000471a      c644240f01     mov byte [rsp + 0xf], 1
0x0000471f      c644240d01     mov byte [rsp + 0xd], 1
0x00004724      e91af2ffff     jmp 0x3943
0x00004729      4d39fd         cmp r13, r15
0x0000472c      7605           jbe 0x4733
0x0000472e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004733      488d4102       lea rax, [rcx + 2]
0x00004737      4939c5         cmp r13, rax
0x0000473a      7606           jbe 0x4742
0x0000473c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004742      4489e0         mov eax, r12d
0x00004745      4c8d7903       lea r15, [rcx + 3]
0x00004749      4531e4         xor r12d, r12d
0x0000474c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004751      e962f3ffff     jmp 0x3ab8
0x00004756      662e0f1f8400.  nop word cs:[rax + rax]
0x00004760      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004765      4c89dd         mov rbp, r11
0x00004768      885c240d       mov byte [rsp + 0xd], bl
0x0000476c      e9a8fcffff     jmp 0x4419
0x00004771      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004776      4531e4         xor r12d, r12d
0x00004779      e902fbffff     jmp 0x4280
0x0000477e      4531d2         xor r10d, r10d
0x00004781      e9b7fbffff     jmp 0x433d
0x00004786      48c744245000.  mov qword [rsp + 0x50], 0
0x0000478f      c644240e01     mov byte [rsp + 0xe], 1
0x00004794      4531e4         xor r12d, r12d
0x00004797      c644247c00     mov byte [rsp + 0x7c], 0
0x0000479c      e9dafdffff     jmp 0x457b
0x000047a1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000047a6      4c89f6         mov rsi, r14
0x000047a9      4c89e9         mov rcx, r13
0x000047ac      4889d8         mov rax, rbx
0x000047af      4889df         mov rdi, rbx
0x000047b2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000047b8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000047bd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000047c5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000047c8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000047ce      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000047d6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000047db      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000047e0      7326           jae 0x4808
0x000047e2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000047e5      7510           jne 0x47f7
0x000047e7      eb1f           jmp 0x4808
0x000047e9      0f1f80000000.  nop dword [rax]
0x000047f0      41803c0100     cmp byte [r9 + rax], 0
0x000047f5      740e           je 0x4805
0x000047f7      4883c001       add rax, 1
0x000047fb      488d540500     lea rdx, [rbp + rax]
0x00004800      4939d3         cmp r11, rdx
0x00004803      77eb           ja 0x47f0
0x00004805      4889c7         mov rdi, rax
0x00004808      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000480d      4531e4         xor r12d, r12d
0x00004810      e961faffff     jmp 0x4276
0x00004815      4889df         mov rdi, rbx
0x00004818      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000481e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004823      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004829      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004831      4531e4         xor r12d, r12d
0x00004834      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004839      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000483e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004843      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004848      e929faffff     jmp 0x4276
0x0000484d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004852      0fb602         movzx eax, byte [rdx]
0x00004855      84c0           test al, al
0x00004857      0f842ffeffff   je 0x468c
0x0000485d      0f1f00         nop dword [rax]
0x00004860      4d39fd         cmp r13, r15
0x00004863      7604           jbe 0x4869
0x00004865      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004869      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000486d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004872      84c0           test al, al
0x00004874      75ea           jne 0x4860
0x00004876      e911feffff     jmp 0x468c
0x0000487b      89d0           mov eax, edx
0x0000487d      e955f5ffff     jmp 0x3dd7
0x00004882      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004886      80fb3e         cmp bl, 0x3e
0x00004889      0f8771f8ffff   ja 0x4100
0x0000488f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004899      480fa3d8       bt rax, rbx
0x0000489d      0f835df8ffff   jae 0x4100
0x000048a3      807c240f00     cmp byte [rsp + 0xf], 0
0x000048a8      0f85e4010000   jne 0x4a92                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000048ae      4d39fd         cmp r13, r15
0x000048b1      7605           jbe 0x48b8
0x000048b3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000048b8      498d4701       lea rax, [r15 + 1]
0x000048bc      4939c5         cmp r13, rax
0x000048bf      7606           jbe 0x48c7
0x000048c1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000048c7      498d4702       lea rax, [r15 + 2]
0x000048cb      4939c5         cmp r13, rax
0x000048ce      7606           jbe 0x48d6
0x000048d0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000048d6      498d4703       lea rax, [r15 + 3]
0x000048da      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000048dd      7606           jbe 0x48e5
0x000048df      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x000048e5      4983c704       add r15, 4
0x000048e9      31d2           xor edx, edx
0x000048eb      4531e4         xor r12d, r12d
0x000048ee      31c0           xor eax, eax
0x000048f0      4889cd         mov rbp, rcx
0x000048f3      e9c0f1ffff     jmp 0x3ab8
0x000048f8      85db           test ebx, ebx
0x000048fa      0f8488010000   je 0x4a88
0x00004900      488d057e2900.  lea rax, [0x00007285]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004907      c644240e01     mov byte [rsp + 0xe], 1
0x0000490c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004911      4531e4         xor r12d, r12d
0x00004914      48c744245000.  mov qword [rsp + 0x50], 0
0x0000491d      c644240f01     mov byte [rsp + 0xf], 1
0x00004922      c644240d00     mov byte [rsp + 0xd], 0
0x00004927      48c744241801.  mov qword [rsp + 0x18], 1
0x00004930      4531ff         xor r15d, r15d
0x00004933      4889442448     mov qword [rsp + 0x48], rax
0x00004938      e926f0ffff     jmp 0x3963
0x0000493d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004940      4c89dd         mov rbp, r11
0x00004943      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004948      e9ccfaffff     jmp 0x4419
0x0000494d      488d052f2900.  lea rax, str.l______l                   ; 0x7283 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004954      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004959      c644247c00     mov byte [rsp + 0x7c], 0
0x0000495e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004961      48c744245000.  mov qword [rsp + 0x50], 0
0x0000496a      c644240f01     mov byte [rsp + 0xf], 1
0x0000496f      c644240d01     mov byte [rsp + 0xd], 1
0x00004974      48c744241801.  mov qword [rsp + 0x18], 1
0x0000497d      4531ff         xor r15d, r15d
0x00004980      4889442448     mov qword [rsp + 0x48], rax
0x00004985      e9d9efffff     jmp 0x3963
0x0000498a      89d0           mov eax, edx
0x0000498c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004991      4885db         test rbx, rbx
0x00004994      742c           je 0x49c2
0x00004996      84c0           test al, al
0x00004998      7428           je 0x49c2
0x0000499a      0fb60b         movzx ecx, byte [rbx]
0x0000499d      4889d8         mov rax, rbx
0x000049a0      84c9           test cl, cl
0x000049a2      741e           je 0x49c2
0x000049a4      4c89fa         mov rdx, r15
0x000049a7      4c29f8         sub rax, r15
0x000049aa      4939d5         cmp r13, rdx
0x000049ad      7604           jbe 0x49b3
0x000049af      41880c16       mov byte [r14 + rdx], cl
0x000049b3      4883c201       add rdx, 1
0x000049b7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000049bb      84c9           test cl, cl
0x000049bd      75eb           jne 0x49aa
0x000049bf      4989d7         mov r15, rdx
0x000049c2      4d39fd         cmp r13, r15
0x000049c5      0f869efaffff   jbe 0x4469
0x000049cb      43c6043e00     mov byte [r14 + r15], 0
0x000049d0      e994faffff     jmp 0x4469
0x000049d5      837c240802     cmp dword [rsp + 8], 2
0x000049da      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000049df      4c89dd         mov rbp, r11
0x000049e2      0f94c0         sete al
0x000049e5      885c240d       mov byte [rsp + 0xd], bl
0x000049e9      e92bfaffff     jmp 0x4419
0x000049ee      8b742408       mov esi, dword [rsp + 8]
0x000049f2      4889cf         mov rdi, rcx
0x000049f5      e8a6edffff     call sym.gettext_quote.part.1
0x000049fa      4889442468     mov qword [rsp + 0x68], rax
0x000049ff      e952fcffff     jmp 0x4656
0x00004a04      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004a08      4889cf         mov rdi, rcx
0x00004a0b      e890edffff     call sym.gettext_quote.part.1
0x00004a10      4889442460     mov qword [rsp + 0x60], rax
0x00004a15      e967fcffff     jmp 0x4681
0x00004a1a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004a1f      4c89dd         mov rbp, r11
0x00004a22      89d0           mov eax, edx
0x00004a24      885c240d       mov byte [rsp + 0xd], bl
0x00004a28      e9ecf9ffff     jmp 0x4419
0x00004a2d      4883ec08       sub rsp, 8
0x00004a31      41b805000000   mov r8d, 5
0x00004a37      4c89d9         mov rcx, r11
0x00004a3a      ff742468       push qword [rsp + 0x68]
0x00004a3e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004a42      4c89f7         mov rdi, r14
0x00004a45      ff742438       push qword [rsp + 0x38]
0x00004a49      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004a51      488b542430     mov rdx, qword [rsp + 0x30]
0x00004a56      488b742470     mov rsi, qword [rsp + 0x70]
0x00004a5b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004a60      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004a64      4989c7         mov r15, rax
0x00004a67      e9fdf9ffff     jmp 0x4469
0x00004a6c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004a71      e916ffffff     jmp 0x498c
0x00004a76      c74424080200.  mov dword [rsp + 8], 2
0x00004a7e      e996f9ffff     jmp 0x4419
0x00004a83      e8a8cdffff     call sym.imp.__stack_chk_fail
0x00004a88      c644240d00     mov byte [rsp + 0xd], 0
0x00004a8d      e96ffaffff     jmp 0x4501
0x00004a92      4c89dd         mov rbp, r11
0x00004a95      e996f9ffff     jmp 0x4430
0x00004a9a      c644240e01     mov byte [rsp + 0xe], 1
0x00004a9f      31c0           xor eax, eax
0x00004aa1      4531e4         xor r12d, r12d
0x00004aa4      48c744245000.  mov qword [rsp + 0x50], 0
0x00004aad      e9a2f5ffff     jmp 0x4054
0x00004ab2      4c89ea         mov rdx, r13
0x00004ab5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004aba      e9f3f5ffff     jmp 0x40b2
0x00004abf      e8bcccffff     call sym.imp.abort
0x00004ac4      6690           nop
0x00004ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004ad0      4157           push r15
0x00004ad2      4156           push r14
0x00004ad4      4c63ff         movsxd r15, edi
0x00004ad7      4155           push r13
0x00004ad9      4154           push r12
0x00004adb      4989d6         mov r14, rdx
0x00004ade      55             push rbp
0x00004adf      53             push rbx
0x00004ae0      4889cd         mov rbp, rcx
0x00004ae3      4883ec28       sub rsp, 0x28
0x00004ae7      4889742408     mov qword [rsp + 8], rsi
0x00004aec      e89fccffff     call sym.imp.__errno_location
0x00004af1      4989c5         mov r13, rax
0x00004af4      8b00           mov eax, dword [rax]
0x00004af6      4585ff         test r15d, r15d
0x00004af9      488b1d805520.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004b00      89442418       mov dword [rsp + 0x18], eax
0x00004b04      0f8867010000   js 0x4c71
0x00004b0a      44393d675520.  cmp dword [obj.nslots], r15d            ; [0x20a078:4]=1
0x00004b11      7f62           jg 0x4b75
0x00004b13      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004b1a      0f8456010000   je 0x4c76
0x00004b20      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004b24      488d05655520.  lea rax, obj.slotvec0                   ; 0x20a090
0x00004b2b      4963f4         movsxd rsi, r12d
0x00004b2e      48c1e604       shl rsi, 4
0x00004b32      4839c3         cmp rbx, rax
0x00004b35      0f8415010000   je 0x4c50
0x00004b3b      4889df         mov rdi, rbx
0x00004b3e      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004b43      4889c3         mov rbx, rax
0x00004b46      488905335520.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004b4d      48633d245520.  movsxd rdi, dword [obj.nslots]          ; [0x20a078:4]=1
0x00004b54      4489e2         mov edx, r12d
0x00004b57      31f6           xor esi, esi
0x00004b59      29fa           sub edx, edi
0x00004b5b      48c1e704       shl rdi, 4
0x00004b5f      4863d2         movsxd rdx, edx
0x00004b62      4801df         add rdi, rbx
0x00004b65      48c1e204       shl rdx, 4
0x00004b69      e852cdffff     call sym.imp.memset
0x00004b6e      448925035520.  mov dword [obj.nslots], r12d            ; [0x20a078:4]=1
0x00004b75      8b4504         mov eax, dword [rbp + 4]
0x00004b78      49c1e704       shl r15, 4
0x00004b7c      4883ec08       sub rsp, 8
0x00004b80      4c01fb         add rbx, r15
0x00004b83      4c8d7d08       lea r15, [rbp + 8]
0x00004b87      448b4500       mov r8d, dword [rbp]
0x00004b8b      4c8b1b         mov r11, qword [rbx]
0x00004b8e      4c8b6308       mov r12, qword [rbx + 8]
0x00004b92      4c89f1         mov rcx, r14
0x00004b95      83c801         or eax, 1
0x00004b98      89442424       mov dword [rsp + 0x24], eax
0x00004b9c      ff7530         push qword [rbp + 0x30]
0x00004b9f      4189c1         mov r9d, eax
0x00004ba2      ff7528         push qword [rbp + 0x28]
0x00004ba5      4157           push r15
0x00004ba7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004baa      488b542428     mov rdx, qword [rsp + 0x28]
0x00004baf      4c89e7         mov rdi, r12
0x00004bb2      4c895c2430     mov qword [rsp + 0x30], r11
0x00004bb7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004bbc      4883c420       add rsp, 0x20
0x00004bc0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004bc5      4939c3         cmp r11, rax
0x00004bc8      7767           ja 0x4c31
0x00004bca      488d7001       lea rsi, [rax + 1]
0x00004bce      488d056b5520.  lea rax, obj.slot0                      ; 0x20a140
0x00004bd5      4939c4         cmp r12, rax
0x00004bd8      488933         mov qword [rbx], rsi
0x00004bdb      7412           je 0x4bef
0x00004bdd      4c89e7         mov rdi, r12
0x00004be0      4889742410     mov qword [rsp + 0x10], rsi
0x00004be5      e886cbffff     call sym.imp.free
0x00004bea      488b742410     mov rsi, qword [rsp + 0x10]
0x00004bef      4889f7         mov rdi, rsi
0x00004bf2      4889742410     mov qword [rsp + 0x10], rsi
0x00004bf7      e8540e0000     call sym.xmalloc
0x00004bfc      4883ec08       sub rsp, 8
0x00004c00      48894308       mov qword [rbx + 8], rax
0x00004c04      448b4500       mov r8d, dword [rbp]
0x00004c08      ff7530         push qword [rbp + 0x30]
0x00004c0b      ff7528         push qword [rbp + 0x28]
0x00004c0e      4c89f1         mov rcx, r14
0x00004c11      4157           push r15
0x00004c13      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004c18      4889c7         mov rdi, rax
0x00004c1b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004c20      488b742430     mov rsi, qword [rsp + 0x30]
0x00004c25      4989c4         mov r12, rax
0x00004c28      e863ecffff     call sym.quotearg_buffer_restyled
0x00004c2d      4883c420       add rsp, 0x20
0x00004c31      8b442418       mov eax, dword [rsp + 0x18]
0x00004c35      41894500       mov dword [r13], eax
0x00004c39      4883c428       add rsp, 0x28
0x00004c3d      4c89e0         mov rax, r12
0x00004c40      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004c41      5d             pop rbp
0x00004c42      415c           pop r12
0x00004c44      415d           pop r13
0x00004c46      415e           pop r14
0x00004c48      415f           pop r15
0x00004c4a      c3             ret
0x00004c4b      0f1f440000     nop dword [rax + rax]
0x00004c50      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004c52      e8590e0000     call sym.xrealloc
0x00004c57      660f6f053154.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004c5f      4889c3         mov rbx, rax
0x00004c62      488905175420.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004c69      0f1100         movups xmmword [rax], xmm0
0x00004c6c      e9dcfeffff     jmp 0x4b4d
0x00004c71      e80acbffff     call sym.imp.abort
0x00004c76      e825100000     call sym.xalloc_die
0x00004c7b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004c80      4154           push r12
0x00004c82      55             push rbp
0x00004c83      53             push rbx
0x00004c84      4889fb         mov rbx, rdi
0x00004c87      e804cbffff     call sym.imp.__errno_location
0x00004c8c      448b20         mov r12d, dword [rax]
0x00004c8f      4889c5         mov rbp, rax
0x00004c92      488d05a75520.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004c99      4885db         test rbx, rbx
0x00004c9c      be38000000     mov esi, 0x38                           ; '8'
0x00004ca1      480f44d8       cmove rbx, rax
0x00004ca5      4889df         mov rdi, rbx
0x00004ca8      e8a30f0000     call sym.xmemdup
0x00004cad      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004cb1      5b             pop rbx
0x00004cb2      5d             pop rbp
0x00004cb3      415c           pop r12
0x00004cb5      c3             ret
0x00004cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004cc0      488d05795520.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004cc7      4885ff         test rdi, rdi
0x00004cca      480f44f8       cmove rdi, rax
0x00004cce      8b07           mov eax, dword [rdi]
0x00004cd0      c3             ret
0x00004cd1      0f1f440000     nop dword [rax + rax]
0x00004cd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004ce0      488d05595520.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004ce7      4885ff         test rdi, rdi
0x00004cea      480f44f8       cmove rdi, rax
0x00004cee      8937           mov dword [rdi], esi
0x00004cf0      c3             ret
0x00004cf1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004d00      488d05395520.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004d07      4885ff         test rdi, rdi
0x00004d0a      89f1           mov ecx, esi
0x00004d0c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004d10      89f0           mov eax, esi
0x00004d12      83e11f         and ecx, 0x1f
0x00004d15      c0e805         shr al, 5
0x00004d18      0fb6c0         movzx eax, al
0x00004d1b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004d20      8b37           mov esi, dword [rdi]
0x00004d22      89f0           mov eax, esi
0x00004d24      d3e8           shr eax, cl
0x00004d26      31c2           xor edx, eax
0x00004d28      83e001         and eax, 1
0x00004d2b      83e201         and edx, 1
0x00004d2e      d3e2           shl edx, cl
0x00004d30      31f2           xor edx, esi
0x00004d32      8917           mov dword [rdi], edx
0x00004d34      c3             ret
0x00004d35      90             nop
0x00004d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004d40      488d05f95420.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004d47      4885ff         test rdi, rdi
0x00004d4a      480f44f8       cmove rdi, rax
0x00004d4e      8b4704         mov eax, dword [rdi + 4]
0x00004d51      897704         mov dword [rdi + 4], esi
0x00004d54      c3             ret
0x00004d55      90             nop
0x00004d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004d60      488d05d95420.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004d67      4885ff         test rdi, rdi
0x00004d6a      480f44f8       cmove rdi, rax
0x00004d6e      4885f6         test rsi, rsi
0x00004d71      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004d77      740e           je 0x4d87
0x00004d79      4885d2         test rdx, rdx
0x00004d7c      7409           je 0x4d87
0x00004d7e      48897728       mov qword [rdi + 0x28], rsi
0x00004d82      48895730       mov qword [rdi + 0x30], rdx
0x00004d86      c3             ret
0x00004d87      4883ec08       sub rsp, 8
0x00004d8b      e8f0c9ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004d90      4157           push r15
0x00004d92      4156           push r14
0x00004d94      488d05a55420.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004d9b      4155           push r13
0x00004d9d      4154           push r12
0x00004d9f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004da2      55             push rbp
0x00004da3      53             push rbx
0x00004da4      4c89c3         mov rbx, r8
0x00004da7      4989f6         mov r14, rsi
0x00004daa      4989d7         mov r15, rdx
0x00004dad      4883ec18       sub rsp, 0x18
0x00004db1      4d85c0         test r8, r8
0x00004db4      480f44d8       cmove rbx, rax
0x00004db8      48894c2408     mov qword [rsp + 8], rcx
0x00004dbd      e8cec9ffff     call sym.imp.__errno_location
0x00004dc2      448b20         mov r12d, dword [rax]
0x00004dc5      4889c5         mov rbp, rax
0x00004dc8      488d4308       lea rax, [rbx + 8]
0x00004dcc      4883ec08       sub rsp, 8
0x00004dd0      448b4b04       mov r9d, dword [rbx + 4]
0x00004dd4      ff7330         push qword [rbx + 0x30]
0x00004dd7      448b03         mov r8d, dword [rbx]
0x00004dda      ff7328         push qword [rbx + 0x28]
0x00004ddd      4c89fa         mov rdx, r15
0x00004de0      50             push rax
0x00004de1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004de6      4c89f6         mov rsi, r14
0x00004de9      4c89ef         mov rdi, r13
0x00004dec      e89feaffff     call sym.quotearg_buffer_restyled
0x00004df1      44896500       mov dword [rbp], r12d
0x00004df5      4883c438       add rsp, 0x38
0x00004df9      5b             pop rbx
0x00004dfa      5d             pop rbp
0x00004dfb      415c           pop r12
0x00004dfd      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004dff      415e           pop r14
0x00004e01      415f           pop r15
0x00004e03      c3             ret
0x00004e04      6690           nop
0x00004e06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004e10      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004e12      4156           push r14
0x00004e14      488d05255420.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00004e1b      4155           push r13
0x00004e1d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004e1f      4989d4         mov r12, rdx
0x00004e22      55             push rbp
0x00004e23      53             push rbx
0x00004e24      4889cb         mov rbx, rcx
0x00004e27      4989fe         mov r14, rdi
0x00004e2a      4989f7         mov r15, rsi
0x00004e2d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004e31      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004e34      480f44d8       cmove rbx, rax
0x00004e38      31ed           xor ebp, ebp
0x00004e3a      e851c9ffff     call sym.imp.__errno_location
0x00004e3f      4d85e4         test r12, r12
0x00004e42      4989c5         mov r13, rax
0x00004e45      8b00           mov eax, dword [rax]
0x00004e47      400f94c5       sete bpl
0x00004e4b      0b6b04         or ebp, dword [rbx + 4]
0x00004e4e      4c8d5308       lea r10, [rbx + 8]
0x00004e52      4883ec08       sub rsp, 8
0x00004e56      448b03         mov r8d, dword [rbx]
0x00004e59      4c89f9         mov rcx, r15
0x00004e5c      89442414       mov dword [rsp + 0x14], eax
0x00004e60      ff7330         push qword [rbx + 0x30]
0x00004e63      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004e66      ff7328         push qword [rbx + 0x28]
0x00004e69      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004e6b      31f6           xor esi, esi
0x00004e6d      4189e9         mov r9d, ebp
0x00004e70      31ff           xor edi, edi
0x00004e72      4c89542440     mov qword [rsp + 0x40], r10
0x00004e77      e814eaffff     call sym.quotearg_buffer_restyled
0x00004e7c      488d7001       lea rsi, [rax + 1]
0x00004e80      4889442448     mov qword [rsp + 0x48], rax
0x00004e85      4883c420       add rsp, 0x20
0x00004e89      4889f7         mov rdi, rsi
0x00004e8c      4889742418     mov qword [rsp + 0x18], rsi
0x00004e91      e8ba0b0000     call sym.xmalloc
0x00004e96      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004e9b      4883ec08       sub rsp, 8
0x00004e9f      ff7330         push qword [rbx + 0x30]
0x00004ea2      ff7328         push qword [rbx + 0x28]
0x00004ea5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004eaa      4189e9         mov r9d, ebp
0x00004ead      448b03         mov r8d, dword [rbx]
0x00004eb0      4c89f9         mov rcx, r15
0x00004eb3      4c89f2         mov rdx, r14
0x00004eb6      4889c7         mov rdi, rax
0x00004eb9      4152           push r10
0x00004ebb      488b742438     mov rsi, qword [rsp + 0x38]
0x00004ec0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004ec5      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004ec9      4883c420       add rsp, 0x20
0x00004ecd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004ed0      41894500       mov dword [r13], eax
0x00004ed4      7409           je 0x4edf
0x00004ed6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004edb      4d891c24       mov qword [r12], r11
0x00004edf      488b442410     mov rax, qword [rsp + 0x10]
0x00004ee4      4883c438       add rsp, 0x38
0x00004ee8      5b             pop rbx
0x00004ee9      5d             pop rbp
0x00004eea      415c           pop r12
0x00004eec      415d           pop r13
0x00004eee      415e           pop r14
0x00004ef0      415f           pop r15
0x00004ef2      c3             ret
0x00004ef3      0f1f00         nop dword [rax]
0x00004ef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004f00      4889d1         mov rcx, rdx
0x00004f03      31d2           xor edx, edx
0x00004f05      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004f0a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004f10      8b0562512000   mov eax, dword [obj.nslots]             ; [0x20a078:4]=1
0x00004f16      4154           push r12
0x00004f18      4c8b25615120.  mov r12, qword [obj.slotvec]            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004f1f      55             push rbp
0x00004f20      53             push rbx
0x00004f21      83f801         cmp eax, 1
0x00004f24      7e2b           jle 0x4f51                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004f26      83e802         sub eax, 2
0x00004f29      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004f2e      48c1e004       shl rax, 4
0x00004f32      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004f37      660f1f840000.  nop word [rax + rax]
0x00004f40      488b3b         mov rdi, qword [rbx]
0x00004f43      4883c310       add rbx, 0x10
0x00004f47      e824c8ffff     call sym.imp.free
0x00004f4c      4839eb         cmp rbx, rbp
0x00004f4f      75ef           jne 0x4f40
0x00004f51      498b7c2408     mov rdi, qword [r12 + 8]
0x00004f56      488d1de35120.  lea rbx, obj.slot0                      ; 0x20a140
0x00004f5d      4839df         cmp rdi, rbx
0x00004f60      7417           je 0x4f79
0x00004f62      e809c8ffff     call sym.imp.free
0x00004f67      48c7051e5120.  mov qword [obj.slotvec0], 0x100         ; [0x20a090:8]=256
0x00004f72      48891d1f5120.  mov qword [0x0020a098], rbx             ; [0x20a098:8]=0x20a140 obj.slot0
0x00004f79      488d1d105120.  lea rbx, obj.slotvec0                   ; 0x20a090
0x00004f80      4939dc         cmp r12, rbx
0x00004f83      740f           je 0x4f94
0x00004f85      4c89e7         mov rdi, r12
0x00004f88      e8e3c7ffff     call sym.imp.free
0x00004f8d      48891dec5020.  mov qword [obj.slotvec], rbx            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004f94      5b             pop rbx
0x00004f95      c705d9502000.  mov dword [obj.nslots], 1               ; [0x20a078:4]=1
0x00004f9f      5d             pop rbp
0x00004fa0      415c           pop r12
0x00004fa2      c3             ret
0x00004fa3      0f1f00         nop dword [rax]
0x00004fa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004fb0      488d0d895220.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00004fb7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004fbe      e90dfbffff     jmp sym.quotearg_n_options
0x00004fc3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004fc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004fd0      488d0d695220.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00004fd7      e9f4faffff     jmp sym.quotearg_n_options
0x00004fdc      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004fe0      488d0d595220.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00004fe7      4889fe         mov rsi, rdi
0x00004fea      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ff1      31ff           xor edi, edi
0x00004ff3      e9d8faffff     jmp sym.quotearg_n_options
0x00004ff8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005000      488d0d395220.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00005007      4889f2         mov rdx, rsi
0x0000500a      4889fe         mov rsi, rdi
0x0000500d      31ff           xor edi, edi
0x0000500f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005014      6690           nop
0x00005016      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005020      4883ec48       sub rsp, 0x48
0x00005024      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005027      64488b142528.  mov rdx, qword fs:[0x28]
0x00005030      4889542438     mov qword [rsp + 0x38], rdx
0x00005035      31d2           xor edx, edx
0x00005037      83fe0a         cmp esi, 0xa
0x0000503a      7468           je 0x50a4
0x0000503c      893424         mov dword [rsp], esi
0x0000503f      4889e1         mov rcx, rsp
0x00005042      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005049      4889c6         mov rsi, rax
0x0000504c      48c744240400.  mov qword [rsp + 4], 0
0x00005055      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000505e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005067      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005070      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005079      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005082      c74424340000.  mov dword [rsp + 0x34], 0
0x0000508a      e841faffff     call sym.quotearg_n_options
0x0000508f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005094      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000509d      750a           jne 0x50a9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000509f      4883c448       add rsp, 0x48
0x000050a3      c3             ret
0x000050a4      e8d7c6ffff     call sym.imp.abort
0x000050a9      e882c7ffff     call sym.imp.__stack_chk_fail
0x000050ae      6690           nop
;-- quotearg_n_style_mem:
0x000050b0      4883ec48       sub rsp, 0x48
0x000050b4      4889d0         mov rax, rdx
0x000050b7      4889ca         mov rdx, rcx
0x000050ba      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000050c3      48894c2438     mov qword [rsp + 0x38], rcx
0x000050c8      31c9           xor ecx, ecx
0x000050ca      83fe0a         cmp esi, 0xa
0x000050cd      7461           je 0x5130
0x000050cf      893424         mov dword [rsp], esi
0x000050d2      4889e1         mov rcx, rsp
0x000050d5      4889c6         mov rsi, rax
0x000050d8      48c744240400.  mov qword [rsp + 4], 0
0x000050e1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000050ea      48c744241400.  mov qword [rsp + 0x14], 0
0x000050f3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000050fc      48c744242400.  mov qword [rsp + 0x24], 0
0x00005105      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000510e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005116      e8b5f9ffff     call sym.quotearg_n_options
0x0000511b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005120      644833142528.  xor rdx, qword fs:[0x28]
0x00005129      750a           jne 0x5135
0x0000512b      4883c448       add rsp, 0x48
0x0000512f      c3             ret
0x00005130      e84bc6ffff     call sym.imp.abort
0x00005135      e8f6c6ffff     call sym.imp.__stack_chk_fail
0x0000513a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005140      4889f2         mov rdx, rsi
0x00005143      89fe           mov esi, edi
0x00005145      31ff           xor edi, edi
0x00005147      e9d4feffff     jmp sym.quotearg_n_style
0x0000514c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005150      4889d1         mov rcx, rdx
0x00005153      4889f2         mov rdx, rsi
0x00005156      89fe           mov esi, edi
0x00005158      31ff           xor edi, edi
0x0000515a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000515f      90             nop
;-- quotearg_char_mem:
0x00005160      4883ec48       sub rsp, 0x48
0x00005164      89d1           mov ecx, edx
0x00005166      64488b042528.  mov rax, qword fs:[0x28]
0x0000516f      4889442438     mov qword [rsp + 0x38], rax
0x00005174      31c0           xor eax, eax
0x00005176      488b05f35020.  mov rax, qword [0x0020a270]             ; [0x20a270:8]=0
0x0000517d      4989e0         mov r8, rsp
0x00005180      83e11f         and ecx, 0x1f
0x00005183      660f6f05b550.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000518b      4889442430     mov qword [rsp + 0x30], rax
0x00005190      89d0           mov eax, edx
0x00005192      0f290424       movaps xmmword [rsp], xmm0
0x00005196      c0e805         shr al, 5
0x00005199      0fb6c0         movzx eax, al
0x0000519c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x000051a1      660f6f05a750.  movdqa xmm0, xmmword [0x0020a250]
0x000051a9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000051ae      660f6f05aa50.  movdqa xmm0, xmmword [0x0020a260]
0x000051b6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000051bb      418b11         mov edx, dword [r9]
0x000051be      89d0           mov eax, edx
0x000051c0      d3e8           shr eax, cl
0x000051c2      f7d0           not eax
0x000051c4      83e001         and eax, 1
0x000051c7      d3e0           shl eax, cl
0x000051c9      4c89c1         mov rcx, r8
0x000051cc      31d0           xor eax, edx
0x000051ce      4889f2         mov rdx, rsi
0x000051d1      4889fe         mov rsi, rdi
0x000051d4      418901         mov dword [r9], eax
0x000051d7      31ff           xor edi, edi
0x000051d9      e8f2f8ffff     call sym.quotearg_n_options
0x000051de      488b742438     mov rsi, qword [rsp + 0x38]
0x000051e3      644833342528.  xor rsi, qword fs:[0x28]
0x000051ec      7505           jne 0x51f3
0x000051ee      4883c448       add rsp, 0x48
0x000051f2      c3             ret
0x000051f3      e838c6ffff     call sym.imp.__stack_chk_fail
0x000051f8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005200      400fbed6       movsx edx, sil
0x00005204      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000520b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005210      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005215      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000521c      e93fffffff     jmp sym.quotearg_char_mem
0x00005221      0f1f440000     nop dword [rax + rax]
0x00005226      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005230      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005235      e926ffffff     jmp sym.quotearg_char_mem
0x0000523a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005240      4883ec48       sub rsp, 0x48
0x00005244      4889d0         mov rax, rdx
0x00005247      64488b142528.  mov rdx, qword fs:[0x28]
0x00005250      4889542438     mov qword [rsp + 0x38], rdx
0x00005255      31d2           xor edx, edx
0x00005257      83fe0a         cmp esi, 0xa
0x0000525a      7468           je 0x52c4
0x0000525c      893424         mov dword [rsp], esi
0x0000525f      4889e1         mov rcx, rsp
0x00005262      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005269      4889c6         mov rsi, rax
0x0000526c      48c744240400.  mov qword [rsp + 4], 0
0x00005275      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000527e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005287      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005290      48c744242400.  mov qword [rsp + 0x24], 0
0x00005299      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000052a2      c74424340000.  mov dword [rsp + 0x34], 0
0x000052aa      e821f8ffff     call sym.quotearg_n_options
0x000052af      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000052b4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000052bd      750a           jne 0x52c9
0x000052bf      4883c448       add rsp, 0x48
0x000052c3      c3             ret
0x000052c4      e8b7c4ffff     call sym.imp.abort
0x000052c9      e862c5ffff     call sym.imp.__stack_chk_fail
0x000052ce      6690           nop
;-- quotearg_n_custom_mem:
0x000052d0      4883ec48       sub rsp, 0x48
0x000052d4      4989c9         mov r9, rcx
0x000052d7      488b0d924f20.  mov rcx, qword [0x0020a270]             ; [0x20a270:8]=0
0x000052de      660f6f055a4f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000052e6      64488b042528.  mov rax, qword fs:[0x28]
0x000052ef      4889442438     mov qword [rsp + 0x38], rax
0x000052f4      31c0           xor eax, eax
0x000052f6      0f290424       movaps xmmword [rsp], xmm0
0x000052fa      4885f6         test rsi, rsi
0x000052fd      48894c2430     mov qword [rsp + 0x30], rcx
0x00005302      c704240a0000.  mov dword [rsp], 0xa
0x00005309      660f6f053f4f.  movdqa xmm0, xmmword [0x0020a250]
0x00005311      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005316      660f6f05424f.  movdqa xmm0, xmmword [0x0020a260]
0x0000531e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005323      7432           je 0x5357
0x00005325      4885d2         test rdx, rdx
0x00005328      742d           je 0x5357
0x0000532a      4889742428     mov qword [rsp + 0x28], rsi
0x0000532f      4889542430     mov qword [rsp + 0x30], rdx
0x00005334      4889e1         mov rcx, rsp
0x00005337      4c89c2         mov rdx, r8
0x0000533a      4c89ce         mov rsi, r9
0x0000533d      e88ef7ffff     call sym.quotearg_n_options
0x00005342      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005347      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005350      750a           jne 0x535c
0x00005352      4883c448       add rsp, 0x48
0x00005356      c3             ret
0x00005357      e824c4ffff     call sym.imp.abort
0x0000535c      e8cfc4ffff     call sym.imp.__stack_chk_fail
0x00005361      0f1f440000     nop dword [rax + rax]
0x00005366      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005370      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005377      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000537c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005380      4889d1         mov rcx, rdx
0x00005383      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000538a      4889f2         mov rdx, rsi
0x0000538d      4889fe         mov rsi, rdi
0x00005390      31ff           xor edi, edi
0x00005392      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005397      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x000053a0      4989c8         mov r8, rcx
0x000053a3      4889d1         mov rcx, rdx
0x000053a6      4889f2         mov rdx, rsi
0x000053a9      4889fe         mov rsi, rdi
0x000053ac      31ff           xor edi, edi
0x000053ae      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000053b3      0f1f00         nop dword [rax]
0x000053b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000053c0      488d0d794c20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000053c7      e904f7ffff     jmp sym.quotearg_n_options
0x000053cc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000053d0      488d0d694c20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000053d7      4889f2         mov rdx, rsi
0x000053da      4889fe         mov rsi, rdi
0x000053dd      31ff           xor edi, edi
0x000053df      e9ecf6ffff     jmp sym.quotearg_n_options
0x000053e4      6690           nop
0x000053e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000053f0      488d0d494c20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000053f7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000053fe      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005403      0f1f00         nop dword [rax]
0x00005406      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005410      488d0d294c20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005417      4889fe         mov rsi, rdi
0x0000541a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005421      31ff           xor edi, edi
0x00005423      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005428      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x00005430      4157           push r15
0x00005432      4156           push r14
0x00005434      4155           push r13
0x00005436      4154           push r12
0x00005438      4d89cc         mov r12, r9
0x0000543b      55             push rbp
0x0000543c      53             push rbx
0x0000543d      4889fd         mov rbp, rdi
0x00005440      4c89c3         mov rbx, r8
0x00005443      4883ec28       sub rsp, 0x28
0x00005447      4885f6         test rsi, rsi
0x0000544a      0f8418010000   je 0x5568
0x00005450      4989d0         mov r8, rdx
0x00005453      488d15ee2200.  lea rdx, [0x00007748]                   ; "%s (%s) %s\n"
0x0000545a      4989c9         mov r9, rcx
0x0000545d      31c0           xor eax, eax
0x0000545f      4889f1         mov rcx, rsi
0x00005462      be01000000     mov esi, 1
0x00005467      e804c6ffff     call sym.imp.__fprintf_chk
0x0000546c      488d35e82200.  lea rsi, [0x0000775b]                   ; "(C)"
0x00005473      31ff           xor edi, edi
0x00005475      ba05000000     mov edx, 5
0x0000547a      e881c3ffff     call sym.imp.dcgettext
0x0000547f      488d15fa2500.  lea rdx, obj.version_etc_copyright      ; 0x7a80 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005486      4889c1         mov rcx, rax
0x00005489      41b8e3070000   mov r8d, 0x7e3
0x0000548f      be01000000     mov esi, 1
0x00005494      4889ef         mov rdi, rbp
0x00005497      31c0           xor eax, eax
0x00005499      e8d2c5ffff     call sym.imp.__fprintf_chk
0x0000549e      488d35432300.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x77e8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000054a5      31ff           xor edi, edi
0x000054a7      ba05000000     mov edx, 5
0x000054ac      e84fc3ffff     call sym.imp.dcgettext
0x000054b1      4889ee         mov rsi, rbp
0x000054b4      4889c7         mov rdi, rax
0x000054b7      e854c4ffff     call sym.imp.fputs_unlocked
0x000054bc      4983fc09       cmp r12, 9
0x000054c0      0f873a030000   ja 0x5800
0x000054c6      488d15772500.  lea rdx, [0x00007a44]
0x000054cd      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000054d1      4801d0         add rax, rdx
0x000054d4      ffe0           jmp rax
0x000054d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000054e0      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000054e4      488b4310       mov rax, qword [rbx + 0x10]
0x000054e8      488d35692400.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x7958 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x000054ef      4c8b4308       mov r8, qword [rbx + 8]
0x000054f3      ba05000000     mov edx, 5
0x000054f8      31ff           xor edi, edi
0x000054fa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000054fe      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005502      4c894c2410     mov qword [rsp + 0x10], r9
0x00005507      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000550b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000550f      48890424       mov qword [rsp], rax
0x00005513      4c89442408     mov qword [rsp + 8], r8
0x00005518      488b1b         mov rbx, qword [rbx]
0x0000551b      e8e0c2ffff     call sym.imp.dcgettext
0x00005520      4883ec08       sub rsp, 8
0x00005524      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005529      4889c2         mov rdx, rax
0x0000552c      4889d9         mov rcx, rbx
0x0000552f      be01000000     mov esi, 1
0x00005534      4889ef         mov rdi, rbp
0x00005537      31c0           xor eax, eax
0x00005539      4151           push r9
0x0000553b      4155           push r13
0x0000553d      4154           push r12
0x0000553f      4157           push r15
0x00005541      4156           push r14
0x00005543      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005548      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000554d      e81ec5ffff     call sym.imp.__fprintf_chk
0x00005552      4883c430       add rsp, 0x30
0x00005556      4883c428       add rsp, 0x28
0x0000555a      5b             pop rbx
0x0000555b      5d             pop rbp
0x0000555c      415c           pop r12
0x0000555e      415d           pop r13
0x00005560      415e           pop r14
0x00005562      415f           pop r15
0x00005564      c3             ret
0x00005565      0f1f00         nop dword [rax]
0x00005568      4989c8         mov r8, rcx
0x0000556b      4889d1         mov rcx, rdx
0x0000556e      488d15df2100.  lea rdx, str.s__s                       ; 0x7754 ; "%s %s\n"
0x00005575      be01000000     mov esi, 1
0x0000557a      31c0           xor eax, eax
0x0000557c      e8efc4ffff     call sym.imp.__fprintf_chk
0x00005581      e9e6feffff     jmp 0x546c
0x00005586      662e0f1f8400.  nop word cs:[rax + rax]
0x00005590      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005594      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005598      488d35e92300.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7988 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000559f      488b4310       mov rax, qword [rbx + 0x10]
0x000055a3      4c8b4308       mov r8, qword [rbx + 8]
0x000055a7      ba05000000     mov edx, 5
0x000055ac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000055b0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000055b4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000055b8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055bc      488b1b         mov rbx, qword [rbx]
0x000055bf      4c89542418     mov qword [rsp + 0x18], r10
0x000055c4      4c894c2410     mov qword [rsp + 0x10], r9
0x000055c9      48890424       mov qword [rsp], rax
0x000055cd      4c89442408     mov qword [rsp + 8], r8
0x000055d2      31ff           xor edi, edi
0x000055d4      e827c2ffff     call sym.imp.dcgettext
0x000055d9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000055de      4152           push r10
0x000055e0      e93fffffff     jmp 0x5524
0x000055e5      0f1f00         nop dword [rax]
0x000055e8      488b1b         mov rbx, qword [rbx]
0x000055eb      488d356d2100.  lea rsi, str.Written_by__s.             ; 0x775f ; "Written by %s.\n"
0x000055f2      ba05000000     mov edx, 5
0x000055f7      31ff           xor edi, edi
0x000055f9      e802c2ffff     call sym.imp.dcgettext
0x000055fe      4883c428       add rsp, 0x28
0x00005602      4889d9         mov rcx, rbx
0x00005605      4889ef         mov rdi, rbp
0x00005608      5b             pop rbx
0x00005609      5d             pop rbp
0x0000560a      415c           pop r12
0x0000560c      415d           pop r13
0x0000560e      415e           pop r14
0x00005610      415f           pop r15
0x00005612      4889c2         mov rdx, rax
0x00005615      be01000000     mov esi, 1
0x0000561a      31c0           xor eax, eax
0x0000561c      e94fc4ffff     jmp sym.imp.__fprintf_chk
0x00005621      0f1f80000000.  nop dword [rax]
0x00005628      4c8b6308       mov r12, qword [rbx + 8]
0x0000562c      488d353c2100.  lea rsi, str.Written_by__s_and__s.      ; 0x776f ; "Written by %s and %s.\n"
0x00005633      488b1b         mov rbx, qword [rbx]
0x00005636      ba05000000     mov edx, 5
0x0000563b      31ff           xor edi, edi
0x0000563d      e8bec1ffff     call sym.imp.dcgettext
0x00005642      4883c428       add rsp, 0x28
0x00005646      4d89e0         mov r8, r12
0x00005649      4889d9         mov rcx, rbx
0x0000564c      4889ef         mov rdi, rbp
0x0000564f      4889c2         mov rdx, rax
0x00005652      be01000000     mov esi, 1
0x00005657      5b             pop rbx
0x00005658      5d             pop rbp
0x00005659      415c           pop r12
0x0000565b      415d           pop r13
0x0000565d      415e           pop r14
0x0000565f      415f           pop r15
0x00005661      31c0           xor eax, eax
0x00005663      e908c4ffff     jmp sym.imp.__fprintf_chk
0x00005668      0f1f84000000.  nop dword [rax + rax]
0x00005670      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005674      4c8b6308       mov r12, qword [rbx + 8]
0x00005678      488d35072100.  lea rsi, str.Written_by__s___s__and__s. ; 0x7786 ; "Written by %s, %s, and %s.\n"
0x0000567f      488b1b         mov rbx, qword [rbx]
0x00005682      ba05000000     mov edx, 5
0x00005687      31ff           xor edi, edi
0x00005689      e872c1ffff     call sym.imp.dcgettext
0x0000568e      4883c428       add rsp, 0x28
0x00005692      4d89e9         mov r9, r13
0x00005695      4d89e0         mov r8, r12
0x00005698      4889d9         mov rcx, rbx
0x0000569b      4889ef         mov rdi, rbp
0x0000569e      4889c2         mov rdx, rax
0x000056a1      5b             pop rbx
0x000056a2      5d             pop rbp
0x000056a3      415c           pop r12
0x000056a5      415d           pop r13
0x000056a7      415e           pop r14
0x000056a9      415f           pop r15
0x000056ab      be01000000     mov esi, 1
0x000056b0      31c0           xor eax, eax
0x000056b2      e9b9c3ffff     jmp sym.imp.__fprintf_chk
0x000056b7      660f1f840000.  nop word [rax + rax]
0x000056c0      488d35f12100.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x78b8 ; "Written by %s, %s, %s,\nand %s.\n"
0x000056c7      ba05000000     mov edx, 5
0x000056cc      31ff           xor edi, edi
0x000056ce      4c8b7318       mov r14, qword [rbx + 0x18]
0x000056d2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000056d6      4c8b6308       mov r12, qword [rbx + 8]
0x000056da      488b1b         mov rbx, qword [rbx]
0x000056dd      e81ec1ffff     call sym.imp.dcgettext
0x000056e2      4883ec08       sub rsp, 8
0x000056e6      4156           push r14
0x000056e8      4889c2         mov rdx, rax
0x000056eb      4d89e9         mov r9, r13
0x000056ee      4d89e0         mov r8, r12
0x000056f1      4889d9         mov rcx, rbx
0x000056f4      4889ef         mov rdi, rbp
0x000056f7      be01000000     mov esi, 1
0x000056fc      31c0           xor eax, eax
0x000056fe      e86dc3ffff     call sym.imp.__fprintf_chk
0x00005703      58             pop rax
0x00005704      5a             pop rdx
0x00005705      4883c428       add rsp, 0x28
0x00005709      5b             pop rbx
0x0000570a      5d             pop rbp
0x0000570b      415c           pop r12
0x0000570d      415d           pop r13
0x0000570f      415e           pop r14
0x00005711      415f           pop r15
0x00005713      c3             ret
0x00005714      0f1f4000       nop dword [rax]
0x00005718      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000571c      488d35b52100.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x78d8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005723      ba05000000     mov edx, 5
0x00005728      31ff           xor edi, edi
0x0000572a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000572e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005732      4c8b6308       mov r12, qword [rbx + 8]
0x00005736      488b1b         mov rbx, qword [rbx]
0x00005739      e8c2c0ffff     call sym.imp.dcgettext
0x0000573e      4157           push r15
0x00005740      eba4           jmp 0x56e6
0x00005742      660f1f440000   nop word [rax + rax]
0x00005748      4c8b4308       mov r8, qword [rbx + 8]
0x0000574c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005750      488d35a92100.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7900 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005757      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000575b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000575f      ba05000000     mov edx, 5
0x00005764      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005768      31ff           xor edi, edi
0x0000576a      488b1b         mov rbx, qword [rbx]
0x0000576d      4c890424       mov qword [rsp], r8
0x00005771      e88ac0ffff     call sym.imp.dcgettext
0x00005776      4883ec08       sub rsp, 8
0x0000577a      4d89e9         mov r9, r13
0x0000577d      4154           push r12
0x0000577f      4157           push r15
0x00005781      4156           push r14
0x00005783      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005788      4889d9         mov rcx, rbx
0x0000578b      4889c2         mov rdx, rax
0x0000578e      4889ef         mov rdi, rbp
0x00005791      be01000000     mov esi, 1
0x00005796      31c0           xor eax, eax
0x00005798      e8d3c2ffff     call sym.imp.__fprintf_chk
0x0000579d      4883c420       add rsp, 0x20
0x000057a1      4883c428       add rsp, 0x28
0x000057a5      5b             pop rbx
0x000057a6      5d             pop rbp
0x000057a7      415c           pop r12
0x000057a9      415d           pop r13
0x000057ab      415e           pop r14
0x000057ad      415f           pop r15
0x000057af      c3             ret
0x000057b0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000057b4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000057b8      488d35692100.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x7928 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000057bf      4c8b6328       mov r12, qword [rbx + 0x28]
0x000057c3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000057c7      ba05000000     mov edx, 5
0x000057cc      4c8b7318       mov r14, qword [rbx + 0x18]
0x000057d0      4c8b4308       mov r8, qword [rbx + 8]
0x000057d4      31ff           xor edi, edi
0x000057d6      4c894c2408     mov qword [rsp + 8], r9
0x000057db      488b1b         mov rbx, qword [rbx]
0x000057de      4c890424       mov qword [rsp], r8
0x000057e2      e819c0ffff     call sym.imp.dcgettext
0x000057e7      4155           push r13
0x000057e9      4154           push r12
0x000057eb      4157           push r15
0x000057ed      4156           push r14
0x000057ef      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000057f4      eb8d           jmp 0x5783
0x000057f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005800      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005804      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005808      ba05000000     mov edx, 5
0x0000580d      488b4310       mov rax, qword [rbx + 0x10]
0x00005811      4c8b4308       mov r8, qword [rbx + 8]
0x00005815      488d35a42100.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x79c0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000581c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005820      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005824      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005828      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000582c      4c89542418     mov qword [rsp + 0x18], r10
0x00005831      4c894c2410     mov qword [rsp + 0x10], r9
0x00005836      48890424       mov qword [rsp], rax
0x0000583a      4c89442408     mov qword [rsp + 8], r8
0x0000583f      488b1b         mov rbx, qword [rbx]
0x00005842      e98bfdffff     jmp 0x55d2
0x00005847      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005850      4531c9         xor r9d, r9d
0x00005853      49833800       cmp qword [r8], 0
0x00005857      7412           je 0x586b
0x00005859      0f1f80000000.  nop dword [rax]
0x00005860      4983c101       add r9, 1
0x00005864      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005869      75f5           jne 0x5860
0x0000586b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005870      4883ec68       sub rsp, 0x68
0x00005874      4d89c2         mov r10, r8
0x00005877      4531c9         xor r9d, r9d
0x0000587a      64488b042528.  mov rax, qword fs:[0x28]
0x00005883      4889442458     mov qword [rsp + 0x58], rax
0x00005888      31c0           xor eax, eax
0x0000588a      4989e0         mov r8, rsp
0x0000588d      0f1f00         nop dword [rax]
0x00005890      418b02         mov eax, dword [r10]
0x00005893      83f82f         cmp eax, 0x2f
0x00005896      7742           ja 0x58da
0x00005898      4189c3         mov r11d, eax
0x0000589b      4d035a10       add r11, qword [r10 + 0x10]
0x0000589f      83c008         add eax, 8
0x000058a2      418902         mov dword [r10], eax
0x000058a5      498b03         mov rax, qword [r11]
0x000058a8      4885c0         test rax, rax
0x000058ab      4b8904c8       mov qword [r8 + r9*8], rax
0x000058af      740a           je 0x58bb
0x000058b1      4983c101       add r9, 1
0x000058b5      4983f90a       cmp r9, 0xa
0x000058b9      75d5           jne 0x5890
0x000058bb      e870fbffff     call sym.version_etc_arn
0x000058c0      488b442458     mov rax, qword [rsp + 0x58]
0x000058c5      644833042528.  xor rax, qword fs:[0x28]
0x000058ce      7505           jne 0x58d5
0x000058d0      4883c468       add rsp, 0x68
0x000058d4      c3             ret
0x000058d5      e856bfffff     call sym.imp.__stack_chk_fail
0x000058da      4d8b5a08       mov r11, qword [r10 + 8]
0x000058de      498d4308       lea rax, [r11 + 8]
0x000058e2      49894208       mov qword [r10 + 8], rax
0x000058e6      ebbd           jmp 0x58a5
0x000058e8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000058f0      55             push rbp
0x000058f1      53             push rbx
0x000058f2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000058f8      4531db         xor r11d, r11d
0x000058fb      4881ecb80000.  sub rsp, 0xb8
0x00005902      64488b042528.  mov rax, qword fs:[0x28]
0x0000590b      4889442478     mov qword [rsp + 0x78], rax
0x00005910      31c0           xor eax, eax
0x00005912      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000591a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005922      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000592a      4c8d442420     lea r8, [rsp + 0x20]
0x0000592f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005937      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000593f      4889442410     mov qword [rsp + 0x10], rax
0x00005944      488d84248000.  lea rax, [rsp + 0x80]
0x0000594c      4531c9         xor r9d, r9d
0x0000594f      4889442418     mov qword [rsp + 0x18], rax
0x00005954      4889c5         mov rbp, rax
0x00005957      660f1f840000.  nop word [rax + rax]
0x00005960      4183fa2f       cmp r10d, 0x2f
0x00005964      7756           ja 0x59bc
0x00005966      4489d0         mov eax, r10d
0x00005969      41bb01000000   mov r11d, 1
0x0000596f      4183c208       add r10d, 8
0x00005973      4801e8         add rax, rbp
0x00005976      488b00         mov rax, qword [rax]
0x00005979      4885c0         test rax, rax
0x0000597c      4b8904c8       mov qword [r8 + r9*8], rax
0x00005980      740a           je 0x598c
0x00005982      4983c101       add r9, 1
0x00005986      4983f90a       cmp r9, 0xa
0x0000598a      75d4           jne 0x5960
0x0000598c      4584db         test r11b, r11b
0x0000598f      7524           jne 0x59b5
0x00005991      e89afaffff     call sym.version_etc_arn
0x00005996      488b442478     mov rax, qword [rsp + 0x78]
0x0000599b      644833042528.  xor rax, qword fs:[0x28]
0x000059a4      750a           jne 0x59b0
0x000059a6      4881c4b80000.  add rsp, 0xb8
0x000059ad      5b             pop rbx
0x000059ae      5d             pop rbp
0x000059af      c3             ret
0x000059b0      e87bbeffff     call sym.imp.__stack_chk_fail
0x000059b5      4489542408     mov dword [rsp + 8], r10d
0x000059ba      ebd5           jmp 0x5991
0x000059bc      4889d8         mov rax, rbx
0x000059bf      4883c308       add rbx, 8
0x000059c3      ebb1           jmp 0x5976
0x000059c5      90             nop
0x000059c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000059d0      53             push rbx
0x000059d1      488d35ca1d00.  lea rsi, str.Report_bugs_to:__s         ; 0x77a2 ; "\nReport bugs to: %s\n"
0x000059d8      ba05000000     mov edx, 5
0x000059dd      31ff           xor edi, edi
0x000059df      e81cbeffff     call sym.imp.dcgettext
0x000059e4      488d15cc1d00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x77b7 ; "bug-coreutils@gnu.org"
0x000059eb      4889c6         mov rsi, rax
0x000059ee      bf01000000     mov edi, 1
0x000059f3      31c0           xor eax, eax
0x000059f5      e8f6bfffff     call sym.imp.__printf_chk
0x000059fa      488d35cc1d00.  lea rsi, str.s_home_page:___s           ; 0x77cd ; "%s home page: <%s>\n"
0x00005a01      ba05000000     mov edx, 5
0x00005a06      31ff           xor edi, edi
0x00005a08      e8f3bdffff     call sym.imp.dcgettext
0x00005a0d      488d0da41500.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6fb8 ; "https://www.gnu.org/software/coreutils/"
0x00005a14      488d15b10d00.  lea rdx, str.GNU_coreutils              ; 0x67cc ; "GNU coreutils"
0x00005a1b      4889c6         mov rsi, rax
0x00005a1e      bf01000000     mov edi, 1
0x00005a23      31c0           xor eax, eax
0x00005a25      e8c6bfffff     call sym.imp.__printf_chk
0x00005a2a      488b1d774620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00005a31      488d35c81f00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7a00 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005a38      31ff           xor edi, edi
0x00005a3a      ba05000000     mov edx, 5
0x00005a3f      e8bcbdffff     call sym.imp.dcgettext
0x00005a44      4889de         mov rsi, rbx
0x00005a47      4889c7         mov rdi, rax
0x00005a4a      5b             pop rbx
0x00005a4b      e9c0beffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005a50      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005a51      4889fb         mov rbx, rdi
0x00005a54      e817bfffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005a59      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005a5c      7505           jne 0x5a63
0x00005a5e      4885db         test rbx, rbx
0x00005a61      7502           jne 0x5a65
0x00005a63      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005a64      c3             ret
0x00005a65      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005a6a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005a70      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005a73      48f7e6         mul rsi
0x00005a76      4889c7         mov rdi, rax
0x00005a79      0f90c0         seto al
0x00005a7c      4885ff         test rdi, rdi
0x00005a7f      780a           js 0x5a8b
0x00005a81      0fb6c0         movzx eax, al
0x00005a84      4885c0         test rax, rax
0x00005a87      7502           jne 0x5a8b
0x00005a89      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005a8b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005a8f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005a94      6690           nop
0x00005a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005aa0      ebae           jmp sym.xmalloc
0x00005aa2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005aa6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005ab0      4885f6         test rsi, rsi
0x00005ab3      53             push rbx
0x00005ab4      4889f3         mov rbx, rsi
0x00005ab7      7505           jne 0x5abe
0x00005ab9      4885ff         test rdi, rdi
0x00005abc      751a           jne 0x5ad8
0x00005abe      4889de         mov rsi, rbx
0x00005ac1      e80abfffff     call sym.imp.realloc
0x00005ac6      4885c0         test rax, rax
0x00005ac9      7505           jne 0x5ad0
0x00005acb      4885db         test rbx, rbx
0x00005ace      7511           jne 0x5ae1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005ad0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005ad1      c3             ret
0x00005ad2      660f1f440000   nop word [rax + rax]
0x00005ad8      e893bcffff     call sym.imp.free
0x00005add      31c0           xor eax, eax
0x00005adf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005ae0      c3             ret
0x00005ae1      e8ba010000     call sym.xalloc_die
0x00005ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005af0      4889f0         mov rax, rsi
0x00005af3      48f7e2         mul rdx
0x00005af6      4889c6         mov rsi, rax
0x00005af9      0f90c0         seto al
0x00005afc      4885f6         test rsi, rsi
0x00005aff      780a           js 0x5b0b
0x00005b01      0fb6c0         movzx eax, al
0x00005b04      4885c0         test rax, rax
0x00005b07      7502           jne 0x5b0b
0x00005b09      eba5           jmp sym.xrealloc
0x00005b0b      4883ec08       sub rsp, 8
0x00005b0f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005b14      6690           nop
0x00005b16      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005b20      4885ff         test rdi, rdi
0x00005b23      4989d1         mov r9, rdx
0x00005b26      488b0e         mov rcx, qword [rsi]
0x00005b29      7435           je 0x5b60
0x00005b2b      31d2           xor edx, edx
0x00005b2d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005b37      49f7f1         div r9
0x00005b3a      4839c8         cmp rax, rcx
0x00005b3d      763c           jbe 0x5b7b
0x00005b3f      4889c8         mov rax, rcx
0x00005b42      48d1e8         shr rax, 1
0x00005b45      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005b4a      48890e         mov qword [rsi], rcx
0x00005b4d      490fafc9       imul rcx, r9
0x00005b51      4889ce         mov rsi, rcx
0x00005b54      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005b59      0f1f80000000.  nop dword [rax]
0x00005b60      4885c9         test rcx, rcx
0x00005b63      7423           je 0x5b88
0x00005b65      4889c8         mov rax, rcx
0x00005b68      49f7e1         mul r9
0x00005b6b      0f90c2         seto dl
0x00005b6e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005b71      0fb6d2         movzx edx, dl
0x00005b74      7805           js 0x5b7b
0x00005b76      4885d2         test rdx, rdx
0x00005b79      74cf           je 0x5b4a
0x00005b7b      4883ec08       sub rsp, 8
0x00005b7f      e81c010000     call sym.xalloc_die
0x00005b84      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005b88      31d2           xor edx, edx
0x00005b8a      b880000000     mov eax, 0x80
0x00005b8f      4531c0         xor r8d, r8d
0x00005b92      49f7f1         div r9
0x00005b95      4885c0         test rax, rax
0x00005b98      410f94c0       sete r8b
0x00005b9c      498d0c00       lea rcx, [r8 + rax]
0x00005ba0      ebc3           jmp 0x5b65
0x00005ba2      0f1f4000       nop dword [rax]
0x00005ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005bb0      4885ff         test rdi, rdi
0x00005bb3      488b06         mov rax, qword [rsi]
0x00005bb6      7428           je 0x5be0
0x00005bb8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005bc2      4839d0         cmp rax, rdx
0x00005bc5      772a           ja 0x5bf1
0x00005bc7      4889c2         mov rdx, rax
0x00005bca      48d1ea         shr rdx, 1
0x00005bcd      488d440201     lea rax, [rdx + rax + 1]
0x00005bd2      488906         mov qword [rsi], rax
0x00005bd5      4889c6         mov rsi, rax
0x00005bd8      e9d3feffff     jmp sym.xrealloc
0x00005bdd      0f1f00         nop dword [rax]
0x00005be0      4885c0         test rax, rax
0x00005be3      ba80000000     mov edx, 0x80
0x00005be8      480f44c2       cmove rax, rdx
0x00005bec      4885c0         test rax, rax
0x00005bef      79e1           jns 0x5bd2
0x00005bf1      4883ec08       sub rsp, 8
0x00005bf5      e8a6000000     call sym.xalloc_die
0x00005bfa      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005c00      53             push rbx
0x00005c01      4889fb         mov rbx, rdi
0x00005c04      e847feffff     call sym.xmalloc
0x00005c09      4889da         mov rdx, rbx
0x00005c0c      31f6           xor esi, esi
0x00005c0e      4889c7         mov rdi, rax
0x00005c11      5b             pop rbx
0x00005c12      e9a9bcffff     jmp sym.imp.memset
0x00005c17      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005c20      4889f8         mov rax, rdi
0x00005c23      4883ec08       sub rsp, 8
0x00005c27      48f7e6         mul rsi
0x00005c2a      0f90c2         seto dl
0x00005c2d      4885c0         test rax, rax
0x00005c30      7817           js 0x5c49
0x00005c32      0fb6d2         movzx edx, dl
0x00005c35      4885d2         test rdx, rdx
0x00005c38      750f           jne 0x5c49
0x00005c3a      e8e1bcffff     call sym.imp.calloc
0x00005c3f      4885c0         test rax, rax
0x00005c42      7405           je 0x5c49
0x00005c44      4883c408       add rsp, 8
0x00005c48      c3             ret
0x00005c49      e852000000     call sym.xalloc_die
0x00005c4e      6690           nop
;-- xmemdup:
0x00005c50      55             push rbp
0x00005c51      53             push rbx
0x00005c52      4889fd         mov rbp, rdi
0x00005c55      4889f7         mov rdi, rsi
0x00005c58      4889f3         mov rbx, rsi
0x00005c5b      4883ec08       sub rsp, 8
0x00005c5f      e8ecfdffff     call sym.xmalloc
0x00005c64      4883c408       add rsp, 8
0x00005c68      4889da         mov rdx, rbx
0x00005c6b      4889ee         mov rsi, rbp
0x00005c6e      5b             pop rbx
0x00005c6f      5d             pop rbp
0x00005c70      4889c7         mov rdi, rax
0x00005c73      e9d8bcffff     jmp sym.imp.memcpy
0x00005c78      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005c80      53             push rbx
0x00005c81      4889fb         mov rbx, rdi
0x00005c84      e897bbffff     call sym.imp.strlen
0x00005c89      4889df         mov rdi, rbx
0x00005c8c      488d7001       lea rsi, [rax + 1]
0x00005c90      5b             pop rbx
0x00005c91      ebbd           jmp sym.xmemdup
0x00005c93      662e0f1f8400.  nop word cs:[rax + rax]
0x00005c9d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005ca0      488d35081e00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x7aaf ; "memory exhausted"
0x00005ca7      4883ec08       sub rsp, 8
0x00005cab      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005cb0      31ff           xor edi, edi
0x00005cb2      e849bbffff     call sym.imp.dcgettext
0x00005cb7      8b3d63432000   mov edi, dword [obj.exit_failure]       ; [0x20a020:4]=1
0x00005cbd      488d15341500.  lea rdx, [0x000071f8]                   ; "%s"
0x00005cc4      4889c1         mov rcx, rax
0x00005cc7      31f6           xor esi, esi
0x00005cc9      31c0           xor eax, eax
0x00005ccb      e830bdffff     call sym.imp.error
0x00005cd0      e8abbaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005cd5      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cdf      90             nop
;-- collate_error:
0x00005ce0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00005ce2      4155           push r13
0x00005ce4      4189fe         mov r14d, edi
0x00005ce7      4154           push r12
0x00005ce9      55             push rbp
0x00005cea      4989d4         mov r12, rdx
0x00005ced      53             push rbx
0x00005cee      4889f3         mov rbx, rsi
0x00005cf1      488d35c81d00.  lea rsi, str.string_comparison_failed   ; ../coreutils-8.31/lib/xmemcoll.c:39 ; 0x7ac0 ; "string comparison failed"
0x00005cf8      ba05000000     mov edx, 5
0x00005cfd      31ff           xor edi, edi
0x00005cff      4d89c5         mov r13, r8                             ; ../coreutils-8.31/lib/xmemcoll.c:38
0x00005d02      4889cd         mov rbp, rcx
0x00005d05      e8f6baffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/lib/xmemcoll.c:39
0x00005d0a      4489f6         mov esi, r14d
0x00005d0d      4889c2         mov rdx, rax
0x00005d10      31ff           xor edi, edi
0x00005d12      31c0           xor eax, eax
0x00005d14      e8e7bcffff     call sym.imp.error
0x00005d19      488d35c01d00.  lea rsi, str.Set_LC_ALL__C__to_work_around_the_problem. ; ../coreutils-8.31/lib/xmemcoll.c:40 ; 0x7ae0 ; "Set LC_ALL='C' to work around the problem."
0x00005d20      ba05000000     mov edx, 5
0x00005d25      31ff           xor edi, edi
0x00005d27      e8d4baffff     call sym.imp.dcgettext
0x00005d2c      31f6           xor esi, esi
0x00005d2e      4889c2         mov rdx, rax
0x00005d31      31ff           xor edi, edi
0x00005d33      31c0           xor eax, eax
0x00005d35      e8c6bcffff     call sym.imp.error
0x00005d3a      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00005d3d      4889ea         mov rdx, rbp
0x00005d40      be08000000     mov esi, 8
0x00005d45      bf01000000     mov edi, 1
0x00005d4a      e861f3ffff     call sym.quotearg_n_style_mem
0x00005d4f      4c89e1         mov rcx, r12
0x00005d52      4889da         mov rdx, rbx
0x00005d55      be08000000     mov esi, 8
0x00005d5a      31ff           xor edi, edi
0x00005d5c      4889c5         mov rbp, rax
0x00005d5f      e84cf3ffff     call sym.quotearg_n_style_mem
0x00005d64      488d35a51d00.  lea rsi, str.The_strings_compared_were__s_and__s. ; ../coreutils-8.31/lib/xmemcoll.c:42 ; 0x7b10 ; "The strings compared were %s and %s."
0x00005d6b      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00005d6e      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xmemcoll.c:42
0x00005d73      31ff           xor edi, edi
0x00005d75      e886baffff     call sym.imp.dcgettext
0x00005d7a      4989e8         mov r8, rbp                             ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00005d7d      4889d9         mov rcx, rbx
0x00005d80      8b3d9a422000   mov edi, dword [obj.exit_failure]       ; [0x20a020:4]=1
0x00005d86      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:45
0x00005d87      5d             pop rbp
0x00005d88      415c           pop r12
0x00005d8a      415d           pop r13
0x00005d8c      415e           pop r14
0x00005d8e      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/xmemcoll.c:41
0x00005d91      31f6           xor esi, esi
0x00005d93      31c0           xor eax, eax
0x00005d95      e966bcffff     jmp sym.imp.error
0x00005d9a      660f1f440000   nop word [rax + rax]
;-- xmemcoll:
0x00005da0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:55
0x00005da2      4155           push r13
0x00005da4      4989cd         mov r13, rcx
0x00005da7      4154           push r12
0x00005da9      55             push rbp
0x00005daa      4989d4         mov r12, rdx
0x00005dad      53             push rbx
0x00005dae      4889f5         mov rbp, rsi
0x00005db1      4889fb         mov rbx, rdi
0x00005db4      e8d7070000     call sym.memcoll                        ; ../coreutils-8.31/lib/xmemcoll.c:56
0x00005db9      4189c6         mov r14d, eax
0x00005dbc      e8cfb9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:57
0x00005dc1      8b38           mov edi, dword [rax]
0x00005dc3      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:58
0x00005dc5      7411           je 0x5dd8
0x00005dc7      4d89e8         mov r8, r13                             ; ../coreutils-8.31/lib/xmemcoll.c:59
0x00005dca      4c89e1         mov rcx, r12
0x00005dcd      4889ea         mov rdx, rbp
0x00005dd0      4889de         mov rsi, rbx
0x00005dd3      e808ffffff     call sym.collate_error
0x00005dd8      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:61
0x00005dd9      4489f0         mov eax, r14d
0x00005ddc      5d             pop rbp
0x00005ddd      415c           pop r12
0x00005ddf      415d           pop r13
0x00005de1      415e           pop r14
0x00005de3      c3             ret
0x00005de4      6690           nop
0x00005de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xmemcoll0:
0x00005df0      4156           push r14                                ; ../coreutils-8.31/lib/xmemcoll.c:70
0x00005df2      4155           push r13
0x00005df4      4989ce         mov r14, rcx
0x00005df7      4154           push r12
0x00005df9      55             push rbp
0x00005dfa      4989d4         mov r12, rdx
0x00005dfd      53             push rbx
0x00005dfe      4889fd         mov rbp, rdi
0x00005e01      4889f3         mov rbx, rsi
0x00005e04      e837080000     call sym.memcoll0                       ; ../coreutils-8.31/lib/xmemcoll.c:71
0x00005e09      4189c5         mov r13d, eax
0x00005e0c      e87fb9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xmemcoll.c:72
0x00005e11      8b38           mov edi, dword [rax]
0x00005e13      85ff           test edi, edi                           ; ../coreutils-8.31/lib/xmemcoll.c:73
0x00005e15      7413           je 0x5e2a
0x00005e17      488d53ff       lea rdx, [rbx - 1]                      ; ../coreutils-8.31/lib/xmemcoll.c:74
0x00005e1b      4d8d46ff       lea r8, [r14 - 1]
0x00005e1f      4c89e1         mov rcx, r12
0x00005e22      4889ee         mov rsi, rbp
0x00005e25      e8b6feffff     call sym.collate_error
0x00005e2a      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmemcoll.c:76
0x00005e2b      4489e8         mov eax, r13d
0x00005e2e      5d             pop rbp
0x00005e2f      415c           pop r12
0x00005e31      415d           pop r13
0x00005e33      415e           pop r14
0x00005e35      c3             ret
0x00005e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- xstrtoul:
0x00005e40      4157           push r15
0x00005e42      4156           push r14
0x00005e44      4155           push r13
0x00005e46      4154           push r12
0x00005e48      55             push rbp
0x00005e49      53             push rbx
0x00005e4a      4883ec28       sub rsp, 0x28
0x00005e4e      64488b042528.  mov rax, qword fs:[0x28]
0x00005e57      4889442418     mov qword [rsp + 0x18], rax
0x00005e5c      31c0           xor eax, eax
0x00005e5e      83fa24         cmp edx, 0x24
0x00005e61      0f875e030000   ja 0x61c5
0x00005e67      488d442410     lea rax, [rsp + 0x10]
0x00005e6c      4989f7         mov r15, rsi
0x00005e6f      4885f6         test rsi, rsi
0x00005e72      4889fd         mov rbp, rdi
0x00005e75      89542408       mov dword [rsp + 8], edx
0x00005e79      4989ce         mov r14, rcx
0x00005e7c      4d89c5         mov r13, r8
0x00005e7f      4c0f44f8       cmove r15, rax
0x00005e83      e808b9ffff     call sym.imp.__errno_location
0x00005e88      c70000000000   mov dword [rax], 0
0x00005e8e      4989c4         mov r12, rax
0x00005e91      0fb65d00       movzx ebx, byte [rbp]
0x00005e95      e806bcffff     call sym.imp.__ctype_b_loc
0x00005e9a      8b542408       mov edx, dword [rsp + 8]
0x00005e9e      488b30         mov rsi, qword [rax]
0x00005ea1      4889e8         mov rax, rbp
0x00005ea4      eb11           jmp 0x5eb7
0x00005ea6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005eb0      4883c001       add rax, 1
0x00005eb4      0fb618         movzx ebx, byte [rax]
0x00005eb7      0fb6cb         movzx ecx, bl
0x00005eba      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x00005ebf      75ef           jne 0x5eb0
0x00005ec1      80fb2d         cmp bl, 0x2d
0x00005ec4      7452           je 0x5f18
0x00005ec6      4c89fe         mov rsi, r15
0x00005ec9      4889ef         mov rdi, rbp
0x00005ecc      e85fbbffff     call sym.imp.strtoul
0x00005ed1      498b0f         mov rcx, qword [r15]
0x00005ed4      4889c3         mov rbx, rax
0x00005ed7      4839e9         cmp rcx, rbp
0x00005eda      742c           je 0x5f08
0x00005edc      418b0424       mov eax, dword [r12]
0x00005ee0      85c0           test eax, eax
0x00005ee2      7464           je 0x5f48
0x00005ee4      83f822         cmp eax, 0x22
0x00005ee7      bd01000000     mov ebp, 1
0x00005eec      752a           jne 0x5f18
0x00005eee      4d85ed         test r13, r13
0x00005ef1      7409           je 0x5efc
0x00005ef3      440fb621       movzx r12d, byte [rcx]
0x00005ef7      4584e4         test r12b, r12b
0x00005efa      757b           jne 0x5f77
0x00005efc      49891e         mov qword [r14], rbx
0x00005eff      eb1c           jmp 0x5f1d
0x00005f01      0f1f80000000.  nop dword [rax]
0x00005f08      4d85ed         test r13, r13
0x00005f0b      48894c2408     mov qword [rsp + 8], rcx
0x00005f10      753e           jne 0x5f50
0x00005f12      660f1f440000   nop word [rax + rax]
0x00005f18      bd04000000     mov ebp, 4
0x00005f1d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00005f22      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005f2b      89e8           mov eax, ebp
0x00005f2d      0f858d020000   jne 0x61c0
0x00005f33      4883c428       add rsp, 0x28
0x00005f37      5b             pop rbx
0x00005f38      5d             pop rbp
0x00005f39      415c           pop r12
0x00005f3b      415d           pop r13
0x00005f3d      415e           pop r14
0x00005f3f      415f           pop r15
0x00005f41      c3             ret
0x00005f42      660f1f440000   nop word [rax + rax]
0x00005f48      31ed           xor ebp, ebp
0x00005f4a      eba2           jmp 0x5eee
0x00005f4c      0f1f4000       nop dword [rax]
0x00005f50      440fb66500     movzx r12d, byte [rbp]
0x00005f55      4584e4         test r12b, r12b
0x00005f58      74be           je 0x5f18
0x00005f5a      410fbef4       movsx esi, r12b
0x00005f5e      4c89ef         mov rdi, r13
0x00005f61      31ed           xor ebp, ebp
0x00005f63      e808b9ffff     call sym.imp.strchr
0x00005f68      4885c0         test rax, rax
0x00005f6b      bb01000000     mov ebx, 1
0x00005f70      488b4c2408     mov rcx, qword [rsp + 8]
0x00005f75      74a1           je 0x5f18
0x00005f77      410fbef4       movsx esi, r12b
0x00005f7b      4c89ef         mov rdi, r13
0x00005f7e      48894c2408     mov qword [rsp + 8], rcx
0x00005f83      e8e8b8ffff     call sym.imp.strchr
0x00005f88      4885c0         test rax, rax
0x00005f8b      488b4c2408     mov rcx, qword [rsp + 8]
0x00005f90      0f84c6000000   je 0x605c
0x00005f96      418d4424bb     lea eax, [r12 - 0x45]
0x00005f9b      3c2f           cmp al, 0x2f
0x00005f9d      7751           ja 0x5ff0
0x00005f9f      48ba45893000.  movabs rdx, 0x814400308945
0x00005fa9      480fa3c2       bt rdx, rax
0x00005fad      7341           jae 0x5ff0
0x00005faf      be30000000     mov esi, 0x30                           ; '0'
0x00005fb4      4c89ef         mov rdi, r13
0x00005fb7      48894c2408     mov qword [rsp + 8], rcx
0x00005fbc      e8afb8ffff     call sym.imp.strchr
0x00005fc1      4885c0         test rax, rax
0x00005fc4      488b4c2408     mov rcx, qword [rsp + 8]
0x00005fc9      7425           je 0x5ff0
0x00005fcb      0fb64101       movzx eax, byte [rcx + 1]
0x00005fcf      3c44           cmp al, 0x44
0x00005fd1      740c           je 0x5fdf
0x00005fd3      3c69           cmp al, 0x69
0x00005fd5      0f84cd010000   je 0x61a8
0x00005fdb      3c42           cmp al, 0x42
0x00005fdd      7511           jne 0x5ff0
0x00005fdf      bf02000000     mov edi, 2
0x00005fe4      bee8030000     mov esi, 0x3e8
0x00005fe9      eb0f           jmp 0x5ffa
0x00005feb      0f1f440000     nop dword [rax + rax]
0x00005ff0      bf01000000     mov edi, 1
0x00005ff5      be00040000     mov esi, 0x400
0x00005ffa      4183ec42       sub r12d, 0x42
0x00005ffe      4180fc35       cmp r12b, 0x35
0x00006002      7758           ja 0x605c
0x00006004      488d15751b00.  lea rdx, [0x00007b80]
0x0000600b      450fb6e4       movzx r12d, r12b
0x0000600f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006013      4801d0         add rax, rdx
0x00006016      ffe0           jmp rax
0x00006018      4889d8         mov rax, rbx
0x0000601b      48f7e6         mul rsi
0x0000601e      0f80ed010000   jo 0x6211
0x00006024      4531c0         xor r8d, r8d
0x00006027      48f7e6         mul rsi
0x0000602a      0f80d2010000   jo 0x6202
0x00006030      4889c3         mov rbx, rax
0x00006033      4409c5         or ebp, r8d
0x00006036      662e0f1f8400.  nop word cs:[rax + rax]
0x00006040      4863ff         movsxd rdi, edi
0x00006043      89e8           mov eax, ebp
0x00006045      4801f9         add rcx, rdi
0x00006048      83c802         or eax, 2
0x0000604b      49890f         mov qword [r15], rcx
0x0000604e      803900         cmp byte [rcx], 0
0x00006051      49891e         mov qword [r14], rbx
0x00006054      0f45e8         cmovne ebp, eax
0x00006057      e9c1feffff     jmp 0x5f1d
0x0000605c      49891e         mov qword [r14], rbx
0x0000605f      83cd02         or ebp, 2
0x00006062      e9b6feffff     jmp 0x5f1d
0x00006067      ba02000000     mov edx, 2
0x0000606c      4889d0         mov rax, rdx
0x0000606f      48f7e3         mul rbx
0x00006072      0f8096000000   jo 0x610e
0x00006078      4801db         add rbx, rbx
0x0000607b      ebc3           jmp 0x6040
0x0000607d      ba00020000     mov edx, 0x200
0x00006082      4889d0         mov rax, rdx
0x00006085      48f7e3         mul rbx
0x00006088      0f8080000000   jo 0x610e
0x0000608e      48c1e309       shl rbx, 9
0x00006092      ebac           jmp 0x6040
0x00006094      41b807000000   mov r8d, 7
0x0000609a      4531c9         xor r9d, r9d
0x0000609d      0f1f00         nop dword [rax]
0x000060a0      4889d8         mov rax, rbx
0x000060a3      48f7e6         mul rsi
0x000060a6      4889c3         mov rbx, rax
0x000060a9      0f808f010000   jo 0x623e
0x000060af      4183e801       sub r8d, 1
0x000060b3      75eb           jne 0x60a0
0x000060b5      4409cd         or ebp, r9d
0x000060b8      eb86           jmp 0x6040
0x000060ba      41b808000000   mov r8d, 8
0x000060c0      4531c9         xor r9d, r9d
0x000060c3      0f1f440000     nop dword [rax + rax]
0x000060c8      4889d8         mov rax, rbx
0x000060cb      48f7e6         mul rsi
0x000060ce      4889c3         mov rbx, rax
0x000060d1      0f8049010000   jo 0x6220
0x000060d7      4183e801       sub r8d, 1
0x000060db      75eb           jne 0x60c8
0x000060dd      ebd6           jmp 0x60b5
0x000060df      41b804000000   mov r8d, 4
0x000060e5      4531c9         xor r9d, r9d
0x000060e8      4889d8         mov rax, rbx
0x000060eb      48f7e6         mul rsi
0x000060ee      4889c3         mov rbx, rax
0x000060f1      0f80fc000000   jo 0x61f3
0x000060f7      4183e801       sub r8d, 1
0x000060fb      75eb           jne 0x60e8
0x000060fd      ebb6           jmp 0x60b5
0x000060ff      4889d8         mov rax, rbx
0x00006102      48f7e6         mul rsi
0x00006105      4889c3         mov rbx, rax
0x00006108      0f8132ffffff   jno 0x6040
0x0000610e      bd01000000     mov ebp, 1
0x00006113      4883cbff       or rbx, 0xffffffffffffffff
0x00006117      e924ffffff     jmp 0x6040
0x0000611c      0f1f4000       nop dword [rax]
0x00006120      41b805000000   mov r8d, 5
0x00006126      4531c9         xor r9d, r9d
0x00006129      4889d8         mov rax, rbx
0x0000612c      48f7e6         mul rsi
0x0000612f      4889c3         mov rbx, rax
0x00006132      0f80f7000000   jo 0x622f
0x00006138      4183e801       sub r8d, 1
0x0000613c      75eb           jne 0x6129
0x0000613e      e972ffffff     jmp 0x60b5
0x00006143      41b806000000   mov r8d, 6
0x00006149      4531c9         xor r9d, r9d
0x0000614c      4889d8         mov rax, rbx
0x0000614f      48f7e6         mul rsi
0x00006152      4889c3         mov rbx, rax
0x00006155      0f8089000000   jo 0x61e4
0x0000615b      4183e801       sub r8d, 1
0x0000615f      75eb           jne 0x614c
0x00006161      e94fffffff     jmp 0x60b5
0x00006166      ba00040000     mov edx, 0x400
0x0000616b      4889d0         mov rax, rdx
0x0000616e      48f7e3         mul rbx
0x00006171      709b           jo 0x610e
0x00006173      48c1e30a       shl rbx, 0xa
0x00006177      e9c4feffff     jmp 0x6040
0x0000617c      4889d8         mov rax, rbx
0x0000617f      48f7e6         mul rsi
0x00006182      0f80c5000000   jo 0x624d
0x00006188      4531c0         xor r8d, r8d
0x0000618b      48f7e6         mul rsi
0x0000618e      0f8193feffff   jno 0x6027
0x00006194      41b801000000   mov r8d, 1
0x0000619a      4883c8ff       or rax, 0xffffffffffffffff
0x0000619e      e984feffff     jmp 0x6027
0x000061a3      0f1f440000     nop dword [rax + rax]
0x000061a8      31ff           xor edi, edi
0x000061aa      80790242       cmp byte [rcx + 2], 0x42
0x000061ae      be00040000     mov esi, 0x400
0x000061b3      400f94c7       sete dil
0x000061b7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000061bb      e93afeffff     jmp 0x5ffa
0x000061c0      e86bb6ffff     call sym.imp.__stack_chk_fail
0x000061c5      488d0d8c1a00.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x7c58 ; "xstrtoul"
0x000061cc      488d35651900.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x7b38 ; "../coreutils-8.31/lib/xstrtol.c"
0x000061d3      488d3d7e1900.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x7b58 ; "0 <= strtol_base && strtol_base <= 36"
0x000061da      ba54000000     mov edx, 0x54                           ; 'T'
0x000061df      e8ccb6ffff     call sym.imp.__assert_fail
0x000061e4      41b901000000   mov r9d, 1
0x000061ea      4883cbff       or rbx, 0xffffffffffffffff
0x000061ee      e968ffffff     jmp 0x615b
0x000061f3      41b901000000   mov r9d, 1
0x000061f9      4883cbff       or rbx, 0xffffffffffffffff
0x000061fd      e9f5feffff     jmp 0x60f7
0x00006202      41b801000000   mov r8d, 1
0x00006208      4883cbff       or rbx, 0xffffffffffffffff
0x0000620c      e922feffff     jmp 0x6033
0x00006211      4883c8ff       or rax, 0xffffffffffffffff
0x00006215      41b801000000   mov r8d, 1
0x0000621b      e907feffff     jmp 0x6027
0x00006220      41b901000000   mov r9d, 1
0x00006226      4883cbff       or rbx, 0xffffffffffffffff
0x0000622a      e9a8feffff     jmp 0x60d7
0x0000622f      41b901000000   mov r9d, 1
0x00006235      4883cbff       or rbx, 0xffffffffffffffff
0x00006239      e9fafeffff     jmp 0x6138
0x0000623e      41b901000000   mov r9d, 1
0x00006244      4883cbff       or rbx, 0xffffffffffffffff
0x00006248      e962feffff     jmp 0x60af
0x0000624d      41b801000000   mov r8d, 1
0x00006253      4883c8ff       or rax, 0xffffffffffffffff
0x00006257      e92fffffff     jmp 0x618b
0x0000625c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006260      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006262      55             push rbp
0x00006263      53             push rbx
0x00006264      4889fb         mov rbx, rdi
0x00006267      e8f4b6ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000626c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000626e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006271      7854           js 0x62c7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006273      e838b7ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006278      85c0           test eax, eax
0x0000627a      752c           jne 0x62a8
0x0000627c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000627f      e85c000000     call sym.rpl_fflush
0x00006284      85c0           test eax, eax
0x00006286      743c           je 0x62c4
0x00006288      e803b5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000628d      448b20         mov r12d, dword [rax]
0x00006290      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006293      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006296      e845b5ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000629b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000629e      7530           jne 0x62d0
0x000062a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000062a1      5d             pop rbp
0x000062a2      415c           pop r12
0x000062a4      c3             ret
0x000062a5      0f1f00         nop dword [rax]
0x000062a8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000062ab      e8b0b6ffff     call sym.imp.fileno
0x000062b0      31f6           xor esi, esi
0x000062b2      ba01000000     mov edx, 1
0x000062b7      89c7           mov edi, eax
0x000062b9      e8e2b5ffff     call sym.imp.lseek
0x000062be      4883f8ff       cmp rax, 0xffffffffffffffff
0x000062c2      75b8           jne 0x627c
0x000062c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000062c7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000062c8      5d             pop rbp
0x000062c9      415c           pop r12
0x000062cb      e910b5ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000062d0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000062d4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000062d9      ebc5           jmp 0x62a0
0x000062db      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000062e0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000062e3      53             push rbx
0x000062e4      4889fb         mov rbx, rdi
0x000062e7      7411           je 0x62fa                               ; ../coreutils-8.31/lib/fflush.c:150
0x000062e9      e8c2b6ffff     call sym.imp.__freading
0x000062ee      85c0           test eax, eax
0x000062f0      7408           je 0x62fa
0x000062f2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000062f8      750e           jne 0x6308
0x000062fa      4889df         mov rdi, rbx
0x000062fd      5b             pop rbx
0x000062fe      e97db6ffff     jmp sym.imp.fflush
0x00006303      0f1f440000     nop dword [rax + rax]
0x00006308      4889df         mov rdi, rbx
0x0000630b      ba01000000     mov edx, 1
0x00006310      31f6           xor esi, esi
0x00006312      e809000000     call sym.rpl_fseeko
0x00006317      4889df         mov rdi, rbx
0x0000631a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000631b      e960b6ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006320      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006324      48394710       cmp qword [rdi + 0x10], rax
0x00006328      7406           je 0x6330                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000632a      e9f1b6ffff     jmp sym.imp.fseeko
0x0000632f      90             nop
0x00006330      488b4720       mov rax, qword [rdi + 0x20]
0x00006334      48394728       cmp qword [rdi + 0x28], rax
0x00006338      75f0           jne 0x632a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000633a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000633f      75e9           jne 0x632a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006341      4154           push r12
0x00006343      55             push rbp
0x00006344      4189d4         mov r12d, edx
0x00006347      53             push rbx
0x00006348      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000634b      4889fb         mov rbx, rdi
0x0000634e      e80db6ffff     call sym.imp.fileno
0x00006353      4489e2         mov edx, r12d
0x00006356      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006359      89c7           mov edi, eax
0x0000635b      e840b5ffff     call sym.imp.lseek
0x00006360      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006364      740c           je 0x6372
0x00006366      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006369      488983900000.  mov qword [rbx + 0x90], rax
0x00006370      31c0           xor eax, eax
0x00006372      5b             pop rbx
0x00006373      5d             pop rbp
0x00006374      415c           pop r12
0x00006376      c3             ret
0x00006377      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00006380      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006382      4154           push r12
0x00006384      4989f5         mov r13, rsi
0x00006387      55             push rbp
0x00006388      53             push rbx
0x00006389      4889fb         mov rbx, rdi
0x0000638c      4989d4         mov r12, rdx
0x0000638f      4883ec18       sub rsp, 0x18
0x00006393      64488b042528.  mov rax, qword fs:[0x28]
0x0000639c      4889442408     mov qword [rsp + 8], rax
0x000063a1      31c0           xor eax, eax
0x000063a3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000063a8      4885ff         test rdi, rdi
0x000063ab      480f44d8       cmove rbx, rax
0x000063af      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000063b2      e899b4ffff     call sym.imp.mbrtowc
0x000063b7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000063bb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000063be      7620           jbe 0x63e0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000063c0      4d85e4         test r12, r12
0x000063c3      741b           je 0x63e0
0x000063c5      31ff           xor edi, edi
0x000063c7      e8b4d0ffff     call sym.hard_locale
0x000063cc      84c0           test al, al
0x000063ce      7510           jne 0x63e0
0x000063d0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000063d5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000063da      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000063dc      0f1f4000       nop dword [rax]
0x000063e0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000063e5      644833142528.  xor rdx, qword fs:[0x28]
0x000063ee      4889e8         mov rax, rbp
0x000063f1      750b           jne 0x63fe
0x000063f3      4883c418       add rsp, 0x18
0x000063f7      5b             pop rbx
0x000063f8      5d             pop rbp
0x000063f9      415c           pop r12
0x000063fb      415d           pop r13
0x000063fd      c3             ret
0x000063fe      e82db4ffff     call sym.imp.__stack_chk_fail
0x00006403      662e0f1f8400.  nop word cs:[rax + rax]
0x0000640d      0f1f00         nop dword [rax]
;-- close_stream:
0x00006410      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006412      55             push rbp
0x00006413      4889fd         mov rbp, rdi
0x00006416      53             push rbx
0x00006417      e8a4b3ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000641c      8b5d00         mov ebx, dword [rbp]
0x0000641f      4889ef         mov rdi, rbp
0x00006422      4989c4         mov r12, rax
0x00006425      e836feffff     call sym.rpl_fclose
0x0000642a      83e320         and ebx, 0x20                           ; "@"
0x0000642d      85db           test ebx, ebx
0x0000642f      7517           jne 0x6448
0x00006431      85c0           test eax, eax
0x00006433      740a           je 0x643f                               ; stdio.h:-186
0x00006435      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006438      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000643d      7439           je 0x6478
0x0000643f      5b             pop rbx
0x00006440      5d             pop rbp
0x00006441      415c           pop r12
0x00006443      c3             ret
0x00006444      0f1f4000       nop dword [rax]
0x00006448      85c0           test eax, eax
0x0000644a      751c           jne 0x6468
0x0000644c      e83fb3ffff     call sym.imp.__errno_location
0x00006451      c70000000000   mov dword [rax], 0
0x00006457      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000645c      5b             pop rbx
0x0000645d      5d             pop rbp
0x0000645e      415c           pop r12
0x00006460      c3             ret
0x00006461      0f1f80000000.  nop dword [rax]
0x00006468      5b             pop rbx
0x00006469      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000646e      5d             pop rbp                                 ; stdio.h:-186
0x0000646f      415c           pop r12
0x00006471      c3             ret
0x00006472      660f1f440000   nop word [rax + rax]
0x00006478      e813b3ffff     call sym.imp.__errno_location
0x0000647d      833809         cmp dword [rax], 9
0x00006480      5b             pop rbx
0x00006481      5d             pop rbp
0x00006482      415c           pop r12                                 ; stdio.h:-178
0x00006484      0f95c0         setne al
0x00006487      0fb6c0         movzx eax, al
0x0000648a      f7d8           neg eax
0x0000648c      c3             ret
0x0000648d      0f1f00         nop dword [rax]
;-- locale_charset:
0x00006490      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x00006494      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006499      e8f2b4ffff     call sym.imp.nl_langinfo
0x0000649e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000064a1      741d           je 0x64c0
0x000064a3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000064a6      488d15b41700.  lea rdx, str.ASCII                      ; 0x7c61 ; "ASCII"
0x000064ad      480f44c2       cmove rax, rdx
0x000064b1      4883c408       add rsp, 8
0x000064b5      c3             ret
0x000064b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000064c0      488d059a1700.  lea rax, str.ASCII                      ; 0x7c61 ; "ASCII"
0x000064c7      4883c408       add rsp, 8
0x000064cb      c3             ret
0x000064cc      0f1f4000       nop dword [rax]
;-- strcoll_loop:
0x000064d0      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:36
0x000064d2      4156           push r14
0x000064d4      4989ce         mov r14, rcx
0x000064d7      4155           push r13
0x000064d9      4154           push r12
0x000064db      4989f5         mov r13, rsi
0x000064de      55             push rbp
0x000064df      53             push rbx
0x000064e0      4989fc         mov r12, rdi
0x000064e3      4889d5         mov rbp, rdx
0x000064e6      4883ec08       sub rsp, 8
0x000064ea      e8a1b2ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:39
0x000064ef      4989c7         mov r15, rax
0x000064f2      eb2f           jmp 0x6523
0x000064f4      0f1f4000       nop dword [rax]
0x000064f8      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/memcoll.c:44
0x000064fb      e820b3ffff     call sym.imp.strlen
0x00006500      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/memcoll.c:45
0x00006503      488d5801       lea rbx, [rax + 1]                      ; ../coreutils-8.31/lib/memcoll.c:44
0x00006507      e814b3ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/memcoll.c:45
0x0000650c      4883c001       add rax, 1
0x00006510      4901dc         add r12, rbx                            ; ../coreutils-8.31/lib/memcoll.c:46
0x00006513      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/memcoll.c:47
0x00006516      4929c6         sub r14, rax                            ; ../coreutils-8.31/lib/memcoll.c:49
0x00006519      4929dd         sub r13, rbx                            ; ../coreutils-8.31/lib/memcoll.c:51
0x0000651c      7432           je 0x6550
0x0000651e      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/memcoll.c:53
0x00006521      744d           je 0x6570
0x00006523      41c707000000.  mov dword [r15], 0                      ; ../coreutils-8.31/lib/memcoll.c:39
0x0000652a      4889ee         mov rsi, rbp
0x0000652d      4c89e7         mov rdi, r12
0x00006530      e86bb4ffff     call sym.imp.strcoll
0x00006535      85c0           test eax, eax
0x00006537      74bf           je 0x64f8
0x00006539      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000653d      5b             pop rbx
0x0000653e      5d             pop rbp
0x0000653f      415c           pop r12
0x00006541      415d           pop r13
0x00006543      415e           pop r14
0x00006545      415f           pop r15
0x00006547      c3             ret
0x00006548      0f1f84000000.  nop dword [rax + rax]
0x00006550      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/memcoll.c:52
0x00006552      4d85f6         test r14, r14
0x00006555      0f95c0         setne al
0x00006558      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/memcoll.c:58
0x0000655c      5b             pop rbx
0x0000655d      f7d8           neg eax                                 ; ../coreutils-8.31/lib/memcoll.c:52
0x0000655f      5d             pop rbp                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x00006560      415c           pop r12
0x00006562      415d           pop r13
0x00006564      415e           pop r14
0x00006566      415f           pop r15
0x00006568      c3             ret
0x00006569      0f1f80000000.  nop dword [rax]
0x00006570      4883c408       add rsp, 8
0x00006574      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/memcoll.c:54
0x00006579      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:58
0x0000657a      5d             pop rbp
0x0000657b      415c           pop r12
0x0000657d      415d           pop r13
0x0000657f      415e           pop r14
0x00006581      415f           pop r15
0x00006583      c3             ret
0x00006584      6690           nop
0x00006586      662e0f1f8400.  nop word cs:[rax + rax]
;-- memcoll:
0x00006590      4157           push r15                                ; ../coreutils-8.31/lib/memcoll.c:67
0x00006592      4156           push r14
0x00006594      4989d7         mov r15, rdx
0x00006597      4155           push r13
0x00006599      4154           push r12
0x0000659b      4989fe         mov r14, rdi
0x0000659e      55             push rbp
0x0000659f      53             push rbx
0x000065a0      4889cd         mov rbp, rcx
0x000065a3      4889f3         mov rbx, rsi
0x000065a6      4883ec18       sub rsp, 0x18
0x000065aa      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:74
0x000065ad      7513           jne 0x65c2
0x000065af      4889f2         mov rdx, rsi
0x000065b2      4c89fe         mov rsi, r15
0x000065b5      e846b3ffff     call sym.imp.memcmp
0x000065ba      85c0           test eax, eax
0x000065bc      89442408       mov dword [rsp + 8], eax
0x000065c0      7466           je 0x6628
0x000065c2      4d8d2c1e       lea r13, [r14 + rbx]                    ; ../coreutils-8.31/lib/memcoll.c:81
0x000065c6      4d8d242f       lea r12, [r15 + rbp]                    ; ../coreutils-8.31/lib/memcoll.c:82
0x000065ca      488d4d01       lea rcx, [rbp + 1]                      ; ../coreutils-8.31/lib/memcoll.c:87
0x000065ce      488d7301       lea rsi, [rbx + 1]
0x000065d2      4c89fa         mov rdx, r15
0x000065d5      4c89f7         mov rdi, r14
0x000065d8      450fb64d00     movzx r9d, byte [r13]                   ; ../coreutils-8.31/lib/memcoll.c:81
0x000065dd      450fb60424     movzx r8d, byte [r12]                   ; ../coreutils-8.31/lib/memcoll.c:82
0x000065e2      41c6450000     mov byte [r13], 0                       ; ../coreutils-8.31/lib/memcoll.c:84
0x000065e7      41c6042400     mov byte [r12], 0                       ; ../coreutils-8.31/lib/memcoll.c:85
0x000065ec      44884c240f     mov byte [rsp + 0xf], r9b               ; ../coreutils-8.31/lib/memcoll.c:81
0x000065f1      4488442408     mov byte [rsp + 8], r8b                 ; ../coreutils-8.31/lib/memcoll.c:82
0x000065f6      e8d5feffff     call sym.strcoll_loop                   ; ../coreutils-8.31/lib/memcoll.c:87
0x000065fb      440fb64c240f   movzx r9d, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/memcoll.c:89
0x00006601      440fb6442408   movzx r8d, byte [rsp + 8]               ; ../coreutils-8.31/lib/memcoll.c:90
0x00006607      89c2           mov edx, eax                            ; ../coreutils-8.31/lib/memcoll.c:87
0x00006609      45884d00       mov byte [r13], r9b                     ; ../coreutils-8.31/lib/memcoll.c:89
0x0000660d      45880424       mov byte [r12], r8b                     ; ../coreutils-8.31/lib/memcoll.c:90
0x00006611      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/memcoll.c:94
0x00006615      89d0           mov eax, edx
0x00006617      5b             pop rbx
0x00006618      5d             pop rbp
0x00006619      415c           pop r12
0x0000661b      415d           pop r13
0x0000661d      415e           pop r14
0x0000661f      415f           pop r15
0x00006621      c3             ret
0x00006622      660f1f440000   nop word [rax + rax]
0x00006628      e863b1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:76
0x0000662d      8b542408       mov edx, dword [rsp + 8]                ; ../coreutils-8.31/lib/memcoll.c:77
0x00006631      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/memcoll.c:76
0x00006637      ebd8           jmp 0x6611                              ; ../coreutils-8.31/lib/memcoll.c:77
0x00006639      0f1f80000000.  nop dword [rax]
;-- memcoll0:
0x00006640      4154           push r12                                ; ../coreutils-8.31/lib/memcoll.c:103
0x00006642      55             push rbp
0x00006643      4989d4         mov r12, rdx
0x00006646      53             push rbx
0x00006647      4889fd         mov rbp, rdi
0x0000664a      4889f3         mov rbx, rsi
0x0000664d      4883ec10       sub rsp, 0x10
0x00006651      4839ce         cmp rsi, rcx                            ; ../coreutils-8.31/lib/memcoll.c:104
0x00006654      7519           jne 0x666f
0x00006656      4889f2         mov rdx, rsi
0x00006659      4c89e6         mov rsi, r12
0x0000665c      48894c2408     mov qword [rsp + 8], rcx
0x00006661      e89ab2ffff     call sym.imp.memcmp
0x00006666      85c0           test eax, eax
0x00006668      488b4c2408     mov rcx, qword [rsp + 8]
0x0000666d      7419           je 0x6688
0x0000666f      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x00006673      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/memcoll.c:110
0x00006676      4889de         mov rsi, rbx
0x00006679      4889ef         mov rdi, rbp
0x0000667c      5b             pop rbx                                 ; ../coreutils-8.31/lib/memcoll.c:111
0x0000667d      5d             pop rbp
0x0000667e      415c           pop r12
0x00006680      e94bfeffff     jmp sym.strcoll_loop                    ; ../coreutils-8.31/lib/memcoll.c:110
0x00006685      0f1f00         nop dword [rax]
0x00006688      e803b1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/memcoll.c:106
0x0000668d      c70000000000   mov dword [rax], 0
0x00006693      4883c410       add rsp, 0x10                           ; ../coreutils-8.31/lib/memcoll.c:111
0x00006697      31c0           xor eax, eax
0x00006699      5b             pop rbx
0x0000669a      5d             pop rbp
0x0000669b      415c           pop r12
0x0000669d      c3             ret
0x0000669e      6690           nop
;-- __libc_csu_init:
0x000066a0      4157           push r15
0x000066a2      4156           push r14
0x000066a4      4989d7         mov r15, rdx
0x000066a7      4155           push r13
0x000066a9      4154           push r12
0x000066ab      4c8d25fe3220.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x2099b0
0x000066b2      55             push rbp
0x000066b3      488d2dfe3220.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x2099b8 ; "P&"
0x000066ba      53             push rbx
0x000066bb      4189fd         mov r13d, edi
0x000066be      4989f6         mov r14, rsi
0x000066c1      4c29e5         sub rbp, r12
0x000066c4      4883ec08       sub rsp, 8
0x000066c8      48c1fd03       sar rbp, 3
0x000066cc      e847b0ffff     call sym._init
0x000066d1      4885ed         test rbp, rbp
0x000066d4      7420           je 0x66f6
0x000066d6      31db           xor ebx, ebx
0x000066d8      0f1f84000000.  nop dword [rax + rax]
0x000066e0      4c89fa         mov rdx, r15
0x000066e3      4c89f6         mov rsi, r14
0x000066e6      4489ef         mov edi, r13d
0x000066e9      41ff14dc       call qword [r12 + rbx*8]
0x000066ed      4883c301       add rbx, 1
0x000066f1      4839dd         cmp rbp, rbx
0x000066f4      75ea           jne 0x66e0
0x000066f6      4883c408       add rsp, 8
0x000066fa      5b             pop rbx
0x000066fb      5d             pop rbp
0x000066fc      415c           pop r12
0x000066fe      415d           pop r13
0x00006700      415e           pop r14
0x00006702      415f           pop r15
0x00006704      c3             ret
0x00006705      90             nop
0x00006706      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006710      f3c3           ret
0x00006712      662e0f1f8400.  nop word cs:[rax + rax]
0x0000671c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006720      488b15e13820.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006727      31f6           xor esi, esi
0x00006729      e912b3ffff     jmp sym.imp.__cxa_atexit
0x0000672e      0000           add byte [rax], al
