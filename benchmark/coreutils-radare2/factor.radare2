;-- section..plt:
;-- .plt:
0x00001da0      ff357a0f2100   push qword [0x00212d20]                 ; [12] -r-x section size 1376 named .plt
0x00001da6      ff257c0f2100   jmp qword [0x00212d28]                  ; [0x212d28:8]=0
0x00001dac      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001db0      ff257a0f2100   jmp qword [reloc.__uflow]               ; [0x212d30:8]=0x1db6
0x00001db6      6800000000     push 0
0x00001dbb      e9e0ffffff     jmp sym..plt
;-- imp.__gmpz_scan1:
0x00001dc0      ff25720f2100   jmp qword [reloc.__gmpz_scan1]          ; [0x212d38:8]=0x1dc6
0x00001dc6      6801000000     push 1                                  ; "ELF\x02\x01\x01"
0x00001dcb      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x00001dd0      ff256a0f2100   jmp qword [reloc.free]                  ; [0x212d40:8]=0x1dd6
0x00001dd6      6802000000     push 2
0x00001ddb      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x00001de0      ff25620f2100   jmp qword [reloc.abort]                 ; [0x212d48:8]=0x1de6
0x00001de6      6803000000     push 3
0x00001deb      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001df0      ff255a0f2100   jmp qword [reloc.__errno_location]      ; [0x212d50:8]=0x1df6
0x00001df6      6804000000     push 4
0x00001dfb      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001e00      ff25520f2100   jmp qword [reloc.strncmp]               ; [0x212d58:8]=0x1e06
0x00001e06      6805000000     push 5
0x00001e0b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001e10      ff254a0f2100   jmp qword [reloc._exit]                 ; [0x212d60:8]=0x1e16
0x00001e16      6806000000     push 6
0x00001e1b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001e20      ff25420f2100   jmp qword [reloc.__fpending]            ; [0x212d68:8]=0x1e26 ; "&\x1e"
0x00001e26      6807000000     push 7
0x00001e2b      e970ffffff     jmp sym..plt
;-- imp.iconv:
0x00001e30      ff253a0f2100   jmp qword [reloc.iconv]                 ; [0x212d70:8]=0x1e36 ; "6\x1e"
0x00001e36      6808000000     push 8
0x00001e3b      e960ffffff     jmp sym..plt
;-- imp.__gmpz_sub_ui:
0x00001e40      ff25320f2100   jmp qword [reloc.__gmpz_sub_ui]         ; [0x212d78:8]=0x1e46 ; "F\x1e"
0x00001e46      6809000000     push 9
0x00001e4b      e950ffffff     jmp sym..plt
;-- imp.__gmpz_clears:
0x00001e50      ff252a0f2100   jmp qword [reloc.__gmpz_clears]         ; [0x212d80:8]=0x1e56 ; "V\x1e"
0x00001e56      680a000000     push 0xa
0x00001e5b      e940ffffff     jmp sym..plt
;-- imp.isatty:
0x00001e60      ff25220f2100   jmp qword [reloc.isatty]                ; [0x212d88:8]=0x1e66 ; "f\x1e"
0x00001e66      680b000000     push 0xb
0x00001e6b      e930ffffff     jmp sym..plt
;-- imp.__gmpz_set_ui:
0x00001e70      ff251a0f2100   jmp qword [reloc.__gmpz_set_ui]         ; [0x212d90:8]=0x1e76 ; "v\x1e"
0x00001e76      680c000000     push 0xc
0x00001e7b      e920ffffff     jmp sym..plt
;-- imp.iswcntrl:
0x00001e80      ff25120f2100   jmp qword [reloc.iswcntrl]              ; [0x212d98:8]=0x1e86
0x00001e86      680d000000     push 0xd
0x00001e8b      e910ffffff     jmp sym..plt
;-- imp.write:
0x00001e90      ff250a0f2100   jmp qword [reloc.write]                 ; [0x212da0:8]=0x1e96
0x00001e96      680e000000     push 0xe
0x00001e9b      e900ffffff     jmp sym..plt
;-- imp.__gmpz_sub:
0x00001ea0      ff25020f2100   jmp qword [reloc.__gmpz_sub]            ; [0x212da8:8]=0x1ea6
0x00001ea6      680f000000     push 0xf
0x00001eab      e9f0feffff     jmp sym..plt
;-- imp.textdomain:
0x00001eb0      ff25fa0e2100   jmp qword [reloc.textdomain]            ; [0x212db0:8]=0x1eb6
0x00001eb6      6810000000     push 0x10
0x00001ebb      e9e0feffff     jmp sym..plt
;-- imp.fclose:
0x00001ec0      ff25f20e2100   jmp qword [reloc.fclose]                ; [0x212db8:8]=0x1ec6
0x00001ec6      6811000000     push 0x11
0x00001ecb      e9d0feffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001ed0      ff25ea0e2100   jmp qword [reloc.bindtextdomain]        ; [0x212dc0:8]=0x1ed6
0x00001ed6      6812000000     push 0x12
0x00001edb      e9c0feffff     jmp sym..plt
;-- imp.dcgettext:
0x00001ee0      ff25e20e2100   jmp qword [reloc.dcgettext]             ; [0x212dc8:8]=0x1ee6
0x00001ee6      6813000000     push 0x13
0x00001eeb      e9b0feffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001ef0      ff25da0e2100   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x212dd0:8]=0x1ef6
0x00001ef6      6814000000     push 0x14
0x00001efb      e9a0feffff     jmp sym..plt
;-- imp.strlen:
0x00001f00      ff25d20e2100   jmp qword [reloc.strlen]                ; [0x212dd8:8]=0x1f06
0x00001f06      6815000000     push 0x15
0x00001f0b      e990feffff     jmp sym..plt
;-- imp.__gmpz_powm:
0x00001f10      ff25ca0e2100   jmp qword [reloc.__gmpz_powm]           ; [0x212de0:8]=0x1f16
0x00001f16      6816000000     push 0x16
0x00001f1b      e980feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001f20      ff25c20e2100   jmp qword [reloc.__stack_chk_fail]      ; [0x212de8:8]=0x1f26 ; "&\x1f"
0x00001f26      6817000000     push 0x17
0x00001f2b      e970feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001f30      ff25ba0e2100   jmp qword [reloc.getopt_long]           ; [0x212df0:8]=0x1f36 ; "6\x1f"
0x00001f36      6818000000     push 0x18
0x00001f3b      e960feffff     jmp sym..plt
;-- imp.__gmpz_divexact:
0x00001f40      ff25b20e2100   jmp qword [reloc.__gmpz_divexact]       ; [0x212df8:8]=0x1f46 ; "F\x1f"
0x00001f46      6819000000     push 0x19                               ; "%"
0x00001f4b      e950feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001f50      ff25aa0e2100   jmp qword [reloc.mbrtowc]               ; [0x212e00:8]=0x1f56 ; "V\x1f"
0x00001f56      681a000000     push 0x1a
0x00001f5b      e940feffff     jmp sym..plt
;-- imp.__gmpz_inits:
0x00001f60      ff25a20e2100   jmp qword [reloc.__gmpz_inits]          ; [0x212e08:8]=0x1f66 ; "f\x1f"
0x00001f66      681b000000     push 0x1b
0x00001f6b      e930feffff     jmp sym..plt
;-- imp.strchr:
0x00001f70      ff259a0e2100   jmp qword [reloc.strchr]                ; [0x212e10:8]=0x1f76 ; "v\x1f"
0x00001f76      681c000000     push 0x1c
0x00001f7b      e920feffff     jmp sym..plt
;-- imp.__gmpz_set:
0x00001f80      ff25920e2100   jmp qword [reloc.__gmpz_set]            ; [0x212e18:8]=0x1f86
0x00001f86      681d000000     push 0x1d
0x00001f8b      e910feffff     jmp sym..plt
;-- imp.__gmpz_mul:
0x00001f90      ff258a0e2100   jmp qword [reloc.__gmpz_mul]            ; [0x212e20:8]=0x1f96
0x00001f96      681e000000     push 0x1e
0x00001f9b      e900feffff     jmp sym..plt
;-- imp.__overflow:
0x00001fa0      ff25820e2100   jmp qword [reloc.__overflow]            ; [0x212e28:8]=0x1fa6
0x00001fa6      681f000000     push 0x1f
0x00001fab      e9f0fdffff     jmp sym..plt
;-- imp.strrchr:
0x00001fb0      ff257a0e2100   jmp qword [reloc.strrchr]               ; [0x212e30:8]=0x1fb6
0x00001fb6      6820000000     push 0x20                               ; "@"
0x00001fbb      e9e0fdffff     jmp sym..plt
;-- imp.__gmpz_tdiv_q_ui:
0x00001fc0      ff25720e2100   jmp qword [reloc.__gmpz_tdiv_q_ui]      ; [0x212e38:8]=0x1fc6
0x00001fc6      6821000000     push 0x21                               ; '!'
0x00001fcb      e9d0fdffff     jmp sym..plt
;-- imp.lseek:
0x00001fd0      ff256a0e2100   jmp qword [reloc.lseek]                 ; [0x212e40:8]=0x1fd6
0x00001fd6      6822000000     push 0x22                               ; '"'
0x00001fdb      e9c0fdffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001fe0      ff25620e2100   jmp qword [reloc.__assert_fail]         ; [0x212e48:8]=0x1fe6
0x00001fe6      6823000000     push 0x23                               ; '#'
0x00001feb      e9b0fdffff     jmp sym..plt
;-- imp.memset:
0x00001ff0      ff255a0e2100   jmp qword [reloc.memset]                ; [0x212e50:8]=0x1ff6
0x00001ff6      6824000000     push 0x24                               ; '$'
0x00001ffb      e9a0fdffff     jmp sym..plt
;-- imp.strnlen:
0x00002000      ff25520e2100   jmp qword [reloc.strnlen]               ; [0x212e58:8]=0x2006
0x00002006      6825000000     push 0x25                               ; '%'
0x0000200b      e990fdffff     jmp sym..plt
;-- imp.__gmpz_fdiv_q_2exp:
0x00002010      ff254a0e2100   jmp qword [reloc.__gmpz_fdiv_q_2exp]    ; [0x212e60:8]=0x2016
0x00002016      6826000000     push 0x26                               ; '&'
0x0000201b      e980fdffff     jmp sym..plt
;-- imp.memchr:
0x00002020      ff25420e2100   jmp qword [reloc.memchr]                ; [0x212e68:8]=0x2026 ; "& "
0x00002026      6827000000     push 0x27                               ; '''
0x0000202b      e970fdffff     jmp sym..plt
;-- imp.memcmp:
0x00002030      ff253a0e2100   jmp qword [reloc.memcmp]                ; [0x212e70:8]=0x2036 ; "6 "
0x00002036      6828000000     push 0x28                               ; '('
0x0000203b      e960fdffff     jmp sym..plt
;-- imp.__gmp_printf:
0x00002040      ff25320e2100   jmp qword [reloc.__gmp_printf]          ; [0x212e78:8]=0x2046 ; "F "
0x00002046      6829000000     push 0x29                               ; ')' ; "X\x05"
0x0000204b      e950fdffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00002050      ff252a0e2100   jmp qword [reloc.fputs_unlocked]        ; [0x212e80:8]=0x2056 ; "V "
0x00002056      682a000000     push 0x2a                               ; '*'
0x0000205b      e940fdffff     jmp sym..plt
;-- imp.calloc:
0x00002060      ff25220e2100   jmp qword [reloc.calloc]                ; [0x212e88:8]=0x2066 ; "f "
0x00002066      682b000000     push 0x2b                               ; '+'
0x0000206b      e930fdffff     jmp sym..plt
;-- imp.strcmp:
0x00002070      ff251a0e2100   jmp qword [reloc.strcmp]                ; [0x212e90:8]=0x2076 ; "v "
0x00002076      682c000000     push 0x2c                               ; ','
0x0000207b      e920fdffff     jmp sym..plt
;-- imp.__gmpz_init_set_si:
0x00002080      ff25120e2100   jmp qword [reloc.__gmpz_init_set_si]    ; [0x212e98:8]=0x2086
0x00002086      682d000000     push 0x2d                               ; '-'
0x0000208b      e910fdffff     jmp sym..plt
;-- imp.__gmpz_add_ui:
0x00002090      ff250a0e2100   jmp qword [reloc.__gmpz_add_ui]         ; [0x212ea0:8]=0x2096
0x00002096      682e000000     push 0x2e                               ; '.'
0x0000209b      e900fdffff     jmp sym..plt
;-- imp.memcpy:
0x000020a0      ff25020e2100   jmp qword [reloc.memcpy]                ; [0x212ea8:8]=0x20a6
0x000020a6      682f000000     push 0x2f                               ; '/'
0x000020ab      e9f0fcffff     jmp sym..plt
;-- imp.fileno:
0x000020b0      ff25fa0d2100   jmp qword [reloc.fileno]                ; [0x212eb0:8]=0x20b6
0x000020b6      6830000000     push 0x30                               ; '0'
0x000020bb      e9e0fcffff     jmp sym..plt
;-- imp.__gmpz_divisible_ui_p:
0x000020c0      ff25f20d2100   jmp qword [reloc.__gmpz_divisible_ui_p] ; [0x212eb8:8]=0x20c6
0x000020c6      6831000000     push 0x31                               ; '1'
0x000020cb      e9d0fcffff     jmp sym..plt
;-- imp.wcwidth:
0x000020d0      ff25ea0d2100   jmp qword [reloc.wcwidth]               ; [0x212ec0:8]=0x20d6
0x000020d6      6832000000     push 0x32                               ; '2'
0x000020db      e9c0fcffff     jmp sym..plt
;-- imp.iswalnum:
0x000020e0      ff25e20d2100   jmp qword [reloc.iswalnum]              ; [0x212ec8:8]=0x20e6
0x000020e6      6833000000     push 0x33                               ; '3'
0x000020eb      e9b0fcffff     jmp sym..plt
;-- imp.malloc:
0x000020f0      ff25da0d2100   jmp qword [reloc.malloc]                ; [0x212ed0:8]=0x20f6
0x000020f6      6834000000     push 0x34                               ; '4'
0x000020fb      e9a0fcffff     jmp sym..plt
;-- imp.fflush:
0x00002100      ff25d20d2100   jmp qword [reloc.fflush]                ; [0x212ed8:8]=0x2106
0x00002106      6835000000     push 0x35                               ; '5'
0x0000210b      e990fcffff     jmp sym..plt
;-- imp.__gmpz_clear:
0x00002110      ff25ca0d2100   jmp qword [reloc.__gmpz_clear]          ; [0x212ee0:8]=0x2116
0x00002116      6836000000     push 0x36                               ; '6'
0x0000211b      e980fcffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00002120      ff25c20d2100   jmp qword [reloc.nl_langinfo]           ; [0x212ee8:8]=0x2126 ; "&!"
0x00002126      6837000000     push 0x37                               ; '7'
0x0000212b      e970fcffff     jmp sym..plt
;-- imp.__gmpz_tdiv_q_2exp:
0x00002130      ff25ba0d2100   jmp qword [reloc.__gmpz_tdiv_q_2exp]    ; [0x212ef0:8]=0x2136 ; "6!"
0x00002136      6838000000     push 0x38                               ; '8'
0x0000213b      e960fcffff     jmp sym..plt
;-- imp.__freading:
0x00002140      ff25b20d2100   jmp qword [reloc.__freading]            ; [0x212ef8:8]=0x2146 ; "F!"
0x00002146      6839000000     push 0x39                               ; '9'
0x0000214b      e950fcffff     jmp sym..plt
;-- imp.realloc:
0x00002150      ff25aa0d2100   jmp qword [reloc.realloc]               ; [0x212f00:8]=0x2156 ; "V!"
0x00002156      683a000000     push 0x3a                               ; ':'
0x0000215b      e940fcffff     jmp sym..plt
;-- imp.setlocale:
0x00002160      ff25a20d2100   jmp qword [reloc.setlocale]             ; [0x212f08:8]=0x2166 ; "f!"
0x00002166      683b000000     push 0x3b                               ; ';'
0x0000216b      e930fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00002170      ff259a0d2100   jmp qword [reloc.__printf_chk]          ; [0x212f10:8]=0x2176 ; "v!"
0x00002176      683c000000     push 0x3c                               ; '<'
0x0000217b      e920fcffff     jmp sym..plt
;-- imp.iconv_close:
0x00002180      ff25920d2100   jmp qword [reloc.iconv_close]           ; [0x212f18:8]=0x2186
0x00002186      683d000000     push 0x3d                               ; '='
0x0000218b      e910fcffff     jmp sym..plt
;-- imp.__gmpz_mod:
0x00002190      ff258a0d2100   jmp qword [reloc.__gmpz_mod]            ; [0x212f20:8]=0x2196
0x00002196      683e000000     push 0x3e                               ; '>'
0x0000219b      e900fcffff     jmp sym..plt
;-- imp.iswspace:
0x000021a0      ff25820d2100   jmp qword [reloc.iswspace]              ; [0x212f28:8]=0x21a6
0x000021a6      683f000000     push 0x3f                               ; '?'
0x000021ab      e9f0fbffff     jmp sym..plt
;-- imp.__gmpz_init_set_ui:
0x000021b0      ff257a0d2100   jmp qword [reloc.__gmpz_init_set_ui]    ; [0x212f30:8]=0x21b6
0x000021b6      6840000000     push 0x40                               ; segment.PHDR
0x000021bb      e9e0fbffff     jmp sym..plt
;-- imp.__gmpz_cmp:
0x000021c0      ff25720d2100   jmp qword [reloc.__gmpz_cmp]            ; [0x212f38:8]=0x21c6
0x000021c6      6841000000     push 0x41                               ; 'A'
0x000021cb      e9d0fbffff     jmp sym..plt
;-- imp.memmove:
0x000021d0      ff256a0d2100   jmp qword [reloc.memmove]               ; [0x212f40:8]=0x21d6
0x000021d6      6842000000     push 0x42                               ; 'B'
0x000021db      e9c0fbffff     jmp sym..plt
;-- imp.error:
0x000021e0      ff25620d2100   jmp qword [reloc.error]                 ; [0x212f48:8]=0x21e6
0x000021e6      6843000000     push 0x43                               ; 'C'
0x000021eb      e9b0fbffff     jmp sym..plt
;-- imp.fseeko:
0x000021f0      ff255a0d2100   jmp qword [reloc.fseeko]                ; [0x212f50:8]=0x21f6
0x000021f6      6844000000     push 0x44                               ; 'D'
0x000021fb      e9a0fbffff     jmp sym..plt
;-- imp.__gmpz_gcd:
0x00002200      ff25520d2100   jmp qword [reloc.__gmpz_gcd]            ; [0x212f58:8]=0x2206
0x00002206      6845000000     push 0x45                               ; 'E'
0x0000220b      e990fbffff     jmp sym..plt
;-- imp.__gmpz_init_set_str:
0x00002210      ff254a0d2100   jmp qword [reloc.__gmpz_init_set_str]   ; [0x212f60:8]=0x2216
0x00002216      6846000000     push 0x46                               ; 'F'
0x0000221b      e980fbffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00002220      ff25420d2100   jmp qword [reloc.__cxa_atexit]          ; [0x212f68:8]=0x2226 ; "&\""
0x00002226      6847000000     push 0x47                               ; 'G'
0x0000222b      e970fbffff     jmp sym..plt
;-- imp.exit:
0x00002230      ff253a0d2100   jmp qword [reloc.exit]                  ; [0x212f70:8]=0x2236 ; "6\""
0x00002236      6848000000     push 0x48                               ; 'H'
0x0000223b      e960fbffff     jmp sym..plt
;-- imp.fwrite:
0x00002240      ff25320d2100   jmp qword [reloc.fwrite]                ; [0x212f78:8]=0x2246 ; "F\""
0x00002246      6849000000     push 0x49                               ; 'I'
0x0000224b      e950fbffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00002250      ff252a0d2100   jmp qword [reloc.__fprintf_chk]         ; [0x212f80:8]=0x2256 ; "V\""
0x00002256      684a000000     push 0x4a                               ; 'J'
0x0000225b      e940fbffff     jmp sym..plt
;-- imp.__gmpz_cmp_ui:
0x00002260      ff25220d2100   jmp qword [reloc.__gmpz_cmp_ui]         ; [0x212f88:8]=0x2266 ; "f\""
0x00002266      684b000000     push 0x4b                               ; 'K'
0x0000226b      e930fbffff     jmp sym..plt
;-- imp.__gmpz_init:
0x00002270      ff251a0d2100   jmp qword [reloc.__gmpz_init]           ; [0x212f90:8]=0x2276 ; "v\""
0x00002276      684c000000     push 0x4c                               ; 'L'
0x0000227b      e920fbffff     jmp sym..plt
;-- imp.fflush_unlocked:
0x00002280      ff25120d2100   jmp qword [reloc.fflush_unlocked]       ; [0x212f98:8]=0x2286
0x00002286      684d000000     push 0x4d                               ; 'M'
0x0000228b      e910fbffff     jmp sym..plt
;-- imp.__gmpz_powm_ui:
0x00002290      ff250a0d2100   jmp qword [reloc.__gmpz_powm_ui]        ; [0x212fa0:8]=0x2296
0x00002296      684e000000     push 0x4e                               ; 'N'
0x0000229b      e900fbffff     jmp sym..plt
;-- imp.strdup:
0x000022a0      ff25020d2100   jmp qword [reloc.strdup]                ; [0x212fa8:8]=0x22a6
0x000022a6      684f000000     push 0x4f                               ; 'O'
0x000022ab      e9f0faffff     jmp sym..plt
;-- imp.mbsinit:
0x000022b0      ff25fa0c2100   jmp qword [reloc.mbsinit]               ; [0x212fb0:8]=0x22b6
0x000022b6      6850000000     push 0x50                               ; 'P' ; "@"
0x000022bb      e9e0faffff     jmp sym..plt
;-- imp.iswprint:
0x000022c0      ff25f20c2100   jmp qword [reloc.iswprint]              ; [0x212fb8:8]=0x22c6
0x000022c6      6851000000     push 0x51                               ; 'Q'
0x000022cb      e9d0faffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000022d0      ff25ea0c2100   jmp qword [reloc.__ctype_b_loc]         ; [0x212fc0:8]=0x22d6
0x000022d6      6852000000     push 0x52                               ; 'R'
0x000022db      e9c0faffff     jmp sym..plt
;-- imp.iconv_open:
0x000022e0      ff25e20c2100   jmp qword [reloc.iconv_open]            ; [0x212fc8:8]=0x22e6
0x000022e6      6853000000     push 0x53                               ; 'S'
0x000022eb      e9b0faffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x000022f0      ff25da0c2100   jmp qword [reloc.__sprintf_chk]         ; [0x212fd0:8]=0x22f6
0x000022f6      6854000000     push 0x54                               ; 'T'
0x000022fb      e9a0faffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00002300      .qword 0x906600210cf225ff                              ; [13] -r-x section size 8 named .plt.got
0x00002308      0000           add byte [rax], al
0x0000230a      0000           add byte [rax], al
0x0000230c      0000           add byte [rax], al
0x0000230e      0000           add byte [rax], al
;-- section..text:
;-- .text:
;-- mbuiter_multi_next.part.0:
0x00002310      488d0db9dd00.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; ../coreutils-8.31/lib/mbuiter.h:132 ; 0x100d0 ; "mbuiter_multi_next" ; [14] -r-x section size 42782 named .text
0x00002317      488d353add00.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000231e      488d3d53dd00.  lea rdi, str.iter__cur.wc____0          ; 0x10078 ; "iter->cur.wc == 0"
0x00002325      4883ec08       sub rsp, 8
0x00002329      bab3000000     mov edx, 0xb3                           ; ../coreutils-8.31/lib/mbuiter.h:179
0x0000232e      e8adfcffff     call sym.imp.__assert_fail
;-- mbiter_multi_next.part.0:
0x00002333      488d0db6e200.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x105f0 ; "mbiter_multi_next"
0x0000233a      488d3587e200.  lea rsi, [0x000105c8]                   ; "../coreutils-8.31/lib/mbiter.h"
0x00002341      488d3d30dd00.  lea rdi, str.iter__cur.wc____0          ; 0x10078 ; "iter->cur.wc == 0"
0x00002348      4883ec08       sub rsp, 8
0x0000234c      baaa000000     mov edx, 0xaa
0x00002351      e88afcffff     call sym.imp.__assert_fail
;-- mbuiter_multi_next.part.0:
0x00002356      488d0d63e600.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x109c0 ; "mbuiter_multi_next"
0x0000235d      488d35f4dc00.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x00002364      488d3d0ddd00.  lea rdi, str.iter__cur.wc____0          ; 0x10078 ; "iter->cur.wc == 0"
0x0000236b      4883ec08       sub rsp, 8
0x0000236f      bab3000000     mov edx, 0xb3
0x00002374      e867fcffff     call sym.imp.__assert_fail
0x00002379      0f1f80000000.  nop dword [rax]
;-- main:
0x00002380      4156           push r14
0x00002382      4155           push r13
0x00002384      4154           push r12
0x00002386      55             push rbp
0x00002387      89fd           mov ebp, edi
0x00002389      53             push rbx
0x0000238a      4889f3         mov rbx, rsi
0x0000238d      4883ec20       sub rsp, 0x20
0x00002391      488b3e         mov rdi, qword [rsi]
0x00002394      64488b042528.  mov rax, qword fs:[0x28]
0x0000239d      4889442418     mov qword [rsp + 0x18], rax
0x000023a2      31c0           xor eax, eax
0x000023a4      e8073e0000     call sym.set_program_name
0x000023a9      488d35abe200.  lea rsi, [0x0001065b]
0x000023b0      bf06000000     mov edi, 6
0x000023b5      e8a6fdffff     call sym.imp.setlocale
0x000023ba      488d3507ab00.  lea rsi, str.usr_local_share_locale     ; 0xcec8 ; "/usr/local/share/locale"
0x000023c1      488d3dd7aa00.  lea rdi, [0x0000ce9f]                   ; "coreutils"
0x000023c8      e803fbffff     call sym.imp.bindtextdomain
0x000023cd      488d3dcbaa00.  lea rdi, [0x0000ce9f]                   ; "coreutils"
0x000023d4      e8d7faffff     call sym.imp.textdomain
0x000023d9      48833d0f0d21.  cmp qword [obj.lbuf], 0                 ; [0x2130f0:8]=0
0x000023e1      0f84d5000000   je 0x24bc
0x000023e7      488d3d423c00.  lea rdi, sym.close_stdout               ; 0x6030 ; "USH\x83\xec\bH\x8b=k\xd0 "
0x000023ee      4c8d254b0621.  lea r12, obj.long_options               ; 0x212a40 ; "/\xcf"
0x000023f5      e826a60000     call sym.atexit
0x000023fa      488d3d2f0c00.  lea rdi, sym.lbuf_flush                 ; 0x3030 ; "SH\x8b5\xb8"
0x00002401      e81aa60000     call sym.atexit
0x00002406      488d154ee200.  lea rdx, [0x0001065b]
0x0000240d      4531c0         xor r8d, r8d
0x00002410      4c89e1         mov rcx, r12
0x00002413      4889de         mov rsi, rbx
0x00002416      89ef           mov edi, ebp
0x00002418      e813fbffff     call sym.imp.getopt_long
0x0000241d      83f8ff         cmp eax, 0xffffffff
0x00002420      0f84b3000000   je 0x24d9
0x00002426      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000242b      0f8445010000   je 0x2576
0x00002431      3d80000000     cmp eax, 0x80
0x00002436      7478           je 0x24b0
0x00002438      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000243d      7411           je 0x2450
0x0000243f      bf01000000     mov edi, 1
0x00002444      e877380000     call sym.usage
0x00002449      0f1f80000000.  nop dword [rax]
0x00002450      488d3589aa00.  lea rsi, str.Niels_M__ller              ; 0xcee0 ; "Niels M\u00f6ller"
0x00002457      488d3d90aa00.  lea rdi, str.Niels_Moller               ; 0xceee ; "Niels Moller"
0x0000245e      e8ed470000     call sym.proper_name_utf8
0x00002463      488d3591aa00.  lea rsi, str.Torbj__rn_Granlund         ; 0xcefb ; "Torbj\u00f6rn Granlund"
0x0000246a      488d3d9daa00.  lea rdi, str.Torbjorn_Granlund          ; 0xcf0e ; "Torbjorn Granlund"
0x00002471      4889c3         mov rbx, rax
0x00002474      e8d7470000     call sym.proper_name_utf8
0x00002479      488b3d280c21.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00002480      488b0d910b21.  mov rcx, qword [obj.Version]            ; [0x213018:8]=0x10003 str.8.31
0x00002487      4c8d0592aa00.  lea r8, str.Paul_Rubin                  ; 0xcf20 ; "Paul Rubin"
0x0000248e      6a00           push 0
0x00002490      488d1504aa00.  lea rdx, str.GNU_coreutils              ; 0xce9b ; "GNU coreutils"
0x00002497      53             push rbx
0x00002498      488d357fa900.  lea rsi, str.factor                     ; 0xce1e ; "factor"
0x0000249f      4989c1         mov r9, rax
0x000024a2      31c0           xor eax, eax
0x000024a4      e8d7760000     call sym.version_etc
0x000024a9      31ff           xor edi, edi
0x000024ab      e880fdffff     call sym.imp.exit
0x000024b0      c605490c2100.  mov byte [obj.dev_debug], 1             ; [0x213100:1]=0
0x000024b7      e94affffff     jmp 0x2406
0x000024bc      bf00040000     mov edi, 0x400
0x000024c1      e81a780000     call sym.xmalloc
0x000024c6      488905230c21.  mov qword [obj.lbuf], rax               ; [0x2130f0:8]=0
0x000024cd      488905240c21.  mov qword [0x002130f8], rax             ; [0x2130f8:8]=0
0x000024d4      e90effffff     jmp 0x23e7
0x000024d9      4c6325d80b21.  movsxd r12, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2130b8:4]=0
0x000024e0      4139ec         cmp r12d, ebp
0x000024e3      7d46           jge 0x252b
0x000024e5      41bd01000000   mov r13d, 1
0x000024eb      4531f6         xor r14d, r14d
0x000024ee      4a8b3ce3       mov rdi, qword [rbx + r12*8]
0x000024f2      e839340000     call sym.print_factors
0x000024f7      84c0           test al, al
0x000024f9      450f44ee       cmove r13d, r14d
0x000024fd      4983c401       add r12, 1
0x00002501      4439e5         cmp ebp, r12d
0x00002504      7fe8           jg 0x24ee
0x00002506      4183f501       xor r13d, 1
0x0000250a      488b542418     mov rdx, qword [rsp + 0x18]
0x0000250f      644833142528.  xor rdx, qword fs:[0x28]
0x00002518      410fb6c5       movzx eax, r13b
0x0000251c      755f           jne 0x257d
0x0000251e      4883c420       add rsp, 0x20
0x00002522      5b             pop rbx
0x00002523      5d             pop rbp
0x00002524      415c           pop r12
0x00002526      415d           pop r13
0x00002528      415e           pop r14
0x0000252a      c3             ret
0x0000252b      4889e3         mov rbx, rsp
0x0000252e      41bd01000000   mov r13d, 1
0x00002534      488d2df0a900.  lea rbp, [0x0000cf2b]                   ; "\n\t "
0x0000253b      4889df         mov rdi, rbx
0x0000253e      e88d660000     call sym.init_tokenbuffer
0x00002543      eb08           jmp 0x254d
0x00002545      e8e6330000     call sym.print_factors
0x0000254a      4121c5         and r13d, eax
0x0000254d      488b3d5c0b21.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2130b0:8]=0
0x00002554      4889d9         mov rcx, rbx
0x00002557      ba03000000     mov edx, 3
0x0000255c      4889ee         mov rsi, rbp
0x0000255f      e87c660000     call sym.readtoken
0x00002564      4883c001       add rax, 1
0x00002568      488b7c2408     mov rdi, qword [rsp + 8]
0x0000256d      75d6           jne 0x2545
0x0000256f      e85cf8ffff     call sym.imp.free
0x00002574      eb90           jmp 0x2506
0x00002576      31ff           xor edi, edi
0x00002578      e843370000     call sym.usage
0x0000257d      e89ef9ffff     call sym.imp.__stack_chk_fail
0x00002582      662e0f1f8400.  nop word cs:[rax + rax]
0x0000258c      0f1f4000       nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002590      31ed           xor ebp, ebp
0x00002592      4989d1         mov r9, rdx
0x00002595      5e             pop rsi
0x00002596      4889e2         mov rdx, rsp
0x00002599      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000259d      50             push rax
0x0000259e      54             push rsp
0x0000259f      4c8d056aa400.  lea r8, sym.__libc_csu_fini             ; 0xca10
0x000025a6      488d0df3a300.  lea rcx, sym.__libc_csu_init            ; 0xc9a0 ; "AWAVI\x89\xd7AUATL\x8d%~` "
0x000025ad      488d3dccfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x2380 ; "AVAUATU\x89\xfdSH\x89\xf3H\x83\xec H\x8b>dH\x8b\x04%("
0x000025b4      ff15260a2100   call qword [reloc.__libc_start_main]    ; [0x212fe0:8]=0
0x000025ba      f4             hlt
0x000025bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000025c0      488d3dd90a21.  lea rdi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2130a0
0x000025c7      55             push rbp
0x000025c8      488d05d10a21.  lea rax, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2130a0
0x000025cf      4839f8         cmp rax, rdi
0x000025d2      4889e5         mov rbp, rsp
0x000025d5      7419           je 0x25f0
0x000025d7      488b05fa0921.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x212fd8:8]=0
0x000025de      4885c0         test rax, rax
0x000025e1      740d           je 0x25f0
0x000025e3      5d             pop rbp
0x000025e4      ffe0           jmp rax
0x000025e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000025f0      5d             pop rbp
0x000025f1      c3             ret
0x000025f2      0f1f4000       nop dword [rax]
0x000025f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002600      488d3d990a21.  lea rdi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2130a0
0x00002607      488d35920a21.  lea rsi, loc._edata                     ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2130a0
0x0000260e      55             push rbp
0x0000260f      4829fe         sub rsi, rdi
0x00002612      4889e5         mov rbp, rsp
0x00002615      48c1fe03       sar rsi, 3
0x00002619      4889f0         mov rax, rsi
0x0000261c      48c1e83f       shr rax, 0x3f
0x00002620      4801c6         add rsi, rax
0x00002623      48d1fe         sar rsi, 1
0x00002626      7418           je 0x2640
0x00002628      488b05c10921.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x212ff0:8]=0
0x0000262f      4885c0         test rax, rax
0x00002632      740c           je 0x2640
0x00002634      5d             pop rbp
0x00002635      ffe0           jmp rax
0x00002637      660f1f840000.  nop word [rax + rax]
0x00002640      5d             pop rbp
0x00002641      c3             ret
0x00002642      0f1f4000       nop dword [rax]
0x00002646      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002650      803d910a2100.  cmp byte [obj.completed.7697], 0        ; [0x2130e8:1]=0
0x00002657      752f           jne 0x2688
0x00002659      48833d970921.  cmp qword [reloc.__cxa_finalize], 0     ; [0x212ff8:8]=0
0x00002661      55             push rbp
0x00002662      4889e5         mov rbp, rsp
0x00002665      740c           je 0x2673
0x00002667      488b3d9a0921.  mov rdi, qword [obj.__dso_handle]       ; [0x213008:8]=0x213008 obj.__dso_handle
0x0000266e      e88dfcffff     call sym..plt.got
0x00002673      e848ffffff     call sym.deregister_tm_clones
0x00002678      c605690a2100.  mov byte [obj.completed.7697], 1        ; [0x2130e8:1]=0
0x0000267f      5d             pop rbp
0x00002680      c3             ret
0x00002681      0f1f80000000.  nop dword [rax]
0x00002688      f3c3           ret
0x0000268a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002690      55             push rbp
0x00002691      4889e5         mov rbp, rsp
0x00002694      5d             pop rbp
0x00002695      e966ffffff     jmp sym.register_tm_clones
0x0000269a      660f1f440000   nop word [rax + rax]
;-- gcd_odd:
0x000026a0      40f6c601       test sil, 1                             ; /src:444
0x000026a4      7409           je 0x26af
0x000026a6      4889f0         mov rax, rsi
0x000026a9      4889fe         mov rsi, rdi
0x000026ac      4889c7         mov rdi, rax
0x000026af      4889f8         mov rax, rdi                            ; /src:452
0x000026b2      48d1ef         shr rdi, 1                              ; /src:455
0x000026b5      4885f6         test rsi, rsi                           ; /src:451
0x000026b8      751a           jne 0x26d4
0x000026ba      eb34           jmp 0x26f0
0x000026bc      0f1f4000       nop dword [rax]
0x000026c0      4899           cqo                                     ; /src:470
0x000026c2      4889c1         mov rcx, rax                            ; /src:473
0x000026c5      4821d1         and rcx, rdx
0x000026c8      4831d0         xor rax, rdx                            ; /src:476
0x000026cb      4801cf         add rdi, rcx                            ; /src:473
0x000026ce      4829d0         sub rax, rdx                            ; /src:476
0x000026d1      4889c6         mov rsi, rax                            ; /src:445
0x000026d4      4889f0         mov rax, rsi
0x000026d7      48d1e8         shr rax, 1
0x000026da      40f6c601       test sil, 1                             ; /src:462
0x000026de      74f1           je 0x26d1
0x000026e0      4829f8         sub rax, rdi                            ; /src:467
0x000026e3      75db           jne 0x26c0
0x000026e5      4889f0         mov rax, rsi                            ; /src:468
0x000026e8      4883c801       or rax, 1
0x000026ec      c3             ret
0x000026ed      0f1f00         nop dword [rax]
0x000026f0      f3c3           ret                                     ; /src:478
0x000026f2      0f1f4000       nop dword [rax]
0x000026f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- factor_insert_multiplicity:
0x00002700      4156           push r14                                ; /src:527
0x00002702      4155           push r13
0x00002704      4c8d5f10       lea r11, [rdi + 0x10]                   ; /src:529
0x00002708      440fb6affa00.  movzx r13d, byte [rdi + 0xfa]           ; /src:528
0x00002710      4154           push r12                                ; /src:527
0x00002712      55             push rbp
0x00002713      53             push rbx
0x00002714      488d9fe00000.  lea rbx, [rdi + 0xe0]                   ; /src:530
0x0000271b      4589ec         mov r12d, r13d                          ; /src:528
0x0000271e      4183ed01       sub r13d, 1                             ; /src:534
0x00002722      4183fdff       cmp r13d, 0xffffffff
0x00002726      0f84cc000000   je 0x27f8
0x0000272c      4963cd         movsxd rcx, r13d                        ; /src:536
0x0000272f      488d04cd0000.  lea rax, [rcx*8]
0x00002737      488b6c0710     mov rbp, qword [rdi + rax + 0x10]
0x0000273c      4839ee         cmp rsi, rbp
0x0000273f      0f839b000000   jae 0x27e0
0x00002745      4589e9         mov r9d, r13d
0x00002748      488d41ff       lea rax, [rcx - 1]
0x0000274c      4989ce         mov r14, rcx
0x0000274f      4d29ce         sub r14, r9
0x00002752      4589e9         mov r9d, r13d
0x00002755      4989c0         mov r8, rax
0x00002758      4983ee01       sub r14, 1
0x0000275c      eb10           jmp 0x276e
0x0000275e      6690           nop
0x00002760      4d8d50ff       lea r10, [r8 - 1]
0x00002764      4b3974d308     cmp qword [r11 + r10*8 + 8], rsi
0x00002769      765d           jbe 0x27c8
0x0000276b      4d89d0         mov r8, r10
0x0000276e      4183e901       sub r9d, 1                              ; /src:534
0x00002772      4d39c6         cmp r14, r8
0x00002775      75e9           jne 0x2760
0x00002777      4989d8         mov r8, rbx                             ; /src:530
0x0000277a      4d89de         mov r14, r11                            ; /src:529
0x0000277d      41b9ffffffff   mov r9d, 0xffffffff                     ; -1
0x00002783      eb0b           jmp 0x2790
0x00002785      0f1f00         nop dword [rax]
0x00002788      498b2cc3       mov rbp, qword [r11 + rax*8]
0x0000278c      4883e801       sub rax, 1
0x00002790      49896ccb08     mov qword [r11 + rcx*8 + 8], rbp        ; /src:544
0x00002795      440fb6140b     movzx r10d, byte [rbx + rcx]            ; /src:545
0x0000279a      4139c1         cmp r9d, eax                            ; /src:542
0x0000279d      4488540b01     mov byte [rbx + rcx + 1], r10b          ; /src:545
0x000027a2      4889c1         mov rcx, rax
0x000027a5      7ce1           jl 0x2788                               ; /src:542
0x000027a7      4183c401       add r12d, 1                             ; /src:549
0x000027ab      498936         mov qword [r14], rsi                    ; /src:547
0x000027ae      418810         mov byte [r8], dl                       ; /src:548
0x000027b1      4488a7fa0000.  mov byte [rdi + 0xfa], r12b             ; /src:549
0x000027b8      5b             pop rbx                                 ; /src:555
0x000027b9      5d             pop rbp
0x000027ba      415c           pop r12
0x000027bc      415d           pop r13
0x000027be      415e           pop r14
0x000027c0      c3             ret
0x000027c1      0f1f80000000.  nop dword [rax]
0x000027c8      741b           je 0x27e5                               ; /src:540
0x000027ca      4983c001       add r8, 1
0x000027ce      4f8d34c3       lea r14, [r11 + r8*8]
0x000027d2      4901d8         add r8, rbx
0x000027d5      4539cd         cmp r13d, r9d                           ; /src:542
0x000027d8      7fb6           jg 0x2790
0x000027da      ebcb           jmp 0x27a7
0x000027dc      0f1f4000       nop dword [rax]
0x000027e0      751e           jne 0x2800                              ; /src:540
0x000027e2      4989c8         mov r8, rcx
0x000027e5      42001403       add byte [rbx + r8], dl                 ; /src:553
0x000027e9      5b             pop rbx                                 ; /src:555
0x000027ea      5d             pop rbp
0x000027eb      415c           pop r12
0x000027ed      415d           pop r13
0x000027ef      415e           pop r14
0x000027f1      c3             ret
0x000027f2      660f1f440000   nop word [rax + rax]
0x000027f8      4989d8         mov r8, rbx                             ; /src:530
0x000027fb      4d89de         mov r14, r11                            ; /src:529
0x000027fe      eba7           jmp 0x27a7
0x00002800      4d8d740308     lea r14, [r11 + rax + 8]
0x00002805      4c8d440b01     lea r8, [rbx + rcx + 1]
0x0000280a      eb9b           jmp 0x27a7
0x0000280c      0f1f4000       nop dword [rax]
;-- powm:
0x00002810      40f6c601       test sil, 1                             ; /src:1062
0x00002814      4989d1         mov r9, rdx
0x00002817      7457           je 0x2870                               ; /src:1065
0x00002819      4989f8         mov r8, rdi                             ; /src:1066
0x0000281c      0f1f4000       nop dword [rax]
0x00002820      4889f8         mov rax, rdi                            ; /src:979
0x00002823      48f7e7         mul rdi
0x00002826      4989d2         mov r10, rdx
0x00002829      4c89d7         mov rdi, r10                            ; /src:982
0x0000282c      480fafc1       imul rax, rcx                           ; /src:980
0x00002830      49f7e1         mul r9                                  ; /src:981
0x00002833      4829d7         sub rdi, rdx                            ; /src:982
0x00002836      4939d2         cmp r10, rdx                            ; /src:984
0x00002839      4a8d040f       lea rax, [rdi + r9]
0x0000283d      480f42f8       cmovb rdi, rax
0x00002841      48d1ee         shr rsi, 1
0x00002844      40f6c601       test sil, 1
0x00002848      7426           je 0x2870
0x0000284a      4c89c0         mov rax, r8
0x0000284d      48f7e7         mul rdi                                 ; /src:989
0x00002850      4989d2         mov r10, rdx
0x00002853      4d89d0         mov r8, r10
0x00002856      480fafc1       imul rax, rcx                           ; /src:990
0x0000285a      49f7e1         mul r9
0x0000285d      4929d0         sub r8, rdx
0x00002860      4939d2         cmp r10, rdx
0x00002863      4b8d0408       lea rax, [r8 + r9]
0x00002867      4c0f42c0       cmovb r8, rax
0x0000286b      ebb3           jmp 0x2820
0x0000286d      0f1f00         nop dword [rax]
0x00002870      4885f6         test rsi, rsi                           ; /src:994
0x00002873      75ab           jne 0x2820
0x00002875      4c89c0         mov rax, r8
0x00002878      c3             ret
0x00002879      0f1f80000000.  nop dword [rax]
;-- millerrabin:
0x00002880      4154           push r12
0x00002882      4989fb         mov r11, rdi                            ; /src:997
0x00002885      55             push rbp
0x00002886      53             push rbx
0x00002887      4889f3         mov rbx, rsi
0x0000288a      4889d7         mov rdi, rdx
0x0000288d      4889ce         mov rsi, rcx
0x00002890      4c89da         mov rdx, r11
0x00002893      4489c5         mov ebp, r8d
0x00002896      4889d9         mov rcx, rbx                            ; /src:1003
0x00002899      4d89c8         mov r8, r9
0x0000289c      4d89cc         mov r12, r9
0x0000289f      e86cffffff     call sym.powm
0x000028a4      4c89df         mov rdi, r11
0x000028a7      4c29e7         sub rdi, r12
0x000028aa      4939c4         cmp r12, rax
0x000028ad      410f94c0       sete r8b
0x000028b1      4839f8         cmp rax, rdi
0x000028b4      0f94c2         sete dl
0x000028b7      4108d0         or r8b, dl
0x000028ba      7549           jne 0x2905
0x000028bc      83fd01         cmp ebp, 1
0x000028bf      7644           jbe 0x2905
0x000028c1      be01000000     mov esi, 1
0x000028c6      eb14           jmp 0x28dc
0x000028c8      0f1f84000000.  nop dword [rax + rax]
0x000028d0      4939c4         cmp r12, rax
0x000028d3      7430           je 0x2905
0x000028d5      83c601         add esi, 1
0x000028d8      39f5           cmp ebp, esi
0x000028da      7429           je 0x2905
0x000028dc      48f7e0         mul rax
0x000028df      4889d1         mov rcx, rdx                            ; /src:473
0x000028e2      480fafc3       imul rax, rbx
0x000028e6      49f7e3         mul r11
0x000028e9      4889c8         mov rax, rcx
0x000028ec      4829d0         sub rax, rdx
0x000028ef      4839d1         cmp rcx, rdx
0x000028f2      4e8d0c18       lea r9, [rax + r11]
0x000028f6      490f42c1       cmovb rax, r9
0x000028fa      4839c7         cmp rdi, rax
0x000028fd      75d1           jne 0x28d0
0x000028ff      41b801000000   mov r8d, 1
0x00002905      5b             pop rbx
0x00002906      4489c0         mov eax, r8d
0x00002909      5d             pop rbp
0x0000290a      415c           pop r12
0x0000290c      c3             ret
0x0000290d      0f1f00         nop dword [rax]
;-- mp_factor_clear:
0x00002910      55             push rbp                                ; /src:477
0x00002911      53             push rbx
0x00002912      4889fd         mov rbp, rdi
0x00002915      4883ec08       sub rsp, 8
0x00002919      48837f1000     cmp qword [rdi + 0x10], 0
0x0000291e      7421           je 0x2941
0x00002920      31db           xor ebx, ebx
0x00002922      31ff           xor edi, edi
0x00002924      0f1f4000       nop dword [rax]
0x00002928      48c1e704       shl rdi, 4
0x0000292c      48037d00       add rdi, qword [rbp]
0x00002930      e8dbf7ffff     call sym.imp.__gmpz_clear
0x00002935      8d7b01         lea edi, [rbx + 1]
0x00002938      483b7d10       cmp rdi, qword [rbp + 0x10]
0x0000293c      4889fb         mov rbx, rdi
0x0000293f      72e7           jb 0x2928
0x00002941      488b7d00       mov rdi, qword [rbp]                    ; /src:864
0x00002945      e886f4ffff     call sym.imp.free
0x0000294a      488b7d08       mov rdi, qword [rbp + 8]                ; /src:865
0x0000294e      4883c408       add rsp, 8
0x00002952      5b             pop rbx
0x00002953      5d             pop rbp                                 ; /src:866
0x00002954      e977f4ffff     jmp sym.imp.free
0x00002959      0f1f80000000.  nop dword [rax]
;-- mulredc2:
0x00002960      4157           push r15
0x00002962      4156           push r14                                ; /src:881
0x00002964      4155           push r13
0x00002966      4154           push r12
0x00002968      55             push rbp
0x00002969      53             push rbx
0x0000296a      4883ec08       sub rsp, 8
0x0000296e      488b5c2448     mov rbx, qword [rsp + 0x48]             ; /src:882
0x00002973      4c8b542440     mov r10, qword [rsp + 0x40]
0x00002978      48f7db         neg rbx
0x0000297b      4885f6         test rsi, rsi
0x0000297e      0f8833010000   js 0x2ab7                               ; /src:884
0x00002984      4885c9         test rcx, rcx                           ; /src:885
0x00002987      0f880b010000   js 0x2a98                               ; /src:884
0x0000298d      4d85c9         test r9, r9                             ; /src:886
0x00002990      0f88e3000000   js 0x2a79
0x00002996      4889d5         mov rbp, rdx
0x00002999      4989df         mov r15, rbx
0x0000299c      4889e8         mov rax, rbp
0x0000299f      49f7e0         mul r8
0x000029a2      4989c4         mov r12, rax                            ; /src:888
0x000029a5      4989d5         mov r13, rdx
0x000029a8      4889e8         mov rax, rbp
0x000029ab      4d0faffc       imul r15, r12
0x000029af      48f7e1         mul rcx                                 ; /src:906
0x000029b2      4989d3         mov r11, rdx
0x000029b5      4889c5         mov rbp, rax
0x000029b8      4c89f8         mov rax, r15
0x000029bb      49f7e2         mul r10                                 ; /src:907
0x000029be      4c89f8         mov rax, r15                            ; /src:908
0x000029c1      4989d6         mov r14, rdx
0x000029c4      49f7e1         mul r9
0x000029c7      4d85e4         test r12, r12
0x000029ca      410f95c4       setne r12b
0x000029ce      450fb6e4       movzx r12d, r12b
0x000029d2      4c01e5         add rbp, r12
0x000029d5      4c01f5         add rbp, r14
0x000029d8      4983d300       adc r11, 0
0x000029dc      4c01ed         add rbp, r13
0x000029df      4983d300       adc r11, 0
0x000029e3      4801c5         add rbp, rax
0x000029e6      4911d3         adc r11, rdx
0x000029e9      4889f0         mov rax, rsi
0x000029ec      49f7e0         mul r8
0x000029ef      4989d0         mov r8, rdx
0x000029f2      4989c4         mov r12, rax
0x000029f5      4889f0         mov rax, rsi
0x000029f8      4901ec         add r12, rbp
0x000029fb      4983d000       adc r8, 0                               ; /src:915
0x000029ff      490fafdc       imul rbx, r12
0x00002a03      31f6           xor esi, esi
0x00002a05      48f7e1         mul rcx
0x00002a08      4889d1         mov rcx, rdx                            ; /src:918
0x00002a0b      4889c5         mov rbp, rax                            ; /src:916
0x00002a0e      4c01dd         add rbp, r11
0x00002a11      4883d100       adc rcx, 0                              ; /src:918
0x00002a15      4889d8         mov rax, rbx
0x00002a18      49f7e2         mul r10
0x00002a1b      4889d8         mov rax, rbx
0x00002a1e      4989d3         mov r11, rdx
0x00002a21      49f7e1         mul r9
0x00002a24      4d85e4         test r12, r12
0x00002a27      400f95c6       setne sil
0x00002a2b      4801ee         add rsi, rbp
0x00002a2e      4c01de         add rsi, r11
0x00002a31      4883d100       adc rcx, 0
0x00002a35      4c01c6         add rsi, r8
0x00002a38      4883d100       adc rcx, 0
0x00002a3c      4801c6         add rsi, rax
0x00002a3f      4811d1         adc rcx, rdx                            ; /src:866
0x00002a42      4939c9         cmp r9, rcx
0x00002a45      4889ca         mov rdx, rcx
0x00002a48      4889f0         mov rax, rsi
0x00002a4b      7323           jae 0x2a70
0x00002a4d      4c29d6         sub rsi, r10
0x00002a50      4c19c9         sbb rcx, r9
0x00002a53      4889ca         mov rdx, rcx
0x00002a56      4889f0         mov rax, rsi
0x00002a59      488917         mov qword [rdi], rdx
0x00002a5c      4883c408       add rsp, 8
0x00002a60      5b             pop rbx
0x00002a61      5d             pop rbp
0x00002a62      415c           pop r12
0x00002a64      415d           pop r13
0x00002a66      415e           pop r14
0x00002a68      415f           pop r15
0x00002a6a      c3             ret
0x00002a6b      0f1f440000     nop dword [rax + rax]
0x00002a70      75e7           jne 0x2a59
0x00002a72      4939f2         cmp r10, rsi
0x00002a75      76d6           jbe 0x2a4d
0x00002a77      ebe0           jmp 0x2a59
0x00002a79      488d0d38a500.  lea rcx, obj.__PRETTY_FUNCTION__.8732   ; 0xcfb8 ; "mulredc2"
0x00002a80      488d35c19f00.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x00002a87      488d3d1aa000.  lea rdi, str.m1_____W_TYPE_SIZE___1______0 ; 0xcaa8 ; "(m1 >> (W_TYPE_SIZE - 1)) == 0"
0x00002a8e      bae9030000     mov edx, 0x3e9
0x00002a93      e848f5ffff     call sym.imp.__assert_fail
0x00002a98      488d0d19a500.  lea rcx, obj.__PRETTY_FUNCTION__.8732   ; 0xcfb8 ; "mulredc2"
0x00002a9f      488d35a29f00.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x00002aa6      488d3ddb9f00.  lea rdi, str.b1_____W_TYPE_SIZE___1______0 ; 0xca88 ; "(b1 >> (W_TYPE_SIZE - 1)) == 0"
0x00002aad      bae8030000     mov edx, 0x3e8
0x00002ab2      e829f5ffff     call sym.imp.__assert_fail
0x00002ab7      488d0dfaa400.  lea rcx, obj.__PRETTY_FUNCTION__.8732   ; 0xcfb8 ; "mulredc2"
0x00002abe      488d35839f00.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x00002ac5      488d3d9c9f00.  lea rdi, str.a1_____W_TYPE_SIZE___1______0 ; /src:841 ; 0xca68 ; "(a1 >> (W_TYPE_SIZE - 1)) == 0"
0x00002acc      bae7030000     mov edx, 0x3e7
0x00002ad1      e80af5ffff     call sym.imp.__assert_fail
0x00002ad6      662e0f1f8400.  nop word cs:[rax + rax]
;-- powm2:
0x00002ae0      4157           push r15
0x00002ae2      4156           push r14
0x00002ae4      4d89c7         mov r15, r8
0x00002ae7      4155           push r13
0x00002ae9      4154           push r12                                ; /src:842
0x00002aeb      4989fc         mov r12, rdi
0x00002aee      55             push rbp
0x00002aef      53             push rbx
0x00002af0      bb40000000     mov ebx, 0x40                           ; segment.PHDR
0x00002af5      4883ec38       sub rsp, 0x38
0x00002af9      498b01         mov rax, qword [r9]
0x00002afc      4c8b16         mov r10, qword [rsi]
0x00002aff      4889542428     mov qword [rsp + 0x28], rdx
0x00002b04      4c8b5e08       mov r11, qword [rsi + 8]
0x00002b08      4c8b29         mov r13, qword [rcx]
0x00002b0b      4c8b7108       mov r14, qword [rcx + 8]
0x00002b0f      4889442410     mov qword [rsp + 0x10], rax
0x00002b14      498b4108       mov rax, qword [r9 + 8]
0x00002b18      488b2a         mov rbp, qword [rdx]
0x00002b1b      4889442408     mov qword [rsp + 8], rax
0x00002b20      eb33           jmp 0x2b55
0x00002b22      660f1f440000   nop word [rax + rax]
0x00002b28      4157           push r15
0x00002b2a      4155           push r13
0x00002b2c      4d89d0         mov r8, r10
0x00002b2f      4c89d9         mov rcx, r11
0x00002b32      4c89d2         mov rdx, r10
0x00002b35      4c89de         mov rsi, r11
0x00002b38      4c89e7         mov rdi, r12
0x00002b3b      4d89f1         mov r9, r14
0x00002b3e      48d1ed         shr rbp, 1
0x00002b41      e81afeffff     call sym.mulredc2
0x00002b46      83eb01         sub ebx, 1
0x00002b49      4989c2         mov r10, rax
0x00002b4c      4d8b1c24       mov r11, qword [r12]
0x00002b50      5f             pop rdi
0x00002b51      4158           pop r8
0x00002b53      7453           je 0x2ba8
0x00002b55      40f6c501       test bpl, 1
0x00002b59      74cd           je 0x2b28
0x00002b5b      4157           push r15
0x00002b5d      4155           push r13                                ; /src:851
0x00002b5f      4d89f1         mov r9, r14
0x00002b62      488b542420     mov rdx, qword [rsp + 0x20]
0x00002b67      488b742418     mov rsi, qword [rsp + 0x18]
0x00002b6c      4d89d0         mov r8, r10
0x00002b6f      4c89d9         mov rcx, r11
0x00002b72      4c89e7         mov rdi, r12
0x00002b75      4c895c2428     mov qword [rsp + 0x28], r11
0x00002b7a      4c89542430     mov qword [rsp + 0x30], r10
0x00002b7f      e8dcfdffff     call sym.mulredc2
0x00002b84      4889442420     mov qword [rsp + 0x20], rax
0x00002b89      498b0424       mov rax, qword [r12]
0x00002b8d      4889442418     mov qword [rsp + 0x18], rax
0x00002b92      4159           pop r9
0x00002b94      415a           pop r10
0x00002b96      4c8b542420     mov r10, qword [rsp + 0x20]
0x00002b9b      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00002ba0      eb86           jmp 0x2b28
0x00002ba2      660f1f440000   nop word [rax + rax]
0x00002ba8      488b442428     mov rax, qword [rsp + 0x28]
0x00002bad      488b5808       mov rbx, qword [rax + 8]
0x00002bb1      4885db         test rbx, rbx
0x00002bb4      7533           jne 0x2be9
0x00002bb6      e97d000000     jmp 0x2c38
0x00002bbb      0f1f440000     nop dword [rax + rax]
0x00002bc0      4157           push r15
0x00002bc2      4155           push r13
0x00002bc4      4c89d2         mov rdx, r10
0x00002bc7      4d89d0         mov r8, r10
0x00002bca      4c89d9         mov rcx, r11
0x00002bcd      4c89de         mov rsi, r11
0x00002bd0      4d89f1         mov r9, r14
0x00002bd3      4c89e7         mov rdi, r12
0x00002bd6      e885fdffff     call sym.mulredc2
0x00002bdb      48d1eb         shr rbx, 1
0x00002bde      4989c2         mov r10, rax                            ; /src:856
0x00002be1      4d8b1c24       mov r11, qword [r12]
0x00002be5      58             pop rax
0x00002be6      5a             pop rdx
0x00002be7      744f           je 0x2c38
0x00002be9      f6c301         test bl, 1
0x00002bec      74d2           je 0x2bc0
0x00002bee      4157           push r15
0x00002bf0      4155           push r13
0x00002bf2      4c89d9         mov rcx, r11
0x00002bf5      488b542420     mov rdx, qword [rsp + 0x20]
0x00002bfa      488b742418     mov rsi, qword [rsp + 0x18]
0x00002bff      4d89d0         mov r8, r10
0x00002c02      4d89f1         mov r9, r14
0x00002c05      4c89e7         mov rdi, r12
0x00002c08      4c89542430     mov qword [rsp + 0x30], r10
0x00002c0d      4c895c2428     mov qword [rsp + 0x28], r11
0x00002c12      e849fdffff     call sym.mulredc2
0x00002c17      4889442420     mov qword [rsp + 0x20], rax
0x00002c1c      498b0424       mov rax, qword [r12]
0x00002c20      4889442418     mov qword [rsp + 0x18], rax
0x00002c25      59             pop rcx
0x00002c26      5e             pop rsi
0x00002c27      4c8b542420     mov r10, qword [rsp + 0x20]             ; /src:887
0x00002c2c      4c8b5c2418     mov r11, qword [rsp + 0x18]
0x00002c31      eb8d           jmp 0x2bc0
0x00002c33      0f1f440000     nop dword [rax + rax]
0x00002c38      488b442408     mov rax, qword [rsp + 8]
0x00002c3d      49890424       mov qword [r12], rax
0x00002c41      488b442410     mov rax, qword [rsp + 0x10]
0x00002c46      4883c438       add rsp, 0x38                           ; /src:888
0x00002c4a      5b             pop rbx
0x00002c4b      5d             pop rbp                                 ; /src:890
0x00002c4c      415c           pop r12
0x00002c4e      415d           pop r13
0x00002c50      415e           pop r14
0x00002c52      415f           pop r15
0x00002c54      c3             ret
0x00002c55      90             nop
0x00002c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- millerrabin2:
0x00002c60      4157           push r15
0x00002c62      4156           push r14
0x00002c64      4989fe         mov r14, rdi
0x00002c67      4155           push r13
0x00002c69      4154           push r12
0x00002c6b      4989f5         mov r13, rsi                            ; /src:895
0x00002c6e      55             push rbp
0x00002c6f      53             push rbx
0x00002c70      4889d6         mov rsi, rdx
0x00002c73      4c89cb         mov rbx, r9
0x00002c76      4889ca         mov rdx, rcx
0x00002c79      4c89f1         mov rcx, r14
0x00002c7c      4883ec28       sub rsp, 0x28
0x00002c80      488d7c2410     lea rdi, [rsp + 0x10]
0x00002c85      4489442408     mov dword [rsp + 8], r8d
0x00002c8a      4d89e8         mov r8, r13
0x00002c8d      64488b042528.  mov rax, qword fs:[0x28]
0x00002c96      4889442418     mov qword [rsp + 0x18], rax
0x00002c9b      31c0           xor eax, eax
0x00002c9d      48893c24       mov qword [rsp], rdi
0x00002ca1      e83afeffff     call sym.powm2
0x00002ca6      488b0b         mov rcx, qword [rbx]
0x00002ca9      488b742410     mov rsi, qword [rsp + 0x10]
0x00002cae      488b7b08       mov rdi, qword [rbx + 8]
0x00002cb2      4839c1         cmp rcx, rax
0x00002cb5      0f8485000000   je 0x2d40
0x00002cbb      4d8b4e08       mov r9, qword [r14 + 8]
0x00002cbf      498b16         mov rdx, qword [r14]
0x00002cc2      4d89cc         mov r12, r9
0x00002cc5      4889d5         mov rbp, rdx                            ; /src:903
0x00002cc8      4829cd         sub rbp, rcx
0x00002ccb      4919fc         sbb r12, rdi
0x00002cce      4839e8         cmp rax, rbp                            ; /src:905
0x00002cd1      400f94c7       sete dil
0x00002cd5      4c39e6         cmp rsi, r12
0x00002cd8      0f94c1         sete cl
0x00002cdb      4020cf         and dil, cl
0x00002cde      40887c240f     mov byte [rsp + 0xf], dil
0x00002ce3      756b           jne 0x2d50
0x00002ce5      837c240801     cmp dword [rsp + 8], 1
0x00002cea      41bf01000000   mov r15d, 1
0x00002cf0      7718           ja 0x2d0a
0x00002cf2      eb61           jmp 0x2d55                              ; /src:909
0x00002cf4      0f1f4000       nop dword [rax]
0x00002cf8      4183c701       add r15d, 1
0x00002cfc      44397c2408     cmp dword [rsp + 8], r15d
0x00002d01      7452           je 0x2d55
0x00002d03      498b16         mov rdx, qword [r14]
0x00002d06      4d8b4e08       mov r9, qword [r14 + 8]
0x00002d0a      4155           push r13
0x00002d0c      52             push rdx
0x00002d0d      4889f1         mov rcx, rsi
0x00002d10      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d15      4889c2         mov rdx, rax
0x00002d18      4989c0         mov r8, rax
0x00002d1b      e840fcffff     call sym.mulredc2
0x00002d20      4839c5         cmp rbp, rax
0x00002d23      488b742420     mov rsi, qword [rsp + 0x20]
0x00002d28      5a             pop rdx
0x00002d29      59             pop rcx
0x00002d2a      7505           jne 0x2d31
0x00002d2c      4939f4         cmp r12, rsi                            ; /src:2171
0x00002d2f      741f           je 0x2d50
0x00002d31      483903         cmp qword [rbx], rax
0x00002d34      75c2           jne 0x2cf8
0x00002d36      48397308       cmp qword [rbx + 8], rsi
0x00002d3a      75bc           jne 0x2cf8
0x00002d3c      eb17           jmp 0x2d55                              ; /src:2173
0x00002d3e      6690           nop
0x00002d40      4839f7         cmp rdi, rsi
0x00002d43      0f8572ffffff   jne 0x2cbb
0x00002d49      0f1f80000000.  nop dword [rax]
0x00002d50      c644240f01     mov byte [rsp + 0xf], 1
0x00002d55      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002d5a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00002d63      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002d68      750f           jne 0x2d79
0x00002d6a      4883c428       add rsp, 0x28
0x00002d6e      5b             pop rbx
0x00002d6f      5d             pop rbp
0x00002d70      415c           pop r12
0x00002d72      415d           pop r13
0x00002d74      415e           pop r14
0x00002d76      415f           pop r15
0x00002d78      c3             ret
0x00002d79      e8a2f1ffff     call sym.imp.__stack_chk_fail
0x00002d7e      6690           nop
;-- lbuf_putint:
0x00002d80      55             push rbp
0x00002d81      53             push rbx
0x00002d82      4889f5         mov rbp, rsi
0x00002d85      4883ec28       sub rsp, 0x28
0x00002d89      4889e3         mov rbx, rsp
0x00002d8c      4889de         mov rsi, rbx
0x00002d8f      64488b042528.  mov rax, qword fs:[0x28]
0x00002d98      4889442418     mov qword [rsp + 0x18], rax
0x00002d9d      31c0           xor eax, eax
0x00002d9f      e8bc330000     call sym.umaxtostr                      ; /src:2181
0x00002da4      4829c3         sub rbx, rax
0x00002da7      4c8b054a0321.  mov r8, qword [0x002130f8]              ; [0x2130f8:8]=0
0x00002dae      4883c314       add rbx, 0x14
0x00002db2      4839eb         cmp rbx, rbp
0x00002db5      7329           jae 0x2de0
0x00002db7      4a8d4c0500     lea rcx, [rbp + r8]
0x00002dbc      4c89c2         mov rdx, r8
0x00002dbf      4829d9         sub rcx, rbx
0x00002dc2      660f1f440000   nop word [rax + rax]
0x00002dc8      c60230         mov byte [rdx], 0x30                    ; '0'
                                                                       ; [0x30:1]=0
0x00002dcb      4883c201       add rdx, 1
0x00002dcf      4839ca         cmp rdx, rcx
0x00002dd2      75f4           jne 0x2dc8                              ; /src:356
0x00002dd4      4829dd         sub rbp, rbx
0x00002dd7      4901e8         add r8, rbp
0x00002dda      660f1f440000   nop word [rax + rax]
0x00002de0      4c89c7         mov rdi, r8
0x00002de3      4889da         mov rdx, rbx
0x00002de6      4889c6         mov rsi, rax
0x00002de9      e8b2f2ffff     call sym.imp.memcpy
0x00002dee      4989c0         mov r8, rax
0x00002df1      4901d8         add r8, rbx
0x00002df4      488b442418     mov rax, qword [rsp + 0x18]
0x00002df9      644833042528.  xor rax, qword fs:[0x28]
0x00002e02      4c8905ef0221.  mov qword [0x002130f8], r8              ; [0x2130f8:8]=0
0x00002e09      7507           jne 0x2e12
0x00002e0b      4883c428       add rsp, 0x28
0x00002e0f      5b             pop rbx
0x00002e10      5d             pop rbp
0x00002e11      c3             ret
0x00002e12      e809f1ffff     call sym.imp.__stack_chk_fail
0x00002e17      660f1f840000.  nop word [rax + rax]
;-- mp_factor_insert:
0x00002e20      4157           push r15
0x00002e22      4156           push r14
0x00002e24      4155           push r13
0x00002e26      4154           push r12
0x00002e28      4989f4         mov r12, rsi
0x00002e2b      55             push rbp
0x00002e2c      53             push rbx
0x00002e2d      4883ec38       sub rsp, 0x38
0x00002e31      4c8b7f10       mov r15, qword [rdi + 0x10]
0x00002e35      488b17         mov rdx, qword [rdi]
0x00002e38      488b4708       mov rax, qword [rdi + 8]
0x00002e3c      48897c2410     mov qword [rsp + 0x10], rdi             ; /src:387
0x00002e41      498d6fff       lea rbp, [r15 - 1]
0x00002e45      4889542418     mov qword [rsp + 0x18], rdx
0x00002e4a      4889442408     mov qword [rsp + 8], rax
0x00002e4f      4885ed         test rbp, rbp
0x00002e52      0f8880010000   js 0x2fd8
0x00002e58      4c89f8         mov rax, r15
0x00002e5b      4989ed         mov r13, rbp
0x00002e5e      4989ee         mov r14, rbp
0x00002e61      48c1e004       shl rax, 4
0x00002e65      4889442420     mov qword [rsp + 0x20], rax
0x00002e6a      488d5c02f0     lea rbx, [rdx + rax - 0x10]
0x00002e6f      eb15           jmp 0x2e86
0x00002e71      0f1f80000000.  nop dword [rax]
0x00002e78      4983ee01       sub r14, 1
0x00002e7c      4883eb10       sub rbx, 0x10
0x00002e80      4983feff       cmp r14, 0xffffffffffffffff
0x00002e84      743a           je 0x2ec0
0x00002e86      4c89e6         mov rsi, r12
0x00002e89      4889df         mov rdi, rbx                            ; /src:372
0x00002e8c      4c89f5         mov rbp, r14                            ; /src:369
0x00002e8f      e82cf3ffff     call sym.imp.__gmpz_cmp
0x00002e94      83f800         cmp eax, 0                              ; /src:370
0x00002e97      7fdf           jg 0x2e78
0x00002e99      0f85e1000000   jne 0x2f80                              ; /src:372
0x00002e9f      488b442408     mov rax, qword [rsp + 8]
0x00002ea4      4a8304f001     add qword [rax + r14*8], 1
0x00002ea9      4883c438       add rsp, 0x38
0x00002ead      5b             pop rbx                                 ; /src:375
0x00002eae      5d             pop rbp
0x00002eaf      415c           pop r12
0x00002eb1      415d           pop r13
0x00002eb3      415e           pop r14
0x00002eb5      415f           pop r15
0x00002eb7      c3             ret
0x00002eb8      0f1f84000000.  nop dword [rax + rax]
0x00002ec0      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00002ec5      488b7c2418     mov rdi, qword [rsp + 0x18]             ; /src:373
0x00002eca      4983c701       add r15, 1
0x00002ece      4c897c2428     mov qword [rsp + 0x28], r15             ; /src:378
0x00002ed3      488d7310       lea rsi, [rbx + 0x10]
0x00002ed7      e8646e0000     call sym.xrealloc
0x00002edc      488b7c2408     mov rdi, qword [rsp + 8]
0x00002ee1      4889c5         mov rbp, rax
0x00002ee4      4a8d34fd0000.  lea rsi, [r15*8]
0x00002eec      4801eb         add rbx, rbp
0x00002eef      4889442418     mov qword [rsp + 0x18], rax
0x00002ef4      4c89f5         mov rbp, r14
0x00002ef7      e8446e0000     call sym.xrealloc
0x00002efc      4889df         mov rdi, rbx
0x00002eff      4989c7         mov r15, rax
0x00002f02      e869f3ffff     call sym.imp.__gmpz_init                ; /src:383
0x00002f07      4889df         mov rdi, rbx
0x00002f0a      660f1f440000   nop word [rax + rax]
0x00002f10      488d5ff0       lea rbx, [rdi - 0x10]
0x00002f14      4889de         mov rsi, rbx
0x00002f17      e864f0ffff     call sym.imp.__gmpz_set
0x00002f1c      4b8b04ef       mov rax, qword [r15 + r13*8]
0x00002f20      4889df         mov rdi, rbx
0x00002f23      4b8944ef08     mov qword [r15 + r13*8 + 8], rax
0x00002f28      4983ed01       sub r13, 1
0x00002f2c      4d39f5         cmp r13, r14
0x00002f2f      7fdf           jg 0x2f10
0x00002f31      488b5c2418     mov rbx, qword [rsp + 0x18]
0x00002f36      4883c501       add rbp, 1
0x00002f3a      4c89e6         mov rsi, r12
0x00002f3d      4889ef         mov rdi, rbp
0x00002f40      48c1e704       shl rdi, 4
0x00002f44      4801df         add rdi, rbx
0x00002f47      e834f0ffff     call sym.imp.__gmpz_set
0x00002f4c      488b442410     mov rax, qword [rsp + 0x10]
0x00002f51      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00002f56      49c704ef0100.  mov qword [r15 + rbp*8], 1
0x00002f5e      488918         mov qword [rax], rbx
0x00002f61      4c897808       mov qword [rax + 8], r15
0x00002f65      48894810       mov qword [rax + 0x10], rcx
0x00002f69      4883c438       add rsp, 0x38
0x00002f6d      5b             pop rbx
0x00002f6e      5d             pop rbp
0x00002f6f      415c           pop r12
0x00002f71      415d           pop r13
0x00002f73      415e           pop r14
0x00002f75      415f           pop r15                                 ; /src:369
0x00002f77      c3             ret
0x00002f78      0f1f84000000.  nop dword [rax + rax]
0x00002f80      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00002f85      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002f8a      4983c701       add r15, 1
0x00002f8e      4c897c2428     mov qword [rsp + 0x28], r15
0x00002f93      488d7310       lea rsi, [rbx + 0x10]
0x00002f97      e8a46d0000     call sym.xrealloc
0x00002f9c      488b7c2408     mov rdi, qword [rsp + 8]
0x00002fa1      4a8d34fd0000.  lea rsi, [r15*8]
0x00002fa9      4889442418     mov qword [rsp + 0x18], rax
0x00002fae      e88d6d0000     call sym.xrealloc
0x00002fb3      48035c2418     add rbx, qword [rsp + 0x18]
0x00002fb8      4989c7         mov r15, rax
0x00002fbb      4889df         mov rdi, rbx
0x00002fbe      e8adf2ffff     call sym.imp.__gmpz_init
0x00002fc3      4d39f5         cmp r13, r14
0x00002fc6      0f8f3bffffff   jg 0x2f07
0x00002fcc      e960ffffff     jmp 0x2f31
0x00002fd1      0f1f80000000.  nop dword [rax]
0x00002fd8      4983c701       add r15, 1
0x00002fdc      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00002fe1      4c89fb         mov rbx, r15
0x00002fe4      4c897c2428     mov qword [rsp + 0x28], r15             ; /src:2123
0x00002fe9      48c1e304       shl rbx, 4
0x00002fed      4889de         mov rsi, rbx
0x00002ff0      e84b6d0000     call sym.xrealloc
0x00002ff5      488b7c2408     mov rdi, qword [rsp + 8]
0x00002ffa      4a8d34fd0000.  lea rsi, [r15*8]
0x00003002      4989c6         mov r14, rax
0x00003005      4889442418     mov qword [rsp + 0x18], rax
0x0000300a      e8316d0000     call sym.xrealloc
0x0000300f      498d7c1ef0     lea rdi, [r14 + rbx - 0x10]
0x00003014      4989c7         mov r15, rax
0x00003017      e854f2ffff     call sym.imp.__gmpz_init
0x0000301c      e910ffffff     jmp 0x2f31
0x00003021      0f1f440000     nop dword [rax + rax]
0x00003026      662e0f1f8400.  nop word cs:[rax + rax]
;-- lbuf_flush:
0x00003030      53             push rbx
0x00003031      488b35b80021.  mov rsi, qword [obj.lbuf]               ; [0x2130f0:8]=0
0x00003038      bf01000000     mov edi, 1
0x0000303d      488b1db40021.  mov rbx, qword [0x002130f8]             ; /src:299 ; [0x2130f8:8]=0
0x00003044      4829f3         sub rbx, rsi
0x00003047      4889da         mov rdx, rbx
0x0000304a      e891300000     call sym.full_write
0x0000304f      4839d8         cmp rax, rbx                            ; /src:304
0x00003052      7510           jne 0x3064
0x00003054      488b05950021.  mov rax, qword [obj.lbuf]               ; [0x2130f0:8]=0
0x0000305b      5b             pop rbx
0x0000305c      488905950021.  mov qword [0x002130f8], rax             ; [0x2130f8:8]=0
0x00003063      c3             ret
0x00003064      488d35209d00.  lea rsi, str.write_error                ; 0xcd8b ; "write error"
0x0000306b      ba05000000     mov edx, 5
0x00003070      31ff           xor edi, edi
0x00003072      e869eeffff     call sym.imp.dcgettext
0x00003077      4889c3         mov rbx, rax
0x0000307a      e871edffff     call sym.imp.__errno_location
0x0000307f      8b30           mov esi, dword [rax]                    ; /src:299
0x00003081      488d1584cf00.  lea rdx, [0x0001000c]                   ; "%s"
0x00003088      4889d9         mov rcx, rbx
0x0000308b      bf01000000     mov edi, 1
0x00003090      31c0           xor eax, eax
0x00003092      e849f1ffff     call sym.imp.error
0x00003097      660f1f840000.  nop word [rax + rax]                    ; /src:222
;-- factor_insert_large:
0x000030a0      4885f6         test rsi, rsi
0x000030a3      4889d0         mov rax, rdx
0x000030a6      7418           je 0x30c0
0x000030a8      48837f0800     cmp qword [rdi + 8], 0
0x000030ad      751e           jne 0x30cd                              ; /src:229
0x000030af      488917         mov qword [rdi], rdx
0x000030b2      48897708       mov qword [rdi + 8], rsi
0x000030b6      c3             ret
0x000030b7      660f1f840000.  nop word [rax + rax]
0x000030c0      ba01000000     mov edx, 1
0x000030c5      4889c6         mov rsi, rax                            ; /src:233
0x000030c8      e933f6ffff     jmp sym.factor_insert_multiplicity
0x000030cd      488d0dcc9e00.  lea rcx, obj.__PRETTY_FUNCTION__.8594   ; /src:239 ; 0xcfa0 ; "factor_insert_large"
0x000030d4      488d356d9900.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x000030db      488d3db59c00.  lea rdi, str.factors__plarge_1_____0    ; 0xcd97 ; "factors->plarge[1] == 0"
0x000030e2      4883ec08       sub rsp, 8
0x000030e6      ba35020000     mov edx, 0x235
0x000030eb      e8f0eeffff     call sym.imp.__assert_fail
;-- gcd2_odd:
0x000030f0      41f6c001       test r8b, 1
0x000030f4      0f84d4000000   je 0x31ce
0x000030fa      4889d0         mov rax, rdx
0x000030fd      4989f1         mov r9, rsi
0x00003100      4809f0         or rax, rsi
0x00003103      751b           jne 0x3120
0x00003105      e9b6000000     jmp 0x31c0                              ; /src:251
0x0000310a      660f1f440000   nop word [rax + rax]
0x00003110      4c89c8         mov rax, r9
0x00003113      48d1ea         shr rdx, 1                              ; /src:235
0x00003116      49d1e9         shr r9, 1
0x00003119      48c1e03f       shl rax, 0x3f
0x0000311d      4809c2         or rdx, rax
0x00003120      f6c201         test dl, 1
0x00003123      74eb           je 0x3110
0x00003125      0f1f00         nop dword [rax]
0x00003128      4c89c8         mov rax, r9
0x0000312b      4809c8         or rax, rcx
0x0000312e      7446           je 0x3176
0x00003130      4939c9         cmp r9, rcx
0x00003133      775b           ja 0x3190
0x00003135      0f94c0         sete al
0x00003138      4c39c2         cmp rdx, r8
0x0000313b      7604           jbe 0x3141
0x0000313d      84c0           test al, al                             ; /src:243
0x0000313f      754f           jne 0x3190
0x00003141      4939c9         cmp r9, rcx
0x00003144      7209           jb 0x314f
0x00003146      4c39c2         cmp rdx, r8
0x00003149      737c           jae 0x31c7
0x0000314b      84c0           test al, al
0x0000314d      7478           je 0x31c7                               ; /src:244
0x0000314f      4929d0         sub r8, rdx
0x00003152      4c19c9         sbb rcx, r9
0x00003155      0f1f00         nop dword [rax]
0x00003158      4889c8         mov rax, rcx
0x0000315b      49d1e8         shr r8, 1
0x0000315e      48d1e9         shr rcx, 1
0x00003161      48c1e03f       shl rax, 0x3f
0x00003165      4909c0         or r8, rax
0x00003168      41f6c001       test r8b, 1
0x0000316c      74ea           je 0x3158
0x0000316e      4c89c8         mov rax, r9
0x00003171      4809c8         or rax, rcx
0x00003174      75ba           jne 0x3130
0x00003176      48c707000000.  mov qword [rdi], 0
0x0000317d      4889d6         mov rsi, rdx
0x00003180      4c89c7         mov rdi, r8                             ; /src:219
0x00003183      e918f5ffff     jmp sym.gcd_odd
0x00003188      0f1f84000000.  nop dword [rax + rax]
0x00003190      4c29c2         sub rdx, r8
0x00003193      4919c9         sbb r9, rcx
0x00003196      662e0f1f8400.  nop word cs:[rax + rax]
0x000031a0      4c89c8         mov rax, r9
0x000031a3      48d1ea         shr rdx, 1
0x000031a6      49d1e9         shr r9, 1                               ; /src:158
0x000031a9      48c1e03f       shl rax, 0x3f
0x000031ad      4809c2         or rdx, rax
0x000031b0      f6c201         test dl, 1
0x000031b3      74eb           je 0x31a0
0x000031b5      e96effffff     jmp 0x3128
0x000031ba      660f1f440000   nop word [rax + rax]                    ; /src:165
0x000031c0      48890f         mov qword [rdi], rcx                    ; /src:166
0x000031c3      4c89c0         mov rax, r8                             ; /src:167
0x000031c6      c3             ret
0x000031c7      4c890f         mov qword [rdi], r9
0x000031ca      4889d0         mov rax, rdx
0x000031cd      c3             ret
0x000031ce      488d0d939d00.  lea rcx, obj.__PRETTY_FUNCTION__.8563   ; 0xcf68 ; "gcd2_odd"
0x000031d5      488d356c9800.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x000031dc      488d3dcc9b00.  lea rdi, str.b0___1                     ; 0xcdaf ; "b0 & 1"
0x000031e3      4883ec08       sub rsp, 8
0x000031e7      bae3010000     mov edx, 0x1e3
0x000031ec      e8efedffff     call sym.imp.__assert_fail
0x000031f1      0f1f440000     nop dword [rax + rax]
0x000031f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mod2:
0x00003200      4885c9         test rcx, rcx
0x00003203      0f847f000000   je 0x3288
0x00003209      4885f6         test rsi, rsi
0x0000320c      4889d0         mov rax, rdx
0x0000320f      746f           je 0x3280
0x00003211      4c0fbdd1       bsr r10, rcx
0x00003215      480fbdd6       bsr rdx, rsi
0x00003219      4183f23f       xor r10d, 0x3f
0x0000321d      83f23f         xor edx, 0x3f                           ; /src:160
0x00003220      4d89c1         mov r9, r8
0x00003223      4129d2         sub r10d, edx
0x00003226      4889ca         mov rdx, rcx
0x00003229      4489d1         mov ecx, r10d
0x0000322c      48d3e2         shl rdx, cl
0x0000322f      b940000000     mov ecx, 0x40                           ; segment.PHDR
0x00003234      4429d1         sub ecx, r10d
0x00003237      49d3e9         shr r9, cl
0x0000323a      4489d1         mov ecx, r10d                           ; /src:153
0x0000323d      4909d1         or r9, rdx
0x00003240      49d3e0         shl r8, cl
0x00003243      4585d2         test r10d, r10d
0x00003246      7e32           jle 0x327a
0x00003248      31d2           xor edx, edx
0x0000324a      660f1f440000   nop word [rax + rax]
0x00003250      4939f1         cmp r9, rsi                             ; /src:2186
0x00003253      7207           jb 0x325c                               ; /src:2189
0x00003255      750b           jne 0x3262                              ; /src:2190
0x00003257      4c39c0         cmp rax, r8
0x0000325a      7206           jb 0x3262
0x0000325c      4c29c0         sub rax, r8
0x0000325f      4c19ce         sbb rsi, r9
0x00003262      4c89c9         mov rcx, r9
0x00003265      49d1e8         shr r8, 1                               ; /src:2195
0x00003268      83c201         add edx, 1
0x0000326b      48c1e13f       shl rcx, 0x3f
0x0000326f      49d1e9         shr r9, 1
0x00003272      4909c8         or r8, rcx                              ; /src:2186
0x00003275      4139d2         cmp r10d, edx
0x00003278      75d6           jne 0x3250
0x0000327a      488937         mov qword [rdi], rsi                    ; /src:2196
0x0000327d      c3             ret
0x0000327e      6690           nop
0x00003280      48c707000000.  mov qword [rdi], 0                      ; /src:2197
0x00003287      c3             ret
0x00003288      488d0dd19c00.  lea rcx, obj.__PRETTY_FUNCTION__.8537   ; 0xcf60 ; "mod2"
0x0000328f      488d35b29700.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x00003296      488d3d199b00.  lea rdi, str.d1____0                    ; 0xcdb6 ; "d1 != 0"
0x0000329d      4883ec08       sub rsp, 8
0x000032a1      baa3010000     mov edx, 0x1a3
0x000032a6      e835edffff     call sym.imp.__assert_fail
0x000032ab      0f1f440000     nop dword [rax + rax]
;-- print_uintmaxes:
0x000032b0      4885ff         test rdi, rdi
0x000032b3      4989f0         mov r8, rsi
0x000032b6      7510           jne 0x32c8
0x000032b8      31f6           xor esi, esi
0x000032ba      4c89c7         mov rdi, r8
0x000032bd      e9befaffff     jmp sym.lbuf_putint
0x000032c2      660f1f440000   nop word [rax + rax]
0x000032c8      4889fa         mov rdx, rdi
0x000032cb      48b9535a9ba0.  movabs rcx, 0x44b82fa09b5a53
0x000032d5      4883ec18       sub rsp, 0x18
0x000032d9      48c1ea09       shr rdx, 9                              ; /src:2199
0x000032dd      41b940000000   mov r9d, 0x40                           ; segment.PHDR
0x000032e3      31f6           xor esi, esi                            ; /src:2201
0x000032e5      4889d0         mov rax, rdx
0x000032e8      48f7e1         mul rcx
0x000032eb      b900ca9a3b     mov ecx, 0x3b9aca00
0x000032f0      48c1ea0b       shr rdx, 0xb
0x000032f4      4869c200ca9a.  imul rax, rdx, 0x3b9aca00
0x000032fb      4829c7         sub rdi, rax
0x000032fe      31c0           xor eax, eax
0x00003300      4989ca         mov r10, rcx
0x00003303      48d1e8         shr rax, 1                              ; /src:2134
0x00003306      48d1e9         shr rcx, 1
0x00003309      49c1e23f       shl r10, 0x3f
0x0000330d      4801f6         add rsi, rsi
0x00003310      4c09d0         or rax, r10
0x00003313      4839f9         cmp rcx, rdi
0x00003316      7207           jb 0x331f
0x00003318      750f           jne 0x3329
0x0000331a      4c39c0         cmp rax, r8
0x0000331d      770a           ja 0x3329
0x0000331f      4883c601       add rsi, 1
0x00003323      4929c0         sub r8, rax
0x00003326      4819cf         sbb rdi, rcx
0x00003329      4183e901       sub r9d, 1
0x0000332d      75d1           jne 0x3300                              ; /src:2142
0x0000332f      4889d7         mov rdi, rdx
0x00003332      4c89442408     mov qword [rsp + 8], r8
0x00003337      e874ffffff     call sym.print_uintmaxes
0x0000333c      4c8b442408     mov r8, qword [rsp + 8]
0x00003341      be09000000     mov esi, 9
0x00003346      4883c418       add rsp, 0x18
0x0000334a      4c89c7         mov rdi, r8
0x0000334d      e92efaffff     jmp sym.lbuf_putint
0x00003352      0f1f4000       nop dword [rax]
0x00003356      662e0f1f8400.  nop word cs:[rax + rax]
;-- lbuf_putc:
0x00003360      55             push rbp
0x00003361      53             push rbx
0x00003362      4883ec08       sub rsp, 8
0x00003366      488b058bfd20.  mov rax, qword [0x002130f8]             ; [0x2130f8:8]=0
0x0000336d      4080ff0a       cmp dil, 0xa
0x00003371      488d6801       lea rbp, [rax + 1]
0x00003375      408838         mov byte [rax], dil
0x00003378      48892d79fd20.  mov qword [0x002130f8], rbp             ; [0x2130f8:8]=0
0x0000337f      740f           je 0x3390
0x00003381      4883c408       add rsp, 8                              ; /src:2162
0x00003385      5b             pop rbx
0x00003386      5d             pop rbp
0x00003387      c3             ret
0x00003388      0f1f84000000.  nop dword [rax + rax]                   ; .//coreutils-8.31/lib:-229
0x00003390      8b057afc2000   mov eax, dword [obj.line_buffered.9118] ; [0x213010:4]=-1
0x00003396      488b1d53fd20.  mov rbx, qword [obj.lbuf]               ; /src:2163 ; [0x2130f0:8]=0
0x0000339d      83f8ff         cmp eax, 0xffffffff
0x000033a0      747e           je 0x3420                               ; /src:2166
0x000033a2      85c0           test eax, eax
0x000033a4      756a           jne 0x3410
0x000033a6      4889e8         mov rax, rbp
0x000033a9      4829d8         sub rax, rbx
0x000033ac      4881c3000200.  add rbx, 0x200
0x000033b3      483dff010000   cmp rax, 0x1ff                          ; /src:2145
0x000033b9      76c6           jbe 0x3381
0x000033bb      807bff0a       cmp byte [rbx - 1], 0xa
0x000033bf      488d43ff       lea rax, [rbx - 1]
0x000033c3      7410           je 0x33d5
0x000033c5      0f1f00         nop dword [rax]
0x000033c8      4889c3         mov rbx, rax
0x000033cb      807bff0a       cmp byte [rbx - 1], 0xa
0x000033cf      488d43ff       lea rax, [rbx - 1]
0x000033d3      75f3           jne 0x33c8
0x000033d5      48891d1cfd20.  mov qword [0x002130f8], rbx             ; [0x2130f8:8]=0
0x000033dc      4829dd         sub rbp, rbx
0x000033df      e84cfcffff     call sym.lbuf_flush
0x000033e4      488b0d05fd20.  mov rcx, qword [obj.lbuf]               ; [0x2130f0:8]=0
0x000033eb      4889ea         mov rdx, rbp                            ; /src:915
0x000033ee      4889de         mov rsi, rbx                            ; /src:916
0x000033f1      4889cf         mov rdi, rcx
0x000033f4      e8a7ecffff     call sym.imp.memcpy                     ; /src:915
0x000033f9      4801c5         add rbp, rax
0x000033fc      48892df5fc20.  mov qword [0x002130f8], rbp             ; [0x2130f8:8]=0
0x00003403      4883c408       add rsp, 8
0x00003407      5b             pop rbx
0x00003408      5d             pop rbp
0x00003409      c3             ret
0x0000340a      660f1f440000   nop word [rax + rax]
0x00003410      4883c408       add rsp, 8
0x00003414      5b             pop rbx
0x00003415      5d             pop rbp
0x00003416      e915fcffff     jmp sym.lbuf_flush
0x0000341b      0f1f440000     nop dword [rax + rax]
0x00003420      31ff           xor edi, edi
0x00003422      e839eaffff     call sym.imp.isatty                     ; /src:921
0x00003427      8905e3fb2000   mov dword [obj.line_buffered.9118], eax ; [0x213010:4]=-1
0x0000342d      e970ffffff     jmp 0x33a2
0x00003432      0f1f4000       nop dword [rax]
0x00003436      662e0f1f8400.  nop word cs:[rax + rax]
;-- mp_millerrabin:
0x00003440      4156           push r14
0x00003442      4155           push r13
0x00003444      4989f5         mov r13, rsi
0x00003447      4154           push r12
0x00003449      55             push rbp
0x0000344a      4889d6         mov rsi, rdx
0x0000344d      53             push rbx
0x0000344e      4889cb         mov rbx, rcx
0x00003451      4c89c2         mov rdx, r8
0x00003454      4889f9         mov rcx, rdi
0x00003457      4989fc         mov r12, rdi
0x0000345a      4889df         mov rdi, rbx
0x0000345d      4d89ce         mov r14, r9
0x00003460      e8abeaffff     call sym.imp.__gmpz_powm
0x00003465      be01000000     mov esi, 1
0x0000346a      4889df         mov rdi, rbx
0x0000346d      e8eeedffff     call sym.imp.__gmpz_cmp_ui
0x00003472      85c0           test eax, eax                           ; /src:919
0x00003474      745e           je 0x34d4
0x00003476      4c89ee         mov rsi, r13
0x00003479      4889df         mov rdi, rbx
0x0000347c      e83fedffff     call sym.imp.__gmpz_cmp
0x00003481      85c0           test eax, eax
0x00003483      744f           je 0x34d4
0x00003485      4983fe01       cmp r14, 1
0x00003489      bd01000000     mov ebp, 1
0x0000348e      7722           ja 0x34b2
0x00003490      eb56           jmp 0x34e8
0x00003492      660f1f440000   nop word [rax + rax]
0x00003498      be01000000     mov esi, 1
0x0000349d      4889df         mov rdi, rbx                            ; /src:1996
0x000034a0      e8bbedffff     call sym.imp.__gmpz_cmp_ui
0x000034a5      85c0           test eax, eax
0x000034a7      743f           je 0x34e8
0x000034a9      4883c501       add rbp, 1
0x000034ad      4939ee         cmp r14, rbp
0x000034b0      7436           je 0x34e8
0x000034b2      4c89e1         mov rcx, r12                            ; /src:338
0x000034b5      ba02000000     mov edx, 2
0x000034ba      4889de         mov rsi, rbx                            ; /src:1996
0x000034bd      4889df         mov rdi, rbx
0x000034c0      e8cbedffff     call sym.imp.__gmpz_powm_ui
0x000034c5      4c89ee         mov rsi, r13
0x000034c8      4889df         mov rdi, rbx
0x000034cb      e8f0ecffff     call sym.imp.__gmpz_cmp
0x000034d0      85c0           test eax, eax
0x000034d2      75c4           jne 0x3498
0x000034d4      5b             pop rbx
0x000034d5      b801000000     mov eax, 1                              ; /src:1999
0x000034da      5d             pop rbp
0x000034db      415c           pop r12
0x000034dd      415d           pop r13
0x000034df      415e           pop r14
0x000034e1      c3             ret
0x000034e2      660f1f440000   nop word [rax + rax]
0x000034e8      5b             pop rbx
0x000034e9      31c0           xor eax, eax
0x000034eb      5d             pop rbp
0x000034ec      415c           pop r12
0x000034ee      415d           pop r13
0x000034f0      415e           pop r14
0x000034f2      c3             ret
0x000034f3      0f1f00         nop dword [rax]
0x000034f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mp_factor:
0x00003500      4157           push r15
0x00003502      4156           push r14
0x00003504      4155           push r13
0x00003506      4154           push r12
0x00003508      55             push rbp
0x00003509      53             push rbx
0x0000350a      4883ec48       sub rsp, 0x48
0x0000350e      48c706000000.  mov qword [rsi], 0
0x00003515      48c746080000.  mov qword [rsi + 8], 0
0x0000351d      64488b042528.  mov rax, qword fs:[0x28]
0x00003526      4889442438     mov qword [rsp + 0x38], rax
0x0000352b      31c0           xor eax, eax
0x0000352d      8b4704         mov eax, dword [rdi + 4]
0x00003530      48c746100000.  mov qword [rsi + 0x10], 0
0x00003538      85c0           test eax, eax
0x0000353a      7524           jne 0x3560                              ; /src:588
0x0000353c      488b442438     mov rax, qword [rsp + 0x38]
0x00003541      644833042528.  xor rax, qword fs:[0x28]
0x0000354a      0f85c2010000   jne 0x3712
0x00003550      4883c448       add rsp, 0x48
0x00003554      5b             pop rbx
0x00003555      5d             pop rbp
0x00003556      415c           pop r12
0x00003558      415d           pop r13
0x0000355a      415e           pop r14                                 ; /src:397
0x0000355c      415f           pop r15
0x0000355e      c3             ret
0x0000355f      90             nop
0x00003560      803d99fb2000.  cmp byte [obj.dev_debug], 0             ; [0x213100:1]=0
0x00003567      4989fc         mov r12, rdi
0x0000356a      4989f5         mov r13, rsi
0x0000356d      0f853d010000   jne 0x36b0                              ; /src:588
0x00003573      488d7c2410     lea rdi, [rsp + 0x10]                   ; /src:595
0x00003578      48897c2408     mov qword [rsp + 8], rdi                ; /src:594
0x0000357d      e8eeecffff     call sym.imp.__gmpz_init                ; /src:396
0x00003582      31f6           xor esi, esi
0x00003584      4c89e7         mov rdi, r12
0x00003587      e834e8ffff     call sym.imp.__gmpz_scan1
0x0000358c      4c89e6         mov rsi, r12
0x0000358f      4889c3         mov rbx, rax
0x00003592      4889c2         mov rdx, rax
0x00003595      4c89e7         mov rdi, r12
0x00003598      e873eaffff     call sym.imp.__gmpz_fdiv_q_2exp
0x0000359d      4885db         test rbx, rbx
0x000035a0      7434           je 0x35d6
0x000035a2      488d6c2420     lea rbp, [rsp + 0x20]                   ; /src:600
0x000035a7      660f1f840000.  nop word [rax + rax]
0x000035b0      be02000000     mov esi, 2
0x000035b5      4889ef         mov rdi, rbp                            ; /src:595
0x000035b8      e8f3ebffff     call sym.imp.__gmpz_init_set_ui
0x000035bd      4889ee         mov rsi, rbp                            ; /src:597
0x000035c0      4c89ef         mov rdi, r13
0x000035c3      e858f8ffff     call sym.mp_factor_insert
0x000035c8      4889ef         mov rdi, rbp
0x000035cb      e840ebffff     call sym.imp.__gmpz_clear
0x000035d0      4883eb01       sub rbx, 1
0x000035d4      75da           jne 0x35b0
0x000035d6      bd01000000     mov ebp, 1
0x000035db      bb03000000     mov ebx, 3
0x000035e0      4c8d7c2420     lea r15, [rsp + 0x20]
0x000035e5      eb39           jmp 0x3620                              ; /src:397
0x000035e7      660f1f840000.  nop word [rax + rax]
0x000035f0      488d0569c700.  lea rax, obj.primes_diff                ; /src:398 ; 0xfd60
0x000035f7      4c89e7         mov rdi, r12
0x000035fa      448d7501       lea r14d, [rbp + 1]
0x000035fe      0fb60428       movzx eax, byte [rax + rbp]
0x00003602      4801c3         add rbx, rax
0x00003605      4889de         mov rsi, rbx
0x00003608      480faff3       imul rsi, rbx
0x0000360c      e84fecffff     call sym.imp.__gmpz_cmp_ui
0x00003611      85c0           test eax, eax
0x00003613      784e           js 0x3663
0x00003615      4489f5         mov ebp, r14d
0x00003618      81fd9d020000   cmp ebp, 0x29d
0x0000361e      7443           je 0x3663
0x00003620      4889de         mov rsi, rbx
0x00003623      4c89e7         mov rdi, r12
0x00003626      e895eaffff     call sym.imp.__gmpz_divisible_ui_p
0x0000362b      85c0           test eax, eax
0x0000362d      74c1           je 0x35f0
0x0000362f      4889da         mov rdx, rbx
0x00003632      4c89e6         mov rsi, r12
0x00003635      4c89e7         mov rdi, r12
0x00003638      e883e9ffff     call sym.imp.__gmpz_tdiv_q_ui
0x0000363d      4889de         mov rsi, rbx
0x00003640      4c89ff         mov rdi, r15
0x00003643      e868ebffff     call sym.imp.__gmpz_init_set_ui
0x00003648      4c89fe         mov rsi, r15
0x0000364b      4c89ef         mov rdi, r13
0x0000364e      e8cdf7ffff     call sym.mp_factor_insert
0x00003653      4c89ff         mov rdi, r15
0x00003656      e8b5eaffff     call sym.imp.__gmpz_clear
0x0000365b      81fd9d020000   cmp ebp, 0x29d
0x00003661      75bd           jne 0x3620
0x00003663      488b7c2408     mov rdi, qword [rsp + 8]
0x00003668      e8a3eaffff     call sym.imp.__gmpz_clear
0x0000366d      be01000000     mov esi, 1
0x00003672      4c89e7         mov rdi, r12
0x00003675      e8e6ebffff     call sym.imp.__gmpz_cmp_ui              ; /src:2007
0x0000367a      85c0           test eax, eax
0x0000367c      0f84bafeffff   je 0x353c
0x00003682      803d77fa2000.  cmp byte [obj.dev_debug], 0             ; [0x213100:1]=0
0x00003689      7565           jne 0x36f0
0x0000368b      4c89e7         mov rdi, r12
0x0000368e      e88d000000     call sym.mp_prime_p
0x00003693      84c0           test al, al
0x00003695      7541           jne 0x36d8
0x00003697      4c89ea         mov rdx, r13
0x0000369a      be01000000     mov esi, 1
0x0000369f      4c89e7         mov rdi, r12
0x000036a2      e8c9020000     call sym.mp_factor_using_pollard_rho
0x000036a7      e990feffff     jmp 0x353c
0x000036ac      0f1f4000       nop dword [rax]
0x000036b0      488b0d29fa20.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x000036b7      488d3d009700.  lea rdi, str.trial_division             ; 0xcdbe ; "[trial division] "
0x000036be      ba11000000     mov edx, 0x11
0x000036c3      be01000000     mov esi, 1
0x000036c8      e873ebffff     call sym.imp.fwrite
0x000036cd      e9a1feffff     jmp 0x3573
0x000036d2      660f1f440000   nop word [rax + rax]
0x000036d8      4c89e6         mov rsi, r12
0x000036db      4c89ef         mov rdi, r13
0x000036de      e83df7ffff     call sym.mp_factor_insert
0x000036e3      e954feffff     jmp 0x353c
0x000036e8      0f1f84000000.  nop dword [rax + rax]
0x000036f0      488b0de9f920.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x000036f7      488d3dd29600.  lea rdi, str.is_number_prime            ; 0xcdd0 ; "[is number prime?] "
0x000036fe      ba13000000     mov edx, 0x13
0x00003703      be01000000     mov esi, 1
0x00003708      e833ebffff     call sym.imp.fwrite
0x0000370d      e979ffffff     jmp 0x368b
0x00003712      e809e8ffff     call sym.imp.__stack_chk_fail
0x00003717      660f1f840000.  nop word [rax + rax]
;-- mp_prime_p:
0x00003720      4157           push r15
0x00003722      4156           push r14
0x00003724      be01000000     mov esi, 1
0x00003729      4155           push r13
0x0000372b      4154           push r12
0x0000372d      4989fc         mov r12, rdi
0x00003730      55             push rbp
0x00003731      53             push rbx
0x00003732      4881ec980000.  sub rsp, 0x98
0x00003739      64488b042528.  mov rax, qword fs:[0x28]                ; /src:1135
0x00003742      488984248800.  mov qword [rsp + 0x88], rax
0x0000374a      31c0           xor eax, eax
0x0000374c      e80febffff     call sym.imp.__gmpz_cmp_ui
0x00003751      85c0           test eax, eax
0x00003753      0f8eff010000   jle 0x3958                              ; /src:1139
0x00003759      be79ed7d01     mov esi, 0x17ded79
0x0000375e      4c89e7         mov rdi, r12
0x00003761      e8faeaffff     call sym.imp.__gmpz_cmp_ui
0x00003766      85c0           test eax, eax
0x00003768      0f8882010000   js 0x38f0
0x0000376e      4c8d6c2460     lea r13, [rsp + 0x60]
0x00003773      4c8d742440     lea r14, [rsp + 0x40]
0x00003778      488d6c2450     lea rbp, [rsp + 0x50]
0x0000377d      488d5c2470     lea rbx, [rsp + 0x70]
0x00003782      4531c0         xor r8d, r8d
0x00003785      31c0           xor eax, eax
0x00003787      4c89ea         mov rdx, r13
0x0000378a      4889ee         mov rsi, rbp
0x0000378d      4c89f7         mov rdi, r14
0x00003790      4889d9         mov rcx, rbx
0x00003793      4c893424       mov qword [rsp], r14
0x00003797      e8c4e7ffff     call sym.imp.__gmpz_inits
0x0000379c      ba01000000     mov edx, 1
0x000037a1      4c89e6         mov rsi, r12
0x000037a4      4c89ef         mov rdi, r13
0x000037a7      e894e6ffff     call sym.imp.__gmpz_sub_ui
0x000037ac      31f6           xor esi, esi
0x000037ae      4c89ef         mov rdi, r13
0x000037b1      e80ae6ffff     call sym.imp.__gmpz_scan1
0x000037b6      4c89ee         mov rsi, r13
0x000037b9      4889c2         mov rdx, rax
0x000037bc      4c89f7         mov rdi, r14
0x000037bf      4989c7         mov r15, rax
0x000037c2      4889442408     mov qword [rsp + 8], rax
0x000037c7      e864e9ffff     call sym.imp.__gmpz_tdiv_q_2exp
0x000037cc      be02000000     mov esi, 2                              ; /src:1166
0x000037d1      4889ef         mov rdi, rbp
0x000037d4      e897e6ffff     call sym.imp.__gmpz_set_ui
0x000037d9      4d89f9         mov r9, r15
0x000037dc      4d89f0         mov r8, r14
0x000037df      4889d9         mov rcx, rbx
0x000037e2      4889ea         mov rdx, rbp
0x000037e5      4c89ee         mov rsi, r13
0x000037e8      4c89e7         mov rdi, r12
0x000037eb      e850fcffff     call sym.mp_millerrabin
0x000037f0      84c0           test al, al
0x000037f2      88442417       mov byte [rsp + 0x17], al
0x000037f6      0f843e010000   je 0x393a
0x000037fc      4c89ee         mov rsi, r13
0x000037ff      4889df         mov rdi, rbx
0x00003802      4c8d3557c500.  lea r14, obj.primes_diff                ; 0xfd60
0x00003809      e872e7ffff     call sym.imp.__gmpz_set
0x0000380e      488d742420     lea rsi, [rsp + 0x20]
0x00003813      4889df         mov rdi, rbx
0x00003816      4889742418     mov qword [rsp + 0x18], rsi
0x0000381b      e8e0fcffff     call sym.mp_factor
0x00003820      48837c243000   cmp qword [rsp + 0x30], 0
0x00003826      0f8404010000   je 0x3930
0x0000382c      4531ff         xor r15d, r15d                          ; /src:1182
0x0000382f      4c89fa         mov rdx, r15
0x00003832      4c89ee         mov rsi, r13
0x00003835      4889df         mov rdi, rbx
0x00003838      48c1e204       shl rdx, 4
0x0000383c      4803542420     add rdx, qword [rsp + 0x20]
0x00003841      4983c701       add r15, 1
0x00003845      e8f6e6ffff     call sym.imp.__gmpz_divexact
0x0000384a      4c89e1         mov rcx, r12
0x0000384d      4889da         mov rdx, rbx
0x00003850      4889ee         mov rsi, rbp
0x00003853      4889df         mov rdi, rbx
0x00003856      e8b5e6ffff     call sym.imp.__gmpz_powm
0x0000385b      be01000000     mov esi, 1
0x00003860      4889df         mov rdi, rbx
0x00003863      e8f8e9ffff     call sym.imp.__gmpz_cmp_ui
0x00003868      4c3b7c2430     cmp r15, qword [rsp + 0x30]
0x0000386d      0f83ad000000   jae 0x3920
0x00003873      85c0           test eax, eax
0x00003875      75b8           jne 0x382f
0x00003877      660f1f840000.  nop word [rax + rax]
0x00003880      410fb616       movzx edx, byte [r14]
0x00003884      4889ee         mov rsi, rbp
0x00003887      4889ef         mov rdi, rbp
0x0000388a      e801e8ffff     call sym.imp.__gmpz_add_ui
0x0000388f      4c8b4c2408     mov r9, qword [rsp + 8]
0x00003894      4c8b0424       mov r8, qword [rsp]
0x00003898      4889d9         mov rcx, rbx
0x0000389b      4889ea         mov rdx, rbp
0x0000389e      4c89ee         mov rsi, r13
0x000038a1      4c89e7         mov rdi, r12
0x000038a4      e897fbffff     call sym.mp_millerrabin
0x000038a9      84c0           test al, al
0x000038ab      0f84af000000   je 0x3960
0x000038b1      488d0544c700.  lea rax, [0x0000fffc]
0x000038b8      4983c601       add r14, 1
0x000038bc      4939c6         cmp r14, rax
0x000038bf      0f855bffffff   jne 0x3820
0x000038c5      488d35fc9100.  lea rsi, str.Lucas_prime_test_failure.__This_should_not_happen ; 0xcac8 ; "Lucas prime test failure.  This should not happen"
0x000038cc      ba05000000     mov edx, 5
0x000038d1      31ff           xor edi, edi
0x000038d3      e808e6ffff     call sym.imp.dcgettext
0x000038d8      31f6           xor esi, esi
0x000038da      4889c2         mov rdx, rax
0x000038dd      31ff           xor edi, edi
0x000038df      31c0           xor eax, eax
0x000038e1      e8fae8ffff     call sym.imp.error
0x000038e6      e8f5e4ffff     call sym.imp.abort
0x000038eb      0f1f440000     nop dword [rax + rax]
0x000038f0      c644241701     mov byte [rsp + 0x17], 1
0x000038f5      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x000038fd      6448330c2528.  xor rcx, qword fs:[0x28]
0x00003906      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000390b      755a           jne 0x3967
0x0000390d      4881c4980000.  add rsp, 0x98
0x00003914      5b             pop rbx
0x00003915      5d             pop rbp
0x00003916      415c           pop r12
0x00003918      415d           pop r13
0x0000391a      415e           pop r14
0x0000391c      415f           pop r15
0x0000391e      c3             ret
0x0000391f      90             nop
0x00003920      85c0           test eax, eax
0x00003922      0f8458ffffff   je 0x3880
0x00003928      0f1f84000000.  nop dword [rax + rax]
0x00003930      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003935      e8d6efffff     call sym.mp_factor_clear
0x0000393a      488b3c24       mov rdi, qword [rsp]
0x0000393e      4531c0         xor r8d, r8d
0x00003941      4889d9         mov rcx, rbx
0x00003944      4c89ea         mov rdx, r13
0x00003947      4889ee         mov rsi, rbp
0x0000394a      31c0           xor eax, eax
0x0000394c      e8ffe4ffff     call sym.imp.__gmpz_clears
0x00003951      eba2           jmp 0x38f5
0x00003953      0f1f440000     nop dword [rax + rax]
0x00003958      c644241700     mov byte [rsp + 0x17], 0
0x0000395d      eb96           jmp 0x38f5
0x0000395f      90             nop
0x00003960      c644241700     mov byte [rsp + 0x17], 0
0x00003965      ebc9           jmp 0x3930
0x00003967      e8b4e5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/src/ctor.c:1088
0x0000396c      0f1f4000       nop dword [rax]
;-- mp_factor_using_pollard_rho:
0x00003970      4157           push r15
0x00003972      4156           push r14
0x00003974      4155           push r13
0x00003976      4154           push r12
0x00003978      4989fd         mov r13, rdi
0x0000397b      55             push rbp
0x0000397c      53             push rbx
0x0000397d      4881ecc80000.  sub rsp, 0xc8
0x00003984      64488b042528.  mov rax, qword fs:[0x28]
0x0000398d      48898424b800.  mov qword [rsp + 0xb8], rax
0x00003995      31c0           xor eax, eax
0x00003997      803d62f72000.  cmp byte [obj.dev_debug], 0             ; [0x213100:1]=0
0x0000399e      4889742410     mov qword [rsp + 0x10], rsi
0x000039a3      4889542440     mov qword [rsp + 0x40], rdx
0x000039a8      0f8592030000   jne 0x3d40
0x000039ae      4c8dbc24a000.  lea r15, [rsp + 0xa0]
0x000039b6      488dac249000.  lea rbp, [rsp + 0x90]
0x000039be      31d2           xor edx, edx                            ; ../coreutils-8.31/src/ctor.c:1101
0x000039c0      31c0           xor eax, eax
0x000039c2      488d5c2450     lea rbx, [rsp + 0x50]
0x000039c7      4c8db4248000.  lea r14, [rsp + 0x80]
0x000039cf      4c89fe         mov rsi, r15
0x000039d2      4889ef         mov rdi, rbp
0x000039d5      41bc01000000   mov r12d, 1
0x000039db      e880e5ffff     call sym.imp.__gmpz_inits
0x000039e0      488d442470     lea rax, [rsp + 0x70]
0x000039e5      be02000000     mov esi, 2                              ; ../coreutils-8.31/src/ctor.c:1111
0x000039ea      4889c7         mov rdi, rax
0x000039ed      4889442418     mov qword [rsp + 0x18], rax
0x000039f2      e889e6ffff     call sym.imp.__gmpz_init_set_si
0x000039f7      be02000000     mov esi, 2
0x000039fc      4889df         mov rdi, rbx
0x000039ff      e87ce6ffff     call sym.imp.__gmpz_init_set_si
0x00003a04      488d442460     lea rax, [rsp + 0x60]
0x00003a09      be02000000     mov esi, 2
0x00003a0e      4889c7         mov rdi, rax
0x00003a11      4889442408     mov qword [rsp + 8], rax
0x00003a16      e865e6ffff     call sym.imp.__gmpz_init_set_si
0x00003a1b      be01000000     mov esi, 1
0x00003a20      4c89f7         mov rdi, r14
0x00003a23      e888e7ffff     call sym.imp.__gmpz_init_set_ui
0x00003a28      488b442410     mov rax, qword [rsp + 0x10]
0x00003a2d      48c744242001.  mov qword [rsp + 0x20], 1
0x00003a36      4883c001       add rax, 1                              ; ../coreutils-8.31/src/ctor.c:1106
0x00003a3a      4889442448     mov qword [rsp + 0x48], rax
0x00003a3f      be01000000     mov esi, 1
0x00003a44      4c89ef         mov rdi, r13
0x00003a47      e814e8ffff     call sym.imp.__gmpz_cmp_ui
0x00003a4c      85c0           test eax, eax
0x00003a4e      7512           jne 0x3a62
0x00003a50      e97f020000     jmp 0x3cd4
0x00003a55      0f1f00         nop dword [rax]
0x00003a58      4983ec01       sub r12, 1
0x00003a5c      0f849e000000   je 0x3b00
0x00003a62      4889da         mov rdx, rbx
0x00003a65      4889de         mov rsi, rbx
0x00003a68      4889ef         mov rdi, rbp
0x00003a6b      e820e5ffff     call sym.imp.__gmpz_mul
0x00003a70      4c89ea         mov rdx, r13
0x00003a73      4889ee         mov rsi, rbp
0x00003a76      4889df         mov rdi, rbx
0x00003a79      e812e7ffff     call sym.imp.__gmpz_mod
0x00003a7e      488b542410     mov rdx, qword [rsp + 0x10]
0x00003a83      4889de         mov rsi, rbx
0x00003a86      4889df         mov rdi, rbx
0x00003a89      e802e6ffff     call sym.imp.__gmpz_add_ui
0x00003a8e      488b742408     mov rsi, qword [rsp + 8]
0x00003a93      4889da         mov rdx, rbx
0x00003a96      4889ef         mov rdi, rbp
0x00003a99      e802e4ffff     call sym.imp.__gmpz_sub
0x00003a9e      4889ea         mov rdx, rbp
0x00003aa1      4c89f6         mov rsi, r14
0x00003aa4      4c89ff         mov rdi, r15
0x00003aa7      e8e4e4ffff     call sym.imp.__gmpz_mul
0x00003aac      4c89ea         mov rdx, r13
0x00003aaf      4c89fe         mov rsi, r15
0x00003ab2      4c89f7         mov rdi, r14
0x00003ab5      e8d6e6ffff     call sym.imp.__gmpz_mod
0x00003aba      4c89e0         mov rax, r12
0x00003abd      83e01f         and eax, 0x1f
0x00003ac0      4883f801       cmp rax, 1
0x00003ac4      7592           jne 0x3a58
0x00003ac6      4c89ea         mov rdx, r13
0x00003ac9      4c89f6         mov rsi, r14
0x00003acc      4889ef         mov rdi, rbp
0x00003acf      e82ce7ffff     call sym.imp.__gmpz_gcd                 ; /src:1116
0x00003ad4      be01000000     mov esi, 1
0x00003ad9      4889ef         mov rdi, rbp
0x00003adc      e87fe7ffff     call sym.imp.__gmpz_cmp_ui
0x00003ae1      85c0           test eax, eax
0x00003ae3      0f85b7000000   jne 0x3ba0
0x00003ae9      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003aee      4889de         mov rsi, rbx
0x00003af1      e88ae4ffff     call sym.imp.__gmpz_set                 ; /src:821
0x00003af6      4983ec01       sub r12, 1                              ; /src:827
0x00003afa      0f8562ffffff   jne 0x3a62
0x00003b00      488b7c2408     mov rdi, qword [rsp + 8]
0x00003b05      4889de         mov rsi, rbx
0x00003b08      e873e4ffff     call sym.imp.__gmpz_set
0x00003b0d      488b442420     mov rax, qword [rsp + 0x20]
0x00003b12      488d0c00       lea rcx, [rax + rax]                    ; /src:821
0x00003b16      4885c0         test rax, rax
0x00003b19      48894c2428     mov qword [rsp + 0x28], rcx
0x00003b1e      7455           je 0x3b75
0x00003b20      4c89742430     mov qword [rsp + 0x30], r14
0x00003b25      4d89e6         mov r14, r12
0x00003b28      4c8b642410     mov r12, qword [rsp + 0x10]
0x00003b2d      4c897c2438     mov qword [rsp + 0x38], r15
0x00003b32      4989c7         mov r15, rax
0x00003b35      0f1f00         nop dword [rax]
0x00003b38      4889da         mov rdx, rbx
0x00003b3b      4889de         mov rsi, rbx
0x00003b3e      4889ef         mov rdi, rbp
0x00003b41      e84ae4ffff     call sym.imp.__gmpz_mul
0x00003b46      4c89ea         mov rdx, r13
0x00003b49      4889ee         mov rsi, rbp
0x00003b4c      4889df         mov rdi, rbx
0x00003b4f      e83ce6ffff     call sym.imp.__gmpz_mod
0x00003b54      4983c601       add r14, 1
0x00003b58      4c89e2         mov rdx, r12
0x00003b5b      4889de         mov rsi, rbx
0x00003b5e      4889df         mov rdi, rbx
0x00003b61      e82ae5ffff     call sym.imp.__gmpz_add_ui
0x00003b66      4d39fe         cmp r14, r15
0x00003b69      75cd           jne 0x3b38
0x00003b6b      4c8b742430     mov r14, qword [rsp + 0x30]
0x00003b70      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00003b75      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003b7a      4889de         mov rsi, rbx
0x00003b7d      e8fee3ffff     call sym.imp.__gmpz_set
0x00003b82      488b442428     mov rax, qword [rsp + 0x28]             ; /src:829
0x00003b87      4c8b642420     mov r12, qword [rsp + 0x20]
0x00003b8c      4889442420     mov qword [rsp + 0x20], rax
0x00003b91      e9ccfeffff     jmp 0x3a62
0x00003b96      662e0f1f8400.  nop word cs:[rax + rax]
0x00003ba0      4c89642428     mov qword [rsp + 0x28], r12
0x00003ba5      4c89742430     mov qword [rsp + 0x30], r14
0x00003baa      48895c2438     mov qword [rsp + 0x38], rbx
0x00003baf      4c8b642418     mov r12, qword [rsp + 0x18]
0x00003bb4      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00003bb9      4c8b742408     mov r14, qword [rsp + 8]
0x00003bbe      6690           nop
0x00003bc0      4c89e2         mov rdx, r12
0x00003bc3      4c89e6         mov rsi, r12
0x00003bc6      4889ef         mov rdi, rbp
0x00003bc9      e8c2e3ffff     call sym.imp.__gmpz_mul
0x00003bce      4c89ea         mov rdx, r13
0x00003bd1      4889ee         mov rsi, rbp
0x00003bd4      4c89e7         mov rdi, r12
0x00003bd7      e8b4e5ffff     call sym.imp.__gmpz_mod
0x00003bdc      4889da         mov rdx, rbx
0x00003bdf      4c89e6         mov rsi, r12
0x00003be2      4c89e7         mov rdi, r12
0x00003be5      e8a6e4ffff     call sym.imp.__gmpz_add_ui
0x00003bea      4c89e2         mov rdx, r12
0x00003bed      4c89f6         mov rsi, r14
0x00003bf0      4889ef         mov rdi, rbp
0x00003bf3      e8a8e2ffff     call sym.imp.__gmpz_sub
0x00003bf8      4c89ea         mov rdx, r13                            ; /src:335
0x00003bfb      4889ee         mov rsi, rbp                            ; /src:333
0x00003bfe      4889ef         mov rdi, rbp
0x00003c01      e8fae5ffff     call sym.imp.__gmpz_gcd
0x00003c06      be01000000     mov esi, 1
0x00003c0b      4889ef         mov rdi, rbp
0x00003c0e      e84de6ffff     call sym.imp.__gmpz_cmp_ui
0x00003c13      85c0           test eax, eax                           ; /src:842
0x00003c15      74a9           je 0x3bc0
0x00003c17      4889ea         mov rdx, rbp
0x00003c1a      4c89ee         mov rsi, r13
0x00003c1d      4c89ef         mov rdi, r13
0x00003c20      48895c2410     mov qword [rsp + 0x10], rbx
0x00003c25      4c89642418     mov qword [rsp + 0x18], r12
0x00003c2a      4c89742408     mov qword [rsp + 8], r14
0x00003c2f      4c8b642428     mov r12, qword [rsp + 0x28]
0x00003c34      488b5c2438     mov rbx, qword [rsp + 0x38]
0x00003c39      4c8b742430     mov r14, qword [rsp + 0x30]
0x00003c3e      e8fde2ffff     call sym.imp.__gmpz_divexact
0x00003c43      4889ef         mov rdi, rbp
0x00003c46      e8d5faffff     call sym.mp_prime_p
0x00003c4b      84c0           test al, al
0x00003c4d      7451           je 0x3ca0
0x00003c4f      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00003c54      4889ee         mov rsi, rbp
0x00003c57      e8c4f1ffff     call sym.mp_factor_insert
0x00003c5c      4c89ef         mov rdi, r13
0x00003c5f      e8bcfaffff     call sym.mp_prime_p
0x00003c64      84c0           test al, al                             ; /src:859
0x00003c66      755f           jne 0x3cc7
0x00003c68      4c89ea         mov rdx, r13
0x00003c6b      4889de         mov rsi, rbx
0x00003c6e      4889df         mov rdi, rbx
0x00003c71      e81ae5ffff     call sym.imp.__gmpz_mod                 ; /src:842
0x00003c76      488b7c2408     mov rdi, qword [rsp + 8]
0x00003c7b      4c89ea         mov rdx, r13
0x00003c7e      4889fe         mov rsi, rdi
0x00003c81      e80ae5ffff     call sym.imp.__gmpz_mod
0x00003c86      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00003c8b      4c89ea         mov rdx, r13
0x00003c8e      4889fe         mov rsi, rdi
0x00003c91      e8fae4ffff     call sym.imp.__gmpz_mod
0x00003c96      e9a4fdffff     jmp 0x3a3f
0x00003c9b      0f1f440000     nop dword [rax + rax]
0x00003ca0      803d59f42000.  cmp byte [obj.dev_debug], 0             ; [0x213100:1]=0
0x00003ca7      7575           jne 0x3d1e
0x00003ca9      488b542440     mov rdx, qword [rsp + 0x40]
0x00003cae      488b742448     mov rsi, qword [rsp + 0x48]
0x00003cb3      4889ef         mov rdi, rbp                            ; /src:858
0x00003cb6      e8b5fcffff     call sym.mp_factor_using_pollard_rho    ; /src:862
0x00003cbb      4c89ef         mov rdi, r13
0x00003cbe      e85dfaffff     call sym.mp_prime_p
0x00003cc3      84c0           test al, al
0x00003cc5      74a1           je 0x3c68
0x00003cc7      488b7c2440     mov rdi, qword [rsp + 0x40]
0x00003ccc      4c89ee         mov rsi, r13
0x00003ccf      e84cf1ffff     call sym.mp_factor_insert
0x00003cd4      4883ec08       sub rsp, 8
0x00003cd8      31c0           xor eax, eax
0x00003cda      4889ea         mov rdx, rbp
0x00003cdd      6a00           push 0
0x00003cdf      4c8b4c2428     mov r9, qword [rsp + 0x28]              ; /src:332
0x00003ce4      4989d8         mov r8, rbx
0x00003ce7      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00003cec      4c89fe         mov rsi, r15
0x00003cef      4c89f7         mov rdi, r14                            ; /src:334
0x00003cf2      e859e1ffff     call sym.imp.__gmpz_clears              ; /src:335
0x00003cf7      58             pop rax
0x00003cf8      5a             pop rdx
0x00003cf9      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00003d01      644833042528.  xor rax, qword fs:[0x28]
0x00003d0a      7554           jne 0x3d60
0x00003d0c      4881c4c80000.  add rsp, 0xc8
0x00003d13      5b             pop rbx                                 ; /src:874
0x00003d14      5d             pop rbp
0x00003d15      415c           pop r12
0x00003d17      415d           pop r13
0x00003d19      415e           pop r14
0x00003d1b      415f           pop r15
0x00003d1d      c3             ret
0x00003d1e      488b0dbbf320.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00003d25      488d3dd48d00.  lea rdi, str.composite_factor__restarting_pollard_rho ; 0xcb00 ; "[composite factor--restarting pollard-rho] "
0x00003d2c      ba2b000000     mov edx, 0x2b                           ; '+'
0x00003d31      be01000000     mov esi, 1
0x00003d36      e805e5ffff     call sym.imp.fwrite
0x00003d3b      e969ffffff     jmp 0x3ca9
0x00003d40      488b3d99f320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00003d47      488d15969000.  lea rdx, str.pollard_rho___lu           ; /src:559 ; 0xcde4 ; "[pollard-rho (%lu)] "
0x00003d4e      4889f1         mov rcx, rsi
0x00003d51      be01000000     mov esi, 1
0x00003d56      e8f5e4ffff     call sym.imp.__fprintf_chk
0x00003d5b      e94efcffff     jmp 0x39ae
0x00003d60      e8bbe1ffff     call sym.imp.__stack_chk_fail
0x00003d65      90             nop
0x00003d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- factor_using_pollard_rho:
0x00003d70      4157           push r15
0x00003d72      4156           push r14
0x00003d74      4155           push r13
0x00003d76      4154           push r12
0x00003d78      55             push rbp
0x00003d79      53             push rbx
0x00003d7a      4883ec38       sub rsp, 0x38
0x00003d7e      4883ff01       cmp rdi, 1
0x00003d82      4889542408     mov qword [rsp + 8], rdx
0x00003d87      0f86c4030000   jbe 0x4151
0x00003d8d      488d4601       lea rax, [rsi + 1]
0x00003d91      4989fd         mov r13, rdi
0x00003d94      4889442420     mov qword [rsp + 0x20], rax
0x00003d99      488b442420     mov rax, qword [rsp + 0x20]
0x00003d9e      b901000000     mov ecx, 1
0x00003da3      4c89ee         mov rsi, r13
0x00003da6      bf40000000     mov edi, 0x40                           ; segment.PHDR
0x00003dab      4531e4         xor r12d, r12d
0x00003dae      4889ca         mov rdx, rcx
0x00003db1      4883e801       sub rax, 1
0x00003db5      48890424       mov qword [rsp], rax
0x00003db9      31c0           xor eax, eax
0x00003dbb      0f1f440000     nop dword [rax + rax]
0x00003dc0      4889f1         mov rcx, rsi
0x00003dc3      48d1e8         shr rax, 1
0x00003dc6      48d1ee         shr rsi, 1
0x00003dc9      48c1e13f       shl rcx, 0x3f
0x00003dcd      4809c8         or rax, rcx
0x00003dd0      4839d6         cmp rsi, rdx
0x00003dd3      7207           jb 0x3ddc
0x00003dd5      750b           jne 0x3de2
0x00003dd7      4c39e0         cmp rax, r12
0x00003dda      7706           ja 0x3de2
0x00003ddc      4929c4         sub r12, rax
0x00003ddf      4819f2         sbb rdx, rsi
0x00003de2      83ef01         sub edi, 1
0x00003de5      75d9           jne 0x3dc0
0x00003de7      4c89e8         mov rax, r13
0x00003dea      31ed           xor ebp, ebp
0x00003dec      4c29e0         sub rax, r12
0x00003def      4c39e0         cmp rax, r12                            ; /src:898
0x00003df2      400f97c5       seta bpl
0x00003df6      48f7dd         neg rbp
0x00003df9      4889e8         mov rax, rbp
0x00003dfc      4b8d2c24       lea rbp, [r12 + r12]
0x00003e00      4c21e8         and rax, r13
0x00003e03      4c29ed         sub rbp, r13
0x00003e06      4801c5         add rbp, rax
0x00003e09      4c3b2c24       cmp r13, qword [rsp]
0x00003e0d      0f8698020000   jbe 0x40ab
0x00003e13      4889eb         mov rbx, rbp
0x00003e16      4989ef         mov r15, rbp
0x00003e19      b901000000     mov ecx, 1
0x00003e1e      41be01000000   mov r14d, 1
0x00003e24      4c89e8         mov rax, r13
0x00003e27      488d35b29100.  lea rsi, obj.binvert_table              ; 0xcfe0
0x00003e2e      4d89ea         mov r10, r13
0x00003e31      48d1e8         shr rax, 1
0x00003e34      4989cb         mov r11, rcx
0x00003e37      83e07f         and eax, 0x7f
0x00003e3a      0fb60406       movzx eax, byte [rsi + rax]
0x00003e3e      488d1400       lea rdx, [rax + rax]
0x00003e42      480fafc0       imul rax, rax                           ; /src:842
0x00003e46      490fafc5       imul rax, r13
0x00003e4a      4829c2         sub rdx, rax
0x00003e4d      488d0412       lea rax, [rdx + rdx]
0x00003e51      480fafd2       imul rdx, rdx
0x00003e55      490fafd5       imul rdx, r13
0x00003e59      4829d0         sub rax, rdx
0x00003e5c      4c8d0400       lea r8, [rax + rax]
0x00003e60      480fafc0       imul rax, rax
0x00003e64      490fafc5       imul rax, r13
0x00003e68      4929c0         sub r8, rax
0x00003e6b      488b0424       mov rax, qword [rsp]
0x00003e6f      4929c2         sub r10, rax
0x00003e72      4c29e8         sub rax, r13
0x00003e75      4989c1         mov r9, rax
0x00003e78      0f1f84000000.  nop dword [rax + rax]
0x00003e80      4889e8         mov rax, rbp
0x00003e83      48f7e5         mul rbp
0x00003e86      4889d1         mov rcx, rdx
0x00003e89      4889ce         mov rsi, rcx
0x00003e8c      490fafc0       imul rax, r8
0x00003e90      49f7e5         mul r13
0x00003e93      4829d6         sub rsi, rdx
0x00003e96      4839d1         cmp rcx, rdx                            ; /src:775
0x00003e99      4a8d042e       lea rax, [rsi + r13]
0x00003e9d      480f42f0       cmovb rsi, rax
0x00003ea1      4c89f8         mov rax, r15
0x00003ea4      4c39d6         cmp rsi, r10
0x00003ea7      4819ed         sbb rbp, rbp
0x00003eaa      4c01ce         add rsi, r9
0x00003ead      4c21ed         and rbp, r13
0x00003eb0      4801f5         add rbp, rsi
0x00003eb3      4939ef         cmp r15, rbp
0x00003eb6      4819c9         sbb rcx, rcx
0x00003eb9      4829e8         sub rax, rbp
0x00003ebc      4c21e9         and rcx, r13                            ; /src:700
0x00003ebf      4801c1         add rcx, rax
0x00003ec2      4c89e0         mov rax, r12
0x00003ec5      48f7e1         mul rcx
0x00003ec8      4889d1         mov rcx, rdx
0x00003ecb      4989cc         mov r12, rcx
0x00003ece      490fafc0       imul rax, r8
0x00003ed2      49f7e5         mul r13
0x00003ed5      4929d4         sub r12, rdx
0x00003ed8      4839d1         cmp rcx, rdx
0x00003edb      4b8d042c       lea rax, [r12 + r13]
0x00003edf      4c0f42e0       cmovb r12, rax
0x00003ee3      4c89f0         mov rax, r14                            ; /src:652
0x00003ee6      83e01f         and eax, 0x1f
0x00003ee9      4883f801       cmp rax, 1
0x00003eed      7461           je 0x3f50
0x00003eef      4983ee01       sub r14, 1
0x00003ef3      758b           jne 0x3e80
0x00003ef5      4d85db         test r11, r11
0x00003ef8      4b8d341b       lea rsi, [r11 + r11]
0x00003efc      0f84ce010000   je 0x40d0
0x00003f02      4889e8         mov rax, rbp
0x00003f05      0f1f00         nop dword [rax]
0x00003f08      48f7e0         mul rax
0x00003f0b      4889d1         mov rcx, rdx
0x00003f0e      4889cf         mov rdi, rcx
0x00003f11      490fafc0       imul rax, r8
0x00003f15      49f7e5         mul r13
0x00003f18      4829d7         sub rdi, rdx
0x00003f1b      4839d1         cmp rcx, rdx
0x00003f1e      4a8d042f       lea rax, [rdi + r13]
0x00003f22      480f42f8       cmovb rdi, rax
0x00003f26      4c39d7         cmp rdi, r10
0x00003f29      4819c0         sbb rax, rax
0x00003f2c      4c01cf         add rdi, r9
0x00003f2f      4983c601       add r14, 1
0x00003f33      4c21e8         and rax, r13
0x00003f36      4801f8         add rax, rdi
0x00003f39      4d39f3         cmp r11, r14
0x00003f3c      75ca           jne 0x3f08
0x00003f3e      4989ef         mov r15, rbp
0x00003f41      4889c3         mov rbx, rax
0x00003f44      4989f3         mov r11, rsi
0x00003f47      4889c5         mov rbp, rax                            ; /src:658
0x00003f4a      e931ffffff     jmp 0x3e80
0x00003f4f      90             nop
0x00003f50      4c89ee         mov rsi, r13
0x00003f53      4c89e7         mov rdi, r12
0x00003f56      e845e7ffff     call sym.gcd_odd
0x00003f5b      4883f801       cmp rax, 1
0x00003f5f      750f           jne 0x3f70                              ; /src:659
0x00003f61      4889eb         mov rbx, rbp
0x00003f64      eb89           jmp 0x3eef
0x00003f66      662e0f1f8400.  nop word cs:[rax + rax]
0x00003f70      4889d8         mov rax, rbx
0x00003f73      48f7e3         mul rbx
0x00003f76      4889d1         mov rcx, rdx
0x00003f79      4889ce         mov rsi, rcx
0x00003f7c      490fafc0       imul rax, r8
0x00003f80      49f7e5         mul r13
0x00003f83      4829d6         sub rsi, rdx
0x00003f86      4839d1         cmp rcx, rdx
0x00003f89      4a8d042e       lea rax, [rsi + r13]
0x00003f8d      480f42f0       cmovb rsi, rax
0x00003f91      4c39d6         cmp rsi, r10
0x00003f94      4819c0         sbb rax, rax
0x00003f97      4c01ce         add rsi, r9
0x00003f9a      4c21e8         and rax, r13
0x00003f9d      488d1c30       lea rbx, [rax + rsi]
0x00003fa1      4c89f8         mov rax, r15
0x00003fa4      4c89ee         mov rsi, r13
0x00003fa7      4939df         cmp r15, rbx
0x00003faa      4819ff         sbb rdi, rdi
0x00003fad      4829d8         sub rax, rbx
0x00003fb0      4c21ef         and rdi, r13
0x00003fb3      4801c7         add rdi, rax
0x00003fb6      e8e5e6ffff     call sym.gcd_odd
0x00003fbb      4883f801       cmp rax, 1
0x00003fbf      74af           je 0x3f70
0x00003fc1      4939c5         cmp r13, rax                            ; /src:656
0x00003fc4      4c89d9         mov rcx, r11
0x00003fc7      4989c3         mov r11, rax
0x00003fca      0f8476010000   je 0x4146                               ; /src:655
0x00003fd0      4c89e8         mov rax, r13
0x00003fd3      31d2           xor edx, edx
0x00003fd5      49f7f3         div r11
0x00003fd8      4983fb01       cmp r11, 1
0x00003fdc      4989c0         mov r8, rax
0x00003fdf      4989c5         mov r13, rax
0x00003fe2      763b           jbe 0x401f
0x00003fe4      4981fb78ed7d.  cmp r11, 0x17ded78
0x00003feb      0f86f7000000   jbe 0x40e8
0x00003ff1      4c89df         mov rdi, r11
0x00003ff4      48894c2418     mov qword [rsp + 0x18], rcx             ; /src:537
0x00003ff9      4c895c2410     mov qword [rsp + 0x10], r11
0x00003ffe      4889442428     mov qword [rsp + 0x28], rax
0x00004003      e8780f0000     call sym.prime_p.part.4
0x00004008      84c0           test al, al
0x0000400a      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x0000400f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00004014      4c8b442428     mov r8, qword [rsp + 0x28]
0x00004019      0f85c9000000   jne 0x40e8
0x0000401f      488b542408     mov rdx, qword [rsp + 8]
0x00004024      488b742420     mov rsi, qword [rsp + 0x20]
0x00004029      4c89df         mov rdi, r11
0x0000402c      4c89442418     mov qword [rsp + 0x18], r8
0x00004031      48894c2410     mov qword [rsp + 0x10], rcx
0x00004036      e835fdffff     call sym.factor_using_pollard_rho
0x0000403b      4c8b442418     mov r8, qword [rsp + 0x18]
0x00004040      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004045      4983f801       cmp r8, 1
0x00004049      0f86c9000000   jbe 0x4118
0x0000404f      4981f878ed7d.  cmp r8, 0x17ded78
0x00004056      0f86ca000000   jbe 0x4126
0x0000405c      4c89c7         mov rdi, r8
0x0000405f      48894c2418     mov qword [rsp + 0x18], rcx
0x00004064      4c89442410     mov qword [rsp + 0x10], r8
0x00004069      e8120f0000     call sym.prime_p.part.4
0x0000406e      84c0           test al, al
0x00004070      4c8b442410     mov r8, qword [rsp + 0x10]
0x00004075      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000407a      0f85a6000000   jne 0x4126
0x00004080      4889e8         mov rax, rbp
0x00004083      31d2           xor edx, edx
0x00004085      49f7f0         div r8
0x00004088      4c89f8         mov rax, r15
0x0000408b      4889d5         mov rbp, rdx                            ; /src:545
0x0000408e      31d2           xor edx, edx
0x00004090      49f7f0         div r8
0x00004093      4889d8         mov rax, rbx
0x00004096      4989d7         mov r15, rdx
0x00004099      31d2           xor edx, edx
0x0000409b      49f7f0         div r8
0x0000409e      4889d3         mov rbx, rdx
0x000040a1      4c3b0424       cmp r8, qword [rsp]
0x000040a5      0f8779fdffff   ja 0x3e24
0x000040ab      488d0dce8e00.  lea rcx, obj.__PRETTY_FUNCTION__.8956   ; 0xcf80 ; "factor_using_pollard_rho"
0x000040b2      488d358f8900.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x000040b9      488d3d438d00.  lea rdi, str.a___n                      ; 0xce03 ; "a < n"
0x000040c0      bac8050000     mov edx, 0x5c8
0x000040c5      e816dfffff     call sym.imp.__assert_fail
0x000040ca      660f1f440000   nop word [rax + rax]
0x000040d0      4d89de         mov r14, r11
0x000040d3      4889eb         mov rbx, rbp
0x000040d6      4989f3         mov r11, rsi
0x000040d9      4989ef         mov r15, rbp
0x000040dc      e99ffdffff     jmp 0x3e80
0x000040e1      0f1f80000000.  nop dword [rax]
0x000040e8      488b7c2408     mov rdi, qword [rsp + 8]
0x000040ed      ba01000000     mov edx, 1
0x000040f2      4c89de         mov rsi, r11
0x000040f5      4c89442418     mov qword [rsp + 0x18], r8
0x000040fa      48894c2410     mov qword [rsp + 0x10], rcx
0x000040ff      e8fce5ffff     call sym.factor_insert_multiplicity
0x00004104      4c8b442418     mov r8, qword [rsp + 0x18]
0x00004109      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000410e      4983f801       cmp r8, 1
0x00004112      0f8737ffffff   ja 0x404f
0x00004118      7456           je 0x4170                               ; /src:563
0x0000411a      31db           xor ebx, ebx
0x0000411c      4531ff         xor r15d, r15d
0x0000411f      31ed           xor ebp, ebp
0x00004121      e97bffffff     jmp 0x40a1
0x00004126      488b7c2408     mov rdi, qword [rsp + 8]
0x0000412b      4883c438       add rsp, 0x38
0x0000412f      ba01000000     mov edx, 1
0x00004134      5b             pop rbx
0x00004135      5d             pop rbp
0x00004136      415c           pop r12
0x00004138      415d           pop r13
0x0000413a      415e           pop r14
0x0000413c      415f           pop r15
0x0000413e      4c89c6         mov rsi, r8
0x00004141      e9bae5ffff     jmp sym.factor_insert_multiplicity
0x00004146      488344242001   add qword [rsp + 0x20], 1
0x0000414c      e948fcffff     jmp 0x3d99
0x00004151      488d0d288e00.  lea rcx, obj.__PRETTY_FUNCTION__.8956   ; 0xcf80 ; "factor_using_pollard_rho"
0x00004158      488d35e98800.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x0000415f      488d3d938c00.  lea rdi, str.1_____n                    ; 0xcdf9 ; "(1) < (n)"
0x00004166      bac2050000     mov edx, 0x5c2
0x0000416b      e870deffff     call sym.imp.__assert_fail
0x00004170      4883c438       add rsp, 0x38
0x00004174      5b             pop rbx
0x00004175      5d             pop rbp
0x00004176      415c           pop r12
0x00004178      415d           pop r13
0x0000417a      415e           pop r14
0x0000417c      415f           pop r15
0x0000417e      c3             ret
0x0000417f      90             nop                                     ; /src:568
;-- factor_using_pollard_rho2:
0x00004180      4157           push r15
0x00004182      4156           push r14
0x00004184      4155           push r13
0x00004186      4154           push r12
0x00004188      4989f4         mov r12, rsi
0x0000418b      55             push rbp
0x0000418c      53             push rbx
0x0000418d      4889fd         mov rbp, rdi
0x00004190      4881eca80000.  sub rsp, 0xa8
0x00004197      64488b042528.  mov rax, qword fs:[0x28]                ; /src:564
0x000041a0      488984249800.  mov qword [rsp + 0x98], rax
0x000041a8      31c0           xor eax, eax
0x000041aa      4883ff02       cmp rdi, 2                              ; /src:563
0x000041ae      48894c2450     mov qword [rsp + 0x50], rcx
0x000041b3      4889542428     mov qword [rsp + 0x28], rdx
0x000041b8      4819c0         sbb rax, rax
0x000041bb      31c9           xor ecx, ecx
0x000041bd      83e040         and eax, 0x40                           ; segment.PHDR
0x000041c0      4883c040       add rax, 0x40                           ; segment.PHDR
0x000041c4      4883ff02       cmp rdi, 2
0x000041c8      0f92c1         setb cl
0x000041cb      4819db         sbb rbx, rbx
0x000041ce      4883c301       add rbx, 1
0x000041d2      4889da         mov rdx, rbx
0x000041d5      4883e801       sub rax, 1
0x000041d9      4883f8ff       cmp rax, 0xffffffffffffffff
0x000041dd      742c           je 0x420b
0x000041df      4889ce         mov rsi, rcx
0x000041e2      4801d2         add rdx, rdx
0x000041e5      4801c9         add rcx, rcx
0x000041e8      48c1ee3f       shr rsi, 0x3f
0x000041ec      4809f2         or rdx, rsi
0x000041ef      4839d5         cmp rbp, rdx
0x000041f2      7207           jb 0x41fb
0x000041f4      75df           jne 0x41d5
0x000041f6      4939cc         cmp r12, rcx
0x000041f9      77da           ja 0x41d5
0x000041fb      4883e801       sub rax, 1
0x000041ff      4c29e1         sub rcx, r12                            ; /src:556
0x00004202      4819ea         sbb rdx, rbp
0x00004205      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004209      75d4           jne 0x41df
0x0000420b      4889d0         mov rax, rdx
0x0000420e      4889542418     mov qword [rsp + 0x18], rdx
0x00004213      4889ca         mov rdx, rcx
0x00004216      4801ca         add rdx, rcx
0x00004219      4811c0         adc rax, rax
0x0000421c      4839e8         cmp rax, rbp
0x0000421f      48894c2420     mov qword [rsp + 0x20], rcx
0x00004224      4889442470     mov qword [rsp + 0x70], rax
0x00004229      4889d3         mov rbx, rdx
0x0000422c      4889c6         mov rsi, rax
0x0000422f      7707           ja 0x4238
0x00004231      7516           jne 0x4249
0x00004233      4c39e2         cmp rdx, r12
0x00004236      7211           jb 0x4249
0x00004238      4889c6         mov rsi, rax
0x0000423b      4889d3         mov rbx, rdx
0x0000423e      4c29e3         sub rbx, r12                            ; /src:576
0x00004241      4819ee         sbb rsi, rbp
0x00004244      4889742470     mov qword [rsp + 0x70], rsi
0x00004249      4983fc01       cmp r12, 1
0x0000424d      4889742478     mov qword [rsp + 0x78], rsi
0x00004252      4889b4248000.  mov qword [rsp + 0x80], rsi
0x0000425a      7509           jne 0x4265
0x0000425c      4885ed         test rbp, rbp
0x0000425f      0f84f5030000   je 0x465a
0x00004265      488d84249000.  lea rax, [rsp + 0x90]
0x0000426d      4989df         mov r15, rbx
0x00004270      48895c2430     mov qword [rsp + 0x30], rbx
0x00004275      48c744240801.  mov qword [rsp + 8], 1
0x0000427e      41bd01000000   mov r13d, 1
0x00004284      4889442410     mov qword [rsp + 0x10], rax             ; /src:578
0x00004289      488d84248800.  lea rax, [rsp + 0x88]
0x00004291      4889442438     mov qword [rsp + 0x38], rax
0x00004296      488d442470     lea rax, [rsp + 0x70]
0x0000429b      4889442458     mov qword [rsp + 0x58], rax
0x000042a0      488d442478     lea rax, [rsp + 0x78]
0x000042a5      4889442460     mov qword [rsp + 0x60], rax
0x000042aa      488d84248000.  lea rax, [rsp + 0x80]
0x000042b2      4889442468     mov qword [rsp + 0x68], rax             ; /src:580
0x000042b7      660f1f840000.  nop word [rax + rax]
0x000042c0      4c89e0         mov rax, r12
0x000042c3      488d3d168d00.  lea rdi, obj.binvert_table              ; 0xcfe0
0x000042ca      48d1e8         shr rax, 1
0x000042cd      83e07f         and eax, 0x7f
0x000042d0      0fb60407       movzx eax, byte [rdi + rax]
0x000042d4      488d1400       lea rdx, [rax + rax]
0x000042d8      480fafc0       imul rax, rax
0x000042dc      490fafc4       imul rax, r12
0x000042e0      4829c2         sub rdx, rax
0x000042e3      488d0412       lea rax, [rdx + rdx]
0x000042e7      480fafd2       imul rdx, rdx
0x000042eb      490fafd4       imul rdx, r12
0x000042ef      4829d0         sub rax, rdx                            ; /src:612
0x000042f2      4c8d3400       lea r14, [rax + rax]                    ; /src:608
0x000042f6      480fafc0       imul rax, rax
0x000042fa      490fafc4       imul rax, r12
0x000042fe      4929c6         sub r14, rax
0x00004301      4c89f8         mov rax, r15
0x00004304      4989df         mov r15, rbx
0x00004307      4889c3         mov rbx, rax
0x0000430a      660f1f440000   nop word [rax + rax]
0x00004310      4156           push r14
0x00004312      4154           push r12
0x00004314      4889f1         mov rcx, rsi
0x00004317      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000431c      4c89fa         mov rdx, r15
0x0000431f      4d89f8         mov r8, r15
0x00004322      4989e9         mov r9, rbp
0x00004325      e836e6ffff     call sym.mulredc2
0x0000432a      488b9424a000.  mov rdx, qword [rsp + 0xa0]
0x00004332      4803442438     add rax, qword [rsp + 0x38]             ; /src:612
0x00004337      4883d200       adc rdx, 0
0x0000433b      4839d5         cmp rbp, rdx
0x0000433e      488994248000.  mov qword [rsp + 0x80], rdx
0x00004346      4989c7         mov r15, rax
0x00004349      59             pop rcx
0x0000434a      4889d6         mov rsi, rdx
0x0000434d      5f             pop rdi
0x0000434e      7207           jb 0x4357
0x00004350      7516           jne 0x4368
0x00004352      4939c4         cmp r12, rax
0x00004355      7711           ja 0x4368
0x00004357      4c29e0         sub rax, r12
0x0000435a      4819ea         sbb rdx, rbp
0x0000435d      4889542470     mov qword [rsp + 0x70], rdx
0x00004362      4989c7         mov r15, rax
0x00004365      4889d6         mov rsi, rdx
0x00004368      488b4c2478     mov rcx, qword [rsp + 0x78]
0x0000436d      4c8b442430     mov r8, qword [rsp + 0x30]
0x00004372      4d29f8         sub r8, r15
0x00004375      4819f1         sbb rcx, rsi
0x00004378      4885c9         test rcx, rcx
0x0000437b      7906           jns 0x4383
0x0000437d      4d01e0         add r8, r12
0x00004380      4811e9         adc rcx, rbp
0x00004383      4156           push r14
0x00004385      4154           push r12
0x00004387      4989e9         mov r9, rbp
0x0000438a      488b542430     mov rdx, qword [rsp + 0x30]
0x0000438f      488b742428     mov rsi, qword [rsp + 0x28]
0x00004394      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00004399      e8c2e5ffff     call sym.mulredc2
0x0000439e      4889442430     mov qword [rsp + 0x30], rax
0x000043a3      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x000043ab      4889442428     mov qword [rsp + 0x28], rax
0x000043b0      4c89e8         mov rax, r13
0x000043b3      83e01f         and eax, 0x1f
0x000043b6      4883f801       cmp rax, 1
0x000043ba      415a           pop r10
0x000043bc      415b           pop r11
0x000043be      0f84dc000000   je 0x44a0
0x000043c4      488b742470     mov rsi, qword [rsp + 0x70]
0x000043c9      4983ed01       sub r13, 1
0x000043cd      0f853dffffff   jne 0x4310
0x000043d3      488b442408     mov rax, qword [rsp + 8]
0x000043d8      4889742478     mov qword [rsp + 0x78], rsi
0x000043dd      488d1c00       lea rbx, [rax + rax]
0x000043e1      4885c0         test rax, rax
0x000043e4      48895c2430     mov qword [rsp + 0x30], rbx
0x000043e9      4c89fb         mov rbx, r15
0x000043ec      0f8484000000   je 0x4476
0x000043f2      4c897c2440     mov qword [rsp + 0x40], r15
0x000043f7      4c89fa         mov rdx, r15
0x000043fa      4c89eb         mov rbx, r13
0x000043fd      4c8b7c2410     mov r15, qword [rsp + 0x10]
0x00004402      4c8b6c2428     mov r13, qword [rsp + 0x28]
0x00004407      660f1f840000.  nop word [rax + rax]
0x00004410      4156           push r14
0x00004412      4154           push r12
0x00004414      4989d0         mov r8, rdx
0x00004417      4889f1         mov rcx, rsi
0x0000441a      4989e9         mov r9, rbp
0x0000441d      4c89ff         mov rdi, r15
0x00004420      e83be5ffff     call sym.mulredc2
0x00004425      488b8c24a000.  mov rcx, qword [rsp + 0xa0]
0x0000442d      4c01e8         add rax, r13
0x00004430      4883d100       adc rcx, 0
0x00004434      4839cd         cmp rbp, rcx                            ; /src:180
0x00004437      48898c248000.  mov qword [rsp + 0x80], rcx
0x0000443f      4889c2         mov rdx, rax
0x00004442      4158           pop r8
0x00004444      4889ce         mov rsi, rcx
0x00004447      4159           pop r9
0x00004449      7207           jb 0x4452
0x0000444b      7516           jne 0x4463
0x0000444d      4939c4         cmp r12, rax
0x00004450      7711           ja 0x4463
0x00004452      4889ce         mov rsi, rcx
0x00004455      4c29e0         sub rax, r12
0x00004458      4819ee         sbb rsi, rbp
0x0000445b      4889742470     mov qword [rsp + 0x70], rsi             ; /src:591
0x00004460      4889c2         mov rdx, rax
0x00004463      4883c301       add rbx, 1
0x00004467      48395c2408     cmp qword [rsp + 8], rbx
0x0000446c      75a2           jne 0x4410
0x0000446e      4c8b7c2440     mov r15, qword [rsp + 0x40]
0x00004473      4889d3         mov rbx, rdx
0x00004476      488b442430     mov rax, qword [rsp + 0x30]
0x0000447b      4c8b6c2408     mov r13, qword [rsp + 8]
0x00004480      4c897c2430     mov qword [rsp + 0x30], r15
0x00004485      4889b4248000.  mov qword [rsp + 0x80], rsi
0x0000448d      4989df         mov r15, rbx                            ; /src:636
0x00004490      4889442408     mov qword [rsp + 8], rax
0x00004495      e976feffff     jmp 0x4310
0x0000449a      660f1f440000   nop word [rax + rax]
0x000044a0      488b542420     mov rdx, qword [rsp + 0x20]
0x000044a5      488b742418     mov rsi, qword [rsp + 0x18]             ; /src:637
0x000044aa      4d89e0         mov r8, r12
0x000044ad      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000044b2      4889e9         mov rcx, rbp
0x000044b5      e836ecffff     call sym.gcd2_odd
0x000044ba      4883bc248800.  cmp qword [rsp + 0x88], 0               ; /src:636
0x000044c3      751b           jne 0x44e0
0x000044c5      4883f801       cmp rax, 1
0x000044c9      7515           jne 0x44e0
0x000044cb      488b742470     mov rsi, qword [rsp + 0x70]
0x000044d0      4c89fb         mov rbx, r15
0x000044d3      4889b4248000.  mov qword [rsp + 0x80], rsi
0x000044db      e9e9feffff     jmp 0x43c9
0x000044e0      4c896c2440     mov qword [rsp + 0x40], r13
0x000044e5      4c897c2448     mov qword [rsp + 0x48], r15
0x000044ea      4989dd         mov r13, rbx
0x000044ed      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000044f2      488b5c2410     mov rbx, qword [rsp + 0x10]
0x000044f7      eb11           jmp 0x450a
0x000044f9      0f1f80000000.  nop dword [rax]
0x00004500      4883f801       cmp rax, 1
0x00004504      0f857e010000   jne 0x4688
0x0000450a      488bb4248000.  mov rsi, qword [rsp + 0x80]
0x00004512      4156           push r14
0x00004514      4c89ea         mov rdx, r13                            ; /src:604
0x00004517      4154           push r12
0x00004519      4d89e8         mov r8, r13
0x0000451c      4889df         mov rdi, rbx
0x0000451f      4989e9         mov r9, rbp
0x00004522      4889f1         mov rcx, rsi
0x00004525      e836e4ffff     call sym.mulredc2
0x0000452a      488b9424a000.  mov rdx, qword [rsp + 0xa0]
0x00004532      4803442438     add rax, qword [rsp + 0x38]
0x00004537      4883d200       adc rdx, 0
0x0000453b      4839d5         cmp rbp, rdx                            ; /src:626
0x0000453e      488994249000.  mov qword [rsp + 0x90], rdx
0x00004546      4989c5         mov r13, rax
0x00004549      5e             pop rsi
0x0000454a      4889d1         mov rcx, rdx
0x0000454d      5f             pop rdi                                 ; /src:627
0x0000454e      7207           jb 0x4557
0x00004550      7519           jne 0x456b
0x00004552      4939c4         cmp r12, rax                            ; /src:632
0x00004555      7714           ja 0x456b
0x00004557      4c29e0         sub rax, r12
0x0000455a      4819ea         sbb rdx, rbp
0x0000455d      488994248000.  mov qword [rsp + 0x80], rdx
0x00004565      4989c5         mov r13, rax
0x00004568      4889d1         mov rcx, rdx
0x0000456b      488b742478     mov rsi, qword [rsp + 0x78]
0x00004570      4c89fa         mov rdx, r15
0x00004573      4c29ea         sub rdx, r13
0x00004576      4819ce         sbb rsi, rcx
0x00004579      4885f6         test rsi, rsi
0x0000457c      7906           jns 0x4584
0x0000457e      4c01e2         add rdx, r12
0x00004581      4811ee         adc rsi, rbp
0x00004584      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004589      4d89e0         mov r8, r12
0x0000458c      4889e9         mov rcx, rbp
0x0000458f      e85cebffff     call sym.gcd2_odd
0x00004594      488bbc248800.  mov rdi, qword [rsp + 0x88]             ; /src:1196
0x0000459c      4885ff         test rdi, rdi
0x0000459f      0f845bffffff   je 0x4500
0x000045a5      4939c4         cmp r12, rax
0x000045a8      4989c0         mov r8, rax
0x000045ab      0f8426020000   je 0x47d7                               ; /src:1200
0x000045b1      4c89c0         mov rax, r8
0x000045b4      488d1d258a00.  lea rbx, obj.binvert_table              ; 0xcfe0
0x000045bb      4c89c6         mov rsi, r8
0x000045be      48d1e8         shr rax, 1
0x000045c1      4c89442408     mov qword [rsp + 8], r8
0x000045c6      83e07f         and eax, 0x7f
0x000045c9      0fb60403       movzx eax, byte [rbx + rax]
0x000045cd      488d1400       lea rdx, [rax + rax]
0x000045d1      480fafc0       imul rax, rax
0x000045d5      490fafc0       imul rax, r8
0x000045d9      4829c2         sub rdx, rax
0x000045dc      488d0412       lea rax, [rdx + rdx]
0x000045e0      480fafd2       imul rdx, rdx
0x000045e4      490fafd0       imul rdx, r8
0x000045e8      4829d0         sub rax, rdx
0x000045eb      488d1400       lea rdx, [rax + rax]
0x000045ef      480fafc0       imul rax, rax
0x000045f3      490fafc0       imul rax, r8
0x000045f7      4829c2         sub rdx, rax
0x000045fa      4c0fafe2       imul r12, rdx
0x000045fe      e8ed120000     call sym.prime2_p
0x00004603      84c0           test al, al
0x00004605      4c8b442408     mov r8, qword [rsp + 8]
0x0000460a      0f8423020000   je 0x4833
0x00004610      488bb4248800.  mov rsi, qword [rsp + 0x88]
0x00004618      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000461d      4c89c2         mov rdx, r8
0x00004620      e87beaffff     call sym.factor_insert_large
0x00004625      4983fc01       cmp r12, 1
0x00004629      0f86d8010000   jbe 0x4807
0x0000462f      4981fc78ed7d.  cmp r12, 0x17ded78
0x00004636      7610           jbe 0x4648
0x00004638      4c89e7         mov rdi, r12
0x0000463b      e840090000     call sym.prime_p.part.4
0x00004640      84c0           test al, al
0x00004642      0f84bf010000   je 0x4807
0x00004648      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000464d      ba01000000     mov edx, 1                              ; /src:-240
0x00004652      4c89e6         mov rsi, r12
0x00004655      e8a6e0ffff     call sym.factor_insert_multiplicity
0x0000465a      488b84249800.  mov rax, qword [rsp + 0x98]
0x00004662      644833042528.  xor rax, qword fs:[0x28]
0x0000466b      0f85e5010000   jne 0x4856
0x00004671      4881c4a80000.  add rsp, 0xa8
0x00004678      5b             pop rbx
0x00004679      5d             pop rbp
0x0000467a      415c           pop r12
0x0000467c      415d           pop r13
0x0000467e      415e           pop r14
0x00004680      415f           pop r15
0x00004682      c3             ret
0x00004683      0f1f440000     nop dword [rax + rax]
0x00004688      4989c0         mov r8, rax
0x0000468b      488d3d4e8900.  lea rdi, obj.binvert_table              ; 0xcfe0
0x00004692      48d1e8         shr rax, 1
0x00004695      83e07f         and eax, 0x7f
0x00004698      4c897c2430     mov qword [rsp + 0x30], r15             ; /src:-239
0x0000469d      48895c2410     mov qword [rsp + 0x10], rbx
0x000046a2      0fb60407       movzx eax, byte [rdi + rax]             ; /src:-241
0x000046a6      4d89ef         mov r15, r13
0x000046a9      488b5c2448     mov rbx, qword [rsp + 0x48]             ; /src:-240
0x000046ae      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x000046b3      488d1400       lea rdx, [rax + rax]
0x000046b7      480fafc0       imul rax, rax
0x000046bb      490fafc0       imul rax, r8
0x000046bf      4829c2         sub rdx, rax
0x000046c2      488d0412       lea rax, [rdx + rdx]
0x000046c6      480fafd2       imul rdx, rdx
0x000046ca      490fafd0       imul rdx, r8
0x000046ce      4829d0         sub rax, rdx
0x000046d1      488d0c00       lea rcx, [rax + rax]
0x000046d5      480fafc0       imul rax, rax
0x000046d9      490fafc0       imul rax, r8
0x000046dd      4829c1         sub rcx, rax
0x000046e0      4c0fafe1       imul r12, rcx
0x000046e4      4c39c5         cmp rbp, r8
0x000046e7      0f8213010000   jb 0x4800
0x000046ed      4c89e0         mov rax, r12
0x000046f0      49f7e0         mul r8
0x000046f3      4829d5         sub rbp, rdx
0x000046f6      480fafe9       imul rbp, rcx
0x000046fa      4983f801       cmp r8, 1
0x000046fe      7627           jbe 0x4727
0x00004700      4981f878ed7d.  cmp r8, 0x17ded78
0x00004707      0f86b3000000   jbe 0x47c0
0x0000470d      4c89c7         mov rdi, r8
0x00004710      4c89442440     mov qword [rsp + 0x40], r8
0x00004715      e866080000     call sym.prime_p.part.4
0x0000471a      84c0           test al, al
0x0000471c      4c8b442440     mov r8, qword [rsp + 0x40]              ; /src:-208
0x00004721      0f8599000000   jne 0x47c0
0x00004727      488b442428     mov rax, qword [rsp + 0x28]
0x0000472c      488b542450     mov rdx, qword [rsp + 0x50]
0x00004731      4c89c7         mov rdi, r8
0x00004734      488d7001       lea rsi, [rax + 1]
0x00004738      e833f6ffff     call sym.factor_using_pollard_rho
0x0000473d      4885ed         test rbp, rbp
0x00004740      0f84dffeffff   je 0x4625                               ; /src:-206
0x00004746      4c89e6         mov rsi, r12
0x00004749      4889ef         mov rdi, rbp
0x0000474c      e89f110000     call sym.prime2_p
0x00004751      84c0           test al, al
0x00004753      0f85c5000000   jne 0x481e
0x00004759      488b742470     mov rsi, qword [rsp + 0x70]
0x0000475e      488b7c2458     mov rdi, qword [rsp + 0x58]
0x00004763      4889da         mov rdx, rbx
0x00004766      4d89e0         mov r8, r12
0x00004769      4889e9         mov rcx, rbp
0x0000476c      e88feaffff     call sym.mod2
0x00004771      488b542430     mov rdx, qword [rsp + 0x30]
0x00004776      488b742478     mov rsi, qword [rsp + 0x78]             ; /src:-203
0x0000477b      4d89e0         mov r8, r12
0x0000477e      488b7c2460     mov rdi, qword [rsp + 0x60]
0x00004783      4889e9         mov rcx, rbp
0x00004786      4889c3         mov rbx, rax
0x00004789      e872eaffff     call sym.mod2
0x0000478e      488bb4248000.  mov rsi, qword [rsp + 0x80]
0x00004796      488b7c2468     mov rdi, qword [rsp + 0x68]
0x0000479b      4c89fa         mov rdx, r15
0x0000479e      4d89e0         mov r8, r12
0x000047a1      4889e9         mov rcx, rbp
0x000047a4      4889442430     mov qword [rsp + 0x30], rax
0x000047a9      e852eaffff     call sym.mod2
0x000047ae      488b742470     mov rsi, qword [rsp + 0x70]
0x000047b3      4989c7         mov r15, rax
0x000047b6      e905fbffff     jmp 0x42c0
0x000047bb      0f1f440000     nop dword [rax + rax]
0x000047c0      488b7c2450     mov rdi, qword [rsp + 0x50]
0x000047c5      ba01000000     mov edx, 1
0x000047ca      4c89c6         mov rsi, r8
0x000047cd      e82edfffff     call sym.factor_insert_multiplicity
0x000047d2      e966ffffff     jmp 0x473d
0x000047d7      4839fd         cmp rbp, rdi
0x000047da      0f85d1fdffff   jne 0x45b1
0x000047e0      488b542428     mov rdx, qword [rsp + 0x28]
0x000047e5      488b4c2450     mov rcx, qword [rsp + 0x50]
0x000047ea      4c89e6         mov rsi, r12
0x000047ed      4889ef         mov rdi, rbp
0x000047f0      4883c201       add rdx, 1                              ; /src:-209
0x000047f4      e887f9ffff     call sym.factor_using_pollard_rho2
0x000047f9      e95cfeffff     jmp 0x465a
0x000047fe      6690           nop
0x00004800      31ed           xor ebp, ebp
0x00004802      e9f3feffff     jmp 0x46fa
0x00004807      488b542450     mov rdx, qword [rsp + 0x50]
0x0000480c      488b742428     mov rsi, qword [rsp + 0x28]
0x00004811      4c89e7         mov rdi, r12
0x00004814      e857f5ffff     call sym.factor_using_pollard_rho
0x00004819      e93cfeffff     jmp 0x465a
0x0000481e      488b7c2450     mov rdi, qword [rsp + 0x50]
0x00004823      4c89e2         mov rdx, r12
0x00004826      4889ee         mov rsi, rbp
0x00004829      e872e8ffff     call sym.factor_insert_large
0x0000482e      e927feffff     jmp 0x465a
0x00004833      488b442428     mov rax, qword [rsp + 0x28]
0x00004838      488b4c2450     mov rcx, qword [rsp + 0x50]
0x0000483d      4c89c6         mov rsi, r8
0x00004840      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x00004848      488d5001       lea rdx, [rax + 1]
0x0000484c      e82ff9ffff     call sym.factor_using_pollard_rho2
0x00004851      e9cffdffff     jmp 0x4625
0x00004856      e8c5d6ffff     call sym.imp.__stack_chk_fail
0x0000485b      0f1f440000     nop dword [rax + rax]
;-- factor:
0x00004860      4157           push r15
0x00004862      4156           push r14
0x00004864      4989f8         mov r8, rdi
0x00004867      4155           push r13
0x00004869      4154           push r12
0x0000486b      4989d5         mov r13, rdx
0x0000486e      55             push rbp
0x0000486f      53             push rbx
0x00004870      4889f3         mov rbx, rsi
0x00004873      4883ec38       sub rsp, 0x38
0x00004877      4885ff         test rdi, rdi
0x0000487a      c682fa000000.  mov byte [rdx + 0xfa], 0
0x00004881      48c742080000.  mov qword [rdx + 8], 0
0x00004889      7515           jne 0x48a0
0x0000488b      4883fe01       cmp rsi, 1
0x0000488f      770f           ja 0x48a0
0x00004891      4883c438       add rsp, 0x38
0x00004895      5b             pop rbx
0x00004896      5d             pop rbp
0x00004897      415c           pop r12
0x00004899      415d           pop r13                                 ; /src:-591
0x0000489b      415e           pop r14
0x0000489d      415f           pop r15
0x0000489f      c3             ret
0x000048a0      f6c301         test bl, 1
0x000048a3      0f84c7050000   je 0x4e70
0x000048a9      4d85c0         test r8, r8
0x000048ac      0f84e4050000   je 0x4e96
0x000048b2      488d0daf8700.  lea rcx, str.UUUUUUUU                   ; 0xd068 ; "UUUUUUUU\xcd\xcc\xcc\xcc\xcc\xcc\xcc\xcc33333333\xb7m\u06f6m\u06f6m\x92$I\x92$I\x92$\xa3\x8b.\xba\u888b.\xd1E\x17]t\xd1E\x17\xc5N\xec\xc4N\xec\xc4N\xb1\x13;\xb1\x13;\xb1\x13\xf1\xf0\xf0\xf0\xf0\xf0\xf0\xf0\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x1b\xcak(\xaf\xa1\xbc\x865\x94\xd7P^Cy\r\xa77\xbd\xe9Moz\xd3\x16\xb2\x90\x85,d!\v5\xc2rO#,\xf74\b\xcb=\x8d\xb0\xdc\xd3\b\xdf{\xef\xbd\xf7\xde{\xef\x10B\b!\x84\x10B\b\xad\x1bL\x91\u03fa\xc1\x14\xe4\xb3n0E>\xeb\x06\x19\x9c\x8f\xc1\xf9\x18\x9c\x8fp>\x06\xe7cp>\x06\x83\xbe\xa0/\xe8\v\xfa\x82\x05}A_\xd0\x17\xf4\x05\xcfF}g\xa3\xbe\xb3Q\xc9\x15\xc4\xe4\nbr\x05\x1dR\x13\x8c\xb7\xb2\xcf!M0\xde\xca>\x87\xd4\x04\xf3\u060a\xa0\xe1\xa4\xee\xcbA\xc3I\u0757\xc7V\x04\x15\x97\f\xc1:\u06bcO\xb0\x8e6\xefS\2\x04kL\xa4\a*g\xb7\xf0\xe5\xec\x16~5&\xd2\x03w\xa9'\xe3\xb7K=\x19Zas \xd1\n\x9b\x03\xf9\xf1\xe3\u01cf\x1f?~\x0e\x1c8p\xe0\u0001\x03\xaf\x167a~W\x8b\x9b#{\x06\xa2\u0491=\x03\xdbC.+\x06Jx\xa34u~\xed!\x97\x15\x03\xe9G?\xfa\u044f~\xf4\x05.p\x81\v\\xe0\x02\xa1\xa3\x02_\\xfd\xa0\xa3\xa3\x02_\\xfd\xa0\xa3\x02m\xb12|#\nL:]?[\xac\f\u07c8\x02W\x1bC\xd3\x1d\xec\xb7\xdaO \x95\x9c\x97E|\x02C\xac(\x8d\x8fL\xa0w\xec\x17bEi|d\x02e\tl\xdaO\x96\u0026\xf6\x93%\xb0i?Y\x02\x91\xc0\xdb\x0f\t\xbc\xfd\x90\x02o?$\xf0\xf6C\x02\x7f\xbf\xdf\xef\xf7\xfb\xfd~\x02\x81@ \x10\b\x04\x02+NH\u0273\x8c\xe8\x03\x15'\xa4\xe4YF\xf4\x01\xb9uy\a\x1c)\x1a\xe2\xa4h\x88?n]\xde\x01#gXp\xa9l\xef:9\u00c2Ke{\xd7\x01\xbd\xca\xe2\x8cv\x0f[\u07f28\xa3\xdd\xc3\u05b7\x01'\x7f\x93\xbf\xc9\xdf\xe4o\x90\r\xc8\x06d\x03\xb2\x01\xb5\x85\x06,\xe9\xe5O[\x1a\xb0\xa4\x97?m\xa1\x01\v\xb3\x1aE\x1c:i\x1f\x8d\"\x0e\x9d\xb4\x0f\x92\x01\x17\xa75\xdb'\xaa\a\x8d\x99\x04\xbb\n_n\x88\x01%cQ\r\xb3\x83#\x885\xcc\x0e\x8e \xd2z\x01{\xaeb\xd9\xf8fh\xedl|3\xb4v\x1fn\x01\x9d\xed\xf8\x10\xa4\xdcT4\x04)7\x15\xcd\x13j\x01?o\x93\xee2\xa6|\x1d\x9a\xb3\x06\xc5\xd3\x1eW\x01A\x8f\x94\x90S\x01\xbfp\xac\xfe@\x8f\x94\x90S\x01\r~\x13=\x9d\xdbk\xc9\xe7\xf6Zr\x88\xabL\x01\xf7\xc0F\xef\x8a\u0317&n\x06-;\x9eSI\x01[Whn\xa7\xf2\xe8\xc0yt\xe0=\u07d86\x01\x1f\xbbC\xdb\xdfcwh\x11/\t\b'\xe2%\x01\xcbD\xa1\x9b\x92\xea\x10\x1b\x88\r|\xc6p\xb4 \x01\udf0bG\xc0\xc4\x10\x1dD\x87\xfb\xb3\xf3.\x1e\x01Y\xd7\xdc\x1f\xeb\x9a\xfbc\xc0)\xca\b8E\x19\x01\x0f.{CO\xaa\xafd6\x03\xd3u\x8e5\x12\x01\x11\xf0\xfe\x10\xf0\xfe\x10\xf0\x0f\x01\xef\x0f\x01\xef\x0f\x013\n\x02\x9a\xeb\xfb\xcb(A@s}\x7f\x19\x05\x01\x01\xff"
0x000048b9      41be01000000   mov r14d, 1
0x000048bf      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x000048c9      41bc02000000   mov r12d, 2
0x000048cf      bd03000000     mov ebp, 3
0x000048d4      eb3c           jmp 0x4912
0x000048d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000048e0      4489f0         mov eax, r14d
0x000048e3      4c01e5         add rbp, r12
0x000048e6      4983c601       add r14, 1
0x000048ea      4883c110       add rcx, 0x10
0x000048ee      4d85c0         test r8, r8                             ; /src:-693
0x000048f1      0f84a9000000   je 0x49a0
0x000048f7      3d9b020000     cmp eax, 0x29b
0x000048fc      0f879e000000   ja 0x49a0
0x00004902      488d0557b400.  lea rax, obj.primes_diff                ; 0xfd60
0x00004909      4c8b49f8       mov r9, qword [rcx - 8]
0x0000490d      460fb62430     movzx r12d, byte [rax + r14]
0x00004912      4d89ca         mov r10, r9
0x00004915      4c0fafd3       imul r10, rbx
0x00004919      4c89d0         mov rax, r10
0x0000491c      48f7e5         mul rbp
0x0000491f      4939d0         cmp r8, rdx
0x00004922      72bc           jb 0x48e0
0x00004924      4d89c7         mov r15, r8
0x00004927      4c8b19         mov r11, qword [rcx]
0x0000492a      4929d7         sub r15, rdx
0x0000492d      4d0faff9       imul r15, r9
0x00004931      4d39df         cmp r15, r11
0x00004934      77aa           ja 0x48e0
0x00004936      ba01000000     mov edx, 1
0x0000493b      4889ee         mov rsi, rbp                            ; /src:-822
0x0000493e      4c89ef         mov rdi, r13
0x00004941      4c895c2420     mov qword [rsp + 0x20], r11
0x00004946      4c89542418     mov qword [rsp + 0x18], r10
0x0000494b      48894c2410     mov qword [rsp + 0x10], rcx
0x00004950      4c894c2408     mov qword [rsp + 8], r9
0x00004955      e8a6ddffff     call sym.factor_insert_multiplicity
0x0000495a      4c8b4c2408     mov r9, qword [rsp + 8]
0x0000495f      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004964      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00004969      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x0000496e      4c89ce         mov rsi, r9
0x00004971      490faff2       imul rsi, r10
0x00004975      4889f0         mov rax, rsi
0x00004978      48f7e5         mul rbp
0x0000497b      4c39fa         cmp rdx, r15                            ; /src:565
0x0000497e      7713           ja 0x4993
0x00004980      4c89f8         mov rax, r15
0x00004983      4829d0         sub rax, rdx
0x00004986      490fafc1       imul rax, r9
0x0000498a      4c39d8         cmp rax, r11
0x0000498d      0f86d9050000   jbe 0x4f6c
0x00004993      4d89f8         mov r8, r15
0x00004996      4c89d3         mov rbx, r10
0x00004999      e942ffffff     jmp 0x48e0
0x0000499e      6690           nop
0x000049a0      3d9b020000     cmp eax, 0x29b
0x000049a5      0f8725030000   ja 0x4cd0
0x000049ab      89c1           mov ecx, eax
0x000049ad      488d35ac8600.  lea rsi, obj.primes_dtab                ; 0xd060
0x000049b4      4889ca         mov rdx, rcx                            ; /src:582
0x000049b7      48c1e204       shl rdx, 4
0x000049bb      4889742408     mov qword [rsp + 8], rsi
0x000049c0      4801f2         add rdx, rsi
0x000049c3      4c8b12         mov r10, qword [rdx]
0x000049c6      4c8b5a08       mov r11, qword [rdx + 8]
0x000049ca      488d15cfb000.  lea rdx, obj.primes_diff8               ; 0xfaa0
0x000049d1      440fb6240a     movzx r12d, byte [rdx + rcx]
0x000049d6      4c8d3d83b300.  lea r15, obj.primes_diff                ; 0xfd60
0x000049dd      e9c6000000     jmp 0x4aa8
0x000049e2      660f1f440000   nop word [rax + rax]
0x000049e8      498b5610       mov rdx, qword [r14 + 0x10]
0x000049ec      480fafd3       imul rdx, rbx
0x000049f0      493b5618       cmp rdx, qword [r14 + 0x18]             ; /src:-951
0x000049f4      0f8626010000   jbe 0x4b20
0x000049fa      498b5620       mov rdx, qword [r14 + 0x20]
0x000049fe      480fafd3       imul rdx, rbx
0x00004a02      493b5628       cmp rdx, qword [r14 + 0x28]
0x00004a06      0f8674010000   jbe 0x4b80
0x00004a0c      498b5630       mov rdx, qword [r14 + 0x30]
0x00004a10      480fafd3       imul rdx, rbx
0x00004a14      49395638       cmp qword [r14 + 0x38], rdx
0x00004a18      0f83ca010000   jae 0x4be8
0x00004a1e      498b5640       mov rdx, qword [r14 + 0x40]
0x00004a22      480fafd3       imul rdx, rbx
0x00004a26      49395648       cmp qword [r14 + 0x48], rdx
0x00004a2a      0f8330020000   jae 0x4c60
0x00004a30      498b5650       mov rdx, qword [r14 + 0x50]
0x00004a34      480fafd3       imul rdx, rbx
0x00004a38      493b5658       cmp rdx, qword [r14 + 0x58]             ; /src:-1078
0x00004a3c      0f86be030000   jbe 0x4e00
0x00004a42      498b5660       mov rdx, qword [r14 + 0x60]
0x00004a46      480fafd3       imul rdx, rbx
0x00004a4a      49395668       cmp qword [r14 + 0x68], rdx             ; /src:-1077
0x00004a4e      0f833c030000   jae 0x4d90
0x00004a54      498b5670       mov rdx, qword [r14 + 0x70]
0x00004a58      480fafd3       imul rdx, rbx
0x00004a5c      493b5678       cmp rdx, qword [r14 + 0x78]
0x00004a60      0f86ba020000   jbe 0x4d20
0x00004a66      4c01e5         add rbp, r12
0x00004a69      4889ea         mov rdx, rbp
0x00004a6c      480fafd5       imul rdx, rbp
0x00004a70      4839d3         cmp rbx, rdx
0x00004a73      0f8257020000   jb 0x4cd0
0x00004a79      83c008         add eax, 8
0x00004a7c      3d9b020000     cmp eax, 0x29b                          ; /src:-1100
0x00004a81      0f8749020000   ja 0x4cd0
0x00004a87      89c1           mov ecx, eax
0x00004a89      488d3510b000.  lea rsi, obj.primes_diff8               ; 0xfaa0
0x00004a90      4889ca         mov rdx, rcx
0x00004a93      48c1e204       shl rdx, 4
0x00004a97      4803542408     add rdx, qword [rsp + 8]                ; /src:-1207
0x00004a9c      440fb6240e     movzx r12d, byte [rsi + rcx]            ; /src:-1205
0x00004aa1      4c8b12         mov r10, qword [rdx]
0x00004aa4      4c8b5a08       mov r11, qword [rdx + 8]
0x00004aa8      4889da         mov rdx, rbx
0x00004aab      488b742408     mov rsi, qword [rsp + 8]
0x00004ab0      48c1e104       shl rcx, 4
0x00004ab4      490fafd2       imul rdx, r10
0x00004ab8      4c8d340e       lea r14, [rsi + rcx]
0x00004abc      4c39da         cmp rdx, r11
0x00004abf      0f8723ffffff   ja 0x49e8
0x00004ac5      4889d3         mov rbx, rdx
0x00004ac8      4889ee         mov rsi, rbp
0x00004acb      ba01000000     mov edx, 1
0x00004ad0      4c89ef         mov rdi, r13
0x00004ad3      4c89442428     mov qword [rsp + 0x28], r8              ; /src:-1287
0x00004ad8      4c895c2420     mov qword [rsp + 0x20], r11
0x00004add      4c89542418     mov qword [rsp + 0x18], r10             ; /src:-1276
0x00004ae2      89442410       mov dword [rsp + 0x10], eax
0x00004ae6      e815dcffff     call sym.factor_insert_multiplicity
0x00004aeb      4c8b542418     mov r10, qword [rsp + 0x18]
0x00004af0      4889da         mov rdx, rbx
0x00004af3      4c8b5c2420     mov r11, qword [rsp + 0x20]
0x00004af8      8b442410       mov eax, dword [rsp + 0x10]
0x00004afc      4c8b442428     mov r8, qword [rsp + 0x28]
0x00004b01      490fafd2       imul rdx, r10
0x00004b05      4c39da         cmp rdx, r11
0x00004b08      76bb           jbe 0x4ac5
0x00004b0a      498b5610       mov rdx, qword [r14 + 0x10]
0x00004b0e      480fafd3       imul rdx, rbx
0x00004b12      493b5618       cmp rdx, qword [r14 + 0x18]
0x00004b16      0f87defeffff   ja 0x49fa
0x00004b1c      0f1f4000       nop dword [rax]
0x00004b20      8d7001         lea esi, [rax + 1]
0x00004b23      410fb63437     movzx esi, byte [r15 + rsi]
0x00004b28      488d0c2e       lea rcx, [rsi + rbp]
0x00004b2c      48894c2420     mov qword [rsp + 0x20], rcx
0x00004b31      488b742420     mov rsi, qword [rsp + 0x20]
0x00004b36      4889d3         mov rbx, rdx
0x00004b39      4c89ef         mov rdi, r13
0x00004b3c      ba01000000     mov edx, 1
0x00004b41      4c89442418     mov qword [rsp + 0x18], r8
0x00004b46      89442410       mov dword [rsp + 0x10], eax
0x00004b4a      e8b1dbffff     call sym.factor_insert_multiplicity
0x00004b4f      498b5610       mov rdx, qword [r14 + 0x10]
0x00004b53      8b442410       mov eax, dword [rsp + 0x10]
0x00004b57      4c8b442418     mov r8, qword [rsp + 0x18]              ; /src:196
0x00004b5c      480fafd3       imul rdx, rbx
0x00004b60      493b5618       cmp rdx, qword [r14 + 0x18]
0x00004b64      76cb           jbe 0x4b31
0x00004b66      498b5620       mov rdx, qword [r14 + 0x20]
0x00004b6a      480fafd3       imul rdx, rbx                           ; /src:-1279
0x00004b6e      493b5628       cmp rdx, qword [r14 + 0x28]
0x00004b72      0f8794feffff   ja 0x4a0c                               ; /src:-1276
0x00004b78      0f1f84000000.  nop dword [rax + rax]
0x00004b80      8d7001         lea esi, [rax + 1]                      ; /src:-1279
0x00004b83      8d7802         lea edi, [rax + 2]
0x00004b86      410fb63437     movzx esi, byte [r15 + rsi]
0x00004b8b      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004b90      4801fe         add rsi, rdi
0x00004b93      488d0c2e       lea rcx, [rsi + rbp]                    ; /src:-1276
0x00004b97      48894c2420     mov qword [rsp + 0x20], rcx
0x00004b9c      488b742420     mov rsi, qword [rsp + 0x20]
0x00004ba1      4889d3         mov rbx, rdx
0x00004ba4      4c89ef         mov rdi, r13
0x00004ba7      ba01000000     mov edx, 1
0x00004bac      4c89442418     mov qword [rsp + 0x18], r8
0x00004bb1      89442410       mov dword [rsp + 0x10], eax
0x00004bb5      e846dbffff     call sym.factor_insert_multiplicity
0x00004bba      498b5620       mov rdx, qword [r14 + 0x20]
0x00004bbe      8b442410       mov eax, dword [rsp + 0x10]             ; /src:185
0x00004bc2      4c8b442418     mov r8, qword [rsp + 0x18]
0x00004bc7      480fafd3       imul rdx, rbx
0x00004bcb      493b5628       cmp rdx, qword [r14 + 0x28]
0x00004bcf      76cb           jbe 0x4b9c
0x00004bd1      498b5630       mov rdx, qword [r14 + 0x30]
0x00004bd5      480fafd3       imul rdx, rbx
0x00004bd9      49395638       cmp qword [r14 + 0x38], rdx
0x00004bdd      0f823bfeffff   jb 0x4a1e
0x00004be3      0f1f440000     nop dword [rax + rax]
0x00004be8      8d7001         lea esi, [rax + 1]
0x00004beb      8d7803         lea edi, [rax + 3]
0x00004bee      410fb63437     movzx esi, byte [r15 + rsi]
0x00004bf3      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004bf8      4801fe         add rsi, rdi
0x00004bfb      8d7802         lea edi, [rax + 2]
0x00004bfe      4801ee         add rsi, rbp
0x00004c01      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004c06      488d0c3e       lea rcx, [rsi + rdi]
0x00004c0a      48894c2420     mov qword [rsp + 0x20], rcx
0x00004c0f      488b742420     mov rsi, qword [rsp + 0x20]
0x00004c14      4889d3         mov rbx, rdx
0x00004c17      4c89ef         mov rdi, r13
0x00004c1a      ba01000000     mov edx, 1                              ; /src:-838
0x00004c1f      4c89442418     mov qword [rsp + 0x18], r8
0x00004c24      89442410       mov dword [rsp + 0x10], eax
0x00004c28      e8d3daffff     call sym.factor_insert_multiplicity
0x00004c2d      498b5630       mov rdx, qword [r14 + 0x30]
0x00004c31      8b442410       mov eax, dword [rsp + 0x10]
0x00004c35      4c8b442418     mov r8, qword [rsp + 0x18]
0x00004c3a      480fafd3       imul rdx, rbx
0x00004c3e      493b5638       cmp rdx, qword [r14 + 0x38]
0x00004c42      76cb           jbe 0x4c0f                              ; /src:-835
0x00004c44      498b5640       mov rdx, qword [r14 + 0x40]
0x00004c48      480fafd3       imul rdx, rbx
0x00004c4c      49395648       cmp qword [r14 + 0x48], rdx
0x00004c50      0f82dafdffff   jb 0x4a30
0x00004c56      662e0f1f8400.  nop word cs:[rax + rax]
0x00004c60      8d4801         lea ecx, [rax + 1]
0x00004c63      448d5005       lea r10d, [rax + 5]
0x00004c67      4889d3         mov rbx, rdx
0x00004c6a      894c2410       mov dword [rsp + 0x10], ecx
0x00004c6e      8b542410       mov edx, dword [rsp + 0x10]
0x00004c72      4889ee         mov rsi, rbp
0x00004c75      89d7           mov edi, edx
0x00004c77      83c201         add edx, 1
0x00004c7a      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004c7f      4801fe         add rsi, rdi
0x00004c82      4139d2         cmp r10d, edx
0x00004c85      75ee           jne 0x4c75
0x00004c87      ba01000000     mov edx, 1
0x00004c8c      4c89ef         mov rdi, r13
0x00004c8f      4489542428     mov dword [rsp + 0x28], r10d
0x00004c94      4c89442420     mov qword [rsp + 0x20], r8
0x00004c99      89442418       mov dword [rsp + 0x18], eax
0x00004c9d      e85edaffff     call sym.factor_insert_multiplicity
0x00004ca2      498b5640       mov rdx, qword [r14 + 0x40]
0x00004ca6      8b442418       mov eax, dword [rsp + 0x18]
0x00004caa      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004caf      448b542428     mov r10d, dword [rsp + 0x28]            ; /src:-830
0x00004cb4      480fafd3       imul rdx, rbx                           ; /src:-833
0x00004cb8      493b5648       cmp rdx, qword [r14 + 0x48]
0x00004cbc      0f876efdffff   ja 0x4a30
0x00004cc2      4889d3         mov rbx, rdx
0x00004cc5      eba7           jmp 0x4c6e
0x00004cc7      660f1f840000.  nop word [rax + rax]
0x00004cd0      4d85c0         test r8, r8
0x00004cd3      0f85f7010000   jne 0x4ed0
0x00004cd9      4883fb01       cmp rbx, 1
0x00004cdd      0f86aefbffff   jbe 0x4891
0x00004ce3      31ff           xor edi, edi                            ; /src:-830
0x00004ce5      4889de         mov rsi, rbx
0x00004ce8      4c89442408     mov qword [rsp + 8], r8
0x00004ced      e8fe0b0000     call sym.prime2_p
0x00004cf2      84c0           test al, al
0x00004cf4      4c8b442408     mov r8, qword [rsp + 8]
0x00004cf9      0f8551020000   jne 0x4f50
0x00004cff      4883c438       add rsp, 0x38
0x00004d03      4c89ea         mov rdx, r13
0x00004d06      4889df         mov rdi, rbx
0x00004d09      5b             pop rbx
0x00004d0a      5d             pop rbp
0x00004d0b      415c           pop r12
0x00004d0d      415d           pop r13
0x00004d0f      415e           pop r14
0x00004d11      415f           pop r15
0x00004d13      be01000000     mov esi, 1
0x00004d18      e953f0ffff     jmp sym.factor_using_pollard_rho
0x00004d1d      0f1f00         nop dword [rax]
0x00004d20      8d4801         lea ecx, [rax + 1]
0x00004d23      448d5008       lea r10d, [rax + 8]
0x00004d27      4889d3         mov rbx, rdx
0x00004d2a      894c2410       mov dword [rsp + 0x10], ecx
0x00004d2e      8b542410       mov edx, dword [rsp + 0x10]
0x00004d32      4889ee         mov rsi, rbp
0x00004d35      0f1f00         nop dword [rax]
0x00004d38      89d7           mov edi, edx
0x00004d3a      83c201         add edx, 1                              ; /src:-836
0x00004d3d      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004d42      4801fe         add rsi, rdi
0x00004d45      4139d2         cmp r10d, edx
0x00004d48      75ee           jne 0x4d38
0x00004d4a      ba01000000     mov edx, 1                              ; /src:-814
0x00004d4f      4c89ef         mov rdi, r13
0x00004d52      4489542428     mov dword [rsp + 0x28], r10d
0x00004d57      4c89442420     mov qword [rsp + 0x20], r8
0x00004d5c      89442418       mov dword [rsp + 0x18], eax
0x00004d60      e89bd9ffff     call sym.factor_insert_multiplicity
0x00004d65      498b5670       mov rdx, qword [r14 + 0x70]
0x00004d69      8b442418       mov eax, dword [rsp + 0x18]
0x00004d6d      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004d72      448b542428     mov r10d, dword [rsp + 0x28]
0x00004d77      480fafd3       imul rdx, rbx
0x00004d7b      493b5678       cmp rdx, qword [r14 + 0x78]
0x00004d7f      0f87e1fcffff   ja 0x4a66
0x00004d85      4889d3         mov rbx, rdx
0x00004d88      eba4           jmp 0x4d2e
0x00004d8a      660f1f440000   nop word [rax + rax]
0x00004d90      8d4801         lea ecx, [rax + 1]
0x00004d93      448d5007       lea r10d, [rax + 7]
0x00004d97      4889d3         mov rbx, rdx
0x00004d9a      894c2410       mov dword [rsp + 0x10], ecx
0x00004d9e      8b542410       mov edx, dword [rsp + 0x10]
0x00004da2      4889ee         mov rsi, rbp                            ; /src:-799
0x00004da5      0f1f00         nop dword [rax]
0x00004da8      89d7           mov edi, edx
0x00004daa      83c201         add edx, 1                              ; /src:-792
0x00004dad      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004db2      4801fe         add rsi, rdi
0x00004db5      4139d2         cmp r10d, edx
0x00004db8      75ee           jne 0x4da8
0x00004dba      ba01000000     mov edx, 1
0x00004dbf      4c89ef         mov rdi, r13
0x00004dc2      4489542428     mov dword [rsp + 0x28], r10d
0x00004dc7      4c89442420     mov qword [rsp + 0x20], r8
0x00004dcc      89442418       mov dword [rsp + 0x18], eax
0x00004dd0      e82bd9ffff     call sym.factor_insert_multiplicity
0x00004dd5      498b5660       mov rdx, qword [r14 + 0x60]
0x00004dd9      8b442418       mov eax, dword [rsp + 0x18]
0x00004ddd      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004de2      448b542428     mov r10d, dword [rsp + 0x28]
0x00004de7      480fafd3       imul rdx, rbx
0x00004deb      493b5668       cmp rdx, qword [r14 + 0x68]
0x00004def      0f875ffcffff   ja 0x4a54
0x00004df5      4889d3         mov rbx, rdx
0x00004df8      eba4           jmp 0x4d9e
0x00004dfa      660f1f440000   nop word [rax + rax]
0x00004e00      8d4801         lea ecx, [rax + 1]
0x00004e03      448d5006       lea r10d, [rax + 6]
0x00004e07      4889d3         mov rbx, rdx
0x00004e0a      894c2410       mov dword [rsp + 0x10], ecx
0x00004e0e      8b542410       mov edx, dword [rsp + 0x10]
0x00004e12      4889ee         mov rsi, rbp
0x00004e15      89d7           mov edi, edx
0x00004e17      83c201         add edx, 1
0x00004e1a      410fb63c3f     movzx edi, byte [r15 + rdi]
0x00004e1f      4801fe         add rsi, rdi
0x00004e22      4139d2         cmp r10d, edx
0x00004e25      75ee           jne 0x4e15
0x00004e27      ba01000000     mov edx, 1
0x00004e2c      4c89ef         mov rdi, r13
0x00004e2f      4489542428     mov dword [rsp + 0x28], r10d
0x00004e34      4c89442420     mov qword [rsp + 0x20], r8
0x00004e39      89442418       mov dword [rsp + 0x18], eax
0x00004e3d      e8bed8ffff     call sym.factor_insert_multiplicity
0x00004e42      498b5650       mov rdx, qword [r14 + 0x50]
0x00004e46      8b442418       mov eax, dword [rsp + 0x18]
0x00004e4a      4c8b442420     mov r8, qword [rsp + 0x20]              ; /src:-776
0x00004e4f      448b542428     mov r10d, dword [rsp + 0x28]
0x00004e54      480fafd3       imul rdx, rbx
0x00004e58      493b5658       cmp rdx, qword [r14 + 0x58]
0x00004e5c      0f87e0fbffff   ja 0x4a42
0x00004e62      4889d3         mov rbx, rdx
0x00004e65      eba7           jmp 0x4e0e
0x00004e67      660f1f840000.  nop word [rax + rax]
0x00004e70      4885db         test rbx, rbx
0x00004e73      0f8597000000   jne 0x4f10
0x00004e79      490fbcc8       bsf rcx, r8
0x00004e7d      8d5140         lea edx, [rcx + 0x40]
0x00004e80      4c89c3         mov rbx, r8
0x00004e83      be02000000     mov esi, 2
0x00004e88      4c89ef         mov rdi, r13
0x00004e8b      48d3eb         shr rbx, cl
0x00004e8e      e86dd8ffff     call sym.factor_insert_multiplicity
0x00004e93      4531c0         xor r8d, r8d
0x00004e96      488d0dc38100.  lea rcx, obj.primes_dtab                ; 0xd060
0x00004e9d      41bc1a000000   mov r12d, 0x1a
0x00004ea3      49bb55555555.  movabs r11, 0x5555555555555555          ; 'UUUUUUUU'
0x00004ead      49baabaaaaaa.  movabs r10, 0xaaaaaaaaaaaaaaab
0x00004eb7      bd03000000     mov ebp, 3
0x00004ebc      31c0           xor eax, eax
0x00004ebe      48894c2408     mov qword [rsp + 8], rcx
0x00004ec3      31c9           xor ecx, ecx
0x00004ec5      e90cfbffff     jmp 0x49d6
0x00004eca      660f1f440000   nop word [rax + rax]
0x00004ed0      4c89c7         mov rdi, r8
0x00004ed3      4889de         mov rsi, rbx
0x00004ed6      4c89442408     mov qword [rsp + 8], r8
0x00004edb      e8100a0000     call sym.prime2_p
0x00004ee0      84c0           test al, al
0x00004ee2      4c8b442408     mov r8, qword [rsp + 8]
0x00004ee7      7567           jne 0x4f50
0x00004ee9      4883c438       add rsp, 0x38
0x00004eed      4c89e9         mov rcx, r13
0x00004ef0      4889de         mov rsi, rbx
0x00004ef3      5b             pop rbx
0x00004ef4      5d             pop rbp
0x00004ef5      415c           pop r12
0x00004ef7      415d           pop r13
0x00004ef9      415e           pop r14
0x00004efb      415f           pop r15
0x00004efd      ba01000000     mov edx, 1
0x00004f02      4c89c7         mov rdi, r8
0x00004f05      e976f2ffff     jmp sym.factor_using_pollard_rho2
0x00004f0a      660f1f440000   nop word [rax + rax]                    ; /src:-773
0x00004f10      b940000000     mov ecx, 0x40                           ; segment.PHDR
0x00004f15      4c89c0         mov rax, r8
0x00004f18      be02000000     mov esi, 2
0x00004f1d      480fbcd3       bsf rdx, rbx
0x00004f21      29d1           sub ecx, edx
0x00004f23      4c89ef         mov rdi, r13
0x00004f26      48d3e0         shl rax, cl
0x00004f29      89d1           mov ecx, edx
0x00004f2b      49d3e8         shr r8, cl
0x00004f2e      48d3eb         shr rbx, cl
0x00004f31      4c89442408     mov qword [rsp + 8], r8
0x00004f36      4809c3         or rbx, rax
0x00004f39      e8c2d7ffff     call sym.factor_insert_multiplicity
0x00004f3e      4c8b442408     mov r8, qword [rsp + 8]
0x00004f43      e961f9ffff     jmp 0x48a9
0x00004f48      0f1f84000000.  nop dword [rax + rax]
0x00004f50      4883c438       add rsp, 0x38
0x00004f54      4889da         mov rdx, rbx
0x00004f57      4c89ef         mov rdi, r13
0x00004f5a      5b             pop rbx
0x00004f5b      5d             pop rbp
0x00004f5c      415c           pop r12
0x00004f5e      415d           pop r13
0x00004f60      415e           pop r14                                 ; /src:-753
0x00004f62      415f           pop r15
0x00004f64      4c89c6         mov rsi, r8
0x00004f67      e934e1ffff     jmp sym.factor_insert_large
0x00004f6c      4989c7         mov r15, rax                            ; /src:-754
0x00004f6f      4989f2         mov r10, rsi
0x00004f72      e9bff9ffff     jmp 0x4936
0x00004f77      660f1f840000.  nop word [rax + rax]
;-- prime_p.part.4:
0x00004f80      4157           push r15
0x00004f82      4156           push r14
0x00004f84      4155           push r13
0x00004f86      4154           push r12
0x00004f88      4c8d67ff       lea r12, [rdi - 1]
0x00004f8c      55             push rbp
0x00004f8d      53             push rbx
0x00004f8e      4889fb         mov rbx, rdi
0x00004f91      4881ec480100.  sub rsp, 0x148
0x00004f98      64488b042528.  mov rax, qword fs:[0x28]
0x00004fa1      488984243801.  mov qword [rsp + 0x138], rax
0x00004fa9      31c0           xor eax, eax
0x00004fab      41f6c401       test r12b, 1
0x00004faf      4c892424       mov qword [rsp], r12
0x00004fb3      0f85b3020000   jne 0x526c
0x00004fb9      0f1f80000000.  nop dword [rax]
0x00004fc0      49d1ec         shr r12, 1
0x00004fc3      83c001         add eax, 1
0x00004fc6      41f6c401       test r12b, 1
0x00004fca      74f4           je 0x4fc0                               ; /src:-742
0x00004fcc      89442414       mov dword [rsp + 0x14], eax
0x00004fd0      4889d8         mov rax, rbx
0x00004fd3      488d15068000.  lea rdx, obj.binvert_table              ; 0xcfe0
0x00004fda      4889de         mov rsi, rbx
0x00004fdd      48d1e8         shr rax, 1
0x00004fe0      bf40000000     mov edi, 0x40                           ; segment.PHDR
0x00004fe5      4531d2         xor r10d, r10d
0x00004fe8      83e07f         and eax, 0x7f
0x00004feb      b901000000     mov ecx, 1
0x00004ff0      0fb60402       movzx eax, byte [rdx + rax]
0x00004ff4      488d1400       lea rdx, [rax + rax]
0x00004ff8      480fafc0       imul rax, rax
0x00004ffc      480fafc3       imul rax, rbx
0x00005000      4829c2         sub rdx, rax
0x00005003      488d0412       lea rax, [rdx + rdx]
0x00005007      480fafd2       imul rdx, rdx
0x0000500b      480fafd3       imul rdx, rbx
0x0000500f      4829d0         sub rax, rdx
0x00005012      4c8d3400       lea r14, [rax + rax]
0x00005016      480fafc0       imul rax, rax
0x0000501a      480fafc3       imul rax, rbx
0x0000501e      4929c6         sub r14, rax
0x00005021      31c0           xor eax, eax
0x00005023      0f1f440000     nop dword [rax + rax]
0x00005028      4889f2         mov rdx, rsi
0x0000502b      48d1e8         shr rax, 1
0x0000502e      48d1ee         shr rsi, 1
0x00005031      48c1e23f       shl rdx, 0x3f
0x00005035      4809d0         or rax, rdx
0x00005038      4839ce         cmp rsi, rcx
0x0000503b      7207           jb 0x5044
0x0000503d      750b           jne 0x504a
0x0000503f      4c39d0         cmp rax, r10
0x00005042      7706           ja 0x504a
0x00005044      4929c2         sub r10, rax
0x00005047      4819f1         sbb rcx, rsi
0x0000504a      83ef01         sub edi, 1
0x0000504d      75d9           jne 0x5028                              ; /src:-735
0x0000504f      4889d8         mov rax, rbx
0x00005052      4531db         xor r11d, r11d
0x00005055      448b442414     mov r8d, dword [rsp + 0x14]
0x0000505a      4c29d0         sub rax, r10
0x0000505d      4d89d1         mov r9, r10
0x00005060      4c89e1         mov rcx, r12
0x00005063      4c39d0         cmp rax, r10
0x00005066      4c89f6         mov rsi, r14
0x00005069      4889df         mov rdi, rbx
0x0000506c      410f97c3       seta r11b
0x00005070      4c89542408     mov qword [rsp + 8], r10
0x00005075      49f7db         neg r11
0x00005078      4c89d8         mov rax, r11
0x0000507b      4f8d1c12       lea r11, [r10 + r10]
0x0000507f      4821d8         and rax, rbx
0x00005082      4929db         sub r11, rbx
0x00005085      4e8d3c18       lea r15, [rax + r11]                    ; /src:-737
0x00005089      4c89fa         mov rdx, r15
0x0000508c      e8efd7ffff     call sym.millerrabin
0x00005091      84c0           test al, al
0x00005093      8844242f       mov byte [rsp + 0x2f], al
0x00005097      0f8483010000   je 0x5220
0x0000509d      488d6c2430     lea rbp, [rsp + 0x30]
0x000050a2      488b3424       mov rsi, qword [rsp]
0x000050a6      31ff           xor edi, edi
0x000050a8      4c8d2db1ac00.  lea r13, obj.primes_diff                ; 0xfd60
0x000050af      4889ea         mov rdx, rbp
0x000050b2      48896c2420     mov qword [rsp + 0x20], rbp
0x000050b7      e8a4f7ffff     call sym.factor
0x000050bc      0fb684242a01.  movzx eax, byte [rsp + 0x12a]
0x000050c4      4c8b542408     mov r10, qword [rsp + 8]
0x000050c9      4c89642418     mov qword [rsp + 0x18], r12
0x000050ce      4d89d4         mov r12, r10
0x000050d1      4d89fa         mov r10, r15
0x000050d4      89442428       mov dword [rsp + 0x28], eax
0x000050d8      83e801         sub eax, 1
0x000050db      488d44c510     lea rax, [rbp + rax*8 + 0x10]
0x000050e0      bd02000000     mov ebp, 2
0x000050e5      4989c7         mov r15, rax
0x000050e8      0f1f84000000.  nop dword [rax + rax]
0x000050f0      8b442428       mov eax, dword [rsp + 0x28]
0x000050f4      85c0           test eax, eax
0x000050f6      0f84f4000000   je 0x51f0
0x000050fc      488b442420     mov rax, qword [rsp + 0x20]
0x00005101      48896c2408     mov qword [rsp + 8], rbp
0x00005106      4c8d5810       lea r11, [rax + 0x10]
0x0000510a      4c89dd         mov rbp, r11
0x0000510d      4d89d3         mov r11, r10
0x00005110      488b0424       mov rax, qword [rsp]
0x00005114      31d2           xor edx, edx
0x00005116      4d89e0         mov r8, r12
0x00005119      4c89f1         mov rcx, r14
0x0000511c      4c89df         mov rdi, r11
0x0000511f      48f77500       div qword [rbp]
0x00005123      4889da         mov rdx, rbx
0x00005126      4889c6         mov rsi, rax
0x00005129      e8e2d6ffff     call sym.powm
0x0000512e      4939ef         cmp r15, rbp
0x00005131      0f84a1000000   je 0x51d8
0x00005137      4883c508       add rbp, 8
0x0000513b      4c39e0         cmp rax, r12
0x0000513e      75d0           jne 0x5110
0x00005140      488b6c2408     mov rbp, qword [rsp + 8]
0x00005145      0f1f00         nop dword [rax]
0x00005148      410fb64500     movzx eax, byte [r13]
0x0000514d      4801c5         add rbp, rax
0x00005150      4c89e0         mov rax, r12
0x00005153      48f7e5         mul rbp
0x00005156      4885d2         test rdx, rdx
0x00005159      4989c2         mov r10, rax
0x0000515c      0f85c5000000   jne 0x5227
0x00005162      31d2           xor edx, edx
0x00005164      48f7f3         div rbx
0x00005167      4989d2         mov r10, rdx
0x0000516a      448b442414     mov r8d, dword [rsp + 0x14]
0x0000516f      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00005174      4d89e1         mov r9, r12
0x00005177      4c89d2         mov rdx, r10
0x0000517a      4c89f6         mov rsi, r14
0x0000517d      4889df         mov rdi, rbx
0x00005180      4c89542408     mov qword [rsp + 8], r10
0x00005185      e8f6d6ffff     call sym.millerrabin
0x0000518a      84c0           test al, al
0x0000518c      0f848e000000   je 0x5220
0x00005192      488d0563ae00.  lea rax, [0x0000fffc]                   ; /src:-699
0x00005199      4983c501       add r13, 1
0x0000519d      4c8b542408     mov r10, qword [rsp + 8]
0x000051a2      4c39e8         cmp rax, r13
0x000051a5      0f8545ffffff   jne 0x50f0
0x000051ab      488d35167900.  lea rsi, str.Lucas_prime_test_failure.__This_should_not_happen ; 0xcac8 ; "Lucas prime test failure.  This should not happen"
0x000051b2      ba05000000     mov edx, 5
0x000051b7      31ff           xor edi, edi
0x000051b9      e822cdffff     call sym.imp.dcgettext
0x000051be      31f6           xor esi, esi
0x000051c0      4889c2         mov rdx, rax
0x000051c3      31ff           xor edi, edi
0x000051c5      31c0           xor eax, eax
0x000051c7      e814d0ffff     call sym.imp.error
0x000051cc      e80fccffff     call sym.imp.abort
0x000051d1      0f1f80000000.  nop dword [rax]
0x000051d8      4c39e0         cmp rax, r12
0x000051db      488b6c2408     mov rbp, qword [rsp + 8]
0x000051e0      0f8462ffffff   je 0x5148
0x000051e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000051f0      488b9c243801.  mov rbx, qword [rsp + 0x138]
0x000051f8      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005201      0fb644242f     movzx eax, byte [rsp + 0x2f]
0x00005206      7575           jne 0x527d
0x00005208      4881c4480100.  add rsp, 0x148
0x0000520f      5b             pop rbx
0x00005210      5d             pop rbp
0x00005211      415c           pop r12
0x00005213      415d           pop r13
0x00005215      415e           pop r14
0x00005217      415f           pop r15
0x00005219      c3             ret
0x0000521a      660f1f440000   nop word [rax + rax]
0x00005220      c644242f00     mov byte [rsp + 0x2f], 0
0x00005225      ebc9           jmp 0x51f0                              ; /src:-697
0x00005227      4839d3         cmp rbx, rdx
0x0000522a      7656           jbe 0x5282
0x0000522c      4889de         mov rsi, rbx
0x0000522f      bf40000000     mov edi, 0x40                           ; segment.PHDR
0x00005234      31c9           xor ecx, ecx
0x00005236      662e0f1f8400.  nop word cs:[rax + rax]
0x00005240      4889f0         mov rax, rsi
0x00005243      48d1e9         shr rcx, 1
0x00005246      48d1ee         shr rsi, 1
0x00005249      48c1e03f       shl rax, 0x3f
0x0000524d      4809c1         or rcx, rax
0x00005250      4839d6         cmp rsi, rdx
0x00005253      7207           jb 0x525c
0x00005255      750b           jne 0x5262
0x00005257      4c39d1         cmp rcx, r10
0x0000525a      7706           ja 0x5262
0x0000525c      4929ca         sub r10, rcx
0x0000525f      4819f2         sbb rdx, rsi
0x00005262      83ef01         sub edi, 1
0x00005265      75d9           jne 0x5240
0x00005267      e9fefeffff     jmp 0x516a
0x0000526c      4c8b2424       mov r12, qword [rsp]
0x00005270      c74424140000.  mov dword [rsp + 0x14], 0
0x00005278      e953fdffff     jmp 0x4fd0
0x0000527d      e89eccffff     call sym.imp.__stack_chk_fail
0x00005282      488d0d3f7d00.  lea rcx, obj.__PRETTY_FUNCTION__.8834   ; 0xcfc8 ; "prime_p"
0x00005289      488d35b87700.  lea rsi, str..._coreutils_8.31_src_factor.c ; 0xca48 ; "../coreutils-8.31/src/factor.c"
0x00005290      488d3d727b00.  lea rdi, str.s1_____n                   ; 0xce09 ; "(s1) < (n)"
0x00005297      baf4040000     mov edx, 0x4f4
0x0000529c      e83fcdffff     call sym.imp.__assert_fail
0x000052a1      0f1f440000     nop dword [rax + rax]
0x000052a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- prime2_p.part.5:
0x000052b0      4157           push r15
0x000052b2      4156           push r14
0x000052b4      4989f7         mov r15, rsi
0x000052b7      4155           push r13
0x000052b9      4154           push r12
0x000052bb      55             push rbp
0x000052bc      53             push rbx
0x000052bd      4889fb         mov rbx, rdi
0x000052c0      4881ec080200.  sub rsp, 0x208
0x000052c7      64488b042528.  mov rax, qword fs:[0x28]
0x000052d0      48898424f801.  mov qword [rsp + 0x1f8], rax
0x000052d8      31c0           xor eax, eax
0x000052da      31c0           xor eax, eax
0x000052dc      4885f6         test rsi, rsi
0x000052df      0f94c0         sete al
0x000052e2      4829c7         sub rdi, rax
0x000052e5      4889f8         mov rax, rdi
0x000052e8      48897c2428     mov qword [rsp + 0x28], rdi
0x000052ed      4889f7         mov rdi, rsi
0x000052f0      4883ef01       sub rdi, 1
0x000052f4      48897c2418     mov qword [rsp + 0x18], rdi
0x000052f9      0f8581050000   jne 0x5880
0x000052ff      480fbcc8       bsf rcx, rax
0x00005303      48d3e8         shr rax, cl
0x00005306      48c784249800.  mov qword [rsp + 0x98], 0
0x00005312      488984249000.  mov qword [rsp + 0x90], rax
0x0000531a      8d4140         lea eax, [rcx + 0x40]
0x0000531d      89442470       mov dword [rsp + 0x70], eax
0x00005321      4c89f8         mov rax, r15                            ; /src:-682
0x00005324      488d3db57c00.  lea rdi, obj.binvert_table              ; 0xcfe0
0x0000532b      48d1e8         shr rax, 1
0x0000532e      83e07f         and eax, 0x7f
0x00005331      0fb60407       movzx eax, byte [rdi + rax]
0x00005335      488d1400       lea rdx, [rax + rax]
0x00005339      480fafc0       imul rax, rax
0x0000533d      490fafc7       imul rax, r15                           ; /src:-684
0x00005341      4829c2         sub rdx, rax
0x00005344      488d0412       lea rax, [rdx + rdx]
0x00005348      480fafd2       imul rdx, rdx
0x0000534c      490fafd7       imul rdx, r15
0x00005350      4829d0         sub rax, rdx
0x00005353      488d1400       lea rdx, [rax + rax]
0x00005357      480fafc0       imul rax, rax
0x0000535b      490fafc7       imul rax, r15
0x0000535f      4829c2         sub rdx, rax
0x00005362      4883fb02       cmp rbx, 2                              ; /src:-678
0x00005366      4819f6         sbb rsi, rsi
0x00005369      31c9           xor ecx, ecx
0x0000536b      4889542420     mov qword [rsp + 0x20], rdx
0x00005370      83e640         and esi, 0x40                           ; segment.PHDR
0x00005373      4883c640       add rsi, 0x40                           ; segment.PHDR
0x00005377      4883fb02       cmp rbx, 2
0x0000537b      0f92c1         setb cl
0x0000537e      4819c0         sbb rax, rax
0x00005381      4883c001       add rax, 1
0x00005385      4883ee01       sub rsi, 1
0x00005389      4883feff       cmp rsi, 0xffffffffffffffff
0x0000538d      742c           je 0x53bb
0x0000538f      4889ca         mov rdx, rcx
0x00005392      4801c0         add rax, rax
0x00005395      4801c9         add rcx, rcx
0x00005398      48c1ea3f       shr rdx, 0x3f
0x0000539c      4809d0         or rax, rdx
0x0000539f      4839c3         cmp rbx, rax
0x000053a2      7207           jb 0x53ab
0x000053a4      75df           jne 0x5385
0x000053a6      4939cf         cmp r15, rcx
0x000053a9      77da           ja 0x5385
0x000053ab      4883ee01       sub rsi, 1
0x000053af      4c29f9         sub rcx, r15
0x000053b2      4819d8         sbb rax, rbx
0x000053b5      4883feff       cmp rsi, 0xffffffffffffffff
0x000053b9      75d4           jne 0x538f
0x000053bb      48898424b800.  mov qword [rsp + 0xb8], rax
0x000053c3      48898c24b000.  mov qword [rsp + 0xb0], rcx
0x000053cb      4889cf         mov rdi, rcx
0x000053ce      4801f9         add rcx, rdi
0x000053d1      4811c0         adc rax, rax
0x000053d4      4839c3         cmp rbx, rax
0x000053d7      48898424a800.  mov qword [rsp + 0xa8], rax
0x000053df      48898c24a000.  mov qword [rsp + 0xa0], rcx
0x000053e7      0f82a3030000   jb 0x5790
0x000053ed      0f848b030000   je 0x577e
0x000053f3      488d8424a000.  lea rax, [rsp + 0xa0]
0x000053fb      4c8db424c000.  lea r14, [rsp + 0xc0]
0x00005403      448b442470     mov r8d, dword [rsp + 0x70]
0x00005408      488b742420     mov rsi, qword [rsp + 0x20]
0x0000540d      4c8d8c24b000.  lea r9, [rsp + 0xb0]
0x00005415      488d8c249000.  lea rcx, [rsp + 0x90]
0x0000541d      4889c2         mov rdx, rax
0x00005420      4c89f7         mov rdi, r14
0x00005423      4c89bc24c000.  mov qword [rsp + 0xc0], r15
0x0000542b      48899c24c800.  mov qword [rsp + 0xc8], rbx
0x00005433      4c894c2408     mov qword [rsp + 8], r9
0x00005438      48894c2438     mov qword [rsp + 0x38], rcx
0x0000543d      4889442430     mov qword [rsp + 0x30], rax
0x00005442      e819d8ffff     call sym.millerrabin2
0x00005447      84c0           test al, al
0x00005449      88442477       mov byte [rsp + 0x77], al               ; /src:-713
0x0000544d      0f84fd020000   je 0x5750
0x00005453      488b6c2428     mov rbp, qword [rsp + 0x28]
0x00005458      4c8b6c2418     mov r13, qword [rsp + 0x18]
0x0000545d      488d8424f000.  lea rax, [rsp + 0xf0]
0x00005465      4c8d25f4a800.  lea r12, obj.primes_diff                ; 0xfd60
0x0000546c      4889c2         mov rdx, rax
0x0000546f      4889442478     mov qword [rsp + 0x78], rax
0x00005474      4889ef         mov rdi, rbp
0x00005477      4c89ee         mov rsi, r13
0x0000547a      e8e1f3ffff     call sym.factor
0x0000547f      4889ea         mov rdx, rbp
0x00005482      4c89e8         mov rax, r13                            ; /src:-710
0x00005485      4889ef         mov rdi, rbp
0x00005488      48d1e8         shr rax, 1
0x0000548b      48c1e23f       shl rdx, 0x3f
0x0000548f      48d1ef         shr rdi, 1
0x00005492      4809c2         or rdx, rax
0x00005495      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000549d      48897c2448     mov qword [rsp + 0x48], rdi
0x000054a2      4889542440     mov qword [rsp + 0x40], rdx
0x000054a7      bd02000000     mov ebp, 2
0x000054ac      4889442410     mov qword [rsp + 0x10], rax
0x000054b1      488d8424e000.  lea rax, [rsp + 0xe0]
0x000054b9      488984248000.  mov qword [rsp + 0x80], rax
0x000054c1      488d8424e800.  lea rax, [rsp + 0xe8]
0x000054c9      488984248800.  mov qword [rsp + 0x88], rax
0x000054d1      0f1f80000000.  nop dword [rax]
0x000054d8      4883bc24f800.  cmp qword [rsp + 0xf8], 0
0x000054e1      0f85c9020000   jne 0x57b0
0x000054e7      80bc24ea0100.  cmp byte [rsp + 0x1ea], 0
0x000054ef      0f845b020000   je 0x5750                               ; /src:-748
0x000054f5      488b84248000.  mov rax, qword [rsp + 0x80]             ; /src:-747
0x000054fd      41bd01000000   mov r13d, 1
0x00005503      48896c2450     mov qword [rsp + 0x50], rbp
0x00005508      4c89642458     mov qword [rsp + 0x58], r12
0x0000550d      48895c2460     mov qword [rsp + 0x60], rbx
0x00005512      4c897c2468     mov qword [rsp + 0x68], r15
0x00005517      4c8b642420     mov r12, qword [rsp + 0x20]
0x0000551c      4d89ef         mov r15, r13
0x0000551f      4883c008       add rax, 8
0x00005523      4c8b6c2478     mov r13, qword [rsp + 0x78]
0x00005528      488b5c2430     mov rbx, qword [rsp + 0x30]
0x0000552d      4889c5         mov rbp, rax
0x00005530      e9bd000000     jmp 0x55f2
0x00005535      0f1f00         nop dword [rax]
0x00005538      4889d0         mov rax, rdx
0x0000553b      488d3d9e7a00.  lea rdi, obj.binvert_table              ; 0xcfe0
0x00005542      488b742418     mov rsi, qword [rsp + 0x18]
0x00005547      48d1e8         shr rax, 1
0x0000554a      83e07f         and eax, 0x7f                           ; /src:-772
0x0000554d      0fb60407       movzx eax, byte [rdi + rax]
0x00005551      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00005556      488d0c00       lea rcx, [rax + rax]
0x0000555a      480fafc0       imul rax, rax
0x0000555e      480fafc2       imul rax, rdx
0x00005562      4829c1         sub rcx, rax
0x00005565      488d0409       lea rax, [rcx + rcx]
0x00005569      480fafc9       imul rcx, rcx
0x0000556d      480fafca       imul rcx, rdx
0x00005571      4829c8         sub rax, rcx
0x00005574      488d0c00       lea rcx, [rax + rax]                    ; /src:-676
0x00005578      480fafc0       imul rax, rax
0x0000557c      480fafc2       imul rax, rdx
0x00005580      4829c1         sub rcx, rax
0x00005583      480faff1       imul rsi, rcx
0x00005587      4839d7         cmp rdi, rdx
0x0000558a      0f82a0010000   jb 0x5730                               ; /src:446
0x00005590      4889f0         mov rax, rsi
0x00005593      4889b424d000.  mov qword [rsp + 0xd0], rsi
0x0000559b      48f7e2         mul rdx
0x0000559e      4889f8         mov rax, rdi
0x000055a1      4829d0         sub rax, rdx
0x000055a4      480fafc8       imul rcx, rax
0x000055a8      48898c24d800.  mov qword [rsp + 0xd8], rcx
0x000055b0      4c8b4c2408     mov r9, qword [rsp + 8]
0x000055b5      488b542410     mov rdx, qword [rsp + 0x10]
0x000055ba      4d89e0         mov r8, r12
0x000055bd      4c89f1         mov rcx, r14
0x000055c0      4889de         mov rsi, rbx
0x000055c3      4889ef         mov rdi, rbp
0x000055c6      e815d5ffff     call sym.powm2                          ; /src:235
0x000055cb      483b8424b000.  cmp rax, qword [rsp + 0xb0]
0x000055d3      48898424e000.  mov qword [rsp + 0xe0], rax
0x000055db      7443           je 0x5620
0x000055dd      0fb68424ea01.  movzx eax, byte [rsp + 0x1ea]
0x000055e5      4439f8         cmp eax, r15d
0x000055e8      0f8662010000   jbe 0x5750
0x000055ee      4983c701       add r15, 1
0x000055f2      4b8b54fd08     mov rdx, qword [r13 + r15*8 + 8]        ; /src:252
0x000055f7      4883fa02       cmp rdx, 2
0x000055fb      0f8537ffffff   jne 0x5538                              ; /src:255
0x00005601      488b442440     mov rax, qword [rsp + 0x40]
0x00005606      48898424d000.  mov qword [rsp + 0xd0], rax
0x0000560e      488b442448     mov rax, qword [rsp + 0x48]
0x00005613      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000561b      eb93           jmp 0x55b0
0x0000561d      0f1f00         nop dword [rax]
0x00005620      488b9424e800.  mov rdx, qword [rsp + 0xe8]
0x00005628      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00005630      0fb6b424ea01.  movzx esi, byte [rsp + 0x1ea]
0x00005638      4839c2         cmp rdx, rax
0x0000563b      0f95c1         setne cl
0x0000563e      4439fe         cmp esi, r15d
0x00005641      0f867d020000   jbe 0x58c4
0x00005647      4839c2         cmp rdx, rax
0x0000564a      75a2           jne 0x55ee
0x0000564c      488b6c2450     mov rbp, qword [rsp + 0x50]
0x00005651      4c8b642458     mov r12, qword [rsp + 0x58]
0x00005656      488b5c2460     mov rbx, qword [rsp + 0x60]
0x0000565b      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x00005660      410fb60424     movzx eax, byte [r12]
0x00005665      31c9           xor ecx, ecx                            ; /src:267
0x00005667      4801c5         add rbp, rax
0x0000566a      4889c8         mov rax, rcx
0x0000566d      4839eb         cmp rbx, rbp                            ; /src:270
0x00005670      480f47c5       cmova rax, rbp
0x00005674      4839dd         cmp rbp, rbx
0x00005677      4819f6         sbb rsi, rsi
0x0000567a      4883e6c0       and rsi, 0xffffffffffffffc0
0x0000567e      4883ee80       sub rsi, 0xffffffffffffff80
0x00005682      4839eb         cmp rbx, rbp
0x00005685      480f46cd       cmovbe rcx, rbp
0x00005689      4883ee01       sub rsi, 1
0x0000568d      4883feff       cmp rsi, 0xffffffffffffffff
0x00005691      742c           je 0x56bf
0x00005693      4889ca         mov rdx, rcx
0x00005696      4801c0         add rax, rax
0x00005699      4801c9         add rcx, rcx
0x0000569c      48c1ea3f       shr rdx, 0x3f
0x000056a0      4809d0         or rax, rdx                             ; /src:272
0x000056a3      4839c3         cmp rbx, rax
0x000056a6      7207           jb 0x56af                               ; /src:279
0x000056a8      75df           jne 0x5689
0x000056aa      4939cf         cmp r15, rcx
0x000056ad      77da           ja 0x5689
0x000056af      4883ee01       sub rsi, 1
0x000056b3      4c29f9         sub rcx, r15
0x000056b6      4819d8         sbb rax, rbx
0x000056b9      4883feff       cmp rsi, 0xffffffffffffffff
0x000056bd      75d4           jne 0x5693
0x000056bf      48898c24a000.  mov qword [rsp + 0xa0], rcx
0x000056c7      4c8b4c2408     mov r9, qword [rsp + 8]
0x000056cc      4c89f7         mov rdi, r14
0x000056cf      448b442470     mov r8d, dword [rsp + 0x70]
0x000056d4      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000056d9      488b542430     mov rdx, qword [rsp + 0x30]             ; /src:287
0x000056de      488b742420     mov rsi, qword [rsp + 0x20]
0x000056e3      48898424a800.  mov qword [rsp + 0xa8], rax
0x000056eb      e870d5ffff     call sym.millerrabin2
0x000056f0      84c0           test al, al
0x000056f2      7455           je 0x5749
0x000056f4      488d0501a900.  lea rax, [0x0000fffc]
0x000056fb      4983c401       add r12, 1
0x000056ff      4c39e0         cmp rax, r12
0x00005702      0f85d0fdffff   jne 0x54d8
0x00005708      488d35b97300.  lea rsi, str.Lucas_prime_test_failure.__This_should_not_happen ; 0xcac8 ; "Lucas prime test failure.  This should not happen"
0x0000570f      ba05000000     mov edx, 5
0x00005714      31ff           xor edi, edi
0x00005716      e8c5c7ffff     call sym.imp.dcgettext
0x0000571b      31f6           xor esi, esi
0x0000571d      4889c2         mov rdx, rax
0x00005720      31ff           xor edi, edi                            ; /src:485
0x00005722      31c0           xor eax, eax
0x00005724      e8b7caffff     call sym.imp.error
0x00005729      e8b2c6ffff     call sym.imp.abort
0x0000572e      6690           nop
0x00005730      4889b424d000.  mov qword [rsp + 0xd0], rsi
0x00005738      48c78424d800.  mov qword [rsp + 0xd8], 0
0x00005744      e967feffff     jmp 0x55b0
0x00005749      c644247700     mov byte [rsp + 0x77], 0
0x0000574e      6690           nop
0x00005750      488bbc24f801.  mov rdi, qword [rsp + 0x1f8]
0x00005758      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005761      0fb6442477     movzx eax, byte [rsp + 0x77]
0x00005766      0f8579010000   jne 0x58e5
0x0000576c      4881c4080200.  add rsp, 0x208                          ; /src:486
0x00005773      5b             pop rbx
0x00005774      5d             pop rbp
0x00005775      415c           pop r12
0x00005777      415d           pop r13
0x00005779      415e           pop r14
0x0000577b      415f           pop r15
0x0000577d      c3             ret
0x0000577e      4939cf         cmp r15, rcx                            ; /src:485
0x00005781      0f876cfcffff   ja 0x53f3
0x00005787      660f1f840000.  nop word [rax + rax]
0x00005790      4c29f9         sub rcx, r15
0x00005793      4819d8         sbb rax, rbx
0x00005796      48898424a800.  mov qword [rsp + 0xa8], rax             ; /src:490
0x0000579e      48898c24a000.  mov qword [rsp + 0xa0], rcx             ; string_fortified.h:-1947
0x000057a6      e948fcffff     jmp 0x53f3
0x000057ab      0f1f440000     nop dword [rax + rax]
0x000057b0      488b8c24f000.  mov rcx, qword [rsp + 0xf0]
0x000057b8      488d3d217800.  lea rdi, obj.binvert_table              ; 0xcfe0
0x000057bf      4c8b4c2408     mov r9, qword [rsp + 8]
0x000057c4      4c8b442420     mov r8, qword [rsp + 0x20]
0x000057c9      488b742430     mov rsi, qword [rsp + 0x30]
0x000057ce      48c78424d800.  mov qword [rsp + 0xd8], 0
0x000057da      4889c8         mov rax, rcx
0x000057dd      48d1e8         shr rax, 1                              ; /src:460
0x000057e0      83e07f         and eax, 0x7f
0x000057e3      0fb60407       movzx eax, byte [rdi + rax]
0x000057e7      488bbc248800.  mov rdi, qword [rsp + 0x88]
0x000057ef      488d1400       lea rdx, [rax + rax]
0x000057f3      480fafc0       imul rax, rax
0x000057f7      480fafc1       imul rax, rcx
0x000057fb      4829c2         sub rdx, rax
0x000057fe      488d0412       lea rax, [rdx + rdx]
0x00005802      480fafd2       imul rdx, rdx
0x00005806      480fafd1       imul rdx, rcx
0x0000580a      4829d0         sub rax, rdx
0x0000580d      488d1400       lea rdx, [rax + rax]
0x00005811      480fafc0       imul rax, rax
0x00005815      480fafc1       imul rax, rcx
0x00005819      4c89f1         mov rcx, r14
0x0000581c      4829c2         sub rdx, rax
0x0000581f      488b442418     mov rax, qword [rsp + 0x18]
0x00005824      480fafc2       imul rax, rdx
0x00005828      488b542410     mov rdx, qword [rsp + 0x10]
0x0000582d      48898424d000.  mov qword [rsp + 0xd0], rax
0x00005835      e8a6d2ffff     call sym.powm2
0x0000583a      483b8424b000.  cmp rax, qword [rsp + 0xb0]
0x00005842      48898424e000.  mov qword [rsp + 0xe0], rax
0x0000584a      0f8597fcffff   jne 0x54e7                              ; /src:424
0x00005850      488b9424e800.  mov rdx, qword [rsp + 0xe8]
0x00005858      488b8424b800.  mov rax, qword [rsp + 0xb8]
0x00005860      4839c2         cmp rdx, rax
0x00005863      0f95c1         setne cl
0x00005866      80bc24ea0100.  cmp byte [rsp + 0x1ea], 0
0x0000586e      7468           je 0x58d8
0x00005870      4839c2         cmp rdx, rax
0x00005873      0f84e7fdffff   je 0x5660
0x00005879      e977fcffff     jmp 0x54f5
0x0000587e      6690           nop
0x00005880      488b742428     mov rsi, qword [rsp + 0x28]
0x00005885      488b542418     mov rdx, qword [rsp + 0x18]
0x0000588a      b940000000     mov ecx, 0x40                           ; segment.PHDR
0x0000588f      480fbcc2       bsf rax, rdx
0x00005893      29c1           sub ecx, eax                            ; /src:430
0x00005895      89c7           mov edi, eax
0x00005897      89442470       mov dword [rsp + 0x70], eax
0x0000589b      4889f0         mov rax, rsi                            ; /src:432
0x0000589e      48d3e0         shl rax, cl
0x000058a1      89f9           mov ecx, edi
0x000058a3      48d3ea         shr rdx, cl
0x000058a6      4809d0         or rax, rdx
0x000058a9      488984249000.  mov qword [rsp + 0x90], rax
0x000058b1      4889f0         mov rax, rsi
0x000058b4      48d3e8         shr rax, cl                             ; /src:436
0x000058b7      488984249800.  mov qword [rsp + 0x98], rax
0x000058bf      e95dfaffff     jmp 0x5321
0x000058c4      488b6c2450     mov rbp, qword [rsp + 0x50]
0x000058c9      4c8b642458     mov r12, qword [rsp + 0x58]
0x000058ce      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000058d3      4c8b7c2468     mov r15, qword [rsp + 0x68]
0x000058d8      84c9           test cl, cl
0x000058da      0f8480fdffff   je 0x5660
0x000058e0      e96bfeffff     jmp 0x5750
0x000058e5      e836c6ffff     call sym.imp.__stack_chk_fail
0x000058ea      660f1f440000   nop word [rax + rax]
;-- prime2_p:
0x000058f0      4885ff         test rdi, rdi
0x000058f3      751b           jne 0x5910
0x000058f5      4883fe01       cmp rsi, 1
0x000058f9      761d           jbe 0x5918
0x000058fb      4881fe78ed7d.  cmp rsi, 0x17ded78                      ; /src:267
0x00005902      b801000000     mov eax, 1
0x00005907      7717           ja 0x5920
0x00005909      f3c3           ret
0x0000590b      0f1f440000     nop dword [rax + rax]
0x00005910      e99bf9ffff     jmp sym.prime2_p.part.5
0x00005915      0f1f00         nop dword [rax]
0x00005918      31c0           xor eax, eax
0x0000591a      c3             ret                                     ; /src:502
0x0000591b      0f1f440000     nop dword [rax + rax]
0x00005920      4889f7         mov rdi, rsi
0x00005923      e958f6ffff     jmp sym.prime_p.part.4
0x00005928      0f1f84000000.  nop dword [rax + rax]
;-- print_factors:
0x00005930      4157           push r15
0x00005932      4156           push r14
0x00005934      4889fa         mov rdx, rdi
0x00005937      4155           push r13
0x00005939      4154           push r12
0x0000593b      55             push rbp
0x0000593c      53             push rbx
0x0000593d      4889fd         mov rbp, rdi
0x00005940      4881ec480100.  sub rsp, 0x148
0x00005947      64488b042528.  mov rax, qword fs:[0x28]
0x00005950      488984243801.  mov qword [rsp + 0x138], rax
0x00005958      31c0           xor eax, eax
0x0000595a      0fb607         movzx eax, byte [rdi]
0x0000595d      3c20           cmp al, 0x20                            ; "@"
0x0000595f      7512           jne 0x5973
0x00005961      0f1f80000000.  nop dword [rax]
0x00005968      4883c201       add rdx, 1
0x0000596c      0fb602         movzx eax, byte [rdx]
0x0000596f      3c20           cmp al, 0x20                            ; "@"
0x00005971      74f5           je 0x5968
0x00005973      3c2b           cmp al, 0x2b
0x00005975      488d7201       lea rsi, [rdx + 1]
0x00005979      750a           jne 0x5985
0x0000597b      488d4202       lea rax, [rdx + 2]
0x0000597f      4889f2         mov rdx, rsi
0x00005982      4889c6         mov rsi, rax
0x00005985      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/src/ctor.c:-1950
0x00005988      bf04000000     mov edi, 4
0x0000598d      0f1f00         nop dword [rax]
0x00005990      4883c101       add rcx, 1
0x00005994      0fbe41ff       movsx eax, byte [rcx - 1]
0x00005998      85c0           test eax, eax
0x0000599a      7464           je 0x5a00                               ; /src:512
0x0000599c      83e830         sub eax, 0x30
0x0000599f      31ff           xor edi, edi
0x000059a1      83f809         cmp eax, 9
0x000059a4      76ea           jbe 0x5990
0x000059a6      4889ef         mov rdi, rbp
0x000059a9      e802320000     call sym.quote
0x000059ae      488d35a37100.  lea rsi, str.s_is_not_a_valid_positive_integer ; 0xcb58 ; "%s is not a valid positive integer"
0x000059b5      4889c3         mov rbx, rax
0x000059b8      ba05000000     mov edx, 5
0x000059bd      31ff           xor edi, edi
0x000059bf      e81cc5ffff     call sym.imp.dcgettext                  ; /src:517
0x000059c4      4889d9         mov rcx, rbx
0x000059c7      4889c2         mov rdx, rax
0x000059ca      31f6           xor esi, esi
0x000059cc      31c0           xor eax, eax
0x000059ce      31ff           xor edi, edi
0x000059d0      e80bc8ffff     call sym.imp.error
0x000059d5      31c0           xor eax, eax
0x000059d7      488bbc243801.  mov rdi, qword [rsp + 0x138]
0x000059df      6448333c2528.  xor rdi, qword fs:[0x28]
0x000059e8      0f85bd020000   jne 0x5cab
0x000059ee      4881c4480100.  add rsp, 0x148
0x000059f5      5b             pop rbx
0x000059f6      5d             pop rbp
0x000059f7      415c           pop r12
0x000059f9      415d           pop r13
0x000059fb      415e           pop r14
0x000059fd      415f           pop r15
0x000059ff      c3             ret
0x00005a00      85ff           test edi, edi
0x00005a02      0f85a8020000   jne 0x5cb0
0x00005a08      0fbe0a         movsx ecx, byte [rdx]
0x00005a0b      85c9           test ecx, ecx
0x00005a0d      0f848e020000   je 0x5ca1
0x00005a13      83e930         sub ecx, 0x30
0x00005a16      4531e4         xor r12d, r12d
0x00005a19      31db           xor ebx, ebx
0x00005a1b      48bf99999999.  movabs rdi, 0x1999999999999999
0x00005a25      eb21           jmp 0x5a48
0x00005a27      660f1f840000.  nop word [rax + rax]
0x00005a30      4883c601       add rsi, 1                              ; stdio2.h:-1410
0x00005a34      0fbe56ff       movsx edx, byte [rsi - 1]
0x00005a38      85d2           test edx, edx
0x00005a3a      0f843a010000   je 0x5b7a
0x00005a40      4839fb         cmp rbx, rdi
0x00005a43      8d4ad0         lea ecx, [rdx - 0x30]
0x00005a46      7739           ja 0x5a81
0x00005a48      4b8d14a4       lea rdx, [r12 + r12*4]
0x00005a4c      4d89e0         mov r8, r12
0x00005a4f      4c89e0         mov rax, r12
0x00005a52      4d01e4         add r12, r12
0x00005a55      49c1e83d       shr r8, 0x3d
0x00005a59      48c1e83f       shr rax, 0x3f
0x00005a5d      4801d2         add rdx, rdx
0x00005a60      4c39e2         cmp rdx, r12
0x00005a63      4411c0         adc eax, r8d
0x00005a66      4801ca         add rdx, rcx
0x00005a69      0f92c1         setb cl
0x00005a6c      4989d4         mov r12, rdx
0x00005a6f      488d149b       lea rdx, [rbx + rbx*4]
0x00005a73      0fb6c9         movzx ecx, cl
0x00005a76      8d1c08         lea ebx, [rax + rcx]
0x00005a79      4801d2         add rdx, rdx
0x00005a7c      4801d3         add rbx, rdx
0x00005a7f      73af           jae 0x5a30
0x00005a81      803d78d62000.  cmp byte [obj.dev_debug], 0             ; [0x213100:1]=0
0x00005a88      0f85e2010000   jne 0x5c70
0x00005a8e      4c8d742430     lea r14, [rsp + 0x30]
0x00005a93      ba0a000000     mov edx, 0xa
0x00005a98      4889ee         mov rsi, rbp
0x00005a9b      4c89f7         mov rdi, r14
0x00005a9e      e86dc7ffff     call sym.imp.__gmpz_init_set_str
0x00005aa3      488d3d6a7300.  lea rdi, str.Zd:                        ; 0xce14 ; "%Zd:"
0x00005aaa      4c89f6         mov rsi, r14
0x00005aad      31c0           xor eax, eax
0x00005aaf      e88cc5ffff     call sym.imp.__gmp_printf
0x00005ab4      488d742410     lea rsi, [rsp + 0x10]
0x00005ab9      4c89f7         mov rdi, r14
0x00005abc      4889742408     mov qword [rsp + 8], rsi
0x00005ac1      e83adaffff     call sym.mp_factor                      ; stdio2.h:-1405
0x00005ac6      48837c242000   cmp qword [rsp + 0x20], 0
0x00005acc      7464           je 0x5b32
0x00005ace      488b442418     mov rax, qword [rsp + 0x18]
0x00005ad3      4c8d253f7300.  lea r12, str.Zd                         ; 0xce19 ; " %Zd"
0x00005ada      4531ed         xor r13d, r13d
0x00005add      31c9           xor ecx, ecx
0x00005adf      90             nop
0x00005ae0      4889cb         mov rbx, rcx
0x00005ae3      4531ff         xor r15d, r15d
0x00005ae6      488d2ccd0000.  lea rbp, [rcx*8]
0x00005aee      48c1e304       shl rbx, 4
0x00005af2      48833cc800     cmp qword [rax + rcx*8], 0
0x00005af7      742b           je 0x5b24
0x00005af9      0f1f80000000.  nop dword [rax]
0x00005b00      488b742410     mov rsi, qword [rsp + 0x10]
0x00005b05      31c0           xor eax, eax
0x00005b07      4c89e7         mov rdi, r12
0x00005b0a      4801de         add rsi, rbx                            ; stdio2.h:-1397
0x00005b0d      e82ec5ffff     call sym.imp.__gmp_printf
0x00005b12      488b442418     mov rax, qword [rsp + 0x18]
0x00005b17      418d4f01       lea ecx, [r15 + 1]
0x00005b1b      4989cf         mov r15, rcx
0x00005b1e      483b0c28       cmp rcx, qword [rax + rbp]
0x00005b22      72dc           jb 0x5b00
0x00005b24      418d4d01       lea ecx, [r13 + 1]
0x00005b28      483b4c2420     cmp rcx, qword [rsp + 0x20]
0x00005b2d      4989cd         mov r13, rcx
0x00005b30      72ae           jb 0x5ae0
0x00005b32      488b7c2408     mov rdi, qword [rsp + 8]
0x00005b37      e8d4cdffff     call sym.mp_factor_clear
0x00005b3c      4c89f7         mov rdi, r14
0x00005b3f      e8ccc5ffff     call sym.imp.__gmpz_clear
0x00005b44      488b3d5dd520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005b4b      488b4728       mov rax, qword [rdi + 0x28]
0x00005b4f      483b4730       cmp rax, qword [rdi + 0x30]
0x00005b53      0f8339010000   jae 0x5c92
0x00005b59      488d5001       lea rdx, [rax + 1]
0x00005b5d      48895728       mov qword [rdi + 0x28], rdx
0x00005b61      c6000a         mov byte [rax], 0xa
0x00005b64      488b3d3dd520.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005b6b      e810c7ffff     call sym.imp.fflush_unlocked
0x00005b70      b801000000     mov eax, 1
0x00005b75      e95dfeffff     jmp 0x59d7
0x00005b7a      4885db         test rbx, rbx
0x00005b7d      0f88fefeffff   js 0x5a81
0x00005b83      803d76d52000.  cmp byte [obj.dev_debug], 0             ; ../coreutils-8.31/src/ctor.c:-1950 ; [0x213100:1]=0
0x00005b8a      741d           je 0x5ba9
0x00005b8c      488b0d4dd520.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00005b93      488d3d966f00.  lea rdi, str.using_single_precision_arithmetic ; 0xcb30 ; "[using single-precision arithmetic] "
0x00005b9a      ba24000000     mov edx, 0x24                           ; '$'
0x00005b9f      be01000000     mov esi, 1
0x00005ba4      e897c6ffff     call sym.imp.fwrite
0x00005ba9      4c89e6         mov rsi, r12
0x00005bac      4889df         mov rdi, rbx
0x00005baf      4c8d6c2430     lea r13, [rsp + 0x30]
0x00005bb4      e8f7d6ffff     call sym.print_uintmaxes
0x00005bb9      bf3a000000     mov edi, 0x3a                           ; ':'
0x00005bbe      e89dd7ffff     call sym.lbuf_putc
0x00005bc3      4c89ea         mov rdx, r13
0x00005bc6      4c89e6         mov rsi, r12
0x00005bc9      4889df         mov rdi, rbx
0x00005bcc      e88fecffff     call sym.factor
0x00005bd1      80bc242a0100.  cmp byte [rsp + 0x12a], 0
0x00005bd9      745e           je 0x5c39
0x00005bdb      498dade00000.  lea rbp, [r13 + 0xe0]
0x00005be2      4d8d6510       lea r12, [r13 + 0x10]
0x00005be6      4531ed         xor r13d, r13d
0x00005be9      0f1f80000000.  nop dword [rax]
0x00005bf0      31db           xor ebx, ebx
0x00005bf2      807d0000       cmp byte [rbp], 0
0x00005bf6      7428           je 0x5c20                               ; stdio2.h:-1411
0x00005bf8      0f1f84000000.  nop dword [rax + rax]
0x00005c00      bf20000000     mov edi, 0x20                           ; "@"
0x00005c05      83c301         add ebx, 1
0x00005c08      e853d7ffff     call sym.lbuf_putc
0x00005c0d      498b3c24       mov rdi, qword [r12]
0x00005c11      31f6           xor esi, esi
0x00005c13      e868d1ffff     call sym.lbuf_putint
0x00005c18      0fb64500       movzx eax, byte [rbp]
0x00005c1c      39c3           cmp ebx, eax
0x00005c1e      72e0           jb 0x5c00
0x00005c20      0fb684242a01.  movzx eax, byte [rsp + 0x12a]
0x00005c28      4183c501       add r13d, 1
0x00005c2c      4883c501       add rbp, 1
0x00005c30      4983c408       add r12, 8
0x00005c34      4139c5         cmp r13d, eax
0x00005c37      72b7           jb 0x5bf0
0x00005c39      48837c243800   cmp qword [rsp + 0x38], 0
0x00005c3f      7419           je 0x5c5a
0x00005c41      bf20000000     mov edi, 0x20                           ; "@"
0x00005c46      e815d7ffff     call sym.lbuf_putc
0x00005c4b      488b742430     mov rsi, qword [rsp + 0x30]
0x00005c50      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005c55      e856d6ffff     call sym.print_uintmaxes
0x00005c5a      bf0a000000     mov edi, 0xa
0x00005c5f      e8fcd6ffff     call sym.lbuf_putc
0x00005c64      b801000000     mov eax, 1
0x00005c69      e969fdffff     jmp 0x59d7
0x00005c6e      6690           nop
0x00005c70      488b0d69d420.  mov rcx, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00005c77      488d3d026f00.  lea rdi, str.using_arbitrary_precision_arithmetic ; 0xcb80 ; "[using arbitrary-precision arithmetic] "
0x00005c7e      ba27000000     mov edx, 0x27                           ; '''
0x00005c83      be01000000     mov esi, 1
0x00005c88      e8b3c5ffff     call sym.imp.fwrite
0x00005c8d      e9fcfdffff     jmp 0x5a8e
0x00005c92      be0a000000     mov esi, 0xa
0x00005c97      e804c3ffff     call sym.imp.__overflow
0x00005c9c      e9c3feffff     jmp 0x5b64
0x00005ca1      4531e4         xor r12d, r12d
0x00005ca4      31db           xor ebx, ebx
0x00005ca6      e9d8feffff     jmp 0x5b83
0x00005cab      e870c2ffff     call sym.imp.__stack_chk_fail
0x00005cb0      83ef01         sub edi, 1
0x00005cb3      0f85edfcffff   jne 0x59a6
0x00005cb9      e9c3fdffff     jmp 0x5a81
0x00005cbe      6690           nop
;-- usage:
0x00005cc0      4155           push r13
0x00005cc2      4154           push r12
0x00005cc4      ba05000000     mov edx, 5
0x00005cc9      55             push rbp
0x00005cca      53             push rbx
0x00005ccb      89fd           mov ebp, edi
0x00005ccd      4881ec880000.  sub rsp, 0x88
0x00005cd4      488b1d3dd420.  mov rbx, qword [obj.program_name]       ; [0x213118:8]=0
0x00005cdb      64488b042528.  mov rax, qword fs:[0x28]
0x00005ce4      4889442478     mov qword [rsp + 0x78], rax
0x00005ce9      31c0           xor eax, eax
0x00005ceb      85ff           test edi, edi
0x00005ced      742e           je 0x5d1d
0x00005cef      488d35b26e00.  lea rsi, str.Try___s___help__for_more_information. ; 0xcba8 ; "Try '%s --help' for more information.\n"
0x00005cf6      31ff           xor edi, edi
0x00005cf8      e8e3c1ffff     call sym.imp.dcgettext
0x00005cfd      488b3ddcd320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00005d04      4889c2         mov rdx, rax
0x00005d07      4889d9         mov rcx, rbx
0x00005d0a      be01000000     mov esi, 1
0x00005d0f      31c0           xor eax, eax
0x00005d11      e83ac5ffff     call sym.imp.__fprintf_chk
0x00005d16      89ef           mov edi, ebp
0x00005d18      e813c5ffff     call sym.imp.exit
0x00005d1d      488d35ac6e00.  lea rsi, str.Usage:__s__NUMBER_...____or:___s_OPTION ; 0xcbd0 ; "Usage: %s [NUMBER]...\n  or:  %s OPTION\n"
0x00005d24      31ff           xor edi, edi
0x00005d26      e8b5c1ffff     call sym.imp.dcgettext
0x00005d2b      4889d9         mov rcx, rbx
0x00005d2e      4889da         mov rdx, rbx
0x00005d31      4889c6         mov rsi, rax
0x00005d34      bf01000000     mov edi, 1
0x00005d39      31c0           xor eax, eax
0x00005d3b      e830c4ffff     call sym.imp.__printf_chk
0x00005d40      488b1d61d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005d47      488d35aa6e00.  lea rsi, str.Print_the_prime_factors_of_each_specified_integer_NUMBER.__If_none__are_specified_on_the_command_line__read_them_from_standard_input. ; 0xcbf8 ; "Print the prime factors of each specified integer NUMBER.  If none\nare specified on the command line, read them from standard input.\n\n"
0x00005d4e      ba05000000     mov edx, 5
0x00005d53      31ff           xor edi, edi
0x00005d55      e886c1ffff     call sym.imp.dcgettext
0x00005d5a      4889de         mov rsi, rbx
0x00005d5d      4889c7         mov rdi, rax
0x00005d60      e8ebc2ffff     call sym.imp.fputs_unlocked
0x00005d65      488b1d3cd320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005d6c      488d350d6f00.  lea rsi, str.help_____display_this_help_and_exit ; 0xcc80 ; "      --help     display this help and exit\n"
0x00005d73      ba05000000     mov edx, 5
0x00005d78      31ff           xor edi, edi
0x00005d7a      e861c1ffff     call sym.imp.dcgettext
0x00005d7f      4889de         mov rsi, rbx
0x00005d82      4889c7         mov rdi, rax
0x00005d85      e8c6c2ffff     call sym.imp.fputs_unlocked
0x00005d8a      488b1d17d320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005d91      488d35186f00.  lea rsi, str.version__output_version_information_and_exit ; 0xccb0 ; "      --version  output version information and exit\n"
0x00005d98      ba05000000     mov edx, 5
0x00005d9d      31ff           xor edi, edi
0x00005d9f      e83cc1ffff     call sym.imp.dcgettext
0x00005da4      4889de         mov rsi, rbx
0x00005da7      4889c7         mov rdi, rax
0x00005daa      488d1d6d7000.  lea rbx, str.factor                     ; 0xce1e ; "factor"
0x00005db1      e89ac2ffff     call sym.imp.fputs_unlocked
0x00005db6      488d05687000.  lea rax, [0x0000ce25]                   ; "["
0x00005dbd      488d0da27000.  lea rcx, str.sha256sum                  ; 0xce66 ; "sha256sum"
0x00005dc4      48c744246000.  mov qword [rsp + 0x60], 0
0x00005dcd      48c744246800.  mov qword [rsp + 0x68], 0
0x00005dd6      4889e2         mov rdx, rsp
0x00005dd9      48890424       mov qword [rsp], rax
0x00005ddd      488d05437000.  lea rax, str.test_invocation            ; 0xce27 ; "test invocation"
0x00005de4      48894c2430     mov qword [rsp + 0x30], rcx
0x00005de9      488d0d807000.  lea rcx, str.sha384sum                  ; 0xce70 ; "sha384sum"
0x00005df0      4889442408     mov qword [rsp + 8], rax
0x00005df5      488d05a37000.  lea rax, [0x0000ce9f]                   ; "coreutils"
0x00005dfc      48894c2440     mov qword [rsp + 0x40], rcx
0x00005e01      488d0d727000.  lea rcx, str.sha512sum                  ; 0xce7a ; "sha512sum"
0x00005e08      4889442410     mov qword [rsp + 0x10], rax
0x00005e0d      488d05237000.  lea rax, str.Multi_call_invocation      ; 0xce37 ; "Multi-call invocation"
0x00005e14      48894c2450     mov qword [rsp + 0x50], rcx
0x00005e19      4889442418     mov qword [rsp + 0x18], rax
0x00005e1e      488d05287000.  lea rax, str.sha224sum                  ; 0xce4d ; "sha224sum"
0x00005e25      4889442420     mov qword [rsp + 0x20], rax
0x00005e2a      488d05267000.  lea rax, str.sha2_utilities             ; 0xce57 ; "sha2 utilities"
0x00005e31      4889442428     mov qword [rsp + 0x28], rax
0x00005e36      4889442438     mov qword [rsp + 0x38], rax
0x00005e3b      4889442448     mov qword [rsp + 0x48], rax
0x00005e40      4889442458     mov qword [rsp + 0x58], rax
0x00005e45      0f1f00         nop dword [rax]
0x00005e48      4883c210       add rdx, 0x10
0x00005e4c      488b3a         mov rdi, qword [rdx]
0x00005e4f      4885ff         test rdi, rdi
0x00005e52      7413           je 0x5e67
0x00005e54      b907000000     mov ecx, 7
0x00005e59      4889de         mov rsi, rbx
0x00005e5c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005e5e      0f97c0         seta al
0x00005e61      1c00           sbb al, 0
0x00005e63      84c0           test al, al
0x00005e65      75e1           jne 0x5e48
0x00005e67      4c8b6208       mov r12, qword [rdx + 8]
0x00005e6b      31ff           xor edi, edi
0x00005e6d      ba05000000     mov edx, 5
0x00005e72      488d350b7000.  lea rsi, str.s_online_help:___s         ; 0xce84 ; "\n%s online help: <%s>\n"
0x00005e79      4d85e4         test r12, r12
0x00005e7c      0f84c1000000   je 0x5f43
0x00005e82      e859c0ffff     call sym.imp.dcgettext
0x00005e87      488d0d5a6e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xcce8 ; "https://www.gnu.org/software/coreutils/"
0x00005e8e      488d15067000.  lea rdx, str.GNU_coreutils              ; 0xce9b ; "GNU coreutils"
0x00005e95      4889c6         mov rsi, rax
0x00005e98      bf01000000     mov edi, 1
0x00005e9d      31c0           xor eax, eax
0x00005e9f      e8ccc2ffff     call sym.imp.__printf_chk
0x00005ea4      31f6           xor esi, esi
0x00005ea6      bf05000000     mov edi, 5
0x00005eab      e8b0c2ffff     call sym.imp.setlocale
0x00005eb0      4885c0         test rax, rax
0x00005eb3      741c           je 0x5ed1
0x00005eb5      488d35ed6f00.  lea rsi, [0x0000cea9]                   ; "en_"
0x00005ebc      ba03000000     mov edx, 3
0x00005ec1      4889c7         mov rdi, rax
0x00005ec4      e837bfffff     call sym.imp.strncmp
0x00005ec9      85c0           test eax, eax
0x00005ecb      0f8507010000   jne 0x5fd8
0x00005ed1      488d35d56f00.  lea rsi, str.Full_documentation___s_s   ; 0xcead ; "Full documentation <%s%s>\n"
0x00005ed8      31ff           xor edi, edi
0x00005eda      ba05000000     mov edx, 5
0x00005edf      e8fcbfffff     call sym.imp.dcgettext
0x00005ee4      488d0d336f00.  lea rcx, str.factor                     ; 0xce1e ; "factor"
0x00005eeb      488d15f66d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xcce8 ; "https://www.gnu.org/software/coreutils/"
0x00005ef2      4889c6         mov rsi, rax
0x00005ef5      bf01000000     mov edi, 1
0x00005efa      31c0           xor eax, eax
0x00005efc      e86fc2ffff     call sym.imp.__printf_chk
0x00005f01      4939dc         cmp r12, rbx
0x00005f04      488d0d366f00.  lea rcx, [0x0000ce41]                   ; " invocation"
0x00005f0b      488d1d49a700.  lea rbx, [0x0001065b]
0x00005f12      480f44d9       cmove rbx, rcx
0x00005f16      488d353b6e00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xcd58 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00005f1d      31ff           xor edi, edi
0x00005f1f      ba05000000     mov edx, 5
0x00005f24      e8b7bfffff     call sym.imp.dcgettext
0x00005f29      4889d9         mov rcx, rbx
0x00005f2c      4889c6         mov rsi, rax
0x00005f2f      4c89e2         mov rdx, r12
0x00005f32      bf01000000     mov edi, 1
0x00005f37      31c0           xor eax, eax
0x00005f39      e832c2ffff     call sym.imp.__printf_chk
0x00005f3e      e9d3fdffff     jmp 0x5d16
0x00005f43      e898bfffff     call sym.imp.dcgettext
0x00005f48      488d0d996d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xcce8 ; "https://www.gnu.org/software/coreutils/"
0x00005f4f      488d15456f00.  lea rdx, str.GNU_coreutils              ; 0xce9b ; "GNU coreutils"
0x00005f56      4889c6         mov rsi, rax
0x00005f59      bf01000000     mov edi, 1
0x00005f5e      31c0           xor eax, eax
0x00005f60      e80bc2ffff     call sym.imp.__printf_chk
0x00005f65      31f6           xor esi, esi
0x00005f67      bf05000000     mov edi, 5
0x00005f6c      e8efc1ffff     call sym.imp.setlocale
0x00005f71      4885c0         test rax, rax
0x00005f74      7418           je 0x5f8e
0x00005f76      488d352c6f00.  lea rsi, [0x0000cea9]                   ; "en_"
0x00005f7d      ba03000000     mov edx, 3
0x00005f82      4889c7         mov rdi, rax
0x00005f85      e876beffff     call sym.imp.strncmp
0x00005f8a      85c0           test eax, eax
0x00005f8c      7543           jne 0x5fd1
0x00005f8e      488d35186f00.  lea rsi, str.Full_documentation___s_s   ; 0xcead ; "Full documentation <%s%s>\n"
0x00005f95      ba05000000     mov edx, 5
0x00005f9a      31ff           xor edi, edi
0x00005f9c      4c8d257b6e00.  lea r12, str.factor                     ; 0xce1e ; "factor"
0x00005fa3      488d1d976e00.  lea rbx, [0x0000ce41]                   ; " invocation"
0x00005faa      e831bfffff     call sym.imp.dcgettext
0x00005faf      488d0d686e00.  lea rcx, str.factor                     ; 0xce1e ; "factor"
0x00005fb6      488d152b6d00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xcce8 ; "https://www.gnu.org/software/coreutils/"
0x00005fbd      4889c6         mov rsi, rax
0x00005fc0      bf01000000     mov edi, 1
0x00005fc5      31c0           xor eax, eax
0x00005fc7      e8a4c1ffff     call sym.imp.__printf_chk
0x00005fcc      e945ffffff     jmp 0x5f16
0x00005fd1      4c8d25466e00.  lea r12, str.factor                     ; 0xce1e ; "factor"
0x00005fd8      4c8b2dc9d020.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00005fdf      488d352a6d00.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xcd10 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00005fe6      31ff           xor edi, edi
0x00005fe8      ba05000000     mov edx, 5
0x00005fed      e8eebeffff     call sym.imp.dcgettext
0x00005ff2      4c89ee         mov rsi, r13
0x00005ff5      4889c7         mov rdi, rax
0x00005ff8      e853c0ffff     call sym.imp.fputs_unlocked
0x00005ffd      e9cffeffff     jmp 0x5ed1
0x00006002      662e0f1f8400.  nop word cs:[rax + rax]
0x0000600c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00006010      48893df9d020.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x213110:8]=0
0x00006017      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00006018      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00006020      40883de1d020.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x213108:1]=0
0x00006027      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00006028      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00006030      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00006031      53             push rbx
0x00006032      4883ec08       sub rsp, 8
0x00006036      488b3d6bd020.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x0000603d      e88e400000     call sym.close_stream
0x00006042      85c0           test eax, eax
0x00006044      7416           je 0x605c
0x00006046      e8a5bdffff     call sym.imp.__errno_location
0x0000604b      803db6d02000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x213108:1]=0
0x00006052      4889c3         mov rbx, rax
0x00006055      741c           je 0x6073
0x00006057      833820         cmp dword [rax], 0x20
0x0000605a      7517           jne 0x6073
0x0000605c      488b3d7dd020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00006063      e868400000     call sym.close_stream
0x00006068      85c0           test eax, eax
0x0000606a      7546           jne 0x60b2
0x0000606c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00006070      5b             pop rbx
0x00006071      5d             pop rbp
0x00006072      c3             ret
0x00006073      488d35116d00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xcd8b ; "write error"
0x0000607a      31ff           xor edi, edi
0x0000607c      ba05000000     mov edx, 5
0x00006081      e85abeffff     call sym.imp.dcgettext
0x00006086      488b3d83d020.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x213110:8]=0
0x0000608d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00006090      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00006093      7428           je 0x60bd
0x00006095      e816290000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000609a      8b33           mov esi, dword [rbx]
0x0000609c      488d15659f00.  lea rdx, str.s:__s                      ; 0x10008 ; "%s: %s"
0x000060a3      4889c1         mov rcx, rax
0x000060a6      4989e8         mov r8, rbp
0x000060a9      31ff           xor edi, edi
0x000060ab      31c0           xor eax, eax
0x000060ad      e82ec1ffff     call sym.imp.error
0x000060b2      8b3d68cf2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x213020:4]=1
0x000060b8      e853bdffff     call sym.imp._exit
0x000060bd      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000060bf      488d15469f00.  lea rdx, [0x0001000c]                   ; "%s"
0x000060c6      4889c1         mov rcx, rax
0x000060c9      31ff           xor edi, edi
0x000060cb      31c0           xor eax, eax
0x000060cd      e80ec1ffff     call sym.imp.error
0x000060d2      ebde           jmp 0x60b2
0x000060d4      662e0f1f8400.  nop word cs:[rax + rax]
0x000060de      6690           nop
;-- full_write:
0x000060e0      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x000060e2      4154           push r12
0x000060e4      55             push rbp
0x000060e5      53             push rbx
0x000060e6      4883ec08       sub rsp, 8
0x000060ea      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x000060ed      7462           je 0x6151
0x000060ef      4189fd         mov r13d, edi
0x000060f2      4889f5         mov rbp, rsi
0x000060f5      4889d3         mov rbx, rdx
0x000060f8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x000060fb      eb13           jmp 0x6110
0x000060fd      0f1f00         nop dword [rax]
0x00006100      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x00006103      7433           je 0x6138
0x00006105      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x00006108      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x0000610b      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x0000610e      7414           je 0x6124
0x00006110      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x00006113      4889ee         mov rsi, rbp
0x00006116      4489ef         mov edi, r13d
0x00006119      e8d22e0000     call sym.safe_write
0x0000611e      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x00006122      75dc           jne 0x6100
0x00006124      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x00006128      4c89e0         mov rax, r12
0x0000612b      5b             pop rbx
0x0000612c      5d             pop rbp
0x0000612d      415c           pop r12
0x0000612f      415d           pop r13
0x00006131      c3             ret
0x00006132      660f1f440000   nop word [rax + rax]
0x00006138      e8b3bcffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x0000613d      c7001c000000   mov dword [rax], 0x1c                   ; [0x1c:4]=0
0x00006143      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x00006147      4c89e0         mov rax, r12
0x0000614a      5b             pop rbx
0x0000614b      5d             pop rbp
0x0000614c      415c           pop r12
0x0000614e      415d           pop r13
0x00006150      c3             ret
0x00006151      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x00006154      ebce           jmp 0x6124                              ; ../coreutils-8.31/lib/full-write.c:78
0x00006156      662e0f1f8400.  nop word cs:[rax + rax]
;-- umaxtostr:
0x00006160      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00006164      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00006168      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00006172      660f1f440000   nop word [rax + rax]
0x00006178      4889f8         mov rax, rdi
0x0000617b      4883e901       sub rcx, 1
0x0000617f      48f7e6         mul rsi
0x00006182      48c1ea03       shr rdx, 3
0x00006186      488d0492       lea rax, [rdx + rdx*4]
0x0000618a      4801c0         add rax, rax
0x0000618d      4829c7         sub rdi, rax
0x00006190      83c730         add edi, 0x30
0x00006193      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00006196      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00006199      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000619c      75da           jne 0x6178
0x0000619e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x000061a1      c3             ret
0x000061a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000061ac      0f1f4000       nop dword [rax]
;-- set_program_name:
0x000061b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000061b3      53             push rbx
0x000061b4      7477           je 0x622d                               ; ../coreutils-8.31/lib/progname.c:51
0x000061b6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000061bb      4889fb         mov rbx, rdi
0x000061be      e8edbdffff     call sym.imp.strrchr
0x000061c3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000061c6      7455           je 0x621d
0x000061c8      4c8d4001       lea r8, [rax + 1]
0x000061cc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000061cf      4829da         sub rdx, rbx
0x000061d2      4883fa06       cmp rdx, 6
0x000061d6      7e45           jle 0x621d
0x000061d8      488d70fa       lea rsi, [rax - 6]
0x000061dc      488d3d659e00.  lea rdi, str..libs                      ; 0x10048 ; "/.libs/"
0x000061e3      b907000000     mov ecx, 7
0x000061e8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000061ea      0f97c2         seta dl
0x000061ed      80da00         sbb dl, 0
0x000061f0      84d2           test dl, dl
0x000061f2      7529           jne 0x621d
0x000061f4      488d3d559e00.  lea rdi, [0x00010050]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000061fb      b903000000     mov ecx, 3
0x00006200      4c89c6         mov rsi, r8
0x00006203      4c89c3         mov rbx, r8
0x00006206      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006208      0f97c2         seta dl
0x0000620b      80da00         sbb dl, 0
0x0000620e      84d2           test dl, dl
0x00006210      750b           jne 0x621d
0x00006212      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00006216      48891d83ce20.  mov qword [loc._edata], rbx             ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2130a0:8]=0
0x0000621d      48891df4ce20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x213118:8]=0
0x00006224      48891d95ce20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2130c0:8]=0
0x0000622b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000622c      c3             ret
0x0000622d      488b0dacce20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2130e0:8]=0
0x00006234      488d3dd59d00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x10010 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000623b      ba37000000     mov edx, 0x37                           ; '7'
0x00006240      be01000000     mov esi, 1
0x00006245      e8f6bfffff     call sym.imp.fwrite
0x0000624a      e891bbffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000624f      90             nop
;-- mbsstr_trimmed_wordbounded:
0x00006250      4157           push r15
0x00006252      4156           push r14
0x00006254      4989ff         mov r15, rdi
0x00006257      4155           push r13
0x00006259      4154           push r12
0x0000625b      4889f7         mov rdi, rsi
0x0000625e      55             push rbp
0x0000625f      53             push rbx
0x00006260      be02000000     mov esi, 2
0x00006265      4c8d2d34a700.  lea r13, obj.is_basic_table             ; 0x109a0
0x0000626c      4881ecb80000.  sub rsp, 0xb8
0x00006273      488d5c2420     lea rbx, [rsp + 0x20]
0x00006278      4c8d642460     lea r12, [rsp + 0x60]
0x0000627d      64488b042528.  mov rax, qword fs:[0x28]
0x00006286      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000628e      31c0           xor eax, eax
0x00006290      4c8d7324       lea r14, [rbx + 0x24]
0x00006294      e8f72d0000     call sym.trim2
0x00006299      4889442408     mov qword [rsp + 8], rax
0x0000629e      6690           nop
0x000062a0      41803f00       cmp byte [r15], 0
0x000062a4      747f           je 0x6325
0x000062a6      488b742408     mov rsi, qword [rsp + 8]
0x000062ab      4c89ff         mov rdi, r15
0x000062ae      e81d4c0000     call sym.mbsstr
0x000062b3      4885c0         test rax, rax
0x000062b6      4889c5         mov rbp, rax
0x000062b9      746a           je 0x6325
0x000062bb      e830bcffff     call sym.imp.__ctype_get_mb_cur_max
0x000062c0      4883f801       cmp rax, 1
0x000062c4      0f879e000000   ja 0x6368
0x000062ca      4939ef         cmp r15, rbp
0x000062cd      0f8365060000   jae 0x6938
0x000062d3      e8f8bfffff     call sym.imp.__ctype_b_loc
0x000062d8      0fb655ff       movzx edx, byte [rbp - 1]
0x000062dc      488b00         mov rax, qword [rax]
0x000062df      488b7c2408     mov rdi, qword [rsp + 8]
0x000062e4      440fb73c50     movzx r15d, word [rax + rdx*2]
0x000062e9      6641c1ef03     shr r15w, 3
0x000062ee      4183f701       xor r15d, 1
0x000062f2      4489f8         mov eax, r15d
0x000062f5      83e001         and eax, 1
0x000062f8      88442410       mov byte [rsp + 0x10], al
0x000062fc      e8ffbbffff     call sym.imp.strlen
0x00006301      0fb6540500     movzx edx, byte [rbp + rax]
0x00006306      84d2           test dl, dl
0x00006308      0f8546060000   jne 0x6954
0x0000630e      807c241000     cmp byte [rsp + 0x10], 0
0x00006313      7515           jne 0x632a
0x00006315      807d0000       cmp byte [rbp], 0
0x00006319      740a           je 0x6325
0x0000631b      4c8d7d01       lea r15, [rbp + 1]
0x0000631f      41803f00       cmp byte [r15], 0
0x00006323      7581           jne 0x62a6
0x00006325      c644241000     mov byte [rsp + 0x10], 0
0x0000632a      488b7c2408     mov rdi, qword [rsp + 8]
0x0000632f      e89cbaffff     call sym.imp.free
0x00006334      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x0000633c      6448331c2528.  xor rbx, qword fs:[0x28]
0x00006345      0fb6442410     movzx eax, byte [rsp + 0x10]
0x0000634a      0f8546080000   jne 0x6b96
0x00006350      4881c4b80000.  add rsp, 0xb8
0x00006357      5b             pop rbx
0x00006358      5d             pop rbp
0x00006359      415c           pop r12
0x0000635b      415d           pop r13
0x0000635d      415e           pop r14
0x0000635f      415f           pop r15
0x00006361      c3             ret
0x00006362      660f1f440000   nop word [rax + rax]
0x00006368      4939ef         cmp r15, rbp
0x0000636b      4c897c2430     mov qword [rsp + 0x30], r15
0x00006370      c644242000     mov byte [rsp + 0x20], 0
0x00006375      48c743040000.  mov qword [rbx + 4], 0
0x0000637d      c644242c00     mov byte [rsp + 0x2c], 0
0x00006382      7273           jb 0x63f7
0x00006384      e99f050000     jmp 0x6928
0x00006389      0f1f80000000.  nop dword [rax]
0x00006390      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00006395      410fb617       movzx edx, byte [r15]
0x00006399      89d0           mov eax, edx
0x0000639b      c0e805         shr al, 5
0x0000639e      83e007         and eax, 7
0x000063a1      418b448500     mov eax, dword [r13 + rax*4]
0x000063a6      0fa3d0         bt eax, edx
0x000063a9      0f83e9000000   jae 0x6498
0x000063af      48c744243801.  mov qword [rsp + 0x38], 1
0x000063b8      410fbe17       movsx edx, byte [r15]
0x000063bc      c644244001     mov byte [rsp + 0x40], 1
0x000063c1      c644242c01     mov byte [rsp + 0x2c], 1
0x000063c6      89542444       mov dword [rsp + 0x44], edx
0x000063ca      85d2           test edx, edx
0x000063cc      0f84a0070000   je 0x6b72
0x000063d2      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000063d7      488b442438     mov rax, qword [rsp + 0x38]
0x000063dc      0fb64c2440     movzx ecx, byte [rsp + 0x40]
0x000063e1      c644242c00     mov byte [rsp + 0x2c], 0
0x000063e6      4c01f8         add rax, r15
0x000063e9      4839e8         cmp rax, rbp
0x000063ec      4889442430     mov qword [rsp + 0x30], rax
0x000063f1      0f8329010000   jae 0x6520
0x000063f7      807c242000     cmp byte [rsp + 0x20], 0
0x000063fc      7492           je 0x6390
0x000063fe      e8edbaffff     call sym.imp.__ctype_get_mb_cur_max
0x00006403      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00006408      4889c6         mov rsi, rax
0x0000640b      4c89ff         mov rdi, r15
0x0000640e      e83d2c0000     call sym.strnlen1
0x00006413      488d4b04       lea rcx, [rbx + 4]
0x00006417      4889c2         mov rdx, rax
0x0000641a      4c89fe         mov rsi, r15
0x0000641d      4c89f7         mov rdi, r14
0x00006420      e8cb3b0000     call sym.rpl_mbrtowc
0x00006425      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006429      4889442438     mov qword [rsp + 0x38], rax
0x0000642e      0f8484000000   je 0x64b8
0x00006434      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006438      0f849a000000   je 0x64d8
0x0000643e      4885c0         test rax, rax
0x00006441      0f85c9000000   jne 0x6510
0x00006447      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x0000644c      48c744243801.  mov qword [rsp + 0x38], 1
0x00006455      41803f00       cmp byte [r15], 0
0x00006459      0f853c070000   jne 0x6b9b
0x0000645f      8b542444       mov edx, dword [rsp + 0x44]
0x00006463      85d2           test edx, edx
0x00006465      0f85b1060000   jne 0x6b1c
0x0000646b      488d7b04       lea rdi, [rbx + 4]
0x0000646f      89542410       mov dword [rsp + 0x10], edx
0x00006473      c644244001     mov byte [rsp + 0x40], 1
0x00006478      e833beffff     call sym.imp.mbsinit
0x0000647d      85c0           test eax, eax
0x0000647f      8b542410       mov edx, dword [rsp + 0x10]
0x00006483      747b           je 0x6500
0x00006485      c644242000     mov byte [rsp + 0x20], 0
0x0000648a      c644242c01     mov byte [rsp + 0x2c], 1
0x0000648f      e936ffffff     jmp 0x63ca
0x00006494      0f1f4000       nop dword [rax]
0x00006498      488d7b04       lea rdi, [rbx + 4]
0x0000649c      e80fbeffff     call sym.imp.mbsinit
0x000064a1      85c0           test eax, eax
0x000064a3      0f84ce060000   je 0x6b77
0x000064a9      c644242001     mov byte [rsp + 0x20], 1
0x000064ae      e94bffffff     jmp 0x63fe
0x000064b3      0f1f440000     nop dword [rax + rax]
0x000064b8      48c744243801.  mov qword [rsp + 0x38], 1
0x000064c1      c644244000     mov byte [rsp + 0x40], 0
0x000064c6      8b542444       mov edx, dword [rsp + 0x44]
0x000064ca      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000064cf      e903ffffff     jmp 0x63d7
0x000064d4      0f1f4000       nop dword [rax]
0x000064d8      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x000064dd      4c89ff         mov rdi, r15
0x000064e0      e81bbaffff     call sym.imp.strlen
0x000064e5      c644244000     mov byte [rsp + 0x40], 0
0x000064ea      4889442438     mov qword [rsp + 0x38], rax
0x000064ef      8b542444       mov edx, dword [rsp + 0x44]
0x000064f3      e9dffeffff     jmp 0x63d7
0x000064f8      0f1f84000000.  nop dword [rax + rax]
0x00006500      c644242c01     mov byte [rsp + 0x2c], 1
0x00006505      e9c0feffff     jmp 0x63ca
0x0000650a      660f1f440000   nop word [rax + rax]
0x00006510      8b542444       mov edx, dword [rsp + 0x44]
0x00006514      e952ffffff     jmp 0x646b
0x00006519      0f1f80000000.  nop dword [rax]
0x00006520      84c9           test cl, cl
0x00006522      0f8400040000   je 0x6928
0x00006528      89d7           mov edi, edx
0x0000652a      e8b1bbffff     call sym.imp.iswalnum
0x0000652f      85c0           test eax, eax
0x00006531      0f94442410     sete byte [rsp + 0x10]
0x00006536      488b442408     mov rax, qword [rsp + 8]
0x0000653b      48896c2430     mov qword [rsp + 0x30], rbp
0x00006540      c644242000     mov byte [rsp + 0x20], 0
0x00006545      48c743040000.  mov qword [rbx + 4], 0
0x0000654d      c644242c00     mov byte [rsp + 0x2c], 0
0x00006552      c644246000     mov byte [rsp + 0x60], 0
0x00006557      4889442470     mov qword [rsp + 0x70], rax
0x0000655c      49c744240400.  mov qword [r12 + 4], 0
0x00006565      c644246c00     mov byte [rsp + 0x6c], 0
0x0000656a      eb71           jmp 0x65dd
0x0000656c      0f1f4000       nop dword [rax]
0x00006570      807c242000     cmp byte [rsp + 0x20], 0
0x00006575      0f857b020000   jne 0x67f6
0x0000657b      488b4c2430     mov rcx, qword [rsp + 0x30]
0x00006580      0fb611         movzx edx, byte [rcx]
0x00006583      89d0           mov eax, edx
0x00006585      c0e805         shr al, 5
0x00006588      83e007         and eax, 7
0x0000658b      418b448500     mov eax, dword [r13 + rax*4]
0x00006590      0fa3d0         bt eax, edx
0x00006593      0f8347020000   jae 0x67e0
0x00006599      48c744243801.  mov qword [rsp + 0x38], 1
0x000065a2      0fbe01         movsx eax, byte [rcx]
0x000065a5      c644244001     mov byte [rsp + 0x40], 1
0x000065aa      c644242c01     mov byte [rsp + 0x2c], 1
0x000065af      89442444       mov dword [rsp + 0x44], eax
0x000065b3      8b7c2444       mov edi, dword [rsp + 0x44]
0x000065b7      85ff           test edi, edi
0x000065b9      0f84b3050000   je 0x6b72
0x000065bf      488b442438     mov rax, qword [rsp + 0x38]
0x000065c4      4801442430     add qword [rsp + 0x30], rax
0x000065c9      488b442478     mov rax, qword [rsp + 0x78]
0x000065ce      4801442470     add qword [rsp + 0x70], rax
0x000065d3      c644242c00     mov byte [rsp + 0x2c], 0
0x000065d8      c644246c00     mov byte [rsp + 0x6c], 0
0x000065dd      807c246000     cmp byte [rsp + 0x60], 0
0x000065e2      757b           jne 0x665f
0x000065e4      488b4c2470     mov rcx, qword [rsp + 0x70]
0x000065e9      0fb611         movzx edx, byte [rcx]
0x000065ec      89d0           mov eax, edx
0x000065ee      c0e805         shr al, 5
0x000065f1      83e007         and eax, 7
0x000065f4      418b448500     mov eax, dword [r13 + rax*4]
0x000065f9      0fa3d0         bt eax, edx
0x000065fc      734a           jae 0x6648
0x000065fe      48c744247801.  mov qword [rsp + 0x78], 1
0x00006607      0fbe01         movsx eax, byte [rcx]
0x0000660a      c68424800000.  mov byte [rsp + 0x80], 1
0x00006612      c644246c01     mov byte [rsp + 0x6c], 1
0x00006617      898424840000.  mov dword [rsp + 0x84], eax
0x0000661e      8b8c24840000.  mov ecx, dword [rsp + 0x84]
0x00006625      85c9           test ecx, ecx
0x00006627      0f84d3000000   je 0x6700
0x0000662d      807c242c00     cmp byte [rsp + 0x2c], 0
0x00006632      0f8438ffffff   je 0x6570
0x00006638      807c244000     cmp byte [rsp + 0x40], 0
0x0000663d      7480           je 0x65bf
0x0000663f      e96fffffff     jmp 0x65b3
0x00006644      0f1f4000       nop dword [rax]
0x00006648      498d7c2404     lea rdi, [r12 + 4]
0x0000664d      e85ebcffff     call sym.imp.mbsinit
0x00006652      85c0           test eax, eax
0x00006654      0f841d050000   je 0x6b77
0x0000665a      c644246001     mov byte [rsp + 0x60], 1
0x0000665f      e88cb8ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006664      4c8b7c2470     mov r15, qword [rsp + 0x70]
0x00006669      4889c6         mov rsi, rax
0x0000666c      4c89ff         mov rdi, r15
0x0000666f      e8dc290000     call sym.strnlen1
0x00006674      498d4c2404     lea rcx, [r12 + 4]
0x00006679      498d7c2424     lea rdi, [r12 + 0x24]
0x0000667e      4889c2         mov rdx, rax
0x00006681      4c89fe         mov rsi, r15
0x00006684      e867390000     call sym.rpl_mbrtowc
0x00006689      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000668d      4889442478     mov qword [rsp + 0x78], rax
0x00006692      0f84f0010000   je 0x6888
0x00006698      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000669c      0f841e020000   je 0x68c0
0x000066a2      4885c0         test rax, rax
0x000066a5      7526           jne 0x66cd
0x000066a7      488b442470     mov rax, qword [rsp + 0x70]
0x000066ac      48c744247801.  mov qword [rsp + 0x78], 1
0x000066b5      803800         cmp byte [rax], 0
0x000066b8      0f85dd040000   jne 0x6b9b
0x000066be      8bb424840000.  mov esi, dword [rsp + 0x84]
0x000066c5      85f6           test esi, esi
0x000066c7      0f854f040000   jne 0x6b1c
0x000066cd      498d7c2404     lea rdi, [r12 + 4]
0x000066d2      c68424800000.  mov byte [rsp + 0x80], 1
0x000066da      e8d1bbffff     call sym.imp.mbsinit
0x000066df      85c0           test eax, eax
0x000066e1      0f8401020000   je 0x68e8
0x000066e7      8b8c24840000.  mov ecx, dword [rsp + 0x84]
0x000066ee      c644246000     mov byte [rsp + 0x60], 0
0x000066f3      c644246c01     mov byte [rsp + 0x6c], 1
0x000066f8      85c9           test ecx, ecx
0x000066fa      0f852dffffff   jne 0x662d
0x00006700      807c242c00     cmp byte [rsp + 0x2c], 0
0x00006705      0f856d020000   jne 0x6978
0x0000670b      807c242000     cmp byte [rsp + 0x20], 0
0x00006710      0f858c020000   jne 0x69a2
0x00006716      488b4c2430     mov rcx, qword [rsp + 0x30]
0x0000671b      0fb611         movzx edx, byte [rcx]
0x0000671e      89d0           mov eax, edx
0x00006720      c0e805         shr al, 5
0x00006723      83e007         and eax, 7
0x00006726      418b448500     mov eax, dword [r13 + rax*4]
0x0000672b      0fa3d0         bt eax, edx
0x0000672e      0f8358020000   jae 0x698c
0x00006734      48c744243801.  mov qword [rsp + 0x38], 1
0x0000673d      0fbe11         movsx edx, byte [rcx]
0x00006740      c644244001     mov byte [rsp + 0x40], 1
0x00006745      c644242c01     mov byte [rsp + 0x2c], 1
0x0000674a      89542444       mov dword [rsp + 0x44], edx
0x0000674e      85d2           test edx, edx
0x00006750      7412           je 0x6764
0x00006752      807c244000     cmp byte [rsp + 0x40], 0
0x00006757      740b           je 0x6764
0x00006759      89d7           mov edi, edx
0x0000675b      e880b9ffff     call sym.imp.iswalnum
0x00006760      85c0           test eax, eax
0x00006762      750b           jne 0x676f
0x00006764      807c241000     cmp byte [rsp + 0x10], 0
0x00006769      0f85bbfbffff   jne 0x632a
0x0000676f      48896c2430     mov qword [rsp + 0x30], rbp
0x00006774      c644242000     mov byte [rsp + 0x20], 0
0x00006779      4c8d7b04       lea r15, [rbx + 4]
0x0000677d      48c743040000.  mov qword [rbx + 4], 0
0x00006785      c644242c00     mov byte [rsp + 0x2c], 0
0x0000678a      0fb65500       movzx edx, byte [rbp]
0x0000678e      89d0           mov eax, edx
0x00006790      c0e805         shr al, 5
0x00006793      83e007         and eax, 7
0x00006796      418b448500     mov eax, dword [r13 + rax*4]
0x0000679b      0fa3d0         bt eax, edx
0x0000679e      0f838c020000   jae 0x6a30
0x000067a4      48c744243801.  mov qword [rsp + 0x38], 1
0x000067ad      0fbe4500       movsx eax, byte [rbp]
0x000067b1      c644244001     mov byte [rsp + 0x40], 1
0x000067b6      c644242c01     mov byte [rsp + 0x2c], 1
0x000067bb      89442444       mov dword [rsp + 0x44], eax
0x000067bf      8b442444       mov eax, dword [rsp + 0x44]
0x000067c3      85c0           test eax, eax
0x000067c5      0f845afbffff   je 0x6325
0x000067cb      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000067d0      4901ef         add r15, rbp
0x000067d3      e9c8faffff     jmp 0x62a0
0x000067d8      0f1f84000000.  nop dword [rax + rax]
0x000067e0      488d7b04       lea rdi, [rbx + 4]
0x000067e4      e8c7baffff     call sym.imp.mbsinit
0x000067e9      85c0           test eax, eax
0x000067eb      0f8486030000   je 0x6b77
0x000067f1      c644242001     mov byte [rsp + 0x20], 1
0x000067f6      e8f5b6ffff     call sym.imp.__ctype_get_mb_cur_max
0x000067fb      4c8b7c2430     mov r15, qword [rsp + 0x30]
0x00006800      4889c6         mov rsi, rax
0x00006803      4c89ff         mov rdi, r15
0x00006806      e845280000     call sym.strnlen1
0x0000680b      488d4b04       lea rcx, [rbx + 4]
0x0000680f      4889c2         mov rdx, rax
0x00006812      4c89fe         mov rsi, r15
0x00006815      4c89f7         mov rdi, r14
0x00006818      e8d3370000     call sym.rpl_mbrtowc
0x0000681d      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006821      4889442438     mov qword [rsp + 0x38], rax
0x00006826      0f847c000000   je 0x68a8
0x0000682c      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006830      0f84c2000000   je 0x68f8
0x00006836      4885c0         test rax, rax
0x00006839      7525           jne 0x6860
0x0000683b      488b442430     mov rax, qword [rsp + 0x30]
0x00006840      48c744243801.  mov qword [rsp + 0x38], 1
0x00006849      803800         cmp byte [rax], 0
0x0000684c      0f8549030000   jne 0x6b9b
0x00006852      448b442444     mov r8d, dword [rsp + 0x44]
0x00006857      4585c0         test r8d, r8d
0x0000685a      0f85bc020000   jne 0x6b1c
0x00006860      488d7b04       lea rdi, [rbx + 4]
0x00006864      c644244001     mov byte [rsp + 0x40], 1
0x00006869      e842baffff     call sym.imp.mbsinit
0x0000686e      85c0           test eax, eax
0x00006870      0f84a2000000   je 0x6918
0x00006876      c644242000     mov byte [rsp + 0x20], 0
0x0000687b      c644242c01     mov byte [rsp + 0x2c], 1
0x00006880      e92efdffff     jmp 0x65b3
0x00006885      0f1f00         nop dword [rax]
0x00006888      48c744247801.  mov qword [rsp + 0x78], 1
0x00006891      c68424800000.  mov byte [rsp + 0x80], 0
0x00006899      c644246c01     mov byte [rsp + 0x6c], 1
0x0000689e      e98afdffff     jmp 0x662d
0x000068a3      0f1f440000     nop dword [rax + rax]
0x000068a8      48c744243801.  mov qword [rsp + 0x38], 1
0x000068b1      c644244000     mov byte [rsp + 0x40], 0
0x000068b6      e904fdffff     jmp 0x65bf
0x000068bb      0f1f440000     nop dword [rax + rax]
0x000068c0      488b7c2470     mov rdi, qword [rsp + 0x70]
0x000068c5      e836b6ffff     call sym.imp.strlen
0x000068ca      c68424800000.  mov byte [rsp + 0x80], 0
0x000068d2      4889442478     mov qword [rsp + 0x78], rax
0x000068d7      c644246c01     mov byte [rsp + 0x6c], 1
0x000068dc      e94cfdffff     jmp 0x662d
0x000068e1      0f1f80000000.  nop dword [rax]
0x000068e8      c644246c01     mov byte [rsp + 0x6c], 1
0x000068ed      e92cfdffff     jmp 0x661e
0x000068f2      660f1f440000   nop word [rax + rax]
0x000068f8      488b7c2430     mov rdi, qword [rsp + 0x30]
0x000068fd      e8feb5ffff     call sym.imp.strlen
0x00006902      c644244000     mov byte [rsp + 0x40], 0
0x00006907      4889442438     mov qword [rsp + 0x38], rax
0x0000690c      e9aefcffff     jmp 0x65bf
0x00006911      0f1f80000000.  nop dword [rax]
0x00006918      c644242c01     mov byte [rsp + 0x2c], 1
0x0000691d      e991fcffff     jmp 0x65b3
0x00006922      660f1f440000   nop word [rax + rax]
0x00006928      c644241001     mov byte [rsp + 0x10], 1
0x0000692d      e904fcffff     jmp 0x6536
0x00006932      660f1f440000   nop word [rax + rax]
0x00006938      488b7c2408     mov rdi, qword [rsp + 8]
0x0000693d      e8beb5ffff     call sym.imp.strlen
0x00006942      0fb6540500     movzx edx, byte [rbp + rax]
0x00006947      c644241001     mov byte [rsp + 0x10], 1
0x0000694c      84d2           test dl, dl
0x0000694e      0f84d6f9ffff   je 0x632a
0x00006954      88542418       mov byte [rsp + 0x18], dl
0x00006958      e873b9ffff     call sym.imp.__ctype_b_loc
0x0000695d      0fb6542418     movzx edx, byte [rsp + 0x18]
0x00006962      488b00         mov rax, qword [rax]
0x00006965      f6045008       test byte [rax + rdx*2], 8
0x00006969      0f85a6f9ffff   jne 0x6315
0x0000696f      e99af9ffff     jmp 0x630e
0x00006974      0f1f4000       nop dword [rax]
0x00006978      807c244000     cmp byte [rsp + 0x40], 0
0x0000697d      8b542444       mov edx, dword [rsp + 0x44]
0x00006981      0f84cbfdffff   je 0x6752
0x00006987      e9c2fdffff     jmp 0x674e
0x0000698c      488d7b04       lea rdi, [rbx + 4]
0x00006990      e81bb9ffff     call sym.imp.mbsinit
0x00006995      85c0           test eax, eax
0x00006997      0f84da010000   je 0x6b77
0x0000699d      c644242001     mov byte [rsp + 0x20], 1
0x000069a2      e849b5ffff     call sym.imp.__ctype_get_mb_cur_max
0x000069a7      4c8b442430     mov r8, qword [rsp + 0x30]
0x000069ac      4889c6         mov rsi, rax
0x000069af      4c89c7         mov rdi, r8
0x000069b2      4c89442418     mov qword [rsp + 0x18], r8
0x000069b7      e894260000     call sym.strnlen1
0x000069bc      4c8b442418     mov r8, qword [rsp + 0x18]
0x000069c1      488d4b04       lea rcx, [rbx + 4]
0x000069c5      4889c2         mov rdx, rax
0x000069c8      4c89f7         mov rdi, r14
0x000069cb      4c89c6         mov rsi, r8
0x000069ce      e81d360000     call sym.rpl_mbrtowc
0x000069d3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000069d7      4889442438     mov qword [rsp + 0x38], rax
0x000069dc      0f84ed000000   je 0x6acf
0x000069e2      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000069e6      0f8464010000   je 0x6b50
0x000069ec      4885c0         test rax, rax
0x000069ef      0f8404010000   je 0x6af9
0x000069f5      8b542444       mov edx, dword [rsp + 0x44]
0x000069f9      488d7b04       lea rdi, [rbx + 4]
0x000069fd      89542418       mov dword [rsp + 0x18], edx
0x00006a01      c644244001     mov byte [rsp + 0x40], 1
0x00006a06      e8a5b8ffff     call sym.imp.mbsinit
0x00006a0b      85c0           test eax, eax
0x00006a0d      8b542418       mov edx, dword [rsp + 0x18]
0x00006a11      0f841b010000   je 0x6b32
0x00006a17      c644242000     mov byte [rsp + 0x20], 0
0x00006a1c      c644242c01     mov byte [rsp + 0x2c], 1
0x00006a21      e928fdffff     jmp 0x674e
0x00006a26      662e0f1f8400.  nop word cs:[rax + rax]
0x00006a30      4c89ff         mov rdi, r15
0x00006a33      e878b8ffff     call sym.imp.mbsinit
0x00006a38      85c0           test eax, eax
0x00006a3a      0f8437010000   je 0x6b77
0x00006a40      c644242001     mov byte [rsp + 0x20], 1
0x00006a45      e8a6b4ffff     call sym.imp.__ctype_get_mb_cur_max
0x00006a4a      4c8b442430     mov r8, qword [rsp + 0x30]
0x00006a4f      4889c6         mov rsi, rax
0x00006a52      4c89c7         mov rdi, r8
0x00006a55      4c89442410     mov qword [rsp + 0x10], r8
0x00006a5a      e8f1250000     call sym.strnlen1
0x00006a5f      4c8b442410     mov r8, qword [rsp + 0x10]
0x00006a64      4c89f9         mov rcx, r15
0x00006a67      4889c2         mov rdx, rax
0x00006a6a      4c89f7         mov rdi, r14
0x00006a6d      4c89c6         mov rsi, r8
0x00006a70      e87b350000     call sym.rpl_mbrtowc
0x00006a75      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006a79      4889442438     mov qword [rsp + 0x38], rax
0x00006a7e      746b           je 0x6aeb
0x00006a80      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00006a84      0f84b2000000   je 0x6b3c
0x00006a8a      4885c0         test rax, rax
0x00006a8d      751f           jne 0x6aae
0x00006a8f      488b442430     mov rax, qword [rsp + 0x30]
0x00006a94      48c744243801.  mov qword [rsp + 0x38], 1
0x00006a9d      803800         cmp byte [rax], 0
0x00006aa0      0f85f5000000   jne 0x6b9b
0x00006aa6      8b542444       mov edx, dword [rsp + 0x44]
0x00006aaa      85d2           test edx, edx
0x00006aac      756e           jne 0x6b1c
0x00006aae      488d7b04       lea rdi, [rbx + 4]
0x00006ab2      c644244001     mov byte [rsp + 0x40], 1
0x00006ab7      e8f4b7ffff     call sym.imp.mbsinit
0x00006abc      85c0           test eax, eax
0x00006abe      7468           je 0x6b28
0x00006ac0      c644242000     mov byte [rsp + 0x20], 0
0x00006ac5      c644242c01     mov byte [rsp + 0x2c], 1
0x00006aca      e9f0fcffff     jmp 0x67bf
0x00006acf      48c744243801.  mov qword [rsp + 0x38], 1
0x00006ad8      c644244000     mov byte [rsp + 0x40], 0
0x00006add      8b542444       mov edx, dword [rsp + 0x44]
0x00006ae1      c644242c01     mov byte [rsp + 0x2c], 1
0x00006ae6      e967fcffff     jmp 0x6752
0x00006aeb      48c744243801.  mov qword [rsp + 0x38], 1
0x00006af4      e9d2fcffff     jmp 0x67cb
0x00006af9      488b442430     mov rax, qword [rsp + 0x30]
0x00006afe      48c744243801.  mov qword [rsp + 0x38], 1
0x00006b07      803800         cmp byte [rax], 0
0x00006b0a      0f858b000000   jne 0x6b9b
0x00006b10      8b542444       mov edx, dword [rsp + 0x44]
0x00006b14      85d2           test edx, edx
0x00006b16      0f84ddfeffff   je 0x69f9
0x00006b1c      e8efb7ffff     call sym.mbuiter_multi_next.part.0
0x00006b21      0f1f80000000.  nop dword [rax]
0x00006b28      c644242c01     mov byte [rsp + 0x2c], 1
0x00006b2d      e98dfcffff     jmp 0x67bf
0x00006b32      c644242c01     mov byte [rsp + 0x2c], 1
0x00006b37      e912fcffff     jmp 0x674e
0x00006b3c      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00006b41      e8bab3ffff     call sym.imp.strlen
0x00006b46      4889442438     mov qword [rsp + 0x38], rax
0x00006b4b      e97bfcffff     jmp 0x67cb
0x00006b50      488b7c2430     mov rdi, qword [rsp + 0x30]
0x00006b55      e8a6b3ffff     call sym.imp.strlen
0x00006b5a      c644244000     mov byte [rsp + 0x40], 0
0x00006b5f      4889442438     mov qword [rsp + 0x38], rax
0x00006b64      8b542444       mov edx, dword [rsp + 0x44]
0x00006b68      c644242c01     mov byte [rsp + 0x2c], 1
0x00006b6d      e9e0fbffff     jmp 0x6752
0x00006b72      e869b2ffff     call sym.imp.abort
0x00006b77      488d0d529500.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; 0x100d0 ; "mbuiter_multi_next"
0x00006b7e      488d35d39400.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x00006b85      488d3dfe9400.  lea rdi, str.mbsinit___iter__state      ; 0x1008a ; "mbsinit (&iter->state)"
0x00006b8c      ba96000000     mov edx, 0x96
0x00006b91      e84ab4ffff     call sym.imp.__assert_fail
0x00006b96      e885b3ffff     call sym.imp.__stack_chk_fail
0x00006b9b      488d0d2e9500.  lea rcx, obj.__PRETTY_FUNCTION__.5159   ; 0x100d0 ; "mbuiter_multi_next"
0x00006ba2      488d35af9400.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x00006ba9      488d3df19400.  lea rdi, str.iter__cur.ptr_______0      ; 0x100a1 ; "*iter->cur.ptr == '\0'"
0x00006bb0      bab2000000     mov edx, 0xb2
0x00006bb5      e826b4ffff     call sym.imp.__assert_fail
0x00006bba      660f1f440000   nop word [rax + rax]
;-- proper_name:
0x00006bc0      4154           push r12
0x00006bc2      55             push rbp
0x00006bc3      4889fe         mov rsi, rdi
0x00006bc6      53             push rbx
0x00006bc7      4889fd         mov rbp, rdi
0x00006bca      ba05000000     mov edx, 5
0x00006bcf      31ff           xor edi, edi
0x00006bd1      e80ab3ffff     call sym.imp.dcgettext
0x00006bd6      4839c5         cmp rbp, rax
0x00006bd9      4889c3         mov rbx, rax
0x00006bdc      740f           je 0x6bed
0x00006bde      4889ee         mov rsi, rbp
0x00006be1      4889c7         mov rdi, rax
0x00006be4      e867f6ffff     call sym.mbsstr_trimmed_wordbounded
0x00006be9      84c0           test al, al
0x00006beb      740b           je 0x6bf8
0x00006bed      4889d8         mov rax, rbx
0x00006bf0      5b             pop rbx
0x00006bf1      5d             pop rbp
0x00006bf2      415c           pop r12
0x00006bf4      c3             ret
0x00006bf5      0f1f00         nop dword [rax]
0x00006bf8      4889df         mov rdi, rbx
0x00006bfb      e800b3ffff     call sym.imp.strlen
0x00006c00      4889ef         mov rdi, rbp
0x00006c03      4989c4         mov r12, rax
0x00006c06      e8f5b2ffff     call sym.imp.strlen
0x00006c0b      498d7c0404     lea rdi, [r12 + rax + 4]
0x00006c10      e8cb300000     call sym.xmalloc
0x00006c15      488d0d9c9400.  lea rcx, str.s___s                      ; 0x100b8 ; "%s (%s)"
0x00006c1c      4989c4         mov r12, rax
0x00006c1f      4989e9         mov r9, rbp
0x00006c22      4989d8         mov r8, rbx
0x00006c25      4889c7         mov rdi, rax
0x00006c28      4c89e3         mov rbx, r12
0x00006c2b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006c32      be01000000     mov esi, 1
0x00006c37      31c0           xor eax, eax
0x00006c39      e8b2b6ffff     call sym.imp.__sprintf_chk
0x00006c3e      4889d8         mov rax, rbx
0x00006c41      5b             pop rbx
0x00006c42      5d             pop rbp
0x00006c43      415c           pop r12
0x00006c45      c3             ret
0x00006c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- proper_name_utf8:
0x00006c50      4157           push r15
0x00006c52      4156           push r14
0x00006c54      ba05000000     mov edx, 5
0x00006c59      4155           push r13
0x00006c5b      4154           push r12
0x00006c5d      4989fd         mov r13, rdi
0x00006c60      55             push rbp
0x00006c61      53             push rbx
0x00006c62      4889f5         mov rbp, rsi
0x00006c65      4889fe         mov rsi, rdi
0x00006c68      31ff           xor edi, edi
0x00006c6a      4883ec18       sub rsp, 0x18
0x00006c6e      e86db2ffff     call sym.imp.dcgettext
0x00006c73      4989c6         mov r14, rax
0x00006c76      e835350000     call sym.locale_charset
0x00006c7b      488d353e9400.  lea rsi, str.UTF_8                      ; 0x100c0 ; "UTF-8"
0x00006c82      4889c7         mov rdi, rax
0x00006c85      4989c4         mov r12, rax
0x00006c88      e8f3330000     call sym.c_strcasecmp
0x00006c8d      85c0           test eax, eax
0x00006c8f      0f85e3000000   jne 0x6d78
0x00006c95      4885ed         test rbp, rbp
0x00006c98      7456           je 0x6cf0
0x00006c9a      48896c2408     mov qword [rsp + 8], rbp
0x00006c9f      4889eb         mov rbx, rbp
0x00006ca2      4531e4         xor r12d, r12d
0x00006ca5      4531ff         xor r15d, r15d
0x00006ca8      4c89ee         mov rsi, r13
0x00006cab      4c89f7         mov rdi, r14
0x00006cae      e8bdb3ffff     call sym.imp.strcmp
0x00006cb3      85c0           test eax, eax
0x00006cb5      755a           jne 0x6d11
0x00006cb7      4d85ff         test r15, r15
0x00006cba      740d           je 0x6cc9
0x00006cbc      4c39fb         cmp rbx, r15
0x00006cbf      7408           je 0x6cc9
0x00006cc1      4c89ff         mov rdi, r15
0x00006cc4      e807b1ffff     call sym.imp.free
0x00006cc9      4d85e4         test r12, r12
0x00006ccc      740d           je 0x6cdb
0x00006cce      4c39e3         cmp rbx, r12
0x00006cd1      7408           je 0x6cdb
0x00006cd3      4c89e7         mov rdi, r12
0x00006cd6      e8f5b0ffff     call sym.imp.free
0x00006cdb      4883c418       add rsp, 0x18
0x00006cdf      4889d8         mov rax, rbx
0x00006ce2      5b             pop rbx
0x00006ce3      5d             pop rbp
0x00006ce4      415c           pop r12
0x00006ce6      415d           pop r13
0x00006ce8      415e           pop r14
0x00006cea      415f           pop r15
0x00006cec      c3             ret
0x00006ced      0f1f00         nop dword [rax]
0x00006cf0      4c89ee         mov rsi, r13
0x00006cf3      4c89f7         mov rdi, r14
0x00006cf6      48c744240800.  mov qword [rsp + 8], 0
0x00006cff      4531e4         xor r12d, r12d
0x00006d02      4531ff         xor r15d, r15d
0x00006d05      4c89eb         mov rbx, r13
0x00006d08      e863b3ffff     call sym.imp.strcmp
0x00006d0d      85c0           test eax, eax
0x00006d0f      74a6           je 0x6cb7
0x00006d11      4c89ee         mov rsi, r13
0x00006d14      4c89f7         mov rdi, r14
0x00006d17      e834f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006d1c      84c0           test al, al
0x00006d1e      7538           jne 0x6d58
0x00006d20      4885ed         test rbp, rbp
0x00006d23      740f           je 0x6d34
0x00006d25      4889ee         mov rsi, rbp
0x00006d28      4c89f7         mov rdi, r14
0x00006d2b      e820f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006d30      84c0           test al, al
0x00006d32      7524           jne 0x6d58
0x00006d34      48837c240800   cmp qword [rsp + 8], 0
0x00006d3a      0f8470010000   je 0x6eb0
0x00006d40      488b742408     mov rsi, qword [rsp + 8]
0x00006d45      4c89f7         mov rdi, r14
0x00006d48      e803f5ffff     call sym.mbsstr_trimmed_wordbounded
0x00006d4d      84c0           test al, al
0x00006d4f      0f845b010000   je 0x6eb0
0x00006d55      0f1f00         nop dword [rax]
0x00006d58      4d85ff         test r15, r15
0x00006d5b      0f85ef000000   jne 0x6e50
0x00006d61      4d85e4         test r12, r12
0x00006d64      4c89f3         mov rbx, r14
0x00006d67      0f8566ffffff   jne 0x6cd3
0x00006d6d      e969ffffff     jmp 0x6cdb
0x00006d72      660f1f440000   nop word [rax + rax]
0x00006d78      488d35419300.  lea rsi, str.UTF_8                      ; 0x100c0 ; "UTF-8"
0x00006d7f      4c89e2         mov rdx, r12
0x00006d82      4889ef         mov rdi, rbp
0x00006d85      e836320000     call sym.xstr_iconv
0x00006d8a      4c89e7         mov rdi, r12
0x00006d8d      4889c3         mov rbx, rax
0x00006d90      e86bb1ffff     call sym.imp.strlen
0x00006d95      488d780b       lea rdi, [rax + 0xb]
0x00006d99      4989c7         mov r15, rax
0x00006d9c      e83f2f0000     call sym.xmalloc
0x00006da1      4c89fa         mov rdx, r15
0x00006da4      4c89e6         mov rsi, r12
0x00006da7      4889c7         mov rdi, rax
0x00006daa      e8f1b2ffff     call sym.imp.memcpy
0x00006daf      4889c1         mov rcx, rax
0x00006db2      4901c7         add r15, rax
0x00006db5      48b82f2f5452.  movabs rax, 0x4c534e4152542f2f          ; '//TRANSL'
0x00006dbf      498907         mov qword [r15], rax
0x00006dc2      488d35f79200.  lea rsi, str.UTF_8                      ; 0x100c0 ; "UTF-8"
0x00006dc9      b849540000     mov eax, 0x5449                         ; 'IT'
0x00006dce      4889ca         mov rdx, rcx
0x00006dd1      4889ef         mov rdi, rbp
0x00006dd4      6641894708     mov word [r15 + 8], ax
0x00006dd9      41c6470a00     mov byte [r15 + 0xa], 0
0x00006dde      48894c2408     mov qword [rsp + 8], rcx
0x00006de3      e8d8310000     call sym.xstr_iconv
0x00006de8      488b4c2408     mov rcx, qword [rsp + 8]
0x00006ded      4989c4         mov r12, rax
0x00006df0      4889cf         mov rdi, rcx
0x00006df3      e8d8afffff     call sym.imp.free
0x00006df8      4d85e4         test r12, r12
0x00006dfb      741a           je 0x6e17
0x00006dfd      be3f000000     mov esi, 0x3f                           ; '?'
0x00006e02      4c89e7         mov rdi, r12
0x00006e05      e866b1ffff     call sym.imp.strchr
0x00006e0a      4885c0         test rax, rax
0x00006e0d      7461           je 0x6e70
0x00006e0f      4c89e7         mov rdi, r12
0x00006e12      e8b9afffff     call sym.imp.free
0x00006e17      4885db         test rbx, rbx
0x00006e1a      7474           je 0x6e90
0x00006e1c      4c89ee         mov rsi, r13
0x00006e1f      4c89f7         mov rdi, r14
0x00006e22      e849b2ffff     call sym.imp.strcmp
0x00006e27      85c0           test eax, eax
0x00006e29      0f84acfeffff   je 0x6cdb
0x00006e2f      4c89ee         mov rsi, r13
0x00006e32      4c89f7         mov rdi, r14
0x00006e35      e816f4ffff     call sym.mbsstr_trimmed_wordbounded
0x00006e3a      84c0           test al, al
0x00006e3c      0f84d6000000   je 0x6f18
0x00006e42      4989df         mov r15, rbx
0x00006e45      4531e4         xor r12d, r12d
0x00006e48      0f1f84000000.  nop dword [rax + rax]
0x00006e50      4c89ff         mov rdi, r15
0x00006e53      4c89f3         mov rbx, r14
0x00006e56      e875afffff     call sym.imp.free
0x00006e5b      4d85e4         test r12, r12
0x00006e5e      0f856ffeffff   jne 0x6cd3
0x00006e64      e972feffff     jmp 0x6cdb
0x00006e69      0f1f80000000.  nop dword [rax]
0x00006e70      4885db         test rbx, rbx
0x00006e73      4c89642408     mov qword [rsp + 8], r12
0x00006e78      0f84b2000000   je 0x6f30
0x00006e7e      4889dd         mov rbp, rbx
0x00006e81      4989df         mov r15, rbx
0x00006e84      e91ffeffff     jmp 0x6ca8
0x00006e89      0f1f80000000.  nop dword [rax]
0x00006e90      4c89eb         mov rbx, r13
0x00006e93      48c744240800.  mov qword [rsp + 8], 0
0x00006e9c      31ed           xor ebp, ebp
0x00006e9e      4531e4         xor r12d, r12d
0x00006ea1      4531ff         xor r15d, r15d
0x00006ea4      e9fffdffff     jmp 0x6ca8
0x00006ea9      0f1f80000000.  nop dword [rax]
0x00006eb0      4c89f7         mov rdi, r14
0x00006eb3      e848b0ffff     call sym.imp.strlen
0x00006eb8      4889df         mov rdi, rbx
0x00006ebb      4889c5         mov rbp, rax
0x00006ebe      e83db0ffff     call sym.imp.strlen
0x00006ec3      488d7c0504     lea rdi, [rbp + rax + 4]
0x00006ec8      e8132e0000     call sym.xmalloc
0x00006ecd      488d0de49100.  lea rcx, str.s___s                      ; 0x100b8 ; "%s (%s)"
0x00006ed4      4889c7         mov rdi, rax
0x00006ed7      4889c5         mov rbp, rax
0x00006eda      4989d9         mov r9, rbx
0x00006edd      31c0           xor eax, eax
0x00006edf      4d89f0         mov r8, r14
0x00006ee2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00006ee9      be01000000     mov esi, 1
0x00006eee      e8fdb3ffff     call sym.imp.__sprintf_chk
0x00006ef3      4d85ff         test r15, r15
0x00006ef6      7408           je 0x6f00
0x00006ef8      4c89ff         mov rdi, r15
0x00006efb      e8d0aeffff     call sym.imp.free
0x00006f00      4d85e4         test r12, r12
0x00006f03      4889eb         mov rbx, rbp
0x00006f06      0f85c7fdffff   jne 0x6cd3
0x00006f0c      e9cafdffff     jmp 0x6cdb
0x00006f11      0f1f80000000.  nop dword [rax]
0x00006f18      4889dd         mov rbp, rbx
0x00006f1b      4989df         mov r15, rbx
0x00006f1e      48c744240800.  mov qword [rsp + 8], 0
0x00006f27      4531e4         xor r12d, r12d
0x00006f2a      e9f1fdffff     jmp 0x6d20
0x00006f2f      90             nop
0x00006f30      31ed           xor ebp, ebp
0x00006f32      4531ff         xor r15d, r15d
0x00006f35      4c89e3         mov rbx, r12
0x00006f38      e96bfdffff     jmp 0x6ca8
0x00006f3d      0f1f00         nop dword [rax]
;-- gettext_quote.part.1:
0x00006f40      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00006f41      53             push rbx
0x00006f42      4889fd         mov rbp, rdi
0x00006f45      89f3           mov ebx, esi
0x00006f47      4883ec08       sub rsp, 8
0x00006f4b      e860320000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00006f50      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00006f53      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006f56      80fa55         cmp dl, 0x55
0x00006f59      7475           je 0x6fd0
0x00006f5b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00006f5e      7420           je 0x6f80
0x00006f60      488d058b9100.  lea rax, str.l______l                   ; 0x100f2 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00006f67      488d15489100.  lea rdx, [0x000100b6]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; "'"
0x00006f6e      83fb09         cmp ebx, 9
0x00006f71      480f45c2       cmovne rax, rdx
0x00006f75      4883c408       add rsp, 8
0x00006f79      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00006f7a      5d             pop rbp
0x00006f7b      c3             ret
0x00006f7c      0f1f4000       nop dword [rax]
0x00006f80      0fb65001       movzx edx, byte [rax + 1]
0x00006f84      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006f87      80fa42         cmp dl, 0x42
0x00006f8a      75d4           jne 0x6f60
0x00006f8c      80780231       cmp byte [rax + 2], 0x31
0x00006f90      75ce           jne 0x6f60
0x00006f92      80780338       cmp byte [rax + 3], 0x38
0x00006f96      75c8           jne 0x6f60
0x00006f98      80780430       cmp byte [rax + 4], 0x30
0x00006f9c      75c2           jne 0x6f60
0x00006f9e      80780533       cmp byte [rax + 5], 0x33
0x00006fa2      75bc           jne 0x6f60
0x00006fa4      80780630       cmp byte [rax + 6], 0x30
0x00006fa8      75b6           jne 0x6f60
0x00006faa      80780700       cmp byte [rax + 7], 0
0x00006fae      75b0           jne 0x6f60
0x00006fb0      807d0060       cmp byte [rbp], 0x60
0x00006fb4      488d05309100.  lea rax, [0x000100eb]
0x00006fbb      488d152d9100.  lea rdx, [0x000100ef]
0x00006fc2      480f45c2       cmovne rax, rdx
0x00006fc6      4883c408       add rsp, 8
0x00006fca      5b             pop rbx
0x00006fcb      5d             pop rbp
0x00006fcc      c3             ret
0x00006fcd      0f1f00         nop dword [rax]
0x00006fd0      0fb65001       movzx edx, byte [rax + 1]
0x00006fd4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006fd7      80fa54         cmp dl, 0x54
0x00006fda      7584           jne 0x6f60
0x00006fdc      0fb65002       movzx edx, byte [rax + 2]
0x00006fe0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00006fe3      80fa46         cmp dl, 0x46
0x00006fe6      0f8574ffffff   jne 0x6f60
0x00006fec      8078032d       cmp byte [rax + 3], 0x2d
0x00006ff0      0f856affffff   jne 0x6f60
0x00006ff6      80780438       cmp byte [rax + 4], 0x38
0x00006ffa      0f8560ffffff   jne 0x6f60
0x00007000      80780500       cmp byte [rax + 5], 0
0x00007004      0f8556ffffff   jne 0x6f60
0x0000700a      807d0060       cmp byte [rbp], 0x60
0x0000700e      488d05ce9000.  lea rax, [0x000100e3]                   ; "\u2018"
0x00007015      488d15cb9000.  lea rdx, [0x000100e7]                   ; "\u2019"
0x0000701c      480f45c2       cmovne rax, rdx
0x00007020      4883c408       add rsp, 8
0x00007024      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00007025      5d             pop rbp
0x00007026      c3             ret
0x00007027      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00007030      4157           push r15
0x00007032      4156           push r14
0x00007034      4589c7         mov r15d, r8d
0x00007037      4155           push r13
0x00007039      4154           push r12
0x0000703b      4989fe         mov r14, rdi
0x0000703e      55             push rbp
0x0000703f      53             push rbx
0x00007040      4489cb         mov ebx, r9d
0x00007043      4989f5         mov r13, rsi
0x00007046      4889cd         mov rbp, rcx
0x00007049      83e302         and ebx, 2
0x0000704c      4881ecb80000.  sub rsp, 0xb8
0x00007053      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000705b      4889542410     mov qword [rsp + 0x10], rdx
0x00007060      4489442408     mov dword [rsp + 8], r8d
0x00007065      44894c2478     mov dword [rsp + 0x78], r9d
0x0000706a      4889442420     mov qword [rsp + 0x20], rax
0x0000706f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00007077      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000707c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00007084      4889442460     mov qword [rsp + 0x60], rax
0x00007089      64488b042528.  mov rax, qword fs:[0x28]
0x00007092      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000709a      31c0           xor eax, eax
0x0000709c      e84faeffff     call sym.imp.__ctype_get_mb_cur_max
0x000070a1      4183ff0a       cmp r15d, 0xa
0x000070a5      4889442458     mov qword [rsp + 0x58], rax
0x000070aa      0f87af110000   ja 0x825f
0x000070b0      488d0da99000.  lea rcx, [0x00010160]
0x000070b7      4489fa         mov edx, r15d
0x000070ba      48630491       movsxd rax, dword [rcx + rdx*4]
0x000070be      4801c8         add rax, rcx
0x000070c1      ffe0           jmp rax
0x000070c3      c644240e01     mov byte [rsp + 0xe], 1
0x000070c8      c644247c00     mov byte [rsp + 0x7c], 0
0x000070cd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000070d0      48c744245000.  mov qword [rsp + 0x50], 0
0x000070d9      c644240f01     mov byte [rsp + 0xf], 1
0x000070de      c644240d00     mov byte [rsp + 0xd], 0
0x000070e3      488d05cc8f00.  lea rax, [0x000100b6]                   ; "'"
0x000070ea      48c744241801.  mov qword [rsp + 0x18], 1
0x000070f3      4531ff         xor r15d, r15d
0x000070f6      c74424080200.  mov dword [rsp + 8], 2
0x000070fe      4889442448     mov qword [rsp + 0x48], rax
0x00007103      4531db         xor r11d, r11d
0x00007106      4889e8         mov rax, rbp
0x00007109      4589e0         mov r8d, r12d
0x0000710c      4c89dd         mov rbp, r11
0x0000710f      4989c3         mov r11, rax
0x00007112      660f1f440000   nop word [rax + rax]
0x00007118      4939eb         cmp r11, rbp
0x0000711b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000711f      4983fbff       cmp r11, 0xffffffffffffffff
0x00007123      750d           jne 0x7132
0x00007125      488b442410     mov rax, qword [rsp + 0x10]
0x0000712a      803c2800       cmp byte [rax + rbp], 0
0x0000712e      410f95c4       setne r12b
0x00007132      4584e4         test r12b, r12b
0x00007135      0f8455060000   je 0x7790
0x0000713b      837c240802     cmp dword [rsp + 8], 2
0x00007140      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007145      4c8d0c2f       lea r9, [rdi + rbp]
0x00007149      0f95c0         setne al
0x0000714c      2244240d       and al, byte [rsp + 0xd]
0x00007150      4189c2         mov r10d, eax
0x00007153      0f84a7000000   je 0x7200
0x00007159      488b442418     mov rax, qword [rsp + 0x18]
0x0000715e      4885c0         test rax, rax
0x00007161      0f8429040000   je 0x7590
0x00007167      4983fbff       cmp r11, 0xffffffffffffffff
0x0000716b      488d5c0500     lea rbx, [rbp + rax]
0x00007170      752e           jne 0x71a0
0x00007172      4883f801       cmp rax, 1
0x00007176      7628           jbe 0x71a0
0x00007178      4488442438     mov byte [rsp + 0x38], r8b
0x0000717d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00007182      4c894c2428     mov qword [rsp + 0x28], r9
0x00007187      e874adffff     call sym.imp.strlen
0x0000718c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00007192      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00007198      4989c3         mov r11, rax
0x0000719b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000071a0      4c39db         cmp rbx, r11
0x000071a3      4488542428     mov byte [rsp + 0x28], r10b
0x000071a8      0f87b2050000   ja 0x7760
0x000071ae      488b542418     mov rdx, qword [rsp + 0x18]
0x000071b3      488b742448     mov rsi, qword [rsp + 0x48]
0x000071b8      4c89cf         mov rdi, r9
0x000071bb      4c895c2440     mov qword [rsp + 0x40], r11
0x000071c0      4488442438     mov byte [rsp + 0x38], r8b
0x000071c5      4c894c2430     mov qword [rsp + 0x30], r9
0x000071ca      e861aeffff     call sym.imp.memcmp
0x000071cf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000071d1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000071d6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000071dc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000071e1      0f8579050000   jne 0x7760
0x000071e7      807c240f00     cmp byte [rsp + 0xf], 0
0x000071ec      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000071f2      0f857d0f0000   jne 0x8175
0x000071f8      0f1f84000000.  nop dword [rax + rax]
0x00007200      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00007204      80fb7e         cmp bl, 0x7e
0x00007207      0f871b030000   ja 0x7528
0x0000720d      488d0d788f00.  lea rcx, [0x0001018c]
0x00007214      0fb6d3         movzx edx, bl
0x00007217      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000721b      4801c8         add rax, rcx
0x0000721e      ffe0           jmp rax
0x00007220      4531d2         xor r10d, r10d
0x00007223      4983fb01       cmp r11, 1
0x00007227      0f95c0         setne al
0x0000722a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000722e      750c           jne 0x723c
0x00007230      488b442410     mov rax, qword [rsp + 0x10]
0x00007235      80780100       cmp byte [rax + 1], 0
0x00007239      0f95c0         setne al
0x0000723c      837c240802     cmp dword [rsp + 8], 2
0x00007241      0f94c2         sete dl
0x00007244      84c0           test al, al
0x00007246      0f844c020000   je 0x7498
0x0000724c      4531e4         xor r12d, r12d
0x0000724f      31c0           xor eax, eax
0x00007251      0f1f80000000.  nop dword [rax]
0x00007258      807c240d01     cmp byte [rsp + 0xd], 1
0x0000725d      0f850f010000   jne 0x7372
0x00007263      84d2           test dl, dl
0x00007265      0f8507010000   jne 0x7372
0x0000726b      488b742420     mov rsi, qword [rsp + 0x20]
0x00007270      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00007273      7414           je 0x7289
0x00007275      89da           mov edx, ebx
0x00007277      c0ea05         shr dl, 5
0x0000727a      0fb6d2         movzx edx, dl
0x0000727d      8b1496         mov edx, dword [rsi + rdx*4]
0x00007280      0fa3da         bt edx, ebx
0x00007283      0f824a010000   jb 0x73d3
0x00007289      4584d2         test r10b, r10b
0x0000728c      0f8541010000   jne 0x73d3
0x00007292      83f001         xor eax, 1
0x00007295      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00007299      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000729c      84c0           test al, al
0x0000729e      7420           je 0x72c0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000072a0      4d39fd         cmp r13, r15
0x000072a3      7605           jbe 0x72aa
0x000072a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000072aa      498d4701       lea rax, [r15 + 1]
0x000072ae      4939c5         cmp r13, rax
0x000072b1      7606           jbe 0x72b9
0x000072b3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000072b9      4983c702       add r15, 2
0x000072bd      4531c0         xor r8d, r8d
0x000072c0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000072c3      7304           jae 0x72c9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000072c5      43881c3e       mov byte [r14 + r15], bl
0x000072c9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000072ce      4983c701       add r15, 1
0x000072d2      b800000000     mov eax, 0
0x000072d7      4584e4         test r12b, r12b
0x000072da      0f44f8         cmove edi, eax
0x000072dd      40887c240e     mov byte [rsp + 0xe], dil
0x000072e2      e931feffff     jmp 0x7118
0x000072e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000072f0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000072f3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000072f7      83f802         cmp eax, 2
0x000072fa      0f84b8050000   je 0x78b8
0x00007300      83f805         cmp eax, 5
0x00007303      0f846f050000   je 0x7878
0x00007309      83f802         cmp eax, 2
0x0000730c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00007311      0f94c2         sete dl
0x00007314      4531e4         xor r12d, r12d
0x00007317      31c0           xor eax, eax
0x00007319      e93affffff     jmp 0x7258
0x0000731e      6690           nop
0x00007320      4531d2         xor r10d, r10d
0x00007323      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00007328      0f8402050000   je 0x7830
0x0000732e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00007333      31d2           xor edx, edx
0x00007335      31c0           xor eax, eax
0x00007337      bb27000000     mov ebx, 0x27                           ; '''
0x0000733c      e917ffffff     jmp 0x7258
0x00007341      0f1f80000000.  nop dword [rax]
0x00007348      ba09000000     mov edx, 9
0x0000734d      bb74000000     mov ebx, 0x74                           ; 't'
0x00007352      837c240802     cmp dword [rsp + 8], 2
0x00007357      0f94c0         sete al
0x0000735a      2244240f       and al, byte [rsp + 0xf]
0x0000735e      0f854a010000   jne 0x74ae
0x00007364      807c240d00     cmp byte [rsp + 0xd], 0
0x00007369      7565           jne 0x73d0
0x0000736b      89d3           mov ebx, edx
0x0000736d      4531e4         xor r12d, r12d
0x00007370      31c0           xor eax, eax
0x00007372      807c240f00     cmp byte [rsp + 0xf], 0
0x00007377      0f85eefeffff   jne 0x726b
0x0000737d      e907ffffff     jmp 0x7289                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00007382      660f1f440000   nop word [rax + rax]
0x00007388      ba08000000     mov edx, 8
0x0000738d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007392      ebd0           jmp 0x7364
0x00007394      0f1f4000       nop dword [rax]
0x00007398      837c240802     cmp dword [rsp + 8], 2
0x0000739d      0f84cd030000   je 0x7770
0x000073a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000073a8      0f8412020000   je 0x75c0
0x000073ae      807c240f00     cmp byte [rsp + 0xf], 0
0x000073b3      0f8407020000   je 0x75c0
0x000073b9      48837c241800   cmp qword [rsp + 0x18], 0
0x000073bf      0f85b6030000   jne 0x777b
0x000073c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000073ca      660f1f440000   nop word [rax + rax]
0x000073d0      4531e4         xor r12d, r12d
0x000073d3      837c240802     cmp dword [rsp + 8], 2
0x000073d8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000073db      807c240f00     cmp byte [rsp + 0xf], 0
0x000073e0      89d0           mov eax, edx
0x000073e2      0f8550080000   jne 0x7c38
0x000073e8      4489c0         mov eax, r8d
0x000073eb      83f001         xor eax, 1
0x000073ee      20d0           and al, dl
0x000073f0      742f           je 0x7421
0x000073f2      4d39fd         cmp r13, r15
0x000073f5      7605           jbe 0x73fc
0x000073f7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000073fc      498d5701       lea rdx, [r15 + 1]
0x00007400      4939d5         cmp r13, rdx
0x00007403      7606           jbe 0x740b
0x00007405      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000740b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000740f      4939d5         cmp r13, rdx
0x00007412      7606           jbe 0x741a
0x00007414      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000741a      4983c703       add r15, 3
0x0000741e      4189c0         mov r8d, eax
0x00007421      4d39fd         cmp r13, r15
0x00007424      7605           jbe 0x742b
0x00007426      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000742b      4983c701       add r15, 1
0x0000742f      4883c501       add rbp, 1
0x00007433      e988feffff     jmp 0x72c0
0x00007438      0f1f84000000.  nop dword [rax + rax]
0x00007440      807c240d00     cmp byte [rsp + 0xd], 0
0x00007445      0f85c8010000   jne 0x7613
0x0000744b      31d2           xor edx, edx
0x0000744d      f644247801     test byte [rsp + 0x78], 1
0x00007452      0f8413ffffff   je 0x736b
0x00007458      4883c501       add rbp, 1
0x0000745c      e9b7fcffff     jmp 0x7118
0x00007461      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00007468      837c240802     cmp dword [rsp + 8], 2
0x0000746d      0f94c2         sete dl
0x00007470      31c0           xor eax, eax
0x00007472      e9e1fdffff     jmp 0x7258
0x00007477      660f1f840000.  nop word [rax + rax]
0x00007480      ba07000000     mov edx, 7
0x00007485      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000748a      e9d5feffff     jmp 0x7364
0x0000748f      90             nop
0x00007490      837c240802     cmp dword [rsp + 8], 2
0x00007495      0f94c2         sete dl
0x00007498      4885ed         test rbp, rbp
0x0000749b      0f85abfdffff   jne 0x724c
0x000074a1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000074a6      20d0           and al, dl
0x000074a8      0f84aafdffff   je 0x7258
0x000074ae      4c89dd         mov rbp, r11
0x000074b1      c74424080200.  mov dword [rsp + 8], 2
0x000074b9      e9fb060000     jmp 0x7bb9
0x000074be      6690           nop
0x000074c0      837c240802     cmp dword [rsp + 8], 2
0x000074c5      0f94c2         sete dl
0x000074c8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000074cb      ebd4           jmp 0x74a1
0x000074cd      0f1f00         nop dword [rax]
0x000074d0      837c240802     cmp dword [rsp + 8], 2
0x000074d5      bb20000000     mov ebx, 0x20                           ; "@"
0x000074da      0f94c2         sete dl
0x000074dd      ebc2           jmp 0x74a1
0x000074df      90             nop
0x000074e0      ba0d000000     mov edx, 0xd
0x000074e5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000074ea      e963feffff     jmp 0x7352
0x000074ef      90             nop
0x000074f0      ba0c000000     mov edx, 0xc
0x000074f5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000074fa      e965feffff     jmp 0x7364
0x000074ff      90             nop
0x00007500      ba0b000000     mov edx, 0xb
0x00007505      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000750a      e955feffff     jmp 0x7364
0x0000750f      90             nop
0x00007510      ba0a000000     mov edx, 0xa
0x00007515      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000751a      e933feffff     jmp 0x7352
0x0000751f      90             nop
0x00007520      4531d2         xor r10d, r10d
0x00007523      0f1f440000     nop dword [rax + rax]
0x00007528      48837c245801   cmp qword [rsp + 0x58], 1
0x0000752e      0f85a4030000   jne 0x78d8
0x00007534      4c895c2438     mov qword [rsp + 0x38], r11
0x00007539      4488442430     mov byte [rsp + 0x30], r8b
0x0000753e      4488542428     mov byte [rsp + 0x28], r10b
0x00007543      e888adffff     call sym.imp.__ctype_b_loc
0x00007548      488b08         mov rcx, qword [rax]
0x0000754b      0fb6d3         movzx edx, bl
0x0000754e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00007554      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000755a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000755f      bf01000000     mov edi, 1
0x00007564      0fb70451       movzx eax, word [rcx + rdx*2]
0x00007568      66250040       and ax, 0x4000                          ; "D$(\xe8x\x0f"
0x0000756c      410f95c4       setne r12b
0x00007570      0f94c0         sete al
0x00007573      2244240d       and al, byte [rsp + 0xd]
0x00007577      84c0           test al, al
0x00007579      0f8592090000   jne 0x7f11
0x0000757f      837c240802     cmp dword [rsp + 8], 2
0x00007584      0f94c2         sete dl
0x00007587      e9ccfcffff     jmp 0x7258
0x0000758c      0f1f4000       nop dword [rax]
0x00007590      410fb619       movzx ebx, byte [r9]
0x00007594      80fb7e         cmp bl, 0x7e
0x00007597      7787           ja 0x7520
0x00007599      488d0de88d00.  lea rcx, [0x00010388]
0x000075a0      0fb6d3         movzx edx, bl
0x000075a3      48630491       movsxd rax, dword [rcx + rdx*4]
0x000075a7      4801c8         add rax, rcx
0x000075aa      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x000075ac      0f1f4000       nop dword [rax]
0x000075b0      4531d2         xor r10d, r10d
0x000075b3      807c240d00     cmp byte [rsp + 0xd], 0
0x000075b8      0f85f0fdffff   jne 0x73ae
0x000075be      6690           nop
0x000075c0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000075c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000075ca      e995fdffff     jmp 0x7364
0x000075cf      90             nop
0x000075d0      ba0c000000     mov edx, 0xc
0x000075d5      4531d2         xor r10d, r10d
0x000075d8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000075dd      e982fdffff     jmp 0x7364
0x000075e2      660f1f440000   nop word [rax + rax]
0x000075e8      ba0a000000     mov edx, 0xa
0x000075ed      4531d2         xor r10d, r10d
0x000075f0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000075f5      e958fdffff     jmp 0x7352
0x000075fa      660f1f440000   nop word [rax + rax]
0x00007600      bb61000000     mov ebx, 0x61                           ; 'a'
0x00007605      e9c6fdffff     jmp 0x73d0
0x0000760a      660f1f440000   nop word [rax + rax]
0x00007610      4531d2         xor r10d, r10d
0x00007613      837c240802     cmp dword [rsp + 8], 2
0x00007618      0f94c2         sete dl
0x0000761b      807c240f00     cmp byte [rsp + 0xf], 0
0x00007620      0f85940b0000   jne 0x81ba
0x00007626      4489c0         mov eax, r8d
0x00007629      4c89f9         mov rcx, r15
0x0000762c      83f001         xor eax, 1
0x0000762f      20d0           and al, dl
0x00007631      742d           je 0x7660
0x00007633      4d39fd         cmp r13, r15
0x00007636      7605           jbe 0x763d
0x00007638      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000763d      498d4f01       lea rcx, [r15 + 1]
0x00007641      4939cd         cmp r13, rcx
0x00007644      7606           jbe 0x764c
0x00007646      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000764c      498d4f02       lea rcx, [r15 + 2]
0x00007650      4939cd         cmp r13, rcx
0x00007653      0f8730060000   ja 0x7c89
0x00007659      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000765d      4189c0         mov r8d, eax
0x00007660      4939cd         cmp r13, rcx
0x00007663      7605           jbe 0x766a
0x00007665      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000766a      837c240802     cmp dword [rsp + 8], 2
0x0000766f      4c8d7901       lea r15, [rcx + 1]
0x00007673      0f8400060000   je 0x7c79
0x00007679      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000767d      4c39d8         cmp rax, r11
0x00007680      7319           jae 0x769b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00007682      488b442410     mov rax, qword [rsp + 0x10]
0x00007687      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000768c      88442428       mov byte [rsp + 0x28], al
0x00007690      83e830         sub eax, 0x30
0x00007693      3c09           cmp al, 9
0x00007695      0f862e080000   jbe 0x7ec9
0x0000769b      4489e0         mov eax, r12d
0x0000769e      bb30000000     mov ebx, 0x30                           ; '0'
0x000076a3      4531e4         xor r12d, r12d
0x000076a6      e9adfbffff     jmp 0x7258                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000076ab      0f1f440000     nop dword [rax + rax]
0x000076b0      837c240802     cmp dword [rsp + 8], 2
0x000076b5      4589d4         mov r12d, r10d
0x000076b8      0f94c2         sete dl
0x000076bb      4531d2         xor r10d, r10d
0x000076be      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000076c0      e993fbffff     jmp 0x7258                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000076c5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000076c8      837c240802     cmp dword [rsp + 8], 2
0x000076cd      0f94c2         sete dl
0x000076d0      4531d2         xor r10d, r10d
0x000076d3      e9c0fdffff     jmp 0x7498
0x000076d8      0f1f84000000.  nop dword [rax + rax]
0x000076e0      837c240802     cmp dword [rsp + 8], 2
0x000076e5      0f94c2         sete dl
0x000076e8      4531d2         xor r10d, r10d
0x000076eb      4531e4         xor r12d, r12d
0x000076ee      e9aefdffff     jmp 0x74a1
0x000076f3      0f1f440000     nop dword [rax + rax]
0x000076f8      837c240802     cmp dword [rsp + 8], 2
0x000076fd      4589d4         mov r12d, r10d
0x00007700      bb20000000     mov ebx, 0x20                           ; "@"
0x00007705      0f94c2         sete dl
0x00007708      4531d2         xor r10d, r10d
0x0000770b      e991fdffff     jmp 0x74a1
0x00007710      ba0d000000     mov edx, 0xd
0x00007715      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00007718      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000771d      e930fcffff     jmp 0x7352
0x00007722      660f1f440000   nop word [rax + rax]
0x00007728      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000772d      e99efcffff     jmp 0x73d0
0x00007732      660f1f440000   nop word [rax + rax]
0x00007738      ba09000000     mov edx, 9
0x0000773d      4531d2         xor r10d, r10d
0x00007740      bb74000000     mov ebx, 0x74                           ; 't'
0x00007745      e908fcffff     jmp 0x7352
0x0000774a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00007750      bb62000000     mov ebx, 0x62                           ; 'b'
0x00007755      e976fcffff     jmp 0x73d0
0x0000775a      660f1f440000   nop word [rax + rax]
0x00007760      4531d2         xor r10d, r10d
0x00007763      e998faffff     jmp 0x7200
0x00007768      0f1f84000000.  nop dword [rax + rax]
0x00007770      807c240f00     cmp byte [rsp + 0xf], 0
0x00007775      0f8565090000   jne 0x80e0
0x0000777b      4883c501       add rbp, 1
0x0000777f      4489c0         mov eax, r8d
0x00007782      4531e4         xor r12d, r12d
0x00007785      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000778a      e90dfbffff     jmp 0x729c
0x0000778f      90             nop
0x00007790      837c240802     cmp dword [rsp + 8], 2
0x00007795      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000779a      4589c4         mov r12d, r8d
0x0000779d      4c89dd         mov rbp, r11
0x000077a0      0f94c2         sete dl
0x000077a3      89d8           mov eax, ebx
0x000077a5      4d85ff         test r15, r15
0x000077a8      0f94c1         sete cl
0x000077ab      21d0           and eax, edx
0x000077ad      20c8           and al, cl
0x000077af      0f85610a0000   jne 0x8216                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000077b5      89d8           mov eax, ebx
0x000077b7      83f001         xor eax, 1
0x000077ba      20c2           and dl, al
0x000077bc      0f846a090000   je 0x812c
0x000077c2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000077c7      0f845d090000   je 0x812a
0x000077cd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000077d2      0f85f5090000   jne 0x81cd
0x000077d8      4d85ed         test r13, r13
0x000077db      0f94c0         sete al
0x000077de      48837c245000   cmp qword [rsp + 0x50], 0
0x000077e4      0f95c2         setne dl
0x000077e7      20d0           and al, dl
0x000077e9      0f841d0a0000   je 0x820c
0x000077ef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000077f4      488d1dbb8800.  lea rbx, [0x000100b6]                   ; "'"
0x000077fb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000077ff      c74424080200.  mov dword [rsp + 8], 2
0x00007807      41bf01000000   mov r15d, 1
0x0000780d      48c744241801.  mov qword [rsp + 0x18], 1
0x00007816      c644240f00     mov byte [rsp + 0xf], 0
0x0000781b      48895c2448     mov qword [rsp + 0x48], rbx
0x00007820      8844247c       mov byte [rsp + 0x7c], al
0x00007824      e9daf8ffff     jmp 0x7103
0x00007829      0f1f80000000.  nop dword [rax]
0x00007830      807c240f00     cmp byte [rsp + 0xf], 0
0x00007835      0f85a5080000   jne 0x80e0
0x0000783b      4d85ed         test r13, r13
0x0000783e      0f84fc030000   je 0x7c40                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00007844      31d2           xor edx, edx
0x00007846      48837c245000   cmp qword [rsp + 0x50], 0
0x0000784c      0f85ee030000   jne 0x7c40                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00007852      4c896c2450     mov qword [rsp + 0x50], r13
0x00007857      4983c703       add r15, 3
0x0000785b      31c0           xor eax, eax
0x0000785d      448864247c     mov byte [rsp + 0x7c], r12b
0x00007862      4531c0         xor r8d, r8d
0x00007865      4989d5         mov r13, rdx
0x00007868      bb27000000     mov ebx, 0x27                           ; '''
0x0000786d      e917faffff     jmp 0x7289
0x00007872      660f1f440000   nop word [rax + rax]
0x00007878      f644247804     test byte [rsp + 0x78], 4
0x0000787d      7421           je 0x78a0
0x0000787f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00007883      4c39d9         cmp rcx, r11
0x00007886      7318           jae 0x78a0
0x00007888      488b442410     mov rax, qword [rsp + 0x10]
0x0000788d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00007892      0f848a070000   je 0x8022
0x00007898      0f1f84000000.  nop dword [rax + rax]
0x000078a0      31d2           xor edx, edx
0x000078a2      4531e4         xor r12d, r12d
0x000078a5      31c0           xor eax, eax
0x000078a7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000078ac      e9a7f9ffff     jmp 0x7258
0x000078b1      0f1f80000000.  nop dword [rax]
0x000078b8      807c240f00     cmp byte [rsp + 0xf], 0
0x000078bd      0f851d080000   jne 0x80e0
0x000078c3      4531e4         xor r12d, r12d
0x000078c6      31c0           xor eax, eax
0x000078c8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000078cd      e9b7f9ffff     jmp 0x7289                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000078d2      660f1f440000   nop word [rax + rax]
0x000078d8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000078e0      4983fbff       cmp r11, 0xffffffffffffffff
0x000078e4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000078f0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000078f5      752d           jne 0x7924
0x000078f7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000078fc      4488442440     mov byte [rsp + 0x40], r8b
0x00007901      4488542438     mov byte [rsp + 0x38], r10b
0x00007906      4c894c2430     mov qword [rsp + 0x30], r9
0x0000790b      e8f0a5ffff     call sym.imp.strlen
0x00007910      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00007916      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000791c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000791f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00007924      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000792c      31c9           xor ecx, ecx
0x0000792e      885c247e       mov byte [rsp + 0x7e], bl
0x00007932      448844247d     mov byte [rsp + 0x7d], r8b
0x00007937      4889cb         mov rbx, rcx
0x0000793a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00007942      4889442438     mov qword [rsp + 0x38], rax
0x00007947      448854247f     mov byte [rsp + 0x7f], r10b
0x0000794c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00007954      4c89742440     mov qword [rsp + 0x40], r14
0x00007959      4c896c2470     mov qword [rsp + 0x70], r13
0x0000795e      4c895c2430     mov qword [rsp + 0x30], r11
0x00007963      488b442410     mov rax, qword [rsp + 0x10]
0x00007968      4c8d741d00     lea r14, [rbp + rbx]
0x0000796d      488b542430     mov rdx, qword [rsp + 0x30]
0x00007972      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00007977      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000797c      4e8d2c30       lea r13, [rax + r14]
0x00007980      4c29f2         sub rdx, r14
0x00007983      4c89ee         mov rsi, r13
0x00007986      e865260000     call sym.rpl_mbrtowc
0x0000798b      4885c0         test rax, rax
0x0000798e      4989c7         mov r15, rax
0x00007991      744e           je 0x79e1
0x00007993      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007997      0f8418060000   je 0x7fb5
0x0000799d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000079a1      0f849a050000   je 0x7f41
0x000079a7      837c240802     cmp dword [rsp + 8], 2
0x000079ac      0f94c0         sete al
0x000079af      2244240f       and al, byte [rsp + 0xf]
0x000079b3      0f8597010000   jne 0x7b50
0x000079b9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000079c0      e8fba8ffff     call sym.imp.iswprint
0x000079c5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000079ca      85c0           test eax, eax
0x000079cc      b800000000     mov eax, 0
0x000079d1      440f44e0       cmove r12d, eax
0x000079d5      4c01fb         add rbx, r15
0x000079d8      e8d3a8ffff     call sym.imp.mbsinit
0x000079dd      85c0           test eax, eax
0x000079df      7482           je 0x7963
0x000079e1      4489e2         mov edx, r12d
0x000079e4      4889df         mov rdi, rbx
0x000079e7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000079ed      83f201         xor edx, 1
0x000079f0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000079f5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000079fb      2254240d       and dl, byte [rsp + 0xd]
0x000079ff      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007a07      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007a0c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007a11      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007a16      4883ff01       cmp rdi, 1
0x00007a1a      0f86fb050000   jbe 0x801b
0x00007a20      4889f9         mov rcx, rdi
0x00007a23      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00007a25      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00007a2b      4801e9         add rcx, rbp
0x00007a2e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007a33      e9b6000000     jmp 0x7aee
0x00007a38      0f1f84000000.  nop dword [rax + rax]
0x00007a40      837c240802     cmp dword [rsp + 8], 2
0x00007a45      0f94c0         sete al
0x00007a48      4584c9         test r9b, r9b
0x00007a4b      0f85af040000   jne 0x7f00
0x00007a51      4489c6         mov esi, r8d
0x00007a54      83f601         xor esi, 1
0x00007a57      4020f0         and al, sil
0x00007a5a      742f           je 0x7a8b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00007a5c      4d39fd         cmp r13, r15
0x00007a5f      7605           jbe 0x7a66
0x00007a61      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007a66      498d7701       lea rsi, [r15 + 1]
0x00007a6a      4939f5         cmp r13, rsi
0x00007a6d      7606           jbe 0x7a75                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00007a6f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00007a75      498d7702       lea rsi, [r15 + 2]
0x00007a79      4939f5         cmp r13, rsi
0x00007a7c      7606           jbe 0x7a84
0x00007a7e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007a84      4983c703       add r15, 3
0x00007a88      4189c0         mov r8d, eax
0x00007a8b      4d39fd         cmp r13, r15
0x00007a8e      7605           jbe 0x7a95
0x00007a90      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007a95      498d4701       lea rax, [r15 + 1]
0x00007a99      4939c5         cmp r13, rax
0x00007a9c      760d           jbe 0x7aab
0x00007a9e      89d8           mov eax, ebx
0x00007aa0      c0e806         shr al, 6
0x00007aa3      83c030         add eax, 0x30
0x00007aa6      4388443e01     mov byte [r14 + r15 + 1], al
0x00007aab      498d4702       lea rax, [r15 + 2]
0x00007aaf      4939c5         cmp r13, rax
0x00007ab2      7610           jbe 0x7ac4
0x00007ab4      89d8           mov eax, ebx
0x00007ab6      c0e803         shr al, 3
0x00007ab9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00007abc      83c030         add eax, 0x30
0x00007abf      4388443e02     mov byte [r14 + r15 + 2], al
0x00007ac4      83e307         and ebx, 7
0x00007ac7      4883c501       add rbp, 1
0x00007acb      4983c703       add r15, 3
0x00007acf      83c330         add ebx, 0x30
0x00007ad2      4839cd         cmp rbp, rcx
0x00007ad5      0f83e5f7ffff   jae 0x72c0
0x00007adb      89d6           mov esi, edx
0x00007add      4d39fd         cmp r13, r15
0x00007ae0      7604           jbe 0x7ae6
0x00007ae2      43881c3e       mov byte [r14 + r15], bl
0x00007ae6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00007aea      4983c701       add r15, 1
0x00007aee      84d2           test dl, dl
0x00007af0      0f854affffff   jne 0x7a40
0x00007af6      89f0           mov eax, esi
0x00007af8      83f001         xor eax, 1
0x00007afb      4421c0         and eax, r8d
0x00007afe      4584d2         test r10b, r10b
0x00007b01      740e           je 0x7b11
0x00007b03      4d39fd         cmp r13, r15
0x00007b06      7605           jbe 0x7b0d
0x00007b08      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00007b0d      4983c701       add r15, 1
0x00007b11      4883c501       add rbp, 1
0x00007b15      4839cd         cmp rbp, rcx
0x00007b18      0f837ef7ffff   jae 0x729c
0x00007b1e      84c0           test al, al
0x00007b20      0f84f8030000   je 0x7f1e
0x00007b26      4d39fd         cmp r13, r15
0x00007b29      7605           jbe 0x7b30
0x00007b2b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007b30      498d4701       lea rax, [r15 + 1]
0x00007b34      4939c5         cmp r13, rax
0x00007b37      7606           jbe 0x7b3f
0x00007b39      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007b3f      4983c702       add r15, 2
0x00007b43      4531d2         xor r10d, r10d
0x00007b46      4531c0         xor r8d, r8d
0x00007b49      eb92           jmp 0x7add
0x00007b4b      0f1f440000     nop dword [rax + rax]
0x00007b50      4983ff01       cmp r15, 1
0x00007b54      0f845ffeffff   je 0x79b9
0x00007b5a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007b5f      4a8d0c3f       lea rcx, [rdi + r15]
0x00007b63      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00007b68      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00007b6c      eb0f           jmp 0x7b7d
0x00007b6e      6690           nop
0x00007b70      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00007b74      4939d0         cmp r8, rdx
0x00007b77      0f843cfeffff   je 0x79b9
0x00007b7d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00007b80      83e95b         sub ecx, 0x5b
0x00007b83      80f921         cmp cl, 0x21
0x00007b86      77e8           ja 0x7b70                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00007b88      be01000000     mov esi, 1
0x00007b8d      48d3e6         shl rsi, cl
0x00007b90      4889f1         mov rcx, rsi
0x00007b93      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00007b9d      4885f1         test rcx, rsi
0x00007ba0      74ce           je 0x7b70
0x00007ba2      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007ba7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007bac      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00007bb1      c74424080200.  mov dword [rsp + 8], 2
0x00007bb9      807c240d00     cmp byte [rsp + 0xd], 0
0x00007bbe      7410           je 0x7bd0
0x00007bc0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00007bc2      b804000000     mov eax, 4
0x00007bc7      0f44442408     cmove eax, dword [rsp + 8]
0x00007bcc      89442408       mov dword [rsp + 8], eax
0x00007bd0      4883ec08       sub rsp, 8
0x00007bd4      4889e9         mov rcx, rbp
0x00007bd7      4c89ee         mov rsi, r13
0x00007bda      ff742468       push qword [rsp + 0x68]
0x00007bde      ff742478       push qword [rsp + 0x78]
0x00007be2      4c89f7         mov rdi, r14
0x00007be5      6a00           push 0
0x00007be7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00007bef      448b442428     mov r8d, dword [rsp + 0x28]
0x00007bf4      488b542430     mov rdx, qword [rsp + 0x30]
0x00007bf9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00007bfd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00007c02      4883c420       add rsp, 0x20
0x00007c06      4989c7         mov r15, rax
0x00007c09      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00007c11      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007c1a      4c89f8         mov rax, r15
0x00007c1d      0f8500060000   jne 0x8223
0x00007c23      4881c4b80000.  add rsp, 0xb8
0x00007c2a      5b             pop rbx
0x00007c2b      5d             pop rbp
0x00007c2c      415c           pop r12
0x00007c2e      415d           pop r13
0x00007c30      415e           pop r14
0x00007c32      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00007c34      c3             ret
0x00007c35      0f1f00         nop dword [rax]
0x00007c38      4c89dd         mov rbp, r11
0x00007c3b      e979ffffff     jmp 0x7bb9
0x00007c40      4d39fd         cmp r13, r15
0x00007c43      7605           jbe 0x7c4a
0x00007c45      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00007c4a      498d4701       lea rax, [r15 + 1]
0x00007c4e      4939c5         cmp r13, rax
0x00007c51      7606           jbe 0x7c59
0x00007c53      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00007c59      498d4702       lea rax, [r15 + 2]
0x00007c5d      4939c5         cmp r13, rax
0x00007c60      0f86ec050000   jbe 0x8252
0x00007c66      4c89ea         mov rdx, r13
0x00007c69      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007c6f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00007c74      e9d9fbffff     jmp 0x7852
0x00007c79      4489e0         mov eax, r12d
0x00007c7c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00007c81      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00007c84      e900f6ffff     jmp 0x7289                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00007c89      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00007c8f      e9c5f9ffff     jmp 0x7659
0x00007c94      85db           test ebx, ebx
0x00007c96      0f8527f4ffff   jne 0x70c3
0x00007c9c      c644240d01     mov byte [rsp + 0xd], 1
0x00007ca1      4d85ed         test r13, r13
0x00007ca4      0f8590050000   jne 0x823a
0x00007caa      488d05058400.  lea rax, [0x000100b6]                   ; "'"
0x00007cb1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007cba      c644240e01     mov byte [rsp + 0xe], 1
0x00007cbf      c644247c00     mov byte [rsp + 0x7c], 0
0x00007cc4      4531e4         xor r12d, r12d
0x00007cc7      c644240f00     mov byte [rsp + 0xf], 0
0x00007ccc      48c744241801.  mov qword [rsp + 0x18], 1
0x00007cd5      4889442448     mov qword [rsp + 0x48], rax
0x00007cda      41bf01000000   mov r15d, 1
0x00007ce0      c74424080200.  mov dword [rsp + 8], 2
0x00007ce8      e916f4ffff     jmp 0x7103                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00007ced      0f1f00         nop dword [rax]
0x00007cf0      85db           test ebx, ebx
0x00007cf2      0f85f5030000   jne 0x80ed
0x00007cf8      4d85ed         test r13, r13
0x00007cfb      0f8425020000   je 0x7f26
0x00007d01      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00007d05      c644240e01     mov byte [rsp + 0xe], 1
0x00007d0a      4531e4         xor r12d, r12d
0x00007d0d      c644247c00     mov byte [rsp + 0x7c], 0
0x00007d12      48c744245000.  mov qword [rsp + 0x50], 0
0x00007d1b      488d05d08300.  lea rax, str.l______l                   ; 0x100f2 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007d22      c644240f00     mov byte [rsp + 0xf], 0
0x00007d27      c644240d01     mov byte [rsp + 0xd], 1
0x00007d2c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007d35      41bf01000000   mov r15d, 1
0x00007d3b      4889442448     mov qword [rsp + 0x48], rax
0x00007d40      e9bef3ffff     jmp 0x7103
0x00007d45      488d05a68300.  lea rax, str.l______l                   ; 0x100f2 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00007d4c      c644240e01     mov byte [rsp + 0xe], 1
0x00007d51      c644247c00     mov byte [rsp + 0x7c], 0
0x00007d56      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00007d59      48c744245000.  mov qword [rsp + 0x50], 0
0x00007d62      c644240f01     mov byte [rsp + 0xf], 1
0x00007d67      c644240d01     mov byte [rsp + 0xd], 1
0x00007d6c      48c744241801.  mov qword [rsp + 0x18], 1
0x00007d75      4531ff         xor r15d, r15d
0x00007d78      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x00007d7d      c74424080500.  mov dword [rsp + 8], 5
0x00007d85      e979f3ffff     jmp 0x7103
0x00007d8a      c644240e01     mov byte [rsp + 0xe], 1
0x00007d8f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007d94      4531e4         xor r12d, r12d
0x00007d97      48c744245000.  mov qword [rsp + 0x50], 0
0x00007da0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00007da5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00007da8      c644240d01     mov byte [rsp + 0xd], 1
0x00007dad      48c744241800.  mov qword [rsp + 0x18], 0
0x00007db6      48c744244800.  mov qword [rsp + 0x48], 0
0x00007dbf      e93ff3ffff     jmp 0x7103
0x00007dc4      837c24080a     cmp dword [rsp + 8], 0xa
0x00007dc9      7456           je 0x7e21
0x00007dcb      488d35228300.  lea rsi, [0x000100f4]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00007dd2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00007dd4      ba05000000     mov edx, 5
0x00007dd9      e802a1ffff     call sym.imp.dcgettext
0x00007dde      4889c1         mov rcx, rax
0x00007de1      4889442468     mov qword [rsp + 0x68], rax
0x00007de6      488d05078300.  lea rax, [0x000100f4]                   ; "`"
0x00007ded      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00007df0      0f8498030000   je 0x818e
0x00007df6      488d35b98200.  lea rsi, [0x000100b6]                   ; "'"
0x00007dfd      31ff           xor edi, edi
0x00007dff      ba05000000     mov edx, 5
0x00007e04      e8d7a0ffff     call sym.imp.dcgettext
0x00007e09      4889c1         mov rcx, rax
0x00007e0c      4889442460     mov qword [rsp + 0x60], rax
0x00007e11      488d059e8200.  lea rax, [0x000100b6]                   ; "'"
0x00007e18      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00007e1b      0f8483030000   je 0x81a4
0x00007e21      4531ff         xor r15d, r15d
0x00007e24      85db           test ebx, ebx
0x00007e26      0f84c1010000   je 0x7fed
0x00007e2c      85db           test ebx, ebx
0x00007e2e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00007e33      0f9544240f     setne byte [rsp + 0xf]
0x00007e38      4531e4         xor r12d, r12d
0x00007e3b      4889df         mov rdi, rbx
0x00007e3e      e8bda0ffff     call sym.imp.strlen
0x00007e43      48895c2448     mov qword [rsp + 0x48], rbx
0x00007e48      4889442418     mov qword [rsp + 0x18], rax
0x00007e4d      c644240e01     mov byte [rsp + 0xe], 1
0x00007e52      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e57      48c744245000.  mov qword [rsp + 0x50], 0
0x00007e60      c644240d01     mov byte [rsp + 0xd], 1
0x00007e65      e999f2ffff     jmp 0x7103
0x00007e6a      c644240e01     mov byte [rsp + 0xe], 1
0x00007e6f      c644247c00     mov byte [rsp + 0x7c], 0
0x00007e74      4531e4         xor r12d, r12d
0x00007e77      48c744245000.  mov qword [rsp + 0x50], 0
0x00007e80      c644240f00     mov byte [rsp + 0xf], 0
0x00007e85      4531ff         xor r15d, r15d
0x00007e88      c644240d00     mov byte [rsp + 0xd], 0
0x00007e8d      48c744241800.  mov qword [rsp + 0x18], 0
0x00007e96      48c744244800.  mov qword [rsp + 0x48], 0
0x00007e9f      e95ff2ffff     jmp 0x7103
0x00007ea4      c644240e01     mov byte [rsp + 0xe], 1
0x00007ea9      c644247c00     mov byte [rsp + 0x7c], 0
0x00007eae      4531e4         xor r12d, r12d
0x00007eb1      48c744245000.  mov qword [rsp + 0x50], 0
0x00007eba      c644240f01     mov byte [rsp + 0xf], 1
0x00007ebf      c644240d01     mov byte [rsp + 0xd], 1
0x00007ec4      e91af2ffff     jmp 0x70e3
0x00007ec9      4d39fd         cmp r13, r15
0x00007ecc      7605           jbe 0x7ed3
0x00007ece      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00007ed3      488d4102       lea rax, [rcx + 2]
0x00007ed7      4939c5         cmp r13, rax
0x00007eda      7606           jbe 0x7ee2
0x00007edc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00007ee2      4489e0         mov eax, r12d
0x00007ee5      4c8d7903       lea r15, [rcx + 3]
0x00007ee9      4531e4         xor r12d, r12d
0x00007eec      bb30000000     mov ebx, 0x30                           ; '0'
0x00007ef1      e962f3ffff     jmp 0x7258
0x00007ef6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007f00      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00007f05      4c89dd         mov rbp, r11
0x00007f08      885c240d       mov byte [rsp + 0xd], bl
0x00007f0c      e9a8fcffff     jmp 0x7bb9
0x00007f11      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007f16      4531e4         xor r12d, r12d
0x00007f19      e902fbffff     jmp 0x7a20
0x00007f1e      4531d2         xor r10d, r10d
0x00007f21      e9b7fbffff     jmp 0x7add
0x00007f26      48c744245000.  mov qword [rsp + 0x50], 0
0x00007f2f      c644240e01     mov byte [rsp + 0xe], 1
0x00007f34      4531e4         xor r12d, r12d
0x00007f37      c644247c00     mov byte [rsp + 0x7c], 0
0x00007f3c      e9dafdffff     jmp 0x7d1b
0x00007f41      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007f46      4c89f6         mov rsi, r14
0x00007f49      4c89e9         mov rcx, r13
0x00007f4c      4889d8         mov rax, rbx
0x00007f4f      4889df         mov rdi, rbx
0x00007f52      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007f58      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007f5d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00007f65      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00007f68      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007f6e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007f76      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007f7b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007f80      7326           jae 0x7fa8
0x00007f82      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00007f85      7510           jne 0x7f97
0x00007f87      eb1f           jmp 0x7fa8
0x00007f89      0f1f80000000.  nop dword [rax]
0x00007f90      41803c0100     cmp byte [r9 + rax], 0
0x00007f95      740e           je 0x7fa5
0x00007f97      4883c001       add rax, 1
0x00007f9b      488d540500     lea rdx, [rbp + rax]
0x00007fa0      4939d3         cmp r11, rdx
0x00007fa3      77eb           ja 0x7f90
0x00007fa5      4889c7         mov rdi, rax
0x00007fa8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007fad      4531e4         xor r12d, r12d
0x00007fb0      e961faffff     jmp 0x7a16
0x00007fb5      4889df         mov rdi, rbx
0x00007fb8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00007fbe      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00007fc3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00007fc9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00007fd1      4531e4         xor r12d, r12d
0x00007fd4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00007fd9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00007fde      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00007fe3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00007fe8      e929faffff     jmp 0x7a16
0x00007fed      488b542468     mov rdx, qword [rsp + 0x68]
0x00007ff2      0fb602         movzx eax, byte [rdx]
0x00007ff5      84c0           test al, al
0x00007ff7      0f842ffeffff   je 0x7e2c
0x00007ffd      0f1f00         nop dword [rax]
0x00008000      4d39fd         cmp r13, r15
0x00008003      7604           jbe 0x8009
0x00008005      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00008009      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000800d      420fb6043a     movzx eax, byte [rdx + r15]
0x00008012      84c0           test al, al
0x00008014      75ea           jne 0x8000
0x00008016      e911feffff     jmp 0x7e2c
0x0000801b      89d0           mov eax, edx
0x0000801d      e955f5ffff     jmp 0x7577
0x00008022      0fb61c08       movzx ebx, byte [rax + rcx]
0x00008026      80fb3e         cmp bl, 0x3e
0x00008029      0f8771f8ffff   ja 0x78a0
0x0000802f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00008039      480fa3d8       bt rax, rbx
0x0000803d      0f835df8ffff   jae 0x78a0
0x00008043      807c240f00     cmp byte [rsp + 0xf], 0
0x00008048      0f85e4010000   jne 0x8232                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000804e      4d39fd         cmp r13, r15
0x00008051      7605           jbe 0x8058
0x00008053      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00008058      498d4701       lea rax, [r15 + 1]
0x0000805c      4939c5         cmp r13, rax
0x0000805f      7606           jbe 0x8067
0x00008061      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008067      498d4702       lea rax, [r15 + 2]
0x0000806b      4939c5         cmp r13, rax
0x0000806e      7606           jbe 0x8076
0x00008070      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00008076      498d4703       lea rax, [r15 + 3]
0x0000807a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000807d      7606           jbe 0x8085
0x0000807f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00008085      4983c704       add r15, 4
0x00008089      31d2           xor edx, edx
0x0000808b      4531e4         xor r12d, r12d
0x0000808e      31c0           xor eax, eax
0x00008090      4889cd         mov rbp, rcx
0x00008093      e9c0f1ffff     jmp 0x7258
0x00008098      85db           test ebx, ebx
0x0000809a      0f8488010000   je 0x8228
0x000080a0      488d050f8000.  lea rax, [0x000100b6]                   ; "'"
0x000080a7      c644240e01     mov byte [rsp + 0xe], 1
0x000080ac      c644247c00     mov byte [rsp + 0x7c], 0
0x000080b1      4531e4         xor r12d, r12d
0x000080b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000080bd      c644240f01     mov byte [rsp + 0xf], 1
0x000080c2      c644240d00     mov byte [rsp + 0xd], 0
0x000080c7      48c744241801.  mov qword [rsp + 0x18], 1
0x000080d0      4531ff         xor r15d, r15d
0x000080d3      4889442448     mov qword [rsp + 0x48], rax
0x000080d8      e926f0ffff     jmp 0x7103
0x000080dd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000080e0      4c89dd         mov rbp, r11
0x000080e3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000080e8      e9ccfaffff     jmp 0x7bb9
0x000080ed      488d05fe7f00.  lea rax, str.l______l                   ; 0x100f2 ; u"\"`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000080f4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000080f9      c644247c00     mov byte [rsp + 0x7c], 0
0x000080fe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00008101      48c744245000.  mov qword [rsp + 0x50], 0
0x0000810a      c644240f01     mov byte [rsp + 0xf], 1
0x0000810f      c644240d01     mov byte [rsp + 0xd], 1
0x00008114      48c744241801.  mov qword [rsp + 0x18], 1
0x0000811d      4531ff         xor r15d, r15d
0x00008120      4889442448     mov qword [rsp + 0x48], rax
0x00008125      e9d9efffff     jmp 0x7103
0x0000812a      89d0           mov eax, edx
0x0000812c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00008131      4885db         test rbx, rbx
0x00008134      742c           je 0x8162
0x00008136      84c0           test al, al
0x00008138      7428           je 0x8162
0x0000813a      0fb60b         movzx ecx, byte [rbx]
0x0000813d      4889d8         mov rax, rbx
0x00008140      84c9           test cl, cl
0x00008142      741e           je 0x8162
0x00008144      4c89fa         mov rdx, r15
0x00008147      4c29f8         sub rax, r15
0x0000814a      4939d5         cmp r13, rdx
0x0000814d      7604           jbe 0x8153
0x0000814f      41880c16       mov byte [r14 + rdx], cl
0x00008153      4883c201       add rdx, 1
0x00008157      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000815b      84c9           test cl, cl
0x0000815d      75eb           jne 0x814a
0x0000815f      4989d7         mov r15, rdx
0x00008162      4d39fd         cmp r13, r15
0x00008165      0f869efaffff   jbe 0x7c09
0x0000816b      43c6043e00     mov byte [r14 + r15], 0
0x00008170      e994faffff     jmp 0x7c09
0x00008175      837c240802     cmp dword [rsp + 8], 2
0x0000817a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000817f      4c89dd         mov rbp, r11
0x00008182      0f94c0         sete al
0x00008185      885c240d       mov byte [rsp + 0xd], bl
0x00008189      e92bfaffff     jmp 0x7bb9
0x0000818e      8b742408       mov esi, dword [rsp + 8]
0x00008192      4889cf         mov rdi, rcx
0x00008195      e8a6edffff     call sym.gettext_quote.part.1
0x0000819a      4889442468     mov qword [rsp + 0x68], rax
0x0000819f      e952fcffff     jmp 0x7df6
0x000081a4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000081a8      4889cf         mov rdi, rcx
0x000081ab      e890edffff     call sym.gettext_quote.part.1
0x000081b0      4889442460     mov qword [rsp + 0x60], rax
0x000081b5      e967fcffff     jmp 0x7e21
0x000081ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000081bf      4c89dd         mov rbp, r11
0x000081c2      89d0           mov eax, edx
0x000081c4      885c240d       mov byte [rsp + 0xd], bl
0x000081c8      e9ecf9ffff     jmp 0x7bb9
0x000081cd      4883ec08       sub rsp, 8
0x000081d1      41b805000000   mov r8d, 5
0x000081d7      4c89d9         mov rcx, r11
0x000081da      ff742468       push qword [rsp + 0x68]
0x000081de      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000081e2      4c89f7         mov rdi, r14
0x000081e5      ff742438       push qword [rsp + 0x38]
0x000081e9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000081f1      488b542430     mov rdx, qword [rsp + 0x30]
0x000081f6      488b742470     mov rsi, qword [rsp + 0x70]
0x000081fb      e830eeffff     call sym.quotearg_buffer_restyled
0x00008200      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00008204      4989c7         mov r15, rax
0x00008207      e9fdf9ffff     jmp 0x7c09
0x0000820c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00008211      e916ffffff     jmp 0x812c
0x00008216      c74424080200.  mov dword [rsp + 8], 2
0x0000821e      e996f9ffff     jmp 0x7bb9
0x00008223      e8f89cffff     call sym.imp.__stack_chk_fail
0x00008228      c644240d00     mov byte [rsp + 0xd], 0
0x0000822d      e96ffaffff     jmp 0x7ca1
0x00008232      4c89dd         mov rbp, r11
0x00008235      e996f9ffff     jmp 0x7bd0
0x0000823a      c644240e01     mov byte [rsp + 0xe], 1
0x0000823f      31c0           xor eax, eax
0x00008241      4531e4         xor r12d, r12d
0x00008244      48c744245000.  mov qword [rsp + 0x50], 0
0x0000824d      e9a2f5ffff     jmp 0x77f4
0x00008252      4c89ea         mov rdx, r13
0x00008255      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000825a      e9f3f5ffff     jmp 0x7852
0x0000825f      e87c9bffff     call sym.imp.abort
0x00008264      6690           nop
0x00008266      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00008270      4157           push r15
0x00008272      4156           push r14
0x00008274      4c63ff         movsxd r15, edi
0x00008277      4155           push r13
0x00008279      4154           push r12
0x0000827b      4989d6         mov r14, rdx
0x0000827e      55             push rbp
0x0000827f      53             push rbx
0x00008280      4889cd         mov rbp, rcx
0x00008283      4883ec28       sub rsp, 0x28
0x00008287      4889742408     mov qword [rsp + 8], rsi
0x0000828c      e85f9bffff     call sym.imp.__errno_location
0x00008291      4989c5         mov r13, rax
0x00008294      8b00           mov eax, dword [rax]
0x00008296      4585ff         test r15d, r15d
0x00008299      488b1de0ad20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x213080:8]=0x213090 obj.slotvec0
0x000082a0      89442418       mov dword [rsp + 0x18], eax
0x000082a4      0f8867010000   js 0x8411
0x000082aa      44393dc7ad20.  cmp dword [obj.nslots], r15d            ; [0x213078:4]=1
0x000082b1      7f62           jg 0x8315
0x000082b3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000082ba      0f8456010000   je 0x8416
0x000082c0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000082c4      488d05c5ad20.  lea rax, obj.slotvec0                   ; 0x213090
0x000082cb      4963f4         movsxd rsi, r12d
0x000082ce      48c1e604       shl rsi, 4
0x000082d2      4839c3         cmp rbx, rax
0x000082d5      0f8415010000   je 0x83f0
0x000082db      4889df         mov rdi, rbx
0x000082de      e85d1a0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000082e3      4889c3         mov rbx, rax
0x000082e6      48890593ad20.  mov qword [obj.slotvec], rax            ; [0x213080:8]=0x213090 obj.slotvec0
0x000082ed      48633d84ad20.  movsxd rdi, dword [obj.nslots]          ; [0x213078:4]=1
0x000082f4      4489e2         mov edx, r12d
0x000082f7      31f6           xor esi, esi
0x000082f9      29fa           sub edx, edi
0x000082fb      48c1e704       shl rdi, 4
0x000082ff      4863d2         movsxd rdx, edx
0x00008302      4801df         add rdi, rbx
0x00008305      48c1e204       shl rdx, 4
0x00008309      e8e29cffff     call sym.imp.memset
0x0000830e      44892563ad20.  mov dword [obj.nslots], r12d            ; [0x213078:4]=1
0x00008315      8b4504         mov eax, dword [rbp + 4]
0x00008318      49c1e704       shl r15, 4
0x0000831c      4883ec08       sub rsp, 8
0x00008320      4c01fb         add rbx, r15
0x00008323      4c8d7d08       lea r15, [rbp + 8]
0x00008327      448b4500       mov r8d, dword [rbp]
0x0000832b      4c8b1b         mov r11, qword [rbx]
0x0000832e      4c8b6308       mov r12, qword [rbx + 8]
0x00008332      4c89f1         mov rcx, r14
0x00008335      83c801         or eax, 1
0x00008338      89442424       mov dword [rsp + 0x24], eax
0x0000833c      ff7530         push qword [rbp + 0x30]
0x0000833f      4189c1         mov r9d, eax
0x00008342      ff7528         push qword [rbp + 0x28]
0x00008345      4157           push r15
0x00008347      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000834a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000834f      4c89e7         mov rdi, r12
0x00008352      4c895c2430     mov qword [rsp + 0x30], r11
0x00008357      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000835c      4883c420       add rsp, 0x20
0x00008360      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00008365      4939c3         cmp r11, rax
0x00008368      7767           ja 0x83d1
0x0000836a      488d7001       lea rsi, [rax + 1]
0x0000836e      488d05abad20.  lea rax, obj.slot0                      ; 0x213120
0x00008375      4939c4         cmp r12, rax
0x00008378      488933         mov qword [rbx], rsi
0x0000837b      7412           je 0x838f
0x0000837d      4c89e7         mov rdi, r12
0x00008380      4889742410     mov qword [rsp + 0x10], rsi
0x00008385      e8469affff     call sym.imp.free
0x0000838a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000838f      4889f7         mov rdi, rsi
0x00008392      4889742410     mov qword [rsp + 0x10], rsi
0x00008397      e844190000     call sym.xmalloc
0x0000839c      4883ec08       sub rsp, 8
0x000083a0      48894308       mov qword [rbx + 8], rax
0x000083a4      448b4500       mov r8d, dword [rbp]
0x000083a8      ff7530         push qword [rbp + 0x30]
0x000083ab      ff7528         push qword [rbp + 0x28]
0x000083ae      4c89f1         mov rcx, r14
0x000083b1      4157           push r15
0x000083b3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000083b8      4889c7         mov rdi, rax
0x000083bb      488b542428     mov rdx, qword [rsp + 0x28]
0x000083c0      488b742430     mov rsi, qword [rsp + 0x30]
0x000083c5      4989c4         mov r12, rax
0x000083c8      e863ecffff     call sym.quotearg_buffer_restyled
0x000083cd      4883c420       add rsp, 0x20
0x000083d1      8b442418       mov eax, dword [rsp + 0x18]
0x000083d5      41894500       mov dword [r13], eax
0x000083d9      4883c428       add rsp, 0x28
0x000083dd      4c89e0         mov rax, r12
0x000083e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000083e1      5d             pop rbp
0x000083e2      415c           pop r12
0x000083e4      415d           pop r13
0x000083e6      415e           pop r14
0x000083e8      415f           pop r15
0x000083ea      c3             ret
0x000083eb      0f1f440000     nop dword [rax + rax]
0x000083f0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000083f2      e849190000     call sym.xrealloc
0x000083f7      660f6f0591ac.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000083ff      4889c3         mov rbx, rax
0x00008402      48890577ac20.  mov qword [obj.slotvec], rax            ; [0x213080:8]=0x213090 obj.slotvec0
0x00008409      0f1100         movups xmmword [rax], xmm0
0x0000840c      e9dcfeffff     jmp 0x82ed
0x00008411      e8ca99ffff     call sym.imp.abort
0x00008416      e8151b0000     call sym.xalloc_die
0x0000841b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00008420      4154           push r12
0x00008422      55             push rbp
0x00008423      53             push rbx
0x00008424      4889fb         mov rbx, rdi
0x00008427      e8c499ffff     call sym.imp.__errno_location
0x0000842c      448b20         mov r12d, dword [rax]
0x0000842f      4889c5         mov rbp, rax
0x00008432      488d05e7ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x00008439      4885db         test rbx, rbx
0x0000843c      be38000000     mov esi, 0x38                           ; '8'
0x00008441      480f44d8       cmove rbx, rax
0x00008445      4889df         mov rdi, rbx
0x00008448      e8931a0000     call sym.xmemdup
0x0000844d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00008451      5b             pop rbx
0x00008452      5d             pop rbp
0x00008453      415c           pop r12
0x00008455      c3             ret
0x00008456      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00008460      488d05b9ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x00008467      4885ff         test rdi, rdi
0x0000846a      480f44f8       cmove rdi, rax
0x0000846e      8b07           mov eax, dword [rdi]
0x00008470      c3             ret
0x00008471      0f1f440000     nop dword [rax + rax]
0x00008476      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00008480      488d0599ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x00008487      4885ff         test rdi, rdi
0x0000848a      480f44f8       cmove rdi, rax
0x0000848e      8937           mov dword [rdi], esi
0x00008490      c3             ret
0x00008491      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00008496      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000084a0      488d0579ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x000084a7      4885ff         test rdi, rdi
0x000084aa      89f1           mov ecx, esi
0x000084ac      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000084b0      89f0           mov eax, esi
0x000084b2      83e11f         and ecx, 0x1f
0x000084b5      c0e805         shr al, 5
0x000084b8      0fb6c0         movzx eax, al
0x000084bb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000084c0      8b37           mov esi, dword [rdi]
0x000084c2      89f0           mov eax, esi
0x000084c4      d3e8           shr eax, cl
0x000084c6      31c2           xor edx, eax
0x000084c8      83e001         and eax, 1
0x000084cb      83e201         and edx, 1
0x000084ce      d3e2           shl edx, cl
0x000084d0      31f2           xor edx, esi
0x000084d2      8917           mov dword [rdi], edx
0x000084d4      c3             ret
0x000084d5      90             nop
0x000084d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000084e0      488d0539ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x000084e7      4885ff         test rdi, rdi
0x000084ea      480f44f8       cmove rdi, rax
0x000084ee      8b4704         mov eax, dword [rdi + 4]
0x000084f1      897704         mov dword [rdi + 4], esi
0x000084f4      c3             ret
0x000084f5      90             nop
0x000084f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00008500      488d0519ad20.  lea rax, obj.default_quoting_options    ; 0x213220
0x00008507      4885ff         test rdi, rdi
0x0000850a      480f44f8       cmove rdi, rax
0x0000850e      4885f6         test rsi, rsi
0x00008511      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00008517      740e           je 0x8527
0x00008519      4885d2         test rdx, rdx
0x0000851c      7409           je 0x8527
0x0000851e      48897728       mov qword [rdi + 0x28], rsi
0x00008522      48895730       mov qword [rdi + 0x30], rdx
0x00008526      c3             ret
0x00008527      4883ec08       sub rsp, 8
0x0000852b      e8b098ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00008530      4157           push r15
0x00008532      4156           push r14
0x00008534      488d05e5ac20.  lea rax, obj.default_quoting_options    ; 0x213220
0x0000853b      4155           push r13
0x0000853d      4154           push r12
0x0000853f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00008542      55             push rbp
0x00008543      53             push rbx
0x00008544      4c89c3         mov rbx, r8
0x00008547      4989f6         mov r14, rsi
0x0000854a      4989d7         mov r15, rdx
0x0000854d      4883ec18       sub rsp, 0x18
0x00008551      4d85c0         test r8, r8
0x00008554      480f44d8       cmove rbx, rax
0x00008558      48894c2408     mov qword [rsp + 8], rcx
0x0000855d      e88e98ffff     call sym.imp.__errno_location
0x00008562      448b20         mov r12d, dword [rax]
0x00008565      4889c5         mov rbp, rax
0x00008568      488d4308       lea rax, [rbx + 8]
0x0000856c      4883ec08       sub rsp, 8
0x00008570      448b4b04       mov r9d, dword [rbx + 4]
0x00008574      ff7330         push qword [rbx + 0x30]
0x00008577      448b03         mov r8d, dword [rbx]
0x0000857a      ff7328         push qword [rbx + 0x28]
0x0000857d      4c89fa         mov rdx, r15
0x00008580      50             push rax
0x00008581      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00008586      4c89f6         mov rsi, r14
0x00008589      4c89ef         mov rdi, r13
0x0000858c      e89feaffff     call sym.quotearg_buffer_restyled
0x00008591      44896500       mov dword [rbp], r12d
0x00008595      4883c438       add rsp, 0x38
0x00008599      5b             pop rbx
0x0000859a      5d             pop rbp
0x0000859b      415c           pop r12
0x0000859d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000859f      415e           pop r14
0x000085a1      415f           pop r15
0x000085a3      c3             ret
0x000085a4      6690           nop
0x000085a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000085b0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000085b2      4156           push r14
0x000085b4      488d0565ac20.  lea rax, obj.default_quoting_options    ; 0x213220
0x000085bb      4155           push r13
0x000085bd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000085bf      4989d4         mov r12, rdx
0x000085c2      55             push rbp
0x000085c3      53             push rbx
0x000085c4      4889cb         mov rbx, rcx
0x000085c7      4989fe         mov r14, rdi
0x000085ca      4989f7         mov r15, rsi
0x000085cd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000085d1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000085d4      480f44d8       cmove rbx, rax
0x000085d8      31ed           xor ebp, ebp
0x000085da      e81198ffff     call sym.imp.__errno_location
0x000085df      4d85e4         test r12, r12
0x000085e2      4989c5         mov r13, rax
0x000085e5      8b00           mov eax, dword [rax]
0x000085e7      400f94c5       sete bpl
0x000085eb      0b6b04         or ebp, dword [rbx + 4]
0x000085ee      4c8d5308       lea r10, [rbx + 8]
0x000085f2      4883ec08       sub rsp, 8
0x000085f6      448b03         mov r8d, dword [rbx]
0x000085f9      4c89f9         mov rcx, r15
0x000085fc      89442414       mov dword [rsp + 0x14], eax
0x00008600      ff7330         push qword [rbx + 0x30]
0x00008603      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00008606      ff7328         push qword [rbx + 0x28]
0x00008609      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000860b      31f6           xor esi, esi
0x0000860d      4189e9         mov r9d, ebp
0x00008610      31ff           xor edi, edi
0x00008612      4c89542440     mov qword [rsp + 0x40], r10
0x00008617      e814eaffff     call sym.quotearg_buffer_restyled
0x0000861c      488d7001       lea rsi, [rax + 1]
0x00008620      4889442448     mov qword [rsp + 0x48], rax
0x00008625      4883c420       add rsp, 0x20
0x00008629      4889f7         mov rdi, rsi
0x0000862c      4889742418     mov qword [rsp + 0x18], rsi
0x00008631      e8aa160000     call sym.xmalloc
0x00008636      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000863b      4883ec08       sub rsp, 8
0x0000863f      ff7330         push qword [rbx + 0x30]
0x00008642      ff7328         push qword [rbx + 0x28]
0x00008645      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000864a      4189e9         mov r9d, ebp
0x0000864d      448b03         mov r8d, dword [rbx]
0x00008650      4c89f9         mov rcx, r15
0x00008653      4c89f2         mov rdx, r14
0x00008656      4889c7         mov rdi, rax
0x00008659      4152           push r10
0x0000865b      488b742438     mov rsi, qword [rsp + 0x38]
0x00008660      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00008665      8b44242c       mov eax, dword [rsp + 0x2c]
0x00008669      4883c420       add rsp, 0x20
0x0000866d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00008670      41894500       mov dword [r13], eax
0x00008674      7409           je 0x867f
0x00008676      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000867b      4d891c24       mov qword [r12], r11
0x0000867f      488b442410     mov rax, qword [rsp + 0x10]
0x00008684      4883c438       add rsp, 0x38
0x00008688      5b             pop rbx
0x00008689      5d             pop rbp
0x0000868a      415c           pop r12
0x0000868c      415d           pop r13
0x0000868e      415e           pop r14
0x00008690      415f           pop r15
0x00008692      c3             ret
0x00008693      0f1f00         nop dword [rax]
0x00008696      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000086a0      4889d1         mov rcx, rdx
0x000086a3      31d2           xor edx, edx
0x000086a5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000086aa      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000086b0      8b05c2a92000   mov eax, dword [obj.nslots]             ; [0x213078:4]=1
0x000086b6      4154           push r12
0x000086b8      4c8b25c1a920.  mov r12, qword [obj.slotvec]            ; [0x213080:8]=0x213090 obj.slotvec0
0x000086bf      55             push rbp
0x000086c0      53             push rbx
0x000086c1      83f801         cmp eax, 1
0x000086c4      7e2b           jle 0x86f1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000086c6      83e802         sub eax, 2
0x000086c9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000086ce      48c1e004       shl rax, 4
0x000086d2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000086d7      660f1f840000.  nop word [rax + rax]
0x000086e0      488b3b         mov rdi, qword [rbx]
0x000086e3      4883c310       add rbx, 0x10
0x000086e7      e8e496ffff     call sym.imp.free
0x000086ec      4839eb         cmp rbx, rbp
0x000086ef      75ef           jne 0x86e0
0x000086f1      498b7c2408     mov rdi, qword [r12 + 8]
0x000086f6      488d1d23aa20.  lea rbx, obj.slot0                      ; 0x213120
0x000086fd      4839df         cmp rdi, rbx
0x00008700      7417           je 0x8719
0x00008702      e8c996ffff     call sym.imp.free
0x00008707      48c7057ea920.  mov qword [obj.slotvec0], 0x100         ; [0x213090:8]=256
0x00008712      48891d7fa920.  mov qword [0x00213098], rbx             ; [0x213098:8]=0x213120 obj.slot0
0x00008719      488d1d70a920.  lea rbx, obj.slotvec0                   ; 0x213090
0x00008720      4939dc         cmp r12, rbx
0x00008723      740f           je 0x8734
0x00008725      4c89e7         mov rdi, r12
0x00008728      e8a396ffff     call sym.imp.free
0x0000872d      48891d4ca920.  mov qword [obj.slotvec], rbx            ; [0x213080:8]=0x213090 obj.slotvec0
0x00008734      5b             pop rbx
0x00008735      c70539a92000.  mov dword [obj.nslots], 1               ; [0x213078:4]=1
0x0000873f      5d             pop rbp
0x00008740      415c           pop r12
0x00008742      c3             ret
0x00008743      0f1f00         nop dword [rax]
0x00008746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00008750      488d0dc9aa20.  lea rcx, obj.default_quoting_options    ; 0x213220
0x00008757      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000875e      e90dfbffff     jmp sym.quotearg_n_options
0x00008763      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00008766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00008770      488d0da9aa20.  lea rcx, obj.default_quoting_options    ; 0x213220
0x00008777      e9f4faffff     jmp sym.quotearg_n_options
0x0000877c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00008780      488d0d99aa20.  lea rcx, obj.default_quoting_options    ; 0x213220
0x00008787      4889fe         mov rsi, rdi
0x0000878a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008791      31ff           xor edi, edi
0x00008793      e9d8faffff     jmp sym.quotearg_n_options
0x00008798      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000087a0      488d0d79aa20.  lea rcx, obj.default_quoting_options    ; 0x213220
0x000087a7      4889f2         mov rdx, rsi
0x000087aa      4889fe         mov rsi, rdi
0x000087ad      31ff           xor edi, edi
0x000087af      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000087b4      6690           nop
0x000087b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000087c0      4883ec48       sub rsp, 0x48
0x000087c4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000087c7      64488b142528.  mov rdx, qword fs:[0x28]
0x000087d0      4889542438     mov qword [rsp + 0x38], rdx
0x000087d5      31d2           xor edx, edx
0x000087d7      83fe0a         cmp esi, 0xa
0x000087da      7468           je 0x8844
0x000087dc      893424         mov dword [rsp], esi
0x000087df      4889e1         mov rcx, rsp
0x000087e2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000087e9      4889c6         mov rsi, rax
0x000087ec      48c744240400.  mov qword [rsp + 4], 0
0x000087f5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000087fe      48c744241400.  mov qword [rsp + 0x14], 0
0x00008807      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008810      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00008819      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008822      c74424340000.  mov dword [rsp + 0x34], 0
0x0000882a      e841faffff     call sym.quotearg_n_options
0x0000882f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008834      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000883d      750a           jne 0x8849                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000883f      4883c448       add rsp, 0x48
0x00008843      c3             ret
0x00008844      e89795ffff     call sym.imp.abort
0x00008849      e8d296ffff     call sym.imp.__stack_chk_fail
0x0000884e      6690           nop
;-- quotearg_n_style_mem:
0x00008850      4883ec48       sub rsp, 0x48
0x00008854      4889d0         mov rax, rdx
0x00008857      4889ca         mov rdx, rcx
0x0000885a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00008863      48894c2438     mov qword [rsp + 0x38], rcx
0x00008868      31c9           xor ecx, ecx
0x0000886a      83fe0a         cmp esi, 0xa
0x0000886d      7461           je 0x88d0
0x0000886f      893424         mov dword [rsp], esi
0x00008872      4889e1         mov rcx, rsp
0x00008875      4889c6         mov rsi, rax
0x00008878      48c744240400.  mov qword [rsp + 4], 0
0x00008881      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000888a      48c744241400.  mov qword [rsp + 0x14], 0
0x00008893      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000889c      48c744242400.  mov qword [rsp + 0x24], 0
0x000088a5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000088ae      c74424340000.  mov dword [rsp + 0x34], 0
0x000088b6      e8b5f9ffff     call sym.quotearg_n_options
0x000088bb      488b542438     mov rdx, qword [rsp + 0x38]
0x000088c0      644833142528.  xor rdx, qword fs:[0x28]
0x000088c9      750a           jne 0x88d5
0x000088cb      4883c448       add rsp, 0x48
0x000088cf      c3             ret
0x000088d0      e80b95ffff     call sym.imp.abort
0x000088d5      e84696ffff     call sym.imp.__stack_chk_fail
0x000088da      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000088e0      4889f2         mov rdx, rsi
0x000088e3      89fe           mov esi, edi
0x000088e5      31ff           xor edi, edi
0x000088e7      e9d4feffff     jmp sym.quotearg_n_style
0x000088ec      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000088f0      4889d1         mov rcx, rdx
0x000088f3      4889f2         mov rdx, rsi
0x000088f6      89fe           mov esi, edi
0x000088f8      31ff           xor edi, edi
0x000088fa      e951ffffff     jmp sym.quotearg_n_style_mem
0x000088ff      90             nop
;-- quotearg_char_mem:
0x00008900      4883ec48       sub rsp, 0x48
0x00008904      89d1           mov ecx, edx
0x00008906      64488b042528.  mov rax, qword fs:[0x28]
0x0000890f      4889442438     mov qword [rsp + 0x38], rax
0x00008914      31c0           xor eax, eax
0x00008916      488b0533a920.  mov rax, qword [0x00213250]             ; [0x213250:8]=0
0x0000891d      4989e0         mov r8, rsp
0x00008920      83e11f         and ecx, 0x1f
0x00008923      660f6f05f5a8.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000892b      4889442430     mov qword [rsp + 0x30], rax
0x00008930      89d0           mov eax, edx
0x00008932      0f290424       movaps xmmword [rsp], xmm0
0x00008936      c0e805         shr al, 5
0x00008939      0fb6c0         movzx eax, al
0x0000893c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00008941      660f6f05e7a8.  movdqa xmm0, xmmword [0x00213230]
0x00008949      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000894e      660f6f05eaa8.  movdqa xmm0, xmmword [0x00213240]
0x00008956      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000895b      418b11         mov edx, dword [r9]
0x0000895e      89d0           mov eax, edx
0x00008960      d3e8           shr eax, cl
0x00008962      f7d0           not eax
0x00008964      83e001         and eax, 1
0x00008967      d3e0           shl eax, cl
0x00008969      4c89c1         mov rcx, r8
0x0000896c      31d0           xor eax, edx
0x0000896e      4889f2         mov rdx, rsi
0x00008971      4889fe         mov rsi, rdi
0x00008974      418901         mov dword [r9], eax
0x00008977      31ff           xor edi, edi
0x00008979      e8f2f8ffff     call sym.quotearg_n_options
0x0000897e      488b742438     mov rsi, qword [rsp + 0x38]
0x00008983      644833342528.  xor rsi, qword fs:[0x28]
0x0000898c      7505           jne 0x8993
0x0000898e      4883c448       add rsp, 0x48
0x00008992      c3             ret
0x00008993      e88895ffff     call sym.imp.__stack_chk_fail
0x00008998      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000089a0      400fbed6       movsx edx, sil
0x000089a4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000089ab      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000089b0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000089b5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000089bc      e93fffffff     jmp sym.quotearg_char_mem
0x000089c1      0f1f440000     nop dword [rax + rax]
0x000089c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000089d0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000089d5      e926ffffff     jmp sym.quotearg_char_mem
0x000089da      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000089e0      4883ec48       sub rsp, 0x48
0x000089e4      4889d0         mov rax, rdx
0x000089e7      64488b142528.  mov rdx, qword fs:[0x28]
0x000089f0      4889542438     mov qword [rsp + 0x38], rdx
0x000089f5      31d2           xor edx, edx
0x000089f7      83fe0a         cmp esi, 0xa
0x000089fa      7468           je 0x8a64
0x000089fc      893424         mov dword [rsp], esi
0x000089ff      4889e1         mov rcx, rsp
0x00008a02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008a09      4889c6         mov rsi, rax
0x00008a0c      48c744240400.  mov qword [rsp + 4], 0
0x00008a15      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00008a1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00008a27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00008a30      48c744242400.  mov qword [rsp + 0x24], 0
0x00008a39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00008a42      c74424340000.  mov dword [rsp + 0x34], 0
0x00008a4a      e821f8ffff     call sym.quotearg_n_options
0x00008a4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00008a54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008a5d      750a           jne 0x8a69
0x00008a5f      4883c448       add rsp, 0x48
0x00008a63      c3             ret
0x00008a64      e87793ffff     call sym.imp.abort
0x00008a69      e8b294ffff     call sym.imp.__stack_chk_fail
0x00008a6e      6690           nop
;-- quotearg_n_custom_mem:
0x00008a70      4883ec48       sub rsp, 0x48
0x00008a74      4989c9         mov r9, rcx
0x00008a77      488b0dd2a720.  mov rcx, qword [0x00213250]             ; [0x213250:8]=0
0x00008a7e      660f6f059aa7.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00008a86      64488b042528.  mov rax, qword fs:[0x28]
0x00008a8f      4889442438     mov qword [rsp + 0x38], rax
0x00008a94      31c0           xor eax, eax
0x00008a96      0f290424       movaps xmmword [rsp], xmm0
0x00008a9a      4885f6         test rsi, rsi
0x00008a9d      48894c2430     mov qword [rsp + 0x30], rcx
0x00008aa2      c704240a0000.  mov dword [rsp], 0xa
0x00008aa9      660f6f057fa7.  movdqa xmm0, xmmword [0x00213230]
0x00008ab1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008ab6      660f6f0582a7.  movdqa xmm0, xmmword [0x00213240]
0x00008abe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00008ac3      7432           je 0x8af7
0x00008ac5      4885d2         test rdx, rdx
0x00008ac8      742d           je 0x8af7
0x00008aca      4889742428     mov qword [rsp + 0x28], rsi
0x00008acf      4889542430     mov qword [rsp + 0x30], rdx
0x00008ad4      4889e1         mov rcx, rsp
0x00008ad7      4c89c2         mov rdx, r8
0x00008ada      4c89ce         mov rsi, r9
0x00008add      e88ef7ffff     call sym.quotearg_n_options
0x00008ae2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00008ae7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008af0      750a           jne 0x8afc
0x00008af2      4883c448       add rsp, 0x48
0x00008af6      c3             ret
0x00008af7      e8e492ffff     call sym.imp.abort
0x00008afc      e81f94ffff     call sym.imp.__stack_chk_fail
0x00008b01      0f1f440000     nop dword [rax + rax]
0x00008b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00008b10      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00008b17      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00008b1c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00008b20      4889d1         mov rcx, rdx
0x00008b23      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00008b2a      4889f2         mov rdx, rsi
0x00008b2d      4889fe         mov rsi, rdi
0x00008b30      31ff           xor edi, edi
0x00008b32      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00008b37      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00008b40      4989c8         mov r8, rcx
0x00008b43      4889d1         mov rcx, rdx
0x00008b46      4889f2         mov rdx, rsi
0x00008b49      4889fe         mov rsi, rdi
0x00008b4c      31ff           xor edi, edi
0x00008b4e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00008b53      0f1f00         nop dword [rax]
0x00008b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00008b60      488d0dd9a420.  lea rcx, obj.quote_quoting_options      ; 0x213040
0x00008b67      e904f7ffff     jmp sym.quotearg_n_options
0x00008b6c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00008b70      488d0dc9a420.  lea rcx, obj.quote_quoting_options      ; 0x213040
0x00008b77      4889f2         mov rdx, rsi
0x00008b7a      4889fe         mov rsi, rdi
0x00008b7d      31ff           xor edi, edi
0x00008b7f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00008b84      6690           nop
0x00008b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00008b90      488d0da9a420.  lea rcx, obj.quote_quoting_options      ; 0x213040
0x00008b97      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008b9e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00008ba3      0f1f00         nop dword [rax]
0x00008ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00008bb0      488d0d89a420.  lea rcx, obj.quote_quoting_options      ; 0x213040
0x00008bb7      4889fe         mov rsi, rdi
0x00008bba      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00008bc1      31ff           xor edi, edi
0x00008bc3      e9a8f6ffff     jmp sym.quotearg_n_options
0x00008bc8      0f1f84000000.  nop dword [rax + rax]
;-- init_tokenbuffer:
0x00008bd0      48c707000000.  mov qword [rdi], 0                      ; ../coreutils-8.31/lib/readtokens.c:45
0x00008bd7      48c747080000.  mov qword [rdi + 8], 0                  ; ../coreutils-8.31/lib/readtokens.c:47
0x00008bdf      c3             ret                                     ; ../coreutils-8.31/lib/readtokens.c:48
;-- readtoken:
0x00008be0      4157           push r15                                ; ../coreutils-8.31/lib/readtokens.c:84
0x00008be2      4156           push r14
0x00008be4      4155           push r13
0x00008be6      4154           push r12
0x00008be8      4989cd         mov r13, rcx
0x00008beb      55             push rbp
0x00008bec      53             push rbx
0x00008bed      4889fd         mov rbp, rdi
0x00008bf0      660fefc0       pxor xmm0, xmm0                         ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00008bf4      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/readtokens.c:84
0x00008bf8      64488b042528.  mov rax, qword fs:[0x28]
0x00008c01      4889442428     mov qword [rsp + 0x28], rax
0x00008c06      31c0           xor eax, eax
0x00008c08      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/readtokens.c:91
0x00008c0b      0f290424       movaps xmmword [rsp], xmm0              ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00008c0f      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00008c14      7466           je 0x8c7c                               ; ../coreutils-8.31/lib/readtokens.c:91
0x00008c16      4801f2         add rdx, rsi
0x00008c19      4889e7         mov rdi, rsp
0x00008c1c      41b801000000   mov r8d, 1                              ; ../coreutils-8.31/lib/readtokens.c:63
0x00008c22      660f1f440000   nop word [rax + rax]
0x00008c28      4c89c3         mov rbx, r8
0x00008c2b      4883c601       add rsi, 1
0x00008c2f      0fb64eff       movzx ecx, byte [rsi - 1]               ; ../coreutils-8.31/lib/readtokens.c:93
0x00008c33      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/readtokens.c:63
0x00008c36      83e13f         and ecx, 0x3f
0x00008c39      48c1e803       shr rax, 3
0x00008c3d      48d3e3         shl rbx, cl
0x00008c40      83e018         and eax, 0x18
0x00008c43      48091c07       or qword [rdi + rax], rbx
0x00008c47      4839f2         cmp rdx, rsi                            ; ../coreutils-8.31/lib/readtokens.c:91
0x00008c4a      75dc           jne 0x8c28
0x00008c4c      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00008c50      483b4510       cmp rax, qword [rbp + 0x10]
0x00008c54      7330           jae 0x8c86
0x00008c56      662e0f1f8400.  nop word cs:[rax + rax]
0x00008c60      488d5001       lea rdx, [rax + 1]
0x00008c64      48895508       mov qword [rbp + 8], rdx
0x00008c68      0fb618         movzx ebx, byte [rax]
0x00008c6b      4863c3         movsxd rax, ebx                         ; ../coreutils-8.31/lib/readtokens.c:98
0x00008c6e      48c1e806       shr rax, 6                              ; ../coreutils-8.31/lib/readtokens.c:56
0x00008c72      488b04c4       mov rax, qword [rsp + rax*8]
0x00008c76      480fa3d8       bt rax, rbx                             ; ../coreutils-8.31/lib/readtokens.c:98
0x00008c7a      7318           jae 0x8c94
0x00008c7c      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00008c80      483b4510       cmp rax, qword [rbp + 0x10]
0x00008c84      72da           jb 0x8c60
0x00008c86      4889ef         mov rdi, rbp
0x00008c89      e82291ffff     call sym.imp.__uflow
0x00008c8e      85c0           test eax, eax                           ; ../coreutils-8.31/lib/readtokens.c:98
0x00008c90      89c3           mov ebx, eax                            ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00008c92      79d7           jns 0x8c6b                              ; ../coreutils-8.31/lib/readtokens.c:98
0x00008c94      4d8b7d08       mov r15, qword [r13 + 8]                ; ../coreutils-8.31/lib/readtokens.c:103
0x00008c98      4d8b7500       mov r14, qword [r13]                    ; ../coreutils-8.31/lib/readtokens.c:104
0x00008c9c      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/readtokens.c:105
0x00008c9f      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:108
0x00008ca1      790d           jns 0x8cb0
0x00008ca3      4d85e4         test r12, r12
0x00008ca6      7452           je 0x8cfa
0x00008ca8      0f1f84000000.  nop dword [rax + rax]
0x00008cb0      4d39f4         cmp r12, r14                            ; ../coreutils-8.31/lib/readtokens.c:111
0x00008cb3      7453           je 0x8d08
0x00008cb5      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:114
0x00008cb7      4b8d1427       lea rdx, [r15 + r12]
0x00008cbb      0f888f000000   js 0x8d50
0x00008cc1      4863c3         movsxd rax, ebx                         ; ../coreutils-8.31/lib/readtokens.c:119
0x00008cc4      48c1e806       shr rax, 6                              ; ../coreutils-8.31/lib/readtokens.c:56
0x00008cc8      488b04c4       mov rax, qword [rsp + rax*8]
0x00008ccc      480fa3d8       bt rax, rbx                             ; ../coreutils-8.31/lib/readtokens.c:119
0x00008cd0      727e           jb 0x8d50
0x00008cd2      881a           mov byte [rdx], bl                      ; ../coreutils-8.31/lib/readtokens.c:124
0x00008cd4      4983c401       add r12, 1
0x00008cd8      488b4508       mov rax, qword [rbp + 8]                ; stdio.h:65   return _IO_getc_unlocked (__fp);
0x00008cdc      483b4510       cmp rax, qword [rbp + 0x10]
0x00008ce0      0f839a000000   jae 0x8d80
0x00008ce6      488d5001       lea rdx, [rax + 1]
0x00008cea      48895508       mov qword [rbp + 8], rdx
0x00008cee      0fb618         movzx ebx, byte [rax]
0x00008cf1      85db           test ebx, ebx                           ; ../coreutils-8.31/lib/readtokens.c:108
0x00008cf3      79bb           jns 0x8cb0
0x00008cf5      4d85e4         test r12, r12
0x00008cf8      75b6           jne 0x8cb0
0x00008cfa      49c7c4ffffff.  mov r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/readtokens.c:109
0x00008d01      eb58           jmp 0x8d5b
0x00008d03      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/xalloc.h:50
0x00008d08      4d85ff         test r15, r15
0x00008d0b      0f847f000000   je 0x8d90
0x00008d11      48b853555555.  movabs rax, 0x5555555555555553          ; 'SUUUUUUU'
0x00008d1b      4939c4         cmp r12, rax
0x00008d1e      0f8780000000   ja 0x8da4
0x00008d24      4c89e0         mov rax, r12
0x00008d27      48d1e8         shr rax, 1
0x00008d2a      4d8d740401     lea r14, [r12 + rax + 1]
0x00008d2f      4c89ff         mov rdi, r15
0x00008d32      4c89f6         mov rsi, r14
0x00008d35      e806100000     call sym.xrealloc
0x00008d3a      85db           test ebx, ebx
0x00008d3c      4989c7         mov r15, rax
0x00008d3f      4b8d1427       lea rdx, [r15 + r12]
0x00008d43      0f8978ffffff   jns 0x8cc1                              ; ../coreutils-8.31/lib/xalloc.h:-150
0x00008d49      0f1f80000000.  nop dword [rax]
0x00008d50      c60200         mov byte [rdx], 0
0x00008d53      4d897d08       mov qword [r13 + 8], r15
0x00008d57      4d897500       mov qword [r13], r14
0x00008d5b      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00008d60      6448333c2528.  xor rdi, qword fs:[0x28]
0x00008d69      4c89e0         mov rax, r12
0x00008d6c      753b           jne 0x8da9
0x00008d6e      4883c438       add rsp, 0x38
0x00008d72      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-216
0x00008d73      5d             pop rbp
0x00008d74      415c           pop r12
0x00008d76      415d           pop r13
0x00008d78      415e           pop r14
0x00008d7a      415f           pop r15
0x00008d7c      c3             ret
0x00008d7d      0f1f00         nop dword [rax]
0x00008d80      4889ef         mov rdi, rbp
0x00008d83      e82890ffff     call sym.imp.__uflow
0x00008d88      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/readtokens.c:-251
0x00008d8a      e910ffffff     jmp 0x8c9f
0x00008d8f      90             nop
0x00008d90      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/readtokens.c:-261
0x00008d93      b980000000     mov ecx, 0x80
0x00008d98      490f45cc       cmovne rcx, r12
0x00008d9c      4885c9         test rcx, rcx
0x00008d9f      4989ce         mov r14, rcx
0x00008da2      798b           jns 0x8d2f
0x00008da4      e887110000     call sym.xalloc_die
0x00008da9      e87291ffff     call sym.imp.__stack_chk_fail
0x00008dae      6690           nop
;-- readtokens:
0x00008db0      4157           push r15
0x00008db2      4156           push r14                                ; ../coreutils-8.31/lib/readtokens.c:-251
0x00008db4      4155           push r13
0x00008db6      4154           push r12                                ; ../coreutils-8.31/lib/readtokens.c:-261
0x00008db8      55             push rbp
0x00008db9      53             push rbx
0x00008dba      488d6e01       lea rbp, [rsi + 1]
0x00008dbe      4883ec68       sub rsp, 0x68
0x00008dc2      64488b042528.  mov rax, qword fs:[0x28]
0x00008dcb      4889442458     mov qword [rsp + 0x58], rax
0x00008dd0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xalloc.h:-307
0x00008dd2      4889542410     mov qword [rsp + 0x10], rdx
0x00008dd7      4885f6         test rsi, rsi
0x00008dda      b840000000     mov eax, 0x40                           ; segment.PHDR
0x00008ddf      ba08000000     mov edx, 8
0x00008de4      480f44e8       cmove rbp, rax
0x00008de8      48897c2408     mov qword [rsp + 8], rdi
0x00008ded      4889d0         mov rax, rdx
0x00008df0      48894c2418     mov qword [rsp + 0x18], rcx
0x00008df5      4c89442438     mov qword [rsp + 0x38], r8
0x00008dfa      48f7e5         mul rbp
0x00008dfd      4c894c2430     mov qword [rsp + 0x30], r9
0x00008e02      0f80c8010000   jo 0x8fd0                               ; ../coreutils-8.31/lib/xalloc.h:-305
0x00008e08      31c9           xor ecx, ecx
0x00008e0a      4885c0         test rax, rax
0x00008e0d      0f88b8010000   js 0x8fcb
0x00008e13      4885c9         test rcx, rcx
0x00008e16      0f85af010000   jne 0x8fcb
0x00008e1c      488d1ced0000.  lea rbx, [rbp*8]
0x00008e24      4889df         mov rdi, rbx
0x00008e27      e8b40e0000     call sym.xmalloc
0x00008e2c      4889df         mov rdi, rbx
0x00008e2f      4989c4         mov r12, rax
0x00008e32      31db           xor ebx, ebx
0x00008e34      e8a70e0000     call sym.xmalloc
0x00008e39      4989c5         mov r13, rax
0x00008e3c      488d442440     lea rax, [rsp + 0x40]
0x00008e41      48c744244000.  mov qword [rsp + 0x40], 0
0x00008e4a      48c744244800.  mov qword [rsp + 0x48], 0
0x00008e53      4889442420     mov qword [rsp + 0x20], rax
0x00008e58      eb42           jmp 0x8e9c
0x00008e5a      660f1f440000   nop word [rax + rax]
0x00008e60      4983feff       cmp r14, 0xffffffffffffffff
0x00008e64      0f84b2000000   je 0x8f1c
0x00008e6a      4d89f7         mov r15, r14                            ; ../coreutils-8.31/lib/readtokens.c:-240
0x00008e6d      4983c701       add r15, 1
0x00008e71      0f8854010000   js 0x8fcb
0x00008e77      4c89ff         mov rdi, r15
0x00008e7a      e8610e0000     call sym.xmalloc
0x00008e7f      488b742448     mov rsi, qword [rsp + 0x48]
0x00008e84      4d8974dd00     mov qword [r13 + rbx*8], r14
0x00008e89      4c89fa         mov rdx, r15                            ; ../coreutils-8.31/lib/readtokens.c:-239
0x00008e8c      4889c7         mov rdi, rax
0x00008e8f      e80c92ffff     call sym.imp.memcpy
0x00008e94      498904dc       mov qword [r12 + rbx*8], rax            ; ../coreutils-8.31/lib/xalloc.h:-208
0x00008e98      4883c301       add rbx, 1
0x00008e9c      488b4c2420     mov rcx, qword [rsp + 0x20]
0x00008ea1      488b542418     mov rdx, qword [rsp + 0x18]
0x00008ea6      488b742410     mov rsi, qword [rsp + 0x10]
0x00008eab      488b7c2408     mov rdi, qword [rsp + 8]
0x00008eb0      e82bfdffff     call sym.readtoken
0x00008eb5      4839eb         cmp rbx, rbp                            ; ../coreutils-8.31/lib/xalloc.h:-201
0x00008eb8      4989c6         mov r14, rax
0x00008ebb      72a3           jb 0x8e60
0x00008ebd      4d85e4         test r12, r12
0x00008ec0      0f84b2000000   je 0x8f78
0x00008ec6      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x00008ed0      4839c5         cmp rbp, rax
0x00008ed3      0f87f2000000   ja 0x8fcb
0x00008ed9      4889e8         mov rax, rbp
0x00008edc      4c89e7         mov rdi, r12
0x00008edf      48d1e8         shr rax, 1
0x00008ee2      488d6c0501     lea rbp, [rbp + rax + 1]
0x00008ee7      488d14ed0000.  lea rdx, [rbp*8]
0x00008eef      4889d6         mov rsi, rdx
0x00008ef2      4889542428     mov qword [rsp + 0x28], rdx             ; ../coreutils-8.31/lib/readtokens.c:-220
0x00008ef7      e8440e0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/readtokens.c:-229
0x00008efc      488b542428     mov rdx, qword [rsp + 0x28]
0x00008f01      4989c4         mov r12, rax
0x00008f04      4c89ef         mov rdi, r13
0x00008f07      4889d6         mov rsi, rdx
0x00008f0a      e8310e0000     call sym.xrealloc
0x00008f0f      4983feff       cmp r14, 0xffffffffffffffff
0x00008f13      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/readtokens.c:-218
0x00008f16      0f854effffff   jne 0x8e6a
0x00008f1c      49c704dc0000.  mov qword [r12 + rbx*8], 0
0x00008f24      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00008f29      49c744dd0000.  mov qword [r13 + rbx*8], 0
0x00008f32      e8998effff     call sym.imp.free
0x00008f37      48837c243000   cmp qword [rsp + 0x30], 0
0x00008f3d      488b442438     mov rax, qword [rsp + 0x38]
0x00008f42      4c8920         mov qword [rax], r12
0x00008f45      747a           je 0x8fc1
0x00008f47      488b442430     mov rax, qword [rsp + 0x30]
0x00008f4c      4c8928         mov qword [rax], r13
0x00008f4f      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00008f54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008f5d      4889d8         mov rax, rbx
0x00008f60      7578           jne 0x8fda
0x00008f62      4883c468       add rsp, 0x68
0x00008f66      5b             pop rbx
0x00008f67      5d             pop rbp
0x00008f68      415c           pop r12
0x00008f6a      415d           pop r13
0x00008f6c      415e           pop r14
0x00008f6e      415f           pop r15
0x00008f70      c3             ret
0x00008f71      0f1f80000000.  nop dword [rax]
0x00008f78      4885ed         test rbp, rbp
0x00008f7b      b810000000     mov eax, 0x10
0x00008f80      ba08000000     mov edx, 8
0x00008f85      480f44e8       cmove rbp, rax
0x00008f89      4889d0         mov rax, rdx
0x00008f8c      31f6           xor esi, esi
0x00008f8e      48f7e5         mul rbp
0x00008f91      704c           jo 0x8fdf
0x00008f93      4885c0         test rax, rax
0x00008f96      7833           js 0x8fcb
0x00008f98      4885f6         test rsi, rsi
0x00008f9b      752e           jne 0x8fcb
0x00008f9d      488d14ed0000.  lea rdx, [rbp*8]
0x00008fa5      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/readtokens.c:-341
0x00008fa7      4889d6         mov rsi, rdx
0x00008faa      4889542428     mov qword [rsp + 0x28], rdx
0x00008faf      e88c0d0000     call sym.xrealloc
0x00008fb4      488b542428     mov rdx, qword [rsp + 0x28]
0x00008fb9      4989c4         mov r12, rax
0x00008fbc      e943ffffff     jmp 0x8f04
0x00008fc1      4c89ef         mov rdi, r13
0x00008fc4      e8078effff     call sym.imp.free
0x00008fc9      eb84           jmp 0x8f4f
0x00008fcb      e8600f0000     call sym.xalloc_die
0x00008fd0      b901000000     mov ecx, 1
0x00008fd5      e930feffff     jmp 0x8e0a
0x00008fda      e8418fffff     call sym.imp.__stack_chk_fail
0x00008fdf      be01000000     mov esi, 1
0x00008fe4      ebad           jmp 0x8f93
0x00008fe6      662e0f1f8400.  nop word cs:[rax + rax]
;-- safe_write:
0x00008ff0      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00008ff2      4154           push r12
0x00008ff4      4189fd         mov r13d, edi
0x00008ff7      55             push rbp
0x00008ff8      53             push rbx
0x00008ff9      4989f4         mov r12, rsi
0x00008ffc      4889d3         mov rbx, rdx
0x00008fff      4883ec08       sub rsp, 8
0x00009003      0f1f440000     nop dword [rax + rax]
0x00009008      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000900b      4c89e6         mov rsi, r12
0x0000900e      4489ef         mov edi, r13d
0x00009011      e87a8effff     call sym.imp.write
0x00009016      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00009019      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/safe-read.c:60
0x0000901c      7922           jns 0x9040                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000901e      e8cd8dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00009023      8b00           mov eax, dword [rax]
0x00009025      83f804         cmp eax, 4
0x00009028      74de           je 0x9008
0x0000902a      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/safe-read.c:66
0x0000902d      7511           jne 0x9040
0x0000902f      4881fb0000f0.  cmp rbx, 0x7ff00000
0x00009036      7608           jbe 0x9040
0x00009038      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000903d      ebc9           jmp 0x9008
0x0000903f      90             nop
0x00009040      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00009044      4889e8         mov rax, rbp
0x00009047      5b             pop rbx
0x00009048      5d             pop rbp
0x00009049      415c           pop r12
0x0000904b      415d           pop r13
0x0000904d      c3             ret
0x0000904e      6690           nop
;-- strnlen1:
0x00009050      55             push rbp                                ; ../coreutils-8.31/lib/strnlen1.c:29
0x00009051      53             push rbx
0x00009052      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x00009055      4889f3         mov rbx, rsi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x00009058      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/strnlen1.c:30
0x0000905a      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/strnlen1.c:29
0x0000905d      4883ec08       sub rsp, 8
0x00009061      e8ba8fffff     call sym.imp.memchr                     ; ../coreutils-8.31/lib/strnlen1.c:30
0x00009066      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/strnlen1.c:32
0x00009069      4829ea         sub rdx, rbp
0x0000906c      4883c201       add rdx, 1
0x00009070      4885c0         test rax, rax
0x00009073      4889d8         mov rax, rbx
0x00009076      480f45c2       cmovne rax, rdx
0x0000907a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/strnlen1.c:35
0x0000907e      5b             pop rbx
0x0000907f      5d             pop rbp
0x00009080      c3             ret
0x00009081      662e0f1f8400.  nop word cs:[rax + rax]
0x0000908b      0f1f440000     nop dword [rax + rax]
;-- trim2:
0x00009090      4157           push r15
0x00009092      4156           push r14
0x00009094      4155           push r13
0x00009096      4154           push r12
0x00009098      4189f4         mov r12d, esi
0x0000909b      55             push rbp
0x0000909c      53             push rbx
0x0000909d      4883ec78       sub rsp, 0x78
0x000090a1      64488b042528.  mov rax, qword fs:[0x28]
0x000090aa      4889442468     mov qword [rsp + 0x68], rax
0x000090af      31c0           xor eax, eax
0x000090b1      e8ea91ffff     call sym.imp.strdup
0x000090b6      4885c0         test rax, rax
0x000090b9      0f84b8050000   je 0x9677
0x000090bf      4889c3         mov rbx, rax
0x000090c2      e8298effff     call sym.imp.__ctype_get_mb_cur_max
0x000090c7      4883f801       cmp rax, 1
0x000090cb      0f86ff020000   jbe 0x93d0
0x000090d1      4585e4         test r12d, r12d
0x000090d4      0f854e010000   jne 0x9228
0x000090da      48895c2438     mov qword [rsp + 0x38], rbx
0x000090df      4889da         mov rdx, rbx
0x000090e2      8b0a           mov ecx, dword [rdx]
0x000090e4      4883c204       add rdx, 4
0x000090e8      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x000090ee      f7d1           not ecx
0x000090f0      21c8           and eax, ecx
0x000090f2      2580808080     and eax, 0x80808080
0x000090f7      74e9           je 0x90e2
0x000090f9      89c1           mov ecx, eax
0x000090fb      c644242800     mov byte [rsp + 0x28], 0
0x00009100      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009109      c1e910         shr ecx, 0x10
0x0000910c      a980800000     test eax, 0x8080
0x00009111      c644243400     mov byte [rsp + 0x34], 0
0x00009116      0f44c1         cmove eax, ecx
0x00009119      488d4a02       lea rcx, [rdx + 2]
0x0000911d      89c6           mov esi, eax
0x0000911f      480f44d1       cmove rdx, rcx
0x00009123      4000c6         add sil, al
0x00009126      4889de         mov rsi, rbx
0x00009129      4883da03       sbb rdx, 3
0x0000912d      4531ff         xor r15d, r15d
0x00009130      4839da         cmp rdx, rbx
0x00009133      4989d6         mov r14, rdx
0x00009136      4889542420     mov qword [rsp + 0x20], rdx
0x0000913b      0f865f020000   jbe 0x93a0
0x00009141      488d6c2420     lea rbp, [rsp + 0x20]
0x00009146      488d450c       lea rax, [rbp + 0xc]
0x0000914a      4889442418     mov qword [rsp + 0x18], rax
0x0000914f      eb3d           jmp 0x918e
0x00009151      0f1f80000000.  nop dword [rax]
0x00009158      807c244800     cmp byte [rsp + 0x48], 0
0x0000915d      41bf01000000   mov r15d, 1
0x00009163      7412           je 0x9177
0x00009165      8b7c244c       mov edi, dword [rsp + 0x4c]
0x00009169      4531ff         xor r15d, r15d
0x0000916c      e82f90ffff     call sym.imp.iswspace
0x00009171      85c0           test eax, eax
0x00009173      410f94c7       sete r15b
0x00009177      4b8d342c       lea rsi, [r12 + r13]
0x0000917b      c644243400     mov byte [rsp + 0x34], 0
0x00009180      4c39f6         cmp rsi, r14
0x00009183      4889742438     mov qword [rsp + 0x38], rsi
0x00009188      0f8302020000   jae 0x9390
0x0000918e      807c242800     cmp byte [rsp + 0x28], 0
0x00009193      0f8528030000   jne 0x94c1
0x00009199      0fb60e         movzx ecx, byte [rsi]
0x0000919c      488d3dfd7700.  lea rdi, obj.is_basic_table             ; 0x109a0
0x000091a3      89c8           mov eax, ecx
0x000091a5      c0e805         shr al, 5
0x000091a8      83e007         and eax, 7
0x000091ab      8b0487         mov eax, dword [rdi + rax*4]
0x000091ae      0fa3c8         bt eax, ecx
0x000091b1      0f83e9020000   jae 0x94a0
0x000091b7      48c744244001.  mov qword [rsp + 0x40], 1
0x000091c0      0fbe06         movsx eax, byte [rsi]
0x000091c3      41bd01000000   mov r13d, 1
0x000091c9      4c8b642438     mov r12, qword [rsp + 0x38]
0x000091ce      4c8b742420     mov r14, qword [rsp + 0x20]
0x000091d3      c644244801     mov byte [rsp + 0x48], 1
0x000091d8      8944244c       mov dword [rsp + 0x4c], eax
0x000091dc      4585ff         test r15d, r15d
0x000091df      c644243401     mov byte [rsp + 0x34], 1
0x000091e4      0f846effffff   je 0x9158
0x000091ea      4183ff01       cmp r15d, 1
0x000091ee      0f844c030000   je 0x9540
0x000091f4      4183ff02       cmp r15d, 2
0x000091f8      0f8512040000   jne 0x9610
0x000091fe      807c244800     cmp byte [rsp + 0x48], 0
0x00009203      0f8407040000   je 0x9610
0x00009209      8b7c244c       mov edi, dword [rsp + 0x4c]
0x0000920d      e88e8fffff     call sym.imp.iswspace
0x00009212      85c0           test eax, eax
0x00009214      b801000000     mov eax, 1
0x00009219      440f44f8       cmove r15d, eax
0x0000921d      e955ffffff     jmp 0x9177
0x00009222      660f1f440000   nop word [rax + rax]
0x00009228      48895c2438     mov qword [rsp + 0x38], rbx
0x0000922d      4889da         mov rdx, rbx
0x00009230      8b0a           mov ecx, dword [rdx]
0x00009232      4883c204       add rdx, 4
0x00009236      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x0000923c      f7d1           not ecx
0x0000923e      21c8           and eax, ecx
0x00009240      2580808080     and eax, 0x80808080
0x00009245      74e9           je 0x9230
0x00009247      89c1           mov ecx, eax
0x00009249      c644242800     mov byte [rsp + 0x28], 0
0x0000924e      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00009257      c1e910         shr ecx, 0x10
0x0000925a      a980800000     test eax, 0x8080
0x0000925f      c644243400     mov byte [rsp + 0x34], 0
0x00009264      0f44c1         cmove eax, ecx
0x00009267      488d4a02       lea rcx, [rdx + 2]
0x0000926b      4989df         mov r15, rbx
0x0000926e      89c6           mov esi, eax
0x00009270      480f44d1       cmove rdx, rcx
0x00009274      4000c6         add sil, al
0x00009277      4883da03       sbb rdx, 3
0x0000927b      4839da         cmp rdx, rbx
0x0000927e      4889542420     mov qword [rsp + 0x20], rdx
0x00009283      0f8657030000   jbe 0x95e0
0x00009289      488d6c2420     lea rbp, [rsp + 0x20]
0x0000928e      4c8d350b7700.  lea r14, obj.is_basic_table             ; 0x109a0
0x00009295      4c8d6d0c       lea r13, [rbp + 0xc]
0x00009299      eb6c           jmp 0x9307
0x0000929b      0f1f440000     nop dword [rax + rax]
0x000092a0      410fb60f       movzx ecx, byte [r15]
0x000092a4      89c8           mov eax, ecx
0x000092a6      c0e805         shr al, 5
0x000092a9      83e007         and eax, 7
0x000092ac      418b0486       mov eax, dword [r14 + rax*4]
0x000092b0      0fa3c8         bt eax, ecx
0x000092b3      0f83bf020000   jae 0x9578
0x000092b9      48c744244001.  mov qword [rsp + 0x40], 1
0x000092c2      410fbe07       movsx eax, byte [r15]
0x000092c6      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000092cb      c644244801     mov byte [rsp + 0x48], 1
0x000092d0      c644243401     mov byte [rsp + 0x34], 1
0x000092d5      8944244c       mov dword [rsp + 0x4c], eax
0x000092d9      8b7c244c       mov edi, dword [rsp + 0x4c]
0x000092dd      e8be8effff     call sym.imp.iswspace
0x000092e2      85c0           test eax, eax
0x000092e4      0f84f6020000   je 0x95e0
0x000092ea      4c037c2440     add r15, qword [rsp + 0x40]
0x000092ef      488b542420     mov rdx, qword [rsp + 0x20]
0x000092f4      c644243400     mov byte [rsp + 0x34], 0
0x000092f9      4939d7         cmp r15, rdx
0x000092fc      4c897c2438     mov qword [rsp + 0x38], r15
0x00009301      0f83d9020000   jae 0x95e0
0x00009307      807c242800     cmp byte [rsp + 0x28], 0
0x0000930c      7492           je 0x92a0
0x0000930e      488d4d0c       lea rcx, [rbp + 0xc]
0x00009312      488d7d2c       lea rdi, [rbp + 0x2c]
0x00009316      4c29fa         sub rdx, r15
0x00009319      4c89fe         mov rsi, r15
0x0000931c      e8cf0c0000     call sym.rpl_mbrtowc
0x00009321      4883f8ff       cmp rax, 0xffffffffffffffff
0x00009325      4889442440     mov qword [rsp + 0x40], rax
0x0000932a      0f8498020000   je 0x95c8
0x00009330      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00009334      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00009339      0f8401030000   je 0x9640
0x0000933f      4885c0         test rax, rax
0x00009342      751f           jne 0x9363
0x00009344      48c744244001.  mov qword [rsp + 0x40], 1
0x0000934d      41803f00       cmp byte [r15], 0
0x00009351      0f8549030000   jne 0x96a0
0x00009357      8b54244c       mov edx, dword [rsp + 0x4c]
0x0000935b      85d2           test edx, edx
0x0000935d      0f8538030000   jne 0x969b
0x00009363      488d7d0c       lea rdi, [rbp + 0xc]
0x00009367      c644244801     mov byte [rsp + 0x48], 1
0x0000936c      e83f8fffff     call sym.imp.mbsinit
0x00009371      85c0           test eax, eax
0x00009373      0f84e7020000   je 0x9660
0x00009379      c644242800     mov byte [rsp + 0x28], 0
0x0000937e      c644243401     mov byte [rsp + 0x34], 1
0x00009383      e951ffffff     jmp 0x92d9
0x00009388      0f1f84000000.  nop dword [rax + rax]
0x00009390      4183ff02       cmp r15d, 2
0x00009394      750a           jne 0x93a0
0x00009396      488b442408     mov rax, qword [rsp + 8]
0x0000939b      c60000         mov byte [rax], 0
0x0000939e      6690           nop
0x000093a0      4889d8         mov rax, rbx
0x000093a3      488b5c2468     mov rbx, qword [rsp + 0x68]
0x000093a8      6448331c2528.  xor rbx, qword fs:[0x28]
0x000093b1      0f85bb020000   jne 0x9672
0x000093b7      4883c478       add rsp, 0x78
0x000093bb      5b             pop rbx
0x000093bc      5d             pop rbp
0x000093bd      415c           pop r12
0x000093bf      415d           pop r13
0x000093c1      415e           pop r14
0x000093c3      415f           pop r15
0x000093c5      c3             ret
0x000093c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000093d0      4585e4         test r12d, r12d
0x000093d3      7451           je 0x9426
0x000093d5      0fb62b         movzx ebp, byte [rbx]
0x000093d8      4084ed         test bpl, bpl
0x000093db      0f8489020000   je 0x966a
0x000093e1      e8ea8effff     call sym.imp.__ctype_b_loc
0x000093e6      4989dd         mov r13, rbx
0x000093e9      488b00         mov rax, qword [rax]
0x000093ec      eb10           jmp 0x93fe
0x000093ee      6690           nop
0x000093f0      4983c501       add r13, 1
0x000093f4      410fb66d00     movzx ebp, byte [r13]
0x000093f9      4084ed         test bpl, bpl
0x000093fc      7407           je 0x9405
0x000093fe      f644680120     test byte [rax + rbp*2 + 1], 0x20
0x00009403      75eb           jne 0x93f0
0x00009405      4c89ef         mov rdi, r13
0x00009408      e8f38affff     call sym.imp.strlen
0x0000940d      488d5001       lea rdx, [rax + 1]
0x00009411      4c89ee         mov rsi, r13
0x00009414      4889df         mov rdi, rbx
0x00009417      e8b48dffff     call sym.imp.memmove
0x0000941c      4183fc01       cmp r12d, 1
0x00009420      0f847affffff   je 0x93a0
0x00009426      4889da         mov rdx, rbx
0x00009429      8b0a           mov ecx, dword [rdx]
0x0000942b      4883c204       add rdx, 4
0x0000942f      8d81fffefefe   lea eax, [rcx - 0x1010101]
0x00009435      f7d1           not ecx
0x00009437      21c8           and eax, ecx
0x00009439      2580808080     and eax, 0x80808080
0x0000943e      74e9           je 0x9429
0x00009440      89c1           mov ecx, eax
0x00009442      c1e910         shr ecx, 0x10
0x00009445      a980800000     test eax, 0x8080
0x0000944a      0f44c1         cmove eax, ecx
0x0000944d      488d4a02       lea rcx, [rdx + 2]
0x00009451      89c6           mov esi, eax
0x00009453      480f44d1       cmove rdx, rcx
0x00009457      4000c6         add sil, al
0x0000945a      4883da03       sbb rdx, 3
0x0000945e      488d6aff       lea rbp, [rdx - 1]
0x00009462      4839eb         cmp rbx, rbp
0x00009465      0f8735ffffff   ja 0x93a0
0x0000946b      e8608effff     call sym.imp.__ctype_b_loc
0x00009470      488b10         mov rdx, qword [rax]
0x00009473      eb14           jmp 0x9489
0x00009475      0f1f00         nop dword [rax]
0x00009478      c6450000       mov byte [rbp], 0
0x0000947c      4883ed01       sub rbp, 1
0x00009480      4839eb         cmp rbx, rbp
0x00009483      0f8717ffffff   ja 0x93a0
0x00009489      0fb64500       movzx eax, byte [rbp]
0x0000948d      f644420120     test byte [rdx + rax*2 + 1], 0x20
0x00009492      75e4           jne 0x9478
0x00009494      e907ffffff     jmp 0x93a0
0x00009499      0f1f80000000.  nop dword [rax]
0x000094a0      488b7c2418     mov rdi, qword [rsp + 0x18]
0x000094a5      4889742410     mov qword [rsp + 0x10], rsi
0x000094aa      e8018effff     call sym.imp.mbsinit
0x000094af      85c0           test eax, eax
0x000094b1      0f84c5010000   je 0x967c
0x000094b7      488b742410     mov rsi, qword [rsp + 0x10]
0x000094bc      c644242801     mov byte [rsp + 0x28], 1
0x000094c1      488d4d0c       lea rcx, [rbp + 0xc]
0x000094c5      4c89f2         mov rdx, r14
0x000094c8      488d7d2c       lea rdi, [rbp + 0x2c]
0x000094cc      4829f2         sub rdx, rsi
0x000094cf      e81c0b0000     call sym.rpl_mbrtowc
0x000094d4      4883f8ff       cmp rax, 0xffffffffffffffff
0x000094d8      4889442440     mov qword [rsp + 0x40], rax
0x000094dd      0f84bd000000   je 0x95a0
0x000094e3      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000094e7      4c8b642438     mov r12, qword [rsp + 0x38]
0x000094ec      0f842e010000   je 0x9620
0x000094f2      4885c0         test rax, rax
0x000094f5      7520           jne 0x9517
0x000094f7      48c744244001.  mov qword [rsp + 0x40], 1
0x00009500      41803c2400     cmp byte [r12], 0
0x00009505      0f8595010000   jne 0x96a0
0x0000950b      8b44244c       mov eax, dword [rsp + 0x4c]
0x0000950f      85c0           test eax, eax
0x00009511      0f8584010000   jne 0x969b
0x00009517      488d7d0c       lea rdi, [rbp + 0xc]
0x0000951b      c644244801     mov byte [rsp + 0x48], 1
0x00009520      e88b8dffff     call sym.imp.mbsinit
0x00009525      85c0           test eax, eax
0x00009527      4c8b742420     mov r14, qword [rsp + 0x20]
0x0000952c      7405           je 0x9533
0x0000952e      c644242800     mov byte [rsp + 0x28], 0
0x00009533      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00009538      e99ffcffff     jmp 0x91dc
0x0000953d      0f1f00         nop dword [rax]
0x00009540      807c244800     cmp byte [rsp + 0x48], 0
0x00009545      0f842cfcffff   je 0x9177
0x0000954b      8b7c244c       mov edi, dword [rsp + 0x4c]
0x0000954f      e84c8cffff     call sym.imp.iswspace
0x00009554      488b742408     mov rsi, qword [rsp + 8]
0x00009559      85c0           test eax, eax
0x0000955b      b802000000     mov eax, 2
0x00009560      440f45f8       cmovne r15d, eax
0x00009564      490f45f4       cmovne rsi, r12
0x00009568      4889742408     mov qword [rsp + 8], rsi
0x0000956d      e905fcffff     jmp 0x9177
0x00009572      660f1f440000   nop word [rax + rax]
0x00009578      4c89ef         mov rdi, r13
0x0000957b      4889542410     mov qword [rsp + 0x10], rdx
0x00009580      e82b8dffff     call sym.imp.mbsinit
0x00009585      85c0           test eax, eax
0x00009587      488b542410     mov rdx, qword [rsp + 0x10]
0x0000958c      0f84ea000000   je 0x967c
0x00009592      c644242801     mov byte [rsp + 0x28], 1
0x00009597      e972fdffff     jmp 0x930e
0x0000959c      0f1f4000       nop dword [rax]
0x000095a0      48c744244001.  mov qword [rsp + 0x40], 1
0x000095a9      c644244800     mov byte [rsp + 0x48], 0
0x000095ae      41bd01000000   mov r13d, 1
0x000095b4      4c8b642438     mov r12, qword [rsp + 0x38]
0x000095b9      4c8b742420     mov r14, qword [rsp + 0x20]
0x000095be      e919fcffff     jmp 0x91dc
0x000095c3      0f1f440000     nop dword [rax + rax]
0x000095c8      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000095cd      48c744244001.  mov qword [rsp + 0x40], 1
0x000095d6      c644244800     mov byte [rsp + 0x48], 0
0x000095db      c644243401     mov byte [rsp + 0x34], 1
0x000095e0      4c89ff         mov rdi, r15
0x000095e3      e81889ffff     call sym.imp.strlen
0x000095e8      488d5001       lea rdx, [rax + 1]
0x000095ec      4c89fe         mov rsi, r15
0x000095ef      4889df         mov rdi, rbx
0x000095f2      e8d98bffff     call sym.imp.memmove
0x000095f7      4183fc01       cmp r12d, 1
0x000095fb      0f849ffdffff   je 0x93a0
0x00009601      e9d4faffff     jmp 0x90da
0x00009606      662e0f1f8400.  nop word cs:[rax + rax]
0x00009610      41bf01000000   mov r15d, 1
0x00009616      e95cfbffff     jmp 0x9177
0x0000961b      0f1f440000     nop dword [rax + rax]
0x00009620      4c8b742420     mov r14, qword [rsp + 0x20]
0x00009625      c644244800     mov byte [rsp + 0x48], 0
0x0000962a      4d89f5         mov r13, r14
0x0000962d      4d29e5         sub r13, r12
0x00009630      4c896c2440     mov qword [rsp + 0x40], r13
0x00009635      e9a2fbffff     jmp 0x91dc
0x0000963a      660f1f440000   nop word [rax + rax]
0x00009640      488b442420     mov rax, qword [rsp + 0x20]
0x00009645      c644244800     mov byte [rsp + 0x48], 0
0x0000964a      c644243401     mov byte [rsp + 0x34], 1
0x0000964f      4c29f8         sub rax, r15
0x00009652      4889442440     mov qword [rsp + 0x40], rax
0x00009657      eb87           jmp 0x95e0
0x00009659      0f1f80000000.  nop dword [rax]
0x00009660      c644243401     mov byte [rsp + 0x34], 1
0x00009665      e96ffcffff     jmp 0x92d9
0x0000966a      4989dd         mov r13, rbx
0x0000966d      e993fdffff     jmp 0x9405
0x00009672      e8a988ffff     call sym.imp.__stack_chk_fail
0x00009677      e8b4080000     call sym.xalloc_die
0x0000967c      488d0d6d6f00.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x105f0 ; "mbiter_multi_next"
0x00009683      488d353e6f00.  lea rsi, [0x000105c8]                   ; "../coreutils-8.31/lib/mbiter.h"
0x0000968a      488d3df96900.  lea rdi, str.mbsinit___iter__state      ; 0x1008a ; "mbsinit (&iter->state)"
0x00009691      ba8e000000     mov edx, 0x8e
0x00009696      e84589ffff     call sym.imp.__assert_fail
0x0000969b      e8938cffff     call sym.mbiter_multi_next.part.0
0x000096a0      488d0d496f00.  lea rcx, obj.__PRETTY_FUNCTION__.5134   ; 0x105f0 ; "mbiter_multi_next"
0x000096a7      488d351a6f00.  lea rsi, [0x000105c8]                   ; "../coreutils-8.31/lib/mbiter.h"
0x000096ae      488d3dec6900.  lea rdi, str.iter__cur.ptr_______0      ; 0x100a1 ; "*iter->cur.ptr == '\0'"
0x000096b5      baa9000000     mov edx, 0xa9
0x000096ba      e82189ffff     call sym.imp.__assert_fail
0x000096bf      90             nop
;-- version_etc_arn:
0x000096c0      4157           push r15
0x000096c2      4156           push r14
0x000096c4      4155           push r13
0x000096c6      4154           push r12
0x000096c8      4d89cc         mov r12, r9
0x000096cb      55             push rbp
0x000096cc      53             push rbx
0x000096cd      4889fd         mov rbp, rdi
0x000096d0      4c89c3         mov rbx, r8
0x000096d3      4883ec28       sub rsp, 0x28
0x000096d7      4885f6         test rsi, rsi
0x000096da      0f8418010000   je 0x97f8
0x000096e0      4989d0         mov r8, rdx
0x000096e3      488d15186f00.  lea rdx, str.s___s___s                  ; 0x10602 ; "%s (%s) %s\n"
0x000096ea      4989c9         mov r9, rcx
0x000096ed      31c0           xor eax, eax
0x000096ef      4889f1         mov rcx, rsi
0x000096f2      be01000000     mov esi, 1
0x000096f7      e8548bffff     call sym.imp.__fprintf_chk
0x000096fc      488d35126f00.  lea rsi, [0x00010615]                   ; "(C)"
0x00009703      31ff           xor edi, edi
0x00009705      ba05000000     mov edx, 5
0x0000970a      e8d187ffff     call sym.imp.dcgettext
0x0000970f      488d152a7200.  lea rdx, obj.version_etc_copyright      ; 0x10940 ; "Copyright %s %d Free Software Foundation, Inc."
0x00009716      4889c1         mov rcx, rax
0x00009719      41b8e3070000   mov r8d, 0x7e3
0x0000971f      be01000000     mov esi, 1
0x00009724      4889ef         mov rdi, rbp
0x00009727      31c0           xor eax, eax
0x00009729      e8228bffff     call sym.imp.__fprintf_chk
0x0000972e      488d356b6f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x106a0 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00009735      31ff           xor edi, edi
0x00009737      ba05000000     mov edx, 5
0x0000973c      e89f87ffff     call sym.imp.dcgettext
0x00009741      4889ee         mov rsi, rbp
0x00009744      4889c7         mov rdi, rax
0x00009747      e80489ffff     call sym.imp.fputs_unlocked
0x0000974c      4983fc09       cmp r12, 9
0x00009750      0f873a030000   ja 0x9a90
0x00009756      488d15a37100.  lea rdx, [0x00010900]
0x0000975d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00009761      4801d0         add rax, rdx
0x00009764      ffe0           jmp rax
0x00009766      662e0f1f8400.  nop word cs:[rax + rax]
0x00009770      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009774      488b4310       mov rax, qword [rbx + 0x10]
0x00009778      488d35917000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x10810 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000977f      4c8b4308       mov r8, qword [rbx + 8]
0x00009783      ba05000000     mov edx, 5
0x00009788      31ff           xor edi, edi
0x0000978a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000978e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009792      4c894c2410     mov qword [rsp + 0x10], r9
0x00009797      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000979b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000979f      48890424       mov qword [rsp], rax
0x000097a3      4c89442408     mov qword [rsp + 8], r8
0x000097a8      488b1b         mov rbx, qword [rbx]
0x000097ab      e83087ffff     call sym.imp.dcgettext
0x000097b0      4883ec08       sub rsp, 8
0x000097b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000097b9      4889c2         mov rdx, rax
0x000097bc      4889d9         mov rcx, rbx
0x000097bf      be01000000     mov esi, 1
0x000097c4      4889ef         mov rdi, rbp
0x000097c7      31c0           xor eax, eax
0x000097c9      4151           push r9
0x000097cb      4155           push r13
0x000097cd      4154           push r12
0x000097cf      4157           push r15
0x000097d1      4156           push r14
0x000097d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000097d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000097dd      e86e8affff     call sym.imp.__fprintf_chk
0x000097e2      4883c430       add rsp, 0x30
0x000097e6      4883c428       add rsp, 0x28
0x000097ea      5b             pop rbx
0x000097eb      5d             pop rbp
0x000097ec      415c           pop r12
0x000097ee      415d           pop r13
0x000097f0      415e           pop r14
0x000097f2      415f           pop r15
0x000097f4      c3             ret
0x000097f5      0f1f00         nop dword [rax]
0x000097f8      4989c8         mov r8, rcx
0x000097fb      4889d1         mov rcx, rdx
0x000097fe      488d15096e00.  lea rdx, str.s__s                       ; 0x1060e ; "%s %s\n"
0x00009805      be01000000     mov esi, 1
0x0000980a      31c0           xor eax, eax
0x0000980c      e83f8affff     call sym.imp.__fprintf_chk
0x00009811      e9e6feffff     jmp 0x96fc
0x00009816      662e0f1f8400.  nop word cs:[rax + rax]
0x00009820      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009824      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009828      488d35117000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x10840 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000982f      488b4310       mov rax, qword [rbx + 0x10]
0x00009833      4c8b4308       mov r8, qword [rbx + 8]
0x00009837      ba05000000     mov edx, 5
0x0000983c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009840      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009844      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009848      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000984c      488b1b         mov rbx, qword [rbx]
0x0000984f      4c89542418     mov qword [rsp + 0x18], r10
0x00009854      4c894c2410     mov qword [rsp + 0x10], r9
0x00009859      48890424       mov qword [rsp], rax
0x0000985d      4c89442408     mov qword [rsp + 8], r8
0x00009862      31ff           xor edi, edi
0x00009864      e87786ffff     call sym.imp.dcgettext
0x00009869      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000986e      4152           push r10
0x00009870      e93fffffff     jmp 0x97b4
0x00009875      0f1f00         nop dword [rax]
0x00009878      488b1b         mov rbx, qword [rbx]
0x0000987b      488d35976d00.  lea rsi, str.Written_by__s.             ; 0x10619 ; "Written by %s.\n"
0x00009882      ba05000000     mov edx, 5
0x00009887      31ff           xor edi, edi
0x00009889      e85286ffff     call sym.imp.dcgettext
0x0000988e      4883c428       add rsp, 0x28
0x00009892      4889d9         mov rcx, rbx
0x00009895      4889ef         mov rdi, rbp
0x00009898      5b             pop rbx
0x00009899      5d             pop rbp
0x0000989a      415c           pop r12
0x0000989c      415d           pop r13
0x0000989e      415e           pop r14
0x000098a0      415f           pop r15
0x000098a2      4889c2         mov rdx, rax
0x000098a5      be01000000     mov esi, 1
0x000098aa      31c0           xor eax, eax
0x000098ac      e99f89ffff     jmp sym.imp.__fprintf_chk
0x000098b1      0f1f80000000.  nop dword [rax]
0x000098b8      4c8b6308       mov r12, qword [rbx + 8]
0x000098bc      488d35666d00.  lea rsi, str.Written_by__s_and__s.      ; 0x10629 ; "Written by %s and %s.\n"
0x000098c3      488b1b         mov rbx, qword [rbx]
0x000098c6      ba05000000     mov edx, 5
0x000098cb      31ff           xor edi, edi
0x000098cd      e80e86ffff     call sym.imp.dcgettext
0x000098d2      4883c428       add rsp, 0x28
0x000098d6      4d89e0         mov r8, r12
0x000098d9      4889d9         mov rcx, rbx
0x000098dc      4889ef         mov rdi, rbp
0x000098df      4889c2         mov rdx, rax
0x000098e2      be01000000     mov esi, 1
0x000098e7      5b             pop rbx
0x000098e8      5d             pop rbp
0x000098e9      415c           pop r12
0x000098eb      415d           pop r13
0x000098ed      415e           pop r14
0x000098ef      415f           pop r15
0x000098f1      31c0           xor eax, eax
0x000098f3      e95889ffff     jmp sym.imp.__fprintf_chk
0x000098f8      0f1f84000000.  nop dword [rax + rax]
0x00009900      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009904      4c8b6308       mov r12, qword [rbx + 8]
0x00009908      488d35316d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x10640 ; "Written by %s, %s, and %s.\n"
0x0000990f      488b1b         mov rbx, qword [rbx]
0x00009912      ba05000000     mov edx, 5
0x00009917      31ff           xor edi, edi
0x00009919      e8c285ffff     call sym.imp.dcgettext
0x0000991e      4883c428       add rsp, 0x28
0x00009922      4d89e9         mov r9, r13
0x00009925      4d89e0         mov r8, r12
0x00009928      4889d9         mov rcx, rbx
0x0000992b      4889ef         mov rdi, rbp
0x0000992e      4889c2         mov rdx, rax
0x00009931      5b             pop rbx
0x00009932      5d             pop rbp
0x00009933      415c           pop r12
0x00009935      415d           pop r13
0x00009937      415e           pop r14
0x00009939      415f           pop r15
0x0000993b      be01000000     mov esi, 1
0x00009940      31c0           xor eax, eax
0x00009942      e90989ffff     jmp sym.imp.__fprintf_chk
0x00009947      660f1f840000.  nop word [rax + rax]
0x00009950      488d35196e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x10770 ; "Written by %s, %s, %s,\nand %s.\n"
0x00009957      ba05000000     mov edx, 5
0x0000995c      31ff           xor edi, edi
0x0000995e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009962      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00009966      4c8b6308       mov r12, qword [rbx + 8]
0x0000996a      488b1b         mov rbx, qword [rbx]
0x0000996d      e86e85ffff     call sym.imp.dcgettext
0x00009972      4883ec08       sub rsp, 8
0x00009976      4156           push r14
0x00009978      4889c2         mov rdx, rax
0x0000997b      4d89e9         mov r9, r13
0x0000997e      4d89e0         mov r8, r12
0x00009981      4889d9         mov rcx, rbx
0x00009984      4889ef         mov rdi, rbp
0x00009987      be01000000     mov esi, 1
0x0000998c      31c0           xor eax, eax
0x0000998e      e8bd88ffff     call sym.imp.__fprintf_chk
0x00009993      58             pop rax
0x00009994      5a             pop rdx
0x00009995      4883c428       add rsp, 0x28
0x00009999      5b             pop rbx
0x0000999a      5d             pop rbp
0x0000999b      415c           pop r12
0x0000999d      415d           pop r13
0x0000999f      415e           pop r14
0x000099a1      415f           pop r15
0x000099a3      c3             ret
0x000099a4      0f1f4000       nop dword [rax]
0x000099a8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000099ac      488d35dd6d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x10790 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000099b3      ba05000000     mov edx, 5
0x000099b8      31ff           xor edi, edi
0x000099ba      4c8b7318       mov r14, qword [rbx + 0x18]
0x000099be      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000099c2      4c8b6308       mov r12, qword [rbx + 8]
0x000099c6      488b1b         mov rbx, qword [rbx]
0x000099c9      e81285ffff     call sym.imp.dcgettext
0x000099ce      4157           push r15
0x000099d0      eba4           jmp 0x9976
0x000099d2      660f1f440000   nop word [rax + rax]
0x000099d8      4c8b4308       mov r8, qword [rbx + 8]
0x000099dc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000099e0      488d35d16d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x107b8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000099e7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000099eb      4c8b7318       mov r14, qword [rbx + 0x18]
0x000099ef      ba05000000     mov edx, 5
0x000099f4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000099f8      31ff           xor edi, edi
0x000099fa      488b1b         mov rbx, qword [rbx]
0x000099fd      4c890424       mov qword [rsp], r8
0x00009a01      e8da84ffff     call sym.imp.dcgettext
0x00009a06      4883ec08       sub rsp, 8
0x00009a0a      4d89e9         mov r9, r13
0x00009a0d      4154           push r12
0x00009a0f      4157           push r15
0x00009a11      4156           push r14
0x00009a13      4c8b442420     mov r8, qword [rsp + 0x20]
0x00009a18      4889d9         mov rcx, rbx
0x00009a1b      4889c2         mov rdx, rax
0x00009a1e      4889ef         mov rdi, rbp
0x00009a21      be01000000     mov esi, 1
0x00009a26      31c0           xor eax, eax
0x00009a28      e82388ffff     call sym.imp.__fprintf_chk
0x00009a2d      4883c420       add rsp, 0x20
0x00009a31      4883c428       add rsp, 0x28
0x00009a35      5b             pop rbx
0x00009a36      5d             pop rbp
0x00009a37      415c           pop r12
0x00009a39      415d           pop r13
0x00009a3b      415e           pop r14
0x00009a3d      415f           pop r15
0x00009a3f      c3             ret
0x00009a40      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00009a44      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009a48      488d35916d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x107e0 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00009a4f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009a53      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009a57      ba05000000     mov edx, 5
0x00009a5c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009a60      4c8b4308       mov r8, qword [rbx + 8]
0x00009a64      31ff           xor edi, edi
0x00009a66      4c894c2408     mov qword [rsp + 8], r9
0x00009a6b      488b1b         mov rbx, qword [rbx]
0x00009a6e      4c890424       mov qword [rsp], r8
0x00009a72      e86984ffff     call sym.imp.dcgettext
0x00009a77      4155           push r13
0x00009a79      4154           push r12
0x00009a7b      4157           push r15
0x00009a7d      4156           push r14
0x00009a7f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00009a84      eb8d           jmp 0x9a13
0x00009a86      662e0f1f8400.  nop word cs:[rax + rax]
0x00009a90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00009a94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00009a98      ba05000000     mov edx, 5
0x00009a9d      488b4310       mov rax, qword [rbx + 0x10]
0x00009aa1      4c8b4308       mov r8, qword [rbx + 8]
0x00009aa5      488d35cc6d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x10878 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00009aac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00009ab0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00009ab4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00009ab8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00009abc      4c89542418     mov qword [rsp + 0x18], r10
0x00009ac1      4c894c2410     mov qword [rsp + 0x10], r9
0x00009ac6      48890424       mov qword [rsp], rax
0x00009aca      4c89442408     mov qword [rsp + 8], r8
0x00009acf      488b1b         mov rbx, qword [rbx]
0x00009ad2      e98bfdffff     jmp 0x9862
0x00009ad7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00009ae0      4531c9         xor r9d, r9d
0x00009ae3      49833800       cmp qword [r8], 0
0x00009ae7      7412           je 0x9afb
0x00009ae9      0f1f80000000.  nop dword [rax]
0x00009af0      4983c101       add r9, 1
0x00009af4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00009af9      75f5           jne 0x9af0
0x00009afb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00009b00      4883ec68       sub rsp, 0x68
0x00009b04      4d89c2         mov r10, r8
0x00009b07      4531c9         xor r9d, r9d
0x00009b0a      64488b042528.  mov rax, qword fs:[0x28]
0x00009b13      4889442458     mov qword [rsp + 0x58], rax
0x00009b18      31c0           xor eax, eax
0x00009b1a      4989e0         mov r8, rsp
0x00009b1d      0f1f00         nop dword [rax]
0x00009b20      418b02         mov eax, dword [r10]
0x00009b23      83f82f         cmp eax, 0x2f
0x00009b26      7742           ja 0x9b6a
0x00009b28      4189c3         mov r11d, eax
0x00009b2b      4d035a10       add r11, qword [r10 + 0x10]
0x00009b2f      83c008         add eax, 8
0x00009b32      418902         mov dword [r10], eax
0x00009b35      498b03         mov rax, qword [r11]
0x00009b38      4885c0         test rax, rax
0x00009b3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00009b3f      740a           je 0x9b4b
0x00009b41      4983c101       add r9, 1
0x00009b45      4983f90a       cmp r9, 0xa
0x00009b49      75d5           jne 0x9b20
0x00009b4b      e870fbffff     call sym.version_etc_arn
0x00009b50      488b442458     mov rax, qword [rsp + 0x58]
0x00009b55      644833042528.  xor rax, qword fs:[0x28]
0x00009b5e      7505           jne 0x9b65
0x00009b60      4883c468       add rsp, 0x68
0x00009b64      c3             ret
0x00009b65      e8b683ffff     call sym.imp.__stack_chk_fail
0x00009b6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00009b6e      498d4308       lea rax, [r11 + 8]
0x00009b72      49894208       mov qword [r10 + 8], rax
0x00009b76      ebbd           jmp 0x9b35
0x00009b78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00009b80      55             push rbp
0x00009b81      53             push rbx
0x00009b82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00009b88      4531db         xor r11d, r11d
0x00009b8b      4881ecb80000.  sub rsp, 0xb8
0x00009b92      64488b042528.  mov rax, qword fs:[0x28]
0x00009b9b      4889442478     mov qword [rsp + 0x78], rax
0x00009ba0      31c0           xor eax, eax
0x00009ba2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00009baa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00009bb2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00009bba      4c8d442420     lea r8, [rsp + 0x20]
0x00009bbf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00009bc7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00009bcf      4889442410     mov qword [rsp + 0x10], rax
0x00009bd4      488d84248000.  lea rax, [rsp + 0x80]
0x00009bdc      4531c9         xor r9d, r9d
0x00009bdf      4889442418     mov qword [rsp + 0x18], rax
0x00009be4      4889c5         mov rbp, rax
0x00009be7      660f1f840000.  nop word [rax + rax]
0x00009bf0      4183fa2f       cmp r10d, 0x2f
0x00009bf4      7756           ja 0x9c4c
0x00009bf6      4489d0         mov eax, r10d
0x00009bf9      41bb01000000   mov r11d, 1
0x00009bff      4183c208       add r10d, 8
0x00009c03      4801e8         add rax, rbp
0x00009c06      488b00         mov rax, qword [rax]
0x00009c09      4885c0         test rax, rax
0x00009c0c      4b8904c8       mov qword [r8 + r9*8], rax
0x00009c10      740a           je 0x9c1c
0x00009c12      4983c101       add r9, 1
0x00009c16      4983f90a       cmp r9, 0xa
0x00009c1a      75d4           jne 0x9bf0
0x00009c1c      4584db         test r11b, r11b
0x00009c1f      7524           jne 0x9c45
0x00009c21      e89afaffff     call sym.version_etc_arn
0x00009c26      488b442478     mov rax, qword [rsp + 0x78]
0x00009c2b      644833042528.  xor rax, qword fs:[0x28]
0x00009c34      750a           jne 0x9c40
0x00009c36      4881c4b80000.  add rsp, 0xb8
0x00009c3d      5b             pop rbx
0x00009c3e      5d             pop rbp
0x00009c3f      c3             ret
0x00009c40      e8db82ffff     call sym.imp.__stack_chk_fail
0x00009c45      4489542408     mov dword [rsp + 8], r10d
0x00009c4a      ebd5           jmp 0x9c21
0x00009c4c      4889d8         mov rax, rbx
0x00009c4f      4883c308       add rbx, 8
0x00009c53      ebb1           jmp 0x9c06
0x00009c55      90             nop
0x00009c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00009c60      53             push rbx
0x00009c61      488d35f46900.  lea rsi, str.Report_bugs_to:__s         ; 0x1065c ; "\nReport bugs to: %s\n"
0x00009c68      ba05000000     mov edx, 5
0x00009c6d      31ff           xor edi, edi
0x00009c6f      e86c82ffff     call sym.imp.dcgettext
0x00009c74      488d15f66900.  lea rdx, str.bug_coreutils_gnu.org      ; 0x10671 ; "bug-coreutils@gnu.org"
0x00009c7b      4889c6         mov rsi, rax
0x00009c7e      bf01000000     mov edi, 1
0x00009c83      31c0           xor eax, eax
0x00009c85      e8e684ffff     call sym.imp.__printf_chk
0x00009c8a      488d35f66900.  lea rsi, str.s_home_page:___s           ; 0x10687 ; "%s home page: <%s>\n"
0x00009c91      ba05000000     mov edx, 5
0x00009c96      31ff           xor edi, edi
0x00009c98      e84382ffff     call sym.imp.dcgettext
0x00009c9d      488d0d443000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xcce8 ; "https://www.gnu.org/software/coreutils/"
0x00009ca4      488d15f03100.  lea rdx, str.GNU_coreutils              ; 0xce9b ; "GNU coreutils"
0x00009cab      4889c6         mov rsi, rax
0x00009cae      bf01000000     mov edi, 1
0x00009cb3      31c0           xor eax, eax
0x00009cb5      e8b684ffff     call sym.imp.__printf_chk
0x00009cba      488b1de79320.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2130a8:8]=0
0x00009cc1      488d35f06b00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x108b8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00009cc8      31ff           xor edi, edi
0x00009cca      ba05000000     mov edx, 5
0x00009ccf      e80c82ffff     call sym.imp.dcgettext
0x00009cd4      4889de         mov rsi, rbx
0x00009cd7      4889c7         mov rdi, rax
0x00009cda      5b             pop rbx
0x00009cdb      e97083ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00009ce0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00009ce1      4889fb         mov rbx, rdi
0x00009ce4      e80784ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00009ce9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00009cec      7505           jne 0x9cf3
0x00009cee      4885db         test rbx, rbx
0x00009cf1      7502           jne 0x9cf5
0x00009cf3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00009cf4      c3             ret
0x00009cf5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00009cfa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00009d00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00009d03      48f7e6         mul rsi
0x00009d06      4889c7         mov rdi, rax
0x00009d09      0f90c0         seto al
0x00009d0c      4885ff         test rdi, rdi
0x00009d0f      780a           js 0x9d1b
0x00009d11      0fb6c0         movzx eax, al
0x00009d14      4885c0         test rax, rax
0x00009d17      7502           jne 0x9d1b
0x00009d19      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00009d1b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00009d1f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00009d24      6690           nop
0x00009d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00009d30      ebae           jmp sym.xmalloc
0x00009d32      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00009d36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00009d40      4885f6         test rsi, rsi
0x00009d43      53             push rbx
0x00009d44      4889f3         mov rbx, rsi
0x00009d47      7505           jne 0x9d4e
0x00009d49      4885ff         test rdi, rdi
0x00009d4c      751a           jne 0x9d68
0x00009d4e      4889de         mov rsi, rbx
0x00009d51      e8fa83ffff     call sym.imp.realloc
0x00009d56      4885c0         test rax, rax
0x00009d59      7505           jne 0x9d60
0x00009d5b      4885db         test rbx, rbx
0x00009d5e      7511           jne 0x9d71                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00009d60      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00009d61      c3             ret
0x00009d62      660f1f440000   nop word [rax + rax]
0x00009d68      e86380ffff     call sym.imp.free
0x00009d6d      31c0           xor eax, eax
0x00009d6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00009d70      c3             ret
0x00009d71      e8ba010000     call sym.xalloc_die
0x00009d76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00009d80      4889f0         mov rax, rsi
0x00009d83      48f7e2         mul rdx
0x00009d86      4889c6         mov rsi, rax
0x00009d89      0f90c0         seto al
0x00009d8c      4885f6         test rsi, rsi
0x00009d8f      780a           js 0x9d9b
0x00009d91      0fb6c0         movzx eax, al
0x00009d94      4885c0         test rax, rax
0x00009d97      7502           jne 0x9d9b
0x00009d99      eba5           jmp sym.xrealloc
0x00009d9b      4883ec08       sub rsp, 8
0x00009d9f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00009da4      6690           nop
0x00009da6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00009db0      4885ff         test rdi, rdi
0x00009db3      4989d1         mov r9, rdx
0x00009db6      488b0e         mov rcx, qword [rsi]
0x00009db9      7435           je 0x9df0
0x00009dbb      31d2           xor edx, edx
0x00009dbd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00009dc7      49f7f1         div r9
0x00009dca      4839c8         cmp rax, rcx
0x00009dcd      763c           jbe 0x9e0b
0x00009dcf      4889c8         mov rax, rcx
0x00009dd2      48d1e8         shr rax, 1
0x00009dd5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00009dda      48890e         mov qword [rsi], rcx
0x00009ddd      490fafc9       imul rcx, r9
0x00009de1      4889ce         mov rsi, rcx
0x00009de4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00009de9      0f1f80000000.  nop dword [rax]
0x00009df0      4885c9         test rcx, rcx
0x00009df3      7423           je 0x9e18
0x00009df5      4889c8         mov rax, rcx
0x00009df8      49f7e1         mul r9
0x00009dfb      0f90c2         seto dl
0x00009dfe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00009e01      0fb6d2         movzx edx, dl
0x00009e04      7805           js 0x9e0b
0x00009e06      4885d2         test rdx, rdx
0x00009e09      74cf           je 0x9dda
0x00009e0b      4883ec08       sub rsp, 8
0x00009e0f      e81c010000     call sym.xalloc_die
0x00009e14      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00009e18      31d2           xor edx, edx
0x00009e1a      b880000000     mov eax, 0x80
0x00009e1f      4531c0         xor r8d, r8d
0x00009e22      49f7f1         div r9
0x00009e25      4885c0         test rax, rax
0x00009e28      410f94c0       sete r8b
0x00009e2c      498d0c00       lea rcx, [r8 + rax]
0x00009e30      ebc3           jmp 0x9df5
0x00009e32      0f1f4000       nop dword [rax]
0x00009e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00009e40      4885ff         test rdi, rdi
0x00009e43      488b06         mov rax, qword [rsi]
0x00009e46      7428           je 0x9e70
0x00009e48      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00009e52      4839d0         cmp rax, rdx
0x00009e55      772a           ja 0x9e81
0x00009e57      4889c2         mov rdx, rax
0x00009e5a      48d1ea         shr rdx, 1
0x00009e5d      488d440201     lea rax, [rdx + rax + 1]
0x00009e62      488906         mov qword [rsi], rax
0x00009e65      4889c6         mov rsi, rax
0x00009e68      e9d3feffff     jmp sym.xrealloc
0x00009e6d      0f1f00         nop dword [rax]
0x00009e70      4885c0         test rax, rax
0x00009e73      ba80000000     mov edx, 0x80
0x00009e78      480f44c2       cmove rax, rdx
0x00009e7c      4885c0         test rax, rax
0x00009e7f      79e1           jns 0x9e62
0x00009e81      4883ec08       sub rsp, 8
0x00009e85      e8a6000000     call sym.xalloc_die
0x00009e8a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00009e90      53             push rbx
0x00009e91      4889fb         mov rbx, rdi
0x00009e94      e847feffff     call sym.xmalloc
0x00009e99      4889da         mov rdx, rbx
0x00009e9c      31f6           xor esi, esi
0x00009e9e      4889c7         mov rdi, rax
0x00009ea1      5b             pop rbx
0x00009ea2      e94981ffff     jmp sym.imp.memset
0x00009ea7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00009eb0      4889f8         mov rax, rdi
0x00009eb3      4883ec08       sub rsp, 8
0x00009eb7      48f7e6         mul rsi
0x00009eba      0f90c2         seto dl
0x00009ebd      4885c0         test rax, rax
0x00009ec0      7817           js 0x9ed9
0x00009ec2      0fb6d2         movzx edx, dl
0x00009ec5      4885d2         test rdx, rdx
0x00009ec8      750f           jne 0x9ed9
0x00009eca      e89181ffff     call sym.imp.calloc
0x00009ecf      4885c0         test rax, rax
0x00009ed2      7405           je 0x9ed9
0x00009ed4      4883c408       add rsp, 8
0x00009ed8      c3             ret
0x00009ed9      e852000000     call sym.xalloc_die
0x00009ede      6690           nop
;-- xmemdup:
0x00009ee0      55             push rbp
0x00009ee1      53             push rbx
0x00009ee2      4889fd         mov rbp, rdi
0x00009ee5      4889f7         mov rdi, rsi
0x00009ee8      4889f3         mov rbx, rsi
0x00009eeb      4883ec08       sub rsp, 8
0x00009eef      e8ecfdffff     call sym.xmalloc
0x00009ef4      4883c408       add rsp, 8
0x00009ef8      4889da         mov rdx, rbx
0x00009efb      4889ee         mov rsi, rbp
0x00009efe      5b             pop rbx
0x00009eff      5d             pop rbp
0x00009f00      4889c7         mov rdi, rax
0x00009f03      e99881ffff     jmp sym.imp.memcpy
0x00009f08      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00009f10      53             push rbx
0x00009f11      4889fb         mov rbx, rdi
0x00009f14      e8e77fffff     call sym.imp.strlen
0x00009f19      4889df         mov rdi, rbx
0x00009f1c      488d7001       lea rsi, [rax + 1]
0x00009f20      5b             pop rbx
0x00009f21      ebbd           jmp sym.xmemdup
0x00009f23      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f2d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00009f30      488d35386a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x1096f ; "memory exhausted"
0x00009f37      4883ec08       sub rsp, 8
0x00009f3b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00009f40      31ff           xor edi, edi
0x00009f42      e8997fffff     call sym.imp.dcgettext
0x00009f47      8b3dd3902000   mov edi, dword [obj.exit_failure]       ; [0x213020:4]=1
0x00009f4d      488d15b86000.  lea rdx, [0x0001000c]                   ; "%s"
0x00009f54      4889c1         mov rcx, rax
0x00009f57      31f6           xor esi, esi
0x00009f59      31c0           xor eax, eax
0x00009f5b      e88082ffff     call sym.imp.error
0x00009f60      e87b7effff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00009f65      662e0f1f8400.  nop word cs:[rax + rax]
0x00009f6f      90             nop
;-- xmem_cd_iconv:
0x00009f70      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:34
0x00009f71      e86a200000     call sym.mem_cd_iconv                   ; ../coreutils-8.31/lib/xstriconv.c:35
0x00009f76      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009f78      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/xstriconv.c:35
0x00009f7a      7804           js 0x9f80                               ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009f7c      89d8           mov eax, ebx                            ; ../coreutils-8.31/lib/xstriconv.c:40
0x00009f7e      5b             pop rbx
0x00009f7f      c3             ret
0x00009f80      e86b7effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:37
0x00009f85      83380c         cmp dword [rax], 0xc
0x00009f88      75f2           jne 0x9f7c
0x00009f8a      e8a1ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:38
0x00009f8f      90             nop
;-- xstr_cd_iconv:
0x00009f90      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:44
0x00009f91      e80a230000     call sym.str_cd_iconv                   ; ../coreutils-8.31/lib/xstriconv.c:45
0x00009f96      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009f99      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xstriconv.c:45
0x00009f9c      740a           je 0x9fa8                               ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009f9e      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xstriconv.c:50
0x00009fa1      5b             pop rbx
0x00009fa2      c3             ret
0x00009fa3      0f1f440000     nop dword [rax + rax]
0x00009fa8      e8437effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:47
0x00009fad      83380c         cmp dword [rax], 0xc
0x00009fb0      75ec           jne 0x9f9e
0x00009fb2      e879ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:48
0x00009fb7      660f1f840000.  nop word [rax + rax]
;-- xstr_iconv:
0x00009fc0      53             push rbx                                ; ../coreutils-8.31/lib/xstriconv.c:56
0x00009fc1      e82a250000     call sym.str_iconv                      ; ../coreutils-8.31/lib/xstriconv.c:57
0x00009fc6      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009fc9      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/xstriconv.c:57
0x00009fcc      740a           je 0x9fd8                               ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009fce      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/xstriconv.c:62
0x00009fd1      5b             pop rbx
0x00009fd2      c3             ret
0x00009fd3      0f1f440000     nop dword [rax + rax]
0x00009fd8      e8137effff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xstriconv.c:59
0x00009fdd      83380c         cmp dword [rax], 0xc
0x00009fe0      75ec           jne 0x9fce
0x00009fe2      e849ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstriconv.c:60
0x00009fe7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00009ff0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00009ff2      4154           push r12
0x00009ff4      4989f5         mov r13, rsi
0x00009ff7      55             push rbp
0x00009ff8      53             push rbx
0x00009ff9      4889fb         mov rbx, rdi
0x00009ffc      4989d4         mov r12, rdx
0x00009fff      4883ec18       sub rsp, 0x18
0x0000a003      64488b042528.  mov rax, qword fs:[0x28]
0x0000a00c      4889442408     mov qword [rsp + 8], rax
0x0000a011      31c0           xor eax, eax
0x0000a013      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x0000a018      4885ff         test rdi, rdi
0x0000a01b      480f44d8       cmove rbx, rax
0x0000a01f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a022      e8297fffff     call sym.imp.mbrtowc
0x0000a027      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a02b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000a02e      7620           jbe 0xa050                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000a030      4d85e4         test r12, r12
0x0000a033      741b           je 0xa050
0x0000a035      31ff           xor edi, edi
0x0000a037      e814010000     call sym.hard_locale
0x0000a03c      84c0           test al, al
0x0000a03e      7510           jne 0xa050
0x0000a040      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a045      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000a04a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000a04c      0f1f4000       nop dword [rax]
0x0000a050      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x0000a055      644833142528.  xor rdx, qword fs:[0x28]
0x0000a05e      4889e8         mov rax, rbp
0x0000a061      750b           jne 0xa06e
0x0000a063      4883c418       add rsp, 0x18
0x0000a067      5b             pop rbx
0x0000a068      5d             pop rbp
0x0000a069      415c           pop r12
0x0000a06b      415d           pop r13
0x0000a06d      c3             ret
0x0000a06e      e8ad7effff     call sym.imp.__stack_chk_fail
0x0000a073      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a07d      0f1f00         nop dword [rax]
;-- c_strcasecmp:
0x0000a080      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/c-strcasecmp.c:28
0x0000a082      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/c-strcasecmp.c:33
0x0000a085      7515           jne 0xa09c
0x0000a087      eb43           jmp 0xa0cc
0x0000a089      0f1f80000000.  nop dword [rax]
0x0000a090      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:44
0x0000a094      4883c601       add rsi, 1                              ; ../coreutils-8.31/lib/c-strcasecmp.c:45
0x0000a098      38d0           cmp al, dl                              ; ../coreutils-8.31/lib/c-strcasecmp.c:47
0x0000a09a      7528           jne 0xa0c4
0x0000a09c      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:38
0x0000a09f      89c2           mov edx, eax
0x0000a0a1      8d4820         lea ecx, [rax + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000a0a4      83ea41         sub edx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x0000a0a7      80fa1a         cmp dl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000a0aa      0fb616         movzx edx, byte [rsi]                   ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x0000a0ad      0f42c1         cmovb eax, ecx                          ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000a0b0      89d1           mov ecx, edx                            ; ../coreutils-8.31/lib/c-strcasecmp.c:39
0x0000a0b2      448d4a20       lea r9d, [rdx + 0x20]                   ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000a0b6      83e941         sub ecx, 0x41                           ; ../coreutils-8.31/lib/c-ctype.h:339
0x0000a0b9      80f91a         cmp cl, 0x1a                            ; ../coreutils-8.31/lib/c-ctype.h:342
0x0000a0bc      410f42d1       cmovb edx, r9d
0x0000a0c0      84c0           test al, al                             ; ../coreutils-8.31/lib/c-strcasecmp.c:41
0x0000a0c2      75cc           jne 0xa090
0x0000a0c4      0fb6c0         movzx eax, al                           ; ../coreutils-8.31/lib/c-strcasecmp.c:50
0x0000a0c7      0fb6d2         movzx edx, dl
0x0000a0ca      29d0           sub eax, edx
0x0000a0cc      f3c3           ret                                     ; ../coreutils-8.31/lib/c-strcasecmp.c:56
0x0000a0ce      6690           nop
;-- close_stream:
0x0000a0d0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x0000a0d2      55             push rbp
0x0000a0d3      4889fd         mov rbp, rdi
0x0000a0d6      53             push rbx
0x0000a0d7      e8447dffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000a0dc      8b5d00         mov ebx, dword [rbp]
0x0000a0df      4889ef         mov rdi, rbp
0x0000a0e2      4989c4         mov r12, rax
0x0000a0e5      e8f6240000     call sym.rpl_fclose
0x0000a0ea      83e320         and ebx, 0x20                           ; "@"
0x0000a0ed      85db           test ebx, ebx
0x0000a0ef      7517           jne 0xa108
0x0000a0f1      85c0           test eax, eax
0x0000a0f3      740a           je 0xa0ff                               ; stdio.h:-186
0x0000a0f5      4d85e4         test r12, r12                           ; stdio.h:-178
0x0000a0f8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a0fd      7439           je 0xa138
0x0000a0ff      5b             pop rbx
0x0000a100      5d             pop rbp
0x0000a101      415c           pop r12
0x0000a103      c3             ret
0x0000a104      0f1f4000       nop dword [rax]
0x0000a108      85c0           test eax, eax
0x0000a10a      751c           jne 0xa128
0x0000a10c      e8df7cffff     call sym.imp.__errno_location
0x0000a111      c70000000000   mov dword [rax], 0
0x0000a117      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a11c      5b             pop rbx
0x0000a11d      5d             pop rbp
0x0000a11e      415c           pop r12
0x0000a120      c3             ret
0x0000a121      0f1f80000000.  nop dword [rax]
0x0000a128      5b             pop rbx
0x0000a129      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a12e      5d             pop rbp                                 ; stdio.h:-186
0x0000a12f      415c           pop r12
0x0000a131      c3             ret
0x0000a132      660f1f440000   nop word [rax + rax]
0x0000a138      e8b37cffff     call sym.imp.__errno_location
0x0000a13d      833809         cmp dword [rax], 9
0x0000a140      5b             pop rbx
0x0000a141      5d             pop rbp
0x0000a142      415c           pop r12                                 ; stdio.h:-178
0x0000a144      0f95c0         setne al
0x0000a147      0fb6c0         movzx eax, al
0x0000a14a      f7d8           neg eax
0x0000a14c      c3             ret
0x0000a14d      0f1f00         nop dword [rax]
;-- hard_locale:
0x0000a150      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x0000a154      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x0000a156      e80580ffff     call sym.imp.setlocale
0x0000a15b      4889c2         mov rdx, rax
0x0000a15e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x0000a163      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x0000a166      741d           je 0xa185
0x0000a168      488d3d116800.  lea rdi, [0x00010980]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000a16f      b902000000     mov ecx, 2
0x0000a174      4889d6         mov rsi, rdx
0x0000a177      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a179      0f97c1         seta cl
0x0000a17c      80d900         sbb cl, 0
0x0000a17f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x0000a181      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x0000a183      750b           jne 0xa190
0x0000a185      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a189      c3             ret
0x0000a18a      660f1f440000   nop word [rax + rax]
0x0000a190      488d3deb6700.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x10982 ; "POSIX"
0x0000a197      b906000000     mov ecx, 6
0x0000a19c      4889d6         mov rsi, rdx
0x0000a19f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000a1a1      0f97c0         seta al
0x0000a1a4      1c00           sbb al, 0
0x0000a1a6      84c0           test al, al
0x0000a1a8      0f95c0         setne al
0x0000a1ab      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000a1af      c3             ret
;-- locale_charset:
0x0000a1b0      4883ec08       sub rsp, 8
0x0000a1b4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000a1b9      e8627fffff     call sym.imp.nl_langinfo
0x0000a1be      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000a1c1      741d           je 0xa1e0
0x0000a1c3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000a1c6      488d15bb6700.  lea rdx, str.ASCII                      ; 0x10988 ; "ASCII"
0x0000a1cd      480f44c2       cmove rax, rdx
0x0000a1d1      4883c408       add rsp, 8
0x0000a1d5      c3             ret
0x0000a1d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a1e0      488d05a16700.  lea rax, str.ASCII                      ; 0x10988 ; "ASCII"
0x0000a1e7      4883c408       add rsp, 8
0x0000a1eb      c3             ret
0x0000a1ec      0f1f4000       nop dword [rax]
;-- mb_width_aux:
0x0000a1f0      53             push rbx                                ; ../coreutils-8.31/lib/mbchar.h:248
0x0000a1f1      89fb           mov ebx, edi
0x0000a1f3      e8d87effff     call sym.imp.wcwidth                    ; ../coreutils-8.31/lib/mbchar.h:249
0x0000a1f8      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbchar.h:252
0x0000a1fa      7804           js 0xa200
0x0000a1fc      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x0000a1fd      c3             ret
0x0000a1fe      6690           nop
0x0000a200      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/mbchar.h:252
0x0000a202      e8797cffff     call sym.imp.iswcntrl
0x0000a207      85c0           test eax, eax
0x0000a209      0f94c0         sete al
0x0000a20c      0fb6c0         movzx eax, al
0x0000a20f      5b             pop rbx                                 ; ../coreutils-8.31/lib/mbchar.h:253
0x0000a210      c3             ret
0x0000a211      0f1f440000     nop dword [rax + rax]
0x0000a216      662e0f1f8400.  nop word cs:[rax + rax]
;-- mb_copy:
0x0000a220      55             push rbp                                ; ../coreutils-8.31/lib/mbchar.h:269
0x0000a221      53             push rbx
0x0000a222      4889f3         mov rbx, rsi
0x0000a225      488d4318       lea rax, [rbx + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:270
0x0000a229      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/mbchar.h:269
0x0000a22c      4883ec08       sub rsp, 8
0x0000a230      488b36         mov rsi, qword [rsi]                    ; ../coreutils-8.31/lib/mbchar.h:270
0x0000a233      488b5308       mov rdx, qword [rbx + 8]
0x0000a237      4839c6         cmp rsi, rax
0x0000a23a      7424           je 0xa260
0x0000a23c      488937         mov qword [rdi], rsi                    ; ../coreutils-8.31/lib/mbchar.h:276
0x0000a23f      0fb64310       movzx eax, byte [rbx + 0x10]            ; ../coreutils-8.31/lib/mbchar.h:278
0x0000a243      48895508       mov qword [rbp + 8], rdx                ; ../coreutils-8.31/lib/mbchar.h:277
0x0000a247      84c0           test al, al                             ; ../coreutils-8.31/lib/mbchar.h:278
0x0000a249      884510         mov byte [rbp + 0x10], al
0x0000a24c      7406           je 0xa254
0x0000a24e      8b4314         mov eax, dword [rbx + 0x14]             ; ../coreutils-8.31/lib/mbchar.h:279
0x0000a251      894514         mov dword [rbp + 0x14], eax
0x0000a254      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/mbchar.h:280
0x0000a258      5b             pop rbx
0x0000a259      5d             pop rbp
0x0000a25a      c3             ret
0x0000a25b      0f1f440000     nop dword [rax + rax]
0x0000a260      488d4f18       lea rcx, [rdi + 0x18]                   ; ../coreutils-8.31/lib/mbchar.h:272
0x0000a264      4889cf         mov rdi, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x0000a267      e8347effff     call sym.imp.memcpy
0x0000a26c      488b5308       mov rdx, qword [rbx + 8]
0x0000a270      48894500       mov qword [rbp], rax                    ; ../coreutils-8.31/lib/mbchar.h:273
0x0000a274      ebc9           jmp 0xa23f
0x0000a276      662e0f1f8400.  nop word cs:[rax + rax]
;-- is_basic:
0x0000a280      89f8           mov eax, edi                            ; ../coreutils-8.31/lib/mbchar.h:317
0x0000a282      488d15176700.  lea rdx, obj.is_basic_table             ; 0x109a0
0x0000a289      89f9           mov ecx, edi
0x0000a28b      c0e805         shr al, 5
0x0000a28e      83e11f         and ecx, 0x1f
0x0000a291      83e007         and eax, 7
0x0000a294      8b0482         mov eax, dword [rdx + rax*4]
0x0000a297      d3e8           shr eax, cl
0x0000a299      83e001         and eax, 1                              ; ../coreutils-8.31/lib/mbchar.h:319
0x0000a29c      c3             ret                                     ; ../coreutils-8.31/lib/mbchar.h:320
0x0000a29d      0f1f00         nop dword [rax]
;-- knuth_morris_pratt:
0x0000a2a0      55             push rbp                                ; ../coreutils-8.31/lib/str-kmp.h:38
0x0000a2a1      4889e5         mov rbp, rsp
0x0000a2a4      4154           push r12
0x0000a2a6      53             push rbx
0x0000a2a7      4989d4         mov r12, rdx
0x0000a2aa      ba08000000     mov edx, 8                              ; ../coreutils-8.31/lib/str-kmp.h:42
0x0000a2af      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/str-kmp.h:38
0x0000a2b2      4883ec20       sub rsp, 0x20
0x0000a2b6      64488b042528.  mov rax, qword fs:[0x28]
0x0000a2bf      488945e8       mov qword [rbp - 0x18], rax
0x0000a2c3      31c0           xor eax, eax
0x0000a2c5      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/str-kmp.h:42
0x0000a2c8      49f7e4         mul r12
0x0000a2cb      0f806c010000   jo 0xa43d
0x0000a2d1      31ff           xor edi, edi
0x0000a2d3      4885c0         test rax, rax
0x0000a2d6      0f88d4000000   js 0xa3b0
0x0000a2dc      4885ff         test rdi, rdi
0x0000a2df      0f85cb000000   jne 0xa3b0
0x0000a2e5      4a8d3ce50000.  lea rdi, [r12*8]
0x0000a2ed      4881ffa00f00.  cmp rdi, 0xfa0
0x0000a2f4      0f871e010000   ja 0xa418
0x0000a2fa      4883c73d       add rdi, 0x3d
0x0000a2fe      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000a302      4829fc         sub rsp, rdi
0x0000a305      488d7c240f     lea rdi, [rsp + 0xf]
0x0000a30a      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000a30e      4883c71f       add rdi, 0x1f
0x0000a312      4883e7e0       and rdi, 0xffffffffffffffe0
0x0000a316      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/str-kmp.h:43
0x0000a319      0f8491000000   je 0xa3b0
0x0000a31f      4983fc02       cmp r12, 2                              ; ../coreutils-8.31/lib/str-kmp.h:67
0x0000a323      48c747080100.  mov qword [rdi + 8], 1                  ; ../coreutils-8.31/lib/str-kmp.h:64
0x0000a32b      7644           jbe 0xa371                              ; ../coreutils-8.31/lib/str-kmp.h:67
0x0000a32d      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/str-kmp.h:65
0x0000a32f      41b802000000   mov r8d, 2                              ; ../coreutils-8.31/lib/str-kmp.h:67
0x0000a335      0f1f00         nop dword [rax]
0x0000a338      420fb64406ff   movzx eax, byte [rsi + r8 - 1]          ; ../coreutils-8.31/lib/str-kmp.h:73
0x0000a33e      3a0416         cmp al, byte [rsi + rdx]                ; ../coreutils-8.31/lib/str-kmp.h:80
0x0000a341      751a           jne 0xa35d
0x0000a343      e9b8000000     jmp 0xa400
0x0000a348      0f1f84000000.  nop dword [rax + rax]
0x0000a350      482b14d7       sub rdx, qword [rdi + rdx*8]            ; ../coreutils-8.31/lib/str-kmp.h:106
0x0000a354      380416         cmp byte [rsi + rdx], al                ; ../coreutils-8.31/lib/str-kmp.h:80
0x0000a357      0f84a3000000   je 0xa400
0x0000a35d      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/str-kmp.h:89
0x0000a360      75ee           jne 0xa350
0x0000a362      4e8904c7       mov qword [rdi + r8*8], r8              ; ../coreutils-8.31/lib/str-kmp.h:92
0x0000a366      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/str-kmp.h:93
0x0000a368      4983c001       add r8, 1                               ; ../coreutils-8.31/lib/str-kmp.h:67
0x0000a36c      4d39c4         cmp r12, r8
0x0000a36f      75c7           jne 0xa338
0x0000a371      48c701000000.  mov qword [rcx], 0                      ; ../coreutils-8.31/lib/str-kmp.h:118
0x0000a378      0fb613         movzx edx, byte [rbx]
0x0000a37b      4989d8         mov r8, rbx                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x0000a37e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/str-kmp.h:119
0x0000a380      84d2           test dl, dl                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x0000a382      7418           je 0xa39c
0x0000a384      381406         cmp byte [rsi + rax], dl                ; ../coreutils-8.31/lib/str-kmp.h:124
0x0000a387      7447           je 0xa3d0
0x0000a389      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/str-kmp.h:135
0x0000a38c      7462           je 0xa3f0
0x0000a38e      4c8b0cc7       mov r9, qword [rdi + rax*8]             ; ../coreutils-8.31/lib/str-kmp.h:138
0x0000a392      4c01cb         add rbx, r9
0x0000a395      4c29c8         sub rax, r9                             ; ../coreutils-8.31/lib/str-kmp.h:139
0x0000a398      84d2           test dl, dl                             ; ../coreutils-8.31/lib/str-kmp.h:123
0x0000a39a      75e8           jne 0xa384
0x0000a39c      e89f230000     call sym.freea                          ; ../coreutils-8.31/lib/str-kmp.h:149
0x0000a3a1      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/str-kmp.h:150
0x0000a3a6      eb0a           jmp 0xa3b2
0x0000a3a8      0f1f84000000.  nop dword [rax + rax]
0x0000a3b0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/str-kmp.h:44
0x0000a3b2      488b4de8       mov rcx, qword [rbp - 0x18]
0x0000a3b6      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a3bf      0f8582000000   jne 0xa447
0x0000a3c5      488d65f0       lea rsp, [rbp - 0x10]                   ; string_fortified.h:-57
0x0000a3c9      5b             pop rbx
0x0000a3ca      415c           pop r12                                 ; string_fortified.h:-147
0x0000a3cc      5d             pop rbp
0x0000a3cd      c3             ret
0x0000a3ce      6690           nop
0x0000a3d0      4883c001       add rax, 1
0x0000a3d4      4d8d4801       lea r9, [r8 + 1]
0x0000a3d8      4939c4         cmp r12, rax
0x0000a3db      7458           je 0xa435
0x0000a3dd      410fb65001     movzx edx, byte [r8 + 1]
0x0000a3e2      4d89c8         mov r8, r9
0x0000a3e5      eb99           jmp 0xa380
0x0000a3e7      660f1f840000.  nop word [rax + rax]
0x0000a3f0      410fb65001     movzx edx, byte [r8 + 1]
0x0000a3f5      4883c301       add rbx, 1
0x0000a3f9      4983c001       add r8, 1
0x0000a3fd      eb81           jmp 0xa380
0x0000a3ff      90             nop
0x0000a400      4883c201       add rdx, 1
0x0000a404      4c89c0         mov rax, r8
0x0000a407      4829d0         sub rax, rdx
0x0000a40a      4a8904c7       mov qword [rdi + r8*8], rax
0x0000a40e      e955ffffff     jmp 0xa368
0x0000a413      0f1f440000     nop dword [rax + rax]
0x0000a418      48894dd0       mov qword [rbp - 0x30], rcx
0x0000a41c      488975d8       mov qword [rbp - 0x28], rsi
0x0000a420      e8db220000     call sym.mmalloca
0x0000a425      488b4dd0       mov rcx, qword [rbp - 0x30]
0x0000a429      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/str-kmp.h:-164
0x0000a42c      488b75d8       mov rsi, qword [rbp - 0x28]
0x0000a430      e9e1feffff     jmp 0xa316
0x0000a435      488919         mov qword [rcx], rbx
0x0000a438      e95fffffff     jmp 0xa39c
0x0000a43d      bf01000000     mov edi, 1
0x0000a442      e98cfeffff     jmp 0xa2d3
0x0000a447      e8d47affff     call sym.imp.__stack_chk_fail
0x0000a44c      0f1f4000       nop dword [rax]
;-- knuth_morris_pratt_multibyte:
0x0000a450      55             push rbp
0x0000a451      4889e5         mov rbp, rsp
0x0000a454      4157           push r15
0x0000a456      4156           push r14
0x0000a458      4155           push r13
0x0000a45a      4154           push r12
0x0000a45c      53             push rbx                                ; ../coreutils-8.31/lib/mbsstr.c:-152
0x0000a45d      4889f3         mov rbx, rsi
0x0000a460      4881ec080100.  sub rsp, 0x108
0x0000a467      4889bde8feff.  mov qword [rbp - 0x118], rdi
0x0000a46e      4889f7         mov rdi, rsi
0x0000a471      488995d8feff.  mov qword [rbp - 0x128], rdx
0x0000a478      64488b042528.  mov rax, qword fs:[0x28]
0x0000a481      488945c8       mov qword [rbp - 0x38], rax
0x0000a485      31c0           xor eax, eax
0x0000a487      e8e4220000     call sym.mbslen
0x0000a48c      ba38000000     mov edx, 0x38                           ; '8'
0x0000a491      4889c6         mov rsi, rax
0x0000a494      488985f8feff.  mov qword [rbp - 0x108], rax
0x0000a49b      4889d0         mov rax, rdx
0x0000a49e      48f7e6         mul rsi
0x0000a4a1      0f80100a0000   jo 0xaeb7
0x0000a4a7      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/mbuiter.h:-453
0x0000a4a9      4885c0         test rax, rax
0x0000a4ac      0f881e040000   js 0xa8d0
0x0000a4b2      4885c9         test rcx, rcx
0x0000a4b5      0f8515040000   jne 0xa8d0
0x0000a4bb      488b85f8feff.  mov rax, qword [rbp - 0x108]
0x0000a4c2      488d3cc50000.  lea rdi, [rax*8]
0x0000a4ca      4829c7         sub rdi, rax
0x0000a4cd      48c1e703       shl rdi, 3
0x0000a4d1      4881ffa00f00.  cmp rdi, 0xfa0
0x0000a4d8      0f8736090000   ja 0xae14
0x0000a4de      4883c73d       add rdi, 0x3d
0x0000a4e2      4883e7f0       and rdi, 0xfffffffffffffff0
0x0000a4e6      4829fc         sub rsp, rdi
0x0000a4e9      4c8d64240f     lea r12, [rsp + 0xf]
0x0000a4ee      4983e4f0       and r12, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/mbchar.h:-322
0x0000a4f2      4983c41f       add r12, 0x1f
0x0000a4f6      4983e4e0       and r12, 0xffffffffffffffe0
0x0000a4fa      4d85e4         test r12, r12
0x0000a4fd      0f84cd030000   je 0xa8d0                               ; ../coreutils-8.31/lib/mbchar.h:-319
0x0000a503      488b85f8feff.  mov rax, qword [rbp - 0x108]
0x0000a50a      48899d10ffff.  mov qword [rbp - 0xf0], rbx
0x0000a511      488d9d00ffff.  lea rbx, [rbp - 0x100]
0x0000a518      c68500ffffff.  mov byte [rbp - 0x100], 0
0x0000a51f      48c78504ffff.  mov qword [rbp - 0xfc], 0
0x0000a52a      4d89e7         mov r15, r12
0x0000a52d      c6850cffffff.  mov byte [rbp - 0xf4], 0
0x0000a534      41be01000000   mov r14d, 1
0x0000a53a      4c8d2c40       lea r13, [rax + rax*2]
0x0000a53e      488d4304       lea rax, [rbx + 4]
0x0000a542      49c1e504       shl r13, 4
0x0000a546      488985e0feff.  mov qword [rbp - 0x120], rax
0x0000a54d      4d01e5         add r13, r12
0x0000a550      e9ac000000     jmp 0xa601                              ; ../coreutils-8.31/lib/mbuiter.h:-573
0x0000a555      0f1f00         nop dword [rax]
0x0000a558      488b8d10ffff.  mov rcx, qword [rbp - 0xf0]
0x0000a55f      488d353a6400.  lea rsi, obj.is_basic_table             ; 0x109a0
0x0000a566      0fb611         movzx edx, byte [rcx]
0x0000a569      89d0           mov eax, edx
0x0000a56b      c0e805         shr al, 5
0x0000a56e      83e007         and eax, 7
0x0000a571      8b0486         mov eax, dword [rsi + rax*4]
0x0000a574      0fa3d0         bt eax, edx
0x0000a577      0f837b030000   jae 0xa8f8
0x0000a57d      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x0000a588      0fbe01         movsx eax, byte [rcx]
0x0000a58b      4488b520ffff.  mov byte [rbp - 0xe0], r14b
0x0000a592      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x0000a599      898524ffffff   mov dword [rbp - 0xdc], eax
0x0000a59f      448b8524ffff.  mov r8d, dword [rbp - 0xdc]
0x0000a5a6      4585c0         test r8d, r8d
0x0000a5a9      0f8421010000   je 0xa6d0
0x0000a5af      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/mbsstr.c:-664
0x0000a5b4      488bb510ffff.  mov rsi, qword [rbp - 0xf0]
0x0000a5bb      488d4b28       lea rcx, [rbx + 0x28]
0x0000a5bf      488b9518ffff.  mov rdx, qword [rbp - 0xe8]
0x0000a5c6      4839ce         cmp rsi, rcx
0x0000a5c9      0f8451030000   je 0xa920
0x0000a5cf      498937         mov qword [r15], rsi
0x0000a5d2      84c0           test al, al
0x0000a5d4      49895708       mov qword [r15 + 8], rdx
0x0000a5d8      41884710       mov byte [r15 + 0x10], al               ; ../coreutils-8.31/lib/mbsstr.c:-769
0x0000a5dc      740a           je 0xa5e8
0x0000a5de      8b8524ffffff   mov eax, dword [rbp - 0xdc]
0x0000a5e4      41894714       mov dword [r15 + 0x14], eax
0x0000a5e8      488b8518ffff.  mov rax, qword [rbp - 0xe8]
0x0000a5ef      48018510ffff.  add qword [rbp - 0xf0], rax
0x0000a5f6      4983c730       add r15, 0x30
0x0000a5fa      c6850cffffff.  mov byte [rbp - 0xf4], 0
0x0000a601      80bd00ffffff.  cmp byte [rbp - 0x100], 0
0x0000a608      0f844affffff   je 0xa558
0x0000a60e      e8dd78ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000a613      4c8b8d10ffff.  mov r9, qword [rbp - 0xf0]
0x0000a61a      4889c6         mov rsi, rax
0x0000a61d      4c89cf         mov rdi, r9
0x0000a620      4c898df0feff.  mov qword [rbp - 0x110], r9             ; ../coreutils-8.31/lib/mbsstr.c:-756
0x0000a627      e824eaffff     call sym.strnlen1
0x0000a62c      4c8b8df0feff.  mov r9, qword [rbp - 0x110]
0x0000a633      488d4b04       lea rcx, [rbx + 4]
0x0000a637      488d7b24       lea rdi, [rbx + 0x24]
0x0000a63b      4889c2         mov rdx, rax
0x0000a63e      4c89ce         mov rsi, r9
0x0000a641      e8aaf9ffff     call sym.rpl_mbrtowc
0x0000a646      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a64a      48898518ffff.  mov qword [rbp - 0xe8], rax             ; ../coreutils-8.31/lib/mbsstr.c:-753
0x0000a651      0f84f1020000   je 0xa948
0x0000a657      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000a65b      0f8468070000   je 0xadc9
0x0000a661      4885c0         test rax, rax
0x0000a664      752b           jne 0xa691
0x0000a666      488b8510ffff.  mov rax, qword [rbp - 0xf0]
0x0000a66d      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x0000a678      803800         cmp byte [rax], 0
0x0000a67b      0f8512080000   jne 0xae93
0x0000a681      448b8d24ffff.  mov r9d, dword [rbp - 0xdc]
0x0000a688      4585c9         test r9d, r9d
0x0000a68b      0f8521080000   jne 0xaeb2                              ; ../coreutils-8.31/lib/mbsstr.c:-966
0x0000a691      488d7b04       lea rdi, [rbx + 4]
0x0000a695      4488b520ffff.  mov byte [rbp - 0xe0], r14b
0x0000a69c      e80f7cffff     call sym.imp.mbsinit
0x0000a6a1      85c0           test eax, eax
0x0000a6a3      0f8448070000   je 0xadf1
0x0000a6a9      448b8524ffff.  mov r8d, dword [rbp - 0xdc]
0x0000a6b0      c68500ffffff.  mov byte [rbp - 0x100], 0
0x0000a6b7      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x0000a6be      4585c0         test r8d, r8d
0x0000a6c1      0f85e8feffff   jne 0xa5af
0x0000a6c7      660f1f840000.  nop word [rax + rax]
0x0000a6d0      4883bdf8feff.  cmp qword [rbp - 0x108], 2
0x0000a6d8      49c745080100.  mov qword [r13 + 8], 1
0x0000a6e0      0f8690000000   jbe 0xa776
0x0000a6e6      4d8d742430     lea r14, [r12 + 0x30]
0x0000a6eb      31db           xor ebx, ebx
0x0000a6ed      41bf02000000   mov r15d, 2
0x0000a6f3      0f1f440000     nop dword [rax + rax]
0x0000a6f8      410fb64e10     movzx ecx, byte [r14 + 0x10]
0x0000a6fd      eb1e           jmp 0xa71d
0x0000a6ff      90             nop
0x0000a700      80781000       cmp byte [rax + 0x10], 0
0x0000a704      7426           je 0xa72c
0x0000a706      8b4014         mov eax, dword [rax + 0x14]
0x0000a709      41394614       cmp dword [r14 + 0x14], eax             ; ../coreutils-8.31/lib/mbsstr.c:-955
0x0000a70d      7443           je 0xa752
0x0000a70f      4885db         test rbx, rbx
0x0000a712      0f84b0050000   je 0xacc8
0x0000a718      492b5cdd00     sub rbx, qword [r13 + rbx*8]
0x0000a71d      488d045b       lea rax, [rbx + rbx*2]                  ; ../coreutils-8.31/lib/mbsstr.c:-951
0x0000a721      48c1e004       shl rax, 4
0x0000a725      4c01e0         add rax, r12
0x0000a728      84c9           test cl, cl
0x0000a72a      75d4           jne 0xa700
0x0000a72c      498b5608       mov rdx, qword [r14 + 8]
0x0000a730      483b5008       cmp rdx, qword [rax + 8]
0x0000a734      75d9           jne 0xa70f
0x0000a736      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/mbsstr.c:-955
0x0000a739      498b3e         mov rdi, qword [r14]
0x0000a73c      888df0feffff   mov byte [rbp - 0x110], cl              ; ../coreutils-8.31/lib/mbuiter.h:-980
0x0000a742      e8e978ffff     call sym.imp.memcmp
0x0000a747      85c0           test eax, eax
0x0000a749      0fb68df0feff.  movzx ecx, byte [rbp - 0x110]           ; ../coreutils-8.31/lib/mbuiter.h:-977
0x0000a750      75bd           jne 0xa70f                              ; ../coreutils-8.31/lib/mbchar.h:-798
0x0000a752      4883c301       add rbx, 1
0x0000a756      4c89f8         mov rax, r15
0x0000a759      4829d8         sub rax, rbx
0x0000a75c      4b8944fd00     mov qword [r13 + r15*8], rax
0x0000a761      4983c701       add r15, 1
0x0000a765      4983c630       add r14, 0x30                           ; ../coreutils-8.31/lib/mbuiter.h:-977
0x0000a769      4c39bdf8feff.  cmp qword [rbp - 0x108], r15
0x0000a770      0f8582ffffff   jne 0xa6f8
0x0000a776      488b85d8feff.  mov rax, qword [rbp - 0x128]
0x0000a77d      488d5d80       lea rbx, [rbp - 0x80]
0x0000a781      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x0000a788      48c78544ffff.  mov qword [rbp - 0xbc], 0
0x0000a793      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x0000a79a      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/mbsstr.c:-952
0x0000a79d      c6458000       mov byte [rbp - 0x80], 0
0x0000a7a1      48c745840000.  mov qword [rbp - 0x7c], 0
0x0000a7a9      48c700000000.  mov qword [rax], 0
0x0000a7b0      488b85e8feff.  mov rax, qword [rbp - 0x118]
0x0000a7b7      48899de8feff.  mov qword [rbp - 0x118], rbx
0x0000a7be      4883c304       add rbx, 4
0x0000a7c2      c6458c00       mov byte [rbp - 0x74], 0
0x0000a7c6      48899de0feff.  mov qword [rbp - 0x120], rbx
0x0000a7cd      488d9d40ffff.  lea rbx, [rbp - 0xc0]
0x0000a7d4      48898550ffff.  mov qword [rbp - 0xb0], rax
0x0000a7db      48894590       mov qword [rbp - 0x70], rax
0x0000a7df      31c0           xor eax, eax
0x0000a7e1      0f1f80000000.  nop dword [rax]
0x0000a7e8      84c0           test al, al
0x0000a7ea      0f84dc010000   je 0xa9cc
0x0000a7f0      807da000       cmp byte [rbp - 0x60], 0
0x0000a7f4      0f858c010000   jne 0xa986
0x0000a7fa      4b8d047f       lea rax, [r15 + r15*2]
0x0000a7fe      48c1e004       shl rax, 4
0x0000a802      4c01e0         add rax, r12
0x0000a805      488b5008       mov rdx, qword [rax + 8]
0x0000a809      483b5598       cmp rdx, qword [rbp - 0x68]
0x0000a80d      0f848d030000   je 0xaba0
0x0000a813      4d85ff         test r15, r15
0x0000a816      0f84d4030000   je 0xabf0
0x0000a81c      4f8b74fd00     mov r14, qword [r13 + r15*8]            ; ../coreutils-8.31/lib/mbuiter.h:-957
0x0000a821      4c89f8         mov rax, r15
0x0000a824      4c29f0         sub rax, r14
0x0000a827      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/mbuiter.h:-956
0x0000a82a      488985f0feff.  mov qword [rbp - 0x110], rax
0x0000a831      0fb6458c       movzx eax, byte [rbp - 0x74]
0x0000a835      74b1           je 0xa7e8
0x0000a837      80bd4cffffff.  cmp byte [rbp - 0xb4], 0
0x0000a83e      7428           je 0xa868
0x0000a840      80bd60ffffff.  cmp byte [rbp - 0xa0], 0
0x0000a847      7573           jne 0xa8bc
0x0000a849      488b8558ffff.  mov rax, qword [rbp - 0xa8]
0x0000a850      48018550ffff.  add qword [rbp - 0xb0], rax
0x0000a857      4983ee01       sub r14, 1                              ; ../coreutils-8.31/lib/mbuiter.h:-971
0x0000a85b      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x0000a862      0f8420040000   je 0xac88
0x0000a868      80bd40ffffff.  cmp byte [rbp - 0xc0], 0
0x0000a86f      0f856b020000   jne 0xaae0
0x0000a875      488b8d50ffff.  mov rcx, qword [rbp - 0xb0]
0x0000a87c      488d351d6100.  lea rsi, obj.is_basic_table             ; 0x109a0
0x0000a883      0fb611         movzx edx, byte [rcx]                   ; ../coreutils-8.31/lib/mbsstr.c:-969
0x0000a886      89d0           mov eax, edx
0x0000a888      c0e805         shr al, 5
0x0000a88b      83e007         and eax, 7
0x0000a88e      8b0486         mov eax, dword [rsi + rax*4]
0x0000a891      0fa3d0         bt eax, edx
0x0000a894      0f832e020000   jae 0xaac8
0x0000a89a      48c78558ffff.  mov qword [rbp - 0xa8], 1               ; ../coreutils-8.31/lib/mbsstr.c:-967
0x0000a8a5      0fbe01         movsx eax, byte [rcx]
0x0000a8a8      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0000a8af      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000a8b6      898564ffffff   mov dword [rbp - 0x9c], eax
0x0000a8bc      8bb564ffffff   mov esi, dword [rbp - 0x9c]
0x0000a8c2      85f6           test esi, esi
0x0000a8c4      7583           jne 0xa849                              ; ../coreutils-8.31/lib/mbuiter.h:-966
0x0000a8c6      e81575ffff     call sym.imp.abort
0x0000a8cb      0f1f440000     nop dword [rax + rax]
0x0000a8d0      31c0           xor eax, eax
0x0000a8d2      488b5dc8       mov rbx, qword [rbp - 0x38]
0x0000a8d6      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000a8df      0f85a9050000   jne 0xae8e
0x0000a8e5      488d65d8       lea rsp, [rbp - 0x28]
0x0000a8e9      5b             pop rbx
0x0000a8ea      415c           pop r12
0x0000a8ec      415d           pop r13
0x0000a8ee      415e           pop r14
0x0000a8f0      415f           pop r15
0x0000a8f2      5d             pop rbp
0x0000a8f3      c3             ret
0x0000a8f4      0f1f4000       nop dword [rax]
0x0000a8f8      488bbde0feff.  mov rdi, qword [rbp - 0x120]
0x0000a8ff      e8ac79ffff     call sym.imp.mbsinit
0x0000a904      85c0           test eax, eax
0x0000a906      0f8463050000   je 0xae6f
0x0000a90c      4488b500ffff.  mov byte [rbp - 0x100], r14b
0x0000a913      e9f6fcffff     jmp 0xa60e
0x0000a918      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/mbuiter.h:-960
0x0000a920      498d4f18       lea rcx, [r15 + 0x18]
0x0000a924      4889cf         mov rdi, rcx
0x0000a927      e87477ffff     call sym.imp.memcpy
0x0000a92c      488b9518ffff.  mov rdx, qword [rbp - 0xe8]
0x0000a933      498907         mov qword [r15], rax
0x0000a936      0fb68520ffff.  movzx eax, byte [rbp - 0xe0]
0x0000a93d      e990fcffff     jmp 0xa5d2
0x0000a942      660f1f440000   nop word [rax + rax]
0x0000a948      48c78518ffff.  mov qword [rbp - 0xe8], 1
0x0000a953      c68520ffffff.  mov byte [rbp - 0xe0], 0
0x0000a95a      31c0           xor eax, eax
0x0000a95c      4488b50cffff.  mov byte [rbp - 0xf4], r14b             ; ../coreutils-8.31/lib/mbuiter.h:-935
0x0000a963      e94cfcffff     jmp 0xa5b4
0x0000a968      0f1f84000000.  nop dword [rax + rax]
0x0000a970      48c745980100.  mov qword [rbp - 0x68], 1
0x0000a978      0fbe01         movsx eax, byte [rcx]                   ; ../coreutils-8.31/lib/mbuiter.h:-927
0x0000a97b      c645a001       mov byte [rbp - 0x60], 1
0x0000a97f      c6458c01       mov byte [rbp - 0x74], 1
0x0000a983      8945a4         mov dword [rbp - 0x5c], eax
0x0000a986      8b55a4         mov edx, dword [rbp - 0x5c]
0x0000a989      85d2           test edx, edx
0x0000a98b      0f841f010000   je 0xaab0
0x0000a991      4b8d047f       lea rax, [r15 + r15*2]
0x0000a995      48c1e004       shl rax, 4
0x0000a999      4c01e0         add rax, r12
0x0000a99c      80781000       cmp byte [rax + 0x10], 0                ; ../coreutils-8.31/lib/mbuiter.h:-966
0x0000a9a0      0f845ffeffff   je 0xa805
0x0000a9a6      395014         cmp dword [rax + 0x14], edx
0x0000a9a9      0f8564feffff   jne 0xa813
0x0000a9af      4983c701       add r15, 1
0x0000a9b3      488b4598       mov rax, qword [rbp - 0x68]
0x0000a9b7      48014590       add qword [rbp - 0x70], rax
0x0000a9bb      4c39bdf8feff.  cmp qword [rbp - 0x108], r15
0x0000a9c2      c6458c00       mov byte [rbp - 0x74], 0
0x0000a9c6      0f8480040000   je 0xae4c
0x0000a9cc      807d8000       cmp byte [rbp - 0x80], 0
0x0000a9d0      7536           jne 0xaa08
0x0000a9d2      488b4d90       mov rcx, qword [rbp - 0x70]
0x0000a9d6      488d35c35f00.  lea rsi, obj.is_basic_table             ; 0x109a0
0x0000a9dd      0fb611         movzx edx, byte [rcx]
0x0000a9e0      89d0           mov eax, edx
0x0000a9e2      c0e805         shr al, 5                               ; ../coreutils-8.31/lib/mbuiter.h:-963
0x0000a9e5      83e007         and eax, 7
0x0000a9e8      8b0486         mov eax, dword [rsi + rax*4]
0x0000a9eb      0fa3d0         bt eax, edx                             ; ../coreutils-8.31/lib/mbuiter.h:-952
0x0000a9ee      7280           jb 0xa970
0x0000a9f0      488bbde0feff.  mov rdi, qword [rbp - 0x120]
0x0000a9f7      e8b478ffff     call sym.imp.mbsinit
0x0000a9fc      85c0           test eax, eax
0x0000a9fe      0f846b040000   je 0xae6f
0x0000aa04      c6458001       mov byte [rbp - 0x80], 1
0x0000aa08      e8e374ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000aa0d      4c8b4590       mov r8, qword [rbp - 0x70]
0x0000aa11      4889c6         mov rsi, rax
0x0000aa14      4c89c7         mov rdi, r8
0x0000aa17      4c8985f0feff.  mov qword [rbp - 0x110], r8
0x0000aa1e      e82de6ffff     call sym.strnlen1
0x0000aa23      488bb5e8feff.  mov rsi, qword [rbp - 0x118]            ; ../coreutils-8.31/lib/mbuiter.h:-931
0x0000aa2a      4c8b85f0feff.  mov r8, qword [rbp - 0x110]
0x0000aa31      4889c2         mov rdx, rax
0x0000aa34      488d4e04       lea rcx, [rsi + 4]
0x0000aa38      488d7e24       lea rdi, [rsi + 0x24]
0x0000aa3c      4c89c6         mov rsi, r8
0x0000aa3f      e8acf5ffff     call sym.rpl_mbrtowc
0x0000aa44      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000aa48      48894598       mov qword [rbp - 0x68], rax
0x0000aa4c      0f844e020000   je 0xaca0
0x0000aa52      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000aa56      0f8444030000   je 0xada0
0x0000aa5c      4885c0         test rax, rax
0x0000aa5f      7520           jne 0xaa81                              ; ../coreutils-8.31/lib/mbuiter.h:-956
0x0000aa61      488b4590       mov rax, qword [rbp - 0x70]
0x0000aa65      48c745980100.  mov qword [rbp - 0x68], 1
0x0000aa6d      803800         cmp byte [rax], 0
0x0000aa70      0f851d040000   jne 0xae93
0x0000aa76      8b45a4         mov eax, dword [rbp - 0x5c]
0x0000aa79      85c0           test eax, eax
0x0000aa7b      0f8531040000   jne 0xaeb2
0x0000aa81      488b85e8feff.  mov rax, qword [rbp - 0x118]
0x0000aa88      c645a001       mov byte [rbp - 0x60], 1
0x0000aa8c      488d7804       lea rdi, [rax + 4]
0x0000aa90      e81b78ffff     call sym.imp.mbsinit
0x0000aa95      85c0           test eax, eax
0x0000aa97      0f8423030000   je 0xadc0
0x0000aa9d      8b55a4         mov edx, dword [rbp - 0x5c]
0x0000aaa0      c6458000       mov byte [rbp - 0x80], 0                ; ../coreutils-8.31/lib/mbuiter.h:-948
0x0000aaa4      c6458c01       mov byte [rbp - 0x74], 1
0x0000aaa8      85d2           test edx, edx
0x0000aaaa      0f85e1feffff   jne 0xa991
0x0000aab0      4c89e7         mov rdi, r12
0x0000aab3      e8881c0000     call sym.freea
0x0000aab8      b801000000     mov eax, 1
0x0000aabd      e910feffff     jmp 0xa8d2
0x0000aac2      660f1f440000   nop word [rax + rax]
0x0000aac8      488d7b04       lea rdi, [rbx + 4]
0x0000aacc      e8df77ffff     call sym.imp.mbsinit
0x0000aad1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbuiter.h:-980
0x0000aad3      0f8496030000   je 0xae6f
0x0000aad9      c68540ffffff.  mov byte [rbp - 0xc0], 1
0x0000aae0      e80b74ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000aae5      4c8bbd50ffff.  mov r15, qword [rbp - 0xb0]             ; ../coreutils-8.31/lib/mbchar.h:-798
0x0000aaec      4889c6         mov rsi, rax
0x0000aaef      4c89ff         mov rdi, r15
0x0000aaf2      e859e5ffff     call sym.strnlen1
0x0000aaf7      488d4b04       lea rcx, [rbx + 4]
0x0000aafb      488d7b24       lea rdi, [rbx + 0x24]
0x0000aaff      4889c2         mov rdx, rax
0x0000ab02      4c89fe         mov rsi, r15
0x0000ab05      e8e6f4ffff     call sym.rpl_mbrtowc
0x0000ab0a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ab0e      48898558ffff.  mov qword [rbp - 0xa8], rax             ; ../coreutils-8.31/lib/mbuiter.h:-971
0x0000ab15      7469           je 0xab80
0x0000ab17      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ab1b      0f849f000000   je 0xabc0
0x0000ab21      4885c0         test rax, rax
0x0000ab24      7529           jne 0xab4f
0x0000ab26      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x0000ab2d      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0000ab38      803800         cmp byte [rax], 0
0x0000ab3b      0f8552030000   jne 0xae93
0x0000ab41      8bbd64ffffff   mov edi, dword [rbp - 0x9c]
0x0000ab47      85ff           test edi, edi
0x0000ab49      0f8563030000   jne 0xaeb2
0x0000ab4f      488d7b04       lea rdi, [rbx + 4]
0x0000ab53      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0000ab5a      e85177ffff     call sym.imp.mbsinit
0x0000ab5f      85c0           test eax, eax
0x0000ab61      747d           je 0xabe0
0x0000ab63      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x0000ab6a      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000ab71      e946fdffff     jmp 0xa8bc
0x0000ab76      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ab80      48c78558ffff.  mov qword [rbp - 0xa8], 1               ; ../coreutils-8.31/lib/mbuiter.h:-927
0x0000ab8b      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x0000ab92      e9b2fcffff     jmp 0xa849
0x0000ab97      660f1f840000.  nop word [rax + rax]
0x0000aba0      488b7590       mov rsi, qword [rbp - 0x70]
0x0000aba4      488b38         mov rdi, qword [rax]
0x0000aba7      e88474ffff     call sym.imp.memcmp
0x0000abac      85c0           test eax, eax                           ; ../coreutils-8.31/lib/mbuiter.h:-966
0x0000abae      0f855ffcffff   jne 0xa813
0x0000abb4      e9f6fdffff     jmp 0xa9af
0x0000abb9      0f1f80000000.  nop dword [rax]
0x0000abc0      488bbd50ffff.  mov rdi, qword [rbp - 0xb0]
0x0000abc7      e83473ffff     call sym.imp.strlen
0x0000abcc      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x0000abd3      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000abda      e96afcffff     jmp 0xa849
0x0000abdf      90             nop
0x0000abe0      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000abe7      e9d0fcffff     jmp 0xa8bc
0x0000abec      0f1f4000       nop dword [rax]
0x0000abf0      80bd4cffffff.  cmp byte [rbp - 0xb4], 0
0x0000abf7      0f85bb000000   jne 0xacb8
0x0000abfd      80bd40ffffff.  cmp byte [rbp - 0xc0], 0
0x0000ac04      0f85e6000000   jne 0xacf0
0x0000ac0a      488b8d50ffff.  mov rcx, qword [rbp - 0xb0]
0x0000ac11      488d35885d00.  lea rsi, obj.is_basic_table             ; 0x109a0
0x0000ac18      0fb611         movzx edx, byte [rcx]
0x0000ac1b      89d0           mov eax, edx
0x0000ac1d      c0e805         shr al, 5
0x0000ac20      83e007         and eax, 7
0x0000ac23      8b0486         mov eax, dword [rsi + rax*4]            ; ../coreutils-8.31/lib/mbuiter.h:-939
0x0000ac26      0fa3d0         bt eax, edx
0x0000ac29      0f83a9000000   jae 0xacd8
0x0000ac2f      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0000ac3a      0fbe01         movsx eax, byte [rcx]
0x0000ac3d      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0000ac44      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000ac4b      898564ffffff   mov dword [rbp - 0x9c], eax
0x0000ac51      8b9564ffffff   mov edx, dword [rbp - 0x9c]
0x0000ac57      85d2           test edx, edx
0x0000ac59      0f8467fcffff   je 0xa8c6
0x0000ac5f      488b8558ffff.  mov rax, qword [rbp - 0xa8]
0x0000ac66      c6854cffffff.  mov byte [rbp - 0xb4], 0
0x0000ac6d      48018550ffff.  add qword [rbp - 0xb0], rax
0x0000ac74      c6458c00       mov byte [rbp - 0x74], 0                ; ../coreutils-8.31/lib/mbuiter.h:-949
0x0000ac78      488b4598       mov rax, qword [rbp - 0x68]
0x0000ac7c      48014590       add qword [rbp - 0x70], rax
0x0000ac80      e947fdffff     jmp 0xa9cc
0x0000ac85      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/mbuiter.h:-927
0x0000ac88      0fb6458c       movzx eax, byte [rbp - 0x74]
0x0000ac8c      4c8bbdf0feff.  mov r15, qword [rbp - 0x110]
0x0000ac93      e950fbffff     jmp 0xa7e8
0x0000ac98      0f1f84000000.  nop dword [rax + rax]
0x0000aca0      48c745980100.  mov qword [rbp - 0x68], 1
0x0000aca8      c645a000       mov byte [rbp - 0x60], 0
0x0000acac      c6458c01       mov byte [rbp - 0x74], 1
0x0000acb0      e945fbffff     jmp 0xa7fa                              ; ../coreutils-8.31/lib/mbuiter.h:-949
0x0000acb5      0f1f00         nop dword [rax]
0x0000acb8      80bd60ffffff.  cmp byte [rbp - 0xa0], 0
0x0000acbf      749e           je 0xac5f
0x0000acc1      eb8e           jmp 0xac51
0x0000acc3      0f1f440000     nop dword [rax + rax]
0x0000acc8      4f897cfd00     mov qword [r13 + r15*8], r15
0x0000accd      e98ffaffff     jmp 0xa761
0x0000acd2      660f1f440000   nop word [rax + rax]
0x0000acd8      488d7b04       lea rdi, [rbx + 4]
0x0000acdc      e8cf75ffff     call sym.imp.mbsinit                    ; ../coreutils-8.31/lib/mbuiter.h:-956
0x0000ace1      85c0           test eax, eax
0x0000ace3      0f8486010000   je 0xae6f
0x0000ace9      c68540ffffff.  mov byte [rbp - 0xc0], 1
0x0000acf0      e8fb71ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000acf5      4c8b8550ffff.  mov r8, qword [rbp - 0xb0]              ; ../coreutils-8.31/lib/mbuiter.h:-927
0x0000acfc      4889c6         mov rsi, rax
0x0000acff      4c89c7         mov rdi, r8
0x0000ad02      4c8985f0feff.  mov qword [rbp - 0x110], r8
0x0000ad09      e842e3ffff     call sym.strnlen1
0x0000ad0e      4c8b85f0feff.  mov r8, qword [rbp - 0x110]
0x0000ad15      488d4b04       lea rcx, [rbx + 4]
0x0000ad19      488d7b24       lea rdi, [rbx + 0x24]
0x0000ad1d      4889c2         mov rdx, rax
0x0000ad20      4c89c6         mov rsi, r8                             ; ../coreutils-8.31/lib/mbsstr.c:-964
0x0000ad23      e8c8f2ffff     call sym.rpl_mbrtowc
0x0000ad28      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ad2c      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000ad33      0f84c4000000   je 0xadfd
0x0000ad39      4883f8fe       cmp rax, 0xfffffffffffffffe             ; ../coreutils-8.31/lib/mbsstr.c:-937
0x0000ad3d      0f84ea000000   je 0xae2d
0x0000ad43      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/mbuiter.h:-966
0x0000ad46      7529           jne 0xad71
0x0000ad48      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x0000ad4f      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0000ad5a      803800         cmp byte [rax], 0
0x0000ad5d      0f8530010000   jne 0xae93
0x0000ad63      8b8d64ffffff   mov ecx, dword [rbp - 0x9c]
0x0000ad69      85c9           test ecx, ecx
0x0000ad6b      0f8541010000   jne 0xaeb2
0x0000ad71      488d7b04       lea rdi, [rbx + 4]
0x0000ad75      c68560ffffff.  mov byte [rbp - 0xa0], 1
0x0000ad7c      e82f75ffff     call sym.imp.mbsinit
0x0000ad81      85c0           test eax, eax
0x0000ad83      0f8498000000   je 0xae21
0x0000ad89      c68540ffffff.  mov byte [rbp - 0xc0], 0
0x0000ad90      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000ad97      e9b5feffff     jmp 0xac51
0x0000ad9c      0f1f4000       nop dword [rax]
0x0000ada0      488b7d90       mov rdi, qword [rbp - 0x70]
0x0000ada4      e85771ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/mbsstr.c:-930
0x0000ada9      c645a000       mov byte [rbp - 0x60], 0
0x0000adad      48894598       mov qword [rbp - 0x68], rax
0x0000adb1      c6458c01       mov byte [rbp - 0x74], 1
0x0000adb5      e940faffff     jmp 0xa7fa
0x0000adba      660f1f440000   nop word [rax + rax]
0x0000adc0      c6458c01       mov byte [rbp - 0x74], 1
0x0000adc4      e9bdfbffff     jmp 0xa986
0x0000adc9      488bbd10ffff.  mov rdi, qword [rbp - 0xf0]
0x0000add0      e82b71ffff     call sym.imp.strlen
0x0000add5      c68520ffffff.  mov byte [rbp - 0xe0], 0
0x0000addc      48898518ffff.  mov qword [rbp - 0xe8], rax
0x0000ade3      31c0           xor eax, eax
0x0000ade5      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x0000adec      e9c3f7ffff     jmp 0xa5b4
0x0000adf1      4488b50cffff.  mov byte [rbp - 0xf4], r14b
0x0000adf8      e9a2f7ffff     jmp 0xa59f
0x0000adfd      48c78558ffff.  mov qword [rbp - 0xa8], 1
0x0000ae08      c68560ffffff.  mov byte [rbp - 0xa0], 0                ; ../coreutils-8.31/lib/mbsstr.c:-963
0x0000ae0f      e94bfeffff     jmp 0xac5f
0x0000ae14      e8e7180000     call sym.mmalloca
0x0000ae19      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/mbsstr.c:-913
0x0000ae1c      e9d9f6ffff     jmp 0xa4fa                              ; ../coreutils-8.31/lib/mbsstr.c:-914
0x0000ae21      c6854cffffff.  mov byte [rbp - 0xb4], 1
0x0000ae28      e924feffff     jmp 0xac51
0x0000ae2d      488bbd50ffff.  mov rdi, qword [rbp - 0xb0]
0x0000ae34      e8c770ffff     call sym.imp.strlen
0x0000ae39      c68560ffffff.  mov byte [rbp - 0xa0], 0
0x0000ae40      48898558ffff.  mov qword [rbp - 0xa8], rax
0x0000ae47      e913feffff     jmp 0xac5f
0x0000ae4c      488b8550ffff.  mov rax, qword [rbp - 0xb0]
0x0000ae53      488b9dd8feff.  mov rbx, qword [rbp - 0x128]
0x0000ae5a      4c89e7         mov rdi, r12
0x0000ae5d      488903         mov qword [rbx], rax
0x0000ae60      e8db180000     call sym.freea
0x0000ae65      b801000000     mov eax, 1
0x0000ae6a      e963faffff     jmp 0xa8d2                              ; ../coreutils-8.31/lib/mbsstr.c:-937
0x0000ae6f      488d0d4a5b00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x109c0 ; "mbuiter_multi_next"
0x0000ae76      488d35db5100.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000ae7d      488d3d065200.  lea rdi, str.mbsinit___iter__state      ; 0x1008a ; "mbsinit (&iter->state)"
0x0000ae84      ba96000000     mov edx, 0x96
0x0000ae89      e85271ffff     call sym.imp.__assert_fail
0x0000ae8e      e88d70ffff     call sym.imp.__stack_chk_fail
0x0000ae93      488d0d265b00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x109c0 ; "mbuiter_multi_next"
0x0000ae9a      488d35b75100.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000aea1      488d3df95100.  lea rdi, str.iter__cur.ptr_______0      ; 0x100a1 ; "*iter->cur.ptr == '\0'"
0x0000aea8      bab2000000     mov edx, 0xb2
0x0000aead      e82e71ffff     call sym.imp.__assert_fail
0x0000aeb2      e89f74ffff     call sym.mbuiter_multi_next.part.0_1
0x0000aeb7      b901000000     mov ecx, 1
0x0000aebc      e9e8f5ffff     jmp 0xa4a9                              ; ../coreutils-8.31/lib/mbchar.h:-1204
0x0000aec1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/mbuiter.h:-1261
0x0000aec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- mbsstr:
0x0000aed0      4157           push r15
0x0000aed2      4156           push r14
0x0000aed4      4155           push r13
0x0000aed6      4154           push r12
0x0000aed8      4989fc         mov r12, rdi
0x0000aedb      55             push rbp
0x0000aedc      53             push rbx
0x0000aedd      4889f3         mov rbx, rsi
0x0000aee0      4881ec980100.  sub rsp, 0x198
0x0000aee7      64488b042528.  mov rax, qword fs:[0x28]
0x0000aef0      488984248801.  mov qword [rsp + 0x188], rax
0x0000aef8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/mbuiter.h:-1389
0x0000aefa      4889742408     mov qword [rsp + 8], rsi
0x0000aeff      e8ec6fffff     call sym.imp.__ctype_get_mb_cur_max
0x0000af04      4883f801       cmp rax, 1
0x0000af08      0f87e2000000   ja 0xaff0
0x0000af0e      488b442408     mov rax, qword [rsp + 8]
0x0000af13      440fb638       movzx r15d, byte [rax]
0x0000af17      4c89e0         mov rax, r12
0x0000af1a      4584ff         test r15b, r15b                         ; ../coreutils-8.31/lib/mbsstr.c:-1149
0x0000af1d      0f8433010000   je 0xb056
0x0000af23      410fb63424     movzx esi, byte [r12]
0x0000af28      4084f6         test sil, sil
0x0000af2b      0f849f070000   je 0xb6d0
0x0000af31      488d5c2438     lea rbx, [rsp + 0x38]
0x0000af36      488b6c2408     mov rbp, qword [rsp + 8]
0x0000af3b      4531ed         xor r13d, r13d
0x0000af3e      31d2           xor edx, edx
0x0000af40      4531c0         xor r8d, r8d
0x0000af43      b801000000     mov eax, 1
0x0000af48      48895c2410     mov qword [rsp + 0x10], rbx
0x0000af4d      0f1f00         nop dword [rax]
0x0000af50      4983c501       add r13, 1
0x0000af54      4438fe         cmp sil, r15b
0x0000af57      488d5a01       lea rbx, [rdx + 1]
0x0000af5b      4d8d742401     lea r14, [r12 + 1]
0x0000af60      0f84da080000   je 0xb840
0x0000af66      41807c240100   cmp byte [r12 + 1], 0
0x0000af6c      0f845e070000   je 0xb6d0
0x0000af72      4983fd09       cmp r13, 9
0x0000af76      0f97c2         seta dl
0x0000af79      20c2           and dl, al
0x0000af7b      0f8401010000   je 0xb082
0x0000af81      4b8d44ad00     lea rax, [r13 + r13*4]                  ; ../coreutils-8.31/lib/mbuiter.h:-1397
0x0000af86      4839d8         cmp rax, rbx
0x0000af89      0f87f1000000   ja 0xb080
0x0000af8f      4885ed         test rbp, rbp
0x0000af92      881424         mov byte [rsp], dl
0x0000af95      7422           je 0xafb9
0x0000af97      4889de         mov rsi, rbx
0x0000af9a      4889ef         mov rdi, rbp
0x0000af9d      4c29c6         sub rsi, r8
0x0000afa0      e85b70ffff     call sym.imp.strnlen                    ; ../coreutils-8.31/lib/mbsstr.c:-1438
0x0000afa5      4801c5         add rbp, rax
0x0000afa8      4989d8         mov r8, rbx
0x0000afab      0fb61424       movzx edx, byte [rsp]
0x0000afaf      807d0000       cmp byte [rbp], 0
0x0000afb3      0f85c7000000   jne 0xb080
0x0000afb9      488b6c2408     mov rbp, qword [rsp + 8]
0x0000afbe      4c890424       mov qword [rsp], r8
0x0000afc2      4889ef         mov rdi, rbp
0x0000afc5      e8366fffff     call sym.imp.strlen
0x0000afca      488b4c2410     mov rcx, qword [rsp + 0x10]
0x0000afcf      4889c2         mov rdx, rax
0x0000afd2      4889ee         mov rsi, rbp
0x0000afd5      4c89f7         mov rdi, r14
0x0000afd8      e8c3f2ffff     call sym.knuth_morris_pratt
0x0000afdd      84c0           test al, al                             ; ../coreutils-8.31/lib/mbsstr.c:-1287
0x0000afdf      4c8b0424       mov r8, qword [rsp]
0x0000afe3      0f85e60e0000   jne 0xbecf
0x0000afe9      31ed           xor ebp, ebp
0x0000afeb      e992000000     jmp 0xb082
0x0000aff0      4889d8         mov rax, rbx
0x0000aff3      4c8d2da65900.  lea r13, obj.is_basic_table             ; 0x109a0
0x0000affa      48895c2450     mov qword [rsp + 0x50], rbx             ; ../coreutils-8.31/lib/mbuiter.h:-1529
0x0000afff      0fbe10         movsx edx, byte [rax]
0x0000b002      488d5c2440     lea rbx, [rsp + 0x40]                   ; ../coreutils-8.31/lib/mbchar.h:-1350
0x0000b007      c644244000     mov byte [rsp + 0x40], 0
0x0000b00c      48c744244400.  mov qword [rsp + 0x44], 0
0x0000b015      c644244c00     mov byte [rsp + 0x4c], 0
0x0000b01a      488d6b04       lea rbp, [rbx + 4]
0x0000b01e      89d0           mov eax, edx
0x0000b020      c0e805         shr al, 5
0x0000b023      83e007         and eax, 7
0x0000b026      418b448500     mov eax, dword [r13 + rax*4]
0x0000b02b      0fa3d0         bt eax, edx
0x0000b02e      0f839c0c0000   jae 0xbcd0
0x0000b034      48c744245801.  mov qword [rsp + 0x58], 1
0x0000b03d      89542464       mov dword [rsp + 0x64], edx
0x0000b041      c644246001     mov byte [rsp + 0x60], 1                ; ../coreutils-8.31/lib/mbsstr.c:-1572
0x0000b046      c644244c01     mov byte [rsp + 0x4c], 1
0x0000b04b      8b442464       mov eax, dword [rsp + 0x64]             ; ../coreutils-8.31/lib/mbsstr.c:-1570
0x0000b04f      85c0           test eax, eax
0x0000b051      7558           jne 0xb0ab
0x0000b053      4c89e0         mov rax, r12
0x0000b056      488b9c248801.  mov rbx, qword [rsp + 0x188]
0x0000b05e      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000b067      0f85430f0000   jne 0xbfb0
0x0000b06d      4881c4980100.  add rsp, 0x198
0x0000b074      5b             pop rbx
0x0000b075      5d             pop rbp
0x0000b076      415c           pop r12
0x0000b078      415d           pop r13
0x0000b07a      415e           pop r14
0x0000b07c      415f           pop r15
0x0000b07e      c3             ret
0x0000b07f      90             nop
0x0000b080      89d0           mov eax, edx
0x0000b082      410fb636       movzx esi, byte [r14]
0x0000b086      4d89f4         mov r12, r14
0x0000b089      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/mbsstr.c:-1536
0x0000b08c      e9bffeffff     jmp 0xaf50
0x0000b091      0f1f80000000.  nop dword [rax]                         ; string_fortified.h:-1732
0x0000b098      48c744245801.  mov qword [rsp + 0x58], 1
0x0000b0a1      c644246000     mov byte [rsp + 0x60], 0                ; ../coreutils-8.31/lib/mbsstr.c:-1536
0x0000b0a6      c644244c01     mov byte [rsp + 0x4c], 1
0x0000b0ab      488b442408     mov rax, qword [rsp + 8]
0x0000b0b0      c68424c00000.  mov byte [rsp + 0xc0], 0
0x0000b0b8      4531f6         xor r14d, r14d
0x0000b0bb      31db           xor ebx, ebx
0x0000b0bd      80bc24c00000.  cmp byte [rsp + 0xc0], 0
0x0000b0c5      c68424800000.  mov byte [rsp + 0x80], 0
0x0000b0cd      48c784248400.  mov qword [rsp + 0x84], 0
0x0000b0d9      c684248c0000.  mov byte [rsp + 0x8c], 0
0x0000b0e1      488dac244001.  lea rbp, [rsp + 0x140]
0x0000b0e9      488984249000.  mov qword [rsp + 0x90], rax
0x0000b0f1      488d442438     lea rax, [rsp + 0x38]
0x0000b0f6      4c89a424d000.  mov qword [rsp + 0xd0], r12
0x0000b0fe      48c78424c400.  mov qword [rsp + 0xc4], 0
0x0000b10a      c68424cc0000.  mov byte [rsp + 0xcc], 0
0x0000b112      4c8dbc240001.  lea r15, [rsp + 0x100]
0x0000b11a      48c744242000.  mov qword [rsp + 0x20], 0               ; ../coreutils-8.31/lib/mbuiter.h:-1659
0x0000b123      c644241001     mov byte [rsp + 0x10], 1
0x0000b128      4889442428     mov qword [rsp + 0x28], rax
0x0000b12d      0f8510030000   jne 0xb443                              ; ../coreutils-8.31/lib/mbuiter.h:-1657
0x0000b133      0f1f440000     nop dword [rax + rax]
0x0000b138      488b8c24d000.  mov rcx, qword [rsp + 0xd0]
0x0000b140      0fb611         movzx edx, byte [rcx]
0x0000b143      89d0           mov eax, edx
0x0000b145      c0e805         shr al, 5
0x0000b148      83e007         and eax, 7
0x0000b14b      418b448500     mov eax, dword [r13 + rax*4]
0x0000b150      0fa3d0         bt eax, edx
0x0000b153      0f8357070000   jae 0xb8b0
0x0000b159      48c78424d800.  mov qword [rsp + 0xd8], 1
0x0000b165      0fbe01         movsx eax, byte [rcx]
0x0000b168      c68424e00000.  mov byte [rsp + 0xe0], 1
0x0000b170      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0000b178      898424e40000.  mov dword [rsp + 0xe4], eax
0x0000b17f      8b8424e40000.  mov eax, dword [rsp + 0xe4]
0x0000b186      85c0           test eax, eax
0x0000b188      0f8442050000   je 0xb6d0
0x0000b18e      4983fe09       cmp r14, 9
0x0000b192      0f97c0         seta al
0x0000b195      22442410       and al, byte [rsp + 0x10]
0x0000b199      0f84080e0000   je 0xbfa7
0x0000b19f      4b8d14b6       lea rdx, [r14 + r14*4]
0x0000b1a3      4839d3         cmp rbx, rdx
0x0000b1a6      0f8334070000   jae 0xb8e0
0x0000b1ac      4883c301       add rbx, 1
0x0000b1b0      88442410       mov byte [rsp + 0x10], al
0x0000b1b4      807c246000     cmp byte [rsp + 0x60], 0
0x0000b1b9      0f8472050000   je 0xb731
0x0000b1bf      8b442464       mov eax, dword [rsp + 0x64]
0x0000b1c3      398424e40000.  cmp dword [rsp + 0xe4], eax
0x0000b1ca      0f8549020000   jne 0xb419
0x0000b1d0      660f6f8424c0.  movdqa xmm0, xmmword [rsp + 0xc0]
0x0000b1d9      488d4d04       lea rcx, [rbp + 4]
0x0000b1dd      c68424400100.  mov byte [rsp + 0x140], 0
0x0000b1e5      48c745040000.  mov qword [rbp + 4], 0
0x0000b1ed      0f2984240001.  movaps xmmword [rsp + 0x100], xmm0
0x0000b1f5      c684244c0100.  mov byte [rsp + 0x14c], 0
0x0000b1fd      c684240c0100.  mov byte [rsp + 0x10c], 0
0x0000b205      660f6f8424d0.  movdqa xmm0, xmmword [rsp + 0xd0]
0x0000b20e      0f2984241001.  movaps xmmword [rsp + 0x110], xmm0
0x0000b216      488b84241801.  mov rax, qword [rsp + 0x118]
0x0000b21e      480184241001.  add qword [rsp + 0x110], rax
0x0000b226      488b442408     mov rax, qword [rsp + 8]
0x0000b22b      660f6f8424e0.  movdqa xmm0, xmmword [rsp + 0xe0]
0x0000b234      0fbe10         movsx edx, byte [rax]
0x0000b237      488984245001.  mov qword [rsp + 0x150], rax
0x0000b23f      0f2984242001.  movaps xmmword [rsp + 0x120], xmm0
0x0000b247      89d0           mov eax, edx
0x0000b249      c0e805         shr al, 5
0x0000b24c      660f6f8424f0.  movdqa xmm0, xmmword [rsp + 0xf0]
0x0000b255      83e007         and eax, 7
0x0000b258      418b448500     mov eax, dword [r13 + rax*4]
0x0000b25d      0f2984243001.  movaps xmmword [rsp + 0x130], xmm0
0x0000b265      0fa3d0         bt eax, edx
0x0000b268      0f838a090000   jae 0xbbf8
0x0000b26e      48c784245801.  mov qword [rsp + 0x158], 1
0x0000b27a      899424640100.  mov dword [rsp + 0x164], edx
0x0000b281      c68424600100.  mov byte [rsp + 0x160], 1
0x0000b289      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b291      8bb424640100.  mov esi, dword [rsp + 0x164]
0x0000b298      85f6           test esi, esi
0x0000b29a      0f84340d0000   je 0xbfd4
0x0000b2a0      488b84245801.  mov rax, qword [rsp + 0x158]
0x0000b2a8      c684244c0100.  mov byte [rsp + 0x14c], 0
0x0000b2b0      4883c301       add rbx, 1
0x0000b2b4      480184245001.  add qword [rsp + 0x150], rax
0x0000b2bc      e9c2000000     jmp 0xb383
0x0000b2c1      0f1f80000000.  nop dword [rax]
0x0000b2c8      80bc24000100.  cmp byte [rsp + 0x100], 0
0x0000b2d0      0f853b030000   jne 0xb611
0x0000b2d6      488b8c241001.  mov rcx, qword [rsp + 0x110]
0x0000b2de      0fb611         movzx edx, byte [rcx]
0x0000b2e1      89d0           mov eax, edx
0x0000b2e3      c0e805         shr al, 5
0x0000b2e6      83e007         and eax, 7
0x0000b2e9      418b448500     mov eax, dword [r13 + rax*4]
0x0000b2ee      0fa3d0         bt eax, edx
0x0000b2f1      0f8301030000   jae 0xb5f8
0x0000b2f7      48c784241801.  mov qword [rsp + 0x118], 1
0x0000b303      0fbe01         movsx eax, byte [rcx]
0x0000b306      c68424200100.  mov byte [rsp + 0x120], 1
0x0000b30e      c684240c0100.  mov byte [rsp + 0x10c], 1
0x0000b316      898424240100.  mov dword [rsp + 0x124], eax
0x0000b31d      8b8424240100.  mov eax, dword [rsp + 0x124]
0x0000b324      85c0           test eax, eax
0x0000b326      0f84a4030000   je 0xb6d0
0x0000b32c      80bc24600100.  cmp byte [rsp + 0x160], 0
0x0000b334      0f84c9000000   je 0xb403
0x0000b33a      398424640100.  cmp dword [rsp + 0x164], eax
0x0000b341      0f95c0         setne al
0x0000b344      84c0           test al, al
0x0000b346      488d5301       lea rdx, [rbx + 1]
0x0000b34a      0f85c9000000   jne 0xb419
0x0000b350      488b84241801.  mov rax, qword [rsp + 0x118]
0x0000b358      480184241001.  add qword [rsp + 0x110], rax
0x0000b360      4889d3         mov rbx, rdx
0x0000b363      488b84245801.  mov rax, qword [rsp + 0x158]
0x0000b36b      480184245001.  add qword [rsp + 0x150], rax
0x0000b373      c684240c0100.  mov byte [rsp + 0x10c], 0
0x0000b37b      c684244c0100.  mov byte [rsp + 0x14c], 0
0x0000b383      80bc24400100.  cmp byte [rsp + 0x140], 0
0x0000b38b      0f8598010000   jne 0xb529
0x0000b391      488b8c245001.  mov rcx, qword [rsp + 0x150]
0x0000b399      0fb611         movzx edx, byte [rcx]
0x0000b39c      89d0           mov eax, edx
0x0000b39e      c0e805         shr al, 5
0x0000b3a1      83e007         and eax, 7
0x0000b3a4      418b448500     mov eax, dword [r13 + rax*4]
0x0000b3a9      0fa3d0         bt eax, edx
0x0000b3ac      0f835e010000   jae 0xb510
0x0000b3b2      48c784245801.  mov qword [rsp + 0x158], 1
0x0000b3be      0fbe01         movsx eax, byte [rcx]
0x0000b3c1      c68424600100.  mov byte [rsp + 0x160], 1
0x0000b3c9      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b3d1      898424640100.  mov dword [rsp + 0x164], eax
0x0000b3d8      8b9424640100.  mov edx, dword [rsp + 0x164]
0x0000b3df      85d2           test edx, edx
0x0000b3e1      0f8401020000   je 0xb5e8
0x0000b3e7      80bc240c0100.  cmp byte [rsp + 0x10c], 0
0x0000b3ef      0f84d3feffff   je 0xb2c8
0x0000b3f5      80bc24200100.  cmp byte [rsp + 0x120], 0
0x0000b3fd      0f851affffff   jne 0xb31d
0x0000b403      488b94241801.  mov rdx, qword [rsp + 0x118]
0x0000b40b      483b94245801.  cmp rdx, qword [rsp + 0x158]
0x0000b413      0f84c7020000   je 0xb6e0
0x0000b419      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x0000b421      48018c24d000.  add qword [rsp + 0xd0], rcx
0x0000b429      4983c601       add r14, 1
0x0000b42d      80bc24c00000.  cmp byte [rsp + 0xc0], 0
0x0000b435      c68424cc0000.  mov byte [rsp + 0xcc], 0
0x0000b43d      0f84f5fcffff   je 0xb138
0x0000b443      488d8424c000.  lea rax, [rsp + 0xc0]
0x0000b44b      48890424       mov qword [rsp], rax
0x0000b44f      e89c6affff     call sym.imp.__ctype_get_mb_cur_max
0x0000b454      4c8b8424d000.  mov r8, qword [rsp + 0xd0]
0x0000b45c      4889c6         mov rsi, rax
0x0000b45f      4c89c7         mov rdi, r8
0x0000b462      4c89442418     mov qword [rsp + 0x18], r8
0x0000b467      e8e4dbffff     call sym.strnlen1
0x0000b46c      488b3424       mov rsi, qword [rsp]
0x0000b470      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000b475      4889c2         mov rdx, rax
0x0000b478      488d4e04       lea rcx, [rsi + 4]
0x0000b47c      488d7e24       lea rdi, [rsi + 0x24]
0x0000b480      4c89c6         mov rsi, r8
0x0000b483      e868ebffff     call sym.rpl_mbrtowc
0x0000b488      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b48c      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000b494      0f8466020000   je 0xb700
0x0000b49a      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000b49e      0f8424070000   je 0xbbc8
0x0000b4a4      4885c0         test rax, rax
0x0000b4a7      752c           jne 0xb4d5
0x0000b4a9      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x0000b4b1      48c78424d800.  mov qword [rsp + 0xd8], 1
0x0000b4bd      803800         cmp byte [rax], 0
0x0000b4c0      0f85ef0a0000   jne 0xbfb5
0x0000b4c6      8b8424e40000.  mov eax, dword [rsp + 0xe4]
0x0000b4cd      85c0           test eax, eax
0x0000b4cf      0f85bd070000   jne 0xbc92
0x0000b4d5      488b3c24       mov rdi, qword [rsp]
0x0000b4d9      c68424e00000.  mov byte [rsp + 0xe0], 1
0x0000b4e1      4883c704       add rdi, 4
0x0000b4e5      e8c66dffff     call sym.imp.mbsinit
0x0000b4ea      85c0           test eax, eax
0x0000b4ec      0f840e060000   je 0xbb00
0x0000b4f2      c68424c00000.  mov byte [rsp + 0xc0], 0
0x0000b4fa      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0000b502      e978fcffff     jmp 0xb17f
0x0000b507      660f1f840000.  nop word [rax + rax]
0x0000b510      488d7d04       lea rdi, [rbp + 4]
0x0000b514      e8976dffff     call sym.imp.mbsinit
0x0000b519      85c0           test eax, eax
0x0000b51b      0f84670a0000   je 0xbf88
0x0000b521      c68424400100.  mov byte [rsp + 0x140], 1
0x0000b529      e8c269ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000b52e      4c8b84245001.  mov r8, qword [rsp + 0x150]
0x0000b536      4889c6         mov rsi, rax
0x0000b539      4c89c7         mov rdi, r8
0x0000b53c      4c890424       mov qword [rsp], r8
0x0000b540      e80bdbffff     call sym.strnlen1
0x0000b545      4c8b0424       mov r8, qword [rsp]
0x0000b549      488d4d04       lea rcx, [rbp + 4]
0x0000b54d      488d7d24       lea rdi, [rbp + 0x24]
0x0000b551      4889c2         mov rdx, rax
0x0000b554      4c89c6         mov rsi, r8
0x0000b557      e894eaffff     call sym.rpl_mbrtowc
0x0000b55c      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b560      488984245801.  mov qword [rsp + 0x158], rax
0x0000b568      0f8402020000   je 0xb770
0x0000b56e      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000b572      0f8448020000   je 0xb7c0
0x0000b578      4885c0         test rax, rax
0x0000b57b      752c           jne 0xb5a9
0x0000b57d      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000b585      48c784245801.  mov qword [rsp + 0x158], 1
0x0000b591      803800         cmp byte [rax], 0
0x0000b594      0f851b0a0000   jne 0xbfb5
0x0000b59a      8b8c24640100.  mov ecx, dword [rsp + 0x164]
0x0000b5a1      85c9           test ecx, ecx
0x0000b5a3      0f85e9060000   jne 0xbc92
0x0000b5a9      488d7d04       lea rdi, [rbp + 4]
0x0000b5ad      c68424600100.  mov byte [rsp + 0x160], 1
0x0000b5b5      e8f66cffff     call sym.imp.mbsinit
0x0000b5ba      85c0           test eax, eax
0x0000b5bc      0f842e020000   je 0xb7f0
0x0000b5c2      8b9424640100.  mov edx, dword [rsp + 0x164]
0x0000b5c9      c68424400100.  mov byte [rsp + 0x140], 0
0x0000b5d1      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b5d9      85d2           test edx, edx
0x0000b5db      0f8506feffff   jne 0xb3e7
0x0000b5e1      0f1f80000000.  nop dword [rax]
0x0000b5e8      488b8424d000.  mov rax, qword [rsp + 0xd0]
0x0000b5f0      e961faffff     jmp 0xb056
0x0000b5f5      0f1f00         nop dword [rax]
0x0000b5f8      498d7f04       lea rdi, [r15 + 4]
0x0000b5fc      e8af6cffff     call sym.imp.mbsinit
0x0000b601      85c0           test eax, eax
0x0000b603      0f847f090000   je 0xbf88
0x0000b609      c68424000100.  mov byte [rsp + 0x100], 1
0x0000b611      e8da68ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000b616      4c8b84241001.  mov r8, qword [rsp + 0x110]
0x0000b61e      4889c6         mov rsi, rax
0x0000b621      4c89c7         mov rdi, r8
0x0000b624      4c890424       mov qword [rsp], r8
0x0000b628      e823daffff     call sym.strnlen1
0x0000b62d      4c8b0424       mov r8, qword [rsp]
0x0000b631      498d4f04       lea rcx, [r15 + 4]
0x0000b635      498d7f24       lea rdi, [r15 + 0x24]
0x0000b639      4889c2         mov rdx, rax
0x0000b63c      4c89c6         mov rsi, r8
0x0000b63f      e8ace9ffff     call sym.rpl_mbrtowc
0x0000b644      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000b648      488984241801.  mov qword [rsp + 0x118], rax
0x0000b650      0f8442010000   je 0xb798
0x0000b656      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000b65a      0f84a0010000   je 0xb800
0x0000b660      4885c0         test rax, rax
0x0000b663      752c           jne 0xb691
0x0000b665      488b84241001.  mov rax, qword [rsp + 0x110]
0x0000b66d      48c784241801.  mov qword [rsp + 0x118], 1
0x0000b679      803800         cmp byte [rax], 0
0x0000b67c      0f8533090000   jne 0xbfb5
0x0000b682      8b8424240100.  mov eax, dword [rsp + 0x124]
0x0000b689      85c0           test eax, eax
0x0000b68b      0f8501060000   jne 0xbc92
0x0000b691      498d7f04       lea rdi, [r15 + 4]
0x0000b695      c68424200100.  mov byte [rsp + 0x120], 1
0x0000b69d      e80e6cffff     call sym.imp.mbsinit
0x0000b6a2      85c0           test eax, eax
0x0000b6a4      0f8486010000   je 0xb830
0x0000b6aa      8b8424240100.  mov eax, dword [rsp + 0x124]
0x0000b6b1      c68424000100.  mov byte [rsp + 0x100], 0
0x0000b6b9      c684240c0100.  mov byte [rsp + 0x10c], 1
0x0000b6c1      85c0           test eax, eax
0x0000b6c3      0f8563fcffff   jne 0xb32c
0x0000b6c9      0f1f80000000.  nop dword [rax]
0x0000b6d0      31c0           xor eax, eax
0x0000b6d2      e97ff9ffff     jmp 0xb056
0x0000b6d7      660f1f840000.  nop word [rax + rax]
0x0000b6e0      488bb4245001.  mov rsi, qword [rsp + 0x150]
0x0000b6e8      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000b6f0      e83b69ffff     call sym.imp.memcmp
0x0000b6f5      85c0           test eax, eax
0x0000b6f7      0f95c0         setne al
0x0000b6fa      e945fcffff     jmp 0xb344
0x0000b6ff      90             nop
0x0000b700      48c78424d800.  mov qword [rsp + 0xd8], 1
0x0000b70c      c68424e00000.  mov byte [rsp + 0xe0], 0
0x0000b714      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0000b71c      4983fe09       cmp r14, 9
0x0000b720      0f97c0         seta al
0x0000b723      22442410       and al, byte [rsp + 0x10]
0x0000b727      0f853b080000   jne 0xbf68
0x0000b72d      4883c301       add rbx, 1
0x0000b731      488b8c24d800.  mov rcx, qword [rsp + 0xd8]
0x0000b739      483b4c2458     cmp rcx, qword [rsp + 0x58]
0x0000b73e      0f85ddfcffff   jne 0xb421
0x0000b744      488b742450     mov rsi, qword [rsp + 0x50]
0x0000b749      488bbc24d000.  mov rdi, qword [rsp + 0xd0]
0x0000b751      4889ca         mov rdx, rcx
0x0000b754      48890c24       mov qword [rsp], rcx
0x0000b758      e8d368ffff     call sym.imp.memcmp
0x0000b75d      85c0           test eax, eax
0x0000b75f      488b0c24       mov rcx, qword [rsp]
0x0000b763      0f85b8fcffff   jne 0xb421
0x0000b769      e962faffff     jmp 0xb1d0
0x0000b76e      6690           nop
0x0000b770      48c784245801.  mov qword [rsp + 0x158], 1
0x0000b77c      c68424600100.  mov byte [rsp + 0x160], 0
0x0000b784      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b78c      e956fcffff     jmp 0xb3e7
0x0000b791      0f1f80000000.  nop dword [rax]
0x0000b798      48c784241801.  mov qword [rsp + 0x118], 1
0x0000b7a4      c68424200100.  mov byte [rsp + 0x120], 0
0x0000b7ac      c684240c0100.  mov byte [rsp + 0x10c], 1
0x0000b7b4      e94afcffff     jmp 0xb403
0x0000b7b9      0f1f80000000.  nop dword [rax]
0x0000b7c0      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x0000b7c8      e83367ffff     call sym.imp.strlen
0x0000b7cd      c68424600100.  mov byte [rsp + 0x160], 0
0x0000b7d5      488984245801.  mov qword [rsp + 0x158], rax
0x0000b7dd      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b7e5      e9fdfbffff     jmp 0xb3e7
0x0000b7ea      660f1f440000   nop word [rax + rax]
0x0000b7f0      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000b7f8      e9dbfbffff     jmp 0xb3d8
0x0000b7fd      0f1f00         nop dword [rax]
0x0000b800      488bbc241001.  mov rdi, qword [rsp + 0x110]
0x0000b808      e8f366ffff     call sym.imp.strlen
0x0000b80d      c68424200100.  mov byte [rsp + 0x120], 0
0x0000b815      488984241801.  mov qword [rsp + 0x118], rax
0x0000b81d      c684240c0100.  mov byte [rsp + 0x10c], 1
0x0000b825      e9d9fbffff     jmp 0xb403
0x0000b82a      660f1f440000   nop word [rax + rax]
0x0000b830      c684240c0100.  mov byte [rsp + 0x10c], 1
0x0000b838      e9e0faffff     jmp 0xb31d
0x0000b83d      0f1f00         nop dword [rax]
0x0000b840      488b4c2408     mov rcx, qword [rsp + 8]
0x0000b845      0fb67101       movzx esi, byte [rcx + 1]
0x0000b849      4084f6         test sil, sil
0x0000b84c      0f8401f8ffff   je 0xb053
0x0000b852      410fb63e       movzx edi, byte [r14]
0x0000b856      4084ff         test dil, dil
0x0000b859      0f8471feffff   je 0xb6d0
0x0000b85f      4038fe         cmp sil, dil
0x0000b862      488d5a02       lea rbx, [rdx + 2]
0x0000b866      0f8506f7ffff   jne 0xaf72
0x0000b86c      48f7da         neg rdx
0x0000b86f      4c8d0c11       lea r9, [rcx + rdx]
0x0000b873      4c01e2         add rdx, r12
0x0000b876      eb22           jmp 0xb89a
0x0000b878      0f1f84000000.  nop dword [rax + rax]
0x0000b880      0fb63c1a       movzx edi, byte [rdx + rbx]
0x0000b884      4084ff         test dil, dil
0x0000b887      0f8443feffff   je 0xb6d0
0x0000b88d      4883c301       add rbx, 1
0x0000b891      4038fe         cmp sil, dil
0x0000b894      0f85d8f6ffff   jne 0xaf72
0x0000b89a      410fb63419     movzx esi, byte [r9 + rbx]
0x0000b89f      4084f6         test sil, sil
0x0000b8a2      75dc           jne 0xb880
0x0000b8a4      e9aaf7ffff     jmp 0xb053
0x0000b8a9      0f1f80000000.  nop dword [rax]
0x0000b8b0      488d8424c000.  lea rax, [rsp + 0xc0]
0x0000b8b8      488dbc24c400.  lea rdi, [rsp + 0xc4]
0x0000b8c0      48890424       mov qword [rsp], rax
0x0000b8c4      e8e769ffff     call sym.imp.mbsinit
0x0000b8c9      85c0           test eax, eax
0x0000b8cb      0f84b7060000   je 0xbf88
0x0000b8d1      c68424c00000.  mov byte [rsp + 0xc0], 1
0x0000b8d9      e971fbffff     jmp 0xb44f
0x0000b8de      6690           nop
0x0000b8e0      4889de         mov rsi, rbx
0x0000b8e3      482b742420     sub rsi, qword [rsp + 0x20]
0x0000b8e8      0fb684248c00.  movzx eax, byte [rsp + 0x8c]
0x0000b8f0      48893424       mov qword [rsp], rsi
0x0000b8f4      0f844d060000   je 0xbf47
0x0000b8fa      84c0           test al, al
0x0000b8fc      742d           je 0xb92b
0x0000b8fe      80bc24a00000.  cmp byte [rsp + 0xa0], 0
0x0000b906      7574           jne 0xb97c
0x0000b908      488b84249800.  mov rax, qword [rsp + 0x98]
0x0000b910      480184249000.  add qword [rsp + 0x90], rax
0x0000b918      48832c2401     sub qword [rsp], 1
0x0000b91d      c684248c0000.  mov byte [rsp + 0x8c], 0
0x0000b925      0f840d020000   je 0xbb38
0x0000b92b      80bc24800000.  cmp byte [rsp + 0x80], 0
0x0000b933      0f857f010000   jne 0xbab8
0x0000b939      488b8c249000.  mov rcx, qword [rsp + 0x90]
0x0000b941      0fb611         movzx edx, byte [rcx]
0x0000b944      89d0           mov eax, edx
0x0000b946      c0e805         shr al, 5
0x0000b949      83e007         and eax, 7
0x0000b94c      418b448500     mov eax, dword [r13 + rax*4]
0x0000b951      0fa3d0         bt eax, edx
0x0000b954      737a           jae 0xb9d0
0x0000b956      48c784249800.  mov qword [rsp + 0x98], 1
0x0000b962      0fbe01         movsx eax, byte [rcx]
0x0000b965      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0000b96d      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000b975      898424a40000.  mov dword [rsp + 0xa4], eax
0x0000b97c      448b9424a400.  mov r10d, dword [rsp + 0xa4]
0x0000b984      4585d2         test r10d, r10d
0x0000b987      0f857bffffff   jne 0xb908
0x0000b98d      80bc248c0000.  cmp byte [rsp + 0x8c], 0
0x0000b995      0f849d010000   je 0xbb38
0x0000b99b      488b542428     mov rdx, qword [rsp + 0x28]
0x0000b9a0      488b742408     mov rsi, qword [rsp + 8]
0x0000b9a5      4c89e7         mov rdi, r12
0x0000b9a8      e8a3eaffff     call sym.knuth_morris_pratt_multibyte
0x0000b9ad      84c0           test al, al
0x0000b9af      88442410       mov byte [rsp + 0x10], al
0x0000b9b3      0f8516050000   jne 0xbecf
0x0000b9b9      0fb69424e000.  movzx edx, byte [rsp + 0xe0]
0x0000b9c1      e9e5010000     jmp 0xbbab
0x0000b9c6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000b9d0      488d84248000.  lea rax, [rsp + 0x80]
0x0000b9d8      488dbc248400.  lea rdi, [rsp + 0x84]
0x0000b9e0      4889442410     mov qword [rsp + 0x10], rax
0x0000b9e5      e8c668ffff     call sym.imp.mbsinit
0x0000b9ea      85c0           test eax, eax
0x0000b9ec      0f8496050000   je 0xbf88
0x0000b9f2      c68424800000.  mov byte [rsp + 0x80], 1
0x0000b9fa      e8f164ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000b9ff      4c8b84249000.  mov r8, qword [rsp + 0x90]
0x0000ba07      4889c6         mov rsi, rax
0x0000ba0a      4c89c7         mov rdi, r8
0x0000ba0d      4c89442418     mov qword [rsp + 0x18], r8
0x0000ba12      e839d6ffff     call sym.strnlen1
0x0000ba17      488b742410     mov rsi, qword [rsp + 0x10]
0x0000ba1c      4c8b442418     mov r8, qword [rsp + 0x18]
0x0000ba21      4889c2         mov rdx, rax
0x0000ba24      488d4e04       lea rcx, [rsi + 4]
0x0000ba28      488d7e24       lea rdi, [rsi + 0x24]
0x0000ba2c      4c89c6         mov rsi, r8
0x0000ba2f      e8bce5ffff     call sym.rpl_mbrtowc
0x0000ba34      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000ba38      488984249800.  mov qword [rsp + 0x98], rax
0x0000ba40      0f848a000000   je 0xbad0
0x0000ba46      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000ba4a      0f84c0000000   je 0xbb10
0x0000ba50      4885c0         test rax, rax
0x0000ba53      752e           jne 0xba83
0x0000ba55      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000ba5d      48c784249800.  mov qword [rsp + 0x98], 1
0x0000ba69      803800         cmp byte [rax], 0
0x0000ba6c      0f8543050000   jne 0xbfb5
0x0000ba72      448b9c24a400.  mov r11d, dword [rsp + 0xa4]
0x0000ba7a      4585db         test r11d, r11d
0x0000ba7d      0f850f020000   jne 0xbc92
0x0000ba83      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000ba88      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0000ba90      4883c704       add rdi, 4
0x0000ba94      e81768ffff     call sym.imp.mbsinit
0x0000ba99      85c0           test eax, eax
0x0000ba9b      7453           je 0xbaf0
0x0000ba9d      c68424800000.  mov byte [rsp + 0x80], 0
0x0000baa5      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000baad      e9cafeffff     jmp 0xb97c
0x0000bab2      660f1f440000   nop word [rax + rax]
0x0000bab8      488d84248000.  lea rax, [rsp + 0x80]
0x0000bac0      4889442410     mov qword [rsp + 0x10], rax
0x0000bac5      e930ffffff     jmp 0xb9fa
0x0000baca      660f1f440000   nop word [rax + rax]
0x0000bad0      48c784249800.  mov qword [rsp + 0x98], 1
0x0000badc      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0000bae4      e91ffeffff     jmp 0xb908
0x0000bae9      0f1f80000000.  nop dword [rax]
0x0000baf0      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000baf8      e97ffeffff     jmp 0xb97c
0x0000bafd      0f1f00         nop dword [rax]
0x0000bb00      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0000bb08      e972f6ffff     jmp 0xb17f
0x0000bb0d      0f1f00         nop dword [rax]
0x0000bb10      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0000bb18      e8e363ffff     call sym.imp.strlen
0x0000bb1d      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0000bb25      488984249800.  mov qword [rsp + 0x98], rax
0x0000bb2d      e9d6fdffff     jmp 0xb908
0x0000bb32      660f1f440000   nop word [rax + rax]
0x0000bb38      80bc24800000.  cmp byte [rsp + 0x80], 0
0x0000bb40      0f8552020000   jne 0xbd98
0x0000bb46      488b8c249000.  mov rcx, qword [rsp + 0x90]
0x0000bb4e      0fb611         movzx edx, byte [rcx]
0x0000bb51      89d0           mov eax, edx
0x0000bb53      c0e805         shr al, 5
0x0000bb56      83e007         and eax, 7
0x0000bb59      418b448500     mov eax, dword [r13 + rax*4]
0x0000bb5e      0fa3d0         bt eax, edx
0x0000bb61      0f83f8020000   jae 0xbe5f
0x0000bb67      48c784249800.  mov qword [rsp + 0x98], 1
0x0000bb73      0fbe01         movsx eax, byte [rcx]
0x0000bb76      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0000bb7e      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000bb86      898424a40000.  mov dword [rsp + 0xa4], eax
0x0000bb8d      448b8424a400.  mov r8d, dword [rsp + 0xa4]
0x0000bb95      4585c0         test r8d, r8d
0x0000bb98      0f84fdfdffff   je 0xb99b
0x0000bb9e      0fb69424e000.  movzx edx, byte [rsp + 0xe0]
0x0000bba6      c644241001     mov byte [rsp + 0x10], 1
0x0000bbab      488d4301       lea rax, [rbx + 1]
0x0000bbaf      84d2           test dl, dl
0x0000bbb1      48895c2420     mov qword [rsp + 0x20], rbx
0x0000bbb6      4889c3         mov rbx, rax
0x0000bbb9      0f85f5f5ffff   jne 0xb1b4
0x0000bbbf      e96dfbffff     jmp 0xb731
0x0000bbc4      0f1f4000       nop dword [rax]
0x0000bbc8      488bbc24d000.  mov rdi, qword [rsp + 0xd0]
0x0000bbd0      e82b63ffff     call sym.imp.strlen
0x0000bbd5      c68424e00000.  mov byte [rsp + 0xe0], 0
0x0000bbdd      48898424d800.  mov qword [rsp + 0xd8], rax
0x0000bbe5      c68424cc0000.  mov byte [rsp + 0xcc], 1
0x0000bbed      e92afbffff     jmp 0xb71c
0x0000bbf2      660f1f440000   nop word [rax + rax]
0x0000bbf8      4889cf         mov rdi, rcx
0x0000bbfb      48894c2418     mov qword [rsp + 0x18], rcx
0x0000bc00      e8ab66ffff     call sym.imp.mbsinit
0x0000bc05      85c0           test eax, eax
0x0000bc07      0f847b030000   je 0xbf88
0x0000bc0d      c68424400100.  mov byte [rsp + 0x140], 1
0x0000bc15      e8d662ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000bc1a      4c8b84245001.  mov r8, qword [rsp + 0x150]
0x0000bc22      4889c6         mov rsi, rax
0x0000bc25      4c89c7         mov rdi, r8
0x0000bc28      4c890424       mov qword [rsp], r8
0x0000bc2c      e81fd4ffff     call sym.strnlen1
0x0000bc31      4c8b0424       mov r8, qword [rsp]
0x0000bc35      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000bc3a      488d7d24       lea rdi, [rbp + 0x24]
0x0000bc3e      4889c2         mov rdx, rax
0x0000bc41      4c89c6         mov rsi, r8
0x0000bc44      e8a7e3ffff     call sym.rpl_mbrtowc
0x0000bc49      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bc4d      488984245801.  mov qword [rsp + 0x158], rax
0x0000bc55      0f841d010000   je 0xbd78
0x0000bc5b      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000bc5f      0f8474020000   je 0xbed9
0x0000bc65      4885c0         test rax, rax
0x0000bc68      7536           jne 0xbca0
0x0000bc6a      488b84245001.  mov rax, qword [rsp + 0x150]
0x0000bc72      48c784245801.  mov qword [rsp + 0x158], 1
0x0000bc7e      803800         cmp byte [rax], 0
0x0000bc81      0f852e030000   jne 0xbfb5
0x0000bc87      8bbc24640100.  mov edi, dword [rsp + 0x164]
0x0000bc8e      85ff           test edi, edi
0x0000bc90      740e           je 0xbca0
0x0000bc92      e8bf66ffff     call sym.mbuiter_multi_next.part.0_1
0x0000bc97      660f1f840000.  nop word [rax + rax]
0x0000bca0      488d7d04       lea rdi, [rbp + 4]
0x0000bca4      c68424600100.  mov byte [rsp + 0x160], 1
0x0000bcac      e8ff65ffff     call sym.imp.mbsinit
0x0000bcb1      85c0           test eax, eax
0x0000bcb3      0f84d5010000   je 0xbe8e
0x0000bcb9      c68424400100.  mov byte [rsp + 0x140], 0
0x0000bcc1      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000bcc9      e9c3f5ffff     jmp 0xb291
0x0000bcce      6690           nop
0x0000bcd0      4889ef         mov rdi, rbp
0x0000bcd3      e8d865ffff     call sym.imp.mbsinit
0x0000bcd8      85c0           test eax, eax
0x0000bcda      0f84a8020000   je 0xbf88
0x0000bce0      c644244001     mov byte [rsp + 0x40], 1
0x0000bce5      e80662ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000bcea      4c8b742450     mov r14, qword [rsp + 0x50]
0x0000bcef      4889c6         mov rsi, rax
0x0000bcf2      4c89f7         mov rdi, r14
0x0000bcf5      e856d3ffff     call sym.strnlen1
0x0000bcfa      488d7b24       lea rdi, [rbx + 0x24]
0x0000bcfe      4889e9         mov rcx, rbp
0x0000bd01      4889c2         mov rdx, rax
0x0000bd04      4c89f6         mov rsi, r14
0x0000bd07      e8e4e2ffff     call sym.rpl_mbrtowc
0x0000bd0c      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bd10      4889442458     mov qword [rsp + 0x58], rax
0x0000bd15      0f847df3ffff   je 0xb098
0x0000bd1b      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000bd1f      0f84d6010000   je 0xbefb
0x0000bd25      4885c0         test rax, rax
0x0000bd28      7523           jne 0xbd4d
0x0000bd2a      488b442450     mov rax, qword [rsp + 0x50]
0x0000bd2f      48c744245801.  mov qword [rsp + 0x58], 1
0x0000bd38      803800         cmp byte [rax], 0
0x0000bd3b      0f8574020000   jne 0xbfb5
0x0000bd41      8b442464       mov eax, dword [rsp + 0x64]
0x0000bd45      85c0           test eax, eax
0x0000bd47      0f8545ffffff   jne 0xbc92
0x0000bd4d      488d7b04       lea rdi, [rbx + 4]
0x0000bd51      c644246001     mov byte [rsp + 0x60], 1
0x0000bd56      e85565ffff     call sym.imp.mbsinit
0x0000bd5b      85c0           test eax, eax
0x0000bd5d      0f8438010000   je 0xbe9b
0x0000bd63      c644244000     mov byte [rsp + 0x40], 0
0x0000bd68      c644244c01     mov byte [rsp + 0x4c], 1
0x0000bd6d      e9d9f2ffff     jmp 0xb04b
0x0000bd72      660f1f440000   nop word [rax + rax]
0x0000bd78      48c784245801.  mov qword [rsp + 0x158], 1
0x0000bd84      c68424600100.  mov byte [rsp + 0x160], 0
0x0000bd8c      e90ff5ffff     jmp 0xb2a0
0x0000bd91      0f1f80000000.  nop dword [rax]
0x0000bd98      488d84248000.  lea rax, [rsp + 0x80]
0x0000bda0      4889442410     mov qword [rsp + 0x10], rax
0x0000bda5      e84661ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000bdaa      4c8b84249000.  mov r8, qword [rsp + 0x90]
0x0000bdb2      4889c6         mov rsi, rax
0x0000bdb5      4c89c7         mov rdi, r8
0x0000bdb8      4c890424       mov qword [rsp], r8
0x0000bdbc      e88fd2ffff     call sym.strnlen1
0x0000bdc1      488b742410     mov rsi, qword [rsp + 0x10]
0x0000bdc6      4c8b0424       mov r8, qword [rsp]
0x0000bdca      4889c2         mov rdx, rax
0x0000bdcd      488d4e04       lea rcx, [rsi + 4]
0x0000bdd1      488d7e24       lea rdi, [rsi + 0x24]
0x0000bdd5      4c89c6         mov rsi, r8
0x0000bdd8      e813e2ffff     call sym.rpl_mbrtowc
0x0000bddd      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000bde1      488984249800.  mov qword [rsp + 0x98], rax
0x0000bde9      0f842a010000   je 0xbf19
0x0000bdef      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000bdf3      0f84ac000000   je 0xbea5
0x0000bdf9      4885c0         test rax, rax
0x0000bdfc      752e           jne 0xbe2c
0x0000bdfe      488b84249000.  mov rax, qword [rsp + 0x90]
0x0000be06      48c784249800.  mov qword [rsp + 0x98], 1
0x0000be12      803800         cmp byte [rax], 0
0x0000be15      0f859a010000   jne 0xbfb5
0x0000be1b      448b8c24a400.  mov r9d, dword [rsp + 0xa4]
0x0000be23      4585c9         test r9d, r9d
0x0000be26      0f8566feffff   jne 0xbc92
0x0000be2c      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000be31      c68424a00000.  mov byte [rsp + 0xa0], 1
0x0000be39      4883c704       add rdi, 4
0x0000be3d      e86e64ffff     call sym.imp.mbsinit
0x0000be42      85c0           test eax, eax
0x0000be44      0f84f0000000   je 0xbf3a
0x0000be4a      c68424800000.  mov byte [rsp + 0x80], 0
0x0000be52      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000be5a      e92efdffff     jmp 0xbb8d
0x0000be5f      488d84248000.  lea rax, [rsp + 0x80]
0x0000be67      488dbc248400.  lea rdi, [rsp + 0x84]
0x0000be6f      4889442410     mov qword [rsp + 0x10], rax
0x0000be74      e83764ffff     call sym.imp.mbsinit
0x0000be79      85c0           test eax, eax
0x0000be7b      0f8407010000   je 0xbf88
0x0000be81      c68424800000.  mov byte [rsp + 0x80], 1
0x0000be89      e917ffffff     jmp 0xbda5
0x0000be8e      c684244c0100.  mov byte [rsp + 0x14c], 1
0x0000be96      e9f6f3ffff     jmp 0xb291
0x0000be9b      c644244c01     mov byte [rsp + 0x4c], 1
0x0000bea0      e9a6f1ffff     jmp 0xb04b
0x0000bea5      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x0000bead      e84e60ffff     call sym.imp.strlen
0x0000beb2      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0000beba      488984249800.  mov qword [rsp + 0x98], rax
0x0000bec2      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000beca      e9cffcffff     jmp 0xbb9e
0x0000becf      488b442438     mov rax, qword [rsp + 0x38]
0x0000bed4      e97df1ffff     jmp 0xb056
0x0000bed9      488bbc245001.  mov rdi, qword [rsp + 0x150]
0x0000bee1      e81a60ffff     call sym.imp.strlen
0x0000bee6      c68424600100.  mov byte [rsp + 0x160], 0
0x0000beee      488984245801.  mov qword [rsp + 0x158], rax
0x0000bef6      e9a5f3ffff     jmp 0xb2a0
0x0000befb      488b7c2450     mov rdi, qword [rsp + 0x50]
0x0000bf00      e8fb5fffff     call sym.imp.strlen
0x0000bf05      c644246000     mov byte [rsp + 0x60], 0
0x0000bf0a      4889442458     mov qword [rsp + 0x58], rax
0x0000bf0f      c644244c01     mov byte [rsp + 0x4c], 1
0x0000bf14      e992f1ffff     jmp 0xb0ab
0x0000bf19      48c784249800.  mov qword [rsp + 0x98], 1
0x0000bf25      c68424a00000.  mov byte [rsp + 0xa0], 0
0x0000bf2d      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000bf35      e964fcffff     jmp 0xbb9e
0x0000bf3a      c684248c0000.  mov byte [rsp + 0x8c], 1
0x0000bf42      e946fcffff     jmp 0xbb8d
0x0000bf47      84c0           test al, al
0x0000bf49      0f84e9fbffff   je 0xbb38
0x0000bf4f      80bc24a00000.  cmp byte [rsp + 0xa0], 0
0x0000bf57      0f8441fcffff   je 0xbb9e
0x0000bf5d      e92bfcffff     jmp 0xbb8d
0x0000bf62      660f1f440000   nop word [rax + rax]
0x0000bf68      4b8d14b6       lea rdx, [r14 + r14*4]
0x0000bf6c      4839d3         cmp rbx, rdx
0x0000bf6f      0f836bf9ffff   jae 0xb8e0
0x0000bf75      4883c301       add rbx, 1
0x0000bf79      88442410       mov byte [rsp + 0x10], al
0x0000bf7d      e9aff7ffff     jmp 0xb731
0x0000bf82      660f1f440000   nop word [rax + rax]
0x0000bf88      488d0d314a00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x109c0 ; "mbuiter_multi_next"
0x0000bf8f      488d35c24000.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000bf96      488d3ded4000.  lea rdi, str.mbsinit___iter__state      ; 0x1008a ; "mbsinit (&iter->state)"
0x0000bf9d      ba96000000     mov edx, 0x96
0x0000bfa2      e83960ffff     call sym.imp.__assert_fail
0x0000bfa7      4883c301       add rbx, 1
0x0000bfab      e904f2ffff     jmp 0xb1b4
0x0000bfb0      e86b5fffff     call sym.imp.__stack_chk_fail
0x0000bfb5      488d0d044a00.  lea rcx, obj.__PRETTY_FUNCTION__.5056   ; 0x109c0 ; "mbuiter_multi_next"
0x0000bfbc      488d35954000.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000bfc3      488d3dd74000.  lea rdi, str.iter__cur.ptr_______0      ; 0x100a1 ; "*iter->cur.ptr == '\0'"
0x0000bfca      bab2000000     mov edx, 0xb2
0x0000bfcf      e80c60ffff     call sym.imp.__assert_fail
0x0000bfd4      e8075effff     call sym.imp.abort
0x0000bfd9      0f1f80000000.  nop dword [rax]
;-- mem_cd_iconv:
0x0000bfe0      4157           push r15                                ; ../coreutils-8.31/lib/striconv.c:45
0x0000bfe2      4156           push r14
0x0000bfe4      4989ff         mov r15, rdi
0x0000bfe7      4155           push r13
0x0000bfe9      4154           push r12
0x0000bfeb      4989f5         mov r13, rsi
0x0000bfee      55             push rbp
0x0000bfef      53             push rbx
0x0000bff0      4889d3         mov rbx, rdx
0x0000bff3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/striconv.c:55
0x0000bff5      31d2           xor edx, edx
0x0000bff7      4881ec681000.  sub rsp, 0x1068                         ; ../coreutils-8.31/lib/striconv.c:45
0x0000bffe      48897c2428     mov qword [rsp + 0x28], rdi
0x0000c003      48894c2418     mov qword [rsp + 0x18], rcx
0x0000c008      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:55
0x0000c00b      4c89442410     mov qword [rsp + 0x10], r8              ; ../coreutils-8.31/lib/striconv.c:45
0x0000c010      31c9           xor ecx, ecx                            ; ../coreutils-8.31/lib/striconv.c:55
0x0000c012      4531c0         xor r8d, r8d
0x0000c015      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/striconv.c:45
0x0000c01e      488984245810.  mov qword [rsp + 0x1058], rax
0x0000c026      31c0           xor eax, eax
0x0000c028      e8035effff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:55
0x0000c02d      4c897c2430     mov qword [rsp + 0x30], r15             ; ../coreutils-8.31/lib/striconv.c:65
0x0000c032      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/striconv.c:60
0x0000c035      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/striconv.c:68
0x0000c038      4c896c2438     mov qword [rsp + 0x38], r13             ; ../coreutils-8.31/lib/striconv.c:66
0x0000c03d      4c8d742450     lea r14, [rsp + 0x50]
0x0000c042      4c8d642448     lea r12, [rsp + 0x48]
0x0000c047      488d6c2440     lea rbp, [rsp + 0x40]
0x0000c04c      747d           je 0xc0cb                               ; ../coreutils-8.31/lib/striconv.c:68
0x0000c04e      488d442438     lea rax, [rsp + 0x38]
0x0000c053      488d742430     lea rsi, [rsp + 0x30]
0x0000c058      4c896c2420     mov qword [rsp + 0x20], r13
0x0000c05d      4889742408     mov qword [rsp + 8], rsi
0x0000c062      4989c5         mov r13, rax
0x0000c065      eb20           jmp 0xc087
0x0000c067      660f1f840000.  nop word [rax + rax]
0x0000c070      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/striconv.c:96
0x0000c075      4c29f0         sub rax, r14
0x0000c078      4901c7         add r15, rax
0x0000c07b      48837c243800   cmp qword [rsp + 0x38], 0               ; ../coreutils-8.31/lib/striconv.c:68
0x0000c081      0f8499010000   je 0xc220
0x0000c087      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:72
0x0000c08c      4d89e0         mov r8, r12
0x0000c08f      4889e9         mov rcx, rbp
0x0000c092      4c89ea         mov rdx, r13
0x0000c095      4889df         mov rdi, rbx
0x0000c098      4c89742440     mov qword [rsp + 0x40], r14             ; ../coreutils-8.31/lib/striconv.c:70
0x0000c09d      48c744244800.  mov qword [rsp + 0x48], 0x1000          ; ../coreutils-8.31/lib/striconv.c:71 ; [0x1000:8]=0x6e69676e616c5f6c
0x0000c0a6      e8855dffff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:72
0x0000c0ab      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:76
0x0000c0af      75bf           jne 0xc070
0x0000c0b1      e83a5dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:78
0x0000c0b6      8b00           mov eax, dword [rax]
0x0000c0b8      83f807         cmp eax, 7
0x0000c0bb      74b3           je 0xc070
0x0000c0bd      83f816         cmp eax, 0x16                           ; ../coreutils-8.31/lib/striconv.c:80
0x0000c0c0      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000c0c5      0f85be010000   jne 0xc289
0x0000c0cb      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/striconv.c:105
0x0000c0cd      31f6           xor esi, esi
0x0000c0cf      4d89e0         mov r8, r12
0x0000c0d2      4889e9         mov rcx, rbp
0x0000c0d5      4889df         mov rdi, rbx
0x0000c0d8      4c89742440     mov qword [rsp + 0x40], r14             ; ../coreutils-8.31/lib/striconv.c:103
0x0000c0dd      48c744244800.  mov qword [rsp + 0x48], 0x1000          ; ../coreutils-8.31/lib/striconv.c:104 ; [0x1000:8]=0x6e69676e616c5f6c
0x0000c0e6      e8455dffff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:105
0x0000c0eb      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:107
0x0000c0ef      0f8494010000   je 0xc289
0x0000c0f5      488b442440     mov rax, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/striconv.c:109
0x0000c0fa      4c29f0         sub rax, r14
0x0000c0fd      4c01f8         add rax, r15                            ; ../coreutils-8.31/lib/striconv.c:116
0x0000c100      4889442408     mov qword [rsp + 8], rax
0x0000c105      0f8425010000   je 0xc230
0x0000c10b      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:121
0x0000c110      488b00         mov rax, qword [rax]
0x0000c113      4885c0         test rax, rax
0x0000c116      4889442420     mov qword [rsp + 0x20], rax
0x0000c11b      740f           je 0xc12c
0x0000c11d      488b442410     mov rax, qword [rsp + 0x10]
0x0000c122      488b4c2408     mov rcx, qword [rsp + 8]
0x0000c127      483908         cmp qword [rax], rcx
0x0000c12a      7318           jae 0xc144
0x0000c12c      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:125
0x0000c131      e8ba5fffff     call sym.imp.malloc
0x0000c136      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:126
0x0000c139      4889442420     mov qword [rsp + 0x20], rax             ; ../coreutils-8.31/lib/striconv.c:125
0x0000c13e      0f843a010000   je 0xc27e                               ; ../coreutils-8.31/lib/striconv.c:126
0x0000c144      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/striconv.c:138
0x0000c147      31c9           xor ecx, ecx
0x0000c149      31d2           xor edx, edx
0x0000c14b      31f6           xor esi, esi
0x0000c14d      4889df         mov rdi, rbx
0x0000c150      4c8d7c2438     lea r15, [rsp + 0x38]                   ; ../coreutils-8.31/lib/striconv.c:150
0x0000c155      e8d65cffff     call sym.imp.iconv                      ; ../coreutils-8.31/lib/striconv.c:138
0x0000c15a      488b442428     mov rax, qword [rsp + 0x28]             ; ../coreutils-8.31/lib/striconv.c:143
0x0000c15f      4c896c2438     mov qword [rsp + 0x38], r13             ; ../coreutils-8.31/lib/striconv.c:144
0x0000c164      4c8d742430     lea r14, [rsp + 0x30]                   ; ../coreutils-8.31/lib/striconv.c:150
0x0000c169      4889442430     mov qword [rsp + 0x30], rax             ; ../coreutils-8.31/lib/striconv.c:143
0x0000c16e      488b442420     mov rax, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/striconv.c:145
0x0000c173      4889442440     mov qword [rsp + 0x40], rax
0x0000c178      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:146
0x0000c17d      4889442448     mov qword [rsp + 0x48], rax
0x0000c182      eb27           jmp 0xc1ab                              ; ../coreutils-8.31/lib/striconv.c:148
0x0000c184      0f1f4000       nop dword [rax]
0x0000c188      4d89e0         mov r8, r12                             ; ../coreutils-8.31/lib/striconv.c:150
0x0000c18b      4889e9         mov rcx, rbp
0x0000c18e      4c89fa         mov rdx, r15
0x0000c191      4c89f6         mov rsi, r14
0x0000c194      4889df         mov rdi, rbx
0x0000c197      e8945cffff     call sym.imp.iconv
0x0000c19c      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:154
0x0000c1a0      0f849a000000   je 0xc240
0x0000c1a6      4c8b6c2438     mov r13, qword [rsp + 0x38]
0x0000c1ab      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/striconv.c:148
0x0000c1ae      75d8           jne 0xc188
0x0000c1b0      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/striconv.c:178
0x0000c1b2      31f6           xor esi, esi
0x0000c1b4      4d89e0         mov r8, r12
0x0000c1b7      4889e9         mov rcx, rbp
0x0000c1ba      4889df         mov rdi, rbx
0x0000c1bd      e86e5cffff     call sym.imp.iconv
0x0000c1c2      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:180
0x0000c1c6      0f8482000000   je 0xc24e
0x0000c1cc      48837c244800   cmp qword [rsp + 0x48], 0               ; ../coreutils-8.31/lib/striconv.c:184
0x0000c1d2      0f85bb000000   jne 0xc293
0x0000c1d8      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:188
0x0000c1dd      488b742420     mov rsi, qword [rsp + 0x20]
0x0000c1e2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:191
0x0000c1e4      488b7c2408     mov rdi, qword [rsp + 8]                ; ../coreutils-8.31/lib/striconv.c:189
0x0000c1e9      488930         mov qword [rax], rsi                    ; ../coreutils-8.31/lib/striconv.c:188
0x0000c1ec      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/striconv.c:189
0x0000c1f1      488938         mov qword [rax], rdi
0x0000c1f4      488b94245810.  mov rdx, qword [rsp + 0x1058]           ; ../coreutils-8.31/lib/striconv.c:204
0x0000c1fc      644833142528.  xor rdx, qword fs:[0x28]
0x0000c205      89d8           mov eax, ebx
0x0000c207      0f858b000000   jne 0xc298
0x0000c20d      4881c4681000.  add rsp, 0x1068
0x0000c214      5b             pop rbx
0x0000c215      5d             pop rbp
0x0000c216      415c           pop r12
0x0000c218      415d           pop r13
0x0000c21a      415e           pop r14
0x0000c21c      415f           pop r15
0x0000c21e      c3             ret
0x0000c21f      90             nop
0x0000c220      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x0000c225      e9a1feffff     jmp 0xc0cb
0x0000c22a      660f1f440000   nop word [rax + rax]
0x0000c230      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/striconv.c:118
0x0000c235      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:119
0x0000c237      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/striconv.c:118
0x0000c23e      ebb4           jmp 0xc1f4                              ; ../coreutils-8.31/lib/striconv.c:119
0x0000c240      e8ab5bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:156
0x0000c245      833816         cmp dword [rax], 0x16
0x0000c248      0f8462ffffff   je 0xc1b0
0x0000c24e      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/striconv.c:195
0x0000c253      4c8b7c2420     mov r15, qword [rsp + 0x20]
0x0000c258      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/striconv.c:201 ; -1
0x0000c25d      4c3938         cmp qword [rax], r15                    ; ../coreutils-8.31/lib/striconv.c:195
0x0000c260      7492           je 0xc1f4
0x0000c262      e8895bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:197
0x0000c267      448b20         mov r12d, dword [rax]
0x0000c26a      4889c5         mov rbp, rax
0x0000c26d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/striconv.c:198
0x0000c270      e85b5bffff     call sym.imp.free
0x0000c275      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/striconv.c:199
0x0000c279      e976ffffff     jmp 0xc1f4
0x0000c27e      e86d5bffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:128
0x0000c283      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c289      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/striconv.c:129 ; -1
0x0000c28e      e961ffffff     jmp 0xc1f4
0x0000c293      e8485bffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/striconv.c:185
0x0000c298      e8835cffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/striconv.c:204
0x0000c29d      0f1f00         nop dword [rax]
;-- str_cd_iconv:
0x0000c2a0      4157           push r15                                ; ../coreutils-8.31/lib/striconv.c:208
0x0000c2a2      4156           push r14
0x0000c2a4      4155           push r13
0x0000c2a6      4154           push r12
0x0000c2a8      4989f4         mov r12, rsi
0x0000c2ab      55             push rbp
0x0000c2ac      53             push rbx
0x0000c2ad      4883ec58       sub rsp, 0x58
0x0000c2b1      64488b042528.  mov rax, qword fs:[0x28]
0x0000c2ba      4889442448     mov qword [rsp + 0x48], rax
0x0000c2bf      31c0           xor eax, eax
0x0000c2c1      48897c2428     mov qword [rsp + 0x28], rdi             ; ../coreutils-8.31/lib/striconv.c:255
0x0000c2c6      e8355cffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/striconv.c:256
0x0000c2cb      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/striconv.c:265
0x0000c2ce      4889442430     mov qword [rsp + 0x30], rax             ; ../coreutils-8.31/lib/striconv.c:256
0x0000c2d3      49c1e504       shl r13, 4                              ; ../coreutils-8.31/lib/striconv.c:265
0x0000c2d7      483d00000010   cmp rax, 0x10000000
0x0000c2dd      4c0f43e8       cmovae r13, rax
0x0000c2e1      498d6d01       lea rbp, [r13 + 1]                      ; ../coreutils-8.31/lib/striconv.c:267
0x0000c2e5      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/striconv.c:269
0x0000c2e8      e8035effff     call sym.imp.malloc
0x0000c2ed      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:270
0x0000c2f0      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/striconv.c:269
0x0000c2f3      0f84d7010000   je 0xc4d0                               ; ../coreutils-8.31/lib/striconv.c:270
0x0000c2f9      4531c0         xor r8d, r8d                            ; ../coreutils-8.31/lib/striconv.c:281
0x0000c2fc      31c9           xor ecx, ecx
0x0000c2fe      31d2           xor edx, edx
0x0000c300      31f6           xor esi, esi
0x0000c302      4c89e7         mov rdi, r12
0x0000c305      e8265bffff     call sym.imp.iconv
0x0000c30a      488d442440     lea rax, [rsp + 0x40]
0x0000c30f      48895c2438     mov qword [rsp + 0x38], rbx             ; ../coreutils-8.31/lib/striconv.c:286
0x0000c314      4c896c2440     mov qword [rsp + 0x40], r13             ; ../coreutils-8.31/lib/striconv.c:287
0x0000c319      4889442408     mov qword [rsp + 8], rax
0x0000c31e      488d442438     lea rax, [rsp + 0x38]
0x0000c323      48890424       mov qword [rsp], rax
0x0000c327      488d442430     lea rax, [rsp + 0x30]
0x0000c32c      4889442418     mov qword [rsp + 0x18], rax
0x0000c331      488d442428     lea rax, [rsp + 0x28]
0x0000c336      4889442410     mov qword [rsp + 0x10], rax
0x0000c33b      eb67           jmp 0xc3a4
0x0000c33d      0f1f00         nop dword [rax]
0x0000c340      e8ab5affff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:299
0x0000c345      4989c7         mov r15, rax
0x0000c348      8b00           mov eax, dword [rax]
0x0000c34a      83f816         cmp eax, 0x16
0x0000c34d      0f84e3000000   je 0xc436
0x0000c353      83f807         cmp eax, 7                              ; ../coreutils-8.31/lib/striconv.c:301
0x0000c356      0f8532010000   jne 0xc48e
0x0000c35c      4c8b742438     mov r14, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:303
0x0000c361      4c8d6c2d00     lea r13, [rbp + rbp]                    ; ../coreutils-8.31/lib/striconv.c:304
0x0000c366      4929de         sub r14, rbx                            ; ../coreutils-8.31/lib/striconv.c:303
0x0000c369      4c39ed         cmp rbp, r13                            ; ../coreutils-8.31/lib/striconv.c:307
0x0000c36c      0f834e010000   jae 0xc4c0
0x0000c372      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/striconv.c:312
0x0000c375      4889df         mov rdi, rbx
0x0000c378      e8d35dffff     call sym.imp.realloc
0x0000c37d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:313
0x0000c380      0f843a010000   je 0xc4c0
0x0000c386      4a8d3430       lea rsi, [rax + r14]                    ; ../coreutils-8.31/lib/striconv.c:320
0x0000c38a      4889c3         mov rbx, rax
0x0000c38d      4c89ed         mov rbp, r13
0x0000c390      4889742438     mov qword [rsp + 0x38], rsi
0x0000c395      498d75ff       lea rsi, [r13 - 1]                      ; ../coreutils-8.31/lib/striconv.c:321
0x0000c399      4889f2         mov rdx, rsi
0x0000c39c      4c29f2         sub rdx, r14
0x0000c39f      4889542440     mov qword [rsp + 0x40], rdx
0x0000c3a4      4c8b442408     mov r8, qword [rsp + 8]                 ; ../coreutils-8.31/lib/striconv.c:293
0x0000c3a9      488b0c24       mov rcx, qword [rsp]
0x0000c3ad      4c89e7         mov rdi, r12
0x0000c3b0      488b542418     mov rdx, qword [rsp + 0x18]
0x0000c3b5      488b742410     mov rsi, qword [rsp + 0x10]
0x0000c3ba      e8715affff     call sym.imp.iconv
0x0000c3bf      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:297
0x0000c3c3      0f8477ffffff   je 0xc340
0x0000c3c9      eb6b           jmp 0xc436
0x0000c3cb      0f1f440000     nop dword [rax + rax]
0x0000c3d0      e81b5affff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:340
0x0000c3d5      833807         cmp dword [rax], 7
0x0000c3d8      4889c1         mov rcx, rax
0x0000c3db      0f85ad000000   jne 0xc48e
0x0000c3e1      4c8b7c2438     mov r15, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:342
0x0000c3e6      488d542d00     lea rdx, [rbp + rbp]                    ; ../coreutils-8.31/lib/striconv.c:343
0x0000c3eb      4929df         sub r15, rbx                            ; ../coreutils-8.31/lib/striconv.c:342
0x0000c3ee      4839d5         cmp rbp, rdx                            ; ../coreutils-8.31/lib/striconv.c:346
0x0000c3f1      0f8391000000   jae 0xc488
0x0000c3f7      4889d6         mov rsi, rdx                            ; ../coreutils-8.31/lib/striconv.c:351
0x0000c3fa      4889df         mov rdi, rbx
0x0000c3fd      4889542410     mov qword [rsp + 0x10], rdx
0x0000c402      4889442418     mov qword [rsp + 0x18], rax
0x0000c407      e8445dffff     call sym.imp.realloc
0x0000c40c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/striconv.c:352
0x0000c40f      488b542410     mov rdx, qword [rsp + 0x10]
0x0000c414      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000c419      746d           je 0xc488
0x0000c41b      4a8d0c38       lea rcx, [rax + r15]                    ; ../coreutils-8.31/lib/striconv.c:359
0x0000c41f      4889d5         mov rbp, rdx
0x0000c422      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/striconv.c:334
0x0000c425      48894c2438     mov qword [rsp + 0x38], rcx             ; ../coreutils-8.31/lib/striconv.c:359
0x0000c42a      488d4aff       lea rcx, [rdx - 1]                      ; ../coreutils-8.31/lib/striconv.c:360
0x0000c42e      4c29f9         sub rcx, r15
0x0000c431      48894c2440     mov qword [rsp + 0x40], rcx
0x0000c436      4c8b442408     mov r8, qword [rsp + 8]                 ; ../coreutils-8.31/lib/striconv.c:336
0x0000c43b      488b0c24       mov rcx, qword [rsp]
0x0000c43f      31d2           xor edx, edx
0x0000c441      31f6           xor esi, esi
0x0000c443      4c89e7         mov rdi, r12
0x0000c446      e8e559ffff     call sym.imp.iconv
0x0000c44b      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/striconv.c:338
0x0000c44f      0f847bffffff   je 0xc3d0
0x0000c455      488b442438     mov rax, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:371
0x0000c45a      488d5001       lea rdx, [rax + 1]
0x0000c45e      4889542438     mov qword [rsp + 0x38], rdx
0x0000c463      c60000         mov byte [rax], 0
0x0000c466      488b742438     mov rsi, qword [rsp + 0x38]             ; ../coreutils-8.31/lib/striconv.c:373
0x0000c46b      4829de         sub rsi, rbx
0x0000c46e      4839f5         cmp rbp, rsi                            ; ../coreutils-8.31/lib/striconv.c:377
0x0000c471      7625           jbe 0xc498
0x0000c473      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:379
0x0000c476      e8d55cffff     call sym.imp.realloc
0x0000c47b      4885c0         test rax, rax
0x0000c47e      480f45d8       cmovne rbx, rax
0x0000c482      eb14           jmp 0xc498
0x0000c484      0f1f4000       nop dword [rax]
0x0000c488      c7010c000000   mov dword [rcx], 0xc                    ; ../coreutils-8.31/lib/striconv.c:354 ; [0xc:4]=0
0x0000c48e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:390
0x0000c491      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/striconv.c:392
0x0000c493      e83859ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/striconv.c:390
0x0000c498      488b7c2448     mov rdi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/striconv.c:396
0x0000c49d      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000c4a6      4889d8         mov rax, rbx
0x0000c4a9      7532           jne 0xc4dd
0x0000c4ab      4883c458       add rsp, 0x58
0x0000c4af      5b             pop rbx
0x0000c4b0      5d             pop rbp
0x0000c4b1      415c           pop r12
0x0000c4b3      415d           pop r13
0x0000c4b5      415e           pop r14
0x0000c4b7      415f           pop r15
0x0000c4b9      c3             ret
0x0000c4ba      660f1f440000   nop word [rax + rax]
0x0000c4c0      41c7070c0000.  mov dword [r15], 0xc                    ; ../coreutils-8.31/lib/striconv.c:315 ; [0xc:4]=0
0x0000c4c7      ebc5           jmp 0xc48e                              ; ../coreutils-8.31/lib/striconv.c:316
0x0000c4c9      0f1f80000000.  nop dword [rax]
0x0000c4d0      e81b59ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:272
0x0000c4d5      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c4db      ebbb           jmp 0xc498                              ; ../coreutils-8.31/lib/striconv.c:273
0x0000c4dd      e83e5affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/striconv.c:274
0x0000c4e2      0f1f4000       nop dword [rax]
0x0000c4e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- str_iconv:
0x0000c4f0      4155           push r13
0x0000c4f2      4154           push r12                                ; ../coreutils-8.31/lib/striconv.c:275
0x0000c4f4      55             push rbp
0x0000c4f5      53             push rbx
0x0000c4f6      4889fb         mov rbx, rdi
0x0000c4f9      4883ec08       sub rsp, 8
0x0000c4fd      803f00         cmp byte [rdi], 0
0x0000c500      7415           je 0xc517
0x0000c502      4989f4         mov r12, rsi
0x0000c505      4889d6         mov rsi, rdx
0x0000c508      4889d5         mov rbp, rdx
0x0000c50b      4c89e7         mov rdi, r12
0x0000c50e      e86ddbffff     call sym.c_strcasecmp
0x0000c513      85c0           test eax, eax
0x0000c515      7521           jne 0xc538
0x0000c517      4889df         mov rdi, rbx
0x0000c51a      e8815dffff     call sym.imp.strdup
0x0000c51f      4885c0         test rax, rax
0x0000c522      4889c3         mov rbx, rax
0x0000c525      7469           je 0xc590                               ; ../coreutils-8.31/lib/striconv.c:299
0x0000c527      4883c408       add rsp, 8
0x0000c52b      4889d8         mov rax, rbx
0x0000c52e      5b             pop rbx
0x0000c52f      5d             pop rbp
0x0000c530      415c           pop r12                                 ; ../coreutils-8.31/lib/striconv.c:300
0x0000c532      415d           pop r13
0x0000c534      c3             ret                                     ; ../coreutils-8.31/lib/striconv.c:299
0x0000c535      0f1f00         nop dword [rax]
0x0000c538      4889ef         mov rdi, rbp
0x0000c53b      4c89e6         mov rsi, r12
0x0000c53e      e89d5dffff     call sym.imp.iconv_open
0x0000c543      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c547      4889c5         mov rbp, rax
0x0000c54a      0f8480000000   je 0xc5d0
0x0000c550      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/striconv.c:314
0x0000c553      4889c6         mov rsi, rax
0x0000c556      e845fdffff     call sym.str_cd_iconv
0x0000c55b      4885c0         test rax, rax
0x0000c55e      4889c3         mov rbx, rax
0x0000c561      744d           je 0xc5b0
0x0000c563      4889ef         mov rdi, rbp
0x0000c566      e8155cffff     call sym.imp.iconv_close
0x0000c56b      85c0           test eax, eax
0x0000c56d      79b8           jns 0xc527
0x0000c56f      e87c58ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:321
0x0000c574      448b20         mov r12d, dword [rax]
0x0000c577      4889c5         mov rbp, rax
0x0000c57a      4889df         mov rdi, rbx
0x0000c57d      e84e58ffff     call sym.imp.free                       ; ../coreutils-8.31/lib/striconv.c:280
0x0000c582      31db           xor ebx, ebx
0x0000c584      44896500       mov dword [rbp], r12d
0x0000c588      eb9d           jmp 0xc527                              ; ../coreutils-8.31/lib/striconv.c:335
0x0000c58a      660f1f440000   nop word [rax + rax]
0x0000c590      e85b58ffff     call sym.imp.__errno_location
0x0000c595      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x0000c59b      4883c408       add rsp, 8
0x0000c59f      4889d8         mov rax, rbx
0x0000c5a2      5b             pop rbx
0x0000c5a3      5d             pop rbp
0x0000c5a4      415c           pop r12
0x0000c5a6      415d           pop r13
0x0000c5a8      c3             ret                                     ; ../coreutils-8.31/lib/striconv.c:309
0x0000c5a9      0f1f80000000.  nop dword [rax]
0x0000c5b0      e83b58ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/striconv.c:310
0x0000c5b5      448b28         mov r13d, dword [rax]
0x0000c5b8      4989c4         mov r12, rax
0x0000c5bb      4889ef         mov rdi, rbp
0x0000c5be      e8bd5bffff     call sym.imp.iconv_close
0x0000c5c3      45892c24       mov dword [r12], r13d
0x0000c5c7      e95bffffff     jmp 0xc527
0x0000c5cc      0f1f4000       nop dword [rax]
0x0000c5d0      31db           xor ebx, ebx
0x0000c5d2      e950ffffff     jmp 0xc527
0x0000c5d7      660f1f840000.  nop word [rax + rax]
;-- rpl_fclose:
0x0000c5e0      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000c5e2      55             push rbp
0x0000c5e3      53             push rbx
0x0000c5e4      4889fb         mov rbx, rdi
0x0000c5e7      e8c45affff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000c5ec      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000c5ee      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000c5f1      7854           js 0xc647                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000c5f3      e8485bffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000c5f8      85c0           test eax, eax
0x0000c5fa      752c           jne 0xc628
0x0000c5fc      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000c5ff      e85c000000     call sym.rpl_fflush
0x0000c604      85c0           test eax, eax
0x0000c606      743c           je 0xc644
0x0000c608      e8e357ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000c60d      448b20         mov r12d, dword [rax]
0x0000c610      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000c613      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000c616      e8a558ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000c61b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000c61e      7530           jne 0xc650
0x0000c620      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000c621      5d             pop rbp
0x0000c622      415c           pop r12
0x0000c624      c3             ret
0x0000c625      0f1f00         nop dword [rax]
0x0000c628      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000c62b      e8805affff     call sym.imp.fileno
0x0000c630      31f6           xor esi, esi
0x0000c632      ba01000000     mov edx, 1
0x0000c637      89c7           mov edi, eax
0x0000c639      e89259ffff     call sym.imp.lseek
0x0000c63e      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c642      75b8           jne 0xc5fc
0x0000c644      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000c647      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000c648      5d             pop rbp
0x0000c649      415c           pop r12
0x0000c64b      e97058ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000c650      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000c654      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000c659      ebc5           jmp 0xc620
0x0000c65b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x0000c660      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x0000c663      53             push rbx
0x0000c664      4889fb         mov rbx, rdi
0x0000c667      7411           je 0xc67a                               ; ../coreutils-8.31/lib/fflush.c:150
0x0000c669      e8d25affff     call sym.imp.__freading
0x0000c66e      85c0           test eax, eax
0x0000c670      7408           je 0xc67a
0x0000c672      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x0000c678      750e           jne 0xc688
0x0000c67a      4889df         mov rdi, rbx
0x0000c67d      5b             pop rbx
0x0000c67e      e97d5affff     jmp sym.imp.fflush
0x0000c683      0f1f440000     nop dword [rax + rax]
0x0000c688      4889df         mov rdi, rbx
0x0000c68b      ba01000000     mov edx, 1
0x0000c690      31f6           xor esi, esi
0x0000c692      e809000000     call sym.rpl_fseeko
0x0000c697      4889df         mov rdi, rbx
0x0000c69a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000c69b      e9605affff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x0000c6a0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x0000c6a4      48394710       cmp qword [rdi + 0x10], rax
0x0000c6a8      7406           je 0xc6b0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000c6aa      e9415bffff     jmp sym.imp.fseeko
0x0000c6af      90             nop
0x0000c6b0      488b4720       mov rax, qword [rdi + 0x20]
0x0000c6b4      48394728       cmp qword [rdi + 0x28], rax
0x0000c6b8      75f0           jne 0xc6aa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000c6ba      48837f4800     cmp qword [rdi + 0x48], 0
0x0000c6bf      75e9           jne 0xc6aa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x0000c6c1      4154           push r12
0x0000c6c3      55             push rbp
0x0000c6c4      4189d4         mov r12d, edx
0x0000c6c7      53             push rbx
0x0000c6c8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000c6cb      4889fb         mov rbx, rdi
0x0000c6ce      e8dd59ffff     call sym.imp.fileno
0x0000c6d3      4489e2         mov edx, r12d
0x0000c6d6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x0000c6d9      89c7           mov edi, eax
0x0000c6db      e8f058ffff     call sym.imp.lseek
0x0000c6e0      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c6e4      740c           je 0xc6f2
0x0000c6e6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x0000c6e9      488983900000.  mov qword [rbx + 0x90], rax
0x0000c6f0      31c0           xor eax, eax
0x0000c6f2      5b             pop rbx
0x0000c6f3      5d             pop rbp
0x0000c6f4      415c           pop r12
0x0000c6f6      c3             ret
0x0000c6f7      660f1f840000.  nop word [rax + rax]
;-- mmalloca:
0x0000c700      4883c720       add rdi, 0x20                           ; ../coreutils-8.31/lib/malloca.c:44 ; "@"
0x0000c704      722d           jb 0xc733
0x0000c706      4883ec08       sub rsp, 8
0x0000c70a      e8e159ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/malloca.c:52
0x0000c70f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/malloca.c:71
0x0000c711      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/malloca.c:54
0x0000c714      7415           je 0xc72b
0x0000c716      488d5010       lea rdx, [rax + 0x10]                   ; ../coreutils-8.31/lib/malloca.c:57
0x0000c71a      4883e2e0       and rdx, 0xffffffffffffffe0             ; ../coreutils-8.31/lib/malloca.c:58
0x0000c71e      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/lib/malloca.c:56
0x0000c722      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/malloca.c:65
0x0000c725      4829c1         sub rcx, rax
0x0000c728      884aff         mov byte [rdx - 1], cl
0x0000c72b      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/malloca.c:79
0x0000c72e      4883c408       add rsp, 8
0x0000c732      c3             ret
0x0000c733      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/malloca.c:71
0x0000c735      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/malloca.c:79
0x0000c738      c3             ret
0x0000c739      0f1f80000000.  nop dword [rax]
;-- freea:
0x0000c740      40f6c70f       test dil, 0xf                           ; ../coreutils-8.31/lib/malloca.c:84
0x0000c744      7516           jne 0xc75c
0x0000c746      40f6c710       test dil, 0x10                          ; ../coreutils-8.31/lib/malloca.c:92
0x0000c74a      7504           jne 0xc750
0x0000c74c      f3c3           ret
0x0000c74e      6690           nop
0x0000c750      0fb647ff       movzx eax, byte [rdi - 1]               ; ../coreutils-8.31/lib/malloca.c:94
0x0000c754      4829c7         sub rdi, rax
0x0000c757      e97456ffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/malloca.c:95
0x0000c75c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/malloca.c:84
0x0000c760      e87b56ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/malloca.c:89
0x0000c765      662e0f1f8400.  nop word cs:[rax + rax]
0x0000c76f      90             nop
;-- mbslen:
0x0000c770      4156           push r14                                ; ../coreutils-8.31/lib/mbslen.c:30
0x0000c772      4155           push r13                                ; /tring.h:87
0x0000c774      4154           push r12                                ; /strnlen1.h:9
0x0000c776      55             push rbp
0x0000c777      53             push rbx
0x0000c778      4889fb         mov rbx, rdi
0x0000c77b      4883ec50       sub rsp, 0x50
0x0000c77f      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/mbslen.c:30
0x0000c788      4889442448     mov qword [rsp + 0x48], rax
0x0000c78d      31c0           xor eax, eax
0x0000c78f      e85c57ffff     call sym.imp.__ctype_get_mb_cur_max     ; ../coreutils-8.31/lib/mbslen.c:31
0x0000c794      4883f801       cmp rax, 1
0x0000c798      7736           ja 0xc7d0
0x0000c79a      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbslen.c:43
0x0000c79d      e85e57ffff     call sym.imp.strlen
0x0000c7a2      4889c3         mov rbx, rax
0x0000c7a5      488b742448     mov rsi, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/mbslen.c:44
0x0000c7aa      644833342528.  xor rsi, qword fs:[0x28]
0x0000c7b3      4889d8         mov rax, rbx
0x0000c7b6      0f859d010000   jne 0xc959
0x0000c7bc      4883c450       add rsp, 0x50
0x0000c7c0      5b             pop rbx
0x0000c7c1      5d             pop rbp                                 ; ../coreutils-8.31/lib/mbchar.h:190
0x0000c7c2      415c           pop r12                                 ; /strnlen1.h:13
0x0000c7c4      415d           pop r13                                 ; /strnlen1.h:16
0x0000c7c6      415e           pop r14
0x0000c7c8      c3             ret                                     ; ../coreutils-8.31/lib/mbuiter.h:22
0x0000c7c9      0f1f80000000.  nop dword [rax]
0x0000c7d0      4889e5         mov rbp, rsp
0x0000c7d3      48895c2410     mov qword [rsp + 0x10], rbx
0x0000c7d8      c6042400       mov byte [rsp], 0
0x0000c7dc      48c744240400.  mov qword [rsp + 4], 0                  ; ../coreutils-8.31/lib/mbuiter.h:-110
0x0000c7e5      c644240c00     mov byte [rsp + 0xc], 0
0x0000c7ea      31db           xor ebx, ebx
0x0000c7ec      4c8d25ad4100.  lea r12, obj.is_basic_table             ; 0x109a0
0x0000c7f3      4c8d6d04       lea r13, [rbp + 4]
0x0000c7f7      eb5d           jmp 0xc856
0x0000c7f9      0f1f80000000.  nop dword [rax]
0x0000c800      488b4c2410     mov rcx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/mbuiter.h:-282
0x0000c805      0fb611         movzx edx, byte [rcx]                   ; ../coreutils-8.31/lib/mbuiter.h:-239
0x0000c808      89d0           mov eax, edx
0x0000c80a      c0e805         shr al, 5                               ; ../coreutils-8.31/lib/mbuiter.h:-283
0x0000c80d      83e007         and eax, 7
0x0000c810      418b0484       mov eax, dword [r12 + rax*4]
0x0000c814      0fa3d0         bt eax, edx
0x0000c817      0f83c3000000   jae 0xc8e0
0x0000c81d      48c744241801.  mov qword [rsp + 0x18], 1
0x0000c826      0fbe01         movsx eax, byte [rcx]
0x0000c829      c644242001     mov byte [rsp + 0x20], 1
0x0000c82e      c644240c01     mov byte [rsp + 0xc], 1
0x0000c833      89442424       mov dword [rsp + 0x24], eax
0x0000c837      8b442424       mov eax, dword [rsp + 0x24]
0x0000c83b      85c0           test eax, eax
0x0000c83d      0f8462ffffff   je 0xc7a5
0x0000c843      488b442418     mov rax, qword [rsp + 0x18]
0x0000c848      4801442410     add qword [rsp + 0x10], rax
0x0000c84d      4883c301       add rbx, 1
0x0000c851      c644240c00     mov byte [rsp + 0xc], 0
0x0000c856      803c2400       cmp byte [rsp], 0
0x0000c85a      74a4           je 0xc800
0x0000c85c      e88f56ffff     call sym.imp.__ctype_get_mb_cur_max
0x0000c861      4c8b742410     mov r14, qword [rsp + 0x10]
0x0000c866      4889c6         mov rsi, rax
0x0000c869      4c89f7         mov rdi, r14
0x0000c86c      e8dfc7ffff     call sym.strnlen1
0x0000c871      488d4d04       lea rcx, [rbp + 4]
0x0000c875      488d7d24       lea rdi, [rbp + 0x24]
0x0000c879      4889c2         mov rdx, rax
0x0000c87c      4c89f6         mov rsi, r14
0x0000c87f      e86cd7ffff     call sym.rpl_mbrtowc
0x0000c884      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000c888      4889442418     mov qword [rsp + 0x18], rax
0x0000c88d      7469           je 0xc8f8
0x0000c88f      4883f8fe       cmp rax, 0xfffffffffffffffe
0x0000c893      747b           je 0xc910
0x0000c895      4885c0         test rax, rax
0x0000c898      7523           jne 0xc8bd
0x0000c89a      488b442410     mov rax, qword [rsp + 0x10]
0x0000c89f      48c744241801.  mov qword [rsp + 0x18], 1
0x0000c8a8      803800         cmp byte [rax], 0
0x0000c8ab      0f85ad000000   jne 0xc95e                              ; /strnlen1.h:78
0x0000c8b1      8b542424       mov edx, dword [rsp + 0x24]
0x0000c8b5      85d2           test edx, edx
0x0000c8b7      0f85c0000000   jne 0xc97d
0x0000c8bd      488d7d04       lea rdi, [rbp + 4]
0x0000c8c1      c644242001     mov byte [rsp + 0x20], 1
0x0000c8c6      e8e559ffff     call sym.imp.mbsinit
0x0000c8cb      85c0           test eax, eax                           ; /strnlen1.h:99
0x0000c8cd      7461           je 0xc930
0x0000c8cf      c6042400       mov byte [rsp], 0
0x0000c8d3      c644240c01     mov byte [rsp + 0xc], 1
0x0000c8d8      e95affffff     jmp 0xc837
0x0000c8dd      0f1f00         nop dword [rax]
0x0000c8e0      4c89ef         mov rdi, r13
0x0000c8e3      e8c859ffff     call sym.imp.mbsinit
0x0000c8e8      85c0           test eax, eax
0x0000c8ea      744e           je 0xc93a
0x0000c8ec      c6042401       mov byte [rsp], 1
0x0000c8f0      e967ffffff     jmp 0xc85c
0x0000c8f5      0f1f00         nop dword [rax]
0x0000c8f8      48c744241801.  mov qword [rsp + 0x18], 1
0x0000c901      c644242000     mov byte [rsp + 0x20], 0
0x0000c906      e938ffffff     jmp 0xc843
0x0000c90b      0f1f440000     nop dword [rax + rax]
0x0000c910      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000c915      e8e655ffff     call sym.imp.strlen
0x0000c91a      c644242000     mov byte [rsp + 0x20], 0
0x0000c91f      4889442418     mov qword [rsp + 0x18], rax
0x0000c924      e91affffff     jmp 0xc843
0x0000c929      0f1f80000000.  nop dword [rax]
0x0000c930      c644240c01     mov byte [rsp + 0xc], 1
0x0000c935      e9fdfeffff     jmp 0xc837
0x0000c93a      488d0d9f4000.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x109e0 ; "mbuiter_multi_next"
0x0000c941      488d35103700.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000c948      488d3d3b3700.  lea rdi, str.mbsinit___iter__state      ; 0x1008a ; "mbsinit (&iter->state)"
0x0000c94f      ba96000000     mov edx, 0x96                           ; /strnlen1.h:126
0x0000c954      e88756ffff     call sym.imp.__assert_fail
0x0000c959      e8c255ffff     call sym.imp.__stack_chk_fail
0x0000c95e      488d0d7b4000.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x109e0 ; "mbuiter_multi_next"
0x0000c965      488d35ec3600.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000c96c      488d3d2e3700.  lea rdi, str.iter__cur.ptr_______0      ; 0x100a1 ; "*iter->cur.ptr == '\0'"
0x0000c973      bab2000000     mov edx, 0xb2
0x0000c978      e86356ffff     call sym.imp.__assert_fail
0x0000c97d      488d0d5c4000.  lea rcx, obj.__PRETTY_FUNCTION__.5021   ; 0x109e0 ; "mbuiter_multi_next"
0x0000c984      488d35cd3600.  lea rsi, str..._coreutils_8.31_lib_mbuiter.h ; 0x10058 ; "../coreutils-8.31/lib/mbuiter.h"
0x0000c98b      488d3de63600.  lea rdi, str.iter__cur.wc____0          ; 0x10078 ; "iter->cur.wc == 0"
0x0000c992      bab3000000     mov edx, 0xb3                           ; /strnlen1.h:142
0x0000c997      e84456ffff     call sym.imp.__assert_fail
0x0000c99c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x0000c9a0      4157           push r15                                ; /strnlen1.h:147
0x0000c9a2      4156           push r14
0x0000c9a4      4989d7         mov r15, rdx
0x0000c9a7      4155           push r13
0x0000c9a9      4154           push r12
0x0000c9ab      4c8d257e6020.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x212a30
0x0000c9b2      55             push rbp
0x0000c9b3      488d2d7e6020.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x212a38 ; "P&"
0x0000c9ba      53             push rbx
0x0000c9bb      4189fd         mov r13d, edi
0x0000c9be      4989f6         mov r14, rsi
0x0000c9c1      4c29e5         sub rbp, r12
0x0000c9c4      4883ec08       sub rsp, 8
0x0000c9c8      48c1fd03       sar rbp, 3
0x0000c9cc      e8b753ffff     call sym._init
0x0000c9d1      4885ed         test rbp, rbp
0x0000c9d4      7420           je 0xc9f6
0x0000c9d6      31db           xor ebx, ebx
0x0000c9d8      0f1f84000000.  nop dword [rax + rax]
0x0000c9e0      4c89fa         mov rdx, r15
0x0000c9e3      4c89f6         mov rsi, r14
0x0000c9e6      4489ef         mov edi, r13d
0x0000c9e9      41ff14dc       call qword [r12 + rbx*8]
0x0000c9ed      4883c301       add rbx, 1
0x0000c9f1      4839dd         cmp rbp, rbx
0x0000c9f4      75ea           jne 0xc9e0
0x0000c9f6      4883c408       add rsp, 8
0x0000c9fa      5b             pop rbx
0x0000c9fb      5d             pop rbp
0x0000c9fc      415c           pop r12
0x0000c9fe      415d           pop r13
0x0000ca00      415e           pop r14
0x0000ca02      415f           pop r15
0x0000ca04      c3             ret
0x0000ca05      90             nop
0x0000ca06      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000ca10      f3c3           ret
0x0000ca12      662e0f1f8400.  nop word cs:[rax + rax]
0x0000ca1c      0f1f4000       nop dword [rax]
;-- atexit:
0x0000ca20      488b15e16520.  mov rdx, qword [obj.__dso_handle]       ; [0x213008:8]=0x213008 obj.__dso_handle
0x0000ca27      31f6           xor esi, esi
0x0000ca29      e9f257ffff     jmp sym.imp.__cxa_atexit
0x0000ca2e      0000           add byte [rax], al
