;-- section..plt:
;-- .plt:
0x000015a0      ff356a882000   push qword [0x00209e10]                 ; [12] -r-x section size 848 named .plt
0x000015a6      ff256c882000   jmp qword [0x00209e18]                  ; [0x209e18:8]=0
0x000015ac      0f1f4000       nop dword [rax]
;-- imp.free:
0x000015b0      ff256a882000   jmp qword [reloc.free]                  ; [0x209e20:8]=0x15b6
0x000015b6      6800000000     push 0
0x000015bb      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x000015c0      ff2562882000   jmp qword [reloc.abort]                 ; [0x209e28:8]=0x15c6
0x000015c6      6801000000     push 1
0x000015cb      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000015d0      ff255a882000   jmp qword [reloc.__errno_location]      ; [0x209e30:8]=0x15d6
0x000015d6      6802000000     push 2
0x000015db      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000015e0      ff2552882000   jmp qword [reloc.strncmp]               ; [0x209e38:8]=0x15e6
0x000015e6      6803000000     push 3
0x000015eb      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x000015f0      ff254a882000   jmp qword [reloc._exit]                 ; [0x209e40:8]=0x15f6
0x000015f6      6804000000     push 4
0x000015fb      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001600      ff2542882000   jmp qword [reloc.__fpending]            ; [0x209e48:8]=0x1606
0x00001606      6805000000     push 5
0x0000160b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001610      ff253a882000   jmp qword [reloc.fcntl]                 ; [0x209e50:8]=0x1616
0x00001616      6806000000     push 6
0x0000161b      e980ffffff     jmp sym..plt
;-- imp.fread_unlocked:
0x00001620      ff2532882000   jmp qword [reloc.fread_unlocked]        ; [0x209e58:8]=0x1626 ; "&\x16"
0x00001626      6807000000     push 7
0x0000162b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001630      ff252a882000   jmp qword [reloc.textdomain]            ; [0x209e60:8]=0x1636 ; "6\x16"
0x00001636      6808000000     push 8
0x0000163b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x00001640      ff2522882000   jmp qword [reloc.fclose]                ; [0x209e68:8]=0x1646 ; "F\x16"
0x00001646      6809000000     push 9
0x0000164b      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001650      ff251a882000   jmp qword [reloc.bindtextdomain]        ; [0x209e70:8]=0x1656 ; "V\x16"
0x00001656      680a000000     push 0xa
0x0000165b      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001660      ff2512882000   jmp qword [reloc.dcgettext]             ; [0x209e78:8]=0x1666 ; "f\x16"
0x00001666      680b000000     push 0xb
0x0000166b      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001670      ff250a882000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e80:8]=0x1676 ; "v\x16"
0x00001676      680c000000     push 0xc
0x0000167b      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001680      ff2502882000   jmp qword [reloc.strlen]                ; [0x209e88:8]=0x1686
0x00001686      680d000000     push 0xd
0x0000168b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001690      ff25fa872000   jmp qword [reloc.__stack_chk_fail]      ; [0x209e90:8]=0x1696
0x00001696      680e000000     push 0xe
0x0000169b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000016a0      ff25f2872000   jmp qword [reloc.getopt_long]           ; [0x209e98:8]=0x16a6
0x000016a6      680f000000     push 0xf
0x000016ab      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016b0      ff25ea872000   jmp qword [reloc.mbrtowc]               ; [0x209ea0:8]=0x16b6
0x000016b6      6810000000     push 0x10
0x000016bb      e9e0feffff     jmp sym..plt
;-- imp.strchr:
0x000016c0      ff25e2872000   jmp qword [reloc.strchr]                ; [0x209ea8:8]=0x16c6
0x000016c6      6811000000     push 0x11
0x000016cb      e9d0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016d0      ff25da872000   jmp qword [reloc.__overflow]            ; [0x209eb0:8]=0x16d6
0x000016d6      6812000000     push 0x12
0x000016db      e9c0feffff     jmp sym..plt
;-- imp.strrchr:
0x000016e0      ff25d2872000   jmp qword [reloc.strrchr]               ; [0x209eb8:8]=0x16e6
0x000016e6      6813000000     push 0x13
0x000016eb      e9b0feffff     jmp sym..plt
;-- imp.lseek:
0x000016f0      ff25ca872000   jmp qword [reloc.lseek]                 ; [0x209ec0:8]=0x16f6
0x000016f6      6814000000     push 0x14
0x000016fb      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001700      ff25c2872000   jmp qword [reloc.memset]                ; [0x209ec8:8]=0x1706
0x00001706      6815000000     push 0x15
0x0000170b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001710      ff25ba872000   jmp qword [reloc.close]                 ; [0x209ed0:8]=0x1716
0x00001716      6816000000     push 0x16
0x0000171b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001720      ff25b2872000   jmp qword [reloc.posix_fadvise]         ; [0x209ed8:8]=0x1726 ; "&\x17"
0x00001726      6817000000     push 0x17
0x0000172b      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x00001730      ff25aa872000   jmp qword [reloc.memcmp]                ; [0x209ee0:8]=0x1736 ; "6\x17"
0x00001736      6818000000     push 0x18
0x0000173b      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001740      ff25a2872000   jmp qword [reloc.fputs_unlocked]        ; [0x209ee8:8]=0x1746 ; "F\x17"
0x00001746      6819000000     push 0x19
0x0000174b      e950feffff     jmp sym..plt
;-- imp.calloc:
0x00001750      ff259a872000   jmp qword [reloc.calloc]                ; [0x209ef0:8]=0x1756 ; "V\x17"
0x00001756      681a000000     push 0x1a
0x0000175b      e940feffff     jmp sym..plt
;-- imp.__getdelim:
0x00001760      ff2592872000   jmp qword [reloc.__getdelim]            ; [0x209ef8:8]=0x1766 ; "f\x17"
0x00001766      681b000000     push 0x1b
0x0000176b      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x00001770      ff258a872000   jmp qword [reloc.memcpy]                ; [0x209f00:8]=0x1776 ; "v\x17"
0x00001776      681c000000     push 0x1c
0x0000177b      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001780      ff2582872000   jmp qword [reloc.fileno]                ; [0x209f08:8]=0x1786
0x00001786      681d000000     push 0x1d
0x0000178b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001790      ff257a872000   jmp qword [reloc.malloc]                ; [0x209f10:8]=0x1796
0x00001796      681e000000     push 0x1e
0x0000179b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000017a0      ff2572872000   jmp qword [reloc.fflush]                ; [0x209f18:8]=0x17a6
0x000017a6      681f000000     push 0x1f
0x000017ab      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x000017b0      ff256a872000   jmp qword [reloc.nl_langinfo]           ; [0x209f20:8]=0x17b6
0x000017b6      6820000000     push 0x20                               ; "@"
0x000017bb      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x000017c0      ff2562872000   jmp qword [reloc.__freading]            ; [0x209f28:8]=0x17c6
0x000017c6      6821000000     push 0x21                               ; '!'
0x000017cb      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x000017d0      ff255a872000   jmp qword [reloc.fwrite_unlocked]       ; [0x209f30:8]=0x17d6
0x000017d6      6822000000     push 0x22                               ; '"'
0x000017db      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x000017e0      ff2552872000   jmp qword [reloc.realloc]               ; [0x209f38:8]=0x17e6
0x000017e6      6823000000     push 0x23                               ; '#'
0x000017eb      e9b0fdffff     jmp sym..plt
;-- imp.fdopen:
0x000017f0      ff254a872000   jmp qword [reloc.fdopen]                ; [0x209f40:8]=0x17f6
0x000017f6      6824000000     push 0x24                               ; '$'
0x000017fb      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001800      ff2542872000   jmp qword [reloc.setlocale]             ; [0x209f48:8]=0x1806
0x00001806      6825000000     push 0x25                               ; '%'
0x0000180b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001810      ff253a872000   jmp qword [reloc.__printf_chk]          ; [0x209f50:8]=0x1816
0x00001816      6826000000     push 0x26                               ; '&'
0x0000181b      e980fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001820      ff2532872000   jmp qword [reloc.setvbuf]               ; [0x209f58:8]=0x1826 ; "&\x18"
0x00001826      6827000000     push 0x27                               ; '''
0x0000182b      e970fdffff     jmp sym..plt
;-- imp.error:
0x00001830      ff252a872000   jmp qword [reloc.error]                 ; [0x209f60:8]=0x1836 ; "6\x18"
0x00001836      6828000000     push 0x28                               ; '('
0x0000183b      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001840      ff2522872000   jmp qword [reloc.fseeko]                ; [0x209f68:8]=0x1846 ; "F\x18"
0x00001846      6829000000     push 0x29                               ; ')'
0x0000184b      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x00001850      ff251a872000   jmp qword [reloc.fopen]                 ; [0x209f70:8]=0x1856 ; "V\x18"
0x00001856      682a000000     push 0x2a                               ; '*'
0x0000185b      e940fdffff     jmp sym..plt
;-- imp.dcngettext:
0x00001860      ff2512872000   jmp qword [reloc.dcngettext]            ; [0x209f78:8]=0x1866 ; "f\x18"
0x00001866      682b000000     push 0x2b                               ; '+'
0x0000186b      e930fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001870      ff250a872000   jmp qword [reloc.__cxa_atexit]          ; [0x209f80:8]=0x1876 ; "v\x18"
0x00001876      682c000000     push 0x2c                               ; ','
0x0000187b      e920fdffff     jmp sym..plt
;-- imp.exit:
0x00001880      ff2502872000   jmp qword [reloc.exit]                  ; [0x209f88:8]=0x1886
0x00001886      682d000000     push 0x2d                               ; '-'
0x0000188b      e910fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001890      ff25fa862000   jmp qword [reloc.fwrite]                ; [0x209f90:8]=0x1896
0x00001896      682e000000     push 0x2e                               ; '.'
0x0000189b      e900fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018a0      ff25f2862000   jmp qword [reloc.__fprintf_chk]         ; [0x209f98:8]=0x18a6
0x000018a6      682f000000     push 0x2f                               ; '/'
0x000018ab      e9f0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018b0      ff25ea862000   jmp qword [reloc.mbsinit]               ; [0x209fa0:8]=0x18b6
0x000018b6      6830000000     push 0x30                               ; '0'
0x000018bb      e9e0fcffff     jmp sym..plt
;-- imp.iswprint:
0x000018c0      ff25e2862000   jmp qword [reloc.iswprint]              ; [0x209fa8:8]=0x18c6
0x000018c6      6831000000     push 0x31                               ; '1'
0x000018cb      e9d0fcffff     jmp sym..plt
;-- imp.__ctype_tolower_loc:
0x000018d0      ff25da862000   jmp qword [reloc.__ctype_tolower_loc]   ; [0x209fb0:8]=0x18d6
0x000018d6      6832000000     push 0x32                               ; '2'
0x000018db      e9c0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000018e0      ff25d2862000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fb8:8]=0x18e6
0x000018e6      6833000000     push 0x33                               ; '3'
0x000018eb      e9b0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x000018f0      .qword 0x9066002086ea25ff                              ; [13] -r-x section size 8 named .plt.got
0x000018f8      0000           add byte [rax], al
0x000018fa      0000           add byte [rax], al
0x000018fc      0000           add byte [rax], al
0x000018fe      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001900      4157           push r15                                ; [14] -r-x section size 21774 named .text
0x00001902      4156           push r14
0x00001904      4155           push r13
0x00001906      4154           push r12
0x00001908      4189fc         mov r12d, edi
0x0000190b      55             push rbp
0x0000190c      53             push rbx
0x0000190d      4889f3         mov rbx, rsi
0x00001910      bdffffffff     mov ebp, 0xffffffff                     ; -1
0x00001915      4881ece80000.  sub rsp, 0xe8
0x0000191c      488b3e         mov rdi, qword [rsi]
0x0000191f      64488b042528.  mov rax, qword fs:[0x28]
0x00001928      48898424d800.  mov qword [rsp + 0xd8], rax
0x00001930      31c0           xor eax, eax
0x00001932      e809290000     call sym.set_program_name
0x00001937      488d35836600.  lea rsi, [0x00007fc1]
0x0000193e      bf06000000     mov edi, 6
0x00001943      e8b8feffff     call sym.imp.setlocale
0x00001948      488d35925500.  lea rsi, str.usr_local_share_locale     ; 0x6ee1 ; "/usr/local/share/locale"
0x0000194f      488d3d625500.  lea rdi, [0x00006eb8]                   ; "coreutils"
0x00001956      e8f5fcffff     call sym.imp.bindtextdomain
0x0000195b      488d3d565500.  lea rdi, [0x00006eb8]                   ; "coreutils"
0x00001962      e8c9fcffff     call sym.imp.textdomain
0x00001967      488d3db21900.  lea rdi, sym.close_stdout               ; 0x3320 ; "USH\x83\xec\bH\x8b={m "
0x0000196e      e88d540000     call sym.atexit
0x00001973      488b3d2e8720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000197a      31c9           xor ecx, ecx
0x0000197c      ba01000000     mov edx, 1
0x00001981      31f6           xor esi, esi
0x00001983      e898feffff     call sym.imp.setvbuf
0x00001988      c644247800     mov byte [rsp + 0x78], 0
0x0000198d      c644242b00     mov byte [rsp + 0x2b], 0
0x00001992      660f1f440000   nop word [rax + rax]
0x00001998      488d0d818020.  lea rcx, obj.long_options               ; 0x209a20
0x0000199f      488d157c5500.  lea rdx, str.bctwz                      ; 0x6f22 ; "bctwz"
0x000019a6      4531c0         xor r8d, r8d
0x000019a9      4889de         mov rsi, rbx
0x000019ac      4489e7         mov edi, r12d
0x000019af      e8ecfcffff     call sym.imp.getopt_long
0x000019b4      83f8ff         cmp eax, 0xffffffff
0x000019b7      0f847f010000   je 0x1b3c
0x000019bd      83f877         cmp eax, 0x77
0x000019c0      0f84da000000   je 0x1aa0
0x000019c6      7e38           jle 0x1a00
0x000019c8      3d81000000     cmp eax, 0x81
0x000019cd      0f841d010000   je 0x1af0
0x000019d3      7e53           jle 0x1a28
0x000019d5      3d83000000     cmp eax, 0x83
0x000019da      0f8400010000   je 0x1ae0
0x000019e0      0f8cda000000   jl 0x1ac0
0x000019e6      3d84000000     cmp eax, 0x84
0x000019eb      0f85df010000   jne 0x1bd0
0x000019f1      c644247801     mov byte [rsp + 0x78], 1
0x000019f6      bd01000000     mov ebp, 1
0x000019fb      eb9b           jmp 0x1998
0x000019fd      0f1f00         nop dword [rax]
0x00001a00      83f862         cmp eax, 0x62
0x00001a03      0f8417010000   je 0x1b20
0x00001a09      7e45           jle 0x1a50
0x00001a0b      83f863         cmp eax, 0x63
0x00001a0e      0f84fc000000   je 0x1b10
0x00001a14      83f874         cmp eax, 0x74
0x00001a17      0f85b3010000   jne 0x1bd0
0x00001a1d      31ed           xor ebp, ebp
0x00001a1f      e974ffffff     jmp 0x1998
0x00001a24      0f1f4000       nop dword [rax]
0x00001a28      83f87a         cmp eax, 0x7a
0x00001a2b      0f84ff000000   je 0x1b30
0x00001a31      83c080         add eax, 0xffffff80
0x00001a34      0f8596010000   jne 0x1bd0
0x00001a3a      c605b1862000.  mov byte [obj.ignore_missing], 1        ; [0x20a0f2:1]=0
0x00001a41      e952ffffff     jmp 0x1998
0x00001a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00001a50      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a55      0f85760f0000   jne 0x29d1
0x00001a5b      488d05b35400.  lea rax, str.David_Madore               ; 0x6f15 ; "David Madore"
0x00001a62      488b3d3f8620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00001a69      488b0da88520.  mov rcx, qword [obj.Version]            ; [0x20a018:8]=0x79e0
0x00001a70      6a00           push 0
0x00001a72      4c8d0d805400.  lea r9, str.Scott_Miller                ; 0x6ef9 ; "Scott Miller"
0x00001a79      4c8d05865400.  lea r8, str.Ulrich_Drepper              ; 0x6f06 ; "Ulrich Drepper"
0x00001a80      50             push rax
0x00001a81      488d152c5400.  lea rdx, str.GNU_coreutils              ; 0x6eb4 ; "GNU coreutils"
0x00001a88      488d359b5300.  lea rsi, str.md5sum                     ; 0x6e2a ; "md5sum"
0x00001a8f      31c0           xor eax, eax
0x00001a91      e8aa490000     call sym.version_etc
0x00001a96      31ff           xor edi, edi
0x00001a98      e8e3fdffff     call sym.imp.exit
0x00001a9d      0f1f00         nop dword [rax]
0x00001aa0      c6054d862000.  mov byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x00001aa7      c60545862000.  mov byte [obj.warn], 1                  ; [0x20a0f3:1]=0
0x00001aae      c6053c862000.  mov byte [obj.quiet], 0                 ; [0x20a0f1:1]=0
0x00001ab5      e9defeffff     jmp 0x1998
0x00001aba      660f1f440000   nop word [rax + rax]
0x00001ac0      c6052d862000.  mov byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x00001ac7      c60525862000.  mov byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x00001ace      c6051c862000.  mov byte [obj.quiet], 1                 ; [0x20a0f1:1]=0
0x00001ad5      e9befeffff     jmp 0x1998
0x00001ada      660f1f440000   nop word [rax + rax]
0x00001ae0      c60509862000.  mov byte [obj.strict], 1                ; [0x20a0f0:1]=0
0x00001ae7      e9acfeffff     jmp 0x1998
0x00001aec      0f1f4000       nop dword [rax]
0x00001af0      c605fd852000.  mov byte [obj.status_only], 1           ; [0x20a0f4:1]=0
0x00001af7      c605f5852000.  mov byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x00001afe      c605ec852000.  mov byte [obj.quiet], 0                 ; [0x20a0f1:1]=0
0x00001b05      e98efeffff     jmp 0x1998
0x00001b0a      660f1f440000   nop word [rax + rax]
0x00001b10      c644242b01     mov byte [rsp + 0x2b], 1
0x00001b15      e97efeffff     jmp 0x1998
0x00001b1a      660f1f440000   nop word [rax + rax]
0x00001b20      bd01000000     mov ebp, 1
0x00001b25      e96efeffff     jmp 0x1998
0x00001b2a      660f1f440000   nop word [rax + rax]
0x00001b30      c605d9842000.  mov byte [obj.delim], 0                 ; [0x20a010:1]=10 ; "\n"
0x00001b37      e95cfeffff     jmp 0x1998
0x00001b3c      85ed           test ebp, ebp
0x00001b3e      48c705b78520.  mov qword [obj.min_digest_line_length], 0x22 ; '"'
                                                                       ; [0x20a100:8]=0
0x00001b49      48c705a48520.  mov qword [obj.digest_hex_bytes], 0x20  ; [0x20a0f8:8]=0
0x00001b54      0f94c0         sete al
0x00001b57      84442478       test byte [rsp + 0x78], al
0x00001b5b      0f85ba0e0000   jne 0x2a1b
0x00001b61      803da8842000.  cmp byte [obj.delim], 0xa               ; [0x20a010:1]=10 ; "\n"
0x00001b68      7470           je 0x1bda
0x00001b6a      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001b6f      ba05000000     mov edx, 5
0x00001b74      488d35ad5a00.  lea rsi, str.the___zero_option_is_not_supported_when_verifying_checksums ; 0x7628 ; "the --zero option is not supported when verifying checksums"
0x00001b7b      753e           jne 0x1bbb
0x00001b7d      803d6e852000.  cmp byte [obj.ignore_missing], 0        ; [0x20a0f2:1]=0
0x00001b84      0f85a20e0000   jne 0x2a2c
0x00001b8a      803d63852000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x00001b91      0f85690e0000   jne 0x2a00
0x00001b97      803d55852000.  cmp byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x00001b9e      0f8401030000   je 0x1ea5
0x00001ba4      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ba9      ba05000000     mov edx, 5
0x00001bae      488d35cb5b00.  lea rsi, str.the___warn_option_is_meaningful_only_when_verifying_checksums ; 0x7780 ; "the --warn option is meaningful only when verifying checksums"
0x00001bb5      0f8582000000   jne 0x1c3d
0x00001bbb      31ff           xor edi, edi
0x00001bbd      e89efaffff     call sym.imp.dcgettext
0x00001bc2      31f6           xor esi, esi
0x00001bc4      4889c2         mov rdx, rax
0x00001bc7      31ff           xor edi, edi
0x00001bc9      31c0           xor eax, eax
0x00001bcb      e860fcffff     call sym.imp.error
0x00001bd0      bf01000000     mov edi, 1
0x00001bd5      e8c6120000     call sym.usage
0x00001bda      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bdf      7413           je 0x1bf4
0x00001be1      807c247800     cmp byte [rsp + 0x78], 0
0x00001be6      ba05000000     mov edx, 5
0x00001beb      488d35765a00.  lea rsi, str.the___tag_option_is_meaningless_when_verifying_checksums ; 0x7668 ; "the --tag option is meaningless when verifying checksums"
0x00001bf2      75c7           jne 0x1bbb
0x00001bf4      85ed           test ebp, ebp
0x00001bf6      7813           js 0x1c0b
0x00001bf8      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001bfd      ba05000000     mov edx, 5
0x00001c02      488d359f5a00.  lea rsi, str.the___binary_and___text_options_are_meaningless_when_verifying_checksums ; 0x76a8 ; "the --binary and --text options are meaningless when verifying checksums"
0x00001c09      75b0           jne 0x1bbb
0x00001c0b      803de0842000.  cmp byte [obj.ignore_missing], 0        ; [0x20a0f2:1]=0
0x00001c12      0f84d00d0000   je 0x29e8
0x00001c18      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001c1d      0f84090e0000   je 0x2a2c
0x00001c23      803dca842000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x00001c2a      0f847d090000   je 0x25ad
0x00001c30      803dbc842000.  cmp byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x00001c37      0f8468020000   je 0x1ea5
0x00001c3d      83fdff         cmp ebp, 0xffffffff
0x00001c40      7502           jne 0x1c44
0x00001c42      31ed           xor ebp, ebp
0x00001c44      4963c4         movsxd rax, r12d
0x00001c47      488d04c3       lea rax, [rbx + rax*8]
0x00001c4b      4889442448     mov qword [rsp + 0x48], rax
0x00001c50      486305618420.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b8:4]=0
0x00001c57      4439e0         cmp eax, r12d
0x00001c5a      7519           jne 0x1c75
0x00001c5c      488b7c2448     mov rdi, qword [rsp + 0x48]
0x00001c61      488d351a5e00.  lea rsi, [0x00007a82]                   ; "-"
0x00001c68      4883c708       add rdi, 8
0x00001c6c      488977f8       mov qword [rdi - 8], rsi
0x00001c70      48897c2448     mov qword [rsp + 0x48], rdi
0x00001c75      488d04c3       lea rax, [rbx + rax*8]
0x00001c79      4839442448     cmp qword [rsp + 0x48], rax
0x00001c7e      4889442418     mov qword [rsp + 0x18], rax
0x00001c83      0f86ab0c0000   jbe 0x2934
0x00001c89      83fd01         cmp ebp, 1
0x00001c8c      4c8d353d5d00.  lea r14, obj.bin2hex.7139               ; 0x79d0 ; "0123456789abcdef8.31"
0x00001c93      c644247901     mov byte [rsp + 0x79], 1
0x00001c98      19c0           sbb eax, eax
0x00001c9a      83e0f6         and eax, 0xfffffff6                     ; 4294967286
0x00001c9d      83c02a         add eax, 0x2a
0x00001ca0      8944247c       mov dword [rsp + 0x7c], eax
0x00001ca4      8844247b       mov byte [rsp + 0x7b], al
0x00001ca8      0f1f84000000.  nop dword [rax + rax]
0x00001cb0      488b442418     mov rax, qword [rsp + 0x18]
0x00001cb5      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001cba      488b30         mov rsi, qword [rax]
0x00001cbd      4889742420     mov qword [rsp + 0x20], rsi
0x00001cc2      0f8478060000   je 0x2340
0x00001cc8      488d3db35d00.  lea rdi, [0x00007a82]                   ; "-"
0x00001ccf      b902000000     mov ecx, 2
0x00001cd4      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cd6      0f97c0         seta al
0x00001cd9      1c00           sbb al, 0
0x00001cdb      0fbec0         movsx eax, al
0x00001cde      85c0           test eax, eax
0x00001ce0      8944242c       mov dword [rsp + 0x2c], eax
0x00001ce4      0f852b070000   jne 0x2415
0x00001cea      488d35375200.  lea rsi, str.standard_input             ; 0x6f28 ; "standard input"
0x00001cf1      ba05000000     mov edx, 5
0x00001cf6      31ff           xor edi, edi
0x00001cf8      c60509842000.  mov byte [obj.have_read_stdin], 1       ; [0x20a108:1]=0
0x00001cff      e85cf9ffff     call sym.imp.dcgettext
0x00001d04      4c8b25a58320.  mov r12, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00001d0b      4889442420     mov qword [rsp + 0x20], rax
0x00001d10      488d84249800.  lea rax, [rsp + 0x98]
0x00001d18      48c784249000.  mov qword [rsp + 0x90], 0
0x00001d24      48c784249800.  mov qword [rsp + 0x98], 0
0x00001d30      c644247a00     mov byte [rsp + 0x7a], 0
0x00001d35      c644243000     mov byte [rsp + 0x30], 0
0x00001d3a      4531ed         xor r13d, r13d
0x00001d3d      4889442410     mov qword [rsp + 0x10], rax
0x00001d42      488d84249000.  lea rax, [rsp + 0x90]
0x00001d4a      48c744245800.  mov qword [rsp + 0x58], 0
0x00001d53      48c744245000.  mov qword [rsp + 0x50], 0
0x00001d5c      bd01000000     mov ebp, 1
0x00001d61      4889442408     mov qword [rsp + 8], rax
0x00001d66      488d84248f00.  lea rax, [rsp + 0x8f]
0x00001d6e      4889442440     mov qword [rsp + 0x40], rax
0x00001d73      488d8424c000.  lea rax, [rsp + 0xc0]
0x00001d7b      4889442438     mov qword [rsp + 0x38], rax
0x00001d80      488b742410     mov rsi, qword [rsp + 0x10]
0x00001d85      488b7c2408     mov rdi, qword [rsp + 8]
0x00001d8a      4c89e1         mov rcx, r12
0x00001d8d      ba0a000000     mov edx, 0xa
0x00001d92      e8c9f9ffff     call sym.imp.__getdelim
0x00001d97      4885c0         test rax, rax
0x00001d9a      0f8efc020000   jle 0x209c
0x00001da0      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001da8      0fb60b         movzx ecx, byte [rbx]
0x00001dab      80f923         cmp cl, 0x23
0x00001dae      0f84a1000000   je 0x1e55
0x00001db4      807c03ff0a     cmp byte [rbx + rax - 1], 0xa
0x00001db9      4989c7         mov r15, rax
0x00001dbc      7514           jne 0x1dd2
0x00001dbe      4983ef01       sub r15, 1
0x00001dc2      42c6043b00     mov byte [rbx + r15], 0
0x00001dc7      488b9c249000.  mov rbx, qword [rsp + 0x90]
0x00001dcf      0fb60b         movzx ecx, byte [rbx]
0x00001dd2      80f909         cmp cl, 9
0x00001dd5      7407           je 0x1dde
0x00001dd7      31d2           xor edx, edx
0x00001dd9      80f920         cmp cl, 0x20                            ; "@"
0x00001ddc      7514           jne 0x1df2
0x00001dde      31d2           xor edx, edx
0x00001de0      4883c201       add rdx, 1
0x00001de4      0fb60c13       movzx ecx, byte [rbx + rdx]
0x00001de8      80f920         cmp cl, 0x20                            ; "@"
0x00001deb      74f3           je 0x1de0
0x00001ded      80f909         cmp cl, 9
0x00001df0      74ee           je 0x1de0
0x00001df2      4531c9         xor r9d, r9d
0x00001df5      80f95c         cmp cl, 0x5c
0x00001df8      750a           jne 0x1e04
0x00001dfa      440fb64c242b   movzx r9d, byte [rsp + 0x2b]
0x00001e00      4883c201       add rdx, 1
0x00001e04      4c8d0413       lea r8, [rbx + rdx]
0x00001e08      488d3d225000.  lea rdi, [0x00006e31]                   ; "MD5"
0x00001e0f      b903000000     mov ecx, 3
0x00001e14      4c89c6         mov rsi, r8
0x00001e17      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e19      0f97c0         seta al
0x00001e1c      1c00           sbb al, 0
0x00001e1e      84c0           test al, al
0x00001e20      0f85ca000000   jne 0x1ef0
0x00001e26      0fb6441303     movzx eax, byte [rbx + rdx + 3]
0x00001e2b      488d4a03       lea rcx, [rdx + 3]
0x00001e2f      3c20           cmp al, 0x20                            ; "@"
0x00001e31      7509           jne 0x1e3c
0x00001e33      0fb6441304     movzx eax, byte [rbx + rdx + 4]
0x00001e38      488d4a04       lea rcx, [rdx + 4]
0x00001e3c      3c28           cmp al, 0x28
0x00001e3e      0f8480050000   je 0x23c4
0x00001e44      4983c501       add r13, 1
0x00001e48      803da4822000.  cmp byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x00001e4f      0f857b030000   jne 0x21d0
0x00001e55      41f6042430     test byte [r12], 0x30
0x00001e5a      0f853c020000   jne 0x209c
0x00001e60      4883c501       add rbp, 1
0x00001e64      0f8516ffffff   jne 0x1d80
0x00001e6a      488b542420     mov rdx, qword [rsp + 0x20]
0x00001e6f      be03000000     mov esi, 3
0x00001e74      31ff           xor edi, edi
0x00001e76      e8053f0000     call sym.quotearg_n_style_colon
0x00001e7b      488d35b55000.  lea rsi, str.s:_too_many_checksum_lines ; 0x6f37 ; "%s: too many checksum lines"
0x00001e82      4889c3         mov rbx, rax
0x00001e85      ba05000000     mov edx, 5
0x00001e8a      31ff           xor edi, edi
0x00001e8c      e8cff7ffff     call sym.imp.dcgettext
0x00001e91      4889d9         mov rcx, rbx
0x00001e94      4889c2         mov rdx, rax
0x00001e97      31f6           xor esi, esi
0x00001e99      bf01000000     mov edi, 1
0x00001e9e      31c0           xor eax, eax
0x00001ea0      e88bf9ffff     call sym.imp.error
0x00001ea5      803d45822000.  cmp byte [obj.quiet], 1                 ; [0x20a0f1:1]=0
0x00001eac      7517           jne 0x1ec5
0x00001eae      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001eb3      ba05000000     mov edx, 5
0x00001eb8      488d35015900.  lea rsi, str.the___quiet_option_is_meaningful_only_when_verifying_checksums ; 0x77c0 ; "the --quiet option is meaningful only when verifying checksums"
0x00001ebf      0f84f6fcffff   je 0x1bbb
0x00001ec5      803d24822000.  cmp byte [obj.strict], 0                ; [0x20a0f0:1]=0
0x00001ecc      0f846bfdffff   je 0x1c3d
0x00001ed2      807c242b00     cmp byte [rsp + 0x2b], 0
0x00001ed7      ba05000000     mov edx, 5
0x00001edc      488d351d5900.  lea rsi, str.the___strict_option_is_meaningful_only_when_verifying_checksums ; 0x7800 ; "the --strict option is meaningful only when verifying checksums"
0x00001ee3      0f8554fdffff   jne 0x1c3d
0x00001ee9      e9cdfcffff     jmp 0x1bbb
0x00001eee      6690           nop
0x00001ef0      4c89f9         mov rcx, r15
0x00001ef3      31c0           xor eax, eax
0x00001ef5      4829d1         sub rcx, rdx
0x00001ef8      4180385c       cmp byte [r8], 0x5c
0x00001efc      0f94c0         sete al
0x00001eff      480305fa8120.  add rax, qword [obj.min_digest_line_length] ; [0x20a100:8]=0
0x00001f06      4839c1         cmp rcx, rax
0x00001f09      0f8235ffffff   jb 0x1e44
0x00001f0f      480315e28120.  add rdx, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x00001f16      488d0c13       lea rcx, [rbx + rdx]
0x00001f1a      0fb601         movzx eax, byte [rcx]
0x00001f1d      3c20           cmp al, 0x20                            ; "@"
0x00001f1f      7408           je 0x1f29
0x00001f21      3c09           cmp al, 9
0x00001f23      0f851bffffff   jne 0x1e44
0x00001f29      c60100         mov byte [rcx], 0
0x00001f2c      4c89c7         mov rdi, r8
0x00001f2f      4889542470     mov qword [rsp + 0x70], rdx
0x00001f34      44884c2468     mov byte [rsp + 0x68], r9b
0x00001f39      4c89442460     mov qword [rsp + 0x60], r8
0x00001f3e      e88d0c0000     call sym.hex_digits
0x00001f43      84c0           test al, al
0x00001f45      0f84f9feffff   je 0x1e44
0x00001f4b      488b542470     mov rdx, qword [rsp + 0x70]
0x00001f50      4c89f9         mov rcx, r15
0x00001f53      8b35bb802000   mov esi, dword [obj.bsd_reversed]       ; [0x20a014:4]=-1
0x00001f59      4c8b442460     mov r8, qword [rsp + 0x60]
0x00001f5e      440fb64c2468   movzx r9d, byte [rsp + 0x68]
0x00001f64      488d4201       lea rax, [rdx + 1]
0x00001f68      4829c1         sub rcx, rax
0x00001f6b      4883e901       sub rcx, 1
0x00001f6f      7417           je 0x1f88
0x00001f71      0fb64c1301     movzx ecx, byte [rbx + rdx + 1]
0x00001f76      80f920         cmp cl, 0x20                            ; "@"
0x00001f79      0f8465070000   je 0x26e4
0x00001f7f      80f92a         cmp cl, 0x2a
0x00001f82      0f845c070000   je 0x26e4
0x00001f88      85f6           test esi, esi
0x00001f8a      0f84b4feffff   je 0x1e44
0x00001f90      c7057a802000.  mov dword [obj.bsd_reversed], 1         ; [0x20a014:4]=-1
0x00001f9a      4801c3         add rbx, rax
0x00001f9d      4584c9         test r9b, r9b
0x00001fa0      0f859b070000   jne 0x2741
0x00001fa6      8b44242c       mov eax, dword [rsp + 0x2c]
0x00001faa      85c0           test eax, eax
0x00001fac      751e           jne 0x1fcc
0x00001fae      488d3dcd5a00.  lea rdi, [0x00007a82]                   ; "-"
0x00001fb5      b902000000     mov ecx, 2
0x00001fba      4889de         mov rsi, rbx
0x00001fbd      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001fbf      0f97c0         seta al
0x00001fc2      1c00           sbb al, 0
0x00001fc4      84c0           test al, al
0x00001fc6      0f8478feffff   je 0x1e44
0x00001fcc      4531ff         xor r15d, r15d
0x00001fcf      803d1e812000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x00001fd6      7521           jne 0x1ff9
0x00001fd8      be0a000000     mov esi, 0xa
0x00001fdd      4889df         mov rdi, rbx
0x00001fe0      4c89442430     mov qword [rsp + 0x30], r8
0x00001fe5      e8d6f6ffff     call sym.imp.strchr
0x00001fea      4c8b442430     mov r8, qword [rsp + 0x30]
0x00001fef      4531ff         xor r15d, r15d
0x00001ff2      4885c0         test rax, rax
0x00001ff5      410f95c7       setne r15b
0x00001ff9      488b542440     mov rdx, qword [rsp + 0x40]
0x00001ffe      488b742438     mov rsi, qword [rsp + 0x38]
0x00002003      4889df         mov rdi, rbx
0x00002006      4c89442430     mov qword [rsp + 0x30], r8
0x0000200b      e8f00c0000     call sym.digest_file.isra.1
0x00002010      84c0           test al, al
0x00002012      4189c1         mov r9d, eax
0x00002015      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000201a      0f8500020000   jne 0x2220
0x00002020      488344245001   add qword [rsp + 0x50], 1
0x00002026      803dc7802000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x0000202d      7559           jne 0x2088
0x0000202f      4585ff         test r15d, r15d
0x00002032      7420           je 0x2054
0x00002034      488b3d6d8020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000203b      488b4728       mov rax, qword [rdi + 0x28]
0x0000203f      483b4730       cmp rax, qword [rdi + 0x30]
0x00002043      0f831b090000   jae 0x2964
0x00002049      488d5001       lea rdx, [rax + 1]
0x0000204d      48895728       mov qword [rdi + 0x28], rdx
0x00002051      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002054      4489fe         mov esi, r15d
0x00002057      4889df         mov rdi, rbx
0x0000205a      e8d10b0000     call sym.print_filename
0x0000205f      488d35ed4e00.  lea rsi, str.FAILED_open_or_read        ; 0x6f53 ; "FAILED open or read"
0x00002066      ba05000000     mov edx, 5
0x0000206b      31ff           xor edi, edi
0x0000206d      e8eef5ffff     call sym.imp.dcgettext
0x00002072      488d35585f00.  lea rsi, [0x00007fd1]                   ; ": %s\n"
0x00002079      4889c2         mov rdx, rax
0x0000207c      bf01000000     mov edi, 1
0x00002081      31c0           xor eax, eax
0x00002083      e888f7ffff     call sym.imp.__printf_chk
0x00002088      0fb644242b     movzx eax, byte [rsp + 0x2b]
0x0000208d      41f6042430     test byte [r12], 0x30
0x00002092      88442430       mov byte [rsp + 0x30], al
0x00002096      0f84c4fdffff   je 0x1e60
0x0000209c      488bbc249000.  mov rdi, qword [rsp + 0x90]
0x000020a4      e807f5ffff     call sym.imp.free
0x000020a9      418b1c24       mov ebx, dword [r12]
0x000020ad      83e320         and ebx, 0x20                           ; "@"
0x000020b0      0f85b8040000   jne 0x256e
0x000020b6      837c242c00     cmp dword [rsp + 0x2c], 0
0x000020bb      0f8567050000   jne 0x2628
0x000020c1      807c243000     cmp byte [rsp + 0x30], 0
0x000020c6      0f8479050000   je 0x2645
0x000020cc      803d21802000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x000020d3      0f8585040000   jne 0x255e
0x000020d9      4d85ed         test r13, r13
0x000020dc      742f           je 0x210d
0x000020de      488d15c35700.  lea rdx, str.WARNING:__lu_lines_are_improperly_formatted ; 0x78a8 ; "WARNING: %lu lines are improperly formatted"
0x000020e5      488d35ec5700.  lea rsi, str.WARNING:__lu_line_is_improperly_formatted ; 0x78d8 ; "WARNING: %lu line is improperly formatted"
0x000020ec      4c89e9         mov rcx, r13
0x000020ef      31ff           xor edi, edi
0x000020f1      41b805000000   mov r8d, 5
0x000020f7      e864f7ffff     call sym.imp.dcngettext
0x000020fc      4c89e9         mov rcx, r13
0x000020ff      4889c2         mov rdx, rax
0x00002102      31f6           xor esi, esi
0x00002104      31ff           xor edi, edi
0x00002106      31c0           xor eax, eax
0x00002108      e823f7ffff     call sym.imp.error
0x0000210d      48837c245000   cmp qword [rsp + 0x50], 0
0x00002113      7434           je 0x2149
0x00002115      4c8b7c2450     mov r15, qword [rsp + 0x50]
0x0000211a      488d15e75700.  lea rdx, str.WARNING:__lu_listed_files_could_not_be_read ; 0x7908 ; "WARNING: %lu listed files could not be read"
0x00002121      488d35105800.  lea rsi, str.WARNING:__lu_listed_file_could_not_be_read ; 0x7938 ; "WARNING: %lu listed file could not be read"
0x00002128      31ff           xor edi, edi
0x0000212a      41b805000000   mov r8d, 5
0x00002130      4c89f9         mov rcx, r15
0x00002133      e828f7ffff     call sym.imp.dcngettext
0x00002138      4c89f9         mov rcx, r15
0x0000213b      4889c2         mov rdx, rax
0x0000213e      31f6           xor esi, esi
0x00002140      31ff           xor edi, edi
0x00002142      31c0           xor eax, eax
0x00002144      e8e7f6ffff     call sym.imp.error
0x00002149      48837c245800   cmp qword [rsp + 0x58], 0
0x0000214f      7434           je 0x2185
0x00002151      4c8b7c2458     mov r15, qword [rsp + 0x58]
0x00002156      488d150b5800.  lea rdx, str.WARNING:__lu_computed_checksums_did_NOT_match ; 0x7968 ; "WARNING: %lu computed checksums did NOT match"
0x0000215d      488d35345800.  lea rsi, str.WARNING:__lu_computed_checksum_did_NOT_match ; 0x7998 ; "WARNING: %lu computed checksum did NOT match"
0x00002164      31ff           xor edi, edi
0x00002166      41b805000000   mov r8d, 5
0x0000216c      4c89f9         mov rcx, r15
0x0000216f      e8ecf6ffff     call sym.imp.dcngettext
0x00002174      4c89f9         mov rcx, r15
0x00002177      4889c2         mov rdx, rax
0x0000217a      31f6           xor esi, esi
0x0000217c      31ff           xor edi, edi
0x0000217e      31c0           xor eax, eax
0x00002180      e8abf6ffff     call sym.imp.error
0x00002185      803d667f2000.  cmp byte [obj.ignore_missing], 0        ; [0x20a0f2:1]=0
0x0000218c      0f84cc030000   je 0x255e
0x00002192      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002197      0f845a070000   je 0x28f7
0x0000219d      488b442450     mov rax, qword [rsp + 0x50]
0x000021a2      480b442458     or rax, qword [rsp + 0x58]
0x000021a7      7515           jne 0x21be
0x000021a9      0fb605407f20.  movzx eax, byte [obj.strict]            ; [0x20a0f0:1]=0
0x000021b0      83f001         xor eax, 1
0x000021b3      4d85ed         test r13, r13
0x000021b6      0f94c3         sete bl
0x000021b9      09d8           or eax, ebx
0x000021bb      0fb6d8         movzx ebx, al
0x000021be      89d8           mov eax, ebx
0x000021c0      83e001         and eax, 1
0x000021c3      20442479       and byte [rsp + 0x79], al
0x000021c7      e9a1010000     jmp 0x236d
0x000021cc      0f1f4000       nop dword [rax]
0x000021d0      488b542420     mov rdx, qword [rsp + 0x20]
0x000021d5      31ff           xor edi, edi
0x000021d7      be03000000     mov esi, 3
0x000021dc      e89f3b0000     call sym.quotearg_n_style_colon
0x000021e1      488d35585600.  lea rsi, str.s:__lu:_improperly_formatted__s_checksum_line ; 0x7840 ; "%s: %lu: improperly formatted %s checksum line"
0x000021e8      31ff           xor edi, edi
0x000021ea      ba05000000     mov edx, 5
0x000021ef      4889c3         mov rbx, rax
0x000021f2      e869f4ffff     call sym.imp.dcgettext
0x000021f7      4c8d0d334c00.  lea r9, [0x00006e31]                    ; "MD5"
0x000021fe      4889c2         mov rdx, rax
0x00002201      4989e8         mov r8, rbp
0x00002204      4889d9         mov rcx, rbx
0x00002207      31f6           xor esi, esi
0x00002209      31ff           xor edi, edi
0x0000220b      31c0           xor eax, eax
0x0000220d      e81ef6ffff     call sym.imp.error
0x00002212      e93efcffff     jmp 0x1e55
0x00002217      660f1f840000.  nop word [rax + rax]
0x00002220      803dcb7e2000.  cmp byte [obj.ignore_missing], 0        ; [0x20a0f2:1]=0
0x00002227      740e           je 0x2237
0x00002229      80bc248f0000.  cmp byte [rsp + 0x8f], 0
0x00002231      0f8551feffff   jne 0x2088
0x00002237      488b0dba7e20.  mov rcx, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x0000223e      4c89442468     mov qword [rsp + 0x68], r8
0x00002243      48d1e9         shr rcx, 1
0x00002246      0f8473030000   je 0x25bf
0x0000224c      48894c2460     mov qword [rsp + 0x60], rcx
0x00002251      44884c2430     mov byte [rsp + 0x30], r9b
0x00002256      e875f6ffff     call sym.imp.__ctype_tolower_loc
0x0000225b      31d2           xor edx, edx
0x0000225d      488b38         mov rdi, qword [rax]
0x00002260      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002266      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000226b      4c8b442468     mov r8, qword [rsp + 0x68]
0x00002270      4c8b542438     mov r10, qword [rsp + 0x38]
0x00002275      eb29           jmp 0x22a0
0x00002277      660f1f840000.  nop word [rax + rax]
0x00002280      410fb6745001   movzx esi, byte [r8 + rdx*2 + 1]
0x00002286      83e00f         and eax, 0xf
0x00002289      410fbe0406     movsx eax, byte [r14 + rax]
0x0000228e      3904b7         cmp dword [rdi + rsi*4], eax
0x00002291      752b           jne 0x22be
0x00002293      4883c201       add rdx, 1
0x00002297      4839d1         cmp rcx, rdx
0x0000229a      0f849d030000   je 0x263d
0x000022a0      410fb60412     movzx eax, byte [r10 + rdx]
0x000022a5      450fb61c50     movzx r11d, byte [r8 + rdx*2]
0x000022aa      89c6           mov esi, eax
0x000022ac      40c0ee04       shr sil, 4
0x000022b0      83e60f         and esi, 0xf
0x000022b3      410fbe3436     movsx esi, byte [r14 + rsi]
0x000022b8      4239349f       cmp dword [rdi + r11*4], esi
0x000022bc      74c2           je 0x2280
0x000022be      4839d1         cmp rcx, rdx
0x000022c1      0f84fa020000   je 0x25c1
0x000022c7      488344245801   add qword [rsp + 0x58], 1
0x000022cd      803d207e2000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x000022d4      0f85aefdffff   jne 0x2088
0x000022da      4585ff         test r15d, r15d
0x000022dd      0f8405060000   je 0x28e8
0x000022e3      488b3dbe7d20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000022ea      488b4728       mov rax, qword [rdi + 0x28]
0x000022ee      483b4730       cmp rax, qword [rdi + 0x30]
0x000022f2      0f83a7060000   jae 0x299f
0x000022f8      488d7001       lea rsi, [rax + 1]
0x000022fc      48897728       mov qword [rdi + 0x28], rsi
0x00002300      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002303      be01000000     mov esi, 1
0x00002308      4889df         mov rdi, rbx
0x0000230b      48894c2460     mov qword [rsp + 0x60], rcx
0x00002310      4889542430     mov qword [rsp + 0x30], rdx
0x00002315      e816090000     call sym.print_filename
0x0000231a      488b542430     mov rdx, qword [rsp + 0x30]
0x0000231f      488b4c2460     mov rcx, qword [rsp + 0x60]
0x00002324      4839ca         cmp rdx, rcx
0x00002327      0f84dd020000   je 0x260a
0x0000232d      ba05000000     mov edx, 5
0x00002332      488d352e4c00.  lea rsi, str.FAILED                     ; 0x6f67 ; "FAILED"
0x00002339      e92dfdffff     jmp 0x206b
0x0000233e      6690           nop
0x00002340      488d84249800.  lea rax, [rsp + 0x98]
0x00002348      488d9c24a000.  lea rbx, [rsp + 0xa0]
0x00002350      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002355      4889c2         mov rdx, rax
0x00002358      4889de         mov rsi, rbx
0x0000235b      e8a0090000     call sym.digest_file.isra.1
0x00002360      84c0           test al, al
0x00002362      0f85ff000000   jne 0x2467
0x00002368      c644247900     mov byte [rsp + 0x79], 0
0x0000236d      488344241808   add qword [rsp + 0x18], 8
0x00002373      488b442418     mov rax, qword [rsp + 0x18]
0x00002378      4839442448     cmp qword [rsp + 0x48], rax
0x0000237d      0f872df9ffff   ja 0x1cb0
0x00002383      803d7e7d2000.  cmp byte [obj.have_read_stdin], 0       ; [0x20a108:1]=0
0x0000238a      0f8570030000   jne 0x2700
0x00002390      0fb6442479     movzx eax, byte [rsp + 0x79]
0x00002395      83f001         xor eax, 1
0x00002398      488bbc24d800.  mov rdi, qword [rsp + 0xd8]
0x000023a0      6448333c2528.  xor rdi, qword fs:[0x28]
0x000023a9      0fb6c0         movzx eax, al
0x000023ac      0f8531060000   jne 0x29e3
0x000023b2      4881c4e80000.  add rsp, 0xe8
0x000023b9      5b             pop rbx
0x000023ba      5d             pop rbp
0x000023bb      415c           pop r12
0x000023bd      415d           pop r13
0x000023bf      415e           pop r14
0x000023c1      415f           pop r15
0x000023c3      c3             ret
0x000023c4      4883c101       add rcx, 1
0x000023c8      4929cf         sub r15, rcx
0x000023cb      0f8473faffff   je 0x1e44
0x000023d1      4d89fa         mov r10, r15
0x000023d4      4801cb         add rbx, rcx
0x000023d7      4983ea01       sub r10, 1
0x000023db      7424           je 0x2401
0x000023dd      42807c3bff29   cmp byte [rbx + r15 - 1], 0x29
0x000023e3      7516           jne 0x23fb
0x000023e5      e99f020000     jmp 0x2689
0x000023ea      660f1f440000   nop word [rax + rax]
0x000023f0      42803c1329     cmp byte [rbx + r10], 0x29
0x000023f5      0f848e020000   je 0x2689
0x000023fb      4983ea01       sub r10, 1
0x000023ff      75ef           jne 0x23f0
0x00002401      803b29         cmp byte [rbx], 0x29
0x00002404      0f853afaffff   jne 0x1e44
0x0000240a      4989db         mov r11, rbx
0x0000240d      4531d2         xor r10d, r10d
0x00002410      e978020000     jmp 0x268d
0x00002415      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000241a      488d35e34a00.  lea rsi, [0x00006f04]                   ; "r"
0x00002421      e87a1d0000     call sym.fopen_safer
0x00002426      4885c0         test rax, rax
0x00002429      4989c4         mov r12, rax
0x0000242c      0f85def8ffff   jne 0x1d10
0x00002432      488b542420     mov rdx, qword [rsp + 0x20]
0x00002437      be03000000     mov esi, 3
0x0000243c      31ff           xor edi, edi
0x0000243e      e83d390000     call sym.quotearg_n_style_colon
0x00002443      4889c3         mov rbx, rax
0x00002446      e885f1ffff     call sym.imp.__errno_location
0x0000244b      8b30           mov esi, dword [rax]
0x0000244d      488d15a15500.  lea rdx, [0x000079f5]                   ; "%s"
0x00002454      31c0           xor eax, eax
0x00002456      4889d9         mov rcx, rbx
0x00002459      31ff           xor edi, edi
0x0000245b      e8d0f3ffff     call sym.imp.error
0x00002460      31c0           xor eax, eax
0x00002462      e95cfdffff     jmp 0x21c3
0x00002467      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000246c      be5c000000     mov esi, 0x5c                           ; '\'
0x00002471      e84af2ffff     call sym.imp.strchr
0x00002476      4885c0         test rax, rax
0x00002479      0f84d2030000   je 0x2851
0x0000247f      803d8a7b2000.  cmp byte [obj.delim], 0xa               ; [0x20a010:1]=10 ; "\n"
0x00002486      0f84e0020000   je 0x276c
0x0000248c      807c247800     cmp byte [rsp + 0x78], 0
0x00002491      0f85d7030000   jne 0x286e
0x00002497      488b055a7c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x0000249e      31ed           xor ebp, ebp
0x000024a0      48d1e8         shr rax, 1
0x000024a3      743d           je 0x24e2
0x000024a5      4531e4         xor r12d, r12d
0x000024a8      0f1f84000000.  nop dword [rax + rax]
0x000024b0      420fb61423     movzx edx, byte [rbx + r12]
0x000024b5      488d35dd4a00.  lea rsi, str.02x                        ; 0x6f99 ; "%02x"
0x000024bc      31c0           xor eax, eax
0x000024be      bf01000000     mov edi, 1
0x000024c3      4983c401       add r12, 1
0x000024c7      e844f3ffff     call sym.imp.__printf_chk
0x000024cc      488b05257c20.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x000024d3      48d1e8         shr rax, 1
0x000024d6      4c39e0         cmp rax, r12
0x000024d9      77d5           ja 0x24b0
0x000024db      807c247800     cmp byte [rsp + 0x78], 0
0x000024e0      7551           jne 0x2533
0x000024e2      488b3dbf7b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000024e9      488b4728       mov rax, qword [rdi + 0x28]
0x000024ed      48394730       cmp qword [rdi + 0x30], rax
0x000024f1      0f8699040000   jbe 0x2990
0x000024f7      488d5001       lea rdx, [rax + 1]
0x000024fb      48895728       mov qword [rdi + 0x28], rdx
0x000024ff      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00002502      488b3d9f7b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002509      488b4728       mov rax, qword [rdi + 0x28]
0x0000250d      483b4730       cmp rax, qword [rdi + 0x30]
0x00002511      0f836b040000   jae 0x2982
0x00002517      488d5001       lea rdx, [rax + 1]
0x0000251b      48895728       mov qword [rdi + 0x28], rdx
0x0000251f      0fb67c247b     movzx edi, byte [rsp + 0x7b]
0x00002524      408838         mov byte [rax], dil
0x00002527      488b7c2420     mov rdi, qword [rsp + 0x20]
0x0000252c      89ee           mov esi, ebp
0x0000252e      e8fd060000     call sym.print_filename
0x00002533      488b3d6e7b20.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000253a      0fb615cf7a20.  movzx edx, byte [obj.delim]             ; [0x20a010:1]=10 ; "\n"
0x00002541      488b4728       mov rax, qword [rdi + 0x28]
0x00002545      483b4730       cmp rax, qword [rdi + 0x30]
0x00002549      0f8308040000   jae 0x2957
0x0000254f      488d4801       lea rcx, [rax + 1]
0x00002553      48894f28       mov qword [rdi + 0x28], rcx
0x00002557      8810           mov byte [rax], dl
0x00002559      e90ffeffff     jmp 0x236d
0x0000255e      807c247a00     cmp byte [rsp + 0x7a], 0
0x00002563      0f8534fcffff   jne 0x219d
0x00002569      e950fcffff     jmp 0x21be
0x0000256e      488b542420     mov rdx, qword [rsp + 0x20]
0x00002573      be03000000     mov esi, 3
0x00002578      31ff           xor edi, edi
0x0000257a      e801380000     call sym.quotearg_n_style_colon
0x0000257f      488d35eb4900.  lea rsi, str.s:_read_error              ; 0x6f71 ; "%s: read error"
0x00002586      4889c3         mov rbx, rax
0x00002589      ba05000000     mov edx, 5
0x0000258e      31ff           xor edi, edi
0x00002590      e8cbf0ffff     call sym.imp.dcgettext
0x00002595      4889d9         mov rcx, rbx
0x00002598      4889c2         mov rdx, rax
0x0000259b      31f6           xor esi, esi
0x0000259d      31c0           xor eax, eax
0x0000259f      31ff           xor edi, edi
0x000025a1      e88af2ffff     call sym.imp.error
0x000025a6      31c0           xor eax, eax
0x000025a8      e916fcffff     jmp 0x21c3
0x000025ad      803d3f7b2000.  cmp byte [obj.warn], 0                  ; [0x20a0f3:1]=0
0x000025b4      0f8583f6ffff   jne 0x1c3d
0x000025ba      e906f9ffff     jmp 0x1ec5
0x000025bf      31d2           xor edx, edx
0x000025c1      0fb6052c7b20.  movzx eax, byte [obj.status_only]       ; [0x20a0f4:1]=0
0x000025c8      84c0           test al, al
0x000025ca      8844247a       mov byte [rsp + 0x7a], al
0x000025ce      0f85b4faffff   jne 0x2088
0x000025d4      0fb605167b20.  movzx eax, byte [obj.quiet]             ; [0x20a0f1:1]=0
0x000025db      84c0           test al, al
0x000025dd      8844247a       mov byte [rsp + 0x7a], al
0x000025e1      0f85a1faffff   jne 0x2088
0x000025e7      4585ff         test r15d, r15d
0x000025ea      0f8521040000   jne 0x2a11
0x000025f0      31f6           xor esi, esi
0x000025f2      4889df         mov rdi, rbx
0x000025f5      44884c2430     mov byte [rsp + 0x30], r9b
0x000025fa      e831060000     call sym.print_filename
0x000025ff      440fb64c2430   movzx r9d, byte [rsp + 0x30]
0x00002605      44884c247a     mov byte [rsp + 0x7a], r9b
0x0000260a      803de07a2000.  cmp byte [obj.quiet], 0                 ; [0x20a0f1:1]=0
0x00002611      0f8571faffff   jne 0x2088
0x00002617      ba05000000     mov edx, 5
0x0000261c      488d354b4900.  lea rsi, [0x00006f6e]                   ; "OK"
0x00002623      e943faffff     jmp 0x206b
0x00002628      4c89e7         mov rdi, r12
0x0000262b      e800420000     call sym.rpl_fclose
0x00002630      85c0           test eax, eax
0x00002632      0f8489faffff   je 0x20c1
0x00002638      e9f5fdffff     jmp 0x2432
0x0000263d      4889ca         mov rdx, rcx
0x00002640      e97cffffff     jmp 0x25c1
0x00002645      488b542420     mov rdx, qword [rsp + 0x20]
0x0000264a      31ff           xor edi, edi
0x0000264c      be03000000     mov esi, 3
0x00002651      e82a370000     call sym.quotearg_n_style_colon
0x00002656      488d35135200.  lea rsi, str.s:_no_properly_formatted__s_checksum_lines_found ; 0x7870 ; "%s: no properly formatted %s checksum lines found"
0x0000265d      31ff           xor edi, edi
0x0000265f      ba05000000     mov edx, 5
0x00002664      4889c5         mov rbp, rax
0x00002667      e8f4efffff     call sym.imp.dcgettext
0x0000266c      4c8d05be4700.  lea r8, [0x00006e31]                    ; "MD5"
0x00002673      4889c2         mov rdx, rax
0x00002676      4889e9         mov rcx, rbp
0x00002679      31f6           xor esi, esi
0x0000267b      31ff           xor edi, edi
0x0000267d      31c0           xor eax, eax
0x0000267f      e8acf1ffff     call sym.imp.error
0x00002684      e935fbffff     jmp 0x21be
0x00002689      4e8d1c13       lea r11, [rbx + r10]
0x0000268d      4584c9         test r9b, r9b
0x00002690      0f85a8020000   jne 0x293e
0x00002696      4983c201       add r10, 1
0x0000269a      41c60300       mov byte [r11], 0
0x0000269e      eb04           jmp 0x26a4
0x000026a0      4983c201       add r10, 1
0x000026a4      420fb60413     movzx eax, byte [rbx + r10]
0x000026a9      3c20           cmp al, 0x20                            ; "@"
0x000026ab      74f3           je 0x26a0
0x000026ad      3c09           cmp al, 9
0x000026af      74ef           je 0x26a0
0x000026b1      3c3d           cmp al, 0x3d
0x000026b3      0f858bf7ffff   jne 0x1e44
0x000026b9      4a8d541301     lea rdx, [rbx + r10 + 1]
0x000026be      0fb602         movzx eax, byte [rdx]
0x000026c1      4989d0         mov r8, rdx
0x000026c4      488d5201       lea rdx, [rdx + 1]
0x000026c8      3c20           cmp al, 0x20                            ; "@"
0x000026ca      74f2           je 0x26be
0x000026cc      3c09           cmp al, 9
0x000026ce      74ee           je 0x26be
0x000026d0      4c89c7         mov rdi, r8
0x000026d3      4c89442460     mov qword [rsp + 0x60], r8
0x000026d8      e8f3040000     call sym.hex_digits
0x000026dd      4c8b442460     mov r8, qword [rsp + 0x60]
0x000026e2      eb7b           jmp 0x275f
0x000026e4      83ee01         sub esi, 1
0x000026e7      0f84adf8ffff   je 0x1f9a
0x000026ed      c7051d792000.  mov dword [obj.bsd_reversed], 0         ; [0x20a014:4]=-1
0x000026f7      488d4202       lea rax, [rdx + 2]
0x000026fb      e99af8ffff     jmp 0x1f9a
0x00002700      488b3da97920.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002707      e824410000     call sym.rpl_fclose
0x0000270c      83c001         add eax, 1
0x0000270f      0f857bfcffff   jne 0x2390
0x00002715      488d350c4800.  lea rsi, str.standard_input             ; 0x6f28 ; "standard input"
0x0000271c      ba05000000     mov edx, 5
0x00002721      31ff           xor edi, edi
0x00002723      e838efffff     call sym.imp.dcgettext
0x00002728      4889c3         mov rbx, rax
0x0000272b      e8a0eeffff     call sym.imp.__errno_location
0x00002730      8b30           mov esi, dword [rax]
0x00002732      4889da         mov rdx, rbx
0x00002735      bf01000000     mov edi, 1
0x0000273a      31c0           xor eax, eax
0x0000273c      e8eff0ffff     call sym.imp.error
0x00002741      4c89fe         mov rsi, r15
0x00002744      4889df         mov rdi, rbx
0x00002747      4c89442460     mov qword [rsp + 0x60], r8
0x0000274c      4829c6         sub rsi, rax
0x0000274f      e8fc030000     call sym.filename_unescape
0x00002754      4c8b442460     mov r8, qword [rsp + 0x60]
0x00002759      4885c0         test rax, rax
0x0000275c      0f95c0         setne al
0x0000275f      84c0           test al, al
0x00002761      0f853ff8ffff   jne 0x1fa6
0x00002767      e9d8f6ffff     jmp 0x1e44
0x0000276c      807c247800     cmp byte [rsp + 0x78], 0
0x00002771      0f84a0000000   je 0x2817
0x00002777      488b3d2a7920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000277e      488b4728       mov rax, qword [rdi + 0x28]
0x00002782      483b4730       cmp rax, qword [rdi + 0x30]
0x00002786      0f8336020000   jae 0x29c2
0x0000278c      488d5001       lea rdx, [rax + 1]
0x00002790      48895728       mov qword [rdi + 0x28], rdx
0x00002794      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x00002797      488b0d0a7920.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000279e      488d3d8c4600.  lea rdi, [0x00006e31]                   ; "MD5"
0x000027a5      ba03000000     mov edx, 3
0x000027aa      be01000000     mov esi, 1
0x000027af      e81cf0ffff     call sym.imp.fwrite_unlocked
0x000027b4      488b0ded7820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000027bb      488d3ddc4700.  lea rdi, [0x00006f9e]                   ; " ("
0x000027c2      ba02000000     mov edx, 2
0x000027c7      be01000000     mov esi, 1
0x000027cc      e8ffefffff     call sym.imp.fwrite_unlocked
0x000027d1      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000027d6      be01000000     mov esi, 1
0x000027db      e850040000     call sym.print_filename
0x000027e0      488b0dc17820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000027e7      488d3db34700.  lea rdi, str.                           ; 0x6fa1 ; ") = "
0x000027ee      ba04000000     mov edx, 4
0x000027f3      be01000000     mov esi, 1
0x000027f8      e8d3efffff     call sym.imp.fwrite_unlocked
0x000027fd      488b05f47820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x00002804      bd01000000     mov ebp, 1
0x00002809      48d1e8         shr rax, 1
0x0000280c      0f8593fcffff   jne 0x24a5
0x00002812      e9c4fcffff     jmp 0x24db
0x00002817      488b3d8a7820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000281e      488b4728       mov rax, qword [rdi + 0x28]
0x00002822      483b4730       cmp rax, qword [rdi + 0x30]
0x00002826      0f8347010000   jae 0x2973
0x0000282c      488d5001       lea rdx, [rax + 1]
0x00002830      bd01000000     mov ebp, 1
0x00002835      48895728       mov qword [rdi + 0x28], rdx
0x00002839      c6005c         mov byte [rax], 0x5c                    ; '\'
                                                                       ; [0x5c:1]=0
0x0000283c      488b05b57820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x00002843      48d1e8         shr rax, 1
0x00002846      0f8559fcffff   jne 0x24a5
0x0000284c      e991fcffff     jmp 0x24e2
0x00002851      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00002856      be0a000000     mov esi, 0xa
0x0000285b      e860eeffff     call sym.imp.strchr
0x00002860      4885c0         test rax, rax
0x00002863      0f8516fcffff   jne 0x247f
0x00002869      e91efcffff     jmp 0x248c
0x0000286e      488b0d337820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002875      488d3db54500.  lea rdi, [0x00006e31]                   ; "MD5"
0x0000287c      ba03000000     mov edx, 3
0x00002881      be01000000     mov esi, 1
0x00002886      31ed           xor ebp, ebp
0x00002888      e843efffff     call sym.imp.fwrite_unlocked
0x0000288d      488b0d147820.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002894      488d3d034700.  lea rdi, [0x00006f9e]                   ; " ("
0x0000289b      ba02000000     mov edx, 2
0x000028a0      be01000000     mov esi, 1
0x000028a5      e826efffff     call sym.imp.fwrite_unlocked
0x000028aa      488b7c2420     mov rdi, qword [rsp + 0x20]
0x000028af      31f6           xor esi, esi
0x000028b1      e87a030000     call sym.print_filename
0x000028b6      488b0deb7720.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000028bd      488d3ddd4600.  lea rdi, str.                           ; 0x6fa1 ; ") = "
0x000028c4      ba04000000     mov edx, 4
0x000028c9      be01000000     mov esi, 1
0x000028ce      e8fdeeffff     call sym.imp.fwrite_unlocked
0x000028d3      488b051e7820.  mov rax, qword [obj.digest_hex_bytes]   ; [0x20a0f8:8]=0
0x000028da      48d1e8         shr rax, 1
0x000028dd      0f85c2fbffff   jne 0x24a5
0x000028e3      e94bfcffff     jmp 0x2533
0x000028e8      31f6           xor esi, esi
0x000028ea      4889df         mov rdi, rbx
0x000028ed      e83e030000     call sym.print_filename
0x000028f2      e936faffff     jmp 0x232d
0x000028f7      488b542420     mov rdx, qword [rsp + 0x20]
0x000028fc      31ff           xor edi, edi
0x000028fe      be03000000     mov esi, 3
0x00002903      e878340000     call sym.quotearg_n_style_colon
0x00002908      488d35714600.  lea rsi, str.s:_no_file_was_verified    ; 0x6f80 ; "%s: no file was verified"
0x0000290f      4889c5         mov rbp, rax
0x00002912      31ff           xor edi, edi
0x00002914      ba05000000     mov edx, 5
0x00002919      e842edffff     call sym.imp.dcgettext
0x0000291e      4889e9         mov rcx, rbp
0x00002921      4889c2         mov rdx, rax
0x00002924      31f6           xor esi, esi
0x00002926      31ff           xor edi, edi
0x00002928      31c0           xor eax, eax
0x0000292a      e801efffff     call sym.imp.error
0x0000292f      e98af8ffff     jmp 0x21be
0x00002934      c644247901     mov byte [rsp + 0x79], 1
0x00002939      e945faffff     jmp 0x2383
0x0000293e      4c89d6         mov rsi, r10
0x00002941      4889df         mov rdi, rbx
0x00002944      e807020000     call sym.filename_unescape
0x00002949      4885c0         test rax, rax
0x0000294c      0f8544fdffff   jne 0x2696
0x00002952      e9edf4ffff     jmp 0x1e44
0x00002957      0fb6f2         movzx esi, dl
0x0000295a      e871edffff     call sym.imp.__overflow
0x0000295f      e909faffff     jmp 0x236d
0x00002964      be5c000000     mov esi, 0x5c                           ; '\'
0x00002969      e862edffff     call sym.imp.__overflow
0x0000296e      e9e1f6ffff     jmp 0x2054
0x00002973      be5c000000     mov esi, 0x5c                           ; '\'
0x00002978      e853edffff     call sym.imp.__overflow
0x0000297d      e97bfeffff     jmp 0x27fd
0x00002982      8b74247c       mov esi, dword [rsp + 0x7c]
0x00002986      e845edffff     call sym.imp.__overflow
0x0000298b      e997fbffff     jmp 0x2527
0x00002990      be20000000     mov esi, 0x20                           ; "@"
0x00002995      e836edffff     call sym.imp.__overflow
0x0000299a      e963fbffff     jmp 0x2502
0x0000299f      be5c000000     mov esi, 0x5c                           ; '\'
0x000029a4      48894c2460     mov qword [rsp + 0x60], rcx
0x000029a9      4889542430     mov qword [rsp + 0x30], rdx
0x000029ae      e81dedffff     call sym.imp.__overflow
0x000029b3      488b542430     mov rdx, qword [rsp + 0x30]
0x000029b8      488b4c2460     mov rcx, qword [rsp + 0x60]
0x000029bd      e941f9ffff     jmp 0x2303
0x000029c2      be5c000000     mov esi, 0x5c                           ; '\'
0x000029c7      e804edffff     call sym.imp.__overflow
0x000029cc      e9c6fdffff     jmp 0x2797
0x000029d1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000029d6      0f85f4f1ffff   jne 0x1bd0
0x000029dc      31ff           xor edi, edi
0x000029de      e8bd040000     call sym.usage
0x000029e3      e8a8ecffff     call sym.imp.__stack_chk_fail
0x000029e8      803d05772000.  cmp byte [obj.status_only], 0           ; [0x20a0f4:1]=0
0x000029ef      0f84a2f1ffff   je 0x1b97
0x000029f5      807c242b00     cmp byte [rsp + 0x2b], 0
0x000029fa      0f85adfbffff   jne 0x25ad
0x00002a00      ba05000000     mov edx, 5
0x00002a05      488d35344d00.  lea rsi, str.the___status_option_is_meaningful_only_when_verifying_checksums ; 0x7740 ; "the --status option is meaningful only when verifying checksums"
0x00002a0c      e9aaf1ffff     jmp 0x1bbb
0x00002a11      44884c247a     mov byte [rsp + 0x7a], r9b
0x00002a16      e9c8f8ffff     jmp 0x22e3
0x00002a1b      ba05000000     mov edx, 5
0x00002a20      488d35d94b00.  lea rsi, str.tag_does_not_support___text_mode ; 0x7600 ; "--tag does not support --text mode"
0x00002a27      e98ff1ffff     jmp 0x1bbb
0x00002a2c      ba05000000     mov edx, 5
0x00002a31      488d35c04c00.  lea rsi, str.the___ignore_missing_option_is_meaningful_only_when_verifying_checksums ; 0x76f8 ; "the --ignore-missing option is meaningful only when verifying checksums"
0x00002a38      e97ef1ffff     jmp 0x1bbb
0x00002a3d      0f1f00         nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002a40      31ed           xor ebp, ebp
0x00002a42      4989d1         mov r9, rdx
0x00002a45      5e             pop rsi
0x00002a46      4889e2         mov rdx, rsp
0x00002a49      4883e4f0       and rsp, 0xfffffffffffffff0
0x00002a4d      50             push rax
0x00002a4e      54             push rsp
0x00002a4f      4c8d059a4300.  lea r8, sym.__libc_csu_fini             ; 0x6df0
0x00002a56      488d0d234300.  lea rcx, sym.__libc_csu_init            ; 0x6d80 ; "AWAVI\x89\xd7AUATL\x8d%~, "
0x00002a5d      488d3d9ceeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1900 ; "AWAVAUATA\x89\xfcUSH\x89\xf3\xbd\xff\xff\xff\xffH\x81\xec\xe8"
0x00002a64      ff155e752000   call qword [reloc.__libc_start_main]    ; [0x209fc8:8]=0
0x00002a6a      f4             hlt
0x00002a6b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002a70      488d3d297620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002a77      55             push rbp
0x00002a78      488d05217620.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002a7f      4839f8         cmp rax, rdi
0x00002a82      4889e5         mov rbp, rsp
0x00002a85      7419           je 0x2aa0
0x00002a87      488b05327520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fc0:8]=0
0x00002a8e      4885c0         test rax, rax
0x00002a91      740d           je 0x2aa0
0x00002a93      5d             pop rbp
0x00002a94      ffe0           jmp rax
0x00002a96      662e0f1f8400.  nop word cs:[rax + rax]
0x00002aa0      5d             pop rbp
0x00002aa1      c3             ret
0x00002aa2      0f1f4000       nop dword [rax]
0x00002aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002ab0      488d3de97520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002ab7      488d35e27520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002abe      55             push rbp
0x00002abf      4829fe         sub rsi, rdi
0x00002ac2      4889e5         mov rbp, rsp
0x00002ac5      48c1fe03       sar rsi, 3
0x00002ac9      4889f0         mov rax, rsi
0x00002acc      48c1e83f       shr rax, 0x3f
0x00002ad0      4801c6         add rsi, rax
0x00002ad3      48d1fe         sar rsi, 1
0x00002ad6      7418           je 0x2af0
0x00002ad8      488b05f97420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fd8:8]=0
0x00002adf      4885c0         test rax, rax
0x00002ae2      740c           je 0x2af0
0x00002ae4      5d             pop rbp
0x00002ae5      ffe0           jmp rax
0x00002ae7      660f1f840000.  nop word [rax + rax]
0x00002af0      5d             pop rbp
0x00002af1      c3             ret
0x00002af2      0f1f4000       nop dword [rax]
0x00002af6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002b00      803de1752000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00002b07      752f           jne 0x2b38
0x00002b09      48833dcf7420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209fe0:8]=0
0x00002b11      55             push rbp
0x00002b12      4889e5         mov rbp, rsp
0x00002b15      740c           je 0x2b23
0x00002b17      488b3dea7420.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00002b1e      e8cdedffff     call sym..plt.got
0x00002b23      e848ffffff     call sym.deregister_tm_clones
0x00002b28      c605b9752000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x00002b2f      5d             pop rbp
0x00002b30      c3             ret
0x00002b31      0f1f80000000.  nop dword [rax]
0x00002b38      f3c3           ret
0x00002b3a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002b40      55             push rbp
0x00002b41      4889e5         mov rbp, rsp
0x00002b44      5d             pop rbp
0x00002b45      e966ffffff     jmp sym.register_tm_clones
0x00002b4a      660f1f440000   nop word [rax + rax]
;-- filename_unescape:
0x00002b50      31d2           xor edx, edx                            ; /src:310
0x00002b52      4885f6         test rsi, rsi
0x00002b55      488d4f01       lea rcx, [rdi + 1]
0x00002b59      4c8d46ff       lea r8, [rsi - 1]                       ; /src:318
0x00002b5d      7458           je 0x2bb7                               ; /src:313
0x00002b5f      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:315
0x00002b63      84c0           test al, al
0x00002b65      7429           je 0x2b90
0x00002b67      3c5c           cmp al, 0x5c
0x00002b69      752d           jne 0x2b98
0x00002b6b      4939d0         cmp r8, rdx                             ; /src:318
0x00002b6e      7420           je 0x2b90
0x00002b70      4883c201       add rdx, 1                              ; /src:323
0x00002b74      0fb60417       movzx eax, byte [rdi + rdx]             ; /src:324
0x00002b78      3c5c           cmp al, 0x5c
0x00002b7a      7444           je 0x2bc0
0x00002b7c      3c6e           cmp al, 0x6e
0x00002b7e      7510           jne 0x2b90
0x00002b80      4989c9         mov r9, rcx                             ; /src:327
0x00002b83      c641ff0a       mov byte [rcx - 1], 0xa
0x00002b87      eb15           jmp 0x2b9e                              ; /src:328
0x00002b89      0f1f80000000.  nop dword [rax]
0x00002b90      31c0           xor eax, eax                            ; /src:340
0x00002b92      c3             ret                                     ; /src:351
0x00002b93      0f1f440000     nop dword [rax + rax]
0x00002b98      4989c9         mov r9, rcx                             ; /src:343
0x00002b9b      8841ff         mov byte [rcx - 1], al
0x00002b9e      4883c201       add rdx, 1                              ; /src:313
0x00002ba2      4883c101       add rcx, 1
0x00002ba6      4839d6         cmp rsi, rdx
0x00002ba9      77b4           ja 0x2b5f
0x00002bab      4801fe         add rsi, rdi                            ; /src:347
0x00002bae      4939f1         cmp r9, rsi
0x00002bb1      7304           jae 0x2bb7
0x00002bb3      41c60100       mov byte [r9], 0                        ; /src:348
0x00002bb7      4889f8         mov rax, rdi                            ; /src:350
0x00002bba      c3             ret
0x00002bbb      0f1f440000     nop dword [rax + rax]
0x00002bc0      4989c9         mov r9, rcx                             ; /src:330
0x00002bc3      c641ff5c       mov byte [rcx - 1], 0x5c                ; '\'
                                                                       ; [0x5c:1]=0
0x00002bc7      ebd5           jmp 0x2b9e                              ; /src:331
0x00002bc9      0f1f80000000.  nop dword [rax]
;-- hex_digits:
0x00002bd0      55             push rbp                                ; /src:357
0x00002bd1      53             push rbx
0x00002bd2      4883ec08       sub rsp, 8
0x00002bd6      488b2d1b7520.  mov rbp, qword [obj.digest_hex_bytes]   ; /src:358 ; [0x20a0f8:8]=0
0x00002bdd      4885ed         test rbp, rbp
0x00002be0      743e           je 0x2c20
0x00002be2      4889fb         mov rbx, rdi
0x00002be5      e8f6ecffff     call sym.imp.__ctype_b_loc              ; /src:360
0x00002bea      488b08         mov rcx, qword [rax]
0x00002bed      4889d8         mov rax, rbx
0x00002bf0      eb13           jmp 0x2c05
0x00002bf2      660f1f440000   nop word [rax + rax]
0x00002bf8      4883c001       add rax, 1                              ; /src:362
0x00002bfc      89c2           mov edx, eax                            ; /src:358
0x00002bfe      29da           sub edx, ebx
0x00002c00      4839ea         cmp rdx, rbp
0x00002c03      731e           jae 0x2c23
0x00002c05      0fb610         movzx edx, byte [rax]                   ; /src:360
0x00002c08      f644510110     test byte [rcx + rdx*2 + 1], 0x10
0x00002c0d      75e9           jne 0x2bf8
0x00002c0f      4883c408       add rsp, 8                              ; /src:365
0x00002c13      31c0           xor eax, eax                            ; /src:361
0x00002c15      5b             pop rbx                                 ; /src:365
0x00002c16      5d             pop rbp
0x00002c17      c3             ret
0x00002c18      0f1f84000000.  nop dword [rax + rax]
0x00002c20      4889f8         mov rax, rdi                            ; /src:358
0x00002c23      803800         cmp byte [rax], 0                       ; /src:364
0x00002c26      0f94c0         sete al
0x00002c29      4883c408       add rsp, 8                              ; /src:365
0x00002c2d      5b             pop rbx
0x00002c2e      5d             pop rbp
0x00002c2f      c3             ret
;-- print_filename:
0x00002c30      55             push rbp                                ; /src:551
0x00002c31      53             push rbx
0x00002c32      4889fb         mov rbx, rdi
0x00002c35      4883ec08       sub rsp, 8
0x00002c39      4084f6         test sil, sil                           ; /src:552
0x00002c3c      0f848e000000   je 0x2cd0
0x00002c42      0fb637         movzx esi, byte [rdi]                   ; /src:558
0x00002c45      488d2dd84100.  lea rbp, [0x00006e24]                   ; /src:563 ; "\n"
0x00002c4c      4084f6         test sil, sil                           ; /src:558
0x00002c4f      7529           jne 0x2c7a
0x00002c51      eb5b           jmp 0x2cae
0x00002c53      0f1f440000     nop dword [rax + rax]
0x00002c58      488d3dc84100.  lea rdi, [0x00006e27]                   ; /src:567 ; "\\"
0x00002c5f      ba02000000     mov edx, 2
0x00002c64      be01000000     mov esi, 1
0x00002c69      e862ebffff     call sym.imp.fwrite_unlocked
0x00002c6e      4883c301       add rbx, 1                              ; /src:574
0x00002c72      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002c75      4084f6         test sil, sil
0x00002c78      7434           je 0x2cae
0x00002c7a      4080fe0a       cmp sil, 0xa                            ; /src:560
0x00002c7e      488b0d237420.  mov rcx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002c85      7431           je 0x2cb8
0x00002c87      4080fe5c       cmp sil, 0x5c
0x00002c8b      74cb           je 0x2c58
0x00002c8d      488b4128       mov rax, qword [rcx + 0x28]             ; /coreutils-8.31/lib:107
0x00002c91      483b4130       cmp rax, qword [rcx + 0x30]
0x00002c95      7351           jae 0x2ce8
0x00002c97      488d5001       lea rdx, [rax + 1]
0x00002c9b      4883c301       add rbx, 1                              ; /src:574
0x00002c9f      48895128       mov qword [rcx + 0x28], rdx             ; /coreutils-8.31/lib:107
0x00002ca3      408830         mov byte [rax], sil
0x00002ca6      0fb633         movzx esi, byte [rbx]                   ; /src:558
0x00002ca9      4084f6         test sil, sil
0x00002cac      75cc           jne 0x2c7a
0x00002cae      4883c408       add rsp, 8                              ; /src:576
0x00002cb2      5b             pop rbx
0x00002cb3      5d             pop rbp
0x00002cb4      c3             ret
0x00002cb5      0f1f00         nop dword [rax]
0x00002cb8      ba02000000     mov edx, 2                              ; /src:563
0x00002cbd      be01000000     mov esi, 1
0x00002cc2      4889ef         mov rdi, rbp
0x00002cc5      e806ebffff     call sym.imp.fwrite_unlocked
0x00002cca      eba2           jmp 0x2c6e
0x00002ccc      0f1f4000       nop dword [rax]
0x00002cd0      488b35d17320.  mov rsi, qword [obj.stdout]             ; /src:554 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002cd7      4883c408       add rsp, 8                              ; /src:576
0x00002cdb      5b             pop rbx
0x00002cdc      5d             pop rbp
0x00002cdd      e95eeaffff     jmp sym.imp.fputs_unlocked              ; /src:554
0x00002ce2      660f1f440000   nop word [rax + rax]
0x00002ce8      4889cf         mov rdi, rcx                            ; /coreutils-8.31/lib:107
0x00002ceb      e8e0e9ffff     call sym.imp.__overflow
0x00002cf0      e979ffffff     jmp 0x2c6e
0x00002cf5      90             nop
0x00002cf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- digest_file.isra.1:
0x00002d00      4155           push r13                                ; /src:591
0x00002d02      4154           push r12
0x00002d04      b902000000     mov ecx, 2                              ; /src:596
0x00002d09      55             push rbp                                ; /src:591
0x00002d0a      53             push rbx
0x00002d0b      4889fd         mov rbp, rdi
0x00002d0e      488d3d6d4d00.  lea rdi, [0x00007a82]                   ; /src:596 ; "-"
0x00002d15      4989f4         mov r12, rsi                            ; /src:591
0x00002d18      4889ee         mov rsi, rbp                            ; /src:596
0x00002d1b      4883ec08       sub rsp, 8                              ; /src:591
0x00002d1f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:596
0x00002d21      c60200         mov byte [rdx], 0                       ; /src:598
0x00002d24      0f97c0         seta al                                 ; /src:596
0x00002d27      1c00           sbb al, 0
0x00002d29      84c0           test al, al                             ; /src:600
0x00002d2b      0f858f000000   jne 0x2dc0
0x00002d31      488b1d787320.  mov rbx, qword [obj.stdin]              ; /src:603 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002d38      be02000000     mov esi, 2                              ; /src:627
0x00002d3d      c605c4732000.  mov byte [obj.have_read_stdin], 1       ; /src:602 ; [0x20a108:1]=0
0x00002d44      4889df         mov rdi, rbx                            ; /src:627
0x00002d47      e824140000     call sym.fadvise
0x00002d4c      4c89e6         mov rsi, r12                            ; /src:632
0x00002d4f      4889df         mov rdi, rbx
0x00002d52      e8c9120000     call sym.md5_stream
0x00002d57      85c0           test eax, eax                           ; /src:634
0x00002d59      7515           jne 0x2d70
0x00002d5b      41bc01000000   mov r12d, 1                             ; /src:648
0x00002d61      4883c408       add rsp, 8                              ; /src:649
0x00002d65      4489e0         mov eax, r12d
0x00002d68      5b             pop rbx
0x00002d69      5d             pop rbp
0x00002d6a      415c           pop r12
0x00002d6c      415d           pop r13
0x00002d6e      c3             ret
0x00002d6f      90             nop
0x00002d70      4889ea         mov rdx, rbp                            ; /src:636
0x00002d73      31ff           xor edi, edi
0x00002d75      be03000000     mov esi, 3
0x00002d7a      e801300000     call sym.quotearg_n_style_colon
0x00002d7f      4889c5         mov rbp, rax
0x00002d82      4531e4         xor r12d, r12d                          ; /src:639
0x00002d85      e846e8ffff     call sym.imp.__errno_location           ; /src:636
0x00002d8a      8b30           mov esi, dword [rax]
0x00002d8c      488d15624c00.  lea rdx, [0x000079f5]                   ; "%s"
0x00002d93      31ff           xor edi, edi
0x00002d95      31c0           xor eax, eax
0x00002d97      4889e9         mov rcx, rbp
0x00002d9a      e891eaffff     call sym.imp.error
0x00002d9f      48391d0a7320.  cmp qword [obj.stdin], rbx              ; /src:637 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20a0b0:8]=0
0x00002da6      74b9           je 0x2d61
0x00002da8      4889df         mov rdi, rbx                            ; /src:638
0x00002dab      e8803a0000     call sym.rpl_fclose
0x00002db0      4883c408       add rsp, 8                              ; /src:649
0x00002db4      4489e0         mov eax, r12d
0x00002db7      5b             pop rbx
0x00002db8      5d             pop rbp
0x00002db9      415c           pop r12
0x00002dbb      415d           pop r13
0x00002dbd      c3             ret
0x00002dbe      6690           nop
0x00002dc0      488d353d4100.  lea rsi, [0x00006f04]                   ; /src:614 ; "r"
0x00002dc7      4889ef         mov rdi, rbp
0x00002dca      4989d5         mov r13, rdx
0x00002dcd      e8ce130000     call sym.fopen_safer
0x00002dd2      4885c0         test rax, rax                           ; /src:615
0x00002dd5      4889c3         mov rbx, rax                            ; /src:614
0x00002dd8      7466           je 0x2e40                               ; /src:615
0x00002dda      4889c7         mov rdi, rax                            ; /src:627
0x00002ddd      be02000000     mov esi, 2
0x00002de2      e889130000     call sym.fadvise
0x00002de7      4c89e6         mov rsi, r12                            ; /src:632
0x00002dea      4889df         mov rdi, rbx
0x00002ded      e82e120000     call sym.md5_stream
0x00002df2      85c0           test eax, eax                           ; /src:634
0x00002df4      0f8576ffffff   jne 0x2d70
0x00002dfa      4889df         mov rdi, rbx                            ; /src:642
0x00002dfd      e82e3a0000     call sym.rpl_fclose
0x00002e02      85c0           test eax, eax
0x00002e04      0f8451ffffff   je 0x2d5b
0x00002e0a      4889ea         mov rdx, rbp                            ; /src:644
0x00002e0d      be03000000     mov esi, 3
0x00002e12      31ff           xor edi, edi
0x00002e14      e8672f0000     call sym.quotearg_n_style_colon
0x00002e19      4889c3         mov rbx, rax
0x00002e1c      4531e4         xor r12d, r12d                          ; /src:645
0x00002e1f      e8ace7ffff     call sym.imp.__errno_location           ; /src:644
0x00002e24      8b30           mov esi, dword [rax]
0x00002e26      488d15c84b00.  lea rdx, [0x000079f5]                   ; "%s"
0x00002e2d      4889d9         mov rcx, rbx
0x00002e30      31ff           xor edi, edi
0x00002e32      31c0           xor eax, eax
0x00002e34      e8f7e9ffff     call sym.imp.error
0x00002e39      e923ffffff     jmp 0x2d61
0x00002e3e      6690           nop
0x00002e40      440fb625aa72.  movzx r12d, byte [obj.ignore_missing]   ; /src:617 ; [0x20a0f2:1]=0
0x00002e48      e883e7ffff     call sym.imp.__errno_location
0x00002e4d      4889c3         mov rbx, rax
0x00002e50      4584e4         test r12b, r12b
0x00002e53      7405           je 0x2e5a
0x00002e55      833802         cmp dword [rax], 2
0x00002e58      7436           je 0x2e90
0x00002e5a      4889ea         mov rdx, rbp                            ; /src:622
0x00002e5d      be03000000     mov esi, 3
0x00002e62      31ff           xor edi, edi
0x00002e64      e8172f0000     call sym.quotearg_n_style_colon
0x00002e69      8b33           mov esi, dword [rbx]
0x00002e6b      488d15834b00.  lea rdx, [0x000079f5]                   ; "%s"
0x00002e72      4889c1         mov rcx, rax
0x00002e75      31ff           xor edi, edi
0x00002e77      31c0           xor eax, eax
0x00002e79      4531e4         xor r12d, r12d                          ; /src:623
0x00002e7c      e8afe9ffff     call sym.imp.error                      ; /src:622
0x00002e81      e9dbfeffff     jmp 0x2d61
0x00002e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e90      41c6450001     mov byte [r13], 1                       ; /src:619
0x00002e95      e9c7feffff     jmp 0x2d61
0x00002e9a      660f1f440000   nop word [rax + rax]
;-- usage:
0x00002ea0      4155           push r13                                ; /src:224
0x00002ea2      4154           push r12
0x00002ea4      ba05000000     mov edx, 5                              ; /src:226
0x00002ea9      55             push rbp                                ; /src:224
0x00002eaa      53             push rbx
0x00002eab      89fd           mov ebp, edi
0x00002ead      4881ec880000.  sub rsp, 0x88
0x00002eb4      488b1d657220.  mov rbx, qword [obj.program_name]       ; [0x20a120:8]=0
0x00002ebb      64488b042528.  mov rax, qword fs:[0x28]
0x00002ec4      4889442478     mov qword [rsp + 0x78], rax
0x00002ec9      31c0           xor eax, eax
0x00002ecb      85ff           test edi, edi                           ; /src:225
0x00002ecd      742e           je 0x2efd
0x00002ecf      488d35224100.  lea rsi, str.Try___s___help__for_more_information. ; /src:226 ; 0x6ff8 ; "Try '%s --help' for more information.\n"
0x00002ed6      31ff           xor edi, edi
0x00002ed8      e883e7ffff     call sym.imp.dcgettext
0x00002edd      488b3dfc7120.  mov rdi, qword [obj.stderr]             ; .//ib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00002ee4      4889c2         mov rdx, rax
0x00002ee7      4889d9         mov rcx, rbx
0x00002eea      be01000000     mov esi, 1
0x00002eef      31c0           xor eax, eax
0x00002ef1      e8aae9ffff     call sym.imp.__fprintf_chk
0x00002ef6      89ef           mov edi, ebp                            ; /src:295
0x00002ef8      e883e9ffff     call sym.imp.exit
0x00002efd      488d351c4100.  lea rsi, str.Usage:__s__OPTION_...__FILE_...__Print_or_check__s___d_bit__checksums. ; /src:229 ; 0x7020 ; "Usage: %s [OPTION]... [FILE]...\nPrint or check %s (%d-bit) checksums.\n"
0x00002f04      31ff           xor edi, edi
0x00002f06      e855e7ffff     call sym.imp.dcgettext
0x00002f0b      488d0d1f3f00.  lea rcx, [0x00006e31]                   ; .//ib:104 ; "MD5"
0x00002f12      41b880000000   mov r8d, 0x80
0x00002f18      4889da         mov rdx, rbx
0x00002f1b      4889c6         mov rsi, rax
0x00002f1e      bf01000000     mov edi, 1
0x00002f23      31c0           xor eax, eax
0x00002f25      e8e6e8ffff     call sym.imp.__printf_chk
0x00002f2a      488b1d777120.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002f31      488d35304100.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x7068 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002f38      ba05000000     mov edx, 5
0x00002f3d      31ff           xor edi, edi
0x00002f3f      e81ce7ffff     call sym.imp.dcgettext
0x00002f44      4889de         mov rsi, rbx
0x00002f47      4889c7         mov rdi, rax
0x00002f4a      e8f1e7ffff     call sym.imp.fputs_unlocked
0x00002f4f      488b1d527120.  mov rbx, qword [obj.stdout]             ; /src:244 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002f56      488d35434100.  lea rsi, str.b____binary_________read_in_binary_mode ; 0x70a0 ; "\n  -b, --binary         read in binary mode\n"
0x00002f5d      ba05000000     mov edx, 5
0x00002f62      31ff           xor edi, edi
0x00002f64      e8f7e6ffff     call sym.imp.dcgettext
0x00002f69      4889de         mov rsi, rbx
0x00002f6c      4889c7         mov rdi, rax
0x00002f6f      e8cce7ffff     call sym.imp.fputs_unlocked
0x00002f74      488d35554100.  lea rsi, str.c____check__________read__s_sums_from_the_FILEs_and_check_them ; /src:249 ; 0x70d0 ; "  -c, --check          read %s sums from the FILEs and check them\n"
0x00002f7b      31ff           xor edi, edi
0x00002f7d      ba05000000     mov edx, 5
0x00002f82      e8d9e6ffff     call sym.imp.dcgettext
0x00002f87      488d15a33e00.  lea rdx, [0x00006e31]                   ; .//ib:104 ; "MD5"
0x00002f8e      4889c6         mov rsi, rax
0x00002f91      bf01000000     mov edi, 1
0x00002f96      31c0           xor eax, eax
0x00002f98      e873e8ffff     call sym.imp.__printf_chk
0x00002f9d      488b1d047120.  mov rbx, qword [obj.stdout]             ; /src:258 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002fa4      488d356d4100.  lea rsi, str.tag____________create_a_BSD_style_checksum ; 0x7118 ; "      --tag            create a BSD-style checksum\n"
0x00002fab      ba05000000     mov edx, 5
0x00002fb0      31ff           xor edi, edi
0x00002fb2      e8a9e6ffff     call sym.imp.dcgettext
0x00002fb7      4889de         mov rsi, rbx
0x00002fba      4889c7         mov rdi, rax
0x00002fbd      e87ee7ffff     call sym.imp.fputs_unlocked
0x00002fc2      488b1ddf7020.  mov rbx, qword [obj.stdout]             ; /src:266 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002fc9      488d35804100.  lea rsi, str.t____text___________read_in_text_mode__default ; 0x7150 ; "  -t, --text           read in text mode (default)\n"
0x00002fd0      ba05000000     mov edx, 5
0x00002fd5      31ff           xor edi, edi
0x00002fd7      e884e6ffff     call sym.imp.dcgettext
0x00002fdc      4889de         mov rsi, rbx
0x00002fdf      4889c7         mov rdi, rax
0x00002fe2      e859e7ffff     call sym.imp.fputs_unlocked
0x00002fe7      488b1dba7020.  mov rbx, qword [obj.stdout]             ; /src:269 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002fee      488d35934100.  lea rsi, str.z____zero___________end_each_output_line_with_NUL__not_newline__________________________and_disable_file_name_escaping ; 0x7188 ; "  -z, --zero           end each output line with NUL, not newline,\n                       and disable file name escaping\n"
0x00002ff5      ba05000000     mov edx, 5
0x00002ffa      31ff           xor edi, edi
0x00002ffc      e85fe6ffff     call sym.imp.dcgettext
0x00003001      4889de         mov rsi, rbx
0x00003004      4889c7         mov rdi, rax
0x00003007      e834e7ffff     call sym.imp.fputs_unlocked
0x0000300c      488b1d957020.  mov rbx, qword [obj.stdout]             ; /src:273 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003013      488d35ee4100.  lea rsi, str.The_following_five_options_are_useful_only_when_verifying_checksums:__________ignore_missing__don_t_fail_or_report_status_for_missing_files__________quiet__________don_t_print_OK_for_each_successfully_verified_file__________status_________don_t_output_anything__status_code_shows_success__________strict_________exit_non_zero_for_improperly_formatted_checksum_lines_____w____warn___________warn_about_improperly_formatted_checksum_lines ; 0x7208 ; "\nThe following five options are useful only when verifying checksums:\n      --ignore-missing  don't fail or report status for missing files\n      --quiet          don't print OK for each successfully verified file\n      --status         don't output anything, status code shows success\n      --strict         exit non-zero for improperly formatted checksum lines\n  -w, --warn           warn about improperly formatted checksum lines\n\n"
0x0000301a      ba05000000     mov edx, 5
0x0000301f      31ff           xor edi, edi
0x00003021      e83ae6ffff     call sym.imp.dcgettext
0x00003026      4889de         mov rsi, rbx
0x00003029      4889c7         mov rdi, rax
0x0000302c      e80fe7ffff     call sym.imp.fputs_unlocked
0x00003031      488b1d707020.  mov rbx, qword [obj.stdout]             ; /src:283 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003038      488d35814300.  lea rsi, str.help_____display_this_help_and_exit ; 0x73c0 ; "      --help     display this help and exit\n"
0x0000303f      ba05000000     mov edx, 5
0x00003044      31ff           xor edi, edi
0x00003046      e815e6ffff     call sym.imp.dcgettext
0x0000304b      4889de         mov rsi, rbx
0x0000304e      4889c7         mov rdi, rax
0x00003051      e8eae6ffff     call sym.imp.fputs_unlocked
0x00003056      488b1d4b7020.  mov rbx, qword [obj.stdout]             ; /src:284 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000305d      488d358c4300.  lea rsi, str.version__output_version_information_and_exit ; 0x73f0 ; "      --version  output version information and exit\n"
0x00003064      ba05000000     mov edx, 5
0x00003069      31ff           xor edi, edi
0x0000306b      e8f0e5ffff     call sym.imp.dcgettext
0x00003070      4889de         mov rsi, rbx
0x00003073      4889c7         mov rdi, rax
0x00003076      488d1dad3d00.  lea rbx, str.md5sum                     ; 0x6e2a ; "md5sum"
0x0000307d      e8bee6ffff     call sym.imp.fputs_unlocked
0x00003082      488d359f4300.  lea rsi, str.The_sums_are_computed_as_described_in__s.__When_checking__the_input__should_be_a_former_output_of_this_program.__The_default_mode_is_to_print_a__line_with_checksum__a_space__a_character_indicating_input_mode______for_binary_______for_text_or_where_binary_is_insignificant___and_name_for_each_FILE. ; /src:285 ; 0x7428 ; "\nThe sums are computed as described in %s.  When checking, the input\nshould be a former output of this program.  The default mode is to print a\nline with checksum, a space, a character indicating input mode ('*' for binary,\n' ' for text or where binary is insignificant), and name for each FILE.\n"
0x00003089      31ff           xor edi, edi
0x0000308b      ba05000000     mov edx, 5
0x00003090      e8cbe5ffff     call sym.imp.dcgettext
0x00003095      488d15993d00.  lea rdx, str.RFC_1321                   ; .//ib:104 ; 0x6e35 ; "RFC 1321"
0x0000309c      4889c6         mov rsi, rax
0x0000309f      bf01000000     mov edi, 1
0x000030a4      31c0           xor eax, eax
0x000030a6      e865e7ffff     call sym.imp.__printf_chk
0x000030ab      488d058c3d00.  lea rax, [0x00006e3e]                   ; ../coreutils-8.31/src/5sum.c:633 ; "["
0x000030b2      488d0dc63d00.  lea rcx, str.sha256sum                  ; 0x6e7f ; "sha256sum"
0x000030b9      48c744246000.  mov qword [rsp + 0x60], 0
0x000030c2      48c744246800.  mov qword [rsp + 0x68], 0
0x000030cb      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/5sum.c:644
0x000030ce      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/5sum.c:633
0x000030d2      488d05673d00.  lea rax, str.test_invocation            ; 0x6e40 ; "test invocation"
0x000030d9      48894c2430     mov qword [rsp + 0x30], rcx
0x000030de      488d0da43d00.  lea rcx, str.sha384sum                  ; 0x6e89 ; "sha384sum"
0x000030e5      4889442408     mov qword [rsp + 8], rax
0x000030ea      488d05c73d00.  lea rax, [0x00006eb8]                   ; "coreutils"
0x000030f1      48894c2440     mov qword [rsp + 0x40], rcx
0x000030f6      488d0d963d00.  lea rcx, str.sha512sum                  ; 0x6e93 ; "sha512sum"
0x000030fd      4889442410     mov qword [rsp + 0x10], rax
0x00003102      488d05473d00.  lea rax, str.Multi_call_invocation      ; 0x6e50 ; "Multi-call invocation"
0x00003109      48894c2450     mov qword [rsp + 0x50], rcx
0x0000310e      4889442418     mov qword [rsp + 0x18], rax
0x00003113      488d054c3d00.  lea rax, str.sha224sum                  ; 0x6e66 ; "sha224sum"
0x0000311a      4889442420     mov qword [rsp + 0x20], rax
0x0000311f      488d054a3d00.  lea rax, str.sha2_utilities             ; 0x6e70 ; "sha2 utilities"
0x00003126      4889442428     mov qword [rsp + 0x28], rax
0x0000312b      4889442438     mov qword [rsp + 0x38], rax
0x00003130      4889442448     mov qword [rsp + 0x48], rax
0x00003135      4889442458     mov qword [rsp + 0x58], rax
0x0000313a      660f1f440000   nop word [rax + rax]
0x00003140      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/5sum.c:647
0x00003144      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/5sum.c:646
0x00003147      4885ff         test rdi, rdi
0x0000314a      7413           je 0x315f
0x0000314c      b907000000     mov ecx, 7
0x00003151      4889de         mov rsi, rbx
0x00003154      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003156      0f97c0         seta al
0x00003159      1c00           sbb al, 0
0x0000315b      84c0           test al, al
0x0000315d      75e1           jne 0x3140
0x0000315f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/5sum.c:649
0x00003163      31ff           xor edi, edi                            ; ../coreutils-8.31/src/5sum.c:652
0x00003165      ba05000000     mov edx, 5
0x0000316a      488d352c3d00.  lea rsi, str.s_online_help:___s         ; 0x6e9d ; "\n%s online help: <%s>\n"
0x00003171      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/5sum.c:649
0x00003174      0f84c1000000   je 0x323b
0x0000317a      e8e1e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x0000317f      488d0dd24300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x7558 ; "https://www.gnu.org/software/coreutils/"
0x00003186      488d15273d00.  lea rdx, str.GNU_coreutils              ; 0x6eb4 ; "GNU coreutils"
0x0000318d      4889c6         mov rsi, rax
0x00003190      bf01000000     mov edi, 1
0x00003195      31c0           xor eax, eax
0x00003197      e874e6ffff     call sym.imp.__printf_chk
0x0000319c      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x0000319e      bf05000000     mov edi, 5
0x000031a3      e858e6ffff     call sym.imp.setlocale
0x000031a8      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x000031ab      741c           je 0x31c9
0x000031ad      488d350e3d00.  lea rsi, [0x00006ec2]                   ; "en_"
0x000031b4      ba03000000     mov edx, 3
0x000031b9      4889c7         mov rdi, rax
0x000031bc      e81fe4ffff     call sym.imp.strncmp
0x000031c1      85c0           test eax, eax
0x000031c3      0f8507010000   jne 0x32d0
0x000031c9      488d35f63c00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x6ec6 ; "Full documentation <%s%s>\n"
0x000031d0      31ff           xor edi, edi
0x000031d2      ba05000000     mov edx, 5
0x000031d7      e884e4ffff     call sym.imp.dcgettext
0x000031dc      488d0d473c00.  lea rcx, str.md5sum                     ; .//ib:104 ; 0x6e2a ; "md5sum"
0x000031e3      488d156e4300.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7558 ; "https://www.gnu.org/software/coreutils/"
0x000031ea      4889c6         mov rsi, rax
0x000031ed      bf01000000     mov edi, 1
0x000031f2      31c0           xor eax, eax
0x000031f4      e817e6ffff     call sym.imp.__printf_chk
0x000031f9      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/5sum.c:668
0x000031fc      488d0d573c00.  lea rcx, [0x00006e5a]                   ; " invocation"
0x00003203      488d1db74d00.  lea rbx, [0x00007fc1]
0x0000320a      480f44d9       cmove rbx, rcx
0x0000320e      488d35b34300.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x75c8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00003215      31ff           xor edi, edi
0x00003217      ba05000000     mov edx, 5
0x0000321c      e83fe4ffff     call sym.imp.dcgettext
0x00003221      4889d9         mov rcx, rbx                            ; .//ib:104
0x00003224      4889c6         mov rsi, rax
0x00003227      4c89e2         mov rdx, r12
0x0000322a      bf01000000     mov edi, 1
0x0000322f      31c0           xor eax, eax
0x00003231      e8dae5ffff     call sym.imp.__printf_chk
0x00003236      e9bbfcffff     jmp 0x2ef6
0x0000323b      e820e4ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:652
0x00003240      488d0d114300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//ib:104 ; 0x7558 ; "https://www.gnu.org/software/coreutils/"
0x00003247      488d15663c00.  lea rdx, str.GNU_coreutils              ; 0x6eb4 ; "GNU coreutils"
0x0000324e      4889c6         mov rsi, rax
0x00003251      bf01000000     mov edi, 1
0x00003256      31c0           xor eax, eax
0x00003258      e8b3e5ffff     call sym.imp.__printf_chk
0x0000325d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/5sum.c:656
0x0000325f      bf05000000     mov edi, 5
0x00003264      e897e5ffff     call sym.imp.setlocale
0x00003269      4885c0         test rax, rax                           ; ../coreutils-8.31/src/5sum.c:657
0x0000326c      7418           je 0x3286
0x0000326e      488d354d3c00.  lea rsi, [0x00006ec2]                   ; "en_"
0x00003275      ba03000000     mov edx, 3
0x0000327a      4889c7         mov rdi, rax
0x0000327d      e85ee3ffff     call sym.imp.strncmp
0x00003282      85c0           test eax, eax
0x00003284      7543           jne 0x32c9
0x00003286      488d35393c00.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/5sum.c:666 ; 0x6ec6 ; "Full documentation <%s%s>\n"
0x0000328d      ba05000000     mov edx, 5
0x00003292      31ff           xor edi, edi
0x00003294      4c8d258f3b00.  lea r12, str.md5sum                     ; ../coreutils-8.31/src/5sum.c:643 ; 0x6e2a ; "md5sum"
0x0000329b      488d1db83b00.  lea rbx, [0x00006e5a]                   ; ../coreutils-8.31/src/5sum.c:668 ; " invocation"
0x000032a2      e8b9e3ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/5sum.c:666
0x000032a7      488d0d7c3b00.  lea rcx, str.md5sum                     ; .//ib:104 ; 0x6e2a ; "md5sum"
0x000032ae      488d15a34200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x7558 ; "https://www.gnu.org/software/coreutils/"
0x000032b5      4889c6         mov rsi, rax
0x000032b8      bf01000000     mov edi, 1
0x000032bd      31c0           xor eax, eax
0x000032bf      e84ce5ffff     call sym.imp.__printf_chk
0x000032c4      e945ffffff     jmp 0x320e
0x000032c9      4c8d255a3b00.  lea r12, str.md5sum                     ; ../coreutils-8.31/src/5sum.c:643 ; 0x6e2a ; "md5sum"
0x000032d0      4c8b2dd16d20.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/5sum.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000032d7      488d35a24200.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x7580 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000032de      31ff           xor edi, edi
0x000032e0      ba05000000     mov edx, 5
0x000032e5      e876e3ffff     call sym.imp.dcgettext
0x000032ea      4c89ee         mov rsi, r13
0x000032ed      4889c7         mov rdi, rax
0x000032f0      e84be4ffff     call sym.imp.fputs_unlocked
0x000032f5      e9cffeffff     jmp 0x31c9
0x000032fa      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003300      48893d116e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a118:8]=0
0x00003307      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003308      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003310      40883df96d20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a110:1]=0
0x00003317      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003318      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003320      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003321      53             push rbx
0x00003322      4883ec08       sub rsp, 8
0x00003326      488b3d7b6d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000332d      e82e390000     call sym.close_stream
0x00003332      85c0           test eax, eax
0x00003334      7416           je 0x334c
0x00003336      e895e2ffff     call sym.imp.__errno_location
0x0000333b      803dce6d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a110:1]=0
0x00003342      4889c3         mov rbx, rax
0x00003345      741c           je 0x3363
0x00003347      833820         cmp dword [rax], 0x20
0x0000334a      7517           jne 0x3363
0x0000334c      488b3d8d6d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003353      e808390000     call sym.close_stream
0x00003358      85c0           test eax, eax
0x0000335a      7546           jne 0x33a2
0x0000335c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003360      5b             pop rbx
0x00003361      5d             pop rbp
0x00003362      c3             ret
0x00003363      488d357b4600.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x79e5 ; "write error"
0x0000336a      31ff           xor edi, edi
0x0000336c      ba05000000     mov edx, 5
0x00003371      e8eae2ffff     call sym.imp.dcgettext
0x00003376      488b3d9b6d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a118:8]=0
0x0000337d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003380      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003383      7428           je 0x33ad
0x00003385      e8c6290000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000338a      8b33           mov esi, dword [rbx]
0x0000338c      488d155e4600.  lea rdx, str.s:__s                      ; 0x79f1 ; "%s: %s"
0x00003393      4889c1         mov rcx, rax
0x00003396      4989e8         mov r8, rbp
0x00003399      31ff           xor edi, edi
0x0000339b      31c0           xor eax, eax
0x0000339d      e88ee4ffff     call sym.imp.error
0x000033a2      8b3d786c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a020:4]=1
0x000033a8      e843e2ffff     call sym.imp._exit
0x000033ad      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000033af      488d153f4600.  lea rdx, [0x000079f5]                   ; "%s"
0x000033b6      4889c1         mov rcx, rax
0x000033b9      31ff           xor edi, edi
0x000033bb      31c0           xor eax, eax
0x000033bd      e86ee4ffff     call sym.imp.error
0x000033c2      ebde           jmp 0x33a2
0x000033c4      662e0f1f8400.  nop word cs:[rax + rax]
0x000033ce      6690           nop
;-- md5_init_ctx:
0x000033d0      48b801234567.  movabs rax, 0xefcdab8967452301
0x000033da      48c747100000.  mov qword [rdi + 0x10], 0
0x000033e2      c74718000000.  mov dword [rdi + 0x18], 0
0x000033e9      488907         mov qword [rdi], rax
0x000033ec      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x000033f6      48894708       mov qword [rdi + 8], rax
0x000033fa      c3             ret
0x000033fb      0f1f440000     nop dword [rax + rax]
;-- md5_read_ctx:
0x00003400      8b17           mov edx, dword [rdi]
0x00003402      4889f0         mov rax, rsi
0x00003405      8916           mov dword [rsi], edx
0x00003407      8b5704         mov edx, dword [rdi + 4]
0x0000340a      895604         mov dword [rsi + 4], edx
0x0000340d      8b5708         mov edx, dword [rdi + 8]
0x00003410      895608         mov dword [rsi + 8], edx
0x00003413      8b570c         mov edx, dword [rdi + 0xc]
0x00003416      89560c         mov dword [rsi + 0xc], edx
0x00003419      c3             ret
0x0000341a      660f1f440000   nop word [rax + rax]
;-- md5_process_block:
0x00003420      4889f0         mov rax, rsi
0x00003423      4157           push r15
0x00003425      4156           push r14
0x00003427      4883e0fc       and rax, 0xfffffffffffffffc
0x0000342b      4155           push r13
0x0000342d      4154           push r12
0x0000342f      55             push rbp
0x00003430      53             push rbx
0x00003431      4889fb         mov rbx, rdi
0x00003434      488d0c03       lea rcx, [rbx + rax]
0x00003438      8b02           mov eax, dword [rdx]
0x0000343a      4889d7         mov rdi, rdx
0x0000343d      448b5a04       mov r11d, dword [rdx + 4]
0x00003441      448b5208       mov r10d, dword [rdx + 8]
0x00003445      48895424f8     mov qword [rsp - 8], rdx
0x0000344a      48894c24f0     mov qword [rsp - 0x10], rcx
0x0000344f      894424e8       mov dword [rsp - 0x18], eax
0x00003453      8b420c         mov eax, dword [rdx + 0xc]
0x00003456      89f2           mov edx, esi
0x00003458      894424e0       mov dword [rsp - 0x20], eax
0x0000345c      31c0           xor eax, eax
0x0000345e      035710         add edx, dword [rdi + 0x10]
0x00003461      0f92c0         setb al
0x00003464      48c1ee20       shr rsi, 0x20
0x00003468      037714         add esi, dword [rdi + 0x14]
0x0000346b      895710         mov dword [rdi + 0x10], edx
0x0000346e      01c6           add esi, eax
0x00003470      4839cb         cmp rbx, rcx
0x00003473      897714         mov dword [rdi + 0x14], esi
0x00003476      0f83ee060000   jae 0x3b6a
0x0000347c      4589d7         mov r15d, r10d
0x0000347f      90             nop
0x00003480      448b33         mov r14d, dword [rbx]
0x00003483      8b7c24e0       mov edi, dword [rsp - 0x20]
0x00003487      8b4424e8       mov eax, dword [rsp - 0x18]
0x0000348b      8b7304         mov esi, dword [rbx + 4]
0x0000348e      448b430c       mov r8d, dword [rbx + 0xc]
0x00003492      448b5314       mov r10d, dword [rbx + 0x14]
0x00003496      8b6b18         mov ebp, dword [rbx + 0x18]
0x00003499      448b6b1c       mov r13d, dword [rbx + 0x1c]
0x0000349d      418d940678a4.  lea edx, [r14 + rax - 0x28955b88]
0x000034a5      89f8           mov eax, edi
0x000034a7      8d8c3e56b7c7.  lea ecx, [rsi + rdi - 0x173848aa]
0x000034ae      4431f8         xor eax, r15d
0x000034b1      897424bc       mov dword [rsp - 0x44], esi
0x000034b5      44895424cc     mov dword [rsp - 0x34], r10d
0x000034ba      4421d8         and eax, r11d
0x000034bd      448b6324       mov r12d, dword [rbx + 0x24]
0x000034c1      44894424c4     mov dword [rsp - 0x3c], r8d
0x000034c6      31f8           xor eax, edi
0x000034c8      438dbc18eece.  lea edi, [r8 + r11 - 0x3e423112]
0x000034d0      448b432c       mov r8d, dword [rbx + 0x2c]
0x000034d4      01d0           add eax, edx
0x000034d6      4489da         mov edx, r11d
0x000034d9      c1c007         rol eax, 7
0x000034dc      4431fa         xor edx, r15d
0x000034df      44896424d4     mov dword [rsp - 0x2c], r12d
0x000034e4      4401d8         add eax, r11d
0x000034e7      44894424dc     mov dword [rsp - 0x24], r8d
0x000034ec      21c2           and edx, eax
0x000034ee      4189c1         mov r9d, eax
0x000034f1      4431fa         xor edx, r15d
0x000034f4      4531d9         xor r9d, r11d
0x000034f7      01ca           add edx, ecx
0x000034f9      8b4b08         mov ecx, dword [rbx + 8]
0x000034fc      c1c20c         rol edx, 0xc
0x000034ff      01c2           add edx, eax
0x00003501      428db439db70.  lea esi, [rcx + r15 + 0x242070db]
0x00003509      894c24c0       mov dword [rsp - 0x40], ecx
0x0000350d      4489c9         mov ecx, r9d
0x00003510      21d1           and ecx, edx
0x00003512      4189c1         mov r9d, eax
0x00003515      4431d9         xor ecx, r11d
0x00003518      4131d1         xor r9d, edx
0x0000351b      01f1           add ecx, esi
0x0000351d      4489ce         mov esi, r9d
0x00003520      448b4b10       mov r9d, dword [rbx + 0x10]
0x00003524      c1c90f         ror ecx, 0xf
0x00003527      01d1           add ecx, edx
0x00003529      21ce           and esi, ecx
0x0000352b      44894c24c8     mov dword [rsp - 0x38], r9d
0x00003530      31c6           xor esi, eax
0x00003532      01fe           add esi, edi
0x00003534      418dbc01af0f.  lea edi, [r9 + rax - 0xa83f051]
0x0000353c      89d0           mov eax, edx
0x0000353e      c1ce0a         ror esi, 0xa
0x00003541      31c8           xor eax, ecx
0x00003543      448b4b3c       mov r9d, dword [rbx + 0x3c]
0x00003547      01ce           add esi, ecx
0x00003549      21f0           and eax, esi
0x0000354b      31d0           xor eax, edx
0x0000354d      01f8           add eax, edi
0x0000354f      418dbc122ac6.  lea edi, [r10 + rdx + 0x4787c62a]
0x00003557      89ca           mov edx, ecx
0x00003559      c1c007         rol eax, 7
0x0000355c      31f2           xor edx, esi
0x0000355e      4189ea         mov r10d, ebp
0x00003561      01f0           add eax, esi
0x00003563      44895424e4     mov dword [rsp - 0x1c], r10d
0x00003568      21c2           and edx, eax
0x0000356a      31ca           xor edx, ecx
0x0000356c      01fa           add edx, edi
0x0000356e      8dbc0d134630.  lea edi, [rbp + rcx - 0x57cfb9ed]
0x00003575      89f5           mov ebp, esi
0x00003577      31c5           xor ebp, eax
0x00003579      c1c20c         rol edx, 0xc
0x0000357c      01c2           add edx, eax
0x0000357e      89e9           mov ecx, ebp
0x00003580      89c5           mov ebp, eax
0x00003582      21d1           and ecx, edx
0x00003584      31d5           xor ebp, edx
0x00003586      31f1           xor ecx, esi
0x00003588      01f9           add ecx, edi
0x0000358a      418dbc350195.  lea edi, [r13 + rsi - 0x2b96aff]
0x00003592      89ee           mov esi, ebp
0x00003594      c1c90f         ror ecx, 0xf
0x00003597      8b6b20         mov ebp, dword [rbx + 0x20]
0x0000359a      01d1           add ecx, edx
0x0000359c      21ce           and esi, ecx
0x0000359e      31c6           xor esi, eax
0x000035a0      896c24d0       mov dword [rsp - 0x30], ebp
0x000035a4      01fe           add esi, edi
0x000035a6      8dbc05d89880.  lea edi, [rbp + rax + 0x698098d8]
0x000035ad      89d0           mov eax, edx
0x000035af      c1ce0a         ror esi, 0xa
0x000035b2      31c8           xor eax, ecx
0x000035b4      8b6b30         mov ebp, dword [rbx + 0x30]
0x000035b7      01ce           add esi, ecx
0x000035b9      21f0           and eax, esi
0x000035bb      31d0           xor eax, edx
0x000035bd      01f8           add eax, edi
0x000035bf      418dbc14aff7.  lea edi, [r12 + rdx - 0x74bb0851]
0x000035c7      89ca           mov edx, ecx
0x000035c9      c1c007         rol eax, 7
0x000035cc      31f2           xor edx, esi
0x000035ce      448b6338       mov r12d, dword [rbx + 0x38]
0x000035d2      01f0           add eax, esi
0x000035d4      21c2           and edx, eax
0x000035d6      31ca           xor edx, ecx
0x000035d8      01fa           add edx, edi
0x000035da      8b7b28         mov edi, dword [rbx + 0x28]
0x000035dd      c1c20c         rol edx, 0xc
0x000035e0      01c2           add edx, eax
0x000035e2      897c24d8       mov dword [rsp - 0x28], edi
0x000035e6      8dbc0fb15bff.  lea edi, [rdi + rcx - 0xa44f]
0x000035ed      89f1           mov ecx, esi
0x000035ef      31c1           xor ecx, eax
0x000035f1      21d1           and ecx, edx
0x000035f3      31f1           xor ecx, esi
0x000035f5      01f9           add ecx, edi
0x000035f7      418dbc30bed7.  lea edi, [r8 + rsi - 0x76a32842]
0x000035ff      89c6           mov esi, eax
0x00003601      c1c90f         ror ecx, 0xf
0x00003604      31d6           xor esi, edx
0x00003606      448b4334       mov r8d, dword [rbx + 0x34]
0x0000360a      01d1           add ecx, edx
0x0000360c      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00003610      21ce           and esi, ecx
0x00003612      31c6           xor esi, eax
0x00003614      01fe           add esi, edi
0x00003616      8dbc05221190.  lea edi, [rbp + rax + 0x6b901122]
0x0000361d      89d0           mov eax, edx
0x0000361f      c1ce0a         ror esi, 0xa
0x00003622      31c8           xor eax, ecx
0x00003624      01ce           add esi, ecx
0x00003626      21f0           and eax, esi
0x00003628      31d0           xor eax, edx
0x0000362a      01f8           add eax, edi
0x0000362c      418dbc109371.  lea edi, [r8 + rdx - 0x2678e6d]
0x00003634      89ca           mov edx, ecx
0x00003636      c1c007         rol eax, 7
0x00003639      31f2           xor edx, esi
0x0000363b      01f0           add eax, esi
0x0000363d      21c2           and edx, eax
0x0000363f      31ca           xor edx, ecx
0x00003641      01fa           add edx, edi
0x00003643      418dbc0c8e43.  lea edi, [r12 + rcx - 0x5986bc72]
0x0000364b      89f1           mov ecx, esi
0x0000364d      c1c20c         rol edx, 0xc
0x00003650      31c1           xor ecx, eax
0x00003652      01c2           add edx, eax
0x00003654      21d1           and ecx, edx
0x00003656      31f1           xor ecx, esi
0x00003658      01f9           add ecx, edi
0x0000365a      418dbc312108.  lea edi, [r9 + rsi + 0x49b40821]
0x00003662      89c6           mov esi, eax
0x00003664      c1c90f         ror ecx, 0xf
0x00003667      31d6           xor esi, edx
0x00003669      01d1           add ecx, edx
0x0000366b      21ce           and esi, ecx
0x0000366d      31c6           xor esi, eax
0x0000366f      01fe           add esi, edi
0x00003671      8b7c24bc       mov edi, dword [rsp - 0x44]
0x00003675      c1ce0a         ror esi, 0xa
0x00003678      01ce           add esi, ecx
0x0000367a      8dbc0762251e.  lea edi, [rdi + rax - 0x9e1da9e]
0x00003681      89c8           mov eax, ecx
0x00003683      31f0           xor eax, esi
0x00003685      21d0           and eax, edx
0x00003687      31c8           xor eax, ecx
0x00003689      01f8           add eax, edi
0x0000368b      418dbc1240b3.  lea edi, [r10 + rdx - 0x3fbf4cc0]
0x00003693      89f2           mov edx, esi
0x00003695      c1c005         rol eax, 5
0x00003698      01f0           add eax, esi
0x0000369a      31c2           xor edx, eax
0x0000369c      21ca           and edx, ecx
0x0000369e      31f2           xor edx, esi
0x000036a0      01fa           add edx, edi
0x000036a2      8b7c24dc       mov edi, dword [rsp - 0x24]
0x000036a6      c1c209         rol edx, 9
0x000036a9      01c2           add edx, eax
0x000036ab      8dbc0f515a5e.  lea edi, [rdi + rcx + 0x265e5a51]
0x000036b2      89c1           mov ecx, eax
0x000036b4      31d1           xor ecx, edx
0x000036b6      21f1           and ecx, esi
0x000036b8      31c1           xor ecx, eax
0x000036ba      01f9           add ecx, edi
0x000036bc      418dbc36aac7.  lea edi, [r14 + rsi - 0x16493856]
0x000036c4      89d6           mov esi, edx
0x000036c6      c1c10e         rol ecx, 0xe
0x000036c9      01d1           add ecx, edx
0x000036cb      31ce           xor esi, ecx
0x000036cd      21c6           and esi, eax
0x000036cf      31d6           xor esi, edx
0x000036d1      01fe           add esi, edi
0x000036d3      8b7c24cc       mov edi, dword [rsp - 0x34]
0x000036d7      c1ce0c         ror esi, 0xc
0x000036da      01ce           add esi, ecx
0x000036dc      8dbc075d102f.  lea edi, [rdi + rax - 0x29d0efa3]
0x000036e3      89c8           mov eax, ecx
0x000036e5      31f0           xor eax, esi
0x000036e7      21d0           and eax, edx
0x000036e9      31c8           xor eax, ecx
0x000036eb      01f8           add eax, edi
0x000036ed      8b7c24d8       mov edi, dword [rsp - 0x28]
0x000036f1      c1c005         rol eax, 5
0x000036f4      01f0           add eax, esi
0x000036f6      8dbc17531444.  lea edi, [rdi + rdx + 0x2441453]
0x000036fd      89f2           mov edx, esi
0x000036ff      31c2           xor edx, eax
0x00003701      21ca           and edx, ecx
0x00003703      31f2           xor edx, esi
0x00003705      01fa           add edx, edi
0x00003707      418dbc0981e6.  lea edi, [r9 + rcx - 0x275e197f]
0x0000370f      89c1           mov ecx, eax
0x00003711      c1c209         rol edx, 9
0x00003714      01c2           add edx, eax
0x00003716      31d1           xor ecx, edx
0x00003718      21f1           and ecx, esi
0x0000371a      31c1           xor ecx, eax
0x0000371c      01f9           add ecx, edi
0x0000371e      8b7c24c8       mov edi, dword [rsp - 0x38]
0x00003722      448b5424d4     mov r10d, dword [rsp - 0x2c]
0x00003727      c1c10e         rol ecx, 0xe
0x0000372a      01d1           add ecx, edx
0x0000372c      8dbc37c8fbd3.  lea edi, [rdi + rsi - 0x182c0438]
0x00003733      89d6           mov esi, edx
0x00003735      31ce           xor esi, ecx
0x00003737      21c6           and esi, eax
0x00003739      31d6           xor esi, edx
0x0000373b      01fe           add esi, edi
0x0000373d      418dbc02e6cd.  lea edi, [r10 + rax + 0x21e1cde6]
0x00003745      89c8           mov eax, ecx
0x00003747      c1ce0c         ror esi, 0xc
0x0000374a      448b5424d0     mov r10d, dword [rsp - 0x30]
0x0000374f      01ce           add esi, ecx
0x00003751      31f0           xor eax, esi
0x00003753      21d0           and eax, edx
0x00003755      31c8           xor eax, ecx
0x00003757      01f8           add eax, edi
0x00003759      418dbc14d607.  lea edi, [r12 + rdx - 0x3cc8f82a]
0x00003761      89f2           mov edx, esi
0x00003763      c1c005         rol eax, 5
0x00003766      01f0           add eax, esi
0x00003768      31c2           xor edx, eax
0x0000376a      21ca           and edx, ecx
0x0000376c      31f2           xor edx, esi
0x0000376e      01fa           add edx, edi
0x00003770      8b7c24c4       mov edi, dword [rsp - 0x3c]
0x00003774      c1c209         rol edx, 9
0x00003777      01c2           add edx, eax
0x00003779      8dbc0f870dd5.  lea edi, [rdi + rcx - 0xb2af279]
0x00003780      89c1           mov ecx, eax
0x00003782      31d1           xor ecx, edx
0x00003784      21f1           and ecx, esi
0x00003786      418db432ed14.  lea esi, [r10 + rsi + 0x455a14ed]
0x0000378e      4189d2         mov r10d, edx
0x00003791      31c1           xor ecx, eax
0x00003793      01f9           add ecx, edi
0x00003795      c1c10e         rol ecx, 0xe
0x00003798      01d1           add ecx, edx
0x0000379a      4131ca         xor r10d, ecx
0x0000379d      4489d7         mov edi, r10d
0x000037a0      21c7           and edi, eax
0x000037a2      31d7           xor edi, edx
0x000037a4      01f7           add edi, esi
0x000037a6      418db40005e9.  lea esi, [r8 + rax - 0x561c16fb]
0x000037ae      89c8           mov eax, ecx
0x000037b0      c1cf0c         ror edi, 0xc
0x000037b3      01cf           add edi, ecx
0x000037b5      31f8           xor eax, edi
0x000037b7      448d943d8a4c.  lea r10d, [rbp + rdi - 0x72d5b376]
0x000037bf      21d0           and eax, edx
0x000037c1      31c8           xor eax, ecx
0x000037c3      44895424ec     mov dword [rsp - 0x14], r10d
0x000037c8      01f0           add eax, esi
0x000037ca      8b7424c0       mov esi, dword [rsp - 0x40]
0x000037ce      c1c005         rol eax, 5
0x000037d1      01f8           add eax, edi
0x000037d3      8db416f8a3ef.  lea esi, [rsi + rdx - 0x3105c08]
0x000037da      89fa           mov edx, edi
0x000037dc      31c2           xor edx, eax
0x000037de      21ca           and edx, ecx
0x000037e0      418d8c0dd902.  lea ecx, [r13 + rcx + 0x676f02d9]
0x000037e8      31fa           xor edx, edi
0x000037ea      01f2           add edx, esi
0x000037ec      89c6           mov esi, eax
0x000037ee      c1c209         rol edx, 9
0x000037f1      01c2           add edx, eax
0x000037f3      31d6           xor esi, edx
0x000037f5      21fe           and esi, edi
0x000037f7      31c6           xor esi, eax
0x000037f9      01ce           add esi, ecx
0x000037fb      89d1           mov ecx, edx
0x000037fd      c1c60e         rol esi, 0xe
0x00003800      01d6           add esi, edx
0x00003802      31f1           xor ecx, esi
0x00003804      4189ca         mov r10d, ecx
0x00003807      4121c2         and r10d, eax
0x0000380a      4489d7         mov edi, r10d
0x0000380d      448b5424cc     mov r10d, dword [rsp - 0x34]
0x00003812      31d7           xor edi, edx
0x00003814      037c24ec       add edi, dword [rsp - 0x14]
0x00003818      418d84024239.  lea eax, [r10 + rax - 0x5c6be]
0x00003820      c1cf0c         ror edi, 0xc
0x00003823      01f7           add edi, esi
0x00003825      31f9           xor ecx, edi
0x00003827      01c1           add ecx, eax
0x00003829      8b4424d0       mov eax, dword [rsp - 0x30]
0x0000382d      c1c104         rol ecx, 4
0x00003830      01f9           add ecx, edi
0x00003832      8d841081f671.  lea eax, [rax + rdx - 0x788e097f]
0x00003839      89f2           mov edx, esi
0x0000383b      31fa           xor edx, edi
0x0000383d      31ca           xor edx, ecx
0x0000383f      01c2           add edx, eax
0x00003841      8b4424dc       mov eax, dword [rsp - 0x24]
0x00003845      c1c20b         rol edx, 0xb
0x00003848      01ca           add edx, ecx
0x0000384a      8d843022619d.  lea eax, [rax + rsi + 0x6d9d6122]
0x00003851      89fe           mov esi, edi
0x00003853      418dbc3c0c38.  lea edi, [r12 + rdi - 0x21ac7f4]
0x0000385b      31ce           xor esi, ecx
0x0000385d      31d6           xor esi, edx
0x0000385f      01c6           add esi, eax
0x00003861      89c8           mov eax, ecx
0x00003863      c1c610         rol esi, 0x10
0x00003866      31d0           xor eax, edx
0x00003868      01d6           add esi, edx
0x0000386a      31f0           xor eax, esi
0x0000386c      4189f2         mov r10d, esi
0x0000386f      01f8           add eax, edi
0x00003871      8b7c24bc       mov edi, dword [rsp - 0x44]
0x00003875      c1c809         ror eax, 9
0x00003878      01f0           add eax, esi
0x0000387a      8dbc0f44eabe.  lea edi, [rdi + rcx - 0x5b4115bc]
0x00003881      89d1           mov ecx, edx
0x00003883      4131c2         xor r10d, eax
0x00003886      31f1           xor ecx, esi
0x00003888      418db435604b.  lea esi, [r13 + rsi - 0x944b4a0]
0x00003890      31c1           xor ecx, eax
0x00003892      01f9           add ecx, edi
0x00003894      8b7c24c8       mov edi, dword [rsp - 0x38]
0x00003898      c1c104         rol ecx, 4
0x0000389b      01c1           add ecx, eax
0x0000389d      8d9417a9cfde.  lea edx, [rdi + rdx + 0x4bdecfa9]
0x000038a4      4489d7         mov edi, r10d
0x000038a7      31cf           xor edi, ecx
0x000038a9      01d7           add edi, edx
0x000038ab      89c2           mov edx, eax
0x000038ad      c1c70b         rol edi, 0xb
0x000038b0      31ca           xor edx, ecx
0x000038b2      01cf           add edi, ecx
0x000038b4      31fa           xor edx, edi
0x000038b6      01f2           add edx, esi
0x000038b8      8b7424d8       mov esi, dword [rsp - 0x28]
0x000038bc      c1c210         rol edx, 0x10
0x000038bf      01fa           add edx, edi
0x000038c1      8d840670bcbf.  lea eax, [rsi + rax - 0x41404390]
0x000038c8      89ce           mov esi, ecx
0x000038ca      31fe           xor esi, edi
0x000038cc      31d6           xor esi, edx
0x000038ce      01c6           add esi, eax
0x000038d0      418d8408c67e.  lea eax, [r8 + rcx + 0x289b7ec6]
0x000038d8      89f9           mov ecx, edi
0x000038da      c1ce09         ror esi, 9
0x000038dd      31d1           xor ecx, edx
0x000038df      418dbc3efa27.  lea edi, [r14 + rdi - 0x155ed806]
0x000038e7      01d6           add esi, edx
0x000038e9      31f1           xor ecx, esi
0x000038eb      4189f2         mov r10d, esi
0x000038ee      01c1           add ecx, eax
0x000038f0      89d0           mov eax, edx
0x000038f2      c1c104         rol ecx, 4
0x000038f5      31f0           xor eax, esi
0x000038f7      01f1           add ecx, esi
0x000038f9      31c8           xor eax, ecx
0x000038fb      4131ca         xor r10d, ecx
0x000038fe      01f8           add eax, edi
0x00003900      8b7c24c4       mov edi, dword [rsp - 0x3c]
0x00003904      c1c00b         rol eax, 0xb
0x00003907      01c8           add eax, ecx
0x00003909      8d94178530ef.  lea edx, [rdi + rdx - 0x2b10cf7b]
0x00003910      4489d7         mov edi, r10d
0x00003913      31c7           xor edi, eax
0x00003915      01d7           add edi, edx
0x00003917      8b5424e4       mov edx, dword [rsp - 0x1c]
0x0000391b      c1c710         rol edi, 0x10
0x0000391e      01c7           add edi, eax
0x00003920      8d9432051d88.  lea edx, [rdx + rsi + 0x4881d05]
0x00003927      89ce           mov esi, ecx
0x00003929      31c6           xor esi, eax
0x0000392b      31fe           xor esi, edi
0x0000392d      01d6           add esi, edx
0x0000392f      8b5424d4       mov edx, dword [rsp - 0x2c]
0x00003933      c1ce09         ror esi, 9
0x00003936      01fe           add esi, edi
0x00003938      8d8c0a39d0d4.  lea ecx, [rdx + rcx - 0x262b2fc7]
0x0000393f      89c2           mov edx, eax
0x00003941      8d8405e599db.  lea eax, [rbp + rax - 0x1924661b]
0x00003948      31fa           xor edx, edi
0x0000394a      4189f2         mov r10d, esi
0x0000394d      31f2           xor edx, esi
0x0000394f      01ca           add edx, ecx
0x00003951      89f9           mov ecx, edi
0x00003953      c1c204         rol edx, 4
0x00003956      01f2           add edx, esi
0x00003958      31f1           xor ecx, esi
0x0000395a      31d1           xor ecx, edx
0x0000395c      4131d2         xor r10d, edx
0x0000395f      01c1           add ecx, eax
0x00003961      418d8439f87c.  lea eax, [r9 + rdi + 0x1fa27cf8]
0x00003969      4489d7         mov edi, r10d
0x0000396c      c1c10b         rol ecx, 0xb
0x0000396f      448b5424cc     mov r10d, dword [rsp - 0x34]
0x00003974      01d1           add ecx, edx
0x00003976      31cf           xor edi, ecx
0x00003978      01c7           add edi, eax
0x0000397a      8b4424c0       mov eax, dword [rsp - 0x40]
0x0000397e      c1c710         rol edi, 0x10
0x00003981      01cf           add edi, ecx
0x00003983      8db4306556ac.  lea esi, [rax + rsi - 0x3b53a99b]
0x0000398a      89d0           mov eax, edx
0x0000398c      31c8           xor eax, ecx
0x0000398e      31f8           xor eax, edi
0x00003990      01f0           add eax, esi
0x00003992      418db4164422.  lea esi, [r14 + rdx - 0xbd6ddbc]
0x0000399a      89ca           mov edx, ecx
0x0000399c      c1c809         ror eax, 9
0x0000399f      f7d2           not edx
0x000039a1      448b7424bc     mov r14d, dword [rsp - 0x44]
0x000039a6      01f8           add eax, edi
0x000039a8      09c2           or edx, eax
0x000039aa      31fa           xor edx, edi
0x000039ac      01f2           add edx, esi
0x000039ae      418db40d97ff.  lea esi, [r13 + rcx + 0x432aff97]
0x000039b6      4189fd         mov r13d, edi
0x000039b9      c1c206         rol edx, 6
0x000039bc      41f7d5         not r13d
0x000039bf      418dbc3ca723.  lea edi, [r12 + rdi - 0x546bdc59]
0x000039c7      01c2           add edx, eax
0x000039c9      4489e9         mov ecx, r13d
0x000039cc      09d1           or ecx, edx
0x000039ce      4189d5         mov r13d, edx
0x000039d1      31c1           xor ecx, eax
0x000039d3      41f7d5         not r13d
0x000039d6      01f1           add ecx, esi
0x000039d8      89c6           mov esi, eax
0x000039da      c1c10a         rol ecx, 0xa
0x000039dd      f7d6           not esi
0x000039df      01d1           add ecx, edx
0x000039e1      09ce           or esi, ecx
0x000039e3      4189cc         mov r12d, ecx
0x000039e6      31d6           xor esi, edx
0x000039e8      41f7d4         not r12d
0x000039eb      01fe           add esi, edi
0x000039ed      418dbc0239a0.  lea edi, [r10 + rax - 0x36c5fc7]
0x000039f5      4489e8         mov eax, r13d
0x000039f8      c1c60f         rol esi, 0xf
0x000039fb      448b5424e4     mov r10d, dword [rsp - 0x1c]
0x00003a00      01ce           add esi, ecx
0x00003a02      09f0           or eax, esi
0x00003a04      31c8           xor eax, ecx
0x00003a06      01f8           add eax, edi
0x00003a08      8dbc15c3595b.  lea edi, [rbp + rdx + 0x655b59c3]
0x00003a0f      8b6c24c4       mov ebp, dword [rsp - 0x3c]
0x00003a13      c1c80b         ror eax, 0xb
0x00003a16      4489e2         mov edx, r12d
0x00003a19      01f0           add eax, esi
0x00003a1b      09c2           or edx, eax
0x00003a1d      31f2           xor edx, esi
0x00003a1f      01fa           add edx, edi
0x00003a21      8dbc0d92cc0c.  lea edi, [rbp + rcx - 0x70f3336e]
0x00003a28      89f5           mov ebp, esi
0x00003a2a      c1c206         rol edx, 6
0x00003a2d      f7d5           not ebp
0x00003a2f      01c2           add edx, eax
0x00003a31      89e9           mov ecx, ebp
0x00003a33      09d1           or ecx, edx
0x00003a35      89d5           mov ebp, edx
0x00003a37      31c1           xor ecx, eax
0x00003a39      f7d5           not ebp
0x00003a3b      01f9           add ecx, edi
0x00003a3d      8b7c24d8       mov edi, dword [rsp - 0x28]
0x00003a41      c1c10a         rol ecx, 0xa
0x00003a44      01d1           add ecx, edx
0x00003a46      8dbc377df4ef.  lea edi, [rdi + rsi - 0x100b83]
0x00003a4d      89c6           mov esi, eax
0x00003a4f      f7d6           not esi
0x00003a51      09ce           or esi, ecx
0x00003a53      31d6           xor esi, edx
0x00003a55      01fe           add esi, edi
0x00003a57      418dbc06d15d.  lea edi, [r14 + rax - 0x7a7ba22f]
0x00003a5f      89e8           mov eax, ebp
0x00003a61      c1c60f         rol esi, 0xf
0x00003a64      448b7424d0     mov r14d, dword [rsp - 0x30]
0x00003a69      89cd           mov ebp, ecx
0x00003a6b      01ce           add esi, ecx
0x00003a6d      f7d5           not ebp
0x00003a6f      09f0           or eax, esi
0x00003a71      31c8           xor eax, ecx
0x00003a73      01f8           add eax, edi
0x00003a75      418dbc164f7e.  lea edi, [r14 + rdx + 0x6fa87e4f]
0x00003a7d      89ea           mov edx, ebp
0x00003a7f      c1c80b         ror eax, 0xb
0x00003a82      89f5           mov ebp, esi
0x00003a84      448b7424dc     mov r14d, dword [rsp - 0x24]
0x00003a89      01f0           add eax, esi
0x00003a8b      f7d5           not ebp
0x00003a8d      09c2           or edx, eax
0x00003a8f      31f2           xor edx, esi
0x00003a91      01fa           add edx, edi
0x00003a93      418dbc09e0e6.  lea edi, [r9 + rcx - 0x1d31920]
0x00003a9b      89e9           mov ecx, ebp
0x00003a9d      c1c206         rol edx, 6
0x00003aa0      448b4c24c8     mov r9d, dword [rsp - 0x38]
0x00003aa5      01c2           add edx, eax
0x00003aa7      09d1           or ecx, edx
0x00003aa9      31c1           xor ecx, eax
0x00003aab      01f9           add ecx, edi
0x00003aad      418dbc321443.  lea edi, [r10 + rsi - 0x5cfebcec]
0x00003ab5      89c6           mov esi, eax
0x00003ab7      c1c10a         rol ecx, 0xa
0x00003aba      f7d6           not esi
0x00003abc      418d8400a111.  lea eax, [r8 + rax + 0x4e0811a1]
0x00003ac4      01d1           add ecx, edx
0x00003ac6      4189d0         mov r8d, edx
0x00003ac9      448b5424d4     mov r10d, dword [rsp - 0x2c]
0x00003ace      09ce           or esi, ecx
0x00003ad0      41f7d0         not r8d
0x00003ad3      31d6           xor esi, edx
0x00003ad5      418d9411827e.  lea edx, [r9 + rdx - 0x8ac817e]
0x00003add      4189c9         mov r9d, ecx
0x00003ae0      01fe           add esi, edi
0x00003ae2      4489c7         mov edi, r8d
0x00003ae5      41f7d1         not r9d
0x00003ae8      c1c60f         rol esi, 0xf
0x00003aeb      01ce           add esi, ecx
0x00003aed      09f7           or edi, esi
0x00003aef      31cf           xor edi, ecx
0x00003af1      418d8c0e35f2.  lea ecx, [r14 + rcx - 0x42c50dcb]
0x00003af9      01c7           add edi, eax
0x00003afb      4489c8         mov eax, r9d
0x00003afe      c1cf0b         ror edi, 0xb
0x00003b01      01f7           add edi, esi
0x00003b03      09f8           or eax, edi
0x00003b05      31f0           xor eax, esi
0x00003b07      01d0           add eax, edx
0x00003b09      89f2           mov edx, esi
0x00003b0b      c1c006         rol eax, 6
0x00003b0e      f7d2           not edx
0x00003b10      01f8           add eax, edi
0x00003b12      09c2           or edx, eax
0x00003b14      31fa           xor edx, edi
0x00003b16      01ca           add edx, ecx
0x00003b18      8b4c24c0       mov ecx, dword [rsp - 0x40]
0x00003b1c      c1c20a         rol edx, 0xa
0x00003b1f      01c2           add edx, eax
0x00003b21      8db431bbd2d7.  lea esi, [rcx + rsi + 0x2ad7d2bb]
0x00003b28      89f9           mov ecx, edi
0x00003b2a      418dbc3a91d3.  lea edi, [r10 + rdi - 0x14792c6f]
0x00003b32      f7d1           not ecx
0x00003b34      09d1           or ecx, edx
0x00003b36      31c1           xor ecx, eax
0x00003b38      01f1           add ecx, esi
0x00003b3a      89c6           mov esi, eax
0x00003b3c      c1c10f         rol ecx, 0xf
0x00003b3f      f7d6           not esi
0x00003b41      01d1           add ecx, edx
0x00003b43      09ce           or esi, ecx
0x00003b45      31d6           xor esi, edx
0x00003b47      01fe           add esi, edi
0x00003b49      c1ce0b         ror esi, 0xb
0x00003b4c      01ce           add esi, ecx
0x00003b4e      014424e8       add dword [rsp - 0x18], eax
0x00003b52      4101cf         add r15d, ecx
0x00003b55      4101f3         add r11d, esi
0x00003b58      015424e0       add dword [rsp - 0x20], edx
0x00003b5c      48395c24f0     cmp qword [rsp - 0x10], rbx
0x00003b61      0f8719f9ffff   ja 0x3480
0x00003b67      4589fa         mov r10d, r15d
0x00003b6a      488b4424f8     mov rax, qword [rsp - 8]
0x00003b6f      8b5c24e8       mov ebx, dword [rsp - 0x18]
0x00003b73      8918           mov dword [rax], ebx
0x00003b75      8b5c24e0       mov ebx, dword [rsp - 0x20]
0x00003b79      44895804       mov dword [rax + 4], r11d
0x00003b7d      44895008       mov dword [rax + 8], r10d
0x00003b81      89580c         mov dword [rax + 0xc], ebx
0x00003b84      5b             pop rbx
0x00003b85      5d             pop rbp
0x00003b86      415c           pop r12
0x00003b88      415d           pop r13
0x00003b8a      415e           pop r14
0x00003b8c      415f           pop r15
0x00003b8e      c3             ret
0x00003b8f      90             nop
;-- md5_finish_ctx:
0x00003b90      55             push rbp
0x00003b91      53             push rbx
0x00003b92      4889fb         mov rbx, rdi
0x00003b95      8b4718         mov eax, dword [rdi + 0x18]
0x00003b98      4889f5         mov rbp, rsi
0x00003b9b      8b5314         mov edx, dword [rbx + 0x14]
0x00003b9e      83f838         cmp eax, 0x38
0x00003ba1      89c6           mov esi, eax
0x00003ba3      4d19c0         sbb r8, r8
0x00003ba6      4983e0c0       and r8, 0xffffffffffffffc0
0x00003baa      4983e880       sub r8, 0xffffffffffffff80
0x00003bae      83f838         cmp eax, 0x38
0x00003bb1      4819c9         sbb rcx, rcx
0x00003bb4      4883e1f0       and rcx, 0xfffffffffffffff0
0x00003bb8      4883c11f       add rcx, 0x1f
0x00003bbc      83f838         cmp eax, 0x38
0x00003bbf      4819ff         sbb rdi, rdi
0x00003bc2      4531c9         xor r9d, r9d
0x00003bc5      4883e7f0       and rdi, 0xfffffffffffffff0
0x00003bc9      4883c71e       add rdi, 0x1e
0x00003bcd      037310         add esi, dword [rbx + 0x10]
0x00003bd0      410f92c1       setb r9b
0x00003bd4      897310         mov dword [rbx + 0x10], esi
0x00003bd7      4585c9         test r9d, r9d
0x00003bda      7406           je 0x3be2
0x00003bdc      83c201         add edx, 1
0x00003bdf      895314         mov dword [rbx + 0x14], edx
0x00003be2      448d0cf50000.  lea r9d, [rsi*8]
0x00003bea      c1e203         shl edx, 3
0x00003bed      c1ee1d         shr esi, 0x1d
0x00003bf0      09f2           or edx, esi
0x00003bf2      488d35073e00.  lea rsi, obj.fillbuf                    ; 0x7a00
0x00003bf9      44894cbb1c     mov dword [rbx + rdi*4 + 0x1c], r9d
0x00003bfe      4c89c7         mov rdi, r8
0x00003c01      89548b1c       mov dword [rbx + rcx*4 + 0x1c], edx
0x00003c05      4829c7         sub rdi, rax
0x00003c08      4c8d4b1c       lea r9, [rbx + 0x1c]
0x00003c0c      488d4ff8       lea rcx, [rdi - 8]
0x00003c10      498d1401       lea rdx, [r9 + rax]
0x00003c14      4883f908       cmp rcx, 8
0x00003c18      7326           jae 0x3c40
0x00003c1a      f6c104         test cl, 4
0x00003c1d      7571           jne 0x3c90
0x00003c1f      4885c9         test rcx, rcx
0x00003c22      7448           je 0x3c6c
0x00003c24      0fb605d53d00.  movzx eax, byte [obj.fillbuf]           ; [0x7a00:1]=128
0x00003c2b      f6c102         test cl, 2
0x00003c2e      8802           mov byte [rdx], al
0x00003c30      743a           je 0x3c6c
0x00003c32      0fb7440efe     movzx eax, word [rsi + rcx - 2]
0x00003c37      6689440afe     mov word [rdx + rcx - 2], ax
0x00003c3c      eb2e           jmp 0x3c6c
0x00003c3e      6690           nop
0x00003c40      488b05b93d00.  mov rax, qword [obj.fillbuf]            ; [0x7a00:8]=128
0x00003c47      488d7a08       lea rdi, [rdx + 8]
0x00003c4b      4883e7f8       and rdi, 0xfffffffffffffff8
0x00003c4f      488902         mov qword [rdx], rax
0x00003c52      488b440ef8     mov rax, qword [rsi + rcx - 8]
0x00003c57      4889440af8     mov qword [rdx + rcx - 8], rax
0x00003c5c      4829fa         sub rdx, rdi
0x00003c5f      4801d1         add rcx, rdx
0x00003c62      4829d6         sub rsi, rdx
0x00003c65      48c1e903       shr rcx, 3
0x00003c69      f348a5         rep movsq qword [rdi], qword ptr [rsi]
0x00003c6c      4889da         mov rdx, rbx
0x00003c6f      4c89c6         mov rsi, r8
0x00003c72      4c89cf         mov rdi, r9
0x00003c75      e8a6f7ffff     call sym.md5_process_block
0x00003c7a      4889ee         mov rsi, rbp
0x00003c7d      4889df         mov rdi, rbx
0x00003c80      5b             pop rbx
0x00003c81      5d             pop rbp
0x00003c82      e979f7ffff     jmp sym.md5_read_ctx
0x00003c87      660f1f840000.  nop word [rax + rax]
0x00003c90      8b056a3d0000   mov eax, dword [obj.fillbuf]            ; [0x7a00:4]=128
0x00003c96      8902           mov dword [rdx], eax
0x00003c98      8b440efc       mov eax, dword [rsi + rcx - 4]
0x00003c9c      89440afc       mov dword [rdx + rcx - 4], eax
0x00003ca0      ebca           jmp 0x3c6c
0x00003ca2      0f1f4000       nop dword [rax]
0x00003ca6      662e0f1f8400.  nop word cs:[rax + rax]
;-- md5_process_bytes:
0x00003cb0      4157           push r15
0x00003cb2      4156           push r14
0x00003cb4      4155           push r13
0x00003cb6      4154           push r12
0x00003cb8      4989d5         mov r13, rdx
0x00003cbb      55             push rbp
0x00003cbc      53             push rbx
0x00003cbd      4989f4         mov r12, rsi
0x00003cc0      4889fb         mov rbx, rdi
0x00003cc3      4883ec08       sub rsp, 8
0x00003cc7      8b4218         mov eax, dword [rdx + 0x18]
0x00003cca      85c0           test eax, eax
0x00003ccc      0f852e010000   jne 0x3e00
0x00003cd2      4983fc3f       cmp r12, 0x3f
0x00003cd6      0f8608010000   jbe 0x3de4
0x00003cdc      f6c303         test bl, 3
0x00003cdf      0f84e3000000   je 0x3dc8
0x00003ce5      4983fc40       cmp r12, 0x40                           ; segment.PHDR
0x00003ce9      498d6d1c       lea rbp, [r13 + 0x1c]
0x00003ced      7461           je 0x3d50
0x00003cef      4d8d7c24bf     lea r15, [r12 - 0x41]
0x00003cf4      49c1ef06       shr r15, 6
0x00003cf8      4d8d7701       lea r14, [r15 + 1]
0x00003cfc      49c1e606       shl r14, 6
0x00003d00      4901de         add r14, rbx
0x00003d03      0f1f440000     nop dword [rax + rax]
0x00003d08      f30f6f03       movdqu xmm0, xmmword [rbx]
0x00003d0c      4c89ea         mov rdx, r13
0x00003d0f      be40000000     mov esi, 0x40                           ; segment.PHDR
0x00003d14      4889ef         mov rdi, rbp
0x00003d17      4883c340       add rbx, 0x40                           ; segment.PHDR
0x00003d1b      0f114500       movups xmmword [rbp], xmm0
0x00003d1f      f30f6f43d0     movdqu xmm0, xmmword [rbx - 0x30]
0x00003d24      0f114510       movups xmmword [rbp + 0x10], xmm0
0x00003d28      f30f6f43e0     movdqu xmm0, xmmword [rbx - 0x20]
0x00003d2d      0f114520       movups xmmword [rbp + 0x20], xmm0
0x00003d31      f30f6f43f0     movdqu xmm0, xmmword [rbx - 0x10]
0x00003d36      0f114530       movups xmmword [rbp + 0x30], xmm0
0x00003d3a      e8e1f6ffff     call sym.md5_process_block
0x00003d3f      4c39f3         cmp rbx, r14
0x00003d42      75c4           jne 0x3d08
0x00003d44      49f7df         neg r15
0x00003d47      49c1e706       shl r15, 6
0x00003d4b      4f8d643cc0     lea r12, [r12 + r15 - 0x40]
0x00003d50      418b7d18       mov edi, dword [r13 + 0x18]
0x00003d54      4183fc08       cmp r12d, 8
0x00003d58      4489e0         mov eax, r12d
0x00003d5b      488d4c3d00     lea rcx, [rbp + rdi]
0x00003d60      0f83da000000   jae 0x3e40
0x00003d66      41f6c404       test r12b, 4
0x00003d6a      0f85f1010000   jne 0x3f61
0x00003d70      4585e4         test r12d, r12d
0x00003d73      740d           je 0x3d82
0x00003d75      0fb613         movzx edx, byte [rbx]
0x00003d78      a802           test al, 2
0x00003d7a      8811           mov byte [rcx], dl
0x00003d7c      0f85f3010000   jne 0x3f75
0x00003d82      4901fc         add r12, rdi
0x00003d85      4983fc3f       cmp r12, 0x3f
0x00003d89      7623           jbe 0x3dae
0x00003d8b      4c89ea         mov rdx, r13
0x00003d8e      be40000000     mov esi, 0x40                           ; segment.PHDR
0x00003d93      4889ef         mov rdi, rbp
0x00003d96      e885f6ffff     call sym.md5_process_block
0x00003d9b      4983ec40       sub r12, 0x40                           ; segment.PHDR
0x00003d9f      498d755c       lea rsi, [r13 + 0x5c]
0x00003da3      4889ef         mov rdi, rbp
0x00003da6      4c89e2         mov rdx, r12
0x00003da9      e8c2d9ffff     call sym.imp.memcpy
0x00003dae      45896518       mov dword [r13 + 0x18], r12d
0x00003db2      4883c408       add rsp, 8
0x00003db6      5b             pop rbx
0x00003db7      5d             pop rbp
0x00003db8      415c           pop r12
0x00003dba      415d           pop r13
0x00003dbc      415e           pop r14
0x00003dbe      415f           pop r15
0x00003dc0      c3             ret
0x00003dc1      0f1f80000000.  nop dword [rax]
0x00003dc8      4c89e5         mov rbp, r12
0x00003dcb      4889df         mov rdi, rbx
0x00003dce      4c89ea         mov rdx, r13
0x00003dd1      4883e5c0       and rbp, 0xffffffffffffffc0
0x00003dd5      4183e43f       and r12d, 0x3f
0x00003dd9      4889ee         mov rsi, rbp
0x00003ddc      4801eb         add rbx, rbp
0x00003ddf      e83cf6ffff     call sym.md5_process_block
0x00003de4      4d85e4         test r12, r12
0x00003de7      0f856b010000   jne 0x3f58
0x00003ded      4883c408       add rsp, 8
0x00003df1      5b             pop rbx
0x00003df2      5d             pop rbp
0x00003df3      415c           pop r12
0x00003df5      415d           pop r13
0x00003df7      415e           pop r14
0x00003df9      415f           pop r15
0x00003dfb      c3             ret
0x00003dfc      0f1f4000       nop dword [rax]
0x00003e00      89c5           mov ebp, eax
0x00003e02      ba80000000     mov edx, 0x80
0x00003e07      4d8d7d1c       lea r15, [r13 + 0x1c]
0x00003e0b      4829ea         sub rdx, rbp
0x00003e0e      4839f2         cmp rdx, rsi
0x00003e11      498d3c2f       lea rdi, [r15 + rbp]
0x00003e15      480f47d6       cmova rdx, rsi
0x00003e19      4889de         mov rsi, rbx
0x00003e1c      4989d6         mov r14, rdx
0x00003e1f      e84cd9ffff     call sym.imp.memcpy
0x00003e24      418b7518       mov esi, dword [r13 + 0x18]
0x00003e28      4401f6         add esi, r14d
0x00003e2b      83fe40         cmp esi, 0x40                           ; segment.PHDR
0x00003e2e      41897518       mov dword [r13 + 0x18], esi
0x00003e32      775c           ja 0x3e90
0x00003e34      4c01f3         add rbx, r14
0x00003e37      4d29f4         sub r12, r14
0x00003e3a      e993feffff     jmp 0x3cd2
0x00003e3f      90             nop
0x00003e40      488b03         mov rax, qword [rbx]
0x00003e43      4489e2         mov edx, r12d
0x00003e46      488901         mov qword [rcx], rax
0x00003e49      488b4413f8     mov rax, qword [rbx + rdx - 8]
0x00003e4e      48894411f8     mov qword [rcx + rdx - 8], rax
0x00003e53      488d5108       lea rdx, [rcx + 8]
0x00003e57      4889c8         mov rax, rcx
0x00003e5a      4883e2f8       and rdx, 0xfffffffffffffff8
0x00003e5e      4829d0         sub rax, rdx
0x00003e61      4829c3         sub rbx, rax
0x00003e64      4401e0         add eax, r12d
0x00003e67      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00003e6a      83f808         cmp eax, 8
0x00003e6d      0f820fffffff   jb 0x3d82
0x00003e73      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00003e76      31c9           xor ecx, ecx
0x00003e78      89ce           mov esi, ecx
0x00003e7a      83c108         add ecx, 8
0x00003e7d      4c8b0433       mov r8, qword [rbx + rsi]
0x00003e81      39c1           cmp ecx, eax
0x00003e83      4c890432       mov qword [rdx + rsi], r8
0x00003e87      72ef           jb 0x3e78
0x00003e89      e9f4feffff     jmp 0x3d82
0x00003e8e      6690           nop
0x00003e90      83e6c0         and esi, 0xffffffc0                     ; 4294967232
0x00003e93      4c89ea         mov rdx, r13
0x00003e96      4c89ff         mov rdi, r15
0x00003e99      e882f5ffff     call sym.md5_process_block
0x00003e9e      418b4d18       mov ecx, dword [r13 + 0x18]
0x00003ea2      4a8d443500     lea rax, [rbp + r14]
0x00003ea7      4883e0c0       and rax, 0xffffffffffffffc0
0x00003eab      89ca           mov edx, ecx
0x00003ead      4c01f8         add rax, r15
0x00003eb0      83e23f         and edx, 0x3f
0x00003eb3      83fa08         cmp edx, 8
0x00003eb6      41895518       mov dword [r13 + 0x18], edx
0x00003eba      7334           jae 0x3ef0
0x00003ebc      f6c104         test cl, 4
0x00003ebf      757e           jne 0x3f3f
0x00003ec1      85d2           test edx, edx
0x00003ec3      0f846bffffff   je 0x3e34
0x00003ec9      0fb630         movzx esi, byte [rax]
0x00003ecc      83e102         and ecx, 2
0x00003ecf      4188751c       mov byte [r13 + 0x1c], sil
0x00003ed3      0f845bffffff   je 0x3e34
0x00003ed9      0fb74410fe     movzx eax, word [rax + rdx - 2]
0x00003ede      6641894417fe   mov word [r15 + rdx - 2], ax
0x00003ee4      e94bffffff     jmp 0x3e34
0x00003ee9      0f1f80000000.  nop dword [rax]
0x00003ef0      488b08         mov rcx, qword [rax]
0x00003ef3      49894d1c       mov qword [r13 + 0x1c], rcx
0x00003ef7      89d1           mov ecx, edx
0x00003ef9      488b7408f8     mov rsi, qword [rax + rcx - 8]
0x00003efe      4989740ff8     mov qword [r15 + rcx - 8], rsi
0x00003f03      498d4d24       lea rcx, [r13 + 0x24]
0x00003f07      4883e1f8       and rcx, 0xfffffffffffffff8
0x00003f0b      4929cf         sub r15, rcx
0x00003f0e      4c29f8         sub rax, r15
0x00003f11      4101d7         add r15d, edx
0x00003f14      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x00003f18      4183ff08       cmp r15d, 8
0x00003f1c      0f8212ffffff   jb 0x3e34
0x00003f22      4183e7f8       and r15d, 0xfffffff8                    ; 4294967288
0x00003f26      31d2           xor edx, edx
0x00003f28      89d6           mov esi, edx
0x00003f2a      83c208         add edx, 8
0x00003f2d      488b3c30       mov rdi, qword [rax + rsi]
0x00003f31      4439fa         cmp edx, r15d
0x00003f34      48893c31       mov qword [rcx + rsi], rdi
0x00003f38      72ee           jb 0x3f28
0x00003f3a      e9f5feffff     jmp 0x3e34
0x00003f3f      8b08           mov ecx, dword [rax]
0x00003f41      41894d1c       mov dword [r13 + 0x1c], ecx
0x00003f45      8b4410fc       mov eax, dword [rax + rdx - 4]
0x00003f49      41894417fc     mov dword [r15 + rdx - 4], eax
0x00003f4e      e9e1feffff     jmp 0x3e34
0x00003f53      0f1f440000     nop dword [rax + rax]
0x00003f58      498d6d1c       lea rbp, [r13 + 0x1c]
0x00003f5c      e9effdffff     jmp 0x3d50
0x00003f61      8b13           mov edx, dword [rbx]
0x00003f63      8911           mov dword [rcx], edx
0x00003f65      4489e2         mov edx, r12d
0x00003f68      8b4413fc       mov eax, dword [rbx + rdx - 4]
0x00003f6c      894411fc       mov dword [rcx + rdx - 4], eax
0x00003f70      e90dfeffff     jmp 0x3d82
0x00003f75      4489e2         mov edx, r12d
0x00003f78      0fb74413fe     movzx eax, word [rbx + rdx - 2]
0x00003f7d      66894411fe     mov word [rcx + rdx - 2], ax
0x00003f82      e9fbfdffff     jmp 0x3d82
0x00003f87      660f1f840000.  nop word [rax + rax]
;-- md5_buffer:
0x00003f90      55             push rbp
0x00003f91      53             push rbx
0x00003f92      4889d5         mov rbp, rdx
0x00003f95      4881ecb80000.  sub rsp, 0xb8
0x00003f9c      64488b042528.  mov rax, qword fs:[0x28]
0x00003fa5      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003fad      31c0           xor eax, eax
0x00003faf      4889e3         mov rbx, rsp
0x00003fb2      48b801234567.  movabs rax, 0xefcdab8967452301
0x00003fbc      48c744241000.  mov qword [rsp + 0x10], 0
0x00003fc5      48890424       mov qword [rsp], rax
0x00003fc9      4889da         mov rdx, rbx
0x00003fcc      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x00003fd6      4889442408     mov qword [rsp + 8], rax
0x00003fdb      c74424180000.  mov dword [rsp + 0x18], 0
0x00003fe3      e8c8fcffff     call sym.md5_process_bytes
0x00003fe8      4889ee         mov rsi, rbp
0x00003feb      4889df         mov rdi, rbx
0x00003fee      e89dfbffff     call sym.md5_finish_ctx
0x00003ff3      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x00003ffb      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004004      750a           jne 0x4010
0x00004006      4881c4b80000.  add rsp, 0xb8
0x0000400d      5b             pop rbx
0x0000400e      5d             pop rbp
0x0000400f      c3             ret
0x00004010      e87bd6ffff     call sym.imp.__stack_chk_fail
0x00004015      90             nop
0x00004016      662e0f1f8400.  nop word cs:[rax + rax]
;-- md5_stream:
0x00004020      4157           push r15
0x00004022      4156           push r14
0x00004024      4989f6         mov r14, rsi
0x00004027      4155           push r13
0x00004029      4154           push r12
0x0000402b      55             push rbp
0x0000402c      53             push rbx
0x0000402d      4889fd         mov rbp, rdi
0x00004030      bf48800000     mov edi, 0x8048
0x00004035      4881ecb80000.  sub rsp, 0xb8
0x0000403c      64488b042528.  mov rax, qword fs:[0x28]
0x00004045      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000404d      31c0           xor eax, eax
0x0000404f      e83cd7ffff     call sym.imp.malloc
0x00004054      4989c4         mov r12, rax
0x00004057      b801000000     mov eax, 1
0x0000405c      4d85e4         test r12, r12
0x0000405f      0f8486000000   je 0x40eb
0x00004065      48b801234567.  movabs rax, 0xefcdab8967452301
0x0000406f      48c744241000.  mov qword [rsp + 0x10], 0
0x00004078      c74424180000.  mov dword [rsp + 0x18], 0
0x00004080      48890424       mov qword [rsp], rax
0x00004084      48b8fedcba98.  movabs rax, 0x1032547698badcfe
0x0000408e      41bd00800000   mov r13d, 0x8000
0x00004094      4889442408     mov qword [rsp + 8], rax
0x00004099      4989e7         mov r15, rsp
0x0000409c      31db           xor ebx, ebx
0x0000409e      eb28           jmp 0x40c8
0x000040a0      498d3c1c       lea rdi, [r12 + rbx]
0x000040a4      4c89ea         mov rdx, r13
0x000040a7      4889e9         mov rcx, rbp
0x000040aa      4829da         sub rdx, rbx
0x000040ad      be01000000     mov esi, 1
0x000040b2      e869d5ffff     call sym.imp.fread_unlocked
0x000040b7      4801c3         add rbx, rax
0x000040ba      4881fb008000.  cmp rbx, 0x8000
0x000040c1      745d           je 0x4120
0x000040c3      4885c0         test rax, rax
0x000040c6      7470           je 0x4138
0x000040c8      f6450010       test byte [rbp], 0x10
0x000040cc      74d2           je 0x40a0
0x000040ce      4885db         test rbx, rbx
0x000040d1      4889e5         mov rbp, rsp
0x000040d4      753a           jne 0x4110
0x000040d6      4c89f6         mov rsi, r14
0x000040d9      4889ef         mov rdi, rbp
0x000040dc      e8affaffff     call sym.md5_finish_ctx
0x000040e1      4c89e7         mov rdi, r12
0x000040e4      e8c7d4ffff     call sym.imp.free
0x000040e9      31c0           xor eax, eax
0x000040eb      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x000040f3      6448330c2528.  xor rcx, qword fs:[0x28]
0x000040fc      754f           jne 0x414d
0x000040fe      4881c4b80000.  add rsp, 0xb8
0x00004105      5b             pop rbx
0x00004106      5d             pop rbp
0x00004107      415c           pop r12
0x00004109      415d           pop r13
0x0000410b      415e           pop r14
0x0000410d      415f           pop r15
0x0000410f      c3             ret
0x00004110      4889ea         mov rdx, rbp
0x00004113      4889de         mov rsi, rbx
0x00004116      4c89e7         mov rdi, r12
0x00004119      e892fbffff     call sym.md5_process_bytes
0x0000411e      ebb6           jmp 0x40d6
0x00004120      4c89fa         mov rdx, r15
0x00004123      be00800000     mov esi, 0x8000
0x00004128      4c89e7         mov rdi, r12
0x0000412b      e8f0f2ffff     call sym.md5_process_block
0x00004130      e967ffffff     jmp 0x409c
0x00004135      0f1f00         nop dword [rax]
0x00004138      f6450020       test byte [rbp], 0x20
0x0000413c      7490           je 0x40ce
0x0000413e      4c89e7         mov rdi, r12
0x00004141      e86ad4ffff     call sym.imp.free
0x00004146      b801000000     mov eax, 1
0x0000414b      eb9e           jmp 0x40eb
0x0000414d      e83ed5ffff     call sym.imp.__stack_chk_fail
0x00004152      662e0f1f8400.  nop word cs:[rax + rax]
0x0000415c      0f1f4000       nop dword [rax]
;-- fdadvise:
0x00004160      e9bbd5ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00004165      90             nop
0x00004166      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00004170      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00004173      741b           je 0x4190
0x00004175      53             push rbx
0x00004176      89f3           mov ebx, esi
0x00004178      e803d6ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000417d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000417f      31d2           xor edx, edx
0x00004181      31f6           xor esi, esi
0x00004183      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00004184      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00004186      e995d5ffff     jmp sym.imp.posix_fadvise
0x0000418b      0f1f440000     nop dword [rax + rax]
0x00004190      f3c3           ret
0x00004192      662e0f1f8400.  nop word cs:[rax + rax]
0x0000419c      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x000041a0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x000041a2      55             push rbp
0x000041a3      4889f5         mov rbp, rsi
0x000041a6      53             push rbx
0x000041a7      e8a4d6ffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000041ac      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000041af      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000041b2      740d           je 0x41c1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000041b4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x000041b7      e8c4d5ffff     call sym.imp.fileno
0x000041bc      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x000041bf      760f           jbe 0x41d0
0x000041c1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000041c4      5b             pop rbx
0x000041c5      5d             pop rbp
0x000041c6      415c           pop r12
0x000041c8      c3             ret
0x000041c9      0f1f80000000.  nop dword [rax]
0x000041d0      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000041d2      e8991d0000     call sym.dup_safer
0x000041d7      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000041d9      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x000041dc      783a           js 0x4218                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x000041de      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x000041e1      e84a260000     call sym.rpl_fclose
0x000041e6      85c0           test eax, eax
0x000041e8      7513           jne 0x41fd
0x000041ea      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x000041ed      4489e7         mov edi, r12d
0x000041f0      e8fbd5ffff     call sym.imp.fdopen
0x000041f5      4885c0         test rax, rax
0x000041f8      4889c3         mov rbx, rax
0x000041fb      75c4           jne 0x41c1
0x000041fd      e8ced3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00004202      8b28           mov ebp, dword [rax]
0x00004204      4889c3         mov rbx, rax
0x00004207      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0000420a      e801d5ffff     call sym.imp.close
0x0000420f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00004211      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00004213      ebac           jmp 0x41c1
0x00004215      0f1f00         nop dword [rax]
0x00004218      e8b3d3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0000421d      448b20         mov r12d, dword [rax]
0x00004220      4889c5         mov rbp, rax
0x00004223      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00004226      e805260000     call sym.rpl_fclose
0x0000422b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000422d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00004231      eb8e           jmp 0x41c1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00004233      662e0f1f8400.  nop word cs:[rax + rax]
0x0000423d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00004240      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004243      53             push rbx
0x00004244      7477           je 0x42bd                               ; ../coreutils-8.31/lib/progname.c:51
0x00004246      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000424b      4889fb         mov rbx, rdi
0x0000424e      e88dd4ffff     call sym.imp.strrchr
0x00004253      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004256      7455           je 0x42ad
0x00004258      4c8d4001       lea r8, [rax + 1]
0x0000425c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000425f      4829da         sub rdx, rbx
0x00004262      4883fa06       cmp rdx, 6
0x00004266      7e45           jle 0x42ad
0x00004268      488d70fa       lea rsi, [rax - 6]
0x0000426c      488d3d053800.  lea rdi, str..libs                      ; 0x7a78 ; "/.libs/"
0x00004273      b907000000     mov ecx, 7
0x00004278      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000427a      0f97c2         seta dl
0x0000427d      80da00         sbb dl, 0
0x00004280      84d2           test dl, dl
0x00004282      7529           jne 0x42ad
0x00004284      488d3df53700.  lea rdi, [0x00007a80]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000428b      b903000000     mov ecx, 3
0x00004290      4c89c6         mov rsi, r8
0x00004293      4c89c3         mov rbx, r8
0x00004296      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004298      0f97c2         seta dl
0x0000429b      80da00         sbb dl, 0
0x0000429e      84d2           test dl, dl
0x000042a0      750b           jne 0x42ad
0x000042a2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000042a6      48891df35d20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x000042ad      48891d6c5e20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a120:8]=0
0x000042b4      48891d055e20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x000042bb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000042bc      c3             ret
0x000042bd      488b0d1c5e20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x000042c4      488d3d753700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x7a40 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000042cb      ba37000000     mov edx, 0x37                           ; '7'
0x000042d0      be01000000     mov esi, 1
0x000042d5      e8b6d5ffff     call sym.imp.fwrite
0x000042da      e8e1d2ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000042df      90             nop
;-- gettext_quote.part.1:
0x000042e0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000042e1      53             push rbx
0x000042e2      4889fd         mov rbp, rdi
0x000042e5      89f3           mov ebx, esi
0x000042e7      4883ec08       sub rsp, 8
0x000042eb      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000042f0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000042f3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000042f6      80fa55         cmp dl, 0x55
0x000042f9      7475           je 0x4370
0x000042fb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000042fe      7420           je 0x4320
0x00004300      488d058c3700.  lea rax, str.l______l                   ; 0x7a93 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004307      488d15873700.  lea rdx, [0x00007a95]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000430e      83fb09         cmp ebx, 9
0x00004311      480f45c2       cmovne rax, rdx
0x00004315      4883c408       add rsp, 8
0x00004319      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000431a      5d             pop rbp
0x0000431b      c3             ret
0x0000431c      0f1f4000       nop dword [rax]
0x00004320      0fb65001       movzx edx, byte [rax + 1]
0x00004324      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004327      80fa42         cmp dl, 0x42
0x0000432a      75d4           jne 0x4300
0x0000432c      80780231       cmp byte [rax + 2], 0x31
0x00004330      75ce           jne 0x4300
0x00004332      80780338       cmp byte [rax + 3], 0x38
0x00004336      75c8           jne 0x4300
0x00004338      80780430       cmp byte [rax + 4], 0x30
0x0000433c      75c2           jne 0x4300
0x0000433e      80780533       cmp byte [rax + 5], 0x33
0x00004342      75bc           jne 0x4300
0x00004344      80780630       cmp byte [rax + 6], 0x30
0x00004348      75b6           jne 0x4300
0x0000434a      80780700       cmp byte [rax + 7], 0
0x0000434e      75b0           jne 0x4300
0x00004350      807d0060       cmp byte [rbp], 0x60
0x00004354      488d05313700.  lea rax, [0x00007a8c]
0x0000435b      488d152e3700.  lea rdx, [0x00007a90]
0x00004362      480f45c2       cmovne rax, rdx
0x00004366      4883c408       add rsp, 8
0x0000436a      5b             pop rbx
0x0000436b      5d             pop rbp
0x0000436c      c3             ret
0x0000436d      0f1f00         nop dword [rax]
0x00004370      0fb65001       movzx edx, byte [rax + 1]
0x00004374      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004377      80fa54         cmp dl, 0x54
0x0000437a      7584           jne 0x4300
0x0000437c      0fb65002       movzx edx, byte [rax + 2]
0x00004380      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004383      80fa46         cmp dl, 0x46
0x00004386      0f8574ffffff   jne 0x4300
0x0000438c      8078032d       cmp byte [rax + 3], 0x2d
0x00004390      0f856affffff   jne 0x4300
0x00004396      80780438       cmp byte [rax + 4], 0x38
0x0000439a      0f8560ffffff   jne 0x4300
0x000043a0      80780500       cmp byte [rax + 5], 0
0x000043a4      0f8556ffffff   jne 0x4300
0x000043aa      807d0060       cmp byte [rbp], 0x60
0x000043ae      488d05cf3600.  lea rax, [0x00007a84]                   ; "\u2018"
0x000043b5      488d15cc3600.  lea rdx, [0x00007a88]                   ; "\u2019"
0x000043bc      480f45c2       cmovne rax, rdx
0x000043c0      4883c408       add rsp, 8
0x000043c4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000043c5      5d             pop rbp
0x000043c6      c3             ret
0x000043c7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000043d0      4157           push r15
0x000043d2      4156           push r14
0x000043d4      4589c7         mov r15d, r8d
0x000043d7      4155           push r13
0x000043d9      4154           push r12
0x000043db      4989fe         mov r14, rdi
0x000043de      55             push rbp
0x000043df      53             push rbx
0x000043e0      4489cb         mov ebx, r9d
0x000043e3      4989f5         mov r13, rsi
0x000043e6      4889cd         mov rbp, rcx
0x000043e9      83e302         and ebx, 2
0x000043ec      4881ecb80000.  sub rsp, 0xb8
0x000043f3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000043fb      4889542410     mov qword [rsp + 0x10], rdx
0x00004400      4489442408     mov dword [rsp + 8], r8d
0x00004405      44894c2478     mov dword [rsp + 0x78], r9d
0x0000440a      4889442420     mov qword [rsp + 0x20], rax
0x0000440f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004417      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000441c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004424      4889442460     mov qword [rsp + 0x60], rax
0x00004429      64488b042528.  mov rax, qword fs:[0x28]
0x00004432      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000443a      31c0           xor eax, eax
0x0000443c      e82fd2ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004441      4183ff0a       cmp r15d, 0xa
0x00004445      4889442458     mov qword [rsp + 0x58], rax
0x0000444a      0f87af110000   ja 0x55ff
0x00004450      488d0da93600.  lea rcx, [0x00007b00]                   ; "\n\xd7\xff\xffc\xc9\xff\xff8\xd9\xff\xffD\xd7\xff\xff4\xd5\xff\xff\x90\xd5\xff\xff\xe5\xd5\xff\xff*\xd6\xff\xffd\xd6\xff\xffd\xd6\xff\xffd\xd6\xff\xff\xb4\xcc\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\xf4\xcc\xff\xff\xfc\xcb\xff\xff\xbc\xcb\xff\xff\x84\xcd\xff\xfft\xcd\xff\xffd\xcd\xff\xffT\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xff\x9c\xcd\xff\xffD\xcd\xff\xff4\xcd\xff\xff4\xcd\xff\xff\x04\xcd\xff\xff4\xcd\xff\xff\xdc\xcc\xff\xff4\xcd\xff\xff\x97\xcb\xff\xff4\xcd\xff\xff4\xcd\xff\xff4\xcd\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff4\xcd\xff\xff4\xcd\xff\xff4\xcd\xff\xff4\xcd\xff\xffg\xcb\xff\xff\x9c\xcd\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff4\xcd\xff\xff\f\xcc\xff\xff\xdc\xcc\xff\xff4\xcd\xff\xff\xdc\xcc\xff\xff4\xcd\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\xdc\xcc\xff\xff\x97\xca\xff\xff4\xcd\xff\xff\x97\xca\xff\xff\x04\xcd\xff\xff\x88\xcc\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xffx\xcc\xff\xff\xc8\xcd\xff\xff\xb0\xcd\xff\xff`\xcc\xff\xff\xa0\xcd\xff\xffH\xcc\xff\xff\x88\xcd\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xff\x98\xcb\xff\xffp\xcd\xff\xffX\xcd\xff\xffX\xcd\xff\xff@\xcd\xff\xffX\xcd\xff\xff(\xcd\xff\xffX\xcd\xff\xff\x98\xc9\xff\xffX\xcd\xff\xffX\xcd\xff\xffX\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xffX\xcd\xff\xffX\xcd\xff\xffX\xcd\xff\xffX\xcd\xff\xffh\xc9\xff\xff\x98\xcb\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xffX\xcd\xff\xff(\xcc\xff\xff(\xcd\xff\xffX\xcd\xff\xff(\xcd\xff\xffX\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff(\xcd\xff\xff\x98\xc8\xff\xffX\xcd\xff\xff\x98\xc8\xff\xff@\xcd\xff\xff"
0x00004457      4489fa         mov edx, r15d
0x0000445a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000445e      4801c8         add rax, rcx
0x00004461      ffe0           jmp rax
0x00004463      c644240e01     mov byte [rsp + 0xe], 1
0x00004468      c644247c00     mov byte [rsp + 0x7c], 0
0x0000446d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004470      48c744245000.  mov qword [rsp + 0x50], 0
0x00004479      c644240f01     mov byte [rsp + 0xf], 1
0x0000447e      c644240d00     mov byte [rsp + 0xd], 0
0x00004483      488d050b3600.  lea rax, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000448a      48c744241801.  mov qword [rsp + 0x18], 1
0x00004493      4531ff         xor r15d, r15d
0x00004496      c74424080200.  mov dword [rsp + 8], 2
0x0000449e      4889442448     mov qword [rsp + 0x48], rax
0x000044a3      4531db         xor r11d, r11d
0x000044a6      4889e8         mov rax, rbp
0x000044a9      4589e0         mov r8d, r12d
0x000044ac      4c89dd         mov rbp, r11
0x000044af      4989c3         mov r11, rax
0x000044b2      660f1f440000   nop word [rax + rax]
0x000044b8      4939eb         cmp r11, rbp
0x000044bb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000044bf      4983fbff       cmp r11, 0xffffffffffffffff
0x000044c3      750d           jne 0x44d2
0x000044c5      488b442410     mov rax, qword [rsp + 0x10]
0x000044ca      803c2800       cmp byte [rax + rbp], 0
0x000044ce      410f95c4       setne r12b
0x000044d2      4584e4         test r12b, r12b
0x000044d5      0f8455060000   je 0x4b30
0x000044db      837c240802     cmp dword [rsp + 8], 2
0x000044e0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000044e5      4c8d0c2f       lea r9, [rdi + rbp]
0x000044e9      0f95c0         setne al
0x000044ec      2244240d       and al, byte [rsp + 0xd]
0x000044f0      4189c2         mov r10d, eax
0x000044f3      0f84a7000000   je 0x45a0
0x000044f9      488b442418     mov rax, qword [rsp + 0x18]
0x000044fe      4885c0         test rax, rax
0x00004501      0f8429040000   je 0x4930
0x00004507      4983fbff       cmp r11, 0xffffffffffffffff
0x0000450b      488d5c0500     lea rbx, [rbp + rax]
0x00004510      752e           jne 0x4540
0x00004512      4883f801       cmp rax, 1
0x00004516      7628           jbe 0x4540
0x00004518      4488442438     mov byte [rsp + 0x38], r8b
0x0000451d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004522      4c894c2428     mov qword [rsp + 0x28], r9
0x00004527      e854d1ffff     call sym.imp.strlen
0x0000452c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004532      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004538      4989c3         mov r11, rax
0x0000453b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004540      4c39db         cmp rbx, r11
0x00004543      4488542428     mov byte [rsp + 0x28], r10b
0x00004548      0f87b2050000   ja 0x4b00
0x0000454e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004553      488b742448     mov rsi, qword [rsp + 0x48]
0x00004558      4c89cf         mov rdi, r9
0x0000455b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004560      4488442438     mov byte [rsp + 0x38], r8b
0x00004565      4c894c2430     mov qword [rsp + 0x30], r9
0x0000456a      e8c1d1ffff     call sym.imp.memcmp
0x0000456f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004571      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004576      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000457c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004581      0f8579050000   jne 0x4b00
0x00004587      807c240f00     cmp byte [rsp + 0xf], 0
0x0000458c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004592      0f857d0f0000   jne 0x5515
0x00004598      0f1f84000000.  nop dword [rax + rax]
0x000045a0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x000045a4      80fb7e         cmp bl, 0x7e
0x000045a7      0f871b030000   ja 0x48c8
0x000045ad      488d0d783500.  lea rcx, [0x00007b2c]
0x000045b4      0fb6d3         movzx edx, bl
0x000045b7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000045bb      4801c8         add rax, rcx
0x000045be      ffe0           jmp rax
0x000045c0      4531d2         xor r10d, r10d
0x000045c3      4983fb01       cmp r11, 1
0x000045c7      0f95c0         setne al
0x000045ca      4983fbff       cmp r11, 0xffffffffffffffff
0x000045ce      750c           jne 0x45dc
0x000045d0      488b442410     mov rax, qword [rsp + 0x10]
0x000045d5      80780100       cmp byte [rax + 1], 0
0x000045d9      0f95c0         setne al
0x000045dc      837c240802     cmp dword [rsp + 8], 2
0x000045e1      0f94c2         sete dl
0x000045e4      84c0           test al, al
0x000045e6      0f844c020000   je 0x4838
0x000045ec      4531e4         xor r12d, r12d
0x000045ef      31c0           xor eax, eax
0x000045f1      0f1f80000000.  nop dword [rax]
0x000045f8      807c240d01     cmp byte [rsp + 0xd], 1
0x000045fd      0f850f010000   jne 0x4712
0x00004603      84d2           test dl, dl
0x00004605      0f8507010000   jne 0x4712
0x0000460b      488b742420     mov rsi, qword [rsp + 0x20]
0x00004610      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004613      7414           je 0x4629
0x00004615      89da           mov edx, ebx
0x00004617      c0ea05         shr dl, 5
0x0000461a      0fb6d2         movzx edx, dl
0x0000461d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004620      0fa3da         bt edx, ebx
0x00004623      0f824a010000   jb 0x4773
0x00004629      4584d2         test r10b, r10b
0x0000462c      0f8541010000   jne 0x4773
0x00004632      83f001         xor eax, 1
0x00004635      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004639      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000463c      84c0           test al, al
0x0000463e      7420           je 0x4660                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004640      4d39fd         cmp r13, r15
0x00004643      7605           jbe 0x464a
0x00004645      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000464a      498d4701       lea rax, [r15 + 1]
0x0000464e      4939c5         cmp r13, rax
0x00004651      7606           jbe 0x4659
0x00004653      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004659      4983c702       add r15, 2
0x0000465d      4531c0         xor r8d, r8d
0x00004660      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004663      7304           jae 0x4669                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004665      43881c3e       mov byte [r14 + r15], bl
0x00004669      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000466e      4983c701       add r15, 1
0x00004672      b800000000     mov eax, 0
0x00004677      4584e4         test r12b, r12b
0x0000467a      0f44f8         cmove edi, eax
0x0000467d      40887c240e     mov byte [rsp + 0xe], dil
0x00004682      e931feffff     jmp 0x44b8
0x00004687      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004690      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004693      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004697      83f802         cmp eax, 2
0x0000469a      0f84b8050000   je 0x4c58
0x000046a0      83f805         cmp eax, 5
0x000046a3      0f846f050000   je 0x4c18
0x000046a9      83f802         cmp eax, 2
0x000046ac      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000046b1      0f94c2         sete dl
0x000046b4      4531e4         xor r12d, r12d
0x000046b7      31c0           xor eax, eax
0x000046b9      e93affffff     jmp 0x45f8
0x000046be      6690           nop
0x000046c0      4531d2         xor r10d, r10d
0x000046c3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000046c8      0f8402050000   je 0x4bd0
0x000046ce      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000046d3      31d2           xor edx, edx
0x000046d5      31c0           xor eax, eax
0x000046d7      bb27000000     mov ebx, 0x27                           ; '''
0x000046dc      e917ffffff     jmp 0x45f8
0x000046e1      0f1f80000000.  nop dword [rax]
0x000046e8      ba09000000     mov edx, 9
0x000046ed      bb74000000     mov ebx, 0x74                           ; 't'
0x000046f2      837c240802     cmp dword [rsp + 8], 2
0x000046f7      0f94c0         sete al
0x000046fa      2244240f       and al, byte [rsp + 0xf]
0x000046fe      0f854a010000   jne 0x484e
0x00004704      807c240d00     cmp byte [rsp + 0xd], 0
0x00004709      7565           jne 0x4770
0x0000470b      89d3           mov ebx, edx
0x0000470d      4531e4         xor r12d, r12d
0x00004710      31c0           xor eax, eax
0x00004712      807c240f00     cmp byte [rsp + 0xf], 0
0x00004717      0f85eefeffff   jne 0x460b
0x0000471d      e907ffffff     jmp 0x4629                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004722      660f1f440000   nop word [rax + rax]
0x00004728      ba08000000     mov edx, 8
0x0000472d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004732      ebd0           jmp 0x4704
0x00004734      0f1f4000       nop dword [rax]
0x00004738      837c240802     cmp dword [rsp + 8], 2
0x0000473d      0f84cd030000   je 0x4b10
0x00004743      807c240d00     cmp byte [rsp + 0xd], 0
0x00004748      0f8412020000   je 0x4960
0x0000474e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004753      0f8407020000   je 0x4960
0x00004759      48837c241800   cmp qword [rsp + 0x18], 0
0x0000475f      0f85b6030000   jne 0x4b1b
0x00004765      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000476a      660f1f440000   nop word [rax + rax]
0x00004770      4531e4         xor r12d, r12d
0x00004773      837c240802     cmp dword [rsp + 8], 2
0x00004778      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000477b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004780      89d0           mov eax, edx
0x00004782      0f8550080000   jne 0x4fd8
0x00004788      4489c0         mov eax, r8d
0x0000478b      83f001         xor eax, 1
0x0000478e      20d0           and al, dl
0x00004790      742f           je 0x47c1
0x00004792      4d39fd         cmp r13, r15
0x00004795      7605           jbe 0x479c
0x00004797      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000479c      498d5701       lea rdx, [r15 + 1]
0x000047a0      4939d5         cmp r13, rdx
0x000047a3      7606           jbe 0x47ab
0x000047a5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000047ab      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x000047af      4939d5         cmp r13, rdx
0x000047b2      7606           jbe 0x47ba
0x000047b4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000047ba      4983c703       add r15, 3
0x000047be      4189c0         mov r8d, eax
0x000047c1      4d39fd         cmp r13, r15
0x000047c4      7605           jbe 0x47cb
0x000047c6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000047cb      4983c701       add r15, 1
0x000047cf      4883c501       add rbp, 1
0x000047d3      e988feffff     jmp 0x4660
0x000047d8      0f1f84000000.  nop dword [rax + rax]
0x000047e0      807c240d00     cmp byte [rsp + 0xd], 0
0x000047e5      0f85c8010000   jne 0x49b3
0x000047eb      31d2           xor edx, edx
0x000047ed      f644247801     test byte [rsp + 0x78], 1
0x000047f2      0f8413ffffff   je 0x470b
0x000047f8      4883c501       add rbp, 1
0x000047fc      e9b7fcffff     jmp 0x44b8
0x00004801      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00004808      837c240802     cmp dword [rsp + 8], 2
0x0000480d      0f94c2         sete dl
0x00004810      31c0           xor eax, eax
0x00004812      e9e1fdffff     jmp 0x45f8
0x00004817      660f1f840000.  nop word [rax + rax]
0x00004820      ba07000000     mov edx, 7
0x00004825      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000482a      e9d5feffff     jmp 0x4704
0x0000482f      90             nop
0x00004830      837c240802     cmp dword [rsp + 8], 2
0x00004835      0f94c2         sete dl
0x00004838      4885ed         test rbp, rbp
0x0000483b      0f85abfdffff   jne 0x45ec
0x00004841      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004846      20d0           and al, dl
0x00004848      0f84aafdffff   je 0x45f8
0x0000484e      4c89dd         mov rbp, r11
0x00004851      c74424080200.  mov dword [rsp + 8], 2
0x00004859      e9fb060000     jmp 0x4f59
0x0000485e      6690           nop
0x00004860      837c240802     cmp dword [rsp + 8], 2
0x00004865      0f94c2         sete dl
0x00004868      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000486b      ebd4           jmp 0x4841
0x0000486d      0f1f00         nop dword [rax]
0x00004870      837c240802     cmp dword [rsp + 8], 2
0x00004875      bb20000000     mov ebx, 0x20                           ; "@"
0x0000487a      0f94c2         sete dl
0x0000487d      ebc2           jmp 0x4841
0x0000487f      90             nop
0x00004880      ba0d000000     mov edx, 0xd
0x00004885      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000488a      e963feffff     jmp 0x46f2
0x0000488f      90             nop
0x00004890      ba0c000000     mov edx, 0xc
0x00004895      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000489a      e965feffff     jmp 0x4704
0x0000489f      90             nop
0x000048a0      ba0b000000     mov edx, 0xb
0x000048a5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000048aa      e955feffff     jmp 0x4704
0x000048af      90             nop
0x000048b0      ba0a000000     mov edx, 0xa
0x000048b5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000048ba      e933feffff     jmp 0x46f2
0x000048bf      90             nop
0x000048c0      4531d2         xor r10d, r10d
0x000048c3      0f1f440000     nop dword [rax + rax]
0x000048c8      48837c245801   cmp qword [rsp + 0x58], 1
0x000048ce      0f85a4030000   jne 0x4c78
0x000048d4      4c895c2438     mov qword [rsp + 0x38], r11
0x000048d9      4488442430     mov byte [rsp + 0x30], r8b
0x000048de      4488542428     mov byte [rsp + 0x28], r10b
0x000048e3      e8f8cfffff     call sym.imp.__ctype_b_loc
0x000048e8      488b08         mov rcx, qword [rax]
0x000048eb      0fb6d3         movzx edx, bl
0x000048ee      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000048f4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000048fa      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000048ff      bf01000000     mov edi, 1
0x00004904      0fb70451       movzx eax, word [rcx + rdx*2]
0x00004908      66250040       and ax, 0x4000                          ; "("
0x0000490c      410f95c4       setne r12b
0x00004910      0f94c0         sete al
0x00004913      2244240d       and al, byte [rsp + 0xd]
0x00004917      84c0           test al, al
0x00004919      0f8592090000   jne 0x52b1
0x0000491f      837c240802     cmp dword [rsp + 8], 2
0x00004924      0f94c2         sete dl
0x00004927      e9ccfcffff     jmp 0x45f8
0x0000492c      0f1f4000       nop dword [rax]
0x00004930      410fb619       movzx ebx, byte [r9]
0x00004934      80fb7e         cmp bl, 0x7e
0x00004937      7787           ja 0x48c0
0x00004939      488d0de83300.  lea rcx, [0x00007d28]
0x00004940      0fb6d3         movzx edx, bl
0x00004943      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004947      4801c8         add rax, rcx
0x0000494a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000494c      0f1f4000       nop dword [rax]
0x00004950      4531d2         xor r10d, r10d
0x00004953      807c240d00     cmp byte [rsp + 0xd], 0
0x00004958      0f85f0fdffff   jne 0x474e
0x0000495e      6690           nop
0x00004960      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004965      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000496a      e995fdffff     jmp 0x4704
0x0000496f      90             nop
0x00004970      ba0c000000     mov edx, 0xc
0x00004975      4531d2         xor r10d, r10d
0x00004978      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000497d      e982fdffff     jmp 0x4704
0x00004982      660f1f440000   nop word [rax + rax]
0x00004988      ba0a000000     mov edx, 0xa
0x0000498d      4531d2         xor r10d, r10d
0x00004990      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004995      e958fdffff     jmp 0x46f2
0x0000499a      660f1f440000   nop word [rax + rax]
0x000049a0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000049a5      e9c6fdffff     jmp 0x4770
0x000049aa      660f1f440000   nop word [rax + rax]
0x000049b0      4531d2         xor r10d, r10d
0x000049b3      837c240802     cmp dword [rsp + 8], 2
0x000049b8      0f94c2         sete dl
0x000049bb      807c240f00     cmp byte [rsp + 0xf], 0
0x000049c0      0f85940b0000   jne 0x555a
0x000049c6      4489c0         mov eax, r8d
0x000049c9      4c89f9         mov rcx, r15
0x000049cc      83f001         xor eax, 1
0x000049cf      20d0           and al, dl
0x000049d1      742d           je 0x4a00
0x000049d3      4d39fd         cmp r13, r15
0x000049d6      7605           jbe 0x49dd
0x000049d8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000049dd      498d4f01       lea rcx, [r15 + 1]
0x000049e1      4939cd         cmp r13, rcx
0x000049e4      7606           jbe 0x49ec
0x000049e6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000049ec      498d4f02       lea rcx, [r15 + 2]
0x000049f0      4939cd         cmp r13, rcx
0x000049f3      0f8730060000   ja 0x5029
0x000049f9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000049fd      4189c0         mov r8d, eax
0x00004a00      4939cd         cmp r13, rcx
0x00004a03      7605           jbe 0x4a0a
0x00004a05      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004a0a      837c240802     cmp dword [rsp + 8], 2
0x00004a0f      4c8d7901       lea r15, [rcx + 1]
0x00004a13      0f8400060000   je 0x5019
0x00004a19      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004a1d      4c39d8         cmp rax, r11
0x00004a20      7319           jae 0x4a3b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004a22      488b442410     mov rax, qword [rsp + 0x10]
0x00004a27      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00004a2c      88442428       mov byte [rsp + 0x28], al
0x00004a30      83e830         sub eax, 0x30
0x00004a33      3c09           cmp al, 9
0x00004a35      0f862e080000   jbe 0x5269
0x00004a3b      4489e0         mov eax, r12d
0x00004a3e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004a43      4531e4         xor r12d, r12d
0x00004a46      e9adfbffff     jmp 0x45f8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00004a4b      0f1f440000     nop dword [rax + rax]
0x00004a50      837c240802     cmp dword [rsp + 8], 2
0x00004a55      4589d4         mov r12d, r10d
0x00004a58      0f94c2         sete dl
0x00004a5b      4531d2         xor r10d, r10d
0x00004a5e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004a60      e993fbffff     jmp 0x45f8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004a65      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004a68      837c240802     cmp dword [rsp + 8], 2
0x00004a6d      0f94c2         sete dl
0x00004a70      4531d2         xor r10d, r10d
0x00004a73      e9c0fdffff     jmp 0x4838
0x00004a78      0f1f84000000.  nop dword [rax + rax]
0x00004a80      837c240802     cmp dword [rsp + 8], 2
0x00004a85      0f94c2         sete dl
0x00004a88      4531d2         xor r10d, r10d
0x00004a8b      4531e4         xor r12d, r12d
0x00004a8e      e9aefdffff     jmp 0x4841
0x00004a93      0f1f440000     nop dword [rax + rax]
0x00004a98      837c240802     cmp dword [rsp + 8], 2
0x00004a9d      4589d4         mov r12d, r10d
0x00004aa0      bb20000000     mov ebx, 0x20                           ; "@"
0x00004aa5      0f94c2         sete dl
0x00004aa8      4531d2         xor r10d, r10d
0x00004aab      e991fdffff     jmp 0x4841
0x00004ab0      ba0d000000     mov edx, 0xd
0x00004ab5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004ab8      bb72000000     mov ebx, 0x72                           ; 'r'
0x00004abd      e930fcffff     jmp 0x46f2
0x00004ac2      660f1f440000   nop word [rax + rax]
0x00004ac8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00004acd      e99efcffff     jmp 0x4770
0x00004ad2      660f1f440000   nop word [rax + rax]
0x00004ad8      ba09000000     mov edx, 9
0x00004add      4531d2         xor r10d, r10d
0x00004ae0      bb74000000     mov ebx, 0x74                           ; 't'
0x00004ae5      e908fcffff     jmp 0x46f2
0x00004aea      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00004af0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004af5      e976fcffff     jmp 0x4770
0x00004afa      660f1f440000   nop word [rax + rax]
0x00004b00      4531d2         xor r10d, r10d
0x00004b03      e998faffff     jmp 0x45a0
0x00004b08      0f1f84000000.  nop dword [rax + rax]
0x00004b10      807c240f00     cmp byte [rsp + 0xf], 0
0x00004b15      0f8565090000   jne 0x5480
0x00004b1b      4883c501       add rbp, 1
0x00004b1f      4489c0         mov eax, r8d
0x00004b22      4531e4         xor r12d, r12d
0x00004b25      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004b2a      e90dfbffff     jmp 0x463c
0x00004b2f      90             nop
0x00004b30      837c240802     cmp dword [rsp + 8], 2
0x00004b35      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004b3a      4589c4         mov r12d, r8d
0x00004b3d      4c89dd         mov rbp, r11
0x00004b40      0f94c2         sete dl
0x00004b43      89d8           mov eax, ebx
0x00004b45      4d85ff         test r15, r15
0x00004b48      0f94c1         sete cl
0x00004b4b      21d0           and eax, edx
0x00004b4d      20c8           and al, cl
0x00004b4f      0f85610a0000   jne 0x55b6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004b55      89d8           mov eax, ebx
0x00004b57      83f001         xor eax, 1
0x00004b5a      20c2           and dl, al
0x00004b5c      0f846a090000   je 0x54cc
0x00004b62      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004b67      0f845d090000   je 0x54ca
0x00004b6d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004b72      0f85f5090000   jne 0x556d
0x00004b78      4d85ed         test r13, r13
0x00004b7b      0f94c0         sete al
0x00004b7e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004b84      0f95c2         setne dl
0x00004b87      20d0           and al, dl
0x00004b89      0f841d0a0000   je 0x55ac
0x00004b8f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004b94      488d1dfa2e00.  lea rbx, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b9b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004b9f      c74424080200.  mov dword [rsp + 8], 2
0x00004ba7      41bf01000000   mov r15d, 1
0x00004bad      48c744241801.  mov qword [rsp + 0x18], 1
0x00004bb6      c644240f00     mov byte [rsp + 0xf], 0
0x00004bbb      48895c2448     mov qword [rsp + 0x48], rbx
0x00004bc0      8844247c       mov byte [rsp + 0x7c], al
0x00004bc4      e9daf8ffff     jmp 0x44a3
0x00004bc9      0f1f80000000.  nop dword [rax]
0x00004bd0      807c240f00     cmp byte [rsp + 0xf], 0
0x00004bd5      0f85a5080000   jne 0x5480
0x00004bdb      4d85ed         test r13, r13
0x00004bde      0f84fc030000   je 0x4fe0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004be4      31d2           xor edx, edx
0x00004be6      48837c245000   cmp qword [rsp + 0x50], 0
0x00004bec      0f85ee030000   jne 0x4fe0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004bf2      4c896c2450     mov qword [rsp + 0x50], r13
0x00004bf7      4983c703       add r15, 3
0x00004bfb      31c0           xor eax, eax
0x00004bfd      448864247c     mov byte [rsp + 0x7c], r12b
0x00004c02      4531c0         xor r8d, r8d
0x00004c05      4989d5         mov r13, rdx
0x00004c08      bb27000000     mov ebx, 0x27                           ; '''
0x00004c0d      e917faffff     jmp 0x4629
0x00004c12      660f1f440000   nop word [rax + rax]
0x00004c18      f644247804     test byte [rsp + 0x78], 4
0x00004c1d      7421           je 0x4c40
0x00004c1f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004c23      4c39d9         cmp rcx, r11
0x00004c26      7318           jae 0x4c40
0x00004c28      488b442410     mov rax, qword [rsp + 0x10]
0x00004c2d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004c32      0f848a070000   je 0x53c2
0x00004c38      0f1f84000000.  nop dword [rax + rax]
0x00004c40      31d2           xor edx, edx
0x00004c42      4531e4         xor r12d, r12d
0x00004c45      31c0           xor eax, eax
0x00004c47      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004c4c      e9a7f9ffff     jmp 0x45f8
0x00004c51      0f1f80000000.  nop dword [rax]
0x00004c58      807c240f00     cmp byte [rsp + 0xf], 0
0x00004c5d      0f851d080000   jne 0x5480
0x00004c63      4531e4         xor r12d, r12d
0x00004c66      31c0           xor eax, eax
0x00004c68      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004c6d      e9b7f9ffff     jmp 0x4629                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004c72      660f1f440000   nop word [rax + rax]
0x00004c78      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004c80      4983fbff       cmp r11, 0xffffffffffffffff
0x00004c84      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004c90      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004c95      752d           jne 0x4cc4
0x00004c97      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004c9c      4488442440     mov byte [rsp + 0x40], r8b
0x00004ca1      4488542438     mov byte [rsp + 0x38], r10b
0x00004ca6      4c894c2430     mov qword [rsp + 0x30], r9
0x00004cab      e8d0c9ffff     call sym.imp.strlen
0x00004cb0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004cb6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004cbc      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004cbf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004cc4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004ccc      31c9           xor ecx, ecx
0x00004cce      885c247e       mov byte [rsp + 0x7e], bl
0x00004cd2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004cd7      4889cb         mov rbx, rcx
0x00004cda      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004ce2      4889442438     mov qword [rsp + 0x38], rax
0x00004ce7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004cec      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004cf4      4c89742440     mov qword [rsp + 0x40], r14
0x00004cf9      4c896c2470     mov qword [rsp + 0x70], r13
0x00004cfe      4c895c2430     mov qword [rsp + 0x30], r11
0x00004d03      488b442410     mov rax, qword [rsp + 0x10]
0x00004d08      4c8d741d00     lea r14, [rbp + rbx]
0x00004d0d      488b542430     mov rdx, qword [rsp + 0x30]
0x00004d12      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004d17      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004d1c      4e8d2c30       lea r13, [rax + r14]
0x00004d20      4c29f2         sub rdx, r14
0x00004d23      4c89ee         mov rsi, r13
0x00004d26      e8a51e0000     call sym.rpl_mbrtowc
0x00004d2b      4885c0         test rax, rax
0x00004d2e      4989c7         mov r15, rax
0x00004d31      744e           je 0x4d81
0x00004d33      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004d37      0f8418060000   je 0x5355
0x00004d3d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004d41      0f849a050000   je 0x52e1
0x00004d47      837c240802     cmp dword [rsp + 8], 2
0x00004d4c      0f94c0         sete al
0x00004d4f      2244240f       and al, byte [rsp + 0xf]
0x00004d53      0f8597010000   jne 0x4ef0
0x00004d59      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004d60      e85bcbffff     call sym.imp.iswprint
0x00004d65      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004d6a      85c0           test eax, eax
0x00004d6c      b800000000     mov eax, 0
0x00004d71      440f44e0       cmove r12d, eax
0x00004d75      4c01fb         add rbx, r15
0x00004d78      e833cbffff     call sym.imp.mbsinit
0x00004d7d      85c0           test eax, eax
0x00004d7f      7482           je 0x4d03
0x00004d81      4489e2         mov edx, r12d
0x00004d84      4889df         mov rdi, rbx
0x00004d87      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004d8d      83f201         xor edx, 1
0x00004d90      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004d95      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004d9b      2254240d       and dl, byte [rsp + 0xd]
0x00004d9f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004da7      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004dac      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004db1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004db6      4883ff01       cmp rdi, 1
0x00004dba      0f86fb050000   jbe 0x53bb
0x00004dc0      4889f9         mov rcx, rdi
0x00004dc3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004dc5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004dcb      4801e9         add rcx, rbp
0x00004dce      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004dd3      e9b6000000     jmp 0x4e8e
0x00004dd8      0f1f84000000.  nop dword [rax + rax]
0x00004de0      837c240802     cmp dword [rsp + 8], 2
0x00004de5      0f94c0         sete al
0x00004de8      4584c9         test r9b, r9b
0x00004deb      0f85af040000   jne 0x52a0
0x00004df1      4489c6         mov esi, r8d
0x00004df4      83f601         xor esi, 1
0x00004df7      4020f0         and al, sil
0x00004dfa      742f           je 0x4e2b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004dfc      4d39fd         cmp r13, r15
0x00004dff      7605           jbe 0x4e06
0x00004e01      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004e06      498d7701       lea rsi, [r15 + 1]
0x00004e0a      4939f5         cmp r13, rsi
0x00004e0d      7606           jbe 0x4e15                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004e0f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004e15      498d7702       lea rsi, [r15 + 2]
0x00004e19      4939f5         cmp r13, rsi
0x00004e1c      7606           jbe 0x4e24
0x00004e1e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004e24      4983c703       add r15, 3
0x00004e28      4189c0         mov r8d, eax
0x00004e2b      4d39fd         cmp r13, r15
0x00004e2e      7605           jbe 0x4e35
0x00004e30      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004e35      498d4701       lea rax, [r15 + 1]
0x00004e39      4939c5         cmp r13, rax
0x00004e3c      760d           jbe 0x4e4b
0x00004e3e      89d8           mov eax, ebx
0x00004e40      c0e806         shr al, 6
0x00004e43      83c030         add eax, 0x30
0x00004e46      4388443e01     mov byte [r14 + r15 + 1], al
0x00004e4b      498d4702       lea rax, [r15 + 2]
0x00004e4f      4939c5         cmp r13, rax
0x00004e52      7610           jbe 0x4e64
0x00004e54      89d8           mov eax, ebx
0x00004e56      c0e803         shr al, 3
0x00004e59      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004e5c      83c030         add eax, 0x30
0x00004e5f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004e64      83e307         and ebx, 7
0x00004e67      4883c501       add rbp, 1
0x00004e6b      4983c703       add r15, 3
0x00004e6f      83c330         add ebx, 0x30
0x00004e72      4839cd         cmp rbp, rcx
0x00004e75      0f83e5f7ffff   jae 0x4660
0x00004e7b      89d6           mov esi, edx
0x00004e7d      4d39fd         cmp r13, r15
0x00004e80      7604           jbe 0x4e86
0x00004e82      43881c3e       mov byte [r14 + r15], bl
0x00004e86      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004e8a      4983c701       add r15, 1
0x00004e8e      84d2           test dl, dl
0x00004e90      0f854affffff   jne 0x4de0
0x00004e96      89f0           mov eax, esi
0x00004e98      83f001         xor eax, 1
0x00004e9b      4421c0         and eax, r8d
0x00004e9e      4584d2         test r10b, r10b
0x00004ea1      740e           je 0x4eb1
0x00004ea3      4d39fd         cmp r13, r15
0x00004ea6      7605           jbe 0x4ead
0x00004ea8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004ead      4983c701       add r15, 1
0x00004eb1      4883c501       add rbp, 1
0x00004eb5      4839cd         cmp rbp, rcx
0x00004eb8      0f837ef7ffff   jae 0x463c
0x00004ebe      84c0           test al, al
0x00004ec0      0f84f8030000   je 0x52be
0x00004ec6      4d39fd         cmp r13, r15
0x00004ec9      7605           jbe 0x4ed0
0x00004ecb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004ed0      498d4701       lea rax, [r15 + 1]
0x00004ed4      4939c5         cmp r13, rax
0x00004ed7      7606           jbe 0x4edf
0x00004ed9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004edf      4983c702       add r15, 2
0x00004ee3      4531d2         xor r10d, r10d
0x00004ee6      4531c0         xor r8d, r8d
0x00004ee9      eb92           jmp 0x4e7d
0x00004eeb      0f1f440000     nop dword [rax + rax]
0x00004ef0      4983ff01       cmp r15, 1
0x00004ef4      0f845ffeffff   je 0x4d59
0x00004efa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004eff      4a8d0c3f       lea rcx, [rdi + r15]
0x00004f03      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004f08      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004f0c      eb0f           jmp 0x4f1d
0x00004f0e      6690           nop
0x00004f10      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004f14      4939d0         cmp r8, rdx
0x00004f17      0f843cfeffff   je 0x4d59
0x00004f1d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004f20      83e95b         sub ecx, 0x5b
0x00004f23      80f921         cmp cl, 0x21
0x00004f26      77e8           ja 0x4f10                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004f28      be01000000     mov esi, 1
0x00004f2d      48d3e6         shl rsi, cl
0x00004f30      4889f1         mov rcx, rsi
0x00004f33      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004f3d      4885f1         test rcx, rsi
0x00004f40      74ce           je 0x4f10
0x00004f42      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004f47      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004f4c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004f51      c74424080200.  mov dword [rsp + 8], 2
0x00004f59      807c240d00     cmp byte [rsp + 0xd], 0
0x00004f5e      7410           je 0x4f70
0x00004f60      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004f62      b804000000     mov eax, 4
0x00004f67      0f44442408     cmove eax, dword [rsp + 8]
0x00004f6c      89442408       mov dword [rsp + 8], eax
0x00004f70      4883ec08       sub rsp, 8
0x00004f74      4889e9         mov rcx, rbp
0x00004f77      4c89ee         mov rsi, r13
0x00004f7a      ff742468       push qword [rsp + 0x68]
0x00004f7e      ff742478       push qword [rsp + 0x78]
0x00004f82      4c89f7         mov rdi, r14
0x00004f85      6a00           push 0
0x00004f87      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004f8f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004f94      488b542430     mov rdx, qword [rsp + 0x30]
0x00004f99      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004f9d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004fa2      4883c420       add rsp, 0x20
0x00004fa6      4989c7         mov r15, rax
0x00004fa9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004fb1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004fba      4c89f8         mov rax, r15
0x00004fbd      0f8500060000   jne 0x55c3
0x00004fc3      4881c4b80000.  add rsp, 0xb8
0x00004fca      5b             pop rbx
0x00004fcb      5d             pop rbp
0x00004fcc      415c           pop r12
0x00004fce      415d           pop r13
0x00004fd0      415e           pop r14
0x00004fd2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004fd4      c3             ret
0x00004fd5      0f1f00         nop dword [rax]
0x00004fd8      4c89dd         mov rbp, r11
0x00004fdb      e979ffffff     jmp 0x4f59
0x00004fe0      4d39fd         cmp r13, r15
0x00004fe3      7605           jbe 0x4fea
0x00004fe5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004fea      498d4701       lea rax, [r15 + 1]
0x00004fee      4939c5         cmp r13, rax
0x00004ff1      7606           jbe 0x4ff9
0x00004ff3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004ff9      498d4702       lea rax, [r15 + 2]
0x00004ffd      4939c5         cmp r13, rax
0x00005000      0f86ec050000   jbe 0x55f2
0x00005006      4c89ea         mov rdx, r13
0x00005009      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000500f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00005014      e9d9fbffff     jmp 0x4bf2
0x00005019      4489e0         mov eax, r12d
0x0000501c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00005021      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00005024      e900f6ffff     jmp 0x4629                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00005029      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000502f      e9c5f9ffff     jmp 0x49f9
0x00005034      85db           test ebx, ebx
0x00005036      0f8527f4ffff   jne 0x4463
0x0000503c      c644240d01     mov byte [rsp + 0xd], 1
0x00005041      4d85ed         test r13, r13
0x00005044      0f8590050000   jne 0x55da
0x0000504a      488d05442a00.  lea rax, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005051      48c744245000.  mov qword [rsp + 0x50], 0
0x0000505a      c644240e01     mov byte [rsp + 0xe], 1
0x0000505f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005064      4531e4         xor r12d, r12d
0x00005067      c644240f00     mov byte [rsp + 0xf], 0
0x0000506c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005075      4889442448     mov qword [rsp + 0x48], rax
0x0000507a      41bf01000000   mov r15d, 1
0x00005080      c74424080200.  mov dword [rsp + 8], 2
0x00005088      e916f4ffff     jmp 0x44a3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000508d      0f1f00         nop dword [rax]
0x00005090      85db           test ebx, ebx
0x00005092      0f85f5030000   jne 0x548d
0x00005098      4d85ed         test r13, r13
0x0000509b      0f8425020000   je 0x52c6
0x000050a1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000050a5      c644240e01     mov byte [rsp + 0xe], 1
0x000050aa      4531e4         xor r12d, r12d
0x000050ad      c644247c00     mov byte [rsp + 0x7c], 0
0x000050b2      48c744245000.  mov qword [rsp + 0x50], 0
0x000050bb      488d05d12900.  lea rax, str.l______l                   ; 0x7a93 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000050c2      c644240f00     mov byte [rsp + 0xf], 0
0x000050c7      c644240d01     mov byte [rsp + 0xd], 1
0x000050cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000050d5      41bf01000000   mov r15d, 1
0x000050db      4889442448     mov qword [rsp + 0x48], rax
0x000050e0      e9bef3ffff     jmp 0x44a3
0x000050e5      488d05a72900.  lea rax, str.l______l                   ; 0x7a93 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000050ec      c644240e01     mov byte [rsp + 0xe], 1
0x000050f1      c644247c00     mov byte [rsp + 0x7c], 0
0x000050f6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000050f9      48c744245000.  mov qword [rsp + 0x50], 0
0x00005102      c644240f01     mov byte [rsp + 0xf], 1
0x00005107      c644240d01     mov byte [rsp + 0xd], 1
0x0000510c      48c744241801.  mov qword [rsp + 0x18], 1
0x00005115      4531ff         xor r15d, r15d
0x00005118      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000511d      c74424080500.  mov dword [rsp + 8], 5
0x00005125      e979f3ffff     jmp 0x44a3
0x0000512a      c644240e01     mov byte [rsp + 0xe], 1
0x0000512f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005134      4531e4         xor r12d, r12d
0x00005137      48c744245000.  mov qword [rsp + 0x50], 0
0x00005140      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005145      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005148      c644240d01     mov byte [rsp + 0xd], 1
0x0000514d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005156      48c744244800.  mov qword [rsp + 0x48], 0
0x0000515f      e93ff3ffff     jmp 0x44a3
0x00005164      837c24080a     cmp dword [rsp + 8], 0xa
0x00005169      7456           je 0x51c1
0x0000516b      488d35252900.  lea rsi, [0x00007a97]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005172      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005174      ba05000000     mov edx, 5
0x00005179      e8e2c4ffff     call sym.imp.dcgettext
0x0000517e      4889c1         mov rcx, rax
0x00005181      4889442468     mov qword [rsp + 0x68], rax
0x00005186      488d050a2900.  lea rax, [0x00007a97]                   ; "`"
0x0000518d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00005190      0f8498030000   je 0x552e
0x00005196      488d35f82800.  lea rsi, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000519d      31ff           xor edi, edi
0x0000519f      ba05000000     mov edx, 5
0x000051a4      e8b7c4ffff     call sym.imp.dcgettext
0x000051a9      4889c1         mov rcx, rax
0x000051ac      4889442460     mov qword [rsp + 0x60], rax
0x000051b1      488d05dd2800.  lea rax, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000051b8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000051bb      0f8483030000   je 0x5544
0x000051c1      4531ff         xor r15d, r15d
0x000051c4      85db           test ebx, ebx
0x000051c6      0f84c1010000   je 0x538d
0x000051cc      85db           test ebx, ebx
0x000051ce      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000051d3      0f9544240f     setne byte [rsp + 0xf]
0x000051d8      4531e4         xor r12d, r12d
0x000051db      4889df         mov rdi, rbx
0x000051de      e89dc4ffff     call sym.imp.strlen
0x000051e3      48895c2448     mov qword [rsp + 0x48], rbx
0x000051e8      4889442418     mov qword [rsp + 0x18], rax
0x000051ed      c644240e01     mov byte [rsp + 0xe], 1
0x000051f2      c644247c00     mov byte [rsp + 0x7c], 0
0x000051f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00005200      c644240d01     mov byte [rsp + 0xd], 1
0x00005205      e999f2ffff     jmp 0x44a3
0x0000520a      c644240e01     mov byte [rsp + 0xe], 1
0x0000520f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005214      4531e4         xor r12d, r12d
0x00005217      48c744245000.  mov qword [rsp + 0x50], 0
0x00005220      c644240f00     mov byte [rsp + 0xf], 0
0x00005225      4531ff         xor r15d, r15d
0x00005228      c644240d00     mov byte [rsp + 0xd], 0
0x0000522d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005236      48c744244800.  mov qword [rsp + 0x48], 0
0x0000523f      e95ff2ffff     jmp 0x44a3
0x00005244      c644240e01     mov byte [rsp + 0xe], 1
0x00005249      c644247c00     mov byte [rsp + 0x7c], 0
0x0000524e      4531e4         xor r12d, r12d
0x00005251      48c744245000.  mov qword [rsp + 0x50], 0
0x0000525a      c644240f01     mov byte [rsp + 0xf], 1
0x0000525f      c644240d01     mov byte [rsp + 0xd], 1
0x00005264      e91af2ffff     jmp 0x4483
0x00005269      4d39fd         cmp r13, r15
0x0000526c      7605           jbe 0x5273
0x0000526e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005273      488d4102       lea rax, [rcx + 2]
0x00005277      4939c5         cmp r13, rax
0x0000527a      7606           jbe 0x5282
0x0000527c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005282      4489e0         mov eax, r12d
0x00005285      4c8d7903       lea r15, [rcx + 3]
0x00005289      4531e4         xor r12d, r12d
0x0000528c      bb30000000     mov ebx, 0x30                           ; '0'
0x00005291      e962f3ffff     jmp 0x45f8
0x00005296      662e0f1f8400.  nop word cs:[rax + rax]
0x000052a0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000052a5      4c89dd         mov rbp, r11
0x000052a8      885c240d       mov byte [rsp + 0xd], bl
0x000052ac      e9a8fcffff     jmp 0x4f59
0x000052b1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000052b6      4531e4         xor r12d, r12d
0x000052b9      e902fbffff     jmp 0x4dc0
0x000052be      4531d2         xor r10d, r10d
0x000052c1      e9b7fbffff     jmp 0x4e7d
0x000052c6      48c744245000.  mov qword [rsp + 0x50], 0
0x000052cf      c644240e01     mov byte [rsp + 0xe], 1
0x000052d4      4531e4         xor r12d, r12d
0x000052d7      c644247c00     mov byte [rsp + 0x7c], 0
0x000052dc      e9dafdffff     jmp 0x50bb
0x000052e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000052e6      4c89f6         mov rsi, r14
0x000052e9      4c89e9         mov rcx, r13
0x000052ec      4889d8         mov rax, rbx
0x000052ef      4889df         mov rdi, rbx
0x000052f2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000052f8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000052fd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00005305      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00005308      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000530e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005316      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000531b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005320      7326           jae 0x5348
0x00005322      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005325      7510           jne 0x5337
0x00005327      eb1f           jmp 0x5348
0x00005329      0f1f80000000.  nop dword [rax]
0x00005330      41803c0100     cmp byte [r9 + rax], 0
0x00005335      740e           je 0x5345
0x00005337      4883c001       add rax, 1
0x0000533b      488d540500     lea rdx, [rbp + rax]
0x00005340      4939d3         cmp r11, rdx
0x00005343      77eb           ja 0x5330
0x00005345      4889c7         mov rdi, rax
0x00005348      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000534d      4531e4         xor r12d, r12d
0x00005350      e961faffff     jmp 0x4db6
0x00005355      4889df         mov rdi, rbx
0x00005358      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000535e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005363      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005369      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005371      4531e4         xor r12d, r12d
0x00005374      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005379      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000537e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005383      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005388      e929faffff     jmp 0x4db6
0x0000538d      488b542468     mov rdx, qword [rsp + 0x68]
0x00005392      0fb602         movzx eax, byte [rdx]
0x00005395      84c0           test al, al
0x00005397      0f842ffeffff   je 0x51cc
0x0000539d      0f1f00         nop dword [rax]
0x000053a0      4d39fd         cmp r13, r15
0x000053a3      7604           jbe 0x53a9
0x000053a5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000053a9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000053ad      420fb6043a     movzx eax, byte [rdx + r15]
0x000053b2      84c0           test al, al
0x000053b4      75ea           jne 0x53a0
0x000053b6      e911feffff     jmp 0x51cc
0x000053bb      89d0           mov eax, edx
0x000053bd      e955f5ffff     jmp 0x4917
0x000053c2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000053c6      80fb3e         cmp bl, 0x3e
0x000053c9      0f8771f8ffff   ja 0x4c40
0x000053cf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000053d9      480fa3d8       bt rax, rbx
0x000053dd      0f835df8ffff   jae 0x4c40
0x000053e3      807c240f00     cmp byte [rsp + 0xf], 0
0x000053e8      0f85e4010000   jne 0x55d2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000053ee      4d39fd         cmp r13, r15
0x000053f1      7605           jbe 0x53f8
0x000053f3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000053f8      498d4701       lea rax, [r15 + 1]
0x000053fc      4939c5         cmp r13, rax
0x000053ff      7606           jbe 0x5407
0x00005401      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005407      498d4702       lea rax, [r15 + 2]
0x0000540b      4939c5         cmp r13, rax
0x0000540e      7606           jbe 0x5416
0x00005410      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005416      498d4703       lea rax, [r15 + 3]
0x0000541a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000541d      7606           jbe 0x5425
0x0000541f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005425      4983c704       add r15, 4
0x00005429      31d2           xor edx, edx
0x0000542b      4531e4         xor r12d, r12d
0x0000542e      31c0           xor eax, eax
0x00005430      4889cd         mov rbp, rcx
0x00005433      e9c0f1ffff     jmp 0x45f8
0x00005438      85db           test ebx, ebx
0x0000543a      0f8488010000   je 0x55c8
0x00005440      488d054e2600.  lea rax, [0x00007a95]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005447      c644240e01     mov byte [rsp + 0xe], 1
0x0000544c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005451      4531e4         xor r12d, r12d
0x00005454      48c744245000.  mov qword [rsp + 0x50], 0
0x0000545d      c644240f01     mov byte [rsp + 0xf], 1
0x00005462      c644240d00     mov byte [rsp + 0xd], 0
0x00005467      48c744241801.  mov qword [rsp + 0x18], 1
0x00005470      4531ff         xor r15d, r15d
0x00005473      4889442448     mov qword [rsp + 0x48], rax
0x00005478      e926f0ffff     jmp 0x44a3
0x0000547d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005480      4c89dd         mov rbp, r11
0x00005483      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005488      e9ccfaffff     jmp 0x4f59
0x0000548d      488d05ff2500.  lea rax, str.l______l                   ; 0x7a93 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005494      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005499      c644247c00     mov byte [rsp + 0x7c], 0
0x0000549e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x000054a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000054aa      c644240f01     mov byte [rsp + 0xf], 1
0x000054af      c644240d01     mov byte [rsp + 0xd], 1
0x000054b4      48c744241801.  mov qword [rsp + 0x18], 1
0x000054bd      4531ff         xor r15d, r15d
0x000054c0      4889442448     mov qword [rsp + 0x48], rax
0x000054c5      e9d9efffff     jmp 0x44a3
0x000054ca      89d0           mov eax, edx
0x000054cc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000054d1      4885db         test rbx, rbx
0x000054d4      742c           je 0x5502
0x000054d6      84c0           test al, al
0x000054d8      7428           je 0x5502
0x000054da      0fb60b         movzx ecx, byte [rbx]
0x000054dd      4889d8         mov rax, rbx
0x000054e0      84c9           test cl, cl
0x000054e2      741e           je 0x5502
0x000054e4      4c89fa         mov rdx, r15
0x000054e7      4c29f8         sub rax, r15
0x000054ea      4939d5         cmp r13, rdx
0x000054ed      7604           jbe 0x54f3
0x000054ef      41880c16       mov byte [r14 + rdx], cl
0x000054f3      4883c201       add rdx, 1
0x000054f7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000054fb      84c9           test cl, cl
0x000054fd      75eb           jne 0x54ea
0x000054ff      4989d7         mov r15, rdx
0x00005502      4d39fd         cmp r13, r15
0x00005505      0f869efaffff   jbe 0x4fa9
0x0000550b      43c6043e00     mov byte [r14 + r15], 0
0x00005510      e994faffff     jmp 0x4fa9
0x00005515      837c240802     cmp dword [rsp + 8], 2
0x0000551a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000551f      4c89dd         mov rbp, r11
0x00005522      0f94c0         sete al
0x00005525      885c240d       mov byte [rsp + 0xd], bl
0x00005529      e92bfaffff     jmp 0x4f59
0x0000552e      8b742408       mov esi, dword [rsp + 8]
0x00005532      4889cf         mov rdi, rcx
0x00005535      e8a6edffff     call sym.gettext_quote.part.1
0x0000553a      4889442468     mov qword [rsp + 0x68], rax
0x0000553f      e952fcffff     jmp 0x5196
0x00005544      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005548      4889cf         mov rdi, rcx
0x0000554b      e890edffff     call sym.gettext_quote.part.1
0x00005550      4889442460     mov qword [rsp + 0x60], rax
0x00005555      e967fcffff     jmp 0x51c1
0x0000555a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000555f      4c89dd         mov rbp, r11
0x00005562      89d0           mov eax, edx
0x00005564      885c240d       mov byte [rsp + 0xd], bl
0x00005568      e9ecf9ffff     jmp 0x4f59
0x0000556d      4883ec08       sub rsp, 8
0x00005571      41b805000000   mov r8d, 5
0x00005577      4c89d9         mov rcx, r11
0x0000557a      ff742468       push qword [rsp + 0x68]
0x0000557e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005582      4c89f7         mov rdi, r14
0x00005585      ff742438       push qword [rsp + 0x38]
0x00005589      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005591      488b542430     mov rdx, qword [rsp + 0x30]
0x00005596      488b742470     mov rsi, qword [rsp + 0x70]
0x0000559b      e830eeffff     call sym.quotearg_buffer_restyled
0x000055a0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x000055a4      4989c7         mov r15, rax
0x000055a7      e9fdf9ffff     jmp 0x4fa9
0x000055ac      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000055b1      e916ffffff     jmp 0x54cc
0x000055b6      c74424080200.  mov dword [rsp + 8], 2
0x000055be      e996f9ffff     jmp 0x4f59
0x000055c3      e8c8c0ffff     call sym.imp.__stack_chk_fail
0x000055c8      c644240d00     mov byte [rsp + 0xd], 0
0x000055cd      e96ffaffff     jmp 0x5041
0x000055d2      4c89dd         mov rbp, r11
0x000055d5      e996f9ffff     jmp 0x4f70
0x000055da      c644240e01     mov byte [rsp + 0xe], 1
0x000055df      31c0           xor eax, eax
0x000055e1      4531e4         xor r12d, r12d
0x000055e4      48c744245000.  mov qword [rsp + 0x50], 0
0x000055ed      e9a2f5ffff     jmp 0x4b94
0x000055f2      4c89ea         mov rdx, r13
0x000055f5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000055fa      e9f3f5ffff     jmp 0x4bf2
0x000055ff      e8bcbfffff     call sym.imp.abort
0x00005604      6690           nop
0x00005606      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005610      4157           push r15
0x00005612      4156           push r14
0x00005614      4c63ff         movsxd r15, edi
0x00005617      4155           push r13
0x00005619      4154           push r12
0x0000561b      4989d6         mov r14, rdx
0x0000561e      55             push rbp
0x0000561f      53             push rbx
0x00005620      4889cd         mov rbp, rcx
0x00005623      4883ec28       sub rsp, 0x28
0x00005627      4889742408     mov qword [rsp + 8], rsi
0x0000562c      e89fbfffff     call sym.imp.__errno_location
0x00005631      4989c5         mov r13, rax
0x00005634      8b00           mov eax, dword [rax]
0x00005636      4585ff         test r15d, r15d
0x00005639      488b1d404a20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005640      89442418       mov dword [rsp + 0x18], eax
0x00005644      0f8867010000   js 0x57b1
0x0000564a      44393d274a20.  cmp dword [obj.nslots], r15d            ; [0x20a078:4]=1
0x00005651      7f62           jg 0x56b5
0x00005653      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000565a      0f8456010000   je 0x57b6
0x00005660      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005664      488d05254a20.  lea rax, obj.slotvec0                   ; 0x20a090
0x0000566b      4963f4         movsxd rsi, r12d
0x0000566e      48c1e604       shl rsi, 4
0x00005672      4839c3         cmp rbx, rax
0x00005675      0f8415010000   je 0x5790
0x0000567b      4889df         mov rdi, rbx
0x0000567e      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005683      4889c3         mov rbx, rax
0x00005686      488905f34920.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x0000568d      48633de44920.  movsxd rdi, dword [obj.nslots]          ; [0x20a078:4]=1
0x00005694      4489e2         mov edx, r12d
0x00005697      31f6           xor esi, esi
0x00005699      29fa           sub edx, edi
0x0000569b      48c1e704       shl rdi, 4
0x0000569f      4863d2         movsxd rdx, edx
0x000056a2      4801df         add rdi, rbx
0x000056a5      48c1e204       shl rdx, 4
0x000056a9      e852c0ffff     call sym.imp.memset
0x000056ae      448925c34920.  mov dword [obj.nslots], r12d            ; [0x20a078:4]=1
0x000056b5      8b4504         mov eax, dword [rbp + 4]
0x000056b8      49c1e704       shl r15, 4
0x000056bc      4883ec08       sub rsp, 8
0x000056c0      4c01fb         add rbx, r15
0x000056c3      4c8d7d08       lea r15, [rbp + 8]
0x000056c7      448b4500       mov r8d, dword [rbp]
0x000056cb      4c8b1b         mov r11, qword [rbx]
0x000056ce      4c8b6308       mov r12, qword [rbx + 8]
0x000056d2      4c89f1         mov rcx, r14
0x000056d5      83c801         or eax, 1
0x000056d8      89442424       mov dword [rsp + 0x24], eax
0x000056dc      ff7530         push qword [rbp + 0x30]
0x000056df      4189c1         mov r9d, eax
0x000056e2      ff7528         push qword [rbp + 0x28]
0x000056e5      4157           push r15
0x000056e7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000056ea      488b542428     mov rdx, qword [rsp + 0x28]
0x000056ef      4c89e7         mov rdi, r12
0x000056f2      4c895c2430     mov qword [rsp + 0x30], r11
0x000056f7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000056fc      4883c420       add rsp, 0x20
0x00005700      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00005705      4939c3         cmp r11, rax
0x00005708      7767           ja 0x5771
0x0000570a      488d7001       lea rsi, [rax + 1]
0x0000570e      488d052b4a20.  lea rax, obj.slot0                      ; 0x20a140
0x00005715      4939c4         cmp r12, rax
0x00005718      488933         mov qword [rbx], rsi
0x0000571b      7412           je 0x572f
0x0000571d      4c89e7         mov rdi, r12
0x00005720      4889742410     mov qword [rsp + 0x10], rsi
0x00005725      e886beffff     call sym.imp.free
0x0000572a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000572f      4889f7         mov rdi, rsi
0x00005732      4889742410     mov qword [rsp + 0x10], rsi
0x00005737      e8640e0000     call sym.xmalloc
0x0000573c      4883ec08       sub rsp, 8
0x00005740      48894308       mov qword [rbx + 8], rax
0x00005744      448b4500       mov r8d, dword [rbp]
0x00005748      ff7530         push qword [rbp + 0x30]
0x0000574b      ff7528         push qword [rbp + 0x28]
0x0000574e      4c89f1         mov rcx, r14
0x00005751      4157           push r15
0x00005753      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005758      4889c7         mov rdi, rax
0x0000575b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005760      488b742430     mov rsi, qword [rsp + 0x30]
0x00005765      4989c4         mov r12, rax
0x00005768      e863ecffff     call sym.quotearg_buffer_restyled
0x0000576d      4883c420       add rsp, 0x20
0x00005771      8b442418       mov eax, dword [rsp + 0x18]
0x00005775      41894500       mov dword [r13], eax
0x00005779      4883c428       add rsp, 0x28
0x0000577d      4c89e0         mov rax, r12
0x00005780      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005781      5d             pop rbp
0x00005782      415c           pop r12
0x00005784      415d           pop r13
0x00005786      415e           pop r14
0x00005788      415f           pop r15
0x0000578a      c3             ret
0x0000578b      0f1f440000     nop dword [rax + rax]
0x00005790      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005792      e8690e0000     call sym.xrealloc
0x00005797      660f6f05f148.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000579f      4889c3         mov rbx, rax
0x000057a2      488905d74820.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x000057a9      0f1100         movups xmmword [rax], xmm0
0x000057ac      e9dcfeffff     jmp 0x568d
0x000057b1      e80abeffff     call sym.imp.abort
0x000057b6      e835100000     call sym.xalloc_die
0x000057bb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000057c0      4154           push r12
0x000057c2      55             push rbp
0x000057c3      53             push rbx
0x000057c4      4889fb         mov rbx, rdi
0x000057c7      e804beffff     call sym.imp.__errno_location
0x000057cc      448b20         mov r12d, dword [rax]
0x000057cf      4889c5         mov rbp, rax
0x000057d2      488d05674a20.  lea rax, obj.default_quoting_options    ; 0x20a240
0x000057d9      4885db         test rbx, rbx
0x000057dc      be38000000     mov esi, 0x38                           ; '8'
0x000057e1      480f44d8       cmove rbx, rax
0x000057e5      4889df         mov rdi, rbx
0x000057e8      e8b30f0000     call sym.xmemdup
0x000057ed      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000057f1      5b             pop rbx
0x000057f2      5d             pop rbp
0x000057f3      415c           pop r12
0x000057f5      c3             ret
0x000057f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00005800      488d05394a20.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00005807      4885ff         test rdi, rdi
0x0000580a      480f44f8       cmove rdi, rax
0x0000580e      8b07           mov eax, dword [rdi]
0x00005810      c3             ret
0x00005811      0f1f440000     nop dword [rax + rax]
0x00005816      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005820      488d05194a20.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00005827      4885ff         test rdi, rdi
0x0000582a      480f44f8       cmove rdi, rax
0x0000582e      8937           mov dword [rdi], esi
0x00005830      c3             ret
0x00005831      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005840      488d05f94920.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00005847      4885ff         test rdi, rdi
0x0000584a      89f1           mov ecx, esi
0x0000584c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005850      89f0           mov eax, esi
0x00005852      83e11f         and ecx, 0x1f
0x00005855      c0e805         shr al, 5
0x00005858      0fb6c0         movzx eax, al
0x0000585b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005860      8b37           mov esi, dword [rdi]
0x00005862      89f0           mov eax, esi
0x00005864      d3e8           shr eax, cl
0x00005866      31c2           xor edx, eax
0x00005868      83e001         and eax, 1
0x0000586b      83e201         and edx, 1
0x0000586e      d3e2           shl edx, cl
0x00005870      31f2           xor edx, esi
0x00005872      8917           mov dword [rdi], edx
0x00005874      c3             ret
0x00005875      90             nop
0x00005876      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005880      488d05b94920.  lea rax, obj.default_quoting_options    ; 0x20a240
0x00005887      4885ff         test rdi, rdi
0x0000588a      480f44f8       cmove rdi, rax
0x0000588e      8b4704         mov eax, dword [rdi + 4]
0x00005891      897704         mov dword [rdi + 4], esi
0x00005894      c3             ret
0x00005895      90             nop
0x00005896      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000058a0      488d05994920.  lea rax, obj.default_quoting_options    ; 0x20a240
0x000058a7      4885ff         test rdi, rdi
0x000058aa      480f44f8       cmove rdi, rax
0x000058ae      4885f6         test rsi, rsi
0x000058b1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000058b7      740e           je 0x58c7
0x000058b9      4885d2         test rdx, rdx
0x000058bc      7409           je 0x58c7
0x000058be      48897728       mov qword [rdi + 0x28], rsi
0x000058c2      48895730       mov qword [rdi + 0x30], rdx
0x000058c6      c3             ret
0x000058c7      4883ec08       sub rsp, 8
0x000058cb      e8f0bcffff     call sym.imp.abort
;-- quotearg_buffer:
0x000058d0      4157           push r15
0x000058d2      4156           push r14
0x000058d4      488d05654920.  lea rax, obj.default_quoting_options    ; 0x20a240
0x000058db      4155           push r13
0x000058dd      4154           push r12
0x000058df      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000058e2      55             push rbp
0x000058e3      53             push rbx
0x000058e4      4c89c3         mov rbx, r8
0x000058e7      4989f6         mov r14, rsi
0x000058ea      4989d7         mov r15, rdx
0x000058ed      4883ec18       sub rsp, 0x18
0x000058f1      4d85c0         test r8, r8
0x000058f4      480f44d8       cmove rbx, rax
0x000058f8      48894c2408     mov qword [rsp + 8], rcx
0x000058fd      e8cebcffff     call sym.imp.__errno_location
0x00005902      448b20         mov r12d, dword [rax]
0x00005905      4889c5         mov rbp, rax
0x00005908      488d4308       lea rax, [rbx + 8]
0x0000590c      4883ec08       sub rsp, 8
0x00005910      448b4b04       mov r9d, dword [rbx + 4]
0x00005914      ff7330         push qword [rbx + 0x30]
0x00005917      448b03         mov r8d, dword [rbx]
0x0000591a      ff7328         push qword [rbx + 0x28]
0x0000591d      4c89fa         mov rdx, r15
0x00005920      50             push rax
0x00005921      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005926      4c89f6         mov rsi, r14
0x00005929      4c89ef         mov rdi, r13
0x0000592c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005931      44896500       mov dword [rbp], r12d
0x00005935      4883c438       add rsp, 0x38
0x00005939      5b             pop rbx
0x0000593a      5d             pop rbp
0x0000593b      415c           pop r12
0x0000593d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000593f      415e           pop r14
0x00005941      415f           pop r15
0x00005943      c3             ret
0x00005944      6690           nop
0x00005946      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005950      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005952      4156           push r14
0x00005954      488d05e54820.  lea rax, obj.default_quoting_options    ; 0x20a240
0x0000595b      4155           push r13
0x0000595d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000595f      4989d4         mov r12, rdx
0x00005962      55             push rbp
0x00005963      53             push rbx
0x00005964      4889cb         mov rbx, rcx
0x00005967      4989fe         mov r14, rdi
0x0000596a      4989f7         mov r15, rsi
0x0000596d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005971      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005974      480f44d8       cmove rbx, rax
0x00005978      31ed           xor ebp, ebp
0x0000597a      e851bcffff     call sym.imp.__errno_location
0x0000597f      4d85e4         test r12, r12
0x00005982      4989c5         mov r13, rax
0x00005985      8b00           mov eax, dword [rax]
0x00005987      400f94c5       sete bpl
0x0000598b      0b6b04         or ebp, dword [rbx + 4]
0x0000598e      4c8d5308       lea r10, [rbx + 8]
0x00005992      4883ec08       sub rsp, 8
0x00005996      448b03         mov r8d, dword [rbx]
0x00005999      4c89f9         mov rcx, r15
0x0000599c      89442414       mov dword [rsp + 0x14], eax
0x000059a0      ff7330         push qword [rbx + 0x30]
0x000059a3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000059a6      ff7328         push qword [rbx + 0x28]
0x000059a9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000059ab      31f6           xor esi, esi
0x000059ad      4189e9         mov r9d, ebp
0x000059b0      31ff           xor edi, edi
0x000059b2      4c89542440     mov qword [rsp + 0x40], r10
0x000059b7      e814eaffff     call sym.quotearg_buffer_restyled
0x000059bc      488d7001       lea rsi, [rax + 1]
0x000059c0      4889442448     mov qword [rsp + 0x48], rax
0x000059c5      4883c420       add rsp, 0x20
0x000059c9      4889f7         mov rdi, rsi
0x000059cc      4889742418     mov qword [rsp + 0x18], rsi
0x000059d1      e8ca0b0000     call sym.xmalloc
0x000059d6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000059db      4883ec08       sub rsp, 8
0x000059df      ff7330         push qword [rbx + 0x30]
0x000059e2      ff7328         push qword [rbx + 0x28]
0x000059e5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000059ea      4189e9         mov r9d, ebp
0x000059ed      448b03         mov r8d, dword [rbx]
0x000059f0      4c89f9         mov rcx, r15
0x000059f3      4c89f2         mov rdx, r14
0x000059f6      4889c7         mov rdi, rax
0x000059f9      4152           push r10
0x000059fb      488b742438     mov rsi, qword [rsp + 0x38]
0x00005a00      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00005a05      8b44242c       mov eax, dword [rsp + 0x2c]
0x00005a09      4883c420       add rsp, 0x20
0x00005a0d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005a10      41894500       mov dword [r13], eax
0x00005a14      7409           je 0x5a1f
0x00005a16      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00005a1b      4d891c24       mov qword [r12], r11
0x00005a1f      488b442410     mov rax, qword [rsp + 0x10]
0x00005a24      4883c438       add rsp, 0x38
0x00005a28      5b             pop rbx
0x00005a29      5d             pop rbp
0x00005a2a      415c           pop r12
0x00005a2c      415d           pop r13
0x00005a2e      415e           pop r14
0x00005a30      415f           pop r15
0x00005a32      c3             ret
0x00005a33      0f1f00         nop dword [rax]
0x00005a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005a40      4889d1         mov rcx, rdx
0x00005a43      31d2           xor edx, edx
0x00005a45      e906ffffff     jmp sym.quotearg_alloc_mem
0x00005a4a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005a50      8b0522462000   mov eax, dword [obj.nslots]             ; [0x20a078:4]=1
0x00005a56      4154           push r12
0x00005a58      4c8b25214620.  mov r12, qword [obj.slotvec]            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005a5f      55             push rbp
0x00005a60      53             push rbx
0x00005a61      83f801         cmp eax, 1
0x00005a64      7e2b           jle 0x5a91                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005a66      83e802         sub eax, 2
0x00005a69      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005a6e      48c1e004       shl rax, 4
0x00005a72      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005a77      660f1f840000.  nop word [rax + rax]
0x00005a80      488b3b         mov rdi, qword [rbx]
0x00005a83      4883c310       add rbx, 0x10
0x00005a87      e824bbffff     call sym.imp.free
0x00005a8c      4839eb         cmp rbx, rbp
0x00005a8f      75ef           jne 0x5a80
0x00005a91      498b7c2408     mov rdi, qword [r12 + 8]
0x00005a96      488d1da34620.  lea rbx, obj.slot0                      ; 0x20a140
0x00005a9d      4839df         cmp rdi, rbx
0x00005aa0      7417           je 0x5ab9
0x00005aa2      e809bbffff     call sym.imp.free
0x00005aa7      48c705de4520.  mov qword [obj.slotvec0], 0x100         ; [0x20a090:8]=256
0x00005ab2      48891ddf4520.  mov qword [0x0020a098], rbx             ; [0x20a098:8]=0x20a140 obj.slot0
0x00005ab9      488d1dd04520.  lea rbx, obj.slotvec0                   ; 0x20a090
0x00005ac0      4939dc         cmp r12, rbx
0x00005ac3      740f           je 0x5ad4
0x00005ac5      4c89e7         mov rdi, r12
0x00005ac8      e8e3baffff     call sym.imp.free
0x00005acd      48891dac4520.  mov qword [obj.slotvec], rbx            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005ad4      5b             pop rbx
0x00005ad5      c70599452000.  mov dword [obj.nslots], 1               ; [0x20a078:4]=1
0x00005adf      5d             pop rbp
0x00005ae0      415c           pop r12
0x00005ae2      c3             ret
0x00005ae3      0f1f00         nop dword [rax]
0x00005ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00005af0      488d0d494720.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00005af7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005afe      e90dfbffff     jmp sym.quotearg_n_options
0x00005b03      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00005b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005b10      488d0d294720.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00005b17      e9f4faffff     jmp sym.quotearg_n_options
0x00005b1c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005b20      488d0d194720.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00005b27      4889fe         mov rsi, rdi
0x00005b2a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005b31      31ff           xor edi, edi
0x00005b33      e9d8faffff     jmp sym.quotearg_n_options
0x00005b38      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005b40      488d0df94620.  lea rcx, obj.default_quoting_options    ; 0x20a240
0x00005b47      4889f2         mov rdx, rsi
0x00005b4a      4889fe         mov rsi, rdi
0x00005b4d      31ff           xor edi, edi
0x00005b4f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005b54      6690           nop
0x00005b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005b60      4883ec48       sub rsp, 0x48
0x00005b64      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005b67      64488b142528.  mov rdx, qword fs:[0x28]
0x00005b70      4889542438     mov qword [rsp + 0x38], rdx
0x00005b75      31d2           xor edx, edx
0x00005b77      83fe0a         cmp esi, 0xa
0x00005b7a      7468           je 0x5be4
0x00005b7c      893424         mov dword [rsp], esi
0x00005b7f      4889e1         mov rcx, rsp
0x00005b82      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005b89      4889c6         mov rsi, rax
0x00005b8c      48c744240400.  mov qword [rsp + 4], 0
0x00005b95      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005b9e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005ba7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005bb0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005bb9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005bc2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005bca      e841faffff     call sym.quotearg_n_options
0x00005bcf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005bd4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005bdd      750a           jne 0x5be9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005bdf      4883c448       add rsp, 0x48
0x00005be3      c3             ret
0x00005be4      e8d7b9ffff     call sym.imp.abort
0x00005be9      e8a2baffff     call sym.imp.__stack_chk_fail
0x00005bee      6690           nop
;-- quotearg_n_style_mem:
0x00005bf0      4883ec48       sub rsp, 0x48
0x00005bf4      4889d0         mov rax, rdx
0x00005bf7      4889ca         mov rdx, rcx
0x00005bfa      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005c03      48894c2438     mov qword [rsp + 0x38], rcx
0x00005c08      31c9           xor ecx, ecx
0x00005c0a      83fe0a         cmp esi, 0xa
0x00005c0d      7461           je 0x5c70
0x00005c0f      893424         mov dword [rsp], esi
0x00005c12      4889e1         mov rcx, rsp
0x00005c15      4889c6         mov rsi, rax
0x00005c18      48c744240400.  mov qword [rsp + 4], 0
0x00005c21      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005c2a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005c33      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005c3c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005c45      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005c4e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005c56      e8b5f9ffff     call sym.quotearg_n_options
0x00005c5b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005c60      644833142528.  xor rdx, qword fs:[0x28]
0x00005c69      750a           jne 0x5c75
0x00005c6b      4883c448       add rsp, 0x48
0x00005c6f      c3             ret
0x00005c70      e84bb9ffff     call sym.imp.abort
0x00005c75      e816baffff     call sym.imp.__stack_chk_fail
0x00005c7a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005c80      4889f2         mov rdx, rsi
0x00005c83      89fe           mov esi, edi
0x00005c85      31ff           xor edi, edi
0x00005c87      e9d4feffff     jmp sym.quotearg_n_style
0x00005c8c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005c90      4889d1         mov rcx, rdx
0x00005c93      4889f2         mov rdx, rsi
0x00005c96      89fe           mov esi, edi
0x00005c98      31ff           xor edi, edi
0x00005c9a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005c9f      90             nop
;-- quotearg_char_mem:
0x00005ca0      4883ec48       sub rsp, 0x48
0x00005ca4      89d1           mov ecx, edx
0x00005ca6      64488b042528.  mov rax, qword fs:[0x28]
0x00005caf      4889442438     mov qword [rsp + 0x38], rax
0x00005cb4      31c0           xor eax, eax
0x00005cb6      488b05b34520.  mov rax, qword [0x0020a270]             ; [0x20a270:8]=0
0x00005cbd      4989e0         mov r8, rsp
0x00005cc0      83e11f         and ecx, 0x1f
0x00005cc3      660f6f057545.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005ccb      4889442430     mov qword [rsp + 0x30], rax
0x00005cd0      89d0           mov eax, edx
0x00005cd2      0f290424       movaps xmmword [rsp], xmm0
0x00005cd6      c0e805         shr al, 5
0x00005cd9      0fb6c0         movzx eax, al
0x00005cdc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005ce1      660f6f056745.  movdqa xmm0, xmmword [0x0020a250]
0x00005ce9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005cee      660f6f056a45.  movdqa xmm0, xmmword [0x0020a260]
0x00005cf6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005cfb      418b11         mov edx, dword [r9]
0x00005cfe      89d0           mov eax, edx
0x00005d00      d3e8           shr eax, cl
0x00005d02      f7d0           not eax
0x00005d04      83e001         and eax, 1
0x00005d07      d3e0           shl eax, cl
0x00005d09      4c89c1         mov rcx, r8
0x00005d0c      31d0           xor eax, edx
0x00005d0e      4889f2         mov rdx, rsi
0x00005d11      4889fe         mov rsi, rdi
0x00005d14      418901         mov dword [r9], eax
0x00005d17      31ff           xor edi, edi
0x00005d19      e8f2f8ffff     call sym.quotearg_n_options
0x00005d1e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005d23      644833342528.  xor rsi, qword fs:[0x28]
0x00005d2c      7505           jne 0x5d33
0x00005d2e      4883c448       add rsp, 0x48
0x00005d32      c3             ret
0x00005d33      e858b9ffff     call sym.imp.__stack_chk_fail
0x00005d38      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005d40      400fbed6       movsx edx, sil
0x00005d44      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005d4b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005d50      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005d55      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005d5c      e93fffffff     jmp sym.quotearg_char_mem
0x00005d61      0f1f440000     nop dword [rax + rax]
0x00005d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005d70      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005d75      e926ffffff     jmp sym.quotearg_char_mem
0x00005d7a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005d80      4883ec48       sub rsp, 0x48
0x00005d84      4889d0         mov rax, rdx
0x00005d87      64488b142528.  mov rdx, qword fs:[0x28]
0x00005d90      4889542438     mov qword [rsp + 0x38], rdx
0x00005d95      31d2           xor edx, edx
0x00005d97      83fe0a         cmp esi, 0xa
0x00005d9a      7468           je 0x5e04
0x00005d9c      893424         mov dword [rsp], esi
0x00005d9f      4889e1         mov rcx, rsp
0x00005da2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005da9      4889c6         mov rsi, rax
0x00005dac      48c744240400.  mov qword [rsp + 4], 0
0x00005db5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005dbe      48c744241400.  mov qword [rsp + 0x14], 0
0x00005dc7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005dd0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005dd9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005de2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005dea      e821f8ffff     call sym.quotearg_n_options
0x00005def      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005df4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005dfd      750a           jne 0x5e09
0x00005dff      4883c448       add rsp, 0x48
0x00005e03      c3             ret
0x00005e04      e8b7b7ffff     call sym.imp.abort
0x00005e09      e882b8ffff     call sym.imp.__stack_chk_fail
0x00005e0e      6690           nop
;-- quotearg_n_custom_mem:
0x00005e10      4883ec48       sub rsp, 0x48
0x00005e14      4989c9         mov r9, rcx
0x00005e17      488b0d524420.  mov rcx, qword [0x0020a270]             ; [0x20a270:8]=0
0x00005e1e      660f6f051a44.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005e26      64488b042528.  mov rax, qword fs:[0x28]
0x00005e2f      4889442438     mov qword [rsp + 0x38], rax
0x00005e34      31c0           xor eax, eax
0x00005e36      0f290424       movaps xmmword [rsp], xmm0
0x00005e3a      4885f6         test rsi, rsi
0x00005e3d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005e42      c704240a0000.  mov dword [rsp], 0xa
0x00005e49      660f6f05ff43.  movdqa xmm0, xmmword [0x0020a250]
0x00005e51      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005e56      660f6f050244.  movdqa xmm0, xmmword [0x0020a260]
0x00005e5e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005e63      7432           je 0x5e97
0x00005e65      4885d2         test rdx, rdx
0x00005e68      742d           je 0x5e97
0x00005e6a      4889742428     mov qword [rsp + 0x28], rsi
0x00005e6f      4889542430     mov qword [rsp + 0x30], rdx
0x00005e74      4889e1         mov rcx, rsp
0x00005e77      4c89c2         mov rdx, r8
0x00005e7a      4c89ce         mov rsi, r9
0x00005e7d      e88ef7ffff     call sym.quotearg_n_options
0x00005e82      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005e87      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005e90      750a           jne 0x5e9c
0x00005e92      4883c448       add rsp, 0x48
0x00005e96      c3             ret
0x00005e97      e824b7ffff     call sym.imp.abort
0x00005e9c      e8efb7ffff     call sym.imp.__stack_chk_fail
0x00005ea1      0f1f440000     nop dword [rax + rax]
0x00005ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005eb0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005eb7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005ebc      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005ec0      4889d1         mov rcx, rdx
0x00005ec3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005eca      4889f2         mov rdx, rsi
0x00005ecd      4889fe         mov rsi, rdi
0x00005ed0      31ff           xor edi, edi
0x00005ed2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005ed7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005ee0      4989c8         mov r8, rcx
0x00005ee3      4889d1         mov rcx, rdx
0x00005ee6      4889f2         mov rdx, rsi
0x00005ee9      4889fe         mov rsi, rdi
0x00005eec      31ff           xor edi, edi
0x00005eee      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005ef3      0f1f00         nop dword [rax]
0x00005ef6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005f00      488d0d394120.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005f07      e904f7ffff     jmp sym.quotearg_n_options
0x00005f0c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005f10      488d0d294120.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005f17      4889f2         mov rdx, rsi
0x00005f1a      4889fe         mov rsi, rdi
0x00005f1d      31ff           xor edi, edi
0x00005f1f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005f24      6690           nop
0x00005f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005f30      488d0d094120.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005f37      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005f3e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005f43      0f1f00         nop dword [rax]
0x00005f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005f50      488d0de94020.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005f57      4889fe         mov rsi, rdi
0x00005f5a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005f61      31ff           xor edi, edi
0x00005f63      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005f68      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x00005f70      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x00005f75      31f6           xor esi, esi
0x00005f77      31c0           xor eax, eax
0x00005f79      e932090000     jmp sym.rpl_fcntl
0x00005f7e      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x00005f80      4157           push r15
0x00005f82      4156           push r14
0x00005f84      4155           push r13
0x00005f86      4154           push r12
0x00005f88      4d89cc         mov r12, r9
0x00005f8b      55             push rbp
0x00005f8c      53             push rbx
0x00005f8d      4889fd         mov rbp, rdi
0x00005f90      4c89c3         mov rbx, r8
0x00005f93      4883ec28       sub rsp, 0x28
0x00005f97      4885f6         test rsi, rsi
0x00005f9a      0f8418010000   je 0x60b8
0x00005fa0      4989d0         mov r8, rdx
0x00005fa3      488d15be1f00.  lea rdx, [0x00007f68]                   ; "%s (%s) %s\n"
0x00005faa      4989c9         mov r9, rcx
0x00005fad      31c0           xor eax, eax
0x00005faf      4889f1         mov rcx, rsi
0x00005fb2      be01000000     mov esi, 1
0x00005fb7      e8e4b8ffff     call sym.imp.__fprintf_chk
0x00005fbc      488d35b81f00.  lea rsi, [0x00007f7b]                   ; "(C)"
0x00005fc3      31ff           xor edi, edi
0x00005fc5      ba05000000     mov edx, 5
0x00005fca      e891b6ffff     call sym.imp.dcgettext
0x00005fcf      488d15ca2200.  lea rdx, obj.version_etc_copyright      ; 0x82a0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005fd6      4889c1         mov rcx, rax
0x00005fd9      41b8e3070000   mov r8d, 0x7e3
0x00005fdf      be01000000     mov esi, 1
0x00005fe4      4889ef         mov rdi, rbp
0x00005fe7      31c0           xor eax, eax
0x00005fe9      e8b2b8ffff     call sym.imp.__fprintf_chk
0x00005fee      488d35132000.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x8008 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005ff5      31ff           xor edi, edi
0x00005ff7      ba05000000     mov edx, 5
0x00005ffc      e85fb6ffff     call sym.imp.dcgettext
0x00006001      4889ee         mov rsi, rbp
0x00006004      4889c7         mov rdi, rax
0x00006007      e834b7ffff     call sym.imp.fputs_unlocked
0x0000600c      4983fc09       cmp r12, 9
0x00006010      0f873a030000   ja 0x6350
0x00006016      488d154b2200.  lea rdx, [0x00008268]
0x0000601d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006021      4801d0         add rax, rdx
0x00006024      ffe0           jmp rax
0x00006026      662e0f1f8400.  nop word cs:[rax + rax]
0x00006030      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006034      488b4310       mov rax, qword [rbx + 0x10]
0x00006038      488d35392100.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x8178 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000603f      4c8b4308       mov r8, qword [rbx + 8]
0x00006043      ba05000000     mov edx, 5
0x00006048      31ff           xor edi, edi
0x0000604a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000604e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006052      4c894c2410     mov qword [rsp + 0x10], r9
0x00006057      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000605b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000605f      48890424       mov qword [rsp], rax
0x00006063      4c89442408     mov qword [rsp + 8], r8
0x00006068      488b1b         mov rbx, qword [rbx]
0x0000606b      e8f0b5ffff     call sym.imp.dcgettext
0x00006070      4883ec08       sub rsp, 8
0x00006074      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00006079      4889c2         mov rdx, rax
0x0000607c      4889d9         mov rcx, rbx
0x0000607f      be01000000     mov esi, 1
0x00006084      4889ef         mov rdi, rbp
0x00006087      31c0           xor eax, eax
0x00006089      4151           push r9
0x0000608b      4155           push r13
0x0000608d      4154           push r12
0x0000608f      4157           push r15
0x00006091      4156           push r14
0x00006093      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00006098      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000609d      e8feb7ffff     call sym.imp.__fprintf_chk
0x000060a2      4883c430       add rsp, 0x30
0x000060a6      4883c428       add rsp, 0x28
0x000060aa      5b             pop rbx
0x000060ab      5d             pop rbp
0x000060ac      415c           pop r12
0x000060ae      415d           pop r13
0x000060b0      415e           pop r14
0x000060b2      415f           pop r15
0x000060b4      c3             ret
0x000060b5      0f1f00         nop dword [rax]
0x000060b8      4989c8         mov r8, rcx
0x000060bb      4889d1         mov rcx, rdx
0x000060be      488d15af1e00.  lea rdx, str.s__s                       ; 0x7f74 ; "%s %s\n"
0x000060c5      be01000000     mov esi, 1
0x000060ca      31c0           xor eax, eax
0x000060cc      e8cfb7ffff     call sym.imp.__fprintf_chk
0x000060d1      e9e6feffff     jmp 0x5fbc
0x000060d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060e0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000060e4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000060e8      488d35b92000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x81a8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000060ef      488b4310       mov rax, qword [rbx + 0x10]
0x000060f3      4c8b4308       mov r8, qword [rbx + 8]
0x000060f7      ba05000000     mov edx, 5
0x000060fc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006100      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006104      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006108      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000610c      488b1b         mov rbx, qword [rbx]
0x0000610f      4c89542418     mov qword [rsp + 0x18], r10
0x00006114      4c894c2410     mov qword [rsp + 0x10], r9
0x00006119      48890424       mov qword [rsp], rax
0x0000611d      4c89442408     mov qword [rsp + 8], r8
0x00006122      31ff           xor edi, edi
0x00006124      e837b5ffff     call sym.imp.dcgettext
0x00006129      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000612e      4152           push r10
0x00006130      e93fffffff     jmp 0x6074
0x00006135      0f1f00         nop dword [rax]
0x00006138      488b1b         mov rbx, qword [rbx]
0x0000613b      488d353d1e00.  lea rsi, str.Written_by__s.             ; 0x7f7f ; "Written by %s.\n"
0x00006142      ba05000000     mov edx, 5
0x00006147      31ff           xor edi, edi
0x00006149      e812b5ffff     call sym.imp.dcgettext
0x0000614e      4883c428       add rsp, 0x28
0x00006152      4889d9         mov rcx, rbx
0x00006155      4889ef         mov rdi, rbp
0x00006158      5b             pop rbx
0x00006159      5d             pop rbp
0x0000615a      415c           pop r12
0x0000615c      415d           pop r13
0x0000615e      415e           pop r14
0x00006160      415f           pop r15
0x00006162      4889c2         mov rdx, rax
0x00006165      be01000000     mov esi, 1
0x0000616a      31c0           xor eax, eax
0x0000616c      e92fb7ffff     jmp sym.imp.__fprintf_chk
0x00006171      0f1f80000000.  nop dword [rax]
0x00006178      4c8b6308       mov r12, qword [rbx + 8]
0x0000617c      488d350c1e00.  lea rsi, str.Written_by__s_and__s.      ; 0x7f8f ; "Written by %s and %s.\n"
0x00006183      488b1b         mov rbx, qword [rbx]
0x00006186      ba05000000     mov edx, 5
0x0000618b      31ff           xor edi, edi
0x0000618d      e8ceb4ffff     call sym.imp.dcgettext
0x00006192      4883c428       add rsp, 0x28
0x00006196      4d89e0         mov r8, r12
0x00006199      4889d9         mov rcx, rbx
0x0000619c      4889ef         mov rdi, rbp
0x0000619f      4889c2         mov rdx, rax
0x000061a2      be01000000     mov esi, 1
0x000061a7      5b             pop rbx
0x000061a8      5d             pop rbp
0x000061a9      415c           pop r12
0x000061ab      415d           pop r13
0x000061ad      415e           pop r14
0x000061af      415f           pop r15
0x000061b1      31c0           xor eax, eax
0x000061b3      e9e8b6ffff     jmp sym.imp.__fprintf_chk
0x000061b8      0f1f84000000.  nop dword [rax + rax]
0x000061c0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000061c4      4c8b6308       mov r12, qword [rbx + 8]
0x000061c8      488d35d71d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7fa6 ; "Written by %s, %s, and %s.\n"
0x000061cf      488b1b         mov rbx, qword [rbx]
0x000061d2      ba05000000     mov edx, 5
0x000061d7      31ff           xor edi, edi
0x000061d9      e882b4ffff     call sym.imp.dcgettext
0x000061de      4883c428       add rsp, 0x28
0x000061e2      4d89e9         mov r9, r13
0x000061e5      4d89e0         mov r8, r12
0x000061e8      4889d9         mov rcx, rbx
0x000061eb      4889ef         mov rdi, rbp
0x000061ee      4889c2         mov rdx, rax
0x000061f1      5b             pop rbx
0x000061f2      5d             pop rbp
0x000061f3      415c           pop r12
0x000061f5      415d           pop r13
0x000061f7      415e           pop r14
0x000061f9      415f           pop r15
0x000061fb      be01000000     mov esi, 1
0x00006200      31c0           xor eax, eax
0x00006202      e999b6ffff     jmp sym.imp.__fprintf_chk
0x00006207      660f1f840000.  nop word [rax + rax]
0x00006210      488d35c11e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x80d8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006217      ba05000000     mov edx, 5
0x0000621c      31ff           xor edi, edi
0x0000621e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006222      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006226      4c8b6308       mov r12, qword [rbx + 8]
0x0000622a      488b1b         mov rbx, qword [rbx]
0x0000622d      e82eb4ffff     call sym.imp.dcgettext
0x00006232      4883ec08       sub rsp, 8
0x00006236      4156           push r14
0x00006238      4889c2         mov rdx, rax
0x0000623b      4d89e9         mov r9, r13
0x0000623e      4d89e0         mov r8, r12
0x00006241      4889d9         mov rcx, rbx
0x00006244      4889ef         mov rdi, rbp
0x00006247      be01000000     mov esi, 1
0x0000624c      31c0           xor eax, eax
0x0000624e      e84db6ffff     call sym.imp.__fprintf_chk
0x00006253      58             pop rax
0x00006254      5a             pop rdx
0x00006255      4883c428       add rsp, 0x28
0x00006259      5b             pop rbx
0x0000625a      5d             pop rbp
0x0000625b      415c           pop r12
0x0000625d      415d           pop r13
0x0000625f      415e           pop r14
0x00006261      415f           pop r15
0x00006263      c3             ret
0x00006264      0f1f4000       nop dword [rax]
0x00006268      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000626c      488d35851e00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x80f8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00006273      ba05000000     mov edx, 5
0x00006278      31ff           xor edi, edi
0x0000627a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000627e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006282      4c8b6308       mov r12, qword [rbx + 8]
0x00006286      488b1b         mov rbx, qword [rbx]
0x00006289      e8d2b3ffff     call sym.imp.dcgettext
0x0000628e      4157           push r15
0x00006290      eba4           jmp 0x6236
0x00006292      660f1f440000   nop word [rax + rax]
0x00006298      4c8b4308       mov r8, qword [rbx + 8]
0x0000629c      4c8b6328       mov r12, qword [rbx + 0x28]
0x000062a0      488d35791e00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x8120 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000062a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000062ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000062af      ba05000000     mov edx, 5
0x000062b4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000062b8      31ff           xor edi, edi
0x000062ba      488b1b         mov rbx, qword [rbx]
0x000062bd      4c890424       mov qword [rsp], r8
0x000062c1      e89ab3ffff     call sym.imp.dcgettext
0x000062c6      4883ec08       sub rsp, 8
0x000062ca      4d89e9         mov r9, r13
0x000062cd      4154           push r12
0x000062cf      4157           push r15
0x000062d1      4156           push r14
0x000062d3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000062d8      4889d9         mov rcx, rbx
0x000062db      4889c2         mov rdx, rax
0x000062de      4889ef         mov rdi, rbp
0x000062e1      be01000000     mov esi, 1
0x000062e6      31c0           xor eax, eax
0x000062e8      e8b3b5ffff     call sym.imp.__fprintf_chk
0x000062ed      4883c420       add rsp, 0x20
0x000062f1      4883c428       add rsp, 0x28
0x000062f5      5b             pop rbx
0x000062f6      5d             pop rbp
0x000062f7      415c           pop r12
0x000062f9      415d           pop r13
0x000062fb      415e           pop r14
0x000062fd      415f           pop r15
0x000062ff      c3             ret
0x00006300      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006304      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006308      488d35391e00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x8148 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000630f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006313      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006317      ba05000000     mov edx, 5
0x0000631c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006320      4c8b4308       mov r8, qword [rbx + 8]
0x00006324      31ff           xor edi, edi
0x00006326      4c894c2408     mov qword [rsp + 8], r9
0x0000632b      488b1b         mov rbx, qword [rbx]
0x0000632e      4c890424       mov qword [rsp], r8
0x00006332      e829b3ffff     call sym.imp.dcgettext
0x00006337      4155           push r13
0x00006339      4154           push r12
0x0000633b      4157           push r15
0x0000633d      4156           push r14
0x0000633f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00006344      eb8d           jmp 0x62d3
0x00006346      662e0f1f8400.  nop word cs:[rax + rax]
0x00006350      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006354      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006358      ba05000000     mov edx, 5
0x0000635d      488b4310       mov rax, qword [rbx + 0x10]
0x00006361      4c8b4308       mov r8, qword [rbx + 8]
0x00006365      488d35741e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x81e0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000636c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006370      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006374      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006378      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000637c      4c89542418     mov qword [rsp + 0x18], r10
0x00006381      4c894c2410     mov qword [rsp + 0x10], r9
0x00006386      48890424       mov qword [rsp], rax
0x0000638a      4c89442408     mov qword [rsp + 8], r8
0x0000638f      488b1b         mov rbx, qword [rbx]
0x00006392      e98bfdffff     jmp 0x6122
0x00006397      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000063a0      4531c9         xor r9d, r9d
0x000063a3      49833800       cmp qword [r8], 0
0x000063a7      7412           je 0x63bb
0x000063a9      0f1f80000000.  nop dword [rax]
0x000063b0      4983c101       add r9, 1
0x000063b4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000063b9      75f5           jne 0x63b0
0x000063bb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000063c0      4883ec68       sub rsp, 0x68
0x000063c4      4d89c2         mov r10, r8
0x000063c7      4531c9         xor r9d, r9d
0x000063ca      64488b042528.  mov rax, qword fs:[0x28]
0x000063d3      4889442458     mov qword [rsp + 0x58], rax
0x000063d8      31c0           xor eax, eax
0x000063da      4989e0         mov r8, rsp
0x000063dd      0f1f00         nop dword [rax]
0x000063e0      418b02         mov eax, dword [r10]
0x000063e3      83f82f         cmp eax, 0x2f
0x000063e6      7742           ja 0x642a
0x000063e8      4189c3         mov r11d, eax
0x000063eb      4d035a10       add r11, qword [r10 + 0x10]
0x000063ef      83c008         add eax, 8
0x000063f2      418902         mov dword [r10], eax
0x000063f5      498b03         mov rax, qword [r11]
0x000063f8      4885c0         test rax, rax
0x000063fb      4b8904c8       mov qword [r8 + r9*8], rax
0x000063ff      740a           je 0x640b
0x00006401      4983c101       add r9, 1
0x00006405      4983f90a       cmp r9, 0xa
0x00006409      75d5           jne 0x63e0
0x0000640b      e870fbffff     call sym.version_etc_arn
0x00006410      488b442458     mov rax, qword [rsp + 0x58]
0x00006415      644833042528.  xor rax, qword fs:[0x28]
0x0000641e      7505           jne 0x6425
0x00006420      4883c468       add rsp, 0x68
0x00006424      c3             ret
0x00006425      e866b2ffff     call sym.imp.__stack_chk_fail
0x0000642a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000642e      498d4308       lea rax, [r11 + 8]
0x00006432      49894208       mov qword [r10 + 8], rax
0x00006436      ebbd           jmp 0x63f5
0x00006438      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00006440      55             push rbp
0x00006441      53             push rbx
0x00006442      41ba20000000   mov r10d, 0x20                          ; "@"
0x00006448      4531db         xor r11d, r11d
0x0000644b      4881ecb80000.  sub rsp, 0xb8
0x00006452      64488b042528.  mov rax, qword fs:[0x28]
0x0000645b      4889442478     mov qword [rsp + 0x78], rax
0x00006460      31c0           xor eax, eax
0x00006462      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000646a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00006472      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000647a      4c8d442420     lea r8, [rsp + 0x20]
0x0000647f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00006487      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000648f      4889442410     mov qword [rsp + 0x10], rax
0x00006494      488d84248000.  lea rax, [rsp + 0x80]
0x0000649c      4531c9         xor r9d, r9d
0x0000649f      4889442418     mov qword [rsp + 0x18], rax
0x000064a4      4889c5         mov rbp, rax
0x000064a7      660f1f840000.  nop word [rax + rax]
0x000064b0      4183fa2f       cmp r10d, 0x2f
0x000064b4      7756           ja 0x650c
0x000064b6      4489d0         mov eax, r10d
0x000064b9      41bb01000000   mov r11d, 1
0x000064bf      4183c208       add r10d, 8
0x000064c3      4801e8         add rax, rbp
0x000064c6      488b00         mov rax, qword [rax]
0x000064c9      4885c0         test rax, rax
0x000064cc      4b8904c8       mov qword [r8 + r9*8], rax
0x000064d0      740a           je 0x64dc
0x000064d2      4983c101       add r9, 1
0x000064d6      4983f90a       cmp r9, 0xa
0x000064da      75d4           jne 0x64b0
0x000064dc      4584db         test r11b, r11b
0x000064df      7524           jne 0x6505
0x000064e1      e89afaffff     call sym.version_etc_arn
0x000064e6      488b442478     mov rax, qword [rsp + 0x78]
0x000064eb      644833042528.  xor rax, qword fs:[0x28]
0x000064f4      750a           jne 0x6500
0x000064f6      4881c4b80000.  add rsp, 0xb8
0x000064fd      5b             pop rbx
0x000064fe      5d             pop rbp
0x000064ff      c3             ret
0x00006500      e88bb1ffff     call sym.imp.__stack_chk_fail
0x00006505      4489542408     mov dword [rsp + 8], r10d
0x0000650a      ebd5           jmp 0x64e1
0x0000650c      4889d8         mov rax, rbx
0x0000650f      4883c308       add rbx, 8
0x00006513      ebb1           jmp 0x64c6
0x00006515      90             nop
0x00006516      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006520      53             push rbx
0x00006521      488d359a1a00.  lea rsi, str.Report_bugs_to:__s         ; 0x7fc2 ; "\nReport bugs to: %s\n"
0x00006528      ba05000000     mov edx, 5
0x0000652d      31ff           xor edi, edi
0x0000652f      e82cb1ffff     call sym.imp.dcgettext
0x00006534      488d159c1a00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7fd7 ; "bug-coreutils@gnu.org"
0x0000653b      4889c6         mov rsi, rax
0x0000653e      bf01000000     mov edi, 1
0x00006543      31c0           xor eax, eax
0x00006545      e8c6b2ffff     call sym.imp.__printf_chk
0x0000654a      488d359c1a00.  lea rsi, str.s_home_page:___s           ; 0x7fed ; "%s home page: <%s>\n"
0x00006551      ba05000000     mov edx, 5
0x00006556      31ff           xor edi, edi
0x00006558      e803b1ffff     call sym.imp.dcgettext
0x0000655d      488d0df40f00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x7558 ; "https://www.gnu.org/software/coreutils/"
0x00006564      488d15490900.  lea rdx, str.GNU_coreutils              ; 0x6eb4 ; "GNU coreutils"
0x0000656b      4889c6         mov rsi, rax
0x0000656e      bf01000000     mov edi, 1
0x00006573      31c0           xor eax, eax
0x00006575      e896b2ffff     call sym.imp.__printf_chk
0x0000657a      488b1d273b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00006581      488d35981c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x8220 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00006588      31ff           xor edi, edi
0x0000658a      ba05000000     mov edx, 5
0x0000658f      e8ccb0ffff     call sym.imp.dcgettext
0x00006594      4889de         mov rsi, rbx
0x00006597      4889c7         mov rdi, rax
0x0000659a      5b             pop rbx
0x0000659b      e9a0b1ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000065a0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000065a1      4889fb         mov rbx, rdi
0x000065a4      e8e7b1ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000065a9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000065ac      7505           jne 0x65b3
0x000065ae      4885db         test rbx, rbx
0x000065b1      7502           jne 0x65b5
0x000065b3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000065b4      c3             ret
0x000065b5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000065ba      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000065c0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000065c3      48f7e6         mul rsi
0x000065c6      4889c7         mov rdi, rax
0x000065c9      0f90c0         seto al
0x000065cc      4885ff         test rdi, rdi
0x000065cf      780a           js 0x65db
0x000065d1      0fb6c0         movzx eax, al
0x000065d4      4885c0         test rax, rax
0x000065d7      7502           jne 0x65db
0x000065d9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x000065db      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x000065df      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x000065e4      6690           nop
0x000065e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x000065f0      ebae           jmp sym.xmalloc
0x000065f2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x000065f6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00006600      4885f6         test rsi, rsi
0x00006603      53             push rbx
0x00006604      4889f3         mov rbx, rsi
0x00006607      7505           jne 0x660e
0x00006609      4885ff         test rdi, rdi
0x0000660c      751a           jne 0x6628
0x0000660e      4889de         mov rsi, rbx
0x00006611      e8cab1ffff     call sym.imp.realloc
0x00006616      4885c0         test rax, rax
0x00006619      7505           jne 0x6620
0x0000661b      4885db         test rbx, rbx
0x0000661e      7511           jne 0x6631                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00006620      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00006621      c3             ret
0x00006622      660f1f440000   nop word [rax + rax]
0x00006628      e883afffff     call sym.imp.free
0x0000662d      31c0           xor eax, eax
0x0000662f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00006630      c3             ret
0x00006631      e8ba010000     call sym.xalloc_die
0x00006636      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00006640      4889f0         mov rax, rsi
0x00006643      48f7e2         mul rdx
0x00006646      4889c6         mov rsi, rax
0x00006649      0f90c0         seto al
0x0000664c      4885f6         test rsi, rsi
0x0000664f      780a           js 0x665b
0x00006651      0fb6c0         movzx eax, al
0x00006654      4885c0         test rax, rax
0x00006657      7502           jne 0x665b
0x00006659      eba5           jmp sym.xrealloc
0x0000665b      4883ec08       sub rsp, 8
0x0000665f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006664      6690           nop
0x00006666      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006670      4885ff         test rdi, rdi
0x00006673      4989d1         mov r9, rdx
0x00006676      488b0e         mov rcx, qword [rsi]
0x00006679      7435           je 0x66b0
0x0000667b      31d2           xor edx, edx
0x0000667d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006687      49f7f1         div r9
0x0000668a      4839c8         cmp rax, rcx
0x0000668d      763c           jbe 0x66cb
0x0000668f      4889c8         mov rax, rcx
0x00006692      48d1e8         shr rax, 1
0x00006695      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000669a      48890e         mov qword [rsi], rcx
0x0000669d      490fafc9       imul rcx, r9
0x000066a1      4889ce         mov rsi, rcx
0x000066a4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000066a9      0f1f80000000.  nop dword [rax]
0x000066b0      4885c9         test rcx, rcx
0x000066b3      7423           je 0x66d8
0x000066b5      4889c8         mov rax, rcx
0x000066b8      49f7e1         mul r9
0x000066bb      0f90c2         seto dl
0x000066be      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000066c1      0fb6d2         movzx edx, dl
0x000066c4      7805           js 0x66cb
0x000066c6      4885d2         test rdx, rdx
0x000066c9      74cf           je 0x669a
0x000066cb      4883ec08       sub rsp, 8
0x000066cf      e81c010000     call sym.xalloc_die
0x000066d4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x000066d8      31d2           xor edx, edx
0x000066da      b880000000     mov eax, 0x80
0x000066df      4531c0         xor r8d, r8d
0x000066e2      49f7f1         div r9
0x000066e5      4885c0         test rax, rax
0x000066e8      410f94c0       sete r8b
0x000066ec      498d0c00       lea rcx, [r8 + rax]
0x000066f0      ebc3           jmp 0x66b5
0x000066f2      0f1f4000       nop dword [rax]
0x000066f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00006700      4885ff         test rdi, rdi
0x00006703      488b06         mov rax, qword [rsi]
0x00006706      7428           je 0x6730
0x00006708      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00006712      4839d0         cmp rax, rdx
0x00006715      772a           ja 0x6741
0x00006717      4889c2         mov rdx, rax
0x0000671a      48d1ea         shr rdx, 1
0x0000671d      488d440201     lea rax, [rdx + rax + 1]
0x00006722      488906         mov qword [rsi], rax
0x00006725      4889c6         mov rsi, rax
0x00006728      e9d3feffff     jmp sym.xrealloc
0x0000672d      0f1f00         nop dword [rax]
0x00006730      4885c0         test rax, rax
0x00006733      ba80000000     mov edx, 0x80
0x00006738      480f44c2       cmove rax, rdx
0x0000673c      4885c0         test rax, rax
0x0000673f      79e1           jns 0x6722
0x00006741      4883ec08       sub rsp, 8
0x00006745      e8a6000000     call sym.xalloc_die
0x0000674a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00006750      53             push rbx
0x00006751      4889fb         mov rbx, rdi
0x00006754      e847feffff     call sym.xmalloc
0x00006759      4889da         mov rdx, rbx
0x0000675c      31f6           xor esi, esi
0x0000675e      4889c7         mov rdi, rax
0x00006761      5b             pop rbx
0x00006762      e999afffff     jmp sym.imp.memset
0x00006767      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006770      4889f8         mov rax, rdi
0x00006773      4883ec08       sub rsp, 8
0x00006777      48f7e6         mul rsi
0x0000677a      0f90c2         seto dl
0x0000677d      4885c0         test rax, rax
0x00006780      7817           js 0x6799
0x00006782      0fb6d2         movzx edx, dl
0x00006785      4885d2         test rdx, rdx
0x00006788      750f           jne 0x6799
0x0000678a      e8c1afffff     call sym.imp.calloc
0x0000678f      4885c0         test rax, rax
0x00006792      7405           je 0x6799
0x00006794      4883c408       add rsp, 8
0x00006798      c3             ret
0x00006799      e852000000     call sym.xalloc_die
0x0000679e      6690           nop
;-- xmemdup:
0x000067a0      55             push rbp
0x000067a1      53             push rbx
0x000067a2      4889fd         mov rbp, rdi
0x000067a5      4889f7         mov rdi, rsi
0x000067a8      4889f3         mov rbx, rsi
0x000067ab      4883ec08       sub rsp, 8
0x000067af      e8ecfdffff     call sym.xmalloc
0x000067b4      4883c408       add rsp, 8
0x000067b8      4889da         mov rdx, rbx
0x000067bb      4889ee         mov rsi, rbp
0x000067be      5b             pop rbx
0x000067bf      5d             pop rbp
0x000067c0      4889c7         mov rdi, rax
0x000067c3      e9a8afffff     jmp sym.imp.memcpy
0x000067c8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x000067d0      53             push rbx
0x000067d1      4889fb         mov rbx, rdi
0x000067d4      e8a7aeffff     call sym.imp.strlen
0x000067d9      4889df         mov rdi, rbx
0x000067dc      488d7001       lea rsi, [rax + 1]
0x000067e0      5b             pop rbx
0x000067e1      ebbd           jmp sym.xmemdup
0x000067e3      662e0f1f8400.  nop word cs:[rax + rax]
0x000067ed      0f1f00         nop dword [rax]
;-- xalloc_die:
0x000067f0      488d35d81a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x82cf ; "memory exhausted"
0x000067f7      4883ec08       sub rsp, 8
0x000067fb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00006800      31ff           xor edi, edi
0x00006802      e859aeffff     call sym.imp.dcgettext
0x00006807      8b3d13382000   mov edi, dword [obj.exit_failure]       ; [0x20a020:4]=1
0x0000680d      488d15e11100.  lea rdx, [0x000079f5]                   ; "%s"
0x00006814      4889c1         mov rcx, rax
0x00006817      31f6           xor esi, esi
0x00006819      31c0           xor eax, eax
0x0000681b      e810b0ffff     call sym.imp.error
0x00006820      e89badffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00006825      662e0f1f8400.  nop word cs:[rax + rax]
0x0000682f      90             nop
;-- rpl_fclose:
0x00006830      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006832      55             push rbp
0x00006833      53             push rbx
0x00006834      4889fb         mov rbx, rdi
0x00006837      e844afffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000683c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000683e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006841      7854           js 0x6897                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006843      e878afffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006848      85c0           test eax, eax
0x0000684a      752c           jne 0x6878
0x0000684c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000684f      e8dc020000     call sym.rpl_fflush
0x00006854      85c0           test eax, eax
0x00006856      743c           je 0x6894
0x00006858      e873adffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000685d      448b20         mov r12d, dword [rax]
0x00006860      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006863      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006866      e8d5adffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000686b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000686e      7530           jne 0x68a0
0x00006870      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006871      5d             pop rbp
0x00006872      415c           pop r12
0x00006874      c3             ret
0x00006875      0f1f00         nop dword [rax]
0x00006878      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000687b      e800afffff     call sym.imp.fileno
0x00006880      31f6           xor esi, esi
0x00006882      ba01000000     mov edx, 1
0x00006887      89c7           mov edi, eax
0x00006889      e862aeffff     call sym.imp.lseek
0x0000688e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006892      75b8           jne 0x684c
0x00006894      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006897      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006898      5d             pop rbp
0x00006899      415c           pop r12
0x0000689b      e9a0adffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000068a0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000068a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000068a9      ebc5           jmp 0x6870
0x000068ab      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x000068b0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x000068b2      55             push rbp
0x000068b3      89fd           mov ebp, edi
0x000068b5      53             push rbx
0x000068b6      4883ec50       sub rsp, 0x50
0x000068ba      64488b042528.  mov rax, qword fs:[0x28]
0x000068c3      4889442418     mov qword [rsp + 0x18], rax
0x000068c8      31c0           xor eax, eax
0x000068ca      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x000068cf      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x000068d1      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x000068d6      48894c2438     mov qword [rsp + 0x38], rcx
0x000068db      4c89442440     mov qword [rsp + 0x40], r8
0x000068e0      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x000068e5      488d442420     lea rax, [rsp + 0x20]
0x000068ea      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x000068ef      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x000068f6      4889442410     mov qword [rsp + 0x10], rax
0x000068fb      0f8401020000   je 0x6b02                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00006901      81fe06040000   cmp esi, 0x406
0x00006907      7547           jne 0x6950
0x00006909      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000690e      833d63392000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20a278:4]=0
0x00006915      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2a40 rip
0x0000691c      448b6010       mov r12d, dword [rax + 0x10]
0x00006920      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00006923      0f882a010000   js 0x6a53                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00006929      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000692b      be06040000     mov esi, 0x406
0x00006930      e8dbacffff     call sym.imp.fcntl
0x00006935      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00006937      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00006939      0f8889010000   js 0x6ac8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000693f      c7052f392000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20a278:4]=0
0x00006949      eb45           jmp 0x6990
0x0000694b      0f1f440000     nop dword [rax + rax]
0x00006950      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00006953      742b           je 0x6980
0x00006955      7f59           jg 0x69b0
0x00006957      83fe04         cmp esi, 4
0x0000695a      0f84d0000000   je 0x6a30
0x00006960      0f8fba000000   jg 0x6a20
0x00006966      83fe02         cmp esi, 2
0x00006969      0f84c1000000   je 0x6a30
0x0000696f      7f0f           jg 0x6980
0x00006971      83fe01         cmp esi, 1
0x00006974      7562           jne 0x69d8
0x00006976      662e0f1f8400.  nop word cs:[rax + rax]
0x00006980      89ef           mov edi, ebp
0x00006982      31c0           xor eax, eax
0x00006984      e887acffff     call sym.imp.fcntl
0x00006989      89c3           mov ebx, eax
0x0000698b      0f1f440000     nop dword [rax + rax]
0x00006990      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00006995      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000699e      89d8           mov eax, ebx
0x000069a0      0f8557010000   jne 0x6afd                              ; ../coreutils-8.31/lib/fcntl.c:355
0x000069a6      4883c450       add rsp, 0x50
0x000069aa      5b             pop rbx
0x000069ab      5d             pop rbp
0x000069ac      415c           pop r12
0x000069ae      c3             ret
0x000069af      90             nop
0x000069b0      81fe07040000   cmp esi, 0x407
0x000069b6      7f48           jg 0x6a00
0x000069b8      81fe06040000   cmp esi, 0x406
0x000069be      7d70           jge 0x6a30
0x000069c0      81fe01040000   cmp esi, 0x401
0x000069c6      74b8           je 0x6980
0x000069c8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x000069ce      7460           je 0x6a30
0x000069d0      81fe00040000   cmp esi, 0x400
0x000069d6      7458           je 0x6a30
0x000069d8      8b0424         mov eax, dword [rsp]
0x000069db      83f82f         cmp eax, 0x2f
0x000069de      0f8736010000   ja 0x6b1a
0x000069e4      4803442410     add rax, qword [rsp + 0x10]
0x000069e9      488b10         mov rdx, qword [rax]
0x000069ec      89ef           mov edi, ebp
0x000069ee      31c0           xor eax, eax
0x000069f0      e81bacffff     call sym.imp.fcntl
0x000069f5      89c3           mov ebx, eax
0x000069f7      eb97           jmp 0x6990
0x000069f9      0f1f80000000.  nop dword [rax]
0x00006a00      81fe09040000   cmp esi, 0x409
0x00006a06      7428           je 0x6a30
0x00006a08      0f8c72ffffff   jl 0x6980
0x00006a0e      81fe0a040000   cmp esi, 0x40a
0x00006a14      75c2           jne 0x69d8
0x00006a16      e965ffffff     jmp 0x6980                              ; ../coreutils-8.31/lib/fcntl.c:350
0x00006a1b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00006a20      83fe09         cmp esi, 9
0x00006a23      0f8457ffffff   je 0x6980
0x00006a29      7f05           jg 0x6a30
0x00006a2b      83fe08         cmp esi, 8
0x00006a2e      75a8           jne 0x69d8
0x00006a30      8b0424         mov eax, dword [rsp]
0x00006a33      83f82f         cmp eax, 0x2f
0x00006a36      0f87e8000000   ja 0x6b24
0x00006a3c      4803442410     add rax, qword [rsp + 0x10]
0x00006a41      8b10           mov edx, dword [rax]
0x00006a43      89ef           mov edi, ebp
0x00006a45      31c0           xor eax, eax
0x00006a47      e8c4abffff     call sym.imp.fcntl
0x00006a4c      89c3           mov ebx, eax
0x00006a4e      e93dffffff     jmp 0x6990
0x00006a53      31f6           xor esi, esi
0x00006a55      31c0           xor eax, eax
0x00006a57      e8b4abffff     call sym.imp.fcntl
0x00006a5c      85c0           test eax, eax
0x00006a5e      89c3           mov ebx, eax
0x00006a60      0f882affffff   js 0x6990
0x00006a66      833d0b382000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20a278:4]=0
0x00006a6d      0f851dffffff   jne 0x6990
0x00006a73      31c0           xor eax, eax
0x00006a75      be01000000     mov esi, 1
0x00006a7a      89df           mov edi, ebx
0x00006a7c      e88fabffff     call sym.imp.fcntl
0x00006a81      85c0           test eax, eax
0x00006a83      781c           js 0x6aa1
0x00006a85      83c801         or eax, 1
0x00006a88      be02000000     mov esi, 2
0x00006a8d      89df           mov edi, ebx
0x00006a8f      89c2           mov edx, eax
0x00006a91      31c0           xor eax, eax
0x00006a93      e878abffff     call sym.imp.fcntl
0x00006a98      83f8ff         cmp eax, 0xffffffff
0x00006a9b      0f85effeffff   jne 0x6990
0x00006aa1      e82aabffff     call sym.imp.__errno_location
0x00006aa6      448b20         mov r12d, dword [rax]
0x00006aa9      4889c5         mov rbp, rax
0x00006aac      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x00006aae      e85dacffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x00006ab3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00006ab8      44896500       mov dword [rbp], r12d
0x00006abc      e9cffeffff     jmp 0x6990
0x00006ac1      0f1f80000000.  nop dword [rax]
0x00006ac8      e803abffff     call sym.imp.__errno_location
0x00006acd      833816         cmp dword [rax], 0x16
0x00006ad0      0f8569feffff   jne 0x693f
0x00006ad6      31f6           xor esi, esi
0x00006ad8      31c0           xor eax, eax
0x00006ada      4489e2         mov edx, r12d
0x00006add      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x00006adf      e82cabffff     call sym.imp.fcntl
0x00006ae4      85c0           test eax, eax
0x00006ae6      89c3           mov ebx, eax
0x00006ae8      0f88a2feffff   js 0x6990
0x00006aee      c70580372000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20a278:4]=0
0x00006af8      e976ffffff     jmp 0x6a73
0x00006afd      e88eabffff     call sym.imp.__stack_chk_fail
0x00006b02      488b442410     mov rax, qword [rsp + 0x10]
0x00006b07      31f6           xor esi, esi
0x00006b09      8b5010         mov edx, dword [rax + 0x10]
0x00006b0c      31c0           xor eax, eax
0x00006b0e      e8fdaaffff     call sym.imp.fcntl
0x00006b13      89c3           mov ebx, eax
0x00006b15      e976feffff     jmp 0x6990
0x00006b1a      488b442408     mov rax, qword [rsp + 8]
0x00006b1f      e9c5feffff     jmp 0x69e9
0x00006b24      488b442408     mov rax, qword [rsp + 8]
0x00006b29      e913ffffff     jmp 0x6a41
0x00006b2e      6690           nop
;-- rpl_fflush:
0x00006b30      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00006b33      53             push rbx
0x00006b34      4889fb         mov rbx, rdi
0x00006b37      7411           je 0x6b4a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00006b39      e882acffff     call sym.imp.__freading
0x00006b3e      85c0           test eax, eax
0x00006b40      7408           je 0x6b4a
0x00006b42      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006b48      750e           jne 0x6b58
0x00006b4a      4889df         mov rdi, rbx
0x00006b4d      5b             pop rbx
0x00006b4e      e94dacffff     jmp sym.imp.fflush
0x00006b53      0f1f440000     nop dword [rax + rax]
0x00006b58      4889df         mov rdi, rbx
0x00006b5b      ba01000000     mov edx, 1
0x00006b60      31f6           xor esi, esi
0x00006b62      e809000000     call sym.rpl_fseeko
0x00006b67      4889df         mov rdi, rbx
0x00006b6a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00006b6b      e930acffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00006b70      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006b74      48394710       cmp qword [rdi + 0x10], rax
0x00006b78      7406           je 0x6b80                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00006b7a      e9c1acffff     jmp sym.imp.fseeko
0x00006b7f      90             nop
0x00006b80      488b4720       mov rax, qword [rdi + 0x20]
0x00006b84      48394728       cmp qword [rdi + 0x28], rax
0x00006b88      75f0           jne 0x6b7a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00006b8a      48837f4800     cmp qword [rdi + 0x48], 0
0x00006b8f      75e9           jne 0x6b7a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006b91      4154           push r12
0x00006b93      55             push rbp
0x00006b94      4189d4         mov r12d, edx
0x00006b97      53             push rbx
0x00006b98      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00006b9b      4889fb         mov rbx, rdi
0x00006b9e      e8ddabffff     call sym.imp.fileno
0x00006ba3      4489e2         mov edx, r12d
0x00006ba6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006ba9      89c7           mov edi, eax
0x00006bab      e840abffff     call sym.imp.lseek
0x00006bb0      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006bb4      740c           je 0x6bc2
0x00006bb6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006bb9      488983900000.  mov qword [rbx + 0x90], rax
0x00006bc0      31c0           xor eax, eax
0x00006bc2      5b             pop rbx
0x00006bc3      5d             pop rbp
0x00006bc4      415c           pop r12
0x00006bc6      c3             ret
0x00006bc7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00006bd0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006bd2      4154           push r12
0x00006bd4      4989f5         mov r13, rsi
0x00006bd7      55             push rbp
0x00006bd8      53             push rbx
0x00006bd9      4889fb         mov rbx, rdi
0x00006bdc      4989d4         mov r12, rdx
0x00006bdf      4883ec18       sub rsp, 0x18
0x00006be3      64488b042528.  mov rax, qword fs:[0x28]
0x00006bec      4889442408     mov qword [rsp + 8], rax
0x00006bf1      31c0           xor eax, eax
0x00006bf3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00006bf8      4885ff         test rdi, rdi
0x00006bfb      480f44d8       cmove rbx, rax
0x00006bff      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006c02      e8a9aaffff     call sym.imp.mbrtowc
0x00006c07      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006c0b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00006c0e      7620           jbe 0x6c30                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00006c10      4d85e4         test r12, r12
0x00006c13      741b           je 0x6c30
0x00006c15      31ff           xor edi, edi
0x00006c17      e8c4000000     call sym.hard_locale
0x00006c1c      84c0           test al, al
0x00006c1e      7510           jne 0x6c30
0x00006c20      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006c25      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00006c2a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00006c2c      0f1f4000       nop dword [rax]
0x00006c30      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00006c35      644833142528.  xor rdx, qword fs:[0x28]
0x00006c3e      4889e8         mov rax, rbp
0x00006c41      750b           jne 0x6c4e
0x00006c43      4883c418       add rsp, 0x18
0x00006c47      5b             pop rbx
0x00006c48      5d             pop rbp
0x00006c49      415c           pop r12
0x00006c4b      415d           pop r13
0x00006c4d      c3             ret
0x00006c4e      e83daaffff     call sym.imp.__stack_chk_fail
0x00006c53      662e0f1f8400.  nop word cs:[rax + rax]
0x00006c5d      0f1f00         nop dword [rax]
;-- close_stream:
0x00006c60      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006c62      55             push rbp
0x00006c63      4889fd         mov rbp, rdi
0x00006c66      53             push rbx
0x00006c67      e894a9ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00006c6c      8b5d00         mov ebx, dword [rbp]
0x00006c6f      4889ef         mov rdi, rbp
0x00006c72      4989c4         mov r12, rax
0x00006c75      e8b6fbffff     call sym.rpl_fclose
0x00006c7a      83e320         and ebx, 0x20                           ; "@"
0x00006c7d      85db           test ebx, ebx
0x00006c7f      7517           jne 0x6c98
0x00006c81      85c0           test eax, eax
0x00006c83      740a           je 0x6c8f                               ; stdio.h:-186
0x00006c85      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006c88      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006c8d      7439           je 0x6cc8
0x00006c8f      5b             pop rbx
0x00006c90      5d             pop rbp
0x00006c91      415c           pop r12
0x00006c93      c3             ret
0x00006c94      0f1f4000       nop dword [rax]
0x00006c98      85c0           test eax, eax
0x00006c9a      751c           jne 0x6cb8
0x00006c9c      e82fa9ffff     call sym.imp.__errno_location
0x00006ca1      c70000000000   mov dword [rax], 0
0x00006ca7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006cac      5b             pop rbx
0x00006cad      5d             pop rbp
0x00006cae      415c           pop r12
0x00006cb0      c3             ret
0x00006cb1      0f1f80000000.  nop dword [rax]
0x00006cb8      5b             pop rbx
0x00006cb9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006cbe      5d             pop rbp                                 ; stdio.h:-186
0x00006cbf      415c           pop r12
0x00006cc1      c3             ret
0x00006cc2      660f1f440000   nop word [rax + rax]
0x00006cc8      e803a9ffff     call sym.imp.__errno_location
0x00006ccd      833809         cmp dword [rax], 9
0x00006cd0      5b             pop rbx
0x00006cd1      5d             pop rbp
0x00006cd2      415c           pop r12                                 ; stdio.h:-178
0x00006cd4      0f95c0         setne al
0x00006cd7      0fb6c0         movzx eax, al
0x00006cda      f7d8           neg eax
0x00006cdc      c3             ret
0x00006cdd      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006ce0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006ce4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006ce6      e815abffff     call sym.imp.setlocale
0x00006ceb      4889c2         mov rdx, rax
0x00006cee      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006cf3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006cf6      741d           je 0x6d15
0x00006cf8      488d3de11500.  lea rdi, [0x000082e0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x00006cff      b902000000     mov ecx, 2
0x00006d04      4889d6         mov rsi, rdx
0x00006d07      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006d09      0f97c1         seta cl
0x00006d0c      80d900         sbb cl, 0
0x00006d0f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006d11      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006d13      750b           jne 0x6d20
0x00006d15      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006d19      c3             ret
0x00006d1a      660f1f440000   nop word [rax + rax]
0x00006d20      488d3dbb1500.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x82e2 ; "POSIX"
0x00006d27      b906000000     mov ecx, 6
0x00006d2c      4889d6         mov rsi, rdx
0x00006d2f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006d31      0f97c0         seta al
0x00006d34      1c00           sbb al, 0
0x00006d36      84c0           test al, al
0x00006d38      0f95c0         setne al
0x00006d3b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006d3f      c3             ret
;-- locale_charset:
0x00006d40      4883ec08       sub rsp, 8
0x00006d44      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00006d49      e862aaffff     call sym.imp.nl_langinfo
0x00006d4e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006d51      741d           je 0x6d70
0x00006d53      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006d56      488d158b1500.  lea rdx, str.ASCII                      ; 0x82e8 ; "ASCII"
0x00006d5d      480f44c2       cmove rax, rdx
0x00006d61      4883c408       add rsp, 8
0x00006d65      c3             ret
0x00006d66      662e0f1f8400.  nop word cs:[rax + rax]
0x00006d70      488d05711500.  lea rax, str.ASCII                      ; 0x82e8 ; "ASCII"
0x00006d77      4883c408       add rsp, 8
0x00006d7b      c3             ret
0x00006d7c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00006d80      4157           push r15
0x00006d82      4156           push r14
0x00006d84      4989d7         mov r15, rdx
0x00006d87      4155           push r13
0x00006d89      4154           push r12
0x00006d8b      4c8d257e2c20.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209a10 ; "@+"
0x00006d92      55             push rbp
0x00006d93      488d2d7e2c20.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209a18
0x00006d9a      53             push rbx
0x00006d9b      4189fd         mov r13d, edi
0x00006d9e      4989f6         mov r14, rsi
0x00006da1      4c29e5         sub rbp, r12
0x00006da4      4883ec08       sub rsp, 8
0x00006da8      48c1fd03       sar rbp, 3
0x00006dac      e8cfa7ffff     call sym._init
0x00006db1      4885ed         test rbp, rbp
0x00006db4      7420           je 0x6dd6
0x00006db6      31db           xor ebx, ebx
0x00006db8      0f1f84000000.  nop dword [rax + rax]
0x00006dc0      4c89fa         mov rdx, r15
0x00006dc3      4c89f6         mov rsi, r14
0x00006dc6      4489ef         mov edi, r13d
0x00006dc9      41ff14dc       call qword [r12 + rbx*8]
0x00006dcd      4883c301       add rbx, 1
0x00006dd1      4839dd         cmp rbp, rbx
0x00006dd4      75ea           jne 0x6dc0
0x00006dd6      4883c408       add rsp, 8
0x00006dda      5b             pop rbx
0x00006ddb      5d             pop rbp
0x00006ddc      415c           pop r12
0x00006dde      415d           pop r13
0x00006de0      415e           pop r14
0x00006de2      415f           pop r15
0x00006de4      c3             ret
0x00006de5      90             nop
0x00006de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006df0      f3c3           ret
0x00006df2      662e0f1f8400.  nop word cs:[rax + rax]
0x00006dfc      0f1f4000       nop dword [rax]
;-- atexit:
0x00006e00      488b15013220.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00006e07      31f6           xor esi, esi
0x00006e09      e962aaffff     jmp sym.imp.__cxa_atexit
0x00006e0e      0000           add byte [rax], al
