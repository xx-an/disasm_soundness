;-- section..plt:
;-- .plt:
0x00001520      ff350a692000   push qword [0x00207e30]                 ; [12] -r-x section size 816 named .plt
0x00001526      ff250c692000   jmp qword [0x00207e38]                  ; [0x207e38:8]=0
0x0000152c      0f1f4000       nop dword [rax]
;-- imp.free:
0x00001530      ff250a692000   jmp qword [reloc.free]                  ; [0x207e40:8]=0x1536 ; "6\x15"
0x00001536      6800000000     push 0
0x0000153b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001540      ff2502692000   jmp qword [reloc.abort]                 ; [0x207e48:8]=0x1546 ; "F\x15"
0x00001546      6801000000     push 1
0x0000154b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001550      ff25fa682000   jmp qword [reloc.__errno_location]      ; [0x207e50:8]=0x1556 ; "V\x15"
0x00001556      6802000000     push 2
0x0000155b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001560      ff25f2682000   jmp qword [reloc.strncmp]               ; [0x207e58:8]=0x1566 ; "f\x15"
0x00001566      6803000000     push 3
0x0000156b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001570      ff25ea682000   jmp qword [reloc._exit]                 ; [0x207e60:8]=0x1576 ; "v\x15"
0x00001576      6804000000     push 4
0x0000157b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001580      ff25e2682000   jmp qword [reloc.__fpending]            ; [0x207e68:8]=0x1586
0x00001586      6805000000     push 5
0x0000158b      e990ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001590      ff25da682000   jmp qword [reloc.fcntl]                 ; [0x207e70:8]=0x1596
0x00001596      6806000000     push 6
0x0000159b      e980ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x000015a0      ff25d2682000   jmp qword [reloc.clearerr_unlocked]     ; [0x207e78:8]=0x15a6
0x000015a6      6807000000     push 7
0x000015ab      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x000015b0      ff25ca682000   jmp qword [reloc.textdomain]            ; [0x207e80:8]=0x15b6
0x000015b6      6808000000     push 8
0x000015bb      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x000015c0      ff25c2682000   jmp qword [reloc.fclose]                ; [0x207e88:8]=0x15c6
0x000015c6      6809000000     push 9
0x000015cb      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000015d0      ff25ba682000   jmp qword [reloc.bindtextdomain]        ; [0x207e90:8]=0x15d6
0x000015d6      680a000000     push 0xa
0x000015db      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000015e0      ff25b2682000   jmp qword [reloc.dcgettext]             ; [0x207e98:8]=0x15e6
0x000015e6      680b000000     push 0xb
0x000015eb      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000015f0      ff25aa682000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ea0:8]=0x15f6
0x000015f6      680c000000     push 0xc
0x000015fb      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x00001600      ff25a2682000   jmp qword [reloc.strlen]                ; [0x207ea8:8]=0x1606
0x00001606      680d000000     push 0xd
0x0000160b      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001610      ff259a682000   jmp qword [reloc.__stack_chk_fail]      ; [0x207eb0:8]=0x1616
0x00001616      680e000000     push 0xe
0x0000161b      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001620      ff2592682000   jmp qword [reloc.getopt_long]           ; [0x207eb8:8]=0x1626 ; "&\x16"
0x00001626      680f000000     push 0xf
0x0000162b      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001630      ff258a682000   jmp qword [reloc.mbrtowc]               ; [0x207ec0:8]=0x1636 ; "6\x16"
0x00001636      6810000000     push 0x10
0x0000163b      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001640      ff2582682000   jmp qword [reloc.__overflow]            ; [0x207ec8:8]=0x1646 ; "F\x16"
0x00001646      6811000000     push 0x11
0x0000164b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001650      ff257a682000   jmp qword [reloc.strrchr]               ; [0x207ed0:8]=0x1656 ; "V\x16"
0x00001656      6812000000     push 0x12
0x0000165b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001660      ff2572682000   jmp qword [reloc.lseek]                 ; [0x207ed8:8]=0x1666 ; "f\x16"
0x00001666      6813000000     push 0x13
0x0000166b      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x00001670      ff256a682000   jmp qword [reloc.memset]                ; [0x207ee0:8]=0x1676 ; "v\x16"
0x00001676      6814000000     push 0x14
0x0000167b      e9a0feffff     jmp sym..plt
;-- imp.close:
0x00001680      ff2562682000   jmp qword [reloc.close]                 ; [0x207ee8:8]=0x1686
0x00001686      6815000000     push 0x15
0x0000168b      e990feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001690      ff255a682000   jmp qword [reloc.posix_fadvise]         ; [0x207ef0:8]=0x1696
0x00001696      6816000000     push 0x16
0x0000169b      e980feffff     jmp sym..plt
;-- imp.read:
0x000016a0      ff2552682000   jmp qword [reloc.read]                  ; [0x207ef8:8]=0x16a6
0x000016a6      6817000000     push 0x17
0x000016ab      e970feffff     jmp sym..plt
;-- imp.memcmp:
0x000016b0      ff254a682000   jmp qword [reloc.memcmp]                ; [0x207f00:8]=0x16b6
0x000016b6      6818000000     push 0x18
0x000016bb      e960feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000016c0      ff2542682000   jmp qword [reloc.fputs_unlocked]        ; [0x207f08:8]=0x16c6
0x000016c6      6819000000     push 0x19
0x000016cb      e950feffff     jmp sym..plt
;-- imp.calloc:
0x000016d0      ff253a682000   jmp qword [reloc.calloc]                ; [0x207f10:8]=0x16d6
0x000016d6      681a000000     push 0x1a
0x000016db      e940feffff     jmp sym..plt
;-- imp.signal:
0x000016e0      ff2532682000   jmp qword [reloc.signal]                ; [0x207f18:8]=0x16e6
0x000016e6      681b000000     push 0x1b
0x000016eb      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x000016f0      ff252a682000   jmp qword [reloc.memcpy]                ; [0x207f20:8]=0x16f6
0x000016f6      681c000000     push 0x1c
0x000016fb      e920feffff     jmp sym..plt
;-- imp.fileno:
0x00001700      ff2522682000   jmp qword [reloc.fileno]                ; [0x207f28:8]=0x1706
0x00001706      681d000000     push 0x1d
0x0000170b      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001710      ff251a682000   jmp qword [reloc.malloc]                ; [0x207f30:8]=0x1716
0x00001716      681e000000     push 0x1e
0x0000171b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001720      ff2512682000   jmp qword [reloc.fflush]                ; [0x207f38:8]=0x1726 ; "&\x17"
0x00001726      681f000000     push 0x1f
0x0000172b      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001730      ff250a682000   jmp qword [reloc.nl_langinfo]           ; [0x207f40:8]=0x1736 ; "6\x17"
0x00001736      6820000000     push 0x20                               ; "@"
0x0000173b      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001740      ff2502682000   jmp qword [reloc.__freading]            ; [0x207f48:8]=0x1746 ; "F\x17"
0x00001746      6821000000     push 0x21                               ; '!'
0x0000174b      e9d0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001750      ff25fa672000   jmp qword [reloc.fwrite_unlocked]       ; [0x207f50:8]=0x1756 ; "V\x17"
0x00001756      6822000000     push 0x22                               ; '"'
0x0000175b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001760      ff25f2672000   jmp qword [reloc.realloc]               ; [0x207f58:8]=0x1766 ; "f\x17"
0x00001766      6823000000     push 0x23                               ; '#'
0x0000176b      e9b0fdffff     jmp sym..plt
;-- imp.fdopen:
0x00001770      ff25ea672000   jmp qword [reloc.fdopen]                ; [0x207f60:8]=0x1776 ; "v\x17"
0x00001776      6824000000     push 0x24                               ; '$'
0x0000177b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001780      ff25e2672000   jmp qword [reloc.setlocale]             ; [0x207f68:8]=0x1786
0x00001786      6825000000     push 0x25                               ; '%'
0x0000178b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001790      ff25da672000   jmp qword [reloc.__printf_chk]          ; [0x207f70:8]=0x1796
0x00001796      6826000000     push 0x26                               ; '&'
0x0000179b      e980fdffff     jmp sym..plt
;-- imp.setvbuf:
0x000017a0      ff25d2672000   jmp qword [reloc.setvbuf]               ; [0x207f78:8]=0x17a6
0x000017a6      6827000000     push 0x27                               ; '''
0x000017ab      e970fdffff     jmp sym..plt
;-- imp.error:
0x000017b0      ff25ca672000   jmp qword [reloc.error]                 ; [0x207f80:8]=0x17b6
0x000017b6      6828000000     push 0x28                               ; '('
0x000017bb      e960fdffff     jmp sym..plt
;-- imp.fseeko:
0x000017c0      ff25c2672000   jmp qword [reloc.fseeko]                ; [0x207f88:8]=0x17c6
0x000017c6      6829000000     push 0x29                               ; ')'
0x000017cb      e950fdffff     jmp sym..plt
;-- imp.fopen:
0x000017d0      ff25ba672000   jmp qword [reloc.fopen]                 ; [0x207f90:8]=0x17d6
0x000017d6      682a000000     push 0x2a                               ; '*'
0x000017db      e940fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000017e0      ff25b2672000   jmp qword [reloc.__cxa_atexit]          ; [0x207f98:8]=0x17e6
0x000017e6      682b000000     push 0x2b                               ; '+'
0x000017eb      e930fdffff     jmp sym..plt
;-- imp.exit:
0x000017f0      ff25aa672000   jmp qword [reloc.exit]                  ; [0x207fa0:8]=0x17f6
0x000017f6      682c000000     push 0x2c                               ; ','
0x000017fb      e920fdffff     jmp sym..plt
;-- imp.fwrite:
0x00001800      ff25a2672000   jmp qword [reloc.fwrite]                ; [0x207fa8:8]=0x1806
0x00001806      682d000000     push 0x2d                               ; '-'
0x0000180b      e910fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001810      ff259a672000   jmp qword [reloc.__fprintf_chk]         ; [0x207fb0:8]=0x1816
0x00001816      682e000000     push 0x2e                               ; '.'
0x0000181b      e900fdffff     jmp sym..plt
;-- imp.mbsinit:
0x00001820      ff2592672000   jmp qword [reloc.mbsinit]               ; [0x207fb8:8]=0x1826 ; "&\x18"
0x00001826      682f000000     push 0x2f                               ; '/'
0x0000182b      e9f0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001830      ff258a672000   jmp qword [reloc.iswprint]              ; [0x207fc0:8]=0x1836 ; "6\x18"
0x00001836      6830000000     push 0x30                               ; '0'
0x0000183b      e9e0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001840      ff2582672000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fc8:8]=0x1846 ; "F\x18"
0x00001846      6831000000     push 0x31                               ; '1'
0x0000184b      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001850      .qword 0x90660020679a25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001858      0000           add byte [rax], al
0x0000185a      0000           add byte [rax], al
0x0000185c      0000           add byte [rax], al
0x0000185e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001860      4154           push r12                                ; [14] -r-x section size 15326 named .text
0x00001862      55             push rbp
0x00001863      89fd           mov ebp, edi
0x00001865      53             push rbx
0x00001866      488b3e         mov rdi, qword [rsi]
0x00001869      4889f3         mov rbx, rsi
0x0000186c      4c8d25ad6220.  lea r12, obj.long_options               ; 0x207b20
0x00001873      e8f80f0000     call sym.set_program_name
0x00001878      488d35024800.  lea rsi, [0x00006081]
0x0000187f      bf06000000     mov edi, 6
0x00001884      e8f7feffff     call sym.imp.setlocale
0x00001889      488d359a3c00.  lea rsi, str.usr_local_share_locale     ; 0x552a ; "/usr/local/share/locale"
0x00001890      488d3d6a3c00.  lea rdi, [0x00005501]                   ; "coreutils"
0x00001897      e834fdffff     call sym.imp.bindtextdomain
0x0000189c      488d3d5e3c00.  lea rdi, [0x00005501]                   ; "coreutils"
0x000018a3      e808fdffff     call sym.imp.textdomain
0x000018a8      488d3d310e00.  lea rdi, sym.close_stdout               ; 0x26e0 ; "USH\x83\xec\bH\x8b=\xbbY "
0x000018af      e87c3b0000     call sym.atexit
0x000018b4      c60536682000.  mov byte [obj.append], 0                ; [0x2080f1:1]=0
0x000018bb      c6052e682000.  mov byte [obj.ignore_interrupts], 0     ; [0x2080f0:1]=0
0x000018c2      488d15b83c00.  lea rdx, [0x00005581]                   ; "aip"
0x000018c9      4531c0         xor r8d, r8d
0x000018cc      4c89e1         mov rcx, r12
0x000018cf      4889de         mov rsi, rbx
0x000018d2      89ef           mov edi, ebp
0x000018d4      e847fdffff     call sym.imp.getopt_long
0x000018d9      83f8ff         cmp eax, 0xffffffff
0x000018dc      0f84e9000000   je 0x19cb
0x000018e2      83f861         cmp eax, 0x61
0x000018e5      0f84b5000000   je 0x19a0
0x000018eb      7e63           jle 0x1950
0x000018ed      83f869         cmp eax, 0x69
0x000018f0      0f84ba000000   je 0x19b0
0x000018f6      83f870         cmp eax, 0x70
0x000018f9      0f853a010000   jne 0x1a39
0x000018ff      488b35ba6720.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001906      4885f6         test rsi, rsi
0x00001909      0f84ad000000   je 0x19bc
0x0000190f      4c8b0d026720.  mov r9, qword [obj.argmatch_die]        ; [0x208018:8]=0x2330 sym.__argmatch_die ; "0#"
0x00001916      488d15c36120.  lea rdx, obj.output_error_args          ; 0x207ae0
0x0000191d      488d0d6c4100.  lea rcx, obj.output_error_types         ; 0x5a90
0x00001924      488d3d173c00.  lea rdi, str.output_error               ; 0x5542 ; "--output-error"
0x0000192b      41b804000000   mov r8d, 4
0x00001931      e8ca0c0000     call sym.__xargmatch_internal
0x00001936      488d15534100.  lea rdx, obj.output_error_types         ; 0x5a90
0x0000193d      8b0482         mov eax, dword [rdx + rax*4]
0x00001940      8905a6672000   mov dword [obj.output_error], eax       ; [0x2080ec:4]=0
0x00001946      e977ffffff     jmp 0x18c2
0x0000194b      0f1f440000     nop dword [rax + rax]
0x00001950      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001955      0f85d0000000   jne 0x1a2b
0x0000195b      488d050f3c00.  lea rax, str.David_MacKenzie            ; 0x5571 ; "David MacKenzie"
0x00001962      488b3d3f6720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001969      488b0da06620.  mov rcx, qword [obj.Version]            ; [0x208010:8]=0x5aa0 str.8.31
0x00001970      6a00           push 0
0x00001972      4c8d0dd83b00.  lea r9, str.Richard_M._Stallman         ; 0x5551 ; "Richard M. Stallman"
0x00001979      4c8d05e53b00.  lea r8, str.Mike_Parker                 ; 0x5565 ; "Mike Parker"
0x00001980      50             push rax
0x00001981      488d15753b00.  lea rdx, str.GNU_coreutils              ; 0x54fd ; "GNU coreutils"
0x00001988      488d35f43a00.  lea rsi, [0x00005483]                   ; "tee"
0x0000198f      31c0           xor eax, eax
0x00001991      e8da300000     call sym.version_etc
0x00001996      31ff           xor edi, edi
0x00001998      e853feffff     call sym.imp.exit
0x0000199d      0f1f00         nop dword [rax]
0x000019a0      c6054a672000.  mov byte [obj.append], 1                ; [0x2080f1:1]=0
0x000019a7      e916ffffff     jmp 0x18c2
0x000019ac      0f1f4000       nop dword [rax]
0x000019b0      c60539672000.  mov byte [obj.ignore_interrupts], 1     ; [0x2080f0:1]=0
0x000019b7      e906ffffff     jmp 0x18c2
0x000019bc      c70526672000.  mov dword [obj.output_error], 2         ; [0x2080ec:4]=0
0x000019c6      e9f7feffff     jmp 0x18c2
0x000019cb      803d1e672000.  cmp byte [obj.ignore_interrupts], 0     ; [0x2080f0:1]=0
0x000019d2      7535           jne 0x1a09
0x000019d4      833d11672000.  cmp dword [obj.output_error], 0         ; [0x2080ec:4]=0
0x000019db      753d           jne 0x1a1a
0x000019dd      486315d46620.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b8:4]=0
0x000019e4      89ef           mov edi, ebp
0x000019e6      488d34d3       lea rsi, [rbx + rdx*8]
0x000019ea      29d7           sub edi, edx
0x000019ec      e89f010000     call sym.tee_files
0x000019f1      31ff           xor edi, edi
0x000019f3      89c3           mov ebx, eax
0x000019f5      e886fcffff     call sym.imp.close
0x000019fa      85c0           test eax, eax
0x000019fc      7545           jne 0x1a43
0x000019fe      83f301         xor ebx, 1
0x00001a01      0fb6c3         movzx eax, bl
0x00001a04      5b             pop rbx
0x00001a05      5d             pop rbp
0x00001a06      415c           pop r12
0x00001a08      c3             ret
0x00001a09      be01000000     mov esi, 1
0x00001a0e      bf02000000     mov edi, 2
0x00001a13      e8c8fcffff     call sym.imp.signal
0x00001a18      ebba           jmp 0x19d4
0x00001a1a      be01000000     mov esi, 1
0x00001a1f      bf0d000000     mov edi, 0xd
0x00001a24      e8b7fcffff     call sym.imp.signal
0x00001a29      ebb2           jmp 0x19dd
0x00001a2b      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001a30      7507           jne 0x1a39
0x00001a32      31ff           xor edi, edi
0x00001a34      e867050000     call sym.usage
0x00001a39      bf01000000     mov edi, 1
0x00001a3e      e85d050000     call sym.usage
0x00001a43      488d353b3b00.  lea rsi, str.standard_input             ; 0x5585 ; "standard input"
0x00001a4a      ba05000000     mov edx, 5
0x00001a4f      31ff           xor edi, edi
0x00001a51      e88afbffff     call sym.imp.dcgettext
0x00001a56      4889c3         mov rbx, rax
0x00001a59      e8f2faffff     call sym.imp.__errno_location
0x00001a5e      8b30           mov esi, dword [rax]
0x00001a60      488d15954000.  lea rdx, [0x00005afc]                   ; "%s"
0x00001a67      4889d9         mov rcx, rbx
0x00001a6a      bf01000000     mov edi, 1
0x00001a6f      31c0           xor eax, eax
0x00001a71      e83afdffff     call sym.imp.error
0x00001a76      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00001a80      31ed           xor ebp, ebp
0x00001a82      4989d1         mov r9, rdx
0x00001a85      5e             pop rsi
0x00001a86      4889e2         mov rdx, rsp
0x00001a89      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001a8d      50             push rax
0x00001a8e      54             push rsp
0x00001a8f      4c8d058a3900.  lea r8, sym.__libc_csu_fini             ; 0x5420
0x00001a96      488d0d133900.  lea rcx, sym.__libc_csu_init            ; 0x53b0 ; "AWAVI\x89\xd7AUATL\x8d%\x0e' "
0x00001a9d      488d3dbcfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1860 ; "ATU\x89\xfdSH\x8b>H\x89\xf3L\x8d%\xadb "
0x00001aa4      ff152e652000   call qword [reloc.__libc_start_main]    ; [0x207fd8:8]=0
0x00001aaa      f4             hlt
0x00001aab      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001ab0      488d3de96520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001ab7      55             push rbp
0x00001ab8      488d05e16520.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001abf      4839f8         cmp rax, rdi
0x00001ac2      4889e5         mov rbp, rsp
0x00001ac5      7419           je 0x1ae0
0x00001ac7      488b05026520.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd0:8]=0
0x00001ace      4885c0         test rax, rax
0x00001ad1      740d           je 0x1ae0
0x00001ad3      5d             pop rbp
0x00001ad4      ffe0           jmp rax
0x00001ad6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001ae0      5d             pop rbp
0x00001ae1      c3             ret
0x00001ae2      0f1f4000       nop dword [rax]
0x00001ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001af0      488d3da96520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001af7      488d35a26520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001afe      55             push rbp
0x00001aff      4829fe         sub rsi, rdi
0x00001b02      4889e5         mov rbp, rsp
0x00001b05      48c1fe03       sar rsi, 3
0x00001b09      4889f0         mov rax, rsi
0x00001b0c      48c1e83f       shr rax, 0x3f
0x00001b10      4801c6         add rsi, rax
0x00001b13      48d1fe         sar rsi, 1
0x00001b16      7418           je 0x1b30
0x00001b18      488b05c96420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207fe8:8]=0
0x00001b1f      4885c0         test rax, rax
0x00001b22      740c           je 0x1b30
0x00001b24      5d             pop rbp
0x00001b25      ffe0           jmp rax
0x00001b27      660f1f840000.  nop word [rax + rax]
0x00001b30      5d             pop rbp
0x00001b31      c3             ret
0x00001b32      0f1f4000       nop dword [rax]
0x00001b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001b40      803da1652000.  cmp byte [obj.completed.7697], 0        ; [0x2080e8:1]=0
0x00001b47      752f           jne 0x1b78
0x00001b49      48833d9f6420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff0:8]=0
0x00001b51      55             push rbp
0x00001b52      4889e5         mov rbp, rsp
0x00001b55      740c           je 0x1b63
0x00001b57      488b3daa6420.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001b5e      e8edfcffff     call sym..plt.got
0x00001b63      e848ffffff     call sym.deregister_tm_clones
0x00001b68      c60579652000.  mov byte [obj.completed.7697], 1        ; [0x2080e8:1]=0
0x00001b6f      5d             pop rbp
0x00001b70      c3             ret
0x00001b71      0f1f80000000.  nop dword [rax]
0x00001b78      f3c3           ret
0x00001b7a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001b80      55             push rbp
0x00001b81      4889e5         mov rbp, rsp
0x00001b84      5d             pop rbp
0x00001b85      e966ffffff     jmp sym.register_tm_clones
0x00001b8a      660f1f440000   nop word [rax + rax]
;-- tee_files:
0x00001b90      4157           push r15                                ; /src:185
0x00001b92      4156           push r14
0x00001b94      4989f7         mov r15, rsi
0x00001b97      4155           push r13
0x00001b99      4154           push r12
0x00001b9b      4c8d25c43800.  lea r12, [0x00005466]                   ; /src:192 ; "w"
0x00001ba2      55             push rbp                                ; /src:185
0x00001ba3      53             push rbx
0x00001ba4      89fb           mov ebx, edi
0x00001ba6      be02000000     mov esi, 2                              ; /src:199
0x00001bab      4881ec382000.  sub rsp, 0x2038                         ; /src:185
0x00001bb2      64488b042528.  mov rax, qword fs:[0x28]
0x00001bbb      488984242820.  mov qword [rsp + 0x2028], rax
0x00001bc3      31c0           xor eax, eax
0x00001bc5      803d25652000.  cmp byte [obj.append], 0                ; /src:192 ; [0x2080f1:1]=0
0x00001bcc      897c241c       mov dword [rsp + 0x1c], edi             ; /src:185
0x00001bd0      488d058d3800.  lea rax, str.aw_____________________t   ; /src:192 ; 0x5464 ; u"aw\u7473\u6e61\u6164\u6472\u6f20\u7475\u7570t\u6572\u6461\u6520\u7272\u726f\u7400\u6565\u5b00\u7400\u7365\u2074\u6e69\u6f76\u6163\u6974\u6e6f\u4d00\u6c75\u6974\u632d\u6c61\u206c\u6e69\u6f76\u6163\u6974\u6e6f\u7300\u6168\u3232\u7334\u6d75\u7300\u6168\u2032\u7475\u6c69\u7469\u6569s\u6873\u3261\u3635\u7573m\u6873\u3361\u3438\u7573m\u6873\u3561\u3231\u7573m\u250a\u2073\u6e6f\u696c\u656e\u6820\u6c65\u3a70\u3c20\u7325\u0a3e\u4700\u554e\u6320\u726f\u7565\u6974\u736c\u6500\u5f6e\u4600\u6c75\u206c\u6f64\u7563\u656d\u746e\u7461\u6f69\u206e\u253c\u2573\u3e73\n\u752f\u7273\u6c2f\u636f\u6c61\u732f\u6168\u6572\u6c2f\u636f\u6c61e\u2d2d\u756f\u7074\u7475\u652d\u7272\u726f\u5200\u6369\u6168\u6472\u4d20\u202e\u7453\u6c61\u6d6c\u6e61\u4d00\u6b69\u2065\u6150\u6b72\u7265\u4400\u7661\u6469\u4d20\u6361\u654b\u7a6e\u6569\u6100\u7069\u7300\u6174\u646e\u7261\u2064\u6e69\u7570t\u6177\u6e72\u7700\u7261\u2d6e\u6f6e\u6970\u6570\u6500\u6978t\u7865\u7469\u6e2d\u706f\u7069e\u7061\u6570\u646e\u6900\u6e67\u726f\u2d65\u6e69\u6574\u7272\u7075\u7374\u6800\u6c65p\u6576\u7372\u6f69n"
0x00001bd7      488b3dd26420.  mov rdi, qword [obj.stdin]              ; /src:199 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00001bde      4c0f45e0       cmovne r12, rax                         ; /src:192
0x00001be2      e8b90b0000     call sym.fadvise                        ; /src:199
0x00001be7      8d7b01         lea edi, [rbx + 1]                      ; /src:204
0x00001bea      ba08000000     mov edx, 8                              ; .//ib:101
0x00001bef      4889d0         mov rax, rdx
0x00001bf2      4863ff         movsxd rdi, edi
0x00001bf5      48f7e7         mul rdi
0x00001bf8      0f8089030000   jo 0x1f87
0x00001bfe      31c9           xor ecx, ecx
0x00001c00      4885c0         test rax, rax
0x00001c03      0f8879030000   js 0x1f82
0x00001c09      4885c9         test rcx, rcx
0x00001c0c      0f8570030000   jne 0x1f82
0x00001c12      48c1e703       shl rdi, 3
0x00001c16      e8b52f0000     call sym.xmalloc
0x00001c1b      4889c3         mov rbx, rax
0x00001c1e      488b05836420.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001c25      488d353c3800.  lea rsi, [0x00005468]                   ; "standard output"
0x00001c2c      31ff           xor edi, edi
0x00001c2e      ba05000000     mov edx, 5
0x00001c33      488903         mov qword [rbx], rax
0x00001c36      e8a5f9ffff     call sym.imp.dcgettext
0x00001c3b      488b3d666420.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001c42      31c9           xor ecx, ecx
0x00001c44      31f6           xor esi, esi
0x00001c46      498947f8       mov qword [r15 - 8], rax
0x00001c4a      ba02000000     mov edx, 2
0x00001c4f      e84cfbffff     call sym.imp.setvbuf
0x00001c54      8b44241c       mov eax, dword [rsp + 0x1c]
0x00001c58      85c0           test eax, eax
0x00001c5a      0f8e0e030000   jle 0x1f6e
0x00001c60      83e801         sub eax, 1
0x00001c63      4531f6         xor r14d, r14d
0x00001c66      c644241801     mov byte [rsp + 0x18], 1
0x00001c6b      89442410       mov dword [rsp + 0x10], eax
0x00001c6f      4c8d2cc50800.  lea r13, [rax*8 + 8]
0x00001c77      bd01000000     mov ebp, 1
0x00001c7c      eb20           jmp 0x1c9e
0x00001c7e      6690           nop
0x00001c80      31c9           xor ecx, ecx
0x00001c82      31f6           xor esi, esi
0x00001c84      ba02000000     mov edx, 2
0x00001c89      4889c7         mov rdi, rax
0x00001c8c      4983c608       add r14, 8
0x00001c90      4883c501       add rbp, 1
0x00001c94      e807fbffff     call sym.imp.setvbuf
0x00001c99      4d39ee         cmp r14, r13
0x00001c9c      7465           je 0x1d03
0x00001c9e      4b8b3c37       mov rdi, qword [r15 + r14]
0x00001ca2      4c89e6         mov rsi, r12
0x00001ca5      e8260b0000     call sym.fopen_safer
0x00001caa      4885c0         test rax, rax
0x00001cad      4a89443308     mov qword [rbx + r14 + 8], rax
0x00001cb2      75cc           jne 0x1c80
0x00001cb4      4b8b1437       mov rdx, qword [r15 + r14]
0x00001cb8      31ff           xor edi, edi
0x00001cba      be03000000     mov esi, 3
0x00001cbf      e8ec260000     call sym.quotearg_n_style_colon
0x00001cc4      4889442408     mov qword [rsp + 8], rax
0x00001cc9      e882f8ffff     call sym.imp.__errno_location
0x00001cce      8b0d18642000   mov ecx, dword [obj.output_error]       ; [0x2080ec:4]=0
0x00001cd4      8b30           mov esi, dword [rax]
0x00001cd6      31ff           xor edi, edi
0x00001cd8      8d51fd         lea edx, [rcx - 3]
0x00001cdb      488b4c2408     mov rcx, qword [rsp + 8]
0x00001ce0      83fa01         cmp edx, 1
0x00001ce3      488d15123e00.  lea rdx, [0x00005afc]                   ; "%s"
0x00001cea      400f96c7       setbe dil
0x00001cee      31c0           xor eax, eax
0x00001cf0      4983c608       add r14, 8
0x00001cf4      e8b7faffff     call sym.imp.error
0x00001cf9      4d39ee         cmp r14, r13
0x00001cfc      c644241800     mov byte [rsp + 0x18], 0
0x00001d01      759b           jne 0x1c9e
0x00001d03      4885ed         test rbp, rbp
0x00001d06      7464           je 0x1d6c
0x00001d08      8b44241c       mov eax, dword [rsp + 0x1c]
0x00001d0c      488d04c50800.  lea rax, [rax*8 + 8]
0x00001d14      4889442408     mov qword [rsp + 8], rax
0x00001d19      488d442420     lea rax, [rsp + 0x20]
0x00001d1e      4889442410     mov qword [rsp + 0x10], rax
0x00001d23      0f1f440000     nop dword [rax + rax]
0x00001d28      488b742410     mov rsi, qword [rsp + 0x10]
0x00001d2d      31ff           xor edi, edi
0x00001d2f      ba00200000     mov edx, 0x2000
0x00001d34      e867f9ffff     call sym.imp.read
0x00001d39      4885c0         test rax, rax
0x00001d3c      4989c4         mov r12, rax
0x00001d3f      0f89db000000   jns 0x1e20
0x00001d45      e806f8ffff     call sym.imp.__errno_location
0x00001d4a      833804         cmp dword [rax], 4
0x00001d4d      0f84a2010000   je 0x1ef5
0x00001d53      4983fcff       cmp r12, 0xffffffffffffffff
0x00001d57      0f84de010000   je 0x1f3b
0x00001d5d      8b44241c       mov eax, dword [rsp + 0x1c]
0x00001d61      85c0           test eax, eax
0x00001d63      7e7b           jle 0x1de0
0x00001d65      83e801         sub eax, 1
0x00001d68      89442410       mov dword [rsp + 0x10], eax
0x00001d6c      448b742410     mov r14d, dword [rsp + 0x10]
0x00001d71      31ed           xor ebp, ebp
0x00001d73      4c8d2d823d00.  lea r13, [0x00005afc]                   ; "%s"
0x00001d7a      4e8d24f50800.  lea r12, [r14*8 + 8]
0x00001d82      eb0d           jmp 0x1d91
0x00001d84      0f1f4000       nop dword [rax]
0x00001d88      4883c508       add rbp, 8
0x00001d8c      4c39e5         cmp rbp, r12
0x00001d8f      744f           je 0x1de0
0x00001d91      488b7c2b08     mov rdi, qword [rbx + rbp + 8]
0x00001d96      4885ff         test rdi, rdi
0x00001d99      74ed           je 0x1d88
0x00001d9b      e8c0300000     call sym.rpl_fclose
0x00001da0      85c0           test eax, eax
0x00001da2      74e4           je 0x1d88
0x00001da4      498b142f       mov rdx, qword [r15 + rbp]
0x00001da8      31ff           xor edi, edi
0x00001daa      be03000000     mov esi, 3
0x00001daf      4883c508       add rbp, 8
0x00001db3      e8f8250000     call sym.quotearg_n_style_colon
0x00001db8      4989c6         mov r14, rax
0x00001dbb      e890f7ffff     call sym.imp.__errno_location
0x00001dc0      8b30           mov esi, dword [rax]
0x00001dc2      31ff           xor edi, edi
0x00001dc4      31c0           xor eax, eax
0x00001dc6      4c89f1         mov rcx, r14
0x00001dc9      4c89ea         mov rdx, r13
0x00001dcc      e8dff9ffff     call sym.imp.error
0x00001dd1      4c39e5         cmp rbp, r12
0x00001dd4      c644241800     mov byte [rsp + 0x18], 0
0x00001dd9      75b6           jne 0x1d91
0x00001ddb      0f1f440000     nop dword [rax + rax]
0x00001de0      4889df         mov rdi, rbx
0x00001de3      e848f7ffff     call sym.imp.free
0x00001de8      488b8c242820.  mov rcx, qword [rsp + 0x2028]
0x00001df0      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001df9      0fb6442418     movzx eax, byte [rsp + 0x18]
0x00001dfe      0f8579010000   jne 0x1f7d
0x00001e04      4881c4382000.  add rsp, 0x2038
0x00001e0b      5b             pop rbx
0x00001e0c      5d             pop rbp
0x00001e0d      415c           pop r12
0x00001e0f      415d           pop r13
0x00001e11      415e           pop r14
0x00001e13      415f           pop r15
0x00001e15      c3             ret
0x00001e16      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e20      0f8437ffffff   je 0x1d5d
0x00001e26      8b44241c       mov eax, dword [rsp + 0x1c]
0x00001e2a      85c0           test eax, eax
0x00001e2c      0f88c3000000   js 0x1ef5
0x00001e32      4531f6         xor r14d, r14d
0x00001e35      0f1f00         nop dword [rax]
0x00001e38      4e8b2c33       mov r13, qword [rbx + r14]
0x00001e3c      4d85ed         test r13, r13
0x00001e3f      0f84a1000000   je 0x1ee6
0x00001e45      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00001e4a      4c89e9         mov rcx, r13
0x00001e4d      ba01000000     mov edx, 1
0x00001e52      4c89e6         mov rsi, r12
0x00001e55      e8f6f8ffff     call sym.imp.fwrite_unlocked
0x00001e5a      4883f801       cmp rax, 1
0x00001e5e      0f8482000000   je 0x1ee6
0x00001e64      e8e7f6ffff     call sym.imp.__errno_location
0x00001e69      448b10         mov r10d, dword [rax]
0x00001e6c      488b05356220.  mov rax, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001e73      4183fa20       cmp r10d, 0x20                          ; "@"
0x00001e77      0f848b000000   je 0x1f08
0x00001e7d      4939c5         cmp r13, rax
0x00001e80      7512           jne 0x1e94
0x00001e82      4c89ef         mov rdi, r13
0x00001e85      4489542418     mov dword [rsp + 0x18], r10d
0x00001e8a      e811f7ffff     call sym.imp.clearerr_unlocked
0x00001e8f      448b542418     mov r10d, dword [rsp + 0x18]
0x00001e94      4b8b5437f8     mov rdx, qword [r15 + r14 - 8]
0x00001e99      31ff           xor edi, edi
0x00001e9b      be03000000     mov esi, 3
0x00001ea0      4489542418     mov dword [rsp + 0x18], r10d
0x00001ea5      e806250000     call sym.quotearg_n_style_colon
0x00001eaa      8b0d3c622000   mov ecx, dword [obj.output_error]       ; [0x2080ec:4]=0
0x00001eb0      448b542418     mov r10d, dword [rsp + 0x18]
0x00001eb5      31ff           xor edi, edi
0x00001eb7      8d51fd         lea edx, [rcx - 3]
0x00001eba      4489d6         mov esi, r10d
0x00001ebd      4889c1         mov rcx, rax
0x00001ec0      83fa01         cmp edx, 1
0x00001ec3      488d15323c00.  lea rdx, [0x00005afc]                   ; "%s"
0x00001eca      400f96c7       setbe dil
0x00001ece      31c0           xor eax, eax
0x00001ed0      e8dbf8ffff     call sym.imp.error
0x00001ed5      4ac704330000.  mov qword [rbx + r14], 0
0x00001edd      c644241800     mov byte [rsp + 0x18], 0
0x00001ee2      4883ed01       sub rbp, 1
0x00001ee6      4983c608       add r14, 8
0x00001eea      4c39742408     cmp qword [rsp + 8], r14
0x00001eef      0f8543ffffff   jne 0x1e38
0x00001ef5      4885ed         test rbp, rbp
0x00001ef8      0f852afeffff   jne 0x1d28
0x00001efe      e950feffff     jmp 0x1d53
0x00001f03      0f1f440000     nop dword [rax + rax]
0x00001f08      8b15de612000   mov edx, dword [obj.output_error]       ; [0x2080ec:4]=0
0x00001f0e      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x00001f11      83fa01         cmp edx, 1
0x00001f14      0f8463ffffff   je 0x1e7d
0x00001f1a      4939c5         cmp r13, rax
0x00001f1d      740a           je 0x1f29
0x00001f1f      4ac704330000.  mov qword [rbx + r14], 0
0x00001f27      ebb9           jmp 0x1ee2
0x00001f29      4c89ef         mov rdi, r13
0x00001f2c      e86ff6ffff     call sym.imp.clearerr_unlocked
0x00001f31      4ac704330000.  mov qword [rbx + r14], 0
0x00001f39      eba7           jmp 0x1ee2
0x00001f3b      488d35363500.  lea rsi, [0x00005478]                   ; "read error"
0x00001f42      ba05000000     mov edx, 5
0x00001f47      31ff           xor edi, edi
0x00001f49      e892f6ffff     call sym.imp.dcgettext
0x00001f4e      4889c5         mov rbp, rax
0x00001f51      e8faf5ffff     call sym.imp.__errno_location
0x00001f56      8b30           mov esi, dword [rax]
0x00001f58      4889ea         mov rdx, rbp
0x00001f5b      31ff           xor edi, edi
0x00001f5d      31c0           xor eax, eax
0x00001f5f      e84cf8ffff     call sym.imp.error
0x00001f64      c644241800     mov byte [rsp + 0x18], 0
0x00001f69      e9effdffff     jmp 0x1d5d
0x00001f6e      c644241801     mov byte [rsp + 0x18], 1
0x00001f73      bd01000000     mov ebp, 1
0x00001f78      e98bfdffff     jmp 0x1d08
0x00001f7d      e88ef6ffff     call sym.imp.__stack_chk_fail
0x00001f82      e8992e0000     call sym.xalloc_die
0x00001f87      b901000000     mov ecx, 1
0x00001f8c      e96ffcffff     jmp 0x1c00
0x00001f91      0f1f440000     nop dword [rax + rax]
0x00001f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- usage:
0x00001fa0      4155           push r13
0x00001fa2      4154           push r12
0x00001fa4      ba05000000     mov edx, 5
0x00001fa9      55             push rbp
0x00001faa      53             push rbx
0x00001fab      89fd           mov ebp, edi
0x00001fad      4881ec880000.  sub rsp, 0x88
0x00001fb4      488b1d4d6120.  mov rbx, qword [obj.program_name]       ; [0x208108:8]=0
0x00001fbb      64488b042528.  mov rax, qword fs:[0x28]
0x00001fc4      4889442478     mov qword [rsp + 0x78], rax
0x00001fc9      31c0           xor eax, eax
0x00001fcb      85ff           test edi, edi
0x00001fcd      742e           je 0x1ffd
0x00001fcf      488d350a3600.  lea rsi, str.Try___s___help__for_more_information. ; 0x55e0 ; "Try '%s --help' for more information.\n"
0x00001fd6      31ff           xor edi, edi
0x00001fd8      e803f6ffff     call sym.imp.dcgettext
0x00001fdd      488b3dfc6020.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00001fe4      4889c2         mov rdx, rax
0x00001fe7      4889d9         mov rcx, rbx
0x00001fea      be01000000     mov esi, 1
0x00001fef      31c0           xor eax, eax
0x00001ff1      e81af8ffff     call sym.imp.__fprintf_chk
0x00001ff6      89ef           mov edi, ebp
0x00001ff8      e8f3f7ffff     call sym.imp.exit
0x00001ffd      488d35043600.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x5608 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00002004      31ff           xor edi, edi
0x00002006      e8d5f5ffff     call sym.imp.dcgettext
0x0000200b      4889da         mov rdx, rbx
0x0000200e      4889c6         mov rsi, rax
0x00002011      bf01000000     mov edi, 1
0x00002016      31c0           xor eax, eax
0x00002018      e873f7ffff     call sym.imp.__printf_chk
0x0000201d      488b1d846020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002024      488d35053600.  lea rsi, str.Copy_standard_input_to_each_FILE__and_also_to_standard_output._______a____append______________append_to_the_given_FILEs__do_not_overwrite_____i____ignore_interrupts___ignore_interrupt_signals ; 0x5630 ; "Copy standard input to each FILE, and also to standard output.\n\n  -a, --append              append to the given FILEs, do not overwrite\n  -i, --ignore-interrupts   ignore interrupt signals\n"
0x0000202b      ba05000000     mov edx, 5
0x00002030      31ff           xor edi, edi
0x00002032      e8a9f5ffff     call sym.imp.dcgettext
0x00002037      4889de         mov rsi, rbx
0x0000203a      4889c7         mov rdi, rax
0x0000203d      e87ef6ffff     call sym.imp.fputs_unlocked
0x00002042      488b1d5f6020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002049      488d35a03600.  lea rsi, str.p________________________diagnose_errors_writing_to_non_pipes__________output_error__MODE____set_behavior_on_write_error.__See_MODE_below ; 0x56f0 ; "  -p                        diagnose errors writing to non pipes\n      --output-error[=MODE]   set behavior on write error.  See MODE below\n"
0x00002050      ba05000000     mov edx, 5
0x00002055      31ff           xor edi, edi
0x00002057      e884f5ffff     call sym.imp.dcgettext
0x0000205c      4889de         mov rsi, rbx
0x0000205f      4889c7         mov rdi, rax
0x00002062      e859f6ffff     call sym.imp.fputs_unlocked
0x00002067      488b1d3a6020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000206e      488d350b3700.  lea rsi, str.help_____display_this_help_and_exit ; 0x5780 ; "      --help     display this help and exit\n"
0x00002075      ba05000000     mov edx, 5
0x0000207a      31ff           xor edi, edi
0x0000207c      e85ff5ffff     call sym.imp.dcgettext
0x00002081      4889de         mov rsi, rbx
0x00002084      4889c7         mov rdi, rax
0x00002087      e834f6ffff     call sym.imp.fputs_unlocked
0x0000208c      488b1d156020.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002093      488d35163700.  lea rsi, str.version__output_version_information_and_exit ; 0x57b0 ; "      --version  output version information and exit\n"
0x0000209a      ba05000000     mov edx, 5
0x0000209f      31ff           xor edi, edi
0x000020a1      e83af5ffff     call sym.imp.dcgettext
0x000020a6      4889de         mov rsi, rbx
0x000020a9      4889c7         mov rdi, rax
0x000020ac      e80ff6ffff     call sym.imp.fputs_unlocked
0x000020b1      488b1df05f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000020b8      488d35293700.  lea rsi, str.MODE_determines_behavior_with_write_errors_on_the_outputs:_____warn__________diagnose_errors_writing_to_any_output_____warn_nopipe___diagnose_errors_writing_to_any_output_not_a_pipe_____exit__________exit_on_error_writing_to_any_output_____exit_nopipe___exit_on_error_writing_to_any_output_not_a_pipe__The_default_MODE_for_the__p_option_is__warn_nopipe_.__The_default_operation_when___output_error_is_not_specified__is_to__exit_immediately_on_error_writing_to_a_pipe__and_diagnose_errors__writing_to_non_pipe_outputs. ; 0x57e8 ; "\nMODE determines behavior with write errors on the outputs:\n  'warn'         diagnose errors writing to any output\n  'warn-nopipe'  diagnose errors writing to any output not a pipe\n  'exit'         exit on error writing to any output\n  'exit-nopipe'  exit on error writing to any output not a pipe\nThe default MODE for the -p option is 'warn-nopipe'.\nThe default operation when --output-error is not specified, is to\nexit immediately on error writing to a pipe, and diagnose errors\nwriting to non pipe outputs.\n"
0x000020bf      ba05000000     mov edx, 5
0x000020c4      31ff           xor edi, edi
0x000020c6      e815f5ffff     call sym.imp.dcgettext
0x000020cb      4889de         mov rsi, rbx
0x000020ce      4889c7         mov rdi, rax
0x000020d1      488d1dab3300.  lea rbx, [0x00005483]                   ; "tee"
0x000020d8      e8e3f5ffff     call sym.imp.fputs_unlocked
0x000020dd      488d05a33300.  lea rax, [0x00005487]                   ; "["
0x000020e4      488d0ddd3300.  lea rcx, str.sha256sum                  ; 0x54c8 ; "sha256sum"
0x000020eb      48c744246000.  mov qword [rsp + 0x60], 0
0x000020f4      48c744246800.  mov qword [rsp + 0x68], 0
0x000020fd      4889e2         mov rdx, rsp
0x00002100      48890424       mov qword [rsp], rax
0x00002104      488d057e3300.  lea rax, [0x00005489]                   ; "test invocation"
0x0000210b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002110      488d0dbb3300.  lea rcx, str.sha384sum                  ; 0x54d2 ; "sha384sum"
0x00002117      4889442408     mov qword [rsp + 8], rax
0x0000211c      488d05de3300.  lea rax, [0x00005501]                   ; "coreutils"
0x00002123      48894c2440     mov qword [rsp + 0x40], rcx
0x00002128      488d0dad3300.  lea rcx, str.sha512sum                  ; 0x54dc ; "sha512sum"
0x0000212f      4889442410     mov qword [rsp + 0x10], rax
0x00002134      488d055e3300.  lea rax, [0x00005499]                   ; "Multi-call invocation"
0x0000213b      48894c2450     mov qword [rsp + 0x50], rcx
0x00002140      4889442418     mov qword [rsp + 0x18], rax
0x00002145      488d05633300.  lea rax, str.sha224sum                  ; 0x54af ; "sha224sum"
0x0000214c      4889442420     mov qword [rsp + 0x20], rax
0x00002151      488d05613300.  lea rax, str.sha2_utilities             ; 0x54b9 ; "sha2 utilities"
0x00002158      4889442428     mov qword [rsp + 0x28], rax
0x0000215d      4889442438     mov qword [rsp + 0x38], rax
0x00002162      4889442448     mov qword [rsp + 0x48], rax
0x00002167      4889442458     mov qword [rsp + 0x58], rax
0x0000216c      0f1f4000       nop dword [rax]
0x00002170      4883c210       add rdx, 0x10
0x00002174      488b3a         mov rdi, qword [rdx]
0x00002177      4885ff         test rdi, rdi
0x0000217a      7413           je 0x218f
0x0000217c      b904000000     mov ecx, 4
0x00002181      4889de         mov rsi, rbx
0x00002184      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002186      0f97c0         seta al
0x00002189      1c00           sbb al, 0
0x0000218b      84c0           test al, al
0x0000218d      75e1           jne 0x2170
0x0000218f      4c8b6208       mov r12, qword [rdx + 8]
0x00002193      31ff           xor edi, edi
0x00002195      ba05000000     mov edx, 5
0x0000219a      488d35453300.  lea rsi, str.s_online_help:___s         ; 0x54e6 ; "\n%s online help: <%s>\n"
0x000021a1      4d85e4         test r12, r12
0x000021a4      0f84c1000000   je 0x226b
0x000021aa      e831f4ffff     call sym.imp.dcgettext
0x000021af      488d0d323800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59e8 ; "https://www.gnu.org/software/coreutils/"
0x000021b6      488d15403300.  lea rdx, str.GNU_coreutils              ; 0x54fd ; "GNU coreutils"
0x000021bd      4889c6         mov rsi, rax
0x000021c0      bf01000000     mov edi, 1
0x000021c5      31c0           xor eax, eax
0x000021c7      e8c4f5ffff     call sym.imp.__printf_chk
0x000021cc      31f6           xor esi, esi
0x000021ce      bf05000000     mov edi, 5
0x000021d3      e8a8f5ffff     call sym.imp.setlocale
0x000021d8      4885c0         test rax, rax
0x000021db      741c           je 0x21f9
0x000021dd      488d35273300.  lea rsi, [0x0000550b]                   ; "en_"
0x000021e4      ba03000000     mov edx, 3
0x000021e9      4889c7         mov rdi, rax
0x000021ec      e86ff3ffff     call sym.imp.strncmp
0x000021f1      85c0           test eax, eax
0x000021f3      0f8507010000   jne 0x2300
0x000021f9      488d350f3300.  lea rsi, str.Full_documentation___s_s   ; 0x550f ; "Full documentation <%s%s>\n"
0x00002200      31ff           xor edi, edi
0x00002202      ba05000000     mov edx, 5
0x00002207      e8d4f3ffff     call sym.imp.dcgettext
0x0000220c      488d0d703200.  lea rcx, [0x00005483]                   ; "tee"
0x00002213      488d15ce3700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x59e8 ; "https://www.gnu.org/software/coreutils/"
0x0000221a      4889c6         mov rsi, rax
0x0000221d      bf01000000     mov edi, 1
0x00002222      31c0           xor eax, eax
0x00002224      e867f5ffff     call sym.imp.__printf_chk
0x00002229      4939dc         cmp r12, rbx
0x0000222c      488d0d703200.  lea rcx, [0x000054a3]                   ; " invocation"
0x00002233      488d1d473e00.  lea rbx, [0x00006081]
0x0000223a      480f44d9       cmove rbx, rcx
0x0000223e      488d35133800.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5a58 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002245      31ff           xor edi, edi
0x00002247      ba05000000     mov edx, 5
0x0000224c      e88ff3ffff     call sym.imp.dcgettext
0x00002251      4889d9         mov rcx, rbx
0x00002254      4889c6         mov rsi, rax
0x00002257      4c89e2         mov rdx, r12
0x0000225a      bf01000000     mov edi, 1
0x0000225f      31c0           xor eax, eax
0x00002261      e82af5ffff     call sym.imp.__printf_chk
0x00002266      e98bfdffff     jmp 0x1ff6
0x0000226b      e870f3ffff     call sym.imp.dcgettext
0x00002270      488d0d713700.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59e8 ; "https://www.gnu.org/software/coreutils/"
0x00002277      488d157f3200.  lea rdx, str.GNU_coreutils              ; 0x54fd ; "GNU coreutils"
0x0000227e      4889c6         mov rsi, rax
0x00002281      bf01000000     mov edi, 1
0x00002286      31c0           xor eax, eax
0x00002288      e803f5ffff     call sym.imp.__printf_chk
0x0000228d      31f6           xor esi, esi
0x0000228f      bf05000000     mov edi, 5
0x00002294      e8e7f4ffff     call sym.imp.setlocale
0x00002299      4885c0         test rax, rax
0x0000229c      7418           je 0x22b6
0x0000229e      488d35663200.  lea rsi, [0x0000550b]                   ; "en_"
0x000022a5      ba03000000     mov edx, 3
0x000022aa      4889c7         mov rdi, rax
0x000022ad      e8aef2ffff     call sym.imp.strncmp
0x000022b2      85c0           test eax, eax
0x000022b4      7543           jne 0x22f9
0x000022b6      488d35523200.  lea rsi, str.Full_documentation___s_s   ; 0x550f ; "Full documentation <%s%s>\n"
0x000022bd      ba05000000     mov edx, 5
0x000022c2      31ff           xor edi, edi
0x000022c4      4c8d25b83100.  lea r12, [0x00005483]                   ; "tee"
0x000022cb      488d1dd13100.  lea rbx, [0x000054a3]                   ; " invocation"
0x000022d2      e809f3ffff     call sym.imp.dcgettext
0x000022d7      488d0da53100.  lea rcx, [0x00005483]                   ; "tee"
0x000022de      488d15033700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x59e8 ; "https://www.gnu.org/software/coreutils/"
0x000022e5      4889c6         mov rsi, rax
0x000022e8      bf01000000     mov edi, 1
0x000022ed      31c0           xor eax, eax
0x000022ef      e89cf4ffff     call sym.imp.__printf_chk
0x000022f4      e945ffffff     jmp 0x223e
0x000022f9      4c8d25833100.  lea r12, [0x00005483]                   ; "tee"
0x00002300      4c8b2da15d20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002307      488d35023700.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5a10 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000230e      31ff           xor edi, edi
0x00002310      ba05000000     mov edx, 5
0x00002315      e8c6f2ffff     call sym.imp.dcgettext
0x0000231a      4c89ee         mov rsi, r13
0x0000231d      4889c7         mov rdi, rax
0x00002320      e89bf3ffff     call sym.imp.fputs_unlocked
0x00002325      e9cffeffff     jmp 0x21f9
0x0000232a      660f1f440000   nop word [rax + rax]
;-- __argmatch_die:
0x00002330      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00002335      e966fcffff     jmp sym.usage
0x0000233a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00002340      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00002342      4156           push r14
0x00002344      4989f7         mov r15, rsi
0x00002347      4155           push r13
0x00002349      4154           push r12
0x0000234b      4989cd         mov r13, rcx
0x0000234e      55             push rbp
0x0000234f      53             push rbx
0x00002350      4889d5         mov rbp, rdx
0x00002353      4883ec28       sub rsp, 0x28
0x00002357      48897c2408     mov qword [rsp + 8], rdi
0x0000235c      4889542418     mov qword [rsp + 0x18], rdx
0x00002361      e89af2ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00002366      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00002369      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00002371      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00002374      0f84b3000000   je 0x242d
0x0000237a      4989c4         mov r12, rax
0x0000237d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00002382      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00002384      eb51           jmp 0x23d7
0x00002386      662e0f1f8400.  nop word cs:[rax + rax]
0x00002390      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00002395      4885c0         test rax, rax
0x00002398      0f84a2000000   je 0x2440
0x0000239e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x000023a2      4c89ea         mov rdx, r13
0x000023a5      4889ee         mov rsi, rbp
0x000023a8      490faffd       imul rdi, r13
0x000023ac      4801c7         add rdi, rax
0x000023af      e8fcf2ffff     call sym.imp.memcmp
0x000023b4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x000023b6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x000023bb      b901000000     mov ecx, 1
0x000023c0      0f45c1         cmovne eax, ecx
0x000023c3      88442417       mov byte [rsp + 0x17], al
0x000023c7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000023cb      4c01ed         add rbp, r13
0x000023ce      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000023d2      4d85f6         test r14, r14
0x000023d5      7441           je 0x2418
0x000023d7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x000023dc      4c89e2         mov rdx, r12
0x000023df      4c89f7         mov rdi, r14
0x000023e2      e879f1ffff     call sym.imp.strncmp
0x000023e7      85c0           test eax, eax
0x000023e9      75dc           jne 0x23c7
0x000023eb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x000023ee      e80df2ffff     call sym.imp.strlen
0x000023f3      4c39e0         cmp rax, r12
0x000023f6      7458           je 0x2450
0x000023f8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x000023fd      7591           jne 0x2390
0x000023ff      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00002403      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00002407      4c01ed         add rbp, r13
0x0000240a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x0000240e      4d85f6         test r14, r14
0x00002411      75c4           jne 0x23d7
0x00002413      0f1f440000     nop dword [rax + rax]
0x00002418      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x0000241d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00002424      480f440424     cmove rax, qword [rsp]
0x00002429      48890424       mov qword [rsp], rax
0x0000242d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00002431      4883c428       add rsp, 0x28
0x00002435      5b             pop rbx
0x00002436      5d             pop rbp
0x00002437      415c           pop r12
0x00002439      415d           pop r13
0x0000243b      415e           pop r14
0x0000243d      415f           pop r15
0x0000243f      c3             ret
0x00002440      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00002445      eb80           jmp 0x23c7
0x00002447      660f1f840000.  nop word [rax + rax]
0x00002450      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00002454      ebd7           jmp 0x242d
0x00002456      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00002460      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00002464      4154           push r12
0x00002466      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x0000246b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x0000246c      4989f4         mov r12, rsi
0x0000246f      53             push rbx
0x00002470      4889fd         mov rbp, rdi
0x00002473      744b           je 0x24c0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00002475      488d35443600.  lea rsi, str.ambiguous_argument__s_for__s ; 0x5ac0 ; "ambiguous argument %s for %s"
0x0000247c      31ff           xor edi, edi
0x0000247e      e85df1ffff     call sym.imp.dcgettext
0x00002483      4889c3         mov rbx, rax
0x00002486      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00002489      bf01000000     mov edi, 1
0x0000248e      e8cd200000     call sym.quote_n
0x00002493      4c89e2         mov rdx, r12
0x00002496      4889c5         mov rbp, rax
0x00002499      be08000000     mov esi, 8
0x0000249e      31ff           xor edi, edi
0x000024a0      e8eb1c0000     call sym.quotearg_n_style
0x000024a5      4989e8         mov r8, rbp
0x000024a8      4889da         mov rdx, rbx
0x000024ab      4889c1         mov rcx, rax
0x000024ae      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x000024af      5d             pop rbp
0x000024b0      415c           pop r12
0x000024b2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x000024b4      31ff           xor edi, edi
0x000024b6      31c0           xor eax, eax
0x000024b8      e9f3f2ffff     jmp sym.imp.error
0x000024bd      0f1f00         nop dword [rax]
0x000024c0      488d35de3500.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x5aa5 ; "invalid argument %s for %s"
0x000024c7      31ff           xor edi, edi
0x000024c9      e812f1ffff     call sym.imp.dcgettext
0x000024ce      4889c3         mov rbx, rax
0x000024d1      ebb3           jmp 0x2486
0x000024d3      0f1f00         nop dword [rax]
0x000024d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x000024e0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x000024e2      4156           push r14
0x000024e4      4989fe         mov r14, rdi
0x000024e7      4155           push r13
0x000024e9      4154           push r12
0x000024eb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x000024ed      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x000024ee      53             push rbx
0x000024ef      4889f5         mov rbp, rsi
0x000024f2      488d35e43500.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x5add ; "Valid arguments are:"
0x000024f9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x000024fc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00002501      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00002505      488b1dd45b20.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x0000250c      e8cff0ffff     call sym.imp.dcgettext
0x00002511      4889c7         mov rdi, rax
0x00002514      4889de         mov rsi, rbx
0x00002517      e8a4f1ffff     call sym.imp.fputs_unlocked
0x0000251c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000251f      4d85ff         test r15, r15
0x00002522      0f8490000000   je 0x25b8
0x00002528      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000252b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000252d      eb39           jmp 0x2568
0x0000252f      90             nop
0x00002530      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00002533      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00002537      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000253a      e841200000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000253f      488b3d9a5b20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002546      488d15a53500.  lea rdx, [0x00005af2]                   ; "\n  - %s"
0x0000254d      4889c1         mov rcx, rax
0x00002550      be01000000     mov esi, 1
0x00002555      31c0           xor eax, eax
0x00002557      4c01e5         add rbp, r12
0x0000255a      e8b1f2ffff     call sym.imp.__fprintf_chk
0x0000255f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00002563      4d85ff         test r15, r15
0x00002566      7450           je 0x25b8
0x00002568      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000256b      74c3           je 0x2530
0x0000256d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00002570      4889ee         mov rsi, rbp
0x00002573      4c89ef         mov rdi, r13
0x00002576      e835f1ffff     call sym.imp.memcmp
0x0000257b      85c0           test eax, eax
0x0000257d      75b1           jne 0x2530
0x0000257f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00002582      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00002586      4c01e5         add rbp, r12
0x00002589      e8f21f0000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000258e      488b3d4b5b20.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002595      488d155e3500.  lea rdx, str.s                          ; 0x5afa ; ", %s"
0x0000259c      4889c1         mov rcx, rax
0x0000259f      be01000000     mov esi, 1
0x000025a4      31c0           xor eax, eax
0x000025a6      e865f2ffff     call sym.imp.__fprintf_chk
0x000025ab      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000025af      4d85ff         test r15, r15
0x000025b2      75b4           jne 0x2568
0x000025b4      0f1f4000       nop dword [rax]
0x000025b8      488b3d215b20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x000025bf      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x000025c3      483b4730       cmp rax, qword [rdi + 0x30]
0x000025c7      731f           jae 0x25e8
0x000025c9      488d5001       lea rdx, [rax + 1]
0x000025cd      48895728       mov qword [rdi + 0x28], rdx
0x000025d1      c6000a         mov byte [rax], 0xa
0x000025d4      4883c408       add rsp, 8
0x000025d8      5b             pop rbx
0x000025d9      5d             pop rbp
0x000025da      415c           pop r12
0x000025dc      415d           pop r13
0x000025de      415e           pop r14
0x000025e0      415f           pop r15
0x000025e2      c3             ret
0x000025e3      0f1f440000     nop dword [rax + rax]
0x000025e8      4883c408       add rsp, 8
0x000025ec      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x000025f1      5b             pop rbx
0x000025f2      5d             pop rbp
0x000025f3      415c           pop r12
0x000025f5      415d           pop r13
0x000025f7      415e           pop r14
0x000025f9      415f           pop r15
0x000025fb      e940f0ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00002600      4157           push r15
0x00002602      4156           push r14
0x00002604      4989fe         mov r14, rdi
0x00002607      4155           push r13
0x00002609      4154           push r12
0x0000260b      4989f4         mov r12, rsi
0x0000260e      55             push rbp
0x0000260f      53             push rbx
0x00002610      4889cd         mov rbp, rcx
0x00002613      4889d3         mov rbx, rdx
0x00002616      4c89c1         mov rcx, r8
0x00002619      4889ea         mov rdx, rbp
0x0000261c      4883ec08       sub rsp, 8
0x00002620      4889de         mov rsi, rbx
0x00002623      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00002626      4d89c7         mov r15, r8
0x00002629      4d89cd         mov r13, r9
0x0000262c      e80ffdffff     call sym.argmatch
0x00002631      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00002634      780f           js 0x2645                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00002636      4883c408       add rsp, 8
0x0000263a      5b             pop rbx
0x0000263b      5d             pop rbp
0x0000263c      415c           pop r12
0x0000263e      415d           pop r13
0x00002640      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00002642      415f           pop r15
0x00002644      c3             ret
0x00002645      4889c2         mov rdx, rax
0x00002648      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000264b      4c89f7         mov rdi, r14
0x0000264e      e80dfeffff     call sym.argmatch_invalid
0x00002653      4c89fa         mov rdx, r15
0x00002656      4889ee         mov rsi, rbp
0x00002659      4889df         mov rdi, rbx
0x0000265c      e87ffeffff     call sym.argmatch_valid
0x00002661      41ffd5         call r13
0x00002664      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000266b      ebc9           jmp 0x2636
0x0000266d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00002670      4156           push r14
0x00002672      4155           push r13
0x00002674      4154           push r12
0x00002676      55             push rbp
0x00002677      53             push rbx
0x00002678      4c8b36         mov r14, qword [rsi]
0x0000267b      4d85f6         test r14, r14
0x0000267e      7431           je 0x26b1
0x00002680      4989cc         mov r12, rcx
0x00002683      4989fd         mov r13, rdi
0x00002686      4889d5         mov rbp, rdx
0x00002689      488d5e08       lea rbx, [rsi + 8]
0x0000268d      eb10           jmp 0x269f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000268f      90             nop
0x00002690      4c8b33         mov r14, qword [rbx]
0x00002693      4c01e5         add rbp, r12
0x00002696      4883c308       add rbx, 8
0x0000269a      4d85f6         test r14, r14
0x0000269d      7412           je 0x26b1
0x0000269f      4c89e2         mov rdx, r12
0x000026a2      4889ee         mov rsi, rbp
0x000026a5      4c89ef         mov rdi, r13
0x000026a8      e803f0ffff     call sym.imp.memcmp
0x000026ad      85c0           test eax, eax
0x000026af      75df           jne 0x2690
0x000026b1      5b             pop rbx
0x000026b2      4c89f0         mov rax, r14
0x000026b5      5d             pop rbp
0x000026b6      415c           pop r12
0x000026b8      415d           pop r13
0x000026ba      415e           pop r14
0x000026bc      c3             ret
0x000026bd      0f1f00         nop dword [rax]
;-- close_stdout_set_file_name:
0x000026c0      48893d395a20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208100:8]=0
0x000026c7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000026c8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000026d0      40883d215a20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2080f8:1]=0
0x000026d7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000026d8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000026e0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000026e1      53             push rbx
0x000026e2      4883ec08       sub rsp, 8
0x000026e6      488b3dbb5920.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000026ed      e89e2b0000     call sym.close_stream
0x000026f2      85c0           test eax, eax
0x000026f4      7416           je 0x270c
0x000026f6      e855eeffff     call sym.imp.__errno_location
0x000026fb      803df6592000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2080f8:1]=0
0x00002702      4889c3         mov rbx, rax
0x00002705      741c           je 0x2723
0x00002707      833820         cmp dword [rax], 0x20
0x0000270a      7517           jne 0x2723
0x0000270c      488b3dcd5920.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002713      e8782b0000     call sym.close_stream
0x00002718      85c0           test eax, eax
0x0000271a      7546           jne 0x2762
0x0000271c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00002720      5b             pop rbx
0x00002721      5d             pop rbp
0x00002722      c3             ret
0x00002723      488d35d53300.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x5aff ; "write error"
0x0000272a      31ff           xor edi, edi
0x0000272c      ba05000000     mov edx, 5
0x00002731      e8aaeeffff     call sym.imp.dcgettext
0x00002736      488b3dc35920.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208100:8]=0
0x0000273d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002740      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002743      7428           je 0x276d
0x00002745      e8361c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000274a      8b33           mov esi, dword [rbx]
0x0000274c      488d15b83300.  lea rdx, str.s:__s                      ; 0x5b0b ; "%s: %s"
0x00002753      4889c1         mov rcx, rax
0x00002756      4989e8         mov r8, rbp
0x00002759      31ff           xor edi, edi
0x0000275b      31c0           xor eax, eax
0x0000275d      e84ef0ffff     call sym.imp.error
0x00002762      8b3db8582000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208020:4]=1
0x00002768      e803eeffff     call sym.imp._exit
0x0000276d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000276f      488d15863300.  lea rdx, [0x00005afc]                   ; "%s"
0x00002776      4889c1         mov rcx, rax
0x00002779      31ff           xor edi, edi
0x0000277b      31c0           xor eax, eax
0x0000277d      e82ef0ffff     call sym.imp.error
0x00002782      ebde           jmp 0x2762
0x00002784      662e0f1f8400.  nop word cs:[rax + rax]
0x0000278e      6690           nop
;-- fdadvise:
0x00002790      e9fbeeffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002795      90             nop
0x00002796      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x000027a0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x000027a3      741b           je 0x27c0
0x000027a5      53             push rbx
0x000027a6      89f3           mov ebx, esi
0x000027a8      e853efffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x000027ad      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000027af      31d2           xor edx, edx
0x000027b1      31f6           xor esi, esi
0x000027b3      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x000027b4      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x000027b6      e9d5eeffff     jmp sym.imp.posix_fadvise
0x000027bb      0f1f440000     nop dword [rax + rax]
0x000027c0      f3c3           ret
0x000027c2      662e0f1f8400.  nop word cs:[rax + rax]
0x000027cc      0f1f4000       nop dword [rax]
;-- fopen_safer:
0x000027d0      4154           push r12                                ; ../coreutils-8.31/lib/fopen-safer.c:32
0x000027d2      55             push rbp
0x000027d3      4889f5         mov rbp, rsi
0x000027d6      53             push rbx
0x000027d7      e8f4efffff     call sym.imp.fopen                      ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000027dc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000027df      4889c3         mov rbx, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:33
0x000027e2      740d           je 0x27f1                               ; ../coreutils-8.31/lib/fopen-safer.c:35
0x000027e4      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/fopen-safer.c:37
0x000027e7      e814efffff     call sym.imp.fileno
0x000027ec      83f802         cmp eax, 2                              ; ../coreutils-8.31/lib/fopen-safer.c:39
0x000027ef      760f           jbe 0x2800
0x000027f1      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:63
0x000027f4      5b             pop rbx
0x000027f5      5d             pop rbp
0x000027f6      415c           pop r12
0x000027f8      c3             ret
0x000027f9      0f1f80000000.  nop dword [rax]
0x00002800      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fopen-safer.c:41
0x00002802      e8991d0000     call sym.dup_safer
0x00002807      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:43
0x00002809      4189c4         mov r12d, eax                           ; ../coreutils-8.31/lib/fopen-safer.c:41
0x0000280c      783a           js 0x2848                               ; ../coreutils-8.31/lib/fopen-safer.c:43
0x0000280e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:51
0x00002811      e84a260000     call sym.rpl_fclose
0x00002816      85c0           test eax, eax
0x00002818      7513           jne 0x282d
0x0000281a      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fopen-safer.c:52
0x0000281d      4489e7         mov edi, r12d
0x00002820      e84befffff     call sym.imp.fdopen
0x00002825      4885c0         test rax, rax
0x00002828      4889c3         mov rbx, rax
0x0000282b      75c4           jne 0x27f1
0x0000282d      e81eedffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:54
0x00002832      8b28           mov ebp, dword [rax]
0x00002834      4889c3         mov rbx, rax
0x00002837      4489e7         mov edi, r12d                           ; ../coreutils-8.31/lib/fopen-safer.c:55
0x0000283a      e841eeffff     call sym.imp.close
0x0000283f      892b           mov dword [rbx], ebp                    ; ../coreutils-8.31/lib/fopen-safer.c:56
0x00002841      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:57
0x00002843      ebac           jmp 0x27f1
0x00002845      0f1f00         nop dword [rax]
0x00002848      e803edffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fopen-safer.c:45
0x0000284d      448b20         mov r12d, dword [rax]
0x00002850      4889c5         mov rbp, rax
0x00002853      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fopen-safer.c:46
0x00002856      e805260000     call sym.rpl_fclose
0x0000285b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fopen-safer.c:48
0x0000285d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fopen-safer.c:47
0x00002861      eb8e           jmp 0x27f1                              ; ../coreutils-8.31/lib/fopen-safer.c:48
0x00002863      662e0f1f8400.  nop word cs:[rax + rax]
0x0000286d      0f1f00         nop dword [rax]
;-- set_program_name:
0x00002870      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002873      53             push rbx
0x00002874      7477           je 0x28ed                               ; ../coreutils-8.31/lib/progname.c:51
0x00002876      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000287b      4889fb         mov rbx, rdi
0x0000287e      e8cdedffff     call sym.imp.strrchr
0x00002883      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002886      7455           je 0x28dd
0x00002888      4c8d4001       lea r8, [rax + 1]
0x0000288c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000288f      4829da         sub rdx, rbx
0x00002892      4883fa06       cmp rdx, 6
0x00002896      7e45           jle 0x28dd
0x00002898      488d70fa       lea rsi, [rax - 6]
0x0000289c      488d3dad3200.  lea rdi, str..libs                      ; 0x5b50 ; "/.libs/"
0x000028a3      b907000000     mov ecx, 7
0x000028a8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028aa      0f97c2         seta dl
0x000028ad      80da00         sbb dl, 0
0x000028b0      84d2           test dl, dl
0x000028b2      7529           jne 0x28dd
0x000028b4      488d3d9d3200.  lea rdi, [0x00005b58]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000028bb      b903000000     mov ecx, 3
0x000028c0      4c89c6         mov rsi, r8
0x000028c3      4c89c3         mov rbx, r8
0x000028c6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000028c8      0f97c2         seta dl
0x000028cb      80da00         sbb dl, 0
0x000028ce      84d2           test dl, dl
0x000028d0      750b           jne 0x28dd
0x000028d2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x000028d6      48891dc35720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x000028dd      48891d245820.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208108:8]=0
0x000028e4      48891ddd5720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080c8:8]=0
0x000028eb      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000028ec      c3             ret
0x000028ed      488b0dec5720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x000028f4      488d3d1d3200.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5b18 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000028fb      ba37000000     mov edx, 0x37                           ; '7'
0x00002900      be01000000     mov esi, 1
0x00002905      e8f6eeffff     call sym.imp.fwrite
0x0000290a      e831ecffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000290f      90             nop
;-- gettext_quote.part.1:
0x00002910      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002911      53             push rbx
0x00002912      4889fd         mov rbp, rdi
0x00002915      89f3           mov ebx, esi
0x00002917      4883ec08       sub rsp, 8
0x0000291b      e8502a0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002920      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002923      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002926      80fa55         cmp dl, 0x55
0x00002929      7475           je 0x29a0
0x0000292b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000292e      7420           je 0x2950
0x00002930      488d05343200.  lea rax, str.l______l                   ; 0x5b6b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb\u24ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u64ff\uffd2\u6cff\uffd1\u2cff\uffd1\uf4ff\uffd2\ue4ff\uffd2\ud4ff\uffd2\uc4ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\ub4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u74ff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u07ff\uffd1\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ud7ff\uffd0\u0cff\uffd3\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\u7cff\uffd1\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u07ff\uffd0\ua4ff\uffd2\u07ff\uffd0\u74ff\uffd2\U010003d1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue8ff\uffd1\u38ff\uffd3\u20ff\uffd3\ud0ff\uffd1\u10ff\uffd3\ub8ff\uffd1\U010003d2\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue0ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\ub0ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u08ff\uffcf\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\U010003ce\u08ff\uffd1\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd1\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u08ff\uffce\uc8ff\uffd2\u08ff\uffce\ub0ff\uffd2\xff"
0x00002937      488d152f3200.  lea rdx, [0x00005b6d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x0000293e      83fb09         cmp ebx, 9
0x00002941      480f45c2       cmovne rax, rdx
0x00002945      4883c408       add rsp, 8
0x00002949      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000294a      5d             pop rbp
0x0000294b      c3             ret
0x0000294c      0f1f4000       nop dword [rax]
0x00002950      0fb65001       movzx edx, byte [rax + 1]
0x00002954      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002957      80fa42         cmp dl, 0x42
0x0000295a      75d4           jne 0x2930
0x0000295c      80780231       cmp byte [rax + 2], 0x31
0x00002960      75ce           jne 0x2930
0x00002962      80780338       cmp byte [rax + 3], 0x38
0x00002966      75c8           jne 0x2930
0x00002968      80780430       cmp byte [rax + 4], 0x30
0x0000296c      75c2           jne 0x2930
0x0000296e      80780533       cmp byte [rax + 5], 0x33
0x00002972      75bc           jne 0x2930
0x00002974      80780630       cmp byte [rax + 6], 0x30
0x00002978      75b6           jne 0x2930
0x0000297a      80780700       cmp byte [rax + 7], 0
0x0000297e      75b0           jne 0x2930
0x00002980      807d0060       cmp byte [rbp], 0x60
0x00002984      488d05d93100.  lea rax, [0x00005b64]
0x0000298b      488d15d63100.  lea rdx, [0x00005b68]
0x00002992      480f45c2       cmovne rax, rdx
0x00002996      4883c408       add rsp, 8
0x0000299a      5b             pop rbx
0x0000299b      5d             pop rbp
0x0000299c      c3             ret
0x0000299d      0f1f00         nop dword [rax]
0x000029a0      0fb65001       movzx edx, byte [rax + 1]
0x000029a4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029a7      80fa54         cmp dl, 0x54
0x000029aa      7584           jne 0x2930
0x000029ac      0fb65002       movzx edx, byte [rax + 2]
0x000029b0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000029b3      80fa46         cmp dl, 0x46
0x000029b6      0f8574ffffff   jne 0x2930
0x000029bc      8078032d       cmp byte [rax + 3], 0x2d
0x000029c0      0f856affffff   jne 0x2930
0x000029c6      80780438       cmp byte [rax + 4], 0x38
0x000029ca      0f8560ffffff   jne 0x2930
0x000029d0      80780500       cmp byte [rax + 5], 0
0x000029d4      0f8556ffffff   jne 0x2930
0x000029da      807d0060       cmp byte [rbp], 0x60
0x000029de      488d05773100.  lea rax, [0x00005b5c]                   ; "\u2018"
0x000029e5      488d15743100.  lea rdx, [0x00005b60]                   ; "\u2019"
0x000029ec      480f45c2       cmovne rax, rdx
0x000029f0      4883c408       add rsp, 8
0x000029f4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000029f5      5d             pop rbp
0x000029f6      c3             ret
0x000029f7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002a00      4157           push r15
0x00002a02      4156           push r14
0x00002a04      4589c7         mov r15d, r8d
0x00002a07      4155           push r13
0x00002a09      4154           push r12
0x00002a0b      4989fe         mov r14, rdi
0x00002a0e      55             push rbp
0x00002a0f      53             push rbx
0x00002a10      4489cb         mov ebx, r9d
0x00002a13      4989f5         mov r13, rsi
0x00002a16      4889cd         mov rbp, rcx
0x00002a19      83e302         and ebx, 2
0x00002a1c      4881ecb80000.  sub rsp, 0xb8
0x00002a23      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002a2b      4889542410     mov qword [rsp + 0x10], rdx
0x00002a30      4489442408     mov dword [rsp + 8], r8d
0x00002a35      44894c2478     mov dword [rsp + 0x78], r9d
0x00002a3a      4889442420     mov qword [rsp + 0x20], rax
0x00002a3f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002a47      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002a4c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002a54      4889442460     mov qword [rsp + 0x60], rax
0x00002a59      64488b042528.  mov rax, qword fs:[0x28]
0x00002a62      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002a6a      31c0           xor eax, eax
0x00002a6c      e87febffff     call sym.imp.__ctype_get_mb_cur_max
0x00002a71      4183ff0a       cmp r15d, 0xa
0x00002a75      4889442458     mov qword [rsp + 0x58], rax
0x00002a7a      0f87af110000   ja 0x3c2f
0x00002a80      488d0d393100.  lea rcx, [0x00005bc0]
0x00002a87      4489fa         mov edx, r15d
0x00002a8a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002a8e      4801c8         add rax, rcx
0x00002a91      ffe0           jmp rax
0x00002a93      c644240e01     mov byte [rsp + 0xe], 1
0x00002a98      c644247c00     mov byte [rsp + 0x7c], 0
0x00002a9d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002aa0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002aa9      c644240f01     mov byte [rsp + 0xf], 1
0x00002aae      c644240d00     mov byte [rsp + 0xd], 0
0x00002ab3      488d05b33000.  lea rax, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x00002aba      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ac3      4531ff         xor r15d, r15d
0x00002ac6      c74424080200.  mov dword [rsp + 8], 2
0x00002ace      4889442448     mov qword [rsp + 0x48], rax
0x00002ad3      4531db         xor r11d, r11d
0x00002ad6      4889e8         mov rax, rbp
0x00002ad9      4589e0         mov r8d, r12d
0x00002adc      4c89dd         mov rbp, r11
0x00002adf      4989c3         mov r11, rax
0x00002ae2      660f1f440000   nop word [rax + rax]
0x00002ae8      4939eb         cmp r11, rbp
0x00002aeb      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002aef      4983fbff       cmp r11, 0xffffffffffffffff
0x00002af3      750d           jne 0x2b02
0x00002af5      488b442410     mov rax, qword [rsp + 0x10]
0x00002afa      803c2800       cmp byte [rax + rbp], 0
0x00002afe      410f95c4       setne r12b
0x00002b02      4584e4         test r12b, r12b
0x00002b05      0f8455060000   je 0x3160
0x00002b0b      837c240802     cmp dword [rsp + 8], 2
0x00002b10      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002b15      4c8d0c2f       lea r9, [rdi + rbp]
0x00002b19      0f95c0         setne al
0x00002b1c      2244240d       and al, byte [rsp + 0xd]
0x00002b20      4189c2         mov r10d, eax
0x00002b23      0f84a7000000   je 0x2bd0
0x00002b29      488b442418     mov rax, qword [rsp + 0x18]
0x00002b2e      4885c0         test rax, rax
0x00002b31      0f8429040000   je 0x2f60
0x00002b37      4983fbff       cmp r11, 0xffffffffffffffff
0x00002b3b      488d5c0500     lea rbx, [rbp + rax]
0x00002b40      752e           jne 0x2b70
0x00002b42      4883f801       cmp rax, 1
0x00002b46      7628           jbe 0x2b70
0x00002b48      4488442438     mov byte [rsp + 0x38], r8b
0x00002b4d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002b52      4c894c2428     mov qword [rsp + 0x28], r9
0x00002b57      e8a4eaffff     call sym.imp.strlen
0x00002b5c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002b62      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002b68      4989c3         mov r11, rax
0x00002b6b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002b70      4c39db         cmp rbx, r11
0x00002b73      4488542428     mov byte [rsp + 0x28], r10b
0x00002b78      0f87b2050000   ja 0x3130
0x00002b7e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002b83      488b742448     mov rsi, qword [rsp + 0x48]
0x00002b88      4c89cf         mov rdi, r9
0x00002b8b      4c895c2440     mov qword [rsp + 0x40], r11
0x00002b90      4488442438     mov byte [rsp + 0x38], r8b
0x00002b95      4c894c2430     mov qword [rsp + 0x30], r9
0x00002b9a      e811ebffff     call sym.imp.memcmp
0x00002b9f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002ba1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002ba6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002bac      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002bb1      0f8579050000   jne 0x3130
0x00002bb7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002bbc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002bc2      0f857d0f0000   jne 0x3b45
0x00002bc8      0f1f84000000.  nop dword [rax + rax]
0x00002bd0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002bd4      80fb7e         cmp bl, 0x7e
0x00002bd7      0f871b030000   ja 0x2ef8
0x00002bdd      488d0d083000.  lea rcx, [0x00005bec]
0x00002be4      0fb6d3         movzx edx, bl
0x00002be7      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002beb      4801c8         add rax, rcx
0x00002bee      ffe0           jmp rax
0x00002bf0      4531d2         xor r10d, r10d
0x00002bf3      4983fb01       cmp r11, 1
0x00002bf7      0f95c0         setne al
0x00002bfa      4983fbff       cmp r11, 0xffffffffffffffff
0x00002bfe      750c           jne 0x2c0c
0x00002c00      488b442410     mov rax, qword [rsp + 0x10]
0x00002c05      80780100       cmp byte [rax + 1], 0
0x00002c09      0f95c0         setne al
0x00002c0c      837c240802     cmp dword [rsp + 8], 2
0x00002c11      0f94c2         sete dl
0x00002c14      84c0           test al, al
0x00002c16      0f844c020000   je 0x2e68
0x00002c1c      4531e4         xor r12d, r12d
0x00002c1f      31c0           xor eax, eax
0x00002c21      0f1f80000000.  nop dword [rax]
0x00002c28      807c240d01     cmp byte [rsp + 0xd], 1
0x00002c2d      0f850f010000   jne 0x2d42
0x00002c33      84d2           test dl, dl
0x00002c35      0f8507010000   jne 0x2d42
0x00002c3b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002c40      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002c43      7414           je 0x2c59
0x00002c45      89da           mov edx, ebx
0x00002c47      c0ea05         shr dl, 5
0x00002c4a      0fb6d2         movzx edx, dl
0x00002c4d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002c50      0fa3da         bt edx, ebx
0x00002c53      0f824a010000   jb 0x2da3
0x00002c59      4584d2         test r10b, r10b
0x00002c5c      0f8541010000   jne 0x2da3
0x00002c62      83f001         xor eax, 1
0x00002c65      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c69      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002c6c      84c0           test al, al
0x00002c6e      7420           je 0x2c90                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002c70      4d39fd         cmp r13, r15
0x00002c73      7605           jbe 0x2c7a
0x00002c75      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002c7a      498d4701       lea rax, [r15 + 1]
0x00002c7e      4939c5         cmp r13, rax
0x00002c81      7606           jbe 0x2c89
0x00002c83      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002c89      4983c702       add r15, 2
0x00002c8d      4531c0         xor r8d, r8d
0x00002c90      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002c93      7304           jae 0x2c99                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002c95      43881c3e       mov byte [r14 + r15], bl
0x00002c99      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002c9e      4983c701       add r15, 1
0x00002ca2      b800000000     mov eax, 0
0x00002ca7      4584e4         test r12b, r12b
0x00002caa      0f44f8         cmove edi, eax
0x00002cad      40887c240e     mov byte [rsp + 0xe], dil
0x00002cb2      e931feffff     jmp 0x2ae8
0x00002cb7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002cc0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002cc3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002cc7      83f802         cmp eax, 2
0x00002cca      0f84b8050000   je 0x3288
0x00002cd0      83f805         cmp eax, 5
0x00002cd3      0f846f050000   je 0x3248
0x00002cd9      83f802         cmp eax, 2
0x00002cdc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002ce1      0f94c2         sete dl
0x00002ce4      4531e4         xor r12d, r12d
0x00002ce7      31c0           xor eax, eax
0x00002ce9      e93affffff     jmp 0x2c28
0x00002cee      6690           nop
0x00002cf0      4531d2         xor r10d, r10d
0x00002cf3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002cf8      0f8402050000   je 0x3200
0x00002cfe      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002d03      31d2           xor edx, edx
0x00002d05      31c0           xor eax, eax
0x00002d07      bb27000000     mov ebx, 0x27                           ; '''
0x00002d0c      e917ffffff     jmp 0x2c28
0x00002d11      0f1f80000000.  nop dword [rax]
0x00002d18      ba09000000     mov edx, 9
0x00002d1d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002d22      837c240802     cmp dword [rsp + 8], 2
0x00002d27      0f94c0         sete al
0x00002d2a      2244240f       and al, byte [rsp + 0xf]
0x00002d2e      0f854a010000   jne 0x2e7e
0x00002d34      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d39      7565           jne 0x2da0
0x00002d3b      89d3           mov ebx, edx
0x00002d3d      4531e4         xor r12d, r12d
0x00002d40      31c0           xor eax, eax
0x00002d42      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d47      0f85eefeffff   jne 0x2c3b
0x00002d4d      e907ffffff     jmp 0x2c59                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002d52      660f1f440000   nop word [rax + rax]
0x00002d58      ba08000000     mov edx, 8
0x00002d5d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002d62      ebd0           jmp 0x2d34
0x00002d64      0f1f4000       nop dword [rax]
0x00002d68      837c240802     cmp dword [rsp + 8], 2
0x00002d6d      0f84cd030000   je 0x3140
0x00002d73      807c240d00     cmp byte [rsp + 0xd], 0
0x00002d78      0f8412020000   je 0x2f90
0x00002d7e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002d83      0f8407020000   je 0x2f90
0x00002d89      48837c241800   cmp qword [rsp + 0x18], 0
0x00002d8f      0f85b6030000   jne 0x314b
0x00002d95      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002d9a      660f1f440000   nop word [rax + rax]
0x00002da0      4531e4         xor r12d, r12d
0x00002da3      837c240802     cmp dword [rsp + 8], 2
0x00002da8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002dab      807c240f00     cmp byte [rsp + 0xf], 0
0x00002db0      89d0           mov eax, edx
0x00002db2      0f8550080000   jne 0x3608
0x00002db8      4489c0         mov eax, r8d
0x00002dbb      83f001         xor eax, 1
0x00002dbe      20d0           and al, dl
0x00002dc0      742f           je 0x2df1
0x00002dc2      4d39fd         cmp r13, r15
0x00002dc5      7605           jbe 0x2dcc
0x00002dc7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002dcc      498d5701       lea rdx, [r15 + 1]
0x00002dd0      4939d5         cmp r13, rdx
0x00002dd3      7606           jbe 0x2ddb
0x00002dd5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002ddb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002ddf      4939d5         cmp r13, rdx
0x00002de2      7606           jbe 0x2dea
0x00002de4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002dea      4983c703       add r15, 3
0x00002dee      4189c0         mov r8d, eax
0x00002df1      4d39fd         cmp r13, r15
0x00002df4      7605           jbe 0x2dfb
0x00002df6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00002dfb      4983c701       add r15, 1
0x00002dff      4883c501       add rbp, 1
0x00002e03      e988feffff     jmp 0x2c90
0x00002e08      0f1f84000000.  nop dword [rax + rax]
0x00002e10      807c240d00     cmp byte [rsp + 0xd], 0
0x00002e15      0f85c8010000   jne 0x2fe3
0x00002e1b      31d2           xor edx, edx
0x00002e1d      f644247801     test byte [rsp + 0x78], 1
0x00002e22      0f8413ffffff   je 0x2d3b
0x00002e28      4883c501       add rbp, 1
0x00002e2c      e9b7fcffff     jmp 0x2ae8
0x00002e31      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00002e38      837c240802     cmp dword [rsp + 8], 2
0x00002e3d      0f94c2         sete dl
0x00002e40      31c0           xor eax, eax
0x00002e42      e9e1fdffff     jmp 0x2c28
0x00002e47      660f1f840000.  nop word [rax + rax]
0x00002e50      ba07000000     mov edx, 7
0x00002e55      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002e5a      e9d5feffff     jmp 0x2d34
0x00002e5f      90             nop
0x00002e60      837c240802     cmp dword [rsp + 8], 2
0x00002e65      0f94c2         sete dl
0x00002e68      4885ed         test rbp, rbp
0x00002e6b      0f85abfdffff   jne 0x2c1c
0x00002e71      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002e76      20d0           and al, dl
0x00002e78      0f84aafdffff   je 0x2c28
0x00002e7e      4c89dd         mov rbp, r11
0x00002e81      c74424080200.  mov dword [rsp + 8], 2
0x00002e89      e9fb060000     jmp 0x3589
0x00002e8e      6690           nop
0x00002e90      837c240802     cmp dword [rsp + 8], 2
0x00002e95      0f94c2         sete dl
0x00002e98      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00002e9b      ebd4           jmp 0x2e71
0x00002e9d      0f1f00         nop dword [rax]
0x00002ea0      837c240802     cmp dword [rsp + 8], 2
0x00002ea5      bb20000000     mov ebx, 0x20                           ; "@"
0x00002eaa      0f94c2         sete dl
0x00002ead      ebc2           jmp 0x2e71
0x00002eaf      90             nop
0x00002eb0      ba0d000000     mov edx, 0xd
0x00002eb5      bb72000000     mov ebx, 0x72                           ; 'r'
0x00002eba      e963feffff     jmp 0x2d22
0x00002ebf      90             nop
0x00002ec0      ba0c000000     mov edx, 0xc
0x00002ec5      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002eca      e965feffff     jmp 0x2d34
0x00002ecf      90             nop
0x00002ed0      ba0b000000     mov edx, 0xb
0x00002ed5      bb76000000     mov ebx, 0x76                           ; 'v'
0x00002eda      e955feffff     jmp 0x2d34
0x00002edf      90             nop
0x00002ee0      ba0a000000     mov edx, 0xa
0x00002ee5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00002eea      e933feffff     jmp 0x2d22
0x00002eef      90             nop
0x00002ef0      4531d2         xor r10d, r10d
0x00002ef3      0f1f440000     nop dword [rax + rax]
0x00002ef8      48837c245801   cmp qword [rsp + 0x58], 1
0x00002efe      0f85a4030000   jne 0x32a8
0x00002f04      4c895c2438     mov qword [rsp + 0x38], r11
0x00002f09      4488442430     mov byte [rsp + 0x30], r8b
0x00002f0e      4488542428     mov byte [rsp + 0x28], r10b
0x00002f13      e828e9ffff     call sym.imp.__ctype_b_loc
0x00002f18      488b08         mov rcx, qword [rax]
0x00002f1b      0fb6d3         movzx edx, bl
0x00002f1e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002f24      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00002f2a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00002f2f      bf01000000     mov edi, 1
0x00002f34      0fb70451       movzx eax, word [rcx + rdx*2]
0x00002f38      66250040       and ax, 0x4000
0x00002f3c      410f95c4       setne r12b
0x00002f40      0f94c0         sete al
0x00002f43      2244240d       and al, byte [rsp + 0xd]
0x00002f47      84c0           test al, al
0x00002f49      0f8592090000   jne 0x38e1
0x00002f4f      837c240802     cmp dword [rsp + 8], 2
0x00002f54      0f94c2         sete dl
0x00002f57      e9ccfcffff     jmp 0x2c28
0x00002f5c      0f1f4000       nop dword [rax]
0x00002f60      410fb619       movzx ebx, byte [r9]
0x00002f64      80fb7e         cmp bl, 0x7e
0x00002f67      7787           ja 0x2ef0
0x00002f69      488d0d782e00.  lea rcx, [0x00005de8]
0x00002f70      0fb6d3         movzx edx, bl
0x00002f73      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002f77      4801c8         add rax, rcx
0x00002f7a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00002f7c      0f1f4000       nop dword [rax]
0x00002f80      4531d2         xor r10d, r10d
0x00002f83      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f88      0f85f0fdffff   jne 0x2d7e
0x00002f8e      6690           nop
0x00002f90      ba5c000000     mov edx, 0x5c                           ; '\'
0x00002f95      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002f9a      e995fdffff     jmp 0x2d34
0x00002f9f      90             nop
0x00002fa0      ba0c000000     mov edx, 0xc
0x00002fa5      4531d2         xor r10d, r10d
0x00002fa8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00002fad      e982fdffff     jmp 0x2d34
0x00002fb2      660f1f440000   nop word [rax + rax]
0x00002fb8      ba0a000000     mov edx, 0xa
0x00002fbd      4531d2         xor r10d, r10d
0x00002fc0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00002fc5      e958fdffff     jmp 0x2d22
0x00002fca      660f1f440000   nop word [rax + rax]
0x00002fd0      bb61000000     mov ebx, 0x61                           ; 'a'
0x00002fd5      e9c6fdffff     jmp 0x2da0
0x00002fda      660f1f440000   nop word [rax + rax]
0x00002fe0      4531d2         xor r10d, r10d
0x00002fe3      837c240802     cmp dword [rsp + 8], 2
0x00002fe8      0f94c2         sete dl
0x00002feb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ff0      0f85940b0000   jne 0x3b8a
0x00002ff6      4489c0         mov eax, r8d
0x00002ff9      4c89f9         mov rcx, r15
0x00002ffc      83f001         xor eax, 1
0x00002fff      20d0           and al, dl
0x00003001      742d           je 0x3030
0x00003003      4d39fd         cmp r13, r15
0x00003006      7605           jbe 0x300d
0x00003008      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000300d      498d4f01       lea rcx, [r15 + 1]
0x00003011      4939cd         cmp r13, rcx
0x00003014      7606           jbe 0x301c
0x00003016      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000301c      498d4f02       lea rcx, [r15 + 2]
0x00003020      4939cd         cmp r13, rcx
0x00003023      0f8730060000   ja 0x3659
0x00003029      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000302d      4189c0         mov r8d, eax
0x00003030      4939cd         cmp r13, rcx
0x00003033      7605           jbe 0x303a
0x00003035      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000303a      837c240802     cmp dword [rsp + 8], 2
0x0000303f      4c8d7901       lea r15, [rcx + 1]
0x00003043      0f8400060000   je 0x3649
0x00003049      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000304d      4c39d8         cmp rax, r11
0x00003050      7319           jae 0x306b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003052      488b442410     mov rax, qword [rsp + 0x10]
0x00003057      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000305c      88442428       mov byte [rsp + 0x28], al
0x00003060      83e830         sub eax, 0x30
0x00003063      3c09           cmp al, 9
0x00003065      0f862e080000   jbe 0x3899
0x0000306b      4489e0         mov eax, r12d
0x0000306e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003073      4531e4         xor r12d, r12d
0x00003076      e9adfbffff     jmp 0x2c28                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000307b      0f1f440000     nop dword [rax + rax]
0x00003080      837c240802     cmp dword [rsp + 8], 2
0x00003085      4589d4         mov r12d, r10d
0x00003088      0f94c2         sete dl
0x0000308b      4531d2         xor r10d, r10d
0x0000308e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003090      e993fbffff     jmp 0x2c28                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003095      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003098      837c240802     cmp dword [rsp + 8], 2
0x0000309d      0f94c2         sete dl
0x000030a0      4531d2         xor r10d, r10d
0x000030a3      e9c0fdffff     jmp 0x2e68
0x000030a8      0f1f84000000.  nop dword [rax + rax]
0x000030b0      837c240802     cmp dword [rsp + 8], 2
0x000030b5      0f94c2         sete dl
0x000030b8      4531d2         xor r10d, r10d
0x000030bb      4531e4         xor r12d, r12d
0x000030be      e9aefdffff     jmp 0x2e71
0x000030c3      0f1f440000     nop dword [rax + rax]
0x000030c8      837c240802     cmp dword [rsp + 8], 2
0x000030cd      4589d4         mov r12d, r10d
0x000030d0      bb20000000     mov ebx, 0x20                           ; "@"
0x000030d5      0f94c2         sete dl
0x000030d8      4531d2         xor r10d, r10d
0x000030db      e991fdffff     jmp 0x2e71
0x000030e0      ba0d000000     mov edx, 0xd
0x000030e5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000030e8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000030ed      e930fcffff     jmp 0x2d22
0x000030f2      660f1f440000   nop word [rax + rax]
0x000030f8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000030fd      e99efcffff     jmp 0x2da0
0x00003102      660f1f440000   nop word [rax + rax]
0x00003108      ba09000000     mov edx, 9
0x0000310d      4531d2         xor r10d, r10d
0x00003110      bb74000000     mov ebx, 0x74                           ; 't'
0x00003115      e908fcffff     jmp 0x2d22
0x0000311a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003120      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003125      e976fcffff     jmp 0x2da0
0x0000312a      660f1f440000   nop word [rax + rax]
0x00003130      4531d2         xor r10d, r10d
0x00003133      e998faffff     jmp 0x2bd0
0x00003138      0f1f84000000.  nop dword [rax + rax]
0x00003140      807c240f00     cmp byte [rsp + 0xf], 0
0x00003145      0f8565090000   jne 0x3ab0
0x0000314b      4883c501       add rbp, 1
0x0000314f      4489c0         mov eax, r8d
0x00003152      4531e4         xor r12d, r12d
0x00003155      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000315a      e90dfbffff     jmp 0x2c6c
0x0000315f      90             nop
0x00003160      837c240802     cmp dword [rsp + 8], 2
0x00003165      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000316a      4589c4         mov r12d, r8d
0x0000316d      4c89dd         mov rbp, r11
0x00003170      0f94c2         sete dl
0x00003173      89d8           mov eax, ebx
0x00003175      4d85ff         test r15, r15
0x00003178      0f94c1         sete cl
0x0000317b      21d0           and eax, edx
0x0000317d      20c8           and al, cl
0x0000317f      0f85610a0000   jne 0x3be6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003185      89d8           mov eax, ebx
0x00003187      83f001         xor eax, 1
0x0000318a      20c2           and dl, al
0x0000318c      0f846a090000   je 0x3afc
0x00003192      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003197      0f845d090000   je 0x3afa
0x0000319d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000031a2      0f85f5090000   jne 0x3b9d
0x000031a8      4d85ed         test r13, r13
0x000031ab      0f94c0         sete al
0x000031ae      48837c245000   cmp qword [rsp + 0x50], 0
0x000031b4      0f95c2         setne dl
0x000031b7      20d0           and al, dl
0x000031b9      0f841d0a0000   je 0x3bdc
0x000031bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000031c4      488d1da22900.  lea rbx, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x000031cb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000031cf      c74424080200.  mov dword [rsp + 8], 2
0x000031d7      41bf01000000   mov r15d, 1
0x000031dd      48c744241801.  mov qword [rsp + 0x18], 1
0x000031e6      c644240f00     mov byte [rsp + 0xf], 0
0x000031eb      48895c2448     mov qword [rsp + 0x48], rbx
0x000031f0      8844247c       mov byte [rsp + 0x7c], al
0x000031f4      e9daf8ffff     jmp 0x2ad3
0x000031f9      0f1f80000000.  nop dword [rax]
0x00003200      807c240f00     cmp byte [rsp + 0xf], 0
0x00003205      0f85a5080000   jne 0x3ab0
0x0000320b      4d85ed         test r13, r13
0x0000320e      0f84fc030000   je 0x3610                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003214      31d2           xor edx, edx
0x00003216      48837c245000   cmp qword [rsp + 0x50], 0
0x0000321c      0f85ee030000   jne 0x3610                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003222      4c896c2450     mov qword [rsp + 0x50], r13
0x00003227      4983c703       add r15, 3
0x0000322b      31c0           xor eax, eax
0x0000322d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003232      4531c0         xor r8d, r8d
0x00003235      4989d5         mov r13, rdx
0x00003238      bb27000000     mov ebx, 0x27                           ; '''
0x0000323d      e917faffff     jmp 0x2c59
0x00003242      660f1f440000   nop word [rax + rax]
0x00003248      f644247804     test byte [rsp + 0x78], 4
0x0000324d      7421           je 0x3270
0x0000324f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003253      4c39d9         cmp rcx, r11
0x00003256      7318           jae 0x3270
0x00003258      488b442410     mov rax, qword [rsp + 0x10]
0x0000325d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003262      0f848a070000   je 0x39f2
0x00003268      0f1f84000000.  nop dword [rax + rax]
0x00003270      31d2           xor edx, edx
0x00003272      4531e4         xor r12d, r12d
0x00003275      31c0           xor eax, eax
0x00003277      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000327c      e9a7f9ffff     jmp 0x2c28
0x00003281      0f1f80000000.  nop dword [rax]
0x00003288      807c240f00     cmp byte [rsp + 0xf], 0
0x0000328d      0f851d080000   jne 0x3ab0
0x00003293      4531e4         xor r12d, r12d
0x00003296      31c0           xor eax, eax
0x00003298      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000329d      e9b7f9ffff     jmp 0x2c59                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000032a2      660f1f440000   nop word [rax + rax]
0x000032a8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000032b0      4983fbff       cmp r11, 0xffffffffffffffff
0x000032b4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000032c0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000032c5      752d           jne 0x32f4
0x000032c7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000032cc      4488442440     mov byte [rsp + 0x40], r8b
0x000032d1      4488542438     mov byte [rsp + 0x38], r10b
0x000032d6      4c894c2430     mov qword [rsp + 0x30], r9
0x000032db      e820e3ffff     call sym.imp.strlen
0x000032e0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x000032e6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x000032ec      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x000032ef      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000032f4      488d84249c00.  lea rax, [rsp + 0x9c]
0x000032fc      31c9           xor ecx, ecx
0x000032fe      885c247e       mov byte [rsp + 0x7e], bl
0x00003302      448844247d     mov byte [rsp + 0x7d], r8b
0x00003307      4889cb         mov rbx, rcx
0x0000330a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003312      4889442438     mov qword [rsp + 0x38], rax
0x00003317      448854247f     mov byte [rsp + 0x7f], r10b
0x0000331c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003324      4c89742440     mov qword [rsp + 0x40], r14
0x00003329      4c896c2470     mov qword [rsp + 0x70], r13
0x0000332e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003333      488b442410     mov rax, qword [rsp + 0x10]
0x00003338      4c8d741d00     lea r14, [rbp + rbx]
0x0000333d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003342      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003347      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000334c      4e8d2c30       lea r13, [rax + r14]
0x00003350      4c29f2         sub rdx, r14
0x00003353      4c89ee         mov rsi, r13
0x00003356      e8a51e0000     call sym.rpl_mbrtowc
0x0000335b      4885c0         test rax, rax
0x0000335e      4989c7         mov r15, rax
0x00003361      744e           je 0x33b1
0x00003363      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003367      0f8418060000   je 0x3985
0x0000336d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003371      0f849a050000   je 0x3911
0x00003377      837c240802     cmp dword [rsp + 8], 2
0x0000337c      0f94c0         sete al
0x0000337f      2244240f       and al, byte [rsp + 0xf]
0x00003383      0f8597010000   jne 0x3520
0x00003389      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003390      e89be4ffff     call sym.imp.iswprint
0x00003395      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000339a      85c0           test eax, eax
0x0000339c      b800000000     mov eax, 0
0x000033a1      440f44e0       cmove r12d, eax
0x000033a5      4c01fb         add rbx, r15
0x000033a8      e873e4ffff     call sym.imp.mbsinit
0x000033ad      85c0           test eax, eax
0x000033af      7482           je 0x3333
0x000033b1      4489e2         mov edx, r12d
0x000033b4      4889df         mov rdi, rbx
0x000033b7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000033bd      83f201         xor edx, 1
0x000033c0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000033c5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000033cb      2254240d       and dl, byte [rsp + 0xd]
0x000033cf      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000033d7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000033dc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000033e1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000033e6      4883ff01       cmp rdi, 1
0x000033ea      0f86fb050000   jbe 0x39eb
0x000033f0      4889f9         mov rcx, rdi
0x000033f3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x000033f5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x000033fb      4801e9         add rcx, rbp
0x000033fe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003403      e9b6000000     jmp 0x34be
0x00003408      0f1f84000000.  nop dword [rax + rax]
0x00003410      837c240802     cmp dword [rsp + 8], 2
0x00003415      0f94c0         sete al
0x00003418      4584c9         test r9b, r9b
0x0000341b      0f85af040000   jne 0x38d0
0x00003421      4489c6         mov esi, r8d
0x00003424      83f601         xor esi, 1
0x00003427      4020f0         and al, sil
0x0000342a      742f           je 0x345b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000342c      4d39fd         cmp r13, r15
0x0000342f      7605           jbe 0x3436
0x00003431      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003436      498d7701       lea rsi, [r15 + 1]
0x0000343a      4939f5         cmp r13, rsi
0x0000343d      7606           jbe 0x3445                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000343f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003445      498d7702       lea rsi, [r15 + 2]
0x00003449      4939f5         cmp r13, rsi
0x0000344c      7606           jbe 0x3454
0x0000344e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003454      4983c703       add r15, 3
0x00003458      4189c0         mov r8d, eax
0x0000345b      4d39fd         cmp r13, r15
0x0000345e      7605           jbe 0x3465
0x00003460      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003465      498d4701       lea rax, [r15 + 1]
0x00003469      4939c5         cmp r13, rax
0x0000346c      760d           jbe 0x347b
0x0000346e      89d8           mov eax, ebx
0x00003470      c0e806         shr al, 6
0x00003473      83c030         add eax, 0x30
0x00003476      4388443e01     mov byte [r14 + r15 + 1], al
0x0000347b      498d4702       lea rax, [r15 + 2]
0x0000347f      4939c5         cmp r13, rax
0x00003482      7610           jbe 0x3494
0x00003484      89d8           mov eax, ebx
0x00003486      c0e803         shr al, 3
0x00003489      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000348c      83c030         add eax, 0x30
0x0000348f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003494      83e307         and ebx, 7
0x00003497      4883c501       add rbp, 1
0x0000349b      4983c703       add r15, 3
0x0000349f      83c330         add ebx, 0x30
0x000034a2      4839cd         cmp rbp, rcx
0x000034a5      0f83e5f7ffff   jae 0x2c90
0x000034ab      89d6           mov esi, edx
0x000034ad      4d39fd         cmp r13, r15
0x000034b0      7604           jbe 0x34b6
0x000034b2      43881c3e       mov byte [r14 + r15], bl
0x000034b6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000034ba      4983c701       add r15, 1
0x000034be      84d2           test dl, dl
0x000034c0      0f854affffff   jne 0x3410
0x000034c6      89f0           mov eax, esi
0x000034c8      83f001         xor eax, 1
0x000034cb      4421c0         and eax, r8d
0x000034ce      4584d2         test r10b, r10b
0x000034d1      740e           je 0x34e1
0x000034d3      4d39fd         cmp r13, r15
0x000034d6      7605           jbe 0x34dd
0x000034d8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000034dd      4983c701       add r15, 1
0x000034e1      4883c501       add rbp, 1
0x000034e5      4839cd         cmp rbp, rcx
0x000034e8      0f837ef7ffff   jae 0x2c6c
0x000034ee      84c0           test al, al
0x000034f0      0f84f8030000   je 0x38ee
0x000034f6      4d39fd         cmp r13, r15
0x000034f9      7605           jbe 0x3500
0x000034fb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003500      498d4701       lea rax, [r15 + 1]
0x00003504      4939c5         cmp r13, rax
0x00003507      7606           jbe 0x350f
0x00003509      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000350f      4983c702       add r15, 2
0x00003513      4531d2         xor r10d, r10d
0x00003516      4531c0         xor r8d, r8d
0x00003519      eb92           jmp 0x34ad
0x0000351b      0f1f440000     nop dword [rax + rax]
0x00003520      4983ff01       cmp r15, 1
0x00003524      0f845ffeffff   je 0x3389
0x0000352a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000352f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003533      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003538      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000353c      eb0f           jmp 0x354d
0x0000353e      6690           nop
0x00003540      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003544      4939d0         cmp r8, rdx
0x00003547      0f843cfeffff   je 0x3389
0x0000354d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003550      83e95b         sub ecx, 0x5b
0x00003553      80f921         cmp cl, 0x21
0x00003556      77e8           ja 0x3540                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003558      be01000000     mov esi, 1
0x0000355d      48d3e6         shl rsi, cl
0x00003560      4889f1         mov rcx, rsi
0x00003563      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000356d      4885f1         test rcx, rsi
0x00003570      74ce           je 0x3540
0x00003572      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003577      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000357c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003581      c74424080200.  mov dword [rsp + 8], 2
0x00003589      807c240d00     cmp byte [rsp + 0xd], 0
0x0000358e      7410           je 0x35a0
0x00003590      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003592      b804000000     mov eax, 4
0x00003597      0f44442408     cmove eax, dword [rsp + 8]
0x0000359c      89442408       mov dword [rsp + 8], eax
0x000035a0      4883ec08       sub rsp, 8
0x000035a4      4889e9         mov rcx, rbp
0x000035a7      4c89ee         mov rsi, r13
0x000035aa      ff742468       push qword [rsp + 0x68]
0x000035ae      ff742478       push qword [rsp + 0x78]
0x000035b2      4c89f7         mov rdi, r14
0x000035b5      6a00           push 0
0x000035b7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000035bf      448b442428     mov r8d, dword [rsp + 0x28]
0x000035c4      488b542430     mov rdx, qword [rsp + 0x30]
0x000035c9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000035cd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000035d2      4883c420       add rsp, 0x20
0x000035d6      4989c7         mov r15, rax
0x000035d9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x000035e1      6448331c2528.  xor rbx, qword fs:[0x28]
0x000035ea      4c89f8         mov rax, r15
0x000035ed      0f8500060000   jne 0x3bf3
0x000035f3      4881c4b80000.  add rsp, 0xb8
0x000035fa      5b             pop rbx
0x000035fb      5d             pop rbp
0x000035fc      415c           pop r12
0x000035fe      415d           pop r13
0x00003600      415e           pop r14
0x00003602      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003604      c3             ret
0x00003605      0f1f00         nop dword [rax]
0x00003608      4c89dd         mov rbp, r11
0x0000360b      e979ffffff     jmp 0x3589
0x00003610      4d39fd         cmp r13, r15
0x00003613      7605           jbe 0x361a
0x00003615      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000361a      498d4701       lea rax, [r15 + 1]
0x0000361e      4939c5         cmp r13, rax
0x00003621      7606           jbe 0x3629
0x00003623      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003629      498d4702       lea rax, [r15 + 2]
0x0000362d      4939c5         cmp r13, rax
0x00003630      0f86ec050000   jbe 0x3c22
0x00003636      4c89ea         mov rdx, r13
0x00003639      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000363f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003644      e9d9fbffff     jmp 0x3222
0x00003649      4489e0         mov eax, r12d
0x0000364c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003651      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003654      e900f6ffff     jmp 0x2c59                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003659      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000365f      e9c5f9ffff     jmp 0x3029
0x00003664      85db           test ebx, ebx
0x00003666      0f8527f4ffff   jne 0x2a93
0x0000366c      c644240d01     mov byte [rsp + 0xd], 1
0x00003671      4d85ed         test r13, r13
0x00003674      0f8590050000   jne 0x3c0a
0x0000367a      488d05ec2400.  lea rax, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x00003681      48c744245000.  mov qword [rsp + 0x50], 0
0x0000368a      c644240e01     mov byte [rsp + 0xe], 1
0x0000368f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003694      4531e4         xor r12d, r12d
0x00003697      c644240f00     mov byte [rsp + 0xf], 0
0x0000369c      48c744241801.  mov qword [rsp + 0x18], 1
0x000036a5      4889442448     mov qword [rsp + 0x48], rax
0x000036aa      41bf01000000   mov r15d, 1
0x000036b0      c74424080200.  mov dword [rsp + 8], 2
0x000036b8      e916f4ffff     jmp 0x2ad3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000036bd      0f1f00         nop dword [rax]
0x000036c0      85db           test ebx, ebx
0x000036c2      0f85f5030000   jne 0x3abd
0x000036c8      4d85ed         test r13, r13
0x000036cb      0f8425020000   je 0x38f6
0x000036d1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000036d5      c644240e01     mov byte [rsp + 0xe], 1
0x000036da      4531e4         xor r12d, r12d
0x000036dd      c644247c00     mov byte [rsp + 0x7c], 0
0x000036e2      48c744245000.  mov qword [rsp + 0x50], 0
0x000036eb      488d05792400.  lea rax, str.l______l                   ; 0x5b6b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb\u24ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u64ff\uffd2\u6cff\uffd1\u2cff\uffd1\uf4ff\uffd2\ue4ff\uffd2\ud4ff\uffd2\uc4ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\ub4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u74ff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u07ff\uffd1\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ud7ff\uffd0\u0cff\uffd3\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\u7cff\uffd1\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u07ff\uffd0\ua4ff\uffd2\u07ff\uffd0\u74ff\uffd2\U010003d1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue8ff\uffd1\u38ff\uffd3\u20ff\uffd3\ud0ff\uffd1\u10ff\uffd3\ub8ff\uffd1\U010003d2\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue0ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\ub0ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u08ff\uffcf\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\U010003ce\u08ff\uffd1\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd1\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u08ff\uffce\uc8ff\uffd2\u08ff\uffce\ub0ff\uffd2\xff"
0x000036f2      c644240f00     mov byte [rsp + 0xf], 0
0x000036f7      c644240d01     mov byte [rsp + 0xd], 1
0x000036fc      48c744241801.  mov qword [rsp + 0x18], 1
0x00003705      41bf01000000   mov r15d, 1
0x0000370b      4889442448     mov qword [rsp + 0x48], rax
0x00003710      e9bef3ffff     jmp 0x2ad3
0x00003715      488d054f2400.  lea rax, str.l______l                   ; 0x5b6b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb\u24ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u64ff\uffd2\u6cff\uffd1\u2cff\uffd1\uf4ff\uffd2\ue4ff\uffd2\ud4ff\uffd2\uc4ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\ub4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u74ff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u07ff\uffd1\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ud7ff\uffd0\u0cff\uffd3\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\u7cff\uffd1\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u07ff\uffd0\ua4ff\uffd2\u07ff\uffd0\u74ff\uffd2\U010003d1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue8ff\uffd1\u38ff\uffd3\u20ff\uffd3\ud0ff\uffd1\u10ff\uffd3\ub8ff\uffd1\U010003d2\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue0ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\ub0ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u08ff\uffcf\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\U010003ce\u08ff\uffd1\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd1\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u08ff\uffce\uc8ff\uffd2\u08ff\uffce\ub0ff\uffd2\xff"
0x0000371c      c644240e01     mov byte [rsp + 0xe], 1
0x00003721      c644247c00     mov byte [rsp + 0x7c], 0
0x00003726      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003729      48c744245000.  mov qword [rsp + 0x50], 0
0x00003732      c644240f01     mov byte [rsp + 0xf], 1
0x00003737      c644240d01     mov byte [rsp + 0xd], 1
0x0000373c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003745      4531ff         xor r15d, r15d
0x00003748      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000374d      c74424080500.  mov dword [rsp + 8], 5
0x00003755      e979f3ffff     jmp 0x2ad3
0x0000375a      c644240e01     mov byte [rsp + 0xe], 1
0x0000375f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003764      4531e4         xor r12d, r12d
0x00003767      48c744245000.  mov qword [rsp + 0x50], 0
0x00003770      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003775      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003778      c644240d01     mov byte [rsp + 0xd], 1
0x0000377d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003786      48c744244800.  mov qword [rsp + 0x48], 0
0x0000378f      e93ff3ffff     jmp 0x2ad3
0x00003794      837c24080a     cmp dword [rsp + 8], 0xa
0x00003799      7456           je 0x37f1
0x0000379b      488d35cd2300.  lea rsi, [0x00005b6f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000037a2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000037a4      ba05000000     mov edx, 5
0x000037a9      e832deffff     call sym.imp.dcgettext
0x000037ae      4889c1         mov rcx, rax
0x000037b1      4889442468     mov qword [rsp + 0x68], rax
0x000037b6      488d05b22300.  lea rax, [0x00005b6f]                   ; "`"
0x000037bd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000037c0      0f8498030000   je 0x3b5e
0x000037c6      488d35a02300.  lea rsi, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x000037cd      31ff           xor edi, edi
0x000037cf      ba05000000     mov edx, 5
0x000037d4      e807deffff     call sym.imp.dcgettext
0x000037d9      4889c1         mov rcx, rax
0x000037dc      4889442460     mov qword [rsp + 0x60], rax
0x000037e1      488d05852300.  lea rax, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x000037e8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000037eb      0f8483030000   je 0x3b74
0x000037f1      4531ff         xor r15d, r15d
0x000037f4      85db           test ebx, ebx
0x000037f6      0f84c1010000   je 0x39bd
0x000037fc      85db           test ebx, ebx
0x000037fe      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003803      0f9544240f     setne byte [rsp + 0xf]
0x00003808      4531e4         xor r12d, r12d
0x0000380b      4889df         mov rdi, rbx
0x0000380e      e8edddffff     call sym.imp.strlen
0x00003813      48895c2448     mov qword [rsp + 0x48], rbx
0x00003818      4889442418     mov qword [rsp + 0x18], rax
0x0000381d      c644240e01     mov byte [rsp + 0xe], 1
0x00003822      c644247c00     mov byte [rsp + 0x7c], 0
0x00003827      48c744245000.  mov qword [rsp + 0x50], 0
0x00003830      c644240d01     mov byte [rsp + 0xd], 1
0x00003835      e999f2ffff     jmp 0x2ad3
0x0000383a      c644240e01     mov byte [rsp + 0xe], 1
0x0000383f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003844      4531e4         xor r12d, r12d
0x00003847      48c744245000.  mov qword [rsp + 0x50], 0
0x00003850      c644240f00     mov byte [rsp + 0xf], 0
0x00003855      4531ff         xor r15d, r15d
0x00003858      c644240d00     mov byte [rsp + 0xd], 0
0x0000385d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003866      48c744244800.  mov qword [rsp + 0x48], 0
0x0000386f      e95ff2ffff     jmp 0x2ad3
0x00003874      c644240e01     mov byte [rsp + 0xe], 1
0x00003879      c644247c00     mov byte [rsp + 0x7c], 0
0x0000387e      4531e4         xor r12d, r12d
0x00003881      48c744245000.  mov qword [rsp + 0x50], 0
0x0000388a      c644240f01     mov byte [rsp + 0xf], 1
0x0000388f      c644240d01     mov byte [rsp + 0xd], 1
0x00003894      e91af2ffff     jmp 0x2ab3
0x00003899      4d39fd         cmp r13, r15
0x0000389c      7605           jbe 0x38a3
0x0000389e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000038a3      488d4102       lea rax, [rcx + 2]
0x000038a7      4939c5         cmp r13, rax
0x000038aa      7606           jbe 0x38b2
0x000038ac      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000038b2      4489e0         mov eax, r12d
0x000038b5      4c8d7903       lea r15, [rcx + 3]
0x000038b9      4531e4         xor r12d, r12d
0x000038bc      bb30000000     mov ebx, 0x30                           ; '0'
0x000038c1      e962f3ffff     jmp 0x2c28
0x000038c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000038d0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000038d5      4c89dd         mov rbp, r11
0x000038d8      885c240d       mov byte [rsp + 0xd], bl
0x000038dc      e9a8fcffff     jmp 0x3589
0x000038e1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000038e6      4531e4         xor r12d, r12d
0x000038e9      e902fbffff     jmp 0x33f0
0x000038ee      4531d2         xor r10d, r10d
0x000038f1      e9b7fbffff     jmp 0x34ad
0x000038f6      48c744245000.  mov qword [rsp + 0x50], 0
0x000038ff      c644240e01     mov byte [rsp + 0xe], 1
0x00003904      4531e4         xor r12d, r12d
0x00003907      c644247c00     mov byte [rsp + 0x7c], 0
0x0000390c      e9dafdffff     jmp 0x36eb
0x00003911      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003916      4c89f6         mov rsi, r14
0x00003919      4c89e9         mov rcx, r13
0x0000391c      4889d8         mov rax, rbx
0x0000391f      4889df         mov rdi, rbx
0x00003922      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003928      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000392d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003935      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003938      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000393e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003946      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000394b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003950      7326           jae 0x3978
0x00003952      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003955      7510           jne 0x3967
0x00003957      eb1f           jmp 0x3978
0x00003959      0f1f80000000.  nop dword [rax]
0x00003960      41803c0100     cmp byte [r9 + rax], 0
0x00003965      740e           je 0x3975
0x00003967      4883c001       add rax, 1
0x0000396b      488d540500     lea rdx, [rbp + rax]
0x00003970      4939d3         cmp r11, rdx
0x00003973      77eb           ja 0x3960
0x00003975      4889c7         mov rdi, rax
0x00003978      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000397d      4531e4         xor r12d, r12d
0x00003980      e961faffff     jmp 0x33e6
0x00003985      4889df         mov rdi, rbx
0x00003988      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000398e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003993      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003999      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000039a1      4531e4         xor r12d, r12d
0x000039a4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000039a9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000039ae      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000039b3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000039b8      e929faffff     jmp 0x33e6
0x000039bd      488b542468     mov rdx, qword [rsp + 0x68]
0x000039c2      0fb602         movzx eax, byte [rdx]
0x000039c5      84c0           test al, al
0x000039c7      0f842ffeffff   je 0x37fc
0x000039cd      0f1f00         nop dword [rax]
0x000039d0      4d39fd         cmp r13, r15
0x000039d3      7604           jbe 0x39d9
0x000039d5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x000039d9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x000039dd      420fb6043a     movzx eax, byte [rdx + r15]
0x000039e2      84c0           test al, al
0x000039e4      75ea           jne 0x39d0
0x000039e6      e911feffff     jmp 0x37fc
0x000039eb      89d0           mov eax, edx
0x000039ed      e955f5ffff     jmp 0x2f47
0x000039f2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000039f6      80fb3e         cmp bl, 0x3e
0x000039f9      0f8771f8ffff   ja 0x3270
0x000039ff      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003a09      480fa3d8       bt rax, rbx
0x00003a0d      0f835df8ffff   jae 0x3270
0x00003a13      807c240f00     cmp byte [rsp + 0xf], 0
0x00003a18      0f85e4010000   jne 0x3c02                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003a1e      4d39fd         cmp r13, r15
0x00003a21      7605           jbe 0x3a28
0x00003a23      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003a28      498d4701       lea rax, [r15 + 1]
0x00003a2c      4939c5         cmp r13, rax
0x00003a2f      7606           jbe 0x3a37
0x00003a31      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a37      498d4702       lea rax, [r15 + 2]
0x00003a3b      4939c5         cmp r13, rax
0x00003a3e      7606           jbe 0x3a46
0x00003a40      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003a46      498d4703       lea rax, [r15 + 3]
0x00003a4a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003a4d      7606           jbe 0x3a55
0x00003a4f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003a55      4983c704       add r15, 4
0x00003a59      31d2           xor edx, edx
0x00003a5b      4531e4         xor r12d, r12d
0x00003a5e      31c0           xor eax, eax
0x00003a60      4889cd         mov rbp, rcx
0x00003a63      e9c0f1ffff     jmp 0x2c28
0x00003a68      85db           test ebx, ebx
0x00003a6a      0f8488010000   je 0x3bf8
0x00003a70      488d05f62000.  lea rax, [0x00005b6d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb"
0x00003a77      c644240e01     mov byte [rsp + 0xe], 1
0x00003a7c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a81      4531e4         xor r12d, r12d
0x00003a84      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a8d      c644240f01     mov byte [rsp + 0xf], 1
0x00003a92      c644240d00     mov byte [rsp + 0xd], 0
0x00003a97      48c744241801.  mov qword [rsp + 0x18], 1
0x00003aa0      4531ff         xor r15d, r15d
0x00003aa3      4889442448     mov qword [rsp + 0x48], rax
0x00003aa8      e926f0ffff     jmp 0x2ad3
0x00003aad      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003ab0      4c89dd         mov rbp, r11
0x00003ab3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003ab8      e9ccfaffff     jmp 0x3589
0x00003abd      488d05a72000.  lea rax, str.l______l                   ; 0x5b6b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u7a00\uffdc\ud3ff\uffce\ua8ff\uffde\ub4ff\uffdc\ua4ff\uffda\xff\uffdb\u55ff\uffdb\u9aff\uffdb\ud4ff\uffdb\ud4ff\uffdb\ud4ff\uffdb\u24ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u64ff\uffd2\u6cff\uffd1\u2cff\uffd1\uf4ff\uffd2\ue4ff\uffd2\ud4ff\uffd2\uc4ff\uffd2\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\u0cff\uffd3\ub4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u74ff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u07ff\uffd1\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ua4ff\uffd2\ud7ff\uffd0\u0cff\uffd3\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\ua4ff\uffd2\u7cff\uffd1\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\ua4ff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u4cff\uffd2\u07ff\uffd0\ua4ff\uffd2\u07ff\uffd0\u74ff\uffd2\U010003d1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue8ff\uffd1\u38ff\uffd3\u20ff\uffd3\ud0ff\uffd1\u10ff\uffd3\ub8ff\uffd1\U010003d2\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\u08ff\uffd1\ue0ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\ub0ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u08ff\uffcf\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\uc8ff\uffd2\U010003ce\u08ff\uffd1\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd1\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\uc8ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u98ff\uffd2\u08ff\uffce\uc8ff\uffd2\u08ff\uffce\ub0ff\uffd2\xff"
0x00003ac4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003ac9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ace      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003ad1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003ada      c644240f01     mov byte [rsp + 0xf], 1
0x00003adf      c644240d01     mov byte [rsp + 0xd], 1
0x00003ae4      48c744241801.  mov qword [rsp + 0x18], 1
0x00003aed      4531ff         xor r15d, r15d
0x00003af0      4889442448     mov qword [rsp + 0x48], rax
0x00003af5      e9d9efffff     jmp 0x2ad3
0x00003afa      89d0           mov eax, edx
0x00003afc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003b01      4885db         test rbx, rbx
0x00003b04      742c           je 0x3b32
0x00003b06      84c0           test al, al
0x00003b08      7428           je 0x3b32
0x00003b0a      0fb60b         movzx ecx, byte [rbx]
0x00003b0d      4889d8         mov rax, rbx
0x00003b10      84c9           test cl, cl
0x00003b12      741e           je 0x3b32
0x00003b14      4c89fa         mov rdx, r15
0x00003b17      4c29f8         sub rax, r15
0x00003b1a      4939d5         cmp r13, rdx
0x00003b1d      7604           jbe 0x3b23
0x00003b1f      41880c16       mov byte [r14 + rdx], cl
0x00003b23      4883c201       add rdx, 1
0x00003b27      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003b2b      84c9           test cl, cl
0x00003b2d      75eb           jne 0x3b1a
0x00003b2f      4989d7         mov r15, rdx
0x00003b32      4d39fd         cmp r13, r15
0x00003b35      0f869efaffff   jbe 0x35d9
0x00003b3b      43c6043e00     mov byte [r14 + r15], 0
0x00003b40      e994faffff     jmp 0x35d9
0x00003b45      837c240802     cmp dword [rsp + 8], 2
0x00003b4a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b4f      4c89dd         mov rbp, r11
0x00003b52      0f94c0         sete al
0x00003b55      885c240d       mov byte [rsp + 0xd], bl
0x00003b59      e92bfaffff     jmp 0x3589
0x00003b5e      8b742408       mov esi, dword [rsp + 8]
0x00003b62      4889cf         mov rdi, rcx
0x00003b65      e8a6edffff     call sym.gettext_quote.part.1
0x00003b6a      4889442468     mov qword [rsp + 0x68], rax
0x00003b6f      e952fcffff     jmp 0x37c6
0x00003b74      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003b78      4889cf         mov rdi, rcx
0x00003b7b      e890edffff     call sym.gettext_quote.part.1
0x00003b80      4889442460     mov qword [rsp + 0x60], rax
0x00003b85      e967fcffff     jmp 0x37f1
0x00003b8a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b8f      4c89dd         mov rbp, r11
0x00003b92      89d0           mov eax, edx
0x00003b94      885c240d       mov byte [rsp + 0xd], bl
0x00003b98      e9ecf9ffff     jmp 0x3589
0x00003b9d      4883ec08       sub rsp, 8
0x00003ba1      41b805000000   mov r8d, 5
0x00003ba7      4c89d9         mov rcx, r11
0x00003baa      ff742468       push qword [rsp + 0x68]
0x00003bae      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003bb2      4c89f7         mov rdi, r14
0x00003bb5      ff742438       push qword [rsp + 0x38]
0x00003bb9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003bc1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003bc6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003bcb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003bd0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003bd4      4989c7         mov r15, rax
0x00003bd7      e9fdf9ffff     jmp 0x35d9
0x00003bdc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003be1      e916ffffff     jmp 0x3afc
0x00003be6      c74424080200.  mov dword [rsp + 8], 2
0x00003bee      e996f9ffff     jmp 0x3589
0x00003bf3      e818daffff     call sym.imp.__stack_chk_fail
0x00003bf8      c644240d00     mov byte [rsp + 0xd], 0
0x00003bfd      e96ffaffff     jmp 0x3671
0x00003c02      4c89dd         mov rbp, r11
0x00003c05      e996f9ffff     jmp 0x35a0
0x00003c0a      c644240e01     mov byte [rsp + 0xe], 1
0x00003c0f      31c0           xor eax, eax
0x00003c11      4531e4         xor r12d, r12d
0x00003c14      48c744245000.  mov qword [rsp + 0x50], 0
0x00003c1d      e9a2f5ffff     jmp 0x31c4
0x00003c22      4c89ea         mov rdx, r13
0x00003c25      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003c2a      e9f3f5ffff     jmp 0x3222
0x00003c2f      e80cd9ffff     call sym.imp.abort
0x00003c34      6690           nop
0x00003c36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003c40      4157           push r15
0x00003c42      4156           push r14
0x00003c44      4c63ff         movsxd r15, edi
0x00003c47      4155           push r13
0x00003c49      4154           push r12
0x00003c4b      4989d6         mov r14, rdx
0x00003c4e      55             push rbp
0x00003c4f      53             push rbx
0x00003c50      4889cd         mov rbp, rcx
0x00003c53      4883ec28       sub rsp, 0x28
0x00003c57      4889742408     mov qword [rsp + 8], rsi
0x00003c5c      e8efd8ffff     call sym.imp.__errno_location
0x00003c61      4989c5         mov r13, rax
0x00003c64      8b00           mov eax, dword [rax]
0x00003c66      4585ff         test r15d, r15d
0x00003c69      488b1d104420.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208080:8]=0x208090 obj.slotvec0
0x00003c70      89442418       mov dword [rsp + 0x18], eax
0x00003c74      0f8867010000   js 0x3de1
0x00003c7a      44393df74320.  cmp dword [obj.nslots], r15d            ; [0x208078:4]=1
0x00003c81      7f62           jg 0x3ce5
0x00003c83      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003c8a      0f8456010000   je 0x3de6
0x00003c90      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003c94      488d05f54320.  lea rax, obj.slotvec0                   ; 0x208090
0x00003c9b      4963f4         movsxd rsi, r12d
0x00003c9e      48c1e604       shl rsi, 4
0x00003ca2      4839c3         cmp rbx, rax
0x00003ca5      0f8415010000   je 0x3dc0
0x00003cab      4889df         mov rdi, rbx
0x00003cae      e87d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003cb3      4889c3         mov rbx, rax
0x00003cb6      488905c34320.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003cbd      48633db44320.  movsxd rdi, dword [obj.nslots]          ; [0x208078:4]=1
0x00003cc4      4489e2         mov edx, r12d
0x00003cc7      31f6           xor esi, esi
0x00003cc9      29fa           sub edx, edi
0x00003ccb      48c1e704       shl rdi, 4
0x00003ccf      4863d2         movsxd rdx, edx
0x00003cd2      4801df         add rdi, rbx
0x00003cd5      48c1e204       shl rdx, 4
0x00003cd9      e892d9ffff     call sym.imp.memset
0x00003cde      448925934320.  mov dword [obj.nslots], r12d            ; [0x208078:4]=1
0x00003ce5      8b4504         mov eax, dword [rbp + 4]
0x00003ce8      49c1e704       shl r15, 4
0x00003cec      4883ec08       sub rsp, 8
0x00003cf0      4c01fb         add rbx, r15
0x00003cf3      4c8d7d08       lea r15, [rbp + 8]
0x00003cf7      448b4500       mov r8d, dword [rbp]
0x00003cfb      4c8b1b         mov r11, qword [rbx]
0x00003cfe      4c8b6308       mov r12, qword [rbx + 8]
0x00003d02      4c89f1         mov rcx, r14
0x00003d05      83c801         or eax, 1
0x00003d08      89442424       mov dword [rsp + 0x24], eax
0x00003d0c      ff7530         push qword [rbp + 0x30]
0x00003d0f      4189c1         mov r9d, eax
0x00003d12      ff7528         push qword [rbp + 0x28]
0x00003d15      4157           push r15
0x00003d17      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003d1a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003d1f      4c89e7         mov rdi, r12
0x00003d22      4c895c2430     mov qword [rsp + 0x30], r11
0x00003d27      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003d2c      4883c420       add rsp, 0x20
0x00003d30      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003d35      4939c3         cmp r11, rax
0x00003d38      7767           ja 0x3da1
0x00003d3a      488d7001       lea rsi, [rax + 1]
0x00003d3e      488d05db4320.  lea rax, obj.slot0                      ; 0x208120
0x00003d45      4939c4         cmp r12, rax
0x00003d48      488933         mov qword [rbx], rsi
0x00003d4b      7412           je 0x3d5f
0x00003d4d      4c89e7         mov rdi, r12
0x00003d50      4889742410     mov qword [rsp + 0x10], rsi
0x00003d55      e8d6d7ffff     call sym.imp.free
0x00003d5a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003d5f      4889f7         mov rdi, rsi
0x00003d62      4889742410     mov qword [rsp + 0x10], rsi
0x00003d67      e8640e0000     call sym.xmalloc
0x00003d6c      4883ec08       sub rsp, 8
0x00003d70      48894308       mov qword [rbx + 8], rax
0x00003d74      448b4500       mov r8d, dword [rbp]
0x00003d78      ff7530         push qword [rbp + 0x30]
0x00003d7b      ff7528         push qword [rbp + 0x28]
0x00003d7e      4c89f1         mov rcx, r14
0x00003d81      4157           push r15
0x00003d83      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003d88      4889c7         mov rdi, rax
0x00003d8b      488b542428     mov rdx, qword [rsp + 0x28]
0x00003d90      488b742430     mov rsi, qword [rsp + 0x30]
0x00003d95      4989c4         mov r12, rax
0x00003d98      e863ecffff     call sym.quotearg_buffer_restyled
0x00003d9d      4883c420       add rsp, 0x20
0x00003da1      8b442418       mov eax, dword [rsp + 0x18]
0x00003da5      41894500       mov dword [r13], eax
0x00003da9      4883c428       add rsp, 0x28
0x00003dad      4c89e0         mov rax, r12
0x00003db0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003db1      5d             pop rbp
0x00003db2      415c           pop r12
0x00003db4      415d           pop r13
0x00003db6      415e           pop r14
0x00003db8      415f           pop r15
0x00003dba      c3             ret
0x00003dbb      0f1f440000     nop dword [rax + rax]
0x00003dc0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003dc2      e8690e0000     call sym.xrealloc
0x00003dc7      660f6f05c142.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003dcf      4889c3         mov rbx, rax
0x00003dd2      488905a74220.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003dd9      0f1100         movups xmmword [rax], xmm0
0x00003ddc      e9dcfeffff     jmp 0x3cbd
0x00003de1      e85ad7ffff     call sym.imp.abort
0x00003de6      e835100000     call sym.xalloc_die
0x00003deb      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00003df0      4154           push r12
0x00003df2      55             push rbp
0x00003df3      53             push rbx
0x00003df4      4889fb         mov rbx, rdi
0x00003df7      e854d7ffff     call sym.imp.__errno_location
0x00003dfc      448b20         mov r12d, dword [rax]
0x00003dff      4889c5         mov rbp, rax
0x00003e02      488d05174420.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e09      4885db         test rbx, rbx
0x00003e0c      be38000000     mov esi, 0x38                           ; '8'
0x00003e11      480f44d8       cmove rbx, rax
0x00003e15      4889df         mov rdi, rbx
0x00003e18      e8b30f0000     call sym.xmemdup
0x00003e1d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003e21      5b             pop rbx
0x00003e22      5d             pop rbp
0x00003e23      415c           pop r12
0x00003e25      c3             ret
0x00003e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00003e30      488d05e94320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e37      4885ff         test rdi, rdi
0x00003e3a      480f44f8       cmove rdi, rax
0x00003e3e      8b07           mov eax, dword [rdi]
0x00003e40      c3             ret
0x00003e41      0f1f440000     nop dword [rax + rax]
0x00003e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00003e50      488d05c94320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e57      4885ff         test rdi, rdi
0x00003e5a      480f44f8       cmove rdi, rax
0x00003e5e      8937           mov dword [rdi], esi
0x00003e60      c3             ret
0x00003e61      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003e66      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00003e70      488d05a94320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003e77      4885ff         test rdi, rdi
0x00003e7a      89f1           mov ecx, esi
0x00003e7c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00003e80      89f0           mov eax, esi
0x00003e82      83e11f         and ecx, 0x1f
0x00003e85      c0e805         shr al, 5
0x00003e88      0fb6c0         movzx eax, al
0x00003e8b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00003e90      8b37           mov esi, dword [rdi]
0x00003e92      89f0           mov eax, esi
0x00003e94      d3e8           shr eax, cl
0x00003e96      31c2           xor edx, eax
0x00003e98      83e001         and eax, 1
0x00003e9b      83e201         and edx, 1
0x00003e9e      d3e2           shl edx, cl
0x00003ea0      31f2           xor edx, esi
0x00003ea2      8917           mov dword [rdi], edx
0x00003ea4      c3             ret
0x00003ea5      90             nop
0x00003ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00003eb0      488d05694320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003eb7      4885ff         test rdi, rdi
0x00003eba      480f44f8       cmove rdi, rax
0x00003ebe      8b4704         mov eax, dword [rdi + 4]
0x00003ec1      897704         mov dword [rdi + 4], esi
0x00003ec4      c3             ret
0x00003ec5      90             nop
0x00003ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00003ed0      488d05494320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003ed7      4885ff         test rdi, rdi
0x00003eda      480f44f8       cmove rdi, rax
0x00003ede      4885f6         test rsi, rsi
0x00003ee1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003ee7      740e           je 0x3ef7
0x00003ee9      4885d2         test rdx, rdx
0x00003eec      7409           je 0x3ef7
0x00003eee      48897728       mov qword [rdi + 0x28], rsi
0x00003ef2      48895730       mov qword [rdi + 0x30], rdx
0x00003ef6      c3             ret
0x00003ef7      4883ec08       sub rsp, 8
0x00003efb      e840d6ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00003f00      4157           push r15
0x00003f02      4156           push r14
0x00003f04      488d05154320.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003f0b      4155           push r13
0x00003f0d      4154           push r12
0x00003f0f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00003f12      55             push rbp
0x00003f13      53             push rbx
0x00003f14      4c89c3         mov rbx, r8
0x00003f17      4989f6         mov r14, rsi
0x00003f1a      4989d7         mov r15, rdx
0x00003f1d      4883ec18       sub rsp, 0x18
0x00003f21      4d85c0         test r8, r8
0x00003f24      480f44d8       cmove rbx, rax
0x00003f28      48894c2408     mov qword [rsp + 8], rcx
0x00003f2d      e81ed6ffff     call sym.imp.__errno_location
0x00003f32      448b20         mov r12d, dword [rax]
0x00003f35      4889c5         mov rbp, rax
0x00003f38      488d4308       lea rax, [rbx + 8]
0x00003f3c      4883ec08       sub rsp, 8
0x00003f40      448b4b04       mov r9d, dword [rbx + 4]
0x00003f44      ff7330         push qword [rbx + 0x30]
0x00003f47      448b03         mov r8d, dword [rbx]
0x00003f4a      ff7328         push qword [rbx + 0x28]
0x00003f4d      4c89fa         mov rdx, r15
0x00003f50      50             push rax
0x00003f51      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003f56      4c89f6         mov rsi, r14
0x00003f59      4c89ef         mov rdi, r13
0x00003f5c      e89feaffff     call sym.quotearg_buffer_restyled
0x00003f61      44896500       mov dword [rbp], r12d
0x00003f65      4883c438       add rsp, 0x38
0x00003f69      5b             pop rbx
0x00003f6a      5d             pop rbp
0x00003f6b      415c           pop r12
0x00003f6d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00003f6f      415e           pop r14
0x00003f71      415f           pop r15
0x00003f73      c3             ret
0x00003f74      6690           nop
0x00003f76      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00003f80      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00003f82      4156           push r14
0x00003f84      488d05954220.  lea rax, obj.default_quoting_options    ; 0x208220
0x00003f8b      4155           push r13
0x00003f8d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00003f8f      4989d4         mov r12, rdx
0x00003f92      55             push rbp
0x00003f93      53             push rbx
0x00003f94      4889cb         mov rbx, rcx
0x00003f97      4989fe         mov r14, rdi
0x00003f9a      4989f7         mov r15, rsi
0x00003f9d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00003fa1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00003fa4      480f44d8       cmove rbx, rax
0x00003fa8      31ed           xor ebp, ebp
0x00003faa      e8a1d5ffff     call sym.imp.__errno_location
0x00003faf      4d85e4         test r12, r12
0x00003fb2      4989c5         mov r13, rax
0x00003fb5      8b00           mov eax, dword [rax]
0x00003fb7      400f94c5       sete bpl
0x00003fbb      0b6b04         or ebp, dword [rbx + 4]
0x00003fbe      4c8d5308       lea r10, [rbx + 8]
0x00003fc2      4883ec08       sub rsp, 8
0x00003fc6      448b03         mov r8d, dword [rbx]
0x00003fc9      4c89f9         mov rcx, r15
0x00003fcc      89442414       mov dword [rsp + 0x14], eax
0x00003fd0      ff7330         push qword [rbx + 0x30]
0x00003fd3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00003fd6      ff7328         push qword [rbx + 0x28]
0x00003fd9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00003fdb      31f6           xor esi, esi
0x00003fdd      4189e9         mov r9d, ebp
0x00003fe0      31ff           xor edi, edi
0x00003fe2      4c89542440     mov qword [rsp + 0x40], r10
0x00003fe7      e814eaffff     call sym.quotearg_buffer_restyled
0x00003fec      488d7001       lea rsi, [rax + 1]
0x00003ff0      4889442448     mov qword [rsp + 0x48], rax
0x00003ff5      4883c420       add rsp, 0x20
0x00003ff9      4889f7         mov rdi, rsi
0x00003ffc      4889742418     mov qword [rsp + 0x18], rsi
0x00004001      e8ca0b0000     call sym.xmalloc
0x00004006      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000400b      4883ec08       sub rsp, 8
0x0000400f      ff7330         push qword [rbx + 0x30]
0x00004012      ff7328         push qword [rbx + 0x28]
0x00004015      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000401a      4189e9         mov r9d, ebp
0x0000401d      448b03         mov r8d, dword [rbx]
0x00004020      4c89f9         mov rcx, r15
0x00004023      4c89f2         mov rdx, r14
0x00004026      4889c7         mov rdi, rax
0x00004029      4152           push r10
0x0000402b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004030      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004035      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004039      4883c420       add rsp, 0x20
0x0000403d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004040      41894500       mov dword [r13], eax
0x00004044      7409           je 0x404f
0x00004046      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000404b      4d891c24       mov qword [r12], r11
0x0000404f      488b442410     mov rax, qword [rsp + 0x10]
0x00004054      4883c438       add rsp, 0x38
0x00004058      5b             pop rbx
0x00004059      5d             pop rbp
0x0000405a      415c           pop r12
0x0000405c      415d           pop r13
0x0000405e      415e           pop r14
0x00004060      415f           pop r15
0x00004062      c3             ret
0x00004063      0f1f00         nop dword [rax]
0x00004066      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004070      4889d1         mov rcx, rdx
0x00004073      31d2           xor edx, edx
0x00004075      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000407a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004080      8b05f23f2000   mov eax, dword [obj.nslots]             ; [0x208078:4]=1
0x00004086      4154           push r12
0x00004088      4c8b25f13f20.  mov r12, qword [obj.slotvec]            ; [0x208080:8]=0x208090 obj.slotvec0
0x0000408f      55             push rbp
0x00004090      53             push rbx
0x00004091      83f801         cmp eax, 1
0x00004094      7e2b           jle 0x40c1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004096      83e802         sub eax, 2
0x00004099      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000409e      48c1e004       shl rax, 4
0x000040a2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000040a7      660f1f840000.  nop word [rax + rax]
0x000040b0      488b3b         mov rdi, qword [rbx]
0x000040b3      4883c310       add rbx, 0x10
0x000040b7      e874d4ffff     call sym.imp.free
0x000040bc      4839eb         cmp rbx, rbp
0x000040bf      75ef           jne 0x40b0
0x000040c1      498b7c2408     mov rdi, qword [r12 + 8]
0x000040c6      488d1d534020.  lea rbx, obj.slot0                      ; 0x208120
0x000040cd      4839df         cmp rdi, rbx
0x000040d0      7417           je 0x40e9
0x000040d2      e859d4ffff     call sym.imp.free
0x000040d7      48c705ae3f20.  mov qword [obj.slotvec0], 0x100         ; [0x208090:8]=256
0x000040e2      48891daf3f20.  mov qword [0x00208098], rbx             ; [0x208098:8]=0x208120 obj.slot0
0x000040e9      488d1da03f20.  lea rbx, obj.slotvec0                   ; 0x208090
0x000040f0      4939dc         cmp r12, rbx
0x000040f3      740f           je 0x4104
0x000040f5      4c89e7         mov rdi, r12
0x000040f8      e833d4ffff     call sym.imp.free
0x000040fd      48891d7c3f20.  mov qword [obj.slotvec], rbx            ; [0x208080:8]=0x208090 obj.slotvec0
0x00004104      5b             pop rbx
0x00004105      c705693f2000.  mov dword [obj.nslots], 1               ; [0x208078:4]=1
0x0000410f      5d             pop rbp
0x00004110      415c           pop r12
0x00004112      c3             ret
0x00004113      0f1f00         nop dword [rax]
0x00004116      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004120      488d0df94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004127      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000412e      e90dfbffff     jmp sym.quotearg_n_options
0x00004133      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004136      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004140      488d0dd94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004147      e9f4faffff     jmp sym.quotearg_n_options
0x0000414c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004150      488d0dc94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004157      4889fe         mov rsi, rdi
0x0000415a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004161      31ff           xor edi, edi
0x00004163      e9d8faffff     jmp sym.quotearg_n_options
0x00004168      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004170      488d0da94020.  lea rcx, obj.default_quoting_options    ; 0x208220
0x00004177      4889f2         mov rdx, rsi
0x0000417a      4889fe         mov rsi, rdi
0x0000417d      31ff           xor edi, edi
0x0000417f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004184      6690           nop
0x00004186      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004190      4883ec48       sub rsp, 0x48
0x00004194      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004197      64488b142528.  mov rdx, qword fs:[0x28]
0x000041a0      4889542438     mov qword [rsp + 0x38], rdx
0x000041a5      31d2           xor edx, edx
0x000041a7      83fe0a         cmp esi, 0xa
0x000041aa      7468           je 0x4214
0x000041ac      893424         mov dword [rsp], esi
0x000041af      4889e1         mov rcx, rsp
0x000041b2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000041b9      4889c6         mov rsi, rax
0x000041bc      48c744240400.  mov qword [rsp + 4], 0
0x000041c5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000041ce      48c744241400.  mov qword [rsp + 0x14], 0
0x000041d7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000041e0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x000041e9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000041f2      c74424340000.  mov dword [rsp + 0x34], 0
0x000041fa      e841faffff     call sym.quotearg_n_options
0x000041ff      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004204      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000420d      750a           jne 0x4219                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000420f      4883c448       add rsp, 0x48
0x00004213      c3             ret
0x00004214      e827d3ffff     call sym.imp.abort
0x00004219      e8f2d3ffff     call sym.imp.__stack_chk_fail
0x0000421e      6690           nop
;-- quotearg_n_style_mem:
0x00004220      4883ec48       sub rsp, 0x48
0x00004224      4889d0         mov rax, rdx
0x00004227      4889ca         mov rdx, rcx
0x0000422a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004233      48894c2438     mov qword [rsp + 0x38], rcx
0x00004238      31c9           xor ecx, ecx
0x0000423a      83fe0a         cmp esi, 0xa
0x0000423d      7461           je 0x42a0
0x0000423f      893424         mov dword [rsp], esi
0x00004242      4889e1         mov rcx, rsp
0x00004245      4889c6         mov rsi, rax
0x00004248      48c744240400.  mov qword [rsp + 4], 0
0x00004251      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000425a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004263      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000426c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004275      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000427e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004286      e8b5f9ffff     call sym.quotearg_n_options
0x0000428b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004290      644833142528.  xor rdx, qword fs:[0x28]
0x00004299      750a           jne 0x42a5
0x0000429b      4883c448       add rsp, 0x48
0x0000429f      c3             ret
0x000042a0      e89bd2ffff     call sym.imp.abort
0x000042a5      e866d3ffff     call sym.imp.__stack_chk_fail
0x000042aa      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000042b0      4889f2         mov rdx, rsi
0x000042b3      89fe           mov esi, edi
0x000042b5      31ff           xor edi, edi
0x000042b7      e9d4feffff     jmp sym.quotearg_n_style
0x000042bc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000042c0      4889d1         mov rcx, rdx
0x000042c3      4889f2         mov rdx, rsi
0x000042c6      89fe           mov esi, edi
0x000042c8      31ff           xor edi, edi
0x000042ca      e951ffffff     jmp sym.quotearg_n_style_mem
0x000042cf      90             nop
;-- quotearg_char_mem:
0x000042d0      4883ec48       sub rsp, 0x48
0x000042d4      89d1           mov ecx, edx
0x000042d6      64488b042528.  mov rax, qword fs:[0x28]
0x000042df      4889442438     mov qword [rsp + 0x38], rax
0x000042e4      31c0           xor eax, eax
0x000042e6      488b05633f20.  mov rax, qword [0x00208250]             ; [0x208250:8]=0
0x000042ed      4989e0         mov r8, rsp
0x000042f0      83e11f         and ecx, 0x1f
0x000042f3      660f6f05253f.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000042fb      4889442430     mov qword [rsp + 0x30], rax
0x00004300      89d0           mov eax, edx
0x00004302      0f290424       movaps xmmword [rsp], xmm0
0x00004306      c0e805         shr al, 5
0x00004309      0fb6c0         movzx eax, al
0x0000430c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004311      660f6f05173f.  movdqa xmm0, xmmword [0x00208230]
0x00004319      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000431e      660f6f051a3f.  movdqa xmm0, xmmword [0x00208240]
0x00004326      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000432b      418b11         mov edx, dword [r9]
0x0000432e      89d0           mov eax, edx
0x00004330      d3e8           shr eax, cl
0x00004332      f7d0           not eax
0x00004334      83e001         and eax, 1
0x00004337      d3e0           shl eax, cl
0x00004339      4c89c1         mov rcx, r8
0x0000433c      31d0           xor eax, edx
0x0000433e      4889f2         mov rdx, rsi
0x00004341      4889fe         mov rsi, rdi
0x00004344      418901         mov dword [r9], eax
0x00004347      31ff           xor edi, edi
0x00004349      e8f2f8ffff     call sym.quotearg_n_options
0x0000434e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004353      644833342528.  xor rsi, qword fs:[0x28]
0x0000435c      7505           jne 0x4363
0x0000435e      4883c448       add rsp, 0x48
0x00004362      c3             ret
0x00004363      e8a8d2ffff     call sym.imp.__stack_chk_fail
0x00004368      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004370      400fbed6       movsx edx, sil
0x00004374      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000437b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004380      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004385      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000438c      e93fffffff     jmp sym.quotearg_char_mem
0x00004391      0f1f440000     nop dword [rax + rax]
0x00004396      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000043a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000043a5      e926ffffff     jmp sym.quotearg_char_mem
0x000043aa      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000043b0      4883ec48       sub rsp, 0x48
0x000043b4      4889d0         mov rax, rdx
0x000043b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000043c0      4889542438     mov qword [rsp + 0x38], rdx
0x000043c5      31d2           xor edx, edx
0x000043c7      83fe0a         cmp esi, 0xa
0x000043ca      7468           je 0x4434
0x000043cc      893424         mov dword [rsp], esi
0x000043cf      4889e1         mov rcx, rsp
0x000043d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043d9      4889c6         mov rsi, rax
0x000043dc      48c744240400.  mov qword [rsp + 4], 0
0x000043e5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x000043ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000043f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004400      48c744242400.  mov qword [rsp + 0x24], 0
0x00004409      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004412      c74424340000.  mov dword [rsp + 0x34], 0
0x0000441a      e821f8ffff     call sym.quotearg_n_options
0x0000441f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004424      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000442d      750a           jne 0x4439
0x0000442f      4883c448       add rsp, 0x48
0x00004433      c3             ret
0x00004434      e807d1ffff     call sym.imp.abort
0x00004439      e8d2d1ffff     call sym.imp.__stack_chk_fail
0x0000443e      6690           nop
;-- quotearg_n_custom_mem:
0x00004440      4883ec48       sub rsp, 0x48
0x00004444      4989c9         mov r9, rcx
0x00004447      488b0d023e20.  mov rcx, qword [0x00208250]             ; [0x208250:8]=0
0x0000444e      660f6f05ca3d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004456      64488b042528.  mov rax, qword fs:[0x28]
0x0000445f      4889442438     mov qword [rsp + 0x38], rax
0x00004464      31c0           xor eax, eax
0x00004466      0f290424       movaps xmmword [rsp], xmm0
0x0000446a      4885f6         test rsi, rsi
0x0000446d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004472      c704240a0000.  mov dword [rsp], 0xa
0x00004479      660f6f05af3d.  movdqa xmm0, xmmword [0x00208230]
0x00004481      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004486      660f6f05b23d.  movdqa xmm0, xmmword [0x00208240]
0x0000448e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004493      7432           je 0x44c7
0x00004495      4885d2         test rdx, rdx
0x00004498      742d           je 0x44c7
0x0000449a      4889742428     mov qword [rsp + 0x28], rsi
0x0000449f      4889542430     mov qword [rsp + 0x30], rdx
0x000044a4      4889e1         mov rcx, rsp
0x000044a7      4c89c2         mov rdx, r8
0x000044aa      4c89ce         mov rsi, r9
0x000044ad      e88ef7ffff     call sym.quotearg_n_options
0x000044b2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000044b7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000044c0      750a           jne 0x44cc
0x000044c2      4883c448       add rsp, 0x48
0x000044c6      c3             ret
0x000044c7      e874d0ffff     call sym.imp.abort
0x000044cc      e83fd1ffff     call sym.imp.__stack_chk_fail
0x000044d1      0f1f440000     nop dword [rax + rax]
0x000044d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x000044e0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000044e7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x000044ec      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x000044f0      4889d1         mov rcx, rdx
0x000044f3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000044fa      4889f2         mov rdx, rsi
0x000044fd      4889fe         mov rsi, rdi
0x00004500      31ff           xor edi, edi
0x00004502      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004507      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004510      4989c8         mov r8, rcx
0x00004513      4889d1         mov rcx, rdx
0x00004516      4889f2         mov rdx, rsi
0x00004519      4889fe         mov rsi, rdi
0x0000451c      31ff           xor edi, edi
0x0000451e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004523      0f1f00         nop dword [rax]
0x00004526      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004530      488d0d093b20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004537      e904f7ffff     jmp sym.quotearg_n_options
0x0000453c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004540      488d0df93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004547      4889f2         mov rdx, rsi
0x0000454a      4889fe         mov rsi, rdi
0x0000454d      31ff           xor edi, edi
0x0000454f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004554      6690           nop
0x00004556      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004560      488d0dd93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004567      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000456e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004573      0f1f00         nop dword [rax]
0x00004576      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004580      488d0db93a20.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004587      4889fe         mov rsi, rdi
0x0000458a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004591      31ff           xor edi, edi
0x00004593      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004598      0f1f84000000.  nop dword [rax + rax]
;-- dup_safer:
0x000045a0      ba03000000     mov edx, 3                              ; ../coreutils-8.31/lib/dup-safer.c:32
0x000045a5      31f6           xor esi, esi
0x000045a7      31c0           xor eax, eax
0x000045a9      e932090000     jmp sym.rpl_fcntl
0x000045ae      6690           nop                                     ; ../coreutils-8.31/lib/dup-safer.c:33
;-- version_etc_arn:
0x000045b0      4157           push r15
0x000045b2      4156           push r14
0x000045b4      4155           push r13
0x000045b6      4154           push r12
0x000045b8      4d89cc         mov r12, r9
0x000045bb      55             push rbp
0x000045bc      53             push rbx
0x000045bd      4889fd         mov rbp, rdi
0x000045c0      4c89c3         mov rbx, r8
0x000045c3      4883ec28       sub rsp, 0x28
0x000045c7      4885f6         test rsi, rsi
0x000045ca      0f8418010000   je 0x46e8
0x000045d0      4989d0         mov r8, rdx
0x000045d3      488d154e1a00.  lea rdx, [0x00006028]                   ; "%s (%s) %s\n"
0x000045da      4989c9         mov r9, rcx
0x000045dd      31c0           xor eax, eax
0x000045df      4889f1         mov rcx, rsi
0x000045e2      be01000000     mov esi, 1
0x000045e7      e824d2ffff     call sym.imp.__fprintf_chk
0x000045ec      488d35481a00.  lea rsi, [0x0000603b]                   ; "(C)"
0x000045f3      31ff           xor edi, edi
0x000045f5      ba05000000     mov edx, 5
0x000045fa      e8e1cfffff     call sym.imp.dcgettext
0x000045ff      488d155a1d00.  lea rdx, obj.version_etc_copyright      ; 0x6360 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004606      4889c1         mov rcx, rax
0x00004609      41b8e3070000   mov r8d, 0x7e3
0x0000460f      be01000000     mov esi, 1
0x00004614      4889ef         mov rdi, rbp
0x00004617      31c0           xor eax, eax
0x00004619      e8f2d1ffff     call sym.imp.__fprintf_chk
0x0000461e      488d35a31a00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x60c8 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004625      31ff           xor edi, edi
0x00004627      ba05000000     mov edx, 5
0x0000462c      e8afcfffff     call sym.imp.dcgettext
0x00004631      4889ee         mov rsi, rbp
0x00004634      4889c7         mov rdi, rax
0x00004637      e884d0ffff     call sym.imp.fputs_unlocked
0x0000463c      4983fc09       cmp r12, 9
0x00004640      0f873a030000   ja 0x4980
0x00004646      488d15db1c00.  lea rdx, [0x00006328]
0x0000464d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004651      4801d0         add rax, rdx
0x00004654      ffe0           jmp rax
0x00004656      662e0f1f8400.  nop word cs:[rax + rax]
0x00004660      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004664      488b4310       mov rax, qword [rbx + 0x10]
0x00004668      488d35c91b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6238 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000466f      4c8b4308       mov r8, qword [rbx + 8]
0x00004673      ba05000000     mov edx, 5
0x00004678      31ff           xor edi, edi
0x0000467a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000467e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004682      4c894c2410     mov qword [rsp + 0x10], r9
0x00004687      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000468b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000468f      48890424       mov qword [rsp], rax
0x00004693      4c89442408     mov qword [rsp + 8], r8
0x00004698      488b1b         mov rbx, qword [rbx]
0x0000469b      e840cfffff     call sym.imp.dcgettext
0x000046a0      4883ec08       sub rsp, 8
0x000046a4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000046a9      4889c2         mov rdx, rax
0x000046ac      4889d9         mov rcx, rbx
0x000046af      be01000000     mov esi, 1
0x000046b4      4889ef         mov rdi, rbp
0x000046b7      31c0           xor eax, eax
0x000046b9      4151           push r9
0x000046bb      4155           push r13
0x000046bd      4154           push r12
0x000046bf      4157           push r15
0x000046c1      4156           push r14
0x000046c3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000046c8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000046cd      e83ed1ffff     call sym.imp.__fprintf_chk
0x000046d2      4883c430       add rsp, 0x30
0x000046d6      4883c428       add rsp, 0x28
0x000046da      5b             pop rbx
0x000046db      5d             pop rbp
0x000046dc      415c           pop r12
0x000046de      415d           pop r13
0x000046e0      415e           pop r14
0x000046e2      415f           pop r15
0x000046e4      c3             ret
0x000046e5      0f1f00         nop dword [rax]
0x000046e8      4989c8         mov r8, rcx
0x000046eb      4889d1         mov rcx, rdx
0x000046ee      488d153f1900.  lea rdx, str.s__s                       ; 0x6034 ; "%s %s\n"
0x000046f5      be01000000     mov esi, 1
0x000046fa      31c0           xor eax, eax
0x000046fc      e80fd1ffff     call sym.imp.__fprintf_chk
0x00004701      e9e6feffff     jmp 0x45ec
0x00004706      662e0f1f8400.  nop word cs:[rax + rax]
0x00004710      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004714      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004718      488d35491b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6268 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000471f      488b4310       mov rax, qword [rbx + 0x10]
0x00004723      4c8b4308       mov r8, qword [rbx + 8]
0x00004727      ba05000000     mov edx, 5
0x0000472c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004730      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004734      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004738      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000473c      488b1b         mov rbx, qword [rbx]
0x0000473f      4c89542418     mov qword [rsp + 0x18], r10
0x00004744      4c894c2410     mov qword [rsp + 0x10], r9
0x00004749      48890424       mov qword [rsp], rax
0x0000474d      4c89442408     mov qword [rsp + 8], r8
0x00004752      31ff           xor edi, edi
0x00004754      e887ceffff     call sym.imp.dcgettext
0x00004759      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000475e      4152           push r10
0x00004760      e93fffffff     jmp 0x46a4
0x00004765      0f1f00         nop dword [rax]
0x00004768      488b1b         mov rbx, qword [rbx]
0x0000476b      488d35cd1800.  lea rsi, str.Written_by__s.             ; 0x603f ; "Written by %s.\n"
0x00004772      ba05000000     mov edx, 5
0x00004777      31ff           xor edi, edi
0x00004779      e862ceffff     call sym.imp.dcgettext
0x0000477e      4883c428       add rsp, 0x28
0x00004782      4889d9         mov rcx, rbx
0x00004785      4889ef         mov rdi, rbp
0x00004788      5b             pop rbx
0x00004789      5d             pop rbp
0x0000478a      415c           pop r12
0x0000478c      415d           pop r13
0x0000478e      415e           pop r14
0x00004790      415f           pop r15
0x00004792      4889c2         mov rdx, rax
0x00004795      be01000000     mov esi, 1
0x0000479a      31c0           xor eax, eax
0x0000479c      e96fd0ffff     jmp sym.imp.__fprintf_chk
0x000047a1      0f1f80000000.  nop dword [rax]
0x000047a8      4c8b6308       mov r12, qword [rbx + 8]
0x000047ac      488d359c1800.  lea rsi, str.Written_by__s_and__s.      ; 0x604f ; "Written by %s and %s.\n"
0x000047b3      488b1b         mov rbx, qword [rbx]
0x000047b6      ba05000000     mov edx, 5
0x000047bb      31ff           xor edi, edi
0x000047bd      e81eceffff     call sym.imp.dcgettext
0x000047c2      4883c428       add rsp, 0x28
0x000047c6      4d89e0         mov r8, r12
0x000047c9      4889d9         mov rcx, rbx
0x000047cc      4889ef         mov rdi, rbp
0x000047cf      4889c2         mov rdx, rax
0x000047d2      be01000000     mov esi, 1
0x000047d7      5b             pop rbx
0x000047d8      5d             pop rbp
0x000047d9      415c           pop r12
0x000047db      415d           pop r13
0x000047dd      415e           pop r14
0x000047df      415f           pop r15
0x000047e1      31c0           xor eax, eax
0x000047e3      e928d0ffff     jmp sym.imp.__fprintf_chk
0x000047e8      0f1f84000000.  nop dword [rax + rax]
0x000047f0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000047f4      4c8b6308       mov r12, qword [rbx + 8]
0x000047f8      488d35671800.  lea rsi, str.Written_by__s___s__and__s. ; 0x6066 ; "Written by %s, %s, and %s.\n"
0x000047ff      488b1b         mov rbx, qword [rbx]
0x00004802      ba05000000     mov edx, 5
0x00004807      31ff           xor edi, edi
0x00004809      e8d2cdffff     call sym.imp.dcgettext
0x0000480e      4883c428       add rsp, 0x28
0x00004812      4d89e9         mov r9, r13
0x00004815      4d89e0         mov r8, r12
0x00004818      4889d9         mov rcx, rbx
0x0000481b      4889ef         mov rdi, rbp
0x0000481e      4889c2         mov rdx, rax
0x00004821      5b             pop rbx
0x00004822      5d             pop rbp
0x00004823      415c           pop r12
0x00004825      415d           pop r13
0x00004827      415e           pop r14
0x00004829      415f           pop r15
0x0000482b      be01000000     mov esi, 1
0x00004830      31c0           xor eax, eax
0x00004832      e9d9cfffff     jmp sym.imp.__fprintf_chk
0x00004837      660f1f840000.  nop word [rax + rax]
0x00004840      488d35511900.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6198 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004847      ba05000000     mov edx, 5
0x0000484c      31ff           xor edi, edi
0x0000484e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004852      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004856      4c8b6308       mov r12, qword [rbx + 8]
0x0000485a      488b1b         mov rbx, qword [rbx]
0x0000485d      e87ecdffff     call sym.imp.dcgettext
0x00004862      4883ec08       sub rsp, 8
0x00004866      4156           push r14
0x00004868      4889c2         mov rdx, rax
0x0000486b      4d89e9         mov r9, r13
0x0000486e      4d89e0         mov r8, r12
0x00004871      4889d9         mov rcx, rbx
0x00004874      4889ef         mov rdi, rbp
0x00004877      be01000000     mov esi, 1
0x0000487c      31c0           xor eax, eax
0x0000487e      e88dcfffff     call sym.imp.__fprintf_chk
0x00004883      58             pop rax
0x00004884      5a             pop rdx
0x00004885      4883c428       add rsp, 0x28
0x00004889      5b             pop rbx
0x0000488a      5d             pop rbp
0x0000488b      415c           pop r12
0x0000488d      415d           pop r13
0x0000488f      415e           pop r14
0x00004891      415f           pop r15
0x00004893      c3             ret
0x00004894      0f1f4000       nop dword [rax]
0x00004898      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000489c      488d35151900.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x61b8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000048a3      ba05000000     mov edx, 5
0x000048a8      31ff           xor edi, edi
0x000048aa      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048ae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048b2      4c8b6308       mov r12, qword [rbx + 8]
0x000048b6      488b1b         mov rbx, qword [rbx]
0x000048b9      e822cdffff     call sym.imp.dcgettext
0x000048be      4157           push r15
0x000048c0      eba4           jmp 0x4866
0x000048c2      660f1f440000   nop word [rax + rax]
0x000048c8      4c8b4308       mov r8, qword [rbx + 8]
0x000048cc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000048d0      488d35091900.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x61e0 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000048d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000048db      4c8b7318       mov r14, qword [rbx + 0x18]
0x000048df      ba05000000     mov edx, 5
0x000048e4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000048e8      31ff           xor edi, edi
0x000048ea      488b1b         mov rbx, qword [rbx]
0x000048ed      4c890424       mov qword [rsp], r8
0x000048f1      e8eaccffff     call sym.imp.dcgettext
0x000048f6      4883ec08       sub rsp, 8
0x000048fa      4d89e9         mov r9, r13
0x000048fd      4154           push r12
0x000048ff      4157           push r15
0x00004901      4156           push r14
0x00004903      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004908      4889d9         mov rcx, rbx
0x0000490b      4889c2         mov rdx, rax
0x0000490e      4889ef         mov rdi, rbp
0x00004911      be01000000     mov esi, 1
0x00004916      31c0           xor eax, eax
0x00004918      e8f3ceffff     call sym.imp.__fprintf_chk
0x0000491d      4883c420       add rsp, 0x20
0x00004921      4883c428       add rsp, 0x28
0x00004925      5b             pop rbx
0x00004926      5d             pop rbp
0x00004927      415c           pop r12
0x00004929      415d           pop r13
0x0000492b      415e           pop r14
0x0000492d      415f           pop r15
0x0000492f      c3             ret
0x00004930      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004934      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004938      488d35c91800.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6208 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000493f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004943      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004947      ba05000000     mov edx, 5
0x0000494c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004950      4c8b4308       mov r8, qword [rbx + 8]
0x00004954      31ff           xor edi, edi
0x00004956      4c894c2408     mov qword [rsp + 8], r9
0x0000495b      488b1b         mov rbx, qword [rbx]
0x0000495e      4c890424       mov qword [rsp], r8
0x00004962      e879ccffff     call sym.imp.dcgettext
0x00004967      4155           push r13
0x00004969      4154           push r12
0x0000496b      4157           push r15
0x0000496d      4156           push r14
0x0000496f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004974      eb8d           jmp 0x4903
0x00004976      662e0f1f8400.  nop word cs:[rax + rax]
0x00004980      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004984      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004988      ba05000000     mov edx, 5
0x0000498d      488b4310       mov rax, qword [rbx + 0x10]
0x00004991      4c8b4308       mov r8, qword [rbx + 8]
0x00004995      488d35041900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x62a0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000499c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000049a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000049a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000049a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000049ac      4c89542418     mov qword [rsp + 0x18], r10
0x000049b1      4c894c2410     mov qword [rsp + 0x10], r9
0x000049b6      48890424       mov qword [rsp], rax
0x000049ba      4c89442408     mov qword [rsp + 8], r8
0x000049bf      488b1b         mov rbx, qword [rbx]
0x000049c2      e98bfdffff     jmp 0x4752
0x000049c7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000049d0      4531c9         xor r9d, r9d
0x000049d3      49833800       cmp qword [r8], 0
0x000049d7      7412           je 0x49eb
0x000049d9      0f1f80000000.  nop dword [rax]
0x000049e0      4983c101       add r9, 1
0x000049e4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000049e9      75f5           jne 0x49e0
0x000049eb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000049f0      4883ec68       sub rsp, 0x68
0x000049f4      4d89c2         mov r10, r8
0x000049f7      4531c9         xor r9d, r9d
0x000049fa      64488b042528.  mov rax, qword fs:[0x28]
0x00004a03      4889442458     mov qword [rsp + 0x58], rax
0x00004a08      31c0           xor eax, eax
0x00004a0a      4989e0         mov r8, rsp
0x00004a0d      0f1f00         nop dword [rax]
0x00004a10      418b02         mov eax, dword [r10]
0x00004a13      83f82f         cmp eax, 0x2f
0x00004a16      7742           ja 0x4a5a
0x00004a18      4189c3         mov r11d, eax
0x00004a1b      4d035a10       add r11, qword [r10 + 0x10]
0x00004a1f      83c008         add eax, 8
0x00004a22      418902         mov dword [r10], eax
0x00004a25      498b03         mov rax, qword [r11]
0x00004a28      4885c0         test rax, rax
0x00004a2b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004a2f      740a           je 0x4a3b
0x00004a31      4983c101       add r9, 1
0x00004a35      4983f90a       cmp r9, 0xa
0x00004a39      75d5           jne 0x4a10
0x00004a3b      e870fbffff     call sym.version_etc_arn
0x00004a40      488b442458     mov rax, qword [rsp + 0x58]
0x00004a45      644833042528.  xor rax, qword fs:[0x28]
0x00004a4e      7505           jne 0x4a55
0x00004a50      4883c468       add rsp, 0x68
0x00004a54      c3             ret
0x00004a55      e8b6cbffff     call sym.imp.__stack_chk_fail
0x00004a5a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004a5e      498d4308       lea rax, [r11 + 8]
0x00004a62      49894208       mov qword [r10 + 8], rax
0x00004a66      ebbd           jmp 0x4a25
0x00004a68      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004a70      55             push rbp
0x00004a71      53             push rbx
0x00004a72      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004a78      4531db         xor r11d, r11d
0x00004a7b      4881ecb80000.  sub rsp, 0xb8
0x00004a82      64488b042528.  mov rax, qword fs:[0x28]
0x00004a8b      4889442478     mov qword [rsp + 0x78], rax
0x00004a90      31c0           xor eax, eax
0x00004a92      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004a9a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004aa2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004aaa      4c8d442420     lea r8, [rsp + 0x20]
0x00004aaf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004ab7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004abf      4889442410     mov qword [rsp + 0x10], rax
0x00004ac4      488d84248000.  lea rax, [rsp + 0x80]
0x00004acc      4531c9         xor r9d, r9d
0x00004acf      4889442418     mov qword [rsp + 0x18], rax
0x00004ad4      4889c5         mov rbp, rax
0x00004ad7      660f1f840000.  nop word [rax + rax]
0x00004ae0      4183fa2f       cmp r10d, 0x2f
0x00004ae4      7756           ja 0x4b3c
0x00004ae6      4489d0         mov eax, r10d
0x00004ae9      41bb01000000   mov r11d, 1
0x00004aef      4183c208       add r10d, 8
0x00004af3      4801e8         add rax, rbp
0x00004af6      488b00         mov rax, qword [rax]
0x00004af9      4885c0         test rax, rax
0x00004afc      4b8904c8       mov qword [r8 + r9*8], rax
0x00004b00      740a           je 0x4b0c
0x00004b02      4983c101       add r9, 1
0x00004b06      4983f90a       cmp r9, 0xa
0x00004b0a      75d4           jne 0x4ae0
0x00004b0c      4584db         test r11b, r11b
0x00004b0f      7524           jne 0x4b35
0x00004b11      e89afaffff     call sym.version_etc_arn
0x00004b16      488b442478     mov rax, qword [rsp + 0x78]
0x00004b1b      644833042528.  xor rax, qword fs:[0x28]
0x00004b24      750a           jne 0x4b30
0x00004b26      4881c4b80000.  add rsp, 0xb8
0x00004b2d      5b             pop rbx
0x00004b2e      5d             pop rbp
0x00004b2f      c3             ret
0x00004b30      e8dbcaffff     call sym.imp.__stack_chk_fail
0x00004b35      4489542408     mov dword [rsp + 8], r10d
0x00004b3a      ebd5           jmp 0x4b11
0x00004b3c      4889d8         mov rax, rbx
0x00004b3f      4883c308       add rbx, 8
0x00004b43      ebb1           jmp 0x4af6
0x00004b45      90             nop
0x00004b46      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004b50      53             push rbx
0x00004b51      488d352a1500.  lea rsi, str.Report_bugs_to:__s         ; 0x6082 ; "\nReport bugs to: %s\n"
0x00004b58      ba05000000     mov edx, 5
0x00004b5d      31ff           xor edi, edi
0x00004b5f      e87ccaffff     call sym.imp.dcgettext
0x00004b64      488d152c1500.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6097 ; "bug-coreutils@gnu.org"
0x00004b6b      4889c6         mov rsi, rax
0x00004b6e      bf01000000     mov edi, 1
0x00004b73      31c0           xor eax, eax
0x00004b75      e816ccffff     call sym.imp.__printf_chk
0x00004b7a      488d352c1500.  lea rsi, str.s_home_page:___s           ; 0x60ad ; "%s home page: <%s>\n"
0x00004b81      ba05000000     mov edx, 5
0x00004b86      31ff           xor edi, edi
0x00004b88      e853caffff     call sym.imp.dcgettext
0x00004b8d      488d0d540e00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x59e8 ; "https://www.gnu.org/software/coreutils/"
0x00004b94      488d15620900.  lea rdx, str.GNU_coreutils              ; 0x54fd ; "GNU coreutils"
0x00004b9b      4889c6         mov rsi, rax
0x00004b9e      bf01000000     mov edi, 1
0x00004ba3      31c0           xor eax, eax
0x00004ba5      e8e6cbffff     call sym.imp.__printf_chk
0x00004baa      488b1df73420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00004bb1      488d35281700.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x62e0 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004bb8      31ff           xor edi, edi
0x00004bba      ba05000000     mov edx, 5
0x00004bbf      e81ccaffff     call sym.imp.dcgettext
0x00004bc4      4889de         mov rsi, rbx
0x00004bc7      4889c7         mov rdi, rax
0x00004bca      5b             pop rbx
0x00004bcb      e9f0caffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004bd0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004bd1      4889fb         mov rbx, rdi
0x00004bd4      e837cbffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004bd9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004bdc      7505           jne 0x4be3
0x00004bde      4885db         test rbx, rbx
0x00004be1      7502           jne 0x4be5
0x00004be3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004be4      c3             ret
0x00004be5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004bea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004bf0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004bf3      48f7e6         mul rsi
0x00004bf6      4889c7         mov rdi, rax
0x00004bf9      0f90c0         seto al
0x00004bfc      4885ff         test rdi, rdi
0x00004bff      780a           js 0x4c0b
0x00004c01      0fb6c0         movzx eax, al
0x00004c04      4885c0         test rax, rax
0x00004c07      7502           jne 0x4c0b
0x00004c09      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004c0b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004c0f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004c14      6690           nop
0x00004c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004c20      ebae           jmp sym.xmalloc
0x00004c22      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004c26      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004c30      4885f6         test rsi, rsi
0x00004c33      53             push rbx
0x00004c34      4889f3         mov rbx, rsi
0x00004c37      7505           jne 0x4c3e
0x00004c39      4885ff         test rdi, rdi
0x00004c3c      751a           jne 0x4c58
0x00004c3e      4889de         mov rsi, rbx
0x00004c41      e81acbffff     call sym.imp.realloc
0x00004c46      4885c0         test rax, rax
0x00004c49      7505           jne 0x4c50
0x00004c4b      4885db         test rbx, rbx
0x00004c4e      7511           jne 0x4c61                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004c50      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004c51      c3             ret
0x00004c52      660f1f440000   nop word [rax + rax]
0x00004c58      e8d3c8ffff     call sym.imp.free
0x00004c5d      31c0           xor eax, eax
0x00004c5f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004c60      c3             ret
0x00004c61      e8ba010000     call sym.xalloc_die
0x00004c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004c70      4889f0         mov rax, rsi
0x00004c73      48f7e2         mul rdx
0x00004c76      4889c6         mov rsi, rax
0x00004c79      0f90c0         seto al
0x00004c7c      4885f6         test rsi, rsi
0x00004c7f      780a           js 0x4c8b
0x00004c81      0fb6c0         movzx eax, al
0x00004c84      4885c0         test rax, rax
0x00004c87      7502           jne 0x4c8b
0x00004c89      eba5           jmp sym.xrealloc
0x00004c8b      4883ec08       sub rsp, 8
0x00004c8f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004c94      6690           nop
0x00004c96      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004ca0      4885ff         test rdi, rdi
0x00004ca3      4989d1         mov r9, rdx
0x00004ca6      488b0e         mov rcx, qword [rsi]
0x00004ca9      7435           je 0x4ce0
0x00004cab      31d2           xor edx, edx
0x00004cad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004cb7      49f7f1         div r9
0x00004cba      4839c8         cmp rax, rcx
0x00004cbd      763c           jbe 0x4cfb
0x00004cbf      4889c8         mov rax, rcx
0x00004cc2      48d1e8         shr rax, 1
0x00004cc5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004cca      48890e         mov qword [rsi], rcx
0x00004ccd      490fafc9       imul rcx, r9
0x00004cd1      4889ce         mov rsi, rcx
0x00004cd4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004cd9      0f1f80000000.  nop dword [rax]
0x00004ce0      4885c9         test rcx, rcx
0x00004ce3      7423           je 0x4d08
0x00004ce5      4889c8         mov rax, rcx
0x00004ce8      49f7e1         mul r9
0x00004ceb      0f90c2         seto dl
0x00004cee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004cf1      0fb6d2         movzx edx, dl
0x00004cf4      7805           js 0x4cfb
0x00004cf6      4885d2         test rdx, rdx
0x00004cf9      74cf           je 0x4cca
0x00004cfb      4883ec08       sub rsp, 8
0x00004cff      e81c010000     call sym.xalloc_die
0x00004d04      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004d08      31d2           xor edx, edx
0x00004d0a      b880000000     mov eax, 0x80
0x00004d0f      4531c0         xor r8d, r8d
0x00004d12      49f7f1         div r9
0x00004d15      4885c0         test rax, rax
0x00004d18      410f94c0       sete r8b
0x00004d1c      498d0c00       lea rcx, [r8 + rax]
0x00004d20      ebc3           jmp 0x4ce5
0x00004d22      0f1f4000       nop dword [rax]
0x00004d26      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004d30      4885ff         test rdi, rdi
0x00004d33      488b06         mov rax, qword [rsi]
0x00004d36      7428           je 0x4d60
0x00004d38      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004d42      4839d0         cmp rax, rdx
0x00004d45      772a           ja 0x4d71
0x00004d47      4889c2         mov rdx, rax
0x00004d4a      48d1ea         shr rdx, 1
0x00004d4d      488d440201     lea rax, [rdx + rax + 1]
0x00004d52      488906         mov qword [rsi], rax
0x00004d55      4889c6         mov rsi, rax
0x00004d58      e9d3feffff     jmp sym.xrealloc
0x00004d5d      0f1f00         nop dword [rax]
0x00004d60      4885c0         test rax, rax
0x00004d63      ba80000000     mov edx, 0x80
0x00004d68      480f44c2       cmove rax, rdx
0x00004d6c      4885c0         test rax, rax
0x00004d6f      79e1           jns 0x4d52
0x00004d71      4883ec08       sub rsp, 8
0x00004d75      e8a6000000     call sym.xalloc_die
0x00004d7a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004d80      53             push rbx
0x00004d81      4889fb         mov rbx, rdi
0x00004d84      e847feffff     call sym.xmalloc
0x00004d89      4889da         mov rdx, rbx
0x00004d8c      31f6           xor esi, esi
0x00004d8e      4889c7         mov rdi, rax
0x00004d91      5b             pop rbx
0x00004d92      e9d9c8ffff     jmp sym.imp.memset
0x00004d97      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004da0      4889f8         mov rax, rdi
0x00004da3      4883ec08       sub rsp, 8
0x00004da7      48f7e6         mul rsi
0x00004daa      0f90c2         seto dl
0x00004dad      4885c0         test rax, rax
0x00004db0      7817           js 0x4dc9
0x00004db2      0fb6d2         movzx edx, dl
0x00004db5      4885d2         test rdx, rdx
0x00004db8      750f           jne 0x4dc9
0x00004dba      e811c9ffff     call sym.imp.calloc
0x00004dbf      4885c0         test rax, rax
0x00004dc2      7405           je 0x4dc9
0x00004dc4      4883c408       add rsp, 8
0x00004dc8      c3             ret
0x00004dc9      e852000000     call sym.xalloc_die
0x00004dce      6690           nop
;-- xmemdup:
0x00004dd0      55             push rbp
0x00004dd1      53             push rbx
0x00004dd2      4889fd         mov rbp, rdi
0x00004dd5      4889f7         mov rdi, rsi
0x00004dd8      4889f3         mov rbx, rsi
0x00004ddb      4883ec08       sub rsp, 8
0x00004ddf      e8ecfdffff     call sym.xmalloc
0x00004de4      4883c408       add rsp, 8
0x00004de8      4889da         mov rdx, rbx
0x00004deb      4889ee         mov rsi, rbp
0x00004dee      5b             pop rbx
0x00004def      5d             pop rbp
0x00004df0      4889c7         mov rdi, rax
0x00004df3      e9f8c8ffff     jmp sym.imp.memcpy
0x00004df8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00004e00      53             push rbx
0x00004e01      4889fb         mov rbx, rdi
0x00004e04      e8f7c7ffff     call sym.imp.strlen
0x00004e09      4889df         mov rdi, rbx
0x00004e0c      488d7001       lea rsi, [rax + 1]
0x00004e10      5b             pop rbx
0x00004e11      ebbd           jmp sym.xmemdup
0x00004e13      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e1d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00004e20      488d35681500.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x638f ; "memory exhausted"
0x00004e27      4883ec08       sub rsp, 8
0x00004e2b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00004e30      31ff           xor edi, edi
0x00004e32      e8a9c7ffff     call sym.imp.dcgettext
0x00004e37      8b3de3312000   mov edi, dword [obj.exit_failure]       ; [0x208020:4]=1
0x00004e3d      488d15b80c00.  lea rdx, [0x00005afc]                   ; "%s"
0x00004e44      4889c1         mov rcx, rax
0x00004e47      31f6           xor esi, esi
0x00004e49      31c0           xor eax, eax
0x00004e4b      e860c9ffff     call sym.imp.error
0x00004e50      e8ebc6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00004e55      662e0f1f8400.  nop word cs:[rax + rax]
0x00004e5f      90             nop
;-- rpl_fclose:
0x00004e60      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00004e62      55             push rbp
0x00004e63      53             push rbx
0x00004e64      4889fb         mov rbx, rdi
0x00004e67      e894c8ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00004e6c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00004e6e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00004e71      7854           js 0x4ec7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00004e73      e8c8c8ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00004e78      85c0           test eax, eax
0x00004e7a      752c           jne 0x4ea8
0x00004e7c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00004e7f      e8dc020000     call sym.rpl_fflush
0x00004e84      85c0           test eax, eax
0x00004e86      743c           je 0x4ec4
0x00004e88      e8c3c6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00004e8d      448b20         mov r12d, dword [rax]
0x00004e90      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004e93      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00004e96      e825c7ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00004e9b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00004e9e      7530           jne 0x4ed0
0x00004ea0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004ea1      5d             pop rbp
0x00004ea2      415c           pop r12
0x00004ea4      c3             ret
0x00004ea5      0f1f00         nop dword [rax]
0x00004ea8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00004eab      e850c8ffff     call sym.imp.fileno
0x00004eb0      31f6           xor esi, esi
0x00004eb2      ba01000000     mov edx, 1
0x00004eb7      89c7           mov edi, eax
0x00004eb9      e8a2c7ffff     call sym.imp.lseek
0x00004ebe      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004ec2      75b8           jne 0x4e7c
0x00004ec4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00004ec7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00004ec8      5d             pop rbp
0x00004ec9      415c           pop r12
0x00004ecb      e9f0c6ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00004ed0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00004ed4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00004ed9      ebc5           jmp 0x4ea0
0x00004edb      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x00004ee0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x00004ee2      55             push rbp
0x00004ee3      89fd           mov ebp, edi
0x00004ee5      53             push rbx
0x00004ee6      4883ec50       sub rsp, 0x50
0x00004eea      64488b042528.  mov rax, qword fs:[0x28]
0x00004ef3      4889442418     mov qword [rsp + 0x18], rax
0x00004ef8      31c0           xor eax, eax
0x00004efa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x00004eff      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x00004f01      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x00004f06      48894c2438     mov qword [rsp + 0x38], rcx
0x00004f0b      4c89442440     mov qword [rsp + 0x40], r8
0x00004f10      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x00004f15      488d442420     lea rax, [rsp + 0x20]
0x00004f1a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x00004f1f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x00004f26      4889442410     mov qword [rsp + 0x10], rax
0x00004f2b      0f8401020000   je 0x5132                               ; ../coreutils-8.31/lib/fcntl.c:210
0x00004f31      81fe06040000   cmp esi, 0x406
0x00004f37      7547           jne 0x4f80
0x00004f39      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x00004f3e      833d13332000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x208258:4]=0
0x00004f45      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x1a80 rip
0x00004f4c      448b6010       mov r12d, dword [rax + 0x10]
0x00004f50      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x00004f53      0f882a010000   js 0x5083                               ; ../coreutils-8.31/lib/fcntl.c:507
0x00004f59      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00004f5b      be06040000     mov esi, 0x406
0x00004f60      e82bc6ffff     call sym.imp.fcntl
0x00004f65      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x00004f67      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x00004f69      0f8889010000   js 0x50f8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x00004f6f      c705df322000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x208258:4]=0
0x00004f79      eb45           jmp 0x4fc0
0x00004f7b      0f1f440000     nop dword [rax + rax]
0x00004f80      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x00004f83      742b           je 0x4fb0
0x00004f85      7f59           jg 0x4fe0
0x00004f87      83fe04         cmp esi, 4
0x00004f8a      0f84d0000000   je 0x5060
0x00004f90      0f8fba000000   jg 0x5050
0x00004f96      83fe02         cmp esi, 2
0x00004f99      0f84c1000000   je 0x5060
0x00004f9f      7f0f           jg 0x4fb0
0x00004fa1      83fe01         cmp esi, 1
0x00004fa4      7562           jne 0x5008
0x00004fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004fb0      89ef           mov edi, ebp
0x00004fb2      31c0           xor eax, eax
0x00004fb4      e8d7c5ffff     call sym.imp.fcntl
0x00004fb9      89c3           mov ebx, eax
0x00004fbb      0f1f440000     nop dword [rax + rax]
0x00004fc0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x00004fc5      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004fce      89d8           mov eax, ebx
0x00004fd0      0f8557010000   jne 0x512d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x00004fd6      4883c450       add rsp, 0x50
0x00004fda      5b             pop rbx
0x00004fdb      5d             pop rbp
0x00004fdc      415c           pop r12
0x00004fde      c3             ret
0x00004fdf      90             nop
0x00004fe0      81fe07040000   cmp esi, 0x407
0x00004fe6      7f48           jg 0x5030
0x00004fe8      81fe06040000   cmp esi, 0x406
0x00004fee      7d70           jge 0x5060
0x00004ff0      81fe01040000   cmp esi, 0x401
0x00004ff6      74b8           je 0x4fb0
0x00004ff8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x00004ffe      7460           je 0x5060
0x00005000      81fe00040000   cmp esi, 0x400
0x00005006      7458           je 0x5060
0x00005008      8b0424         mov eax, dword [rsp]
0x0000500b      83f82f         cmp eax, 0x2f
0x0000500e      0f8736010000   ja 0x514a
0x00005014      4803442410     add rax, qword [rsp + 0x10]
0x00005019      488b10         mov rdx, qword [rax]
0x0000501c      89ef           mov edi, ebp
0x0000501e      31c0           xor eax, eax
0x00005020      e86bc5ffff     call sym.imp.fcntl
0x00005025      89c3           mov ebx, eax
0x00005027      eb97           jmp 0x4fc0
0x00005029      0f1f80000000.  nop dword [rax]
0x00005030      81fe09040000   cmp esi, 0x409
0x00005036      7428           je 0x5060
0x00005038      0f8c72ffffff   jl 0x4fb0
0x0000503e      81fe0a040000   cmp esi, 0x40a
0x00005044      75c2           jne 0x5008
0x00005046      e965ffffff     jmp 0x4fb0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000504b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x00005050      83fe09         cmp esi, 9
0x00005053      0f8457ffffff   je 0x4fb0
0x00005059      7f05           jg 0x5060
0x0000505b      83fe08         cmp esi, 8
0x0000505e      75a8           jne 0x5008
0x00005060      8b0424         mov eax, dword [rsp]
0x00005063      83f82f         cmp eax, 0x2f
0x00005066      0f87e8000000   ja 0x5154
0x0000506c      4803442410     add rax, qword [rsp + 0x10]
0x00005071      8b10           mov edx, dword [rax]
0x00005073      89ef           mov edi, ebp
0x00005075      31c0           xor eax, eax
0x00005077      e814c5ffff     call sym.imp.fcntl
0x0000507c      89c3           mov ebx, eax
0x0000507e      e93dffffff     jmp 0x4fc0
0x00005083      31f6           xor esi, esi
0x00005085      31c0           xor eax, eax
0x00005087      e804c5ffff     call sym.imp.fcntl
0x0000508c      85c0           test eax, eax
0x0000508e      89c3           mov ebx, eax
0x00005090      0f882affffff   js 0x4fc0
0x00005096      833dbb312000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x208258:4]=0
0x0000509d      0f851dffffff   jne 0x4fc0
0x000050a3      31c0           xor eax, eax
0x000050a5      be01000000     mov esi, 1
0x000050aa      89df           mov edi, ebx
0x000050ac      e8dfc4ffff     call sym.imp.fcntl
0x000050b1      85c0           test eax, eax
0x000050b3      781c           js 0x50d1
0x000050b5      83c801         or eax, 1
0x000050b8      be02000000     mov esi, 2
0x000050bd      89df           mov edi, ebx
0x000050bf      89c2           mov edx, eax
0x000050c1      31c0           xor eax, eax
0x000050c3      e8c8c4ffff     call sym.imp.fcntl
0x000050c8      83f8ff         cmp eax, 0xffffffff
0x000050cb      0f85effeffff   jne 0x4fc0
0x000050d1      e87ac4ffff     call sym.imp.__errno_location
0x000050d6      448b20         mov r12d, dword [rax]
0x000050d9      4889c5         mov rbp, rax
0x000050dc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x000050de      e89dc5ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x000050e3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000050e8      44896500       mov dword [rbp], r12d
0x000050ec      e9cffeffff     jmp 0x4fc0
0x000050f1      0f1f80000000.  nop dword [rax]
0x000050f8      e853c4ffff     call sym.imp.__errno_location
0x000050fd      833816         cmp dword [rax], 0x16
0x00005100      0f8569feffff   jne 0x4f6f
0x00005106      31f6           xor esi, esi
0x00005108      31c0           xor eax, eax
0x0000510a      4489e2         mov edx, r12d
0x0000510d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000510f      e87cc4ffff     call sym.imp.fcntl
0x00005114      85c0           test eax, eax
0x00005116      89c3           mov ebx, eax
0x00005118      0f88a2feffff   js 0x4fc0
0x0000511e      c70530312000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x208258:4]=0
0x00005128      e976ffffff     jmp 0x50a3
0x0000512d      e8dec4ffff     call sym.imp.__stack_chk_fail
0x00005132      488b442410     mov rax, qword [rsp + 0x10]
0x00005137      31f6           xor esi, esi
0x00005139      8b5010         mov edx, dword [rax + 0x10]
0x0000513c      31c0           xor eax, eax
0x0000513e      e84dc4ffff     call sym.imp.fcntl
0x00005143      89c3           mov ebx, eax
0x00005145      e976feffff     jmp 0x4fc0
0x0000514a      488b442408     mov rax, qword [rsp + 8]
0x0000514f      e9c5feffff     jmp 0x5019
0x00005154      488b442408     mov rax, qword [rsp + 8]
0x00005159      e913ffffff     jmp 0x5071
0x0000515e      6690           nop
;-- rpl_fflush:
0x00005160      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005163      53             push rbx
0x00005164      4889fb         mov rbx, rdi
0x00005167      7411           je 0x517a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005169      e8d2c5ffff     call sym.imp.__freading
0x0000516e      85c0           test eax, eax
0x00005170      7408           je 0x517a
0x00005172      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005178      750e           jne 0x5188
0x0000517a      4889df         mov rdi, rbx
0x0000517d      5b             pop rbx
0x0000517e      e99dc5ffff     jmp sym.imp.fflush
0x00005183      0f1f440000     nop dword [rax + rax]
0x00005188      4889df         mov rdi, rbx
0x0000518b      ba01000000     mov edx, 1
0x00005190      31f6           xor esi, esi
0x00005192      e809000000     call sym.rpl_fseeko
0x00005197      4889df         mov rdi, rbx
0x0000519a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000519b      e980c5ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000051a0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000051a4      48394710       cmp qword [rdi + 0x10], rax
0x000051a8      7406           je 0x51b0                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000051aa      e911c6ffff     jmp sym.imp.fseeko
0x000051af      90             nop
0x000051b0      488b4720       mov rax, qword [rdi + 0x20]
0x000051b4      48394728       cmp qword [rdi + 0x28], rax
0x000051b8      75f0           jne 0x51aa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x000051ba      48837f4800     cmp qword [rdi + 0x48], 0
0x000051bf      75e9           jne 0x51aa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x000051c1      4154           push r12
0x000051c3      55             push rbp
0x000051c4      4189d4         mov r12d, edx
0x000051c7      53             push rbx
0x000051c8      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x000051cb      4889fb         mov rbx, rdi
0x000051ce      e82dc5ffff     call sym.imp.fileno
0x000051d3      4489e2         mov edx, r12d
0x000051d6      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x000051d9      89c7           mov edi, eax
0x000051db      e880c4ffff     call sym.imp.lseek
0x000051e0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000051e4      740c           je 0x51f2
0x000051e6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000051e9      488983900000.  mov qword [rbx + 0x90], rax
0x000051f0      31c0           xor eax, eax
0x000051f2      5b             pop rbx
0x000051f3      5d             pop rbp
0x000051f4      415c           pop r12
0x000051f6      c3             ret
0x000051f7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005200      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005202      4154           push r12
0x00005204      4989f5         mov r13, rsi
0x00005207      55             push rbp
0x00005208      53             push rbx
0x00005209      4889fb         mov rbx, rdi
0x0000520c      4989d4         mov r12, rdx
0x0000520f      4883ec18       sub rsp, 0x18
0x00005213      64488b042528.  mov rax, qword fs:[0x28]
0x0000521c      4889442408     mov qword [rsp + 8], rax
0x00005221      31c0           xor eax, eax
0x00005223      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005228      4885ff         test rdi, rdi
0x0000522b      480f44d8       cmove rbx, rax
0x0000522f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005232      e8f9c3ffff     call sym.imp.mbrtowc
0x00005237      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x0000523b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x0000523e      7620           jbe 0x5260                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005240      4d85e4         test r12, r12
0x00005243      741b           je 0x5260
0x00005245      31ff           xor edi, edi
0x00005247      e8c4000000     call sym.hard_locale
0x0000524c      84c0           test al, al
0x0000524e      7510           jne 0x5260
0x00005250      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005255      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000525a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000525c      0f1f4000       nop dword [rax]
0x00005260      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005265      644833142528.  xor rdx, qword fs:[0x28]
0x0000526e      4889e8         mov rax, rbp
0x00005271      750b           jne 0x527e
0x00005273      4883c418       add rsp, 0x18
0x00005277      5b             pop rbx
0x00005278      5d             pop rbp
0x00005279      415c           pop r12
0x0000527b      415d           pop r13
0x0000527d      c3             ret
0x0000527e      e88dc3ffff     call sym.imp.__stack_chk_fail
0x00005283      662e0f1f8400.  nop word cs:[rax + rax]
0x0000528d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005290      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005292      55             push rbp
0x00005293      4889fd         mov rbp, rdi
0x00005296      53             push rbx
0x00005297      e8e4c2ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000529c      8b5d00         mov ebx, dword [rbp]
0x0000529f      4889ef         mov rdi, rbp
0x000052a2      4989c4         mov r12, rax
0x000052a5      e8b6fbffff     call sym.rpl_fclose
0x000052aa      83e320         and ebx, 0x20                           ; "@"
0x000052ad      85db           test ebx, ebx
0x000052af      7517           jne 0x52c8
0x000052b1      85c0           test eax, eax
0x000052b3      740a           je 0x52bf                               ; stdio.h:-186
0x000052b5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000052b8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000052bd      7439           je 0x52f8
0x000052bf      5b             pop rbx
0x000052c0      5d             pop rbp
0x000052c1      415c           pop r12
0x000052c3      c3             ret
0x000052c4      0f1f4000       nop dword [rax]
0x000052c8      85c0           test eax, eax
0x000052ca      751c           jne 0x52e8
0x000052cc      e87fc2ffff     call sym.imp.__errno_location
0x000052d1      c70000000000   mov dword [rax], 0
0x000052d7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000052dc      5b             pop rbx
0x000052dd      5d             pop rbp
0x000052de      415c           pop r12
0x000052e0      c3             ret
0x000052e1      0f1f80000000.  nop dword [rax]
0x000052e8      5b             pop rbx
0x000052e9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000052ee      5d             pop rbp                                 ; stdio.h:-186
0x000052ef      415c           pop r12
0x000052f1      c3             ret
0x000052f2      660f1f440000   nop word [rax + rax]
0x000052f8      e853c2ffff     call sym.imp.__errno_location
0x000052fd      833809         cmp dword [rax], 9
0x00005300      5b             pop rbx
0x00005301      5d             pop rbp
0x00005302      415c           pop r12                                 ; stdio.h:-178
0x00005304      0f95c0         setne al
0x00005307      0fb6c0         movzx eax, al
0x0000530a      f7d8           neg eax
0x0000530c      c3             ret
0x0000530d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00005310      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00005314      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00005316      e865c4ffff     call sym.imp.setlocale
0x0000531b      4889c2         mov rdx, rax
0x0000531e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00005323      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00005326      741d           je 0x5345
0x00005328      488d3d711000.  lea rdi, [0x000063a0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000532f      b902000000     mov ecx, 2
0x00005334      4889d6         mov rsi, rdx
0x00005337      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005339      0f97c1         seta cl
0x0000533c      80d900         sbb cl, 0
0x0000533f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00005341      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00005343      750b           jne 0x5350
0x00005345      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00005349      c3             ret
0x0000534a      660f1f440000   nop word [rax + rax]
0x00005350      488d3d4b1000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x63a2 ; "POSIX"
0x00005357      b906000000     mov ecx, 6
0x0000535c      4889d6         mov rsi, rdx
0x0000535f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005361      0f97c0         seta al
0x00005364      1c00           sbb al, 0
0x00005366      84c0           test al, al
0x00005368      0f95c0         setne al
0x0000536b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000536f      c3             ret
;-- locale_charset:
0x00005370      4883ec08       sub rsp, 8
0x00005374      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005379      e8b2c3ffff     call sym.imp.nl_langinfo
0x0000537e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005381      741d           je 0x53a0
0x00005383      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005386      488d151b1000.  lea rdx, str.ASCII                      ; 0x63a8 ; "ASCII"
0x0000538d      480f44c2       cmove rax, rdx
0x00005391      4883c408       add rsp, 8
0x00005395      c3             ret
0x00005396      662e0f1f8400.  nop word cs:[rax + rax]
0x000053a0      488d05011000.  lea rax, str.ASCII                      ; 0x63a8 ; "ASCII"
0x000053a7      4883c408       add rsp, 8
0x000053ab      c3             ret
0x000053ac      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000053b0      4157           push r15
0x000053b2      4156           push r14
0x000053b4      4989d7         mov r15, rdx
0x000053b7      4155           push r13
0x000053b9      4154           push r12
0x000053bb      4c8d250e2720.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207ad0
0x000053c2      55             push rbp
0x000053c3      488d2d0e2720.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207ad8 ; "@\x1b"
0x000053ca      53             push rbx
0x000053cb      4189fd         mov r13d, edi
0x000053ce      4989f6         mov r14, rsi
0x000053d1      4c29e5         sub rbp, r12
0x000053d4      4883ec08       sub rsp, 8
0x000053d8      48c1fd03       sar rbp, 3
0x000053dc      e827c1ffff     call sym._init
0x000053e1      4885ed         test rbp, rbp
0x000053e4      7420           je 0x5406
0x000053e6      31db           xor ebx, ebx
0x000053e8      0f1f84000000.  nop dword [rax + rax]
0x000053f0      4c89fa         mov rdx, r15
0x000053f3      4c89f6         mov rsi, r14
0x000053f6      4489ef         mov edi, r13d
0x000053f9      41ff14dc       call qword [r12 + rbx*8]
0x000053fd      4883c301       add rbx, 1
0x00005401      4839dd         cmp rbp, rbx
0x00005404      75ea           jne 0x53f0
0x00005406      4883c408       add rsp, 8
0x0000540a      5b             pop rbx
0x0000540b      5d             pop rbp
0x0000540c      415c           pop r12
0x0000540e      415d           pop r13
0x00005410      415e           pop r14
0x00005412      415f           pop r15
0x00005414      c3             ret
0x00005415      90             nop
0x00005416      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00005420      f3c3           ret
0x00005422      662e0f1f8400.  nop word cs:[rax + rax]
0x0000542c      0f1f4000       nop dword [rax]
;-- atexit:
0x00005430      488b15d12b20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00005437      31f6           xor esi, esi
0x00005439      e9a2c3ffff     jmp sym.imp.__cxa_atexit
0x0000543e      0000           add byte [rax], al
