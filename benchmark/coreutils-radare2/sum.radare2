;-- section..plt:
;-- .plt:
0x000015b0      ff355a782000   push qword [0x00208e10]                 ; [12] -r-x section size 896 named .plt
0x000015b6      ff255c782000   jmp qword [0x00208e18]                  ; [0x208e18:8]=0
0x000015bc      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x000015c0      ff255a782000   jmp qword [reloc.__uflow]               ; [0x208e20:8]=0x15c6
0x000015c6      6800000000     push 0
0x000015cb      e9e0ffffff     jmp sym..plt
;-- imp.getenv:
0x000015d0      ff2552782000   jmp qword [reloc.getenv]                ; [0x208e28:8]=0x15d6
0x000015d6      6801000000     push 1
0x000015db      e9d0ffffff     jmp sym..plt
;-- imp.free:
0x000015e0      ff254a782000   jmp qword [reloc.free]                  ; [0x208e30:8]=0x15e6
0x000015e6      6802000000     push 2
0x000015eb      e9c0ffffff     jmp sym..plt
;-- imp.abort:
0x000015f0      ff2542782000   jmp qword [reloc.abort]                 ; [0x208e38:8]=0x15f6
0x000015f6      6803000000     push 3
0x000015fb      e9b0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001600      ff253a782000   jmp qword [reloc.__errno_location]      ; [0x208e40:8]=0x1606
0x00001606      6804000000     push 4
0x0000160b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001610      ff2532782000   jmp qword [reloc.strncmp]               ; [0x208e48:8]=0x1616
0x00001616      6805000000     push 5
0x0000161b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001620      ff252a782000   jmp qword [reloc._exit]                 ; [0x208e50:8]=0x1626 ; "&\x16"
0x00001626      6806000000     push 6
0x0000162b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001630      ff2522782000   jmp qword [reloc.__fpending]            ; [0x208e58:8]=0x1636 ; "6\x16"
0x00001636      6807000000     push 7
0x0000163b      e970ffffff     jmp sym..plt
;-- imp.localeconv:
0x00001640      ff251a782000   jmp qword [reloc.localeconv]            ; [0x208e60:8]=0x1646 ; "F\x16"
0x00001646      6808000000     push 8
0x0000164b      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001650      ff2512782000   jmp qword [reloc.textdomain]            ; [0x208e68:8]=0x1656 ; "V\x16"
0x00001656      6809000000     push 9
0x0000165b      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x00001660      ff250a782000   jmp qword [reloc.fclose]                ; [0x208e70:8]=0x1666 ; "f\x16"
0x00001666      680a000000     push 0xa
0x0000166b      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001670      ff2502782000   jmp qword [reloc.bindtextdomain]        ; [0x208e78:8]=0x1676 ; "v\x16"
0x00001676      680b000000     push 0xb
0x0000167b      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001680      ff25fa772000   jmp qword [reloc.dcgettext]             ; [0x208e80:8]=0x1686
0x00001686      680c000000     push 0xc
0x0000168b      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001690      ff25f2772000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x208e88:8]=0x1696
0x00001696      680d000000     push 0xd
0x0000169b      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x000016a0      ff25ea772000   jmp qword [reloc.strlen]                ; [0x208e90:8]=0x16a6
0x000016a6      680e000000     push 0xe
0x000016ab      e900ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000016b0      ff25e2772000   jmp qword [reloc.__stack_chk_fail]      ; [0x208e98:8]=0x16b6
0x000016b6      680f000000     push 0xf
0x000016bb      e9f0feffff     jmp sym..plt
;-- imp.getopt_long:
0x000016c0      ff25da772000   jmp qword [reloc.getopt_long]           ; [0x208ea0:8]=0x16c6
0x000016c6      6810000000     push 0x10
0x000016cb      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x000016d0      ff25d2772000   jmp qword [reloc.mbrtowc]               ; [0x208ea8:8]=0x16d6
0x000016d6      6811000000     push 0x11
0x000016db      e9d0feffff     jmp sym..plt
;-- imp.strchr:
0x000016e0      ff25ca772000   jmp qword [reloc.strchr]                ; [0x208eb0:8]=0x16e6
0x000016e6      6812000000     push 0x12
0x000016eb      e9c0feffff     jmp sym..plt
;-- imp.__overflow:
0x000016f0      ff25c2772000   jmp qword [reloc.__overflow]            ; [0x208eb8:8]=0x16f6
0x000016f6      6813000000     push 0x13
0x000016fb      e9b0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001700      ff25ba772000   jmp qword [reloc.strrchr]               ; [0x208ec0:8]=0x1706
0x00001706      6814000000     push 0x14
0x0000170b      e9a0feffff     jmp sym..plt
;-- imp.lseek:
0x00001710      ff25b2772000   jmp qword [reloc.lseek]                 ; [0x208ec8:8]=0x1716
0x00001716      6815000000     push 0x15
0x0000171b      e990feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001720      ff25aa772000   jmp qword [reloc.__assert_fail]         ; [0x208ed0:8]=0x1726 ; "&\x17"
0x00001726      6816000000     push 0x16
0x0000172b      e980feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001730      ff25a2772000   jmp qword [reloc.__strtoul_internal]    ; [0x208ed8:8]=0x1736 ; "6\x17"
0x00001736      6817000000     push 0x17
0x0000173b      e970feffff     jmp sym..plt
;-- imp.memset:
0x00001740      ff259a772000   jmp qword [reloc.memset]                ; [0x208ee0:8]=0x1746 ; "F\x17"
0x00001746      6818000000     push 0x18
0x0000174b      e960feffff     jmp sym..plt
;-- imp.close:
0x00001750      ff2592772000   jmp qword [reloc.close]                 ; [0x208ee8:8]=0x1756 ; "V\x17"
0x00001756      6819000000     push 0x19
0x0000175b      e950feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001760      ff258a772000   jmp qword [reloc.posix_fadvise]         ; [0x208ef0:8]=0x1766 ; "f\x17"
0x00001766      681a000000     push 0x1a
0x0000176b      e940feffff     jmp sym..plt
;-- imp.read:
0x00001770      ff2582772000   jmp qword [reloc.read]                  ; [0x208ef8:8]=0x1776 ; "v\x17"
0x00001776      681b000000     push 0x1b
0x0000177b      e930feffff     jmp sym..plt
;-- imp.memcmp:
0x00001780      ff257a772000   jmp qword [reloc.memcmp]                ; [0x208f00:8]=0x1786
0x00001786      681c000000     push 0x1c
0x0000178b      e920feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001790      ff2572772000   jmp qword [reloc.fputs_unlocked]        ; [0x208f08:8]=0x1796
0x00001796      681d000000     push 0x1d
0x0000179b      e910feffff     jmp sym..plt
;-- imp.calloc:
0x000017a0      ff256a772000   jmp qword [reloc.calloc]                ; [0x208f10:8]=0x17a6
0x000017a6      681e000000     push 0x1e
0x000017ab      e900feffff     jmp sym..plt
;-- imp.__memcpy_chk:
0x000017b0      ff2562772000   jmp qword [reloc.__memcpy_chk]          ; [0x208f18:8]=0x17b6
0x000017b6      681f000000     push 0x1f
0x000017bb      e9f0fdffff     jmp sym..plt
;-- imp.memcpy:
0x000017c0      ff255a772000   jmp qword [reloc.memcpy]                ; [0x208f20:8]=0x17c6
0x000017c6      6820000000     push 0x20                               ; "@"
0x000017cb      e9e0fdffff     jmp sym..plt
;-- imp.fileno:
0x000017d0      ff2552772000   jmp qword [reloc.fileno]                ; [0x208f28:8]=0x17d6
0x000017d6      6821000000     push 0x21                               ; '!'
0x000017db      e9d0fdffff     jmp sym..plt
;-- imp.malloc:
0x000017e0      ff254a772000   jmp qword [reloc.malloc]                ; [0x208f30:8]=0x17e6
0x000017e6      6822000000     push 0x22                               ; '"'
0x000017eb      e9c0fdffff     jmp sym..plt
;-- imp.fflush:
0x000017f0      ff2542772000   jmp qword [reloc.fflush]                ; [0x208f38:8]=0x17f6
0x000017f6      6823000000     push 0x23                               ; '#'
0x000017fb      e9b0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001800      ff253a772000   jmp qword [reloc.nl_langinfo]           ; [0x208f40:8]=0x1806
0x00001806      6824000000     push 0x24                               ; '$'
0x0000180b      e9a0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001810      ff2532772000   jmp qword [reloc.__freading]            ; [0x208f48:8]=0x1816
0x00001816      6825000000     push 0x25                               ; '%'
0x0000181b      e990fdffff     jmp sym..plt
;-- imp.realloc:
0x00001820      ff252a772000   jmp qword [reloc.realloc]               ; [0x208f50:8]=0x1826 ; "&\x18"
0x00001826      6826000000     push 0x26                               ; '&'
0x0000182b      e980fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001830      ff2522772000   jmp qword [reloc.setlocale]             ; [0x208f58:8]=0x1836 ; "6\x18"
0x00001836      6827000000     push 0x27                               ; '''
0x0000183b      e970fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001840      ff251a772000   jmp qword [reloc.__printf_chk]          ; [0x208f60:8]=0x1846 ; "F\x18"
0x00001846      6828000000     push 0x28                               ; '('
0x0000184b      e960fdffff     jmp sym..plt
;-- imp.setvbuf:
0x00001850      ff2512772000   jmp qword [reloc.setvbuf]               ; [0x208f68:8]=0x1856 ; "V\x18"
0x00001856      6829000000     push 0x29                               ; ')'
0x0000185b      e950fdffff     jmp sym..plt
;-- imp.memmove:
0x00001860      ff250a772000   jmp qword [reloc.memmove]               ; [0x208f70:8]=0x1866 ; "f\x18"
0x00001866      682a000000     push 0x2a                               ; '*'
0x0000186b      e940fdffff     jmp sym..plt
;-- imp.error:
0x00001870      ff2502772000   jmp qword [reloc.error]                 ; [0x208f78:8]=0x1876 ; "v\x18"
0x00001876      682b000000     push 0x2b                               ; '+'
0x0000187b      e930fdffff     jmp sym..plt
;-- imp.open:
0x00001880      ff25fa762000   jmp qword [reloc.open]                  ; [0x208f80:8]=0x1886
0x00001886      682c000000     push 0x2c                               ; ','
0x0000188b      e920fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001890      ff25f2762000   jmp qword [reloc.fseeko]                ; [0x208f88:8]=0x1896
0x00001896      682d000000     push 0x2d                               ; '-'
0x0000189b      e910fdffff     jmp sym..plt
;-- imp.fopen:
0x000018a0      ff25ea762000   jmp qword [reloc.fopen]                 ; [0x208f90:8]=0x18a6
0x000018a6      682e000000     push 0x2e                               ; '.'
0x000018ab      e900fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000018b0      ff25e2762000   jmp qword [reloc.__cxa_atexit]          ; [0x208f98:8]=0x18b6
0x000018b6      682f000000     push 0x2f                               ; '/'
0x000018bb      e9f0fcffff     jmp sym..plt
;-- imp.exit:
0x000018c0      ff25da762000   jmp qword [reloc.exit]                  ; [0x208fa0:8]=0x18c6
0x000018c6      6830000000     push 0x30                               ; '0'
0x000018cb      e9e0fcffff     jmp sym..plt
;-- imp.fwrite:
0x000018d0      ff25d2762000   jmp qword [reloc.fwrite]                ; [0x208fa8:8]=0x18d6
0x000018d6      6831000000     push 0x31                               ; '1'
0x000018db      e9d0fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000018e0      ff25ca762000   jmp qword [reloc.__fprintf_chk]         ; [0x208fb0:8]=0x18e6
0x000018e6      6832000000     push 0x32                               ; '2'
0x000018eb      e9c0fcffff     jmp sym..plt
;-- imp.mbsinit:
0x000018f0      ff25c2762000   jmp qword [reloc.mbsinit]               ; [0x208fb8:8]=0x18f6
0x000018f6      6833000000     push 0x33                               ; '3'
0x000018fb      e9b0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001900      ff25ba762000   jmp qword [reloc.iswprint]              ; [0x208fc0:8]=0x1906
0x00001906      6834000000     push 0x34                               ; '4'
0x0000190b      e9a0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001910      ff25b2762000   jmp qword [reloc.__ctype_b_loc]         ; [0x208fc8:8]=0x1916
0x00001916      6835000000     push 0x35                               ; '5'
0x0000191b      e990fcffff     jmp sym..plt
;-- imp.__sprintf_chk:
0x00001920      ff25aa762000   jmp qword [reloc.__sprintf_chk]         ; [0x208fd0:8]=0x1926 ; "&\x19"
0x00001926      6836000000     push 0x36                               ; '6'
0x0000192b      e980fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001930      .qword 0x9066002076c225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001938      0000           add byte [rax], al
0x0000193a      0000           add byte [rax], al
0x0000193c      0000           add byte [rax], al
0x0000193e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001940      4157           push r15                                ; [14] -r-x section size 18990 named .text
0x00001942      4156           push r14
0x00001944      4c8d35d57120.  lea r14, obj.longopts                   ; 0x208b20 ; "sd"
0x0000194b      4155           push r13
0x0000194d      4154           push r12
0x0000194f      4c8d251a0500.  lea r12, sym.bsd_sum_file               ; 0x1e70 ; "AWAV\xb9\x02"
0x00001956      55             push rbp
0x00001957      53             push rbx
0x00001958      89fd           mov ebp, edi
0x0000195a      4889f3         mov rbx, rsi
0x0000195d      4c8d2d0c4b00.  lea r13, [0x00006470]                   ; "rs"
0x00001964      4d89e7         mov r15, r12
0x00001967      4883ec08       sub rsp, 8
0x0000196b      488b3e         mov rdi, qword [rsi]
0x0000196e      e8ad180000     call sym.set_program_name
0x00001973      488d35675300.  lea rsi, [0x00006ce1]
0x0000197a      bf06000000     mov edi, 6
0x0000197f      e8acfeffff     call sym.imp.setlocale
0x00001984      488d35ab4a00.  lea rsi, str.usr_local_share_locale     ; 0x6436 ; "/usr/local/share/locale"
0x0000198b      488d3d7b4a00.  lea rdi, [0x0000640d]                   ; "coreutils"
0x00001992      e8d9fcffff     call sym.imp.bindtextdomain
0x00001997      488d3d6f4a00.  lea rdi, [0x0000640d]                   ; "coreutils"
0x0000199e      e8adfcffff     call sym.imp.textdomain
0x000019a3      488d3db60a00.  lea rdi, sym.close_stdout               ; 0x2460 ; "USH\x83\xec\bH\x8b=;l "
0x000019aa      e8b1490000     call sym.atexit
0x000019af      488b3df27620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000019b6      31c9           xor ecx, ecx
0x000019b8      ba01000000     mov edx, 1
0x000019bd      31f6           xor esi, esi
0x000019bf      e88cfeffff     call sym.imp.setvbuf
0x000019c4      c6051e772000.  mov byte [obj.have_read_stdin], 0       ; [0x2090e9:1]=0
0x000019cb      4531c0         xor r8d, r8d
0x000019ce      4c89f1         mov rcx, r14
0x000019d1      4c89ea         mov rdx, r13
0x000019d4      4889de         mov rsi, rbx
0x000019d7      89ef           mov edi, ebp
0x000019d9      e8e2fcffff     call sym.imp.getopt_long
0x000019de      83f8ff         cmp eax, 0xffffffff
0x000019e1      0f8481000000   je 0x1a68
0x000019e7      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000019ec      0f842c010000   je 0x1b1e
0x000019f2      7e1c           jle 0x1a10
0x000019f4      83f872         cmp eax, 0x72
0x000019f7      7467           je 0x1a60
0x000019f9      83f873         cmp eax, 0x73
0x000019fc      0f8512010000   jne 0x1b14
0x00001a02      4c8d25370200.  lea r12, sym.sysv_sum_file              ; 0x1c40 ; "AWAV\xb9\x02"
0x00001a09      ebc0           jmp 0x19cb
0x00001a0b      0f1f440000     nop dword [rax + rax]
0x00001a10      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001a15      0f85f9000000   jne 0x1b14
0x00001a1b      4883ec08       sub rsp, 8
0x00001a1f      488b3d827620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001a26      488b0de37520.  mov rcx, qword [obj.Version]            ; [0x209010:8]=0x66cb str.8.31
0x00001a2d      6a00           push 0
0x00001a2f      4c8d0d184a00.  lea r9, str.David_MacKenzie             ; 0x644e ; "David MacKenzie"
0x00001a36      4c8d05214a00.  lea r8, str.Kayvan_Aghaiepour           ; 0x645e ; "Kayvan Aghaiepour"
0x00001a3d      488d15c54900.  lea rdx, str.GNU_coreutils              ; 0x6409 ; "GNU coreutils"
0x00001a44      488d35a34900.  lea rsi, [0x000063ee]                   ; "sum"
0x00001a4b      31c0           xor eax, eax
0x00001a4d      e81e3a0000     call sym.version_etc
0x00001a52      31ff           xor edi, edi
0x00001a54      e867feffff     call sym.imp.exit
0x00001a59      0f1f80000000.  nop dword [rax]
0x00001a60      4d89fc         mov r12, r15
0x00001a63      e963ffffff     jmp 0x19cb
0x00001a68      4189ee         mov r14d, ebp
0x00001a6b      442b35467620.  sub r14d, dword [obj.optind]            ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001a72      4585f6         test r14d, r14d
0x00001a75      7f71           jg 0x1ae8
0x00001a77      4489f6         mov esi, r14d
0x00001a7a      488d3d314d00.  lea rdi, [0x000067b2]                   ; "-"
0x00001a81      41ffd4         call r12
0x00001a84      4189c5         mov r13d, eax
0x00001a87      803d5b762000.  cmp byte [obj.have_read_stdin], 0       ; [0x2090e9:1]=0
0x00001a8e      7514           jne 0x1aa4
0x00001a90      4183f501       xor r13d, 1
0x00001a94      5a             pop rdx
0x00001a95      410fb6c5       movzx eax, r13b
0x00001a99      5b             pop rbx
0x00001a9a      5d             pop rbp
0x00001a9b      415c           pop r12
0x00001a9d      415d           pop r13
0x00001a9f      415e           pop r14
0x00001aa1      415f           pop r15
0x00001aa3      c3             ret
0x00001aa4      488b3d057620.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2090b0:8]=0
0x00001aab      e8d0410000     call sym.rpl_fclose
0x00001ab0      83c001         add eax, 1
0x00001ab3      75db           jne 0x1a90
0x00001ab5      488d15f64c00.  lea rdx, [0x000067b2]                   ; "-"
0x00001abc      be03000000     mov esi, 3
0x00001ac1      31ff           xor edi, edi
0x00001ac3      e898320000     call sym.quotearg_n_style_colon
0x00001ac8      4889c3         mov rbx, rax
0x00001acb      e830fbffff     call sym.imp.__errno_location
0x00001ad0      8b30           mov esi, dword [rax]
0x00001ad2      488d15a95600.  lea rdx, [0x00007182]                   ; "%s"
0x00001ad9      4889d9         mov rcx, rbx
0x00001adc      bf01000000     mov edi, 1
0x00001ae1      31c0           xor eax, eax
0x00001ae3      e888fdffff     call sym.imp.error
0x00001ae8      41bd01000000   mov r13d, 1
0x00001aee      eb14           jmp 0x1b04
0x00001af0      488b3cc3       mov rdi, qword [rbx + rax*8]
0x00001af4      4489f6         mov esi, r14d
0x00001af7      41ffd4         call r12
0x00001afa      8305b7752000.  add dword [obj.optind], 1               ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001b01      4121c5         and r13d, eax
0x00001b04      486305ad7520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2090b8:4]=0
0x00001b0b      39e8           cmp eax, ebp
0x00001b0d      7ce1           jl 0x1af0
0x00001b0f      e973ffffff     jmp 0x1a87
0x00001b14      bf01000000     mov edi, 1
0x00001b19      e892050000     call sym.usage
0x00001b1e      31ff           xor edi, edi
0x00001b20      e88b050000     call sym.usage
0x00001b25      662e0f1f8400.  nop word cs:[rax + rax]
0x00001b2f      90             nop
;-- entry0:
;-- _start:
;-- rip:
0x00001b30      31ed           xor ebp, ebp
0x00001b32      4989d1         mov r9, rdx
0x00001b35      5e             pop rsi
0x00001b36      4889e2         mov rdx, rsp
0x00001b39      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001b3d      50             push rax
0x00001b3e      54             push rsp
0x00001b3f      4c8d050a4800.  lea r8, sym.__libc_csu_fini             ; 0x6350
0x00001b46      488d0d934700.  lea rcx, sym.__libc_csu_init            ; 0x62e0 ; "AWAVI\x89\xd7AUATL\x8d%\x1e( "
0x00001b4d      488d3decfdff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1940 ; "AWAVL\x8d5\xd5q "
0x00001b54      ff1586742000   call qword [reloc.__libc_start_main]    ; [0x208fe0:8]=0
0x00001b5a      f4             hlt
0x00001b5b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001b60      488d3d217520.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x209088
0x00001b67      55             push rbp
0x00001b68      488d05197520.  lea rax, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x209088
0x00001b6f      4839f8         cmp rax, rdi
0x00001b72      4889e5         mov rbp, rsp
0x00001b75      7419           je 0x1b90
0x00001b77      488b055a7420.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x208fd8:8]=0
0x00001b7e      4885c0         test rax, rax
0x00001b81      740d           je 0x1b90
0x00001b83      5d             pop rbp
0x00001b84      ffe0           jmp rax
0x00001b86      662e0f1f8400.  nop word cs:[rax + rax]
0x00001b90      5d             pop rbp
0x00001b91      c3             ret
0x00001b92      0f1f4000       nop dword [rax]
0x00001b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001ba0      488d3de17420.  lea rdi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x209088
0x00001ba7      488d35da7420.  lea rsi, loc._edata                     ; obj.__TMC_END
                                                                       ; 0x209088
0x00001bae      55             push rbp
0x00001baf      4829fe         sub rsi, rdi
0x00001bb2      4889e5         mov rbp, rsp
0x00001bb5      48c1fe03       sar rsi, 3
0x00001bb9      4889f0         mov rax, rsi
0x00001bbc      48c1e83f       shr rax, 0x3f
0x00001bc0      4801c6         add rsi, rax
0x00001bc3      48d1fe         sar rsi, 1
0x00001bc6      7418           je 0x1be0
0x00001bc8      488b05217420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x208ff0:8]=0
0x00001bcf      4885c0         test rax, rax
0x00001bd2      740c           je 0x1be0
0x00001bd4      5d             pop rbp
0x00001bd5      ffe0           jmp rax
0x00001bd7      660f1f840000.  nop word [rax + rax]
0x00001be0      5d             pop rbp
0x00001be1      c3             ret
0x00001be2      0f1f4000       nop dword [rax]
0x00001be6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001bf0      803df1742000.  cmp byte [obj.completed.7697], 0        ; [0x2090e8:1]=0
0x00001bf7      752f           jne 0x1c28
0x00001bf9      48833df77320.  cmp qword [reloc.__cxa_finalize], 0     ; [0x208ff8:8]=0
0x00001c01      55             push rbp
0x00001c02      4889e5         mov rbp, rsp
0x00001c05      740c           je 0x1c13
0x00001c07      488b3dfa7320.  mov rdi, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00001c0e      e81dfdffff     call sym..plt.got
0x00001c13      e848ffffff     call sym.deregister_tm_clones
0x00001c18      c605c9742000.  mov byte [obj.completed.7697], 1        ; [0x2090e8:1]=0
0x00001c1f      5d             pop rbp
0x00001c20      c3             ret
0x00001c21      0f1f80000000.  nop dword [rax]
0x00001c28      f3c3           ret
0x00001c2a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001c30      55             push rbp
0x00001c31      4889e5         mov rbp, rsp
0x00001c34      5d             pop rbp
0x00001c35      e966ffffff     jmp sym.register_tm_clones
0x00001c3a      660f1f440000   nop word [rax + rax]
;-- sysv_sum_file:
0x00001c40      4157           push r15                                ; /src:153
0x00001c42      4156           push r14
0x00001c44      b902000000     mov ecx, 2                              ; /src:164
0x00001c49      4155           push r13                                ; /src:153
0x00001c4b      4154           push r12
0x00001c4d      4989fd         mov r13, rdi
0x00001c50      55             push rbp
0x00001c51      53             push rbx
0x00001c52      488d3d594b00.  lea rdi, [0x000067b2]                   ; /src:164 ; "-"
0x00001c59      4881ecb82200.  sub rsp, 0x22b8                         ; /src:153
0x00001c60      8974240c       mov dword [rsp + 0xc], esi
0x00001c64      4c89ee         mov rsi, r13                            ; /src:164
0x00001c67      64488b042528.  mov rax, qword fs:[0x28]                ; /src:153
0x00001c70      48898424a822.  mov qword [rsp + 0x22a8], rax
0x00001c78      31c0           xor eax, eax
0x00001c7a      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]   ; /src:164
0x00001c7c      410f97c4       seta r12b
0x00001c80      4180dc00       sbb r12b, 0
0x00001c84      450fbee4       movsx r12d, r12b
0x00001c88      4585e4         test r12d, r12d                         ; /src:166
0x00001c8b      0f855f010000   jne 0x1df0
0x00001c91      c60551742000.  mov byte [obj.have_read_stdin], 1       ; /src:169 ; [0x2090e9:1]=0
0x00001c98      31ed           xor ebp, ebp                            ; /src:168
0x00001c9a      4c8db424a002.  lea r14, [rsp + 0x2a0]
0x00001ca2      4531ff         xor r15d, r15d
0x00001ca5      31db           xor ebx, ebx
0x00001ca7      660f1f840000.  nop word [rax + rax]
0x00001cb0      ba00200000     mov edx, 0x2000                         ; /src:184
0x00001cb5      4c89f6         mov rsi, r14
0x00001cb8      89ef           mov edi, ebp
0x00001cba      e891320000     call sym.safe_read
0x00001cbf      4885c0         test rax, rax                           ; /src:186
0x00001cc2      742c           je 0x1cf0
0x00001cc4      4883f8ff       cmp rax, 0xffffffffffffffff             ; /src:189
0x00001cc8      0f84e2000000   je 0x1db0
0x00001cce      498d3406       lea rsi, [r14 + rax]
0x00001cd2      4c89f2         mov rdx, r14
0x00001cd5      0f1f00         nop dword [rax]
0x00001cd8      0fb60a         movzx ecx, byte [rdx]                   ; /src:198
0x00001cdb      4883c201       add rdx, 1
0x00001cdf      4101cf         add r15d, ecx
0x00001ce2      4839d6         cmp rsi, rdx                            ; /src:197
0x00001ce5      75f1           jne 0x1cd8
0x00001ce7      4801c3         add rbx, rax                            ; /src:199
0x00001cea      ebc4           jmp 0x1cb0                              ; /src:183
0x00001cec      0f1f4000       nop dword [rax]
0x00001cf0      4585e4         test r12d, r12d                         ; /src:202
0x00001cf3      740f           je 0x1d04
0x00001cf5      89ef           mov edi, ebp
0x00001cf7      e854faffff     call sym.imp.close
0x00001cfc      85c0           test eax, eax
0x00001cfe      0f8503010000   jne 0x1e07
0x00001d04      410fb7c7       movzx eax, r15w                         ; /src:208
0x00001d08      41c1ef10       shr r15d, 0x10
0x00001d0c      488d742410     lea rsi, [rsp + 0x10]                   ; /src:211
0x00001d11      4101c7         add r15d, eax                           ; /src:208
0x00001d14      31d2           xor edx, edx                            ; /src:211
0x00001d16      41b800020000   mov r8d, 0x200
0x00001d1c      410fb7c7       movzx eax, r15w                         ; /src:209
0x00001d20      b901000000     mov ecx, 1                              ; /src:211
0x00001d25      41c1ff10       sar r15d, 0x10                          ; /src:209
0x00001d29      4889df         mov rdi, rbx                            ; /src:211
0x00001d2c      4101c7         add r15d, eax                           ; /src:209
0x00001d2f      e8ec080000     call sym.human_readable                 ; /src:211
0x00001d34      488d35494600.  lea rsi, str.d__s                       ; /coreutils-8.31/lib:104 ; 0x6384 ; "%d %s"
0x00001d3b      4889c1         mov rcx, rax
0x00001d3e      4489fa         mov edx, r15d
0x00001d41      31c0           xor eax, eax
0x00001d43      bf01000000     mov edi, 1
0x00001d48      e8f3faffff     call sym.imp.__printf_chk
0x00001d4d      8b44240c       mov eax, dword [rsp + 0xc]              ; .//ib:-162
0x00001d51      85c0           test eax, eax
0x00001d53      0f85e1000000   jne 0x1e3a
0x00001d59      488b3d487320.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001d60      488b4728       mov rax, qword [rdi + 0x28]
0x00001d64      483b4730       cmp rax, qword [rdi + 0x30]
0x00001d68      0f83e7000000   jae 0x1e55
0x00001d6e      488d5001       lea rdx, [rax + 1]
0x00001d72      bb01000000     mov ebx, 1
0x00001d77      48895728       mov qword [rdi + 0x28], rdx
0x00001d7b      c6000a         mov byte [rax], 0xa
0x00001d7e      89d8           mov eax, ebx                            ; /src:-296
0x00001d80      488b9c24a822.  mov rbx, qword [rsp + 0x22a8]
0x00001d88      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001d91      0f85d2000000   jne 0x1e69
0x00001d97      4881c4b82200.  add rsp, 0x22b8
0x00001d9e      5b             pop rbx
0x00001d9f      5d             pop rbp
0x00001da0      415c           pop r12
0x00001da2      415d           pop r13
0x00001da4      415e           pop r14
0x00001da6      415f           pop r15
0x00001da8      c3             ret
0x00001da9      0f1f80000000.  nop dword [rax]
0x00001db0      31ff           xor edi, edi
0x00001db2      4c89ea         mov rdx, r13
0x00001db5      be03000000     mov esi, 3
0x00001dba      e8a12f0000     call sym.quotearg_n_style_colon
0x00001dbf      4889c3         mov rbx, rax
0x00001dc2      e839f8ffff     call sym.imp.__errno_location           ; /src:-291
0x00001dc7      8b30           mov esi, dword [rax]
0x00001dc9      488d15b25300.  lea rdx, [0x00007182]                   ; /src:-278 ; "%s"
0x00001dd0      4889d9         mov rcx, rbx
0x00001dd3      31ff           xor edi, edi
0x00001dd5      31c0           xor eax, eax
0x00001dd7      31db           xor ebx, ebx
0x00001dd9      e892faffff     call sym.imp.error                      ; /src:-300
0x00001dde      4585e4         test r12d, r12d
0x00001de1      749b           je 0x1d7e
0x00001de3      89ef           mov edi, ebp                            ; /src:-276
0x00001de5      e866f9ffff     call sym.imp.close
0x00001dea      eb92           jmp 0x1d7e
0x00001dec      0f1f4000       nop dword [rax]                         ; .//ib:-326
0x00001df0      31f6           xor esi, esi
0x00001df2      31c0           xor eax, eax
0x00001df4      4c89ef         mov rdi, r13
0x00001df7      e884faffff     call sym.imp.open                       ; /src:-273
0x00001dfc      83f8ff         cmp eax, 0xffffffff                     ; /src:-274
0x00001dff      89c5           mov ebp, eax
0x00001e01      0f8593feffff   jne 0x1c9a
0x00001e07      4c89ea         mov rdx, r13                            ; /src:-272
0x00001e0a      be03000000     mov esi, 3
0x00001e0f      31ff           xor edi, edi                            ; .//ib:-326
0x00001e11      e84a2f0000     call sym.quotearg_n_style_colon
0x00001e16      4889c3         mov rbx, rax
0x00001e19      e8e2f7ffff     call sym.imp.__errno_location
0x00001e1e      8b30           mov esi, dword [rax]
0x00001e20      488d155b5300.  lea rdx, [0x00007182]                   ; "%s"
0x00001e27      4889d9         mov rcx, rbx
0x00001e2a      31ff           xor edi, edi
0x00001e2c      31c0           xor eax, eax
0x00001e2e      31db           xor ebx, ebx
0x00001e30      e83bfaffff     call sym.imp.error
0x00001e35      e944ffffff     jmp 0x1d7e
0x00001e3a      488d35405300.  lea rsi, [0x00007181]                   ; " %s"
0x00001e41      4c89ea         mov rdx, r13
0x00001e44      bf01000000     mov edi, 1
0x00001e49      31c0           xor eax, eax
0x00001e4b      e8f0f9ffff     call sym.imp.__printf_chk
0x00001e50      e904ffffff     jmp 0x1d59
0x00001e55      be0a000000     mov esi, 0xa
0x00001e5a      bb01000000     mov ebx, 1
0x00001e5f      e88cf8ffff     call sym.imp.__overflow
0x00001e64      e915ffffff     jmp 0x1d7e
0x00001e69      e842f8ffff     call sym.imp.__stack_chk_fail
0x00001e6e      6690           nop
;-- bsd_sum_file:
0x00001e70      4157           push r15
0x00001e72      4156           push r14
0x00001e74      b902000000     mov ecx, 2
0x00001e79      4155           push r13                                ; .//ib:-284
0x00001e7b      4154           push r12
0x00001e7d      4989fc         mov r12, rdi
0x00001e80      55             push rbp
0x00001e81      53             push rbx
0x00001e82      488d3d294900.  lea rdi, [0x000067b2]                   ; "-"
0x00001e89      4189f5         mov r13d, esi
0x00001e8c      4c89e6         mov rsi, r12
0x00001e8f      4881eca80200.  sub rsp, 0x2a8
0x00001e96      64488b042528.  mov rax, qword fs:[0x28]
0x00001e9f      488984249802.  mov qword [rsp + sym..gnu.hash], rax
0x00001ea7      31c0           xor eax, eax
0x00001ea9      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001eab      400f97c5       seta bpl
0x00001eaf      4080dd00       sbb bpl, 0
0x00001eb3      400fbeed       movsx ebp, bpl
0x00001eb7      85ed           test ebp, ebp
0x00001eb9      0f8531010000   jne 0x1ff0
0x00001ebf      4c8b3dea7120.  mov r15, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2090b0:8]=0
0x00001ec6      c6051c722000.  mov byte [obj.have_read_stdin], 1       ; [0x2090e9:1]=0
0x00001ecd      be02000000     mov esi, 2
0x00001ed2      4c89ff         mov rdi, r15
0x00001ed5      4531f6         xor r14d, r14d
0x00001ed8      e843060000     call sym.fadvise
0x00001edd      31db           xor ebx, ebx
0x00001edf      498b7710       mov rsi, qword [r15 + 0x10]
0x00001ee3      498b4708       mov rax, qword [r15 + 8]
0x00001ee7      eb2a           jmp 0x1f13
0x00001ee9      0f1f80000000.  nop dword [rax]
0x00001ef0      488d4801       lea rcx, [rax + 1]
0x00001ef4      49894f08       mov qword [r15 + 8], rcx
0x00001ef8      0fb600         movzx eax, byte [rax]
0x00001efb      89da           mov edx, ebx                            ; /src:-285
0x00001efd      c1e30f         shl ebx, 0xf
0x00001f00      4983c601       add r14, 1
0x00001f04      d1fa           sar edx, 1
0x00001f06      0fb7db         movzx ebx, bx
0x00001f09      01d3           add ebx, edx
0x00001f0b      01c3           add ebx, eax
0x00001f0d      4889c8         mov rax, rcx
0x00001f10      0fb7db         movzx ebx, bx
0x00001f13      4839c6         cmp rsi, rax
0x00001f16      77d8           ja 0x1ef0
0x00001f18      4c89ff         mov rdi, r15
0x00001f1b      e8a0f6ffff     call sym.imp.__uflow
0x00001f20      83f8ff         cmp eax, 0xffffffff
0x00001f23      0f8573010000   jne 0x209c
0x00001f29      41f60720       test byte [r15], 0x20
0x00001f2d      0f850d010000   jne 0x2040
0x00001f33      85ed           test ebp, ebp
0x00001f35      7410           je 0x1f47                               ; /src:-257
0x00001f37      4c89ff         mov rdi, r15
0x00001f3a      e8413d0000     call sym.rpl_fclose
0x00001f3f      85c0           test eax, eax
0x00001f41      0f85c4000000   jne 0x200b
0x00001f47      31d2           xor edx, edx
0x00001f49      4889e6         mov rsi, rsp
0x00001f4c      41b800040000   mov r8d, 0x400
0x00001f52      b901000000     mov ecx, 1
0x00001f57      4c89f7         mov rdi, r14
0x00001f5a      e8c1060000     call sym.human_readable
0x00001f5f      488d35244400.  lea rsi, str.05d__5s                    ; 0x638a ; "%05d %5s"
0x00001f66      4889c1         mov rcx, rax
0x00001f69      89da           mov edx, ebx
0x00001f6b      31c0           xor eax, eax
0x00001f6d      bf01000000     mov edi, 1
0x00001f72      e8c9f8ffff     call sym.imp.__printf_chk               ; /src:-264
0x00001f77      4183fd01       cmp r13d, 1
0x00001f7b      7f53           jg 0x1fd0
0x00001f7d      488b3d247120.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00001f84      488b4728       mov rax, qword [rdi + 0x28]             ; /src:-248
0x00001f88      483b4730       cmp rax, qword [rdi + 0x30]
0x00001f8c      0f83f1000000   jae 0x2083
0x00001f92      488d5001       lea rdx, [rax + 1]
0x00001f96      bb01000000     mov ebx, 1
0x00001f9b      48895728       mov qword [rdi + 0x28], rdx
0x00001f9f      c6000a         mov byte [rax], 0xa
0x00001fa2      488bbc249802.  mov rdi, qword [rsp + sym..gnu.hash]
0x00001faa      6448333c2528.  xor rdi, qword fs:[0x28]
0x00001fb3      89d8           mov eax, ebx
0x00001fb5      0f85dc000000   jne 0x2097                              ; /src:-337
0x00001fbb      4881c4a80200.  add rsp, 0x2a8
0x00001fc2      5b             pop rbx
0x00001fc3      5d             pop rbp
0x00001fc4      415c           pop r12
0x00001fc6      415d           pop r13
0x00001fc8      415e           pop r14
0x00001fca      415f           pop r15
0x00001fcc      c3             ret
0x00001fcd      0f1f00         nop dword [rax]
0x00001fd0      488d35aa5100.  lea rsi, [0x00007181]                   ; " %s"
0x00001fd7      4c89e2         mov rdx, r12                            ; /src:-336
0x00001fda      bf01000000     mov edi, 1
0x00001fdf      31c0           xor eax, eax
0x00001fe1      e85af8ffff     call sym.imp.__printf_chk
0x00001fe6      eb95           jmp 0x1f7d
0x00001fe8      0f1f84000000.  nop dword [rax + rax]
0x00001ff0      488d35e34600.  lea rsi, [0x000066da]                   ; "r"
0x00001ff7      4c89e7         mov rdi, r12
0x00001ffa      e8a1f8ffff     call sym.imp.fopen
0x00001fff      4885c0         test rax, rax
0x00002002      4989c7         mov r15, rax                            ; /src:-313
0x00002005      0f85c2feffff   jne 0x1ecd
0x0000200b      4c89e2         mov rdx, r12
0x0000200e      be03000000     mov esi, 3
0x00002013      31ff           xor edi, edi
0x00002015      e8462d0000     call sym.quotearg_n_style_colon
0x0000201a      4889c3         mov rbx, rax
0x0000201d      e8def5ffff     call sym.imp.__errno_location
0x00002022      8b30           mov esi, dword [rax]
0x00002024      488d15575100.  lea rdx, [0x00007182]                   ; "%s"
0x0000202b      4889d9         mov rcx, rbx
0x0000202e      31ff           xor edi, edi
0x00002030      31c0           xor eax, eax
0x00002032      31db           xor ebx, ebx
0x00002034      e837f8ffff     call sym.imp.error
0x00002039      e964ffffff     jmp 0x1fa2
0x0000203e      6690           nop
0x00002040      31ff           xor edi, edi
0x00002042      4c89e2         mov rdx, r12
0x00002045      be03000000     mov esi, 3
0x0000204a      e8112d0000     call sym.quotearg_n_style_colon
0x0000204f      4889c3         mov rbx, rax
0x00002052      e8a9f5ffff     call sym.imp.__errno_location
0x00002057      8b30           mov esi, dword [rax]
0x00002059      488d15225100.  lea rdx, [0x00007182]                   ; "%s"
0x00002060      4889d9         mov rcx, rbx
0x00002063      31ff           xor edi, edi
0x00002065      31c0           xor eax, eax
0x00002067      31db           xor ebx, ebx
0x00002069      e802f8ffff     call sym.imp.error
0x0000206e      85ed           test ebp, ebp
0x00002070      0f842cffffff   je 0x1fa2
0x00002076      4c89ff         mov rdi, r15
0x00002079      e8023c0000     call sym.rpl_fclose
0x0000207e      e91fffffff     jmp 0x1fa2
0x00002083      be0a000000     mov esi, 0xa
0x00002088      bb01000000     mov ebx, 1
0x0000208d      e85ef6ffff     call sym.imp.__overflow
0x00002092      e90bffffff     jmp 0x1fa2
0x00002097      e814f6ffff     call sym.imp.__stack_chk_fail
0x0000209c      498b7710       mov rsi, qword [r15 + 0x10]
0x000020a0      498b4f08       mov rcx, qword [r15 + 8]
0x000020a4      e952feffff     jmp 0x1efb
0x000020a9      0f1f80000000.  nop dword [rax]
;-- usage:
0x000020b0      4155           push r13
0x000020b2      4154           push r12
0x000020b4      ba05000000     mov edx, 5
0x000020b9      55             push rbp
0x000020ba      53             push rbx
0x000020bb      89fd           mov ebp, edi
0x000020bd      4881ec880000.  sub rsp, 0x88                           ; /src:-316
0x000020c4      488b1d357020.  mov rbx, qword [obj.program_name]       ; [0x209100:8]=0
0x000020cb      64488b042528.  mov rax, qword fs:[0x28]
0x000020d4      4889442478     mov qword [rsp + 0x78], rax
0x000020d9      31c0           xor eax, eax
0x000020db      85ff           test edi, edi
0x000020dd      742e           je 0x210d
0x000020df      488d35a24300.  lea rsi, str.Try___s___help__for_more_information. ; 0x6488 ; "Try '%s --help' for more information.\n"
0x000020e6      31ff           xor edi, edi
0x000020e8      e893f5ffff     call sym.imp.dcgettext
0x000020ed      488b3dec6f20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x000020f4      4889c2         mov rdx, rax
0x000020f7      4889d9         mov rcx, rbx
0x000020fa      be01000000     mov esi, 1
0x000020ff      31c0           xor eax, eax
0x00002101      e8daf7ffff     call sym.imp.__fprintf_chk
0x00002106      89ef           mov edi, ebp
0x00002108      e8b3f7ffff     call sym.imp.exit
0x0000210d      488d359c4300.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x64b0 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00002114      31ff           xor edi, edi
0x00002116      e865f5ffff     call sym.imp.dcgettext
0x0000211b      4889da         mov rdx, rbx
0x0000211e      4889c6         mov rsi, rax
0x00002121      bf01000000     mov edi, 1
0x00002126      31c0           xor eax, eax
0x00002128      e813f7ffff     call sym.imp.__printf_chk
0x0000212d      488b1d746f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002134      488d359d4300.  lea rsi, str.Print_checksum_and_block_counts_for_each_FILE. ; 0x64d8 ; "Print checksum and block counts for each FILE.\n"
0x0000213b      ba05000000     mov edx, 5
0x00002140      31ff           xor edi, edi
0x00002142      e839f5ffff     call sym.imp.dcgettext
0x00002147      4889de         mov rsi, rbx
0x0000214a      4889c7         mov rdi, rax
0x0000214d      e83ef6ffff     call sym.imp.fputs_unlocked
0x00002152      488b1d4f6f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002159      488d35a84300.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x6508 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00002160      ba05000000     mov edx, 5
0x00002165      31ff           xor edi, edi
0x00002167      e814f5ffff     call sym.imp.dcgettext
0x0000216c      4889de         mov rsi, rbx
0x0000216f      4889c7         mov rdi, rax
0x00002172      e819f6ffff     call sym.imp.fputs_unlocked
0x00002177      488b1d2a6f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000217e      488d35bb4300.  lea rsi, str.r______________use_BSD_sum_algorithm__use_1K_blocks_____s____sysv______use_System_V_sum_algorithm__use_512_bytes_blocks ; 0x6540 ; "\n  -r              use BSD sum algorithm, use 1K blocks\n  -s, --sysv      use System V sum algorithm, use 512 bytes blocks\n"
0x00002185      ba05000000     mov edx, 5
0x0000218a      31ff           xor edi, edi
0x0000218c      e8eff4ffff     call sym.imp.dcgettext
0x00002191      4889de         mov rsi, rbx
0x00002194      4889c7         mov rdi, rax
0x00002197      e8f4f5ffff     call sym.imp.fputs_unlocked
0x0000219c      488b1d056f20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000021a3      488d35164400.  lea rsi, str.help_____display_this_help_and_exit ; 0x65c0 ; "      --help     display this help and exit\n"
0x000021aa      ba05000000     mov edx, 5
0x000021af      31ff           xor edi, edi
0x000021b1      e8caf4ffff     call sym.imp.dcgettext
0x000021b6      4889de         mov rsi, rbx                            ; stdio2.h:261     }
0x000021b9      4889c7         mov rdi, rax
0x000021bc      e8cff5ffff     call sym.imp.fputs_unlocked
0x000021c1      488b1de06e20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000021c8      488d35214400.  lea rsi, str.version__output_version_information_and_exit ; 0x65f0 ; "      --version  output version information and exit\n"
0x000021cf      ba05000000     mov edx, 5
0x000021d4      31ff           xor edi, edi
0x000021d6      e8a5f4ffff     call sym.imp.dcgettext
0x000021db      4889de         mov rsi, rbx
0x000021de      4889c7         mov rdi, rax
0x000021e1      488d1d064200.  lea rbx, [0x000063ee]                   ; "sum"
0x000021e8      e8a3f5ffff     call sym.imp.fputs_unlocked
0x000021ed      488d059f4100.  lea rax, [0x00006393]                   ; "["
0x000021f4      488d0dd94100.  lea rcx, str.sha256sum                  ; 0x63d4 ; "sha256sum"
0x000021fb      48c744246000.  mov qword [rsp + 0x60], 0
0x00002204      48c744246800.  mov qword [rsp + 0x68], 0
0x0000220d      4889e2         mov rdx, rsp
0x00002210      48890424       mov qword [rsp], rax
0x00002214      488d057a4100.  lea rax, str.test_invocation            ; 0x6395 ; "test invocation"
0x0000221b      48894c2430     mov qword [rsp + 0x30], rcx
0x00002220      488d0db74100.  lea rcx, str.sha384sum                  ; 0x63de ; "sha384sum"
0x00002227      4889442408     mov qword [rsp + 8], rax
0x0000222c      488d05da4100.  lea rax, [0x0000640d]                   ; "coreutils"
0x00002233      48894c2440     mov qword [rsp + 0x40], rcx
0x00002238      488d0da94100.  lea rcx, str.sha512sum                  ; 0x63e8 ; "sha512sum"
0x0000223f      4889442410     mov qword [rsp + 0x10], rax
0x00002244      488d055a4100.  lea rax, str.Multi_call_invocation      ; 0x63a5 ; "Multi-call invocation"
0x0000224b      48894c2450     mov qword [rsp + 0x50], rcx
0x00002250      4889442418     mov qword [rsp + 0x18], rax
0x00002255      488d055f4100.  lea rax, str.sha224sum                  ; 0x63bb ; "sha224sum"
0x0000225c      4889442420     mov qword [rsp + 0x20], rax
0x00002261      488d055d4100.  lea rax, str.sha2_utilities             ; 0x63c5 ; "sha2 utilities"
0x00002268      4889442428     mov qword [rsp + 0x28], rax
0x0000226d      4889442438     mov qword [rsp + 0x38], rax
0x00002272      4889442448     mov qword [rsp + 0x48], rax
0x00002277      4889442458     mov qword [rsp + 0x58], rax
0x0000227c      0f1f4000       nop dword [rax]                         ; /coreutils-8.31/lib:-287
0x00002280      4883c210       add rdx, 0x10
0x00002284      488b3a         mov rdi, qword [rdx]
0x00002287      4885ff         test rdi, rdi
0x0000228a      7413           je 0x229f
0x0000228c      b904000000     mov ecx, 4
0x00002291      4889de         mov rsi, rbx
0x00002294      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002296      0f97c0         seta al
0x00002299      1c00           sbb al, 0                               ; stdio2.h:265 extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
0x0000229b      84c0           test al, al
0x0000229d      75e1           jne 0x2280
0x0000229f      4c8b6208       mov r12, qword [rdx + 8]
0x000022a3      31ff           xor edi, edi
0x000022a5      ba05000000     mov edx, 5                              ; stdio2.h:266       size_t __size, size_t __n,
0x000022aa      488d35414100.  lea rsi, str.s_online_help:___s         ; 0x63f2 ; "\n%s online help: <%s>\n"
0x000022b1      4d85e4         test r12, r12
0x000022b4      0f84c1000000   je 0x237b
0x000022ba      e8c1f3ffff     call sym.imp.dcgettext
0x000022bf      488d0d624300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6628 ; "https://www.gnu.org/software/coreutils/"
0x000022c6      488d153c4100.  lea rdx, str.GNU_coreutils              ; 0x6409 ; "GNU coreutils"
0x000022cd      4889c6         mov rsi, rax
0x000022d0      bf01000000     mov edi, 1                              ; stdio2.h:252 fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
0x000022d5      31c0           xor eax, eax
0x000022d7      e864f5ffff     call sym.imp.__printf_chk               ; stdio2.h:277      __wur __warnattr ("fread called with bigger size * nmemb than length "
0x000022dc      31f6           xor esi, esi
0x000022de      bf05000000     mov edi, 5                              ; stdio2.h:275       FILE *__restrict __stream),
0x000022e3      e848f5ffff     call sym.imp.setlocale                  ; /coreutils-8.31/lib:-287
0x000022e8      4885c0         test rax, rax
0x000022eb      741c           je 0x2309
0x000022ed      488d35234100.  lea rsi, [0x00006417]                   ; "en_"
0x000022f4      ba03000000     mov edx, 3
0x000022f9      4889c7         mov rdi, rax
0x000022fc      e80ff3ffff     call sym.imp.strncmp
0x00002301      85c0           test eax, eax
0x00002303      0f8507010000   jne 0x2410
0x00002309      488d350b4100.  lea rsi, str.Full_documentation___s_s   ; 0x641b ; "Full documentation <%s%s>\n"
0x00002310      31ff           xor edi, edi
0x00002312      ba05000000     mov edx, 5
0x00002317      e864f3ffff     call sym.imp.dcgettext
0x0000231c      488d0dcb4000.  lea rcx, [0x000063ee]                   ; "sum"
0x00002323      488d15fe4200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6628 ; "https://www.gnu.org/software/coreutils/"
0x0000232a      4889c6         mov rsi, rax
0x0000232d      bf01000000     mov edi, 1
0x00002332      31c0           xor eax, eax
0x00002334      e807f5ffff     call sym.imp.__printf_chk
0x00002339      4939dc         cmp r12, rbx
0x0000233c      488d0d6c4000.  lea rcx, [0x000063af]                   ; " invocation"
0x00002343      488d1d974900.  lea rbx, [0x00006ce1]
0x0000234a      480f44d9       cmove rbx, rcx
0x0000234e      488d35434300.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6698 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002355      31ff           xor edi, edi
0x00002357      ba05000000     mov edx, 5
0x0000235c      e81ff3ffff     call sym.imp.dcgettext
0x00002361      4889d9         mov rcx, rbx
0x00002364      4889c6         mov rsi, rax
0x00002367      4c89e2         mov rdx, r12
0x0000236a      bf01000000     mov edi, 1
0x0000236f      31c0           xor eax, eax
0x00002371      e8caf4ffff     call sym.imp.__printf_chk
0x00002376      e98bfdffff     jmp 0x2106
0x0000237b      e800f3ffff     call sym.imp.dcgettext
0x00002380      488d0da14200.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6628 ; "https://www.gnu.org/software/coreutils/"
0x00002387      488d157b4000.  lea rdx, str.GNU_coreutils              ; 0x6409 ; "GNU coreutils"
0x0000238e      4889c6         mov rsi, rax
0x00002391      bf01000000     mov edi, 1
0x00002396      31c0           xor eax, eax
0x00002398      e8a3f4ffff     call sym.imp.__printf_chk
0x0000239d      31f6           xor esi, esi
0x0000239f      bf05000000     mov edi, 5
0x000023a4      e887f4ffff     call sym.imp.setlocale
0x000023a9      4885c0         test rax, rax
0x000023ac      7418           je 0x23c6
0x000023ae      488d35624000.  lea rsi, [0x00006417]                   ; "en_"
0x000023b5      ba03000000     mov edx, 3
0x000023ba      4889c7         mov rdi, rax
0x000023bd      e84ef2ffff     call sym.imp.strncmp
0x000023c2      85c0           test eax, eax
0x000023c4      7543           jne 0x2409
0x000023c6      488d354e4000.  lea rsi, str.Full_documentation___s_s   ; 0x641b ; "Full documentation <%s%s>\n"
0x000023cd      ba05000000     mov edx, 5
0x000023d2      31ff           xor edi, edi
0x000023d4      4c8d25134000.  lea r12, [0x000063ee]                   ; "sum"
0x000023db      488d1dcd3f00.  lea rbx, [0x000063af]                   ; " invocation"
0x000023e2      e899f2ffff     call sym.imp.dcgettext
0x000023e7      488d0d004000.  lea rcx, [0x000063ee]                   ; "sum"
0x000023ee      488d15334200.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6628 ; "https://www.gnu.org/software/coreutils/"
0x000023f5      4889c6         mov rsi, rax
0x000023f8      bf01000000     mov edi, 1
0x000023fd      31c0           xor eax, eax
0x000023ff      e83cf4ffff     call sym.imp.__printf_chk
0x00002404      e945ffffff     jmp 0x234e
0x00002409      4c8d25de3f00.  lea r12, [0x000063ee]                   ; "sum"
0x00002410      4c8b2d916c20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x00002417      488d35324200.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6650 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000241e      31ff           xor edi, edi
0x00002420      ba05000000     mov edx, 5
0x00002425      e856f2ffff     call sym.imp.dcgettext
0x0000242a      4c89ee         mov rsi, r13
0x0000242d      4889c7         mov rdi, rax
0x00002430      e85bf3ffff     call sym.imp.fputs_unlocked
0x00002435      e9cffeffff     jmp 0x2309
0x0000243a      660f1f440000   nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00002440      48893db16c20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x2090f8:8]=0
0x00002447      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002448      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002450      40883d996c20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x2090f0:1]=0
0x00002457      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002458      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00002460      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00002461      53             push rbx
0x00002462      4883ec08       sub rsp, 8
0x00002466      488b3d3b6c20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x0000246d      e84e3d0000     call sym.close_stream
0x00002472      85c0           test eax, eax
0x00002474      7416           je 0x248c
0x00002476      e885f1ffff     call sym.imp.__errno_location
0x0000247b      803d6e6c2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x2090f0:1]=0
0x00002482      4889c3         mov rbx, rax
0x00002485      741c           je 0x24a3
0x00002487      833820         cmp dword [rax], 0x20
0x0000248a      7517           jne 0x24a3
0x0000248c      488b3d4d6c20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00002493      e8283d0000     call sym.close_stream
0x00002498      85c0           test eax, eax
0x0000249a      7546           jne 0x24e2
0x0000249c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000024a0      5b             pop rbx
0x000024a1      5d             pop rbp
0x000024a2      c3             ret
0x000024a3      488d35264200.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x66d0 ; "write error"
0x000024aa      31ff           xor edi, edi
0x000024ac      ba05000000     mov edx, 5
0x000024b1      e8caf1ffff     call sym.imp.dcgettext
0x000024b6      488b3d3b6c20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x2090f8:8]=0
0x000024bd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x000024c0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x000024c3      7428           je 0x24ed
0x000024c5      e866280000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x000024ca      8b33           mov esi, dword [rbx]
0x000024cc      488d15094200.  lea rdx, str.s:__s                      ; 0x66dc ; "%s: %s"
0x000024d3      4889c1         mov rcx, rax
0x000024d6      4989e8         mov r8, rbp
0x000024d9      31ff           xor edi, edi
0x000024db      31c0           xor eax, eax
0x000024dd      e88ef3ffff     call sym.imp.error
0x000024e2      8b3d306b2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x209018:4]=1
0x000024e8      e833f1ffff     call sym.imp._exit
0x000024ed      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x000024ef      488d158c4c00.  lea rdx, [0x00007182]                   ; "%s"
0x000024f6      4889c1         mov rcx, rax
0x000024f9      31ff           xor edi, edi
0x000024fb      31c0           xor eax, eax
0x000024fd      e86ef3ffff     call sym.imp.error
0x00002502      ebde           jmp 0x24e2
0x00002504      662e0f1f8400.  nop word cs:[rax + rax]
0x0000250e      6690           nop
;-- fdadvise:
0x00002510      e94bf2ffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002515      90             nop
0x00002516      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002520      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002523      741b           je 0x2540
0x00002525      53             push rbx
0x00002526      89f3           mov ebx, esi
0x00002528      e8a3f2ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x0000252d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x0000252f      31d2           xor edx, edx
0x00002531      31f6           xor esi, esi
0x00002533      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002534      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002536      e925f2ffff     jmp sym.imp.posix_fadvise
0x0000253b      0f1f440000     nop dword [rax + rax]
0x00002540      f3c3           ret
0x00002542      662e0f1f8400.  nop word cs:[rax + rax]
0x0000254c      0f1f4000       nop dword [rax]
;-- adjust_value.part.0:
0x00002550      d905fe410000   fld dword [0x00006754]                  ; ../coreutils-8.31/lib/human.c:54
0x00002556      db6c2408       fld xword [rsp + 8]
0x0000255a      dbe9           fucomi st(1)                            ; ../coreutils-8.31/lib/human.c:62
0x0000255c      7372           jae 0x25d0
0x0000255e      ddd9           fstp st(1)
0x00002560      d97c24f6       fnstcw word [rsp - 0xa]
0x00002564      0fb74424f6     movzx eax, word [rsp - 0xa]
0x00002569      80cc0c         or ah, 0xc
0x0000256c      66894424f4     mov word [rsp - 0xc], ax
0x00002571      d9c0           fld st(0)
0x00002573      d96c24f4       fldcw word [rsp - 0xc]
0x00002577      df7c24e8       fistp qword [rsp - 0x18]
0x0000257b      d96c24f6       fldcw word [rsp - 0xa]
0x0000257f      488b4424e8     mov rax, qword [rsp - 0x18]
0x00002584      48894424e0     mov qword [rsp - 0x20], rax
0x00002589      4885c0         test rax, rax
0x0000258c      df6c24e0       fild qword [rsp - 0x20]
0x00002590      7906           jns 0x2598
0x00002592      d805c0410000   fadd dword [0x00006758]
0x00002598      85ff           test edi, edi                           ; ../coreutils-8.31/lib/human.c:63
0x0000259a      752c           jne 0x25c8
0x0000259c      d9c9           fxch st(1)
0x0000259e      dfe9           fucomip st(1)
0x000025a0      7a06           jp 0x25a8
0x000025a2      7426           je 0x25ca
0x000025a4      ddd8           fstp st(0)
0x000025a6      eb08           jmp 0x25b0
0x000025a8      ddd8           fstp st(0)
0x000025aa      660f1f440000   nop word [rax + rax]
0x000025b0      4883c001       add rax, 1
0x000025b4      48894424e0     mov qword [rsp - 0x20], rax
0x000025b9      4885c0         test rax, rax
0x000025bc      df6c24e0       fild qword [rsp - 0x20]
0x000025c0      784e           js 0x2610
0x000025c2      eb06           jmp 0x25ca
0x000025c4      0f1f4000       nop dword [rax]
0x000025c8      ddd9           fstp st(1)
0x000025ca      f3c3           ret                                     ; ../coreutils-8.31/lib/human.c:67
0x000025cc      0f1f4000       nop dword [rax]
0x000025d0      d97c24f6       fnstcw word [rsp - 0xa]                 ; ../coreutils-8.31/lib/human.c:62
0x000025d4      0fb74424f6     movzx eax, word [rsp - 0xa]
0x000025d9      dce1           fsubr st(1), st(0)
0x000025db      d9c9           fxch st(1)
0x000025dd      48ba00000000.  movabs rdx, 0x8000000000000000
0x000025e7      80cc0c         or ah, 0xc
0x000025ea      66894424f4     mov word [rsp - 0xc], ax
0x000025ef      d96c24f4       fldcw word [rsp - 0xc]
0x000025f3      df7c24e8       fistp qword [rsp - 0x18]
0x000025f7      d96c24f6       fldcw word [rsp - 0xa]
0x000025fb      488b4424e8     mov rax, qword [rsp - 0x18]
0x00002600      4831d0         xor rax, rdx
0x00002603      e97cffffff     jmp 0x2584
0x00002608      0f1f84000000.  nop dword [rax + rax]
0x00002610      d80542410000   fadd dword [0x00006758]
0x00002616      c3             ret                                     ; ../coreutils-8.31/lib/human.c:67
0x00002617      660f1f840000.  nop word [rax + rax]
;-- human_readable:
0x00002620      4157           push r15
0x00002622      4156           push r14                                ; ../coreutils-8.31/lib/human.c:28
0x00002624      89d0           mov eax, edx
0x00002626      4155           push r13                                ; ../coreutils-8.31/lib/human.c:27
0x00002628      4154           push r12
0x0000262a      4189d7         mov r15d, edx
0x0000262d      55             push rbp
0x0000262e      53             push rbx
0x0000262f      83e020         and eax, 0x20                           ; "@"
0x00002632      4183e703       and r15d, 3
0x00002636      4189d4         mov r12d, edx
0x00002639      4889fb         mov rbx, rdi
0x0000263c      4881ec980000.  sub rsp, 0x98
0x00002643      48894c2418     mov qword [rsp + 0x18], rcx
0x00002648      89442430       mov dword [rsp + 0x30], eax
0x0000264c      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00002655      48898c248800.  mov qword [rsp + 0x88], rcx
0x0000265d      31c9           xor ecx, ecx
0x0000265f      83f801         cmp eax, 1
0x00002662      48893424       mov qword [rsp], rsi
0x00002666      4c89442410     mov qword [rsp + 0x10], r8
0x0000266b      19c0           sbb eax, eax
0x0000266d      83e0e8         and eax, 0xffffffe8                     ; 4294967272
0x00002670      0500040000     add eax, 0x400
0x00002675      89442434       mov dword [rsp + 0x34], eax
0x00002679      e8c2efffff     call sym.imp.localeconv
0x0000267e      4c8b30         mov r14, qword [rax]
0x00002681      4989c5         mov r13, rax
0x00002684      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:50
0x00002687      e814f0ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:51
0x0000268c      498b4d10       mov rcx, qword [r13 + 0x10]
0x00002690      4d8b6d08       mov r13, qword [r13 + 8]
0x00002694      4889c5         mov rbp, rax
0x00002697      4883e801       sub rax, 1
0x0000269b      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/human.c:57
0x000026a0      4883f810       cmp rax, 0x10
0x000026a4      488d05384000.  lea rax, [0x000066e3]                   ; "."
0x000026ab      4c89ef         mov rdi, r13
0x000026ae      480f43ea       cmovae rbp, rdx
0x000026b2      48894c2438     mov qword [rsp + 0x38], rcx
0x000026b7      4c0f43f0       cmovae r14, rax
0x000026bb      e8e0efffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/human.c:67
0x000026c0      4883f811       cmp rax, 0x11
0x000026c4      488d05164600.  lea rax, [0x00006ce1]
0x000026cb      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000026d0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000026d5      4c0f43e8       cmovae r13, rax
0x000026d9      488b0424       mov rax, qword [rsp]
0x000026dd      480587020000   add rax, 0x287
0x000026e3      4839cf         cmp rdi, rcx
0x000026e6      4889442408     mov qword [rsp + 8], rax
0x000026eb      0f8747010000   ja 0x2838
0x000026f1      31d2           xor edx, edx
0x000026f3      4889c8         mov rax, rcx
0x000026f6      48f7f7         div rdi
0x000026f9      4885d2         test rdx, rdx
0x000026fc      4889c7         mov rdi, rax
0x000026ff      0f845b030000   je 0x2a60
0x00002705      48894c2418     mov qword [rsp + 0x18], rcx
0x0000270a      4885c9         test rcx, rcx
0x0000270d      df6c2418       fild qword [rsp + 0x18]
0x00002711      7906           jns 0x2719
0x00002713      d8053f400000   fadd dword [0x00006758]
0x00002719      488b442410     mov rax, qword [rsp + 0x10]
0x0000271e      4889442418     mov qword [rsp + 0x18], rax
0x00002723      4885c0         test rax, rax
0x00002726      df6c2418       fild qword [rsp + 0x18]
0x0000272a      7906           jns 0x2732
0x0000272c      d80526400000   fadd dword [0x00006758]
0x00002732      def9           fdivp st(1)
0x00002734      48895c2418     mov qword [rsp + 0x18], rbx
0x00002739      4885db         test rbx, rbx
0x0000273c      df6c2418       fild qword [rsp + 0x18]                 ; ../coreutils-8.31/lib/human.c:98
0x00002740      7906           jns 0x2748
0x00002742      d80510400000   fadd dword [0x00006758]
0x00002748      41f6c410       test r12b, 0x10                         ; ../coreutils-8.31/lib/human.c:111
0x0000274c      dec9           fmulp st(1)
0x0000274e      0f84c4010000   je 0x2918
0x00002754      db442434       fild dword [rsp + 0x34]                 ; ../coreutils-8.31/lib/human.c:115
0x00002758      31db           xor ebx, ebx
0x0000275a      d9c0           fld st(0)
0x0000275c      eb06           jmp 0x2764
0x0000275e      6690           nop
0x00002760      ddd9           fstp st(1)
0x00002762      d9ca           fxch st(2)
0x00002764      d9c0           fld st(0)
0x00002766      83c301         add ebx, 1
0x00002769      d8ca           fmul st(2)
0x0000276b      d9cb           fxch st(3)
0x0000276d      dbeb           fucomi st(3)
0x0000276f      720f           jb 0x2780
0x00002771      83fb08         cmp ebx, 8
0x00002774      75ea           jne 0x2760
0x00002776      ddda           fstp st(2)
0x00002778      ddda           fstp st(2)
0x0000277a      eb08           jmp 0x2784
0x0000277c      0f1f4000       nop dword [rax]
0x00002780      ddda           fstp st(2)
0x00002782      ddda           fstp st(2)
0x00002784      8b4c2430       mov ecx, dword [rsp + 0x30]
0x00002788      4883c501       add rbp, 1
0x0000278c      31c0           xor eax, eax
0x0000278e      def1           fdivrp st(1)
0x00002790      85c9           test ecx, ecx
0x00002792      0f94c0         sete al
0x00002795      4183ff01       cmp r15d, 1
0x00002799      488d440501     lea rax, [rbp + rax + 1]
0x0000279e      4889442418     mov qword [rsp + 0x18], rax
0x000027a3      0f8467050000   je 0x2d10
0x000027a9      db2db13f0000   fld xword [0x00006760]
0x000027af      dfe9           fucomip st(1)
0x000027b1      0f87d1030000   ja 0x2b88
0x000027b7      d9c0           fld st(0)
0x000027b9      db7c2420       fstp xword [rsp + 0x20]
0x000027bd      4883ec10       sub rsp, 0x10
0x000027c1      488d0d233f00.  lea rcx, str..1Lf                       ; 0x66eb ; "%.1Lf"
0x000027c8      be01000000     mov esi, 1
0x000027cd      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000027d4      31c0           xor eax, eax
0x000027d6      4c8b742410     mov r14, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:123
0x000027db      4c89f7         mov rdi, r14
0x000027de      db3c24         fstp xword [rsp]                        ; ../coreutils-8.31/lib/human.c:126
0x000027e1      e83af1ffff     call sym.imp.__sprintf_chk
0x000027e6      4c89f7         mov rdi, r14
0x000027e9      e8b2eeffff     call sym.imp.strlen
0x000027ee      59             pop rcx
0x000027ef      5e             pop rsi
0x000027f0      483b442418     cmp rax, qword [rsp + 0x18]
0x000027f5      4989c6         mov r14, rax
0x000027f8      db6c2420       fld xword [rsp + 0x20]
0x000027fc      0f87a6050000   ja 0x2da8                               ; ../coreutils-8.31/lib/human.c:128
0x00002802      41f6c408       test r12b, 8
0x00002806      0f8464010000   je 0x2970
0x0000280c      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/human.c:131
0x00002810      42807c30ff30   cmp byte [rax + r14 - 1], 0x30
0x00002816      0f855c010000   jne 0x2978
0x0000281c      d9053a3f0000   fld dword [0x0000675c]
0x00002822      4183ff01       cmp r15d, 1
0x00002826      dcc9           fmul st(1), st(0)
0x00002828      0f8582050000   jne 0x2db0                              ; ../coreutils-8.31/lib/human.c:81
0x0000282e      e930050000     jmp 0x2d63
0x00002833      0f1f440000     nop dword [rax + rax]
0x00002838      4885c9         test rcx, rcx
0x0000283b      0f84c4feffff   je 0x2705
0x00002841      488b442410     mov rax, qword [rsp + 0x10]
0x00002846      31d2           xor edx, edx
0x00002848      48f7f1         div rcx
0x0000284b      4885d2         test rdx, rdx
0x0000284e      4989c0         mov r8, rax
0x00002851      0f85aefeffff   jne 0x2705
0x00002857      4889d8         mov rax, rbx
0x0000285a      31d2           xor edx, edx
0x0000285c      49f7f0         div r8
0x0000285f      4889c3         mov rbx, rax
0x00002862      488d0492       lea rax, [rdx + rdx*4]
0x00002866      31d2           xor edx, edx
0x00002868      4889de         mov rsi, rbx
0x0000286b      4801c0         add rax, rax
0x0000286e      49f7f0         div r8
0x00002871      4801d2         add rdx, rdx
0x00002874      4189c1         mov r9d, eax
0x00002877      4939d0         cmp r8, rdx
0x0000287a      0f8688050000   jbe 0x2e08
0x00002880      31ff           xor edi, edi
0x00002882      4885d2         test rdx, rdx
0x00002885      400f95c7       setne dil
0x00002889      4489e1         mov ecx, r12d
0x0000288c      4c8b442408     mov r8, qword [rsp + 8]
0x00002891      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x00002896      83e110         and ecx, 0x10
0x00002899      0f84c1030000   je 0x2c60
0x0000289f      448b442434     mov r8d, dword [rsp + 0x34]
0x000028a4      4939f0         cmp r8, rsi                             ; ../coreutils-8.31/lib/human.c:33
0x000028a7      4d89c3         mov r11, r8                             ; ../coreutils-8.31/lib/human.c:35
0x000028aa      0f8770050000   ja 0x2e20
0x000028b0      31db           xor ebx, ebx
0x000028b2      eb23           jmp 0x28d7
0x000028b4      0f1f4000       nop dword [rax]
0x000028b8      85ff           test edi, edi
0x000028ba      400f95c7       setne dil
0x000028be      400fb6ff       movzx edi, dil                          ; ../coreutils-8.31/lib/human.c:27
0x000028c2      83c301         add ebx, 1
0x000028c5      4d39d0         cmp r8, r10
0x000028c8      0f870f030000   ja 0x2bdd                               ; ../coreutils-8.31/lib/human.c:26
0x000028ce      83fb08         cmp ebx, 8
0x000028d1      0f84a1050000   je 0x2e78
0x000028d7      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/human.c:29
0x000028da      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/human.c:28
0x000028dc      89fe           mov esi, edi
0x000028de      49f7f0         div r8
0x000028e1      d1fe           sar esi, 1
0x000028e3      4989c2         mov r10, rax
0x000028e6      8d0492         lea eax, [rdx + rdx*4]
0x000028e9      31d2           xor edx, edx
0x000028eb      418d0441       lea eax, [r9 + rax*2]
0x000028ef      41f7f3         div r11d
0x000028f2      8d1456         lea edx, [rsi + rdx*2]
0x000028f5      4189c1         mov r9d, eax
0x000028f8      4c89d6         mov rsi, r10
0x000028fb      01d7           add edi, edx
0x000028fd      4139d3         cmp r11d, edx
0x00002900      77b6           ja 0x28b8
0x00002902      4139fb         cmp r11d, edi
0x00002905      400f92c7       setb dil
0x00002909      400fb6ff       movzx edi, dil
0x0000290d      83c702         add edi, 2
0x00002910      ebb0           jmp 0x28c2
0x00002912      660f1f440000   nop word [rax + rax]
0x00002918      4183ff01       cmp r15d, 1
0x0000291c      740e           je 0x292c
0x0000291e      db2d3c3e0000   fld xword [0x00006760]
0x00002924      dfe9           fucomip st(1)
0x00002926      0f8784020000   ja 0x2bb0
0x0000292c      4883ec10       sub rsp, 0x10
0x00002930      488d0dae3d00.  lea rcx, str..0Lf                       ; 0x66e5 ; "%.0Lf"
0x00002937      be01000000     mov esi, 1
0x0000293c      488b5c2410     mov rbx, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/human.c:-99
0x00002941      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002948      31c0           xor eax, eax
0x0000294a      db3c24         fstp xword [rsp]
0x0000294d      31ed           xor ebp, ebp
0x0000294f      4889df         mov rdi, rbx
0x00002952      e8c9efffff     call sym.imp.__sprintf_chk
0x00002957      4889df         mov rdi, rbx
0x0000295a      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000295f      e83cedffff     call sym.imp.strlen
0x00002964      5e             pop rsi
0x00002965      5f             pop rdi
0x00002966      4989c6         mov r14, rax
0x00002969      eb15           jmp 0x2980
0x0000296b      0f1f440000     nop dword [rax + rax]
0x00002970      ddd8           fstp st(0)
0x00002972      eb0c           jmp 0x2980
0x00002974      0f1f4000       nop dword [rax]
0x00002978      ddd8           fstp st(0)
0x0000297a      660f1f440000   nop word [rax + rax]
0x00002980      4c8b7c2408     mov r15, qword [rsp + 8]
0x00002985      488b3424       mov rsi, qword [rsp]
0x00002989      4c89f2         mov rdx, r14
0x0000298c      4d29f7         sub r15, r14
0x0000298f      4929ee         sub r14, rbp
0x00002992      4c89ff         mov rdi, r15
0x00002995      e8c6eeffff     call sym.imp.memmove
0x0000299a      4d89f0         mov r8, r14
0x0000299d      4d01f8         add r8, r15
0x000029a0      41f6c404       test r12b, 4
0x000029a4      0f85de000000   jne 0x2a88
0x000029aa      41f6c480       test r12b, 0x80
0x000029ae      7477           je 0x2a27
0x000029b0      83fbff         cmp ebx, 0xffffffff
0x000029b3      0f8417030000   je 0x2cd0
0x000029b9      4489e0         mov eax, r12d
0x000029bc      2500010000     and eax, 0x100
0x000029c1      89c1           mov ecx, eax
0x000029c3      09d9           or ecx, ebx                             ; ../coreutils-8.31/lib/human.c:-125
0x000029c5      7460           je 0x2a27
0x000029c7      4183e440       and r12d, 0x40                          ; segment.PHDR
0x000029cb      0f8597010000   jne 0x2b68
0x000029d1      85db           test ebx, ebx
0x000029d3      0f842d060000   je 0x3006
0x000029d9      83fb01         cmp ebx, 1
0x000029dc      750e           jne 0x29ec                              ; ../coreutils-8.31/lib/human.c:-122
0x000029de      448b4c2430     mov r9d, dword [rsp + 0x30]
0x000029e3      4585c9         test r9d, r9d
0x000029e6      0f8444040000   je 0x2e30
0x000029ec      488d0d553d00.  lea rcx, obj.power_letter               ; 0x6748
0x000029f3      4863db         movsxd rbx, ebx
0x000029f6      488b7c2408     mov rdi, qword [rsp + 8]
0x000029fb      85c0           test eax, eax
0x000029fd      0fb60c19       movzx ecx, byte [rcx + rbx]
0x00002a01      488d5701       lea rdx, [rdi + 1]                      ; ../coreutils-8.31/lib/human.c:-311
0x00002a05      880f           mov byte [rdi], cl                      ; ../coreutils-8.31/lib/human.c:-310
0x00002a07      0f8437040000   je 0x2e44
0x00002a0d      448b442430     mov r8d, dword [rsp + 0x30]
0x00002a12      4585c0         test r8d, r8d
0x00002a15      0f85b5010000   jne 0x2bd0
0x00002a1b      488d4201       lea rax, [rdx + 1]
0x00002a1f      c60242         mov byte [rdx], 0x42                    ; 'B'
                                                                       ; [0x42:1]=0
0x00002a22      4889442408     mov qword [rsp + 8], rax
0x00002a27      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/human.c:-427
0x00002a2c      488b8c248800.  mov rcx, qword [rsp + 0x88]
0x00002a34      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002a3d      c60000         mov byte [rax], 0
0x00002a40      4c89f8         mov rax, r15
0x00002a43      0f8592050000   jne 0x2fdb
0x00002a49      4881c4980000.  add rsp, 0x98
0x00002a50      5b             pop rbx
0x00002a51      5d             pop rbp
0x00002a52      415c           pop r12
0x00002a54      415d           pop r13
0x00002a56      415e           pop r14
0x00002a58      415f           pop r15
0x00002a5a      c3             ret
0x00002a5b      0f1f440000     nop dword [rax + rax]
0x00002a60      4889de         mov rsi, rbx
0x00002a63      31d2           xor edx, edx
0x00002a65      480faff0       imul rsi, rax
0x00002a69      4889f0         mov rax, rsi
0x00002a6c      48f7f7         div rdi
0x00002a6f      4839d8         cmp rax, rbx
0x00002a72      0f858dfcffff   jne 0x2705
0x00002a78      31ff           xor edi, edi
0x00002a7a      4531c9         xor r9d, r9d
0x00002a7d      e907feffff     jmp 0x2889
0x00002a82      660f1f440000   nop word [rax + rax]
0x00002a88      4d89c6         mov r14, r8
0x00002a8b      4c89ef         mov rdi, r13
0x00002a8e      4c89442448     mov qword [rsp + 0x48], r8
0x00002a93      4d29fe         sub r14, r15                            ; ../coreutils-8.31/lib/human.c:-605
0x00002a96      48c7c5ffffff.  mov rbp, 0xffffffffffffffff             ; ../coreutils-8.31/lib/human.c:-733
0x00002a9d      e8feebffff     call sym.imp.strlen
0x00002aa2      488d7c2450     lea rdi, [rsp + 0x50]
0x00002aa7      b929000000     mov ecx, 0x29                           ; ')'
0x00002aac      4c89f2         mov rdx, r14
0x00002aaf      4c89fe         mov rsi, r15
0x00002ab2      4889442440     mov qword [rsp + 0x40], rax             ; ../coreutils-8.31/lib/human.c:-798
0x00002ab7      48897c2418     mov qword [rsp + 0x18], rdi
0x00002abc      e8efecffff     call sym.imp.__memcpy_chk
0x00002ac1      4489e1         mov ecx, r12d
0x00002ac4      895c2420       mov dword [rsp + 0x20], ebx
0x00002ac8      4d89f4         mov r12, r14
0x00002acb      4c89eb         mov rbx, r13
0x00002ace      4c8b442448     mov r8, qword [rsp + 0x48]
0x00002ad3      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00002ad8      4c8b6c2440     mov r13, qword [rsp + 0x40]
0x00002add      4189ce         mov r14d, ecx
0x00002ae0      eb40           jmp 0x2b22
0x00002ae2      660f1f440000   nop word [rax + rax]
0x00002ae8      488b442418     mov rax, qword [rsp + 0x18]
0x00002aed      4929ec         sub r12, rbp
0x00002af0      4929e8         sub r8, rbp
0x00002af3      4c89c7         mov rdi, r8
0x00002af6      4889ea         mov rdx, rbp
0x00002af9      4a8d3420       lea rsi, [rax + r12]
0x00002afd      e8beecffff     call sym.imp.memcpy
0x00002b02      4d85e4         test r12, r12
0x00002b05      4989c0         mov r8, rax
0x00002b08      0f840a050000   je 0x3018
0x00002b0e      4d29e8         sub r8, r13
0x00002b11      4c89ea         mov rdx, r13
0x00002b14      4889de         mov rsi, rbx
0x00002b17      4c89c7         mov rdi, r8
0x00002b1a      e8a1ecffff     call sym.imp.memcpy
0x00002b1f      4989c0         mov r8, rax
0x00002b22      410fb607       movzx eax, byte [r15]
0x00002b26      84c0           test al, al
0x00002b28      740d           je 0x2b37
0x00002b2a      3c7f           cmp al, 0x7f
0x00002b2c      0fb6e8         movzx ebp, al
0x00002b2f      490f43ec       cmovae rbp, r12
0x00002b33      4983c701       add r15, 1
0x00002b37      4c39e5         cmp rbp, r12
0x00002b3a      76ac           jbe 0x2ae8
0x00002b3c      4489f0         mov eax, r14d
0x00002b3f      4d89c7         mov r15, r8
0x00002b42      4d89e6         mov r14, r12
0x00002b45      488b742418     mov rsi, qword [rsp + 0x18]
0x00002b4a      4d29f7         sub r15, r14
0x00002b4d      4c89f2         mov rdx, r14
0x00002b50      4c89ff         mov rdi, r15
0x00002b53      8b5c2420       mov ebx, dword [rsp + 0x20]             ; ../coreutils-8.31/lib/human.c:-645
0x00002b57      4189c4         mov r12d, eax
0x00002b5a      e861ecffff     call sym.imp.memcpy
0x00002b5f      e946feffff     jmp 0x29aa
0x00002b64      0f1f4000       nop dword [rax]
0x00002b68      488b0c24       mov rcx, qword [rsp]
0x00002b6c      488db9880200.  lea rdi, [rcx + 0x288]
0x00002b73      c68187020000.  mov byte [rcx + 0x287], 0x20            ; [0x20:1]=64 ; "@"
0x00002b7a      48897c2408     mov qword [rsp + 8], rdi
0x00002b7f      e94dfeffff     jmp 0x29d1
0x00002b84      0f1f4000       nop dword [rax]
0x00002b88      4883ec10       sub rsp, 0x10
0x00002b8c      4489ff         mov edi, r15d
0x00002b8f      d9c0           fld st(0)                               ; ../coreutils-8.31/lib/human.c:-720
0x00002b91      db3c24         fstp xword [rsp]
0x00002b94      db7c2430       fstp xword [rsp + 0x30]
0x00002b98      e8b3f9ffff     call sym.adjust_value.part.0
0x00002b9d      58             pop rax                                 ; ../coreutils-8.31/lib/human.c:-710
0x00002b9e      5a             pop rdx
0x00002b9f      db6c2420       fld xword [rsp + 0x20]
0x00002ba3      e911fcffff     jmp 0x27b9
0x00002ba8      0f1f84000000.  nop dword [rax + rax]
0x00002bb0      4883ec10       sub rsp, 0x10
0x00002bb4      4489ff         mov edi, r15d                           ; string_fortified.h:-992
0x00002bb7      db3c24         fstp xword [rsp]
0x00002bba      e891f9ffff     call sym.adjust_value.part.0
0x00002bbf      4158           pop r8
0x00002bc1      4159           pop r9
0x00002bc3      e964fdffff     jmp 0x292c
0x00002bc8      0f1f84000000.  nop dword [rax + rax]
0x00002bd0      488d5702       lea rdx, [rdi + 2]
0x00002bd4      c6470169       mov byte [rdi + 1], 0x69                ; 'i'
                                                                       ; [0x69:1]=1
0x00002bd8      e93efeffff     jmp 0x2a1b
0x00002bdd      4983fa09       cmp r10, 9
0x00002be1      0f8791020000   ja 0x2e78
0x00002be7      4183ff01       cmp r15d, 1
0x00002beb      0f84b1020000   je 0x2ea2
0x00002bf1      4585ff         test r15d, r15d
0x00002bf4      0f94c2         sete dl
0x00002bf7      85ff           test edi, edi
0x00002bf9      410f9fc0       setg r8b                                ; ../coreutils-8.31/lib/human.c:-697
0x00002bfd      4421c2         and edx, r8d                            ; ../coreutils-8.31/lib/human.c:-695
0x00002c00      84d2           test dl, dl
0x00002c02      0f8481020000   je 0x2e89
0x00002c08      448d4801       lea r9d, [rax + 1]
0x00002c0c      4183f90a       cmp r9d, 0xa
0x00002c10      0f84fb020000   je 0x2f11
0x00002c16      4183c130       add r9d, 0x30                           ; ../coreutils-8.31/lib/human.c:-677
0x00002c1a      488b0424       mov rax, qword [rsp]
0x00002c1e      4c8d80860200.  lea r8, [rax + 0x286]
0x00002c25      448888860200.  mov byte [rax + 0x286], r9b
0x00002c2c      89e8           mov eax, ebp
0x00002c2e      4929e8         sub r8, rbp
0x00002c31      83fd08         cmp ebp, 8
0x00002c34      0f8387020000   jae 0x2ec1
0x00002c3a      40f6c504       test bpl, 4
0x00002c3e      0f8582030000   jne 0x2fc6                              ; ../coreutils-8.31/lib/human.c:-674
0x00002c44      85c0           test eax, eax
0x00002c46      740f           je 0x2c57
0x00002c48      410fb616       movzx edx, byte [r14]
0x00002c4c      a802           test al, 2
0x00002c4e      418810         mov byte [r8], dl
0x00002c51      0f8589030000   jne 0x2fe0
0x00002c57      31ff           xor edi, edi
0x00002c59      4531c9         xor r9d, r9d
0x00002c5c      0f1f4000       nop dword [rax]
0x00002c60      4183ff01       cmp r15d, 1
0x00002c64      0f8476010000   je 0x2de0
0x00002c6a      4585ff         test r15d, r15d
0x00002c6d      7521           jne 0x2c90
0x00002c6f      4401cf         add edi, r9d
0x00002c72      85ff           test edi, edi
0x00002c74      7e1a           jle 0x2c90
0x00002c76      4883c601       add rsi, 1
0x00002c7a      85c9           test ecx, ecx
0x00002c7c      7412           je 0x2c90
0x00002c7e      8b442434       mov eax, dword [rsp + 0x34]
0x00002c82      4839f0         cmp rax, rsi
0x00002c85      0f84c5010000   je 0x2e50
0x00002c8b      0f1f440000     nop dword [rax + rax]
0x00002c90      4d89c7         mov r15, r8
0x00002c93      48b9cdcccccc.  movabs rcx, 0xcccccccccccccccd          ; stdio2.h:-993
0x00002c9d      0f1f00         nop dword [rax]
0x00002ca0      4889f0         mov rax, rsi
0x00002ca3      4983ef01       sub r15, 1
0x00002ca7      48f7e1         mul rcx
0x00002caa      48c1ea03       shr rdx, 3
0x00002cae      488d0492       lea rax, [rdx + rdx*4]
0x00002cb2      4801c0         add rax, rax
0x00002cb5      4829c6         sub rsi, rax
0x00002cb8      83c630         add esi, 0x30
0x00002cbb      4885d2         test rdx, rdx
0x00002cbe      418837         mov byte [r15], sil
0x00002cc1      4889d6         mov rsi, rdx
0x00002cc4      75da           jne 0x2ca0
0x00002cc6      e9d5fcffff     jmp 0x29a0
0x00002ccb      0f1f440000     nop dword [rax + rax]
0x00002cd0      488b4c2410     mov rcx, qword [rsp + 0x10]
0x00002cd5      4883f901       cmp rcx, 1
0x00002cd9      0f86a3010000   jbe 0x2e82
0x00002cdf      8b542434       mov edx, dword [rsp + 0x34]
0x00002ce3      bb01000000     mov ebx, 1
0x00002ce8      b801000000     mov eax, 1
0x00002ced      480fafc2       imul rax, rdx
0x00002cf1      4839c1         cmp rcx, rax
0x00002cf4      0f86bffcffff   jbe 0x29b9
0x00002cfa      83c301         add ebx, 1
0x00002cfd      83fb08         cmp ebx, 8
0x00002d00      75eb           jne 0x2ced
0x00002d02      e9b2fcffff     jmp 0x29b9
0x00002d07      660f1f840000.  nop word [rax + rax]
0x00002d10      4883ec10       sub rsp, 0x10
0x00002d14      488d0dd03900.  lea rcx, str..1Lf                       ; 0x66eb ; "%.1Lf"
0x00002d1b      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002d22      d9c0           fld st(0)
0x00002d24      db3c24         fstp xword [rsp]
0x00002d27      4c8b742410     mov r14, qword [rsp + 0x10]
0x00002d2c      be01000000     mov esi, 1
0x00002d31      31c0           xor eax, eax
0x00002d33      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/human.c:-966
0x00002d36      db7c2430       fstp xword [rsp + 0x30]
0x00002d3a      e8e1ebffff     call sym.imp.__sprintf_chk
0x00002d3f      4c89f7         mov rdi, r14
0x00002d42      e859e9ffff     call sym.imp.strlen
0x00002d47      4989c6         mov r14, rax
0x00002d4a      58             pop rax
0x00002d4b      5a             pop rdx
0x00002d4c      4c3b742418     cmp r14, qword [rsp + 0x18]
0x00002d51      db6c2420       fld xword [rsp + 0x20]
0x00002d55      0f86a7faffff   jbe 0x2802
0x00002d5b      d905fb390000   fld dword [0x0000675c]
0x00002d61      dcc9           fmul st(1), st(0)
0x00002d63      def9           fdivp st(1)                             ; ../coreutils-8.31/lib/human.c:-700
0x00002d65      4883ec10       sub rsp, 0x10
0x00002d69      488d0d753900.  lea rcx, str..0Lf                       ; 0x66e5 ; "%.0Lf"
0x00002d70      4c8b742410     mov r14, qword [rsp + 0x10]
0x00002d75      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00002d7c      be01000000     mov esi, 1
0x00002d81      31c0           xor eax, eax
0x00002d83      31ed           xor ebp, ebp
0x00002d85      4c89f7         mov rdi, r14
0x00002d88      db3c24         fstp xword [rsp]
0x00002d8b      e890ebffff     call sym.imp.__sprintf_chk              ; ../coreutils-8.31/lib/human.c:-810
0x00002d90      4c89f7         mov rdi, r14
0x00002d93      e808e9ffff     call sym.imp.strlen
0x00002d98      415a           pop r10
0x00002d9a      4989c6         mov r14, rax
0x00002d9d      415b           pop r11
0x00002d9f      e9dcfbffff     jmp 0x2980
0x00002da4      0f1f4000       nop dword [rax]
0x00002da8      d905ae390000   fld dword [0x0000675c]
0x00002dae      dcc9           fmul st(1), st(0)
0x00002db0      db2daa390000   fld xword [0x00006760]
0x00002db6      dfea           fucomip st(2)
0x00002db8      76a9           jbe 0x2d63
0x00002dba      d95c2418       fstp dword [rsp + 0x18]
0x00002dbe      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/human.c:-920
0x00002dc2      4489ff         mov edi, r15d
0x00002dc5      db3c24         fstp xword [rsp]
0x00002dc8      e883f7ffff     call sym.adjust_value.part.0
0x00002dcd      5d             pop rbp
0x00002dce      415e           pop r14
0x00002dd0      d9442418       fld dword [rsp + 0x18]
0x00002dd4      eb8d           jmp 0x2d63                              ; ../coreutils-8.31/lib/human.c:-902
0x00002dd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002de0      4889f0         mov rax, rsi
0x00002de3      4863ff         movsxd rdi, edi
0x00002de6      83e001         and eax, 1                              ; ../coreutils-8.31/lib/human.c:-1062
0x00002de9      4801f8         add rax, rdi
0x00002dec      0f95c0         setne al
0x00002def      0fb6c0         movzx eax, al
0x00002df2      4101c1         add r9d, eax
0x00002df5      4183f905       cmp r9d, 5
0x00002df9      0f8f77feffff   jg 0x2c76
0x00002dff      e98cfeffff     jmp 0x2c90                              ; ../coreutils-8.31/lib/human.c:-938
0x00002e04      0f1f4000       nop dword [rax]
0x00002e08      400f92c7       setb dil
0x00002e0c      400fb6ff       movzx edi, dil
0x00002e10      83c702         add edi, 2                              ; ../coreutils-8.31/lib/human.c:-952
0x00002e13      e971faffff     jmp 0x2889
0x00002e18      0f1f84000000.  nop dword [rax + rax]
0x00002e20      4c8b442408     mov r8, qword [rsp + 8]
0x00002e25      31db           xor ebx, ebx
0x00002e27      e934feffff     jmp 0x2c60
0x00002e2c      0f1f4000       nop dword [rax]
0x00002e30      488b5c2408     mov rbx, qword [rsp + 8]
0x00002e35      85c0           test eax, eax
0x00002e37      488d5301       lea rdx, [rbx + 1]
0x00002e3b      c6036b         mov byte [rbx], 0x6b                    ; 'k'
                                                                       ; [0x6b:1]=0
0x00002e3e      0f85d7fbffff   jne 0x2a1b
0x00002e44      4889542408     mov qword [rsp + 8], rdx
0x00002e49      e9d9fbffff     jmp 0x2a27
0x00002e4e      6690           nop
0x00002e50      83fb08         cmp ebx, 8
0x00002e53      0f8437feffff   je 0x2c90
0x00002e59      83c301         add ebx, 1
0x00002e5c      41f6c408       test r12b, 8
0x00002e60      0f84bc000000   je 0x2f22
0x00002e66      4d8d78ff       lea r15, [r8 - 1]
0x00002e6a      41c640ff31     mov byte [r8 - 1], 0x31                 ; '1'
                                                                       ; [0x31:1]=0
0x00002e6f      e92cfbffff     jmp 0x29a0
0x00002e74      0f1f4000       nop dword [rax]
0x00002e78      4c8b442408     mov r8, qword [rsp + 8]
0x00002e7d      e9defdffff     jmp 0x2c60
0x00002e82      31db           xor ebx, ebx
0x00002e84      e930fbffff     jmp 0x29b9
0x00002e89      85c0           test eax, eax                           ; ../coreutils-8.31/lib/human.c:-948
0x00002e8b      0f8585fdffff   jne 0x2c16
0x00002e91      41f6c408       test r12b, 8
0x00002e95      751d           jne 0x2eb4
0x00002e97      41b930000000   mov r9d, 0x30                           ; '0'
0x00002e9d      e978fdffff     jmp 0x2c1a
0x00002ea2      89c2           mov edx, eax
0x00002ea4      83e201         and edx, 1
0x00002ea7      01fa           add edx, edi
0x00002ea9      83fa02         cmp edx, 2
0x00002eac      0f9fc2         setg dl
0x00002eaf      e94cfdffff     jmp 0x2c00
0x00002eb4      4c8b442408     mov r8, qword [rsp + 8]
0x00002eb9      4531c9         xor r9d, r9d
0x00002ebc      e99ffdffff     jmp 0x2c60
0x00002ec1      498b06         mov rax, qword [r14]
0x00002ec4      4d89f1         mov r9, r14
0x00002ec7      498900         mov qword [r8], rax
0x00002eca      89e8           mov eax, ebp
0x00002ecc      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00002ed1      49895400f8     mov qword [r8 + rax - 8], rdx
0x00002ed6      498d5008       lea rdx, [r8 + 8]
0x00002eda      4c89c0         mov rax, r8
0x00002edd      4883e2f8       and rdx, 0xfffffffffffffff8
0x00002ee1      4829d0         sub rax, rdx
0x00002ee4      4929c1         sub r9, rax
0x00002ee7      01e8           add eax, ebp
0x00002ee9      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00002eec      83f808         cmp eax, 8
0x00002eef      0f8262fdffff   jb 0x2c57
0x00002ef5      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00002ef8      31ff           xor edi, edi
0x00002efa      4189fa         mov r10d, edi
0x00002efd      83c708         add edi, 8
0x00002f00      4f8b1c11       mov r11, qword [r9 + r10]
0x00002f04      39c7           cmp edi, eax
0x00002f06      4e891c12       mov qword [rdx + r10], r11
0x00002f0a      72ee           jb 0x2efa
0x00002f0c      e946fdffff     jmp 0x2c57
0x00002f11      498d7201       lea rsi, [r10 + 1]
0x00002f15      4883fe0a       cmp rsi, 0xa
0x00002f19      7455           je 0x2f70
0x00002f1b      31ff           xor edi, edi
0x00002f1d      e96fffffff     jmp 0x2e91
0x00002f22      4889e8         mov rax, rbp
0x00002f25      41c640ff30     mov byte [r8 - 1], 0x30                 ; '0'
                                                                       ; [0x30:1]=0
0x00002f2a      48f7d0         not rax
0x00002f2d      4901c0         add r8, rax
0x00002f30      83fd08         cmp ebp, 8
0x00002f33      89e8           mov eax, ebp
0x00002f35      7343           jae 0x2f7a
0x00002f37      83e504         and ebp, 4
0x00002f3a      0f85b1000000   jne 0x2ff1
0x00002f40      85c0           test eax, eax
0x00002f42      0f841effffff   je 0x2e66
0x00002f48      410fb616       movzx edx, byte [r14]
0x00002f4c      a802           test al, 2
0x00002f4e      418810         mov byte [r8], dl                       ; string_fortified.h:-1218
0x00002f51      0f840fffffff   je 0x2e66
0x00002f57      410fb75406fe   movzx edx, word [r14 + rax - 2]
0x00002f5d      6641895400fe   mov word [r8 + rax - 2], dx
0x00002f63      e9fefeffff     jmp 0x2e66
0x00002f68      0f1f84000000.  nop dword [rax + rax]
0x00002f70      4c8b442408     mov r8, qword [rsp + 8]
0x00002f75      e9ddfcffff     jmp 0x2c57
0x00002f7a      498b06         mov rax, qword [r14]
0x00002f7d      498d4808       lea rcx, [r8 + 8]
0x00002f81      4883e1f8       and rcx, 0xfffffffffffffff8
0x00002f85      498900         mov qword [r8], rax
0x00002f88      89e8           mov eax, ebp
0x00002f8a      498b5406f8     mov rdx, qword [r14 + rax - 8]
0x00002f8f      49895400f8     mov qword [r8 + rax - 8], rdx
0x00002f94      4c89c0         mov rax, r8
0x00002f97      4829c8         sub rax, rcx                            ; ../coreutils-8.31/lib/human.c:-963
0x00002f9a      4929c6         sub r14, rax
0x00002f9d      01e8           add eax, ebp
0x00002f9f      83e0f8         and eax, 0xfffffff8                     ; 4294967288
0x00002fa2      83f808         cmp eax, 8                              ; ../coreutils-8.31/lib/human.c:-957
0x00002fa5      0f82bbfeffff   jb 0x2e66
0x00002fab      83e0f8         and eax, 0xfffffff8                     ; ../coreutils-8.31/lib/human.c:-955 ; 4294967288
0x00002fae      31d2           xor edx, edx
0x00002fb0      89d6           mov esi, edx                            ; ../coreutils-8.31/lib/human.c:-951
0x00002fb2      83c208         add edx, 8
0x00002fb5      498b3c36       mov rdi, qword [r14 + rsi]
0x00002fb9      39c2           cmp edx, eax
0x00002fbb      48893c31       mov qword [rcx + rsi], rdi
0x00002fbf      72ef           jb 0x2fb0
0x00002fc1      e9a0feffff     jmp 0x2e66
0x00002fc6      418b16         mov edx, dword [r14]
0x00002fc9      418910         mov dword [r8], edx
0x00002fcc      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00002fd1      41895400fc     mov dword [r8 + rax - 4], edx
0x00002fd6      e97cfcffff     jmp 0x2c57
0x00002fdb      e8d0e6ffff     call sym.imp.__stack_chk_fail
0x00002fe0      410fb75406fe   movzx edx, word [r14 + rax - 2]         ; ../coreutils-8.31/lib/human.c:-949
0x00002fe6      6641895400fe   mov word [r8 + rax - 2], dx
0x00002fec      e966fcffff     jmp 0x2c57
0x00002ff1      418b16         mov edx, dword [r14]
0x00002ff4      418910         mov dword [r8], edx
0x00002ff7      418b5406fc     mov edx, dword [r14 + rax - 4]
0x00002ffc      41895400fc     mov dword [r8 + rax - 4], edx
0x00003001      e960feffff     jmp 0x2e66
0x00003006      85c0           test eax, eax
0x00003008      488b542408     mov rdx, qword [rsp + 8]
0x0000300d      0f8508faffff   jne 0x2a1b
0x00003013      e90ffaffff     jmp 0x2a27
0x00003018      8b5c2420       mov ebx, dword [rsp + 0x20]
0x0000301c      4989c7         mov r15, rax
0x0000301f      4589f4         mov r12d, r14d
0x00003022      e983f9ffff     jmp 0x29aa
0x00003027      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/human.c:-936
;-- human_options:
0x00003030      4155           push r13
0x00003032      4154           push r12                                ; ../coreutils-8.31/lib/human.c:-935
0x00003034      4989f5         mov r13, rsi
0x00003037      55             push rbp
0x00003038      53             push rbx
0x00003039      4989d4         mov r12, rdx
0x0000303c      4889fb         mov rbx, rdi
0x0000303f      4883ec18       sub rsp, 0x18
0x00003043      64488b042528.  mov rax, qword fs:[0x28]
0x0000304c      4889442408     mov qword [rsp + 8], rax
0x00003051      31c0           xor eax, eax
0x00003053      4885ff         test rdi, rdi
0x00003056      0f8414010000   je 0x3170
0x0000305c      31ed           xor ebp, ebp
0x0000305e      803b27         cmp byte [rbx], 0x27
0x00003061      7509           jne 0x306c
0x00003063      4883c301       add rbx, 1
0x00003067      bd04000000     mov ebp, 4
0x0000306c      488d15cd3600.  lea rdx, obj.block_size_opts            ; 0x6740
0x00003073      488d35265b20.  lea rsi, obj.block_size_args            ; 0x208ba0 ; "(g"
0x0000307a      b904000000     mov ecx, 4
0x0000307f      4889df         mov rdi, rbx
0x00003082      e8b92d0000     call sym.argmatch
0x00003087      85c0           test eax, eax
0x00003089      783d           js 0x30c8
0x0000308b      488d15ae3600.  lea rdx, obj.block_size_opts            ; 0x6740
0x00003092      4898           cdqe
0x00003094      49c704240100.  mov qword [r12], 1
0x0000309c      0b2c82         or ebp, dword [rdx + rax*4]
0x0000309f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/human.c:-913
0x000030a1      41896d00       mov dword [r13], ebp
0x000030a5      488b4c2408     mov rcx, qword [rsp + 8]
0x000030aa      6448330c2528.  xor rcx, qword fs:[0x28]
0x000030b3      0f8558010000   jne 0x3211
0x000030b9      4883c418       add rsp, 0x18
0x000030bd      5b             pop rbx
0x000030be      5d             pop rbp
0x000030bf      415c           pop r12
0x000030c1      415d           pop r13
0x000030c3      c3             ret
0x000030c4      0f1f4000       nop dword [rax]
0x000030c8      4c8d05473600.  lea r8, str.eEgGkKmMpPtTyYzZ0           ; 0x6716 ; "eEgGkKmMpPtTyYzZ0"
0x000030cf      31d2           xor edx, edx
0x000030d1      4889e6         mov rsi, rsp
0x000030d4      4c89e1         mov rcx, r12
0x000030d7      4889df         mov rdi, rbx
0x000030da      e881270000     call sym.xstrtoumax
0x000030df      85c0           test eax, eax
0x000030e1      7545           jne 0x3128
0x000030e3      0fb633         movzx esi, byte [rbx]
0x000030e6      8d56d0         lea edx, [rsi - 0x30]
0x000030e9      80fa09         cmp dl, 9
0x000030ec      762a           jbe 0x3118
0x000030ee      488b0c24       mov rcx, qword [rsp]
0x000030f2      4839cb         cmp rbx, rcx
0x000030f5      7512           jne 0x3109                              ; ../coreutils-8.31/lib/human.c:-960
0x000030f7      e9d4000000     jmp 0x31d0
0x000030fc      0f1f4000       nop dword [rax]
0x00003100      4839cb         cmp rbx, rcx
0x00003103      0f84c7000000   je 0x31d0
0x00003109      4883c301       add rbx, 1
0x0000310d      0fb63b         movzx edi, byte [rbx]
0x00003110      8d57d0         lea edx, [rdi - 0x30]
0x00003113      80fa09         cmp dl, 9
0x00003116      77e8           ja 0x3100
0x00003118      498b1424       mov rdx, qword [r12]
0x0000311c      41896d00       mov dword [r13], ebp
0x00003120      eb12           jmp 0x3134
0x00003122      660f1f440000   nop word [rax + rax]
0x00003128      498b1424       mov rdx, qword [r12]
0x0000312c      41c745000000.  mov dword [r13], 0                      ; ../coreutils-8.31/lib/human.c:-931
0x00003134      4885d2         test rdx, rdx
0x00003137      0f8568ffffff   jne 0x30a5
0x0000313d      488d3dc23500.  lea rdi, str.POSIXLY_CORRECT            ; 0x6706 ; "POSIXLY_CORRECT"
0x00003144      e887e4ffff     call sym.imp.getenv
0x00003149      4883f801       cmp rax, 1
0x0000314d      4819c0         sbb rax, rax
0x00003150      2500020000     and eax, 0x200
0x00003155      480500020000   add rax, 0x200                          ; ../coreutils-8.31/lib/human.c:-909
0x0000315b      49890424       mov qword [r12], rax
0x0000315f      b804000000     mov eax, 4
0x00003164      e93cffffff     jmp 0x30a5
0x00003169      0f1f80000000.  nop dword [rax]
0x00003170      488d3d7a3500.  lea rdi, str.BLOCK_SIZE                 ; 0x66f1 ; "BLOCK_SIZE"
0x00003177      e854e4ffff     call sym.imp.getenv
0x0000317c      4885c0         test rax, rax
0x0000317f      4889c3         mov rbx, rax
0x00003182      0f85d4feffff   jne 0x305c
0x00003188      488d3d6d3500.  lea rdi, str.BLOCKSIZE                  ; 0x66fc ; "BLOCKSIZE"
0x0000318f      e83ce4ffff     call sym.imp.getenv
0x00003194      4885c0         test rax, rax
0x00003197      4889c3         mov rbx, rax
0x0000319a      0f85bcfeffff   jne 0x305c
0x000031a0      488d3d5f3500.  lea rdi, str.POSIXLY_CORRECT            ; 0x6706 ; "POSIXLY_CORRECT"
0x000031a7      e824e4ffff     call sym.imp.getenv
0x000031ac      4885c0         test rax, rax
0x000031af      7449           je 0x31fa
0x000031b1      49c704240002.  mov qword [r12], 0x200                  ; [0x200:8]=0x46474e552
0x000031b9      31c0           xor eax, eax
0x000031bb      41c745000000.  mov dword [r13], 0
0x000031c3      e9ddfeffff     jmp 0x30a5
0x000031c8      0f1f84000000.  nop dword [rax + rax]
0x000031d0      8079ff42       cmp byte [rcx - 1], 0x42
0x000031d4      7412           je 0x31e8
0x000031d6      4080cd80       or bpl, 0x80
0x000031da      83cd20         or ebp, 0x20                            ; "@"
0x000031dd      e936ffffff     jmp 0x3118
0x000031e2      660f1f440000   nop word [rax + rax]
0x000031e8      81cd80010000   or ebp, 0x180
0x000031ee      8079fe69       cmp byte [rcx - 2], 0x69
0x000031f2      0f8520ffffff   jne 0x3118
0x000031f8      ebe0           jmp 0x31da
0x000031fa      49c704240004.  mov qword [r12], 0x400                  ; [0x400:8]=0x120000013c
0x00003202      31c0           xor eax, eax
0x00003204      41c745000000.  mov dword [r13], 0
0x0000320c      e994feffff     jmp 0x30a5
0x00003211      e89ae4ffff     call sym.imp.__stack_chk_fail
0x00003216      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_program_name:
0x00003220      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00003223      53             push rbx
0x00003224      7477           je 0x329d                               ; ../coreutils-8.31/lib/progname.c:51
0x00003226      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000322b      4889fb         mov rbx, rdi
0x0000322e      e8cde4ffff     call sym.imp.strrchr
0x00003233      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003236      7455           je 0x328d
0x00003238      4c8d4001       lea r8, [rax + 1]
0x0000323c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000323f      4829da         sub rdx, rbx
0x00003242      4883fa06       cmp rdx, 6
0x00003246      7e45           jle 0x328d
0x00003248      488d70fa       lea rsi, [rax - 6]
0x0000324c      488d3d553500.  lea rdi, str..libs                      ; 0x67a8 ; "/.libs/"
0x00003253      b907000000     mov ecx, 7
0x00003258      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000325a      0f97c2         seta dl
0x0000325d      80da00         sbb dl, 0
0x00003260      84d2           test dl, dl
0x00003262      7529           jne 0x328d
0x00003264      488d3d453500.  lea rdi, [0x000067b0]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000326b      b903000000     mov ecx, 3
0x00003270      4c89c6         mov rsi, r8
0x00003273      4c89c3         mov rbx, r8
0x00003276      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003278      0f97c2         seta dl
0x0000327b      80da00         sbb dl, 0
0x0000327e      84d2           test dl, dl
0x00003280      750b           jne 0x328d
0x00003282      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003286      48891d135e20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2090a0:8]=0
0x0000328d      48891d6c5e20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x209100:8]=0
0x00003294      48891d255e20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2090c0:8]=0
0x0000329b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000329c      c3             ret
0x0000329d      488b0d3c5e20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x000032a4      488d3dc53400.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x6770 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000032ab      ba37000000     mov edx, 0x37                           ; '7'
0x000032b0      be01000000     mov esi, 1
0x000032b5      e816e6ffff     call sym.imp.fwrite
0x000032ba      e831e3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000032bf      90             nop
;-- gettext_quote.part.1:
0x000032c0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000032c1      53             push rbx
0x000032c2      4889fd         mov rbp, rdi
0x000032c5      89f3           mov ebx, esi
0x000032c7      4883ec08       sub rsp, 8
0x000032cb      e8d02f0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000032d0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000032d3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000032d6      80fa55         cmp dl, 0x55
0x000032d9      7475           je 0x3350
0x000032db      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000032de      7420           je 0x3300
0x000032e0      488d05dc3400.  lea rax, str.l______l                   ; 0x67c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000032e7      488d15d73400.  lea rdx, [0x000067c5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000032ee      83fb09         cmp ebx, 9
0x000032f1      480f45c2       cmovne rax, rdx
0x000032f5      4883c408       add rsp, 8
0x000032f9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000032fa      5d             pop rbp
0x000032fb      c3             ret
0x000032fc      0f1f4000       nop dword [rax]
0x00003300      0fb65001       movzx edx, byte [rax + 1]
0x00003304      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003307      80fa42         cmp dl, 0x42
0x0000330a      75d4           jne 0x32e0
0x0000330c      80780231       cmp byte [rax + 2], 0x31
0x00003310      75ce           jne 0x32e0
0x00003312      80780338       cmp byte [rax + 3], 0x38
0x00003316      75c8           jne 0x32e0
0x00003318      80780430       cmp byte [rax + 4], 0x30
0x0000331c      75c2           jne 0x32e0
0x0000331e      80780533       cmp byte [rax + 5], 0x33
0x00003322      75bc           jne 0x32e0
0x00003324      80780630       cmp byte [rax + 6], 0x30
0x00003328      75b6           jne 0x32e0
0x0000332a      80780700       cmp byte [rax + 7], 0
0x0000332e      75b0           jne 0x32e0
0x00003330      807d0060       cmp byte [rbp], 0x60
0x00003334      488d05813400.  lea rax, [0x000067bc]
0x0000333b      488d157e3400.  lea rdx, [0x000067c0]
0x00003342      480f45c2       cmovne rax, rdx
0x00003346      4883c408       add rsp, 8
0x0000334a      5b             pop rbx
0x0000334b      5d             pop rbp
0x0000334c      c3             ret
0x0000334d      0f1f00         nop dword [rax]
0x00003350      0fb65001       movzx edx, byte [rax + 1]
0x00003354      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003357      80fa54         cmp dl, 0x54
0x0000335a      7584           jne 0x32e0
0x0000335c      0fb65002       movzx edx, byte [rax + 2]
0x00003360      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003363      80fa46         cmp dl, 0x46
0x00003366      0f8574ffffff   jne 0x32e0
0x0000336c      8078032d       cmp byte [rax + 3], 0x2d
0x00003370      0f856affffff   jne 0x32e0
0x00003376      80780438       cmp byte [rax + 4], 0x38
0x0000337a      0f8560ffffff   jne 0x32e0
0x00003380      80780500       cmp byte [rax + 5], 0
0x00003384      0f8556ffffff   jne 0x32e0
0x0000338a      807d0060       cmp byte [rbp], 0x60
0x0000338e      488d051f3400.  lea rax, [0x000067b4]                   ; "\u2018"
0x00003395      488d151c3400.  lea rdx, [0x000067b8]                   ; "\u2019"
0x0000339c      480f45c2       cmovne rax, rdx
0x000033a0      4883c408       add rsp, 8
0x000033a4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000033a5      5d             pop rbp
0x000033a6      c3             ret
0x000033a7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000033b0      4157           push r15
0x000033b2      4156           push r14
0x000033b4      4589c7         mov r15d, r8d
0x000033b7      4155           push r13
0x000033b9      4154           push r12
0x000033bb      4989fe         mov r14, rdi
0x000033be      55             push rbp
0x000033bf      53             push rbx
0x000033c0      4489cb         mov ebx, r9d
0x000033c3      4989f5         mov r13, rsi
0x000033c6      4889cd         mov rbp, rcx
0x000033c9      83e302         and ebx, 2
0x000033cc      4881ecb80000.  sub rsp, 0xb8
0x000033d3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000033db      4889542410     mov qword [rsp + 0x10], rdx
0x000033e0      4489442408     mov dword [rsp + 8], r8d
0x000033e5      44894c2478     mov dword [rsp + 0x78], r9d
0x000033ea      4889442420     mov qword [rsp + 0x20], rax
0x000033ef      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x000033f7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x000033fc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003404      4889442460     mov qword [rsp + 0x60], rax
0x00003409      64488b042528.  mov rax, qword fs:[0x28]
0x00003412      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000341a      31c0           xor eax, eax
0x0000341c      e86fe2ffff     call sym.imp.__ctype_get_mb_cur_max
0x00003421      4183ff0a       cmp r15d, 0xa
0x00003425      4889442458     mov qword [rsp + 0x58], rax
0x0000342a      0f87af110000   ja 0x45df
0x00003430      488d0de93300.  lea rcx, [0x00006820]
0x00003437      4489fa         mov edx, r15d
0x0000343a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000343e      4801c8         add rax, rcx
0x00003441      ffe0           jmp rax
0x00003443      c644240e01     mov byte [rsp + 0xe], 1
0x00003448      c644247c00     mov byte [rsp + 0x7c], 0
0x0000344d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003450      48c744245000.  mov qword [rsp + 0x50], 0
0x00003459      c644240f01     mov byte [rsp + 0xf], 1
0x0000345e      c644240d00     mov byte [rsp + 0xd], 0
0x00003463      488d055b3300.  lea rax, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000346a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003473      4531ff         xor r15d, r15d
0x00003476      c74424080200.  mov dword [rsp + 8], 2
0x0000347e      4889442448     mov qword [rsp + 0x48], rax
0x00003483      4531db         xor r11d, r11d
0x00003486      4889e8         mov rax, rbp
0x00003489      4589e0         mov r8d, r12d
0x0000348c      4c89dd         mov rbp, r11
0x0000348f      4989c3         mov r11, rax
0x00003492      660f1f440000   nop word [rax + rax]
0x00003498      4939eb         cmp r11, rbp
0x0000349b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000349f      4983fbff       cmp r11, 0xffffffffffffffff
0x000034a3      750d           jne 0x34b2
0x000034a5      488b442410     mov rax, qword [rsp + 0x10]
0x000034aa      803c2800       cmp byte [rax + rbp], 0
0x000034ae      410f95c4       setne r12b
0x000034b2      4584e4         test r12b, r12b
0x000034b5      0f8455060000   je 0x3b10
0x000034bb      837c240802     cmp dword [rsp + 8], 2
0x000034c0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034c5      4c8d0c2f       lea r9, [rdi + rbp]
0x000034c9      0f95c0         setne al
0x000034cc      2244240d       and al, byte [rsp + 0xd]
0x000034d0      4189c2         mov r10d, eax
0x000034d3      0f84a7000000   je 0x3580
0x000034d9      488b442418     mov rax, qword [rsp + 0x18]
0x000034de      4885c0         test rax, rax
0x000034e1      0f8429040000   je 0x3910
0x000034e7      4983fbff       cmp r11, 0xffffffffffffffff
0x000034eb      488d5c0500     lea rbx, [rbp + rax]
0x000034f0      752e           jne 0x3520
0x000034f2      4883f801       cmp rax, 1
0x000034f6      7628           jbe 0x3520
0x000034f8      4488442438     mov byte [rsp + 0x38], r8b
0x000034fd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003502      4c894c2428     mov qword [rsp + 0x28], r9
0x00003507      e894e1ffff     call sym.imp.strlen
0x0000350c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003512      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003518      4989c3         mov r11, rax
0x0000351b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003520      4c39db         cmp rbx, r11
0x00003523      4488542428     mov byte [rsp + 0x28], r10b
0x00003528      0f87b2050000   ja 0x3ae0
0x0000352e      488b542418     mov rdx, qword [rsp + 0x18]
0x00003533      488b742448     mov rsi, qword [rsp + 0x48]
0x00003538      4c89cf         mov rdi, r9
0x0000353b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003540      4488442438     mov byte [rsp + 0x38], r8b
0x00003545      4c894c2430     mov qword [rsp + 0x30], r9
0x0000354a      e831e2ffff     call sym.imp.memcmp
0x0000354f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003551      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003556      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000355c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003561      0f8579050000   jne 0x3ae0
0x00003567      807c240f00     cmp byte [rsp + 0xf], 0
0x0000356c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003572      0f857d0f0000   jne 0x44f5
0x00003578      0f1f84000000.  nop dword [rax + rax]
0x00003580      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003584      80fb7e         cmp bl, 0x7e
0x00003587      0f871b030000   ja 0x38a8
0x0000358d      488d0db83200.  lea rcx, [0x0000684c]                   ; "t\xcf\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\xb4\xcf\xff\xff\xbc\xce\xff\xff|\xce\xff\xffD\xd0\xff\xff4\xd0\xff\xff$\xd0\xff\xff\x14\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\\xd0\xff\xff\x04\xd0\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff\xc4\xcf\xff\xff\xf4\xcf\xff\xff\x9c\xcf\xff\xff\xf4\xcf\xff\xffW\xce\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff\xf4\xcf\xff\xff'\xce\xff\xff\\xd0\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\xf4\xcf\xff\xff\xcc\xce\xff\xff\x9c\xcf\xff\xff\xf4\xcf\xff\xff\x9c\xcf\xff\xff\xf4\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xff\x9c\xcf\xff\xffW\xcd\xff\xff\xf4\xcf\xff\xffW\xcd\xff\xff\xc4\xcf\xff\xffH\xcf\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xff8\xcf\xff\xff\x88\xd0\xff\xffp\xd0\xff\xff \xcf\xff\xff`\xd0\xff\xff\b\xcf\xff\xffH\xd0\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xff0\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff"
0x00003594      0fb6d3         movzx edx, bl
0x00003597      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000359b      4801c8         add rax, rcx
0x0000359e      ffe0           jmp rax
0x000035a0      4531d2         xor r10d, r10d
0x000035a3      4983fb01       cmp r11, 1
0x000035a7      0f95c0         setne al
0x000035aa      4983fbff       cmp r11, 0xffffffffffffffff
0x000035ae      750c           jne 0x35bc
0x000035b0      488b442410     mov rax, qword [rsp + 0x10]
0x000035b5      80780100       cmp byte [rax + 1], 0
0x000035b9      0f95c0         setne al
0x000035bc      837c240802     cmp dword [rsp + 8], 2
0x000035c1      0f94c2         sete dl
0x000035c4      84c0           test al, al
0x000035c6      0f844c020000   je 0x3818
0x000035cc      4531e4         xor r12d, r12d
0x000035cf      31c0           xor eax, eax
0x000035d1      0f1f80000000.  nop dword [rax]
0x000035d8      807c240d01     cmp byte [rsp + 0xd], 1
0x000035dd      0f850f010000   jne 0x36f2
0x000035e3      84d2           test dl, dl
0x000035e5      0f8507010000   jne 0x36f2
0x000035eb      488b742420     mov rsi, qword [rsp + 0x20]
0x000035f0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x000035f3      7414           je 0x3609
0x000035f5      89da           mov edx, ebx
0x000035f7      c0ea05         shr dl, 5
0x000035fa      0fb6d2         movzx edx, dl
0x000035fd      8b1496         mov edx, dword [rsi + rdx*4]
0x00003600      0fa3da         bt edx, ebx
0x00003603      0f824a010000   jb 0x3753
0x00003609      4584d2         test r10b, r10b
0x0000360c      0f8541010000   jne 0x3753
0x00003612      83f001         xor eax, 1
0x00003615      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003619      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000361c      84c0           test al, al
0x0000361e      7420           je 0x3640                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003620      4d39fd         cmp r13, r15
0x00003623      7605           jbe 0x362a
0x00003625      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000362a      498d4701       lea rax, [r15 + 1]
0x0000362e      4939c5         cmp r13, rax
0x00003631      7606           jbe 0x3639
0x00003633      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003639      4983c702       add r15, 2
0x0000363d      4531c0         xor r8d, r8d
0x00003640      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003643      7304           jae 0x3649                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003645      43881c3e       mov byte [r14 + r15], bl
0x00003649      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000364e      4983c701       add r15, 1
0x00003652      b800000000     mov eax, 0
0x00003657      4584e4         test r12b, r12b
0x0000365a      0f44f8         cmove edi, eax
0x0000365d      40887c240e     mov byte [rsp + 0xe], dil
0x00003662      e931feffff     jmp 0x3498
0x00003667      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003670      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003673      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003677      83f802         cmp eax, 2
0x0000367a      0f84b8050000   je 0x3c38
0x00003680      83f805         cmp eax, 5
0x00003683      0f846f050000   je 0x3bf8
0x00003689      83f802         cmp eax, 2
0x0000368c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003691      0f94c2         sete dl
0x00003694      4531e4         xor r12d, r12d
0x00003697      31c0           xor eax, eax
0x00003699      e93affffff     jmp 0x35d8
0x0000369e      6690           nop
0x000036a0      4531d2         xor r10d, r10d
0x000036a3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000036a8      0f8402050000   je 0x3bb0
0x000036ae      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000036b3      31d2           xor edx, edx
0x000036b5      31c0           xor eax, eax
0x000036b7      bb27000000     mov ebx, 0x27                           ; '''
0x000036bc      e917ffffff     jmp 0x35d8
0x000036c1      0f1f80000000.  nop dword [rax]
0x000036c8      ba09000000     mov edx, 9
0x000036cd      bb74000000     mov ebx, 0x74                           ; 't'
0x000036d2      837c240802     cmp dword [rsp + 8], 2
0x000036d7      0f94c0         sete al
0x000036da      2244240f       and al, byte [rsp + 0xf]
0x000036de      0f854a010000   jne 0x382e
0x000036e4      807c240d00     cmp byte [rsp + 0xd], 0
0x000036e9      7565           jne 0x3750
0x000036eb      89d3           mov ebx, edx
0x000036ed      4531e4         xor r12d, r12d
0x000036f0      31c0           xor eax, eax
0x000036f2      807c240f00     cmp byte [rsp + 0xf], 0
0x000036f7      0f85eefeffff   jne 0x35eb
0x000036fd      e907ffffff     jmp 0x3609                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003702      660f1f440000   nop word [rax + rax]
0x00003708      ba08000000     mov edx, 8
0x0000370d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003712      ebd0           jmp 0x36e4
0x00003714      0f1f4000       nop dword [rax]
0x00003718      837c240802     cmp dword [rsp + 8], 2
0x0000371d      0f84cd030000   je 0x3af0
0x00003723      807c240d00     cmp byte [rsp + 0xd], 0
0x00003728      0f8412020000   je 0x3940
0x0000372e      807c240f00     cmp byte [rsp + 0xf], 0
0x00003733      0f8407020000   je 0x3940
0x00003739      48837c241800   cmp qword [rsp + 0x18], 0
0x0000373f      0f85b6030000   jne 0x3afb
0x00003745      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000374a      660f1f440000   nop word [rax + rax]
0x00003750      4531e4         xor r12d, r12d
0x00003753      837c240802     cmp dword [rsp + 8], 2
0x00003758      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000375b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003760      89d0           mov eax, edx
0x00003762      0f8550080000   jne 0x3fb8
0x00003768      4489c0         mov eax, r8d
0x0000376b      83f001         xor eax, 1
0x0000376e      20d0           and al, dl
0x00003770      742f           je 0x37a1
0x00003772      4d39fd         cmp r13, r15
0x00003775      7605           jbe 0x377c
0x00003777      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000377c      498d5701       lea rdx, [r15 + 1]
0x00003780      4939d5         cmp r13, rdx
0x00003783      7606           jbe 0x378b
0x00003785      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000378b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000378f      4939d5         cmp r13, rdx
0x00003792      7606           jbe 0x379a
0x00003794      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000379a      4983c703       add r15, 3
0x0000379e      4189c0         mov r8d, eax
0x000037a1      4d39fd         cmp r13, r15
0x000037a4      7605           jbe 0x37ab
0x000037a6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000037ab      4983c701       add r15, 1
0x000037af      4883c501       add rbp, 1
0x000037b3      e988feffff     jmp 0x3640
0x000037b8      0f1f84000000.  nop dword [rax + rax]
0x000037c0      807c240d00     cmp byte [rsp + 0xd], 0
0x000037c5      0f85c8010000   jne 0x3993
0x000037cb      31d2           xor edx, edx
0x000037cd      f644247801     test byte [rsp + 0x78], 1
0x000037d2      0f8413ffffff   je 0x36eb
0x000037d8      4883c501       add rbp, 1
0x000037dc      e9b7fcffff     jmp 0x3498
0x000037e1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000037e8      837c240802     cmp dword [rsp + 8], 2
0x000037ed      0f94c2         sete dl
0x000037f0      31c0           xor eax, eax
0x000037f2      e9e1fdffff     jmp 0x35d8
0x000037f7      660f1f840000.  nop word [rax + rax]
0x00003800      ba07000000     mov edx, 7
0x00003805      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000380a      e9d5feffff     jmp 0x36e4
0x0000380f      90             nop
0x00003810      837c240802     cmp dword [rsp + 8], 2
0x00003815      0f94c2         sete dl
0x00003818      4885ed         test rbp, rbp
0x0000381b      0f85abfdffff   jne 0x35cc
0x00003821      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003826      20d0           and al, dl
0x00003828      0f84aafdffff   je 0x35d8
0x0000382e      4c89dd         mov rbp, r11
0x00003831      c74424080200.  mov dword [rsp + 8], 2
0x00003839      e9fb060000     jmp 0x3f39
0x0000383e      6690           nop
0x00003840      837c240802     cmp dword [rsp + 8], 2
0x00003845      0f94c2         sete dl
0x00003848      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000384b      ebd4           jmp 0x3821
0x0000384d      0f1f00         nop dword [rax]
0x00003850      837c240802     cmp dword [rsp + 8], 2
0x00003855      bb20000000     mov ebx, 0x20                           ; "@"
0x0000385a      0f94c2         sete dl
0x0000385d      ebc2           jmp 0x3821
0x0000385f      90             nop
0x00003860      ba0d000000     mov edx, 0xd
0x00003865      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000386a      e963feffff     jmp 0x36d2
0x0000386f      90             nop
0x00003870      ba0c000000     mov edx, 0xc
0x00003875      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000387a      e965feffff     jmp 0x36e4
0x0000387f      90             nop
0x00003880      ba0b000000     mov edx, 0xb
0x00003885      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000388a      e955feffff     jmp 0x36e4
0x0000388f      90             nop
0x00003890      ba0a000000     mov edx, 0xa
0x00003895      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000389a      e933feffff     jmp 0x36d2
0x0000389f      90             nop
0x000038a0      4531d2         xor r10d, r10d
0x000038a3      0f1f440000     nop dword [rax + rax]
0x000038a8      48837c245801   cmp qword [rsp + 0x58], 1
0x000038ae      0f85a4030000   jne 0x3c58
0x000038b4      4c895c2438     mov qword [rsp + 0x38], r11
0x000038b9      4488442430     mov byte [rsp + 0x30], r8b
0x000038be      4488542428     mov byte [rsp + 0x28], r10b
0x000038c3      e848e0ffff     call sym.imp.__ctype_b_loc
0x000038c8      488b08         mov rcx, qword [rax]
0x000038cb      0fb6d3         movzx edx, bl
0x000038ce      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000038d4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000038da      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000038df      bf01000000     mov edi, 1
0x000038e4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000038e8      66250040       and ax, 0x4000
0x000038ec      410f95c4       setne r12b
0x000038f0      0f94c0         sete al
0x000038f3      2244240d       and al, byte [rsp + 0xd]
0x000038f7      84c0           test al, al
0x000038f9      0f8592090000   jne 0x4291
0x000038ff      837c240802     cmp dword [rsp + 8], 2
0x00003904      0f94c2         sete dl
0x00003907      e9ccfcffff     jmp 0x35d8
0x0000390c      0f1f4000       nop dword [rax]
0x00003910      410fb619       movzx ebx, byte [r9]
0x00003914      80fb7e         cmp bl, 0x7e
0x00003917      7787           ja 0x38a0
0x00003919      488d0d283100.  lea rcx, [0x00006a48]                   ; "H\xcf\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xff8\xcf\xff\xff\x88\xd0\xff\xffp\xd0\xff\xff \xcf\xff\xff`\xd0\xff\xff\b\xcf\xff\xffH\xd0\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xffX\xce\xff\xff0\xd0\xff\xff\x18\xd0\xff\xff\x18\xd0\xff\xff"
0x00003920      0fb6d3         movzx edx, bl
0x00003923      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003927      4801c8         add rax, rcx
0x0000392a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000392c      0f1f4000       nop dword [rax]
0x00003930      4531d2         xor r10d, r10d
0x00003933      807c240d00     cmp byte [rsp + 0xd], 0
0x00003938      0f85f0fdffff   jne 0x372e
0x0000393e      6690           nop
0x00003940      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003945      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000394a      e995fdffff     jmp 0x36e4
0x0000394f      90             nop
0x00003950      ba0c000000     mov edx, 0xc
0x00003955      4531d2         xor r10d, r10d
0x00003958      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000395d      e982fdffff     jmp 0x36e4
0x00003962      660f1f440000   nop word [rax + rax]
0x00003968      ba0a000000     mov edx, 0xa
0x0000396d      4531d2         xor r10d, r10d
0x00003970      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003975      e958fdffff     jmp 0x36d2
0x0000397a      660f1f440000   nop word [rax + rax]
0x00003980      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003985      e9c6fdffff     jmp 0x3750
0x0000398a      660f1f440000   nop word [rax + rax]
0x00003990      4531d2         xor r10d, r10d
0x00003993      837c240802     cmp dword [rsp + 8], 2
0x00003998      0f94c2         sete dl
0x0000399b      807c240f00     cmp byte [rsp + 0xf], 0
0x000039a0      0f85940b0000   jne 0x453a
0x000039a6      4489c0         mov eax, r8d
0x000039a9      4c89f9         mov rcx, r15
0x000039ac      83f001         xor eax, 1
0x000039af      20d0           and al, dl
0x000039b1      742d           je 0x39e0
0x000039b3      4d39fd         cmp r13, r15
0x000039b6      7605           jbe 0x39bd
0x000039b8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000039bd      498d4f01       lea rcx, [r15 + 1]
0x000039c1      4939cd         cmp r13, rcx
0x000039c4      7606           jbe 0x39cc
0x000039c6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000039cc      498d4f02       lea rcx, [r15 + 2]
0x000039d0      4939cd         cmp r13, rcx
0x000039d3      0f8730060000   ja 0x4009
0x000039d9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000039dd      4189c0         mov r8d, eax
0x000039e0      4939cd         cmp r13, rcx
0x000039e3      7605           jbe 0x39ea
0x000039e5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000039ea      837c240802     cmp dword [rsp + 8], 2
0x000039ef      4c8d7901       lea r15, [rcx + 1]
0x000039f3      0f8400060000   je 0x3ff9
0x000039f9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000039fd      4c39d8         cmp rax, r11
0x00003a00      7319           jae 0x3a1b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003a02      488b442410     mov rax, qword [rsp + 0x10]
0x00003a07      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003a0c      88442428       mov byte [rsp + 0x28], al
0x00003a10      83e830         sub eax, 0x30
0x00003a13      3c09           cmp al, 9
0x00003a15      0f862e080000   jbe 0x4249
0x00003a1b      4489e0         mov eax, r12d
0x00003a1e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003a23      4531e4         xor r12d, r12d
0x00003a26      e9adfbffff     jmp 0x35d8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003a2b      0f1f440000     nop dword [rax + rax]
0x00003a30      837c240802     cmp dword [rsp + 8], 2
0x00003a35      4589d4         mov r12d, r10d
0x00003a38      0f94c2         sete dl
0x00003a3b      4531d2         xor r10d, r10d
0x00003a3e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003a40      e993fbffff     jmp 0x35d8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003a45      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003a48      837c240802     cmp dword [rsp + 8], 2
0x00003a4d      0f94c2         sete dl
0x00003a50      4531d2         xor r10d, r10d
0x00003a53      e9c0fdffff     jmp 0x3818
0x00003a58      0f1f84000000.  nop dword [rax + rax]
0x00003a60      837c240802     cmp dword [rsp + 8], 2
0x00003a65      0f94c2         sete dl
0x00003a68      4531d2         xor r10d, r10d
0x00003a6b      4531e4         xor r12d, r12d
0x00003a6e      e9aefdffff     jmp 0x3821
0x00003a73      0f1f440000     nop dword [rax + rax]
0x00003a78      837c240802     cmp dword [rsp + 8], 2
0x00003a7d      4589d4         mov r12d, r10d
0x00003a80      bb20000000     mov ebx, 0x20                           ; "@"
0x00003a85      0f94c2         sete dl
0x00003a88      4531d2         xor r10d, r10d
0x00003a8b      e991fdffff     jmp 0x3821
0x00003a90      ba0d000000     mov edx, 0xd
0x00003a95      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003a98      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003a9d      e930fcffff     jmp 0x36d2
0x00003aa2      660f1f440000   nop word [rax + rax]
0x00003aa8      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003aad      e99efcffff     jmp 0x3750
0x00003ab2      660f1f440000   nop word [rax + rax]
0x00003ab8      ba09000000     mov edx, 9
0x00003abd      4531d2         xor r10d, r10d
0x00003ac0      bb74000000     mov ebx, 0x74                           ; 't'
0x00003ac5      e908fcffff     jmp 0x36d2
0x00003aca      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003ad0      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003ad5      e976fcffff     jmp 0x3750
0x00003ada      660f1f440000   nop word [rax + rax]
0x00003ae0      4531d2         xor r10d, r10d
0x00003ae3      e998faffff     jmp 0x3580
0x00003ae8      0f1f84000000.  nop dword [rax + rax]
0x00003af0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003af5      0f8565090000   jne 0x4460
0x00003afb      4883c501       add rbp, 1
0x00003aff      4489c0         mov eax, r8d
0x00003b02      4531e4         xor r12d, r12d
0x00003b05      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003b0a      e90dfbffff     jmp 0x361c
0x00003b0f      90             nop
0x00003b10      837c240802     cmp dword [rsp + 8], 2
0x00003b15      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003b1a      4589c4         mov r12d, r8d
0x00003b1d      4c89dd         mov rbp, r11
0x00003b20      0f94c2         sete dl
0x00003b23      89d8           mov eax, ebx
0x00003b25      4d85ff         test r15, r15
0x00003b28      0f94c1         sete cl
0x00003b2b      21d0           and eax, edx
0x00003b2d      20c8           and al, cl
0x00003b2f      0f85610a0000   jne 0x4596                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003b35      89d8           mov eax, ebx
0x00003b37      83f001         xor eax, 1
0x00003b3a      20c2           and dl, al
0x00003b3c      0f846a090000   je 0x44ac
0x00003b42      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003b47      0f845d090000   je 0x44aa
0x00003b4d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003b52      0f85f5090000   jne 0x454d
0x00003b58      4d85ed         test r13, r13
0x00003b5b      0f94c0         sete al
0x00003b5e      48837c245000   cmp qword [rsp + 0x50], 0
0x00003b64      0f95c2         setne dl
0x00003b67      20d0           and al, dl
0x00003b69      0f841d0a0000   je 0x458c
0x00003b6f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003b74      488d1d4a2c00.  lea rbx, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b7b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003b7f      c74424080200.  mov dword [rsp + 8], 2
0x00003b87      41bf01000000   mov r15d, 1
0x00003b8d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b96      c644240f00     mov byte [rsp + 0xf], 0
0x00003b9b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003ba0      8844247c       mov byte [rsp + 0x7c], al
0x00003ba4      e9daf8ffff     jmp 0x3483
0x00003ba9      0f1f80000000.  nop dword [rax]
0x00003bb0      807c240f00     cmp byte [rsp + 0xf], 0
0x00003bb5      0f85a5080000   jne 0x4460
0x00003bbb      4d85ed         test r13, r13
0x00003bbe      0f84fc030000   je 0x3fc0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003bc4      31d2           xor edx, edx
0x00003bc6      48837c245000   cmp qword [rsp + 0x50], 0
0x00003bcc      0f85ee030000   jne 0x3fc0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003bd2      4c896c2450     mov qword [rsp + 0x50], r13
0x00003bd7      4983c703       add r15, 3
0x00003bdb      31c0           xor eax, eax
0x00003bdd      448864247c     mov byte [rsp + 0x7c], r12b
0x00003be2      4531c0         xor r8d, r8d
0x00003be5      4989d5         mov r13, rdx
0x00003be8      bb27000000     mov ebx, 0x27                           ; '''
0x00003bed      e917faffff     jmp 0x3609
0x00003bf2      660f1f440000   nop word [rax + rax]
0x00003bf8      f644247804     test byte [rsp + 0x78], 4
0x00003bfd      7421           je 0x3c20
0x00003bff      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003c03      4c39d9         cmp rcx, r11
0x00003c06      7318           jae 0x3c20
0x00003c08      488b442410     mov rax, qword [rsp + 0x10]
0x00003c0d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003c12      0f848a070000   je 0x43a2
0x00003c18      0f1f84000000.  nop dword [rax + rax]
0x00003c20      31d2           xor edx, edx
0x00003c22      4531e4         xor r12d, r12d
0x00003c25      31c0           xor eax, eax
0x00003c27      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003c2c      e9a7f9ffff     jmp 0x35d8
0x00003c31      0f1f80000000.  nop dword [rax]
0x00003c38      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c3d      0f851d080000   jne 0x4460
0x00003c43      4531e4         xor r12d, r12d
0x00003c46      31c0           xor eax, eax
0x00003c48      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003c4d      e9b7f9ffff     jmp 0x3609                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003c52      660f1f440000   nop word [rax + rax]
0x00003c58      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003c60      4983fbff       cmp r11, 0xffffffffffffffff
0x00003c64      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003c70      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003c75      752d           jne 0x3ca4
0x00003c77      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003c7c      4488442440     mov byte [rsp + 0x40], r8b
0x00003c81      4488542438     mov byte [rsp + 0x38], r10b
0x00003c86      4c894c2430     mov qword [rsp + 0x30], r9
0x00003c8b      e810daffff     call sym.imp.strlen
0x00003c90      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003c96      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003c9c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003c9f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003ca4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003cac      31c9           xor ecx, ecx
0x00003cae      885c247e       mov byte [rsp + 0x7e], bl
0x00003cb2      448844247d     mov byte [rsp + 0x7d], r8b
0x00003cb7      4889cb         mov rbx, rcx
0x00003cba      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003cc2      4889442438     mov qword [rsp + 0x38], rax
0x00003cc7      448854247f     mov byte [rsp + 0x7f], r10b
0x00003ccc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003cd4      4c89742440     mov qword [rsp + 0x40], r14
0x00003cd9      4c896c2470     mov qword [rsp + 0x70], r13
0x00003cde      4c895c2430     mov qword [rsp + 0x30], r11
0x00003ce3      488b442410     mov rax, qword [rsp + 0x10]
0x00003ce8      4c8d741d00     lea r14, [rbp + rbx]
0x00003ced      488b542430     mov rdx, qword [rsp + 0x30]
0x00003cf2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003cf7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003cfc      4e8d2c30       lea r13, [rax + r14]
0x00003d00      4c29f2         sub rdx, r14
0x00003d03      4c89ee         mov rsi, r13
0x00003d06      e895200000     call sym.rpl_mbrtowc
0x00003d0b      4885c0         test rax, rax
0x00003d0e      4989c7         mov r15, rax
0x00003d11      744e           je 0x3d61
0x00003d13      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003d17      0f8418060000   je 0x4335
0x00003d1d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003d21      0f849a050000   je 0x42c1
0x00003d27      837c240802     cmp dword [rsp + 8], 2
0x00003d2c      0f94c0         sete al
0x00003d2f      2244240f       and al, byte [rsp + 0xf]
0x00003d33      0f8597010000   jne 0x3ed0
0x00003d39      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003d40      e8bbdbffff     call sym.imp.iswprint
0x00003d45      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003d4a      85c0           test eax, eax
0x00003d4c      b800000000     mov eax, 0
0x00003d51      440f44e0       cmove r12d, eax
0x00003d55      4c01fb         add rbx, r15
0x00003d58      e893dbffff     call sym.imp.mbsinit
0x00003d5d      85c0           test eax, eax
0x00003d5f      7482           je 0x3ce3
0x00003d61      4489e2         mov edx, r12d
0x00003d64      4889df         mov rdi, rbx
0x00003d67      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003d6d      83f201         xor edx, 1
0x00003d70      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003d75      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003d7b      2254240d       and dl, byte [rsp + 0xd]
0x00003d7f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003d87      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003d8c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003d91      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003d96      4883ff01       cmp rdi, 1
0x00003d9a      0f86fb050000   jbe 0x439b
0x00003da0      4889f9         mov rcx, rdi
0x00003da3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003da5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003dab      4801e9         add rcx, rbp
0x00003dae      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003db3      e9b6000000     jmp 0x3e6e
0x00003db8      0f1f84000000.  nop dword [rax + rax]
0x00003dc0      837c240802     cmp dword [rsp + 8], 2
0x00003dc5      0f94c0         sete al
0x00003dc8      4584c9         test r9b, r9b
0x00003dcb      0f85af040000   jne 0x4280
0x00003dd1      4489c6         mov esi, r8d
0x00003dd4      83f601         xor esi, 1
0x00003dd7      4020f0         and al, sil
0x00003dda      742f           je 0x3e0b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003ddc      4d39fd         cmp r13, r15
0x00003ddf      7605           jbe 0x3de6
0x00003de1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003de6      498d7701       lea rsi, [r15 + 1]
0x00003dea      4939f5         cmp r13, rsi
0x00003ded      7606           jbe 0x3df5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003def      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003df5      498d7702       lea rsi, [r15 + 2]
0x00003df9      4939f5         cmp r13, rsi
0x00003dfc      7606           jbe 0x3e04
0x00003dfe      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e04      4983c703       add r15, 3
0x00003e08      4189c0         mov r8d, eax
0x00003e0b      4d39fd         cmp r13, r15
0x00003e0e      7605           jbe 0x3e15
0x00003e10      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003e15      498d4701       lea rax, [r15 + 1]
0x00003e19      4939c5         cmp r13, rax
0x00003e1c      760d           jbe 0x3e2b
0x00003e1e      89d8           mov eax, ebx
0x00003e20      c0e806         shr al, 6
0x00003e23      83c030         add eax, 0x30
0x00003e26      4388443e01     mov byte [r14 + r15 + 1], al
0x00003e2b      498d4702       lea rax, [r15 + 2]
0x00003e2f      4939c5         cmp r13, rax
0x00003e32      7610           jbe 0x3e44
0x00003e34      89d8           mov eax, ebx
0x00003e36      c0e803         shr al, 3
0x00003e39      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003e3c      83c030         add eax, 0x30
0x00003e3f      4388443e02     mov byte [r14 + r15 + 2], al
0x00003e44      83e307         and ebx, 7
0x00003e47      4883c501       add rbp, 1
0x00003e4b      4983c703       add r15, 3
0x00003e4f      83c330         add ebx, 0x30
0x00003e52      4839cd         cmp rbp, rcx
0x00003e55      0f83e5f7ffff   jae 0x3640
0x00003e5b      89d6           mov esi, edx
0x00003e5d      4d39fd         cmp r13, r15
0x00003e60      7604           jbe 0x3e66
0x00003e62      43881c3e       mov byte [r14 + r15], bl
0x00003e66      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003e6a      4983c701       add r15, 1
0x00003e6e      84d2           test dl, dl
0x00003e70      0f854affffff   jne 0x3dc0
0x00003e76      89f0           mov eax, esi
0x00003e78      83f001         xor eax, 1
0x00003e7b      4421c0         and eax, r8d
0x00003e7e      4584d2         test r10b, r10b
0x00003e81      740e           je 0x3e91
0x00003e83      4d39fd         cmp r13, r15
0x00003e86      7605           jbe 0x3e8d
0x00003e88      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003e8d      4983c701       add r15, 1
0x00003e91      4883c501       add rbp, 1
0x00003e95      4839cd         cmp rbp, rcx
0x00003e98      0f837ef7ffff   jae 0x361c
0x00003e9e      84c0           test al, al
0x00003ea0      0f84f8030000   je 0x429e
0x00003ea6      4d39fd         cmp r13, r15
0x00003ea9      7605           jbe 0x3eb0
0x00003eab      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003eb0      498d4701       lea rax, [r15 + 1]
0x00003eb4      4939c5         cmp r13, rax
0x00003eb7      7606           jbe 0x3ebf
0x00003eb9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003ebf      4983c702       add r15, 2
0x00003ec3      4531d2         xor r10d, r10d
0x00003ec6      4531c0         xor r8d, r8d
0x00003ec9      eb92           jmp 0x3e5d
0x00003ecb      0f1f440000     nop dword [rax + rax]
0x00003ed0      4983ff01       cmp r15, 1
0x00003ed4      0f845ffeffff   je 0x3d39
0x00003eda      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003edf      4a8d0c3f       lea rcx, [rdi + r15]
0x00003ee3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003ee8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003eec      eb0f           jmp 0x3efd
0x00003eee      6690           nop
0x00003ef0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003ef4      4939d0         cmp r8, rdx
0x00003ef7      0f843cfeffff   je 0x3d39
0x00003efd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003f00      83e95b         sub ecx, 0x5b
0x00003f03      80f921         cmp cl, 0x21
0x00003f06      77e8           ja 0x3ef0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003f08      be01000000     mov esi, 1
0x00003f0d      48d3e6         shl rsi, cl
0x00003f10      4889f1         mov rcx, rsi
0x00003f13      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00003f1d      4885f1         test rcx, rsi
0x00003f20      74ce           je 0x3ef0
0x00003f22      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f27      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f2c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00003f31      c74424080200.  mov dword [rsp + 8], 2
0x00003f39      807c240d00     cmp byte [rsp + 0xd], 0
0x00003f3e      7410           je 0x3f50
0x00003f40      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00003f42      b804000000     mov eax, 4
0x00003f47      0f44442408     cmove eax, dword [rsp + 8]
0x00003f4c      89442408       mov dword [rsp + 8], eax
0x00003f50      4883ec08       sub rsp, 8
0x00003f54      4889e9         mov rcx, rbp
0x00003f57      4c89ee         mov rsi, r13
0x00003f5a      ff742468       push qword [rsp + 0x68]
0x00003f5e      ff742478       push qword [rsp + 0x78]
0x00003f62      4c89f7         mov rdi, r14
0x00003f65      6a00           push 0
0x00003f67      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003f6f      448b442428     mov r8d, dword [rsp + 0x28]
0x00003f74      488b542430     mov rdx, qword [rsp + 0x30]
0x00003f79      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00003f7d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00003f82      4883c420       add rsp, 0x20
0x00003f86      4989c7         mov r15, rax
0x00003f89      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003f91      6448331c2528.  xor rbx, qword fs:[0x28]
0x00003f9a      4c89f8         mov rax, r15
0x00003f9d      0f8500060000   jne 0x45a3
0x00003fa3      4881c4b80000.  add rsp, 0xb8
0x00003faa      5b             pop rbx
0x00003fab      5d             pop rbp
0x00003fac      415c           pop r12
0x00003fae      415d           pop r13
0x00003fb0      415e           pop r14
0x00003fb2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003fb4      c3             ret
0x00003fb5      0f1f00         nop dword [rax]
0x00003fb8      4c89dd         mov rbp, r11
0x00003fbb      e979ffffff     jmp 0x3f39
0x00003fc0      4d39fd         cmp r13, r15
0x00003fc3      7605           jbe 0x3fca
0x00003fc5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003fca      498d4701       lea rax, [r15 + 1]
0x00003fce      4939c5         cmp r13, rax
0x00003fd1      7606           jbe 0x3fd9
0x00003fd3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003fd9      498d4702       lea rax, [r15 + 2]
0x00003fdd      4939c5         cmp r13, rax
0x00003fe0      0f86ec050000   jbe 0x45d2
0x00003fe6      4c89ea         mov rdx, r13
0x00003fe9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003fef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003ff4      e9d9fbffff     jmp 0x3bd2
0x00003ff9      4489e0         mov eax, r12d
0x00003ffc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004001      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004004      e900f6ffff     jmp 0x3609                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004009      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000400f      e9c5f9ffff     jmp 0x39d9
0x00004014      85db           test ebx, ebx
0x00004016      0f8527f4ffff   jne 0x3443
0x0000401c      c644240d01     mov byte [rsp + 0xd], 1
0x00004021      4d85ed         test r13, r13
0x00004024      0f8590050000   jne 0x45ba
0x0000402a      488d05942700.  lea rax, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004031      48c744245000.  mov qword [rsp + 0x50], 0
0x0000403a      c644240e01     mov byte [rsp + 0xe], 1
0x0000403f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004044      4531e4         xor r12d, r12d
0x00004047      c644240f00     mov byte [rsp + 0xf], 0
0x0000404c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004055      4889442448     mov qword [rsp + 0x48], rax
0x0000405a      41bf01000000   mov r15d, 1
0x00004060      c74424080200.  mov dword [rsp + 8], 2
0x00004068      e916f4ffff     jmp 0x3483                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000406d      0f1f00         nop dword [rax]
0x00004070      85db           test ebx, ebx
0x00004072      0f85f5030000   jne 0x446d
0x00004078      4d85ed         test r13, r13
0x0000407b      0f8425020000   je 0x42a6
0x00004081      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004085      c644240e01     mov byte [rsp + 0xe], 1
0x0000408a      4531e4         xor r12d, r12d
0x0000408d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004092      48c744245000.  mov qword [rsp + 0x50], 0
0x0000409b      488d05212700.  lea rax, str.l______l                   ; 0x67c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040a2      c644240f00     mov byte [rsp + 0xf], 0
0x000040a7      c644240d01     mov byte [rsp + 0xd], 1
0x000040ac      48c744241801.  mov qword [rsp + 0x18], 1
0x000040b5      41bf01000000   mov r15d, 1
0x000040bb      4889442448     mov qword [rsp + 0x48], rax
0x000040c0      e9bef3ffff     jmp 0x3483
0x000040c5      488d05f72600.  lea rax, str.l______l                   ; 0x67c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000040cc      c644240e01     mov byte [rsp + 0xe], 1
0x000040d1      c644247c00     mov byte [rsp + 0x7c], 0
0x000040d6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000040d9      48c744245000.  mov qword [rsp + 0x50], 0
0x000040e2      c644240f01     mov byte [rsp + 0xf], 1
0x000040e7      c644240d01     mov byte [rsp + 0xd], 1
0x000040ec      48c744241801.  mov qword [rsp + 0x18], 1
0x000040f5      4531ff         xor r15d, r15d
0x000040f8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000040fd      c74424080500.  mov dword [rsp + 8], 5
0x00004105      e979f3ffff     jmp 0x3483
0x0000410a      c644240e01     mov byte [rsp + 0xe], 1
0x0000410f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004114      4531e4         xor r12d, r12d
0x00004117      48c744245000.  mov qword [rsp + 0x50], 0
0x00004120      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00004125      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00004128      c644240d01     mov byte [rsp + 0xd], 1
0x0000412d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004136      48c744244800.  mov qword [rsp + 0x48], 0
0x0000413f      e93ff3ffff     jmp 0x3483
0x00004144      837c24080a     cmp dword [rsp + 8], 0xa
0x00004149      7456           je 0x41a1
0x0000414b      488d35752600.  lea rsi, [0x000067c7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004152      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004154      ba05000000     mov edx, 5
0x00004159      e822d5ffff     call sym.imp.dcgettext
0x0000415e      4889c1         mov rcx, rax
0x00004161      4889442468     mov qword [rsp + 0x68], rax
0x00004166      488d055a2600.  lea rax, [0x000067c7]                   ; "`"
0x0000416d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004170      0f8498030000   je 0x450e
0x00004176      488d35482600.  lea rsi, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000417d      31ff           xor edi, edi
0x0000417f      ba05000000     mov edx, 5
0x00004184      e8f7d4ffff     call sym.imp.dcgettext
0x00004189      4889c1         mov rcx, rax
0x0000418c      4889442460     mov qword [rsp + 0x60], rax
0x00004191      488d052d2600.  lea rax, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004198      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000419b      0f8483030000   je 0x4524
0x000041a1      4531ff         xor r15d, r15d
0x000041a4      85db           test ebx, ebx
0x000041a6      0f84c1010000   je 0x436d
0x000041ac      85db           test ebx, ebx
0x000041ae      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000041b3      0f9544240f     setne byte [rsp + 0xf]
0x000041b8      4531e4         xor r12d, r12d
0x000041bb      4889df         mov rdi, rbx
0x000041be      e8ddd4ffff     call sym.imp.strlen
0x000041c3      48895c2448     mov qword [rsp + 0x48], rbx
0x000041c8      4889442418     mov qword [rsp + 0x18], rax
0x000041cd      c644240e01     mov byte [rsp + 0xe], 1
0x000041d2      c644247c00     mov byte [rsp + 0x7c], 0
0x000041d7      48c744245000.  mov qword [rsp + 0x50], 0
0x000041e0      c644240d01     mov byte [rsp + 0xd], 1
0x000041e5      e999f2ffff     jmp 0x3483
0x000041ea      c644240e01     mov byte [rsp + 0xe], 1
0x000041ef      c644247c00     mov byte [rsp + 0x7c], 0
0x000041f4      4531e4         xor r12d, r12d
0x000041f7      48c744245000.  mov qword [rsp + 0x50], 0
0x00004200      c644240f00     mov byte [rsp + 0xf], 0
0x00004205      4531ff         xor r15d, r15d
0x00004208      c644240d00     mov byte [rsp + 0xd], 0
0x0000420d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004216      48c744244800.  mov qword [rsp + 0x48], 0
0x0000421f      e95ff2ffff     jmp 0x3483
0x00004224      c644240e01     mov byte [rsp + 0xe], 1
0x00004229      c644247c00     mov byte [rsp + 0x7c], 0
0x0000422e      4531e4         xor r12d, r12d
0x00004231      48c744245000.  mov qword [rsp + 0x50], 0
0x0000423a      c644240f01     mov byte [rsp + 0xf], 1
0x0000423f      c644240d01     mov byte [rsp + 0xd], 1
0x00004244      e91af2ffff     jmp 0x3463
0x00004249      4d39fd         cmp r13, r15
0x0000424c      7605           jbe 0x4253
0x0000424e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004253      488d4102       lea rax, [rcx + 2]
0x00004257      4939c5         cmp r13, rax
0x0000425a      7606           jbe 0x4262
0x0000425c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004262      4489e0         mov eax, r12d
0x00004265      4c8d7903       lea r15, [rcx + 3]
0x00004269      4531e4         xor r12d, r12d
0x0000426c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004271      e962f3ffff     jmp 0x35d8
0x00004276      662e0f1f8400.  nop word cs:[rax + rax]
0x00004280      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004285      4c89dd         mov rbp, r11
0x00004288      885c240d       mov byte [rsp + 0xd], bl
0x0000428c      e9a8fcffff     jmp 0x3f39
0x00004291      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004296      4531e4         xor r12d, r12d
0x00004299      e902fbffff     jmp 0x3da0
0x0000429e      4531d2         xor r10d, r10d
0x000042a1      e9b7fbffff     jmp 0x3e5d
0x000042a6      48c744245000.  mov qword [rsp + 0x50], 0
0x000042af      c644240e01     mov byte [rsp + 0xe], 1
0x000042b4      4531e4         xor r12d, r12d
0x000042b7      c644247c00     mov byte [rsp + 0x7c], 0
0x000042bc      e9dafdffff     jmp 0x409b
0x000042c1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000042c6      4c89f6         mov rsi, r14
0x000042c9      4c89e9         mov rcx, r13
0x000042cc      4889d8         mov rax, rbx
0x000042cf      4889df         mov rdi, rbx
0x000042d2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000042d8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000042dd      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000042e5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000042e8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000042ee      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000042f6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000042fb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004300      7326           jae 0x4328
0x00004302      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004305      7510           jne 0x4317
0x00004307      eb1f           jmp 0x4328
0x00004309      0f1f80000000.  nop dword [rax]
0x00004310      41803c0100     cmp byte [r9 + rax], 0
0x00004315      740e           je 0x4325
0x00004317      4883c001       add rax, 1
0x0000431b      488d540500     lea rdx, [rbp + rax]
0x00004320      4939d3         cmp r11, rdx
0x00004323      77eb           ja 0x4310
0x00004325      4889c7         mov rdi, rax
0x00004328      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000432d      4531e4         xor r12d, r12d
0x00004330      e961faffff     jmp 0x3d96
0x00004335      4889df         mov rdi, rbx
0x00004338      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000433e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004343      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004349      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004351      4531e4         xor r12d, r12d
0x00004354      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004359      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000435e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004363      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004368      e929faffff     jmp 0x3d96
0x0000436d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004372      0fb602         movzx eax, byte [rdx]
0x00004375      84c0           test al, al
0x00004377      0f842ffeffff   je 0x41ac
0x0000437d      0f1f00         nop dword [rax]
0x00004380      4d39fd         cmp r13, r15
0x00004383      7604           jbe 0x4389
0x00004385      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004389      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000438d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004392      84c0           test al, al
0x00004394      75ea           jne 0x4380
0x00004396      e911feffff     jmp 0x41ac
0x0000439b      89d0           mov eax, edx
0x0000439d      e955f5ffff     jmp 0x38f7
0x000043a2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000043a6      80fb3e         cmp bl, 0x3e
0x000043a9      0f8771f8ffff   ja 0x3c20
0x000043af      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000043b9      480fa3d8       bt rax, rbx
0x000043bd      0f835df8ffff   jae 0x3c20
0x000043c3      807c240f00     cmp byte [rsp + 0xf], 0
0x000043c8      0f85e4010000   jne 0x45b2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000043ce      4d39fd         cmp r13, r15
0x000043d1      7605           jbe 0x43d8
0x000043d3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000043d8      498d4701       lea rax, [r15 + 1]
0x000043dc      4939c5         cmp r13, rax
0x000043df      7606           jbe 0x43e7
0x000043e1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000043e7      498d4702       lea rax, [r15 + 2]
0x000043eb      4939c5         cmp r13, rax
0x000043ee      7606           jbe 0x43f6
0x000043f0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000043f6      498d4703       lea rax, [r15 + 3]
0x000043fa      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x000043fd      7606           jbe 0x4405
0x000043ff      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004405      4983c704       add r15, 4
0x00004409      31d2           xor edx, edx
0x0000440b      4531e4         xor r12d, r12d
0x0000440e      31c0           xor eax, eax
0x00004410      4889cd         mov rbp, rcx
0x00004413      e9c0f1ffff     jmp 0x35d8
0x00004418      85db           test ebx, ebx
0x0000441a      0f8488010000   je 0x45a8
0x00004420      488d059e2300.  lea rax, [0x000067c5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004427      c644240e01     mov byte [rsp + 0xe], 1
0x0000442c      c644247c00     mov byte [rsp + 0x7c], 0
0x00004431      4531e4         xor r12d, r12d
0x00004434      48c744245000.  mov qword [rsp + 0x50], 0
0x0000443d      c644240f01     mov byte [rsp + 0xf], 1
0x00004442      c644240d00     mov byte [rsp + 0xd], 0
0x00004447      48c744241801.  mov qword [rsp + 0x18], 1
0x00004450      4531ff         xor r15d, r15d
0x00004453      4889442448     mov qword [rsp + 0x48], rax
0x00004458      e926f0ffff     jmp 0x3483
0x0000445d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004460      4c89dd         mov rbp, r11
0x00004463      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004468      e9ccfaffff     jmp 0x3f39
0x0000446d      488d054f2300.  lea rax, str.l______l                   ; 0x67c3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004474      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004479      c644247c00     mov byte [rsp + 0x7c], 0
0x0000447e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004481      48c744245000.  mov qword [rsp + 0x50], 0
0x0000448a      c644240f01     mov byte [rsp + 0xf], 1
0x0000448f      c644240d01     mov byte [rsp + 0xd], 1
0x00004494      48c744241801.  mov qword [rsp + 0x18], 1
0x0000449d      4531ff         xor r15d, r15d
0x000044a0      4889442448     mov qword [rsp + 0x48], rax
0x000044a5      e9d9efffff     jmp 0x3483
0x000044aa      89d0           mov eax, edx
0x000044ac      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000044b1      4885db         test rbx, rbx
0x000044b4      742c           je 0x44e2
0x000044b6      84c0           test al, al
0x000044b8      7428           je 0x44e2
0x000044ba      0fb60b         movzx ecx, byte [rbx]
0x000044bd      4889d8         mov rax, rbx
0x000044c0      84c9           test cl, cl
0x000044c2      741e           je 0x44e2
0x000044c4      4c89fa         mov rdx, r15
0x000044c7      4c29f8         sub rax, r15
0x000044ca      4939d5         cmp r13, rdx
0x000044cd      7604           jbe 0x44d3
0x000044cf      41880c16       mov byte [r14 + rdx], cl
0x000044d3      4883c201       add rdx, 1
0x000044d7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000044db      84c9           test cl, cl
0x000044dd      75eb           jne 0x44ca
0x000044df      4989d7         mov r15, rdx
0x000044e2      4d39fd         cmp r13, r15
0x000044e5      0f869efaffff   jbe 0x3f89
0x000044eb      43c6043e00     mov byte [r14 + r15], 0
0x000044f0      e994faffff     jmp 0x3f89
0x000044f5      837c240802     cmp dword [rsp + 8], 2
0x000044fa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000044ff      4c89dd         mov rbp, r11
0x00004502      0f94c0         sete al
0x00004505      885c240d       mov byte [rsp + 0xd], bl
0x00004509      e92bfaffff     jmp 0x3f39
0x0000450e      8b742408       mov esi, dword [rsp + 8]
0x00004512      4889cf         mov rdi, rcx
0x00004515      e8a6edffff     call sym.gettext_quote.part.1
0x0000451a      4889442468     mov qword [rsp + 0x68], rax
0x0000451f      e952fcffff     jmp 0x4176
0x00004524      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004528      4889cf         mov rdi, rcx
0x0000452b      e890edffff     call sym.gettext_quote.part.1
0x00004530      4889442460     mov qword [rsp + 0x60], rax
0x00004535      e967fcffff     jmp 0x41a1
0x0000453a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000453f      4c89dd         mov rbp, r11
0x00004542      89d0           mov eax, edx
0x00004544      885c240d       mov byte [rsp + 0xd], bl
0x00004548      e9ecf9ffff     jmp 0x3f39
0x0000454d      4883ec08       sub rsp, 8
0x00004551      41b805000000   mov r8d, 5
0x00004557      4c89d9         mov rcx, r11
0x0000455a      ff742468       push qword [rsp + 0x68]
0x0000455e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004562      4c89f7         mov rdi, r14
0x00004565      ff742438       push qword [rsp + 0x38]
0x00004569      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004571      488b542430     mov rdx, qword [rsp + 0x30]
0x00004576      488b742470     mov rsi, qword [rsp + 0x70]
0x0000457b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004580      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004584      4989c7         mov r15, rax
0x00004587      e9fdf9ffff     jmp 0x3f89
0x0000458c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004591      e916ffffff     jmp 0x44ac
0x00004596      c74424080200.  mov dword [rsp + 8], 2
0x0000459e      e996f9ffff     jmp 0x3f39
0x000045a3      e808d1ffff     call sym.imp.__stack_chk_fail
0x000045a8      c644240d00     mov byte [rsp + 0xd], 0
0x000045ad      e96ffaffff     jmp 0x4021
0x000045b2      4c89dd         mov rbp, r11
0x000045b5      e996f9ffff     jmp 0x3f50
0x000045ba      c644240e01     mov byte [rsp + 0xe], 1
0x000045bf      31c0           xor eax, eax
0x000045c1      4531e4         xor r12d, r12d
0x000045c4      48c744245000.  mov qword [rsp + 0x50], 0
0x000045cd      e9a2f5ffff     jmp 0x3b74
0x000045d2      4c89ea         mov rdx, r13
0x000045d5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000045da      e9f3f5ffff     jmp 0x3bd2
0x000045df      e80cd0ffff     call sym.imp.abort
0x000045e4      6690           nop
0x000045e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x000045f0      4157           push r15
0x000045f2      4156           push r14
0x000045f4      4c63ff         movsxd r15, edi
0x000045f7      4155           push r13
0x000045f9      4154           push r12
0x000045fb      4989d6         mov r14, rdx
0x000045fe      55             push rbp
0x000045ff      53             push rbx
0x00004600      4889cd         mov rbp, rcx
0x00004603      4883ec28       sub rsp, 0x28
0x00004607      4889742408     mov qword [rsp + 8], rsi
0x0000460c      e8efcfffff     call sym.imp.__errno_location
0x00004611      4989c5         mov r13, rax
0x00004614      8b00           mov eax, dword [rax]
0x00004616      4585ff         test r15d, r15d
0x00004619      488b1d404a20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004620      89442418       mov dword [rsp + 0x18], eax
0x00004624      0f8867010000   js 0x4791
0x0000462a      44393d274a20.  cmp dword [obj.nslots], r15d            ; [0x209058:4]=1
0x00004631      7f62           jg 0x4695
0x00004633      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000463a      0f8456010000   je 0x4796
0x00004640      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004644      488d05254a20.  lea rax, obj.slotvec0                   ; 0x209070
0x0000464b      4963f4         movsxd rsi, r12d
0x0000464e      48c1e604       shl rsi, 4
0x00004652      4839c3         cmp rbx, rax
0x00004655      0f8415010000   je 0x4770
0x0000465b      4889df         mov rdi, rbx
0x0000465e      e8cd0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004663      4889c3         mov rbx, rax
0x00004666      488905f34920.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x0000466d      48633de44920.  movsxd rdi, dword [obj.nslots]          ; [0x209058:4]=1
0x00004674      4489e2         mov edx, r12d
0x00004677      31f6           xor esi, esi
0x00004679      29fa           sub edx, edi
0x0000467b      48c1e704       shl rdi, 4
0x0000467f      4863d2         movsxd rdx, edx
0x00004682      4801df         add rdi, rbx
0x00004685      48c1e204       shl rdx, 4
0x00004689      e8b2d0ffff     call sym.imp.memset
0x0000468e      448925c34920.  mov dword [obj.nslots], r12d            ; [0x209058:4]=1
0x00004695      8b4504         mov eax, dword [rbp + 4]
0x00004698      49c1e704       shl r15, 4
0x0000469c      4883ec08       sub rsp, 8
0x000046a0      4c01fb         add rbx, r15
0x000046a3      4c8d7d08       lea r15, [rbp + 8]
0x000046a7      448b4500       mov r8d, dword [rbp]
0x000046ab      4c8b1b         mov r11, qword [rbx]
0x000046ae      4c8b6308       mov r12, qword [rbx + 8]
0x000046b2      4c89f1         mov rcx, r14
0x000046b5      83c801         or eax, 1
0x000046b8      89442424       mov dword [rsp + 0x24], eax
0x000046bc      ff7530         push qword [rbp + 0x30]
0x000046bf      4189c1         mov r9d, eax
0x000046c2      ff7528         push qword [rbp + 0x28]
0x000046c5      4157           push r15
0x000046c7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000046ca      488b542428     mov rdx, qword [rsp + 0x28]
0x000046cf      4c89e7         mov rdi, r12
0x000046d2      4c895c2430     mov qword [rsp + 0x30], r11
0x000046d7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000046dc      4883c420       add rsp, 0x20
0x000046e0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000046e5      4939c3         cmp r11, rax
0x000046e8      7767           ja 0x4751
0x000046ea      488d7001       lea rsi, [rax + 1]
0x000046ee      488d052b4a20.  lea rax, obj.slot0                      ; 0x209120
0x000046f5      4939c4         cmp r12, rax
0x000046f8      488933         mov qword [rbx], rsi
0x000046fb      7412           je 0x470f
0x000046fd      4c89e7         mov rdi, r12
0x00004700      4889742410     mov qword [rsp + 0x10], rsi
0x00004705      e8d6ceffff     call sym.imp.free
0x0000470a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000470f      4889f7         mov rdi, rsi
0x00004712      4889742410     mov qword [rsp + 0x10], rsi
0x00004717      e8b40e0000     call sym.xmalloc
0x0000471c      4883ec08       sub rsp, 8
0x00004720      48894308       mov qword [rbx + 8], rax
0x00004724      448b4500       mov r8d, dword [rbp]
0x00004728      ff7530         push qword [rbp + 0x30]
0x0000472b      ff7528         push qword [rbp + 0x28]
0x0000472e      4c89f1         mov rcx, r14
0x00004731      4157           push r15
0x00004733      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004738      4889c7         mov rdi, rax
0x0000473b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004740      488b742430     mov rsi, qword [rsp + 0x30]
0x00004745      4989c4         mov r12, rax
0x00004748      e863ecffff     call sym.quotearg_buffer_restyled
0x0000474d      4883c420       add rsp, 0x20
0x00004751      8b442418       mov eax, dword [rsp + 0x18]
0x00004755      41894500       mov dword [r13], eax
0x00004759      4883c428       add rsp, 0x28
0x0000475d      4c89e0         mov rax, r12
0x00004760      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004761      5d             pop rbp
0x00004762      415c           pop r12
0x00004764      415d           pop r13
0x00004766      415e           pop r14
0x00004768      415f           pop r15
0x0000476a      c3             ret
0x0000476b      0f1f440000     nop dword [rax + rax]
0x00004770      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004772      e8b90e0000     call sym.xrealloc
0x00004777      660f6f05f148.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000477f      4889c3         mov rbx, rax
0x00004782      488905d74820.  mov qword [obj.slotvec], rax            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004789      0f1100         movups xmmword [rax], xmm0
0x0000478c      e9dcfeffff     jmp 0x466d
0x00004791      e85aceffff     call sym.imp.abort
0x00004796      e885100000     call sym.xalloc_die
0x0000479b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000047a0      4154           push r12
0x000047a2      55             push rbp
0x000047a3      53             push rbx
0x000047a4      4889fb         mov rbx, rdi
0x000047a7      e854ceffff     call sym.imp.__errno_location
0x000047ac      448b20         mov r12d, dword [rax]
0x000047af      4889c5         mov rbp, rax
0x000047b2      488d05674a20.  lea rax, obj.default_quoting_options    ; 0x209220
0x000047b9      4885db         test rbx, rbx
0x000047bc      be38000000     mov esi, 0x38                           ; '8'
0x000047c1      480f44d8       cmove rbx, rax
0x000047c5      4889df         mov rdi, rbx
0x000047c8      e803100000     call sym.xmemdup
0x000047cd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000047d1      5b             pop rbx
0x000047d2      5d             pop rbp
0x000047d3      415c           pop r12
0x000047d5      c3             ret
0x000047d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000047e0      488d05394a20.  lea rax, obj.default_quoting_options    ; 0x209220
0x000047e7      4885ff         test rdi, rdi
0x000047ea      480f44f8       cmove rdi, rax
0x000047ee      8b07           mov eax, dword [rdi]
0x000047f0      c3             ret
0x000047f1      0f1f440000     nop dword [rax + rax]
0x000047f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004800      488d05194a20.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004807      4885ff         test rdi, rdi
0x0000480a      480f44f8       cmove rdi, rax
0x0000480e      8937           mov dword [rdi], esi
0x00004810      c3             ret
0x00004811      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004816      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004820      488d05f94920.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004827      4885ff         test rdi, rdi
0x0000482a      89f1           mov ecx, esi
0x0000482c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004830      89f0           mov eax, esi
0x00004832      83e11f         and ecx, 0x1f
0x00004835      c0e805         shr al, 5
0x00004838      0fb6c0         movzx eax, al
0x0000483b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004840      8b37           mov esi, dword [rdi]
0x00004842      89f0           mov eax, esi
0x00004844      d3e8           shr eax, cl
0x00004846      31c2           xor edx, eax
0x00004848      83e001         and eax, 1
0x0000484b      83e201         and edx, 1
0x0000484e      d3e2           shl edx, cl
0x00004850      31f2           xor edx, esi
0x00004852      8917           mov dword [rdi], edx
0x00004854      c3             ret
0x00004855      90             nop
0x00004856      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004860      488d05b94920.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004867      4885ff         test rdi, rdi
0x0000486a      480f44f8       cmove rdi, rax
0x0000486e      8b4704         mov eax, dword [rdi + 4]
0x00004871      897704         mov dword [rdi + 4], esi
0x00004874      c3             ret
0x00004875      90             nop
0x00004876      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004880      488d05994920.  lea rax, obj.default_quoting_options    ; 0x209220
0x00004887      4885ff         test rdi, rdi
0x0000488a      480f44f8       cmove rdi, rax
0x0000488e      4885f6         test rsi, rsi
0x00004891      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004897      740e           je 0x48a7
0x00004899      4885d2         test rdx, rdx
0x0000489c      7409           je 0x48a7
0x0000489e      48897728       mov qword [rdi + 0x28], rsi
0x000048a2      48895730       mov qword [rdi + 0x30], rdx
0x000048a6      c3             ret
0x000048a7      4883ec08       sub rsp, 8
0x000048ab      e840cdffff     call sym.imp.abort
;-- quotearg_buffer:
0x000048b0      4157           push r15
0x000048b2      4156           push r14
0x000048b4      488d05654920.  lea rax, obj.default_quoting_options    ; 0x209220
0x000048bb      4155           push r13
0x000048bd      4154           push r12
0x000048bf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000048c2      55             push rbp
0x000048c3      53             push rbx
0x000048c4      4c89c3         mov rbx, r8
0x000048c7      4989f6         mov r14, rsi
0x000048ca      4989d7         mov r15, rdx
0x000048cd      4883ec18       sub rsp, 0x18
0x000048d1      4d85c0         test r8, r8
0x000048d4      480f44d8       cmove rbx, rax
0x000048d8      48894c2408     mov qword [rsp + 8], rcx
0x000048dd      e81ecdffff     call sym.imp.__errno_location
0x000048e2      448b20         mov r12d, dword [rax]
0x000048e5      4889c5         mov rbp, rax
0x000048e8      488d4308       lea rax, [rbx + 8]
0x000048ec      4883ec08       sub rsp, 8
0x000048f0      448b4b04       mov r9d, dword [rbx + 4]
0x000048f4      ff7330         push qword [rbx + 0x30]
0x000048f7      448b03         mov r8d, dword [rbx]
0x000048fa      ff7328         push qword [rbx + 0x28]
0x000048fd      4c89fa         mov rdx, r15
0x00004900      50             push rax
0x00004901      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004906      4c89f6         mov rsi, r14
0x00004909      4c89ef         mov rdi, r13
0x0000490c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004911      44896500       mov dword [rbp], r12d
0x00004915      4883c438       add rsp, 0x38
0x00004919      5b             pop rbx
0x0000491a      5d             pop rbp
0x0000491b      415c           pop r12
0x0000491d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000491f      415e           pop r14
0x00004921      415f           pop r15
0x00004923      c3             ret
0x00004924      6690           nop
0x00004926      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004930      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004932      4156           push r14
0x00004934      488d05e54820.  lea rax, obj.default_quoting_options    ; 0x209220
0x0000493b      4155           push r13
0x0000493d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000493f      4989d4         mov r12, rdx
0x00004942      55             push rbp
0x00004943      53             push rbx
0x00004944      4889cb         mov rbx, rcx
0x00004947      4989fe         mov r14, rdi
0x0000494a      4989f7         mov r15, rsi
0x0000494d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004951      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004954      480f44d8       cmove rbx, rax
0x00004958      31ed           xor ebp, ebp
0x0000495a      e8a1ccffff     call sym.imp.__errno_location
0x0000495f      4d85e4         test r12, r12
0x00004962      4989c5         mov r13, rax
0x00004965      8b00           mov eax, dword [rax]
0x00004967      400f94c5       sete bpl
0x0000496b      0b6b04         or ebp, dword [rbx + 4]
0x0000496e      4c8d5308       lea r10, [rbx + 8]
0x00004972      4883ec08       sub rsp, 8
0x00004976      448b03         mov r8d, dword [rbx]
0x00004979      4c89f9         mov rcx, r15
0x0000497c      89442414       mov dword [rsp + 0x14], eax
0x00004980      ff7330         push qword [rbx + 0x30]
0x00004983      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004986      ff7328         push qword [rbx + 0x28]
0x00004989      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000498b      31f6           xor esi, esi
0x0000498d      4189e9         mov r9d, ebp
0x00004990      31ff           xor edi, edi
0x00004992      4c89542440     mov qword [rsp + 0x40], r10
0x00004997      e814eaffff     call sym.quotearg_buffer_restyled
0x0000499c      488d7001       lea rsi, [rax + 1]
0x000049a0      4889442448     mov qword [rsp + 0x48], rax
0x000049a5      4883c420       add rsp, 0x20
0x000049a9      4889f7         mov rdi, rsi
0x000049ac      4889742418     mov qword [rsp + 0x18], rsi
0x000049b1      e81a0c0000     call sym.xmalloc
0x000049b6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000049bb      4883ec08       sub rsp, 8
0x000049bf      ff7330         push qword [rbx + 0x30]
0x000049c2      ff7328         push qword [rbx + 0x28]
0x000049c5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000049ca      4189e9         mov r9d, ebp
0x000049cd      448b03         mov r8d, dword [rbx]
0x000049d0      4c89f9         mov rcx, r15
0x000049d3      4c89f2         mov rdx, r14
0x000049d6      4889c7         mov rdi, rax
0x000049d9      4152           push r10
0x000049db      488b742438     mov rsi, qword [rsp + 0x38]
0x000049e0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000049e5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000049e9      4883c420       add rsp, 0x20
0x000049ed      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000049f0      41894500       mov dword [r13], eax
0x000049f4      7409           je 0x49ff
0x000049f6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000049fb      4d891c24       mov qword [r12], r11
0x000049ff      488b442410     mov rax, qword [rsp + 0x10]
0x00004a04      4883c438       add rsp, 0x38
0x00004a08      5b             pop rbx
0x00004a09      5d             pop rbp
0x00004a0a      415c           pop r12
0x00004a0c      415d           pop r13
0x00004a0e      415e           pop r14
0x00004a10      415f           pop r15
0x00004a12      c3             ret
0x00004a13      0f1f00         nop dword [rax]
0x00004a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004a20      4889d1         mov rcx, rdx
0x00004a23      31d2           xor edx, edx
0x00004a25      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004a2a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004a30      8b0522462000   mov eax, dword [obj.nslots]             ; [0x209058:4]=1
0x00004a36      4154           push r12
0x00004a38      4c8b25214620.  mov r12, qword [obj.slotvec]            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004a3f      55             push rbp
0x00004a40      53             push rbx
0x00004a41      83f801         cmp eax, 1
0x00004a44      7e2b           jle 0x4a71                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004a46      83e802         sub eax, 2
0x00004a49      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004a4e      48c1e004       shl rax, 4
0x00004a52      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004a57      660f1f840000.  nop word [rax + rax]
0x00004a60      488b3b         mov rdi, qword [rbx]
0x00004a63      4883c310       add rbx, 0x10
0x00004a67      e874cbffff     call sym.imp.free
0x00004a6c      4839eb         cmp rbx, rbp
0x00004a6f      75ef           jne 0x4a60
0x00004a71      498b7c2408     mov rdi, qword [r12 + 8]
0x00004a76      488d1da34620.  lea rbx, obj.slot0                      ; 0x209120
0x00004a7d      4839df         cmp rdi, rbx
0x00004a80      7417           je 0x4a99
0x00004a82      e859cbffff     call sym.imp.free
0x00004a87      48c705de4520.  mov qword [obj.slotvec0], 0x100         ; [0x209070:8]=256
0x00004a92      48891ddf4520.  mov qword [0x00209078], rbx             ; [0x209078:8]=0x209120 obj.slot0
0x00004a99      488d1dd04520.  lea rbx, obj.slotvec0                   ; 0x209070
0x00004aa0      4939dc         cmp r12, rbx
0x00004aa3      740f           je 0x4ab4
0x00004aa5      4c89e7         mov rdi, r12
0x00004aa8      e833cbffff     call sym.imp.free
0x00004aad      48891dac4520.  mov qword [obj.slotvec], rbx            ; [0x209060:8]=0x209070 obj.slotvec0 ; "p\x90 "
0x00004ab4      5b             pop rbx
0x00004ab5      c70599452000.  mov dword [obj.nslots], 1               ; [0x209058:4]=1
0x00004abf      5d             pop rbp
0x00004ac0      415c           pop r12
0x00004ac2      c3             ret
0x00004ac3      0f1f00         nop dword [rax]
0x00004ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004ad0      488d0d494720.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004ad7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ade      e90dfbffff     jmp sym.quotearg_n_options
0x00004ae3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004ae6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004af0      488d0d294720.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004af7      e9f4faffff     jmp sym.quotearg_n_options
0x00004afc      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004b00      488d0d194720.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004b07      4889fe         mov rsi, rdi
0x00004b0a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b11      31ff           xor edi, edi
0x00004b13      e9d8faffff     jmp sym.quotearg_n_options
0x00004b18      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004b20      488d0df94620.  lea rcx, obj.default_quoting_options    ; 0x209220
0x00004b27      4889f2         mov rdx, rsi
0x00004b2a      4889fe         mov rsi, rdi
0x00004b2d      31ff           xor edi, edi
0x00004b2f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004b34      6690           nop
0x00004b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004b40      4883ec48       sub rsp, 0x48
0x00004b44      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004b47      64488b142528.  mov rdx, qword fs:[0x28]
0x00004b50      4889542438     mov qword [rsp + 0x38], rdx
0x00004b55      31d2           xor edx, edx
0x00004b57      83fe0a         cmp esi, 0xa
0x00004b5a      7468           je 0x4bc4
0x00004b5c      893424         mov dword [rsp], esi
0x00004b5f      4889e1         mov rcx, rsp
0x00004b62      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004b69      4889c6         mov rsi, rax
0x00004b6c      48c744240400.  mov qword [rsp + 4], 0
0x00004b75      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004b7e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004b87      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004b90      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004b99      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004ba2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004baa      e841faffff     call sym.quotearg_n_options
0x00004baf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004bb4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004bbd      750a           jne 0x4bc9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004bbf      4883c448       add rsp, 0x48
0x00004bc3      c3             ret
0x00004bc4      e827caffff     call sym.imp.abort
0x00004bc9      e8e2caffff     call sym.imp.__stack_chk_fail
0x00004bce      6690           nop
;-- quotearg_n_style_mem:
0x00004bd0      4883ec48       sub rsp, 0x48
0x00004bd4      4889d0         mov rax, rdx
0x00004bd7      4889ca         mov rdx, rcx
0x00004bda      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004be3      48894c2438     mov qword [rsp + 0x38], rcx
0x00004be8      31c9           xor ecx, ecx
0x00004bea      83fe0a         cmp esi, 0xa
0x00004bed      7461           je 0x4c50
0x00004bef      893424         mov dword [rsp], esi
0x00004bf2      4889e1         mov rcx, rsp
0x00004bf5      4889c6         mov rsi, rax
0x00004bf8      48c744240400.  mov qword [rsp + 4], 0
0x00004c01      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004c0a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004c13      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004c1c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004c25      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004c2e      c74424340000.  mov dword [rsp + 0x34], 0
0x00004c36      e8b5f9ffff     call sym.quotearg_n_options
0x00004c3b      488b542438     mov rdx, qword [rsp + 0x38]
0x00004c40      644833142528.  xor rdx, qword fs:[0x28]
0x00004c49      750a           jne 0x4c55
0x00004c4b      4883c448       add rsp, 0x48
0x00004c4f      c3             ret
0x00004c50      e89bc9ffff     call sym.imp.abort
0x00004c55      e856caffff     call sym.imp.__stack_chk_fail
0x00004c5a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004c60      4889f2         mov rdx, rsi
0x00004c63      89fe           mov esi, edi
0x00004c65      31ff           xor edi, edi
0x00004c67      e9d4feffff     jmp sym.quotearg_n_style
0x00004c6c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004c70      4889d1         mov rcx, rdx
0x00004c73      4889f2         mov rdx, rsi
0x00004c76      89fe           mov esi, edi
0x00004c78      31ff           xor edi, edi
0x00004c7a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004c7f      90             nop
;-- quotearg_char_mem:
0x00004c80      4883ec48       sub rsp, 0x48
0x00004c84      89d1           mov ecx, edx
0x00004c86      64488b042528.  mov rax, qword fs:[0x28]
0x00004c8f      4889442438     mov qword [rsp + 0x38], rax
0x00004c94      31c0           xor eax, eax
0x00004c96      488b05b34520.  mov rax, qword [0x00209250]             ; [0x209250:8]=0
0x00004c9d      4989e0         mov r8, rsp
0x00004ca0      83e11f         and ecx, 0x1f
0x00004ca3      660f6f057545.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004cab      4889442430     mov qword [rsp + 0x30], rax
0x00004cb0      89d0           mov eax, edx
0x00004cb2      0f290424       movaps xmmword [rsp], xmm0
0x00004cb6      c0e805         shr al, 5
0x00004cb9      0fb6c0         movzx eax, al
0x00004cbc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004cc1      660f6f056745.  movdqa xmm0, xmmword [0x00209230]
0x00004cc9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004cce      660f6f056a45.  movdqa xmm0, xmmword [0x00209240]
0x00004cd6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004cdb      418b11         mov edx, dword [r9]
0x00004cde      89d0           mov eax, edx
0x00004ce0      d3e8           shr eax, cl
0x00004ce2      f7d0           not eax
0x00004ce4      83e001         and eax, 1
0x00004ce7      d3e0           shl eax, cl
0x00004ce9      4c89c1         mov rcx, r8
0x00004cec      31d0           xor eax, edx
0x00004cee      4889f2         mov rdx, rsi
0x00004cf1      4889fe         mov rsi, rdi
0x00004cf4      418901         mov dword [r9], eax
0x00004cf7      31ff           xor edi, edi
0x00004cf9      e8f2f8ffff     call sym.quotearg_n_options
0x00004cfe      488b742438     mov rsi, qword [rsp + 0x38]
0x00004d03      644833342528.  xor rsi, qword fs:[0x28]
0x00004d0c      7505           jne 0x4d13
0x00004d0e      4883c448       add rsp, 0x48
0x00004d12      c3             ret
0x00004d13      e898c9ffff     call sym.imp.__stack_chk_fail
0x00004d18      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004d20      400fbed6       movsx edx, sil
0x00004d24      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004d2b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004d30      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004d35      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004d3c      e93fffffff     jmp sym.quotearg_char_mem
0x00004d41      0f1f440000     nop dword [rax + rax]
0x00004d46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004d50      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004d55      e926ffffff     jmp sym.quotearg_char_mem
0x00004d5a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004d60      4883ec48       sub rsp, 0x48
0x00004d64      4889d0         mov rax, rdx
0x00004d67      64488b142528.  mov rdx, qword fs:[0x28]
0x00004d70      4889542438     mov qword [rsp + 0x38], rdx
0x00004d75      31d2           xor edx, edx
0x00004d77      83fe0a         cmp esi, 0xa
0x00004d7a      7468           je 0x4de4
0x00004d7c      893424         mov dword [rsp], esi
0x00004d7f      4889e1         mov rcx, rsp
0x00004d82      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004d89      4889c6         mov rsi, rax
0x00004d8c      48c744240400.  mov qword [rsp + 4], 0
0x00004d95      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004d9e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004da7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004db0      48c744242400.  mov qword [rsp + 0x24], 0
0x00004db9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004dc2      c74424340000.  mov dword [rsp + 0x34], 0
0x00004dca      e821f8ffff     call sym.quotearg_n_options
0x00004dcf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004dd4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004ddd      750a           jne 0x4de9
0x00004ddf      4883c448       add rsp, 0x48
0x00004de3      c3             ret
0x00004de4      e807c8ffff     call sym.imp.abort
0x00004de9      e8c2c8ffff     call sym.imp.__stack_chk_fail
0x00004dee      6690           nop
;-- quotearg_n_custom_mem:
0x00004df0      4883ec48       sub rsp, 0x48
0x00004df4      4989c9         mov r9, rcx
0x00004df7      488b0d524420.  mov rcx, qword [0x00209250]             ; [0x209250:8]=0
0x00004dfe      660f6f051a44.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004e06      64488b042528.  mov rax, qword fs:[0x28]
0x00004e0f      4889442438     mov qword [rsp + 0x38], rax
0x00004e14      31c0           xor eax, eax
0x00004e16      0f290424       movaps xmmword [rsp], xmm0
0x00004e1a      4885f6         test rsi, rsi
0x00004e1d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004e22      c704240a0000.  mov dword [rsp], 0xa
0x00004e29      660f6f05ff43.  movdqa xmm0, xmmword [0x00209230]
0x00004e31      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004e36      660f6f050244.  movdqa xmm0, xmmword [0x00209240]
0x00004e3e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004e43      7432           je 0x4e77
0x00004e45      4885d2         test rdx, rdx
0x00004e48      742d           je 0x4e77
0x00004e4a      4889742428     mov qword [rsp + 0x28], rsi
0x00004e4f      4889542430     mov qword [rsp + 0x30], rdx
0x00004e54      4889e1         mov rcx, rsp
0x00004e57      4c89c2         mov rdx, r8
0x00004e5a      4c89ce         mov rsi, r9
0x00004e5d      e88ef7ffff     call sym.quotearg_n_options
0x00004e62      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004e67      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004e70      750a           jne 0x4e7c
0x00004e72      4883c448       add rsp, 0x48
0x00004e76      c3             ret
0x00004e77      e874c7ffff     call sym.imp.abort
0x00004e7c      e82fc8ffff     call sym.imp.__stack_chk_fail
0x00004e81      0f1f440000     nop dword [rax + rax]
0x00004e86      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004e90      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004e97      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00004e9c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004ea0      4889d1         mov rcx, rdx
0x00004ea3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004eaa      4889f2         mov rdx, rsi
0x00004ead      4889fe         mov rsi, rdi
0x00004eb0      31ff           xor edi, edi
0x00004eb2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004eb7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004ec0      4989c8         mov r8, rcx
0x00004ec3      4889d1         mov rcx, rdx
0x00004ec6      4889f2         mov rdx, rsi
0x00004ec9      4889fe         mov rsi, rdi
0x00004ecc      31ff           xor edi, edi
0x00004ece      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004ed3      0f1f00         nop dword [rax]
0x00004ed6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004ee0      488d0d394120.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004ee7      e904f7ffff     jmp sym.quotearg_n_options
0x00004eec      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004ef0      488d0d294120.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004ef7      4889f2         mov rdx, rsi
0x00004efa      4889fe         mov rsi, rdi
0x00004efd      31ff           xor edi, edi
0x00004eff      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004f04      6690           nop
0x00004f06      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004f10      488d0d094120.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004f17      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f1e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004f23      0f1f00         nop dword [rax]
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00004f30      488d0de94020.  lea rcx, obj.quote_quoting_options      ; 0x209020
0x00004f37      4889fe         mov rsi, rdi
0x00004f3a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f41      31ff           xor edi, edi
0x00004f43      e9a8f6ffff     jmp sym.quotearg_n_options
0x00004f48      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00004f50      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00004f52      4154           push r12
0x00004f54      4189fd         mov r13d, edi
0x00004f57      55             push rbp
0x00004f58      53             push rbx
0x00004f59      4989f4         mov r12, rsi
0x00004f5c      4889d3         mov rbx, rdx
0x00004f5f      4883ec08       sub rsp, 8
0x00004f63      0f1f440000     nop dword [rax + rax]
0x00004f68      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00004f6b      4c89e6         mov rsi, r12
0x00004f6e      4489ef         mov edi, r13d
0x00004f71      e8fac7ffff     call sym.imp.read
0x00004f76      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00004f79      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x00004f7c      7922           jns 0x4fa0                              ; ../coreutils-8.31/lib/safe-read.c:62
0x00004f7e      e87dc6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00004f83      8b00           mov eax, dword [rax]
0x00004f85      83f804         cmp eax, 4
0x00004f88      74de           je 0x4f68
0x00004f8a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00004f91      760d           jbe 0x4fa0
0x00004f93      83f816         cmp eax, 0x16
0x00004f96      7508           jne 0x4fa0
0x00004f98      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x00004f9d      ebc9           jmp 0x4f68
0x00004f9f      90             nop
0x00004fa0      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00004fa4      4889e8         mov rax, rbp
0x00004fa7      5b             pop rbx
0x00004fa8      5d             pop rbp
0x00004fa9      415c           pop r12
0x00004fab      415d           pop r13
0x00004fad      c3             ret
0x00004fae      6690           nop
;-- version_etc_arn:
0x00004fb0      4157           push r15
0x00004fb2      4156           push r14
0x00004fb4      4155           push r13
0x00004fb6      4154           push r12
0x00004fb8      4d89cc         mov r12, r9
0x00004fbb      55             push rbp
0x00004fbc      53             push rbx
0x00004fbd      4889fd         mov rbp, rdi
0x00004fc0      4c89c3         mov rbx, r8
0x00004fc3      4883ec28       sub rsp, 0x28
0x00004fc7      4885f6         test rsi, rsi
0x00004fca      0f8418010000   je 0x50e8
0x00004fd0      4989d0         mov r8, rdx
0x00004fd3      488d15ae1c00.  lea rdx, [0x00006c88]                   ; "%s (%s) %s\n"
0x00004fda      4989c9         mov r9, rcx
0x00004fdd      31c0           xor eax, eax
0x00004fdf      4889f1         mov rcx, rsi
0x00004fe2      be01000000     mov esi, 1
0x00004fe7      e8f4c8ffff     call sym.imp.__fprintf_chk
0x00004fec      488d35a81c00.  lea rsi, [0x00006c9b]                   ; "(C)"
0x00004ff3      31ff           xor edi, edi
0x00004ff5      ba05000000     mov edx, 5
0x00004ffa      e881c6ffff     call sym.imp.dcgettext
0x00004fff      488d15ba1f00.  lea rdx, obj.version_etc_copyright      ; 0x6fc0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005006      4889c1         mov rcx, rax
0x00005009      41b8e3070000   mov r8d, 0x7e3
0x0000500f      be01000000     mov esi, 1
0x00005014      4889ef         mov rdi, rbp
0x00005017      31c0           xor eax, eax
0x00005019      e8c2c8ffff     call sym.imp.__fprintf_chk
0x0000501e      488d35031d00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6d28 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005025      31ff           xor edi, edi
0x00005027      ba05000000     mov edx, 5
0x0000502c      e84fc6ffff     call sym.imp.dcgettext
0x00005031      4889ee         mov rsi, rbp
0x00005034      4889c7         mov rdi, rax
0x00005037      e854c7ffff     call sym.imp.fputs_unlocked
0x0000503c      4983fc09       cmp r12, 9
0x00005040      0f873a030000   ja 0x5380
0x00005046      488d15371f00.  lea rdx, [0x00006f84]
0x0000504d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005051      4801d0         add rax, rdx
0x00005054      ffe0           jmp rax
0x00005056      662e0f1f8400.  nop word cs:[rax + rax]
0x00005060      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005064      488b4310       mov rax, qword [rbx + 0x10]
0x00005068      488d35291e00.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6e98 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000506f      4c8b4308       mov r8, qword [rbx + 8]
0x00005073      ba05000000     mov edx, 5
0x00005078      31ff           xor edi, edi
0x0000507a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000507e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005082      4c894c2410     mov qword [rsp + 0x10], r9
0x00005087      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000508b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000508f      48890424       mov qword [rsp], rax
0x00005093      4c89442408     mov qword [rsp + 8], r8
0x00005098      488b1b         mov rbx, qword [rbx]
0x0000509b      e8e0c5ffff     call sym.imp.dcgettext
0x000050a0      4883ec08       sub rsp, 8
0x000050a4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000050a9      4889c2         mov rdx, rax
0x000050ac      4889d9         mov rcx, rbx
0x000050af      be01000000     mov esi, 1
0x000050b4      4889ef         mov rdi, rbp
0x000050b7      31c0           xor eax, eax
0x000050b9      4151           push r9
0x000050bb      4155           push r13
0x000050bd      4154           push r12
0x000050bf      4157           push r15
0x000050c1      4156           push r14
0x000050c3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000050c8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000050cd      e80ec8ffff     call sym.imp.__fprintf_chk
0x000050d2      4883c430       add rsp, 0x30
0x000050d6      4883c428       add rsp, 0x28
0x000050da      5b             pop rbx
0x000050db      5d             pop rbp
0x000050dc      415c           pop r12
0x000050de      415d           pop r13
0x000050e0      415e           pop r14
0x000050e2      415f           pop r15
0x000050e4      c3             ret
0x000050e5      0f1f00         nop dword [rax]
0x000050e8      4989c8         mov r8, rcx
0x000050eb      4889d1         mov rcx, rdx
0x000050ee      488d159f1b00.  lea rdx, str.s__s                       ; 0x6c94 ; "%s %s\n"
0x000050f5      be01000000     mov esi, 1
0x000050fa      31c0           xor eax, eax
0x000050fc      e8dfc7ffff     call sym.imp.__fprintf_chk
0x00005101      e9e6feffff     jmp 0x4fec
0x00005106      662e0f1f8400.  nop word cs:[rax + rax]
0x00005110      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005114      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005118      488d35a91d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x6ec8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000511f      488b4310       mov rax, qword [rbx + 0x10]
0x00005123      4c8b4308       mov r8, qword [rbx + 8]
0x00005127      ba05000000     mov edx, 5
0x0000512c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005130      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005134      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005138      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000513c      488b1b         mov rbx, qword [rbx]
0x0000513f      4c89542418     mov qword [rsp + 0x18], r10
0x00005144      4c894c2410     mov qword [rsp + 0x10], r9
0x00005149      48890424       mov qword [rsp], rax
0x0000514d      4c89442408     mov qword [rsp + 8], r8
0x00005152      31ff           xor edi, edi
0x00005154      e827c5ffff     call sym.imp.dcgettext
0x00005159      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000515e      4152           push r10
0x00005160      e93fffffff     jmp 0x50a4
0x00005165      0f1f00         nop dword [rax]
0x00005168      488b1b         mov rbx, qword [rbx]
0x0000516b      488d352d1b00.  lea rsi, str.Written_by__s.             ; 0x6c9f ; "Written by %s.\n"
0x00005172      ba05000000     mov edx, 5
0x00005177      31ff           xor edi, edi
0x00005179      e802c5ffff     call sym.imp.dcgettext
0x0000517e      4883c428       add rsp, 0x28
0x00005182      4889d9         mov rcx, rbx
0x00005185      4889ef         mov rdi, rbp
0x00005188      5b             pop rbx
0x00005189      5d             pop rbp
0x0000518a      415c           pop r12
0x0000518c      415d           pop r13
0x0000518e      415e           pop r14
0x00005190      415f           pop r15
0x00005192      4889c2         mov rdx, rax
0x00005195      be01000000     mov esi, 1
0x0000519a      31c0           xor eax, eax
0x0000519c      e93fc7ffff     jmp sym.imp.__fprintf_chk
0x000051a1      0f1f80000000.  nop dword [rax]
0x000051a8      4c8b6308       mov r12, qword [rbx + 8]
0x000051ac      488d35fc1a00.  lea rsi, str.Written_by__s_and__s.      ; 0x6caf ; "Written by %s and %s.\n"
0x000051b3      488b1b         mov rbx, qword [rbx]
0x000051b6      ba05000000     mov edx, 5
0x000051bb      31ff           xor edi, edi
0x000051bd      e8bec4ffff     call sym.imp.dcgettext
0x000051c2      4883c428       add rsp, 0x28
0x000051c6      4d89e0         mov r8, r12
0x000051c9      4889d9         mov rcx, rbx
0x000051cc      4889ef         mov rdi, rbp
0x000051cf      4889c2         mov rdx, rax
0x000051d2      be01000000     mov esi, 1
0x000051d7      5b             pop rbx
0x000051d8      5d             pop rbp
0x000051d9      415c           pop r12
0x000051db      415d           pop r13
0x000051dd      415e           pop r14
0x000051df      415f           pop r15
0x000051e1      31c0           xor eax, eax
0x000051e3      e9f8c6ffff     jmp sym.imp.__fprintf_chk
0x000051e8      0f1f84000000.  nop dword [rax + rax]
0x000051f0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000051f4      4c8b6308       mov r12, qword [rbx + 8]
0x000051f8      488d35c71a00.  lea rsi, str.Written_by__s___s__and__s. ; 0x6cc6 ; "Written by %s, %s, and %s.\n"
0x000051ff      488b1b         mov rbx, qword [rbx]
0x00005202      ba05000000     mov edx, 5
0x00005207      31ff           xor edi, edi
0x00005209      e872c4ffff     call sym.imp.dcgettext
0x0000520e      4883c428       add rsp, 0x28
0x00005212      4d89e9         mov r9, r13
0x00005215      4d89e0         mov r8, r12
0x00005218      4889d9         mov rcx, rbx
0x0000521b      4889ef         mov rdi, rbp
0x0000521e      4889c2         mov rdx, rax
0x00005221      5b             pop rbx
0x00005222      5d             pop rbp
0x00005223      415c           pop r12
0x00005225      415d           pop r13
0x00005227      415e           pop r14
0x00005229      415f           pop r15
0x0000522b      be01000000     mov esi, 1
0x00005230      31c0           xor eax, eax
0x00005232      e9a9c6ffff     jmp sym.imp.__fprintf_chk
0x00005237      660f1f840000.  nop word [rax + rax]
0x00005240      488d35b11b00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x6df8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005247      ba05000000     mov edx, 5
0x0000524c      31ff           xor edi, edi
0x0000524e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005252      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005256      4c8b6308       mov r12, qword [rbx + 8]
0x0000525a      488b1b         mov rbx, qword [rbx]
0x0000525d      e81ec4ffff     call sym.imp.dcgettext
0x00005262      4883ec08       sub rsp, 8
0x00005266      4156           push r14
0x00005268      4889c2         mov rdx, rax
0x0000526b      4d89e9         mov r9, r13
0x0000526e      4d89e0         mov r8, r12
0x00005271      4889d9         mov rcx, rbx
0x00005274      4889ef         mov rdi, rbp
0x00005277      be01000000     mov esi, 1
0x0000527c      31c0           xor eax, eax
0x0000527e      e85dc6ffff     call sym.imp.__fprintf_chk
0x00005283      58             pop rax
0x00005284      5a             pop rdx
0x00005285      4883c428       add rsp, 0x28
0x00005289      5b             pop rbx
0x0000528a      5d             pop rbp
0x0000528b      415c           pop r12
0x0000528d      415d           pop r13
0x0000528f      415e           pop r14
0x00005291      415f           pop r15
0x00005293      c3             ret
0x00005294      0f1f4000       nop dword [rax]
0x00005298      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000529c      488d35751b00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x6e18 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000052a3      ba05000000     mov edx, 5
0x000052a8      31ff           xor edi, edi
0x000052aa      4c8b7318       mov r14, qword [rbx + 0x18]
0x000052ae      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000052b2      4c8b6308       mov r12, qword [rbx + 8]
0x000052b6      488b1b         mov rbx, qword [rbx]
0x000052b9      e8c2c3ffff     call sym.imp.dcgettext
0x000052be      4157           push r15
0x000052c0      eba4           jmp 0x5266
0x000052c2      660f1f440000   nop word [rax + rax]
0x000052c8      4c8b4308       mov r8, qword [rbx + 8]
0x000052cc      4c8b6328       mov r12, qword [rbx + 0x28]
0x000052d0      488d35691b00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6e40 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000052d7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000052db      4c8b7318       mov r14, qword [rbx + 0x18]
0x000052df      ba05000000     mov edx, 5
0x000052e4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000052e8      31ff           xor edi, edi
0x000052ea      488b1b         mov rbx, qword [rbx]
0x000052ed      4c890424       mov qword [rsp], r8
0x000052f1      e88ac3ffff     call sym.imp.dcgettext
0x000052f6      4883ec08       sub rsp, 8
0x000052fa      4d89e9         mov r9, r13
0x000052fd      4154           push r12
0x000052ff      4157           push r15
0x00005301      4156           push r14
0x00005303      4c8b442420     mov r8, qword [rsp + 0x20]
0x00005308      4889d9         mov rcx, rbx
0x0000530b      4889c2         mov rdx, rax
0x0000530e      4889ef         mov rdi, rbp
0x00005311      be01000000     mov esi, 1
0x00005316      31c0           xor eax, eax
0x00005318      e8c3c5ffff     call sym.imp.__fprintf_chk
0x0000531d      4883c420       add rsp, 0x20
0x00005321      4883c428       add rsp, 0x28
0x00005325      5b             pop rbx
0x00005326      5d             pop rbp
0x00005327      415c           pop r12
0x00005329      415d           pop r13
0x0000532b      415e           pop r14
0x0000532d      415f           pop r15
0x0000532f      c3             ret
0x00005330      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005334      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005338      488d35291b00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6e68 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000533f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005343      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005347      ba05000000     mov edx, 5
0x0000534c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005350      4c8b4308       mov r8, qword [rbx + 8]
0x00005354      31ff           xor edi, edi
0x00005356      4c894c2408     mov qword [rsp + 8], r9
0x0000535b      488b1b         mov rbx, qword [rbx]
0x0000535e      4c890424       mov qword [rsp], r8
0x00005362      e819c3ffff     call sym.imp.dcgettext
0x00005367      4155           push r13
0x00005369      4154           push r12
0x0000536b      4157           push r15
0x0000536d      4156           push r14
0x0000536f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005374      eb8d           jmp 0x5303
0x00005376      662e0f1f8400.  nop word cs:[rax + rax]
0x00005380      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005384      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005388      ba05000000     mov edx, 5
0x0000538d      488b4310       mov rax, qword [rbx + 0x10]
0x00005391      4c8b4308       mov r8, qword [rbx + 8]
0x00005395      488d35641b00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x6f00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000539c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000053a0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000053a4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000053a8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000053ac      4c89542418     mov qword [rsp + 0x18], r10
0x000053b1      4c894c2410     mov qword [rsp + 0x10], r9
0x000053b6      48890424       mov qword [rsp], rax
0x000053ba      4c89442408     mov qword [rsp + 8], r8
0x000053bf      488b1b         mov rbx, qword [rbx]
0x000053c2      e98bfdffff     jmp 0x5152
0x000053c7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x000053d0      4531c9         xor r9d, r9d
0x000053d3      49833800       cmp qword [r8], 0
0x000053d7      7412           je 0x53eb
0x000053d9      0f1f80000000.  nop dword [rax]
0x000053e0      4983c101       add r9, 1
0x000053e4      4b833cc800     cmp qword [r8 + r9*8], 0
0x000053e9      75f5           jne 0x53e0
0x000053eb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x000053f0      4883ec68       sub rsp, 0x68
0x000053f4      4d89c2         mov r10, r8
0x000053f7      4531c9         xor r9d, r9d
0x000053fa      64488b042528.  mov rax, qword fs:[0x28]
0x00005403      4889442458     mov qword [rsp + 0x58], rax
0x00005408      31c0           xor eax, eax
0x0000540a      4989e0         mov r8, rsp
0x0000540d      0f1f00         nop dword [rax]
0x00005410      418b02         mov eax, dword [r10]
0x00005413      83f82f         cmp eax, 0x2f
0x00005416      7742           ja 0x545a
0x00005418      4189c3         mov r11d, eax
0x0000541b      4d035a10       add r11, qword [r10 + 0x10]
0x0000541f      83c008         add eax, 8
0x00005422      418902         mov dword [r10], eax
0x00005425      498b03         mov rax, qword [r11]
0x00005428      4885c0         test rax, rax
0x0000542b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000542f      740a           je 0x543b
0x00005431      4983c101       add r9, 1
0x00005435      4983f90a       cmp r9, 0xa
0x00005439      75d5           jne 0x5410
0x0000543b      e870fbffff     call sym.version_etc_arn
0x00005440      488b442458     mov rax, qword [rsp + 0x58]
0x00005445      644833042528.  xor rax, qword fs:[0x28]
0x0000544e      7505           jne 0x5455
0x00005450      4883c468       add rsp, 0x68
0x00005454      c3             ret
0x00005455      e856c2ffff     call sym.imp.__stack_chk_fail
0x0000545a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000545e      498d4308       lea rax, [r11 + 8]
0x00005462      49894208       mov qword [r10 + 8], rax
0x00005466      ebbd           jmp 0x5425
0x00005468      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005470      55             push rbp
0x00005471      53             push rbx
0x00005472      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005478      4531db         xor r11d, r11d
0x0000547b      4881ecb80000.  sub rsp, 0xb8
0x00005482      64488b042528.  mov rax, qword fs:[0x28]
0x0000548b      4889442478     mov qword [rsp + 0x78], rax
0x00005490      31c0           xor eax, eax
0x00005492      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000549a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000054a2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000054aa      4c8d442420     lea r8, [rsp + 0x20]
0x000054af      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000054b7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000054bf      4889442410     mov qword [rsp + 0x10], rax
0x000054c4      488d84248000.  lea rax, [rsp + 0x80]
0x000054cc      4531c9         xor r9d, r9d
0x000054cf      4889442418     mov qword [rsp + 0x18], rax
0x000054d4      4889c5         mov rbp, rax
0x000054d7      660f1f840000.  nop word [rax + rax]
0x000054e0      4183fa2f       cmp r10d, 0x2f
0x000054e4      7756           ja 0x553c
0x000054e6      4489d0         mov eax, r10d
0x000054e9      41bb01000000   mov r11d, 1
0x000054ef      4183c208       add r10d, 8
0x000054f3      4801e8         add rax, rbp
0x000054f6      488b00         mov rax, qword [rax]
0x000054f9      4885c0         test rax, rax
0x000054fc      4b8904c8       mov qword [r8 + r9*8], rax
0x00005500      740a           je 0x550c
0x00005502      4983c101       add r9, 1
0x00005506      4983f90a       cmp r9, 0xa
0x0000550a      75d4           jne 0x54e0
0x0000550c      4584db         test r11b, r11b
0x0000550f      7524           jne 0x5535
0x00005511      e89afaffff     call sym.version_etc_arn
0x00005516      488b442478     mov rax, qword [rsp + 0x78]
0x0000551b      644833042528.  xor rax, qword fs:[0x28]
0x00005524      750a           jne 0x5530
0x00005526      4881c4b80000.  add rsp, 0xb8
0x0000552d      5b             pop rbx
0x0000552e      5d             pop rbp
0x0000552f      c3             ret
0x00005530      e87bc1ffff     call sym.imp.__stack_chk_fail
0x00005535      4489542408     mov dword [rsp + 8], r10d
0x0000553a      ebd5           jmp 0x5511
0x0000553c      4889d8         mov rax, rbx
0x0000553f      4883c308       add rbx, 8
0x00005543      ebb1           jmp 0x54f6
0x00005545      90             nop
0x00005546      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005550      53             push rbx
0x00005551      488d358a1700.  lea rsi, str.Report_bugs_to:__s         ; 0x6ce2 ; "\nReport bugs to: %s\n"
0x00005558      ba05000000     mov edx, 5
0x0000555d      31ff           xor edi, edi
0x0000555f      e81cc1ffff     call sym.imp.dcgettext
0x00005564      488d158c1700.  lea rdx, str.bug_coreutils_gnu.org      ; 0x6cf7 ; "bug-coreutils@gnu.org"
0x0000556b      4889c6         mov rsi, rax
0x0000556e      bf01000000     mov edi, 1
0x00005573      31c0           xor eax, eax
0x00005575      e8c6c2ffff     call sym.imp.__printf_chk
0x0000557a      488d358c1700.  lea rsi, str.s_home_page:___s           ; 0x6d0d ; "%s home page: <%s>\n"
0x00005581      ba05000000     mov edx, 5
0x00005586      31ff           xor edi, edi
0x00005588      e8f3c0ffff     call sym.imp.dcgettext
0x0000558d      488d0d941000.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6628 ; "https://www.gnu.org/software/coreutils/"
0x00005594      488d156e0e00.  lea rdx, str.GNU_coreutils              ; 0x6409 ; "GNU coreutils"
0x0000559b      4889c6         mov rsi, rax
0x0000559e      bf01000000     mov edi, 1
0x000055a3      31c0           xor eax, eax
0x000055a5      e896c2ffff     call sym.imp.__printf_chk
0x000055aa      488b1df73a20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2090a8:8]=0
0x000055b1      488d35881900.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6f40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000055b8      31ff           xor edi, edi
0x000055ba      ba05000000     mov edx, 5
0x000055bf      e8bcc0ffff     call sym.imp.dcgettext
0x000055c4      4889de         mov rsi, rbx
0x000055c7      4889c7         mov rdi, rax
0x000055ca      5b             pop rbx
0x000055cb      e9c0c1ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x000055d0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x000055d1      4889fb         mov rbx, rdi
0x000055d4      e807c2ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x000055d9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x000055dc      7505           jne 0x55e3
0x000055de      4885db         test rbx, rbx
0x000055e1      7502           jne 0x55e5
0x000055e3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x000055e4      c3             ret
0x000055e5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x000055ea      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x000055f0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x000055f3      48f7e6         mul rsi
0x000055f6      4889c7         mov rdi, rax
0x000055f9      0f90c0         seto al
0x000055fc      4885ff         test rdi, rdi
0x000055ff      780a           js 0x560b
0x00005601      0fb6c0         movzx eax, al
0x00005604      4885c0         test rax, rax
0x00005607      7502           jne 0x560b
0x00005609      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000560b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000560f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005614      6690           nop
0x00005616      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005620      ebae           jmp sym.xmalloc
0x00005622      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005626      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005630      4885f6         test rsi, rsi
0x00005633      53             push rbx
0x00005634      4889f3         mov rbx, rsi
0x00005637      7505           jne 0x563e
0x00005639      4885ff         test rdi, rdi
0x0000563c      751a           jne 0x5658
0x0000563e      4889de         mov rsi, rbx
0x00005641      e8dac1ffff     call sym.imp.realloc
0x00005646      4885c0         test rax, rax
0x00005649      7505           jne 0x5650
0x0000564b      4885db         test rbx, rbx
0x0000564e      7511           jne 0x5661                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005650      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005651      c3             ret
0x00005652      660f1f440000   nop word [rax + rax]
0x00005658      e883bfffff     call sym.imp.free
0x0000565d      31c0           xor eax, eax
0x0000565f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005660      c3             ret
0x00005661      e8ba010000     call sym.xalloc_die
0x00005666      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005670      4889f0         mov rax, rsi
0x00005673      48f7e2         mul rdx
0x00005676      4889c6         mov rsi, rax
0x00005679      0f90c0         seto al
0x0000567c      4885f6         test rsi, rsi
0x0000567f      780a           js 0x568b
0x00005681      0fb6c0         movzx eax, al
0x00005684      4885c0         test rax, rax
0x00005687      7502           jne 0x568b
0x00005689      eba5           jmp sym.xrealloc
0x0000568b      4883ec08       sub rsp, 8
0x0000568f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005694      6690           nop
0x00005696      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x000056a0      4885ff         test rdi, rdi
0x000056a3      4989d1         mov r9, rdx
0x000056a6      488b0e         mov rcx, qword [rsi]
0x000056a9      7435           je 0x56e0
0x000056ab      31d2           xor edx, edx
0x000056ad      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x000056b7      49f7f1         div r9
0x000056ba      4839c8         cmp rax, rcx
0x000056bd      763c           jbe 0x56fb
0x000056bf      4889c8         mov rax, rcx
0x000056c2      48d1e8         shr rax, 1
0x000056c5      488d4c0801     lea rcx, [rax + rcx + 1]
0x000056ca      48890e         mov qword [rsi], rcx
0x000056cd      490fafc9       imul rcx, r9
0x000056d1      4889ce         mov rsi, rcx
0x000056d4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x000056d9      0f1f80000000.  nop dword [rax]
0x000056e0      4885c9         test rcx, rcx
0x000056e3      7423           je 0x5708
0x000056e5      4889c8         mov rax, rcx
0x000056e8      49f7e1         mul r9
0x000056eb      0f90c2         seto dl
0x000056ee      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x000056f1      0fb6d2         movzx edx, dl
0x000056f4      7805           js 0x56fb
0x000056f6      4885d2         test rdx, rdx
0x000056f9      74cf           je 0x56ca
0x000056fb      4883ec08       sub rsp, 8
0x000056ff      e81c010000     call sym.xalloc_die
0x00005704      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005708      31d2           xor edx, edx
0x0000570a      b880000000     mov eax, 0x80
0x0000570f      4531c0         xor r8d, r8d
0x00005712      49f7f1         div r9
0x00005715      4885c0         test rax, rax
0x00005718      410f94c0       sete r8b
0x0000571c      498d0c00       lea rcx, [r8 + rax]
0x00005720      ebc3           jmp 0x56e5
0x00005722      0f1f4000       nop dword [rax]
0x00005726      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005730      4885ff         test rdi, rdi
0x00005733      488b06         mov rax, qword [rsi]
0x00005736      7428           je 0x5760
0x00005738      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005742      4839d0         cmp rax, rdx
0x00005745      772a           ja 0x5771
0x00005747      4889c2         mov rdx, rax
0x0000574a      48d1ea         shr rdx, 1
0x0000574d      488d440201     lea rax, [rdx + rax + 1]
0x00005752      488906         mov qword [rsi], rax
0x00005755      4889c6         mov rsi, rax
0x00005758      e9d3feffff     jmp sym.xrealloc
0x0000575d      0f1f00         nop dword [rax]
0x00005760      4885c0         test rax, rax
0x00005763      ba80000000     mov edx, 0x80
0x00005768      480f44c2       cmove rax, rdx
0x0000576c      4885c0         test rax, rax
0x0000576f      79e1           jns 0x5752
0x00005771      4883ec08       sub rsp, 8
0x00005775      e8a6000000     call sym.xalloc_die
0x0000577a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005780      53             push rbx
0x00005781      4889fb         mov rbx, rdi
0x00005784      e847feffff     call sym.xmalloc
0x00005789      4889da         mov rdx, rbx
0x0000578c      31f6           xor esi, esi
0x0000578e      4889c7         mov rdi, rax
0x00005791      5b             pop rbx
0x00005792      e9a9bfffff     jmp sym.imp.memset
0x00005797      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x000057a0      4889f8         mov rax, rdi
0x000057a3      4883ec08       sub rsp, 8
0x000057a7      48f7e6         mul rsi
0x000057aa      0f90c2         seto dl
0x000057ad      4885c0         test rax, rax
0x000057b0      7817           js 0x57c9
0x000057b2      0fb6d2         movzx edx, dl
0x000057b5      4885d2         test rdx, rdx
0x000057b8      750f           jne 0x57c9
0x000057ba      e8e1bfffff     call sym.imp.calloc
0x000057bf      4885c0         test rax, rax
0x000057c2      7405           je 0x57c9
0x000057c4      4883c408       add rsp, 8
0x000057c8      c3             ret
0x000057c9      e852000000     call sym.xalloc_die
0x000057ce      6690           nop
;-- xmemdup:
0x000057d0      55             push rbp
0x000057d1      53             push rbx
0x000057d2      4889fd         mov rbp, rdi
0x000057d5      4889f7         mov rdi, rsi
0x000057d8      4889f3         mov rbx, rsi
0x000057db      4883ec08       sub rsp, 8
0x000057df      e8ecfdffff     call sym.xmalloc
0x000057e4      4883c408       add rsp, 8
0x000057e8      4889da         mov rdx, rbx
0x000057eb      4889ee         mov rsi, rbp
0x000057ee      5b             pop rbx
0x000057ef      5d             pop rbp
0x000057f0      4889c7         mov rdi, rax
0x000057f3      e9c8bfffff     jmp sym.imp.memcpy
0x000057f8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005800      53             push rbx
0x00005801      4889fb         mov rbx, rdi
0x00005804      e897beffff     call sym.imp.strlen
0x00005809      4889df         mov rdi, rbx
0x0000580c      488d7001       lea rsi, [rax + 1]
0x00005810      5b             pop rbx
0x00005811      ebbd           jmp sym.xmemdup
0x00005813      662e0f1f8400.  nop word cs:[rax + rax]
0x0000581d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005820      488d35c81700.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x6fef ; "memory exhausted"
0x00005827      4883ec08       sub rsp, 8
0x0000582b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005830      31ff           xor edi, edi
0x00005832      e849beffff     call sym.imp.dcgettext
0x00005837      8b3ddb372000   mov edi, dword [obj.exit_failure]       ; [0x209018:4]=1
0x0000583d      488d153e1900.  lea rdx, [0x00007182]                   ; "%s"
0x00005844      4889c1         mov rcx, rax
0x00005847      31f6           xor esi, esi
0x00005849      31c0           xor eax, eax
0x0000584b      e820c0ffff     call sym.imp.error
0x00005850      e89bbdffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005855      662e0f1f8400.  nop word cs:[rax + rax]
0x0000585f      90             nop
;-- xstrtoumax:
0x00005860      4157           push r15
0x00005862      4156           push r14
0x00005864      4155           push r13
0x00005866      4154           push r12
0x00005868      55             push rbp
0x00005869      53             push rbx
0x0000586a      4883ec28       sub rsp, 0x28
0x0000586e      64488b042528.  mov rax, qword fs:[0x28]
0x00005877      4889442418     mov qword [rsp + 0x18], rax
0x0000587c      31c0           xor eax, eax
0x0000587e      83fa24         cmp edx, 0x24
0x00005881      0f875e030000   ja 0x5be5
0x00005887      488d442410     lea rax, [rsp + 0x10]
0x0000588c      4989f7         mov r15, rsi
0x0000588f      4885f6         test rsi, rsi
0x00005892      4889fd         mov rbp, rdi
0x00005895      89542408       mov dword [rsp + 8], edx
0x00005899      4989ce         mov r14, rcx
0x0000589c      4d89c5         mov r13, r8
0x0000589f      4c0f44f8       cmove r15, rax
0x000058a3      e858bdffff     call sym.imp.__errno_location
0x000058a8      c70000000000   mov dword [rax], 0
0x000058ae      4989c4         mov r12, rax
0x000058b1      0fb65d00       movzx ebx, byte [rbp]
0x000058b5      e856c0ffff     call sym.imp.__ctype_b_loc
0x000058ba      8b542408       mov edx, dword [rsp + 8]
0x000058be      488b30         mov rsi, qword [rax]
0x000058c1      4889e8         mov rax, rbp
0x000058c4      eb11           jmp 0x58d7
0x000058c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000058d0      4883c001       add rax, 1
0x000058d4      0fb618         movzx ebx, byte [rax]
0x000058d7      0fb6cb         movzx ecx, bl
0x000058da      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000058df      75ef           jne 0x58d0
0x000058e1      80fb2d         cmp bl, 0x2d
0x000058e4      7452           je 0x5938
0x000058e6      31c9           xor ecx, ecx
0x000058e8      4c89fe         mov rsi, r15
0x000058eb      4889ef         mov rdi, rbp
0x000058ee      e83dbeffff     call sym.imp.__strtoul_internal
0x000058f3      498b0f         mov rcx, qword [r15]
0x000058f6      4889c3         mov rbx, rax
0x000058f9      4839e9         cmp rcx, rbp
0x000058fc      742a           je 0x5928
0x000058fe      418b0424       mov eax, dword [r12]
0x00005902      85c0           test eax, eax
0x00005904      7462           je 0x5968
0x00005906      83f822         cmp eax, 0x22
0x00005909      bd01000000     mov ebp, 1
0x0000590e      7528           jne 0x5938
0x00005910      4d85ed         test r13, r13
0x00005913      7409           je 0x591e
0x00005915      440fb621       movzx r12d, byte [rcx]
0x00005919      4584e4         test r12b, r12b
0x0000591c      7579           jne 0x5997
0x0000591e      49891e         mov qword [r14], rbx
0x00005921      eb1a           jmp 0x593d
0x00005923      0f1f440000     nop dword [rax + rax]
0x00005928      4d85ed         test r13, r13
0x0000592b      48894c2408     mov qword [rsp + 8], rcx
0x00005930      753e           jne 0x5970
0x00005932      660f1f440000   nop word [rax + rax]
0x00005938      bd04000000     mov ebp, 4
0x0000593d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00005942      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000594b      89e8           mov eax, ebp
0x0000594d      0f858d020000   jne 0x5be0
0x00005953      4883c428       add rsp, 0x28
0x00005957      5b             pop rbx
0x00005958      5d             pop rbp
0x00005959      415c           pop r12
0x0000595b      415d           pop r13
0x0000595d      415e           pop r14
0x0000595f      415f           pop r15
0x00005961      c3             ret
0x00005962      660f1f440000   nop word [rax + rax]
0x00005968      31ed           xor ebp, ebp
0x0000596a      eba4           jmp 0x5910
0x0000596c      0f1f4000       nop dword [rax]
0x00005970      440fb66500     movzx r12d, byte [rbp]
0x00005975      4584e4         test r12b, r12b
0x00005978      74be           je 0x5938
0x0000597a      410fbef4       movsx esi, r12b
0x0000597e      4c89ef         mov rdi, r13
0x00005981      31ed           xor ebp, ebp
0x00005983      e858bdffff     call sym.imp.strchr
0x00005988      4885c0         test rax, rax
0x0000598b      bb01000000     mov ebx, 1
0x00005990      488b4c2408     mov rcx, qword [rsp + 8]
0x00005995      74a1           je 0x5938
0x00005997      410fbef4       movsx esi, r12b
0x0000599b      4c89ef         mov rdi, r13
0x0000599e      48894c2408     mov qword [rsp + 8], rcx
0x000059a3      e838bdffff     call sym.imp.strchr
0x000059a8      4885c0         test rax, rax
0x000059ab      488b4c2408     mov rcx, qword [rsp + 8]
0x000059b0      0f84c6000000   je 0x5a7c
0x000059b6      418d4424bb     lea eax, [r12 - 0x45]
0x000059bb      3c2f           cmp al, 0x2f
0x000059bd      7751           ja 0x5a10
0x000059bf      48ba45893000.  movabs rdx, 0x814400308945
0x000059c9      480fa3c2       bt rdx, rax
0x000059cd      7341           jae 0x5a10
0x000059cf      be30000000     mov esi, 0x30                           ; '0'
0x000059d4      4c89ef         mov rdi, r13
0x000059d7      48894c2408     mov qword [rsp + 8], rcx
0x000059dc      e8ffbcffff     call sym.imp.strchr
0x000059e1      4885c0         test rax, rax
0x000059e4      488b4c2408     mov rcx, qword [rsp + 8]
0x000059e9      7425           je 0x5a10
0x000059eb      0fb64101       movzx eax, byte [rcx + 1]
0x000059ef      3c44           cmp al, 0x44
0x000059f1      740c           je 0x59ff
0x000059f3      3c69           cmp al, 0x69
0x000059f5      0f84cd010000   je 0x5bc8
0x000059fb      3c42           cmp al, 0x42
0x000059fd      7511           jne 0x5a10
0x000059ff      bf02000000     mov edi, 2
0x00005a04      bee8030000     mov esi, 0x3e8
0x00005a09      eb0f           jmp 0x5a1a
0x00005a0b      0f1f440000     nop dword [rax + rax]
0x00005a10      bf01000000     mov edi, 1
0x00005a15      be00040000     mov esi, 0x400
0x00005a1a      4183ec42       sub r12d, 0x42
0x00005a1e      4180fc35       cmp r12b, 0x35
0x00005a22      7758           ja 0x5a7c
0x00005a24      488d151d1600.  lea rdx, [0x00007048]                   ; ">\xeb\xff\xff4\xea\xff\xff4\xea\xff\xff\x1b\xeb\xff\xff4\xea\xff\xffT\xeb\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff\xd7\xea\xff\xff4\xea\xff\xff\xf0\xe9\xff\xff4\xea\xff\xff4\xea\xff\xff\xf8\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff\xb7\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff\x92\xea\xff\xffl\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xffU\xea\xff\xff\x18\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xffT\xeb\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff\xd7\xea\xff\xff4\xea\xff\xff\xf0\xe9\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff4\xea\xff\xff\xb7\xea\xff\xff4\xea\xff\xff4\xea\xff\xff?\xea\xff\xffxstrtoumax"
0x00005a2b      450fb6e4       movzx r12d, r12b
0x00005a2f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005a33      4801d0         add rax, rdx
0x00005a36      ffe0           jmp rax
0x00005a38      4889d8         mov rax, rbx
0x00005a3b      48f7e6         mul rsi
0x00005a3e      0f80ed010000   jo 0x5c31
0x00005a44      4531c0         xor r8d, r8d
0x00005a47      48f7e6         mul rsi
0x00005a4a      0f80d2010000   jo 0x5c22
0x00005a50      4889c3         mov rbx, rax
0x00005a53      4409c5         or ebp, r8d
0x00005a56      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a60      4863ff         movsxd rdi, edi
0x00005a63      89e8           mov eax, ebp
0x00005a65      4801f9         add rcx, rdi
0x00005a68      83c802         or eax, 2
0x00005a6b      49890f         mov qword [r15], rcx
0x00005a6e      803900         cmp byte [rcx], 0
0x00005a71      49891e         mov qword [r14], rbx
0x00005a74      0f45e8         cmovne ebp, eax
0x00005a77      e9c1feffff     jmp 0x593d
0x00005a7c      49891e         mov qword [r14], rbx
0x00005a7f      83cd02         or ebp, 2
0x00005a82      e9b6feffff     jmp 0x593d
0x00005a87      ba02000000     mov edx, 2
0x00005a8c      4889d0         mov rax, rdx
0x00005a8f      48f7e3         mul rbx
0x00005a92      0f8096000000   jo 0x5b2e
0x00005a98      4801db         add rbx, rbx
0x00005a9b      ebc3           jmp 0x5a60
0x00005a9d      ba00020000     mov edx, 0x200
0x00005aa2      4889d0         mov rax, rdx
0x00005aa5      48f7e3         mul rbx
0x00005aa8      0f8080000000   jo 0x5b2e
0x00005aae      48c1e309       shl rbx, 9
0x00005ab2      ebac           jmp 0x5a60
0x00005ab4      41b807000000   mov r8d, 7
0x00005aba      4531c9         xor r9d, r9d
0x00005abd      0f1f00         nop dword [rax]
0x00005ac0      4889d8         mov rax, rbx
0x00005ac3      48f7e6         mul rsi
0x00005ac6      4889c3         mov rbx, rax
0x00005ac9      0f808f010000   jo 0x5c5e
0x00005acf      4183e801       sub r8d, 1
0x00005ad3      75eb           jne 0x5ac0
0x00005ad5      4409cd         or ebp, r9d
0x00005ad8      eb86           jmp 0x5a60
0x00005ada      41b808000000   mov r8d, 8
0x00005ae0      4531c9         xor r9d, r9d
0x00005ae3      0f1f440000     nop dword [rax + rax]
0x00005ae8      4889d8         mov rax, rbx
0x00005aeb      48f7e6         mul rsi
0x00005aee      4889c3         mov rbx, rax
0x00005af1      0f8049010000   jo 0x5c40
0x00005af7      4183e801       sub r8d, 1
0x00005afb      75eb           jne 0x5ae8
0x00005afd      ebd6           jmp 0x5ad5
0x00005aff      41b804000000   mov r8d, 4
0x00005b05      4531c9         xor r9d, r9d
0x00005b08      4889d8         mov rax, rbx
0x00005b0b      48f7e6         mul rsi
0x00005b0e      4889c3         mov rbx, rax
0x00005b11      0f80fc000000   jo 0x5c13
0x00005b17      4183e801       sub r8d, 1
0x00005b1b      75eb           jne 0x5b08
0x00005b1d      ebb6           jmp 0x5ad5
0x00005b1f      4889d8         mov rax, rbx
0x00005b22      48f7e6         mul rsi
0x00005b25      4889c3         mov rbx, rax
0x00005b28      0f8132ffffff   jno 0x5a60
0x00005b2e      bd01000000     mov ebp, 1
0x00005b33      4883cbff       or rbx, 0xffffffffffffffff
0x00005b37      e924ffffff     jmp 0x5a60
0x00005b3c      0f1f4000       nop dword [rax]
0x00005b40      41b805000000   mov r8d, 5
0x00005b46      4531c9         xor r9d, r9d
0x00005b49      4889d8         mov rax, rbx
0x00005b4c      48f7e6         mul rsi
0x00005b4f      4889c3         mov rbx, rax
0x00005b52      0f80f7000000   jo 0x5c4f
0x00005b58      4183e801       sub r8d, 1
0x00005b5c      75eb           jne 0x5b49
0x00005b5e      e972ffffff     jmp 0x5ad5
0x00005b63      41b806000000   mov r8d, 6
0x00005b69      4531c9         xor r9d, r9d
0x00005b6c      4889d8         mov rax, rbx
0x00005b6f      48f7e6         mul rsi
0x00005b72      4889c3         mov rbx, rax
0x00005b75      0f8089000000   jo 0x5c04
0x00005b7b      4183e801       sub r8d, 1
0x00005b7f      75eb           jne 0x5b6c
0x00005b81      e94fffffff     jmp 0x5ad5
0x00005b86      ba00040000     mov edx, 0x400
0x00005b8b      4889d0         mov rax, rdx
0x00005b8e      48f7e3         mul rbx
0x00005b91      709b           jo 0x5b2e
0x00005b93      48c1e30a       shl rbx, 0xa
0x00005b97      e9c4feffff     jmp 0x5a60
0x00005b9c      4889d8         mov rax, rbx
0x00005b9f      48f7e6         mul rsi
0x00005ba2      0f80c5000000   jo 0x5c6d
0x00005ba8      4531c0         xor r8d, r8d
0x00005bab      48f7e6         mul rsi
0x00005bae      0f8193feffff   jno 0x5a47
0x00005bb4      41b801000000   mov r8d, 1
0x00005bba      4883c8ff       or rax, 0xffffffffffffffff
0x00005bbe      e984feffff     jmp 0x5a47
0x00005bc3      0f1f440000     nop dword [rax + rax]
0x00005bc8      31ff           xor edi, edi
0x00005bca      80790242       cmp byte [rcx + 2], 0x42
0x00005bce      be00040000     mov esi, 0x400
0x00005bd3      400f94c7       sete dil
0x00005bd7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x00005bdb      e93afeffff     jmp 0x5a1a
0x00005be0      e8cbbaffff     call sym.imp.__stack_chk_fail
0x00005be5      488d0d341500.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x7120 ; "xstrtoumax"
0x00005bec      488d350d1400.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x7000 ; "../coreutils-8.31/lib/xstrtol.c"
0x00005bf3      488d3d261400.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x7020 ; "0 <= strtol_base && strtol_base <= 36"
0x00005bfa      ba54000000     mov edx, 0x54                           ; 'T'
0x00005bff      e81cbbffff     call sym.imp.__assert_fail
0x00005c04      41b901000000   mov r9d, 1
0x00005c0a      4883cbff       or rbx, 0xffffffffffffffff
0x00005c0e      e968ffffff     jmp 0x5b7b
0x00005c13      41b901000000   mov r9d, 1
0x00005c19      4883cbff       or rbx, 0xffffffffffffffff
0x00005c1d      e9f5feffff     jmp 0x5b17
0x00005c22      41b801000000   mov r8d, 1
0x00005c28      4883cbff       or rbx, 0xffffffffffffffff
0x00005c2c      e922feffff     jmp 0x5a53
0x00005c31      4883c8ff       or rax, 0xffffffffffffffff
0x00005c35      41b801000000   mov r8d, 1
0x00005c3b      e907feffff     jmp 0x5a47
0x00005c40      41b901000000   mov r9d, 1
0x00005c46      4883cbff       or rbx, 0xffffffffffffffff
0x00005c4a      e9a8feffff     jmp 0x5af7
0x00005c4f      41b901000000   mov r9d, 1
0x00005c55      4883cbff       or rbx, 0xffffffffffffffff
0x00005c59      e9fafeffff     jmp 0x5b58
0x00005c5e      41b901000000   mov r9d, 1
0x00005c64      4883cbff       or rbx, 0xffffffffffffffff
0x00005c68      e962feffff     jmp 0x5acf
0x00005c6d      41b801000000   mov r8d, 1
0x00005c73      4883c8ff       or rax, 0xffffffffffffffff
0x00005c77      e92fffffff     jmp 0x5bab
0x00005c7c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00005c80      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005c82      55             push rbp
0x00005c83      53             push rbx
0x00005c84      4889fb         mov rbx, rdi
0x00005c87      e844bbffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x00005c8c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x00005c8e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00005c91      7854           js 0x5ce7                               ; ../coreutils-8.31/lib/fclose.c:66
0x00005c93      e878bbffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00005c98      85c0           test eax, eax
0x00005c9a      752c           jne 0x5cc8
0x00005c9c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x00005c9f      e85c000000     call sym.rpl_fflush
0x00005ca4      85c0           test eax, eax
0x00005ca6      743c           je 0x5ce4
0x00005ca8      e853b9ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x00005cad      448b20         mov r12d, dword [rax]
0x00005cb0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005cb3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00005cb6      e8a5b9ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x00005cbb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x00005cbe      7530           jne 0x5cf0
0x00005cc0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005cc1      5d             pop rbp
0x00005cc2      415c           pop r12
0x00005cc4      c3             ret
0x00005cc5      0f1f00         nop dword [rax]
0x00005cc8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x00005ccb      e800bbffff     call sym.imp.fileno
0x00005cd0      31f6           xor esi, esi
0x00005cd2      ba01000000     mov edx, 1
0x00005cd7      89c7           mov edi, eax
0x00005cd9      e832baffff     call sym.imp.lseek
0x00005cde      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005ce2      75b8           jne 0x5c9c
0x00005ce4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00005ce7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00005ce8      5d             pop rbp
0x00005ce9      415c           pop r12
0x00005ceb      e970b9ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005cf0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005cf4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005cf9      ebc5           jmp 0x5cc0
0x00005cfb      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005d00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005d03      53             push rbx
0x00005d04      4889fb         mov rbx, rdi
0x00005d07      7411           je 0x5d1a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005d09      e802bbffff     call sym.imp.__freading
0x00005d0e      85c0           test eax, eax
0x00005d10      7408           je 0x5d1a
0x00005d12      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005d18      750e           jne 0x5d28
0x00005d1a      4889df         mov rdi, rbx
0x00005d1d      5b             pop rbx
0x00005d1e      e9cdbaffff     jmp sym.imp.fflush
0x00005d23      0f1f440000     nop dword [rax + rax]
0x00005d28      4889df         mov rdi, rbx
0x00005d2b      ba01000000     mov edx, 1
0x00005d30      31f6           xor esi, esi
0x00005d32      e809000000     call sym.rpl_fseeko
0x00005d37      4889df         mov rdi, rbx
0x00005d3a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x00005d3b      e9b0baffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005d40      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005d44      48394710       cmp qword [rdi + 0x10], rax
0x00005d48      7406           je 0x5d50                               ; ../coreutils-8.31/lib/fseeko.c:32
0x00005d4a      e941bbffff     jmp sym.imp.fseeko
0x00005d4f      90             nop
0x00005d50      488b4720       mov rax, qword [rdi + 0x20]
0x00005d54      48394728       cmp qword [rdi + 0x28], rax
0x00005d58      75f0           jne 0x5d4a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x00005d5a      48837f4800     cmp qword [rdi + 0x48], 0
0x00005d5f      75e9           jne 0x5d4a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005d61      4154           push r12
0x00005d63      55             push rbp
0x00005d64      4189d4         mov r12d, edx
0x00005d67      53             push rbx
0x00005d68      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x00005d6b      4889fb         mov rbx, rdi
0x00005d6e      e85dbaffff     call sym.imp.fileno
0x00005d73      4489e2         mov edx, r12d
0x00005d76      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005d79      89c7           mov edi, eax
0x00005d7b      e890b9ffff     call sym.imp.lseek
0x00005d80      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005d84      740c           je 0x5d92
0x00005d86      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005d89      488983900000.  mov qword [rbx + 0x90], rax
0x00005d90      31c0           xor eax, eax
0x00005d92      5b             pop rbx
0x00005d93      5d             pop rbp
0x00005d94      415c           pop r12
0x00005d96      c3             ret
0x00005d97      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x00005da0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005da2      4154           push r12
0x00005da4      4989f5         mov r13, rsi
0x00005da7      55             push rbp
0x00005da8      53             push rbx
0x00005da9      4889fb         mov rbx, rdi
0x00005dac      4989d4         mov r12, rdx
0x00005daf      4883ec18       sub rsp, 0x18
0x00005db3      64488b042528.  mov rax, qword fs:[0x28]
0x00005dbc      4889442408     mov qword [rsp + 8], rax
0x00005dc1      31c0           xor eax, eax
0x00005dc3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005dc8      4885ff         test rdi, rdi
0x00005dcb      480f44d8       cmove rbx, rax
0x00005dcf      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005dd2      e8f9b8ffff     call sym.imp.mbrtowc
0x00005dd7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005ddb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005dde      7620           jbe 0x5e00                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005de0      4d85e4         test r12, r12
0x00005de3      741b           je 0x5e00
0x00005de5      31ff           xor edi, edi
0x00005de7      e854040000     call sym.hard_locale
0x00005dec      84c0           test al, al
0x00005dee      7510           jne 0x5e00
0x00005df0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005df5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005dfa      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005dfc      0f1f4000       nop dword [rax]
0x00005e00      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005e05      644833142528.  xor rdx, qword fs:[0x28]
0x00005e0e      4889e8         mov rax, rbp
0x00005e11      750b           jne 0x5e1e
0x00005e13      4883c418       add rsp, 0x18
0x00005e17      5b             pop rbx
0x00005e18      5d             pop rbp
0x00005e19      415c           pop r12
0x00005e1b      415d           pop r13
0x00005e1d      c3             ret
0x00005e1e      e88db8ffff     call sym.imp.__stack_chk_fail
0x00005e23      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e2d      0f1f00         nop dword [rax]
;-- __argmatch_die:
0x00005e30      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x00005e35      e976c2ffff     jmp sym.usage
0x00005e3a      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00005e40      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00005e42      4156           push r14
0x00005e44      4989f7         mov r15, rsi
0x00005e47      4155           push r13
0x00005e49      4154           push r12
0x00005e4b      4989cd         mov r13, rcx
0x00005e4e      55             push rbp
0x00005e4f      53             push rbx
0x00005e50      4889d5         mov rbp, rdx
0x00005e53      4883ec28       sub rsp, 0x28
0x00005e57      48897c2408     mov qword [rsp + 8], rdi
0x00005e5c      4889542418     mov qword [rsp + 0x18], rdx
0x00005e61      e83ab8ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00005e66      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00005e69      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00005e71      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00005e74      0f84b3000000   je 0x5f2d
0x00005e7a      4989c4         mov r12, rax
0x00005e7d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00005e82      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00005e84      eb51           jmp 0x5ed7
0x00005e86      662e0f1f8400.  nop word cs:[rax + rax]
0x00005e90      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00005e95      4885c0         test rax, rax
0x00005e98      0f84a2000000   je 0x5f40
0x00005e9e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00005ea2      4c89ea         mov rdx, r13
0x00005ea5      4889ee         mov rsi, rbp
0x00005ea8      490faffd       imul rdi, r13
0x00005eac      4801c7         add rdi, rax
0x00005eaf      e8ccb8ffff     call sym.imp.memcmp
0x00005eb4      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00005eb6      0fb6442417     movzx eax, byte [rsp + 0x17]
0x00005ebb      b901000000     mov ecx, 1
0x00005ec0      0f45c1         cmovne eax, ecx
0x00005ec3      88442417       mov byte [rsp + 0x17], al
0x00005ec7      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005ecb      4c01ed         add rbp, r13
0x00005ece      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00005ed2      4d85f6         test r14, r14
0x00005ed5      7441           je 0x5f18
0x00005ed7      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x00005edc      4c89e2         mov rdx, r12
0x00005edf      4c89f7         mov rdi, r14
0x00005ee2      e829b7ffff     call sym.imp.strncmp
0x00005ee7      85c0           test eax, eax
0x00005ee9      75dc           jne 0x5ec7
0x00005eeb      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x00005eee      e8adb7ffff     call sym.imp.strlen
0x00005ef3      4c39e0         cmp rax, r12
0x00005ef6      7458           je 0x5f50
0x00005ef8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x00005efd      7591           jne 0x5e90
0x00005eff      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x00005f03      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x00005f07      4c01ed         add rbp, r13
0x00005f0a      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00005f0e      4d85f6         test r14, r14
0x00005f11      75c4           jne 0x5ed7
0x00005f13      0f1f440000     nop dword [rax + rax]
0x00005f18      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x00005f1d      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x00005f24      480f440424     cmove rax, qword [rsp]
0x00005f29      48890424       mov qword [rsp], rax
0x00005f2d      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x00005f31      4883c428       add rsp, 0x28
0x00005f35      5b             pop rbx
0x00005f36      5d             pop rbp
0x00005f37      415c           pop r12
0x00005f39      415d           pop r13
0x00005f3b      415e           pop r14
0x00005f3d      415f           pop r15
0x00005f3f      c3             ret
0x00005f40      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00005f45      eb80           jmp 0x5ec7
0x00005f47      660f1f840000.  nop word [rax + rax]
0x00005f50      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00005f54      ebd7           jmp 0x5f2d
0x00005f56      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00005f60      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00005f64      4154           push r12
0x00005f66      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00005f6b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00005f6c      4989f4         mov r12, rsi
0x00005f6f      53             push rbx
0x00005f70      4889fd         mov rbp, rdi
0x00005f73      744b           je 0x5fc0                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00005f75      488d35ca1100.  lea rsi, str.ambiguous_argument__s_for__s ; 0x7146 ; "ambiguous argument %s for %s"
0x00005f7c      31ff           xor edi, edi
0x00005f7e      e8fdb6ffff     call sym.imp.dcgettext
0x00005f83      4889c3         mov rbx, rax
0x00005f86      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00005f89      bf01000000     mov edi, 1
0x00005f8e      e87defffff     call sym.quote_n
0x00005f93      4c89e2         mov rdx, r12
0x00005f96      4889c5         mov rbp, rax
0x00005f99      be08000000     mov esi, 8
0x00005f9e      31ff           xor edi, edi
0x00005fa0      e89bebffff     call sym.quotearg_n_style
0x00005fa5      4989e8         mov r8, rbp
0x00005fa8      4889da         mov rdx, rbx
0x00005fab      4889c1         mov rcx, rax
0x00005fae      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00005faf      5d             pop rbp
0x00005fb0      415c           pop r12
0x00005fb2      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00005fb4      31ff           xor edi, edi
0x00005fb6      31c0           xor eax, eax
0x00005fb8      e9b3b8ffff     jmp sym.imp.error
0x00005fbd      0f1f00         nop dword [rax]
0x00005fc0      488d35641100.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0x712b ; "invalid argument %s for %s"
0x00005fc7      31ff           xor edi, edi
0x00005fc9      e8b2b6ffff     call sym.imp.dcgettext
0x00005fce      4889c3         mov rbx, rax
0x00005fd1      ebb3           jmp 0x5f86
0x00005fd3      0f1f00         nop dword [rax]
0x00005fd6      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00005fe0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005fe2      4156           push r14
0x00005fe4      4989fe         mov r14, rdi
0x00005fe7      4155           push r13
0x00005fe9      4154           push r12
0x00005feb      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00005fed      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00005fee      53             push rbx
0x00005fef      4889f5         mov rbp, rsi
0x00005ff2      488d356a1100.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0x7163 ; "Valid arguments are:"
0x00005ff9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00005ffc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00006001      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00006005      488b1dd43020.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x0000600c      e86fb6ffff     call sym.imp.dcgettext
0x00006011      4889c7         mov rdi, rax
0x00006014      4889de         mov rsi, rbx
0x00006017      e874b7ffff     call sym.imp.fputs_unlocked
0x0000601c      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x0000601f      4d85ff         test r15, r15
0x00006022      0f8490000000   je 0x60b8
0x00006028      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x0000602b      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x0000602d      eb39           jmp 0x6068
0x0000602f      90             nop
0x00006030      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00006033      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00006037      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x0000603a      e8f1eeffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x0000603f      488b3d9a3020.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00006046      488d152b1100.  lea rdx, [0x00007178]                   ; "\n  - %s"
0x0000604d      4889c1         mov rcx, rax
0x00006050      be01000000     mov esi, 1
0x00006055      31c0           xor eax, eax
0x00006057      4c01e5         add rbp, r12
0x0000605a      e881b8ffff     call sym.imp.__fprintf_chk
0x0000605f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00006063      4d85ff         test r15, r15
0x00006066      7450           je 0x60b8
0x00006068      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x0000606b      74c3           je 0x6030
0x0000606d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00006070      4889ee         mov rsi, rbp
0x00006073      4c89ef         mov rdi, r13
0x00006076      e805b7ffff     call sym.imp.memcmp
0x0000607b      85c0           test eax, eax
0x0000607d      75b1           jne 0x6030
0x0000607f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00006082      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00006086      4c01e5         add rbp, r12
0x00006089      e8a2eeffff     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x0000608e      488b3d4b3020.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x00006095      488d15e41000.  lea rdx, str.s                          ; 0x7180 ; ", %s"
0x0000609c      4889c1         mov rcx, rax
0x0000609f      be01000000     mov esi, 1
0x000060a4      31c0           xor eax, eax
0x000060a6      e835b8ffff     call sym.imp.__fprintf_chk
0x000060ab      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x000060af      4d85ff         test r15, r15
0x000060b2      75b4           jne 0x6068
0x000060b4      0f1f4000       nop dword [rax]
0x000060b8      488b3d213020.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2090e0:8]=0
0x000060bf      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x000060c3      483b4730       cmp rax, qword [rdi + 0x30]
0x000060c7      731f           jae 0x60e8
0x000060c9      488d5001       lea rdx, [rax + 1]
0x000060cd      48895728       mov qword [rdi + 0x28], rdx
0x000060d1      c6000a         mov byte [rax], 0xa
0x000060d4      4883c408       add rsp, 8
0x000060d8      5b             pop rbx
0x000060d9      5d             pop rbp
0x000060da      415c           pop r12
0x000060dc      415d           pop r13
0x000060de      415e           pop r14
0x000060e0      415f           pop r15
0x000060e2      c3             ret
0x000060e3      0f1f440000     nop dword [rax + rax]
0x000060e8      4883c408       add rsp, 8
0x000060ec      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x000060f1      5b             pop rbx
0x000060f2      5d             pop rbp
0x000060f3      415c           pop r12
0x000060f5      415d           pop r13
0x000060f7      415e           pop r14
0x000060f9      415f           pop r15
0x000060fb      e9f0b5ffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00006100      4157           push r15
0x00006102      4156           push r14
0x00006104      4989fe         mov r14, rdi
0x00006107      4155           push r13
0x00006109      4154           push r12
0x0000610b      4989f4         mov r12, rsi
0x0000610e      55             push rbp
0x0000610f      53             push rbx
0x00006110      4889cd         mov rbp, rcx
0x00006113      4889d3         mov rbx, rdx
0x00006116      4c89c1         mov rcx, r8
0x00006119      4889ea         mov rdx, rbp
0x0000611c      4883ec08       sub rsp, 8
0x00006120      4889de         mov rsi, rbx
0x00006123      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00006126      4d89c7         mov r15, r8
0x00006129      4d89cd         mov r13, r9
0x0000612c      e80ffdffff     call sym.argmatch
0x00006131      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00006134      780f           js 0x6145                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00006136      4883c408       add rsp, 8
0x0000613a      5b             pop rbx
0x0000613b      5d             pop rbp
0x0000613c      415c           pop r12
0x0000613e      415d           pop r13
0x00006140      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00006142      415f           pop r15
0x00006144      c3             ret
0x00006145      4889c2         mov rdx, rax
0x00006148      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x0000614b      4c89f7         mov rdi, r14
0x0000614e      e80dfeffff     call sym.argmatch_invalid
0x00006153      4c89fa         mov rdx, r15
0x00006156      4889ee         mov rsi, rbp
0x00006159      4889df         mov rdi, rbx
0x0000615c      e87ffeffff     call sym.argmatch_valid
0x00006161      41ffd5         call r13
0x00006164      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000616b      ebc9           jmp 0x6136
0x0000616d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00006170      4156           push r14
0x00006172      4155           push r13
0x00006174      4154           push r12
0x00006176      55             push rbp
0x00006177      53             push rbx
0x00006178      4c8b36         mov r14, qword [rsi]
0x0000617b      4d85f6         test r14, r14
0x0000617e      7431           je 0x61b1
0x00006180      4989cc         mov r12, rcx
0x00006183      4989fd         mov r13, rdi
0x00006186      4889d5         mov rbp, rdx
0x00006189      488d5e08       lea rbx, [rsi + 8]
0x0000618d      eb10           jmp 0x619f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x0000618f      90             nop
0x00006190      4c8b33         mov r14, qword [rbx]
0x00006193      4c01e5         add rbp, r12
0x00006196      4883c308       add rbx, 8
0x0000619a      4d85f6         test r14, r14
0x0000619d      7412           je 0x61b1
0x0000619f      4c89e2         mov rdx, r12
0x000061a2      4889ee         mov rsi, rbp
0x000061a5      4c89ef         mov rdi, r13
0x000061a8      e8d3b5ffff     call sym.imp.memcmp
0x000061ad      85c0           test eax, eax
0x000061af      75df           jne 0x6190
0x000061b1      5b             pop rbx
0x000061b2      4c89f0         mov rax, r14
0x000061b5      5d             pop rbp
0x000061b6      415c           pop r12
0x000061b8      415d           pop r13
0x000061ba      415e           pop r14
0x000061bc      c3             ret
0x000061bd      0f1f00         nop dword [rax]
;-- close_stream:
0x000061c0      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x000061c2      55             push rbp
0x000061c3      4889fd         mov rbp, rdi
0x000061c6      53             push rbx
0x000061c7      e864b4ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x000061cc      8b5d00         mov ebx, dword [rbp]
0x000061cf      4889ef         mov rdi, rbp
0x000061d2      4989c4         mov r12, rax
0x000061d5      e8a6faffff     call sym.rpl_fclose
0x000061da      83e320         and ebx, 0x20                           ; "@"
0x000061dd      85db           test ebx, ebx
0x000061df      7517           jne 0x61f8
0x000061e1      85c0           test eax, eax
0x000061e3      740a           je 0x61ef                               ; stdio.h:-186
0x000061e5      4d85e4         test r12, r12                           ; stdio.h:-178
0x000061e8      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000061ed      7439           je 0x6228
0x000061ef      5b             pop rbx
0x000061f0      5d             pop rbp
0x000061f1      415c           pop r12
0x000061f3      c3             ret
0x000061f4      0f1f4000       nop dword [rax]
0x000061f8      85c0           test eax, eax
0x000061fa      751c           jne 0x6218
0x000061fc      e8ffb3ffff     call sym.imp.__errno_location
0x00006201      c70000000000   mov dword [rax], 0
0x00006207      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000620c      5b             pop rbx
0x0000620d      5d             pop rbp
0x0000620e      415c           pop r12
0x00006210      c3             ret
0x00006211      0f1f80000000.  nop dword [rax]
0x00006218      5b             pop rbx
0x00006219      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000621e      5d             pop rbp                                 ; stdio.h:-186
0x0000621f      415c           pop r12
0x00006221      c3             ret
0x00006222      660f1f440000   nop word [rax + rax]
0x00006228      e8d3b3ffff     call sym.imp.__errno_location
0x0000622d      833809         cmp dword [rax], 9
0x00006230      5b             pop rbx
0x00006231      5d             pop rbp
0x00006232      415c           pop r12                                 ; stdio.h:-178
0x00006234      0f95c0         setne al
0x00006237      0fb6c0         movzx eax, al
0x0000623a      f7d8           neg eax
0x0000623c      c3             ret
0x0000623d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006240      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006244      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006246      e8e5b5ffff     call sym.imp.setlocale
0x0000624b      4889c2         mov rdx, rax
0x0000624e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00006253      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00006256      741d           je 0x6275
0x00006258      488d3d260f00.  lea rdi, [0x00007185]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000625f      b902000000     mov ecx, 2
0x00006264      4889d6         mov rsi, rdx
0x00006267      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006269      0f97c1         seta cl
0x0000626c      80d900         sbb cl, 0
0x0000626f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00006271      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00006273      750b           jne 0x6280
0x00006275      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00006279      c3             ret
0x0000627a      660f1f440000   nop word [rax + rax]
0x00006280      488d3d000f00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7187 ; "POSIX"
0x00006287      b906000000     mov ecx, 6
0x0000628c      4889d6         mov rsi, rdx
0x0000628f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00006291      0f97c0         seta al
0x00006294      1c00           sbb al, 0
0x00006296      84c0           test al, al
0x00006298      0f95c0         setne al
0x0000629b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000629f      c3             ret
;-- locale_charset:
0x000062a0      4883ec08       sub rsp, 8
0x000062a4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000062a9      e852b5ffff     call sym.imp.nl_langinfo
0x000062ae      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x000062b1      741d           je 0x62d0
0x000062b3      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x000062b6      488d15d00e00.  lea rdx, str.ASCII                      ; 0x718d ; "ASCII"
0x000062bd      480f44c2       cmove rax, rdx
0x000062c1      4883c408       add rsp, 8
0x000062c5      c3             ret
0x000062c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000062d0      488d05b60e00.  lea rax, str.ASCII                      ; 0x718d ; "ASCII"
0x000062d7      4883c408       add rsp, 8
0x000062db      c3             ret
0x000062dc      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x000062e0      4157           push r15
0x000062e2      4156           push r14
0x000062e4      4989d7         mov r15, rdx
0x000062e7      4155           push r13
0x000062e9      4154           push r12
0x000062eb      4c8d251e2820.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x208b10 ; "0\x1c"
0x000062f2      55             push rbp
0x000062f3      488d2d1e2820.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x208b18
0x000062fa      53             push rbx
0x000062fb      4189fd         mov r13d, edi
0x000062fe      4989f6         mov r14, rsi
0x00006301      4c29e5         sub rbp, r12
0x00006304      4883ec08       sub rsp, 8
0x00006308      48c1fd03       sar rbp, 3
0x0000630c      e887b2ffff     call sym._init
0x00006311      4885ed         test rbp, rbp
0x00006314      7420           je 0x6336
0x00006316      31db           xor ebx, ebx
0x00006318      0f1f84000000.  nop dword [rax + rax]
0x00006320      4c89fa         mov rdx, r15
0x00006323      4c89f6         mov rsi, r14
0x00006326      4489ef         mov edi, r13d
0x00006329      41ff14dc       call qword [r12 + rbx*8]
0x0000632d      4883c301       add rbx, 1
0x00006331      4839dd         cmp rbp, rbx
0x00006334      75ea           jne 0x6320
0x00006336      4883c408       add rsp, 8
0x0000633a      5b             pop rbx
0x0000633b      5d             pop rbp
0x0000633c      415c           pop r12
0x0000633e      415d           pop r13
0x00006340      415e           pop r14
0x00006342      415f           pop r15
0x00006344      c3             ret
0x00006345      90             nop
0x00006346      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x00006350      f3c3           ret
0x00006352      662e0f1f8400.  nop word cs:[rax + rax]
0x0000635c      0f1f4000       nop dword [rax]
;-- atexit:
0x00006360      488b15a12c20.  mov rdx, qword [obj.__dso_handle]       ; [0x209008:8]=0x209008 obj.__dso_handle
0x00006367      31f6           xor esi, esi
0x00006369      e942b5ffff     jmp sym.imp.__cxa_atexit
0x0000636e      0000           add byte [rax], al
