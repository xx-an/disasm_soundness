;-- section..plt:
;-- .plt:
0x00001980      ff352ad42000   push qword [0x0020edb0]                 ; [12] -r-x section size 1056 named .plt
0x00001986      ff252cd42000   jmp qword [0x0020edb8]                  ; [0x20edb8:8]=0
0x0000198c      0f1f4000       nop dword [rax]
;-- imp.abort:
0x00001990      ff252ad42000   jmp qword [reloc.abort]                 ; [0x20edc0:8]=0x1996
0x00001996      6800000000     push 0
0x0000199b      e9e0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x000019a0      ff2522d42000   jmp qword [reloc.__errno_location]      ; [0x20edc8:8]=0x19a6
0x000019a6      6801000000     push 1
0x000019ab      e9d0ffffff     jmp sym..plt
;-- imp.strncmp:
0x000019b0      ff251ad42000   jmp qword [reloc.strncmp]               ; [0x20edd0:8]=0x19b6
0x000019b6      6802000000     push 2
0x000019bb      e9c0ffffff     jmp sym..plt
;-- imp._exit:
0x000019c0      ff2512d42000   jmp qword [reloc._exit]                 ; [0x20edd8:8]=0x19c6
0x000019c6      6803000000     push 3
0x000019cb      e9b0ffffff     jmp sym..plt
;-- imp.__fpending:
0x000019d0      ff250ad42000   jmp qword [reloc.__fpending]            ; [0x20ede0:8]=0x19d6
0x000019d6      6804000000     push 4
0x000019db      e9a0ffffff     jmp sym..plt
;-- imp.unlinkat:
0x000019e0      ff2502d42000   jmp qword [reloc.unlinkat]              ; [0x20ede8:8]=0x19e6
0x000019e6      6805000000     push 5
0x000019eb      e990ffffff     jmp sym..plt
;-- imp.qsort:
0x000019f0      ff25fad32000   jmp qword [reloc.qsort]                 ; [0x20edf0:8]=0x19f6
0x000019f6      6806000000     push 6
0x000019fb      e980ffffff     jmp sym..plt
;-- imp.isatty:
0x00001a00      ff25f2d32000   jmp qword [reloc.isatty]                ; [0x20edf8:8]=0x1a06
0x00001a06      6807000000     push 7
0x00001a0b      e970ffffff     jmp sym..plt
;-- imp.faccessat:
0x00001a10      ff25ead32000   jmp qword [reloc.faccessat]             ; [0x20ee00:8]=0x1a16
0x00001a16      6808000000     push 8
0x00001a1b      e960ffffff     jmp sym..plt
;-- imp.fcntl:
0x00001a20      ff25e2d32000   jmp qword [reloc.fcntl]                 ; [0x20ee08:8]=0x1a26 ; "&\x1a"
0x00001a26      6809000000     push 9
0x00001a2b      e950ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001a30      ff25dad32000   jmp qword [reloc.textdomain]            ; [0x20ee10:8]=0x1a36 ; "6\x1a"
0x00001a36      680a000000     push 0xa
0x00001a3b      e940ffffff     jmp sym..plt
;-- imp.fclose:
0x00001a40      ff25d2d32000   jmp qword [reloc.fclose]                ; [0x20ee18:8]=0x1a46 ; "F\x1a"
0x00001a46      680b000000     push 0xb
0x00001a4b      e930ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001a50      ff25cad32000   jmp qword [reloc.bindtextdomain]        ; [0x20ee20:8]=0x1a56 ; "V\x1a"
0x00001a56      680c000000     push 0xc
0x00001a5b      e920ffffff     jmp sym..plt
;-- imp.dcgettext:
0x00001a60      ff25c2d32000   jmp qword [reloc.dcgettext]             ; [0x20ee28:8]=0x1a66 ; "f\x1a"
0x00001a66      680d000000     push 0xd
0x00001a6b      e910ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x00001a70      ff25bad32000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20ee30:8]=0x1a76 ; "v\x1a"
0x00001a76      680e000000     push 0xe
0x00001a7b      e900ffffff     jmp sym..plt
;-- imp.strlen:
0x00001a80      ff25b2d32000   jmp qword [reloc.strlen]                ; [0x20ee38:8]=0x1a86
0x00001a86      680f000000     push 0xf
0x00001a8b      e9f0feffff     jmp sym..plt
;-- imp.__lxstat:
0x00001a90      ff25aad32000   jmp qword [reloc.__lxstat]              ; [0x20ee40:8]=0x1a96
0x00001a96      6810000000     push 0x10
0x00001a9b      e9e0feffff     jmp sym..plt
;-- imp.openat:
0x00001aa0      ff25a2d32000   jmp qword [reloc.openat]                ; [0x20ee48:8]=0x1aa6
0x00001aa6      6811000000     push 0x11
0x00001aab      e9d0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001ab0      ff259ad32000   jmp qword [reloc.__stack_chk_fail]      ; [0x20ee50:8]=0x1ab6
0x00001ab6      6812000000     push 0x12
0x00001abb      e9c0feffff     jmp sym..plt
;-- imp.getopt_long:
0x00001ac0      ff2592d32000   jmp qword [reloc.getopt_long]           ; [0x20ee58:8]=0x1ac6
0x00001ac6      6813000000     push 0x13
0x00001acb      e9b0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001ad0      ff258ad32000   jmp qword [reloc.mbrtowc]               ; [0x20ee60:8]=0x1ad6
0x00001ad6      6814000000     push 0x14
0x00001adb      e9a0feffff     jmp sym..plt
;-- imp.__fxstatat:
0x00001ae0      ff2582d32000   jmp qword [reloc.__fxstatat]            ; [0x20ee68:8]=0x1ae6
0x00001ae6      6815000000     push 0x15
0x00001aeb      e990feffff     jmp sym..plt
;-- imp.__overflow:
0x00001af0      ff257ad32000   jmp qword [reloc.__overflow]            ; [0x20ee70:8]=0x1af6
0x00001af6      6816000000     push 0x16
0x00001afb      e980feffff     jmp sym..plt
;-- imp.strrchr:
0x00001b00      ff2572d32000   jmp qword [reloc.strrchr]               ; [0x20ee78:8]=0x1b06
0x00001b06      6817000000     push 0x17
0x00001b0b      e970feffff     jmp sym..plt
;-- imp.lseek:
0x00001b10      ff256ad32000   jmp qword [reloc.lseek]                 ; [0x20ee80:8]=0x1b16
0x00001b16      6818000000     push 0x18
0x00001b1b      e960feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001b20      ff2562d32000   jmp qword [reloc.__assert_fail]         ; [0x20ee88:8]=0x1b26 ; "&\x1b"
0x00001b26      6819000000     push 0x19
0x00001b2b      e950feffff     jmp sym..plt
;-- imp.memset:
0x00001b30      ff255ad32000   jmp qword [reloc.memset]                ; [0x20ee90:8]=0x1b36 ; "6\x1b"
0x00001b36      681a000000     push 0x1a
0x00001b3b      e940feffff     jmp sym..plt
;-- imp.geteuid:
0x00001b40      ff2552d32000   jmp qword [reloc.geteuid]               ; [0x20ee98:8]=0x1b46 ; "F\x1b"
0x00001b46      681b000000     push 0x1b
0x00001b4b      e930feffff     jmp sym..plt
;-- imp.close:
0x00001b50      ff254ad32000   jmp qword [reloc.close]                 ; [0x20eea0:8]=0x1b56 ; "V\x1b"
0x00001b56      681c000000     push 0x1c
0x00001b5b      e920feffff     jmp sym..plt
;-- imp.closedir:
0x00001b60      ff2542d32000   jmp qword [reloc.closedir]              ; [0x20eea8:8]=0x1b66 ; "f\x1b"
0x00001b66      681d000000     push 0x1d
0x00001b6b      e910feffff     jmp sym..plt
;-- imp.memcmp:
0x00001b70      ff253ad32000   jmp qword [reloc.memcmp]                ; [0x20eeb0:8]=0x1b76 ; "v\x1b"
0x00001b76      681e000000     push 0x1e
0x00001b7b      e900feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001b80      ff2532d32000   jmp qword [reloc.fputs_unlocked]        ; [0x20eeb8:8]=0x1b86
0x00001b86      681f000000     push 0x1f
0x00001b8b      e9f0fdffff     jmp sym..plt
;-- imp.calloc:
0x00001b90      ff252ad32000   jmp qword [reloc.calloc]                ; [0x20eec0:8]=0x1b96
0x00001b96      6820000000     push 0x20                               ; "@"
0x00001b9b      e9e0fdffff     jmp sym..plt
;-- imp.__getdelim:
0x00001ba0      ff2522d32000   jmp qword [reloc.__getdelim]            ; [0x20eec8:8]=0x1ba6
0x00001ba6      6821000000     push 0x21                               ; '!'
0x00001bab      e9d0fdffff     jmp sym..plt
;-- imp.strcmp:
0x00001bb0      ff251ad32000   jmp qword [reloc.strcmp]                ; [0x20eed0:8]=0x1bb6
0x00001bb6      6822000000     push 0x22                               ; '"'
0x00001bbb      e9c0fdffff     jmp sym..plt
;-- imp.dirfd:
0x00001bc0      ff2512d32000   jmp qword [reloc.dirfd]                 ; [0x20eed8:8]=0x1bc6
0x00001bc6      6823000000     push 0x23                               ; '#'
0x00001bcb      e9b0fdffff     jmp sym..plt
;-- imp.rpmatch:
0x00001bd0      ff250ad32000   jmp qword [reloc.rpmatch]               ; [0x20eee0:8]=0x1bd6
0x00001bd6      6824000000     push 0x24                               ; '$'
0x00001bdb      e9a0fdffff     jmp sym..plt
;-- imp.memcpy:
0x00001be0      ff2502d32000   jmp qword [reloc.memcpy]                ; [0x20eee8:8]=0x1be6
0x00001be6      6825000000     push 0x25                               ; '%'
0x00001beb      e990fdffff     jmp sym..plt
;-- imp.fileno:
0x00001bf0      ff25fad22000   jmp qword [reloc.fileno]                ; [0x20eef0:8]=0x1bf6
0x00001bf6      6826000000     push 0x26                               ; '&'
0x00001bfb      e980fdffff     jmp sym..plt
;-- imp.__xstat:
0x00001c00      ff25f2d22000   jmp qword [reloc.__xstat]               ; [0x20eef8:8]=0x1c06
0x00001c06      6827000000     push 0x27                               ; '''
0x00001c0b      e970fdffff     jmp sym..plt
;-- imp.readdir:
0x00001c10      ff25ead22000   jmp qword [reloc.readdir]               ; [0x20ef00:8]=0x1c16
0x00001c16      6828000000     push 0x28                               ; '('
0x00001c1b      e960fdffff     jmp sym..plt
;-- imp.malloc:
0x00001c20      ff25e2d22000   jmp qword [reloc.malloc]                ; [0x20ef08:8]=0x1c26 ; "&\x1c"
0x00001c26      6829000000     push 0x29                               ; ')'
0x00001c2b      e950fdffff     jmp sym..plt
;-- imp.fflush:
0x00001c30      ff25dad22000   jmp qword [reloc.fflush]                ; [0x20ef10:8]=0x1c36 ; "6\x1c"
0x00001c36      682a000000     push 0x2a                               ; '*'
0x00001c3b      e940fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001c40      ff25d2d22000   jmp qword [reloc.nl_langinfo]           ; [0x20ef18:8]=0x1c46 ; "F\x1c"
0x00001c46      682b000000     push 0x2b                               ; '+'
0x00001c4b      e930fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001c50      ff25cad22000   jmp qword [reloc.__fxstat]              ; [0x20ef20:8]=0x1c56 ; "V\x1c"
0x00001c56      682c000000     push 0x2c                               ; ','
0x00001c5b      e920fdffff     jmp sym..plt
;-- imp.__freading:
0x00001c60      ff25c2d22000   jmp qword [reloc.__freading]            ; [0x20ef28:8]=0x1c66 ; "f\x1c"
0x00001c66      682d000000     push 0x2d                               ; '-'
0x00001c6b      e910fdffff     jmp sym..plt
;-- imp.fchdir:
0x00001c70      ff25bad22000   jmp qword [reloc.fchdir]                ; [0x20ef30:8]=0x1c76 ; "v\x1c"
0x00001c76      682e000000     push 0x2e                               ; '.'
0x00001c7b      e900fdffff     jmp sym..plt
;-- imp.realloc:
0x00001c80      ff25b2d22000   jmp qword [reloc.realloc]               ; [0x20ef38:8]=0x1c86
0x00001c86      682f000000     push 0x2f                               ; '/'
0x00001c8b      e9f0fcffff     jmp sym..plt
;-- imp.setlocale:
0x00001c90      ff25aad22000   jmp qword [reloc.setlocale]             ; [0x20ef40:8]=0x1c96
0x00001c96      6830000000     push 0x30                               ; '0'
0x00001c9b      e9e0fcffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001ca0      ff25a2d22000   jmp qword [reloc.__printf_chk]          ; [0x20ef48:8]=0x1ca6
0x00001ca6      6831000000     push 0x31                               ; '1'
0x00001cab      e9d0fcffff     jmp sym..plt
;-- imp.mempcpy:
0x00001cb0      ff259ad22000   jmp qword [reloc.mempcpy]               ; [0x20ef50:8]=0x1cb6
0x00001cb6      6832000000     push 0x32                               ; '2'
0x00001cbb      e9c0fcffff     jmp sym..plt
;-- imp.memmove:
0x00001cc0      ff2592d22000   jmp qword [reloc.memmove]               ; [0x20ef58:8]=0x1cc6
0x00001cc6      6833000000     push 0x33                               ; '3'
0x00001ccb      e9b0fcffff     jmp sym..plt
;-- imp.error:
0x00001cd0      ff258ad22000   jmp qword [reloc.error]                 ; [0x20ef60:8]=0x1cd6
0x00001cd6      6834000000     push 0x34                               ; '4'
0x00001cdb      e9a0fcffff     jmp sym..plt
;-- imp.open:
0x00001ce0      ff2582d22000   jmp qword [reloc.open]                  ; [0x20ef68:8]=0x1ce6
0x00001ce6      6835000000     push 0x35                               ; '5'
0x00001ceb      e990fcffff     jmp sym..plt
;-- imp.fseeko:
0x00001cf0      ff257ad22000   jmp qword [reloc.fseeko]                ; [0x20ef70:8]=0x1cf6
0x00001cf6      6836000000     push 0x36                               ; '6'
0x00001cfb      e980fcffff     jmp sym..plt
;-- imp.dcngettext:
0x00001d00      ff2572d22000   jmp qword [reloc.dcngettext]            ; [0x20ef78:8]=0x1d06
0x00001d06      6837000000     push 0x37                               ; '7'
0x00001d0b      e970fcffff     jmp sym..plt
;-- imp.fdopendir:
0x00001d10      ff256ad22000   jmp qword [reloc.fdopendir]             ; [0x20ef80:8]=0x1d16
0x00001d16      6838000000     push 0x38                               ; '8'
0x00001d1b      e960fcffff     jmp sym..plt
;-- imp.fstatfs:
0x00001d20      ff2562d22000   jmp qword [reloc.fstatfs]               ; [0x20ef88:8]=0x1d26 ; "&\x1d"
0x00001d26      6839000000     push 0x39                               ; '9'
0x00001d2b      e950fcffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001d30      ff255ad22000   jmp qword [reloc.__cxa_atexit]          ; [0x20ef90:8]=0x1d36 ; "6\x1d"
0x00001d36      683a000000     push 0x3a                               ; ':'
0x00001d3b      e940fcffff     jmp sym..plt
;-- imp.exit:
0x00001d40      ff2552d22000   jmp qword [reloc.exit]                  ; [0x20ef98:8]=0x1d46 ; "F\x1d"
0x00001d46      683b000000     push 0x3b                               ; ';'
0x00001d4b      e930fcffff     jmp sym..plt
;-- imp.fwrite:
0x00001d50      ff254ad22000   jmp qword [reloc.fwrite]                ; [0x20efa0:8]=0x1d56 ; "V\x1d"
0x00001d56      683c000000     push 0x3c                               ; '<'
0x00001d5b      e920fcffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x00001d60      ff2542d22000   jmp qword [reloc.__fprintf_chk]         ; [0x20efa8:8]=0x1d66 ; "f\x1d"
0x00001d66      683d000000     push 0x3d                               ; '='
0x00001d6b      e910fcffff     jmp sym..plt
;-- imp.mbsinit:
0x00001d70      ff253ad22000   jmp qword [reloc.mbsinit]               ; [0x20efb0:8]=0x1d76 ; "v\x1d"
0x00001d76      683e000000     push 0x3e                               ; '>'
0x00001d7b      e900fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001d80      ff2532d22000   jmp qword [reloc.iswprint]              ; [0x20efb8:8]=0x1d86
0x00001d86      683f000000     push 0x3f                               ; '?'
0x00001d8b      e9f0fbffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001d90      ff252ad22000   jmp qword [reloc.__ctype_b_loc]         ; [0x20efc0:8]=0x1d96
0x00001d96      6840000000     push 0x40                               ; segment.PHDR
0x00001d9b      e9e0fbffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001da0      .qword 0x90660020d22225ff                              ; [13] -r-x section size 16 named .plt.got
0x00001da8      .qword 0x90660020d24225ff
;-- main:
;-- section..text:
;-- .text:
0x00001db0      4156           push r14                                ; [14] -r-x section size 35662 named .text
0x00001db2      4155           push r13
0x00001db4      4c8d2d358c00.  lea r13, str.no_preserve_root           ; 0xa9f0 ; "--no-preserve-root"
0x00001dbb      4154           push r12
0x00001dbd      55             push rbp
0x00001dbe      89fd           mov ebp, edi
0x00001dc0      53             push rbx
0x00001dc1      4889f3         mov rbx, rsi
0x00001dc4      41be01000000   mov r14d, 1
0x00001dca      4881ecc00000.  sub rsp, 0xc0
0x00001dd1      488b3e         mov rdi, qword [rsi]
0x00001dd4      64488b042528.  mov rax, qword fs:[0x28]
0x00001ddd      48898424b800.  mov qword [rsp + 0xb8], rax
0x00001de5      31c0           xor eax, eax
0x00001de7      e844230000     call sym.set_program_name
0x00001dec      488d35aea000.  lea rsi, [0x0000bea1]
0x00001df3      bf06000000     mov edi, 6
0x00001df8      e893feffff     call sym.imp.setlocale
0x00001dfd      488d35c68b00.  lea rsi, str.usr_local_share_locale     ; 0xa9ca ; "/usr/local/share/locale"
0x00001e04      488d3d968b00.  lea rdi, [0x0000a9a1]                   ; "coreutils"
0x00001e0b      e840fcffff     call sym.imp.bindtextdomain
0x00001e10      488d3d8a8b00.  lea rdi, [0x0000a9a1]                   ; "coreutils"
0x00001e17      e814fcffff     call sym.imp.textdomain
0x00001e1c      488d3d6d1e00.  lea rdi, sym.close_stdin                ; 0x3c90 ; "ATUSH\x8b\x1d\x15\xb4 "
0x00001e23      e8c88a0000     call sym.atexit
0x00001e28      31ff           xor edi, edi
0x00001e2a      c6042400       mov byte [rsp], 0
0x00001e2e      c74424040400.  mov dword [rsp + 4], 4
0x00001e36      c644240800     mov byte [rsp + 8], 0
0x00001e3b      c644240a00     mov byte [rsp + 0xa], 0
0x00001e40      c644240900     mov byte [rsp + 9], 0
0x00001e45      48c744241000.  mov qword [rsp + 0x10], 0
0x00001e4e      c644241800     mov byte [rsp + 0x18], 0
0x00001e53      e8a8fbffff     call sym.imp.isatty
0x00001e58      85c0           test eax, eax
0x00001e5a      c644241a00     mov byte [rsp + 0x1a], 0
0x00001e5f      c644241b00     mov byte [rsp + 0x1b], 0
0x00001e64      0f95442419     setne byte [rsp + 0x19]
0x00001e69      4531e4         xor r12d, r12d
0x00001e6c      0f1f4000       nop dword [rax]
0x00001e70      488d0d69cb20.  lea rcx, obj.long_opts                  ; 0x20e9e0
0x00001e77      488d15c58b00.  lea rdx, str.dfirvIR                    ; 0xaa43 ; "dfirvIR"
0x00001e7e      4531c0         xor r8d, r8d
0x00001e81      4889de         mov rsi, rbx
0x00001e84      89ef           mov edi, ebp
0x00001e86      e835fcffff     call sym.imp.getopt_long
0x00001e8b      83f8ff         cmp eax, 0xffffffff
0x00001e8e      0f842a020000   je 0x20be
0x00001e94      83f869         cmp eax, 0x69
0x00001e97      0f84d3000000   je 0x1f70
0x00001e9d      7e31           jle 0x1ed0
0x00001e9f      3d81000000     cmp eax, 0x81
0x00001ea4      0f84d6010000   je 0x2080
0x00001eaa      7e5c           jle 0x1f08
0x00001eac      3d83000000     cmp eax, 0x83
0x00001eb1      0f8489010000   je 0x2040
0x00001eb7      0f8c53010000   jl 0x2010
0x00001ebd      3d84000000     cmp eax, 0x84
0x00001ec2      0f85d7010000   jne 0x209f
0x00001ec8      c644241901     mov byte [rsp + 0x19], 1
0x00001ecd      eba1           jmp 0x1e70
0x00001ecf      90             nop
0x00001ed0      83f849         cmp eax, 0x49
0x00001ed3      0f84af000000   je 0x1f88
0x00001ed9      0f8ec1000000   jle 0x1fa0
0x00001edf      83f864         cmp eax, 0x64
0x00001ee2      0f84a8010000   je 0x2090
0x00001ee8      83f866         cmp eax, 0x66
0x00001eeb      0f85be010000   jne 0x20af
0x00001ef1      c74424040500.  mov dword [rsp + 4], 5
0x00001ef9      c6042401       mov byte [rsp], 1
0x00001efd      4531e4         xor r12d, r12d
0x00001f00      e96bffffff     jmp 0x1e70
0x00001f05      0f1f00         nop dword [rax]
0x00001f08      83f876         cmp eax, 0x76
0x00001f0b      0f84ef000000   je 0x2000
0x00001f11      3d80000000     cmp eax, 0x80
0x00001f16      0f857e010000   jne 0x209a
0x00001f1c      488b359dd120.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20f0c0:8]=0
0x00001f23      4885f6         test rsi, rsi
0x00001f26      7448           je 0x1f70
0x00001f28      4c8b0de9d020.  mov r9, qword [obj.argmatch_die]        ; [0x20f018:8]=0x38f0 sym.__argmatch_die
0x00001f2f      488d156aca20.  lea rdx, obj.interactive_args           ; 0x20e9a0
0x00001f36      488d0d139500.  lea rcx, obj.interactive_types          ; 0xb450
0x00001f3d      488d3d9e8a00.  lea rdi, str.interactive                ; 0xa9e2 ; "--interactive"
0x00001f44      41b804000000   mov r8d, 4
0x00001f4a      e8711c0000     call sym.__xargmatch_internal
0x00001f4f      488d15fa9400.  lea rdx, obj.interactive_types          ; 0xb450
0x00001f56      8b0482         mov eax, dword [rdx + rax*4]
0x00001f59      83f801         cmp eax, 1
0x00001f5c      742a           je 0x1f88
0x00001f5e      0f825f020000   jb 0x21c3
0x00001f64      83f802         cmp eax, 2
0x00001f67      0f8503ffffff   jne 0x1e70
0x00001f6d      0f1f00         nop dword [rax]
0x00001f70      c74424040300.  mov dword [rsp + 4], 3
0x00001f78      c6042400       mov byte [rsp], 0
0x00001f7c      4531e4         xor r12d, r12d
0x00001f7f      e9ecfeffff     jmp 0x1e70
0x00001f84      0f1f4000       nop dword [rax]
0x00001f88      c74424040400.  mov dword [rsp + 4], 4
0x00001f90      c6042400       mov byte [rsp], 0
0x00001f94      41bc01000000   mov r12d, 1
0x00001f9a      e9d1feffff     jmp 0x1e70
0x00001f9f      90             nop
0x00001fa0      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x00001fa5      0f8546030000   jne 0x22f1
0x00001fab      488d05708a00.  lea rax, str.Jim_Meyering               ; 0xaa22 ; "Jim Meyering"
0x00001fb2      4883ec08       sub rsp, 8
0x00001fb6      488b3debd020.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00001fbd      6a00           push 0
0x00001fbf      488b0d4ad020.  mov rcx, qword [obj.Version]            ; [0x20f010:8]=0xb833 str.8.31 ; "3\xb8"
0x00001fc6      4c8d0d3a8a00.  lea r9, str.David_MacKenzie             ; 0xaa07 ; "David MacKenzie"
0x00001fcd      50             push rax
0x00001fce      488d055a8a00.  lea rax, str.Richard_M._Stallman        ; 0xaa2f ; "Richard M. Stallman"
0x00001fd5      4c8d053b8a00.  lea r8, str.Paul_Rubin                  ; 0xaa17 ; "Paul Rubin"
0x00001fdc      488d15ba8900.  lea rdx, str.GNU_coreutils              ; 0xa99d ; "GNU coreutils"
0x00001fe3      488d353a8900.  lea rsi, [0x0000a924]                   ; "rm"
0x00001fea      50             push rax
0x00001feb      31c0           xor eax, eax
0x00001fed      e8ae430000     call sym.version_etc
0x00001ff2      4883c420       add rsp, 0x20
0x00001ff6      31ff           xor edi, edi
0x00001ff8      e843fdffff     call sym.imp.exit
0x00001ffd      0f1f00         nop dword [rax]
0x00002000      c644241a01     mov byte [rsp + 0x1a], 1
0x00002005      e966feffff     jmp 0x1e70
0x0000200a      660f1f440000   nop word [rax + rax]
0x00002010      486305a1d020.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f0b8:4]=0
0x00002017      b913000000     mov ecx, 0x13
0x0000201c      4c89ef         mov rdi, r13
0x0000201f      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002024      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002026      0f97c0         seta al
0x00002029      1c00           sbb al, 0
0x0000202b      84c0           test al, al
0x0000202d      0f8532030000   jne 0x2365
0x00002033      4531f6         xor r14d, r14d
0x00002036      e935feffff     jmp 0x1e70
0x0000203b      0f1f440000     nop dword [rax + rax]
0x00002040      4c8b3579d020.  mov r14, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20f0c0:8]=0
0x00002047      4d85f6         test r14, r14
0x0000204a      0f8435010000   je 0x2185
0x00002050      488d35ac8900.  lea rsi, [0x0000aa03]                   ; "all"
0x00002057      4c89f7         mov rdi, r14
0x0000205a      e851fbffff     call sym.imp.strcmp
0x0000205f      85c0           test eax, eax
0x00002061      0f85c7020000   jne 0x232e
0x00002067      c644241801     mov byte [rsp + 0x18], 1
0x0000206c      41be01000000   mov r14d, 1
0x00002072      e9f9fdffff     jmp 0x1e70
0x00002077      660f1f840000.  nop word [rax + rax]
0x00002080      c644240801     mov byte [rsp + 8], 1
0x00002085      e9e6fdffff     jmp 0x1e70
0x0000208a      660f1f440000   nop word [rax + rax]
0x00002090      c644240a01     mov byte [rsp + 0xa], 1
0x00002095      e9d6fdffff     jmp 0x1e70
0x0000209a      83f872         cmp eax, 0x72
0x0000209d      7415           je 0x20b4
0x0000209f      41bc01000000   mov r12d, 1
0x000020a5      4c8d742420     lea r14, [rsp + 0x20]
0x000020aa      e928010000     jmp 0x21d7
0x000020af      83f852         cmp eax, 0x52
0x000020b2      75eb           jne 0x209f
0x000020b4      c644240901     mov byte [rsp + 9], 1
0x000020b9      e9b2fdffff     jmp 0x1e70
0x000020be      392df4cf2000   cmp dword [obj.optind], ebp             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f0b8:4]=0
0x000020c4      0f8dc6000000   jge 0x2190
0x000020ca      807c240900     cmp byte [rsp + 9], 0
0x000020cf      7409           je 0x20da
0x000020d1      4584f6         test r14b, r14b
0x000020d4      0f85ba010000   jne 0x2294
0x000020da      486315d7cf20.  movsxd rdx, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20f0b8:4]=0
0x000020e1      4584e4         test r12b, r12b
0x000020e4      4c8d2cd3       lea r13, [rbx + rdx*8]
0x000020e8      7460           je 0x214a
0x000020ea      29d5           sub ebp, edx
0x000020ec      807c240900     cmp byte [rsp + 9], 0
0x000020f1      4863dd         movsxd rbx, ebp
0x000020f4      0f8570010000   jne 0x226a
0x000020fa      4883fb03       cmp rbx, 3
0x000020fe      764a           jbe 0x214a
0x00002100      488d15858900.  lea rdx, str.s:_remove__lu_arguments    ; 0xaa8c ; "%s: remove %lu arguments? "
0x00002107      488d35998900.  lea rsi, str.s:_remove__lu_argument     ; 0xaaa7 ; "%s: remove %lu argument? "
0x0000210e      41b805000000   mov r8d, 5
0x00002114      4889d9         mov rcx, rbx
0x00002117      31ff           xor edi, edi
0x00002119      488b2df8cf20.  mov rbp, qword [obj.program_name]       ; [0x20f118:8]=0
0x00002120      e8dbfbffff     call sym.imp.dcngettext
0x00002125      488b3db4cf20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x0000212c      4889c2         mov rdx, rax
0x0000212f      4989d8         mov r8, rbx
0x00002132      4889e9         mov rcx, rbp
0x00002135      be01000000     mov esi, 1
0x0000213a      31c0           xor eax, eax
0x0000213c      e81ffcffff     call sym.imp.__fprintf_chk
0x00002141      e80a470000     call sym.yesno
0x00002146      84c0           test al, al
0x00002148      7450           je 0x219a
0x0000214a      4889e6         mov rsi, rsp
0x0000214d      4c89ef         mov rdi, r13
0x00002150      e83b0f0000     call sym.rm
0x00002155      8d50fe         lea edx, [rax - 2]
0x00002158      83f804         cmp eax, 4
0x0000215b      0f94c0         sete al
0x0000215e      83fa02         cmp edx, 2
0x00002161      0fb6c0         movzx eax, al
0x00002164      7636           jbe 0x219c
0x00002166      488d0dd39200.  lea rcx, obj.__PRETTY_FUNCTION__.6977   ; 0xb440 ; "main"
0x0000216d      488d35e78800.  lea rsi, str..._coreutils_8.31_src_rm.c ; 0xaa5b ; "../coreutils-8.31/src/rm.c"
0x00002174      488d3dfb8800.  lea rdi, str.VALID_STATUS__status       ; 0xaa76 ; "VALID_STATUS (status)"
0x0000217b      ba73010000     mov edx, 0x173
0x00002180      e89bf9ffff     call sym.imp.__assert_fail
0x00002185      41be01000000   mov r14d, 1
0x0000218b      e9e0fcffff     jmp 0x1e70
0x00002190      803c2400       cmp byte [rsp], 0
0x00002194      0f846e010000   je 0x2308
0x0000219a      31c0           xor eax, eax
0x0000219c      488b9424b800.  mov rdx, qword [rsp + 0xb8]
0x000021a4      644833142528.  xor rdx, qword fs:[0x28]
0x000021ad      0f8550010000   jne 0x2303
0x000021b3      4881c4c00000.  add rsp, 0xc0
0x000021ba      5b             pop rbx
0x000021bb      5d             pop rbp
0x000021bc      415c           pop r12
0x000021be      415d           pop r13
0x000021c0      415e           pop r14
0x000021c2      c3             ret
0x000021c3      c74424040500.  mov dword [rsp + 4], 5
0x000021cb      4531e4         xor r12d, r12d
0x000021ce      e99dfcffff     jmp 0x1e70
0x000021d3      4983c401       add r12, 1
0x000021d7      4439e5         cmp ebp, r12d
0x000021da      0f8e80000000   jle 0x2260
0x000021e0      4e8b2ce3       mov r13, qword [rbx + r12*8]
0x000021e4      41807d002d     cmp byte [r13], 0x2d
0x000021e9      75e8           jne 0x21d3
0x000021eb      41807d0100     cmp byte [r13 + 1], 0
0x000021f0      74e1           je 0x21d3
0x000021f2      4c89f2         mov rdx, r14
0x000021f5      4c89ee         mov rsi, r13
0x000021f8      bf01000000     mov edi, 1
0x000021fd      e88ef8ffff     call sym.imp.__lxstat
0x00002202      85c0           test eax, eax
0x00002204      75cd           jne 0x21d3
0x00002206      4c89ee         mov rsi, r13
0x00002209      bf04000000     mov edi, 4
0x0000220e      e85d390000     call sym.quotearg_style
0x00002213      4c89ea         mov rdx, r13
0x00002216      be03000000     mov esi, 3
0x0000221b      bf01000000     mov edi, 1
0x00002220      4989c4         mov r12, rax
0x00002223      e828380000     call sym.quotearg_n_style
0x00002228      488d35719100.  lea rsi, str.Try___s_.__s__to_remove_the_file__s. ; 0xb3a0 ; "Try '%s ./%s' to remove the file %s.\n"
0x0000222f      488b1b         mov rbx, qword [rbx]
0x00002232      ba05000000     mov edx, 5
0x00002237      31ff           xor edi, edi
0x00002239      4889c5         mov rbp, rax
0x0000223c      e81ff8ffff     call sym.imp.dcgettext
0x00002241      488b3d98ce20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00002248      4889c2         mov rdx, rax
0x0000224b      4d89e1         mov r9, r12
0x0000224e      4989e8         mov r8, rbp
0x00002251      4889d9         mov rcx, rbx
0x00002254      be01000000     mov esi, 1
0x00002259      31c0           xor eax, eax
0x0000225b      e800fbffff     call sym.imp.__fprintf_chk
0x00002260      bf01000000     mov edi, 1
0x00002265      e836020000     call sym.usage
0x0000226a      488d15779100.  lea rdx, str.s:_remove__lu_arguments_recursively ; 0xb3e8 ; "%s: remove %lu arguments recursively? "
0x00002271      488d35989100.  lea rsi, str.s:_remove__lu_argument_recursively ; 0xb410 ; "%s: remove %lu argument recursively? "
0x00002278      41b805000000   mov r8d, 5
0x0000227e      4889d9         mov rcx, rbx
0x00002281      31ff           xor edi, edi
0x00002283      488b2d8ece20.  mov rbp, qword [obj.program_name]       ; [0x20f118:8]=0
0x0000228a      e871faffff     call sym.imp.dcngettext
0x0000228f      e991feffff     jmp 0x2125
0x00002294      488d3d55ce20.  lea rdi, obj.dev_ino_buf.6971           ; 0x20f0f0
0x0000229b      e8c03b0000     call sym.get_root_dev_ino
0x000022a0      4885c0         test rax, rax
0x000022a3      4889442410     mov qword [rsp + 0x10], rax
0x000022a8      0f852cfeffff   jne 0x20da
0x000022ae      488d35c19600.  lea rsi, [0x0000b976]                   ; "/"
0x000022b5      bf04000000     mov edi, 4
0x000022ba      e8b1380000     call sym.quotearg_style
0x000022bf      488d35029100.  lea rsi, str.failed_to_get_attributes_of__s ; 0xb3c8 ; "failed to get attributes of %s"
0x000022c6      ba05000000     mov edx, 5
0x000022cb      31ff           xor edi, edi
0x000022cd      4889c5         mov rbp, rax
0x000022d0      e88bf7ffff     call sym.imp.dcgettext
0x000022d5      4889c3         mov rbx, rax
0x000022d8      e8c3f6ffff     call sym.imp.__errno_location
0x000022dd      8b30           mov esi, dword [rax]
0x000022df      4889e9         mov rcx, rbp
0x000022e2      4889da         mov rdx, rbx
0x000022e5      bf01000000     mov edi, 1
0x000022ea      31c0           xor eax, eax
0x000022ec      e8dff9ffff     call sym.imp.error
0x000022f1      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x000022f6      0f85a3fdffff   jne 0x209f
0x000022fc      31ff           xor edi, edi
0x000022fe      e89d010000     call sym.usage
0x00002303      e8a8f7ffff     call sym.imp.__stack_chk_fail
0x00002308      488d353c8700.  lea rsi, str.missing_operand            ; 0xaa4b ; "missing operand"
0x0000230f      31ff           xor edi, edi
0x00002311      ba05000000     mov edx, 5
0x00002316      e845f7ffff     call sym.imp.dcgettext
0x0000231b      31f6           xor esi, esi
0x0000231d      4889c2         mov rdx, rax
0x00002320      31ff           xor edi, edi
0x00002322      31c0           xor eax, eax
0x00002324      e8a7f9ffff     call sym.imp.error
0x00002329      e932ffffff     jmp 0x2260
0x0000232e      4c89f6         mov rsi, r14
0x00002331      bf04000000     mov edi, 4
0x00002336      e835380000     call sym.quotearg_style
0x0000233b      488d352e9000.  lea rsi, str.unrecognized___preserve_root_argument:__s ; 0xb370 ; "unrecognized --preserve-root argument: %s"
0x00002342      4889c3         mov rbx, rax
0x00002345      ba05000000     mov edx, 5
0x0000234a      31ff           xor edi, edi
0x0000234c      e80ff7ffff     call sym.imp.dcgettext
0x00002351      4889d9         mov rcx, rbx
0x00002354      4889c2         mov rdx, rax
0x00002357      31f6           xor esi, esi
0x00002359      bf01000000     mov edi, 1
0x0000235e      31c0           xor eax, eax
0x00002360      e86bf9ffff     call sym.imp.error
0x00002365      488d35cc8f00.  lea rsi, str.you_may_not_abbreviate_the___no_preserve_root_option ; 0xb338 ; "you may not abbreviate the --no-preserve-root option"
0x0000236c      ba05000000     mov edx, 5
0x00002371      31ff           xor edi, edi
0x00002373      e8e8f6ffff     call sym.imp.dcgettext
0x00002378      31f6           xor esi, esi
0x0000237a      4889c2         mov rdx, rax
0x0000237d      bf01000000     mov edi, 1
0x00002382      31c0           xor eax, eax
0x00002384      e847f9ffff     call sym.imp.error
0x00002389      0f1f80000000.  nop dword [rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002390      31ed           xor ebp, ebp
0x00002392      4989d1         mov r9, rdx
0x00002395      5e             pop rsi
0x00002396      4889e2         mov rdx, rsp
0x00002399      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000239d      50             push rax
0x0000239e      54             push rsp
0x0000239f      4c8d053a8500.  lea r8, sym.__libc_csu_fini             ; 0xa8e0
0x000023a6      488d0dc38400.  lea rcx, sym.__libc_csu_init            ; 0xa870 ; "AWAVI\x89\xd7AUATL\x8d%\x0eA "
0x000023ad      488d3dfcf9ff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1db0 ; "AVAUL\x8d-5\x8c"
0x000023b4      ff151ecc2000   call qword [reloc.__libc_start_main]    ; [0x20efd8:8]=0
0x000023ba      f4             hlt
0x000023bb      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x000023c0      488d3dd9cc20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f0a0
0x000023c7      55             push rbp
0x000023c8      488d05d1cc20.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f0a0
0x000023cf      4839f8         cmp rax, rdi
0x000023d2      4889e5         mov rbp, rsp
0x000023d5      7419           je 0x23f0
0x000023d7      488b05f2cb20.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20efd0:8]=0
0x000023de      4885c0         test rax, rax
0x000023e1      740d           je 0x23f0
0x000023e3      5d             pop rbp
0x000023e4      ffe0           jmp rax
0x000023e6      662e0f1f8400.  nop word cs:[rax + rax]
0x000023f0      5d             pop rbp
0x000023f1      c3             ret
0x000023f2      0f1f4000       nop dword [rax]
0x000023f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00002400      488d3d99cc20.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f0a0
0x00002407      488d3592cc20.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20f0a0
0x0000240e      55             push rbp
0x0000240f      4829fe         sub rsi, rdi
0x00002412      4889e5         mov rbp, rsp
0x00002415      48c1fe03       sar rsi, 3
0x00002419      4889f0         mov rax, rsi
0x0000241c      48c1e83f       shr rax, 0x3f
0x00002420      4801c6         add rsi, rax
0x00002423      48d1fe         sar rsi, 1
0x00002426      7418           je 0x2440
0x00002428      488b05b9cb20.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20efe8:8]=0
0x0000242f      4885c0         test rax, rax
0x00002432      740c           je 0x2440
0x00002434      5d             pop rbp
0x00002435      ffe0           jmp rax
0x00002437      660f1f840000.  nop word [rax + rax]
0x00002440      5d             pop rbp
0x00002441      c3             ret
0x00002442      0f1f4000       nop dword [rax]
0x00002446      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002450      803d91cc2000.  cmp byte [obj.completed.7697], 0        ; [0x20f0e8:1]=0
0x00002457      752f           jne 0x2488
0x00002459      48833d8fcb20.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20eff0:8]=0
0x00002461      55             push rbp
0x00002462      4889e5         mov rbp, rsp
0x00002465      740c           je 0x2473
0x00002467      488b3d9acb20.  mov rdi, qword [obj.__dso_handle]       ; [0x20f008:8]=0x20f008 obj.__dso_handle
0x0000246e      e835f9ffff     call 0x1da8
0x00002473      e848ffffff     call sym.deregister_tm_clones
0x00002478      c60569cc2000.  mov byte [obj.completed.7697], 1        ; [0x20f0e8:1]=0
0x0000247f      5d             pop rbp
0x00002480      c3             ret
0x00002481      0f1f80000000.  nop dword [rax]
0x00002488      f3c3           ret
0x0000248a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002490      55             push rbp
0x00002491      4889e5         mov rbp, rsp
0x00002494      5d             pop rbp
0x00002495      e966ffffff     jmp sym.register_tm_clones
0x0000249a      660f1f440000   nop word [rax + rax]
;-- usage:
0x000024a0      4155           push r13
0x000024a2      4154           push r12
0x000024a4      ba05000000     mov edx, 5
0x000024a9      55             push rbp
0x000024aa      53             push rbx
0x000024ab      89fd           mov ebp, edi
0x000024ad      4881ec880000.  sub rsp, 0x88
0x000024b4      488b1d5dcc20.  mov rbx, qword [obj.program_name]       ; [0x20f118:8]=0
0x000024bb      64488b042528.  mov rax, qword fs:[0x28]
0x000024c4      4889442478     mov qword [rsp + 0x78], rax
0x000024c9      31c0           xor eax, eax
0x000024cb      85ff           test edi, edi
0x000024cd      742e           je 0x24fd
0x000024cf      488d35528600.  lea rsi, str.Try___s___help__for_more_information. ; 0xab28 ; "Try '%s --help' for more information.\n"
0x000024d6      31ff           xor edi, edi
0x000024d8      e883f5ffff     call sym.imp.dcgettext
0x000024dd      488b3dfccb20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x000024e4      4889c2         mov rdx, rax
0x000024e7      4889d9         mov rcx, rbx
0x000024ea      be01000000     mov esi, 1
0x000024ef      31c0           xor eax, eax
0x000024f1      e86af8ffff     call sym.imp.__fprintf_chk
0x000024f6      89ef           mov edi, ebp
0x000024f8      e843f8ffff     call sym.imp.exit
0x000024fd      488d354c8600.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0xab50 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00002504      31ff           xor edi, edi
0x00002506      e855f5ffff     call sym.imp.dcgettext
0x0000250b      4889da         mov rdx, rbx
0x0000250e      4889c6         mov rsi, rax
0x00002511      bf01000000     mov edi, 1
0x00002516      31c0           xor eax, eax
0x00002518      e883f7ffff     call sym.imp.__printf_chk
0x0000251d      488b1d84cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00002524      488d354d8600.  lea rsi, str.Remove__unlink__the_FILE_s_._______f____force___________ignore_nonexistent_files_and_arguments__never_prompt_____i____________________prompt_before_every_removal ; 0xab78 ; "Remove (unlink) the FILE(s).\n\n  -f, --force           ignore nonexistent files and arguments, never prompt\n  -i                    prompt before every removal\n"
0x0000252b      ba05000000     mov edx, 5
0x00002530      31ff           xor edi, edi
0x00002532      e829f5ffff     call sym.imp.dcgettext
0x00002537      4889de         mov rsi, rbx
0x0000253a      4889c7         mov rdi, rax
0x0000253d      e83ef6ffff     call sym.imp.fputs_unlocked
0x00002542      488b1d5fcb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00002549      488d35c88600.  lea rsi, str.I____________________prompt_once_before_removing_more_than_three_files__or____________________________when_removing_recursively__less_intrusive_than__i_____________________________while_still_giving_protection_against_most_mistakes__________interactive__WHEN___prompt_according_to_WHEN:_never__once___I___or____________________________always___i___without_WHEN__prompt_always ; 0xac18 ; "  -I                    prompt once before removing more than three files, or\n                          when removing recursively; less intrusive than -i,\n                          while still giving protection against most mistakes\n      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\n                          always (-i); without WHEN, prompt always\n"
0x00002550      ba05000000     mov edx, 5
0x00002555      31ff           xor edi, edi
0x00002557      e804f5ffff     call sym.imp.dcgettext
0x0000255c      4889de         mov rsi, rbx
0x0000255f      4889c7         mov rdi, rax
0x00002562      e819f6ffff     call sym.imp.fputs_unlocked
0x00002567      488b1d3acb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x0000256e      488d351b8800.  lea rsi, str.one_file_system__when_removing_a_hierarchy_recursively__skip_any____________________________directory_that_is_on_a_file_system_different_from____________________________that_of_the_corresponding_command_line_argument ; 0xad90 ; "      --one-file-system  when removing a hierarchy recursively, skip any\n                          directory that is on a file system different from\n                          that of the corresponding command line argument\n"
0x00002575      ba05000000     mov edx, 5
0x0000257a      31ff           xor edi, edi
0x0000257c      e8dff4ffff     call sym.imp.dcgettext
0x00002581      4889de         mov rsi, rbx
0x00002584      4889c7         mov rdi, rax
0x00002587      e8f4f5ffff     call sym.imp.fputs_unlocked
0x0000258c      488b1d15cb20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00002593      488d35d68800.  lea rsi, str.no_preserve_root__do_not_treat_____specially__________preserve_root__all___do_not_remove______default__________________________________with__all___reject_any_command_line_argument________________________________on_a_separate_device_from_its_parent ; 0xae70 ; "      --no-preserve-root  do not treat '/' specially\n      --preserve-root[=all]  do not remove '/' (default);\n                              with 'all', reject any command line argument\n                              on a separate device from its parent\n"
0x0000259a      ba05000000     mov edx, 5
0x0000259f      31ff           xor edi, edi
0x000025a1      e8baf4ffff     call sym.imp.dcgettext
0x000025a6      4889de         mov rsi, rbx
0x000025a9      4889c7         mov rdi, rax
0x000025ac      e8cff5ffff     call sym.imp.fputs_unlocked
0x000025b1      488b1df0ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x000025b8      488d35b18900.  lea rsi, str.r___R____recursive___remove_directories_and_their_contents_recursively_____d____dir_____________remove_empty_directories_____v____verbose_________explain_what_is_being_done ; 0xaf70 ; "  -r, -R, --recursive   remove directories and their contents recursively\n  -d, --dir             remove empty directories\n  -v, --verbose         explain what is being done\n"
0x000025bf      ba05000000     mov edx, 5
0x000025c4      31ff           xor edi, edi
0x000025c6      e895f4ffff     call sym.imp.dcgettext
0x000025cb      4889de         mov rsi, rbx
0x000025ce      4889c7         mov rdi, rax
0x000025d1      e8aaf5ffff     call sym.imp.fputs_unlocked
0x000025d6      488b1dcbca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x000025dd      488d353c8a00.  lea rsi, str.help_____display_this_help_and_exit ; 0xb020 ; "      --help     display this help and exit\n"
0x000025e4      ba05000000     mov edx, 5
0x000025e9      31ff           xor edi, edi
0x000025eb      e870f4ffff     call sym.imp.dcgettext
0x000025f0      4889de         mov rsi, rbx
0x000025f3      4889c7         mov rdi, rax
0x000025f6      e885f5ffff     call sym.imp.fputs_unlocked
0x000025fb      488b1da6ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00002602      488d35478a00.  lea rsi, str.version__output_version_information_and_exit ; 0xb050 ; "      --version  output version information and exit\n"
0x00002609      ba05000000     mov edx, 5
0x0000260e      31ff           xor edi, edi
0x00002610      e84bf4ffff     call sym.imp.dcgettext
0x00002615      4889de         mov rsi, rbx
0x00002618      4889c7         mov rdi, rax
0x0000261b      e860f5ffff     call sym.imp.fputs_unlocked
0x00002620      488b1d81ca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00002627      488d355a8a00.  lea rsi, str.By_default__rm_does_not_remove_directories.__Use_the___recursive___r_or__R___option_to_remove_each_listed_directory__too__along_with_all_of_its_contents. ; 0xb088 ; "\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\noption to remove each listed directory, too, along with all of its contents.\n"
0x0000262e      ba05000000     mov edx, 5
0x00002633      31ff           xor edi, edi
0x00002635      e826f4ffff     call sym.imp.dcgettext
0x0000263a      4889de         mov rsi, rbx
0x0000263d      4889c7         mov rdi, rax
0x00002640      e83bf5ffff     call sym.imp.fputs_unlocked
0x00002645      488b1dccca20.  mov rbx, qword [obj.program_name]       ; [0x20f118:8]=0
0x0000264c      488d35d58a00.  lea rsi, str.To_remove_a_file_whose_name_starts_with_a______for_example___foo____use_one_of_these_commands:_____s_____foo_______s_.__foo ; 0xb128 ; "\nTo remove a file whose name starts with a '-', for example '-foo',\nuse one of these commands:\n  %s -- -foo\n\n  %s ./-foo\n"
0x00002653      31ff           xor edi, edi
0x00002655      ba05000000     mov edx, 5
0x0000265a      e801f4ffff     call sym.imp.dcgettext
0x0000265f      4889d9         mov rcx, rbx
0x00002662      4889da         mov rdx, rbx
0x00002665      4889c6         mov rsi, rax
0x00002668      bf01000000     mov edi, 1
0x0000266d      31c0           xor eax, eax
0x0000266f      e82cf6ffff     call sym.imp.__printf_chk
0x00002674      488b1d2dca20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x0000267b      488d35268b00.  lea rsi, str.Note_that_if_you_use_rm_to_remove_a_file__it_might_be_possible_to_recover__some_of_its_contents__given_sufficient_expertise_and_or_time.__For_greater__assurance_that_the_contents_are_truly_unrecoverable__consider_using_shred. ; 0xb1a8 ; "\nNote that if you use rm to remove a file, it might be possible to recover\nsome of its contents, given sufficient expertise and/or time.  For greater\nassurance that the contents are truly unrecoverable, consider using shred.\n"
0x00002682      ba05000000     mov edx, 5
0x00002687      31ff           xor edi, edi
0x00002689      e8d2f3ffff     call sym.imp.dcgettext
0x0000268e      4889de         mov rsi, rbx
0x00002691      4889c7         mov rdi, rax
0x00002694      488d1d898200.  lea rbx, [0x0000a924]                   ; "rm"
0x0000269b      e8e0f4ffff     call sym.imp.fputs_unlocked
0x000026a0      488d05808200.  lea rax, [0x0000a927]                   ; "["
0x000026a7      488d0dba8200.  lea rcx, str.sha256sum                  ; 0xa968 ; "sha256sum"
0x000026ae      48c744246000.  mov qword [rsp + 0x60], 0
0x000026b7      48c744246800.  mov qword [rsp + 0x68], 0
0x000026c0      4889e2         mov rdx, rsp
0x000026c3      48890424       mov qword [rsp], rax
0x000026c7      488d055b8200.  lea rax, [0x0000a929]                   ; "test invocation"
0x000026ce      48894c2430     mov qword [rsp + 0x30], rcx
0x000026d3      488d0d988200.  lea rcx, str.sha384sum                  ; 0xa972 ; "sha384sum"
0x000026da      4889442408     mov qword [rsp + 8], rax
0x000026df      488d05bb8200.  lea rax, [0x0000a9a1]                   ; "coreutils"
0x000026e6      48894c2440     mov qword [rsp + 0x40], rcx
0x000026eb      488d0d8a8200.  lea rcx, str.sha512sum                  ; 0xa97c ; "sha512sum"
0x000026f2      4889442410     mov qword [rsp + 0x10], rax
0x000026f7      488d053b8200.  lea rax, [0x0000a939]                   ; "Multi-call invocation"
0x000026fe      48894c2450     mov qword [rsp + 0x50], rcx
0x00002703      4889442418     mov qword [rsp + 0x18], rax
0x00002708      488d05408200.  lea rax, str.sha224sum                  ; 0xa94f ; "sha224sum"
0x0000270f      4889442420     mov qword [rsp + 0x20], rax
0x00002714      488d053e8200.  lea rax, str.sha2_utilities             ; 0xa959 ; "sha2 utilities"
0x0000271b      4889442428     mov qword [rsp + 0x28], rax
0x00002720      4889442438     mov qword [rsp + 0x38], rax
0x00002725      4889442448     mov qword [rsp + 0x48], rax
0x0000272a      4889442458     mov qword [rsp + 0x58], rax
0x0000272f      90             nop
0x00002730      4883c210       add rdx, 0x10
0x00002734      488b3a         mov rdi, qword [rdx]
0x00002737      4885ff         test rdi, rdi
0x0000273a      7413           je 0x274f
0x0000273c      b903000000     mov ecx, 3
0x00002741      4889de         mov rsi, rbx
0x00002744      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002746      0f97c0         seta al
0x00002749      1c00           sbb al, 0
0x0000274b      84c0           test al, al
0x0000274d      75e1           jne 0x2730
0x0000274f      4c8b6208       mov r12, qword [rdx + 8]
0x00002753      31ff           xor edi, edi
0x00002755      ba05000000     mov edx, 5
0x0000275a      488d35258200.  lea rsi, str.s_online_help:___s         ; 0xa986 ; "\n%s online help: <%s>\n"
0x00002761      4d85e4         test r12, r12
0x00002764      0f84c1000000   je 0x282b
0x0000276a      e8f1f2ffff     call sym.imp.dcgettext
0x0000276f      488d0d1a8b00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb290 ; "https://www.gnu.org/software/coreutils/"
0x00002776      488d15208200.  lea rdx, str.GNU_coreutils              ; 0xa99d ; "GNU coreutils"
0x0000277d      4889c6         mov rsi, rax
0x00002780      bf01000000     mov edi, 1
0x00002785      31c0           xor eax, eax
0x00002787      e814f5ffff     call sym.imp.__printf_chk
0x0000278c      31f6           xor esi, esi
0x0000278e      bf05000000     mov edi, 5
0x00002793      e8f8f4ffff     call sym.imp.setlocale
0x00002798      4885c0         test rax, rax
0x0000279b      741c           je 0x27b9
0x0000279d      488d35078200.  lea rsi, [0x0000a9ab]                   ; "en_"
0x000027a4      ba03000000     mov edx, 3
0x000027a9      4889c7         mov rdi, rax
0x000027ac      e8fff1ffff     call sym.imp.strncmp
0x000027b1      85c0           test eax, eax
0x000027b3      0f8507010000   jne 0x28c0
0x000027b9      488d35ef8100.  lea rsi, str.Full_documentation___s_s   ; 0xa9af ; "Full documentation <%s%s>\n"
0x000027c0      31ff           xor edi, edi
0x000027c2      ba05000000     mov edx, 5
0x000027c7      e894f2ffff     call sym.imp.dcgettext
0x000027cc      488d0d518100.  lea rcx, [0x0000a924]                   ; "rm"
0x000027d3      488d15b68a00.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xb290 ; "https://www.gnu.org/software/coreutils/"
0x000027da      4889c6         mov rsi, rax
0x000027dd      bf01000000     mov edi, 1
0x000027e2      31c0           xor eax, eax
0x000027e4      e8b7f4ffff     call sym.imp.__printf_chk
0x000027e9      4939dc         cmp r12, rbx
0x000027ec      488d0d508100.  lea rcx, [0x0000a943]                   ; " invocation"
0x000027f3      488d1da79600.  lea rbx, [0x0000bea1]
0x000027fa      480f44d9       cmove rbx, rcx
0x000027fe      488d35fb8a00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0xb300 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00002805      31ff           xor edi, edi
0x00002807      ba05000000     mov edx, 5
0x0000280c      e84ff2ffff     call sym.imp.dcgettext
0x00002811      4889d9         mov rcx, rbx
0x00002814      4889c6         mov rsi, rax
0x00002817      4c89e2         mov rdx, r12
0x0000281a      bf01000000     mov edi, 1
0x0000281f      31c0           xor eax, eax
0x00002821      e87af4ffff     call sym.imp.__printf_chk
0x00002826      e9cbfcffff     jmp 0x24f6
0x0000282b      e830f2ffff     call sym.imp.dcgettext
0x00002830      488d0d598a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb290 ; "https://www.gnu.org/software/coreutils/"
0x00002837      488d155f8100.  lea rdx, str.GNU_coreutils              ; 0xa99d ; "GNU coreutils"
0x0000283e      4889c6         mov rsi, rax
0x00002841      bf01000000     mov edi, 1
0x00002846      31c0           xor eax, eax
0x00002848      e853f4ffff     call sym.imp.__printf_chk
0x0000284d      31f6           xor esi, esi
0x0000284f      bf05000000     mov edi, 5
0x00002854      e837f4ffff     call sym.imp.setlocale
0x00002859      4885c0         test rax, rax
0x0000285c      7418           je 0x2876
0x0000285e      488d35468100.  lea rsi, [0x0000a9ab]                   ; "en_"
0x00002865      ba03000000     mov edx, 3
0x0000286a      4889c7         mov rdi, rax
0x0000286d      e83ef1ffff     call sym.imp.strncmp
0x00002872      85c0           test eax, eax
0x00002874      7543           jne 0x28b9
0x00002876      488d35328100.  lea rsi, str.Full_documentation___s_s   ; 0xa9af ; "Full documentation <%s%s>\n"
0x0000287d      ba05000000     mov edx, 5
0x00002882      31ff           xor edi, edi
0x00002884      4c8d25998000.  lea r12, [0x0000a924]                   ; "rm"
0x0000288b      488d1db18000.  lea rbx, [0x0000a943]                   ; " invocation"
0x00002892      e8c9f1ffff     call sym.imp.dcgettext
0x00002897      488d0d868000.  lea rcx, [0x0000a924]                   ; "rm"
0x0000289e      488d15eb8900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0xb290 ; "https://www.gnu.org/software/coreutils/"
0x000028a5      4889c6         mov rsi, rax
0x000028a8      bf01000000     mov edi, 1
0x000028ad      31c0           xor eax, eax
0x000028af      e8ecf3ffff     call sym.imp.__printf_chk
0x000028b4      e945ffffff     jmp 0x27fe
0x000028b9      4c8d25648000.  lea r12, [0x0000a924]                   ; "rm"
0x000028c0      4c8b2de1c720.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x000028c7      488d35ea8900.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0xb2b8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x000028ce      31ff           xor edi, edi
0x000028d0      ba05000000     mov edx, 5
0x000028d5      e886f1ffff     call sym.imp.dcgettext
0x000028da      4c89ee         mov rsi, r13
0x000028dd      4889c7         mov rdi, rax
0x000028e0      e89bf2ffff     call sym.imp.fputs_unlocked
0x000028e5      e9cffeffff     jmp 0x27b9
0x000028ea      660f1f440000   nop word [rax + rax]
;-- excise:
0x000028f0      4155           push r13                                ; /src:368
0x000028f2      4154           push r12
0x000028f4      4989d5         mov r13, rdx
0x000028f7      55             push rbp
0x000028f8      53             push rbx
0x000028f9      31d2           xor edx, edx                            ; /src:369
0x000028fb      4989fc         mov r12, rdi                            ; /src:368
0x000028fe      4889f3         mov rbx, rsi
0x00002901      89cd           mov ebp, ecx
0x00002903      4881eca80000.  sub rsp, 0xa8
0x0000290a      488b7630       mov rsi, qword [rsi + 0x30]             ; /src:370
0x0000290e      8b7f2c         mov edi, dword [rdi + 0x2c]
0x00002911      64488b042528.  mov rax, qword fs:[0x28]                ; /src:368
0x0000291a      488984249800.  mov qword [rsp + 0x98], rax
0x00002922      31c0           xor eax, eax
0x00002924      84c9           test cl, cl                             ; /src:369
0x00002926      0f95c2         setne dl
0x00002929      c1e209         shl edx, 9
0x0000292c      e8aff0ffff     call sym.imp.unlinkat                   ; /src:370
0x00002931      85c0           test eax, eax
0x00002933      753b           jne 0x2970
0x00002935      41807d1a00     cmp byte [r13 + 0x1a], 0                ; /src:372
0x0000293a      b802000000     mov eax, 2                              ; /src:378
0x0000293f      0f85e3000000   jne 0x2a28                              ; /src:372
0x00002945      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; /src:409
0x0000294d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002956      0f85dc010000   jne 0x2b38
0x0000295c      4881c4a80000.  add rsp, 0xa8
0x00002963      5b             pop rbx
0x00002964      5d             pop rbp
0x00002965      415c           pop r12
0x00002967      415d           pop r13
0x00002969      c3             ret
0x0000296a      660f1f440000   nop word [rax + rax]
0x00002970      e82bf0ffff     call sym.imp.__errno_location           ; /src:385
0x00002975      8b10           mov edx, dword [rax]
0x00002977      4889c5         mov rbp, rax
0x0000297a      83fa1e         cmp edx, 0x1e
0x0000297d      0f84f5000000   je 0x2a78
0x00002983      41807d0000     cmp byte [r13], 0                       ; /src:336
0x00002988      7426           je 0x29b0
0x0000298a      83fa14         cmp edx, 0x14                           ; /src:320
0x0000298d      0f8466010000   je 0x2af9
0x00002993      0f8e57010000   jle 0x2af0
0x00002999      83fa16         cmp edx, 0x16
0x0000299c      0f8457010000   je 0x2af9
0x000029a2      83fa54         cmp edx, 0x54
0x000029a5      0f844e010000   je 0x2af9
0x000029ab      0f1f440000     nop dword [rax + rax]
0x000029b0      66837b7004     cmp word [rbx + 0x70], 4
0x000029b5      0f84f5000000   je 0x2ab0
0x000029bb      488b7338       mov rsi, qword [rbx + 0x38]
0x000029bf      bf04000000     mov edi, 4
0x000029c4      e8a7310000     call sym.quotearg_style
0x000029c9      488d35ba8a00.  lea rsi, str.cannot_remove__s           ; 0xb48a ; "cannot remove %s"
0x000029d0      31ff           xor edi, edi
0x000029d2      ba05000000     mov edx, 5
0x000029d7      4989c4         mov r12, rax
0x000029da      e881f0ffff     call sym.imp.dcgettext                  ; /src:231
0x000029df      8b7500         mov esi, dword [rbp]
0x000029e2      4889c2         mov rdx, rax                            ; /src:227
0x000029e5      31ff           xor edi, edi
0x000029e7      31c0           xor eax, eax
0x000029e9      4c89e1         mov rcx, r12
0x000029ec      e8dff2ffff     call sym.imp.error
0x000029f1      488b4308       mov rax, qword [rbx + 8]
0x000029f5      4883785800     cmp qword [rax + 0x58], 0
0x000029fa      7917           jns 0x2a13
0x000029fc      eb1c           jmp 0x2a1a
0x000029fe      6690           nop
0x00002a00      48c740200100.  mov qword [rax + 0x20], 1
0x00002a08      488b4008       mov rax, qword [rax + 8]
0x00002a0c      4883785800     cmp qword [rax + 0x58], 0
0x00002a11      7807           js 0x2a1a
0x00002a13      4883782000     cmp qword [rax + 0x20], 0
0x00002a18      74e6           je 0x2a00
0x00002a1a      b804000000     mov eax, 4
0x00002a1f      e921ffffff     jmp 0x2945
0x00002a24      0f1f4000       nop dword [rax]
0x00002a28      488b7338       mov rsi, qword [rbx + 0x38]
0x00002a2c      bf04000000     mov edi, 4
0x00002a31      e83a310000     call sym.quotearg_style
0x00002a36      4084ed         test bpl, bpl
0x00002a39      4889c3         mov rbx, rax
0x00002a3c      ba05000000     mov edx, 5
0x00002a41      0f84c1000000   je 0x2b08                               ; /src:250
0x00002a47      488d351a8a00.  lea rsi, str.removed_directory__s       ; 0xb468 ; "removed directory %s\n"
0x00002a4e      31ff           xor edi, edi
0x00002a50      e80bf0ffff     call sym.imp.dcgettext
0x00002a55      4889c6         mov rsi, rax
0x00002a58      4889da         mov rdx, rbx
0x00002a5b      bf01000000     mov edi, 1
0x00002a60      31c0           xor eax, eax
0x00002a62      e839f2ffff     call sym.imp.__printf_chk
0x00002a67      b802000000     mov eax, 2
0x00002a6c      e9d4feffff     jmp 0x2945
0x00002a71      0f1f80000000.  nop dword [rax]
0x00002a78      488b5330       mov rdx, qword [rbx + 0x30]
0x00002a7c      418b74242c     mov esi, dword [r12 + 0x2c]
0x00002a81      4889e1         mov rcx, rsp
0x00002a84      41b800010000   mov r8d, 0x100
0x00002a8a      bf01000000     mov edi, 1
0x00002a8f      e84cf0ffff     call sym.imp.__fxstatat
0x00002a94      85c0           test eax, eax
0x00002a96      7408           je 0x2aa0                               ; /src:148
0x00002a98      8b5500         mov edx, dword [rbp]
0x00002a9b      83fa02         cmp edx, 2
0x00002a9e      747b           je 0x2b1b
0x00002aa0      c745001e0000.  mov dword [rbp], 0x1e
0x00002aa7      e90fffffff     jmp 0x29bb                              ; /src:149
0x00002aac      0f1f4000       nop dword [rax]
0x00002ab0      83fa27         cmp edx, 0x27
0x00002ab3      0f8702ffffff   ja 0x29bb
0x00002ab9      48b800003200.  movabs rax, 0x8000320000                ; /src:64
0x00002ac3      480fa3d0       bt rax, rdx
0x00002ac7      0f83eefeffff   jae 0x29bb
0x00002acd      8b4340         mov eax, dword [rbx + 0x40]
0x00002ad0      83f801         cmp eax, 1
0x00002ad3      7409           je 0x2ade
0x00002ad5      83f80d         cmp eax, 0xd                            ; /src:16
0x00002ad8      0f85ddfeffff   jne 0x29bb
0x00002ade      894500         mov dword [rbp], eax
0x00002ae1      e9d5feffff     jmp 0x29bb
0x00002ae6      662e0f1f8400.  nop word cs:[rax + rax]
0x00002af0      83fa02         cmp edx, 2
0x00002af3      0f85b7feffff   jne 0x29b0
0x00002af9      b802000000     mov eax, 2
0x00002afe      e942feffff     jmp 0x2945
0x00002b03      0f1f440000     nop dword [rax + rax]
0x00002b08      488d356f8900.  lea rsi, str.removed__s                 ; /src:-417 ; 0xb47e ; "removed %s\n"
0x00002b0f      31ff           xor edi, edi                            ; /src:-413
0x00002b11      e84aefffff     call sym.imp.dcgettext
0x00002b16      e93affffff     jmp 0x2a55
0x00002b1b      41807d0000     cmp byte [r13], 0
0x00002b20      b802000000     mov eax, 2
0x00002b25      0f851afeffff   jne 0x2945
0x00002b2b      66837b7004     cmp word [rbx + 0x70], 4
0x00002b30      0f8585feffff   jne 0x29bb
0x00002b36      eb81           jmp 0x2ab9                              ; /src:-420
0x00002b38      e873efffff     call sym.imp.__stack_chk_fail
0x00002b3d      0f1f00         nop dword [rax]
;-- cache_fstatat.constprop.3:
0x00002b40      53             push rbx
0x00002b41      488b4230       mov rax, qword [rdx + 0x30]
0x00002b45      4889d3         mov rbx, rdx
0x00002b48      4883f8ff       cmp rax, 0xffffffffffffffff
0x00002b4c      7412           je 0x2b60
0x00002b4e      4885c0         test rax, rax
0x00002b51      7853           js 0x2ba6                               ; /src:-413
0x00002b53      31c0           xor eax, eax
0x00002b55      5b             pop rbx
0x00002b56      c3             ret
0x00002b57      660f1f840000.  nop word [rax + rax]
0x00002b60      4889d1         mov rcx, rdx
0x00002b63      41b800010000   mov r8d, 0x100
0x00002b69      4889f2         mov rdx, rsi
0x00002b6c      89fe           mov esi, edi
0x00002b6e      bf01000000     mov edi, 1
0x00002b73      e868efffff     call sym.imp.__fxstatat
0x00002b78      85c0           test eax, eax
0x00002b7a      7424           je 0x2ba0
0x00002b7c      48c74330feff.  mov qword [rbx + 0x30], 0xfffffffffffffffe
0x00002b84      e817eeffff     call sym.imp.__errno_location
0x00002b89      486310         movsxd rdx, dword [rax]                 ; /src:-443
0x00002b8c      48895308       mov qword [rbx + 8], rdx
0x00002b90      8910           mov dword [rax], edx
0x00002b92      b8ffffffff     mov eax, 0xffffffff                     ; /src:-441 ; -1
0x00002b97      5b             pop rbx                                 ; /src:-439
0x00002b98      c3             ret
0x00002b99      0f1f80000000.  nop dword [rax]
0x00002ba0      488b4330       mov rax, qword [rbx + 0x30]
0x00002ba4      eba8           jmp 0x2b4e
0x00002ba6      e8f5edffff     call sym.imp.__errno_location
0x00002bab      488b5308       mov rdx, qword [rbx + 8]
0x00002baf      ebdf           jmp 0x2b90
0x00002bb1      0f1f440000     nop dword [rax + rax]
0x00002bb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- prompt:
0x00002bc0      4157           push r15
0x00002bc2      4156           push r14
0x00002bc4      4155           push r13                                ; stat.h:-383
0x00002bc6      4154           push r12
0x00002bc8      4989cd         mov r13, rcx                            ; stat.h:-380
0x00002bcb      55             push rbp
0x00002bcc      53             push rbx
0x00002bcd      4889f3         mov rbx, rsi
0x00002bd0      4881ecc80000.  sub rsp, 0xc8
0x00002bd7      8b7f2c         mov edi, dword [rdi + 0x2c]
0x00002bda      4c8b7e30       mov r15, qword [rsi + 0x30]
0x00002bde      64488b042528.  mov rax, qword fs:[0x28]
0x00002be7      48898424b800.  mov qword [rsp + 0xb8], rax
0x00002bef      31c0           xor eax, eax
0x00002bf1      488b4638       mov rax, qword [rsi + 0x38]
0x00002bf5      4d85c9         test r9, r9
0x00002bf8      4489442414     mov dword [rsp + 0x14], r8d
0x00002bfd      897c2410       mov dword [rsp + 0x10], edi
0x00002c01      4889442408     mov qword [rsp + 8], rax
0x00002c06      0f84e4010000   je 0x2df0
0x00002c0c      31ed           xor ebp, ebp                            ; stat.h:-415
0x00002c0e      84d2           test dl, dl
0x00002c10      41c701020000.  mov dword [r9], 2
0x00002c17      400f95c5       setne bpl
0x00002c1b      ba00090300     mov edx, 0x30900
0x00002c20      31c0           xor eax, eax                            ; stat.h:-399
0x00002c22      4c89fe         mov rsi, r15
0x00002c25      4d89cc         mov r12, r9
0x00002c28      48c7442450ff.  mov qword [rsp + 0x50], 0xffffffffffffffff ; stat.h:-370
0x00002c31      c1e502         shl ebp, 2
0x00002c34      e867eeffff     call sym.imp.openat
0x00002c39      85c0           test eax, eax
0x00002c3b      7868           js 0x2ca5
0x00002c3d      89c7           mov edi, eax
0x00002c3f      89442418       mov dword [rsp + 0x18], eax
0x00002c43      e8c8f0ffff     call sym.imp.fdopendir
0x00002c48      4885c0         test rax, rax
0x00002c4b      4989c6         mov r14, rax
0x00002c4e      8b542418       mov edx, dword [rsp + 0x18]
0x00002c52      0f8458020000   je 0x2eb0
0x00002c58      e843edffff     call sym.imp.__errno_location
0x00002c5d      4889442418     mov qword [rsp + 0x18], rax
0x00002c62      c70000000000   mov dword [rax], 0
0x00002c68      0f1f84000000.  nop dword [rax + rax]
0x00002c70      4c89f7         mov rdi, r14
0x00002c73      e898efffff     call sym.imp.readdir
0x00002c78      4885c0         test rax, rax
0x00002c7b      0f8447020000   je 0x2ec8
0x00002c81      8078132e       cmp byte [rax + 0x13], 0x2e
0x00002c85      7516           jne 0x2c9d
0x00002c87      31d2           xor edx, edx
0x00002c89      8078142e       cmp byte [rax + 0x14], 0x2e
0x00002c8d      0f94c2         sete dl
0x00002c90      0fb6441014     movzx eax, byte [rax + rdx + 0x14]
0x00002c95      84c0           test al, al
0x00002c97      74d7           je 0x2c70
0x00002c99      3c2f           cmp al, 0x2f
0x00002c9b      74d3           je 0x2c70
0x00002c9d      4c89f7         mov rdi, r14
0x00002ca0      e8bbeeffff     call sym.imp.closedir
0x00002ca5      4531f6         xor r14d, r14d
0x00002ca8      b803000000     mov eax, 3
0x00002cad      41890424       mov dword [r12], eax
0x00002cb1      48837b2000     cmp qword [rbx + 0x20], 0
0x00002cb6      0f8524010000   jne 0x2de0
0x00002cbc      418b4504       mov eax, dword [r13 + 4]
0x00002cc0      83f805         cmp eax, 5
0x00002cc3      742d           je 0x2cf2
0x00002cc5      41807d0000     cmp byte [r13], 0
0x00002cca      751d           jne 0x2ce9
0x00002ccc      83f803         cmp eax, 3
0x00002ccf      7407           je 0x2cd8                               ; /src:-733
0x00002cd1      41807d1900     cmp byte [r13 + 0x19], 0
0x00002cd6      741a           je 0x2cf2
0x00002cd8      e823380000     call sym.can_write_any_file
0x00002cdd      84c0           test al, al
0x00002cdf      0f84c3020000   je 0x2fa8
0x00002ce5      418b4504       mov eax, dword [r13 + 4]
0x00002ce9      83f803         cmp eax, 3
0x00002cec      0f842e010000   je 0x2e20
0x00002cf2      b802000000     mov eax, 2
0x00002cf7      488b8c24b800.  mov rcx, qword [rsp + 0xb8]
0x00002cff      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002d08      0f8575030000   jne 0x3083
0x00002d0e      4881c4c80000.  add rsp, 0xc8
0x00002d15      5b             pop rbx                                 ; /src:-822
0x00002d16      5d             pop rbp
0x00002d17      415c           pop r12
0x00002d19      415d           pop r13
0x00002d1b      415e           pop r14
0x00002d1d      415f           pop r15
0x00002d1f      c3             ret
0x00002d20      488d5c2420     lea rbx, [rsp + 0x20]
0x00002d25      8b7c2410       mov edi, dword [rsp + 0x10]
0x00002d29      4c89fe         mov rsi, r15
0x00002d2c      4889da         mov rdx, rbx                            ; /src:-811
0x00002d2f      e80cfeffff     call sym.cache_fstatat.constprop.3
0x00002d34      85c0           test eax, eax
0x00002d36      0f85c4010000   jne 0x2f00
0x00002d3c      8b442438       mov eax, dword [rsp + 0x38]
0x00002d40      2500f00000     and eax, 0xf000
0x00002d45      3d00a00000     cmp eax, 0xa000
0x00002d4a      0f8444020000   je 0x2f94
0x00002d50      3d00400000     cmp eax, 0x4000                         ; /src:-810 ; "H\x8d5\x13y"
0x00002d55      0f84d9000000   je 0x2e34
0x00002d5b      488b742408     mov rsi, qword [rsp + 8]
0x00002d60      bf04000000     mov edi, 4
0x00002d65      e8062e0000     call sym.quotearg_style
0x00002d6a      4889c5         mov rbp, rax
0x00002d6d      8b7c2410       mov edi, dword [rsp + 0x10]
0x00002d71      4889da         mov rdx, rbx
0x00002d74      4c89fe         mov rsi, r15
0x00002d77      e8c4fdffff     call sym.cache_fstatat.constprop.3
0x00002d7c      85c0           test eax, eax
0x00002d7e      0f85ac020000   jne 0x3030
0x00002d84      4889df         mov rdi, rbx
0x00002d87      e894110000     call sym.file_type
0x00002d8c      4585e4         test r12d, r12d
0x00002d8f      4989c5         mov r13, rax
0x00002d92      488b1d7fc320.  mov rbx, qword [obj.program_name]       ; stat.h:-897 ; [0x20f118:8]=0
0x00002d99      ba05000000     mov edx, 5
0x00002d9e      0f8474020000   je 0x3018
0x00002da4      488d35b58700.  lea rsi, str.s:_remove_write_protected__s__s ; 0xb560 ; "%s: remove write-protected %s %s? "
0x00002dab      31ff           xor edi, edi
0x00002dad      e8aeecffff     call sym.imp.dcgettext
0x00002db2      488b3d27c320.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00002db9      4889c2         mov rdx, rax
0x00002dbc      4989e9         mov r9, rbp
0x00002dbf      4d89e8         mov r8, r13
0x00002dc2      4889d9         mov rcx, rbx
0x00002dc5      be01000000     mov esi, 1                              ; /src:-975
0x00002dca      31c0           xor eax, eax
0x00002dcc      e88fefffff     call sym.imp.__fprintf_chk              ; /src:-950
0x00002dd1      e87a3a0000     call sym.yesno
0x00002dd6      84c0           test al, al
0x00002dd8      0f8514ffffff   jne 0x2cf2
0x00002dde      6690           nop                                     ; /src:-946
0x00002de0      b803000000     mov eax, 3
0x00002de5      e90dffffff     jmp 0x2cf7
0x00002dea      660f1f440000   nop word [rax + rax]
0x00002df0      80fa01         cmp dl, 1
0x00002df3      4189d6         mov r14d, edx
0x00002df6      b800000000     mov eax, 0
0x00002dfb      19ed           sbb ebp, ebp
0x00002dfd      48c7442450ff.  mov qword [rsp + 0x50], 0xffffffffffffffff
0x00002e06      f7d5           not ebp
0x00002e08      83e504         and ebp, 4
0x00002e0b      84d2           test dl, dl
0x00002e0d      440f45f0       cmovne r14d, eax
0x00002e11      e99bfeffff     jmp 0x2cb1
0x00002e16      662e0f1f8400.  nop word cs:[rax + rax]
0x00002e20      4531e4         xor r12d, r12d
0x00002e23      85ed           test ebp, ebp
0x00002e25      0f84f5feffff   je 0x2d20
0x00002e2b      83fd04         cmp ebp, 4
0x00002e2e      0f8544010000   jne 0x2f78
0x00002e34      41807d0900     cmp byte [r13 + 9], 0
0x00002e39      0f8411010000   je 0x2f50
0x00002e3f      488b742408     mov rsi, qword [rsp + 8]
0x00002e44      bf04000000     mov edi, 4
0x00002e49      e8222d0000     call sym.quotearg_style
0x00002e4e      837c241402     cmp dword [rsp + 0x14], 2
0x00002e53      4889c5         mov rbp, rax
0x00002e56      0f852e010000   jne 0x2f8a
0x00002e5c      4584f6         test r14b, r14b
0x00002e5f      0f8525010000   jne 0x2f8a
0x00002e65      4585e4         test r12d, r12d
0x00002e68      488b1da9c220.  mov rbx, qword [obj.program_name]       ; [0x20f118:8]=0
0x00002e6f      ba05000000     mov edx, 5
0x00002e74      0f84f6010000   je 0x3070
0x00002e7a      488d358f8600.  lea rsi, str.s:_descend_into_write_protected_directory__s ; 0xb510 ; "%s: descend into write-protected directory %s? "
0x00002e81      31ff           xor edi, edi
0x00002e83      e8d8ebffff     call sym.imp.dcgettext
0x00002e88      488b3d51c220.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00002e8f      4889c2         mov rdx, rax
0x00002e92      4989e8         mov r8, rbp
0x00002e95      4889d9         mov rcx, rbx
0x00002e98      be01000000     mov esi, 1
0x00002e9d      31c0           xor eax, eax                            ; /src:-1054
0x00002e9f      e8bceeffff     call sym.imp.__fprintf_chk
0x00002ea4      e928ffffff     jmp 0x2dd1
0x00002ea9      0f1f80000000.  nop dword [rax]
0x00002eb0      89d7           mov edi, edx
0x00002eb2      e899ecffff     call sym.imp.close
0x00002eb7      b803000000     mov eax, 3
0x00002ebc      e9ecfdffff     jmp 0x2cad
0x00002ec1      0f1f80000000.  nop dword [rax]
0x00002ec8      488b442418     mov rax, qword [rsp + 0x18]
0x00002ecd      4c89f7         mov rdi, r14
0x00002ed0      8b10           mov edx, dword [rax]
0x00002ed2      89542418       mov dword [rsp + 0x18], edx
0x00002ed6      e885ecffff     call sym.imp.closedir
0x00002edb      8b542418       mov edx, dword [rsp + 0x18]
0x00002edf      85d2           test edx, edx
0x00002ee1      0f85befdffff   jne 0x2ca5
0x00002ee7      41be01000000   mov r14d, 1
0x00002eed      b804000000     mov eax, 4
0x00002ef2      e9b6fdffff     jmp 0x2cad
0x00002ef7      660f1f840000.  nop word [rax + rax]
0x00002f00      e89beaffff     call sym.imp.__errno_location
0x00002f05      8b18           mov ebx, dword [rax]
0x00002f07      488b742408     mov rsi, qword [rsp + 8]
0x00002f0c      bf04000000     mov edi, 4
0x00002f11      e85a2c0000     call sym.quotearg_style
0x00002f16      4889c5         mov rbp, rax
0x00002f19      488d356a8500.  lea rsi, str.cannot_remove__s           ; 0xb48a ; "cannot remove %s"
0x00002f20      ba05000000     mov edx, 5
0x00002f25      31ff           xor edi, edi
0x00002f27      e834ebffff     call sym.imp.dcgettext
0x00002f2c      4889e9         mov rcx, rbp
0x00002f2f      4889c2         mov rdx, rax
0x00002f32      89de           mov esi, ebx
0x00002f34      31c0           xor eax, eax
0x00002f36      31ff           xor edi, edi
0x00002f38      e893edffff     call sym.imp.error
0x00002f3d      b804000000     mov eax, 4
0x00002f42      e9b0fdffff     jmp 0x2cf7
0x00002f47      660f1f840000.  nop word [rax + rax]
0x00002f50      41807d0a00     cmp byte [r13 + 0xa], 0
0x00002f55      7405           je 0x2f5c
0x00002f57      4584f6         test r14b, r14b                         ; /src:-756
0x00002f5a      751c           jne 0x2f78
0x00002f5c      488b742408     mov rsi, qword [rsp + 8]
0x00002f61      bf04000000     mov edi, 4                              ; /src:-754
0x00002f66      bb15000000     mov ebx, 0x15
0x00002f6b      e8002c0000     call sym.quotearg_style
0x00002f70      4889c5         mov rbp, rax
0x00002f73      eba4           jmp 0x2f19
0x00002f75      0f1f00         nop dword [rax]
0x00002f78      488b742408     mov rsi, qword [rsp + 8]
0x00002f7d      bf04000000     mov edi, 4
0x00002f82      e8e92b0000     call sym.quotearg_style
0x00002f87      4889c5         mov rbp, rax
0x00002f8a      488d5c2420     lea rbx, [rsp + 0x20]
0x00002f8f      e9d9fdffff     jmp 0x2d6d
0x00002f94      41837d0403     cmp dword [r13 + 4], 3
0x00002f99      0f8553fdffff   jne 0x2cf2
0x00002f9f      e9b7fdffff     jmp 0x2d5b
0x00002fa4      0f1f4000       nop dword [rax]
0x00002fa8      488d5c2420     lea rbx, [rsp + 0x20]
0x00002fad      8b7c2410       mov edi, dword [rsp + 0x10]
0x00002fb1      4c89fe         mov rsi, r15                            ; /src:-740
0x00002fb4      4889da         mov rdx, rbx
0x00002fb7      e884fbffff     call sym.cache_fstatat.constprop.3      ; /src:-917
0x00002fbc      85c0           test eax, eax
0x00002fbe      0f853cffffff   jne 0x2f00
0x00002fc4      8b442438       mov eax, dword [rsp + 0x38]
0x00002fc8      2500f00000     and eax, 0xf000
0x00002fcd      3d00a00000     cmp eax, 0xa000
0x00002fd2      0f840dfdffff   je 0x2ce5
0x00002fd8      8b7c2410       mov edi, dword [rsp + 0x10]
0x00002fdc      b900020000     mov ecx, 0x200
0x00002fe1      ba02000000     mov edx, 2
0x00002fe6      4c89fe         mov rsi, r15
0x00002fe9      e822eaffff     call sym.imp.faccessat
0x00002fee      85c0           test eax, eax
0x00002ff0      0f84effcffff   je 0x2ce5
0x00002ff6      e8a5e9ffff     call sym.imp.__errno_location
0x00002ffb      8b18           mov ebx, dword [rax]
0x00002ffd      41bc01000000   mov r12d, 1
0x00003003      83fb0d         cmp ebx, 0xd
0x00003006      0f8417feffff   je 0x2e23
0x0000300c      e9f6feffff     jmp 0x2f07                              ; /src:-994
0x00003011      0f1f80000000.  nop dword [rax]
0x00003018      488d357c8400.  lea rsi, str.s:_remove__s__s            ; 0xb49b ; "%s: remove %s %s? "
0x0000301f      31ff           xor edi, edi
0x00003021      e83aeaffff     call sym.imp.dcgettext
0x00003026      e987fdffff     jmp 0x2db2
0x0000302b      0f1f440000     nop dword [rax + rax]
0x00003030      488d35538400.  lea rsi, str.cannot_remove__s           ; 0xb48a ; "cannot remove %s"
0x00003037      ba05000000     mov edx, 5                              ; /src:-740
0x0000303c      31ff           xor edi, edi
0x0000303e      e81deaffff     call sym.imp.dcgettext
0x00003043      4889c3         mov rbx, rax
0x00003046      e855e9ffff     call sym.imp.__errno_location
0x0000304b      8b30           mov esi, dword [rax]
0x0000304d      4889e9         mov rcx, rbp
0x00003050      31c0           xor eax, eax
0x00003052      4889da         mov rdx, rbx
0x00003055      31ff           xor edi, edi
0x00003057      e874ecffff     call sym.imp.error
0x0000305c      b804000000     mov eax, 4
0x00003061      e991fcffff     jmp 0x2cf7
0x00003066      662e0f1f8400.  nop word cs:[rax + rax]
0x00003070      488d35c98400.  lea rsi, str.s:_descend_into_directory__s ; 0xb540 ; "%s: descend into directory %s? "
0x00003077      31ff           xor edi, edi
0x00003079      e8e2e9ffff     call sym.imp.dcgettext
0x0000307e      e905feffff     jmp 0x2e88
0x00003083      e828eaffff     call sym.imp.__stack_chk_fail
0x00003088      0f1f84000000.  nop dword [rax + rax]
;-- rm:
0x00003090      4157           push r15
0x00003092      4156           push r14
0x00003094      4155           push r13
0x00003096      4154           push r12
0x00003098      55             push rbp
0x00003099      53             push rbx                                ; /src:-803
0x0000309a      4881ecd80000.  sub rsp, 0xd8
0x000030a1      64488b042528.  mov rax, qword fs:[0x28]
0x000030aa      48898424c800.  mov qword [rsp + 0xc8], rax
0x000030b2      31c0           xor eax, eax
0x000030b4      48833f00       cmp qword [rdi], 0
0x000030b8      0f846a070000   je 0x3828
0x000030be      807e0801       cmp byte [rsi + 8], 1
0x000030c2      4989f5         mov r13, rsi
0x000030c5      4c8d252c8700.  lea r12, [0x0000b7f8]
0x000030cc      bd02000000     mov ebp, 2
0x000030d1      19f6           sbb esi, esi                            ; /src:-793
0x000030d3      31d2           xor edx, edx
0x000030d5      83e6c0         and esi, 0xffffffc0                     ; /src:-792 ; 4294967232
0x000030d8      81c658020000   add esi, 0x258
0x000030de      e8ed360000     call sym.xfts_open
0x000030e3      4889c3         mov rbx, rax                            ; /src:-791
0x000030e6      488d44242c     lea rax, [rsp + 0x2c]                   ; /src:-792
0x000030eb      4889442410     mov qword [rsp + 0x10], rax
0x000030f0      488d442430     lea rax, [rsp + 0x30]
0x000030f5      4889442418     mov qword [rsp + 0x18], rax
0x000030fa      660f1f440000   nop word [rax + rax]                    ; /src:-727
0x00003100      4889df         mov rdi, rbx
0x00003103      e8d8530000     call sym.rpl_fts_read
0x00003108      4885c0         test rax, rax
0x0000310b      4989c7         mov r15, rax
0x0000310e      0f8486000000   je 0x319a
0x00003114      0fb75070       movzx edx, word [rax + 0x70]
0x00003118      6683fa0d       cmp dx, 0xd
0x0000311c      0f8755070000   ja 0x3877
0x00003122      0fb7c2         movzx eax, dx
0x00003125      49630484       movsxd rax, dword [r12 + rax*4]
0x00003129      4c01e0         add rax, r12
0x0000312c      ffe0           jmp rax
0x0000312e      6690           nop
0x00003130      498b5738       mov rdx, qword [r15 + 0x38]
0x00003134      be03000000     mov esi, 3
0x00003139      31ff           xor edi, edi
0x0000313b      e8302b0000     call sym.quotearg_n_style_colon
0x00003140      488d357a8300.  lea rsi, str.traversal_failed:__s       ; 0xb4c1 ; "traversal failed: %s"
0x00003147      ba05000000     mov edx, 5
0x0000314c      31ff           xor edi, edi
0x0000314e      4889c5         mov rbp, rax
0x00003151      e80ae9ffff     call sym.imp.dcgettext
0x00003156      418b7740       mov esi, dword [r15 + 0x40]
0x0000315a      4889e9         mov rcx, rbp
0x0000315d      4889c2         mov rdx, rax
0x00003160      31ff           xor edi, edi
0x00003162      31c0           xor eax, eax
0x00003164      e867ebffff     call sym.imp.error
0x00003169      4c89fe         mov rsi, r15
0x0000316c      ba04000000     mov edx, 4
0x00003171      4889df         mov rdi, rbx                            ; stdio2.h:-1208
0x00003174      e8e75a0000     call sym.rpl_fts_set
0x00003179      4889df         mov rdi, rbx
0x0000317c      bd04000000     mov ebp, 4
0x00003181      e85a530000     call sym.rpl_fts_read
0x00003186      4889df         mov rdi, rbx
0x00003189      e852530000     call sym.rpl_fts_read
0x0000318e      4885c0         test rax, rax
0x00003191      4989c7         mov r15, rax
0x00003194      0f857affffff   jne 0x3114
0x0000319a      e801e8ffff     call sym.imp.__errno_location
0x0000319f      4989c4         mov r12, rax
0x000031a2      8b00           mov eax, dword [rax]
0x000031a4      85c0           test eax, eax
0x000031a6      0f850c050000   jne 0x36b8
0x000031ac      4889df         mov rdi, rbx
0x000031af      e89c510000     call sym.rpl_fts_close
0x000031b4      85c0           test eax, eax
0x000031b6      0f8534050000   jne 0x36f0
0x000031bc      488b9c24c800.  mov rbx, qword [rsp + 0xc8]
0x000031c4      6448331c2528.  xor rbx, qword fs:[0x28]
0x000031cd      89e8           mov eax, ebp
0x000031cf      0f850b070000   jne 0x38e0
0x000031d5      4881c4d80000.  add rsp, 0xd8
0x000031dc      5b             pop rbx                                 ; stat.h:-1025
0x000031dd      5d             pop rbp
0x000031de      415c           pop r12
0x000031e0      415d           pop r13
0x000031e2      415e           pop r14
0x000031e4      415f           pop r15
0x000031e6      c3             ret
0x000031e7      660f1f840000.  nop word [rax + rax]
0x000031f0      6683fa06       cmp dx, 6
0x000031f4      7522           jne 0x3218
0x000031f6      41807d0800     cmp byte [r13 + 8], 0                   ; /src:-1153
0x000031fb      741b           je 0x3218
0x000031fd      49837f5800     cmp qword [r15 + 0x58], 0
0x00003202      7e14           jle 0x3218
0x00003204      488b4318       mov rax, qword [rbx + 0x18]
0x00003208      49394778       cmp qword [r15 + 0x78], rax
0x0000320c      0f85a6050000   jne 0x37b8
0x00003212      660f1f440000   nop word [rax + rax]
0x00003218      83e2fd         and edx, 0xfffffffd                     ; 4294967293
0x0000321b      4531f6         xor r14d, r14d
0x0000321e      4c89e9         mov rcx, r13
0x00003221      6683fa04       cmp dx, 4
0x00003225      41b803000000   mov r8d, 3
0x0000322b      4c89fe         mov rsi, r15
0x0000322e      410f94c6       sete r14b
0x00003232      4889df         mov rdi, rbx
0x00003235      4531c9         xor r9d, r9d
0x00003238      4489f2         mov edx, r14d
0x0000323b      e880f9ffff     call sym.prompt
0x00003240      83f802         cmp eax, 2
0x00003243      89c1           mov ecx, eax
0x00003245      0f845d020000   je 0x34a8
0x0000324b      8d41fe         lea eax, [rcx - 2]
0x0000324e      83f802         cmp eax, 2
0x00003251      0f876a060000   ja 0x38c1
0x00003257      83f904         cmp ecx, 4
0x0000325a      0f8485060000   je 0x38e5
0x00003260      83f903         cmp ecx, 3
0x00003263      0f8597feffff   jne 0x3100
0x00003269      83fd02         cmp ebp, 2
0x0000326c      b803000000     mov eax, 3
0x00003271      0f44e8         cmove ebp, eax
0x00003274      e987feffff     jmp 0x3100
0x00003279      0f1f80000000.  nop dword [rax]
0x00003280      498b5738       mov rdx, qword [r15 + 0x38]
0x00003284      be03000000     mov esi, 3
0x00003289      31ff           xor edi, edi
0x0000328b      e8e0290000     call sym.quotearg_n_style_colon
0x00003290      488d35218400.  lea rsi, str.WARNING:_Circular_directory_structure.__This_almost_certainly_means_that_you_have_a_corrupted_file_system.__NOTIFY_YOUR_SYSTEM_MANAGER.__The_following_directory_is_part_of_the_cycle:_____s ; /src:-1096 ; 0xb6b8 ; "WARNING: Circular directory structure.\nThis almost certainly means that you have a corrupted file system.\nNOTIFY YOUR SYSTEM MANAGER.\nThe following directory is part of the cycle:\n  %s\n"
0x00003297      4889c5         mov rbp, rax
0x0000329a      ba05000000     mov edx, 5
0x0000329f      31ff           xor edi, edi
0x000032a1      e8bae7ffff     call sym.imp.dcgettext
0x000032a6      4889e9         mov rcx, rbp
0x000032a9      4889c2         mov rdx, rax
0x000032ac      31f6           xor esi, esi
0x000032ae      e9adfeffff     jmp 0x3160                              ; /src:-1257
0x000032b3      0f1f440000     nop dword [rax + rax]
0x000032b8      41807d0900     cmp byte [r13 + 9], 0
0x000032bd      0f85b5000000   jne 0x3378
0x000032c3      41807d0a00     cmp byte [r13 + 0xa], 0
0x000032c8      0f8462010000   je 0x3430
0x000032ce      498b7730       mov rsi, qword [r15 + 0x30]
0x000032d2      8b7b2c         mov edi, dword [rbx + 0x2c]
0x000032d5      31c0           xor eax, eax
0x000032d7      ba00090300     mov edx, 0x30900
0x000032dc      e8bfe7ffff     call sym.imp.openat
0x000032e1      85c0           test eax, eax
0x000032e3      785c           js 0x3341
0x000032e5      89c7           mov edi, eax
0x000032e7      89442408       mov dword [rsp + 8], eax
0x000032eb      e820eaffff     call sym.imp.fdopendir
0x000032f0      4885c0         test rax, rax
0x000032f3      4989c6         mov r14, rax
0x000032f6      8b542408       mov edx, dword [rsp + 8]
0x000032fa      0f8432050000   je 0x3832                               ; /src:-1154
0x00003300      e89be6ffff     call sym.imp.__errno_location
0x00003305      4889442408     mov qword [rsp + 8], rax
0x0000330a      c70000000000   mov dword [rax], 0
0x00003310      4c89f7         mov rdi, r14
0x00003313      e8f8e8ffff     call sym.imp.readdir
0x00003318      4885c0         test rax, rax
0x0000331b      7439           je 0x3356
0x0000331d      8078132e       cmp byte [rax + 0x13], 0x2e
0x00003321      7516           jne 0x3339
0x00003323      31d2           xor edx, edx
0x00003325      8078142e       cmp byte [rax + 0x14], 0x2e
0x00003329      0f94c2         sete dl
0x0000332c      0fb6441014     movzx eax, byte [rax + rdx + 0x14]
0x00003331      84c0           test al, al
0x00003333      74db           je 0x3310
0x00003335      3c2f           cmp al, 0x2f
0x00003337      74d7           je 0x3310
0x00003339      4c89f7         mov rdi, r14
0x0000333c      e81fe8ffff     call sym.imp.closedir                   ; /src:-1153
0x00003341      41807d0a00     cmp byte [r13 + 0xa], 0
0x00003346      0f84e4000000   je 0x3430
0x0000334c      bd27000000     mov ebp, 0x27                           ; '''
0x00003351      e9df000000     jmp 0x3435
0x00003356      488b442408     mov rax, qword [rsp + 8]
0x0000335b      4c89f7         mov rdi, r14
0x0000335e      8b10           mov edx, dword [rax]
0x00003360      89542408       mov dword [rsp + 8], edx
0x00003364      e8f7e7ffff     call sym.imp.closedir
0x00003369      8b542408       mov edx, dword [rsp + 8]
0x0000336d      85d2           test edx, edx
0x0000336f      75d0           jne 0x3341
0x00003371      0f1f80000000.  nop dword [rax]
0x00003378      49837f5800     cmp qword [r15 + 0x58], 0               ; /src:-1130
0x0000337d      7539           jne 0x33b8
0x0000337f      4d8b7730       mov r14, qword [r15 + 0x30]
0x00003383      4c89f7         mov rdi, r14
0x00003386      e8e50a0000     call sym.last_component
0x0000338b      80382e         cmp byte [rax], 0x2e
0x0000338e      0f847c010000   je 0x3510
0x00003394      498b4510       mov rax, qword [r13 + 0x10]
0x00003398      4885c0         test rax, rax
0x0000339b      7410           je 0x33ad
0x0000339d      488b08         mov rcx, qword [rax]
0x000033a0      49398f800000.  cmp qword [r15 + 0x80], rcx
0x000033a7      0f8473030000   je 0x3720                               ; /src:-1125
0x000033ad      41807d1800     cmp byte [r13 + 0x18], 0
0x000033b2      0f85f0010000   jne 0x35a8
0x000033b8      4c8b4c2410     mov r9, qword [rsp + 0x10]
0x000033bd      4c89e9         mov rcx, r13
0x000033c0      41b802000000   mov r8d, 2
0x000033c6      ba01000000     mov edx, 1
0x000033cb      4c89fe         mov rsi, r15
0x000033ce      4889df         mov rdi, rbx
0x000033d1      e8eaf7ffff     call sym.prompt
0x000033d6      83f802         cmp eax, 2
0x000033d9      89c1           mov ecx, eax
0x000033db      0f84df000000   je 0x34c0
0x000033e1      498b4708       mov rax, qword [r15 + 8]
0x000033e5      4883785800     cmp qword [rax + 0x58], 0
0x000033ea      7917           jns 0x3403
0x000033ec      eb1c           jmp 0x340a
0x000033ee      6690           nop
0x000033f0      48c740200100.  mov qword [rax + 0x20], 1
0x000033f8      488b4008       mov rax, qword [rax + 8]
0x000033fc      4883785800     cmp qword [rax + 0x58], 0
0x00003401      7807           js 0x340a
0x00003403      4883782000     cmp qword [rax + 0x20], 0
0x00003408      74e6           je 0x33f0
0x0000340a      ba04000000     mov edx, 4
0x0000340f      4c89fe         mov rsi, r15
0x00003412      4889df         mov rdi, rbx
0x00003415      894c2408       mov dword [rsp + 8], ecx
0x00003419      e842580000     call sym.rpl_fts_set
0x0000341e      4889df         mov rdi, rbx
0x00003421      e8ba500000     call sym.rpl_fts_read
0x00003426      8b4c2408       mov ecx, dword [rsp + 8]
0x0000342a      e91cfeffff     jmp 0x324b
0x0000342f      90             nop
0x00003430      bd15000000     mov ebp, 0x15
0x00003435      498b7738       mov rsi, qword [r15 + 0x38]             ; /src:-1111
0x00003439      bf04000000     mov edi, 4
0x0000343e      e82d270000     call sym.quotearg_style
0x00003443      488d35408000.  lea rsi, str.cannot_remove__s           ; 0xb48a ; "cannot remove %s"
0x0000344a      31ff           xor edi, edi
0x0000344c      4989c6         mov r14, rax
0x0000344f      ba05000000     mov edx, 5
0x00003454      e807e6ffff     call sym.imp.dcgettext
0x00003459      31ff           xor edi, edi
0x0000345b      4889c2         mov rdx, rax
0x0000345e      4c89f1         mov rcx, r14
0x00003461      31c0           xor eax, eax
0x00003463      89ee           mov esi, ebp
0x00003465      e866e8ffff     call sym.imp.error
0x0000346a      498b4708       mov rax, qword [r15 + 8]                ; /src:-1126
0x0000346e      4883785800     cmp qword [rax + 0x58], 0
0x00003473      7922           jns 0x3497
0x00003475      e9effcffff     jmp 0x3169
0x0000347a      660f1f440000   nop word [rax + rax]
0x00003480      48c740200100.  mov qword [rax + 0x20], 1
0x00003488      488b4008       mov rax, qword [rax + 8]
0x0000348c      4883785800     cmp qword [rax + 0x58], 0
0x00003491      0f88d2fcffff   js 0x3169
0x00003497      4883782000     cmp qword [rax + 0x20], 0
0x0000349c      74e2           je 0x3480
0x0000349e      e9c6fcffff     jmp 0x3169
0x000034a3      0f1f440000     nop dword [rax + rax]
0x000034a8      4489f1         mov ecx, r14d
0x000034ab      4c89ea         mov rdx, r13
0x000034ae      4c89fe         mov rsi, r15
0x000034b1      4889df         mov rdi, rbx
0x000034b4      e837f4ffff     call sym.excise
0x000034b9      89c1           mov ecx, eax
0x000034bb      e98bfdffff     jmp 0x324b
0x000034c0      837c242c04     cmp dword [rsp + 0x2c], 4
0x000034c5      0f8535fcffff   jne 0x3100
0x000034cb      b901000000     mov ecx, 1
0x000034d0      4c89ea         mov rdx, r13
0x000034d3      4c89fe         mov rsi, r15
0x000034d6      4889df         mov rdi, rbx
0x000034d9      e812f4ffff     call sym.excise
0x000034de      ba04000000     mov edx, 4
0x000034e3      4c89fe         mov rsi, r15
0x000034e6      4889df         mov rdi, rbx
0x000034e9      89442408       mov dword [rsp + 8], eax
0x000034ed      e86e570000     call sym.rpl_fts_set
0x000034f2      4889df         mov rdi, rbx
0x000034f5      e8e64f0000     call sym.rpl_fts_read
0x000034fa      8b4c2408       mov ecx, dword [rsp + 8]
0x000034fe      83f902         cmp ecx, 2
0x00003501      0f84f9fbffff   je 0x3100
0x00003507      e9d5feffff     jmp 0x33e1
0x0000350c      0f1f4000       nop dword [rax]
0x00003510      31d2           xor edx, edx
0x00003512      8078012e       cmp byte [rax + 1], 0x2e
0x00003516      0f94c2         sete dl
0x00003519      0fb6441001     movzx eax, byte [rax + rdx + 1]
0x0000351e      84c0           test al, al
0x00003520      7408           je 0x352a
0x00003522      3c2f           cmp al, 0x2f
0x00003524      0f856afeffff   jne 0x3394
0x0000352a      498b5738       mov rdx, qword [r15 + 0x38]
0x0000352e      be04000000     mov esi, 4
0x00003533      bf02000000     mov edi, 2
0x00003538      e813250000     call sym.quotearg_n_style
0x0000353d      488d157a7f00.  lea rdx, [0x0000b4be]                   ; ".."
0x00003544      be04000000     mov esi, 4
0x00003549      bf01000000     mov edi, 1
0x0000354e      4889c5         mov rbp, rax
0x00003551      e8fa240000     call sym.quotearg_n_style
0x00003556      488d15627f00.  lea rdx, [0x0000b4bf]                   ; "."
0x0000355d      31ff           xor edi, edi
0x0000355f      be04000000     mov esi, 4
0x00003564      4989c6         mov r14, rax
0x00003567      e8e4240000     call sym.quotearg_n_style
0x0000356c      488d35158000.  lea rsi, str.refusing_to_remove__s_or__s_directory:_skipping__s ; /src:-1369 ; 0xb588 ; "refusing to remove %s or %s directory: skipping %s"
0x00003573      31ff           xor edi, edi
0x00003575      ba05000000     mov edx, 5
0x0000357a      4889442408     mov qword [rsp + 8], rax
0x0000357f      e8dce4ffff     call sym.imp.dcgettext                  ; /src:-1371
0x00003584      488b4c2408     mov rcx, qword [rsp + 8]
0x00003589      4889c2         mov rdx, rax
0x0000358c      4989e9         mov r9, rbp
0x0000358f      4d89f0         mov r8, r14
0x00003592      31f6           xor esi, esi
0x00003594      31ff           xor edi, edi
0x00003596      31c0           xor eax, eax
0x00003598      e833e7ffff     call sym.imp.error
0x0000359d      e9c7fbffff     jmp 0x3169
0x000035a2      660f1f440000   nop word [rax + rax]
0x000035a8      488d350f7f00.  lea rsi, [0x0000b4be]                   ; ".."
0x000035af      31d2           xor edx, edx
0x000035b1      4c89f7         mov rdi, r14
0x000035b4      e8570a0000     call sym.file_name_concat
0x000035b9      4885c0         test rax, rax
0x000035bc      4989c6         mov r14, rax
0x000035bf      7416           je 0x35d7
0x000035c1      488b542418     mov rdx, qword [rsp + 0x18]
0x000035c6      4889c6         mov rsi, rax
0x000035c9      bf01000000     mov edi, 1
0x000035ce      e8bde4ffff     call sym.imp.__lxstat
0x000035d3      85c0           test eax, eax
0x000035d5      7469           je 0x3640
0x000035d7      498b5730       mov rdx, qword [r15 + 0x30]
0x000035db      be04000000     mov esi, 4
0x000035e0      bf01000000     mov edi, 1
0x000035e5      e866240000     call sym.quotearg_n_style
0x000035ea      4c89f2         mov rdx, r14
0x000035ed      31ff           xor edi, edi
0x000035ef      be04000000     mov esi, 4
0x000035f4      4889c5         mov rbp, rax
0x000035f7      e854240000     call sym.quotearg_n_style
0x000035fc      488d35658000.  lea rsi, str.failed_to_stat__s:_skipping__s ; 0xb668 ; "failed to stat %s: skipping %s"
0x00003603      31ff           xor edi, edi
0x00003605      ba05000000     mov edx, 5
0x0000360a      4889442408     mov qword [rsp + 8], rax
0x0000360f      e84ce4ffff     call sym.imp.dcgettext
0x00003614      488b4c2408     mov rcx, qword [rsp + 8]
0x00003619      4889c2         mov rdx, rax
0x0000361c      31ff           xor edi, edi
0x0000361e      4989e8         mov r8, rbp
0x00003621      31f6           xor esi, esi
0x00003623      31c0           xor eax, eax
0x00003625      e8a6e6ffff     call sym.imp.error
0x0000362a      4c89f7         mov rdi, r14
0x0000362d      e86ee7ffff     call sym..plt.got
0x00003632      e932fbffff     jmp 0x3169
0x00003637      660f1f840000.  nop word [rax + rax]
0x00003640      4c89f7         mov rdi, r14
0x00003643      e858e7ffff     call sym..plt.got
0x00003648      488b442430     mov rax, qword [rsp + 0x30]
0x0000364d      48394318       cmp qword [rbx + 0x18], rax
0x00003651      0f8461fdffff   je 0x33b8
0x00003657      498b7738       mov rsi, qword [r15 + 0x38]
0x0000365b      bf04000000     mov edi, 4
0x00003660      e80b250000     call sym.quotearg_style
0x00003665      488d351c8000.  lea rsi, str.skipping__s__since_it_s_on_a_different_device ; 0xb688 ; "skipping %s, since it's on a different device"
0x0000366c      4889c5         mov rbp, rax
0x0000366f      ba05000000     mov edx, 5
0x00003674      31ff           xor edi, edi
0x00003676      e8e5e3ffff     call sym.imp.dcgettext
0x0000367b      31f6           xor esi, esi
0x0000367d      4889c2         mov rdx, rax
0x00003680      4889e9         mov rcx, rbp
0x00003683      31ff           xor edi, edi
0x00003685      31c0           xor eax, eax
0x00003687      e844e6ffff     call sym.imp.error
0x0000368c      488d353d8100.  lea rsi, str.and___preserve_root_all_is_in_effect ; 0xb7d0 ; "and --preserve-root=all is in effect"
0x00003693      ba05000000     mov edx, 5
0x00003698      31ff           xor edi, edi
0x0000369a      e8c1e3ffff     call sym.imp.dcgettext
0x0000369f      31f6           xor esi, esi
0x000036a1      4889c2         mov rdx, rax
0x000036a4      31ff           xor edi, edi
0x000036a6      31c0           xor eax, eax
0x000036a8      e823e6ffff     call sym.imp.error
0x000036ad      e9b7faffff     jmp 0x3169
0x000036b2      660f1f440000   nop word [rax + rax]
0x000036b8      488d35ef7d00.  lea rsi, str.fts_read_failed            ; 0xb4ae ; "fts_read failed"
0x000036bf      31ff           xor edi, edi
0x000036c1      ba05000000     mov edx, 5
0x000036c6      bd04000000     mov ebp, 4
0x000036cb      e890e3ffff     call sym.imp.dcgettext
0x000036d0      418b3424       mov esi, dword [r12]
0x000036d4      4889c2         mov rdx, rax
0x000036d7      31ff           xor edi, edi
0x000036d9      31c0           xor eax, eax
0x000036db      e8f0e5ffff     call sym.imp.error
0x000036e0      4889df         mov rdi, rbx
0x000036e3      e8684c0000     call sym.rpl_fts_close
0x000036e8      85c0           test eax, eax
0x000036ea      0f84ccfaffff   je 0x31bc
0x000036f0      488d35067e00.  lea rsi, str.fts_close_failed           ; 0xb4fd ; "fts_close failed"
0x000036f7      ba05000000     mov edx, 5
0x000036fc      31ff           xor edi, edi
0x000036fe      bd04000000     mov ebp, 4
0x00003703      e858e3ffff     call sym.imp.dcgettext
0x00003708      418b3424       mov esi, dword [r12]
0x0000370c      4889c2         mov rdx, rax
0x0000370f      31ff           xor edi, edi
0x00003711      31c0           xor eax, eax
0x00003713      e8b8e5ffff     call sym.imp.error
0x00003718      e99ffaffff     jmp 0x31bc
0x0000371d      0f1f00         nop dword [rax]
0x00003720      488b4008       mov rax, qword [rax + 8]
0x00003724      49394778       cmp qword [r15 + 0x78], rax
0x00003728      0f857ffcffff   jne 0x33ad
0x0000372e      498b5738       mov rdx, qword [r15 + 0x38]
0x00003732      488d3d3d8200.  lea rdi, [0x0000b976]                   ; "/"
0x00003739      b902000000     mov ecx, 2
0x0000373e      4889d6         mov rsi, rdx
0x00003741      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003743      0f97c0         seta al
0x00003746      1c00           sbb al, 0
0x00003748      84c0           test al, al
0x0000374a      0f84ee000000   je 0x383e
0x00003750      488d151f8200.  lea rdx, [0x0000b976]                   ; "/"
0x00003757      be04000000     mov esi, 4
0x0000375c      bf01000000     mov edi, 1
0x00003761      e8ea220000     call sym.quotearg_n_style
0x00003766      498b5738       mov rdx, qword [r15 + 0x38]
0x0000376a      be04000000     mov esi, 4
0x0000376f      31ff           xor edi, edi
0x00003771      4889c5         mov rbp, rax
0x00003774      e8d7220000     call sym.quotearg_n_style
0x00003779      488d35707e00.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s__same_as__s ; 0xb5f0 ; "it is dangerous to operate recursively on %s (same as %s)"
0x00003780      4989c6         mov r14, rax
0x00003783      ba05000000     mov edx, 5
0x00003788      31ff           xor edi, edi
0x0000378a      e8d1e2ffff     call sym.imp.dcgettext
0x0000378f      4989e8         mov r8, rbp
0x00003792      4889c2         mov rdx, rax
0x00003795      4c89f1         mov rcx, r14
0x00003798      31f6           xor esi, esi
0x0000379a      31ff           xor edi, edi
0x0000379c      31c0           xor eax, eax
0x0000379e      e82de5ffff     call sym.imp.error
0x000037a3      ba05000000     mov edx, 5
0x000037a8      488d35817e00.  lea rsi, str.use___no_preserve_root_to_override_this_failsafe ; 0xb630 ; "use --no-preserve-root to override this failsafe"
0x000037af      e9e4feffff     jmp 0x3698
0x000037b4      0f1f4000       nop dword [rax]
0x000037b8      498b4708       mov rax, qword [r15 + 8]
0x000037bc      4883785800     cmp qword [rax + 0x58], 0
0x000037c1      7918           jns 0x37db
0x000037c3      eb1d           jmp 0x37e2
0x000037c5      0f1f00         nop dword [rax]
0x000037c8      48c740200100.  mov qword [rax + 0x20], 1
0x000037d0      488b4008       mov rax, qword [rax + 8]
0x000037d4      4883785800     cmp qword [rax + 0x58], 0
0x000037d9      7807           js 0x37e2
0x000037db      4883782000     cmp qword [rax + 0x20], 0
0x000037e0      74e6           je 0x37c8
0x000037e2      498b7738       mov rsi, qword [r15 + 0x38]
0x000037e6      bf04000000     mov edi, 4
0x000037eb      e880230000     call sym.quotearg_style
0x000037f0      488d35917e00.  lea rsi, str.skipping__s__since_it_s_on_a_different_device ; 0xb688 ; "skipping %s, since it's on a different device"
0x000037f7      4889c5         mov rbp, rax
0x000037fa      ba05000000     mov edx, 5
0x000037ff      31ff           xor edi, edi
0x00003801      e85ae2ffff     call sym.imp.dcgettext
0x00003806      4889e9         mov rcx, rbp
0x00003809      4889c2         mov rdx, rax
0x0000380c      31f6           xor esi, esi
0x0000380e      31ff           xor edi, edi
0x00003810      31c0           xor eax, eax
0x00003812      bd04000000     mov ebp, 4
0x00003817      e8b4e4ffff     call sym.imp.error
0x0000381c      e9dff8ffff     jmp 0x3100
0x00003821      0f1f80000000.  nop dword [rax]
0x00003828      bd02000000     mov ebp, 2
0x0000382d      e98af9ffff     jmp 0x31bc
0x00003832      89d7           mov edi, edx
0x00003834      e817e3ffff     call sym.imp.close
0x00003839      e903fbffff     jmp 0x3341
0x0000383e      4889d6         mov rsi, rdx
0x00003841      bf04000000     mov edi, 4
0x00003846      e825230000     call sym.quotearg_style
0x0000384b      488d356e7d00.  lea rsi, str.it_is_dangerous_to_operate_recursively_on__s ; 0xb5c0 ; "it is dangerous to operate recursively on %s"
0x00003852      4889c5         mov rbp, rax
0x00003855      31ff           xor edi, edi
0x00003857      ba05000000     mov edx, 5
0x0000385c      e8ffe1ffff     call sym.imp.dcgettext
0x00003861      4889e9         mov rcx, rbp
0x00003864      4889c2         mov rdx, rax
0x00003867      31f6           xor esi, esi
0x00003869      31ff           xor edi, edi
0x0000386b      31c0           xor eax, eax
0x0000386d      e85ee4ffff     call sym.imp.error
0x00003872      e92cffffff     jmp 0x37a3
0x00003877      498b5738       mov rdx, qword [r15 + 0x38]
0x0000387b      be03000000     mov esi, 3
0x00003880      31ff           xor edi, edi
0x00003882      e8e9230000     call sym.quotearg_n_style_colon
0x00003887      410fb75f70     movzx ebx, word [r15 + 0x70]
0x0000388c      488d35e57e00.  lea rsi, str.unexpected_failure:_fts_info__d:__s__please_report_to__s ; 0xb778 ; "unexpected failure: fts_info=%d: %s\nplease report to %s"
0x00003893      ba05000000     mov edx, 5
0x00003898      31ff           xor edi, edi
0x0000389a      4889c5         mov rbp, rax
0x0000389d      e8bee1ffff     call sym.imp.dcgettext
0x000038a2      4c8d0d2d7c00.  lea r9, str.bug_coreutils_gnu.org       ; 0xb4d6 ; "bug-coreutils@gnu.org"
0x000038a9      4889c2         mov rdx, rax
0x000038ac      4989e8         mov r8, rbp
0x000038af      89d9           mov ecx, ebx
0x000038b1      31f6           xor esi, esi
0x000038b3      31ff           xor edi, edi
0x000038b5      31c0           xor eax, eax
0x000038b7      e814e4ffff     call sym.imp.error
0x000038bc      e8cfe0ffff     call sym.imp.abort
0x000038c1      488d0d687f00.  lea rcx, obj.__PRETTY_FUNCTION__.7067   ; 0xb830 ; "rm"
0x000038c8      488d35e17e00.  lea rsi, str..._coreutils_8.31_src_remove.c ; 0xb7b0 ; "../coreutils-8.31/src/remove.c"
0x000038cf      488d3d167c00.  lea rdi, str.VALID_STATUS__s            ; 0xb4ec ; "VALID_STATUS (s)"
0x000038d6      ba61020000     mov edx, 0x261
0x000038db      e840e2ffff     call sym.imp.__assert_fail
0x000038e0      e8cbe1ffff     call sym.imp.__stack_chk_fail
0x000038e5      bd04000000     mov ebp, 4
0x000038ea      e911f8ffff     jmp 0x3100
0x000038ef      90             nop
;-- __argmatch_die:
0x000038f0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/argmatch.c:63
0x000038f5      e9a6ebffff     jmp sym.usage
0x000038fa      660f1f440000   nop word [rax + rax]
;-- argmatch:
0x00003900      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:86
0x00003902      4156           push r14
0x00003904      4989f7         mov r15, rsi
0x00003907      4155           push r13
0x00003909      4154           push r12
0x0000390b      4989cd         mov r13, rcx
0x0000390e      55             push rbp
0x0000390f      53             push rbx
0x00003910      4889d5         mov rbp, rdx
0x00003913      4883ec28       sub rsp, 0x28
0x00003917      48897c2408     mov qword [rsp + 8], rdi
0x0000391c      4889542418     mov qword [rsp + 0x18], rdx
0x00003921      e85ae1ffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/argmatch.c:92
0x00003926      4d8b37         mov r14, qword [r15]                    ; ../coreutils-8.31/lib/argmatch.c:95
0x00003929      48c70424ffff.  mov qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:89
0x00003931      4d85f6         test r14, r14                           ; ../coreutils-8.31/lib/argmatch.c:95
0x00003934      0f84b3000000   je 0x39ed
0x0000393a      4989c4         mov r12, rax
0x0000393d      c644241700     mov byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:90
0x00003942      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:95
0x00003944      eb51           jmp 0x3997
0x00003946      662e0f1f8400.  nop word cs:[rax + rax]
0x00003950      488b442418     mov rax, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/argmatch.c:108
0x00003955      4885c0         test rax, rax
0x00003958      0f84a2000000   je 0x3a00
0x0000395e      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:109
0x00003962      4c89ea         mov rdx, r13
0x00003965      4889ee         mov rsi, rbp
0x00003968      490faffd       imul rdi, r13
0x0000396c      4801c7         add rdi, rax
0x0000396f      e8fce1ffff     call sym.imp.memcmp
0x00003974      85c0           test eax, eax                           ; ../coreutils-8.31/lib/argmatch.c:114
0x00003976      0fb6442417     movzx eax, byte [rsp + 0x17]
0x0000397b      b901000000     mov ecx, 1
0x00003980      0f45c1         cmovne eax, ecx
0x00003983      88442417       mov byte [rsp + 0x17], al
0x00003987      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x0000398b      4c01ed         add rbp, r13
0x0000398e      4d8b34df       mov r14, qword [r15 + rbx*8]
0x00003992      4d85f6         test r14, r14
0x00003995      7441           je 0x39d8
0x00003997      488b742408     mov rsi, qword [rsp + 8]                ; ../coreutils-8.31/lib/argmatch.c:97
0x0000399c      4c89e2         mov rdx, r12
0x0000399f      4c89f7         mov rdi, r14
0x000039a2      e809e0ffff     call sym.imp.strncmp
0x000039a7      85c0           test eax, eax
0x000039a9      75dc           jne 0x3987
0x000039ab      4c89f7         mov rdi, r14                            ; ../coreutils-8.31/lib/argmatch.c:99
0x000039ae      e8cde0ffff     call sym.imp.strlen
0x000039b3      4c39e0         cmp rax, r12
0x000039b6      7458           je 0x3a10
0x000039b8      48833c24ff     cmp qword [rsp], 0xffffffffffffffff     ; ../coreutils-8.31/lib/argmatch.c:102
0x000039bd      7591           jne 0x3950
0x000039bf      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:104
0x000039c3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:95
0x000039c7      4c01ed         add rbp, r13
0x000039ca      4d8b34df       mov r14, qword [r15 + rbx*8]
0x000039ce      4d85f6         test r14, r14
0x000039d1      75c4           jne 0x3997
0x000039d3      0f1f440000     nop dword [rax + rax]
0x000039d8      807c241700     cmp byte [rsp + 0x17], 0                ; ../coreutils-8.31/lib/argmatch.c:120
0x000039dd      48c7c0feffff.  mov rax, 0xfffffffffffffffe
0x000039e4      480f440424     cmove rax, qword [rsp]
0x000039e9      48890424       mov qword [rsp], rax
0x000039ed      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/argmatch.c:123
0x000039f1      4883c428       add rsp, 0x28
0x000039f5      5b             pop rbx
0x000039f6      5d             pop rbp
0x000039f7      415c           pop r12
0x000039f9      415d           pop r13
0x000039fb      415e           pop r14
0x000039fd      415f           pop r15
0x000039ff      c3             ret
0x00003a00      c644241701     mov byte [rsp + 0x17], 1                ; ../coreutils-8.31/lib/argmatch.c:114
0x00003a05      eb80           jmp 0x3987
0x00003a07      660f1f840000.  nop word [rax + rax]
0x00003a10      48891c24       mov qword [rsp], rbx                    ; ../coreutils-8.31/lib/argmatch.c:101
0x00003a14      ebd7           jmp 0x39ed
0x00003a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_invalid:
0x00003a20      4883faff       cmp rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/argmatch.c:132
0x00003a24      4154           push r12
0x00003a26      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:133
0x00003a2b      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:132
0x00003a2c      4989f4         mov r12, rsi
0x00003a2f      53             push rbx
0x00003a30      4889fd         mov rbp, rdi
0x00003a33      744b           je 0x3a80                               ; ../coreutils-8.31/lib/argmatch.c:133
0x00003a35      488d35177e00.  lea rsi, str.ambiguous_argument__s_for__s ; 0xb853 ; "ambiguous argument %s for %s"
0x00003a3c      31ff           xor edi, edi
0x00003a3e      e81de0ffff     call sym.imp.dcgettext
0x00003a43      4889c3         mov rbx, rax
0x00003a46      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00003a49      bf01000000     mov edi, 1
0x00003a4e      e8cd230000     call sym.quote_n
0x00003a53      4c89e2         mov rdx, r12
0x00003a56      4889c5         mov rbp, rax
0x00003a59      be08000000     mov esi, 8
0x00003a5e      31ff           xor edi, edi
0x00003a60      e8eb1f0000     call sym.quotearg_n_style
0x00003a65      4989e8         mov r8, rbp
0x00003a68      4889da         mov rdx, rbx
0x00003a6b      4889c1         mov rcx, rax
0x00003a6e      5b             pop rbx                                 ; ../coreutils-8.31/lib/argmatch.c:139
0x00003a6f      5d             pop rbp
0x00003a70      415c           pop r12
0x00003a72      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/argmatch.c:137
0x00003a74      31ff           xor edi, edi
0x00003a76      31c0           xor eax, eax
0x00003a78      e953e2ffff     jmp sym.imp.error
0x00003a7d      0f1f00         nop dword [rax]
0x00003a80      488d35b17d00.  lea rsi, str.invalid_argument__s_for__s ; ../coreutils-8.31/lib/argmatch.c:133 ; 0xb838 ; "invalid argument %s for %s"
0x00003a87      31ff           xor edi, edi
0x00003a89      e8d2dfffff     call sym.imp.dcgettext
0x00003a8e      4889c3         mov rbx, rax
0x00003a91      ebb3           jmp 0x3a46
0x00003a93      0f1f00         nop dword [rax]
0x00003a96      662e0f1f8400.  nop word cs:[rax + rax]
;-- argmatch_valid:
0x00003aa0      4157           push r15                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00003aa2      4156           push r14
0x00003aa4      4989fe         mov r14, rdi
0x00003aa7      4155           push r13
0x00003aa9      4154           push r12
0x00003aab      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/argmatch.c:154
0x00003aad      55             push rbp                                ; ../coreutils-8.31/lib/argmatch.c:148
0x00003aae      53             push rbx
0x00003aaf      4889f5         mov rbp, rsi
0x00003ab2      488d35b77d00.  lea rsi, str.Valid_arguments_are:       ; ../coreutils-8.31/lib/argmatch.c:154 ; 0xb870 ; "Valid arguments are:"
0x00003ab9      4989d4         mov r12, rdx                            ; ../coreutils-8.31/lib/argmatch.c:148
0x00003abc      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/argmatch.c:154
0x00003ac1      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/argmatch.c:148
0x00003ac5      488b1d14b620.  mov rbx, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:154 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00003acc      e88fdfffff     call sym.imp.dcgettext
0x00003ad1      4889c7         mov rdi, rax
0x00003ad4      4889de         mov rsi, rbx
0x00003ad7      e8a4e0ffff     call sym.imp.fputs_unlocked
0x00003adc      4d8b3e         mov r15, qword [r14]                    ; ../coreutils-8.31/lib/argmatch.c:155
0x00003adf      4d85ff         test r15, r15
0x00003ae2      0f8490000000   je 0x3b78
0x00003ae8      4531ed         xor r13d, r13d                          ; ../coreutils-8.31/lib/argmatch.c:150
0x00003aeb      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/argmatch.c:155
0x00003aed      eb39           jmp 0x3b28
0x00003aef      90             nop
0x00003af0      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:159
0x00003af3      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00003af7      4989ed         mov r13, rbp                            ; ../coreutils-8.31/lib/argmatch.c:160
0x00003afa      e841230000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:159
0x00003aff      488b3ddab520.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00003b06      488d15787d00.  lea rdx, [0x0000b885]                   ; "\n  - %s"
0x00003b0d      4889c1         mov rcx, rax
0x00003b10      be01000000     mov esi, 1
0x00003b15      31c0           xor eax, eax
0x00003b17      4c01e5         add rbp, r12
0x00003b1a      e841e2ffff     call sym.imp.__fprintf_chk
0x00003b1f      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00003b23      4d85ff         test r15, r15
0x00003b26      7450           je 0x3b78
0x00003b28      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/argmatch.c:156
0x00003b2b      74c3           je 0x3af0
0x00003b2d      4c89e2         mov rdx, r12                            ; ../coreutils-8.31/lib/argmatch.c:157
0x00003b30      4889ee         mov rsi, rbp
0x00003b33      4c89ef         mov rdi, r13
0x00003b36      e835e0ffff     call sym.imp.memcmp
0x00003b3b      85c0           test eax, eax
0x00003b3d      75b1           jne 0x3af0
0x00003b3f      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/argmatch.c:164
0x00003b42      4883c301       add rbx, 1                              ; ../coreutils-8.31/lib/argmatch.c:155
0x00003b46      4c01e5         add rbp, r12
0x00003b49      e8f2220000     call sym.quote                          ; ../coreutils-8.31/lib/argmatch.c:164
0x00003b4e      488b3d8bb520.  mov rdi, qword [obj.stderr]             ; stdio2.h:97   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00003b55      488d15317d00.  lea rdx, str.s                          ; 0xb88d ; ", %s"
0x00003b5c      4889c1         mov rcx, rax
0x00003b5f      be01000000     mov esi, 1
0x00003b64      31c0           xor eax, eax
0x00003b66      e8f5e1ffff     call sym.imp.__fprintf_chk
0x00003b6b      4d8b3cde       mov r15, qword [r14 + rbx*8]            ; ../coreutils-8.31/lib/argmatch.c:155
0x00003b6f      4d85ff         test r15, r15
0x00003b72      75b4           jne 0x3b28
0x00003b74      0f1f4000       nop dword [rax]
0x00003b78      488b3d61b520.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/argmatch.c:166 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00003b7f      488b4728       mov rax, qword [rdi + 0x28]             ; stdio.h:100   return _IO_putc_unlocked (__c, __stream);
0x00003b83      483b4730       cmp rax, qword [rdi + 0x30]
0x00003b87      731f           jae 0x3ba8
0x00003b89      488d5001       lea rdx, [rax + 1]
0x00003b8d      48895728       mov qword [rdi + 0x28], rdx
0x00003b91      c6000a         mov byte [rax], 0xa
0x00003b94      4883c408       add rsp, 8
0x00003b98      5b             pop rbx
0x00003b99      5d             pop rbp
0x00003b9a      415c           pop r12
0x00003b9c      415d           pop r13
0x00003b9e      415e           pop r14
0x00003ba0      415f           pop r15
0x00003ba2      c3             ret
0x00003ba3      0f1f440000     nop dword [rax + rax]
0x00003ba8      4883c408       add rsp, 8
0x00003bac      be0a000000     mov esi, 0xa                            ; ../coreutils-8.31/lib/argmatch.c:-204
0x00003bb1      5b             pop rbx
0x00003bb2      5d             pop rbp
0x00003bb3      415c           pop r12
0x00003bb5      415d           pop r13
0x00003bb7      415e           pop r14
0x00003bb9      415f           pop r15
0x00003bbb      e930dfffff     jmp sym.imp.__overflow
;-- __xargmatch_internal:
0x00003bc0      4157           push r15
0x00003bc2      4156           push r14
0x00003bc4      4989fe         mov r14, rdi
0x00003bc7      4155           push r13
0x00003bc9      4154           push r12
0x00003bcb      4989f4         mov r12, rsi
0x00003bce      55             push rbp
0x00003bcf      53             push rbx
0x00003bd0      4889cd         mov rbp, rcx
0x00003bd3      4889d3         mov rbx, rdx
0x00003bd6      4c89c1         mov rcx, r8
0x00003bd9      4889ea         mov rdx, rbp
0x00003bdc      4883ec08       sub rsp, 8
0x00003be0      4889de         mov rsi, rbx
0x00003be3      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-196
0x00003be6      4d89c7         mov r15, r8
0x00003be9      4d89cd         mov r13, r9
0x00003bec      e80ffdffff     call sym.argmatch
0x00003bf1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/argmatch.c:-195
0x00003bf4      780f           js 0x3c05                               ; ../coreutils-8.31/lib/argmatch.c:-193
0x00003bf6      4883c408       add rsp, 8
0x00003bfa      5b             pop rbx
0x00003bfb      5d             pop rbp
0x00003bfc      415c           pop r12
0x00003bfe      415d           pop r13
0x00003c00      415e           pop r14                                 ; ../coreutils-8.31/lib/argmatch.c:-184
0x00003c02      415f           pop r15
0x00003c04      c3             ret
0x00003c05      4889c2         mov rdx, rax
0x00003c08      4c89e6         mov rsi, r12                            ; ../coreutils-8.31/lib/argmatch.c:-181
0x00003c0b      4c89f7         mov rdi, r14
0x00003c0e      e80dfeffff     call sym.argmatch_invalid
0x00003c13      4c89fa         mov rdx, r15
0x00003c16      4889ee         mov rsi, rbp
0x00003c19      4889df         mov rdi, rbx
0x00003c1c      e87ffeffff     call sym.argmatch_valid
0x00003c21      41ffd5         call r13
0x00003c24      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00003c2b      ebc9           jmp 0x3bf6
0x00003c2d      0f1f00         nop dword [rax]
;-- argmatch_to_argument:
0x00003c30      4156           push r14
0x00003c32      4155           push r13
0x00003c34      4154           push r12
0x00003c36      55             push rbp
0x00003c37      53             push rbx
0x00003c38      4c8b36         mov r14, qword [rsi]
0x00003c3b      4d85f6         test r14, r14
0x00003c3e      7431           je 0x3c71
0x00003c40      4989cc         mov r12, rcx
0x00003c43      4989fd         mov r13, rdi
0x00003c46      4889d5         mov rbp, rdx
0x00003c49      488d5e08       lea rbx, [rsi + 8]
0x00003c4d      eb10           jmp 0x3c5f                              ; ../coreutils-8.31/lib/argmatch.c:-177
0x00003c4f      90             nop
0x00003c50      4c8b33         mov r14, qword [rbx]
0x00003c53      4c01e5         add rbp, r12
0x00003c56      4883c308       add rbx, 8
0x00003c5a      4d85f6         test r14, r14
0x00003c5d      7412           je 0x3c71
0x00003c5f      4c89e2         mov rdx, r12
0x00003c62      4889ee         mov rsi, rbp
0x00003c65      4c89ef         mov rdi, r13
0x00003c68      e803dfffff     call sym.imp.memcmp
0x00003c6d      85c0           test eax, eax
0x00003c6f      75df           jne 0x3c50
0x00003c71      5b             pop rbx
0x00003c72      4c89f0         mov rax, r14
0x00003c75      5d             pop rbp
0x00003c76      415c           pop r12
0x00003c78      415d           pop r13
0x00003c7a      415e           pop r14
0x00003c7c      c3             ret
0x00003c7d      0f1f00         nop dword [rax]
;-- close_stdin_set_file_name:
0x00003c80      48893d79b420.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closein.c:44 ; [0x20f100:8]=0
0x00003c87      c3             ret                                     ; ../coreutils-8.31/lib/closein.c:46
0x00003c88      0f1f84000000.  nop dword [rax + rax]
;-- close_stdin:
0x00003c90      4154           push r12                                ; ../coreutils-8.31/lib/closein.c:80
0x00003c92      55             push rbp
0x00003c93      53             push rbx
0x00003c94      488b1d15b420.  mov rbx, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:87 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20f0b0:8]=0
0x00003c9b      4889df         mov rdi, rbx
0x00003c9e      e88d2c0000     call sym.freadahead
0x00003ca3      4885c0         test rax, rax
0x00003ca6      0f859c000000   jne 0x3d48
0x00003cac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:94
0x00003caf      e8bc510000     call sym.close_stream
0x00003cb4      85c0           test eax, eax
0x00003cb6      7530           jne 0x3ce8
0x00003cb8      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x00003cb9      5d             pop rbp
0x00003cba      415c           pop r12
0x00003cbc      e9ff000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x00003cc1      0f1f80000000.  nop dword [rax]
0x00003cc8      e8232c0000     call sym.rpl_fflush                     ; ../coreutils-8.31/lib/closein.c:91
0x00003ccd      85c0           test eax, eax
0x00003ccf      488b3ddab320.  mov rdi, qword [obj.stdin]              ; ../coreutils-8.31/lib/closein.c:94 ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20f0b0:8]=0
0x00003cd6      0f848a000000   je 0x3d66                               ; ../coreutils-8.31/lib/closein.c:91
0x00003cdc      e88f510000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x00003ce1      0f1f80000000.  nop dword [rax]
0x00003ce8      488d35a37b00.  lea rsi, str.error_closing_file         ; ../coreutils-8.31/lib/closein.c:100 ; 0xb892 ; "error closing file"
0x00003cef      31ff           xor edi, edi
0x00003cf1      ba05000000     mov edx, 5
0x00003cf6      e865ddffff     call sym.imp.dcgettext
0x00003cfb      488b1dfeb320.  mov rbx, qword [obj.file_name]          ; ../coreutils-8.31/lib/closein.c:101 ; [0x20f100:8]=0
0x00003d02      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/closein.c:100
0x00003d05      e896dcffff     call sym.imp.__errno_location
0x00003d0a      4889c5         mov rbp, rax
0x00003d0d      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/closein.c:101
0x00003d10      746e           je 0x3d80
0x00003d12      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/closein.c:102
0x00003d15      e8261f0000     call sym.quotearg_colon
0x00003d1a      8b7500         mov esi, dword [rbp]
0x00003d1d      488d15817b00.  lea rdx, str.s:__s                      ; 0xb8a5 ; "%s: %s"
0x00003d24      4889c1         mov rcx, rax
0x00003d27      4d89e0         mov r8, r12
0x00003d2a      31ff           xor edi, edi
0x00003d2c      31c0           xor eax, eax
0x00003d2e      e89ddfffff     call sym.imp.error
0x00003d33      e888000000     call sym.close_stdout                   ; ../coreutils-8.31/lib/closein.c:108
0x00003d38      8b3de2b22000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closein.c:111 ; [0x20f020:4]=1
0x00003d3e      e87ddcffff     call sym.imp._exit
0x00003d43      0f1f440000     nop dword [rax + rax]
0x00003d48      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/closein.c:91
0x00003d4a      4889df         mov rdi, rbx
0x00003d4d      ba01000000     mov edx, 1
0x00003d52      e8092c0000     call sym.rpl_fseeko
0x00003d57      85c0           test eax, eax
0x00003d59      488b3d50b320.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20f0b0:8]=0
0x00003d60      0f8462ffffff   je 0x3cc8
0x00003d66      e805510000     call sym.close_stream                   ; ../coreutils-8.31/lib/closein.c:94
0x00003d6b      85c0           test eax, eax
0x00003d6d      0f8575ffffff   jne 0x3ce8
0x00003d73      5b             pop rbx                                 ; ../coreutils-8.31/lib/closein.c:112
0x00003d74      5d             pop rbp
0x00003d75      415c           pop r12
0x00003d77      e944000000     jmp sym.close_stdout                    ; ../coreutils-8.31/lib/closein.c:108
0x00003d7c      0f1f4000       nop dword [rax]
0x00003d80      8b30           mov esi, dword [rax]                    ; ../coreutils-8.31/lib/closein.c:105
0x00003d82      488d15067b00.  lea rdx, [0x0000b88f]                   ; "%s"
0x00003d89      4c89e1         mov rcx, r12
0x00003d8c      31ff           xor edi, edi
0x00003d8e      31c0           xor eax, eax
0x00003d90      e83bdfffff     call sym.imp.error
0x00003d95      eb9c           jmp 0x3d33
0x00003d97      660f1f840000.  nop word [rax + rax]
;-- close_stdout_set_file_name:
0x00003da0      48893d69b320.  mov qword [obj.file_name_1], rdi        ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20f110:8]=0
0x00003da7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003da8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003db0      40883d51b320.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20f108:1]=0
0x00003db7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003db8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x00003dc0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x00003dc1      53             push rbx
0x00003dc2      4883ec08       sub rsp, 8
0x00003dc6      488b3ddbb220.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x00003dcd      e89e500000     call sym.close_stream
0x00003dd2      85c0           test eax, eax
0x00003dd4      7416           je 0x3dec
0x00003dd6      e8c5dbffff     call sym.imp.__errno_location
0x00003ddb      803d26b32000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20f108:1]=0
0x00003de2      4889c3         mov rbx, rax
0x00003de5      741c           je 0x3e03
0x00003de7      833820         cmp dword [rax], 0x20
0x00003dea      7517           jne 0x3e03
0x00003dec      488b3dedb220.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x00003df3      e878500000     call sym.close_stream
0x00003df8      85c0           test eax, eax
0x00003dfa      7546           jne 0x3e42
0x00003dfc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003e00      5b             pop rbx
0x00003e01      5d             pop rbp
0x00003e02      c3             ret
0x00003e03      488d35a27a00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0xb8ac ; "write error"
0x00003e0a      31ff           xor edi, edi
0x00003e0c      ba05000000     mov edx, 5
0x00003e11      e84adcffff     call sym.imp.dcgettext
0x00003e16      488b3df3b220.  mov rdi, qword [obj.file_name_1]        ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20f110:8]=0
0x00003e1d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003e20      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003e23      7428           je 0x3e4d
0x00003e25      e8161e0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00003e2a      8b33           mov esi, dword [rbx]
0x00003e2c      488d15727a00.  lea rdx, str.s:__s                      ; 0xb8a5 ; "%s: %s"
0x00003e33      4889c1         mov rcx, rax
0x00003e36      4989e8         mov r8, rbp
0x00003e39      31ff           xor edi, edi
0x00003e3b      31c0           xor eax, eax
0x00003e3d      e88edeffff     call sym.imp.error
0x00003e42      8b3dd8b12000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20f020:4]=1
0x00003e48      e873dbffff     call sym.imp._exit
0x00003e4d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00003e4f      488d15397a00.  lea rdx, [0x0000b88f]                   ; "%s"
0x00003e56      4889c1         mov rcx, rax
0x00003e59      31ff           xor edi, edi
0x00003e5b      31c0           xor eax, eax
0x00003e5d      e86edeffff     call sym.imp.error
0x00003e62      ebde           jmp 0x3e42
0x00003e64      662e0f1f8400.  nop word cs:[rax + rax]
0x00003e6e      6690           nop
;-- last_component:
0x00003e70      0fb617         movzx edx, byte [rdi]                   ; ../coreutils-8.31/lib/basename-lgpl.c:31
0x00003e73      4889f8         mov rax, rdi
0x00003e76      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00003e79      7511           jne 0x3e8c
0x00003e7b      0f1f440000     nop dword [rax + rax]
0x00003e80      4883c001       add rax, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:37
0x00003e84      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/basename-lgpl.c:36
0x00003e87      80fa2f         cmp dl, 0x2f
0x00003e8a      74f4           je 0x3e80
0x00003e8c      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00003e8e      743a           je 0x3eca
0x00003e90      4889c1         mov rcx, rax
0x00003e93      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:34
0x00003e95      eb1e           jmp 0x3eb5
0x00003e97      660f1f840000.  nop word [rax + rax]
0x00003ea0      4084f6         test sil, sil                           ; ../coreutils-8.31/lib/basename-lgpl.c:43
0x00003ea3      7405           je 0x3eaa
0x00003ea5      4889c8         mov rax, rcx
0x00003ea8      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/basename-lgpl.c:46
0x00003eaa      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00003eae      0fb611         movzx edx, byte [rcx]
0x00003eb1      84d2           test dl, dl
0x00003eb3      7415           je 0x3eca
0x00003eb5      80fa2f         cmp dl, 0x2f                            ; ../coreutils-8.31/lib/basename-lgpl.c:41
0x00003eb8      75e6           jne 0x3ea0
0x00003eba      4883c101       add rcx, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00003ebe      0fb611         movzx edx, byte [rcx]
0x00003ec1      be01000000     mov esi, 1                              ; ../coreutils-8.31/lib/basename-lgpl.c:42
0x00003ec6      84d2           test dl, dl                             ; ../coreutils-8.31/lib/basename-lgpl.c:39
0x00003ec8      75eb           jne 0x3eb5
0x00003eca      f3c3           ret                                     ; ../coreutils-8.31/lib/basename-lgpl.c:51
0x00003ecc      0f1f4000       nop dword [rax]
;-- base_len:
0x00003ed0      53             push rbx                                ; ../coreutils-8.31/lib/basename-lgpl.c:59
0x00003ed1      4889fb         mov rbx, rdi
0x00003ed4      e8a7dbffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00003ed9      4883f801       cmp rax, 1
0x00003edd      760b           jbe 0x3eea
0x00003edf      807c03ff2f     cmp byte [rbx + rax - 1], 0x2f
0x00003ee4      488d50ff       lea rdx, [rax - 1]
0x00003ee8      740e           je 0x3ef8
0x00003eea      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00003eeb      c3             ret
0x00003eec      0f1f4000       nop dword [rax]
0x00003ef0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/basename-lgpl.c:63
0x00003ef3      0f1f440000     nop dword [rax + rax]
0x00003ef8      4883fa01       cmp rdx, 1
0x00003efc      7412           je 0x3f10
0x00003efe      807c13ff2f     cmp byte [rbx + rdx - 1], 0x2f
0x00003f03      488d42ff       lea rax, [rdx - 1]
0x00003f07      74e7           je 0x3ef0
0x00003f09      4889d0         mov rax, rdx
0x00003f0c      5b             pop rbx                                 ; ../coreutils-8.31/lib/basename-lgpl.c:75
0x00003f0d      c3             ret
0x00003f0e      6690           nop
0x00003f10      b801000000     mov eax, 1
0x00003f15      5b             pop rbx
0x00003f16      c3             ret
0x00003f17      660f1f840000.  nop word [rax + rax]
;-- file_type:
0x00003f20      8b4718         mov eax, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/file-type.c:30
0x00003f23      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/file-type.c:40
0x00003f28      2500f00000     and eax, 0xf000                         ; ../coreutils-8.31/lib/file-type.c:39
0x00003f2d      3d00800000     cmp eax, 0x8000
0x00003f32      744c           je 0x3f80
0x00003f34      3d00400000     cmp eax, 0x4000                         ; ../coreutils-8.31/lib/file-type.c:42 ; "H\x8d5\x13y"
0x00003f39      0f8491000000   je 0x3fd0
0x00003f3f      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/file-type.c:45
0x00003f44      746a           je 0x3fb0
0x00003f46      3d00600000     cmp eax, 0x6000                         ; ../coreutils-8.31/lib/file-type.c:65
0x00003f4b      0f848f000000   je 0x3fe0
0x00003f51      3d00200000     cmp eax, 0x2000                         ; ../coreutils-8.31/lib/file-type.c:68
0x00003f56      0f8494000000   je 0x3ff0
0x00003f5c      3d00100000     cmp eax, 0x1000                         ; ../coreutils-8.31/lib/file-type.c:74
0x00003f61      0f8499000000   je 0x4000
0x00003f67      3d00c00000     cmp eax, 0xc000                         ; ../coreutils-8.31/lib/file-type.c:104
0x00003f6c      7452           je 0x3fc0
0x00003f6e      488d35b17900.  lea rsi, str.weird_file                 ; ../coreutils-8.31/lib/file-type.c:110 ; 0xb926 ; "weird file"
0x00003f75      31ff           xor edi, edi
0x00003f77      e9e4daffff     jmp sym.imp.dcgettext
0x00003f7c      0f1f4000       nop dword [rax]
0x00003f80      48837f3000     cmp qword [rdi + 0x30], 0               ; ../coreutils-8.31/lib/file-type.c:40
0x00003f85      7511           jne 0x3f98
0x00003f87      488d352a7900.  lea rsi, str.regular_empty_file         ; 0xb8b8 ; "regular empty file"
0x00003f8e      31ff           xor edi, edi
0x00003f90      e9cbdaffff     jmp sym.imp.dcgettext
0x00003f95      0f1f00         nop dword [rax]
0x00003f98      488d352c7900.  lea rsi, str.regular_file               ; 0xb8cb ; "regular file"
0x00003f9f      31ff           xor edi, edi
0x00003fa1      e9badaffff     jmp sym.imp.dcgettext
0x00003fa6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003fb0      488d352b7900.  lea rsi, str.symbolic_link              ; ../coreutils-8.31/lib/file-type.c:46 ; 0xb8e2 ; "symbolic link"
0x00003fb7      31ff           xor edi, edi
0x00003fb9      e9a2daffff     jmp sym.imp.dcgettext
0x00003fbe      6690           nop
0x00003fc0      488d35587900.  lea rsi, str.socket                     ; ../coreutils-8.31/lib/file-type.c:105 ; 0xb91f ; "socket"
0x00003fc7      31ff           xor edi, edi
0x00003fc9      e992daffff     jmp sym.imp.dcgettext
0x00003fce      6690           nop
0x00003fd0      488d35017900.  lea rsi, str.directory                  ; ../coreutils-8.31/lib/file-type.c:43 ; 0xb8d8 ; "directory"
0x00003fd7      31ff           xor edi, edi
0x00003fd9      e982daffff     jmp sym.imp.dcgettext
0x00003fde      6690           nop
0x00003fe0      488d35097900.  lea rsi, str.block_special_file         ; ../coreutils-8.31/lib/file-type.c:66 ; 0xb8f0 ; "block special file"
0x00003fe7      31ff           xor edi, edi
0x00003fe9      e972daffff     jmp sym.imp.dcgettext
0x00003fee      6690           nop
0x00003ff0      488d350c7900.  lea rsi, str.character_special_file     ; ../coreutils-8.31/lib/file-type.c:69 ; 0xb903 ; "character special file"
0x00003ff7      31ff           xor edi, edi
0x00003ff9      e962daffff     jmp sym.imp.dcgettext
0x00003ffe      6690           nop
0x00004000      488d35137900.  lea rsi, str.fifo                       ; ../coreutils-8.31/lib/file-type.c:75 ; 0xb91a ; "fifo"
0x00004007      31ff           xor edi, edi
0x00004009      e952daffff     jmp sym.imp.dcgettext
0x0000400e      6690           nop
;-- file_name_concat:
0x00004010      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:36
0x00004014      e817000000     call sym.mfile_name_concat              ; ../coreutils-8.31/lib/filenamecat.c:37
0x00004019      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat.c:38
0x0000401c      7405           je 0x4023
0x0000401e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/filenamecat.c:41
0x00004022      c3             ret
0x00004023      e868270000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/filenamecat.c:39
0x00004028      0f1f84000000.  nop dword [rax + rax]
;-- mfile_name_concat:
0x00004030      4157           push r15                                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:48
0x00004032      4156           push r14
0x00004034      4989d7         mov r15, rdx
0x00004037      4155           push r13
0x00004039      4154           push r12
0x0000403b      4989fc         mov r12, rdi
0x0000403e      55             push rbp
0x0000403f      53             push rbx
0x00004040      4889f5         mov rbp, rsi
0x00004043      4883ec18       sub rsp, 0x18
0x00004047      e824feffff     call sym.last_component                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:49
0x0000404c      4889c3         mov rbx, rax
0x0000404f      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x00004052      e879feffff     call sym.base_len
0x00004057      4c29e3         sub rbx, r12                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x0000405a      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:50
0x0000405d      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00004060      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:51
0x00004063      e818daffff     call sym.imp.strlen                     ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x00004068      4d85ed         test r13, r13                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x0000406b      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:52
0x0000406e      7430           je 0x40a0                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:54
0x00004070      41807c1cff2f   cmp byte [r12 + rbx - 1], 0x2f          ; ../coreutils-8.31/lib/filenamecat-lgpl.c:57
0x00004076      0f84a4000000   je 0x4120
0x0000407c      31c0           xor eax, eax
0x0000407e      807d002f       cmp byte [rbp], 0x2f
0x00004082      ba00000000     mov edx, 0
0x00004087      0f95c0         setne al
0x0000408a      48890424       mov qword [rsp], rax
0x0000408e      b82f000000     mov eax, 0x2f                           ; '/'
0x00004093      0f44c2         cmove eax, edx
0x00004096      8844240f       mov byte [rsp + 0xf], al
0x0000409a      eb22           jmp 0x40be
0x0000409c      0f1f4000       nop dword [rax]
0x000040a0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:60
0x000040a2      807d002f       cmp byte [rbp], 0x2f
0x000040a6      ba00000000     mov edx, 0
0x000040ab      0f94c0         sete al
0x000040ae      48890424       mov qword [rsp], rax
0x000040b2      b82e000000     mov eax, 0x2e                           ; '.'
0x000040b7      0f45c2         cmovne eax, edx
0x000040ba      8844240f       mov byte [rsp + 0xf], al
0x000040be      4a8d7c3301     lea rdi, [rbx + r14 + 1]                ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x000040c3      48033c24       add rdi, qword [rsp]
0x000040c7      e854dbffff     call sym.imp.malloc
0x000040cc      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x000040cf      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/filenamecat-lgpl.c:70
0x000040d2      7432           je 0x4106                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:73
0x000040d4      4889c7         mov rdi, rax                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000040d7      4889da         mov rdx, rbx
0x000040da      4c89e6         mov rsi, r12
0x000040dd      e8cedbffff     call sym.imp.mempcpy
0x000040e2      0fb64c240f     movzx ecx, byte [rsp + 0xf]             ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x000040e7      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:78
0x000040eb      4801c7         add rdi, rax
0x000040ee      4d85ff         test r15, r15                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x000040f1      8808           mov byte [rax], cl                      ; ../coreutils-8.31/lib/filenamecat-lgpl.c:77
0x000040f3      7403           je 0x40f8                               ; ../coreutils-8.31/lib/filenamecat-lgpl.c:80
0x000040f5      49893f         mov qword [r15], rdi                    ; ../coreutils-8.31/lib/filenamecat-lgpl.c:81
0x000040f8      4c89f2         mov rdx, r14                            ; string_fortified.h:48   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000040fb      4889ee         mov rsi, rbp
0x000040fe      e8addbffff     call sym.imp.mempcpy
0x00004103      c60000         mov byte [rax], 0                       ; ../coreutils-8.31/lib/filenamecat-lgpl.c:84
0x00004106      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/filenamecat-lgpl.c:87
0x0000410a      4c89e8         mov rax, r13
0x0000410d      5b             pop rbx
0x0000410e      5d             pop rbp
0x0000410f      415c           pop r12
0x00004111      415d           pop r13
0x00004113      415e           pop r14
0x00004115      415f           pop r15
0x00004117      c3             ret
0x00004118      0f1f84000000.  nop dword [rax + rax]
0x00004120      48c704240000.  mov qword [rsp], 0
0x00004128      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/filenamecat-lgpl.c:53
0x0000412d      eb8f           jmp 0x40be
0x0000412f      90             nop
;-- set_program_name:
0x00004130      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00004133      53             push rbx
0x00004134      7477           je 0x41ad                               ; ../coreutils-8.31/lib/progname.c:51
0x00004136      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x0000413b      4889fb         mov rbx, rdi
0x0000413e      e8bdd9ffff     call sym.imp.strrchr
0x00004143      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00004146      7455           je 0x419d
0x00004148      4c8d4001       lea r8, [rax + 1]
0x0000414c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000414f      4829da         sub rdx, rbx
0x00004152      4883fa06       cmp rdx, 6
0x00004156      7e45           jle 0x419d
0x00004158      488d70fa       lea rsi, [rax - 6]
0x0000415c      488d3d0d7800.  lea rdi, str..libs                      ; 0xb970 ; "/.libs/"
0x00004163      b907000000     mov ecx, 7
0x00004168      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000416a      0f97c2         seta dl
0x0000416d      80da00         sbb dl, 0
0x00004170      84d2           test dl, dl
0x00004172      7529           jne 0x419d
0x00004174      488d3dfd7700.  lea rdi, [0x0000b978]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000417b      b903000000     mov ecx, 3
0x00004180      4c89c6         mov rsi, r8
0x00004183      4c89c3         mov rbx, r8
0x00004186      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00004188      0f97c2         seta dl
0x0000418b      80da00         sbb dl, 0
0x0000418e      84d2           test dl, dl
0x00004190      750b           jne 0x419d
0x00004192      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00004196      48891d03af20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20f0a0:8]=0
0x0000419d      48891d74af20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20f118:8]=0
0x000041a4      48891d1daf20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20f0c8:8]=0
0x000041ab      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x000041ac      c3             ret
0x000041ad      488b0d2caf20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20f0e0:8]=0
0x000041b4      488d3d7d7700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0xb938 ; "A NULL argv[0] was passed through an exec system call.\n"
0x000041bb      ba37000000     mov edx, 0x37                           ; '7'
0x000041c0      be01000000     mov esi, 1
0x000041c5      e886dbffff     call sym.imp.fwrite
0x000041ca      e8c1d7ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x000041cf      90             nop
;-- gettext_quote.part.1:
0x000041d0      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x000041d1      53             push rbx
0x000041d2      4889fd         mov rbp, rdi
0x000041d5      89f3           mov ebx, esi
0x000041d7      4883ec08       sub rsp, 8
0x000041db      e810620000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000041e0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000041e3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000041e6      80fa55         cmp dl, 0x55
0x000041e9      7475           je 0x4260
0x000041eb      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000041ee      7420           je 0x4210
0x000041f0      488d05947700.  lea rax, str.l______l                   ; 0xb98b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041f7      488d158f7700.  lea rdx, [0x0000b98d]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041fe      83fb09         cmp ebx, 9
0x00004201      480f45c2       cmovne rax, rdx
0x00004205      4883c408       add rsp, 8
0x00004209      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000420a      5d             pop rbp
0x0000420b      c3             ret
0x0000420c      0f1f4000       nop dword [rax]
0x00004210      0fb65001       movzx edx, byte [rax + 1]
0x00004214      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004217      80fa42         cmp dl, 0x42
0x0000421a      75d4           jne 0x41f0
0x0000421c      80780231       cmp byte [rax + 2], 0x31
0x00004220      75ce           jne 0x41f0
0x00004222      80780338       cmp byte [rax + 3], 0x38
0x00004226      75c8           jne 0x41f0
0x00004228      80780430       cmp byte [rax + 4], 0x30
0x0000422c      75c2           jne 0x41f0
0x0000422e      80780533       cmp byte [rax + 5], 0x33
0x00004232      75bc           jne 0x41f0
0x00004234      80780630       cmp byte [rax + 6], 0x30
0x00004238      75b6           jne 0x41f0
0x0000423a      80780700       cmp byte [rax + 7], 0
0x0000423e      75b0           jne 0x41f0
0x00004240      807d0060       cmp byte [rbp], 0x60
0x00004244      488d05397700.  lea rax, [0x0000b984]
0x0000424b      488d15367700.  lea rdx, [0x0000b988]
0x00004252      480f45c2       cmovne rax, rdx
0x00004256      4883c408       add rsp, 8
0x0000425a      5b             pop rbx
0x0000425b      5d             pop rbp
0x0000425c      c3             ret
0x0000425d      0f1f00         nop dword [rax]
0x00004260      0fb65001       movzx edx, byte [rax + 1]
0x00004264      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004267      80fa54         cmp dl, 0x54
0x0000426a      7584           jne 0x41f0
0x0000426c      0fb65002       movzx edx, byte [rax + 2]
0x00004270      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00004273      80fa46         cmp dl, 0x46
0x00004276      0f8574ffffff   jne 0x41f0
0x0000427c      8078032d       cmp byte [rax + 3], 0x2d
0x00004280      0f856affffff   jne 0x41f0
0x00004286      80780438       cmp byte [rax + 4], 0x38
0x0000428a      0f8560ffffff   jne 0x41f0
0x00004290      80780500       cmp byte [rax + 5], 0
0x00004294      0f8556ffffff   jne 0x41f0
0x0000429a      807d0060       cmp byte [rbp], 0x60
0x0000429e      488d05d77600.  lea rax, [0x0000b97c]                   ; "\u2018"
0x000042a5      488d15d47600.  lea rdx, [0x0000b980]                   ; "\u2019"
0x000042ac      480f45c2       cmovne rax, rdx
0x000042b0      4883c408       add rsp, 8
0x000042b4      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x000042b5      5d             pop rbp
0x000042b6      c3             ret
0x000042b7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x000042c0      4157           push r15
0x000042c2      4156           push r14
0x000042c4      4589c7         mov r15d, r8d
0x000042c7      4155           push r13
0x000042c9      4154           push r12
0x000042cb      4989fe         mov r14, rdi
0x000042ce      55             push rbp
0x000042cf      53             push rbx
0x000042d0      4489cb         mov ebx, r9d
0x000042d3      4989f5         mov r13, rsi
0x000042d6      4889cd         mov rbp, rcx
0x000042d9      83e302         and ebx, 2
0x000042dc      4881ecb80000.  sub rsp, 0xb8
0x000042e3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x000042eb      4889542410     mov qword [rsp + 0x10], rdx
0x000042f0      4489442408     mov dword [rsp + 8], r8d
0x000042f5      44894c2478     mov dword [rsp + 0x78], r9d
0x000042fa      4889442420     mov qword [rsp + 0x20], rax
0x000042ff      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00004307      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000430c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00004314      4889442460     mov qword [rsp + 0x60], rax
0x00004319      64488b042528.  mov rax, qword fs:[0x28]
0x00004322      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000432a      31c0           xor eax, eax
0x0000432c      e83fd7ffff     call sym.imp.__ctype_get_mb_cur_max
0x00004331      4183ff0a       cmp r15d, 0xa
0x00004335      4889442458     mov qword [rsp + 0x58], rax
0x0000433a      0f87af110000   ja 0x54ef
0x00004340      488d0d997600.  lea rcx, [0x0000b9e0]
0x00004347      4489fa         mov edx, r15d
0x0000434a      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000434e      4801c8         add rax, rcx
0x00004351      ffe0           jmp rax
0x00004353      c644240e01     mov byte [rsp + 0xe], 1
0x00004358      c644247c00     mov byte [rsp + 0x7c], 0
0x0000435d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00004360      48c744245000.  mov qword [rsp + 0x50], 0
0x00004369      c644240f01     mov byte [rsp + 0xf], 1
0x0000436e      c644240d00     mov byte [rsp + 0xd], 0
0x00004373      488d05137600.  lea rax, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000437a      48c744241801.  mov qword [rsp + 0x18], 1
0x00004383      4531ff         xor r15d, r15d
0x00004386      c74424080200.  mov dword [rsp + 8], 2
0x0000438e      4889442448     mov qword [rsp + 0x48], rax
0x00004393      4531db         xor r11d, r11d
0x00004396      4889e8         mov rax, rbp
0x00004399      4589e0         mov r8d, r12d
0x0000439c      4c89dd         mov rbp, r11
0x0000439f      4989c3         mov r11, rax
0x000043a2      660f1f440000   nop word [rax + rax]
0x000043a8      4939eb         cmp r11, rbp
0x000043ab      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x000043af      4983fbff       cmp r11, 0xffffffffffffffff
0x000043b3      750d           jne 0x43c2
0x000043b5      488b442410     mov rax, qword [rsp + 0x10]
0x000043ba      803c2800       cmp byte [rax + rbp], 0
0x000043be      410f95c4       setne r12b
0x000043c2      4584e4         test r12b, r12b
0x000043c5      0f8455060000   je 0x4a20
0x000043cb      837c240802     cmp dword [rsp + 8], 2
0x000043d0      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000043d5      4c8d0c2f       lea r9, [rdi + rbp]
0x000043d9      0f95c0         setne al
0x000043dc      2244240d       and al, byte [rsp + 0xd]
0x000043e0      4189c2         mov r10d, eax
0x000043e3      0f84a7000000   je 0x4490
0x000043e9      488b442418     mov rax, qword [rsp + 0x18]
0x000043ee      4885c0         test rax, rax
0x000043f1      0f8429040000   je 0x4820
0x000043f7      4983fbff       cmp r11, 0xffffffffffffffff
0x000043fb      488d5c0500     lea rbx, [rbp + rax]
0x00004400      752e           jne 0x4430
0x00004402      4883f801       cmp rax, 1
0x00004406      7628           jbe 0x4430
0x00004408      4488442438     mov byte [rsp + 0x38], r8b
0x0000440d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00004412      4c894c2428     mov qword [rsp + 0x28], r9
0x00004417      e864d6ffff     call sym.imp.strlen
0x0000441c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00004422      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00004428      4989c3         mov r11, rax
0x0000442b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004430      4c39db         cmp rbx, r11
0x00004433      4488542428     mov byte [rsp + 0x28], r10b
0x00004438      0f87b2050000   ja 0x49f0
0x0000443e      488b542418     mov rdx, qword [rsp + 0x18]
0x00004443      488b742448     mov rsi, qword [rsp + 0x48]
0x00004448      4c89cf         mov rdi, r9
0x0000444b      4c895c2440     mov qword [rsp + 0x40], r11
0x00004450      4488442438     mov byte [rsp + 0x38], r8b
0x00004455      4c894c2430     mov qword [rsp + 0x30], r9
0x0000445a      e811d7ffff     call sym.imp.memcmp
0x0000445f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00004461      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004466      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x0000446c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00004471      0f8579050000   jne 0x49f0
0x00004477      807c240f00     cmp byte [rsp + 0xf], 0
0x0000447c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00004482      0f857d0f0000   jne 0x5405
0x00004488      0f1f84000000.  nop dword [rax + rax]
0x00004490      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00004494      80fb7e         cmp bl, 0x7e
0x00004497      0f871b030000   ja 0x47b8
0x0000449d      488d0d687500.  lea rcx, [0x0000ba0c]
0x000044a4      0fb6d3         movzx edx, bl
0x000044a7      48630491       movsxd rax, dword [rcx + rdx*4]
0x000044ab      4801c8         add rax, rcx
0x000044ae      ffe0           jmp rax
0x000044b0      4531d2         xor r10d, r10d
0x000044b3      4983fb01       cmp r11, 1
0x000044b7      0f95c0         setne al
0x000044ba      4983fbff       cmp r11, 0xffffffffffffffff
0x000044be      750c           jne 0x44cc
0x000044c0      488b442410     mov rax, qword [rsp + 0x10]
0x000044c5      80780100       cmp byte [rax + 1], 0
0x000044c9      0f95c0         setne al
0x000044cc      837c240802     cmp dword [rsp + 8], 2
0x000044d1      0f94c2         sete dl
0x000044d4      84c0           test al, al
0x000044d6      0f844c020000   je 0x4728
0x000044dc      4531e4         xor r12d, r12d
0x000044df      31c0           xor eax, eax
0x000044e1      0f1f80000000.  nop dword [rax]
0x000044e8      807c240d01     cmp byte [rsp + 0xd], 1
0x000044ed      0f850f010000   jne 0x4602
0x000044f3      84d2           test dl, dl
0x000044f5      0f8507010000   jne 0x4602
0x000044fb      488b742420     mov rsi, qword [rsp + 0x20]
0x00004500      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00004503      7414           je 0x4519
0x00004505      89da           mov edx, ebx
0x00004507      c0ea05         shr dl, 5
0x0000450a      0fb6d2         movzx edx, dl
0x0000450d      8b1496         mov edx, dword [rsi + rdx*4]
0x00004510      0fa3da         bt edx, ebx
0x00004513      0f824a010000   jb 0x4663
0x00004519      4584d2         test r10b, r10b
0x0000451c      0f8541010000   jne 0x4663
0x00004522      83f001         xor eax, 1
0x00004525      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00004529      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000452c      84c0           test al, al
0x0000452e      7420           je 0x4550                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00004530      4d39fd         cmp r13, r15
0x00004533      7605           jbe 0x453a
0x00004535      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000453a      498d4701       lea rax, [r15 + 1]
0x0000453e      4939c5         cmp r13, rax
0x00004541      7606           jbe 0x4549
0x00004543      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004549      4983c702       add r15, 2
0x0000454d      4531c0         xor r8d, r8d
0x00004550      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00004553      7304           jae 0x4559                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00004555      43881c3e       mov byte [r14 + r15], bl
0x00004559      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x0000455e      4983c701       add r15, 1
0x00004562      b800000000     mov eax, 0
0x00004567      4584e4         test r12b, r12b
0x0000456a      0f44f8         cmove edi, eax
0x0000456d      40887c240e     mov byte [rsp + 0xe], dil
0x00004572      e931feffff     jmp 0x43a8
0x00004577      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00004580      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00004583      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00004587      83f802         cmp eax, 2
0x0000458a      0f84b8050000   je 0x4b48
0x00004590      83f805         cmp eax, 5
0x00004593      0f846f050000   je 0x4b08
0x00004599      83f802         cmp eax, 2
0x0000459c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000045a1      0f94c2         sete dl
0x000045a4      4531e4         xor r12d, r12d
0x000045a7      31c0           xor eax, eax
0x000045a9      e93affffff     jmp 0x44e8
0x000045ae      6690           nop
0x000045b0      4531d2         xor r10d, r10d
0x000045b3      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x000045b8      0f8402050000   je 0x4ac0
0x000045be      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x000045c3      31d2           xor edx, edx
0x000045c5      31c0           xor eax, eax
0x000045c7      bb27000000     mov ebx, 0x27                           ; '''
0x000045cc      e917ffffff     jmp 0x44e8
0x000045d1      0f1f80000000.  nop dword [rax]
0x000045d8      ba09000000     mov edx, 9
0x000045dd      bb74000000     mov ebx, 0x74                           ; 't'
0x000045e2      837c240802     cmp dword [rsp + 8], 2
0x000045e7      0f94c0         sete al
0x000045ea      2244240f       and al, byte [rsp + 0xf]
0x000045ee      0f854a010000   jne 0x473e
0x000045f4      807c240d00     cmp byte [rsp + 0xd], 0
0x000045f9      7565           jne 0x4660
0x000045fb      89d3           mov ebx, edx
0x000045fd      4531e4         xor r12d, r12d
0x00004600      31c0           xor eax, eax
0x00004602      807c240f00     cmp byte [rsp + 0xf], 0
0x00004607      0f85eefeffff   jne 0x44fb
0x0000460d      e907ffffff     jmp 0x4519                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00004612      660f1f440000   nop word [rax + rax]
0x00004618      ba08000000     mov edx, 8
0x0000461d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00004622      ebd0           jmp 0x45f4
0x00004624      0f1f4000       nop dword [rax]
0x00004628      837c240802     cmp dword [rsp + 8], 2
0x0000462d      0f84cd030000   je 0x4a00
0x00004633      807c240d00     cmp byte [rsp + 0xd], 0
0x00004638      0f8412020000   je 0x4850
0x0000463e      807c240f00     cmp byte [rsp + 0xf], 0
0x00004643      0f8407020000   je 0x4850
0x00004649      48837c241800   cmp qword [rsp + 0x18], 0
0x0000464f      0f85b6030000   jne 0x4a0b
0x00004655      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000465a      660f1f440000   nop word [rax + rax]
0x00004660      4531e4         xor r12d, r12d
0x00004663      837c240802     cmp dword [rsp + 8], 2
0x00004668      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x0000466b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004670      89d0           mov eax, edx
0x00004672      0f8550080000   jne 0x4ec8
0x00004678      4489c0         mov eax, r8d
0x0000467b      83f001         xor eax, 1
0x0000467e      20d0           and al, dl
0x00004680      742f           je 0x46b1
0x00004682      4d39fd         cmp r13, r15
0x00004685      7605           jbe 0x468c
0x00004687      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000468c      498d5701       lea rdx, [r15 + 1]
0x00004690      4939d5         cmp r13, rdx
0x00004693      7606           jbe 0x469b
0x00004695      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000469b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000469f      4939d5         cmp r13, rdx
0x000046a2      7606           jbe 0x46aa
0x000046a4      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046aa      4983c703       add r15, 3
0x000046ae      4189c0         mov r8d, eax
0x000046b1      4d39fd         cmp r13, r15
0x000046b4      7605           jbe 0x46bb
0x000046b6      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000046bb      4983c701       add r15, 1
0x000046bf      4883c501       add rbp, 1
0x000046c3      e988feffff     jmp 0x4550
0x000046c8      0f1f84000000.  nop dword [rax + rax]
0x000046d0      807c240d00     cmp byte [rsp + 0xd], 0
0x000046d5      0f85c8010000   jne 0x48a3
0x000046db      31d2           xor edx, edx
0x000046dd      f644247801     test byte [rsp + 0x78], 1
0x000046e2      0f8413ffffff   je 0x45fb
0x000046e8      4883c501       add rbp, 1
0x000046ec      e9b7fcffff     jmp 0x43a8
0x000046f1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x000046f8      837c240802     cmp dword [rsp + 8], 2
0x000046fd      0f94c2         sete dl
0x00004700      31c0           xor eax, eax
0x00004702      e9e1fdffff     jmp 0x44e8
0x00004707      660f1f840000.  nop word [rax + rax]
0x00004710      ba07000000     mov edx, 7
0x00004715      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000471a      e9d5feffff     jmp 0x45f4
0x0000471f      90             nop
0x00004720      837c240802     cmp dword [rsp + 8], 2
0x00004725      0f94c2         sete dl
0x00004728      4885ed         test rbp, rbp
0x0000472b      0f85abfdffff   jne 0x44dc
0x00004731      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004736      20d0           and al, dl
0x00004738      0f84aafdffff   je 0x44e8
0x0000473e      4c89dd         mov rbp, r11
0x00004741      c74424080200.  mov dword [rsp + 8], 2
0x00004749      e9fb060000     jmp 0x4e49
0x0000474e      6690           nop
0x00004750      837c240802     cmp dword [rsp + 8], 2
0x00004755      0f94c2         sete dl
0x00004758      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x0000475b      ebd4           jmp 0x4731
0x0000475d      0f1f00         nop dword [rax]
0x00004760      837c240802     cmp dword [rsp + 8], 2
0x00004765      bb20000000     mov ebx, 0x20                           ; "@"
0x0000476a      0f94c2         sete dl
0x0000476d      ebc2           jmp 0x4731
0x0000476f      90             nop
0x00004770      ba0d000000     mov edx, 0xd
0x00004775      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000477a      e963feffff     jmp 0x45e2
0x0000477f      90             nop
0x00004780      ba0c000000     mov edx, 0xc
0x00004785      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000478a      e965feffff     jmp 0x45f4
0x0000478f      90             nop
0x00004790      ba0b000000     mov edx, 0xb
0x00004795      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000479a      e955feffff     jmp 0x45f4
0x0000479f      90             nop
0x000047a0      ba0a000000     mov edx, 0xa
0x000047a5      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x000047aa      e933feffff     jmp 0x45e2
0x000047af      90             nop
0x000047b0      4531d2         xor r10d, r10d
0x000047b3      0f1f440000     nop dword [rax + rax]
0x000047b8      48837c245801   cmp qword [rsp + 0x58], 1
0x000047be      0f85a4030000   jne 0x4b68
0x000047c4      4c895c2438     mov qword [rsp + 0x38], r11
0x000047c9      4488442430     mov byte [rsp + 0x30], r8b
0x000047ce      4488542428     mov byte [rsp + 0x28], r10b
0x000047d3      e8b8d5ffff     call sym.imp.__ctype_b_loc
0x000047d8      488b08         mov rcx, qword [rax]
0x000047db      0fb6d3         movzx edx, bl
0x000047de      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000047e4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x000047ea      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x000047ef      bf01000000     mov edi, 1
0x000047f4      0fb70451       movzx eax, word [rcx + rdx*2]
0x000047f8      66250040       and ax, 0x4000                          ; "H\x8d5\x13y"
0x000047fc      410f95c4       setne r12b
0x00004800      0f94c0         sete al
0x00004803      2244240d       and al, byte [rsp + 0xd]
0x00004807      84c0           test al, al
0x00004809      0f8592090000   jne 0x51a1
0x0000480f      837c240802     cmp dword [rsp + 8], 2
0x00004814      0f94c2         sete dl
0x00004817      e9ccfcffff     jmp 0x44e8
0x0000481c      0f1f4000       nop dword [rax]
0x00004820      410fb619       movzx ebx, byte [r9]
0x00004824      80fb7e         cmp bl, 0x7e
0x00004827      7787           ja 0x47b0
0x00004829      488d0dd87300.  lea rcx, [0x0000bc08]
0x00004830      0fb6d3         movzx edx, bl
0x00004833      48630491       movsxd rax, dword [rcx + rdx*4]
0x00004837      4801c8         add rax, rcx
0x0000483a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000483c      0f1f4000       nop dword [rax]
0x00004840      4531d2         xor r10d, r10d
0x00004843      807c240d00     cmp byte [rsp + 0xd], 0
0x00004848      0f85f0fdffff   jne 0x463e
0x0000484e      6690           nop
0x00004850      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004855      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000485a      e995fdffff     jmp 0x45f4
0x0000485f      90             nop
0x00004860      ba0c000000     mov edx, 0xc
0x00004865      4531d2         xor r10d, r10d
0x00004868      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000486d      e982fdffff     jmp 0x45f4
0x00004872      660f1f440000   nop word [rax + rax]
0x00004878      ba0a000000     mov edx, 0xa
0x0000487d      4531d2         xor r10d, r10d
0x00004880      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004885      e958fdffff     jmp 0x45e2
0x0000488a      660f1f440000   nop word [rax + rax]
0x00004890      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004895      e9c6fdffff     jmp 0x4660
0x0000489a      660f1f440000   nop word [rax + rax]
0x000048a0      4531d2         xor r10d, r10d
0x000048a3      837c240802     cmp dword [rsp + 8], 2
0x000048a8      0f94c2         sete dl
0x000048ab      807c240f00     cmp byte [rsp + 0xf], 0
0x000048b0      0f85940b0000   jne 0x544a
0x000048b6      4489c0         mov eax, r8d
0x000048b9      4c89f9         mov rcx, r15
0x000048bc      83f001         xor eax, 1
0x000048bf      20d0           and al, dl
0x000048c1      742d           je 0x48f0
0x000048c3      4d39fd         cmp r13, r15
0x000048c6      7605           jbe 0x48cd
0x000048c8      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000048cd      498d4f01       lea rcx, [r15 + 1]
0x000048d1      4939cd         cmp r13, rcx
0x000048d4      7606           jbe 0x48dc
0x000048d6      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000048dc      498d4f02       lea rcx, [r15 + 2]
0x000048e0      4939cd         cmp r13, rcx
0x000048e3      0f8730060000   ja 0x4f19
0x000048e9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000048ed      4189c0         mov r8d, eax
0x000048f0      4939cd         cmp r13, rcx
0x000048f3      7605           jbe 0x48fa
0x000048f5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000048fa      837c240802     cmp dword [rsp + 8], 2
0x000048ff      4c8d7901       lea r15, [rcx + 1]
0x00004903      0f8400060000   je 0x4f09
0x00004909      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000490d      4c39d8         cmp rax, r11
0x00004910      7319           jae 0x492b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00004912      488b442410     mov rax, qword [rsp + 0x10]
0x00004917      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000491c      88442428       mov byte [rsp + 0x28], al
0x00004920      83e830         sub eax, 0x30
0x00004923      3c09           cmp al, 9
0x00004925      0f862e080000   jbe 0x5159
0x0000492b      4489e0         mov eax, r12d
0x0000492e      bb30000000     mov ebx, 0x30                           ; '0'
0x00004933      4531e4         xor r12d, r12d
0x00004936      e9adfbffff     jmp 0x44e8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000493b      0f1f440000     nop dword [rax + rax]
0x00004940      837c240802     cmp dword [rsp + 8], 2
0x00004945      4589d4         mov r12d, r10d
0x00004948      0f94c2         sete dl
0x0000494b      4531d2         xor r10d, r10d
0x0000494e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004950      e993fbffff     jmp 0x44e8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004955      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004958      837c240802     cmp dword [rsp + 8], 2
0x0000495d      0f94c2         sete dl
0x00004960      4531d2         xor r10d, r10d
0x00004963      e9c0fdffff     jmp 0x4728
0x00004968      0f1f84000000.  nop dword [rax + rax]
0x00004970      837c240802     cmp dword [rsp + 8], 2
0x00004975      0f94c2         sete dl
0x00004978      4531d2         xor r10d, r10d
0x0000497b      4531e4         xor r12d, r12d
0x0000497e      e9aefdffff     jmp 0x4731
0x00004983      0f1f440000     nop dword [rax + rax]
0x00004988      837c240802     cmp dword [rsp + 8], 2
0x0000498d      4589d4         mov r12d, r10d
0x00004990      bb20000000     mov ebx, 0x20                           ; "@"
0x00004995      0f94c2         sete dl
0x00004998      4531d2         xor r10d, r10d
0x0000499b      e991fdffff     jmp 0x4731
0x000049a0      ba0d000000     mov edx, 0xd
0x000049a5      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x000049a8      bb72000000     mov ebx, 0x72                           ; 'r'
0x000049ad      e930fcffff     jmp 0x45e2
0x000049b2      660f1f440000   nop word [rax + rax]
0x000049b8      bb76000000     mov ebx, 0x76                           ; 'v'
0x000049bd      e99efcffff     jmp 0x4660
0x000049c2      660f1f440000   nop word [rax + rax]
0x000049c8      ba09000000     mov edx, 9
0x000049cd      4531d2         xor r10d, r10d
0x000049d0      bb74000000     mov ebx, 0x74                           ; 't'
0x000049d5      e908fcffff     jmp 0x45e2
0x000049da      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000049e0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000049e5      e976fcffff     jmp 0x4660
0x000049ea      660f1f440000   nop word [rax + rax]
0x000049f0      4531d2         xor r10d, r10d
0x000049f3      e998faffff     jmp 0x4490
0x000049f8      0f1f84000000.  nop dword [rax + rax]
0x00004a00      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a05      0f8565090000   jne 0x5370
0x00004a0b      4883c501       add rbp, 1
0x00004a0f      4489c0         mov eax, r8d
0x00004a12      4531e4         xor r12d, r12d
0x00004a15      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00004a1a      e90dfbffff     jmp 0x452c
0x00004a1f      90             nop
0x00004a20      837c240802     cmp dword [rsp + 8], 2
0x00004a25      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004a2a      4589c4         mov r12d, r8d
0x00004a2d      4c89dd         mov rbp, r11
0x00004a30      0f94c2         sete dl
0x00004a33      89d8           mov eax, ebx
0x00004a35      4d85ff         test r15, r15
0x00004a38      0f94c1         sete cl
0x00004a3b      21d0           and eax, edx
0x00004a3d      20c8           and al, cl
0x00004a3f      0f85610a0000   jne 0x54a6                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004a45      89d8           mov eax, ebx
0x00004a47      83f001         xor eax, 1
0x00004a4a      20c2           and dl, al
0x00004a4c      0f846a090000   je 0x53bc
0x00004a52      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004a57      0f845d090000   je 0x53ba
0x00004a5d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004a62      0f85f5090000   jne 0x545d
0x00004a68      4d85ed         test r13, r13
0x00004a6b      0f94c0         sete al
0x00004a6e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004a74      0f95c2         setne dl
0x00004a77      20d0           and al, dl
0x00004a79      0f841d0a0000   je 0x549c
0x00004a7f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004a84      488d1d026f00.  lea rbx, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004a8b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00004a8f      c74424080200.  mov dword [rsp + 8], 2
0x00004a97      41bf01000000   mov r15d, 1
0x00004a9d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004aa6      c644240f00     mov byte [rsp + 0xf], 0
0x00004aab      48895c2448     mov qword [rsp + 0x48], rbx
0x00004ab0      8844247c       mov byte [rsp + 0x7c], al
0x00004ab4      e9daf8ffff     jmp 0x4393
0x00004ab9      0f1f80000000.  nop dword [rax]
0x00004ac0      807c240f00     cmp byte [rsp + 0xf], 0
0x00004ac5      0f85a5080000   jne 0x5370
0x00004acb      4d85ed         test r13, r13
0x00004ace      0f84fc030000   je 0x4ed0                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004ad4      31d2           xor edx, edx
0x00004ad6      48837c245000   cmp qword [rsp + 0x50], 0
0x00004adc      0f85ee030000   jne 0x4ed0                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00004ae2      4c896c2450     mov qword [rsp + 0x50], r13
0x00004ae7      4983c703       add r15, 3
0x00004aeb      31c0           xor eax, eax
0x00004aed      448864247c     mov byte [rsp + 0x7c], r12b
0x00004af2      4531c0         xor r8d, r8d
0x00004af5      4989d5         mov r13, rdx
0x00004af8      bb27000000     mov ebx, 0x27                           ; '''
0x00004afd      e917faffff     jmp 0x4519
0x00004b02      660f1f440000   nop word [rax + rax]
0x00004b08      f644247804     test byte [rsp + 0x78], 4
0x00004b0d      7421           je 0x4b30
0x00004b0f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00004b13      4c39d9         cmp rcx, r11
0x00004b16      7318           jae 0x4b30
0x00004b18      488b442410     mov rax, qword [rsp + 0x10]
0x00004b1d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00004b22      0f848a070000   je 0x52b2
0x00004b28      0f1f84000000.  nop dword [rax + rax]
0x00004b30      31d2           xor edx, edx
0x00004b32      4531e4         xor r12d, r12d
0x00004b35      31c0           xor eax, eax
0x00004b37      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004b3c      e9a7f9ffff     jmp 0x44e8
0x00004b41      0f1f80000000.  nop dword [rax]
0x00004b48      807c240f00     cmp byte [rsp + 0xf], 0
0x00004b4d      0f851d080000   jne 0x5370
0x00004b53      4531e4         xor r12d, r12d
0x00004b56      31c0           xor eax, eax
0x00004b58      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00004b5d      e9b7f9ffff     jmp 0x4519                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004b62      660f1f440000   nop word [rax + rax]
0x00004b68      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004b70      4983fbff       cmp r11, 0xffffffffffffffff
0x00004b74      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004b80      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004b85      752d           jne 0x4bb4
0x00004b87      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004b8c      4488442440     mov byte [rsp + 0x40], r8b
0x00004b91      4488542438     mov byte [rsp + 0x38], r10b
0x00004b96      4c894c2430     mov qword [rsp + 0x30], r9
0x00004b9b      e8e0ceffff     call sym.imp.strlen
0x00004ba0      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004ba6      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00004bac      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00004baf      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004bb4      488d84249c00.  lea rax, [rsp + 0x9c]
0x00004bbc      31c9           xor ecx, ecx
0x00004bbe      885c247e       mov byte [rsp + 0x7e], bl
0x00004bc2      448844247d     mov byte [rsp + 0x7d], r8b
0x00004bc7      4889cb         mov rbx, rcx
0x00004bca      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004bd2      4889442438     mov qword [rsp + 0x38], rax
0x00004bd7      448854247f     mov byte [rsp + 0x7f], r10b
0x00004bdc      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00004be4      4c89742440     mov qword [rsp + 0x40], r14
0x00004be9      4c896c2470     mov qword [rsp + 0x70], r13
0x00004bee      4c895c2430     mov qword [rsp + 0x30], r11
0x00004bf3      488b442410     mov rax, qword [rsp + 0x10]
0x00004bf8      4c8d741d00     lea r14, [rbp + rbx]
0x00004bfd      488b542430     mov rdx, qword [rsp + 0x30]
0x00004c02      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004c07      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004c0c      4e8d2c30       lea r13, [rax + r14]
0x00004c10      4c29f2         sub rdx, r14
0x00004c13      4c89ee         mov rsi, r13
0x00004c16      e8c5410000     call sym.rpl_mbrtowc
0x00004c1b      4885c0         test rax, rax
0x00004c1e      4989c7         mov r15, rax
0x00004c21      744e           je 0x4c71
0x00004c23      4883f8ff       cmp rax, 0xffffffffffffffff
0x00004c27      0f8418060000   je 0x5245
0x00004c2d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00004c31      0f849a050000   je 0x51d1
0x00004c37      837c240802     cmp dword [rsp + 8], 2
0x00004c3c      0f94c0         sete al
0x00004c3f      2244240f       and al, byte [rsp + 0xf]
0x00004c43      0f8597010000   jne 0x4de0
0x00004c49      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004c50      e82bd1ffff     call sym.imp.iswprint
0x00004c55      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00004c5a      85c0           test eax, eax
0x00004c5c      b800000000     mov eax, 0
0x00004c61      440f44e0       cmove r12d, eax
0x00004c65      4c01fb         add rbx, r15
0x00004c68      e803d1ffff     call sym.imp.mbsinit
0x00004c6d      85c0           test eax, eax
0x00004c6f      7482           je 0x4bf3
0x00004c71      4489e2         mov edx, r12d
0x00004c74      4889df         mov rdi, rbx
0x00004c77      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004c7d      83f201         xor edx, 1
0x00004c80      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004c85      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004c8b      2254240d       and dl, byte [rsp + 0xd]
0x00004c8f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004c97      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004c9c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004ca1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004ca6      4883ff01       cmp rdi, 1
0x00004caa      0f86fb050000   jbe 0x52ab
0x00004cb0      4889f9         mov rcx, rdi
0x00004cb3      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004cb5      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00004cbb      4801e9         add rcx, rbp
0x00004cbe      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004cc3      e9b6000000     jmp 0x4d7e
0x00004cc8      0f1f84000000.  nop dword [rax + rax]
0x00004cd0      837c240802     cmp dword [rsp + 8], 2
0x00004cd5      0f94c0         sete al
0x00004cd8      4584c9         test r9b, r9b
0x00004cdb      0f85af040000   jne 0x5190
0x00004ce1      4489c6         mov esi, r8d
0x00004ce4      83f601         xor esi, 1
0x00004ce7      4020f0         and al, sil
0x00004cea      742f           je 0x4d1b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00004cec      4d39fd         cmp r13, r15
0x00004cef      7605           jbe 0x4cf6
0x00004cf1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004cf6      498d7701       lea rsi, [r15 + 1]
0x00004cfa      4939f5         cmp r13, rsi
0x00004cfd      7606           jbe 0x4d05                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00004cff      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00004d05      498d7702       lea rsi, [r15 + 2]
0x00004d09      4939f5         cmp r13, rsi
0x00004d0c      7606           jbe 0x4d14
0x00004d0e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004d14      4983c703       add r15, 3
0x00004d18      4189c0         mov r8d, eax
0x00004d1b      4d39fd         cmp r13, r15
0x00004d1e      7605           jbe 0x4d25
0x00004d20      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d25      498d4701       lea rax, [r15 + 1]
0x00004d29      4939c5         cmp r13, rax
0x00004d2c      760d           jbe 0x4d3b
0x00004d2e      89d8           mov eax, ebx
0x00004d30      c0e806         shr al, 6
0x00004d33      83c030         add eax, 0x30
0x00004d36      4388443e01     mov byte [r14 + r15 + 1], al
0x00004d3b      498d4702       lea rax, [r15 + 2]
0x00004d3f      4939c5         cmp r13, rax
0x00004d42      7610           jbe 0x4d54
0x00004d44      89d8           mov eax, ebx
0x00004d46      c0e803         shr al, 3
0x00004d49      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00004d4c      83c030         add eax, 0x30
0x00004d4f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004d54      83e307         and ebx, 7
0x00004d57      4883c501       add rbp, 1
0x00004d5b      4983c703       add r15, 3
0x00004d5f      83c330         add ebx, 0x30
0x00004d62      4839cd         cmp rbp, rcx
0x00004d65      0f83e5f7ffff   jae 0x4550
0x00004d6b      89d6           mov esi, edx
0x00004d6d      4d39fd         cmp r13, r15
0x00004d70      7604           jbe 0x4d76
0x00004d72      43881c3e       mov byte [r14 + r15], bl
0x00004d76      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004d7a      4983c701       add r15, 1
0x00004d7e      84d2           test dl, dl
0x00004d80      0f854affffff   jne 0x4cd0
0x00004d86      89f0           mov eax, esi
0x00004d88      83f001         xor eax, 1
0x00004d8b      4421c0         and eax, r8d
0x00004d8e      4584d2         test r10b, r10b
0x00004d91      740e           je 0x4da1
0x00004d93      4d39fd         cmp r13, r15
0x00004d96      7605           jbe 0x4d9d
0x00004d98      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00004d9d      4983c701       add r15, 1
0x00004da1      4883c501       add rbp, 1
0x00004da5      4839cd         cmp rbp, rcx
0x00004da8      0f837ef7ffff   jae 0x452c
0x00004dae      84c0           test al, al
0x00004db0      0f84f8030000   je 0x51ae
0x00004db6      4d39fd         cmp r13, r15
0x00004db9      7605           jbe 0x4dc0
0x00004dbb      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004dc0      498d4701       lea rax, [r15 + 1]
0x00004dc4      4939c5         cmp r13, rax
0x00004dc7      7606           jbe 0x4dcf
0x00004dc9      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004dcf      4983c702       add r15, 2
0x00004dd3      4531d2         xor r10d, r10d
0x00004dd6      4531c0         xor r8d, r8d
0x00004dd9      eb92           jmp 0x4d6d
0x00004ddb      0f1f440000     nop dword [rax + rax]
0x00004de0      4983ff01       cmp r15, 1
0x00004de4      0f845ffeffff   je 0x4c49
0x00004dea      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004def      4a8d0c3f       lea rcx, [rdi + r15]
0x00004df3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004df8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00004dfc      eb0f           jmp 0x4e0d
0x00004dfe      6690           nop
0x00004e00      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004e04      4939d0         cmp r8, rdx
0x00004e07      0f843cfeffff   je 0x4c49
0x00004e0d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004e10      83e95b         sub ecx, 0x5b
0x00004e13      80f921         cmp cl, 0x21
0x00004e16      77e8           ja 0x4e00                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004e18      be01000000     mov esi, 1
0x00004e1d      48d3e6         shl rsi, cl
0x00004e20      4889f1         mov rcx, rsi
0x00004e23      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x00004e2d      4885f1         test rcx, rsi
0x00004e30      74ce           je 0x4e00
0x00004e32      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004e37      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004e3c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004e41      c74424080200.  mov dword [rsp + 8], 2
0x00004e49      807c240d00     cmp byte [rsp + 0xd], 0
0x00004e4e      7410           je 0x4e60
0x00004e50      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004e52      b804000000     mov eax, 4
0x00004e57      0f44442408     cmove eax, dword [rsp + 8]
0x00004e5c      89442408       mov dword [rsp + 8], eax
0x00004e60      4883ec08       sub rsp, 8
0x00004e64      4889e9         mov rcx, rbp
0x00004e67      4c89ee         mov rsi, r13
0x00004e6a      ff742468       push qword [rsp + 0x68]
0x00004e6e      ff742478       push qword [rsp + 0x78]
0x00004e72      4c89f7         mov rdi, r14
0x00004e75      6a00           push 0
0x00004e77      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004e7f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004e84      488b542430     mov rdx, qword [rsp + 0x30]
0x00004e89      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x00004e8d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004e92      4883c420       add rsp, 0x20
0x00004e96      4989c7         mov r15, rax
0x00004e99      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004ea1      6448331c2528.  xor rbx, qword fs:[0x28]
0x00004eaa      4c89f8         mov rax, r15
0x00004ead      0f8500060000   jne 0x54b3
0x00004eb3      4881c4b80000.  add rsp, 0xb8
0x00004eba      5b             pop rbx
0x00004ebb      5d             pop rbp
0x00004ebc      415c           pop r12
0x00004ebe      415d           pop r13
0x00004ec0      415e           pop r14
0x00004ec2      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004ec4      c3             ret
0x00004ec5      0f1f00         nop dword [rax]
0x00004ec8      4c89dd         mov rbp, r11
0x00004ecb      e979ffffff     jmp 0x4e49
0x00004ed0      4d39fd         cmp r13, r15
0x00004ed3      7605           jbe 0x4eda
0x00004ed5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004eda      498d4701       lea rax, [r15 + 1]
0x00004ede      4939c5         cmp r13, rax
0x00004ee1      7606           jbe 0x4ee9
0x00004ee3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004ee9      498d4702       lea rax, [r15 + 2]
0x00004eed      4939c5         cmp r13, rax
0x00004ef0      0f86ec050000   jbe 0x54e2
0x00004ef6      4c89ea         mov rdx, r13
0x00004ef9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004eff      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004f04      e9d9fbffff     jmp 0x4ae2
0x00004f09      4489e0         mov eax, r12d
0x00004f0c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004f11      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004f14      e900f6ffff     jmp 0x4519                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004f19      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00004f1f      e9c5f9ffff     jmp 0x48e9
0x00004f24      85db           test ebx, ebx
0x00004f26      0f8527f4ffff   jne 0x4353
0x00004f2c      c644240d01     mov byte [rsp + 0xd], 1
0x00004f31      4d85ed         test r13, r13
0x00004f34      0f8590050000   jne 0x54ca
0x00004f3a      488d054c6a00.  lea rax, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004f41      48c744245000.  mov qword [rsp + 0x50], 0
0x00004f4a      c644240e01     mov byte [rsp + 0xe], 1
0x00004f4f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004f54      4531e4         xor r12d, r12d
0x00004f57      c644240f00     mov byte [rsp + 0xf], 0
0x00004f5c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004f65      4889442448     mov qword [rsp + 0x48], rax
0x00004f6a      41bf01000000   mov r15d, 1
0x00004f70      c74424080200.  mov dword [rsp + 8], 2
0x00004f78      e916f4ffff     jmp 0x4393                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x00004f7d      0f1f00         nop dword [rax]
0x00004f80      85db           test ebx, ebx
0x00004f82      0f85f5030000   jne 0x537d
0x00004f88      4d85ed         test r13, r13
0x00004f8b      0f8425020000   je 0x51b6
0x00004f91      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004f95      c644240e01     mov byte [rsp + 0xe], 1
0x00004f9a      4531e4         xor r12d, r12d
0x00004f9d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004fa2      48c744245000.  mov qword [rsp + 0x50], 0
0x00004fab      488d05d96900.  lea rax, str.l______l                   ; 0xb98b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004fb2      c644240f00     mov byte [rsp + 0xf], 0
0x00004fb7      c644240d01     mov byte [rsp + 0xd], 1
0x00004fbc      48c744241801.  mov qword [rsp + 0x18], 1
0x00004fc5      41bf01000000   mov r15d, 1
0x00004fcb      4889442448     mov qword [rsp + 0x48], rax
0x00004fd0      e9bef3ffff     jmp 0x4393
0x00004fd5      488d05af6900.  lea rax, str.l______l                   ; 0xb98b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004fdc      c644240e01     mov byte [rsp + 0xe], 1
0x00004fe1      c644247c00     mov byte [rsp + 0x7c], 0
0x00004fe6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004fe9      48c744245000.  mov qword [rsp + 0x50], 0
0x00004ff2      c644240f01     mov byte [rsp + 0xf], 1
0x00004ff7      c644240d01     mov byte [rsp + 0xd], 1
0x00004ffc      48c744241801.  mov qword [rsp + 0x18], 1
0x00005005      4531ff         xor r15d, r15d
0x00005008      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000500d      c74424080500.  mov dword [rsp + 8], 5
0x00005015      e979f3ffff     jmp 0x4393
0x0000501a      c644240e01     mov byte [rsp + 0xe], 1
0x0000501f      c644247c00     mov byte [rsp + 0x7c], 0
0x00005024      4531e4         xor r12d, r12d
0x00005027      48c744245000.  mov qword [rsp + 0x50], 0
0x00005030      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00005035      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00005038      c644240d01     mov byte [rsp + 0xd], 1
0x0000503d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005046      48c744244800.  mov qword [rsp + 0x48], 0
0x0000504f      e93ff3ffff     jmp 0x4393
0x00005054      837c24080a     cmp dword [rsp + 8], 0xa
0x00005059      7456           je 0x50b1
0x0000505b      488d352d6900.  lea rsi, [0x0000b98f]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00005062      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00005064      ba05000000     mov edx, 5
0x00005069      e8f2c9ffff     call sym.imp.dcgettext
0x0000506e      4889c1         mov rcx, rax
0x00005071      4889442468     mov qword [rsp + 0x68], rax
0x00005076      488d05126900.  lea rax, [0x0000b98f]                   ; "`"
0x0000507d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00005080      0f8498030000   je 0x541e
0x00005086      488d35006900.  lea rsi, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000508d      31ff           xor edi, edi
0x0000508f      ba05000000     mov edx, 5
0x00005094      e8c7c9ffff     call sym.imp.dcgettext
0x00005099      4889c1         mov rcx, rax
0x0000509c      4889442460     mov qword [rsp + 0x60], rax
0x000050a1      488d05e56800.  lea rax, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000050a8      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x000050ab      0f8483030000   je 0x5434
0x000050b1      4531ff         xor r15d, r15d
0x000050b4      85db           test ebx, ebx
0x000050b6      0f84c1010000   je 0x527d
0x000050bc      85db           test ebx, ebx
0x000050be      488b5c2460     mov rbx, qword [rsp + 0x60]
0x000050c3      0f9544240f     setne byte [rsp + 0xf]
0x000050c8      4531e4         xor r12d, r12d
0x000050cb      4889df         mov rdi, rbx
0x000050ce      e8adc9ffff     call sym.imp.strlen
0x000050d3      48895c2448     mov qword [rsp + 0x48], rbx
0x000050d8      4889442418     mov qword [rsp + 0x18], rax
0x000050dd      c644240e01     mov byte [rsp + 0xe], 1
0x000050e2      c644247c00     mov byte [rsp + 0x7c], 0
0x000050e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000050f0      c644240d01     mov byte [rsp + 0xd], 1
0x000050f5      e999f2ffff     jmp 0x4393
0x000050fa      c644240e01     mov byte [rsp + 0xe], 1
0x000050ff      c644247c00     mov byte [rsp + 0x7c], 0
0x00005104      4531e4         xor r12d, r12d
0x00005107      48c744245000.  mov qword [rsp + 0x50], 0
0x00005110      c644240f00     mov byte [rsp + 0xf], 0
0x00005115      4531ff         xor r15d, r15d
0x00005118      c644240d00     mov byte [rsp + 0xd], 0
0x0000511d      48c744241800.  mov qword [rsp + 0x18], 0
0x00005126      48c744244800.  mov qword [rsp + 0x48], 0
0x0000512f      e95ff2ffff     jmp 0x4393
0x00005134      c644240e01     mov byte [rsp + 0xe], 1
0x00005139      c644247c00     mov byte [rsp + 0x7c], 0
0x0000513e      4531e4         xor r12d, r12d
0x00005141      48c744245000.  mov qword [rsp + 0x50], 0
0x0000514a      c644240f01     mov byte [rsp + 0xf], 1
0x0000514f      c644240d01     mov byte [rsp + 0xd], 1
0x00005154      e91af2ffff     jmp 0x4373
0x00005159      4d39fd         cmp r13, r15
0x0000515c      7605           jbe 0x5163
0x0000515e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00005163      488d4102       lea rax, [rcx + 2]
0x00005167      4939c5         cmp r13, rax
0x0000516a      7606           jbe 0x5172
0x0000516c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00005172      4489e0         mov eax, r12d
0x00005175      4c8d7903       lea r15, [rcx + 3]
0x00005179      4531e4         xor r12d, r12d
0x0000517c      bb30000000     mov ebx, 0x30                           ; '0'
0x00005181      e962f3ffff     jmp 0x44e8
0x00005186      662e0f1f8400.  nop word cs:[rax + rax]
0x00005190      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00005195      4c89dd         mov rbp, r11
0x00005198      885c240d       mov byte [rsp + 0xd], bl
0x0000519c      e9a8fcffff     jmp 0x4e49
0x000051a1      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000051a6      4531e4         xor r12d, r12d
0x000051a9      e902fbffff     jmp 0x4cb0
0x000051ae      4531d2         xor r10d, r10d
0x000051b1      e9b7fbffff     jmp 0x4d6d
0x000051b6      48c744245000.  mov qword [rsp + 0x50], 0
0x000051bf      c644240e01     mov byte [rsp + 0xe], 1
0x000051c4      4531e4         xor r12d, r12d
0x000051c7      c644247c00     mov byte [rsp + 0x7c], 0
0x000051cc      e9dafdffff     jmp 0x4fab
0x000051d1      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000051d6      4c89f6         mov rsi, r14
0x000051d9      4c89e9         mov rcx, r13
0x000051dc      4889d8         mov rax, rbx
0x000051df      4889df         mov rdi, rbx
0x000051e2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000051e8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000051ed      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000051f5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000051f8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000051fe      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005206      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000520b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00005210      7326           jae 0x5238
0x00005212      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00005215      7510           jne 0x5227
0x00005217      eb1f           jmp 0x5238
0x00005219      0f1f80000000.  nop dword [rax]
0x00005220      41803c0100     cmp byte [r9 + rax], 0
0x00005225      740e           je 0x5235
0x00005227      4883c001       add rax, 1
0x0000522b      488d540500     lea rdx, [rbp + rax]
0x00005230      4939d3         cmp r11, rdx
0x00005233      77eb           ja 0x5220
0x00005235      4889c7         mov rdi, rax
0x00005238      0fb654240d     movzx edx, byte [rsp + 0xd]
0x0000523d      4531e4         xor r12d, r12d
0x00005240      e961faffff     jmp 0x4ca6
0x00005245      4889df         mov rdi, rbx
0x00005248      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000524e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00005253      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00005259      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00005261      4531e4         xor r12d, r12d
0x00005264      4c8b742440     mov r14, qword [rsp + 0x40]
0x00005269      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000526e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00005273      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00005278      e929faffff     jmp 0x4ca6
0x0000527d      488b542468     mov rdx, qword [rsp + 0x68]
0x00005282      0fb602         movzx eax, byte [rdx]
0x00005285      84c0           test al, al
0x00005287      0f842ffeffff   je 0x50bc
0x0000528d      0f1f00         nop dword [rax]
0x00005290      4d39fd         cmp r13, r15
0x00005293      7604           jbe 0x5299
0x00005295      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00005299      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000529d      420fb6043a     movzx eax, byte [rdx + r15]
0x000052a2      84c0           test al, al
0x000052a4      75ea           jne 0x5290
0x000052a6      e911feffff     jmp 0x50bc
0x000052ab      89d0           mov eax, edx
0x000052ad      e955f5ffff     jmp 0x4807
0x000052b2      0fb61c08       movzx ebx, byte [rax + rcx]
0x000052b6      80fb3e         cmp bl, 0x3e
0x000052b9      0f8771f8ffff   ja 0x4b30
0x000052bf      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x000052c9      480fa3d8       bt rax, rbx
0x000052cd      0f835df8ffff   jae 0x4b30
0x000052d3      807c240f00     cmp byte [rsp + 0xf], 0
0x000052d8      0f85e4010000   jne 0x54c2                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x000052de      4d39fd         cmp r13, r15
0x000052e1      7605           jbe 0x52e8
0x000052e3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x000052e8      498d4701       lea rax, [r15 + 1]
0x000052ec      4939c5         cmp r13, rax
0x000052ef      7606           jbe 0x52f7
0x000052f1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x000052f7      498d4702       lea rax, [r15 + 2]
0x000052fb      4939c5         cmp r13, rax
0x000052fe      7606           jbe 0x5306
0x00005300      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00005306      498d4703       lea rax, [r15 + 3]
0x0000530a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000530d      7606           jbe 0x5315
0x0000530f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00005315      4983c704       add r15, 4
0x00005319      31d2           xor edx, edx
0x0000531b      4531e4         xor r12d, r12d
0x0000531e      31c0           xor eax, eax
0x00005320      4889cd         mov rbp, rcx
0x00005323      e9c0f1ffff     jmp 0x44e8
0x00005328      85db           test ebx, ebx
0x0000532a      0f8488010000   je 0x54b8
0x00005330      488d05566600.  lea rax, [0x0000b98d]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005337      c644240e01     mov byte [rsp + 0xe], 1
0x0000533c      c644247c00     mov byte [rsp + 0x7c], 0
0x00005341      4531e4         xor r12d, r12d
0x00005344      48c744245000.  mov qword [rsp + 0x50], 0
0x0000534d      c644240f01     mov byte [rsp + 0xf], 1
0x00005352      c644240d00     mov byte [rsp + 0xd], 0
0x00005357      48c744241801.  mov qword [rsp + 0x18], 1
0x00005360      4531ff         xor r15d, r15d
0x00005363      4889442448     mov qword [rsp + 0x48], rax
0x00005368      e926f0ffff     jmp 0x4393
0x0000536d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00005370      4c89dd         mov rbp, r11
0x00005373      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00005378      e9ccfaffff     jmp 0x4e49
0x0000537d      488d05076600.  lea rax, str.l______l                   ; 0xb98b ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00005384      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00005389      c644247c00     mov byte [rsp + 0x7c], 0
0x0000538e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00005391      48c744245000.  mov qword [rsp + 0x50], 0
0x0000539a      c644240f01     mov byte [rsp + 0xf], 1
0x0000539f      c644240d01     mov byte [rsp + 0xd], 1
0x000053a4      48c744241801.  mov qword [rsp + 0x18], 1
0x000053ad      4531ff         xor r15d, r15d
0x000053b0      4889442448     mov qword [rsp + 0x48], rax
0x000053b5      e9d9efffff     jmp 0x4393
0x000053ba      89d0           mov eax, edx
0x000053bc      488b5c2448     mov rbx, qword [rsp + 0x48]
0x000053c1      4885db         test rbx, rbx
0x000053c4      742c           je 0x53f2
0x000053c6      84c0           test al, al
0x000053c8      7428           je 0x53f2
0x000053ca      0fb60b         movzx ecx, byte [rbx]
0x000053cd      4889d8         mov rax, rbx
0x000053d0      84c9           test cl, cl
0x000053d2      741e           je 0x53f2
0x000053d4      4c89fa         mov rdx, r15
0x000053d7      4c29f8         sub rax, r15
0x000053da      4939d5         cmp r13, rdx
0x000053dd      7604           jbe 0x53e3
0x000053df      41880c16       mov byte [r14 + rdx], cl
0x000053e3      4883c201       add rdx, 1
0x000053e7      0fb60c10       movzx ecx, byte [rax + rdx]
0x000053eb      84c9           test cl, cl
0x000053ed      75eb           jne 0x53da
0x000053ef      4989d7         mov r15, rdx
0x000053f2      4d39fd         cmp r13, r15
0x000053f5      0f869efaffff   jbe 0x4e99
0x000053fb      43c6043e00     mov byte [r14 + r15], 0
0x00005400      e994faffff     jmp 0x4e99
0x00005405      837c240802     cmp dword [rsp + 8], 2
0x0000540a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000540f      4c89dd         mov rbp, r11
0x00005412      0f94c0         sete al
0x00005415      885c240d       mov byte [rsp + 0xd], bl
0x00005419      e92bfaffff     jmp 0x4e49
0x0000541e      8b742408       mov esi, dword [rsp + 8]
0x00005422      4889cf         mov rdi, rcx
0x00005425      e8a6edffff     call sym.gettext_quote.part.1
0x0000542a      4889442468     mov qword [rsp + 0x68], rax
0x0000542f      e952fcffff     jmp 0x5086
0x00005434      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00005438      4889cf         mov rdi, rcx
0x0000543b      e890edffff     call sym.gettext_quote.part.1
0x00005440      4889442460     mov qword [rsp + 0x60], rax
0x00005445      e967fcffff     jmp 0x50b1
0x0000544a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000544f      4c89dd         mov rbp, r11
0x00005452      89d0           mov eax, edx
0x00005454      885c240d       mov byte [rsp + 0xd], bl
0x00005458      e9ecf9ffff     jmp 0x4e49
0x0000545d      4883ec08       sub rsp, 8
0x00005461      41b805000000   mov r8d, 5
0x00005467      4c89d9         mov rcx, r11
0x0000546a      ff742468       push qword [rsp + 0x68]
0x0000546e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00005472      4c89f7         mov rdi, r14
0x00005475      ff742438       push qword [rsp + 0x38]
0x00005479      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00005481      488b542430     mov rdx, qword [rsp + 0x30]
0x00005486      488b742470     mov rsi, qword [rsp + 0x70]
0x0000548b      e830eeffff     call sym.quotearg_buffer_restyled
0x00005490      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00005494      4989c7         mov r15, rax
0x00005497      e9fdf9ffff     jmp 0x4e99
0x0000549c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x000054a1      e916ffffff     jmp 0x53bc
0x000054a6      c74424080200.  mov dword [rsp + 8], 2
0x000054ae      e996f9ffff     jmp 0x4e49
0x000054b3      e8f8c5ffff     call sym.imp.__stack_chk_fail
0x000054b8      c644240d00     mov byte [rsp + 0xd], 0
0x000054bd      e96ffaffff     jmp 0x4f31
0x000054c2      4c89dd         mov rbp, r11
0x000054c5      e996f9ffff     jmp 0x4e60
0x000054ca      c644240e01     mov byte [rsp + 0xe], 1
0x000054cf      31c0           xor eax, eax
0x000054d1      4531e4         xor r12d, r12d
0x000054d4      48c744245000.  mov qword [rsp + 0x50], 0
0x000054dd      e9a2f5ffff     jmp 0x4a84
0x000054e2      4c89ea         mov rdx, r13
0x000054e5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000054ea      e9f3f5ffff     jmp 0x4ae2
0x000054ef      e89cc4ffff     call sym.imp.abort
0x000054f4      6690           nop
0x000054f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00005500      4157           push r15
0x00005502      4156           push r14
0x00005504      4c63ff         movsxd r15, edi
0x00005507      4155           push r13
0x00005509      4154           push r12
0x0000550b      4989d6         mov r14, rdx
0x0000550e      55             push rbp
0x0000550f      53             push rbx
0x00005510      4889cd         mov rbp, rcx
0x00005513      4883ec28       sub rsp, 0x28
0x00005517      4889742408     mov qword [rsp + 8], rsi
0x0000551c      e87fc4ffff     call sym.imp.__errno_location
0x00005521      4989c5         mov r13, rax
0x00005524      8b00           mov eax, dword [rax]
0x00005526      4585ff         test r15d, r15d
0x00005529      488b1d509b20.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20f080:8]=0x20f090 obj.slotvec0
0x00005530      89442418       mov dword [rsp + 0x18], eax
0x00005534      0f8867010000   js 0x56a1
0x0000553a      44393d379b20.  cmp dword [obj.nslots], r15d            ; [0x20f078:4]=1
0x00005541      7f62           jg 0x55a5
0x00005543      4181ffffffff.  cmp r15d, 0x7fffffff
0x0000554a      0f8456010000   je 0x56a6
0x00005550      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00005554      488d05359b20.  lea rax, obj.slotvec0                   ; 0x20f090
0x0000555b      4963f4         movsxd rsi, r12d
0x0000555e      48c1e604       shl rsi, 4
0x00005562      4839c3         cmp rbx, rax
0x00005565      0f8415010000   je 0x5680
0x0000556b      4889df         mov rdi, rbx
0x0000556e      e82d100000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00005573      4889c3         mov rbx, rax
0x00005576      488905039b20.  mov qword [obj.slotvec], rax            ; [0x20f080:8]=0x20f090 obj.slotvec0
0x0000557d      48633df49a20.  movsxd rdi, dword [obj.nslots]          ; [0x20f078:4]=1
0x00005584      4489e2         mov edx, r12d
0x00005587      31f6           xor esi, esi
0x00005589      29fa           sub edx, edi
0x0000558b      48c1e704       shl rdi, 4
0x0000558f      4863d2         movsxd rdx, edx
0x00005592      4801df         add rdi, rbx
0x00005595      48c1e204       shl rdx, 4
0x00005599      e892c5ffff     call sym.imp.memset
0x0000559e      448925d39a20.  mov dword [obj.nslots], r12d            ; [0x20f078:4]=1
0x000055a5      8b4504         mov eax, dword [rbp + 4]
0x000055a8      49c1e704       shl r15, 4
0x000055ac      4883ec08       sub rsp, 8
0x000055b0      4c01fb         add rbx, r15
0x000055b3      4c8d7d08       lea r15, [rbp + 8]
0x000055b7      448b4500       mov r8d, dword [rbp]
0x000055bb      4c8b1b         mov r11, qword [rbx]
0x000055be      4c8b6308       mov r12, qword [rbx + 8]
0x000055c2      4c89f1         mov rcx, r14
0x000055c5      83c801         or eax, 1
0x000055c8      89442424       mov dword [rsp + 0x24], eax
0x000055cc      ff7530         push qword [rbp + 0x30]
0x000055cf      4189c1         mov r9d, eax
0x000055d2      ff7528         push qword [rbp + 0x28]
0x000055d5      4157           push r15
0x000055d7      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x000055da      488b542428     mov rdx, qword [rsp + 0x28]
0x000055df      4c89e7         mov rdi, r12
0x000055e2      4c895c2430     mov qword [rsp + 0x30], r11
0x000055e7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x000055ec      4883c420       add rsp, 0x20
0x000055f0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x000055f5      4939c3         cmp r11, rax
0x000055f8      7767           ja 0x5661
0x000055fa      488d7001       lea rsi, [rax + 1]
0x000055fe      488d051b9b20.  lea rax, obj.slot0                      ; 0x20f120
0x00005605      4939c4         cmp r12, rax
0x00005608      488933         mov qword [rbx], rsi
0x0000560b      7412           je 0x561f
0x0000560d      4c89e7         mov rdi, r12
0x00005610      4889742410     mov qword [rsp + 0x10], rsi
0x00005615      e886c7ffff     call sym..plt.got
0x0000561a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000561f      4889f7         mov rdi, rsi
0x00005622      4889742410     mov qword [rsp + 0x10], rsi
0x00005627      e8140f0000     call sym.xmalloc
0x0000562c      4883ec08       sub rsp, 8
0x00005630      48894308       mov qword [rbx + 8], rax
0x00005634      448b4500       mov r8d, dword [rbp]
0x00005638      ff7530         push qword [rbp + 0x30]
0x0000563b      ff7528         push qword [rbp + 0x28]
0x0000563e      4c89f1         mov rcx, r14
0x00005641      4157           push r15
0x00005643      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00005648      4889c7         mov rdi, rax
0x0000564b      488b542428     mov rdx, qword [rsp + 0x28]
0x00005650      488b742430     mov rsi, qword [rsp + 0x30]
0x00005655      4989c4         mov r12, rax
0x00005658      e863ecffff     call sym.quotearg_buffer_restyled
0x0000565d      4883c420       add rsp, 0x20
0x00005661      8b442418       mov eax, dword [rsp + 0x18]
0x00005665      41894500       mov dword [r13], eax
0x00005669      4883c428       add rsp, 0x28
0x0000566d      4c89e0         mov rax, r12
0x00005670      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00005671      5d             pop rbp
0x00005672      415c           pop r12
0x00005674      415d           pop r13
0x00005676      415e           pop r14
0x00005678      415f           pop r15
0x0000567a      c3             ret
0x0000567b      0f1f440000     nop dword [rax + rax]
0x00005680      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00005682      e8190f0000     call sym.xrealloc
0x00005687      660f6f05019a.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x0000568f      4889c3         mov rbx, rax
0x00005692      488905e79920.  mov qword [obj.slotvec], rax            ; [0x20f080:8]=0x20f090 obj.slotvec0
0x00005699      0f1100         movups xmmword [rax], xmm0
0x0000569c      e9dcfeffff     jmp 0x557d
0x000056a1      e8eac2ffff     call sym.imp.abort
0x000056a6      e8e5100000     call sym.xalloc_die
0x000056ab      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x000056b0      4154           push r12
0x000056b2      55             push rbp
0x000056b3      53             push rbx
0x000056b4      4889fb         mov rbx, rdi
0x000056b7      e8e4c2ffff     call sym.imp.__errno_location
0x000056bc      448b20         mov r12d, dword [rax]
0x000056bf      4889c5         mov rbp, rax
0x000056c2      488d05579b20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x000056c9      4885db         test rbx, rbx
0x000056cc      be38000000     mov esi, 0x38                           ; '8'
0x000056d1      480f44d8       cmove rbx, rax
0x000056d5      4889df         mov rdi, rbx
0x000056d8      e863100000     call sym.xmemdup
0x000056dd      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000056e1      5b             pop rbx
0x000056e2      5d             pop rbp
0x000056e3      415c           pop r12
0x000056e5      c3             ret
0x000056e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x000056f0      488d05299b20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x000056f7      4885ff         test rdi, rdi
0x000056fa      480f44f8       cmove rdi, rax
0x000056fe      8b07           mov eax, dword [rdi]
0x00005700      c3             ret
0x00005701      0f1f440000     nop dword [rax + rax]
0x00005706      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00005710      488d05099b20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x00005717      4885ff         test rdi, rdi
0x0000571a      480f44f8       cmove rdi, rax
0x0000571e      8937           mov dword [rdi], esi
0x00005720      c3             ret
0x00005721      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00005726      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00005730      488d05e99a20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x00005737      4885ff         test rdi, rdi
0x0000573a      89f1           mov ecx, esi
0x0000573c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00005740      89f0           mov eax, esi
0x00005742      83e11f         and ecx, 0x1f
0x00005745      c0e805         shr al, 5
0x00005748      0fb6c0         movzx eax, al
0x0000574b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00005750      8b37           mov esi, dword [rdi]
0x00005752      89f0           mov eax, esi
0x00005754      d3e8           shr eax, cl
0x00005756      31c2           xor edx, eax
0x00005758      83e001         and eax, 1
0x0000575b      83e201         and edx, 1
0x0000575e      d3e2           shl edx, cl
0x00005760      31f2           xor edx, esi
0x00005762      8917           mov dword [rdi], edx
0x00005764      c3             ret
0x00005765      90             nop
0x00005766      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00005770      488d05a99a20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x00005777      4885ff         test rdi, rdi
0x0000577a      480f44f8       cmove rdi, rax
0x0000577e      8b4704         mov eax, dword [rdi + 4]
0x00005781      897704         mov dword [rdi + 4], esi
0x00005784      c3             ret
0x00005785      90             nop
0x00005786      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00005790      488d05899a20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x00005797      4885ff         test rdi, rdi
0x0000579a      480f44f8       cmove rdi, rax
0x0000579e      4885f6         test rsi, rsi
0x000057a1      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x000057a7      740e           je 0x57b7
0x000057a9      4885d2         test rdx, rdx
0x000057ac      7409           je 0x57b7
0x000057ae      48897728       mov qword [rdi + 0x28], rsi
0x000057b2      48895730       mov qword [rdi + 0x30], rdx
0x000057b6      c3             ret
0x000057b7      4883ec08       sub rsp, 8
0x000057bb      e8d0c1ffff     call sym.imp.abort
;-- quotearg_buffer:
0x000057c0      4157           push r15
0x000057c2      4156           push r14
0x000057c4      488d05559a20.  lea rax, obj.default_quoting_options    ; 0x20f220
0x000057cb      4155           push r13
0x000057cd      4154           push r12
0x000057cf      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x000057d2      55             push rbp
0x000057d3      53             push rbx
0x000057d4      4c89c3         mov rbx, r8
0x000057d7      4989f6         mov r14, rsi
0x000057da      4989d7         mov r15, rdx
0x000057dd      4883ec18       sub rsp, 0x18
0x000057e1      4d85c0         test r8, r8
0x000057e4      480f44d8       cmove rbx, rax
0x000057e8      48894c2408     mov qword [rsp + 8], rcx
0x000057ed      e8aec1ffff     call sym.imp.__errno_location
0x000057f2      448b20         mov r12d, dword [rax]
0x000057f5      4889c5         mov rbp, rax
0x000057f8      488d4308       lea rax, [rbx + 8]
0x000057fc      4883ec08       sub rsp, 8
0x00005800      448b4b04       mov r9d, dword [rbx + 4]
0x00005804      ff7330         push qword [rbx + 0x30]
0x00005807      448b03         mov r8d, dword [rbx]
0x0000580a      ff7328         push qword [rbx + 0x28]
0x0000580d      4c89fa         mov rdx, r15
0x00005810      50             push rax
0x00005811      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00005816      4c89f6         mov rsi, r14
0x00005819      4c89ef         mov rdi, r13
0x0000581c      e89feaffff     call sym.quotearg_buffer_restyled
0x00005821      44896500       mov dword [rbp], r12d
0x00005825      4883c438       add rsp, 0x38
0x00005829      5b             pop rbx
0x0000582a      5d             pop rbp
0x0000582b      415c           pop r12
0x0000582d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000582f      415e           pop r14
0x00005831      415f           pop r15
0x00005833      c3             ret
0x00005834      6690           nop
0x00005836      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005840      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005842      4156           push r14
0x00005844      488d05d59920.  lea rax, obj.default_quoting_options    ; 0x20f220
0x0000584b      4155           push r13
0x0000584d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000584f      4989d4         mov r12, rdx
0x00005852      55             push rbp
0x00005853      53             push rbx
0x00005854      4889cb         mov rbx, rcx
0x00005857      4989fe         mov r14, rdi
0x0000585a      4989f7         mov r15, rsi
0x0000585d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005861      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005864      480f44d8       cmove rbx, rax
0x00005868      31ed           xor ebp, ebp
0x0000586a      e831c1ffff     call sym.imp.__errno_location
0x0000586f      4d85e4         test r12, r12
0x00005872      4989c5         mov r13, rax
0x00005875      8b00           mov eax, dword [rax]
0x00005877      400f94c5       sete bpl
0x0000587b      0b6b04         or ebp, dword [rbx + 4]
0x0000587e      4c8d5308       lea r10, [rbx + 8]
0x00005882      4883ec08       sub rsp, 8
0x00005886      448b03         mov r8d, dword [rbx]
0x00005889      4c89f9         mov rcx, r15
0x0000588c      89442414       mov dword [rsp + 0x14], eax
0x00005890      ff7330         push qword [rbx + 0x30]
0x00005893      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005896      ff7328         push qword [rbx + 0x28]
0x00005899      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000589b      31f6           xor esi, esi
0x0000589d      4189e9         mov r9d, ebp
0x000058a0      31ff           xor edi, edi
0x000058a2      4c89542440     mov qword [rsp + 0x40], r10
0x000058a7      e814eaffff     call sym.quotearg_buffer_restyled
0x000058ac      488d7001       lea rsi, [rax + 1]
0x000058b0      4889442448     mov qword [rsp + 0x48], rax
0x000058b5      4883c420       add rsp, 0x20
0x000058b9      4889f7         mov rdi, rsi
0x000058bc      4889742418     mov qword [rsp + 0x18], rsi
0x000058c1      e87a0c0000     call sym.xmalloc
0x000058c6      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x000058cb      4883ec08       sub rsp, 8
0x000058cf      ff7330         push qword [rbx + 0x30]
0x000058d2      ff7328         push qword [rbx + 0x28]
0x000058d5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000058da      4189e9         mov r9d, ebp
0x000058dd      448b03         mov r8d, dword [rbx]
0x000058e0      4c89f9         mov rcx, r15
0x000058e3      4c89f2         mov rdx, r14
0x000058e6      4889c7         mov rdi, rax
0x000058e9      4152           push r10
0x000058eb      488b742438     mov rsi, qword [rsp + 0x38]
0x000058f0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000058f5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000058f9      4883c420       add rsp, 0x20
0x000058fd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00005900      41894500       mov dword [r13], eax
0x00005904      7409           je 0x590f
0x00005906      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000590b      4d891c24       mov qword [r12], r11
0x0000590f      488b442410     mov rax, qword [rsp + 0x10]
0x00005914      4883c438       add rsp, 0x38
0x00005918      5b             pop rbx
0x00005919      5d             pop rbp
0x0000591a      415c           pop r12
0x0000591c      415d           pop r13
0x0000591e      415e           pop r14
0x00005920      415f           pop r15
0x00005922      c3             ret
0x00005923      0f1f00         nop dword [rax]
0x00005926      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00005930      4889d1         mov rcx, rdx
0x00005933      31d2           xor edx, edx
0x00005935      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000593a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005940      8b0532972000   mov eax, dword [obj.nslots]             ; [0x20f078:4]=1
0x00005946      4154           push r12
0x00005948      4c8b25319720.  mov r12, qword [obj.slotvec]            ; [0x20f080:8]=0x20f090 obj.slotvec0
0x0000594f      55             push rbp
0x00005950      53             push rbx
0x00005951      83f801         cmp eax, 1
0x00005954      7e2b           jle 0x5981                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005956      83e802         sub eax, 2
0x00005959      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000595e      48c1e004       shl rax, 4
0x00005962      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005967      660f1f840000.  nop word [rax + rax]
0x00005970      488b3b         mov rdi, qword [rbx]
0x00005973      4883c310       add rbx, 0x10
0x00005977      e824c4ffff     call sym..plt.got
0x0000597c      4839eb         cmp rbx, rbp
0x0000597f      75ef           jne 0x5970
0x00005981      498b7c2408     mov rdi, qword [r12 + 8]
0x00005986      488d1d939720.  lea rbx, obj.slot0                      ; 0x20f120
0x0000598d      4839df         cmp rdi, rbx
0x00005990      7417           je 0x59a9
0x00005992      e809c4ffff     call sym..plt.got
0x00005997      48c705ee9620.  mov qword [obj.slotvec0], 0x100         ; [0x20f090:8]=256
0x000059a2      48891def9620.  mov qword [0x0020f098], rbx             ; [0x20f098:8]=0x20f120 obj.slot0
0x000059a9      488d1de09620.  lea rbx, obj.slotvec0                   ; 0x20f090
0x000059b0      4939dc         cmp r12, rbx
0x000059b3      740f           je 0x59c4
0x000059b5      4c89e7         mov rdi, r12
0x000059b8      e8e3c3ffff     call sym..plt.got
0x000059bd      48891dbc9620.  mov qword [obj.slotvec], rbx            ; [0x20f080:8]=0x20f090 obj.slotvec0
0x000059c4      5b             pop rbx
0x000059c5      c705a9962000.  mov dword [obj.nslots], 1               ; [0x20f078:4]=1
0x000059cf      5d             pop rbp
0x000059d0      415c           pop r12
0x000059d2      c3             ret
0x000059d3      0f1f00         nop dword [rax]
0x000059d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000059e0      488d0d399820.  lea rcx, obj.default_quoting_options    ; 0x20f220
0x000059e7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000059ee      e90dfbffff     jmp sym.quotearg_n_options
0x000059f3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000059f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00005a00      488d0d199820.  lea rcx, obj.default_quoting_options    ; 0x20f220
0x00005a07      e9f4faffff     jmp sym.quotearg_n_options
0x00005a0c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00005a10      488d0d099820.  lea rcx, obj.default_quoting_options    ; 0x20f220
0x00005a17      4889fe         mov rsi, rdi
0x00005a1a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005a21      31ff           xor edi, edi
0x00005a23      e9d8faffff     jmp sym.quotearg_n_options
0x00005a28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00005a30      488d0de99720.  lea rcx, obj.default_quoting_options    ; 0x20f220
0x00005a37      4889f2         mov rdx, rsi
0x00005a3a      4889fe         mov rsi, rdi
0x00005a3d      31ff           xor edi, edi
0x00005a3f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005a44      6690           nop
0x00005a46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005a50      4883ec48       sub rsp, 0x48
0x00005a54      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005a57      64488b142528.  mov rdx, qword fs:[0x28]
0x00005a60      4889542438     mov qword [rsp + 0x38], rdx
0x00005a65      31d2           xor edx, edx
0x00005a67      83fe0a         cmp esi, 0xa
0x00005a6a      7468           je 0x5ad4
0x00005a6c      893424         mov dword [rsp], esi
0x00005a6f      4889e1         mov rcx, rsp
0x00005a72      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005a79      4889c6         mov rsi, rax
0x00005a7c      48c744240400.  mov qword [rsp + 4], 0
0x00005a85      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005a8e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005a97      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005aa0      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005aa9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005ab2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005aba      e841faffff     call sym.quotearg_n_options
0x00005abf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005ac4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005acd      750a           jne 0x5ad9                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00005acf      4883c448       add rsp, 0x48
0x00005ad3      c3             ret
0x00005ad4      e8b7beffff     call sym.imp.abort
0x00005ad9      e8d2bfffff     call sym.imp.__stack_chk_fail
0x00005ade      6690           nop
;-- quotearg_n_style_mem:
0x00005ae0      4883ec48       sub rsp, 0x48
0x00005ae4      4889d0         mov rax, rdx
0x00005ae7      4889ca         mov rdx, rcx
0x00005aea      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005af3      48894c2438     mov qword [rsp + 0x38], rcx
0x00005af8      31c9           xor ecx, ecx
0x00005afa      83fe0a         cmp esi, 0xa
0x00005afd      7461           je 0x5b60
0x00005aff      893424         mov dword [rsp], esi
0x00005b02      4889e1         mov rcx, rsp
0x00005b05      4889c6         mov rsi, rax
0x00005b08      48c744240400.  mov qword [rsp + 4], 0
0x00005b11      48c744240c00.  mov qword [rsp + 0xc], 0
0x00005b1a      48c744241400.  mov qword [rsp + 0x14], 0
0x00005b23      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005b2c      48c744242400.  mov qword [rsp + 0x24], 0
0x00005b35      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005b3e      c74424340000.  mov dword [rsp + 0x34], 0
0x00005b46      e8b5f9ffff     call sym.quotearg_n_options
0x00005b4b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005b50      644833142528.  xor rdx, qword fs:[0x28]
0x00005b59      750a           jne 0x5b65
0x00005b5b      4883c448       add rsp, 0x48
0x00005b5f      c3             ret
0x00005b60      e82bbeffff     call sym.imp.abort
0x00005b65      e846bfffff     call sym.imp.__stack_chk_fail
0x00005b6a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005b70      4889f2         mov rdx, rsi
0x00005b73      89fe           mov esi, edi
0x00005b75      31ff           xor edi, edi
0x00005b77      e9d4feffff     jmp sym.quotearg_n_style
0x00005b7c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005b80      4889d1         mov rcx, rdx
0x00005b83      4889f2         mov rdx, rsi
0x00005b86      89fe           mov esi, edi
0x00005b88      31ff           xor edi, edi
0x00005b8a      e951ffffff     jmp sym.quotearg_n_style_mem
0x00005b8f      90             nop
;-- quotearg_char_mem:
0x00005b90      4883ec48       sub rsp, 0x48
0x00005b94      89d1           mov ecx, edx
0x00005b96      64488b042528.  mov rax, qword fs:[0x28]
0x00005b9f      4889442438     mov qword [rsp + 0x38], rax
0x00005ba4      31c0           xor eax, eax
0x00005ba6      488b05a39620.  mov rax, qword [0x0020f250]             ; [0x20f250:8]=0
0x00005bad      4989e0         mov r8, rsp
0x00005bb0      83e11f         and ecx, 0x1f
0x00005bb3      660f6f056596.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005bbb      4889442430     mov qword [rsp + 0x30], rax
0x00005bc0      89d0           mov eax, edx
0x00005bc2      0f290424       movaps xmmword [rsp], xmm0
0x00005bc6      c0e805         shr al, 5
0x00005bc9      0fb6c0         movzx eax, al
0x00005bcc      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005bd1      660f6f055796.  movdqa xmm0, xmmword [0x0020f230]
0x00005bd9      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005bde      660f6f055a96.  movdqa xmm0, xmmword [0x0020f240]
0x00005be6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005beb      418b11         mov edx, dword [r9]
0x00005bee      89d0           mov eax, edx
0x00005bf0      d3e8           shr eax, cl
0x00005bf2      f7d0           not eax
0x00005bf4      83e001         and eax, 1
0x00005bf7      d3e0           shl eax, cl
0x00005bf9      4c89c1         mov rcx, r8
0x00005bfc      31d0           xor eax, edx
0x00005bfe      4889f2         mov rdx, rsi
0x00005c01      4889fe         mov rsi, rdi
0x00005c04      418901         mov dword [r9], eax
0x00005c07      31ff           xor edi, edi
0x00005c09      e8f2f8ffff     call sym.quotearg_n_options
0x00005c0e      488b742438     mov rsi, qword [rsp + 0x38]
0x00005c13      644833342528.  xor rsi, qword fs:[0x28]
0x00005c1c      7505           jne 0x5c23
0x00005c1e      4883c448       add rsp, 0x48
0x00005c22      c3             ret
0x00005c23      e888beffff     call sym.imp.__stack_chk_fail
0x00005c28      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00005c30      400fbed6       movsx edx, sil
0x00005c34      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005c3b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005c40      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005c45      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00005c4c      e93fffffff     jmp sym.quotearg_char_mem
0x00005c51      0f1f440000     nop dword [rax + rax]
0x00005c56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005c60      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005c65      e926ffffff     jmp sym.quotearg_char_mem
0x00005c6a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005c70      4883ec48       sub rsp, 0x48
0x00005c74      4889d0         mov rax, rdx
0x00005c77      64488b142528.  mov rdx, qword fs:[0x28]
0x00005c80      4889542438     mov qword [rsp + 0x38], rdx
0x00005c85      31d2           xor edx, edx
0x00005c87      83fe0a         cmp esi, 0xa
0x00005c8a      7468           je 0x5cf4
0x00005c8c      893424         mov dword [rsp], esi
0x00005c8f      4889e1         mov rcx, rsp
0x00005c92      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005c99      4889c6         mov rsi, rax
0x00005c9c      48c744240400.  mov qword [rsp + 4], 0
0x00005ca5      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00005cae      48c744241400.  mov qword [rsp + 0x14], 0
0x00005cb7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005cc0      48c744242400.  mov qword [rsp + 0x24], 0
0x00005cc9      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005cd2      c74424340000.  mov dword [rsp + 0x34], 0
0x00005cda      e821f8ffff     call sym.quotearg_n_options
0x00005cdf      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005ce4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005ced      750a           jne 0x5cf9
0x00005cef      4883c448       add rsp, 0x48
0x00005cf3      c3             ret
0x00005cf4      e897bcffff     call sym.imp.abort
0x00005cf9      e8b2bdffff     call sym.imp.__stack_chk_fail
0x00005cfe      6690           nop
;-- quotearg_n_custom_mem:
0x00005d00      4883ec48       sub rsp, 0x48
0x00005d04      4989c9         mov r9, rcx
0x00005d07      488b0d429520.  mov rcx, qword [0x0020f250]             ; [0x20f250:8]=0
0x00005d0e      660f6f050a95.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00005d16      64488b042528.  mov rax, qword fs:[0x28]
0x00005d1f      4889442438     mov qword [rsp + 0x38], rax
0x00005d24      31c0           xor eax, eax
0x00005d26      0f290424       movaps xmmword [rsp], xmm0
0x00005d2a      4885f6         test rsi, rsi
0x00005d2d      48894c2430     mov qword [rsp + 0x30], rcx
0x00005d32      c704240a0000.  mov dword [rsp], 0xa
0x00005d39      660f6f05ef94.  movdqa xmm0, xmmword [0x0020f230]
0x00005d41      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005d46      660f6f05f294.  movdqa xmm0, xmmword [0x0020f240]
0x00005d4e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005d53      7432           je 0x5d87
0x00005d55      4885d2         test rdx, rdx
0x00005d58      742d           je 0x5d87
0x00005d5a      4889742428     mov qword [rsp + 0x28], rsi
0x00005d5f      4889542430     mov qword [rsp + 0x30], rdx
0x00005d64      4889e1         mov rcx, rsp
0x00005d67      4c89c2         mov rdx, r8
0x00005d6a      4c89ce         mov rsi, r9
0x00005d6d      e88ef7ffff     call sym.quotearg_n_options
0x00005d72      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005d77      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005d80      750a           jne 0x5d8c
0x00005d82      4883c448       add rsp, 0x48
0x00005d86      c3             ret
0x00005d87      e804bcffff     call sym.imp.abort
0x00005d8c      e81fbdffff     call sym.imp.__stack_chk_fail
0x00005d91      0f1f440000     nop dword [rax + rax]
0x00005d96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005da0      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005da7      e954ffffff     jmp sym.quotearg_n_custom_mem
0x00005dac      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005db0      4889d1         mov rcx, rdx
0x00005db3      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005dba      4889f2         mov rdx, rsi
0x00005dbd      4889fe         mov rsi, rdi
0x00005dc0      31ff           xor edi, edi
0x00005dc2      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005dc7      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005dd0      4989c8         mov r8, rcx
0x00005dd3      4889d1         mov rcx, rdx
0x00005dd6      4889f2         mov rdx, rsi
0x00005dd9      4889fe         mov rsi, rdi
0x00005ddc      31ff           xor edi, edi
0x00005dde      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005de3      0f1f00         nop dword [rax]
0x00005de6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005df0      488d0d499220.  lea rcx, obj.quote_quoting_options      ; 0x20f040
0x00005df7      e904f7ffff     jmp sym.quotearg_n_options
0x00005dfc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005e00      488d0d399220.  lea rcx, obj.quote_quoting_options      ; 0x20f040
0x00005e07      4889f2         mov rdx, rsi
0x00005e0a      4889fe         mov rsi, rdi
0x00005e0d      31ff           xor edi, edi
0x00005e0f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005e14      6690           nop
0x00005e16      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005e20      488d0d199220.  lea rcx, obj.quote_quoting_options      ; 0x20f040
0x00005e27      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e2e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00005e33      0f1f00         nop dword [rax]
0x00005e36      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005e40      488d0df99120.  lea rcx, obj.quote_quoting_options      ; 0x20f040
0x00005e47      4889fe         mov rsi, rdi
0x00005e4a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005e51      31ff           xor edi, edi
0x00005e53      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005e58      0f1f84000000.  nop dword [rax + rax]
;-- get_root_dev_ino:
0x00005e60      53             push rbx                                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005e61      488d350e5b00.  lea rsi, [0x0000b976]                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf); ; "/"
0x00005e68      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005e6b      bf01000000     mov edi, 1                              ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005e70      4881eca00000.  sub rsp, 0xa0                           ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005e77      4889e2         mov rdx, rsp                            ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005e7a      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/root-dev-ino.c:30
0x00005e83      488984249800.  mov qword [rsp + 0x98], rax
0x00005e8b      31c0           xor eax, eax
0x00005e8d      e8febbffff     call sym.imp.__lxstat                   ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00005e92      85c0           test eax, eax                           ; ../coreutils-8.31/lib/root-dev-ino.c:32
0x00005e94      7532           jne 0x5ec8
0x00005e96      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/root-dev-ino.c:34
0x00005e9b      488903         mov qword [rbx], rax
0x00005e9e      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/root-dev-ino.c:35
0x00005ea2      48894308       mov qword [rbx + 8], rax
0x00005ea6      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/root-dev-ino.c:36
0x00005ea9      488b8c249800.  mov rcx, qword [rsp + 0x98]             ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00005eb1      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005eba      7510           jne 0x5ecc
0x00005ebc      4881c4a00000.  add rsp, 0xa0
0x00005ec3      5b             pop rbx
0x00005ec4      c3             ret
0x00005ec5      0f1f00         nop dword [rax]
0x00005ec8      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/root-dev-ino.c:33
0x00005eca      ebdd           jmp 0x5ea9
0x00005ecc      e8dfbbffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/root-dev-ino.c:37
0x00005ed1      662e0f1f8400.  nop word cs:[rax + rax]
0x00005edb      0f1f440000     nop dword [rax + rax]
;-- version_etc_arn:
0x00005ee0      4157           push r15
0x00005ee2      4156           push r14
0x00005ee4      4155           push r13
0x00005ee6      4154           push r12
0x00005ee8      4d89cc         mov r12, r9
0x00005eeb      55             push rbp
0x00005eec      53             push rbx
0x00005eed      4889fd         mov rbp, rdi
0x00005ef0      4c89c3         mov rbx, r8
0x00005ef3      4883ec28       sub rsp, 0x28
0x00005ef7      4885f6         test rsi, rsi
0x00005efa      0f8418010000   je 0x6018
0x00005f00      4989d0         mov r8, rdx
0x00005f03      488d153e5f00.  lea rdx, [0x0000be48]                   ; "%s (%s) %s\n"
0x00005f0a      4989c9         mov r9, rcx
0x00005f0d      31c0           xor eax, eax
0x00005f0f      4889f1         mov rcx, rsi
0x00005f12      be01000000     mov esi, 1
0x00005f17      e844beffff     call sym.imp.__fprintf_chk
0x00005f1c      488d35385f00.  lea rsi, [0x0000be5b]                   ; "(C)"
0x00005f23      31ff           xor edi, edi
0x00005f25      ba05000000     mov edx, 5
0x00005f2a      e831bbffff     call sym.imp.dcgettext
0x00005f2f      488d152a6200.  lea rdx, obj.version_etc_copyright      ; 0xc160 ; "Copyright %s %d Free Software Foundation, Inc."
0x00005f36      4889c1         mov rcx, rax
0x00005f39      41b8e3070000   mov r8d, 0x7e3
0x00005f3f      be01000000     mov esi, 1
0x00005f44      4889ef         mov rdi, rbp
0x00005f47      31c0           xor eax, eax
0x00005f49      e812beffff     call sym.imp.__fprintf_chk
0x00005f4e      488d357b5f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0xbed0 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00005f55      31ff           xor edi, edi
0x00005f57      ba05000000     mov edx, 5
0x00005f5c      e8ffbaffff     call sym.imp.dcgettext
0x00005f61      4889ee         mov rsi, rbp
0x00005f64      4889c7         mov rdi, rax
0x00005f67      e814bcffff     call sym.imp.fputs_unlocked
0x00005f6c      4983fc09       cmp r12, 9
0x00005f70      0f873a030000   ja 0x62b0
0x00005f76      488d15af6100.  lea rdx, [0x0000c12c]
0x00005f7d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005f81      4801d0         add rax, rdx
0x00005f84      ffe0           jmp rax
0x00005f86      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f90      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005f94      488b4310       mov rax, qword [rbx + 0x10]
0x00005f98      488d35a16000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0xc040 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x00005f9f      4c8b4308       mov r8, qword [rbx + 8]
0x00005fa3      ba05000000     mov edx, 5
0x00005fa8      31ff           xor edi, edi
0x00005faa      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005fae      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005fb2      4c894c2410     mov qword [rsp + 0x10], r9
0x00005fb7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005fbb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005fbf      48890424       mov qword [rsp], rax
0x00005fc3      4c89442408     mov qword [rsp + 8], r8
0x00005fc8      488b1b         mov rbx, qword [rbx]
0x00005fcb      e890baffff     call sym.imp.dcgettext
0x00005fd0      4883ec08       sub rsp, 8
0x00005fd4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005fd9      4889c2         mov rdx, rax
0x00005fdc      4889d9         mov rcx, rbx
0x00005fdf      be01000000     mov esi, 1
0x00005fe4      4889ef         mov rdi, rbp
0x00005fe7      31c0           xor eax, eax
0x00005fe9      4151           push r9
0x00005feb      4155           push r13
0x00005fed      4154           push r12
0x00005fef      4157           push r15
0x00005ff1      4156           push r14
0x00005ff3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005ff8      4c8b442438     mov r8, qword [rsp + 0x38]
0x00005ffd      e85ebdffff     call sym.imp.__fprintf_chk
0x00006002      4883c430       add rsp, 0x30
0x00006006      4883c428       add rsp, 0x28
0x0000600a      5b             pop rbx
0x0000600b      5d             pop rbp
0x0000600c      415c           pop r12
0x0000600e      415d           pop r13
0x00006010      415e           pop r14
0x00006012      415f           pop r15
0x00006014      c3             ret
0x00006015      0f1f00         nop dword [rax]
0x00006018      4989c8         mov r8, rcx
0x0000601b      4889d1         mov rcx, rdx
0x0000601e      488d152f5e00.  lea rdx, str.s__s                       ; 0xbe54 ; "%s %s\n"
0x00006025      be01000000     mov esi, 1
0x0000602a      31c0           xor eax, eax
0x0000602c      e82fbdffff     call sym.imp.__fprintf_chk
0x00006031      e9e6feffff     jmp 0x5f1c
0x00006036      662e0f1f8400.  nop word cs:[rax + rax]
0x00006040      4c8b5340       mov r10, qword [rbx + 0x40]
0x00006044      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00006048      488d35216000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0xc070 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000604f      488b4310       mov rax, qword [rbx + 0x10]
0x00006053      4c8b4308       mov r8, qword [rbx + 8]
0x00006057      ba05000000     mov edx, 5
0x0000605c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006060      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006064      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006068      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000606c      488b1b         mov rbx, qword [rbx]
0x0000606f      4c89542418     mov qword [rsp + 0x18], r10
0x00006074      4c894c2410     mov qword [rsp + 0x10], r9
0x00006079      48890424       mov qword [rsp], rax
0x0000607d      4c89442408     mov qword [rsp + 8], r8
0x00006082      31ff           xor edi, edi
0x00006084      e8d7b9ffff     call sym.imp.dcgettext
0x00006089      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000608e      4152           push r10
0x00006090      e93fffffff     jmp 0x5fd4
0x00006095      0f1f00         nop dword [rax]
0x00006098      488b1b         mov rbx, qword [rbx]
0x0000609b      488d35bd5d00.  lea rsi, str.Written_by__s.             ; 0xbe5f ; "Written by %s.\n"
0x000060a2      ba05000000     mov edx, 5
0x000060a7      31ff           xor edi, edi
0x000060a9      e8b2b9ffff     call sym.imp.dcgettext
0x000060ae      4883c428       add rsp, 0x28
0x000060b2      4889d9         mov rcx, rbx
0x000060b5      4889ef         mov rdi, rbp
0x000060b8      5b             pop rbx
0x000060b9      5d             pop rbp
0x000060ba      415c           pop r12
0x000060bc      415d           pop r13
0x000060be      415e           pop r14
0x000060c0      415f           pop r15
0x000060c2      4889c2         mov rdx, rax
0x000060c5      be01000000     mov esi, 1
0x000060ca      31c0           xor eax, eax
0x000060cc      e98fbcffff     jmp sym.imp.__fprintf_chk
0x000060d1      0f1f80000000.  nop dword [rax]
0x000060d8      4c8b6308       mov r12, qword [rbx + 8]
0x000060dc      488d358c5d00.  lea rsi, str.Written_by__s_and__s.      ; 0xbe6f ; "Written by %s and %s.\n"
0x000060e3      488b1b         mov rbx, qword [rbx]
0x000060e6      ba05000000     mov edx, 5
0x000060eb      31ff           xor edi, edi
0x000060ed      e86eb9ffff     call sym.imp.dcgettext
0x000060f2      4883c428       add rsp, 0x28
0x000060f6      4d89e0         mov r8, r12
0x000060f9      4889d9         mov rcx, rbx
0x000060fc      4889ef         mov rdi, rbp
0x000060ff      4889c2         mov rdx, rax
0x00006102      be01000000     mov esi, 1
0x00006107      5b             pop rbx
0x00006108      5d             pop rbp
0x00006109      415c           pop r12
0x0000610b      415d           pop r13
0x0000610d      415e           pop r14
0x0000610f      415f           pop r15
0x00006111      31c0           xor eax, eax
0x00006113      e948bcffff     jmp sym.imp.__fprintf_chk
0x00006118      0f1f84000000.  nop dword [rax + rax]
0x00006120      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006124      4c8b6308       mov r12, qword [rbx + 8]
0x00006128      488d35575d00.  lea rsi, str.Written_by__s___s__and__s. ; 0xbe86 ; "Written by %s, %s, and %s.\n"
0x0000612f      488b1b         mov rbx, qword [rbx]
0x00006132      ba05000000     mov edx, 5
0x00006137      31ff           xor edi, edi
0x00006139      e822b9ffff     call sym.imp.dcgettext
0x0000613e      4883c428       add rsp, 0x28
0x00006142      4d89e9         mov r9, r13
0x00006145      4d89e0         mov r8, r12
0x00006148      4889d9         mov rcx, rbx
0x0000614b      4889ef         mov rdi, rbp
0x0000614e      4889c2         mov rdx, rax
0x00006151      5b             pop rbx
0x00006152      5d             pop rbp
0x00006153      415c           pop r12
0x00006155      415d           pop r13
0x00006157      415e           pop r14
0x00006159      415f           pop r15
0x0000615b      be01000000     mov esi, 1
0x00006160      31c0           xor eax, eax
0x00006162      e9f9bbffff     jmp sym.imp.__fprintf_chk
0x00006167      660f1f840000.  nop word [rax + rax]
0x00006170      488d35295e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0xbfa0 ; "Written by %s, %s, %s,\nand %s.\n"
0x00006177      ba05000000     mov edx, 5
0x0000617c      31ff           xor edi, edi
0x0000617e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006182      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006186      4c8b6308       mov r12, qword [rbx + 8]
0x0000618a      488b1b         mov rbx, qword [rbx]
0x0000618d      e8ceb8ffff     call sym.imp.dcgettext
0x00006192      4883ec08       sub rsp, 8
0x00006196      4156           push r14
0x00006198      4889c2         mov rdx, rax
0x0000619b      4d89e9         mov r9, r13
0x0000619e      4d89e0         mov r8, r12
0x000061a1      4889d9         mov rcx, rbx
0x000061a4      4889ef         mov rdi, rbp
0x000061a7      be01000000     mov esi, 1
0x000061ac      31c0           xor eax, eax
0x000061ae      e8adbbffff     call sym.imp.__fprintf_chk
0x000061b3      58             pop rax
0x000061b4      5a             pop rdx
0x000061b5      4883c428       add rsp, 0x28
0x000061b9      5b             pop rbx
0x000061ba      5d             pop rbp
0x000061bb      415c           pop r12
0x000061bd      415d           pop r13
0x000061bf      415e           pop r14
0x000061c1      415f           pop r15
0x000061c3      c3             ret
0x000061c4      0f1f4000       nop dword [rax]
0x000061c8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000061cc      488d35ed5d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0xbfc0 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x000061d3      ba05000000     mov edx, 5
0x000061d8      31ff           xor edi, edi
0x000061da      4c8b7318       mov r14, qword [rbx + 0x18]
0x000061de      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000061e2      4c8b6308       mov r12, qword [rbx + 8]
0x000061e6      488b1b         mov rbx, qword [rbx]
0x000061e9      e872b8ffff     call sym.imp.dcgettext
0x000061ee      4157           push r15
0x000061f0      eba4           jmp 0x6196
0x000061f2      660f1f440000   nop word [rax + rax]
0x000061f8      4c8b4308       mov r8, qword [rbx + 8]
0x000061fc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006200      488d35e15d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0xbfe8 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00006207      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000620b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000620f      ba05000000     mov edx, 5
0x00006214      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00006218      31ff           xor edi, edi
0x0000621a      488b1b         mov rbx, qword [rbx]
0x0000621d      4c890424       mov qword [rsp], r8
0x00006221      e83ab8ffff     call sym.imp.dcgettext
0x00006226      4883ec08       sub rsp, 8
0x0000622a      4d89e9         mov r9, r13
0x0000622d      4154           push r12
0x0000622f      4157           push r15
0x00006231      4156           push r14
0x00006233      4c8b442420     mov r8, qword [rsp + 0x20]
0x00006238      4889d9         mov rcx, rbx
0x0000623b      4889c2         mov rdx, rax
0x0000623e      4889ef         mov rdi, rbp
0x00006241      be01000000     mov esi, 1
0x00006246      31c0           xor eax, eax
0x00006248      e813bbffff     call sym.imp.__fprintf_chk
0x0000624d      4883c420       add rsp, 0x20
0x00006251      4883c428       add rsp, 0x28
0x00006255      5b             pop rbx
0x00006256      5d             pop rbp
0x00006257      415c           pop r12
0x00006259      415d           pop r13
0x0000625b      415e           pop r14
0x0000625d      415f           pop r15
0x0000625f      c3             ret
0x00006260      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00006264      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00006268      488d35a15d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0xc010 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x0000626f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00006273      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00006277      ba05000000     mov edx, 5
0x0000627c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00006280      4c8b4308       mov r8, qword [rbx + 8]
0x00006284      31ff           xor edi, edi
0x00006286      4c894c2408     mov qword [rsp + 8], r9
0x0000628b      488b1b         mov rbx, qword [rbx]
0x0000628e      4c890424       mov qword [rsp], r8
0x00006292      e8c9b7ffff     call sym.imp.dcgettext
0x00006297      4155           push r13
0x00006299      4154           push r12
0x0000629b      4157           push r15
0x0000629d      4156           push r14
0x0000629f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000062a4      eb8d           jmp 0x6233
0x000062a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000062b0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000062b4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000062b8      ba05000000     mov edx, 5
0x000062bd      488b4310       mov rax, qword [rbx + 0x10]
0x000062c1      4c8b4308       mov r8, qword [rbx + 8]
0x000062c5      488d35dc5d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0xc0a8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x000062cc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000062d0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000062d4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000062d8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000062dc      4c89542418     mov qword [rsp + 0x18], r10
0x000062e1      4c894c2410     mov qword [rsp + 0x10], r9
0x000062e6      48890424       mov qword [rsp], rax
0x000062ea      4c89442408     mov qword [rsp + 8], r8
0x000062ef      488b1b         mov rbx, qword [rbx]
0x000062f2      e98bfdffff     jmp 0x6082
0x000062f7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00006300      4531c9         xor r9d, r9d
0x00006303      49833800       cmp qword [r8], 0
0x00006307      7412           je 0x631b
0x00006309      0f1f80000000.  nop dword [rax]
0x00006310      4983c101       add r9, 1
0x00006314      4b833cc800     cmp qword [r8 + r9*8], 0
0x00006319      75f5           jne 0x6310
0x0000631b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00006320      4883ec68       sub rsp, 0x68
0x00006324      4d89c2         mov r10, r8
0x00006327      4531c9         xor r9d, r9d
0x0000632a      64488b042528.  mov rax, qword fs:[0x28]
0x00006333      4889442458     mov qword [rsp + 0x58], rax
0x00006338      31c0           xor eax, eax
0x0000633a      4989e0         mov r8, rsp
0x0000633d      0f1f00         nop dword [rax]
0x00006340      418b02         mov eax, dword [r10]
0x00006343      83f82f         cmp eax, 0x2f
0x00006346      7742           ja 0x638a
0x00006348      4189c3         mov r11d, eax
0x0000634b      4d035a10       add r11, qword [r10 + 0x10]
0x0000634f      83c008         add eax, 8
0x00006352      418902         mov dword [r10], eax
0x00006355      498b03         mov rax, qword [r11]
0x00006358      4885c0         test rax, rax
0x0000635b      4b8904c8       mov qword [r8 + r9*8], rax
0x0000635f      740a           je 0x636b
0x00006361      4983c101       add r9, 1
0x00006365      4983f90a       cmp r9, 0xa
0x00006369      75d5           jne 0x6340
0x0000636b      e870fbffff     call sym.version_etc_arn
0x00006370      488b442458     mov rax, qword [rsp + 0x58]
0x00006375      644833042528.  xor rax, qword fs:[0x28]
0x0000637e      7505           jne 0x6385
0x00006380      4883c468       add rsp, 0x68
0x00006384      c3             ret
0x00006385      e826b7ffff     call sym.imp.__stack_chk_fail
0x0000638a      4d8b5a08       mov r11, qword [r10 + 8]
0x0000638e      498d4308       lea rax, [r11 + 8]
0x00006392      49894208       mov qword [r10 + 8], rax
0x00006396      ebbd           jmp 0x6355
0x00006398      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x000063a0      55             push rbp
0x000063a1      53             push rbx
0x000063a2      41ba20000000   mov r10d, 0x20                          ; "@"
0x000063a8      4531db         xor r11d, r11d
0x000063ab      4881ecb80000.  sub rsp, 0xb8
0x000063b2      64488b042528.  mov rax, qword fs:[0x28]
0x000063bb      4889442478     mov qword [rsp + 0x78], rax
0x000063c0      31c0           xor eax, eax
0x000063c2      488d8424d000.  lea rax, [rsp + 0xd0]
0x000063ca      4c898424a000.  mov qword [rsp + 0xa0], r8
0x000063d2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x000063da      4c8d442420     lea r8, [rsp + 0x20]
0x000063df      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x000063e7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x000063ef      4889442410     mov qword [rsp + 0x10], rax
0x000063f4      488d84248000.  lea rax, [rsp + 0x80]
0x000063fc      4531c9         xor r9d, r9d
0x000063ff      4889442418     mov qword [rsp + 0x18], rax
0x00006404      4889c5         mov rbp, rax
0x00006407      660f1f840000.  nop word [rax + rax]
0x00006410      4183fa2f       cmp r10d, 0x2f
0x00006414      7756           ja 0x646c
0x00006416      4489d0         mov eax, r10d
0x00006419      41bb01000000   mov r11d, 1
0x0000641f      4183c208       add r10d, 8
0x00006423      4801e8         add rax, rbp
0x00006426      488b00         mov rax, qword [rax]
0x00006429      4885c0         test rax, rax
0x0000642c      4b8904c8       mov qword [r8 + r9*8], rax
0x00006430      740a           je 0x643c
0x00006432      4983c101       add r9, 1
0x00006436      4983f90a       cmp r9, 0xa
0x0000643a      75d4           jne 0x6410
0x0000643c      4584db         test r11b, r11b
0x0000643f      7524           jne 0x6465
0x00006441      e89afaffff     call sym.version_etc_arn
0x00006446      488b442478     mov rax, qword [rsp + 0x78]
0x0000644b      644833042528.  xor rax, qword fs:[0x28]
0x00006454      750a           jne 0x6460
0x00006456      4881c4b80000.  add rsp, 0xb8
0x0000645d      5b             pop rbx
0x0000645e      5d             pop rbp
0x0000645f      c3             ret
0x00006460      e84bb6ffff     call sym.imp.__stack_chk_fail
0x00006465      4489542408     mov dword [rsp + 8], r10d
0x0000646a      ebd5           jmp 0x6441
0x0000646c      4889d8         mov rax, rbx
0x0000646f      4883c308       add rbx, 8
0x00006473      ebb1           jmp 0x6426
0x00006475      90             nop
0x00006476      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00006480      53             push rbx
0x00006481      488d351a5a00.  lea rsi, str.Report_bugs_to:__s         ; 0xbea2 ; "\nReport bugs to: %s\n"
0x00006488      ba05000000     mov edx, 5
0x0000648d      31ff           xor edi, edi
0x0000648f      e8ccb5ffff     call sym.imp.dcgettext
0x00006494      488d153b5000.  lea rdx, str.bug_coreutils_gnu.org      ; 0xb4d6 ; "bug-coreutils@gnu.org"
0x0000649b      4889c6         mov rsi, rax
0x0000649e      bf01000000     mov edi, 1
0x000064a3      31c0           xor eax, eax
0x000064a5      e8f6b7ffff     call sym.imp.__printf_chk
0x000064aa      488d35065a00.  lea rsi, str.s_home_page:___s           ; 0xbeb7 ; "%s home page: <%s>\n"
0x000064b1      ba05000000     mov edx, 5
0x000064b6      31ff           xor edi, edi
0x000064b8      e8a3b5ffff     call sym.imp.dcgettext
0x000064bd      488d0dcc4d00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0xb290 ; "https://www.gnu.org/software/coreutils/"
0x000064c4      488d15d24400.  lea rdx, str.GNU_coreutils              ; 0xa99d ; "GNU coreutils"
0x000064cb      4889c6         mov rsi, rax
0x000064ce      bf01000000     mov edi, 1
0x000064d3      31c0           xor eax, eax
0x000064d5      e8c6b7ffff     call sym.imp.__printf_chk
0x000064da      488b1dc78b20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20f0a8:8]=0
0x000064e1      488d35005c00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0xc0e8 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x000064e8      31ff           xor edi, edi
0x000064ea      ba05000000     mov edx, 5
0x000064ef      e86cb5ffff     call sym.imp.dcgettext
0x000064f4      4889de         mov rsi, rbx
0x000064f7      4889c7         mov rdi, rax
0x000064fa      5b             pop rbx
0x000064fb      e980b6ffff     jmp sym.imp.fputs_unlocked
;-- can_write_any_file:
0x00006500      803d528d2000.  cmp byte [obj.initialized.3064], 0      ; ../coreutils-8.31/lib/write-any-file.c:33 ; [0x20f259:1]=0
0x00006507      740f           je 0x6518
0x00006509      0fb605488d20.  movzx eax, byte [obj.can_write.3065]    ; [0x20f258:1]=0
0x00006510      c3             ret                                     ; ../coreutils-8.31/lib/write-any-file.c:51
0x00006511      0f1f80000000.  nop dword [rax]
0x00006518      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:33
0x0000651c      e81fb6ffff     call sym.imp.geteuid                    ; ../coreutils-8.31/lib/write-any-file.c:44
0x00006521      85c0           test eax, eax
0x00006523      c6052f8d2000.  mov byte [obj.initialized.3064], 1      ; ../coreutils-8.31/lib/write-any-file.c:47 ; [0x20f259:1]=0
0x0000652a      0f94c0         sete al                                 ; ../coreutils-8.31/lib/write-any-file.c:44
0x0000652d      8805258d2000   mov byte [obj.can_write.3065], al       ; ../coreutils-8.31/lib/write-any-file.c:46 ; [0x20f258:1]=0
0x00006533      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/write-any-file.c:51
0x00006537      c3             ret
0x00006538      0f1f84000000.  nop dword [rax + rax]
;-- xmalloc:
0x00006540      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00006541      4889fb         mov rbx, rdi
0x00006544      e8d7b6ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00006549      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x0000654c      7505           jne 0x6553
0x0000654e      4885db         test rbx, rbx
0x00006551      7502           jne 0x6555
0x00006553      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00006554      c3             ret
0x00006555      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x0000655a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00006560      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00006563      48f7e6         mul rsi
0x00006566      4889c7         mov rdi, rax
0x00006569      0f90c0         seto al
0x0000656c      4885ff         test rdi, rdi
0x0000656f      780a           js 0x657b
0x00006571      0fb6c0         movzx eax, al
0x00006574      4885c0         test rax, rax
0x00006577      7502           jne 0x657b
0x00006579      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x0000657b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x0000657f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00006584      6690           nop
0x00006586      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00006590      ebae           jmp sym.xmalloc
0x00006592      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00006596      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x000065a0      4885f6         test rsi, rsi
0x000065a3      53             push rbx
0x000065a4      4889f3         mov rbx, rsi
0x000065a7      7505           jne 0x65ae
0x000065a9      4885ff         test rdi, rdi
0x000065ac      751a           jne 0x65c8
0x000065ae      4889de         mov rsi, rbx
0x000065b1      e8cab6ffff     call sym.imp.realloc
0x000065b6      4885c0         test rax, rax
0x000065b9      7505           jne 0x65c0
0x000065bb      4885db         test rbx, rbx
0x000065be      7511           jne 0x65d1                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x000065c0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x000065c1      c3             ret
0x000065c2      660f1f440000   nop word [rax + rax]
0x000065c8      e8d3b7ffff     call sym..plt.got
0x000065cd      31c0           xor eax, eax
0x000065cf      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x000065d0      c3             ret
0x000065d1      e8ba010000     call sym.xalloc_die
0x000065d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x000065e0      4889f0         mov rax, rsi
0x000065e3      48f7e2         mul rdx
0x000065e6      4889c6         mov rsi, rax
0x000065e9      0f90c0         seto al
0x000065ec      4885f6         test rsi, rsi
0x000065ef      780a           js 0x65fb
0x000065f1      0fb6c0         movzx eax, al
0x000065f4      4885c0         test rax, rax
0x000065f7      7502           jne 0x65fb
0x000065f9      eba5           jmp sym.xrealloc
0x000065fb      4883ec08       sub rsp, 8
0x000065ff      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00006604      6690           nop
0x00006606      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00006610      4885ff         test rdi, rdi
0x00006613      4989d1         mov r9, rdx
0x00006616      488b0e         mov rcx, qword [rsi]
0x00006619      7435           je 0x6650
0x0000661b      31d2           xor edx, edx
0x0000661d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00006627      49f7f1         div r9
0x0000662a      4839c8         cmp rax, rcx
0x0000662d      763c           jbe 0x666b
0x0000662f      4889c8         mov rax, rcx
0x00006632      48d1e8         shr rax, 1
0x00006635      488d4c0801     lea rcx, [rax + rcx + 1]
0x0000663a      48890e         mov qword [rsi], rcx
0x0000663d      490fafc9       imul rcx, r9
0x00006641      4889ce         mov rsi, rcx
0x00006644      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00006649      0f1f80000000.  nop dword [rax]
0x00006650      4885c9         test rcx, rcx
0x00006653      7423           je 0x6678
0x00006655      4889c8         mov rax, rcx
0x00006658      49f7e1         mul r9
0x0000665b      0f90c2         seto dl
0x0000665e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00006661      0fb6d2         movzx edx, dl
0x00006664      7805           js 0x666b
0x00006666      4885d2         test rdx, rdx
0x00006669      74cf           je 0x663a
0x0000666b      4883ec08       sub rsp, 8
0x0000666f      e81c010000     call sym.xalloc_die
0x00006674      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00006678      31d2           xor edx, edx
0x0000667a      b880000000     mov eax, 0x80
0x0000667f      4531c0         xor r8d, r8d
0x00006682      49f7f1         div r9
0x00006685      4885c0         test rax, rax
0x00006688      410f94c0       sete r8b
0x0000668c      498d0c00       lea rcx, [r8 + rax]
0x00006690      ebc3           jmp 0x6655
0x00006692      0f1f4000       nop dword [rax]
0x00006696      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x000066a0      4885ff         test rdi, rdi
0x000066a3      488b06         mov rax, qword [rsi]
0x000066a6      7428           je 0x66d0
0x000066a8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x000066b2      4839d0         cmp rax, rdx
0x000066b5      772a           ja 0x66e1
0x000066b7      4889c2         mov rdx, rax
0x000066ba      48d1ea         shr rdx, 1
0x000066bd      488d440201     lea rax, [rdx + rax + 1]
0x000066c2      488906         mov qword [rsi], rax
0x000066c5      4889c6         mov rsi, rax
0x000066c8      e9d3feffff     jmp sym.xrealloc
0x000066cd      0f1f00         nop dword [rax]
0x000066d0      4885c0         test rax, rax
0x000066d3      ba80000000     mov edx, 0x80
0x000066d8      480f44c2       cmove rax, rdx
0x000066dc      4885c0         test rax, rax
0x000066df      79e1           jns 0x66c2
0x000066e1      4883ec08       sub rsp, 8
0x000066e5      e8a6000000     call sym.xalloc_die
0x000066ea      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x000066f0      53             push rbx
0x000066f1      4889fb         mov rbx, rdi
0x000066f4      e847feffff     call sym.xmalloc
0x000066f9      4889da         mov rdx, rbx
0x000066fc      31f6           xor esi, esi
0x000066fe      4889c7         mov rdi, rax
0x00006701      5b             pop rbx
0x00006702      e929b4ffff     jmp sym.imp.memset
0x00006707      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00006710      4889f8         mov rax, rdi
0x00006713      4883ec08       sub rsp, 8
0x00006717      48f7e6         mul rsi
0x0000671a      0f90c2         seto dl
0x0000671d      4885c0         test rax, rax
0x00006720      7817           js 0x6739
0x00006722      0fb6d2         movzx edx, dl
0x00006725      4885d2         test rdx, rdx
0x00006728      750f           jne 0x6739
0x0000672a      e861b4ffff     call sym.imp.calloc
0x0000672f      4885c0         test rax, rax
0x00006732      7405           je 0x6739
0x00006734      4883c408       add rsp, 8
0x00006738      c3             ret
0x00006739      e852000000     call sym.xalloc_die
0x0000673e      6690           nop
;-- xmemdup:
0x00006740      55             push rbp
0x00006741      53             push rbx
0x00006742      4889fd         mov rbp, rdi
0x00006745      4889f7         mov rdi, rsi
0x00006748      4889f3         mov rbx, rsi
0x0000674b      4883ec08       sub rsp, 8
0x0000674f      e8ecfdffff     call sym.xmalloc
0x00006754      4883c408       add rsp, 8
0x00006758      4889da         mov rdx, rbx
0x0000675b      4889ee         mov rsi, rbp
0x0000675e      5b             pop rbx
0x0000675f      5d             pop rbp
0x00006760      4889c7         mov rdi, rax
0x00006763      e978b4ffff     jmp sym.imp.memcpy
0x00006768      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00006770      53             push rbx
0x00006771      4889fb         mov rbx, rdi
0x00006774      e807b3ffff     call sym.imp.strlen
0x00006779      4889df         mov rdi, rbx
0x0000677c      488d7001       lea rsi, [rax + 1]
0x00006780      5b             pop rbx
0x00006781      ebbd           jmp sym.xmemdup
0x00006783      662e0f1f8400.  nop word cs:[rax + rax]
0x0000678d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00006790      488d35f85900.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0xc18f ; "memory exhausted"
0x00006797      4883ec08       sub rsp, 8
0x0000679b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x000067a0      31ff           xor edi, edi
0x000067a2      e8b9b2ffff     call sym.imp.dcgettext
0x000067a7      8b3d73882000   mov edi, dword [obj.exit_failure]       ; [0x20f020:4]=1
0x000067ad      488d15db5000.  lea rdx, [0x0000b88f]                   ; "%s"
0x000067b4      4889c1         mov rcx, rax
0x000067b7      31f6           xor esi, esi
0x000067b9      31c0           xor eax, eax
0x000067bb      e810b5ffff     call sym.imp.error
0x000067c0      e8cbb1ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x000067c5      662e0f1f8400.  nop word cs:[rax + rax]
0x000067cf      90             nop
;-- xfts_open:
0x000067d0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:35
0x000067d4      81ce00020000   or esi, 0x200                           ; ../coreutils-8.31/lib/xfts.c:36
0x000067da      e8c1170000     call sym.rpl_fts_open
0x000067df      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xfts.c:37
0x000067e2      740c           je 0x67f0
0x000067e4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xfts.c:46
0x000067e8      c3             ret
0x000067e9      0f1f80000000.  nop dword [rax]
0x000067f0      e8abb1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xfts.c:41
0x000067f5      833816         cmp dword [rax], 0x16
0x000067f8      7406           je 0x6800
0x000067fa      e891ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xfts.c:42
0x000067ff      90             nop
0x00006800      488d0dc95900.  lea rcx, obj.__PRETTY_FUNCTION__.3434   ; ../coreutils-8.31/lib/xfts.c:41 ; 0xc1d0 ; "xfts_open"
0x00006807      488d35925900.  lea rsi, str..._coreutils_8.31_lib_xfts.c ; 0xc1a0 ; "../coreutils-8.31/lib/xfts.c"
0x0000680e      488d3da85900.  lea rdi, str.errno____EINVAL            ; 0xc1bd ; "errno != EINVAL"
0x00006815      ba29000000     mov edx, 0x29                           ; ')'
0x0000681a      e801b3ffff     call sym.imp.__assert_fail
0x0000681f      90             nop
;-- cycle_warning_required:
0x00006820      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/xfts.c:57
0x00006823      b801000000     mov eax, 1
0x00006828      83e211         and edx, 0x11
0x0000682b      83fa10         cmp edx, 0x10                           ; ../coreutils-8.31/lib/xfts.c:63
0x0000682e      7407           je 0x6837
0x00006830      31c0           xor eax, eax
0x00006832      83fa11         cmp edx, 0x11
0x00006835      7409           je 0x6840
0x00006837      f3c3           ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00006839      0f1f80000000.  nop dword [rax]
0x00006840      48837e5800     cmp qword [rsi + 0x58], 0               ; ../coreutils-8.31/lib/xfts.c:64
0x00006845      0f95c0         setne al
0x00006848      c3             ret                                     ; ../coreutils-8.31/lib/xfts.c:65
0x00006849      0f1f80000000.  nop dword [rax]
;-- yesno:
0x00006850      53             push rbx                                ; ../coreutils-8.31/lib/yesno.c:33
0x00006851      ba0a000000     mov edx, 0xa
0x00006856      31db           xor ebx, ebx
0x00006858      4883ec20       sub rsp, 0x20
0x0000685c      488b0d4d8820.  mov rcx, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x20f0b0:8]=0
0x00006863      488d742410     lea rsi, [rsp + 0x10]
0x00006868      488d7c2408     lea rdi, [rsp + 8]                      ; stdio.h:-219
0x0000686d      48c744240800.  mov qword [rsp + 8], 0
0x00006876      64488b042528.  mov rax, qword fs:[0x28]
0x0000687f      4889442418     mov qword [rsp + 0x18], rax
0x00006884      31c0           xor eax, eax
0x00006886      48c744241000.  mov qword [rsp + 0x10], 0               ; stdio.h:-343
0x0000688f      e80cb3ffff     call sym.imp.__getdelim
0x00006894      4885c0         test rax, rax
0x00006897      7e19           jle 0x68b2
0x00006899      488b7c2408     mov rdi, qword [rsp + 8]
0x0000689e      488d4407ff     lea rax, [rdi + rax - 1]
0x000068a3      80380a         cmp byte [rax], 0xa
0x000068a6      7430           je 0x68d8
0x000068a8      e823b3ffff     call sym.imp.rpmatch
0x000068ad      85c0           test eax, eax
0x000068af      0f9fc3         setg bl
0x000068b2      488b7c2408     mov rdi, qword [rsp + 8]
0x000068b7      e8e4b4ffff     call sym..plt.got
0x000068bc      488b542418     mov rdx, qword [rsp + 0x18]
0x000068c1      644833142528.  xor rdx, qword fs:[0x28]
0x000068ca      89d8           mov eax, ebx                            ; stdio.h:-336
0x000068cc      7514           jne 0x68e2
0x000068ce      4883c420       add rsp, 0x20
0x000068d2      5b             pop rbx
0x000068d3      c3             ret
0x000068d4      0f1f4000       nop dword [rax]                         ; stdio.h:-321
0x000068d8      c60000         mov byte [rax], 0
0x000068db      488b7c2408     mov rdi, qword [rsp + 8]
0x000068e0      ebc6           jmp 0x68a8
0x000068e2      e8c9b1ffff     call sym.imp.__stack_chk_fail
0x000068e7      660f1f840000.  nop word [rax + rax]
;-- rpl_fflush:
0x000068f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000068f3      53             push rbx
0x000068f4      4889fb         mov rbx, rdi
0x000068f7      7411           je 0x690a                               ; ../coreutils-8.31/lib/fflush.c:150
0x000068f9      e862b3ffff     call sym.imp.__freading
0x000068fe      85c0           test eax, eax
0x00006900      7408           je 0x690a
0x00006902      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00006908      750e           jne 0x6918
0x0000690a      4889df         mov rdi, rbx
0x0000690d      5b             pop rbx
0x0000690e      e91db3ffff     jmp sym.imp.fflush
0x00006913      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fflush.c:32
0x00006918      4889df         mov rdi, rbx
0x0000691b      ba01000000     mov edx, 1
0x00006920      31f6           xor esi, esi
0x00006922      e839000000     call sym.rpl_fseeko
0x00006927      4889df         mov rdi, rbx
0x0000692a      5b             pop rbx
0x0000692b      e900b3ffff     jmp sym.imp.fflush
;-- freadahead:
0x00006930      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/freadahead.c:35
0x00006932      488b4f20       mov rcx, qword [rdi + 0x20]             ; ../coreutils-8.31/lib/freadahead.c:38
0x00006936      48394f28       cmp qword [rdi + 0x28], rcx
0x0000693a      771b           ja 0x6957
0x0000693c      488b4710       mov rax, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/freadahead.c:40
0x00006940      482b4708       sub rax, qword [rdi + 8]
0x00006944      f70700010000   test dword [rdi], 0x100                 ; ../coreutils-8.31/lib/freadahead.c:41
0x0000694a      740b           je 0x6957
0x0000694c      488b5758       mov rdx, qword [rdi + 0x58]
0x00006950      482b5748       sub rdx, qword [rdi + 0x48]
0x00006954      4801d0         add rax, rdx
0x00006957      f3c3           ret                                     ; ../coreutils-8.31/lib/freadahead.c:103
0x00006959      0f1f80000000.  nop dword [rax]
;-- rpl_fseeko:
0x00006960      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00006964      48394710       cmp qword [rdi + 0x10], rax
0x00006968      7406           je 0x6970                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000696a      e981b3ffff     jmp sym.imp.fseeko
0x0000696f      90             nop
0x00006970      488b4720       mov rax, qword [rdi + 0x20]
0x00006974      48394728       cmp qword [rdi + 0x28], rax
0x00006978      75f0           jne 0x696a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000697a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000697f      75e9           jne 0x696a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006981      4154           push r12
0x00006983      55             push rbp
0x00006984      4189d4         mov r12d, edx
0x00006987      53             push rbx
0x00006988      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000698b      4889fb         mov rbx, rdi
0x0000698e      e85db2ffff     call sym.imp.fileno
0x00006993      4489e2         mov edx, r12d
0x00006996      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006999      89c7           mov edi, eax
0x0000699b      e870b1ffff     call sym.imp.lseek
0x000069a0      4883f8ff       cmp rax, 0xffffffffffffffff
0x000069a4      740c           je 0x69b2
0x000069a6      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x000069a9      488983900000.  mov qword [rbx + 0x90], rax
0x000069b0      31c0           xor eax, eax
0x000069b2      5b             pop rbx
0x000069b3      5d             pop rbp
0x000069b4      415c           pop r12
0x000069b6      c3             ret
0x000069b7      660f1f840000.  nop word [rax + rax]
;-- AD_compare:
0x000069c0      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:33
0x000069c2      488b5608       mov rdx, qword [rsi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:37
0x000069c6      48395708       cmp qword [rdi + 8], rdx
0x000069ca      7404           je 0x69d0
0x000069cc      f3c3           ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x000069ce      6690           nop
0x000069d0      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts-cycle.c:37
0x000069d3      483907         cmp qword [rdi], rax
0x000069d6      0f94c0         sete al
0x000069d9      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:38
0x000069da      660f1f440000   nop word [rax + rax]
;-- AD_hash:
0x000069e0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fts-cycle.c:42
0x000069e4      31d2           xor edx, edx
0x000069e6      48f7f6         div rsi
0x000069e9      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts-cycle.c:45
0x000069ec      c3             ret
0x000069ed      0f1f00         nop dword [rax]
;-- dev_type_hash:
0x000069f0      488b07         mov rax, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:690
0x000069f3      31d2           xor edx, edx
0x000069f5      48f7f6         div rsi
0x000069f8      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:694
0x000069fb      c3             ret
0x000069fc      0f1f4000       nop dword [rax]
;-- dev_type_compare:
0x00006a00      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:698
0x00006a03      483907         cmp qword [rdi], rax
0x00006a06      0f94c0         sete al
0x00006a09      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:702
0x00006a0a      660f1f440000   nop word [rax + rax]
;-- fts_compare_ino:
0x00006a10      488b17         mov rdx, qword [rdi]                    ; ../coreutils-8.31/lib/fts.c:1226
0x00006a13      488b06         mov rax, qword [rsi]
0x00006a16      488b80800000.  mov rax, qword [rax + 0x80]             ; ../coreutils-8.31/lib/fts.c:1228
0x00006a1d      483982800000.  cmp qword [rdx + 0x80], rax
0x00006a24      720a           jb 0x6a30
0x00006a26      0f97c0         seta al
0x00006a29      0fb6c0         movzx eax, al
0x00006a2c      c3             ret
0x00006a2d      0f1f00         nop dword [rax]
0x00006a30      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00006a35      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1229
0x00006a36      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_stat:
0x00006a40      4154           push r12                                ; ../coreutils-8.31/lib/fts.c:1800
0x00006a42      55             push rbp
0x00006a43      4889f5         mov rbp, rsi
0x00006a46      53             push rbx
0x00006a47      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1803
0x00006a4c      488d5e78       lea rbx, [rsi + 0x78]                   ; ../coreutils-8.31/lib/fts.c:1801
0x00006a50      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/fts.c:1800
0x00006a53      8b4748         mov eax, dword [rdi + 0x48]
0x00006a56      488b7630       mov rsi, qword [rsi + 0x30]
0x00006a5a      7564           jne 0x6ac0                              ; ../coreutils-8.31/lib/fts.c:1803
0x00006a5c      a801           test al, 1
0x00006a5e      7460           je 0x6ac0
0x00006a60      4889da         mov rdx, rbx                            ; stat.h:451   return __xstat (_STAT_VER, __path, __statbuf);
0x00006a63      bf01000000     mov edi, 1
0x00006a68      e893b1ffff     call sym.imp.__xstat
0x00006a6d      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1812
0x00006a6f      747a           je 0x6aeb
0x00006a71      e82aafffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1813
0x00006a76      4989c4         mov r12, rax
0x00006a79      8b00           mov eax, dword [rax]
0x00006a7b      83f802         cmp eax, 2
0x00006a7e      0f840c010000   je 0x6b90
0x00006a84      488d7b08       lea rdi, [rbx + 8]                      ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00006a88      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:1823
0x00006a8b      48c745780000.  mov qword [rbp + 0x78], 0               ; string_fortified.h:71   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
0x00006a93      48c783880000.  mov qword [rbx + 0x88], 0
0x00006a9e      31c0           xor eax, eax
0x00006aa0      4883e7f8       and rdi, 0xfffffffffffffff8
0x00006aa4      4829fb         sub rbx, rdi
0x00006aa7      8d8b90000000   lea ecx, [rbx + 0x90]
0x00006aad      c1e903         shr ecx, 3
0x00006ab0      f348ab         rep stosq qword [rdi], rax
0x00006ab3      b80a000000     mov eax, 0xa                            ; ../coreutils-8.31/lib/fts.c:1825
0x00006ab8      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006ab9      5d             pop rbp
0x00006aba      415c           pop r12
0x00006abc      c3             ret
0x00006abd      0f1f00         nop dword [rax]
0x00006ac0      a802           test al, 2                              ; ../coreutils-8.31/lib/fts.c:1811
0x00006ac2      759c           jne 0x6a60
0x00006ac4      84d2           test dl, dl
0x00006ac6      7598           jne 0x6a60
0x00006ac8      4889f2         mov rdx, rsi                            ; stat.h:473   return __fxstatat (_STAT_VER, __fd, __filename, __statbuf, __flag);
0x00006acb      418b74242c     mov esi, dword [r12 + 0x2c]
0x00006ad0      41b800010000   mov r8d, 0x100
0x00006ad6      4889d9         mov rcx, rbx
0x00006ad9      bf01000000     mov edi, 1
0x00006ade      e8fdafffff     call sym.imp.__fxstatat
0x00006ae3      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1821
0x00006ae5      0f8595000000   jne 0x6b80
0x00006aeb      8b8590000000   mov eax, dword [rbp + 0x90]             ; ../coreutils-8.31/lib/fts.c:1828
0x00006af1      2500f00000     and eax, 0xf000
0x00006af6      3d00400000     cmp eax, 0x4000                         ; "H\x8d5\x13y"
0x00006afb      7423           je 0x6b20
0x00006afd      3d00a00000     cmp eax, 0xa000                         ; ../coreutils-8.31/lib/fts.c:1841
0x00006b02      0f84d0000000   je 0x6bd8
0x00006b08      3d00800000     cmp eax, 0x8000                         ; ../coreutils-8.31/lib/fts.c:1844
0x00006b0d      0f94c0         sete al
0x00006b10      0fb6c0         movzx eax, al
0x00006b13      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006b14      8d448003       lea eax, [rax + rax*4 + 3]              ; ../coreutils-8.31/lib/fts.c:1844
0x00006b18      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:1846
0x00006b19      415c           pop r12
0x00006b1b      c3             ret
0x00006b1c      0f1f4000       nop dword [rax]
0x00006b20      488b85880000.  mov rax, qword [rbp + 0x88]             ; ../coreutils-8.31/lib/fts.c:1830
0x00006b27      4883f801       cmp rax, 1                              ; ../coreutils-8.31/lib/fts.c:1833
0x00006b2b      0f867f000000   jbe 0x6bb0
0x00006b31      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:1831
0x00006b36      7e78           jle 0x6bb0
0x00006b38      41f644244820   test byte [r12 + 0x48], 0x20
0x00006b3e      488d50fe       lea rdx, [rax - 2]
0x00006b42      480f44c2       cmove rax, rdx
0x00006b46      80bd08010000.  cmp byte [rbp + 0x108], 0x2e            ; ../coreutils-8.31/lib/fts.c:1834
0x00006b4d      48894568       mov qword [rbp + 0x68], rax             ; ../coreutils-8.31/lib/fts.c:1830
0x00006b51      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1839
0x00006b56      0f855cffffff   jne 0x6ab8                              ; ../coreutils-8.31/lib/fts.c:1834
0x00006b5c      80bd09010000.  cmp byte [rbp + 0x109], 0
0x00006b63      0f857f000000   jne 0x6be8
0x00006b69      48837d5801     cmp qword [rbp + 0x58], 1               ; ../coreutils-8.31/lib/fts.c:1839
0x00006b6e      19c0           sbb eax, eax
0x00006b70      83e0fc         and eax, 0xfffffffc                     ; 4294967292
0x00006b73      83c005         add eax, 5
0x00006b76      e93dffffff     jmp 0x6ab8
0x00006b7b      0f1f440000     nop dword [rax + rax]
0x00006b80      e81baeffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1823
0x00006b85      8b00           mov eax, dword [rax]
0x00006b87      e9f8feffff     jmp 0x6a84
0x00006b8c      0f1f4000       nop dword [rax]
0x00006b90      488b7530       mov rsi, qword [rbp + 0x30]             ; stat.h:458   return __lxstat (_STAT_VER, __path, __statbuf);
0x00006b94      4889da         mov rdx, rbx
0x00006b97      bf01000000     mov edi, 1
0x00006b9c      e8efaeffff     call sym.imp.__lxstat
0x00006ba1      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1814
0x00006ba3      741b           je 0x6bc0
0x00006ba5      418b0424       mov eax, dword [r12]
0x00006ba9      e9d6feffff     jmp 0x6a84
0x00006bae      6690           nop
0x00006bb0      48c7c0ffffff.  mov rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/fts.c:1833
0x00006bb7      eb8d           jmp 0x6b46
0x00006bb9      0f1f80000000.  nop dword [rax]
0x00006bc0      41c704240000.  mov dword [r12], 0                      ; ../coreutils-8.31/lib/fts.c:1815
0x00006bc8      b80d000000     mov eax, 0xd                            ; ../coreutils-8.31/lib/fts.c:1816
0x00006bcd      e9e6feffff     jmp 0x6ab8
0x00006bd2      660f1f440000   nop word [rax + rax]
0x00006bd8      b80c000000     mov eax, 0xc                            ; ../coreutils-8.31/lib/fts.c:1842
0x00006bdd      e9d6feffff     jmp 0x6ab8
0x00006be2      660f1f440000   nop word [rax + rax]
0x00006be8      8b9508010000   mov edx, dword [rbp + 0x108]            ; ../coreutils-8.31/lib/fts.c:1834
0x00006bee      81e200ffff00   and edx, 0xffff00
0x00006bf4      81fa002e0000   cmp edx, 0x2e00                         ; "$P\xff\xff\xff\xff\xf7\u0543\xe5\x04\x84\xd2D\x0fE\xf0\xe9\x9b\xfe\xff\xfff.\x0f\x1f\x84"
0x00006bfa      0f85b8feffff   jne 0x6ab8
0x00006c00      e964ffffff     jmp 0x6b69
0x00006c05      90             nop
0x00006c06      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_sort:
0x00006c10      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1864
0x00006c12      4154           push r12
0x00006c14      4989d4         mov r12, rdx
0x00006c17      55             push rbp
0x00006c18      53             push rbx
0x00006c19      4889fd         mov rbp, rdi
0x00006c1c      4889f3         mov rbx, rsi
0x00006c1f      4883ec08       sub rsp, 8
0x00006c23      48395538       cmp qword [rbp + 0x38], rdx             ; ../coreutils-8.31/lib/fts.c:1888
0x00006c27      4c8b6f40       mov r13, qword [rdi + 0x40]             ; ../coreutils-8.31/lib/fts.c:1875
0x00006c2b      488b7f10       mov rdi, qword [rdi + 0x10]
0x00006c2f      7334           jae 0x6c65                              ; ../coreutils-8.31/lib/fts.c:1888
0x00006c31      488d7228       lea rsi, [rdx + 0x28]                   ; ../coreutils-8.31/lib/fts.c:1891
0x00006c35      48b8ffffffff.  movabs rax, 0x1fffffffffffffff          ; ../coreutils-8.31/lib/fts.c:1892 ; 2305843009213693951
0x00006c3f      4839c6         cmp rsi, rax
0x00006c42      48897538       mov qword [rbp + 0x38], rsi             ; ../coreutils-8.31/lib/fts.c:1891
0x00006c46      0f8798000000   ja 0x6ce4                               ; ../coreutils-8.31/lib/fts.c:1892
0x00006c4c      48c1e603       shl rsi, 3                              ; ../coreutils-8.31/lib/fts.c:1893
0x00006c50      e82bb0ffff     call sym.imp.realloc
0x00006c55      4885c0         test rax, rax
0x00006c58      4889c7         mov rdi, rax
0x00006c5b      0f847f000000   je 0x6ce0
0x00006c61      48894510       mov qword [rbp + 0x10], rax             ; ../coreutils-8.31/lib/fts.c:1900
0x00006c65      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:1902
0x00006c68      7417           je 0x6c81
0x00006c6a      4889fa         mov rdx, rdi
0x00006c6d      0f1f00         nop dword [rax]
0x00006c70      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1903
0x00006c74      48895af8       mov qword [rdx - 8], rbx
0x00006c78      488b5b10       mov rbx, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1902
0x00006c7c      4885db         test rbx, rbx
0x00006c7f      75ef           jne 0x6c70
0x00006c81      4c89e9         mov rcx, r13                            ; ../coreutils-8.31/lib/fts.c:1904
0x00006c84      ba08000000     mov edx, 8
0x00006c89      4c89e6         mov rsi, r12
0x00006c8c      e85fadffff     call sym.imp.qsort
0x00006c91      4c8b4510       mov r8, qword [rbp + 0x10]              ; ../coreutils-8.31/lib/fts.c:1905
0x00006c95      4c89e1         mov rcx, r12
0x00006c98      4883e901       sub rcx, 1
0x00006c9c      498b00         mov rax, qword [r8]
0x00006c9f      746f           je 0x6d10
0x00006ca1      4889c7         mov rdi, rax
0x00006ca4      4c89c2         mov rdx, r8
0x00006ca7      eb0a           jmp 0x6cb3
0x00006ca9      0f1f80000000.  nop dword [rax]
0x00006cb0      488b3a         mov rdi, qword [rdx]
0x00006cb3      488b7208       mov rsi, qword [rdx + 8]                ; ../coreutils-8.31/lib/fts.c:1906
0x00006cb7      4883c208       add rdx, 8                              ; ../coreutils-8.31/lib/fts.c:1905
0x00006cbb      4883e901       sub rcx, 1
0x00006cbf      48897710       mov qword [rdi + 0x10], rsi             ; ../coreutils-8.31/lib/fts.c:1906
0x00006cc3      75eb           jne 0x6cb0                              ; ../coreutils-8.31/lib/fts.c:1905
0x00006cc5      4b8b54e0f8     mov rdx, qword [r8 + r12*8 - 8]
0x00006cca      48c742100000.  mov qword [rdx + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1907
0x00006cd2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00006cd6      5b             pop rbx
0x00006cd7      5d             pop rbp
0x00006cd8      415c           pop r12
0x00006cda      415d           pop r13
0x00006cdc      c3             ret
0x00006cdd      0f1f00         nop dword [rax]
0x00006ce0      488b7d10       mov rdi, qword [rbp + 0x10]
0x00006ce4      e8b7b0ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1895
0x00006ce9      48c745100000.  mov qword [rbp + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1896
0x00006cf1      48c745380000.  mov qword [rbp + 0x38], 0               ; ../coreutils-8.31/lib/fts.c:1897
0x00006cf9      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1909
0x00006cfd      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/fts.c:1898
0x00006d00      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1909
0x00006d01      5d             pop rbp
0x00006d02      415c           pop r12
0x00006d04      415d           pop r13
0x00006d06      c3             ret
0x00006d07      660f1f840000.  nop word [rax + rax]
0x00006d10      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/fts.c:1905
0x00006d13      ebb5           jmp 0x6cca
0x00006d15      90             nop
0x00006d16      662e0f1f8400.  nop word cs:[rax + rax]
;-- fts_alloc:
0x00006d20      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1914
0x00006d22      4154           push r12
0x00006d24      4989fc         mov r12, rdi
0x00006d27      55             push rbp
0x00006d28      488dba100100.  lea rdi, [rdx + 0x110]                  ; ../coreutils-8.31/lib/fts.c:1922
0x00006d2f      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1914
0x00006d30      4989f5         mov r13, rsi
0x00006d33      4889d5         mov rbp, rdx
0x00006d36      4883ec08       sub rsp, 8
0x00006d3a      4883e7f8       and rdi, 0xfffffffffffffff8             ; ../coreutils-8.31/lib/fts.c:1922
0x00006d3e      e8ddaeffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/fts.c:1923
0x00006d43      4885c0         test rax, rax
0x00006d46      4889c3         mov rbx, rax
0x00006d49      7451           je 0x6d9c
0x00006d4b      488db8080100.  lea rdi, [rax + 0x108]                  ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006d52      4889ea         mov rdx, rbp
0x00006d55      4c89ee         mov rsi, r13
0x00006d58      e883aeffff     call sym.imp.memcpy
0x00006d5d      498b442420     mov rax, qword [r12 + 0x20]             ; ../coreutils-8.31/lib/fts.c:1932
0x00006d62      c6842b080100.  mov byte [rbx + rbp + 0x108], 0         ; ../coreutils-8.31/lib/fts.c:1928
0x00006d6a      48896b60       mov qword [rbx + 0x60], rbp             ; ../coreutils-8.31/lib/fts.c:1930
0x00006d6e      4c896350       mov qword [rbx + 0x50], r12             ; ../coreutils-8.31/lib/fts.c:1931
0x00006d72      c74340000000.  mov dword [rbx + 0x40], 0               ; ../coreutils-8.31/lib/fts.c:1933
0x00006d79      48c743180000.  mov qword [rbx + 0x18], 0               ; ../coreutils-8.31/lib/fts.c:1934
0x00006d81      48894338       mov qword [rbx + 0x38], rax             ; ../coreutils-8.31/lib/fts.c:1932
0x00006d85      c74372000003.  mov dword [rbx + 0x72], 0x30000         ; ../coreutils-8.31/lib/fts.c:1935 ; [0x30000:4]=-1
0x00006d8c      48c743200000.  mov qword [rbx + 0x20], 0               ; ../coreutils-8.31/lib/fts.c:1937
0x00006d94      48c743280000.  mov qword [rbx + 0x28], 0               ; ../coreutils-8.31/lib/fts.c:1938
0x00006d9c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1940
0x00006da0      4889d8         mov rax, rbx
0x00006da3      5b             pop rbx
0x00006da4      5d             pop rbp
0x00006da5      415c           pop r12
0x00006da7      415d           pop r13
0x00006da9      c3             ret
0x00006daa      660f1f440000   nop word [rax + rax]
;-- fts_lfree:
0x00006db0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1945
0x00006db3      743b           je 0x6df0
0x00006db5      55             push rbp
0x00006db6      53             push rbx
0x00006db7      4889fb         mov rbx, rdi
0x00006dba      4883ec08       sub rsp, 8
0x00006dbe      6690           nop
0x00006dc0      488b7b18       mov rdi, qword [rbx + 0x18]             ; ../coreutils-8.31/lib/fts.c:1951
0x00006dc4      488b6b10       mov rbp, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/fts.c:1950
0x00006dc8      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:1951
0x00006dcb      7405           je 0x6dd2
0x00006dcd      e88eadffff     call sym.imp.closedir                   ; ../coreutils-8.31/lib/fts.c:1952
0x00006dd2      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:1953
0x00006dd5      4889eb         mov rbx, rbp
0x00006dd8      e8c3afffff     call sym..plt.got
0x00006ddd      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/fts.c:1949
0x00006de0      75de           jne 0x6dc0
0x00006de2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:1955
0x00006de6      5b             pop rbx
0x00006de7      5d             pop rbp
0x00006de8      c3             ret
0x00006de9      0f1f80000000.  nop dword [rax]
0x00006df0      f3c3           ret
0x00006df2      0f1f4000       nop dword [rax]
0x00006df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- fd_ring_clear:
0x00006e00      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:277
0x00006e01      4889fb         mov rbx, rdi
0x00006e04      eb16           jmp 0x6e1c                              ; ../coreutils-8.31/lib/fts.c:278
0x00006e06      662e0f1f8400.  nop word cs:[rax + rax]
0x00006e10      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:280
0x00006e13      e898350000     call sym.i_ring_pop
0x00006e18      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:281
0x00006e1a      7914           jns 0x6e30
0x00006e1c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:278
0x00006e1f      e83c350000     call sym.i_ring_empty
0x00006e24      84c0           test al, al
0x00006e26      74e8           je 0x6e10
0x00006e28      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:284
0x00006e29      c3             ret
0x00006e2a      660f1f440000   nop word [rax + rax]
0x00006e30      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:282
0x00006e32      e819adffff     call sym.imp.close
0x00006e37      ebe3           jmp 0x6e1c
0x00006e39      0f1f80000000.  nop dword [rax]
;-- filesystem_type:
0x00006e40      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:710
0x00006e42      4154           push r12
0x00006e44      55             push rbp
0x00006e45      53             push rbx
0x00006e46      4881ec980000.  sub rsp, 0x98
0x00006e4d      488b5f50       mov rbx, qword [rdi + 0x50]             ; ../coreutils-8.31/lib/fts.c:711
0x00006e51      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/fts.c:710
0x00006e5a      488984248800.  mov qword [rsp + 0x88], rax
0x00006e62      31c0           xor eax, eax
0x00006e64      f6434902       test byte [rbx + 0x49], 2               ; ../coreutils-8.31/lib/fts.c:718
0x00006e68      7468           je 0x6ed2
0x00006e6a      4c8b6350       mov r12, qword [rbx + 0x50]             ; ../coreutils-8.31/lib/fts.c:712
0x00006e6e      4889fd         mov rbp, rdi
0x00006e71      4189f5         mov r13d, esi
0x00006e74      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:721
0x00006e77      7427           je 0x6ea0
0x00006e79      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:728
0x00006e7d      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts.c:729
0x00006e80      4c89e7         mov rdi, r12
0x00006e83      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/fts.c:728
0x00006e87      e8d4270000     call sym.hash_lookup                    ; ../coreutils-8.31/lib/fts.c:729
0x00006e8c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:730
0x00006e8f      743c           je 0x6ecd
0x00006e91      488b5808       mov rbx, qword [rax + 8]                ; ../coreutils-8.31/lib/fts.c:731
0x00006e95      eb3d           jmp 0x6ed4
0x00006e97      660f1f840000.  nop word [rax + rax]
0x00006ea0      4c8b05218120.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts.c:723 ; [0x20efc8:8]=0
0x00006ea7      488d0d52fbff.  lea rcx, sym.dev_type_compare           ; 0x6a00 ; "H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x00006eae      488d153bfbff.  lea rdx, sym.dev_type_hash              ; 0x69f0 ; "H\x8b\a1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f@"
0x00006eb5      31f6           xor esi, esi
0x00006eb7      bf0d000000     mov edi, 0xd
0x00006ebc      e80f2a0000     call sym.hash_initialize
0x00006ec1      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:725
0x00006ec4      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:723
0x00006ec7      48894350       mov qword [rbx + 0x50], rax
0x00006ecb      75ac           jne 0x6e79                              ; ../coreutils-8.31/lib/fts.c:725
0x00006ecd      4585ed         test r13d, r13d                         ; ../coreutils-8.31/lib/fts.c:735
0x00006ed0      792e           jns 0x6f00
0x00006ed2      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:719
0x00006ed4      488b94248800.  mov rdx, qword [rsp + 0x88]             ; ../coreutils-8.31/lib/fts.c:755
0x00006edc      644833142528.  xor rdx, qword fs:[0x28]
0x00006ee5      4889d8         mov rax, rbx
0x00006ee8      7578           jne 0x6f62
0x00006eea      4881c4980000.  add rsp, 0x98
0x00006ef1      5b             pop rbx
0x00006ef2      5d             pop rbp
0x00006ef3      415c           pop r12
0x00006ef5      415d           pop r13
0x00006ef7      c3             ret
0x00006ef8      0f1f84000000.  nop dword [rax + rax]
0x00006f00      488d742410     lea rsi, [rsp + 0x10]                   ; ../coreutils-8.31/lib/fts.c:735
0x00006f05      4489ef         mov edi, r13d
0x00006f08      e813aeffff     call sym.imp.fstatfs
0x00006f0d      85c0           test eax, eax
0x00006f0f      75c1           jne 0x6ed2
0x00006f11      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/fts.c:738
0x00006f14      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006f19      74b9           je 0x6ed4
0x00006f1b      bf10000000     mov edi, 0x10                           ; ../coreutils-8.31/lib/fts.c:740
0x00006f20      e8fbacffff     call sym.imp.malloc
0x00006f25      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:741
0x00006f28      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:740
0x00006f2b      74a7           je 0x6ed4                               ; ../coreutils-8.31/lib/fts.c:741
0x00006f2d      488b4578       mov rax, qword [rbp + 0x78]             ; ../coreutils-8.31/lib/fts.c:743
0x00006f31      49895d08       mov qword [r13 + 8], rbx                ; ../coreutils-8.31/lib/fts.c:744
0x00006f35      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/fts.c:746
0x00006f38      4c89e7         mov rdi, r12
0x00006f3b      49894500       mov qword [r13], rax                    ; ../coreutils-8.31/lib/fts.c:743
0x00006f3f      e88c310000     call sym.hash_insert                    ; ../coreutils-8.31/lib/fts.c:746
0x00006f44      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:747
0x00006f47      740f           je 0x6f58
0x00006f49      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/fts.c:748
0x00006f4c      7519           jne 0x6f67
0x00006f4e      488b5c2410     mov rbx, qword [rsp + 0x10]
0x00006f53      e97cffffff     jmp 0x6ed4                              ; ../coreutils-8.31/lib/fts.c:754
0x00006f58      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/fts.c:750
0x00006f5b      e840aeffff     call sym..plt.got
0x00006f60      ebec           jmp 0x6f4e
0x00006f62      e849abffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts.c:755
0x00006f67      e824aaffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:748
0x00006f6c      0f1f4000       nop dword [rax]
;-- leaf_optimization:
0x00006f70      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/fts.c:793
0x00006f74      e8c7feffff     call sym.filesystem_type                ; ../coreutils-8.31/lib/fts.c:794
0x00006f79      483d73496552   cmp rax, 0x52654973
0x00006f7f      744f           je 0x6fd0
0x00006f81      7e2d           jle 0x6fb0
0x00006f83      483d42534658   cmp rax, 0x58465342
0x00006f89      7445           je 0x6fd0
0x00006f8b      ba424d53ff     mov edx, 0xff534d42
0x00006f90      4839d0         cmp rax, rdx
0x00006f93      7430           je 0x6fc5
0x00006f95      483d4f414653   cmp rax, 0x5346414f
0x00006f9b      7428           je 0x6fc5
0x00006f9d      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:825
0x00006fa2      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006fa6      c3             ret
0x00006fa7      660f1f840000.  nop word [rax + rax]
0x00006fb0      483d69690000   cmp rax, 0x6969                         ; ../coreutils-8.31/lib/fts.c:794
0x00006fb6      740d           je 0x6fc5
0x00006fb8      483da09f0000   cmp rax, 0x9fa0
0x00006fbe      7405           je 0x6fc5
0x00006fc0      4885c0         test rax, rax
0x00006fc3      75d8           jne 0x6f9d
0x00006fc5      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:822
0x00006fc7      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006fcb      c3             ret
0x00006fcc      0f1f4000       nop dword [rax]
0x00006fd0      b802000000     mov eax, 2                              ; ../coreutils-8.31/lib/fts.c:800
0x00006fd5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:827
0x00006fd9      c3             ret
0x00006fda      660f1f440000   nop word [rax + rax]
;-- cwd_advance_fd:
0x00006fe0      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:306
0x00006fe1      53             push rbx
0x00006fe2      89f5           mov ebp, esi
0x00006fe4      4889fb         mov rbx, rdi
0x00006fe7      4883ec08       sub rsp, 8
0x00006feb      8b772c         mov esi, dword [rdi + 0x2c]             ; ../coreutils-8.31/lib/fts.c:307
0x00006fee      39ee           cmp esi, ebp                            ; ../coreutils-8.31/lib/fts.c:308
0x00006ff0      7505           jne 0x6ff7
0x00006ff2      83fe9c         cmp esi, 0xffffff9c
0x00006ff5      754a           jne 0x7041
0x00006ff7      84d2           test dl, dl                             ; ../coreutils-8.31/lib/fts.c:310
0x00006ff9      7515           jne 0x7010
0x00006ffb      f6434804       test byte [rbx + 0x48], 4               ; ../coreutils-8.31/lib/fts.c:321
0x00006fff      7504           jne 0x7005
0x00007001      85f6           test esi, esi
0x00007003      792b           jns 0x7030
0x00007005      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00007008      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000700c      5b             pop rbx
0x0000700d      5d             pop rbp
0x0000700e      c3             ret
0x0000700f      90             nop
0x00007010      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:314
0x00007014      e857330000     call sym.i_ring_push
0x00007019      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:316
0x0000701b      78e8           js 0x7005
0x0000701d      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fts.c:317
0x0000701f      e82cabffff     call sym.imp.close
0x00007024      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x00007027      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000702b      5b             pop rbx
0x0000702c      5d             pop rbp
0x0000702d      c3             ret
0x0000702e      6690           nop
0x00007030      89f7           mov edi, esi                            ; ../coreutils-8.31/lib/fts.c:322
0x00007032      e819abffff     call sym.imp.close
0x00007037      896b2c         mov dword [rbx + 0x2c], ebp             ; ../coreutils-8.31/lib/fts.c:325
0x0000703a      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:326
0x0000703e      5b             pop rbx
0x0000703f      5d             pop rbp
0x00007040      c3             ret
0x00007041      e84aa9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:308
0x00007046      662e0f1f8400.  nop word cs:[rax + rax]
;-- restore_initial_cwd:
0x00007050      55             push rbp                                ; ../coreutils-8.31/lib/fts.c:334
0x00007051      53             push rbx
0x00007052      4889fb         mov rbx, rdi
0x00007055      4883ec08       sub rsp, 8
0x00007059      8b5748         mov edx, dword [rdi + 0x48]             ; ../coreutils-8.31/lib/fts.c:335
0x0000705c      89d5           mov ebp, edx
0x0000705e      83e504         and ebp, 4
0x00007061      7545           jne 0x70a8
0x00007063      80e602         and dh, 2
0x00007066      7528           jne 0x7090
0x00007068      8b7f28         mov edi, dword [rdi + 0x28]
0x0000706b      31ed           xor ebp, ebp
0x0000706d      e8feabffff     call sym.imp.fchdir
0x00007072      85c0           test eax, eax
0x00007074      400f95c5       setne bpl
0x00007078      488d7b60       lea rdi, [rbx + 0x60]                   ; ../coreutils-8.31/lib/fts.c:336
0x0000707c      e87ffdffff     call sym.fd_ring_clear
0x00007081      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fts.c:338
0x00007085      89e8           mov eax, ebp
0x00007087      5b             pop rbx
0x00007088      5d             pop rbp
0x00007089      c3             ret
0x0000708a      660f1f440000   nop word [rax + rax]
0x00007090      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:335
0x00007095      be9cffffff     mov esi, 0xffffff9c                     ; 4294967196
0x0000709a      e841ffffff     call sym.cwd_advance_fd
0x0000709f      ebd7           jmp 0x7078
0x000070a1      0f1f80000000.  nop dword [rax]
0x000070a8      31ed           xor ebp, ebp
0x000070aa      ebcc           jmp 0x7078
0x000070ac      0f1f4000       nop dword [rax]
;-- fts_palloc.isra.2:
0x000070b0      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:1966
0x000070b1      488b0e         mov rcx, qword [rsi]                    ; ../coreutils-8.31/lib/fts.c:1969
0x000070b4      4889fb         mov rbx, rdi                            ; ../coreutils-8.31/lib/fts.c:1966
0x000070b7      488b3f         mov rdi, qword [rdi]
0x000070ba      488d84110001.  lea rax, [rcx + rdx + 0x100]            ; ../coreutils-8.31/lib/fts.c:1969
0x000070c2      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/fts.c:1974
0x000070c5      7721           ja 0x70e8
0x000070c7      488906         mov qword [rsi], rax                    ; ../coreutils-8.31/lib/fts.c:1980
0x000070ca      4889c6         mov rsi, rax                            ; ../coreutils-8.31/lib/fts.c:1981
0x000070cd      e8aeabffff     call sym.imp.realloc
0x000070d2      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1982
0x000070d5      7431           je 0x7108
0x000070d7      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts.c:1987
0x000070da      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts.c:1988
0x000070df      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x000070e0      c3             ret
0x000070e1      0f1f80000000.  nop dword [rax]
0x000070e8      e8b3acffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:1975
0x000070ed      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1976
0x000070f4      e8a7a8ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1977
0x000070f9      c70024000000   mov dword [rax], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x000070ff      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts.c:1978
0x00007101      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x00007102      c3             ret
0x00007103      0f1f440000     nop dword [rax + rax]
0x00007108      488b3b         mov rdi, qword [rbx]                    ; ../coreutils-8.31/lib/fts.c:1983
0x0000710b      e890acffff     call sym..plt.got
0x00007110      48c703000000.  mov qword [rbx], 0                      ; ../coreutils-8.31/lib/fts.c:1984
0x00007117      31c0           xor eax, eax
0x00007119      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:1989
0x0000711a      c3             ret
0x0000711b      0f1f440000     nop dword [rax + rax]
;-- setup_dir.isra.4:
0x00007120      81e702010000   and edi, 0x102                          ; ../coreutils-8.31/lib/fts-cycle.c:50
0x00007126      53             push rbx
0x00007127      4889f3         mov rbx, rsi
0x0000712a      7434           je 0x7160                               ; ../coreutils-8.31/lib/fts-cycle.c:52
0x0000712c      4c8b05957e20.  mov r8, qword [reloc.free]              ; ../coreutils-8.31/lib/fts-cycle.c:55 ; [0x20efc8:8]=0
0x00007133      488d0d86f8ff.  lea rcx, sym.AD_compare                 ; 0x69c0 ; "1\xc0H\x8bV\bH9W\bt\x04\xf3\xc3f\x90H\x8b\x06H9\a\x0f\x94\xc0\xc3f\x0f\x1fD"
0x0000713a      488d159ff8ff.  lea rdx, sym.AD_hash                    ; 0x69e0 ; "H\x8bG\b1\xd2H\xf7\xf6H\x89\xd0\xc3\x0f\x1f"
0x00007141      31f6           xor esi, esi
0x00007143      bf1f000000     mov edi, 0x1f
0x00007148      e883270000     call sym.hash_initialize
0x0000714d      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00007150      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/fts-cycle.c:55
0x00007153      0f95c0         setne al                                ; ../coreutils-8.31/lib/fts-cycle.c:57
0x00007156      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00007157      c3             ret
0x00007158      0f1f84000000.  nop dword [rax + rax]
0x00007160      bf20000000     mov edi, 0x20                           ; ../coreutils-8.31/lib/fts-cycle.c:62 ; "@"
0x00007165      e8b6aaffff     call sym.imp.malloc
0x0000716a      4889c7         mov rdi, rax
0x0000716d      488903         mov qword [rbx], rax
0x00007170      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fts-cycle.c:64
0x00007172      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts-cycle.c:63
0x00007175      74df           je 0x7156
0x00007177      e8741d0000     call sym.cycle_check_init               ; ../coreutils-8.31/lib/fts-cycle.c:65
0x0000717c      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/fts-cycle.c:68
0x00007181      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts-cycle.c:69
0x00007182      c3             ret
0x00007183      0f1f00         nop dword [rax]
0x00007186      662e0f1f8400.  nop word cs:[rax + rax]
;-- diropen.isra.6:
0x00007190      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/fts.c:346
0x00007193      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/fts.c:349
0x00007195      c1e20d         shl edx, 0xd
0x00007198      81e200000200   and edx, 0x20000
0x0000719e      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/fts.c:348
0x000071a4      81e600020000   and esi, 0x200                          ; ../coreutils-8.31/lib/fts.c:353
0x000071aa      7514           jne 0x71c0
0x000071ac      4889c7         mov rdi, rax
0x000071af      89d6           mov esi, edx
0x000071b1      31c0           xor eax, eax
0x000071b3      e9d81d0000     jmp sym.open_safer
0x000071b8      0f1f84000000.  nop dword [rax + rax]
0x000071c0      4889c6         mov rsi, rax
0x000071c3      31c0           xor eax, eax
0x000071c5      e966320000     jmp sym.openat_safer
0x000071ca      660f1f440000   nop word [rax + rax]
;-- fts_safe_changedir:
0x000071d0      4157           push r15                                ; ../coreutils-8.31/lib/fts.c:2044
0x000071d2      4156           push r14
0x000071d4      4989f6         mov r14, rsi
0x000071d7      4155           push r13
0x000071d9      4154           push r12
0x000071db      4989fd         mov r13, rdi
0x000071de      55             push rbp
0x000071df      53             push rbx
0x000071e0      4189d4         mov r12d, edx
0x000071e3      4889cd         mov rbp, rcx
0x000071e6      4881ecb80000.  sub rsp, 0xb8
0x000071ed      8b5f48         mov ebx, dword [rdi + 0x48]
0x000071f0      64488b042528.  mov rax, qword fs:[0x28]
0x000071f9      48898424a800.  mov qword [rsp + 0xa8], rax
0x00007201      31c0           xor eax, eax
0x00007203      4189d9         mov r9d, ebx
0x00007206      4183e104       and r9d, 4
0x0000720a      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/fts.c:2046
0x0000720d      0f84ad000000   je 0x72c0
0x00007213      488d15a44200.  lea rdx, [0x0000b4be]                   ; ".."
0x0000721a      b903000000     mov ecx, 3
0x0000721f      4889ee         mov rsi, rbp
0x00007222      4889d7         mov rdi, rdx
0x00007225      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007227      0f97c0         seta al
0x0000722a      1c00           sbb al, 0
0x0000722c      84c0           test al, al
0x0000722e      0f858c000000   jne 0x72c0
0x00007234      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x00007237      0f8588000000   jne 0x72c5
0x0000723d      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2060
0x00007240      0f89e4010000   jns 0x742a
0x00007246      f6c702         test bh, 2
0x00007249      0f8541010000   jne 0x7390
0x0000724f      c644240f01     mov byte [rsp + 0xf], 1
0x00007254      418b7d2c       mov edi, dword [r13 + 0x2c]             ; ../coreutils-8.31/lib/fts.c:2082
0x00007258      4889ea         mov rdx, rbp
0x0000725b      89de           mov esi, ebx
0x0000725d      e82effffff     call sym.diropen.isra.6
0x00007262      85c0           test eax, eax
0x00007264      4189c7         mov r15d, eax
0x00007267      0f88ae010000   js 0x741b
0x0000726d      418b5d48       mov ebx, dword [r13 + 0x48]
0x00007271      f6c302         test bl, 2                              ; ../coreutils-8.31/lib/fts.c:2092
0x00007274      0f84a0000000   je 0x731a
0x0000727a      660f1f440000   nop word [rax + rax]
0x00007280      488d542410     lea rdx, [rsp + 0x10]                   ; stat.h:465   return __fxstat (_STAT_VER, __fd, __statbuf);
0x00007285      4489fe         mov esi, r15d
0x00007288      bf01000000     mov edi, 1
0x0000728d      e8bea9ffff     call sym.imp.__fxstat
0x00007292      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:2096
0x00007294      0f84c6000000   je 0x7360
0x0000729a      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:2099 ; -1
0x0000729f      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fts.c:2118
0x000072a2      7931           jns 0x72d5
0x000072a4      e8f7a6ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:2120
0x000072a9      448b20         mov r12d, dword [rax]
0x000072ac      4889c5         mov rbp, rax
0x000072af      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts.c:2121
0x000072b2      e899a8ffff     call sym.imp.close
0x000072b7      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fts.c:2122
0x000072bb      eb18           jmp 0x72d5
0x000072bd      0f1f00         nop dword [rax]
0x000072c0      4585c9         test r9d, r9d                           ; ../coreutils-8.31/lib/fts.c:2053
0x000072c3      743b           je 0x7300
0x000072c5      80e702         and bh, 2                               ; ../coreutils-8.31/lib/fts.c:2055
0x000072c8      7409           je 0x72d3
0x000072ca      4585e4         test r12d, r12d
0x000072cd      0f89ad000000   jns 0x7380
0x000072d3      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:2057
0x000072d5      488b8c24a800.  mov rcx, qword [rsp + 0xa8]
0x000072dd      6448330c2528.  xor rcx, qword fs:[0x28]
0x000072e6      89d8           mov eax, ebx
0x000072e8      0f8537010000   jne 0x7425
0x000072ee      4881c4b80000.  add rsp, 0xb8
0x000072f5      5b             pop rbx
0x000072f6      5d             pop rbp
0x000072f7      415c           pop r12
0x000072f9      415d           pop r13                                 ; ../coreutils-8.31/lib/fts-cycle.c:2014
0x000072fb      415e           pop r14
0x000072fd      415f           pop r15
0x000072ff      c3             ret
0x00007300      4585e4         test r12d, r12d
0x00007303      0f8837010000   js 0x7440
0x00007309      f6c302         test bl, 2
0x0000730c      4589e7         mov r15d, r12d
0x0000730f      c644240f00     mov byte [rsp + 0xf], 0
0x00007314      0f8566ffffff   jne 0x7280
0x0000731a      4885ed         test rbp, rbp
0x0000731d      7421           je 0x7340
0x0000731f      488d15984100.  lea rdx, [0x0000b4be]                   ; ".."
0x00007326      b903000000     mov ecx, 3
0x0000732b      4889ee         mov rsi, rbp
0x0000732e      4889d7         mov rdi, rdx
0x00007331      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00007333      0f97c0         seta al                                 ; ../coreutils-8.31/lib/fts-cycle.c:2010
0x00007336      1c00           sbb al, 0
0x00007338      84c0           test al, al
0x0000733a      0f8440ffffff   je 0x7280
0x00007340      80e702         and bh, 2
0x00007343      0f858f000000   jne 0x73d8
0x00007349      4489ff         mov edi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:1971
0x0000734c      e81fa9ffff     call sym.imp.fchdir
0x00007351      89c3           mov ebx, eax
0x00007353      e947ffffff     jmp 0x729f
0x00007358      0f1f84000000.  nop dword [rax + rax]
0x00007360      488b442410     mov rax, qword [rsp + 0x10]
0x00007365      49394678       cmp qword [r14 + 0x78], rax
0x00007369      0f8491000000   je 0x7400                               ; ../coreutils-8.31/lib/fts-cycle.c:1977
0x0000736f      e82ca6ffff     call sym.imp.__errno_location
0x00007374      c70002000000   mov dword [rax], 2
0x0000737a      e91bffffff     jmp 0x729a
0x0000737f      90             nop
0x00007380      4489e7         mov edi, r12d
0x00007383      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x00007385      e8c6a7ffff     call sym.imp.close
0x0000738a      e946ffffff     jmp 0x72d5
0x0000738f      90             nop
0x00007390      4d8d7d60       lea r15, [r13 + 0x60]
0x00007394      4c89ff         mov rdi, r15
0x00007397      e8c42f0000     call sym.i_ring_empty
0x0000739c      84c0           test al, al
0x0000739e      8844240f       mov byte [rsp + 0xf], al
0x000073a2      0f85acfeffff   jne 0x7254
0x000073a8      4c89ff         mov rdi, r15
0x000073ab      e800300000     call sym.i_ring_pop
0x000073b0      85c0           test eax, eax
0x000073b2      4189c7         mov r15d, eax
0x000073b5      418b5d48       mov ebx, dword [r13 + 0x48]
0x000073b9      0f8890feffff   js 0x724f                               ; ../coreutils-8.31/lib/fts-cycle.c:2006
0x000073bf      f6c302         test bl, 2
0x000073c2      4189c4         mov r12d, eax
0x000073c5      c644240f01     mov byte [rsp + 0xf], 1
0x000073ca      0f8470ffffff   je 0x7340
0x000073d0      e9abfeffff     jmp 0x7280
0x000073d5      0f1f00         nop dword [rax]
0x000073d8      440fb674240f   movzx r14d, byte [rsp + 0xf]
0x000073de      4489fe         mov esi, r15d                           ; ../coreutils-8.31/lib/fts-cycle.c:2029
0x000073e1      4c89ef         mov rdi, r13
0x000073e4      31db           xor ebx, ebx
0x000073e6      4183f601       xor r14d, 1
0x000073ea      410fb6d6       movzx edx, r14b
0x000073ee      e8edfbffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts-cycle.c:1996
0x000073f3      e9ddfeffff     jmp 0x72d5
0x000073f8      0f1f84000000.  nop dword [rax + rax]
0x00007400      488b442418     mov rax, qword [rsp + 0x18]
0x00007405      493986800000.  cmp qword [r14 + 0x80], rax
0x0000740c      0f855dffffff   jne 0x736f
0x00007412      418b5d48       mov ebx, dword [r13 + 0x48]
0x00007416      e925ffffff     jmp 0x7340                              ; ../coreutils-8.31/lib/fts-cycle.c:-22
0x0000741b      bbffffffff     mov ebx, 0xffffffff                     ; ../coreutils-8.31/lib/fts-cycle.c:-17 ; -1
0x00007420      e9b0feffff     jmp 0x72d5
0x00007425      e886a6ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/fts-cycle.c:-14
0x0000742a      f6c302         test bl, 2
0x0000742d      4589e7         mov r15d, r12d
0x00007430      c644240f01     mov byte [rsp + 0xf], 1
0x00007435      0f84ebfeffff   je 0x7326                               ; ../coreutils-8.31/lib/fts-cycle.c:-4
0x0000743b      e940feffff     jmp 0x7280
0x00007440      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/fts-cycle.c:-11
0x00007445      e90afeffff     jmp 0x7254
0x0000744a      660f1f440000   nop word [rax + rax]
;-- enter_dir.isra.10:
0x00007450      81e702010000   and edi, 0x102
0x00007456      4154           push r12
0x00007458      4989f4         mov r12, rsi
0x0000745b      55             push rbp
0x0000745c      53             push rbx                                ; ../coreutils-8.31/lib/fts-cycle.c:0
0x0000745d      4889d3         mov rbx, rdx
0x00007460      746e           je 0x74d0
0x00007462      bf18000000     mov edi, 0x18
0x00007467      e8b4a7ffff     call sym.imp.malloc
0x0000746c      4885c0         test rax, rax
0x0000746f      4889c5         mov rbp, rax
0x00007472      0f8480000000   je 0x74f8
0x00007478      488b4378       mov rax, qword [rbx + 0x78]
0x0000747c      498b3c24       mov rdi, qword [r12]
0x00007480      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts-cycle.c:24
0x00007483      48895d10       mov qword [rbp + 0x10], rbx
0x00007487      48894500       mov qword [rbp], rax
0x0000748b      488b83800000.  mov rax, qword [rbx + 0x80]
0x00007492      48894508       mov qword [rbp + 8], rax
0x00007496      e8352c0000     call sym.hash_insert
0x0000749b      4839c5         cmp rbp, rax
0x0000749e      4989c4         mov r12, rax
0x000074a1      741e           je 0x74c1
0x000074a3      4889ef         mov rdi, rbp
0x000074a6      e8f5a8ffff     call sym..plt.got
0x000074ab      4d85e4         test r12, r12
0x000074ae      7448           je 0x74f8
0x000074b0      498b442410     mov rax, qword [r12 + 0x10]
0x000074b5      b902000000     mov ecx, 2
0x000074ba      66894b70       mov word [rbx + 0x70], cx
0x000074be      488903         mov qword [rbx], rax
0x000074c1      5b             pop rbx
0x000074c2      b801000000     mov eax, 1
0x000074c7      5d             pop rbp
0x000074c8      415c           pop r12
0x000074ca      c3             ret
0x000074cb      0f1f440000     nop dword [rax + rax]
0x000074d0      498b3c24       mov rdi, qword [r12]                    ; ../coreutils-8.31/lib/fts-cycle.c:32
0x000074d4      488d7278       lea rsi, [rdx + 0x78]
0x000074d8      e8231a0000     call sym.cycle_check                    ; ../coreutils-8.31/lib/fts-cycle.c:45
0x000074dd      84c0           test al, al
0x000074df      74e0           je 0x74c1
0x000074e1      ba02000000     mov edx, 2
0x000074e6      48891b         mov qword [rbx], rbx
0x000074e9      66895370       mov word [rbx + 0x70], dx
0x000074ed      5b             pop rbx
0x000074ee      5d             pop rbp
0x000074ef      415c           pop r12
0x000074f1      c3             ret
0x000074f2      660f1f440000   nop word [rax + rax]
0x000074f8      5b             pop rbx
0x000074f9      31c0           xor eax, eax
0x000074fb      5d             pop rbp
0x000074fc      415c           pop r12
0x000074fe      c3             ret                                     ; ../coreutils-8.31/lib/fts-cycle.c:50
0x000074ff      90             nop
;-- leave_dir.isra.12:
0x00007500      4883ec28       sub rsp, 0x28
0x00007504      4889f1         mov rcx, rsi
0x00007507      64488b042528.  mov rax, qword fs:[0x28]
0x00007510      4889442418     mov qword [rsp + 0x18], rax
0x00007515      31c0           xor eax, eax
0x00007517      81e702010000   and edi, 0x102
0x0000751d      7541           jne 0x7560                              ; ../coreutils-8.31/lib/fts-cycle.c:38
0x0000751f      488b4208       mov rax, qword [rdx + 8]
0x00007523      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts-cycle.c:36
0x00007526      741d           je 0x7545
0x00007528      4883785800     cmp qword [rax + 0x58], 0
0x0000752d      7816           js 0x7545
0x0000752f      488b0e         mov rcx, qword [rsi]
0x00007532      4883791000     cmp qword [rcx + 0x10], 0
0x00007537      747a           je 0x75b3
0x00007539      488bb2800000.  mov rsi, qword [rdx + 0x80]
0x00007540      483931         cmp qword [rcx], rsi
0x00007543      744b           je 0x7590
0x00007545      488b442418     mov rax, qword [rsp + 0x18]
0x0000754a      644833042528.  xor rax, qword fs:[0x28]
0x00007553      7559           jne 0x75ae
0x00007555      4883c428       add rsp, 0x28
0x00007559      c3             ret
0x0000755a      660f1f440000   nop word [rax + rax]
0x00007560      488b4278       mov rax, qword [rdx + 0x78]
0x00007564      488b39         mov rdi, qword [rcx]
0x00007567      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/fts-cycle.c:50
0x0000756a      48890424       mov qword [rsp], rax
0x0000756e      488b82800000.  mov rax, qword [rdx + 0x80]
0x00007575      4889442408     mov qword [rsp + 8], rax
0x0000757a      e8b12b0000     call sym.hash_delete
0x0000757f      4885c0         test rax, rax
0x00007582      742f           je 0x75b3
0x00007584      4889c7         mov rdi, rax
0x00007587      e814a8ffff     call sym..plt.got
0x0000758c      ebb7           jmp 0x7545
0x0000758e      6690           nop
0x00007590      488b7278       mov rsi, qword [rdx + 0x78]
0x00007594      48397108       cmp qword [rcx + 8], rsi
0x00007598      75ab           jne 0x7545
0x0000759a      488b5078       mov rdx, qword [rax + 0x78]
0x0000759e      488b80800000.  mov rax, qword [rax + 0x80]
0x000075a5      48895108       mov qword [rcx + 8], rdx                ; ../coreutils-8.31/lib/fts.c:1225
0x000075a9      488901         mov qword [rcx], rax
0x000075ac      eb97           jmp 0x7545
0x000075ae      e8fda4ffff     call sym.imp.__stack_chk_fail
0x000075b3      e8d8a3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/fts.c:1228
0x000075b8      0f1f84000000.  nop dword [rax + rax]
;-- fts_build:
0x000075c0      4157           push r15
0x000075c2      4156           push r14
0x000075c4      4989ff         mov r15, rdi
0x000075c7      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:1282
0x000075c9      4154           push r12
0x000075cb      55             push rbp
0x000075cc      53             push rbx
0x000075cd      4883ec78       sub rsp, 0x78
0x000075d1      488b2f         mov rbp, qword [rdi]
0x000075d4      64488b042528.  mov rax, qword fs:[0x28]
0x000075dd      4889442468     mov qword [rsp + 0x68], rax
0x000075e2      31c0           xor eax, eax
0x000075e4      89742458       mov dword [rsp + 0x58], esi             ; ../coreutils-8.31/lib/fts.c:1343
0x000075e8      488b4518       mov rax, qword [rbp + 0x18]
0x000075ec      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:1349
0x000075ef      4889442450     mov qword [rsp + 0x50], rax
0x000075f4      0f8436040000   je 0x7a30
0x000075fa      4889c7         mov rdi, rax
0x000075fd      e8bea5ffff     call sym.imp.dirfd
0x00007602      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:1344
0x00007604      89442464       mov dword [rsp + 0x64], eax
0x00007608      0f8852050000   js 0x7b60
0x0000760e      49837f4000     cmp qword [r15 + 0x40], 0
0x00007613      0f84cf070000   je 0x7de8
0x00007619      48c7442438ff.  mov qword [rsp + 0x38], 0xffffffffffffffff
0x00007622      418b7f48       mov edi, dword [r15 + 0x48]
0x00007626      c644245f01     mov byte [rsp + 0x5f], 1
0x0000762b      488b4d48       mov rcx, qword [rbp + 0x48]
0x0000762f      488b5538       mov rdx, qword [rbp + 0x38]             ; ../coreutils-8.31/lib/fts.c:1359
0x00007633      48c744244000.  mov qword [rsp + 0x40], 0
0x0000763c      807c0aff2f     cmp byte [rdx + rcx - 1], 0x2f
0x00007641      488d41ff       lea rax, [rcx - 1]                      ; ../coreutils-8.31/lib/fts.c:1351
0x00007645      480f45c1       cmovne rax, rcx
0x00007649      83e704         and edi, 4
0x0000764c      4889442448     mov qword [rsp + 0x48], rax
0x00007651      7410           je 0x7663
0x00007653      49034720       add rax, qword [r15 + 0x20]
0x00007657      488d5801       lea rbx, [rax + 1]
0x0000765b      c6002f         mov byte [rax], 0x2f                    ; ../coreutils-8.31/lib/fts.c:1360 ; '/'
                                                                       ; [0x2f:1]=0
0x0000765e      48895c2440     mov qword [rsp + 0x40], rbx
0x00007663      488b442448     mov rax, qword [rsp + 0x48]
0x00007668      498b5f30       mov rbx, qword [r15 + 0x30]
0x0000766c      c644245e00     mov byte [rsp + 0x5e], 0
0x00007671      c644245d00     mov byte [rsp + 0x5d], 0
0x00007676      48c744240800.  mov qword [rsp + 8], 0                  ; ../coreutils-8.31/lib/fts.c:1298
0x0000767f      48c744241000.  mov qword [rsp + 0x10], 0
0x00007688      4883c001       add rax, 1
0x0000768c      48896c2420     mov qword [rsp + 0x20], rbp             ; ../coreutils-8.31/lib/fts.c:1306
0x00007691      4829c3         sub rbx, rax
0x00007694      4889442418     mov qword [rsp + 0x18], rax
0x00007699      488b4558       mov rax, qword [rbp + 0x58]
0x0000769d      48895c2428     mov qword [rsp + 0x28], rbx
0x000076a2      31db           xor ebx, ebx
0x000076a4      4883c001       add rax, 1
0x000076a8      4889442430     mov qword [rsp + 0x30], rax
0x000076ad      e9dd000000     jmp 0x778f
0x000076b2      660f1f440000   nop word [rax + rax]
0x000076b8      4d89f1         mov r9, r14                             ; ../coreutils-8.31/lib/fts.c:1328
0x000076bb      4c034c2418     add r9, qword [rsp + 0x18]
0x000076c0      0f825a080000   jb 0x7f20
0x000076c6      488b442430     mov rax, qword [rsp + 0x30]
0x000076cb      498db5080100.  lea rsi, [r13 + 0x108]
0x000076d2      49894558       mov qword [r13 + 0x58], rax
0x000076d6      498b07         mov rax, qword [r15]
0x000076d9      4d894d48       mov qword [r13 + 0x48], r9
0x000076dd      49894508       mov qword [r13 + 8], rax
0x000076e1      488b4500       mov rax, qword [rbp]
0x000076e5      498985800000.  mov qword [r13 + 0x80], rax             ; ../coreutils-8.31/lib/fts.c:71
0x000076ec      418b4748       mov eax, dword [r15 + 0x48]
0x000076f0      a804           test al, 4
0x000076f2      0f8568020000   jne 0x7960
0x000076f8      49897530       mov qword [r13 + 0x30], rsi
0x000076fc      49837f4000     cmp qword [r15 + 0x40], 0
0x00007701      7409           je 0x770c
0x00007703      f6c404         test ah, 4
0x00007706      0f84fc020000   je 0x7a08
0x0000770c      0fb65512       movzx edx, byte [rbp + 0x12]
0x00007710      83e018         and eax, 0x18
0x00007713      89d6           mov esi, edx
0x00007715      83ea01         sub edx, 1
0x00007718      83f818         cmp eax, 0x18
0x0000771b      0f84af020000   je 0x79d0                               ; ../coreutils-8.31/lib/fts.c:1359
0x00007721      b90b000000     mov ecx, 0xb
0x00007726      83fa0b         cmp edx, 0xb
0x00007729      6641894d70     mov word [r13 + 0x70], cx
0x0000772e      0f8764020000   ja 0x7998
0x00007734      488d05a54a00.  lea rax, obj.CSWTCH.53                  ; 0xc1e0
0x0000773b      8b0490         mov eax, dword [rax + rdx*4]
0x0000773e      418985900000.  mov dword [r13 + 0x90], eax
0x00007745      b802000000     mov eax, 2
0x0000774a      498985a80000.  mov qword [r13 + 0xa8], rax
0x00007751      48837c241000   cmp qword [rsp + 0x10], 0
0x00007757      49c745100000.  mov qword [r13 + 0x10], 0               ; ../coreutils-8.31/lib/fts.c:1237
0x0000775f      0f8423020000   je 0x7988
0x00007765      488b442408     mov rax, qword [rsp + 8]
0x0000776a      4c896810       mov qword [rax + 0x10], r13             ; ../coreutils-8.31/lib/fts.c:1247
0x0000776e      4881fb102700.  cmp rbx, 0x2710
0x00007775      0f84f5000000   je 0x7870
0x0000777b      4883c301       add rbx, 1
0x0000777f      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x00007784      0f833e010000   jae 0x78c8
0x0000778a      4c896c2408     mov qword [rsp + 8], r13
0x0000778f      488b442420     mov rax, qword [rsp + 0x20]
0x00007794      4c8b6818       mov r13, qword [rax + 0x18]             ; ../coreutils-8.31/lib/fts.c:1251
0x00007798      4d85ed         test r13, r13
0x0000779b      0f84c7040000   je 0x7c68
0x000077a1      e8faa1ffff     call sym.imp.__errno_location
0x000077a6      4c89ef         mov rdi, r13
0x000077a9      c70000000000   mov dword [rax], 0
0x000077af      4989c4         mov r12, rax
0x000077b2      e859a4ffff     call sym.imp.readdir
0x000077b7      4885c0         test rax, rax
0x000077ba      4889c5         mov rbp, rax
0x000077bd      0f847d050000   je 0x7d40
0x000077c3      41f6474820     test byte [r15 + 0x48], 0x20
0x000077c8      750a           jne 0x77d4
0x000077ca      8078132e       cmp byte [rax + 0x13], 0x2e
0x000077ce      0f84dc010000   je 0x79b0
0x000077d4      4c8d6d13       lea r13, [rbp + 0x13]
0x000077d8      4c89ef         mov rdi, r13
0x000077db      e8a0a2ffff     call sym.imp.strlen
0x000077e0      4c89ee         mov rsi, r13
0x000077e3      4889c2         mov rdx, rax
0x000077e6      4c89ff         mov rdi, r15
0x000077e9      4989c6         mov r14, rax
0x000077ec      e82ff5ffff     call sym.fts_alloc
0x000077f1      4885c0         test rax, rax
0x000077f4      4989c5         mov r13, rax                            ; ../coreutils-8.31/lib/fts.c:1278
0x000077f7      0f8413040000   je 0x7c10
0x000077fd      4c39742428     cmp qword [rsp + 0x28], r14
0x00007802      0f87b0feffff   ja 0x76b8
0x00007808      498b4720       mov rax, qword [r15 + 0x20]
0x0000780c      498d7730       lea rsi, [r15 + 0x30]
0x00007810      498d7f20       lea rdi, [r15 + 0x20]
0x00007814      4889442428     mov qword [rsp + 0x28], rax
0x00007819      488b442448     mov rax, qword [rsp + 0x48]
0x0000781e      4a8d543002     lea rdx, [rax + r14 + 2]
0x00007823      e888f8ffff     call sym.fts_palloc.isra.2
0x00007828      84c0           test al, al
0x0000782a      0f84e0030000   je 0x7c10
0x00007830      498b5720       mov rdx, qword [r15 + 0x20]
0x00007834      483b542428     cmp rdx, qword [rsp + 0x28]
0x00007839      0f84e1010000   je 0x7a20
0x0000783f      4803542418     add rdx, qword [rsp + 0x18]
0x00007844      41f6474804     test byte [r15 + 0x48], 4
0x00007849      480f44542440   cmove rdx, qword [rsp + 0x40]
0x0000784f      4889542440     mov qword [rsp + 0x40], rdx
0x00007854      498b4f30       mov rcx, qword [r15 + 0x30]
0x00007858      482b4c2418     sub rcx, qword [rsp + 0x18]
0x0000785d      8844245d       mov byte [rsp + 0x5d], al
0x00007861      48894c2428     mov qword [rsp + 0x28], rcx
0x00007866      e94dfeffff     jmp 0x76b8
0x0000786b      0f1f440000     nop dword [rax + rax]
0x00007870      49837f4000     cmp qword [r15 + 0x40], 0
0x00007875      0f8500ffffff   jne 0x777b
0x0000787b      8b742464       mov esi, dword [rsp + 0x64]
0x0000787f      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00007884      e8b7f5ffff     call sym.filesystem_type
0x00007889      483d94190201   cmp rax, 0x1021994
0x0000788f      0f846b030000   je 0x7c00
0x00007895      b9424d53ff     mov ecx, 0xff534d42
0x0000789a      4839c8         cmp rax, rcx
0x0000789d      0f845d030000   je 0x7c00
0x000078a3      483d69690000   cmp rax, 0x6969
0x000078a9      0f8451030000   je 0x7c00
0x000078af      4883c301       add rbx, 1
0x000078b3      483b5c2438     cmp rbx, qword [rsp + 0x38]
0x000078b8      c644245e01     mov byte [rsp + 0x5e], 1
0x000078bd      0f82c7feffff   jb 0x778a
0x000078c3      0f1f440000     nop dword [rax + rax]
0x000078c8      807c245d00     cmp byte [rsp + 0x5d], 0
0x000078cd      488b6c2420     mov rbp, qword [rsp + 0x20]             ; ../coreutils-8.31/lib/fts.c:1664
0x000078d2      0f849e030000   je 0x7c76
0x000078d8      498b4708       mov rax, qword [r15 + 8]
0x000078dc      498b4f20       mov rcx, qword [r15 + 0x20]
0x000078e0      4885c0         test rax, rax
0x000078e3      742b           je 0x7910
0x000078e5      0f1f00         nop dword [rax]
0x000078e8      488b5030       mov rdx, qword [rax + 0x30]             ; string_fortified.h:-312
0x000078ec      488db0080100.  lea rsi, [rax + 0x108]
0x000078f3      4839f2         cmp rdx, rsi
0x000078f6      740b           je 0x7903
0x000078f8      482b5038       sub rdx, qword [rax + 0x38]
0x000078fc      4801ca         add rdx, rcx
0x000078ff      48895030       mov qword [rax + 0x30], rdx
0x00007903      48894838       mov qword [rax + 0x38], rcx
0x00007907      488b4010       mov rax, qword [rax + 0x10]
0x0000790b      4885c0         test rax, rax
0x0000790e      75d8           jne 0x78e8
0x00007910      488b442410     mov rax, qword [rsp + 0x10]
0x00007915      eb0c           jmp 0x7923
0x00007917      660f1f840000.  nop word [rax + rax]
0x00007920      4889d0         mov rax, rdx
0x00007923      4883785800     cmp qword [rax + 0x58], 0
0x00007928      0f8848030000   js 0x7c76
0x0000792e      488b5030       mov rdx, qword [rax + 0x30]
0x00007932      488db0080100.  lea rsi, [rax + 0x108]
0x00007939      4839f2         cmp rdx, rsi
0x0000793c      740b           je 0x7949
0x0000793e      482b5038       sub rdx, qword [rax + 0x38]
0x00007942      4801ca         add rdx, rcx
0x00007945      48895030       mov qword [rax + 0x30], rdx
0x00007949      488b5010       mov rdx, qword [rax + 0x10]
0x0000794d      48894838       mov qword [rax + 0x38], rcx
0x00007951      4885d2         test rdx, rdx
0x00007954      75ca           jne 0x7920
0x00007956      488b5008       mov rdx, qword [rax + 8]
0x0000795a      ebc4           jmp 0x7920
0x0000795c      0f1f4000       nop dword [rax]
0x00007960      498b4538       mov rax, qword [r13 + 0x38]
0x00007964      488b7c2440     mov rdi, qword [rsp + 0x40]             ; ../coreutils-8.31/lib/fts.c:-185
0x00007969      49894530       mov qword [r13 + 0x30], rax
0x0000796d      498b4560       mov rax, qword [r13 + 0x60]
0x00007971      488d5001       lea rdx, [rax + 1]
0x00007975      e846a3ffff     call sym.imp.memmove
0x0000797a      418b4748       mov eax, dword [r15 + 0x48]
0x0000797e      e979fdffff     jmp 0x76fc
0x00007983      0f1f440000     nop dword [rax + rax]
0x00007988      4c896c2410     mov qword [rsp + 0x10], r13
0x0000798d      e9dcfdffff     jmp 0x776e
0x00007992      660f1f440000   nop word [rax + rax]
0x00007998      41c785900000.  mov dword [r13 + 0x90], 0
0x000079a3      b802000000     mov eax, 2
0x000079a8      e99dfdffff     jmp 0x774a
0x000079ad      0f1f00         nop dword [rax]
0x000079b0      80781400       cmp byte [rax + 0x14], 0
0x000079b4      740b           je 0x79c1
0x000079b6      668378142e     cmp word [rax + 0x14], 0x2e
0x000079bb      0f8513feffff   jne 0x77d4
0x000079c1      4c8b6c2408     mov r13, qword [rsp + 8]
0x000079c6      e9bffdffff     jmp 0x778a                              ; ../coreutils-8.31/lib/fts.c:860
0x000079cb      0f1f440000     nop dword [rax + rax]
0x000079d0      81e6fb000000   and esi, 0xfb
0x000079d6      0f8445fdffff   je 0x7721
0x000079dc      b80b000000     mov eax, 0xb
0x000079e1      83fa0b         cmp edx, 0xb                            ; ../coreutils-8.31/lib/fts.c:872
0x000079e4      6641894570     mov word [r13 + 0x70], ax
0x000079e9      0f8687050000   jbe 0x7f76
0x000079ef      41c785900000.  mov dword [r13 + 0x90], 0
0x000079fa      b801000000     mov eax, 1
0x000079ff      e946fdffff     jmp 0x774a
0x00007a04      0f1f4000       nop dword [rax]
0x00007a08      31d2           xor edx, edx
0x00007a0a      4c89ee         mov rsi, r13
0x00007a0d      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:926
0x00007a10      e82bf0ffff     call sym.fts_stat
0x00007a15      6641894570     mov word [r13 + 0x70], ax
0x00007a1a      e932fdffff     jmp 0x7751
0x00007a1f      90             nop
0x00007a20      0fb644245d     movzx eax, byte [rsp + 0x5d]
0x00007a25      e92afeffff     jmp 0x7854
0x00007a2a      660f1f440000   nop word [rax + rax]
0x00007a30      8b4748         mov eax, dword [rdi + 0x48]
0x00007a33      89c2           mov edx, eax
0x00007a35      83e210         and edx, 0x10
0x00007a38      740d           je 0x7a47
0x00007a3a      a801           test al, 1
0x00007a3c      ba00000200     mov edx, 0x20000                        ; ../coreutils-8.31/lib/fts.c:931
0x00007a41      0f8501010000   jne 0x7b48
0x00007a47      2504020000     and eax, 0x204
0x00007a4c      488b7530       mov rsi, qword [rbp + 0x30]
0x00007a50      bf9cffffff     mov edi, 0xffffff9c                     ; 4294967196
0x00007a55      3d00020000     cmp eax, 0x200
0x00007a5a      7504           jne 0x7a60
0x00007a5c      418b7f2c       mov edi, dword [r15 + 0x2c]
0x00007a60      488d4c2464     lea rcx, [rsp + 0x64]
0x00007a65      e8362a0000     call sym.opendirat                      ; ../coreutils-8.31/lib/fts.c:938
0x00007a6a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/fts.c:940
0x00007a6d      48894518       mov qword [rbp + 0x18], rax
0x00007a71      0f8419030000   je 0x7d90
0x00007a77      66837d700b     cmp word [rbp + 0x70], 0xb
0x00007a7c      0f848e030000   je 0x7e10
0x00007a82      418b7f48       mov edi, dword [r15 + 0x48]
0x00007a86      f7c700010000   test edi, 0x100
0x00007a8c      0f851e010000   jne 0x7bb0
0x00007a92      49837f4001     cmp qword [r15 + 0x40], 1
0x00007a97      4819c0         sbb rax, rax
0x00007a9a      25a1860100     and eax, 0x186a1                        ; ../coreutils-8.31/lib/fts.c:943
0x00007a9f      4883e801       sub rax, 1
0x00007aa3      837c245802     cmp dword [rsp + 0x58], 2
0x00007aa8      4889442438     mov qword [rsp + 0x38], rax
0x00007aad      0f844d030000   je 0x7e00
0x00007ab3      418b5748       mov edx, dword [r15 + 0x48]
0x00007ab7      8b442464       mov eax, dword [rsp + 0x64]
0x00007abb      83e238         and edx, 0x38
0x00007abe      83fa18         cmp edx, 0x18
0x00007ac1      0f849d030000   je 0x7e64
0x00007ac7      837c245803     cmp dword [rsp + 0x58], 3
0x00007acc      41bc01000000   mov r12d, 1
0x00007ad2      0f94c3         sete bl
0x00007ad5      41f6474902     test byte [r15 + 0x49], 2
0x00007ada      0f85dc030000   jne 0x7ebc
0x00007ae0      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:848
0x00007ae2      0f8960030000   jns 0x7e48
0x00007ae8      84db           test bl, bl
0x00007aea      740f           je 0x7afb
0x00007aec      4584e4         test r12b, r12b
0x00007aef      740a           je 0x7afb                               ; ../coreutils-8.31/lib/fts.c:1170
0x00007af1      e8aa9effff     call sym.imp.__errno_location
0x00007af6      8b00           mov eax, dword [rax]
0x00007af8      894540         mov dword [rbp + 0x40], eax
0x00007afb      66834d7201     or word [rbp + 0x72], 1
0x00007b00      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007b04      e857a0ffff     call sym.imp.closedir
0x00007b09      418b7f48       mov edi, dword [r15 + 0x48]
0x00007b0d      48c745180000.  mov qword [rbp + 0x18], 0
0x00007b15      f7c700020000   test edi, 0x200
0x00007b1b      7413           je 0x7b30
0x00007b1d      8b442464       mov eax, dword [rsp + 0x64]
0x00007b21      85c0           test eax, eax
0x00007b23      780b           js 0x7b30
0x00007b25      89c7           mov edi, eax
0x00007b27      e824a0ffff     call sym.imp.close
0x00007b2c      418b7f48       mov edi, dword [r15 + 0x48]
0x00007b30      48c745180000.  mov qword [rbp + 0x18], 0
0x00007b38      c644245f00     mov byte [rsp + 0x5f], 0
0x00007b3d      e9e9faffff     jmp 0x762b
0x00007b42      660f1f440000   nop word [rax + rax]
0x00007b48      31d2           xor edx, edx
0x00007b4a      48837d5800     cmp qword [rbp + 0x58], 0
0x00007b4f      0f95c2         setne dl
0x00007b52      c1e211         shl edx, 0x11                           ; ../coreutils-8.31/lib/fts.c:886
0x00007b55      e9edfeffff     jmp 0x7a47
0x00007b5a      660f1f440000   nop word [rax + rax]
0x00007b60      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007b64      e8f79fffff     call sym.imp.closedir
0x00007b69      837c245803     cmp dword [rsp + 0x58], 3
0x00007b6e      48c745180000.  mov qword [rbp + 0x18], 0
0x00007b76      0f841f020000   je 0x7d9b
0x00007b7c      48c744241000.  mov qword [rsp + 0x10], 0
0x00007b85      488b5c2468     mov rbx, qword [rsp + 0x68]
0x00007b8a      6448331c2528.  xor rbx, qword fs:[0x28]
0x00007b93      488b442410     mov rax, qword [rsp + 0x10]
0x00007b98      0f85d3030000   jne 0x7f71
0x00007b9e      4883c478       add rsp, 0x78                           ; ../coreutils-8.31/lib/fts.c:1011
0x00007ba2      5b             pop rbx
0x00007ba3      5d             pop rbp
0x00007ba4      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:1010
0x00007ba6      415d           pop r13
0x00007ba8      415e           pop r14
0x00007baa      415f           pop r15
0x00007bac      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:1014
0x00007bad      0f1f00         nop dword [rax]
0x00007bb0      498d5f58       lea rbx, [r15 + 0x58]
0x00007bb4      4889ea         mov rdx, rbp
0x00007bb7      4889de         mov rsi, rbx
0x00007bba      e841f9ffff     call sym.leave_dir.isra.12              ; ../coreutils-8.31/lib/fts.c:1012
0x00007bbf      31d2           xor edx, edx
0x00007bc1      4889ee         mov rsi, rbp
0x00007bc4      4c89ff         mov rdi, r15
0x00007bc7      e874eeffff     call sym.fts_stat
0x00007bcc      418b7f48       mov edi, dword [r15 + 0x48]             ; ../coreutils-8.31/lib/fts.c:994
0x00007bd0      4889ea         mov rdx, rbp
0x00007bd3      4889de         mov rsi, rbx
0x00007bd6      e875f8ffff     call sym.enter_dir.isra.10
0x00007bdb      84c0           test al, al
0x00007bdd      0f85affeffff   jne 0x7a92
0x00007be3      e8b89dffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fts.c:1004
0x00007be8      48c744241000.  mov qword [rsp + 0x10], 0
0x00007bf1      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00007bf7      eb8c           jmp 0x7b85
0x00007bf9      0f1f80000000.  nop dword [rax]
0x00007c00      c644245e00     mov byte [rsp + 0x5e], 0
0x00007c05      e971fbffff     jmp 0x777b
0x00007c0a      660f1f440000   nop word [rax + rax]
0x00007c10      4c89ef         mov rdi, r13
0x00007c13      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007c18      418b1c24       mov ebx, dword [r12]
0x00007c1c      e87fa1ffff     call sym..plt.got
0x00007c21      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007c26      e885f1ffff     call sym.fts_lfree
0x00007c2b      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007c2f      e82c9fffff     call sym.imp.closedir
0x00007c34      41b907000000   mov r9d, 7                              ; ../coreutils-8.31/lib/fts.c:1006
0x00007c3a      48c745180000.  mov qword [rbp + 0x18], 0
0x00007c42      48c744241000.  mov qword [rsp + 0x10], 0
0x00007c4b      6644894d70     mov word [rbp + 0x70], r9w
0x00007c50      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x1a2444c6
0x00007c58      41891c24       mov dword [r12], ebx
0x00007c5c      e924ffffff     jmp 0x7b85
0x00007c61      0f1f80000000.  nop dword [rax]
0x00007c68      4889c5         mov rbp, rax
0x00007c6b      807c245d00     cmp byte [rsp + 0x5d], 0
0x00007c70      0f8562fcffff   jne 0x78d8
0x00007c76      41f6474804     test byte [r15 + 0x48], 4
0x00007c7b      741e           je 0x7c9b
0x00007c7d      488b442418     mov rax, qword [rsp + 0x18]
0x00007c82      49394730       cmp qword [r15 + 0x30], rax
0x00007c86      7405           je 0x7c8d                               ; ../coreutils-8.31/lib/fts.c:849
0x00007c88      4885db         test rbx, rbx
0x00007c8b      7506           jne 0x7c93
0x00007c8d      48836c244001   sub qword [rsp + 0x40], 1
0x00007c93      488b442440     mov rax, qword [rsp + 0x40]
0x00007c98      c60000         mov byte [rax], 0
0x00007c9b      48837c245000   cmp qword [rsp + 0x50], 0
0x00007ca1      756d           jne 0x7d10
0x00007ca3      807c245f00     cmp byte [rsp + 0x5f], 0
0x00007ca8      7466           je 0x7d10
0x00007caa      837c245801     cmp dword [rsp + 0x58], 1
0x00007caf      743f           je 0x7cf0
0x00007cb1      4885db         test rbx, rbx
0x00007cb4      743a           je 0x7cf0
0x00007cb6      807c245e00     cmp byte [rsp + 0x5e], 0
0x00007cbb      0f85f7000000   jne 0x7db8
0x00007cc1      49837f4000     cmp qword [r15 + 0x40], 0
0x00007cc6      0f84b9feffff   je 0x7b85
0x00007ccc      4883fb01       cmp rbx, 1
0x00007cd0      0f84affeffff   je 0x7b85
0x00007cd6      488b742410     mov rsi, qword [rsp + 0x10]
0x00007cdb      4889da         mov rdx, rbx
0x00007cde      4c89ff         mov rdi, r15
0x00007ce1      e82aefffff     call sym.fts_sort
0x00007ce6      4889442410     mov qword [rsp + 0x10], rax
0x00007ceb      e995feffff     jmp 0x7b85
0x00007cf0      48837d5800     cmp qword [rbp + 0x58], 0
0x00007cf5      0f852b010000   jne 0x7e26
0x00007cfb      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/fts.c:897
0x00007cfe      e84df3ffff     call sym.restore_initial_cwd
0x00007d03      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:896
0x00007d05      0f95c0         setne al
0x00007d08      84c0           test al, al
0x00007d0a      0f8583010000   jne 0x7e93
0x00007d10      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/fts.c:632
0x00007d13      75a1           jne 0x7cb6
0x00007d15      837c245803     cmp dword [rsp + 0x58], 3
0x00007d1a      0f84b8010000   je 0x7ed8
0x00007d20      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007d25      e886f0ffff     call sym.fts_lfree
0x00007d2a      48c744241000.  mov qword [rsp + 0x10], 0
0x00007d33      e94dfeffff     jmp 0x7b85
0x00007d38      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fts.c:607
0x00007d40      418b0424       mov eax, dword [r12]
0x00007d44      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007d49      85c0           test eax, eax
0x00007d4b      7421           je 0x7d6e
0x00007d4d      4885db         test rbx, rbx
0x00007d50      894540         mov dword [rbp + 0x40], eax
0x00007d53      0f8530010000   jne 0x7e89
0x00007d59      48837c245000   cmp qword [rsp + 0x50], 0
0x00007d5f      b804000000     mov eax, 4
0x00007d64      0f851f010000   jne 0x7e89
0x00007d6a      66894570       mov word [rbp + 0x70], ax
0x00007d6e      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007d72      4885ff         test rdi, rdi
0x00007d75      0f84f0feffff   je 0x7c6b
0x00007d7b      e8e09dffff     call sym.imp.closedir
0x00007d80      48c745180000.  mov qword [rbp + 0x18], 0
0x00007d88      e9defeffff     jmp 0x7c6b
0x00007d8d      0f1f00         nop dword [rax]
0x00007d90      837c245803     cmp dword [rsp + 0x58], 3
0x00007d95      0f85e1fdffff   jne 0x7b7c
0x00007d9b      41ba04000000   mov r10d, 4
0x00007da1      6644895570     mov word [rbp + 0x70], r10w
0x00007da6      e8f59bffff     call sym.imp.__errno_location
0x00007dab      8b00           mov eax, dword [rax]
0x00007dad      894540         mov dword [rbp + 0x40], eax
0x00007db0      e9c7fdffff     jmp 0x7b7c
0x00007db5      0f1f00         nop dword [rax]
0x00007db8      488d0551ecff.  lea rax, sym.fts_compare_ino            ; 0x6a10 ; "H\x8b\x17H\x8b\x06H\x8b\x80\x80"
0x00007dbf      488b742410     mov rsi, qword [rsp + 0x10]
0x00007dc4      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/fts.c:880
0x00007dc7      4c89ff         mov rdi, r15
0x00007dca      49894740       mov qword [r15 + 0x40], rax
0x00007dce      e83deeffff     call sym.fts_sort
0x00007dd3      49c747400000.  mov qword [r15 + 0x40], 0
0x00007ddb      4889442410     mov qword [rsp + 0x10], rax
0x00007de0      e9a0fdffff     jmp 0x7b85
0x00007de5      0f1f00         nop dword [rax]
0x00007de8      48c7442438a0.  mov qword [rsp + 0x38], 0x186a0         ; [0x186a0:8]=-1
0x00007df1      c644245f01     mov byte [rsp + 0x5f], 1
0x00007df6      418b7f48       mov edi, dword [r15 + 0x48]
0x00007dfa      e92cf8ffff     jmp 0x762b
0x00007dff      90             nop
0x00007e00      c644245f00     mov byte [rsp + 0x5f], 0                ; ../coreutils-8.31/lib/fts.c:888
0x00007e05      418b7f48       mov edi, dword [r15 + 0x48]
0x00007e09      e91df8ffff     jmp 0x762b
0x00007e0e      6690           nop
0x00007e10      31d2           xor edx, edx
0x00007e12      4889ee         mov rsi, rbp
0x00007e15      4c89ff         mov rdi, r15
0x00007e18      e823ecffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:889
0x00007e1d      66894570       mov word [rbp + 0x70], ax
0x00007e21      e96cfcffff     jmp 0x7a92
0x00007e26      488b7508       mov rsi, qword [rbp + 8]                ; ../coreutils-8.31/lib/fts.c:665
0x00007e2a      488d0d8d3600.  lea rcx, [0x0000b4be]                   ; ".."
0x00007e31      baffffffff     mov edx, 0xffffffff                     ; -1
0x00007e36      4c89ff         mov rdi, r15
0x00007e39      e892f3ffff     call sym.fts_safe_changedir
0x00007e3e      85c0           test eax, eax
0x00007e40      0f95c0         setne al
0x00007e43      e9c0feffff     jmp 0x7d08
0x00007e48      31c9           xor ecx, ecx
0x00007e4a      89c2           mov edx, eax
0x00007e4c      4889ee         mov rsi, rbp
0x00007e4f      4c89ff         mov rdi, r15
0x00007e52      e879f3ffff     call sym.fts_safe_changedir
0x00007e57      85c0           test eax, eax
0x00007e59      0f8589fcffff   jne 0x7ae8
0x00007e5f      e9bef7ffff     jmp 0x7622
0x00007e64      4883bd880000.  cmp qword [rbp + 0x88], 2
0x00007e6c      0f8555fcffff   jne 0x7ac7
0x00007e72      89c6           mov esi, eax
0x00007e74      4889ef         mov rdi, rbp
0x00007e77      e8f4f0ffff     call sym.leaf_optimization
0x00007e7c      85c0           test eax, eax
0x00007e7e      757e           jne 0x7efe
0x00007e80      8b442464       mov eax, dword [rsp + 0x64]
0x00007e84      e93efcffff     jmp 0x7ac7
0x00007e89      b807000000     mov eax, 7
0x00007e8e      e9d7feffff     jmp 0x7d6a
0x00007e93      bf07000000     mov edi, 7
0x00007e98      66897d70       mov word [rbp + 0x70], di
0x00007e9c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x1a2444c6
0x00007ea4      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007ea9      e802efffff     call sym.fts_lfree
0x00007eae      48c744241000.  mov qword [rsp + 0x10], 0
0x00007eb7      e9c9fcffff     jmp 0x7b85
0x00007ebc      89c7           mov edi, eax
0x00007ebe      ba03000000     mov edx, 3
0x00007ec3      be06040000     mov esi, 0x406
0x00007ec8      31c0           xor eax, eax
0x00007eca      e811270000     call sym.rpl_fcntl                      ; ../coreutils-8.31/lib/fts.c:-617
0x00007ecf      89442464       mov dword [rsp + 0x64], eax
0x00007ed3      e908fcffff     jmp 0x7ae0
0x00007ed8      0fb74570       movzx eax, word [rbp + 0x70]            ; ../coreutils-8.31/lib/fts.c:1018
0x00007edc      6683f807       cmp ax, 7                               ; ../coreutils-8.31/lib/fts.c:-620
0x00007ee0      0f843afeffff   je 0x7d20
0x00007ee6      6683f804       cmp ax, 4                               ; ../coreutils-8.31/lib/fts.c:1018
0x00007eea      0f8430feffff   je 0x7d20
0x00007ef0      be06000000     mov esi, 6
0x00007ef5      66897570       mov word [rbp + 0x70], si
0x00007ef9      e922feffff     jmp 0x7d20                              ; ../coreutils-8.31/lib/fts.c:1019
0x00007efe      837c245803     cmp dword [rsp + 0x58], 3
0x00007f03      0f85f7feffff   jne 0x7e00
0x00007f09      8b442464       mov eax, dword [rsp + 0x64]
0x00007f0d      4531e4         xor r12d, r12d
0x00007f10      bb01000000     mov ebx, 1
0x00007f15      e9bbfbffff     jmp 0x7ad5
0x00007f1a      660f1f440000   nop word [rax + rax]
0x00007f20      4c89ef         mov rdi, r13
0x00007f23      488b6c2420     mov rbp, qword [rsp + 0x20]
0x00007f28      e8739effff     call sym..plt.got
0x00007f2d      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00007f32      e879eeffff     call sym.fts_lfree
0x00007f37      488b7d18       mov rdi, qword [rbp + 0x18]
0x00007f3b      e8209cffff     call sym.imp.closedir
0x00007f40      41b807000000   mov r8d, 7
0x00007f46      48c745180000.  mov qword [rbp + 0x18], 0
0x00007f4e      48c744241000.  mov qword [rsp + 0x10], 0
0x00007f57      6644894570     mov word [rbp + 0x70], r8w
0x00007f5c      41814f480020.  or dword [r15 + 0x48], 0x2000           ; [0x2000:4]=0x1a2444c6
0x00007f64      41c704242400.  mov dword [r12], 0x24                   ; '$'
                                                                       ; [0x24:4]=0
0x00007f6c      e914fcffff     jmp 0x7b85
0x00007f71      e83a9bffff     call sym.imp.__stack_chk_fail
0x00007f76      488d05634200.  lea rax, obj.CSWTCH.53                  ; 0xc1e0
0x00007f7d      8b0490         mov eax, dword [rax + rdx*4]
0x00007f80      418985900000.  mov dword [r13 + 0x90], eax
0x00007f87      b801000000     mov eax, 1
0x00007f8c      e9b9f7ffff     jmp 0x774a
0x00007f91      0f1f440000     nop dword [rax + rax]
0x00007f96      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_open:
0x00007fa0      4157           push r15
0x00007fa2      4156           push r14
0x00007fa4      4155           push r13
0x00007fa6      4154           push r12
0x00007fa8      55             push rbp
0x00007fa9      53             push rbx
0x00007faa      4883ec28       sub rsp, 0x28
0x00007fae      f7c600f0ffff   test esi, 0xfffff000
0x00007fb4      0f857e030000   jne 0x8338
0x00007fba      89f0           mov eax, esi
0x00007fbc      89f5           mov ebp, esi
0x00007fbe      2504020000     and eax, 0x204
0x00007fc3      3d04020000     cmp eax, 0x204
0x00007fc8      0f846a030000   je 0x8338
0x00007fce      40f6c612       test sil, 0x12
0x00007fd2      0f8460030000   je 0x8338
0x00007fd8      4989fd         mov r13, rdi
0x00007fdb      be01000000     mov esi, 1
0x00007fe0      bf80000000     mov edi, 0x80
0x00007fe5      4989d6         mov r14, rdx
0x00007fe8      e8a39bffff     call sym.imp.calloc
0x00007fed      4885c0         test rax, rax
0x00007ff0      4889c3         mov rbx, rax
0x00007ff3      0f8455020000   je 0x824e
0x00007ff9      40f6c502       test bpl, 2
0x00007ffd      4c897040       mov qword [rax + 0x40], r14
0x00008001      0f8559020000   jne 0x8260
0x00008007      498b7d00       mov rdi, qword [r13]
0x0000800b      896848         mov dword [rax + 0x48], ebp
0x0000800e      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x00008015      4885ff         test rdi, rdi
0x00008018      0f8461020000   je 0x827f
0x0000801e      4d89ef         mov r15, r13
0x00008021      4531e4         xor r12d, r12d
0x00008024      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-683
0x00008028      e8539affff     call sym.imp.strlen
0x0000802d      4939c4         cmp r12, rax
0x00008030      4c0f42e0       cmovb r12, rax
0x00008034      4983c708       add r15, 8
0x00008038      498b3f         mov rdi, qword [r15]
0x0000803b      4885ff         test rdi, rdi
0x0000803e      75e8           jne 0x8028
0x00008040      498d542401     lea rdx, [r12 + 1]
0x00008045      b800100000     mov eax, 0x1000
0x0000804a      4881fa001000.  cmp rdx, 0x1000
0x00008051      480f42d0       cmovb rdx, rax
0x00008055      488d7330       lea rsi, [rbx + 0x30]
0x00008059      488d7b20       lea rdi, [rbx + 0x20]
0x0000805d      e84ef0ffff     call sym.fts_palloc.isra.2
0x00008062      84c0           test al, al
0x00008064      88442416       mov byte [rsp + 0x16], al
0x00008068      0f849b020000   je 0x8309
0x0000806e      498b7500       mov rsi, qword [r13]
0x00008072      4885f6         test rsi, rsi
0x00008075      0f84a5020000   je 0x8320
0x0000807b      488d351f3e00.  lea rsi, [0x0000bea1]
0x00008082      31d2           xor edx, edx
0x00008084      4889df         mov rdi, rbx
0x00008087      e894ecffff     call sym.fts_alloc
0x0000808c      4885c0         test rax, rax
0x0000808f      4989c7         mov r15, rax
0x00008092      0f8468020000   je 0x8300
0x00008098      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x0000809f      4d85f6         test r14, r14
0x000080a2      498b7500       mov rsi, qword [r13]
0x000080a6      49894758       mov qword [r15 + 0x58], rax
0x000080aa      49894768       mov qword [r15 + 0x68], rax
0x000080ae      740d           je 0x80bd
0x000080b0      8b4348         mov eax, dword [rbx + 0x48]
0x000080b3      c1e80a         shr eax, 0xa
0x000080b6      83e001         and eax, 1
0x000080b9      88442416       mov byte [rsp + 0x16], al               ; ../coreutils-8.31/lib/fts.c:-626
0x000080bd      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/fts.c:-629
0x000080c0      0f8466020000   je 0x832c
0x000080c6      c1ed0b         shr ebp, 0xb
0x000080c9      48c744241800.  mov qword [rsp + 0x18], 0
0x000080d2      4531e4         xor r12d, r12d
0x000080d5      83f501         xor ebp, 1
0x000080d8      89e8           mov eax, ebp
0x000080da      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/fts.c:-616
0x000080dc      83e001         and eax, 1
0x000080df      88442417       mov byte [rsp + 0x17], al
0x000080e3      eb77           jmp 0x815c
0x000080e5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/fts.c:-615
0x000080e8      4889c2         mov rdx, rax
0x000080eb      4889df         mov rdi, rbx
0x000080ee      e82decffff     call sym.fts_alloc
0x000080f3      4885c0         test rax, rax
0x000080f6      4889c1         mov rcx, rax
0x000080f9      0f84f1010000   je 0x82f0
0x000080ff      48c740580000.  mov qword [rax + 0x58], 0
0x00008107      4c897808       mov qword [rax + 8], r15
0x0000810b      488d80080100.  lea rax, [rax + 0x108]
0x00008112      4d85e4         test r12, r12
0x00008115      48894130       mov qword [rcx + 0x30], rax
0x00008119      0f8471010000   je 0x8290
0x0000811f      807c241600     cmp byte [rsp + 0x16], 0
0x00008124      0f8466010000   je 0x8290
0x0000812a      be0b000000     mov esi, 0xb
0x0000812f      4d85f6         test r14, r14
0x00008132      48c781a80000.  mov qword [rcx + 0xa8], 2
0x0000813d      66897170       mov word [rcx + 0x70], si
0x00008141      0f8489010000   je 0x82d0                               ; ../coreutils-8.31/lib/fts.c:876
0x00008147      4c896110       mov qword [rcx + 0x10], r12
0x0000814b      4989cc         mov r12, rcx
0x0000814e      4883c501       add rbp, 1
0x00008152      498b74ed00     mov rsi, qword [r13 + rbp*8]
0x00008157      4885f6         test rsi, rsi
0x0000815a      7454           je 0x81b0
0x0000815c      4889f7         mov rdi, rsi
0x0000815f      4889742408     mov qword [rsp + 8], rsi
0x00008164      e81799ffff     call sym.imp.strlen
0x00008169      4883f802       cmp rax, 2
0x0000816d      488b742408     mov rsi, qword [rsp + 8]
0x00008172      0f8670ffffff   jbe 0x80e8                              ; ../coreutils-8.31/lib/fts.c:-659
0x00008178      807c241700     cmp byte [rsp + 0x17], 0
0x0000817d      0f8465ffffff   je 0x80e8
0x00008183      807c06ff2f     cmp byte [rsi + rax - 1], 0x2f
0x00008188      0f855affffff   jne 0x80e8
0x0000818e      6690           nop
0x00008190      807c06fe2f     cmp byte [rsi + rax - 2], 0x2f
0x00008195      0f854dffffff   jne 0x80e8
0x0000819b      4883e801       sub rax, 1
0x0000819f      4883f801       cmp rax, 1
0x000081a3      75eb           jne 0x8190
0x000081a5      e93effffff     jmp 0x80e8
0x000081aa      660f1f440000   nop word [rax + rax]
0x000081b0      4d85f6         test r14, r14
0x000081b3      7417           je 0x81cc
0x000081b5      4883fd01       cmp rbp, 1
0x000081b9      7611           jbe 0x81cc
0x000081bb      4c89e6         mov rsi, r12
0x000081be      4889ea         mov rdx, rbp
0x000081c1      4889df         mov rdi, rbx
0x000081c4      e847eaffff     call sym.fts_sort
0x000081c9      4989c4         mov r12, rax
0x000081cc      488d35ce3c00.  lea rsi, [0x0000bea1]
0x000081d3      31d2           xor edx, edx
0x000081d5      4889df         mov rdi, rbx
0x000081d8      e843ebffff     call sym.fts_alloc
0x000081dd      4885c0         test rax, rax
0x000081e0      488903         mov qword [rbx], rax
0x000081e3      0f8407010000   je 0x82f0
0x000081e9      8b7b48         mov edi, dword [rbx + 0x48]
0x000081ec      ba09000000     mov edx, 9
0x000081f1      488d7358       lea rsi, [rbx + 0x58]
0x000081f5      4c896010       mov qword [rax + 0x10], r12
0x000081f9      66895070       mov word [rax + 0x70], dx               ; ../coreutils-8.31/lib/fts.c:-901
0x000081fd      48c740580100.  mov qword [rax + 0x58], 1
0x00008205      e816efffff     call sym.setup_dir.isra.4
0x0000820a      84c0           test al, al
0x0000820c      0f84de000000   je 0x82f0                               ; ../coreutils-8.31/lib/fts.c:-707
0x00008212      8b7348         mov esi, dword [rbx + 0x48]
0x00008215      f7c604020000   test esi, 0x204
0x0000821b      7523           jne 0x8240                              ; ../coreutils-8.31/lib/fts.c:-697
0x0000821d      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00008220      488d15983200.  lea rdx, [0x0000b4bf]                   ; "."
0x00008227      e864efffff     call sym.diropen.isra.6
0x0000822c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fts.c:-694
0x0000822e      894328         mov dword [rbx + 0x28], eax
0x00008231      790d           jns 0x8240                              ; ../coreutils-8.31/lib/fts.c:-697
0x00008233      834b4804       or dword [rbx + 0x48], 4
0x00008237      660f1f840000.  nop word [rax + rax]
0x00008240      488d7b60       lea rdi, [rbx + 0x60]
0x00008244      beffffffff     mov esi, 0xffffffff                     ; ../coreutils-8.31/lib/fts.c:-695 ; -1
0x00008249      e8f2200000     call sym.i_ring_init
0x0000824e      4883c428       add rsp, 0x28
0x00008252      4889d8         mov rax, rbx
0x00008255      5b             pop rbx
0x00008256      5d             pop rbp
0x00008257      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-692
0x00008259      415d           pop r13
0x0000825b      415e           pop r14
0x0000825d      415f           pop r15
0x0000825f      c3             ret                                     ; ../coreutils-8.31/lib/fts.c:-688
0x00008260      498b7d00       mov rdi, qword [r13]
0x00008264      89e8           mov eax, ebp
0x00008266      c7432c9cffff.  mov dword [rbx + 0x2c], 0xffffff9c      ; [0xffffff9c:4]=-1 ; 4294967196
0x0000826d      80e4fd         and ah, 0xfd                            ; ../coreutils-8.31/lib/fts.c:-686
0x00008270      83c804         or eax, 4
0x00008273      4885ff         test rdi, rdi
0x00008276      894348         mov dword [rbx + 0x48], eax             ; ../coreutils-8.31/lib/fts.c:-685
0x00008279      0f859ffdffff   jne 0x801e
0x0000827f      ba00100000     mov edx, 0x1000                         ; ../coreutils-8.31/lib/fts.c:-683
0x00008284      e9ccfdffff     jmp 0x8055
0x00008289      0f1f80000000.  nop dword [rax]
0x00008290      31d2           xor edx, edx
0x00008292      4889ce         mov rsi, rcx                            ; ../coreutils-8.31/lib/fts.c:-705
0x00008295      4889df         mov rdi, rbx
0x00008298      48894c2408     mov qword [rsp + 8], rcx
0x0000829d      e89ee7ffff     call sym.fts_stat                       ; ../coreutils-8.31/lib/fts.c:-662
0x000082a2      488b4c2408     mov rcx, qword [rsp + 8]
0x000082a7      4d85f6         test r14, r14
0x000082aa      66894170       mov word [rcx + 0x70], ax
0x000082ae      0f8593feffff   jne 0x8147
0x000082b4      4d85e4         test r12, r12
0x000082b7      48c741100000.  mov qword [rcx + 0x10], 0
0x000082bf      7517           jne 0x82d8
0x000082c1      48894c2418     mov qword [rsp + 0x18], rcx
0x000082c6      4989cc         mov r12, rcx
0x000082c9      e980feffff     jmp 0x814e
0x000082ce      6690           nop
0x000082d0      48c741100000.  mov qword [rcx + 0x10], 0
0x000082d8      488b442418     mov rax, qword [rsp + 0x18]
0x000082dd      48894c2418     mov qword [rsp + 0x18], rcx
0x000082e2      48894810       mov qword [rax + 0x10], rcx
0x000082e6      e963feffff     jmp 0x814e
0x000082eb      0f1f440000     nop dword [rax + rax]
0x000082f0      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-674
0x000082f3      e8b8eaffff     call sym.fts_lfree
0x000082f8      4c89ff         mov rdi, r15
0x000082fb      e8a09affff     call sym..plt.got
0x00008300      488b7b20       mov rdi, qword [rbx + 0x20]
0x00008304      e8979affff     call sym..plt.got
0x00008309      4889df         mov rdi, rbx
0x0000830c      31db           xor ebx, ebx
0x0000830e      e88d9affff     call sym..plt.got
0x00008313      e936ffffff     jmp 0x824e
0x00008318      0f1f84000000.  nop dword [rax + rax]
0x00008320      4531ff         xor r15d, r15d
0x00008323      4d85f6         test r14, r14
0x00008326      0f8584fdffff   jne 0x80b0
0x0000832c      4531e4         xor r12d, r12d
0x0000832f      e998feffff     jmp 0x81cc
0x00008334      0f1f4000       nop dword [rax]
0x00008338      e86396ffff     call sym.imp.__errno_location
0x0000833d      31db           xor ebx, ebx
0x0000833f      c70016000000   mov dword [rax], 0x16                   ; ../coreutils-8.31/lib/fts.c:-692 ; [0x16:4]=0x23900000
0x00008345      e904ffffff     jmp 0x824e
0x0000834a      660f1f440000   nop word [rax + rax]
;-- rpl_fts_close:
0x00008350      4154           push r12
0x00008352      55             push rbp
0x00008353      4889fd         mov rbp, rdi
0x00008356      53             push rbx
0x00008357      488b3f         mov rdi, qword [rdi]
0x0000835a      4885ff         test rdi, rdi
0x0000835d      7444           je 0x83a3
0x0000835f      48837f5800     cmp qword [rdi + 0x58], 0
0x00008364      7919           jns 0x837f
0x00008366      e915010000     jmp 0x8480
0x0000836b      0f1f440000     nop dword [rax + rax]
0x00008370      e82b9affff     call sym..plt.got
0x00008375      48837b5800     cmp qword [rbx + 0x58], 0
0x0000837a      4889df         mov rdi, rbx
0x0000837d      781c           js 0x839b                               ; ../coreutils-8.31/lib/fts.c:-652
0x0000837f      488b5f10       mov rbx, qword [rdi + 0x10]
0x00008383      4885db         test rbx, rbx
0x00008386      75e8           jne 0x8370
0x00008388      488b5f08       mov rbx, qword [rdi + 8]
0x0000838c      e80f9affff     call sym..plt.got
0x00008391      48837b5800     cmp qword [rbx + 0x58], 0
0x00008396      4889df         mov rdi, rbx
0x00008399      79e4           jns 0x837f
0x0000839b      4889df         mov rdi, rbx
0x0000839e      e8fd99ffff     call sym..plt.got
0x000083a3      488b7d08       mov rdi, qword [rbp + 8]
0x000083a7      4885ff         test rdi, rdi
0x000083aa      7405           je 0x83b1
0x000083ac      e8ffe9ffff     call sym.fts_lfree
0x000083b1      488b7d10       mov rdi, qword [rbp + 0x10]
0x000083b5      e8e699ffff     call sym..plt.got
0x000083ba      488b7d20       mov rdi, qword [rbp + 0x20]
0x000083be      e8dd99ffff     call sym..plt.got
0x000083c3      8b4548         mov eax, dword [rbp + 0x48]
0x000083c6      f6c402         test ah, 2
0x000083c9      7465           je 0x8430
0x000083cb      8b7d2c         mov edi, dword [rbp + 0x2c]
0x000083ce      85ff           test edi, edi
0x000083d0      0f898a000000   jns 0x8460
0x000083d6      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/fts.c:-398
0x000083d8      488d7d60       lea rdi, [rbp + 0x60]
0x000083dc      e81feaffff     call sym.fd_ring_clear
0x000083e1      488b7d50       mov rdi, qword [rbp + 0x50]
0x000083e5      4885ff         test rdi, rdi
0x000083e8      7405           je 0x83ef
0x000083ea      e831170000     call sym.hash_free
0x000083ef      f74548020100.  test dword [rbp + 0x48], 0x102          ; ../coreutils-8.31/lib/fts.c:-413
0x000083f6      488b7d58       mov rdi, qword [rbp + 0x58]
0x000083fa      7424           je 0x8420
0x000083fc      4885ff         test rdi, rdi
0x000083ff      7405           je 0x8406
0x00008401      e81a170000     call sym.hash_free
0x00008406      4889ef         mov rdi, rbp
0x00008409      e89299ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/fts.c:-455
0x0000840e      85db           test ebx, ebx
0x00008410      0f85ab000000   jne 0x84c1
0x00008416      89d8           mov eax, ebx
0x00008418      5b             pop rbx
0x00008419      5d             pop rbp
0x0000841a      415c           pop r12
0x0000841c      c3             ret
0x0000841d      0f1f00         nop dword [rax]
0x00008420      e87b99ffff     call sym..plt.got
0x00008425      ebdf           jmp 0x8406
0x00008427      660f1f840000.  nop word [rax + rax]
0x00008430      a804           test al, 4
0x00008432      75a2           jne 0x83d6
0x00008434      8b7d28         mov edi, dword [rbp + 0x28]
0x00008437      e83498ffff     call sym.imp.fchdir                     ; ../coreutils-8.31/lib/fts.c:-449
0x0000843c      85c0           test eax, eax
0x0000843e      7550           jne 0x8490
0x00008440      8b7d28         mov edi, dword [rbp + 0x28]
0x00008443      e80897ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fts.c:-448
0x00008448      85c0           test eax, eax
0x0000844a      748a           je 0x83d6
0x0000844c      e84f95ffff     call sym.imp.__errno_location
0x00008451      4989c4         mov r12, rax
0x00008454      eb62           jmp 0x84b8
0x00008456      662e0f1f8400.  nop word cs:[rax + rax]
0x00008460      e8eb96ffff     call sym.imp.close
0x00008465      85c0           test eax, eax
0x00008467      0f8469ffffff   je 0x83d6
0x0000846d      e82e95ffff     call sym.imp.__errno_location
0x00008472      8b18           mov ebx, dword [rax]
0x00008474      e95fffffff     jmp 0x83d8
0x00008479      0f1f80000000.  nop dword [rax]
0x00008480      4889fb         mov rbx, rdi
0x00008483      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fts.c:-429
0x00008486      e81599ffff     call sym..plt.got
0x0000848b      e913ffffff     jmp 0x83a3
0x00008490      e80b95ffff     call sym.imp.__errno_location
0x00008495      8b7d28         mov edi, dword [rbp + 0x28]             ; ../coreutils-8.31/lib/fts.c:-664
0x00008498      4989c4         mov r12, rax                            ; ../coreutils-8.31/lib/fts.c:-665
0x0000849b      8b18           mov ebx, dword [rax]
0x0000849d      e8ae96ffff     call sym.imp.close
0x000084a2      85c0           test eax, eax
0x000084a4      0f842effffff   je 0x83d8
0x000084aa      85db           test ebx, ebx
0x000084ac      0f8526ffffff   jne 0x83d8
0x000084b2      660f1f440000   nop word [rax + rax]
0x000084b8      418b1c24       mov ebx, dword [r12]
0x000084bc      e917ffffff     jmp 0x83d8
0x000084c1      e8da94ffff     call sym.imp.__errno_location
0x000084c6      8918           mov dword [rax], ebx
0x000084c8      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x000084cd      e944ffffff     jmp 0x8416
0x000084d2      0f1f4000       nop dword [rax]
0x000084d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- rpl_fts_read:
0x000084e0      4156           push r14
0x000084e2      4155           push r13                                ; ../coreutils-8.31/lib/fts.c:-640
0x000084e4      4154           push r12
0x000084e6      55             push rbp
0x000084e7      53             push rbx                                ; ../coreutils-8.31/lib/fts.c:-641
0x000084e8      488b2f         mov rbp, qword [rdi]
0x000084eb      4885ed         test rbp, rbp
0x000084ee      0f840a010000   je 0x85fe
0x000084f4      8b5748         mov edx, dword [rdi + 0x48]
0x000084f7      f6c620         test dh, 0x20                           ; ../coreutils-8.31/lib/fts.c:-640 ; "@"
0x000084fa      0f85fe000000   jne 0x85fe
0x00008500      0fb74574       movzx eax, word [rbp + 0x74]
0x00008504      bb03000000     mov ebx, 3
0x00008509      4989fc         mov r12, rdi
0x0000850c      66895d74       mov word [rbp + 0x74], bx
0x00008510      6683f801       cmp ax, 1
0x00008514      0f8446020000   je 0x8760
0x0000851a      6683f802       cmp ax, 2
0x0000851e      0fb74d70       movzx ecx, word [rbp + 0x70]
0x00008522      0f84e8000000   je 0x8610                               ; ../coreutils-8.31/lib/fts.c:-662
0x00008528      6683f901       cmp cx, 1
0x0000852c      7532           jne 0x8560
0x0000852e      e91d020000     jmp 0x8750
0x00008533      0f1f440000     nop dword [rax + rax]
0x00008538      49891c24       mov qword [r12], rbx                    ; ../coreutils-8.31/lib/fts.c:-525
0x0000853c      4889ef         mov rdi, rbp
0x0000853f      e85c98ffff     call sym..plt.got
0x00008544      48837b5800     cmp qword [rbx + 0x58], 0
0x00008549      0f8431020000   je 0x8780
0x0000854f      0fb74374       movzx eax, word [rbx + 0x74]
0x00008553      4889dd         mov rbp, rbx
0x00008556      6683f804       cmp ax, 4
0x0000855a      0f8528030000   jne 0x8888
0x00008560      488b5d10       mov rbx, qword [rbp + 0x10]
0x00008564      4885db         test rbx, rbx
0x00008567      75cf           jne 0x8538
0x00008569      488b5d08       mov rbx, qword [rbp + 8]
0x0000856d      48837b1800     cmp qword [rbx + 0x18], 0
0x00008572      0f8568050000   jne 0x8ae0
0x00008578      49891c24       mov qword [r12], rbx
0x0000857c      4889ef         mov rdi, rbp
0x0000857f      e81c98ffff     call sym..plt.got
0x00008584      48837b58ff     cmp qword [rbx + 0x58], 0xffffffffffffffff
0x00008589      0f84b3040000   je 0x8a42
0x0000858f      66837b700b     cmp word [rbx + 0x70], 0xb
0x00008594      0f8435010000   je 0x86cf
0x0000859a      498b542420     mov rdx, qword [r12 + 0x20]
0x0000859f      488b4348       mov rax, qword [rbx + 0x48]             ; ../coreutils-8.31/lib/fts.c:-613
0x000085a3      c6040200       mov byte [rdx + rax], 0
0x000085a7      48837b5800     cmp qword [rbx + 0x58], 0
0x000085ac      0f84be030000   je 0x8970
0x000085b2      0fb74372       movzx eax, word [rbx + 0x72]
0x000085b6      a802           test al, 2
0x000085b8      0f846a030000   je 0x8928
0x000085be      418b442448     mov eax, dword [r12 + 0x48]
0x000085c3      8b7b44         mov edi, dword [rbx + 0x44]
0x000085c6      a804           test al, 4
0x000085c8      0f84fe030000   je 0x89cc
0x000085ce      e87d95ffff     call sym.imp.close
0x000085d3      418b7c2448     mov edi, dword [r12 + 0x48]
0x000085d8      66837b7002     cmp word [rbx + 0x70], 2
0x000085dd      7414           je 0x85f3
0x000085df      8b4b40         mov ecx, dword [rbx + 0x40]
0x000085e2      85c9           test ecx, ecx
0x000085e4      0f849e030000   je 0x8988
0x000085ea      ba07000000     mov edx, 7
0x000085ef      66895370       mov word [rbx + 0x70], dx
0x000085f3      81e700200000   and edi, 0x2000                         ; ../coreutils-8.31/lib/fts.c:-428
0x000085f9      4889dd         mov rbp, rbx
0x000085fc      747c           je 0x867a
0x000085fe      31ed           xor ebp, ebp
0x00008600      5b             pop rbx
0x00008601      4889e8         mov rax, rbp
0x00008604      5d             pop rbp
0x00008605      415c           pop r12                                 ; ../coreutils-8.31/lib/fts.c:-559
0x00008607      415d           pop r13
0x00008609      415e           pop r14
0x0000860b      c3             ret
0x0000860c      0f1f4000       nop dword [rax]
0x00008610      8d41f4         lea eax, [rcx - 0xc]
0x00008613      6683f801       cmp ax, 1
0x00008617      7677           jbe 0x8690
0x00008619      6683f901       cmp cx, 1
0x0000861d      0f853dffffff   jne 0x8560
0x00008623      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/fts-cycle.c:-1395 ; segment.PHDR
0x00008626      0f84ac000000   je 0x86d8
0x0000862c      498b442418     mov rax, qword [r12 + 0x18]
0x00008631      48394578       cmp qword [rbp + 0x78], rax
0x00008635      0f849d000000   je 0x86d8
0x0000863b      f6457202       test byte [rbp + 0x72], 2
0x0000863f      0f85db040000   jne 0x8b20
0x00008645      498b7c2408     mov rdi, qword [r12 + 8]
0x0000864a      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fts.c:-985
0x0000864d      740e           je 0x865d
0x0000864f      e85ce7ffff     call sym.fts_lfree
0x00008654      49c744240800.  mov qword [r12 + 8], 0
0x0000865d      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008662      41ba06000000   mov r10d, 6
0x00008668      498d742458     lea rsi, [r12 + 0x58]
0x0000866d      6644895570     mov word [rbp + 0x70], r10w
0x00008672      4889ea         mov rdx, rbp
0x00008675      e886eeffff     call sym.leave_dir.isra.12
0x0000867a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fts.c:-982
0x0000867b      4889e8         mov rax, rbp
0x0000867e      5d             pop rbp                                 ; ../coreutils-8.31/lib/fts.c:-983
0x0000867f      415c           pop r12
0x00008681      415d           pop r13                                 ; string_fortified.h:-1508
0x00008683      415e           pop r14
0x00008685      c3             ret
0x00008686      662e0f1f8400.  nop word cs:[rax + rax]
0x00008690      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/fts.c:-979
0x00008695      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fts.c:-553
0x00008698      e8a3e3ffff     call sym.fts_stat
0x0000869d      6683f801       cmp ax, 1
0x000086a1      66894570       mov word [rbp + 0x70], ax
0x000086a5      0f8441030000   je 0x89ec
0x000086ab      6683f80b       cmp ax, 0xb
0x000086af      49892c24       mov qword [r12], rbp
0x000086b3      75c5           jne 0x867a                              ; ../coreutils-8.31/lib/fts.c:-525
0x000086b5      0f1f00         nop dword [rax]
0x000086b8      488b85a80000.  mov rax, qword [rbp + 0xa8]
0x000086bf      4883f802       cmp rax, 2
0x000086c3      0f849f030000   je 0x8a68
0x000086c9      4883f801       cmp rax, 1
0x000086cd      74ab           je 0x867a
0x000086cf      e8bc92ffff     call sym.imp.abort
0x000086d4      0f1f4000       nop dword [rax]
0x000086d8      498b7c2408     mov rdi, qword [r12 + 8]
0x000086dd      4885ff         test rdi, rdi
0x000086e0      0f8412020000   je 0x88f8
0x000086e6      f6c610         test dh, 0x10
0x000086e9      0f85f3010000   jne 0x88e2
0x000086ef      488b4d30       mov rcx, qword [rbp + 0x30]
0x000086f3      baffffffff     mov edx, 0xffffffff                     ; -1
0x000086f8      4889ee         mov rsi, rbp
0x000086fb      4c89e7         mov rdi, r12
0x000086fe      e8cdeaffff     call sym.fts_safe_changedir
0x00008703      85c0           test eax, eax
0x00008705      0f84b7020000   je 0x89c2
0x0000870b      e89092ffff     call sym.imp.__errno_location
0x00008710      8b00           mov eax, dword [rax]
0x00008712      66834d7201     or word [rbp + 0x72], 1
0x00008717      894540         mov dword [rbp + 0x40], eax             ; ../coreutils-8.31/lib/fts.c:-530
0x0000871a      498b6c2408     mov rbp, qword [r12 + 8]
0x0000871f      4885ed         test rbp, rbp
0x00008722      0f84ee010000   je 0x8916
0x00008728      4889e8         mov rax, rbp
0x0000872b      0f1f440000     nop dword [rax + rax]
0x00008730      488b5008       mov rdx, qword [rax + 8]
0x00008734      488b5230       mov rdx, qword [rdx + 0x30]
0x00008738      48895030       mov qword [rax + 0x30], rdx
0x0000873c      488b4010       mov rax, qword [rax + 0x10]             ; ../coreutils-8.31/lib/fts.c:-529
0x00008740      4885c0         test rax, rax
0x00008743      75eb           jne 0x8730
0x00008745      e9cc010000     jmp 0x8916
0x0000874a      660f1f440000   nop word [rax + rax]
0x00008750      6683f804       cmp ax, 4
0x00008754      0f85c9feffff   jne 0x8623
0x0000875a      e9dcfeffff     jmp 0x863b
0x0000875f      90             nop
0x00008760      4889ee         mov rsi, rbp
0x00008763      31d2           xor edx, edx
0x00008765      e8d6e2ffff     call sym.fts_stat
0x0000876a      66894570       mov word [rbp + 0x70], ax
0x0000876e      4889e8         mov rax, rbp
0x00008771      5b             pop rbx
0x00008772      5d             pop rbp
0x00008773      415c           pop r12
0x00008775      415d           pop r13
0x00008777      415e           pop r14
0x00008779      c3             ret
0x0000877a      660f1f440000   nop word [rax + rax]
0x00008780      4c89e7         mov rdi, r12
0x00008783      e8c8e8ffff     call sym.restore_initial_cwd
0x00008788      85c0           test eax, eax
0x0000878a      0f8501040000   jne 0x8b91
0x00008790      41f744244802.  test dword [r12 + 0x48], 0x102
0x00008799      498b7c2458     mov rdi, qword [r12 + 0x58]
0x0000879e      0f8434010000   je 0x88d8
0x000087a4      4885ff         test rdi, rdi
0x000087a7      7405           je 0x87ae
0x000087a9      e872130000     call sym.hash_free
0x000087ae      488b5360       mov rdx, qword [rbx + 0x60]
0x000087b2      488dab080100.  lea rbp, [rbx + 0x108]
0x000087b9      498b7c2420     mov rdi, qword [r12 + 0x20]
0x000087be      4889ee         mov rsi, rbp
0x000087c1      48895348       mov qword [rbx + 0x48], rdx
0x000087c5      4883c201       add rdx, 1
0x000087c9      e8f294ffff     call sym.imp.memmove
0x000087ce      be2f000000     mov esi, 0x2f                           ; '/'
0x000087d3      4889ef         mov rdi, rbp
0x000087d6      e82593ffff     call sym.imp.strrchr
0x000087db      4885c0         test rax, rax
0x000087de      742b           je 0x880b
0x000087e0      4839c5         cmp rbp, rax
0x000087e3      0f84c7010000   je 0x89b0                               ; ../coreutils-8.31/lib/fts.c:-581
0x000087e9      4c8d6801       lea r13, [rax + 1]
0x000087ed      4c89ef         mov rdi, r13
0x000087f0      e88b92ffff     call sym.imp.strlen
0x000087f5      488d5001       lea rdx, [rax + 1]
0x000087f9      4989c6         mov r14, rax
0x000087fc      4c89ee         mov rsi, r13
0x000087ff      4889ef         mov rdi, rbp
0x00008802      e8b994ffff     call sym.imp.memmove
0x00008807      4c897360       mov qword [rbx + 0x60], r14
0x0000880b      498b442420     mov rax, qword [r12 + 0x20]
0x00008810      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008815      498d742458     lea rsi, [r12 + 0x58]
0x0000881a      4889dd         mov rbp, rbx
0x0000881d      48894338       mov qword [rbx + 0x38], rax
0x00008821      48894330       mov qword [rbx + 0x30], rax
0x00008825      e8f6e8ffff     call sym.setup_dir.isra.4
0x0000882a      0fb74370       movzx eax, word [rbx + 0x70]
0x0000882e      6683f80b       cmp ax, 0xb
0x00008832      49892c24       mov qword [r12], rbp
0x00008836      0f847cfeffff   je 0x86b8
0x0000883c      6683f801       cmp ax, 1
0x00008840      0f8534feffff   jne 0x867a
0x00008846      48837d5800     cmp qword [rbp + 0x58], 0
0x0000884b      7509           jne 0x8856
0x0000884d      488b4578       mov rax, qword [rbp + 0x78]
0x00008851      4989442418     mov qword [r12 + 0x18], rax
0x00008856      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000885b      498d742458     lea rsi, [r12 + 0x58]
0x00008860      4889ea         mov rdx, rbp
0x00008863      e8e8ebffff     call sym.enter_dir.isra.10
0x00008868      84c0           test al, al
0x0000886a      0f850afeffff   jne 0x867a
0x00008870      e82b91ffff     call sym.imp.__errno_location
0x00008875      31ed           xor ebp, ebp
0x00008877      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/fts.c:-735 ; [0xc:4]=0
0x0000887d      e9f8fdffff     jmp 0x867a
0x00008882      660f1f440000   nop word [rax + rax]
0x00008888      6683f802       cmp ax, 2                               ; ../coreutils-8.31/lib/fts.c:-730
0x0000888c      0f849b020000   je 0x8b2d
0x00008892      488b4508       mov rax, qword [rbp + 8]
0x00008896      488db5080100.  lea rsi, [rbp + 0x108]
0x0000889d      488b7848       mov rdi, qword [rax + 0x48]
0x000088a1      488b4038       mov rax, qword [rax + 0x38]
0x000088a5      807c38ff2f     cmp byte [rax + rdi - 1], 0x2f
0x000088aa      488d57ff       lea rdx, [rdi - 1]
0x000088ae      480f44fa       cmove rdi, rdx
0x000088b2      49037c2420     add rdi, qword [r12 + 0x20]
0x000088b7      c6072f         mov byte [rdi], 0x2f                    ; '/'
                                                                       ; [0x2f:1]=0
0x000088ba      488b4560       mov rax, qword [rbp + 0x60]             ; ../coreutils-8.31/lib/fts.c:-598
0x000088be      4883c701       add rdi, 1
0x000088c2      488d5001       lea rdx, [rax + 1]
0x000088c6      e8f593ffff     call sym.imp.memmove
0x000088cb      0fb74570       movzx eax, word [rbp + 0x70]
0x000088cf      e95affffff     jmp 0x882e
0x000088d4      0f1f4000       nop dword [rax]
0x000088d8      e8c394ffff     call sym..plt.got
0x000088dd      e9ccfeffff     jmp 0x87ae
0x000088e2      80e6ef         and dh, 0xef
0x000088e5      4189542448     mov dword [r12 + 0x48], edx
0x000088ea      e8c1e4ffff     call sym.fts_lfree
0x000088ef      49c744240800.  mov qword [r12 + 8], 0
0x000088f8      be03000000     mov esi, 3
0x000088fd      4c89e7         mov rdi, r12
0x00008900      e8bbecffff     call sym.fts_build
0x00008905      4885c0         test rax, rax
0x00008908      4989442408     mov qword [r12 + 8], rax
0x0000890d      0f84f1000000   je 0x8a04
0x00008913      4889c5         mov rbp, rax
0x00008916      49c744240800.  mov qword [r12 + 8], 0
0x0000891f      e96effffff     jmp 0x8892
0x00008924      0f1f4000       nop dword [rax]
0x00008928      a801           test al, 1
0x0000892a      0f85a3fcffff   jne 0x85d3
0x00008930      488b7308       mov rsi, qword [rbx + 8]
0x00008934      488d0d832b00.  lea rcx, [0x0000b4be]                   ; ".."
0x0000893b      baffffffff     mov edx, 0xffffffff                     ; -1
0x00008940      4c89e7         mov rdi, r12
0x00008943      e888e8ffff     call sym.fts_safe_changedir
0x00008948      85c0           test eax, eax
0x0000894a      0f8483fcffff   je 0x85d3
0x00008950      e84b90ffff     call sym.imp.__errno_location
0x00008955      418b7c2448     mov edi, dword [r12 + 0x48]
0x0000895a      8b00           mov eax, dword [rax]
0x0000895c      81cf00200000   or edi, 0x2000                          ; ../coreutils-8.31/lib/fts.c:-708
0x00008962      894340         mov dword [rbx + 0x40], eax
0x00008965      41897c2448     mov dword [r12 + 0x48], edi
0x0000896a      e969fcffff     jmp 0x85d8
0x0000896f      90             nop
0x00008970      4c89e7         mov rdi, r12
0x00008973      e8d8e6ffff     call sym.restore_initial_cwd
0x00008978      85c0           test eax, eax
0x0000897a      75d4           jne 0x8950
0x0000897c      e952fcffff     jmp 0x85d3                              ; ../coreutils-8.31/lib/fts.c:-700
0x00008981      0f1f80000000.  nop dword [rax]
0x00008988      b806000000     mov eax, 6
0x0000898d      498d742458     lea rsi, [r12 + 0x58]
0x00008992      4889da         mov rdx, rbx
0x00008995      66894370       mov word [rbx + 0x70], ax               ; ../coreutils-8.31/lib/fts.c:-790
0x00008999      e862ebffff     call sym.leave_dir.isra.12
0x0000899e      418b7c2448     mov edi, dword [r12 + 0x48]
0x000089a3      e94bfcffff     jmp 0x85f3
0x000089a8      0f1f84000000.  nop dword [rax + rax]
0x000089b0      80bb09010000.  cmp byte [rbx + 0x109], 0
0x000089b7      0f852cfeffff   jne 0x87e9
0x000089bd      e949feffff     jmp 0x880b
0x000089c2      498b6c2408     mov rbp, qword [r12 + 8]
0x000089c7      e94affffff     jmp 0x8916
0x000089cc      f6c402         test ah, 2
0x000089cf      0f8498010000   je 0x8b6d
0x000089d5      89fe           mov esi, edi
0x000089d7      ba01000000     mov edx, 1
0x000089dc      4c89e7         mov rdi, r12
0x000089df      e8fce5ffff     call sym.cwd_advance_fd                 ; ../coreutils-8.31/lib/fts.c:-815
0x000089e4      8b7b44         mov edi, dword [rbx + 0x44]
0x000089e7      e9e2fbffff     jmp 0x85ce
0x000089ec      418b742448     mov esi, dword [r12 + 0x48]
0x000089f1      40f6c604       test sil, 4
0x000089f5      0f8401020000   je 0x8bfc
0x000089fb      49892c24       mov qword [r12], rbp
0x000089ff      e942feffff     jmp 0x8846
0x00008a04      418b7c2448     mov edi, dword [r12 + 0x48]
0x00008a09      f7c700200000   test edi, 0x2000
0x00008a0f      0f85e9fbffff   jne 0x85fe
0x00008a15      448b4d40       mov r9d, dword [rbp + 0x40]
0x00008a19      4585c9         test r9d, r9d
0x00008a1c      7412           je 0x8a30                               ; ../coreutils-8.31/lib/fts.c:-755
0x00008a1e      66837d7004     cmp word [rbp + 0x70], 4
0x00008a23      740b           je 0x8a30
0x00008a25      41b807000000   mov r8d, 7
0x00008a2b      6644894570     mov word [rbp + 0x70], r8w              ; ../coreutils-8.31/lib/fts.c:-774
0x00008a30      498d742458     lea rsi, [r12 + 0x58]
0x00008a35      4889ea         mov rdx, rbp
0x00008a38      e8c3eaffff     call sym.leave_dir.isra.12
0x00008a3d      e938fcffff     jmp 0x867a
0x00008a42      4889df         mov rdi, rbx
0x00008a45      31ed           xor ebp, ebp
0x00008a47      e85493ffff     call sym..plt.got
0x00008a4c      e84f8fffff     call sym.imp.__errno_location
0x00008a51      c70000000000   mov dword [rax], 0
0x00008a57      49c704240000.  mov qword [r12], 0
0x00008a5f      e916fcffff     jmp 0x867a
0x00008a64      0f1f4000       nop dword [rax]
0x00008a68      488b5d08       mov rbx, qword [rbp + 8]
0x00008a6c      48837b6800     cmp qword [rbx + 0x68], 0
0x00008a71      7511           jne 0x8a84
0x00008a73      418b442448     mov eax, dword [r12 + 0x48]
0x00008a78      83e018         and eax, 0x18
0x00008a7b      83f818         cmp eax, 0x18
0x00008a7e      0f8459010000   je 0x8bdd
0x00008a84      31d2           xor edx, edx
0x00008a86      4889ee         mov rsi, rbp
0x00008a89      4c89e7         mov rdi, r12
0x00008a8c      e8afdfffff     call sym.fts_stat
0x00008a91      8b9590000000   mov edx, dword [rbp + 0x90]
0x00008a97      66894570       mov word [rbp + 0x70], ax
0x00008a9b      81e200f00000   and edx, 0xf000
0x00008aa1      81fa00400000   cmp edx, 0x4000                         ; "H\x8d5\x13y"
0x00008aa7      0f858ffdffff   jne 0x883c
0x00008aad      48837d5800     cmp qword [rbp + 0x58], 0               ; ../coreutils-8.31/lib/fts.c:-805
0x00008ab2      0f8416010000   je 0x8bce
0x00008ab8      488b4b68       mov rcx, qword [rbx + 0x68]             ; ../coreutils-8.31/lib/fts.c:-804
0x00008abc      488d51ff       lea rdx, [rcx - 1]
0x00008ac0      4883fafd       cmp rdx, 0xfffffffffffffffd
0x00008ac4      7704           ja 0x8aca
0x00008ac6      48895368       mov qword [rbx + 0x68], rdx
0x00008aca      6683f801       cmp ax, 1
0x00008ace      0f85a6fbffff   jne 0x867a
0x00008ad4      e97dfdffff     jmp 0x8856                              ; ../coreutils-8.31/lib/fts.c:-796
0x00008ad9      0f1f80000000.  nop dword [rax]
0x00008ae0      488b4348       mov rax, qword [rbx + 0x48]
0x00008ae4      498b542420     mov rdx, qword [r12 + 0x20]
0x00008ae9      be03000000     mov esi, 3
0x00008aee      49891c24       mov qword [r12], rbx
0x00008af2      4c89e7         mov rdi, r12
0x00008af5      c6040200       mov byte [rdx + rax], 0                 ; ../coreutils-8.31/lib/fts.c:-777
0x00008af9      e8c2eaffff     call sym.fts_build
0x00008afe      4885c0         test rax, rax
0x00008b01      4889c3         mov rbx, rax
0x00008b04      7452           je 0x8b58
0x00008b06      4889ef         mov rdi, rbp
0x00008b09      4889dd         mov rbp, rbx
0x00008b0c      e88f92ffff     call sym..plt.got
0x00008b11      e97cfdffff     jmp 0x8892
0x00008b16      662e0f1f8400.  nop word cs:[rax + rax]
0x00008b20      8b7d44         mov edi, dword [rbp + 0x44]             ; ../coreutils-8.31/lib/fts.c:-754
0x00008b23      e82890ffff     call sym.imp.close
0x00008b28      e918fbffff     jmp 0x8645                              ; ../coreutils-8.31/lib/fts.c:-757
0x00008b2d      ba01000000     mov edx, 1
0x00008b32      4889de         mov rsi, rbx
0x00008b35      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/fts.c:-745
0x00008b38      e803dfffff     call sym.fts_stat
0x00008b3d      6683f801       cmp ax, 1
0x00008b41      66894370       mov word [rbx + 0x70], ax
0x00008b45      745a           je 0x8ba1                               ; ../coreutils-8.31/lib/fts.c:-744
0x00008b47      be03000000     mov esi, 3
0x00008b4c      4889dd         mov rbp, rbx
0x00008b4f      66897374       mov word [rbx + 0x74], si
0x00008b53      e93afdffff     jmp 0x8892
0x00008b58      41f644244920   test byte [r12 + 0x49], 0x20
0x00008b5e      0f859afaffff   jne 0x85fe
0x00008b64      488b5d08       mov rbx, qword [rbp + 8]
0x00008b68      e90bfaffff     jmp 0x8578
0x00008b6d      e8fe90ffff     call sym.imp.fchdir
0x00008b72      85c0           test eax, eax
0x00008b74      7413           je 0x8b89
0x00008b76      e8258effff     call sym.imp.__errno_location
0x00008b7b      8b00           mov eax, dword [rax]
0x00008b7d      894340         mov dword [rbx + 0x40], eax
0x00008b80      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x1a2444c6
0x00008b89      8b7b44         mov edi, dword [rbx + 0x44]             ; ../coreutils-8.31/lib/fts.c:-741
0x00008b8c      e93dfaffff     jmp 0x85ce
0x00008b91      41814c244800.  or dword [r12 + 0x48], 0x2000           ; [0x2000:4]=0x1a2444c6
0x00008b9a      31ed           xor ebp, ebp
0x00008b9c      e9d9faffff     jmp 0x867a
0x00008ba1      418b742448     mov esi, dword [r12 + 0x48]
0x00008ba6      40f6c604       test sil, 4
0x00008baa      759b           jne 0x8b47
0x00008bac      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008bb1      488d15072900.  lea rdx, [0x0000b4bf]                   ; ../coreutils-8.31/lib/fts.c:-738 ; "."
0x00008bb8      e8d3e5ffff     call sym.diropen.isra.6
0x00008bbd      85c0           test eax, eax
0x00008bbf      894344         mov dword [rbx + 0x44], eax
0x00008bc2      787c           js 0x8c40
0x00008bc4      66834b7202     or word [rbx + 0x72], 2
0x00008bc9      e979ffffff     jmp 0x8b47
0x00008bce      6683f801       cmp ax, 1
0x00008bd2      0f85a2faffff   jne 0x867a
0x00008bd8      e970fcffff     jmp 0x884d
0x00008bdd      418b74242c     mov esi, dword [r12 + 0x2c]
0x00008be2      4889df         mov rdi, rbx
0x00008be5      e886e3ffff     call sym.leaf_optimization
0x00008bea      83f802         cmp eax, 2
0x00008bed      0f8591feffff   jne 0x8a84
0x00008bf3      0fb74570       movzx eax, word [rbp + 0x70]
0x00008bf7      e940fcffff     jmp 0x883c
0x00008bfc      418b7c242c     mov edi, dword [r12 + 0x2c]
0x00008c01      488d15b72800.  lea rdx, [0x0000b4bf]                   ; ../coreutils-8.31/lib/fts.c:-730 ; "."
0x00008c08      e883e5ffff     call sym.diropen.isra.6
0x00008c0d      85c0           test eax, eax
0x00008c0f      894544         mov dword [rbp + 0x44], eax
0x00008c12      780e           js 0x8c22                               ; ../coreutils-8.31/lib/fts.c:-727
0x00008c14      66834d7202     or word [rbp + 0x72], 2
0x00008c19      0fb74570       movzx eax, word [rbp + 0x70]
0x00008c1d      e90cfcffff     jmp 0x882e
0x00008c22      e8798dffff     call sym.imp.__errno_location
0x00008c27      8b00           mov eax, dword [rax]
0x00008c29      41bb07000000   mov r11d, 7
0x00008c2f      6644895d70     mov word [rbp + 0x70], r11w
0x00008c34      894540         mov dword [rbp + 0x40], eax
0x00008c37      49892c24       mov qword [r12], rbp
0x00008c3b      e93afaffff     jmp 0x867a
0x00008c40      e85b8dffff     call sym.imp.__errno_location
0x00008c45      8b00           mov eax, dword [rax]
0x00008c47      bf07000000     mov edi, 7
0x00008c4c      66897b70       mov word [rbx + 0x70], di
0x00008c50      894340         mov dword [rbx + 0x40], eax
0x00008c53      e9effeffff     jmp 0x8b47
0x00008c58      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fts_set:
0x00008c60      83fa04         cmp edx, 4
0x00008c63      770b           ja 0x8c70
0x00008c65      66895674       mov word [rsi + 0x74], dx
0x00008c69      31c0           xor eax, eax
0x00008c6b      c3             ret
0x00008c6c      0f1f4000       nop dword [rax]
0x00008c70      4883ec08       sub rsp, 8
0x00008c74      e8278dffff     call sym.imp.__errno_location
0x00008c79      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x23900000
0x00008c7f      b801000000     mov eax, 1
0x00008c84      4883c408       add rsp, 8
0x00008c88      c3             ret
0x00008c89      0f1f80000000.  nop dword [rax]
;-- rpl_fts_children:
0x00008c90      4156           push r14
0x00008c92      4155           push r13
0x00008c94      4154           push r12
0x00008c96      55             push rbp
0x00008c97      4189f4         mov r12d, esi
0x00008c9a      53             push rbx
0x00008c9b      4889fb         mov rbx, rdi
0x00008c9e      e8fd8cffff     call sym.imp.__errno_location
0x00008ca3      41f7c4ffefff.  test r12d, 0xffffefff
0x00008caa      4989c5         mov r13, rax
0x00008cad      0f85e5000000   jne 0x8d98
0x00008cb3      488b2b         mov rbp, qword [rbx]
0x00008cb6      c70000000000   mov dword [rax], 0
0x00008cbc      f6434920       test byte [rbx + 0x49], 0x20
0x00008cc0      757e           jne 0x8d40
0x00008cc2      0fb74570       movzx eax, word [rbp + 0x70]
0x00008cc6      6683f809       cmp ax, 9
0x00008cca      7464           je 0x8d30
0x00008ccc      6683f801       cmp ax, 1
0x00008cd0      756e           jne 0x8d40
0x00008cd2      488b7b08       mov rdi, qword [rbx + 8]
0x00008cd6      4885ff         test rdi, rdi
0x00008cd9      7405           je 0x8ce0
0x00008cdb      e8d0e0ffff     call sym.fts_lfree
0x00008ce0      4181fc001000.  cmp r12d, 0x1000
0x00008ce7      41be01000000   mov r14d, 1
0x00008ced      750d           jne 0x8cfc
0x00008cef      814b48001000.  or dword [rbx + 0x48], 0x1000           ; [0x1000:4]=0x20ea60
0x00008cf6      41be02000000   mov r14d, 2
0x00008cfc      48837d5800     cmp qword [rbp + 0x58], 0
0x00008d01      7512           jne 0x8d15
0x00008d03      488b4530       mov rax, qword [rbp + 0x30]
0x00008d07      80382f         cmp byte [rax], 0x2f
0x00008d0a      7409           je 0x8d15
0x00008d0c      8b7348         mov esi, dword [rbx + 0x48]
0x00008d0f      40f6c604       test sil, 4
0x00008d13      743b           je 0x8d50
0x00008d15      4489f6         mov esi, r14d
0x00008d18      4889df         mov rdi, rbx
0x00008d1b      e8a0e8ffff     call sym.fts_build
0x00008d20      48894308       mov qword [rbx + 8], rax
0x00008d24      5b             pop rbx
0x00008d25      5d             pop rbp
0x00008d26      415c           pop r12
0x00008d28      415d           pop r13
0x00008d2a      415e           pop r14
0x00008d2c      c3             ret
0x00008d2d      0f1f00         nop dword [rax]
0x00008d30      5b             pop rbx
0x00008d31      488b4510       mov rax, qword [rbp + 0x10]
0x00008d35      5d             pop rbp
0x00008d36      415c           pop r12
0x00008d38      415d           pop r13
0x00008d3a      415e           pop r14
0x00008d3c      c3             ret
0x00008d3d      0f1f00         nop dword [rax]
0x00008d40      5b             pop rbx
0x00008d41      31c0           xor eax, eax
0x00008d43      5d             pop rbp
0x00008d44      415c           pop r12
0x00008d46      415d           pop r13
0x00008d48      415e           pop r14
0x00008d4a      c3             ret
0x00008d4b      0f1f440000     nop dword [rax + rax]
0x00008d50      8b7b2c         mov edi, dword [rbx + 0x2c]
0x00008d53      488d15652700.  lea rdx, [0x0000b4bf]                   ; "."
0x00008d5a      e831e4ffff     call sym.diropen.isra.6
0x00008d5f      85c0           test eax, eax
0x00008d61      89c5           mov ebp, eax
0x00008d63      7854           js 0x8db9
0x00008d65      4489f6         mov esi, r14d
0x00008d68      4889df         mov rdi, rbx
0x00008d6b      e850e8ffff     call sym.fts_build
0x00008d70      f6434902       test byte [rbx + 0x49], 2
0x00008d74      48894308       mov qword [rbx + 8], rax
0x00008d78      752e           jne 0x8da8
0x00008d7a      89ef           mov edi, ebp
0x00008d7c      e8ef8effff     call sym.imp.fchdir
0x00008d81      85c0           test eax, eax
0x00008d83      7543           jne 0x8dc8
0x00008d85      89ef           mov edi, ebp
0x00008d87      e8c48dffff     call sym.imp.close
0x00008d8c      488b4308       mov rax, qword [rbx + 8]
0x00008d90      eb92           jmp 0x8d24
0x00008d92      660f1f440000   nop word [rax + rax]
0x00008d98      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x23900000
0x00008d9e      31c0           xor eax, eax
0x00008da0      e97fffffff     jmp 0x8d24
0x00008da5      0f1f00         nop dword [rax]
0x00008da8      ba01000000     mov edx, 1
0x00008dad      89ee           mov esi, ebp
0x00008daf      4889df         mov rdi, rbx
0x00008db2      e829e2ffff     call sym.cwd_advance_fd
0x00008db7      ebd3           jmp 0x8d8c
0x00008db9      48c743080000.  mov qword [rbx + 8], 0
0x00008dc1      31c0           xor eax, eax
0x00008dc3      e95cffffff     jmp 0x8d24
0x00008dc8      418b5d00       mov ebx, dword [r13]
0x00008dcc      89ef           mov edi, ebp
0x00008dce      e87d8dffff     call sym.imp.close
0x00008dd3      31c0           xor eax, eax
0x00008dd5      41895d00       mov dword [r13], ebx
0x00008dd9      e946ffffff     jmp 0x8d24
0x00008dde      6690           nop
;-- rpl_mbrtowc:
0x00008de0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00008de2      4154           push r12
0x00008de4      4989f5         mov r13, rsi
0x00008de7      55             push rbp
0x00008de8      53             push rbx
0x00008de9      4889fb         mov rbx, rdi
0x00008dec      4989d4         mov r12, rdx
0x00008def      4883ec18       sub rsp, 0x18
0x00008df3      64488b042528.  mov rax, qword fs:[0x28]
0x00008dfc      4889442408     mov qword [rsp + 8], rax
0x00008e01      31c0           xor eax, eax
0x00008e03      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00008e08      4885ff         test rdi, rdi
0x00008e0b      480f44d8       cmove rbx, rax
0x00008e0f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008e12      e8b98cffff     call sym.imp.mbrtowc
0x00008e17      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008e1b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00008e1e      7620           jbe 0x8e40                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00008e20      4d85e4         test r12, r12
0x00008e23      741b           je 0x8e40
0x00008e25      31ff           xor edi, edi
0x00008e27      e8d4010000     call sym.hard_locale
0x00008e2c      84c0           test al, al
0x00008e2e      7510           jne 0x8e40
0x00008e30      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008e35      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00008e3a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00008e3c      0f1f4000       nop dword [rax]
0x00008e40      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00008e45      644833142528.  xor rdx, qword fs:[0x28]
0x00008e4e      4889e8         mov rax, rbp
0x00008e51      750b           jne 0x8e5e
0x00008e53      4883c418       add rsp, 0x18
0x00008e57      5b             pop rbx
0x00008e58      5d             pop rbp
0x00008e59      415c           pop r12
0x00008e5b      415d           pop r13
0x00008e5d      c3             ret
0x00008e5e      e84d8cffff     call sym.imp.__stack_chk_fail
0x00008e63      662e0f1f8400.  nop word cs:[rax + rax]
0x00008e6d      0f1f00         nop dword [rax]
;-- close_stream:
0x00008e70      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00008e72      55             push rbp
0x00008e73      4889fd         mov rbp, rdi
0x00008e76      53             push rbx
0x00008e77      e8548bffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x00008e7c      8b5d00         mov ebx, dword [rbp]
0x00008e7f      4889ef         mov rdi, rbp
0x00008e82      4989c4         mov r12, rax
0x00008e85      e8d6160000     call sym.rpl_fclose
0x00008e8a      83e320         and ebx, 0x20                           ; "@"
0x00008e8d      85db           test ebx, ebx
0x00008e8f      7517           jne 0x8ea8
0x00008e91      85c0           test eax, eax
0x00008e93      740a           je 0x8e9f                               ; stdio.h:-186
0x00008e95      4d85e4         test r12, r12                           ; stdio.h:-178
0x00008e98      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008e9d      7439           je 0x8ed8
0x00008e9f      5b             pop rbx
0x00008ea0      5d             pop rbp
0x00008ea1      415c           pop r12
0x00008ea3      c3             ret
0x00008ea4      0f1f4000       nop dword [rax]
0x00008ea8      85c0           test eax, eax
0x00008eaa      751c           jne 0x8ec8
0x00008eac      e8ef8affff     call sym.imp.__errno_location
0x00008eb1      c70000000000   mov dword [rax], 0
0x00008eb7      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008ebc      5b             pop rbx
0x00008ebd      5d             pop rbp
0x00008ebe      415c           pop r12
0x00008ec0      c3             ret
0x00008ec1      0f1f80000000.  nop dword [rax]
0x00008ec8      5b             pop rbx
0x00008ec9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00008ece      5d             pop rbp                                 ; stdio.h:-186
0x00008ecf      415c           pop r12
0x00008ed1      c3             ret
0x00008ed2      660f1f440000   nop word [rax + rax]
0x00008ed8      e8c38affff     call sym.imp.__errno_location
0x00008edd      833809         cmp dword [rax], 9
0x00008ee0      5b             pop rbx
0x00008ee1      5d             pop rbp
0x00008ee2      415c           pop r12                                 ; stdio.h:-178
0x00008ee4      0f95c0         setne al
0x00008ee7      0fb6c0         movzx eax, al
0x00008eea      f7d8           neg eax
0x00008eec      c3             ret
0x00008eed      0f1f00         nop dword [rax]
;-- cycle_check_init:
0x00008ef0      48c747100000.  mov qword [rdi + 0x10], 0               ; ../coreutils-8.31/lib/cycle-check.c:44
0x00008ef8      c7471816f695.  mov dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:46 ; [0x95f616:4]=-1
0x00008eff      c3             ret                                     ; ../coreutils-8.31/lib/cycle-check.c:47
;-- cycle_check:
0x00008f00      817f1816f695.  cmp dword [rdi + 0x18], 0x95f616        ; ../coreutils-8.31/lib/cycle-check.c:59
0x00008f07      755e           jne 0x8f67
0x00008f09      488b5710       mov rdx, qword [rdi + 0x10]             ; ../coreutils-8.31/lib/cycle-check.c:65
0x00008f0d      488b4e08       mov rcx, qword [rsi + 8]
0x00008f11      4885d2         test rdx, rdx
0x00008f14      741a           je 0x8f30
0x00008f16      48390f         cmp qword [rdi], rcx
0x00008f19      742d           je 0x8f48
0x00008f1b      4c8d4201       lea r8, [rdx + 1]                       ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008f1f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008f21      4c85c2         test rdx, r8                            ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008f24      4c894710       mov qword [rdi + 0x10], r8
0x00008f28      7436           je 0x8f60
0x00008f2a      f3c3           ret                                     ; ../coreutils-8.31/lib/cycle-check.c:85
0x00008f2c      0f1f4000       nop dword [rax]
0x00008f30      48c747100100.  mov qword [rdi + 0x10], 1               ; ../coreutils-8.31/lib/cycle-check.c:70
0x00008f38      488b06         mov rax, qword [rsi]                    ; ../coreutils-8.31/lib/cycle-check.c:80
0x00008f3b      48890f         mov qword [rdi], rcx                    ; ../coreutils-8.31/lib/cycle-check.c:81
0x00008f3e      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/cycle-check.c:80
0x00008f42      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/cycle-check.c:84
0x00008f44      c3             ret
0x00008f45      0f1f00         nop dword [rax]
0x00008f48      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/cycle-check.c:65
0x00008f4c      483906         cmp qword [rsi], rax
0x00008f4f      75ca           jne 0x8f1b
0x00008f51      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/cycle-check.c:66
0x00008f56      c3             ret
0x00008f57      660f1f840000.  nop word [rax + rax]
0x00008f60      4d85c0         test r8, r8                             ; ../coreutils-8.31/lib/cycle-check.c:77
0x00008f63      74ec           je 0x8f51
0x00008f65      ebd1           jmp 0x8f38
0x00008f67      488d0de23200.  lea rcx, obj.__PRETTY_FUNCTION__.3994   ; ../coreutils-8.31/lib/cycle-check.c:60 ; 0xc250 ; "cycle_check"
0x00008f6e      488d359b3200.  lea rsi, str..._coreutils_8.31_lib_cycle_check.c ; 0xc210 ; "../coreutils-8.31/lib/cycle-check.c"
0x00008f75      488d3db83200.  lea rdi, str.state__magic____9827862    ; 0xc234 ; "state->magic == 9827862"
0x00008f7c      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/cycle-check.c:59
0x00008f80      ba3c000000     mov edx, 0x3c                           ; ../coreutils-8.31/lib/cycle-check.c:60 ; '<'
0x00008f85      e8968bffff     call sym.imp.__assert_fail
0x00008f8a      660f1f440000   nop word [rax + rax]
;-- open_safer:
0x00008f90      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/open-safer.c:30
0x00008f94      4889542430     mov qword [rsp + 0x30], rdx
0x00008f99      31d2           xor edx, edx
0x00008f9b      64488b042528.  mov rax, qword fs:[0x28]
0x00008fa4      4889442418     mov qword [rsp + 0x18], rax
0x00008fa9      31c0           xor eax, eax
0x00008fab      40f6c640       test sil, 0x40                          ; ../coreutils-8.31/lib/open-safer.c:33 ; segment.PHDR
0x00008faf      7527           jne 0x8fd8
0x00008fb1      31c0           xor eax, eax                            ; fcntl2.h:59   return __open_alias (__path, __oflag, __va_arg_pack ());
0x00008fb3      e8288dffff     call sym.imp.open
0x00008fb8      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/open-safer.c:45
0x00008fba      e861150000     call sym.fd_safer
0x00008fbf      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/open-safer.c:46
0x00008fc4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00008fcd      752a           jne 0x8ff9
0x00008fcf      4883c458       add rsp, 0x58
0x00008fd3      c3             ret
0x00008fd4      0f1f4000       nop dword [rax]
0x00008fd8      488d442460     lea rax, [rsp + 0x60]                   ; ../coreutils-8.31/lib/open-safer.c:36
0x00008fdd      c70424100000.  mov dword [rsp], 0x10                   ; [0x10:4]=0x3e0003
0x00008fe4      8b542430       mov edx, dword [rsp + 0x30]             ; ../coreutils-8.31/lib/open-safer.c:40
0x00008fe8      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/open-safer.c:36
0x00008fed      488d442420     lea rax, [rsp + 0x20]
0x00008ff2      4889442410     mov qword [rsp + 0x10], rax
0x00008ff7      ebb8           jmp 0x8fb1
0x00008ff9      e8b28affff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/open-safer.c:46
0x00008ffe      6690           nop
;-- hard_locale:
0x00009000      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00009004      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00009006      e8858cffff     call sym.imp.setlocale
0x0000900b      4889c2         mov rdx, rax
0x0000900e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x00009013      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x00009016      741d           je 0x9035
0x00009018      488d3d3d3200.  lea rdi, [0x0000c25c]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x0000901f      b902000000     mov ecx, 2
0x00009024      4889d6         mov rsi, rdx
0x00009027      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009029      0f97c1         seta cl
0x0000902c      80d900         sbb cl, 0
0x0000902f      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x00009031      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x00009033      750b           jne 0x9040
0x00009035      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x00009039      c3             ret
0x0000903a      660f1f440000   nop word [rax + rax]
0x00009040      488d3d173200.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0xc25e ; "POSIX"
0x00009047      b906000000     mov ecx, 6
0x0000904c      4889d6         mov rsi, rdx
0x0000904f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00009051      0f97c0         seta al
0x00009054      1c00           sbb al, 0
0x00009056      84c0           test al, al
0x00009058      0f95c0         setne al
0x0000905b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000905f      c3             ret
;-- next_prime:
0x00009060      4883ff0a       cmp rdi, 0xa
0x00009064      b80a000000     mov eax, 0xa
0x00009069      49b9abaaaaaa.  movabs r9, 0xaaaaaaaaaaaaaaab
0x00009073      480f42f8       cmovb rdi, rax
0x00009077      4883cf01       or rdi, 1                               ; ../coreutils-8.31/lib/hash.c:470
0x0000907b      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x0000907f      746e           je 0x90ef
0x00009081      0f1f80000000.  nop dword [rax]
0x00009088      4889f8         mov rax, rdi
0x0000908b      4889f9         mov rcx, rdi
0x0000908e      49f7e1         mul r9
0x00009091      4889d0         mov rax, rdx
0x00009094      48d1e8         shr rax, 1
0x00009097      488d0440       lea rax, [rax + rax*2]
0x0000909b      4829c1         sub rcx, rax
0x0000909e      4883ff09       cmp rdi, 9                              ; ../coreutils-8.31/lib/hash.c:449
0x000090a2      4889c8         mov rax, rcx
0x000090a5      7639           jbe 0x90e0
0x000090a7      4885c9         test rcx, rcx
0x000090aa      7439           je 0x90e5
0x000090ac      41b810000000   mov r8d, 0x10
0x000090b2      be09000000     mov esi, 9                              ; ../coreutils-8.31/lib/hash.c:447
0x000090b7      b903000000     mov ecx, 3                              ; ../coreutils-8.31/lib/hash.c:446
0x000090bc      eb0b           jmp 0x90c9
0x000090be      6690           nop
0x000090c0      4983c008       add r8, 8
0x000090c4      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:449
0x000090c7      741c           je 0x90e5
0x000090c9      4883c102       add rcx, 2                              ; ../coreutils-8.31/lib/hash.c:453
0x000090cd      31d2           xor edx, edx
0x000090cf      4889f8         mov rax, rdi
0x000090d2      48f7f1         div rcx
0x000090d5      4c01c6         add rsi, r8                             ; ../coreutils-8.31/lib/hash.c:452
0x000090d8      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/hash.c:449
0x000090db      4889d0         mov rax, rdx
0x000090de      72e0           jb 0x90c0
0x000090e0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:472
0x000090e3      750a           jne 0x90ef
0x000090e5      4883c702       add rdi, 2                              ; ../coreutils-8.31/lib/hash.c:473
0x000090e9      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/hash.c:472
0x000090ed      7599           jne 0x9088
0x000090ef      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:476
0x000090f2      c3             ret
0x000090f3      0f1f00         nop dword [rax]
0x000090f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- raw_hasher:
0x00009100      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/hash.c:487
0x00009103      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/hash.c:494
0x00009105      48c1c803       ror rax, 3                              ; ../coreutils-8.31/lib/bitrotate.h:87
0x00009109      48f7f6         div rsi                                 ; ../coreutils-8.31/lib/hash.c:494
0x0000910c      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/hash.c:495
0x0000910f      c3             ret
;-- raw_comparator:
0x00009110      4839f7         cmp rdi, rsi                            ; ../coreutils-8.31/lib/hash.c:500
0x00009113      0f94c0         sete al
0x00009116      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:502
0x00009117      660f1f840000.  nop word [rax + rax]
;-- safe_hasher:
0x00009120      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:250
0x00009121      4889fb         mov rbx, rdi
0x00009124      4889f7         mov rdi, rsi
0x00009127      488b7310       mov rsi, qword [rbx + 0x10]             ; ../coreutils-8.31/lib/hash.c:251
0x0000912b      ff5330         call qword [rbx + 0x30]
0x0000912e      48394310       cmp qword [rbx + 0x10], rax             ; ../coreutils-8.31/lib/hash.c:252
0x00009132      7609           jbe 0x913d
0x00009134      48c1e004       shl rax, 4                              ; ../coreutils-8.31/lib/hash.c:254
0x00009138      480303         add rax, qword [rbx]
0x0000913b      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:255
0x0000913c      c3             ret
0x0000913d      e84e88ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/hash.c:253
0x00009142      0f1f4000       nop dword [rax]
0x00009146      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_find_entry:
0x00009150      4156           push r14                                ; ../coreutils-8.31/lib/hash.c:792
0x00009152      4155           push r13
0x00009154      4989d6         mov r14, rdx
0x00009157      4154           push r12
0x00009159      55             push rbp
0x0000915a      4989fc         mov r12, rdi
0x0000915d      53             push rbx
0x0000915e      4889f5         mov rbp, rsi
0x00009161      4189cd         mov r13d, ecx
0x00009164      e8b7ffffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:793
0x00009169      498906         mov qword [r14], rax                    ; ../coreutils-8.31/lib/hash.c:796
0x0000916c      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:799
0x0000916f      4885f6         test rsi, rsi
0x00009172      0f84e8000000   je 0x9260
0x00009178      4839ee         cmp rsi, rbp                            ; ../coreutils-8.31/lib/hash.c:803
0x0000917b      4889c3         mov rbx, rax
0x0000917e      0f848f000000   je 0x9213
0x00009184      4889ef         mov rdi, rbp
0x00009187      41ff542438     call qword [r12 + 0x38]
0x0000918c      84c0           test al, al
0x0000918e      0f857c000000   jne 0x9210
0x00009194      488b4308       mov rax, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x00009198      4885c0         test rax, rax
0x0000919b      0f84bf000000   je 0x9260
0x000091a1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x000091a4      4839f5         cmp rbp, rsi
0x000091a7      7520           jne 0x91c9
0x000091a9      eb31           jmp 0x91dc
0x000091ab      0f1f440000     nop dword [rax + rax]
0x000091b0      488b5b08       mov rbx, qword [rbx + 8]                ; ../coreutils-8.31/lib/hash.c:828
0x000091b4      488b4308       mov rax, qword [rbx + 8]
0x000091b8      4885c0         test rax, rax
0x000091bb      0f849f000000   je 0x9260
0x000091c1      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:830
0x000091c4      4839ee         cmp rsi, rbp
0x000091c7      7413           je 0x91dc
0x000091c9      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:831
0x000091cc      41ff542438     call qword [r12 + 0x38]
0x000091d1      84c0           test al, al
0x000091d3      74db           je 0x91b0
0x000091d5      488b4308       mov rax, qword [rbx + 8]
0x000091d9      488b30         mov rsi, qword [rax]
0x000091dc      4584ed         test r13b, r13b                         ; ../coreutils-8.31/lib/hash.c:835
0x000091df      741d           je 0x91fe
0x000091e1      488b5008       mov rdx, qword [rax + 8]                ; ../coreutils-8.31/lib/hash.c:841
0x000091e5      48895308       mov qword [rbx + 8], rdx
0x000091e9      48c700000000.  mov qword [rax], 0                      ; ../coreutils-8.31/lib/hash.c:778
0x000091f0      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:779
0x000091f5      48895008       mov qword [rax + 8], rdx
0x000091f9      4989442448     mov qword [r12 + 0x48], rax             ; ../coreutils-8.31/lib/hash.c:780
0x000091fe      5b             pop rbx
0x000091ff      4889f0         mov rax, rsi
0x00009202      5d             pop rbp
0x00009203      415c           pop r12
0x00009205      415d           pop r13
0x00009207      415e           pop r14
0x00009209      c3             ret
0x0000920a      660f1f440000   nop word [rax + rax]
0x00009210      488b33         mov rsi, qword [rbx]
0x00009213      4584ed         test r13b, r13b
0x00009216      74e6           je 0x91fe
0x00009218      488b4308       mov rax, qword [rbx + 8]
0x0000921c      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:672
0x0000921f      742f           je 0x9250
0x00009221      f30f6f00       movdqu xmm0, xmmword [rax]
0x00009225      0f1103         movups xmmword [rbx], xmm0
0x00009228      48c700000000.  mov qword [rax], 0
0x0000922f      498b542448     mov rdx, qword [r12 + 0x48]             ; ../coreutils-8.31/lib/hash.c:388
0x00009234      48895008       mov qword [rax + 8], rdx
0x00009238      4989442448     mov qword [r12 + 0x48], rax
0x0000923d      4889f0         mov rax, rsi
0x00009240      5b             pop rbx                                 ; ../coreutils-8.31/lib/hash.c:398
0x00009241      5d             pop rbp
0x00009242      415c           pop r12
0x00009244      415d           pop r13
0x00009246      415e           pop r14
0x00009248      c3             ret
0x00009249      0f1f80000000.  nop dword [rax]
0x00009250      48c703000000.  mov qword [rbx], 0
0x00009257      eba5           jmp 0x91fe
0x00009259      0f1f80000000.  nop dword [rax]
0x00009260      31f6           xor esi, esi
0x00009262      5b             pop rbx
0x00009263      4889f0         mov rax, rsi
0x00009266      5d             pop rbp
0x00009267      415c           pop r12
0x00009269      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:401
0x0000926b      415e           pop r14
0x0000926d      c3             ret
0x0000926e      6690           nop
;-- check_tuning.isra.0:
0x00009270      488b17         mov rdx, qword [rdi]
0x00009273      488d0d663000.  lea rcx, obj.default_tuning             ; 0xc2e0
0x0000927a      b801000000     mov eax, 1
0x0000927f      4839ca         cmp rdx, rcx
0x00009282      7461           je 0x92e5
0x00009284      f30f104208     movss xmm0, dword [rdx + 8]
0x00009289      0f2e05643000.  ucomiss xmm0, dword [0x0000c2f4]
0x00009290      764e           jbe 0x92e0
0x00009292      f30f100d5e30.  movss xmm1, dword [0x0000c2f8]          ; [0xc2f8:4]=0x3f666666
0x0000929a      0f2ec8         ucomiss xmm1, xmm0
0x0000929d      7641           jbe 0x92e0
0x0000929f      f30f104a0c     movss xmm1, dword [rdx + 0xc]           ; ../coreutils-8.31/lib/hash.c:408
0x000092a4      0f2e0d513000.  ucomiss xmm1, dword [0x0000c2fc]
0x000092ab      7633           jbe 0x92e0
0x000092ad      f30f100a       movss xmm1, dword [rdx]
0x000092b1      0f2e0d483000.  ucomiss xmm1, dword [0x0000c300]
0x000092b8      7226           jb 0x92e0
0x000092ba      f30f580d3230.  addss xmm1, dword [0x0000c2f4]          ; ../coreutils-8.31/lib/hash.c:737
0x000092c2      f30f105204     movss xmm2, dword [rdx + 4]
0x000092c7      0f2ed1         ucomiss xmm2, xmm1
0x000092ca      7614           jbe 0x92e0
0x000092cc      f30f101d3030.  movss xmm3, dword [0x0000c304]          ; [0xc304:4]=0x3f800000
0x000092d4      0f2eda         ucomiss xmm3, xmm2                      ; ../coreutils-8.31/lib/hash.c:738
0x000092d7      7207           jb 0x92e0
0x000092d9      0f2ec1         ucomiss xmm0, xmm1
0x000092dc      7707           ja 0x92e5
0x000092de      6690           nop
0x000092e0      48890f         mov qword [rdi], rcx
0x000092e3      31c0           xor eax, eax
0x000092e5      f3c3           ret
0x000092e7      660f1f840000.  nop word [rax + rax]
;-- transfer_entries:
0x000092f0      4157           push r15
0x000092f2      4156           push r14
0x000092f4      4155           push r13                                ; ../coreutils-8.31/lib/hash.c:760
0x000092f6      4154           push r12
0x000092f8      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:749
0x000092f9      53             push rbx
0x000092fa      4883ec08       sub rsp, 8
0x000092fe      4c8b26         mov r12, qword [rsi]
0x00009301      4c3b6608       cmp r12, qword [rsi + 8]
0x00009305      0f83dd000000   jae 0x93e8
0x0000930b      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:752
0x0000930e      4989f5         mov r13, rsi
0x00009311      4189d6         mov r14d, edx
0x00009314      0f1f4000       nop dword [rax]
0x00009318      4d8b3c24       mov r15, qword [r12]
0x0000931c      4d85ff         test r15, r15
0x0000931f      0f84b5000000   je 0x93da
0x00009325      498b5c2408     mov rbx, qword [r12 + 8]
0x0000932a      4885db         test rbx, rbx
0x0000932d      751d           jne 0x934c
0x0000932f      eb5a           jmp 0x938b
0x00009331      0f1f80000000.  nop dword [rax]
0x00009338      488b4808       mov rcx, qword [rax + 8]
0x0000933c      4885d2         test rdx, rdx
0x0000933f      48894b08       mov qword [rbx + 8], rcx                ; ../coreutils-8.31/lib/bitrotate.h:557
0x00009343      48895808       mov qword [rax + 8], rbx
0x00009347      4889d3         mov rbx, rdx
0x0000934a      743b           je 0x9387
0x0000934c      4c8b3b         mov r15, qword [rbx]
0x0000934f      4889ef         mov rdi, rbp
0x00009352      4c89fe         mov rsi, r15
0x00009355      e8c6fdffff     call sym.safe_hasher
0x0000935a      48833800       cmp qword [rax], 0
0x0000935e      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:329
0x00009362      75d4           jne 0x9338
0x00009364      4c8938         mov qword [rax], r15
0x00009367      4883451801     add qword [rbp + 0x18], 1
0x0000936c      4885d2         test rdx, rdx
0x0000936f      48c703000000.  mov qword [rbx], 0
0x00009376      488b4548       mov rax, qword [rbp + 0x48]
0x0000937a      48894308       mov qword [rbx + 8], rax
0x0000937e      48895d48       mov qword [rbp + 0x48], rbx             ; ../coreutils-8.31/lib/bitrotate.h:-285
0x00009382      4889d3         mov rbx, rdx                            ; ../coreutils-8.31/lib/bitrotate.h:-283
0x00009385      75c5           jne 0x934c
0x00009387      4d8b3c24       mov r15, qword [r12]
0x0000938b      4584f6         test r14b, r14b
0x0000938e      49c744240800.  mov qword [r12 + 8], 0                  ; ../coreutils-8.31/lib/bitrotate.h:-277
0x00009397      7541           jne 0x93da
0x00009399      4c89fe         mov rsi, r15
0x0000939c      4889ef         mov rdi, rbp
0x0000939f      e87cfdffff     call sym.safe_hasher
0x000093a4      48833800       cmp qword [rax], 0
0x000093a8      4889c3         mov rbx, rax
0x000093ab      7453           je 0x9400
0x000093ad      488b4548       mov rax, qword [rbp + 0x48]
0x000093b1      4885c0         test rax, rax
0x000093b4      745a           je 0x9410
0x000093b6      488b5008       mov rdx, qword [rax + 8]
0x000093ba      48895548       mov qword [rbp + 0x48], rdx
0x000093be      488b5308       mov rdx, qword [rbx + 8]                ; ../coreutils-8.31/lib/bitrotate.h:-255
0x000093c2      4c8938         mov qword [rax], r15
0x000093c5      48895008       mov qword [rax + 8], rdx
0x000093c9      48894308       mov qword [rbx + 8], rax
0x000093cd      49c704240000.  mov qword [r12], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-250
0x000093d5      49836d1801     sub qword [r13 + 0x18], 1
0x000093da      4983c410       add r12, 0x10                           ; ../coreutils-8.31/lib/bitrotate.h:-249
0x000093de      4d396508       cmp qword [r13 + 8], r12                ; ../coreutils-8.31/lib/bitrotate.h:-250
0x000093e2      0f8730ffffff   ja 0x9318
0x000093e8      4883c408       add rsp, 8
0x000093ec      b801000000     mov eax, 1
0x000093f1      5b             pop rbx
0x000093f2      5d             pop rbp
0x000093f3      415c           pop r12
0x000093f5      415d           pop r13                                 ; ../coreutils-8.31/lib/bitrotate.h:-241
0x000093f7      415e           pop r14
0x000093f9      415f           pop r15
0x000093fb      c3             ret
0x000093fc      0f1f4000       nop dword [rax]
0x00009400      4c8938         mov qword [rax], r15
0x00009403      4883451801     add qword [rbp + 0x18], 1
0x00009408      ebc3           jmp 0x93cd
0x0000940a      660f1f440000   nop word [rax + rax]
0x00009410      bf10000000     mov edi, 0x10
0x00009415      e80688ffff     call sym.imp.malloc
0x0000941a      4885c0         test rax, rax
0x0000941d      759f           jne 0x93be
0x0000941f      4883c408       add rsp, 8
0x00009423      31c0           xor eax, eax
0x00009425      5b             pop rbx
0x00009426      5d             pop rbp
0x00009427      415c           pop r12
0x00009429      415d           pop r13
0x0000942b      415e           pop r14
0x0000942d      415f           pop r15
0x0000942f      c3             ret
;-- hash_get_n_buckets:
0x00009430      488b4710       mov rax, qword [rdi + 0x10]
0x00009434      c3             ret
0x00009435      90             nop
0x00009436      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-218
;-- hash_get_n_buckets_used:
0x00009440      488b4718       mov rax, qword [rdi + 0x18]
0x00009444      c3             ret                                     ; ../coreutils-8.31/lib/bitrotate.h:-210
0x00009445      90             nop
0x00009446      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/bitrotate.h:-213
;-- hash_get_n_entries:
0x00009450      488b4720       mov rax, qword [rdi + 0x20]
0x00009454      c3             ret
0x00009455      90             nop                                     ; ../coreutils-8.31/lib/bitrotate.h:-209
0x00009456      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_max_bucket_length:
0x00009460      488b37         mov rsi, qword [rdi]
0x00009463      488b7f08       mov rdi, qword [rdi + 8]
0x00009467      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/bitrotate.h:-259
0x00009469      4839fe         cmp rsi, rdi                            ; ../coreutils-8.31/lib/bitrotate.h:-205
0x0000946c      7339           jae 0x94a7
0x0000946e      6690           nop
0x00009470      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/bitrotate.h:-268
0x00009474      7426           je 0x949c                               ; ../coreutils-8.31/lib/bitrotate.h:-284
0x00009476      488b5608       mov rdx, qword [rsi + 8]
0x0000947a      b901000000     mov ecx, 1
0x0000947f      4885d2         test rdx, rdx
0x00009482      7411           je 0x9495
0x00009484      0f1f4000       nop dword [rax]
0x00009488      488b5208       mov rdx, qword [rdx + 8]
0x0000948c      4883c101       add rcx, 1
0x00009490      4885d2         test rdx, rdx
0x00009493      75f3           jne 0x9488
0x00009495      4839c8         cmp rax, rcx
0x00009498      480f42c1       cmovb rax, rcx                          ; ../coreutils-8.31/lib/bitrotate.h:-252
0x0000949c      4883c610       add rsi, 0x10
0x000094a0      4839fe         cmp rsi, rdi
0x000094a3      72cb           jb 0x9470
0x000094a5      f3c3           ret
0x000094a7      f3c3           ret
0x000094a9      0f1f80000000.  nop dword [rax]
;-- hash_table_ok:
0x000094b0      488b0f         mov rcx, qword [rdi]
0x000094b3      4c8b4708       mov r8, qword [rdi + 8]
0x000094b7      31d2           xor edx, edx
0x000094b9      31f6           xor esi, esi
0x000094bb      4c39c1         cmp rcx, r8
0x000094be      7336           jae 0x94f6
0x000094c0      48833900       cmp qword [rcx], 0
0x000094c4      7427           je 0x94ed
0x000094c6      488b4108       mov rax, qword [rcx + 8]
0x000094ca      4883c601       add rsi, 1
0x000094ce      4883c201       add rdx, 1
0x000094d2      4885c0         test rax, rax
0x000094d5      7416           je 0x94ed
0x000094d7      660f1f840000.  nop word [rax + rax]
0x000094e0      488b4008       mov rax, qword [rax + 8]
0x000094e4      4883c201       add rdx, 1
0x000094e8      4885c0         test rax, rax
0x000094eb      75f3           jne 0x94e0
0x000094ed      4883c110       add rcx, 0x10
0x000094f1      4c39c1         cmp rcx, r8
0x000094f4      72ca           jb 0x94c0
0x000094f6      31c0           xor eax, eax
0x000094f8      48397718       cmp qword [rdi + 0x18], rsi
0x000094fc      7402           je 0x9500
0x000094fe      f3c3           ret                                     ; ../coreutils-8.31/lib/hash.c:-195
0x00009500      48395720       cmp qword [rdi + 0x20], rdx
0x00009504      0f94c0         sete al
0x00009507      c3             ret
0x00009508      0f1f84000000.  nop dword [rax + rax]
;-- hash_print_statistics:
0x00009510      4155           push r13
0x00009512      4154           push r12
0x00009514      4989f4         mov r12, rsi
0x00009517      55             push rbp
0x00009518      53             push rbx
0x00009519      31db           xor ebx, ebx
0x0000951b      4883ec08       sub rsp, 8
0x0000951f      488b37         mov rsi, qword [rdi]
0x00009522      488b4f20       mov rcx, qword [rdi + 0x20]
0x00009526      488b6f10       mov rbp, qword [rdi + 0x10]
0x0000952a      4c8b6f18       mov r13, qword [rdi + 0x18]
0x0000952e      488b7f08       mov rdi, qword [rdi + 8]
0x00009532      4839fe         cmp rsi, rdi
0x00009535      733e           jae 0x9575
0x00009537      660f1f840000.  nop word [rax + rax]
0x00009540      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/hash.c:-192
0x00009544      7426           je 0x956c
0x00009546      488b4608       mov rax, qword [rsi + 8]                ; stdio2.h:-339
0x0000954a      ba01000000     mov edx, 1
0x0000954f      4885c0         test rax, rax
0x00009552      7411           je 0x9565
0x00009554      0f1f4000       nop dword [rax]
0x00009558      488b4008       mov rax, qword [rax + 8]
0x0000955c      4883c201       add rdx, 1
0x00009560      4885c0         test rax, rax
0x00009563      75f3           jne 0x9558
0x00009565      4839d3         cmp rbx, rdx
0x00009568      480f42da       cmovb rbx, rdx
0x0000956c      4883c610       add rsi, 0x10
0x00009570      4839fe         cmp rsi, rdi
0x00009573      72cb           jb 0x9540
0x00009575      488d15e82c00.  lea rdx, str.entries:__________lu       ; 0xc264 ; "# entries:         %lu\n"
0x0000957c      be01000000     mov esi, 1
0x00009581      4c89e7         mov rdi, r12
0x00009584      31c0           xor eax, eax
0x00009586      e8d587ffff     call sym.imp.__fprintf_chk
0x0000958b      488d15ea2c00.  lea rdx, str.buckets:__________lu       ; 0xc27c ; "# buckets:         %lu\n"
0x00009592      31c0           xor eax, eax
0x00009594      4889e9         mov rcx, rbp
0x00009597      be01000000     mov esi, 1
0x0000959c      4c89e7         mov rdi, r12
0x0000959f      e8bc87ffff     call sym.imp.__fprintf_chk
0x000095a4      4d85ed         test r13, r13
0x000095a7      7867           js 0x9610
0x000095a9      660fefc0       pxor xmm0, xmm0
0x000095ad      4885ed         test rbp, rbp
0x000095b0      f2490f2ac5     cvtsi2sd xmm0, r13
0x000095b5      f20f59055b2d.  mulsd xmm0, qword [0x0000c318]          ; ../coreutils-8.31/lib/hash.c:-174
0x000095bd      787a           js 0x9639                               ; ../coreutils-8.31/lib/hash.c:-170
0x000095bf      660fefc9       pxor xmm1, xmm1
0x000095c3      f2480f2acd     cvtsi2sd xmm1, rbp
0x000095c8      f20f5ec1       divsd xmm0, xmm1
0x000095cc      488d15dd2c00.  lea rdx, str.buckets_used:_____lu___.2f ; 0xc2b0 ; "# buckets used:    %lu (%.2f%%)\n"
0x000095d3      4c89e9         mov rcx, r13
0x000095d6      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/hash.c:-166
0x000095d9      be01000000     mov esi, 1
0x000095de      b801000000     mov eax, 1
0x000095e3      e87887ffff     call sym.imp.__fprintf_chk
0x000095e8      4883c408       add rsp, 8
0x000095ec      4889d9         mov rcx, rbx
0x000095ef      4c89e7         mov rdi, r12
0x000095f2      5b             pop rbx
0x000095f3      5d             pop rbp
0x000095f4      415c           pop r12
0x000095f6      415d           pop r13
0x000095f8      488d15952c00.  lea rdx, str.max_bucket_length:__lu     ; 0xc294 ; "max bucket length: %lu\n"
0x000095ff      be01000000     mov esi, 1
0x00009604      31c0           xor eax, eax
0x00009606      e95587ffff     jmp sym.imp.__fprintf_chk
0x0000960b      0f1f440000     nop dword [rax + rax]
0x00009610      4c89e8         mov rax, r13
0x00009613      4c89ea         mov rdx, r13
0x00009616      660fefc0       pxor xmm0, xmm0
0x0000961a      48d1e8         shr rax, 1
0x0000961d      83e201         and edx, 1
0x00009620      4809d0         or rax, rdx
0x00009623      4885ed         test rbp, rbp
0x00009626      f2480f2ac0     cvtsi2sd xmm0, rax
0x0000962b      f20f58c0       addsd xmm0, xmm0
0x0000962f      f20f5905e12c.  mulsd xmm0, qword [0x0000c318]
0x00009637      7986           jns 0x95bf                              ; ../coreutils-8.31/lib/hash.c:-138
0x00009639      4889e8         mov rax, rbp
0x0000963c      660fefc9       pxor xmm1, xmm1
0x00009640      48d1e8         shr rax, 1
0x00009643      83e501         and ebp, 1                              ; ../coreutils-8.31/lib/hash.c:-136
0x00009646      4809e8         or rax, rbp                             ; ../coreutils-8.31/lib/hash.c:-147
0x00009649      f2480f2ac8     cvtsi2sd xmm1, rax
0x0000964e      f20f58c9       addsd xmm1, xmm1
0x00009652      e971ffffff     jmp 0x95c8
0x00009657      660f1f840000.  nop word [rax + rax]
;-- hash_lookup:
0x00009660      4154           push r12
0x00009662      55             push rbp
0x00009663      4989fc         mov r12, rdi
0x00009666      53             push rbx
0x00009667      4889f5         mov rbp, rsi
0x0000966a      e8b1faffff     call sym.safe_hasher                    ; ../coreutils-8.31/lib/hash.c:-127
0x0000966f      488b30         mov rsi, qword [rax]                    ; ../coreutils-8.31/lib/hash.c:-123
0x00009672      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/hash.c:-127
0x00009675      7426           je 0x969d                               ; ../coreutils-8.31/lib/hash.c:-120
0x00009677      4889c3         mov rbx, rax
0x0000967a      eb07           jmp 0x9683
0x0000967c      0f1f4000       nop dword [rax]
0x00009680      488b33         mov rsi, qword [rbx]
0x00009683      4839ee         cmp rsi, rbp
0x00009686      7417           je 0x969f                               ; ../coreutils-8.31/lib/hash.c:-116
0x00009688      4889ef         mov rdi, rbp
0x0000968b      41ff542438     call qword [r12 + 0x38]                 ; ../coreutils-8.31/lib/hash.c:-120
0x00009690      84c0           test al, al
0x00009692      751c           jne 0x96b0
0x00009694      488b5b08       mov rbx, qword [rbx + 8]
0x00009698      4885db         test rbx, rbx
0x0000969b      75e3           jne 0x9680
0x0000969d      31f6           xor esi, esi
0x0000969f      5b             pop rbx
0x000096a0      4889f0         mov rax, rsi
0x000096a3      5d             pop rbp
0x000096a4      415c           pop r12
0x000096a6      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-112
0x000096a7      660f1f840000.  nop word [rax + rax]
0x000096b0      488b33         mov rsi, qword [rbx]
0x000096b3      5b             pop rbx
0x000096b4      5d             pop rbp
0x000096b5      4889f0         mov rax, rsi
0x000096b8      415c           pop r12
0x000096ba      c3             ret
0x000096bb      0f1f440000     nop dword [rax + rax]
;-- hash_get_first:
0x000096c0      48837f2000     cmp qword [rdi + 0x20], 0
0x000096c5      742c           je 0x96f3
0x000096c7      488b17         mov rdx, qword [rdi]
0x000096ca      488b4f08       mov rcx, qword [rdi + 8]
0x000096ce      4839ca         cmp rdx, rcx
0x000096d1      7325           jae 0x96f8
0x000096d3      488b02         mov rax, qword [rdx]
0x000096d6      4885c0         test rax, rax
0x000096d9      751b           jne 0x96f6
0x000096db      0f1f440000     nop dword [rax + rax]
0x000096e0      4883c210       add rdx, 0x10
0x000096e4      4839ca         cmp rdx, rcx
0x000096e7      730f           jae 0x96f8                              ; ../coreutils-8.31/lib/hash.c:-97
0x000096e9      488b02         mov rax, qword [rdx]
0x000096ec      4885c0         test rax, rax
0x000096ef      74ef           je 0x96e0
0x000096f1      f3c3           ret
0x000096f3      31c0           xor eax, eax
0x000096f5      c3             ret
0x000096f6      f3c3           ret
0x000096f8      4883ec08       sub rsp, 8
0x000096fc      e88f82ffff     call sym.imp.abort
0x00009701      0f1f440000     nop dword [rax + rax]
0x00009706      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_next:
0x00009710      55             push rbp
0x00009711      53             push rbx
0x00009712      4889fd         mov rbp, rdi
0x00009715      4889f3         mov rbx, rsi
0x00009718      4883ec08       sub rsp, 8
0x0000971c      e8fff9ffff     call sym.safe_hasher
0x00009721      4889c2         mov rdx, rax
0x00009724      4889c1         mov rcx, rax
0x00009727      488b02         mov rax, qword [rdx]
0x0000972a      488b5208       mov rdx, qword [rdx + 8]
0x0000972e      4839d8         cmp rax, rbx
0x00009731      7416           je 0x9749
0x00009733      0f1f440000     nop dword [rax + rax]
0x00009738      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-79
0x0000973b      7411           je 0x974e
0x0000973d      488b02         mov rax, qword [rdx]
0x00009740      488b5208       mov rdx, qword [rdx + 8]                ; ../coreutils-8.31/lib/hash.c:-97
0x00009744      4839d8         cmp rax, rbx
0x00009747      75ef           jne 0x9738
0x00009749      4885d2         test rdx, rdx
0x0000974c      752a           jne 0x9778
0x0000974e      488b5508       mov rdx, qword [rbp + 8]                ; ../coreutils-8.31/lib/hash.c:-66
0x00009752      eb0c           jmp 0x9760
0x00009754      0f1f4000       nop dword [rax]
0x00009758      488b01         mov rax, qword [rcx]
0x0000975b      4885c0         test rax, rax
0x0000975e      750b           jne 0x976b
0x00009760      4883c110       add rcx, 0x10
0x00009764      4839ca         cmp rdx, rcx
0x00009767      77ef           ja 0x9758
0x00009769      31c0           xor eax, eax
0x0000976b      4883c408       add rsp, 8
0x0000976f      5b             pop rbx
0x00009770      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:-59
0x00009771      c3             ret
0x00009772      660f1f440000   nop word [rax + rax]
0x00009778      488b02         mov rax, qword [rdx]
0x0000977b      4883c408       add rsp, 8
0x0000977f      5b             pop rbx
0x00009780      5d             pop rbp
0x00009781      c3             ret                                     ; ../coreutils-8.31/lib/hash.c:-55
0x00009782      0f1f4000       nop dword [rax]
0x00009786      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_get_entries:
0x00009790      4c8b0f         mov r9, qword [rdi]
0x00009793      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-57
0x00009797      7659           jbe 0x97f2
0x00009799      4531c0         xor r8d, r8d
0x0000979c      498b09         mov rcx, qword [r9]
0x0000979f      4885c9         test rcx, rcx
0x000097a2      7439           je 0x97dd                               ; ../coreutils-8.31/lib/hash.c:-47
0x000097a4      4c39c2         cmp rdx, r8
0x000097a7      763e           jbe 0x97e7
0x000097a9      4a890cc6       mov qword [rsi + r8*8], rcx
0x000097ad      498b4908       mov rcx, qword [r9 + 8]
0x000097b1      498d4001       lea rax, [r8 + 1]
0x000097b5      4885c9         test rcx, rcx
0x000097b8      7420           je 0x97da
0x000097ba      660f1f440000   nop word [rax + rax]
0x000097c0      4839c2         cmp rdx, rax
0x000097c3      742b           je 0x97f0                               ; ../coreutils-8.31/lib/hash.c:-3
0x000097c5      4c8b01         mov r8, qword [rcx]
0x000097c8      4883c001       add rax, 1
0x000097cc      4c8944c6f8     mov qword [rsi + rax*8 - 8], r8
0x000097d1      488b4908       mov rcx, qword [rcx + 8]
0x000097d5      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/hash.c:-2
0x000097d8      75e6           jne 0x97c0
0x000097da      4989c0         mov r8, rax
0x000097dd      4983c110       add r9, 0x10
0x000097e1      4c394f08       cmp qword [rdi + 8], r9                 ; ../coreutils-8.31/lib/hash.c:-3
0x000097e5      77b5           ja 0x979c
0x000097e7      4c89c0         mov rax, r8
0x000097ea      c3             ret
0x000097eb      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:0
0x000097f0      f3c3           ret
0x000097f2      31c0           xor eax, eax
0x000097f4      c3             ret
0x000097f5      90             nop
0x000097f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_do_for_each:
0x00009800      4157           push r15
0x00009802      4156           push r14
0x00009804      4155           push r13
0x00009806      4154           push r12
0x00009808      55             push rbp
0x00009809      53             push rbx
0x0000980a      4883ec08       sub rsp, 8
0x0000980e      4c8b37         mov r14, qword [rdi]
0x00009811      4c397708       cmp qword [rdi + 8], r14
0x00009815      764f           jbe 0x9866
0x00009817      4989d5         mov r13, rdx
0x0000981a      4989f4         mov r12, rsi
0x0000981d      4989ff         mov r15, rdi                            ; ../coreutils-8.31/lib/hash.c:46
0x00009820      31ed           xor ebp, ebp
0x00009822      498b3e         mov rdi, qword [r14]
0x00009825      4885ff         test rdi, rdi
0x00009828      7420           je 0x984a
0x0000982a      4c89f3         mov rbx, r14
0x0000982d      eb04           jmp 0x9833
0x0000982f      90             nop
0x00009830      488b3b         mov rdi, qword [rbx]
0x00009833      4c89ee         mov rsi, r13                            ; ../coreutils-8.31/lib/hash.c:37
0x00009836      41ffd4         call r12
0x00009839      84c0           test al, al
0x0000983b      7417           je 0x9854
0x0000983d      488b5b08       mov rbx, qword [rbx + 8]
0x00009841      4883c501       add rbp, 1
0x00009845      4885db         test rbx, rbx                           ; ../coreutils-8.31/lib/hash.c:33
0x00009848      75e6           jne 0x9830
0x0000984a      4983c610       add r14, 0x10
0x0000984e      4d397708       cmp qword [r15 + 8], r14
0x00009852      77ce           ja 0x9822
0x00009854      4883c408       add rsp, 8
0x00009858      4889e8         mov rax, rbp
0x0000985b      5b             pop rbx
0x0000985c      5d             pop rbp                                 ; ../coreutils-8.31/lib/hash.c:38
0x0000985d      415c           pop r12
0x0000985f      415d           pop r13                                 ; ../coreutils-8.31/lib/hash.c:37
0x00009861      415e           pop r14
0x00009863      415f           pop r15
0x00009865      c3             ret
0x00009866      31ed           xor ebp, ebp
0x00009868      ebea           jmp 0x9854                              ; ../coreutils-8.31/lib/hash.c:41
0x0000986a      660f1f440000   nop word [rax + rax]
;-- hash_string:
0x00009870      0fb60f         movzx ecx, byte [rdi]
0x00009873      31d2           xor edx, edx
0x00009875      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:43
0x00009877      7424           je 0x989d
0x00009879      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/hash.c:44
0x00009880      4889d0         mov rax, rdx
0x00009883      4883c701       add rdi, 1
0x00009887      48c1e005       shl rax, 5
0x0000988b      4829d0         sub rax, rdx
0x0000988e      31d2           xor edx, edx
0x00009890      4801c8         add rax, rcx
0x00009893      0fb60f         movzx ecx, byte [rdi]
0x00009896      48f7f6         div rsi
0x00009899      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hash.c:-14
0x0000989b      75e3           jne 0x9880
0x0000989d      4889d0         mov rax, rdx
0x000098a0      c3             ret
0x000098a1      0f1f440000     nop dword [rax + rax]
0x000098a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_reset_tuning:
0x000098b0      48b800000000.  movabs rax, 0x3f80000000000000          ; 4575657221408423936
0x000098ba      c6471000       mov byte [rdi + 0x10], 0                ; ../coreutils-8.31/lib/hash.c:-70
0x000098be      488907         mov qword [rdi], rax
0x000098c1      48b8cdcc4c3f.  movabs rax, 0x3fb4fdf43f4ccccd
0x000098cb      48894708       mov qword [rdi + 8], rax                ; ../coreutils-8.31/lib/hash.c:-65
0x000098cf      c3             ret
;-- hash_initialize:
0x000098d0      4157           push r15
0x000098d2      4156           push r14
0x000098d4      488d0525f8ff.  lea rax, sym.raw_hasher                 ; 0x9100 ; "H\x89\xf81\xd2H\xc1\xc8\x03H\xf7\xf6H\x89\xd0\xc3H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x000098db      4155           push r13
0x000098dd      4154           push r12
0x000098df      4989d4         mov r12, rdx
0x000098e2      55             push rbp                                ; ../coreutils-8.31/lib/hash.c:-61
0x000098e3      53             push rbx
0x000098e4      4989cd         mov r13, rcx
0x000098e7      4889fd         mov rbp, rdi
0x000098ea      bf50000000     mov edi, 0x50                           ; 'P'
0x000098ef      4989f7         mov r15, rsi
0x000098f2      4883ec08       sub rsp, 8
0x000098f6      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hash.c:-52
0x000098f9      4d89c6         mov r14, r8
0x000098fc      4c0f44e0       cmove r12, rax
0x00009900      488d0509f8ff.  lea rax, sym.raw_comparator             ; 0x9110 ; "H9\xf7\x0f\x94\xc0\xc3f\x0f\x1f\x84"
0x00009907      4885c9         test rcx, rcx
0x0000990a      4c0f44e8       cmove r13, rax
0x0000990e      e80d83ffff     call sym.imp.malloc
0x00009913      4885c0         test rax, rax
0x00009916      4889c3         mov rbx, rax
0x00009919      0f84ab000000   je 0x99ca
0x0000991f      4d85ff         test r15, r15
0x00009922      488d7828       lea rdi, [rax + 0x28]
0x00009926      0f84b4000000   je 0x99e0
0x0000992c      4c897828       mov qword [rax + 0x28], r15
0x00009930      e83bf9ffff     call sym.check_tuning.isra.0
0x00009935      84c0           test al, al
0x00009937      0f8483000000   je 0x99c0
0x0000993d      41807f1000     cmp byte [r15 + 0x10], 0
0x00009942      0f84f8000000   je 0x9a40
0x00009948      4889ef         mov rdi, rbp                            ; ../coreutils-8.31/lib/hash.c:-145
0x0000994b      e810f7ffff     call sym.next_prime
0x00009950      ba08000000     mov edx, 8
0x00009955      4889c5         mov rbp, rax
0x00009958      31c9           xor ecx, ecx
0x0000995a      4889d0         mov rax, rdx
0x0000995d      48f7e5         mul rbp
0x00009960      0f8014010000   jo 0x9a7a
0x00009966      4885c0         test rax, rax
0x00009969      7855           js 0x99c0
0x0000996b      4885c9         test rcx, rcx
0x0000996e      7550           jne 0x99c0
0x00009970      4885ed         test rbp, rbp
0x00009973      48896b10       mov qword [rbx + 0x10], rbp
0x00009977      7447           je 0x99c0
0x00009979      be10000000     mov esi, 0x10
0x0000997e      4889ef         mov rdi, rbp
0x00009981      e80a82ffff     call sym.imp.calloc
0x00009986      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/hash.c:-197
0x00009989      488903         mov qword [rbx], rax
0x0000998c      7432           je 0x99c0
0x0000998e      48c1e504       shl rbp, 4
0x00009992      48c743180000.  mov qword [rbx + 0x18], 0
0x0000999a      48c743200000.  mov qword [rbx + 0x20], 0
0x000099a2      4801c5         add rbp, rax
0x000099a5      4c896330       mov qword [rbx + 0x30], r12
0x000099a9      4c896b38       mov qword [rbx + 0x38], r13
0x000099ad      48896b08       mov qword [rbx + 8], rbp
0x000099b1      4c897340       mov qword [rbx + 0x40], r14
0x000099b5      48c743480000.  mov qword [rbx + 0x48], 0
0x000099bd      eb0b           jmp 0x99ca
0x000099bf      90             nop
0x000099c0      4889df         mov rdi, rbx
0x000099c3      31db           xor ebx, ebx
0x000099c5      e8d683ffff     call sym..plt.got
0x000099ca      4883c408       add rsp, 8
0x000099ce      4889d8         mov rax, rbx
0x000099d1      5b             pop rbx
0x000099d2      5d             pop rbp
0x000099d3      415c           pop r12
0x000099d5      415d           pop r13
0x000099d7      415e           pop r14
0x000099d9      415f           pop r15
0x000099db      c3             ret
0x000099dc      0f1f4000       nop dword [rax]
0x000099e0      488d05f92800.  lea rax, obj.default_tuning             ; 0xc2e0
0x000099e7      48894328       mov qword [rbx + 0x28], rax             ; ../coreutils-8.31/lib/hash.c:-199
0x000099eb      e880f8ffff     call sym.check_tuning.isra.0
0x000099f0      84c0           test al, al
0x000099f2      f30f100d0e29.  movss xmm1, dword [0x0000c308]          ; [0xc308:4]=0x3f4ccccd
0x000099fa      74c4           je 0x99c0
0x000099fc      4885ed         test rbp, rbp
0x000099ff      784a           js 0x9a4b
0x00009a01      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-168
0x00009a05      f3480f2ac5     cvtsi2ss xmm0, rbp
0x00009a0a      f30f5ec1       divss xmm0, xmm1
0x00009a0e      0f2e05f72800.  ucomiss xmm0, dword [0x0000c30c]
0x00009a15      73a9           jae 0x99c0
0x00009a17      0f2e05f22800.  ucomiss xmm0, dword [0x0000c310]
0x00009a1e      7250           jb 0x9a70
0x00009a20      f30f5c05e828.  subss xmm0, dword [0x0000c310]
0x00009a28      48b800000000.  movabs rax, 0x8000000000000000
0x00009a32      f3480f2ce8     cvttss2si rbp, xmm0
0x00009a37      4831c5         xor rbp, rax
0x00009a3a      e909ffffff     jmp 0x9948
0x00009a3f      90             nop
0x00009a40      4885ed         test rbp, rbp
0x00009a43      f3410f104f08   movss xmm1, dword [r15 + 8]
0x00009a49      79b6           jns 0x9a01                              ; ../coreutils-8.31/lib/hash.c:-146
0x00009a4b      4889e8         mov rax, rbp
0x00009a4e      660fefc0       pxor xmm0, xmm0                         ; ../coreutils-8.31/lib/hash.c:-147
0x00009a52      48d1e8         shr rax, 1
0x00009a55      83e501         and ebp, 1
0x00009a58      4809e8         or rax, rbp
0x00009a5b      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009a60      f30f58c0       addss xmm0, xmm0
0x00009a64      eba4           jmp 0x9a0a
0x00009a66      662e0f1f8400.  nop word cs:[rax + rax]
0x00009a70      f3480f2ce8     cvttss2si rbp, xmm0
0x00009a75      e9cefeffff     jmp 0x9948
0x00009a7a      b901000000     mov ecx, 1
0x00009a7f      e9e2feffff     jmp 0x9966
0x00009a84      6690           nop
0x00009a86      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/hash.c:-130
;-- hash_clear:
0x00009a90      4154           push r12
0x00009a92      55             push rbp
0x00009a93      4889fd         mov rbp, rdi
0x00009a96      53             push rbx
0x00009a97      4c8b27         mov r12, qword [rdi]                    ; ../coreutils-8.31/lib/hash.c:-134
0x00009a9a      4c3b6708       cmp r12, qword [rdi + 8]
0x00009a9e      736b           jae 0x9b0b
0x00009aa0      49833c2400     cmp qword [r12], 0
0x00009aa5      745a           je 0x9b01
0x00009aa7      498b5c2408     mov rbx, qword [r12 + 8]
0x00009aac      488b4540       mov rax, qword [rbp + 0x40]
0x00009ab0      4885db         test rbx, rbx
0x00009ab3      7430           je 0x9ae5
0x00009ab5      0f1f00         nop dword [rax]
0x00009ab8      4885c0         test rax, rax
0x00009abb      7409           je 0x9ac6
0x00009abd      488b3b         mov rdi, qword [rbx]
0x00009ac0      ffd0           call rax
0x00009ac2      488b4540       mov rax, qword [rbp + 0x40]
0x00009ac6      488b5308       mov rdx, qword [rbx + 8]
0x00009aca      488b4d48       mov rcx, qword [rbp + 0x48]
0x00009ace      48c703000000.  mov qword [rbx], 0
0x00009ad5      4885d2         test rdx, rdx
0x00009ad8      48894b08       mov qword [rbx + 8], rcx
0x00009adc      48895d48       mov qword [rbp + 0x48], rbx
0x00009ae0      4889d3         mov rbx, rdx
0x00009ae3      75d3           jne 0x9ab8
0x00009ae5      4885c0         test rax, rax
0x00009ae8      7406           je 0x9af0
0x00009aea      498b3c24       mov rdi, qword [r12]
0x00009aee      ffd0           call rax
0x00009af0      49c704240000.  mov qword [r12], 0
0x00009af8      49c744240800.  mov qword [r12 + 8], 0
0x00009b01      4983c410       add r12, 0x10
0x00009b05      4c396508       cmp qword [rbp + 8], r12                ; ../coreutils-8.31/lib/hash.c:-310
0x00009b09      7795           ja 0x9aa0
0x00009b0b      48c745180000.  mov qword [rbp + 0x18], 0
0x00009b13      48c745200000.  mov qword [rbp + 0x20], 0
0x00009b1b      5b             pop rbx
0x00009b1c      5d             pop rbp
0x00009b1d      415c           pop r12
0x00009b1f      c3             ret
;-- hash_free:
0x00009b20      4154           push r12
0x00009b22      55             push rbp
0x00009b23      4989fc         mov r12, rdi
0x00009b26      53             push rbx                                ; ../coreutils-8.31/lib/hash.c:-307
0x00009b27      48837f4000     cmp qword [rdi + 0x40], 0
0x00009b2c      488b2f         mov rbp, qword [rdi]
0x00009b2f      488b4708       mov rax, qword [rdi + 8]
0x00009b33      744e           je 0x9b83                               ; ../coreutils-8.31/lib/hash.c:-305
0x00009b35      48837f2000     cmp qword [rdi + 0x20], 0
0x00009b3a      7447           je 0x9b83
0x00009b3c      4839c5         cmp rbp, rax
0x00009b3f      737b           jae 0x9bbc
0x00009b41      0f1f80000000.  nop dword [rax]
0x00009b48      488b7d00       mov rdi, qword [rbp]
0x00009b4c      4885ff         test rdi, rdi
0x00009b4f      7425           je 0x9b76
0x00009b51      4889eb         mov rbx, rbp
0x00009b54      eb0d           jmp 0x9b63
0x00009b56      662e0f1f8400.  nop word cs:[rax + rax]
0x00009b60      488b3b         mov rdi, qword [rbx]
0x00009b63      41ff542440     call qword [r12 + 0x40]                 ; segment.PHDR
0x00009b68      488b5b08       mov rbx, qword [rbx + 8]
0x00009b6c      4885db         test rbx, rbx
0x00009b6f      75ef           jne 0x9b60
0x00009b71      498b442408     mov rax, qword [r12 + 8]
0x00009b76      4883c510       add rbp, 0x10
0x00009b7a      4839e8         cmp rax, rbp
0x00009b7d      77c9           ja 0x9b48
0x00009b7f      498b2c24       mov rbp, qword [r12]
0x00009b83      4839c5         cmp rbp, rax
0x00009b86      7334           jae 0x9bbc
0x00009b88      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/hash.c:93
0x00009b90      488b7d08       mov rdi, qword [rbp + 8]
0x00009b94      4885ff         test rdi, rdi
0x00009b97      7418           je 0x9bb1
0x00009b99      0f1f80000000.  nop dword [rax]
0x00009ba0      488b5f08       mov rbx, qword [rdi + 8]
0x00009ba4      e8f781ffff     call sym..plt.got                       ; ../coreutils-8.31/lib/hash.c:98
0x00009ba9      4885db         test rbx, rbx
0x00009bac      4889df         mov rdi, rbx
0x00009baf      75ef           jne 0x9ba0
0x00009bb1      4883c510       add rbp, 0x10                           ; ../coreutils-8.31/lib/hash.c:99
0x00009bb5      49396c2408     cmp qword [r12 + 8], rbp
0x00009bba      77d4           ja 0x9b90
0x00009bbc      498b7c2448     mov rdi, qword [r12 + 0x48]
0x00009bc1      4885ff         test rdi, rdi
0x00009bc4      741b           je 0x9be1
0x00009bc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009bd0      488b5f08       mov rbx, qword [rdi + 8]
0x00009bd4      e8c781ffff     call sym..plt.got
0x00009bd9      4885db         test rbx, rbx
0x00009bdc      4889df         mov rdi, rbx
0x00009bdf      75ef           jne 0x9bd0
0x00009be1      498b3c24       mov rdi, qword [r12]
0x00009be5      e8b681ffff     call sym..plt.got
0x00009bea      5b             pop rbx
0x00009beb      4c89e7         mov rdi, r12
0x00009bee      5d             pop rbp
0x00009bef      415c           pop r12
0x00009bf1      e9aa81ffff     jmp sym..plt.got                        ; ../coreutils-8.31/lib/hash.c:107
0x00009bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_rehash:
0x00009c00      4154           push r12
0x00009c02      55             push rbp
0x00009c03      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/hash.c:108
0x00009c06      53             push rbx
0x00009c07      4883ec60       sub rsp, 0x60
0x00009c0b      4c8b6728       mov r12, qword [rdi + 0x28]
0x00009c0f      64488b042528.  mov rax, qword fs:[0x28]
0x00009c18      4889442458     mov qword [rsp + 0x58], rax
0x00009c1d      31c0           xor eax, eax
0x00009c1f      41807c241000   cmp byte [r12 + 0x10], 0
0x00009c25      7551           jne 0x9c78
0x00009c27      4885f6         test rsi, rsi
0x00009c2a      0f8878010000   js 0x9da8
0x00009c30      660fefc0       pxor xmm0, xmm0
0x00009c34      f3480f2ac6     cvtsi2ss xmm0, rsi                      ; ../coreutils-8.31/lib/hash.c:156
0x00009c39      f3410f5e4424.  divss xmm0, dword [r12 + 8]
0x00009c40      0f2e05c52600.  ucomiss xmm0, dword [0x0000c30c]
0x00009c47      0f8333010000   jae 0x9d80
0x00009c4d      0f2e05bc2600.  ucomiss xmm0, dword [0x0000c310]
0x00009c54      0f8276010000   jb 0x9dd0
0x00009c5a      f30f5c05ae26.  subss xmm0, dword [0x0000c310]          ; ../coreutils-8.31/lib/hash.c:161
0x00009c62      48b800000000.  movabs rax, 0x8000000000000000
0x00009c6c      f3480f2cf0     cvttss2si rsi, xmm0
0x00009c71      4831c6         xor rsi, rax                            ; ../coreutils-8.31/lib/bitrotate.h:35
0x00009c74      0f1f4000       nop dword [rax]
0x00009c78      4889f7         mov rdi, rsi
0x00009c7b      e8e0f3ffff     call sym.next_prime
0x00009c80      ba08000000     mov edx, 8
0x00009c85      4889c3         mov rbx, rax
0x00009c88      31c9           xor ecx, ecx
0x00009c8a      4889d0         mov rax, rdx
0x00009c8d      48f7e3         mul rbx
0x00009c90      0f8099010000   jo 0x9e2f
0x00009c96      4885c0         test rax, rax
0x00009c99      b801000000     mov eax, 1
0x00009c9e      480f48c8       cmovs rcx, rax
0x00009ca2      4885db         test rbx, rbx
0x00009ca5      0f84d5000000   je 0x9d80
0x00009cab      83e101         and ecx, 1
0x00009cae      0f85cc000000   jne 0x9d80
0x00009cb4      48395d10       cmp qword [rbp + 0x10], rbx
0x00009cb8      0f8422010000   je 0x9de0
0x00009cbe      be10000000     mov esi, 0x10
0x00009cc3      4889df         mov rdi, rbx
0x00009cc6      e8c57effff     call sym.imp.calloc
0x00009ccb      4885c0         test rax, rax
0x00009cce      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/lib/bitrotate.h:-72
0x00009cd2      0f84a8000000   je 0x9d80
0x00009cd8      48895c2410     mov qword [rsp + 0x10], rbx
0x00009cdd      48c1e304       shl rbx, 4
0x00009ce1      4c89642428     mov qword [rsp + 0x28], r12
0x00009ce6      4801c3         add rbx, rax
0x00009ce9      488b4530       mov rax, qword [rbp + 0x30]
0x00009ced      4989e4         mov r12, rsp
0x00009cf0      31d2           xor edx, edx
0x00009cf2      4889ee         mov rsi, rbp
0x00009cf5      4c89e7         mov rdi, r12
0x00009cf8      48895c2408     mov qword [rsp + 8], rbx
0x00009cfd      48c744241800.  mov qword [rsp + 0x18], 0
0x00009d06      4889442430     mov qword [rsp + 0x30], rax
0x00009d0b      488b4538       mov rax, qword [rbp + 0x38]
0x00009d0f      48c744242000.  mov qword [rsp + 0x20], 0
0x00009d18      4889442438     mov qword [rsp + 0x38], rax
0x00009d1d      488b4540       mov rax, qword [rbp + 0x40]
0x00009d21      4889442440     mov qword [rsp + 0x40], rax
0x00009d26      488b4548       mov rax, qword [rbp + 0x48]
0x00009d2a      4889442448     mov qword [rsp + 0x48], rax
0x00009d2f      e8bcf5ffff     call sym.transfer_entries
0x00009d34      84c0           test al, al
0x00009d36      89c3           mov ebx, eax
0x00009d38      0f85b2000000   jne 0x9df0
0x00009d3e      488b442448     mov rax, qword [rsp + 0x48]
0x00009d43      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/bitrotate.h:-53
0x00009d48      4c89e6         mov rsi, r12
0x00009d4b      4889ef         mov rdi, rbp
0x00009d4e      48894548       mov qword [rbp + 0x48], rax
0x00009d52      e899f5ffff     call sym.transfer_entries
0x00009d57      84c0           test al, al
0x00009d59      0f84da000000   je 0x9e39
0x00009d5f      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/bitrotate.h:-43
0x00009d61      4c89e6         mov rsi, r12
0x00009d64      4889ef         mov rdi, rbp
0x00009d67      e884f5ffff     call sym.transfer_entries
0x00009d6c      84c0           test al, al
0x00009d6e      0f84c5000000   je 0x9e39
0x00009d74      488b3c24       mov rdi, qword [rsp]                    ; ../coreutils-8.31/lib/bitrotate.h:-38
0x00009d78      e82380ffff     call sym..plt.got
0x00009d7d      eb03           jmp 0x9d82
0x00009d7f      90             nop
0x00009d80      31db           xor ebx, ebx
0x00009d82      488b4c2458     mov rcx, qword [rsp + 0x58]
0x00009d87      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009d90      89d8           mov eax, ebx
0x00009d92      0f8592000000   jne 0x9e2a
0x00009d98      4883c460       add rsp, 0x60
0x00009d9c      5b             pop rbx
0x00009d9d      5d             pop rbp
0x00009d9e      415c           pop r12
0x00009da0      c3             ret
0x00009da1      0f1f80000000.  nop dword [rax]
0x00009da8      4889f0         mov rax, rsi                            ; ../coreutils-8.31/lib/bitrotate.h:-37
0x00009dab      660fefc0       pxor xmm0, xmm0
0x00009daf      48d1e8         shr rax, 1
0x00009db2      83e601         and esi, 1
0x00009db5      4809f0         or rax, rsi
0x00009db8      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009dbd      f30f58c0       addss xmm0, xmm0
0x00009dc1      e973feffff     jmp 0x9c39
0x00009dc6      662e0f1f8400.  nop word cs:[rax + rax]
0x00009dd0      f3480f2cf0     cvttss2si rsi, xmm0
0x00009dd5      e99efeffff     jmp 0x9c78
0x00009dda      660f1f440000   nop word [rax + rax]
0x00009de0      bb01000000     mov ebx, 1
0x00009de5      eb9b           jmp 0x9d82
0x00009de7      660f1f840000.  nop word [rax + rax]
0x00009df0      488b7d00       mov rdi, qword [rbp]
0x00009df4      e8a77fffff     call sym..plt.got
0x00009df9      488b0424       mov rax, qword [rsp]
0x00009dfd      48894500       mov qword [rbp], rax
0x00009e01      488b442408     mov rax, qword [rsp + 8]
0x00009e06      48894508       mov qword [rbp + 8], rax
0x00009e0a      488b442410     mov rax, qword [rsp + 0x10]
0x00009e0f      48894510       mov qword [rbp + 0x10], rax
0x00009e13      488b442418     mov rax, qword [rsp + 0x18]
0x00009e18      48894518       mov qword [rbp + 0x18], rax
0x00009e1c      488b442448     mov rax, qword [rsp + 0x48]             ; ../coreutils-8.31/lib/bitrotate.h:-12
0x00009e21      48894548       mov qword [rbp + 0x48], rax
0x00009e25      e958ffffff     jmp 0x9d82
0x00009e2a      e8817cffff     call sym.imp.__stack_chk_fail
0x00009e2f      b901000000     mov ecx, 1
0x00009e34      e95dfeffff     jmp 0x9c96
0x00009e39      e8527bffff     call sym.imp.abort
0x00009e3e      6690           nop
;-- hash_insert_if_absent:
0x00009e40      4155           push r13
0x00009e42      4154           push r12
0x00009e44      55             push rbp
0x00009e45      53             push rbx
0x00009e46      4883ec18       sub rsp, 0x18
0x00009e4a      64488b042528.  mov rax, qword fs:[0x28]
0x00009e53      4889442408     mov qword [rsp + 8], rax
0x00009e58      31c0           xor eax, eax
0x00009e5a      4885f6         test rsi, rsi
0x00009e5d      0f84ba010000   je 0xa01d
0x00009e63      4989e4         mov r12, rsp
0x00009e66      31c9           xor ecx, ecx
0x00009e68      4989d5         mov r13, rdx
0x00009e6b      4c89e2         mov rdx, r12
0x00009e6e      4889fb         mov rbx, rdi
0x00009e71      4889f5         mov rbp, rsi
0x00009e74      e8d7f2ffff     call sym.hash_find_entry
0x00009e79      4885c0         test rax, rax
0x00009e7c      4889c2         mov rdx, rax
0x00009e7f      742f           je 0x9eb0
0x00009e81      31c0           xor eax, eax
0x00009e83      4d85ed         test r13, r13
0x00009e86      7404           je 0x9e8c
0x00009e88      49895500       mov qword [r13], rdx
0x00009e8c      488b4c2408     mov rcx, qword [rsp + 8]
0x00009e91      6448330c2528.  xor rcx, qword fs:[0x28]
0x00009e9a      0f851f020000   jne 0xa0bf
0x00009ea0      4883c418       add rsp, 0x18
0x00009ea4      5b             pop rbx
0x00009ea5      5d             pop rbp
0x00009ea6      415c           pop r12
0x00009ea8      415d           pop r13
0x00009eaa      c3             ret
0x00009eab      0f1f440000     nop dword [rax + rax]
0x00009eb0      488b4318       mov rax, qword [rbx + 0x18]
0x00009eb4      4885c0         test rax, rax
0x00009eb7      7877           js 0x9f30
0x00009eb9      660fefc9       pxor xmm1, xmm1
0x00009ebd      488b5328       mov rdx, qword [rbx + 0x28]
0x00009ec1      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009ec6      488b4310       mov rax, qword [rbx + 0x10]
0x00009eca      4885c0         test rax, rax
0x00009ecd      0f8887000000   js 0x9f5a
0x00009ed3      660fefc0       pxor xmm0, xmm0
0x00009ed7      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009edc      f30f594208     mulss xmm0, dword [rdx + 8]             ; ../coreutils-8.31/lib/bitrotate.h:15
0x00009ee1      0f2ec8         ucomiss xmm1, xmm0
0x00009ee4      0f8796000000   ja 0x9f80
0x00009eea      4c8b2424       mov r12, qword [rsp]
0x00009eee      49833c2400     cmp qword [r12], 0
0x00009ef3      0f842f010000   je 0xa028
0x00009ef9      488b4348       mov rax, qword [rbx + 0x48]
0x00009efd      4885c0         test rax, rax
0x00009f00      0f843a010000   je 0xa040
0x00009f06      488b5008       mov rdx, qword [rax + 8]
0x00009f0a      48895348       mov qword [rbx + 0x48], rdx
0x00009f0e      498b542408     mov rdx, qword [r12 + 8]
0x00009f13      488928         mov qword [rax], rbp
0x00009f16      48895008       mov qword [rax + 8], rdx
0x00009f1a      4989442408     mov qword [r12 + 8], rax
0x00009f1f      b801000000     mov eax, 1
0x00009f24      4883432001     add qword [rbx + 0x20], 1
0x00009f29      e95effffff     jmp 0x9e8c
0x00009f2e      6690           nop
0x00009f30      4889c2         mov rdx, rax
0x00009f33      660fefc9       pxor xmm1, xmm1
0x00009f37      83e001         and eax, 1
0x00009f3a      48d1ea         shr rdx, 1
0x00009f3d      4809c2         or rdx, rax
0x00009f40      488b4310       mov rax, qword [rbx + 0x10]
0x00009f44      f3480f2aca     cvtsi2ss xmm1, rdx                      ; ../coreutils-8.31/lib/bitrotate.h:-3
0x00009f49      488b5328       mov rdx, qword [rbx + 0x28]
0x00009f4d      4885c0         test rax, rax
0x00009f50      f30f58c9       addss xmm1, xmm1
0x00009f54      0f8979ffffff   jns 0x9ed3
0x00009f5a      4889c1         mov rcx, rax
0x00009f5d      660fefc0       pxor xmm0, xmm0
0x00009f61      48d1e9         shr rcx, 1
0x00009f64      83e001         and eax, 1                              ; ../coreutils-8.31/lib/bitrotate.h:1
0x00009f67      4809c1         or rcx, rax
0x00009f6a      f3480f2ac1     cvtsi2ss xmm0, rcx
0x00009f6f      f30f58c0       addss xmm0, xmm0
0x00009f73      e964ffffff     jmp 0x9edc
0x00009f78      0f1f84000000.  nop dword [rax + rax]
0x00009f80      488d7b28       lea rdi, [rbx + 0x28]
0x00009f84      e8e7f2ffff     call sym.check_tuning.isra.0
0x00009f89      488b4310       mov rax, qword [rbx + 0x10]
0x00009f8d      488b5328       mov rdx, qword [rbx + 0x28]
0x00009f91      4885c0         test rax, rax
0x00009f94      f30f105208     movss xmm2, dword [rdx + 8]
0x00009f99      0f88c1000000   js 0xa060
0x00009f9f      660fefc0       pxor xmm0, xmm0
0x00009fa3      f3480f2ac0     cvtsi2ss xmm0, rax
0x00009fa8      488b4318       mov rax, qword [rbx + 0x18]
0x00009fac      4885c0         test rax, rax
0x00009faf      0f88cb000000   js 0xa080
0x00009fb5      660fefc9       pxor xmm1, xmm1
0x00009fb9      f3480f2ac8     cvtsi2ss xmm1, rax
0x00009fbe      0f28da         movaps xmm3, xmm2
0x00009fc1      f30f59d8       mulss xmm3, xmm0
0x00009fc5      0f2ecb         ucomiss xmm1, xmm3
0x00009fc8      0f861cffffff   jbe 0x9eea
0x00009fce      807a1000       cmp byte [rdx + 0x10], 0
0x00009fd2      f30f59420c     mulss xmm0, dword [rdx + 0xc]
0x00009fd7      7504           jne 0x9fdd
0x00009fd9      f30f59c2       mulss xmm0, xmm2
0x00009fdd      0f2e05282300.  ucomiss xmm0, dword [0x0000c30c]
0x00009fe4      736d           jae 0xa053
0x00009fe6      0f2e05232300.  ucomiss xmm0, dword [0x0000c310]
0x00009fed      0f83ad000000   jae 0xa0a0
0x00009ff3      f3480f2cf0     cvttss2si rsi, xmm0
0x00009ff8      4889df         mov rdi, rbx
0x00009ffb      e800fcffff     call sym.hash_rehash
0x0000a000      84c0           test al, al
0x0000a002      744f           je 0xa053
0x0000a004      31c9           xor ecx, ecx
0x0000a006      4c89e2         mov rdx, r12
0x0000a009      4889ee         mov rsi, rbp
0x0000a00c      4889df         mov rdi, rbx
0x0000a00f      e83cf1ffff     call sym.hash_find_entry
0x0000a014      4885c0         test rax, rax
0x0000a017      0f84cdfeffff   je 0x9eea
0x0000a01d      e86e79ffff     call sym.imp.abort
0x0000a022      660f1f440000   nop word [rax + rax]
0x0000a028      49892c24       mov qword [r12], rbp
0x0000a02c      b801000000     mov eax, 1
0x0000a031      4883432001     add qword [rbx + 0x20], 1
0x0000a036      4883431801     add qword [rbx + 0x18], 1
0x0000a03b      e94cfeffff     jmp 0x9e8c
0x0000a040      bf10000000     mov edi, 0x10
0x0000a045      e8d67bffff     call sym.imp.malloc
0x0000a04a      4885c0         test rax, rax
0x0000a04d      0f85bbfeffff   jne 0x9f0e
0x0000a053      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000a058      e92ffeffff     jmp 0x9e8c
0x0000a05d      0f1f00         nop dword [rax]
0x0000a060      4889c1         mov rcx, rax
0x0000a063      660fefc0       pxor xmm0, xmm0
0x0000a067      48d1e9         shr rcx, 1
0x0000a06a      83e001         and eax, 1
0x0000a06d      4809c1         or rcx, rax
0x0000a070      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000a075      f30f58c0       addss xmm0, xmm0
0x0000a079      e92affffff     jmp 0x9fa8
0x0000a07e      6690           nop
0x0000a080      4889c1         mov rcx, rax
0x0000a083      660fefc9       pxor xmm1, xmm1
0x0000a087      48d1e9         shr rcx, 1
0x0000a08a      83e001         and eax, 1
0x0000a08d      4809c1         or rcx, rax
0x0000a090      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a095      f30f58c9       addss xmm1, xmm1
0x0000a099      e920ffffff     jmp 0x9fbe
0x0000a09e      6690           nop
0x0000a0a0      f30f5c056822.  subss xmm0, dword [0x0000c310]
0x0000a0a8      48b800000000.  movabs rax, 0x8000000000000000
0x0000a0b2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a0b7      4831c6         xor rsi, rax
0x0000a0ba      e939ffffff     jmp 0x9ff8
0x0000a0bf      e8ec79ffff     call sym.imp.__stack_chk_fail
0x0000a0c4      6690           nop
0x0000a0c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- hash_insert:
0x0000a0d0      53             push rbx
0x0000a0d1      4889f3         mov rbx, rsi
0x0000a0d4      4883ec10       sub rsp, 0x10
0x0000a0d8      4889e2         mov rdx, rsp
0x0000a0db      64488b042528.  mov rax, qword fs:[0x28]
0x0000a0e4      4889442408     mov qword [rsp + 8], rax
0x0000a0e9      31c0           xor eax, eax
0x0000a0eb      e850fdffff     call sym.hash_insert_if_absent
0x0000a0f0      83f8ff         cmp eax, 0xffffffff
0x0000a0f3      742b           je 0xa120
0x0000a0f5      85c0           test eax, eax
0x0000a0f7      7504           jne 0xa0fd
0x0000a0f9      488b1c24       mov rbx, qword [rsp]
0x0000a0fd      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a102      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a10b      4889d8         mov rax, rbx
0x0000a10e      7514           jne 0xa124
0x0000a110      4883c410       add rsp, 0x10
0x0000a114      5b             pop rbx
0x0000a115      c3             ret
0x0000a116      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a120      31db           xor ebx, ebx
0x0000a122      ebd9           jmp 0xa0fd
0x0000a124      e88779ffff     call sym.imp.__stack_chk_fail
0x0000a129      0f1f80000000.  nop dword [rax]
;-- hash_delete:
0x0000a130      4154           push r12
0x0000a132      55             push rbp
0x0000a133      b901000000     mov ecx, 1
0x0000a138      53             push rbx
0x0000a139      4889fb         mov rbx, rdi
0x0000a13c      4883ec10       sub rsp, 0x10
0x0000a140      4889e2         mov rdx, rsp
0x0000a143      64488b042528.  mov rax, qword fs:[0x28]
0x0000a14c      4889442408     mov qword [rsp + 8], rax
0x0000a151      31c0           xor eax, eax
0x0000a153      e8f8efffff     call sym.hash_find_entry
0x0000a158      4885c0         test rax, rax
0x0000a15b      4889c5         mov rbp, rax
0x0000a15e      740f           je 0xa16f
0x0000a160      488b0424       mov rax, qword [rsp]
0x0000a164      48836b2001     sub qword [rbx + 0x20], 1
0x0000a169      48833800       cmp qword [rax], 0
0x0000a16d      7421           je 0xa190
0x0000a16f      488b4c2408     mov rcx, qword [rsp + 8]
0x0000a174      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a17d      4889e8         mov rax, rbp
0x0000a180      0f85a8010000   jne 0xa32e
0x0000a186      4883c410       add rsp, 0x10
0x0000a18a      5b             pop rbx
0x0000a18b      5d             pop rbp
0x0000a18c      415c           pop r12
0x0000a18e      c3             ret
0x0000a18f      90             nop
0x0000a190      488b4318       mov rax, qword [rbx + 0x18]
0x0000a194      4883e801       sub rax, 1
0x0000a198      4885c0         test rax, rax
0x0000a19b      48894318       mov qword [rbx + 0x18], rax
0x0000a19f      0f88fb000000   js 0xa2a0
0x0000a1a5      660fefc0       pxor xmm0, xmm0
0x0000a1a9      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000a1ae      488b4310       mov rax, qword [rbx + 0x10]
0x0000a1b2      488b5328       mov rdx, qword [rbx + 0x28]
0x0000a1b6      4885c0         test rax, rax
0x0000a1b9      0f88c1000000   js 0xa280
0x0000a1bf      660fefc9       pxor xmm1, xmm1
0x0000a1c3      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000a1c8      f30f590a       mulss xmm1, dword [rdx]
0x0000a1cc      0f2ec8         ucomiss xmm1, xmm0
0x0000a1cf      769e           jbe 0xa16f
0x0000a1d1      488d7b28       lea rdi, [rbx + 0x28]
0x0000a1d5      e896f0ffff     call sym.check_tuning.isra.0
0x0000a1da      488b4310       mov rax, qword [rbx + 0x10]
0x0000a1de      488b5328       mov rdx, qword [rbx + 0x28]
0x0000a1e2      4885c0         test rax, rax
0x0000a1e5      0f8825010000   js 0xa310
0x0000a1eb      660fefc0       pxor xmm0, xmm0
0x0000a1ef      f3480f2ac0     cvtsi2ss xmm0, rax
0x0000a1f4      488b4318       mov rax, qword [rbx + 0x18]
0x0000a1f8      4885c0         test rax, rax
0x0000a1fb      0f88ef000000   js 0xa2f0
0x0000a201      660fefc9       pxor xmm1, xmm1
0x0000a205      f3480f2ac8     cvtsi2ss xmm1, rax
0x0000a20a      f30f1012       movss xmm2, dword [rdx]
0x0000a20e      f30f59d0       mulss xmm2, xmm0
0x0000a212      0f2ed1         ucomiss xmm2, xmm1
0x0000a215      0f8654ffffff   jbe 0xa16f
0x0000a21b      807a1000       cmp byte [rdx + 0x10], 0
0x0000a21f      f30f594204     mulss xmm0, dword [rdx + 4]
0x0000a224      0f84b6000000   je 0xa2e0
0x0000a22a      0f2e05df2000.  ucomiss xmm0, dword [0x0000c310]
0x0000a231      0f8389000000   jae 0xa2c0
0x0000a237      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a23c      4889df         mov rdi, rbx
0x0000a23f      e8bcf9ffff     call sym.hash_rehash
0x0000a244      84c0           test al, al
0x0000a246      0f8523ffffff   jne 0xa16f
0x0000a24c      488b7b48       mov rdi, qword [rbx + 0x48]
0x0000a250      4885ff         test rdi, rdi
0x0000a253      7414           je 0xa269
0x0000a255      0f1f00         nop dword [rax]
0x0000a258      4c8b6708       mov r12, qword [rdi + 8]
0x0000a25c      e83f7bffff     call sym..plt.got
0x0000a261      4d85e4         test r12, r12
0x0000a264      4c89e7         mov rdi, r12
0x0000a267      75ef           jne 0xa258
0x0000a269      48c743480000.  mov qword [rbx + 0x48], 0
0x0000a271      e9f9feffff     jmp 0xa16f
0x0000a276      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a280      4889c1         mov rcx, rax
0x0000a283      660fefc9       pxor xmm1, xmm1
0x0000a287      48d1e9         shr rcx, 1
0x0000a28a      83e001         and eax, 1
0x0000a28d      4809c1         or rcx, rax
0x0000a290      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a295      f30f58c9       addss xmm1, xmm1
0x0000a299      e92affffff     jmp 0xa1c8
0x0000a29e      6690           nop
0x0000a2a0      4889c2         mov rdx, rax
0x0000a2a3      660fefc0       pxor xmm0, xmm0
0x0000a2a7      48d1ea         shr rdx, 1
0x0000a2aa      83e001         and eax, 1
0x0000a2ad      4809c2         or rdx, rax
0x0000a2b0      f3480f2ac2     cvtsi2ss xmm0, rdx
0x0000a2b5      f30f58c0       addss xmm0, xmm0
0x0000a2b9      e9f0feffff     jmp 0xa1ae
0x0000a2be      6690           nop
0x0000a2c0      f30f5c054820.  subss xmm0, dword [0x0000c310]
0x0000a2c8      48b800000000.  movabs rax, 0x8000000000000000
0x0000a2d2      f3480f2cf0     cvttss2si rsi, xmm0
0x0000a2d7      4831c6         xor rsi, rax
0x0000a2da      e95dffffff     jmp 0xa23c
0x0000a2df      90             nop
0x0000a2e0      f30f594208     mulss xmm0, dword [rdx + 8]
0x0000a2e5      e940ffffff     jmp 0xa22a
0x0000a2ea      660f1f440000   nop word [rax + rax]
0x0000a2f0      4889c1         mov rcx, rax
0x0000a2f3      660fefc9       pxor xmm1, xmm1
0x0000a2f7      48d1e9         shr rcx, 1
0x0000a2fa      83e001         and eax, 1
0x0000a2fd      4809c1         or rcx, rax
0x0000a300      f3480f2ac9     cvtsi2ss xmm1, rcx
0x0000a305      f30f58c9       addss xmm1, xmm1
0x0000a309      e9fcfeffff     jmp 0xa20a
0x0000a30e      6690           nop
0x0000a310      4889c1         mov rcx, rax
0x0000a313      660fefc0       pxor xmm0, xmm0
0x0000a317      48d1e9         shr rcx, 1
0x0000a31a      83e001         and eax, 1
0x0000a31d      4809c1         or rcx, rax
0x0000a320      f3480f2ac1     cvtsi2ss xmm0, rcx
0x0000a325      f30f58c0       addss xmm0, xmm0
0x0000a329      e9c6feffff     jmp 0xa1f4
0x0000a32e      e87d77ffff     call sym.imp.__stack_chk_fail
0x0000a333      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a33d      0f1f00         nop dword [rax]
;-- i_ring_init:
0x0000a340      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:26
0x0000a344      48c747140000.  mov qword [rdi + 0x14], 0               ; ../coreutils-8.31/lib/i-ring.c:29
0x0000a34c      8937           mov dword [rdi], esi                    ; ../coreutils-8.31/lib/i-ring.c:32
0x0000a34e      897704         mov dword [rdi + 4], esi
0x0000a351      897708         mov dword [rdi + 8], esi
0x0000a354      89770c         mov dword [rdi + 0xc], esi
0x0000a357      897710         mov dword [rdi + 0x10], esi             ; ../coreutils-8.31/lib/i-ring.c:33
0x0000a35a      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:34
0x0000a35b      0f1f440000     nop dword [rax + rax]
;-- i_ring_empty:
0x0000a360      0fb6471c       movzx eax, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:38
0x0000a364      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:40
0x0000a365      90             nop
0x0000a366      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_push:
0x0000a370      0fb6571c       movzx edx, byte [rdi + 0x1c]            ; ../coreutils-8.31/lib/i-ring.c:44
0x0000a374      8b4f14         mov ecx, dword [rdi + 0x14]
0x0000a377      83f201         xor edx, 1
0x0000a37a      0fb6d2         movzx edx, dl
0x0000a37d      01d1           add ecx, edx
0x0000a37f      83e103         and ecx, 3
0x0000a382      89c8           mov eax, ecx
0x0000a384      4c8d0487       lea r8, [rdi + rax*4]
0x0000a388      418b00         mov eax, dword [r8]                     ; ../coreutils-8.31/lib/i-ring.c:46
0x0000a38b      418930         mov dword [r8], esi                     ; ../coreutils-8.31/lib/i-ring.c:47
0x0000a38e      8b7718         mov esi, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:49
0x0000a391      894f14         mov dword [rdi + 0x14], ecx             ; ../coreutils-8.31/lib/i-ring.c:48
0x0000a394      39ce           cmp esi, ecx                            ; ../coreutils-8.31/lib/i-ring.c:49
0x0000a396      7508           jne 0xa3a0
0x0000a398      01f2           add edx, esi                            ; ../coreutils-8.31/lib/i-ring.c:50
0x0000a39a      83e203         and edx, 3
0x0000a39d      895718         mov dword [rdi + 0x18], edx
0x0000a3a0      c6471c00       mov byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:51
0x0000a3a4      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:53
0x0000a3a5      90             nop
0x0000a3a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- i_ring_pop:
0x0000a3b0      807f1c00       cmp byte [rdi + 0x1c], 0                ; ../coreutils-8.31/lib/i-ring.c:57
0x0000a3b4      752f           jne 0xa3e5
0x0000a3b6      8b4714         mov eax, dword [rdi + 0x14]             ; ../coreutils-8.31/lib/i-ring.c:61
0x0000a3b9      8b7710         mov esi, dword [rdi + 0x10]             ; ../coreutils-8.31/lib/i-ring.c:62
0x0000a3bc      488d0c87       lea rcx, [rdi + rax*4]
0x0000a3c0      4889c2         mov rdx, rax                            ; ../coreutils-8.31/lib/i-ring.c:61
0x0000a3c3      8b01           mov eax, dword [rcx]
0x0000a3c5      8931           mov dword [rcx], esi                    ; ../coreutils-8.31/lib/i-ring.c:62
0x0000a3c7      3b5718         cmp edx, dword [rdi + 0x18]             ; ../coreutils-8.31/lib/i-ring.c:63
0x0000a3ca      7414           je 0xa3e0
0x0000a3cc      83c203         add edx, 3                              ; ../coreutils-8.31/lib/i-ring.c:66
0x0000a3cf      83e203         and edx, 3
0x0000a3d2      895714         mov dword [rdi + 0x14], edx
0x0000a3d5      c3             ret                                     ; ../coreutils-8.31/lib/i-ring.c:68
0x0000a3d6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a3e0      c6471c01       mov byte [rdi + 0x1c], 1                ; ../coreutils-8.31/lib/i-ring.c:64
0x0000a3e4      c3             ret
0x0000a3e5      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/i-ring.c:57
0x0000a3e9      e8a275ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/i-ring.c:60
0x0000a3ee      6690           nop
;-- locale_charset:
0x0000a3f0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/localcharset.c:688
0x0000a3f4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x0000a3f9      e84278ffff     call sym.imp.nl_langinfo
0x0000a3fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x0000a401      741d           je 0xa420
0x0000a403      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x0000a406      488d15131f00.  lea rdx, [0x0000c320]                   ; "ASCII"
0x0000a40d      480f44c2       cmove rax, rdx
0x0000a411      4883c408       add rsp, 8
0x0000a415      c3             ret
0x0000a416      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a420      488d05f91e00.  lea rax, [0x0000c320]                   ; "ASCII"
0x0000a427      4883c408       add rsp, 8
0x0000a42b      c3             ret
0x0000a42c      0f1f4000       nop dword [rax]
;-- openat_safer:
0x0000a430      4883ec58       sub rsp, 0x58                           ; ../coreutils-8.31/lib/openat-safer.c:30
0x0000a434      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a439      31c9           xor ecx, ecx
0x0000a43b      64488b042528.  mov rax, qword fs:[0x28]
0x0000a444      4889442418     mov qword [rsp + 0x18], rax
0x0000a449      31c0           xor eax, eax
0x0000a44b      f6c240         test dl, 0x40                           ; ../coreutils-8.31/lib/openat-safer.c:33 ; segment.PHDR
0x0000a44e      7528           jne 0xa478
0x0000a450      31c0           xor eax, eax
0x0000a452      e84976ffff     call sym.imp.openat                     ; fcntl2.h:-83
0x0000a457      89c7           mov edi, eax
0x0000a459      e8c2000000     call sym.fd_safer                       ; fcntl2.h:-82
0x0000a45e      488b742418     mov rsi, qword [rsp + 0x18]
0x0000a463      644833342528.  xor rsi, qword fs:[0x28]
0x0000a46c      752b           jne 0xa499
0x0000a46e      4883c458       add rsp, 0x58
0x0000a472      c3             ret
0x0000a473      0f1f440000     nop dword [rax + rax]                   ; fcntl2.h:-92
0x0000a478      488d442460     lea rax, [rsp + 0x60]
0x0000a47d      c70424180000.  mov dword [rsp], 0x18                   ; [0x18:4]=0x2390 rip
0x0000a484      8b4c2438       mov ecx, dword [rsp + 0x38]
0x0000a488      4889442408     mov qword [rsp + 8], rax
0x0000a48d      488d442420     lea rax, [rsp + 0x20]
0x0000a492      4889442410     mov qword [rsp + 0x10], rax
0x0000a497      ebb7           jmp 0xa450
0x0000a499      e81276ffff     call sym.imp.__stack_chk_fail           ; fcntl2.h:-82
0x0000a49e      6690           nop
;-- opendirat:
0x0000a4a0      4155           push r13                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a4a2      4154           push r12
0x0000a4a4      81ca00090900   or edx, 0x90900                         ; ../coreutils-8.31/lib/opendirat.c:38
0x0000a4aa      55             push rbp                                ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a4ab      53             push rbx
0x0000a4ac      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/opendirat.c:40
0x0000a4ae      4989cc         mov r12, rcx                            ; ../coreutils-8.31/lib/opendirat.c:37
0x0000a4b1      4883ec08       sub rsp, 8
0x0000a4b5      e876ffffff     call sym.openat_safer                   ; ../coreutils-8.31/lib/opendirat.c:40
0x0000a4ba      85c0           test eax, eax                           ; ../coreutils-8.31/lib/opendirat.c:42
0x0000a4bc      7852           js 0xa510
0x0000a4be      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000a4c0      89c3           mov ebx, eax
0x0000a4c2      e84978ffff     call sym.imp.fdopendir
0x0000a4c7      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/opendirat.c:45
0x0000a4ca      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/opendirat.c:44
0x0000a4cd      7419           je 0xa4e8                               ; ../coreutils-8.31/lib/opendirat.c:45
0x0000a4cf      41891c24       mov dword [r12], ebx                    ; ../coreutils-8.31/lib/opendirat.c:46
0x0000a4d3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a4d7      4889e8         mov rax, rbp
0x0000a4da      5b             pop rbx
0x0000a4db      5d             pop rbp
0x0000a4dc      415c           pop r12
0x0000a4de      415d           pop r13
0x0000a4e0      c3             ret
0x0000a4e1      0f1f80000000.  nop dword [rax]
0x0000a4e8      e8b374ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/opendirat.c:49
0x0000a4ed      448b28         mov r13d, dword [rax]
0x0000a4f0      4989c4         mov r12, rax
0x0000a4f3      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/opendirat.c:50
0x0000a4f5      e85676ffff     call sym.imp.close
0x0000a4fa      4889e8         mov rax, rbp                            ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a4fd      45892c24       mov dword [r12], r13d                   ; ../coreutils-8.31/lib/opendirat.c:51
0x0000a501      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a505      5b             pop rbx
0x0000a506      5d             pop rbp
0x0000a507      415c           pop r12
0x0000a509      415d           pop r13
0x0000a50b      c3             ret
0x0000a50c      0f1f4000       nop dword [rax]
0x0000a510      4883c408       add rsp, 8
0x0000a514      31ed           xor ebp, ebp                            ; ../coreutils-8.31/lib/opendirat.c:43
0x0000a516      5b             pop rbx                                 ; ../coreutils-8.31/lib/opendirat.c:54
0x0000a517      4889e8         mov rax, rbp
0x0000a51a      5d             pop rbp
0x0000a51b      415c           pop r12
0x0000a51d      415d           pop r13
0x0000a51f      c3             ret
;-- fd_safer:
0x0000a520      4155           push r13
0x0000a522      4154           push r12
0x0000a524      55             push rbp
0x0000a525      53             push rbx
0x0000a526      89fb           mov ebx, edi
0x0000a528      4883ec08       sub rsp, 8
0x0000a52c      83ff02         cmp edi, 2                              ; ../coreutils-8.31/lib/fd-safer.c:39
0x0000a52f      7721           ja 0xa552
0x0000a531      e82a030000     call sym.dup_safer                      ; ../coreutils-8.31/lib/fd-safer.c:41
0x0000a536      4189c4         mov r12d, eax
0x0000a539      e86274ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fd-safer.c:42
0x0000a53e      448b28         mov r13d, dword [rax]
0x0000a541      4889c5         mov rbp, rax
0x0000a544      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fd-safer.c:43
0x0000a546      e80576ffff     call sym.imp.close
0x0000a54b      4489e3         mov ebx, r12d                           ; ../coreutils-8.31/lib/fd-safer.c:45
0x0000a54e      44896d00       mov dword [rbp], r13d                   ; ../coreutils-8.31/lib/fd-safer.c:44
0x0000a552      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/fd-safer.c:49
0x0000a556      89d8           mov eax, ebx
0x0000a558      5b             pop rbx
0x0000a559      5d             pop rbp
0x0000a55a      415c           pop r12
0x0000a55c      415d           pop r13
0x0000a55e      c3             ret
0x0000a55f      90             nop
;-- rpl_fclose:
0x0000a560      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x0000a562      55             push rbp
0x0000a563      53             push rbx
0x0000a564      4889fb         mov rbx, rdi
0x0000a567      e88476ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000a56c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000a56e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x0000a571      7854           js 0xa5c7                               ; ../coreutils-8.31/lib/fclose.c:66
0x0000a573      e8e876ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x0000a578      85c0           test eax, eax
0x0000a57a      752c           jne 0xa5a8
0x0000a57c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000a57f      e86cc3ffff     call sym.rpl_fflush
0x0000a584      85c0           test eax, eax
0x0000a586      743c           je 0xa5c4
0x0000a588      e81374ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000a58d      448b20         mov r12d, dword [rax]
0x0000a590      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a593      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x0000a596      e8a574ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000a59b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000a59e      7530           jne 0xa5d0
0x0000a5a0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a5a1      5d             pop rbp
0x0000a5a2      415c           pop r12
0x0000a5a4      c3             ret
0x0000a5a5      0f1f00         nop dword [rax]
0x0000a5a8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000a5ab      e84076ffff     call sym.imp.fileno
0x0000a5b0      31f6           xor esi, esi
0x0000a5b2      ba01000000     mov edx, 1
0x0000a5b7      89c7           mov edi, eax
0x0000a5b9      e85275ffff     call sym.imp.lseek
0x0000a5be      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000a5c2      75b8           jne 0xa57c
0x0000a5c4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x0000a5c7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x0000a5c8      5d             pop rbp
0x0000a5c9      415c           pop r12
0x0000a5cb      e97074ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x0000a5d0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x0000a5d4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x0000a5d9      ebc5           jmp 0xa5a0
0x0000a5db      0f1f440000     nop dword [rax + rax]
;-- rpl_fcntl:
0x0000a5e0      4154           push r12                                ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a5e2      55             push rbp
0x0000a5e3      89fd           mov ebp, edi
0x0000a5e5      53             push rbx
0x0000a5e6      4883ec50       sub rsp, 0x50
0x0000a5ea      64488b042528.  mov rax, qword fs:[0x28]
0x0000a5f3      4889442418     mov qword [rsp + 0x18], rax
0x0000a5f8      31c0           xor eax, eax
0x0000a5fa      488d442470     lea rax, [rsp + 0x70]                   ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a5ff      85f6           test esi, esi                           ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a601      4889542430     mov qword [rsp + 0x30], rdx             ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a606      48894c2438     mov qword [rsp + 0x38], rcx
0x0000a60b      4c89442440     mov qword [rsp + 0x40], r8
0x0000a610      4889442408     mov qword [rsp + 8], rax                ; ../coreutils-8.31/lib/fcntl.c:209
0x0000a615      488d442420     lea rax, [rsp + 0x20]
0x0000a61a      4c894c2448     mov qword [rsp + 0x48], r9              ; ../coreutils-8.31/lib/fcntl.c:206
0x0000a61f      c70424100000.  mov dword [rsp], 0x10                   ; ../coreutils-8.31/lib/fcntl.c:209 ; [0x10:4]=0x3e0003
0x0000a626      4889442410     mov qword [rsp + 0x10], rax
0x0000a62b      0f8401020000   je 0xa832                               ; ../coreutils-8.31/lib/fcntl.c:210
0x0000a631      81fe06040000   cmp esi, 0x406
0x0000a637      7547           jne 0xa680
0x0000a639      488b442410     mov rax, qword [rsp + 0x10]             ; ../coreutils-8.31/lib/fcntl.c:221
0x0000a63e      833d174c2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0 ; ../coreutils-8.31/lib/fcntl.c:507 ; [0x20f25c:4]=0
0x0000a645      c70424180000.  mov dword [rsp], 0x18                   ; ../coreutils-8.31/lib/fcntl.c:221 ; [0x18:4]=0x2390 rip
0x0000a64c      448b6010       mov r12d, dword [rax + 0x10]
0x0000a650      4489e2         mov edx, r12d                           ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a653      0f882a010000   js 0xa783                               ; ../coreutils-8.31/lib/fcntl.c:507
0x0000a659      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a65b      be06040000     mov esi, 0x406
0x0000a660      e8bb73ffff     call sym.imp.fcntl
0x0000a665      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a667      89c3           mov ebx, eax                            ; ../coreutils-8.31/lib/fcntl.c:509
0x0000a669      0f8889010000   js 0xa7f8                               ; ../coreutils-8.31/lib/fcntl.c:510
0x0000a66f      c705e34b2000.  mov dword [obj.have_dupfd_cloexec.3326], 1 ; ../coreutils-8.31/lib/fcntl.c:512 ; [0x20f25c:4]=0
0x0000a679      eb45           jmp 0xa6c0
0x0000a67b      0f1f440000     nop dword [rax + rax]
0x0000a680      83fe0b         cmp esi, 0xb                            ; ../coreutils-8.31/lib/fcntl.c:258
0x0000a683      742b           je 0xa6b0
0x0000a685      7f59           jg 0xa6e0
0x0000a687      83fe04         cmp esi, 4
0x0000a68a      0f84d0000000   je 0xa760
0x0000a690      0f8fba000000   jg 0xa750
0x0000a696      83fe02         cmp esi, 2
0x0000a699      0f84c1000000   je 0xa760
0x0000a69f      7f0f           jg 0xa6b0
0x0000a6a1      83fe01         cmp esi, 1
0x0000a6a4      7562           jne 0xa708
0x0000a6a6      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a6b0      89ef           mov edi, ebp
0x0000a6b2      31c0           xor eax, eax
0x0000a6b4      e86773ffff     call sym.imp.fcntl
0x0000a6b9      89c3           mov ebx, eax
0x0000a6bb      0f1f440000     nop dword [rax + rax]
0x0000a6c0      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000a6c5      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000a6ce      89d8           mov eax, ebx
0x0000a6d0      0f8557010000   jne 0xa82d                              ; ../coreutils-8.31/lib/fcntl.c:355
0x0000a6d6      4883c450       add rsp, 0x50
0x0000a6da      5b             pop rbx
0x0000a6db      5d             pop rbp
0x0000a6dc      415c           pop r12
0x0000a6de      c3             ret
0x0000a6df      90             nop
0x0000a6e0      81fe07040000   cmp esi, 0x407
0x0000a6e6      7f48           jg 0xa730
0x0000a6e8      81fe06040000   cmp esi, 0x406
0x0000a6ee      7d70           jge 0xa760
0x0000a6f0      81fe01040000   cmp esi, 0x401
0x0000a6f6      74b8           je 0xa6b0
0x0000a6f8      81fe02040000   cmp esi, 0x402                          ; ../coreutils-8.31/lib/fcntl.c:183
0x0000a6fe      7460           je 0xa760
0x0000a700      81fe00040000   cmp esi, 0x400
0x0000a706      7458           je 0xa760
0x0000a708      8b0424         mov eax, dword [rsp]
0x0000a70b      83f82f         cmp eax, 0x2f
0x0000a70e      0f8736010000   ja 0xa84a
0x0000a714      4803442410     add rax, qword [rsp + 0x10]
0x0000a719      488b10         mov rdx, qword [rax]
0x0000a71c      89ef           mov edi, ebp
0x0000a71e      31c0           xor eax, eax
0x0000a720      e8fb72ffff     call sym.imp.fcntl
0x0000a725      89c3           mov ebx, eax
0x0000a727      eb97           jmp 0xa6c0
0x0000a729      0f1f80000000.  nop dword [rax]
0x0000a730      81fe09040000   cmp esi, 0x409
0x0000a736      7428           je 0xa760
0x0000a738      0f8c72ffffff   jl 0xa6b0
0x0000a73e      81fe0a040000   cmp esi, 0x40a
0x0000a744      75c2           jne 0xa708
0x0000a746      e965ffffff     jmp 0xa6b0                              ; ../coreutils-8.31/lib/fcntl.c:350
0x0000a74b      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a750      83fe09         cmp esi, 9
0x0000a753      0f8457ffffff   je 0xa6b0
0x0000a759      7f05           jg 0xa760
0x0000a75b      83fe08         cmp esi, 8
0x0000a75e      75a8           jne 0xa708
0x0000a760      8b0424         mov eax, dword [rsp]
0x0000a763      83f82f         cmp eax, 0x2f
0x0000a766      0f87e8000000   ja 0xa854
0x0000a76c      4803442410     add rax, qword [rsp + 0x10]
0x0000a771      8b10           mov edx, dword [rax]
0x0000a773      89ef           mov edi, ebp
0x0000a775      31c0           xor eax, eax
0x0000a777      e8a472ffff     call sym.imp.fcntl
0x0000a77c      89c3           mov ebx, eax
0x0000a77e      e93dffffff     jmp 0xa6c0
0x0000a783      31f6           xor esi, esi
0x0000a785      31c0           xor eax, eax
0x0000a787      e89472ffff     call sym.imp.fcntl
0x0000a78c      85c0           test eax, eax
0x0000a78e      89c3           mov ebx, eax
0x0000a790      0f882affffff   js 0xa6c0
0x0000a796      833dbf4a2000.  cmp dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20f25c:4]=0
0x0000a79d      0f851dffffff   jne 0xa6c0
0x0000a7a3      31c0           xor eax, eax
0x0000a7a5      be01000000     mov esi, 1
0x0000a7aa      89df           mov edi, ebx
0x0000a7ac      e86f72ffff     call sym.imp.fcntl
0x0000a7b1      85c0           test eax, eax
0x0000a7b3      781c           js 0xa7d1
0x0000a7b5      83c801         or eax, 1
0x0000a7b8      be02000000     mov esi, 2
0x0000a7bd      89df           mov edi, ebx
0x0000a7bf      89c2           mov edx, eax
0x0000a7c1      31c0           xor eax, eax
0x0000a7c3      e85872ffff     call sym.imp.fcntl
0x0000a7c8      83f8ff         cmp eax, 0xffffffff
0x0000a7cb      0f85effeffff   jne 0xa6c0
0x0000a7d1      e8ca71ffff     call sym.imp.__errno_location
0x0000a7d6      448b20         mov r12d, dword [rax]
0x0000a7d9      4889c5         mov rbp, rax
0x0000a7dc      89df           mov edi, ebx                            ; ../coreutils-8.31/lib/fcntl.c:446
0x0000a7de      e86d73ffff     call sym.imp.close                      ; ../coreutils-8.31/lib/fcntl.c:406
0x0000a7e3      bbffffffff     mov ebx, 0xffffffff                     ; -1
0x0000a7e8      44896500       mov dword [rbp], r12d
0x0000a7ec      e9cffeffff     jmp 0xa6c0
0x0000a7f1      0f1f80000000.  nop dword [rax]
0x0000a7f8      e8a371ffff     call sym.imp.__errno_location
0x0000a7fd      833816         cmp dword [rax], 0x16
0x0000a800      0f8569feffff   jne 0xa66f
0x0000a806      31f6           xor esi, esi
0x0000a808      31c0           xor eax, eax
0x0000a80a      4489e2         mov edx, r12d
0x0000a80d      89ef           mov edi, ebp                            ; ../coreutils-8.31/lib/fcntl.c:141
0x0000a80f      e80c72ffff     call sym.imp.fcntl
0x0000a814      85c0           test eax, eax
0x0000a816      89c3           mov ebx, eax
0x0000a818      0f88a2feffff   js 0xa6c0
0x0000a81e      c705344a2000.  mov dword [obj.have_dupfd_cloexec.3326], 0xffffffff ; [0x20f25c:4]=0
0x0000a828      e976ffffff     jmp 0xa7a3
0x0000a82d      e87e72ffff     call sym.imp.__stack_chk_fail
0x0000a832      488b442410     mov rax, qword [rsp + 0x10]
0x0000a837      31f6           xor esi, esi
0x0000a839      8b5010         mov edx, dword [rax + 0x10]
0x0000a83c      31c0           xor eax, eax
0x0000a83e      e8dd71ffff     call sym.imp.fcntl
0x0000a843      89c3           mov ebx, eax
0x0000a845      e976feffff     jmp 0xa6c0
0x0000a84a      488b442408     mov rax, qword [rsp + 8]
0x0000a84f      e9c5feffff     jmp 0xa719
0x0000a854      488b442408     mov rax, qword [rsp + 8]
0x0000a859      e913ffffff     jmp 0xa771
0x0000a85e      6690           nop
;-- dup_safer:
0x0000a860      ba03000000     mov edx, 3
0x0000a865      31f6           xor esi, esi
0x0000a867      31c0           xor eax, eax
0x0000a869      e972fdffff     jmp sym.rpl_fcntl
0x0000a86e      6690           nop
;-- __libc_csu_init:
0x0000a870      4157           push r15
0x0000a872      4156           push r14
0x0000a874      4989d7         mov r15, rdx
0x0000a877      4155           push r13
0x0000a879      4154           push r12
0x0000a87b      4c8d250e4120.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20e990
0x0000a882      55             push rbp
0x0000a883      488d2d0e4120.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20e998 ; "P$"
0x0000a88a      53             push rbx
0x0000a88b      4189fd         mov r13d, edi
0x0000a88e      4989f6         mov r14, rsi
0x0000a891      4c29e5         sub rbp, r12
0x0000a894      4883ec08       sub rsp, 8
0x0000a898      48c1fd03       sar rbp, 3
0x0000a89c      e8bf70ffff     call sym._init
0x0000a8a1      4885ed         test rbp, rbp
0x0000a8a4      7420           je 0xa8c6
0x0000a8a6      31db           xor ebx, ebx
0x0000a8a8      0f1f84000000.  nop dword [rax + rax]
0x0000a8b0      4c89fa         mov rdx, r15
0x0000a8b3      4c89f6         mov rsi, r14
0x0000a8b6      4489ef         mov edi, r13d
0x0000a8b9      41ff14dc       call qword [r12 + rbx*8]
0x0000a8bd      4883c301       add rbx, 1
0x0000a8c1      4839dd         cmp rbp, rbx
0x0000a8c4      75ea           jne 0xa8b0
0x0000a8c6      4883c408       add rsp, 8
0x0000a8ca      5b             pop rbx
0x0000a8cb      5d             pop rbp
0x0000a8cc      415c           pop r12
0x0000a8ce      415d           pop r13
0x0000a8d0      415e           pop r14
0x0000a8d2      415f           pop r15
0x0000a8d4      c3             ret
0x0000a8d5      90             nop
0x0000a8d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x0000a8e0      f3c3           ret
0x0000a8e2      662e0f1f8400.  nop word cs:[rax + rax]
0x0000a8ec      0f1f4000       nop dword [rax]
;-- atexit:
0x0000a8f0      488b15114720.  mov rdx, qword [obj.__dso_handle]       ; [0x20f008:8]=0x20f008 obj.__dso_handle
0x0000a8f7      31f6           xor esi, esi
0x0000a8f9      e93274ffff     jmp sym.imp.__cxa_atexit
0x0000a8fe      0000           add byte [rax], al
