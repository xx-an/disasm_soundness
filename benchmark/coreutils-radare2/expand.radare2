;-- section..plt:
;-- .plt:
0x00001400      ff354a6a2000   push qword [0x00207e50]                 ; [12] -r-x section size 768 named .plt
0x00001406      ff254c6a2000   jmp qword [0x00207e58]                  ; [0x207e58:8]=0
0x0000140c      0f1f4000       nop dword [rax]
;-- imp.__uflow:
0x00001410      ff254a6a2000   jmp qword [reloc.__uflow]               ; [0x207e60:8]=0x1416
0x00001416      6800000000     push 0
0x0000141b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001420      ff25426a2000   jmp qword [reloc.free]                  ; [0x207e68:8]=0x1426 ; "&\x14"
0x00001426      6801000000     push 1
0x0000142b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001430      ff253a6a2000   jmp qword [reloc.abort]                 ; [0x207e70:8]=0x1436 ; "6\x14"
0x00001436      6802000000     push 2
0x0000143b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001440      ff25326a2000   jmp qword [reloc.__errno_location]      ; [0x207e78:8]=0x1446 ; "F\x14"
0x00001446      6803000000     push 3
0x0000144b      e9b0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001450      ff252a6a2000   jmp qword [reloc.strncmp]               ; [0x207e80:8]=0x1456 ; "V\x14"
0x00001456      6804000000     push 4
0x0000145b      e9a0ffffff     jmp sym..plt
;-- imp._exit:
0x00001460      ff25226a2000   jmp qword [reloc._exit]                 ; [0x207e88:8]=0x1466 ; "f\x14"
0x00001466      6805000000     push 5
0x0000146b      e990ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001470      ff251a6a2000   jmp qword [reloc.__fpending]            ; [0x207e90:8]=0x1476 ; "v\x14"
0x00001476      6806000000     push 6
0x0000147b      e980ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001480      ff25126a2000   jmp qword [reloc.clearerr_unlocked]     ; [0x207e98:8]=0x1486
0x00001486      6807000000     push 7
0x0000148b      e970ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001490      ff250a6a2000   jmp qword [reloc.textdomain]            ; [0x207ea0:8]=0x1496
0x00001496      6808000000     push 8
0x0000149b      e960ffffff     jmp sym..plt
;-- imp.fclose:
0x000014a0      ff25026a2000   jmp qword [reloc.fclose]                ; [0x207ea8:8]=0x14a6
0x000014a6      6809000000     push 9
0x000014ab      e950ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000014b0      ff25fa692000   jmp qword [reloc.bindtextdomain]        ; [0x207eb0:8]=0x14b6
0x000014b6      680a000000     push 0xa
0x000014bb      e940ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000014c0      ff25f2692000   jmp qword [reloc.dcgettext]             ; [0x207eb8:8]=0x14c6
0x000014c6      680b000000     push 0xb
0x000014cb      e930ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000014d0      ff25ea692000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x207ec0:8]=0x14d6
0x000014d6      680c000000     push 0xc
0x000014db      e920ffffff     jmp sym..plt
;-- imp.strlen:
0x000014e0      ff25e2692000   jmp qword [reloc.strlen]                ; [0x207ec8:8]=0x14e6
0x000014e6      680d000000     push 0xd
0x000014eb      e910ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000014f0      ff25da692000   jmp qword [reloc.__stack_chk_fail]      ; [0x207ed0:8]=0x14f6
0x000014f6      680e000000     push 0xe
0x000014fb      e900ffffff     jmp sym..plt
;-- imp.getopt_long:
0x00001500      ff25d2692000   jmp qword [reloc.getopt_long]           ; [0x207ed8:8]=0x1506
0x00001506      680f000000     push 0xf
0x0000150b      e9f0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001510      ff25ca692000   jmp qword [reloc.mbrtowc]               ; [0x207ee0:8]=0x1516
0x00001516      6810000000     push 0x10
0x0000151b      e9e0feffff     jmp sym..plt
;-- imp.__overflow:
0x00001520      ff25c2692000   jmp qword [reloc.__overflow]            ; [0x207ee8:8]=0x1526 ; "&\x15"
0x00001526      6811000000     push 0x11
0x0000152b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001530      ff25ba692000   jmp qword [reloc.strrchr]               ; [0x207ef0:8]=0x1536 ; "6\x15"
0x00001536      6812000000     push 0x12
0x0000153b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001540      ff25b2692000   jmp qword [reloc.lseek]                 ; [0x207ef8:8]=0x1546 ; "F\x15"
0x00001546      6813000000     push 0x13
0x0000154b      e9b0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001550      ff25aa692000   jmp qword [reloc.__assert_fail]         ; [0x207f00:8]=0x1556 ; "V\x15"
0x00001556      6814000000     push 0x14
0x0000155b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001560      ff25a2692000   jmp qword [reloc.memset]                ; [0x207f08:8]=0x1566 ; "f\x15"
0x00001566      6815000000     push 0x15
0x0000156b      e990feffff     jmp sym..plt
;-- imp.strspn:
0x00001570      ff259a692000   jmp qword [reloc.strspn]                ; [0x207f10:8]=0x1576 ; "v\x15"
0x00001576      6816000000     push 0x16
0x0000157b      e980feffff     jmp sym..plt
;-- imp.posix_fadvise:
0x00001580      ff2592692000   jmp qword [reloc.posix_fadvise]         ; [0x207f18:8]=0x1586
0x00001586      6817000000     push 0x17
0x0000158b      e970feffff     jmp sym..plt
;-- imp.strndup:
0x00001590      ff258a692000   jmp qword [reloc.strndup]               ; [0x207f20:8]=0x1596
0x00001596      6818000000     push 0x18
0x0000159b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x000015a0      ff2582692000   jmp qword [reloc.memcmp]                ; [0x207f28:8]=0x15a6
0x000015a6      6819000000     push 0x19
0x000015ab      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000015b0      ff257a692000   jmp qword [reloc.fputs_unlocked]        ; [0x207f30:8]=0x15b6
0x000015b6      681a000000     push 0x1a
0x000015bb      e940feffff     jmp sym..plt
;-- imp.calloc:
0x000015c0      ff2572692000   jmp qword [reloc.calloc]                ; [0x207f38:8]=0x15c6
0x000015c6      681b000000     push 0x1b
0x000015cb      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x000015d0      ff256a692000   jmp qword [reloc.memcpy]                ; [0x207f40:8]=0x15d6
0x000015d6      681c000000     push 0x1c
0x000015db      e920feffff     jmp sym..plt
;-- imp.fileno:
0x000015e0      ff2562692000   jmp qword [reloc.fileno]                ; [0x207f48:8]=0x15e6
0x000015e6      681d000000     push 0x1d
0x000015eb      e910feffff     jmp sym..plt
;-- imp.malloc:
0x000015f0      ff255a692000   jmp qword [reloc.malloc]                ; [0x207f50:8]=0x15f6
0x000015f6      681e000000     push 0x1e
0x000015fb      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001600      ff2552692000   jmp qword [reloc.fflush]                ; [0x207f58:8]=0x1606
0x00001606      681f000000     push 0x1f
0x0000160b      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001610      ff254a692000   jmp qword [reloc.nl_langinfo]           ; [0x207f60:8]=0x1616
0x00001616      6820000000     push 0x20                               ; "@"
0x0000161b      e9e0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001620      ff2542692000   jmp qword [reloc.__freading]            ; [0x207f68:8]=0x1626 ; "&\x16"
0x00001626      6821000000     push 0x21                               ; '!'
0x0000162b      e9d0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001630      ff253a692000   jmp qword [reloc.realloc]               ; [0x207f70:8]=0x1636 ; "6\x16"
0x00001636      6822000000     push 0x22                               ; '"'
0x0000163b      e9c0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001640      ff2532692000   jmp qword [reloc.setlocale]             ; [0x207f78:8]=0x1646 ; "F\x16"
0x00001646      6823000000     push 0x23                               ; '#'
0x0000164b      e9b0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001650      ff252a692000   jmp qword [reloc.__printf_chk]          ; [0x207f80:8]=0x1656 ; "V\x16"
0x00001656      6824000000     push 0x24                               ; '$'
0x0000165b      e9a0fdffff     jmp sym..plt
;-- imp.error:
0x00001660      ff2522692000   jmp qword [reloc.error]                 ; [0x207f88:8]=0x1666 ; "f\x16"
0x00001666      6825000000     push 0x25                               ; '%'
0x0000166b      e990fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001670      ff251a692000   jmp qword [reloc.fseeko]                ; [0x207f90:8]=0x1676 ; "v\x16"
0x00001676      6826000000     push 0x26                               ; '&'
0x0000167b      e980fdffff     jmp sym..plt
;-- imp.fopen:
0x00001680      ff2512692000   jmp qword [reloc.fopen]                 ; [0x207f98:8]=0x1686
0x00001686      6827000000     push 0x27                               ; '''
0x0000168b      e970fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x00001690      ff250a692000   jmp qword [reloc.__cxa_atexit]          ; [0x207fa0:8]=0x1696
0x00001696      6828000000     push 0x28                               ; '('
0x0000169b      e960fdffff     jmp sym..plt
;-- imp.exit:
0x000016a0      ff2502692000   jmp qword [reloc.exit]                  ; [0x207fa8:8]=0x16a6
0x000016a6      6829000000     push 0x29                               ; ')'
0x000016ab      e950fdffff     jmp sym..plt
;-- imp.fwrite:
0x000016b0      ff25fa682000   jmp qword [reloc.fwrite]                ; [0x207fb0:8]=0x16b6
0x000016b6      682a000000     push 0x2a                               ; '*'
0x000016bb      e940fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000016c0      ff25f2682000   jmp qword [reloc.__fprintf_chk]         ; [0x207fb8:8]=0x16c6
0x000016c6      682b000000     push 0x2b                               ; '+'
0x000016cb      e930fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000016d0      ff25ea682000   jmp qword [reloc.mbsinit]               ; [0x207fc0:8]=0x16d6
0x000016d6      682c000000     push 0x2c                               ; ','
0x000016db      e920fdffff     jmp sym..plt
;-- imp.iswprint:
0x000016e0      ff25e2682000   jmp qword [reloc.iswprint]              ; [0x207fc8:8]=0x16e6
0x000016e6      682d000000     push 0x2d                               ; '-'
0x000016eb      e910fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x000016f0      ff25da682000   jmp qword [reloc.__ctype_b_loc]         ; [0x207fd0:8]=0x16f6
0x000016f6      682e000000     push 0x2e                               ; '.'
0x000016fb      e900fdffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001700      .qword 0x9066002068f225ff                              ; [13] -r-x section size 8 named .plt.got
0x00001708      0000           add byte [rax], al
0x0000170a      0000           add byte [rax], al
0x0000170c      0000           add byte [rax], al
0x0000170e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001710      4157           push r15                                ; [14] -r-x section size 15582 named .text
0x00001712      4156           push r14
0x00001714      4155           push r13
0x00001716      4154           push r12
0x00001718      55             push rbp
0x00001719      53             push rbx
0x0000171a      89fd           mov ebp, edi
0x0000171c      4889f3         mov rbx, rsi
0x0000171f      4883ec28       sub rsp, 0x28
0x00001723      488b3e         mov rdi, qword [rsi]
0x00001726      64488b042528.  mov rax, qword fs:[0x28]
0x0000172f      4889442418     mov qword [rsp + 0x18], rax
0x00001734      31c0           xor eax, eax
0x00001736      4c8d642416     lea r12, [rsp + 0x16]
0x0000173b      e850130000     call sym.set_program_name
0x00001740      488d357a4900.  lea rsi, [0x000060c1]
0x00001747      bf06000000     mov edi, 6
0x0000174c      e8effeffff     call sym.imp.setlocale
0x00001751      488d35563d00.  lea rsi, str.usr_local_share_locale     ; 0x54ae ; "/usr/local/share/locale"
0x00001758      488d3d263d00.  lea rdi, [0x00005485]                   ; "coreutils"
0x0000175f      e84cfdffff     call sym.imp.bindtextdomain
0x00001764      488d3d1a3d00.  lea rdi, [0x00005485]                   ; "coreutils"
0x0000176b      e820fdffff     call sym.imp.textdomain
0x00001770      488d3d291200.  lea rdi, sym.close_stdout               ; 0x29a0 ; "USH\x83\xec\bH\x8b=\xfbV "
0x00001777      e8643c0000     call sym.atexit
0x0000177c      c60571692000.  mov byte [obj.convert_entire_line], 1   ; [0x2080f4:1]=0
0x00001783      488d0dd66320.  lea rcx, obj.longopts                   ; 0x207b60
0x0000178a      488d152f4000.  lea rdx, obj.shortopts                  ; 0x57c0 ; "it:0::1::2::3::4::5::6::7::8::9::"
0x00001791      4531c0         xor r8d, r8d
0x00001794      4889de         mov rsi, rbx
0x00001797      89ef           mov edi, ebp
0x00001799      e862fdffff     call sym.imp.getopt_long
0x0000179e      83f8ff         cmp eax, 0xffffffff
0x000017a1      0f84ab000000   je 0x1852
0x000017a7      83f839         cmp eax, 0x39
0x000017aa      7f44           jg 0x17f0
0x000017ac      83f830         cmp eax, 0x30
0x000017af      7d5f           jge 0x1810
0x000017b1      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x000017b6      0f85c3020000   jne 0x1a7f
0x000017bc      488b3de56820.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000017c3      488b0d566820.  mov rcx, qword [obj.Version]            ; [0x208020:8]=0x5b4a str.8.31 ; "J["
0x000017ca      4c8d05f53c00.  lea r8, str.David_MacKenzie             ; 0x54c6 ; "David MacKenzie"
0x000017d1      488d15a93c00.  lea rdx, str.GNU_coreutils              ; 0x5481 ; "GNU coreutils"
0x000017d8      488d35253c00.  lea rsi, str.expand                     ; 0x5404 ; "expand"
0x000017df      4531c9         xor r9d, r9d
0x000017e2      31c0           xor eax, eax
0x000017e4      e897340000     call sym.version_etc
0x000017e9      31ff           xor edi, edi
0x000017eb      e8b0feffff     call sym.imp.exit
0x000017f0      83f869         cmp eax, 0x69
0x000017f3      743b           je 0x1830
0x000017f5      83f874         cmp eax, 0x74
0x000017f8      0f858f020000   jne 0x1a8d
0x000017fe      488b3dbb6820.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001805      e856090000     call sym.parse_tab_stops
0x0000180a      e974ffffff     jmp 0x1783
0x0000180f      90             nop
0x00001810      488b3da96820.  mov rdi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x2080c0:8]=0
0x00001817      4885ff         test rdi, rdi
0x0000181a      7420           je 0x183c
0x0000181c      4883ef01       sub rdi, 1
0x00001820      e83b090000     call sym.parse_tab_stops
0x00001825      e959ffffff     jmp 0x1783
0x0000182a      660f1f440000   nop word [rax + rax]
0x00001830      c605bd682000.  mov byte [obj.convert_entire_line], 0   ; [0x2080f4:1]=0
0x00001837      e947ffffff     jmp 0x1783
0x0000183c      4c89e7         mov rdi, r12
0x0000183f      88442416       mov byte [rsp + 0x16], al
0x00001843      c644241700     mov byte [rsp + 0x17], 0
0x00001848      e813090000     call sym.parse_tab_stops
0x0000184d      e931ffffff     jmp 0x1783
0x00001852      e8690c0000     call sym.finalize_tab_stops
0x00001857      4863055a6820.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x2080b8:4]=0
0x0000185e      31ff           xor edi, edi
0x00001860      39e8           cmp eax, ebp
0x00001862      7d04           jge 0x1868
0x00001864      488d3cc3       lea rdi, [rbx + rax*8]
0x00001868      e8430e0000     call sym.set_file_list
0x0000186d      31ff           xor edi, edi
0x0000186f      e85c0e0000     call sym.next_file
0x00001874      4885c0         test rax, rax
0x00001877      4889c5         mov rbp, rax
0x0000187a      0f84f4000000   je 0x1974
0x00001880      4c8d6c2407     lea r13, [rsp + 7]
0x00001885      4c8d642408     lea r12, [rsp + 8]
0x0000188a      48c744240800.  mov qword [rsp + 8], 0
0x00001893      4531f6         xor r14d, r14d
0x00001896      41bf01000000   mov r15d, 1
0x0000189c      eb59           jmp 0x18f7
0x0000189e      6690           nop
0x000018a0      4983c601       add r14, 1
0x000018a4      0f84f2010000   je 0x1a9c
0x000018aa      440fb63d4268.  movzx r15d, byte [obj.convert_entire_line] ; [0x2080f4:1]=0
0x000018b2      4584ff         test r15b, r15b
0x000018b5      7514           jne 0x18cb
0x000018b7      e834feffff     call sym.imp.__ctype_b_loc
0x000018bc      488b08         mov rcx, qword [rax]
0x000018bf      4863d3         movsxd rdx, ebx
0x000018c2      440fb73c51     movzx r15d, word [rcx + rdx*2]
0x000018c7      4183e701       and r15d, 1
0x000018cb      85db           test ebx, ebx
0x000018cd      0f88a1000000   js 0x1974
0x000018d3      488b3dce6720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000018da      488b4728       mov rax, qword [rdi + 0x28]
0x000018de      483b4730       cmp rax, qword [rdi + 0x30]
0x000018e2      0f83ba000000   jae 0x19a2
0x000018e8      488d5001       lea rdx, [rax + 1]
0x000018ec      48895728       mov qword [rdi + 0x28], rdx
0x000018f0      8818           mov byte [rax], bl
0x000018f2      83fb0a         cmp ebx, 0xa
0x000018f5      7493           je 0x188a
0x000018f7      488b4508       mov rax, qword [rbp + 8]
0x000018fb      483b4510       cmp rax, qword [rbp + 0x10]
0x000018ff      7350           jae 0x1951
0x00001901      488d5001       lea rdx, [rax + 1]
0x00001905      48895508       mov qword [rbp + 8], rdx
0x00001909      0fb618         movzx ebx, byte [rax]
0x0000190c      4584ff         test r15b, r15b
0x0000190f      74c2           je 0x18d3
0x00001911      83fb09         cmp ebx, 9
0x00001914      0f84c4000000   je 0x19de
0x0000191a      83fb08         cmp ebx, 8
0x0000191d      7581           jne 0x18a0
0x0000191f      31c0           xor eax, eax
0x00001921      4d85f6         test r14, r14
0x00001924      0f95c0         setne al
0x00001927      31d2           xor edx, edx
0x00001929      4929c6         sub r14, rax
0x0000192c      488b442408     mov rax, qword [rsp + 8]
0x00001931      4885c0         test rax, rax
0x00001934      0f95c2         setne dl
0x00001937      4829d0         sub rax, rdx
0x0000193a      4889442408     mov qword [rsp + 8], rax
0x0000193f      440fb63dad67.  movzx r15d, byte [obj.convert_entire_line] ; [0x2080f4:1]=0
0x00001947      4584ff         test r15b, r15b
0x0000194a      7587           jne 0x18d3
0x0000194c      e966ffffff     jmp 0x18b7
0x00001951      4889ef         mov rdi, rbp
0x00001954      e8b7faffff     call sym.imp.__uflow
0x00001959      85c0           test eax, eax
0x0000195b      89c3           mov ebx, eax
0x0000195d      79ad           jns 0x190c
0x0000195f      4889ef         mov rdi, rbp
0x00001962      e8690d0000     call sym.next_file
0x00001967      4885c0         test rax, rax
0x0000196a      4889c5         mov rbp, rax
0x0000196d      7588           jne 0x18f7
0x0000196f      4584ff         test r15b, r15b
0x00001972      75a6           jne 0x191a
0x00001974      e8670f0000     call sym.cleanup_file_list_stdin
0x00001979      488b4c2418     mov rcx, qword [rsp + 0x18]
0x0000197e      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001987      8b0563672000   mov eax, dword [obj.exit_status]        ; [0x2080f0:4]=0
0x0000198d      0f8504010000   jne 0x1a97
0x00001993      4883c428       add rsp, 0x28
0x00001997      5b             pop rbx
0x00001998      5d             pop rbp
0x00001999      415c           pop r12
0x0000199b      415d           pop r13
0x0000199d      415e           pop r14
0x0000199f      415f           pop r15
0x000019a1      c3             ret
0x000019a2      0fb6f3         movzx esi, bl
0x000019a5      e876fbffff     call sym.imp.__overflow
0x000019aa      85c0           test eax, eax
0x000019ac      0f8940ffffff   jns 0x18f2
0x000019b2      488d35343b00.  lea rsi, str.write_error                ; 0x54ed ; "write error"
0x000019b9      ba05000000     mov edx, 5
0x000019be      31ff           xor edi, edi
0x000019c0      e8fbfaffff     call sym.imp.dcgettext
0x000019c5      4889c3         mov rbx, rax
0x000019c8      e873faffff     call sym.imp.__errno_location
0x000019cd      8b30           mov esi, dword [rax]
0x000019cf      4889da         mov rdx, rbx
0x000019d2      bf01000000     mov edi, 1
0x000019d7      31c0           xor eax, eax
0x000019d9      e882fcffff     call sym.imp.error
0x000019de      4c89ea         mov rdx, r13
0x000019e1      4c89e6         mov rsi, r12
0x000019e4      4c89f7         mov rdi, r14
0x000019e7      e8140c0000     call sym.get_next_tab_column
0x000019ec      807c240700     cmp byte [rsp + 7], 0
0x000019f1      4889c3         mov rbx, rax
0x000019f4      741b           je 0x1a11
0x000019f6      498d4601       lea rax, [r14 + 1]
0x000019fa      4983c601       add r14, 1
0x000019fe      0f84bc000000   je 0x1ac0
0x00001a04      4989c6         mov r14, rax
0x00001a07      bb20000000     mov ebx, 0x20                           ; "@"
0x00001a0c      e92effffff     jmp 0x193f
0x00001a11      4939c6         cmp r14, rax
0x00001a14      7615           jbe 0x1a2b
0x00001a16      e9a5000000     jmp 0x1ac0
0x00001a1b      0f1f440000     nop dword [rax + rax]
0x00001a20      488d5001       lea rdx, [rax + 1]
0x00001a24      48895728       mov qword [rdi + 0x28], rdx
0x00001a28      c60020         mov byte [rax], 0x20                    ; [0x20:1]=64 ; "@"
0x00001a2b      4983c601       add r14, 1
0x00001a2f      4c39f3         cmp rbx, r14
0x00001a32      76d3           jbe 0x1a07
0x00001a34      488b3d6d6620.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001a3b      488b4728       mov rax, qword [rdi + 0x28]
0x00001a3f      483b4730       cmp rax, qword [rdi + 0x30]
0x00001a43      72db           jb 0x1a20
0x00001a45      be20000000     mov esi, 0x20                           ; "@"
0x00001a4a      e8d1faffff     call sym.imp.__overflow
0x00001a4f      85c0           test eax, eax
0x00001a51      79d8           jns 0x1a2b
0x00001a53      488d35933a00.  lea rsi, str.write_error                ; 0x54ed ; "write error"
0x00001a5a      ba05000000     mov edx, 5
0x00001a5f      31ff           xor edi, edi
0x00001a61      e85afaffff     call sym.imp.dcgettext
0x00001a66      4889c3         mov rbx, rax
0x00001a69      e8d2f9ffff     call sym.imp.__errno_location
0x00001a6e      8b30           mov esi, dword [rax]
0x00001a70      4889da         mov rdx, rbx
0x00001a73      bf01000000     mov edi, 1
0x00001a78      31c0           xor eax, eax
0x00001a7a      e8e1fbffff     call sym.imp.error
0x00001a7f      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x00001a84      7507           jne 0x1a8d
0x00001a86      31ff           xor edi, edi
0x00001a88      e873010000     call sym.usage
0x00001a8d      bf01000000     mov edi, 1
0x00001a92      e869010000     call sym.usage
0x00001a97      e854faffff     call sym.imp.__stack_chk_fail
0x00001a9c      488d35333a00.  lea rsi, str.input_line_is_too_long     ; 0x54d6 ; "input line is too long"
0x00001aa3      ba05000000     mov edx, 5
0x00001aa8      31ff           xor edi, edi
0x00001aaa      e811faffff     call sym.imp.dcgettext
0x00001aaf      31f6           xor esi, esi
0x00001ab1      4889c2         mov rdx, rax
0x00001ab4      bf01000000     mov edi, 1
0x00001ab9      31c0           xor eax, eax
0x00001abb      e8a0fbffff     call sym.imp.error
0x00001ac0      488d350f3a00.  lea rsi, str.input_line_is_too_long     ; 0x54d6 ; "input line is too long"
0x00001ac7      ba05000000     mov edx, 5
0x00001acc      31ff           xor edi, edi
0x00001ace      e8edf9ffff     call sym.imp.dcgettext
0x00001ad3      31f6           xor esi, esi
0x00001ad5      4889c2         mov rdx, rax
0x00001ad8      bf01000000     mov edi, 1
0x00001add      31c0           xor eax, eax
0x00001adf      e87cfbffff     call sym.imp.error
0x00001ae4      662e0f1f8400.  nop word cs:[rax + rax]
0x00001aee      6690           nop
;-- entry0:
;-- _start:
;-- rip:
0x00001af0      31ed           xor ebp, ebp
0x00001af2      4989d1         mov r9, rdx
0x00001af5      5e             pop rsi
0x00001af6      4889e2         mov rdx, rsp
0x00001af9      4883e4f0       and rsp, 0xfffffffffffffff0
0x00001afd      50             push rax
0x00001afe      54             push rsp
0x00001aff      4c8d05ca3800.  lea r8, sym.__libc_csu_fini             ; 0x53d0
0x00001b06      488d0d533800.  lea rcx, sym.__libc_csu_init            ; 0x5360 ; "AWAVI\x89\xd7AUATL\x8d%\xde' "
0x00001b0d      488d3dfcfbff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1710 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x83\xec(H\x8b>dH\x8b\x04%("
0x00001b14      ff15c6642000   call qword [reloc.__libc_start_main]    ; [0x207fe0:8]=0
0x00001b1a      f4             hlt
0x00001b1b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001b20      488d3d796520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001b27      55             push rbp
0x00001b28      488d05716520.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001b2f      4839f8         cmp rax, rdi
0x00001b32      4889e5         mov rbp, rsp
0x00001b35      7419           je 0x1b50
0x00001b37      488b059a6420.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x207fd8:8]=0
0x00001b3e      4885c0         test rax, rax
0x00001b41      740d           je 0x1b50
0x00001b43      5d             pop rbp
0x00001b44      ffe0           jmp rax
0x00001b46      662e0f1f8400.  nop word cs:[rax + rax]
0x00001b50      5d             pop rbp
0x00001b51      c3             ret
0x00001b52      0f1f4000       nop dword [rax]
0x00001b56      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001b60      488d3d396520.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001b67      488d35326520.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x2080a0
0x00001b6e      55             push rbp
0x00001b6f      4829fe         sub rsi, rdi
0x00001b72      4889e5         mov rbp, rsp
0x00001b75      48c1fe03       sar rsi, 3
0x00001b79      4889f0         mov rax, rsi
0x00001b7c      48c1e83f       shr rax, 0x3f
0x00001b80      4801c6         add rsi, rax
0x00001b83      48d1fe         sar rsi, 1
0x00001b86      7418           je 0x1ba0
0x00001b88      488b05616420.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x207ff0:8]=0
0x00001b8f      4885c0         test rax, rax
0x00001b92      740c           je 0x1ba0
0x00001b94      5d             pop rbp
0x00001b95      ffe0           jmp rax
0x00001b97      660f1f840000.  nop word [rax + rax]
0x00001ba0      5d             pop rbp
0x00001ba1      c3             ret
0x00001ba2      0f1f4000       nop dword [rax]
0x00001ba6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00001bb0      803d31652000.  cmp byte [obj.completed.7697], 0        ; [0x2080e8:1]=0
0x00001bb7      752f           jne 0x1be8
0x00001bb9      48833d376420.  cmp qword [reloc.__cxa_finalize], 0     ; [0x207ff8:8]=0
0x00001bc1      55             push rbp
0x00001bc2      4889e5         mov rbp, rsp
0x00001bc5      740c           je 0x1bd3
0x00001bc7      488b3d3a6420.  mov rdi, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x00001bce      e82dfbffff     call sym..plt.got
0x00001bd3      e848ffffff     call sym.deregister_tm_clones
0x00001bd8      c60509652000.  mov byte [obj.completed.7697], 1        ; [0x2080e8:1]=0
0x00001bdf      5d             pop rbp
0x00001be0      c3             ret
0x00001be1      0f1f80000000.  nop dword [rax]
0x00001be8      f3c3           ret
0x00001bea      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00001bf0      55             push rbp
0x00001bf1      4889e5         mov rbp, rsp
0x00001bf4      5d             pop rbp
0x00001bf5      e966ffffff     jmp sym.register_tm_clones
0x00001bfa      660f1f440000   nop word [rax + rax]
;-- usage:
0x00001c00      4155           push r13                                ; /src:64
0x00001c02      4154           push r12
0x00001c04      ba05000000     mov edx, 5                              ; /src:66
0x00001c09      55             push rbp                                ; /src:64
0x00001c0a      53             push rbx
0x00001c0b      89fd           mov ebp, edi
0x00001c0d      4881ec880000.  sub rsp, 0x88
0x00001c14      488b1d356520.  mov rbx, qword [obj.program_name]       ; [0x208150:8]=0
0x00001c1b      64488b042528.  mov rax, qword fs:[0x28]
0x00001c24      4889442478     mov qword [rsp + 0x78], rax
0x00001c29      31c0           xor eax, eax
0x00001c2b      85ff           test edi, edi                           ; /src:65
0x00001c2d      742e           je 0x1c5d
0x00001c2f      488d35e23800.  lea rsi, str.Try___s___help__for_more_information. ; /src:66 ; 0x5518 ; "Try '%s --help' for more information.\n"
0x00001c36      31ff           xor edi, edi
0x00001c38      e883f8ffff     call sym.imp.dcgettext
0x00001c3d      488b3d9c6420.  mov rdi, qword [obj.stderr]             ; .//coreutils-8.31/lib:97 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00001c44      4889c2         mov rdx, rax
0x00001c47      4889d9         mov rcx, rbx
0x00001c4a      be01000000     mov esi, 1
0x00001c4f      31c0           xor eax, eax
0x00001c51      e86afaffff     call sym.imp.__fprintf_chk
0x00001c56      89ef           mov edi, ebp                            ; /src:89
0x00001c58      e843faffff     call sym.imp.exit
0x00001c5d      488d35dc3800.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; /src:69 ; 0x5540 ; "Usage: %s [OPTION]... [FILE]...\n"
0x00001c64      31ff           xor edi, edi
0x00001c66      e855f8ffff     call sym.imp.dcgettext
0x00001c6b      4889da         mov rdx, rbx                            ; .//coreutils-8.31/lib:104
0x00001c6e      4889c6         mov rsi, rax
0x00001c71      bf01000000     mov edi, 1
0x00001c76      31c0           xor eax, eax
0x00001c78      e8d3f9ffff     call sym.imp.__printf_chk
0x00001c7d      488b1d246420.  mov rbx, qword [obj.stdout]             ; /src:73 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001c84      488d35dd3800.  lea rsi, str.Convert_tabs_in_each_FILE_to_spaces__writing_to_standard_output. ; 0x5568 ; "Convert tabs in each FILE to spaces, writing to standard output.\n"
0x00001c8b      ba05000000     mov edx, 5
0x00001c90      31ff           xor edi, edi
0x00001c92      e829f8ffff     call sym.imp.dcgettext
0x00001c97      4889de         mov rsi, rbx
0x00001c9a      4889c7         mov rdi, rax
0x00001c9d      e80ef9ffff     call sym.imp.fputs_unlocked
0x00001ca2      488b1dff6320.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/pand.c:580 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001ca9      488d35003900.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x55b0 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00001cb0      ba05000000     mov edx, 5
0x00001cb5      31ff           xor edi, edi
0x00001cb7      e804f8ffff     call sym.imp.dcgettext
0x00001cbc      4889de         mov rsi, rbx
0x00001cbf      4889c7         mov rdi, rax
0x00001cc2      e8e9f8ffff     call sym.imp.fputs_unlocked
0x00001cc7      488b1dda6320.  mov rbx, qword [obj.stdout]             ; ../coreutils-8.31/src/pand.c:587 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001cce      488d35133900.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x55e8 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00001cd5      ba05000000     mov edx, 5
0x00001cda      31ff           xor edi, edi
0x00001cdc      e8dff7ffff     call sym.imp.dcgettext
0x00001ce1      4889de         mov rsi, rbx
0x00001ce4      4889c7         mov rdi, rax
0x00001ce7      e8c4f8ffff     call sym.imp.fputs_unlocked
0x00001cec      488b1db56320.  mov rbx, qword [obj.stdout]             ; /src:80 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001cf3      488d353e3900.  lea rsi, str.i____initial____do_not_convert_tabs_after_non_blanks_____t____tabs_N_____have_tabs_N_characters_apart__not_8 ; 0x5638 ; "  -i, --initial    do not convert tabs after non blanks\n  -t, --tabs=N     have tabs N characters apart, not 8\n"
0x00001cfa      ba05000000     mov edx, 5
0x00001cff      31ff           xor edi, edi
0x00001d01      e8baf7ffff     call sym.imp.dcgettext
0x00001d06      4889de         mov rsi, rbx
0x00001d09      4889c7         mov rdi, rax
0x00001d0c      e89ff8ffff     call sym.imp.fputs_unlocked
0x00001d11      e81a0c0000     call sym.emit_tab_list_info             ; /src:84
0x00001d16      488b1d8b6320.  mov rbx, qword [obj.stdout]             ; /src:85 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001d1d      488d35843900.  lea rsi, str.help_____display_this_help_and_exit ; 0x56a8 ; "      --help     display this help and exit\n"
0x00001d24      ba05000000     mov edx, 5
0x00001d29      31ff           xor edi, edi
0x00001d2b      e890f7ffff     call sym.imp.dcgettext
0x00001d30      4889de         mov rsi, rbx
0x00001d33      4889c7         mov rdi, rax
0x00001d36      e875f8ffff     call sym.imp.fputs_unlocked
0x00001d3b      488b1d666320.  mov rbx, qword [obj.stdout]             ; /src:86 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001d42      488d358f3900.  lea rsi, str.version__output_version_information_and_exit ; 0x56d8 ; "      --version  output version information and exit\n"
0x00001d49      ba05000000     mov edx, 5
0x00001d4e      31ff           xor edi, edi
0x00001d50      e86bf7ffff     call sym.imp.dcgettext
0x00001d55      4889de         mov rsi, rbx
0x00001d58      4889c7         mov rdi, rax
0x00001d5b      488d1da23600.  lea rbx, str.expand                     ; 0x5404 ; "expand"
0x00001d62      e849f8ffff     call sym.imp.fputs_unlocked
0x00001d67      488d059d3600.  lea rax, [0x0000540b]                   ; ../coreutils-8.31/src/pand.c:633 ; "["
0x00001d6e      488d0dd73600.  lea rcx, str.sha256sum                  ; 0x544c ; "sha256sum"
0x00001d75      48c744246000.  mov qword [rsp + 0x60], 0
0x00001d7e      48c744246800.  mov qword [rsp + 0x68], 0
0x00001d87      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/pand.c:644
0x00001d8a      48890424       mov qword [rsp], rax                    ; ../coreutils-8.31/src/pand.c:633
0x00001d8e      488d05783600.  lea rax, str.test_invocation            ; 0x540d ; "test invocation"
0x00001d95      48894c2430     mov qword [rsp + 0x30], rcx
0x00001d9a      488d0db53600.  lea rcx, str.sha384sum                  ; 0x5456 ; "sha384sum"
0x00001da1      4889442408     mov qword [rsp + 8], rax
0x00001da6      488d05d83600.  lea rax, [0x00005485]                   ; "coreutils"
0x00001dad      48894c2440     mov qword [rsp + 0x40], rcx
0x00001db2      488d0da73600.  lea rcx, str.sha512sum                  ; 0x5460 ; "sha512sum"
0x00001db9      4889442410     mov qword [rsp + 0x10], rax
0x00001dbe      488d05583600.  lea rax, str.Multi_call_invocation      ; 0x541d ; "Multi-call invocation"
0x00001dc5      48894c2450     mov qword [rsp + 0x50], rcx
0x00001dca      4889442418     mov qword [rsp + 0x18], rax
0x00001dcf      488d055d3600.  lea rax, str.sha224sum                  ; 0x5433 ; "sha224sum"
0x00001dd6      4889442420     mov qword [rsp + 0x20], rax
0x00001ddb      488d055b3600.  lea rax, str.sha2_utilities             ; 0x543d ; "sha2 utilities"
0x00001de2      4889442428     mov qword [rsp + 0x28], rax
0x00001de7      4889442438     mov qword [rsp + 0x38], rax
0x00001dec      4889442448     mov qword [rsp + 0x48], rax
0x00001df1      4889442458     mov qword [rsp + 0x58], rax
0x00001df6      662e0f1f8400.  nop word cs:[rax + rax]
0x00001e00      4883c210       add rdx, 0x10                           ; ../coreutils-8.31/src/pand.c:647
0x00001e04      488b3a         mov rdi, qword [rdx]                    ; ../coreutils-8.31/src/pand.c:646
0x00001e07      4885ff         test rdi, rdi
0x00001e0a      7413           je 0x1e1f
0x00001e0c      b907000000     mov ecx, 7
0x00001e11      4889de         mov rsi, rbx
0x00001e14      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001e16      0f97c0         seta al
0x00001e19      1c00           sbb al, 0
0x00001e1b      84c0           test al, al
0x00001e1d      75e1           jne 0x1e00
0x00001e1f      4c8b6208       mov r12, qword [rdx + 8]                ; ../coreutils-8.31/src/pand.c:649
0x00001e23      31ff           xor edi, edi                            ; ../coreutils-8.31/src/pand.c:652
0x00001e25      ba05000000     mov edx, 5
0x00001e2a      488d35393600.  lea rsi, str.s_online_help:___s         ; 0x546a ; "\n%s online help: <%s>\n"
0x00001e31      4d85e4         test r12, r12                           ; ../coreutils-8.31/src/pand.c:649
0x00001e34      0f84c1000000   je 0x1efb
0x00001e3a      e881f6ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/pand.c:652
0x00001e3f      488d0dca3800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x5710 ; "https://www.gnu.org/software/coreutils/"
0x00001e46      488d15343600.  lea rdx, str.GNU_coreutils              ; 0x5481 ; "GNU coreutils"
0x00001e4d      4889c6         mov rsi, rax
0x00001e50      bf01000000     mov edi, 1
0x00001e55      31c0           xor eax, eax
0x00001e57      e8f4f7ffff     call sym.imp.__printf_chk
0x00001e5c      31f6           xor esi, esi                            ; ../coreutils-8.31/src/pand.c:656
0x00001e5e      bf05000000     mov edi, 5
0x00001e63      e8d8f7ffff     call sym.imp.setlocale
0x00001e68      4885c0         test rax, rax                           ; ../coreutils-8.31/src/pand.c:657
0x00001e6b      741c           je 0x1e89
0x00001e6d      488d351b3600.  lea rsi, [0x0000548f]                   ; "en_"
0x00001e74      ba03000000     mov edx, 3
0x00001e79      4889c7         mov rdi, rax
0x00001e7c      e8cff5ffff     call sym.imp.strncmp
0x00001e81      85c0           test eax, eax
0x00001e83      0f8507010000   jne 0x1f90
0x00001e89      488d35033600.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/pand.c:666 ; 0x5493 ; "Full documentation <%s%s>\n"
0x00001e90      31ff           xor edi, edi
0x00001e92      ba05000000     mov edx, 5
0x00001e97      e824f6ffff     call sym.imp.dcgettext
0x00001e9c      488d0d613500.  lea rcx, str.expand                     ; .//coreutils-8.31/lib:104 ; 0x5404 ; "expand"
0x00001ea3      488d15663800.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5710 ; "https://www.gnu.org/software/coreutils/"
0x00001eaa      4889c6         mov rsi, rax
0x00001ead      bf01000000     mov edi, 1
0x00001eb2      31c0           xor eax, eax
0x00001eb4      e897f7ffff     call sym.imp.__printf_chk
0x00001eb9      4939dc         cmp r12, rbx                            ; ../coreutils-8.31/src/pand.c:668
0x00001ebc      488d0d643500.  lea rcx, [0x00005427]                   ; " invocation"
0x00001ec3      488d1df74100.  lea rbx, [0x000060c1]
0x00001eca      480f44d9       cmove rbx, rcx
0x00001ece      488d35ab3800.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x5780 ; "or available locally via: info '(coreutils) %s%s'\n"
0x00001ed5      31ff           xor edi, edi
0x00001ed7      ba05000000     mov edx, 5
0x00001edc      e8dff5ffff     call sym.imp.dcgettext
0x00001ee1      4889d9         mov rcx, rbx                            ; .//coreutils-8.31/lib:104
0x00001ee4      4889c6         mov rsi, rax
0x00001ee7      4c89e2         mov rdx, r12
0x00001eea      bf01000000     mov edi, 1
0x00001eef      31c0           xor eax, eax
0x00001ef1      e85af7ffff     call sym.imp.__printf_chk
0x00001ef6      e95bfdffff     jmp 0x1c56
0x00001efb      e8c0f5ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/pand.c:652
0x00001f00      488d0d093800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; .//coreutils-8.31/lib:104 ; 0x5710 ; "https://www.gnu.org/software/coreutils/"
0x00001f07      488d15733500.  lea rdx, str.GNU_coreutils              ; 0x5481 ; "GNU coreutils"
0x00001f0e      4889c6         mov rsi, rax
0x00001f11      bf01000000     mov edi, 1
0x00001f16      31c0           xor eax, eax
0x00001f18      e833f7ffff     call sym.imp.__printf_chk
0x00001f1d      31f6           xor esi, esi                            ; ../coreutils-8.31/src/pand.c:656
0x00001f1f      bf05000000     mov edi, 5
0x00001f24      e817f7ffff     call sym.imp.setlocale
0x00001f29      4885c0         test rax, rax                           ; ../coreutils-8.31/src/pand.c:657
0x00001f2c      7418           je 0x1f46
0x00001f2e      488d355a3500.  lea rsi, [0x0000548f]                   ; "en_"
0x00001f35      ba03000000     mov edx, 3
0x00001f3a      4889c7         mov rdi, rax
0x00001f3d      e80ef5ffff     call sym.imp.strncmp
0x00001f42      85c0           test eax, eax
0x00001f44      7543           jne 0x1f89
0x00001f46      488d35463500.  lea rsi, str.Full_documentation___s_s   ; ../coreutils-8.31/src/pand.c:666 ; 0x5493 ; "Full documentation <%s%s>\n"
0x00001f4d      ba05000000     mov edx, 5
0x00001f52      31ff           xor edi, edi
0x00001f54      4c8d25a93400.  lea r12, str.expand                     ; ../coreutils-8.31/src/pand.c:643 ; 0x5404 ; "expand"
0x00001f5b      488d1dc53400.  lea rbx, [0x00005427]                   ; ../coreutils-8.31/src/pand.c:668 ; " invocation"
0x00001f62      e859f5ffff     call sym.imp.dcgettext                  ; ../coreutils-8.31/src/pand.c:666
0x00001f67      488d0d963400.  lea rcx, str.expand                     ; .//coreutils-8.31/lib:104 ; 0x5404 ; "expand"
0x00001f6e      488d159b3700.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x5710 ; "https://www.gnu.org/software/coreutils/"
0x00001f75      4889c6         mov rsi, rax
0x00001f78      bf01000000     mov edi, 1
0x00001f7d      31c0           xor eax, eax
0x00001f7f      e8ccf6ffff     call sym.imp.__printf_chk
0x00001f84      e945ffffff     jmp 0x1ece
0x00001f89      4c8d25743400.  lea r12, str.expand                     ; ../coreutils-8.31/src/pand.c:643 ; 0x5404 ; "expand"
0x00001f90      4c8b2d116120.  mov r13, qword [obj.stdout]             ; ../coreutils-8.31/src/pand.c:663 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00001f97      488d359a3700.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x5738 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00001f9e      31ff           xor edi, edi
0x00001fa0      ba05000000     mov edx, 5
0x00001fa5      e816f5ffff     call sym.imp.dcgettext
0x00001faa      4c89ee         mov rsi, r13
0x00001fad      4889c7         mov rdi, rax
0x00001fb0      e8fbf5ffff     call sym.imp.fputs_unlocked
0x00001fb5      e9cffeffff     jmp 0x1e89
0x00001fba      660f1f440000   nop word [rax + rax]
;-- set_extend_size:
0x00001fc0      48833d686120.  cmp qword [obj.extend_size], 0          ; [0x208130:8]=0
0x00001fc8      53             push rbx
0x00001fc9      b801000000     mov eax, 1
0x00001fce      4889fb         mov rbx, rdi
0x00001fd1      7423           je 0x1ff6
0x00001fd3      488d350e3800.  lea rsi, [0x000057e8]                   ; "'/' specifier only allowed with the last value"
0x00001fda      ba05000000     mov edx, 5
0x00001fdf      31ff           xor edi, edi
0x00001fe1      e8daf4ffff     call sym.imp.dcgettext
0x00001fe6      31f6           xor esi, esi
0x00001fe8      4889c2         mov rdx, rax
0x00001feb      31ff           xor edi, edi
0x00001fed      31c0           xor eax, eax
0x00001fef      e86cf6ffff     call sym.imp.error
0x00001ff4      31c0           xor eax, eax
0x00001ff6      48891d336120.  mov qword [obj.extend_size], rbx        ; [0x208130:8]=0
0x00001ffd      5b             pop rbx
0x00001ffe      c3             ret
0x00001fff      90             nop
;-- set_increment_size:
0x00002000      48833d206120.  cmp qword [obj.increment_size], 0       ; [0x208128:8]=0
0x00002008      53             push rbx
0x00002009      b801000000     mov eax, 1
0x0000200e      4889fb         mov rbx, rdi
0x00002011      7423           je 0x2036
0x00002013      488d35fe3700.  lea rsi, str.specifier_only_allowed_with_the_last_value ; 0x5818 ; "'+' specifier only allowed with the last value"
0x0000201a      ba05000000     mov edx, 5
0x0000201f      31ff           xor edi, edi
0x00002021      e89af4ffff     call sym.imp.dcgettext
0x00002026      31f6           xor esi, esi
0x00002028      4889c2         mov rdx, rax
0x0000202b      31ff           xor edi, edi
0x0000202d      31c0           xor eax, eax
0x0000202f      e82cf6ffff     call sym.imp.error
0x00002034      31c0           xor eax, eax
0x00002036      48891deb6020.  mov qword [obj.increment_size], rbx     ; [0x208128:8]=0
0x0000203d      5b             pop rbx
0x0000203e      c3             ret
0x0000203f      90             nop
;-- add_tab_stop:
0x00002040      55             push rbp
0x00002041      53             push rbx
0x00002042      4889fb         mov rbx, rdi
0x00002045      4883ec08       sub rsp, 8
0x00002049      488b05c06020.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002050      488b3dc96020.  mov rdi, qword [obj.tab_list]           ; [0x208120:8]=0
0x00002057      488b35ba6020.  mov rsi, qword [obj.n_tabs_allocated]   ; [0x208118:8]=0
0x0000205e      4885c0         test rax, rax
0x00002061      7435           je 0x2098
0x00002063      488d14c50000.  lea rdx, [rax*8]
0x0000206b      488b4c17f8     mov rcx, qword [rdi + rdx - 8]
0x00002070      4839d9         cmp rcx, rbx
0x00002073      0f86c9000000   jbe 0x2142
0x00002079      4839f0         cmp rax, rsi
0x0000207c      7452           je 0x20d0
0x0000207e      4883c001       add rax, 1
0x00002082      48891c17       mov qword [rdi + rdx], rbx
0x00002086      488905836020.  mov qword [obj.first_free_tab], rax     ; [0x208110:8]=0
0x0000208d      4883c408       add rsp, 8
0x00002091      5b             pop rbx
0x00002092      5d             pop rbp
0x00002093      c3             ret
0x00002094      0f1f4000       nop dword [rax]
0x00002098      4889dd         mov rbp, rbx
0x0000209b      4839f0         cmp rax, rsi
0x0000209e      7432           je 0x20d2
0x000020a0      48891cc7       mov qword [rdi + rax*8], rbx
0x000020a4      48392ded6120.  cmp qword [obj.max_column_width], rbp   ; [0x208298:8]=0
0x000020ab      488d5001       lea rdx, [rax + 1]
0x000020af      4889155a6020.  mov qword [obj.first_free_tab], rdx     ; [0x208110:8]=0
0x000020b6      7307           jae 0x20bf
0x000020b8      48892dd96120.  mov qword [obj.max_column_width], rbp   ; [0x208298:8]=0
0x000020bf      4883c408       add rsp, 8
0x000020c3      5b             pop rbx
0x000020c4      5d             pop rbp
0x000020c5      c3             ret
0x000020c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000020d0      31ed           xor ebp, ebp
0x000020d2      4885ff         test rdi, rdi
0x000020d5      7441           je 0x2118
0x000020d7      48b8a9aaaaaa.  movabs rax, 0xaaaaaaaaaaaaaa9
0x000020e1      4839c6         cmp rsi, rax
0x000020e4      7757           ja 0x213d
0x000020e6      4889f0         mov rax, rsi
0x000020e9      48d1e8         shr rax, 1
0x000020ec      488d740601     lea rsi, [rsi + rax + 1]
0x000020f1      488935206020.  mov qword [obj.n_tabs_allocated], rsi   ; [0x208118:8]=0
0x000020f8      48c1e603       shl rsi, 3
0x000020fc      e83f2d0000     call sym.xrealloc
0x00002101      4889c7         mov rdi, rax
0x00002104      488905156020.  mov qword [obj.tab_list], rax           ; [0x208120:8]=0
0x0000210b      488b05fe5f20.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002112      eb8c           jmp 0x20a0
0x00002114      0f1f4000       nop dword [rax]
0x00002118      4885f6         test rsi, rsi
0x0000211b      b810000000     mov eax, 0x10
0x00002120      ba08000000     mov edx, 8
0x00002125      480f44f0       cmove rsi, rax
0x00002129      4889d0         mov rax, rdx
0x0000212c      31c9           xor ecx, ecx
0x0000212e      48f7e6         mul rsi
0x00002131      701a           jo 0x214d
0x00002133      4885c0         test rax, rax
0x00002136      7805           js 0x213d
0x00002138      4885c9         test rcx, rcx
0x0000213b      74b4           je 0x20f1
0x0000213d      e8ee2e0000     call sym.xalloc_die
0x00002142      4889dd         mov rbp, rbx
0x00002145      4829cd         sub rbp, rcx
0x00002148      e94effffff     jmp 0x209b
0x0000214d      b901000000     mov ecx, 1
0x00002152      ebdf           jmp 0x2133
0x00002154      6690           nop
0x00002156      662e0f1f8400.  nop word cs:[rax + rax]
;-- parse_tab_stops:
0x00002160      4157           push r15
0x00002162      4156           push r14
0x00002164      4155           push r13
0x00002166      4154           push r12
0x00002168      55             push rbp
0x00002169      53             push rbx
0x0000216a      4883ec18       sub rsp, 0x18
0x0000216e      440fb63f       movzx r15d, byte [rdi]
0x00002172      4584ff         test r15b, r15b
0x00002175      0f8406010000   je 0x2281
0x0000217b      4889fb         mov rbx, rdi
0x0000217e      4531f6         xor r14d, r14d
0x00002181      c644240801     mov byte [rsp + 8], 1
0x00002186      48c704240000.  mov qword [rsp], 0
0x0000218e      4531ed         xor r13d, r13d
0x00002191      4531e4         xor r12d, r12d
0x00002194      31ed           xor ebp, ebp
0x00002196      eb66           jmp 0x21fe
0x00002198      0f1f84000000.  nop dword [rax + rax]
0x000021a0      e84bf5ffff     call sym.imp.__ctype_b_loc
0x000021a5      488b30         mov rsi, qword [rax]
0x000021a8      410fb6cf       movzx ecx, r15b
0x000021ac      f6044e01       test byte [rsi + rcx*2], 1
0x000021b0      7552           jne 0x2204
0x000021b2      4180ff2f       cmp r15b, 0x2f
0x000021b6      0f841c010000   je 0x22d8
0x000021bc      4180ff2b       cmp r15b, 0x2b
0x000021c0      0f8452010000   je 0x2318
0x000021c6      410fbed7       movsx edx, r15b
0x000021ca      83ea30         sub edx, 0x30
0x000021cd      83fa09         cmp edx, 9
0x000021d0      0f87aa020000   ja 0x2480
0x000021d6      4084ed         test bpl, bpl
0x000021d9      0f8559010000   jne 0x2338
0x000021df      4c63f2         movsxd r14, edx
0x000021e2      4889d8         mov rax, rbx
0x000021e5      48891c24       mov qword [rsp], rbx
0x000021e9      bd01000000     mov ebp, 1
0x000021ee      6690           nop
0x000021f0      440fb67801     movzx r15d, byte [rax + 1]
0x000021f5      488d5801       lea rbx, [rax + 1]
0x000021f9      4584ff         test r15b, r15b
0x000021fc      744a           je 0x2248
0x000021fe      4180ff2c       cmp r15b, 0x2c
0x00002202      759c           jne 0x21a0
0x00002204      4084ed         test bpl, bpl
0x00002207      0f84a3000000   je 0x22b0
0x0000220d      4584e4         test r12b, r12b
0x00002210      4c89f7         mov rdi, r14
0x00002213      0f85df000000   jne 0x22f8
0x00002219      4584ed         test r13b, r13b
0x0000221c      0f849e000000   je 0x22c0
0x00002222      e8d9fdffff     call sym.set_increment_size
0x00002227      84c0           test al, al
0x00002229      4189c5         mov r13d, eax
0x0000222c      0f847d020000   je 0x24af
0x00002232      4889d8         mov rax, rbx
0x00002235      31ed           xor ebp, ebp
0x00002237      440fb67801     movzx r15d, byte [rax + 1]
0x0000223c      488d5801       lea rbx, [rax + 1]
0x00002240      4584ff         test r15b, r15b
0x00002243      75b9           jne 0x21fe
0x00002245      0f1f00         nop dword [rax]
0x00002248      4084ed         test bpl, bpl
0x0000224b      7429           je 0x2276
0x0000224d      807c240800     cmp byte [rsp + 8], 0
0x00002252      0f8457020000   je 0x24af
0x00002258      4584e4         test r12b, r12b
0x0000225b      4c89f7         mov rdi, r14
0x0000225e      0f8501020000   jne 0x2465
0x00002264      4584ed         test r13b, r13b
0x00002267      0f84e5010000   je 0x2452
0x0000226d      e88efdffff     call sym.set_increment_size
0x00002272      88442408       mov byte [rsp + 8], al
0x00002276      807c240800     cmp byte [rsp + 8], 0
0x0000227b      0f842e020000   je 0x24af
0x00002281      4883c418       add rsp, 0x18
0x00002285      5b             pop rbx
0x00002286      5d             pop rbp
0x00002287      415c           pop r12
0x00002289      415d           pop r13
0x0000228b      415e           pop r14
0x0000228d      415f           pop r15
0x0000228f      c3             ret
0x00002290      4b8d04b6       lea rax, [r14 + r14*4]
0x00002294      4863d2         movsxd rdx, edx
0x00002297      488d0442       lea rax, [rdx + rax*2]
0x0000229b      4c39f0         cmp rax, r14
0x0000229e      0f82a7000000   jb 0x234b
0x000022a4      4989c6         mov r14, rax
0x000022a7      660f1f840000.  nop word [rax + rax]
0x000022b0      4889d8         mov rax, rbx
0x000022b3      e938ffffff     jmp 0x21f0
0x000022b8      0f1f84000000.  nop dword [rax + rax]
0x000022c0      e87bfdffff     call sym.add_tab_stop
0x000022c5      4589ec         mov r12d, r13d
0x000022c8      31ed           xor ebp, ebp
0x000022ca      4889d8         mov rax, rbx
0x000022cd      e91effffff     jmp 0x21f0
0x000022d2      660f1f440000   nop word [rax + rax]
0x000022d8      4084ed         test bpl, bpl
0x000022db      0f85e7000000   jne 0x23c8
0x000022e1      4531ed         xor r13d, r13d
0x000022e4      4889d8         mov rax, rbx
0x000022e7      41bc01000000   mov r12d, 1
0x000022ed      e9fefeffff     jmp 0x21f0
0x000022f2      660f1f440000   nop word [rax + rax]
0x000022f8      e8c3fcffff     call sym.set_extend_size
0x000022fd      84c0           test al, al
0x000022ff      4189c4         mov r12d, eax
0x00002302      0f84a7010000   je 0x24af
0x00002308      4889d8         mov rax, rbx
0x0000230b      31ed           xor ebp, ebp
0x0000230d      e9defeffff     jmp 0x21f0
0x00002312      660f1f440000   nop word [rax + rax]
0x00002318      4084ed         test bpl, bpl
0x0000231b      0f85ef000000   jne 0x2410
0x00002321      4531e4         xor r12d, r12d
0x00002324      4889d8         mov rax, rbx
0x00002327      41bd01000000   mov r13d, 1
0x0000232d      e9befeffff     jmp 0x21f0
0x00002332      660f1f440000   nop word [rax + rax]
0x00002338      48b899999999.  movabs rax, 0x1999999999999999
0x00002342      4939c6         cmp r14, rax
0x00002345      0f8645ffffff   jbe 0x2290
0x0000234b      4c8b3c24       mov r15, qword [rsp]
0x0000234f      488d35873700.  lea rsi, str.0123456789                 ; 0x5add ; "0123456789"
0x00002356      4c89ff         mov rdi, r15
0x00002359      e812f2ffff     call sym.imp.strspn
0x0000235e      4c89ff         mov rdi, r15
0x00002361      4889c6         mov rsi, rax
0x00002364      4889c3         mov rbx, rax
0x00002367      4c893c24       mov qword [rsp], r15
0x0000236b      e8002d0000     call sym.xstrndup
0x00002370      4889c7         mov rdi, rax
0x00002373      4989c7         mov r15, rax
0x00002376      e825240000     call sym.quote
0x0000237b      488d35663700.  lea rsi, str.tab_stop_is_too_large__s   ; 0x5ae8 ; "tab stop is too large %s"
0x00002382      ba05000000     mov edx, 5
0x00002387      31ff           xor edi, edi
0x00002389      4889442408     mov qword [rsp + 8], rax
0x0000238e      e82df1ffff     call sym.imp.dcgettext
0x00002393      488b4c2408     mov rcx, qword [rsp + 8]
0x00002398      4889c2         mov rdx, rax
0x0000239b      31f6           xor esi, esi
0x0000239d      31c0           xor eax, eax
0x0000239f      31ff           xor edi, edi
0x000023a1      e8baf2ffff     call sym.imp.error
0x000023a6      4c89ff         mov rdi, r15
0x000023a9      e872f0ffff     call sym.imp.free
0x000023ae      488b0424       mov rax, qword [rsp]
0x000023b2      c644240800     mov byte [rsp + 8], 0
0x000023b7      488d4418ff     lea rax, [rax + rbx - 1]
0x000023bc      e92ffeffff     jmp 0x21f0
0x000023c1      0f1f80000000.  nop dword [rax]
0x000023c8      4889df         mov rdi, rbx
0x000023cb      4531ed         xor r13d, r13d
0x000023ce      e8cd230000     call sym.quote
0x000023d3      488d356e3400.  lea rsi, [0x00005848]                   ; "'/' specifier not at start of number: %s"
0x000023da      4989c4         mov r12, rax
0x000023dd      ba05000000     mov edx, 5
0x000023e2      31ff           xor edi, edi
0x000023e4      e8d7f0ffff     call sym.imp.dcgettext
0x000023e9      4c89e1         mov rcx, r12
0x000023ec      4889c2         mov rdx, rax
0x000023ef      31f6           xor esi, esi
0x000023f1      31c0           xor eax, eax
0x000023f3      31ff           xor edi, edi
0x000023f5      4189ec         mov r12d, ebp
0x000023f8      e863f2ffff     call sym.imp.error
0x000023fd      4889d8         mov rax, rbx
0x00002400      c644240800     mov byte [rsp + 8], 0
0x00002405      e9e6fdffff     jmp 0x21f0
0x0000240a      660f1f440000   nop word [rax + rax]
0x00002410      4889df         mov rdi, rbx
0x00002413      4189ed         mov r13d, ebp
0x00002416      e885230000     call sym.quote
0x0000241b      488d35563400.  lea rsi, str.specifier_not_at_start_of_number:__s ; 0x5878 ; "'+' specifier not at start of number: %s"
0x00002422      4989c4         mov r12, rax
0x00002425      ba05000000     mov edx, 5
0x0000242a      31ff           xor edi, edi
0x0000242c      e88ff0ffff     call sym.imp.dcgettext
0x00002431      4c89e1         mov rcx, r12
0x00002434      4889c2         mov rdx, rax
0x00002437      31f6           xor esi, esi
0x00002439      31c0           xor eax, eax
0x0000243b      31ff           xor edi, edi
0x0000243d      4531e4         xor r12d, r12d
0x00002440      e81bf2ffff     call sym.imp.error
0x00002445      4889d8         mov rax, rbx
0x00002448      c644240800     mov byte [rsp + 8], 0
0x0000244d      e99efdffff     jmp 0x21f0
0x00002452      4883c418       add rsp, 0x18
0x00002456      5b             pop rbx
0x00002457      5d             pop rbp
0x00002458      415c           pop r12
0x0000245a      415d           pop r13
0x0000245c      415e           pop r14
0x0000245e      415f           pop r15
0x00002460      e9dbfbffff     jmp sym.add_tab_stop
0x00002465      e856fbffff     call sym.set_extend_size
0x0000246a      88442408       mov byte [rsp + 8], al
0x0000246e      807c240800     cmp byte [rsp + 8], 0
0x00002473      0f8508feffff   jne 0x2281
0x00002479      eb34           jmp 0x24af
0x0000247b      0f1f440000     nop dword [rax + rax]
0x00002480      4889df         mov rdi, rbx
0x00002483      e818230000     call sym.quote
0x00002488      488d35193400.  lea rsi, str.tab_size_contains_invalid_character_s_:__s ; 0x58a8 ; "tab size contains invalid character(s): %s"
0x0000248f      4889c3         mov rbx, rax
0x00002492      ba05000000     mov edx, 5
0x00002497      31ff           xor edi, edi
0x00002499      e822f0ffff     call sym.imp.dcgettext
0x0000249e      4889d9         mov rcx, rbx
0x000024a1      4889c2         mov rdx, rax
0x000024a4      31f6           xor esi, esi
0x000024a6      31ff           xor edi, edi
0x000024a8      31c0           xor eax, eax
0x000024aa      e8b1f1ffff     call sym.imp.error
0x000024af      bf01000000     mov edi, 1
0x000024b4      e8e7f1ffff     call sym.imp.exit
0x000024b9      0f1f80000000.  nop dword [rax]
;-- finalize_tab_stops:
0x000024c0      4883ec08       sub rsp, 8
0x000024c4      488b35455c20.  mov rsi, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x000024cb      488b3d4e5c20.  mov rdi, qword [obj.tab_list]           ; [0x208120:8]=0
0x000024d2      4885f6         test rsi, rsi
0x000024d5      747d           je 0x2554
0x000024d7      4c8b07         mov r8, qword [rdi]
0x000024da      4d85c0         test r8, r8
0x000024dd      4c89c1         mov rcx, r8
0x000024e0      0f84aa000000   je 0x2590
0x000024e6      31c0           xor eax, eax
0x000024e8      eb1f           jmp 0x2509
0x000024ea      660f1f440000   nop word [rax + rax]
0x000024f0      488b14c7       mov rdx, qword [rdi + rax*8]
0x000024f4      4885d2         test rdx, rdx
0x000024f7      0f8493000000   je 0x2590
0x000024fd      4839d1         cmp rcx, rdx
0x00002500      0f83ae000000   jae 0x25b4
0x00002506      4889d1         mov rcx, rdx
0x00002509      4883c001       add rax, 1
0x0000250d      4839c6         cmp rsi, rax
0x00002510      75de           jne 0x24f0
0x00002512      488b050f5c20.  mov rax, qword [obj.increment_size]     ; [0x208128:8]=0
0x00002519      4885c0         test rax, rax
0x0000251c      740e           je 0x252c
0x0000251e      48833d0a5c20.  cmp qword [obj.extend_size], 0          ; [0x208130:8]=0
0x00002526      0f85ac000000   jne 0x25d8
0x0000252c      4883fe01       cmp rsi, 1
0x00002530      7410           je 0x2542
0x00002532      48c705fb5b20.  mov qword [obj.tab_size], 0             ; [0x208138:8]=0
0x0000253d      4883c408       add rsp, 8
0x00002541      c3             ret
0x00002542      480b05e75b20.  or rax, qword [obj.extend_size]         ; [0x208130:8]=0
0x00002549      75e7           jne 0x2532
0x0000254b      4c8905e65b20.  mov qword [obj.tab_size], r8            ; [0x208138:8]=0
0x00002552      ebe9           jmp 0x253d
0x00002554      488b15cd5b20.  mov rdx, qword [obj.increment_size]     ; [0x208128:8]=0
0x0000255b      488b05ce5b20.  mov rax, qword [obj.extend_size]        ; [0x208130:8]=0
0x00002562      4885d2         test rdx, rdx
0x00002565      741b           je 0x2582
0x00002567      4885c0         test rax, rax
0x0000256a      756c           jne 0x25d8
0x0000256c      4889d0         mov rax, rdx
0x0000256f      488905225d20.  mov qword [obj.max_column_width], rax   ; [0x208298:8]=0
0x00002576      488905bb5b20.  mov qword [obj.tab_size], rax           ; [0x208138:8]=0
0x0000257d      4883c408       add rsp, 8
0x00002581      c3             ret
0x00002582      4885c0         test rax, rax
0x00002585      ba08000000     mov edx, 8
0x0000258a      480f44c2       cmove rax, rdx
0x0000258e      ebdf           jmp 0x256f
0x00002590      488d356a3500.  lea rsi, str.tab_size_cannot_be_0       ; 0x5b01 ; "tab size cannot be 0"
0x00002597      ba05000000     mov edx, 5
0x0000259c      31ff           xor edi, edi
0x0000259e      e81defffff     call sym.imp.dcgettext
0x000025a3      31f6           xor esi, esi
0x000025a5      4889c2         mov rdx, rax
0x000025a8      bf01000000     mov edi, 1
0x000025ad      31c0           xor eax, eax
0x000025af      e8acf0ffff     call sym.imp.error
0x000025b4      488d355b3500.  lea rsi, str.tab_sizes_must_be_ascending ; 0x5b16 ; "tab sizes must be ascending"
0x000025bb      ba05000000     mov edx, 5
0x000025c0      31ff           xor edi, edi
0x000025c2      e8f9eeffff     call sym.imp.dcgettext
0x000025c7      31f6           xor esi, esi
0x000025c9      4889c2         mov rdx, rax
0x000025cc      bf01000000     mov edi, 1
0x000025d1      31c0           xor eax, eax
0x000025d3      e888f0ffff     call sym.imp.error
0x000025d8      488d35f93200.  lea rsi, str.specifier_is_mutually_exclusive_with ; 0x58d8 ; "'/' specifier is mutually exclusive with '+'"
0x000025df      ba05000000     mov edx, 5
0x000025e4      31ff           xor edi, edi
0x000025e6      e8d5eeffff     call sym.imp.dcgettext
0x000025eb      31f6           xor esi, esi
0x000025ed      4889c2         mov rdx, rax
0x000025f0      bf01000000     mov edi, 1
0x000025f5      31c0           xor eax, eax
0x000025f7      e864f0ffff     call sym.imp.error
0x000025fc      0f1f4000       nop dword [rax]
;-- get_next_tab_column:
0x00002600      488b0d315b20.  mov rcx, qword [obj.tab_size]           ; [0x208138:8]=0
0x00002607      c60200         mov byte [rdx], 0
0x0000260a      4885c9         test rcx, rcx
0x0000260d      7561           jne 0x2670
0x0000260f      488b0e         mov rcx, qword [rsi]
0x00002612      488b05f75a20.  mov rax, qword [obj.first_free_tab]     ; [0x208110:8]=0
0x00002619      4839c8         cmp rax, rcx
0x0000261c      7630           jbe 0x264e
0x0000261e      4c8b0dfb5a20.  mov r9, qword [obj.tab_list]            ; [0x208120:8]=0
0x00002625      4d8b04c9       mov r8, qword [r9 + rcx*8]
0x00002629      4c39c7         cmp rdi, r8
0x0000262c      7251           jb 0x267f
0x0000262e      4883c101       add rcx, 1
0x00002632      eb12           jmp 0x2646
0x00002634      0f1f4000       nop dword [rax]
0x00002638      4883c101       add rcx, 1
0x0000263c      4d8b44c9f8     mov r8, qword [r9 + rcx*8 - 8]
0x00002641      4c39c7         cmp rdi, r8
0x00002644      7239           jb 0x267f
0x00002646      4839c8         cmp rax, rcx
0x00002649      48890e         mov qword [rsi], rcx
0x0000264c      75ea           jne 0x2638
0x0000264e      488b0ddb5a20.  mov rcx, qword [obj.extend_size]        ; [0x208130:8]=0
0x00002655      4885c9         test rcx, rcx
0x00002658      7516           jne 0x2670
0x0000265a      4c8b05c75a20.  mov r8, qword [obj.increment_size]      ; [0x208128:8]=0
0x00002661      4d85c0         test r8, r8
0x00002664      7522           jne 0x2688
0x00002666      c60201         mov byte [rdx], 1
0x00002669      eb14           jmp 0x267f
0x0000266b      0f1f440000     nop dword [rax + rax]
0x00002670      4889f8         mov rax, rdi
0x00002673      31d2           xor edx, edx
0x00002675      4c8d0439       lea r8, [rcx + rdi]
0x00002679      48f7f1         div rcx
0x0000267c      4929d0         sub r8, rdx
0x0000267f      4c89c0         mov rax, r8
0x00002682      c3             ret
0x00002683      0f1f440000     nop dword [rax + rax]
0x00002688      488b15915a20.  mov rdx, qword [obj.tab_list]           ; [0x208120:8]=0
0x0000268f      498d0c38       lea rcx, [r8 + rdi]
0x00002693      482b7cc2f8     sub rdi, qword [rdx + rax*8 - 8]
0x00002698      31d2           xor edx, edx
0x0000269a      4889f8         mov rax, rdi
0x0000269d      49f7f0         div r8
0x000026a0      4829d1         sub rcx, rdx
0x000026a3      4989c8         mov r8, rcx
0x000026a6      ebd7           jmp 0x267f
0x000026a8      0f1f84000000.  nop dword [rax + rax]
;-- set_file_list:
0x000026b0      488d05595920.  lea rax, obj.stdin_argv                 ; 0x208010
0x000026b7      4885ff         test rdi, rdi
0x000026ba      c6053f5a2000.  mov byte [obj.have_read_stdin], 0       ; [0x208100:1]=0
0x000026c1      480f44f8       cmove rdi, rax
0x000026c5      48893d3c5a20.  mov qword [obj.file_list], rdi          ; [0x208108:8]=0
0x000026cc      c3             ret
0x000026cd      0f1f00         nop dword [rax]
;-- next_file:
0x000026d0      4154           push r12
0x000026d2      55             push rbp
0x000026d3      53             push rbx
0x000026d4      4883ec10       sub rsp, 0x10
0x000026d8      4885ff         test rdi, rdi
0x000026db      7442           je 0x271f
0x000026dd      488b35145a20.  mov rsi, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x000026e4      4885f6         test rsi, rsi
0x000026e7      0f84c5010000   je 0x28b2
0x000026ed      f60720         test byte [rdi], 0x20
0x000026f0      4889fd         mov rbp, rdi
0x000026f3      0f8577010000   jne 0x2870
0x000026f9      488d1d9a3400.  lea rbx, [0x00005b9a]                   ; "-"
0x00002700      b902000000     mov ecx, 2
0x00002705      4889df         mov rdi, rbx
0x00002708      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000270a      4889ef         mov rdi, rbp
0x0000270d      0f97c0         seta al
0x00002710      1c00           sbb al, 0
0x00002712      84c0           test al, al
0x00002714      0f8506010000   jne 0x2820
0x0000271a      e861edffff     call sym.imp.clearerr_unlocked
0x0000271f      488b05e25920.  mov rax, qword [obj.file_list]          ; [0x208108:8]=0
0x00002726      488d5008       lea rdx, [rax + 8]
0x0000272a      488915d75920.  mov qword [obj.file_list], rdx          ; [0x208108:8]=0
0x00002731      488b10         mov rdx, qword [rax]
0x00002734      4885d2         test rdx, rdx
0x00002737      0f84d3000000   je 0x2810
0x0000273d      488d1d563400.  lea rbx, [0x00005b9a]                   ; "-"
0x00002744      488d2dac2d00.  lea rbp, [0x000054f7]                   ; "r"
0x0000274b      eb63           jmp 0x27b0
0x0000274d      0f1f00         nop dword [rax]
0x00002750      488b05595920.  mov rax, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x00002757      c605a2592000.  mov byte [obj.have_read_stdin], 1       ; [0x208100:1]=0
0x0000275e      4885c0         test rax, rax
0x00002761      757d           jne 0x27e0
0x00002763      31ff           xor edi, edi
0x00002765      be03000000     mov esi, 3
0x0000276a      e8611e0000     call sym.quotearg_n_style_colon
0x0000276f      4989c4         mov r12, rax
0x00002772      e8c9ecffff     call sym.imp.__errno_location
0x00002777      8b30           mov esi, dword [rax]
0x00002779      488d15d33300.  lea rdx, [0x00005b53]                   ; "%s"
0x00002780      31c0           xor eax, eax
0x00002782      31ff           xor edi, edi
0x00002784      4c89e1         mov rcx, r12
0x00002787      e8d4eeffff     call sym.imp.error
0x0000278c      488b05755920.  mov rax, qword [obj.file_list]          ; [0x208108:8]=0
0x00002793      c70553592000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x0000279d      488d5008       lea rdx, [rax + 8]
0x000027a1      488915605920.  mov qword [obj.file_list], rdx          ; [0x208108:8]=0
0x000027a8      488b10         mov rdx, qword [rax]
0x000027ab      4885d2         test rdx, rdx
0x000027ae      7460           je 0x2810
0x000027b0      b902000000     mov ecx, 2
0x000027b5      4889d6         mov rsi, rdx
0x000027b8      4889df         mov rdi, rbx
0x000027bb      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000027bd      0f97c0         seta al
0x000027c0      1c00           sbb al, 0
0x000027c2      84c0           test al, al
0x000027c4      748a           je 0x2750
0x000027c6      4889d7         mov rdi, rdx
0x000027c9      4889ee         mov rsi, rbp
0x000027cc      4889542408     mov qword [rsp + 8], rdx
0x000027d1      e8aaeeffff     call sym.imp.fopen
0x000027d6      4885c0         test rax, rax
0x000027d9      488b542408     mov rdx, qword [rsp + 8]
0x000027de      7483           je 0x2763
0x000027e0      4889c7         mov rdi, rax
0x000027e3      be02000000     mov esi, 2
0x000027e8      4889442408     mov qword [rsp + 8], rax
0x000027ed      488915045920.  mov qword [obj.prev_file.6959], rdx     ; [0x2080f8:8]=0
0x000027f4      e867020000     call sym.fadvise
0x000027f9      488b442408     mov rax, qword [rsp + 8]
0x000027fe      4883c410       add rsp, 0x10
0x00002802      5b             pop rbx
0x00002803      5d             pop rbp
0x00002804      415c           pop r12
0x00002806      c3             ret
0x00002807      660f1f840000.  nop word [rax + rax]
0x00002810      4883c410       add rsp, 0x10
0x00002814      31c0           xor eax, eax
0x00002816      5b             pop rbx
0x00002817      5d             pop rbp
0x00002818      415c           pop r12
0x0000281a      c3             ret
0x0000281b      0f1f440000     nop dword [rax + rax]
0x00002820      e86b280000     call sym.rpl_fclose
0x00002825      85c0           test eax, eax
0x00002827      0f84f2feffff   je 0x271f
0x0000282d      488b15c45820.  mov rdx, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x00002834      be03000000     mov esi, 3
0x00002839      31ff           xor edi, edi
0x0000283b      e8901d0000     call sym.quotearg_n_style_colon
0x00002840      4889c3         mov rbx, rax
0x00002843      e8f8ebffff     call sym.imp.__errno_location
0x00002848      8b30           mov esi, dword [rax]
0x0000284a      488d15023300.  lea rdx, [0x00005b53]                   ; "%s"
0x00002851      4889d9         mov rcx, rbx
0x00002854      31ff           xor edi, edi
0x00002856      31c0           xor eax, eax
0x00002858      e803eeffff     call sym.imp.error
0x0000285d      c70589582000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x00002867      e9b3feffff     jmp 0x271f
0x0000286c      0f1f4000       nop dword [rax]
0x00002870      4889f2         mov rdx, rsi
0x00002873      31ff           xor edi, edi
0x00002875      be03000000     mov esi, 3
0x0000287a      e8511d0000     call sym.quotearg_n_style_colon
0x0000287f      4889c3         mov rbx, rax
0x00002882      e8b9ebffff     call sym.imp.__errno_location
0x00002887      8b30           mov esi, dword [rax]
0x00002889      488d15c33200.  lea rdx, [0x00005b53]                   ; "%s"
0x00002890      4889d9         mov rcx, rbx
0x00002893      31ff           xor edi, edi
0x00002895      31c0           xor eax, eax
0x00002897      e8c4edffff     call sym.imp.error
0x0000289c      c7054a582000.  mov dword [obj.exit_status], 1          ; [0x2080f0:4]=0
0x000028a6      488b354b5820.  mov rsi, qword [obj.prev_file.6959]     ; [0x2080f8:8]=0
0x000028ad      e947feffff     jmp 0x26f9
0x000028b2      488d0d873200.  lea rcx, obj.__PRETTY_FUNCTION__.6961   ; 0x5b40 ; "next_file"
0x000028b9      488d35483000.  lea rsi, str..._coreutils_8.31_src_expand_common.c ; 0x5908 ; "../coreutils-8.31/src/expand-common.c"
0x000028c0      488d3d6b3200.  lea rdi, str.prev_file                  ; 0x5b32 ; "prev_file"
0x000028c7      ba55010000     mov edx, 0x155
0x000028cc      e87fecffff     call sym.imp.__assert_fail
0x000028d1      0f1f440000     nop dword [rax + rax]
0x000028d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- cleanup_file_list_stdin:
0x000028e0      803d19582000.  cmp byte [obj.have_read_stdin], 0       ; [0x208100:1]=0
0x000028e7      7507           jne 0x28f0
0x000028e9      f3c3           ret
0x000028eb      0f1f440000     nop dword [rax + rax]
0x000028f0      4883ec08       sub rsp, 8
0x000028f4      488b3db55720.  mov rdi, qword [obj.stdin]              ; obj.stdin__GLIBC_2.2.5
                                                                       ; [0x2080b0:8]=0
0x000028fb      e890270000     call sym.rpl_fclose
0x00002900      85c0           test eax, eax
0x00002902      7505           jne 0x2909
0x00002904      4883c408       add rsp, 8
0x00002908      c3             ret
0x00002909      e832ebffff     call sym.imp.__errno_location
0x0000290e      8b30           mov esi, dword [rax]
0x00002910      488d15833200.  lea rdx, [0x00005b9a]                   ; "-"
0x00002917      bf01000000     mov edi, 1
0x0000291c      31c0           xor eax, eax
0x0000291e      e83dedffff     call sym.imp.error
0x00002923      0f1f00         nop dword [rax]
0x00002926      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_tab_list_info:
0x00002930      53             push rbx
0x00002931      488b1d705720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00002938      488d35f12f00.  lea rsi, str.t____tabs_LIST__use_comma_separated_list_of_tab_positions ; 0x5930 ; "  -t, --tabs=LIST  use comma separated list of tab positions\n"
0x0000293f      ba05000000     mov edx, 5
0x00002944      31ff           xor edi, edi
0x00002946      e875ebffff     call sym.imp.dcgettext
0x0000294b      4889de         mov rsi, rbx
0x0000294e      4889c7         mov rdi, rax
0x00002951      e85aecffff     call sym.imp.fputs_unlocked
0x00002956      488b1d4b5720.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x0000295d      488d350c3000.  lea rsi, str.The_last_specified_position_can_be_prefixed_with___________________________to_specify_a_tab_size_to_use_after_the_last_______________________explicitly_specified_tab_stop.__Also_a_prefix_of___________________________can_be_used_to_align_remaining_tab_stops_relative_to_______________________the_last_specified_tab_stop_instead_of_the_first_column ; 0x5970 ; "                     The last specified position can be prefixed with '/'\n                     to specify a tab size to use after the last\n                     explicitly specified tab stop.  Also a prefix of '+'\n                     can be used to align remaining tab stops relative to\n                     the last specified tab stop instead of the first column\n"
0x00002964      31ff           xor edi, edi
0x00002966      ba05000000     mov edx, 5
0x0000296b      e850ebffff     call sym.imp.dcgettext
0x00002970      4889de         mov rsi, rbx
0x00002973      4889c7         mov rdi, rax
0x00002976      5b             pop rbx
0x00002977      e934ecffff     jmp sym.imp.fputs_unlocked
0x0000297c      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x00002980      48893dc15720.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x208148:8]=0
0x00002987      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00002988      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00002990      40883da95720.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x208140:1]=0
0x00002997      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00002998      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000029a0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000029a1      53             push rbx
0x000029a2      4883ec08       sub rsp, 8
0x000029a6      488b3dfb5620.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x000029ad      e88e280000     call sym.close_stream
0x000029b2      85c0           test eax, eax
0x000029b4      7416           je 0x29cc
0x000029b6      e885eaffff     call sym.imp.__errno_location
0x000029bb      803d7e572000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x208140:1]=0
0x000029c2      4889c3         mov rbx, rax
0x000029c5      741c           je 0x29e3
0x000029c7      833820         cmp dword [rax], 0x20
0x000029ca      7517           jne 0x29e3
0x000029cc      488b3d0d5720.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x000029d3      e868280000     call sym.close_stream
0x000029d8      85c0           test eax, eax
0x000029da      7546           jne 0x2a22
0x000029dc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000029e0      5b             pop rbx
0x000029e1      5d             pop rbp
0x000029e2      c3             ret
0x000029e3      488d35032b00.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x54ed ; "write error"
0x000029ea      31ff           xor edi, edi
0x000029ec      ba05000000     mov edx, 5
0x000029f1      e8caeaffff     call sym.imp.dcgettext
0x000029f6      488b3d4b5720.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x208148:8]=0
0x000029fd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00002a00      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00002a03      7428           je 0x2a2d
0x00002a05      e8961b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x00002a0a      8b33           mov esi, dword [rbx]
0x00002a0c      488d153c3100.  lea rdx, str.s:__s                      ; 0x5b4f ; "%s: %s"
0x00002a13      4889c1         mov rcx, rax
0x00002a16      4989e8         mov r8, rbp
0x00002a19      31ff           xor edi, edi
0x00002a1b      31c0           xor eax, eax
0x00002a1d      e83eecffff     call sym.imp.error
0x00002a22      8b3d00562000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x208028:4]=1
0x00002a28      e833eaffff     call sym.imp._exit
0x00002a2d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x00002a2f      488d151d3100.  lea rdx, [0x00005b53]                   ; "%s"
0x00002a36      4889c1         mov rcx, rax
0x00002a39      31ff           xor edi, edi
0x00002a3b      31c0           xor eax, eax
0x00002a3d      e81eecffff     call sym.imp.error
0x00002a42      ebde           jmp 0x2a22
0x00002a44      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a4e      6690           nop
;-- fdadvise:
0x00002a50      e92bebffff     jmp sym.imp.posix_fadvise               ; ../coreutils-8.31/lib/fadvise.c:32
0x00002a55      90             nop
0x00002a56      662e0f1f8400.  nop word cs:[rax + rax]
;-- fadvise:
0x00002a60      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fadvise.c:40
0x00002a63      741b           je 0x2a80
0x00002a65      53             push rbx
0x00002a66      89f3           mov ebx, esi
0x00002a68      e873ebffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fadvise.c:42
0x00002a6d      89d9           mov ecx, ebx                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002a6f      31d2           xor edx, edx
0x00002a71      31f6           xor esi, esi
0x00002a73      5b             pop rbx                                 ; ../coreutils-8.31/lib/fadvise.c:43
0x00002a74      89c7           mov edi, eax                            ; ../coreutils-8.31/lib/fadvise.c:34
0x00002a76      e905ebffff     jmp sym.imp.posix_fadvise
0x00002a7b      0f1f440000     nop dword [rax + rax]
0x00002a80      f3c3           ret
0x00002a82      662e0f1f8400.  nop word cs:[rax + rax]
0x00002a8c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x00002a90      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x00002a93      53             push rbx
0x00002a94      7477           je 0x2b0d                               ; ../coreutils-8.31/lib/progname.c:51
0x00002a96      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x00002a9b      4889fb         mov rbx, rdi
0x00002a9e      e88deaffff     call sym.imp.strrchr
0x00002aa3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00002aa6      7455           je 0x2afd
0x00002aa8      4c8d4001       lea r8, [rax + 1]
0x00002aac      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x00002aaf      4829da         sub rdx, rbx
0x00002ab2      4883fa06       cmp rdx, 6
0x00002ab6      7e45           jle 0x2afd
0x00002ab8      488d70fa       lea rsi, [rax - 6]
0x00002abc      488d3dcd3000.  lea rdi, str..libs                      ; 0x5b90 ; "/.libs/"
0x00002ac3      b907000000     mov ecx, 7
0x00002ac8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002aca      0f97c2         seta dl
0x00002acd      80da00         sbb dl, 0
0x00002ad0      84d2           test dl, dl
0x00002ad2      7529           jne 0x2afd
0x00002ad4      488d3dbd3000.  lea rdi, [0x00005b98]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x00002adb      b903000000     mov ecx, 3
0x00002ae0      4c89c6         mov rsi, r8
0x00002ae3      4c89c3         mov rbx, r8
0x00002ae6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002ae8      0f97c2         seta dl
0x00002aeb      80da00         sbb dl, 0
0x00002aee      84d2           test dl, dl
0x00002af0      750b           jne 0x2afd
0x00002af2      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00002af6      48891da35520.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x2080a0:8]=0
0x00002afd      48891d4c5620.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x208150:8]=0
0x00002b04      48891dbd5520.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x2080c8:8]=0
0x00002b0b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x00002b0c      c3             ret
0x00002b0d      488b0dcc5520.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x2080e0:8]=0
0x00002b14      488d3d3d3000.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x5b58 ; "A NULL argv[0] was passed through an exec system call.\n"
0x00002b1b      ba37000000     mov edx, 0x37                           ; '7'
0x00002b20      be01000000     mov esi, 1
0x00002b25      e886ebffff     call sym.imp.fwrite
0x00002b2a      e801e9ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x00002b2f      90             nop
;-- gettext_quote.part.1:
0x00002b30      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00002b31      53             push rbx
0x00002b32      4889fd         mov rbp, rdi
0x00002b35      89f3           mov ebx, esi
0x00002b37      4883ec08       sub rsp, 8
0x00002b3b      e8e0270000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00002b40      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00002b43      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b46      80fa55         cmp dl, 0x55
0x00002b49      7475           je 0x2bc0
0x00002b4b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x00002b4e      7420           je 0x2b70
0x00002b50      488d05543000.  lea rax, str.l______l                   ; 0x5bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd\u04ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u44ff\uffd4\u4cff\uffd3\u0cff\uffd3\ud4ff\uffd4\uc4ff\uffd4\ub4ff\uffd4\ua4ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u94ff\uffd4\u84ff\uffd4\u84ff\uffd4\u54ff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\ue7ff\uffd2\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\ub7ff\uffd2\uecff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u5cff\uffd3\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\ue7ff\uffd1\u84ff\uffd4\ue7ff\uffd1\u54ff\uffd4\U010003d3\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc8ff\uffd3\u18ff\uffd5\xff\uffd5\ub0ff\uffd3\uf0ff\uffd4\u98ff\uffd3\U010003d4\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc0ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u90ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ue8ff\uffd0\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ub8ff\uffd0\ue8ff\uffd2\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd3\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ue8ff\uffcf\ua8ff\uffd4\ue8ff\uffcf\u90ff\uffd4\xff"
0x00002b57      488d154f3000.  lea rdx, [0x00005bad]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x00002b5e      83fb09         cmp ebx, 9
0x00002b61      480f45c2       cmovne rax, rdx
0x00002b65      4883c408       add rsp, 8
0x00002b69      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x00002b6a      5d             pop rbp
0x00002b6b      c3             ret
0x00002b6c      0f1f4000       nop dword [rax]
0x00002b70      0fb65001       movzx edx, byte [rax + 1]
0x00002b74      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002b77      80fa42         cmp dl, 0x42
0x00002b7a      75d4           jne 0x2b50
0x00002b7c      80780231       cmp byte [rax + 2], 0x31
0x00002b80      75ce           jne 0x2b50
0x00002b82      80780338       cmp byte [rax + 3], 0x38
0x00002b86      75c8           jne 0x2b50
0x00002b88      80780430       cmp byte [rax + 4], 0x30
0x00002b8c      75c2           jne 0x2b50
0x00002b8e      80780533       cmp byte [rax + 5], 0x33
0x00002b92      75bc           jne 0x2b50
0x00002b94      80780630       cmp byte [rax + 6], 0x30
0x00002b98      75b6           jne 0x2b50
0x00002b9a      80780700       cmp byte [rax + 7], 0
0x00002b9e      75b0           jne 0x2b50
0x00002ba0      807d0060       cmp byte [rbp], 0x60
0x00002ba4      488d05f92f00.  lea rax, [0x00005ba4]
0x00002bab      488d15f62f00.  lea rdx, [0x00005ba8]
0x00002bb2      480f45c2       cmovne rax, rdx
0x00002bb6      4883c408       add rsp, 8
0x00002bba      5b             pop rbx
0x00002bbb      5d             pop rbp
0x00002bbc      c3             ret
0x00002bbd      0f1f00         nop dword [rax]
0x00002bc0      0fb65001       movzx edx, byte [rax + 1]
0x00002bc4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002bc7      80fa54         cmp dl, 0x54
0x00002bca      7584           jne 0x2b50
0x00002bcc      0fb65002       movzx edx, byte [rax + 2]
0x00002bd0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00002bd3      80fa46         cmp dl, 0x46
0x00002bd6      0f8574ffffff   jne 0x2b50
0x00002bdc      8078032d       cmp byte [rax + 3], 0x2d
0x00002be0      0f856affffff   jne 0x2b50
0x00002be6      80780438       cmp byte [rax + 4], 0x38
0x00002bea      0f8560ffffff   jne 0x2b50
0x00002bf0      80780500       cmp byte [rax + 5], 0
0x00002bf4      0f8556ffffff   jne 0x2b50
0x00002bfa      807d0060       cmp byte [rbp], 0x60
0x00002bfe      488d05972f00.  lea rax, [0x00005b9c]                   ; "\u2018"
0x00002c05      488d15942f00.  lea rdx, [0x00005ba0]                   ; "\u2019"
0x00002c0c      480f45c2       cmovne rax, rdx
0x00002c10      4883c408       add rsp, 8
0x00002c14      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00002c15      5d             pop rbp
0x00002c16      c3             ret
0x00002c17      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00002c20      4157           push r15
0x00002c22      4156           push r14
0x00002c24      4589c7         mov r15d, r8d
0x00002c27      4155           push r13
0x00002c29      4154           push r12
0x00002c2b      4989fe         mov r14, rdi
0x00002c2e      55             push rbp
0x00002c2f      53             push rbx
0x00002c30      4489cb         mov ebx, r9d
0x00002c33      4989f5         mov r13, rsi
0x00002c36      4889cd         mov rbp, rcx
0x00002c39      83e302         and ebx, 2
0x00002c3c      4881ecb80000.  sub rsp, 0xb8
0x00002c43      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00002c4b      4889542410     mov qword [rsp + 0x10], rdx
0x00002c50      4489442408     mov dword [rsp + 8], r8d
0x00002c55      44894c2478     mov dword [rsp + 0x78], r9d
0x00002c5a      4889442420     mov qword [rsp + 0x20], rax
0x00002c5f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00002c67      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00002c6c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00002c74      4889442460     mov qword [rsp + 0x60], rax
0x00002c79      64488b042528.  mov rax, qword fs:[0x28]
0x00002c82      48898424a800.  mov qword [rsp + 0xa8], rax
0x00002c8a      31c0           xor eax, eax
0x00002c8c      e83fe8ffff     call sym.imp.__ctype_get_mb_cur_max
0x00002c91      4183ff0a       cmp r15d, 0xa
0x00002c95      4889442458     mov qword [rsp + 0x58], rax
0x00002c9a      0f87af110000   ja 0x3e4f
0x00002ca0      488d0d592f00.  lea rcx, [0x00005c00]                   ; "Z\xde\xff\xff\xb3\xd0\xff\xff\x88\xe0\xff\xff\x94\xde\xff\xff\x84\xdc\xff\xff\xe0\xdc\xff\xff5\xdd\xff\xffz\xdd\xff\xff\xb4\xdd\xff\xff\xb4\xdd\xff\xff\xb4\xdd\xff\xff\x04\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xffD\xd4\xff\xffL\xd3\xff\xff\f\xd3\xff\xff\xd4\xd4\xff\xff\xc4\xd4\xff\xff\xb4\xd4\xff\xff\xa4\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\xec\xd4\xff\xff\x94\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xffT\xd4\xff\xff\x84\xd4\xff\xff,\xd4\xff\xff\x84\xd4\xff\xff\xe7\xd2\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\x84\xd4\xff\xff\xb7\xd2\xff\xff\xec\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff\x84\xd4\xff\xff\\xd3\xff\xff,\xd4\xff\xff\x84\xd4\xff\xff,\xd4\xff\xff\x84\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff,\xd4\xff\xff\xe7\xd1\xff\xff\x84\xd4\xff\xff\xe7\xd1\xff\xffT\xd4\xff\xff\xd8\xd3\xff\xff\xe8\xd2\xff\xff\xe8\xd2\xff\xff\xe8\xd2\xff\xff\xe8\xd2\xff\xff\xe8\xd2\xff\xff\xe8\xd2\xff\xff\xc8\xd3\xff\xff\x18\xd5\xff\xff"
0x00002ca7      4489fa         mov edx, r15d
0x00002caa      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002cae      4801c8         add rax, rcx
0x00002cb1      ffe0           jmp rax
0x00002cb3      c644240e01     mov byte [rsp + 0xe], 1
0x00002cb8      c644247c00     mov byte [rsp + 0x7c], 0
0x00002cbd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00002cc0      48c744245000.  mov qword [rsp + 0x50], 0
0x00002cc9      c644240f01     mov byte [rsp + 0xf], 1
0x00002cce      c644240d00     mov byte [rsp + 0xd], 0
0x00002cd3      488d05d32e00.  lea rax, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x00002cda      48c744241801.  mov qword [rsp + 0x18], 1
0x00002ce3      4531ff         xor r15d, r15d
0x00002ce6      c74424080200.  mov dword [rsp + 8], 2
0x00002cee      4889442448     mov qword [rsp + 0x48], rax
0x00002cf3      4531db         xor r11d, r11d
0x00002cf6      4889e8         mov rax, rbp
0x00002cf9      4589e0         mov r8d, r12d
0x00002cfc      4c89dd         mov rbp, r11
0x00002cff      4989c3         mov r11, rax
0x00002d02      660f1f440000   nop word [rax + rax]
0x00002d08      4939eb         cmp r11, rbp
0x00002d0b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00002d0f      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d13      750d           jne 0x2d22
0x00002d15      488b442410     mov rax, qword [rsp + 0x10]
0x00002d1a      803c2800       cmp byte [rax + rbp], 0
0x00002d1e      410f95c4       setne r12b
0x00002d22      4584e4         test r12b, r12b
0x00002d25      0f8455060000   je 0x3380
0x00002d2b      837c240802     cmp dword [rsp + 8], 2
0x00002d30      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00002d35      4c8d0c2f       lea r9, [rdi + rbp]
0x00002d39      0f95c0         setne al
0x00002d3c      2244240d       and al, byte [rsp + 0xd]
0x00002d40      4189c2         mov r10d, eax
0x00002d43      0f84a7000000   je 0x2df0
0x00002d49      488b442418     mov rax, qword [rsp + 0x18]
0x00002d4e      4885c0         test rax, rax
0x00002d51      0f8429040000   je 0x3180
0x00002d57      4983fbff       cmp r11, 0xffffffffffffffff
0x00002d5b      488d5c0500     lea rbx, [rbp + rax]
0x00002d60      752e           jne 0x2d90
0x00002d62      4883f801       cmp rax, 1
0x00002d66      7628           jbe 0x2d90
0x00002d68      4488442438     mov byte [rsp + 0x38], r8b
0x00002d6d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00002d72      4c894c2428     mov qword [rsp + 0x28], r9
0x00002d77      e864e7ffff     call sym.imp.strlen
0x00002d7c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002d82      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00002d88      4989c3         mov r11, rax
0x00002d8b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00002d90      4c39db         cmp rbx, r11
0x00002d93      4488542428     mov byte [rsp + 0x28], r10b
0x00002d98      0f87b2050000   ja 0x3350
0x00002d9e      488b542418     mov rdx, qword [rsp + 0x18]
0x00002da3      488b742448     mov rsi, qword [rsp + 0x48]
0x00002da8      4c89cf         mov rdi, r9
0x00002dab      4c895c2440     mov qword [rsp + 0x40], r11
0x00002db0      4488442438     mov byte [rsp + 0x38], r8b
0x00002db5      4c894c2430     mov qword [rsp + 0x30], r9
0x00002dba      e8e1e7ffff     call sym.imp.memcmp
0x00002dbf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00002dc1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00002dc6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00002dcc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00002dd1      0f8579050000   jne 0x3350
0x00002dd7      807c240f00     cmp byte [rsp + 0xf], 0
0x00002ddc      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00002de2      0f857d0f0000   jne 0x3d65
0x00002de8      0f1f84000000.  nop dword [rax + rax]
0x00002df0      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00002df4      80fb7e         cmp bl, 0x7e
0x00002df7      0f871b030000   ja 0x3118
0x00002dfd      488d0d282e00.  lea rcx, [0x00005c2c]
0x00002e04      0fb6d3         movzx edx, bl
0x00002e07      48630491       movsxd rax, dword [rcx + rdx*4]
0x00002e0b      4801c8         add rax, rcx
0x00002e0e      ffe0           jmp rax
0x00002e10      4531d2         xor r10d, r10d
0x00002e13      4983fb01       cmp r11, 1
0x00002e17      0f95c0         setne al
0x00002e1a      4983fbff       cmp r11, 0xffffffffffffffff
0x00002e1e      750c           jne 0x2e2c
0x00002e20      488b442410     mov rax, qword [rsp + 0x10]
0x00002e25      80780100       cmp byte [rax + 1], 0
0x00002e29      0f95c0         setne al
0x00002e2c      837c240802     cmp dword [rsp + 8], 2
0x00002e31      0f94c2         sete dl
0x00002e34      84c0           test al, al
0x00002e36      0f844c020000   je 0x3088
0x00002e3c      4531e4         xor r12d, r12d
0x00002e3f      31c0           xor eax, eax
0x00002e41      0f1f80000000.  nop dword [rax]
0x00002e48      807c240d01     cmp byte [rsp + 0xd], 1
0x00002e4d      0f850f010000   jne 0x2f62
0x00002e53      84d2           test dl, dl
0x00002e55      0f8507010000   jne 0x2f62
0x00002e5b      488b742420     mov rsi, qword [rsp + 0x20]
0x00002e60      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00002e63      7414           je 0x2e79
0x00002e65      89da           mov edx, ebx
0x00002e67      c0ea05         shr dl, 5
0x00002e6a      0fb6d2         movzx edx, dl
0x00002e6d      8b1496         mov edx, dword [rsi + rdx*4]
0x00002e70      0fa3da         bt edx, ebx
0x00002e73      0f824a010000   jb 0x2fc3
0x00002e79      4584d2         test r10b, r10b
0x00002e7c      0f8541010000   jne 0x2fc3
0x00002e82      83f001         xor eax, 1
0x00002e85      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00002e89      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00002e8c      84c0           test al, al
0x00002e8e      7420           je 0x2eb0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00002e90      4d39fd         cmp r13, r15
0x00002e93      7605           jbe 0x2e9a
0x00002e95      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002e9a      498d4701       lea rax, [r15 + 1]
0x00002e9e      4939c5         cmp r13, rax
0x00002ea1      7606           jbe 0x2ea9
0x00002ea3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00002ea9      4983c702       add r15, 2
0x00002ead      4531c0         xor r8d, r8d
0x00002eb0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00002eb3      7304           jae 0x2eb9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00002eb5      43881c3e       mov byte [r14 + r15], bl
0x00002eb9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00002ebe      4983c701       add r15, 1
0x00002ec2      b800000000     mov eax, 0
0x00002ec7      4584e4         test r12b, r12b
0x00002eca      0f44f8         cmove edi, eax
0x00002ecd      40887c240e     mov byte [rsp + 0xe], dil
0x00002ed2      e931feffff     jmp 0x2d08
0x00002ed7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00002ee0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00002ee3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00002ee7      83f802         cmp eax, 2
0x00002eea      0f84b8050000   je 0x34a8
0x00002ef0      83f805         cmp eax, 5
0x00002ef3      0f846f050000   je 0x3468
0x00002ef9      83f802         cmp eax, 2
0x00002efc      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00002f01      0f94c2         sete dl
0x00002f04      4531e4         xor r12d, r12d
0x00002f07      31c0           xor eax, eax
0x00002f09      e93affffff     jmp 0x2e48
0x00002f0e      6690           nop
0x00002f10      4531d2         xor r10d, r10d
0x00002f13      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00002f18      0f8402050000   je 0x3420
0x00002f1e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00002f23      31d2           xor edx, edx
0x00002f25      31c0           xor eax, eax
0x00002f27      bb27000000     mov ebx, 0x27                           ; '''
0x00002f2c      e917ffffff     jmp 0x2e48
0x00002f31      0f1f80000000.  nop dword [rax]
0x00002f38      ba09000000     mov edx, 9
0x00002f3d      bb74000000     mov ebx, 0x74                           ; 't'
0x00002f42      837c240802     cmp dword [rsp + 8], 2
0x00002f47      0f94c0         sete al
0x00002f4a      2244240f       and al, byte [rsp + 0xf]
0x00002f4e      0f854a010000   jne 0x309e
0x00002f54      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f59      7565           jne 0x2fc0
0x00002f5b      89d3           mov ebx, edx
0x00002f5d      4531e4         xor r12d, r12d
0x00002f60      31c0           xor eax, eax
0x00002f62      807c240f00     cmp byte [rsp + 0xf], 0
0x00002f67      0f85eefeffff   jne 0x2e5b
0x00002f6d      e907ffffff     jmp 0x2e79                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00002f72      660f1f440000   nop word [rax + rax]
0x00002f78      ba08000000     mov edx, 8
0x00002f7d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00002f82      ebd0           jmp 0x2f54
0x00002f84      0f1f4000       nop dword [rax]
0x00002f88      837c240802     cmp dword [rsp + 8], 2
0x00002f8d      0f84cd030000   je 0x3360
0x00002f93      807c240d00     cmp byte [rsp + 0xd], 0
0x00002f98      0f8412020000   je 0x31b0
0x00002f9e      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fa3      0f8407020000   je 0x31b0
0x00002fa9      48837c241800   cmp qword [rsp + 0x18], 0
0x00002faf      0f85b6030000   jne 0x336b
0x00002fb5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00002fba      660f1f440000   nop word [rax + rax]
0x00002fc0      4531e4         xor r12d, r12d
0x00002fc3      837c240802     cmp dword [rsp + 8], 2
0x00002fc8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00002fcb      807c240f00     cmp byte [rsp + 0xf], 0
0x00002fd0      89d0           mov eax, edx
0x00002fd2      0f8550080000   jne 0x3828
0x00002fd8      4489c0         mov eax, r8d
0x00002fdb      83f001         xor eax, 1
0x00002fde      20d0           and al, dl
0x00002fe0      742f           je 0x3011
0x00002fe2      4d39fd         cmp r13, r15
0x00002fe5      7605           jbe 0x2fec
0x00002fe7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00002fec      498d5701       lea rdx, [r15 + 1]
0x00002ff0      4939d5         cmp r13, rdx
0x00002ff3      7606           jbe 0x2ffb
0x00002ff5      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00002ffb      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00002fff      4939d5         cmp r13, rdx
0x00003002      7606           jbe 0x300a
0x00003004      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000300a      4983c703       add r15, 3
0x0000300e      4189c0         mov r8d, eax
0x00003011      4d39fd         cmp r13, r15
0x00003014      7605           jbe 0x301b
0x00003016      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000301b      4983c701       add r15, 1
0x0000301f      4883c501       add rbp, 1
0x00003023      e988feffff     jmp 0x2eb0
0x00003028      0f1f84000000.  nop dword [rax + rax]
0x00003030      807c240d00     cmp byte [rsp + 0xd], 0
0x00003035      0f85c8010000   jne 0x3203
0x0000303b      31d2           xor edx, edx
0x0000303d      f644247801     test byte [rsp + 0x78], 1
0x00003042      0f8413ffffff   je 0x2f5b
0x00003048      4883c501       add rbp, 1
0x0000304c      e9b7fcffff     jmp 0x2d08
0x00003051      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003058      837c240802     cmp dword [rsp + 8], 2
0x0000305d      0f94c2         sete dl
0x00003060      31c0           xor eax, eax
0x00003062      e9e1fdffff     jmp 0x2e48
0x00003067      660f1f840000.  nop word [rax + rax]
0x00003070      ba07000000     mov edx, 7
0x00003075      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000307a      e9d5feffff     jmp 0x2f54
0x0000307f      90             nop
0x00003080      837c240802     cmp dword [rsp + 8], 2
0x00003085      0f94c2         sete dl
0x00003088      4885ed         test rbp, rbp
0x0000308b      0f85abfdffff   jne 0x2e3c
0x00003091      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003096      20d0           and al, dl
0x00003098      0f84aafdffff   je 0x2e48
0x0000309e      4c89dd         mov rbp, r11
0x000030a1      c74424080200.  mov dword [rsp + 8], 2
0x000030a9      e9fb060000     jmp 0x37a9
0x000030ae      6690           nop
0x000030b0      837c240802     cmp dword [rsp + 8], 2
0x000030b5      0f94c2         sete dl
0x000030b8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000030bb      ebd4           jmp 0x3091
0x000030bd      0f1f00         nop dword [rax]
0x000030c0      837c240802     cmp dword [rsp + 8], 2
0x000030c5      bb20000000     mov ebx, 0x20                           ; "@"
0x000030ca      0f94c2         sete dl
0x000030cd      ebc2           jmp 0x3091
0x000030cf      90             nop
0x000030d0      ba0d000000     mov edx, 0xd
0x000030d5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000030da      e963feffff     jmp 0x2f42
0x000030df      90             nop
0x000030e0      ba0c000000     mov edx, 0xc
0x000030e5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000030ea      e965feffff     jmp 0x2f54
0x000030ef      90             nop
0x000030f0      ba0b000000     mov edx, 0xb
0x000030f5      bb76000000     mov ebx, 0x76                           ; 'v'
0x000030fa      e955feffff     jmp 0x2f54
0x000030ff      90             nop
0x00003100      ba0a000000     mov edx, 0xa
0x00003105      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x0000310a      e933feffff     jmp 0x2f42
0x0000310f      90             nop
0x00003110      4531d2         xor r10d, r10d
0x00003113      0f1f440000     nop dword [rax + rax]
0x00003118      48837c245801   cmp qword [rsp + 0x58], 1
0x0000311e      0f85a4030000   jne 0x34c8
0x00003124      4c895c2438     mov qword [rsp + 0x38], r11
0x00003129      4488442430     mov byte [rsp + 0x30], r8b
0x0000312e      4488542428     mov byte [rsp + 0x28], r10b
0x00003133      e8b8e5ffff     call sym.imp.__ctype_b_loc
0x00003138      488b08         mov rcx, qword [rax]
0x0000313b      0fb6d3         movzx edx, bl
0x0000313e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003144      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x0000314a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x0000314f      bf01000000     mov edi, 1
0x00003154      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003158      66250040       and ax, 0x4000
0x0000315c      410f95c4       setne r12b
0x00003160      0f94c0         sete al
0x00003163      2244240d       and al, byte [rsp + 0xd]
0x00003167      84c0           test al, al
0x00003169      0f8592090000   jne 0x3b01
0x0000316f      837c240802     cmp dword [rsp + 8], 2
0x00003174      0f94c2         sete dl
0x00003177      e9ccfcffff     jmp 0x2e48
0x0000317c      0f1f4000       nop dword [rax]
0x00003180      410fb619       movzx ebx, byte [r9]
0x00003184      80fb7e         cmp bl, 0x7e
0x00003187      7787           ja 0x3110
0x00003189      488d0d982c00.  lea rcx, [0x00005e28]
0x00003190      0fb6d3         movzx edx, bl
0x00003193      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003197      4801c8         add rax, rcx
0x0000319a      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x0000319c      0f1f4000       nop dword [rax]
0x000031a0      4531d2         xor r10d, r10d
0x000031a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000031a8      0f85f0fdffff   jne 0x2f9e
0x000031ae      6690           nop
0x000031b0      ba5c000000     mov edx, 0x5c                           ; '\'
0x000031b5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000031ba      e995fdffff     jmp 0x2f54
0x000031bf      90             nop
0x000031c0      ba0c000000     mov edx, 0xc
0x000031c5      4531d2         xor r10d, r10d
0x000031c8      bb66000000     mov ebx, 0x66                           ; 'f'
0x000031cd      e982fdffff     jmp 0x2f54
0x000031d2      660f1f440000   nop word [rax + rax]
0x000031d8      ba0a000000     mov edx, 0xa
0x000031dd      4531d2         xor r10d, r10d
0x000031e0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x000031e5      e958fdffff     jmp 0x2f42
0x000031ea      660f1f440000   nop word [rax + rax]
0x000031f0      bb61000000     mov ebx, 0x61                           ; 'a'
0x000031f5      e9c6fdffff     jmp 0x2fc0
0x000031fa      660f1f440000   nop word [rax + rax]
0x00003200      4531d2         xor r10d, r10d
0x00003203      837c240802     cmp dword [rsp + 8], 2
0x00003208      0f94c2         sete dl
0x0000320b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003210      0f85940b0000   jne 0x3daa
0x00003216      4489c0         mov eax, r8d
0x00003219      4c89f9         mov rcx, r15
0x0000321c      83f001         xor eax, 1
0x0000321f      20d0           and al, dl
0x00003221      742d           je 0x3250
0x00003223      4d39fd         cmp r13, r15
0x00003226      7605           jbe 0x322d
0x00003228      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000322d      498d4f01       lea rcx, [r15 + 1]
0x00003231      4939cd         cmp r13, rcx
0x00003234      7606           jbe 0x323c
0x00003236      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000323c      498d4f02       lea rcx, [r15 + 2]
0x00003240      4939cd         cmp r13, rcx
0x00003243      0f8730060000   ja 0x3879
0x00003249      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x0000324d      4189c0         mov r8d, eax
0x00003250      4939cd         cmp r13, rcx
0x00003253      7605           jbe 0x325a
0x00003255      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000325a      837c240802     cmp dword [rsp + 8], 2
0x0000325f      4c8d7901       lea r15, [rcx + 1]
0x00003263      0f8400060000   je 0x3869
0x00003269      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x0000326d      4c39d8         cmp rax, r11
0x00003270      7319           jae 0x328b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003272      488b442410     mov rax, qword [rsp + 0x10]
0x00003277      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x0000327c      88442428       mov byte [rsp + 0x28], al
0x00003280      83e830         sub eax, 0x30
0x00003283      3c09           cmp al, 9
0x00003285      0f862e080000   jbe 0x3ab9
0x0000328b      4489e0         mov eax, r12d
0x0000328e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003293      4531e4         xor r12d, r12d
0x00003296      e9adfbffff     jmp 0x2e48                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x0000329b      0f1f440000     nop dword [rax + rax]
0x000032a0      837c240802     cmp dword [rsp + 8], 2
0x000032a5      4589d4         mov r12d, r10d
0x000032a8      0f94c2         sete dl
0x000032ab      4531d2         xor r10d, r10d
0x000032ae      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032b0      e993fbffff     jmp 0x2e48                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x000032b5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x000032b8      837c240802     cmp dword [rsp + 8], 2
0x000032bd      0f94c2         sete dl
0x000032c0      4531d2         xor r10d, r10d
0x000032c3      e9c0fdffff     jmp 0x3088
0x000032c8      0f1f84000000.  nop dword [rax + rax]
0x000032d0      837c240802     cmp dword [rsp + 8], 2
0x000032d5      0f94c2         sete dl
0x000032d8      4531d2         xor r10d, r10d
0x000032db      4531e4         xor r12d, r12d
0x000032de      e9aefdffff     jmp 0x3091
0x000032e3      0f1f440000     nop dword [rax + rax]
0x000032e8      837c240802     cmp dword [rsp + 8], 2
0x000032ed      4589d4         mov r12d, r10d
0x000032f0      bb20000000     mov ebx, 0x20                           ; "@"
0x000032f5      0f94c2         sete dl
0x000032f8      4531d2         xor r10d, r10d
0x000032fb      e991fdffff     jmp 0x3091
0x00003300      ba0d000000     mov edx, 0xd
0x00003305      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003308      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000330d      e930fcffff     jmp 0x2f42
0x00003312      660f1f440000   nop word [rax + rax]
0x00003318      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000331d      e99efcffff     jmp 0x2fc0
0x00003322      660f1f440000   nop word [rax + rax]
0x00003328      ba09000000     mov edx, 9
0x0000332d      4531d2         xor r10d, r10d
0x00003330      bb74000000     mov ebx, 0x74                           ; 't'
0x00003335      e908fcffff     jmp 0x2f42
0x0000333a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003340      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003345      e976fcffff     jmp 0x2fc0
0x0000334a      660f1f440000   nop word [rax + rax]
0x00003350      4531d2         xor r10d, r10d
0x00003353      e998faffff     jmp 0x2df0
0x00003358      0f1f84000000.  nop dword [rax + rax]
0x00003360      807c240f00     cmp byte [rsp + 0xf], 0
0x00003365      0f8565090000   jne 0x3cd0
0x0000336b      4883c501       add rbp, 1
0x0000336f      4489c0         mov eax, r8d
0x00003372      4531e4         xor r12d, r12d
0x00003375      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000337a      e90dfbffff     jmp 0x2e8c
0x0000337f      90             nop
0x00003380      837c240802     cmp dword [rsp + 8], 2
0x00003385      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000338a      4589c4         mov r12d, r8d
0x0000338d      4c89dd         mov rbp, r11
0x00003390      0f94c2         sete dl
0x00003393      89d8           mov eax, ebx
0x00003395      4d85ff         test r15, r15
0x00003398      0f94c1         sete cl
0x0000339b      21d0           and eax, edx
0x0000339d      20c8           and al, cl
0x0000339f      0f85610a0000   jne 0x3e06                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x000033a5      89d8           mov eax, ebx
0x000033a7      83f001         xor eax, 1
0x000033aa      20c2           and dl, al
0x000033ac      0f846a090000   je 0x3d1c
0x000033b2      807c247c00     cmp byte [rsp + 0x7c], 0
0x000033b7      0f845d090000   je 0x3d1a
0x000033bd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x000033c2      0f85f5090000   jne 0x3dbd
0x000033c8      4d85ed         test r13, r13
0x000033cb      0f94c0         sete al
0x000033ce      48837c245000   cmp qword [rsp + 0x50], 0
0x000033d4      0f95c2         setne dl
0x000033d7      20d0           and al, dl
0x000033d9      0f841d0a0000   je 0x3dfc
0x000033df      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000033e4      488d1dc22700.  lea rbx, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x000033eb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x000033ef      c74424080200.  mov dword [rsp + 8], 2
0x000033f7      41bf01000000   mov r15d, 1
0x000033fd      48c744241801.  mov qword [rsp + 0x18], 1
0x00003406      c644240f00     mov byte [rsp + 0xf], 0
0x0000340b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003410      8844247c       mov byte [rsp + 0x7c], al
0x00003414      e9daf8ffff     jmp 0x2cf3
0x00003419      0f1f80000000.  nop dword [rax]
0x00003420      807c240f00     cmp byte [rsp + 0xf], 0
0x00003425      0f85a5080000   jne 0x3cd0
0x0000342b      4d85ed         test r13, r13
0x0000342e      0f84fc030000   je 0x3830                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003434      31d2           xor edx, edx
0x00003436      48837c245000   cmp qword [rsp + 0x50], 0
0x0000343c      0f85ee030000   jne 0x3830                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003442      4c896c2450     mov qword [rsp + 0x50], r13
0x00003447      4983c703       add r15, 3
0x0000344b      31c0           xor eax, eax
0x0000344d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003452      4531c0         xor r8d, r8d
0x00003455      4989d5         mov r13, rdx
0x00003458      bb27000000     mov ebx, 0x27                           ; '''
0x0000345d      e917faffff     jmp 0x2e79
0x00003462      660f1f440000   nop word [rax + rax]
0x00003468      f644247804     test byte [rsp + 0x78], 4
0x0000346d      7421           je 0x3490
0x0000346f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003473      4c39d9         cmp rcx, r11
0x00003476      7318           jae 0x3490
0x00003478      488b442410     mov rax, qword [rsp + 0x10]
0x0000347d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003482      0f848a070000   je 0x3c12
0x00003488      0f1f84000000.  nop dword [rax + rax]
0x00003490      31d2           xor edx, edx
0x00003492      4531e4         xor r12d, r12d
0x00003495      31c0           xor eax, eax
0x00003497      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000349c      e9a7f9ffff     jmp 0x2e48
0x000034a1      0f1f80000000.  nop dword [rax]
0x000034a8      807c240f00     cmp byte [rsp + 0xf], 0
0x000034ad      0f851d080000   jne 0x3cd0
0x000034b3      4531e4         xor r12d, r12d
0x000034b6      31c0           xor eax, eax
0x000034b8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000034bd      e9b7f9ffff     jmp 0x2e79                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x000034c2      660f1f440000   nop word [rax + rax]
0x000034c8      488d8424a000.  lea rax, [rsp + 0xa0]
0x000034d0      4983fbff       cmp r11, 0xffffffffffffffff
0x000034d4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x000034e0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x000034e5      752d           jne 0x3514
0x000034e7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000034ec      4488442440     mov byte [rsp + 0x40], r8b
0x000034f1      4488542438     mov byte [rsp + 0x38], r10b
0x000034f6      4c894c2430     mov qword [rsp + 0x30], r9
0x000034fb      e8e0dfffff     call sym.imp.strlen
0x00003500      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003506      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000350c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000350f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003514      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000351c      31c9           xor ecx, ecx
0x0000351e      885c247e       mov byte [rsp + 0x7e], bl
0x00003522      448844247d     mov byte [rsp + 0x7d], r8b
0x00003527      4889cb         mov rbx, rcx
0x0000352a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003532      4889442438     mov qword [rsp + 0x38], rax
0x00003537      448854247f     mov byte [rsp + 0x7f], r10b
0x0000353c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003544      4c89742440     mov qword [rsp + 0x40], r14
0x00003549      4c896c2470     mov qword [rsp + 0x70], r13
0x0000354e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003553      488b442410     mov rax, qword [rsp + 0x10]
0x00003558      4c8d741d00     lea r14, [rbp + rbx]
0x0000355d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003562      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003567      488b7c2438     mov rdi, qword [rsp + 0x38]
0x0000356c      4e8d2c30       lea r13, [rax + r14]
0x00003570      4c29f2         sub rdx, r14
0x00003573      4c89ee         mov rsi, r13
0x00003576      e8351c0000     call sym.rpl_mbrtowc
0x0000357b      4885c0         test rax, rax
0x0000357e      4989c7         mov r15, rax
0x00003581      744e           je 0x35d1
0x00003583      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003587      0f8418060000   je 0x3ba5
0x0000358d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003591      0f849a050000   je 0x3b31
0x00003597      837c240802     cmp dword [rsp + 8], 2
0x0000359c      0f94c0         sete al
0x0000359f      2244240f       and al, byte [rsp + 0xf]
0x000035a3      0f8597010000   jne 0x3740
0x000035a9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x000035b0      e82be1ffff     call sym.imp.iswprint
0x000035b5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x000035ba      85c0           test eax, eax
0x000035bc      b800000000     mov eax, 0
0x000035c1      440f44e0       cmove r12d, eax
0x000035c5      4c01fb         add rbx, r15
0x000035c8      e803e1ffff     call sym.imp.mbsinit
0x000035cd      85c0           test eax, eax
0x000035cf      7482           je 0x3553
0x000035d1      4489e2         mov edx, r12d
0x000035d4      4889df         mov rdi, rbx
0x000035d7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000035dd      83f201         xor edx, 1
0x000035e0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000035e5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000035eb      2254240d       and dl, byte [rsp + 0xd]
0x000035ef      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000035f7      4c8b742440     mov r14, qword [rsp + 0x40]
0x000035fc      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003601      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003606      4883ff01       cmp rdi, 1
0x0000360a      0f86fb050000   jbe 0x3c0b
0x00003610      4889f9         mov rcx, rdi
0x00003613      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003615      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000361b      4801e9         add rcx, rbp
0x0000361e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003623      e9b6000000     jmp 0x36de
0x00003628      0f1f84000000.  nop dword [rax + rax]
0x00003630      837c240802     cmp dword [rsp + 8], 2
0x00003635      0f94c0         sete al
0x00003638      4584c9         test r9b, r9b
0x0000363b      0f85af040000   jne 0x3af0
0x00003641      4489c6         mov esi, r8d
0x00003644      83f601         xor esi, 1
0x00003647      4020f0         and al, sil
0x0000364a      742f           je 0x367b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x0000364c      4d39fd         cmp r13, r15
0x0000364f      7605           jbe 0x3656
0x00003651      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003656      498d7701       lea rsi, [r15 + 1]
0x0000365a      4939f5         cmp r13, rsi
0x0000365d      7606           jbe 0x3665                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x0000365f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003665      498d7702       lea rsi, [r15 + 2]
0x00003669      4939f5         cmp r13, rsi
0x0000366c      7606           jbe 0x3674
0x0000366e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003674      4983c703       add r15, 3
0x00003678      4189c0         mov r8d, eax
0x0000367b      4d39fd         cmp r13, r15
0x0000367e      7605           jbe 0x3685
0x00003680      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003685      498d4701       lea rax, [r15 + 1]
0x00003689      4939c5         cmp r13, rax
0x0000368c      760d           jbe 0x369b
0x0000368e      89d8           mov eax, ebx
0x00003690      c0e806         shr al, 6
0x00003693      83c030         add eax, 0x30
0x00003696      4388443e01     mov byte [r14 + r15 + 1], al
0x0000369b      498d4702       lea rax, [r15 + 2]
0x0000369f      4939c5         cmp r13, rax
0x000036a2      7610           jbe 0x36b4
0x000036a4      89d8           mov eax, ebx
0x000036a6      c0e803         shr al, 3
0x000036a9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x000036ac      83c030         add eax, 0x30
0x000036af      4388443e02     mov byte [r14 + r15 + 2], al
0x000036b4      83e307         and ebx, 7
0x000036b7      4883c501       add rbp, 1
0x000036bb      4983c703       add r15, 3
0x000036bf      83c330         add ebx, 0x30
0x000036c2      4839cd         cmp rbp, rcx
0x000036c5      0f83e5f7ffff   jae 0x2eb0
0x000036cb      89d6           mov esi, edx
0x000036cd      4d39fd         cmp r13, r15
0x000036d0      7604           jbe 0x36d6
0x000036d2      43881c3e       mov byte [r14 + r15], bl
0x000036d6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000036da      4983c701       add r15, 1
0x000036de      84d2           test dl, dl
0x000036e0      0f854affffff   jne 0x3630
0x000036e6      89f0           mov eax, esi
0x000036e8      83f001         xor eax, 1
0x000036eb      4421c0         and eax, r8d
0x000036ee      4584d2         test r10b, r10b
0x000036f1      740e           je 0x3701
0x000036f3      4d39fd         cmp r13, r15
0x000036f6      7605           jbe 0x36fd
0x000036f8      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000036fd      4983c701       add r15, 1
0x00003701      4883c501       add rbp, 1
0x00003705      4839cd         cmp rbp, rcx
0x00003708      0f837ef7ffff   jae 0x2e8c
0x0000370e      84c0           test al, al
0x00003710      0f84f8030000   je 0x3b0e
0x00003716      4d39fd         cmp r13, r15
0x00003719      7605           jbe 0x3720
0x0000371b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003720      498d4701       lea rax, [r15 + 1]
0x00003724      4939c5         cmp r13, rax
0x00003727      7606           jbe 0x372f
0x00003729      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000372f      4983c702       add r15, 2
0x00003733      4531d2         xor r10d, r10d
0x00003736      4531c0         xor r8d, r8d
0x00003739      eb92           jmp 0x36cd
0x0000373b      0f1f440000     nop dword [rax + rax]
0x00003740      4983ff01       cmp r15, 1
0x00003744      0f845ffeffff   je 0x35a9
0x0000374a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000374f      4a8d0c3f       lea rcx, [rdi + r15]
0x00003753      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00003758      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000375c      eb0f           jmp 0x376d
0x0000375e      6690           nop
0x00003760      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00003764      4939d0         cmp r8, rdx
0x00003767      0f843cfeffff   je 0x35a9
0x0000376d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00003770      83e95b         sub ecx, 0x5b
0x00003773      80f921         cmp cl, 0x21
0x00003776      77e8           ja 0x3760                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00003778      be01000000     mov esi, 1
0x0000377d      48d3e6         shl rsi, cl
0x00003780      4889f1         mov rcx, rsi
0x00003783      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000378d      4885f1         test rcx, rsi
0x00003790      74ce           je 0x3760
0x00003792      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003797      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x0000379c      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000037a1      c74424080200.  mov dword [rsp + 8], 2
0x000037a9      807c240d00     cmp byte [rsp + 0xd], 0
0x000037ae      7410           je 0x37c0
0x000037b0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000037b2      b804000000     mov eax, 4
0x000037b7      0f44442408     cmove eax, dword [rsp + 8]
0x000037bc      89442408       mov dword [rsp + 8], eax
0x000037c0      4883ec08       sub rsp, 8
0x000037c4      4889e9         mov rcx, rbp
0x000037c7      4c89ee         mov rsi, r13
0x000037ca      ff742468       push qword [rsp + 0x68]
0x000037ce      ff742478       push qword [rsp + 0x78]
0x000037d2      4c89f7         mov rdi, r14
0x000037d5      6a00           push 0
0x000037d7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000037df      448b442428     mov r8d, dword [rsp + 0x28]
0x000037e4      488b542430     mov rdx, qword [rsp + 0x30]
0x000037e9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000037ed      e82ef4ffff     call sym.quotearg_buffer_restyled
0x000037f2      4883c420       add rsp, 0x20
0x000037f6      4989c7         mov r15, rax
0x000037f9      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00003801      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000380a      4c89f8         mov rax, r15
0x0000380d      0f8500060000   jne 0x3e13
0x00003813      4881c4b80000.  add rsp, 0xb8
0x0000381a      5b             pop rbx
0x0000381b      5d             pop rbp
0x0000381c      415c           pop r12
0x0000381e      415d           pop r13
0x00003820      415e           pop r14
0x00003822      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00003824      c3             ret
0x00003825      0f1f00         nop dword [rax]
0x00003828      4c89dd         mov rbp, r11
0x0000382b      e979ffffff     jmp 0x37a9
0x00003830      4d39fd         cmp r13, r15
0x00003833      7605           jbe 0x383a
0x00003835      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000383a      498d4701       lea rax, [r15 + 1]
0x0000383e      4939c5         cmp r13, rax
0x00003841      7606           jbe 0x3849
0x00003843      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00003849      498d4702       lea rax, [r15 + 2]
0x0000384d      4939c5         cmp r13, rax
0x00003850      0f86ec050000   jbe 0x3e42
0x00003856      4c89ea         mov rdx, r13
0x00003859      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000385f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003864      e9d9fbffff     jmp 0x3442
0x00003869      4489e0         mov eax, r12d
0x0000386c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00003871      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00003874      e900f6ffff     jmp 0x2e79                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00003879      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000387f      e9c5f9ffff     jmp 0x3249
0x00003884      85db           test ebx, ebx
0x00003886      0f8527f4ffff   jne 0x2cb3
0x0000388c      c644240d01     mov byte [rsp + 0xd], 1
0x00003891      4d85ed         test r13, r13
0x00003894      0f8590050000   jne 0x3e2a
0x0000389a      488d050c2300.  lea rax, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x000038a1      48c744245000.  mov qword [rsp + 0x50], 0
0x000038aa      c644240e01     mov byte [rsp + 0xe], 1
0x000038af      c644247c00     mov byte [rsp + 0x7c], 0
0x000038b4      4531e4         xor r12d, r12d
0x000038b7      c644240f00     mov byte [rsp + 0xf], 0
0x000038bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000038c5      4889442448     mov qword [rsp + 0x48], rax
0x000038ca      41bf01000000   mov r15d, 1
0x000038d0      c74424080200.  mov dword [rsp + 8], 2
0x000038d8      e916f4ffff     jmp 0x2cf3                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000038dd      0f1f00         nop dword [rax]
0x000038e0      85db           test ebx, ebx
0x000038e2      0f85f5030000   jne 0x3cdd
0x000038e8      4d85ed         test r13, r13
0x000038eb      0f8425020000   je 0x3b16
0x000038f1      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x000038f5      c644240e01     mov byte [rsp + 0xe], 1
0x000038fa      4531e4         xor r12d, r12d
0x000038fd      c644247c00     mov byte [rsp + 0x7c], 0
0x00003902      48c744245000.  mov qword [rsp + 0x50], 0
0x0000390b      488d05992200.  lea rax, str.l______l                   ; 0x5bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd\u04ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u44ff\uffd4\u4cff\uffd3\u0cff\uffd3\ud4ff\uffd4\uc4ff\uffd4\ub4ff\uffd4\ua4ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u94ff\uffd4\u84ff\uffd4\u84ff\uffd4\u54ff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\ue7ff\uffd2\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\ub7ff\uffd2\uecff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u5cff\uffd3\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\ue7ff\uffd1\u84ff\uffd4\ue7ff\uffd1\u54ff\uffd4\U010003d3\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc8ff\uffd3\u18ff\uffd5\xff\uffd5\ub0ff\uffd3\uf0ff\uffd4\u98ff\uffd3\U010003d4\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc0ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u90ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ue8ff\uffd0\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ub8ff\uffd0\ue8ff\uffd2\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd3\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ue8ff\uffcf\ua8ff\uffd4\ue8ff\uffcf\u90ff\uffd4\xff"
0x00003912      c644240f00     mov byte [rsp + 0xf], 0
0x00003917      c644240d01     mov byte [rsp + 0xd], 1
0x0000391c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003925      41bf01000000   mov r15d, 1
0x0000392b      4889442448     mov qword [rsp + 0x48], rax
0x00003930      e9bef3ffff     jmp 0x2cf3
0x00003935      488d056f2200.  lea rax, str.l______l                   ; 0x5bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd\u04ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u44ff\uffd4\u4cff\uffd3\u0cff\uffd3\ud4ff\uffd4\uc4ff\uffd4\ub4ff\uffd4\ua4ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u94ff\uffd4\u84ff\uffd4\u84ff\uffd4\u54ff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\ue7ff\uffd2\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\ub7ff\uffd2\uecff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u5cff\uffd3\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\ue7ff\uffd1\u84ff\uffd4\ue7ff\uffd1\u54ff\uffd4\U010003d3\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc8ff\uffd3\u18ff\uffd5\xff\uffd5\ub0ff\uffd3\uf0ff\uffd4\u98ff\uffd3\U010003d4\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc0ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u90ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ue8ff\uffd0\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ub8ff\uffd0\ue8ff\uffd2\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd3\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ue8ff\uffcf\ua8ff\uffd4\ue8ff\uffcf\u90ff\uffd4\xff"
0x0000393c      c644240e01     mov byte [rsp + 0xe], 1
0x00003941      c644247c00     mov byte [rsp + 0x7c], 0
0x00003946      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00003949      48c744245000.  mov qword [rsp + 0x50], 0
0x00003952      c644240f01     mov byte [rsp + 0xf], 1
0x00003957      c644240d01     mov byte [rsp + 0xd], 1
0x0000395c      48c744241801.  mov qword [rsp + 0x18], 1
0x00003965      4531ff         xor r15d, r15d
0x00003968      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000396d      c74424080500.  mov dword [rsp + 8], 5
0x00003975      e979f3ffff     jmp 0x2cf3
0x0000397a      c644240e01     mov byte [rsp + 0xe], 1
0x0000397f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003984      4531e4         xor r12d, r12d
0x00003987      48c744245000.  mov qword [rsp + 0x50], 0
0x00003990      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x00003995      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x00003998      c644240d01     mov byte [rsp + 0xd], 1
0x0000399d      48c744241800.  mov qword [rsp + 0x18], 0
0x000039a6      48c744244800.  mov qword [rsp + 0x48], 0
0x000039af      e93ff3ffff     jmp 0x2cf3
0x000039b4      837c24080a     cmp dword [rsp + 8], 0xa
0x000039b9      7456           je 0x3a11
0x000039bb      488d35ed2100.  lea rsi, [0x00005baf]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000039c2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000039c4      ba05000000     mov edx, 5
0x000039c9      e8f2daffff     call sym.imp.dcgettext
0x000039ce      4889c1         mov rcx, rax
0x000039d1      4889442468     mov qword [rsp + 0x68], rax
0x000039d6      488d05d22100.  lea rax, [0x00005baf]                   ; "`"
0x000039dd      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000039e0      0f8498030000   je 0x3d7e
0x000039e6      488d35c02100.  lea rsi, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x000039ed      31ff           xor edi, edi
0x000039ef      ba05000000     mov edx, 5
0x000039f4      e8c7daffff     call sym.imp.dcgettext
0x000039f9      4889c1         mov rcx, rax
0x000039fc      4889442460     mov qword [rsp + 0x60], rax
0x00003a01      488d05a52100.  lea rax, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x00003a08      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x00003a0b      0f8483030000   je 0x3d94
0x00003a11      4531ff         xor r15d, r15d
0x00003a14      85db           test ebx, ebx
0x00003a16      0f84c1010000   je 0x3bdd
0x00003a1c      85db           test ebx, ebx
0x00003a1e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00003a23      0f9544240f     setne byte [rsp + 0xf]
0x00003a28      4531e4         xor r12d, r12d
0x00003a2b      4889df         mov rdi, rbx
0x00003a2e      e8addaffff     call sym.imp.strlen
0x00003a33      48895c2448     mov qword [rsp + 0x48], rbx
0x00003a38      4889442418     mov qword [rsp + 0x18], rax
0x00003a3d      c644240e01     mov byte [rsp + 0xe], 1
0x00003a42      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a47      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a50      c644240d01     mov byte [rsp + 0xd], 1
0x00003a55      e999f2ffff     jmp 0x2cf3
0x00003a5a      c644240e01     mov byte [rsp + 0xe], 1
0x00003a5f      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a64      4531e4         xor r12d, r12d
0x00003a67      48c744245000.  mov qword [rsp + 0x50], 0
0x00003a70      c644240f00     mov byte [rsp + 0xf], 0
0x00003a75      4531ff         xor r15d, r15d
0x00003a78      c644240d00     mov byte [rsp + 0xd], 0
0x00003a7d      48c744241800.  mov qword [rsp + 0x18], 0
0x00003a86      48c744244800.  mov qword [rsp + 0x48], 0
0x00003a8f      e95ff2ffff     jmp 0x2cf3
0x00003a94      c644240e01     mov byte [rsp + 0xe], 1
0x00003a99      c644247c00     mov byte [rsp + 0x7c], 0
0x00003a9e      4531e4         xor r12d, r12d
0x00003aa1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003aaa      c644240f01     mov byte [rsp + 0xf], 1
0x00003aaf      c644240d01     mov byte [rsp + 0xd], 1
0x00003ab4      e91af2ffff     jmp 0x2cd3
0x00003ab9      4d39fd         cmp r13, r15
0x00003abc      7605           jbe 0x3ac3
0x00003abe      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00003ac3      488d4102       lea rax, [rcx + 2]
0x00003ac7      4939c5         cmp r13, rax
0x00003aca      7606           jbe 0x3ad2
0x00003acc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00003ad2      4489e0         mov eax, r12d
0x00003ad5      4c8d7903       lea r15, [rcx + 3]
0x00003ad9      4531e4         xor r12d, r12d
0x00003adc      bb30000000     mov ebx, 0x30                           ; '0'
0x00003ae1      e962f3ffff     jmp 0x2e48
0x00003ae6      662e0f1f8400.  nop word cs:[rax + rax]
0x00003af0      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003af5      4c89dd         mov rbp, r11
0x00003af8      885c240d       mov byte [rsp + 0xd], bl
0x00003afc      e9a8fcffff     jmp 0x37a9
0x00003b01      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003b06      4531e4         xor r12d, r12d
0x00003b09      e902fbffff     jmp 0x3610
0x00003b0e      4531d2         xor r10d, r10d
0x00003b11      e9b7fbffff     jmp 0x36cd
0x00003b16      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b1f      c644240e01     mov byte [rsp + 0xe], 1
0x00003b24      4531e4         xor r12d, r12d
0x00003b27      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b2c      e9dafdffff     jmp 0x390b
0x00003b31      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003b36      4c89f6         mov rsi, r14
0x00003b39      4c89e9         mov rcx, r13
0x00003b3c      4889d8         mov rax, rbx
0x00003b3f      4889df         mov rdi, rbx
0x00003b42      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003b48      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003b4d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00003b55      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00003b58      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003b5e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003b66      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003b6b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003b70      7326           jae 0x3b98
0x00003b72      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00003b75      7510           jne 0x3b87
0x00003b77      eb1f           jmp 0x3b98
0x00003b79      0f1f80000000.  nop dword [rax]
0x00003b80      41803c0100     cmp byte [r9 + rax], 0
0x00003b85      740e           je 0x3b95
0x00003b87      4883c001       add rax, 1
0x00003b8b      488d540500     lea rdx, [rbp + rax]
0x00003b90      4939d3         cmp r11, rdx
0x00003b93      77eb           ja 0x3b80
0x00003b95      4889c7         mov rdi, rax
0x00003b98      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003b9d      4531e4         xor r12d, r12d
0x00003ba0      e961faffff     jmp 0x3606
0x00003ba5      4889df         mov rdi, rbx
0x00003ba8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003bae      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003bb3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003bb9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003bc1      4531e4         xor r12d, r12d
0x00003bc4      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003bc9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003bce      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003bd3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00003bd8      e929faffff     jmp 0x3606
0x00003bdd      488b542468     mov rdx, qword [rsp + 0x68]
0x00003be2      0fb602         movzx eax, byte [rdx]
0x00003be5      84c0           test al, al
0x00003be7      0f842ffeffff   je 0x3a1c
0x00003bed      0f1f00         nop dword [rax]
0x00003bf0      4d39fd         cmp r13, r15
0x00003bf3      7604           jbe 0x3bf9
0x00003bf5      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00003bf9      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00003bfd      420fb6043a     movzx eax, byte [rdx + r15]
0x00003c02      84c0           test al, al
0x00003c04      75ea           jne 0x3bf0
0x00003c06      e911feffff     jmp 0x3a1c
0x00003c0b      89d0           mov eax, edx
0x00003c0d      e955f5ffff     jmp 0x3167
0x00003c12      0fb61c08       movzx ebx, byte [rax + rcx]
0x00003c16      80fb3e         cmp bl, 0x3e
0x00003c19      0f8771f8ffff   ja 0x3490
0x00003c1f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00003c29      480fa3d8       bt rax, rbx
0x00003c2d      0f835df8ffff   jae 0x3490
0x00003c33      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c38      0f85e4010000   jne 0x3e22                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00003c3e      4d39fd         cmp r13, r15
0x00003c41      7605           jbe 0x3c48
0x00003c43      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00003c48      498d4701       lea rax, [r15 + 1]
0x00003c4c      4939c5         cmp r13, rax
0x00003c4f      7606           jbe 0x3c57
0x00003c51      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c57      498d4702       lea rax, [r15 + 2]
0x00003c5b      4939c5         cmp r13, rax
0x00003c5e      7606           jbe 0x3c66
0x00003c60      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00003c66      498d4703       lea rax, [r15 + 3]
0x00003c6a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00003c6d      7606           jbe 0x3c75
0x00003c6f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00003c75      4983c704       add r15, 4
0x00003c79      31d2           xor edx, edx
0x00003c7b      4531e4         xor r12d, r12d
0x00003c7e      31c0           xor eax, eax
0x00003c80      4889cd         mov rbp, rcx
0x00003c83      e9c0f1ffff     jmp 0x2e48
0x00003c88      85db           test ebx, ebx
0x00003c8a      0f8488010000   je 0x3e18
0x00003c90      488d05161f00.  lea rax, [0x00005bad]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd"
0x00003c97      c644240e01     mov byte [rsp + 0xe], 1
0x00003c9c      c644247c00     mov byte [rsp + 0x7c], 0
0x00003ca1      4531e4         xor r12d, r12d
0x00003ca4      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cad      c644240f01     mov byte [rsp + 0xf], 1
0x00003cb2      c644240d00     mov byte [rsp + 0xd], 0
0x00003cb7      48c744241801.  mov qword [rsp + 0x18], 1
0x00003cc0      4531ff         xor r15d, r15d
0x00003cc3      4889442448     mov qword [rsp + 0x48], rax
0x00003cc8      e926f0ffff     jmp 0x2cf3
0x00003ccd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00003cd0      4c89dd         mov rbp, r11
0x00003cd3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003cd8      e9ccfaffff     jmp 0x37a9
0x00003cdd      488d05c71e00.  lea rax, str.l______l                   ; 0x5bab ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e\u5a00\uffde\ub3ff\uffd0\u88ff\uffe0\u94ff\uffde\u84ff\uffdc\ue0ff\uffdc\u35ff\uffdd\u7aff\uffdd\ub4ff\uffdd\ub4ff\uffdd\ub4ff\uffdd\u04ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u44ff\uffd4\u4cff\uffd3\u0cff\uffd3\ud4ff\uffd4\uc4ff\uffd4\ub4ff\uffd4\ua4ff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\uecff\uffd4\u94ff\uffd4\u84ff\uffd4\u84ff\uffd4\u54ff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\ue7ff\uffd2\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\u84ff\uffd4\ub7ff\uffd2\uecff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u84ff\uffd4\u5cff\uffd3\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u84ff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\u2cff\uffd4\ue7ff\uffd1\u84ff\uffd4\ue7ff\uffd1\u54ff\uffd4\U010003d3\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc8ff\uffd3\u18ff\uffd5\xff\uffd5\ub0ff\uffd3\uf0ff\uffd4\u98ff\uffd3\U010003d4\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\ue8ff\uffd2\uc0ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u90ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ue8ff\uffd0\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ua8ff\uffd4\ub8ff\uffd0\ue8ff\uffd2\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd3\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\ua8ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\u78ff\uffd4\ue8ff\uffcf\ua8ff\uffd4\ue8ff\uffcf\u90ff\uffd4\xff"
0x00003ce4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00003ce9      c644247c00     mov byte [rsp + 0x7c], 0
0x00003cee      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00003cf1      48c744245000.  mov qword [rsp + 0x50], 0
0x00003cfa      c644240f01     mov byte [rsp + 0xf], 1
0x00003cff      c644240d01     mov byte [rsp + 0xd], 1
0x00003d04      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d0d      4531ff         xor r15d, r15d
0x00003d10      4889442448     mov qword [rsp + 0x48], rax
0x00003d15      e9d9efffff     jmp 0x2cf3
0x00003d1a      89d0           mov eax, edx
0x00003d1c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00003d21      4885db         test rbx, rbx
0x00003d24      742c           je 0x3d52
0x00003d26      84c0           test al, al
0x00003d28      7428           je 0x3d52
0x00003d2a      0fb60b         movzx ecx, byte [rbx]
0x00003d2d      4889d8         mov rax, rbx
0x00003d30      84c9           test cl, cl
0x00003d32      741e           je 0x3d52
0x00003d34      4c89fa         mov rdx, r15
0x00003d37      4c29f8         sub rax, r15
0x00003d3a      4939d5         cmp r13, rdx
0x00003d3d      7604           jbe 0x3d43
0x00003d3f      41880c16       mov byte [r14 + rdx], cl
0x00003d43      4883c201       add rdx, 1
0x00003d47      0fb60c10       movzx ecx, byte [rax + rdx]
0x00003d4b      84c9           test cl, cl
0x00003d4d      75eb           jne 0x3d3a
0x00003d4f      4989d7         mov r15, rdx
0x00003d52      4d39fd         cmp r13, r15
0x00003d55      0f869efaffff   jbe 0x37f9
0x00003d5b      43c6043e00     mov byte [r14 + r15], 0
0x00003d60      e994faffff     jmp 0x37f9
0x00003d65      837c240802     cmp dword [rsp + 8], 2
0x00003d6a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003d6f      4c89dd         mov rbp, r11
0x00003d72      0f94c0         sete al
0x00003d75      885c240d       mov byte [rsp + 0xd], bl
0x00003d79      e92bfaffff     jmp 0x37a9
0x00003d7e      8b742408       mov esi, dword [rsp + 8]
0x00003d82      4889cf         mov rdi, rcx
0x00003d85      e8a6edffff     call sym.gettext_quote.part.1
0x00003d8a      4889442468     mov qword [rsp + 0x68], rax
0x00003d8f      e952fcffff     jmp 0x39e6
0x00003d94      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00003d98      4889cf         mov rdi, rcx
0x00003d9b      e890edffff     call sym.gettext_quote.part.1
0x00003da0      4889442460     mov qword [rsp + 0x60], rax
0x00003da5      e967fcffff     jmp 0x3a11
0x00003daa      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003daf      4c89dd         mov rbp, r11
0x00003db2      89d0           mov eax, edx
0x00003db4      885c240d       mov byte [rsp + 0xd], bl
0x00003db8      e9ecf9ffff     jmp 0x37a9
0x00003dbd      4883ec08       sub rsp, 8
0x00003dc1      41b805000000   mov r8d, 5
0x00003dc7      4c89d9         mov rcx, r11
0x00003dca      ff742468       push qword [rsp + 0x68]
0x00003dce      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00003dd2      4c89f7         mov rdi, r14
0x00003dd5      ff742438       push qword [rsp + 0x38]
0x00003dd9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00003de1      488b542430     mov rdx, qword [rsp + 0x30]
0x00003de6      488b742470     mov rsi, qword [rsp + 0x70]
0x00003deb      e830eeffff     call sym.quotearg_buffer_restyled
0x00003df0      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00003df4      4989c7         mov r15, rax
0x00003df7      e9fdf9ffff     jmp 0x37f9
0x00003dfc      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00003e01      e916ffffff     jmp 0x3d1c
0x00003e06      c74424080200.  mov dword [rsp + 8], 2
0x00003e0e      e996f9ffff     jmp 0x37a9
0x00003e13      e8d8d6ffff     call sym.imp.__stack_chk_fail
0x00003e18      c644240d00     mov byte [rsp + 0xd], 0
0x00003e1d      e96ffaffff     jmp 0x3891
0x00003e22      4c89dd         mov rbp, r11
0x00003e25      e996f9ffff     jmp 0x37c0
0x00003e2a      c644240e01     mov byte [rsp + 0xe], 1
0x00003e2f      31c0           xor eax, eax
0x00003e31      4531e4         xor r12d, r12d
0x00003e34      48c744245000.  mov qword [rsp + 0x50], 0
0x00003e3d      e9a2f5ffff     jmp 0x33e4
0x00003e42      4c89ea         mov rdx, r13
0x00003e45      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003e4a      e9f3f5ffff     jmp 0x3442
0x00003e4f      e8dcd5ffff     call sym.imp.abort
0x00003e54      6690           nop
0x00003e56      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00003e60      4157           push r15
0x00003e62      4156           push r14
0x00003e64      4c63ff         movsxd r15, edi
0x00003e67      4155           push r13
0x00003e69      4154           push r12
0x00003e6b      4989d6         mov r14, rdx
0x00003e6e      55             push rbp
0x00003e6f      53             push rbx
0x00003e70      4889cd         mov rbp, rcx
0x00003e73      4883ec28       sub rsp, 0x28
0x00003e77      4889742408     mov qword [rsp + 8], rsi
0x00003e7c      e8bfd5ffff     call sym.imp.__errno_location
0x00003e81      4989c5         mov r13, rax
0x00003e84      8b00           mov eax, dword [rax]
0x00003e86      4585ff         test r15d, r15d
0x00003e89      488b1df04120.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x208080:8]=0x208090 obj.slotvec0
0x00003e90      89442418       mov dword [rsp + 0x18], eax
0x00003e94      0f8867010000   js 0x4001
0x00003e9a      44393dd74120.  cmp dword [obj.nslots], r15d            ; [0x208078:4]=1
0x00003ea1      7f62           jg 0x3f05
0x00003ea3      4181ffffffff.  cmp r15d, 0x7fffffff
0x00003eaa      0f8456010000   je 0x4006
0x00003eb0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00003eb4      488d05d54120.  lea rax, obj.slotvec0                   ; 0x208090
0x00003ebb      4963f4         movsxd rsi, r12d
0x00003ebe      48c1e604       shl rsi, 4
0x00003ec2      4839c3         cmp rbx, rax
0x00003ec5      0f8415010000   je 0x3fe0
0x00003ecb      4889df         mov rdi, rbx
0x00003ece      e86d0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00003ed3      4889c3         mov rbx, rax
0x00003ed6      488905a34120.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003edd      48633d944120.  movsxd rdi, dword [obj.nslots]          ; [0x208078:4]=1
0x00003ee4      4489e2         mov edx, r12d
0x00003ee7      31f6           xor esi, esi
0x00003ee9      29fa           sub edx, edi
0x00003eeb      48c1e704       shl rdi, 4
0x00003eef      4863d2         movsxd rdx, edx
0x00003ef2      4801df         add rdi, rbx
0x00003ef5      48c1e204       shl rdx, 4
0x00003ef9      e862d6ffff     call sym.imp.memset
0x00003efe      448925734120.  mov dword [obj.nslots], r12d            ; [0x208078:4]=1
0x00003f05      8b4504         mov eax, dword [rbp + 4]
0x00003f08      49c1e704       shl r15, 4
0x00003f0c      4883ec08       sub rsp, 8
0x00003f10      4c01fb         add rbx, r15
0x00003f13      4c8d7d08       lea r15, [rbp + 8]
0x00003f17      448b4500       mov r8d, dword [rbp]
0x00003f1b      4c8b1b         mov r11, qword [rbx]
0x00003f1e      4c8b6308       mov r12, qword [rbx + 8]
0x00003f22      4c89f1         mov rcx, r14
0x00003f25      83c801         or eax, 1
0x00003f28      89442424       mov dword [rsp + 0x24], eax
0x00003f2c      ff7530         push qword [rbp + 0x30]
0x00003f2f      4189c1         mov r9d, eax
0x00003f32      ff7528         push qword [rbp + 0x28]
0x00003f35      4157           push r15
0x00003f37      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00003f3a      488b542428     mov rdx, qword [rsp + 0x28]
0x00003f3f      4c89e7         mov rdi, r12
0x00003f42      4c895c2430     mov qword [rsp + 0x30], r11
0x00003f47      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00003f4c      4883c420       add rsp, 0x20
0x00003f50      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00003f55      4939c3         cmp r11, rax
0x00003f58      7767           ja 0x3fc1
0x00003f5a      488d7001       lea rsi, [rax + 1]
0x00003f5e      488d05fb4120.  lea rax, obj.slot0                      ; 0x208160
0x00003f65      4939c4         cmp r12, rax
0x00003f68      488933         mov qword [rbx], rsi
0x00003f6b      7412           je 0x3f7f
0x00003f6d      4c89e7         mov rdi, r12
0x00003f70      4889742410     mov qword [rsp + 0x10], rsi
0x00003f75      e8a6d4ffff     call sym.imp.free
0x00003f7a      488b742410     mov rsi, qword [rsp + 0x10]
0x00003f7f      4889f7         mov rdi, rsi
0x00003f82      4889742410     mov qword [rsp + 0x10], rsi
0x00003f87      e8540e0000     call sym.xmalloc
0x00003f8c      4883ec08       sub rsp, 8
0x00003f90      48894308       mov qword [rbx + 8], rax
0x00003f94      448b4500       mov r8d, dword [rbp]
0x00003f98      ff7530         push qword [rbp + 0x30]
0x00003f9b      ff7528         push qword [rbp + 0x28]
0x00003f9e      4c89f1         mov rcx, r14
0x00003fa1      4157           push r15
0x00003fa3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00003fa8      4889c7         mov rdi, rax
0x00003fab      488b542428     mov rdx, qword [rsp + 0x28]
0x00003fb0      488b742430     mov rsi, qword [rsp + 0x30]
0x00003fb5      4989c4         mov r12, rax
0x00003fb8      e863ecffff     call sym.quotearg_buffer_restyled
0x00003fbd      4883c420       add rsp, 0x20
0x00003fc1      8b442418       mov eax, dword [rsp + 0x18]
0x00003fc5      41894500       mov dword [r13], eax
0x00003fc9      4883c428       add rsp, 0x28
0x00003fcd      4c89e0         mov rax, r12
0x00003fd0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00003fd1      5d             pop rbp
0x00003fd2      415c           pop r12
0x00003fd4      415d           pop r13
0x00003fd6      415e           pop r14
0x00003fd8      415f           pop r15
0x00003fda      c3             ret
0x00003fdb      0f1f440000     nop dword [rax + rax]
0x00003fe0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00003fe2      e8590e0000     call sym.xrealloc
0x00003fe7      660f6f05a140.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00003fef      4889c3         mov rbx, rax
0x00003ff2      488905874020.  mov qword [obj.slotvec], rax            ; [0x208080:8]=0x208090 obj.slotvec0
0x00003ff9      0f1100         movups xmmword [rax], xmm0
0x00003ffc      e9dcfeffff     jmp 0x3edd
0x00004001      e82ad4ffff     call sym.imp.abort
0x00004006      e825100000     call sym.xalloc_die
0x0000400b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004010      4154           push r12
0x00004012      55             push rbp
0x00004013      53             push rbx
0x00004014      4889fb         mov rbx, rdi
0x00004017      e824d4ffff     call sym.imp.__errno_location
0x0000401c      448b20         mov r12d, dword [rax]
0x0000401f      4889c5         mov rbp, rax
0x00004022      488d05374220.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004029      4885db         test rbx, rbx
0x0000402c      be38000000     mov esi, 0x38                           ; '8'
0x00004031      480f44d8       cmove rbx, rax
0x00004035      4889df         mov rdi, rbx
0x00004038      e8a30f0000     call sym.xmemdup
0x0000403d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004041      5b             pop rbx
0x00004042      5d             pop rbp
0x00004043      415c           pop r12
0x00004045      c3             ret
0x00004046      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004050      488d05094220.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004057      4885ff         test rdi, rdi
0x0000405a      480f44f8       cmove rdi, rax
0x0000405e      8b07           mov eax, dword [rdi]
0x00004060      c3             ret
0x00004061      0f1f440000     nop dword [rax + rax]
0x00004066      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004070      488d05e94120.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004077      4885ff         test rdi, rdi
0x0000407a      480f44f8       cmove rdi, rax
0x0000407e      8937           mov dword [rdi], esi
0x00004080      c3             ret
0x00004081      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004086      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004090      488d05c94120.  lea rax, obj.default_quoting_options    ; 0x208260
0x00004097      4885ff         test rdi, rdi
0x0000409a      89f1           mov ecx, esi
0x0000409c      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000040a0      89f0           mov eax, esi
0x000040a2      83e11f         and ecx, 0x1f
0x000040a5      c0e805         shr al, 5
0x000040a8      0fb6c0         movzx eax, al
0x000040ab      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000040b0      8b37           mov esi, dword [rdi]
0x000040b2      89f0           mov eax, esi
0x000040b4      d3e8           shr eax, cl
0x000040b6      31c2           xor edx, eax
0x000040b8      83e001         and eax, 1
0x000040bb      83e201         and edx, 1
0x000040be      d3e2           shl edx, cl
0x000040c0      31f2           xor edx, esi
0x000040c2      8917           mov dword [rdi], edx
0x000040c4      c3             ret
0x000040c5      90             nop
0x000040c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000040d0      488d05894120.  lea rax, obj.default_quoting_options    ; 0x208260
0x000040d7      4885ff         test rdi, rdi
0x000040da      480f44f8       cmove rdi, rax
0x000040de      8b4704         mov eax, dword [rdi + 4]
0x000040e1      897704         mov dword [rdi + 4], esi
0x000040e4      c3             ret
0x000040e5      90             nop
0x000040e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x000040f0      488d05694120.  lea rax, obj.default_quoting_options    ; 0x208260
0x000040f7      4885ff         test rdi, rdi
0x000040fa      480f44f8       cmove rdi, rax
0x000040fe      4885f6         test rsi, rsi
0x00004101      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004107      740e           je 0x4117
0x00004109      4885d2         test rdx, rdx
0x0000410c      7409           je 0x4117
0x0000410e      48897728       mov qword [rdi + 0x28], rsi
0x00004112      48895730       mov qword [rdi + 0x30], rdx
0x00004116      c3             ret
0x00004117      4883ec08       sub rsp, 8
0x0000411b      e810d3ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004120      4157           push r15
0x00004122      4156           push r14
0x00004124      488d05354120.  lea rax, obj.default_quoting_options    ; 0x208260
0x0000412b      4155           push r13
0x0000412d      4154           push r12
0x0000412f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004132      55             push rbp
0x00004133      53             push rbx
0x00004134      4c89c3         mov rbx, r8
0x00004137      4989f6         mov r14, rsi
0x0000413a      4989d7         mov r15, rdx
0x0000413d      4883ec18       sub rsp, 0x18
0x00004141      4d85c0         test r8, r8
0x00004144      480f44d8       cmove rbx, rax
0x00004148      48894c2408     mov qword [rsp + 8], rcx
0x0000414d      e8eed2ffff     call sym.imp.__errno_location
0x00004152      448b20         mov r12d, dword [rax]
0x00004155      4889c5         mov rbp, rax
0x00004158      488d4308       lea rax, [rbx + 8]
0x0000415c      4883ec08       sub rsp, 8
0x00004160      448b4b04       mov r9d, dword [rbx + 4]
0x00004164      ff7330         push qword [rbx + 0x30]
0x00004167      448b03         mov r8d, dword [rbx]
0x0000416a      ff7328         push qword [rbx + 0x28]
0x0000416d      4c89fa         mov rdx, r15
0x00004170      50             push rax
0x00004171      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004176      4c89f6         mov rsi, r14
0x00004179      4c89ef         mov rdi, r13
0x0000417c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004181      44896500       mov dword [rbp], r12d
0x00004185      4883c438       add rsp, 0x38
0x00004189      5b             pop rbx
0x0000418a      5d             pop rbp
0x0000418b      415c           pop r12
0x0000418d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x0000418f      415e           pop r14
0x00004191      415f           pop r15
0x00004193      c3             ret
0x00004194      6690           nop
0x00004196      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x000041a0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x000041a2      4156           push r14
0x000041a4      488d05b54020.  lea rax, obj.default_quoting_options    ; 0x208260
0x000041ab      4155           push r13
0x000041ad      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x000041af      4989d4         mov r12, rdx
0x000041b2      55             push rbp
0x000041b3      53             push rbx
0x000041b4      4889cb         mov rbx, rcx
0x000041b7      4989fe         mov r14, rdi
0x000041ba      4989f7         mov r15, rsi
0x000041bd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x000041c1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x000041c4      480f44d8       cmove rbx, rax
0x000041c8      31ed           xor ebp, ebp
0x000041ca      e871d2ffff     call sym.imp.__errno_location
0x000041cf      4d85e4         test r12, r12
0x000041d2      4989c5         mov r13, rax
0x000041d5      8b00           mov eax, dword [rax]
0x000041d7      400f94c5       sete bpl
0x000041db      0b6b04         or ebp, dword [rbx + 4]
0x000041de      4c8d5308       lea r10, [rbx + 8]
0x000041e2      4883ec08       sub rsp, 8
0x000041e6      448b03         mov r8d, dword [rbx]
0x000041e9      4c89f9         mov rcx, r15
0x000041ec      89442414       mov dword [rsp + 0x14], eax
0x000041f0      ff7330         push qword [rbx + 0x30]
0x000041f3      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x000041f6      ff7328         push qword [rbx + 0x28]
0x000041f9      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x000041fb      31f6           xor esi, esi
0x000041fd      4189e9         mov r9d, ebp
0x00004200      31ff           xor edi, edi
0x00004202      4c89542440     mov qword [rsp + 0x40], r10
0x00004207      e814eaffff     call sym.quotearg_buffer_restyled
0x0000420c      488d7001       lea rsi, [rax + 1]
0x00004210      4889442448     mov qword [rsp + 0x48], rax
0x00004215      4883c420       add rsp, 0x20
0x00004219      4889f7         mov rdi, rsi
0x0000421c      4889742418     mov qword [rsp + 0x18], rsi
0x00004221      e8ba0b0000     call sym.xmalloc
0x00004226      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000422b      4883ec08       sub rsp, 8
0x0000422f      ff7330         push qword [rbx + 0x30]
0x00004232      ff7328         push qword [rbx + 0x28]
0x00004235      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000423a      4189e9         mov r9d, ebp
0x0000423d      448b03         mov r8d, dword [rbx]
0x00004240      4c89f9         mov rcx, r15
0x00004243      4c89f2         mov rdx, r14
0x00004246      4889c7         mov rdi, rax
0x00004249      4152           push r10
0x0000424b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004250      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004255      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004259      4883c420       add rsp, 0x20
0x0000425d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004260      41894500       mov dword [r13], eax
0x00004264      7409           je 0x426f
0x00004266      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x0000426b      4d891c24       mov qword [r12], r11
0x0000426f      488b442410     mov rax, qword [rsp + 0x10]
0x00004274      4883c438       add rsp, 0x38
0x00004278      5b             pop rbx
0x00004279      5d             pop rbp
0x0000427a      415c           pop r12
0x0000427c      415d           pop r13
0x0000427e      415e           pop r14
0x00004280      415f           pop r15
0x00004282      c3             ret
0x00004283      0f1f00         nop dword [rax]
0x00004286      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004290      4889d1         mov rcx, rdx
0x00004293      31d2           xor edx, edx
0x00004295      e906ffffff     jmp sym.quotearg_alloc_mem
0x0000429a      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x000042a0      8b05d23d2000   mov eax, dword [obj.nslots]             ; [0x208078:4]=1
0x000042a6      4154           push r12
0x000042a8      4c8b25d13d20.  mov r12, qword [obj.slotvec]            ; [0x208080:8]=0x208090 obj.slotvec0
0x000042af      55             push rbp
0x000042b0      53             push rbx
0x000042b1      83f801         cmp eax, 1
0x000042b4      7e2b           jle 0x42e1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x000042b6      83e802         sub eax, 2
0x000042b9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000042be      48c1e004       shl rax, 4
0x000042c2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x000042c7      660f1f840000.  nop word [rax + rax]
0x000042d0      488b3b         mov rdi, qword [rbx]
0x000042d3      4883c310       add rbx, 0x10
0x000042d7      e844d1ffff     call sym.imp.free
0x000042dc      4839eb         cmp rbx, rbp
0x000042df      75ef           jne 0x42d0
0x000042e1      498b7c2408     mov rdi, qword [r12 + 8]
0x000042e6      488d1d733e20.  lea rbx, obj.slot0                      ; 0x208160
0x000042ed      4839df         cmp rdi, rbx
0x000042f0      7417           je 0x4309
0x000042f2      e829d1ffff     call sym.imp.free
0x000042f7      48c7058e3d20.  mov qword [obj.slotvec0], 0x100         ; [0x208090:8]=256
0x00004302      48891d8f3d20.  mov qword [0x00208098], rbx             ; [0x208098:8]=0x208160 obj.slot0
0x00004309      488d1d803d20.  lea rbx, obj.slotvec0                   ; 0x208090
0x00004310      4939dc         cmp r12, rbx
0x00004313      740f           je 0x4324
0x00004315      4c89e7         mov rdi, r12
0x00004318      e803d1ffff     call sym.imp.free
0x0000431d      48891d5c3d20.  mov qword [obj.slotvec], rbx            ; [0x208080:8]=0x208090 obj.slotvec0
0x00004324      5b             pop rbx
0x00004325      c705493d2000.  mov dword [obj.nslots], 1               ; [0x208078:4]=1
0x0000432f      5d             pop rbp
0x00004330      415c           pop r12
0x00004332      c3             ret
0x00004333      0f1f00         nop dword [rax]
0x00004336      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004340      488d0d193f20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004347      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000434e      e90dfbffff     jmp sym.quotearg_n_options
0x00004353      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004356      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004360      488d0df93e20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004367      e9f4faffff     jmp sym.quotearg_n_options
0x0000436c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004370      488d0de93e20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004377      4889fe         mov rsi, rdi
0x0000437a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004381      31ff           xor edi, edi
0x00004383      e9d8faffff     jmp sym.quotearg_n_options
0x00004388      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004390      488d0dc93e20.  lea rcx, obj.default_quoting_options    ; 0x208260
0x00004397      4889f2         mov rdx, rsi
0x0000439a      4889fe         mov rsi, rdi
0x0000439d      31ff           xor edi, edi
0x0000439f      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x000043a4      6690           nop
0x000043a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x000043b0      4883ec48       sub rsp, 0x48
0x000043b4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x000043b7      64488b142528.  mov rdx, qword fs:[0x28]
0x000043c0      4889542438     mov qword [rsp + 0x38], rdx
0x000043c5      31d2           xor edx, edx
0x000043c7      83fe0a         cmp esi, 0xa
0x000043ca      7468           je 0x4434
0x000043cc      893424         mov dword [rsp], esi
0x000043cf      4889e1         mov rcx, rsp
0x000043d2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000043d9      4889c6         mov rsi, rax
0x000043dc      48c744240400.  mov qword [rsp + 4], 0
0x000043e5      48c744240c00.  mov qword [rsp + 0xc], 0
0x000043ee      48c744241400.  mov qword [rsp + 0x14], 0
0x000043f7      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004400      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004409      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004412      c74424340000.  mov dword [rsp + 0x34], 0
0x0000441a      e841faffff     call sym.quotearg_n_options
0x0000441f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004424      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000442d      750a           jne 0x4439                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000442f      4883c448       add rsp, 0x48
0x00004433      c3             ret
0x00004434      e8f7cfffff     call sym.imp.abort
0x00004439      e8b2d0ffff     call sym.imp.__stack_chk_fail
0x0000443e      6690           nop
;-- quotearg_n_style_mem:
0x00004440      4883ec48       sub rsp, 0x48
0x00004444      4889d0         mov rax, rdx
0x00004447      4889ca         mov rdx, rcx
0x0000444a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004453      48894c2438     mov qword [rsp + 0x38], rcx
0x00004458      31c9           xor ecx, ecx
0x0000445a      83fe0a         cmp esi, 0xa
0x0000445d      7461           je 0x44c0
0x0000445f      893424         mov dword [rsp], esi
0x00004462      4889e1         mov rcx, rsp
0x00004465      4889c6         mov rsi, rax
0x00004468      48c744240400.  mov qword [rsp + 4], 0
0x00004471      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000447a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004483      48c744241c00.  mov qword [rsp + 0x1c], 0
0x0000448c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004495      48c744242c00.  mov qword [rsp + 0x2c], 0
0x0000449e      c74424340000.  mov dword [rsp + 0x34], 0
0x000044a6      e8b5f9ffff     call sym.quotearg_n_options
0x000044ab      488b542438     mov rdx, qword [rsp + 0x38]
0x000044b0      644833142528.  xor rdx, qword fs:[0x28]
0x000044b9      750a           jne 0x44c5
0x000044bb      4883c448       add rsp, 0x48
0x000044bf      c3             ret
0x000044c0      e86bcfffff     call sym.imp.abort
0x000044c5      e826d0ffff     call sym.imp.__stack_chk_fail
0x000044ca      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x000044d0      4889f2         mov rdx, rsi
0x000044d3      89fe           mov esi, edi
0x000044d5      31ff           xor edi, edi
0x000044d7      e9d4feffff     jmp sym.quotearg_n_style
0x000044dc      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x000044e0      4889d1         mov rcx, rdx
0x000044e3      4889f2         mov rdx, rsi
0x000044e6      89fe           mov esi, edi
0x000044e8      31ff           xor edi, edi
0x000044ea      e951ffffff     jmp sym.quotearg_n_style_mem
0x000044ef      90             nop
;-- quotearg_char_mem:
0x000044f0      4883ec48       sub rsp, 0x48
0x000044f4      89d1           mov ecx, edx
0x000044f6      64488b042528.  mov rax, qword fs:[0x28]
0x000044ff      4889442438     mov qword [rsp + 0x38], rax
0x00004504      31c0           xor eax, eax
0x00004506      488b05833d20.  mov rax, qword [0x00208290]             ; [0x208290:8]=0
0x0000450d      4989e0         mov r8, rsp
0x00004510      83e11f         and ecx, 0x1f
0x00004513      660f6f05453d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000451b      4889442430     mov qword [rsp + 0x30], rax
0x00004520      89d0           mov eax, edx
0x00004522      0f290424       movaps xmmword [rsp], xmm0
0x00004526      c0e805         shr al, 5
0x00004529      0fb6c0         movzx eax, al
0x0000452c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004531      660f6f05373d.  movdqa xmm0, xmmword [0x00208270]
0x00004539      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000453e      660f6f053a3d.  movdqa xmm0, xmmword [0x00208280]
0x00004546      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x0000454b      418b11         mov edx, dword [r9]
0x0000454e      89d0           mov eax, edx
0x00004550      d3e8           shr eax, cl
0x00004552      f7d0           not eax
0x00004554      83e001         and eax, 1
0x00004557      d3e0           shl eax, cl
0x00004559      4c89c1         mov rcx, r8
0x0000455c      31d0           xor eax, edx
0x0000455e      4889f2         mov rdx, rsi
0x00004561      4889fe         mov rsi, rdi
0x00004564      418901         mov dword [r9], eax
0x00004567      31ff           xor edi, edi
0x00004569      e8f2f8ffff     call sym.quotearg_n_options
0x0000456e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004573      644833342528.  xor rsi, qword fs:[0x28]
0x0000457c      7505           jne 0x4583
0x0000457e      4883c448       add rsp, 0x48
0x00004582      c3             ret
0x00004583      e868cfffff     call sym.imp.__stack_chk_fail
0x00004588      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004590      400fbed6       movsx edx, sil
0x00004594      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000459b      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x000045a0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000045a5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000045ac      e93fffffff     jmp sym.quotearg_char_mem
0x000045b1      0f1f440000     nop dword [rax + rax]
0x000045b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x000045c0      ba3a000000     mov edx, 0x3a                           ; ':'
0x000045c5      e926ffffff     jmp sym.quotearg_char_mem
0x000045ca      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x000045d0      4883ec48       sub rsp, 0x48
0x000045d4      4889d0         mov rax, rdx
0x000045d7      64488b142528.  mov rdx, qword fs:[0x28]
0x000045e0      4889542438     mov qword [rsp + 0x38], rdx
0x000045e5      31d2           xor edx, edx
0x000045e7      83fe0a         cmp esi, 0xa
0x000045ea      7468           je 0x4654
0x000045ec      893424         mov dword [rsp], esi
0x000045ef      4889e1         mov rcx, rsp
0x000045f2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000045f9      4889c6         mov rsi, rax
0x000045fc      48c744240400.  mov qword [rsp + 4], 0
0x00004605      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000460e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004617      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004620      48c744242400.  mov qword [rsp + 0x24], 0
0x00004629      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004632      c74424340000.  mov dword [rsp + 0x34], 0
0x0000463a      e821f8ffff     call sym.quotearg_n_options
0x0000463f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004644      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000464d      750a           jne 0x4659
0x0000464f      4883c448       add rsp, 0x48
0x00004653      c3             ret
0x00004654      e8d7cdffff     call sym.imp.abort
0x00004659      e892ceffff     call sym.imp.__stack_chk_fail
0x0000465e      6690           nop
;-- quotearg_n_custom_mem:
0x00004660      4883ec48       sub rsp, 0x48
0x00004664      4989c9         mov r9, rcx
0x00004667      488b0d223c20.  mov rcx, qword [0x00208290]             ; [0x208290:8]=0
0x0000466e      660f6f05ea3b.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004676      64488b042528.  mov rax, qword fs:[0x28]
0x0000467f      4889442438     mov qword [rsp + 0x38], rax
0x00004684      31c0           xor eax, eax
0x00004686      0f290424       movaps xmmword [rsp], xmm0
0x0000468a      4885f6         test rsi, rsi
0x0000468d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004692      c704240a0000.  mov dword [rsp], 0xa
0x00004699      660f6f05cf3b.  movdqa xmm0, xmmword [0x00208270]
0x000046a1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x000046a6      660f6f05d23b.  movdqa xmm0, xmmword [0x00208280]
0x000046ae      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000046b3      7432           je 0x46e7
0x000046b5      4885d2         test rdx, rdx
0x000046b8      742d           je 0x46e7
0x000046ba      4889742428     mov qword [rsp + 0x28], rsi
0x000046bf      4889542430     mov qword [rsp + 0x30], rdx
0x000046c4      4889e1         mov rcx, rsp
0x000046c7      4c89c2         mov rdx, r8
0x000046ca      4c89ce         mov rsi, r9
0x000046cd      e88ef7ffff     call sym.quotearg_n_options
0x000046d2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000046d7      6448333c2528.  xor rdi, qword fs:[0x28]
0x000046e0      750a           jne 0x46ec
0x000046e2      4883c448       add rsp, 0x48
0x000046e6      c3             ret
0x000046e7      e844cdffff     call sym.imp.abort
0x000046ec      e8ffcdffff     call sym.imp.__stack_chk_fail
0x000046f1      0f1f440000     nop dword [rax + rax]
0x000046f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00004700      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00004707      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000470c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00004710      4889d1         mov rcx, rdx
0x00004713      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000471a      4889f2         mov rdx, rsi
0x0000471d      4889fe         mov rsi, rdi
0x00004720      31ff           xor edi, edi
0x00004722      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00004727      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00004730      4989c8         mov r8, rcx
0x00004733      4889d1         mov rcx, rdx
0x00004736      4889f2         mov rdx, rsi
0x00004739      4889fe         mov rsi, rdi
0x0000473c      31ff           xor edi, edi
0x0000473e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00004743      0f1f00         nop dword [rax]
0x00004746      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00004750      488d0de93820.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004757      e904f7ffff     jmp sym.quotearg_n_options
0x0000475c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00004760      488d0dd93820.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004767      4889f2         mov rdx, rsi
0x0000476a      4889fe         mov rsi, rdi
0x0000476d      31ff           xor edi, edi
0x0000476f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00004774      6690           nop
0x00004776      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00004780      488d0db93820.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x00004787      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000478e      e9cdf6ffff     jmp sym.quotearg_n_options
0x00004793      0f1f00         nop dword [rax]
0x00004796      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000047a0      488d0d993820.  lea rcx, obj.quote_quoting_options      ; 0x208040
0x000047a7      4889fe         mov rsi, rdi
0x000047aa      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000047b1      31ff           xor edi, edi
0x000047b3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000047b8      0f1f84000000.  nop dword [rax + rax]
;-- version_etc_arn:
0x000047c0      4157           push r15
0x000047c2      4156           push r14
0x000047c4      4155           push r13
0x000047c6      4154           push r12
0x000047c8      4d89cc         mov r12, r9
0x000047cb      55             push rbp
0x000047cc      53             push rbx
0x000047cd      4889fd         mov rbp, rdi
0x000047d0      4c89c3         mov rbx, r8
0x000047d3      4883ec28       sub rsp, 0x28
0x000047d7      4885f6         test rsi, rsi
0x000047da      0f8418010000   je 0x48f8
0x000047e0      4989d0         mov r8, rdx
0x000047e3      488d157e1800.  lea rdx, [0x00006068]                   ; "%s (%s) %s\n"
0x000047ea      4989c9         mov r9, rcx
0x000047ed      31c0           xor eax, eax
0x000047ef      4889f1         mov rcx, rsi
0x000047f2      be01000000     mov esi, 1
0x000047f7      e8c4ceffff     call sym.imp.__fprintf_chk
0x000047fc      488d35781800.  lea rsi, [0x0000607b]                   ; "(C)"
0x00004803      31ff           xor edi, edi
0x00004805      ba05000000     mov edx, 5
0x0000480a      e8b1ccffff     call sym.imp.dcgettext
0x0000480f      488d158a1b00.  lea rdx, obj.version_etc_copyright      ; 0x63a0 ; "Copyright %s %d Free Software Foundation, Inc."
0x00004816      4889c1         mov rcx, rax
0x00004819      41b8e3070000   mov r8d, 0x7e3
0x0000481f      be01000000     mov esi, 1
0x00004824      4889ef         mov rdi, rbp
0x00004827      31c0           xor eax, eax
0x00004829      e892ceffff     call sym.imp.__fprintf_chk
0x0000482e      488d35d31800.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x6108 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x00004835      31ff           xor edi, edi
0x00004837      ba05000000     mov edx, 5
0x0000483c      e87fccffff     call sym.imp.dcgettext
0x00004841      4889ee         mov rsi, rbp
0x00004844      4889c7         mov rdi, rax
0x00004847      e864cdffff     call sym.imp.fputs_unlocked
0x0000484c      4983fc09       cmp r12, 9
0x00004850      0f873a030000   ja 0x4b90
0x00004856      488d150b1b00.  lea rdx, [0x00006368]                   ; "~\xe5\xff\xff\x10\xe6\xff\xffP\xe6\xff\xff\x98\xe6\xff\xff\xe8\xe6\xff\xff@\xe7\xff\xffp\xe7\xff\xff\xd8\xe7\xff\xff\b\xe5\xff\xff\xb8\xe5\xff\xff"
0x0000485d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00004861      4801d0         add rax, rdx
0x00004864      ffe0           jmp rax
0x00004866      662e0f1f8400.  nop word cs:[rax + rax]
0x00004870      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004874      488b4310       mov rax, qword [rbx + 0x10]
0x00004878      488d35f91900.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x6278 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000487f      4c8b4308       mov r8, qword [rbx + 8]
0x00004883      ba05000000     mov edx, 5
0x00004888      31ff           xor edi, edi
0x0000488a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000488e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004892      4c894c2410     mov qword [rsp + 0x10], r9
0x00004897      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000489b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000489f      48890424       mov qword [rsp], rax
0x000048a3      4c89442408     mov qword [rsp + 8], r8
0x000048a8      488b1b         mov rbx, qword [rbx]
0x000048ab      e810ccffff     call sym.imp.dcgettext
0x000048b0      4883ec08       sub rsp, 8
0x000048b4      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x000048b9      4889c2         mov rdx, rax
0x000048bc      4889d9         mov rcx, rbx
0x000048bf      be01000000     mov esi, 1
0x000048c4      4889ef         mov rdi, rbp
0x000048c7      31c0           xor eax, eax
0x000048c9      4151           push r9
0x000048cb      4155           push r13
0x000048cd      4154           push r12
0x000048cf      4157           push r15
0x000048d1      4156           push r14
0x000048d3      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000048d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000048dd      e8decdffff     call sym.imp.__fprintf_chk
0x000048e2      4883c430       add rsp, 0x30
0x000048e6      4883c428       add rsp, 0x28
0x000048ea      5b             pop rbx
0x000048eb      5d             pop rbp
0x000048ec      415c           pop r12
0x000048ee      415d           pop r13
0x000048f0      415e           pop r14
0x000048f2      415f           pop r15
0x000048f4      c3             ret
0x000048f5      0f1f00         nop dword [rax]
0x000048f8      4989c8         mov r8, rcx
0x000048fb      4889d1         mov rcx, rdx
0x000048fe      488d156f1700.  lea rdx, str.s__s                       ; 0x6074 ; "%s %s\n"
0x00004905      be01000000     mov esi, 1
0x0000490a      31c0           xor eax, eax
0x0000490c      e8afcdffff     call sym.imp.__fprintf_chk
0x00004911      e9e6feffff     jmp 0x47fc
0x00004916      662e0f1f8400.  nop word cs:[rax + rax]
0x00004920      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004924      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004928      488d35791900.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x62a8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x0000492f      488b4310       mov rax, qword [rbx + 0x10]
0x00004933      4c8b4308       mov r8, qword [rbx + 8]
0x00004937      ba05000000     mov edx, 5
0x0000493c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004940      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004944      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004948      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000494c      488b1b         mov rbx, qword [rbx]
0x0000494f      4c89542418     mov qword [rsp + 0x18], r10
0x00004954      4c894c2410     mov qword [rsp + 0x10], r9
0x00004959      48890424       mov qword [rsp], rax
0x0000495d      4c89442408     mov qword [rsp + 8], r8
0x00004962      31ff           xor edi, edi
0x00004964      e857cbffff     call sym.imp.dcgettext
0x00004969      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000496e      4152           push r10
0x00004970      e93fffffff     jmp 0x48b4
0x00004975      0f1f00         nop dword [rax]
0x00004978      488b1b         mov rbx, qword [rbx]
0x0000497b      488d35fd1600.  lea rsi, str.Written_by__s.             ; 0x607f ; "Written by %s.\n"
0x00004982      ba05000000     mov edx, 5
0x00004987      31ff           xor edi, edi
0x00004989      e832cbffff     call sym.imp.dcgettext
0x0000498e      4883c428       add rsp, 0x28
0x00004992      4889d9         mov rcx, rbx
0x00004995      4889ef         mov rdi, rbp
0x00004998      5b             pop rbx
0x00004999      5d             pop rbp
0x0000499a      415c           pop r12
0x0000499c      415d           pop r13
0x0000499e      415e           pop r14
0x000049a0      415f           pop r15
0x000049a2      4889c2         mov rdx, rax
0x000049a5      be01000000     mov esi, 1
0x000049aa      31c0           xor eax, eax
0x000049ac      e90fcdffff     jmp sym.imp.__fprintf_chk
0x000049b1      0f1f80000000.  nop dword [rax]
0x000049b8      4c8b6308       mov r12, qword [rbx + 8]
0x000049bc      488d35cc1600.  lea rsi, str.Written_by__s_and__s.      ; 0x608f ; "Written by %s and %s.\n"
0x000049c3      488b1b         mov rbx, qword [rbx]
0x000049c6      ba05000000     mov edx, 5
0x000049cb      31ff           xor edi, edi
0x000049cd      e8eecaffff     call sym.imp.dcgettext
0x000049d2      4883c428       add rsp, 0x28
0x000049d6      4d89e0         mov r8, r12
0x000049d9      4889d9         mov rcx, rbx
0x000049dc      4889ef         mov rdi, rbp
0x000049df      4889c2         mov rdx, rax
0x000049e2      be01000000     mov esi, 1
0x000049e7      5b             pop rbx
0x000049e8      5d             pop rbp
0x000049e9      415c           pop r12
0x000049eb      415d           pop r13
0x000049ed      415e           pop r14
0x000049ef      415f           pop r15
0x000049f1      31c0           xor eax, eax
0x000049f3      e9c8ccffff     jmp sym.imp.__fprintf_chk
0x000049f8      0f1f84000000.  nop dword [rax + rax]
0x00004a00      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004a04      4c8b6308       mov r12, qword [rbx + 8]
0x00004a08      488d35971600.  lea rsi, str.Written_by__s___s__and__s. ; 0x60a6 ; "Written by %s, %s, and %s.\n"
0x00004a0f      488b1b         mov rbx, qword [rbx]
0x00004a12      ba05000000     mov edx, 5
0x00004a17      31ff           xor edi, edi
0x00004a19      e8a2caffff     call sym.imp.dcgettext
0x00004a1e      4883c428       add rsp, 0x28
0x00004a22      4d89e9         mov r9, r13
0x00004a25      4d89e0         mov r8, r12
0x00004a28      4889d9         mov rcx, rbx
0x00004a2b      4889ef         mov rdi, rbp
0x00004a2e      4889c2         mov rdx, rax
0x00004a31      5b             pop rbx
0x00004a32      5d             pop rbp
0x00004a33      415c           pop r12
0x00004a35      415d           pop r13
0x00004a37      415e           pop r14
0x00004a39      415f           pop r15
0x00004a3b      be01000000     mov esi, 1
0x00004a40      31c0           xor eax, eax
0x00004a42      e979ccffff     jmp sym.imp.__fprintf_chk
0x00004a47      660f1f840000.  nop word [rax + rax]
0x00004a50      488d35811700.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x61d8 ; "Written by %s, %s, %s,\nand %s.\n"
0x00004a57      ba05000000     mov edx, 5
0x00004a5c      31ff           xor edi, edi
0x00004a5e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004a62      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004a66      4c8b6308       mov r12, qword [rbx + 8]
0x00004a6a      488b1b         mov rbx, qword [rbx]
0x00004a6d      e84ecaffff     call sym.imp.dcgettext
0x00004a72      4883ec08       sub rsp, 8
0x00004a76      4156           push r14
0x00004a78      4889c2         mov rdx, rax
0x00004a7b      4d89e9         mov r9, r13
0x00004a7e      4d89e0         mov r8, r12
0x00004a81      4889d9         mov rcx, rbx
0x00004a84      4889ef         mov rdi, rbp
0x00004a87      be01000000     mov esi, 1
0x00004a8c      31c0           xor eax, eax
0x00004a8e      e82dccffff     call sym.imp.__fprintf_chk
0x00004a93      58             pop rax
0x00004a94      5a             pop rdx
0x00004a95      4883c428       add rsp, 0x28
0x00004a99      5b             pop rbx
0x00004a9a      5d             pop rbp
0x00004a9b      415c           pop r12
0x00004a9d      415d           pop r13
0x00004a9f      415e           pop r14
0x00004aa1      415f           pop r15
0x00004aa3      c3             ret
0x00004aa4      0f1f4000       nop dword [rax]
0x00004aa8      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004aac      488d35451700.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x61f8 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00004ab3      ba05000000     mov edx, 5
0x00004ab8      31ff           xor edi, edi
0x00004aba      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004abe      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004ac2      4c8b6308       mov r12, qword [rbx + 8]
0x00004ac6      488b1b         mov rbx, qword [rbx]
0x00004ac9      e8f2c9ffff     call sym.imp.dcgettext
0x00004ace      4157           push r15
0x00004ad0      eba4           jmp 0x4a76
0x00004ad2      660f1f440000   nop word [rax + rax]
0x00004ad8      4c8b4308       mov r8, qword [rbx + 8]
0x00004adc      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004ae0      488d35391700.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x6220 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00004ae7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004aeb      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004aef      ba05000000     mov edx, 5
0x00004af4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00004af8      31ff           xor edi, edi
0x00004afa      488b1b         mov rbx, qword [rbx]
0x00004afd      4c890424       mov qword [rsp], r8
0x00004b01      e8bac9ffff     call sym.imp.dcgettext
0x00004b06      4883ec08       sub rsp, 8
0x00004b0a      4d89e9         mov r9, r13
0x00004b0d      4154           push r12
0x00004b0f      4157           push r15
0x00004b11      4156           push r14
0x00004b13      4c8b442420     mov r8, qword [rsp + 0x20]
0x00004b18      4889d9         mov rcx, rbx
0x00004b1b      4889c2         mov rdx, rax
0x00004b1e      4889ef         mov rdi, rbp
0x00004b21      be01000000     mov esi, 1
0x00004b26      31c0           xor eax, eax
0x00004b28      e893cbffff     call sym.imp.__fprintf_chk
0x00004b2d      4883c420       add rsp, 0x20
0x00004b31      4883c428       add rsp, 0x28
0x00004b35      5b             pop rbx
0x00004b36      5d             pop rbp
0x00004b37      415c           pop r12
0x00004b39      415d           pop r13
0x00004b3b      415e           pop r14
0x00004b3d      415f           pop r15
0x00004b3f      c3             ret
0x00004b40      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00004b44      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004b48      488d35f91600.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x6248 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00004b4f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004b53      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004b57      ba05000000     mov edx, 5
0x00004b5c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004b60      4c8b4308       mov r8, qword [rbx + 8]
0x00004b64      31ff           xor edi, edi
0x00004b66      4c894c2408     mov qword [rsp + 8], r9
0x00004b6b      488b1b         mov rbx, qword [rbx]
0x00004b6e      4c890424       mov qword [rsp], r8
0x00004b72      e849c9ffff     call sym.imp.dcgettext
0x00004b77      4155           push r13
0x00004b79      4154           push r12
0x00004b7b      4157           push r15
0x00004b7d      4156           push r14
0x00004b7f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00004b84      eb8d           jmp 0x4b13
0x00004b86      662e0f1f8400.  nop word cs:[rax + rax]
0x00004b90      4c8b5340       mov r10, qword [rbx + 0x40]
0x00004b94      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00004b98      ba05000000     mov edx, 5
0x00004b9d      488b4310       mov rax, qword [rbx + 0x10]
0x00004ba1      4c8b4308       mov r8, qword [rbx + 8]
0x00004ba5      488d35341700.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x62e0 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00004bac      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00004bb0      4c8b6328       mov r12, qword [rbx + 0x28]
0x00004bb4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00004bb8      4c8b7318       mov r14, qword [rbx + 0x18]
0x00004bbc      4c89542418     mov qword [rsp + 0x18], r10
0x00004bc1      4c894c2410     mov qword [rsp + 0x10], r9
0x00004bc6      48890424       mov qword [rsp], rax
0x00004bca      4c89442408     mov qword [rsp + 8], r8
0x00004bcf      488b1b         mov rbx, qword [rbx]
0x00004bd2      e98bfdffff     jmp 0x4962
0x00004bd7      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00004be0      4531c9         xor r9d, r9d
0x00004be3      49833800       cmp qword [r8], 0
0x00004be7      7412           je 0x4bfb
0x00004be9      0f1f80000000.  nop dword [rax]
0x00004bf0      4983c101       add r9, 1
0x00004bf4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00004bf9      75f5           jne 0x4bf0
0x00004bfb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00004c00      4883ec68       sub rsp, 0x68
0x00004c04      4d89c2         mov r10, r8
0x00004c07      4531c9         xor r9d, r9d
0x00004c0a      64488b042528.  mov rax, qword fs:[0x28]
0x00004c13      4889442458     mov qword [rsp + 0x58], rax
0x00004c18      31c0           xor eax, eax
0x00004c1a      4989e0         mov r8, rsp
0x00004c1d      0f1f00         nop dword [rax]
0x00004c20      418b02         mov eax, dword [r10]
0x00004c23      83f82f         cmp eax, 0x2f
0x00004c26      7742           ja 0x4c6a
0x00004c28      4189c3         mov r11d, eax
0x00004c2b      4d035a10       add r11, qword [r10 + 0x10]
0x00004c2f      83c008         add eax, 8
0x00004c32      418902         mov dword [r10], eax
0x00004c35      498b03         mov rax, qword [r11]
0x00004c38      4885c0         test rax, rax
0x00004c3b      4b8904c8       mov qword [r8 + r9*8], rax
0x00004c3f      740a           je 0x4c4b
0x00004c41      4983c101       add r9, 1
0x00004c45      4983f90a       cmp r9, 0xa
0x00004c49      75d5           jne 0x4c20
0x00004c4b      e870fbffff     call sym.version_etc_arn
0x00004c50      488b442458     mov rax, qword [rsp + 0x58]
0x00004c55      644833042528.  xor rax, qword fs:[0x28]
0x00004c5e      7505           jne 0x4c65
0x00004c60      4883c468       add rsp, 0x68
0x00004c64      c3             ret
0x00004c65      e886c8ffff     call sym.imp.__stack_chk_fail
0x00004c6a      4d8b5a08       mov r11, qword [r10 + 8]
0x00004c6e      498d4308       lea rax, [r11 + 8]
0x00004c72      49894208       mov qword [r10 + 8], rax
0x00004c76      ebbd           jmp 0x4c35
0x00004c78      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00004c80      55             push rbp
0x00004c81      53             push rbx
0x00004c82      41ba20000000   mov r10d, 0x20                          ; "@"
0x00004c88      4531db         xor r11d, r11d
0x00004c8b      4881ecb80000.  sub rsp, 0xb8
0x00004c92      64488b042528.  mov rax, qword fs:[0x28]
0x00004c9b      4889442478     mov qword [rsp + 0x78], rax
0x00004ca0      31c0           xor eax, eax
0x00004ca2      488d8424d000.  lea rax, [rsp + 0xd0]
0x00004caa      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00004cb2      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00004cba      4c8d442420     lea r8, [rsp + 0x20]
0x00004cbf      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00004cc7      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00004ccf      4889442410     mov qword [rsp + 0x10], rax
0x00004cd4      488d84248000.  lea rax, [rsp + 0x80]
0x00004cdc      4531c9         xor r9d, r9d
0x00004cdf      4889442418     mov qword [rsp + 0x18], rax
0x00004ce4      4889c5         mov rbp, rax
0x00004ce7      660f1f840000.  nop word [rax + rax]
0x00004cf0      4183fa2f       cmp r10d, 0x2f
0x00004cf4      7756           ja 0x4d4c
0x00004cf6      4489d0         mov eax, r10d
0x00004cf9      41bb01000000   mov r11d, 1
0x00004cff      4183c208       add r10d, 8
0x00004d03      4801e8         add rax, rbp
0x00004d06      488b00         mov rax, qword [rax]
0x00004d09      4885c0         test rax, rax
0x00004d0c      4b8904c8       mov qword [r8 + r9*8], rax
0x00004d10      740a           je 0x4d1c
0x00004d12      4983c101       add r9, 1
0x00004d16      4983f90a       cmp r9, 0xa
0x00004d1a      75d4           jne 0x4cf0
0x00004d1c      4584db         test r11b, r11b
0x00004d1f      7524           jne 0x4d45
0x00004d21      e89afaffff     call sym.version_etc_arn
0x00004d26      488b442478     mov rax, qword [rsp + 0x78]
0x00004d2b      644833042528.  xor rax, qword fs:[0x28]
0x00004d34      750a           jne 0x4d40
0x00004d36      4881c4b80000.  add rsp, 0xb8
0x00004d3d      5b             pop rbx
0x00004d3e      5d             pop rbp
0x00004d3f      c3             ret
0x00004d40      e8abc7ffff     call sym.imp.__stack_chk_fail
0x00004d45      4489542408     mov dword [rsp + 8], r10d
0x00004d4a      ebd5           jmp 0x4d21
0x00004d4c      4889d8         mov rax, rbx
0x00004d4f      4883c308       add rbx, 8
0x00004d53      ebb1           jmp 0x4d06
0x00004d55      90             nop
0x00004d56      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00004d60      53             push rbx
0x00004d61      488d355a1300.  lea rsi, str.Report_bugs_to:__s         ; 0x60c2 ; "\nReport bugs to: %s\n"
0x00004d68      ba05000000     mov edx, 5
0x00004d6d      31ff           xor edi, edi
0x00004d6f      e84cc7ffff     call sym.imp.dcgettext
0x00004d74      488d155c1300.  lea rdx, str.bug_coreutils_gnu.org      ; 0x60d7 ; "bug-coreutils@gnu.org"
0x00004d7b      4889c6         mov rsi, rax
0x00004d7e      bf01000000     mov edi, 1
0x00004d83      31c0           xor eax, eax
0x00004d85      e8c6c8ffff     call sym.imp.__printf_chk
0x00004d8a      488d355c1300.  lea rsi, str.s_home_page:___s           ; 0x60ed ; "%s home page: <%s>\n"
0x00004d91      ba05000000     mov edx, 5
0x00004d96      31ff           xor edi, edi
0x00004d98      e823c7ffff     call sym.imp.dcgettext
0x00004d9d      488d0d6c0900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x5710 ; "https://www.gnu.org/software/coreutils/"
0x00004da4      488d15d60600.  lea rdx, str.GNU_coreutils              ; 0x5481 ; "GNU coreutils"
0x00004dab      4889c6         mov rsi, rax
0x00004dae      bf01000000     mov edi, 1
0x00004db3      31c0           xor eax, eax
0x00004db5      e896c8ffff     call sym.imp.__printf_chk
0x00004dba      488b1de73220.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x2080a8:8]=0
0x00004dc1      488d35581500.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x6320 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00004dc8      31ff           xor edi, edi
0x00004dca      ba05000000     mov edx, 5
0x00004dcf      e8ecc6ffff     call sym.imp.dcgettext
0x00004dd4      4889de         mov rsi, rbx
0x00004dd7      4889c7         mov rdi, rax
0x00004dda      5b             pop rbx
0x00004ddb      e9d0c7ffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00004de0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00004de1      4889fb         mov rbx, rdi
0x00004de4      e807c8ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00004de9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00004dec      7505           jne 0x4df3
0x00004dee      4885db         test rbx, rbx
0x00004df1      7502           jne 0x4df5
0x00004df3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00004df4      c3             ret
0x00004df5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00004dfa      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00004e00      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00004e03      48f7e6         mul rsi
0x00004e06      4889c7         mov rdi, rax
0x00004e09      0f90c0         seto al
0x00004e0c      4885ff         test rdi, rdi
0x00004e0f      780a           js 0x4e1b
0x00004e11      0fb6c0         movzx eax, al
0x00004e14      4885c0         test rax, rax
0x00004e17      7502           jne 0x4e1b
0x00004e19      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00004e1b      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00004e1f      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00004e24      6690           nop
0x00004e26      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00004e30      ebae           jmp sym.xmalloc
0x00004e32      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00004e36      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00004e40      4885f6         test rsi, rsi
0x00004e43      53             push rbx
0x00004e44      4889f3         mov rbx, rsi
0x00004e47      7505           jne 0x4e4e
0x00004e49      4885ff         test rdi, rdi
0x00004e4c      751a           jne 0x4e68
0x00004e4e      4889de         mov rsi, rbx
0x00004e51      e8dac7ffff     call sym.imp.realloc
0x00004e56      4885c0         test rax, rax
0x00004e59      7505           jne 0x4e60
0x00004e5b      4885db         test rbx, rbx
0x00004e5e      7511           jne 0x4e71                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00004e60      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00004e61      c3             ret
0x00004e62      660f1f440000   nop word [rax + rax]
0x00004e68      e8b3c5ffff     call sym.imp.free
0x00004e6d      31c0           xor eax, eax
0x00004e6f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00004e70      c3             ret
0x00004e71      e8ba010000     call sym.xalloc_die
0x00004e76      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00004e80      4889f0         mov rax, rsi
0x00004e83      48f7e2         mul rdx
0x00004e86      4889c6         mov rsi, rax
0x00004e89      0f90c0         seto al
0x00004e8c      4885f6         test rsi, rsi
0x00004e8f      780a           js 0x4e9b
0x00004e91      0fb6c0         movzx eax, al
0x00004e94      4885c0         test rax, rax
0x00004e97      7502           jne 0x4e9b
0x00004e99      eba5           jmp sym.xrealloc
0x00004e9b      4883ec08       sub rsp, 8
0x00004e9f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00004ea4      6690           nop
0x00004ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00004eb0      4885ff         test rdi, rdi
0x00004eb3      4989d1         mov r9, rdx
0x00004eb6      488b0e         mov rcx, qword [rsi]
0x00004eb9      7435           je 0x4ef0
0x00004ebb      31d2           xor edx, edx
0x00004ebd      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00004ec7      49f7f1         div r9
0x00004eca      4839c8         cmp rax, rcx
0x00004ecd      763c           jbe 0x4f0b
0x00004ecf      4889c8         mov rax, rcx
0x00004ed2      48d1e8         shr rax, 1
0x00004ed5      488d4c0801     lea rcx, [rax + rcx + 1]
0x00004eda      48890e         mov qword [rsi], rcx
0x00004edd      490fafc9       imul rcx, r9
0x00004ee1      4889ce         mov rsi, rcx
0x00004ee4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00004ee9      0f1f80000000.  nop dword [rax]
0x00004ef0      4885c9         test rcx, rcx
0x00004ef3      7423           je 0x4f18
0x00004ef5      4889c8         mov rax, rcx
0x00004ef8      49f7e1         mul r9
0x00004efb      0f90c2         seto dl
0x00004efe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00004f01      0fb6d2         movzx edx, dl
0x00004f04      7805           js 0x4f0b
0x00004f06      4885d2         test rdx, rdx
0x00004f09      74cf           je 0x4eda
0x00004f0b      4883ec08       sub rsp, 8
0x00004f0f      e81c010000     call sym.xalloc_die
0x00004f14      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00004f18      31d2           xor edx, edx
0x00004f1a      b880000000     mov eax, 0x80
0x00004f1f      4531c0         xor r8d, r8d
0x00004f22      49f7f1         div r9
0x00004f25      4885c0         test rax, rax
0x00004f28      410f94c0       sete r8b
0x00004f2c      498d0c00       lea rcx, [r8 + rax]
0x00004f30      ebc3           jmp 0x4ef5
0x00004f32      0f1f4000       nop dword [rax]
0x00004f36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00004f40      4885ff         test rdi, rdi
0x00004f43      488b06         mov rax, qword [rsi]
0x00004f46      7428           je 0x4f70
0x00004f48      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00004f52      4839d0         cmp rax, rdx
0x00004f55      772a           ja 0x4f81
0x00004f57      4889c2         mov rdx, rax
0x00004f5a      48d1ea         shr rdx, 1
0x00004f5d      488d440201     lea rax, [rdx + rax + 1]
0x00004f62      488906         mov qword [rsi], rax
0x00004f65      4889c6         mov rsi, rax
0x00004f68      e9d3feffff     jmp sym.xrealloc
0x00004f6d      0f1f00         nop dword [rax]
0x00004f70      4885c0         test rax, rax
0x00004f73      ba80000000     mov edx, 0x80
0x00004f78      480f44c2       cmove rax, rdx
0x00004f7c      4885c0         test rax, rax
0x00004f7f      79e1           jns 0x4f62
0x00004f81      4883ec08       sub rsp, 8
0x00004f85      e8a6000000     call sym.xalloc_die
0x00004f8a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00004f90      53             push rbx
0x00004f91      4889fb         mov rbx, rdi
0x00004f94      e847feffff     call sym.xmalloc
0x00004f99      4889da         mov rdx, rbx
0x00004f9c      31f6           xor esi, esi
0x00004f9e      4889c7         mov rdi, rax
0x00004fa1      5b             pop rbx
0x00004fa2      e9b9c5ffff     jmp sym.imp.memset
0x00004fa7      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00004fb0      4889f8         mov rax, rdi
0x00004fb3      4883ec08       sub rsp, 8
0x00004fb7      48f7e6         mul rsi
0x00004fba      0f90c2         seto dl
0x00004fbd      4885c0         test rax, rax
0x00004fc0      7817           js 0x4fd9
0x00004fc2      0fb6d2         movzx edx, dl
0x00004fc5      4885d2         test rdx, rdx
0x00004fc8      750f           jne 0x4fd9
0x00004fca      e8f1c5ffff     call sym.imp.calloc
0x00004fcf      4885c0         test rax, rax
0x00004fd2      7405           je 0x4fd9
0x00004fd4      4883c408       add rsp, 8
0x00004fd8      c3             ret
0x00004fd9      e852000000     call sym.xalloc_die
0x00004fde      6690           nop
;-- xmemdup:
0x00004fe0      55             push rbp
0x00004fe1      53             push rbx
0x00004fe2      4889fd         mov rbp, rdi
0x00004fe5      4889f7         mov rdi, rsi
0x00004fe8      4889f3         mov rbx, rsi
0x00004feb      4883ec08       sub rsp, 8
0x00004fef      e8ecfdffff     call sym.xmalloc
0x00004ff4      4883c408       add rsp, 8
0x00004ff8      4889da         mov rdx, rbx
0x00004ffb      4889ee         mov rsi, rbp
0x00004ffe      5b             pop rbx
0x00004fff      5d             pop rbp
0x00005000      4889c7         mov rdi, rax
0x00005003      e9c8c5ffff     jmp sym.imp.memcpy
0x00005008      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005010      53             push rbx
0x00005011      4889fb         mov rbx, rdi
0x00005014      e8c7c4ffff     call sym.imp.strlen
0x00005019      4889df         mov rdi, rbx
0x0000501c      488d7001       lea rsi, [rax + 1]
0x00005020      5b             pop rbx
0x00005021      ebbd           jmp sym.xmemdup
0x00005023      662e0f1f8400.  nop word cs:[rax + rax]
0x0000502d      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005030      488d35981300.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x63cf ; "memory exhausted"
0x00005037      4883ec08       sub rsp, 8
0x0000503b      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005040      31ff           xor edi, edi
0x00005042      e879c4ffff     call sym.imp.dcgettext
0x00005047      8b3ddb2f2000   mov edi, dword [obj.exit_failure]       ; [0x208028:4]=1
0x0000504d      488d15ff0a00.  lea rdx, [0x00005b53]                   ; "%s"
0x00005054      4889c1         mov rcx, rax
0x00005057      31f6           xor esi, esi
0x00005059      31c0           xor eax, eax
0x0000505b      e800c6ffff     call sym.imp.error
0x00005060      e8cbc3ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005065      662e0f1f8400.  nop word cs:[rax + rax]
0x0000506f      90             nop
;-- xstrndup:
0x00005070      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:31
0x00005074      e817c5ffff     call sym.imp.strndup                    ; ../coreutils-8.31/lib/xstrndup.c:32
0x00005079      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xstrndup.c:33
0x0000507c      7405           je 0x5083
0x0000507e      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/xstrndup.c:36
0x00005082      c3             ret
0x00005083      e8a8ffffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xstrndup.c:34
0x00005088      0f1f84000000.  nop dword [rax + rax]
;-- rpl_fclose:
0x00005090      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00005092      55             push rbp
0x00005093      53             push rbx
0x00005094      4889fb         mov rbx, rdi
0x00005097      e844c5ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000509c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000509e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x000050a1      7854           js 0x50f7                               ; ../coreutils-8.31/lib/fclose.c:66
0x000050a3      e878c5ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x000050a8      85c0           test eax, eax
0x000050aa      752c           jne 0x50d8
0x000050ac      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x000050af      e85c000000     call sym.rpl_fflush
0x000050b4      85c0           test eax, eax
0x000050b6      743c           je 0x50f4
0x000050b8      e883c3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x000050bd      448b20         mov r12d, dword [rax]
0x000050c0      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000050c3      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x000050c6      e8d5c3ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x000050cb      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x000050ce      7530           jne 0x5100
0x000050d0      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000050d1      5d             pop rbp
0x000050d2      415c           pop r12
0x000050d4      c3             ret
0x000050d5      0f1f00         nop dword [rax]
0x000050d8      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x000050db      e800c5ffff     call sym.imp.fileno
0x000050e0      31f6           xor esi, esi
0x000050e2      ba01000000     mov edx, 1
0x000050e7      89c7           mov edi, eax
0x000050e9      e852c4ffff     call sym.imp.lseek
0x000050ee      4883f8ff       cmp rax, 0xffffffffffffffff
0x000050f2      75b8           jne 0x50ac
0x000050f4      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x000050f7      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x000050f8      5d             pop rbp
0x000050f9      415c           pop r12
0x000050fb      e9a0c3ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x00005100      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x00005104      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x00005109      ebc5           jmp 0x50d0
0x0000510b      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x00005110      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x00005113      53             push rbx
0x00005114      4889fb         mov rbx, rdi
0x00005117      7411           je 0x512a                               ; ../coreutils-8.31/lib/fflush.c:150
0x00005119      e802c5ffff     call sym.imp.__freading
0x0000511e      85c0           test eax, eax
0x00005120      7408           je 0x512a
0x00005122      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x00005128      750e           jne 0x5138
0x0000512a      4889df         mov rdi, rbx
0x0000512d      5b             pop rbx
0x0000512e      e9cdc4ffff     jmp sym.imp.fflush
0x00005133      0f1f440000     nop dword [rax + rax]
0x00005138      4889df         mov rdi, rbx
0x0000513b      ba01000000     mov edx, 1
0x00005140      31f6           xor esi, esi
0x00005142      e809000000     call sym.rpl_fseeko
0x00005147      4889df         mov rdi, rbx
0x0000514a      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x0000514b      e9b0c4ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x00005150      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x00005154      48394710       cmp qword [rdi + 0x10], rax
0x00005158      7406           je 0x5160                               ; ../coreutils-8.31/lib/fseeko.c:32
0x0000515a      e911c5ffff     jmp sym.imp.fseeko
0x0000515f      90             nop
0x00005160      488b4720       mov rax, qword [rdi + 0x20]
0x00005164      48394728       cmp qword [rdi + 0x28], rax
0x00005168      75f0           jne 0x515a                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000516a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000516f      75e9           jne 0x515a                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00005171      4154           push r12
0x00005173      55             push rbp
0x00005174      4189d4         mov r12d, edx
0x00005177      53             push rbx
0x00005178      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000517b      4889fb         mov rbx, rdi
0x0000517e      e85dc4ffff     call sym.imp.fileno
0x00005183      4489e2         mov edx, r12d
0x00005186      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00005189      89c7           mov edi, eax
0x0000518b      e8b0c3ffff     call sym.imp.lseek
0x00005190      4883f8ff       cmp rax, 0xffffffffffffffff
0x00005194      740c           je 0x51a2
0x00005196      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00005199      488983900000.  mov qword [rbx + 0x90], rax
0x000051a0      31c0           xor eax, eax
0x000051a2      5b             pop rbx
0x000051a3      5d             pop rbp
0x000051a4      415c           pop r12
0x000051a6      c3             ret
0x000051a7      660f1f840000.  nop word [rax + rax]
;-- rpl_mbrtowc:
0x000051b0      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x000051b2      4154           push r12
0x000051b4      4989f5         mov r13, rsi
0x000051b7      55             push rbp
0x000051b8      53             push rbx
0x000051b9      4889fb         mov rbx, rdi
0x000051bc      4989d4         mov r12, rdx
0x000051bf      4883ec18       sub rsp, 0x18
0x000051c3      64488b042528.  mov rax, qword fs:[0x28]
0x000051cc      4889442408     mov qword [rsp + 8], rax
0x000051d1      31c0           xor eax, eax
0x000051d3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000051d8      4885ff         test rdi, rdi
0x000051db      480f44d8       cmove rbx, rax
0x000051df      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000051e2      e829c3ffff     call sym.imp.mbrtowc
0x000051e7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000051eb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000051ee      7620           jbe 0x5210                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000051f0      4d85e4         test r12, r12
0x000051f3      741b           je 0x5210
0x000051f5      31ff           xor edi, edi
0x000051f7      e8c4000000     call sym.hard_locale
0x000051fc      84c0           test al, al
0x000051fe      7510           jne 0x5210
0x00005200      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005205      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x0000520a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x0000520c      0f1f4000       nop dword [rax]
0x00005210      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005215      644833142528.  xor rdx, qword fs:[0x28]
0x0000521e      4889e8         mov rax, rbp
0x00005221      750b           jne 0x522e
0x00005223      4883c418       add rsp, 0x18
0x00005227      5b             pop rbx
0x00005228      5d             pop rbp
0x00005229      415c           pop r12
0x0000522b      415d           pop r13
0x0000522d      c3             ret
0x0000522e      e8bdc2ffff     call sym.imp.__stack_chk_fail
0x00005233      662e0f1f8400.  nop word cs:[rax + rax]
0x0000523d      0f1f00         nop dword [rax]
;-- close_stream:
0x00005240      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00005242      55             push rbp
0x00005243      4889fd         mov rbp, rdi
0x00005246      53             push rbx
0x00005247      e824c2ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000524c      8b5d00         mov ebx, dword [rbp]
0x0000524f      4889ef         mov rdi, rbp
0x00005252      4989c4         mov r12, rax
0x00005255      e836feffff     call sym.rpl_fclose
0x0000525a      83e320         and ebx, 0x20                           ; "@"
0x0000525d      85db           test ebx, ebx
0x0000525f      7517           jne 0x5278
0x00005261      85c0           test eax, eax
0x00005263      740a           je 0x526f                               ; stdio.h:-186
0x00005265      4d85e4         test r12, r12                           ; stdio.h:-178
0x00005268      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000526d      7439           je 0x52a8
0x0000526f      5b             pop rbx
0x00005270      5d             pop rbp
0x00005271      415c           pop r12
0x00005273      c3             ret
0x00005274      0f1f4000       nop dword [rax]
0x00005278      85c0           test eax, eax
0x0000527a      751c           jne 0x5298
0x0000527c      e8bfc1ffff     call sym.imp.__errno_location
0x00005281      c70000000000   mov dword [rax], 0
0x00005287      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000528c      5b             pop rbx
0x0000528d      5d             pop rbp
0x0000528e      415c           pop r12
0x00005290      c3             ret
0x00005291      0f1f80000000.  nop dword [rax]
0x00005298      5b             pop rbx
0x00005299      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000529e      5d             pop rbp                                 ; stdio.h:-186
0x0000529f      415c           pop r12
0x000052a1      c3             ret
0x000052a2      660f1f440000   nop word [rax + rax]
0x000052a8      e893c1ffff     call sym.imp.__errno_location
0x000052ad      833809         cmp dword [rax], 9
0x000052b0      5b             pop rbx
0x000052b1      5d             pop rbp
0x000052b2      415c           pop r12                                 ; stdio.h:-178
0x000052b4      0f95c0         setne al
0x000052b7      0fb6c0         movzx eax, al
0x000052ba      f7d8           neg eax
0x000052bc      c3             ret
0x000052bd      0f1f00         nop dword [rax]
;-- hard_locale:
0x000052c0      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x000052c4      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x000052c6      e875c3ffff     call sym.imp.setlocale
0x000052cb      4889c2         mov rdx, rax
0x000052ce      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000052d3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000052d6      741d           je 0x52f5
0x000052d8      488d3d011100.  lea rdi, [0x000063e0]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000052df      b902000000     mov ecx, 2
0x000052e4      4889d6         mov rsi, rdx
0x000052e7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000052e9      0f97c1         seta cl
0x000052ec      80d900         sbb cl, 0
0x000052ef      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000052f1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000052f3      750b           jne 0x5300
0x000052f5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000052f9      c3             ret
0x000052fa      660f1f440000   nop word [rax + rax]
0x00005300      488d3ddb1000.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x63e2 ; "POSIX"
0x00005307      b906000000     mov ecx, 6
0x0000530c      4889d6         mov rsi, rdx
0x0000530f      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00005311      0f97c0         seta al
0x00005314      1c00           sbb al, 0
0x00005316      84c0           test al, al
0x00005318      0f95c0         setne al
0x0000531b      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x0000531f      c3             ret
;-- locale_charset:
0x00005320      4883ec08       sub rsp, 8
0x00005324      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x00005329      e8e2c2ffff     call sym.imp.nl_langinfo
0x0000532e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00005331      741d           je 0x5350
0x00005333      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00005336      488d15ab1000.  lea rdx, str.ASCII                      ; 0x63e8 ; "ASCII"
0x0000533d      480f44c2       cmove rax, rdx
0x00005341      4883c408       add rsp, 8
0x00005345      c3             ret
0x00005346      662e0f1f8400.  nop word cs:[rax + rax]
0x00005350      488d05911000.  lea rax, str.ASCII                      ; 0x63e8 ; "ASCII"
0x00005357      4883c408       add rsp, 8
0x0000535b      c3             ret
0x0000535c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00005360      4157           push r15
0x00005362      4156           push r14
0x00005364      4989d7         mov r15, rdx
0x00005367      4155           push r13
0x00005369      4154           push r12
0x0000536b      4c8d25de2720.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x207b50
0x00005372      55             push rbp
0x00005373      488d2dde2720.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x207b58
0x0000537a      53             push rbx
0x0000537b      4189fd         mov r13d, edi
0x0000537e      4989f6         mov r14, rsi
0x00005381      4c29e5         sub rbp, r12
0x00005384      4883ec08       sub rsp, 8
0x00005388      48c1fd03       sar rbp, 3
0x0000538c      e857c0ffff     call sym._init
0x00005391      4885ed         test rbp, rbp
0x00005394      7420           je 0x53b6
0x00005396      31db           xor ebx, ebx
0x00005398      0f1f84000000.  nop dword [rax + rax]
0x000053a0      4c89fa         mov rdx, r15
0x000053a3      4c89f6         mov rsi, r14
0x000053a6      4489ef         mov edi, r13d
0x000053a9      41ff14dc       call qword [r12 + rbx*8]
0x000053ad      4883c301       add rbx, 1
0x000053b1      4839dd         cmp rbp, rbx
0x000053b4      75ea           jne 0x53a0
0x000053b6      4883c408       add rsp, 8
0x000053ba      5b             pop rbx
0x000053bb      5d             pop rbp
0x000053bc      415c           pop r12
0x000053be      415d           pop r13
0x000053c0      415e           pop r14
0x000053c2      415f           pop r15
0x000053c4      c3             ret
0x000053c5      90             nop
0x000053c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000053d0      f3c3           ret
0x000053d2      662e0f1f8400.  nop word cs:[rax + rax]
0x000053dc      0f1f4000       nop dword [rax]
;-- atexit:
0x000053e0      488b15212c20.  mov rdx, qword [obj.__dso_handle]       ; [0x208008:8]=0x208008 obj.__dso_handle
0x000053e7      31f6           xor esi, esi
0x000053e9      e9a2c2ffff     jmp sym.imp.__cxa_atexit
0x000053ee      0000           add byte [rax], al
