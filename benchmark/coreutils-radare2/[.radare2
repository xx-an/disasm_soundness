;-- section..plt:
;-- .plt:
0x00001310      ff351aab2000   push qword [0x0020be30]                 ; [12] -r-x section size 784 named .plt
0x00001316      ff251cab2000   jmp qword [0x0020be38]                  ; [0x20be38:8]=0
0x0000131c      0f1f4000       nop dword [rax]
;-- imp.__snprintf_chk:
0x00001320      ff251aab2000   jmp qword [reloc.__snprintf_chk]        ; [0x20be40:8]=0x1326 ; "&\x13"
0x00001326      6800000000     push 0
0x0000132b      e9e0ffffff     jmp sym..plt
;-- imp.free:
0x00001330      ff2512ab2000   jmp qword [reloc.free]                  ; [0x20be48:8]=0x1336 ; "6\x13"
0x00001336      6801000000     push 1
0x0000133b      e9d0ffffff     jmp sym..plt
;-- imp.abort:
0x00001340      ff250aab2000   jmp qword [reloc.abort]                 ; [0x20be50:8]=0x1346 ; "F\x13"
0x00001346      6802000000     push 2
0x0000134b      e9c0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001350      ff2502ab2000   jmp qword [reloc.__errno_location]      ; [0x20be58:8]=0x1356 ; "V\x13"
0x00001356      6803000000     push 3
0x0000135b      e9b0ffffff     jmp sym..plt
;-- imp.error_at_line:
0x00001360      ff25faaa2000   jmp qword [reloc.error_at_line]         ; [0x20be60:8]=0x1366 ; "f\x13"
0x00001366      6804000000     push 4
0x0000136b      e9a0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001370      ff25f2aa2000   jmp qword [reloc.strncmp]               ; [0x20be68:8]=0x1376 ; "v\x13"
0x00001376      6805000000     push 5
0x0000137b      e990ffffff     jmp sym..plt
;-- imp._exit:
0x00001380      ff25eaaa2000   jmp qword [reloc._exit]                 ; [0x20be70:8]=0x1386
0x00001386      6806000000     push 6
0x0000138b      e980ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001390      ff25e2aa2000   jmp qword [reloc.__fpending]            ; [0x20be78:8]=0x1396
0x00001396      6807000000     push 7
0x0000139b      e970ffffff     jmp sym..plt
;-- imp.isatty:
0x000013a0      ff25daaa2000   jmp qword [reloc.isatty]                ; [0x20be80:8]=0x13a6
0x000013a6      6808000000     push 8
0x000013ab      e960ffffff     jmp sym..plt
;-- imp.textdomain:
0x000013b0      ff25d2aa2000   jmp qword [reloc.textdomain]            ; [0x20be88:8]=0x13b6
0x000013b6      6809000000     push 9
0x000013bb      e950ffffff     jmp sym..plt
;-- imp.fclose:
0x000013c0      ff25caaa2000   jmp qword [reloc.fclose]                ; [0x20be90:8]=0x13c6
0x000013c6      680a000000     push 0xa
0x000013cb      e940ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x000013d0      ff25c2aa2000   jmp qword [reloc.bindtextdomain]        ; [0x20be98:8]=0x13d6
0x000013d6      680b000000     push 0xb
0x000013db      e930ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000013e0      ff25baaa2000   jmp qword [reloc.dcgettext]             ; [0x20bea0:8]=0x13e6
0x000013e6      680c000000     push 0xc
0x000013eb      e920ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000013f0      ff25b2aa2000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x20bea8:8]=0x13f6
0x000013f6      680d000000     push 0xd
0x000013fb      e910ffffff     jmp sym..plt
;-- imp.strlen:
0x00001400      ff25aaaa2000   jmp qword [reloc.strlen]                ; [0x20beb0:8]=0x1406
0x00001406      680e000000     push 0xe
0x0000140b      e900ffffff     jmp sym..plt
;-- imp.__lxstat:
0x00001410      ff25a2aa2000   jmp qword [reloc.__lxstat]              ; [0x20beb8:8]=0x1416
0x00001416      680f000000     push 0xf
0x0000141b      e9f0feffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x00001420      ff259aaa2000   jmp qword [reloc.__stack_chk_fail]      ; [0x20bec0:8]=0x1426 ; "&\x14"
0x00001426      6810000000     push 0x10
0x0000142b      e9e0feffff     jmp sym..plt
;-- imp.mbrtowc:
0x00001430      ff2592aa2000   jmp qword [reloc.mbrtowc]               ; [0x20bec8:8]=0x1436 ; "6\x14"
0x00001436      6811000000     push 0x11
0x0000143b      e9d0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001440      ff258aaa2000   jmp qword [reloc.strrchr]               ; [0x20bed0:8]=0x1446 ; "F\x14"
0x00001446      6812000000     push 0x12
0x0000144b      e9c0feffff     jmp sym..plt
;-- imp.lseek:
0x00001450      ff2582aa2000   jmp qword [reloc.lseek]                 ; [0x20bed8:8]=0x1456 ; "V\x14"
0x00001456      6813000000     push 0x13
0x0000145b      e9b0feffff     jmp sym..plt
;-- imp.memset:
0x00001460      ff257aaa2000   jmp qword [reloc.memset]                ; [0x20bee0:8]=0x1466 ; "f\x14"
0x00001466      6814000000     push 0x14
0x0000146b      e9a0feffff     jmp sym..plt
;-- imp.geteuid:
0x00001470      ff2572aa2000   jmp qword [reloc.geteuid]               ; [0x20bee8:8]=0x1476 ; "v\x14"
0x00001476      6815000000     push 0x15
0x0000147b      e990feffff     jmp sym..plt
;-- imp.memcmp:
0x00001480      ff256aaa2000   jmp qword [reloc.memcmp]                ; [0x20bef0:8]=0x1486
0x00001486      6816000000     push 0x16
0x0000148b      e980feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x00001490      ff2562aa2000   jmp qword [reloc.fputs_unlocked]        ; [0x20bef8:8]=0x1496
0x00001496      6817000000     push 0x17
0x0000149b      e970feffff     jmp sym..plt
;-- imp.calloc:
0x000014a0      ff255aaa2000   jmp qword [reloc.calloc]                ; [0x20bf00:8]=0x14a6
0x000014a6      6818000000     push 0x18
0x000014ab      e960feffff     jmp sym..plt
;-- imp.strcmp:
0x000014b0      ff2552aa2000   jmp qword [reloc.strcmp]                ; [0x20bf08:8]=0x14b6
0x000014b6      6819000000     push 0x19
0x000014bb      e950feffff     jmp sym..plt
;-- imp.strtol:
0x000014c0      ff254aaa2000   jmp qword [reloc.strtol]                ; [0x20bf10:8]=0x14c6
0x000014c6      681a000000     push 0x1a
0x000014cb      e940feffff     jmp sym..plt
;-- imp.memcpy:
0x000014d0      ff2542aa2000   jmp qword [reloc.memcpy]                ; [0x20bf18:8]=0x14d6
0x000014d6      681b000000     push 0x1b
0x000014db      e930feffff     jmp sym..plt
;-- imp.fileno:
0x000014e0      ff253aaa2000   jmp qword [reloc.fileno]                ; [0x20bf20:8]=0x14e6
0x000014e6      681c000000     push 0x1c
0x000014eb      e920feffff     jmp sym..plt
;-- imp.__xstat:
0x000014f0      ff2532aa2000   jmp qword [reloc.__xstat]               ; [0x20bf28:8]=0x14f6
0x000014f6      681d000000     push 0x1d
0x000014fb      e910feffff     jmp sym..plt
;-- imp.malloc:
0x00001500      ff252aaa2000   jmp qword [reloc.malloc]                ; [0x20bf30:8]=0x1506
0x00001506      681e000000     push 0x1e
0x0000150b      e900feffff     jmp sym..plt
;-- imp.fflush:
0x00001510      ff2522aa2000   jmp qword [reloc.fflush]                ; [0x20bf38:8]=0x1516
0x00001516      681f000000     push 0x1f
0x0000151b      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001520      ff251aaa2000   jmp qword [reloc.nl_langinfo]           ; [0x20bf40:8]=0x1526 ; "&\x15"
0x00001526      6820000000     push 0x20                               ; "@"
0x0000152b      e9e0fdffff     jmp sym..plt
;-- imp.getegid:
0x00001530      ff2512aa2000   jmp qword [reloc.getegid]               ; [0x20bf48:8]=0x1536 ; "6\x15"
0x00001536      6821000000     push 0x21                               ; '!'
0x0000153b      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001540      ff250aaa2000   jmp qword [reloc.__freading]            ; [0x20bf50:8]=0x1546 ; "F\x15"
0x00001546      6822000000     push 0x22                               ; '"'
0x0000154b      e9c0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001550      ff2502aa2000   jmp qword [reloc.realloc]               ; [0x20bf58:8]=0x1556 ; "V\x15"
0x00001556      6823000000     push 0x23                               ; '#'
0x0000155b      e9b0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001560      ff25faa92000   jmp qword [reloc.setlocale]             ; [0x20bf60:8]=0x1566 ; "f\x15"
0x00001566      6824000000     push 0x24                               ; '$'
0x0000156b      e9a0fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001570      ff25f2a92000   jmp qword [reloc.__printf_chk]          ; [0x20bf68:8]=0x1576 ; "v\x15"
0x00001576      6825000000     push 0x25                               ; '%'
0x0000157b      e990fdffff     jmp sym..plt
;-- imp.error:
0x00001580      ff25eaa92000   jmp qword [reloc.error]                 ; [0x20bf70:8]=0x1586
0x00001586      6826000000     push 0x26                               ; '&'
0x0000158b      e980fdffff     jmp sym..plt
;-- imp.fseeko:
0x00001590      ff25e2a92000   jmp qword [reloc.fseeko]                ; [0x20bf78:8]=0x1596
0x00001596      6827000000     push 0x27                               ; '''
0x0000159b      e970fdffff     jmp sym..plt
;-- imp.euidaccess:
0x000015a0      ff25daa92000   jmp qword [reloc.euidaccess]            ; [0x20bf80:8]=0x15a6
0x000015a6      6828000000     push 0x28                               ; '('
0x000015ab      e960fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000015b0      ff25d2a92000   jmp qword [reloc.__cxa_atexit]          ; [0x20bf88:8]=0x15b6
0x000015b6      6829000000     push 0x29                               ; ')'
0x000015bb      e950fdffff     jmp sym..plt
;-- imp.exit:
0x000015c0      ff25caa92000   jmp qword [reloc.exit]                  ; [0x20bf90:8]=0x15c6
0x000015c6      682a000000     push 0x2a                               ; '*'
0x000015cb      e940fdffff     jmp sym..plt
;-- imp.fwrite:
0x000015d0      ff25c2a92000   jmp qword [reloc.fwrite]                ; [0x20bf98:8]=0x15d6
0x000015d6      682b000000     push 0x2b                               ; '+'
0x000015db      e930fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000015e0      ff25baa92000   jmp qword [reloc.__fprintf_chk]         ; [0x20bfa0:8]=0x15e6
0x000015e6      682c000000     push 0x2c                               ; ','
0x000015eb      e920fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000015f0      ff25b2a92000   jmp qword [reloc.mbsinit]               ; [0x20bfa8:8]=0x15f6
0x000015f6      682d000000     push 0x2d                               ; '-'
0x000015fb      e910fdffff     jmp sym..plt
;-- imp.iswprint:
0x00001600      ff25aaa92000   jmp qword [reloc.iswprint]              ; [0x20bfb0:8]=0x1606
0x00001606      682e000000     push 0x2e                               ; '.'
0x0000160b      e900fdffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001610      ff25a2a92000   jmp qword [reloc.__ctype_b_loc]         ; [0x20bfb8:8]=0x1616
0x00001616      682f000000     push 0x2f                               ; '/'
0x0000161b      e9f0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001620      .qword 0x90660020a9ba25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001628      0000           add byte [rax], al
0x0000162a      0000           add byte [rax], al
0x0000162c      0000           add byte [rax], al
0x0000162e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001630      55             push rbp                                ; [14] -r-x section size 27838 named .text
0x00001631      53             push rbx
0x00001632      89fb           mov ebx, edi
0x00001634      4889f5         mov rbp, rsi
0x00001637      4883ec08       sub rsp, 8
0x0000163b      488b3e         mov rdi, qword [rsi]
0x0000163e      e85d1d0000     call sym.set_program_name
0x00001643      488d35978200.  lea rsi, [0x000098e1]
0x0000164a      bf06000000     mov edi, 6
0x0000164f      e80cffffff     call sym.imp.setlocale
0x00001654      488d35286e00.  lea rsi, str.usr_local_share_locale     ; 0x8483 ; "/usr/local/share/locale"
0x0000165b      488d3de86d00.  lea rdi, [0x0000844a]                   ; "coreutils"
0x00001662      e869fdffff     call sym.imp.bindtextdomain
0x00001667      488d3ddc6d00.  lea rdi, [0x0000844a]                   ; "coreutils"
0x0000166e      e83dfdffff     call sym.imp.textdomain
0x00001673      488d3d261c00.  lea rdi, sym.close_stdout               ; 0x32a0 ; "USH\x83\xec\bH\x8b=\u06cd "
0x0000167a      c70594a92000.  mov dword [obj.exit_failure], 2         ; [0x20c018:4]=1
0x00001684      e8576c0000     call sym.atexit
0x00001689      83fb02         cmp ebx, 2
0x0000168c      48892d1daa20.  mov qword [obj.argv], rbp               ; [0x20c0b0:8]=0
0x00001693      7462           je 0x16f7
0x00001695      83fb01         cmp ebx, 1
0x00001698      0f8ef5000000   jle 0x1793
0x0000169e      4863c3         movsxd rax, ebx
0x000016a1      488d35266e00.  lea rsi, [0x000084ce]                   ; "]"
0x000016a8      488b7cc5f8     mov rdi, qword [rbp + rax*8 - 8]
0x000016ad      e8fefdffff     call sym.imp.strcmp
0x000016b2      85c0           test eax, eax
0x000016b4      0f85d9000000   jne 0x1793
0x000016ba      8d43ff         lea eax, [rbx - 1]
0x000016bd      8d7bfe         lea edi, [rbx - 2]
0x000016c0      c705f2a92000.  mov dword [obj.pos], 1                  ; [0x20c0bc:4]=0
0x000016ca      8905e8a92000   mov dword [obj.argc], eax               ; [0x20c0b8:4]=0
0x000016d0      e85b110000     call sym.posixtest
0x000016d5      486315e0a920.  movsxd rdx, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000016dc      3b15d6a92000   cmp edx, dword [obj.argc]               ; [0x20c0b8:4]=0
0x000016e2      0f85da000000   jne 0x17c2
0x000016e8      83f001         xor eax, 1
0x000016eb      0fb6d8         movzx ebx, al
0x000016ee      4883c408       add rsp, 8
0x000016f2      89d8           mov eax, ebx
0x000016f4      5b             pop rbx
0x000016f5      5d             pop rbp
0x000016f6      c3             ret
0x000016f7      488b6d08       mov rbp, qword [rbp + 8]
0x000016fb      488d35996d00.  lea rsi, str.help                       ; 0x849b ; "--help"
0x00001702      4889ef         mov rdi, rbp
0x00001705      e8a6fdffff     call sym.imp.strcmp
0x0000170a      85c0           test eax, eax
0x0000170c      0f84d1000000   je 0x17e3
0x00001712      488d35896d00.  lea rsi, str.version                    ; 0x84a2 ; "--version"
0x00001719      4889ef         mov rdi, rbp
0x0000171c      e88ffdffff     call sym.imp.strcmp
0x00001721      85c0           test eax, eax
0x00001723      89c3           mov ebx, eax
0x00001725      742e           je 0x1755
0x00001727      488d35a06d00.  lea rsi, [0x000084ce]                   ; "]"
0x0000172e      4889ef         mov rdi, rbp
0x00001731      e87afdffff     call sym.imp.strcmp
0x00001736      85c0           test eax, eax
0x00001738      7559           jne 0x1793
0x0000173a      c70574a92000.  mov dword [obj.argc], 1                 ; [0x20c0b8:4]=0
0x00001744      c7056ea92000.  mov dword [obj.pos], 1                  ; [0x20c0bc:4]=0
0x0000174e      bb01000000     mov ebx, 1
0x00001753      eb99           jmp 0x16ee
0x00001755      4883ec08       sub rsp, 8
0x00001759      488b0db0a820.  mov rcx, qword [obj.Version]            ; [0x20c010:8]=0x9333 str.8.31 ; "3\x93"
0x00001760      488b3d21a920.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00001767      6a00           push 0
0x00001769      488d15d66c00.  lea rdx, str.GNU_coreutils              ; 0x8446 ; "GNU coreutils"
0x00001770      4c8d0d356d00.  lea r9, str.Matthew_Bradburn            ; 0x84ac ; "Matthew Bradburn"
0x00001777      4c8d053f6d00.  lea r8, str.Kevin_Braunsdorf            ; 0x84bd ; "Kevin Braunsdorf"
0x0000177e      488d35a86c00.  lea rsi, [0x0000842d]                   ; "["
0x00001785      31c0           xor eax, eax
0x00001787      e884410000     call sym.version_etc
0x0000178c      58             pop rax
0x0000178d      5a             pop rdx
0x0000178e      e95bffffff     jmp 0x16ee
0x00001793      488d3d346d00.  lea rdi, [0x000084ce]                   ; "]"
0x0000179a      e811390000     call sym.quote
0x0000179f      488d352a6d00.  lea rsi, str.missing__s                 ; 0x84d0 ; "missing %s"
0x000017a6      4889c3         mov rbx, rax
0x000017a9      ba05000000     mov edx, 5
0x000017ae      31ff           xor edi, edi
0x000017b0      e82bfcffff     call sym.imp.dcgettext
0x000017b5      4889de         mov rsi, rbx
0x000017b8      4889c7         mov rdi, rax
0x000017bb      31c0           xor eax, eax
0x000017bd      e8ae020000     call sym.test_syntax_error
0x000017c2      488b05e7a820.  mov rax, qword [obj.argv]               ; [0x20c0b0:8]=0
0x000017c9      488b3cd0       mov rdi, qword [rax + rdx*8]
0x000017cd      e8de380000     call sym.quote
0x000017d2      ba05000000     mov edx, 5
0x000017d7      4889c3         mov rbx, rax
0x000017da      488d35fa6c00.  lea rsi, str.extra_argument__s          ; 0x84db ; "extra argument %s"
0x000017e1      ebcb           jmp 0x17ae
0x000017e3      31ff           xor edi, edi
0x000017e5      e8b6160000     call sym.usage
0x000017ea      660f1f440000   nop word [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x000017f0      31ed           xor ebp, ebp
0x000017f2      4989d1         mov r9, rdx
0x000017f5      5e             pop rsi
0x000017f6      4889e2         mov rdx, rsp
0x000017f9      4883e4f0       and rsp, 0xfffffffffffffff0
0x000017fd      50             push rax
0x000017fe      54             push rsp
0x000017ff      4c8d05ca6a00.  lea r8, sym.__libc_csu_fini             ; 0x82d0
0x00001806      488d0d536a00.  lea rcx, sym.__libc_csu_init            ; 0x8260 ; "AWAVI\x89\xd7AUATL\x8d%^9 "
0x0000180d      488d3d1cfeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1630 ; "US\x89\xfbH\x89\xf5H\x83\xec\bH\x8b>\xe8]\x1d"
0x00001814      ff15aea72000   call qword [reloc.__libc_start_main]    ; [0x20bfc8:8]=0
0x0000181a      f4             hlt
0x0000181b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00001820      488d3d59a820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x00001827      55             push rbp
0x00001828      488d0551a820.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x0000182f      4839f8         cmp rax, rdi
0x00001832      4889e5         mov rbp, rsp
0x00001835      7419           je 0x1850
0x00001837      488b0582a720.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x20bfc0:8]=0
0x0000183e      4885c0         test rax, rax
0x00001841      740d           je 0x1850
0x00001843      5d             pop rbp
0x00001844      ffe0           jmp rax
0x00001846      662e0f1f8400.  nop word cs:[rax + rax]
0x00001850      5d             pop rbp
0x00001851      c3             ret
0x00001852      0f1f4000       nop dword [rax]
0x00001856      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x00001860      488d3d19a820.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x00001867      488d3512a820.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20c080
0x0000186e      55             push rbp
0x0000186f      4829fe         sub rsi, rdi
0x00001872      4889e5         mov rbp, rsp
0x00001875      48c1fe03       sar rsi, 3
0x00001879      4889f0         mov rax, rsi
0x0000187c      48c1e83f       shr rax, 0x3f
0x00001880      4801c6         add rsi, rax
0x00001883      48d1fe         sar rsi, 1
0x00001886      7418           je 0x18a0
0x00001888      488b0549a720.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x20bfd8:8]=0
0x0000188f      4885c0         test rax, rax
0x00001892      740c           je 0x18a0
0x00001894      5d             pop rbp
0x00001895      ffe0           jmp rax
0x00001897      660f1f840000.  nop word [rax + rax]
0x000018a0      5d             pop rbp
0x000018a1      c3             ret
0x000018a2      0f1f4000       nop dword [rax]
0x000018a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x000018b0      803df1a72000.  cmp byte [obj.completed.7697], 0        ; [0x20c0a8:1]=0
0x000018b7      752f           jne 0x18e8
0x000018b9      48833d1fa720.  cmp qword [reloc.__cxa_finalize], 0     ; [0x20bfe0:8]=0
0x000018c1      55             push rbp
0x000018c2      4889e5         mov rbp, rsp
0x000018c5      740c           je 0x18d3
0x000018c7      488b3d3aa720.  mov rdi, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x000018ce      e84dfdffff     call sym..plt.got
0x000018d3      e848ffffff     call sym.deregister_tm_clones
0x000018d8      c605c9a72000.  mov byte [obj.completed.7697], 1        ; [0x20c0a8:1]=0
0x000018df      5d             pop rbp
0x000018e0      c3             ret
0x000018e1      0f1f80000000.  nop dword [rax]
0x000018e8      f3c3           ret
0x000018ea      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x000018f0      55             push rbp
0x000018f1      4889e5         mov rbp, rsp
0x000018f4      5d             pop rbp
0x000018f5      e966ffffff     jmp sym.register_tm_clones
0x000018fa      660f1f440000   nop word [rax + rax]
;-- binop:
0x00001900      4989f8         mov r8, rdi                             ; .//src:184
0x00001903      488d3dfb6900.  lea rdi, [0x00008305]                   ; .//src:185 ; "="
0x0000190a      b902000000     mov ecx, 2
0x0000190f      4c89c6         mov rsi, r8
0x00001912      b801000000     mov eax, 1
0x00001917      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001919      0f97c2         seta dl
0x0000191c      80da00         sbb dl, 0
0x0000191f      84d2           test dl, dl                             ; .//src:189
0x00001921      0f8441010000   je 0x1a68
0x00001927      488d3dd66900.  lea rdi, [0x00008304]                   ; .//src:185 ; "!="
0x0000192e      b903000000     mov ecx, 3
0x00001933      4c89c6         mov rsi, r8
0x00001936      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001938      0f97c2         seta dl
0x0000193b      80da00         sbb dl, 0
0x0000193e      84d2           test dl, dl
0x00001940      0f8422010000   je 0x1a68
0x00001946      488d3dba6900.  lea rdi, [0x00008307]                   ; "=="
0x0000194d      b903000000     mov ecx, 3
0x00001952      4c89c6         mov rsi, r8
0x00001955      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001957      0f97c2         seta dl
0x0000195a      80da00         sbb dl, 0
0x0000195d      84d2           test dl, dl
0x0000195f      0f8403010000   je 0x1a68
0x00001965      488d3d9e6900.  lea rdi, [0x0000830a]                   ; .//src:186 ; "-nt"
0x0000196c      b904000000     mov ecx, 4
0x00001971      4c89c6         mov rsi, r8
0x00001974      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001976      0f97c2         seta dl
0x00001979      80da00         sbb dl, 0
0x0000197c      84d2           test dl, dl                             ; .//src:185
0x0000197e      0f84e4000000   je 0x1a68
0x00001984      488d3d836900.  lea rdi, [0x0000830e]                   ; .//src:187 ; "-ot"
0x0000198b      b904000000     mov ecx, 4
0x00001990      4c89c6         mov rsi, r8
0x00001993      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001995      0f97c2         seta dl
0x00001998      80da00         sbb dl, 0
0x0000199b      84d2           test dl, dl                             ; .//src:186
0x0000199d      0f84c5000000   je 0x1a68
0x000019a3      488d3d686900.  lea rdi, [0x00008312]                   ; .//src:187 ; "-ef"
0x000019aa      b904000000     mov ecx, 4
0x000019af      4c89c6         mov rsi, r8
0x000019b2      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000019b4      0f97c2         seta dl
0x000019b7      80da00         sbb dl, 0
0x000019ba      84d2           test dl, dl
0x000019bc      0f84a6000000   je 0x1a68
0x000019c2      488d3d4d6900.  lea rdi, [0x00008316]                   ; "-eq"
0x000019c9      b904000000     mov ecx, 4
0x000019ce      4c89c6         mov rsi, r8
0x000019d1      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000019d3      0f97c2         seta dl
0x000019d6      80da00         sbb dl, 0
0x000019d9      84d2           test dl, dl
0x000019db      0f8487000000   je 0x1a68
0x000019e1      488d3d326900.  lea rdi, [0x0000831a]                   ; .//src:188 ; "-ne"
0x000019e8      b904000000     mov ecx, 4
0x000019ed      4c89c6         mov rsi, r8
0x000019f0      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000019f2      0f97c2         seta dl
0x000019f5      80da00         sbb dl, 0
0x000019f8      84d2           test dl, dl                             ; .//src:187
0x000019fa      746c           je 0x1a68
0x000019fc      488d3d1b6900.  lea rdi, [0x0000831e]                   ; .//src:188 ; "-lt"
0x00001a03      b904000000     mov ecx, 4
0x00001a08      4c89c6         mov rsi, r8
0x00001a0b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001a0d      0f97c2         seta dl
0x00001a10      80da00         sbb dl, 0
0x00001a13      84d2           test dl, dl
0x00001a15      7451           je 0x1a68
0x00001a17      488d3d046900.  lea rdi, [0x00008322]                   ; "-le"
0x00001a1e      b904000000     mov ecx, 4
0x00001a23      4c89c6         mov rsi, r8
0x00001a26      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001a28      0f97c2         seta dl
0x00001a2b      80da00         sbb dl, 0
0x00001a2e      84d2           test dl, dl
0x00001a30      7436           je 0x1a68
0x00001a32      488d3ded6800.  lea rdi, [0x00008326]                   ; .//src:189 ; "-gt"
0x00001a39      b904000000     mov ecx, 4
0x00001a3e      4c89c6         mov rsi, r8
0x00001a41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001a43      0f97c2         seta dl
0x00001a46      80da00         sbb dl, 0
0x00001a49      84d2           test dl, dl                             ; .//src:188
0x00001a4b      741b           je 0x1a68
0x00001a4d      488d3dd66800.  lea rdi, [0x0000832a]                   ; .//src:189 ; "-ge"
0x00001a54      b904000000     mov ecx, 4
0x00001a59      4c89c6         mov rsi, r8
0x00001a5c      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001a5e      0f97c0         seta al
0x00001a61      1c00           sbb al, 0
0x00001a63      84c0           test al, al
0x00001a65      0f94c0         sete al
0x00001a68      f3c3           ret                                     ; .//src:190
0x00001a6a      660f1f440000   nop word [rax + rax]
;-- test_syntax_error:
0x00001a70      4881ecd80000.  sub rsp, 0xd8                           ; .//src:92
0x00001a77      84c0           test al, al
0x00001a79      4889742428     mov qword [rsp + 0x28], rsi
0x00001a7e      4889542430     mov qword [rsp + 0x30], rdx
0x00001a83      48894c2438     mov qword [rsp + 0x38], rcx
0x00001a88      4c89442440     mov qword [rsp + 0x40], r8
0x00001a8d      4c894c2448     mov qword [rsp + 0x48], r9
0x00001a92      7437           je 0x1acb
0x00001a94      0f29442450     movaps xmmword [rsp + 0x50], xmm0
0x00001a99      0f294c2460     movaps xmmword [rsp + 0x60], xmm1
0x00001a9e      0f29542470     movaps xmmword [rsp + 0x70], xmm2
0x00001aa3      0f299c248000.  movaps xmmword [rsp + 0x80], xmm3
0x00001aab      0f29a4249000.  movaps xmmword [rsp + 0x90], xmm4
0x00001ab3      0f29ac24a000.  movaps xmmword [rsp + 0xa0], xmm5
0x00001abb      0f29b424b000.  movaps xmmword [rsp + 0xb0], xmm6
0x00001ac3      0f29bc24c000.  movaps xmmword [rsp + 0xc0], xmm7
0x00001acb      64488b042528.  mov rax, qword fs:[0x28]
0x00001ad4      4889442418     mov qword [rsp + 0x18], rax
0x00001ad9      31c0           xor eax, eax
0x00001adb      488d8424e000.  lea rax, [rsp + 0xe0]                   ; .//src:94
0x00001ae3      4889fa         mov rdx, rdi                            ; .//src:95
0x00001ae6      4889e1         mov rcx, rsp
0x00001ae9      31ff           xor edi, edi
0x00001aeb      31f6           xor esi, esi
0x00001aed      4889442408     mov qword [rsp + 8], rax                ; .//src:94
0x00001af2      488d442420     lea rax, [rsp + 0x20]
0x00001af7      c70424080000.  mov dword [rsp], 8
0x00001afe      c74424043000.  mov dword [rsp + 4], 0x30               ; '0'
                                                                       ; [0x30:4]=0
0x00001b06      4889442410     mov qword [rsp + 0x10], rax
0x00001b0b      e830390000     call sym.verror                         ; .//src:95
0x00001b10      bf02000000     mov edi, 2                              ; .//src:96
0x00001b15      e8a6faffff     call sym.imp.exit
0x00001b1a      660f1f440000   nop word [rax + rax]
;-- find_int:
0x00001b20      53             push rbx                                ; .//src:134
0x00001b21      4889fb         mov rbx, rdi
0x00001b24      e8e7faffff     call sym.imp.__ctype_b_loc              ; .//src:138
0x00001b29      4c8b00         mov r8, qword [rax]
0x00001b2c      4889d8         mov rax, rbx
0x00001b2f      0fb608         movzx ecx, byte [rax]
0x00001b32      41f6044801     test byte [r8 + rcx*2], 1
0x00001b37      4889ca         mov rdx, rcx
0x00001b3a      7574           jne 0x1bb0
0x00001b3c      80f92b         cmp cl, 0x2b                            ; .//src:141
0x00001b3f      747f           je 0x1bc0
0x00001b41      31c9           xor ecx, ecx                            ; .//src:149
0x00001b43      80fa2d         cmp dl, 0x2d
0x00001b46      0f94c1         sete cl
0x00001b49      4801c1         add rcx, rax
0x00001b4c      0fbe31         movsx esi, byte [rcx]                   ; .//src:152
0x00001b4f      488d5101       lea rdx, [rcx + 1]
0x00001b53      83ee30         sub esi, 0x30
0x00001b56      83fe09         cmp esi, 9
0x00001b59      776e           ja 0x1bc9
0x00001b5b      0fbe7101       movsx esi, byte [rcx + 1]               ; .//src:154
0x00001b5f      89f1           mov ecx, esi
0x00001b61      83ee30         sub esi, 0x30
0x00001b64      83fe09         cmp esi, 9
0x00001b67      7718           ja 0x1b81
0x00001b69      0f1f80000000.  nop dword [rax]
0x00001b70      4883c201       add rdx, 1                              ; .//src:155
0x00001b74      0fbe32         movsx esi, byte [rdx]                   ; .//src:154
0x00001b77      89f1           mov ecx, esi
0x00001b79      83ee30         sub esi, 0x30
0x00001b7c      83fe09         cmp esi, 9
0x00001b7f      76ef           jbe 0x1b70
0x00001b81      0fb6f1         movzx esi, cl                           ; .//src:156
0x00001b84      41f6047001     test byte [r8 + rsi*2], 1
0x00001b89      7416           je 0x1ba1
0x00001b8b      0f1f440000     nop dword [rax + rax]
0x00001b90      4883c201       add rdx, 1                              ; .//src:157
0x00001b94      0fb632         movzx esi, byte [rdx]                   ; .//src:156
0x00001b97      41f6047001     test byte [r8 + rsi*2], 1
0x00001b9c      4889f1         mov rcx, rsi
0x00001b9f      75ef           jne 0x1b90
0x00001ba1      84c9           test cl, cl                             ; .//src:158
0x00001ba3      7524           jne 0x1bc9
0x00001ba5      5b             pop rbx                                 ; .//src:163
0x00001ba6      c3             ret
0x00001ba7      660f1f840000.  nop word [rax + rax]
0x00001bb0      4883c001       add rax, 1                              ; .//src:138
0x00001bb4      e976ffffff     jmp 0x1b2f
0x00001bb9      0f1f80000000.  nop dword [rax]
0x00001bc0      488d4801       lea rcx, [rax + 1]                      ; .//src:143
0x00001bc4      4889c8         mov rax, rcx                            ; .//src:144
0x00001bc7      eb83           jmp 0x1b4c
0x00001bc9      4889df         mov rdi, rbx                            ; .//src:162
0x00001bcc      e8df340000     call sym.quote
0x00001bd1      488d35566700.  lea rsi, str.invalid_integer__s         ; 0x832e ; "invalid integer %s"
0x00001bd8      4889c3         mov rbx, rax
0x00001bdb      31ff           xor edi, edi
0x00001bdd      ba05000000     mov edx, 5
0x00001be2      e8f9f7ffff     call sym.imp.dcgettext
0x00001be7      4889de         mov rsi, rbx
0x00001bea      4889c7         mov rdi, rax
0x00001bed      31c0           xor eax, eax
0x00001bef      e87cfeffff     call sym.test_syntax_error
0x00001bf4      6690           nop
0x00001bf6      662e0f1f8400.  nop word cs:[rax + rax]
;-- beyond:
0x00001c00      486315b1a420.  movsxd rdx, dword [obj.argc]            ; .//src:125 ; [0x20c0b8:4]=0
0x00001c07      488b05a2a420.  mov rax, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00001c0e      53             push rbx
0x00001c0f      488b7cd0f8     mov rdi, qword [rax + rdx*8 - 8]        ; .//src:126
0x00001c14      e897340000     call sym.quote
0x00001c19      488d35216700.  lea rsi, str.missing_argument_after__s  ; 0x8341 ; "missing argument after %s"
0x00001c20      4889c3         mov rbx, rax
0x00001c23      31ff           xor edi, edi
0x00001c25      ba05000000     mov edx, 5
0x00001c2a      e8b1f7ffff     call sym.imp.dcgettext
0x00001c2f      4889de         mov rsi, rbx
0x00001c32      4889c7         mov rdi, rax
0x00001c35      31c0           xor eax, eax
0x00001c37      e834feffff     call sym.test_syntax_error
0x00001c3c      0f1f4000       nop dword [rax]
;-- unary_advance:
0x00001c40      8b0576a42000   mov eax, dword [obj.pos]                ; .//src:114 ; [0x20c0bc:4]=0
0x00001c46      8d5001         lea edx, [rax + 1]
0x00001c49      3b1569a42000   cmp edx, dword [obj.argc]               ; .//src:108 ; [0x20c0b8:4]=0
0x00001c4f      891567a42000   mov dword [obj.pos], edx                ; .//src:106 ; [0x20c0bc:4]=0
0x00001c55      7d0a           jge 0x1c61                              ; .//src:108
0x00001c57      83c002         add eax, 2                              ; .//src:116
0x00001c5a      89055ca42000   mov dword [obj.pos], eax                ; [0x20c0bc:4]=0
0x00001c60      c3             ret
0x00001c61      4883ec08       sub rsp, 8                              ; .//src:114
0x00001c65      e896ffffff     call sym.beyond                         ; .//src:109
0x00001c6a      660f1f440000   nop word [rax + rax]
;-- binary_operator:
0x00001c70      4157           push r15                                ; .//src:272
0x00001c72      4156           push r14
0x00001c74      89f8           mov eax, edi
0x00001c76      4155           push r13
0x00001c78      4154           push r12
0x00001c7a      55             push rbp
0x00001c7b      53             push rbx
0x00001c7c      4881ec780100.  sub rsp, 0x178
0x00001c83      8b0d33a42000   mov ecx, dword [obj.pos]                ; [0x20c0bc:4]=0
0x00001c89      64488b1c2528.  mov rbx, qword fs:[0x28]
0x00001c92      48899c246801.  mov qword [rsp + 0x168], rbx
0x00001c9a      31db           xor ebx, ebx
0x00001c9c      4084ff         test dil, dil                           ; .//src:278
0x00001c9f      8d5101         lea edx, [rcx + 1]
0x00001ca2      7409           je 0x1cad
0x00001ca4      891512a42000   mov dword [obj.pos], edx                ; .//src:106 ; [0x20c0bc:4]=0
0x00001caa      8d5102         lea edx, [rcx + 2]
0x00001cad      8b3d05a42000   mov edi, dword [obj.argc]               ; .//src:282 ; [0x20c0b8:4]=0
0x00001cb3      4531ed         xor r13d, r13d                          ; .//src:288
0x00001cb6      488b1df3a320.  mov rbx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00001cbd      4c63f2         movsxd r14, edx
0x00001cc0      8d4ffe         lea ecx, [rdi - 2]                      ; .//src:282
0x00001cc3      39d1           cmp ecx, edx
0x00001cc5      7e21           jle 0x1ce8
0x00001cc7      4a8b74f308     mov rsi, qword [rbx + r14*8 + 8]
0x00001ccc      488d3db36600.  lea rdi, [0x00008386]                   ; "-l"
0x00001cd3      b903000000     mov ecx, 3
0x00001cd8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001cda      0f97c1         seta cl
0x00001cdd      80d900         sbb cl, 0
0x00001ce0      84c9           test cl, cl
0x00001ce2      0f8498000000   je 0x1d80
0x00001ce8      4a8b34f3       mov rsi, qword [rbx + r14*8]            ; .//src:290
0x00001cec      4e8d3cf50000.  lea r15, [r14*8]
0x00001cf4      0fb616         movzx edx, byte [rsi]
0x00001cf7      80fa2d         cmp dl, 0x2d
0x00001cfa      0f84f0000000   je 0x1df0
0x00001d00      80fa3d         cmp dl, 0x3d
0x00001d03      0f848f000000   je 0x1d98
0x00001d09      488d3df46500.  lea rdi, [0x00008304]                   ; "!="
0x00001d10      b903000000     mov ecx, 3
0x00001d15      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001d17      0f97c0         seta al
0x00001d1a      1c00           sbb al, 0
0x00001d1c      84c0           test al, al
0x00001d1e      0f8579040000   jne 0x219d
0x00001d24      48630591a320.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00001d2b      4889c5         mov rbp, rax
0x00001d2e      4883c002       add rax, 2                              ; .//src:252
0x00001d32      488b34c3       mov rsi, qword [rbx + rax*8]
0x00001d36      488b7cc3f0     mov rdi, qword [rbx + rax*8 - 0x10]
0x00001d3b      e870f7ffff     call sym.imp.strcmp
0x00001d40      85c0           test eax, eax
0x00001d42      410f95c5       setne r13b
0x00001d46      83c503         add ebp, 3
0x00001d49      892d6da32000   mov dword [obj.pos], ebp                ; [0x20c0bc:4]=0
0x00001d4f      488b9c246801.  mov rbx, qword [rsp + 0x168]
0x00001d57      6448331c2528.  xor rbx, qword fs:[0x28]
0x00001d60      4489e8         mov eax, r13d
0x00001d63      0f852f040000   jne 0x2198
0x00001d69      4881c4780100.  add rsp, 0x178
0x00001d70      5b             pop rbx
0x00001d71      5d             pop rbp
0x00001d72      415c           pop r12
0x00001d74      415d           pop r13
0x00001d76      415e           pop r14                                 ; .//src:114
0x00001d78      415f           pop r15
0x00001d7a      c3             ret
0x00001d7b      0f1f440000     nop dword [rax + rax]
0x00001d80      891536a32000   mov dword [obj.pos], edx                ; [0x20c0bc:4]=0
0x00001d86      41bd01000000   mov r13d, 1
0x00001d8c      e957ffffff     jmp 0x1ce8
0x00001d91      0f1f80000000.  nop dword [rax]
0x00001d98      0fb64601       movzx eax, byte [rsi + 1]
0x00001d9c      84c0           test al, al
0x00001d9e      7418           je 0x1db8
0x00001da0      3c3d           cmp al, 0x3d
0x00001da2      0f8561ffffff   jne 0x1d09
0x00001da8      807e0200       cmp byte [rsi + 2], 0
0x00001dac      0f8557ffffff   jne 0x1d09
0x00001db2      660f1f440000   nop word [rax + rax]
0x00001db8      486305fda220.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00001dbf      4889c5         mov rbp, rax
0x00001dc2      4883c002       add rax, 2
0x00001dc6      488b34c3       mov rsi, qword [rbx + rax*8]            ; .//src:37
0x00001dca      488b7cc3f0     mov rdi, qword [rbx + rax*8 - 0x10]
0x00001dcf      e8dcf6ffff     call sym.imp.strcmp
0x00001dd4      85c0           test eax, eax
0x00001dd6      410f94c5       sete r13b
0x00001dda      83c503         add ebp, 3
0x00001ddd      892dd9a22000   mov dword [obj.pos], ebp                ; [0x20c0bc:4]=0
0x00001de3      e967ffffff     jmp 0x1d4f
0x00001de8      0f1f84000000.  nop dword [rax + rax]
0x00001df0      0fb65601       movzx edx, byte [rsi + 1]
0x00001df4      80fa6c         cmp dl, 0x6c
0x00001df7      0f846b010000   je 0x1f68                               ; .//src:94
0x00001dfd      80fa67         cmp dl, 0x67
0x00001e00      0f8462010000   je 0x1f68
0x00001e06      80fa65         cmp dl, 0x65
0x00001e09      0f84c1000000   je 0x1ed0
0x00001e0f      80fa6e         cmp dl, 0x6e
0x00001e12      0f84f8010000   je 0x2010                               ; .//src:100
0x00001e18      80fa6f         cmp dl, 0x6f
0x00001e1b      0f854f030000   jne 0x2170
0x00001e21      807e0274       cmp byte [rsi + 2], 0x74
0x00001e25      0f856f020000   jne 0x209a
0x00001e2b      807e0300       cmp byte [rsi + 3], 0
0x00001e2f      0f8565020000   jne 0x209a
0x00001e35      830580a22000.  add dword [obj.pos], 3                  ; [0x20c0bc:4]=0
0x00001e3c      4108c5         or r13b, al
0x00001e3f      0f855d030000   jne 0x21a2
0x00001e45      4c8db424a000.  lea r14, [rsp + 0xa0]
0x00001e4d      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00001e52      bf01000000     mov edi, 1
0x00001e57      4c89f2         mov rdx, r14
0x00001e5a      e891f6ffff     call sym.imp.__xstat
0x00001e5f      85c0           test eax, eax
0x00001e61      89c5           mov ebp, eax
0x00001e63      7515           jne 0x1e7a
0x00001e65      488b84240001.  mov rax, qword [rsp + 0x100]
0x00001e6d      4c8ba424f800.  mov r12, qword [rsp + 0xf8]
0x00001e75      4889442408     mov qword [rsp + 8], rax
0x00001e7a      4a8b743b08     mov rsi, qword [rbx + r15 + 8]
0x00001e7f      4c89f2         mov rdx, r14
0x00001e82      bf01000000     mov edi, 1
0x00001e87      e864f6ffff     call sym.imp.__xstat
0x00001e8c      85c0           test eax, eax
0x00001e8e      0f85bbfeffff   jne 0x1d4f
0x00001e94      488b9424f800.  mov rdx, qword [rsp + 0xf8]
0x00001e9c      85ed           test ebp, ebp
0x00001e9e      488bb4240001.  mov rsi, qword [rsp + 0x100]
0x00001ea6      410f95c5       setne r13b
0x00001eaa      4939d4         cmp r12, rdx                            ; .//src:-48
0x00001ead      0f9cc0         setl al
0x00001eb0      4108c5         or r13b, al
0x00001eb3      0f8596feffff   jne 0x1d4f
0x00001eb9      8b6c2408       mov ebp, dword [rsp + 8]
0x00001ebd      29f5           sub ebp, esi                            ; .//src:-45
0x00001ebf      c1ed1f         shr ebp, 0x1f
0x00001ec2      4939d4         cmp r12, rdx
0x00001ec5      440f4eed       cmovle r13d, ebp
0x00001ec9      e981feffff     jmp 0x1d4f
0x00001ece      6690           nop
0x00001ed0      0fb65602       movzx edx, byte [rsi + 2]
0x00001ed4      80fa71         cmp dl, 0x71
0x00001ed7      0f84b3010000   je 0x2090
0x00001edd      80fa66         cmp dl, 0x66
0x00001ee0      0f85b4010000   jne 0x209a
0x00001ee6      807e0300       cmp byte [rsi + 3], 0
0x00001eea      0f85aa010000   jne 0x209a
0x00001ef0      8305c5a12000.  add dword [obj.pos], 3                  ; [0x20c0bc:4]=0
0x00001ef7      4108c5         or r13b, al                             ; ../coreutils-8.31/src/st.c:-296
0x00001efa      0f85c1020000   jne 0x21c1
0x00001f00      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00001f05      488d542410     lea rdx, [rsp + 0x10]
0x00001f0a      bf01000000     mov edi, 1                              ; ../coreutils-8.31/src/st.c:-295
0x00001f0f      e8dcf5ffff     call sym.imp.__xstat
0x00001f14      85c0           test eax, eax
0x00001f16      0f8533feffff   jne 0x1d4f
0x00001f1c      4a8b743b08     mov rsi, qword [rbx + r15 + 8]
0x00001f21      488d9424a000.  lea rdx, [rsp + 0xa0]
0x00001f29      bf01000000     mov edi, 1
0x00001f2e      e8bdf5ffff     call sym.imp.__xstat
0x00001f33      85c0           test eax, eax
0x00001f35      0f8514feffff   jne 0x1d4f
0x00001f3b      488b8424a000.  mov rax, qword [rsp + 0xa0]
0x00001f43      4839442410     cmp qword [rsp + 0x10], rax
0x00001f48      0f8501feffff   jne 0x1d4f
0x00001f4e      488b8424a800.  mov rax, qword [rsp + 0xa8]
0x00001f56      4839442418     cmp qword [rsp + 0x18], rax
0x00001f5b      410f94c5       sete r13b
0x00001f5f      e9ebfdffff     jmp 0x1d4f
0x00001f64      0f1f4000       nop dword [rax]
0x00001f68      0fb64e02       movzx ecx, byte [rsi + 2]
0x00001f6c      80f965         cmp cl, 0x65
0x00001f6f      7409           je 0x1f7a                               ; ../coreutils-8.31/src/st.c:-334
0x00001f71      80f974         cmp cl, 0x74
0x00001f74      0f858cfeffff   jne 0x1e06
0x00001f7a      807e0300       cmp byte [rsi + 3], 0
0x00001f7e      0f855c010000   jne 0x20e0
0x00001f84      84c0           test al, al
0x00001f86      4a8b7c3bf8     mov rdi, qword [rbx + r15 - 8]
0x00001f8b      0f855f010000   jne 0x20f0
0x00001f91      e88afbffff     call sym.find_int
0x00001f96      4889c3         mov rbx, rax
0x00001f99      4584ed         test r13b, r13b                         ; ../coreutils-8.31/src/st.c:-330
0x00001f9c      488b050da120.  mov rax, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00001fa3      0f8467010000   je 0x2110
0x00001fa9      4a8b7c3810     mov rdi, qword [rax + r15 + 0x10]
0x00001fae      e84df4ffff     call sym.imp.strlen
0x00001fb3      488db4245001.  lea rsi, [rsp + 0x150]
0x00001fbb      4889c7         mov rdi, rax
0x00001fbe      e88d130000     call sym.umaxtostr                      ; ../coreutils-8.31/src/st.c:-329
0x00001fc3      4889c6         mov rsi, rax
0x00001fc6      4889df         mov rdi, rbx
0x00001fc9      e802310000     call sym.strintcmp
0x00001fce      488b15dba020.  mov rdx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00001fd5      4a8b0cf2       mov rcx, qword [rdx + r14*8]            ; ../coreutils-8.31/src/st.c:-319
0x00001fd9      80790265       cmp byte [rcx + 2], 0x65
0x00001fdd      0fb64901       movzx ecx, byte [rcx + 1]
0x00001fe1      0f94c2         sete dl
0x00001fe4      8305d1a02000.  add dword [obj.pos], 3                  ; [0x20c0bc:4]=0
0x00001feb      80f96c         cmp cl, 0x6c
0x00001fee      0f8464010000   je 0x2158
0x00001ff4      80f967         cmp cl, 0x67
0x00001ff7      0f848b010000   je 0x2188
0x00001ffd      85c0           test eax, eax
0x00001fff      0f95c0         setne al
0x00002002      38d0           cmp al, dl
0x00002004      410f94c5       sete r13b
0x00002008      e942fdffff     jmp 0x1d4f
0x0000200d      0f1f00         nop dword [rax]
0x00002010      0fb64e02       movzx ecx, byte [rsi + 2]
0x00002014      80f965         cmp cl, 0x65
0x00002017      7477           je 0x2090
0x00002019      80f974         cmp cl, 0x74
0x0000201c      757c           jne 0x209a
0x0000201e      807e0300       cmp byte [rsi + 3], 0
0x00002022      7576           jne 0x209a
0x00002024      830591a02000.  add dword [obj.pos], 3                  ; [0x20c0bc:4]=0
0x0000202b      4108c5         or r13b, al
0x0000202e      0f859b010000   jne 0x21cf
0x00002034      488dac24a000.  lea rbp, [rsp + 0xa0]
0x0000203c      4a8b743bf8     mov rsi, qword [rbx + r15 - 8]
0x00002041      bf01000000     mov edi, 1
0x00002046      4889ea         mov rdx, rbp
0x00002049      e8a2f4ffff     call sym.imp.__xstat
0x0000204e      85c0           test eax, eax
0x00002050      4a8d4c3b08     lea rcx, [rbx + r15 + 8]
0x00002055      7571           jne 0x20c8
0x00002057      488b31         mov rsi, qword [rcx]
0x0000205a      4889ea         mov rdx, rbp
0x0000205d      bf01000000     mov edi, 1
0x00002062      488b9c24f800.  mov rbx, qword [rsp + 0xf8]
0x0000206a      4c8ba4240001.  mov r12, qword [rsp + 0x100]
0x00002072      e879f4ffff     call sym.imp.__xstat
0x00002077      85c0           test eax, eax
0x00002079      0f84a1000000   je 0x2120
0x0000207f      41bd01000000   mov r13d, 1
0x00002085      e9c5fcffff     jmp 0x1d4f
0x0000208a      660f1f440000   nop word [rax + rax]
0x00002090      807e0300       cmp byte [rsi + 3], 0
0x00002094      0f84eafeffff   je 0x1f84
0x0000209a      4889f7         mov rdi, rsi
0x0000209d      e80e300000     call sym.quote
0x000020a2      488d35f76200.  lea rsi, str.s:_unknown_binary_operator ; 0x83a0 ; "%s: unknown binary operator"
0x000020a9      4889c3         mov rbx, rax
0x000020ac      31ff           xor edi, edi
0x000020ae      ba05000000     mov edx, 5
0x000020b3      e828f3ffff     call sym.imp.dcgettext
0x000020b8      4889de         mov rsi, rbx
0x000020bb      4889c7         mov rdi, rax
0x000020be      31c0           xor eax, eax
0x000020c0      e8abf9ffff     call sym.test_syntax_error
0x000020c5      0f1f00         nop dword [rax]
0x000020c8      488b31         mov rsi, qword [rcx]
0x000020cb      4889ea         mov rdx, rbp
0x000020ce      bf01000000     mov edi, 1
0x000020d3      e818f4ffff     call sym.imp.__xstat
0x000020d8      e972fcffff     jmp 0x1d4f
0x000020dd      0f1f00         nop dword [rax]
0x000020e0      80fa6e         cmp dl, 0x6e
0x000020e3      0f852ffdffff   jne 0x1e18
0x000020e9      e92bffffff     jmp 0x2019
0x000020ee      6690           nop
0x000020f0      e80bf3ffff     call sym.imp.strlen
0x000020f5      488db4243001.  lea rsi, [rsp + 0x130]
0x000020fd      4889c7         mov rdi, rax
0x00002100      e84b120000     call sym.umaxtostr
0x00002105      4889c3         mov rbx, rax
0x00002108      e98cfeffff     jmp 0x1f99
0x0000210d      0f1f00         nop dword [rax]
0x00002110      4a8b7c3808     mov rdi, qword [rax + r15 + 8]
0x00002115      e806faffff     call sym.find_int
0x0000211a      e9a4feffff     jmp 0x1fc3
0x0000211f      90             nop
0x00002120      483b9c24f800.  cmp rbx, qword [rsp + 0xf8]
0x00002128      488b84240001.  mov rax, qword [rsp + 0x100]
0x00002130      0f8c19fcffff   jl 0x1d4f
0x00002136      41bd01000000   mov r13d, 1
0x0000213c      0f8f0dfcffff   jg 0x1d4f
0x00002142      4129c4         sub r12d, eax
0x00002145      4585e4         test r12d, r12d
0x00002148      410f9fc5       setg r13b
0x0000214c      e9fefbffff     jmp 0x1d4f
0x00002151      0f1f80000000.  nop dword [rax]
0x00002158      0fb6d2         movzx edx, dl
0x0000215b      39c2           cmp edx, eax
0x0000215d      410f9fc5       setg r13b
0x00002161      e9e9fbffff     jmp 0x1d4f
0x00002166      662e0f1f8400.  nop word cs:[rax + rax]
0x00002170      80fa65         cmp dl, 0x65
0x00002173      0f8521ffffff   jne 0x209a
0x00002179      0fb65602       movzx edx, byte [rsi + 2]
0x0000217d      e95bfdffff     jmp 0x1edd
0x00002182      660f1f440000   nop word [rax + rax]
0x00002188      0fb6d2         movzx edx, dl
0x0000218b      f7da           neg edx
0x0000218d      39c2           cmp edx, eax
0x0000218f      410f9cc5       setl r13b
0x00002193      e9b7fbffff     jmp 0x1d4f
0x00002198      e883f2ffff     call sym.imp.__stack_chk_fail
0x0000219d      e89ef1ffff     call sym.imp.abort
0x000021a2      488d35e06100.  lea rsi, str.ot_does_not_accept__l      ; 0x8389 ; "-ot does not accept -l"
0x000021a9      ba05000000     mov edx, 5
0x000021ae      31ff           xor edi, edi
0x000021b0      e82bf2ffff     call sym.imp.dcgettext
0x000021b5      31f6           xor esi, esi
0x000021b7      4889c7         mov rdi, rax
0x000021ba      31c0           xor eax, eax
0x000021bc      e8aff8ffff     call sym.test_syntax_error
0x000021c1      ba05000000     mov edx, 5
0x000021c6      488d35a56100.  lea rsi, str.ef_does_not_accept__l      ; 0x8372 ; "-ef does not accept -l"
0x000021cd      ebdf           jmp 0x21ae
0x000021cf      ba05000000     mov edx, 5
0x000021d4      488d35806100.  lea rsi, str.nt_does_not_accept__l      ; 0x835b ; "-nt does not accept -l"
0x000021db      ebd1           jmp 0x21ae
0x000021dd      0f1f00         nop dword [rax]
;-- unary_operator:
0x000021e0      55             push rbp
0x000021e1      53             push rbx
0x000021e2      4881eca80000.  sub rsp, 0xa8
0x000021e9      488b1dc09e20.  mov rbx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x000021f0      64488b042528.  mov rax, qword fs:[0x28]
0x000021f9      488984249800.  mov qword [rsp + 0x98], rax
0x00002201      31c0           xor eax, eax
0x00002203      486305b29e20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000220a      488b3cc3       mov rdi, qword [rbx + rax*8]
0x0000220e      0fb64701       movzx eax, byte [rdi + 1]
0x00002212      83e847         sub eax, 0x47
0x00002215      3c33           cmp al, 0x33
0x00002217      0f8749050000   ja 0x2766
0x0000221d      488d15cc6200.  lea rdx, [0x000084f0]
0x00002224      0fb6c0         movzx eax, al
0x00002227      48630482       movsxd rax, dword [rdx + rax*4]
0x0000222b      4801d0         add rax, rdx
0x0000222e      ffe0           jmp rax
0x00002230      e80bfaffff     call sym.unary_advance
0x00002235      486305809e20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000223c      488b44c3f8     mov rax, qword [rbx + rax*8 - 8]
0x00002241      803800         cmp byte [rax], 0
0x00002244      0f94c0         sete al
0x00002247      660f1f840000.  nop word [rax + rax]
0x00002250      488b8c249800.  mov rcx, qword [rsp + 0x98]
0x00002258      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002261      0f8545050000   jne 0x27ac
0x00002267      4881c4a80000.  add rsp, 0xa8
0x0000226e      5b             pop rbx
0x0000226f      5d             pop rbp
0x00002270      c3             ret
0x00002271      0f1f80000000.  nop dword [rax]
0x00002278      e8c3f9ffff     call sym.unary_advance
0x0000227d      486305389e20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00002284      be01000000     mov esi, 1
0x00002289      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x0000228e      e80df3ffff     call sym.imp.euidaccess
0x00002293      85c0           test eax, eax
0x00002295      0f94c0         sete al
0x00002298      ebb6           jmp 0x2250
0x0000229a      660f1f440000   nop word [rax + rax]
0x000022a0      e89bf9ffff     call sym.unary_advance
0x000022a5      486305109e20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000022ac      4889e2         mov rdx, rsp
0x000022af      bf01000000     mov edi, 1
0x000022b4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000022b9      e832f2ffff     call sym.imp.__xstat
0x000022be      89c2           mov edx, eax
0x000022c0      31c0           xor eax, eax
0x000022c2      85d2           test edx, edx
0x000022c4      758a           jne 0x2250
0x000022c6      8b442418       mov eax, dword [rsp + 0x18]
0x000022ca      c1e80b         shr eax, 0xb
0x000022cd      83e001         and eax, 1
0x000022d0      e97bffffff     jmp 0x2250
0x000022d5      0f1f00         nop dword [rax]
0x000022d8      e863f9ffff     call sym.unary_advance
0x000022dd      486305d89d20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000022e4      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x000022e9      e832f8ffff     call sym.find_int
0x000022ee      4889c5         mov rbp, rax
0x000022f1      e85af0ffff     call sym.imp.__errno_location
0x000022f6      31f6           xor esi, esi
0x000022f8      4889c3         mov rbx, rax
0x000022fb      4889ef         mov rdi, rbp
0x000022fe      c70000000000   mov dword [rax], 0
0x00002304      ba0a000000     mov edx, 0xa
0x00002309      e8b2f1ffff     call sym.imp.strtol
0x0000230e      4889c7         mov rdi, rax
0x00002311      31c0           xor eax, eax
0x00002313      833b22         cmp dword [rbx], 0x22
0x00002316      0f8434ffffff   je 0x2250
0x0000231c      4881ffffffff.  cmp rdi, 0x7fffffff
0x00002323      0f8727ffffff   ja 0x2250
0x00002329      e872f0ffff     call sym.imp.isatty
0x0000232e      85c0           test eax, eax
0x00002330      0f95c0         setne al
0x00002333      e918ffffff     jmp 0x2250
0x00002338      0f1f84000000.  nop dword [rax + rax]
0x00002340      e8fbf8ffff     call sym.unary_advance
0x00002345      486305709d20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000234c      be02000000     mov esi, 2
0x00002351      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x00002356      e845f2ffff     call sym.imp.euidaccess
0x0000235b      85c0           test eax, eax
0x0000235d      0f94c0         sete al
0x00002360      e9ebfeffff     jmp 0x2250
0x00002365      0f1f00         nop dword [rax]
0x00002368      e8d3f8ffff     call sym.unary_advance
0x0000236d      486305489d20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00002374      4889e2         mov rdx, rsp
0x00002377      bf01000000     mov edi, 1
0x0000237c      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002381      e86af1ffff     call sym.imp.__xstat
0x00002386      89c2           mov edx, eax
0x00002388      31c0           xor eax, eax
0x0000238a      85d2           test edx, edx
0x0000238c      0f85befeffff   jne 0x2250
0x00002392      48837c243000   cmp qword [rsp + 0x30], 0
0x00002398      0f9fc0         setg al
0x0000239b      e9b0feffff     jmp 0x2250
0x000023a0      e89bf8ffff     call sym.unary_advance
0x000023a5      486305109d20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000023ac      be04000000     mov esi, 4
0x000023b1      488b7cc3f8     mov rdi, qword [rbx + rax*8 - 8]
0x000023b6      e8e5f1ffff     call sym.imp.euidaccess
0x000023bb      85c0           test eax, eax
0x000023bd      0f94c0         sete al
0x000023c0      e98bfeffff     jmp 0x2250
0x000023c5      0f1f00         nop dword [rax]
0x000023c8      e873f8ffff     call sym.unary_advance
0x000023cd      486305e89c20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000023d4      4889e2         mov rdx, rsp
0x000023d7      bf01000000     mov edi, 1
0x000023dc      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000023e1      e80af1ffff     call sym.imp.__xstat
0x000023e6      89c2           mov edx, eax
0x000023e8      31c0           xor eax, eax
0x000023ea      85d2           test edx, edx
0x000023ec      0f855efeffff   jne 0x2250
0x000023f2      8b442418       mov eax, dword [rsp + 0x18]
0x000023f6      2500f00000     and eax, 0xf000
0x000023fb      3d00100000     cmp eax, 0x1000
0x00002400      0f94c0         sete al
0x00002403      e948feffff     jmp 0x2250
0x00002408      0f1f84000000.  nop dword [rax + rax]
0x00002410      e82bf8ffff     call sym.unary_advance
0x00002415      486305a09c20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000241c      488b44c3f8     mov rax, qword [rbx + rax*8 - 8]
0x00002421      803800         cmp byte [rax], 0
0x00002424      0f95c0         setne al
0x00002427      e924feffff     jmp 0x2250
0x0000242c      0f1f4000       nop dword [rax]
0x00002430      e80bf8ffff     call sym.unary_advance
0x00002435      486305809c20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000243c      4889e2         mov rdx, rsp
0x0000243f      bf01000000     mov edi, 1
0x00002444      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002449      e8a2f0ffff     call sym.imp.__xstat
0x0000244e      89c2           mov edx, eax
0x00002450      31c0           xor eax, eax
0x00002452      85d2           test edx, edx
0x00002454      0f85f6fdffff   jne 0x2250
0x0000245a      8b442418       mov eax, dword [rsp + 0x18]
0x0000245e      c1e809         shr eax, 9
0x00002461      83e001         and eax, 1
0x00002464      e9e7fdffff     jmp 0x2250
0x00002469      0f1f80000000.  nop dword [rax]
0x00002470      e8cbf7ffff     call sym.unary_advance
0x00002475      486305409c20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000247c      4889e2         mov rdx, rsp
0x0000247f      bf01000000     mov edi, 1
0x00002484      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002489      e862f0ffff     call sym.imp.__xstat
0x0000248e      89c2           mov edx, eax
0x00002490      31c0           xor eax, eax
0x00002492      85d2           test edx, edx
0x00002494      0f85b6fdffff   jne 0x2250
0x0000249a      8b442418       mov eax, dword [rsp + 0x18]
0x0000249e      c1e80a         shr eax, 0xa
0x000024a1      83e001         and eax, 1
0x000024a4      e9a7fdffff     jmp 0x2250
0x000024a9      0f1f80000000.  nop dword [rax]
0x000024b0      e88bf7ffff     call sym.unary_advance
0x000024b5      486305009c20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000024bc      4889e2         mov rdx, rsp
0x000024bf      bf01000000     mov edi, 1
0x000024c4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000024c9      e822f0ffff     call sym.imp.__xstat
0x000024ce      89c2           mov edx, eax
0x000024d0      31c0           xor eax, eax
0x000024d2      85d2           test edx, edx
0x000024d4      0f8576fdffff   jne 0x2250
0x000024da      8b442418       mov eax, dword [rsp + 0x18]
0x000024de      2500f00000     and eax, 0xf000
0x000024e3      3d00800000     cmp eax, 0x8000
0x000024e8      0f94c0         sete al
0x000024eb      e960fdffff     jmp 0x2250
0x000024f0      e84bf7ffff     call sym.unary_advance
0x000024f5      486305c09b20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000024fc      4889e2         mov rdx, rsp
0x000024ff      bf01000000     mov edi, 1
0x00002504      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002509      e8e2efffff     call sym.imp.__xstat
0x0000250e      85c0           test eax, eax
0x00002510      0f94c0         sete al
0x00002513      e938fdffff     jmp 0x2250
0x00002518      0f1f84000000.  nop dword [rax + rax]
0x00002520      e81bf7ffff     call sym.unary_advance
0x00002525      486305909b20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000252c      4889e2         mov rdx, rsp
0x0000252f      bf01000000     mov edi, 1
0x00002534      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002539      e8b2efffff     call sym.imp.__xstat
0x0000253e      89c2           mov edx, eax
0x00002540      31c0           xor eax, eax
0x00002542      85d2           test edx, edx
0x00002544      0f8506fdffff   jne 0x2250
0x0000254a      8b442418       mov eax, dword [rsp + 0x18]
0x0000254e      2500f00000     and eax, 0xf000
0x00002553      3d00400000     cmp eax, 0x4000
0x00002558      0f94c0         sete al
0x0000255b      e9f0fcffff     jmp 0x2250
0x00002560      e8dbf6ffff     call sym.unary_advance
0x00002565      486305509b20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000256c      4889e2         mov rdx, rsp
0x0000256f      bf01000000     mov edi, 1
0x00002574      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002579      e872efffff     call sym.imp.__xstat
0x0000257e      89c2           mov edx, eax
0x00002580      31c0           xor eax, eax
0x00002582      85d2           test edx, edx
0x00002584      0f85c6fcffff   jne 0x2250
0x0000258a      8b442418       mov eax, dword [rsp + 0x18]
0x0000258e      2500f00000     and eax, 0xf000
0x00002593      3d00200000     cmp eax, 0x2000
0x00002598      0f94c0         sete al
0x0000259b      e9b0fcffff     jmp 0x2250
0x000025a0      e89bf6ffff     call sym.unary_advance
0x000025a5      486305109b20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000025ac      4889e2         mov rdx, rsp
0x000025af      bf01000000     mov edi, 1
0x000025b4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000025b9      e832efffff     call sym.imp.__xstat
0x000025be      89c2           mov edx, eax
0x000025c0      31c0           xor eax, eax
0x000025c2      85d2           test edx, edx
0x000025c4      0f8586fcffff   jne 0x2250
0x000025ca      8b442418       mov eax, dword [rsp + 0x18]
0x000025ce      2500f00000     and eax, 0xf000
0x000025d3      3d00600000     cmp eax, 0x6000
0x000025d8      0f94c0         sete al
0x000025db      e970fcffff     jmp 0x2250
0x000025e0      e85bf6ffff     call sym.unary_advance
0x000025e5      486305d09a20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000025ec      4889e2         mov rdx, rsp
0x000025ef      bf01000000     mov edi, 1
0x000025f4      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000025f9      e8f2eeffff     call sym.imp.__xstat
0x000025fe      89c2           mov edx, eax
0x00002600      31c0           xor eax, eax
0x00002602      85d2           test edx, edx
0x00002604      0f8546fcffff   jne 0x2250
0x0000260a      8b442418       mov eax, dword [rsp + 0x18]
0x0000260e      2500f00000     and eax, 0xf000
0x00002613      3d00c00000     cmp eax, 0xc000
0x00002618      0f94c0         sete al
0x0000261b      e930fcffff     jmp 0x2250
0x00002620      e81bf6ffff     call sym.unary_advance
0x00002625      486305909a20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000262c      4889e2         mov rdx, rsp
0x0000262f      bf01000000     mov edi, 1
0x00002634      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002639      e8b2eeffff     call sym.imp.__xstat
0x0000263e      85c0           test eax, eax
0x00002640      0f84fa000000   je 0x2740
0x00002646      31c0           xor eax, eax
0x00002648      e903fcffff     jmp 0x2250
0x0000264d      0f1f00         nop dword [rax]
0x00002650      e8ebf5ffff     call sym.unary_advance
0x00002655      486305609a20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x0000265c      4889e2         mov rdx, rsp
0x0000265f      bf01000000     mov edi, 1
0x00002664      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002669      e882eeffff     call sym.imp.__xstat
0x0000266e      85c0           test eax, eax
0x00002670      75d4           jne 0x2646
0x00002672      31c0           xor eax, eax
0x00002674      488b742458     mov rsi, qword [rsp + 0x58]
0x00002679      4839742448     cmp qword [rsp + 0x48], rsi
0x0000267e      488b4c2450     mov rcx, qword [rsp + 0x50]
0x00002683      488b542460     mov rdx, qword [rsp + 0x60]
0x00002688      0f8fc2fbffff   jg 0x2250
0x0000268e      b801000000     mov eax, 1
0x00002693      0f8cb7fbffff   jl 0x2250
0x00002699      29ca           sub edx, ecx
0x0000269b      85d2           test edx, edx
0x0000269d      0f9fc0         setg al
0x000026a0      e9abfbffff     jmp 0x2250
0x000026a5      0f1f00         nop dword [rax]
0x000026a8      e893f5ffff     call sym.unary_advance
0x000026ad      486305089a20.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000026b4      4889e2         mov rdx, rsp
0x000026b7      bf01000000     mov edi, 1
0x000026bc      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x000026c1      e84aedffff     call sym.imp.__lxstat
0x000026c6      89c2           mov edx, eax
0x000026c8      31c0           xor eax, eax
0x000026ca      85d2           test edx, edx
0x000026cc      0f857efbffff   jne 0x2250
0x000026d2      8b442418       mov eax, dword [rsp + 0x18]
0x000026d6      2500f00000     and eax, 0xf000
0x000026db      3d00a00000     cmp eax, 0xa000
0x000026e0      0f94c0         sete al
0x000026e3      e968fbffff     jmp 0x2250
0x000026e8      0f1f84000000.  nop dword [rax + rax]
0x000026f0      e84bf5ffff     call sym.unary_advance
0x000026f5      486305c09920.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000026fc      4889e2         mov rdx, rsp
0x000026ff      bf01000000     mov edi, 1
0x00002704      488b74c3f8     mov rsi, qword [rbx + rax*8 - 8]
0x00002709      e8e2edffff     call sym.imp.__xstat
0x0000270e      85c0           test eax, eax
0x00002710      0f8530ffffff   jne 0x2646
0x00002716      e835ecffff     call sym.imp.__errno_location
0x0000271b      c70000000000   mov dword [rax], 0
0x00002721      4889c3         mov rbx, rax
0x00002724      e807eeffff     call sym.imp.getegid
0x00002729      83f8ff         cmp eax, 0xffffffff
0x0000272c      89c2           mov edx, eax
0x0000272e      746e           je 0x279e
0x00002730      39542420       cmp dword [rsp + 0x20], edx
0x00002734      0f94c0         sete al
0x00002737      e914fbffff     jmp 0x2250
0x0000273c      0f1f4000       nop dword [rax]
0x00002740      e80becffff     call sym.imp.__errno_location
0x00002745      c70000000000   mov dword [rax], 0
0x0000274b      4889c3         mov rbx, rax
0x0000274e      e81dedffff     call sym.imp.geteuid
0x00002753      83f8ff         cmp eax, 0xffffffff
0x00002756      89c2           mov edx, eax
0x00002758      7436           je 0x2790
0x0000275a      3954241c       cmp dword [rsp + 0x1c], edx
0x0000275e      0f94c0         sete al
0x00002761      e9eafaffff     jmp 0x2250
0x00002766      e845290000     call sym.quote
0x0000276b      488d354a5c00.  lea rsi, str.s:_unary_operator_expected ; 0x83bc ; "%s: unary operator expected"
0x00002772      4889c3         mov rbx, rax
0x00002775      31ff           xor edi, edi
0x00002777      ba05000000     mov edx, 5
0x0000277c      e85fecffff     call sym.imp.dcgettext
0x00002781      4889de         mov rsi, rbx
0x00002784      4889c7         mov rdi, rax
0x00002787      31c0           xor eax, eax
0x00002789      e8e2f2ffff     call sym.test_syntax_error
0x0000278e      6690           nop
0x00002790      8b33           mov esi, dword [rbx]
0x00002792      31c0           xor eax, eax
0x00002794      85f6           test esi, esi
0x00002796      0f85b4faffff   jne 0x2250
0x0000279c      ebbc           jmp 0x275a
0x0000279e      8b0b           mov ecx, dword [rbx]
0x000027a0      31c0           xor eax, eax
0x000027a2      85c9           test ecx, ecx
0x000027a4      0f85a6faffff   jne 0x2250
0x000027aa      eb84           jmp 0x2730
0x000027ac      e86fecffff     call sym.imp.__stack_chk_fail
0x000027b1      0f1f440000     nop dword [rax + rax]
0x000027b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- two_arguments:
0x000027c0      486305f59820.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000027c7      4c8b0de29820.  mov r9, qword [obj.argv]                ; [0x20c0b0:8]=0
0x000027ce      488d3d035c00.  lea rdi, [0x000083d8]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365\u2074\u6e61\u2f64\u726f\u5b20\u0a00\u7325\u6f20\u6c6e\u6e69\u2065\u6568\u706c\u203a\u253c\u3e73\n\u4e47\u2055\u6f63\u6572\u7475\u6c69s\u6e65"
0x000027d5      b902000000     mov ecx, 2
0x000027da      498b14c1       mov rdx, qword [r9 + rax*8]
0x000027de      4989c0         mov r8, rax
0x000027e1      4c8d14c50000.  lea r10, [rax*8]
0x000027e9      4889d6         mov rsi, rdx
0x000027ec      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000027ee      0f97c0         seta al
0x000027f1      1c00           sbb al, 0
0x000027f3      84c0           test al, al
0x000027f5      7419           je 0x2810
0x000027f7      803a2d         cmp byte [rdx], 0x2d
0x000027fa      752b           jne 0x2827
0x000027fc      807a0100       cmp byte [rdx + 1], 0
0x00002800      7425           je 0x2827
0x00002802      807a0200       cmp byte [rdx + 2], 0
0x00002806      751f           jne 0x2827
0x00002808      e9d3f9ffff     jmp sym.unary_operator
0x0000280d      0f1f00         nop dword [rax]
0x00002810      4b8b441108     mov rax, qword [r9 + r10 + 8]
0x00002815      4183c002       add r8d, 2
0x00002819      4489059c9820.  mov dword [obj.pos], r8d                ; [0x20c0bc:4]=0
0x00002820      803800         cmp byte [rax], 0
0x00002823      0f94c0         sete al
0x00002826      c3             ret
0x00002827      4883ec08       sub rsp, 8
0x0000282b      e8d0f3ffff     call sym.beyond
;-- posixtest:
0x00002830      4883ec08       sub rsp, 8
0x00002834      83ff02         cmp edi, 2
0x00002837      0f84cb000000   je 0x2908
0x0000283d      0f8e7d000000   jle 0x28c0
0x00002843      83ff03         cmp edi, 3
0x00002846      7468           je 0x28b0
0x00002848      83ff04         cmp edi, 4
0x0000284b      0f859f000000   jne 0x28f0
0x00002851      486315649820.  movsxd rdx, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00002858      4c8b0d519820.  mov r9, qword [obj.argv]                ; [0x20c0b0:8]=0
0x0000285f      488d3d725b00.  lea rdi, [0x000083d8]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365\u2074\u6e61\u2f64\u726f\u5b20\u0a00\u7325\u6f20\u6c6e\u6e69\u2065\u6568\u706c\u203a\u253c\u3e73\n\u4e47\u2055\u6f63\u6572\u7475\u6c69s\u6e65"
0x00002866      b902000000     mov ecx, 2
0x0000286b      4d8b04d1       mov r8, qword [r9 + rdx*8]
0x0000286f      4889d0         mov rax, rdx
0x00002872      4c8d14d50000.  lea r10, [rdx*8]
0x0000287a      4c89c6         mov rsi, r8
0x0000287d      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000287f      0f97c2         seta dl
0x00002882      80da00         sbb dl, 0
0x00002885      84d2           test dl, dl
0x00002887      0f858b000000   jne 0x2918
0x0000288d      83c001         add eax, 1
0x00002890      3b0522982000   cmp eax, dword [obj.argc]               ; [0x20c0b8:4]=0
0x00002896      890520982000   mov dword [obj.pos], eax                ; [0x20c0bc:4]=0
0x0000289c      0f8dc8000000   jge 0x296a
0x000028a2      e8a9040000     call sym.three_arguments
0x000028a7      4883c408       add rsp, 8
0x000028ab      83f001         xor eax, 1
0x000028ae      c3             ret
0x000028af      90             nop
0x000028b0      4883c408       add rsp, 8
0x000028b4      e997040000     jmp sym.three_arguments
0x000028b9      0f1f80000000.  nop dword [rax]
0x000028c0      83ff01         cmp edi, 1
0x000028c3      752b           jne 0x28f0
0x000028c5      486305f09720.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x000028cc      8d5001         lea edx, [rax + 1]
0x000028cf      8915e7972000   mov dword [obj.pos], edx                ; [0x20c0bc:4]=0
0x000028d5      488b15d49720.  mov rdx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x000028dc      488b04c2       mov rax, qword [rdx + rax*8]
0x000028e0      803800         cmp byte [rax], 0
0x000028e3      0f95c0         setne al
0x000028e6      4883c408       add rsp, 8
0x000028ea      c3             ret
0x000028eb      0f1f440000     nop dword [rax + rax]
0x000028f0      8b05c6972000   mov eax, dword [obj.pos]                ; [0x20c0bc:4]=0
0x000028f6      3b05bc972000   cmp eax, dword [obj.argc]               ; [0x20c0b8:4]=0
0x000028fc      7d6c           jge 0x296a
0x000028fe      4883c408       add rsp, 8
0x00002902      eb6c           jmp sym.or
0x00002904      0f1f4000       nop dword [rax]
0x00002908      4883c408       add rsp, 8
0x0000290c      e9affeffff     jmp sym.two_arguments
0x00002911      0f1f80000000.  nop dword [rax]
0x00002918      488d3dbb5a00.  lea rdi, [0x000083da]                   ; "("
0x0000291f      b902000000     mov ecx, 2
0x00002924      4c89c6         mov rsi, r8
0x00002927      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002929      0f97c2         seta dl
0x0000292c      80da00         sbb dl, 0
0x0000292f      84d2           test dl, dl
0x00002931      75c3           jne 0x28f6
0x00002933      4b8b741118     mov rsi, qword [r9 + r10 + 0x18]
0x00002938      488d3d5e6f00.  lea rdi, [0x0000989d]                   ; ")"
0x0000293f      b902000000     mov ecx, 2
0x00002944      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002946      0f97c2         seta dl
0x00002949      80da00         sbb dl, 0
0x0000294c      84d2           test dl, dl
0x0000294e      75a6           jne 0x28f6
0x00002950      83c001         add eax, 1
0x00002953      890563972000   mov dword [obj.pos], eax                ; [0x20c0bc:4]=0
0x00002959      e862feffff     call sym.two_arguments
0x0000295e      830557972000.  add dword [obj.pos], 1                  ; [0x20c0bc:4]=0
0x00002965      e97cffffff     jmp 0x28e6
0x0000296a      e891f2ffff     call sym.beyond
0x0000296f      90             nop
;-- or:
0x00002970      4157           push r15
0x00002972      4156           push r14
0x00002974      4155           push r13
0x00002976      4154           push r12
0x00002978      55             push rbp
0x00002979      53             push rbx
0x0000297a      4883ec18       sub rsp, 0x18
0x0000297e      448b1d379720.  mov r11d, dword [obj.pos]               ; [0x20c0bc:4]=0
0x00002985      448b252c9720.  mov r12d, dword [obj.argc]              ; [0x20c0b8:4]=0
0x0000298c      c644240f00     mov byte [rsp + 0xf], 0
0x00002991      0f1f80000000.  nop dword [rax]
0x00002998      4539e3         cmp r11d, r12d
0x0000299b      bb01000000     mov ebx, 1
0x000029a0      488d2d575a00.  lea rbp, [0x000083fe]                   ; "-a"
0x000029a7      0f8db1010000   jge 0x2b5e
0x000029ad      0f1f00         nop dword [rax]
0x000029b0      4c8b3df99620.  mov r15, qword [obj.argv]               ; [0x20c0b0:8]=0
0x000029b7      4d63cb         movsxd r9, r11d
0x000029ba      4f8b14cf       mov r10, qword [r15 + r9*8]
0x000029be      450fb62a       movzx r13d, byte [r10]
0x000029c2      4180fd21       cmp r13b, 0x21
0x000029c6      0f85db020000   jne 0x2ca7
0x000029cc      41807a0100     cmp byte [r10 + 1], 0
0x000029d1      0f85d8020000   jne 0x2caf
0x000029d7      458d4b01       lea r9d, [r11 + 1]
0x000029db      4539e1         cmp r9d, r12d
0x000029de      44890dd79620.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x000029e5      0f8d73010000   jge 0x2b5e
0x000029eb      418d4424fe     lea eax, [r12 - 2]
0x000029f0      4d63c9         movsxd r9, r9d
0x000029f3      31c9           xor ecx, ecx
0x000029f5      41be01000000   mov r14d, 1
0x000029fb      4429d8         sub eax, r11d
0x000029fe      498d740101     lea rsi, [r9 + rax + 1]
0x00002a03      eb28           jmp 0x2a2d
0x00002a05      0f1f00         nop dword [rax]
0x00002a08      41807a0100     cmp byte [r10 + 1], 0
0x00002a0d      0f8555010000   jne 0x2b68
0x00002a13      418d4101       lea eax, [r9 + 1]
0x00002a17      4983c101       add r9, 1
0x00002a1b      4939f1         cmp r9, rsi
0x00002a1e      0f84aa020000   je 0x2cce
0x00002a24      4183f601       xor r14d, 1
0x00002a28      b901000000     mov ecx, 1
0x00002a2d      4f8b14cf       mov r10, qword [r15 + r9*8]
0x00002a31      4589cb         mov r11d, r9d
0x00002a34      410fb602       movzx eax, byte [r10]
0x00002a38      3c21           cmp al, 0x21
0x00002a3a      74cc           je 0x2a08
0x00002a3c      84c9           test cl, cl
0x00002a3e      0f857e020000   jne 0x2cc2
0x00002a44      4189c5         mov r13d, eax
0x00002a47      4180fd28       cmp r13b, 0x28
0x00002a4b      0f8527010000   jne 0x2b78
0x00002a51      41807a0100     cmp byte [r10 + 1], 0
0x00002a56      0f851c010000   jne 0x2b78
0x00002a5c      458d4b01       lea r9d, [r11 + 1]
0x00002a60      4539e1         cmp r9d, r12d
0x00002a63      44890d529620.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x00002a6a      0f8dee000000   jge 0x2b5e
0x00002a70      418d4302       lea eax, [r11 + 2]
0x00002a74      4439e0         cmp eax, r12d
0x00002a77      0f8d3a020000   jge 0x2cb7
0x00002a7d      4898           cdqe
0x00002a7f      41b801000000   mov r8d, 1
0x00002a85      4d8d14c7       lea r10, [r15 + rax*8]
0x00002a89      418d4424ff     lea eax, [r12 - 1]
0x00002a8e      4429d8         sub eax, r11d
0x00002a91      4189c3         mov r11d, eax
0x00002a94      498b32         mov rsi, qword [r10]
0x00002a97      488d3dff6d00.  lea rdi, [0x0000989d]                   ; ")"
0x00002a9e      b902000000     mov ecx, 2
0x00002aa3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002aa5      0f97c0         seta al
0x00002aa8      1c00           sbb al, 0
0x00002aaa      84c0           test al, al
0x00002aac      741a           je 0x2ac8
0x00002aae      4183f804       cmp r8d, 4
0x00002ab2      0f84a8010000   je 0x2c60
0x00002ab8      4183c001       add r8d, 1
0x00002abc      4983c208       add r10, 8
0x00002ac0      4539c3         cmp r11d, r8d
0x00002ac3      75cf           jne 0x2a94
0x00002ac5      0f1f00         nop dword [rax]
0x00002ac8      4489c7         mov edi, r8d
0x00002acb      e860fdffff     call sym.posixtest
0x00002ad0      48630de59520.  movsxd rcx, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00002ad7      488b15d29520.  mov rdx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00002ade      488b34ca       mov rsi, qword [rdx + rcx*8]
0x00002ae2      4989cb         mov r11, rcx
0x00002ae5      4885f6         test rsi, rsi
0x00002ae8      0f842c020000   je 0x2d1a
0x00002aee      803e29         cmp byte [rsi], 0x29
0x00002af1      0f85e2010000   jne 0x2cd9
0x00002af7      807e0100       cmp byte [rsi + 1], 0
0x00002afb      0f85d8010000   jne 0x2cd9
0x00002b01      448b25b09520.  mov r12d, dword [obj.argc]              ; [0x20c0b8:4]=0
0x00002b08      4183c301       add r11d, 1
0x00002b0c      44891da99520.  mov dword [obj.pos], r11d               ; [0x20c0bc:4]=0
0x00002b13      4131c6         xor r14d, eax
0x00002b16      4421f3         and ebx, r14d
0x00002b19      4539dc         cmp r12d, r11d
0x00002b1c      0f8ec5000000   jle 0x2be7
0x00002b22      488b0d879520.  mov rcx, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00002b29      4963c3         movsxd rax, r11d
0x00002b2c      4889ef         mov rdi, rbp
0x00002b2f      4c8b04c1       mov r8, qword [rcx + rax*8]
0x00002b33      b903000000     mov ecx, 3
0x00002b38      4c89c6         mov rsi, r8
0x00002b3b      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b3d      0f97c0         seta al
0x00002b40      1c00           sbb al, 0
0x00002b42      84c0           test al, al
0x00002b44      0f85e4000000   jne 0x2c2e
0x00002b4a      4183c301       add r11d, 1
0x00002b4e      4539e3         cmp r11d, r12d
0x00002b51      44891d649520.  mov dword [obj.pos], r11d               ; [0x20c0bc:4]=0
0x00002b58      0f8c52feffff   jl 0x29b0
0x00002b5e      e89df0ffff     call sym.beyond
0x00002b63      0f1f440000     nop dword [rax + rax]
0x00002b68      84c9           test cl, cl
0x00002b6a      740c           je 0x2b78
0x00002b6c      44890d499520.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x00002b73      0f1f440000     nop dword [rax + rax]
0x00002b78      4489e0         mov eax, r12d
0x00002b7b      4429d8         sub eax, r11d
0x00002b7e      83f803         cmp eax, 3
0x00002b81      7e7d           jle 0x2c00
0x00002b83      488d3dfc5700.  lea rdi, [0x00008386]                   ; "-l"
0x00002b8a      b903000000     mov ecx, 3
0x00002b8f      4c89d6         mov rsi, r10
0x00002b92      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002b94      0f97c0         seta al
0x00002b97      1c00           sbb al, 0
0x00002b99      84c0           test al, al
0x00002b9b      7512           jne 0x2baf
0x00002b9d      4b8b7ccf10     mov rdi, qword [r15 + r9*8 + 0x10]
0x00002ba2      e859edffff     call sym.binop
0x00002ba7      84c0           test al, al
0x00002ba9      0f85db000000   jne 0x2c8a
0x00002baf      4b8b7ccf08     mov rdi, qword [r15 + r9*8 + 8]
0x00002bb4      e847edffff     call sym.binop
0x00002bb9      84c0           test al, al
0x00002bbb      0f85af000000   jne 0x2c70
0x00002bc1      4180fd2d       cmp r13b, 0x2d
0x00002bc5      7441           je 0x2c08
0x00002bc7      4584ed         test r13b, r13b
0x00002bca      0f95c0         setne al
0x00002bcd      4183c301       add r11d, 1
0x00002bd1      4131c6         xor r14d, eax
0x00002bd4      44891de19420.  mov dword [obj.pos], r11d               ; [0x20c0bc:4]=0
0x00002bdb      4421f3         and ebx, r14d
0x00002bde      4539dc         cmp r12d, r11d
0x00002be1      0f8f3bffffff   jg 0x2b22
0x00002be7      085c240f       or byte [rsp + 0xf], bl
0x00002beb      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00002bf0      4883c418       add rsp, 0x18
0x00002bf4      5b             pop rbx
0x00002bf5      5d             pop rbp
0x00002bf6      415c           pop r12
0x00002bf8      415d           pop r13
0x00002bfa      415e           pop r14
0x00002bfc      415f           pop r15
0x00002bfe      c3             ret
0x00002bff      90             nop
0x00002c00      74ad           je 0x2baf
0x00002c02      4180fd2d       cmp r13b, 0x2d
0x00002c06      75bf           jne 0x2bc7
0x00002c08      41807a0100     cmp byte [r10 + 1], 0
0x00002c0d      74b8           je 0x2bc7
0x00002c0f      41807a0200     cmp byte [r10 + 2], 0
0x00002c14      75b1           jne 0x2bc7
0x00002c16      e8c5f5ffff     call sym.unary_operator
0x00002c1b      448b1d9a9420.  mov r11d, dword [obj.pos]               ; [0x20c0bc:4]=0
0x00002c22      448b258f9420.  mov r12d, dword [obj.argc]              ; [0x20c0b8:4]=0
0x00002c29      e9e5feffff     jmp 0x2b13
0x00002c2e      488d3dcc5700.  lea rdi, [0x00008401]                   ; "-o"
0x00002c35      b903000000     mov ecx, 3
0x00002c3a      4c89c6         mov rsi, r8
0x00002c3d      085c240f       or byte [rsp + 0xf], bl
0x00002c41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002c43      0f97c0         seta al
0x00002c46      1c00           sbb al, 0
0x00002c48      84c0           test al, al
0x00002c4a      759f           jne 0x2beb
0x00002c4c      4183c301       add r11d, 1
0x00002c50      44891d659420.  mov dword [obj.pos], r11d               ; [0x20c0bc:4]=0
0x00002c57      e93cfdffff     jmp 0x2998
0x00002c5c      0f1f4000       nop dword [rax]
0x00002c60      4589e0         mov r8d, r12d
0x00002c63      4529c8         sub r8d, r9d
0x00002c66      e95dfeffff     jmp 0x2ac8
0x00002c6b      0f1f440000     nop dword [rax + rax]
0x00002c70      31ff           xor edi, edi
0x00002c72      e8f9efffff     call sym.binary_operator
0x00002c77      448b1d3e9420.  mov r11d, dword [obj.pos]               ; [0x20c0bc:4]=0
0x00002c7e      448b25339420.  mov r12d, dword [obj.argc]              ; [0x20c0b8:4]=0
0x00002c85      e989feffff     jmp 0x2b13
0x00002c8a      bf01000000     mov edi, 1
0x00002c8f      e8dcefffff     call sym.binary_operator
0x00002c94      448b1d219420.  mov r11d, dword [obj.pos]               ; [0x20c0bc:4]=0
0x00002c9b      448b25169420.  mov r12d, dword [obj.argc]              ; [0x20c0b8:4]=0
0x00002ca2      e96cfeffff     jmp 0x2b13
0x00002ca7      4531f6         xor r14d, r14d
0x00002caa      e998fdffff     jmp 0x2a47
0x00002caf      4531f6         xor r14d, r14d
0x00002cb2      e9c1feffff     jmp 0x2b78
0x00002cb7      41b801000000   mov r8d, 1
0x00002cbd      e906feffff     jmp 0x2ac8
0x00002cc2      44890df39320.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x00002cc9      e976fdffff     jmp 0x2a44
0x00002cce      8905e8932000   mov dword [obj.pos], eax                ; [0x20c0bc:4]=0
0x00002cd4      e985feffff     jmp 0x2b5e
0x00002cd9      bf01000000     mov edi, 1
0x00002cde      e8ad230000     call sym.quote_n
0x00002ce3      488d35b36b00.  lea rsi, [0x0000989d]                   ; ")"
0x00002cea      31ff           xor edi, edi
0x00002cec      4889c5         mov rbp, rax
0x00002cef      e89c230000     call sym.quote_n
0x00002cf4      488d35ed5600.  lea rsi, [0x000083e8]                   ; "%s expected, found %s"
0x00002cfb      4889c3         mov rbx, rax
0x00002cfe      ba05000000     mov edx, 5
0x00002d03      31ff           xor edi, edi
0x00002d05      e8d6e6ffff     call sym.imp.dcgettext
0x00002d0a      4889ea         mov rdx, rbp
0x00002d0d      4889c7         mov rdi, rax
0x00002d10      4889de         mov rsi, rbx
0x00002d13      31c0           xor eax, eax
0x00002d15      e856edffff     call sym.test_syntax_error
0x00002d1a      488d3d7c6b00.  lea rdi, [0x0000989d]                   ; ")"
0x00002d21      e88a230000     call sym.quote
0x00002d26      488d35af5600.  lea rsi, [0x000083dc]                   ; "%s expected"
0x00002d2d      4889c3         mov rbx, rax
0x00002d30      31ff           xor edi, edi
0x00002d32      ba05000000     mov edx, 5
0x00002d37      e8a4e6ffff     call sym.imp.dcgettext
0x00002d3c      4889de         mov rsi, rbx
0x00002d3f      4889c7         mov rdi, rax
0x00002d42      31c0           xor eax, eax
0x00002d44      e827edffff     call sym.test_syntax_error
0x00002d49      0f1f80000000.  nop dword [rax]
;-- three_arguments:
0x00002d50      486305659320.  movsxd rax, dword [obj.pos]             ; [0x20c0bc:4]=0
0x00002d57      4c8b15529320.  mov r10, qword [obj.argv]               ; [0x20c0b0:8]=0
0x00002d5e      53             push rbx
0x00002d5f      4989c1         mov r9, rax
0x00002d62      4883c001       add rax, 1
0x00002d66      4d8b1cc2       mov r11, qword [r10 + rax*8]
0x00002d6a      488d1cc50000.  lea rbx, [rax*8]
0x00002d72      4c89df         mov rdi, r11
0x00002d75      e886ebffff     call sym.binop
0x00002d7a      84c0           test al, al
0x00002d7c      0f85de000000   jne 0x2e60
0x00002d82      498b541af8     mov rdx, qword [r10 + rbx - 8]
0x00002d87      488d3d4a5600.  lea rdi, [0x000083d8]                   ; u"!(\u7325\u6520\u7078\u6365\u6574d\u7325\u6520\u7078\u6365\u6574\u2c64\u6620\u756f\u646e\u2520s\u612d\u2d00o\u7325\u203a\u6962\u616e\u7972\u6f20\u6570\u6172\u6f74\u2072\u7865\u6570\u7463\u6465\u7400\u7365\u2074\u6e61\u2f64\u726f\u5b20\u0a00\u7325\u6f20\u6c6e\u6e69\u2065\u6568\u706c\u203a\u253c\u3e73\n\u4e47\u2055\u6f63\u6572\u7475\u6c69s\u6e65"
0x00002d8e      b902000000     mov ecx, 2
0x00002d93      4889d6         mov rsi, rdx
0x00002d96      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002d98      0f97c0         seta al
0x00002d9b      1c00           sbb al, 0
0x00002d9d      84c0           test al, al
0x00002d9f      7527           jne 0x2dc8
0x00002da1      4183c101       add r9d, 1
0x00002da5      443b0d0c9320.  cmp r9d, dword [obj.argc]               ; [0x20c0b8:4]=0
0x00002dac      44890d099320.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x00002db3      0f8dda000000   jge 0x2e93
0x00002db9      e802faffff     call sym.two_arguments
0x00002dbe      5b             pop rbx
0x00002dbf      83f001         xor eax, 1
0x00002dc2      c3             ret
0x00002dc3      0f1f440000     nop dword [rax + rax]
0x00002dc8      488d3d0b5600.  lea rdi, [0x000083da]                   ; "("
0x00002dcf      b902000000     mov ecx, 2
0x00002dd4      4889d6         mov rsi, rdx
0x00002dd7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002dd9      0f97c0         seta al
0x00002ddc      1c00           sbb al, 0
0x00002dde      84c0           test al, al
0x00002de0      7536           jne 0x2e18
0x00002de2      498b741a08     mov rsi, qword [r10 + rbx + 8]
0x00002de7      488d3daf6a00.  lea rdi, [0x0000989d]                   ; ")"
0x00002dee      b902000000     mov ecx, 2
0x00002df3      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002df5      0f97c0         seta al
0x00002df8      1c00           sbb al, 0
0x00002dfa      84c0           test al, al
0x00002dfc      751a           jne 0x2e18
0x00002dfe      41803b00       cmp byte [r11], 0
0x00002e02      5b             pop rbx
0x00002e03      0f95c0         setne al
0x00002e06      4183c103       add r9d, 3
0x00002e0a      44890dab9220.  mov dword [obj.pos], r9d                ; [0x20c0bc:4]=0
0x00002e11      c3             ret
0x00002e12      660f1f440000   nop word [rax + rax]
0x00002e18      488d3ddf5500.  lea rdi, [0x000083fe]                   ; "-a"
0x00002e1f      b903000000     mov ecx, 3
0x00002e24      4c89de         mov rsi, r11
0x00002e27      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e29      0f97c0         seta al
0x00002e2c      1c00           sbb al, 0
0x00002e2e      84c0           test al, al
0x00002e30      741a           je 0x2e4c
0x00002e32      488d3dc85500.  lea rdi, [0x00008401]                   ; "-o"
0x00002e39      b903000000     mov ecx, 3
0x00002e3e      4c89de         mov rsi, r11
0x00002e41      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00002e43      0f97c0         seta al
0x00002e46      1c00           sbb al, 0
0x00002e48      84c0           test al, al
0x00002e4a      751c           jne 0x2e68
0x00002e4c      443b0d659220.  cmp r9d, dword [obj.argc]               ; [0x20c0b8:4]=0
0x00002e53      7d3e           jge 0x2e93
0x00002e55      5b             pop rbx
0x00002e56      e915fbffff     jmp sym.or
0x00002e5b      0f1f440000     nop dword [rax + rax]
0x00002e60      5b             pop rbx
0x00002e61      31ff           xor edi, edi
0x00002e63      e908eeffff     jmp sym.binary_operator
0x00002e68      4c89df         mov rdi, r11
0x00002e6b      e840220000     call sym.quote
0x00002e70      488d358d5500.  lea rsi, [0x00008404]                   ; "%s: binary operator expected"
0x00002e77      4889c3         mov rbx, rax
0x00002e7a      31ff           xor edi, edi
0x00002e7c      ba05000000     mov edx, 5
0x00002e81      e85ae5ffff     call sym.imp.dcgettext
0x00002e86      4889de         mov rsi, rbx
0x00002e89      4889c7         mov rdi, rax
0x00002e8c      31c0           xor eax, eax
0x00002e8e      e8ddebffff     call sym.test_syntax_error
0x00002e93      e868edffff     call sym.beyond
0x00002e98      0f1f84000000.  nop dword [rax + rax]
;-- usage:
0x00002ea0      85ff           test edi, edi
0x00002ea2      4154           push r12
0x00002ea4      55             push rbp
0x00002ea5      53             push rbx
0x00002ea6      89fb           mov ebx, edi
0x00002ea8      743a           je 0x2ee4
0x00002eaa      488d350f5700.  lea rsi, str.Try___s___help__for_more_information. ; 0x85c0 ; "Try '%s --help' for more information.\n"
0x00002eb1      488b2d189220.  mov rbp, qword [obj.program_name]       ; [0x20c0d0:8]=0
0x00002eb8      ba05000000     mov edx, 5
0x00002ebd      31ff           xor edi, edi
0x00002ebf      e81ce5ffff     call sym.imp.dcgettext
0x00002ec4      488b3dd59120.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x00002ecb      4889c2         mov rdx, rax
0x00002ece      4889e9         mov rcx, rbp
0x00002ed1      be01000000     mov esi, 1
0x00002ed6      31c0           xor eax, eax
0x00002ed8      e803e7ffff     call sym.imp.__fprintf_chk
0x00002edd      89df           mov edi, ebx
0x00002edf      e8dce6ffff     call sym.imp.exit
0x00002ee4      488b2d9d9120.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002eeb      488d35f65600.  lea rsi, str.Usage:_test_EXPRESSION____or:__test____or:____EXPRESSION______or:_________or:____OPTION ; 0x85e8 ; "Usage: test EXPRESSION\n  or:  test\n  or:  [ EXPRESSION ]\n  or:  [ ]\n  or:  [ OPTION\n"
0x00002ef2      ba05000000     mov edx, 5
0x00002ef7      31ff           xor edi, edi
0x00002ef9      e8e2e4ffff     call sym.imp.dcgettext
0x00002efe      4889ee         mov rsi, rbp
0x00002f01      4889c7         mov rdi, rax
0x00002f04      e887e5ffff     call sym.imp.fputs_unlocked
0x00002f09      488b2d789120.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002f10      488d35295700.  lea rsi, str.Exit_with_the_status_determined_by_EXPRESSION. ; 0x8640 ; "Exit with the status determined by EXPRESSION.\n\n"
0x00002f17      ba05000000     mov edx, 5
0x00002f1c      31ff           xor edi, edi
0x00002f1e      e8bde4ffff     call sym.imp.dcgettext
0x00002f23      4889ee         mov rsi, rbp
0x00002f26      4889c7         mov rdi, rax
0x00002f29      e862e5ffff     call sym.imp.fputs_unlocked
0x00002f2e      488b2d539120.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002f35      488d353c5700.  lea rsi, str.help_____display_this_help_and_exit ; 0x8678 ; "      --help     display this help and exit\n"
0x00002f3c      ba05000000     mov edx, 5
0x00002f41      31ff           xor edi, edi
0x00002f43      e898e4ffff     call sym.imp.dcgettext
0x00002f48      4889ee         mov rsi, rbp
0x00002f4b      4889c7         mov rdi, rax
0x00002f4e      e83de5ffff     call sym.imp.fputs_unlocked
0x00002f53      488b2d2e9120.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002f5a      488d35475700.  lea rsi, str.version__output_version_information_and_exit ; 0x86a8 ; "      --version  output version information and exit\n"
0x00002f61      ba05000000     mov edx, 5
0x00002f66      31ff           xor edi, edi
0x00002f68      e873e4ffff     call sym.imp.dcgettext
0x00002f6d      4889ee         mov rsi, rbp
0x00002f70      4889c7         mov rdi, rax
0x00002f73      e818e5ffff     call sym.imp.fputs_unlocked
0x00002f78      488b2d099120.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002f7f      488d355a5700.  lea rsi, str.An_omitted_EXPRESSION_defaults_to_false.__Otherwise___EXPRESSION_is_true_or_false_and_sets_exit_status.__It_is_one_of: ; 0x86e0 ; "\nAn omitted EXPRESSION defaults to false.  Otherwise,\nEXPRESSION is true or false and sets exit status.  It is one of:\n"
0x00002f86      ba05000000     mov edx, 5
0x00002f8b      31ff           xor edi, edi
0x00002f8d      e84ee4ffff     call sym.imp.dcgettext
0x00002f92      4889ee         mov rsi, rbp
0x00002f95      4889c7         mov rdi, rax
0x00002f98      e8f3e4ffff     call sym.imp.fputs_unlocked
0x00002f9d      488b2de49020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002fa4      488d35ad5700.  lea rsi, str.EXPRESSION_________________EXPRESSION_is_true______EXPRESSION_________________EXPRESSION_is_false____EXPRESSION1__a_EXPRESSION2___both_EXPRESSION1_and_EXPRESSION2_are_true____EXPRESSION1__o_EXPRESSION2___either_EXPRESSION1_or_EXPRESSION2_is_true ; 0x8758 ; "\n  ( EXPRESSION )               EXPRESSION is true\n  ! EXPRESSION                 EXPRESSION is false\n  EXPRESSION1 -a EXPRESSION2   both EXPRESSION1 and EXPRESSION2 are true\n  EXPRESSION1 -o EXPRESSION2   either EXPRESSION1 or EXPRESSION2 is true\n"
0x00002fab      ba05000000     mov edx, 5
0x00002fb0      31ff           xor edi, edi
0x00002fb2      e829e4ffff     call sym.imp.dcgettext
0x00002fb7      4889ee         mov rsi, rbp
0x00002fba      4889c7         mov rdi, rax
0x00002fbd      e8cee4ffff     call sym.imp.fputs_unlocked
0x00002fc2      488b2dbf9020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002fc9      488d35885800.  lea rsi, str.n_STRING____________the_length_of_STRING_is_nonzero____STRING_______________equivalent_to__n_STRING_____z_STRING____________the_length_of_STRING_is_zero____STRING1___STRING2____the_strings_are_equal____STRING1____STRING2___the_strings_are_not_equal ; 0x8858 ; "\n  -n STRING            the length of STRING is nonzero\n  STRING               equivalent to -n STRING\n  -z STRING            the length of STRING is zero\n  STRING1 = STRING2    the strings are equal\n  STRING1 != STRING2   the strings are not equal\n"
0x00002fd0      ba05000000     mov edx, 5
0x00002fd5      31ff           xor edi, edi
0x00002fd7      e804e4ffff     call sym.imp.dcgettext
0x00002fdc      4889ee         mov rsi, rbp
0x00002fdf      4889c7         mov rdi, rax
0x00002fe2      e8a9e4ffff     call sym.imp.fputs_unlocked
0x00002fe7      488b2d9a9020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00002fee      488d35635900.  lea rsi, str.INTEGER1__eq_INTEGER2___INTEGER1_is_equal_to_INTEGER2____INTEGER1__ge_INTEGER2___INTEGER1_is_greater_than_or_equal_to_INTEGER2____INTEGER1__gt_INTEGER2___INTEGER1_is_greater_than_INTEGER2____INTEGER1__le_INTEGER2___INTEGER1_is_less_than_or_equal_to_INTEGER2____INTEGER1__lt_INTEGER2___INTEGER1_is_less_than_INTEGER2____INTEGER1__ne_INTEGER2___INTEGER1_is_not_equal_to_INTEGER2 ; 0x8958 ; "\n  INTEGER1 -eq INTEGER2   INTEGER1 is equal to INTEGER2\n  INTEGER1 -ge INTEGER2   INTEGER1 is greater than or equal to INTEGER2\n  INTEGER1 -gt INTEGER2   INTEGER1 is greater than INTEGER2\n  INTEGER1 -le INTEGER2   INTEGER1 is less than or equal to INTEGER2\n  INTEGER1 -lt INTEGER2   INTEGER1 is less than INTEGER2\n  INTEGER1 -ne INTEGER2   INTEGER1 is not equal to INTEGER2\n"
0x00002ff5      ba05000000     mov edx, 5
0x00002ffa      31ff           xor edi, edi
0x00002ffc      e8dfe3ffff     call sym.imp.dcgettext
0x00003001      4889ee         mov rsi, rbp
0x00003004      4889c7         mov rdi, rax
0x00003007      e884e4ffff     call sym.imp.fputs_unlocked
0x0000300c      488b2d759020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00003013      488d35b65a00.  lea rsi, str.FILE1__ef_FILE2___FILE1_and_FILE2_have_the_same_device_and_inode_numbers____FILE1__nt_FILE2___FILE1_is_newer__modification_date__than_FILE2____FILE1__ot_FILE2___FILE1_is_older_than_FILE2 ; 0x8ad0 ; "\n  FILE1 -ef FILE2   FILE1 and FILE2 have the same device and inode numbers\n  FILE1 -nt FILE2   FILE1 is newer (modification date) than FILE2\n  FILE1 -ot FILE2   FILE1 is older than FILE2\n"
0x0000301a      ba05000000     mov edx, 5
0x0000301f      31ff           xor edi, edi
0x00003021      e8bae3ffff     call sym.imp.dcgettext
0x00003026      4889ee         mov rsi, rbp
0x00003029      4889c7         mov rdi, rax
0x0000302c      e85fe4ffff     call sym.imp.fputs_unlocked
0x00003031      488b2d509020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00003038      488d35515b00.  lea rsi, str.b_FILE_____FILE_exists_and_is_block_special_____c_FILE_____FILE_exists_and_is_character_special_____d_FILE_____FILE_exists_and_is_a_directory_____e_FILE_____FILE_exists ; 0x8b90 ; "\n  -b FILE     FILE exists and is block special\n  -c FILE     FILE exists and is character special\n  -d FILE     FILE exists and is a directory\n  -e FILE     FILE exists\n"
0x0000303f      ba05000000     mov edx, 5
0x00003044      31ff           xor edi, edi
0x00003046      e895e3ffff     call sym.imp.dcgettext
0x0000304b      4889ee         mov rsi, rbp
0x0000304e      4889c7         mov rdi, rax
0x00003051      e83ae4ffff     call sym.imp.fputs_unlocked
0x00003056      488b2d2b9020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x0000305d      488d35dc5b00.  lea rsi, str.f_FILE_____FILE_exists_and_is_a_regular_file_____g_FILE_____FILE_exists_and_is_set_group_ID_____G_FILE_____FILE_exists_and_is_owned_by_the_effective_group_ID_____h_FILE_____FILE_exists_and_is_a_symbolic_link__same_as__L______k_FILE_____FILE_exists_and_has_its_sticky_bit_set ; 0x8c40 ; "  -f FILE     FILE exists and is a regular file\n  -g FILE     FILE exists and is set-group-ID\n  -G FILE     FILE exists and is owned by the effective group ID\n  -h FILE     FILE exists and is a symbolic link (same as -L)\n  -k FILE     FILE exists and has its sticky bit set\n"
0x00003064      ba05000000     mov edx, 5
0x00003069      31ff           xor edi, edi
0x0000306b      e870e3ffff     call sym.imp.dcgettext
0x00003070      4889ee         mov rsi, rbp
0x00003073      4889c7         mov rdi, rax
0x00003076      e815e4ffff     call sym.imp.fputs_unlocked
0x0000307b      488b2d069020.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00003082      488d35cf5c00.  lea rsi, str.L_FILE_____FILE_exists_and_is_a_symbolic_link__same_as__h______N_FILE_____FILE_exists_and_has_been_modified_since_it_was_last_read_____O_FILE_____FILE_exists_and_is_owned_by_the_effective_user_ID_____p_FILE_____FILE_exists_and_is_a_named_pipe_____r_FILE_____FILE_exists_and_read_permission_is_granted_____s_FILE_____FILE_exists_and_has_a_size_greater_than_zero ; 0x8d58 ; "  -L FILE     FILE exists and is a symbolic link (same as -h)\n  -N FILE     FILE exists and has been modified since it was last read\n  -O FILE     FILE exists and is owned by the effective user ID\n  -p FILE     FILE exists and is a named pipe\n  -r FILE     FILE exists and read permission is granted\n  -s FILE     FILE exists and has a size greater than zero\n"
0x00003089      ba05000000     mov edx, 5
0x0000308e      31ff           xor edi, edi
0x00003090      e84be3ffff     call sym.imp.dcgettext
0x00003095      4889ee         mov rsi, rbp
0x00003098      4889c7         mov rdi, rax
0x0000309b      e8f0e3ffff     call sym.imp.fputs_unlocked
0x000030a0      488b2de18f20.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000030a7      488d35125e00.  lea rsi, str.S_FILE_____FILE_exists_and_is_a_socket_____t_FD_______file_descriptor_FD_is_opened_on_a_terminal_____u_FILE_____FILE_exists_and_its_set_user_ID_bit_is_set_____w_FILE_____FILE_exists_and_write_permission_is_granted_____x_FILE_____FILE_exists_and_execute__or_search__permission_is_granted ; 0x8ec0 ; "  -S FILE     FILE exists and is a socket\n  -t FD       file descriptor FD is opened on a terminal\n  -u FILE     FILE exists and its set-user-ID bit is set\n  -w FILE     FILE exists and write permission is granted\n  -x FILE     FILE exists and execute (or search) permission is granted\n"
0x000030ae      ba05000000     mov edx, 5
0x000030b3      31ff           xor edi, edi
0x000030b5      e826e3ffff     call sym.imp.dcgettext
0x000030ba      4889ee         mov rsi, rbp
0x000030bd      4889c7         mov rdi, rax
0x000030c0      e8cbe3ffff     call sym.imp.fputs_unlocked
0x000030c5      488b2dbc8f20.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000030cc      488d350d5f00.  lea rsi, str.Except_for__h_and__L__all_FILE_related_tests_dereference_symbolic_links.__Beware_that_parentheses_need_to_be_escaped__e.g.__by_backslashes__for_shells.__INTEGER_may_also_be__l_STRING__which_evaluates_to_the_length_of_STRING. ; 0x8fe0 ; "\nExcept for -h and -L, all FILE-related tests dereference symbolic links.\nBeware that parentheses need to be escaped (e.g., by backslashes) for shells.\nINTEGER may also be -l STRING, which evaluates to the length of STRING.\n"
0x000030d3      ba05000000     mov edx, 5
0x000030d8      31ff           xor edi, edi
0x000030da      e801e3ffff     call sym.imp.dcgettext
0x000030df      4889ee         mov rsi, rbp
0x000030e2      4889c7         mov rdi, rax
0x000030e5      e8a6e3ffff     call sym.imp.fputs_unlocked
0x000030ea      488b2d978f20.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000030f1      488d35d05f00.  lea rsi, str.NOTE:_Binary__a_and__o_are_inherently_ambiguous.__Use__test_EXPR1____test__EXPR2__or__test_EXPR1____test_EXPR2__instead. ; 0x90c8 ; "\nNOTE: Binary -a and -o are inherently ambiguous.  Use 'test EXPR1 && test\nEXPR2' or 'test EXPR1 || test EXPR2' instead.\n"
0x000030f8      ba05000000     mov edx, 5
0x000030fd      31ff           xor edi, edi
0x000030ff      e8dce2ffff     call sym.imp.dcgettext
0x00003104      4889ee         mov rsi, rbp
0x00003107      4889c7         mov rdi, rax
0x0000310a      e881e3ffff     call sym.imp.fputs_unlocked
0x0000310f      488b2d728f20.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00003116      488d352b6000.  lea rsi, str.NOTE:___honors_the___help_and___version_options__but_test_does_not.__test_treats_each_of_those_as_it_treats_any_other_nonempty_STRING. ; 0x9148 ; "\nNOTE: [ honors the --help and --version options, but test does not.\ntest treats each of those as it treats any other nonempty STRING.\n"
0x0000311d      ba05000000     mov edx, 5
0x00003122      31ff           xor edi, edi
0x00003124      e8b7e2ffff     call sym.imp.dcgettext
0x00003129      4889ee         mov rsi, rbp
0x0000312c      4889c7         mov rdi, rax
0x0000312f      e85ce3ffff     call sym.imp.fputs_unlocked
0x00003134      488d35e65200.  lea rsi, str.test_and_or                ; 0x8421 ; "test and/or ["
0x0000313b      31ff           xor edi, edi
0x0000313d      ba05000000     mov edx, 5
0x00003142      e899e2ffff     call sym.imp.dcgettext
0x00003147      488d35826000.  lea rsi, str.NOTE:_your_shell_may_have_its_own_version_of__s__which_usually_supersedes__the_version_described_here.__Please_refer_to_your_shell_s_documentation__for_details_about_the_options_it_supports. ; 0x91d0 ; "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n"
0x0000314e      31ff           xor edi, edi
0x00003150      4889c5         mov rbp, rax
0x00003153      ba05000000     mov edx, 5
0x00003158      e883e2ffff     call sym.imp.dcgettext
0x0000315d      4889ea         mov rdx, rbp
0x00003160      4889c6         mov rsi, rax
0x00003163      bf01000000     mov edi, 1
0x00003168      31c0           xor eax, eax
0x0000316a      e801e4ffff     call sym.imp.__printf_chk
0x0000316f      488d35b95200.  lea rsi, str.s_online_help:___s         ; 0x842f ; "\n%s online help: <%s>\n"
0x00003176      31ff           xor edi, edi
0x00003178      ba05000000     mov edx, 5
0x0000317d      e85ee2ffff     call sym.imp.dcgettext
0x00003182      488d0d076100.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x9290 ; "https://www.gnu.org/software/coreutils/"
0x00003189      488d15b65200.  lea rdx, str.GNU_coreutils              ; 0x8446 ; "GNU coreutils"
0x00003190      4889c6         mov rsi, rax
0x00003193      bf01000000     mov edi, 1
0x00003198      31c0           xor eax, eax
0x0000319a      e8d1e3ffff     call sym.imp.__printf_chk
0x0000319f      31f6           xor esi, esi
0x000031a1      bf05000000     mov edi, 5
0x000031a6      e8b5e3ffff     call sym.imp.setlocale
0x000031ab      4885c0         test rax, rax
0x000031ae      741c           je 0x31cc
0x000031b0      488d359d5200.  lea rsi, [0x00008454]                   ; "en_"
0x000031b7      ba03000000     mov edx, 3
0x000031bc      4889c7         mov rdi, rax
0x000031bf      e8ace1ffff     call sym.imp.strncmp
0x000031c4      85c0           test eax, eax
0x000031c6      0f8580000000   jne 0x324c
0x000031cc      488d35855200.  lea rsi, str.Full_documentation___s_s   ; 0x8458 ; "Full documentation <%s%s>\n"
0x000031d3      31ff           xor edi, edi
0x000031d5      ba05000000     mov edx, 5
0x000031da      4c8d25925200.  lea r12, str.test_invocation            ; 0x8473 ; "test invocation"
0x000031e1      488d2d8f5200.  lea rbp, [0x00008477]                   ; " invocation"
0x000031e8      e8f3e1ffff     call sym.imp.dcgettext
0x000031ed      488d0d395200.  lea rcx, [0x0000842d]                   ; "["
0x000031f4      488d15956000.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x9290 ; "https://www.gnu.org/software/coreutils/"
0x000031fb      4889c6         mov rsi, rax
0x000031fe      bf01000000     mov edi, 1
0x00003203      31c0           xor eax, eax
0x00003205      e866e3ffff     call sym.imp.__printf_chk
0x0000320a      488d051c5200.  lea rax, [0x0000842d]                   ; "["
0x00003211      488d0dc96600.  lea rcx, [0x000098e1]
0x00003218      488d35e16000.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x9300 ; "or available locally via: info '(coreutils) %s%s'\n"
0x0000321f      ba05000000     mov edx, 5
0x00003224      4939c4         cmp r12, rax
0x00003227      480f45e9       cmovne rbp, rcx
0x0000322b      31ff           xor edi, edi
0x0000322d      e8aee1ffff     call sym.imp.dcgettext
0x00003232      4889e9         mov rcx, rbp
0x00003235      4889c6         mov rsi, rax
0x00003238      4c89e2         mov rdx, r12
0x0000323b      bf01000000     mov edi, 1
0x00003240      31c0           xor eax, eax
0x00003242      e829e3ffff     call sym.imp.__printf_chk
0x00003247      e991fcffff     jmp 0x2edd
0x0000324c      488b2d358e20.  mov rbp, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00003253      488d355e6000.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x92b8 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x0000325a      31ff           xor edi, edi
0x0000325c      ba05000000     mov edx, 5
0x00003261      e87ae1ffff     call sym.imp.dcgettext
0x00003266      4889ee         mov rsi, rbp
0x00003269      4889c7         mov rdi, rax
0x0000326c      e81fe2ffff     call sym.imp.fputs_unlocked
0x00003271      e956ffffff     jmp 0x31cc
0x00003276      662e0f1f8400.  nop word cs:[rax + rax]
;-- close_stdout_set_file_name:
0x00003280      48893d418e20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20c0c8:8]=0
0x00003287      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x00003288      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x00003290      40883d298e20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20c0c0:1]=0
0x00003297      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x00003298      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000032a0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000032a1      53             push rbx
0x000032a2      4883ec08       sub rsp, 8
0x000032a6      488b3ddb8d20.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x000032ad      e85e2d0000     call sym.close_stream
0x000032b2      85c0           test eax, eax
0x000032b4      7416           je 0x32cc
0x000032b6      e895e0ffff     call sym.imp.__errno_location
0x000032bb      803dfe8d2000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20c0c0:1]=0
0x000032c2      4889c3         mov rbx, rax
0x000032c5      741c           je 0x32e3
0x000032c7      833820         cmp dword [rax], 0x20
0x000032ca      7517           jne 0x32e3
0x000032cc      488b3dcd8d20.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x000032d3      e8382d0000     call sym.close_stream
0x000032d8      85c0           test eax, eax
0x000032da      7546           jne 0x3322
0x000032dc      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x000032e0      5b             pop rbx
0x000032e1      5d             pop rbp
0x000032e2      c3             ret
0x000032e3      488d354e6000.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x9338 ; "write error"
0x000032ea      31ff           xor edi, edi
0x000032ec      ba05000000     mov edx, 5
0x000032f1      e8eae0ffff     call sym.imp.dcgettext
0x000032f6      488b3dcb8d20.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20c0c8:8]=0
0x000032fd      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003300      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003303      7428           je 0x332d
0x00003305      e8a61b0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000330a      8b33           mov esi, dword [rbx]
0x0000330c      488d15316000.  lea rdx, str.s:__s                      ; 0x9344 ; "%s: %s"
0x00003313      4889c1         mov rcx, rax
0x00003316      4989e8         mov r8, rbp
0x00003319      31ff           xor edi, edi
0x0000331b      31c0           xor eax, eax
0x0000331d      e85ee2ffff     call sym.imp.error
0x00003322      8b3df08c2000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20c018:4]=1
0x00003328      e853e0ffff     call sym.imp._exit
0x0000332d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000332f      488d15126000.  lea rdx, [0x00009348]                   ; "%s"
0x00003336      4889c1         mov rcx, rax
0x00003339      31ff           xor edi, edi
0x0000333b      31c0           xor eax, eax
0x0000333d      e83ee2ffff     call sym.imp.error
0x00003342      ebde           jmp 0x3322
0x00003344      662e0f1f8400.  nop word cs:[rax + rax]
0x0000334e      6690           nop
;-- umaxtostr:
0x00003350      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x00003354      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x00003358      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x00003362      660f1f440000   nop word [rax + rax]
0x00003368      4889f8         mov rax, rdi
0x0000336b      4883e901       sub rcx, 1
0x0000336f      48f7e6         mul rsi
0x00003372      48c1ea03       shr rdx, 3
0x00003376      488d0492       lea rax, [rdx + rdx*4]
0x0000337a      4801c0         add rax, rax
0x0000337d      4829c7         sub rdi, rax
0x00003380      83c730         add edi, 0x30
0x00003383      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x00003386      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003389      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x0000338c      75da           jne 0x3368
0x0000338e      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003391      c3             ret
0x00003392      662e0f1f8400.  nop word cs:[rax + rax]
0x0000339c      0f1f4000       nop dword [rax]
;-- set_program_name:
0x000033a0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000033a3      53             push rbx
0x000033a4      7477           je 0x341d                               ; ../coreutils-8.31/lib/progname.c:51
0x000033a6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000033ab      4889fb         mov rbx, rdi
0x000033ae      e88de0ffff     call sym.imp.strrchr
0x000033b3      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x000033b6      7455           je 0x340d
0x000033b8      4c8d4001       lea r8, [rax + 1]
0x000033bc      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x000033bf      4829da         sub rdx, rbx
0x000033c2      4883fa06       cmp rdx, 6
0x000033c6      7e45           jle 0x340d
0x000033c8      488d70fa       lea rsi, [rax - 6]
0x000033cc      488d3db55f00.  lea rdi, str..libs                      ; 0x9388 ; "/.libs/"
0x000033d3      b907000000     mov ecx, 7
0x000033d8      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000033da      0f97c2         seta dl
0x000033dd      80da00         sbb dl, 0
0x000033e0      84d2           test dl, dl
0x000033e2      7529           jne 0x340d
0x000033e4      488d3da55f00.  lea rdi, [0x00009390]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x000033eb      b903000000     mov ecx, 3
0x000033f0      4c89c6         mov rsi, r8
0x000033f3      4c89c3         mov rbx, r8
0x000033f6      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000033f8      0f97c2         seta dl
0x000033fb      80da00         sbb dl, 0
0x000033fe      84d2           test dl, dl
0x00003400      750b           jne 0x340d
0x00003402      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003406      48891d738c20.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20c080:8]=0
0x0000340d      48891dbc8c20.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20c0d0:8]=0
0x00003414      48891d758c20.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20c090:8]=0
0x0000341b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000341c      c3             ret
0x0000341d      488b0d7c8c20.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20c0a0:8]=0
0x00003424      488d3d255f00.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x9350 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000342b      ba37000000     mov edx, 0x37                           ; '7'
0x00003430      be01000000     mov esi, 1
0x00003435      e896e1ffff     call sym.imp.fwrite
0x0000343a      e801dfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000343f      90             nop
;-- gettext_quote.part.1:
0x00003440      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003441      53             push rbx
0x00003442      4889fd         mov rbp, rdi
0x00003445      89f3           mov ebx, esi
0x00003447      4883ec08       sub rsp, 8
0x0000344b      e8a02c0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x00003450      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x00003453      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003456      80fa55         cmp dl, 0x55
0x00003459      7475           je 0x34d0
0x0000345b      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x0000345e      7420           je 0x3480
0x00003460      488d053c5f00.  lea rax, str.l______l                   ; 0x93a3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003467      488d15375f00.  lea rdx, [0x000093a5]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000346e      83fb09         cmp ebx, 9
0x00003471      480f45c2       cmovne rax, rdx
0x00003475      4883c408       add rsp, 8
0x00003479      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x0000347a      5d             pop rbp
0x0000347b      c3             ret
0x0000347c      0f1f4000       nop dword [rax]
0x00003480      0fb65001       movzx edx, byte [rax + 1]
0x00003484      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003487      80fa42         cmp dl, 0x42
0x0000348a      75d4           jne 0x3460
0x0000348c      80780231       cmp byte [rax + 2], 0x31
0x00003490      75ce           jne 0x3460
0x00003492      80780338       cmp byte [rax + 3], 0x38
0x00003496      75c8           jne 0x3460
0x00003498      80780430       cmp byte [rax + 4], 0x30
0x0000349c      75c2           jne 0x3460
0x0000349e      80780533       cmp byte [rax + 5], 0x33
0x000034a2      75bc           jne 0x3460
0x000034a4      80780630       cmp byte [rax + 6], 0x30
0x000034a8      75b6           jne 0x3460
0x000034aa      80780700       cmp byte [rax + 7], 0
0x000034ae      75b0           jne 0x3460
0x000034b0      807d0060       cmp byte [rbp], 0x60
0x000034b4      488d05e15e00.  lea rax, [0x0000939c]
0x000034bb      488d15de5e00.  lea rdx, [0x000093a0]
0x000034c2      480f45c2       cmovne rax, rdx
0x000034c6      4883c408       add rsp, 8
0x000034ca      5b             pop rbx
0x000034cb      5d             pop rbp
0x000034cc      c3             ret
0x000034cd      0f1f00         nop dword [rax]
0x000034d0      0fb65001       movzx edx, byte [rax + 1]
0x000034d4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000034d7      80fa54         cmp dl, 0x54
0x000034da      7584           jne 0x3460
0x000034dc      0fb65002       movzx edx, byte [rax + 2]
0x000034e0      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000034e3      80fa46         cmp dl, 0x46
0x000034e6      0f8574ffffff   jne 0x3460
0x000034ec      8078032d       cmp byte [rax + 3], 0x2d
0x000034f0      0f856affffff   jne 0x3460
0x000034f6      80780438       cmp byte [rax + 4], 0x38
0x000034fa      0f8560ffffff   jne 0x3460
0x00003500      80780500       cmp byte [rax + 5], 0
0x00003504      0f8556ffffff   jne 0x3460
0x0000350a      807d0060       cmp byte [rbp], 0x60
0x0000350e      488d057f5e00.  lea rax, [0x00009394]                   ; "\u2018"
0x00003515      488d157c5e00.  lea rdx, [0x00009398]                   ; "\u2019"
0x0000351c      480f45c2       cmovne rax, rdx
0x00003520      4883c408       add rsp, 8
0x00003524      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003525      5d             pop rbp
0x00003526      c3             ret
0x00003527      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003530      4157           push r15
0x00003532      4156           push r14
0x00003534      4589c7         mov r15d, r8d
0x00003537      4155           push r13
0x00003539      4154           push r12
0x0000353b      4989fe         mov r14, rdi
0x0000353e      55             push rbp
0x0000353f      53             push rbx
0x00003540      4489cb         mov ebx, r9d
0x00003543      4989f5         mov r13, rsi
0x00003546      4889cd         mov rbp, rcx
0x00003549      83e302         and ebx, 2
0x0000354c      4881ecb80000.  sub rsp, 0xb8
0x00003553      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x0000355b      4889542410     mov qword [rsp + 0x10], rdx
0x00003560      4489442408     mov dword [rsp + 8], r8d
0x00003565      44894c2478     mov dword [rsp + 0x78], r9d
0x0000356a      4889442420     mov qword [rsp + 0x20], rax
0x0000356f      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003577      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x0000357c      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003584      4889442460     mov qword [rsp + 0x60], rax
0x00003589      64488b042528.  mov rax, qword fs:[0x28]
0x00003592      48898424a800.  mov qword [rsp + 0xa8], rax
0x0000359a      31c0           xor eax, eax
0x0000359c      e84fdeffff     call sym.imp.__ctype_get_mb_cur_max
0x000035a1      4183ff0a       cmp r15d, 0xa
0x000035a5      4889442458     mov qword [rsp + 0x58], rax
0x000035aa      0f87af110000   ja 0x475f
0x000035b0      488d0d495e00.  lea rcx, [0x00009400]
0x000035b7      4489fa         mov edx, r15d
0x000035ba      48630491       movsxd rax, dword [rcx + rdx*4]
0x000035be      4801c8         add rax, rcx
0x000035c1      ffe0           jmp rax
0x000035c3      c644240e01     mov byte [rsp + 0xe], 1
0x000035c8      c644247c00     mov byte [rsp + 0x7c], 0
0x000035cd      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x000035d0      48c744245000.  mov qword [rsp + 0x50], 0
0x000035d9      c644240f01     mov byte [rsp + 0xf], 1
0x000035de      c644240d00     mov byte [rsp + 0xd], 0
0x000035e3      488d05bb5d00.  lea rax, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000035ea      48c744241801.  mov qword [rsp + 0x18], 1
0x000035f3      4531ff         xor r15d, r15d
0x000035f6      c74424080200.  mov dword [rsp + 8], 2
0x000035fe      4889442448     mov qword [rsp + 0x48], rax
0x00003603      4531db         xor r11d, r11d
0x00003606      4889e8         mov rax, rbp
0x00003609      4589e0         mov r8d, r12d
0x0000360c      4c89dd         mov rbp, r11
0x0000360f      4989c3         mov r11, rax
0x00003612      660f1f440000   nop word [rax + rax]
0x00003618      4939eb         cmp r11, rbp
0x0000361b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x0000361f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003623      750d           jne 0x3632
0x00003625      488b442410     mov rax, qword [rsp + 0x10]
0x0000362a      803c2800       cmp byte [rax + rbp], 0
0x0000362e      410f95c4       setne r12b
0x00003632      4584e4         test r12b, r12b
0x00003635      0f8455060000   je 0x3c90
0x0000363b      837c240802     cmp dword [rsp + 8], 2
0x00003640      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003645      4c8d0c2f       lea r9, [rdi + rbp]
0x00003649      0f95c0         setne al
0x0000364c      2244240d       and al, byte [rsp + 0xd]
0x00003650      4189c2         mov r10d, eax
0x00003653      0f84a7000000   je 0x3700
0x00003659      488b442418     mov rax, qword [rsp + 0x18]
0x0000365e      4885c0         test rax, rax
0x00003661      0f8429040000   je 0x3a90
0x00003667      4983fbff       cmp r11, 0xffffffffffffffff
0x0000366b      488d5c0500     lea rbx, [rbp + rax]
0x00003670      752e           jne 0x36a0
0x00003672      4883f801       cmp rax, 1
0x00003676      7628           jbe 0x36a0
0x00003678      4488442438     mov byte [rsp + 0x38], r8b
0x0000367d      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003682      4c894c2428     mov qword [rsp + 0x28], r9
0x00003687      e874ddffff     call sym.imp.strlen
0x0000368c      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003692      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003698      4989c3         mov r11, rax
0x0000369b      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x000036a0      4c39db         cmp rbx, r11
0x000036a3      4488542428     mov byte [rsp + 0x28], r10b
0x000036a8      0f87b2050000   ja 0x3c60
0x000036ae      488b542418     mov rdx, qword [rsp + 0x18]
0x000036b3      488b742448     mov rsi, qword [rsp + 0x48]
0x000036b8      4c89cf         mov rdi, r9
0x000036bb      4c895c2440     mov qword [rsp + 0x40], r11
0x000036c0      4488442438     mov byte [rsp + 0x38], r8b
0x000036c5      4c894c2430     mov qword [rsp + 0x30], r9
0x000036ca      e8b1ddffff     call sym.imp.memcmp
0x000036cf      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x000036d1      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x000036d6      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x000036dc      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x000036e1      0f8579050000   jne 0x3c60
0x000036e7      807c240f00     cmp byte [rsp + 0xf], 0
0x000036ec      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x000036f2      0f857d0f0000   jne 0x4675
0x000036f8      0f1f84000000.  nop dword [rax + rax]
0x00003700      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003704      80fb7e         cmp bl, 0x7e
0x00003707      0f871b030000   ja 0x3a28
0x0000370d      488d0d185d00.  lea rcx, [0x0000942c]
0x00003714      0fb6d3         movzx edx, bl
0x00003717      48630491       movsxd rax, dword [rcx + rdx*4]
0x0000371b      4801c8         add rax, rcx
0x0000371e      ffe0           jmp rax
0x00003720      4531d2         xor r10d, r10d
0x00003723      4983fb01       cmp r11, 1
0x00003727      0f95c0         setne al
0x0000372a      4983fbff       cmp r11, 0xffffffffffffffff
0x0000372e      750c           jne 0x373c
0x00003730      488b442410     mov rax, qword [rsp + 0x10]
0x00003735      80780100       cmp byte [rax + 1], 0
0x00003739      0f95c0         setne al
0x0000373c      837c240802     cmp dword [rsp + 8], 2
0x00003741      0f94c2         sete dl
0x00003744      84c0           test al, al
0x00003746      0f844c020000   je 0x3998
0x0000374c      4531e4         xor r12d, r12d
0x0000374f      31c0           xor eax, eax
0x00003751      0f1f80000000.  nop dword [rax]
0x00003758      807c240d01     cmp byte [rsp + 0xd], 1
0x0000375d      0f850f010000   jne 0x3872
0x00003763      84d2           test dl, dl
0x00003765      0f8507010000   jne 0x3872
0x0000376b      488b742420     mov rsi, qword [rsp + 0x20]
0x00003770      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003773      7414           je 0x3789
0x00003775      89da           mov edx, ebx
0x00003777      c0ea05         shr dl, 5
0x0000377a      0fb6d2         movzx edx, dl
0x0000377d      8b1496         mov edx, dword [rsi + rdx*4]
0x00003780      0fa3da         bt edx, ebx
0x00003783      0f824a010000   jb 0x38d3
0x00003789      4584d2         test r10b, r10b
0x0000378c      0f8541010000   jne 0x38d3
0x00003792      83f001         xor eax, 1
0x00003795      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003799      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x0000379c      84c0           test al, al
0x0000379e      7420           je 0x37c0                               ; ../coreutils-8.31/lib/quotearg.c:338
0x000037a0      4d39fd         cmp r13, r15
0x000037a3      7605           jbe 0x37aa
0x000037a5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000037aa      498d4701       lea rax, [r15 + 1]
0x000037ae      4939c5         cmp r13, rax
0x000037b1      7606           jbe 0x37b9
0x000037b3      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000037b9      4983c702       add r15, 2
0x000037bd      4531c0         xor r8d, r8d
0x000037c0      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x000037c3      7304           jae 0x37c9                              ; ../coreutils-8.31/lib/quotearg.c:68
0x000037c5      43881c3e       mov byte [r14 + r15], bl
0x000037c9      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x000037ce      4983c701       add r15, 1
0x000037d2      b800000000     mov eax, 0
0x000037d7      4584e4         test r12b, r12b
0x000037da      0f44f8         cmove edi, eax
0x000037dd      40887c240e     mov byte [rsp + 0xe], dil
0x000037e2      e931feffff     jmp 0x3618
0x000037e7      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x000037f0      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x000037f3      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x000037f7      83f802         cmp eax, 2
0x000037fa      0f84b8050000   je 0x3db8
0x00003800      83f805         cmp eax, 5
0x00003803      0f846f050000   je 0x3d78
0x00003809      83f802         cmp eax, 2
0x0000380c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003811      0f94c2         sete dl
0x00003814      4531e4         xor r12d, r12d
0x00003817      31c0           xor eax, eax
0x00003819      e93affffff     jmp 0x3758
0x0000381e      6690           nop
0x00003820      4531d2         xor r10d, r10d
0x00003823      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003828      0f8402050000   je 0x3d30
0x0000382e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003833      31d2           xor edx, edx
0x00003835      31c0           xor eax, eax
0x00003837      bb27000000     mov ebx, 0x27                           ; '''
0x0000383c      e917ffffff     jmp 0x3758
0x00003841      0f1f80000000.  nop dword [rax]
0x00003848      ba09000000     mov edx, 9
0x0000384d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003852      837c240802     cmp dword [rsp + 8], 2
0x00003857      0f94c0         sete al
0x0000385a      2244240f       and al, byte [rsp + 0xf]
0x0000385e      0f854a010000   jne 0x39ae
0x00003864      807c240d00     cmp byte [rsp + 0xd], 0
0x00003869      7565           jne 0x38d0
0x0000386b      89d3           mov ebx, edx
0x0000386d      4531e4         xor r12d, r12d
0x00003870      31c0           xor eax, eax
0x00003872      807c240f00     cmp byte [rsp + 0xf], 0
0x00003877      0f85eefeffff   jne 0x376b
0x0000387d      e907ffffff     jmp 0x3789                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003882      660f1f440000   nop word [rax + rax]
0x00003888      ba08000000     mov edx, 8
0x0000388d      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003892      ebd0           jmp 0x3864
0x00003894      0f1f4000       nop dword [rax]
0x00003898      837c240802     cmp dword [rsp + 8], 2
0x0000389d      0f84cd030000   je 0x3c70
0x000038a3      807c240d00     cmp byte [rsp + 0xd], 0
0x000038a8      0f8412020000   je 0x3ac0
0x000038ae      807c240f00     cmp byte [rsp + 0xf], 0
0x000038b3      0f8407020000   je 0x3ac0
0x000038b9      48837c241800   cmp qword [rsp + 0x18], 0
0x000038bf      0f85b6030000   jne 0x3c7b
0x000038c5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000038ca      660f1f440000   nop word [rax + rax]
0x000038d0      4531e4         xor r12d, r12d
0x000038d3      837c240802     cmp dword [rsp + 8], 2
0x000038d8      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x000038db      807c240f00     cmp byte [rsp + 0xf], 0
0x000038e0      89d0           mov eax, edx
0x000038e2      0f8550080000   jne 0x4138
0x000038e8      4489c0         mov eax, r8d
0x000038eb      83f001         xor eax, 1
0x000038ee      20d0           and al, dl
0x000038f0      742f           je 0x3921
0x000038f2      4d39fd         cmp r13, r15
0x000038f5      7605           jbe 0x38fc
0x000038f7      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000038fc      498d5701       lea rdx, [r15 + 1]
0x00003900      4939d5         cmp r13, rdx
0x00003903      7606           jbe 0x390b
0x00003905      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000390b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x0000390f      4939d5         cmp r13, rdx
0x00003912      7606           jbe 0x391a
0x00003914      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000391a      4983c703       add r15, 3
0x0000391e      4189c0         mov r8d, eax
0x00003921      4d39fd         cmp r13, r15
0x00003924      7605           jbe 0x392b
0x00003926      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000392b      4983c701       add r15, 1
0x0000392f      4883c501       add rbp, 1
0x00003933      e988feffff     jmp 0x37c0
0x00003938      0f1f84000000.  nop dword [rax + rax]
0x00003940      807c240d00     cmp byte [rsp + 0xd], 0
0x00003945      0f85c8010000   jne 0x3b13
0x0000394b      31d2           xor edx, edx
0x0000394d      f644247801     test byte [rsp + 0x78], 1
0x00003952      0f8413ffffff   je 0x386b
0x00003958      4883c501       add rbp, 1
0x0000395c      e9b7fcffff     jmp 0x3618
0x00003961      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003968      837c240802     cmp dword [rsp + 8], 2
0x0000396d      0f94c2         sete dl
0x00003970      31c0           xor eax, eax
0x00003972      e9e1fdffff     jmp 0x3758
0x00003977      660f1f840000.  nop word [rax + rax]
0x00003980      ba07000000     mov edx, 7
0x00003985      bb61000000     mov ebx, 0x61                           ; 'a'
0x0000398a      e9d5feffff     jmp 0x3864
0x0000398f      90             nop
0x00003990      837c240802     cmp dword [rsp + 8], 2
0x00003995      0f94c2         sete dl
0x00003998      4885ed         test rbp, rbp
0x0000399b      0f85abfdffff   jne 0x374c
0x000039a1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000039a6      20d0           and al, dl
0x000039a8      0f84aafdffff   je 0x3758
0x000039ae      4c89dd         mov rbp, r11
0x000039b1      c74424080200.  mov dword [rsp + 8], 2
0x000039b9      e9fb060000     jmp 0x40b9
0x000039be      6690           nop
0x000039c0      837c240802     cmp dword [rsp + 8], 2
0x000039c5      0f94c2         sete dl
0x000039c8      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x000039cb      ebd4           jmp 0x39a1
0x000039cd      0f1f00         nop dword [rax]
0x000039d0      837c240802     cmp dword [rsp + 8], 2
0x000039d5      bb20000000     mov ebx, 0x20                           ; "@"
0x000039da      0f94c2         sete dl
0x000039dd      ebc2           jmp 0x39a1
0x000039df      90             nop
0x000039e0      ba0d000000     mov edx, 0xd
0x000039e5      bb72000000     mov ebx, 0x72                           ; 'r'
0x000039ea      e963feffff     jmp 0x3852
0x000039ef      90             nop
0x000039f0      ba0c000000     mov edx, 0xc
0x000039f5      bb66000000     mov ebx, 0x66                           ; 'f'
0x000039fa      e965feffff     jmp 0x3864
0x000039ff      90             nop
0x00003a00      ba0b000000     mov edx, 0xb
0x00003a05      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003a0a      e955feffff     jmp 0x3864
0x00003a0f      90             nop
0x00003a10      ba0a000000     mov edx, 0xa
0x00003a15      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003a1a      e933feffff     jmp 0x3852
0x00003a1f      90             nop
0x00003a20      4531d2         xor r10d, r10d
0x00003a23      0f1f440000     nop dword [rax + rax]
0x00003a28      48837c245801   cmp qword [rsp + 0x58], 1
0x00003a2e      0f85a4030000   jne 0x3dd8
0x00003a34      4c895c2438     mov qword [rsp + 0x38], r11
0x00003a39      4488442430     mov byte [rsp + 0x30], r8b
0x00003a3e      4488542428     mov byte [rsp + 0x28], r10b
0x00003a43      e8c8dbffff     call sym.imp.__ctype_b_loc
0x00003a48      488b08         mov rcx, qword [rax]
0x00003a4b      0fb6d3         movzx edx, bl
0x00003a4e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003a54      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003a5a      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003a5f      bf01000000     mov edi, 1
0x00003a64      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003a68      66250040       and ax, 0x4000
0x00003a6c      410f95c4       setne r12b
0x00003a70      0f94c0         sete al
0x00003a73      2244240d       and al, byte [rsp + 0xd]
0x00003a77      84c0           test al, al
0x00003a79      0f8592090000   jne 0x4411
0x00003a7f      837c240802     cmp dword [rsp + 8], 2
0x00003a84      0f94c2         sete dl
0x00003a87      e9ccfcffff     jmp 0x3758
0x00003a8c      0f1f4000       nop dword [rax]
0x00003a90      410fb619       movzx ebx, byte [r9]
0x00003a94      80fb7e         cmp bl, 0x7e
0x00003a97      7787           ja 0x3a20
0x00003a99      488d0d885b00.  lea rcx, [0x00009628]
0x00003aa0      0fb6d3         movzx edx, bl
0x00003aa3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003aa7      4801c8         add rax, rcx
0x00003aaa      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003aac      0f1f4000       nop dword [rax]
0x00003ab0      4531d2         xor r10d, r10d
0x00003ab3      807c240d00     cmp byte [rsp + 0xd], 0
0x00003ab8      0f85f0fdffff   jne 0x38ae
0x00003abe      6690           nop
0x00003ac0      ba5c000000     mov edx, 0x5c                           ; '\'
0x00003ac5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003aca      e995fdffff     jmp 0x3864
0x00003acf      90             nop
0x00003ad0      ba0c000000     mov edx, 0xc
0x00003ad5      4531d2         xor r10d, r10d
0x00003ad8      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003add      e982fdffff     jmp 0x3864
0x00003ae2      660f1f440000   nop word [rax + rax]
0x00003ae8      ba0a000000     mov edx, 0xa
0x00003aed      4531d2         xor r10d, r10d
0x00003af0      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00003af5      e958fdffff     jmp 0x3852
0x00003afa      660f1f440000   nop word [rax + rax]
0x00003b00      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003b05      e9c6fdffff     jmp 0x38d0
0x00003b0a      660f1f440000   nop word [rax + rax]
0x00003b10      4531d2         xor r10d, r10d
0x00003b13      837c240802     cmp dword [rsp + 8], 2
0x00003b18      0f94c2         sete dl
0x00003b1b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003b20      0f85940b0000   jne 0x46ba
0x00003b26      4489c0         mov eax, r8d
0x00003b29      4c89f9         mov rcx, r15
0x00003b2c      83f001         xor eax, 1
0x00003b2f      20d0           and al, dl
0x00003b31      742d           je 0x3b60
0x00003b33      4d39fd         cmp r13, r15
0x00003b36      7605           jbe 0x3b3d
0x00003b38      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003b3d      498d4f01       lea rcx, [r15 + 1]
0x00003b41      4939cd         cmp r13, rcx
0x00003b44      7606           jbe 0x3b4c
0x00003b46      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003b4c      498d4f02       lea rcx, [r15 + 2]
0x00003b50      4939cd         cmp r13, rcx
0x00003b53      0f8730060000   ja 0x4189
0x00003b59      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x00003b5d      4189c0         mov r8d, eax
0x00003b60      4939cd         cmp r13, rcx
0x00003b63      7605           jbe 0x3b6a
0x00003b65      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003b6a      837c240802     cmp dword [rsp + 8], 2
0x00003b6f      4c8d7901       lea r15, [rcx + 1]
0x00003b73      0f8400060000   je 0x4179
0x00003b79      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003b7d      4c39d8         cmp rax, r11
0x00003b80      7319           jae 0x3b9b                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x00003b82      488b442410     mov rax, qword [rsp + 0x10]
0x00003b87      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x00003b8c      88442428       mov byte [rsp + 0x28], al
0x00003b90      83e830         sub eax, 0x30
0x00003b93      3c09           cmp al, 9
0x00003b95      0f862e080000   jbe 0x43c9
0x00003b9b      4489e0         mov eax, r12d
0x00003b9e      bb30000000     mov ebx, 0x30                           ; '0'
0x00003ba3      4531e4         xor r12d, r12d
0x00003ba6      e9adfbffff     jmp 0x3758                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x00003bab      0f1f440000     nop dword [rax + rax]
0x00003bb0      837c240802     cmp dword [rsp + 8], 2
0x00003bb5      4589d4         mov r12d, r10d
0x00003bb8      0f94c2         sete dl
0x00003bbb      4531d2         xor r10d, r10d
0x00003bbe      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003bc0      e993fbffff     jmp 0x3758                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00003bc5      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00003bc8      837c240802     cmp dword [rsp + 8], 2
0x00003bcd      0f94c2         sete dl
0x00003bd0      4531d2         xor r10d, r10d
0x00003bd3      e9c0fdffff     jmp 0x3998
0x00003bd8      0f1f84000000.  nop dword [rax + rax]
0x00003be0      837c240802     cmp dword [rsp + 8], 2
0x00003be5      0f94c2         sete dl
0x00003be8      4531d2         xor r10d, r10d
0x00003beb      4531e4         xor r12d, r12d
0x00003bee      e9aefdffff     jmp 0x39a1
0x00003bf3      0f1f440000     nop dword [rax + rax]
0x00003bf8      837c240802     cmp dword [rsp + 8], 2
0x00003bfd      4589d4         mov r12d, r10d
0x00003c00      bb20000000     mov ebx, 0x20                           ; "@"
0x00003c05      0f94c2         sete dl
0x00003c08      4531d2         xor r10d, r10d
0x00003c0b      e991fdffff     jmp 0x39a1
0x00003c10      ba0d000000     mov edx, 0xd
0x00003c15      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00003c18      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003c1d      e930fcffff     jmp 0x3852
0x00003c22      660f1f440000   nop word [rax + rax]
0x00003c28      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003c2d      e99efcffff     jmp 0x38d0
0x00003c32      660f1f440000   nop word [rax + rax]
0x00003c38      ba09000000     mov edx, 9
0x00003c3d      4531d2         xor r10d, r10d
0x00003c40      bb74000000     mov ebx, 0x74                           ; 't'
0x00003c45      e908fcffff     jmp 0x3852
0x00003c4a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x00003c50      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003c55      e976fcffff     jmp 0x38d0
0x00003c5a      660f1f440000   nop word [rax + rax]
0x00003c60      4531d2         xor r10d, r10d
0x00003c63      e998faffff     jmp 0x3700
0x00003c68      0f1f84000000.  nop dword [rax + rax]
0x00003c70      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c75      0f8565090000   jne 0x45e0
0x00003c7b      4883c501       add rbp, 1
0x00003c7f      4489c0         mov eax, r8d
0x00003c82      4531e4         xor r12d, r12d
0x00003c85      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003c8a      e90dfbffff     jmp 0x379c
0x00003c8f      90             nop
0x00003c90      837c240802     cmp dword [rsp + 8], 2
0x00003c95      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00003c9a      4589c4         mov r12d, r8d
0x00003c9d      4c89dd         mov rbp, r11
0x00003ca0      0f94c2         sete dl
0x00003ca3      89d8           mov eax, ebx
0x00003ca5      4d85ff         test r15, r15
0x00003ca8      0f94c1         sete cl
0x00003cab      21d0           and eax, edx
0x00003cad      20c8           and al, cl
0x00003caf      0f85610a0000   jne 0x4716                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00003cb5      89d8           mov eax, ebx
0x00003cb7      83f001         xor eax, 1
0x00003cba      20c2           and dl, al
0x00003cbc      0f846a090000   je 0x462c
0x00003cc2      807c247c00     cmp byte [rsp + 0x7c], 0
0x00003cc7      0f845d090000   je 0x462a
0x00003ccd      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00003cd2      0f85f5090000   jne 0x46cd
0x00003cd8      4d85ed         test r13, r13
0x00003cdb      0f94c0         sete al
0x00003cde      48837c245000   cmp qword [rsp + 0x50], 0
0x00003ce4      0f95c2         setne dl
0x00003ce7      20d0           and al, dl
0x00003ce9      0f841d0a0000   je 0x470c
0x00003cef      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00003cf4      488d1daa5600.  lea rbx, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003cfb      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x00003cff      c74424080200.  mov dword [rsp + 8], 2
0x00003d07      41bf01000000   mov r15d, 1
0x00003d0d      48c744241801.  mov qword [rsp + 0x18], 1
0x00003d16      c644240f00     mov byte [rsp + 0xf], 0
0x00003d1b      48895c2448     mov qword [rsp + 0x48], rbx
0x00003d20      8844247c       mov byte [rsp + 0x7c], al
0x00003d24      e9daf8ffff     jmp 0x3603
0x00003d29      0f1f80000000.  nop dword [rax]
0x00003d30      807c240f00     cmp byte [rsp + 0xf], 0
0x00003d35      0f85a5080000   jne 0x45e0
0x00003d3b      4d85ed         test r13, r13
0x00003d3e      0f84fc030000   je 0x4140                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00003d44      31d2           xor edx, edx
0x00003d46      48837c245000   cmp qword [rsp + 0x50], 0
0x00003d4c      0f85ee030000   jne 0x4140                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x00003d52      4c896c2450     mov qword [rsp + 0x50], r13
0x00003d57      4983c703       add r15, 3
0x00003d5b      31c0           xor eax, eax
0x00003d5d      448864247c     mov byte [rsp + 0x7c], r12b
0x00003d62      4531c0         xor r8d, r8d
0x00003d65      4989d5         mov r13, rdx
0x00003d68      bb27000000     mov ebx, 0x27                           ; '''
0x00003d6d      e917faffff     jmp 0x3789
0x00003d72      660f1f440000   nop word [rax + rax]
0x00003d78      f644247804     test byte [rsp + 0x78], 4
0x00003d7d      7421           je 0x3da0
0x00003d7f      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x00003d83      4c39d9         cmp rcx, r11
0x00003d86      7318           jae 0x3da0
0x00003d88      488b442410     mov rax, qword [rsp + 0x10]
0x00003d8d      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x00003d92      0f848a070000   je 0x4522
0x00003d98      0f1f84000000.  nop dword [rax + rax]
0x00003da0      31d2           xor edx, edx
0x00003da2      4531e4         xor r12d, r12d
0x00003da5      31c0           xor eax, eax
0x00003da7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003dac      e9a7f9ffff     jmp 0x3758
0x00003db1      0f1f80000000.  nop dword [rax]
0x00003db8      807c240f00     cmp byte [rsp + 0xf], 0
0x00003dbd      0f851d080000   jne 0x45e0
0x00003dc3      4531e4         xor r12d, r12d
0x00003dc6      31c0           xor eax, eax
0x00003dc8      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003dcd      e9b7f9ffff     jmp 0x3789                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00003dd2      660f1f440000   nop word [rax + rax]
0x00003dd8      488d8424a000.  lea rax, [rsp + 0xa0]
0x00003de0      4983fbff       cmp r11, 0xffffffffffffffff
0x00003de4      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00003df0      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00003df5      752d           jne 0x3e24
0x00003df7      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003dfc      4488442440     mov byte [rsp + 0x40], r8b
0x00003e01      4488542438     mov byte [rsp + 0x38], r10b
0x00003e06      4c894c2430     mov qword [rsp + 0x30], r9
0x00003e0b      e8f0d5ffff     call sym.imp.strlen
0x00003e10      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00003e16      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x00003e1c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x00003e1f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003e24      488d84249c00.  lea rax, [rsp + 0x9c]
0x00003e2c      31c9           xor ecx, ecx
0x00003e2e      885c247e       mov byte [rsp + 0x7e], bl
0x00003e32      448844247d     mov byte [rsp + 0x7d], r8b
0x00003e37      4889cb         mov rbx, rcx
0x00003e3a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00003e42      4889442438     mov qword [rsp + 0x38], rax
0x00003e47      448854247f     mov byte [rsp + 0x7f], r10b
0x00003e4c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00003e54      4c89742440     mov qword [rsp + 0x40], r14
0x00003e59      4c896c2470     mov qword [rsp + 0x70], r13
0x00003e5e      4c895c2430     mov qword [rsp + 0x30], r11
0x00003e63      488b442410     mov rax, qword [rsp + 0x10]
0x00003e68      4c8d741d00     lea r14, [rbp + rbx]
0x00003e6d      488b542430     mov rdx, qword [rsp + 0x30]
0x00003e72      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00003e77      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00003e7c      4e8d2c30       lea r13, [rax + r14]
0x00003e80      4c29f2         sub rdx, r14
0x00003e83      4c89ee         mov rsi, r13
0x00003e86      e875200000     call sym.rpl_mbrtowc
0x00003e8b      4885c0         test rax, rax
0x00003e8e      4989c7         mov r15, rax
0x00003e91      744e           je 0x3ee1
0x00003e93      4883f8ff       cmp rax, 0xffffffffffffffff
0x00003e97      0f8418060000   je 0x44b5
0x00003e9d      4883f8fe       cmp rax, 0xfffffffffffffffe
0x00003ea1      0f849a050000   je 0x4441
0x00003ea7      837c240802     cmp dword [rsp + 8], 2
0x00003eac      0f94c0         sete al
0x00003eaf      2244240f       and al, byte [rsp + 0xf]
0x00003eb3      0f8597010000   jne 0x4050
0x00003eb9      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00003ec0      e83bd7ffff     call sym.imp.iswprint
0x00003ec5      488b7c2428     mov rdi, qword [rsp + 0x28]
0x00003eca      85c0           test eax, eax
0x00003ecc      b800000000     mov eax, 0
0x00003ed1      440f44e0       cmove r12d, eax
0x00003ed5      4c01fb         add rbx, r15
0x00003ed8      e813d7ffff     call sym.imp.mbsinit
0x00003edd      85c0           test eax, eax
0x00003edf      7482           je 0x3e63
0x00003ee1      4489e2         mov edx, r12d
0x00003ee4      4889df         mov rdi, rbx
0x00003ee7      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00003eed      83f201         xor edx, 1
0x00003ef0      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00003ef5      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00003efb      2254240d       and dl, byte [rsp + 0xd]
0x00003eff      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00003f07      4c8b742440     mov r14, qword [rsp + 0x40]
0x00003f0c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00003f11      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00003f16      4883ff01       cmp rdi, 1
0x00003f1a      0f86fb050000   jbe 0x451b
0x00003f20      4889f9         mov rcx, rdi
0x00003f23      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00003f25      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x00003f2b      4801e9         add rcx, rbp
0x00003f2e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003f33      e9b6000000     jmp 0x3fee
0x00003f38      0f1f84000000.  nop dword [rax + rax]
0x00003f40      837c240802     cmp dword [rsp + 8], 2
0x00003f45      0f94c0         sete al
0x00003f48      4584c9         test r9b, r9b
0x00003f4b      0f85af040000   jne 0x4400
0x00003f51      4489c6         mov esi, r8d
0x00003f54      83f601         xor esi, 1
0x00003f57      4020f0         and al, sil
0x00003f5a      742f           je 0x3f8b                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x00003f5c      4d39fd         cmp r13, r15
0x00003f5f      7605           jbe 0x3f66
0x00003f61      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003f66      498d7701       lea rsi, [r15 + 1]
0x00003f6a      4939f5         cmp r13, rsi
0x00003f6d      7606           jbe 0x3f75                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x00003f6f      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003f75      498d7702       lea rsi, [r15 + 2]
0x00003f79      4939f5         cmp r13, rsi
0x00003f7c      7606           jbe 0x3f84
0x00003f7e      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003f84      4983c703       add r15, 3
0x00003f88      4189c0         mov r8d, eax
0x00003f8b      4d39fd         cmp r13, r15
0x00003f8e      7605           jbe 0x3f95
0x00003f90      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003f95      498d4701       lea rax, [r15 + 1]
0x00003f99      4939c5         cmp r13, rax
0x00003f9c      760d           jbe 0x3fab
0x00003f9e      89d8           mov eax, ebx
0x00003fa0      c0e806         shr al, 6
0x00003fa3      83c030         add eax, 0x30
0x00003fa6      4388443e01     mov byte [r14 + r15 + 1], al
0x00003fab      498d4702       lea rax, [r15 + 2]
0x00003faf      4939c5         cmp r13, rax
0x00003fb2      7610           jbe 0x3fc4
0x00003fb4      89d8           mov eax, ebx
0x00003fb6      c0e803         shr al, 3
0x00003fb9      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x00003fbc      83c030         add eax, 0x30
0x00003fbf      4388443e02     mov byte [r14 + r15 + 2], al
0x00003fc4      83e307         and ebx, 7
0x00003fc7      4883c501       add rbp, 1
0x00003fcb      4983c703       add r15, 3
0x00003fcf      83c330         add ebx, 0x30
0x00003fd2      4839cd         cmp rbp, rcx
0x00003fd5      0f83e5f7ffff   jae 0x37c0
0x00003fdb      89d6           mov esi, edx
0x00003fdd      4d39fd         cmp r13, r15
0x00003fe0      7604           jbe 0x3fe6
0x00003fe2      43881c3e       mov byte [r14 + r15], bl
0x00003fe6      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x00003fea      4983c701       add r15, 1
0x00003fee      84d2           test dl, dl
0x00003ff0      0f854affffff   jne 0x3f40
0x00003ff6      89f0           mov eax, esi
0x00003ff8      83f001         xor eax, 1
0x00003ffb      4421c0         and eax, r8d
0x00003ffe      4584d2         test r10b, r10b
0x00004001      740e           je 0x4011
0x00004003      4d39fd         cmp r13, r15
0x00004006      7605           jbe 0x400d
0x00004008      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000400d      4983c701       add r15, 1
0x00004011      4883c501       add rbp, 1
0x00004015      4839cd         cmp rbp, rcx
0x00004018      0f837ef7ffff   jae 0x379c
0x0000401e      84c0           test al, al
0x00004020      0f84f8030000   je 0x441e
0x00004026      4d39fd         cmp r13, r15
0x00004029      7605           jbe 0x4030
0x0000402b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004030      498d4701       lea rax, [r15 + 1]
0x00004034      4939c5         cmp r13, rax
0x00004037      7606           jbe 0x403f
0x00004039      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000403f      4983c702       add r15, 2
0x00004043      4531d2         xor r10d, r10d
0x00004046      4531c0         xor r8d, r8d
0x00004049      eb92           jmp 0x3fdd
0x0000404b      0f1f440000     nop dword [rax + rax]
0x00004050      4983ff01       cmp r15, 1
0x00004054      0f845ffeffff   je 0x3eb9
0x0000405a      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000405f      4a8d0c3f       lea rcx, [rdi + r15]
0x00004063      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x00004068      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000406c      eb0f           jmp 0x407d
0x0000406e      6690           nop
0x00004070      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x00004074      4939d0         cmp r8, rdx
0x00004077      0f843cfeffff   je 0x3eb9
0x0000407d      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x00004080      83e95b         sub ecx, 0x5b
0x00004083      80f921         cmp cl, 0x21
0x00004086      77e8           ja 0x4070                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x00004088      be01000000     mov esi, 1
0x0000408d      48d3e6         shl rsi, cl
0x00004090      4889f1         mov rcx, rsi
0x00004093      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x0000409d      4885f1         test rcx, rsi
0x000040a0      74ce           je 0x4070
0x000040a2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000040a7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000040ac      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000040b1      c74424080200.  mov dword [rsp + 8], 2
0x000040b9      807c240d00     cmp byte [rsp + 0xd], 0
0x000040be      7410           je 0x40d0
0x000040c0      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x000040c2      b804000000     mov eax, 4
0x000040c7      0f44442408     cmove eax, dword [rsp + 8]
0x000040cc      89442408       mov dword [rsp + 8], eax
0x000040d0      4883ec08       sub rsp, 8
0x000040d4      4889e9         mov rcx, rbp
0x000040d7      4c89ee         mov rsi, r13
0x000040da      ff742468       push qword [rsp + 0x68]
0x000040de      ff742478       push qword [rsp + 0x78]
0x000040e2      4c89f7         mov rdi, r14
0x000040e5      6a00           push 0
0x000040e7      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000040ef      448b442428     mov r8d, dword [rsp + 0x28]
0x000040f4      488b542430     mov rdx, qword [rsp + 0x30]
0x000040f9      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x000040fd      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004102      4883c420       add rsp, 0x20
0x00004106      4989c7         mov r15, rax
0x00004109      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004111      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000411a      4c89f8         mov rax, r15
0x0000411d      0f8500060000   jne 0x4723
0x00004123      4881c4b80000.  add rsp, 0xb8
0x0000412a      5b             pop rbx
0x0000412b      5d             pop rbp
0x0000412c      415c           pop r12
0x0000412e      415d           pop r13
0x00004130      415e           pop r14
0x00004132      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004134      c3             ret
0x00004135      0f1f00         nop dword [rax]
0x00004138      4c89dd         mov rbp, r11
0x0000413b      e979ffffff     jmp 0x40b9
0x00004140      4d39fd         cmp r13, r15
0x00004143      7605           jbe 0x414a
0x00004145      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000414a      498d4701       lea rax, [r15 + 1]
0x0000414e      4939c5         cmp r13, rax
0x00004151      7606           jbe 0x4159
0x00004153      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x00004159      498d4702       lea rax, [r15 + 2]
0x0000415d      4939c5         cmp r13, rax
0x00004160      0f86ec050000   jbe 0x4752
0x00004166      4c89ea         mov rdx, r13
0x00004169      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000416f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004174      e9d9fbffff     jmp 0x3d52
0x00004179      4489e0         mov eax, r12d
0x0000417c      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x00004181      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x00004184      e900f6ffff     jmp 0x3789                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x00004189      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000418f      e9c5f9ffff     jmp 0x3b59
0x00004194      85db           test ebx, ebx
0x00004196      0f8527f4ffff   jne 0x35c3
0x0000419c      c644240d01     mov byte [rsp + 0xd], 1
0x000041a1      4d85ed         test r13, r13
0x000041a4      0f8590050000   jne 0x473a
0x000041aa      488d05f45100.  lea rax, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000041b1      48c744245000.  mov qword [rsp + 0x50], 0
0x000041ba      c644240e01     mov byte [rsp + 0xe], 1
0x000041bf      c644247c00     mov byte [rsp + 0x7c], 0
0x000041c4      4531e4         xor r12d, r12d
0x000041c7      c644240f00     mov byte [rsp + 0xf], 0
0x000041cc      48c744241801.  mov qword [rsp + 0x18], 1
0x000041d5      4889442448     mov qword [rsp + 0x48], rax
0x000041da      41bf01000000   mov r15d, 1
0x000041e0      c74424080200.  mov dword [rsp + 8], 2
0x000041e8      e916f4ffff     jmp 0x3603                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x000041ed      0f1f00         nop dword [rax]
0x000041f0      85db           test ebx, ebx
0x000041f2      0f85f5030000   jne 0x45ed
0x000041f8      4d85ed         test r13, r13
0x000041fb      0f8425020000   je 0x4426
0x00004201      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004205      c644240e01     mov byte [rsp + 0xe], 1
0x0000420a      4531e4         xor r12d, r12d
0x0000420d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004212      48c744245000.  mov qword [rsp + 0x50], 0
0x0000421b      488d05815100.  lea rax, str.l______l                   ; 0x93a3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004222      c644240f00     mov byte [rsp + 0xf], 0
0x00004227      c644240d01     mov byte [rsp + 0xd], 1
0x0000422c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004235      41bf01000000   mov r15d, 1
0x0000423b      4889442448     mov qword [rsp + 0x48], rax
0x00004240      e9bef3ffff     jmp 0x3603
0x00004245      488d05575100.  lea rax, str.l______l                   ; 0x93a3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000424c      c644240e01     mov byte [rsp + 0xe], 1
0x00004251      c644247c00     mov byte [rsp + 0x7c], 0
0x00004256      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x00004259      48c744245000.  mov qword [rsp + 0x50], 0
0x00004262      c644240f01     mov byte [rsp + 0xf], 1
0x00004267      c644240d01     mov byte [rsp + 0xd], 1
0x0000426c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004275      4531ff         xor r15d, r15d
0x00004278      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x0000427d      c74424080500.  mov dword [rsp + 8], 5
0x00004285      e979f3ffff     jmp 0x3603
0x0000428a      c644240e01     mov byte [rsp + 0xe], 1
0x0000428f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004294      4531e4         xor r12d, r12d
0x00004297      48c744245000.  mov qword [rsp + 0x50], 0
0x000042a0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000042a5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000042a8      c644240d01     mov byte [rsp + 0xd], 1
0x000042ad      48c744241800.  mov qword [rsp + 0x18], 0
0x000042b6      48c744244800.  mov qword [rsp + 0x48], 0
0x000042bf      e93ff3ffff     jmp 0x3603
0x000042c4      837c24080a     cmp dword [rsp + 8], 0xa
0x000042c9      7456           je 0x4321
0x000042cb      488d35d55000.  lea rsi, [0x000093a7]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x000042d2      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x000042d4      ba05000000     mov edx, 5
0x000042d9      e802d1ffff     call sym.imp.dcgettext
0x000042de      4889c1         mov rcx, rax
0x000042e1      4889442468     mov qword [rsp + 0x68], rax
0x000042e6      488d05ba5000.  lea rax, [0x000093a7]                   ; "`"
0x000042ed      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x000042f0      0f8498030000   je 0x468e
0x000042f6      488d35a85000.  lea rsi, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000042fd      31ff           xor edi, edi
0x000042ff      ba05000000     mov edx, 5
0x00004304      e8d7d0ffff     call sym.imp.dcgettext
0x00004309      4889c1         mov rcx, rax
0x0000430c      4889442460     mov qword [rsp + 0x60], rax
0x00004311      488d058d5000.  lea rax, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004318      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000431b      0f8483030000   je 0x46a4
0x00004321      4531ff         xor r15d, r15d
0x00004324      85db           test ebx, ebx
0x00004326      0f84c1010000   je 0x44ed
0x0000432c      85db           test ebx, ebx
0x0000432e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004333      0f9544240f     setne byte [rsp + 0xf]
0x00004338      4531e4         xor r12d, r12d
0x0000433b      4889df         mov rdi, rbx
0x0000433e      e8bdd0ffff     call sym.imp.strlen
0x00004343      48895c2448     mov qword [rsp + 0x48], rbx
0x00004348      4889442418     mov qword [rsp + 0x18], rax
0x0000434d      c644240e01     mov byte [rsp + 0xe], 1
0x00004352      c644247c00     mov byte [rsp + 0x7c], 0
0x00004357      48c744245000.  mov qword [rsp + 0x50], 0
0x00004360      c644240d01     mov byte [rsp + 0xd], 1
0x00004365      e999f2ffff     jmp 0x3603
0x0000436a      c644240e01     mov byte [rsp + 0xe], 1
0x0000436f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004374      4531e4         xor r12d, r12d
0x00004377      48c744245000.  mov qword [rsp + 0x50], 0
0x00004380      c644240f00     mov byte [rsp + 0xf], 0
0x00004385      4531ff         xor r15d, r15d
0x00004388      c644240d00     mov byte [rsp + 0xd], 0
0x0000438d      48c744241800.  mov qword [rsp + 0x18], 0
0x00004396      48c744244800.  mov qword [rsp + 0x48], 0
0x0000439f      e95ff2ffff     jmp 0x3603
0x000043a4      c644240e01     mov byte [rsp + 0xe], 1
0x000043a9      c644247c00     mov byte [rsp + 0x7c], 0
0x000043ae      4531e4         xor r12d, r12d
0x000043b1      48c744245000.  mov qword [rsp + 0x50], 0
0x000043ba      c644240f01     mov byte [rsp + 0xf], 1
0x000043bf      c644240d01     mov byte [rsp + 0xd], 1
0x000043c4      e91af2ffff     jmp 0x35e3
0x000043c9      4d39fd         cmp r13, r15
0x000043cc      7605           jbe 0x43d3
0x000043ce      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x000043d3      488d4102       lea rax, [rcx + 2]
0x000043d7      4939c5         cmp r13, rax
0x000043da      7606           jbe 0x43e2
0x000043dc      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x000043e2      4489e0         mov eax, r12d
0x000043e5      4c8d7903       lea r15, [rcx + 3]
0x000043e9      4531e4         xor r12d, r12d
0x000043ec      bb30000000     mov ebx, 0x30                           ; '0'
0x000043f1      e962f3ffff     jmp 0x3758
0x000043f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00004400      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004405      4c89dd         mov rbp, r11
0x00004408      885c240d       mov byte [rsp + 0xd], bl
0x0000440c      e9a8fcffff     jmp 0x40b9
0x00004411      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004416      4531e4         xor r12d, r12d
0x00004419      e902fbffff     jmp 0x3f20
0x0000441e      4531d2         xor r10d, r10d
0x00004421      e9b7fbffff     jmp 0x3fdd
0x00004426      48c744245000.  mov qword [rsp + 0x50], 0
0x0000442f      c644240e01     mov byte [rsp + 0xe], 1
0x00004434      4531e4         xor r12d, r12d
0x00004437      c644247c00     mov byte [rsp + 0x7c], 0
0x0000443c      e9dafdffff     jmp 0x421b
0x00004441      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004446      4c89f6         mov rsi, r14
0x00004449      4c89e9         mov rcx, r13
0x0000444c      4889d8         mov rax, rbx
0x0000444f      4889df         mov rdi, rbx
0x00004452      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004458      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x0000445d      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x00004465      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x00004468      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000446e      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004476      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000447b      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004480      7326           jae 0x44a8
0x00004482      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004485      7510           jne 0x4497
0x00004487      eb1f           jmp 0x44a8
0x00004489      0f1f80000000.  nop dword [rax]
0x00004490      41803c0100     cmp byte [r9 + rax], 0
0x00004495      740e           je 0x44a5
0x00004497      4883c001       add rax, 1
0x0000449b      488d540500     lea rdx, [rbp + rax]
0x000044a0      4939d3         cmp r11, rdx
0x000044a3      77eb           ja 0x4490
0x000044a5      4889c7         mov rdi, rax
0x000044a8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000044ad      4531e4         xor r12d, r12d
0x000044b0      e961faffff     jmp 0x3f16
0x000044b5      4889df         mov rdi, rbx
0x000044b8      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000044be      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000044c3      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000044c9      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000044d1      4531e4         xor r12d, r12d
0x000044d4      4c8b742440     mov r14, qword [rsp + 0x40]
0x000044d9      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000044de      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000044e3      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000044e8      e929faffff     jmp 0x3f16
0x000044ed      488b542468     mov rdx, qword [rsp + 0x68]
0x000044f2      0fb602         movzx eax, byte [rdx]
0x000044f5      84c0           test al, al
0x000044f7      0f842ffeffff   je 0x432c
0x000044fd      0f1f00         nop dword [rax]
0x00004500      4d39fd         cmp r13, r15
0x00004503      7604           jbe 0x4509
0x00004505      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004509      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x0000450d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004512      84c0           test al, al
0x00004514      75ea           jne 0x4500
0x00004516      e911feffff     jmp 0x432c
0x0000451b      89d0           mov eax, edx
0x0000451d      e955f5ffff     jmp 0x3a77
0x00004522      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004526      80fb3e         cmp bl, 0x3e
0x00004529      0f8771f8ffff   ja 0x3da0
0x0000452f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004539      480fa3d8       bt rax, rbx
0x0000453d      0f835df8ffff   jae 0x3da0
0x00004543      807c240f00     cmp byte [rsp + 0xf], 0
0x00004548      0f85e4010000   jne 0x4732                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x0000454e      4d39fd         cmp r13, r15
0x00004551      7605           jbe 0x4558
0x00004553      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004558      498d4701       lea rax, [r15 + 1]
0x0000455c      4939c5         cmp r13, rax
0x0000455f      7606           jbe 0x4567
0x00004561      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004567      498d4702       lea rax, [r15 + 2]
0x0000456b      4939c5         cmp r13, rax
0x0000456e      7606           jbe 0x4576
0x00004570      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004576      498d4703       lea rax, [r15 + 3]
0x0000457a      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x0000457d      7606           jbe 0x4585
0x0000457f      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004585      4983c704       add r15, 4
0x00004589      31d2           xor edx, edx
0x0000458b      4531e4         xor r12d, r12d
0x0000458e      31c0           xor eax, eax
0x00004590      4889cd         mov rbp, rcx
0x00004593      e9c0f1ffff     jmp 0x3758
0x00004598      85db           test ebx, ebx
0x0000459a      0f8488010000   je 0x4728
0x000045a0      488d05fe4d00.  lea rax, [0x000093a5]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000045a7      c644240e01     mov byte [rsp + 0xe], 1
0x000045ac      c644247c00     mov byte [rsp + 0x7c], 0
0x000045b1      4531e4         xor r12d, r12d
0x000045b4      48c744245000.  mov qword [rsp + 0x50], 0
0x000045bd      c644240f01     mov byte [rsp + 0xf], 1
0x000045c2      c644240d00     mov byte [rsp + 0xd], 0
0x000045c7      48c744241801.  mov qword [rsp + 0x18], 1
0x000045d0      4531ff         xor r15d, r15d
0x000045d3      4889442448     mov qword [rsp + 0x48], rax
0x000045d8      e926f0ffff     jmp 0x3603
0x000045dd      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x000045e0      4c89dd         mov rbp, r11
0x000045e3      0fb644240f     movzx eax, byte [rsp + 0xf]
0x000045e8      e9ccfaffff     jmp 0x40b9
0x000045ed      488d05af4d00.  lea rax, str.l______l                   ; 0x93a3 ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961sc\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000045f4      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x000045f9      c644247c00     mov byte [rsp + 0x7c], 0
0x000045fe      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004601      48c744245000.  mov qword [rsp + 0x50], 0
0x0000460a      c644240f01     mov byte [rsp + 0xf], 1
0x0000460f      c644240d01     mov byte [rsp + 0xd], 1
0x00004614      48c744241801.  mov qword [rsp + 0x18], 1
0x0000461d      4531ff         xor r15d, r15d
0x00004620      4889442448     mov qword [rsp + 0x48], rax
0x00004625      e9d9efffff     jmp 0x3603
0x0000462a      89d0           mov eax, edx
0x0000462c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004631      4885db         test rbx, rbx
0x00004634      742c           je 0x4662
0x00004636      84c0           test al, al
0x00004638      7428           je 0x4662
0x0000463a      0fb60b         movzx ecx, byte [rbx]
0x0000463d      4889d8         mov rax, rbx
0x00004640      84c9           test cl, cl
0x00004642      741e           je 0x4662
0x00004644      4c89fa         mov rdx, r15
0x00004647      4c29f8         sub rax, r15
0x0000464a      4939d5         cmp r13, rdx
0x0000464d      7604           jbe 0x4653
0x0000464f      41880c16       mov byte [r14 + rdx], cl
0x00004653      4883c201       add rdx, 1
0x00004657      0fb60c10       movzx ecx, byte [rax + rdx]
0x0000465b      84c9           test cl, cl
0x0000465d      75eb           jne 0x464a
0x0000465f      4989d7         mov r15, rdx
0x00004662      4d39fd         cmp r13, r15
0x00004665      0f869efaffff   jbe 0x4109
0x0000466b      43c6043e00     mov byte [r14 + r15], 0
0x00004670      e994faffff     jmp 0x4109
0x00004675      837c240802     cmp dword [rsp + 8], 2
0x0000467a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x0000467f      4c89dd         mov rbp, r11
0x00004682      0f94c0         sete al
0x00004685      885c240d       mov byte [rsp + 0xd], bl
0x00004689      e92bfaffff     jmp 0x40b9
0x0000468e      8b742408       mov esi, dword [rsp + 8]
0x00004692      4889cf         mov rdi, rcx
0x00004695      e8a6edffff     call sym.gettext_quote.part.1
0x0000469a      4889442468     mov qword [rsp + 0x68], rax
0x0000469f      e952fcffff     jmp 0x42f6
0x000046a4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x000046a8      4889cf         mov rdi, rcx
0x000046ab      e890edffff     call sym.gettext_quote.part.1
0x000046b0      4889442460     mov qword [rsp + 0x60], rax
0x000046b5      e967fcffff     jmp 0x4321
0x000046ba      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000046bf      4c89dd         mov rbp, r11
0x000046c2      89d0           mov eax, edx
0x000046c4      885c240d       mov byte [rsp + 0xd], bl
0x000046c8      e9ecf9ffff     jmp 0x40b9
0x000046cd      4883ec08       sub rsp, 8
0x000046d1      41b805000000   mov r8d, 5
0x000046d7      4c89d9         mov rcx, r11
0x000046da      ff742468       push qword [rsp + 0x68]
0x000046de      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x000046e2      4c89f7         mov rdi, r14
0x000046e5      ff742438       push qword [rsp + 0x38]
0x000046e9      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x000046f1      488b542430     mov rdx, qword [rsp + 0x30]
0x000046f6      488b742470     mov rsi, qword [rsp + 0x70]
0x000046fb      e830eeffff     call sym.quotearg_buffer_restyled
0x00004700      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004704      4989c7         mov r15, rax
0x00004707      e9fdf9ffff     jmp 0x4109
0x0000470c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004711      e916ffffff     jmp 0x462c
0x00004716      c74424080200.  mov dword [rsp + 8], 2
0x0000471e      e996f9ffff     jmp 0x40b9
0x00004723      e8f8ccffff     call sym.imp.__stack_chk_fail
0x00004728      c644240d00     mov byte [rsp + 0xd], 0
0x0000472d      e96ffaffff     jmp 0x41a1
0x00004732      4c89dd         mov rbp, r11
0x00004735      e996f9ffff     jmp 0x40d0
0x0000473a      c644240e01     mov byte [rsp + 0xe], 1
0x0000473f      31c0           xor eax, eax
0x00004741      4531e4         xor r12d, r12d
0x00004744      48c744245000.  mov qword [rsp + 0x50], 0
0x0000474d      e9a2f5ffff     jmp 0x3cf4
0x00004752      4c89ea         mov rdx, r13
0x00004755      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x0000475a      e9f3f5ffff     jmp 0x3d52
0x0000475f      e8dccbffff     call sym.imp.abort
0x00004764      6690           nop
0x00004766      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004770      4157           push r15
0x00004772      4156           push r14
0x00004774      4c63ff         movsxd r15, edi
0x00004777      4155           push r13
0x00004779      4154           push r12
0x0000477b      4989d6         mov r14, rdx
0x0000477e      55             push rbp
0x0000477f      53             push rbx
0x00004780      4889cd         mov rbp, rcx
0x00004783      4883ec28       sub rsp, 0x28
0x00004787      4889742408     mov qword [rsp + 8], rsi
0x0000478c      e8bfcbffff     call sym.imp.__errno_location
0x00004791      4989c5         mov r13, rax
0x00004794      8b00           mov eax, dword [rax]
0x00004796      4585ff         test r15d, r15d
0x00004799      488b1dc07820.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x000047a0      89442418       mov dword [rsp + 0x18], eax
0x000047a4      0f8867010000   js 0x4911
0x000047aa      44393da77820.  cmp dword [obj.nslots], r15d            ; [0x20c058:4]=1
0x000047b1      7f62           jg 0x4815
0x000047b3      4181ffffffff.  cmp r15d, 0x7fffffff
0x000047ba      0f8456010000   je 0x4916
0x000047c0      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x000047c4      488d05a57820.  lea rax, obj.slotvec0                   ; 0x20c070
0x000047cb      4963f4         movsxd rsi, r12d
0x000047ce      48c1e604       shl rsi, 4
0x000047d2      4839c3         cmp rbx, rax
0x000047d5      0f8415010000   je 0x48f0
0x000047db      4889df         mov rdi, rbx
0x000047de      e8ed120000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x000047e3      4889c3         mov rbx, rax
0x000047e6      488905737820.  mov qword [obj.slotvec], rax            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x000047ed      48633d647820.  movsxd rdi, dword [obj.nslots]          ; [0x20c058:4]=1
0x000047f4      4489e2         mov edx, r12d
0x000047f7      31f6           xor esi, esi
0x000047f9      29fa           sub edx, edi
0x000047fb      48c1e704       shl rdi, 4
0x000047ff      4863d2         movsxd rdx, edx
0x00004802      4801df         add rdi, rbx
0x00004805      48c1e204       shl rdx, 4
0x00004809      e852ccffff     call sym.imp.memset
0x0000480e      448925437820.  mov dword [obj.nslots], r12d            ; [0x20c058:4]=1
0x00004815      8b4504         mov eax, dword [rbp + 4]
0x00004818      49c1e704       shl r15, 4
0x0000481c      4883ec08       sub rsp, 8
0x00004820      4c01fb         add rbx, r15
0x00004823      4c8d7d08       lea r15, [rbp + 8]
0x00004827      448b4500       mov r8d, dword [rbp]
0x0000482b      4c8b1b         mov r11, qword [rbx]
0x0000482e      4c8b6308       mov r12, qword [rbx + 8]
0x00004832      4c89f1         mov rcx, r14
0x00004835      83c801         or eax, 1
0x00004838      89442424       mov dword [rsp + 0x24], eax
0x0000483c      ff7530         push qword [rbp + 0x30]
0x0000483f      4189c1         mov r9d, eax
0x00004842      ff7528         push qword [rbp + 0x28]
0x00004845      4157           push r15
0x00004847      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x0000484a      488b542428     mov rdx, qword [rsp + 0x28]
0x0000484f      4c89e7         mov rdi, r12
0x00004852      4c895c2430     mov qword [rsp + 0x30], r11
0x00004857      e8d4ecffff     call sym.quotearg_buffer_restyled
0x0000485c      4883c420       add rsp, 0x20
0x00004860      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004865      4939c3         cmp r11, rax
0x00004868      7767           ja 0x48d1
0x0000486a      488d7001       lea rsi, [rax + 1]
0x0000486e      488d056b7820.  lea rax, obj.slot0                      ; 0x20c0e0
0x00004875      4939c4         cmp r12, rax
0x00004878      488933         mov qword [rbx], rsi
0x0000487b      7412           je 0x488f
0x0000487d      4c89e7         mov rdi, r12
0x00004880      4889742410     mov qword [rsp + 0x10], rsi
0x00004885      e8a6caffff     call sym.imp.free
0x0000488a      488b742410     mov rsi, qword [rsp + 0x10]
0x0000488f      4889f7         mov rdi, rsi
0x00004892      4889742410     mov qword [rsp + 0x10], rsi
0x00004897      e8d4110000     call sym.xmalloc
0x0000489c      4883ec08       sub rsp, 8
0x000048a0      48894308       mov qword [rbx + 8], rax
0x000048a4      448b4500       mov r8d, dword [rbp]
0x000048a8      ff7530         push qword [rbp + 0x30]
0x000048ab      ff7528         push qword [rbp + 0x28]
0x000048ae      4c89f1         mov rcx, r14
0x000048b1      4157           push r15
0x000048b3      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x000048b8      4889c7         mov rdi, rax
0x000048bb      488b542428     mov rdx, qword [rsp + 0x28]
0x000048c0      488b742430     mov rsi, qword [rsp + 0x30]
0x000048c5      4989c4         mov r12, rax
0x000048c8      e863ecffff     call sym.quotearg_buffer_restyled
0x000048cd      4883c420       add rsp, 0x20
0x000048d1      8b442418       mov eax, dword [rsp + 0x18]
0x000048d5      41894500       mov dword [r13], eax
0x000048d9      4883c428       add rsp, 0x28
0x000048dd      4c89e0         mov rax, r12
0x000048e0      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x000048e1      5d             pop rbp
0x000048e2      415c           pop r12
0x000048e4      415d           pop r13
0x000048e6      415e           pop r14
0x000048e8      415f           pop r15
0x000048ea      c3             ret
0x000048eb      0f1f440000     nop dword [rax + rax]
0x000048f0      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x000048f2      e8d9110000     call sym.xrealloc
0x000048f7      660f6f057177.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x000048ff      4889c3         mov rbx, rax
0x00004902      488905577720.  mov qword [obj.slotvec], rax            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004909      0f1100         movups xmmword [rax], xmm0
0x0000490c      e9dcfeffff     jmp 0x47ed
0x00004911      e82acaffff     call sym.imp.abort
0x00004916      e8a5130000     call sym.xalloc_die
0x0000491b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004920      4154           push r12
0x00004922      55             push rbp
0x00004923      53             push rbx
0x00004924      4889fb         mov rbx, rdi
0x00004927      e824caffff     call sym.imp.__errno_location
0x0000492c      448b20         mov r12d, dword [rax]
0x0000492f      4889c5         mov rbp, rax
0x00004932      488d05a77820.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004939      4885db         test rbx, rbx
0x0000493c      be38000000     mov esi, 0x38                           ; '8'
0x00004941      480f44d8       cmove rbx, rax
0x00004945      4889df         mov rdi, rbx
0x00004948      e823130000     call sym.xmemdup
0x0000494d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004951      5b             pop rbx
0x00004952      5d             pop rbp
0x00004953      415c           pop r12
0x00004955      c3             ret
0x00004956      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004960      488d05797820.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004967      4885ff         test rdi, rdi
0x0000496a      480f44f8       cmove rdi, rax
0x0000496e      8b07           mov eax, dword [rdi]
0x00004970      c3             ret
0x00004971      0f1f440000     nop dword [rax + rax]
0x00004976      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004980      488d05597820.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004987      4885ff         test rdi, rdi
0x0000498a      480f44f8       cmove rdi, rax
0x0000498e      8937           mov dword [rdi], esi
0x00004990      c3             ret
0x00004991      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004996      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x000049a0      488d05397820.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x000049a7      4885ff         test rdi, rdi
0x000049aa      89f1           mov ecx, esi
0x000049ac      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x000049b0      89f0           mov eax, esi
0x000049b2      83e11f         and ecx, 0x1f
0x000049b5      c0e805         shr al, 5
0x000049b8      0fb6c0         movzx eax, al
0x000049bb      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x000049c0      8b37           mov esi, dword [rdi]
0x000049c2      89f0           mov eax, esi
0x000049c4      d3e8           shr eax, cl
0x000049c6      31c2           xor edx, eax
0x000049c8      83e001         and eax, 1
0x000049cb      83e201         and edx, 1
0x000049ce      d3e2           shl edx, cl
0x000049d0      31f2           xor edx, esi
0x000049d2      8917           mov dword [rdi], edx
0x000049d4      c3             ret
0x000049d5      90             nop
0x000049d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x000049e0      488d05f97720.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x000049e7      4885ff         test rdi, rdi
0x000049ea      480f44f8       cmove rdi, rax
0x000049ee      8b4704         mov eax, dword [rdi + 4]
0x000049f1      897704         mov dword [rdi + 4], esi
0x000049f4      c3             ret
0x000049f5      90             nop
0x000049f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004a00      488d05d97720.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004a07      4885ff         test rdi, rdi
0x00004a0a      480f44f8       cmove rdi, rax
0x00004a0e      4885f6         test rsi, rsi
0x00004a11      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004a17      740e           je 0x4a27
0x00004a19      4885d2         test rdx, rdx
0x00004a1c      7409           je 0x4a27
0x00004a1e      48897728       mov qword [rdi + 0x28], rsi
0x00004a22      48895730       mov qword [rdi + 0x30], rdx
0x00004a26      c3             ret
0x00004a27      4883ec08       sub rsp, 8
0x00004a2b      e810c9ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004a30      4157           push r15
0x00004a32      4156           push r14
0x00004a34      488d05a57720.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004a3b      4155           push r13
0x00004a3d      4154           push r12
0x00004a3f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004a42      55             push rbp
0x00004a43      53             push rbx
0x00004a44      4c89c3         mov rbx, r8
0x00004a47      4989f6         mov r14, rsi
0x00004a4a      4989d7         mov r15, rdx
0x00004a4d      4883ec18       sub rsp, 0x18
0x00004a51      4d85c0         test r8, r8
0x00004a54      480f44d8       cmove rbx, rax
0x00004a58      48894c2408     mov qword [rsp + 8], rcx
0x00004a5d      e8eec8ffff     call sym.imp.__errno_location
0x00004a62      448b20         mov r12d, dword [rax]
0x00004a65      4889c5         mov rbp, rax
0x00004a68      488d4308       lea rax, [rbx + 8]
0x00004a6c      4883ec08       sub rsp, 8
0x00004a70      448b4b04       mov r9d, dword [rbx + 4]
0x00004a74      ff7330         push qword [rbx + 0x30]
0x00004a77      448b03         mov r8d, dword [rbx]
0x00004a7a      ff7328         push qword [rbx + 0x28]
0x00004a7d      4c89fa         mov rdx, r15
0x00004a80      50             push rax
0x00004a81      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004a86      4c89f6         mov rsi, r14
0x00004a89      4c89ef         mov rdi, r13
0x00004a8c      e89feaffff     call sym.quotearg_buffer_restyled
0x00004a91      44896500       mov dword [rbp], r12d
0x00004a95      4883c438       add rsp, 0x38
0x00004a99      5b             pop rbx
0x00004a9a      5d             pop rbp
0x00004a9b      415c           pop r12
0x00004a9d      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004a9f      415e           pop r14
0x00004aa1      415f           pop r15
0x00004aa3      c3             ret
0x00004aa4      6690           nop
0x00004aa6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00004ab0      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00004ab2      4156           push r14
0x00004ab4      488d05257720.  lea rax, obj.default_quoting_options    ; 0x20c1e0
0x00004abb      4155           push r13
0x00004abd      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x00004abf      4989d4         mov r12, rdx
0x00004ac2      55             push rbp
0x00004ac3      53             push rbx
0x00004ac4      4889cb         mov rbx, rcx
0x00004ac7      4989fe         mov r14, rdi
0x00004aca      4989f7         mov r15, rsi
0x00004acd      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00004ad1      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00004ad4      480f44d8       cmove rbx, rax
0x00004ad8      31ed           xor ebp, ebp
0x00004ada      e871c8ffff     call sym.imp.__errno_location
0x00004adf      4d85e4         test r12, r12
0x00004ae2      4989c5         mov r13, rax
0x00004ae5      8b00           mov eax, dword [rax]
0x00004ae7      400f94c5       sete bpl
0x00004aeb      0b6b04         or ebp, dword [rbx + 4]
0x00004aee      4c8d5308       lea r10, [rbx + 8]
0x00004af2      4883ec08       sub rsp, 8
0x00004af6      448b03         mov r8d, dword [rbx]
0x00004af9      4c89f9         mov rcx, r15
0x00004afc      89442414       mov dword [rsp + 0x14], eax
0x00004b00      ff7330         push qword [rbx + 0x30]
0x00004b03      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00004b06      ff7328         push qword [rbx + 0x28]
0x00004b09      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x00004b0b      31f6           xor esi, esi
0x00004b0d      4189e9         mov r9d, ebp
0x00004b10      31ff           xor edi, edi
0x00004b12      4c89542440     mov qword [rsp + 0x40], r10
0x00004b17      e814eaffff     call sym.quotearg_buffer_restyled
0x00004b1c      488d7001       lea rsi, [rax + 1]
0x00004b20      4889442448     mov qword [rsp + 0x48], rax
0x00004b25      4883c420       add rsp, 0x20
0x00004b29      4889f7         mov rdi, rsi
0x00004b2c      4889742418     mov qword [rsp + 0x18], rsi
0x00004b31      e83a0f0000     call sym.xmalloc
0x00004b36      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x00004b3b      4883ec08       sub rsp, 8
0x00004b3f      ff7330         push qword [rbx + 0x30]
0x00004b42      ff7328         push qword [rbx + 0x28]
0x00004b45      4c8b542438     mov r10, qword [rsp + 0x38]
0x00004b4a      4189e9         mov r9d, ebp
0x00004b4d      448b03         mov r8d, dword [rbx]
0x00004b50      4c89f9         mov rcx, r15
0x00004b53      4c89f2         mov rdx, r14
0x00004b56      4889c7         mov rdi, rax
0x00004b59      4152           push r10
0x00004b5b      488b742438     mov rsi, qword [rsp + 0x38]
0x00004b60      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x00004b65      8b44242c       mov eax, dword [rsp + 0x2c]
0x00004b69      4883c420       add rsp, 0x20
0x00004b6d      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x00004b70      41894500       mov dword [r13], eax
0x00004b74      7409           je 0x4b7f
0x00004b76      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x00004b7b      4d891c24       mov qword [r12], r11
0x00004b7f      488b442410     mov rax, qword [rsp + 0x10]
0x00004b84      4883c438       add rsp, 0x38
0x00004b88      5b             pop rbx
0x00004b89      5d             pop rbp
0x00004b8a      415c           pop r12
0x00004b8c      415d           pop r13
0x00004b8e      415e           pop r14
0x00004b90      415f           pop r15
0x00004b92      c3             ret
0x00004b93      0f1f00         nop dword [rax]
0x00004b96      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x00004ba0      4889d1         mov rcx, rdx
0x00004ba3      31d2           xor edx, edx
0x00004ba5      e906ffffff     jmp sym.quotearg_alloc_mem
0x00004baa      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00004bb0      8b05a2742000   mov eax, dword [obj.nslots]             ; [0x20c058:4]=1
0x00004bb6      4154           push r12
0x00004bb8      4c8b25a17420.  mov r12, qword [obj.slotvec]            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004bbf      55             push rbp
0x00004bc0      53             push rbx
0x00004bc1      83f801         cmp eax, 1
0x00004bc4      7e2b           jle 0x4bf1                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00004bc6      83e802         sub eax, 2
0x00004bc9      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x00004bce      48c1e004       shl rax, 4
0x00004bd2      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00004bd7      660f1f840000.  nop word [rax + rax]
0x00004be0      488b3b         mov rdi, qword [rbx]
0x00004be3      4883c310       add rbx, 0x10
0x00004be7      e844c7ffff     call sym.imp.free
0x00004bec      4839eb         cmp rbx, rbp
0x00004bef      75ef           jne 0x4be0
0x00004bf1      498b7c2408     mov rdi, qword [r12 + 8]
0x00004bf6      488d1de37420.  lea rbx, obj.slot0                      ; 0x20c0e0
0x00004bfd      4839df         cmp rdi, rbx
0x00004c00      7417           je 0x4c19
0x00004c02      e829c7ffff     call sym.imp.free
0x00004c07      48c7055e7420.  mov qword [obj.slotvec0], 0x100         ; [0x20c070:8]=256
0x00004c12      48891d5f7420.  mov qword [0x0020c078], rbx             ; [0x20c078:8]=0x20c0e0 obj.slot0
0x00004c19      488d1d507420.  lea rbx, obj.slotvec0                   ; 0x20c070
0x00004c20      4939dc         cmp r12, rbx
0x00004c23      740f           je 0x4c34
0x00004c25      4c89e7         mov rdi, r12
0x00004c28      e803c7ffff     call sym.imp.free
0x00004c2d      48891d2c7420.  mov qword [obj.slotvec], rbx            ; [0x20c060:8]=0x20c070 obj.slotvec0 ; "p\xc0 "
0x00004c34      5b             pop rbx
0x00004c35      c70519742000.  mov dword [obj.nslots], 1               ; [0x20c058:4]=1
0x00004c3f      5d             pop rbp
0x00004c40      415c           pop r12
0x00004c42      c3             ret
0x00004c43      0f1f00         nop dword [rax]
0x00004c46      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x00004c50      488d0d897520.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004c57      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004c5e      e90dfbffff     jmp sym.quotearg_n_options
0x00004c63      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x00004c66      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x00004c70      488d0d697520.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004c77      e9f4faffff     jmp sym.quotearg_n_options
0x00004c7c      0f1f4000       nop dword [rax]
;-- quotearg:
0x00004c80      488d0d597520.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004c87      4889fe         mov rsi, rdi
0x00004c8a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004c91      31ff           xor edi, edi
0x00004c93      e9d8faffff     jmp sym.quotearg_n_options
0x00004c98      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x00004ca0      488d0d397520.  lea rcx, obj.default_quoting_options    ; 0x20c1e0
0x00004ca7      4889f2         mov rdx, rsi
0x00004caa      4889fe         mov rsi, rdi
0x00004cad      31ff           xor edi, edi
0x00004caf      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00004cb4      6690           nop
0x00004cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00004cc0      4883ec48       sub rsp, 0x48
0x00004cc4      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00004cc7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004cd0      4889542438     mov qword [rsp + 0x38], rdx
0x00004cd5      31d2           xor edx, edx
0x00004cd7      83fe0a         cmp esi, 0xa
0x00004cda      7468           je 0x4d44
0x00004cdc      893424         mov dword [rsp], esi
0x00004cdf      4889e1         mov rcx, rsp
0x00004ce2      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004ce9      4889c6         mov rsi, rax
0x00004cec      48c744240400.  mov qword [rsp + 4], 0
0x00004cf5      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004cfe      48c744241400.  mov qword [rsp + 0x14], 0
0x00004d07      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d10      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00004d19      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004d22      c74424340000.  mov dword [rsp + 0x34], 0
0x00004d2a      e841faffff     call sym.quotearg_n_options
0x00004d2f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004d34      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004d3d      750a           jne 0x4d49                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x00004d3f      4883c448       add rsp, 0x48
0x00004d43      c3             ret
0x00004d44      e8f7c5ffff     call sym.imp.abort
0x00004d49      e8d2c6ffff     call sym.imp.__stack_chk_fail
0x00004d4e      6690           nop
;-- quotearg_n_style_mem:
0x00004d50      4883ec48       sub rsp, 0x48
0x00004d54      4889d0         mov rax, rdx
0x00004d57      4889ca         mov rdx, rcx
0x00004d5a      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00004d63      48894c2438     mov qword [rsp + 0x38], rcx
0x00004d68      31c9           xor ecx, ecx
0x00004d6a      83fe0a         cmp esi, 0xa
0x00004d6d      7461           je 0x4dd0
0x00004d6f      893424         mov dword [rsp], esi
0x00004d72      4889e1         mov rcx, rsp
0x00004d75      4889c6         mov rsi, rax
0x00004d78      48c744240400.  mov qword [rsp + 4], 0
0x00004d81      48c744240c00.  mov qword [rsp + 0xc], 0
0x00004d8a      48c744241400.  mov qword [rsp + 0x14], 0
0x00004d93      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004d9c      48c744242400.  mov qword [rsp + 0x24], 0
0x00004da5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004dae      c74424340000.  mov dword [rsp + 0x34], 0
0x00004db6      e8b5f9ffff     call sym.quotearg_n_options
0x00004dbb      488b542438     mov rdx, qword [rsp + 0x38]
0x00004dc0      644833142528.  xor rdx, qword fs:[0x28]
0x00004dc9      750a           jne 0x4dd5
0x00004dcb      4883c448       add rsp, 0x48
0x00004dcf      c3             ret
0x00004dd0      e86bc5ffff     call sym.imp.abort
0x00004dd5      e846c6ffff     call sym.imp.__stack_chk_fail
0x00004dda      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00004de0      4889f2         mov rdx, rsi
0x00004de3      89fe           mov esi, edi
0x00004de5      31ff           xor edi, edi
0x00004de7      e9d4feffff     jmp sym.quotearg_n_style
0x00004dec      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00004df0      4889d1         mov rcx, rdx
0x00004df3      4889f2         mov rdx, rsi
0x00004df6      89fe           mov esi, edi
0x00004df8      31ff           xor edi, edi
0x00004dfa      e951ffffff     jmp sym.quotearg_n_style_mem
0x00004dff      90             nop
;-- quotearg_char_mem:
0x00004e00      4883ec48       sub rsp, 0x48
0x00004e04      89d1           mov ecx, edx
0x00004e06      64488b042528.  mov rax, qword fs:[0x28]
0x00004e0f      4889442438     mov qword [rsp + 0x38], rax
0x00004e14      31c0           xor eax, eax
0x00004e16      488b05f37320.  mov rax, qword [0x0020c210]             ; [0x20c210:8]=0
0x00004e1d      4989e0         mov r8, rsp
0x00004e20      83e11f         and ecx, 0x1f
0x00004e23      660f6f05b573.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004e2b      4889442430     mov qword [rsp + 0x30], rax
0x00004e30      89d0           mov eax, edx
0x00004e32      0f290424       movaps xmmword [rsp], xmm0
0x00004e36      c0e805         shr al, 5
0x00004e39      0fb6c0         movzx eax, al
0x00004e3c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00004e41      660f6f05a773.  movdqa xmm0, xmmword [0x0020c1f0]
0x00004e49      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004e4e      660f6f05aa73.  movdqa xmm0, xmmword [0x0020c200]
0x00004e56      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004e5b      418b11         mov edx, dword [r9]
0x00004e5e      89d0           mov eax, edx
0x00004e60      d3e8           shr eax, cl
0x00004e62      f7d0           not eax
0x00004e64      83e001         and eax, 1
0x00004e67      d3e0           shl eax, cl
0x00004e69      4c89c1         mov rcx, r8
0x00004e6c      31d0           xor eax, edx
0x00004e6e      4889f2         mov rdx, rsi
0x00004e71      4889fe         mov rsi, rdi
0x00004e74      418901         mov dword [r9], eax
0x00004e77      31ff           xor edi, edi
0x00004e79      e8f2f8ffff     call sym.quotearg_n_options
0x00004e7e      488b742438     mov rsi, qword [rsp + 0x38]
0x00004e83      644833342528.  xor rsi, qword fs:[0x28]
0x00004e8c      7505           jne 0x4e93
0x00004e8e      4883c448       add rsp, 0x48
0x00004e92      c3             ret
0x00004e93      e888c5ffff     call sym.imp.__stack_chk_fail
0x00004e98      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x00004ea0      400fbed6       movsx edx, sil
0x00004ea4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004eab      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00004eb0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004eb5      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x00004ebc      e93fffffff     jmp sym.quotearg_char_mem
0x00004ec1      0f1f440000     nop dword [rax + rax]
0x00004ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00004ed0      ba3a000000     mov edx, 0x3a                           ; ':'
0x00004ed5      e926ffffff     jmp sym.quotearg_char_mem
0x00004eda      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00004ee0      4883ec48       sub rsp, 0x48
0x00004ee4      4889d0         mov rax, rdx
0x00004ee7      64488b142528.  mov rdx, qword fs:[0x28]
0x00004ef0      4889542438     mov qword [rsp + 0x38], rdx
0x00004ef5      31d2           xor edx, edx
0x00004ef7      83fe0a         cmp esi, 0xa
0x00004efa      7468           je 0x4f64
0x00004efc      893424         mov dword [rsp], esi
0x00004eff      4889e1         mov rcx, rsp
0x00004f02      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00004f09      4889c6         mov rsi, rax
0x00004f0c      48c744240400.  mov qword [rsp + 4], 0
0x00004f15      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x00004f1e      48c744241400.  mov qword [rsp + 0x14], 0
0x00004f27      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00004f30      48c744242400.  mov qword [rsp + 0x24], 0
0x00004f39      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00004f42      c74424340000.  mov dword [rsp + 0x34], 0
0x00004f4a      e821f8ffff     call sym.quotearg_n_options
0x00004f4f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00004f54      6448330c2528.  xor rcx, qword fs:[0x28]
0x00004f5d      750a           jne 0x4f69
0x00004f5f      4883c448       add rsp, 0x48
0x00004f63      c3             ret
0x00004f64      e8d7c3ffff     call sym.imp.abort
0x00004f69      e8b2c4ffff     call sym.imp.__stack_chk_fail
0x00004f6e      6690           nop
;-- quotearg_n_custom_mem:
0x00004f70      4883ec48       sub rsp, 0x48
0x00004f74      4989c9         mov r9, rcx
0x00004f77      488b0d927220.  mov rcx, qword [0x0020c210]             ; [0x20c210:8]=0
0x00004f7e      660f6f055a72.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x00004f86      64488b042528.  mov rax, qword fs:[0x28]
0x00004f8f      4889442438     mov qword [rsp + 0x38], rax
0x00004f94      31c0           xor eax, eax
0x00004f96      0f290424       movaps xmmword [rsp], xmm0
0x00004f9a      4885f6         test rsi, rsi
0x00004f9d      48894c2430     mov qword [rsp + 0x30], rcx
0x00004fa2      c704240a0000.  mov dword [rsp], 0xa
0x00004fa9      660f6f053f72.  movdqa xmm0, xmmword [0x0020c1f0]
0x00004fb1      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00004fb6      660f6f054272.  movdqa xmm0, xmmword [0x0020c200]
0x00004fbe      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00004fc3      7432           je 0x4ff7
0x00004fc5      4885d2         test rdx, rdx
0x00004fc8      742d           je 0x4ff7
0x00004fca      4889742428     mov qword [rsp + 0x28], rsi
0x00004fcf      4889542430     mov qword [rsp + 0x30], rdx
0x00004fd4      4889e1         mov rcx, rsp
0x00004fd7      4c89c2         mov rdx, r8
0x00004fda      4c89ce         mov rsi, r9
0x00004fdd      e88ef7ffff     call sym.quotearg_n_options
0x00004fe2      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00004fe7      6448333c2528.  xor rdi, qword fs:[0x28]
0x00004ff0      750a           jne 0x4ffc
0x00004ff2      4883c448       add rsp, 0x48
0x00004ff6      c3             ret
0x00004ff7      e844c3ffff     call sym.imp.abort
0x00004ffc      e81fc4ffff     call sym.imp.__stack_chk_fail
0x00005001      0f1f440000     nop dword [rax + rax]
0x00005006      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005010      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005017      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000501c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005020      4889d1         mov rcx, rdx
0x00005023      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000502a      4889f2         mov rdx, rsi
0x0000502d      4889fe         mov rsi, rdi
0x00005030      31ff           xor edi, edi
0x00005032      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005037      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005040      4989c8         mov r8, rcx
0x00005043      4889d1         mov rcx, rdx
0x00005046      4889f2         mov rdx, rsi
0x00005049      4889fe         mov rsi, rdi
0x0000504c      31ff           xor edi, edi
0x0000504e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x00005053      0f1f00         nop dword [rax]
0x00005056      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x00005060      488d0db96f20.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00005067      e904f7ffff     jmp sym.quotearg_n_options
0x0000506c      0f1f4000       nop dword [rax]
;-- quote_mem:
0x00005070      488d0da96f20.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00005077      4889f2         mov rdx, rsi
0x0000507a      4889fe         mov rsi, rdi
0x0000507d      31ff           xor edi, edi
0x0000507f      e9ecf6ffff     jmp sym.quotearg_n_options
0x00005084      6690           nop
0x00005086      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x00005090      488d0d896f20.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x00005097      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x0000509e      e9cdf6ffff     jmp sym.quotearg_n_options
0x000050a3      0f1f00         nop dword [rax]
0x000050a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x000050b0      488d0d696f20.  lea rcx, obj.quote_quoting_options      ; 0x20c020
0x000050b7      4889fe         mov rsi, rdi
0x000050ba      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000050c1      31ff           xor edi, edi
0x000050c3      e9a8f6ffff     jmp sym.quotearg_n_options
0x000050c8      0f1f84000000.  nop dword [rax + rax]
;-- strintcmp:
0x000050d0      440fb607       movzx r8d, byte [rdi]                   ; ../coreutils-8.31/lib/strintcmp.c:30
0x000050d4      0fb616         movzx edx, byte [rsi]
0x000050d7      4180f82d       cmp r8b, 0x2d
0x000050db      0f849f000000   je 0x5180
0x000050e1      80fa2d         cmp dl, 0x2d
0x000050e4      0f84de000000   je 0x51c8
0x000050ea      660f1f440000   nop word [rax + rax]
0x000050f0      4180f830       cmp r8b, 0x30
0x000050f4      0f848e010000   je 0x5288
0x000050fa      80fa30         cmp dl, 0x30
0x000050fd      0f8475010000   je 0x5278
0x00005103      0fb6c2         movzx eax, dl
0x00005106      4438c2         cmp dl, r8b
0x00005109      8d48d0         lea ecx, [rax - 0x30]
0x0000510c      0f8596010000   jne 0x52a8
0x00005112      83f909         cmp ecx, 9
0x00005115      0f8725020000   ja 0x5340
0x0000511b      4883c701       add rdi, 1
0x0000511f      4883c601       add rsi, 1
0x00005123      0fb606         movzx eax, byte [rsi]
0x00005126      440fb607       movzx r8d, byte [rdi]
0x0000512a      89c2           mov edx, eax
0x0000512c      8d48d0         lea ecx, [rax - 0x30]
0x0000512f      4138c0         cmp r8b, al
0x00005132      0f8570010000   jne 0x52a8
0x00005138      83f909         cmp ecx, 9
0x0000513b      76de           jbe 0x511b
0x0000513d      410fb6d0       movzx edx, r8b
0x00005141      4531c9         xor r9d, r9d
0x00005144      83f909         cmp ecx, 9
0x00005147      0f87f3010000   ja 0x5340
0x0000514d      0f1f00         nop dword [rax]
0x00005150      31c9           xor ecx, ecx
0x00005152      660f1f440000   nop word [rax + rax]
0x00005158      0fb6440e01     movzx eax, byte [rsi + rcx + 1]
0x0000515d      4883c101       add rcx, 1
0x00005161      83e830         sub eax, 0x30
0x00005164      83f809         cmp eax, 9
0x00005167      76ef           jbe 0x5158
0x00005169      4939c9         cmp r9, rcx
0x0000516c      0f84d1010000   je 0x5343
0x00005172      19c0           sbb eax, eax
0x00005174      83c801         or eax, 1
0x00005177      c3             ret
0x00005178      0f1f84000000.  nop dword [rax + rax]
0x00005180      4883c701       add rdi, 1
0x00005184      0fb60f         movzx ecx, byte [rdi]
0x00005187      80f930         cmp cl, 0x30
0x0000518a      74f4           je 0x5180
0x0000518c      0fb6c1         movzx eax, cl
0x0000518f      80fa2d         cmp dl, 0x2d
0x00005192      448d40d0       lea r8d, [rax - 0x30]
0x00005196      7468           je 0x5200
0x00005198      4183f809       cmp r8d, 9
0x0000519c      0f86cc010000   jbe 0x536e
0x000051a2      660f1f440000   nop word [rax + rax]
0x000051a8      80fa30         cmp dl, 0x30
0x000051ab      0f84e7000000   je 0x5298
0x000051b1      83ea30         sub edx, 0x30
0x000051b4      4531c9         xor r9d, r9d
0x000051b7      83fa09         cmp edx, 9
0x000051ba      410f96c1       setbe r9b
0x000051be      4489c8         mov eax, r9d
0x000051c1      f7d8           neg eax
0x000051c3      c3             ret
0x000051c4      0f1f4000       nop dword [rax]
0x000051c8      4883c601       add rsi, 1
0x000051cc      0fb606         movzx eax, byte [rsi]
0x000051cf      3c30           cmp al, 0x30
0x000051d1      74f5           je 0x51c8
0x000051d3      8d50d0         lea edx, [rax - 0x30]
0x000051d6      b801000000     mov eax, 1
0x000051db      83fa09         cmp edx, 9
0x000051de      0f86ff000000   jbe 0x52e3
0x000051e4      4180f830       cmp r8b, 0x30
0x000051e8      0f84fa000000   je 0x52e8
0x000051ee      4183e830       sub r8d, 0x30
0x000051f2      31c0           xor eax, eax
0x000051f4      4183f809       cmp r8d, 9
0x000051f8      0f96c0         setbe al
0x000051fb      c3             ret
0x000051fc      0f1f4000       nop dword [rax]
0x00005200      4883c601       add rsi, 1
0x00005204      440fb60e       movzx r9d, byte [rsi]
0x00005208      4180f930       cmp r9b, 0x30
0x0000520c      74f2           je 0x5200
0x0000520e      4438c9         cmp cl, r9b
0x00005211      0f853d010000   jne 0x5354
0x00005217      4183f809       cmp r8d, 9
0x0000521b      8d50d0         lea edx, [rax - 0x30]
0x0000521e      7721           ja 0x5241
0x00005220      4883c701       add rdi, 1
0x00005224      4883c601       add rsi, 1
0x00005228      0fb606         movzx eax, byte [rsi]
0x0000522b      0fb60f         movzx ecx, byte [rdi]
0x0000522e      4189c1         mov r9d, eax
0x00005231      8d50d0         lea edx, [rax - 0x30]
0x00005234      38c1           cmp cl, al
0x00005236      0f85bc000000   jne 0x52f8
0x0000523c      83fa09         cmp edx, 9
0x0000523f      76df           jbe 0x5220
0x00005241      4531d2         xor r10d, r10d
0x00005244      83fa09         cmp edx, 9
0x00005247      0f87f3000000   ja 0x5340
0x0000524d      31d2           xor edx, edx
0x0000524f      90             nop
0x00005250      0fb6441601     movzx eax, byte [rsi + rdx + 1]
0x00005255      4883c201       add rdx, 1
0x00005259      83e830         sub eax, 0x30
0x0000525c      83f809         cmp eax, 9
0x0000525f      76ef           jbe 0x5250
0x00005261      4939d2         cmp r10, rdx
0x00005264      0f84f3000000   je 0x535d
0x0000526a      19c0           sbb eax, eax
0x0000526c      83e002         and eax, 2
0x0000526f      83e801         sub eax, 1
0x00005272      c3             ret
0x00005273      0f1f440000     nop dword [rax + rax]
0x00005278      4883c601       add rsi, 1
0x0000527c      0fb616         movzx edx, byte [rsi]
0x0000527f      e976feffff     jmp 0x50fa
0x00005284      0f1f4000       nop dword [rax]
0x00005288      4883c701       add rdi, 1
0x0000528c      440fb607       movzx r8d, byte [rdi]
0x00005290      e95bfeffff     jmp 0x50f0
0x00005295      0f1f00         nop dword [rax]
0x00005298      4883c601       add rsi, 1
0x0000529c      0fb616         movzx edx, byte [rsi]
0x0000529f      e904ffffff     jmp 0x51a8
0x000052a4      0f1f4000       nop dword [rax]
0x000052a8      410fb6c0       movzx eax, r8b
0x000052ac      83e830         sub eax, 0x30
0x000052af      83f809         cmp eax, 9
0x000052b2      0f8789feffff   ja 0x5141
0x000052b8      4531c9         xor r9d, r9d
0x000052bb      0f1f440000     nop dword [rax + rax]
0x000052c0      420fb6440f01   movzx eax, byte [rdi + r9 + 1]
0x000052c6      4983c101       add r9, 1
0x000052ca      83e830         sub eax, 0x30
0x000052cd      83f809         cmp eax, 9
0x000052d0      76ee           jbe 0x52c0
0x000052d2      83f909         cmp ecx, 9
0x000052d5      0f8675feffff   jbe 0x5150
0x000052db      31c0           xor eax, eax
0x000052dd      4d85c9         test r9, r9
0x000052e0      0f95c0         setne al
0x000052e3      f3c3           ret
0x000052e5      0f1f00         nop dword [rax]
0x000052e8      4883c701       add rdi, 1
0x000052ec      440fb607       movzx r8d, byte [rdi]
0x000052f0      e9effeffff     jmp 0x51e4
0x000052f5      0f1f00         nop dword [rax]
0x000052f8      440fb6c1       movzx r8d, cl
0x000052fc      4183e830       sub r8d, 0x30
0x00005300      4183f809       cmp r8d, 9
0x00005304      0f8737ffffff   ja 0x5241
0x0000530a      4531d2         xor r10d, r10d
0x0000530d      0f1f00         nop dword [rax]
0x00005310      420fb6441701   movzx eax, byte [rdi + r10 + 1]
0x00005316      4983c201       add r10, 1
0x0000531a      83e830         sub eax, 0x30
0x0000531d      83f809         cmp eax, 9
0x00005320      76ee           jbe 0x5310
0x00005322      83fa09         cmp edx, 9
0x00005325      0f8622ffffff   jbe 0x524d
0x0000532b      31c0           xor eax, eax
0x0000532d      4d85d2         test r10, r10
0x00005330      0f95c0         setne al
0x00005333      f7d8           neg eax
0x00005335      c3             ret
0x00005336      662e0f1f8400.  nop word cs:[rax + rax]
0x00005340      31c0           xor eax, eax
0x00005342      c3             ret
0x00005343      31c0           xor eax, eax
0x00005345      4d85c9         test r9, r9
0x00005348      7499           je 0x52e3
0x0000534a      450fb6c8       movzx r9d, r8b
0x0000534e      4489c8         mov eax, r9d
0x00005351      29d0           sub eax, edx
0x00005353      c3             ret
0x00005354      410fb6c1       movzx eax, r9b
0x00005358      8d50d0         lea edx, [rax - 0x30]
0x0000535b      eba3           jmp 0x5300
0x0000535d      31c0           xor eax, eax
0x0000535f      4d85d2         test r10, r10
0x00005362      0f847bffffff   je 0x52e3
0x00005368      4489c8         mov eax, r9d
0x0000536b      29c8           sub eax, ecx
0x0000536d      c3             ret
0x0000536e      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00005373      c3             ret
0x00005374      662e0f1f8400.  nop word cs:[rax + rax]
0x0000537e      6690           nop
;-- verror_at_line:
0x00005380      4156           push r14                                ; ../coreutils-8.31/lib/verror.c:57
0x00005382      4155           push r13
0x00005384      4189f5         mov r13d, esi
0x00005387      4154           push r12
0x00005389      55             push rbp
0x0000538a      4189fc         mov r12d, edi
0x0000538d      53             push rbx
0x0000538e      4c89ce         mov rsi, r9                             ; ../coreutils-8.31/lib/verror.c:58
0x00005391      4c89c7         mov rdi, r8
0x00005394      4889d5         mov rbp, rdx                            ; ../coreutils-8.31/lib/verror.c:57
0x00005397      4189ce         mov r14d, ecx
0x0000539a      e8b10a0000     call sym.xvasprintf                     ; ../coreutils-8.31/lib/verror.c:58
0x0000539f      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/verror.c:59
0x000053a2      7463           je 0x5407
0x000053a4      4885ed         test rbp, rbp                           ; ../coreutils-8.31/lib/verror.c:64
0x000053a7      4889c3         mov rbx, rax
0x000053aa      7434           je 0x53e0
0x000053ac      4c8d05953f00.  lea r8, [0x00009348]                    ; ../coreutils-8.31/lib/verror.c:65 ; "%s"
0x000053b3      4489e7         mov edi, r12d
0x000053b6      4989c1         mov r9, rax
0x000053b9      4489f1         mov ecx, r14d
0x000053bc      4889ea         mov rdx, rbp
0x000053bf      4489ee         mov esi, r13d
0x000053c2      31c0           xor eax, eax
0x000053c4      e897bfffff     call sym.imp.error_at_line
0x000053c9      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x000053cc      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x000053cd      5d             pop rbp
0x000053ce      415c           pop r12
0x000053d0      415d           pop r13
0x000053d2      415e           pop r14
0x000053d4      e957bfffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x000053d9      0f1f80000000.  nop dword [rax]
0x000053e0      488d15613f00.  lea rdx, [0x00009348]                   ; ../coreutils-8.31/lib/verror.c:67 ; "%s"
0x000053e7      4489e7         mov edi, r12d
0x000053ea      4889c1         mov rcx, rax
0x000053ed      4489ee         mov esi, r13d
0x000053f0      31c0           xor eax, eax
0x000053f2      e889c1ffff     call sym.imp.error
0x000053f7      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/verror.c:76
0x000053fa      5b             pop rbx                                 ; ../coreutils-8.31/lib/verror.c:77
0x000053fb      5d             pop rbp
0x000053fc      415c           pop r12
0x000053fe      415d           pop r13
0x00005400      415e           pop r14
0x00005402      e929bfffff     jmp sym.imp.free                        ; ../coreutils-8.31/lib/verror.c:76
0x00005407      488d355a4400.  lea rsi, [0x00009868]                   ; ../coreutils-8.31/lib/verror.c:73 ; "unable to display error message"
0x0000540e      ba05000000     mov edx, 5
0x00005413      31ff           xor edi, edi
0x00005415      e8c6bfffff     call sym.imp.dcgettext
0x0000541a      4889c3         mov rbx, rax
0x0000541d      e82ebfffff     call sym.imp.__errno_location
0x00005422      8b30           mov esi, dword [rax]
0x00005424      4889da         mov rdx, rbx
0x00005427      31ff           xor edi, edi
0x00005429      31c0           xor eax, eax
0x0000542b      e850c1ffff     call sym.imp.error
0x00005430      e80bbfffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/verror.c:74
0x00005435      90             nop
0x00005436      662e0f1f8400.  nop word cs:[rax + rax]
;-- verror:
0x00005440      4989d0         mov r8, rdx                             ; ../coreutils-8.31/lib/verror.c:44
0x00005443      4989c9         mov r9, rcx
0x00005446      31d2           xor edx, edx                            ; ../coreutils-8.31/lib/verror.c:45
0x00005448      31c9           xor ecx, ecx
0x0000544a      e931ffffff     jmp sym.verror_at_line
0x0000544f      90             nop
;-- version_etc_arn:
0x00005450      4157           push r15
0x00005452      4156           push r14
0x00005454      4155           push r13
0x00005456      4154           push r12
0x00005458      4d89cc         mov r12, r9
0x0000545b      55             push rbp
0x0000545c      53             push rbx
0x0000545d      4889fd         mov rbp, rdi
0x00005460      4c89c3         mov rbx, r8
0x00005463      4883ec28       sub rsp, 0x28
0x00005467      4885f6         test rsi, rsi
0x0000546a      0f8418010000   je 0x5588
0x00005470      4989d0         mov r8, rdx
0x00005473      488d150e4400.  lea rdx, str.s___s___s                  ; 0x9888 ; "%s (%s) %s\n"
0x0000547a      4989c9         mov r9, rcx
0x0000547d      31c0           xor eax, eax
0x0000547f      4889f1         mov rcx, rsi
0x00005482      be01000000     mov esi, 1
0x00005487      e854c1ffff     call sym.imp.__fprintf_chk
0x0000548c      488d35084400.  lea rsi, [0x0000989b]                   ; "(C)"
0x00005493      31ff           xor edi, edi
0x00005495      ba05000000     mov edx, 5
0x0000549a      e841bfffff     call sym.imp.dcgettext
0x0000549f      488d151a4700.  lea rdx, obj.version_etc_copyright      ; 0x9bc0 ; "Copyright %s %d Free Software Foundation, Inc."
0x000054a6      4889c1         mov rcx, rax
0x000054a9      41b8e3070000   mov r8d, 0x7e3
0x000054af      be01000000     mov esi, 1
0x000054b4      4889ef         mov rdi, rbp
0x000054b7      31c0           xor eax, eax
0x000054b9      e822c1ffff     call sym.imp.__fprintf_chk
0x000054be      488d35634400.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x9928 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000054c5      31ff           xor edi, edi
0x000054c7      ba05000000     mov edx, 5
0x000054cc      e80fbfffff     call sym.imp.dcgettext
0x000054d1      4889ee         mov rsi, rbp
0x000054d4      4889c7         mov rdi, rax
0x000054d7      e8b4bfffff     call sym.imp.fputs_unlocked
0x000054dc      4983fc09       cmp r12, 9
0x000054e0      0f873a030000   ja 0x5820
0x000054e6      488d159b4600.  lea rdx, [0x00009b88]
0x000054ed      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x000054f1      4801d0         add rax, rdx
0x000054f4      ffe0           jmp rax
0x000054f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00005500      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005504      488b4310       mov rax, qword [rbx + 0x10]
0x00005508      488d35894500.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x9a98 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000550f      4c8b4308       mov r8, qword [rbx + 8]
0x00005513      ba05000000     mov edx, 5
0x00005518      31ff           xor edi, edi
0x0000551a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000551e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005522      4c894c2410     mov qword [rsp + 0x10], r9
0x00005527      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000552b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000552f      48890424       mov qword [rsp], rax
0x00005533      4c89442408     mov qword [rsp + 8], r8
0x00005538      488b1b         mov rbx, qword [rbx]
0x0000553b      e8a0beffff     call sym.imp.dcgettext
0x00005540      4883ec08       sub rsp, 8
0x00005544      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005549      4889c2         mov rdx, rax
0x0000554c      4889d9         mov rcx, rbx
0x0000554f      be01000000     mov esi, 1
0x00005554      4889ef         mov rdi, rbp
0x00005557      31c0           xor eax, eax
0x00005559      4151           push r9
0x0000555b      4155           push r13
0x0000555d      4154           push r12
0x0000555f      4157           push r15
0x00005561      4156           push r14
0x00005563      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005568      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000556d      e86ec0ffff     call sym.imp.__fprintf_chk
0x00005572      4883c430       add rsp, 0x30
0x00005576      4883c428       add rsp, 0x28
0x0000557a      5b             pop rbx
0x0000557b      5d             pop rbp
0x0000557c      415c           pop r12
0x0000557e      415d           pop r13
0x00005580      415e           pop r14
0x00005582      415f           pop r15
0x00005584      c3             ret
0x00005585      0f1f00         nop dword [rax]
0x00005588      4989c8         mov r8, rcx
0x0000558b      4889d1         mov rcx, rdx
0x0000558e      488d15ff4200.  lea rdx, str.s__s                       ; 0x9894 ; "%s %s\n"
0x00005595      be01000000     mov esi, 1
0x0000559a      31c0           xor eax, eax
0x0000559c      e83fc0ffff     call sym.imp.__fprintf_chk
0x000055a1      e9e6feffff     jmp 0x548c
0x000055a6      662e0f1f8400.  nop word cs:[rax + rax]
0x000055b0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000055b4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000055b8      488d35094500.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x9ac8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000055bf      488b4310       mov rax, qword [rbx + 0x10]
0x000055c3      4c8b4308       mov r8, qword [rbx + 8]
0x000055c7      ba05000000     mov edx, 5
0x000055cc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000055d0      4c8b6328       mov r12, qword [rbx + 0x28]
0x000055d4      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000055d8      4c8b7318       mov r14, qword [rbx + 0x18]
0x000055dc      488b1b         mov rbx, qword [rbx]
0x000055df      4c89542418     mov qword [rsp + 0x18], r10
0x000055e4      4c894c2410     mov qword [rsp + 0x10], r9
0x000055e9      48890424       mov qword [rsp], rax
0x000055ed      4c89442408     mov qword [rsp + 8], r8
0x000055f2      31ff           xor edi, edi
0x000055f4      e8e7bdffff     call sym.imp.dcgettext
0x000055f9      4c8b542418     mov r10, qword [rsp + 0x18]
0x000055fe      4152           push r10
0x00005600      e93fffffff     jmp 0x5544
0x00005605      0f1f00         nop dword [rax]
0x00005608      488b1b         mov rbx, qword [rbx]
0x0000560b      488d358d4200.  lea rsi, str.Written_by__s.             ; 0x989f ; "Written by %s.\n"
0x00005612      ba05000000     mov edx, 5
0x00005617      31ff           xor edi, edi
0x00005619      e8c2bdffff     call sym.imp.dcgettext
0x0000561e      4883c428       add rsp, 0x28
0x00005622      4889d9         mov rcx, rbx
0x00005625      4889ef         mov rdi, rbp
0x00005628      5b             pop rbx
0x00005629      5d             pop rbp
0x0000562a      415c           pop r12
0x0000562c      415d           pop r13
0x0000562e      415e           pop r14
0x00005630      415f           pop r15
0x00005632      4889c2         mov rdx, rax
0x00005635      be01000000     mov esi, 1
0x0000563a      31c0           xor eax, eax
0x0000563c      e99fbfffff     jmp sym.imp.__fprintf_chk
0x00005641      0f1f80000000.  nop dword [rax]
0x00005648      4c8b6308       mov r12, qword [rbx + 8]
0x0000564c      488d355c4200.  lea rsi, str.Written_by__s_and__s.      ; 0x98af ; "Written by %s and %s.\n"
0x00005653      488b1b         mov rbx, qword [rbx]
0x00005656      ba05000000     mov edx, 5
0x0000565b      31ff           xor edi, edi
0x0000565d      e87ebdffff     call sym.imp.dcgettext
0x00005662      4883c428       add rsp, 0x28
0x00005666      4d89e0         mov r8, r12
0x00005669      4889d9         mov rcx, rbx
0x0000566c      4889ef         mov rdi, rbp
0x0000566f      4889c2         mov rdx, rax
0x00005672      be01000000     mov esi, 1
0x00005677      5b             pop rbx
0x00005678      5d             pop rbp
0x00005679      415c           pop r12
0x0000567b      415d           pop r13
0x0000567d      415e           pop r14
0x0000567f      415f           pop r15
0x00005681      31c0           xor eax, eax
0x00005683      e958bfffff     jmp sym.imp.__fprintf_chk
0x00005688      0f1f84000000.  nop dword [rax + rax]
0x00005690      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005694      4c8b6308       mov r12, qword [rbx + 8]
0x00005698      488d35274200.  lea rsi, str.Written_by__s___s__and__s. ; 0x98c6 ; "Written by %s, %s, and %s.\n"
0x0000569f      488b1b         mov rbx, qword [rbx]
0x000056a2      ba05000000     mov edx, 5
0x000056a7      31ff           xor edi, edi
0x000056a9      e832bdffff     call sym.imp.dcgettext
0x000056ae      4883c428       add rsp, 0x28
0x000056b2      4d89e9         mov r9, r13
0x000056b5      4d89e0         mov r8, r12
0x000056b8      4889d9         mov rcx, rbx
0x000056bb      4889ef         mov rdi, rbp
0x000056be      4889c2         mov rdx, rax
0x000056c1      5b             pop rbx
0x000056c2      5d             pop rbp
0x000056c3      415c           pop r12
0x000056c5      415d           pop r13
0x000056c7      415e           pop r14
0x000056c9      415f           pop r15
0x000056cb      be01000000     mov esi, 1
0x000056d0      31c0           xor eax, eax
0x000056d2      e909bfffff     jmp sym.imp.__fprintf_chk
0x000056d7      660f1f840000.  nop word [rax + rax]
0x000056e0      488d35114300.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x99f8 ; "Written by %s, %s, %s,\nand %s.\n"
0x000056e7      ba05000000     mov edx, 5
0x000056ec      31ff           xor edi, edi
0x000056ee      4c8b7318       mov r14, qword [rbx + 0x18]
0x000056f2      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000056f6      4c8b6308       mov r12, qword [rbx + 8]
0x000056fa      488b1b         mov rbx, qword [rbx]
0x000056fd      e8debcffff     call sym.imp.dcgettext
0x00005702      4883ec08       sub rsp, 8
0x00005706      4156           push r14
0x00005708      4889c2         mov rdx, rax
0x0000570b      4d89e9         mov r9, r13
0x0000570e      4d89e0         mov r8, r12
0x00005711      4889d9         mov rcx, rbx
0x00005714      4889ef         mov rdi, rbp
0x00005717      be01000000     mov esi, 1
0x0000571c      31c0           xor eax, eax
0x0000571e      e8bdbeffff     call sym.imp.__fprintf_chk
0x00005723      58             pop rax
0x00005724      5a             pop rdx
0x00005725      4883c428       add rsp, 0x28
0x00005729      5b             pop rbx
0x0000572a      5d             pop rbp
0x0000572b      415c           pop r12
0x0000572d      415d           pop r13
0x0000572f      415e           pop r14
0x00005731      415f           pop r15
0x00005733      c3             ret
0x00005734      0f1f4000       nop dword [rax]
0x00005738      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000573c      488d35d54200.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x9a18 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005743      ba05000000     mov edx, 5
0x00005748      31ff           xor edi, edi
0x0000574a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000574e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005752      4c8b6308       mov r12, qword [rbx + 8]
0x00005756      488b1b         mov rbx, qword [rbx]
0x00005759      e882bcffff     call sym.imp.dcgettext
0x0000575e      4157           push r15
0x00005760      eba4           jmp 0x5706
0x00005762      660f1f440000   nop word [rax + rax]
0x00005768      4c8b4308       mov r8, qword [rbx + 8]
0x0000576c      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005770      488d35c94200.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x9a40 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x00005777      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000577b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000577f      ba05000000     mov edx, 5
0x00005784      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005788      31ff           xor edi, edi
0x0000578a      488b1b         mov rbx, qword [rbx]
0x0000578d      4c890424       mov qword [rsp], r8
0x00005791      e84abcffff     call sym.imp.dcgettext
0x00005796      4883ec08       sub rsp, 8
0x0000579a      4d89e9         mov r9, r13
0x0000579d      4154           push r12
0x0000579f      4157           push r15
0x000057a1      4156           push r14
0x000057a3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000057a8      4889d9         mov rcx, rbx
0x000057ab      4889c2         mov rdx, rax
0x000057ae      4889ef         mov rdi, rbp
0x000057b1      be01000000     mov esi, 1
0x000057b6      31c0           xor eax, eax
0x000057b8      e823beffff     call sym.imp.__fprintf_chk
0x000057bd      4883c420       add rsp, 0x20
0x000057c1      4883c428       add rsp, 0x28
0x000057c5      5b             pop rbx
0x000057c6      5d             pop rbp
0x000057c7      415c           pop r12
0x000057c9      415d           pop r13
0x000057cb      415e           pop r14
0x000057cd      415f           pop r15
0x000057cf      c3             ret
0x000057d0      4c8b4b10       mov r9, qword [rbx + 0x10]
0x000057d4      4c8b6b30       mov r13, qword [rbx + 0x30]
0x000057d8      488d35894200.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x9a68 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x000057df      4c8b6328       mov r12, qword [rbx + 0x28]
0x000057e3      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000057e7      ba05000000     mov edx, 5
0x000057ec      4c8b7318       mov r14, qword [rbx + 0x18]
0x000057f0      4c8b4308       mov r8, qword [rbx + 8]
0x000057f4      31ff           xor edi, edi
0x000057f6      4c894c2408     mov qword [rsp + 8], r9
0x000057fb      488b1b         mov rbx, qword [rbx]
0x000057fe      4c890424       mov qword [rsp], r8
0x00005802      e8d9bbffff     call sym.imp.dcgettext
0x00005807      4155           push r13
0x00005809      4154           push r12
0x0000580b      4157           push r15
0x0000580d      4156           push r14
0x0000580f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005814      eb8d           jmp 0x57a3
0x00005816      662e0f1f8400.  nop word cs:[rax + rax]
0x00005820      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005824      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005828      ba05000000     mov edx, 5
0x0000582d      488b4310       mov rax, qword [rbx + 0x10]
0x00005831      4c8b4308       mov r8, qword [rbx + 8]
0x00005835      488d35c44200.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x9b00 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x0000583c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005840      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005844      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005848      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000584c      4c89542418     mov qword [rsp + 0x18], r10
0x00005851      4c894c2410     mov qword [rsp + 0x10], r9
0x00005856      48890424       mov qword [rsp], rax
0x0000585a      4c89442408     mov qword [rsp + 8], r8
0x0000585f      488b1b         mov rbx, qword [rbx]
0x00005862      e98bfdffff     jmp 0x55f2
0x00005867      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005870      4531c9         xor r9d, r9d
0x00005873      49833800       cmp qword [r8], 0
0x00005877      7412           je 0x588b
0x00005879      0f1f80000000.  nop dword [rax]
0x00005880      4983c101       add r9, 1
0x00005884      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005889      75f5           jne 0x5880
0x0000588b      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005890      4883ec68       sub rsp, 0x68
0x00005894      4d89c2         mov r10, r8
0x00005897      4531c9         xor r9d, r9d
0x0000589a      64488b042528.  mov rax, qword fs:[0x28]
0x000058a3      4889442458     mov qword [rsp + 0x58], rax
0x000058a8      31c0           xor eax, eax
0x000058aa      4989e0         mov r8, rsp
0x000058ad      0f1f00         nop dword [rax]
0x000058b0      418b02         mov eax, dword [r10]
0x000058b3      83f82f         cmp eax, 0x2f
0x000058b6      7742           ja 0x58fa
0x000058b8      4189c3         mov r11d, eax
0x000058bb      4d035a10       add r11, qword [r10 + 0x10]
0x000058bf      83c008         add eax, 8
0x000058c2      418902         mov dword [r10], eax
0x000058c5      498b03         mov rax, qword [r11]
0x000058c8      4885c0         test rax, rax
0x000058cb      4b8904c8       mov qword [r8 + r9*8], rax
0x000058cf      740a           je 0x58db
0x000058d1      4983c101       add r9, 1
0x000058d5      4983f90a       cmp r9, 0xa
0x000058d9      75d5           jne 0x58b0
0x000058db      e870fbffff     call sym.version_etc_arn
0x000058e0      488b442458     mov rax, qword [rsp + 0x58]
0x000058e5      644833042528.  xor rax, qword fs:[0x28]
0x000058ee      7505           jne 0x58f5
0x000058f0      4883c468       add rsp, 0x68
0x000058f4      c3             ret
0x000058f5      e826bbffff     call sym.imp.__stack_chk_fail
0x000058fa      4d8b5a08       mov r11, qword [r10 + 8]
0x000058fe      498d4308       lea rax, [r11 + 8]
0x00005902      49894208       mov qword [r10 + 8], rax
0x00005906      ebbd           jmp 0x58c5
0x00005908      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005910      55             push rbp
0x00005911      53             push rbx
0x00005912      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005918      4531db         xor r11d, r11d
0x0000591b      4881ecb80000.  sub rsp, 0xb8
0x00005922      64488b042528.  mov rax, qword fs:[0x28]
0x0000592b      4889442478     mov qword [rsp + 0x78], rax
0x00005930      31c0           xor eax, eax
0x00005932      488d8424d000.  lea rax, [rsp + 0xd0]
0x0000593a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005942      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x0000594a      4c8d442420     lea r8, [rsp + 0x20]
0x0000594f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005957      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x0000595f      4889442410     mov qword [rsp + 0x10], rax
0x00005964      488d84248000.  lea rax, [rsp + 0x80]
0x0000596c      4531c9         xor r9d, r9d
0x0000596f      4889442418     mov qword [rsp + 0x18], rax
0x00005974      4889c5         mov rbp, rax
0x00005977      660f1f840000.  nop word [rax + rax]
0x00005980      4183fa2f       cmp r10d, 0x2f
0x00005984      7756           ja 0x59dc
0x00005986      4489d0         mov eax, r10d
0x00005989      41bb01000000   mov r11d, 1
0x0000598f      4183c208       add r10d, 8
0x00005993      4801e8         add rax, rbp
0x00005996      488b00         mov rax, qword [rax]
0x00005999      4885c0         test rax, rax
0x0000599c      4b8904c8       mov qword [r8 + r9*8], rax
0x000059a0      740a           je 0x59ac
0x000059a2      4983c101       add r9, 1
0x000059a6      4983f90a       cmp r9, 0xa
0x000059aa      75d4           jne 0x5980
0x000059ac      4584db         test r11b, r11b
0x000059af      7524           jne 0x59d5
0x000059b1      e89afaffff     call sym.version_etc_arn
0x000059b6      488b442478     mov rax, qword [rsp + 0x78]
0x000059bb      644833042528.  xor rax, qword fs:[0x28]
0x000059c4      750a           jne 0x59d0
0x000059c6      4881c4b80000.  add rsp, 0xb8
0x000059cd      5b             pop rbx
0x000059ce      5d             pop rbp
0x000059cf      c3             ret
0x000059d0      e84bbaffff     call sym.imp.__stack_chk_fail
0x000059d5      4489542408     mov dword [rsp + 8], r10d
0x000059da      ebd5           jmp 0x59b1
0x000059dc      4889d8         mov rax, rbx
0x000059df      4883c308       add rbx, 8
0x000059e3      ebb1           jmp 0x5996
0x000059e5      90             nop
0x000059e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x000059f0      53             push rbx
0x000059f1      488d35ea3e00.  lea rsi, str.Report_bugs_to:__s         ; 0x98e2 ; "\nReport bugs to: %s\n"
0x000059f8      ba05000000     mov edx, 5
0x000059fd      31ff           xor edi, edi
0x000059ff      e8dcb9ffff     call sym.imp.dcgettext
0x00005a04      488d15ec3e00.  lea rdx, str.bug_coreutils_gnu.org      ; 0x98f7 ; "bug-coreutils@gnu.org"
0x00005a0b      4889c6         mov rsi, rax
0x00005a0e      bf01000000     mov edi, 1
0x00005a13      31c0           xor eax, eax
0x00005a15      e856bbffff     call sym.imp.__printf_chk
0x00005a1a      488d35ec3e00.  lea rsi, str.s_home_page:___s           ; 0x990d ; "%s home page: <%s>\n"
0x00005a21      ba05000000     mov edx, 5
0x00005a26      31ff           xor edi, edi
0x00005a28      e8b3b9ffff     call sym.imp.dcgettext
0x00005a2d      488d0d5c3800.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x9290 ; "https://www.gnu.org/software/coreutils/"
0x00005a34      488d150b2a00.  lea rdx, str.GNU_coreutils              ; 0x8446 ; "GNU coreutils"
0x00005a3b      4889c6         mov rsi, rax
0x00005a3e      bf01000000     mov edi, 1
0x00005a43      31c0           xor eax, eax
0x00005a45      e826bbffff     call sym.imp.__printf_chk
0x00005a4a      488b1d376620.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20c088:8]=0
0x00005a51      488d35e84000.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x9b40 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005a58      31ff           xor edi, edi
0x00005a5a      ba05000000     mov edx, 5
0x00005a5f      e87cb9ffff     call sym.imp.dcgettext
0x00005a64      4889de         mov rsi, rbx
0x00005a67      4889c7         mov rdi, rax
0x00005a6a      5b             pop rbx
0x00005a6b      e920baffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005a70      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005a71      4889fb         mov rbx, rdi
0x00005a74      e887baffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005a79      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005a7c      7505           jne 0x5a83
0x00005a7e      4885db         test rbx, rbx
0x00005a81      7502           jne 0x5a85
0x00005a83      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005a84      c3             ret
0x00005a85      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005a8a      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005a90      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005a93      48f7e6         mul rsi
0x00005a96      4889c7         mov rdi, rax
0x00005a99      0f90c0         seto al
0x00005a9c      4885ff         test rdi, rdi
0x00005a9f      780a           js 0x5aab
0x00005aa1      0fb6c0         movzx eax, al
0x00005aa4      4885c0         test rax, rax
0x00005aa7      7502           jne 0x5aab
0x00005aa9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005aab      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005aaf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005ab4      6690           nop
0x00005ab6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005ac0      ebae           jmp sym.xmalloc
0x00005ac2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005ac6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005ad0      4885f6         test rsi, rsi
0x00005ad3      53             push rbx
0x00005ad4      4889f3         mov rbx, rsi
0x00005ad7      7505           jne 0x5ade
0x00005ad9      4885ff         test rdi, rdi
0x00005adc      751a           jne 0x5af8
0x00005ade      4889de         mov rsi, rbx
0x00005ae1      e86abaffff     call sym.imp.realloc
0x00005ae6      4885c0         test rax, rax
0x00005ae9      7505           jne 0x5af0
0x00005aeb      4885db         test rbx, rbx
0x00005aee      7511           jne 0x5b01                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005af0      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005af1      c3             ret
0x00005af2      660f1f440000   nop word [rax + rax]
0x00005af8      e833b8ffff     call sym.imp.free
0x00005afd      31c0           xor eax, eax
0x00005aff      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005b00      c3             ret
0x00005b01      e8ba010000     call sym.xalloc_die
0x00005b06      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005b10      4889f0         mov rax, rsi
0x00005b13      48f7e2         mul rdx
0x00005b16      4889c6         mov rsi, rax
0x00005b19      0f90c0         seto al
0x00005b1c      4885f6         test rsi, rsi
0x00005b1f      780a           js 0x5b2b
0x00005b21      0fb6c0         movzx eax, al
0x00005b24      4885c0         test rax, rax
0x00005b27      7502           jne 0x5b2b
0x00005b29      eba5           jmp sym.xrealloc
0x00005b2b      4883ec08       sub rsp, 8
0x00005b2f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005b34      6690           nop
0x00005b36      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005b40      4885ff         test rdi, rdi
0x00005b43      4989d1         mov r9, rdx
0x00005b46      488b0e         mov rcx, qword [rsi]
0x00005b49      7435           je 0x5b80
0x00005b4b      31d2           xor edx, edx
0x00005b4d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005b57      49f7f1         div r9
0x00005b5a      4839c8         cmp rax, rcx
0x00005b5d      763c           jbe 0x5b9b
0x00005b5f      4889c8         mov rax, rcx
0x00005b62      48d1e8         shr rax, 1
0x00005b65      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005b6a      48890e         mov qword [rsi], rcx
0x00005b6d      490fafc9       imul rcx, r9
0x00005b71      4889ce         mov rsi, rcx
0x00005b74      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005b79      0f1f80000000.  nop dword [rax]
0x00005b80      4885c9         test rcx, rcx
0x00005b83      7423           je 0x5ba8
0x00005b85      4889c8         mov rax, rcx
0x00005b88      49f7e1         mul r9
0x00005b8b      0f90c2         seto dl
0x00005b8e      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005b91      0fb6d2         movzx edx, dl
0x00005b94      7805           js 0x5b9b
0x00005b96      4885d2         test rdx, rdx
0x00005b99      74cf           je 0x5b6a
0x00005b9b      4883ec08       sub rsp, 8
0x00005b9f      e81c010000     call sym.xalloc_die
0x00005ba4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005ba8      31d2           xor edx, edx
0x00005baa      b880000000     mov eax, 0x80
0x00005baf      4531c0         xor r8d, r8d
0x00005bb2      49f7f1         div r9
0x00005bb5      4885c0         test rax, rax
0x00005bb8      410f94c0       sete r8b
0x00005bbc      498d0c00       lea rcx, [r8 + rax]
0x00005bc0      ebc3           jmp 0x5b85
0x00005bc2      0f1f4000       nop dword [rax]
0x00005bc6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005bd0      4885ff         test rdi, rdi
0x00005bd3      488b06         mov rax, qword [rsi]
0x00005bd6      7428           je 0x5c00
0x00005bd8      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005be2      4839d0         cmp rax, rdx
0x00005be5      772a           ja 0x5c11
0x00005be7      4889c2         mov rdx, rax
0x00005bea      48d1ea         shr rdx, 1
0x00005bed      488d440201     lea rax, [rdx + rax + 1]
0x00005bf2      488906         mov qword [rsi], rax
0x00005bf5      4889c6         mov rsi, rax
0x00005bf8      e9d3feffff     jmp sym.xrealloc
0x00005bfd      0f1f00         nop dword [rax]
0x00005c00      4885c0         test rax, rax
0x00005c03      ba80000000     mov edx, 0x80
0x00005c08      480f44c2       cmove rax, rdx
0x00005c0c      4885c0         test rax, rax
0x00005c0f      79e1           jns 0x5bf2
0x00005c11      4883ec08       sub rsp, 8
0x00005c15      e8a6000000     call sym.xalloc_die
0x00005c1a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005c20      53             push rbx
0x00005c21      4889fb         mov rbx, rdi
0x00005c24      e847feffff     call sym.xmalloc
0x00005c29      4889da         mov rdx, rbx
0x00005c2c      31f6           xor esi, esi
0x00005c2e      4889c7         mov rdi, rax
0x00005c31      5b             pop rbx
0x00005c32      e929b8ffff     jmp sym.imp.memset
0x00005c37      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005c40      4889f8         mov rax, rdi
0x00005c43      4883ec08       sub rsp, 8
0x00005c47      48f7e6         mul rsi
0x00005c4a      0f90c2         seto dl
0x00005c4d      4885c0         test rax, rax
0x00005c50      7817           js 0x5c69
0x00005c52      0fb6d2         movzx edx, dl
0x00005c55      4885d2         test rdx, rdx
0x00005c58      750f           jne 0x5c69
0x00005c5a      e841b8ffff     call sym.imp.calloc
0x00005c5f      4885c0         test rax, rax
0x00005c62      7405           je 0x5c69
0x00005c64      4883c408       add rsp, 8
0x00005c68      c3             ret
0x00005c69      e852000000     call sym.xalloc_die
0x00005c6e      6690           nop
;-- xmemdup:
0x00005c70      55             push rbp
0x00005c71      53             push rbx
0x00005c72      4889fd         mov rbp, rdi
0x00005c75      4889f7         mov rdi, rsi
0x00005c78      4889f3         mov rbx, rsi
0x00005c7b      4883ec08       sub rsp, 8
0x00005c7f      e8ecfdffff     call sym.xmalloc
0x00005c84      4883c408       add rsp, 8
0x00005c88      4889da         mov rdx, rbx
0x00005c8b      4889ee         mov rsi, rbp
0x00005c8e      5b             pop rbx
0x00005c8f      5d             pop rbp
0x00005c90      4889c7         mov rdi, rax
0x00005c93      e938b8ffff     jmp sym.imp.memcpy
0x00005c98      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005ca0      53             push rbx
0x00005ca1      4889fb         mov rbx, rdi
0x00005ca4      e857b7ffff     call sym.imp.strlen
0x00005ca9      4889df         mov rdi, rbx
0x00005cac      488d7001       lea rsi, [rax + 1]
0x00005cb0      5b             pop rbx
0x00005cb1      ebbd           jmp sym.xmemdup
0x00005cb3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cbd      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005cc0      488d35283f00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x9bef ; "memory exhausted"
0x00005cc7      4883ec08       sub rsp, 8
0x00005ccb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005cd0      31ff           xor edi, edi
0x00005cd2      e809b7ffff     call sym.imp.dcgettext
0x00005cd7      8b3d3b632000   mov edi, dword [obj.exit_failure]       ; [0x20c018:4]=1
0x00005cdd      488d15643600.  lea rdx, [0x00009348]                   ; "%s"
0x00005ce4      4889c1         mov rcx, rax
0x00005ce7      31f6           xor esi, esi
0x00005ce9      31c0           xor eax, eax
0x00005ceb      e890b8ffff     call sym.imp.error
0x00005cf0      e84bb6ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005cf5      662e0f1f8400.  nop word cs:[rax + rax]
0x00005cff      90             nop
;-- xstrcat:
0x00005d00      4157           push r15                                ; ../coreutils-8.31/lib/xvasprintf.c:34
0x00005d02      4156           push r14
0x00005d04      4155           push r13
0x00005d06      4154           push r12
0x00005d08      55             push rbp
0x00005d09      53             push rbx
0x00005d0a      4883ec28       sub rsp, 0x28
0x00005d0e      64488b042528.  mov rax, qword fs:[0x28]
0x00005d17      4889442418     mov qword [rsp + 0x18], rax
0x00005d1c      31c0           xor eax, eax
0x00005d1e      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00005d21      f30f6f06       movdqu xmm0, xmmword [rsi]              ; ../coreutils-8.31/lib/xvasprintf.c:43
0x00005d25      0f110424       movups xmmword [rsp], xmm0
0x00005d29      4c8b7610       mov r14, qword [rsi + 0x10]
0x00005d2d      4c89742410     mov qword [rsp + 0x10], r14
0x00005d32      0f84a8000000   je 0x5de0                               ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00005d38      4989fc         mov r12, rdi
0x00005d3b      4989f7         mov r15, rsi
0x00005d3e      4889fd         mov rbp, rdi                            ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00005d41      31db           xor ebx, ebx                            ; ../coreutils-8.31/lib/xvasprintf.c:42
0x00005d43      49c7c5ffffff.  mov r13, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x00005d4a      8b1424         mov edx, dword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00005d4d      83fa2f         cmp edx, 0x2f
0x00005d50      0f87da000000   ja 0x5e30
0x00005d56      89d0           mov eax, edx
0x00005d58      83c208         add edx, 8
0x00005d5b      4c01f0         add rax, r14
0x00005d5e      891424         mov dword [rsp], edx
0x00005d61      488b38         mov rdi, qword [rax]                    ; ../coreutils-8.31/lib/xvasprintf.c:47
0x00005d64      e897b6ffff     call sym.imp.strlen
0x00005d69      4801c3         add rbx, rax                            ; ../coreutils-8.31/lib/xsize.h:66
0x00005d6c      490f42dd       cmovb rbx, r13
0x00005d70      4883ed01       sub rbp, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:44
0x00005d74      75d4           jne 0x5d4a
0x00005d76      4881fbffffff.  cmp rbx, 0x7fffffff                     ; ../coreutils-8.31/lib/xvasprintf.c:54
0x00005d7d      0f879d000000   ja 0x5e20
0x00005d83      488d7b01       lea rdi, [rbx + 1]                      ; ../coreutils-8.31/lib/xvasprintf.c:61
0x00005d87      e8e4fcffff     call sym.xmalloc
0x00005d8c      4989c6         mov r14, rax
0x00005d8f      4889c3         mov rbx, rax
0x00005d92      eb31           jmp 0x5dc5
0x00005d94      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/xvasprintf.c:65
0x00005d96      49034710       add rax, qword [r15 + 0x10]
0x00005d9a      83c208         add edx, 8
0x00005d9d      418917         mov dword [r15], edx
0x00005da0      4c8b28         mov r13, qword [rax]
0x00005da3      4c89ef         mov rdi, r13                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x00005da6      e855b6ffff     call sym.imp.strlen
0x00005dab      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005dae      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/xvasprintf.c:66
0x00005db1      4889c2         mov rdx, rax                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005db4      4c89ee         mov rsi, r13
0x00005db7      4801eb         add rbx, rbp                            ; ../coreutils-8.31/lib/xvasprintf.c:68
0x00005dba      e811b7ffff     call sym.imp.memcpy                     ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00005dbf      4983ec01       sub r12, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:63
0x00005dc3      742b           je 0x5df0
0x00005dc5      418b17         mov edx, dword [r15]                    ; ../coreutils-8.31/lib/xvasprintf.c:65
0x00005dc8      83fa2f         cmp edx, 0x2f
0x00005dcb      76c7           jbe 0x5d94
0x00005dcd      498b4708       mov rax, qword [r15 + 8]
0x00005dd1      488d5008       lea rdx, [rax + 8]
0x00005dd5      49895708       mov qword [r15 + 8], rdx
0x00005dd9      ebc5           jmp 0x5da0
0x00005ddb      0f1f440000     nop dword [rax + rax]
0x00005de0      bf01000000     mov edi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:61
0x00005de5      e886fcffff     call sym.xmalloc
0x00005dea      4889c3         mov rbx, rax
0x00005ded      4989c6         mov r14, rax
0x00005df0      c60300         mov byte [rbx], 0                       ; ../coreutils-8.31/lib/xvasprintf.c:70
0x00005df3      488b4c2418     mov rcx, qword [rsp + 0x18]             ; ../coreutils-8.31/lib/xvasprintf.c:73
0x00005df8      6448330c2528.  xor rcx, qword fs:[0x28]
0x00005e01      4c89f0         mov rax, r14
0x00005e04      750f           jne 0x5e15
0x00005e06      4883c428       add rsp, 0x28
0x00005e0a      5b             pop rbx
0x00005e0b      5d             pop rbp
0x00005e0c      415c           pop r12
0x00005e0e      415d           pop r13
0x00005e10      415e           pop r14
0x00005e12      415f           pop r15
0x00005e14      c3             ret
0x00005e15      e806b6ffff     call sym.imp.__stack_chk_fail
0x00005e1a      660f1f440000   nop word [rax + rax]
0x00005e20      e82bb5ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:56
0x00005e25      4531f6         xor r14d, r14d                          ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00005e28      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xvasprintf.c:56 ; 'K'
                                                                       ; [0x4b:4]=0
0x00005e2e      ebc3           jmp 0x5df3                              ; ../coreutils-8.31/lib/xvasprintf.c:57
0x00005e30      488b442408     mov rax, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:46
0x00005e35      488d5008       lea rdx, [rax + 8]
0x00005e39      4889542408     mov qword [rsp + 8], rdx
0x00005e3e      e91effffff     jmp 0x5d61
0x00005e43      0f1f00         nop dword [rax]
0x00005e46      662e0f1f8400.  nop word cs:[rax + rax]
;-- xvasprintf:
0x00005e50      4883ec18       sub rsp, 0x18                           ; ../coreutils-8.31/lib/xvasprintf.c:77
0x00005e54      64488b042528.  mov rax, qword fs:[0x28]
0x00005e5d      4889442408     mov qword [rsp + 8], rax
0x00005e62      31c0           xor eax, eax
0x00005e64      0fb607         movzx eax, byte [rdi]                   ; ../coreutils-8.31/lib/xvasprintf.c:89
0x00005e67      84c0           test al, al
0x00005e69      747b           je 0x5ee6
0x00005e6b      3c25           cmp al, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x00005e6d      4989f8         mov r8, rdi
0x00005e70      7536           jne 0x5ea8
0x00005e72      807f0173       cmp byte [rdi + 1], 0x73                ; ../coreutils-8.31/lib/xvasprintf.c:95
0x00005e76      7530           jne 0x5ea8
0x00005e78      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x00005e7a      eb11           jmp 0x5e8d
0x00005e7c      0f1f4000       nop dword [rax]
0x00005e80      80f925         cmp cl, 0x25                            ; ../coreutils-8.31/lib/xvasprintf.c:92
0x00005e83      7523           jne 0x5ea8
0x00005e85      41807c780173   cmp byte [r8 + rdi*2 + 1], 0x73         ; ../coreutils-8.31/lib/xvasprintf.c:95
0x00005e8b      751b           jne 0x5ea8
0x00005e8d      4883c701       add rdi, 1                              ; ../coreutils-8.31/lib/xvasprintf.c:98
0x00005e91      410fb60c78     movzx ecx, byte [r8 + rdi*2]            ; ../coreutils-8.31/lib/xvasprintf.c:89
0x00005e96      84c9           test cl, cl
0x00005e98      75e6           jne 0x5e80
0x00005e9a      e861feffff     call sym.xstrcat                        ; ../coreutils-8.31/lib/xvasprintf.c:91
0x00005e9f      eb1d           jmp 0x5ebe
0x00005ea1      0f1f80000000.  nop dword [rax]
0x00005ea8      4889f2         mov rdx, rsi                            ; ../coreutils-8.31/lib/xvasprintf.c:102
0x00005eab      4889e7         mov rdi, rsp
0x00005eae      4c89c6         mov rsi, r8
0x00005eb1      e8da000000     call sym.rpl_vasprintf
0x00005eb6      85c0           test eax, eax
0x00005eb8      781e           js 0x5ed8
0x00005eba      488b0424       mov rax, qword [rsp]                    ; ../coreutils-8.31/lib/xvasprintf.c:109
0x00005ebe      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xvasprintf.c:110
0x00005ec3      644833142528.  xor rdx, qword fs:[0x28]
0x00005ecc      751c           jne 0x5eea
0x00005ece      4883c418       add rsp, 0x18
0x00005ed2      c3             ret
0x00005ed3      0f1f440000     nop dword [rax + rax]
0x00005ed8      e873b4ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/xvasprintf.c:104
0x00005edd      83380c         cmp dword [rax], 0xc
0x00005ee0      740d           je 0x5eef
0x00005ee2      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/xvasprintf.c:106
0x00005ee4      ebd8           jmp 0x5ebe
0x00005ee6      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/xvasprintf.c:84
0x00005ee8      ebb0           jmp 0x5e9a
0x00005eea      e831b5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xvasprintf.c:110
0x00005eef      e8ccfdffff     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xvasprintf.c:105
0x00005ef4      662e0f1f8400.  nop word cs:[rax + rax]
0x00005efe      6690           nop
;-- rpl_mbrtowc:
0x00005f00      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00005f02      4154           push r12
0x00005f04      4989f5         mov r13, rsi
0x00005f07      55             push rbp
0x00005f08      53             push rbx
0x00005f09      4889fb         mov rbx, rdi
0x00005f0c      4989d4         mov r12, rdx
0x00005f0f      4883ec18       sub rsp, 0x18
0x00005f13      64488b042528.  mov rax, qword fs:[0x28]
0x00005f1c      4889442408     mov qword [rsp + 8], rax
0x00005f21      31c0           xor eax, eax
0x00005f23      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x00005f28      4885ff         test rdi, rdi
0x00005f2b      480f44d8       cmove rbx, rax
0x00005f2f      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f32      e8f9b4ffff     call sym.imp.mbrtowc
0x00005f37      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f3b      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x00005f3e      7620           jbe 0x5f60                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x00005f40      4d85e4         test r12, r12
0x00005f43      741b           je 0x5f60
0x00005f45      31ff           xor edi, edi
0x00005f47      e844010000     call sym.hard_locale
0x00005f4c      84c0           test al, al
0x00005f4e      7510           jne 0x5f60
0x00005f50      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f55      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x00005f5a      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x00005f5c      0f1f4000       nop dword [rax]
0x00005f60      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x00005f65      644833142528.  xor rdx, qword fs:[0x28]
0x00005f6e      4889e8         mov rax, rbp
0x00005f71      750b           jne 0x5f7e
0x00005f73      4883c418       add rsp, 0x18
0x00005f77      5b             pop rbx
0x00005f78      5d             pop rbp
0x00005f79      415c           pop r12
0x00005f7b      415d           pop r13
0x00005f7d      c3             ret
0x00005f7e      e89db4ffff     call sym.imp.__stack_chk_fail
0x00005f83      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f8d      0f1f00         nop dword [rax]
;-- rpl_vasprintf:
0x00005f90      53             push rbx                                ; ../coreutils-8.31/lib/vasprintf.c:34
0x00005f91      4889f0         mov rax, rsi
0x00005f94      4889fb         mov rbx, rdi
0x00005f97      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00005f99      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/vasprintf.c:34
0x00005f9d      64488b0c2528.  mov rcx, qword fs:[0x28]
0x00005fa6      48894c2408     mov qword [rsp + 8], rcx
0x00005fab      31c9           xor ecx, ecx
0x00005fad      4889e6         mov rsi, rsp                            ; ../coreutils-8.31/lib/vasprintf.c:36
0x00005fb0      4889d1         mov rcx, rdx
0x00005fb3      4889c2         mov rdx, rax
0x00005fb6      e895020000     call sym.vasnprintf
0x00005fbb      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasprintf.c:37
0x00005fbe      7442           je 0x6002
0x00005fc0      488b1424       mov rdx, qword [rsp]                    ; ../coreutils-8.31/lib/vasprintf.c:40
0x00005fc4      4881faffffff.  cmp rdx, 0x7fffffff
0x00005fcb      771b           ja 0x5fe8
0x00005fcd      488903         mov qword [rbx], rax                    ; ../coreutils-8.31/lib/vasprintf.c:47
0x00005fd0      89d0           mov eax, edx                            ; ../coreutils-8.31/lib/vasprintf.c:49
0x00005fd2      488b5c2408     mov rbx, qword [rsp + 8]                ; ../coreutils-8.31/lib/vasprintf.c:50
0x00005fd7      6448331c2528.  xor rbx, qword fs:[0x28]
0x00005fe0      7527           jne 0x6009
0x00005fe2      4883c410       add rsp, 0x10
0x00005fe6      5b             pop rbx
0x00005fe7      c3             ret
0x00005fe8      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasprintf.c:42
0x00005feb      e840b3ffff     call sym.imp.free
0x00005ff0      e85bb3ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasprintf.c:43
0x00005ff5      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x00005ffb      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:44 ; -1
0x00006000      ebd0           jmp 0x5fd2
0x00006002      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/vasprintf.c:38 ; -1
0x00006007      ebc9           jmp 0x5fd2
0x00006009      e812b4ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/vasprintf.c:50
0x0000600e      6690           nop
;-- close_stream:
0x00006010      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006012      55             push rbp
0x00006013      4889fd         mov rbp, rdi
0x00006016      53             push rbx
0x00006017      e874b3ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000601c      8b5d00         mov ebx, dword [rbp]
0x0000601f      4889ef         mov rdi, rbp
0x00006022      4989c4         mov r12, rax
0x00006025      e806010000     call sym.rpl_fclose
0x0000602a      83e320         and ebx, 0x20                           ; "@"
0x0000602d      85db           test ebx, ebx
0x0000602f      7517           jne 0x6048
0x00006031      85c0           test eax, eax
0x00006033      740a           je 0x603f                               ; stdio.h:-186
0x00006035      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006038      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000603d      7439           je 0x6078
0x0000603f      5b             pop rbx
0x00006040      5d             pop rbp
0x00006041      415c           pop r12
0x00006043      c3             ret
0x00006044      0f1f4000       nop dword [rax]
0x00006048      85c0           test eax, eax
0x0000604a      751c           jne 0x6068
0x0000604c      e8ffb2ffff     call sym.imp.__errno_location
0x00006051      c70000000000   mov dword [rax], 0
0x00006057      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000605c      5b             pop rbx
0x0000605d      5d             pop rbp
0x0000605e      415c           pop r12
0x00006060      c3             ret
0x00006061      0f1f80000000.  nop dword [rax]
0x00006068      5b             pop rbx
0x00006069      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000606e      5d             pop rbp                                 ; stdio.h:-186
0x0000606f      415c           pop r12
0x00006071      c3             ret
0x00006072      660f1f440000   nop word [rax + rax]
0x00006078      e8d3b2ffff     call sym.imp.__errno_location
0x0000607d      833809         cmp dword [rax], 9
0x00006080      5b             pop rbx
0x00006081      5d             pop rbp
0x00006082      415c           pop r12                                 ; stdio.h:-178
0x00006084      0f95c0         setne al
0x00006087      0fb6c0         movzx eax, al
0x0000608a      f7d8           neg eax
0x0000608c      c3             ret
0x0000608d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006090      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006094      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006096      e8c5b4ffff     call sym.imp.setlocale
0x0000609b      4889c2         mov rdx, rax
0x0000609e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000060a3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000060a6      741d           je 0x60c5
0x000060a8      488d3d513b00.  lea rdi, [0x00009c00]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000060af      b902000000     mov ecx, 2
0x000060b4      4889d6         mov rsi, rdx
0x000060b7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000060b9      0f97c1         seta cl
0x000060bc      80d900         sbb cl, 0
0x000060bf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000060c1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000060c3      750b           jne 0x60d0
0x000060c5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000060c9      c3             ret
0x000060ca      660f1f440000   nop word [rax + rax]
0x000060d0      488d3d2b3b00.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x9c02 ; "POSIX"
0x000060d7      b906000000     mov ecx, 6
0x000060dc      4889d6         mov rsi, rdx
0x000060df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000060e1      0f97c0         seta al
0x000060e4      1c00           sbb al, 0
0x000060e6      84c0           test al, al
0x000060e8      0f95c0         setne al
0x000060eb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000060ef      c3             ret
;-- locale_charset:
0x000060f0      4883ec08       sub rsp, 8
0x000060f4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000060f9      e822b4ffff     call sym.imp.nl_langinfo
0x000060fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006101      741d           je 0x6120
0x00006103      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006106      488d15fb3a00.  lea rdx, str.ASCII                      ; 0x9c08 ; "ASCII"
0x0000610d      480f44c2       cmove rax, rdx
0x00006111      4883c408       add rsp, 8
0x00006115      c3             ret
0x00006116      662e0f1f8400.  nop word cs:[rax + rax]
0x00006120      488d05e13a00.  lea rax, str.ASCII                      ; 0x9c08 ; "ASCII"
0x00006127      4883c408       add rsp, 8
0x0000612b      c3             ret
0x0000612c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006130      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006132      55             push rbp
0x00006133      53             push rbx
0x00006134      4889fb         mov rbx, rdi
0x00006137      e8a4b3ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000613c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000613e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006141      7854           js 0x6197                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006143      e8f8b3ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006148      85c0           test eax, eax
0x0000614a      752c           jne 0x6178
0x0000614c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000614f      e85c000000     call sym.rpl_fflush
0x00006154      85c0           test eax, eax
0x00006156      743c           je 0x6194
0x00006158      e8f3b1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000615d      448b20         mov r12d, dword [rax]
0x00006160      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006163      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006166      e855b2ffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000616b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000616e      7530           jne 0x61a0
0x00006170      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006171      5d             pop rbp
0x00006172      415c           pop r12
0x00006174      c3             ret
0x00006175      0f1f00         nop dword [rax]
0x00006178      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000617b      e860b3ffff     call sym.imp.fileno
0x00006180      31f6           xor esi, esi
0x00006182      ba01000000     mov edx, 1
0x00006187      89c7           mov edi, eax
0x00006189      e8c2b2ffff     call sym.imp.lseek
0x0000618e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006192      75b8           jne 0x614c
0x00006194      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006197      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006198      5d             pop rbp
0x00006199      415c           pop r12
0x0000619b      e920b2ffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000061a0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000061a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000061a9      ebc5           jmp 0x6170
0x000061ab      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000061b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000061b3      53             push rbx
0x000061b4      4889fb         mov rbx, rdi
0x000061b7      7411           je 0x61ca                               ; ../coreutils-8.31/lib/fflush.c:150
0x000061b9      e882b3ffff     call sym.imp.__freading
0x000061be      85c0           test eax, eax
0x000061c0      7408           je 0x61ca
0x000061c2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000061c8      750e           jne 0x61d8
0x000061ca      4889df         mov rdi, rbx
0x000061cd      5b             pop rbx
0x000061ce      e93db3ffff     jmp sym.imp.fflush
0x000061d3      0f1f440000     nop dword [rax + rax]
0x000061d8      4889df         mov rdi, rbx
0x000061db      ba01000000     mov edx, 1
0x000061e0      31f6           xor esi, esi
0x000061e2      e809000000     call sym.rpl_fseeko
0x000061e7      4889df         mov rdi, rbx
0x000061ea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000061eb      e920b3ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000061f0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000061f4      48394710       cmp qword [rdi + 0x10], rax
0x000061f8      7406           je 0x6200                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000061fa      e991b3ffff     jmp sym.imp.fseeko
0x000061ff      90             nop
0x00006200      488b4720       mov rax, qword [rdi + 0x20]
0x00006204      48394728       cmp qword [rdi + 0x28], rax
0x00006208      75f0           jne 0x61fa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000620a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000620f      75e9           jne 0x61fa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006211      4154           push r12
0x00006213      55             push rbp
0x00006214      4189d4         mov r12d, edx
0x00006217      53             push rbx
0x00006218      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000621b      4889fb         mov rbx, rdi
0x0000621e      e8bdb2ffff     call sym.imp.fileno
0x00006223      4489e2         mov edx, r12d
0x00006226      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006229      89c7           mov edi, eax
0x0000622b      e820b2ffff     call sym.imp.lseek
0x00006230      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006234      740c           je 0x6242
0x00006236      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006239      488983900000.  mov qword [rbx + 0x90], rax
0x00006240      31c0           xor eax, eax
0x00006242      5b             pop rbx
0x00006243      5d             pop rbp
0x00006244      415c           pop r12
0x00006246      c3             ret
0x00006247      660f1f840000.  nop word [rax + rax]
;-- vasnprintf:
0x00006250      55             push rbp                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006251      4889e5         mov rbp, rsp
0x00006254      4157           push r15
0x00006256      4156           push r14
0x00006258      4155           push r13
0x0000625a      4154           push r12
0x0000625c      4c8db550fcff.  lea r14, [rbp - 0x3b0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00006263      53             push rbx                                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006264      4889d3         mov rbx, rdx
0x00006267      4989cc         mov r12, rcx
0x0000626a      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000626d      4881ec080400.  sub rsp, 0x408                          ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006274      4889b5e8fbff.  mov qword [rbp - 0x418], rsi
0x0000627b      488db540fdff.  lea rsi, [rbp - 0x2c0]                  ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x00006282      4889bd18fcff.  mov qword [rbp - 0x3e8], rdi            ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x00006289      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x0000628c      4c89b5f0fbff.  mov qword [rbp - 0x410], r14
0x00006293      64488b042528.  mov rax, qword fs:[0x28]                ; ../coreutils-8.31/lib/vasnprintf.c:1788
0x0000629c      488945c8       mov qword [rbp - 0x38], rax
0x000062a0      31c0           xor eax, eax
0x000062a2      4889b5f8fbff.  mov qword [rbp - 0x408], rsi            ; ../coreutils-8.31/lib/vasnprintf.c:1792
0x000062a9      e8c2120000     call sym.printf_parse
0x000062ae      85c0           test eax, eax
0x000062b0      0f88620e0000   js 0x7118
0x000062b6      4c89f6         mov rsi, r14                            ; ../coreutils-8.31/lib/vasnprintf.c:1802
0x000062b9      4c89e7         mov rdi, r12
0x000062bc      e8af100000     call sym.printf_fetchargs
0x000062c1      85c0           test eax, eax
0x000062c3      0f88b70e0000   js 0x7180
0x000062c9      488b8550fdff.  mov rax, qword [rbp - 0x2b0]            ; ../coreutils-8.31/lib/xsize.h:65
0x000062d0      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; ../coreutils-8.31/lib/xsize.h:66
0x000062d7      4883c007       add rax, 7                              ; ../coreutils-8.31/lib/xsize.h:65
0x000062db      4883f806       cmp rax, 6                              ; ../coreutils-8.31/lib/xsize.h:66
0x000062df      480f46c2       cmovbe rax, rdx
0x000062e3      48038558fdff.  add rax, qword [rbp - 0x2a8]
0x000062ea      0f82280a0000   jb 0x6d18
0x000062f0      4889c7         mov rdi, rax
0x000062f3      4531c0         xor r8d, r8d
0x000062f6      4883c706       add rdi, 6
0x000062fa      410f92c0       setb r8b
0x000062fe      0f82140a0000   jb 0x6d18
0x00006304      4881ff9f0f00.  cmp rdi, 0xf9f                          ; ../coreutils-8.31/lib/vasnprintf.c:1826
0x0000630b      0f8647010000   jbe 0x6458
0x00006311      4883ffff       cmp rdi, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1835
0x00006315      4c898538fcff.  mov qword [rbp - 0x3c8], r8
0x0000631c      0f84f6090000   je 0x6d18
0x00006322      e8d9b1ffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00006327      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x0000632a      48898528fcff.  mov qword [rbp - 0x3d8], rax            ; ../coreutils-8.31/lib/vasnprintf.c:1837
0x00006331      0f84e1090000   je 0x6d18                               ; ../coreutils-8.31/lib/vasnprintf.c:1838
0x00006337      4c8b8538fcff.  mov r8, qword [rbp - 0x3c8]
0x0000633e      488985e0fbff.  mov qword [rbp - 0x420], rax
0x00006345      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/vasnprintf.c:1851
0x00006348      4883bd18fcff.  cmp qword [rbp - 0x3e8], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1843
0x00006350      740a           je 0x635c
0x00006352      488b85e8fbff.  mov rax, qword [rbp - 0x418]            ; ../coreutils-8.31/lib/vasnprintf.c:1846
0x00006359      4c8b20         mov r12, qword [rax]
0x0000635c      4c8bad48fdff.  mov r13, qword [rbp - 0x2b8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00006363      488d8544fcff.  lea rax, [rbp - 0x3bc]                  ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x0000636a      4c8bbd18fcff.  mov r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:1883
0x00006371      48c78500fcff.  mov qword [rbp - 0x400], 0
0x0000637c      48898510fcff.  mov qword [rbp - 0x3f0], rax            ; stdio2.h:64   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
0x00006383      4889d8         mov rax, rbx                            ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006386      4c89c3         mov rbx, r8
0x00006389      498b4d00       mov rcx, qword [r13]                    ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x0000638d      4989c0         mov r8, rax                             ; ../coreutils-8.31/lib/vasnprintf.c:1928
0x00006390      4c39c1         cmp rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1885
0x00006393      0f8468090000   je 0x6d01
0x00006399      4c29c1         sub rcx, r8                             ; ../coreutils-8.31/lib/vasnprintf.c:1887
0x0000639c      4889d8         mov rax, rbx
0x0000639f      4801c8         add rax, rcx
0x000063a2      4989c6         mov r14, rax                            ; ../coreutils-8.31/lib/xsize.h:65
0x000063a5      0f83dd000000   jae 0x6488                              ; ../coreutils-8.31/lib/xsize.h:66
0x000063ab      4983fcff       cmp r12, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x000063af      0f84cb0a0000   je 0x6e80
0x000063b5      e896afffff     call sym.imp.__errno_location
0x000063ba      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x000063c1      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]            ; ../coreutils-8.31/lib/vasnprintf.c:5606
0x000063c8      7409           je 0x63d3
0x000063ca      4d85ff         test r15, r15
0x000063cd      0f85dd0a0000   jne 0x6eb0
0x000063d3      488b85e0fbff.  mov rax, qword [rbp - 0x420]            ; ../coreutils-8.31/lib/vasnprintf.c:5608
0x000063da      4885c0         test rax, rax
0x000063dd      7408           je 0x63e7
0x000063df      4889c7         mov rdi, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:5609
0x000063e2      e849afffff     call sym.imp.free
0x000063e7      488b85f8fbff.  mov rax, qword [rbp - 0x408]            ; ../coreutils-8.31/lib/vasnprintf.c:5611
0x000063ee      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000063f5      4883c020       add rax, 0x20                           ; "@"
0x000063f9      4839c7         cmp rdi, rax
0x000063fc      7405           je 0x6403
0x000063fe      e82dafffff     call sym.imp.free
0x00006403      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x0000640a      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x00006411      4883c010       add rax, 0x10
0x00006415      4839c7         cmp rdi, rax
0x00006418      7405           je 0x641f
0x0000641a      e811afffff     call sym.imp.free
0x0000641f      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5612
0x00006426      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/vasnprintf.c:5613
0x00006429      c7000c000000   mov dword [rax], 0xc                    ; ../coreutils-8.31/lib/vasnprintf.c:5612 ; [0xc:4]=0
0x0000642f      488b7dc8       mov rdi, qword [rbp - 0x38]             ; ../coreutils-8.31/lib/vasnprintf.c:5615
0x00006433      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000643c      4c89f8         mov rax, r15
0x0000643f      0f85020f0000   jne 0x7347
0x00006445      488d65d8       lea rsp, [rbp - 0x28]
0x00006449      5b             pop rbx
0x0000644a      415c           pop r12
0x0000644c      415d           pop r13
0x0000644e      415e           pop r14
0x00006450      415f           pop r15
0x00006452      5d             pop rbp
0x00006453      c3             ret
0x00006454      0f1f4000       nop dword [rax]
0x00006458      4883c024       add rax, 0x24                           ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000645c      48c785e0fbff.  mov qword [rbp - 0x420], 0              ; ../coreutils-8.31/lib/vasnprintf.c:1829
0x00006467      4883e0f0       and rax, 0xfffffffffffffff0             ; ../coreutils-8.31/lib/vasnprintf.c:1828
0x0000646b      4829c4         sub rsp, rax
0x0000646e      488d44240f     lea rax, [rsp + 0xf]
0x00006473      4883e0f0       and rax, 0xfffffffffffffff0
0x00006477      48898528fcff.  mov qword [rbp - 0x3d8], rax
0x0000647e      e9c2feffff     jmp 0x6345
0x00006483      0f1f440000     nop dword [rax + rax]
0x00006488      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1890
0x0000648b      7367           jae 0x64f4
0x0000648d      4d85e4         test r12, r12
0x00006490      0f852a090000   jne 0x6dc0
0x00006496      4883f80c       cmp rax, 0xc
0x0000649a      0f8732090000   ja 0x6dd2
0x000064a0      41bc0c000000   mov r12d, 0xc
0x000064a6      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000064ad      0f94c2         sete dl
0x000064b0      4d85ff         test r15, r15
0x000064b3      0f843f090000   je 0x6df8
0x000064b9      84d2           test dl, dl
0x000064bb      0f8537090000   jne 0x6df8
0x000064c1      4c89e6         mov rsi, r12
0x000064c4      4c89ff         mov rdi, r15
0x000064c7      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x000064ce      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000064d5      e876b0ffff     call sym.imp.realloc
0x000064da      4885c0         test rax, rax
0x000064dd      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x000064e4      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x000064eb      0f84aa090000   je 0x6e9b
0x000064f1      4989c7         mov r15, rax
0x000064f4      498d3c1f       lea rdi, [r15 + rbx]                    ; ../coreutils-8.31/lib/vasnprintf.c:1896
0x000064f8      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000064fb      4c89c6         mov rsi, r8
0x000064fe      e8cdafffff     call sym.imp.memcpy
0x00006503      488b8500fcff.  mov rax, qword [rbp - 0x400]            ; ../coreutils-8.31/lib/vasnprintf.c:1906
0x0000650a      48398540fdff.  cmp qword [rbp - 0x2c0], rax
0x00006511      0f84b40c0000   je 0x71cb
0x00006517      410fb65548     movzx edx, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:1910
0x0000651c      498b4550       mov rax, qword [r13 + 0x50]
0x00006520      80fa25         cmp dl, 0x25
0x00006523      0f848f070000   je 0x6cb8
0x00006529      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/vasnprintf.c:1923
0x0000652d      0f84430c0000   je 0x7176
0x00006533      4c8b8558fcff.  mov r8, qword [rbp - 0x3a8]
0x0000653a      48c1e005       shl rax, 5
0x0000653e      4c01c0         add rax, r8
0x00006541      80fa6e         cmp dl, 0x6e                            ; ../coreutils-8.31/lib/vasnprintf.c:1926
0x00006544      8b38           mov edi, dword [rax]
0x00006546      89bd30fcffff   mov dword [rbp - 0x3d0], edi
0x0000654c      0f84de070000   je 0x6d30
0x00006552      418b4510       mov eax, dword [r13 + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4603
0x00006556      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4770
0x0000655d      a801           test al, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x0000655f      c60725         mov byte [rdi], 0x25                    ; ../coreutils-8.31/lib/vasnprintf.c:4770 ; '%'
                                                                       ; [0x25:1]=0
0x00006562      488d5f01       lea rbx, [rdi + 1]
0x00006566      740f           je 0x6577                               ; ../coreutils-8.31/lib/vasnprintf.c:4776
0x00006568      488bbd28fcff.  mov rdi, qword [rbp - 0x3d8]            ; ../coreutils-8.31/lib/vasnprintf.c:4777
0x0000656f      488d5f02       lea rbx, [rdi + 2]
0x00006573      c6470127       mov byte [rdi + 1], 0x27                ; '''
                                                                       ; [0x27:1]=0
0x00006577      a802           test al, 2                              ; ../coreutils-8.31/lib/vasnprintf.c:4779
0x00006579      7407           je 0x6582
0x0000657b      c6032d         mov byte [rbx], 0x2d                    ; ../coreutils-8.31/lib/vasnprintf.c:4780 ; '-'
                                                                       ; [0x2d:1]=0
0x0000657e      4883c301       add rbx, 1
0x00006582      a804           test al, 4                              ; ../coreutils-8.31/lib/vasnprintf.c:4781
0x00006584      7407           je 0x658d
0x00006586      c6032b         mov byte [rbx], 0x2b                    ; ../coreutils-8.31/lib/vasnprintf.c:4782 ; '+'
                                                                       ; [0x2b:1]=0
0x00006589      4883c301       add rbx, 1
0x0000658d      a808           test al, 8                              ; ../coreutils-8.31/lib/vasnprintf.c:4783
0x0000658f      7407           je 0x6598
0x00006591      c60320         mov byte [rbx], 0x20                    ; ../coreutils-8.31/lib/vasnprintf.c:4784 ; [0x20:1]=64 ; "@"
0x00006594      4883c301       add rbx, 1
0x00006598      a810           test al, 0x10                           ; ../coreutils-8.31/lib/vasnprintf.c:4785
0x0000659a      7407           je 0x65a3
0x0000659c      c60323         mov byte [rbx], 0x23                    ; ../coreutils-8.31/lib/vasnprintf.c:4786 ; '#'
                                                                       ; [0x23:1]=0
0x0000659f      4883c301       add rbx, 1
0x000065a3      a840           test al, 0x40                           ; ../coreutils-8.31/lib/vasnprintf.c:4788 ; segment.PHDR
0x000065a5      7407           je 0x65ae
0x000065a7      c60349         mov byte [rbx], 0x49                    ; ../coreutils-8.31/lib/vasnprintf.c:4789 ; 'I'
                                                                       ; [0x49:1]=0
0x000065aa      4883c301       add rbx, 1
0x000065ae      a820           test al, 0x20                           ; ../coreutils-8.31/lib/vasnprintf.c:4793 ; "@"
0x000065b0      7407           je 0x65b9
0x000065b2      c60330         mov byte [rbx], 0x30                    ; ../coreutils-8.31/lib/vasnprintf.c:4794 ; '0'
                                                                       ; [0x30:1]=0
0x000065b5      4883c301       add rbx, 1
0x000065b9      498b7518       mov rsi, qword [r13 + 0x18]             ; ../coreutils-8.31/lib/vasnprintf.c:4795
0x000065bd      498b5520       mov rdx, qword [r13 + 0x20]
0x000065c1      4839d6         cmp rsi, rdx
0x000065c4      7430           je 0x65f6
0x000065c6      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000065c9      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000065cc      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x000065d3      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4797
0x000065d6      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x000065d9      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x000065e0      e8ebaeffff     call sym.imp.memcpy
0x000065e5      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4803
0x000065ec      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x000065f3      4801cb         add rbx, rcx
0x000065f6      498b7530       mov rsi, qword [r13 + 0x30]             ; ../coreutils-8.31/lib/vasnprintf.c:4816
0x000065fa      498b5538       mov rdx, qword [r13 + 0x38]
0x000065fe      4839d6         cmp rsi, rdx
0x00006601      7430           je 0x6633
0x00006603      4889d1         mov rcx, rdx                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006606      4889df         mov rdi, rbx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006609      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006610      4829f1         sub rcx, rsi                            ; ../coreutils-8.31/lib/vasnprintf.c:4818
0x00006613      4889ca         mov rdx, rcx                            ; string_fortified.h:34   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
0x00006616      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x0000661d      e8aeaeffff     call sym.imp.memcpy
0x00006622      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:4824
0x00006629      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006630      4801cb         add rbx, rcx
0x00006633      8bbd30fcffff   mov edi, dword [rbp - 0x3d0]
0x00006639      83ff10         cmp edi, 0x10
0x0000663c      772d           ja 0x666b
0x0000663e      b801000000     mov eax, 1
0x00006643      89f9           mov ecx, edi
0x00006645      48d3e0         shl rax, cl
0x00006648      a980410100     test eax, 0x14180
0x0000664d      7515           jne 0x6664
0x0000664f      f6c410         test ah, 0x10
0x00006652      0f8558090000   jne 0x6fb0
0x00006658      f6c406         test ah, 6
0x0000665b      740e           je 0x666b
0x0000665d      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4847 ; 'l'
                                                                       ; [0x6c:1]=0
0x00006660      4883c301       add rbx, 1
0x00006664      c6036c         mov byte [rbx], 0x6c                    ; ../coreutils-8.31/lib/vasnprintf.c:4859 ; 'l'
                                                                       ; [0x6c:1]=0
0x00006667      4883c301       add rbx, 1
0x0000666b      410fb64548     movzx eax, byte [r13 + 0x48]            ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00006670      c6430100       mov byte [rbx + 1], 0                   ; ../coreutils-8.31/lib/vasnprintf.c:4922
0x00006674      8803           mov byte [rbx], al                      ; ../coreutils-8.31/lib/vasnprintf.c:4872
0x00006676      498b4528       mov rax, qword [r13 + 0x28]             ; ../coreutils-8.31/lib/vasnprintf.c:4930
0x0000667a      4883f8ff       cmp rax, 0xffffffffffffffff
0x0000667e      0f842c070000   je 0x6db0
0x00006684      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4932
0x00006688      4c01c0         add rax, r8
0x0000668b      833805         cmp dword [rax], 5
0x0000668e      0f85e20a0000   jne 0x7176
0x00006694      8b4010         mov eax, dword [rax + 0x10]             ; ../coreutils-8.31/lib/vasnprintf.c:4934
0x00006697      c78520fcffff.  mov dword [rbp - 0x3e0], 1
0x000066a1      898548fcffff   mov dword [rbp - 0x3b8], eax
0x000066a7      498b4540       mov rax, qword [r13 + 0x40]             ; ../coreutils-8.31/lib/vasnprintf.c:4936
0x000066ab      4883f8ff       cmp rax, 0xffffffffffffffff
0x000066af      742b           je 0x66dc
0x000066b1      48c1e005       shl rax, 5                              ; ../coreutils-8.31/lib/vasnprintf.c:4938
0x000066b5      4901c0         add r8, rax
0x000066b8      41833805       cmp dword [r8], 5
0x000066bc      0f85b40a0000   jne 0x7176
0x000066c2      8b8520fcffff   mov eax, dword [rbp - 0x3e0]            ; ../coreutils-8.31/lib/vasnprintf.c:4940
0x000066c8      418b5010       mov edx, dword [r8 + 0x10]
0x000066cc      89948548fcff.  mov dword [rbp + rax*4 - 0x3b8], edx
0x000066d3      8d4001         lea eax, [rax + 1]
0x000066d6      898520fcffff   mov dword [rbp - 0x3e0], eax
0x000066dc      4c89f0         mov rax, r14
0x000066df      31d2           xor edx, edx
0x000066e1      4883c002       add rax, 2
0x000066e5      0f82610c0000   jb 0x734c
0x000066eb      4939c4         cmp r12, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:4952
0x000066ee      734b           jae 0x673b
0x000066f0      4d85e4         test r12, r12
0x000066f3      0f851f080000   jne 0x6f18
0x000066f9      4883f80c       cmp rax, 0xc
0x000066fd      0f872d080000   ja 0x6f30
0x00006703      41bc0c000000   mov r12d, 0xc
0x00006709      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006710      0f94c2         sete dl
0x00006713      4d85ff         test r15, r15
0x00006716      0f8444080000   je 0x6f60
0x0000671c      84d2           test dl, dl
0x0000671e      0f853c080000   jne 0x6f60
0x00006724      4c89e6         mov rsi, r12
0x00006727      4c89ff         mov rdi, r15
0x0000672a      e821aeffff     call sym.imp.realloc
0x0000672f      4885c0         test rax, rax
0x00006732      0f847dfcffff   je 0x63b5
0x00006738      4989c7         mov r15, rax
0x0000673b      43c6043700     mov byte [r15 + r14], 0                 ; ../coreutils-8.31/lib/vasnprintf.c:4957
0x00006740      e80bacffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:4960
0x00006745      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x0000674c      8b00           mov eax, dword [rax]
0x0000674e      48899d08fcff.  mov qword [rbp - 0x3f8], rbx
0x00006755      8985dcfbffff   mov dword [rbp - 0x424], eax
0x0000675b      0f1f440000     nop dword [rax + rax]
0x00006760      488b8538fcff.  mov rax, qword [rbp - 0x3c8]            ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x00006767      4c89e3         mov rbx, r12                            ; ../coreutils-8.31/lib/vasnprintf.c:4968
0x0000676a      41baffffff7f   mov r10d, 0x7fffffff
0x00006770      4c29f3         sub rbx, r14
0x00006773      c78544fcffff.  mov dword [rbp - 0x3bc], 0xffffffff     ; ../coreutils-8.31/lib/vasnprintf.c:4964 ; -1
0x0000677d      4881fbffffff.  cmp rbx, 0x7fffffff
0x00006784      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/vasnprintf.c:5015
0x0000678a      8b8530fcffff   mov eax, dword [rbp - 0x3d0]            ; ../coreutils-8.31/lib/vasnprintf.c:5016
0x00006790      4c0f46d3       cmovbe r10, rbx
0x00006794      83f811         cmp eax, 0x11
0x00006797      0f87d9090000   ja 0x7176
0x0000679d      488d356c3400.  lea rsi, [0x00009c10]
0x000067a4      48630486       movsxd rax, dword [rsi + rax*4]
0x000067a8      4801f0         add rax, rsi
0x000067ab      ffe0           jmp rax
0x000067ad      0f1f00         nop dword [rax]
0x000067b0      498b4550       mov rax, qword [r13 + 0x50]
0x000067b4      4b8d3c37       lea rdi, [r15 + r14]
0x000067b8      48c1e005       shl rax, 5
0x000067bc      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000067c3      4c8b4810       mov r9, qword [rax + 0x10]
0x000067c7      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x000067cd      83f801         cmp eax, 1
0x000067d0      0f84c2040000   je 0x6c98
0x000067d6      83f802         cmp eax, 2
0x000067d9      0f84a1040000   je 0x6c80
0x000067df      4883ec08       sub rsp, 8
0x000067e3      ffb510fcffff   push qword [rbp - 0x3f0]
0x000067e9      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x000067f0      4c89d6         mov rsi, r10                            ; ../coreutils-8.31/lib/vasnprintf.c:5007
0x000067f3      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x000067fa      ba01000000     mov edx, 1
0x000067ff      31c0           xor eax, eax
0x00006801      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006808      e813abffff     call sym.imp.__snprintf_chk
0x0000680d      5e             pop rsi
0x0000680e      5f             pop rdi
0x0000680f      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006816      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000681c      85c9           test ecx, ecx
0x0000681e      0f8838010000   js 0x695c
0x00006824      4863d1         movsxd rdx, ecx
0x00006827      4c39d2         cmp rdx, r10
0x0000682a      730e           jae 0x683a
0x0000682c      4c01fa         add rdx, r15
0x0000682f      42803c3200     cmp byte [rdx + r14], 0
0x00006834      0f853c090000   jne 0x7176
0x0000683a      39c1           cmp ecx, eax
0x0000683c      7d08           jge 0x6846
0x0000683e      898544fcffff   mov dword [rbp - 0x3bc], eax
0x00006844      89c1           mov ecx, eax
0x00006846      8d4101         lea eax, [rcx + 1]
0x00006849      4c39d0         cmp rax, r10
0x0000684c      0f822e080000   jb 0x7080
0x00006852      4881fbfeffff.  cmp rbx, 0x7ffffffe
0x00006859      0f8741080000   ja 0x70a0
0x0000685f      4b8d3424       lea rsi, [r12 + r12]
0x00006863      8d5102         lea edx, [rcx + 2]
0x00006866      4d85e4         test r12, r12
0x00006869      48c7c0ffffff.  mov rax, 0xffffffffffffffff
0x00006870      480f49c6       cmovns rax, rsi
0x00006874      4c01f2         add rdx, r14
0x00006877      0f82bb0a0000   jb 0x7338
0x0000687d      4839d0         cmp rax, rdx
0x00006880      480f42c2       cmovb rax, rdx
0x00006884      4939c4         cmp r12, rax
0x00006887      0f83d3feffff   jae 0x6760
0x0000688d      4d85e4         test r12, r12
0x00006890      0f882bfbffff   js 0x63c1
0x00006896      4839c6         cmp rsi, rax
0x00006899      4989f4         mov r12, rsi
0x0000689c      730d           jae 0x68ab
0x0000689e      4883f8ff       cmp rax, 0xffffffffffffffff
0x000068a2      0f8419fbffff   je 0x63c1
0x000068a8      4989c4         mov r12, rax
0x000068ab      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000068b2      0f94c3         sete bl
0x000068b5      4d85ff         test r15, r15
0x000068b8      0f8482030000   je 0x6c40
0x000068be      84db           test bl, bl
0x000068c0      0f857a030000   jne 0x6c40
0x000068c6      4c89e6         mov rsi, r12
0x000068c9      4c89ff         mov rdi, r15
0x000068cc      e87facffff     call sym.imp.realloc
0x000068d1      4885c0         test rax, rax
0x000068d4      0f84e7faffff   je 0x63c1
0x000068da      4989c7         mov r15, rax
0x000068dd      e97efeffff     jmp 0x6760                              ; stdio2.h:-211
0x000068e2      660f1f440000   nop word [rax + rax]
0x000068e8      498b4550       mov rax, qword [r13 + 0x50]
0x000068ec      4b8d3c37       lea rdi, [r15 + r14]
0x000068f0      48c1e005       shl rax, 5
0x000068f4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x000068fb      448b4810       mov r9d, dword [rax + 0x10]
0x000068ff      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006905      83f801         cmp eax, 1
0x00006908      0f8432020000   je 0x6b40
0x0000690e      83f802         cmp eax, 2
0x00006911      0f8471020000   je 0x6b88
0x00006917      4883ec08       sub rsp, 8
0x0000691b      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006921      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006928      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x0000692f      ba01000000     mov edx, 1
0x00006934      4c89d6         mov rsi, r10
0x00006937      31c0           xor eax, eax
0x00006939      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006940      e8dba9ffff     call sym.imp.__snprintf_chk
0x00006945      5a             pop rdx
0x00006946      59             pop rcx
0x00006947      8b8d44fcffff   mov ecx, dword [rbp - 0x3bc]
0x0000694d      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]            ; ../coreutils-8.31/lib/vasnprintf.c:4942
0x00006954      85c9           test ecx, ecx
0x00006956      0f89c8feffff   jns 0x6824
0x0000695c      488bbd08fcff.  mov rdi, qword [rbp - 0x3f8]
0x00006963      807f0100       cmp byte [rdi + 1], 0
0x00006967      0f853b030000   jne 0x6ca8
0x0000696d      85c0           test eax, eax
0x0000696f      0f89c9feffff   jns 0x683e
0x00006975      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x0000697c      8b18           mov ebx, dword [rax]
0x0000697e      85db           test ebx, ebx
0x00006980      751e           jne 0x69a0
0x00006982      410fb64548     movzx eax, byte [r13 + 0x48]
0x00006987      bb16000000     mov ebx, 0x16
0x0000698c      83e0ef         and eax, 0xffffffef                     ; ../coreutils-8.31/lib/vasnprintf.c:4951 ; 4294967279
0x0000698f      3c63           cmp al, 0x63
0x00006991      b854000000     mov eax, 0x54                           ; 'T'
0x00006996      0f44d8         cmove ebx, eax
0x00006999      0f1f80000000.  nop dword [rax]
0x000069a0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000069a7      7409           je 0x69b2
0x000069a9      4d85ff         test r15, r15
0x000069ac      0f85aa070000   jne 0x715c
0x000069b2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000069b9      4885c0         test rax, rax
0x000069bc      7408           je 0x69c6
0x000069be      4889c7         mov rdi, rax
0x000069c1      e86aa9ffff     call sym.imp.free
0x000069c6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000069cd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000069d4      4883c020       add rax, 0x20                           ; "@"
0x000069d8      4839c7         cmp rdi, rax
0x000069db      7405           je 0x69e2
0x000069dd      e84ea9ffff     call sym.imp.free
0x000069e2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000069e9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000069f0      4883c010       add rax, 0x10
0x000069f4      4839c7         cmp rdi, rax
0x000069f7      7405           je 0x69fe
0x000069f9      e832a9ffff     call sym.imp.free
0x000069fe      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00006a05      4531ff         xor r15d, r15d
0x00006a08      8918           mov dword [rax], ebx
0x00006a0a      e920faffff     jmp 0x642f
0x00006a0f      90             nop
0x00006a10      498b4550       mov rax, qword [r13 + 0x50]
0x00006a14      4b8d3c37       lea rdi, [r15 + r14]
0x00006a18      48c1e005       shl rax, 5
0x00006a1c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006a23      db6810         fld xword [rax + 0x10]
0x00006a26      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006a2c      83f801         cmp eax, 1
0x00006a2f      0f842b060000   je 0x7060
0x00006a35      83f802         cmp eax, 2
0x00006a38      0f85c2040000   jne 0x6f00
0x00006a3e      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006a44      4883ec08       sub rsp, 8
0x00006a48      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/vasnprintf.c:4814
0x00006a4e      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006a55      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006a5c      4c89d6         mov rsi, r10
0x00006a5f      4883ec18       sub rsp, 0x18
0x00006a63      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006a6a      ba01000000     mov edx, 1
0x00006a6f      db7c2408       fstp xword [rsp + 8]
0x00006a73      50             push rax
0x00006a74      31c0           xor eax, eax
0x00006a76      4c8995d0fbff.  mov qword [rbp - 0x430], r10            ; ../coreutils-8.31/lib/vasnprintf.c:4808
0x00006a7d      e89ea8ffff     call sym.imp.__snprintf_chk
0x00006a82      4883c430       add rsp, 0x30
0x00006a86      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006a8d      e984fdffff     jmp 0x6816
0x00006a92      660f1f440000   nop word [rax + rax]
0x00006a98      498b4550       mov rax, qword [r13 + 0x50]
0x00006a9c      4b8d3c37       lea rdi, [r15 + r14]
0x00006aa0      48c1e005       shl rax, 5
0x00006aa4      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006aab      f20f104010     movsd xmm0, qword [rax + 0x10]
0x00006ab0      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006ab6      83f801         cmp eax, 1
0x00006ab9      0f8491050000   je 0x7050
0x00006abf      83f802         cmp eax, 2
0x00006ac2      0f85f8030000   jne 0x6ec0
0x00006ac8      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006ace      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006ad4      50             push rax
0x00006ad5      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006adc      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006ae3      4c89d6         mov rsi, r10
0x00006ae6      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006aed      ba01000000     mov edx, 1
0x00006af2      b801000000     mov eax, 1
0x00006af7      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006afe      e81da8ffff     call sym.imp.__snprintf_chk
0x00006b03      4158           pop r8
0x00006b05      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006b0c      4159           pop r9
0x00006b0e      e903fdffff     jmp 0x6816
0x00006b13      0f1f440000     nop dword [rax + rax]
0x00006b18      498b4550       mov rax, qword [r13 + 0x50]
0x00006b1c      4b8d3c37       lea rdi, [r15 + r14]
0x00006b20      48c1e005       shl rax, 5
0x00006b24      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006b2b      440fb74810     movzx r9d, word [rax + 0x10]
0x00006b30      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006b36      83f801         cmp eax, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4758
0x00006b39      0f85cffdffff   jne 0x690e
0x00006b3f      90             nop
0x00006b40      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006b46      4151           push r9
0x00006b48      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]
0x00006b4f      e9cdfdffff     jmp 0x6921
0x00006b54      0f1f4000       nop dword [rax]
0x00006b58      498b4550       mov rax, qword [r13 + 0x50]
0x00006b5c      4b8d3c37       lea rdi, [r15 + r14]
0x00006b60      48c1e005       shl rax, 5
0x00006b64      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006b6b      440fbf4810     movsx r9d, word [rax + 0x10]
0x00006b70      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006b76      83f801         cmp eax, 1
0x00006b79      74c5           je 0x6b40
0x00006b7b      83f802         cmp eax, 2
0x00006b7e      0f8593fdffff   jne 0x6917
0x00006b84      0f1f4000       nop dword [rax]
0x00006b88      4883ec08       sub rsp, 8
0x00006b8c      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006b92      4151           push r9
0x00006b94      8b854cfcffff   mov eax, dword [rbp - 0x3b4]
0x00006b9a      50             push rax
0x00006b9b      448b8d48fcff.  mov r9d, dword [rbp - 0x3b8]            ; ../coreutils-8.31/lib/vasnprintf.c:4623
0x00006ba2      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006ba9      4c89d6         mov rsi, r10
0x00006bac      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006bb3      ba01000000     mov edx, 1                              ; ../coreutils-8.31/lib/vasnprintf.c:4624
0x00006bb8      31c0           xor eax, eax
0x00006bba      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006bc1      e85aa7ffff     call sym.imp.__snprintf_chk
0x00006bc6      4883c420       add rsp, 0x20
0x00006bca      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006bd1      e940fcffff     jmp 0x6816
0x00006bd6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006be0      498b4550       mov rax, qword [r13 + 0x50]
0x00006be4      4b8d3c37       lea rdi, [r15 + r14]
0x00006be8      48c1e005       shl rax, 5
0x00006bec      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006bf3      440fb64810     movzx r9d, byte [rax + 0x10]
0x00006bf8      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006bfe      83f801         cmp eax, 1
0x00006c01      0f8507fdffff   jne 0x690e
0x00006c07      e934ffffff     jmp 0x6b40
0x00006c0c      0f1f4000       nop dword [rax]
0x00006c10      498b4550       mov rax, qword [r13 + 0x50]
0x00006c14      4b8d3c37       lea rdi, [r15 + r14]
0x00006c18      48c1e005       shl rax, 5
0x00006c1c      48038558fcff.  add rax, qword [rbp - 0x3a8]
0x00006c23      440fbe4810     movsx r9d, byte [rax + 0x10]
0x00006c28      8b8520fcffff   mov eax, dword [rbp - 0x3e0]
0x00006c2e      83f801         cmp eax, 1
0x00006c31      0f85d7fcffff   jne 0x690e
0x00006c37      e904ffffff     jmp 0x6b40
0x00006c3c      0f1f4000       nop dword [rax]
0x00006c40      4c89e7         mov rdi, r12
0x00006c43      e8b8a8ffff     call sym.imp.malloc
0x00006c48      4885c0         test rax, rax
0x00006c4b      4889c1         mov rcx, rax
0x00006c4e      0f846df7ffff   je 0x63c1
0x00006c54      4d85f6         test r14, r14
0x00006c57      0f84b3000000   je 0x6d10
0x00006c5d      84db           test bl, bl
0x00006c5f      0f84ab000000   je 0x6d10
0x00006c65      4c89fe         mov rsi, r15
0x00006c68      4c89f2         mov rdx, r14
0x00006c6b      4889c7         mov rdi, rax
0x00006c6e      e85da8ffff     call sym.imp.memcpy
0x00006c73      4989c7         mov r15, rax                            ; ../coreutils-8.31/lib/vasnprintf.c:1511
0x00006c76      e9e5faffff     jmp 0x6760
0x00006c7b      0f1f440000     nop dword [rax + rax]
0x00006c80      4883ec08       sub rsp, 8
0x00006c84      ffb510fcffff   push qword [rbp - 0x3f0]                ; ../coreutils-8.31/lib/xsize.h:-338
0x00006c8a      4151           push r9
0x00006c8c      e903ffffff     jmp 0x6b94
0x00006c91      0f1f80000000.  nop dword [rax]
0x00006c98      ffb510fcffff   push qword [rbp - 0x3f0]
0x00006c9e      4151           push r9
0x00006ca0      e9a3feffff     jmp 0x6b48
0x00006ca5      0f1f00         nop dword [rax]
0x00006ca8      c6470100       mov byte [rdi + 1], 0
0x00006cac      e9affaffff     jmp 0x6760
0x00006cb1      0f1f80000000.  nop dword [rax]
0x00006cb8      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006cbc      0f85b4040000   jne 0x7176
0x00006cc2      4c89f0         mov rax, r14
0x00006cc5      4883c001       add rax, 1
0x00006cc9      4889c3         mov rbx, rax
0x00006ccc      0f8386000000   jae 0x6d58
0x00006cd2      4983fcff       cmp r12, 0xffffffffffffffff
0x00006cd6      0f85d9f6ffff   jne 0x63b5
0x00006cdc      4c89e3         mov rbx, r12
0x00006cdf      43c6043725     mov byte [r15 + r14], 0x25              ; '%'
                                                                       ; [0x25:1]=0
0x00006ce4      4d8b4508       mov r8, qword [r13 + 8]
0x00006ce8      4983c558       add r13, 0x58
0x00006cec      498b4d00       mov rcx, qword [r13]
0x00006cf0      48838500fcff.  add qword [rbp - 0x400], 1
0x00006cf8      4c39c1         cmp rcx, r8
0x00006cfb      0f8598f6ffff   jne 0x6399
0x00006d01      4989de         mov r14, rbx
0x00006d04      e9faf7ffff     jmp 0x6503                              ; ../coreutils-8.31/lib/vasnprintf.c:1525
0x00006d09      0f1f80000000.  nop dword [rax]
0x00006d10      4989cf         mov r15, rcx
0x00006d13      e948faffff     jmp 0x6760                              ; ../coreutils-8.31/lib/vasnprintf.c:1514
0x00006d18      e833a6ffff     call sym.imp.__errno_location
0x00006d1d      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006d24      e9bef6ffff     jmp 0x63e7
0x00006d29      0f1f80000000.  nop dword [rax]
0x00006d30      89fa           mov edx, edi
0x00006d32      83ea12         sub edx, 0x12
0x00006d35      83fa04         cmp edx, 4
0x00006d38      0f8738040000   ja 0x7176
0x00006d3e      488d3d132f00.  lea rdi, [0x00009c58]
0x00006d45      488b4010       mov rax, qword [rax + 0x10]
0x00006d49      48631497       movsxd rdx, dword [rdi + rdx*4]
0x00006d4d      4801fa         add rdx, rdi
0x00006d50      ffe2           jmp rdx
0x00006d52      660f1f440000   nop word [rax + rax]
0x00006d58      4939c4         cmp r12, rax
0x00006d5b      7382           jae 0x6cdf
0x00006d5d      4d85e4         test r12, r12
0x00006d60      0f85ca030000   jne 0x7130
0x00006d66      4883f80c       cmp rax, 0xc
0x00006d6a      0f87d2030000   ja 0x7142
0x00006d70      41bc0c000000   mov r12d, 0xc
0x00006d76      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006d7d      0f94c2         sete dl
0x00006d80      4d85ff         test r15, r15
0x00006d83      0f8467020000   je 0x6ff0
0x00006d89      84d2           test dl, dl
0x00006d8b      0f855f020000   jne 0x6ff0
0x00006d91      4c89e6         mov rsi, r12
0x00006d94      4c89ff         mov rdi, r15
0x00006d97      e8b4a7ffff     call sym.imp.realloc                    ; ../coreutils-8.31/lib/vasnprintf.c:1487
0x00006d9c      4885c0         test rax, rax
0x00006d9f      0f84f6000000   je 0x6e9b
0x00006da5      4989c7         mov r15, rax
0x00006da8      e932ffffff     jmp 0x6cdf
0x00006dad      0f1f00         nop dword [rax]
0x00006db0      c78520fcffff.  mov dword [rbp - 0x3e0], 0
0x00006dba      e9e8f8ffff     jmp 0x66a7
0x00006dbf      90             nop
0x00006dc0      0f88eff5ffff   js 0x63b5
0x00006dc6      4d01e4         add r12, r12
0x00006dc9      4939c4         cmp r12, rax
0x00006dcc      0f83d4f6ffff   jae 0x64a6
0x00006dd2      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006dd6      0f84d9f5ffff   je 0x63b5
0x00006ddc      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006de3      4989c4         mov r12, rax
0x00006de6      0f94c2         sete dl
0x00006de9      4d85ff         test r15, r15
0x00006dec      0f85c7f6ffff   jne 0x64b9
0x00006df2      660f1f440000   nop word [rax + rax]
0x00006df8      4c89e7         mov rdi, r12
0x00006dfb      4c898520fcff.  mov qword [rbp - 0x3e0], r8
0x00006e02      889530fcffff   mov byte [rbp - 0x3d0], dl
0x00006e08      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006e0f      e8eca6ffff     call sym.imp.malloc
0x00006e14      4885c0         test rax, rax
0x00006e17      4989c1         mov r9, rax
0x00006e1a      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006e21      0fb69530fcff.  movzx edx, byte [rbp - 0x3d0]
0x00006e28      4c8b8520fcff.  mov r8, qword [rbp - 0x3e0]
0x00006e2f      0f8480f5ffff   je 0x63b5
0x00006e35      4885db         test rbx, rbx
0x00006e38      0f8402020000   je 0x7040
0x00006e3e      84d2           test dl, dl
0x00006e40      0f84fa010000   je 0x7040
0x00006e46      4c89fe         mov rsi, r15
0x00006e49      4889da         mov rdx, rbx
0x00006e4c      4889c7         mov rdi, rax
0x00006e4f      4c898530fcff.  mov qword [rbp - 0x3d0], r8
0x00006e56      48898d38fcff.  mov qword [rbp - 0x3c8], rcx
0x00006e5d      e86ea6ffff     call sym.imp.memcpy
0x00006e62      488b8d38fcff.  mov rcx, qword [rbp - 0x3c8]
0x00006e69      4989c7         mov r15, rax
0x00006e6c      4c8b8530fcff.  mov r8, qword [rbp - 0x3d0]
0x00006e73      e97cf6ffff     jmp 0x64f4
0x00006e78      0f1f84000000.  nop dword [rax + rax]
0x00006e80      4d89e6         mov r14, r12
0x00006e83      e96cf6ffff     jmp 0x64f4
0x00006e88      0f1f84000000.  nop dword [rax + rax]
0x00006e90      4c8930         mov qword [rax], r14
0x00006e93      4c89f3         mov rbx, r14
0x00006e96      e949feffff     jmp 0x6ce4
0x00006e9b      e8b0a4ffff     call sym.imp.__errno_location
0x00006ea0      48898538fcff.  mov qword [rbp - 0x3c8], rax
0x00006ea7      660f1f840000.  nop word [rax + rax]
0x00006eb0      4c89ff         mov rdi, r15
0x00006eb3      e878a4ffff     call sym.imp.free
0x00006eb8      e916f5ffff     jmp 0x63d3
0x00006ebd      0f1f00         nop dword [rax]
0x00006ec0      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006ec7      4c8b8528fcff.  mov r8, qword [rbp - 0x3d8]
0x00006ece      4c89d6         mov rsi, r10
0x00006ed1      48c7c1ffffff.  mov rcx, 0xffffffffffffffff
0x00006ed8      ba01000000     mov edx, 1
0x00006edd      b801000000     mov eax, 1
0x00006ee2      4c8995d0fbff.  mov qword [rbp - 0x430], r10
0x00006ee9      e832a4ffff     call sym.imp.__snprintf_chk
0x00006eee      4c8b95d0fbff.  mov r10, qword [rbp - 0x430]
0x00006ef5      e91cf9ffff     jmp 0x6816
0x00006efa      660f1f440000   nop word [rax + rax]
0x00006f00      4883ec10       sub rsp, 0x10
0x00006f04      4c8b8d10fcff.  mov r9, qword [rbp - 0x3f0]
0x00006f0b      db3c24         fstp xword [rsp]
0x00006f0e      e9d6f8ffff     jmp 0x67e9
0x00006f13      0f1f440000     nop dword [rax + rax]
0x00006f18      0f8897f4ffff   js 0x63b5
0x00006f1e      4d01e4         add r12, r12
0x00006f21      4939c4         cmp r12, rax
0x00006f24      0f83dff7ffff   jae 0x6709
0x00006f2a      660f1f440000   nop word [rax + rax]
0x00006f30      4885d2         test rdx, rdx
0x00006f33      0f857cf4ffff   jne 0x63b5
0x00006f39      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006f3d      0f8472f4ffff   je 0x63b5
0x00006f43      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00006f4a      4989c4         mov r12, rax
0x00006f4d      0f94c2         sete dl                                 ; string_fortified.h:-369
0x00006f50      4d85ff         test r15, r15
0x00006f53      0f85c3f7ffff   jne 0x671c
0x00006f59      0f1f80000000.  nop dword [rax]
0x00006f60      4c89e7         mov rdi, r12
0x00006f63      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006f69      e892a5ffff     call sym.imp.malloc
0x00006f6e      4885c0         test rax, rax
0x00006f71      4889c1         mov rcx, rax
0x00006f74      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x00006f7b      0f8434f4ffff   je 0x63b5                               ; ../coreutils-8.31/lib/vasnprintf.c:1528
0x00006f81      4d85f6         test r14, r14
0x00006f84      0f8496010000   je 0x7120
0x00006f8a      84d2           test dl, dl
0x00006f8c      0f848e010000   je 0x7120
0x00006f92      4c89fe         mov rsi, r15
0x00006f95      4c89f2         mov rdx, r14
0x00006f98      4889c7         mov rdi, rax
0x00006f9b      e830a5ffff     call sym.imp.memcpy                     ; ../coreutils-8.31/lib/vasnprintf.c:1531
0x00006fa0      4989c7         mov r15, rax
0x00006fa3      e993f7ffff     jmp 0x673b
0x00006fa8      0f1f84000000.  nop dword [rax + rax]
0x00006fb0      c6034c         mov byte [rbx], 0x4c                    ; 'L'
                                                                       ; [0x4c:1]=0
0x00006fb3      4883c301       add rbx, 1
0x00006fb7      e9aff6ffff     jmp 0x666b
0x00006fbc      0f1f4000       nop dword [rax]
0x00006fc0      448830         mov byte [rax], r14b
0x00006fc3      4c89f3         mov rbx, r14
0x00006fc6      e919fdffff     jmp 0x6ce4
0x00006fcb      0f1f440000     nop dword [rax + rax]
0x00006fd0      448930         mov dword [rax], r14d
0x00006fd3      4c89f3         mov rbx, r14
0x00006fd6      e909fdffff     jmp 0x6ce4
0x00006fdb      0f1f440000     nop dword [rax + rax]
0x00006fe0      66448930       mov word [rax], r14w
0x00006fe4      4c89f3         mov rbx, r14
0x00006fe7      e9f8fcffff     jmp 0x6ce4
0x00006fec      0f1f4000       nop dword [rax]
0x00006ff0      4c89e7         mov rdi, r12
0x00006ff3      889538fcffff   mov byte [rbp - 0x3c8], dl
0x00006ff9      e802a5ffff     call sym.imp.malloc
0x00006ffe      4885c0         test rax, rax
0x00007001      4889c1         mov rcx, rax
0x00007004      0fb69538fcff.  movzx edx, byte [rbp - 0x3c8]
0x0000700b      0f84a4f3ffff   je 0x63b5                               ; stdio2.h:-339
0x00007011      4d85f6         test r14, r14
0x00007014      0f843a010000   je 0x7154
0x0000701a      84d2           test dl, dl
0x0000701c      0f8432010000   je 0x7154
0x00007022      4c89fe         mov rsi, r15
0x00007025      4c89f2         mov rdx, r14
0x00007028      4889c7         mov rdi, rax
0x0000702b      e8a0a4ffff     call sym.imp.memcpy
0x00007030      4989c7         mov r15, rax
0x00007033      e9a7fcffff     jmp 0x6cdf
0x00007038      0f1f84000000.  nop dword [rax + rax]
0x00007040      4d89cf         mov r15, r9
0x00007043      e9acf4ffff     jmp 0x64f4
0x00007048      0f1f84000000.  nop dword [rax + rax]                   ; ../coreutils-8.31/lib/vasnprintf.c:5157
0x00007050      4883ec08       sub rsp, 8
0x00007054      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000705a      e976faffff     jmp 0x6ad5
0x0000705f      90             nop
0x00007060      4883ec08       sub rsp, 8
0x00007064      ffb510fcffff   push qword [rbp - 0x3f0]
0x0000706a      4883ec10       sub rsp, 0x10
0x0000706e      db3c24         fstp xword [rsp]
0x00007071      e925fbffff     jmp 0x6b9b
0x00007076      662e0f1f8400.  nop word cs:[rax + rax]
0x00007080      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00007087      8bbddcfbffff   mov edi, dword [rbp - 0x424]
0x0000708d      4863d9         movsxd rbx, ecx
0x00007090      4c01f3         add rbx, r14
0x00007093      8938           mov dword [rax], edi
0x00007095      e94afcffff     jmp 0x6ce4
0x0000709a      660f1f440000   nop word [rax + rax]
0x000070a0      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000070a7      7409           je 0x70b2
0x000070a9      4d85ff         test r15, r15
0x000070ac      0f85b7000000   jne 0x7169
0x000070b2      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x000070b9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5198
0x000070bc      7408           je 0x70c6
0x000070be      4889c7         mov rdi, rax
0x000070c1      e86aa2ffff     call sym.imp.free
0x000070c6      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x000070cd      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x000070d4      4883c020       add rax, 0x20                           ; "@"
0x000070d8      4839c7         cmp rdi, rax
0x000070db      7405           je 0x70e2
0x000070dd      e84ea2ffff     call sym.imp.free
0x000070e2      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000070e9      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000070f0      4883c010       add rax, 0x10
0x000070f4      4839c7         cmp rdi, rax
0x000070f7      7405           je 0x70fe
0x000070f9      e832a2ffff     call sym.imp.free
0x000070fe      488b8538fcff.  mov rax, qword [rbp - 0x3c8]
0x00007105      4531ff         xor r15d, r15d
0x00007108      c7004b000000   mov dword [rax], 0x4b                   ; 'K'
                                                                       ; [0x4b:4]=0
0x0000710e      e91cf3ffff     jmp 0x642f
0x00007113      0f1f440000     nop dword [rax + rax]
0x00007118      4531ff         xor r15d, r15d
0x0000711b      e90ff3ffff     jmp 0x642f
0x00007120      4989cf         mov r15, rcx
0x00007123      e913f6ffff     jmp 0x673b                              ; ../coreutils-8.31/lib/vasnprintf.c:1273
0x00007128      0f1f84000000.  nop dword [rax + rax]
0x00007130      0f887ff2ffff   js 0x63b5
0x00007136      4d01e4         add r12, r12
0x00007139      4939c4         cmp r12, rax
0x0000713c      0f8334fcffff   jae 0x6d76
0x00007142      4883f8ff       cmp rax, 0xffffffffffffffff
0x00007146      0f8469f2ffff   je 0x63b5
0x0000714c      4989c4         mov r12, rax
0x0000714f      e922fcffff     jmp 0x6d76
0x00007154      4989cf         mov r15, rcx
0x00007157      e983fbffff     jmp 0x6cdf
0x0000715c      4c89ff         mov rdi, r15
0x0000715f      e8cca1ffff     call sym.imp.free
0x00007164      e949f8ffff     jmp 0x69b2
0x00007169      4c89ff         mov rdi, r15                            ; ../coreutils-8.31/lib/vasnprintf.c:1275
0x0000716c      e8bfa1ffff     call sym.imp.free
0x00007171      e93cffffff     jmp 0x70b2
0x00007176      e8c5a1ffff     call sym.imp.abort
0x0000717b      0f1f440000     nop dword [rax + rax]
0x00007180      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x00007187      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x0000718e      4883c020       add rax, 0x20                           ; "@"
0x00007192      4839c7         cmp rdi, rax
0x00007195      7405           je 0x719c
0x00007197      e894a1ffff     call sym.imp.free
0x0000719c      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x000071a3      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x000071aa      4883c010       add rax, 0x10
0x000071ae      4839c7         cmp rdi, rax
0x000071b1      7405           je 0x71b8
0x000071b3      e878a1ffff     call sym.imp.free
0x000071b8      e893a1ffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/vasnprintf.c:5040
0x000071bd      4531ff         xor r15d, r15d
0x000071c0      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x17f00000
0x000071c6      e964f2ffff     jmp 0x642f
0x000071cb      4c89f3         mov rbx, r14
0x000071ce      31c0           xor eax, eax
0x000071d0      4883c301       add rbx, 1
0x000071d4      0f8206010000   jb 0x72e0
0x000071da      4939dc         cmp r12, rbx
0x000071dd      734d           jae 0x722c
0x000071df      4d85e4         test r12, r12
0x000071e2      0f8531010000   jne 0x7319                              ; ../coreutils-8.31/lib/vasnprintf.c:5048
0x000071e8      4883fb0c       cmp rbx, 0xc
0x000071ec      0f870c010000   ja 0x72fe
0x000071f2      41bc0c000000   mov r12d, 0xc
0x000071f8      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x000071ff      410f94c5       sete r13b
0x00007203      4d85ff         test r15, r15
0x00007206      0f84a0000000   je 0x72ac
0x0000720c      4584ed         test r13b, r13b
0x0000720f      0f8597000000   jne 0x72ac
0x00007215      4c89e6         mov rsi, r12
0x00007218      4c89ff         mov rdi, r15
0x0000721b      e830a3ffff     call sym.imp.realloc
0x00007220      4885c0         test rax, rax
0x00007223      0f8472fcffff   je 0x6e9b
0x00007229      4989c7         mov r15, rax
0x0000722c      4c3bbd18fcff.  cmp r15, qword [rbp - 0x3e8]
0x00007233      43c6043700     mov byte [r15 + r14], 0
0x00007238      7417           je 0x7251
0x0000723a      4939dc         cmp r12, rbx
0x0000723d      7612           jbe 0x7251
0x0000723f      4c89ff         mov rdi, r15
0x00007242      4889de         mov rsi, rbx
0x00007245      e806a3ffff     call sym.imp.realloc
0x0000724a      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/vasnprintf.c:5061
0x0000724d      4c0f45f8       cmovne r15, rax
0x00007251      488b85e0fbff.  mov rax, qword [rbp - 0x420]
0x00007258      4885c0         test rax, rax
0x0000725b      7408           je 0x7265
0x0000725d      4889c7         mov rdi, rax
0x00007260      e8cba0ffff     call sym.imp.free
0x00007265      488b85f8fbff.  mov rax, qword [rbp - 0x408]
0x0000726c      488bbd48fdff.  mov rdi, qword [rbp - 0x2b8]
0x00007273      4883c020       add rax, 0x20                           ; "@"
0x00007277      4839c7         cmp rdi, rax
0x0000727a      7405           je 0x7281
0x0000727c      e8afa0ffff     call sym.imp.free
0x00007281      488b85f0fbff.  mov rax, qword [rbp - 0x410]
0x00007288      488bbd58fcff.  mov rdi, qword [rbp - 0x3a8]
0x0000728f      4883c010       add rax, 0x10
0x00007293      4839c7         cmp rdi, rax
0x00007296      7405           je 0x729d
0x00007298      e893a0ffff     call sym.imp.free
0x0000729d      488b85e8fbff.  mov rax, qword [rbp - 0x418]
0x000072a4      4c8930         mov qword [rax], r14
0x000072a7      e983f1ffff     jmp 0x642f
0x000072ac      4c89e7         mov rdi, r12
0x000072af      e84ca2ffff     call sym.imp.malloc
0x000072b4      4885c0         test rax, rax
0x000072b7      4889c1         mov rcx, rax
0x000072ba      0f84f5f0ffff   je 0x63b5
0x000072c0      4d85f6         test r14, r14
0x000072c3      746b           je 0x7330
0x000072c5      4584ed         test r13b, r13b
0x000072c8      7466           je 0x7330
0x000072ca      4c89fe         mov rsi, r15
0x000072cd      4c89f2         mov rdx, r14
0x000072d0      4889c7         mov rdi, rax
0x000072d3      e8f8a1ffff     call sym.imp.memcpy
0x000072d8      4989c7         mov r15, rax
0x000072db      e94cffffff     jmp 0x722c                              ; ../coreutils-8.31/lib/vasnprintf.c:4732
0x000072e0      4983fcff       cmp r12, 0xffffffffffffffff
0x000072e4      b801000000     mov eax, 1
0x000072e9      0f843dffffff   je 0x722c
0x000072ef      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/vasnprintf.c:4421
0x000072f2      0f84bdf0ffff   je 0x63b5
0x000072f8      0f88b7f0ffff   js 0x63b5
0x000072fe      4885c0         test rax, rax
0x00007301      0f85aef0ffff   jne 0x63b5
0x00007307      4883fbff       cmp rbx, 0xffffffffffffffff
0x0000730b      0f84a4f0ffff   je 0x63b5
0x00007311      4989dc         mov r12, rbx
0x00007314      e9dffeffff     jmp 0x71f8
0x00007319      0f8896f0ffff   js 0x63b5
0x0000731f      4d01e4         add r12, r12
0x00007322      4939dc         cmp r12, rbx
0x00007325      0f83cdfeffff   jae 0x71f8
0x0000732b      ebd1           jmp 0x72fe
0x0000732d      0f1f00         nop dword [rax]
0x00007330      4989cf         mov r15, rcx
0x00007333      e9f4feffff     jmp 0x722c
0x00007338      4983fcff       cmp r12, 0xffffffffffffffff
0x0000733c      0f841ef4ffff   je 0x6760
0x00007342      e97af0ffff     jmp 0x63c1
0x00007347      e8d4a0ffff     call sym.imp.__stack_chk_fail
0x0000734c      4983fcff       cmp r12, 0xffffffffffffffff
0x00007350      ba01000000     mov edx, 1
0x00007355      0f84e0f3ffff   je 0x673b
0x0000735b      4d85e4         test r12, r12
0x0000735e      0f8451f0ffff   je 0x63b5
0x00007364      0f89c6fbffff   jns 0x6f30
0x0000736a      e946f0ffff     jmp 0x63b5
0x0000736f      90             nop
;-- printf_fetchargs:
0x00007370      48833e00       cmp qword [rsi], 0                      ; ../coreutils-8.31/lib/printf-args.c:37
0x00007374      488b4608       mov rax, qword [rsi + 8]
0x00007378      7463           je 0x73dd
0x0000737a      4c8d05ff2800.  lea r8, [0x00009c80]                    ; ../coreutils-8.31/lib/printf-args.c:42
0x00007381      4c8d15582900.  lea r10, obj.wide_null_string.2696      ; 0x9ce0 ; U"(NULL)"
0x00007388      4c8d0ddd2800.  lea r9, [0x00009c6c]                    ; "(NULL)"
0x0000738f      31c9           xor ecx, ecx
0x00007391      0f1f80000000.  nop dword [rax]
0x00007398      833816         cmp dword [rax], 0x16
0x0000739b      7743           ja 0x73e0
0x0000739d      8b10           mov edx, dword [rax]
0x0000739f      49631490       movsxd rdx, dword [r8 + rdx*4]
0x000073a3      4c01c2         add rdx, r8
0x000073a6      ffe2           jmp rdx
0x000073a8      0f1f84000000.  nop dword [rax + rax]
0x000073b0      488b5708       mov rdx, qword [rdi + 8]                ; stddef.h:38      && !defined(__need_wint_t))
0x000073b4      4883c20f       add rdx, 0xf
0x000073b8      4883e2f0       and rdx, 0xfffffffffffffff0
0x000073bc      4c8d5a10       lea r11, [rdx + 0x10]
0x000073c0      4c895f08       mov qword [rdi + 8], r11
0x000073c4      db2a           fld xword [rdx]
0x000073c6      db7810         fstp xword [rax + 0x10]
0x000073c9      0f1f80000000.  nop dword [rax]
0x000073d0      4883c101       add rcx, 1
0x000073d4      4883c020       add rax, 0x20                           ; stddef.h:-9 ; "@"
0x000073d8      48390e         cmp qword [rsi], rcx
0x000073db      77bb           ja 0x7398
0x000073dd      31c0           xor eax, eax
0x000073df      c3             ret
0x000073e0      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x000073e5      c3             ret
0x000073e6      448b1f         mov r11d, dword [rdi]
0x000073e9      4183fb2f       cmp r11d, 0x2f
0x000073ed      0f8737010000   ja 0x752a
0x000073f3      4489da         mov edx, r11d
0x000073f6      48035710       add rdx, qword [rdi + 0x10]             ; stddef.h:-54
0x000073fa      4183c308       add r11d, 8
0x000073fe      44891f         mov dword [rdi], r11d
0x00007401      488b12         mov rdx, qword [rdx]
0x00007404      48895010       mov qword [rax + 0x10], rdx
0x00007408      ebc6           jmp 0x73d0
0x0000740a      448b1f         mov r11d, dword [rdi]
0x0000740d      4183fb2f       cmp r11d, 0x2f
0x00007411      0f8735010000   ja 0x754c
0x00007417      4489da         mov edx, r11d
0x0000741a      48035710       add rdx, qword [rdi + 0x10]
0x0000741e      4183c308       add r11d, 8
0x00007422      44891f         mov dword [rdi], r11d
0x00007425      8b12           mov edx, dword [rdx]
0x00007427      895010         mov dword [rax + 0x10], edx
0x0000742a      eba4           jmp 0x73d0
0x0000742c      448b1f         mov r11d, dword [rdi]
0x0000742f      4183fb2f       cmp r11d, 0x2f
0x00007433      0f8702010000   ja 0x753b
0x00007439      4489da         mov edx, r11d                           ; stddef.h:-47
0x0000743c      48035710       add rdx, qword [rdi + 0x10]
0x00007440      4183c308       add r11d, 8
0x00007444      44891f         mov dword [rdi], r11d
0x00007447      8b12           mov edx, dword [rdx]
0x00007449      885010         mov byte [rax + 0x10], dl
0x0000744c      eb82           jmp 0x73d0
0x0000744e      448b1f         mov r11d, dword [rdi]
0x00007451      4183fb2f       cmp r11d, 0x2f
0x00007455      0f879f000000   ja 0x74fa
0x0000745b      4489da         mov edx, r11d
0x0000745e      48035710       add rdx, qword [rdi + 0x10]
0x00007462      4183c308       add r11d, 8
0x00007466      44891f         mov dword [rdi], r11d
0x00007469      8b12           mov edx, dword [rdx]
0x0000746b      66895010       mov word [rax + 0x10], dx
0x0000746f      e95cffffff     jmp 0x73d0
0x00007474      448b1f         mov r11d, dword [rdi]
0x00007477      4183fb2f       cmp r11d, 0x2f
0x0000747b      0f878a000000   ja 0x750b
0x00007481      4489da         mov edx, r11d
0x00007484      48035710       add rdx, qword [rdi + 0x10]
0x00007488      4183c308       add r11d, 8
0x0000748c      44891f         mov dword [rdi], r11d
0x0000748f      488b12         mov rdx, qword [rdx]
0x00007492      4885d2         test rdx, rdx
0x00007495      490f44d1       cmove rdx, r9                           ; stddef.h:-24
0x00007499      48895010       mov qword [rax + 0x10], rdx
0x0000749d      e92effffff     jmp 0x73d0
0x000074a2      448b5f04       mov r11d, dword [rdi + 4]
0x000074a6      4181fbaf0000.  cmp r11d, 0xaf
0x000074ad      0f87aa000000   ja 0x755d
0x000074b3      4489da         mov edx, r11d
0x000074b6      48035710       add rdx, qword [rdi + 0x10]
0x000074ba      4183c310       add r11d, 0x10
0x000074be      44895f04       mov dword [rdi + 4], r11d
0x000074c2      f20f1002       movsd xmm0, qword [rdx]
0x000074c6      f20f114010     movsd qword [rax + 0x10], xmm0
0x000074cb      e900ffffff     jmp 0x73d0
0x000074d0      448b1f         mov r11d, dword [rdi]
0x000074d3      4183fb2f       cmp r11d, 0x2f
0x000074d7      7743           ja 0x751c
0x000074d9      4489da         mov edx, r11d
0x000074dc      48035710       add rdx, qword [rdi + 0x10]
0x000074e0      4183c308       add r11d, 8
0x000074e4      44891f         mov dword [rdi], r11d
0x000074e7      488b12         mov rdx, qword [rdx]
0x000074ea      4885d2         test rdx, rdx
0x000074ed      490f44d2       cmove rdx, r10
0x000074f1      48895010       mov qword [rax + 0x10], rdx
0x000074f5      e9d6feffff     jmp 0x73d0
0x000074fa      488b5708       mov rdx, qword [rdi + 8]
0x000074fe      4c8d5a08       lea r11, [rdx + 8]
0x00007502      4c895f08       mov qword [rdi + 8], r11
0x00007506      e95effffff     jmp 0x7469
0x0000750b      488b5708       mov rdx, qword [rdi + 8]
0x0000750f      4c8d5a08       lea r11, [rdx + 8]
0x00007513      4c895f08       mov qword [rdi + 8], r11
0x00007517      e973ffffff     jmp 0x748f
0x0000751c      488b5708       mov rdx, qword [rdi + 8]
0x00007520      4c8d5a08       lea r11, [rdx + 8]
0x00007524      4c895f08       mov qword [rdi + 8], r11
0x00007528      ebbd           jmp 0x74e7
0x0000752a      488b5708       mov rdx, qword [rdi + 8]
0x0000752e      4c8d5a08       lea r11, [rdx + 8]
0x00007532      4c895f08       mov qword [rdi + 8], r11
0x00007536      e9c6feffff     jmp 0x7401
0x0000753b      488b5708       mov rdx, qword [rdi + 8]
0x0000753f      4c8d5a08       lea r11, [rdx + 8]
0x00007543      4c895f08       mov qword [rdi + 8], r11
0x00007547      e9fbfeffff     jmp 0x7447
0x0000754c      488b5708       mov rdx, qword [rdi + 8]
0x00007550      4c8d5a08       lea r11, [rdx + 8]
0x00007554      4c895f08       mov qword [rdi + 8], r11
0x00007558      e9c8feffff     jmp 0x7425
0x0000755d      488b5708       mov rdx, qword [rdi + 8]
0x00007561      4c8d5a08       lea r11, [rdx + 8]
0x00007565      4c895f08       mov qword [rdi + 8], r11
0x00007569      e954ffffff     jmp 0x74c2
0x0000756e      6690           nop
;-- printf_parse:
0x00007570      4157           push r15
0x00007572      4156           push r14
0x00007574      488d4e20       lea rcx, [rsi + 0x20]
0x00007578      4155           push r13
0x0000757a      4154           push r12
0x0000757c      488d4210       lea rax, [rdx + 0x10]
0x00007580      55             push rbp
0x00007581      53             push rbx
0x00007582      4989f6         mov r14, rsi
0x00007585      4989d7         mov r15, rdx
0x00007588      31db           xor ebx, ebx
0x0000758a      41b907000000   mov r9d, 7
0x00007590      4883ec58       sub rsp, 0x58
0x00007594      41ba07000000   mov r10d, 7
0x0000759a      48c706000000.  mov qword [rsi], 0
0x000075a1      48894e08       mov qword [rsi + 8], rcx
0x000075a5      48894c2428     mov qword [rsp + 0x28], rcx
0x000075aa      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x000075b1      48c702000000.  mov qword [rdx], 0
0x000075b8      4889442408     mov qword [rsp + 8], rax
0x000075bd      48894208       mov qword [rdx + 8], rax
0x000075c1      48c744241800.  mov qword [rsp + 0x18], 0
0x000075ca      48c744241000.  mov qword [rsp + 0x10], 0
0x000075d3      48c744242000.  mov qword [rsp + 0x20], 0
0x000075dc      eb0d           jmp 0x75eb
0x000075de      6690           nop
0x000075e0      3c25           cmp al, 0x25
0x000075e2      488d6f01       lea rbp, [rdi + 1]
0x000075e6      7440           je 0x7628
0x000075e8      4889ef         mov rdi, rbp
0x000075eb      0fb607         movzx eax, byte [rdi]
0x000075ee      84c0           test al, al
0x000075f0      75ee           jne 0x75e0
0x000075f2      488d049b       lea rax, [rbx + rbx*4]
0x000075f6      488d0443       lea rax, [rbx + rax*2]
0x000075fa      48893cc1       mov qword [rcx + rax*8], rdi
0x000075fe      488b442410     mov rax, qword [rsp + 0x10]
0x00007603      49894610       mov qword [r14 + 0x10], rax
0x00007607      488b442418     mov rax, qword [rsp + 0x18]
0x0000760c      49894618       mov qword [r14 + 0x18], rax
0x00007610      31c0           xor eax, eax
0x00007612      4883c458       add rsp, 0x58
0x00007616      5b             pop rbx
0x00007617      5d             pop rbp
0x00007618      415c           pop r12
0x0000761a      415d           pop r13
0x0000761c      415e           pop r14
0x0000761e      415f           pop r15
0x00007620      c3             ret
0x00007621      0f1f80000000.  nop dword [rax]
0x00007628      488d049b       lea rax, [rbx + rbx*4]
0x0000762c      4d89c5         mov r13, r8
0x0000762f      488d0443       lea rax, [rbx + rax*2]
0x00007633      4c8d24c1       lea r12, [rcx + rax*8]
0x00007637      49893c24       mov qword [r12], rdi
0x0000763b      41c744241000.  mov dword [r12 + 0x10], 0
0x00007644      49c744241800.  mov qword [r12 + 0x18], 0
0x0000764d      49c744242000.  mov qword [r12 + 0x20], 0
0x00007656      4d89442428     mov qword [r12 + 0x28], r8
0x0000765b      49c744243000.  mov qword [r12 + 0x30], 0
0x00007664      49c744243800.  mov qword [r12 + 0x38], 0
0x0000766d      4d89442440     mov qword [r12 + 0x40], r8
0x00007672      4d89442450     mov qword [r12 + 0x50], r8
0x00007677      0fb65f01       movzx ebx, byte [rdi + 1]
0x0000767b      8d43d0         lea eax, [rbx - 0x30]
0x0000767e      3c09           cmp al, 9
0x00007680      773c           ja 0x76be
0x00007682      e933040000     jmp 0x7aba
0x00007687      660f1f840000.  nop word [rax + rax]
0x00007690      80fb2d         cmp bl, 0x2d
0x00007693      7443           je 0x76d8
0x00007695      80fb2b         cmp bl, 0x2b
0x00007698      7446           je 0x76e0
0x0000769a      80fb20         cmp bl, 0x20                            ; "@"
0x0000769d      7451           je 0x76f0
0x0000769f      80fb23         cmp bl, 0x23
0x000076a2      745c           je 0x7700
0x000076a4      80fb30         cmp bl, 0x30
0x000076a7      7467           je 0x7710
0x000076a9      80fb49         cmp bl, 0x49
0x000076ac      7572           jne 0x7720
0x000076ae      41834c241040   or dword [r12 + 0x10], 0x40             ; segment.PHDR
                                                                       ; [0x40:4]=6
0x000076b4      0f1f4000       nop dword [rax]
0x000076b8      0fb618         movzx ebx, byte [rax]
0x000076bb      4889c5         mov rbp, rax
0x000076be      488d4501       lea rax, [rbp + 1]
0x000076c2      80fb27         cmp bl, 0x27
0x000076c5      4889c2         mov rdx, rax
0x000076c8      75c6           jne 0x7690
0x000076ca      41834c241001   or dword [r12 + 0x10], 1
0x000076d0      ebe6           jmp 0x76b8
0x000076d2      660f1f440000   nop word [rax + rax]
0x000076d8      41834c241002   or dword [r12 + 0x10], 2
0x000076de      ebd8           jmp 0x76b8
0x000076e0      41834c241004   or dword [r12 + 0x10], 4
0x000076e6      ebd0           jmp 0x76b8
0x000076e8      0f1f84000000.  nop dword [rax + rax]
0x000076f0      41834c241008   or dword [r12 + 0x10], 8
0x000076f6      ebc0           jmp 0x76b8
0x000076f8      0f1f84000000.  nop dword [rax + rax]
0x00007700      41834c241010   or dword [r12 + 0x10], 0x10             ; [0x10:4]=0x3e0003
0x00007706      ebb0           jmp 0x76b8
0x00007708      0f1f84000000.  nop dword [rax + rax]
0x00007710      41834c241020   or dword [r12 + 0x10], 0x20             ; [0x20:4]=64 ; "@"
0x00007716      eba0           jmp 0x76b8
0x00007718      0f1f84000000.  nop dword [rax + rax]
0x00007720      80fb2a         cmp bl, 0x2a
0x00007723      0f84b0010000   je 0x78d9
0x00007729      8d4bd0         lea ecx, [rbx - 0x30]
0x0000772c      80f909         cmp cl, 9
0x0000772f      0f8612040000   jbe 0x7b47
0x00007735      80fb2e         cmp bl, 0x2e
0x00007738      0f84d1020000   je 0x7a0f
0x0000773e      31c0           xor eax, eax
0x00007740      be01000000     mov esi, 1
0x00007745      eb30           jmp 0x7777
0x00007747      660f1f840000.  nop word [rax + rax]
0x00007750      80fb4c         cmp bl, 0x4c
0x00007753      743b           je 0x7790
0x00007755      80fb6c         cmp bl, 0x6c
0x00007758      7416           je 0x7770
0x0000775a      80fb6a         cmp bl, 0x6a
0x0000775d      7411           je 0x7770
0x0000775f      89da           mov edx, ebx
0x00007761      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00007764      80fa5a         cmp dl, 0x5a
0x00007767      7407           je 0x7770
0x00007769      80fb74         cmp bl, 0x74
0x0000776c      752a           jne 0x7798
0x0000776e      6690           nop
0x00007770      83c008         add eax, 8
0x00007773      0fb65d00       movzx ebx, byte [rbp]
0x00007777      4883c501       add rbp, 1
0x0000777b      80fb68         cmp bl, 0x68
0x0000777e      75d0           jne 0x7750
0x00007780      89c1           mov ecx, eax
0x00007782      89f2           mov edx, esi
0x00007784      83e101         and ecx, 1
0x00007787      d3e2           shl edx, cl
0x00007789      09d0           or eax, edx
0x0000778b      ebe6           jmp 0x7773
0x0000778d      0f1f00         nop dword [rax]
0x00007790      83c804         or eax, 4
0x00007793      ebde           jmp 0x7773
0x00007795      0f1f00         nop dword [rax]
0x00007798      8d53db         lea edx, [rbx - 0x25]
0x0000779b      80fa53         cmp dl, 0x53
0x0000779e      0f8717060000   ja 0x7dbb
0x000077a4      488d0d512500.  lea rcx, [0x00009cfc]
0x000077ab      0fb6d2         movzx edx, dl
0x000077ae      48631491       movsxd rdx, dword [rcx + rdx*4]
0x000077b2      4801ca         add rdx, rcx
0x000077b5      ffe2           jmp rdx
0x000077b7      41bb10000000   mov r11d, 0x10
0x000077bd      bb73000000     mov ebx, 0x73                           ; 's'
0x000077c2      660f1f440000   nop word [rax + rax]
0x000077c8      4983fdff       cmp r13, 0xffffffffffffffff
0x000077cc      0f84b5060000   je 0x7e87
0x000077d2      4d896c2450     mov qword [r12 + 0x50], r13
0x000077d7      4d39e9         cmp r9, r13
0x000077da      498b4f08       mov rcx, qword [r15 + 8]
0x000077de      0f861c060000   jbe 0x7e00
0x000077e4      498b07         mov rax, qword [r15]
0x000077e7      4889c2         mov rdx, rax
0x000077ea      48c1e205       shl rdx, 5
0x000077ee      4801ca         add rdx, rcx
0x000077f1      4c39e8         cmp rax, r13
0x000077f4      7720           ja 0x7816
0x000077f6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007800      4883c001       add rax, 1
0x00007804      c70200000000   mov dword [rdx], 0
0x0000780a      4883c220       add rdx, 0x20                           ; "@"
0x0000780e      4c39e8         cmp rax, r13
0x00007811      76ed           jbe 0x7800
0x00007813      498907         mov qword [r15], rax
0x00007816      49c1e505       shl r13, 5
0x0000781a      4a8d0429       lea rax, [rcx + r13]
0x0000781e      8b10           mov edx, dword [rax]
0x00007820      85d2           test edx, edx
0x00007822      0f85cb050000   jne 0x7df3
0x00007828      448918         mov dword [rax], r11d
0x0000782b      41885c2448     mov byte [r12 + 0x48], bl
0x00007830      498b06         mov rax, qword [r14]
0x00007833      49896c2408     mov qword [r12 + 8], rbp
0x00007838      488d5801       lea rbx, [rax + 1]
0x0000783c      4939da         cmp r10, rbx
0x0000783f      49891e         mov qword [r14], rbx
0x00007842      0f8788000000   ja 0x78d0
0x00007848      4d85d2         test r10, r10
0x0000784b      0f88a6090000   js 0x81f7
0x00007851      4d01d2         add r10, r10
0x00007854      48b8bae8a28b.  movabs rax, 0x2e8ba2e8ba2e8ba
0x0000785e      4939c2         cmp r10, rax
0x00007861      0f8790090000   ja 0x81f7
0x00007867      4b8d0492       lea rax, [r10 + r10*4]
0x0000786b      498b7e08       mov rdi, qword [r14 + 8]
0x0000786f      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007874      4c894c2440     mov qword [rsp + 0x40], r9
0x00007879      4c89542438     mov qword [rsp + 0x38], r10
0x0000787e      498d0442       lea rax, [r10 + rax*2]
0x00007882      4c89442430     mov qword [rsp + 0x30], r8
0x00007887      488d34c50000.  lea rsi, [rax*8]
0x0000788f      0f84b8060000   je 0x7f4d
0x00007895      e8b69cffff     call sym.imp.realloc
0x0000789a      4885c0         test rax, rax
0x0000789d      4889c1         mov rcx, rax
0x000078a0      4c8b442430     mov r8, qword [rsp + 0x30]
0x000078a5      4c8b542438     mov r10, qword [rsp + 0x38]
0x000078aa      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000078af      0f8442090000   je 0x81f7
0x000078b5      488b442428     mov rax, qword [rsp + 0x28]
0x000078ba      493b4608       cmp rax, qword [r14 + 8]
0x000078be      498b1e         mov rbx, qword [r14]
0x000078c1      0f84a9060000   je 0x7f70
0x000078c7      49894e08       mov qword [r14 + 8], rcx
0x000078cb      e918fdffff     jmp 0x75e8
0x000078d0      498b4e08       mov rcx, qword [r14 + 8]
0x000078d4      e90ffdffff     jmp 0x75e8
0x000078d9      488b742410     mov rsi, qword [rsp + 0x10]
0x000078de      b901000000     mov ecx, 1
0x000078e3      49896c2418     mov qword [r12 + 0x18], rbp
0x000078e8      4989442420     mov qword [r12 + 0x20], rax
0x000078ed      4885f6         test rsi, rsi
0x000078f0      480f45ce       cmovne rcx, rsi
0x000078f4      48894c2410     mov qword [rsp + 0x10], rcx
0x000078f9      0fb64d01       movzx ecx, byte [rbp + 1]
0x000078fd      8d71d0         lea esi, [rcx - 0x30]
0x00007900      4080fe09       cmp sil, 9
0x00007904      0f86db020000   jbe 0x7be5
0x0000790a      488b742420     mov rsi, qword [rsp + 0x20]
0x0000790f      4883feff       cmp rsi, 0xffffffffffffffff
0x00007913      488d5601       lea rdx, [rsi + 1]
0x00007917      4989742428     mov qword [r12 + 0x28], rsi
0x0000791c      0f8499040000   je 0x7dbb
0x00007922      488b5c2420     mov rbx, qword [rsp + 0x20]
0x00007927      4889c5         mov rbp, rax
0x0000792a      4889542420     mov qword [rsp + 0x20], rdx
0x0000792f      4939d9         cmp r9, rbx
0x00007932      498b4f08       mov rcx, qword [r15 + 8]
0x00007936      0f8776060000   ja 0x7fb2
0x0000793c      4d01c9         add r9, r9
0x0000793f      488d4301       lea rax, [rbx + 1]
0x00007943      4939d9         cmp r9, rbx
0x00007946      4c0f46c8       cmovbe r9, rax
0x0000794a      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007954      4939c1         cmp r9, rax
0x00007957      0f879e080000   ja 0x81fb
0x0000795d      4c89ce         mov rsi, r9
0x00007960      4c894c2440     mov qword [rsp + 0x40], r9
0x00007965      4c89542438     mov qword [rsp + 0x38], r10
0x0000796a      48c1e605       shl rsi, 5
0x0000796e      48394c2408     cmp qword [rsp + 8], rcx
0x00007973      4c89442430     mov qword [rsp + 0x30], r8
0x00007978      0f8413070000   je 0x8091
0x0000797e      4889cf         mov rdi, rcx
0x00007981      e8ca9bffff     call sym.imp.realloc
0x00007986      498b5708       mov rdx, qword [r15 + 8]
0x0000798a      4c8b442430     mov r8, qword [rsp + 0x30]
0x0000798f      4889c1         mov rcx, rax
0x00007992      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007997      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x0000799c      4885c9         test rcx, rcx
0x0000799f      0f84b2080000   je 0x8257
0x000079a5      4839542408     cmp qword [rsp + 8], rdx
0x000079aa      498b07         mov rax, qword [r15]
0x000079ad      0f84b8070000   je 0x816b
0x000079b3      49894f08       mov qword [r15 + 8], rcx
0x000079b7      4889c2         mov rdx, rax
0x000079ba      48c1e205       shl rdx, 5
0x000079be      4801ca         add rdx, rcx
0x000079c1      4839d8         cmp rax, rbx
0x000079c4      7720           ja 0x79e6
0x000079c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000079d0      4883c001       add rax, 1
0x000079d4      c70200000000   mov dword [rdx], 0
0x000079da      4883c220       add rdx, 0x20                           ; "@"
0x000079de      4839d8         cmp rax, rbx
0x000079e1      76ed           jbe 0x79d0
0x000079e3      498907         mov qword [r15], rax
0x000079e6      48c1e305       shl rbx, 5
0x000079ea      488d0419       lea rax, [rcx + rbx]
0x000079ee      8b10           mov edx, dword [rax]
0x000079f0      85d2           test edx, edx
0x000079f2      0f85d3040000   jne 0x7ecb
0x000079f8      c70005000000   mov dword [rax], 5
0x000079fe      0fb65d00       movzx ebx, byte [rbp]
0x00007a02      488d5501       lea rdx, [rbp + 1]
0x00007a06      80fb2e         cmp bl, 0x2e
0x00007a09      0f852ffdffff   jne 0x773e
0x00007a0f      807d012a       cmp byte [rbp + 1], 0x2a
0x00007a13      49896c2430     mov qword [r12 + 0x30], rbp
0x00007a18      0f8580010000   jne 0x7b9e
0x00007a1e      488b742418     mov rsi, qword [rsp + 0x18]
0x00007a23      4c8d5d02       lea r11, [rbp + 2]
0x00007a27      b802000000     mov eax, 2
0x00007a2c      4d895c2438     mov qword [r12 + 0x38], r11
0x00007a31      4883fe02       cmp rsi, 2
0x00007a35      480f43c6       cmovae rax, rsi
0x00007a39      4889442418     mov qword [rsp + 0x18], rax
0x00007a3e      0fbe4502       movsx eax, byte [rbp + 2]
0x00007a42      8d50d0         lea edx, [rax - 0x30]
0x00007a45      80fa09         cmp dl, 9
0x00007a48      0f868e060000   jbe 0x80dc
0x00007a4e      498b5c2440     mov rbx, qword [r12 + 0x40]
0x00007a53      4883fbff       cmp rbx, 0xffffffffffffffff
0x00007a57      0f8458060000   je 0x80b5
0x00007a5d      4939d9         cmp r9, rbx
0x00007a60      498b4f08       mov rcx, qword [r15 + 8]
0x00007a64      0f8665050000   jbe 0x7fcf
0x00007a6a      498b07         mov rax, qword [r15]
0x00007a6d      4889c2         mov rdx, rax
0x00007a70      48c1e205       shl rdx, 5
0x00007a74      4801ca         add rdx, rcx
0x00007a77      4839d8         cmp rax, rbx
0x00007a7a      771a           ja 0x7a96
0x00007a7c      0f1f4000       nop dword [rax]
0x00007a80      4883c001       add rax, 1
0x00007a84      c70200000000   mov dword [rdx], 0
0x00007a8a      4883c220       add rdx, 0x20                           ; "@"
0x00007a8e      4839d8         cmp rax, rbx
0x00007a91      76ed           jbe 0x7a80
0x00007a93      498907         mov qword [r15], rax
0x00007a96      48c1e305       shl rbx, 5
0x00007a9a      488d0419       lea rax, [rcx + rbx]
0x00007a9e      8b10           mov edx, dword [rax]
0x00007aa0      85d2           test edx, edx
0x00007aa2      0f8512050000   jne 0x7fba
0x00007aa8      c70005000000   mov dword [rax], 5
0x00007aae      4c89dd         mov rbp, r11
0x00007ab1      410fb61b       movzx ebx, byte [r11]
0x00007ab5      e984fcffff     jmp 0x773e
0x00007aba      4889e8         mov rax, rbp
0x00007abd      0f1f00         nop dword [rax]
0x00007ac0      4883c001       add rax, 1
0x00007ac4      0fb610         movzx edx, byte [rax]
0x00007ac7      8d4ad0         lea ecx, [rdx - 0x30]
0x00007aca      80f909         cmp cl, 9
0x00007acd      76f1           jbe 0x7ac0
0x00007acf      80fa24         cmp dl, 0x24
0x00007ad2      4d89c5         mov r13, r8
0x00007ad5      0f85e3fbffff   jne 0x76be
0x00007adb      31d2           xor edx, edx
0x00007add      0fbec3         movsx eax, bl
0x00007ae0      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007aea      4c89c6         mov rsi, r8
0x00007aed      83e830         sub eax, 0x30
0x00007af0      4839fa         cmp rdx, rdi
0x00007af3      4898           cdqe
0x00007af5      7707           ja 0x7afe
0x00007af7      488d3492       lea rsi, [rdx + rdx*4]
0x00007afb      4801f6         add rsi, rsi
0x00007afe      4889e9         mov rcx, rbp
0x00007b01      4801f0         add rax, rsi
0x00007b04      0fb65d01       movzx ebx, byte [rbp + 1]
0x00007b08      400f92c6       setb sil
0x00007b0c      4883c501       add rbp, 1
0x00007b10      4889c2         mov rdx, rax
0x00007b13      400fb6f6       movzx esi, sil
0x00007b17      4885f6         test rsi, rsi
0x00007b1a      8d7bd0         lea edi, [rbx - 0x30]
0x00007b1d      0f858b030000   jne 0x7eae
0x00007b23      4080ff09       cmp dil, 9
0x00007b27      76b4           jbe 0x7add
0x00007b29      4989c5         mov r13, rax
0x00007b2c      4983ed01       sub r13, 1
0x00007b30      4983fdfd       cmp r13, 0xfffffffffffffffd
0x00007b34      0f8781020000   ja 0x7dbb
0x00007b3a      488d6902       lea rbp, [rcx + 2]
0x00007b3e      0fb65902       movzx ebx, byte [rcx + 2]
0x00007b42      e977fbffff     jmp 0x76be
0x00007b47      49896c2418     mov qword [r12 + 0x18], rbp
0x00007b4c      0fb67d00       movzx edi, byte [rbp]
0x00007b50      4889ee         mov rsi, rbp
0x00007b53      8d4fd0         lea ecx, [rdi - 0x30]
0x00007b56      80f909         cmp cl, 9
0x00007b59      760c           jbe 0x7b67
0x00007b5b      eb33           jmp 0x7b90
0x00007b5d      0f1f00         nop dword [rax]
0x00007b60      4889c5         mov rbp, rax
0x00007b63      4883c001       add rax, 1
0x00007b67      0fb638         movzx edi, byte [rax]
0x00007b6a      8d57d0         lea edx, [rdi - 0x30]
0x00007b6d      80fa09         cmp dl, 9
0x00007b70      76ee           jbe 0x7b60
0x00007b72      4889c1         mov rcx, rax
0x00007b75      488d5502       lea rdx, [rbp + 2]
0x00007b79      4889c5         mov rbp, rax
0x00007b7c      4829f1         sub rcx, rsi
0x00007b7f      488b742410     mov rsi, qword [rsp + 0x10]
0x00007b84      4839ce         cmp rsi, rcx
0x00007b87      480f43ce       cmovae rcx, rsi
0x00007b8b      48894c2410     mov qword [rsp + 0x10], rcx
0x00007b90      49896c2420     mov qword [r12 + 0x20], rbp
0x00007b95      0fb65d00       movzx ebx, byte [rbp]
0x00007b99      e997fbffff     jmp 0x7735
0x00007b9e      0fb64501       movzx eax, byte [rbp + 1]
0x00007ba2      83e830         sub eax, 0x30
0x00007ba5      3c09           cmp al, 9
0x00007ba7      7715           ja 0x7bbe
0x00007ba9      0f1f80000000.  nop dword [rax]
0x00007bb0      4883c201       add rdx, 1
0x00007bb4      0fb602         movzx eax, byte [rdx]
0x00007bb7      83e830         sub eax, 0x30
0x00007bba      3c09           cmp al, 9
0x00007bbc      76f2           jbe 0x7bb0
0x00007bbe      488b742418     mov rsi, qword [rsp + 0x18]
0x00007bc3      4889d0         mov rax, rdx
0x00007bc6      4989542438     mov qword [r12 + 0x38], rdx
0x00007bcb      4829e8         sub rax, rbp
0x00007bce      0fb61a         movzx ebx, byte [rdx]
0x00007bd1      4889d5         mov rbp, rdx
0x00007bd4      4839c6         cmp rsi, rax
0x00007bd7      480f43c6       cmovae rax, rsi
0x00007bdb      4889442418     mov qword [rsp + 0x18], rax
0x00007be0      e959fbffff     jmp 0x773e
0x00007be5      4889c6         mov rsi, rax
0x00007be8      4883c601       add rsi, 1
0x00007bec      0fb63e         movzx edi, byte [rsi]
0x00007bef      448d5fd0       lea r11d, [rdi - 0x30]
0x00007bf3      4180fb09       cmp r11b, 9
0x00007bf7      76ef           jbe 0x7be8
0x00007bf9      4080ff24       cmp dil, 0x24
0x00007bfd      0f8507fdffff   jne 0x790a
0x00007c03      31f6           xor esi, esi
0x00007c05      0fbec1         movsx eax, cl
0x00007c08      48bf99999999.  movabs rdi, 0x1999999999999999
0x00007c12      4c89c1         mov rcx, r8
0x00007c15      83e830         sub eax, 0x30
0x00007c18      4839fe         cmp rsi, rdi
0x00007c1b      4898           cdqe
0x00007c1d      7707           ja 0x7c26
0x00007c1f      488d0cb6       lea rcx, [rsi + rsi*4]
0x00007c23      4801c9         add rcx, rcx
0x00007c26      4889d5         mov rbp, rdx
0x00007c29      4531db         xor r11d, r11d
0x00007c2c      4801c8         add rax, rcx
0x00007c2f      0fb64a01       movzx ecx, byte [rdx + 1]
0x00007c33      410f92c3       setb r11b
0x00007c37      4883c201       add rdx, 1
0x00007c3b      4889c6         mov rsi, rax
0x00007c3e      4d85db         test r11, r11
0x00007c41      8d79d0         lea edi, [rcx - 0x30]
0x00007c44      0f8504050000   jne 0x814e
0x00007c4a      4080ff09       cmp dil, 9
0x00007c4e      76b5           jbe 0x7c05
0x00007c50      488d58ff       lea rbx, [rax - 1]
0x00007c54      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x00007c58      0f875d010000   ja 0x7dbb
0x00007c5e      49895c2428     mov qword [r12 + 0x28], rbx
0x00007c63      4883c502       add rbp, 2
0x00007c67      e9c3fcffff     jmp 0x792f
0x00007c6c      83f80f         cmp eax, 0xf
0x00007c6f      41bb16000000   mov r11d, 0x16
0x00007c75      0f8f4dfbffff   jg 0x77c8
0x00007c7b      a804           test al, 4
0x00007c7d      0f8545fbffff   jne 0x77c8
0x00007c83      83f807         cmp eax, 7
0x00007c86      41bb15000000   mov r11d, 0x15
0x00007c8c      0f8f36fbffff   jg 0x77c8
0x00007c92      a802           test al, 2
0x00007c94      41bb12000000   mov r11d, 0x12
0x00007c9a      0f8528fbffff   jne 0x77c8
0x00007ca0      4531db         xor r11d, r11d
0x00007ca3      a801           test al, 1
0x00007ca5      410f94c3       sete r11b
0x00007ca9      4183c313       add r11d, 0x13
0x00007cad      e916fbffff     jmp 0x77c8
0x00007cb2      660f1f440000   nop word [rax + rax]
0x00007cb8      4531db         xor r11d, r11d
0x00007cbb      83f807         cmp eax, 7
0x00007cbe      410f9fc3       setg r11b
0x00007cc2      4183c30d       add r11d, 0xd
0x00007cc6      e9fdfaffff     jmp 0x77c8
0x00007ccb      83f80f         cmp eax, 0xf
0x00007cce      41bb09000000   mov r11d, 9
0x00007cd4      0f8feefaffff   jg 0x77c8
0x00007cda      a804           test al, 4
0x00007cdc      0f85e6faffff   jne 0x77c8
0x00007ce2      83f807         cmp eax, 7
0x00007ce5      41bb07000000   mov r11d, 7
0x00007ceb      0f8fd7faffff   jg 0x77c8
0x00007cf1      a802           test al, 2
0x00007cf3      41bb01000000   mov r11d, 1
0x00007cf9      0f85c9faffff   jne 0x77c8
0x00007cff      83e001         and eax, 1
0x00007d02      83f801         cmp eax, 1
0x00007d05      4519db         sbb r11d, r11d
0x00007d08      4183e302       and r11d, 2
0x00007d0c      4183c303       add r11d, 3
0x00007d10      e9b3faffff     jmp 0x77c8
0x00007d15      0f1f00         nop dword [rax]
0x00007d18      4531db         xor r11d, r11d
0x00007d1b      83f807         cmp eax, 7
0x00007d1e      410f9fc3       setg r11b
0x00007d22      4183c30f       add r11d, 0xf
0x00007d26      e99dfaffff     jmp 0x77c8
0x00007d2b      83f80f         cmp eax, 0xf
0x00007d2e      41bb0c000000   mov r11d, 0xc
0x00007d34      0f8f8efaffff   jg 0x77c8
0x00007d3a      4531db         xor r11d, r11d
0x00007d3d      a804           test al, 4
0x00007d3f      410f95c3       setne r11b
0x00007d43      4183c30b       add r11d, 0xb
0x00007d47      e97cfaffff     jmp 0x77c8
0x00007d4c      41bb0e000000   mov r11d, 0xe
0x00007d52      bb63000000     mov ebx, 0x63                           ; 'c'
0x00007d57      e96cfaffff     jmp 0x77c8
0x00007d5c      83f80f         cmp eax, 0xf
0x00007d5f      41bb0a000000   mov r11d, 0xa
0x00007d65      0f8f5dfaffff   jg 0x77c8
0x00007d6b      a804           test al, 4
0x00007d6d      0f8555faffff   jne 0x77c8
0x00007d73      83f807         cmp eax, 7
0x00007d76      41bb08000000   mov r11d, 8
0x00007d7c      0f8f46faffff   jg 0x77c8
0x00007d82      a802           test al, 2
0x00007d84      41bb02000000   mov r11d, 2
0x00007d8a      0f8538faffff   jne 0x77c8
0x00007d90      83e001         and eax, 1
0x00007d93      83f801         cmp eax, 1
0x00007d96      4519db         sbb r11d, r11d
0x00007d99      4183e302       and r11d, 2
0x00007d9d      4183c304       add r11d, 4
0x00007da1      e922faffff     jmp 0x77c8
0x00007da6      662e0f1f8400.  nop word cs:[rax + rax]
0x00007db0      41bb11000000   mov r11d, 0x11
0x00007db6      e90dfaffff     jmp 0x77c8
0x00007dbb      498b4f08       mov rcx, qword [r15 + 8]
0x00007dbf      48394c2408     cmp qword [rsp + 8], rcx
0x00007dc4      7408           je 0x7dce
0x00007dc6      4889cf         mov rdi, rcx
0x00007dc9      e86295ffff     call sym.imp.free
0x00007dce      498b7e08       mov rdi, qword [r14 + 8]
0x00007dd2      48397c2428     cmp qword [rsp + 0x28], rdi
0x00007dd7      7405           je 0x7dde
0x00007dd9      e85295ffff     call sym.imp.free
0x00007dde      e86d95ffff     call sym.imp.__errno_location
0x00007de3      c70016000000   mov dword [rax], 0x16                   ; [0x16:4]=0x17f00000
0x00007de9      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x00007dee      e91ff8ffff     jmp 0x7612
0x00007df3      4439da         cmp edx, r11d
0x00007df6      0f842ffaffff   je 0x782b
0x00007dfc      ebc1           jmp 0x7dbf
0x00007dfe      6690           nop
0x00007e00      4d01c9         add r9, r9
0x00007e03      498d4501       lea rax, [r13 + 1]
0x00007e07      4d39e9         cmp r9, r13
0x00007e0a      4c0f46c8       cmovbe r9, rax
0x00007e0e      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007e18      4939c1         cmp r9, rax
0x00007e1b      0f87da030000   ja 0x81fb
0x00007e21      4c89ce         mov rsi, r9
0x00007e24      4c894c2448     mov qword [rsp + 0x48], r9
0x00007e29      4c89542440     mov qword [rsp + 0x40], r10
0x00007e2e      48c1e605       shl rsi, 5
0x00007e32      48394c2408     cmp qword [rsp + 8], rcx
0x00007e37      4c89442438     mov qword [rsp + 0x38], r8
0x00007e3c      44895c2430     mov dword [rsp + 0x30], r11d
0x00007e41      0f849a000000   je 0x7ee1
0x00007e47      4889cf         mov rdi, rcx
0x00007e4a      e80197ffff     call sym.imp.realloc
0x00007e4f      4885c0         test rax, rax
0x00007e52      4889c1         mov rcx, rax
0x00007e55      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007e5a      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007e5f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007e64      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007e69      0f8488030000   je 0x81f7
0x00007e6f      488b442408     mov rax, qword [rsp + 8]
0x00007e74      493b4708       cmp rax, qword [r15 + 8]
0x00007e78      0f848b000000   je 0x7f09
0x00007e7e      49894f08       mov qword [r15 + 8], rcx
0x00007e82      e95df9ffff     jmp 0x77e4
0x00007e87      488b742420     mov rsi, qword [rsp + 0x20]
0x00007e8c      4883feff       cmp rsi, 0xffffffffffffffff
0x00007e90      488d4601       lea rax, [rsi + 1]
0x00007e94      4989742450     mov qword [r12 + 0x50], rsi
0x00007e99      0f841cffffff   je 0x7dbb
0x00007e9f      4c8b6c2420     mov r13, qword [rsp + 0x20]
0x00007ea4      4889442420     mov qword [rsp + 0x20], rax
0x00007ea9      e929f9ffff     jmp 0x77d7
0x00007eae      4080ff09       cmp dil, 9
0x00007eb2      0f8703ffffff   ja 0x7dbb
0x00007eb8      0fbec3         movsx eax, bl
0x00007ebb      4c89c6         mov rsi, r8
0x00007ebe      4889e9         mov rcx, rbp
0x00007ec1      83e830         sub eax, 0x30
0x00007ec4      4898           cdqe
0x00007ec6      e936fcffff     jmp 0x7b01
0x00007ecb      83fa05         cmp edx, 5
0x00007ece      0f85ebfeffff   jne 0x7dbf
0x00007ed4      0fb65d00       movzx ebx, byte [rbp]
0x00007ed8      488d5501       lea rdx, [rbp + 1]
0x00007edc      e954f8ffff     jmp 0x7735
0x00007ee1      4889f7         mov rdi, rsi
0x00007ee4      e81796ffff     call sym.imp.malloc
0x00007ee9      4885c0         test rax, rax
0x00007eec      4889c1         mov rcx, rax
0x00007eef      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007ef4      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007ef9      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007efe      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007f03      0f8463010000   je 0x806c
0x00007f09      498b17         mov rdx, qword [r15]
0x00007f0c      488b742408     mov rsi, qword [rsp + 8]
0x00007f11      4889cf         mov rdi, rcx
0x00007f14      4c894c2448     mov qword [rsp + 0x48], r9
0x00007f19      4c89542440     mov qword [rsp + 0x40], r10
0x00007f1e      4c89442438     mov qword [rsp + 0x38], r8
0x00007f23      44895c2430     mov dword [rsp + 0x30], r11d
0x00007f28      48c1e205       shl rdx, 5
0x00007f2c      e89f95ffff     call sym.imp.memcpy
0x00007f31      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00007f36      4c8b542440     mov r10, qword [rsp + 0x40]
0x00007f3b      4889c1         mov rcx, rax
0x00007f3e      4c8b442438     mov r8, qword [rsp + 0x38]
0x00007f43      448b5c2430     mov r11d, dword [rsp + 0x30]
0x00007f48      e931ffffff     jmp 0x7e7e
0x00007f4d      4889f7         mov rdi, rsi
0x00007f50      e8ab95ffff     call sym.imp.malloc
0x00007f55      4885c0         test rax, rax
0x00007f58      4889c1         mov rcx, rax
0x00007f5b      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007f60      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007f65      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007f6a      0f84e9000000   je 0x8059
0x00007f70      488d049b       lea rax, [rbx + rbx*4]
0x00007f74      488b742428     mov rsi, qword [rsp + 0x28]
0x00007f79      4889cf         mov rdi, rcx
0x00007f7c      4c894c2440     mov qword [rsp + 0x40], r9
0x00007f81      4c89542438     mov qword [rsp + 0x38], r10
0x00007f86      488d1443       lea rdx, [rbx + rax*2]
0x00007f8a      4c89442430     mov qword [rsp + 0x30], r8
0x00007f8f      48c1e203       shl rdx, 3
0x00007f93      e83895ffff     call sym.imp.memcpy
0x00007f98      498b1e         mov rbx, qword [r14]
0x00007f9b      4889c1         mov rcx, rax
0x00007f9e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00007fa3      4c8b542438     mov r10, qword [rsp + 0x38]
0x00007fa8      4c8b442430     mov r8, qword [rsp + 0x30]
0x00007fad      e915f9ffff     jmp 0x78c7
0x00007fb2      498b07         mov rax, qword [r15]
0x00007fb5      e9fdf9ffff     jmp 0x79b7
0x00007fba      83fa05         cmp edx, 5
0x00007fbd      0f85fcfdffff   jne 0x7dbf
0x00007fc3      410fb61b       movzx ebx, byte [r11]
0x00007fc7      4c89dd         mov rbp, r11
0x00007fca      e96ff7ffff     jmp 0x773e
0x00007fcf      4d01c9         add r9, r9
0x00007fd2      488d4301       lea rax, [rbx + 1]
0x00007fd6      4939d9         cmp r9, rbx
0x00007fd9      4c0f46c8       cmovbe r9, rax
0x00007fdd      48b8ffffffff.  movabs rax, 0x7ffffffffffffff           ; 576460752303423487
0x00007fe7      4939c1         cmp r9, rax
0x00007fea      0f870b020000   ja 0x81fb
0x00007ff0      4c89ce         mov rsi, r9
0x00007ff3      4c894c2448     mov qword [rsp + 0x48], r9
0x00007ff8      4c89542440     mov qword [rsp + 0x40], r10
0x00007ffd      48c1e605       shl rsi, 5
0x00008001      48394c2408     cmp qword [rsp + 8], rcx
0x00008006      4c89442438     mov qword [rsp + 0x38], r8
0x0000800b      4c895c2430     mov qword [rsp + 0x30], r11
0x00008010      0f84b8010000   je 0x81ce
0x00008016      4889cf         mov rdi, rcx
0x00008019      e83295ffff     call sym.imp.realloc
0x0000801e      498b5708       mov rdx, qword [r15 + 8]
0x00008022      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008027      4889c1         mov rcx, rax
0x0000802a      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000802f      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008034      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x00008039      4885c9         test rcx, rcx
0x0000803c      0f8415020000   je 0x8257
0x00008042      4839542408     cmp qword [rsp + 8], rdx
0x00008047      498b07         mov rax, qword [r15]
0x0000804a      0f84c0010000   je 0x8210
0x00008050      49894f08       mov qword [r15 + 8], rcx
0x00008054      e914faffff     jmp 0x7a6d
0x00008059      498b4f08       mov rcx, qword [r15 + 8]
0x0000805d      48394c2408     cmp qword [rsp + 8], rcx
0x00008062      7418           je 0x807c
0x00008064      4889cf         mov rdi, rcx
0x00008067      e8c492ffff     call sym.imp.free
0x0000806c      498b7e08       mov rdi, qword [r14 + 8]
0x00008070      48397c2428     cmp qword [rsp + 0x28], rdi
0x00008075      7405           je 0x807c
0x00008077      e8b492ffff     call sym.imp.free
0x0000807c      e8cf92ffff     call sym.imp.__errno_location
0x00008081      c7000c000000   mov dword [rax], 0xc                    ; [0xc:4]=0
0x00008087      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000808c      e981f5ffff     jmp 0x7612
0x00008091      4889f7         mov rdi, rsi
0x00008094      e86794ffff     call sym.imp.malloc
0x00008099      488b542408     mov rdx, qword [rsp + 8]
0x0000809e      4889c1         mov rcx, rax
0x000080a1      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x000080a6      4c8b542438     mov r10, qword [rsp + 0x38]
0x000080ab      4c8b442430     mov r8, qword [rsp + 0x30]
0x000080b0      e9e7f8ffff     jmp 0x799c
0x000080b5      488b742420     mov rsi, qword [rsp + 0x20]
0x000080ba      4883feff       cmp rsi, 0xffffffffffffffff
0x000080be      488d4601       lea rax, [rsi + 1]
0x000080c2      4989742440     mov qword [r12 + 0x40], rsi
0x000080c7      0f84eefcffff   je 0x7dbb
0x000080cd      488b5c2420     mov rbx, qword [rsp + 0x20]
0x000080d2      4889442420     mov qword [rsp + 0x20], rax
0x000080d7      e981f9ffff     jmp 0x7a5d
0x000080dc      4c89da         mov rdx, r11
0x000080df      4883c201       add rdx, 1
0x000080e3      0fb60a         movzx ecx, byte [rdx]
0x000080e6      8d71d0         lea esi, [rcx - 0x30]
0x000080e9      4080fe09       cmp sil, 9
0x000080ed      76f0           jbe 0x80df
0x000080ef      80f924         cmp cl, 0x24
0x000080f2      0f8556f9ffff   jne 0x7a4e
0x000080f8      31c9           xor ecx, ecx
0x000080fa      48be99999999.  movabs rsi, 0x1999999999999999
0x00008104      83e830         sub eax, 0x30
0x00008107      4c89c2         mov rdx, r8
0x0000810a      4839f1         cmp rcx, rsi
0x0000810d      4898           cdqe
0x0000810f      7707           ja 0x8118
0x00008111      488d1489       lea rdx, [rcx + rcx*4]
0x00008115      4801d2         add rdx, rdx
0x00008118      4c89de         mov rsi, r11
0x0000811b      31db           xor ebx, ebx
0x0000811d      4801c2         add rdx, rax
0x00008120      410fbe4301     movsx eax, byte [r11 + 1]
0x00008125      0f92c3         setb bl
0x00008128      4983c301       add r11, 1
0x0000812c      4889d1         mov rcx, rdx
0x0000812f      4885db         test rbx, rbx
0x00008132      8d78d0         lea edi, [rax - 0x30]
0x00008135      7471           je 0x81a8
0x00008137      4080ff09       cmp dil, 9
0x0000813b      0f877afcffff   ja 0x7dbb
0x00008141      83e830         sub eax, 0x30
0x00008144      4c89c2         mov rdx, r8
0x00008147      4c89de         mov rsi, r11
0x0000814a      4898           cdqe
0x0000814c      ebcd           jmp 0x811b
0x0000814e      4080ff09       cmp dil, 9
0x00008152      0f8763fcffff   ja 0x7dbb
0x00008158      0fbec1         movsx eax, cl
0x0000815b      4889d5         mov rbp, rdx
0x0000815e      4c89c1         mov rcx, r8
0x00008161      83e830         sub eax, 0x30
0x00008164      4898           cdqe
0x00008166      e9befaffff     jmp 0x7c29
0x0000816b      488b742408     mov rsi, qword [rsp + 8]
0x00008170      48c1e005       shl rax, 5
0x00008174      4889cf         mov rdi, rcx
0x00008177      4889c2         mov rdx, rax
0x0000817a      4c894c2440     mov qword [rsp + 0x40], r9
0x0000817f      4c89542438     mov qword [rsp + 0x38], r10
0x00008184      4c89442430     mov qword [rsp + 0x30], r8
0x00008189      e84293ffff     call sym.imp.memcpy
0x0000818e      4c8b4c2440     mov r9, qword [rsp + 0x40]
0x00008193      4889c1         mov rcx, rax
0x00008196      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000819b      498b07         mov rax, qword [r15]
0x0000819e      4c8b442430     mov r8, qword [rsp + 0x30]
0x000081a3      e90bf8ffff     jmp 0x79b3
0x000081a8      4080ff09       cmp dil, 9
0x000081ac      0f8648ffffff   jbe 0x80fa
0x000081b2      488d5aff       lea rbx, [rdx - 1]
0x000081b6      4883fbfd       cmp rbx, 0xfffffffffffffffd
0x000081ba      0f87fbfbffff   ja 0x7dbb
0x000081c0      49895c2440     mov qword [r12 + 0x40], rbx
0x000081c5      4c8d5e02       lea r11, [rsi + 2]
0x000081c9      e98ff8ffff     jmp 0x7a5d
0x000081ce      4889f7         mov rdi, rsi
0x000081d1      e82a93ffff     call sym.imp.malloc
0x000081d6      488b542408     mov rdx, qword [rsp + 8]
0x000081db      4889c1         mov rcx, rax
0x000081de      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x000081e3      4c8b542440     mov r10, qword [rsp + 0x40]
0x000081e8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000081ed      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x000081f2      e942feffff     jmp 0x8039
0x000081f7      498b4f08       mov rcx, qword [r15 + 8]
0x000081fb      48394c2408     cmp qword [rsp + 8], rcx
0x00008200      0f855efeffff   jne 0x8064
0x00008206      e961feffff     jmp 0x806c
0x0000820b      0f1f440000     nop dword [rax + rax]
0x00008210      488b742408     mov rsi, qword [rsp + 8]
0x00008215      48c1e005       shl rax, 5
0x00008219      4889cf         mov rdi, rcx
0x0000821c      4889c2         mov rdx, rax
0x0000821f      4c894c2448     mov qword [rsp + 0x48], r9
0x00008224      4c89542440     mov qword [rsp + 0x40], r10
0x00008229      4c89442438     mov qword [rsp + 0x38], r8
0x0000822e      4c895c2430     mov qword [rsp + 0x30], r11
0x00008233      e89892ffff     call sym.imp.memcpy
0x00008238      4c8b4c2448     mov r9, qword [rsp + 0x48]
0x0000823d      4889c1         mov rcx, rax
0x00008240      4c8b542440     mov r10, qword [rsp + 0x40]
0x00008245      498b07         mov rax, qword [r15]
0x00008248      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000824d      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00008252      e9f9fdffff     jmp 0x8050
0x00008257      4889d1         mov rcx, rdx
0x0000825a      eb9f           jmp 0x81fb
0x0000825c      0f1f4000       nop dword [rax]
;-- __libc_csu_init:
0x00008260      4157           push r15
0x00008262      4156           push r14
0x00008264      4989d7         mov r15, rdx
0x00008267      4155           push r13
0x00008269      4154           push r12
0x0000826b      4c8d255e3920.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x20bbd0
0x00008272      55             push rbp
0x00008273      488d2d5e3920.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x20bbd8
0x0000827a      53             push rbx
0x0000827b      4189fd         mov r13d, edi
0x0000827e      4989f6         mov r14, rsi
0x00008281      4c29e5         sub rbp, r12
0x00008284      4883ec08       sub rsp, 8
0x00008288      48c1fd03       sar rbp, 3
0x0000828c      e85f90ffff     call sym._init
0x00008291      4885ed         test rbp, rbp
0x00008294      7420           je 0x82b6
0x00008296      31db           xor ebx, ebx
0x00008298      0f1f84000000.  nop dword [rax + rax]
0x000082a0      4c89fa         mov rdx, r15
0x000082a3      4c89f6         mov rsi, r14
0x000082a6      4489ef         mov edi, r13d
0x000082a9      41ff14dc       call qword [r12 + rbx*8]
0x000082ad      4883c301       add rbx, 1
0x000082b1      4839dd         cmp rbp, rbx
0x000082b4      75ea           jne 0x82a0
0x000082b6      4883c408       add rsp, 8
0x000082ba      5b             pop rbx
0x000082bb      5d             pop rbp
0x000082bc      415c           pop r12
0x000082be      415d           pop r13
0x000082c0      415e           pop r14
0x000082c2      415f           pop r15
0x000082c4      c3             ret
0x000082c5      90             nop
0x000082c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000082d0      f3c3           ret
0x000082d2      662e0f1f8400.  nop word cs:[rax + rax]
0x000082dc      0f1f4000       nop dword [rax]
;-- atexit:
0x000082e0      488b15213d20.  mov rdx, qword [obj.__dso_handle]       ; [0x20c008:8]=0x20c008 obj.__dso_handle
0x000082e7      31f6           xor esi, esi
0x000082e9      e9c292ffff     jmp sym.imp.__cxa_atexit
0x000082ee      0000           add byte [rax], al
