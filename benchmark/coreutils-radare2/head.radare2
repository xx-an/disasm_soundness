;-- section..plt:
;-- .plt:
0x000014f0      ff353a892000   push qword [0x00209e30]                 ; [12] -r-x section size 816 named .plt
0x000014f6      ff253c892000   jmp qword [0x00209e38]                  ; [0x209e38:8]=0
0x000014fc      0f1f4000       nop dword [rax]
;-- imp.free:
0x00001500      ff253a892000   jmp qword [reloc.free]                  ; [0x209e40:8]=0x1506
0x00001506      6800000000     push 0
0x0000150b      e9e0ffffff     jmp sym..plt
;-- imp.abort:
0x00001510      ff2532892000   jmp qword [reloc.abort]                 ; [0x209e48:8]=0x1516
0x00001516      6801000000     push 1
0x0000151b      e9d0ffffff     jmp sym..plt
;-- imp.__errno_location:
0x00001520      ff252a892000   jmp qword [reloc.__errno_location]      ; [0x209e50:8]=0x1526 ; "&\x15"
0x00001526      6802000000     push 2
0x0000152b      e9c0ffffff     jmp sym..plt
;-- imp.strncmp:
0x00001530      ff2522892000   jmp qword [reloc.strncmp]               ; [0x209e58:8]=0x1536 ; "6\x15"
0x00001536      6803000000     push 3
0x0000153b      e9b0ffffff     jmp sym..plt
;-- imp._exit:
0x00001540      ff251a892000   jmp qword [reloc._exit]                 ; [0x209e60:8]=0x1546 ; "F\x15"
0x00001546      6804000000     push 4
0x0000154b      e9a0ffffff     jmp sym..plt
;-- imp.__fpending:
0x00001550      ff2512892000   jmp qword [reloc.__fpending]            ; [0x209e68:8]=0x1556 ; "V\x15"
0x00001556      6805000000     push 5
0x0000155b      e990ffffff     jmp sym..plt
;-- imp.clearerr_unlocked:
0x00001560      ff250a892000   jmp qword [reloc.clearerr_unlocked]     ; [0x209e70:8]=0x1566 ; "f\x15"
0x00001566      6806000000     push 6
0x0000156b      e980ffffff     jmp sym..plt
;-- imp.textdomain:
0x00001570      ff2502892000   jmp qword [reloc.textdomain]            ; [0x209e78:8]=0x1576 ; "v\x15"
0x00001576      6807000000     push 7
0x0000157b      e970ffffff     jmp sym..plt
;-- imp.fclose:
0x00001580      ff25fa882000   jmp qword [reloc.fclose]                ; [0x209e80:8]=0x1586
0x00001586      6808000000     push 8
0x0000158b      e960ffffff     jmp sym..plt
;-- imp.bindtextdomain:
0x00001590      ff25f2882000   jmp qword [reloc.bindtextdomain]        ; [0x209e88:8]=0x1596
0x00001596      6809000000     push 9
0x0000159b      e950ffffff     jmp sym..plt
;-- imp.dcgettext:
0x000015a0      ff25ea882000   jmp qword [reloc.dcgettext]             ; [0x209e90:8]=0x15a6
0x000015a6      680a000000     push 0xa
0x000015ab      e940ffffff     jmp sym..plt
;-- imp.__ctype_get_mb_cur_max:
0x000015b0      ff25e2882000   jmp qword [reloc.__ctype_get_mb_cur_max] ; [0x209e98:8]=0x15b6
0x000015b6      680b000000     push 0xb
0x000015bb      e930ffffff     jmp sym..plt
;-- imp.strlen:
0x000015c0      ff25da882000   jmp qword [reloc.strlen]                ; [0x209ea0:8]=0x15c6
0x000015c6      680c000000     push 0xc
0x000015cb      e920ffffff     jmp sym..plt
;-- imp.__stack_chk_fail:
0x000015d0      ff25d2882000   jmp qword [reloc.__stack_chk_fail]      ; [0x209ea8:8]=0x15d6
0x000015d6      680d000000     push 0xd
0x000015db      e910ffffff     jmp sym..plt
;-- imp.getopt_long:
0x000015e0      ff25ca882000   jmp qword [reloc.getopt_long]           ; [0x209eb0:8]=0x15e6
0x000015e6      680e000000     push 0xe
0x000015eb      e900ffffff     jmp sym..plt
;-- imp.mbrtowc:
0x000015f0      ff25c2882000   jmp qword [reloc.mbrtowc]               ; [0x209eb8:8]=0x15f6
0x000015f6      680f000000     push 0xf
0x000015fb      e9f0feffff     jmp sym..plt
;-- imp.strchr:
0x00001600      ff25ba882000   jmp qword [reloc.strchr]                ; [0x209ec0:8]=0x1606
0x00001606      6810000000     push 0x10
0x0000160b      e9e0feffff     jmp sym..plt
;-- imp.strrchr:
0x00001610      ff25b2882000   jmp qword [reloc.strrchr]               ; [0x209ec8:8]=0x1616
0x00001616      6811000000     push 0x11
0x0000161b      e9d0feffff     jmp sym..plt
;-- imp.lseek:
0x00001620      ff25aa882000   jmp qword [reloc.lseek]                 ; [0x209ed0:8]=0x1626 ; "&\x16"
0x00001626      6812000000     push 0x12
0x0000162b      e9c0feffff     jmp sym..plt
;-- imp.__assert_fail:
0x00001630      ff25a2882000   jmp qword [reloc.__assert_fail]         ; [0x209ed8:8]=0x1636 ; "6\x16"
0x00001636      6813000000     push 0x13
0x0000163b      e9b0feffff     jmp sym..plt
;-- imp.__strtoul_internal:
0x00001640      ff259a882000   jmp qword [reloc.__strtoul_internal]    ; [0x209ee0:8]=0x1646 ; "F\x16"
0x00001646      6814000000     push 0x14
0x0000164b      e9a0feffff     jmp sym..plt
;-- imp.memset:
0x00001650      ff2592882000   jmp qword [reloc.memset]                ; [0x209ee8:8]=0x1656 ; "V\x16"
0x00001656      6815000000     push 0x15
0x0000165b      e990feffff     jmp sym..plt
;-- imp.close:
0x00001660      ff258a882000   jmp qword [reloc.close]                 ; [0x209ef0:8]=0x1666 ; "f\x16"
0x00001666      6816000000     push 0x16
0x0000166b      e980feffff     jmp sym..plt
;-- imp.memchr:
0x00001670      ff2582882000   jmp qword [reloc.memchr]                ; [0x209ef8:8]=0x1676 ; "v\x16"
0x00001676      6817000000     push 0x17
0x0000167b      e970feffff     jmp sym..plt
;-- imp.read:
0x00001680      ff257a882000   jmp qword [reloc.read]                  ; [0x209f00:8]=0x1686
0x00001686      6818000000     push 0x18
0x0000168b      e960feffff     jmp sym..plt
;-- imp.memcmp:
0x00001690      ff2572882000   jmp qword [reloc.memcmp]                ; [0x209f08:8]=0x1696
0x00001696      6819000000     push 0x19
0x0000169b      e950feffff     jmp sym..plt
;-- imp.fputs_unlocked:
0x000016a0      ff256a882000   jmp qword [reloc.fputs_unlocked]        ; [0x209f10:8]=0x16a6
0x000016a6      681a000000     push 0x1a
0x000016ab      e940feffff     jmp sym..plt
;-- imp.calloc:
0x000016b0      ff2562882000   jmp qword [reloc.calloc]                ; [0x209f18:8]=0x16b6
0x000016b6      681b000000     push 0x1b
0x000016bb      e930feffff     jmp sym..plt
;-- imp.memcpy:
0x000016c0      ff255a882000   jmp qword [reloc.memcpy]                ; [0x209f20:8]=0x16c6
0x000016c6      681c000000     push 0x1c
0x000016cb      e920feffff     jmp sym..plt
;-- imp.fileno:
0x000016d0      ff2552882000   jmp qword [reloc.fileno]                ; [0x209f28:8]=0x16d6
0x000016d6      681d000000     push 0x1d
0x000016db      e910feffff     jmp sym..plt
;-- imp.malloc:
0x000016e0      ff254a882000   jmp qword [reloc.malloc]                ; [0x209f30:8]=0x16e6
0x000016e6      681e000000     push 0x1e
0x000016eb      e900feffff     jmp sym..plt
;-- imp.fflush:
0x000016f0      ff2542882000   jmp qword [reloc.fflush]                ; [0x209f38:8]=0x16f6
0x000016f6      681f000000     push 0x1f
0x000016fb      e9f0fdffff     jmp sym..plt
;-- imp.nl_langinfo:
0x00001700      ff253a882000   jmp qword [reloc.nl_langinfo]           ; [0x209f40:8]=0x1706
0x00001706      6820000000     push 0x20                               ; "@"
0x0000170b      e9e0fdffff     jmp sym..plt
;-- imp.__fxstat:
0x00001710      ff2532882000   jmp qword [reloc.__fxstat]              ; [0x209f48:8]=0x1716
0x00001716      6821000000     push 0x21                               ; '!'
0x0000171b      e9d0fdffff     jmp sym..plt
;-- imp.__freading:
0x00001720      ff252a882000   jmp qword [reloc.__freading]            ; [0x209f50:8]=0x1726 ; "&\x17"
0x00001726      6822000000     push 0x22                               ; '"'
0x0000172b      e9c0fdffff     jmp sym..plt
;-- imp.fwrite_unlocked:
0x00001730      ff2522882000   jmp qword [reloc.fwrite_unlocked]       ; [0x209f58:8]=0x1736 ; "6\x17"
0x00001736      6823000000     push 0x23                               ; '#'
0x0000173b      e9b0fdffff     jmp sym..plt
;-- imp.realloc:
0x00001740      ff251a882000   jmp qword [reloc.realloc]               ; [0x209f60:8]=0x1746 ; "F\x17"
0x00001746      6824000000     push 0x24                               ; '$'
0x0000174b      e9a0fdffff     jmp sym..plt
;-- imp.setlocale:
0x00001750      ff2512882000   jmp qword [reloc.setlocale]             ; [0x209f68:8]=0x1756 ; "V\x17"
0x00001756      6825000000     push 0x25                               ; '%'
0x0000175b      e990fdffff     jmp sym..plt
;-- imp.__printf_chk:
0x00001760      ff250a882000   jmp qword [reloc.__printf_chk]          ; [0x209f70:8]=0x1766 ; "f\x17"
0x00001766      6826000000     push 0x26                               ; '&'
0x0000176b      e980fdffff     jmp sym..plt
;-- imp.error:
0x00001770      ff2502882000   jmp qword [reloc.error]                 ; [0x209f78:8]=0x1776 ; "v\x17"
0x00001776      6827000000     push 0x27                               ; '''
0x0000177b      e970fdffff     jmp sym..plt
;-- imp.memrchr:
0x00001780      ff25fa872000   jmp qword [reloc.memrchr]               ; [0x209f80:8]=0x1786
0x00001786      6828000000     push 0x28                               ; '('
0x0000178b      e960fdffff     jmp sym..plt
;-- imp.open:
0x00001790      ff25f2872000   jmp qword [reloc.open]                  ; [0x209f88:8]=0x1796
0x00001796      6829000000     push 0x29                               ; ')'
0x0000179b      e950fdffff     jmp sym..plt
;-- imp.fseeko:
0x000017a0      ff25ea872000   jmp qword [reloc.fseeko]                ; [0x209f90:8]=0x17a6
0x000017a6      682a000000     push 0x2a                               ; '*'
0x000017ab      e940fdffff     jmp sym..plt
;-- imp.__cxa_atexit:
0x000017b0      ff25e2872000   jmp qword [reloc.__cxa_atexit]          ; [0x209f98:8]=0x17b6
0x000017b6      682b000000     push 0x2b                               ; '+'
0x000017bb      e930fdffff     jmp sym..plt
;-- imp.exit:
0x000017c0      ff25da872000   jmp qword [reloc.exit]                  ; [0x209fa0:8]=0x17c6
0x000017c6      682c000000     push 0x2c                               ; ','
0x000017cb      e920fdffff     jmp sym..plt
;-- imp.fwrite:
0x000017d0      ff25d2872000   jmp qword [reloc.fwrite]                ; [0x209fa8:8]=0x17d6
0x000017d6      682d000000     push 0x2d                               ; '-'
0x000017db      e910fdffff     jmp sym..plt
;-- imp.__fprintf_chk:
0x000017e0      ff25ca872000   jmp qword [reloc.__fprintf_chk]         ; [0x209fb0:8]=0x17e6
0x000017e6      682e000000     push 0x2e                               ; '.'
0x000017eb      e900fdffff     jmp sym..plt
;-- imp.mbsinit:
0x000017f0      ff25c2872000   jmp qword [reloc.mbsinit]               ; [0x209fb8:8]=0x17f6
0x000017f6      682f000000     push 0x2f                               ; '/'
0x000017fb      e9f0fcffff     jmp sym..plt
;-- imp.iswprint:
0x00001800      ff25ba872000   jmp qword [reloc.iswprint]              ; [0x209fc0:8]=0x1806
0x00001806      6830000000     push 0x30                               ; '0'
0x0000180b      e9e0fcffff     jmp sym..plt
;-- imp.__ctype_b_loc:
0x00001810      ff25b2872000   jmp qword [reloc.__ctype_b_loc]         ; [0x209fc8:8]=0x1816
0x00001816      6831000000     push 0x31                               ; '1'
0x0000181b      e9d0fcffff     jmp sym..plt
;-- section..plt.got:
;-- .plt.got:
0x00001820      .qword 0x9066002087ca25ff                              ; [13] -r-x section size 8 named .plt.got
0x00001828      0000           add byte [rax], al
0x0000182a      0000           add byte [rax], al
0x0000182c      0000           add byte [rax], al
0x0000182e      0000           add byte [rax], al
;-- main:
;-- section..text:
;-- .text:
0x00001830      4157           push r15                                ; .//src:1536 ; [14] -r-x section size 20398 named .text
0x00001832      4156           push r14
0x00001834      4155           push r13
0x00001836      4154           push r12
0x00001838      55             push rbp
0x00001839      53             push rbx
0x0000183a      89fd           mov ebp, edi
0x0000183c      4889f3         mov rbx, rsi
0x0000183f      4881ec580100.  sub rsp, 0x158
0x00001846      488b3e         mov rdi, qword [rsi]                    ; .//src:1559
0x00001849      64488b042528.  mov rax, qword fs:[0x28]                ; .//src:1536
0x00001852      488984244801.  mov qword [rsp + 0x148], rax
0x0000185a      31c0           xor eax, eax
0x0000185c      e88f200000     call sym.set_program_name               ; .//src:1559
0x00001861      488d35b95d00.  lea rsi, [0x00007621]                   ; .//src:1560
0x00001868      bf06000000     mov edi, 6
0x0000186d      e8defeffff     call sym.imp.setlocale
0x00001872      488d35dc5000.  lea rsi, str.usr_local_share_locale     ; .//src:1561 ; 0x6955 ; "/usr/local/share/locale"
0x00001879      488d3dac5000.  lea rdi, [0x0000692c]                   ; "coreutils"
0x00001880      e80bfdffff     call sym.imp.bindtextdomain
0x00001885      488d3da05000.  lea rdi, [0x0000692c]                   ; .//src:1562 ; "coreutils"
0x0000188c      e8dffcffff     call sym.imp.textdomain
0x00001891      488d3d381e00.  lea rdi, sym.close_stdout               ; .//src:1564 ; 0x36d0 ; "USH\x83\xec\bH\x8b=\xcbi "
0x00001898      e8334f0000     call sym.atexit
0x0000189d      83fd01         cmp ebp, 1                              ; .//src:1572
0x000018a0      c60542882000.  mov byte [obj.have_read_stdin], 0       ; .//src:1566 ; [0x20a0e9:1]=0
0x000018a7      c6053d882000.  mov byte [obj.print_headers], 0         ; .//src:1568 ; [0x20a0eb:1]=0
0x000018ae      c60535882000.  mov byte [obj.line_end], 0xa            ; .//src:1570 ; [0x20a0ea:1]=0
0x000018b5      7e0d           jle 0x18c4                              ; .//src:1572
0x000018b7      488b7308       mov rsi, qword [rbx + 8]
0x000018bb      803e2d         cmp byte [rsi], 0x2d
0x000018be      0f84af010000   je 0x1a73
0x000018c4      c684248a0000.  mov byte [rsp + 0x8a], 1                ; .//src:1547
0x000018cc      41bf0a000000   mov r15d, 0xa                           ; .//src:1543
0x000018d2      4531e4         xor r12d, r12d                          ; .//src:1537
0x000018d5      c68424890000.  mov byte [rsp + 0x89], 0
0x000018dd      41bd01000000   mov r13d, 1                             ; ../coreutils-8.31/src/ad.c:1432
0x000018e3      0f1f440000     nop dword [rax + rax]
0x000018e8      488d0db18120.  lea rcx, obj.long_options               ; 0x209aa0 ; ".h"
0x000018ef      488d15b25000.  lea rdx, str.c:n:qvz0123456789          ; 0x69a8 ; "c:n:qvz0123456789"
0x000018f6      4531c0         xor r8d, r8d
0x000018f9      4889de         mov rsi, rbx
0x000018fc      89ef           mov edi, ebp
0x000018fe      e8ddfcffff     call sym.imp.getopt_long                ; ../coreutils-8.31/src/ad.c:1442
0x00001903      83f8ff         cmp eax, 0xffffffff
0x00001906      0f84dc010000   je 0x1ae8
0x0000190c      83f86e         cmp eax, 0x6e                           ; ../coreutils-8.31/src/ad.c:1448
0x0000190f      0f84eb000000   je 0x1a00
0x00001915      7e31           jle 0x1948                              ; ../coreutils-8.31/src/ad.c:1450
0x00001917      83f876         cmp eax, 0x76
0x0000191a      0f8448010000   je 0x1a68
0x00001920      0f8e2a010000   jle 0x1a50
0x00001926      83f87a         cmp eax, 0x7a
0x00001929      0f8411010000   je 0x1a40
0x0000192f      3d80000000     cmp eax, 0x80
0x00001934      0f85e40e0000   jne 0x281e
0x0000193a      44882dab8720.  mov byte [obj.presume_input_pipe], r13b ; [0x20a0ec:1]=0
0x00001941      eba5           jmp 0x18e8
0x00001943      0f1f440000     nop dword [rax + rax]
0x00001948      3d7effffff     cmp eax, 0xffffff7e                     ; 4294967166
0x0000194d      0f84c40e0000   je 0x2817
0x00001953      83f863         cmp eax, 0x63
0x00001956      7468           je 0x19c0
0x00001958      3d7dffffff     cmp eax, 0xffffff7d                     ; 4294967165
0x0000195d      4189c6         mov r14d, eax
0x00001960      741e           je 0x1980
0x00001962      418d46d0       lea eax, [r14 - 0x30]
0x00001966      83f809         cmp eax, 9
0x00001969      0f86bc0e0000   jbe 0x282b
0x0000196f      bf01000000     mov edi, 1
0x00001974      e807190000     call sym.usage                          ; ../coreutils-8.31/src/ad.c:1431
0x00001979      0f1f80000000.  nop dword [rax]
0x00001980      4883ec08       sub rsp, 8
0x00001984      488b3d1d8720.  mov rdi, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000198b      488b0d868620.  mov rcx, qword [obj.Version]            ; [0x20a018:8]=0x7090 str.8.31
0x00001992      6a00           push 0
0x00001994      4c8d0df04f00.  lea r9, str.Jim_Meyering                ; 0x698b ; "Jim Meyering"
0x0000199b      4c8d05f64f00.  lea r8, str.David_MacKenzie             ; 0x6998 ; "David MacKenzie"
0x000019a2      488d157f4f00.  lea rdx, str.GNU_coreutils              ; 0x6928 ; "GNU coreutils"
0x000019a9      488d35fd4e00.  lea rsi, str.head                       ; 0x68ad ; "head"
0x000019b0      31c0           xor eax, eax
0x000019b2      e889410000     call sym.version_etc                    ; ../coreutils-8.31/src/system.h:452
0x000019b7      31ff           xor edi, edi
0x000019b9      e802feffff     call sym.imp.exit
0x000019be      6690           nop
0x000019c0      488b35f18620.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x000019c7      0fb606         movzx eax, byte [rsi]                   ; .//src:709
0x000019ca      3c2d           cmp al, 0x2d                            ; .//src:710
0x000019cc      0f9484248900.  sete byte [rsp + 0x89]
0x000019d4      750b           jne 0x19e1
0x000019d6      4883c601       add rsi, 1
0x000019da      488935d78620.  mov qword [obj.optarg], rsi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x000019e1      31ff           xor edi, edi
0x000019e3      e888100000     call sym.string_to_integer
0x000019e8      c684248a0000.  mov byte [rsp + 0x8a], 0
0x000019f0      4989c7         mov r15, rax
0x000019f3      e9f0feffff     jmp 0x18e8
0x000019f8      0f1f84000000.  nop dword [rax + rax]
0x00001a00      488b35b18620.  mov rsi, qword [obj.optarg]             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x00001a07      0fb606         movzx eax, byte [rsi]
0x00001a0a      3c2d           cmp al, 0x2d
0x00001a0c      0f9484248900.  sete byte [rsp + 0x89]
0x00001a14      750b           jne 0x1a21
0x00001a16      4883c601       add rsi, 1
0x00001a1a      488935978620.  mov qword [obj.optarg], rsi             ; obj.optarg__GLIBC_2.2.5
                                                                       ; [0x20a0b8:8]=0
0x00001a21      bf01000000     mov edi, 1
0x00001a26      e845100000     call sym.string_to_integer
0x00001a2b      c684248a0000.  mov byte [rsp + 0x8a], 1
0x00001a33      4989c7         mov r15, rax                            ; .//src:1060
0x00001a36      e9adfeffff     jmp 0x18e8
0x00001a3b      0f1f440000     nop dword [rax + rax]
0x00001a40      c605a3862000.  mov byte [obj.line_end], 0              ; [0x20a0ea:1]=0
0x00001a47      e99cfeffff     jmp 0x18e8
0x00001a4c      0f1f4000       nop dword [rax]
0x00001a50      83f871         cmp eax, 0x71
0x00001a53      0f85c50d0000   jne 0x281e
0x00001a59      41bc02000000   mov r12d, 2
0x00001a5f      e984feffff     jmp 0x18e8
0x00001a64      0f1f4000       nop dword [rax]
0x00001a68      41bc01000000   mov r12d, 1
0x00001a6e      e975feffff     jmp 0x18e8                              ; .//src:956
0x00001a73      0fbe4601       movsx eax, byte [rsi + 1]
0x00001a77      83e830         sub eax, 0x30
0x00001a7a      83f809         cmp eax, 9                              ; .//src:955
0x00001a7d      0f8741feffff   ja 0x18c4
0x00001a83      4883c601       add rsi, 1
0x00001a87      4889f7         mov rdi, rsi
0x00001a8a      660f1f440000   nop word [rax + rax]
0x00001a90      4883c701       add rdi, 1
0x00001a94      0fbe07         movsx eax, byte [rdi]
0x00001a97      4189c5         mov r13d, eax
0x00001a9a      83e830         sub eax, 0x30
0x00001a9d      83f809         cmp eax, 9
0x00001aa0      76ee           jbe 0x1a90
0x00001aa2      4584ed         test r13b, r13b
0x00001aa5      0f84490d0000   je 0x27f4
0x00001aab      488d0d7a5500.  lea rcx, [0x0000702c]                   ; "M\xad\xff\xffE\xad\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xffM\xad\xff\xff=\xad\xff\xffM\xad\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff5\xad\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff-\xad\xff\xff(\xb8\xff\xff(\xb8\xff\xff(\xb8\xff\xff\u036c\xff\xff8.31"
0x00001ab2      4889fa         mov rdx, rdi
0x00001ab5      4531c9         xor r9d, r9d
0x00001ab8      41ba0a000000   mov r10d, 0xa
0x00001abe      4531c0         xor r8d, r8d
0x00001ac1      41bb01000000   mov r11d, 1
0x00001ac7      4531e4         xor r12d, r12d
0x00001aca      660f1f440000   nop word [rax + rax]
0x00001ad0      418d459e       lea eax, [r13 - 0x62]
0x00001ad4      3c18           cmp al, 0x18
0x00001ad6      0f87780d0000   ja 0x2854
0x00001adc      0fb6c0         movzx eax, al
0x00001adf      48630481       movsxd rax, dword [rcx + rax*4]
0x00001ae3      4801c8         add rax, rcx
0x00001ae6      ffe0           jmp rax
0x00001ae8      4183fc01       cmp r12d, 1
0x00001aec      7410           je 0x1afe
0x00001aee      4585e4         test r12d, r12d
0x00001af1      7512           jne 0x1b05
0x00001af3      8d45ff         lea eax, [rbp - 1]
0x00001af6      3b05b4852000   cmp eax, dword [obj.optind]             ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001afc      7e07           jle 0x1b05
0x00001afe      c605e6852000.  mov byte [obj.print_headers], 1         ; [0x20a0eb:1]=0
0x00001b05      80bc248a0000.  cmp byte [rsp + 0x8a], 0
0x00001b0d      7513           jne 0x1b22
0x00001b0f      80bc24890000.  cmp byte [rsp + 0x89], 0
0x00001b17      7409           je 0x1b22
0x00001b19      4d85ff         test r15, r15
0x00001b1c      0f88540d0000   js 0x2876
0x00001b22      486305878520.  movsxd rax, dword [obj.optind]          ; obj.optind__GLIBC_2.2.5
                                                                       ; [0x20a0b0:4]=0
0x00001b29      39e8           cmp eax, ebp
0x00001b2b      0f8deb040000   jge 0x201c
0x00001b31      488d14c3       lea rdx, [rbx + rax*8]
0x00001b35      488b2a         mov rbp, qword [rdx]
0x00001b38      4885ed         test rbp, rbp
0x00001b3b      0f8402040000   je 0x1f43
0x00001b41      488d05a25500.  lea rax, [0x000070ea]                   ; "-"
0x00001b48      4889442420     mov qword [rsp + 0x20], rax             ; .//src:979
0x00001b4d      4c89f9         mov rcx, r15
0x00001b50      b800200000     mov eax, 0x2000                         ; .//src:983
0x00001b55      4c897c2418     mov qword [rsp + 0x18], r15
0x00001b5a      81e1ff1f0000   and ecx, 0x1fff
0x00001b60      c684248b0000.  mov byte [rsp + 0x8b], 1
0x00001b68      4829c8         sub rax, rcx
0x00001b6b      48894c2478     mov qword [rsp + 0x78], rcx             ; .//src:960
0x00001b70      4889442460     mov qword [rsp + 0x60], rax
0x00001b75      4c01f8         add rax, r15
0x00001b78      48c1e80d       shr rax, 0xd
0x00001b7c      4883c001       add rax, 1
0x00001b80      4889442428     mov qword [rsp + 0x28], rax
0x00001b85      48d1e8         shr rax, 1
0x00001b88      4889442458     mov qword [rsp + 0x58], rax
0x00001b8d      498d87002000.  lea rax, [r15 + 0x2000]
0x00001b94      4989ef         mov r15, rbp
0x00001b97      4889442468     mov qword [rsp + 0x68], rax
0x00001b9c      4801c0         add rax, rax
0x00001b9f      4889442470     mov qword [rsp + 0x70], rax
0x00001ba4      488d4208       lea rax, [rdx + 8]                      ; .//src:861
0x00001ba8      4889442410     mov qword [rsp + 0x10], rax
0x00001bad      488d8424a000.  lea rax, [rsp + 0xa0]
0x00001bb5      4889442450     mov qword [rsp + 0x50], rax
0x00001bba      e9bd000000     jmp 0x1c7c
0x00001bbf      488d35fb4d00.  lea rsi, str.standard_input             ; 0x69c1 ; "standard input"
0x00001bc6      ba05000000     mov edx, 5
0x00001bcb      31ff           xor edi, edi
0x00001bcd      c60515852000.  mov byte [obj.have_read_stdin], 1       ; [0x20a0e9:1]=0
0x00001bd4      e8c7f9ffff     call sym.imp.dcgettext
0x00001bd9      c744240c0000.  mov dword [rsp + 0xc], 0
0x00001be1      4989c7         mov r15, rax
0x00001be4      803d00852000.  cmp byte [obj.print_headers], 0         ; [0x20a0eb:1]=0
0x00001beb      7436           je 0x1c23
0x00001bed      803d1c842000.  cmp byte [obj.first_file.6927], 0       ; [0x20a010:1]=1
0x00001bf4      488d05255a00.  lea rax, [0x00007620]                   ; "\n"
0x00001bfb      488d151f5a00.  lea rdx, [0x00007621]
0x00001c02      488d35e24d00.  lea rsi, str.s_____s                    ; 0x69eb ; "%s==> %s <==\n"
0x00001c09      4c89f9         mov rcx, r15
0x00001c0c      bf01000000     mov edi, 1
0x00001c11      480f44d0       cmove rdx, rax
0x00001c15      31c0           xor eax, eax
0x00001c17      e844fbffff     call sym.imp.__printf_chk               ; .//src:254
0x00001c1c      c605ed832000.  mov byte [obj.first_file.6927], 0       ; [0x20a010:1]=1
0x00001c23      80bc24890000.  cmp byte [rsp + 0x89], 0
0x00001c2b      0f8582010000   jne 0x1db3
0x00001c31      80bc248a0000.  cmp byte [rsp + 0x8a], 0
0x00001c39      488b542418     mov rdx, qword [rsp + 0x18]
0x00001c3e      4c89ff         mov rdi, r15
0x00001c41      8b74240c       mov esi, dword [rsp + 0xc]
0x00001c45      0f85b4020000   jne 0x1eff                              ; .//src:202
0x00001c4b      e820120000     call sym.head_bytes
0x00001c50      4189c4         mov r12d, eax                           ; .//src:201
0x00001c53      4585ed         test r13d, r13d
0x00001c56      0f8525010000   jne 0x1d81
0x00001c5c      488344241008   add qword [rsp + 0x10], 8
0x00001c62      4420a4248b00.  and byte [rsp + 0x8b], r12b
0x00001c6a      488b442410     mov rax, qword [rsp + 0x10]
0x00001c6f      4c8b78f8       mov r15, qword [rax - 8]
0x00001c73      4d85ff         test r15, r15
0x00001c76      0f84cf020000   je 0x1f4b
0x00001c7c      488b7c2420     mov rdi, qword [rsp + 0x20]
0x00001c81      b902000000     mov ecx, 2
0x00001c86      4c89fe         mov rsi, r15
0x00001c89      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00001c8b      0f97c0         seta al
0x00001c8e      1c00           sbb al, 0
0x00001c90      440fbee8       movsx r13d, al
0x00001c94      4585ed         test r13d, r13d
0x00001c97      0f8422ffffff   je 0x1bbf
0x00001c9d      31f6           xor esi, esi
0x00001c9f      31c0           xor eax, eax
0x00001ca1      4c89ff         mov rdi, r15
0x00001ca4      e8e7faffff     call sym.imp.open
0x00001ca9      85c0           test eax, eax
0x00001cab      8944240c       mov dword [rsp + 0xc], eax
0x00001caf      0f892fffffff   jns 0x1be4
0x00001cb5      4c89fe         mov rsi, r15
0x00001cb8      bf04000000     mov edi, 4
0x00001cbd      e86e360000     call sym.quotearg_style
0x00001cc2      488d35074d00.  lea rsi, str.cannot_open__s_for_reading ; 0x69d0 ; "cannot open %s for reading"
0x00001cc9      4889c3         mov rbx, rax
0x00001ccc      ba05000000     mov edx, 5
0x00001cd1      31ff           xor edi, edi
0x00001cd3      4531e4         xor r12d, r12d
0x00001cd6      e8c5f8ffff     call sym.imp.dcgettext
0x00001cdb      4889c5         mov rbp, rax
0x00001cde      e83df8ffff     call sym.imp.__errno_location
0x00001ce3      8b30           mov esi, dword [rax]
0x00001ce5      4889d9         mov rcx, rbx
0x00001ce8      4889ea         mov rdx, rbp
0x00001ceb      31ff           xor edi, edi
0x00001ced      31c0           xor eax, eax
0x00001cef      e87cfaffff     call sym.imp.error
0x00001cf4      e963ffffff     jmp 0x1c5c                              ; .//src:198
0x00001cf9      41b901000000   mov r9d, 1
0x00001cff      4531d2         xor r10d, r10d
0x00001d02      660f1f440000   nop word [rax + rax]
0x00001d08      4883c201       add rdx, 1
0x00001d0c      440fb62a       movzx r13d, byte [rdx]
0x00001d10      4584ed         test r13b, r13b
0x00001d13      0f85b7fdffff   jne 0x1ad0
0x00001d19      4584c9         test r9b, r9b
0x00001d1c      44889c248a00.  mov byte [rsp + 0x8a], r11b
0x00001d24      0f85980b0000   jne 0x28c2
0x00001d2a      4584c0         test r8b, r8b
0x00001d2d      448807         mov byte [rdi], r8b                     ; .//src:227
0x00001d30      7404           je 0x1d36
0x00001d32      c6470100       mov byte [rdi + 1], 0
0x00001d36      0fb6bc248a00.  movzx edi, byte [rsp + 0x8a]
0x00001d3e      4883c308       add rbx, 8
0x00001d42      83ed01         sub ebp, 1
0x00001d45      e8260d0000     call sym.string_to_integer
0x00001d4a      4989c7         mov r15, rax
0x00001d4d      488b43f8       mov rax, qword [rbx - 8]
0x00001d51      488903         mov qword [rbx], rax                    ; .//src:921
0x00001d54      e97cfbffff     jmp 0x18d5
0x00001d59      41bc01000000   mov r12d, 1
0x00001d5f      eba7           jmp 0x1d08
0x00001d61      41bc02000000   mov r12d, 2
0x00001d67      eb9f           jmp 0x1d08
0x00001d69      41bb01000000   mov r11d, 1                             ; .//src:925
0x00001d6f      eb97           jmp 0x1d08
0x00001d71      4531c0         xor r8d, r8d
0x00001d74      4531db         xor r11d, r11d
0x00001d77      eb8f           jmp 0x1d08
0x00001d79      4589e8         mov r8d, r13d
0x00001d7c      4531db         xor r11d, r11d
0x00001d7f      eb87           jmp 0x1d08
0x00001d81      8b7c240c       mov edi, dword [rsp + 0xc]
0x00001d85      e8d6f8ffff     call sym.imp.close
0x00001d8a      85c0           test eax, eax
0x00001d8c      0f84cafeffff   je 0x1c5c
0x00001d92      4c89fe         mov rsi, r15
0x00001d95      bf04000000     mov edi, 4                              ; .//src:212
0x00001d9a      e891350000     call sym.quotearg_style
0x00001d9f      ba05000000     mov edx, 5                              ; .//src:215
0x00001da4      4889c3         mov rbx, rax
0x00001da7      488d355b4c00.  lea rsi, str.failed_to_close__s         ; .//src:212 ; 0x6a09 ; "failed to close %s"
0x00001dae      e91effffff     jmp 0x1cd1
0x00001db3      488b542450     mov rdx, qword [rsp + 0x50]             ; .//src:213
0x00001db8      8b74240c       mov esi, dword [rsp + 0xc]
0x00001dbc      bf01000000     mov edi, 1
0x00001dc1      e84af9ffff     call sym.imp.__fxstat
0x00001dc6      85c0           test eax, eax
0x00001dc8      0f850a020000   jne 0x1fd8                              ; .//src:215
0x00001dce      803d17832000.  cmp byte [obj.presume_input_pipe], 0    ; [0x20a0ec:1]=0
0x00001dd5      7517           jne 0x1dee
0x00001dd7      8b8424b80000.  mov eax, dword [rsp + 0xb8]
0x00001dde      2500d00000     and eax, 0xd000                         ; .//src:678
0x00001de3      3d00800000     cmp eax, 0x8000
0x00001de8      0f84f5050000   je 0x23e3
0x00001dee      80bc248a0000.  cmp byte [rsp + 0x8a], 0
0x00001df6      48c7442440ff.  mov qword [rsp + 0x40], 0xffffffffffffffff
0x00001dff      0f8540020000   jne 0x2045
0x00001e05      48817c241800.  cmp qword [rsp + 0x18], 0x100000
0x00001e0e      488b442440     mov rax, qword [rsp + 0x40]
0x00001e13      4889442430     mov qword [rsp + 0x30], rax
0x00001e18      0f8628070000   jbe 0x2546
0x00001e1e      41ba01000000   mov r10d, 1
0x00001e24      4489ac248c00.  mov dword [rsp + 0x8c], r13d
0x00001e2c      48c744244800.  mov qword [rsp + 0x48], 0
0x00001e35      31ed           xor ebp, ebp
0x00001e37      4531f6         xor r14d, r14d
0x00001e3a      4531e4         xor r12d, r12d
0x00001e3d      31db           xor ebx, ebx
0x00001e3f      4c89bc248000.  mov qword [rsp + 0x80], r15
0x00001e47      4d89d5         mov r13, r10
0x00001e4a      4d85e4         test r12, r12
0x00001e4d      0f8523040000   jne 0x2276
0x00001e53      488b442428     mov rax, qword [rsp + 0x28]
0x00001e58      41bc10000000   mov r12d, 0x10
0x00001e5e      4883f810       cmp rax, 0x10
0x00001e62      4c0f46e0       cmovbe r12, rax
0x00001e66      4a8d34e50000.  lea rsi, [r12*8]
0x00001e6e      4c89f7         mov rdi, r14
0x00001e71      4989df         mov r15, rbx
0x00001e74      4c89e3         mov rbx, r12
0x00001e77      4d89ec         mov r12, r13
0x00001e7a      e8813e0000     call sym.xrealloc                       ; .//src:347
0x00001e7f      4989c6         mov r14, rax
0x00001e82      4084ed         test bpl, bpl
0x00001e85      4f8d2cfe       lea r13, [r14 + r15*8]                  ; .//src:345
0x00001e89      0f8400010000   je 0x1f8f
0x00001e8f      498b7500       mov rsi, qword [r13]
0x00001e93      8b7c240c       mov edi, dword [rsp + 0xc]
0x00001e97      ba00200000     mov edx, 0x2000
0x00001e9c      e8df180000     call sym.full_read
0x00001ea1      483dff1f0000   cmp rax, 0x1fff
0x00001ea7      4989c5         mov r13, rax
0x00001eaa      7660           jbe 0x1f0c
0x00001eac      4801442430     add qword [rsp + 0x30], rax
0x00001eb1      4531c9         xor r9d, r9d
0x00001eb4      4b8b3ce6       mov rdi, qword [r14 + r12*8]
0x00001eb8      4c89ee         mov rsi, r13
0x00001ebb      44884c2438     mov byte [rsp + 0x38], r9b
0x00001ec0      e8cb0c0000     call sym.xwrite_stdout.part.6
0x00001ec5      0fb6ac248900.  movzx ebp, byte [rsp + 0x89]
0x00001ecd      440fb64c2438   movzx r9d, byte [rsp + 0x38]
0x00001ed3      498d742401     lea rsi, [r12 + 1]
0x00001ed8      31d2           xor edx, edx
0x00001eda      4889f0         mov rax, rsi
0x00001edd      48f7742428     div qword [rsp + 0x28]
0x00001ee2      4584c9         test r9b, r9b
0x00001ee5      4989d2         mov r10, rdx
0x00001ee8      0f8581050000   jne 0x246f
0x00001eee      4c39e3         cmp rbx, r12
0x00001ef1      4d89e7         mov r15, r12                            ; .//src:367
0x00001ef4      0f843d010000   je 0x2037
0x00001efa      4989d4         mov r12, rdx
0x00001efd      eb83           jmp 0x1e82
0x00001eff      e8dc0d0000     call sym.head_lines
0x00001f04      4189c4         mov r12d, eax
0x00001f07      e947fdffff     jmp 0x1c53
0x00001f0c      e80ff6ffff     call sym.imp.__errno_location
0x00001f11      833800         cmp dword [rax], 0
0x00001f14      0f85ba070000   jne 0x26d4
0x00001f1a      440fb68c2489.  movzx r9d, byte [rsp + 0x89]
0x00001f23      4d8d5701       lea r10, [r15 + 1]
0x00001f27      4c3b542428     cmp r10, qword [rsp + 0x28]
0x00001f2c      0f94c0         sete al                                 ; .//src:374
0x00001f2f      4008c5         or bpl, al
0x00001f32      749f           je 0x1ed3
0x00001f34      4c016c2430     add qword [rsp + 0x30], r13
0x00001f39      4d85ed         test r13, r13
0x00001f3c      7495           je 0x1ed3
0x00001f3e      e971ffffff     jmp 0x1eb4
0x00001f43      c684248b0000.  mov byte [rsp + 0x8b], 1                ; .//src:385
0x00001f4b      803d97812000.  cmp byte [obj.have_read_stdin], 0       ; [0x20a0e9:1]=0
0x00001f52      0f8535030000   jne 0x228d
0x00001f58      0fb684248b00.  movzx eax, byte [rsp + 0x8b]
0x00001f60      83f001         xor eax, 1
0x00001f63      488b8c244801.  mov rcx, qword [rsp + 0x148]
0x00001f6b      6448330c2528.  xor rcx, qword fs:[0x28]
0x00001f74      0fb6c0         movzx eax, al
0x00001f77      0f85a9080000   jne 0x2826
0x00001f7d      4881c4580100.  add rsp, 0x158
0x00001f84      5b             pop rbx
0x00001f85      5d             pop rbp
0x00001f86      415c           pop r12
0x00001f88      415d           pop r13                                 ; .//src:401
0x00001f8a      415e           pop r14
0x00001f8c      415f           pop r15
0x00001f8e      c3             ret
0x00001f8f      bf00200000     mov edi, 0x2000
0x00001f94      e8073d0000     call sym.xmalloc                        ; .//src:12
0x00001f99      8b7c240c       mov edi, dword [rsp + 0xc]
0x00001f9d      4d8d5701       lea r10, [r15 + 1]                      ; .//src:404
0x00001fa1      49894500       mov qword [r13], rax
0x00001fa5      ba00200000     mov edx, 0x2000
0x00001faa      4889c6         mov rsi, rax
0x00001fad      4c89542448     mov qword [rsp + 0x48], r10
0x00001fb2      4c89542438     mov qword [rsp + 0x38], r10
0x00001fb7      e8c4170000     call sym.full_read
0x00001fbc      483dff1f0000   cmp rax, 0x1fff
0x00001fc2      4989c5         mov r13, rax
0x00001fc5      4c8b542438     mov r10, qword [rsp + 0x38]
0x00001fca      0f863cffffff   jbe 0x1f0c
0x00001fd0      4531c9         xor r9d, r9d
0x00001fd3      e94fffffff     jmp 0x1f27
0x00001fd8      4c89fe         mov rsi, r15
0x00001fdb      bf04000000     mov edi, 4
0x00001fe0      4531e4         xor r12d, r12d
0x00001fe3      e848330000     call sym.quotearg_style
0x00001fe8      488d350a4a00.  lea rsi, str.cannot_fstat__s            ; 0x69f9 ; "cannot fstat %s"
0x00001fef      ba05000000     mov edx, 5
0x00001ff4      31ff           xor edi, edi                            ; .//src:377
0x00001ff6      4889c3         mov rbx, rax
0x00001ff9      e8a2f5ffff     call sym.imp.dcgettext
0x00001ffe      4889c5         mov rbp, rax
0x00002001      e81af5ffff     call sym.imp.__errno_location
0x00002006      8b30           mov esi, dword [rax]
0x00002008      4889d9         mov rcx, rbx
0x0000200b      4889ea         mov rdx, rbp
0x0000200e      31ff           xor edi, edi
0x00002010      31c0           xor eax, eax
0x00002012      e859f7ffff     call sym.imp.error
0x00002017      e937fcffff     jmp 0x1c53
0x0000201c      488d05c75000.  lea rax, [0x000070ea]                   ; "-"
0x00002023      488d15567a20.  lea rdx, obj.default_file_list.7140     ; 0x209a80
0x0000202a      4889442420     mov qword [rsp + 0x20], rax
0x0000202f      4889c5         mov rbp, rax
0x00002032      e916fbffff     jmp 0x1b4d
0x00002037      4989dc         mov r12, rbx
0x0000203a      4d89d5         mov r13, r10
0x0000203d      4c89fb         mov rbx, r15
0x00002040      e905feffff     jmp 0x1e4a
0x00002045      488b442440     mov rax, qword [rsp + 0x40]
0x0000204a      bf18200000     mov edi, 0x2018
0x0000204f      4889442448     mov qword [rsp + 0x48], rax
0x00002054      e8473c0000     call sym.xmalloc
0x00002059      bf18200000     mov edi, 0x2018
0x0000205e      48c780082000.  mov qword [rax + 0x2008], 0
0x00002069      48c780002000.  mov qword [rax + 0x2000], 0             ; .//src:389
0x00002074      48c780102000.  mov qword [rax + 0x2010], 0
0x0000207f      4889c5         mov rbp, rax
0x00002082      4889442430     mov qword [rsp + 0x30], rax
0x00002087      e8143c0000     call sym.xmalloc
0x0000208c      48c744243800.  mov qword [rsp + 0x38], 0
0x00002095      4889c3         mov rbx, rax
0x00002098      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000020a0      4489ac248c00.  mov dword [rsp + 0x8c], r13d
0x000020a8      8b7c240c       mov edi, dword [rsp + 0xc]
0x000020ac      ba00200000     mov edx, 0x2000
0x000020b1      4889de         mov rsi, rbx
0x000020b4      e867350000     call sym.safe_read
0x000020b9      4989c4         mov r12, rax
0x000020bc      488d40ff       lea rax, [rax - 1]                      ; .//src:437
0x000020c0      4883f8fd       cmp rax, 0xfffffffffffffffd
0x000020c4      0f87ed000000   ja 0x21b7
0x000020ca      48837c241800   cmp qword [rsp + 0x18], 0
0x000020d0      7512           jne 0x20e4
0x000020d2      4c89e6         mov rsi, r12
0x000020d5      4889df         mov rdi, rbx
0x000020d8      4c01642448     add qword [rsp + 0x48], r12
0x000020dd      e8ae0a0000     call sym.xwrite_stdout.part.6
0x000020e2      ebc4           jmp 0x20a8
0x000020e4      4c89a3002000.  mov qword [rbx + 0x2000], r12
0x000020eb      48c783082000.  mov qword [rbx + 0x2008], 0
0x000020f6      4e8d3423       lea r14, [rbx + r12]
0x000020fa      48c783102000.  mov qword [rbx + 0x2010], 0
0x00002105      440fbe3ddd7f.  movsx r15d, byte [obj.line_end]         ; [0x20a0ea:1]=0
0x0000210d      4889df         mov rdi, rbx
0x00002110      4531ed         xor r13d, r13d                          ; .//src:210
0x00002113      eb11           jmp 0x2126
0x00002115      0f1f00         nop dword [rax]
0x00002118      488d7801       lea rdi, [rax + 1]
0x0000211c      488993082000.  mov qword [rbx + 0x2008], rdx
0x00002123      4989d5         mov r13, rdx
0x00002126      4c89f2         mov rdx, r14
0x00002129      4489fe         mov esi, r15d
0x0000212c      4829fa         sub rdx, rdi
0x0000212f      e83cf5ffff     call sym.imp.memchr                     ; .//src:526
0x00002134      4885c0         test rax, rax
0x00002137      498d5501       lea rdx, [r13 + 1]
0x0000213b      75db           jne 0x2118                              ; .//src:513
0x0000213d      488b442430     mov rax, qword [rsp + 0x30]
0x00002142      4c016c2438     add qword [rsp + 0x38], r13
0x00002147      488b80002000.  mov rax, qword [rax + 0x2000]
0x0000214e      498d1404       lea rdx, [r12 + rax]
0x00002152      4881faff1f00.  cmp rdx, 0x1fff
0x00002159      0f86e2000000   jbe 0x2241
0x0000215f      488b442430     mov rax, qword [rsp + 0x30]
0x00002164      488998102000.  mov qword [rax + 0x2010], rbx
0x0000216b      488b442438     mov rax, qword [rsp + 0x38]             ; .//src:517
0x00002170      482b85082000.  sub rax, qword [rbp + 0x2008]
0x00002177      4839442418     cmp qword [rsp + 0x18], rax
0x0000217c      0f8326020000   jae 0x23a8
0x00002182      488bb5002000.  mov rsi, qword [rbp + 0x2000]
0x00002189      4801742448     add qword [rsp + 0x48], rsi
0x0000218e      4885f6         test rsi, rsi
0x00002191      0f85a2030000   jne 0x2539
0x00002197      488b8d082000.  mov rcx, qword [rbp + 0x2008]
0x0000219e      48895c2430     mov qword [rsp + 0x30], rbx
0x000021a3      4889eb         mov rbx, rbp                            ; .//src:482
0x000021a6      48294c2438     sub qword [rsp + 0x38], rcx
0x000021ab      488bad102000.  mov rbp, qword [rbp + 0x2010]
0x000021b2      e9f1feffff     jmp 0x20a8
0x000021b7      4889df         mov rdi, rbx
0x000021ba      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000021c2      448bac248c00.  mov r13d, dword [rsp + 0x8c]
0x000021ca      e831f3ffff     call sym.imp.free
0x000021cf      4983c401       add r12, 1
0x000021d3      0f844c050000   je 0x2725
0x000021d9      488b4c2430     mov rcx, qword [rsp + 0x30]
0x000021de      488b81002000.  mov rax, qword [rcx + 0x2000]
0x000021e5      4885c0         test rax, rax
0x000021e8      0f85d1010000   jne 0x23bf
0x000021ee      4989ee         mov r14, rbp
0x000021f1      48896c2430     mov qword [rsp + 0x30], rbp
0x000021f6      488b5c2418     mov rbx, qword [rsp + 0x18]
0x000021fb      4c8b642438     mov r12, qword [rsp + 0x38]
0x00002200      488b6c2448     mov rbp, qword [rsp + 0x48]
0x00002205      eb0e           jmp 0x2215
0x00002207      4d2ba6082000.  sub r12, qword [r14 + 0x2008]
0x0000220e      4d8bb6102000.  mov r14, qword [r14 + 0x2010]
0x00002215      4c89e0         mov rax, r12
0x00002218      492b86082000.  sub rax, qword [r14 + 0x2008]
0x0000221f      4839c3         cmp rbx, rax
0x00002222      0f838e000000   jae 0x22b6
0x00002228      498bb6002000.  mov rsi, qword [r14 + 0x2000]
0x0000222f      4801f5         add rbp, rsi
0x00002232      4885f6         test rsi, rsi
0x00002235      74d0           je 0x2207
0x00002237      4c89f7         mov rdi, r14
0x0000223a      e851090000     call sym.xwrite_stdout.part.6           ; .//src:296
0x0000223f      ebc6           jmp 0x2207
0x00002241      4c8b742430     mov r14, qword [rsp + 0x30]
0x00002246      4c89e2         mov rdx, r12
0x00002249      4889de         mov rsi, rbx
0x0000224c      498d3c06       lea rdi, [r14 + rax]
0x00002250      e86bf4ffff     call sym.imp.memcpy
0x00002255      488b83002000.  mov rax, qword [rbx + 0x2000]
0x0000225c      490186002000.  add qword [r14 + 0x2000], rax
0x00002263      488b83082000.  mov rax, qword [rbx + 0x2008]
0x0000226a      490186082000.  add qword [r14 + 0x2008], rax           ; .//src:298
0x00002271      e932feffff     jmp 0x20a8
0x00002276      4c39642458     cmp qword [rsp + 0x58], r12
0x0000227b      4b8d0424       lea rax, [r12 + r12]
0x0000227f      480f42442428   cmovb rax, qword [rsp + 0x28]
0x00002285      4989c4         mov r12, rax
0x00002288      e9d9fbffff     jmp 0x1e66
0x0000228d      31ff           xor edi, edi
0x0000228f      e8ccf3ffff     call sym.imp.close
0x00002294      85c0           test eax, eax
0x00002296      0f89bcfcffff   jns 0x1f58
0x0000229c      e87ff2ffff     call sym.imp.__errno_location
0x000022a1      8b30           mov esi, dword [rax]
0x000022a3      488d15404e00.  lea rdx, [0x000070ea]                   ; .//src:205 ; "-"
0x000022aa      bf01000000     mov edi, 1
0x000022af      31c0           xor eax, eax
0x000022b1      e8baf4ffff     call sym.imp.error
0x000022b6      488b4c2418     mov rcx, qword [rsp + 0x18]
0x000022bb      4c89e0         mov rax, r12
0x000022be      48896c2448     mov qword [rsp + 0x48], rbp
0x000022c3      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x000022cc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x000022d1      4839c1         cmp rcx, rax
0x000022d4      0f8385000000   jae 0x235f
0x000022da      4889c3         mov rbx, rax
0x000022dd      4d8ba6002000.  mov r12, qword [r14 + 0x2000]
0x000022e4      4c89f0         mov rax, r14
0x000022e7      4829cb         sub rbx, rcx
0x000022ea      0fbe0df97d20.  movsx ecx, byte [obj.line_end]          ; [0x20a0ea:1]=0
0x000022f1      4c89f5         mov rbp, r14
0x000022f4      4d01f4         add r12, r14                            ; .//src:58
0x000022f7      4989de         mov r14, rbx
0x000022fa      89cb           mov ebx, ecx
0x000022fc      eb25           jmp 0x2323
0x000022fe      4c89e2         mov rdx, r12
0x00002301      89de           mov esi, ebx
0x00002303      4889c7         mov rdi, rax
0x00002306      4829c2         sub rdx, rax
0x00002309      e862f3ffff     call sym.imp.memchr
0x0000230e      4885c0         test rax, rax                           ; ../coreutils-8.31/src/system.h:-139
0x00002311      7415           je 0x2328
0x00002313      488385082000.  add qword [rbp + 0x2008], 1
0x0000231b      4883c001       add rax, 1
0x0000231f      4983ee01       sub r14, 1
0x00002323      4d85f6         test r14, r14                           ; .//src:56
0x00002326      75d6           jne 0x22fe
0x00002328      4989ee         mov r14, rbp
0x0000232b      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x00002334      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00002339      4c29f0         sub rax, r14
0x0000233c      4801442448     add qword [rsp + 0x48], rax
0x00002341      4885c0         test rax, rax
0x00002344      7419           je 0x235f
0x00002346      4c89f7         mov rdi, r14
0x00002349      4889c6         mov rsi, rax
0x0000234c      e83f080000     call sym.xwrite_stdout.part.6
0x00002351      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x0000235a      4889ef         mov rdi, rbp
0x0000235d      eb14           jmp 0x2373
0x0000235f      4889ef         mov rdi, rbp
0x00002362      eb0f           jmp 0x2373
0x00002364      488b9f102000.  mov rbx, qword [rdi + 0x2010]
0x0000236b      e890f1ffff     call sym.imp.free                       ; .//src:74
0x00002370      4889df         mov rdi, rbx                            ; .//src:93
0x00002373      4885ff         test rdi, rdi
0x00002376      75ec           jne 0x2364
0x00002378      48837c2440ff   cmp qword [rsp + 0x40], 0xffffffffffffffff
0x0000237e      0f84cff8ffff   je 0x1c53
0x00002384      488b742448     mov rsi, qword [rsp + 0x48]
0x00002389      8b7c240c       mov edi, dword [rsp + 0xc]
0x0000238d      31d2           xor edx, edx
0x0000238f      4c89f9         mov rcx, r15
0x00002392      e839070000     call sym.elseek
0x00002397      4885c0         test rax, rax
0x0000239a      0f89b3f8ffff   jns 0x1c53
0x000023a0      4531e4         xor r12d, r12d
0x000023a3      e9abf8ffff     jmp 0x1c53
0x000023a8      bf18200000     mov edi, 0x2018
0x000023ad      e8ee380000     call sym.xmalloc                        ; .//src:-122
0x000023b2      48895c2430     mov qword [rsp + 0x30], rbx
0x000023b7      4889c3         mov rbx, rax
0x000023ba      e9e9fcffff     jmp 0x20a8
0x000023bf      0fb61d247d20.  movzx ebx, byte [obj.line_end]          ; [0x20a0ea:1]=0
0x000023c6      385c01ff       cmp byte [rcx + rax - 1], bl
0x000023ca      0f841efeffff   je 0x21ee
0x000023d0      488381082000.  add qword [rcx + 0x2008], 1
0x000023d8      488344243801   add qword [rsp + 0x38], 1               ; .//src:-136
0x000023de      e90bfeffff     jmp 0x21ee
0x000023e3      8b7c240c       mov edi, dword [rsp + 0xc]              ; .//src:-129
0x000023e7      31f6           xor esi, esi
0x000023e9      4c89f9         mov rcx, r15
0x000023ec      ba01000000     mov edx, 1
0x000023f1      e8da060000     call sym.elseek
0x000023f6      4885c0         test rax, rax
0x000023f9      4889442440     mov qword [rsp + 0x40], rax             ; .//src:-281
0x000023fe      78a0           js 0x23a0
0x00002400      80bc248a0000.  cmp byte [rsp + 0x8a], 0
0x00002408      4c8b8424d000.  mov r8, qword [rsp + 0xd0]
0x00002410      440fb60dd47c.  movzx r9d, byte [obj.presume_input_pipe] ; [0x20a0ec:1]=0
0x00002418      0f84b0040000   je 0x28ce
0x0000241e      4584c9         test r9b, r9b
0x00002421      0f851efcffff   jne 0x2045
0x00002427      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x0000242f      48b9ffffffff.  movabs rcx, 0x1fffffffffffffff          ; 2305843009213693951
0x00002439      488d50ff       lea rdx, [rax - 1]
0x0000243d      4839ca         cmp rdx, rcx
0x00002440      ba00020000     mov edx, 0x200
0x00002445      480f47c2       cmova rax, rdx
0x00002449      4c39c0         cmp rax, r8
0x0000244c      0f8df3fbffff   jge 0x2045
0x00002452      4c39442440     cmp qword [rsp + 0x40], r8
0x00002457      41b901000000   mov r9d, 1
0x0000245d      0f8c09030000   jl 0x276c
0x00002463      4589cc         mov r12d, r9d
0x00002466      4183e401       and r12d, 1
0x0000246a      e9e4f7ffff     jmp 0x1c53
0x0000246f      4084ed         test bpl, bpl
0x00002472      4d89e8         mov r8, r13
0x00002475      4c89e3         mov rbx, r12
0x00002478      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00002480      40886c2438     mov byte [rsp + 0x38], bpl
0x00002485      4589cc         mov r12d, r9d
0x00002488      448bac248c00.  mov r13d, dword [rsp + 0x8c]
0x00002490      0f840f020000   je 0x26a5
0x00002496      488b4c2460     mov rcx, qword [rsp + 0x60]
0x0000249b      498b3cde       mov rdi, qword [r14 + rbx*8]
0x0000249f      bd00200000     mov ebp, 0x2000
0x000024a4      4c29c5         sub rbp, r8
0x000024a7      48014c2430     add qword [rsp + 0x30], rcx
0x000024ac      4c01c7         add rdi, r8
0x000024af      4839e9         cmp rcx, rbp
0x000024b2      0f824c030000   jb 0x2804
0x000024b8      4885ed         test rbp, rbp
0x000024bb      7418           je 0x24d5                               ; .//src:-895
0x000024bd      4889ee         mov rsi, rbp
0x000024c0      488994248000.  mov qword [rsp + 0x80], rdx
0x000024c8      e8c3060000     call sym.xwrite_stdout.part.6
0x000024cd      488b94248000.  mov rdx, qword [rsp + 0x80]
0x000024d5      488b742460     mov rsi, qword [rsp + 0x60]
0x000024da      440fb6642438   movzx r12d, byte [rsp + 0x38]
0x000024e0      4829ee         sub rsi, rbp
0x000024e3      0f85dd010000   jne 0x26c6
0x000024e9      31db           xor ebx, ebx
0x000024eb      488b6c2448     mov rbp, qword [rsp + 0x48]
0x000024f0      eb0d           jmp 0x24ff
0x000024f2      498b3cde       mov rdi, qword [r14 + rbx*8]
0x000024f6      4883c301       add rbx, 1
0x000024fa      e801f0ffff     call sym.imp.free
0x000024ff      4839eb         cmp rbx, rbp
0x00002502      75ee           jne 0x24f2
0x00002504      4c89f7         mov rdi, r14
0x00002507      e8f4efffff     call sym.imp.free
0x0000250c      48837c2440ff   cmp qword [rsp + 0x40], 0xffffffffffffffff
0x00002512      0f843bf7ffff   je 0x1c53
0x00002518      488b742430     mov rsi, qword [rsp + 0x30]
0x0000251d      8b7c240c       mov edi, dword [rsp + 0xc]
0x00002521      31d2           xor edx, edx
0x00002523      4c89f9         mov rcx, r15
0x00002526      e8a5050000     call sym.elseek
0x0000252b      4885c0         test rax, rax
0x0000252e      0f891ff7ffff   jns 0x1c53
0x00002534      e967feffff     jmp 0x23a0
0x00002539      4889ef         mov rdi, rbp
0x0000253c      e84f060000     call sym.xwrite_stdout.part.6
0x00002541      e951fcffff     jmp 0x2197
0x00002546      488b7c2470     mov rdi, qword [rsp + 0x70]
0x0000254b      31db           xor ebx, ebx
0x0000254d      e84e370000     call sym.xmalloc
0x00002552      488b4c2468     mov rcx, qword [rsp + 0x68]
0x00002557      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x00002560      488b6c2418     mov rbp, qword [rsp + 0x18]
0x00002565      488984248000.  mov qword [rsp + 0x80], rax
0x0000256d      488984249000.  mov qword [rsp + 0x90], rax
0x00002575      44896c2448     mov dword [rsp + 0x48], r13d
0x0000257a      4801c8         add rax, rcx
0x0000257d      4c897c2438     mov qword [rsp + 0x38], r15
0x00002582      4989cd         mov r13, rcx
0x00002585      488984249800.  mov qword [rsp + 0x98], rax
0x0000258d      0fb6c3         movzx eax, bl
0x00002590      8b7c240c       mov edi, dword [rsp + 0xc]
0x00002594      4c89ea         mov rdx, r13
0x00002597      4c8bb4c49000.  mov r14, qword [rsp + rax*8 + 0x90]
0x0000259f      4c89f6         mov rsi, r14
0x000025a2      e8d9110000     call sym.full_read
0x000025a7      4939c5         cmp r13, rax
0x000025aa      4989c7         mov r15, rax
0x000025ad      765b           jbe 0x260a
0x000025af      e86cefffff     call sym.imp.__errno_location
0x000025b4      833800         cmp dword [rax], 0
0x000025b7      0f85e6010000   jne 0x27a3
0x000025bd      4c39fd         cmp rbp, r15
0x000025c0      727f           jb 0x2641
0x000025c2      4584e4         test r12b, r12b
0x000025c5      751e           jne 0x25e5
0x000025c7      89d8           mov eax, ebx
0x000025c9      4c017c2430     add qword [rsp + 0x30], r15
0x000025ce      83f001         xor eax, 1
0x000025d1      4d85ff         test r15, r15
0x000025d4      0fb6c0         movzx eax, al
0x000025d7      488b84c49000.  mov rax, qword [rsp + rax*8 + 0x90]
0x000025df      0f85a6010000   jne 0x278b
0x000025e5      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x000025ee      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000025f3      448b6c2448     mov r13d, dword [rsp + 0x48]
0x000025f8      488bbc248000.  mov rdi, qword [rsp + 0x80]
0x00002600      e8fbeeffff     call sym.imp.free
0x00002605      e902ffffff     jmp 0x250c
0x0000260a      4584e4         test r12b, r12b
0x0000260d      7440           je 0x264f
0x0000260f      4531e4         xor r12d, r12d
0x00002612      4839c5         cmp rbp, rax
0x00002615      0f8385000000   jae 0x26a0
0x0000261b      4c89fa         mov rdx, r15
0x0000261e      4829ea         sub rdx, rbp
0x00002621      4801542430     add qword [rsp + 0x30], rdx
0x00002626      4889d6         mov rsi, rdx
0x00002629      4c89f7         mov rdi, r14
0x0000262c      e85f050000     call sym.xwrite_stdout.part.6
0x00002631      83f301         xor ebx, 1
0x00002634      4584e4         test r12b, r12b
0x00002637      7558           jne 0x2691
0x00002639      4531e4         xor r12d, r12d
0x0000263c      e94cffffff     jmp 0x258d
0x00002641      4584e4         test r12b, r12b
0x00002644      753b           jne 0x2681
0x00002646      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x0000264f      89d8           mov eax, ebx
0x00002651      48016c2430     add qword [rsp + 0x30], rbp
0x00002656      83f001         xor eax, 1
0x00002659      4885ed         test rbp, rbp
0x0000265c      0fb6c0         movzx eax, al
0x0000265f      488b84c49000.  mov rax, qword [rsp + rax*8 + 0x90]
0x00002667      7507           jne 0x2670
0x00002669      4c39fd         cmp rbp, r15
0x0000266c      72ad           jb 0x261b
0x0000266e      ebc1           jmp 0x2631
0x00002670      488db8002000.  lea rdi, [rax + 0x2000]
0x00002677      4889ee         mov rsi, rbp
0x0000267a      e811050000     call sym.xwrite_stdout.part.6
0x0000267f      ebe8           jmp 0x2669
0x00002681      4c89fa         mov rdx, r15
0x00002684      4829ea         sub rdx, rbp
0x00002687      4801542430     add qword [rsp + 0x30], rdx
0x0000268c      4885d2         test rdx, rdx
0x0000268f      7595           jne 0x2626
0x00002691      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x00002696      448b6c2448     mov r13d, dword [rsp + 0x48]
0x0000269b      e958ffffff     jmp 0x25f8
0x000026a0      83f301         xor ebx, 1
0x000026a3      eb94           jmp 0x2639
0x000026a5      4839742428     cmp qword [rsp + 0x28], rsi
0x000026aa      0f8539feffff   jne 0x24e9
0x000026b0      4c89c6         mov rsi, r8
0x000026b3      482b742478     sub rsi, qword [rsp + 0x78]
0x000026b8      4801742430     add qword [rsp + 0x30], rsi
0x000026bd      4885f6         test rsi, rsi
0x000026c0      0f8423feffff   je 0x24e9
0x000026c6      498b3cd6       mov rdi, qword [r14 + rdx*8]
0x000026ca      e8c1040000     call sym.xwrite_stdout.part.6
0x000026cf      e915feffff     jmp 0x24e9
0x000026d4      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000026dc      bf04000000     mov edi, 4
0x000026e1      4989c4         mov r12, rax
0x000026e4      448bac248c00.  mov r13d, dword [rsp + 0x8c]
0x000026ec      4c89fe         mov rsi, r15
0x000026ef      e83c2c0000     call sym.quotearg_style
0x000026f4      488d35844100.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x000026fb      ba05000000     mov edx, 5
0x00002700      31ff           xor edi, edi
0x00002702      4889c3         mov rbx, rax
0x00002705      e896eeffff     call sym.imp.dcgettext
0x0000270a      418b3424       mov esi, dword [r12]
0x0000270e      4889c2         mov rdx, rax
0x00002711      4889d9         mov rcx, rbx
0x00002714      31ff           xor edi, edi
0x00002716      31c0           xor eax, eax
0x00002718      4531e4         xor r12d, r12d
0x0000271b      e850f0ffff     call sym.imp.error
0x00002720      e9c4fdffff     jmp 0x24e9
0x00002725      4c89fe         mov rsi, r15
0x00002728      bf04000000     mov edi, 4
0x0000272d      e8fe2b0000     call sym.quotearg_style
0x00002732      488d35464100.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x00002739      ba05000000     mov edx, 5
0x0000273e      31ff           xor edi, edi
0x00002740      4889c3         mov rbx, rax
0x00002743      e858eeffff     call sym.imp.dcgettext
0x00002748      4989c4         mov r12, rax
0x0000274b      e8d0edffff     call sym.imp.__errno_location
0x00002750      8b30           mov esi, dword [rax]
0x00002752      4c89e2         mov rdx, r12
0x00002755      31ff           xor edi, edi
0x00002757      4889d9         mov rcx, rbx
0x0000275a      31c0           xor eax, eax
0x0000275c      4531e4         xor r12d, r12d
0x0000275f      e80cf0ffff     call sym.imp.error
0x00002764      4889ef         mov rdi, rbp
0x00002767      e907fcffff     jmp 0x2373
0x0000276c      488b4c2440     mov rcx, qword [rsp + 0x40]
0x00002771      488b542418     mov rdx, qword [rsp + 0x18]
0x00002776      4c89ff         mov rdi, r15
0x00002779      8b74240c       mov esi, dword [rsp + 0xc]
0x0000277d      e85e080000     call sym.elide_tail_lines_seekable
0x00002782      440fb6c8       movzx r9d, al
0x00002786      e9d8fcffff     jmp 0x2463
0x0000278b      488db8002000.  lea rdi, [rax + 0x2000]
0x00002792      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x0000279b      4c89fe         mov rsi, r15
0x0000279e      e9d7feffff     jmp 0x267a
0x000027a3      4c8b7c2438     mov r15, qword [rsp + 0x38]
0x000027a8      bf04000000     mov edi, 4
0x000027ad      448b6c2448     mov r13d, dword [rsp + 0x48]
0x000027b2      4889442438     mov qword [rsp + 0x38], rax
0x000027b7      4531e4         xor r12d, r12d
0x000027ba      4c89fe         mov rsi, r15
0x000027bd      e86e2b0000     call sym.quotearg_style
0x000027c2      488d35b64000.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x000027c9      ba05000000     mov edx, 5
0x000027ce      31ff           xor edi, edi
0x000027d0      4889c3         mov rbx, rax
0x000027d3      e8c8edffff     call sym.imp.dcgettext
0x000027d8      4c8b442438     mov r8, qword [rsp + 0x38]
0x000027dd      4889c2         mov rdx, rax
0x000027e0      4889d9         mov rcx, rbx
0x000027e3      31ff           xor edi, edi
0x000027e5      31c0           xor eax, eax
0x000027e7      418b30         mov esi, dword [r8]
0x000027ea      e881efffff     call sym.imp.error
0x000027ef      e904feffff     jmp 0x25f8
0x000027f4      4531e4         xor r12d, r12d
0x000027f7      c684248a0000.  mov byte [rsp + 0x8a], 1
0x000027ff      e932f5ffff     jmp 0x1d36
0x00002804      4889ce         mov rsi, rcx
0x00002807      e884030000     call sym.xwrite_stdout.part.6
0x0000280c      440fb6642438   movzx r12d, byte [rsp + 0x38]
0x00002812      e9d2fcffff     jmp 0x24e9
0x00002817      31ff           xor edi, edi
0x00002819      e8620a0000     call sym.usage
0x0000281e      4189c6         mov r14d, eax
0x00002821      e93cf1ffff     jmp 0x1962
0x00002826      e8a5edffff     call sym.imp.__stack_chk_fail
0x0000282b      488d353b4100.  lea rsi, str.invalid_trailing_option_____c ; 0x696d ; "invalid trailing option -- %c"
0x00002832      ba05000000     mov edx, 5
0x00002837      31ff           xor edi, edi
0x00002839      e862edffff     call sym.imp.dcgettext
0x0000283e      4489f1         mov ecx, r14d
0x00002841      4889c2         mov rdx, rax
0x00002844      31f6           xor esi, esi
0x00002846      31ff           xor edi, edi
0x00002848      31c0           xor eax, eax
0x0000284a      e821efffff     call sym.imp.error
0x0000284f      e91bf1ffff     jmp 0x196f
0x00002854      4584c9         test r9b, r9b
0x00002857      0f85ef000000   jne 0x294c
0x0000285d      488d35094100.  lea rsi, str.invalid_trailing_option_____c ; 0x696d ; "invalid trailing option -- %c"
0x00002864      ba05000000     mov edx, 5
0x00002869      31ff           xor edi, edi
0x0000286b      e830edffff     call sym.imp.dcgettext
0x00002870      410fbecd       movsx ecx, r13b
0x00002874      ebcb           jmp 0x2841
0x00002876      488db4243001.  lea rsi, [rsp + 0x130]
0x0000287e      4c89ff         mov rdi, r15
0x00002881      e81a100000     call sym.umaxtostr
0x00002886      4889c7         mov rdi, rax
0x00002889      e8722d0000     call sym.quote
0x0000288e      488d35873f00.  lea rsi, str.invalid_number_of_bytes    ; 0x681c ; "invalid number of bytes"
0x00002895      ba05000000     mov edx, 5
0x0000289a      31ff           xor edi, edi
0x0000289c      4889c3         mov rbx, rax
0x0000289f      e8fcecffff     call sym.imp.dcgettext
0x000028a4      488d150f4100.  lea rdx, str.s:__s                      ; 0x69ba ; "%s: %s"
0x000028ab      4889c1         mov rcx, rax
0x000028ae      4989d8         mov r8, rbx
0x000028b1      be4b000000     mov esi, 0x4b                           ; 'K'
0x000028b6      bf01000000     mov edi, 1
0x000028bb      31c0           xor eax, eax
0x000028bd      e8aeeeffff     call sym.imp.error
0x000028c2      448815217820.  mov byte [obj.line_end], r10b           ; [0x20a0ea:1]=0
0x000028c9      e95cf4ffff     jmp 0x1d2a
0x000028ce      4584c9         test r9b, r9b
0x000028d1      4589cc         mov r12d, r9d
0x000028d4      0f852bf5ffff   jne 0x1e05
0x000028da      488b8424d800.  mov rax, qword [rsp + 0xd8]
0x000028e2      48b9ffffffff.  movabs rcx, 0x1fffffffffffffff          ; 2305843009213693951
0x000028ec      488d50ff       lea rdx, [rax - 1]
0x000028f0      4839ca         cmp rdx, rcx
0x000028f3      ba00020000     mov edx, 0x200
0x000028f8      480f47c2       cmova rax, rdx
0x000028fc      4939c0         cmp r8, rax
0x000028ff      0f8e00f5ffff   jle 0x1e05
0x00002905      4c2b442440     sub r8, qword [rsp + 0x40]
0x0000290a      b800000000     mov eax, 0
0x0000290f      4c0f48c0       cmovs r8, rax
0x00002913      4c39442418     cmp qword [rsp + 0x18], r8
0x00002918      720e           jb 0x2928
0x0000291a      440fb6a42489.  movzx r12d, byte [rsp + 0x89]
0x00002923      e92bf3ffff     jmp 0x1c53
0x00002928      4c89c6         mov rsi, r8
0x0000292b      482b742418     sub rsi, qword [rsp + 0x18]
0x00002930      8b7c240c       mov edi, dword [rsp + 0xc]
0x00002934      e8d7020000     call sym.copy_fd
0x00002939      85c0           test eax, eax
0x0000293b      74dd           je 0x291a
0x0000293d      4c89fe         mov rsi, r15
0x00002940      89c7           mov edi, eax
0x00002942      e819060000     call sym.diagnose_copy_fd_failure
0x00002947      e907f3ffff     jmp 0x1c53
0x0000294c      448815977720.  mov byte [obj.line_end], r10b           ; [0x20a0ea:1]=0
0x00002953      e905ffffff     jmp 0x285d
0x00002958      0f1f84000000.  nop dword [rax + rax]
;-- entry0:
;-- _start:
;-- rip:
0x00002960      31ed           xor ebp, ebp
0x00002962      4989d1         mov r9, rdx
0x00002965      5e             pop rsi
0x00002966      4889e2         mov rdx, rsp
0x00002969      4883e4f0       and rsp, 0xfffffffffffffff0
0x0000296d      50             push rax
0x0000296e      54             push rsp
0x0000296f      4c8d054a3e00.  lea r8, sym.__libc_csu_fini             ; 0x67c0
0x00002976      488d0dd33d00.  lea rcx, sym.__libc_csu_init            ; 0x6750 ; "AWAVI\x89\xd7AUATL\x8d%\x0e3 "
0x0000297d      488d3daceeff.  lea rdi, main                           ; sym.main
                                                                       ; 0x1830 ; "AWAVAUATUS\x89\xfdH\x89\xf3H\x81\xecX\x01"
0x00002984      ff154e762000   call qword [reloc.__libc_start_main]    ; [0x209fd8:8]=0
0x0000298a      f4             hlt
0x0000298b      0f1f440000     nop dword [rax + rax]
;-- deregister_tm_clones:
0x00002990      488d3d097720.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x00002997      55             push rbp
0x00002998      488d05017720.  lea rax, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x0000299f      4839f8         cmp rax, rdi
0x000029a2      4889e5         mov rbp, rsp
0x000029a5      7419           je 0x29c0
0x000029a7      488b05227620.  mov rax, qword [reloc._ITM_deregisterTMCloneTable] ; [0x209fd0:8]=0
0x000029ae      4885c0         test rax, rax
0x000029b1      740d           je 0x29c0
0x000029b3      5d             pop rbp
0x000029b4      ffe0           jmp rax
0x000029b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000029c0      5d             pop rbp
0x000029c1      c3             ret
0x000029c2      0f1f4000       nop dword [rax]
0x000029c6      662e0f1f8400.  nop word cs:[rax + rax]
;-- register_tm_clones:
0x000029d0      488d3dc97620.  lea rdi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x000029d7      488d35c27620.  lea rsi, obj.__progname                 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; 0x20a0a0
0x000029de      55             push rbp
0x000029df      4829fe         sub rsi, rdi
0x000029e2      4889e5         mov rbp, rsp
0x000029e5      48c1fe03       sar rsi, 3
0x000029e9      4889f0         mov rax, rsi
0x000029ec      48c1e83f       shr rax, 0x3f
0x000029f0      4801c6         add rsi, rax
0x000029f3      48d1fe         sar rsi, 1
0x000029f6      7418           je 0x2a10
0x000029f8      488b05e97520.  mov rax, qword [reloc._ITM_registerTMCloneTable] ; [0x209fe8:8]=0
0x000029ff      4885c0         test rax, rax
0x00002a02      740c           je 0x2a10
0x00002a04      5d             pop rbp
0x00002a05      ffe0           jmp rax
0x00002a07      660f1f840000.  nop word [rax + rax]
0x00002a10      5d             pop rbp
0x00002a11      c3             ret
0x00002a12      0f1f4000       nop dword [rax]
0x00002a16      662e0f1f8400.  nop word cs:[rax + rax]
;-- entry.fini0:
;-- __do_global_dtors_aux:
0x00002a20      803dc1762000.  cmp byte [obj.completed.7697], 0        ; [0x20a0e8:1]=0
0x00002a27      752f           jne 0x2a58
0x00002a29      48833dbf7520.  cmp qword [reloc.__cxa_finalize], 0     ; [0x209ff0:8]=0
0x00002a31      55             push rbp
0x00002a32      4889e5         mov rbp, rsp
0x00002a35      740c           je 0x2a43
0x00002a37      488b3dca7520.  mov rdi, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x00002a3e      e8ddedffff     call sym..plt.got
0x00002a43      e848ffffff     call sym.deregister_tm_clones
0x00002a48      c60599762000.  mov byte [obj.completed.7697], 1        ; [0x20a0e8:1]=0
0x00002a4f      5d             pop rbp
0x00002a50      c3             ret
0x00002a51      0f1f80000000.  nop dword [rax]
0x00002a58      f3c3           ret
0x00002a5a      660f1f440000   nop word [rax + rax]
;-- entry.init0:
;-- frame_dummy:
0x00002a60      55             push rbp
0x00002a61      4889e5         mov rbp, rsp
0x00002a64      5d             pop rbp
0x00002a65      e966ffffff     jmp sym.register_tm_clones
0x00002a6a      660f1f440000   nop word [rax + rax]
;-- string_to_integer:
0x00002a70      4084ff         test dil, dil                           ; .//src:911
0x00002a73      53             push rbx
0x00002a74      ba05000000     mov edx, 5                              ; .//src:912
0x00002a79      4889f3         mov rbx, rsi                            ; .//src:911
0x00002a7c      7532           jne 0x2ab0                              ; .//src:912
0x00002a7e      488d35973d00.  lea rsi, str.invalid_number_of_bytes    ; 0x681c ; "invalid number of bytes"
0x00002a85      31ff           xor edi, edi
0x00002a87      e814ebffff     call sym.imp.dcgettext
0x00002a8c      4989c0         mov r8, rax
0x00002a8f      4889df         mov rdi, rbx
0x00002a92      488d0d9b3d00.  lea rcx, str.bkKmMGTPEZY0               ; 0x6834 ; "bkKmMGTPEZY0"
0x00002a99      4531c9         xor r9d, r9d
0x00002a9c      5b             pop rbx                                 ; .//src:915
0x00002a9d      48c7c2ffffff.  mov rdx, 0xffffffffffffffff             ; .//src:912
0x00002aa4      31f6           xor esi, esi
0x00002aa6      e985350000     jmp sym.xdectoumax
0x00002aab      0f1f440000     nop dword [rax + rax]
0x00002ab0      488d354d3d00.  lea rsi, str.invalid_number_of_lines    ; 0x6804 ; "invalid number of lines"
0x00002ab7      31ff           xor edi, edi
0x00002ab9      e8e2eaffff     call sym.imp.dcgettext
0x00002abe      4989c0         mov r8, rax
0x00002ac1      ebcc           jmp 0x2a8f
0x00002ac3      0f1f00         nop dword [rax]
0x00002ac6      662e0f1f8400.  nop word cs:[rax + rax]
;-- elseek:
0x00002ad0      4155           push r13                                ; .//src:225
0x00002ad2      4154           push r12
0x00002ad4      4989cd         mov r13, rcx
0x00002ad7      55             push rbp
0x00002ad8      53             push rbx
0x00002ad9      4989f4         mov r12, rsi
0x00002adc      89d5           mov ebp, edx
0x00002ade      4883ec28       sub rsp, 0x28
0x00002ae2      64488b042528.  mov rax, qword fs:[0x28]
0x00002aeb      4889442418     mov qword [rsp + 0x18], rax
0x00002af0      31c0           xor eax, eax
0x00002af2      e829ebffff     call sym.imp.lseek                      ; .//src:226
0x00002af7      4885c0         test rax, rax                           ; .//src:229
0x00002afa      4889c3         mov rbx, rax                            ; .//src:226
0x00002afd      7821           js 0x2b20                               ; .//src:229
0x00002aff      488b4c2418     mov rcx, qword [rsp + 0x18]             ; .//src:238
0x00002b04      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002b0d      4889d8         mov rax, rbx
0x00002b10      756c           jne 0x2b7e
0x00002b12      4883c428       add rsp, 0x28
0x00002b16      5b             pop rbx
0x00002b17      5d             pop rbp
0x00002b18      415c           pop r12
0x00002b1a      415d           pop r13
0x00002b1c      c3             ret
0x00002b1d      0f1f00         nop dword [rax]
0x00002b20      4889e6         mov rsi, rsp                            ; .//src:230
0x00002b23      4c89e7         mov rdi, r12
0x00002b26      e8d50c0000     call sym.offtostr
0x00002b2b      4c89ea         mov rdx, r13
0x00002b2e      31ff           xor edi, edi
0x00002b30      be03000000     mov esi, 3
0x00002b35      4989c4         mov r12, rax
0x00002b38      e8f3280000     call sym.quotearg_n_style_colon
0x00002b3d      488d35fd3c00.  lea rsi, str.s:_cannot_seek_to_offset__s ; .//src:231 ; 0x6841 ; "%s: cannot seek to offset %s"
0x00002b44      4989c5         mov r13, rax                            ; .//src:230
0x00002b47      488d051a3f00.  lea rax, str.s:_cannot_seek_to_relative_offset__s ; .//src:231 ; 0x6a68 ; "%s: cannot seek to relative offset %s"
0x00002b4e      85ed           test ebp, ebp
0x00002b50      ba05000000     mov edx, 5
0x00002b55      480f45f0       cmovne rsi, rax
0x00002b59      31ff           xor edi, edi
0x00002b5b      e840eaffff     call sym.imp.dcgettext
0x00002b60      4889c5         mov rbp, rax
0x00002b63      e8b8e9ffff     call sym.imp.__errno_location           ; .//src:230
0x00002b68      8b30           mov esi, dword [rax]
0x00002b6a      4d89e0         mov r8, r12
0x00002b6d      4c89e9         mov rcx, r13
0x00002b70      4889ea         mov rdx, rbp
0x00002b73      31ff           xor edi, edi
0x00002b75      31c0           xor eax, eax
0x00002b77      e8f4ebffff     call sym.imp.error
0x00002b7c      eb81           jmp 0x2aff                              ; .//src:237
0x00002b7e      e84deaffff     call sym.imp.__stack_chk_fail           ; .//src:238
0x00002b83      0f1f00         nop dword [rax]
0x00002b86      662e0f1f8400.  nop word cs:[rax + rax]
;-- xwrite_stdout.part.6:
0x00002b90      55             push rbp                                ; .//src:180
0x00002b91      53             push rbx
0x00002b92      4889f2         mov rdx, rsi                            ; .//src:182
0x00002b95      4889f3         mov rbx, rsi                            ; .//src:180
0x00002b98      be01000000     mov esi, 1                              ; .//src:182
0x00002b9d      4883ec08       sub rsp, 8                              ; .//src:180
0x00002ba1      488b0d007520.  mov rcx, qword [obj.stdout]             ; .//src:182 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002ba8      e883ebffff     call sym.imp.fwrite_unlocked
0x00002bad      4839c3         cmp rbx, rax
0x00002bb0      7707           ja 0x2bb9
0x00002bb2      4883c408       add rsp, 8                              ; .//src:188
0x00002bb6      5b             pop rbx
0x00002bb7      5d             pop rbp
0x00002bb8      c3             ret
0x00002bb9      488b3de87420.  mov rdi, qword [obj.stdout]             ; .//src:184 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00002bc0      e89be9ffff     call sym.imp.clearerr_unlocked
0x00002bc5      488d35923c00.  lea rsi, str.standard_output            ; .//src:185 ; 0x685e ; "standard output"
0x00002bcc      bf04000000     mov edi, 4
0x00002bd1      e85a270000     call sym.quotearg_style
0x00002bd6      488d35913c00.  lea rsi, str.error_writing__s           ; 0x686e ; "error writing %s"
0x00002bdd      ba05000000     mov edx, 5
0x00002be2      31ff           xor edi, edi
0x00002be4      4889c5         mov rbp, rax
0x00002be7      e8b4e9ffff     call sym.imp.dcgettext
0x00002bec      4889c3         mov rbx, rax
0x00002bef      e82ce9ffff     call sym.imp.__errno_location
0x00002bf4      8b30           mov esi, dword [rax]
0x00002bf6      4889e9         mov rcx, rbp
0x00002bf9      4889da         mov rdx, rbx
0x00002bfc      bf01000000     mov edi, 1
0x00002c01      31c0           xor eax, eax
0x00002c03      e868ebffff     call sym.imp.error
0x00002c08      0f1f84000000.  nop dword [rax + rax]
;-- copy_fd:
0x00002c10      4155           push r13                                ; .//src:195
0x00002c12      4154           push r12
0x00002c14      55             push rbp
0x00002c15      53             push rbx
0x00002c16      4881ec182000.  sub rsp, 0x2018
0x00002c1d      64488b042528.  mov rax, qword fs:[0x28]
0x00002c26      488984240820.  mov qword [rsp + 0x2008], rax
0x00002c2e      31c0           xor eax, eax
0x00002c30      4885f6         test rsi, rsi                           ; .//src:200
0x00002c33      7461           je 0x2c96
0x00002c35      4189fc         mov r12d, edi
0x00002c38      4889f3         mov rbx, rsi
0x00002c3b      4889e5         mov rbp, rsp
0x00002c3e      41bd00200000   mov r13d, 0x2000                        ; .//src:202
0x00002c44      eb0f           jmp 0x2c55
0x00002c46      662e0f1f8400.  nop word cs:[rax + rax]
0x00002c50      4885db         test rbx, rbx                           ; .//src:200
0x00002c53      7441           je 0x2c96
0x00002c55      4881fb002000.  cmp rbx, 0x2000                         ; .//src:202
0x00002c5c      4c89ea         mov rdx, r13
0x00002c5f      4889ee         mov rsi, rbp                            ; .//src:203
0x00002c62      480f46d3       cmovbe rdx, rbx                         ; .//src:202
0x00002c66      4489e7         mov edi, r12d                           ; .//src:203
0x00002c69      e8b2290000     call sym.safe_read
0x00002c6e      4883f8ff       cmp rax, 0xffffffffffffffff             ; .//src:204
0x00002c72      744c           je 0x2cc0
0x00002c74      4829c3         sub rbx, rax                            ; .//src:207
0x00002c77      4885c0         test rax, rax                           ; .//src:209
0x00002c7a      7505           jne 0x2c81
0x00002c7c      4885db         test rbx, rbx
0x00002c7f      754f           jne 0x2cd0
0x00002c81      4885c0         test rax, rax                           ; .//src:182
0x00002c84      74ca           je 0x2c50
0x00002c86      4889c6         mov rsi, rax
0x00002c89      4889ef         mov rdi, rbp
0x00002c8c      e8fffeffff     call sym.xwrite_stdout.part.6
0x00002c91      4885db         test rbx, rbx                           ; .//src:200
0x00002c94      75bf           jne 0x2c55
0x00002c96      31c0           xor eax, eax                            ; .//src:215
0x00002c98      488b8c240820.  mov rcx, qword [rsp + 0x2008]           ; .//src:216
0x00002ca0      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002ca9      752c           jne 0x2cd7
0x00002cab      4881c4182000.  add rsp, 0x2018
0x00002cb2      5b             pop rbx
0x00002cb3      5d             pop rbp
0x00002cb4      415c           pop r12
0x00002cb6      415d           pop r13
0x00002cb8      c3             ret
0x00002cb9      0f1f80000000.  nop dword [rax]
0x00002cc0      b801000000     mov eax, 1                              ; .//src:205
0x00002cc5      ebd1           jmp 0x2c98
0x00002cc7      660f1f840000.  nop word [rax + rax]
0x00002cd0      b802000000     mov eax, 2                              ; .//src:210
0x00002cd5      ebc1           jmp 0x2c98
0x00002cd7      e8f4e8ffff     call sym.imp.__stack_chk_fail           ; .//src:216
0x00002cdc      0f1f4000       nop dword [rax]
;-- head_lines:
0x00002ce0      4157           push r15                                ; .//src:800
0x00002ce2      4156           push r14
0x00002ce4      4155           push r13
0x00002ce6      4154           push r12
0x00002ce8      55             push rbp
0x00002ce9      53             push rbx
0x00002cea      4881eca82000.  sub rsp, 0x20a8
0x00002cf1      64488b042528.  mov rax, qword fs:[0x28]
0x00002cfa      488984249820.  mov qword [rsp + 0x2098], rax
0x00002d02      31c0           xor eax, eax
0x00002d04      4885d2         test rdx, rdx                           ; .//src:803
0x00002d07      0f840b010000   je 0x2e18
0x00002d0d      488dac249000.  lea rbp, [rsp + 0x90]
0x00002d15      4c8dbc248f00.  lea r15, [rsp + 0x8f]
0x00002d1d      4989fd         mov r13, rdi
0x00002d20      4189f4         mov r12d, esi
0x00002d23      4989d6         mov r14, rdx
0x00002d26      ba00200000     mov edx, 0x2000                         ; .//src:805
0x00002d2b      4889ee         mov rsi, rbp
0x00002d2e      4489e7         mov edi, r12d
0x00002d31      e8ea280000     call sym.safe_read
0x00002d36      4883f8ff       cmp rax, 0xffffffffffffffff             ; .//src:808
0x00002d3a      0f8498000000   je 0x2dd8
0x00002d40      4885c0         test rax, rax                           ; .//src:813
0x00002d43      0f84cf000000   je 0x2e18
0x00002d49      0fb6159a7320.  movzx edx, byte [obj.line_end]          ; .//src:816 ; [0x20a0ea:1]=0
0x00002d50      31db           xor ebx, ebx                            ; .//src:806
0x00002d52      eb09           jmp 0x2d5d
0x00002d54      0f1f4000       nop dword [rax]
0x00002d58      4839d8         cmp rax, rbx                            ; .//src:815
0x00002d5b      746b           je 0x2dc8
0x00002d5d      4883c301       add rbx, 1                              ; .//src:816
0x00002d61      4138141f       cmp byte [r15 + rbx], dl
0x00002d65      75f1           jne 0x2d58
0x00002d67      4983ee01       sub r14, 1
0x00002d6b      75eb           jne 0x2d58
0x00002d6d      4989de         mov r14, rbx                            ; .//src:822
0x00002d70      ba01000000     mov edx, 1
0x00002d75      4489e7         mov edi, r12d
0x00002d78      4929c6         sub r14, rax
0x00002d7b      4c89f6         mov rsi, r14
0x00002d7e      e89de8ffff     call sym.imp.lseek
0x00002d83      4885c0         test rax, rax
0x00002d86      0f8896000000   js 0x2e22
0x00002d8c      4889de         mov rsi, rbx
0x00002d8f      4889ef         mov rdi, rbp
0x00002d92      e8f9fdffff     call sym.xwrite_stdout.part.6
0x00002d97      b801000000     mov eax, 1                              ; .//src:832
0x00002d9c      488b8c249820.  mov rcx, qword [rsp + 0x2098]           ; .//src:833
0x00002da4      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002dad      0f85af000000   jne 0x2e62
0x00002db3      4881c4a82000.  add rsp, 0x20a8
0x00002dba      5b             pop rbx
0x00002dbb      5d             pop rbp
0x00002dbc      415c           pop r12
0x00002dbe      415d           pop r13
0x00002dc0      415e           pop r14
0x00002dc2      415f           pop r15
0x00002dc4      c3             ret
0x00002dc5      0f1f00         nop dword [rax]
0x00002dc8      4889c6         mov rsi, rax
0x00002dcb      4889ef         mov rdi, rbp
0x00002dce      e8bdfdffff     call sym.xwrite_stdout.part.6
0x00002dd3      e94effffff     jmp 0x2d26
0x00002dd8      4c89ee         mov rsi, r13                            ; .//src:810
0x00002ddb      bf04000000     mov edi, 4
0x00002de0      e84b250000     call sym.quotearg_style
0x00002de5      488d35933a00.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x00002dec      ba05000000     mov edx, 5
0x00002df1      31ff           xor edi, edi
0x00002df3      4889c5         mov rbp, rax
0x00002df6      e8a5e7ffff     call sym.imp.dcgettext
0x00002dfb      4889c3         mov rbx, rax
0x00002dfe      e81de7ffff     call sym.imp.__errno_location
0x00002e03      8b30           mov esi, dword [rax]
0x00002e05      4889e9         mov rcx, rbp
0x00002e08      31c0           xor eax, eax
0x00002e0a      4889da         mov rdx, rbx
0x00002e0d      31ff           xor edi, edi
0x00002e0f      e85ce9ffff     call sym.imp.error
0x00002e14      31c0           xor eax, eax                            ; .//src:811
0x00002e16      eb84           jmp 0x2d9c
0x00002e18      b801000000     mov eax, 1                              ; .//src:832
0x00002e1d      e97affffff     jmp 0x2d9c
0x00002e22      4889e2         mov rdx, rsp                            ; ../coreutils-8.31/src/ad.c:465
0x00002e25      4489e6         mov esi, r12d
0x00002e28      bf01000000     mov edi, 1
0x00002e2d      e8dee8ffff     call sym.imp.__fxstat
0x00002e32      85c0           test eax, eax                           ; .//src:825
0x00002e34      7514           jne 0x2e4a
0x00002e36      8b442418       mov eax, dword [rsp + 0x18]
0x00002e3a      2500f00000     and eax, 0xf000
0x00002e3f      3d00800000     cmp eax, 0x8000
0x00002e44      0f8542ffffff   jne 0x2d8c
0x00002e4a      4c89e9         mov rcx, r13                            ; .//src:826
0x00002e4d      ba01000000     mov edx, 1
0x00002e52      4c89f6         mov rsi, r14
0x00002e55      4489e7         mov edi, r12d
0x00002e58      e873fcffff     call sym.elseek
0x00002e5d      e92affffff     jmp 0x2d8c
0x00002e62      e869e7ffff     call sym.imp.__stack_chk_fail           ; .//src:833
0x00002e67      660f1f840000.  nop word [rax + rax]
;-- head_bytes:
0x00002e70      4157           push r15                                ; .//src:775
0x00002e72      4156           push r14
0x00002e74      4155           push r13
0x00002e76      4154           push r12
0x00002e78      55             push rbp
0x00002e79      53             push rbx
0x00002e7a      4881ec182000.  sub rsp, 0x2018
0x00002e81      64488b042528.  mov rax, qword fs:[0x28]
0x00002e8a      488984240820.  mov qword [rsp + 0x2008], rax
0x00002e92      31c0           xor eax, eax
0x00002e94      4885d2         test rdx, rdx                           ; .//src:779
0x00002e97      0f8493000000   je 0x2f30
0x00002e9d      4989ff         mov r15, rdi
0x00002ea0      4189f6         mov r14d, esi
0x00002ea3      4889d5         mov rbp, rdx
0x00002ea6      41bc00200000   mov r12d, 0x2000                        ; .//src:777
0x00002eac      4989e5         mov r13, rsp
0x00002eaf      eb1c           jmp 0x2ecd
0x00002eb1      0f1f80000000.  nop dword [rax]
0x00002eb8      4885c0         test rax, rax                           ; .//src:790
0x00002ebb      7473           je 0x2f30
0x00002ebd      4889c6         mov rsi, rax
0x00002ec0      4c89ef         mov rdi, r13
0x00002ec3      e8c8fcffff     call sym.xwrite_stdout.part.6
0x00002ec8      4829dd         sub rbp, rbx                            ; .//src:779
0x00002ecb      7463           je 0x2f30
0x00002ecd      4939ec         cmp r12, rbp
0x00002ed0      4c89ee         mov rsi, r13                            ; .//src:784
0x00002ed3      4489f7         mov edi, r14d
0x00002ed6      4c0f47e5       cmova r12, rbp
0x00002eda      4c89e2         mov rdx, r12
0x00002edd      e83e270000     call sym.safe_read
0x00002ee2      4883f8ff       cmp rax, 0xffffffffffffffff             ; .//src:785
0x00002ee6      4889c3         mov rbx, rax                            ; .//src:784
0x00002ee9      75cd           jne 0x2eb8                              ; .//src:785
0x00002eeb      4c89fe         mov rsi, r15                            ; .//src:787
0x00002eee      bf04000000     mov edi, 4
0x00002ef3      e838240000     call sym.quotearg_style
0x00002ef8      488d35803900.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x00002eff      ba05000000     mov edx, 5
0x00002f04      31ff           xor edi, edi
0x00002f06      4889c5         mov rbp, rax
0x00002f09      e892e6ffff     call sym.imp.dcgettext
0x00002f0e      4889c3         mov rbx, rax
0x00002f11      e80ae6ffff     call sym.imp.__errno_location
0x00002f16      8b30           mov esi, dword [rax]
0x00002f18      4889e9         mov rcx, rbp
0x00002f1b      31c0           xor eax, eax
0x00002f1d      4889da         mov rdx, rbx
0x00002f20      31ff           xor edi, edi
0x00002f22      e849e8ffff     call sym.imp.error
0x00002f27      31c0           xor eax, eax                            ; .//src:788
0x00002f29      eb0a           jmp 0x2f35
0x00002f2b      0f1f440000     nop dword [rax + rax]
0x00002f30      b801000000     mov eax, 1                              ; .//src:795
0x00002f35      488b8c240820.  mov rcx, qword [rsp + 0x2008]           ; .//src:796
0x00002f3d      6448330c2528.  xor rcx, qword fs:[0x28]
0x00002f46      7512           jne 0x2f5a
0x00002f48      4881c4182000.  add rsp, 0x2018
0x00002f4f      5b             pop rbx
0x00002f50      5d             pop rbp
0x00002f51      415c           pop r12
0x00002f53      415d           pop r13
0x00002f55      415e           pop r14
0x00002f57      415f           pop r15
0x00002f59      c3             ret
0x00002f5a      e871e6ffff     call sym.imp.__stack_chk_fail
0x00002f5f      90             nop
;-- diagnose_copy_fd_failure:
0x00002f60      55             push rbp                                ; .//src:153
0x00002f61      53             push rbx
0x00002f62      4883ec08       sub rsp, 8
0x00002f66      83ff01         cmp edi, 1                              ; .//src:154
0x00002f69      744d           je 0x2fb8
0x00002f6b      83ff02         cmp edi, 2
0x00002f6e      7563           jne 0x2fd3
0x00002f70      4889f2         mov rdx, rsi                            ; .//src:160
0x00002f73      31ff           xor edi, edi
0x00002f75      be03000000     mov esi, 3
0x00002f7a      e8b1240000     call sym.quotearg_n_style_colon
0x00002f7f      488d350a3900.  lea rsi, str.s:_file_has_shrunk_too_much ; 0x6890 ; "%s: file has shrunk too much"
0x00002f86      4889c5         mov rbp, rax
0x00002f89      ba05000000     mov edx, 5
0x00002f8e      31ff           xor edi, edi
0x00002f90      e80be6ffff     call sym.imp.dcgettext
0x00002f95      4889c3         mov rbx, rax
0x00002f98      e883e5ffff     call sym.imp.__errno_location
0x00002f9d      8b30           mov esi, dword [rax]
0x00002f9f      4883c408       add rsp, 8                              ; .//src:165
0x00002fa3      4889e9         mov rcx, rbp                            ; .//src:160
0x00002fa6      4889da         mov rdx, rbx
0x00002fa9      31ff           xor edi, edi
0x00002fab      31c0           xor eax, eax
0x00002fad      5b             pop rbx                                 ; .//src:165
0x00002fae      5d             pop rbp
0x00002faf      e9bce7ffff     jmp sym.imp.error                       ; .//src:160
0x00002fb4      0f1f4000       nop dword [rax]
0x00002fb8      bf04000000     mov edi, 4                              ; .//src:157
0x00002fbd      e86e230000     call sym.quotearg_style
0x00002fc2      ba05000000     mov edx, 5
0x00002fc7      4889c5         mov rbp, rax
0x00002fca      488d35ae3800.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x00002fd1      ebbb           jmp 0x2f8e
0x00002fd3      e838e5ffff     call sym.imp.abort                      ; .//src:163
0x00002fd8      0f1f84000000.  nop dword [rax + rax]
;-- elide_tail_lines_seekable:
0x00002fe0      4157           push r15                                ; .//src:650
0x00002fe2      4889c8         mov rax, rcx
0x00002fe5      4156           push r14
0x00002fe7      4155           push r13
0x00002fe9      4154           push r12
0x00002feb      41bd00200000   mov r13d, 0x2000                        ; .//src:659
0x00002ff1      55             push rbp                                ; .//src:650
0x00002ff2      53             push rbx
0x00002ff3      4889d3         mov rbx, rdx
0x00002ff6      4c89c2         mov rdx, r8                             ; .//src:657
0x00002ff9      4189f6         mov r14d, esi                           ; .//src:650
0x00002ffc      4829c2         sub rdx, rax                            ; .//src:657
0x00002fff      4881ec382000.  sub rsp, 0x2038                         ; .//src:650
0x00003006      4889d0         mov rax, rdx                            ; .//src:657
0x00003009      48894c2410     mov qword [rsp + 0x10], rcx             ; .//src:650
0x0000300e      48897c2408     mov qword [rsp + 8], rdi
0x00003013      48c1f83f       sar rax, 0x3f                           ; .//src:657
0x00003017      48c1e833       shr rax, 0x33
0x0000301b      4801c2         add rdx, rax
0x0000301e      81e2ff1f0000   and edx, 0x1fff
0x00003024      64488b0c2528.  mov rcx, qword fs:[0x28]                ; .//src:650
0x0000302d      48898c242820.  mov qword [rsp + 0x2028], rcx
0x00003035      31c9           xor ecx, ecx
0x00003037      4829c2         sub rdx, rax                            ; .//src:659
0x0000303a      4889f9         mov rcx, rdi                            ; .//src:663
0x0000303d      4489f7         mov edi, r14d
0x00003040      4c0f45ea       cmovne r13, rdx                         ; .//src:659
0x00003044      31d2           xor edx, edx                            ; .//src:663
0x00003046      4d29e8         sub r8, r13                             ; .//src:662
0x00003049      4c89c6         mov rsi, r8                             ; .//src:663
0x0000304c      4d89c4         mov r12, r8                             ; .//src:662
0x0000304f      e87cfaffff     call sym.elseek                         ; .//src:663
0x00003054      4885c0         test rax, rax
0x00003057      0f88db000000   js 0x3138
0x0000305d      488d6c2420     lea rbp, [rsp + 0x20]                   ; .//src:665
0x00003062      4c89ea         mov rdx, r13
0x00003065      4489f7         mov edi, r14d
0x00003068      4889ee         mov rsi, rbp
0x0000306b      e8b0250000     call sym.safe_read
0x00003070      4883f8ff       cmp rax, 0xffffffffffffffff             ; .//src:666
0x00003074      4989c0         mov r8, rax                             ; .//src:665
0x00003077      0f8463010000   je 0x31e0                               ; .//src:666
0x0000307d      4885db         test rbx, rbx                           ; .//src:676
0x00003080      0f843a010000   je 0x31c0
0x00003086      4885c0         test rax, rax
0x00003089      0f8431010000   je 0x31c0
0x0000308f      0fb605547020.  movzx eax, byte [obj.line_end]          ; .//src:677 ; [0x20a0ea:1]=0
0x00003096      4989df         mov r15, rbx
0x00003099      423844041f     cmp byte [rsp + r8 + 0x1f], al
0x0000309e      0f95c0         setne al
0x000030a1      0fb6c0         movzx eax, al
0x000030a4      4929c7         sub r15, rax
0x000030a7      4d85c0         test r8, r8                             ; .//src:684
0x000030aa      0f84b8000000   je 0x3168
0x000030b0      440fbe2d3270.  movsx r13d, byte [obj.line_end]         ; .//src:691 ; [0x20a0ea:1]=0
0x000030b8      eb1f           jmp 0x30d9
0x000030ba      660f1f440000   nop word [rax + rax]
0x000030c0      4983e801       sub r8, 1                               ; .//src:687
0x000030c4      4d85ff         test r15, r15                           ; .//src:696
0x000030c7      498d47ff       lea rax, [r15 - 1]
0x000030cb      7433           je 0x3100
0x000030cd      4d85c0         test r8, r8                             ; .//src:684
0x000030d0      4989c7         mov r15, rax
0x000030d3      0f848f000000   je 0x3168
0x000030d9      4885db         test rbx, rbx                           ; .//src:686
0x000030dc      74e2           je 0x30c0
0x000030de      4c89c2         mov rdx, r8                             ; .//src:691
0x000030e1      4489ee         mov esi, r13d
0x000030e4      4889ef         mov rdi, rbp
0x000030e7      e894e6ffff     call sym.imp.memrchr
0x000030ec      4885c0         test rax, rax                           ; .//src:692
0x000030ef      7477           je 0x3168
0x000030f1      4829e8         sub rax, rbp                            ; .//src:694
0x000030f4      4d85ff         test r15, r15                           ; .//src:696
0x000030f7      4989c0         mov r8, rax                             ; .//src:694
0x000030fa      498d47ff       lea rax, [r15 - 1]                      ; .//src:696
0x000030fe      75cd           jne 0x30cd
0x00003100      4c3b642410     cmp r12, qword [rsp + 0x10]             ; .//src:701
0x00003105      0f8f1d010000   jg 0x3228
0x0000310b      4c89c3         mov rbx, r8                             ; .//src:182
0x0000310e      4883c301       add rbx, 1
0x00003112      0f85b8000000   jne 0x31d0
0x00003118      488b4c2408     mov rcx, qword [rsp + 8]                ; .//src:720
0x0000311d      498d341c       lea rsi, [r12 + rbx]
0x00003121      31d2           xor edx, edx
0x00003123      4489f7         mov edi, r14d
0x00003126      e8a5f9ffff     call sym.elseek
0x0000312b      48f7d0         not rax
0x0000312e      48c1e83f       shr rax, 0x3f
0x00003132      eb06           jmp 0x313a
0x00003134      0f1f4000       nop dword [rax]
0x00003138      31c0           xor eax, eax                            ; .//src:664
0x0000313a      488b8c242820.  mov rcx, qword [rsp + 0x2028]
0x00003142      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000314b      0f852a010000   jne 0x327b
0x00003151      4881c4382000.  add rsp, 0x2038
0x00003158      5b             pop rbx
0x00003159      5d             pop rbp
0x0000315a      415c           pop r12
0x0000315c      415d           pop r13
0x0000315e      415e           pop r14
0x00003160      415f           pop r15
0x00003162      c3             ret
0x00003163      0f1f440000     nop dword [rax + rax]
0x00003168      4c3b642410     cmp r12, qword [rsp + 0x10]
0x0000316d      7440           je 0x31af
0x0000316f      488b4c2408     mov rcx, qword [rsp + 8]
0x00003174      4981ec002000.  sub r12, 0x2000
0x0000317b      31d2           xor edx, edx
0x0000317d      4c89e6         mov rsi, r12
0x00003180      4489f7         mov edi, r14d
0x00003183      e848f9ffff     call sym.elseek
0x00003188      4885c0         test rax, rax
0x0000318b      78ab           js 0x3138
0x0000318d      ba00200000     mov edx, 0x2000
0x00003192      4889ee         mov rsi, rbp
0x00003195      4489f7         mov edi, r14d
0x00003198      e883240000     call sym.safe_read
0x0000319d      4883f8ff       cmp rax, 0xffffffffffffffff
0x000031a1      4989c0         mov r8, rax
0x000031a4      743a           je 0x31e0
0x000031a6      4885c0         test rax, rax
0x000031a9      0f85f8feffff   jne 0x30a7
0x000031af      b801000000     mov eax, 1
0x000031b4      eb84           jmp 0x313a
0x000031b6      662e0f1f8400.  nop word cs:[rax + rax]
0x000031c0      4989df         mov r15, rbx
0x000031c3      e9dffeffff     jmp 0x30a7
0x000031c8      0f1f84000000.  nop dword [rax + rax]
0x000031d0      4889de         mov rsi, rbx
0x000031d3      4889ef         mov rdi, rbp
0x000031d6      e8b5f9ffff     call sym.xwrite_stdout.part.6
0x000031db      e938ffffff     jmp 0x3118
0x000031e0      488b742408     mov rsi, qword [rsp + 8]
0x000031e5      bf04000000     mov edi, 4
0x000031ea      e841210000     call sym.quotearg_style
0x000031ef      488d35893600.  lea rsi, str.error_reading__s           ; 0x687f ; "error reading %s"
0x000031f6      ba05000000     mov edx, 5
0x000031fb      31ff           xor edi, edi
0x000031fd      4889c5         mov rbp, rax
0x00003200      e89be3ffff     call sym.imp.dcgettext
0x00003205      4889c3         mov rbx, rax
0x00003208      e813e3ffff     call sym.imp.__errno_location
0x0000320d      8b30           mov esi, dword [rax]
0x0000320f      4889e9         mov rcx, rbp
0x00003212      31c0           xor eax, eax
0x00003214      4889da         mov rdx, rbx
0x00003217      31ff           xor edi, edi
0x00003219      e852e5ffff     call sym.imp.error
0x0000321e      31c0           xor eax, eax
0x00003220      e915ffffff     jmp 0x313a
0x00003225      0f1f00         nop dword [rax]
0x00003228      488b5c2410     mov rbx, qword [rsp + 0x10]
0x0000322d      488b4c2408     mov rcx, qword [rsp + 8]
0x00003232      31d2           xor edx, edx
0x00003234      4489f7         mov edi, r14d
0x00003237      4c89442418     mov qword [rsp + 0x18], r8
0x0000323c      4889de         mov rsi, rbx
0x0000323f      e88cf8ffff     call sym.elseek
0x00003244      4885c0         test rax, rax
0x00003247      0f88ebfeffff   js 0x3138
0x0000324d      4c89e6         mov rsi, r12
0x00003250      4489f7         mov edi, r14d
0x00003253      4829de         sub rsi, rbx
0x00003256      e8b5f9ffff     call sym.copy_fd
0x0000325b      85c0           test eax, eax
0x0000325d      4c8b442418     mov r8, qword [rsp + 0x18]
0x00003262      0f84a3feffff   je 0x310b
0x00003268      488b742408     mov rsi, qword [rsp + 8]
0x0000326d      89c7           mov edi, eax
0x0000326f      e8ecfcffff     call sym.diagnose_copy_fd_failure
0x00003274      31c0           xor eax, eax
0x00003276      e9bffeffff     jmp 0x313a
0x0000327b      e850e3ffff     call sym.imp.__stack_chk_fail
;-- usage:
0x00003280      4155           push r13
0x00003282      4154           push r12
0x00003284      ba05000000     mov edx, 5
0x00003289      55             push rbp
0x0000328a      53             push rbx
0x0000328b      89fd           mov ebp, edi
0x0000328d      4881ec880000.  sub rsp, 0x88
0x00003294      488b1d656e20.  mov rbx, qword [obj.program_name]       ; [0x20a100:8]=0
0x0000329b      64488b042528.  mov rax, qword fs:[0x28]
0x000032a4      4889442478     mov qword [rsp + 0x78], rax
0x000032a9      31c0           xor eax, eax
0x000032ab      85ff           test edi, edi
0x000032ad      742e           je 0x32dd
0x000032af      488d35da3700.  lea rsi, str.Try___s___help__for_more_information. ; 0x6a90 ; "Try '%s --help' for more information.\n"
0x000032b6      31ff           xor edi, edi
0x000032b8      e8e3e2ffff     call sym.imp.dcgettext
0x000032bd      488b3d1c6e20.  mov rdi, qword [obj.stderr]             ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x000032c4      4889c2         mov rdx, rax
0x000032c7      4889d9         mov rcx, rbx
0x000032ca      be01000000     mov esi, 1
0x000032cf      31c0           xor eax, eax
0x000032d1      e80ae5ffff     call sym.imp.__fprintf_chk
0x000032d6      89ef           mov edi, ebp
0x000032d8      e8e3e4ffff     call sym.imp.exit
0x000032dd      488d35d43700.  lea rsi, str.Usage:__s__OPTION_...__FILE_... ; 0x6ab8 ; "Usage: %s [OPTION]... [FILE]...\n"
0x000032e4      31ff           xor edi, edi
0x000032e6      e8b5e2ffff     call sym.imp.dcgettext
0x000032eb      4889da         mov rdx, rbx
0x000032ee      4889c6         mov rsi, rax
0x000032f1      bf01000000     mov edi, 1
0x000032f6      31c0           xor eax, eax
0x000032f8      e863e4ffff     call sym.imp.__printf_chk
0x000032fd      488d35dc3700.  lea rsi, str.Print_the_first__d_lines_of_each_FILE_to_standard_output.__With_more_than_one_FILE__precede_each_with_a_header_giving_the_file_name. ; 0x6ae0 ; "Print the first %d lines of each FILE to standard output.\nWith more than one FILE, precede each with a header giving the file name.\n"
0x00003304      31ff           xor edi, edi
0x00003306      ba05000000     mov edx, 5
0x0000330b      e890e2ffff     call sym.imp.dcgettext
0x00003310      ba0a000000     mov edx, 0xa
0x00003315      4889c6         mov rsi, rax
0x00003318      bf01000000     mov edi, 1
0x0000331d      31c0           xor eax, eax
0x0000331f      e83ce4ffff     call sym.imp.__printf_chk
0x00003324      488b1d7d6d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000332b      488d35363800.  lea rsi, str.With_no_FILE__or_when_FILE_is____read_standard_input. ; 0x6b68 ; "\nWith no FILE, or when FILE is -, read standard input.\n"
0x00003332      ba05000000     mov edx, 5
0x00003337      31ff           xor edi, edi
0x00003339      e862e2ffff     call sym.imp.dcgettext
0x0000333e      4889de         mov rsi, rbx
0x00003341      4889c7         mov rdi, rax
0x00003344      e857e3ffff     call sym.imp.fputs_unlocked
0x00003349      488b1d586d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003350      488d35493800.  lea rsi, str.Mandatory_arguments_to_long_options_are_mandatory_for_short_options_too. ; 0x6ba0 ; "\nMandatory arguments to long options are mandatory for short options too.\n"
0x00003357      ba05000000     mov edx, 5
0x0000335c      31ff           xor edi, edi
0x0000335e      e83de2ffff     call sym.imp.dcgettext
0x00003363      4889de         mov rsi, rbx
0x00003366      4889c7         mov rdi, rax
0x00003369      e832e3ffff     call sym.imp.fputs_unlocked
0x0000336e      488d357b3800.  lea rsi, str.c____bytes____NUM_______print_the_first_NUM_bytes_of_each_file________________________________with_the_leading______print_all_but_the_last_______________________________NUM_bytes_of_each_file_____n____lines____NUM_______print_the_first_NUM_lines_instead_of_the_first__d________________________________with_the_leading______print_all_but_the_last_______________________________NUM_lines_of_each_file ; 0x6bf0 ; "  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\n                             with the leading '-', print all but the last\n                             NUM bytes of each file\n  -n, --lines=[-]NUM       print the first NUM lines instead of the first %d;\n                             with the leading '-', print all but the last\n                             NUM lines of each file\n"
0x00003375      31ff           xor edi, edi
0x00003377      ba05000000     mov edx, 5
0x0000337c      e81fe2ffff     call sym.imp.dcgettext
0x00003381      ba0a000000     mov edx, 0xa
0x00003386      4889c6         mov rsi, rax
0x00003389      bf01000000     mov edi, 1
0x0000338e      31c0           xor eax, eax
0x00003390      e8cbe3ffff     call sym.imp.__printf_chk
0x00003395      488b1d0c6d20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000339c      488d35dd3900.  lea rsi, str.q____quiet____silent____never_print_headers_giving_file_names_____v____verbose____________always_print_headers_giving_file_names ; 0x6d80 ; "  -q, --quiet, --silent    never print headers giving file names\n  -v, --verbose            always print headers giving file names\n"
0x000033a3      ba05000000     mov edx, 5
0x000033a8      31ff           xor edi, edi
0x000033aa      e8f1e1ffff     call sym.imp.dcgettext
0x000033af      4889de         mov rsi, rbx
0x000033b2      4889c7         mov rdi, rax
0x000033b5      e8e6e2ffff     call sym.imp.fputs_unlocked
0x000033ba      488b1de76c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000033c1      488d35403a00.  lea rsi, str.z____zero_terminated____line_delimiter_is_NUL__not_newline ; 0x6e08 ; "  -z, --zero-terminated    line delimiter is NUL, not newline\n"
0x000033c8      ba05000000     mov edx, 5
0x000033cd      31ff           xor edi, edi
0x000033cf      e8cce1ffff     call sym.imp.dcgettext
0x000033d4      4889de         mov rsi, rbx
0x000033d7      4889c7         mov rdi, rax
0x000033da      e8c1e2ffff     call sym.imp.fputs_unlocked
0x000033df      488b1dc26c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000033e6      488d355b3a00.  lea rsi, str.help_____display_this_help_and_exit ; 0x6e48 ; "      --help     display this help and exit\n"
0x000033ed      ba05000000     mov edx, 5
0x000033f2      31ff           xor edi, edi
0x000033f4      e8a7e1ffff     call sym.imp.dcgettext
0x000033f9      4889de         mov rsi, rbx
0x000033fc      4889c7         mov rdi, rax
0x000033ff      e89ce2ffff     call sym.imp.fputs_unlocked
0x00003404      488b1d9d6c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000340b      488d35663a00.  lea rsi, str.version__output_version_information_and_exit ; 0x6e78 ; "      --version  output version information and exit\n"
0x00003412      ba05000000     mov edx, 5
0x00003417      31ff           xor edi, edi
0x00003419      e882e1ffff     call sym.imp.dcgettext
0x0000341e      4889de         mov rsi, rbx
0x00003421      4889c7         mov rdi, rax
0x00003424      e877e2ffff     call sym.imp.fputs_unlocked
0x00003429      488b1d786c20.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00003430      488d35793a00.  lea rsi, str.NUM_may_have_a_multiplier_suffix:__b_512__kB_1000__K_1024__MB_1000_1000__M_1024_1024___GB_1000_1000_1000__G_1024_1024_1024__and_so_on_for_T__P__E__Z__Y.__Binary_prefixes_can_be_used__too:_KiB_K__MiB_M__and_so_on. ; 0x6eb0 ; "\nNUM may have a multiplier suffix:\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n"
0x00003437      ba05000000     mov edx, 5
0x0000343c      31ff           xor edi, edi
0x0000343e      e85de1ffff     call sym.imp.dcgettext
0x00003443      4889de         mov rsi, rbx
0x00003446      4889c7         mov rdi, rax
0x00003449      488d1d5d3400.  lea rbx, str.head                       ; 0x68ad ; "head"
0x00003450      e84be2ffff     call sym.imp.fputs_unlocked
0x00003455      488d05563400.  lea rax, [0x000068b2]                   ; "["
0x0000345c      488d0d903400.  lea rcx, str.sha256sum                  ; 0x68f3 ; "sha256sum"
0x00003463      48c744246000.  mov qword [rsp + 0x60], 0
0x0000346c      48c744246800.  mov qword [rsp + 0x68], 0
0x00003475      4889e2         mov rdx, rsp
0x00003478      48890424       mov qword [rsp], rax
0x0000347c      488d05313400.  lea rax, str.test_invocation            ; 0x68b4 ; "test invocation"
0x00003483      48894c2430     mov qword [rsp + 0x30], rcx
0x00003488      488d0d6e3400.  lea rcx, str.sha384sum                  ; 0x68fd ; "sha384sum"
0x0000348f      4889442408     mov qword [rsp + 8], rax
0x00003494      488d05913400.  lea rax, [0x0000692c]                   ; "coreutils"
0x0000349b      48894c2440     mov qword [rsp + 0x40], rcx
0x000034a0      488d0d603400.  lea rcx, str.sha512sum                  ; 0x6907 ; "sha512sum"
0x000034a7      4889442410     mov qword [rsp + 0x10], rax
0x000034ac      488d05113400.  lea rax, str.Multi_call_invocation      ; 0x68c4 ; "Multi-call invocation"
0x000034b3      48894c2450     mov qword [rsp + 0x50], rcx
0x000034b8      4889442418     mov qword [rsp + 0x18], rax
0x000034bd      488d05163400.  lea rax, str.sha224sum                  ; 0x68da ; "sha224sum"
0x000034c4      4889442420     mov qword [rsp + 0x20], rax
0x000034c9      488d05143400.  lea rax, str.sha2_utilities             ; 0x68e4 ; "sha2 utilities"
0x000034d0      4889442428     mov qword [rsp + 0x28], rax
0x000034d5      4889442438     mov qword [rsp + 0x38], rax
0x000034da      4889442448     mov qword [rsp + 0x48], rax
0x000034df      4889442458     mov qword [rsp + 0x58], rax
0x000034e4      0f1f4000       nop dword [rax]
0x000034e8      4883c210       add rdx, 0x10
0x000034ec      488b3a         mov rdi, qword [rdx]
0x000034ef      4885ff         test rdi, rdi
0x000034f2      7413           je 0x3507
0x000034f4      b905000000     mov ecx, 5
0x000034f9      4889de         mov rsi, rbx
0x000034fc      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000034fe      0f97c0         seta al
0x00003501      1c00           sbb al, 0
0x00003503      84c0           test al, al
0x00003505      75e1           jne 0x34e8
0x00003507      4c8b6208       mov r12, qword [rdx + 8]
0x0000350b      31ff           xor edi, edi
0x0000350d      ba05000000     mov edx, 5
0x00003512      488d35f83300.  lea rsi, str.s_online_help:___s         ; 0x6911 ; "\n%s online help: <%s>\n"
0x00003519      4d85e4         test r12, r12
0x0000351c      0f84c1000000   je 0x35e3
0x00003522      e879e0ffff     call sym.imp.dcgettext
0x00003527      488d0d5a3a00.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6f88 ; "https://www.gnu.org/software/coreutils/"
0x0000352e      488d15f33300.  lea rdx, str.GNU_coreutils              ; 0x6928 ; "GNU coreutils"
0x00003535      4889c6         mov rsi, rax
0x00003538      bf01000000     mov edi, 1
0x0000353d      31c0           xor eax, eax
0x0000353f      e81ce2ffff     call sym.imp.__printf_chk
0x00003544      31f6           xor esi, esi
0x00003546      bf05000000     mov edi, 5
0x0000354b      e800e2ffff     call sym.imp.setlocale
0x00003550      4885c0         test rax, rax
0x00003553      741c           je 0x3571
0x00003555      488d35da3300.  lea rsi, [0x00006936]                   ; "en_"
0x0000355c      ba03000000     mov edx, 3
0x00003561      4889c7         mov rdi, rax
0x00003564      e8c7dfffff     call sym.imp.strncmp
0x00003569      85c0           test eax, eax
0x0000356b      0f8507010000   jne 0x3678
0x00003571      488d35c23300.  lea rsi, str.Full_documentation___s_s   ; 0x693a ; "Full documentation <%s%s>\n"
0x00003578      31ff           xor edi, edi
0x0000357a      ba05000000     mov edx, 5
0x0000357f      e81ce0ffff     call sym.imp.dcgettext
0x00003584      488d0d223300.  lea rcx, str.head                       ; 0x68ad ; "head"
0x0000358b      488d15f63900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6f88 ; "https://www.gnu.org/software/coreutils/"
0x00003592      4889c6         mov rsi, rax
0x00003595      bf01000000     mov edi, 1
0x0000359a      31c0           xor eax, eax
0x0000359c      e8bfe1ffff     call sym.imp.__printf_chk
0x000035a1      4939dc         cmp r12, rbx
0x000035a4      488d0d233300.  lea rcx, [0x000068ce]                   ; " invocation"
0x000035ab      488d1d6f4000.  lea rbx, [0x00007621]
0x000035b2      480f44d9       cmove rbx, rcx
0x000035b6      488d353b3a00.  lea rsi, str.or_available_locally_via:_info___coreutils___s_s ; 0x6ff8 ; "or available locally via: info '(coreutils) %s%s'\n"
0x000035bd      31ff           xor edi, edi
0x000035bf      ba05000000     mov edx, 5
0x000035c4      e8d7dfffff     call sym.imp.dcgettext
0x000035c9      4889d9         mov rcx, rbx
0x000035cc      4889c6         mov rsi, rax
0x000035cf      4c89e2         mov rdx, r12
0x000035d2      bf01000000     mov edi, 1
0x000035d7      31c0           xor eax, eax
0x000035d9      e882e1ffff     call sym.imp.__printf_chk
0x000035de      e9f3fcffff     jmp 0x32d6
0x000035e3      e8b8dfffff     call sym.imp.dcgettext
0x000035e8      488d0d993900.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6f88 ; "https://www.gnu.org/software/coreutils/"
0x000035ef      488d15323300.  lea rdx, str.GNU_coreutils              ; 0x6928 ; "GNU coreutils"
0x000035f6      4889c6         mov rsi, rax
0x000035f9      bf01000000     mov edi, 1
0x000035fe      31c0           xor eax, eax
0x00003600      e85be1ffff     call sym.imp.__printf_chk
0x00003605      31f6           xor esi, esi
0x00003607      bf05000000     mov edi, 5
0x0000360c      e83fe1ffff     call sym.imp.setlocale
0x00003611      4885c0         test rax, rax
0x00003614      7418           je 0x362e
0x00003616      488d35193300.  lea rsi, [0x00006936]                   ; "en_"
0x0000361d      ba03000000     mov edx, 3
0x00003622      4889c7         mov rdi, rax
0x00003625      e806dfffff     call sym.imp.strncmp
0x0000362a      85c0           test eax, eax
0x0000362c      7543           jne 0x3671
0x0000362e      488d35053300.  lea rsi, str.Full_documentation___s_s   ; 0x693a ; "Full documentation <%s%s>\n"
0x00003635      ba05000000     mov edx, 5
0x0000363a      31ff           xor edi, edi
0x0000363c      4c8d256a3200.  lea r12, str.head                       ; 0x68ad ; "head"
0x00003643      488d1d843200.  lea rbx, [0x000068ce]                   ; " invocation"
0x0000364a      e851dfffff     call sym.imp.dcgettext
0x0000364f      488d0d573200.  lea rcx, str.head                       ; 0x68ad ; "head"
0x00003656      488d152b3900.  lea rdx, str.https:__www.gnu.org_software_coreutils ; 0x6f88 ; "https://www.gnu.org/software/coreutils/"
0x0000365d      4889c6         mov rsi, rax
0x00003660      bf01000000     mov edi, 1
0x00003665      31c0           xor eax, eax
0x00003667      e8f4e0ffff     call sym.imp.__printf_chk
0x0000366c      e945ffffff     jmp 0x35b6
0x00003671      4c8d25353200.  lea r12, str.head                       ; 0x68ad ; "head"
0x00003678      4c8b2d296a20.  mov r13, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x0000367f      488d352a3900.  lea rsi, str.Report_any_translation_bugs_to__https:__translationproject.org_team ; 0x6fb0 ; "Report any translation bugs to <https://translationproject.org/team/>\n"
0x00003686      31ff           xor edi, edi
0x00003688      ba05000000     mov edx, 5
0x0000368d      e80edfffff     call sym.imp.dcgettext
0x00003692      4c89ee         mov rsi, r13
0x00003695      4889c7         mov rdi, rax
0x00003698      e803e0ffff     call sym.imp.fputs_unlocked
0x0000369d      e9cffeffff     jmp 0x3571
0x000036a2      662e0f1f8400.  nop word cs:[rax + rax]
0x000036ac      0f1f4000       nop dword [rax]
;-- close_stdout_set_file_name:
0x000036b0      48893d416a20.  mov qword [obj.file_name], rdi          ; ../coreutils-8.31/lib/closeout.c:52 ; [0x20a0f8:8]=0
0x000036b7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:54
0x000036b8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout_set_ignore_EPIPE:
0x000036c0      40883d296a20.  mov byte [obj.ignore_EPIPE], dil        ; ../coreutils-8.31/lib/closeout.c:89 ; [0x20a0f0:1]=0
0x000036c7      c3             ret                                     ; ../coreutils-8.31/lib/closeout.c:91
0x000036c8      0f1f84000000.  nop dword [rax + rax]
;-- close_stdout:
0x000036d0      55             push rbp                                ; ../coreutils-8.31/lib/closeout.c:118
0x000036d1      53             push rbx
0x000036d2      4883ec08       sub rsp, 8
0x000036d6      488b3dcb6920.  mov rdi, qword [obj.stdout]             ; ../coreutils-8.31/lib/closeout.c:119 ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x000036dd      e82e2e0000     call sym.close_stream
0x000036e2      85c0           test eax, eax
0x000036e4      7416           je 0x36fc
0x000036e6      e835deffff     call sym.imp.__errno_location
0x000036eb      803dfe692000.  cmp byte [obj.ignore_EPIPE], 0          ; ../coreutils-8.31/lib/closeout.c:120 ; [0x20a0f0:1]=0
0x000036f2      4889c3         mov rbx, rax
0x000036f5      741c           je 0x3713
0x000036f7      833820         cmp dword [rax], 0x20
0x000036fa      7517           jne 0x3713
0x000036fc      488b3ddd6920.  mov rdi, qword [obj.stderr]             ; ../coreutils-8.31/lib/closeout.c:134 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003703      e8082e0000     call sym.close_stream
0x00003708      85c0           test eax, eax
0x0000370a      7546           jne 0x3752
0x0000370c      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/closeout.c:136
0x00003710      5b             pop rbx
0x00003711      5d             pop rbp
0x00003712      c3             ret
0x00003713      488d357b3900.  lea rsi, str.write_error                ; ../coreutils-8.31/lib/closeout.c:122 ; 0x7095 ; "write error"
0x0000371a      31ff           xor edi, edi
0x0000371c      ba05000000     mov edx, 5
0x00003721      e87adeffff     call sym.imp.dcgettext
0x00003726      488b3dcb6920.  mov rdi, qword [obj.file_name]          ; ../coreutils-8.31/lib/closeout.c:123 ; [0x20a0f8:8]=0
0x0000372d      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/closeout.c:122
0x00003730      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/closeout.c:123
0x00003733      7428           je 0x375d
0x00003735      e8c61c0000     call sym.quotearg_colon                 ; ../coreutils-8.31/lib/closeout.c:124
0x0000373a      8b33           mov esi, dword [rbx]
0x0000373c      488d15773200.  lea rdx, str.s:__s                      ; 0x69ba ; "%s: %s"
0x00003743      4889c1         mov rcx, rax
0x00003746      4989e8         mov r8, rbp
0x00003749      31ff           xor edi, edi
0x0000374b      31c0           xor eax, eax
0x0000374d      e81ee0ffff     call sym.imp.error
0x00003752      8b3dc8682000   mov edi, dword [obj.exit_failure]       ; ../coreutils-8.31/lib/closeout.c:135 ; [0x20a020:4]=1
0x00003758      e8e3ddffff     call sym.imp._exit
0x0000375d      8b33           mov esi, dword [rbx]                    ; ../coreutils-8.31/lib/closeout.c:127
0x0000375f      488d15583200.  lea rdx, [0x000069be]                   ; "%s"
0x00003766      4889c1         mov rcx, rax
0x00003769      31ff           xor edi, edi
0x0000376b      31c0           xor eax, eax
0x0000376d      e8fedfffff     call sym.imp.error
0x00003772      ebde           jmp 0x3752
0x00003774      662e0f1f8400.  nop word cs:[rax + rax]
0x0000377e      6690           nop
;-- full_read:
0x00003780      4155           push r13                                ; ../coreutils-8.31/lib/full-write.c:59
0x00003782      4154           push r12
0x00003784      55             push rbp
0x00003785      53             push rbx
0x00003786      4883ec08       sub rsp, 8
0x0000378a      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/full-write.c:63
0x0000378d      7462           je 0x37f1
0x0000378f      4189fd         mov r13d, edi
0x00003792      4889f5         mov rbp, rsi
0x00003795      4889d3         mov rbx, rdx
0x00003798      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x0000379b      eb13           jmp 0x37b0
0x0000379d      0f1f00         nop dword [rax]
0x000037a0      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/full-write.c:68
0x000037a3      7433           je 0x37d8
0x000037a5      4901c4         add r12, rax                            ; ../coreutils-8.31/lib/full-write.c:73
0x000037a8      4801c5         add rbp, rax                            ; ../coreutils-8.31/lib/full-write.c:74
0x000037ab      4829c3         sub rbx, rax                            ; ../coreutils-8.31/lib/full-write.c:63
0x000037ae      7414           je 0x37c4
0x000037b0      4889da         mov rdx, rbx                            ; ../coreutils-8.31/lib/full-write.c:65
0x000037b3      4889ee         mov rsi, rbp
0x000037b6      4489ef         mov edi, r13d
0x000037b9      e8621e0000     call sym.safe_read
0x000037be      4883f8ff       cmp rax, 0xffffffffffffffff             ; ../coreutils-8.31/lib/full-write.c:66
0x000037c2      75dc           jne 0x37a0
0x000037c4      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x000037c8      4c89e0         mov rax, r12
0x000037cb      5b             pop rbx
0x000037cc      5d             pop rbp
0x000037cd      415c           pop r12
0x000037cf      415d           pop r13
0x000037d1      c3             ret
0x000037d2      660f1f440000   nop word [rax + rax]
0x000037d8      e843ddffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/full-write.c:70
0x000037dd      c70000000000   mov dword [rax], 0
0x000037e3      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/full-write.c:79
0x000037e7      4c89e0         mov rax, r12
0x000037ea      5b             pop rbx
0x000037eb      5d             pop rbp
0x000037ec      415c           pop r12
0x000037ee      415d           pop r13
0x000037f0      c3             ret
0x000037f1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/full-write.c:60
0x000037f4      ebce           jmp 0x37c4                              ; ../coreutils-8.31/lib/full-write.c:78
0x000037f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- offtostr:
0x00003800      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/anytostr.c:37
0x00003803      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:38
0x00003807      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x0000380b      49b967666666.  movabs r9, 0x6666666666666667           ; ../coreutils-8.31/lib/anytostr.c:44 ; 'gfffffff'
0x00003815      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x0000381f      41b830000000   mov r8d, 0x30                           ; ../coreutils-8.31/lib/anytostr.c:44 ; '0'
0x00003825      783c           js 0x3863                               ; ../coreutils-8.31/lib/anytostr.c:41
0x00003827      660f1f840000.  nop word [rax + rax]
0x00003830      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:52
0x00003833      4883e901       sub rcx, 1
0x00003837      48f7e6         mul rsi
0x0000383a      48c1ea03       shr rdx, 3
0x0000383e      488d0492       lea rax, [rdx + rdx*4]
0x00003842      4801c0         add rax, rax
0x00003845      4829c7         sub rdi, rax
0x00003848      83c730         add edi, 0x30
0x0000384b      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x0000384e      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x00003851      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x00003854      75da           jne 0x3830
0x00003856      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x00003859      c3             ret
0x0000385a      660f1f440000   nop word [rax + rax]
0x00003860      4889f1         mov rcx, rsi
0x00003863      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/anytostr.c:44
0x00003866      488d71ff       lea rsi, [rcx - 1]
0x0000386a      49f7e9         imul r9
0x0000386d      4889f8         mov rax, rdi
0x00003870      48c1f83f       sar rax, 0x3f
0x00003874      48c1fa02       sar rdx, 2
0x00003878      4829c2         sub rdx, rax
0x0000387b      488d0492       lea rax, [rdx + rdx*4]
0x0000387f      418d0440       lea eax, [r8 + rax*2]
0x00003883      29f8           sub eax, edi
0x00003885      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:45
0x00003888      4889d7         mov rdi, rdx
0x0000388b      8841ff         mov byte [rcx - 1], al                  ; ../coreutils-8.31/lib/anytostr.c:44
0x0000388e      75d0           jne 0x3860                              ; ../coreutils-8.31/lib/anytostr.c:45
0x00003890      4883e902       sub rcx, 2                              ; ../coreutils-8.31/lib/anytostr.c:47
0x00003894      c646ff2d       mov byte [rsi - 1], 0x2d                ; '-'
                                                                       ; [0x2d:1]=0
0x00003898      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x0000389b      c3             ret
0x0000389c      0f1f4000       nop dword [rax]
;-- umaxtostr:
0x000038a0      488d4e14       lea rcx, [rsi + 0x14]                   ; ../coreutils-8.31/lib/anytostr.c:37
0x000038a4      c6461400       mov byte [rsi + 0x14], 0                ; ../coreutils-8.31/lib/anytostr.c:39
0x000038a8      48becdcccccc.  movabs rsi, 0xcccccccccccccccd          ; ../coreutils-8.31/lib/anytostr.c:52
0x000038b2      660f1f440000   nop word [rax + rax]
0x000038b8      4889f8         mov rax, rdi
0x000038bb      4883e901       sub rcx, 1
0x000038bf      48f7e6         mul rsi
0x000038c2      48c1ea03       shr rdx, 3
0x000038c6      488d0492       lea rax, [rdx + rdx*4]
0x000038ca      4801c0         add rax, rax
0x000038cd      4829c7         sub rdi, rax
0x000038d0      83c730         add edi, 0x30
0x000038d3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/anytostr.c:53
0x000038d6      408839         mov byte [rcx], dil                     ; ../coreutils-8.31/lib/anytostr.c:52
0x000038d9      4889d7         mov rdi, rdx                            ; ../coreutils-8.31/lib/anytostr.c:53
0x000038dc      75da           jne 0x38b8
0x000038de      4889c8         mov rax, rcx                            ; ../coreutils-8.31/lib/anytostr.c:57
0x000038e1      c3             ret
0x000038e2      662e0f1f8400.  nop word cs:[rax + rax]
0x000038ec      0f1f4000       nop dword [rax]
;-- set_program_name:
0x000038f0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/progname.c:40
0x000038f3      53             push rbx
0x000038f4      7477           je 0x396d                               ; ../coreutils-8.31/lib/progname.c:51
0x000038f6      be2f000000     mov esi, 0x2f                           ; ../coreutils-8.31/lib/progname.c:59 ; '/'
0x000038fb      4889fb         mov rbx, rdi
0x000038fe      e80dddffff     call sym.imp.strrchr
0x00003903      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/progname.c:60
0x00003906      7455           je 0x395d
0x00003908      4c8d4001       lea r8, [rax + 1]
0x0000390c      4c89c2         mov rdx, r8                             ; ../coreutils-8.31/lib/progname.c:61
0x0000390f      4829da         sub rdx, rbx
0x00003912      4883fa06       cmp rdx, 6
0x00003916      7e45           jle 0x395d
0x00003918      488d70fa       lea rsi, [rax - 6]
0x0000391c      488d3dbd3700.  lea rdi, str..libs                      ; 0x70e0 ; "/.libs/"
0x00003923      b907000000     mov ecx, 7
0x00003928      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x0000392a      0f97c2         seta dl
0x0000392d      80da00         sbb dl, 0
0x00003930      84d2           test dl, dl
0x00003932      7529           jne 0x395d
0x00003934      488d3dad3700.  lea rdi, [0x000070e8]                   ; ../coreutils-8.31/lib/progname.c:64 ; "lt-"
0x0000393b      b903000000     mov ecx, 3
0x00003940      4c89c6         mov rsi, r8
0x00003943      4c89c3         mov rbx, r8
0x00003946      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x00003948      0f97c2         seta dl
0x0000394b      80da00         sbb dl, 0
0x0000394e      84d2           test dl, dl
0x00003950      750b           jne 0x395d
0x00003952      488d5804       lea rbx, [rax + 4]                      ; ../coreutils-8.31/lib/progname.c:66
0x00003956      48891d436720.  mov qword [obj.__progname], rbx         ; ../coreutils-8.31/lib/progname.c:70 ; obj.program_invocation_short_name__GLIBC_2.2.5
                                                                       ; [0x20a0a0:8]=0
0x0000395d      48891d9c6720.  mov qword [obj.program_name], rbx       ; ../coreutils-8.31/lib/progname.c:84 ; [0x20a100:8]=0
0x00003964      48891d556720.  mov qword [obj.program_invocation_name], rbx ; ../coreutils-8.31/lib/progname.c:90 ; obj.__progname_full__GLIBC_2.2.5
                                                                       ; [0x20a0c0:8]=0
0x0000396b      5b             pop rbx                                 ; ../coreutils-8.31/lib/progname.c:92
0x0000396c      c3             ret
0x0000396d      488b0d6c6720.  mov rcx, qword [obj.stderr]             ; ../coreutils-8.31/lib/progname.c:54 ; obj.stderr__GLIBC_2.2.5
                                                                       ; [0x20a0e0:8]=0
0x00003974      488d3d2d3700.  lea rdi, str.A_NULL_argv_0__was_passed_through_an_exec_system_call. ; 0x70a8 ; "A NULL argv[0] was passed through an exec system call.\n"
0x0000397b      ba37000000     mov edx, 0x37                           ; '7'
0x00003980      be01000000     mov esi, 1
0x00003985      e846deffff     call sym.imp.fwrite
0x0000398a      e881dbffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/progname.c:56
0x0000398f      90             nop
;-- gettext_quote.part.1:
0x00003990      55             push rbp                                ; ../coreutils-8.31/lib/quotearg.c:207
0x00003991      53             push rbx
0x00003992      4889fd         mov rbp, rdi
0x00003995      89f3           mov ebx, esi
0x00003997      4883ec08       sub rsp, 8
0x0000399b      e8502c0000     call sym.locale_charset                 ; ../coreutils-8.31/lib/quotearg.c:233
0x000039a0      0fb610         movzx edx, byte [rax]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:162
0x000039a3      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000039a6      80fa55         cmp dl, 0x55
0x000039a9      7475           je 0x3a20
0x000039ab      80fa47         cmp dl, 0x47                            ; ../coreutils-8.31/lib/c-strcaseeq.h:19
0x000039ae      7420           je 0x39d0
0x000039b0      488d05443700.  lea rax, str.l______l                   ; 0x70fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039b7      488d153f3700.  lea rdx, [0x000070fd]                   ; ../coreutils-8.31/lib/c-strcaseeq.h:5 ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x000039be      83fb09         cmp ebx, 9
0x000039c1      480f45c2       cmovne rax, rdx
0x000039c5      4883c408       add rsp, 8
0x000039c9      5b             pop rbx                                 ; ../coreutils-8.31/lib/c-strcaseeq.h:-37
0x000039ca      5d             pop rbp
0x000039cb      c3             ret
0x000039cc      0f1f4000       nop dword [rax]
0x000039d0      0fb65001       movzx edx, byte [rax + 1]
0x000039d4      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x000039d7      80fa42         cmp dl, 0x42
0x000039da      75d4           jne 0x39b0
0x000039dc      80780231       cmp byte [rax + 2], 0x31
0x000039e0      75ce           jne 0x39b0
0x000039e2      80780338       cmp byte [rax + 3], 0x38
0x000039e6      75c8           jne 0x39b0
0x000039e8      80780430       cmp byte [rax + 4], 0x30
0x000039ec      75c2           jne 0x39b0
0x000039ee      80780533       cmp byte [rax + 5], 0x33
0x000039f2      75bc           jne 0x39b0
0x000039f4      80780630       cmp byte [rax + 6], 0x30
0x000039f8      75b6           jne 0x39b0
0x000039fa      80780700       cmp byte [rax + 7], 0
0x000039fe      75b0           jne 0x39b0
0x00003a00      807d0060       cmp byte [rbp], 0x60
0x00003a04      488d05e93600.  lea rax, [0x000070f4]
0x00003a0b      488d15e63600.  lea rdx, [0x000070f8]
0x00003a12      480f45c2       cmovne rax, rdx
0x00003a16      4883c408       add rsp, 8
0x00003a1a      5b             pop rbx
0x00003a1b      5d             pop rbp
0x00003a1c      c3             ret
0x00003a1d      0f1f00         nop dword [rax]
0x00003a20      0fb65001       movzx edx, byte [rax + 1]
0x00003a24      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a27      80fa54         cmp dl, 0x54
0x00003a2a      7584           jne 0x39b0
0x00003a2c      0fb65002       movzx edx, byte [rax + 2]
0x00003a30      83e2df         and edx, 0xffffffdf                     ; 4294967263
0x00003a33      80fa46         cmp dl, 0x46
0x00003a36      0f8574ffffff   jne 0x39b0
0x00003a3c      8078032d       cmp byte [rax + 3], 0x2d
0x00003a40      0f856affffff   jne 0x39b0
0x00003a46      80780438       cmp byte [rax + 4], 0x38
0x00003a4a      0f8560ffffff   jne 0x39b0
0x00003a50      80780500       cmp byte [rax + 5], 0
0x00003a54      0f8556ffffff   jne 0x39b0
0x00003a5a      807d0060       cmp byte [rbp], 0x60
0x00003a5e      488d05873600.  lea rax, [0x000070ec]                   ; "\u2018"
0x00003a65      488d15843600.  lea rdx, [0x000070f0]                   ; "\u2019"
0x00003a6c      480f45c2       cmovne rax, rdx
0x00003a70      4883c408       add rsp, 8
0x00003a74      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:141
0x00003a75      5d             pop rbp
0x00003a76      c3             ret
0x00003a77      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:133
;-- quotearg_buffer_restyled:
0x00003a80      4157           push r15
0x00003a82      4156           push r14
0x00003a84      4589c7         mov r15d, r8d
0x00003a87      4155           push r13
0x00003a89      4154           push r12
0x00003a8b      4989fe         mov r14, rdi
0x00003a8e      55             push rbp
0x00003a8f      53             push rbx
0x00003a90      4489cb         mov ebx, r9d
0x00003a93      4989f5         mov r13, rsi
0x00003a96      4889cd         mov rbp, rcx
0x00003a99      83e302         and ebx, 2
0x00003a9c      4881ecb80000.  sub rsp, 0xb8
0x00003aa3      488b8424f000.  mov rax, qword [rsp + 0xf0]
0x00003aab      4889542410     mov qword [rsp + 0x10], rdx
0x00003ab0      4489442408     mov dword [rsp + 8], r8d
0x00003ab5      44894c2478     mov dword [rsp + 0x78], r9d
0x00003aba      4889442420     mov qword [rsp + 0x20], rax
0x00003abf      488b8424f800.  mov rax, qword [rsp + 0xf8]
0x00003ac7      4889442468     mov qword [rsp + 0x68], rax             ; ../coreutils-8.31/lib/quotearg.c:140
0x00003acc      488b84240001.  mov rax, qword [rsp + 0x100]            ; ../coreutils-8.31/lib/quotearg.c:187
0x00003ad4      4889442460     mov qword [rsp + 0x60], rax
0x00003ad9      64488b042528.  mov rax, qword fs:[0x28]
0x00003ae2      48898424a800.  mov qword [rsp + 0xa8], rax
0x00003aea      31c0           xor eax, eax
0x00003aec      e8bfdaffff     call sym.imp.__ctype_get_mb_cur_max
0x00003af1      4183ff0a       cmp r15d, 0xa
0x00003af5      4889442458     mov qword [rsp + 0x58], rax
0x00003afa      0f87af110000   ja 0x4caf
0x00003b00      488d0d593600.  lea rcx, [0x00007160]                   ; "Z\xd7\xff\xff\xb3\xc9\xff\xff\x88\xd9\xff\xff\x94\xd7\xff\xff\x84\xd5\xff\xff\xe0\xd5\xff\xff5\xd6\xff\xffz\xd6\xff\xff\xb4\xd6\xff\xff\xb4\xd6\xff\xff\xb4\xd6\xff\xff\x04\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xffD\xcd\xff\xffL\xcc\xff\xff\f\xcc\xff\xff\xd4\xcd\xff\xff\xc4\xcd\xff\xff\xb4\xcd\xff\xff\xa4\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\xec\xcd\xff\xff\x94\xcd\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xffT\xcd\xff\xff\x84\xcd\xff\xff,\xcd\xff\xff\x84\xcd\xff\xff\xe7\xcb\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xff\x84\xcd\xff\xff\xb7\xcb\xff\xff\xec\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff\x84\xcd\xff\xff\\xcc\xff\xff,\xcd\xff\xff\x84\xcd\xff\xff,\xcd\xff\xff\x84\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff,\xcd\xff\xff\xe7\xca\xff\xff\x84\xcd\xff\xff\xe7\xca\xff\xffT\xcd\xff\xff\xd8\xcc\xff\xff\xe8\xcb\xff\xff\xe8\xcb\xff\xff\xe8\xcb\xff\xff\xe8\xcb\xff\xff\xe8\xcb\xff\xff\xe8\xcb\xff\xff\xc8\xcc\xff\xff\x18\xce\xff\xff"
0x00003b07      4489fa         mov edx, r15d
0x00003b0a      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003b0e      4801c8         add rax, rcx
0x00003b11      ffe0           jmp rax
0x00003b13      c644240e01     mov byte [rsp + 0xe], 1
0x00003b18      c644247c00     mov byte [rsp + 0x7c], 0
0x00003b1d      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:130
0x00003b20      48c744245000.  mov qword [rsp + 0x50], 0
0x00003b29      c644240f01     mov byte [rsp + 0xf], 1
0x00003b2e      c644240d00     mov byte [rsp + 0xd], 0
0x00003b33      488d05c33500.  lea rax, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00003b3a      48c744241801.  mov qword [rsp + 0x18], 1
0x00003b43      4531ff         xor r15d, r15d
0x00003b46      c74424080200.  mov dword [rsp + 8], 2
0x00003b4e      4889442448     mov qword [rsp + 0x48], rax
0x00003b53      4531db         xor r11d, r11d
0x00003b56      4889e8         mov rax, rbp
0x00003b59      4589e0         mov r8d, r12d
0x00003b5c      4c89dd         mov rbp, r11
0x00003b5f      4989c3         mov r11, rax
0x00003b62      660f1f440000   nop word [rax + rax]
0x00003b68      4939eb         cmp r11, rbp
0x00003b6b      410f95c4       setne r12b                              ; ../coreutils-8.31/lib/quotearg.c:150
0x00003b6f      4983fbff       cmp r11, 0xffffffffffffffff
0x00003b73      750d           jne 0x3b82
0x00003b75      488b442410     mov rax, qword [rsp + 0x10]
0x00003b7a      803c2800       cmp byte [rax + rbp], 0
0x00003b7e      410f95c4       setne r12b
0x00003b82      4584e4         test r12b, r12b
0x00003b85      0f8455060000   je 0x41e0
0x00003b8b      837c240802     cmp dword [rsp + 8], 2
0x00003b90      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00003b95      4c8d0c2f       lea r9, [rdi + rbp]
0x00003b99      0f95c0         setne al
0x00003b9c      2244240d       and al, byte [rsp + 0xd]
0x00003ba0      4189c2         mov r10d, eax
0x00003ba3      0f84a7000000   je 0x3c50
0x00003ba9      488b442418     mov rax, qword [rsp + 0x18]
0x00003bae      4885c0         test rax, rax
0x00003bb1      0f8429040000   je 0x3fe0
0x00003bb7      4983fbff       cmp r11, 0xffffffffffffffff
0x00003bbb      488d5c0500     lea rbx, [rbp + rax]
0x00003bc0      752e           jne 0x3bf0
0x00003bc2      4883f801       cmp rax, 1
0x00003bc6      7628           jbe 0x3bf0
0x00003bc8      4488442438     mov byte [rsp + 0x38], r8b
0x00003bcd      4488542430     mov byte [rsp + 0x30], r10b             ; ../coreutils-8.31/lib/quotearg.c:159
0x00003bd2      4c894c2428     mov qword [rsp + 0x28], r9
0x00003bd7      e8e4d9ffff     call sym.imp.strlen
0x00003bdc      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003be2      440fb6542430   movzx r10d, byte [rsp + 0x30]
0x00003be8      4989c3         mov r11, rax
0x00003beb      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00003bf0      4c39db         cmp rbx, r11
0x00003bf3      4488542428     mov byte [rsp + 0x28], r10b
0x00003bf8      0f87b2050000   ja 0x41b0
0x00003bfe      488b542418     mov rdx, qword [rsp + 0x18]
0x00003c03      488b742448     mov rsi, qword [rsp + 0x48]
0x00003c08      4c89cf         mov rdi, r9
0x00003c0b      4c895c2440     mov qword [rsp + 0x40], r11
0x00003c10      4488442438     mov byte [rsp + 0x38], r8b
0x00003c15      4c894c2430     mov qword [rsp + 0x30], r9
0x00003c1a      e871daffff     call sym.imp.memcmp
0x00003c1f      85c0           test eax, eax                           ; ../coreutils-8.31/lib/quotearg.c:166
0x00003c21      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00003c26      440fb6442438   movzx r8d, byte [rsp + 0x38]
0x00003c2c      4c8b5c2440     mov r11, qword [rsp + 0x40]
0x00003c31      0f8579050000   jne 0x41b0
0x00003c37      807c240f00     cmp byte [rsp + 0xf], 0
0x00003c3c      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003c42      0f857d0f0000   jne 0x4bc5
0x00003c48      0f1f84000000.  nop dword [rax + rax]
0x00003c50      410fb619       movzx ebx, byte [r9]                    ; ../coreutils-8.31/lib/quotearg.c:140
0x00003c54      80fb7e         cmp bl, 0x7e
0x00003c57      0f871b030000   ja 0x3f78
0x00003c5d      488d0d283500.  lea rcx, [0x0000718c]
0x00003c64      0fb6d3         movzx edx, bl
0x00003c67      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003c6b      4801c8         add rax, rcx
0x00003c6e      ffe0           jmp rax
0x00003c70      4531d2         xor r10d, r10d
0x00003c73      4983fb01       cmp r11, 1
0x00003c77      0f95c0         setne al
0x00003c7a      4983fbff       cmp r11, 0xffffffffffffffff
0x00003c7e      750c           jne 0x3c8c
0x00003c80      488b442410     mov rax, qword [rsp + 0x10]
0x00003c85      80780100       cmp byte [rax + 1], 0
0x00003c89      0f95c0         setne al
0x00003c8c      837c240802     cmp dword [rsp + 8], 2
0x00003c91      0f94c2         sete dl
0x00003c94      84c0           test al, al
0x00003c96      0f844c020000   je 0x3ee8
0x00003c9c      4531e4         xor r12d, r12d
0x00003c9f      31c0           xor eax, eax
0x00003ca1      0f1f80000000.  nop dword [rax]
0x00003ca8      807c240d01     cmp byte [rsp + 0xd], 1
0x00003cad      0f850f010000   jne 0x3dc2
0x00003cb3      84d2           test dl, dl
0x00003cb5      0f8507010000   jne 0x3dc2
0x00003cbb      488b742420     mov rsi, qword [rsp + 0x20]
0x00003cc0      4885f6         test rsi, rsi                           ; ../coreutils-8.31/lib/quotearg.c:337
0x00003cc3      7414           je 0x3cd9
0x00003cc5      89da           mov edx, ebx
0x00003cc7      c0ea05         shr dl, 5
0x00003cca      0fb6d2         movzx edx, dl
0x00003ccd      8b1496         mov edx, dword [rsi + rdx*4]
0x00003cd0      0fa3da         bt edx, ebx
0x00003cd3      0f824a010000   jb 0x3e23
0x00003cd9      4584d2         test r10b, r10b
0x00003cdc      0f8541010000   jne 0x3e23
0x00003ce2      83f001         xor eax, 1
0x00003ce5      4883c501       add rbp, 1                              ; ../coreutils-8.31/lib/quotearg.c:338
0x00003ce9      4421c0         and eax, r8d                            ; ../coreutils-8.31/lib/quotearg.c:341
0x00003cec      84c0           test al, al
0x00003cee      7420           je 0x3d10                               ; ../coreutils-8.31/lib/quotearg.c:338
0x00003cf0      4d39fd         cmp r13, r15
0x00003cf3      7605           jbe 0x3cfa
0x00003cf5      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003cfa      498d4701       lea rax, [r15 + 1]
0x00003cfe      4939c5         cmp r13, rax
0x00003d01      7606           jbe 0x3d09
0x00003d03      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003d09      4983c702       add r15, 2
0x00003d0d      4531c0         xor r8d, r8d
0x00003d10      4d39ef         cmp r15, r13                            ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d13      7304           jae 0x3d19                              ; ../coreutils-8.31/lib/quotearg.c:68
0x00003d15      43881c3e       mov byte [r14 + r15], bl
0x00003d19      0fb67c240e     movzx edi, byte [rsp + 0xe]
0x00003d1e      4983c701       add r15, 1
0x00003d22      b800000000     mov eax, 0
0x00003d27      4584e4         test r12b, r12b
0x00003d2a      0f44f8         cmove edi, eax
0x00003d2d      40887c240e     mov byte [rsp + 0xe], dil
0x00003d32      e931feffff     jmp 0x3b68
0x00003d37      660f1f840000.  nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:19
0x00003d40      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:18
0x00003d43      8b442408       mov eax, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:170
0x00003d47      83f802         cmp eax, 2
0x00003d4a      0f84b8050000   je 0x4308
0x00003d50      83f805         cmp eax, 5
0x00003d53      0f846f050000   je 0x42c8
0x00003d59      83f802         cmp eax, 2
0x00003d5c      bb3f000000     mov ebx, 0x3f                           ; '?'
0x00003d61      0f94c2         sete dl
0x00003d64      4531e4         xor r12d, r12d
0x00003d67      31c0           xor eax, eax
0x00003d69      e93affffff     jmp 0x3ca8
0x00003d6e      6690           nop
0x00003d70      4531d2         xor r10d, r10d
0x00003d73      837c240802     cmp dword [rsp + 8], 2                  ; ../coreutils-8.31/lib/quotearg.c:-10
0x00003d78      0f8402050000   je 0x4280
0x00003d7e      448864247c     mov byte [rsp + 0x7c], r12b             ; ../coreutils-8.31/lib/quotearg.c:-1
0x00003d83      31d2           xor edx, edx
0x00003d85      31c0           xor eax, eax
0x00003d87      bb27000000     mov ebx, 0x27                           ; '''
0x00003d8c      e917ffffff     jmp 0x3ca8
0x00003d91      0f1f80000000.  nop dword [rax]
0x00003d98      ba09000000     mov edx, 9
0x00003d9d      bb74000000     mov ebx, 0x74                           ; 't'
0x00003da2      837c240802     cmp dword [rsp + 8], 2
0x00003da7      0f94c0         sete al
0x00003daa      2244240f       and al, byte [rsp + 0xf]
0x00003dae      0f854a010000   jne 0x3efe
0x00003db4      807c240d00     cmp byte [rsp + 0xd], 0
0x00003db9      7565           jne 0x3e20
0x00003dbb      89d3           mov ebx, edx
0x00003dbd      4531e4         xor r12d, r12d
0x00003dc0      31c0           xor eax, eax
0x00003dc2      807c240f00     cmp byte [rsp + 0xf], 0
0x00003dc7      0f85eefeffff   jne 0x3cbb
0x00003dcd      e907ffffff     jmp 0x3cd9                              ; ../coreutils-8.31/lib/quotearg.c:210
0x00003dd2      660f1f440000   nop word [rax + rax]
0x00003dd8      ba08000000     mov edx, 8
0x00003ddd      bb62000000     mov ebx, 0x62                           ; 'b'
0x00003de2      ebd0           jmp 0x3db4
0x00003de4      0f1f4000       nop dword [rax]
0x00003de8      837c240802     cmp dword [rsp + 8], 2
0x00003ded      0f84cd030000   je 0x41c0
0x00003df3      807c240d00     cmp byte [rsp + 0xd], 0
0x00003df8      0f8412020000   je 0x4010
0x00003dfe      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e03      0f8407020000   je 0x4010
0x00003e09      48837c241800   cmp qword [rsp + 0x18], 0
0x00003e0f      0f85b6030000   jne 0x41cb
0x00003e15      bb5c000000     mov ebx, 0x5c                           ; '\'
0x00003e1a      660f1f440000   nop word [rax + rax]
0x00003e20      4531e4         xor r12d, r12d
0x00003e23      837c240802     cmp dword [rsp + 8], 2
0x00003e28      0f94c2         sete dl                                 ; ../coreutils-8.31/lib/quotearg.c:-61
0x00003e2b      807c240f00     cmp byte [rsp + 0xf], 0
0x00003e30      89d0           mov eax, edx
0x00003e32      0f8550080000   jne 0x4688
0x00003e38      4489c0         mov eax, r8d
0x00003e3b      83f001         xor eax, 1
0x00003e3e      20d0           and al, dl
0x00003e40      742f           je 0x3e71
0x00003e42      4d39fd         cmp r13, r15
0x00003e45      7605           jbe 0x3e4c
0x00003e47      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00003e4c      498d5701       lea rdx, [r15 + 1]
0x00003e50      4939d5         cmp r13, rdx
0x00003e53      7606           jbe 0x3e5b
0x00003e55      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x00003e5b      498d5702       lea rdx, [r15 + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-86
0x00003e5f      4939d5         cmp r13, rdx
0x00003e62      7606           jbe 0x3e6a
0x00003e64      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x00003e6a      4983c703       add r15, 3
0x00003e6e      4189c0         mov r8d, eax
0x00003e71      4d39fd         cmp r13, r15
0x00003e74      7605           jbe 0x3e7b
0x00003e76      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x00003e7b      4983c701       add r15, 1
0x00003e7f      4883c501       add rbp, 1
0x00003e83      e988feffff     jmp 0x3d10
0x00003e88      0f1f84000000.  nop dword [rax + rax]
0x00003e90      807c240d00     cmp byte [rsp + 0xd], 0
0x00003e95      0f85c8010000   jne 0x4063
0x00003e9b      31d2           xor edx, edx
0x00003e9d      f644247801     test byte [rsp + 0x78], 1
0x00003ea2      0f8413ffffff   je 0x3dbb
0x00003ea8      4883c501       add rbp, 1
0x00003eac      e9b7fcffff     jmp 0x3b68
0x00003eb1      0f1f80000000.  nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-533
0x00003eb8      837c240802     cmp dword [rsp + 8], 2
0x00003ebd      0f94c2         sete dl
0x00003ec0      31c0           xor eax, eax
0x00003ec2      e9e1fdffff     jmp 0x3ca8
0x00003ec7      660f1f840000.  nop word [rax + rax]
0x00003ed0      ba07000000     mov edx, 7
0x00003ed5      bb61000000     mov ebx, 0x61                           ; 'a'
0x00003eda      e9d5feffff     jmp 0x3db4
0x00003edf      90             nop
0x00003ee0      837c240802     cmp dword [rsp + 8], 2
0x00003ee5      0f94c2         sete dl
0x00003ee8      4885ed         test rbp, rbp
0x00003eeb      0f85abfdffff   jne 0x3c9c
0x00003ef1      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00003ef6      20d0           and al, dl
0x00003ef8      0f84aafdffff   je 0x3ca8
0x00003efe      4c89dd         mov rbp, r11
0x00003f01      c74424080200.  mov dword [rsp + 8], 2
0x00003f09      e9fb060000     jmp 0x4609
0x00003f0e      6690           nop
0x00003f10      837c240802     cmp dword [rsp + 8], 2
0x00003f15      0f94c2         sete dl
0x00003f18      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-788
0x00003f1b      ebd4           jmp 0x3ef1
0x00003f1d      0f1f00         nop dword [rax]
0x00003f20      837c240802     cmp dword [rsp + 8], 2
0x00003f25      bb20000000     mov ebx, 0x20                           ; "@"
0x00003f2a      0f94c2         sete dl
0x00003f2d      ebc2           jmp 0x3ef1
0x00003f2f      90             nop
0x00003f30      ba0d000000     mov edx, 0xd
0x00003f35      bb72000000     mov ebx, 0x72                           ; 'r'
0x00003f3a      e963feffff     jmp 0x3da2
0x00003f3f      90             nop
0x00003f40      ba0c000000     mov edx, 0xc
0x00003f45      bb66000000     mov ebx, 0x66                           ; 'f'
0x00003f4a      e965feffff     jmp 0x3db4
0x00003f4f      90             nop
0x00003f50      ba0b000000     mov edx, 0xb
0x00003f55      bb76000000     mov ebx, 0x76                           ; 'v'
0x00003f5a      e955feffff     jmp 0x3db4
0x00003f5f      90             nop
0x00003f60      ba0a000000     mov edx, 0xa
0x00003f65      bb6e000000     mov ebx, 0x6e                           ; ../coreutils-8.31/lib/quotearg.c:-781 ; 'n'
0x00003f6a      e933feffff     jmp 0x3da2
0x00003f6f      90             nop
0x00003f70      4531d2         xor r10d, r10d
0x00003f73      0f1f440000     nop dword [rax + rax]
0x00003f78      48837c245801   cmp qword [rsp + 0x58], 1
0x00003f7e      0f85a4030000   jne 0x4328
0x00003f84      4c895c2438     mov qword [rsp + 0x38], r11
0x00003f89      4488442430     mov byte [rsp + 0x30], r8b
0x00003f8e      4488542428     mov byte [rsp + 0x28], r10b
0x00003f93      e878d8ffff     call sym.imp.__ctype_b_loc
0x00003f98      488b08         mov rcx, qword [rax]
0x00003f9b      0fb6d3         movzx edx, bl
0x00003f9e      440fb6542428   movzx r10d, byte [rsp + 0x28]
0x00003fa4      440fb6442430   movzx r8d, byte [rsp + 0x30]
0x00003faa      4c8b5c2438     mov r11, qword [rsp + 0x38]
0x00003faf      bf01000000     mov edi, 1
0x00003fb4      0fb70451       movzx eax, word [rcx + rdx*2]
0x00003fb8      66250040       and ax, 0x4000                          ; "E1\u0480|$\r"
0x00003fbc      410f95c4       setne r12b
0x00003fc0      0f94c0         sete al
0x00003fc3      2244240d       and al, byte [rsp + 0xd]
0x00003fc7      84c0           test al, al
0x00003fc9      0f8592090000   jne 0x4961
0x00003fcf      837c240802     cmp dword [rsp + 8], 2
0x00003fd4      0f94c2         sete dl
0x00003fd7      e9ccfcffff     jmp 0x3ca8
0x00003fdc      0f1f4000       nop dword [rax]
0x00003fe0      410fb619       movzx ebx, byte [r9]
0x00003fe4      80fb7e         cmp bl, 0x7e
0x00003fe7      7787           ja 0x3f70
0x00003fe9      488d0d983300.  lea rcx, [0x00007388]
0x00003ff0      0fb6d3         movzx edx, bl
0x00003ff3      48630491       movsxd rax, dword [rcx + rdx*4]
0x00003ff7      4801c8         add rax, rcx
0x00003ffa      ffe0           jmp rax                                 ; ../coreutils-8.31/lib/quotearg.c:-814
0x00003ffc      0f1f4000       nop dword [rax]
0x00004000      4531d2         xor r10d, r10d
0x00004003      807c240d00     cmp byte [rsp + 0xd], 0
0x00004008      0f85f0fdffff   jne 0x3dfe
0x0000400e      6690           nop
0x00004010      ba5c000000     mov edx, 0x5c                           ; '\'
0x00004015      bb5c000000     mov ebx, 0x5c                           ; '\'
0x0000401a      e995fdffff     jmp 0x3db4
0x0000401f      90             nop
0x00004020      ba0c000000     mov edx, 0xc
0x00004025      4531d2         xor r10d, r10d
0x00004028      bb66000000     mov ebx, 0x66                           ; 'f'
0x0000402d      e982fdffff     jmp 0x3db4
0x00004032      660f1f440000   nop word [rax + rax]
0x00004038      ba0a000000     mov edx, 0xa
0x0000403d      4531d2         xor r10d, r10d
0x00004040      bb6e000000     mov ebx, 0x6e                           ; 'n'
0x00004045      e958fdffff     jmp 0x3da2
0x0000404a      660f1f440000   nop word [rax + rax]
0x00004050      bb61000000     mov ebx, 0x61                           ; 'a'
0x00004055      e9c6fdffff     jmp 0x3e20
0x0000405a      660f1f440000   nop word [rax + rax]
0x00004060      4531d2         xor r10d, r10d
0x00004063      837c240802     cmp dword [rsp + 8], 2
0x00004068      0f94c2         sete dl
0x0000406b      807c240f00     cmp byte [rsp + 0xf], 0
0x00004070      0f85940b0000   jne 0x4c0a
0x00004076      4489c0         mov eax, r8d
0x00004079      4c89f9         mov rcx, r15
0x0000407c      83f001         xor eax, 1
0x0000407f      20d0           and al, dl
0x00004081      742d           je 0x40b0
0x00004083      4d39fd         cmp r13, r15
0x00004086      7605           jbe 0x408d
0x00004088      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000408d      498d4f01       lea rcx, [r15 + 1]
0x00004091      4939cd         cmp r13, rcx
0x00004094      7606           jbe 0x409c
0x00004096      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x0000409c      498d4f02       lea rcx, [r15 + 2]
0x000040a0      4939cd         cmp r13, rcx
0x000040a3      0f8730060000   ja 0x46d9
0x000040a9      498d4f03       lea rcx, [r15 + 3]                      ; ../coreutils-8.31/lib/quotearg.c:-1318
0x000040ad      4189c0         mov r8d, eax
0x000040b0      4939cd         cmp r13, rcx
0x000040b3      7605           jbe 0x40ba
0x000040b5      41c6040e5c     mov byte [r14 + rcx], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000040ba      837c240802     cmp dword [rsp + 8], 2
0x000040bf      4c8d7901       lea r15, [rcx + 1]
0x000040c3      0f8400060000   je 0x46c9
0x000040c9      488d4501       lea rax, [rbp + 1]                      ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000040cd      4c39d8         cmp rax, r11
0x000040d0      7319           jae 0x40eb                              ; ../coreutils-8.31/lib/quotearg.c:-1306
0x000040d2      488b442410     mov rax, qword [rsp + 0x10]
0x000040d7      0fb6442801     movzx eax, byte [rax + rbp + 1]
0x000040dc      88442428       mov byte [rsp + 0x28], al
0x000040e0      83e830         sub eax, 0x30
0x000040e3      3c09           cmp al, 9
0x000040e5      0f862e080000   jbe 0x4919
0x000040eb      4489e0         mov eax, r12d
0x000040ee      bb30000000     mov ebx, 0x30                           ; '0'
0x000040f3      4531e4         xor r12d, r12d
0x000040f6      e9adfbffff     jmp 0x3ca8                              ; ../coreutils-8.31/lib/quotearg.c:-1416
0x000040fb      0f1f440000     nop dword [rax + rax]
0x00004100      837c240802     cmp dword [rsp + 8], 2
0x00004105      4589d4         mov r12d, r10d
0x00004108      0f94c2         sete dl
0x0000410b      4531d2         xor r10d, r10d
0x0000410e      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004110      e993fbffff     jmp 0x3ca8                              ; ../coreutils-8.31/lib/quotearg.c:-1473
0x00004115      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1415
0x00004118      837c240802     cmp dword [rsp + 8], 2
0x0000411d      0f94c2         sete dl
0x00004120      4531d2         xor r10d, r10d
0x00004123      e9c0fdffff     jmp 0x3ee8
0x00004128      0f1f84000000.  nop dword [rax + rax]
0x00004130      837c240802     cmp dword [rsp + 8], 2
0x00004135      0f94c2         sete dl
0x00004138      4531d2         xor r10d, r10d
0x0000413b      4531e4         xor r12d, r12d
0x0000413e      e9aefdffff     jmp 0x3ef1
0x00004143      0f1f440000     nop dword [rax + rax]
0x00004148      837c240802     cmp dword [rsp + 8], 2
0x0000414d      4589d4         mov r12d, r10d
0x00004150      bb20000000     mov ebx, 0x20                           ; "@"
0x00004155      0f94c2         sete dl
0x00004158      4531d2         xor r10d, r10d
0x0000415b      e991fdffff     jmp 0x3ef1
0x00004160      ba0d000000     mov edx, 0xd
0x00004165      4531d2         xor r10d, r10d                          ; ../coreutils-8.31/lib/quotearg.c:-1252
0x00004168      bb72000000     mov ebx, 0x72                           ; 'r'
0x0000416d      e930fcffff     jmp 0x3da2
0x00004172      660f1f440000   nop word [rax + rax]
0x00004178      bb76000000     mov ebx, 0x76                           ; 'v'
0x0000417d      e99efcffff     jmp 0x3e20
0x00004182      660f1f440000   nop word [rax + rax]
0x00004188      ba09000000     mov edx, 9
0x0000418d      4531d2         xor r10d, r10d
0x00004190      bb74000000     mov ebx, 0x74                           ; 't'
0x00004195      e908fcffff     jmp 0x3da2
0x0000419a      660f1f440000   nop word [rax + rax]                    ; ../coreutils-8.31/lib/quotearg.c:-1475
0x000041a0      bb62000000     mov ebx, 0x62                           ; 'b'
0x000041a5      e976fcffff     jmp 0x3e20
0x000041aa      660f1f440000   nop word [rax + rax]
0x000041b0      4531d2         xor r10d, r10d
0x000041b3      e998faffff     jmp 0x3c50
0x000041b8      0f1f84000000.  nop dword [rax + rax]
0x000041c0      807c240f00     cmp byte [rsp + 0xf], 0
0x000041c5      0f8565090000   jne 0x4b30
0x000041cb      4883c501       add rbp, 1
0x000041cf      4489c0         mov eax, r8d
0x000041d2      4531e4         xor r12d, r12d
0x000041d5      bb5c000000     mov ebx, 0x5c                           ; '\'
0x000041da      e90dfbffff     jmp 0x3cec
0x000041df      90             nop
0x000041e0      837c240802     cmp dword [rsp + 8], 2
0x000041e5      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x000041ea      4589c4         mov r12d, r8d
0x000041ed      4c89dd         mov rbp, r11
0x000041f0      0f94c2         sete dl
0x000041f3      89d8           mov eax, ebx
0x000041f5      4d85ff         test r15, r15
0x000041f8      0f94c1         sete cl
0x000041fb      21d0           and eax, edx
0x000041fd      20c8           and al, cl
0x000041ff      0f85610a0000   jne 0x4c66                              ; ../coreutils-8.31/lib/quotearg.c:-1245
0x00004205      89d8           mov eax, ebx
0x00004207      83f001         xor eax, 1
0x0000420a      20c2           and dl, al
0x0000420c      0f846a090000   je 0x4b7c
0x00004212      807c247c00     cmp byte [rsp + 0x7c], 0
0x00004217      0f845d090000   je 0x4b7a
0x0000421d      807c240e00     cmp byte [rsp + 0xe], 0                 ; ../coreutils-8.31/lib/quotearg.c:-1225
0x00004222      0f85f5090000   jne 0x4c1d
0x00004228      4d85ed         test r13, r13
0x0000422b      0f94c0         sete al
0x0000422e      48837c245000   cmp qword [rsp + 0x50], 0
0x00004234      0f95c2         setne dl
0x00004237      20d0           and al, dl
0x00004239      0f841d0a0000   je 0x4c5c
0x0000423f      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004244      488d1db22e00.  lea rbx, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000424b      41c60627       mov byte [r14], 0x27                    ; '''
                                                                       ; [0x27:1]=0
0x0000424f      c74424080200.  mov dword [rsp + 8], 2
0x00004257      41bf01000000   mov r15d, 1
0x0000425d      48c744241801.  mov qword [rsp + 0x18], 1
0x00004266      c644240f00     mov byte [rsp + 0xf], 0
0x0000426b      48895c2448     mov qword [rsp + 0x48], rbx
0x00004270      8844247c       mov byte [rsp + 0x7c], al
0x00004274      e9daf8ffff     jmp 0x3b53
0x00004279      0f1f80000000.  nop dword [rax]
0x00004280      807c240f00     cmp byte [rsp + 0xf], 0
0x00004285      0f85a5080000   jne 0x4b30
0x0000428b      4d85ed         test r13, r13
0x0000428e      0f84fc030000   je 0x4690                               ; ../coreutils-8.31/lib/quotearg.c:-1195
0x00004294      31d2           xor edx, edx
0x00004296      48837c245000   cmp qword [rsp + 0x50], 0
0x0000429c      0f85ee030000   jne 0x4690                              ; ../coreutils-8.31/lib/quotearg.c:-1474
0x000042a2      4c896c2450     mov qword [rsp + 0x50], r13
0x000042a7      4983c703       add r15, 3
0x000042ab      31c0           xor eax, eax
0x000042ad      448864247c     mov byte [rsp + 0x7c], r12b
0x000042b2      4531c0         xor r8d, r8d
0x000042b5      4989d5         mov r13, rdx
0x000042b8      bb27000000     mov ebx, 0x27                           ; '''
0x000042bd      e917faffff     jmp 0x3cd9
0x000042c2      660f1f440000   nop word [rax + rax]
0x000042c8      f644247804     test byte [rsp + 0x78], 4
0x000042cd      7421           je 0x42f0
0x000042cf      488d4d02       lea rcx, [rbp + 2]                      ; ../coreutils-8.31/lib/quotearg.c:-1189
0x000042d3      4c39d9         cmp rcx, r11
0x000042d6      7318           jae 0x42f0
0x000042d8      488b442410     mov rax, qword [rsp + 0x10]
0x000042dd      807c28013f     cmp byte [rax + rbp + 1], 0x3f
0x000042e2      0f848a070000   je 0x4a72
0x000042e8      0f1f84000000.  nop dword [rax + rax]
0x000042f0      31d2           xor edx, edx
0x000042f2      4531e4         xor r12d, r12d
0x000042f5      31c0           xor eax, eax
0x000042f7      bb3f000000     mov ebx, 0x3f                           ; '?'
0x000042fc      e9a7f9ffff     jmp 0x3ca8
0x00004301      0f1f80000000.  nop dword [rax]
0x00004308      807c240f00     cmp byte [rsp + 0xf], 0
0x0000430d      0f851d080000   jne 0x4b30
0x00004313      4531e4         xor r12d, r12d
0x00004316      31c0           xor eax, eax
0x00004318      bb3f000000     mov ebx, 0x3f                           ; '?'
0x0000431d      e9b7f9ffff     jmp 0x3cd9                              ; ../coreutils-8.31/lib/quotearg.c:-1187
0x00004322      660f1f440000   nop word [rax + rax]
0x00004328      488d8424a000.  lea rax, [rsp + 0xa0]
0x00004330      4983fbff       cmp r11, 0xffffffffffffffff
0x00004334      48c78424a000.  mov qword [rsp + 0xa0], 0
0x00004340      4889442428     mov qword [rsp + 0x28], rax             ; ../coreutils-8.31/lib/quotearg.c:-1179
0x00004345      752d           jne 0x4374
0x00004347      488b7c2410     mov rdi, qword [rsp + 0x10]
0x0000434c      4488442440     mov byte [rsp + 0x40], r8b
0x00004351      4488542438     mov byte [rsp + 0x38], r10b
0x00004356      4c894c2430     mov qword [rsp + 0x30], r9
0x0000435b      e860d2ffff     call sym.imp.strlen
0x00004360      440fb6442440   movzx r8d, byte [rsp + 0x40]
0x00004366      440fb6542438   movzx r10d, byte [rsp + 0x38]
0x0000436c      4989c3         mov r11, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1184
0x0000436f      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00004374      488d84249c00.  lea rax, [rsp + 0x9c]
0x0000437c      31c9           xor ecx, ecx
0x0000437e      885c247e       mov byte [rsp + 0x7e], bl
0x00004382      448844247d     mov byte [rsp + 0x7d], r8b
0x00004387      4889cb         mov rbx, rcx
0x0000438a      4c898c248800.  mov qword [rsp + 0x88], r9
0x00004392      4889442438     mov qword [rsp + 0x38], rax
0x00004397      448854247f     mov byte [rsp + 0x7f], r10b
0x0000439c      4c89bc248000.  mov qword [rsp + 0x80], r15
0x000043a4      4c89742440     mov qword [rsp + 0x40], r14
0x000043a9      4c896c2470     mov qword [rsp + 0x70], r13
0x000043ae      4c895c2430     mov qword [rsp + 0x30], r11
0x000043b3      488b442410     mov rax, qword [rsp + 0x10]
0x000043b8      4c8d741d00     lea r14, [rbp + rbx]
0x000043bd      488b542430     mov rdx, qword [rsp + 0x30]
0x000043c2      488b4c2428     mov rcx, qword [rsp + 0x28]
0x000043c7      488b7c2438     mov rdi, qword [rsp + 0x38]
0x000043cc      4e8d2c30       lea r13, [rax + r14]
0x000043d0      4c29f2         sub rdx, r14
0x000043d3      4c89ee         mov rsi, r13
0x000043d6      e8a5200000     call sym.rpl_mbrtowc
0x000043db      4885c0         test rax, rax
0x000043de      4989c7         mov r15, rax
0x000043e1      744e           je 0x4431
0x000043e3      4883f8ff       cmp rax, 0xffffffffffffffff
0x000043e7      0f8418060000   je 0x4a05
0x000043ed      4883f8fe       cmp rax, 0xfffffffffffffffe
0x000043f1      0f849a050000   je 0x4991
0x000043f7      837c240802     cmp dword [rsp + 8], 2
0x000043fc      0f94c0         sete al
0x000043ff      2244240f       and al, byte [rsp + 0xf]
0x00004403      0f8597010000   jne 0x45a0
0x00004409      8bbc249c0000.  mov edi, dword [rsp + 0x9c]
0x00004410      e8ebd3ffff     call sym.imp.iswprint
0x00004415      488b7c2428     mov rdi, qword [rsp + 0x28]
0x0000441a      85c0           test eax, eax
0x0000441c      b800000000     mov eax, 0
0x00004421      440f44e0       cmove r12d, eax
0x00004425      4c01fb         add rbx, r15
0x00004428      e8c3d3ffff     call sym.imp.mbsinit
0x0000442d      85c0           test eax, eax
0x0000442f      7482           je 0x43b3
0x00004431      4489e2         mov edx, r12d
0x00004434      4889df         mov rdi, rbx
0x00004437      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x0000443d      83f201         xor edx, 1
0x00004440      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004445      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x0000444b      2254240d       and dl, byte [rsp + 0xd]
0x0000444f      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004457      4c8b742440     mov r14, qword [rsp + 0x40]
0x0000445c      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004461      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004466      4883ff01       cmp rdi, 1
0x0000446a      0f86fb050000   jbe 0x4a6b
0x00004470      4889f9         mov rcx, rdi
0x00004473      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/quotearg.c:-1437
0x00004475      440fb64c240f   movzx r9d, byte [rsp + 0xf]
0x0000447b      4801e9         add rcx, rbp
0x0000447e      488b7c2410     mov rdi, qword [rsp + 0x10]
0x00004483      e9b6000000     jmp 0x453e
0x00004488      0f1f84000000.  nop dword [rax + rax]
0x00004490      837c240802     cmp dword [rsp + 8], 2
0x00004495      0f94c0         sete al
0x00004498      4584c9         test r9b, r9b
0x0000449b      0f85af040000   jne 0x4950
0x000044a1      4489c6         mov esi, r8d
0x000044a4      83f601         xor esi, 1
0x000044a7      4020f0         and al, sil
0x000044aa      742f           je 0x44db                               ; ../coreutils-8.31/lib/quotearg.c:-1601
0x000044ac      4d39fd         cmp r13, r15
0x000044af      7605           jbe 0x44b6
0x000044b1      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x000044b6      498d7701       lea rsi, [r15 + 1]
0x000044ba      4939f5         cmp r13, rsi
0x000044bd      7606           jbe 0x44c5                              ; ../coreutils-8.31/lib/quotearg.c:-1626
0x000044bf      43c6443e0124   mov byte [r14 + r15 + 1], 0x24          ; '$'
                                                                       ; [0x24:1]=0
0x000044c5      498d7702       lea rsi, [r15 + 2]
0x000044c9      4939f5         cmp r13, rsi
0x000044cc      7606           jbe 0x44d4
0x000044ce      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000044d4      4983c703       add r15, 3
0x000044d8      4189c0         mov r8d, eax
0x000044db      4d39fd         cmp r13, r15
0x000044de      7605           jbe 0x44e5
0x000044e0      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x000044e5      498d4701       lea rax, [r15 + 1]
0x000044e9      4939c5         cmp r13, rax
0x000044ec      760d           jbe 0x44fb
0x000044ee      89d8           mov eax, ebx
0x000044f0      c0e806         shr al, 6
0x000044f3      83c030         add eax, 0x30
0x000044f6      4388443e01     mov byte [r14 + r15 + 1], al
0x000044fb      498d4702       lea rax, [r15 + 2]
0x000044ff      4939c5         cmp r13, rax
0x00004502      7610           jbe 0x4514
0x00004504      89d8           mov eax, ebx
0x00004506      c0e803         shr al, 3
0x00004509      83e007         and eax, 7                              ; ../coreutils-8.31/lib/quotearg.c:-1622
0x0000450c      83c030         add eax, 0x30
0x0000450f      4388443e02     mov byte [r14 + r15 + 2], al
0x00004514      83e307         and ebx, 7
0x00004517      4883c501       add rbp, 1
0x0000451b      4983c703       add r15, 3
0x0000451f      83c330         add ebx, 0x30
0x00004522      4839cd         cmp rbp, rcx
0x00004525      0f83e5f7ffff   jae 0x3d10
0x0000452b      89d6           mov esi, edx
0x0000452d      4d39fd         cmp r13, r15
0x00004530      7604           jbe 0x4536
0x00004532      43881c3e       mov byte [r14 + r15], bl
0x00004536      0fb61c2f       movzx ebx, byte [rdi + rbp]             ; ../coreutils-8.31/lib/quotearg.c:-1735
0x0000453a      4983c701       add r15, 1
0x0000453e      84d2           test dl, dl
0x00004540      0f854affffff   jne 0x4490
0x00004546      89f0           mov eax, esi
0x00004548      83f001         xor eax, 1
0x0000454b      4421c0         and eax, r8d
0x0000454e      4584d2         test r10b, r10b
0x00004551      740e           je 0x4561
0x00004553      4d39fd         cmp r13, r15
0x00004556      7605           jbe 0x455d
0x00004558      43c6043e5c     mov byte [r14 + r15], 0x5c              ; '\'
                                                                       ; [0x5c:1]=0
0x0000455d      4983c701       add r15, 1
0x00004561      4883c501       add rbp, 1
0x00004565      4839cd         cmp rbp, rcx
0x00004568      0f837ef7ffff   jae 0x3cec
0x0000456e      84c0           test al, al
0x00004570      0f84f8030000   je 0x496e
0x00004576      4d39fd         cmp r13, r15
0x00004579      7605           jbe 0x4580
0x0000457b      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x00004580      498d4701       lea rax, [r15 + 1]
0x00004584      4939c5         cmp r13, rax
0x00004587      7606           jbe 0x458f
0x00004589      43c6443e0127   mov byte [r14 + r15 + 1], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x0000458f      4983c702       add r15, 2
0x00004593      4531d2         xor r10d, r10d
0x00004596      4531c0         xor r8d, r8d
0x00004599      eb92           jmp 0x452d
0x0000459b      0f1f440000     nop dword [rax + rax]
0x000045a0      4983ff01       cmp r15, 1
0x000045a4      0f845ffeffff   je 0x4409
0x000045aa      488b7c2410     mov rdi, qword [rsp + 0x10]
0x000045af      4a8d0c3f       lea rcx, [rdi + r15]
0x000045b3      4a8d543701     lea rdx, [rdi + r14 + 1]                ; ../coreutils-8.31/lib/quotearg.c:-1734
0x000045b8      4e8d0431       lea r8, [rcx + r14]                     ; ../coreutils-8.31/lib/quotearg.c:-1735
0x000045bc      eb0f           jmp 0x45cd
0x000045be      6690           nop
0x000045c0      4883c201       add rdx, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1742
0x000045c4      4939d0         cmp r8, rdx
0x000045c7      0f843cfeffff   je 0x4409
0x000045cd      0fb60a         movzx ecx, byte [rdx]                   ; ../coreutils-8.31/lib/quotearg.c:-1852
0x000045d0      83e95b         sub ecx, 0x5b
0x000045d3      80f921         cmp cl, 0x21
0x000045d6      77e8           ja 0x45c0                               ; ../coreutils-8.31/lib/quotearg.c:-1853
0x000045d8      be01000000     mov esi, 1
0x000045dd      48d3e6         shl rsi, cl
0x000045e0      4889f1         mov rcx, rsi
0x000045e3      48be2b000000.  movabs rsi, 0x20000002b                 ; '+' ; 8589934635
0x000045ed      4885f1         test rcx, rsi
0x000045f0      74ce           je 0x45c0
0x000045f2      4c8b742440     mov r14, qword [rsp + 0x40]
0x000045f7      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000045fc      488b6c2430     mov rbp, qword [rsp + 0x30]
0x00004601      c74424080200.  mov dword [rsp + 8], 2
0x00004609      807c240d00     cmp byte [rsp + 0xd], 0
0x0000460e      7410           je 0x4620
0x00004610      84c0           test al, al                             ; ../coreutils-8.31/lib/quotearg.c:-1912
0x00004612      b804000000     mov eax, 4
0x00004617      0f44442408     cmove eax, dword [rsp + 8]
0x0000461c      89442408       mov dword [rsp + 8], eax
0x00004620      4883ec08       sub rsp, 8
0x00004624      4889e9         mov rcx, rbp
0x00004627      4c89ee         mov rsi, r13
0x0000462a      ff742468       push qword [rsp + 0x68]
0x0000462e      ff742478       push qword [rsp + 0x78]
0x00004632      4c89f7         mov rdi, r14
0x00004635      6a00           push 0
0x00004637      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x0000463f      448b442428     mov r8d, dword [rsp + 0x28]
0x00004644      488b542430     mov rdx, qword [rsp + 0x30]
0x00004649      4183e1fd       and r9d, 0xfffffffd                     ; 4294967293
0x0000464d      e82ef4ffff     call sym.quotearg_buffer_restyled
0x00004652      4883c420       add rsp, 0x20
0x00004656      4989c7         mov r15, rax
0x00004659      488b9c24a800.  mov rbx, qword [rsp + 0xa8]
0x00004661      6448331c2528.  xor rbx, qword fs:[0x28]
0x0000466a      4c89f8         mov rax, r15
0x0000466d      0f8500060000   jne 0x4c73
0x00004673      4881c4b80000.  add rsp, 0xb8
0x0000467a      5b             pop rbx
0x0000467b      5d             pop rbp
0x0000467c      415c           pop r12
0x0000467e      415d           pop r13
0x00004680      415e           pop r14
0x00004682      415f           pop r15                                 ; ../coreutils-8.31/lib/quotearg.c:-2071
0x00004684      c3             ret
0x00004685      0f1f00         nop dword [rax]
0x00004688      4c89dd         mov rbp, r11
0x0000468b      e979ffffff     jmp 0x4609
0x00004690      4d39fd         cmp r13, r15
0x00004693      7605           jbe 0x469a
0x00004695      43c6043e27     mov byte [r14 + r15], 0x27              ; '''
                                                                       ; [0x27:1]=0
0x0000469a      498d4701       lea rax, [r15 + 1]
0x0000469e      4939c5         cmp r13, rax
0x000046a1      7606           jbe 0x46a9
0x000046a3      43c6443e015c   mov byte [r14 + r15 + 1], 0x5c          ; '\'
                                                                       ; [0x5c:1]=0
0x000046a9      498d4702       lea rax, [r15 + 2]
0x000046ad      4939c5         cmp r13, rax
0x000046b0      0f86ec050000   jbe 0x4ca2
0x000046b6      4c89ea         mov rdx, r13
0x000046b9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046bf      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x000046c4      e9d9fbffff     jmp 0x42a2
0x000046c9      4489e0         mov eax, r12d
0x000046cc      bb30000000     mov ebx, 0x30                           ; ../coreutils-8.31/lib/quotearg.c:-2239 ; '0'
0x000046d1      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2241
0x000046d4      e900f6ffff     jmp 0x3cd9                              ; ../coreutils-8.31/lib/quotearg.c:-2240
0x000046d9      43c6443e0227   mov byte [r14 + r15 + 2], 0x27          ; '''
                                                                       ; [0x27:1]=0
0x000046df      e9c5f9ffff     jmp 0x40a9
0x000046e4      85db           test ebx, ebx
0x000046e6      0f8527f4ffff   jne 0x3b13
0x000046ec      c644240d01     mov byte [rsp + 0xd], 1
0x000046f1      4d85ed         test r13, r13
0x000046f4      0f8590050000   jne 0x4c8a
0x000046fa      488d05fc2900.  lea rax, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004701      48c744245000.  mov qword [rsp + 0x50], 0
0x0000470a      c644240e01     mov byte [rsp + 0xe], 1
0x0000470f      c644247c00     mov byte [rsp + 0x7c], 0
0x00004714      4531e4         xor r12d, r12d
0x00004717      c644240f00     mov byte [rsp + 0xf], 0
0x0000471c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004725      4889442448     mov qword [rsp + 0x48], rax
0x0000472a      41bf01000000   mov r15d, 1
0x00004730      c74424080200.  mov dword [rsp + 8], 2
0x00004738      e916f4ffff     jmp 0x3b53                              ; ../coreutils-8.31/lib/quotearg.c:-1868
0x0000473d      0f1f00         nop dword [rax]
0x00004740      85db           test ebx, ebx
0x00004742      0f85f5030000   jne 0x4b3d
0x00004748      4d85ed         test r13, r13
0x0000474b      0f8425020000   je 0x4976
0x00004751      41c60622       mov byte [r14], 0x22                    ; '"'
                                                                       ; [0x22:1]=0
0x00004755      c644240e01     mov byte [rsp + 0xe], 1
0x0000475a      4531e4         xor r12d, r12d
0x0000475d      c644247c00     mov byte [rsp + 0x7c], 0
0x00004762      48c744245000.  mov qword [rsp + 0x50], 0
0x0000476b      488d05892900.  lea rax, str.l______l                   ; 0x70fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004772      c644240f00     mov byte [rsp + 0xf], 0
0x00004777      c644240d01     mov byte [rsp + 0xd], 1
0x0000477c      48c744241801.  mov qword [rsp + 0x18], 1
0x00004785      41bf01000000   mov r15d, 1
0x0000478b      4889442448     mov qword [rsp + 0x48], rax
0x00004790      e9bef3ffff     jmp 0x3b53
0x00004795      488d055f2900.  lea rax, str.l______l                   ; 0x70fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000479c      c644240e01     mov byte [rsp + 0xe], 1
0x000047a1      c644247c00     mov byte [rsp + 0x7c], 0
0x000047a6      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2145
0x000047a9      48c744245000.  mov qword [rsp + 0x50], 0
0x000047b2      c644240f01     mov byte [rsp + 0xf], 1
0x000047b7      c644240d01     mov byte [rsp + 0xd], 1
0x000047bc      48c744241801.  mov qword [rsp + 0x18], 1
0x000047c5      4531ff         xor r15d, r15d
0x000047c8      4889442448     mov qword [rsp + 0x48], rax             ; ../coreutils-8.31/lib/quotearg.c:-2164
0x000047cd      c74424080500.  mov dword [rsp + 8], 5
0x000047d5      e979f3ffff     jmp 0x3b53
0x000047da      c644240e01     mov byte [rsp + 0xe], 1
0x000047df      c644247c00     mov byte [rsp + 0x7c], 0
0x000047e4      4531e4         xor r12d, r12d
0x000047e7      48c744245000.  mov qword [rsp + 0x50], 0
0x000047f0      c644240f00     mov byte [rsp + 0xf], 0                 ; ../coreutils-8.31/lib/quotearg.c:-2161
0x000047f5      4531ff         xor r15d, r15d                          ; ../coreutils-8.31/lib/quotearg.c:-2235
0x000047f8      c644240d01     mov byte [rsp + 0xd], 1
0x000047fd      48c744241800.  mov qword [rsp + 0x18], 0
0x00004806      48c744244800.  mov qword [rsp + 0x48], 0
0x0000480f      e93ff3ffff     jmp 0x3b53
0x00004814      837c24080a     cmp dword [rsp + 8], 0xa
0x00004819      7456           je 0x4871
0x0000481b      488d35dd2800.  lea rsi, [0x000070ff]                   ; ../coreutils-8.31/lib/quotearg.c:-2352 ; "`"
0x00004822      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-2405
0x00004824      ba05000000     mov edx, 5
0x00004829      e872cdffff     call sym.imp.dcgettext
0x0000482e      4889c1         mov rcx, rax
0x00004831      4889442468     mov qword [rsp + 0x68], rax
0x00004836      488d05c22800.  lea rax, [0x000070ff]                   ; "`"
0x0000483d      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-2353
0x00004840      0f8498030000   je 0x4bde
0x00004846      488d35b02800.  lea rsi, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x0000484d      31ff           xor edi, edi
0x0000484f      ba05000000     mov edx, 5
0x00004854      e847cdffff     call sym.imp.dcgettext
0x00004859      4889c1         mov rcx, rax
0x0000485c      4889442460     mov qword [rsp + 0x60], rax
0x00004861      488d05952800.  lea rax, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004868      4839c1         cmp rcx, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1922
0x0000486b      0f8483030000   je 0x4bf4
0x00004871      4531ff         xor r15d, r15d
0x00004874      85db           test ebx, ebx
0x00004876      0f84c1010000   je 0x4a3d
0x0000487c      85db           test ebx, ebx
0x0000487e      488b5c2460     mov rbx, qword [rsp + 0x60]
0x00004883      0f9544240f     setne byte [rsp + 0xf]
0x00004888      4531e4         xor r12d, r12d
0x0000488b      4889df         mov rdi, rbx
0x0000488e      e82dcdffff     call sym.imp.strlen
0x00004893      48895c2448     mov qword [rsp + 0x48], rbx
0x00004898      4889442418     mov qword [rsp + 0x18], rax
0x0000489d      c644240e01     mov byte [rsp + 0xe], 1
0x000048a2      c644247c00     mov byte [rsp + 0x7c], 0
0x000048a7      48c744245000.  mov qword [rsp + 0x50], 0
0x000048b0      c644240d01     mov byte [rsp + 0xd], 1
0x000048b5      e999f2ffff     jmp 0x3b53
0x000048ba      c644240e01     mov byte [rsp + 0xe], 1
0x000048bf      c644247c00     mov byte [rsp + 0x7c], 0
0x000048c4      4531e4         xor r12d, r12d
0x000048c7      48c744245000.  mov qword [rsp + 0x50], 0
0x000048d0      c644240f00     mov byte [rsp + 0xf], 0
0x000048d5      4531ff         xor r15d, r15d
0x000048d8      c644240d00     mov byte [rsp + 0xd], 0
0x000048dd      48c744241800.  mov qword [rsp + 0x18], 0
0x000048e6      48c744244800.  mov qword [rsp + 0x48], 0
0x000048ef      e95ff2ffff     jmp 0x3b53
0x000048f4      c644240e01     mov byte [rsp + 0xe], 1
0x000048f9      c644247c00     mov byte [rsp + 0x7c], 0
0x000048fe      4531e4         xor r12d, r12d
0x00004901      48c744245000.  mov qword [rsp + 0x50], 0
0x0000490a      c644240f01     mov byte [rsp + 0xf], 1
0x0000490f      c644240d01     mov byte [rsp + 0xd], 1
0x00004914      e91af2ffff     jmp 0x3b33
0x00004919      4d39fd         cmp r13, r15
0x0000491c      7605           jbe 0x4923
0x0000491e      43c6043e30     mov byte [r14 + r15], 0x30              ; '0'
                                                                       ; [0x30:1]=0
0x00004923      488d4102       lea rax, [rcx + 2]
0x00004927      4939c5         cmp r13, rax
0x0000492a      7606           jbe 0x4932
0x0000492c      41c6440e0230   mov byte [r14 + rcx + 2], 0x30          ; '0'
                                                                       ; [0x30:1]=0
0x00004932      4489e0         mov eax, r12d
0x00004935      4c8d7903       lea r15, [rcx + 3]
0x00004939      4531e4         xor r12d, r12d
0x0000493c      bb30000000     mov ebx, 0x30                           ; '0'
0x00004941      e962f3ffff     jmp 0x3ca8
0x00004946      662e0f1f8400.  nop word cs:[rax + rax]
0x00004950      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004955      4c89dd         mov rbp, r11
0x00004958      885c240d       mov byte [rsp + 0xd], bl
0x0000495c      e9a8fcffff     jmp 0x4609
0x00004961      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004966      4531e4         xor r12d, r12d
0x00004969      e902fbffff     jmp 0x4470
0x0000496e      4531d2         xor r10d, r10d
0x00004971      e9b7fbffff     jmp 0x452d
0x00004976      48c744245000.  mov qword [rsp + 0x50], 0
0x0000497f      c644240e01     mov byte [rsp + 0xe], 1
0x00004984      4531e4         xor r12d, r12d
0x00004987      c644247c00     mov byte [rsp + 0x7c], 0
0x0000498c      e9dafdffff     jmp 0x476b
0x00004991      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004996      4c89f6         mov rsi, r14
0x00004999      4c89e9         mov rcx, r13
0x0000499c      4889d8         mov rax, rbx
0x0000499f      4889df         mov rdi, rbx
0x000049a2      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x000049a8      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x000049ad      4c8b8c248800.  mov r9, qword [rsp + 0x88]
0x000049b5      4c39de         cmp rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1799
0x000049b8      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x000049be      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x000049c6      4c8b742440     mov r14, qword [rsp + 0x40]
0x000049cb      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x000049d0      7326           jae 0x49f8
0x000049d2      803900         cmp byte [rcx], 0                       ; ../coreutils-8.31/lib/quotearg.c:-1794
0x000049d5      7510           jne 0x49e7
0x000049d7      eb1f           jmp 0x49f8
0x000049d9      0f1f80000000.  nop dword [rax]
0x000049e0      41803c0100     cmp byte [r9 + rax], 0
0x000049e5      740e           je 0x49f5
0x000049e7      4883c001       add rax, 1
0x000049eb      488d540500     lea rdx, [rbp + rax]
0x000049f0      4939d3         cmp r11, rdx
0x000049f3      77eb           ja 0x49e0
0x000049f5      4889c7         mov rdi, rax
0x000049f8      0fb654240d     movzx edx, byte [rsp + 0xd]
0x000049fd      4531e4         xor r12d, r12d
0x00004a00      e961faffff     jmp 0x4466
0x00004a05      4889df         mov rdi, rbx
0x00004a08      440fb644247d   movzx r8d, byte [rsp + 0x7d]
0x00004a0e      0fb65c247e     movzx ebx, byte [rsp + 0x7e]
0x00004a13      440fb654247f   movzx r10d, byte [rsp + 0x7f]
0x00004a19      4c8bbc248000.  mov r15, qword [rsp + 0x80]
0x00004a21      4531e4         xor r12d, r12d
0x00004a24      4c8b742440     mov r14, qword [rsp + 0x40]
0x00004a29      4c8b6c2470     mov r13, qword [rsp + 0x70]
0x00004a2e      4c8b5c2430     mov r11, qword [rsp + 0x30]
0x00004a33      0fb654240d     movzx edx, byte [rsp + 0xd]
0x00004a38      e929faffff     jmp 0x4466
0x00004a3d      488b542468     mov rdx, qword [rsp + 0x68]
0x00004a42      0fb602         movzx eax, byte [rdx]
0x00004a45      84c0           test al, al
0x00004a47      0f842ffeffff   je 0x487c
0x00004a4d      0f1f00         nop dword [rax]
0x00004a50      4d39fd         cmp r13, r15
0x00004a53      7604           jbe 0x4a59
0x00004a55      4388043e       mov byte [r14 + r15], al                ; ../coreutils-8.31/lib/quotearg.c:-1771
0x00004a59      4983c701       add r15, 1                              ; ../coreutils-8.31/lib/quotearg.c:-1775
0x00004a5d      420fb6043a     movzx eax, byte [rdx + r15]
0x00004a62      84c0           test al, al
0x00004a64      75ea           jne 0x4a50
0x00004a66      e911feffff     jmp 0x487c
0x00004a6b      89d0           mov eax, edx
0x00004a6d      e955f5ffff     jmp 0x3fc7
0x00004a72      0fb61c08       movzx ebx, byte [rax + rcx]
0x00004a76      80fb3e         cmp bl, 0x3e
0x00004a79      0f8771f8ffff   ja 0x42f0
0x00004a7f      48b800000000.  movabs rax, 0x7000a38200000000          ; 8070630310989004800
0x00004a89      480fa3d8       bt rax, rbx
0x00004a8d      0f835df8ffff   jae 0x42f0
0x00004a93      807c240f00     cmp byte [rsp + 0xf], 0
0x00004a98      0f85e4010000   jne 0x4c82                              ; ../coreutils-8.31/lib/quotearg.c:-1763
0x00004a9e      4d39fd         cmp r13, r15
0x00004aa1      7605           jbe 0x4aa8
0x00004aa3      43c6043e3f     mov byte [r14 + r15], 0x3f              ; '?'
                                                                       ; [0x3f:1]=0
0x00004aa8      498d4701       lea rax, [r15 + 1]
0x00004aac      4939c5         cmp r13, rax
0x00004aaf      7606           jbe 0x4ab7
0x00004ab1      43c6443e0122   mov byte [r14 + r15 + 1], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004ab7      498d4702       lea rax, [r15 + 2]
0x00004abb      4939c5         cmp r13, rax
0x00004abe      7606           jbe 0x4ac6
0x00004ac0      43c6443e0222   mov byte [r14 + r15 + 2], 0x22          ; '"'
                                                                       ; [0x22:1]=0
0x00004ac6      498d4703       lea rax, [r15 + 3]
0x00004aca      4939c5         cmp r13, rax                            ; ../coreutils-8.31/lib/quotearg.c:-1759
0x00004acd      7606           jbe 0x4ad5
0x00004acf      43c6443e033f   mov byte [r14 + r15 + 3], 0x3f          ; '?'
                                                                       ; [0x3f:1]=0
0x00004ad5      4983c704       add r15, 4
0x00004ad9      31d2           xor edx, edx
0x00004adb      4531e4         xor r12d, r12d
0x00004ade      31c0           xor eax, eax
0x00004ae0      4889cd         mov rbp, rcx
0x00004ae3      e9c0f1ffff     jmp 0x3ca8
0x00004ae8      85db           test ebx, ebx
0x00004aea      0f8488010000   je 0x4c78
0x00004af0      488d05062600.  lea rax, [0x000070fd]                   ; u"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004af7      c644240e01     mov byte [rsp + 0xe], 1
0x00004afc      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b01      4531e4         xor r12d, r12d
0x00004b04      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b0d      c644240f01     mov byte [rsp + 0xf], 1
0x00004b12      c644240d00     mov byte [rsp + 0xd], 0
0x00004b17      48c744241801.  mov qword [rsp + 0x18], 1
0x00004b20      4531ff         xor r15d, r15d
0x00004b23      4889442448     mov qword [rsp + 0x48], rax
0x00004b28      e926f0ffff     jmp 0x3b53
0x00004b2d      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1783
0x00004b30      4c89dd         mov rbp, r11
0x00004b33      0fb644240f     movzx eax, byte [rsp + 0xf]
0x00004b38      e9ccfaffff     jmp 0x4609
0x00004b3d      488d05b72500.  lea rax, str.l______l                   ; 0x70fb ; u"\"'`\u696c\u6574\u6172l\u6873\u6c65l\u6873\u6c65\u2d6c\u6c61\u6177\u7379\u7300\u6568\u6c6c\u652d\u6373\u7061e\u6873\u6c65\u2d6c\u7365\u6163\u6570\u612d\u776c\u7961s\u2d63\u616d\u6279e\u6c63\u636f\u6c61e"
0x00004b44      c644240e01     mov byte [rsp + 0xe], 1                 ; ../coreutils-8.31/lib/quotearg.c:-1785
0x00004b49      c644247c00     mov byte [rsp + 0x7c], 0
0x00004b4e      4531e4         xor r12d, r12d                          ; ../coreutils-8.31/lib/quotearg.c:-2555
0x00004b51      48c744245000.  mov qword [rsp + 0x50], 0
0x00004b5a      c644240f01     mov byte [rsp + 0xf], 1
0x00004b5f      c644240d01     mov byte [rsp + 0xd], 1
0x00004b64      48c744241801.  mov qword [rsp + 0x18], 1
0x00004b6d      4531ff         xor r15d, r15d
0x00004b70      4889442448     mov qword [rsp + 0x48], rax
0x00004b75      e9d9efffff     jmp 0x3b53
0x00004b7a      89d0           mov eax, edx
0x00004b7c      488b5c2448     mov rbx, qword [rsp + 0x48]
0x00004b81      4885db         test rbx, rbx
0x00004b84      742c           je 0x4bb2
0x00004b86      84c0           test al, al
0x00004b88      7428           je 0x4bb2
0x00004b8a      0fb60b         movzx ecx, byte [rbx]
0x00004b8d      4889d8         mov rax, rbx
0x00004b90      84c9           test cl, cl
0x00004b92      741e           je 0x4bb2
0x00004b94      4c89fa         mov rdx, r15
0x00004b97      4c29f8         sub rax, r15
0x00004b9a      4939d5         cmp r13, rdx
0x00004b9d      7604           jbe 0x4ba3
0x00004b9f      41880c16       mov byte [r14 + rdx], cl
0x00004ba3      4883c201       add rdx, 1
0x00004ba7      0fb60c10       movzx ecx, byte [rax + rdx]
0x00004bab      84c9           test cl, cl
0x00004bad      75eb           jne 0x4b9a
0x00004baf      4989d7         mov r15, rdx
0x00004bb2      4d39fd         cmp r13, r15
0x00004bb5      0f869efaffff   jbe 0x4659
0x00004bbb      43c6043e00     mov byte [r14 + r15], 0
0x00004bc0      e994faffff     jmp 0x4659
0x00004bc5      837c240802     cmp dword [rsp + 8], 2
0x00004bca      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004bcf      4c89dd         mov rbp, r11
0x00004bd2      0f94c0         sete al
0x00004bd5      885c240d       mov byte [rsp + 0xd], bl
0x00004bd9      e92bfaffff     jmp 0x4609
0x00004bde      8b742408       mov esi, dword [rsp + 8]
0x00004be2      4889cf         mov rdi, rcx
0x00004be5      e8a6edffff     call sym.gettext_quote.part.1
0x00004bea      4889442468     mov qword [rsp + 0x68], rax
0x00004bef      e952fcffff     jmp 0x4846
0x00004bf4      8b742408       mov esi, dword [rsp + 8]                ; ../coreutils-8.31/lib/quotearg.c:-2519
0x00004bf8      4889cf         mov rdi, rcx
0x00004bfb      e890edffff     call sym.gettext_quote.part.1
0x00004c00      4889442460     mov qword [rsp + 0x60], rax
0x00004c05      e967fcffff     jmp 0x4871
0x00004c0a      0fb65c240f     movzx ebx, byte [rsp + 0xf]
0x00004c0f      4c89dd         mov rbp, r11
0x00004c12      89d0           mov eax, edx
0x00004c14      885c240d       mov byte [rsp + 0xd], bl
0x00004c18      e9ecf9ffff     jmp 0x4609
0x00004c1d      4883ec08       sub rsp, 8
0x00004c21      41b805000000   mov r8d, 5
0x00004c27      4c89d9         mov rcx, r11
0x00004c2a      ff742468       push qword [rsp + 0x68]
0x00004c2e      ff742478       push qword [rsp + 0x78]                 ; ../coreutils-8.31/lib/quotearg.c:-2497
0x00004c32      4c89f7         mov rdi, r14
0x00004c35      ff742438       push qword [rsp + 0x38]
0x00004c39      448b8c249800.  mov r9d, dword [rsp + 0x98]
0x00004c41      488b542430     mov rdx, qword [rsp + 0x30]
0x00004c46      488b742470     mov rsi, qword [rsp + 0x70]
0x00004c4b      e830eeffff     call sym.quotearg_buffer_restyled
0x00004c50      4883c420       add rsp, 0x20                           ; ../coreutils-8.31/lib/quotearg.c:-2490
0x00004c54      4989c7         mov r15, rax
0x00004c57      e9fdf9ffff     jmp 0x4659
0x00004c5c      0fb644247c     movzx eax, byte [rsp + 0x7c]
0x00004c61      e916ffffff     jmp 0x4b7c
0x00004c66      c74424080200.  mov dword [rsp + 8], 2
0x00004c6e      e996f9ffff     jmp 0x4609
0x00004c73      e858c9ffff     call sym.imp.__stack_chk_fail
0x00004c78      c644240d00     mov byte [rsp + 0xd], 0
0x00004c7d      e96ffaffff     jmp 0x46f1
0x00004c82      4c89dd         mov rbp, r11
0x00004c85      e996f9ffff     jmp 0x4620
0x00004c8a      c644240e01     mov byte [rsp + 0xe], 1
0x00004c8f      31c0           xor eax, eax
0x00004c91      4531e4         xor r12d, r12d
0x00004c94      48c744245000.  mov qword [rsp + 0x50], 0
0x00004c9d      e9a2f5ffff     jmp 0x4244
0x00004ca2      4c89ea         mov rdx, r13
0x00004ca5      4c8b6c2450     mov r13, qword [rsp + 0x50]
0x00004caa      e9f3f5ffff     jmp 0x42a2
0x00004caf      e85cc8ffff     call sym.imp.abort
0x00004cb4      6690           nop
0x00004cb6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_options:
0x00004cc0      4157           push r15
0x00004cc2      4156           push r14
0x00004cc4      4c63ff         movsxd r15, edi
0x00004cc7      4155           push r13
0x00004cc9      4154           push r12
0x00004ccb      4989d6         mov r14, rdx
0x00004cce      55             push rbp
0x00004ccf      53             push rbx
0x00004cd0      4889cd         mov rbp, rcx
0x00004cd3      4883ec28       sub rsp, 0x28
0x00004cd7      4889742408     mov qword [rsp + 8], rsi
0x00004cdc      e83fc8ffff     call sym.imp.__errno_location
0x00004ce1      4989c5         mov r13, rax
0x00004ce4      8b00           mov eax, dword [rax]
0x00004ce6      4585ff         test r15d, r15d
0x00004ce9      488b1d905320.  mov rbx, qword [obj.slotvec]            ; ../coreutils-8.31/lib/quotearg.c:-1864 ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004cf0      89442418       mov dword [rsp + 0x18], eax
0x00004cf4      0f8867010000   js 0x4e61
0x00004cfa      44393d775320.  cmp dword [obj.nslots], r15d            ; [0x20a078:4]=1
0x00004d01      7f62           jg 0x4d65
0x00004d03      4181ffffffff.  cmp r15d, 0x7fffffff
0x00004d0a      0f8456010000   je 0x4e66
0x00004d10      458d6701       lea r12d, [r15 + 1]                     ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004d14      488d05755320.  lea rax, obj.slotvec0                   ; 0x20a090
0x00004d1b      4963f4         movsxd rsi, r12d
0x00004d1e      48c1e604       shl rsi, 4
0x00004d22      4839c3         cmp rbx, rax
0x00004d25      0f8415010000   je 0x4e40
0x00004d2b      4889df         mov rdi, rbx
0x00004d2e      e8cd0f0000     call sym.xrealloc                       ; ../coreutils-8.31/lib/quotearg.c:-1859
0x00004d33      4889c3         mov rbx, rax
0x00004d36      488905435320.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004d3d      48633d345320.  movsxd rdi, dword [obj.nslots]          ; [0x20a078:4]=1
0x00004d44      4489e2         mov edx, r12d
0x00004d47      31f6           xor esi, esi
0x00004d49      29fa           sub edx, edi
0x00004d4b      48c1e704       shl rdi, 4
0x00004d4f      4863d2         movsxd rdx, edx
0x00004d52      4801df         add rdi, rbx
0x00004d55      48c1e204       shl rdx, 4
0x00004d59      e8f2c8ffff     call sym.imp.memset
0x00004d5e      448925135320.  mov dword [obj.nslots], r12d            ; [0x20a078:4]=1
0x00004d65      8b4504         mov eax, dword [rbp + 4]
0x00004d68      49c1e704       shl r15, 4
0x00004d6c      4883ec08       sub rsp, 8
0x00004d70      4c01fb         add rbx, r15
0x00004d73      4c8d7d08       lea r15, [rbp + 8]
0x00004d77      448b4500       mov r8d, dword [rbp]
0x00004d7b      4c8b1b         mov r11, qword [rbx]
0x00004d7e      4c8b6308       mov r12, qword [rbx + 8]
0x00004d82      4c89f1         mov rcx, r14
0x00004d85      83c801         or eax, 1
0x00004d88      89442424       mov dword [rsp + 0x24], eax
0x00004d8c      ff7530         push qword [rbp + 0x30]
0x00004d8f      4189c1         mov r9d, eax
0x00004d92      ff7528         push qword [rbp + 0x28]
0x00004d95      4157           push r15
0x00004d97      4c89de         mov rsi, r11                            ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004d9a      488b542428     mov rdx, qword [rsp + 0x28]
0x00004d9f      4c89e7         mov rdi, r12
0x00004da2      4c895c2430     mov qword [rsp + 0x30], r11
0x00004da7      e8d4ecffff     call sym.quotearg_buffer_restyled
0x00004dac      4883c420       add rsp, 0x20
0x00004db0      4c8b5c2410     mov r11, qword [rsp + 0x10]
0x00004db5      4939c3         cmp r11, rax
0x00004db8      7767           ja 0x4e21
0x00004dba      488d7001       lea rsi, [rax + 1]
0x00004dbe      488d055b5320.  lea rax, obj.slot0                      ; 0x20a120
0x00004dc5      4939c4         cmp r12, rax
0x00004dc8      488933         mov qword [rbx], rsi
0x00004dcb      7412           je 0x4ddf
0x00004dcd      4c89e7         mov rdi, r12
0x00004dd0      4889742410     mov qword [rsp + 0x10], rsi
0x00004dd5      e826c7ffff     call sym.imp.free
0x00004dda      488b742410     mov rsi, qword [rsp + 0x10]
0x00004ddf      4889f7         mov rdi, rsi
0x00004de2      4889742410     mov qword [rsp + 0x10], rsi
0x00004de7      e8b40e0000     call sym.xmalloc
0x00004dec      4883ec08       sub rsp, 8
0x00004df0      48894308       mov qword [rbx + 8], rax
0x00004df4      448b4500       mov r8d, dword [rbp]
0x00004df8      ff7530         push qword [rbp + 0x30]
0x00004dfb      ff7528         push qword [rbp + 0x28]
0x00004dfe      4c89f1         mov rcx, r14
0x00004e01      4157           push r15
0x00004e03      448b4c243c     mov r9d, dword [rsp + 0x3c]
0x00004e08      4889c7         mov rdi, rax
0x00004e0b      488b542428     mov rdx, qword [rsp + 0x28]
0x00004e10      488b742430     mov rsi, qword [rsp + 0x30]
0x00004e15      4989c4         mov r12, rax
0x00004e18      e863ecffff     call sym.quotearg_buffer_restyled
0x00004e1d      4883c420       add rsp, 0x20
0x00004e21      8b442418       mov eax, dword [rsp + 0x18]
0x00004e25      41894500       mov dword [r13], eax
0x00004e29      4883c428       add rsp, 0x28
0x00004e2d      4c89e0         mov rax, r12
0x00004e30      5b             pop rbx                                 ; ../coreutils-8.31/lib/quotearg.c:-1822
0x00004e31      5d             pop rbp
0x00004e32      415c           pop r12
0x00004e34      415d           pop r13
0x00004e36      415e           pop r14
0x00004e38      415f           pop r15
0x00004e3a      c3             ret
0x00004e3b      0f1f440000     nop dword [rax + rax]
0x00004e40      31ff           xor edi, edi                            ; ../coreutils-8.31/lib/quotearg.c:-1820
0x00004e42      e8b90e0000     call sym.xrealloc
0x00004e47      660f6f054152.  movdqa xmm0, xmmword [obj.slotvec0]     ; ../coreutils-8.31/lib/quotearg.c:-1818
0x00004e4f      4889c3         mov rbx, rax
0x00004e52      488905275220.  mov qword [obj.slotvec], rax            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00004e59      0f1100         movups xmmword [rax], xmm0
0x00004e5c      e9dcfeffff     jmp 0x4d3d
0x00004e61      e8aac6ffff     call sym.imp.abort
0x00004e66      e885100000     call sym.xalloc_die
0x00004e6b      0f1f440000     nop dword [rax + rax]
;-- clone_quoting_options:
0x00004e70      4154           push r12
0x00004e72      55             push rbp
0x00004e73      53             push rbx
0x00004e74      4889fb         mov rbx, rdi
0x00004e77      e8a4c6ffff     call sym.imp.__errno_location
0x00004e7c      448b20         mov r12d, dword [rax]
0x00004e7f      4889c5         mov rbp, rax
0x00004e82      488d05975320.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004e89      4885db         test rbx, rbx
0x00004e8c      be38000000     mov esi, 0x38                           ; '8'
0x00004e91      480f44d8       cmove rbx, rax
0x00004e95      4889df         mov rdi, rbx
0x00004e98      e803100000     call sym.xmemdup
0x00004e9d      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/quotearg.c:-1862
0x00004ea1      5b             pop rbx
0x00004ea2      5d             pop rbp
0x00004ea3      415c           pop r12
0x00004ea5      c3             ret
0x00004ea6      662e0f1f8400.  nop word cs:[rax + rax]
;-- get_quoting_style:
0x00004eb0      488d05695320.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004eb7      4885ff         test rdi, rdi
0x00004eba      480f44f8       cmove rdi, rax
0x00004ebe      8b07           mov eax, dword [rdi]
0x00004ec0      c3             ret
0x00004ec1      0f1f440000     nop dword [rax + rax]
0x00004ec6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_style:
0x00004ed0      488d05495320.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004ed7      4885ff         test rdi, rdi
0x00004eda      480f44f8       cmove rdi, rax
0x00004ede      8937           mov dword [rdi], esi
0x00004ee0      c3             ret
0x00004ee1      0f1f440000     nop dword [rax + rax]                   ; ../coreutils-8.31/lib/quotearg.c:-1850
0x00004ee6      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_char_quoting:
0x00004ef0      488d05295320.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004ef7      4885ff         test rdi, rdi
0x00004efa      89f1           mov ecx, esi
0x00004efc      480f44f8       cmove rdi, rax                          ; ../coreutils-8.31/lib/quotearg.c:-1848
0x00004f00      89f0           mov eax, esi
0x00004f02      83e11f         and ecx, 0x1f
0x00004f05      c0e805         shr al, 5
0x00004f08      0fb6c0         movzx eax, al
0x00004f0b      488d7c8708     lea rdi, [rdi + rax*4 + 8]
0x00004f10      8b37           mov esi, dword [rdi]
0x00004f12      89f0           mov eax, esi
0x00004f14      d3e8           shr eax, cl
0x00004f16      31c2           xor edx, eax
0x00004f18      83e001         and eax, 1
0x00004f1b      83e201         and edx, 1
0x00004f1e      d3e2           shl edx, cl
0x00004f20      31f2           xor edx, esi
0x00004f22      8917           mov dword [rdi], edx
0x00004f24      c3             ret
0x00004f25      90             nop
0x00004f26      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_quoting_flags:
0x00004f30      488d05e95220.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004f37      4885ff         test rdi, rdi
0x00004f3a      480f44f8       cmove rdi, rax
0x00004f3e      8b4704         mov eax, dword [rdi + 4]
0x00004f41      897704         mov dword [rdi + 4], esi
0x00004f44      c3             ret
0x00004f45      90             nop
0x00004f46      662e0f1f8400.  nop word cs:[rax + rax]
;-- set_custom_quoting:
0x00004f50      488d05c95220.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004f57      4885ff         test rdi, rdi
0x00004f5a      480f44f8       cmove rdi, rax
0x00004f5e      4885f6         test rsi, rsi
0x00004f61      c7070a000000   mov dword [rdi], 0xa                    ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004f67      740e           je 0x4f77
0x00004f69      4885d2         test rdx, rdx
0x00004f6c      7409           je 0x4f77
0x00004f6e      48897728       mov qword [rdi + 0x28], rsi
0x00004f72      48895730       mov qword [rdi + 0x30], rdx
0x00004f76      c3             ret
0x00004f77      4883ec08       sub rsp, 8
0x00004f7b      e890c5ffff     call sym.imp.abort
;-- quotearg_buffer:
0x00004f80      4157           push r15
0x00004f82      4156           push r14
0x00004f84      488d05955220.  lea rax, obj.default_quoting_options    ; 0x20a220
0x00004f8b      4155           push r13
0x00004f8d      4154           push r12
0x00004f8f      4989fd         mov r13, rdi                            ; ../coreutils-8.31/lib/quotearg.c:-1840
0x00004f92      55             push rbp
0x00004f93      53             push rbx
0x00004f94      4c89c3         mov rbx, r8
0x00004f97      4989f6         mov r14, rsi
0x00004f9a      4989d7         mov r15, rdx
0x00004f9d      4883ec18       sub rsp, 0x18
0x00004fa1      4d85c0         test r8, r8
0x00004fa4      480f44d8       cmove rbx, rax
0x00004fa8      48894c2408     mov qword [rsp + 8], rcx
0x00004fad      e86ec5ffff     call sym.imp.__errno_location
0x00004fb2      448b20         mov r12d, dword [rax]
0x00004fb5      4889c5         mov rbp, rax
0x00004fb8      488d4308       lea rax, [rbx + 8]
0x00004fbc      4883ec08       sub rsp, 8
0x00004fc0      448b4b04       mov r9d, dword [rbx + 4]
0x00004fc4      ff7330         push qword [rbx + 0x30]
0x00004fc7      448b03         mov r8d, dword [rbx]
0x00004fca      ff7328         push qword [rbx + 0x28]
0x00004fcd      4c89fa         mov rdx, r15
0x00004fd0      50             push rax
0x00004fd1      488b4c2428     mov rcx, qword [rsp + 0x28]
0x00004fd6      4c89f6         mov rsi, r14
0x00004fd9      4c89ef         mov rdi, r13
0x00004fdc      e89feaffff     call sym.quotearg_buffer_restyled
0x00004fe1      44896500       mov dword [rbp], r12d
0x00004fe5      4883c438       add rsp, 0x38
0x00004fe9      5b             pop rbx
0x00004fea      5d             pop rbp
0x00004feb      415c           pop r12
0x00004fed      415d           pop r13                                 ; ../coreutils-8.31/lib/quotearg.c:-2609
0x00004fef      415e           pop r14
0x00004ff1      415f           pop r15
0x00004ff3      c3             ret
0x00004ff4      6690           nop
0x00004ff6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc_mem:
0x00005000      4157           push r15                                ; ../coreutils-8.31/lib/quotearg.c:-1834
0x00005002      4156           push r14
0x00005004      488d05155220.  lea rax, obj.default_quoting_options    ; 0x20a220
0x0000500b      4155           push r13
0x0000500d      4154           push r12                                ; ../coreutils-8.31/lib/quotearg.c:-1829
0x0000500f      4989d4         mov r12, rdx
0x00005012      55             push rbp
0x00005013      53             push rbx
0x00005014      4889cb         mov rbx, rcx
0x00005017      4989fe         mov r14, rdi
0x0000501a      4989f7         mov r15, rsi
0x0000501d      4883ec38       sub rsp, 0x38                           ; ../coreutils-8.31/lib/quotearg.c:-1823
0x00005021      4885c9         test rcx, rcx                           ; ../coreutils-8.31/lib/quotearg.c:-2649
0x00005024      480f44d8       cmove rbx, rax
0x00005028      31ed           xor ebp, ebp
0x0000502a      e8f1c4ffff     call sym.imp.__errno_location
0x0000502f      4d85e4         test r12, r12
0x00005032      4989c5         mov r13, rax
0x00005035      8b00           mov eax, dword [rax]
0x00005037      400f94c5       sete bpl
0x0000503b      0b6b04         or ebp, dword [rbx + 4]
0x0000503e      4c8d5308       lea r10, [rbx + 8]
0x00005042      4883ec08       sub rsp, 8
0x00005046      448b03         mov r8d, dword [rbx]
0x00005049      4c89f9         mov rcx, r15
0x0000504c      89442414       mov dword [rsp + 0x14], eax
0x00005050      ff7330         push qword [rbx + 0x30]
0x00005053      4c89f2         mov rdx, r14                            ; ../coreutils-8.31/lib/quotearg.c:-2650
0x00005056      ff7328         push qword [rbx + 0x28]
0x00005059      4152           push r10                                ; ../coreutils-8.31/lib/quotearg.c:-2651
0x0000505b      31f6           xor esi, esi
0x0000505d      4189e9         mov r9d, ebp
0x00005060      31ff           xor edi, edi
0x00005062      4c89542440     mov qword [rsp + 0x40], r10
0x00005067      e814eaffff     call sym.quotearg_buffer_restyled
0x0000506c      488d7001       lea rsi, [rax + 1]
0x00005070      4889442448     mov qword [rsp + 0x48], rax
0x00005075      4883c420       add rsp, 0x20
0x00005079      4889f7         mov rdi, rsi
0x0000507c      4889742418     mov qword [rsp + 0x18], rsi
0x00005081      e81a0c0000     call sym.xmalloc
0x00005086      4889442410     mov qword [rsp + 0x10], rax             ; ../coreutils-8.31/lib/quotearg.c:-1819
0x0000508b      4883ec08       sub rsp, 8
0x0000508f      ff7330         push qword [rbx + 0x30]
0x00005092      ff7328         push qword [rbx + 0x28]
0x00005095      4c8b542438     mov r10, qword [rsp + 0x38]
0x0000509a      4189e9         mov r9d, ebp
0x0000509d      448b03         mov r8d, dword [rbx]
0x000050a0      4c89f9         mov rcx, r15
0x000050a3      4c89f2         mov rdx, r14
0x000050a6      4889c7         mov rdi, rax
0x000050a9      4152           push r10
0x000050ab      488b742438     mov rsi, qword [rsp + 0x38]
0x000050b0      e8cbe9ffff     call sym.quotearg_buffer_restyled
0x000050b5      8b44242c       mov eax, dword [rsp + 0x2c]
0x000050b9      4883c420       add rsp, 0x20
0x000050bd      4d85e4         test r12, r12                           ; ../coreutils-8.31/lib/quotearg.c:-1814
0x000050c0      41894500       mov dword [r13], eax
0x000050c4      7409           je 0x50cf
0x000050c6      4c8b5c2428     mov r11, qword [rsp + 0x28]
0x000050cb      4d891c24       mov qword [r12], r11
0x000050cf      488b442410     mov rax, qword [rsp + 0x10]
0x000050d4      4883c438       add rsp, 0x38
0x000050d8      5b             pop rbx
0x000050d9      5d             pop rbp
0x000050da      415c           pop r12
0x000050dc      415d           pop r13
0x000050de      415e           pop r14
0x000050e0      415f           pop r15
0x000050e2      c3             ret
0x000050e3      0f1f00         nop dword [rax]
0x000050e6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_alloc:
0x000050f0      4889d1         mov rcx, rdx
0x000050f3      31d2           xor edx, edx
0x000050f5      e906ffffff     jmp sym.quotearg_alloc_mem
0x000050fa      660f1f440000   nop word [rax + rax]
;-- quotearg_free:
0x00005100      8b05724f2000   mov eax, dword [obj.nslots]             ; [0x20a078:4]=1
0x00005106      4154           push r12
0x00005108      4c8b25714f20.  mov r12, qword [obj.slotvec]            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x0000510f      55             push rbp
0x00005110      53             push rbx
0x00005111      83f801         cmp eax, 1
0x00005114      7e2b           jle 0x5141                              ; ../coreutils-8.31/lib/quotearg.c:-2610
0x00005116      83e802         sub eax, 2
0x00005119      498d5c2418     lea rbx, [r12 + 0x18]                   ; ../coreutils-8.31/lib/quotearg.c:-1794
0x0000511e      48c1e004       shl rax, 4
0x00005122      498d6c0428     lea rbp, [r12 + rax + 0x28]
0x00005127      660f1f840000.  nop word [rax + rax]
0x00005130      488b3b         mov rdi, qword [rbx]
0x00005133      4883c310       add rbx, 0x10
0x00005137      e8c4c3ffff     call sym.imp.free
0x0000513c      4839eb         cmp rbx, rbp
0x0000513f      75ef           jne 0x5130
0x00005141      498b7c2408     mov rdi, qword [r12 + 8]
0x00005146      488d1dd34f20.  lea rbx, obj.slot0                      ; 0x20a120
0x0000514d      4839df         cmp rdi, rbx
0x00005150      7417           je 0x5169
0x00005152      e8a9c3ffff     call sym.imp.free
0x00005157      48c7052e4f20.  mov qword [obj.slotvec0], 0x100         ; [0x20a090:8]=256
0x00005162      48891d2f4f20.  mov qword [0x0020a098], rbx             ; [0x20a098:8]=0x20a120 obj.slot0
0x00005169      488d1d204f20.  lea rbx, obj.slotvec0                   ; 0x20a090
0x00005170      4939dc         cmp r12, rbx
0x00005173      740f           je 0x5184
0x00005175      4c89e7         mov rdi, r12
0x00005178      e883c3ffff     call sym.imp.free
0x0000517d      48891dfc4e20.  mov qword [obj.slotvec], rbx            ; [0x20a080:8]=0x20a090 obj.slotvec0
0x00005184      5b             pop rbx
0x00005185      c705e94e2000.  mov dword [obj.nslots], 1               ; [0x20a078:4]=1
0x0000518f      5d             pop rbp
0x00005190      415c           pop r12
0x00005192      c3             ret
0x00005193      0f1f00         nop dword [rax]
0x00005196      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n:
0x000051a0      488d0d795020.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000051a7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000051ae      e90dfbffff     jmp sym.quotearg_n_options
0x000051b3      0f1f00         nop dword [rax]                         ; ../coreutils-8.31/lib/quotearg.c:-1776
0x000051b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_mem:
0x000051c0      488d0d595020.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000051c7      e9f4faffff     jmp sym.quotearg_n_options
0x000051cc      0f1f4000       nop dword [rax]
;-- quotearg:
0x000051d0      488d0d495020.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000051d7      4889fe         mov rsi, rdi
0x000051da      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000051e1      31ff           xor edi, edi
0x000051e3      e9d8faffff     jmp sym.quotearg_n_options
0x000051e8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_mem:
0x000051f0      488d0d295020.  lea rcx, obj.default_quoting_options    ; 0x20a220
0x000051f7      4889f2         mov rdx, rsi
0x000051fa      4889fe         mov rsi, rdi
0x000051fd      31ff           xor edi, edi
0x000051ff      e9bcfaffff     jmp sym.quotearg_n_options              ; ../coreutils-8.31/lib/quotearg.c:-1773
0x00005204      6690           nop
0x00005206      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_style:
0x00005210      4883ec48       sub rsp, 0x48
0x00005214      4889d0         mov rax, rdx                            ; ../coreutils-8.31/lib/quotearg.c:-2620
0x00005217      64488b142528.  mov rdx, qword fs:[0x28]
0x00005220      4889542438     mov qword [rsp + 0x38], rdx
0x00005225      31d2           xor edx, edx
0x00005227      83fe0a         cmp esi, 0xa
0x0000522a      7468           je 0x5294
0x0000522c      893424         mov dword [rsp], esi
0x0000522f      4889e1         mov rcx, rsp
0x00005232      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005239      4889c6         mov rsi, rax
0x0000523c      48c744240400.  mov qword [rsp + 4], 0
0x00005245      48c744240c00.  mov qword [rsp + 0xc], 0
0x0000524e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005257      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005260      48c744242400.  mov qword [rsp + 0x24], 0               ; ../coreutils-8.31/lib/quotearg.c:-1760
0x00005269      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005272      c74424340000.  mov dword [rsp + 0x34], 0
0x0000527a      e841faffff     call sym.quotearg_n_options
0x0000527f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x00005284      6448330c2528.  xor rcx, qword fs:[0x28]
0x0000528d      750a           jne 0x5299                              ; ../coreutils-8.31/lib/quotearg.c:-1738
0x0000528f      4883c448       add rsp, 0x48
0x00005293      c3             ret
0x00005294      e877c2ffff     call sym.imp.abort
0x00005299      e832c3ffff     call sym.imp.__stack_chk_fail
0x0000529e      6690           nop
;-- quotearg_n_style_mem:
0x000052a0      4883ec48       sub rsp, 0x48
0x000052a4      4889d0         mov rax, rdx
0x000052a7      4889ca         mov rdx, rcx
0x000052aa      64488b0c2528.  mov rcx, qword fs:[0x28]
0x000052b3      48894c2438     mov qword [rsp + 0x38], rcx
0x000052b8      31c9           xor ecx, ecx
0x000052ba      83fe0a         cmp esi, 0xa
0x000052bd      7461           je 0x5320
0x000052bf      893424         mov dword [rsp], esi
0x000052c2      4889e1         mov rcx, rsp
0x000052c5      4889c6         mov rsi, rax
0x000052c8      48c744240400.  mov qword [rsp + 4], 0
0x000052d1      48c744240c00.  mov qword [rsp + 0xc], 0
0x000052da      48c744241400.  mov qword [rsp + 0x14], 0
0x000052e3      48c744241c00.  mov qword [rsp + 0x1c], 0
0x000052ec      48c744242400.  mov qword [rsp + 0x24], 0
0x000052f5      48c744242c00.  mov qword [rsp + 0x2c], 0
0x000052fe      c74424340000.  mov dword [rsp + 0x34], 0
0x00005306      e8b5f9ffff     call sym.quotearg_n_options
0x0000530b      488b542438     mov rdx, qword [rsp + 0x38]
0x00005310      644833142528.  xor rdx, qword fs:[0x28]
0x00005319      750a           jne 0x5325
0x0000531b      4883c448       add rsp, 0x48
0x0000531f      c3             ret
0x00005320      e8ebc1ffff     call sym.imp.abort
0x00005325      e8a6c2ffff     call sym.imp.__stack_chk_fail
0x0000532a      660f1f440000   nop word [rax + rax]
;-- quotearg_style:
0x00005330      4889f2         mov rdx, rsi
0x00005333      89fe           mov esi, edi
0x00005335      31ff           xor edi, edi
0x00005337      e9d4feffff     jmp sym.quotearg_n_style
0x0000533c      0f1f4000       nop dword [rax]
;-- quotearg_style_mem:
0x00005340      4889d1         mov rcx, rdx
0x00005343      4889f2         mov rdx, rsi
0x00005346      89fe           mov esi, edi
0x00005348      31ff           xor edi, edi
0x0000534a      e951ffffff     jmp sym.quotearg_n_style_mem
0x0000534f      90             nop
;-- quotearg_char_mem:
0x00005350      4883ec48       sub rsp, 0x48
0x00005354      89d1           mov ecx, edx
0x00005356      64488b042528.  mov rax, qword fs:[0x28]
0x0000535f      4889442438     mov qword [rsp + 0x38], rax
0x00005364      31c0           xor eax, eax
0x00005366      488b05e34e20.  mov rax, qword [0x0020a250]             ; [0x20a250:8]=0
0x0000536d      4989e0         mov r8, rsp
0x00005370      83e11f         and ecx, 0x1f
0x00005373      660f6f05a54e.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x0000537b      4889442430     mov qword [rsp + 0x30], rax
0x00005380      89d0           mov eax, edx
0x00005382      0f290424       movaps xmmword [rsp], xmm0
0x00005386      c0e805         shr al, 5
0x00005389      0fb6c0         movzx eax, al
0x0000538c      4d8d4c8008     lea r9, [r8 + rax*4 + 8]
0x00005391      660f6f05974e.  movdqa xmm0, xmmword [0x0020a230]
0x00005399      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x0000539e      660f6f059a4e.  movdqa xmm0, xmmword [0x0020a240]
0x000053a6      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x000053ab      418b11         mov edx, dword [r9]
0x000053ae      89d0           mov eax, edx
0x000053b0      d3e8           shr eax, cl
0x000053b2      f7d0           not eax
0x000053b4      83e001         and eax, 1
0x000053b7      d3e0           shl eax, cl
0x000053b9      4c89c1         mov rcx, r8
0x000053bc      31d0           xor eax, edx
0x000053be      4889f2         mov rdx, rsi
0x000053c1      4889fe         mov rsi, rdi
0x000053c4      418901         mov dword [r9], eax
0x000053c7      31ff           xor edi, edi
0x000053c9      e8f2f8ffff     call sym.quotearg_n_options
0x000053ce      488b742438     mov rsi, qword [rsp + 0x38]
0x000053d3      644833342528.  xor rsi, qword fs:[0x28]
0x000053dc      7505           jne 0x53e3
0x000053de      4883c448       add rsp, 0x48
0x000053e2      c3             ret
0x000053e3      e8e8c1ffff     call sym.imp.__stack_chk_fail
0x000053e8      0f1f84000000.  nop dword [rax + rax]
;-- quotearg_char:
0x000053f0      400fbed6       movsx edx, sil
0x000053f4      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x000053fb      e950ffffff     jmp sym.quotearg_char_mem
;-- quotearg_colon:
0x00005400      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005405      48c7c6ffffff.  mov rsi, 0xffffffffffffffff
0x0000540c      e93fffffff     jmp sym.quotearg_char_mem
0x00005411      0f1f440000     nop dword [rax + rax]
0x00005416      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_colon_mem:
0x00005420      ba3a000000     mov edx, 0x3a                           ; ':'
0x00005425      e926ffffff     jmp sym.quotearg_char_mem
0x0000542a      660f1f440000   nop word [rax + rax]
;-- quotearg_n_style_colon:
0x00005430      4883ec48       sub rsp, 0x48
0x00005434      4889d0         mov rax, rdx
0x00005437      64488b142528.  mov rdx, qword fs:[0x28]
0x00005440      4889542438     mov qword [rsp + 0x38], rdx
0x00005445      31d2           xor edx, edx
0x00005447      83fe0a         cmp esi, 0xa
0x0000544a      7468           je 0x54b4
0x0000544c      893424         mov dword [rsp], esi
0x0000544f      4889e1         mov rcx, rsp
0x00005452      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005459      4889c6         mov rsi, rax
0x0000545c      48c744240400.  mov qword [rsp + 4], 0
0x00005465      48c744240c00.  mov qword [rsp + 0xc], 0x4000000        ; [0x4000000:8]=-1
0x0000546e      48c744241400.  mov qword [rsp + 0x14], 0
0x00005477      48c744241c00.  mov qword [rsp + 0x1c], 0
0x00005480      48c744242400.  mov qword [rsp + 0x24], 0
0x00005489      48c744242c00.  mov qword [rsp + 0x2c], 0
0x00005492      c74424340000.  mov dword [rsp + 0x34], 0
0x0000549a      e821f8ffff     call sym.quotearg_n_options
0x0000549f      488b4c2438     mov rcx, qword [rsp + 0x38]
0x000054a4      6448330c2528.  xor rcx, qword fs:[0x28]
0x000054ad      750a           jne 0x54b9
0x000054af      4883c448       add rsp, 0x48
0x000054b3      c3             ret
0x000054b4      e857c0ffff     call sym.imp.abort
0x000054b9      e812c1ffff     call sym.imp.__stack_chk_fail
0x000054be      6690           nop
;-- quotearg_n_custom_mem:
0x000054c0      4883ec48       sub rsp, 0x48
0x000054c4      4989c9         mov r9, rcx
0x000054c7      488b0d824d20.  mov rcx, qword [0x0020a250]             ; [0x20a250:8]=0
0x000054ce      660f6f054a4d.  movdqa xmm0, xmmword [obj.default_quoting_options]
0x000054d6      64488b042528.  mov rax, qword fs:[0x28]
0x000054df      4889442438     mov qword [rsp + 0x38], rax
0x000054e4      31c0           xor eax, eax
0x000054e6      0f290424       movaps xmmword [rsp], xmm0
0x000054ea      4885f6         test rsi, rsi
0x000054ed      48894c2430     mov qword [rsp + 0x30], rcx
0x000054f2      c704240a0000.  mov dword [rsp], 0xa
0x000054f9      660f6f052f4d.  movdqa xmm0, xmmword [0x0020a230]
0x00005501      0f29442410     movaps xmmword [rsp + 0x10], xmm0
0x00005506      660f6f05324d.  movdqa xmm0, xmmword [0x0020a240]
0x0000550e      0f29442420     movaps xmmword [rsp + 0x20], xmm0
0x00005513      7432           je 0x5547
0x00005515      4885d2         test rdx, rdx
0x00005518      742d           je 0x5547
0x0000551a      4889742428     mov qword [rsp + 0x28], rsi
0x0000551f      4889542430     mov qword [rsp + 0x30], rdx
0x00005524      4889e1         mov rcx, rsp
0x00005527      4c89c2         mov rdx, r8
0x0000552a      4c89ce         mov rsi, r9
0x0000552d      e88ef7ffff     call sym.quotearg_n_options
0x00005532      488b7c2438     mov rdi, qword [rsp + 0x38]
0x00005537      6448333c2528.  xor rdi, qword fs:[0x28]
0x00005540      750a           jne 0x554c
0x00005542      4883c448       add rsp, 0x48
0x00005546      c3             ret
0x00005547      e8c4bfffff     call sym.imp.abort
0x0000554c      e87fc0ffff     call sym.imp.__stack_chk_fail
0x00005551      0f1f440000     nop dword [rax + rax]
0x00005556      662e0f1f8400.  nop word cs:[rax + rax]
;-- quotearg_n_custom:
0x00005560      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x00005567      e954ffffff     jmp sym.quotearg_n_custom_mem
0x0000556c      0f1f4000       nop dword [rax]
;-- quotearg_custom:
0x00005570      4889d1         mov rcx, rdx
0x00005573      49c7c0ffffff.  mov r8, 0xffffffffffffffff
0x0000557a      4889f2         mov rdx, rsi
0x0000557d      4889fe         mov rsi, rdi
0x00005580      31ff           xor edi, edi
0x00005582      e939ffffff     jmp sym.quotearg_n_custom_mem
0x00005587      660f1f840000.  nop word [rax + rax]
;-- quotearg_custom_mem:
0x00005590      4989c8         mov r8, rcx
0x00005593      4889d1         mov rcx, rdx
0x00005596      4889f2         mov rdx, rsi
0x00005599      4889fe         mov rsi, rdi
0x0000559c      31ff           xor edi, edi
0x0000559e      e91dffffff     jmp sym.quotearg_n_custom_mem
0x000055a3      0f1f00         nop dword [rax]
0x000055a6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n_mem:
0x000055b0      488d0d894a20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000055b7      e904f7ffff     jmp sym.quotearg_n_options
0x000055bc      0f1f4000       nop dword [rax]
;-- quote_mem:
0x000055c0      488d0d794a20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000055c7      4889f2         mov rdx, rsi
0x000055ca      4889fe         mov rsi, rdi
0x000055cd      31ff           xor edi, edi
0x000055cf      e9ecf6ffff     jmp sym.quotearg_n_options
0x000055d4      6690           nop
0x000055d6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote_n:
0x000055e0      488d0d594a20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x000055e7      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x000055ee      e9cdf6ffff     jmp sym.quotearg_n_options
0x000055f3      0f1f00         nop dword [rax]
0x000055f6      662e0f1f8400.  nop word cs:[rax + rax]
;-- quote:
0x00005600      488d0d394a20.  lea rcx, obj.quote_quoting_options      ; 0x20a040
0x00005607      4889fe         mov rsi, rdi
0x0000560a      48c7c2ffffff.  mov rdx, 0xffffffffffffffff
0x00005611      31ff           xor edi, edi
0x00005613      e9a8f6ffff     jmp sym.quotearg_n_options
0x00005618      0f1f84000000.  nop dword [rax + rax]
;-- safe_read:
0x00005620      4155           push r13                                ; ../coreutils-8.31/lib/safe-read.c:57
0x00005622      4154           push r12
0x00005624      4189fd         mov r13d, edi
0x00005627      55             push rbp
0x00005628      53             push rbx
0x00005629      4989f4         mov r12, rsi
0x0000562c      4889d3         mov rbx, rdx
0x0000562f      4883ec08       sub rsp, 8
0x00005633      0f1f440000     nop dword [rax + rax]
0x00005638      4889da         mov rdx, rbx                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000563b      4c89e6         mov rsi, r12
0x0000563e      4489ef         mov edi, r13d
0x00005641      e83ac0ffff     call sym.imp.read
0x00005646      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/safe-read.c:62
0x00005649      4889c5         mov rbp, rax                            ; unistd.h:44   return __read_alias (__fd, __buf, __nbytes);
0x0000564c      7922           jns 0x5670                              ; ../coreutils-8.31/lib/safe-read.c:62
0x0000564e      e8cdbeffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/safe-read.c:64
0x00005653      8b00           mov eax, dword [rax]
0x00005655      83f804         cmp eax, 4
0x00005658      74de           je 0x5638
0x0000565a      4881fb0000f0.  cmp rbx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:66
0x00005661      760d           jbe 0x5670
0x00005663      83f816         cmp eax, 0x16
0x00005666      7508           jne 0x5670
0x00005668      bb0000f07f     mov ebx, 0x7ff00000                     ; ../coreutils-8.31/lib/safe-read.c:67
0x0000566d      ebc9           jmp 0x5638
0x0000566f      90             nop
0x00005670      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/safe-read.c:71
0x00005674      4889e8         mov rax, rbp
0x00005677      5b             pop rbx
0x00005678      5d             pop rbp
0x00005679      415c           pop r12
0x0000567b      415d           pop r13
0x0000567d      c3             ret
0x0000567e      6690           nop
;-- version_etc_arn:
0x00005680      4157           push r15
0x00005682      4156           push r14
0x00005684      4155           push r13
0x00005686      4154           push r12
0x00005688      4d89cc         mov r12, r9
0x0000568b      55             push rbp
0x0000568c      53             push rbx
0x0000568d      4889fd         mov rbp, rdi
0x00005690      4c89c3         mov rbx, r8
0x00005693      4883ec28       sub rsp, 0x28
0x00005697      4885f6         test rsi, rsi
0x0000569a      0f8418010000   je 0x57b8
0x000056a0      4989d0         mov r8, rdx
0x000056a3      488d151e1f00.  lea rdx, [0x000075c8]                   ; "%s (%s) %s\n"
0x000056aa      4989c9         mov r9, rcx
0x000056ad      31c0           xor eax, eax
0x000056af      4889f1         mov rcx, rsi
0x000056b2      be01000000     mov esi, 1
0x000056b7      e824c1ffff     call sym.imp.__fprintf_chk
0x000056bc      488d35181f00.  lea rsi, [0x000075db]                   ; "(C)"
0x000056c3      31ff           xor edi, edi
0x000056c5      ba05000000     mov edx, 5
0x000056ca      e8d1beffff     call sym.imp.dcgettext
0x000056cf      488d152a2200.  lea rdx, obj.version_etc_copyright      ; 0x7900 ; "Copyright %s %d Free Software Foundation, Inc."
0x000056d6      4889c1         mov rcx, rax
0x000056d9      41b8e3070000   mov r8d, 0x7e3
0x000056df      be01000000     mov esi, 1
0x000056e4      4889ef         mov rdi, rbp
0x000056e7      31c0           xor eax, eax
0x000056e9      e8f2c0ffff     call sym.imp.__fprintf_chk
0x000056ee      488d35731f00.  lea rsi, str.License_GPLv3_:_GNU_GPL_version_3_or_later__https:__gnu.org_licenses_gpl.html_.__This_is_free_software:_you_are_free_to_change_and_redistribute_it.__There_is_NO_WARRANTY__to_the_extent_permitted_by_law. ; 0x7668 ; "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x000056f5      31ff           xor edi, edi
0x000056f7      ba05000000     mov edx, 5
0x000056fc      e89fbeffff     call sym.imp.dcgettext
0x00005701      4889ee         mov rsi, rbp
0x00005704      4889c7         mov rdi, rax
0x00005707      e894bfffff     call sym.imp.fputs_unlocked
0x0000570c      4983fc09       cmp r12, 9
0x00005710      0f873a030000   ja 0x5a50
0x00005716      488d15a72100.  lea rdx, [0x000078c4]
0x0000571d      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00005721      4801d0         add rax, rdx
0x00005724      ffe0           jmp rax
0x00005726      662e0f1f8400.  nop word cs:[rax + rax]
0x00005730      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005734      488b4310       mov rax, qword [rbx + 0x10]
0x00005738      488d35992000.  lea rsi, str.Written_by__s___s___s____s___s___s___s___and__s. ; 0x77d8 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x0000573f      4c8b4308       mov r8, qword [rbx + 8]
0x00005743      ba05000000     mov edx, 5
0x00005748      31ff           xor edi, edi
0x0000574a      4c8b6b30       mov r13, qword [rbx + 0x30]
0x0000574e      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005752      4c894c2410     mov qword [rsp + 0x10], r9
0x00005757      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000575b      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000575f      48890424       mov qword [rsp], rax
0x00005763      4c89442408     mov qword [rsp + 8], r8
0x00005768      488b1b         mov rbx, qword [rbx]
0x0000576b      e830beffff     call sym.imp.dcgettext
0x00005770      4883ec08       sub rsp, 8
0x00005774      4c8b4c2418     mov r9, qword [rsp + 0x18]
0x00005779      4889c2         mov rdx, rax
0x0000577c      4889d9         mov rcx, rbx
0x0000577f      be01000000     mov esi, 1
0x00005784      4889ef         mov rdi, rbp
0x00005787      31c0           xor eax, eax
0x00005789      4151           push r9
0x0000578b      4155           push r13
0x0000578d      4154           push r12
0x0000578f      4157           push r15
0x00005791      4156           push r14
0x00005793      4c8b4c2430     mov r9, qword [rsp + 0x30]
0x00005798      4c8b442438     mov r8, qword [rsp + 0x38]
0x0000579d      e83ec0ffff     call sym.imp.__fprintf_chk
0x000057a2      4883c430       add rsp, 0x30
0x000057a6      4883c428       add rsp, 0x28
0x000057aa      5b             pop rbx
0x000057ab      5d             pop rbp
0x000057ac      415c           pop r12
0x000057ae      415d           pop r13
0x000057b0      415e           pop r14
0x000057b2      415f           pop r15
0x000057b4      c3             ret
0x000057b5      0f1f00         nop dword [rax]
0x000057b8      4989c8         mov r8, rcx
0x000057bb      4889d1         mov rcx, rdx
0x000057be      488d150f1e00.  lea rdx, str.s__s                       ; 0x75d4 ; "%s %s\n"
0x000057c5      be01000000     mov esi, 1
0x000057ca      31c0           xor eax, eax
0x000057cc      e80fc0ffff     call sym.imp.__fprintf_chk
0x000057d1      e9e6feffff     jmp 0x56bc
0x000057d6      662e0f1f8400.  nop word cs:[rax + rax]
0x000057e0      4c8b5340       mov r10, qword [rbx + 0x40]
0x000057e4      4c8b4b38       mov r9, qword [rbx + 0x38]
0x000057e8      488d35192000.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s__and__s. ; 0x7808 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x000057ef      488b4310       mov rax, qword [rbx + 0x10]
0x000057f3      4c8b4308       mov r8, qword [rbx + 8]
0x000057f7      ba05000000     mov edx, 5
0x000057fc      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005800      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005804      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005808      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000580c      488b1b         mov rbx, qword [rbx]
0x0000580f      4c89542418     mov qword [rsp + 0x18], r10
0x00005814      4c894c2410     mov qword [rsp + 0x10], r9
0x00005819      48890424       mov qword [rsp], rax
0x0000581d      4c89442408     mov qword [rsp + 8], r8
0x00005822      31ff           xor edi, edi
0x00005824      e877bdffff     call sym.imp.dcgettext
0x00005829      4c8b542418     mov r10, qword [rsp + 0x18]
0x0000582e      4152           push r10
0x00005830      e93fffffff     jmp 0x5774
0x00005835      0f1f00         nop dword [rax]
0x00005838      488b1b         mov rbx, qword [rbx]
0x0000583b      488d359d1d00.  lea rsi, str.Written_by__s.             ; 0x75df ; "Written by %s.\n"
0x00005842      ba05000000     mov edx, 5
0x00005847      31ff           xor edi, edi
0x00005849      e852bdffff     call sym.imp.dcgettext
0x0000584e      4883c428       add rsp, 0x28
0x00005852      4889d9         mov rcx, rbx
0x00005855      4889ef         mov rdi, rbp
0x00005858      5b             pop rbx
0x00005859      5d             pop rbp
0x0000585a      415c           pop r12
0x0000585c      415d           pop r13
0x0000585e      415e           pop r14
0x00005860      415f           pop r15
0x00005862      4889c2         mov rdx, rax
0x00005865      be01000000     mov esi, 1
0x0000586a      31c0           xor eax, eax
0x0000586c      e96fbfffff     jmp sym.imp.__fprintf_chk
0x00005871      0f1f80000000.  nop dword [rax]
0x00005878      4c8b6308       mov r12, qword [rbx + 8]
0x0000587c      488d356c1d00.  lea rsi, str.Written_by__s_and__s.      ; 0x75ef ; "Written by %s and %s.\n"
0x00005883      488b1b         mov rbx, qword [rbx]
0x00005886      ba05000000     mov edx, 5
0x0000588b      31ff           xor edi, edi
0x0000588d      e80ebdffff     call sym.imp.dcgettext
0x00005892      4883c428       add rsp, 0x28
0x00005896      4d89e0         mov r8, r12
0x00005899      4889d9         mov rcx, rbx
0x0000589c      4889ef         mov rdi, rbp
0x0000589f      4889c2         mov rdx, rax
0x000058a2      be01000000     mov esi, 1
0x000058a7      5b             pop rbx
0x000058a8      5d             pop rbp
0x000058a9      415c           pop r12
0x000058ab      415d           pop r13
0x000058ad      415e           pop r14
0x000058af      415f           pop r15
0x000058b1      31c0           xor eax, eax
0x000058b3      e928bfffff     jmp sym.imp.__fprintf_chk
0x000058b8      0f1f84000000.  nop dword [rax + rax]
0x000058c0      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000058c4      4c8b6308       mov r12, qword [rbx + 8]
0x000058c8      488d35371d00.  lea rsi, str.Written_by__s___s__and__s. ; 0x7606 ; "Written by %s, %s, and %s.\n"
0x000058cf      488b1b         mov rbx, qword [rbx]
0x000058d2      ba05000000     mov edx, 5
0x000058d7      31ff           xor edi, edi
0x000058d9      e8c2bcffff     call sym.imp.dcgettext
0x000058de      4883c428       add rsp, 0x28
0x000058e2      4d89e9         mov r9, r13
0x000058e5      4d89e0         mov r8, r12
0x000058e8      4889d9         mov rcx, rbx
0x000058eb      4889ef         mov rdi, rbp
0x000058ee      4889c2         mov rdx, rax
0x000058f1      5b             pop rbx
0x000058f2      5d             pop rbp
0x000058f3      415c           pop r12
0x000058f5      415d           pop r13
0x000058f7      415e           pop r14
0x000058f9      415f           pop r15
0x000058fb      be01000000     mov esi, 1
0x00005900      31c0           xor eax, eax
0x00005902      e9d9beffff     jmp sym.imp.__fprintf_chk
0x00005907      660f1f840000.  nop word [rax + rax]
0x00005910      488d35211e00.  lea rsi, str.Written_by__s___s___s___and__s. ; 0x7738 ; "Written by %s, %s, %s,\nand %s.\n"
0x00005917      ba05000000     mov edx, 5
0x0000591c      31ff           xor edi, edi
0x0000591e      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005922      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005926      4c8b6308       mov r12, qword [rbx + 8]
0x0000592a      488b1b         mov rbx, qword [rbx]
0x0000592d      e86ebcffff     call sym.imp.dcgettext
0x00005932      4883ec08       sub rsp, 8
0x00005936      4156           push r14
0x00005938      4889c2         mov rdx, rax
0x0000593b      4d89e9         mov r9, r13
0x0000593e      4d89e0         mov r8, r12
0x00005941      4889d9         mov rcx, rbx
0x00005944      4889ef         mov rdi, rbp
0x00005947      be01000000     mov esi, 1
0x0000594c      31c0           xor eax, eax
0x0000594e      e88dbeffff     call sym.imp.__fprintf_chk
0x00005953      58             pop rax
0x00005954      5a             pop rdx
0x00005955      4883c428       add rsp, 0x28
0x00005959      5b             pop rbx
0x0000595a      5d             pop rbp
0x0000595b      415c           pop r12
0x0000595d      415d           pop r13
0x0000595f      415e           pop r14
0x00005961      415f           pop r15
0x00005963      c3             ret
0x00005964      0f1f4000       nop dword [rax]
0x00005968      4c8b7b20       mov r15, qword [rbx + 0x20]
0x0000596c      488d35e51d00.  lea rsi, str.Written_by__s___s___s____s__and__s. ; 0x7758 ; "Written by %s, %s, %s,\n%s, and %s.\n"
0x00005973      ba05000000     mov edx, 5
0x00005978      31ff           xor edi, edi
0x0000597a      4c8b7318       mov r14, qword [rbx + 0x18]
0x0000597e      4c8b6b10       mov r13, qword [rbx + 0x10]
0x00005982      4c8b6308       mov r12, qword [rbx + 8]
0x00005986      488b1b         mov rbx, qword [rbx]
0x00005989      e812bcffff     call sym.imp.dcgettext
0x0000598e      4157           push r15
0x00005990      eba4           jmp 0x5936
0x00005992      660f1f440000   nop word [rax + rax]
0x00005998      4c8b4308       mov r8, qword [rbx + 8]
0x0000599c      4c8b6328       mov r12, qword [rbx + 0x28]
0x000059a0      488d35d91d00.  lea rsi, str.Written_by__s___s___s____s___s__and__s. ; 0x7780 ; "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x000059a7      4c8b7b20       mov r15, qword [rbx + 0x20]
0x000059ab      4c8b7318       mov r14, qword [rbx + 0x18]
0x000059af      ba05000000     mov edx, 5
0x000059b4      4c8b6b10       mov r13, qword [rbx + 0x10]
0x000059b8      31ff           xor edi, edi
0x000059ba      488b1b         mov rbx, qword [rbx]
0x000059bd      4c890424       mov qword [rsp], r8
0x000059c1      e8dabbffff     call sym.imp.dcgettext
0x000059c6      4883ec08       sub rsp, 8
0x000059ca      4d89e9         mov r9, r13
0x000059cd      4154           push r12
0x000059cf      4157           push r15
0x000059d1      4156           push r14
0x000059d3      4c8b442420     mov r8, qword [rsp + 0x20]
0x000059d8      4889d9         mov rcx, rbx
0x000059db      4889c2         mov rdx, rax
0x000059de      4889ef         mov rdi, rbp
0x000059e1      be01000000     mov esi, 1
0x000059e6      31c0           xor eax, eax
0x000059e8      e8f3bdffff     call sym.imp.__fprintf_chk
0x000059ed      4883c420       add rsp, 0x20
0x000059f1      4883c428       add rsp, 0x28
0x000059f5      5b             pop rbx
0x000059f6      5d             pop rbp
0x000059f7      415c           pop r12
0x000059f9      415d           pop r13
0x000059fb      415e           pop r14
0x000059fd      415f           pop r15
0x000059ff      c3             ret
0x00005a00      4c8b4b10       mov r9, qword [rbx + 0x10]
0x00005a04      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005a08      488d35991d00.  lea rsi, str.Written_by__s___s___s____s___s___s__and__s. ; 0x77a8 ; "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x00005a0f      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005a13      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a17      ba05000000     mov edx, 5
0x00005a1c      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a20      4c8b4308       mov r8, qword [rbx + 8]
0x00005a24      31ff           xor edi, edi
0x00005a26      4c894c2408     mov qword [rsp + 8], r9
0x00005a2b      488b1b         mov rbx, qword [rbx]
0x00005a2e      4c890424       mov qword [rsp], r8
0x00005a32      e869bbffff     call sym.imp.dcgettext
0x00005a37      4155           push r13
0x00005a39      4154           push r12
0x00005a3b      4157           push r15
0x00005a3d      4156           push r14
0x00005a3f      4c8b4c2428     mov r9, qword [rsp + 0x28]
0x00005a44      eb8d           jmp 0x59d3
0x00005a46      662e0f1f8400.  nop word cs:[rax + rax]
0x00005a50      4c8b5340       mov r10, qword [rbx + 0x40]
0x00005a54      4c8b4b38       mov r9, qword [rbx + 0x38]
0x00005a58      ba05000000     mov edx, 5
0x00005a5d      488b4310       mov rax, qword [rbx + 0x10]
0x00005a61      4c8b4308       mov r8, qword [rbx + 8]
0x00005a65      488d35d41d00.  lea rsi, str.Written_by__s___s___s____s___s___s___s____s___s__and_others. ; 0x7840 ; "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x00005a6c      4c8b6b30       mov r13, qword [rbx + 0x30]
0x00005a70      4c8b6328       mov r12, qword [rbx + 0x28]
0x00005a74      4c8b7b20       mov r15, qword [rbx + 0x20]
0x00005a78      4c8b7318       mov r14, qword [rbx + 0x18]
0x00005a7c      4c89542418     mov qword [rsp + 0x18], r10
0x00005a81      4c894c2410     mov qword [rsp + 0x10], r9
0x00005a86      48890424       mov qword [rsp], rax
0x00005a8a      4c89442408     mov qword [rsp + 8], r8
0x00005a8f      488b1b         mov rbx, qword [rbx]
0x00005a92      e98bfdffff     jmp 0x5822
0x00005a97      660f1f840000.  nop word [rax + rax]
;-- version_etc_ar:
0x00005aa0      4531c9         xor r9d, r9d
0x00005aa3      49833800       cmp qword [r8], 0
0x00005aa7      7412           je 0x5abb
0x00005aa9      0f1f80000000.  nop dword [rax]
0x00005ab0      4983c101       add r9, 1
0x00005ab4      4b833cc800     cmp qword [r8 + r9*8], 0
0x00005ab9      75f5           jne 0x5ab0
0x00005abb      e9c0fbffff     jmp sym.version_etc_arn
;-- version_etc_va:
0x00005ac0      4883ec68       sub rsp, 0x68
0x00005ac4      4d89c2         mov r10, r8
0x00005ac7      4531c9         xor r9d, r9d
0x00005aca      64488b042528.  mov rax, qword fs:[0x28]
0x00005ad3      4889442458     mov qword [rsp + 0x58], rax
0x00005ad8      31c0           xor eax, eax
0x00005ada      4989e0         mov r8, rsp
0x00005add      0f1f00         nop dword [rax]
0x00005ae0      418b02         mov eax, dword [r10]
0x00005ae3      83f82f         cmp eax, 0x2f
0x00005ae6      7742           ja 0x5b2a
0x00005ae8      4189c3         mov r11d, eax
0x00005aeb      4d035a10       add r11, qword [r10 + 0x10]
0x00005aef      83c008         add eax, 8
0x00005af2      418902         mov dword [r10], eax
0x00005af5      498b03         mov rax, qword [r11]
0x00005af8      4885c0         test rax, rax
0x00005afb      4b8904c8       mov qword [r8 + r9*8], rax
0x00005aff      740a           je 0x5b0b
0x00005b01      4983c101       add r9, 1
0x00005b05      4983f90a       cmp r9, 0xa
0x00005b09      75d5           jne 0x5ae0
0x00005b0b      e870fbffff     call sym.version_etc_arn
0x00005b10      488b442458     mov rax, qword [rsp + 0x58]
0x00005b15      644833042528.  xor rax, qword fs:[0x28]
0x00005b1e      7505           jne 0x5b25
0x00005b20      4883c468       add rsp, 0x68
0x00005b24      c3             ret
0x00005b25      e8a6baffff     call sym.imp.__stack_chk_fail
0x00005b2a      4d8b5a08       mov r11, qword [r10 + 8]
0x00005b2e      498d4308       lea rax, [r11 + 8]
0x00005b32      49894208       mov qword [r10 + 8], rax
0x00005b36      ebbd           jmp 0x5af5
0x00005b38      0f1f84000000.  nop dword [rax + rax]
;-- version_etc:
0x00005b40      55             push rbp
0x00005b41      53             push rbx
0x00005b42      41ba20000000   mov r10d, 0x20                          ; "@"
0x00005b48      4531db         xor r11d, r11d
0x00005b4b      4881ecb80000.  sub rsp, 0xb8
0x00005b52      64488b042528.  mov rax, qword fs:[0x28]
0x00005b5b      4889442478     mov qword [rsp + 0x78], rax
0x00005b60      31c0           xor eax, eax
0x00005b62      488d8424d000.  lea rax, [rsp + 0xd0]
0x00005b6a      4c898424a000.  mov qword [rsp + 0xa0], r8
0x00005b72      488d9c24d000.  lea rbx, [rsp + 0xd0]
0x00005b7a      4c8d442420     lea r8, [rsp + 0x20]
0x00005b7f      4c898c24a800.  mov qword [rsp + 0xa8], r9
0x00005b87      c74424082000.  mov dword [rsp + 8], 0x20               ; [0x20:4]=64 ; "@"
0x00005b8f      4889442410     mov qword [rsp + 0x10], rax
0x00005b94      488d84248000.  lea rax, [rsp + 0x80]
0x00005b9c      4531c9         xor r9d, r9d
0x00005b9f      4889442418     mov qword [rsp + 0x18], rax
0x00005ba4      4889c5         mov rbp, rax
0x00005ba7      660f1f840000.  nop word [rax + rax]
0x00005bb0      4183fa2f       cmp r10d, 0x2f
0x00005bb4      7756           ja 0x5c0c
0x00005bb6      4489d0         mov eax, r10d
0x00005bb9      41bb01000000   mov r11d, 1
0x00005bbf      4183c208       add r10d, 8
0x00005bc3      4801e8         add rax, rbp
0x00005bc6      488b00         mov rax, qword [rax]
0x00005bc9      4885c0         test rax, rax
0x00005bcc      4b8904c8       mov qword [r8 + r9*8], rax
0x00005bd0      740a           je 0x5bdc
0x00005bd2      4983c101       add r9, 1
0x00005bd6      4983f90a       cmp r9, 0xa
0x00005bda      75d4           jne 0x5bb0
0x00005bdc      4584db         test r11b, r11b
0x00005bdf      7524           jne 0x5c05
0x00005be1      e89afaffff     call sym.version_etc_arn
0x00005be6      488b442478     mov rax, qword [rsp + 0x78]
0x00005beb      644833042528.  xor rax, qword fs:[0x28]
0x00005bf4      750a           jne 0x5c00
0x00005bf6      4881c4b80000.  add rsp, 0xb8
0x00005bfd      5b             pop rbx
0x00005bfe      5d             pop rbp
0x00005bff      c3             ret
0x00005c00      e8cbb9ffff     call sym.imp.__stack_chk_fail
0x00005c05      4489542408     mov dword [rsp + 8], r10d
0x00005c0a      ebd5           jmp 0x5be1
0x00005c0c      4889d8         mov rax, rbx
0x00005c0f      4883c308       add rbx, 8
0x00005c13      ebb1           jmp 0x5bc6
0x00005c15      90             nop
0x00005c16      662e0f1f8400.  nop word cs:[rax + rax]
;-- emit_bug_reporting_address:
0x00005c20      53             push rbx
0x00005c21      488d35fa1900.  lea rsi, str.Report_bugs_to:__s         ; 0x7622 ; "\nReport bugs to: %s\n"
0x00005c28      ba05000000     mov edx, 5
0x00005c2d      31ff           xor edi, edi
0x00005c2f      e86cb9ffff     call sym.imp.dcgettext
0x00005c34      488d15fc1900.  lea rdx, str.bug_coreutils_gnu.org      ; 0x7637 ; "bug-coreutils@gnu.org"
0x00005c3b      4889c6         mov rsi, rax
0x00005c3e      bf01000000     mov edi, 1
0x00005c43      31c0           xor eax, eax
0x00005c45      e816bbffff     call sym.imp.__printf_chk
0x00005c4a      488d35fc1900.  lea rsi, str.s_home_page:___s           ; 0x764d ; "%s home page: <%s>\n"
0x00005c51      ba05000000     mov edx, 5
0x00005c56      31ff           xor edi, edi
0x00005c58      e843b9ffff     call sym.imp.dcgettext
0x00005c5d      488d0d241300.  lea rcx, str.https:__www.gnu.org_software_coreutils ; 0x6f88 ; "https://www.gnu.org/software/coreutils/"
0x00005c64      488d15bd0c00.  lea rdx, str.GNU_coreutils              ; 0x6928 ; "GNU coreutils"
0x00005c6b      4889c6         mov rsi, rax
0x00005c6e      bf01000000     mov edi, 1
0x00005c73      31c0           xor eax, eax
0x00005c75      e8e6baffff     call sym.imp.__printf_chk
0x00005c7a      488b1d274420.  mov rbx, qword [obj.stdout]             ; obj.stdout__GLIBC_2.2.5
                                                                       ; [0x20a0a8:8]=0
0x00005c81      488d35f81b00.  lea rsi, str.General_help_using_GNU_software:__https:__www.gnu.org_gethelp ; 0x7880 ; "General help using GNU software: <https://www.gnu.org/gethelp/>\n"
0x00005c88      31ff           xor edi, edi
0x00005c8a      ba05000000     mov edx, 5
0x00005c8f      e80cb9ffff     call sym.imp.dcgettext
0x00005c94      4889de         mov rsi, rbx
0x00005c97      4889c7         mov rdi, rax
0x00005c9a      5b             pop rbx
0x00005c9b      e900baffff     jmp sym.imp.fputs_unlocked
;-- xmalloc:
0x00005ca0      53             push rbx                                ; ../coreutils-8.31/lib/xmalloc.c:40
0x00005ca1      4889fb         mov rbx, rdi
0x00005ca4      e837baffff     call sym.imp.malloc                     ; ../coreutils-8.31/lib/xmalloc.c:41
0x00005ca9      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xmalloc.c:42
0x00005cac      7505           jne 0x5cb3
0x00005cae      4885db         test rbx, rbx
0x00005cb1      7502           jne 0x5cb5
0x00005cb3      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:45
0x00005cb4      c3             ret
0x00005cb5      e836020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xmalloc.c:43
0x00005cba      660f1f440000   nop word [rax + rax]
;-- xnmalloc:
0x00005cc0      4889f8         mov rax, rdi                            ; ../coreutils-8.31/lib/xalloc.h:100
0x00005cc3      48f7e6         mul rsi
0x00005cc6      4889c7         mov rdi, rax
0x00005cc9      0f90c0         seto al
0x00005ccc      4885ff         test rdi, rdi
0x00005ccf      780a           js 0x5cdb
0x00005cd1      0fb6c0         movzx eax, al
0x00005cd4      4885c0         test rax, rax
0x00005cd7      7502           jne 0x5cdb
0x00005cd9      ebc5           jmp sym.xmalloc                         ; ../coreutils-8.31/lib/xalloc.h:103
0x00005cdb      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/xalloc.h:100
0x00005cdf      e80c020000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:102
0x00005ce4      6690           nop
0x00005ce6      662e0f1f8400.  nop word cs:[rax + rax]
;-- xcharalloc:
0x00005cf0      ebae           jmp sym.xmalloc
0x00005cf2      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xmalloc.c:-76
0x00005cf6      662e0f1f8400.  nop word cs:[rax + rax]                 ; ../coreutils-8.31/lib/xmalloc.c:-75
;-- xrealloc:
0x00005d00      4885f6         test rsi, rsi
0x00005d03      53             push rbx
0x00005d04      4889f3         mov rbx, rsi
0x00005d07      7505           jne 0x5d0e
0x00005d09      4885ff         test rdi, rdi
0x00005d0c      751a           jne 0x5d28
0x00005d0e      4889de         mov rsi, rbx
0x00005d11      e82abaffff     call sym.imp.realloc
0x00005d16      4885c0         test rax, rax
0x00005d19      7505           jne 0x5d20
0x00005d1b      4885db         test rbx, rbx
0x00005d1e      7511           jne 0x5d31                              ; ../coreutils-8.31/lib/xmalloc.c:-63
0x00005d20      5b             pop rbx                                 ; ../coreutils-8.31/lib/xmalloc.c:-65
0x00005d21      c3             ret
0x00005d22      660f1f440000   nop word [rax + rax]
0x00005d28      e8d3b7ffff     call sym.imp.free
0x00005d2d      31c0           xor eax, eax
0x00005d2f      5b             pop rbx                                 ; ../coreutils-8.31/lib/xalloc.h:-15
0x00005d30      c3             ret
0x00005d31      e8ba010000     call sym.xalloc_die
0x00005d36      662e0f1f8400.  nop word cs:[rax + rax]
;-- xnrealloc:
0x00005d40      4889f0         mov rax, rsi
0x00005d43      48f7e2         mul rdx
0x00005d46      4889c6         mov rsi, rax
0x00005d49      0f90c0         seto al
0x00005d4c      4885f6         test rsi, rsi
0x00005d4f      780a           js 0x5d5b
0x00005d51      0fb6c0         movzx eax, al
0x00005d54      4885c0         test rax, rax
0x00005d57      7502           jne 0x5d5b
0x00005d59      eba5           jmp sym.xrealloc
0x00005d5b      4883ec08       sub rsp, 8
0x00005d5f      e88c010000     call sym.xalloc_die                     ; ../coreutils-8.31/lib/xalloc.h:47
0x00005d64      6690           nop
0x00005d66      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2nrealloc:
0x00005d70      4885ff         test rdi, rdi
0x00005d73      4989d1         mov r9, rdx
0x00005d76      488b0e         mov rcx, qword [rsi]
0x00005d79      7435           je 0x5db0
0x00005d7b      31d2           xor edx, edx
0x00005d7d      48b854555555.  movabs rax, 0x5555555555555554          ; 'TUUUUUUU'
0x00005d87      49f7f1         div r9
0x00005d8a      4839c8         cmp rax, rcx
0x00005d8d      763c           jbe 0x5dcb
0x00005d8f      4889c8         mov rax, rcx
0x00005d92      48d1e8         shr rax, 1
0x00005d95      488d4c0801     lea rcx, [rax + rcx + 1]
0x00005d9a      48890e         mov qword [rsi], rcx
0x00005d9d      490fafc9       imul rcx, r9
0x00005da1      4889ce         mov rsi, rcx
0x00005da4      e957ffffff     jmp sym.xrealloc                        ; ../coreutils-8.31/lib/xalloc.h:63
0x00005da9      0f1f80000000.  nop dword [rax]
0x00005db0      4885c9         test rcx, rcx
0x00005db3      7423           je 0x5dd8
0x00005db5      4889c8         mov rax, rcx
0x00005db8      49f7e1         mul r9
0x00005dbb      0f90c2         seto dl
0x00005dbe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/xalloc.h:64
0x00005dc1      0fb6d2         movzx edx, dl
0x00005dc4      7805           js 0x5dcb
0x00005dc6      4885d2         test rdx, rdx
0x00005dc9      74cf           je 0x5d9a
0x00005dcb      4883ec08       sub rsp, 8
0x00005dcf      e81c010000     call sym.xalloc_die
0x00005dd4      0f1f4000       nop dword [rax]                         ; ../coreutils-8.31/lib/xalloc.h:61
0x00005dd8      31d2           xor edx, edx
0x00005dda      b880000000     mov eax, 0x80
0x00005ddf      4531c0         xor r8d, r8d
0x00005de2      49f7f1         div r9
0x00005de5      4885c0         test rax, rax
0x00005de8      410f94c0       sete r8b
0x00005dec      498d0c00       lea rcx, [r8 + rax]
0x00005df0      ebc3           jmp 0x5db5
0x00005df2      0f1f4000       nop dword [rax]
0x00005df6      662e0f1f8400.  nop word cs:[rax + rax]
;-- x2realloc:
0x00005e00      4885ff         test rdi, rdi
0x00005e03      488b06         mov rax, qword [rsi]
0x00005e06      7428           je 0x5e30
0x00005e08      48ba53555555.  movabs rdx, 0x5555555555555553          ; 'SUUUUUUU'
0x00005e12      4839d0         cmp rax, rdx
0x00005e15      772a           ja 0x5e41
0x00005e17      4889c2         mov rdx, rax
0x00005e1a      48d1ea         shr rdx, 1
0x00005e1d      488d440201     lea rax, [rdx + rax + 1]
0x00005e22      488906         mov qword [rsi], rax
0x00005e25      4889c6         mov rsi, rax
0x00005e28      e9d3feffff     jmp sym.xrealloc
0x00005e2d      0f1f00         nop dword [rax]
0x00005e30      4885c0         test rax, rax
0x00005e33      ba80000000     mov edx, 0x80
0x00005e38      480f44c2       cmove rax, rdx
0x00005e3c      4885c0         test rax, rax
0x00005e3f      79e1           jns 0x5e22
0x00005e41      4883ec08       sub rsp, 8
0x00005e45      e8a6000000     call sym.xalloc_die
0x00005e4a      660f1f440000   nop word [rax + rax]
;-- xzalloc:
0x00005e50      53             push rbx
0x00005e51      4889fb         mov rbx, rdi
0x00005e54      e847feffff     call sym.xmalloc
0x00005e59      4889da         mov rdx, rbx
0x00005e5c      31f6           xor esi, esi
0x00005e5e      4889c7         mov rdi, rax
0x00005e61      5b             pop rbx
0x00005e62      e9e9b7ffff     jmp sym.imp.memset
0x00005e67      660f1f840000.  nop word [rax + rax]
;-- xcalloc:
0x00005e70      4889f8         mov rax, rdi
0x00005e73      4883ec08       sub rsp, 8
0x00005e77      48f7e6         mul rsi
0x00005e7a      0f90c2         seto dl
0x00005e7d      4885c0         test rax, rax
0x00005e80      7817           js 0x5e99
0x00005e82      0fb6d2         movzx edx, dl
0x00005e85      4885d2         test rdx, rdx
0x00005e88      750f           jne 0x5e99
0x00005e8a      e821b8ffff     call sym.imp.calloc
0x00005e8f      4885c0         test rax, rax
0x00005e92      7405           je 0x5e99
0x00005e94      4883c408       add rsp, 8
0x00005e98      c3             ret
0x00005e99      e852000000     call sym.xalloc_die
0x00005e9e      6690           nop
;-- xmemdup:
0x00005ea0      55             push rbp
0x00005ea1      53             push rbx
0x00005ea2      4889fd         mov rbp, rdi
0x00005ea5      4889f7         mov rdi, rsi
0x00005ea8      4889f3         mov rbx, rsi
0x00005eab      4883ec08       sub rsp, 8
0x00005eaf      e8ecfdffff     call sym.xmalloc
0x00005eb4      4883c408       add rsp, 8
0x00005eb8      4889da         mov rdx, rbx
0x00005ebb      4889ee         mov rsi, rbp
0x00005ebe      5b             pop rbx
0x00005ebf      5d             pop rbp
0x00005ec0      4889c7         mov rdi, rax
0x00005ec3      e9f8b7ffff     jmp sym.imp.memcpy
0x00005ec8      0f1f84000000.  nop dword [rax + rax]
;-- xstrdup:
0x00005ed0      53             push rbx
0x00005ed1      4889fb         mov rbx, rdi
0x00005ed4      e8e7b6ffff     call sym.imp.strlen
0x00005ed9      4889df         mov rdi, rbx
0x00005edc      488d7001       lea rsi, [rax + 1]
0x00005ee0      5b             pop rbx
0x00005ee1      ebbd           jmp sym.xmemdup
0x00005ee3      662e0f1f8400.  nop word cs:[rax + rax]
0x00005eed      0f1f00         nop dword [rax]
;-- xalloc_die:
0x00005ef0      488d35381a00.  lea rsi, str.memory_exhausted           ; ../coreutils-8.31/lib/xalloc-die.c:33 ; 0x792f ; "memory exhausted"
0x00005ef7      4883ec08       sub rsp, 8
0x00005efb      ba05000000     mov edx, 5                              ; ../coreutils-8.31/lib/xalloc-die.c:34
0x00005f00      31ff           xor edi, edi
0x00005f02      e899b6ffff     call sym.imp.dcgettext
0x00005f07      8b3d13412000   mov edi, dword [obj.exit_failure]       ; [0x20a020:4]=1
0x00005f0d      488d15aa0a00.  lea rdx, [0x000069be]                   ; "%s"
0x00005f14      4889c1         mov rcx, rax
0x00005f17      31f6           xor esi, esi
0x00005f19      31c0           xor eax, eax
0x00005f1b      e850b8ffff     call sym.imp.error
0x00005f20      e8ebb5ffff     call sym.imp.abort                      ; ../coreutils-8.31/lib/xalloc-die.c:40
0x00005f25      662e0f1f8400.  nop word cs:[rax + rax]
0x00005f2f      90             nop
;-- xnumtoumax:
0x00005f30      4157           push r15                                ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005f32      4156           push r14
0x00005f34      4989cf         mov r15, rcx
0x00005f37      4155           push r13
0x00005f39      4154           push r12
0x00005f3b      4989d6         mov r14, rdx
0x00005f3e      55             push rbp
0x00005f3f      53             push rbx
0x00005f40      89f2           mov edx, esi                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005f42      31f6           xor esi, esi
0x00005f44      4989fc         mov r12, rdi                            ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005f47      4d89cd         mov r13, r9
0x00005f4a      4883ec18       sub rsp, 0x18
0x00005f4e      4889e1         mov rcx, rsp                            ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005f51      8b5c2450       mov ebx, dword [rsp + 0x50]             ; ../coreutils-8.31/lib/xdectoint.c:38
0x00005f55      64488b042528.  mov rax, qword fs:[0x28]
0x00005f5e      4889442408     mov qword [rsp + 8], rax
0x00005f63      31c0           xor eax, eax
0x00005f65      e8f6000000     call sym.xstrtoumax                     ; ../coreutils-8.31/lib/xdectoint.c:42
0x00005f6a      85c0           test eax, eax                           ; ../coreutils-8.31/lib/xdectoint.c:44
0x00005f6c      0f858e000000   jne 0x6000
0x00005f72      488b2c24       mov rbp, qword [rsp]                    ; ../coreutils-8.31/lib/xdectoint.c:46
0x00005f76      4c39f5         cmp rbp, r14
0x00005f79      7205           jb 0x5f80
0x00005f7b      4c39fd         cmp rbp, r15
0x00005f7e      7654           jbe 0x5fd4
0x00005f80      e89bb5ffff     call sym.imp.__errno_location
0x00005f85      4881fd000000.  cmp rbp, 0x40000000                     ; ../coreutils-8.31/lib/xdectoint.c:52
0x00005f8c      4989c6         mov r14, rax
0x00005f8f      19c0           sbb eax, eax
0x00005f91      83e0d7         and eax, 0xffffffd7                     ; 4294967255
0x00005f94      83c04b         add eax, 0x4b
0x00005f97      418906         mov dword [r14], eax
0x00005f9a      4c89e7         mov rdi, r12                            ; ../coreutils-8.31/lib/xdectoint.c:69
0x00005f9d      e85ef6ffff     call sym.quote
0x00005fa2      418b36         mov esi, dword [r14]
0x00005fa5      4989c0         mov r8, rax
0x00005fa8      b800000000     mov eax, 0
0x00005fad      488d15060a00.  lea rdx, str.s:__s                      ; 0x69ba ; "%s: %s"
0x00005fb4      4c89e9         mov rcx, r13
0x00005fb7      83fe16         cmp esi, 0x16
0x00005fba      0f44f0         cmove esi, eax
0x00005fbd      85db           test ebx, ebx
0x00005fbf      b801000000     mov eax, 1
0x00005fc4      0f44d8         cmove ebx, eax
0x00005fc7      31c0           xor eax, eax
0x00005fc9      89df           mov edi, ebx
0x00005fcb      e8a0b7ffff     call sym.imp.error
0x00005fd0      488b2c24       mov rbp, qword [rsp]
0x00005fd4      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/xdectoint.c:74
0x00005fd9      644833142528.  xor rdx, qword fs:[0x28]
0x00005fe2      4889e8         mov rax, rbp
0x00005fe5      7544           jne 0x602b
0x00005fe7      4883c418       add rsp, 0x18
0x00005feb      5b             pop rbx
0x00005fec      5d             pop rbp
0x00005fed      415c           pop r12
0x00005fef      415d           pop r13
0x00005ff1      415e           pop r14
0x00005ff3      415f           pop r15
0x00005ff5      c3             ret
0x00005ff6      662e0f1f8400.  nop word cs:[rax + rax]
0x00006000      89c5           mov ebp, eax
0x00006002      e819b5ffff     call sym.imp.__errno_location
0x00006007      83fd01         cmp ebp, 1                              ; ../coreutils-8.31/lib/xdectoint.c:61
0x0000600a      4989c6         mov r14, rax
0x0000600d      7411           je 0x6020
0x0000600f      83fd03         cmp ebp, 3                              ; ../coreutils-8.31/lib/xdectoint.c:63
0x00006012      7586           jne 0x5f9a
0x00006014      c70000000000   mov dword [rax], 0                      ; ../coreutils-8.31/lib/xdectoint.c:64
0x0000601a      e97bffffff     jmp 0x5f9a
0x0000601f      90             nop
0x00006020      c7004b000000   mov dword [rax], 0x4b                   ; ../coreutils-8.31/lib/xdectoint.c:62 ; 'K'
                                                                       ; [0x4b:4]=0
0x00006026      e96fffffff     jmp 0x5f9a
0x0000602b      e8a0b5ffff     call sym.imp.__stack_chk_fail           ; ../coreutils-8.31/lib/xdectoint.c:74
;-- xdectoumax:
0x00006030      4883ec10       sub rsp, 0x10                           ; ../coreutils-8.31/lib/xdectoint.c:84
0x00006034      4151           push r9                                 ; ../coreutils-8.31/lib/xdectoint.c:85
0x00006036      4d89c1         mov r9, r8
0x00006039      4989c8         mov r8, rcx
0x0000603c      4889d1         mov rcx, rdx
0x0000603f      4889f2         mov rdx, rsi
0x00006042      be0a000000     mov esi, 0xa
0x00006047      e8e4feffff     call sym.xnumtoumax
0x0000604c      4883c418       add rsp, 0x18                           ; ../coreutils-8.31/lib/xdectoint.c:86
0x00006050      c3             ret
0x00006051      662e0f1f8400.  nop word cs:[rax + rax]
0x0000605b      0f1f440000     nop dword [rax + rax]
;-- xstrtoumax:
0x00006060      4157           push r15
0x00006062      4156           push r14
0x00006064      4155           push r13
0x00006066      4154           push r12
0x00006068      55             push rbp
0x00006069      53             push rbx
0x0000606a      4883ec28       sub rsp, 0x28
0x0000606e      64488b042528.  mov rax, qword fs:[0x28]
0x00006077      4889442418     mov qword [rsp + 0x18], rax
0x0000607c      31c0           xor eax, eax
0x0000607e      83fa24         cmp edx, 0x24
0x00006081      0f875e030000   ja 0x63e5
0x00006087      488d442410     lea rax, [rsp + 0x10]
0x0000608c      4989f7         mov r15, rsi
0x0000608f      4885f6         test rsi, rsi
0x00006092      4889fd         mov rbp, rdi
0x00006095      89542408       mov dword [rsp + 8], edx
0x00006099      4989ce         mov r14, rcx
0x0000609c      4d89c5         mov r13, r8
0x0000609f      4c0f44f8       cmove r15, rax
0x000060a3      e878b4ffff     call sym.imp.__errno_location
0x000060a8      c70000000000   mov dword [rax], 0
0x000060ae      4989c4         mov r12, rax
0x000060b1      0fb65d00       movzx ebx, byte [rbp]
0x000060b5      e856b7ffff     call sym.imp.__ctype_b_loc
0x000060ba      8b542408       mov edx, dword [rsp + 8]
0x000060be      488b30         mov rsi, qword [rax]
0x000060c1      4889e8         mov rax, rbp
0x000060c4      eb11           jmp 0x60d7
0x000060c6      662e0f1f8400.  nop word cs:[rax + rax]
0x000060d0      4883c001       add rax, 1
0x000060d4      0fb618         movzx ebx, byte [rax]
0x000060d7      0fb6cb         movzx ecx, bl
0x000060da      f6444e0120     test byte [rsi + rcx*2 + 1], 0x20
0x000060df      75ef           jne 0x60d0
0x000060e1      80fb2d         cmp bl, 0x2d
0x000060e4      7452           je 0x6138
0x000060e6      31c9           xor ecx, ecx
0x000060e8      4c89fe         mov rsi, r15
0x000060eb      4889ef         mov rdi, rbp
0x000060ee      e84db5ffff     call sym.imp.__strtoul_internal
0x000060f3      498b0f         mov rcx, qword [r15]
0x000060f6      4889c3         mov rbx, rax
0x000060f9      4839e9         cmp rcx, rbp
0x000060fc      742a           je 0x6128
0x000060fe      418b0424       mov eax, dword [r12]
0x00006102      85c0           test eax, eax
0x00006104      7462           je 0x6168
0x00006106      83f822         cmp eax, 0x22
0x00006109      bd01000000     mov ebp, 1
0x0000610e      7528           jne 0x6138
0x00006110      4d85ed         test r13, r13
0x00006113      7409           je 0x611e
0x00006115      440fb621       movzx r12d, byte [rcx]
0x00006119      4584e4         test r12b, r12b
0x0000611c      7579           jne 0x6197
0x0000611e      49891e         mov qword [r14], rbx
0x00006121      eb1a           jmp 0x613d
0x00006123      0f1f440000     nop dword [rax + rax]
0x00006128      4d85ed         test r13, r13
0x0000612b      48894c2408     mov qword [rsp + 8], rcx
0x00006130      753e           jne 0x6170
0x00006132      660f1f440000   nop word [rax + rax]
0x00006138      bd04000000     mov ebp, 4
0x0000613d      488b7c2418     mov rdi, qword [rsp + 0x18]
0x00006142      6448333c2528.  xor rdi, qword fs:[0x28]
0x0000614b      89e8           mov eax, ebp
0x0000614d      0f858d020000   jne 0x63e0
0x00006153      4883c428       add rsp, 0x28
0x00006157      5b             pop rbx
0x00006158      5d             pop rbp
0x00006159      415c           pop r12
0x0000615b      415d           pop r13
0x0000615d      415e           pop r14
0x0000615f      415f           pop r15
0x00006161      c3             ret
0x00006162      660f1f440000   nop word [rax + rax]
0x00006168      31ed           xor ebp, ebp
0x0000616a      eba4           jmp 0x6110
0x0000616c      0f1f4000       nop dword [rax]
0x00006170      440fb66500     movzx r12d, byte [rbp]
0x00006175      4584e4         test r12b, r12b
0x00006178      74be           je 0x6138
0x0000617a      410fbef4       movsx esi, r12b
0x0000617e      4c89ef         mov rdi, r13
0x00006181      31ed           xor ebp, ebp
0x00006183      e878b4ffff     call sym.imp.strchr
0x00006188      4885c0         test rax, rax
0x0000618b      bb01000000     mov ebx, 1
0x00006190      488b4c2408     mov rcx, qword [rsp + 8]
0x00006195      74a1           je 0x6138
0x00006197      410fbef4       movsx esi, r12b
0x0000619b      4c89ef         mov rdi, r13
0x0000619e      48894c2408     mov qword [rsp + 8], rcx
0x000061a3      e858b4ffff     call sym.imp.strchr
0x000061a8      4885c0         test rax, rax
0x000061ab      488b4c2408     mov rcx, qword [rsp + 8]
0x000061b0      0f84c6000000   je 0x627c
0x000061b6      418d4424bb     lea eax, [r12 - 0x45]
0x000061bb      3c2f           cmp al, 0x2f
0x000061bd      7751           ja 0x6210
0x000061bf      48ba45893000.  movabs rdx, 0x814400308945
0x000061c9      480fa3c2       bt rdx, rax
0x000061cd      7341           jae 0x6210
0x000061cf      be30000000     mov esi, 0x30                           ; '0'
0x000061d4      4c89ef         mov rdi, r13
0x000061d7      48894c2408     mov qword [rsp + 8], rcx
0x000061dc      e81fb4ffff     call sym.imp.strchr
0x000061e1      4885c0         test rax, rax
0x000061e4      488b4c2408     mov rcx, qword [rsp + 8]
0x000061e9      7425           je 0x6210
0x000061eb      0fb64101       movzx eax, byte [rcx + 1]
0x000061ef      3c44           cmp al, 0x44
0x000061f1      740c           je 0x61ff
0x000061f3      3c69           cmp al, 0x69
0x000061f5      0f84cd010000   je 0x63c8
0x000061fb      3c42           cmp al, 0x42
0x000061fd      7511           jne 0x6210
0x000061ff      bf02000000     mov edi, 2
0x00006204      bee8030000     mov esi, 0x3e8
0x00006209      eb0f           jmp 0x621a
0x0000620b      0f1f440000     nop dword [rax + rax]
0x00006210      bf01000000     mov edi, 1
0x00006215      be00040000     mov esi, 0x400
0x0000621a      4183ec42       sub r12d, 0x42
0x0000621e      4180fc35       cmp r12b, 0x35
0x00006222      7758           ja 0x627c
0x00006224      488d155d1700.  lea rdx, [0x00007988]
0x0000622b      450fb6e4       movzx r12d, r12b
0x0000622f      4a6304a2       movsxd rax, dword [rdx + r12*4]
0x00006233      4801d0         add rax, rdx
0x00006236      ffe0           jmp rax
0x00006238      4889d8         mov rax, rbx
0x0000623b      48f7e6         mul rsi
0x0000623e      0f80ed010000   jo 0x6431
0x00006244      4531c0         xor r8d, r8d
0x00006247      48f7e6         mul rsi
0x0000624a      0f80d2010000   jo 0x6422
0x00006250      4889c3         mov rbx, rax
0x00006253      4409c5         or ebp, r8d
0x00006256      662e0f1f8400.  nop word cs:[rax + rax]
0x00006260      4863ff         movsxd rdi, edi
0x00006263      89e8           mov eax, ebp
0x00006265      4801f9         add rcx, rdi
0x00006268      83c802         or eax, 2
0x0000626b      49890f         mov qword [r15], rcx
0x0000626e      803900         cmp byte [rcx], 0
0x00006271      49891e         mov qword [r14], rbx
0x00006274      0f45e8         cmovne ebp, eax
0x00006277      e9c1feffff     jmp 0x613d
0x0000627c      49891e         mov qword [r14], rbx
0x0000627f      83cd02         or ebp, 2
0x00006282      e9b6feffff     jmp 0x613d
0x00006287      ba02000000     mov edx, 2
0x0000628c      4889d0         mov rax, rdx
0x0000628f      48f7e3         mul rbx
0x00006292      0f8096000000   jo 0x632e
0x00006298      4801db         add rbx, rbx
0x0000629b      ebc3           jmp 0x6260
0x0000629d      ba00020000     mov edx, 0x200
0x000062a2      4889d0         mov rax, rdx
0x000062a5      48f7e3         mul rbx
0x000062a8      0f8080000000   jo 0x632e
0x000062ae      48c1e309       shl rbx, 9
0x000062b2      ebac           jmp 0x6260
0x000062b4      41b807000000   mov r8d, 7
0x000062ba      4531c9         xor r9d, r9d
0x000062bd      0f1f00         nop dword [rax]
0x000062c0      4889d8         mov rax, rbx
0x000062c3      48f7e6         mul rsi
0x000062c6      4889c3         mov rbx, rax
0x000062c9      0f808f010000   jo 0x645e
0x000062cf      4183e801       sub r8d, 1
0x000062d3      75eb           jne 0x62c0
0x000062d5      4409cd         or ebp, r9d
0x000062d8      eb86           jmp 0x6260
0x000062da      41b808000000   mov r8d, 8
0x000062e0      4531c9         xor r9d, r9d
0x000062e3      0f1f440000     nop dword [rax + rax]
0x000062e8      4889d8         mov rax, rbx
0x000062eb      48f7e6         mul rsi
0x000062ee      4889c3         mov rbx, rax
0x000062f1      0f8049010000   jo 0x6440
0x000062f7      4183e801       sub r8d, 1
0x000062fb      75eb           jne 0x62e8
0x000062fd      ebd6           jmp 0x62d5
0x000062ff      41b804000000   mov r8d, 4
0x00006305      4531c9         xor r9d, r9d
0x00006308      4889d8         mov rax, rbx
0x0000630b      48f7e6         mul rsi
0x0000630e      4889c3         mov rbx, rax
0x00006311      0f80fc000000   jo 0x6413
0x00006317      4183e801       sub r8d, 1
0x0000631b      75eb           jne 0x6308
0x0000631d      ebb6           jmp 0x62d5
0x0000631f      4889d8         mov rax, rbx
0x00006322      48f7e6         mul rsi
0x00006325      4889c3         mov rbx, rax
0x00006328      0f8132ffffff   jno 0x6260
0x0000632e      bd01000000     mov ebp, 1
0x00006333      4883cbff       or rbx, 0xffffffffffffffff
0x00006337      e924ffffff     jmp 0x6260
0x0000633c      0f1f4000       nop dword [rax]
0x00006340      41b805000000   mov r8d, 5
0x00006346      4531c9         xor r9d, r9d
0x00006349      4889d8         mov rax, rbx
0x0000634c      48f7e6         mul rsi
0x0000634f      4889c3         mov rbx, rax
0x00006352      0f80f7000000   jo 0x644f
0x00006358      4183e801       sub r8d, 1
0x0000635c      75eb           jne 0x6349
0x0000635e      e972ffffff     jmp 0x62d5
0x00006363      41b806000000   mov r8d, 6
0x00006369      4531c9         xor r9d, r9d
0x0000636c      4889d8         mov rax, rbx
0x0000636f      48f7e6         mul rsi
0x00006372      4889c3         mov rbx, rax
0x00006375      0f8089000000   jo 0x6404
0x0000637b      4183e801       sub r8d, 1
0x0000637f      75eb           jne 0x636c
0x00006381      e94fffffff     jmp 0x62d5
0x00006386      ba00040000     mov edx, 0x400
0x0000638b      4889d0         mov rax, rdx
0x0000638e      48f7e3         mul rbx
0x00006391      709b           jo 0x632e
0x00006393      48c1e30a       shl rbx, 0xa
0x00006397      e9c4feffff     jmp 0x6260
0x0000639c      4889d8         mov rax, rbx
0x0000639f      48f7e6         mul rsi
0x000063a2      0f80c5000000   jo 0x646d
0x000063a8      4531c0         xor r8d, r8d
0x000063ab      48f7e6         mul rsi
0x000063ae      0f8193feffff   jno 0x6247
0x000063b4      41b801000000   mov r8d, 1
0x000063ba      4883c8ff       or rax, 0xffffffffffffffff
0x000063be      e984feffff     jmp 0x6247
0x000063c3      0f1f440000     nop dword [rax + rax]
0x000063c8      31ff           xor edi, edi
0x000063ca      80790242       cmp byte [rcx + 2], 0x42
0x000063ce      be00040000     mov esi, 0x400
0x000063d3      400f94c7       sete dil
0x000063d7      8d7c3f01       lea edi, [rdi + rdi + 1]
0x000063db      e93afeffff     jmp 0x621a
0x000063e0      e8ebb1ffff     call sym.imp.__stack_chk_fail
0x000063e5      488d0d741600.  lea rcx, obj.__PRETTY_FUNCTION__.4162   ; 0x7a60 ; "xstrtoumax"
0x000063ec      488d354d1500.  lea rsi, str..._coreutils_8.31_lib_xstrtol.c ; 0x7940 ; "../coreutils-8.31/lib/xstrtol.c"
0x000063f3      488d3d661500.  lea rdi, str.0____strtol_base____strtol_base____36 ; 0x7960 ; "0 <= strtol_base && strtol_base <= 36"
0x000063fa      ba54000000     mov edx, 0x54                           ; 'T'
0x000063ff      e82cb2ffff     call sym.imp.__assert_fail
0x00006404      41b901000000   mov r9d, 1
0x0000640a      4883cbff       or rbx, 0xffffffffffffffff
0x0000640e      e968ffffff     jmp 0x637b
0x00006413      41b901000000   mov r9d, 1
0x00006419      4883cbff       or rbx, 0xffffffffffffffff
0x0000641d      e9f5feffff     jmp 0x6317
0x00006422      41b801000000   mov r8d, 1
0x00006428      4883cbff       or rbx, 0xffffffffffffffff
0x0000642c      e922feffff     jmp 0x6253
0x00006431      4883c8ff       or rax, 0xffffffffffffffff
0x00006435      41b801000000   mov r8d, 1
0x0000643b      e907feffff     jmp 0x6247
0x00006440      41b901000000   mov r9d, 1
0x00006446      4883cbff       or rbx, 0xffffffffffffffff
0x0000644a      e9a8feffff     jmp 0x62f7
0x0000644f      41b901000000   mov r9d, 1
0x00006455      4883cbff       or rbx, 0xffffffffffffffff
0x00006459      e9fafeffff     jmp 0x6358
0x0000645e      41b901000000   mov r9d, 1
0x00006464      4883cbff       or rbx, 0xffffffffffffffff
0x00006468      e962feffff     jmp 0x62cf
0x0000646d      41b801000000   mov r8d, 1
0x00006473      4883c8ff       or rax, 0xffffffffffffffff
0x00006477      e92fffffff     jmp 0x63ab
0x0000647c      0f1f4000       nop dword [rax]
;-- rpl_mbrtowc:
0x00006480      4155           push r13                                ; ../coreutils-8.31/lib/mbrtowc.c:386
0x00006482      4154           push r12
0x00006484      4989f5         mov r13, rsi
0x00006487      55             push rbp
0x00006488      53             push rbx
0x00006489      4889fb         mov rbx, rdi
0x0000648c      4989d4         mov r12, rdx
0x0000648f      4883ec18       sub rsp, 0x18
0x00006493      64488b042528.  mov rax, qword fs:[0x28]
0x0000649c      4889442408     mov qword [rsp + 8], rax
0x000064a1      31c0           xor eax, eax
0x000064a3      488d442404     lea rax, [rsp + 4]                      ; ../coreutils-8.31/lib/mbrtowc.c:405
0x000064a8      4885ff         test rdi, rdi
0x000064ab      480f44d8       cmove rbx, rax
0x000064af      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000064b2      e839b1ffff     call sym.imp.mbrtowc
0x000064b7      4883f8fd       cmp rax, 0xfffffffffffffffd             ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000064bb      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/mbrtowc.c:439
0x000064be      7620           jbe 0x64e0                              ; ../coreutils-8.31/lib/mbrtowc.c:447
0x000064c0      4d85e4         test r12, r12
0x000064c3      741b           je 0x64e0
0x000064c5      31ff           xor edi, edi
0x000064c7      e8c4000000     call sym.hard_locale
0x000064cc      84c0           test al, al
0x000064ce      7510           jne 0x64e0
0x000064d0      410fb64500     movzx eax, byte [r13]                   ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000064d5      bd01000000     mov ebp, 1                              ; ../coreutils-8.31/lib/mbrtowc.c:451
0x000064da      8903           mov dword [rbx], eax                    ; ../coreutils-8.31/lib/mbrtowc.c:450
0x000064dc      0f1f4000       nop dword [rax]
0x000064e0      488b542408     mov rdx, qword [rsp + 8]                ; ../coreutils-8.31/lib/mbrtowc.c:456
0x000064e5      644833142528.  xor rdx, qword fs:[0x28]
0x000064ee      4889e8         mov rax, rbp
0x000064f1      750b           jne 0x64fe
0x000064f3      4883c418       add rsp, 0x18
0x000064f7      5b             pop rbx
0x000064f8      5d             pop rbp
0x000064f9      415c           pop r12
0x000064fb      415d           pop r13
0x000064fd      c3             ret
0x000064fe      e8cdb0ffff     call sym.imp.__stack_chk_fail
0x00006503      662e0f1f8400.  nop word cs:[rax + rax]
0x0000650d      0f1f00         nop dword [rax]
;-- close_stream:
0x00006510      4154           push r12                                ; ../coreutils-8.31/lib/close-stream.c:57
0x00006512      55             push rbp
0x00006513      4889fd         mov rbp, rdi
0x00006516      53             push rbx
0x00006517      e834b0ffff     call sym.imp.__fpending                 ; ../coreutils-8.31/lib/close-stream.c:58
0x0000651c      8b5d00         mov ebx, dword [rbp]
0x0000651f      4889ef         mov rdi, rbp
0x00006522      4989c4         mov r12, rax
0x00006525      e806010000     call sym.rpl_fclose
0x0000652a      83e320         and ebx, 0x20                           ; "@"
0x0000652d      85db           test ebx, ebx
0x0000652f      7517           jne 0x6548
0x00006531      85c0           test eax, eax
0x00006533      740a           je 0x653f                               ; stdio.h:-186
0x00006535      4d85e4         test r12, r12                           ; stdio.h:-178
0x00006538      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000653d      7439           je 0x6578
0x0000653f      5b             pop rbx
0x00006540      5d             pop rbp
0x00006541      415c           pop r12
0x00006543      c3             ret
0x00006544      0f1f4000       nop dword [rax]
0x00006548      85c0           test eax, eax
0x0000654a      751c           jne 0x6568
0x0000654c      e8cfafffff     call sym.imp.__errno_location
0x00006551      c70000000000   mov dword [rax], 0
0x00006557      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000655c      5b             pop rbx
0x0000655d      5d             pop rbp
0x0000655e      415c           pop r12
0x00006560      c3             ret
0x00006561      0f1f80000000.  nop dword [rax]
0x00006568      5b             pop rbx
0x00006569      b8ffffffff     mov eax, 0xffffffff                     ; -1
0x0000656e      5d             pop rbp                                 ; stdio.h:-186
0x0000656f      415c           pop r12
0x00006571      c3             ret
0x00006572      660f1f440000   nop word [rax + rax]
0x00006578      e8a3afffff     call sym.imp.__errno_location
0x0000657d      833809         cmp dword [rax], 9
0x00006580      5b             pop rbx
0x00006581      5d             pop rbp
0x00006582      415c           pop r12                                 ; stdio.h:-178
0x00006584      0f95c0         setne al
0x00006587      0fb6c0         movzx eax, al
0x0000658a      f7d8           neg eax
0x0000658c      c3             ret
0x0000658d      0f1f00         nop dword [rax]
;-- hard_locale:
0x00006590      4883ec08       sub rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:39
0x00006594      31f6           xor esi, esi                            ; ../coreutils-8.31/lib/hard-locale.c:41
0x00006596      e8b5b1ffff     call sym.imp.setlocale
0x0000659b      4889c2         mov rdx, rax
0x0000659e      b801000000     mov eax, 1                              ; ../coreutils-8.31/lib/hard-locale.c:40
0x000065a3      4885d2         test rdx, rdx                           ; ../coreutils-8.31/lib/hard-locale.c:43
0x000065a6      741d           je 0x65c5
0x000065a8      488d3dbc1400.  lea rdi, [0x00007a6b]                   ; ../coreutils-8.31/lib/hard-locale.c:47 ; "C"
0x000065af      b902000000     mov ecx, 2
0x000065b4      4889d6         mov rsi, rdx
0x000065b7      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000065b9      0f97c1         seta cl
0x000065bc      80d900         sbb cl, 0
0x000065bf      31c0           xor eax, eax                            ; ../coreutils-8.31/lib/hard-locale.c:48
0x000065c1      84c9           test cl, cl                             ; ../coreutils-8.31/lib/hard-locale.c:47
0x000065c3      750b           jne 0x65d0
0x000065c5      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000065c9      c3             ret
0x000065ca      660f1f440000   nop word [rax + rax]
0x000065d0      488d3d961400.  lea rdi, str.POSIX                      ; ../coreutils-8.31/lib/hard-locale.c:47 ; 0x7a6d ; "POSIX"
0x000065d7      b906000000     mov ecx, 6
0x000065dc      4889d6         mov rsi, rdx
0x000065df      f3a6           repe cmpsb byte [rsi], byte ptr [rdi]
0x000065e1      0f97c0         seta al
0x000065e4      1c00           sbb al, 0
0x000065e6      84c0           test al, al
0x000065e8      0f95c0         setne al
0x000065eb      4883c408       add rsp, 8                              ; ../coreutils-8.31/lib/hard-locale.c:72
0x000065ef      c3             ret
;-- locale_charset:
0x000065f0      4883ec08       sub rsp, 8
0x000065f4      bf0e000000     mov edi, 0xe                            ; ../coreutils-8.31/lib/localcharset.c:696
0x000065f9      e802b1ffff     call sym.imp.nl_langinfo
0x000065fe      4885c0         test rax, rax                           ; ../coreutils-8.31/lib/localcharset.c:754
0x00006601      741d           je 0x6620
0x00006603      803800         cmp byte [rax], 0                       ; ../coreutils-8.31/lib/localcharset.c:908
0x00006606      488d15661400.  lea rdx, str.ASCII                      ; 0x7a73 ; "ASCII"
0x0000660d      480f44c2       cmove rax, rdx
0x00006611      4883c408       add rsp, 8
0x00006615      c3             ret
0x00006616      662e0f1f8400.  nop word cs:[rax + rax]
0x00006620      488d054c1400.  lea rax, str.ASCII                      ; 0x7a73 ; "ASCII"
0x00006627      4883c408       add rsp, 8
0x0000662b      c3             ret
0x0000662c      0f1f4000       nop dword [rax]
;-- rpl_fclose:
0x00006630      4154           push r12                                ; ../coreutils-8.31/lib/fclose.c:59
0x00006632      55             push rbp
0x00006633      53             push rbx
0x00006634      4889fb         mov rbx, rdi
0x00006637      e894b0ffff     call sym.imp.fileno                     ; ../coreutils-8.31/lib/fclose.c:65
0x0000663c      85c0           test eax, eax                           ; ../coreutils-8.31/lib/fclose.c:66
0x0000663e      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:67
0x00006641      7854           js 0x6697                               ; ../coreutils-8.31/lib/fclose.c:66
0x00006643      e8d8b0ffff     call sym.imp.__freading                 ; ../coreutils-8.31/lib/fclose.c:72
0x00006648      85c0           test eax, eax
0x0000664a      752c           jne 0x6678
0x0000664c      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:73
0x0000664f      e85c000000     call sym.rpl_fflush
0x00006654      85c0           test eax, eax
0x00006656      743c           je 0x6694
0x00006658      e8c3aeffff     call sym.imp.__errno_location           ; ../coreutils-8.31/lib/fclose.c:74
0x0000665d      448b20         mov r12d, dword [rax]
0x00006660      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006663      4889c5         mov rbp, rax                            ; ../coreutils-8.31/lib/fclose.c:74
0x00006666      e815afffff     call sym.imp.fclose                     ; ../coreutils-8.31/lib/fclose.c:100
0x0000666b      4585e4         test r12d, r12d                         ; ../coreutils-8.31/lib/fclose.c:105
0x0000666e      7530           jne 0x66a0
0x00006670      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006671      5d             pop rbp
0x00006672      415c           pop r12
0x00006674      c3             ret
0x00006675      0f1f00         nop dword [rax]
0x00006678      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:72
0x0000667b      e850b0ffff     call sym.imp.fileno
0x00006680      31f6           xor esi, esi
0x00006682      ba01000000     mov edx, 1
0x00006687      89c7           mov edi, eax
0x00006689      e892afffff     call sym.imp.lseek
0x0000668e      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006692      75b8           jne 0x664c
0x00006694      4889df         mov rdi, rbx                            ; ../coreutils-8.31/lib/fclose.c:100
0x00006697      5b             pop rbx                                 ; ../coreutils-8.31/lib/fclose.c:112
0x00006698      5d             pop rbp
0x00006699      415c           pop r12
0x0000669b      e9e0aeffff     jmp sym.imp.fclose                      ; ../coreutils-8.31/lib/fclose.c:100
0x000066a0      44896500       mov dword [rbp], r12d                   ; ../coreutils-8.31/lib/fclose.c:107
0x000066a4      b8ffffffff     mov eax, 0xffffffff                     ; ../coreutils-8.31/lib/fclose.c:108 ; -1
0x000066a9      ebc5           jmp 0x6670
0x000066ab      0f1f440000     nop dword [rax + rax]
;-- rpl_fflush:
0x000066b0      4885ff         test rdi, rdi                           ; ../coreutils-8.31/lib/fflush.c:130
0x000066b3      53             push rbx
0x000066b4      4889fb         mov rbx, rdi
0x000066b7      7411           je 0x66ca                               ; ../coreutils-8.31/lib/fflush.c:150
0x000066b9      e862b0ffff     call sym.imp.__freading
0x000066be      85c0           test eax, eax
0x000066c0      7408           je 0x66ca
0x000066c2      f70300010000   test dword [rbx], 0x100                 ; ../coreutils-8.31/lib/fflush.c:43
0x000066c8      750e           jne 0x66d8
0x000066ca      4889df         mov rdi, rbx
0x000066cd      5b             pop rbx
0x000066ce      e91db0ffff     jmp sym.imp.fflush
0x000066d3      0f1f440000     nop dword [rax + rax]
0x000066d8      4889df         mov rdi, rbx
0x000066db      ba01000000     mov edx, 1
0x000066e0      31f6           xor esi, esi
0x000066e2      e809000000     call sym.rpl_fseeko
0x000066e7      4889df         mov rdi, rbx
0x000066ea      5b             pop rbx                                 ; ../coreutils-8.31/lib/fflush.c:25
0x000066eb      e900b0ffff     jmp sym.imp.fflush
;-- rpl_fseeko:
0x000066f0      488b4708       mov rax, qword [rdi + 8]                ; ../coreutils-8.31/lib/fseeko.c:42
0x000066f4      48394710       cmp qword [rdi + 0x10], rax
0x000066f8      7406           je 0x6700                               ; ../coreutils-8.31/lib/fseeko.c:32
0x000066fa      e9a1b0ffff     jmp sym.imp.fseeko                      ; /sys_errlist.h:9
0x000066ff      90             nop
0x00006700      488b4720       mov rax, qword [rdi + 0x20]
0x00006704      48394728       cmp qword [rdi + 0x28], rax
0x00006708      75f0           jne 0x66fa                              ; ../coreutils-8.31/lib/fseeko.c:33
0x0000670a      48837f4800     cmp qword [rdi + 0x48], 0
0x0000670f      75e9           jne 0x66fa                              ; ../coreutils-8.31/lib/fseeko.c:21
0x00006711      4154           push r12
0x00006713      55             push rbp
0x00006714      4189d4         mov r12d, edx
0x00006717      53             push rbx
0x00006718      4889f5         mov rbp, rsi                            ; ../coreutils-8.31/lib/fseeko.c:-20
0x0000671b      4889fb         mov rbx, rdi
0x0000671e      e8adafffff     call sym.imp.fileno
0x00006723      4489e2         mov edx, r12d
0x00006726      4889ee         mov rsi, rbp                            ; ../coreutils-8.31/lib/fseeko.c:14
0x00006729      89c7           mov edi, eax                            ; /sys_errlist.h:17
0x0000672b      e8f0aeffff     call sym.imp.lseek
0x00006730      4883f8ff       cmp rax, 0xffffffffffffffff
0x00006734      740c           je 0x6742
0x00006736      8323ef         and dword [rbx], 0xffffffef             ; [0xffffffef:4]=-1 ; 4294967279
0x00006739      488983900000.  mov qword [rbx + 0x90], rax
0x00006740      31c0           xor eax, eax
0x00006742      5b             pop rbx                                 ; /sys_errlist.h:19
0x00006743      5d             pop rbp
0x00006744      415c           pop r12
0x00006746      c3             ret
0x00006747      660f1f840000.  nop word [rax + rax]
;-- __libc_csu_init:
0x00006750      4157           push r15
0x00006752      4156           push r14
0x00006754      4989d7         mov r15, rdx
0x00006757      4155           push r13
0x00006759      4154           push r12
0x0000675b      4c8d250e3320.  lea r12, obj.__frame_dummy_init_array_entry ; loc.__init_array_start
                                                                       ; 0x209a70 ; "`*"
0x00006762      55             push rbp
0x00006763      488d2d0e3320.  lea rbp, obj.__do_global_dtors_aux_fini_array_entry ; loc.__init_array_end
                                                                       ; 0x209a78 ; " *"
0x0000676a      53             push rbx
0x0000676b      4189fd         mov r13d, edi
0x0000676e      4989f6         mov r14, rsi
0x00006771      4c29e5         sub rbp, r12
0x00006774      4883ec08       sub rsp, 8
0x00006778      48c1fd03       sar rbp, 3
0x0000677c      e857adffff     call sym._init
0x00006781      4885ed         test rbp, rbp
0x00006784      7420           je 0x67a6
0x00006786      31db           xor ebx, ebx
0x00006788      0f1f84000000.  nop dword [rax + rax]
0x00006790      4c89fa         mov rdx, r15
0x00006793      4c89f6         mov rsi, r14
0x00006796      4489ef         mov edi, r13d
0x00006799      41ff14dc       call qword [r12 + rbx*8]
0x0000679d      4883c301       add rbx, 1
0x000067a1      4839dd         cmp rbp, rbx
0x000067a4      75ea           jne 0x6790
0x000067a6      4883c408       add rsp, 8
0x000067aa      5b             pop rbx
0x000067ab      5d             pop rbp
0x000067ac      415c           pop r12
0x000067ae      415d           pop r13
0x000067b0      415e           pop r14
0x000067b2      415f           pop r15
0x000067b4      c3             ret
0x000067b5      90             nop
0x000067b6      662e0f1f8400.  nop word cs:[rax + rax]
;-- __libc_csu_fini:
0x000067c0      f3c3           ret
0x000067c2      662e0f1f8400.  nop word cs:[rax + rax]
0x000067cc      0f1f4000       nop dword [rax]
;-- atexit:
0x000067d0      488b15313820.  mov rdx, qword [obj.__dso_handle]       ; [0x20a008:8]=0x20a008 obj.__dso_handle
0x000067d7      31f6           xor esi, esi
0x000067d9      e9d2afffff     jmp sym.imp.__cxa_atexit
0x000067de      0000           add byte [rax], al
